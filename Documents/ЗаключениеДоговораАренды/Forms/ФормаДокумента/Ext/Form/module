
// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

Перем ОперацияАпдекс; //+++АК sils 07.06.2018 ИП-00018876

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, ПолучитьСтруктуруПечатныхФорм(), Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов.Строки.Количество() > 0);
	
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя, Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если Не мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати, Истина, Истина);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры

Процедура ДействияФормыДействие6(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ЭтотОбъект.Ссылка);
	
КонецПроцедуры

Процедура УстановитьВидимость()
	
	//Видимость элементов формы на закладке "Залог"
	ЭлементыФормы.НадписьСпособРасчетаЗалога.Видимость 			= ЭтотОбъект.УчитыватьЗалог;
	ЭлементыФормы.СпособРасчетаЗалога.Видимость 				= ЭтотОбъект.УчитыватьЗалог;
	ЭлементыФормы.НадписьУсловиеИспользованияДепозита.Видимость = ЭтотОбъект.УчитыватьЗалог;
	ЭлементыФормы.УсловиеИспользованияДепозита.Видимость 		= ЭтотОбъект.УчитыватьЗалог;
	ЭлементыФормы.НадписьСуммаЗалогаБезналичные.Видимость 		= ЭтотОбъект.УчитыватьЗалог;
	ЭлементыФормы.СуммаЗалогаБезналичные.Видимость 				= ЭтотОбъект.УчитыватьЗалог;
	ЭлементыФормы.НадписьСуммаЗалогаНаличные.Видимость 			= ЭтотОбъект.УчитыватьЗалог;
	ЭлементыФормы.СуммаЗалогаНаличные.Видимость 				= ЭтотОбъект.УчитыватьЗалог;
	ЭлементыФормы.ВалютаДепозита.Видимость 						= ЭтотОбъект.УчитыватьЗалог;
	ЭлементыФормы.НадписьВалютаДепозита.Видимость 				= ЭтотОбъект.УчитыватьЗалог;
	ЭлементыФормы.ВалютаДепозита2.Видимость 					= ЭтотОбъект.УчитыватьЗалог
																	И (ЭтотОбъект.СпособРасчетаЗалога = Перечисления.СпособРасчетаЗалога.СуммаДвухКурсовВалютДеленнаяПололам);
	ЭлементыФормы.НадписьВалютаДепозита2.Видимость 				= ЭтотОбъект.УчитыватьЗалог
																	И (ЭтотОбъект.СпособРасчетаЗалога = Перечисления.СпособРасчетаЗалога.СуммаДвухКурсовВалютДеленнаяПололам);
	
	ЭлементыФормы.РамкаБезналичные.Видимость 					= ЭтотОбъект.УчитыватьЗалог;
	ЭлементыФормы.РамкаНаличные.Видимость 						= ЭтотОбъект.УчитыватьЗалог;
	ЭлементыФормы.НадписьСтавкаНДСЗалогаБезналичные.Видимость 	= ЭтотОбъект.УчитыватьЗалог;
	ЭлементыФормы.СтавкаНДСЗалогаБезналичные.Видимость 			= ЭтотОбъект.УчитыватьЗалог;
	ЭлементыФормы.НадписьСтавкаНДСЗалогаНаличные.Видимость 		= ЭтотОбъект.УчитыватьЗалог;
	ЭлементыФормы.СтавкаНДСЗалогаНаличные.Видимость 			= ЭтотОбъект.УчитыватьЗалог;
	//+++АК sils 23.10.2018 ИП-00020193
	ЭлементыФормы.РамкаМСФО.Видимость 							= ЭтотОбъект.УчитыватьЗалог и (ВидОперации = Перечисления.ВидыОперацийДоговоровАренды.САрендодателем);
	ЭлементыФормы.НадписьСуммаЗалогаМСФО.Видимость 				= ЭтотОбъект.УчитыватьЗалог и (ВидОперации = Перечисления.ВидыОперацийДоговоровАренды.САрендодателем);
	ЭлементыФормы.СуммаЗалогаМСФО.Видимость 					= ЭтотОбъект.УчитыватьЗалог и (ВидОперации = Перечисления.ВидыОперацийДоговоровАренды.САрендодателем);
	//---АК
	
	// Видимость элементов на закладке "Курсы валюты"
	ВидимостьФиксированная 		= (ЭтотОбъект.СпособРасчета = Перечисления.СпособыРасчетаКурсаВалюты.Фиксированный);
	ВидимостьРасчетная 			= (ЭтотОбъект.СпособРасчета = Перечисления.СпособыРасчетаКурсаВалюты.Расчетный);
	ВидимостьСуммаДвухКурсов 	= (ЭтотОбъект.СпособРасчета = Перечисления.СпособыРасчетаКурсаВалюты.СуммаДвухКурсовВалютДеленнаяПололам);
	ЭлементыФормы.НадписьВалюта2СпособаНачисления.Видимость = ВидимостьСуммаДвухКурсов;
	ЭлементыФормы.Валюта2СпособаНачисления.Видимость 		= ВидимостьСуммаДвухКурсов;
	ЭлементыФормы.НадписьКоэффициент.Видимость 				= ВидимостьРасчетная;
	ЭлементыФормы.Коэффициент.Видимость 					= ВидимостьРасчетная;
	ЭлементыФормы.НадписьНижняяГраница.Видимость 			= ВидимостьРасчетная ИЛИ ВидимостьСуммаДвухКурсов;
	ЭлементыФормы.НижняяГраница.Видимость 					= ВидимостьРасчетная ИЛИ ВидимостьСуммаДвухКурсов;
	ЭлементыФормы.НадписьВерхняяГраница.Видимость 			= ВидимостьРасчетная ИЛИ ВидимостьСуммаДвухКурсов;
	ЭлементыФормы.ВерхняяГраница.Видимость 					= ВидимостьРасчетная ИЛИ ВидимостьСуммаДвухКурсов;
	ЭлементыФормы.НадписьКратность.Видимость 				= ВидимостьФиксированная;
	ЭлементыФормы.Кратность.Видимость 						= ВидимостьФиксированная;
	ЭлементыФормы.НадписьКурс.Видимость 					= ВидимостьФиксированная;
	ЭлементыФормы.Курс.Видимость 							= ВидимостьФиксированная;
	
	//+++AK VERN ИП-00013579 2016.09.14
	Элементыформы.Действияформы.Кнопки.ПерерасчетНДФЛ.Текст = Формат(СтавкаНДФЛ, "ЧДЦ=1; ЧВН=");
	УправлениеВидимостьюНДФЛ();
	//---AK VERN ИП-00013579 2016.09.14
		
КонецПроцедуры

//Процедура СоздатьНажатие(Элемент)
//	                                        
//	Если ЭтоНовый() Тогда             
//		Ответ = Вопрос("Перед созданием договора необходимо записать документ. Записать?", РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Да, "Подтверждение записи документа");
//		Если Ответ = КодВозвратаДиалога.Да Тогда
//			ЭтотОбъект.Записать();
//			РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);
//		Иначе
//			Возврат;
//		КонецЕсли;	
//	КонецЕсли;
//	
//	Ответ = Вопрос("Создать договор аренды?",РежимДиалогаВопрос.ОКОтмена,0,КодВозвратаДиалога.Отмена,"Подтверждение создания договора");
//	Если Ответ = КодВозвратаДиалога.ОК Тогда
//		СоздатьНовыйДоговор();
//	КонецЕсли;
//	
//КонецПроцедуры

//Процедура создает новый договор для заданной в шапке документа организации и арендатора
Процедура СоздатьНовыйДоговор(Отказ = Неопределено)
	
	Отказ = Ложь;
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.Контрагент) Тогда
		Сообщить("Не указан контрагент", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.Организация) Тогда
		Сообщить("Не указана организация", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		НовоеНаименование = "№ " + ОбщегоНазначения.ПолучитьНомерНаПечать(ЭтотОбъект) + " от " + Формат(ЭтотОбъект.Дата, "ДФ=""дд ММММ гггг""");
									
		Если ЗначениеЗаполнено(Справочники.ДоговорыКонтрагентов.НайтиПоНаименованию(НовоеНаименование, Истина,, ЭтотОбъект.Контрагент)) Тогда
			Сообщить("Договор для этого документа уже существует!");
		Иначе	
			НовыйДоговор = Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
			НовыйДоговор.Владелец 		= ЭтотОбъект.Контрагент;
			НовыйДоговор.Наименование 	= НовоеНаименование;
										
			НовыйДоговор.Организация 	= ЭтотОбъект.Организация;
			НовыйДоговор.ВидДоговора 	= ?(ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийДоговоровАренды.САрендатором,
											Перечисления.ВидыДоговоровКонтрагентов.СПокупателем,
											Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
			//+++AK VERN ИП-00013579 2016.09.14
			//НовыйДоговор.ВалютаВзаиморасчетов = Константы.ВалютаРегламентированногоУчета.Получить();
			НовыйДоговор.ВалютаВзаиморасчетов = мВалютаРегламентированногоУчета;
			//---AK VERN ИП-00013579 2016.09.14
			НовыйДоговор.ТипДоговора 	= Перечисления.ТипыДоговоровСПоставщиком.Аренда;
			
		    Попытка
				НовыйДоговор.Записать();
				ЭтотОбъект.ДоговорКонтрагента = НовыйДоговор.Ссылка;
			Исключение
				Сообщить("Не удалось записать договор контрагента", СтатусСообщения.Важное);
			КонецПопытки;
			
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьДоступностьСтимулы()
	
	ЭлементыФормы.ТипСтимулаАренды.Доступность 						= ЭтаФорма.ЕстьСтимулыАренды;
	ЭлементыФормы.НадписьКоличествоДнейСтимулаАренды.Доступность 	= ЭтаФорма.ЕстьСтимулыАренды;
	ЭлементыФормы.КоличествоДнейСтимулаАренды.Доступность 			= ЭтаФорма.ЕстьСтимулыАренды;
	
КонецПроцедуры

Процедура УстановитьДоступностьПоДопПравам()
	
	ПолныеПраваНаДокументыАренды = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.ДоступКДокументамАренды, Ложь);
	
	Если ПолныеПраваНаДокументыАренды = Ложь
			И НЕ РольДоступна("ПолныеПрава") Тогда
		//СтруктураЭлементовФормы = Новый Структура("Номер, Дата, Организация, Арендатор, ОбъектАренды, ДатаЗаключенияДоговора, ДатаОкончанияДоговора, ВывозТБО, НомерАкта"
		//	+ ", ДатаАкта, Страхование, СрокУведомленияОПерезаключении, СрокУведомленияОДосрочномРасторжении, ПериодичностьПредоставленияОтчетаОВыручке, СогласиеНаСубаренду"
		//	+ ", КомментарийКСогласиюНаСубаренду, ТипСтимулаАренды, КоличествоДнейСтимулаАренды, Ответственный, Комментарий"
		//	+ "");
		//Для Каждого ЭлементСтруктуры Из СтруктураЭлементовФормы Цикл
		//	ЭлементыФормы[ЭлементСтруктуры.Ключ].ТолькоПросмотр = Истина;
		//КонецЦикла;	
		//ЭлементыФормы.ДокументПодписан.Доступность 								= Ложь;
		//ЭлементыФормы.ВыборПериода.Доступность 									= Ложь;
		//ЭлементыФормы.РасчитыватьНДФЛПоКаждомуНачислениюОтдельно.Доступность 	= Ложь;
		//ЭлементыФормы.ЕстьСтимулыАренды.Доступность 							= Ложь;
		Для Каждого ТекЭлемент Из ЭлементыФормы Цикл
			Попытка
				ТекЭлемент.ТолькоПросмотр 	= Истина;
			Исключение
				ТекЭлемент.Доступность 		= Ложь;				
			КонецПопытки;
		КонецЦикла;
		ЭлементыФормы.Панель.Доступность 				= Истина;
		ЭлементыФормы.ОсновныеДействияФормы.Доступность = Истина;
		ПраваНаРедактированиеДоговора = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.МожетРедактироватьДоговораВДокументахАренды, Ложь);
		ЭлементыФормы.НадписьДоговорАренды.Доступность 	= ПраваНаРедактированиеДоговора;
		ЭлементыФормы.ДоговорАренды.ТолькоПросмотр 		= НЕ ПраваНаРедактированиеДоговора;
	КонецЕсли;
	
	//+++АК sils 23.10.2018 ИП-00020193
	флДоступАрендыМСФО = РольДоступна("АК_РаботаСАрендойМСФО"); 
	ЭлементыФормы.СуммаЗалогаМСФО.Доступность 					= флДоступАрендыМСФО;
	//---АК
	
КонецПроцедуры


Процедура АрендаторПриИзменении(Элемент)
	
	УстановитьДоговор();
	
	Если ЗначениеЗаполнено(ЭтотОбъект.ДоговорКонтрагента)
			И НЕ ЭтотОбъект.ДоговорКонтрагента.ТипДоговора = Перечисления.ТипыДоговоровСПоставщиком.Аренда Тогда
		ЭтотОбъект.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура УстановитьДоговор()
	
	Если ЗначениеЗаполнено(ЭтотОбъект.ДоговорКонтрагента) Тогда
		Если ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийДоговоровАренды.САрендатором
				И ЭтотОбъект.ДоговорКонтрагента.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СПокупателем Тогда
			ЭтотОбъект.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийДоговоровАренды.САрендодателем
				И ЭтотОбъект.ДоговорКонтрагента.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком Тогда
			ЭтотОбъект.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ДоговорКонтрагента)
			И ЗначениеЗаполнено(ЭтотОбъект.Организация)
			И ЗначениеЗаполнено(ЭтотОбъект.Контрагент) Тогда
		ЭтотОбъект.ДоговорКонтрагента = ДопМодульСервер.ПолучитьОсновнойДоговорКонтрагента(ЭтотОбъект.Организация, ЭтотОбъект.Контрагент, ?(ЭтотОбъект.ЭтоНовый(), ТекущаяДата(), ЭтотОбъект.Дата));
		//Запрос = Новый Запрос;
		//Запрос.УстановитьПараметр("Организация"	, Организация);
		//Запрос.УстановитьПараметр("Контрагент"	, Контрагент);
		//Запрос.УстановитьПараметр("ВидДоговора"	, ?(ВидОперации = Перечисления.ВидыОперацийДоговоровАренды.САрендатором, Перечисления.ВидыДоговоровКонтрагентов.СПокупателем, Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком));

		//Запрос.Текст =
		//"ВЫБРАТЬ
		//|	ДоговорыКонтрагентов.Ссылка
		//|ИЗ
		//|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		//|ГДЕ
		//|	ДоговорыКонтрагентов.Организация = &Организация
		//|	И ДоговорыКонтрагентов.Владелец = &Контрагент
		//|	И ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора
		//|	И ДоговорыКонтрагентов.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСПоставщиком.Аренда)
		//|
		//|УПОРЯДОЧИТЬ ПО
		//|	ДоговорыКонтрагентов.ПометкаУдаления";
		//Выборка = Запрос.Выполнить().Выбрать();
		//Если Выборка.Следующий() Тогда
		//	ДоговорКонтрагента = Выборка.Ссылка;
		//КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДоговорАрендыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбщиеПроцедуры.ВыборАрендногоДоговораКонтрагента(ЭтотОбъект);

КонецПроцедуры

Процедура ДатаЗаключенияДоговораПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ДатаЗаключенияДоговора) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭтотОбъект.ДатаОкончанияДоговора)
			И ЭтотОбъект.ДатаОкончанияДоговора < ЭтотОбъект.ДатаЗаключенияДоговора Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Дата окончания договора не может быть меньше даты заключения договора!");
		ЭтотОбъект.ДатаЗаключенияДоговора = '00010101';
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДатаОкончанияДоговораПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ДатаОкончанияДоговора) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.ДатаОкончанияДоговора < ЭтотОбъект.ДатаЗаключенияДоговора Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Дата окончания договора не может быть меньше даты заключения договора!");
		ЭтотОбъект.ДатаЗаключенияДоговора = '00010101';
		Возврат;
	КонецЕсли;		
	
КонецПроцедуры

Функция СпроситьОбИзменении(ТекстВопроса)
	
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет, "Вопрос");
	
	Возврат (Ответ = КодВозвратаДиалога.Да);
	
КонецФункции


Процедура ПослеЗаписи()
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Строка(ВидОперации), ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
	//+++ AK suvv 03.06.2018 ИП-00018425
	ЗаполнитьВкладкуДинамикаАренды();
	//--- AK suvv	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтотОбъект.ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ
    	// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);		
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ВидОперации) Тогда
			ЭтотОбъект.ВидОперации 			= Перечисления.ВидыОперацийДоговоровАренды.САрендодателем;
		КонецЕсли;
		ЭтотОбъект.СпособРасчета 			= Перечисления.СпособыРасчетаКурсаВалюты.КурсЦБ;
		ЭтотОбъект.ВалютаСпособаНачисления 	= мВалютаРегламентированногоУчета;
	КонецЕсли;
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю1);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю1, ЭлементыФормы.Номер);
	
	// Заполняем подменю, вызываемое нажатием кнопки "Операция" командной панели 
	// формы, значениями перечисления "Вид операции" данного вида документа.
	// В качестве обработки выбора вида операции назначается процедура 
	// ДействияФормыДействиеУстановитьОперацию модуля формы.
	РаботаСДиалогами.УстановитьПодменюВыбораВидаОперации(ЭлементыФормы.ДействияФормы.Кнопки.ПодменюВидаОперации,
	                                    ВидОперации.Метаданные().ЗначенияПеречисления,
	                                    Новый Действие("ДействияФормыДействиеУстановитьОперацию"));

	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Строка(ЭтотОбъект.ВидОперации), ЭтотОбъект, ЭтаФорма);
	
	//+++AK VERN ИП-00013579 2016.09.14
	УплачиватьНДФЛЗаКонтрагента = ЭтотОбъект.ДоговорКонтрагента.УплачиватьНДФЛЗаКонтрагента;
	//---AK VERN ИП-00013579 2016.09.14
	
	УстановитьВидимость();
	
	//
	ЭтаФорма.ЕстьСтимулыАренды = НЕ ЭтотОбъект.ТипСтимулаАренды.Пустая();
	УстановитьДоступностьСтимулы();
	
	//
	УстановитьДоступностьПоДопПравам();
	
	//+++АК CISA 2018.09.26 ИП-00019931
	УстановитьВидимостьТипДоговорАренды(ЭлементыФормы.ТипДоговораАренды);
	//---АК CISA
	
	//+++АК sils 08.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(ЭтоНовый(), "Новый документ", "" + ЭтотОбъект));
	//---АК
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	//+++АК sils 08.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Заключение договора аренды");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	//+++ak ziga ИП-00015987 2017111201 
	Если не ЭтоНовый() Тогда
	Если Не ДоговорКонтрагента=Справочники.ДоговорыКонтрагентов.ПустаяСсылка() Тогда
		Аренда=?(ДоговорКонтрагента.ТипДоговора=Перечисления.ТипыДоговоровСПоставщиком.Аренда,Истина,Ложь);	
		//НаименованиеДопПрава="Доступ к документам аренды";	
		МассивПраваАренда=УправлениеДопПравамиПользователей.ПрочитатьЗначениеПраваПользователя(ПланыВидовХарактеристик.ПраваПользователей.ДоступКДокументамАренды,Ложь,ПараметрыСеанса.ТекущийПользователь);	
		ПравоАренда=МассивПраваАренда[0];
		//НаименованиеДопПрава="Может редактировать договора в документах аренды";	
		МассивПраваНаИзменениеДоговора=УправлениеДопПравамиПользователей.ПрочитатьЗначениеПраваПользователя(ПланыВидовХарактеристик.ПраваПользователей.МожетРедактироватьДоговораВДокументахАренды,Ложь,ПараметрыСеанса.ТекущийПользователь);	
		ПравоИзменениеДоговора=МассивПраваНаИзменениеДоговора[0];
		
		Если не РольДоступна("ПолныеПрава") Тогда
			Если Аренда Тогда
			//Отказ=Не ПравоАренда;
			ЭтаФорма.ТолькоПросмотр=Не ПравоАренда;
			ЭлементыФормы.ДоговорАренды.Доступность=ПравоИзменениеДоговора;
				Если Не ПравоАренда Тогда
					Сообщить("Нет доступа изменения документов аренды");
				КонецЕсли;
			КонецЕсли;		
		КонецЕсли;
	КонецЕсли;
	//+++ AK suvv 03.06.2018 ИП-00018425
	ЗаполнитьВкладкуДинамикаАренды();
	//--- AK suvv
	КонецЕсли;
	//---ak ziga ИП-00015987 2017111201
	Если ЭтотОбъект.ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ
		РаботаСДиалогами.ВыбратьВидОперации(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
КонецПроцедуры


Процедура УчитыватьЗалогПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

Функция ЗаписатьДокумент(Действие)

	Если Модифицированность
			ИЛИ ЭтотОбъект.ЭтоНовый() Тогда
		
		Если Вопрос("Автоматически " + Действие + " можно только после записи документа. Записать?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Если ЭтотОбъект.Проведен Тогда
			ЗаписатьВФорме(РежимЗаписиДокумента.ОтменаПроведения);	
		КонецЕсли;
		
		ЗаписатьВФорме(РежимЗаписиДокумента.Запись);
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ВыборПериодаНажатие(Элемент)
	
	ОбщиеПроцедуры.ВыборПериодаПоДоговору(ЭтотОбъект.ДатаЗаключенияДоговора, ЭтотОбъект.ДатаОкончанияДоговора, ЭтотОбъект.ДоговорКонтрагента);
	Если ЗначениеЗаполнено(ЭтотОбъект.ДатаОкончанияДоговора)
			И ЭтотОбъект.ДатаОкончанияДоговора < ЭтотОбъект.ДатаЗаключенияДоговора Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Дата окончания договора не может быть меньше даты заключения договора!");
		ЭтотОбъект.ДатаЗаключенияДоговора = '00010101';
		Возврат;
	КонецЕсли;		
	
КонецПроцедуры

Процедура ОтсрочкаПоОплатеПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

// Обработчик события элемента КоманднаяПанельФормы.Файлы.
//
Процедура ДействияФормыФайлы(Кнопка)

	Если НЕ РаботаСДиалогами.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;

	СтруктураДляСпискаИзображдений 			= Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, ЭтотОбъект.Ссылка, Ложь, Ложь);
	СтруктураДляСпискаДополнительныхФайлов 	= Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, ЭтотОбъект.Ссылка, Ложь, Ложь);
	ОбязательныеОтборы = Новый Структура("Объект", ЭтотОбъект.Ссылка);

	РаботаСФайлами.ОткрытьФормуСпискаФайловИИзображений(СтруктураДляСпискаИзображдений, СтруктураДляСпискаДополнительныхФайлов, ОбязательныеОтборы, ЭтаФорма, "ХранилищеДополнительнойИнформации");

КонецПроцедуры

Процедура ЗаполнитьКурсВалютыПоУмолчанию()
	
	Если ЗначениеЗаполнено(ЭтотОбъект.ВалютаСпособаНачисления) Тогда
		СтруктураКурса = МодульВалютногоУчета.ПолучитьКурсВалюты(ЭтотОбъект.ВалютаСпособаНачисления, ЭтотОбъект.Дата);
		ЭтотОбъект.СпособРасчета 	= Перечисления.СпособыРасчетаКурсаВалюты.КурсЦБ;
		ЭтотОбъект.Курс 			= СтруктураКурса.Курс;
		ЭтотОбъект.Кратность 		= СтруктураКурса.Кратность;
		ЭтотОбъект.Коэффициент 		= 1;
		ЭтотОбъект.НижняяГраница 	= 0;
		ЭтотОбъект.ВерхняяГраница 	= 0;
	КонецЕсли;
	
КонецПроцедуры

Процедура СпособРасчетаПриИзменении(Элемент)
	
	УстановитьВидимость();
	
	//+++АК sils 23.10.2018 ИП-00020193
	РассчитатьСуммуДепозитаМСФО();
	//---АК
КонецПроцедуры

Процедура ПриИзмененииУслуги(ТекущаяСтрока, ЗаполнятьЕдиницуИзмерения)
	
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Количество) Тогда
		ТекущаяСтрока.Количество = ЭтотОбъект.ОбъектАренды.ЗначениеХарактеристики;
	КонецЕсли;
	//Если ЗаполнятьЕдиницуИзмерения Тогда
	//	ТекущаяСтрока.ЕдиницаИзмерения = ТекущаяСтрока.Услуга.БазоваяЕдиницаИзмерения;
	//КонецЕсли;
	
КонецПроцедуры


//////////////////////////////////////////////////////
// Постоянная часть

Процедура ПостояннаяЧастьАренднойПлатыПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ИтогоСумма = 0;
	Для Каждого СтрокаТЧ Из ЭтотОбъект.ПостояннаяЧастьАренднойПлаты Цикл
		ИтогоСумма = ИтогоСумма + СуммаПоСтроке(СтрокаТЧ);
	КонецЦикла;
	ЭлементыФормы.ПостояннаяЧастьАренднойПлаты.Колонки.Сумма.ТекстПодвала = ОбщегоНазначения.ФорматСумм(ИтогоСумма);
	
КонецПроцедуры

Процедура ПостояннаяЧастьАренднойПлатыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ТекущаяСтрока = ЭлементыФормы.ПостояннаяЧастьАренднойПлаты.ТекущаяСтрока;
		Если НЕ Копирование Тогда
			ТекущаяСтрока.Ставка = 0;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПостояннаяЧастьАренднойПлатыСпособНачисленияПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ПостояннаяЧастьАренднойПлаты.ТекущаяСтрока;
	Если ТекущаяСтрока.НомерСтроки = 1
			И мВалютаРегламентированногоУчета <> ЭтотОбъект.ВалютаСпособаНачисления Тогда
		ЭтотОбъект.ВалютаСпособаНачисления = мВалютаРегламентированногоУчета;
		ЗаполнитьКурсВалютыПоУмолчанию();
	КонецЕсли;
	Если ТекущаяСтрока.НомерСтроки = 1
			И мВалютаРегламентированногоУчета <> ЭтотОбъект.Валюта2СпособаНачисления Тогда
		ЭтотОбъект.Валюта2СпособаНачисления = мВалютаРегламентированногоУчета;
		ЗаполнитьКурсВалютыПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПостояннаяЧастьАренднойПлатыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Услуга) Тогда
		ДанныеСтроки.Услуга 			= Константы.УслугаАренда.Получить();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДанныеСтроки.СпособНачисления) Тогда
		ДанныеСтроки.СпособНачисления 	= Константы.ОсновнойСпособНачисленияАрендойПлаты.Получить();
	КонецЕсли;
	
	ОформлениеСтроки.Ячейки.Сумма.УстановитьТекст(ОбщегоНазначения.ФорматСумм(СуммаПоСтроке(ДанныеСтроки)));
	
	Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Валюта) Тогда
		ОформлениеСтроки.Ячейки.Валюта.УстановитьТекст("Осн.");	
		ОформлениеСтроки.Ячейки.Валюта.ЦветТекста = WebЦвета.Серый;	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПостояннаяЧастьАренднойПлатыУслугаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекСтрока = ЭлементыФормы.ПостояннаяЧастьАренднойПлаты.ТекущаяСтрока;
	ОбщиеПроцедуры.ВыборУслуги(ТекСтрока, Истина);
	ПриИзмененииУслуги(ТекСтрока, Ложь);
	
КонецПроцедуры

Процедура ПостояннаяЧастьАренднойПлатыУслугаПриИзменении(Элемент)
		
	ТекущаяСтрока = ЭлементыФормы.ПостояннаяЧастьАренднойПлаты.ТекущаяСтрока;
	ПриИзмененииУслуги(ТекущаяСтрока, Ложь);
	
КонецПроцедуры

Процедура ПостояннаяЧастьАренднойПлатыУслугаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Значение = ОбщиеПроцедуры.ПолучитьСписокУслугДляПодбора(Текст, Истина);
	
КонецПроцедуры

//////////////////////////////////////////////////////
// Переменная часть

Процедура ПеременнаяЧастьАренднойПлатыСпособНачисленияПриИзменении(Элемент)
	
	Если ЭтотОбъект.ПостояннаяЧастьАренднойПлаты.Количество() = 0 Тогда
		ТекущаяСтрока = ЭлементыФормы.ПеременнаяЧастьАренднойПлаты.ТекущаяСтрока;
		Если ТекущаяСтрока.НомерСтроки = 1
				И мВалютаРегламентированногоУчета <> ЭтотОбъект.ВалютаСпособаНачисления Тогда
			ЭтотОбъект.ВалютаСпособаНачисления = мВалютаРегламентированногоУчета;
			ЗаполнитьКурсВалютыПоУмолчанию();
		КонецЕсли;
		Если ТекущаяСтрока.НомерСтроки = 1
				И мВалютаРегламентированногоУчета <> ЭтотОбъект.Валюта2СпособаНачисления Тогда
			ЭтотОбъект.Валюта2СпособаНачисления = мВалютаРегламентированногоУчета;
			ЗаполнитьКурсВалютыПоУмолчанию();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПеременнаяЧастьАренднойПлатыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если НЕ ЗначениеЗаполнено(ДанныеСтроки.СпособНачисления) Тогда
		ДанныеСтроки.СпособНачисления = Константы.ОсновнойСпособНачисленияАрендойПлаты.Получить();
	КонецЕсли;
	
	ОформлениеСтроки.Ячейки.Сумма.УстановитьТекст(ОбщегоНазначения.ФорматСумм(ОбщиеПроцедуры.ПолучитьСтавку(ДанныеСтроки.Ставка) * ?(ДанныеСтроки.СпособНачисления.ЗаОбъектВЦелом, 1, ДанныеСтроки.Количество)));

	Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Валюта) Тогда
		ОформлениеСтроки.Ячейки.Валюта.УстановитьТекст("Осн.");	
		ОформлениеСтроки.Ячейки.Валюта.ЦветТекста = WebЦвета.Серый;	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПеременнаяЧастьАренднойПлатыУслугаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекСтрока = ЭлементыФормы.ПеременнаяЧастьАренднойПлаты.ТекущаяСтрока;
	ОбщиеПроцедуры.ВыборУслуги(ТекСтрока, Ложь);
	ПриИзмененииУслуги(ТекСтрока, Истина);
	
КонецПроцедуры

Процедура ПеременнаяЧастьАренднойПлатыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ТекущаяСтрока = ЭлементыФормы.ПеременнаяЧастьАренднойПлаты.ТекущаяСтрока;
		Если Не Копирование Тогда
			ТекущаяСтрока.Ставка = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


Процедура ПеременнаяЧастьАренднойПлатыУслугаПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ПеременнаяЧастьАренднойПлаты.ТекущаяСтрока;
	ПриИзмененииУслуги(ТекущаяСтрока, Истина);
	
КонецПроцедуры

Процедура ПеременнаяЧастьАренднойПлатыУслугаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	Значение = ОбщиеПроцедуры.ПолучитьСписокУслугДляПодбора(Текст, Ложь);
	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ОсновныеДействияФормыНастройка(Кнопка)

	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(Ложь, ЭтотОбъект.Ссылка, ЭтотОбъект);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "ПодменюВидаОперации" командной панели
// формы. Процедура устанавливает значение реквизита ВидОперации.
//
Процедура ДействияФормыДействиеУстановитьОперацию(Кнопка)

	ПредыдущийВидОперации = ЭтотОбъект.ВидОперации; //Сохраним пред. вид операции для его сравнения с новым
	
	Если Кнопка <> Неопределено Тогда // найти новое значение вида операции
		ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийДоговоровАренды[Кнопка.Имя];
	КонецЕсли;
	
	//Если операция не поменялась то выходим
	Если  ПредыдущийВидОперации = ЭтотОбъект.ВидОперации Тогда 
		Возврат;
    КонецЕсли;
	// Отобразить в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(Строка(ЭтотОбъект.ВидОперации), ЭтотОбъект, ЭтаФорма);
	
	АрендаторПриИзменении(Неопределено);

	// Установить видимость реквизитов по виду операции.
	УстановитьВидимость();

КонецПроцедуры

Процедура ОбъектАрендыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Для Каждого СтрокаТЧ Из ЭтотОбъект.ПостояннаяЧастьАренднойПлаты Цикл
		СтрокаТЧ.Количество = ВыбранноеЗначение.ЗначениеХарактеристики;
	КонецЦикла;
	Для Каждого СтрокаТЧ Из ЭтотОбъект.ПеременнаяЧастьАренднойПлаты Цикл
		СтрокаТЧ.Количество = ВыбранноеЗначение.ЗначениеХарактеристики;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПостояннаяЧастьАренднойПлатыУслугаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекСтрока = ЭлементыФормы.ПостояннаяЧастьАренднойПлаты.ТекущаяСтрока;
	ТекСтрока.Количество = ЭтотОбъект.ОбъектАренды.ЗначениеХарактеристики;
	
КонецПроцедуры

Процедура ПеременнаяЧастьАренднойПлатыУслугаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекСтрока = ЭлементыФормы.ПеременнаяЧастьАренднойПлаты.ТекущаяСтрока;
	ТекСтрока.Количество = ЭтотОбъект.ОбъектАренды.ЗначениеХарактеристики;
	
КонецПроцедуры

Процедура ДоговорАрендыПриИзменении(Элемент)
	
	ОбъектАренды = ЭтотОбъект.ДоговорКонтрагента.ОбъектАренды;
	ОбъектАрендыОбработкаВыбора(Неопределено, ЭтотОбъект.ДоговорКонтрагента, Истина);
	
	//+++AK VERN ИП-00013579 2016.09.14
	УплачиватьНДФЛЗаКонтрагента = ЭтотОбъект.ДоговорКонтрагента.УплачиватьНДФЛЗаКонтрагента;
	УправлениеВидимостьюНДФЛ();
	//---AK VERN ИП-00013579 2016.09.14
	
КонецПроцедуры

//+++AK VERN ИП-00013579 2016.09.14
Процедура УправлениеВидимостьюНДФЛ()
	
	// Видимость элементов на закладке "Постоянная часть оплаты"
	ЭлементыФормы.ПостояннаяЧастьАренднойПлаты.Колонки.НДФЛ.Видимость	= УплачиватьНДФЛЗаКонтрагента;
	ЭлементыФормы.ПеременнаяЧастьАренднойПлаты.Колонки.НДФЛ.Видимость	= УплачиватьНДФЛЗаКонтрагента;
	//ЭлементыФормы.РасчитыватьНДФЛПоКаждомуНачислениюОтдельно.Видимость	= УплачиватьНДФЛЗаКонтрагента;
	ЭлементыФормы.РасчитыватьНДФЛПоКаждомуНачислениюОтдельно.Видимость	= Ложь;
	Элементыформы.действияформы.кнопки.ПерерасчетНДФЛ.доступность		= УплачиватьНДФЛЗаКонтрагента;
	
КонецПроцедуры
//---AK VERN ИП-00013579 2016.09.14

Процедура СпособРасчетаЗалогаПриИзменении(Элемент)
	
	УстановитьВидимость();
	
	//+++АК sils 23.10.2018 ИП-00020193
	РассчитатьСуммуДепозитаМСФО();
	//---АК
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЭтотОбъект.Дата < ЭтотОбъект.ДатаЗаключенияДоговора Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Дата документа должна быть ранее даты заключения договора");
		Отказ = Истина;
	КонецЕсли;
	Если ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийДоговоровАренды.САрендодателем
			И ЭтотОбъект.ДоговорКонтрагента.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Для арендодателя необходимо выбрать договор с поставщиком");
		Отказ = Истина;
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийДоговоровАренды.САрендатором
			И ЭтотОбъект.ДоговорКонтрагента.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СПокупателем Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Для арендодателя необходимо выбрать договор с покупателем");
		Отказ = Истина;
	КонецЕсли;
	
	Если ЭтотОбъект.ПостояннаяЧастьАренднойПлаты.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнена постоянная часть арендной платы");
		Отказ = Истина;
	КонецЕсли;
	
	Если ЭтотОбъект.ДоговорКонтрагента.ТипДоговора <> Перечисления.ТипыДоговоровСПоставщиком.Аренда
			И ЭтотОбъект.ДоговорКонтрагента.ТипДоговора <> Перечисления.ТипыДоговоровСПоставщиком.Субаренда Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Договор не является договором аренды!");
		Отказ = Истина;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ПериодичностьПредоставленияОтчетаОВыручке) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Необходимо заполнить реквизит ""Предоставлять отчет о выручке""!");
		Отказ = Истина;
	КонецЕсли;	
	
	//+++AK VERN ИП-00013579 2016.09.14
	//Если ДоговорКонтрагента.УплачиватьНДФЛЗаКонтрагента Тогда
	Если УплачиватьНДФЛЗаКонтрагента Тогда
	//---AK VERN ИП-00013579 2016.09.14
		Для Каждого СтрокаПЧ Из ЭтотОбъект.ПостояннаяЧастьАренднойПлаты Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаПЧ.НДФЛ)
					И ЗначениеЗаполнено(СтрокаПЧ.Ставка) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("В договоре указан признак Уплачивать НДФЛ за контрагента, но НДФЛ указан не во всех строках постоянной части аренды");
				Отказ = Истина;
			КонецЕсли;	
		КонецЦикла;
		
		Для Каждого СтрокаПЧ Из ЭтотОбъект.ПеременнаяЧастьАренднойПлаты Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаПЧ.НДФЛ)
					И ЗначениеЗаполнено(СтрокаПЧ.Ставка) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("В договоре указан признак Уплачивать НДФЛ за контрагента, но НДФЛ указан не во всех строках переменной части аренды");
				Отказ = Истина;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;	
	
	//
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		//
		РольМенеджераПоАренде = ПолучитьРольМенеджераПоАренде(КонецДня(ЭтотОбъект.Дата), ЭтотОбъект.ОбъектАренды.СтруктурнаяЕдиница);
		Если НЕ ЗначениеЗаполнено(РольМенеджераПоАренде) Тогда
			
			//
			//ОбщегоНазначения.СообщитьОбОшибке("За структурной единицей " + ОбъектАренды.СтруктурнаяЕдиница + " не закреплена Роль менеджера по аренде");
			//Отказ = Истина;
			
		КонецЕсли; 
	
	КонецЕсли; 
	
	//
	
	////+++АК sils 15.08.2017 ИП-00014584
	////Если есть стимул, проверяем заполнение дат.
	//Если не ТипСтимулаАренды.Пустая() Тогда
	//	ОбщегоНазначения.СообщитьОбОшибке("Запрещено создавать стимул в документе ""Заключение договора аренды""! Можно только в документе ""Дополнительное соглашение""!");
	//	Отказ = Истина;
	//КонецЕсли;
	////---АК      pozm убрал по просьбе Рустема
	
	//+++АК ZICD 04.01.2017 ИП-00014363
	Если ЭтотОбъект.Организация <> ЭтотОбъект.ДоговорКонтрагента.Организация Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Организация """ + Строка(ЭтотОбъект.Организация) + """ в шапке документа не соответствует организации """
											+ Строка(ЭтотОбъект.ДоговорКонтрагента.Организация) + """, указанной в договоре с контрагентом!");
		Отказ = Истина;
	КонецЕсли;
	//---АК
	
	//+++АК CISA 2018.09.26 ИП-00019931
	Если НЕ ЗначениеЗаполнено(ТипДоговораАренды) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Необходимо заполнить реквизит ""Тип договора аренды""!");
		Отказ = Истина;
	ИначеЕсли ЭтотОбъект.ТипДоговораАренды = Перечисления.ТипыДоговоровАренды.СнимаемВСубаренду И НЕ ЗначениеЗаполнено(НаименованиеСобственникаОбъектаСубаренды) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Необходимо заполнить реквизит ""Наименование собственника объекта субаренды""!");
		Отказ = Истина;		
	КонецЕсли;	
	//---АК CISA
	
	Отказ = Отказ И (РежимЗаписи = РежимЗаписиДокумента.Проведение); //жесткий отказ если Проведение, но просто записать даем
	
КонецПроцедуры

Процедура ПостояннаяЧастьАренднойПлатыСтавкаПриИзменении(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.ПостояннаяЧастьАренднойПлаты.ТекущиеДанные;
	
	//+++AK VERN ИП-00013579 2016.09.14
	//Если ДоговорКонтрагента.УплачиватьНДФЛЗаКонтрагента Тогда
	Если УплачиватьНДФЛЗаКонтрагента Тогда
		ТекущиеДанные.НДФЛ = НалогПоСтроке(ТекущиеДанные.Ставка);
	КонецЕсли; 
	//---AK VERN ИП-00013579 2016.09.14
	
КонецПроцедуры

//+++АК


Функция ПолучитьРольМенеджераПоАренде(Дата, СтруктурнаяЕдиница)
	
	//
	Результат = Неопределено;
	
	//
	ТЗ = "ВЫБРАТЬ
	     |	СоответствиеОбъектРольСрезПоследних.РольПользователя
	     |ИЗ
	     |	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
	     |			&Дата,
	     |			Объект = &Объект
	     |				И ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.МенеджерПоАренде)) КАК СоответствиеОбъектРольСрезПоследних";
		 
	//
	ПЗ = Новый ПостроительЗапроса;
	ПЗ.Текст = ТЗ;
	
	//
	ПЗ.Параметры.Вставить("Дата"	, Дата);
	ПЗ.Параметры.Вставить("Объект"	, СтруктурнаяЕдиница);
	
	//
	ПЗ.Выполнить();
	
	//
	Выборка = ПЗ.Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		
		//
		Результат = Выборка.РольПользователя;
	
	КонецЕсли; 
	
	//
	Возврат Результат;
	
КонецФункции	

Процедура ПеременнаяЧастьАренднойПлатыСтавкаПриИзменении(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.ПеременнаяЧастьАренднойПлаты.ТекущиеДанные;
	
	//+++AK VERN ИП-00013579 2016.09.14
	//Если ДоговорКонтрагента.УплачиватьНДФЛЗаКонтрагента Тогда
	Если УплачиватьНДФЛЗаКонтрагента Тогда
		ТекущиеДанные.НДФЛ = НалогПоСтроке(ТекущиеДанные.Ставка);
	КонецЕсли;
//---AK VERN ИП-00013579 2016.09.14
	
КонецПроцедуры

Процедура ПериодичностьПредоставленияОтчетаОВыручкеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элемент.СписокВыбора.Очистить();
	Элемент.СписокВыбора.Добавить(Перечисления.Периодичность.Нет);
	Элемент.СписокВыбора.Добавить(Перечисления.Периодичность.Месяц);
	Элемент.СписокВыбора.Добавить(Перечисления.Периодичность.Квартал);
	Элемент.СписокВыбора.Добавить(Перечисления.Периодичность.Год);
	
КонецПроцедуры

Процедура ДействияФормыИсторияВерсий(Кнопка)
	
	ИсторияИзменений = Отчеты.ИсторияИзмененийОбъектов.Создать();
	ИсторияИзменений.СсылкаНаОбъект = ЭтотОбъект.Ссылка;
	
	Форма = ИсторияИзменений.ПолучитьФорму("ФормаОтчета");
	Форма.СформироватьТаблицуВерсий();
	Форма.Открыть();

КонецПроцедуры
//---АК

//+++AK VERN ИП-00013579 2016.09.14
Процедура РасчитыватьНДФЛПоКаждомуНачислениюОтдельноПриИзменении(Элемент)
	
	Если НЕ УплачиватьНДФЛЗаКонтрагента тогда
		возврат;
	Иначе
		РасчетНДФЛдляТЧ(ЭтотОбъект.ПеременнаяЧастьАренднойПлаты);
		РасчетНДФЛдляТЧ(ЭтотОбъект.ПостояннаяЧастьАренднойПлаты);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыПерерасчетНДФЛ(Кнопка)
	
	РасчетНДФЛдляТЧ(ЭтотОбъект.ПеременнаяЧастьАренднойПлаты);
	РасчетНДФЛдляТЧ(ЭтотОбъект.ПостояннаяЧастьАренднойПлаты);
	
КонецПроцедуры

Процедура РасчетНДФЛдляТЧ(ТЧ)
	
	Для Каждого СтрокаТЧ Из ТЧ Цикл
		Если СтрокаТЧ.Валюта = мВалютаРегламентированногоУчета тогда
			СтрокаТЧ.Валюта = "";
		КонецЕсли;
		Если УплачиватьНДФЛЗаКонтрагента Тогда
			СтрокаТЧ.НДФЛ 	= НалогПоСтроке(СтрокаТЧ.Ставка);
		КонецЕсли; 
	КонецЦикла;
	//Если УплачиватьНДФЛЗаКонтрагента Тогда
	//	СтруктураПоиска=Новый Структура;
	//	ТаблицаВалют=ПостояннаяЧастьАренднойПлаты.Выгрузить("Валюта");
	//	ТаблицаВалют.Свернуть("Валюта",);
	//	ТаблицаСпособовНачисления=ПостояннаяЧастьАренднойПлаты.Выгрузить("СпособНачисления");
	//	ТаблицаСпособовНачисления.Свернуть("СпособНачисления",);
	//	ТаблицаФормОплаты=ПостояннаяЧастьАренднойПлаты.Выгрузить("ФормаОплаты");
	//	ТаблицаФормОплаты.Свернуть("ФормаОплаты",);
	//	Для Каждого СтрокаВалюты из ТаблицаВалют цикл
	//		Если Не ЗначениеЗаполнено(СтрокаВалюты.Валюта) тогда
	//			//округляем НДФЛ только для расчетов в рублях (регламентная валюта)
	//			СтруктураПоиска.Вставить("Валюта",СтрокаВалюты.Валюта);
	//			Для Каждого СтрокаСпособНачисления из ТаблицаСпособовНачисления цикл
	//				СтруктураПоиска.Вставить("СпособНачисления",СтрокаСпособНачисления.СпособНачисления);
	//				Для Каждого СтрокаФормаОплаты из ТаблицаФормОплаты цикл
	//					СтруктураПоиска.Вставить("ФормаОплаты",СтрокаФормаОплаты.ФормаОплаты);
	//					СтрокиТЧ=ТЧ.НайтиСтроки(СтруктураПоиска);
	//					Сумма=0;
	//					МаксСуммаПоСтроке=0;
	//					СтрокаМакс=0;
	//					Для Каждого СтрокаТЧ из СтрокиТЧ цикл
	//						СуммаПоСтроке=СуммаПоСтроке(СтрокаТЧ);
	//						Если СуммаПоСтроке>МаксСуммаПоСтроке тогда
	//							МаксСуммаПоСтроке=СуммаПоСтроке;
	//							СтрокаМакс=СтрокаТЧ;
	//						конеце
	//						Сумма=Сумма+СуммаПоСтроке;
	//					КонецЦикла;
	//				КонецЦикла;
	//			КонецЦикла;
	//		КонецЕсли;
	//	КонецЦикла;
	//КонецЕсли;
КонецПроцедуры

Процедура ПостояннаяЧастьАренднойПлатыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если УплачиватьНДФЛЗаКонтрагента Тогда
		РасчетНДФЛдляТЧ(ЭтотОбъект.ПостояннаяЧастьАренднойПлаты);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПеременнаяЧастьАренднойПлатыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если УплачиватьНДФЛЗаКонтрагента Тогда
		РасчетНДФЛдляТЧ(ЭтотОбъект.ПеременнаяЧастьАренднойПлаты);
	КонецЕсли;
	
	//+++ AK suvv 29.06.2018 ИП-00018425
	//попросили отключить автоматический расчет; возможно нужно будет вернуть
	//РассчитатьПеременнуюЧасть();
	//--- AK suvv
	
КонецПроцедуры

Функция СуммаПоСтроке(СтрокаТЧ)
	
	Возврат Окр(ОбщиеПроцедуры.ПолучитьСтавку(СтрокаТЧ.Ставка) * ?(СтрокаТЧ.СпособНачисления.ЗаОбъектВЦелом, 1, СтрокаТЧ.Количество), 2);
	
КонецФункции

Процедура ЕстьСтимулыАрендыПриИзменении(Элемент)
	
	Если Элемент.Значение
			И ЭтотОбъект.ТипСтимулаАренды.Пустая() Тогда
		ЭтотОбъект.ТипСтимулаАренды 			= Перечисления.АК_ТипыЛьготПоАренде.Каникулы;
		Попытка
			ЭтотОбъект.КоличествоДнейСтимулаАренды=ОбъектАренды.СтруктурнаяЕдиница.АрендныеКаникулыДней
		Исключение
		КонецПопытки;
	ИначеЕсли Элемент.Значение = Ложь
			И НЕ ЭтотОбъект.ТипСтимулаАренды.Пустая() Тогда
		ЭтотОбъект.ТипСтимулаАренды 			= Перечисления.АК_ТипыЛьготПоАренде.ПустаяСсылка();
		ЭтотОбъект.КоличествоДнейСтимулаАренды 	= 0;
	КонецЕсли;
	
	УстановитьДоступностьСтимулы();
	
КонецПроцедуры

Процедура ТипСтимулаАрендыПриИзменении(Элемент)
	////Если ТипСтимулаАренды=Перечисления.АК_ТипыЛьготПоАренде.Каникулы Тогда
	////	Если Не ОбъектАренды.Пустая() Тогда
	////		Если Не ОбъектАренды.СтруктурнаяЕдиница.Пустая() Тогда
	////			ЭтотОбъект.КоличествоДнейСтимулаАренды=ОбъектАренды.СтруктурнаяЕдиница.АрендныеКаникулыДней
	////		КонецЕсли
	////	КонецЕсли
	////КонецЕсли;
КонецПроцедуры

//+++ AK suvv 03.06.2018 ИП-00018425
Процедура ЗаполнитьВкладкуДинамикаАренды()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ДинамикаАренднойСтавкиСрезПервых.АренднаяСтавка, 0) КАК ИсходнаяАренднаяСтавка,
	|	ЕСТЬNULL(ДинамикаАренднойСтавкиСрезПервых.ПеременнаяЧасть, 0) КАК ИсходнаяПеременнаяЧасть,
	|	ЕСТЬNULL(ДинамикаАренднойСтавкиСрезПервых.РазмерИндексацииПриПерезаключенииДоговора, 0) КАК ИсходныйРазмерИндексацииПриПерезаключенииДоговора,
	|	ЕСТЬNULL(ДинамикаАренднойСтавкиСрезПоследних.АренднаяСтавка, 0) КАК ПредыдущаяАренднаяСтавка,
	|	ЕСТЬNULL(ДинамикаАренднойСтавкиСрезПоследних.РазмерИндексацииПриПерезаключенииДоговора, 0) КАК ПредыдущийРазмерИндексацииПриПерезаключенииДоговора,
	|	ЕСТЬNULL(ДинамикаАренднойСтавкиСрезПоследних.ПеременнаяЧасть, 0) КАК ПредыдущаяПеременнаяЧасть
	|ПОМЕСТИТЬ ВТ_ДинамикаАренды
	|ИЗ
	|	РегистрСведений.ДинамикаАренднойСтавки.СрезПервых(
	|			,
	|			Контрагент = &Контрагент
	|				И ОбъектАренды = &ОбъектАренды
	|				И Регистратор <> &ТекущийДокумент) КАК ДинамикаАренднойСтавкиСрезПервых,
	|	РегистрСведений.ДинамикаАренднойСтавки.СрезПоследних(
	|			&ДатаДокумента,
	|			Контрагент = &Контрагент
	|				И ОбъектАренды = &ОбъектАренды
	|				И Регистратор <> &ТекущийДокумент) КАК ДинамикаАренднойСтавкиСрезПоследних
	|ГДЕ
	|	ДинамикаАренднойСтавкиСрезПервых.Период < &ДатаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДинамикаАренды.ИсходнаяАренднаяСтавка,
	|	ВТ_ДинамикаАренды.ИсходнаяПеременнаяЧасть,
	|	ВТ_ДинамикаАренды.ИсходныйРазмерИндексацииПриПерезаключенииДоговора,
	|	ВТ_ДинамикаАренды.ПредыдущаяАренднаяСтавка,
	|	ВТ_ДинамикаАренды.ПредыдущийРазмерИндексацииПриПерезаключенииДоговора,
	|	ВТ_ДинамикаАренды.ПредыдущаяПеременнаяЧасть
	|ИЗ
	|	ВТ_ДинамикаАренды КАК ВТ_ДинамикаАренды";
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ОбъектАренды", ОбъектАренды);
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ИсходнаяАренднаяСтавка = Выборка.ИсходнаяАренднаяСтавка;
		ПредыдущаяАренднаяСтавка = Выборка.ПредыдущаяАренднаяСтавка;
		ИсходнаяПеременнаяЧасть = Выборка.ИсходнаяПеременнаяЧасть;
		ПредыдущаяПеременнаяЧасть = Выборка.ПредыдущаяПеременнаяЧасть;
		ПроцентПовышенияПеременнойЧасти = Окр(?(Выборка.ПредыдущаяПеременнаяЧасть = 0, 0, ПеременнаяЧасть/Выборка.ПредыдущаяПеременнаяЧасть*100 - 100), 2);
		ПроцентПревышенияИндексации = Окр(?(Выборка.ПредыдущийРазмерИндексацииПриПерезаключенииДоговора = 0, 0, РазмерИндексацииПриПерезаключенииДоговора/Выборка.ПредыдущийРазмерИндексацииПриПерезаключенииДоговора * 100 - 100),2);
	КонецЕсли;
		
	ЭтаФорма.Модифицированность = Ложь;
	
КонецПроцедуры //--- AK suvv

//+++ AK suvv 03.06.2018 ИП-00018425
Процедура РассчитатьПеременнуюЧасть()

	ПеременнаяЧасть = 0;
	СтрокиПоПеременнойЧасти = ПеременнаяЧастьАренднойПлаты.НайтиСтроки(Новый Структура("Услуга", Справочники.Номенклатура.НайтиПоКоду("000000253")));
	Для Каждого Стр из СтрокиПоПеременнойЧасти Цикл 
		//+++ AK suvv 14.06.2018 ИП-00018763
		Если Стр.Аванс Тогда 
			Продолжить;
		КонецЕсли;
		//--- AK suvv
		ПеременнаяЧасть = ПеременнаяЧасть + Стр.Ставка;
	КонецЦикла;

КонецПроцедуры //--- AK suvv

//+++ AK suvv 03.06.2018 ИП-00018425
Процедура ПревышениеОчистка(Элемент, СтандартнаяОбработка)	
	СтандартнаяОбработка = Ложь;
КонецПроцедуры //--- AK suvv

//+++АК CISA 2018.09.26 ИП-00019931
Процедура ТипДоговораАрендыПриИзменении(Элемент)
	УстановитьВидимостьТипДоговорАренды(Элемент);
КонецПроцедуры

//+++АК CISA 2018.09.27 ИП-00019931
Процедура УстановитьВидимостьТипДоговорАренды(Элемент)
	Если Элемент.Значение = Перечисления.ТипыДоговоровАренды.СнимаемВСубаренду Тогда		
		ЭлементыФормы.НаименованиеСобственникаОбъектаСубаренды.Видимость = Истина;
		ЭлементыФормы.НадписьНаименованиеСобственникаОбъектаСубаренды.Видимость = Истина;
	Иначе
		ЭлементыФормы.НаименованиеСобственникаОбъектаСубаренды.Значение = "";
		ЭлементыФормы.НаименованиеСобственникаОбъектаСубаренды.Видимость = Ложь;
		ЭлементыФормы.НадписьНаименованиеСобственникаОбъектаСубаренды.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

//+++АК sils 23.10.2018 ИП-00020193
Процедура СуммаЗалогаБезналичныеПриИзменении(Элемент)
	РассчитатьСуммуДепозитаМСФО();
КонецПроцедуры

//+++АК sils 23.10.2018 ИП-00020193
Процедура СуммаЗалогаНаличныеПриИзменении(Элемент)
	РассчитатьСуммуДепозитаМСФО();
КонецПроцедуры

//+++АК sils 23.10.2018 ИП-00020193
Процедура ВалютаДепозитаПриИзменении(Элемент)
	РассчитатьСуммуДепозитаМСФО();
КонецПроцедуры

//+++АК sils 23.10.2018 ИП-00020193
Процедура ВалютаДепозита2ПриИзменении(Элемент)
	РассчитатьСуммуДепозитаМСФО();
КонецПроцедуры

//+++АК sils 23.10.2018 ИП-00020193
Процедура НижняяГраницаПриИзменении(Элемент)
	РассчитатьСуммуДепозитаМСФО();
КонецПроцедуры

//+++АК sils 23.10.2018 ИП-00020193
Процедура ВерхняяГраницаПриИзменении(Элемент)
	РассчитатьСуммуДепозитаМСФО();
КонецПроцедуры

//+++АК sils 23.10.2018 ИП-00020193
Процедура ВалютаСпособаНачисленияПриИзменении(Элемент)
	РассчитатьСуммуДепозитаМСФО();
КонецПроцедуры

//+++АК sils 23.10.2018 ИП-00020193
Процедура Валюта2СпособаНачисленияПриИзменении(Элемент)
	РассчитатьСуммуДепозитаМСФО();
КонецПроцедуры

Элементыформы.ПостояннаяЧастьАренднойПлаты.Колонки.Валюта.ЭлементУправления.СписокВыбора.Добавить(мВалютаРегламентированногоУчета);
Элементыформы.ПеременнаяЧастьАренднойПлаты.Колонки.Валюта.ЭлементУправления.СписокВыбора.Добавить(мВалютаРегламентированногоУчета);
//---AK VERN ИП-00013579 2016.09.14
