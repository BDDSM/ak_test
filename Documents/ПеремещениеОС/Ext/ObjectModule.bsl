
Функция ОсновноеСредствоБылоНа08Счете(пОсновноеСредство)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОсновноеСредство", пОсновноеСредство);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ФинансовыйОбороты.СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Финансовый.Обороты(, , , Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.КапитальныеВложения), , , , ) КАК ФинансовыйОбороты";
КонецФункции

Функция ПроверитьЗадвоения()
	
	тзНоменклатура = Номенклатура.Выгрузить();
	тзНоменклатура.Свернуть("ОсновноеСредство");
	Если тзНоменклатура.Количество() = Номенклатура.Количество() Тогда
		Возврат Истина;
	КонецЕсли;

	тзНоменклатура.Колонки.Добавить("Количество");
	тзНоменклатура.ЗаполнитьЗначения(0, "Количество");
	Для Каждого Строка Из Номенклатура Цикл
		пСтрока = тзНоменклатура.Найти(Строка.ОсновноеСредство, "ОсновноеСредство");
		пСтрока.Количество = пСтрока.Количество + 1;
	КонецЦикла;
	
	ОбщегоНазначения.СообщитьОбОшибке("", Истина, "В табличной части имеются задвоения:");
	Для Каждого Строка Из Номенклатура Цикл
		пСтрока = тзНоменклатура.Найти(Строка.ОсновноеСредство, "ОсновноеСредство");
		Если пСтрока.Количество > 1 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Строка № " + Строка.НомерСтроки + " (" + Строка.ОсновноеСредство + ")", Истина);	
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Функция ПолучитьОстатокБух(мОсновноеСредство, мСчетУчета)
	
	мДата = ?(ЗначениеЗаполнено(ЭтотОбъект.Дата), ЭтотОбъект.Дата, ТекущаяДата());
	
	мДатаНовогоУчетаСчетовОС = Константы.ДатаИзмененияУчетаПоСчетамОС.Получить();
	ЕстьНовыйУчетСчетовОС = (НЕ мДата < мДатаНовогоУчетаСчетовОС);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата"			, мДата);
	Запрос.УстановитьПараметр("Склад"			, ЭтотОбъект.СкладОтправитель);
	Если НЕ ЕстьНовыйУчетСчетовОС Тогда
		Запрос.УстановитьПараметр("ЦФО"			, ЭтотОбъект.ЦФООтправитель);
	КонецЕсли;
	Запрос.УстановитьПараметр("ОсновноеСредство", мОсновноеСредство);
	Запрос.УстановитьПараметр("СчетУчета"		, мСчетУчета);
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФинансовыйОстатки.КоличествоОстаток,
	|	ФинансовыйОстатки.СуммаОстаток
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(
	|			&Дата,
	|			Счет = &СчетУчета,
	|			,
	|			Субконто2 = &Склад
	|				И Субконто3 = &ОсновноеСредство
	|				И &УсловиеПоЦФО) КАК ФинансовыйОстатки";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "
	|				И &УсловиеПоЦФО",
		?(НЕ ЕстьНовыйУчетСчетовОС, "
	|				И Субконто1 = &ЦФО", ""));
	
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка;
	
КонецФункции

Функция ПолучитьОстатки08()
	
	мДата = ?(ЗначениеЗаполнено(ЭтотОбъект.Дата), ЭтотОбъект.Дата, ТекущаяДата());
	
	мДатаНовогоУчетаСчетовОС = Константы.ДатаИзмененияУчетаПоСчетамОС.Получить();
	ЕстьНовыйУчетСчетовОС = (НЕ мДата < мДатаНовогоУчетаСчетовОС);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза"	, мДата);
	Запрос.УстановитьПараметр("СтатьяДДС"	, ЭтотОбъект.СубконтоКт1);
	Запрос.УстановитьПараметр("МассивОС"	, ЭтотОбъект.Номенклатура.ВыгрузитьКолонку("ОсновноеСредство"));
	Запрос.УстановитьПараметр("ЦФО"			, ЭтотОбъект.СубконтоКт3);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФинансовыйОстатки.Субконто2 КАК ОсновноеСредство,
	|	ФинансовыйОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(
	|			&ДатаСреза,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.КапитальныеВложения),
	|			,
	|			Субконто1 = &СтатьяДДС
	|				И Субконто2 В (&МассивОС)
	|				И Субконто3 = &ЦФО) КАК ФинансовыйОстатки";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ЭтотОбъект.СуммаДокумента = ЭтотОбъект.Номенклатура.Итог("Сумма");
	
	Если СокрЛП(ЭтотОбъект.Комментарий) = ""
			И ЭтотОбъект.Номенклатура.Количество() > 0 Тогда
		
		ВремТаблица = Новый ТаблицаЗначений;
		ВремТаблица.Колонки.Добавить("Наименование"	, Новый ОписаниеТипов("Строка"));
		ВремТаблица.Колонки.Добавить("Количество"	, Новый ОписаниеТипов("Число"));
		
		Для Каждого СтрокаТЧ Из ЭтотОбъект.Номенклатура Цикл
			НоваяСтрока = ВремТаблица.Добавить();
			НоваяСтрока.Наименование 	= СокрЛП(СтрокаТЧ.ОсновноеСредство.Наименование);
			НоваяСтрока.Количество 		= 1;
		КонецЦикла;	
		
		ВремТаблица.Свернуть("Наименование", "Количество");
		
		СтрокаКомментария = "";
		Для Каждого СтрокаТаблицы Из ВремТаблица Цикл			
			СтрокаКомментария = СтрокаКомментария + ", " + СтрокаТаблицы.Наименование +
								?(СтрокаТаблицы.Количество > 1, " " + Формат(СтрокаТаблицы.Количество, "ЧГ=") + "шт", "")			
		КонецЦикла;
		СтрокаКомментария = Сред(СтрокаКомментария, 3);
		
		ЭтотОбъект.Комментарий = СокрЛП(Лев(СтрокаКомментария, 200));
		
	КонецЕсли;
	
	//+++susk
	Если НЕ НеВыгружатьВБУ И (РежимЗаписи = РежимЗаписиДокумента.Запись ИЛИ РежимЗаписи = РежимЗаписиДокумента.Проведение) И Не ПометкаУдаления Тогда		
		ПроверитьДублиОСВТекущемМесяце();		
	КонецЕсли;
	//---susk
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеОС") Тогда
		ЭтотОбъект.СкладОтправитель 	= ДанныеЗаполнения.Склад;
		ЭтотОбъект.ЦФООтправитель 		= ДанныеЗаполнения.ЦФО;
		ЭтотОбъект.Номенклатура.Загрузить(ДанныеЗаполнения.Номенклатура.Выгрузить());
		ЭтотОбъект.СуммаДокумента = ЭтотОбъект.Номенклатура.Итог("Сумма");
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Дата < Дата("20170101") Тогда
		
		ПроверяемыеРеквизиты.Добавить("СкладОтправитель");
		ПроверяемыеРеквизиты.Добавить("СкладПолучатель");
		
		Если НЕ НеФормироватьПроводкиПоБалансовымСчетам Тогда
			ПроверяемыеРеквизиты.Добавить("СчетОтправитель");
			ПроверяемыеРеквизиты.Добавить("СчетПолучатель");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Перем Заголовок;
	
	// Проверка ручной корректировки
	Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(ЭтотОбъект.РучнаяКорректировка, Отказ, Заголовок, ЭтотОбъект,,
																	ЭтотОбъект.НеФормироватьПроводкиПоБалансовымСчетам) Тогда
		Возврат
	КонецЕсли;
	
	Если НЕ ПроверитьЗадвоения() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	//+++susk
	//ИП-00016825	
	Если Дата >= Дата("20170101") Тогда
		
		Движения.СостояниеОС.Записывать = Истина;
		
		Для Каждого Стр Из Номенклатура Цикл
			
			Если Не ЗначениеЗаполнено(Стр.СтруктурнаяЕдиницаПолучатель) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("В строке  № " + Строка(Стр.НомерСтроки) + " таблицы ""Перемещение"" не заполнена структурная единица получатель!", Отказ);
			КонецЕсли;
			
			НовДвиж = Движения.СостояниеОС.Добавить();
			НовДвиж.ОсновноеСредство = Стр.ОсновноеСредство;
			НовДвиж.Местоположение = Стр.СтруктурнаяЕдиницаПолучатель;
			НовДвиж.Период = Дата;
		КонецЦикла;
		
		Движения.СоответствиеДатчиковИОсновныхСредств.Записывать = Истина;
		
		Для Каждого Стр Из ПривязкаДатчиков Цикл
			
			Если НЕ ЗначениеЗаполнено(Стр.Датчик) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("В строке  № " + Строка(Стр.НомерСтроки) + " таблица ""Привязка датчиков"" не заполнен датчик!", Отказ);
			КонецЕсли;			
			
			НовДвиж = Движения.СоответствиеДатчиковИОсновныхСредств.Добавить();
			НовДвиж.Датчик = Стр.Датчик;
			НовДвиж.ОсновноеСредство = Стр.ОсновноеСредство;
						
			НовДвиж.Период = Дата;
			
		КонецЦикла;		
			
	Иначе
	//---susk	
		
		Если ((ТипЗнч(ЭтотОбъект.СкладОтправитель) = Тип("СправочникСсылка.СтруктурныеЕдиницы")
			И ЗначениеЗаполнено(ЭтотОбъект.СкладОтправитель.ДатаЗакрытия))
			ИЛИ (ТипЗнч(ЭтотОбъект.СкладОтправитель) = Тип("СправочникСсылка.Склады")
			И ЗначениеЗаполнено(ЭтотОбъект.СкладОтправитель.Владелец.ДатаЗакрытия)))
			И НЕ ЭтотОбъект.СуммаДокумента = 0 Тогда
			Сообщить("Торговая точка отправителя закрыта. Сумма документа должна быть равна 0.");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		мДатаНовогоУчетаСчетовОС = Константы.ДатаИзмененияУчетаПоСчетамОС.Получить();
		Счет02 = ПланыСчетов.Финансовый.ККМ;//.ХолодильноеОборудование;
		
		Если НЕ ЭтотОбъект.НеФормироватьПроводкиПоБалансовымСчетам
			И ЭтотОбъект.СчетОтправитель = ПланыСчетов.Финансовый.КапитальныеВложения Тогда
			ТаблицаОстатковПо08 = ПолучитьОстатки08();
		КонецЕсли;
		СтруктураОтбораОС = Новый Структура("ОсновноеСредство");
		
		ДвиженияФинансовый = ЭтотОбъект.Движения.Финансовый;
		ДвиженияФинансовый.Записывать 					= Истина;
		ДвиженияФинансовый.РазрешитьЗаписьБезПроверки 	= ЭтотОбъект.НеФормироватьПроводкиПоБалансовымСчетам;
		
		Для Каждого СтрокаТЧ Из ЭтотОбъект.Номенклатура Цикл
			
			СтрОстаток = ПолучитьОстатокБух(СтрокаТЧ.ОсновноеСредство, СтрокаТЧ.СчетУчетаЗабалансовый);
			
			Если СтрОстаток.КоличествоОстаток = 1 Тогда
				
				Проводка = ДвиженияФинансовый.Добавить();
				Проводка.Период = ЭтотОбъект.Дата;
				Проводка.СчетКт = СтрокаТЧ.СчетУчетаЗабалансовый;
				Если Проводка.Период < мДатаНовогоУчетаСчетовОС Тогда
					Проводка.СубконтоКт.ЦФО 			= ЭтотОбъект.ЦФООтправитель;
				КонецЕсли;
				Проводка.СубконтоКт.МестаХраненияОС 	= ЭтотОбъект.СкладОтправитель;
				Проводка.СубконтоКт.ОсновныеСредства 	= СтрокаТЧ.ОсновноеСредство;
				Проводка.КоличествоКт = 1;
				
				Проводка.Сумма = ?(ЭтотОбъект.Дата < Дата("20131201"), СтрокаТЧ.Сумма, СтрОстаток.СуммаОстаток);
				
				
				Проводка = ДвиженияФинансовый.Добавить();
				Проводка.Период = ЭтотОбъект.Дата;
				Проводка.СчетДт = СтрокаТЧ.СчетУчетаЗабалансовый;
				Если Проводка.Период < мДатаНовогоУчетаСчетовОС Тогда
					Проводка.СубконтоДт.ЦФО 			= ЦФОПолучатель;
				КонецЕсли;
				Проводка.СубконтоДт.МестаХраненияОС 	= СкладПолучатель;
				Проводка.СубконтоДт.ОсновныеСредства 	= СтрокаТЧ.ОсновноеСредство;
				Проводка.КоличествоДт = 1;
				Если (((СтрокаТЧ.СчетУчетаЗабалансовый = Счет02)
					И (НЕ ЭтотОбъект.НеФормироватьПроводкиПоБалансовымСчетам))
					ИЛИ (ТипЗнч(СкладПолучатель) = Тип("СправочникСсылка.СтруктурныеЕдиницы")
					И СкладПолучатель.id_TT = 0
					И СкладПолучатель.id_ЦФО = 0))
					И НЕ ЭтотОбъект.НеЗаполнятьСуммуДтЗабалансовогоСчета Тогда
					Проводка.Сумма = ?(Дата < Дата("20131201"), СтрокаТЧ.Сумма, СтрОстаток.СуммаОстаток);
				КонецЕсли;
				//Если СкладПолучатель.id_TT = 0
				//		И СкладПолучатель.id_ЦФО = 0
				//		И НЕ ЭтотОбъект.НеЗаполнятьСуммуДтЗабалансовогоСчета Тогда
				//	Проводка.Сумма = ?(Дата < Дата("20131201"), СтрокаТЧ.Сумма, СтрОстаток.СуммаОстаток);
				//КонецЕсли;
				
				Если НЕ ЭтотОбъект.НеФормироватьПроводкиПоБалансовымСчетам Тогда
					
					Проводка = ДвиженияФинансовый.Добавить();
					Проводка.Период = ЭтотОбъект.Дата;
					
					Проводка.СчетДт = ЭтотОбъект.СчетПолучатель;
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, СубконтоДт1);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, СубконтоДт2);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, СубконтоДт3);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства", СтрокаТЧ.ОсновноеСредство);
					Если Проводка.СчетДт.Количественный Тогда
						Проводка.КоличествоДт = 1;
					КонецЕсли;
					
					Проводка.СчетКт = ЭтотОбъект.СчетОтправитель;
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, СубконтоКт1);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, СубконтоКт2);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, СубконтоКт3);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", СтрокаТЧ.ОсновноеСредство);
					Если Проводка.СчетКт.Количественный Тогда
						Проводка.КоличествоКт = 1;
					КонецЕсли;
					Если ЭтотОбъект.СчетОтправитель = ПланыСчетов.Финансовый.КапитальныеВложения Тогда
						СтруктураОтбораОС.ОсновноеСредство = СтрокаТЧ.ОсновноеСредство;
						СтрокиТаблицы08 = ТаблицаОстатковПо08.НайтиСтроки(СтруктураОтбораОС);
						Если СтрокиТаблицы08.Количество() > 0 Тогда
							Проводка.Сумма = СтрокиТаблицы08[0].Сумма;
						КонецЕсли;
					Иначе	
						Проводка.Сумма = ?(ЭтотОбъект.Дата < Дата("20131201"), СтрокаТЧ.Сумма, СтрОстаток.СуммаОстаток);
					КонецЕсли;
					
				КонецЕсли;
			Иначе
				ОбщегоНазначения.СообщитьОбОшибке("Бухгалтерский учет: По строке № " + СтрокаТЧ.НомерСтроки + " недостаточно остатка (ОС: " +
				СтрокаТЧ.ОсновноеСредство + ", СчетУчета: " + СтрокаТЧ.СчетУчетаЗабалансовый + ", Склад: " +
				ЭтотОбъект.СкладОтправитель + ", ЦФО: " + ЭтотОбъект.ЦФООтправитель + ")");
				Отказ = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаТЧ Из ЭтотОбъект.Номенклатура Цикл
			Если НЕ УчетОсновныхСредств.СчетУчетаЗабалансовыйРазрешен(СтрокаТЧ.СчетУчетаЗабалансовый) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("В строке № " + СтрокаТЧ.НомерСтроки + " недостаточно прав доступа к счету учета " +
				СтрокаТЧ.СчетУчетаЗабалансовый);
				Отказ = Истина;
			КонецЕсли;
		КонецЦикла;
		
		//+++susk	
	КонецЕсли;
	//---susk
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.11.21 ИП-00017162
Процедура ПроверитьДублиОСВТекущемМесяце() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПеремещениеОСНоменклатура.Ссылка,
	               |	ПеремещениеОСНоменклатура.ОсновноеСредство
	               |ИЗ
	               |	Документ.ПеремещениеОС.Номенклатура КАК ПеремещениеОСНоменклатура
	               |ГДЕ
	               |	ПеремещениеОСНоменклатура.ОсновноеСредство В(&ОсновныеСредства)
	               |	И НЕ ПеремещениеОСНоменклатура.Ссылка.ПометкаУдаления
	               |	И НЕ ПеремещениеОСНоменклатура.Ссылка.НеВыгружатьВБУ И ПеремещениеОСНоменклатура.Ссылка <> &Ссылка
	               |	И ПеремещениеОСНоменклатура.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода";
	               	
	Если ЭтоНовый() Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, " И ПеремещениеОСНоменклатура.Ссылка <> &Ссылка", "");
	Иначе
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	
	СписокОС = Новый Массив;
	
	Для Каждого Стр Из Номенклатура Цикл
		СписокОС.Добавить(Стр.ОсновноеСредство);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ОсновныеСредства", СписокОС);
	
	ТаблицаДубли = Запрос.Выполнить().Выгрузить();
	
	ФлагВозврата = Ложь;
	
	СтрСообщения = "";
	
	Для Каждого Стр Из ТаблицаДубли Цикл
		НайдСтр = Номенклатура.Найти(Стр.ОсновноеСредство, "ОсновноеСредство");
		СтрСообщения = СтрСообщения + "В строке № " + Строка(НайдСтр.НомерСтроки) + " дублируется основное средство с документом """ + Строка(Стр.Ссылка) + """" + Символы.ПС;
		ФлагВозврата = Истина;
	КонецЦикла;	
	
	Если ФлагВозврата Тогда
		ОбщегоНазначения.СообщитьОбОшибке("ВНИМАНИЕ! В документе установлен флаг выгрузки в БУ. Но найдены дубли ОС в документах перемещений текущего месяца." 
					+ Символы.ПС 
					+ "В базе бухгалтерии не поддерживается перемещение ОС более одного раза за месяц! Документ при обмене не будет проведен в базе БУ!"
					+ Символы.ПС
					+ СтрСообщения);
	КонецЕсли;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.11.21 ИП-00017162
Функция ПолучитьТаблицуНаименованийОС() Экспорт
	
	Макет = ПолучитьМакет("НаименованияХолодильников");
		
	Продолжать = Истина;
	НомерСтроки = 1;
	
	ТаблицаИменОС = Новый ТаблицаЗначений;
	ТаблицаИменОС.Колонки.Добавить("ОС");
	
	Пока Продолжать Цикл
		
		ОчередноеЗначение = СокрЛП(Макет.ПолучитьОбласть(НомерСтроки, 1, НомерСтроки, 1).ТекущаяОбласть.Текст);
		
		Если Не ЗначениеЗаполнено(ОчередноеЗначение) Тогда
		
			Прервать;
		
		КонецЕсли; 
		
		НоваяСтрока = ТаблицаИменОС.Добавить();
		НоваяСтрока.ОС	= ОчередноеЗначение;		
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;	
	
	Возврат ТаблицаИменОС;
	
КонецФункции

//+++АК Susk (Суслин К.В.) 2017.11.21 ИП-00017162
Функция ПолучитьТаблицуИсключаемыхНаименований() Экспорт
	
	Макет = ПолучитьМакет("ИсключаемыеНаименованияОС");
		
	Продолжать = Истина;
	НомерСтроки = 1;
	
	ТаблицаИменОС = Новый ТаблицаЗначений;
	ТаблицаИменОС.Колонки.Добавить("ОС");
	
	Пока Продолжать Цикл
		
		ОчередноеЗначение = СокрЛП(Макет.ПолучитьОбласть(НомерСтроки, 1, НомерСтроки, 1).ТекущаяОбласть.Текст);
		
		Если Не ЗначениеЗаполнено(ОчередноеЗначение) Тогда
		
			Прервать;
		
		КонецЕсли; 
		
		НоваяСтрока = ТаблицаИменОС.Добавить();
		НоваяСтрока.ОС	= ОчередноеЗначение;		
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;	
	
	Возврат ТаблицаИменОС;
	
КонецФункции

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ, ЭтотОбъект.РучнаяКорректировка,, ЭтотОбъект.НеФормироватьПроводкиПоБалансовымСчетам);
	
КонецПроцедуры


 
  
   