
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 08.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Заявка на рекламные материалы");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	ЗаполнитьПризнакИспользованияХарактеристики();
	//АК БЕЛН 14.03.17+
	Если Не ЗначениеЗаполнено(Объект.Ссылка) И Не ЗначениеЗаполнено(Объект.ТипЗаявки) Тогда
		Объект.ТипЗаявки=Перечисления.ТипЗаявкиНаРекламныеМатериалы.ЗаявкаМагазина;
	КонецЕсли; 
	Элементы.ТипЗаявки.ТолькоПросмотр=РольДоступна("Помощник");
	УстановитьРассылку();
	
	//АК БЕЛН 14.03.17-
	
	
	//+++АК MIND 2017.11.16 доработка под утверждение заявки и работу с документом в магазине
	МожетУтверждатьЗаявку = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.МожетУтвеждатьЗаявкуНаРекламныеМатериалы, Ложь) ИЛИ РольДоступна("Помощник");
	Если Объект.Утверждена
		И НЕ МожетУтверждатьЗаявку Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Заявка уже утверждена, редактирование запрещено");
	КонецЕсли;
	Элементы.Утверждена.Доступность = МожетУтверждатьЗаявку;
	
	Если Объект.Ссылка.Пустая() Тогда
		Если МожетУтверждатьЗаявку Тогда
			Объект.Утверждена = Истина;
			Объект.КтоУтвердил = ПараметрыСеанса.ТекущийПользователь;
			Объект.ДатаУтверждения = ТекущаяДата();
		КонецЕсли;
		
		//+++АК MIND 2017.12.04 попытка потому что может быть не инициализирован параметр сеанса ТекущийПродавец, в этом случае не нужно заполнять Магазин
		Попытка
			Если НЕ ЗначениеЗаполнено(Объект.ТорговаяТочка) 
				И ЗначениеЗаполнено(ПараметрыСеанса.ТекущийПродавец) Тогда
				Объект.ТорговаяТочка = ПараметрыСеанса.ТорговаяТочкаПоАйпи;
			КонецЕсли;	
		Исключение
		КонецПопытки;	
	КонецЕсли;
	
	Если ТипЗнч(Параметры.МассивТоварыПриСоздании) = Тип("Массив") Тогда
		Для Каждого ЭлементТовар Из Параметры.МассивТоварыПриСоздании Цикл
			СтрокаДоб = Объект.Товары.Добавить();
			СтрокаДоб.Номенклатура = ЭлементТовар;
			СтруктураДанные = Новый Структура;
			СтруктураДанные.Вставить("Номенклатура"		, СтрокаДоб.Номенклатура);
			СтруктураДанные.Вставить("Характеристика"	, Неопределено);
			
			СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
			
			СтрокаДоб.Характеристика		= СтруктураДанные.Характеристика;
			СтрокаДоб.ЕдиницаИзмерения 	= СтруктураДанные.ЕдиницаИзмерения;
			СтрокаДоб.Количество 		= 1;
		КонецЦикла;	
	КонецЕсли;	
	
	Если РольДоступна("Продавец") И ЗначениеЗаполнено(ПараметрыСеанса.ТорговаяТочкаПоАйпи) Тогда
		Элементы.ЗаявкаНаНовыйМагазин.Видимость = Ложь;
		Элементы.ТипЗаявки.Видимость = Ложь;
		Элементы.Рассылка.Видимость = Ложь;
		Элементы.Группа3.Видимость = Ложь;
		Элементы.ТорговаяТочка.Доступность = Ложь;
		Элементы.Номер.Доступность = Ложь;
	КонецЕсли;
	//---АК MIND 
	
	//+++АК sils 26.04.2018 ИП-00018026
	НастройкаВидимостиСпецодежды();
	//---АК
КонецПроцедуры

//+++АК LATV 2018.07.19 ИП-00019297
&НаСервереБезКонтекста
Функция ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЕдиницаПоКлассификатору",	СтруктураДанные.Номенклатура.БазоваяЕдиницаИзмерения);
	Запрос.УстановитьПараметр("Номенклатура",				СтруктураДанные.Номенклатура);
	
	Если Не СтруктураДанные.Номенклатура.НеВедетсяУчетПоХарактеристикам Тогда
		
		Запрос.Текст =
			"ВЫБРАТЬ
			|	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика
			|ИЗ
			|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
			|ГДЕ
			|	ХарактеристикиНоменклатуры.Владелец = &Номенклатура
			|	И НЕ ХарактеристикиНоменклатуры.ПометкаУдаления
			|	И ХарактеристикиНоменклатуры.Неактивная = ЛОЖЬ";
		
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			Если Выборка.Количество() = 1 Тогда
				Выборка.Следующий();
				СтруктураДанные.Характеристика = Выборка.Характеристика;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	ЕдиницаИзмерения = Неопределено;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЕдиницыИзмерения.Ссылка КАК ЕдиницаИзмерения
		|ИЗ
		|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
		|ГДЕ
		|	ЕдиницыИзмерения.Владелец = &Номенклатура
		|	И ЕдиницыИзмерения.ЕдиницаПоКлассификатору = &ЕдиницаПоКлассификатору
		|	И НЕ ЕдиницыИзмерения.ПометкаУдаления";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		ЕдиницаИзмерения = Выборка.ЕдиницаИзмерения;
	КонецЕсли;
	СтруктураДанные.Вставить("ЕдиницаИзмерения", ЕдиницаИзмерения);
	
	Возврат СтруктураДанные;

КонецФункции

&НаСервереБезКонтекста
Функция НеВедетсяУчетПоХарактеристикам(мНоменклатура)
	
	Возврат мНоменклатура.НеВедетсяУчетПоХарактеристикам;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьВладельцаРеквизитаСервер(мРеквизит)
	
	Возврат мРеквизит.Владелец;
	
КонецФункции

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Товары.ТекущиеДанные;
	Если НЕ СтрокаТабличнойЧасти.Номенклатура = ПолучитьВладельцаРеквизитаСервер(СтрокаТабличнойЧасти.Характеристика) Тогда
		СтрокаТабличнойЧасти.Характеристика 	= ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка");
	КонецЕсли;
	Если НЕ СтрокаТабличнойЧасти.Номенклатура = ПолучитьВладельцаРеквизитаСервер(СтрокаТабличнойЧасти.ЕдиницаИзмерения) Тогда
		СтрокаТабличнойЧасти.ЕдиницаИзмерения 	= ПредопределенноеЗначение("Справочник.ЕдиницыИзмерения.ПустаяСсылка");
	КонецЕсли;
	
	СтруктураДанные = Новый Структура;
	СтруктураДанные.Вставить("Номенклатура"		, СтрокаТабличнойЧасти.Номенклатура);
	СтруктураДанные.Вставить("Характеристика"	, ?(НеВедетсяУчетПоХарактеристикам(СтрокаТабличнойЧасти.Номенклатура), ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка"), СтрокаТабличнойЧасти.Характеристика));
	
	СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
	
	СтрокаТабличнойЧасти.Характеристика		= СтруктураДанные.Характеристика;
	СтрокаТабличнойЧасти.ЕдиницаИзмерения 	= СтруктураДанные.ЕдиницаИзмерения;
	СтрокаТабличнойЧасти.Количество 		= 1;
	
	ЗаполнитьПризнакИспользованияХарактеристики();
	
	//+++АК sils 26.04.2018 ИП-00018026
	НастройкаВидимостиСпецодежды();
	СтруктураДанные = Новый Структура;
	СтруктураДанные.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
	СтруктураДанные.Вставить("Сотрудник", СтрокаТабличнойЧасти.Сотрудник);
	СтруктураДанные.Вставить("ПричинаПреждевременнойЗамены", СтрокаТабличнойЧасти.ПричинаПреждевременнойЗамены);
	СтруктураДанные.Вставить("Пол", СтрокаТабличнойЧасти.Пол);
	
	СтруктураДанные = ПроверитьЗаполнениеПолейСпецодежды(СтруктураДанные);
	
	СтрокаТабличнойЧасти.Сотрудник = СтруктураДанные.Сотрудник;
	СтрокаТабличнойЧасти.ПричинаПреждевременнойЗамены = СтруктураДанные.ПричинаПреждевременнойЗамены;
	СтрокаТабличнойЧасти.Пол = СтруктураДанные.Пол;
	//---АК
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПризнакИспользованияХарактеристики()
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
		Объект.Товары,
		Новый Структура(
			"ЗаполнитьПризнакХарактеристикиИспользуются",
			Новый Структура("Номенклатура", "ХарактеристикиИспользуются")));
			
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда		
		Запрос = Новый Запрос();
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЗаявкиНаРекламныеМатериалыОбороты.Номенклатура,
		               |	ЗаявкиНаРекламныеМатериалыОбороты.Характеристика,
		               |	СУММА(ЗаявкиНаРекламныеМатериалыОбороты.КоличествоРасход) КАК КоличествоРасход
		               |ИЗ
		               |	РегистрНакопления.ЗаявкиНаРекламныеМатериалы.Обороты(, , Регистратор, Заявка = &Заявка) КАК ЗаявкиНаРекламныеМатериалыОбороты
		               |ГДЕ
		               |	ЗаявкиНаРекламныеМатериалыОбороты.Регистратор ССЫЛКА Документ.РасходныйОрдерСклад
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ЗаявкиНаРекламныеМатериалыОбороты.Номенклатура,
		               |	ЗаявкиНаРекламныеМатериалыОбороты.Характеристика";
					   
		Запрос.УстановитьПараметр("Заявка", Объект.Ссылка);
		ТабКеш = Запрос.Выполнить().Выгрузить();
		Для Каждого СтрокаТаб Из Объект.Товары Цикл
			СтрокиТовары = ТабКеш.НайтиСтроки(Новый Структура("Номенклатура, Характеристика", СтрокаТаб.Номенклатура, СтрокаТаб.Характеристика));
			Если СтрокиТовары.Количество() > 0 Тогда
				СтрокаТаб.Отгружено = СтрокиТовары[0].КоличествоРасход;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;	
			
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьПризнакИспользованияХарактеристики();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗаполнитьПризнакИспользованияХарактеристики();
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	ОткрытьФормуМодально("Справочник.Номенклатура.Форма.ФормаВыбораХозТоваров", Новый Структура("РежимВыбора, ЗакрыватьПриВыборе, ОтборРекламныхМатериалов, Заявка", Истина, Ложь, Истина, Объект.Ссылка), Элементы.Товары);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Номенклатура") Тогда
		Элементы.Товары.ДобавитьСтроку();
		Элементы.Товары.ТекущиеДанные.Номенклатура = ВыбранноеЗначение;
		ТоварыНоменклатураПриИзменении(Неопределено);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//+++АК MIND 2017.11.16 вводится признак утверждения документа
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение
		И НЕ Объект.Утверждена Тогда
		ПараметрыЗаписи.РежимЗаписи = ?(Объект.Ссылка.Пустая(), РежимЗаписиДокумента.Запись, РежимЗаписиДокумента.ОтменаПроведения);
	КонецЕсли;	
	//---АК MIND 
		
	
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		//проверим свободный остаток
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("РеклМатериалы", Справочники.СтруктурныеЕдиницы.НайтиПоКоду("000000357"));				
		Запрос.УстановитьПараметр("Заявка", Объект.Ссылка);
		Запрос.УстановитьПараметр("ДатаГраница", ТекущаяДата() - 86400 * 14);
		Запрос.УстановитьПараметр("Таб", ТекущийОбъект.Товары.Выгрузить());
		Запрос.Текст = "ВЫБРАТЬ
		               |	Таб.Номенклатура,
		               |	Таб.Количество
		               |ПОМЕСТИТЬ ВТ_Товары
		               |ИЗ
		               |	&Таб КАК Таб
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ_Товары.Номенклатура,
		               |	ЕСТЬNULL(ВЗ_Остатки.КоличествоОстаток, 0) - ЕСТЬNULL(ВЗ_Резерв.КоличествоОстаток, 0) - ВТ_Товары.Количество КАК Нехватка,
		               |	ВТ_Товары.Количество КАК ВДокументе,
		               |	ЕСТЬNULL(ВЗ_Резерв.КоличествоОстаток, 0) КАК Резерв,
		               |	ЕСТЬNULL(ВЗ_Остатки.КоличествоОстаток, 0) КАК Остаток
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		ВТ_Товары.Номенклатура КАК Номенклатура,
		               |		СУММА(ВТ_Товары.Количество) КАК Количество
		               |	ИЗ
		               |		ВТ_Товары КАК ВТ_Товары
		               |	ГДЕ
		               |		ВТ_Товары.Количество > 0
		               |	
		               |	СГРУППИРОВАТЬ ПО
		               |		ВТ_Товары.Номенклатура) КАК ВТ_Товары
		               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		               |			ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		               |			СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток
		               |		ИЗ
		               |			РегистрНакопления.ТоварыНаСкладах.Остатки(, Склад.Владелец = &РеклМатериалы) КАК ТоварыНаСкладахОстатки
		               |		
		               |		СГРУППИРОВАТЬ ПО
		               |			ТоварыНаСкладахОстатки.Номенклатура) КАК ВЗ_Остатки
		               |		ПО ВТ_Товары.Номенклатура = ВЗ_Остатки.Номенклатура
		               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		               |			ЗаявкиНаРекламныеМатериалыОстатки.Номенклатура КАК Номенклатура,
		               |			СУММА(ЗаявкиНаРекламныеМатериалыОстатки.КоличествоОстаток) КАК КоличествоОстаток
		               |		ИЗ
		               |			РегистрНакопления.ЗаявкиНаРекламныеМатериалы.Остатки КАК ЗаявкиНаРекламныеМатериалыОстатки
		               |		ГДЕ
		               |			ЗаявкиНаРекламныеМатериалыОстатки.Заявка.Дата >= &ДатаГраница
		               |			И ЗаявкиНаРекламныеМатериалыОстатки.КоличествоОстаток >= 0
		               |			И ЗаявкиНаРекламныеМатериалыОстатки.Заявка <> &Заявка
		               |		
		               |		СГРУППИРОВАТЬ ПО
		               |			ЗаявкиНаРекламныеМатериалыОстатки.Номенклатура) КАК ВЗ_Резерв
		               |		ПО ВТ_Товары.Номенклатура = ВЗ_Резерв.Номенклатура
		               |ГДЕ
		               |	ЕСТЬNULL(ВЗ_Остатки.КоличествоОстаток, 0) - ЕСТЬNULL(ВЗ_Резерв.КоличествоОстаток, 0) - ВТ_Товары.Количество < 0";
					   
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для проведения заявки не хватает свободного остатка по номенклатуре: " + Выборка.Номенклатура
					+ Символы.ПС + "	В документе: " + Формат(Выборка.ВДокументе, "ЧДЦ=3; ЧГ=0") + "	Остаток на складе: " + Формат(Выборка.Остаток, "ЧДЦ=3; ЧГ=0") + "	Зарезервировано: " + Формат(Выборка.Резерв, "ЧДЦ=3; ЧГ=0"),,,, Отказ);
		КонецЦикла;	
	КонецЕсли;	
	//АК БЕЛН 14.03.17+
	Если Объект.Дата>'20170501' И Не ЗначениеЗаполнено(Объект.ТипЗаявки) Тогда
    	Отказ=Истина;
		Сообщить("Не указан тип заявки");

	КонецЕсли; 
	//АК БЕЛН 14.03.17-

	//+++АК sils 26.04.2018 ИП-00018026
	// Если дата выдачи спецодежды (конкретной номенклатуры указанной в заявке) прошло менее чем полгода, 
	// то в заявке необходимо указать причину раннего заказа спецодежды для сотрудника.
	флСпецодежда = Ложь;
	Для Каждого СтрокаТовар Из ТекущийОбъект.Товары Цикл
		Если ЗначениеЗаполнено(СтрокаТовар.Номенклатура) и
			СтрокаТовар.Номенклатура.ВидРекламногоМатериала = Перечисления.ПодразделРекламныхМатериалов.ФормаДляДействующихВВ Тогда
			флСпецодежда = Истина;
		КонецЕсли;	
	КонецЦикла;
	Если флСпецодежда и Объект.Дата > '20180425' И ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Дата", Объект.Дата);
		Запрос.УстановитьПараметр("Таб", ТекущийОбъект.Товары.Выгрузить());
		Запрос.Текст = "ВЫБРАТЬ
		               |	Таб.Номенклатура,
		               |	Таб.Количество,
		               |	Таб.Сотрудник,
		               |	Таб.ПричинаПреждевременнойЗамены
		               |ПОМЕСТИТЬ ВТ_Товары
		               |ИЗ
		               |	&Таб КАК Таб
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ_Товары.Номенклатура,
		               |	ВТ_Товары.Количество,
		               |	ВТ_Товары.Сотрудник,
		               |	ВложенныйЗапрос.Период,
		               |	ВТ_Товары.ПричинаПреждевременнойЗамены
		               |ИЗ
		               |	ВТ_Товары КАК ВТ_Товары
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		               |			ТМЦПереданныеСотрудникуОбороты.Номенклатура КАК Номенклатура,
		               |			ТМЦПереданныеСотрудникуОбороты.Сотрудник КАК Сотрудник,
		               |			МАКСИМУМ(ТМЦПереданныеСотрудникуОбороты.Период) КАК Период
		               |		ИЗ
		               |			РегистрНакопления.ТМЦПереданныеСотруднику.Обороты(, &Дата, Регистратор, ) КАК ТМЦПереданныеСотрудникуОбороты
		               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
		               |				ПО ТМЦПереданныеСотрудникуОбороты.Сотрудник = ВТ_Товары.Сотрудник
		               |					И ТМЦПереданныеСотрудникуОбороты.Номенклатура = ВТ_Товары.Номенклатура
		               |		ГДЕ
		               |			ТМЦПереданныеСотрудникуОбороты.КоличествоПриход > 0
		               |		
		               |		СГРУППИРОВАТЬ ПО
		               |			ТМЦПереданныеСотрудникуОбороты.Номенклатура,
		               |			ТМЦПереданныеСотрудникуОбороты.Сотрудник) КАК ВложенныйЗапрос
		               |		ПО ВТ_Товары.Номенклатура = ВложенныйЗапрос.Номенклатура
		               |			И ВТ_Товары.Сотрудник = ВложенныйЗапрос.Сотрудник";
					   
		ТЗ = Запрос.Выполнить().Выгрузить();
		Для каждого стр из ТЗ Цикл
			Если стр.Период > ДобавитьМесяц(Объект.Дата, -6) и не ЗначениеЗаполнено(стр.ПричинаПреждевременнойЗамены) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Спецодежда " + СокрЛП(стр.Номенклатура) + "	сотруднику " + СокрЛП(стр.Сотрудник) + 
					" выдана меньше пол года назад (" + Формат(стр.Период, "ДЛФ=DD") + "). Необходимо указать причину преждевременной замены.",,,, Отказ);
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;	
	// Проверка на отсутствие дублей заказов по заявке для одного и того же сотрудника
	Если флСпецодежда и Объект.Дата > '20180425' И ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		// Получаем неполученные расходные ордера
		ТЗ = ОбщегоНазначенияСервер.ПолучитьНеполучРасхОрдера();
		// Сверяем с данными в табличной части
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("ТЗ_РО", ТЗ);
		Запрос.УстановитьПараметр("ТЗ_Тов", ТекущийОбъект.Товары.Выгрузить());
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТЗ_РО.Номенклатура,
		               |	ТЗ_РО.Количество,
		               |	ТЗ_РО.Сотрудник,
		               |	ТЗ_РО.Характеристика
		               |ПОМЕСТИТЬ ВТ_РО
		               |ИЗ
		               |	&ТЗ_РО КАК ТЗ_РО
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_Тов.Номенклатура,
		               |	ТЗ_Тов.Количество,
		               |	ТЗ_Тов.Сотрудник,
		               |	ТЗ_Тов.Характеристика
		               |ПОМЕСТИТЬ ВТ_Тов
		               |ИЗ
		               |	&ТЗ_Тов КАК ТЗ_Тов
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ_РО.Номенклатура,
		               |	ВТ_РО.Характеристика,
		               |	ВТ_РО.Сотрудник,
		               |	ВТ_РО.Количество КАК КоличествоРО,
		               |	0 КАК КоличествоЗаявки
		               |ПОМЕСТИТЬ СводныеДанные
		               |ИЗ
		               |	ВТ_РО КАК ВТ_РО
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	ВТ_Тов.Номенклатура,
		               |	ВТ_Тов.Характеристика,
		               |	ВТ_Тов.Сотрудник,
		               |	0,
		               |	ВТ_Тов.Количество
		               |ИЗ
		               |	ВТ_Тов КАК ВТ_Тов
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СводныеДанные.Номенклатура,
		               |	СводныеДанные.Характеристика,
		               |	СводныеДанные.Сотрудник,
		               |	СУММА(СводныеДанные.КоличествоРО) КАК КоличествоРО,
		               |	СУММА(СводныеДанные.КоличествоЗаявки) КАК КоличествоЗаявки
		               |ИЗ
		               |	СводныеДанные КАК СводныеДанные
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	СводныеДанные.Номенклатура,
		               |	СводныеДанные.Характеристика,
		               |	СводныеДанные.Сотрудник";
					   
		ТЗ = Запрос.Выполнить().Выгрузить();
		Для каждого стр из ТЗ Цикл
			Если стр.КоличествоЗаявки > 0 и стр.КоличествоРО > 0 Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для сотрудника " + СокрЛП(стр.Сотрудник) + 
					"уже создана заявка на получение " + СокрЛП(стр.Номенклатура) + ", удалите строку и дождитесь получения формы в магазине!",,,, Отказ);
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;	
	//---АК
КонецПроцедуры

                                                                                           
//АК БЕЛН 14.03.17+
&НаКлиенте
Процедура ТипЗаявкиПриИзменении(Элемент)
	Объект.ТорговыеТочки.Очистить();
	УстановитьРассылку();	
КонецПроцедуры

&НаСервере
Процедура УстановитьРассылку()
	Если Объект.ТипЗаявки=ПредопределенноеЗначение("Перечисление.ТипЗаявкиНаРекламныеМатериалы.МассоваяРассылка") Тогда
		Элементы.Рассылка.ТолькоПросмотр=Ложь;
		Элементы.Группа3.Видимость=Истина;
	Иначе
		Если ЗначениеЗаполнено(Объект.Рассылка) Тогда
			Объект.Рассылка=Неопределено;	
		КонецЕсли;
		Если Объект.ТорговыеТочки.Количество()>0 Тогда
			Объект.ТорговыеТочки.Очистить();
		КонецЕсли; 
		Элементы.Рассылка.ТолькоПросмотр=Истина;
		Элементы.Группа3.Видимость=Ложь;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТТ(Команда)
	Объект.ТорговыеТочки.Очистить();
	ДобавитьТТСервер();
КонецПроцедуры

&НаСервере
Процедура ДобавитьТТСервер()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтруктурныеЕдиницы.Ссылка,
		|	СтруктурныеЕдиницы.НомерТочки КАК НомерТочки
		|ИЗ
		|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		|ГДЕ
		|	СтруктурныеЕдиницы.ПометкаУдаления = ЛОЖЬ
		|	И СтруктурныеЕдиницы.СтатусТорговойТочки = &СтатусТорговойТочки
		|	И СтруктурныеЕдиницы.ТипРозничнойТочки = &ТипРозничнойТочки
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерТочки";

	Запрос.УстановитьПараметр("СтатусТорговойТочки", Перечисления.СтатусыТорговыхТочек.Открыт);
	Запрос.УстановитьПараметр("ТипРозничнойТочки",Перечисления.ТипыРозничныхТочек.Магазин);
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НовСтр=Объект.ТорговыеТочки.Добавить();
		НовСтр.Магазин=ВыборкаДетальныеЗаписи.ссылка;
	КонецЦикла;
КонецПроцедуры

//АК БЕЛН 14.03.17-

//+++АК MIND 2017.11.16 проверка на различные запреты
&НаСервере
Функция ЗаявкуНельзяЗаписать(СообщениеОшибка = "")
	
	//проверка на наличие формы с другими товарами в одной заявке
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Товары", Объект.Товары.Выгрузить().ВыгрузитьКолонку("Номенклатура"));
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	Номенклатура.ВидРекламногоМатериала
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ
	               |	Номенклатура.Ссылка В(&Товары)";
	
	ТабВидыРеклТоваров = Запрос.Выполнить().Выгрузить();
	Если ТабВидыРеклТоваров.Найти(Перечисления.ПодразделРекламныхМатериалов.ФормаДляДействующихВВ, "ВидРекламногоМатериала") <> Неопределено Тогда
		Если ТабВидыРеклТоваров.Количество() > 1 Тогда
			СообщениеОшибка = "Нельзя в одной заявке рекламных материалов вместе с формой заказывать другие виды материалов";
			Возврат Истина;
		КонецЕсли;	
	КонецЕсли;	
	
	Возврат Ложь;
	
КонецФункции	

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	//+++АК MIND 2017.11.16 добавляю необходимые проверки
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Если Не МожетУтверждатьЗаявку И НЕ Объект.Утверждена Тогда
			ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Запись;
		КонецЕсли;	
	КонецЕсли;
	
	СообщениеОшибка = "";
	Если ЗаявкуНельзяЗаписать(СообщениеОшибка) Тогда
		Если ЗначениеЗаполнено(СообщениеОшибка) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОшибка, ,,, Отказ);
		КонецЕсли;	
	КонецЕсли;
	
	БылаИзменена = Модифицированность;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекущегоПользователя()
	
	Возврат ПараметрыСеанса.ТекущийПользователь;
	
КонецФункции	

&НаКлиенте
Процедура УтвержденаПриИзменении(Элемент)
	
	//+++АК MIND 2017.11.16 
	Объект.КтоУтвердил = ?(Объект.Утверждена, ПолучитьТекущегоПользователя(), Неопределено);
	Объект.ДатаУтверждения = ?(Объект.Утверждена, ТекущаяДата(), '00010101');
	Объект.Дата = ТекущаяДата();
	//---АК MIND 
	
КонецПроцедуры

&НаСервере
Процедура ОповеститьПомощникаИУправляющегоОНеобходимостиУтверждения()
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаСреза", ТекущаяДата());
	Запрос.УстановитьПараметр("Магазин", Объект.ТорговаяТочка);
	//+++АК MIND 2017.12.16 убрал управляющего из уведомления
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ПРЕДСТАВЛЕНИЕ(РолиПользователейСоставРоли.Сотрудник) КАК Сотрудник,
	               |	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(500)) КАК ИМэйл
	               |ИЗ
	               |	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
	               |			&ДатаСреза,
	               |			Объект = &Магазин
				   //+++ AK suvv 2018.06.08 ИП-00018376.01
				   //|				И ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)) КАК СоответствиеОбъектРольСрезПоследних
				   |				И (ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего) или ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы))) КАК СоответствиеОбъектРольСрезПоследних
				   //--- AK suvv
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |			ПО РолиПользователейСоставРоли.Сотрудник = КонтактнаяИнформация.Объект
	               |				И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	               |				И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица))
	               |		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = РолиПользователейСоставРоли.Ссылка";
	//Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	//               |	ПРЕДСТАВЛЕНИЕ(РолиПользователейСоставРоли.Сотрудник) КАК Сотрудник,
	//               |	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(500)) КАК ИМэйл
	//               |ИЗ
	//               |	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
	//               |			&ДатаСреза,
	//               |			Объект = &Магазин
	//               |				И ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)) КАК СоответствиеОбъектРольСрезПоследних
	//               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	//               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	//               |			ПО РолиПользователейСоставРоли.Сотрудник = КонтактнаяИнформация.Объект
	//               |				И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	//               |				И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица))
	//               |		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = РолиПользователейСоставРоли.Ссылка
	//               |
	//               |ОБЪЕДИНИТЬ ВСЕ
	//               |
	//               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	//               |	ПРЕДСТАВЛЕНИЕ(РолиПользователейСоставРоли.Сотрудник),
	//               |	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(500))
	//               |ИЗ
	//               |	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
	//               |			&ДатаСреза,
	//               |			Объект = &Магазин
	//               |				И ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)) КАК СоответствиеОбъектРольСрезПоследних
	//               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	//               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	//               |			ПО РолиПользователейСоставРоли.Сотрудник = КонтактнаяИнформация.Объект
	//               |				И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	//               |				И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица))
	//               |		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя.Родитель = РолиПользователейСоставРоли.Ссылка";
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
		
		Почта = Новый ИнтернетПочта;
		Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
		Письмо = Новый ИнтернетПочтовоеСообщение;
		Почта.Подключиться(Профиль);
		Письмо.Тема = "Утверждение заявки на рекламные материалы";
		Письмо.ИмяОтправителя = ""+УчетнаяЗапись+"";
		Письмо.ИмяОтправителя  = ""+СокрЛП(УчетнаяЗапись)+"";
		Письмо.Отправитель     = ""+СокрЛП(УчетнаяЗапись)+"";
		
		ТекстПолучатели = "";
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.ИМэйл) Тогда
				ТекстПолучатели = ТекстПолучатели + ?(ЗначениеЗаполнено(ТекстПолучатели), ", ", "") + Выборка.ИМэйл; 
				Получатель = Письмо.Получатели.Добавить();
				Получатель.Адрес           = Выборка.ИМэйл;
				Получатель.ОтображаемоеИмя = Выборка.Сотрудник;
			КонецЕсли;
		КонецЦикла;
		
		СтруктураCID = ПолучитьИдентификаторыКартинок(Письмо);
		
		ТекстСообщения = Письмо.Тексты.Добавить();
		ТекстСообщения.Текст     = "Просьба утвердить заявку на рекламные материалы.
					|	<p><b>Магазин: " + Объект.ТорговаяТочка + "
					|	<br>Документ: " + Объект.Ссылка + "<b>
					|	<p>Для подтверждения заявки войдите в 1С-CRM
					|	<p>Документы / склад / рекламные материалы / заявка на рекламные материалы 
					|	<p><img src=""cid:" + СтруктураCID.РассылкаУведомленийИзображение1 + """/>
					|	<p>Далее откройте заявку и утвердите ее
					|	<p><img src=""cid:" + СтруктураCID.РассылкаУведомленийИзображение2 + """/>";
					
		ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;
		
		Почта.Послать(Письмо);
		Почта.Отключиться();
		Сообщить("Письмо отправлено на адреса: " + ТекстПолучатели);
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	//+++АК MIND 2017.12.11 отправка уведомления помощнику и управляющему о необходимости утвердить заявку
	Если НЕ Объект.Утверждена
		И БылаИзменена
		И ЗначениеЗаполнено(Объект.ТорговаяТочка) Тогда
		//+++АК MIND 2017.12.18 отправляем уведомление пока что всегда
		//Ответ = Вопрос("Уведомить помощника управляющего о необходимости утвердить этот документ?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
		//Если Ответ = КодВозвратаДиалога.Да Тогда
			ОповеститьПомощникаИУправляющегоОНеобходимостиУтверждения();
		//КонецЕсли;	
	КонецЕсли;
	
	Оповестить("РеклМатериалы.ОбновитьЗаявки");
	
КонецПроцедуры

&НаКлиенте
Процедура УведомлениеСПросьбойУтвердить(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Документ необходимо сначала записать");
		Возврат;
	КонецЕсли;
	
	Ответ = Вопрос("Уведомить помощника управляющего о необходимости утвердить этот документ?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ОповеститьПомощникаИУправляющегоОНеобходимостиУтверждения();
	КонецЕсли;
	
КонецПроцедуры

//+++АК sils 26.04.2018 ИП-00018026
&НаСервере
Процедура НастройкаВидимостиСпецодежды()
	флВидимостьСотрудника = Ложь;
	Для каждого стр из Объект.Товары Цикл
		Если не ЗначениеЗаполнено(стр.Номенклатура) Тогда
			Продолжить;
		КонецЕсли;
		Если стр.Номенклатура.ВидРекламногоМатериала = Перечисления.ПодразделРекламныхМатериалов.ФормаДляДействующихВВ Тогда
			флВидимостьСотрудника = Истина;
		КонецЕсли;
	КонецЦикла;
	Элементы.ТоварыСотрудник.Видимость = флВидимостьСотрудника;
	Элементы.ТоварыПол.Видимость = флВидимостьСотрудника;
	Элементы.ТоварыПричинаПреждевременнойЗамены.Видимость = флВидимостьСотрудника;
КонецПроцедуры

//+++АК sils 26.04.2018 ИП-00018026
&НаСервере
Функция ПолучитьПолСотрудникаНаСервере(ТекСотрудник)
	Если не ЗначениеЗаполнено(ТекСотрудник) Тогда
		Возврат Перечисления.ПолФизическихЛиц.ПустаяСсылка();
	КонецЕсли;
	Если не ЗначениеЗаполнено(ТекСотрудник.Физлицо) Тогда
		Возврат Перечисления.ПолФизическихЛиц.ПустаяСсылка();
	КонецЕсли;
	
	Возврат ТекСотрудник.Физлицо.Пол;
КонецФункции

//+++АК sils 26.04.2018 ИП-00018026
&НаКлиенте
Процедура ТоварыСотрудникПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.Товары.ТекущиеДанные;
	СтрокаТабличнойЧасти.Пол = ПолучитьПолСотрудникаНаСервере(СтрокаТабличнойЧасти.Сотрудник);
КонецПроцедуры

//+++АК sils 26.04.2018 ИП-00018026
&НаСервере
Функция ПроверитьЗаполнениеПолейСпецодежды(СтруктураДанные)
	Если не ЗначениеЗаполнено(СтруктураДанные.Номенклатура) или
		СтруктураДанные.Номенклатура.ВидРекламногоМатериала <> Перечисления.ПодразделРекламныхМатериалов.ФормаДляДействующихВВ Тогда
		СтруктураДанные.Вставить("Сотрудник", Справочники.СотрудникиОрганизаций.ПустаяСсылка());
		СтруктураДанные.Вставить("ПричинаПреждевременнойЗамены", Перечисления.ПричиныПреждевременнойЗамены.ПустаяСсылка());
		СтруктураДанные.Вставить("Пол", Перечисления.ПолФизическихЛиц.ПустаяСсылка());
	КонецЕсли;
	
	Возврат СтруктураДанные;
КонецФункции

//+++АК sils 08.06.2018 ИП-00018876
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
КонецПроцедуры

//+++АК kats 2018.09.26 ИП-00019751
&НаСервере
Функция ПолучитьИдентификаторыКартинок(Письмо)

	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Изображение1 = ДокументОбъект.ПолучитьМакет("РассылкаУведомленийИзображение1");
	Изображение2 = ДокументОбъект.ПолучитьМакет("РассылкаУведомленийИзображение2");
	ИзображенияСтруктура = Новый Структура;
	ИзображенияСтруктура.Вставить("РассылкаУведомленийИзображение1", Изображение1);
	ИзображенияСтруктура.Вставить("РассылкаУведомленийИзображение2", Изображение2);
	
	СтруктураCID = Новый Структура;
	Для каждого ЭлементСтруктурыИзображения Из ИзображенияСтруктура Цикл
		
		ПочтовоеВложение = Письмо.Вложения.Добавить(ЭлементСтруктурыИзображения.Значение);
		ПочтовоеВложение.Идентификатор = Новый УникальныйИдентификатор;
		СтруктураCID.Вставить(ЭлементСтруктурыИзображения.Ключ, ПочтовоеВложение.Идентификатор); 
		
	КонецЦикла;
	
	Возврат СтруктураCID

КонецФункции 

