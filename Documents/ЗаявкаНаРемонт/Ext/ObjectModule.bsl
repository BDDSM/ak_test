
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СделатьРассылку();

	// +++ golv ИП-00019919 16.10.2018
	РассылкаТехбот();
	// --- golv
	
КонецПроцедуры

Функция Папка()
	Если ЗначениеЗаполнено(ИД) Тогда
		Возврат "\\10.0.0.51\1c$\";
	Иначе	
		Возврат СокрЛП(Константы.МП_КаталогХраненияФайловЗадачМП.Получить())+"\";
	КонецЕсли; 

КонецФункции // ()

Процедура ОтправитьПисьмо(ЭлПочта,ТабДок,Тема,Помощнику=Ложь)
	
	
	//Для каждого Стр Из Выб.МестоВыкладки.Контролеры Цикл
	//	Если МассивАдресов.Найти(Стр.ФизЛицо)=Неопределено Тогда
	//		МассивАдресов.Добавить(Стр.ФизЛицо);
	//	КонецЕсли; 
	//КонецЦикла;
	Кому = Новый СписокЗначений;
	Кому.Добавить(ЭлПочта);
	СтруктураНовогоПисьма = Новый Структура;
	СтруктураНовогоПисьма.Вставить("ВидТекста", Перечисления.ВидыТекстовЭлектронныхПисем.Текст);
	
	СписокФайловВложений = Новый СписокЗначений;
	Папка=Папка();
	Для каждого Стр Из Файлы Цикл
		Если ЗначениеЗаполнено(Стр.ИмяФайла) Тогда
			СписокФайловВложений.Добавить(Новый Структура("ИмяФайла",  Папка+Стр.ОтносительноеИмяФайла));
		КонецЕсли;
	КонецЦикла; 
	
	
	СтруктураНовогоПисьма.Вставить("СписокФайловВложений", СписокФайловВложений);
	
	
	ВремФайл = ПолучитьИмяВременногоФайла("htm");
	ТабДок.Записать(ВремФайл, ТипФайлаТабличногоДокумента.HTML);
	
	ТекстДокумент = Новый ТекстовыйДокумент();
	ТекстДокумент.Прочитать(ВремФайл);
	
	Текст = ТекстДокумент.ПолучитьТекст();
	НачалоБлокаСтиль = Найти(Текст, "<STYLE");
	КонецБлокаСтиль = Найти(Текст, "</STYLE");
	ТекстСтиль = Сред(Текст, НачалоБлокаСтиль, КонецБлокаСтиль - НачалоБлокаСтиль + 8);
	НачалоБлокаТело = Найти(Текст, "<BODY");
	КонецБлокаТело = Найти(Текст, "</BODY");
	ТекстТело = Сред(Текст, НачалоБлокаТело, КонецБлокаТело - НачалоБлокаТело + 7);
	
	ТекстПолный = "<HTML>" + Символы.ПС +ТекстСтиль +Символы.ПС + ТекстТело + Символы.ПС + "</HTML>";
	ТекстПолный = СтрЗаменить(ТекстПолный, "CELLSPACING=0", "CELLSPACING=0; CELLPADDING=5; border = 0");
	//ТекстПолный = СтрЗаменить(ТекстПолный, "border-left-style: none", "");
	//ТекстПолный = СтрЗаменить(ТекстПолный, "border-top-style: none", "");
	СтруктураНовогоПисьма.Вставить("Тело",ТекстПолный);
	
	
	СтруктураНовогоПисьма.Вставить("Кому", Кому);
	СтруктураНовогоПисьма.Вставить("Тема", Тема);
	//СтруктураНовогоПисьма.Вставить("Тело", Тело);
	Попытка
		ОтправитьПисьмоПоПочте(СтруктураНовогоПисьма,Истина,Помощнику);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
	
	//УдалитьФайлы(КаталогВременныхФайлов()+"Акт сверки и заказы.epf");
КонецПроцедуры

Процедура ОтправитьПисьмоПоПочте(СтруктураНовогоПисьма, ФлХТМЛ = Ложь,Помощнику=Ложь)  
	
	УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоКоду("000000001");
	
	СпАдресов = Новый СписокЗначений;
	Для каждого ЭлСп Из СтруктураНовогоПисьма.Кому Цикл
		МассивАдресов = Справочники.Контрагенты.РазложитьСтрокуВМассивПодстрок(ЭлСп.Значение, ";");	
		Для каждого Эл Из МассивАдресов Цикл
			Если ЗначениеЗаполнено(Эл) Тогда
				СпАдресов.Добавить(Сокрлп(Эл));
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла;
	
	Почта = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Письмо = Новый ИнтернетПочтовоеСообщение;
	
	Почта.Подключиться(Профиль);
	Письмо.Тема = СтруктураНовогоПисьма.Тема;
	Письмо.ИмяОтправителя  						= "accept@izbenka.msk.ru";
	Письмо.Отправитель     						= "accept@izbenka.msk.ru";
	
	ТабДок=СтруктураНовогоПисьма.Тело;
	
	//ТекстСообщения = Письмо.Тексты.Добавить();
	//ТекстСообщения.Текст     = 	СтруктураНовогоПисьма.ТабДок;
	
	ТекстСообщения 								= Письмо.Тексты.Добавить();
	ТекстСообщения.Текст    					= ТекстСообщения.Текст + ТабДок;
	ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;
	пТекстСсылкиНаКнопкуПодтвердить 			= "www.vkusvill.ru";
	пТекстСсылкиНаКнопкуОтменитьПодтверждение 	= "www.vkusvill.ru";
	
	ID_MESSAGE 									= Новый УникальныйИдентификатор;
	TYPE_MESSAGE                                = 7;
	GUID_Заявки									= Ссылка.УникальныйИдентификатор();
	
	пТекстСсылкиНаКнопкуПодтвердить 			= "mailto:vkusvill.333@gmail.com?reply-to=vkusvill.333@gmail.com&subject=Акцепт заявки на ремонт "+?(Помощнику,"(подтверждение помощнику)","")+ " №" + Номер + "&body=GUID%20" + GUID_Заявки + "%20ID_MESSAGE%20" + ID_MESSAGE   + "%20TYPE_MESSAGE%20" + TYPE_MESSAGE  + "%20Акцептировано";
	пТекстСсылкиНаКнопкуОтменитьПодтверждение 	= "mailto:vkusvill.333@gmail.com?reply-to=vkusvill.333@gmail.com&subject=Акцепт заявки на ремонт "+?(Помощнику,"(подтверждение помощнику)","")+ " №" + Номер + "&body=GUID%20" + GUID_Заявки + "%20ID_MESSAGE%20" + ID_MESSAGE   + "%20TYPE_MESSAGE%20" + TYPE_MESSAGE  + "%20Отклонено";
	
	пТекстКнопкиПодтвердить 					= "<a href=""" + пТекстСсылкиНаКнопкуПодтвердить + """><b>Подтвердить</b></a><br><br>";
	пТекстКнопкиОтменитьПодтверждение 			= "<a href=""" + пТекстСсылкиНаКнопкуОтменитьПодтверждение + """><b>Отклонить</b></a><br><br>";
	ТекстСообщения.Текст 						= ТекстСообщения.Текст + пТекстКнопкиПодтвердить + пТекстКнопкиОтменитьПодтверждение;
	ТекстСообщения.ТипТекста 					= ТипТекстаПочтовогоСообщения.HTML;
	Если ВидЗаявки=Перечисления.ВидыЗаявокНаРемонт.РемонтХолодильников Тогда
		ТекстСообщения = Письмо.Тексты.Добавить();
		ТекстСообщения.Текст     = "Во вложении находится график работы холодильника";
		ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
	КонецЕсли; 
	
	Для каждого Эл1 Из СтруктураНовогоПисьма.СписокФайловВложений Цикл
		Письмо.Вложения.Добавить(Эл1.Значение.ИмяФайла);
	КонецЦикла;
	
	Для каждого Адрес Из СпАдресов Цикл
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = Адрес.Значение;
	КонецЦикла;
	Почта.Послать(Письмо);
	Почта.Отключиться();
	СообщениеПоОтправке 						= НСтр("ru = 'Отправлено письмо на подтверждение заявки на ремонт:  %Выборка_Акцептант% по документу %РезЗапросДокиСсылка%'");
	СообщениеПоОтправке 						= СтрЗаменить(СообщениеПоОтправке, "%РезЗапросДокиСсылка%", Ссылка);
	Сообщить(СтрЗаменить(СообщениеПоОтправке, "%Выборка_Акцептант%", ИсполнительКонтрагент));
	
	Запись 										= РегистрыСведений.АкцептЗаявок.СоздатьМенеджерЗаписи();
	Запись.GUID_Загрузки 						= ID_MESSAGE;
	Запись.GUID_Заявки 							= GUID_Заявки;
	Запись.ДатаОтправки 						= ТекущаяДата();
	Запись.ЗаявкаНаУслугиМатериалы 				= Ссылка;
	//Запись.Акцептант							= Парамет;
	Запись.ИдентификаторСообщения 				= Письмо.ИдентификаторСообщения;
	Запись.ОтправленаНаАкцепт					= Истина;
	Запись.email 								= Адрес;
	Запись.ТипЗаявки 							= TYPE_MESSAGE;
	Запись.Записать();
	
	
КонецПроцедуры

Процедура ОтправитьНаПодтверждение(Емейл,Помощнику=Ложь)
	ТабДок										= Новый ТабличныйДокумент;
	Макет=Документы.ЗаявкаНаРемонт.ПолучитьМакет("Сообщение");
	Обл=Макет.ПолучитьОбласть("Таблица");
	Обл.Параметры.Описание=Описание;
	
	Обл.Параметры.СрокВыполнения=?(ЗначениеЗаполнено(Срочность),Строка(Срочность)+?(ЗначениеЗаполнено(Срочность.Дней)," ("+Строка(Срочность.Дней)+" часов."+").",""),"");
	Обл.Параметры.СуточныйПериод=?(ЗначениеЗаполнено(СуточныйПериод),Строка(СуточныйПериод),"");
	ТабДок.Вывести(Обл);
	ОтправитьПисьмо(Емейл,ТабДок,"Необходимо провести ремонт в "+Строка(Магазин)+". Создана заявка на ремонт "+Ссылка,Помощнику);
	
КонецПроцедуры

Процедура СделатьРассылку()
	Если  ВыполнениеПодтверждено  Тогда
		Возврат;
	КонецЕсли; 
	УстановитьПривилегированныйРежим(Истина);
	СтруктураНовогоПисьма = Новый Структура;
	СтруктураНовогоПисьма.Вставить("ВидТекста", Перечисления.ВидыТекстовЭлектронныхПисем.Текст);
	СписокФайловВложений = Новый СписокЗначений;
	Папка=Папка();
	Для каждого Стр Из Файлы Цикл
		Если ЗначениеЗаполнено(Стр.ИмяФайла) Тогда
			СписокФайловВложений.Добавить(Новый Структура("ИмяФайла",  Папка+Стр.ОтносительноеИмяФайла));
		КонецЕсли;
	КонецЦикла; 
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО
	|ИЗ
	|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&Дата, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ЦФОСтруктурныхЕдиницСрезПоследних";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Магазин);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ЦФО=Неопределено;	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЦФО=ВыборкаДетальныеЗаписи.ЦФО;
	КонецЦикла;
	
	
	
	
	СтруктураНовогоПисьма.Вставить("СписокФайловВложений", СписокФайловВложений);
	Кому = Новый СписокЗначений;
	МасТел=Новый СписокЗначений;
	Если ДополнительныеСвойства.Свойство("ЭтоПодтверждение") Тогда
		Если ДополнительныеСвойства.ЭтоПодтверждение Тогда
			ЭтоПодтверждение=Истина;
		Иначе	
			ЭтоПодтверждение=Ложь;
		КонецЕсли; 	
	Иначе	
		ЭтоПодтверждение=Ложь;
	КонецЕсли; 	
	
	Если  НЕ ЭтоПодтверждение Тогда
		
		
		МассивАдресов=Новый Массив;
		МассивАдресов.Добавить(?(ВидЗаявки=Перечисления.ВидыЗаявокНаРемонт.РемонтХолодильников,ИсполнительКонтрагент,ИсполнительФизЛицо.ФизЛицо));
	    Если ВидЗаявки=Перечисления.ВидыЗаявокНаРемонт.РемонтХолодильников Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	КонтактныеЛицаКонтрагентов.Ссылка
				|ИЗ
				|	Справочник.КонтактныеЛицаКонтрагентов КАК КонтактныеЛицаКонтрагентов
				|ГДЕ
				|	КонтактныеЛицаКонтрагентов.РольКонтактногоЛица = &РольКонтактногоЛица
				|	И КонтактныеЛицаКонтрагентов.ПометкаУдаления = ЛОЖЬ
				|	И КонтактныеЛицаКонтрагентов.Владелец = &Владелец";
			Запрос.УстановитьПараметр("РольКонтактногоЛица", Справочники.РолиКонтактныхЛиц.НайтиПоКоду("000000005"));
			Запрос.УстановитьПараметр("Владелец", ИсполнительКонтрагент);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				МассивАдресов.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
			КонецЦикла;
		КонецЕсли; 
		
		ВыборкаДетальныеЗаписи = ПолучитьЭлПочту(МассивАдресов);
		Емейл="";
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.Тип=Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
				Емейл=Емейл+?(ЗначениеЗаполнено(СокрЛП(Емейл)) И ЗначениеЗаполнено(СокрЛП(ВыборкаДетальныеЗаписи.Представление)),";","")+СокрЛП(ВыборкаДетальныеЗаписи.Представление);
				Если Выполнено Тогда
					Кому.Добавить(Емейл);
				КонецЕсли; 
			Иначе
				Если МасТел.НайтиПоЗначению(ВыборкаДетальныеЗаписи.Представление)=Неопределено Тогда
					МасТел.Добавить(ВыборкаДетальныеЗаписи.Представление);
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла;
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	АкцептЗаявок.ЗаявкаНаУслугиМатериалы
		|ИЗ
		|	РегистрСведений.АкцептЗаявок КАК АкцептЗаявок
		|ГДЕ
		|	АкцептЗаявок.ЗаявкаНаУслугиМатериалы = &ЗаявкаНаУслугиМатериалы
		|	И АкцептЗаявок.email = &email";
		
		Запрос.УстановитьПараметр("ЗаявкаНаУслугиМатериалы", Ссылка);
		Запрос.УстановитьПараметр("email", Емейл);
		РезультатЗапроса = Запрос.Выполнить();
		БылаОтправка=Не РезультатЗапроса.Пустой();
		
		
		
		Если Емейл<>"" И Не БылаОтправка И не Выполнено И (ВидЗаявки=Перечисления.ВидыЗаявокНаРемонт.РемонтХолодильников ИЛИ
			ВидЗаявки=Перечисления.ВидыЗаявокНаРемонт.ТекущийРемонт И ПодтвержденоПомощником=Перечисления.ПодтверждениеПомощником.ПодтвержденоПомощником)Тогда
			ОтправитьНаПодтверждение(Емейл);
		КонецЕсли; 
		
		
		
		Если ВидЗаявки=Перечисления.ВидыЗаявокНаРемонт.ТекущийРемонт  И НЕ ПодтвержденоПомощником=Перечисления.ПодтверждениеПомощником.ПодтвержденоПомощником Тогда
			МассивАдресов=ОбщегоНазначенияСервер.ПолучитьФизЛицТипаРолиИсполнителя(ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего,
			Null,Null,Магазин,Null,Дата,Null,Истина);
			//+++ AK suvv 2018.06.08 ИП-00018376.01 
			МассивФЛСторонняяРозница=ОбщегоНазначенияСервер.ПолучитьФизЛицТипаРолиИсполнителя(ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы,
			Null,Null,Магазин,Null,Дата,Null,Истина);
			Для Каждого ФЛСторонняяРозница из МассивФЛСторонняяРозница Цикл
				Если МассивАдресов.Найти(ФЛСторонняяРозница) = неопределено Тогда 
					МассивАдресов.Добавить(ФЛСторонняяРозница);
				КонецЕсли;	
			КонецЦикла;
			//--- AK suvv
			ВыборкаДетальныеЗаписи = ПолучитьЭлПочту(МассивАдресов);
			Емейл="";
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Если ВыборкаДетальныеЗаписи.Тип=Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
					Емейл=Емейл+?(ЗначениеЗаполнено(СокрЛП(Емейл)) И ЗначениеЗаполнено(СокрЛП(ВыборкаДетальныеЗаписи.Представление)),";","")+СокрЛП(ВыборкаДетальныеЗаписи.Представление);
				КонецЕсли; 
			КонецЦикла;
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	АкцептЗаявок.ЗаявкаНаУслугиМатериалы
			|ИЗ
			|	РегистрСведений.АкцептЗаявок КАК АкцептЗаявок
			|ГДЕ
			|	АкцептЗаявок.ЗаявкаНаУслугиМатериалы = &ЗаявкаНаУслугиМатериалы
			|	И АкцептЗаявок.email = &email";
			
			Запрос.УстановитьПараметр("ЗаявкаНаУслугиМатериалы", Ссылка);
			Запрос.УстановитьПараметр("email", Емейл);
			РезультатЗапроса = Запрос.Выполнить();
			БылаОтправка=Не РезультатЗапроса.Пустой();
			
			
			
			Если Емейл<>"" И Не БылаОтправка И не Выполнено Тогда
				ОтправитьНаПодтверждение(Емейл,Истина);
			КонецЕсли; 
			
			
		КонецЕсли; 
		
	КонецЕсли;
	
	Если ВидЗаявки=Перечисления.ВидыЗаявокНаРемонт.РемонтХолодильников И Не ЗначениеЗаполнено(ИсполнительКонтрагент)  Тогда
		МасФЛ=ОбщегоНазначенияСервер.ПолучитьФизЛицТипаРолиИсполнителя(ПланыВидовХарактеристик.ТипыРолейПользователя.АК_НачальникЭксплуатации,
		Null,Null,ЦФО,Null,Дата,Null,Истина);
		
		ВыборкаДетальныеЗаписи = ПолучитьЭлПочту(МасФЛ);
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.Тип=Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
				Кому.Добавить(ВыборкаДетальныеЗаписи.Представление);
			КонецЕсли; 
		КонецЦикла;
		Кому.Добавить("arenda10@vkusvill.ru");
		СтруктураНовогоПисьма.Вставить("Тема", "Не назначена ремонтная компания для "+Строка(Магазин)+" ("+Строка(Магазин.ТелефонныйНомер1)+") "+". Создана без указания ремкомпании - "+Строка(Ссылка));
		СтруктураНовогоПисьма.Вставить("Тело", "Не назначена ремонтная компания для "+Строка(Магазин)+Строка(Магазин)+" ("+Строка(Магазин.ТелефонныйНомер1)+") "+". Создана без указания ремкомпании - "+Строка(Ссылка));
	Иначе	
		
		
		Если Емейл="" И ВидЗаявки=Перечисления.ВидыЗаявокНаРемонт.РемонтХолодильников И ЗначениеЗаполнено(ИсполнительКонтрагент)  Тогда
			МасФЛ=ОбщегоНазначенияСервер.ПолучитьФизЛицТипаРолиИсполнителя(ПланыВидовХарактеристик.ТипыРолейПользователя.СпециалистПоХолодильномуОборудованию,
			Null,Null,ЦФО,Null,Дата,Null,Истина);
			
				
			ВыборкаДетальныеЗаписи = ПолучитьЭлПочту(МасФЛ);
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Если ВыборкаДетальныеЗаписи.Тип=Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
					Кому.Добавить(ВыборкаДетальныеЗаписи.Представление);
				КонецЕсли; 
			КонецЦикла;
			Сообщить(НСтр("ru = 'Не заполнена эл. почта ремкомпании!'"));
			СтруктураНовогоПисьма.Вставить("Тема", "Необходимо заполнить электронную почту контрагента "+Строка(ИсполнительКонтрагент)+" для отправки уведомления о создании заявки на ремонт");
			СтруктураНовогоПисьма.Вставить("Тело", "Необходимо заполнить электронную почту контрагента "+Строка(ИсполнительКонтрагент)+" для отправки уведомления о создании заявки на ремонт");
		Иначе
			Если Срочность=Справочники.СрочностьВыполненияЗаявкиНаРемонт.Срочно ИЛИ ЭтоПодтверждение ИЛИ Выполнено Тогда
				Если ВидЗаявки=Перечисления.ВидыЗаявокНаРемонт.РемонтХолодильников  Тогда
					МасФЛ=ОбщегоНазначенияСервер.ПолучитьФизЛицТипаРолиИсполнителя(ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего,
					Null,Null,Магазин,Null,Дата,Null,Истина);
					МасФЛ1=ОбщегоНазначенияСервер.ПолучитьФизЛицТипаРолиИсполнителя(ПланыВидовХарактеристик.ТипыРолейПользователя.СпециалистПоХолодильномуОборудованию,
					Null,Null,ЦФО,Null,Дата,Null,Истина);
					Для каждого Эл Из МасФЛ1 Цикл
						МасФЛ.Добавить(Эл);
					КонецЦикла; 
					//+++ AK suvv 2018.06.08 ИП-00018376.01 
					МассивФЛСторонняяРозница=ОбщегоНазначенияСервер.ПолучитьФизЛицТипаРолиИсполнителя(ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы,
					Null,Null,Магазин,Null,Дата,Null,Истина);
					Для Каждого ФЛСторонняяРозница из МассивФЛСторонняяРозница Цикл
						Если МасФЛ.Найти(ФЛСторонняяРозница) = неопределено Тогда 
							МасФЛ.Добавить(ФЛСторонняяРозница);
						КонецЕсли;	
					КонецЦикла;
					//--- AK suvv
					
					
				ИначеЕсли ВидЗаявки=Перечисления.ВидыЗаявокНаРемонт.ТекущийРемонт  И ПодтвержденоПомощником=Перечисления.ПодтверждениеПомощником.ПодтвержденоПомощником Тогда
					МасФЛ=ОбщегоНазначенияСервер.ПолучитьФизЛицТипаРолиИсполнителя(ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего,
					Null,Null,Магазин,Null,Дата,Null,Истина);
					МасФЛ.Добавить(ИсполнительФизЛицо.ФизЛицо);
					//+++ AK suvv 2018.06.08 ИП-00018376.01 
					МассивФЛСторонняяРозница=ОбщегоНазначенияСервер.ПолучитьФизЛицТипаРолиИсполнителя(ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы,
					Null,Null,Магазин,Null,Дата,Null,Истина);
					Для Каждого ФЛСторонняяРозница из МассивФЛСторонняяРозница Цикл
						Если МасФЛ.Найти(ФЛСторонняяРозница) = неопределено Тогда 
							МасФЛ.Добавить(ФЛСторонняяРозница);
						КонецЕсли;	
					КонецЦикла;
					//--- AK suvv

				Иначе
					Возврат;                                          
				КонецЕсли;
			Иначе
				Если ВидЗаявки=Перечисления.ВидыЗаявокНаРемонт.ТекущийРемонт И ПодтвержденоПомощником=Перечисления.ПодтверждениеПомощником.ПодтвержденоПомощником Тогда
					МасФЛ=Новый Массив;
					Если Выполнено Тогда
						МасФЛ.Добавить(ИсполнительФизЛицо.ФизЛицо);
					КонецЕсли; 
				Иначе
					Возврат;
				КонецЕсли;
			КонецЕсли;
			Если (Срочность=Справочники.СрочностьВыполненияЗаявкиНаРемонт.Срочно ИЛИ ЭтоПодтверждение ИЛИ Выполнено) И
				((ВидЗаявки=Перечисления.ВидыЗаявокНаРемонт.ТекущийРемонт И ПодтвержденоПомощником=Перечисления.ПодтверждениеПомощником.ПодтвержденоПомощником) ИЛИ  
				ВидЗаявки=Перечисления.ВидыЗаявокНаРемонт.РемонтХолодильников) Тогда
				МасФЛ1=ОбщегоНазначенияСервер.ПолучитьФизЛицТипаРолиИсполнителя(ПланыВидовХарактеристик.ТипыРолейПользователя.АК_НачальникЭксплуатации,
				Null,Null,ЦФО,Null,Дата,Null,Истина);
				Для каждого Эл Из МасФЛ1 Цикл
					МасФЛ.Добавить(Эл);
				КонецЦикла; 
				
			КонецЕсли;
			
					
			ВыборкаДетальныеЗаписи = ПолучитьЭлПочту(МасФЛ);
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Если ВыборкаДетальныеЗаписи.Тип=Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
					Кому.Добавить(ВыборкаДетальныеЗаписи.Представление);
				Иначе
					Если МасТел.НайтиПоЗначению(ВыборкаДетальныеЗаписи.Представление)=Неопределено Тогда
						МасТел.Добавить(ВыборкаДетальныеЗаписи.Представление);
					КонецЕсли; 
				КонецЕсли; 
			КонецЦикла;
			
			СтрОбъекты="";
			Если ВидЗаявки=Перечисления.ВидыЗаявокНаРемонт.ТекущийРемонт Тогда
				СтрОбъекты="Объекты ремонта - ";
				Для каждого Стр Из ОбъектыРемонта Цикл
					СтрОбъекты=СтрОбъекты+" "+Строка(Стр.ОбъектРемонта)+" ("+Строка(Стр.Подгруппа)+"),";
				КонецЦикла; 
			    СтрОбъекты=Лев(СтрОбъекты,СтрДлина(СтрОбъекты)-1);
			КонецЕсли; 
			
			Если ЭтоПодтверждение Тогда
				СтруктураНовогоПисьма.Вставить("Тема", ?(Срочность=Справочники.СрочностьВыполненияЗаявкиНаРемонт.Срочно,
				"Внимание! Срочно! ","")+"Подтверждена заявка на ремонт "+Ссылка+" в "+Строка(Магазин)+" ("+Строка(Магазин.ТелефонныйНомер1)+") "+" исполнителем "
				+?(ВидЗаявки=Перечисления.ВидыЗаявокНаРемонт.РемонтХолодильников,Строка(ИсполнительКонтрагент),Строка(ИсполнительФизЛицо)));
				СтруктураНовогоПисьма.Вставить("Тело", Описание+Символы.ПС+
				?(ЗначениеЗаполнено(Срочность), "Срок выполнения - "+Строка(Срочность)+?(ЗначениеЗаполнено(Срочность.Дней)," ("+Строка(Срочность.Дней)+" часов."+").",""),"")+
				Символы.ПС+?(ЗначениеЗаполнено(СуточныйПериод),"Суточный период - "+СуточныйПериод,"")+Символы.ПС+СтрОбъекты);
			ИначеЕсли Выполнено Тогда
				СтруктураНовогоПисьма.Вставить("Тема", ?(Срочность=Справочники.СрочностьВыполненияЗаявкиНаРемонт.Срочно,
				"Внимание! Срочно! ","")+"Выполнена заявка на ремонт "+Ссылка+" в "+Строка(Магазин)+" ("+Строка(Магазин.ТелефонныйНомер1)+") "+" исполнителем "
				+?(ВидЗаявки=Перечисления.ВидыЗаявокНаРемонт.РемонтХолодильников,Строка(ИсполнительКонтрагент),Строка(ИсполнительФизЛицо)));
				СтруктураНовогоПисьма.Вставить("Тело", Описание+Символы.ПС+
				?(ЗначениеЗаполнено(Срочность), "Срок выполнения - "+Строка(Срочность)+?(ЗначениеЗаполнено(Срочность.Дней)," ("+Строка(Срочность.Дней)+" часов."+").",""),"")+
				Символы.ПС+?(ЗначениеЗаполнено(СуточныйПериод),"Суточный период - "+СуточныйПериод,"")+Символы.ПС+СтрОбъекты);
				
			Иначе	
				СтруктураНовогоПисьма.Вставить("Тема", ?(Срочность=Справочники.СрочностьВыполненияЗаявкиНаРемонт.Срочно,
				"Внимание! Срочно! ","")+"Необходимо провести ремонт в "+Строка(Магазин)+" ("+Строка(Магазин.ТелефонныйНомер1)+") "+". Создана заявка на ремонт "+Ссылка);
				СтруктураНовогоПисьма.Вставить("Тело", Описание+Символы.ПС+
				?(ЗначениеЗаполнено(Срочность), "Срок выполнения - "+Строка(Срочность)+?(ЗначениеЗаполнено(Срочность.Дней)," ("+Строка(Срочность.Дней)+" часов."+").",""),"")+
				Символы.ПС+?(ЗначениеЗаполнено(СуточныйПериод),"Суточный период - "+СуточныйПериод,"")+Символы.ПС+СтрОбъекты+Символы.ПС+
				?(ВидЗаявки=Перечисления.ВидыЗаявокНаРемонт.ТекущийРемонт И НЕ ЗначениеЗаполнено(ИсполнительФизЛицо),"Начальнику эксплуатации необходимо выбрать исполнителя",""));
			КонецЕсли; 
			
			
		КонецЕсли; 
	КонецЕсли; 
	
	СтруктураНовогоПисьма.Вставить("Кому", Кому);
	СтрКому = "";
	Для каждого Эл Из Кому Цикл
		СтрКому = СтрКому + Эл.Значение + "; ";
	КонецЦикла; 
	Если Кому.Количество() Тогда
		Попытка
			ОбщегоНазначенияКлиентСервер.ОтправитьПисьмоПоПочте(СтруктураНовогоПисьма);
			Сообщить("Отправлено письмо с информацией на " + СтрКому);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли; 
	Если МасТел.Количество() И Не ЭтоПодтверждение Тогда
		//ОтправитьСМСНаСервере(МасТел);	
	КонецЕсли; 
КонецПроцедуры

// +++ golv ИП-00019919 16.10.2018
Процедура РассылкаТехбот()
	
	Если ВидЗаявки = Перечисления.ВидыЗаявокНаРемонт.РемонтХолодильников ИЛИ НЕ ЗначениеЗаполнено(Магазин) Тогда
		Возврат;	
	КонецЕсли; 
	
	ЭтоПодтверждение = Неопределено;	
	Если НЕ ДополнительныеСвойства.Свойство("ЭтоПодтверждение", ЭтоПодтверждение) Тогда
		ЭтоПодтверждение = Ложь;
	КонецЕсли;
	
	ЭтоНовый = Неопределено;	
	Если НЕ ДополнительныеСвойства.Свойство("Новый", ЭтоНовый) Тогда
		ЭтоНовый = Ложь;
	КонецЕсли; 
	
	ЭтоУтверждение = Неопределено;	
	Если НЕ ДополнительныеСвойства.Свойство("ЭтоУтверждение", ЭтоУтверждение) Тогда
		ЭтоУтверждение = Ложь;
	КонецЕсли; 
	
	ЭтоВыполнение = Неопределено;	
	Если НЕ ДополнительныеСвойства.Свойство("ЭтоВыполнение", ЭтоВыполнение) Тогда
		ЭтоВыполнение = Ложь;
	КонецЕсли; 
	
	Если ЭтоНовый Тогда
		Обработка = Обработки.ТелеграмТехБот_ДанныеМагазинов.Создать();
		Помощник = Обработка.ПолучитьПомощникУправляющегоМагазина(Магазин);
		Если ЗначениеЗаполнено(Помощник) Тогда
			ТекстСообщения = "Создана заявка на ремонт в магазине " + Строка(Магазин);
			ТелеграмТехБот.ОтправитьСообщенияВТехбот(Помощник, ТекстСообщения, 8, Номер);
		КонецЕсли;
	ИначеЕсли ЭтоУтверждение Тогда
		Если ЗначениеЗаполнено(ИсполнительФизЛицо) Тогда
			Исполнитель = ИсполнительФизЛицо.ФизЛицо;
			ТекстСообщения = "Новая заявка на ремонт в магазине " + Строка(Магазин);
			ТелеграмТехБот.ОтправитьСообщенияВТехбот(Исполнитель, ТекстСообщения, 9, Номер);
			ТелеграмТехБот.ОтправитьСообщенияВТехбот(Магазин, "Заявка принята в работу");
		КонецЕсли;
	ИначеЕсли ЭтоВыполнение Тогда
		Обработка = Обработки.ТелеграмТехБот_ДанныеМагазинов.Создать();
		Помощник = Обработка.ПолучитьПомощникУправляющегоМагазина(Магазин);
		Если ЗначениеЗаполнено(Помощник) Тогда
			ТекстСообщения = "Выполнена заявка на ремонт в магазине " + Строка(Магазин);
			ТелеграмТехБот.ОтправитьСообщенияВТехбот(Помощник, ТекстСообщения, 8, Номер);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
// --- golv

Функция ПолучитьЭлПочту(МассивАдресов)
	Запрос=Новый Запрос;
	Запрос.Текст =                                                                                   
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Представление,
		|	КонтактнаяИнформация.Тип,
		|	КонтактнаяИнформация.Объект
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект В(&Объект)
		|	И (КонтактнаяИнформация.Тип = &Тип
		|			ИЛИ КонтактнаяИнформация.Тип = &ТипДоп)";
		
	Запрос.УстановитьПараметр("Объект", МассивАдресов);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	Запрос.УстановитьПараметр("ТипДоп", Перечисления.ТипыКонтактнойИнформации.Телефон);
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Возврат ВыборкаДетальныеЗаписи

КонецФункции // ()
 
Процедура ОтправитьСМСНаСервере(ТекСписекТел) 
	
	СообщениеSMS="Необходимо провести ремонт в "+Строка(Магазин)+". Создана заявка на ремонт "+Ссылка;
	
	Для каждого ТекСтрСписка Из ТекСписекТел Цикл
		Телефон=ТекСтрСписка.Значение;
		Телефон=СтрЗаменить(Телефон,"-","");
		Телефон=СтрЗаменить(Телефон,"(","");
		Телефон=СтрЗаменить(Телефон,")","");
		Телефон = Прав(Телефон,10);
		Если СтрДлина(Формат(Телефон,"ЧГ=0")) <> 10 Тогда
			Сообщить("Проверьте ещё раз формат номера телефона: "+Телефон);	
		Иначе	
			//ТекстЗапроса = "insert into [SMSGate].[dbo].[Incoming]
			//|      ([Date]
			//|      ,[nomer]
			//|      ,[text]
			//|      ,[Time]
			//|      ,[source])
			//|select convert(datetime,CONVERT(date,getdate())) , 
			//|/**BPar1**/'~~~~~'/**FPar**/ ,
			//|/**BPar2**/'^^^^^'/**FPar**/ ,
			//|CONVERT(time(7),getdate())  , 10 ;";
			
			ТекстЗапроса = "/****** Сценарий для команды SelectTopNRows среды SSMS  ******/
			|insert into [IES].[dbo].[Outgoing]
			|    ([Number]
			|    ,[Message]
			|    ,[AddDate]
			//+++АК SHEP 2018.08.27 ИП-00019339: убираем DiscountCardUID
			//|    ,[DiscountCardUID]
			//---АК SHEP 2018.08.27
			|    ,[type_BV]
			|    ,[Project]
			|    ,[user_add])
			|VALUES 
			//+++АК SHEP 2018.08.27 ИП-00019339
			//|	 ('7' +left('"+Формат(Телефон,"ЧГ=0")+"',10), '"+СообщениеSMS+"','"+ТекущаяДата()+"',"+" NULL "+", '"+9+"', '"+"РассылкаТТ"+"', '"+СокрЛП(ПараметрыСеанса.ТекущийПользователь)+"') ;";
			|	 ('7' +left('"+Формат(Телефон,"ЧГ=0")+"',10), '"+СообщениеSMS+"', GETDATE(), '9', 'ЗаявкаНаРемонт', '"+СокрЛП(ПараметрыСеанса.ТекущийПользователь)+"') ;";
			//---АК SHEP 2018.08.27
			
			
			//ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "~~~~~",Формат(Телефон,"ЧГ=0"));
			//ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "^^^^^",СообщениеSMS);
			
			//СтрокаПодключения = "Provider=SQLOLEDB.1;Persist Security Info=True;Initial Catalog=SMSGate;Data Source=srv-sql01;Password=cjyzcjyz;User ID=izbenka";
			//База_ВыполнитьЗапросНеЗаполняяТЗ(ТекстЗапроса, , СтрокаПодключения);
			
			ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("10.0.0.40");
			
			Если ADOСоединение = Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			ADOСоединение.Execute(ТекстЗапроса);	
			ADOСоединение.Close();
			
			Сообщить("Отправили СМС на номер +7"+Телефон);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ОтправитьСМСНаСервере()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ДополнительныеСвойства.Вставить("ЭтоПодтверждение", ПодтвержденоИсполнителем И Не Ссылка.ПодтвержденоИсполнителем);
	// +++ golv ИП-00019919 16.10.2018
	ДополнительныеСвойства.Вставить("Новый", НЕ ЗначениеЗаполнено(Ссылка));
	ДополнительныеСвойства.Вставить("ЭтоУтверждение",
		ПодтвержденоПомощником = Перечисления.ПодтверждениеПомощником.ПодтвержденоПомощником
		И Не Ссылка.ПодтвержденоПомощником = Перечисления.ПодтверждениеПомощником.ПодтвержденоПомощником);
	ДополнительныеСвойства.Вставить("ЭтоВыполнение", Выполнено И Не Ссылка.Выполнено);	
	// --- golv
	
КонецПроцедуры
