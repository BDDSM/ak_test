
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПроводитьОперацииМагазина = (РегистрыСведений.ПараметрыРаботыССоцСетями.ПолучитьЗначениеПараметра(, "ПроводитьОперацииМагазина") = Истина);
	Если НЕ ЗначениеЗаполнено(Параметры.Магазин) И ЗначениеЗаполнено(ПараметрыСеанса.ТорговаяТочкаПоАйпи) И (ПараметрыСеанса.НомерТочкиПоАйпи <> 999) Тогда
	  //И НЕ РольДоступна("ПолныеПрава") И НЕ РольДоступна("ПродавецТолькоПросмотр") Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
			Список.Отбор, "Магазин", ПараметрыСеанса.ТорговаяТочкаПоАйпи, ВидСравненияКомпоновкиДанных.Равно,, Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	КонецЕсли;
	
	ПоказатьВсеЗадачи = Параметры.ПоказатьВсеЗадачи;
	Список.Параметры.УстановитьЗначениеПараметра("Магазин", Параметры.Магазин);
	Список.Параметры.УстановитьЗначениеПараметра("Номенклатура", Параметры.Номенклатура);
	Список.Параметры.УстановитьЗначениеПараметра("ПоказатьВсеЗадачи", ПоказатьВсеЗадачи);
	
	Если ЗначениеЗаполнено(Параметры.Магазин) И ЗначениеЗаполнено(Параметры.Номенклатура) Тогда
		ПериодСписка = Элементы.Список.Период;
		ПериодСписка.Вариант = ВариантСтандартногоПериода.ПроизвольныйПериод;
		ПериодСписка.ДатаНачала = НачалоДня(ДобавитьМесяц(ТекущаяДата(), -3));
		ПериодСписка.ДатаОкончания = КонецДня(ТекущаяДата());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	ЭлементДляВидимости = Элементы.Найти("ФормаДокументМП_ЗадачаТехнологаПередачаТоваровПоставщику");
	Если ЭлементДляВидимости <> Неопределено Тогда
		ЭлементДляВидимости.Видимость = (ТекущиеДанные.ТипЗадания = ПредопределенноеЗначение("Перечисление.ТипыЗаданийТехнологаМагазинам.СамовывозСМагазинов"));
	КонецЕсли;
	
	ЭлементДляВидимости = Элементы.Найти("ФормаДокументПретензияПоставщикуСоздатьНаОсновании");
	Если ЭлементДляВидимости <> Неопределено Тогда
		ЭлементДляВидимости.Видимость = Ложь;
		//ЭлементДляВидимости.Видимость = (ТекущиеДанные.ТипЗадания = ПредопределенноеЗначение("Перечисление.ТипыЗаданийТехнологаМагазинам.ВозвратНаСклад")
		//	ИЛИ ТекущиеДанные.ТипЗадания = ПредопределенноеЗначение("Перечисление.ТипыЗаданийТехнологаМагазинам.СписаниеСМагазинов")) И НЕ ТекущиеДанные.Закрыта;
	КонецЕсли;
	
	ЭлементДляВидимости = Элементы.Найти("ФормаДокументВозвратТоваровПоставщикуСоздатьНаОсновании");
	Если ЭлементДляВидимости <> Неопределено Тогда
		ЭлементДляВидимости.Видимость = Ложь;
	КонецЕсли;
	
	ЭлементДляВидимости = Элементы.Найти("ФормаДокументПриходныйОрдерСкладСоздатьНаОсновании");
	Если ЭлементДляВидимости <> Неопределено Тогда
		ЭлементДляВидимости.Видимость = Ложь;
	КонецЕсли;
	
	ЭлементДляВидимости = Элементы.Найти("ФормаДокументМП_ЗадачаТехнологаРасходПоПеремещениюТовара411");
	Если ЭлементДляВидимости <> Неопределено Тогда
		ЭлементДляВидимости.Видимость = НЕ ПроводитьОперацииМагазина И ТекущиеДанные.Проведен
			И (ТекущиеДанные.ТипЗадания = ПредопределенноеЗначение("Перечисление.ТипыЗаданийТехнологаМагазинам.ВозвратНаСклад")
			ИЛИ ТекущиеДанные.ТипЗадания = ПредопределенноеЗначение("Перечисление.ТипыЗаданийТехнологаМагазинам.СамовывозСМагазинов"));
	КонецЕсли;
	
	ЭлементДляВидимости = Элементы.Найти("ФормаДокументМП_ЗадачаТехнологаСписаниеПоКачеству103");
	Если ЭлементДляВидимости <> Неопределено Тогда
		ЭлементДляВидимости.Видимость = (НЕ ПроводитьОперацииМагазина И ТекущиеДанные.Проведен И ТекущиеДанные.ТипЗадания = ПредопределенноеЗначение("Перечисление.ТипыЗаданийТехнологаМагазинам.СписаниеСМагазинов"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсеЗадачиПриИзменении(Элемент)
	Список.Параметры.УстановитьЗначениеПараметра("ПоказатьВсеЗадачи", ПоказатьВсеЗадачи);
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураОтборПриИзменении(Элемент)
	Список.Параметры.УстановитьЗначениеПараметра("Номенклатура", НоменклатураОтбор);
	Элементы.Список.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураОтборОчистка(Элемент, СтандартнаяОбработка)
	Список.Параметры.УстановитьЗначениеПараметра("Номенклатура", ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
	Элементы.Список.Обновить();
КонецПроцедуры
