
&НаКлиенте
Процедура НераспределенныеПозицииСделокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные=Элементы.НераспределенныеПозицииСделок.ТекущиеДанные;
	ОповеститьОВыборе(ТекущиеДанные);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СсылкаНаДокумент=Параметры.Ссылка;
	Контрагент=Параметры.Контрагент;
	ЗначениеВРеквизитФормы(ЭтаФорма.Параметры.ТЧ,"ТабЧДокумента");
	ЗаполнитьОстаткиСервер();
	ЗаполнитьСводныеДанныеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОстаткиСервер()
	НераспределенныеОстатки.Очистить();
	ТекстЗапроса="ВЫБРАТЬ
	             |	СделкаСПоставщикомГрафикОплат.Номенклатура,
	             |	СделкаСПоставщикомГрафикОплат.ДатаГотовности КАК ДатаГотовности,
	             |	СделкаСПоставщикомГрафикОплат.Ссылка КАК Сделка,
	             |	СделкаСПоставщикомГрафикОплат.УИН_Строки КАК УИН_СтрокиСделки,
	             |	ТоварыККомплектацииСделокСПоставщикамиОстатки.КоличествоОстаток КАК Остаток,
	             |	ЛОЖЬ КАК Пометка,
	             |	0 КАК Количество,
	             |	СделкаСПоставщикомГрафикОплат.Ссылка.Контрагент,
	             |	СделкаСПоставщикомГрафикОплат.Цена
	             |ПОМЕСТИТЬ Предварительно
	             |ИЗ
	             |	РегистрНакопления.ТоварыККомплектацииСделокСПоставщиками.Остатки КАК ТоварыККомплектацииСделокСПоставщикамиОстатки
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СделкаСПоставщиком.ГрафикОплат КАК СделкаСПоставщикомГрафикОплат
	             |		ПО ТоварыККомплектацииСделокСПоставщикамиОстатки.Сделка = СделкаСПоставщикомГрафикОплат.Ссылка
	             |			И ТоварыККомплектацииСделокСПоставщикамиОстатки.Номенклатура = СделкаСПоставщикомГрафикОплат.Номенклатура
	             |			И ТоварыККомплектацииСделокСПоставщикамиОстатки.УИН_Этапа = СделкаСПоставщикомГрафикОплат.УИН_Строки
	             |ГДЕ
	             |	(СделкаСПоставщикомГрафикОплат.Ссылка.Контрагент = &Контрагент
	             |			ИЛИ &ПоВсемКонтрагентам)
	             |
	             |ОБЪЕДИНИТЬ ВСЕ
	             |
	             |ВЫБРАТЬ
	             |	СделкаСПоставщикомГрафикОплат.Номенклатура,
	             |	СделкаСПоставщикомГрафикОплат.ДатаГотовности,
	             |	СделкаСПоставщикомГрафикОплат.Ссылка,
	             |	СделкаСПоставщикомГрафикОплат.УИН_Строки,
	             |	КомплектацияМагазинаПоСделкамСПоставщикомКомплектация.Количество,
	             |	ЛОЖЬ,
	             |	КомплектацияМагазинаПоСделкамСПоставщикомКомплектация.Количество,
	             |	СделкаСПоставщикомГрафикОплат.Ссылка.Контрагент,
	             |	СделкаСПоставщикомГрафикОплат.Цена
	             |ИЗ
	             |	Документ.ПредпоступлениеПоКомплектации.Товары КАК КомплектацияМагазинаПоСделкамСПоставщикомКомплектация
	             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СделкаСПоставщиком.ГрафикОплат КАК СделкаСПоставщикомГрафикОплат
	             |		ПО КомплектацияМагазинаПоСделкамСПоставщикомКомплектация.Сделка = СделкаСПоставщикомГрафикОплат.Ссылка
	             |			И КомплектацияМагазинаПоСделкамСПоставщикомКомплектация.Номенклатура = СделкаСПоставщикомГрафикОплат.Номенклатура
	             |			И КомплектацияМагазинаПоСделкамСПоставщикомКомплектация.УИН_СтрокиСделки = СделкаСПоставщикомГрафикОплат.УИН_Строки
	             |ГДЕ
	             |	КомплектацияМагазинаПоСделкамСПоставщикомКомплектация.Ссылка.Проведен
	             |	И КомплектацияМагазинаПоСделкамСПоставщикомКомплектация.Ссылка = &Ссылка
	             |	И (КомплектацияМагазинаПоСделкамСПоставщикомКомплектация.Ссылка.Контрагент = &Контрагент
	             |			ИЛИ &ПоВсемКонтрагентам)
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	Предварительно.Номенклатура,
	             |	Предварительно.ДатаГотовности КАК ДатаГотовности,
	             |	Предварительно.Сделка,
	             |	Предварительно.УИН_СтрокиСделки,
	             |	СУММА(Предварительно.Остаток) КАК Остаток,
	             |	Предварительно.Пометка,
	             |	СУММА(Предварительно.Количество) КАК Количество,
	             |	Предварительно.Контрагент,
	             |	ВЫБОР
	             |		КОГДА Предварительно.ДатаГотовности = ДАТАВРЕМЯ(1, 1, 1)
	             |			ТОГДА ДАТАВРЕМЯ(2500, 1, 1)
	             |		ИНАЧЕ Предварительно.ДатаГотовности
	             |	КОНЕЦ КАК ДатаГотовностиДляСортировки,
	             |	Предварительно.Цена
	             |ИЗ
	             |	Предварительно КАК Предварительно
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	Предварительно.Пометка,
	             |	Предварительно.УИН_СтрокиСделки,
	             |	Предварительно.Сделка,
	             |	Предварительно.ДатаГотовности,
	             |	Предварительно.Номенклатура,
	             |	Предварительно.Контрагент,
	             |	Предварительно.Цена
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ДатаГотовностиДляСортировки";
	Запрос=Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Ссылка",СсылкаНаДокумент);
	Если ЗначениеЗаполнено(Контрагент) Тогда
		Запрос.УстановитьПараметр("Контрагент",Контрагент);
		Запрос.УстановитьПараметр("ПоВсемКонтрагентам",Ложь);
	Иначе
		Запрос.УстановитьПараметр("Контрагент",Неопределено);
		Запрос.УстановитьПараметр("ПоВсемКонтрагентам",Истина);
	КонецЕсли;	
	НераспределенныеОстатки.Загрузить(Запрос.Выполнить().Выгрузить());
	СтруктураОтбора=Новый Структура;
	СтруктураОтбора.Вставить("Номенклатура",);
	СтруктураОтбора.Вставить("Сделка",);
	СтруктураОтбора.Вставить("УИН_СтрокиСделки",);
	ТЧДокумента=РеквизитФормыВЗначение("ТабЧДокумента");
	ТЧДокумента.Свернуть("Сделка,УИН_СтрокиСделки,Номенклатура","Количество");
	Для Каждого Стр Из ТЧДокумента Цикл
		ЗаполнитьЗначенияСвойств(СтруктураОтбора,Стр);
		
		СтрокиОстатков=НераспределенныеОстатки.НайтиСтроки(СтруктураОтбора);
		Если СтрокиОстатков.Количество()>0 Тогда
			СтрокиОстатков[0].Количество=Стр.Количество;
			СтрокиОстатков[0].Пометка=Истина;
			//СтрокиОстатков[0].Остаток=СтрокиОстатков[0].Остаток+Стр.Количество;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры	

&НаКлиенте
Процедура Выбрать(Команда)
	СтруктураВозврата=Новый Структура;
	СтруктураВозврата.Вставить("Контрагент",Контрагент);
	ВыбранныеСтроки=НераспределенныеОстатки.НайтиСтроки(Новый Структура("Пометка",Истина));
	СтруктураВозврата.Вставить("ВыбранныеСтроки",ВыбранныеСтроки);
	ОповеститьОВыборе(СтруктураВозврата);
    Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ДатаГотовностиПриИзменении(Элемент)
	Если ДатаГотовности=Дата(1,1,1) Тогда
		ОтборСтрок=Неопределено;
	Иначе	
		ОтборСтрок=Новый ФиксированнаяСтруктура("ПодходитКТекущемуОтбору",Истина);
		ДатаГотовностиПриИзмененииСервер();
	КонецЕсли;	
	Элементы.НераспределенныеОстатки.ОтборСтрок=ОтборСтрок;
	ЗаполнитьСводныеДанныеНаСервере();
	Элементы.СводнаяТаблица.ОтборСтрок=ОтборСтрок;
КонецПроцедуры

&НаСервере
Процедура ДатаГотовностиПриИзмененииСервер()
	Для каждого Стр Из НераспределенныеОстатки Цикл
		Стр.ПодходитКТекущемуОтбору=Стр.ДатаГотовности<=ДатаГотовности;
	КонецЦикла;	
КонецПроцедуры	

&НаКлиенте
Процедура Сортировать(Команда)
	//ТекущиеДанные=Элементы.НераспределенныеОстатки.ТекущиеДанные;
	Имя=Элементы.НераспределенныеОстатки.ТекущийЭлемент.Имя;
	Имя=СтрЗаменить(Имя,"НераспределенныеОстатки","");
	Если Команда.Имя="Сортировать" Тогда
		СортироватьНаСервере(Имя);
	Иначе
		СортироватьНаСервере(Имя,Ложь);
	КонецЕсли;	
КонецПроцедуры


 &НаСервере
 Процедура СортироватьНаСервере(Имя,ПоВозрастанию=ИСТИНА)
	 ТЗ=РеквизитФормыВЗначение("НераспределенныеОстатки");
	 ТЗ.Сортировать(Имя+" "+?(ПоВозрастанию,"Возр","Убыв"));
	 ЗначениеВРеквизитФормы(ТЗ,"НераспределенныеОстатки");
 КонецПроцедуры 

&НаКлиенте
 Процедура ГруппаСтраницаПодбораПриСменеСтраницы(Элемент, ТекущаяСтраница)
	 Если ТекущаяСтраница.Имя="СтраницаСводныхДанных" Тогда
		ЗаполнитьСводныеДанныеНаСервере();
		Если ДатаГотовности=Дата(1,1,1) Тогда
			ОтборСтрок=Неопределено;
		Иначе	
			ОтборСтрок=Новый ФиксированнаяСтруктура("ПодходитКТекущемуОтбору",Истина);
		КонецЕсли;	
		Элементы.СводнаяТаблица.ОтборСтрок=ОтборСтрок;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСводныеДанныеНаСервере()
	ТЗ=НераспределенныеОстатки.Выгрузить();
	ТЗ.Свернуть("Контрагент,Номенклатура,ПодходитКТекущемуОтбору,Цена","Количество,Остаток");
	ТЗ.Колонки.Добавить("Пометка");
	ТЗ.Колонки.Добавить("Сумма");
	ЗначениеВРеквизитФормы(ТЗ,"СводнаяТаблица");
	СтруктураОтбора=Новый Структура;
	СтруктураОтбора.Вставить("Контрагент");
	СтруктураОтбора.Вставить("Номенклатура");
	Для Каждого Стр Из СводнаяТаблица Цикл
		ЗаполнитьЗначенияСвойств(СтруктураОтбора,Стр);
		СтруктураОтбора.Вставить("Пометка",Истина);
		Если НераспределенныеОстатки.НайтиСтроки(СтруктураОтбора).Количество()>0 Тогда
			Стр.Пометка=Истина;
		КонецЕсли;	
	КонецЦикла;	
	
	РасчетИтогаСервер();
КонецПроцедуры	


&НаКлиенте
Процедура СводнаяТаблицаПриИзменении(Элемент)
	ЗаполнитьНераспределенныеОстаткиПоСводным();
	РасчетИтогаСервер();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНераспределенныеОстаткиПоСводным()
	НераспределенныеОстатки.Сортировать("ДатаГотовностиДляСортировки");
	Для каждого Стр из СводнаяТаблица Цикл
		Отбор=Новый Структура("Контрагент,Номенклатура,Цена",Стр.Контрагент,Стр.Номенклатура,Стр.Цена);
		СтрокиОстатков=НераспределенныеОстатки.НайтиСтроки(Отбор);
		ОсталосьРаспределить=Стр.Количество;
		Для каждого СтрокаОстатка Из СтрокиОстатков Цикл
			СтрокаОстатка.Количество=Мин(СтрокаОстатка.Остаток,ОсталосьРаспределить);
			Если СтрокаОстатка.Количество<>0 Тогда
				СтрокаОстатка.Пометка=Стр.Пометка;
			Иначе
				СтрокаОстатка.Пометка=ЛОЖЬ;
			КонецЕсли;	
			ОсталосьРаспределить=ОсталосьРаспределить-СтрокаОстатка.Количество;
		КонецЦикла;	
		Если ОсталосьРаспределить<>0 Тогда
			СтрокаОстатка.Количество=СтрокаОстатка.Количество+ОсталосьРаспределить;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры	


&НаКлиенте
Процедура СводнаяТаблицаКоличествоПриИзменении(Элемент)
	ТекущиеДанные=Элементы.СводнаяТаблица.ТекущиеДанные;
	Если ТекущиеДанные.Количество<>0 Тогда
		ТекущиеДанные.Пометка=Истина;
	КонецЕсли;
	Если ТекущиеДанные.Количество>ТекущиеДанные.Остаток Тогда
		ТекущиеДанные.Количество=ТекущиеДанные.Остаток;
	КонецЕсли;	
	
	РасчетИтогаСервер();
КонецПроцедуры

&НаСервере
Процедура РасчетИтогаСервер()
	ИтогоПодобрано = 0;
	Для Каждого Стр Из СводнаяТаблица Цикл
		Стр.Сумма =Стр.Количество*Стр.Цена;
		ИтогоПодобрано = ИтогоПодобрано+Стр.Сумма*?(Стр.Пометка,1,0);
		
	КонецЦикла;	
КонецПроцедуры	


&НаКлиенте
Процедура СортироватьСводную(Команда)
	Имя=Элементы.СводнаяТаблица.ТекущийЭлемент.Имя;
	Имя=СтрЗаменить(Имя,"СводнаяТаблица","");
	Если Команда.Имя="СортироватьСводную" Тогда
		СортироватьСводнуюНаСервере(Имя);
	Иначе
		СортироватьСводнуюНаСервере(Имя,Ложь);
	КонецЕсли;	

КонецПроцедуры

&НаСервере
 Процедура СортироватьСводнуюНаСервере(Имя,ПоВозрастанию=ИСТИНА)
	 ТЗ=РеквизитФормыВЗначение("СводнаяТаблица");
	 ТЗ.Сортировать(Имя+" "+?(ПоВозрастанию,"Возр","Убыв"));
	 ЗначениеВРеквизитФормы(ТЗ,"СводнаяТаблица");
 КонецПроцедуры 

&НаКлиенте
Процедура НераспределенныеОстаткиКоличествоПриИзменении(Элемент)
	ТекущиеДанные=Элементы.НераспределенныеОстатки.ТекущиеДанные;
	
	Если ТекущиеДанные.Количество<>0 Тогда
		ТекущиеДанные.Пометка=Истина;
	КонецЕсли;
	
	 Если ТекущиеДанные.Количество>ТекущиеДанные.Остаток Тогда
		ТекущиеДанные.Количество=ТекущиеДанные.Остаток;
	КонецЕсли;	
 КонецПроцедуры

&НаКлиенте
 Процедура КонтрагентПриИзменении(Элемент)
	КонтрагентПриИзмененииСервер();
КонецПроцедуры

&НаСервере
Процедура КонтрагентПриИзмененииСервер()
	ЗаполнитьОстаткиСервер();
	ЗаполнитьСводныеДанныеНаСервере();
КонецПроцедуры	

&НаКлиенте
Процедура СводнаяТаблицаПометкаПриИзменении(Элемент)
	РасчетИтогаСервер();
КонецПроцедуры
