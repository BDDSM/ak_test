
// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;
Перем мКонтрагент;

Перем ОперацияАпдекс; //+++АК sils 07.06.2018 ИП-00018876

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, ПолучитьСтруктуруПечатныхФорм(), Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов.Строки.Количество() > 0);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя,Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если Не мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати,Истина,Истина);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ОсновныеДействияФормыНастройка(Кнопка)

	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(Ложь, Ссылка, ЭтотОбъект);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры

Процедура ДействияФормыСтруктураПодчиненности(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ЭтотОбъект.Ссылка);
	
КонецПроцедуры

// Обработчик события элемента КоманднаяПанельФормы.Файлы.
//
Процедура ДействияФормыФайлы(Кнопка)

	Если НЕ РаботаСДиалогами.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;

	СтруктураДляСпискаИзображдений 			= Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
	СтруктураДляСпискаДополнительныхФайлов 	= Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
	ОбязательныеОтборы = Новый Структура("Объект", ЭтотОбъект.Ссылка);

	РаботаСФайлами.ОткрытьФормуСпискаФайловИИзображений(СтруктураДляСпискаИзображдений, СтруктураДляСпискаДополнительныхФайлов, ОбязательныеОтборы, ЭтаФорма, "ХранилищеДополнительнойИнформации");

КонецПроцедуры

Процедура ДействияФормыДействие(Кнопка)
	
	ЗаполнитьТабличныеЧасти();

КонецПроцедуры

Процедура ОбновитьСтавку(ТекСтрока,ОбъектАренды,Услуга)
	
	ПараметрыОтбора = Новый Структура("ОбъектАренды, Услуга", ОбъектАренды, Услуга);
	СтруктураЗаписи = РегистрыСведений.Ставки.ПолучитьПоследнее(МоментВремени(), ПараметрыОтбора);
	ТекСтрока.Ставка 			= СтруктураЗаписи.Ставка;
	ТекСтрока.СпособНачисления 	= СтруктураЗаписи.СпособНачисления;
	
КонецПроцедуры

Функция ЗаписатьДокумент(Действие)
	
	Если Модифицированность
			ИЛИ ДокументОбъект.ЭтоНовый() Тогда
		
		Если Вопрос("Автоматически " + Действие + " можно только после записи документа. Записать?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Если Проведен Тогда
			ЗаписатьВФорме(РежимЗаписиДокумента.ОтменаПроведения);	
		КонецЕсли;
		
		ЗаписатьВФорме(РежимЗаписиДокумента.Запись);
		
	КонецЕсли;
	
	Возврат Истина;
 	
КонецФункции

Функция СпроситьОбИзменении(ДатаНачалаОкончания)
	
	Ответ = Вопрос("Выровнять сроки аренды на дату " + ДатаНачалаОкончания + "?", РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет, "Вопрос");
	
	Возврат (Ответ = КодВозвратаДиалога.Да);
	
КонецФункции

Процедура УстановитьДоступностьПоДопПравам()
	
	ПолныеПраваНаДокументыАренды = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.ДоступКДокументамАренды, Ложь);
	
	Если ПолныеПраваНаДокументыАренды = Ложь
			И НЕ РольДоступна("ПолныеПрава") Тогда
		Для Каждого ТекЭлемент Из ЭлементыФормы Цикл
			Попытка
				ТекЭлемент.ТолькоПросмотр 	= Истина;
			Исключение
				ТекЭлемент.Доступность 		= Ложь;				
			КонецПопытки;
		КонецЦикла;
		ЭлементыФормы.Панель.Доступность 				= Истина;
		ЭлементыФормы.ОсновныеДействияФормы.Доступность = Истина;
		ПраваНаРедактированиеДоговора = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.МожетРедактироватьДоговораВДокументахАренды, Ложь);
		ЭлементыФормы.НадписьДоговорАренды.Доступность 	= ПраваНаРедактированиеДоговора;
		ЭлементыФормы.ДоговорАренды.ТолькоПросмотр 		= НЕ ПраваНаРедактированиеДоговора;
	КонецЕсли;
	
КонецПроцедуры


Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	//+++АК sils 08.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Расторжение договора аренды");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	
	//+++ak ziga ИП-00015987 2017111201
	Если Не ЭтоНовый() Тогда
	Если Не ДоговорКонтрагента=Справочники.ДоговорыКонтрагентов.ПустаяСсылка() Тогда
		Аренда=?(ДоговорКонтрагента.ТипДоговора=Перечисления.ТипыДоговоровСПоставщиком.Аренда,Истина,Ложь);	
		//НаименованиеДопПрава="Доступ к документам аренды";	
		МассивПраваАренда=УправлениеДопПравамиПользователей.ПрочитатьЗначениеПраваПользователя(ПланыВидовХарактеристик.ПраваПользователей.ДоступКДокументамАренды,Ложь,ПараметрыСеанса.ТекущийПользователь);	
		ПравоАренда=МассивПраваАренда[0];
		//НаименованиеДопПрава="Может редактировать договора в документах аренды";	
		МассивПраваНаИзменениеДоговора=УправлениеДопПравамиПользователей.ПрочитатьЗначениеПраваПользователя(ПланыВидовХарактеристик.ПраваПользователей.МожетРедактироватьДоговораВДокументахАренды,Ложь,ПараметрыСеанса.ТекущийПользователь);	
		ПравоИзменениеДоговора=МассивПраваНаИзменениеДоговора[0];
		
		Если не РольДоступна("ПолныеПрава") Тогда
			Если Аренда Тогда
				//Отказ=Не ПравоАренда;
				ЭтаФорма.ТолькоПросмотр=Не ПравоАренда;
				ЭлементыФормы.ДоговорАренды.Доступность=ПравоИзменениеДоговора;
				Если Не ПравоАренда Тогда
					Сообщить("Нет доступа изменения документов аренды");
				КонецЕсли;
				
			КонецЕсли;		
		КонецЕсли;
	КонецЕсли;
	КонецЕсли;
	//---ak ziga ИП-00015987 2017111201	
	УстановитьКнопкиПечати();

КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, );
    КонецЕсли;
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", ЭтотОбъект, ЭтаФорма);
	мКонтрагент = Контрагент;
	
	//
	УстановитьДоступностьПоДопПравам();

	//+++АК sils 08.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(ЭтоНовый(), "Новый документ", "" + ЭтотОбъект));
	//---АК
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
		Если ПостояннаяЧастьАренднойПлаты.Количество() = 0
			И ПеременнаяЧастьАренднойПлаты.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнена ни одна табличная часть. Нажмине кнопку ""Заполнить""");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);

КонецПроцедуры


Процедура АрендаторПриИзменении(Элемент)
	
	Если НЕ мКонтрагент = Контрагент Тогда
		ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		Если НЕ ДокументОснование.Контрагент = Контрагент Тогда
			ДокументОснование = Документы.ЗаключениеДоговораАренды.ПустаяСсылка();
		КонецЕсли;
		// Выполняем общие действия для всех документов при изменении Контрагент.
		ЗаполнениеДокументов.ПриИзмененииЗначенияКонтрагента(ЭтотОбъект);
		
		Если ЗначениеЗаполнено(ДоговорКонтрагента)
				И НЕ ДоговорКонтрагента.ТипДоговора = Перечисления.ТипыДоговоровСПоставщиком.Аренда Тогда
			ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		КонецЕсли;
		мКонтрагент = Контрагент;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДоговорАрендыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбщиеПроцедуры.ВыборАрендногоДоговораКонтрагента(ЭтотОбъект);
	
КонецПроцедуры

Процедура ДоговорАрендыПриИзменении(Элемент)
	
	Если НЕ ДокументОснование.ДоговорКонтрагента = ДоговорКонтрагента Тогда
		ДокументОснование = Документы.ЗаключениеДоговораАренды.ПустаяСсылка();
	КонецЕсли;
	
	ОбъектАренды = ДоговорКонтрагента.ОбъектАренды;
	ОбъектАрендыОбработкаВыбора(Неопределено, ДоговорКонтрагента, Истина);
	
КонецПроцедуры

Процедура ОбъектАрендыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Для Каждого Строка Из ПостояннаяЧастьАренднойПлаты Цикл
		Строка.Количество = ВыбранноеЗначение.ЗначениеХарактеристики;
		ОбновитьСтавку(Строка, ВыбранноеЗначение, Строка.Услуга);
	КонецЦикла;
	
	Для Каждого Строка Из ПеременнаяЧастьАренднойПлаты Цикл
		Строка.Количество = ВыбранноеЗначение.ЗначениеХарактеристики;
		ОбновитьСтавку(Строка, ВыбранноеЗначение, Строка.Услуга);
	КонецЦикла;
	
КонецПроцедуры

Процедура ДокументОснованиеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Документы.ЗаключениеДоговораАренды.ПолучитьФормуВыбора(, Элемент);
	ФормаВыбора.Отбор.Контрагент.Установить(Контрагент, ЗначениеЗаполнено(Контрагент));
	ФормаВыбора.Отбор.ДоговорКонтрагента.Установить(ДоговорКонтрагента, ЗначениеЗаполнено(ДоговорКонтрагента));
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура ДокументОснованиеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДокументОснование, "Контрагент, ДоговорКонтрагента");
	КонецЕсли;
	
КонецПроцедуры


Процедура ПостояннаяЧастьАренднойПлатыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Услуга) Тогда
		ДанныеСтроки.Услуга = Константы.УслугаАренда.Получить();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДанныеСтроки.СпособНачисления) Тогда
		ДанныеСтроки.СпособНачисления = Константы.ОсновнойСпособНачисленияАрендойПлаты.Получить();
	КонецЕсли;
	
	ОформлениеСтроки.Ячейки.Сумма.УстановитьТекст(ОбщегоНазначения.ФорматСумм(ОбщиеПроцедуры.ПолучитьСтавку(ДанныеСтроки.Ставка) * ?(ДанныеСтроки.СпособНачисления.ЗаОбъектВЦелом, 1, ДанныеСтроки.Количество)));

КонецПроцедуры

Процедура ПостояннаяЧастьАренднойПлатыУслугаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекСтрока = ЭлементыФормы.ПостояннаяЧастьАренднойПлаты.ТекущаяСтрока;
	
	ОбщиеПроцедуры.ВыборУслуги(ТекСтрока, Истина);
	ОбновитьСтавку(ТекСтрока, ОбъектАренды, ТекСтрока.Услуга);
	
КонецПроцедуры

Процедура ПостояннаяЧастьАренднойПлатыУслугаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекСтрока = ЭлементыФормы.ПостояннаяЧастьАренднойПлаты.ТекущаяСтрока;
	
	ТекСтрока.Количество = ОбъектАренды.ЗначениеХарактеристики;
	ОбновитьСтавку(ТекСтрока, ВыбранноеЗначение, ТекСтрока.Услуга);
	
КонецПроцедуры

Процедура ПостояннаяЧастьАренднойПлатыСпособНачисленияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекСтрока = ЭлементыФормы.ПостояннаяЧастьАренднойПлаты.ТекущаяСтрока;
	ОбщиеПроцедуры.ВыборСпособаНачисления(ТекСтрока);
	
КонецПроцедуры


Процедура ПеременнаяЧастьАренднойПлатыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если НЕ ЗначениеЗаполнено(ДанныеСтроки.СпособНачисления) Тогда
		ДанныеСтроки.СпособНачисления = Константы.ОсновнойСпособНачисленияАрендойПлаты.Получить();
	КонецЕсли;
	
	ОформлениеСтроки.Ячейки.Сумма.УстановитьТекст(ОбщегоНазначения.ФорматСумм(ОбщиеПроцедуры.ПолучитьСтавку(ДанныеСтроки.Ставка) *
													?(ДанныеСтроки.СпособНачисления.ЗаОбъектВЦелом, 1, ДанныеСтроки.Количество)));
	
КонецПроцедуры

Процедура ПеременнаяЧастьАренднойПлатыУслугаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекСтрока = ЭлементыФормы.ПеременнаяЧастьАренднойПлаты.ТекущаяСтрока;
	
	ОбщиеПроцедуры.ВыборУслуги(ТекСтрока,Ложь);
	ТекСтрока.Ставка = ТекСтрока.Услуга.Ставка;
	
КонецПроцедуры

Процедура ПеременнаяЧастьАренднойПлатыУслугаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекСтрока = ЭлементыФормы.ПеременнаяЧастьАренднойПлаты.ТекущаяСтрока;
	
	ТекСтрока.Количество = ОбъектАренды.ЗначениеХарактеристики;
	ОбновитьСтавку(ТекСтрока, ВыбранноеЗначение, ТекСтрока.Услуга);
	
КонецПроцедуры

Процедура ДействияФормыИсторияВерсий(Кнопка)
	
	ИсторияИзменений = Отчеты.ИсторияИзмененийОбъектов.Создать();
	ИсторияИзменений.СсылкаНаОбъект = ЭтотОбъект.Ссылка;
	
	Форма = ИсторияИзменений.ПолучитьФорму("ФормаОтчета");
	Форма.СформироватьТаблицуВерсий();
	Форма.Открыть();

КонецПроцедуры
