
Процедура ЗаполнитьТабличныеЧасти() Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДокументОснование) Тогда
		Сообщить("Необходимо выбрать документ основание!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	Если ПеременнаяЧастьАренднойПлаты.Количество() + ПостояннаяЧастьАренднойПлаты.Количество() > 0 Тогда
		#Если Клиент Тогда
			Если Вопрос("Табличные части будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет) = КодВозвратаДиалога.Да Тогда
				ПостояннаяЧастьАренднойПлаты.Очистить();
				ПеременнаяЧастьАренднойПлаты.Очистить();
			Иначе
				Возврат;
			КонецЕсли;
		#Иначе
			ПостояннаяЧастьАренднойПлаты.Очистить();
			ПеременнаяЧастьАренднойПлаты.Очистить();
		#КонецЕсли
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаОкончания"		, ДатаОкончанияДоговора);
	Запрос.УстановитьПараметр("ЗаключениеДоговора"	, ДокументОснование);
	Запрос.УстановитьПараметр("МоментВремени"		, Новый Граница(МоментВремени(), ВидГраницы.Исключая));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УслугиПоДоговорамАрендыСрезПоследних.Услуга,
	|	УслугиПоДоговорамАрендыСрезПоследних.ОбъектАренды,
	|	СтатусыДоговоровАрендыСрезПоследних.ДатаНачалаАренды КАК ДатаНачалаСрокаАренды,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАрендыСрезПоследних.ДатаОкончанияАренды < &ДатаОкончания
	|			ТОГДА СтатусыДоговоровАрендыСрезПоследних.ДатаОкончанияАренды
	|		ИНАЧЕ &ДатаОкончания
	|	КОНЕЦ КАК ДатаОкончанияСрокаАренды,
	|	УслугиПоДоговорамАрендыСрезПоследних.Ставка КАК Ставка,
	|	УслугиПоДоговорамАрендыСрезПоследних.СпособНачисления,
	//|	ВЫБОР
	//|		КОГДА УслугиПоДоговорамАрендыСрезПоследних.СпособНачисления.ЗаОбъектВЦелом
	//|			ТОГДА 1
	//|		ИНАЧЕ УслугиПоДоговорамАрендыСрезПоследних.Площадь
	//|	КОНЕЦ КАК Количество,
	|	УслугиПоДоговорамАрендыСрезПоследних.Площадь КАК Количество,
	//|	УслугиПоДоговорамАрендыСрезПоследних.Услуга.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	УслугиПоДоговорамАрендыСрезПоследних.СтавкаНДС,
	|	УслугиПоДоговорамАрендыСрезПоследних.ФормаОплаты
	|ИЗ
	|	РегистрСведений.УслугиПоДоговорамАренды.СрезПоследних(
	|			&МоментВремени,
	|			ЗаключениеДоговора = &ЗаключениеДоговора
	|				И Услуга.ПостояннаяЧастьОплаты = &ПостояннаяЧасть) КАК УслугиПоДоговорамАрендыСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДоговоровАренды.СрезПоследних(&МоментВремени, ЗаключениеДоговора = &ЗаключениеДоговора) КАК СтатусыДоговоровАрендыСрезПоследних
	|		ПО УслугиПоДоговорамАрендыСрезПоследних.Договор = СтатусыДоговоровАрендыСрезПоследних.Договор";
	
	//АК БЕЛН 23.05.2016++
	Запрос.УстановитьПараметр("Док"	, Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УслугиПоДоговорамАрендыСрезПоследних.Услуга,
	|	УслугиПоДоговорамАрендыСрезПоследних.ОбъектАренды,
	|	УслугиПоДоговорамАрендыСрезПоследних.Ставка КАК Ставка,
	|	УслугиПоДоговорамАрендыСрезПоследних.СпособНачисления,
	|	УслугиПоДоговорамАрендыСрезПоследних.Площадь КАК Количество,
	|	УслугиПоДоговорамАрендыСрезПоследних.СтавкаНДС,
	|	УслугиПоДоговорамАрендыСрезПоследних.ФормаОплаты,
	|	УслугиПоДоговорамАрендыСрезПоследних.Период,
	|	УслугиПоДоговорамАрендыСрезПоследних.Регистратор,
	|	УслугиПоДоговорамАрендыСрезПоследних.Договор
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.УслугиПоДоговорамАренды.СрезПоследних(
	|			&МоментВремени,
	|			ЗаключениеДоговора = &ЗаключениеДоговора
	|				И Услуга.ПостояннаяЧастьОплаты = &ПостояннаяЧасть
	|				И Регистратор <> &Док) КАК УслугиПоДоговорамАрендыСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт.Услуга,
	|	вт.ОбъектАренды,
	|	МАКСИМУМ(вт.Период) КАК Период
	|ПОМЕСТИТЬ втМаксПериод
	|ИЗ
	|	вт КАК вт
	|
	|СГРУППИРОВАТЬ ПО
	|	вт.Услуга,
	|	вт.ОбъектАренды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт.Услуга,
	|	вт.ОбъектАренды,
	|	вт.Регистратор,
	|	вт.Период
	|ПОМЕСТИТЬ втОтборПоМаксПериоду
	|ИЗ
	|	вт КАК вт
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМаксПериод КАК втМаксПериод
	|		ПО вт.ОбъектАренды = втМаксПериод.ОбъектАренды
	|			И вт.Услуга = втМаксПериод.Услуга
	|			И вт.Период = втМаксПериод.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОтборПоМаксПериоду.Услуга,
	|	втОтборПоМаксПериоду.ОбъектАренды,
	|	МАКСИМУМ(втОтборПоМаксПериоду.Регистратор) КАК Регистратор,
	|	втОтборПоМаксПериоду.Период
	|ПОМЕСТИТЬ втМаксРегистратор
	|ИЗ
	|	втОтборПоМаксПериоду КАК втОтборПоМаксПериоду
	|
	|СГРУППИРОВАТЬ ПО
	|	втОтборПоМаксПериоду.Услуга,
	|	втОтборПоМаксПериоду.ОбъектАренды,
	|	втОтборПоМаксПериоду.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт.Услуга,
	|	вт.ОбъектАренды,
	|	вт.Ставка,
	|	вт.СпособНачисления,
	|	вт.Количество,
	|	вт.СтавкаНДС,
	|	вт.Договор,
	|	вт.ФормаОплаты
	|ПОМЕСТИТЬ втИтог
	|ИЗ
	|	втМаксРегистратор КАК втМаксРегистратор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт КАК вт
	|		ПО втМаксРегистратор.Услуга = вт.Услуга
	|			И втМаксРегистратор.ОбъектАренды = вт.ОбъектАренды
	|			И втМаксРегистратор.Период = вт.Период
	|			И втМаксРегистратор.Регистратор = вт.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втИтог.Услуга,
	|	втИтог.ОбъектАренды,
	|	СтатусыДоговоровАрендыСрезПоследних.ДатаНачалаАренды КАК ДатаНачалаСрокаАренды,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАрендыСрезПоследних.ДатаОкончанияАренды < &ДатаОкончания
	|			ТОГДА СтатусыДоговоровАрендыСрезПоследних.ДатаОкончанияАренды
	|		ИНАЧЕ &ДатаОкончания
	|	КОНЕЦ КАК ДатаОкончанияСрокаАренды,
	|	втИтог.Ставка,
	|	втИтог.СпособНачисления,
	|	втИтог.Количество,
	|	втИтог.СтавкаНДС,
	|	втИтог.ФормаОплаты
	|ИЗ
	|	втИтог КАК втИтог
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДоговоровАренды.СрезПоследних(
	|				&МоментВремени,
	|				ЗаключениеДоговора = &ЗаключениеДоговора
	|					И Регистратор <> &Док) КАК СтатусыДоговоровАрендыСрезПоследних
	|		ПО втИтог.Договор = СтатусыДоговоровАрендыСрезПоследних.Договор";
	//АК БЕЛН 23.05.2016--
	
	Запрос.УстановитьПараметр("ПостояннаяЧасть", Истина);
	ПостояннаяЧастьАренднойПлаты.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Запрос.УстановитьПараметр("ПостояннаяЧасть", Ложь);
	ПеременнаяЧастьАренднойПлаты.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Функция СформироватьЗапросПоШапке()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасторжениеДоговораАренды.Ссылка,
	|	РасторжениеДоговораАренды.Дата,
	|	РасторжениеДоговораАренды.Организация,
	|	РасторжениеДоговораАренды.Контрагент,
	|	РасторжениеДоговораАренды.ДоговорКонтрагента,
	|	РасторжениеДоговораАренды.ДатаЗаключенияДоговора,
	|	РасторжениеДоговораАренды.ДатаОкончанияДоговора,
	|	РасторжениеДоговораАренды.ДокументОснование
	|ИЗ
	|	Документ.РасторжениеДоговораАренды КАК РасторжениеДоговораАренды
	|ГДЕ
	|	РасторжениеДоговораАренды.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Возврат Запрос.Выполнить().Выбрать();
КонецФункции

Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	СтруктураОбязательныхПолей = Новый Структура("Организация, Контрагент, ДоговорКонтрагента, ДатаОкончанияДоговора");
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	Если СтруктураШапкиДокумента.ДатаЗаключенияДоговора>СтруктураШапкиДокумента.ДатаОкончанияДоговора Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Дата заключения договора превышает дату окончания действия договора",Отказ,Заголовок);
	КонецЕсли;
	
	Если ДатаЗаключенияДоговора>ДатаОкончанияДоговора Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Дата заключения договора превышает дату окончания действия договора",Отказ,Заголовок);
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьЗаполнениеТабличнойЧасти(ИмяТабличнойЧасти, СтруктураШапкиДокумента, Отказ, Заголовок)
    
   	ПостояннаяЧасть = (ИмяТабличнойЧасти = "ПостояннаяЧастьАренднойПлаты");
	ПредставлениеТабличнойЧасти = ЭтотОбъект.Метаданные().ТабличныеЧасти[ИмяТабличнойЧасти].Представление();
	
	// Теперь вызовем общую процедуру проверки.
    СтруктураОбязательныхПолей = Новый Структура("Услуга, Количество, СпособНачисления, СтавкаНДС, ФормаОплаты");
   	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, ИмяТабличнойЧасти, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	
	//// Проверим что нет услуг которые не заключали
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("ЗаключениеДоговора", ДокументОснование);
	//Запрос.УстановитьПараметр("ВАренде", Перечисления.СтатусыОбъектовАренды.ВАренде);
	//Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	//Запрос.УстановитьПараметр("ПостояннаяЧасть", ПостояннаяЧасть);
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	СтатусыОбъектовАрендыСрезПоследних.Услуга,
	//|	СтатусыОбъектовАрендыСрезПоследних.ОбъектАренды
	//|ИЗ
	//|	РегистрСведений.СтатусыОбъектовАренды.СрезПоследних(&МоментВремени, ЗаключениеДоговора = &ЗаключениеДоговора) КАК СтатусыОбъектовАрендыСрезПоследних
	//|ГДЕ
	//|	СтатусыОбъектовАрендыСрезПоследних.Статус = &ВАренде
	//|	И СтатусыОбъектовАрендыСрезПоследних.Услуга.ПостояннаяЧастьОплаты = &ПостояннаяЧасть";
	//Выборка = Запрос.Выполнить().Выбрать();

	//Отбор = Новый Структура("ОбъектАренды, Услуга");
	//Для Каждого Стр Из ЭтотОбъект[ИмяТабличнойЧасти] Цикл
	//	Выборка.Сбросить();
	//	Отбор.ОбъектАренды = ОбъектАренды;
	//	Отбор.Услуга = Стр.Услуга;
	//	Если Не Выборка.НайтиСледующий(Отбор) Тогда
	//		СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(Стр.НомерСтроки) +
	//								   """ табличной части """ + ПредставлениеТабличнойЧасти + """: ";
	//								   
	//		СтрокаСообщения = "услуга """ + Стр.Услуга + """ по объекту аренды """ + ОбъектАренды + """ не была заключена договором!";							   
	//		ОбщегоНазначения.ОшибкаПриПроведении(СтрокаНачалаСообщенияОбОшибке + СтрокаСообщения, Отказ, Заголовок);
	//	КонецЕсли;
	//КонецЦикла;
		
		
КонецПроцедуры

// Проверим, возможно договор уже расторгнут
Процедура ПроверитьРасторжениеДоговора(Отказ, Заголовок)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗаключениеДоговора", ДокументОснование);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтатусыДоговоровАрендыСрезПоследних.Регистратор
	|ИЗ
	|	РегистрСведений.СтатусыДоговоровАренды.СрезПоследних(&МоментВремени, ЗаключениеДоговора = &ЗаключениеДоговора) КАК СтатусыДоговоровАрендыСрезПоследних
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(СтатусыДоговоровАрендыСрезПоследних.Регистратор) = ТИП(Документ.РасторжениеДоговораАренды)";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Отказ = Истина;
		СтрокаСообщения = "Данное заключение договора уже расторгнуто документом """ + Выборка.Регистратор + """!";							   
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаСообщения, Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента)
	
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("ДатаОкончания", ДокументОснование.ДатаОкончанияДоговора);
	//Если ТипЗнч(ДокументОснование)=Тип("ДокументСсылка.ДополнительноеСоглашение")
	//	ИЛИ ТипЗнч(ДокументОснование)=Тип("ДокументСсылка.РасторжениеДоговораАренды") Тогда
	//	Запрос.УстановитьПараметр("ЗаключениеДоговора", ДокументОснование.ДокументОснование);
	//КонецЕсли;
	//Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	//Запрос.Текст =
	//"ВЫБРАТЬ
	//|	СтатусыОбъектовАрендыСрезПоследних.Услуга,
	//|	СтатусыОбъектовАрендыСрезПоследних.ОбъектАренды,
	//|	СтатусыОбъектовАрендыСрезПоследних.ДатаНачалаАренды,
	//|	ВЫБОР
	//|		КОГДА СтатусыОбъектовАрендыСрезПоследних.ДатаОкончанияАренды < &ДатаОкончания
	//|			ТОГДА СтатусыОбъектовАрендыСрезПоследних.ДатаОкончанияАренды
	//|		ИНАЧЕ &ДатаОкончания
	//|	КОНЕЦ КАК ДатаОкончанияАренды,
	//|	СтатусыОбъектовАрендыСрезПоследних.ЗаключениеДоговора,
	//|	СтатусыОбъектовАрендыСрезПоследних.Договор,
	//|	СтатусыОбъектовАрендыСрезПоследних.Статус,
	//|	СтатусыОбъектовАрендыСрезПоследних.ФормаОплаты
	//|ИЗ
	//|	РегистрСведений.СтатусыОбъектовАренды.СрезПоследних(&МоментВремени, ЗаключениеДоговора = &ЗаключениеДоговора) КАК СтатусыОбъектовАрендыСрезПоследних
	//|ГДЕ
	//|	СтатусыОбъектовАрендыСрезПоследних.ДатаНачалаАренды < &ДатаОкончания";
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Запись = Движения.СтатусыОбъектовАренды.Добавить();
	//	Запись.Период = СтруктураШапкиДокумента.Дата;
	//	ЗаполнитьЗначенияСвойств(Запись, Выборка);
	//	Запись.Статус = Перечисления.СтатусыОбъектовАренды.Свободен;
	//	Запись.Документ = Ссылка;
	//КонецЦикла;
	
	//Запрос.Текст =
	//"ВЫБРАТЬ
	//|	УслугиПоДоговорамАрендыСрезПоследних.*
	//|ИЗ
	//|	РегистрСведений.УслугиПоДоговорамАрендыСрезПоследних.СрезПоследних(&МоментВремени, ЗаключениеДоговора = &ЗаключениеДоговора) КАК УслугиПоДоговорамАрендыСрезПоследнихСрезПоследних
	//|ГДЕ
	//|	СтатусыОбъектовАрендыСрезПоследних.Статус < ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровАренды.Действует)";
	//Выборка = Запрос.Выполнить().Выбрать();
	
	ТЗНачисления = ЭтотОбъект.ПостояннаяЧастьАренднойПлаты.ВыгрузитьКолонки();
	Для Каждого Строка Из ЭтотОбъект.ПостояннаяЧастьАренднойПлаты Цикл
		ЗаполнитьЗначенияСвойств(ТЗНачисления.Добавить(), Строка);
	КонецЦикла;
	Для Каждого Строка Из ЭтотОбъект.ПеременнаяЧастьАренднойПлаты Цикл
		ЗаполнитьЗначенияСвойств(ТЗНачисления.Добавить(), Строка);
	КонецЦикла;
	ТЗНачисления.Свернуть("Услуга, СпособНачисления, СтавкаНДС, ФормаОплаты", "Количество, Ставка");
	
	Для Каждого Строка Из ТЗНачисления Цикл
		Движение = Движения.УслугиПоДоговорамАренды.Добавить();
		Движение.Период 			= ?(ЗначениеЗаполнено(ЭтотОбъект.ДатаАкта), ЭтотОбъект.ДатаАкта, НачалоДня(ЭтотОбъект.Дата));
		Движение.Организация 		= ЭтотОбъект.Организация;
		Движение.Контрагент 		= ЭтотОбъект.Контрагент;
		Движение.Договор 			= ЭтотОбъект.ДоговорКонтрагента;
		Движение.ОбъектАренды 		= ЭтотОбъект.ОбъектАренды;
		Движение.Услуга 			= Строка.Услуга;
		Движение.Ставка 			= Строка.Ставка;
		Движение.СпособНачисления 	= Строка.СпособНачисления;
		Движение.Площадь 			= Строка.Количество;
		Движение.СтавкаНДС 			= Строка.СтавкаНДС;
		Движение.ФормаОплаты 		= Строка.ФормаОплаты;
		Движение.Ставка 			= Строка.Ставка;
		Движение.Статус 			= Перечисления.СтатусыДоговоровКонтрагентов.Расторгнут;
		Движение.ЗаключениеДоговора = ЭтотОбъект.ДокументОснование;
		Движение.Документ 			= ЭтотОбъект.Ссылка;
	КонецЦикла;
	
	//
	//Для Каждого Строка Из ПостояннаяЧастьАренднойПлаты Цикл
	//	ТЗДни = ПроцедурыНачисления.ПолучитьСуммыАрендыПоДням(?(ЗначениеЗаполнено(ДатаАкта), ДатаАкта, ДатаЗаключенияДоговора), ДатаОкончанияДоговора, ДоговорКонтрагента, ВалютаСпособаНачисления, Строка.СпособНачисления, Строка.Количество, Строка.Ставка);
	//	Для Каждого СтрокаДень Из ТЗДни Цикл
	//		Движение = Движения.ПланируемыеПлатежиПоДоговорамАренды.Добавить();
	//		Движение.Период = Дата;
	//		Движение.Дата = СтрокаДень.Дата;
	//		Движение.Организация = Организация;
	//		Движение.Контрагент = Контрагент;
	//		Движение.Договор = ДоговорКонтрагента;
	//		Движение.ОбъектАренды = ОбъектАренды;
	//		Движение.Услуга = Строка.Услуга;
	//		Движение.Ставка = Строка.Ставка;
	//		Движение.СпособНачисления = Строка.СпособНачисления;
	//		Движение.Площадь = Строка.Количество;
	//		Движение.СтавкаНДС = Строка.СтавкаНДС;
	//		Движение.ФормаОплаты = Строка.ФормаОплаты;
	//		Движение.Ставка = Строка.Ставка;
	//		Движение.Сумма = СтрокаДень.Сумма;
	//		Движение.СуммаВал = СтрокаДень.СуммаВал;
	//		Движение.ЗаключениеДоговора = Ссылка;
	//		Движение.Документ = Ссылка;
	//	КонецЦикла;
	//КонецЦикла;
	//Для Каждого Строка Из ПеременнаяЧастьАренднойПлаты Цикл
	//	ТЗДни = ПроцедурыНачисления.ПолучитьСуммыАрендыПоДням(?(ЗначениеЗаполнено(ДатаАкта), ДатаАкта, ДатаЗаключенияДоговора), ДатаОкончанияДоговора, ДоговорКонтрагента, ВалютаСпособаНачисления, Строка.СпособНачисления, Строка.Количество, Строка.Ставка);
	//	Для Каждого СтрокаДень Из ТЗДни Цикл
	//		Движение = Движения.ПланируемыеПлатежиПоДоговорамАренды.Добавить();
	//		Движение.Период = Дата;
	//		Движение.Дата = СтрокаДень.Дата;
	//		Движение.Организация = Организация;
	//		Движение.Контрагент = Контрагент;
	//		Движение.Договор = ДоговорКонтрагента;
	//		Движение.ОбъектАренды = ОбъектАренды;
	//		Движение.Услуга = Строка.Услуга;
	//		Движение.Ставка = Строка.Ставка;
	//		Движение.СпособНачисления = Строка.СпособНачисления;
	//		Движение.Площадь = Строка.Количество;
	//		Движение.СтавкаНДС = Строка.СтавкаНДС;
	//		Движение.ФормаОплаты = Строка.ФормаОплаты;
	//		Движение.Ставка = Строка.Ставка;
	//		Движение.Сумма = СтрокаДень.Сумма;
	//		Движение.СуммаВал = СтрокаДень.СуммаВал;
	//		Движение.ЗаключениеДоговора = Ссылка;
	//		Движение.Документ = Ссылка;
	//	КонецЦикла;
	//КонецЦикла;
	
	Запись = Движения.СтатусыДоговоровАренды.Добавить();
	Запись.Период 				= НачалоДня(ЭтотОбъект.Дата);
	Запись.Договор 				= ЭтотОбъект.ДоговорКонтрагента;
	Запись.ОбъектАренды 		= ЭтотОбъект.ОбъектАренды;
	Запись.Статус 				= Перечисления.СтатусыДоговоровКонтрагентов.Расторгнут;
	Запись.ДатаНачалаАренды 	= ?(ЗначениеЗаполнено(ДокументОснование.ДатаАкта), ДокументОснование.ДатаАкта, ДокументОснование.ДатаЗаключенияДоговора);
	Запись.ДатаОкончанияАренды 	= ЭтотОбъект.ДатаОкончанияДоговора;
	Запись.Документ 			= ЭтотОбъект.Ссылка;
	Запись.ЗаключениеДоговора 	= ЭтотОбъект.ДокументОснование;
    Запись.СрокУведомленияОПерезаключении = ЭтотОбъект.ДокументОснование.СрокУведомленияОПерезаключении;
	
	Запись = Движения.ДепозитыПоДоговорамАренды.Добавить();
	Запись.Период 				= НачалоДня(ЭтотОбъект.Дата);
	Запись.Контрагент 			= ЭтотОбъект.Контрагент;
	Запись.ДоговорКонтрагента 	= ЭтотОбъект.ДоговорКонтрагента;
	Запись.УчитыватьЗалог 		= Ложь;
	
КонецПроцедуры


Процедура ОбработкаЗаполнения(Основание)
	
	Если Основание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.ДокументОснование = Основание;
		
	СтрокаСвойств = "Организация, Контрагент, ОбъектАренды, ДоговорКонтрагента, ДатаЗаключенияДоговора, ДатаОкончанияДоговора";
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Основание, СтрокаСвойств,);
	Если ЗначениеЗаполнено(ДатаОкончанияДоговора) Тогда
		ЗаполнитьТабличныеЧасти();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Отказ = Ложь;
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	ПроверитьРасторжениеДоговора(Отказ, Заголовок);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// Проверим заполнение обязательных полей в шапке документа
	СтруктураШапкиДокумента = СформироватьЗапросПоШапке();
	СтруктураШапкиДокумента.Следующий();
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);
		
	// Проверим заполнение табличных частей
	ПроверитьЗаполнениеТабличнойЧасти("ПостояннаяЧастьАренднойПлаты", СтруктураШапкиДокумента, Отказ, Заголовок);
	ПроверитьЗаполнениеТабличнойЧасти("ПеременнаяЧастьАренднойПлаты", СтруктураШапкиДокумента, Отказ, Заголовок);

	Если НЕ Отказ Тогда
		ДвиженияПоРегистрам(СтруктураШапкиДокумента);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
			
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);

КонецПроцедуры


//========= ПРОЦЕДУРЫ ПЕЧАТИ

#Если Клиент Тогда
Функция ПечатьСоглашения()

	САрендатором = (ЭтотОбъект.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасторжениеДоговораАренды.Контрагент КАК Контрагент,
	|	РасторжениеДоговораАренды.Организация КАК Организация,
	|	РасторжениеДоговораАренды.Организация.НаименованиеПолное КАК ПолноеНаименованиеОрганизации,
	|	РасторжениеДоговораАренды.Организация.НаименованиеСокращенное КАК СокращенноеНаименованиеОрганизации,
	|	РасторжениеДоговораАренды.Контрагент.НаименованиеПолное КАК ПолноеНаименованиеКонтрагента,
	|	ВЫБОР
	|		КОГДА РасторжениеДоговораАренды.Контрагент.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КонтрагентЯвляетсяФЛ,
	|	РасторжениеДоговораАренды.Контрагент.ГенеральныйДиректор КАК РуководительКонтрагента,
	|	РасторжениеДоговораАренды.Контрагент.НаОсновании КАК КонтрагентНаОсновании,
	|	РасторжениеДоговораАренды.ДоговорКонтрагента КАК Договор,
	|	РасторжениеДоговораАренды.ДатаОкончанияДоговора КАК ДатаРасторжения,
	|	РасторжениеДоговораАренды.ДоговорКонтрагента.Дата КАК ДатаСоглашения,
	|	РасторжениеДоговораАренды.ДоговорКонтрагента.Номер КАК НомерСоглашения,
	|	РасторжениеДоговораАренды.ОбъектАренды.РасположениеОбъекта КАК АдресОбъектаАренды,
	|	РасторжениеДоговораАренды.ОбъектАренды.ЗначениеХарактеристики КАК ПлощадьПомещения,
	|	РасторжениеДоговораАренды.ОбъектАренды.ЕдиницаИзмерения КАК ЕдиницаПлощадиПомещения,
	|	РасторжениеДоговораАренды.Дата
	|ИЗ
	|	Документ.РасторжениеДоговораАренды КАК РасторжениеДоговораАренды
	|ГДЕ
	|	РасторжениеДоговораАренды.Ссылка = &Ссылка";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	//
	Макет = ПолучитьМакет("СоглашениеОРасторжении" + ?(САрендатором, "", "_2"));
	
	Макет.Параметры.Заполнить(Шапка);
	Макет.Параметры.ДатаРасторжения = Формат(Шапка.ДатаРасторжения	, "ДФ='д ММММ гггг'");
	
	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Шапка.Организация, Шапка.Дата);
	Макет.Параметры.РуководительОрганизации = Руководители.Руководитель;
	
	Макет.Параметры.РуководительКонтрагентаРодительныйПадеж =
		?(Шапка.КонтрагентЯвляетсяФЛ, "", ", в лице Генерального директора " + ОбщегоНазначения.ПадежФИО(Шапка.РуководительКонтрагента, 2));
	Если НЕ САрендатором Тогда
		Макет.Параметры.ДатаСоглашенияКратко 	= Формат(Шапка.ДатаСоглашения, "ДЛФ=Д") + "г.";
		Если ЗначениеЗаполнено(Руководители.Руководитель) Тогда
			Макет.Параметры.РуководительОрганизацииРодительныйПадеж = ОбщегоНазначения.ПадежФИО(Руководители.Руководитель, 2);
		КонецЕсли;
		Макет.Параметры.ПлощадьПомещения = ?(ЗначениеЗаполнено(Шапка.ПлощадьПомещения), Формат(Шапка.ПлощадьПомещения, "ЧГ="), "") + " " + Шапка.ЕдиницаПлощадиПомещения;
		СведенияОКонтрагенте = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.Дата);
		Макет.Параметры.РеквизитыКонтрагента 	= Шапка.ПолноеНаименованиеКонтрагента + Символы.ПС +
			СведенияОКонтрагенте.ЮридическийАдрес + Символы.ПС +
			СведенияОКонтрагенте.ФактическийАдрес + Символы.ПС +
			"ИНН " + СведенияОКонтрагенте.ИНН + Символы.ПС +
			"КПП " + СведенияОКонтрагенте.КПП + Символы.ПС +
			"р/с " + СведенияОКонтрагенте.НомерСчета + Символы.ПС +
			"Банк: " + СведенияОКонтрагенте.Банк + Символы.ПС +
			"БИК " + СведенияОКонтрагенте.БИК + Символы.ПС +
			"к/с " + СведенияОКонтрагенте.КоррСчет;
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		Макет.Параметры.РеквизитыОрганизации 	= Шапка.СокращенноеНаименованиеОрганизации + Символы.ПС +
			СведенияОбОрганизации.ЮридическийАдрес + Символы.ПС +
			СведенияОбОрганизации.ФактическийАдрес + Символы.ПС +
			"ИНН/КПП " + СведенияОбОрганизации.ИНН + "/" + СведенияОбОрганизации.КПП + Символы.ПС +
			"р/с " + СведенияОбОрганизации.НомерСчета + Символы.ПС +
			"Банк: " + СведенияОбОрганизации.Банк + Символы.ПС +
			"БИК " + СведенияОбОрганизации.БИК + Символы.ПС +
			"к/с " + СведенияОбОрганизации.КоррСчет;
		Макет.Параметры.ТекстАрендодателя 		= "Генеральный директор" + Символы.ПС + Шапка.РуководительКонтрагента;
		Макет.Параметры.ТекстАрендатора 		= ?(НЕ ЗначениеЗаполнено(Руководители.РуководительДолжность), "Генеральный директор", Руководители.РуководительДолжность) +
			Символы.ПС + Шапка.СокращенноеНаименованиеОрганизации;
	Иначе
		Макет.Параметры.ДатаСоглашения 			= Формат(Шапка.ДатаСоглашения, "ДФ='д ММММ гггг'");
	КонецЕсли;
	

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.Вывести(Макет);
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьПередаточногоАкта()
	
	САрендатором = (ЭтотОбъект.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасторжениеДоговораАренды.Контрагент КАК Контрагент,
	|	РасторжениеДоговораАренды.Организация КАК Организация,
	|	РасторжениеДоговораАренды.Организация.НаименованиеПолное КАК ПолноеНаименованиеОрганизации,
	|	РасторжениеДоговораАренды.Организация.НаименованиеСокращенное КАК СокращенноеНаименованиеОрганизации,
	|	РасторжениеДоговораАренды.Контрагент.НаименованиеПолное КАК ПолноеНаименованиеКонтрагента,
	|	ВЫБОР
	|		КОГДА РасторжениеДоговораАренды.Контрагент.ЮрФизЛицо = ЗНАЧЕНИЕ(Перечисление.ЮрФизЛицо.ФизЛицо)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК КонтрагентЯвляетсяФЛ,
	|	РасторжениеДоговораАренды.Контрагент.ГенеральныйДиректор КАК РуководительКонтрагента,
	|	РасторжениеДоговораАренды.Контрагент.НаОсновании КАК КонтрагентНаОсновании,
	|	РасторжениеДоговораАренды.ДоговорКонтрагента КАК Договор,
	|	РасторжениеДоговораАренды.ДатаОкончанияДоговора КАК ДатаРасторжения,
	|	РасторжениеДоговораАренды.ДоговорКонтрагента.Дата КАК ДатаСоглашения,
	|	РасторжениеДоговораАренды.ДоговорКонтрагента.Номер КАК НомерСоглашения,
	|	РасторжениеДоговораАренды.ДатаАкта КАК ДатаАкта,
	|	РасторжениеДоговораАренды.НомерАкта КАК НомерАкта,
	|	РасторжениеДоговораАренды.ОбъектАренды.РасположениеОбъекта КАК АдресОбъектаАренды,
	|	РасторжениеДоговораАренды.ОбъектАренды.ЗначениеХарактеристики КАК ПлощадьПомещения,
	|	РасторжениеДоговораАренды.ОбъектАренды.ЕдиницаИзмерения КАК ЕдиницаПлощадиПомещения,
	|	РасторжениеДоговораАренды.Дата
	|ИЗ
	|	Документ.РасторжениеДоговораАренды КАК РасторжениеДоговораАренды
	|ГДЕ
	|	РасторжениеДоговораАренды.Ссылка = &Ссылка";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Шапка.Организация, Шапка.Дата);
	
	//
	ТабДокумент = Новый ТабличныйДокумент;
	Если НЕ САрендатором Тогда
		Макет = ПолучитьМакет("АктПриемаВозвратаПомещения");
		Макет.Параметры.Заполнить(Шапка);
		Макет.Параметры.РуководительКонтрагентаРодительныйПадеж =
			?(Шапка.КонтрагентЯвляетсяФЛ, "", ", в лице Генерального директора " + ОбщегоНазначения.ПадежФИО(Шапка.РуководительКонтрагента, 2));
		Макет.Параметры.ДатаРасторжения = Формат(Шапка.ДатаРасторжения, "ДФ='д ММММ гггг'");
		
		Макет.Параметры.РуководительОрганизации = Руководители.Руководитель;
		Макет.Параметры.ДатаСоглашенияКратко 	= Формат(Шапка.ДатаСоглашения, "ДЛФ=Д") + "г.";
		Если ЗначениеЗаполнено(Руководители.Руководитель) Тогда
			Макет.Параметры.РуководительОрганизацииРодительныйПадеж = ОбщегоНазначения.ПадежФИО(Руководители.Руководитель, 2);
		КонецЕсли;
		Макет.Параметры.ПлощадьПомещения = ?(ЗначениеЗаполнено(Шапка.ПлощадьПомещения), Формат(Шапка.ПлощадьПомещения, "ЧГ="), "") + " " + Шапка.ЕдиницаПлощадиПомещения;
		Макет.Параметры.ТекстАрендодателя 		= "Генеральный директор" + Символы.ПС + Шапка.РуководительКонтрагента;
		Макет.Параметры.ТекстАрендатора 		= ?(НЕ ЗначениеЗаполнено(Руководители.РуководительДолжность), "Генеральный директор", Руководители.РуководительДолжность) +
			Символы.ПС + Шапка.СокращенноеНаименованиеОрганизации;
		ТабДокумент.Вывести(Макет);
	Иначе
		Макет = ПолучитьМакет("ПередаточныйАктВозврат");
		
		Область = Макет.ПолучитьОбласть("Заголовок");
		
		//только для первого листа выводим текст "Приложение 1"
		Область.Параметры.Заполнить(Шапка);
		Область.Параметры.РуководительКонтрагентаРодительныйПадеж =
			?(Шапка.КонтрагентЯвляетсяФЛ, "", ", в лице Генерального директора " + ОбщегоНазначения.ПадежФИО(Шапка.РуководительКонтрагента, 2));
		Область.Параметры.ДатаАкта = Формат(Шапка.ДатаАкта, "ДФ='д ММММ гггг'");
		
		Область.Параметры.РуководительОрганизации = Руководители.Руководитель;
		
		ТабДокумент.Вывести(Область);
		
		
		//теперь для каждого объекта заполняем таблицу
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбъектыАренды.ОбъектАренды,
		|	ОбъектыАренды.Количество КАК Площадь,
		|	ОбъектыАренды.ДатаОкончанияАренды
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		РасторжениеДоговораАрендыПостояннаяЧастьАренднойПлаты.Ссылка.ОбъектАренды КАК ОбъектАренды,
		|		РасторжениеДоговораАрендыПостояннаяЧастьАренднойПлаты.Количество КАК Количество,
		|		РасторжениеДоговораАрендыПостояннаяЧастьАренднойПлаты.Ссылка.ДатаОкончанияДоговора КАК ДатаОкончанияАренды
		|	ИЗ
		|		Документ.РасторжениеДоговораАренды.ПостояннаяЧастьАренднойПлаты КАК РасторжениеДоговораАрендыПостояннаяЧастьАренднойПлаты
		|	ГДЕ
		|		РасторжениеДоговораАрендыПостояннаяЧастьАренднойПлаты.Ссылка = &Ссылка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		РасторжениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Ссылка.ОбъектАренды.Наименование + ""/"" + РасторжениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Услуга.Наименование,
		|		РасторжениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Количество,
		|		РасторжениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Ссылка.ДатаОкончанияДоговора
		|	ИЗ
		|		Документ.РасторжениеДоговораАренды.ПеременнаяЧастьАренднойПлаты КАК РасторжениеДоговораАрендыПеременнаяЧастьАренднойПлаты
		|	ГДЕ
		|		РасторжениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Ссылка = &Ссылка) КАК ОбъектыАренды";
		
		ОбъектыАренды = Запрос.Выполнить().Выбрать();
		
		Область = Макет.ПолучитьОбласть("СтрокаТаблицы");
		
		Индекс = 1;
		Пока ОбъектыАренды.Следующий() Цикл
			Область.Параметры.НомерСтроки = Индекс;
			Область.Параметры.Заполнить(ОбъектыАренды);
			Область.Параметры.ДатаОкончанияАренды = Формат(ОбъектыАренды.ДатаОкончанияАренды, "ДФ='д ММММ гггг'");
			ТабДокумент.Вывести(Область);
				
			Индекс = Индекс + 1;
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Подвал");
		Область.Параметры.РуководительОрганизации = Руководители.Руководитель;
		Область.Параметры.РуководительКонтрагента = Шапка.РуководительКонтрагента;
		ТабДокумент.Вывести(Область);
		
	КонецЕсли;
	
	
	Возврат ТабДокумент;
		
КонецФункции

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "Соглашение" Тогда
		
		ТабДокумент = ПечатьСоглашения();
		
	ИначеЕсли ИмяМакета = "ПередаточныйАкт" Тогда
		
		ТабДокумент = ПечатьПередаточногоАкта();
		
	КонецЕсли;
	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект, ""), НепосредственнаяПечать);
	
КонецПроцедуры
#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураПечатныхФорм = Новый Структура();
	СтруктураПечатныхФорм.Вставить("Соглашение"		, "Соглашение о расторжении договора аренды");
	СтруктураПечатныхФорм.Вставить("ПередаточныйАкт", "Передаточный акт");
	
	Возврат СтруктураПечатныхФорм;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если (НЕ ЭтотОбъект.ДоговорКонтрагента = ЭтотОбъект.Ссылка.ДоговорКонтрагента)
			И ДопМодульСервер.НекорректныйДоговор(ЭтотОбъект.ДоговорКонтрагента) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Указан некорректный договор (помечен на удаление либо не используется)");
		Отказ = Истина;
	КонецЕсли;
	
	ВидДоговора = ?(ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем, Перечисления.ВидыОперацийДоговоровАренды.САрендатором, Перечисления.ВидыОперацийДоговоровАренды.САрендодателем);
	
КонецПроцедуры


Процедура ПриКопировании(ОбъектКопирования)
	
	ДокументПодписан = Ложь;
	
КонецПроцедуры

