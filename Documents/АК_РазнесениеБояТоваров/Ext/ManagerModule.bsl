Процедура ЗаполнитьНаСервере(ЭтотОбъект) Экспорт
	
	ТабКеш = ЭтотОбъект.ТорговыеТочки.Выгрузить();
	
		ЭтотОбъект.ТорговыеТочки.Очистить();
		ТаблицаБоя=ПолучитьТаблицуПоБою(НачалоДня(ЭтотОбъект.Дата), КонецДня(ЭтотОбъект.Дата),ЭтотОбъект.Склад);
		//УинОперации
		ТекущийУинОперации="";
		ТаблицаБоя.Сортировать("УинОперации, ДатаКартинки Убыв");
		Для Каждого СтрокаБоя из ТаблицаБоя цикл
			//в отчет не пойдет номенклатура без упаковки
			Если СтрокаБоя.Номенклатура.БезУпаковки тогда
				Продолжить;
			КонецЕсли;
			//АК БЕЛН 11.01.2017+
			Если Не ЭтотОбъект.Склад=СтрокаБоя.Склад Тогда
				Продолжить;
			КонецЕсли; 
			//АК БЕЛН 11.01.2017-
			
		//	Если ТекущийУинОперации<>СтрокаБоя.УинОперации тогда
			ТекущийУинОперации=СтрокаБоя.УинОперации;	
			СтрокаТЧ=ЭтотОбъект.ТорговыеТочки.Добавить();
			СтрокаТЧ.Номенклатура=СтрокаБоя.Номенклатура;
			СтрокаТЧ.ТорговаяТочка=СтрокаБоя.Магазин;
			СтрокаТЧ.Перевозчик=СтрокаБоя.Перевозчик;
			СтрокаТЧ.Колво=СтрокаБоя.Колво;
			СтрокаТЧ.Сумма=СтрокаБоя.Сумма;
			СтрокаТЧ.Склад=СтрокаБоя.Склад;
			СтрокаТЧ.Фотография=СтрокаБоя.ДатаКартинки;
			СтрокаТЧ.ВиртуальныйСклад=СтрокаБоя.ВиртуальныйСклад;
			//указываем ссылку, чтобы потом проставить статус для мелких списаний
			//на данный момент это не используется
			СтрокаТЧ.СтрокаСсылка=СокрЛП(Строка(СтрокаБоя.СписаниеСсылка));
			//ставим автоматом статус для товаров ниже 100 р
				//Если СтрокаТЧ.Сумма<100 тогда
				//	СтрокаТЧ.ПричинаБоя=Перечисления.АК_ПричиныБоя.Склад;
				//КонецЕсли;
			//28.03.16 Лобачев - статус автоматом не проставляется, если сумма меньше 300, то метим для отбора
				Если СтрокаТЧ.Сумма<300 тогда
					СтрокаТЧ.ЭтоМелкий=Истина;
				КонецЕсли;
				СтрокаКеш = ТабКеш.Найти(ТекущийУинОперации, "УинОперации");
				Если СтрокаКеш <> Неопределено
					И ЗначениеЗаполнено(СтрокаКеш.ПричинаСписания) Тогда
					СтрокаТЧ.ПричинаСписания = СтрокаКеш.ПричинаСписания;
				КонецЕсли;	
		//	КонецЕсли;
			СтрокаТЧ.АдресКартинки=СтрокаТЧ.АдресКартинки+"№№№№"+СтрокаБоя.ИмяФайла;
			СтрокаТЧ.КомментарийКФото=СтрокаТЧ.КомментарийКФото+"№№№№"+СтрокаБоя.Комментарии;
			//АК БЕЛН 11.01.2017+
			Если Не ЗначениеЗаполнено(СтрокаТЧ.Фотография) Тогда
				СтрокаТЧ.ПричинаБоя = Перечисления.АК_ПричиныБоя.НеВыяснено;
			КонецЕсли; 
			//АК БЕЛН 11.01.2017-
		КонецЦикла;
		//проставим причину боя "Склад", если итоговая сумма списания меньше 300 р
		//ТаблИтогов=ЭтотОбъект.ТорговыеТочки.Выгрузить();
		//ТаблИтогов.Свернуть("СтрокаСсылка","Сумма");
		//Для Каждого Стр из ЭтотОбъект.ТорговыеТочки цикл
		//	ИтоговаяСтрока=ТаблИтогов.Найти(Стр.СтрокаСсылка,"СтрокаСсылка");
		//	Если ИтоговаяСтрока.Сумма<300 и Стр.СтрокаСсылка<>"" тогда
		//		Стр.ПричинаБоя=Перечисления.АК_ПричиныБоя.Склад;
		//	КонецЕсли;
		//КонецЦикла;

КонецПроцедуры
	
Функция ПолучитьТаблицуПоБою(ДатаНач, ДатаКон,Склад)
   
   УстановитьПривилегированныйРежим(Истина);
   КонстантаКаталог = Константы.КаталогХраненияФайловКартинок.Получить();
   Если Прав(КонстантаКаталог, 1) <> "\" Тогда
       КонстантаКаталог = КонстантаКаталог + "\";
   КонецЕсли;   
       
   КонстантаКаталог = КонстантаКаталог + "СписанияНаМагазинах\";
   
   //АК БЕЛН 20170913+
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СкладыРазнесенияБоя.Склад
		|ИЗ
		|	РегистрСведений.СкладыРазнесенияБоя КАК СкладыРазнесенияБоя
		|ГДЕ
		|	СкладыРазнесенияБоя.СтруктурнаяЕдиница = &СтруктурнаяЕдиница";
	
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТЗСклады = РезультатЗапроса.Выгрузить();

   //АК БЕЛН 20170913-
   
   ЗапросКеш = Новый Запрос();
   ЗапросКеш.УстановитьПараметр("Дата", ДобавитьМесяц(ДатаНач, -1));
   ЗапросКеш.УстановитьПараметр("ДатаНач", ДатаНач - 86400*5);
   ЗапросКеш.УстановитьПараметр("ДатаКон", ДатаНач + 86400*5);
   ЗапросКеш.Текст = "ВЫБРАТЬ
                     |	СебестоимостьТоваровСрезПоследних.Номенклатура,
                     |	СебестоимостьТоваровСрезПоследних.Себестоимость
                     |ИЗ
                     |	РегистрСведений.СебестоимостьТоваров.СрезПоследних(&Дата, ) КАК СебестоимостьТоваровСрезПоследних
                     |;
                     |
                     |////////////////////////////////////////////////////////////////////////////////
                     |ВЫБРАТЬ
                     |	ПриложенныеКартинкиКСписаниямКомментарии.УинКартинки,
                     |	ПриложенныеКартинкиКСписаниямКомментарии.Пользователь,
                     |	ПриложенныеКартинкиКСписаниямКомментарии.Комментарий
                     |ИЗ
                     |	РегистрСведений.ПриложенныеКартинкиКСписаниямКомментарии КАК ПриложенныеКартинкиКСписаниямКомментарии
                     |ГДЕ
                     |	ПриложенныеКартинкиКСписаниямКомментарии.ДатаКомментария МЕЖДУ &ДатаНач И &ДатаКон
                     |
                     |УПОРЯДОЧИТЬ ПО
                     |	ПриложенныеКартинкиКСписаниямКомментарии.ДатаКомментария
                     |;
                     |
                     |////////////////////////////////////////////////////////////////////////////////
                     |ВЫБРАТЬ
                     |	РасходныйОрдерСкладТовары.Номенклатура,
                     |	РасходныйОрдерСкладТовары.Ссылка.Склад.Владелец КАК Склад,
                     |	РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения,
                     |	МаршрутныйЛистРасходныеОрдера.Ссылка.Перевозчик,
                     |	ВЫРАЗИТЬ(РасходныйОрдерСкладТовары.Ссылка.Получатель КАК Справочник.СтруктурныеЕдиницы) КАК Магазин,
                     |	РасходныйОрдерСкладТовары.Ссылка,
                     |	РасходныйОрдерСкладТовары.Ссылка.Склад КАК ВиртСклад
                     |ИЗ
                     |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
                     |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛист.РасходныеОрдера КАК МаршрутныйЛистРасходныеОрдера
                     |		ПО РасходныйОрдерСкладТовары.Ссылка = МаршрутныйЛистРасходныеОрдера.Документ
                     |ГДЕ
                     |	РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения МЕЖДУ &ДатаНач И &ДатаКон";
                     
   Результаты = ЗапросКеш.ВыполнитьПакет();
   ТабСебестоимость = Результаты[0].Выгрузить();
   ТабСебестоимость.Индексы.Добавить("Номенклатура");
   ТабКомментарии = Результаты[1].Выгрузить();
   ТабКомментарии.Индексы.Добавить("УинКартинки");
   ТабРасходники = Результаты[2].Выгрузить();
   ТабРасходники.Индексы.Добавить("ДатаРаспределения, Магазин, Номенклатура");
   
   ТабСписания = Новый ТаблицаЗначений();
   ТабСписания.Колонки.Добавить("УинОперации");
   ТабСписания.Колонки.Добавить("Дата");
   ТабСписания.Колонки.Добавить("Номенклатура");
   ТабСписания.Колонки.Добавить("Магазин");
   ТабСписания.Колонки.Добавить("Колво", Новый ОписаниеТипов("Число"));
   ТабСписания.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
   ТабСписания.Колонки.Добавить("Склад");
   ТабСписания.Колонки.Добавить("Перевозчик");
   ТабСписания.Колонки.Добавить("УинКартинки");
   ТабСписания.Колонки.Добавить("Комментарии");
   ТабСписания.Колонки.Добавить("КомментарийПродавца");
   ТабСписания.Колонки.Добавить("ИмяФайла");
   ТабСписания.Колонки.Добавить("ДатаКартинки");
   ТабСписания.Колонки.Добавить("СписаниеСсылка"); 
   ТабСписания.Колонки.Добавить("ВиртуальныйСклад"); 
   //
   
   ТабФото = Новый ТаблицаЗначений();
   ТабФото.Колонки.Добавить("LineUid");
   ТабФото.Колонки.Добавить("PhotoUid");
   ТабФото.Колонки.Добавить("Ext");
   ТабФото.Колонки.Добавить("PhotoDate");
   
   ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("10.0.0.40");
	
   ТекстЗапроса = "SELECT Photo._Fld7129 as LineUid, Photo._Fld7130 as PhotoUid, Photo._Fld7135 as Ext, Photo._Fld7136 as PhotoDate 
                   |INTO #UIDs
                   |FROM IzbenkaFin.dbo._InfoRg7128 (nolock) as Photo
                   |where CASE WHEN _Fld7136 <= '4001-01-01T00:00:00' THEN 0 
                   |       WHEN DATEADD(YEAR, -2000, _Fld7136) >= " + ВнешниеДанные.ФорматПоля(ДатаНач - 86400*5) + " AND DATEADD(YEAR, -2000, _Fld7136) <= " + ВнешниеДанные.ФорматПоля(КонецДня(ДатаКон + 86400*5)) + " THEN 1
                   |       ELSE 0 END = 1
                   |       
				   |SELECT ISNULL(UIDs.LineUid, '') LineUid, ISNULL(UIDs.PhotoUid, '') PhotoUid, ISNULL(UIDs.Ext, '') Ext, DATEADD(YEAR, -2000, UIDs.PhotoDate) PhotoDate
                   |FROM SMS_REPL.dbo.TD_move (nolock) TD 
                   |INNER Join #UIDs UIDs ON CAST(TD.tduid as nvarchar(50)) = UIDs.LineUid
				   |where operation_type IN (104) and TD.Confirm_type = 1
                   |   and closedate >= " + ВнешниеДанные.ФорматПоля(ДатаНач) + " and closedate <= " + ВнешниеДанные.ФорматПоля(НачалоДня(ДатаКон) + 47580) + "
				   |
                   |SELECT CAST(TD.tduid as nvarchar(50)) LineUid, TD.closedate, Tov2Uid.UIN as TovUin, CAST(TT2Uid.UID as nvarchar(50)) as TTUid, TD.Quantity, Cast(TD.Descr as nvarchar(1000)) as Descr
                   |FROM SMS_REPL.dbo.TD_move (nolock) TD 
                   |LEFT OUTER JOIN IzbenkaFin.dbo.TovBin2UID (nolock) as Tov2Uid ON TD.id_tov = Tov2Uid.id
                   |LEFT OUTER JOIN IzbenkaFin.dbo.TTBin2UID (nolock) as TT2Uid ON TD.ShopNo_rep = TT2Uid.ShopNo
                   //|where CAST(TD.tduid as nvarchar(50)) IN (SELECT UIDs.LineUid FROM #UIDs UIDs) and operation_type IN (104) and TD.Confirm_type = 1
				   |where operation_type IN (104) and TD.Confirm_type = 1
                   |   and closedate >= " + ВнешниеДанные.ФорматПоля(ДатаНач) + " and closedate <= " + ВнешниеДанные.ФорматПоля(НачалоДня(ДатаКон) + 47580);
   
   rs = ADOСоединение.Execute(ТекстЗапроса);
   Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
       rs=rs.NextRecordSet();
   КонецЦикла;
   
   Попытка
       rs.MoveFirst();
       
       Пока НЕ rs.EOF() Цикл
           СтрокаДоб = ТабФото.Добавить();
		   СтрокаДоб.LineUid = rs.Fields("LineUid").Value;
		   СтрокаДоб.PhotoUid = rs.Fields("PhotoUid").Value;
		   СтрокаДоб.ext = rs.Fields("ext").Value;
		   СтрокаДоб.PhotoDate = rs.Fields("PhotoDate").Value;
           rs.MoveNext();
       КонецЦикла;
   Исключение
   КонецПопытки;
   
   rs=rs.NextRecordSet();
   
   Попытка
       rs.MoveFirst();
       
	   Пока НЕ rs.EOF() Цикл
   			//АК БЕЛН 20170913+
          	СтрокиРасходники = ТабРасходники.НайтиСтроки(Новый Структура("ДатаРаспределения, Магазин, Номенклатура", НачалоДня(rs.Fields("closedate").Value),
			Справочники.СтруктурныеЕдиницы.ПолучитьСсылку(Новый УникальныйИдентификатор(rs.Fields("TTUid").Value)), 
			Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(rs.Fields("TovUin").Value))));
			Если СтрокиРасходники.Количество() > 0 Тогда
				ВиртСклад = СтрокиРасходники[0].ВиртСклад;
	            Если ТЗСклады.Количество() Тогда
					Если ТЗСклады.Найти(ВиртСклад)=Неопределено Тогда
		           		rs.MoveNext();
						Продолжить;
					КонецЕсли; 
				КонецЕсли; 
			Иначе
           		rs.MoveNext();
				Продолжить;
			КонецЕсли;
		   //АК БЕЛН 20170913-
           СтрокаДоб = ТабСписания.Добавить();
		   СтрокаДоб.УинОперации = rs.Fields("LineUid").Value;
           СтрокаДоб.Дата = rs.Fields("closedate").Value;
           СтрокаДоб.Номенклатура = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(rs.Fields("TovUin").Value));
           СтрокаДоб.Магазин = Справочники.СтруктурныеЕдиницы.ПолучитьСсылку(Новый УникальныйИдентификатор(rs.Fields("TTUid").Value));
           СтрокаДоб.ВиртуальныйСклад = ВиртСклад;
           СтрокаДоб.Колво = rs.Fields("Quantity").Value;
		   СтрокаДоб.КомментарийПродавца = СокрЛП(СтрЗаменить(rs.Fields("Descr").Value, "(из моб. приложения)", ""));
           
		   СтрокаКешСебестоимость = ТабСебестоимость.Найти(СтрокаДоб.Номенклатура, "Номенклатура");
		   Если СтрокаКешСебестоимость <> Неопределено Тогда
               СтрокаДоб.Сумма = СтрокаДоб.Колво * СтрокаКешСебестоимость.Себестоимость;
           КонецЕсли;
           
		   //СтрокиРасходники = ТабРасходники.НайтиСтроки(Новый Структура("ДатаРаспределения, Магазин, Номенклатура", НачалоДня(СтрокаДоб.Дата), СтрокаДоб.Магазин, СтрокаДоб.Номенклатура));
           Если СтрокиРасходники.Количество() > 0 Тогда
               СтрокаДоб.Склад = СтрокиРасходники[0].Склад;
               СтрокаДоб.Перевозчик = СтрокиРасходники[0].Перевозчик;
			   СтрокаДоб.СписаниеСсылка=СтрокиРасходники[0].Ссылка;     //
		   КонецЕсли;
		   СтрокиФото = ТабФото.НайтиСтроки(Новый Структура("LineUid", НРег(СтрокаДоб.УинОперации)));
		   Если СтрокиФото.Количество() > 0 Тогда
			   СтрокаДоб.УинКартинки = СтрокиФото[0].PhotoUid;
			   Если ЗначениеЗаполнено(СтрокаДоб.УинКартинки) Тогда
	           		СтрокаДоб.ИмяФайла = КонстантаКаталог + Формат(СтрокиФото[0].PhotoDate, "ДФ=yyyyMM") + "\" + СтрокаДоб.УинКартинки + "." + СтрокиФото[0].Ext;
				Иначе
					СтрокаДоб.ИмяФайла = "";
			   КонецЕсли;	
			   СтрокаДоб.ДатаКартинки = СтрокиФото[0].PhotoDate;
			   СтрокиКомменты = ТабКомментарии.НайтиСтроки(Новый Структура("УинКартинки", СтрокаДоб.УинКартинки));
	           СтрокаКоммент = "";
	           Для Каждого СтрокаКоммент Из СтрокиКомменты Цикл
	               СтрокаКоммент = СтрокаКоммент + ?(ЗначениеЗаполнено(СтрокаКоммент), Символы.ПС, "") + СтрокаКоммент.Пользователь + ": " + СокрЛП(СтрокаКоммент.Комментарий);
	           КонецЦикла;   
	           СтрокаДоб.Комментарии = СтрокаКоммент;
		   КонецЕсли;
		   Для н = 1 По СтрокиФото.Количество() - 1 Цикл
			   СтрокаНов = ТабСписания.Добавить();
			   ЗаполнитьЗначенияСвойств(СтрокаНов, СтрокаДоб,, "УинКартинки, Колво, Сумма, ИмяФайла, ДатаКартинки, Комментарии");
			   СтрокаНов.УинКартинки = СтрокиФото[н].PhotoUid;
			   Если ЗначениеЗаполнено(СтрокаНов.УинКартинки) Тогда
	           		СтрокаНов.ИмяФайла = КонстантаКаталог + Формат(СтрокиФото[н].PhotoDate, "ДФ=yyyyMM") + "\" + СтрокаНов.УинКартинки + "." + СтрокиФото[н].Ext;
				Иначе
					СтрокаДоб.ИмяФайла = "";
			   КонецЕсли;	
			   СтрокаНов.ДатаКартинки = СтрокиФото[н].PhotoDate;
			   СтрокиКомменты = ТабКомментарии.НайтиСтроки(Новый Структура("УинКартинки", СтрокаНов.УинКартинки));
	           СтрокаКоммент = "";
	           Для Каждого СтрокаКоммент Из СтрокиКомменты Цикл
	               СтрокаКоммент = СтрокаКоммент + ?(ЗначениеЗаполнено(СтрокаКоммент), Символы.ПС, "") + СтрокаКоммент.Пользователь + ": " + СокрЛП(СтрокаКоммент.Комментарий);
	           КонецЦикла;   
	           СтрокаНов.Комментарии = СтрокаКоммент;
		   КонецЦикла;	   
           rs.MoveNext();
       КонецЦикла;
   Исключение
   КонецПопытки;
   ADOСоединение.Close();
   
   //свернем всю таблицу
   ТабРезультат = ТабСписания.СкопироватьКолонки();
   Для Каждого СтрокаТаб Из ТабСписания Цикл
	   СтрокиРезультат = ТабРезультат.НайтиСтроки(Новый Структура("Номенклатура, Магазин, Склад, Перевозчик", СтрокаТаб.Номенклатура, СтрокаТаб.Магазин, СтрокаТаб.Склад, СтрокаТаб.Перевозчик));
	   Если СтрокиРезультат.Количество() = 0 Тогда
		   ЗаполнитьЗначенияСвойств(ТабРезультат.Добавить(), СтрокаТаб);
	   Иначе
		   СтрокиРезультат[0].Колво = СтрокиРезультат[0].Колво + СтрокаТаб.Колво;
		   СтрокиРезультат[0].Сумма = СтрокиРезультат[0].Сумма + СтрокаТаб.Сумма;
		   СтрокиРезультат[0].Комментарии = "" + СтрокиРезультат[0].Комментарии + ?(ЗначениеЗаполнено(СтрокиРезультат[0].Комментарии), "№№№№", "") + СтрокаТаб.Комментарии;
		   СтрокиРезультат[0].ИмяФайла = "" + СтрокиРезультат[0].ИмяФайла + ?(ЗначениеЗаполнено(СтрокиРезультат[0].ИмяФайла), "№№№№", "") + СтрокаТаб.ИмяФайла;
		   Если ЗначениеЗаполнено(СтрокаТаб.Комментарии) Тогда
		   	СтрокиРезультат[0].КомментарийПродавца = "" + СтрокиРезультат[0].КомментарийПродавца + ?(ЗначениеЗаполнено(СтрокиРезультат[0].КомментарийПродавца), Символы.ПС, "") + СтрокаТаб.Комментарии;
		   КонецЕсли;
	   КонецЕсли;   
   КонецЦикла;   
   
   Возврат ТабРезультат;
   
КонецФункции
