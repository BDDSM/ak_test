//++ АК luza ИП-00017231.01 28.12.17
Функция НайтиПодчиненныйСчетФактуру(Знач ДокументСсылка, ВидДокумента = "СчетФактураПолученный", Отбор = Неопределено, ИсключитьИзВыборкиСФ = Неопределено, МетаданныеОснования = Неопределено) Экспорт

	Если не ЗначениеЗаполнено(ДокументСсылка) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	
	Если МетаданныеОснования = Неопределено Тогда
		МетаданныеОснования = ДокументСсылка.Метаданные();
	КонецЕсли;
	
	//+++АК sils 19.06.2018  ИП-00018892 
	// Иногда номер и дата вход сч/ф указаны, когда флаг не стоит. Тогда смотреть не надо.
	Если ТипЗнч(ДокументСсылка) = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") и не ДокументСсылка.ПредъявленСчетФактура Тогда
	Иначе
	//---АК
	Если ВидДокумента = "СчетФактураПолученный" 
		И ((ОбщегоНазначения.ЕстьРеквизитДокумента("НомерВходящегоСчетаФактуры", МетаданныеОснования)
		И ЗначениеЗаполнено(ДокументСсылка.НомерВходящегоСчетаФактуры) = Истина)
		ИЛИ (ОбщегоНазначения.ЕстьРеквизитДокумента("ДатаВходящегоСчетаФактуры", МетаданныеОснования)
		И ЗначениеЗаполнено(ДокументСсылка.ДатаВходящегоСчетаФактуры) = Истина))		
		Тогда
		Возврат ДокументСсылка;
	КонецЕсли;
	//+++АК sils 19.06.2018 ИП-00018927
	КонецЕсли;
	//---АК

	
	НайденныйДокумент = Неопределено;

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СФ.Ссылка
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СФ
	|ГДЕ
	|	СФ.ДокументОснование = &ДокументСсылка
	|	И СФ.ПометкаУдаления = ЛОЖЬ";
	
	Если ЗначениеЗаполнено(ИсключитьИзВыборкиСФ) Тогда
		Запрос.УстановитьПараметр("ИсключитьИзВыборкиСФ", ИсключитьИзВыборкиСФ);
		Запрос.Текст = Запрос.Текст + "
			|	И НЕ СФ.Ссылка  = &ИсключитьИзВыборкиСФ
			|";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Отбор) = Истина Тогда
		Если Отбор.Свойство("ПометкаУдаления") = Истина И Отбор.ПометкаУдаления = Истина Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И СФ.ПометкаУдаления = ЛОЖЬ", "И СФ.ПометкаУдаления = ИСТИНА"); 
		КонецЕсли;			
	КонецЕсли;	
	
	ВыборкаИзЗапроса = Запрос.Выполнить().Выбрать();

	Если ВыборкаИзЗапроса.Следующий() Тогда
		НайденныйДокумент = ВыборкаИзЗапроса.Ссылка;
	КонецЕсли;

	Возврат НайденныйДокумент;

КонецФункции
//-- АК luza ИП-00017231.01 28.12.17

//++ АК luza 13.02.2018 ИП-00017231.02
//синхронизация пометки удаления со счетом фактурой
Процедура СинхронизацияПометкиНаУдалениеУСчетаФактуры(ДокументОбъект, ВидСчетаФактуры = "СчетФактураПолученный", Отказ = Ложь) Экспорт

	ПометкаУдаленияСФ = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументОбъект.Ссылка, "ПометкаУдаления");
	
	Если ДокументОбъект.ПометкаУдаления <> ПометкаУдаленияСФ Тогда

		// Произошло изменение пометки на удаление
		// Попытаемся найти счет-фактуру
		СтруктураОтбора = Новый Структура("ПометкаУдаления",не ДокументОбъект.ПометкаУдаления);
		СчетФактура = НайтиПодчиненныйСчетФактуру(ДокументОбъект.Ссылка, ВидСчетаФактуры, СтруктураОтбора, ДокументОбъект.Ссылка);

		//Если потерпели неудачу, то необходимо ввести новый документ 
		Если ЗначениеЗаполнено(СчетФактура) И Не СчетФактура = ДокументОбъект.Ссылка Тогда
			Попытка
				// Есть счет-фактура, нужно установить для него пометку удаления
				СчетФактураОбъект = СчетФактура.ПолучитьОбъект();
								
				СчетФактураОбъект.УстановитьПометкуУдаления(ДокументОбъект.ПометкаУдаления);
				Если ДокументОбъект.ПометкаУдаления Тогда
					Сообщить("Документ <" + СчетФактура + "> помечен на удаление.")
				Иначе
					Сообщить("У документа <" + СчетФактура + "> снята пометка на удаление.")
				КонецЕсли;
			Исключение
				Отказ = Истина;
			КонецПопытки; 				
		КонецЕсли;   
	КонецЕсли;

КонецПроцедуры
//-- АК luza 13.02.2018 ИП-00017231.02