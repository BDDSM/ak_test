
&НаКлиенте
Процедура КартинкиПриАктивизацииСтроки(Элемент)
	
	УстановитьКартинку();		
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКартинку()
	
	Если Элементы.Картинки.ТекущаяСтрока = Неопределено Тогда
		ТекущаяКартинка = "";
	Иначе
		//+++ AK suvv 06.07.2018 ИП-00018768
		//ХР = РеквизитФормыВЗначение("Объект").Картинки[Элементы.Картинки.ТекущаяСтрока].Хранилище;
		//ТекущаяКартинка = ПоместитьВоВременноеХранилище(ХР.Получить(), Новый УникальныйИдентификатор);
		ФайлСсылка = РеквизитФормыВЗначение("Объект").Картинки[Элементы.Картинки.ТекущаяСтрока].Файл;
		Если ЗначениеЗаполнено(ФайлСсылка) Тогда
			Картинка = Новый Картинка(Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(ФайлСсылка));
			ТекущаяКартинка = ПоместитьВоВременноеХранилище(Картинка, Новый УникальныйИдентификатор);
		КонецЕсли;
		//--- AK suvv
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьОтвет(Команда)
	
	Если Объект.Ответ = "" Тогда
		Сообщить("Ответ не заполнен");
		Возврат;
	КонецЕсли;
	
	Если Объект.Результат = "" Тогда
		Сообщить("Не выбран результат!", СтатусСообщения.Внимание);
		Возврат;
	КонецЕсли;
	
	Если Объект.Результат = "Принято" Тогда
		Ошибка = "";
		Начислено = НачислитьБаллыНаСервере(Ошибка);
		Если Начислено Тогда
			Сообщить("Баллы начислены!");
			Телеграм.УстановитьСтатусНГ(Объект.НомерКарты, ИдТовара(),"2",Объект.Ответ);
			ОтправитьОтветНаСервере();
			ЭтаФорма.Записать();			
		Иначе
			Сообщить(Ошибка, СтатусСообщения.Внимание);
		КонецЕсли;
	Иначе
		Телеграм.УстановитьСтатусНГ(Объект.НомерКарты, ИдТовара(),"-1",Объект.Ответ);
		ОтправитьОтветНаСервере();
		ЭтаФорма.Записать();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ИдТовара()
		
	Если ЗначениеЗаполнено(Объект.ТоварНГ) тогда
		Возврат Объект.ТоварНГ.id_tov;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ОтправитьОтветНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ИдТелеграм) Тогда 
		Телеграм.СоздатьСообщение(Объект.Бот, Объект.ИдТелеграм, Объект.Ответ, 0, 0);
	Иначе
		Телеграм.СоздатьПуш(Объект.НомерКарты, "Ваш отзыв принят", Объект.Ответ, 5, "");
	КонецЕсли;
	Объект.ОтветОтправлен = ТекущаяДата();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтатус(Статус)
	
	Телеграм.УстановитьСтатусНГ(Объект.НомерКарты, Объект.ТоварНГ.id_tov, Статус, Объект.Ответ);
	
КонецПроцедуры

&НаСервере
Функция НачислитьБаллыНаСервере(Ошибка = "")
		
	СтрокаПодключения = ВнешниеДанные.ПолучитьСтрокуПодключенияMSSQL("srv-sql01", "Loyalty");
	лкТекДата = ТекущаяДата(); 
	//Баллы = Формат(ПолучитьЦенуНаДату(), "ЧН=0; ЧГ=");
	Баллы = Формат(Объект.СуммаНГ, "ЧН=0; ЧГ=");
	// Бонус_add
	ТекстЗапроса =
	"DECLARE @ret int, @mes as varchar(max)
	|EXEC @ret = [SMS_REPL].[dbo].[Charge_Bonus]
	|@card_number = N'" + Объект.НомерКарты + "',
	|@user = N'" + Строка(ПараметрыСеанса.ТекущийПользователь) + "',
	|@date_time = N'" + Формат(лкТекДата, "ДФ=yyyy-MM-ddTHH:mm:ss") + "',
	|@amount = " + Баллы + ",
	|@type = 0,
	|@descr = N'народный гурман',
	|@message=@mes output
	|SELECT @ret as ret, @mes as mes";
	
	Результат = Телеграм.База_ВыполнитьЗапрос(ТекстЗапроса, СтрокаПодключения);
	ТЗ = Телеграм.База_РезультатЗапросВТаблицуЗначений(Результат);
	
	Если НЕ ТипЗнч(ТЗ) = Тип("ТаблицаЗначений") ИЛИ ТЗ.Количество() = 0 Тогда
		Ошибка = "Начисление не выполнено";
		Возврат Ложь;
	Иначе
		Ошибка = ТЗ[0].mes;
		Возврат (ТЗ[0].ret = 0);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура РезультатПриИзменении(Элемент)
	
	Если Объект.Результат = "Принято" Тогда
		ЗаполнитьПринято();
		Объект.Ответ =
		Объект.Имя
		+ ", спасибо вам за отзыв о товаре "
		+ Строка(Объект.ТоварНГ) + ". На вашу карту "
		+ Объект.НомерКарты + " зачислена полная стоимость - " + Формат(Объект.СуммаНГ, "") + " руб.";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьПринято()
	
	ЗаполнитьПоШаблону = Справочники.ШаблоныНГ.Принято;
	Если ЗаполнитьПоШаблону.Наименование  = "" Тогда
		ШаблонСЗаменой();
	Иначе
		ШаблонСЗаменой();
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ШаблонСЗаменой()
	
	Если Не ЗначениеЗаполнено(ЗаполнитьПоШаблону) Тогда
		Возврат;
	ИначеЕсли ЗаполнитьПоШаблону = Справочники.ШаблоныНГ.Принято Тогда
		Если ЗаполнитьПоШаблону.ТекстСообщения  = "" Тогда
			ТекстШаблона =
			"[Имя], спасибо вам за отзыв о товаре [НаименованиеТовара]. На вашу карту [НомерКарты] зачислена полная стоимость - [Сумма] руб.";
		Иначе
			ТекстШаблона = ЗаполнитьПоШаблону.ТекстСообщения;
		КонецЕсли;
	ИначеЕсли ЗаполнитьПоШаблону.ТекстСообщения  = "" Тогда
		Возврат;
	Иначе
		ТекстШаблона = ЗаполнитьПоШаблону.ТекстСообщения;
	КонецЕсли;
	
	ТекстШаблона = СтрЗаменить(ТекстШаблона, "[Имя]", Строка(Объект.Имя));
	ТекстШаблона = СтрЗаменить(ТекстШаблона, "[НаименованиеТовара]", Строка(Объект.ТоварНГ));
	ТекстШаблона = СтрЗаменить(ТекстШаблона, "[НомерКарты]", Объект.НомерКарты);
	ТекстШаблона = СтрЗаменить(ТекстШаблона, "[Сумма]", Формат(Объект.СуммаНГ, ""));
	
	Объект.Ответ = ТекстШаблона;	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьЦенуНаДату()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Объект.ТоварНГ);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Цена
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			&ТекДата,
	|			ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|				И Номенклатура = &Номенклатура) КАК ЦеныНоменклатурыСрезПоследних";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Цена;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ТекущаяКартинкаНажатие(Элемент, СтандартнаяОбработка)
	
	ОткрытьКартинки();	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивКартинок()
	
	МК = Новый Массив;
	Для каждого стр Из РеквизитФормыВЗначение("Объект").Картинки Цикл
		//+++ AK suvv 06.07.2018 ИП-00018768
		//ХР = Стр.Хранилище;
		//МК.Добавить(ПоместитьВоВременноеХранилище(ХР.Получить(), Новый УникальныйИдентификатор));
		ФайлСсылка = Стр.Файл;
		Если ЗначениеЗаполнено(ФайлСсылка) Тогда
			Картинка = Новый Картинка(Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(ФайлСсылка));
			МК.Добавить(ПоместитьВоВременноеХранилище(Картинка, Новый УникальныйИдентификатор));
		КонецЕсли;
		//--- AK suvv
	КонецЦикла; 
	Возврат МК;
		
КонецФункции

&НаКлиенте
Процедура ПросмотрКартинок(Команда)
	ОткрытьКартинки();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКартинки()
	
	МК = ПолучитьМассивКартинок();
	Если МК.Количество() = 0 Тогда Возврат КонецЕсли;
	ПараметрыФормы = Новый Структура("МассивКартинок", МК);
	ОткрытьФорму("Документ.ОтзывНГ.Форма.ПросмотрКартинок", ПараметрыФормы);	
	
КонецПроцедуры

&НаКлиенте
Процедура СохраниеКартинок(Команда)
	
	МК = ПолучитьМассивКартинок();
	
	Если МК.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
    ДиалогОткрытияФайла  = Новый ДиалогВыбораФайла (РежимДиалогаВыбораФайла.ВыборКаталога); 
    ДиалогОткрытияФайла.ПолноеИмяФайла     = ""; 
    ДиалогОткрытияФайла.МножественныйВыбор = Ложь; 
    ДиалогОткрытияФайла.Заголовок          = "Выберите каталог"; 
    Если ДиалогОткрытияФайла.Выбрать() Тогда 
    	КаталогСохранения = ДиалогОткрытияФайла.Каталог; 
		Ном = 1;
		Для каждого Ф Из МК Цикл	
		    ДвоичныеДанные = ПолучитьИзВременногоХранилища(Ф); 
		    ИмяВременногоФайла = КаталогСохранения + "\" + Объект.Номер + "_image" + Строка(Ном) + ".jpg";
		    ДвоичныеДанные.Записать(ИмяВременногоФайла);
			ном = Ном + 1;
		КонецЦикла; 
  	КонецЕсли;  	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоШаблонуПриИзменении(Элемент)
	ШаблонСЗаменой();
КонецПроцедуры

//+++АК sils 08.06.2018 ИП-00018876
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Отзыв НГ");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
КонецПроцедуры

//+++АК sils 08.06.2018 ИП-00018876
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
КонецПроцедуры

&НаСервере
Процедура ОтправитьПродактуНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПродакту(Команда)
	
	ПараметрыФормы = Новый Структура("Ключ", Объект.Ссылка);
    ОткрытьФорму("Документ.ОтзывНГ.Форма.ФормаОтправкиПисьма", ПараметрыФормы,ЭтаФорма);
      	
КонецПроцедуры
