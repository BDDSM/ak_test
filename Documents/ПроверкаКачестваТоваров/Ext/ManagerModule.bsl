
//+++АК SHEP 2018.03.12 ИП-00017032
Функция ПолучитьКаталогХраненияФайлов(Ссылка = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КаталогХраненияФайлов = СокрЛП(Константы.КаталогХраненияФайлов.Получить());
	КаталогХраненияФайлов = КаталогХраненияФайлов + ?(Прав(КаталогХраненияФайлов, 1) = "\", "", "\");
	
	ФайлКаталогХраненияФайлов = Новый Файл(КаталогХраненияФайлов);
	Если НЕ ФайлКаталогХраненияФайлов.Существует() Тогда
		СоздатьКаталог(КаталогХраненияФайлов);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат КаталогХраненияФайлов;
	
КонецФункции

//+++АК ILIK 2018.07.06 ИП-00018897
Процедура ПечатьПротоколаПроверки(ТабДок, Ссылка) Экспорт
	ТабДок.Очистить();
	
	Макет = Документы.ПроверкаКачестваТоваров.ПолучитьМакет("ПротоколПроверки");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапкаОрганолептическиеПоказатели = Макет.ПолучитьОбласть("ШапкаОрганолептическиеПоказатели");
	ОбластьСтрокаОрганолептическиеПоказатели = Макет.ПолучитьОбласть("СтрокаОрганолептическиеПоказатели");
	ОбластьШапкаФизикоХимическиеПоказатели = Макет.ПолучитьОбласть("ШапкаФизикоХимическиеПоказатели");
	ОбластьСтрокаФизикоХимическиеПоказатели = Макет.ПолучитьОбласть("СтрокаФизикоХимическиеПоказатели");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПроверкаКачестваТоваров.Дата,
	               |	ПроверкаКачестваТоваров.Лаборатория.НаименованиеПолное КАК Лаборатория,
	               |	ПроверкаКачестваТоваров.Номенклатура.НаименованиеПолное КАК Номенклатура,
	               |	ПроверкаКачестваТоваров.Производитель.НаименованиеПолное КАК Производитель,
	               |	ПроверкаКачестваТоваров.ЦельИсследования,
	               |	ПроверкаКачестваТоваров.РезультатИсследования,
	               |	ПроверкаКачестваТоваров.ХарактеристикаНоменклатуры.СрокГодности КАК СрокГодности,
	               |	ПроверкаКачестваТоваров.ХарактеристикаНоменклатуры.ТипСрокаГодности.Наименование КАК ТипСрокаГодности,
	               |	ВЫБОР
	               |		КОГДА ПроверкаКачестваТоваров.ХарактеристикаНоменклатуры.ТипСрокаГодности = &СрокГодностиГод
	               |			ТОГДА "";%1 год;;%1 года;%1 лет;%1 года""
	               |		КОГДА ПроверкаКачестваТоваров.ХарактеристикаНоменклатуры.ТипСрокаГодности = &СрокГодностиМесяц
	               |			ТОГДА "";%1 месяц;;%1 месяца;%1 месяцев;%1 месяца""
	               |		КОГДА ПроверкаКачестваТоваров.ХарактеристикаНоменклатуры.ТипСрокаГодности = &СрокГодностиСутки
	               |			ТОГДА "";%1 сутки;;%1 суток;%1 суток;%1 суток""
	               |		КОГДА ПроверкаКачестваТоваров.ХарактеристикаНоменклатуры.ТипСрокаГодности = &СрокГодностиЧас
	               |			ТОГДА "";%1 час;;%1 часа;%1 часов;%1 часа""
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК ПредставлениеСрокаГодности,
	               |	ПроверкаКачестваТоваров.ХарактеристикаНоменклатуры.СрокГодностиНеограничен КАК СрокГодностиНеограничен,
	               |	ПроверкаКачестваТоваров.МестоОтбораОбразца.Наименование КАК МестоОтбораОбразца,
	               |	ПроверкаКачестваТоваров.ТемператураОбразца,
	               |	ПроверкаКачестваТоваров.ДатаПроизводстваОбразца,
	               |	ПроверкаКачестваТоваров.НомерПротокола,
	               |	ПроверкаКачестваТоваров.ДатаПротокола,
	               |	ПроверкаКачестваТоваров.Заключение,
	               |	ПроверкаКачестваТоваров.ОрганолептическиеПоказатели.(
	               |		Ссылка,
	               |		НомерСтроки,
	               |		Показатель,
	               |		ТребованияПоНД,
	               |		Результат
	               |	),
	               |	ПроверкаКачестваТоваров.ФизикоХимическиеПоказатели.(
	               |		Ссылка,
	               |		НомерСтроки,
	               |		Показатель,
	               |		Показатель.ЕдиницаИзмерения,
	               |		НормативныйДокумент,
	               |		ТребованияПоНД,
	               |		Результат,
	               |		Отклонение
	               |	)
	               |ИЗ
	               |	Документ.ПроверкаКачестваТоваров КАК ПроверкаКачестваТоваров
	               |ГДЕ
	               |	ПроверкаКачестваТоваров.Ссылка = &Ссылка";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Запрос.Параметры.Вставить("СрокГодностиГод", Справочники.ТипыСроковГодности.НайтиПоНаименованию("Год", Истина));
	Запрос.Параметры.Вставить("СрокГодностиМесяц", Справочники.ТипыСроковГодности.НайтиПоНаименованию("Месяц", Истина));
	Запрос.Параметры.Вставить("СрокГодностиСутки", Справочники.ТипыСроковГодности.НайтиПоНаименованию("Сутки", Истина));
	Запрос.Параметры.Вставить("СрокГодностиЧас", Справочники.ТипыСроковГодности.НайтиПоНаименованию("Час", Истина));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СрокГодности = "";
		Если Выборка.СрокГодностиНеограничен = Истина Тогда
			СрокГодности = "Не ограничен";
		Иначе
			Если ЗначениеЗаполнено(Выборка.СрокГодности) Тогда
				Если ЗначениеЗаполнено(Выборка.ПредставлениеСрокаГодности) Тогда
					СрокГодности = СтрокаСЧислом(Выборка.ПредставлениеСрокаГодности, Выборка.СрокГодности, ВидЧисловогоЗначения.Количественное, "L=ru");
				Иначе
					СрокГодности = Строка(Выборка.СрокГодности) + " " + Выборка.ТипСрокаГодности;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ОбластьШапка.Параметры.Заполнить(Выборка);
		ОбластьШапка.Параметры.СрокГодности = СрокГодности;
		ОбластьШапка.Параметры.ТемператураОбразца = Строка(Выборка.ТемператураОбразца) + " °C";
		ТабДок.Вывести(ОбластьШапка);
		
		Если Не Выборка.ОрганолептическиеПоказатели.Пустой() Тогда
			ТабДок.Вывести(ОбластьШапкаОрганолептическиеПоказатели);
			ВыборкаСтрок = Выборка.ОрганолептическиеПоказатели.Выбрать();
			Пока ВыборкаСтрок.Следующий() Цикл
				ОбластьСтрокаОрганолептическиеПоказатели.Параметры.Заполнить(ВыборкаСтрок);
				ТабДок.Вывести(ОбластьСтрокаОрганолептическиеПоказатели);
			КонецЦикла;
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьШапкаФизикоХимическиеПоказатели);
		ВыборкаСтрок = Выборка.ФизикоХимическиеПоказатели.Выбрать();
		Пока ВыборкаСтрок.Следующий() Цикл
			ОбластьСтрокаФизикоХимическиеПоказатели.Параметры.Заполнить(ВыборкаСтрок);
			ТабДок.Вывести(ОбластьСтрокаФизикоХимическиеПоказатели);
			
			Если ВыборкаСтрок.Отклонение Тогда
				ТабДок.Область(ТабДок.ВысотаТаблицы, 6).ЦветТекста = Новый Цвет(255, 0, 0);
			КонецЕсли;
		КонецЦикла;

		ОбластьПодвал.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(ОбластьПодвал);
	КонецЦикла;
КонецПроцедуры
