
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	ДатаВРегистр = ?(ЗначениеЗаполнено(ДатаВыполнения),ДатаВыполнения,Дата);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЖурналРегламентныхРаботВМагазинах.ТорговаяТочка,
	|	ЖурналРегламентныхРаботВМагазинах.Контрагент,
	|	ЖурналРегламентныхРаботВМагазинах.Услуга,
	|	ЖурналРегламентныхРаботВМагазинах.ДатаНачалаПериода,
	|	ЖурналРегламентныхРаботВМагазинах.ДатаОкончанияПериода
	|ИЗ
	|	РегистрСведений.ЖурналРегламентныхРаботВМагазинах КАК ЖурналРегламентныхРаботВМагазинах
	|ГДЕ
	|	ЖурналРегламентныхРаботВМагазинах.ЗаявкаНаВнеплановуюРаботу = &ЗаявкаНаВнеплановуюРаботу";
	Запрос.УстановитьПараметр("ЗаявкаНаВнеплановуюРаботу",Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если не Выборка.Количество() = 0 Тогда
		Пока Выборка.Следующий() Цикл
			НаборЗаписей = РегистрыСведений.ЖурналРегламентныхРаботВМагазинах.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ТорговаяТочка.Установить(Выборка.ТорговаяТочка);
			НаборЗаписей.Отбор.Контрагент.Установить(Выборка.Контрагент);
			НаборЗаписей.Отбор.Услуга.Установить(Выборка.Услуга);
			НаборЗаписей.Отбор.ДатаНачалаПериода.Установить(Выборка.ДатаНачалаПериода);
			НаборЗаписей.Отбор.ДатаОкончанияПериода.Установить(Выборка.ДатаОкончанияПериода);
			НаборЗаписей.Прочитать();
			НаборЗаписей.Очистить();
			НаборЗаписей.Записать();
		КонецЦикла;
	КонецЕсли;
	Если ЗначениеЗаполнено(Контрагент) и ЗначениеЗаполнено(Услуга) Тогда
		Если ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") и ТипЗнч(Услуга) = Тип("СправочникСсылка.Номенклатура") Тогда
			Запись = РегистрыСведений.ЖурналРегламентныхРаботВМагазинах.СоздатьМенеджерЗаписи();			
			ЗаполнитьЗначенияСвойств(Запись,ЭтотОбъект);
			Запись.ДатаНачалаПериода =  НачалоДня(ДатаВрегистр);
			Запись.ДатаОкончанияПериода =  НачалоДня(ДатаВрегистр);
			Запись.Дата = НачалоДня(ДатаВыполнения);
			Запись.ВнеплановаяРабота = Истина;
			Запись.ЗаявкаНаВнеплановуюРаботу = Ссылка;
			Запись.ПредставлениеПериода = ПолучитьПредставлениеПериода(Перечисления.Периодичность.Месяц, НачалоМесяца(ДатаВрегистр), КонецМесяца(ДатаВрегистр));
			Запись.Записать();
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	НаборЗаписей = РегистрыСведений.ЖурналРегламентныхРаботВМагазинах.СоздатьНаборЗаписей();
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЖурналРегламентныхРаботВМагазинах.ТорговаяТочка,
	|	ЖурналРегламентныхРаботВМагазинах.Контрагент,
	|	ЖурналРегламентныхРаботВМагазинах.Услуга,
	|	ЖурналРегламентныхРаботВМагазинах.ДатаНачалаПериода,
	|	ЖурналРегламентныхРаботВМагазинах.ДатаОкончанияПериода
	|ИЗ
	|	РегистрСведений.ЖурналРегламентныхРаботВМагазинах КАК ЖурналРегламентныхРаботВМагазинах
	|ГДЕ
	|	ЖурналРегламентныхРаботВМагазинах.ЗаявкаНаВнеплановуюРаботу = &ЗаявкаНаВнеплановуюРаботу";
	Запрос.УстановитьПараметр("ЗаявкаНаВнеплановуюРаботу",Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если не Выборка.Количество() = 0 Тогда
		НаборЗаписей.Отбор.ТорговаяТочка.Установить(Выборка.ТорговаяТочка);
		НаборЗаписей.Отбор.Контрагент.Установить(Выборка.Контрагент);
		НаборЗаписей.Отбор.Услуга.Установить(Выборка.Услуга);
		НаборЗаписей.Отбор.ДатаНачалаПериода.Установить(Выборка.ДатаНачалаПериода);
		НаборЗаписей.Отбор.ДатаОкончанияПериода.Установить(Выборка.ДатаОкончанияПериода);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СообщениеМОС") Тогда
		ТорговаяТочка = ДанныеЗаполнения.ОтИмени;		
	КонецЕсли;
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.АК_ЗаявкаНаВнеплановоеОбслуживание") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		Дата 				= Неопределено;
		Номер				= Неопределено;
		ИдентификаторРаботы = Неопределено;
		ДатаВыполнения 		= Неопределено;
		Согласовано			= Ложь;
		Автор 				= Неопределено;
		Исполнитель 		= Неопределено;
		Если ДанныеЗаполнения.Товары.Количество() Тогда
			Товары.Загрузить(ДанныеЗаполнения.Товары.Выгрузить());	
		Иначе
			Сумма 			= Неопределено;	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьПредставлениеМесяца(мДата)
	
	Если Месяц(мДата) = 1 Тогда
		Возврат "Январь";
	ИначеЕсли Месяц(мДата) = 2 Тогда
		Возврат "Февраль";
	ИначеЕсли Месяц(мДата) = 3 Тогда
		Возврат "Март";
	ИначеЕсли Месяц(мДата) = 4 Тогда
		Возврат "Апрель";
	ИначеЕсли Месяц(мДата) = 5 Тогда
		Возврат "Май";
	ИначеЕсли Месяц(мДата) = 6 Тогда
		Возврат "Июнь";
	ИначеЕсли Месяц(мДата) = 7 Тогда
		Возврат "Июль";
	ИначеЕсли Месяц(мДата) = 8 Тогда
		Возврат "Август";
	ИначеЕсли Месяц(мДата) = 9 Тогда
		Возврат "Сентябрь";   
	ИначеЕсли Месяц(мДата) = 10 Тогда
		Возврат "Октябрь";
	ИначеЕсли Месяц(мДата) = 11 Тогда
		Возврат "Ноябрь";
	Иначе
		Возврат "Декабрь";
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПредставлениеПериода(мПериодичность, мДатаНачала, мДатаОкончания)
	
	ТекПредставлениеПериода = "";
	Если мПериодичность = Перечисления.Периодичность.День Тогда
		ТекПредставлениеПериода = Формат(мДатаНачала, "ДЛФ=Д");
	ИначеЕсли мПериодичность = Перечисления.Периодичность.Неделя Тогда
		ТекПредставлениеПериода = Формат(мДатаНачала, "ДЛФ=Д") + " - " + Формат(мДатаОкончания, "ДЛФ=Д");
	ИначеЕсли мПериодичность = Перечисления.Периодичность.Месяц Тогда
		ТекПредставлениеПериода = ПолучитьПредставлениеМесяца(мДатаНачала) + " " + Формат(Год(мДатаНачала), "ЧГ=") + "г.";
	ИначеЕсли мПериодичность = Перечисления.Периодичность.Год Тогда
		ТекПредставлениеПериода = Формат(Год(мДатаНачала), "ЧГ=") + "г.";
	ИначеЕсли мПериодичность = Перечисления.Периодичность.Квартал Тогда
		Квартал = Цел((Месяц(мДатаНачала)-1)/3) + 1;
		ТекПредставлениеПериода = "" + Квартал + " квартал " + Формат(мДатаНачала, "ДФ=yyyy") + "г.";
	КонецЕсли;
	
	Возврат ТекПредставлениеПериода;
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ЗаполнитьРеквизит("ИдентификаторРаботы", Новый УникальныйИдентификатор);
	ЗаполнитьРеквизит("Дата", ТекущаяДата());
	ЗаполнитьРеквизит("Автор", ПараметрыСеанса.ТекущийПользователь);
	//Если Согласовано и не Ссылка.Согласовано и ТипЗнч(Контрагент)=Тип("СправочникСсылка.Контрагенты") Тогда
	//	ОповеститьКонтрагента();	
	//КонецЕсли;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	Дата 				= Неопределено;
	Номер				= Неопределено;
	ИдентификаторРаботы = Неопределено;
	ДатаВыполнения 		= Неопределено;
	Согласовано			= Ложь;
	Автор 				= Неопределено;
	Сумма 				= Неопределено;
	Исполнитель 		= Неопределено;
КонецПроцедуры

Процедура ЗаполнитьРеквизит(Реквизит, НовоеЗначение)
	Если не ЗначениеЗаполнено(ЭтотОбъект[Реквизит]) Тогда 
		ЭтотОбъект[Реквизит] = НовоеЗначение;	
	КонецЕсли;
КонецПроцедуры

Процедура ОповеститьКонтрагента()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	КонтактнаяИнформация.Объект,
	               |	КонтактнаяИнформация.Тип,
	               |	КонтактнаяИнформация.Вид КАК Вид,
	               |	КонтактнаяИнформация.Представление
	               |ИЗ
	               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |ГДЕ
	               |	КонтактнаяИнформация.Тип = &Тип
	               |	И КонтактнаяИнформация.Объект = &Объект
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Вид УБЫВ";
	Запрос.УстановитьПараметр("Тип",Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	Запрос.УстановитьПараметр("Объект",Контрагент);
	Выборка = Запрос.Выполнить().Выбрать();
	Если не Выборка.Количество() = 0 Тогда
		Выборка.Следующий();
		Разделитель = Найти(Выборка.Представление,";");
		Если Разделитель > 0 Тогда
			АдресОтправителя = Лев(Выборка.Представление,Разделитель-1);
		иначе
			АдресОтправителя = Выборка.Представление;	
		КонецЕсли;
		Тема = "Заявка на услугу """+ Услуга +""" согласована";
		ТекстПисьма =  "Заявка на услугу """+ Услуга +""" согласована
		|Адрес магазина: "+ТорговаяТочка.Адрес+"
		|НомерТелефона1
		|НомерТелефона2";
		НомерТелефона1 = СокрЛП(ТорговаяТочка.ТелефонныйНомер1);
		НомерТелефона2 = СокрЛП(ТорговаяТочка.ТелефонныйНомер2);
		Если СтрДлина(НомерТелефона1) = 10 Тогда 
			НомерТелефона1Измененный = "+7("+Лев(НомерТелефона1,3)+")"+Сред(НомерТелефона1,4,3)+"-"+Сред(НомерТелефона1,7);
			ТекстПисьма = СтрЗаменить(ТекстПисьма,"НомерТелефона1", "Номер телефона: "+НомерТелефона1Измененный);
		иначе
			ТекстПисьма = СтрЗаменить(ТекстПисьма,"НомерТелефона1", "");
		КонецЕсли;
		Если СтрДлина(НомерТелефона2) = 10 и не НомерТелефона1=НомерТелефона2 Тогда 
			НомерТелефона2Измененный = "+7("+Лев(НомерТелефона2,3)+")"+Сред(НомерТелефона2,4,3)+"-"+Сред(НомерТелефона2,7);
			ТекстПисьма = СтрЗаменить(ТекстПисьма,"НомерТелефона2", "Номер телефона: "+НомерТелефона2Измененный);
		иначе
			ТекстПисьма = СтрЗаменить(ТекстПисьма,"НомерТелефона2", "");
		КонецЕсли;
		
		
		УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоКоду("000000001");  // no-reply@vkusvill.ru
		Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
		Почта = Новый ИнтернетПочта;
		
		Сообщ = Новый СообщениеПользователю();
		Попытка
			Почта.Подключиться(Профиль);
		Исключение
			// Ошибка при подключении к серверу или при приеме сообщения обмена
			Сообщ.Текст = " - Ошибка при подключении или приеме" + ОписаниеОшибки();
			Сообщ.Сообщить();
			Возврат;
		КонецПопытки;
		
		Письмо = Новый ИнтернетПочтовоеСообщение;
		Письмо.Тема = Тема;
		Письмо.Отправитель = УчетнаяЗапись.Логин;
		Письмо.ИмяОтправителя = УчетнаяЗапись.Логин;
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = АдресОтправителя;
		ТекстПиьсма = Письмо.Тексты.Добавить();
		ТекстПиьсма.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
		ТекстПиьсма.Текст = ТекстПисьма;
		Почта.Послать(Письмо);
		Почта.Отключиться();
	КонецЕсли;
КонецПроцедуры


