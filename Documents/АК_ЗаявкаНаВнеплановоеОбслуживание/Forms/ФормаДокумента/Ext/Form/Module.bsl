
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 07.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Заявка на внеплановое обслуживание");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	Согласовано = Объект.Согласовано;
	Если не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
		Объект.Дата = ТекущаяДата();
	КонецЕсли;
	ОбновитьФотографииСервер();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФотографии(Команда)
	ОбновитьФотографииСервер();
КонецПроцедуры

&НаСервере
Процедура ОбновитьФотографииСервер()
	Если ЗначениеЗаполнено(Объект.ИдентификаторРаботы) Тогда
		ПредпросмотрФотографий = Документы.АК_ЗаявкаНаВнеплановоеОбслуживание.ЗаполнитьХМТЛ(Объект.ИдентификаторРаботы,ТаблицаФотографий);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СогласованоПриИзменении(Элемент)
	Объект.Согласовано = Согласовано;
	ДоступностьГруппыВыполнения();
КонецПроцедуры

&НаКлиенте
Процедура ДоступностьГруппыВыполнения()
	//Элементы.ГруппаВыполненнойРаботы.Доступность = Объект.Согласовано;		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ДоступностьГруппыВыполнения();
	//+++АК sils 07.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
	//---АК
КонецПроцедуры

&НаКлиенте
Процедура ПредпросмотрФотографийПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Попытка 
		Если ДанныеСобытия.Element.name = "picture" Тогда
			ИндексСтроки = Число(ДанныеСобытия.Element.id);
			пИмяФайла = ТаблицаФотографий[ИндексСтроки].ПутьКФайлу;
			попытка
				ЗапуститьПриложение(пИмяФайла);
			исключение
				Картинка = Новый Картинка(пИмяФайла);
				АдресКартинки = ПоместитьВоВременноеХранилище(Картинка, УникальныйИдентификатор);
				ПараметрыФормы = Новый Структура("КартинкаСсылка", АдресКартинки); 
				ОткрытьФорму("ОбщаяФорма.Фото", ПараметрыФормы);	
			КонецПопытки;
		КонецЕсли;
	Исключение
	КонецПопытки; 
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ТекНоменклатура = ТекущиеДанные.Номенклатура;
	Если ЗначениеЗаполнено(ТекНоменклатура) Тогда
		ТекущиеДанные.Цена = ОпределитьЦенуПоставщика(ТекНоменклатура, Объект.Контрагент);
	иначе
		ТекущиеДанные.Цена = 0;
	КонецЕсли;
	СуммаСтроки();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОпределитьЦенуПоставщика(Номенклатура,Поставщик)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦеныПоставщиковСрезПоследних.Цена
	|ИЗ
	|	РегистрСведений.ЦеныПоставщиков.СрезПоследних(
	|			&Период,
	|			Поставщик = &Поставщик
	|				И Номенклатура = &Номенклатура) КАК ЦеныПоставщиковСрезПоследних";
	Запрос.УстановитьПараметр("Период",ТекущаяДата());
	Запрос.УстановитьПараметр("Поставщик",Поставщик);
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество()=0 Тогда
		Возврат 0;
	иначе
		Выборка.Следующий();
		Возврат Выборка.Цена;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
		ТекущиеДанные.Количество = 1;
		Если Объект.Товары.Количество() = 1 Тогда
			Объект.СуммаАвтоматически = Истина;	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СуммаДокументаАвтоматически()
	Если Объект.СуммаАвтоматически Тогда
		Объект.Сумма = ОБъект.Товары.Итог("Сумма");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СуммаАвтоматическиПриИзменении(Элемент)
	Элементы.Сумма.ТолькоПросмотр = Объект.СуммаАвтоматически;
	Если Объект.СуммаАвтоматически Тогда
		Объект.Сумма = ОБъект.Товары.Итог("Сумма");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	СуммаДокументаАвтоматически();
КонецПроцедуры

&НаКлиенте
Процедура СуммаСтроки()
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество;				
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	СуммаСтроки();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	СуммаСтроки();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Форма = ПолучитьФорму("Справочник.Контрагенты.ФормаВыбора",,Элемент);
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Если ЗначениеЗаполнено(Объект.Контрагент) и ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
			Форма.НачальноеЗначениеВыбора = Объект.Контрагент;
		Иначе
			ГруппаПоставщиковУслуг = ГруппаПоставщиковУслуг();
			Форма.ЭлементыФормы.СправочникДерево.ТекущаяСтрока = ГруппаПоставщиковУслуг;
			Форма.ЭлементыФормы.СправочникСписок.ТекущийРодитель = ГруппаПоставщиковУслуг;
		КонецЕсли;
		Форма.Открыть();
	#иначе
		Форма.Открыть();
		Форма.Элементы.Список.Отображение = ОтображениеТаблицы.ИерархическийСписок;
		Если ЗначениеЗаполнено(Объект.Контрагент) и ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
			Форма.Элементы.Список.ТекущаяСтрока = Объект.Контрагент;
		Иначе
			ГруппаПоставщиковУслуг = ГруппаПоставщиковУслуг();
			Форма.Элементы.Список.ТекущаяСтрока = ГруппаПоставщиковУслуг;
			Форма.Элементы.Список.ТекущийРодитель = ГруппаПоставщиковУслуг;
		КонецЕсли;
 	#КонецЕсли
КонецПроцедуры

&НаСервереБезКонтекста
Функция ГруппаПоставщиковУслуг()
	возврат Справочники.Контрагенты.НайтиПоКоду("Т00000253");	
КонецФункции

&НаСервере
Функция ГруппаПлановых()
	возврат (Объект.Услуга.Родитель.Код="000621370");	
КонецФункции

&НаКлиенте
Процедура УслугаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Форма = ПолучитьФорму("Справочник.Номенклатура.ФормаВыбора",,Элемент);
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Если ЗначениеЗаполнено(Объект.Услуга) и ТипЗнч(Объект.Услуга) = Тип("СправочникСсылка.Номенклатура") Тогда
			Форма.НачальноеЗначениеВыбора = Объект.Услуга;
		иначе
			ГруппаНоменклатуры = ГруппаНоменклатуры("000622194");
			Форма.ЭлементыФормы.СправочникДерево.ТекущаяСтрока = ГруппаНоменклатуры;
			Форма.ЭлементыФормы.СправочникСписок.ТекущийРодитель = ГруппаНоменклатуры;
		КонецЕсли;
		Форма.Открыть();
	#иначе
		Форма.Открыть();
		Форма.Элементы.Список.Отображение = ОтображениеТаблицы.ИерархическийСписок;
		Если ЗначениеЗаполнено(Объект.Услуга) Тогда
			Форма.Элементы.Список.ТекущаяСтрока = Объект.Услуга;
		иначе
			ГруппаНоменклатуры = ГруппаНоменклатуры("000622194");
			Форма.Элементы.Список.ТекущаяСтрока = ГруппаНоменклатуры;
			Форма.Элементы.Список.ТекущийРодитель = ГруппаНоменклатуры;
		КонецЕсли;
	#КонецЕсли	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ГруппаНоменклатуры(Код)
	возврат Справочники.Номенклатура.НайтиПоКоду(Код);	
КонецФункции

&НаКлиенте
Процедура УслугаПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.Услуга) Тогда
		Если ГруппаПлановых() Тогда
			Предупреждение("Нельзя выбирать абонентскую услугу");
			Объект.Услуга = Неопределено;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция Доступно(мТорговаяТочка, ДатаЗаявки, ДатаВыполнения)
	
	Если ЗначениеЗаполнено(мТорговаяТочка)
			И НЕ РольДоступна("ПолныеПрава") Тогда
		
		Период = ?(ЗначениеЗаполнено(ДатаВыполнения), ДатаВыполнения, ?(ЗначениеЗаполнено(ДатаЗаявки), ДатаЗаявки, ТекущаяДата()));
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Объект"		, мТорговаяТочка);
		Запрос.УстановитьПараметр("Период"		, Период);
		Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствиеОбъектРольСрезПоследних.РольПользователя
		|ПОМЕСТИТЬ ВТ_РолиПоТочкам
		|ИЗ
		|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
		|			&Период,
		//+++ AK suvv 2018.06.08 ИП-00018376.01
		//|			ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
		|			(ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
		|            ИЛИ ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы))
		//--- AK suvv
		|				И Объект В
		|					(ВЫБРАТЬ
		|						ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница
		|					ИЗ
		|						РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&Период, ) КАК ЦФОСтруктурныхЕдиницСрезПоследних
		|					ГДЕ
		|						ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО В
		|							(ВЫБРАТЬ
		|								ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО
		|							ИЗ
		|								РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&Период, СтруктурнаяЕдиница = &Объект) КАК ЦФОСтруктурныхЕдиницСрезПоследних))) КАК СоответствиеОбъектРольСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_РолиПоТочкам.РольПользователя
		|ПОМЕСТИТЬ ВТ_ИтогРоли
		|ИЗ
		|	ВТ_РолиПоТочкам КАК ВТ_РолиПоТочкам
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_РолиПоТочкам.РольПользователя.Родитель
		|ИЗ
		|	ВТ_РолиПоТочкам КАК ВТ_РолиПоТочкам
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ИтогРоли.РольПользователя,
		|	РолиПользователейСоставРоли.Сотрудник,
		|	Пользователи.Ссылка КАК Пользователь
		|ИЗ
		|	ВТ_ИтогРоли КАК ВТ_ИтогРоли
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|			ПО РолиПользователейСоставРоли.Сотрудник = Пользователи.ФизЛицо
		|		ПО ВТ_ИтогРоли.РольПользователя = РолиПользователейСоставРоли.Ссылка
		|ГДЕ
		|	Пользователи.Ссылка = &Пользователь";
		
		Возврат Запрос.Выполнить().Выбрать().Количество();
		
	Иначе
		
		Возврат Истина;
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если НЕ Доступно(Объект.ТорговаяТочка, Объект.Дата, Объект.ДатаВыполнения) Тогда
		Объект.Дата = Неопределено;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаВыполненияПриИзменении(Элемент)
	
	Если НЕ Доступно(Объект.ТорговаяТочка, Объект.Дата, Объект.ДатаВыполнения) Тогда
		Объект.ДатаВыполнения = Неопределено;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТорговаяТочкаПриИзменении(Элемент)
	//Если не Доступно(Объект.ТорговаяТочка, Объект.Дата, Объект.ДатаВыполнения) Тогда
	//	Объект.ТорговаяТочка = Неопределено;	
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ЗаполнитьХМТЛ(ИдентификаторРаботы,ТаблицаФотографий) Экспорт
	ПерезаполнитьТаблицуФотографий(ИдентификаторРаботы,ТаблицаФотографий);
	ИндексСтрокиКартики = 0;	
	ПолныйТекстHTML = "
	|<html><body>
	|<table name = ""PictView"" scroling = ""no"">";	
	Для Каждого стр из ТаблицаФотографий Цикл
		ПолныйТекстHTML = ПолныйТекстHTML + "
		|<tr>";
		ИмяФайла = стр.ПутьКФайлу;
		ПолныйТекстHTML = ПолныйТекстHTML+ "
		|<td><table id=""" + ИндексСтрокиКартики + "_T" + """ border=""2"" cellpadding=""0"" bordercolor=#ffffff cellspacing=""0""><tr><td><img name=""picture"" width = 150 height=150 style = ""cursor: pointer"" id = """  + ИндексСтрокиКартики  + """ src = ""file:///" + СтрЗаменить(ИмяФайла, "\", "/") + """></td></tr></table></td>";	
		ПолныйТекстHTML = ПолныйТекстHTML + "
		|</tr>";
		ИндексСтрокиКартики = ИндексСтрокиКартики + 1;
	КонецЦикла;		
	ПолныйТекстHTML = ПолныйТекстHTML + "</body></html>";
	возврат ПолныйТекстHTML;
КонецФункции

&НаСервере
Процедура ПерезаполнитьТаблицуФотографий(ИдентификаторРаботы,ТаблицаФотографий)
	ТаблицаФотографий.Очистить();
	КаталогХраненияФайловКартинок = Константы.МП_КаталогХраненияФайловЗадачМП.Получить();
	Если Прав(КаталогХраненияФайловКартинок, 1) <> "\" Тогда
		КаталогХраненияФайловКартинок = КаталогХраненияФайловКартинок + "\";
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПрикрепленныеФотоКОбъектам.ОтносительноеИмяФайла КАК ИмяФайла
	|ИЗ
	|	РегистрСведений.ПрикрепленныеФотоКОбъектам КАК ПрикрепленныеФотоКОбъектам
	|ГДЕ
	|	ПрикрепленныеФотоКОбъектам.Объект = &УИН
	|	И ПрикрепленныеФотоКОбъектам.ТипЗаписи = ЗНАЧЕНИЕ(перечисление.ТипыЗаписейПриложенныхКартинок.РегламентнаяРабота)";
	Запрос.УстановитьПараметр("УИН",строка(ИдентификаторРаботы));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Файл = Новый Файл(КаталогХраненияФайловКартинок+Выборка.ИмяФайла);
		Если не Файл.Существует() Тогда 
		иначе
			стр = ТаблицаФотографий.Добавить();
			стр.ПутьКФайлу = КаталогХраненияФайловКартинок + Выборка.ИмяФайла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьУведомление(Команда)
	НаписатьПисьмоЗаявкеОшибка();
КонецПроцедуры

&НаКлиенте
Процедура НаписатьПисьмоЗаявкеОшибка() Экспорт
	#Если ТонкийКлиент Тогда
		СтруктураВозврата = НаписатьПисьмоЗаявке(Ложь);
		Если НЕ СтруктураВозврата = Неопределено Тогда
			Если ЗначениеЗаполнено(СтруктураВозврата.ПисьмоСсылка) Тогда
				Отправить(СтруктураВозврата.ПисьмоСсылка);	
			КонецЕсли;
		КонецЕсли;
	#ИначеЕсли ТолстыйКлиентОбычноеПриложение Тогда
		СтруктураНовогоПисьма = Новый Структура;
		СтруктураНовогоПисьма.Вставить("Основание", Объект.Ссылка);
		СтруктураНовогоПисьма.Вставить("Тема", "В заявке на внеплановое обслуживание № " + Строка(Объект.Номер) + " от " + Формат(Объект.Дата, "ДФ=dd.MM.yyyy") + " ОШИБКА");
		СтруктураНовогоПисьма.Вставить("ЗаявкаКандидата", Объект.Автор);
		СтруктураНовогоПисьма.Вставить("Тело", "В заявке на внеплановое обслуживание № " + Строка(Объект.Номер) + " от " + Формат(Объект.Дата, "ДФ=dd.MM.yyyy") + " ОШИБКА" + Символы.ПС+ Символы.ПС + "Ответственный: " + Объект.Автор
		+ Символы.ПС+ " Контрагент: " + Объект.Контрагент + Символы.ПС+ " Услуга: " + Объект.Услуга + Символы.ПС+ " Торговая точка: " + Объект.ТорговаяТочка);
		
		СписокКому = Новый СписокЗначений;
		Адрес = "";	
		ЗаполнитьАдреса(Адрес,СписокКому,Объект.Автор);
		
		СтруктураНовогоПисьма.Вставить("Кому", СписокКому);
		СтруктураНовогоПисьма.Вставить("Основание", Объект.Ссылка);
		
		СтруктураВозврата = УправлениеЭлектроннойПочтой.НаписатьПисьмо(ТекущийПользователь(),СтруктураНовогоПисьма,,, (НЕ ПустаяСтрока(Адрес)), "Отправить",,, Истина);
	#Иначе
		Сообщить("В данном режиме отправка не поддерживается");
	#КонецЕсли
КонецПроцедуры

&НаСервере
Процедура Отправить(ПисьмоСсылка)
	Обкт = ПисьмоСсылка.ПолучитьОбъект();
	
	Если УправлениеЭлектроннойПочтой.ПолучитьДоступныеУчетныеЗаписи(глЗначениеПеременной("глТекущийПользователь")).Запись.НайтиПоЗначению(ПисьмоСсылка.УчетнаяЗапись) <> Неопределено Тогда
		УчетныеЗаписи = Новый Массив;
		УчетныеЗаписи.Добавить(ПисьмоСсылка.УчетнаяЗапись);
		Письма = Новый Соответствие;
		Письма.Вставить(ПисьмоСсылка, Обкт);
		УправлениеЭлектроннойПочтой.ПолучениеОтправкаПисем(глЗначениеПеременной("глСоответствиеТекстовЭлектронныхПисем"), глЗначениеПеременной("глТекущийПользователь"), УчетныеЗаписи, Письма, Истина);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция НаписатьПисьмоЗаявке(Открыть) Экспорт

	СтруктураНовогоПисьма = Новый Структура;
	СтруктураНовогоПисьма.Вставить("Основание", Объект.Ссылка);
	СтруктураНовогоПисьма.Вставить("Тема", "В заявке на внеплановое обслуживание № " + Строка(Объект.Номер) + " от " + Формат(Объект.Дата, "ДФ=dd.MM.yyyy") + " ОШИБКА");
	СтруктураНовогоПисьма.Вставить("ЗаявкаКандидата", Объект.Автор);
	СтруктураНовогоПисьма.Вставить("Тело", "В заявке на внеплановое обслуживание № " + Строка(Объект.Номер) + " от " + Формат(Объект.Дата, "ДФ=dd.MM.yyyy") + " ОШИБКА" + Символы.ПС+ Символы.ПС + "Ответственный: " + Объект.Автор
	+ Символы.ПС+ " Контрагент: " + Объект.Контрагент + Символы.ПС+ " Услуга: " + Объект.Услуга + Символы.ПС+ " Торговая точка: " + Объект.ТорговаяТочка);
	
	СписокКому = Новый СписокЗначений;
	Адрес = "";	
	ЗаполнитьАдреса(Адрес,СписокКому,Объект.Автор);

	
	СтруктураНовогоПисьма.Вставить("Кому", СписокКому);
	СтруктураНовогоПисьма.Вставить("Основание", Объект.Ссылка);
	
	СтруктураВозврата = УправлениеЭлектроннойПочтой.НаписатьПисьмо(ТекущийПользователь(),СтруктураНовогоПисьма,,, (НЕ ПустаяСтрока(Адрес)), "Отправить",,, Открыть);
	
	возврат	СтруктураВозврата;	
КонецФункции


&НаСервереБезКонтекста
Функция ТекущийПользователь()
	Возврат глЗначениеПеременной("глТекущийПользователь");
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаполнитьАдреса(Адрес,СписокКому, Автор)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И КонтактнаяИнформация.Тип = &Тип
	|	И КонтактнаяИнформация.Вид = &Вид";
	
	Запрос.УстановитьПараметр("Объект", Автор);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.СлужебныйАдресЭлектроннойПочтыПользователя);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Адрес = Выборка.Представление;
	КонецЕсли;                        			
	
	Если НЕ ПустаяСтрока(Адрес) Тогда
		СписокКому.Добавить(Адрес, Адрес);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Форма = ПолучитьФорму("Справочник.Номенклатура.ФормаВыбора",,Элемент);
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Если ЗначениеЗаполнено(ДанныеВыбора) Тогда
			Форма.НачальноеЗначениеВыбора = ДанныеВыбора;
		иначе
			ГруппаНоменклатуры = ГруппаНоменклатуры("000621342");
			Форма.ЭлементыФормы.СправочникДерево.ТекущаяСтрока = ГруппаНоменклатуры;
			Форма.ЭлементыФормы.СправочникСписок.ТекущийРодитель = ГруппаНоменклатуры;
		КонецЕсли;
		Форма.Открыть();
	#иначе
		Форма.Открыть();
		Форма.Элементы.Список.Отображение = ОтображениеТаблицы.ИерархическийСписок;
		Если ЗначениеЗаполнено(ДанныеВыбора) Тогда
			Форма.Элементы.Список.ТекущаяСтрока = ДанныеВыбора;
		иначе
			ГруппаНоменклатуры = ГруппаНоменклатуры("000621342");
			Форма.Элементы.Список.ТекущаяСтрока = ГруппаНоменклатуры;
			Форма.Элементы.Список.ТекущийРодитель = ГруппаНоменклатуры;
		КонецЕсли;
	#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Объект.СуммаАвтоматически Тогда
		Объект.Сумма = ОБъект.Товары.Итог("Сумма");
	КонецЕсли;
	
КонецПроцедуры





