
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТолькоМоиТорговыеТочки = Истина;
	Если Параметры.Свойство("Заявка") Тогда 
		Заявка = Параметры.Заявка;
		Контрагент = Заявка.Контрагент;
		Услуга = Заявка.Услуга;
	КонецЕсли;
	ТолькоОткрытые = Истина;
	ЗаполнитьТорговыеТочки();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТорговыеТочки()
	СписокТорговыхТочек.Очистить();
	Если РольДоступна("ПолныеПрава") Или НЕ ТолькоМоиТорговыеТочки Тогда
		Запрос = Новый Запрос; 
		Запрос.УстановитьПараметр("ПоказыватьЗакрытые",ПоказыватьЗакрытые);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтруктурныеЕдиницы.Ссылка КАК ТорговаяТочка,
		|	СтруктурныеЕдиницы.СтатусТорговойТочки КАК Статус
		|ИЗ
		|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ПоказыватьЗакрытые
		|				ТОГДА ИСТИНА
		//+++АК ILIK 2018.08.08 ИП-00019413
		//|			ИНАЧЕ НЕ СтруктурныеЕдиницы.СтатусТорговойТочки = ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Закрыт)
		|			ИНАЧЕ НЕ СтруктурныеЕдиницы.СтатусТорговойТочки В (ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Закрыт), ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Приостановлен))
		//---АК ILIK
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтруктурныеЕдиницы.Наименование";
	Иначе
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТипРоли", ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего);
		//+++ AK suvv 2018.06.08 ИП-00018376.01
		Запрос.УстановитьПараметр("ТипРолиСтороннняяРозница", ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы);
		//--- AK suvv
		Запрос.УстановитьПараметр("Ссылка", ПараметрыСеанса.ТекущийПользователь);
		Запрос.УстановитьПараметр("ПоказыватьЗакрытые",ПоказыватьЗакрытые);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствиеОбъектРольСрезПоследних.РольПользователя,
		|	СоответствиеОбъектРольСрезПоследних.Объект
		|ПОМЕСТИТЬ ВТ_Роли
		|ИЗ
		//+++ AK suvv 2018.06.08 ИП-00018376.01
		//|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
		|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(, ТипРоли = &ТипРоли или ТипРоли = &ТипРолиСтороннняяРозница) КАК СоответствиеОбъектРольСрезПоследних
		//--- AK suvv
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Роли.РольПользователя,
		|	ВТ_Роли.Объект
		|ПОМЕСТИТЬ ВТ_Итог
		|ИЗ
		|	ВТ_Роли КАК ВТ_Роли
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Роли.РольПользователя.Родитель,
		|	ВТ_Роли.Объект
		|ИЗ
		|	ВТ_Роли КАК ВТ_Роли
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Пользователи.Ссылка,
		|	ВТ_Итог.Объект КАК ТорговаяТочка,
		|	ВТ_Итог.Объект.Наименование КАК ОбъектНаименование,
		|	ВТ_Итог.Объект.СтатусТорговойТочки КАК Статус
		|ИЗ
		|	ВТ_Итог КАК ВТ_Итог
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|			ПО РолиПользователейСоставРоли.Сотрудник = Пользователи.ФизЛицо
		|		ПО ВТ_Итог.РольПользователя = РолиПользователейСоставРоли.Ссылка
		|ГДЕ
		|	Пользователи.Ссылка = &Ссылка
		|	И ВЫБОР
		|			КОГДА &ПоказыватьЗакрытые
		|				ТОГДА ИСТИНА
		//+++АК ILIK 2018.08.08 ИП-00019413
		//|			ИНАЧЕ НЕ ВТ_Итог.Объект.СтатусТорговойТочки = ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Закрыт)
		|			ИНАЧЕ НЕ ВТ_Итог.Объект.СтатусТорговойТочки В (ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Закрыт), ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Приостановлен))
		//---АК ILIK
		|		КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОбъектНаименование";
	КонецЕсли;
	СписокТорговыхТочек.Загрузить(Запрос.Выполнить().Выгрузить());
	//Выделить ТТ из заявки
	СтруктураПоиска = Новый Структура("ТорговаяТочка", Заявка.ТорговаяТочка);
	МассивСтрок = СписокТорговыхТочек.НайтиСтроки(СтруктураПоиска);
	Если НЕ МассивСтрок = Неопределено Тогда
		Для Каждого СтрокаТЧ из МассивСтрок Цикл
			СтрокаТЧ.Создать = Истина;	
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТолькоОткрытыеПриИзменении(Элемент)
	ЗаполнитьТорговыеТочки();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаявки(Команда)
	КоличествоЗаявок = Элементы.Календарь.ВыделенныеДаты.Количество();
	Если КоличествоЗаявок = 0 Тогда
		Сообщить("Необходимо выделить одну или несколько дат(зажав клавишу Ctrl), на которые надо создать заявки");	
	иначе
		ТекстВопроса = "Создать копии заявок ?";
		Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			СоздатьЗаявкиСервер();	
			Закрыть();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СоздатьЗаявкиСервер()
	МассивДат.Очистить();
	МассивСтрок = СписокТорговыхТочек.НайтиСтроки(Новый Структура("Создать", Истина));
	Если НЕ МассивСтрок = Неопределено Тогда
		Для Каждого СтрокаТТ из МассивСтрок Цикл
			Для Каждого ДатаЗаявки из Элементы.Календарь.ВыделенныеДаты Цикл
				стр = МассивДат.Добавить();
				стр.ДатаЗаявки = ДатаЗаявки;
				стр.ТорговаяТочка = СтрокаТТ.ТорговаяТочка;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	Если НЕ Дублировать и МассивДат.Количество() Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("МассивДат", МассивДат.Выгрузить());
		Запрос.УстановитьПараметр("Контрагент",Контрагент);
		Запрос.УстановитьПараметр("Услуга",Услуга);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(АК_ЗаявкаНаВнеплановоеОбслуживание.Дата, ДЕНЬ) КАК Дата,
		|	АК_ЗаявкаНаВнеплановоеОбслуживание.ТорговаяТочка
		|ПОМЕСТИТЬ ВТ_Заявки
		|ИЗ
		|	Документ.АК_ЗаявкаНаВнеплановоеОбслуживание КАК АК_ЗаявкаНаВнеплановоеОбслуживание
		|ГДЕ
		|	АК_ЗаявкаНаВнеплановоеОбслуживание.Услуга = &Услуга
		|	И АК_ЗаявкаНаВнеплановоеОбслуживание.Контрагент = &Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(МассивДат.ДатаЗаявки, ДЕНЬ) КАК ДатаЗаявки,
		|	МассивДат.ТорговаяТочка
		|ПОМЕСТИТЬ ВТ_МассивДат
		|ИЗ
		|	&МассивДат КАК МассивДат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_МассивДат.ТорговаяТочка КАК ТорговаяТочка,
		|	ВТ_МассивДат.ДатаЗаявки,
		|	ВТ_Заявки.Дата
		|ИЗ
		|	ВТ_МассивДат КАК ВТ_МассивДат
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заявки КАК ВТ_Заявки
		|		ПО ВТ_МассивДат.ТорговаяТочка = ВТ_Заявки.ТорговаяТочка
		|			И ВТ_МассивДат.ДатаЗаявки = ВТ_Заявки.Дата
		|ГДЕ
		|	ВТ_Заявки.Дата ЕСТЬ NULL ";
		МассивДат.Загрузить(Запрос.Выполнить().Выгрузить());
	КонецЕсли;
	Для Каждого СтрокаТЧ Из МассивДат Цикл
		НоваяЗаявка = Документы.АК_ЗаявкаНаВнеплановоеОбслуживание.СоздатьДокумент();
		НоваяЗаявка.Заполнить(Заявка);
		НоваяЗаявка.Дата = СтрокаТЧ.ДатаЗаявки;
		НоваяЗаявка.ТорговаяТочка = СтрокаТЧ.ТорговаяТочка;
		НоваяЗаявка.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ТолькоМоиТорговыеТочкиПриИзменении(Элемент)
	ЗаполнитьТорговыеТочки();
КонецПроцедуры

&НаКлиенте
Процедура КалендарьПриАктивизацииДаты(Элемент)
	//найд = ВыделенныеДаты.НайтиПоЗначению(Календарь);
	//Если найд = Неопределено Тогда
	//	ВыделенныеДаты.Добавить(Календарь);
	//Иначе 
	//	//ВыделенныеДаты.Удалить(найд);
	//КонецЕсли;
	//Элементы.Календарь.ВыделенныеДаты.Очистить();
	//Для Каждого знч из ВыделенныеДаты Цикл
	//	Элементы.Календарь.ВыделенныеДаты.Добавить(знч);
	//КонецЦикла;	
КонецПроцедуры


&НаКлиенте
Процедура КалендарьВыбор(Элемент, ВыбраннаяДата)
	найд = ВыделенныеДаты.НайтиПоЗначению(ВыбраннаяДата);
	Если найд = Неопределено Тогда
		ВыделенныеДаты.Добавить(ВыбраннаяДата);
	Иначе 
		//ВыделенныеДаты.Удалить(найд);
	КонецЕсли;
	//Элементы.Календарь.ВыделенныеДаты.Очистить();
	Для Каждого знч из ВыделенныеДаты Цикл
		Элементы.Календарь.ВыделенныеДаты.Добавить(знч);
	КонецЦикла;
	//Элементы.Календарь.Обновить();
КонецПроцедуры

