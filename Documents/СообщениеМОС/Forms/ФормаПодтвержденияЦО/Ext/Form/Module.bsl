&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НастроитьЭлементыФормы();
	Если НЕ Прочитано И ЗначениеЗаполнено(Объект.Прочитал) Тогда
		Прочитано = Истина;
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура НастроитьЭлементыФормы()

	
	Элементы.Переадресовать.Видимость = Ложь;
	
	Если Объект.ТипСообщения = ПредопределенноеЗначение("Перечисление.ТипыСообщенийМОС.Инцидент") Тогда
		Элементы.ТекущийСтатус.Видимость = Истина;
		//Элементы.ИзменениеСтатуса.Видимость = Истина;
		Элементы.ИзменениеСтатусаИнцидента.Видимость = Истина;
		//Элементы.Прочитано.Видимость = Ложь;
		Элементы.СнятьПризнакПрочитанности.Видимость = Ложь;
		Если СтатусИнцидента = 1 Тогда
			ТекущийСтатус = "Направлен";
			//Элементы.ИзменениеСтатуса.Заголовок = "Принят к исполнению";
			Элементы.ИзменениеСтатусаИнцидента.Заголовок = "Принят к исполнению";
			Элементы.ОжидаемаяДатаВыполнения.Видимость = Истина;
			Элементы.Переадресовать.Видимость = Истина;
		ИначеЕсли СтатусИнцидента = 2 Тогда
			ТекущийСтатус = "Принят к исполнению";
			//Элементы.ИзменениеСтатуса.Заголовок = "Выполнен";
			Элементы.ИзменениеСтатусаИнцидента.Заголовок = "Выполнен";
		ИначеЕсли СтатусИнцидента = 3 Тогда
			ТекущийСтатус = "Выполнен";
			//Элементы.ИзменениеСтатуса.Заголовок = "Выполнен";
			//Элементы.ИзменениеСтатуса.ТолькоПросмотр = Истина;
			Элементы.ИзменениеСтатусаИнцидента.Видимость = Ложь;
			//// посмотрим, если роль отправителя содержится в ролях тек. пользователя,
			//// то сделаем флажок "Проверено"
			//Эл1 = Объект.ВсеРолиПользователя.НайтиПоЗначению(Отправитель);
			//Если Эл1 <> Неопределено Тогда
			//	Элементы.ИзменениеСтатуса.Заголовок = "Проверено";
			//	Элементы.ИзменениеСтатуса.ТолькоПросмотр = Ложь;
			//КонецЕсли;
		ИначеЕсли СтатусИнцидента = 4 Тогда
			ТекущийСтатус = "Выполнен и проверен";
			//Элементы.ИзменениеСтатуса.Видимость = Ложь;
			Элементы.ИзменениеСтатусаИнцидента.Видимость = Ложь;
		ИначеЕсли СтатусИнцидента = 5 Тогда
			ТекущийСтатус = "Переадресован";
			//Элементы.ИзменениеСтатуса.Видимость = Ложь;
			Элементы.ИзменениеСтатусаИнцидента.Видимость = Ложь;
		Иначе
			ТекущийСтатус = "*";
			//Элементы.ИзменениеСтатуса.Заголовок = "*";
			//Элементы.ИзменениеСтатуса.ТолькоПросмотр = Истина;
			Элементы.ИзменениеСтатусаИнцидента.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Товар) Тогда
		Элементы.ТоварИПроизводитель.Видимость = Истина;
	КонецЕсли;
	
	Элементы.Картинки.Видимость = Объект.Картинки.Количество() > 0;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДокОбъект = Параметры.ДокСсылка.ПолучитьОбъект();
	
	ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
	
	Если ДокОбъект.ФорматированиеТекста Тогда
		ФД = ДокОбъект.ФД.Получить();
	КонецЕсли;
	
	//КопироватьДанныеФормы(Параметры.ОбъектИзРодФормы, Объект);
	Прочитано = ЗначениеЗаполнено(Объект.Прочитал);
	
	Если Объект.ТипСообщения = Перечисления.ТипыСообщенийМОС.Инцидент Тогда
		//Элементы.Прочитано.Заголовок = ;
		Элементы.ТекстСообщения.Заголовок = "Действие";
	ИначеЕсли Объект.ТипСообщения = Перечисления.ТипыСообщенийМОС.ИнформационноеСообщение Тогда
		Если НЕ Прочитано Тогда
			Объект.Прочитал = ПараметрыСеанса.ТекущийПользователь;
			Объект.ДатаИВремяПрочтения = ТекущаяДатаСеанса();
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.КодНаправления = 0 Тогда
		//Элементы.Прочитано.Видимость = Ложь;
		Элементы.СнятьПризнакПрочитанности.Видимость = Ложь;
	ИначеЕсли Объект.КодНаправления = 1 ИЛИ Объект.КодНаправления = 2 Тогда
		Элементы.Группа1.Видимость = Ложь;
	КонецЕсли;
	СтатусИнцидента = Объект.СтатусИнцидента;
	
	Попытка
		ЗаблокироватьДанныеДляРедактирования(Объект.Ссылка,, ЭтаФорма.УникальныйИдентификатор);
	Исключение
		Сообщить("Не удаётся заблокировать сообщение. Возможно с ним работает другой пользователь. Открытие сообщения возможно только в режиме просмотра");
		ЭтаФорма.ТолькоПросмотр = Истина;
	КонецПопытки;
	
	//+++АК SHEP 20160504
	Элементы.ФормаПерейтиКОбъектуИнициатору.Видимость = (ТипЗнч(Объект.ОбъектИнициатор) = Тип("ДокументСсылка.АК_ОбращениеВТехподдержку"));
	//---АК SHEP 20160504
	
	//Заголовок = Заголовок + МеханизмОбменаСообщениями.ПолучитьДобавкуКЗаголовкуОкна();
	Заголовок = Заголовок + " от " + Строка(Объект.Дата);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереадресоватьИнцидент(Команда)
	
	ПФ1 = Новый Структура("РеквизитОбъект", Объект);
	РазблокироватьДанныеДляРедактированияНаСервере();
	ОткрытьФорму("Документ.СообщениеМОС.Форма.ФормаПереадресации", ПФ1, ЭтаФорма);
	Модифицированность = Ложь;
	Закрыть();

КонецПроцедуры

Процедура РазблокироватьДанныеДляРедактированияНаСервере()

	РазблокироватьДанныеДляРедактирования(Объект.Ссылка, ЭтаФорма.УникальныйИдентификатор);

КонецПроцедуры


&НаКлиенте
Процедура Печать(Команда)
	
	ТабДок1 = ПолучитьПечатнуюФорму();
	Если ТабДок1 <> Неопределено Тогда
		//ТабДок1.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
		ТабДок1.Показать();
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьПечатнуюФорму()

	//ТекДанные = ПолучитьСтрокуСообщения(ИД);
	//Если ТекДанные = Неопределено Тогда
	//	Сообщить("Не найдена строка сообщения");
	//	Возврат Неопределено;
	//КонецЕсли;
	//
	////СтрокаРез = "Дата и время создания сообщения: " + Строка(ТекДанные.ДатаИВремяСоздания)
	////		+ ". Автор: " + ТекДанные.Автор + Символы.ПС + "Тема: " + ТекДанные.Тема;
	////		
	////СтрокаРез = СтрокаРез + Символы.ПС + Символы.ПС + "Текст сообщения: " + Символы.ПС + ТекДанные.ТекстСообщения;
	////
	////ТекДок1 = Новый ТекстовыйДокумент;
	////ТекДок1.ДобавитьСтроку(СтрокаРез);
	////Возврат ТекДок1;
	//
	//Макет1 = Обработки.СообщенияМОС.ПолучитьМакет("ПечатнаяФорма1");
	//Обл1 = Макет1.ПолучитьОбласть("Область1");
	//Обл1.Параметры.Заполнить(ТекДанные);
	ТабДок = Новый ТабличныйДокумент();
	//ТабДок.Вывести(Обл1);
	Возврат ТабДок;
		
КонецФункции // ()

&НаКлиенте
Процедура СнятьПризнакПрочитанности(Команда)
	
	Объект.Прочитал = Неопределено;
	Объект.ДатаИВремяПрочтения = Неопределено;
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеСтатусаИнцидента(Команда)
	
	НовыйСтатус = 0;
	Если СтатусИнцидента = 1 Тогда
		// проверим на заполненность дату и выведе
		Если НЕ ЗначениеЗаполнено(Объект.ДатаИВремяВыполненияПлан) Тогда
			Если НЕ ВвестиДату(Объект.ДатаИВремяВыполненияПлан, "Введите ожидаемую дату выполнения", ЧастиДаты.Дата) Тогда
				ИзменениеСтатуса = Ложь;
				Возврат;
			КонецЕсли;
		КонецЕсли;
		НовыйСтатус = 2;
	ИначеЕсли СтатусИнцидента = 2 Тогда
		НовыйСтатус = 3;
	ИначеЕсли СтатусИнцидента = 3 Тогда
		НовыйСтатус = 4;
	КонецЕсли; 
		
	Если ЗначениеЗаполнено(НовыйСтатус) Тогда
		// запишем новый статус
		Объект.СтатусИнцидента = НовыйСтатус;
		ЭтаФорма.Модифицированность = Истина;
		//СП1 = Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение);
		//ЭтаФорма.Записать(СП1);
		//Закрыть();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	//Если ИмяСобытия = "ЗакрытиеФормыПодтвержденияЦО" Тогда
	//	Если Модифицированность Тогда
	//		Записать();
	//	КонецЕсли;
	//	Закрыть();
	//КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Попытка
			Записать();
		Исключение
			Предупреждение("Не удалось записать изменения в сообщение. Возможно оно было изменено другим пользователем. Повторите попытку позднее.");
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Документы.СообщениеМОС.ФДЗаполнен(ФД) Тогда
		ТекущийОбъект.ФД = Новый ХранилищеЗначения(ФД);
		ТекущийОбъект.ФорматированиеТекста = Истина;
	Иначе
		ТекущийОбъект.ФД = Новый ХранилищеЗначения("");
		ТекущийОбъект.ФорматированиеТекста = Ложь;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура Картинки1ПриАктивизацииСтроки(Элемент)
	
	Картинка = Новый Картинка;
	ТекСтрока = Элементы.Картинки1.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		//Если ТекСтрока.ВнесеныИзменения Тогда
		//	УстановитьКартинкуИзСтроки(ТекСтрока.КлючСтроки);
		//Иначе
			//УстановитьКартинкуИзФайла(Новый Структура("КлючСтроки, Расширение", ТекСтрока.КлючСтроки, ТекСтрока.Расширение), Объект.Ссылка);
			УстановитьКартинкуИзФайла(ТекСтрока.ОтносительноеИмяФайла);
		//КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

Функция УстановитьКартинкуИзФайла(ОтносительноеИмяФайла)
	
	КаталогКЗаписи = Константы.КаталогХраненияФайловКартинок.Получить();
	Если Прав(КаталогКЗаписи, 1) <> "\" Тогда
		КаталогКЗаписи = КаталогКЗаписи + "\";
	КонецЕсли;	
	//ИмяФайла = КаталогКЗаписи + Строка(Ссылка.УникальныйИдентификатор()) + "_" + Строка(ТекСтрока.КлючСтроки) + ?(Лев(ТекСтрока.Расширение, 1) = ".", "", ".") + ТекСтрока.Расширение;
	ИмяФайла = КаталогКЗаписи + ОтносительноеИмяФайла;
	
	ПолеКартинкиТекСтроки = ПоместитьВоВременноеХранилище(Новый Картинка(ИмяФайла));
	
КонецФункции

//+++АК SHEP 20160504
&НаКлиенте
Процедура ПерейтиКОбъектуИнициатору(Команда)
	ОткрытьЗначение(Объект.ОбъектИнициатор);
КонецПроцедуры
//---АК SHEP 20160504

//&НаСервере
//Функция УстановитьКартинкуИзСтроки(КлючСтроки)
//	
//	СтрокиСФайлом = ТаблицаИзмененныхКартинок.НайтиСтроки(Новый Структура("КлючСтроки", КлючСтроки));
//	
//	Если СтрокиСФайлом.Количество() > 0 Тогда                                                            
//		ПолеКартинкиТекСтроки = ПоместитьВоВременноеХранилище(СтрокиСФайлом[0].Картинка);
//	Иначе	
//		ПолеКартинкиТекСтроки = "";
//	КонецЕсли;	
//	
//КонецФункции
