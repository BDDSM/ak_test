
&НаКлиенте
Процедура ОтправитьСообщение(Команда)
	
	Отказ = Ложь;
	ЗаполнитьТекстСообщения(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		ОтправитьСообщениеНаСервере();
		ЗакрытиеПослеОтправки = Истина;
		ОповеститьОЗаписиНового(Неопределено);
		Закрыть();
	Исключение
		Предупреждение("Не удалось переадресовать инцидент. Возможно с сообщением работает другой пользователь");
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗаполнитьТекстСообщения(Отказ)

	ТекДата = МеханизмОбменаСообщениями.ПолучитьРабочуюДатуМОС();
	НовыйТекстСообщения = ПолучитьМодифицированныйТекстСообщения(ТекДата);
	Объект.ТекстСообщения = НовыйТекстСообщения;

КонецПроцедуры


&НаСервере
Процедура ОтправитьСообщениеНаСервере()
	
	// создадим новое сообщение на основании текущего
	СП1 = Новый Структура;
	СП1.Вставить("Дата", ТекущаяДатаСеанса());
	СП1.Вставить("ТипСообщения", Перечисления.ТипыСообщенийМОС.Инцидент);
	СП1.Вставить("Тема", Объект.Тема);
	СП1.Вставить("РольПолучателя", РольПолучателя);
	СП1.Вставить("Отправитель", Объект.Отправитель);
	СП1.Вставить("ТекстСообщения", НовыйТекстСообщения);
	СП1.Вставить("Автор", Объект.Автор);
	Если ЗначениеЗаполнено(Объект.Товар) Тогда
		СП1.Вставить("Товар", Объект.Товар);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Основание) Тогда
		СП1.Вставить("Основание", Объект.Основание);
	Иначе
		СП1.Вставить("Автор", Объект.Ссылка);
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.ШаблонСообщений) Тогда
		СП1.Вставить("ШаблонСообщений", Объект.ШаблонСообщений);
	КонецЕсли;
	СП1.Вставить("ТипИнцидента", Объект.ТипИнцидента);
	СП1.Вставить("СтатусИнцидента", 1);
	
	ТЗСЕ = Новый ТаблицаЗначений;
	ТЗСЕ.Колонки.Добавить("СтруктурнаяЕдиница");
	ТЗСЕ.Колонки.Добавить("СтаршийСмены");
	Для каждого СтрокаТЧ1 Из Объект.СтруктурныеЕдиницы Цикл
		СтрокаТЗСЕ = ТЗСЕ.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЗСЕ, СтрокаТЧ1);
	КонецЦикла;
	
	СП1.Вставить("СтруктурныеЕдиницы", ТЗСЕ);
	
	
	
	НачатьТранзакцию();
	СообщениеОбОшибке = МеханизмОбменаСообщениями.СоздатьИОтправитьСообщение(СП1);
	
	Если ЗначениеЗаполнено(СообщениеОбОшибке) Тогда
		Сообщить("Не удалось выполнить переадресацию");
		Сообщить(СообщениеОбОшибке);
		ОтменитьТранзакцию();
	Иначе
		// запишем статус 5 в тек. документ
		Объект.СтатусИнцидента = 5;
		СП1 = Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Запись);
		Если ЭтаФорма.Записать(СП1) Тогда
			ЗафиксироватьТранзакцию();
		Иначе
			ОтменитьТранзакцию();
			Сообщить("Не удалось выполнить переадресацию (2)");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КопироватьДанныеФормы(Параметры.РеквизитОбъект, Объект);
	СрокАктуальности = МеханизмОбменаСообщениями.ПолучитьЗначениеTTL();
	Попытка
		ЗаблокироватьДанныеДляРедактирования(Объект.Ссылка,, ЭтаФорма.УникальныйИдентификатор);
	Исключение
		Сообщить("Не удаётся заблокировать сообщение. Возможно с ним работает другой пользователь. Повторите попытку позднее.");
		ЭтаФорма.ТолькоПросмотр = Истина;
	КонецПопытки;
	
	Заголовок = Заголовок + Обработки.СообщенияМОС.ПолучитьДобавкуКЗаголовкуОкна();
		
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗакрытиеПослеОтправки Тогда
		Ответ1 = Вопрос("При закрытии введённые данные будут утеряны! Вы действительно хотите закрыть данное окно?", РежимДиалогаВопрос.ДаНет);
		Если Ответ1 = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


Функция ПолучитьМодифицированныйТекстСообщения(Дата1)
	
	НовыйТекст = "Переадресация: " + Строка(Дата1) + ", от " + Строка(Объект.РольПолучателя) + " ("
			+ Строка(ПараметрыСеанса.ТекущийПользователь) + ") к " + Строка(РольПолучателя) + ".";
	Если ЗначениеЗаполнено(Комментарий) Тогда
		НовыйТекст = НовыйТекст + Символы.ПС + "Комментарий: " + СокрЛП(Комментарий);
	КонецЕсли;
	НовыйТекст = НовыйТекст + Символы.ПС + СокрЛП(Объект.ТекстСообщения);
	Возврат НовыйТекст;

КонецФункции // ()


&НаКлиенте
Процедура ПриЗакрытии()
	
	//ЭтаФорма.ВладелецФормы.Закрыть();
	
КонецПроцедуры

