&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НастроитьЭлементыФормы();
	Если Объект.ТипСообщения = ПредопределенноеЗначение("Перечисление.ТипыСообщенийМОС.ИнформационноеСообщение") И НЕ Прочитано Тогда
		Прочитано = Истина;
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;
	
	Если Объект.СтатусИнцидентаИзменен Тогда
		Объект.СтатусИнцидентаИзменен = Ложь;
		ЭтаФорма.Модифицированность = Истина;
	КонецЕсли;
	
	//+++АК SHEP 20160421
	Если ОтображатьХТМЛ Тогда
		
		Картинки = Новый Структура;
		ФД.ПолучитьHTML(ХТМЛ, Картинки);
		Если Объект.ФлХТМЛ Тогда
			ХТМЛ=Объект.ХТМЛТекст;
		КонецЕсли; 
		//+++АК Pans 20160507
		Если ЗначениеЗаполнено(Объект.ТекстHTML) Тогда
			ХТМЛ = "<html>" + Символы.ПС + Объект.ТекстHTML + "</html>";
		КонецЕсли;
		//---АК Pans 20160507
		
		Если Картинки.Количество() > 0 Тогда
			Для Каждого Картинка Из Картинки Цикл
				ИмяВремФайла = ПолучитьИмяВременногоФайла("");
				Картинка.Значение.Записать(ИмяВремФайла);
				ХТМЛ = СтрЗаменить(ХТМЛ, "<img src='" + Картинка.Ключ + "'", "<img src=""" + ИмяВремФайла + """");
			КонецЦикла;
		КонецЕсли;
		
		//+++АК SHEP 20160425
		// убираем лишний "мусор", в т.ч. чтобы картинки при печати были на след. странице, а не обрезались
		ПозТела = Найти(ХТМЛ, "<body>");
		Если ПозТела <> 0 Тогда
			ХТМЛ = "<html>" + Символы.ПС + Сред(ХТМЛ, ПозТела);
		КонецЕсли;
		//---АК SHEP 20160425
	КонецЕсли;
	//---АК SHEP
	
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс);
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыФормы()

	
	Если Объект.ТипСообщения = Перечисления.ТипыСообщенийМОС.Задача Тогда
		Элементы.УстановитьПризнакВыполненностиЗадачи.Видимость = Истина;
		Элементы.СнятьПризнакПрочитанности.Видимость = Ложь;
	ИначеЕсли Объект.ТипСообщения = Перечисления.ТипыСообщенийМОС.Инцидент Тогда
		Элементы.УстановитьПризнакВыполненностиЗадачи.Видимость = Ложь;
		Элементы.СнятьПризнакПрочитанности.Видимость = Ложь;
		
		Элементы.ТекСтатусИнцидента.Видимость = Истина;
		Если Объект.СтатусИнцидента = 1 Тогда
			ТекСтатусИнцидента = "Направлен";
		ИначеЕсли Объект.СтатусИнцидента = 2 Тогда
			ТекСтатусИнцидента = "Принят к исполнению";
			Элементы.ДатаИВремяВыполненияПлан.Видимость = Истина;
		ИначеЕсли Объект.СтатусИнцидента = 3 Тогда
			ТекСтатусИнцидента = "Выполнен";
			Элементы.КнопкаПодтвердитьВыполнение.Видимость = Истина;
		ИначеЕсли Объект.СтатусИнцидента = 4 Тогда
			ТекСтатусИнцидента = "Выполнен и проверен";
		ИначеЕсли Объект.СтатусИнцидента = 5 Тогда
			ТекСтатусИнцидента = "Переадресован";
		Иначе
			ТекСтатусИнцидента = "???-???";
		КонецЕсли;
	ИначеЕсли Объект.ТипСообщения = Перечисления.ТипыСообщенийМОС.ИнформационноеСообщение Тогда
		Элементы.УстановитьПризнакВыполненностиЗадачи.Видимость = Ложь;
		Элементы.СнятьПризнакПрочитанности.Видимость = Истина;
	КонецЕсли;
	
	Если Объект.КодНаправления <> 0 Тогда
		//Элементы.ТекстОтвета.Видимость = Ложь;
		//Элементы.ВложенияКОтвету.Видимость = Ложь;
		Элементы.Группа4.Видимость = Ложь;
		Элементы.ОтправитьОтвет.Видимость = Ложь;
		Элементы.УстановитьПризнакВыполненностиЗадачи.Видимость = Ложь;
		Элементы.СнятьПризнакПрочитанности.Видимость = Ложь;
	Иначе
		Если ЕстьОтвет ИЛИ НЕ ЗначениеЗаполнено(Объект.Отправитель) Тогда
			//Элементы.ТекстОтвета.ТолькоПросмотр = Истина;
			//Элементы.ВложенияКОтвету.ТолькоПросмотр = Истина;
			Элементы.Группа4.Доступность = Ложь;
			//Элементы.ТекстОтветаДобавитьКОтветуПрямыхПолучателей.Доступность = Ложь;
			Элементы.ОтправитьОтвет.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Заголовок = СокрЛП(Объект.Тема);

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиСерверВызовСервера.ПолучитьОперацию("Открытие формы подтверждения сообщения в магазине");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	
	Параметры.Свойство("ТорговаяТочка", ТорговаяТочка);
	Параметры.Свойство("СтаршийСмены", СтаршийСмены);
	
	Если НЕ ЗначениеЗаполнено(ТорговаяТочка) Тогда
		Сообщить("Не заполнен реквизит формы ""Торговая точка""");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	//Если Лев(ТорговаяТочка.Наименование, 4) = "1159" Тогда
		//ЗаписьЖурналаРегистрации("Сообщения МОС. Контрольная точка 01", УровеньЖурналаРегистрации.Предупреждение)
	//КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтаршийСмены) Тогда
		Сообщить("Не заполнен ""Старший смены""");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
		
	Если Параметры.Свойство("Объект") Тогда
		ДокОбъект = Параметры.Объект.ПолучитьОбъект();
		ЗначениеВРеквизитФормы(ДокОбъект, "Объект");
		Если ДокОбъект.ФорматированиеТекста Тогда
			ФД = ДокОбъект.ФД.Получить();
		КонецЕсли;
	КонецЕсли;
	
	//Если Лев(ТорговаяТочка.Наименование, 4) = "1159" Тогда
		//ЗаписьЖурналаРегистрации("Сообщения МОС. Контрольная точка 02", УровеньЖурналаРегистрации.Предупреждение)
	//КонецЕсли;
	
	ПроверитьОтвет();
	
	//Если Лев(ТорговаяТочка.Наименование, 4) = "1159" Тогда
		//ЗаписьЖурналаРегистрации("Сообщения МОС. Контрольная точка 03", УровеньЖурналаРегистрации.Предупреждение)
	//КонецЕсли;
	
	СО1 = Новый Структура("СтаршийСмены,СтруктурнаяЕдиница", СтаршийСмены, ТорговаяТочка);
	МСС1 = Объект.СтруктурныеЕдиницы.НайтиСтроки(СО1);
	Если МСС1.Количество() = 0 Тогда
		Сообщить("В ТЧ ""Структурные единицы"" не ныйдена строка в указанными магазином (" + Строка(ТорговаяТочка) + ") и старшим смены (" + Строка(СтаршийСмены) + ")");
		Отказ = Истина;
		Возврат;
	ИначеЕсли МСС1.Количество() > 0 Тогда
		СтрокаТЧ1 = МСС1[0];
		Если ЗначениеЗаполнено(СтрокаТЧ1.Прочитал) Тогда
			Прочитано = Истина;
		КонецЕсли;  
	КонецЕсли;
	//Если Лев(ТорговаяТочка.Наименование, 4) = "1159" Тогда
		//ЗаписьЖурналаРегистрации("Сообщения МОС. Контрольная точка 04", УровеньЖурналаРегистрации.Предупреждение)
	//КонецЕсли;
	Если Объект.ТипСообщения = Перечисления.ТипыСообщенийМОС.Инцидент Тогда
		Элементы.ТекстСообщения.Заголовок = "Действие";
	//ИначеЕсли Объект.ТипСообщения = Перечисления.ТипыСообщенийМОС.ИнформационноеСообщение Тогда
	//	Если НЕ Прочитано Тогда
	//		СтрокаТЧ1.Прочитал = ПараметрыСеанса.ТекущийПользователь;
	//		СтрокаТЧ1.ДатаИВремяПрочтения = ТекущаяДатаСеанса();
	//	КонецЕсли;
	КонецЕсли;
	
	Если НЕ Объект.Ссылка.Пустая() Тогда
		Попытка
			ЗаблокироватьДанныеДляРедактирования(Объект.Ссылка,, ЭтаФорма.УникальныйИдентификатор);
		Исключение
			Сообщить("Не удаётся заблокировать сообщение. Возможно с ним работает другой пользователь. Открытие сообщения возможно только в режиме просмотра");
			ЭтаФорма.ТолькоПросмотр = Истина;
		КонецПопытки;
	КонецЕсли;
	
	//Если Лев(ТорговаяТочка.Наименование, 4) = "1159" Тогда
		//ЗаписьЖурналаРегистрации("Сообщения МОС. Контрольная точка 05", УровеньЖурналаРегистрации.Предупреждение)
	//КонецЕсли;
	
	//Заголовок = Заголовок + Обработки.СообщенияМОС.ПолучитьДобавкуКЗаголовкуОкна();
	Заголовок = Заголовок + " от " + Строка(Объект.Дата);
	
	Отправитель = Строка(Объект.Автор);
	Если НЕ ЗначениеЗаполнено(Отправитель) Тогда
		Отправитель = Объект.АдресЭПОтправителя;
	КонецЕсли;
	
	СЗПолучатели = Новый СписокЗначений;
	Если Объект.ВидПолучателей = Перечисления.ВидыПолучателейМОС.ВсеМагазины Тогда
		СЗПолучатели.Добавить("Все магазины");
	ИначеЕсли Объект.ВидПолучателей = Перечисления.ВидыПолучателейМОС.СписокМагазинов Тогда
		Для каждого СтрокаТЧ1 Из Объект.СтруктурныеЕдиницы Цикл
			Эл1 = СЗПолучатели.НайтиПоЗначению(СтрокаТЧ1.СтруктурнаяЕдиница);
			Если Эл1 = Неопределено Тогда
				СЗПолучатели.Добавить(СтрокаТЧ1.СтруктурнаяЕдиница);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли Объект.ВидПолучателей = Перечисления.ВидыПолучателейМОС.УказаннаяРоль Тогда
		Если ЗначениеЗаполнено(Объект.РольПолучателя) Тогда
			СЗПолучатели.Добавить(Строка(Объект.РольПолучателя));
		КонецЕсли;
		
		Для каждого СтрокаТЧ1 Из Объект.РолиПолучателей Цикл
			Эл1 = СЗПолучатели.НайтиПоЗначению(СтрокаТЧ1.Роль);
			Если Эл1 = Неопределено Тогда
				СЗПолучатели.Добавить(СтрокаТЧ1.Роль);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	//Если Лев(ТорговаяТочка.Наименование, 4) = "1159" Тогда
	//	ЗаписьЖурналаРегистрации("Сообщения МОС. Контрольная точка 06", УровеньЖурналаРегистрации.Предупреждение)
	//КонецЕсли;
	
	Для каждого СтрокаТЧ2 Из Объект.ПрямыеПолучатели Цикл
		СЗПолучатели.Добавить(СтрокаТЧ2.АдресЭП);
	КонецЦикла;
	
	Получатели = Строка(СЗПолучатели);
	
	//+++АК SHEP 20160421
	// На тонком клиенте при запуске под веб-сервером картинки не отображались, добавил поле HTML документа
	
	//Если Лев(ТорговаяТочка.Наименование, 4) = "1159" Тогда
	//	ЗаписьЖурналаРегистрации("Сообщения МОС. Контрольная точка 07", УровеньЖурналаРегистрации.Предупреждение)
	//КонецЕсли;
	ОтображатьХТМЛ = ((Лев(ПолучитьНавигационнуюСсылкуИнформационнойБазы(), 4) = "http") И Объект.ФорматированиеТекста ИЛИ ЗначениеЗаполнено(Объект.ТекстHTML)) ИЛИ Объект.ФлХТМЛ;
	Элементы.ХТМЛ.Видимость = ОтображатьХТМЛ;
	
	Путь1 = СокрЛП(Константы.КаталогХраненияФайлов.Получить()) + "\MessAtt\" + СокрЛП(Объект.Номер);
	Маска1 =  "*.*";
	МСВложений = НайтиФайлы(Путь1, Маска1, Истина);
	//Если Лев(ТорговаяТочка.Наименование, 4) = "1159" Тогда
	//	ЗаписьЖурналаРегистрации("Сообщения МОС. Контрольная точка 08", УровеньЖурналаРегистрации.Предупреждение)
	//КонецЕсли;
	Элементы.ВложенияПисьма.Видимость = ЗначениеЗаполнено(Объект.АдресИ_ИД_ПочтовогоСообщения) ИЛИ МСВложений.Количество() > 0;
	Если Элементы.ВложенияПисьма.Видимость Тогда
		ЗаполнитьТЗВложений();
	КонецЕсли;
	
	//Если Лев(ТорговаяТочка.Наименование, 4) = "1159" Тогда
	//	ЗаписьЖурналаРегистрации("Сообщения МОС. Контрольная точка 09", УровеньЖурналаРегистрации.Предупреждение)
	//КонецЕсли;
	
	Элементы.ФормаПечатьХТМЛ.Видимость = ОтображатьХТМЛ;
	Элементы.ФормаПечатьСразуХТМЛ.Видимость = ОтображатьХТМЛ И ЗначениеЗаполнено(Справочники.АК_ГруппыРассылки.НайтиПоНаименованию("ПечатьСразуХТМЛ"));
	Элементы.ФормаПредпросмотрХТМЛ.Видимость = ОтображатьХТМЛ;
	Элементы.Печать.Видимость = НЕ ОтображатьХТМЛ;
	Элементы.ТекстСообщения.Видимость = НЕ ОтображатьХТМЛ;
	Если ОтображатьХТМЛ И Объект.ТипСообщения = Перечисления.ТипыСообщенийМОС.Инцидент Тогда
		Элементы.ХТМЛ.Заголовок = "Действие";
	КонецЕсли;
	//---АК SHEP 
	
	//Если Лев(ТорговаяТочка.Наименование, 4) = "1159" Тогда
	//	ЗаписьЖурналаРегистрации("Сообщения МОС. Контрольная точка 10", УровеньЖурналаРегистрации.Предупреждение)
	//КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьОтвет()

	Запрос1 = Новый Запрос;
	Запрос1.Текст = 
	"ВЫБРАТЬ
	|	СообщениеМОС.Ссылка,
	|	СообщениеМОС.ТекстСообщения КАК ТекстОтвета,
	|	СообщениеМОС.Номер
	|ИЗ
	|	Документ.СообщениеМОС КАК СообщениеМОС
	|ГДЕ
	|	СообщениеМОС.Проведен = ИСТИНА
	|	И СообщениеМОС.Основание = &Основание
	|
	|УПОРЯДОЧИТЬ ПО
	|	СообщениеМОС.Дата";
	
	Запрос1.УстановитьПараметр("Основание", Объект.Ссылка);
	
	Рез1 = Запрос1.Выполнить();
	Если НЕ Рез1.Пустой() Тогда
		Выб1 = Рез1.Выбрать();
		Выб1.Следующий();
		ТекстОтвета = Выб1.ТекстОтвета;
		Если Выб1.Ссылка.ФорматированиеТекста Тогда
			ФДОтвета = Выб1.Ссылка.ФД.Получить();
		Иначе
			ФДОтвета.Добавить(ТекстОтвета);
		КонецЕсли;
		ЕстьОтвет = Истина;
	КонецЕсли;
	
	// заполним таблицу вложений
	НомерСообщения = Объект.Ссылка.Номер;
	ПолныйКаталог2 =  СокрЛП(Константы.КаталогХраненияФайлов.Получить()) + "MessAnswerAtt\" + НомерСообщения;
	МСРез2 = НайтиФайлы(ПолныйКаталог2, "*.*");
	Для каждого Файл1 Из МСРез2 Цикл
		СтрокаТЗВО = ВложенияКОтвету.Добавить();
		СтрокаТЗВО.ИмяФайла = Файл1.Имя;
		СтрокаТЗВО.ПолноеИмяФайла = Файл1.ПолноеИмя;
		СтрокаТЗВО.Каталог = Файл1.Путь;	
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	ТабДок1 = ПолучитьПечатнуюФорму();
	Если ТабДок1 <> Неопределено Тогда
		ТабДок1.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
		//ТабДок1.Показать();
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьПечатнуюФорму()
	
	Макет1 = Документы.СообщениеМОС.ПолучитьМакет("ПечатнаяФормаМагазин");
	Обл1 = Макет1.ПолучитьОбласть("Область1");
	Обл1.Параметры.Заполнить(Объект);
	
	ТабДок = Новый ТабличныйДокумент();
	ТабДок.Вывести(Обл1);
	Возврат ТабДок;
		
КонецФункции // ()

&НаКлиенте
Процедура ОтправитьОтвет(Команда)
	
	
	Отказ = Ложь;
	ОтправитьОтветНаСервере(Отказ);
	
	Если НЕ Отказ Тогда 
		ЕстьОтвет = Истина;
		НастроитьЭлементыФормы();
	КонецЕсли;
	//ЭтаФорма.Записать();
	
КонецПроцедуры

Процедура ОтправитьОтветНаСервере(Отказ)
	
	Если НЕ Документы.СообщениеМОС.ФДЗаполнен(ФДОтвета) Тогда
		Сообщить("Не заполнен текст ответа!");
		Отказ = Истина;
		Возврат;
	Иначе
		ТекстОтвета = ФДОтвета.ПолучитьТекст();
		Если НЕ ЗначениеЗаполнено(ТекстОтвета) Тогда // например отправка только картинки
			ТекстОтвета = "<без текста>";
		КонецЕсли;
	КонецЕсли;
	
	ДанныеДляСообщения = Новый Структура;
	
	ДанныеДляСообщения.Вставить("Дата", ТекущаяДатаСеанса());
	ДанныеДляСообщения.Вставить("Тема", "Ответ на " + Объект.Тема);
		
	Если НЕ ЗначениеЗаполнено(Объект.Отправитель) Тогда // сообщение от системы
		//ДанныеДляСообщения.Вставить("РольПолучателя", Справочники.РолиПользователей.Администратор);
		//ДанныеДляСообщения.Вставить("ТекстСообщения", "В документе №" + Объект.Номер + " от " + Строка(Объект.Дата) + " не указана роль-отправитель!");
		Сообщить("На данное сообщение ответ не предусмотрен, т.к. оно отправлено системой");
		Отказ = Истина;
		Возврат;
	Иначе	
		ДанныеДляСообщения.Вставить("РольПолучателя", Объект.Отправитель);
		ДанныеДляСообщения.Вставить("ТекстСообщения", СокрЛП(ТекстОтвета));
	КонецЕсли;
	
	ДанныеДляСообщения.Вставить("Автор", ПараметрыСеанса.ТекущийПользователь);
	ДанныеДляСообщения.Вставить("Основание", Объект.Ссылка);
	ДанныеДляСообщения.Вставить("Отправитель", ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	ТЗСЕ = Объект.СтруктурныеЕдиницы.Выгрузить();
	ТЗСЕ.Очистить();
	СтрокаТЗСЕ = ТЗСЕ.Добавить();
	СтрокаТЗСЕ.СтруктурнаяЕдиница = ПараметрыСеанса.ТорговаяТочкаПоАйпи;
	СтрокаТЗСЕ.СтаршийСмены = МеханизмОбменаСообщениями.ПолучитьСтаршегоТекущейСмены(СтрокаТЗСЕ.СтруктурнаяЕдиница);
	ДанныеДляСообщения.Вставить("СтруктурныеЕдиницы", ТЗСЕ);
	ДанныеДляСообщения.Вставить("ВложенияКПисьму", ВложенияКОтвету.Выгрузить());
	ДанныеДляСообщения.Вставить("ФД", Новый ХранилищеЗначения(ФДОтвета));
	ДанныеДляСообщения.Вставить("ФорматированиеТекста", Истина);
	ДанныеДляСообщения.Вставить("ПрямыеПолучатели", ПрямыеПолучателиКОтвету.Выгрузить());
	
	НовыйДокСсылка = МеханизмОбменаСообщениями.СоздатьИОтправитьСообщение(ДанныеДляСообщения, Истина);
	//Если ЗначениеЗаполнено(НовыйДокСсылка) Тогда
	//	Если ВложенияКОтвету.Количество() > 0 Тогда
	//		НомерСообщения = СокрЛП(НовыйДокСсылка.Номер);
	//		ПолныйКаталог2 = СокрЛП(Константы.КаталогХраненияФайлов.Получить()) + "MessAtt\"  + НомерСообщения;
	//		МСРез2 = НайтиФайлы(ПолныйКаталог2);
	//		Если МСРез2.Количество() = 0 Тогда
	//			СоздатьКаталог(ПолныйКаталог2);
	//		КонецЕсли;
	//		Для каждого СтрокаТЗВО Из ВложенияКОтвету Цикл
	//			ПолноеИмяФайла2 = ПолныйКаталог2 + "\" + СтрокаТЗВО.ИмяФайла;
	//			КопироватьФайл(СтрокаТЗВО.ПолноеИмяФайла, ПолноеИмяФайла2);
	//		КонецЦикла;
	//	КонецЕсли;
	//КонецЕсли;

КонецПроцедуры


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	СО1 = Новый Структура("СтаршийСмены,СтруктурнаяЕдиница", СтаршийСмены, ТорговаяТочка);
	МСС1 = ТекущийОбъект.СтруктурныеЕдиницы.НайтиСтроки(СО1);
	Если МСС1.Количество() > 0 Тогда
		СтрокаТЧ1 = МСС1[0];
		Если Прочитано Тогда
			Если НЕ ЗначениеЗаполнено(СтрокаТЧ1.Прочитал) Тогда
				СтрокаТЧ1.Прочитал = ПараметрыСеанса.ТекущийПользователь;
				СтрокаТЧ1.ДатаИВремяПрочтения = ТекущаяДатаСеанса();
			КонецЕсли;  
		Иначе
			СтрокаТЧ1.Прочитал = Неопределено;
			СтрокаТЧ1.ДатаИВремяПрочтения = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Если Документы.СообщениеМОС.ФДЗаполнен(ФД) Тогда
		ТекущийОбъект.ФД = Новый ХранилищеЗначения(ФД);
		ТекущийОбъект.ФорматированиеТекста = Истина;
	Иначе
		ТекущийОбъект.ФД = Новый ХранилищеЗначения("");
		ТекущийОбъект.ФорматированиеТекста = Ложь;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПодтвердитьВыполнение(Команда)
	
	Объект.СтатусИнцидента = 4;
	ЭтаФорма.Модифицированность = Истина;
			
КонецПроцедуры


&НаКлиенте
Процедура СнятьПризнакПрочитанности(Команда)
	
	Прочитано = Ложь;
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьПризнакВыполненностиЗадачи(Команда)
	
	//Ответ1 = Вопрос("Вы действительно хотите установить признак ""Выполнено""?", РежимДиалогаВопрос.ДаНет);
	//Если Ответ1 = КодВозвратаДиалога.Да Тогда
		Прочитано = Истина;
	//КонецЕсли;
	
	НастроитьЭлементыФормы();
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Попытка
			Записать();
		Исключение
			Предупреждение("Не удалось записать изменения в сообщение. Возможно оно было изменено другим пользователем. Повторите попытку позднее.");
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриЗакрытии()
	Оповестить("ИзменениеСообщенияМОС");
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	//Если ТекущийОбъект.ФорматированиеТекста Тогда
	//	ФД = ТекущийОбъект.ФД.Получить();
	//КонецЕсли;
		
КонецПроцедуры

//+++АК SHEP 20160425: команды для просмотра и печати ХТМЛ
&НаКлиенте
Процедура ПредпросмотрХТМЛ(Команда)
Перем Документ;

	Документ = Элементы.ХТМЛ.Документ;
	sExpression = "
	|printPreview();
	|
	|function printPreview() {
	|	var yourDOCTYPE = ""<!DOCTYPE html>""; // your doctype declaration
	|	var printPreview = window.open('about:blank', 'print_preview', ""resizable=yes,scrollbars=yes,status=yes"");
	|	var printDocument = printPreview.document;
	|	printDocument.open();
	|	printDocument.write(yourDOCTYPE+
	|			   ""<html>""+
	|				   document.documentElement.innerHTML+
	|			   ""</html>"");
	|	printDocument.close();
	|}";
	Документ.parentWindow.execScript(sExpression);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьХТМЛ(Команда)
Перем Документ;
	
	Документ = Элементы.ХТМЛ.Документ;
	sExpression = "
	|CallPrint();
	|
	|function CallPrint() {
	|	var yourDOCTYPE = ""<!DOCTYPE html>""; // your doctype declaration
	|	var printDocument = window.open('', '', 'width=200,height=100');
	|	var printPreview = printDocument.document;
	|	printPreview.write(yourDOCTYPE+
	|			   ""<html>""+
	|				   document.documentElement.innerHTML+
	|			   ""</html>"");
	|	printPreview.close();
	|	printDocument.focus();
	|	printDocument.print();
	|	printDocument.close();
	|}";
	Документ.parentWindow.execScript(sExpression);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьСразуХТМЛ(Команда)
	Документ = Элементы.ХТМЛ.Документ;
	Если Документ.queryCommandSupported("Print") Тогда
		Документ.execCommand("Print", Ложь);
		//ЭтаФорма.Элементы.ХТМЛ.Документ.execCommand(Команда, Ложь);
	КонецЕсли;	
КонецПроцедуры
//---АК SHEP 20160425

Процедура ЗаполнитьТЗВложений()

	ВложенияПисьма.Очистить();
	АдресИ_ИДПС = СокрЛП(Объект.АдресИ_ИД_ПочтовогоСообщения) + "   ";
	Поз1 = Найти(АдресИ_ИДПС, "_-_");
	Если Поз1 > 5 Тогда
		АдресЯщика = СокрЛП(Сред(АдресИ_ИДПС, 1, Поз1 - 1));
		ИДПС = СокрЛП(Сред(АдресИ_ИДПС, Поз1 + 3));
		Путь1 = СокрЛП(Константы.КаталогХраненияФайлов.Получить()) + "\MailCollectorAtt\" + АдресЯщика;
		Маска1 =  "*" + ИДПС + "*";
		МС1 = НайтиФайлы(Путь1, Маска1, Истина);
		Если МС1.Количество() > 0 Тогда
			Для каждого Файл1 Из МС1 Цикл
				СтрокаТЗ1 = ВложенияПисьма.Добавить();
				СтрокаТЗ1.ИмяФайла = СтрЗаменить(Файл1.Имя, ИДПС + "_", "");
				СтрокаТЗ1.ПолноеИмяФайла = Файл1.ПолноеИмя;
				СтрокаТЗ1.Каталог = Файл1.Путь;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	// также вложения могут быть и не из почты (а например из ответного сообщения)
	Путь1 = СокрЛП(Константы.КаталогХраненияФайлов.Получить()) + "\MessAtt\" + СокрЛП(Объект.Номер);
	Маска1 =  "*.*";
	МС1 = НайтиФайлы(Путь1, Маска1, Истина);
	Для каждого Файл1 Из МС1 Цикл
		СтрокаТЗ1 = ВложенияПисьма.Добавить();
		СтрокаТЗ1.ИмяФайла = Файл1.Имя;
		СтрокаТЗ1.ПолноеИмяФайла = Файл1.ПолноеИмя;
		СтрокаТЗ1.Каталог = Файл1.Путь;
	КонецЦикла;
		

КонецПроцедуры

&НаКлиенте
Процедура ВложенияПисьмаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТД1 = Элементы.ВложенияПисьма.ТекущиеДанные;
	Если ТД1 <> Неопределено Тогда
		Попытка
			ЗапуститьПриложение(ТД1.ПолноеИмяФайла);
		Исключение
			Сообщить("Не удалось открыть файл. Описание ошибки: " + ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияКОтветуИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл...";
	Диалог.ПроверятьСуществованиеФайла = Истина;
	Диалог.МножественныйВыбор = Ложь;
	

	Если Не Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	СтрФайла = Новый Структура;
	СтрФайла.Вставить("ПолноеИмяФайла", Диалог.ПолноеИмяФайла);
	СтрФайла.Вставить("Каталог", Диалог.Каталог);
	СтрФайла.Вставить("ИмяФайла", СтрЗаменить(Диалог.ПолноеИмяФайла, Диалог.Каталог, ""));
	
	
	
	ЗаполнитьПолноеИмяФайлаПриемника(СтрФайла);
	
	КопироватьФайл(СтрФайла.ПолноеИмяФайла, СтрФайла.ПолноеИмяФайла2);
	
	//------------------
	Элементы.ВложенияКОтвету.ТекущиеДанные.ПолноеИмяФайла = СтрФайла.ПолноеИмяФайла2;
	Элементы.ВложенияКОтвету.ТекущиеДанные.Каталог = СтрФайла.Каталог2;
	Элементы.ВложенияКОтвету.ТекущиеДанные.ИмяФайла = СтрФайла.ИмяФайла;
	
//	Попытка
//		ЭлементыФормы.ВложенияПисьма.ТекущиеДанные.Хранилище = Новый ХранилищеЗначения(Новый ДвоичныеДанные(Диалог.ПолноеИмяФайла), Новый СжатиеДанных);
//		ЭлементыФормы.ВложенияПисьма.ТекущиеДанные.ИмяФайла = Сред(Диалог.ПолноеИмяФайла, СтрДлина(Диалог.Каталог) + 1);
//	Исключение
//		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());
//	КонецПопытки;
	
КонецПроцедуры

Процедура ЗаполнитьПолноеИмяФайлаПриемника(СтрФайла)

	//ИмяПодр = СокрЛП(ТорговаяТочка.Наименование);
	ИмяПодр = "";
	НомерСообщения = СокрЛП(Объект.Номер);
	
	//ПолныйКаталог1 = СокрЛП(Константы.КаталогХраненияФайлов.Получить()) + "MessAnswerAtt\"  + ИмяПодр;
	//МСРез1 = НайтиФайлы(ПолныйКаталог1);
	//Если МСРез1.Количество() = 0 Тогда
	//	СоздатьКаталог(ПолныйКаталог1);
	//КонецЕсли;
			
	//ПолныйКаталог2 =  ПолныйКаталог1 + "\" + НомерСообщения;
	ПолныйКаталог2 =  СокрЛП(Константы.КаталогХраненияФайлов.Получить()) + "MessAnswerAtt\" + НомерСообщения;
	МСРез2 = НайтиФайлы(ПолныйКаталог2);
	Если МСРез2.Количество() = 0 Тогда
		СоздатьКаталог(ПолныйКаталог2);
	КонецЕсли;
	
	ПолноеИмяФайла = ПолныйКаталог2 + "\" + СтрФайла.ИмяФайла;
	СтрФайла.Вставить("ПолноеИмяФайла2", ПолноеИмяФайла);
	СтрФайла.Вставить("Каталог2", ПолныйКаталог2);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКОтветуПрямыхПолучателей(Команда)
	
	ПараметрыФормы = Новый Структура("ПрямыеПолучатели", ПрямыеПолучателиКОтвету);
	ОткрытьФорму("Документ.СообщениеМОС.Форма.ПрямыеПолучатели", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Документ.СообщениеМОС.Форма.ПрямыеПолучатели" Тогда
		Если ИсточникВыбора.РежимПересылки Тогда
			ВыполнитьПересылку(ВыбранноеЗначение);
			Закрыть();
		Иначе
			ЗагрузитьПрямыхПолучателей(ВыбранноеЗначение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПрямыхПолучателей(Источник)

	ПрямыеПолучателиКОтвету.Загрузить(Источник.Выгрузить());

КонецПроцедуры

Процедура ВыполнитьПересылку(Источник)

	ПрямыеПолучателиДляПересылки.Загрузить(Источник.Выгрузить());
	// собственно пересылка (формирование нового сообщения)
	
	ДанныеДляСообщения = Новый Структура;
	
	ДанныеДляСообщения.Вставить("Дата", ТекущаяДатаСеанса());
	ДанныеДляСообщения.Вставить("Тема", "Fwd: " + Объект.Тема);
		
	ДанныеДляСообщения.Вставить("ТекстСообщения", СокрЛП(Объект.ТекстСообщения));
		
	ДанныеДляСообщения.Вставить("Автор", Объект.Автор);
	//ДанныеДляСообщения.Вставить("Основание", Объект.Ссылка);
	ДанныеДляСообщения.Вставить("Отправитель", Объект.Отправитель);
	
	ДанныеДляСообщения.Вставить("ВложенияКПисьму", ВложенияПисьма.Выгрузить());
	ДанныеДляСообщения.Вставить("ФД", Новый ХранилищеЗначения(ФД));
	ДанныеДляСообщения.Вставить("ФорматированиеТекста", Истина);
	ДанныеДляСообщения.Вставить("ПрямыеПолучатели", ПрямыеПолучателиДляПересылки.Выгрузить());
	
	НовыйДокСсылка = МеханизмОбменаСообщениями.СоздатьИОтправитьСообщение(ДанныеДляСообщения, Истина);
	Если ЗначениеЗаполнено(НовыйДокСсылка) Тогда
		Если ВложенияПисьма.Количество() > 0 Тогда
			НомерСообщения = СокрЛП(НовыйДокСсылка.Номер);
			ПолныйКаталог2 = СокрЛП(Константы.КаталогХраненияФайлов.Получить()) + "MessAtt\"  + НомерСообщения;
			МСРез2 = НайтиФайлы(ПолныйКаталог2);
			Если МСРез2.Количество() = 0 Тогда
				СоздатьКаталог(ПолныйКаталог2);
			КонецЕсли;
			Для каждого СтрокаТЗВО Из ВложенияПисьма Цикл
				ПолноеИмяФайла2 = ПолныйКаталог2 + "\" + СтрокаТЗВО.ИмяФайла;
				КопироватьФайл(СтрокаТЗВО.ПолноеИмяФайла, ПолноеИмяФайла2);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура Переслать(Команда)
	
	ПараметрыФормы = Новый Структура("ПрямыеПолучатели, Пересылка", ПрямыеПолучателиДляПересылки, Истина);
	ОткрытьФорму("Документ.СообщениеМОС.Форма.ПрямыеПолучатели", ПараметрыФормы, ЭтаФорма);
	
КонецПроцедуры
