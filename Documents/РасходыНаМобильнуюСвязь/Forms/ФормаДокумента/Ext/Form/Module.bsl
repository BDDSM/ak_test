
&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Оператор",Объект.Оператор);
	Результат = ОткрытьФормуМодально("Обработка.ЗакрузкаРасходовНаМобильнуюСвязь.Форма.Форма",ПараметрыОткрытия);
	ЗагрузитьРезультат(Результат);
	
	
КонецПроцедуры

Процедура ЗагрузитьРезультат(Результат);
	
	Если Результат <> Неопределено Тогда	
		ТаблицаРасходы = ПолучитьИзВременногоХранилища(Результат.Адрес);	
		Объект.Расходы.Загрузить(ТаблицаРасходы);
		Объект.Комментарий = "Загружено из файла: " + Результат.Файл;
		 ПересчитатьИтогоВрасходах();
		
	КонецЕсли;
	
	
	ОбновитьДанныеПодвала();
	
КонецПроцедуры

Процедура ПересчитатьИтогоВрасходах()
	
	Для каждого Строка из объект.Расходы Цикл 
			
		ПересчитатьИтогоВСтроке(Строка);
			
	КонецЦикла;		
	
	
КонецПроцедуры

Процедура ПересчитатьИтогоВСтроке(ТекущаяСтрока)
	
	ТекущаяСтрока.Итого =   ТекущаяСтрока.МобильнаяСвязь + 
							ТекущаяСтрока.АбонентскаяПлата +
							ТекущаяСтрока.SMSMMS +
							ТекущаяСтрока.Интернет +
							ТекущаяСтрока.Роуминг +
							ТекущаяСтрока.ДополнительныеУслуги -
							ТекущаяСтрока.Скидка;
	
КонецПроцедуры	
						

&НаКлиенте
Процедура ПересчитатьИтогоВСтрокеНаКлиенте(ТекущаяСтрока)
	
	ТекущаяСтрока.Итого =   ТекущаяСтрока.МобильнаяСвязь + 
							ТекущаяСтрока.АбонентскаяПлата +
							ТекущаяСтрока.SMSMMS +
							ТекущаяСтрока.Интернет +
							ТекущаяСтрока.Роуминг +
							ТекущаяСтрока.ДополнительныеУслуги -
							ТекущаяСтрока.Скидка;
	
КонецПроцедуры	
						

&НаКлиенте
Процедура РасходыПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Расходы.ТекущиеДанные;
	ПересчитатьИтогоВСтрокеНаКлиенте(ТекущаяСтрока);						
	ОбновитьДанныеПодвала();						
	
КонецПроцедуры

Процедура ОбновитьДанныеПодвала()
	
	Расходы = объект.Расходы.Выгрузить();
	ИтогоСимКарт = Расходы.Количество();
	ИтогоАбонентскаяПлата = Расходы.Итог("АбонентскаяПлата");
	ИтогоМобильнаяСвязь = Расходы.Итог("МобильнаяСвязь");
	ИтогоSMSMMS = Расходы.Итог("SMSMMS");
	ИтогоИнтернет = Расходы.Итог("Интернет");
	ИтогоРоуминг = Расходы.Итог("Роуминг");
	ИтогоДополнительныеУслуги = Расходы.Итог("ДополнительныеУслуги");
	ИтогоСкидка = Расходы.Итог("Скидка");
	Итого = ИтогоАбонентскаяПлата+
			ИтогоМобильнаяСвязь +
			ИтогоSMSMMS +
			ИтогоИнтернет +
			ИтогоРоуминг +
			ИтогоДополнительныеУслуги -
			ИтогоСкидка;
	
КонецПроцедуры	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 08.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Расходы на мобильную связь");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	
	Если не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ДатаНачала = НачалоМесяца(ТекущаяДата());
		Объект.ДатаОкончания = КонецМесяца(ТекущаяДата());
	КонецЕсли;	
	
	ПересчитатьИтогоВрасходах();
	ОбновитьДанныеПодвала();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Объект.ДатаНачала > Объект.ДатаОкончания Тогда
		Отказ= Истина;
		Сообщить("Дата начала не можыть быть позже даты окончания");
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	Объект.ДатаНачала = НачалоМесяца(Объект.Дата);
	Объект.ДатаОкончания = КонецМесяца(Объект.Дата);
	
КонецПроцедуры

&НаСервере
Процедура ОператорПриИзмененииНаСервере()
	Объект.ВариантРасчетаНДС = Объект.Оператор.ВариантРасчетаНДС;
КонецПроцедуры

&НаКлиенте
Процедура ОператорПриИзменении(Элемент)
	ОператорПриИзмененииНаСервере();
КонецПроцедуры

//+++АК sils 08.06.2018 ИП-00018876
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
КонецПроцедуры



