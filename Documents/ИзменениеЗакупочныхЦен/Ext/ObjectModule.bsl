
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если Статус = Перечисления.СтатусыПодтвержденияИзмененияЦен.Согласовано 
		ИЛИ Статус = Перечисления.СтатусыПодтвержденияИзмененияЦен.ЧастичноСогласовано Тогда
		
		Если ЗначениеЗаполнено(ПараметрыСеанса.ТекущийПользователь) Тогда
			Автор = ПараметрыСеанса.ТекущийПользователь.ФизЛицо;
		КонецЕсли;
		
		ТаблицаТоваров = ПолучитьТаблицуТоваров();
		
		ОчиститьЗаписиРегистраЦеныПоставщиковПоДокументу();
		
		Для каждого Строка Из ТаблицаТоваров Цикл 
			
			Если Строка.Статус =  Перечисления.СтатусыПодтвержденияИзмененияЦен.Согласовано Тогда
				
				МенеджерЗаписи = РегистрыСведений.ЦеныПоставщиков.СоздатьМенеджерЗаписи();
				МенеджерЗаписи.Номенклатура   = Строка.Номенклатура;
				МенеджерЗаписи.Характеристика = Строка.Характеристика;
				МенеджерЗаписи.Период 	   = Строка.ДатаНачала;
				МенеджерЗаписи.Цена 	   = Строка.ЦенаНовая;
				МенеджерЗаписи.Поставщик = Строка.Поставщик;
				МенеджерЗаписи.Автор 	  = Автор;
				МенеджерЗаписи.Документ  = Ссылка;
				
				ОбщийКомментарий = СокрЛП(СокрЛП(Строка.КомментарийРуководитель) + ?(ЗначениеЗаполнено(Комментарий), " " + СокрЛП(Комментарий), ""));
				
				МенеджерЗаписи.Комментарий = ОбщийКомментарий;
				
				МенеджерЗаписи.Записать();
				
				// Установка "старой цены" после окончания акции.
				// ОШИБКА! Если в период между "Новой датой" и "Датой по" будут добавлены другие документы/записи 
				// то они станут неактуальными по истечению "Акционного периода"! 
				// Скворцов заверил, что подобные с-ции будут контролироваться "вручную" и менять/дополнять ТЗ (и алгоритм соответственно) не нужно.
				Если ЗначениеЗаполнено(Строка.ДатаПо) Тогда
					
					МенеджерЗаписи = РегистрыСведений.ЦеныПоставщиков.СоздатьМенеджерЗаписи();
					МенеджерЗаписи.Номенклатура   = Строка.Номенклатура;
					МенеджерЗаписи.Характеристика = Строка.Характеристика;
					МенеджерЗаписи.Период 	  = Строка.ДатаПо;
					МенеджерЗаписи.Цена 	  = Строка.Цена;
					МенеджерЗаписи.Поставщик = Строка.Поставщик;
					МенеджерЗаписи.Автор 	  = Автор;
					МенеджерЗаписи.Документ  = Ссылка;
					
					МенеджерЗаписи.Комментарий = ОбщийКомментарий;
					
					МенеджерЗаписи.Записать();

				КонецЕсли;
				
				//+++АК LAGP 2018.08.02 ИП-00019302 Переоценка всего комплекта, при изменении цены комплектующего товара
				ТаблицаЗначенийДляПереоценкиКомплекта = Новый ТаблицаЗначений;
				Если ЭтотОбъект.ДополнительныеСвойства.Свойство("ТаблицаЗначенийДляПереоценкиКомплекта", ТаблицаЗначенийДляПереоценкиКомплекта) Тогда
					Для каждого СтрокаДляПереоценкиКомплекта Из ТаблицаЗначенийДляПереоценкиКомплекта Цикл
						МенеджерЗаписи = РегистрыСведений.ЦеныПоставщиков.СоздатьМенеджерЗаписи();
						МенеджерЗаписи.Номенклатура   	= СтрокаДляПереоценкиКомплекта.Комплект;
						МенеджерЗаписи.Характеристика 	= СтрокаДляПереоценкиКомплекта.Характеристика;
						МенеджерЗаписи.Период 	   		= СтрокаДляПереоценкиКомплекта.ДатаНачала;
						МенеджерЗаписи.Цена 	   		= СтрокаДляПереоценкиКомплекта.ЦенаКомплектаНовая;
						МенеджерЗаписи.Поставщик 		= СтрокаДляПереоценкиКомплекта.Поставщик;
						МенеджерЗаписи.Автор 	  		= Автор;
						МенеджерЗаписи.Документ  		= Ссылка;
						
						ОбщийКомментарий = СокрЛП(СокрЛП(Строка.КомментарийРуководитель) + ?(ЗначениеЗаполнено(Комментарий), " " + СокрЛП(Комментарий), "")) + " Переоценка комплекта по комплектующей.";
						
						МенеджерЗаписи.Комментарий = ОбщийКомментарий;
						
						МенеджерЗаписи.Записать();	
					КонецЦикла;	
				КонецЕсли;	
				//---АК LAGP
				
			КонецЕсли;
			
		КонецЦикла;
	Иначе
		
		Если ДополнительныеСвойства.Свойство("ОтправлятьУведомления") И ДополнительныеСвойства.ОтправлятьУведомления Тогда
			ДополнительныеСвойства.ОтправлятьУведомления = Ложь;
		КонецЕсли;
		
		Сообщить(НСтр("ru = 'Проводить можно только документы со статусом «Согласовано» или «Частично согласовано»';"));
		Отказ = Истина;
		
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ОтправлятьУведомления") И ДополнительныеСвойства.ОтправлятьУведомления Тогда
		 Документы.ИзменениеЗакупочныхЦен.ОтправитьУведомленияОПовышенииЦенЦен(Ссылка);
	КонецЕсли;
	
КонецПроцедуры 

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОчиститьЗаписиРегистраЦеныПоставщиковПоДокументу();

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//+++АК ILIK 2018.08.06 ИП-00019438
	// код перенесен в форму, событие ПередЗаписью
	//---АК ILIK
	
	Если Не ДополнительныеСвойства.Свойство("БезРассылки") И Не ДополнительныеСвойства.Свойство("ОтправлятьУведомления") Тогда
		ДополнительныеСвойства.Вставить("ОтправлятьУведомления", Не ОбменДанными.Загрузка И РежимЗаписи = РежимЗаписиДокумента.Проведение);
	КонецЕсли;

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ВидНоменклатуры = ОбъектКопирования.ВидНоменклатуры;
	
	ОбработатьДанныеДокументаПриКопировании();
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		
		Если ДанныеЗаполнения.Свойство("ТолькоОтклоненные") Тогда
			
			ТоварыОснования = ДанныеЗаполнения.Основание.Товары.Выгрузить();
			
			Для Каждого Строка Из ТоварыОснования Цикл
				
				Если Строка.Статус = Перечисления.СтатусыПодтвержденияИзмененияЦен.Отклонено Тогда
					
					НоваяСтрока = Товары.Добавить();
					
					НоваяСтрока.Поставщик = Строка.Поставщик;
					НоваяСтрока.Номенклатура = Строка.Номенклатура;
					НоваяСтрока.Характеристика = Строка.Характеристика;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если Товары.Количество() > 0 Тогда
				
				Дата = ТекущаяДата();
				
				ЗаполнитьТаблицуЦенамиПоставщиков();
				
			КонецЕсли;
				
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОчиститьЗаписиРегистраЦеныПоставщиковПоДокументу();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЦеныПоставщиков.Период КАК Период,
	|	ЦеныПоставщиков.Номенклатура КАК Номенклатура,
	|	ЦеныПоставщиков.Характеристика КАК Характеристика,
	|	ЦеныПоставщиков.Документ КАК Документ
	|ИЗ
	|	РегистрСведений.ЦеныПоставщиков КАК ЦеныПоставщиков
	|ГДЕ
	|	ЦеныПоставщиков.Документ = &Документ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Номенклатура,
	|	Характеристика
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Документ", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			МенеджерЗаписи = РегистрыСведений.ЦеныПоставщиков.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Период         = Выборка.Период;
			МенеджерЗаписи.Номенклатура   = Выборка.Номенклатура;
			МенеджерЗаписи.Характеристика = Выборка.Характеристика;
			МенеджерЗаписи.Документ       = Выборка.Документ;
			
			МенеджерЗаписи.Удалить();
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры

Процедура ДобавитьЗаписьОкончанияДействияАкции()
	
	
КонецПроцедуры

Функция ПолучитьТаблицуТоваров()
	
	Если АвтоПереоценкаВсехТМ Тогда 
		
		Запрос = Новый Запрос("Выбрать * ПОМЕСТИТЬ ВТ Из &ВременнаяТаблица Как ВременнаяТаблица");
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ВременнаяТаблица", Товары.Выгрузить());
		Запрос.Выполнить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВТ.НомерСтроки,
		|	ВТ.Поставщик,
		|	ВТ.Номенклатура КАК Номенклатура,
		|	ВТ.Характеристика КАК Характеристика,
		|	ВТ.Дата,
		|	ВТ.Цена,
		|	ВТ.ЦенаНовая,
		|	ВТ.ДатаНачала,
		|	ВТ.ДатаПо,
		|	ВТ.КомментарийТехнолог,
		|	ВТ.КомментарийРуководитель,
		|	ВТ.Статус,
		|	NULL КАК Ссылка
		|ИЗ
		|	ВТ КАК ВТ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ.НомерСтроки,
		|	ВТ.Поставщик,
		|	НоменклатураСпр.Ссылка,
		|	ХарактеристикиНоменклатуры.Ссылка,
		|	ВТ.Дата,
		|	ВТ.Цена,
		|	ВТ.ЦенаНовая,
		|	ВТ.ДатаНачала,
		|	ВТ.ДатаПо,
		|	ВТ.КомментарийТехнолог,
		|	ВТ.КомментарийРуководитель,
		|	ВТ.Статус,
		|	НоменклатураСпр.Ссылка
		|ИЗ
		|	ВТ КАК ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|		ПО ВТ.Характеристика = ХарактеристикиНоменклатуры.ОсновнаяХарактеристика
		|			И (ВТ.Характеристика <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
		|		ПО ВТ.Номенклатура = НоменклатураСпр.ОсновнаяНоменклатура
		|ГДЕ
		|	НЕ ХарактеристикиНоменклатуры.Ссылка ЕСТЬ NULL
		|	И НЕ ХарактеристикиНоменклатуры.Неактивная";
		
		Возврат Запрос.Выполнить().Выгрузить();
	Иначе
		Возврат Товары.Выгрузить();
	КонецЕсли;
	
КонецФункции

//+++АК ILIK 2018.09.13 ИП-00019438
//Функция ПроверитьВозможностьИзмененияДанных()
Функция ПроверитьВозможностьИзмененияДанных() Экспорт
//---АК ILIK
	
	Если ДополнительныеСвойства.Свойство("ФоновоеЗадание") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РуководителиИзменениеЦен.Сотрудник
	|ИЗ
	|	РегистрСведений.РуководителиИзменениеЦен КАК РуководителиИзменениеЦен
	|ГДЕ
	|	РуководителиИзменениеЦен.ПравоПодтверждения
	|	И РуководителиИзменениеЦен.Сотрудник = &Сотрудник
	|	И РуководителиИзменениеЦен.ВидНоменклатуры = &ВидНоменклатуры";
	
	Запрос.УстановитьПараметр("Сотрудник", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);
	
	Возврат Запрос.Выполнить().Пустой();
	
КонецФункции

Процедура ОбработатьДанныеДокументаПриКопировании();
	
	Дата = ТекущаяДата();
	
	Статус = Перечисления.СтатусыПодтвержденияИзмененияЦен.ПустаяСсылка();
	
	Для каждого Строка Из Товары Цикл
		
		Строка.Дата = Дата(1,1,1);
		Строка.Цена = 0;
		Строка.ЦенаНовая  = 0;
		Строка.ДатаНачала = Дата(1,1,1);
		Строка.ДатаПо = Дата(1,1,1);
		Строка.Статус = Статус;
		Строка.КомментарийТехнолог     = "";
		Строка.КомментарийРуководитель = "";
		
	КонецЦикла;
	
	ЗаполнитьТаблицуЦенамиПоставщиков(, ВидНоменклатуры);
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуЦенамиПоставщиков(ДокументСсылка = Неопределено, ВидНоменклатуры = Неопределено) Экспорт
	
	Если Товары.Количество() > 0 Тогда
		
		Запрос = Новый Запрос("Выбрать * ПОМЕСТИТЬ ВТ_Товары Из &ВременнаяТаблица Как ВременнаяТаблица");
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("ВременнаяТаблица", Товары.Выгрузить());
		Запрос.Выполнить();
		
		Запрос.Текст =
		
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(ЦеныПоставщиков.Период) КАК Период,
		|	ЦеныПоставщиков.Номенклатура,
		|	ЦеныПоставщиков.Характеристика
		|ПОМЕСТИТЬ ВТ_ПоследниеДаты
		|ИЗ
		|	РегистрСведений.ЦеныПоставщиков КАК ЦеныПоставщиков
		|ГДЕ
		|	ЦеныПоставщиков.Номенклатура В(&Владелец)
		|	И ЦеныПоставщиков.Характеристика В(&Характеристика)
		|	И ЦеныПоставщиков.Поставщик В(&Поставщик)
		|	И ВЫБОР
		|			КОГДА &ДокументСсылка <> ЗНАЧЕНИЕ(Документ.ИзменениеЗакупочныхЦен.ПустаяСсылка)
		|				ТОГДА ЦеныПоставщиков.Документ <> &ДокументСсылка
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И ЦеныПоставщиков.Период <= &Период
		|
		|СГРУППИРОВАТЬ ПО
		|	ЦеныПоставщиков.Номенклатура,
		|	ЦеныПоставщиков.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_ПоследниеДаты.Период,
		|	ВТ_ПоследниеДаты.Номенклатура,
		|	ВТ_ПоследниеДаты.Характеристика,
		|	ЦеныПоставщиков.Цена,
		|	ЦеныПоставщиков.Поставщик
		|ПОМЕСТИТЬ ВТ_ЦеныПоставщиков
		|ИЗ
		|	ВТ_ПоследниеДаты КАК ВТ_ПоследниеДаты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныПоставщиков КАК ЦеныПоставщиков
		|		ПО ВТ_ПоследниеДаты.Номенклатура = ЦеныПоставщиков.Номенклатура
		|			И ВТ_ПоследниеДаты.Характеристика = ЦеныПоставщиков.Характеристика
		|			И ВТ_ПоследниеДаты.Период = ЦеныПоставщиков.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ВТ_Товары.НомерСтроки КАК НомерСтроки,
		|	ВТ_Товары.Поставщик,
		|	ВТ_Товары.Номенклатура,
		|	ВТ_Товары.Характеристика,
		|	Таб_Итоговая.Дата,
		|	Таб_Итоговая.Цена
		|ИЗ
		|	ВТ_Товары КАК ВТ_Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ВТ_ЦеныПоставщиков.Поставщик КАК Поставщик,
		|			ВЫБОР
		|				КОГДА &ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Товар)
		|					ТОГДА СправочникХарактеристикиНоменклатуры.Владелец
		|				ИНАЧЕ ВТ_ЦеныПоставщиков.Номенклатура
		|			КОНЕЦ КАК Номенклатура,
		|			ВЫБОР
		|				КОГДА &ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Товар)
		|					ТОГДА СправочникХарактеристикиНоменклатуры.Ссылка
		|				ИНАЧЕ ВТ_ЦеныПоставщиков.Характеристика
		|			КОНЕЦ КАК Характеристика,
		|			ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Производитель,
		|			ЕСТЬNULL(ВТ_ЦеныПоставщиков.Период, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК Дата,
		|			ЕСТЬNULL(ВТ_ЦеныПоставщиков.Цена, 0) КАК Цена
		|		ИЗ
		|			ВТ_ЦеныПоставщиков КАК ВТ_ЦеныПоставщиков
		|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СправочникХарактеристикиНоменклатуры
		|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|					ПО (ЗначенияСвойствОбъектов.Объект = СправочникХарактеристикиНоменклатуры.Ссылка)
		|						И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
		|				ПО ВТ_ЦеныПоставщиков.Характеристика = СправочникХарактеристикиНоменклатуры.Ссылка
		|					И ВТ_ЦеныПоставщиков.Номенклатура = СправочникХарактеристикиНоменклатуры.Владелец
		|		ГДЕ
		|			СправочникХарактеристикиНоменклатуры.Владелец В(&Владелец)
		|			И СправочникХарактеристикиНоменклатуры.Ссылка В(&Характеристика)
		|			И НЕ СправочникХарактеристикиНоменклатуры.Неактивная) КАК Таб_Итоговая
		|		ПО ВТ_Товары.Поставщик = Таб_Итоговая.Поставщик
		|			И ВТ_Товары.Номенклатура = Таб_Итоговая.Номенклатура
		|			И ВТ_Товары.Характеристика = Таб_Итоговая.Характеристика
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
		Запрос.УстановитьПараметр("Период", Дата);
		Запрос.УстановитьПараметр("Владелец", Товары.ВыгрузитьКолонку("Номенклатура"));
		Запрос.УстановитьПараметр("Поставщик", Товары.ВыгрузитьКолонку("Поставщик"));
		Запрос.УстановитьПараметр("Характеристика", Товары.ВыгрузитьКолонку("Характеристика"));
		Запрос.УстановитьПараметр("ДокументСсылка", ?(ЗначениеЗаполнено(ДокументСсылка), ДокументСсылка, Документы.ИзменениеЗакупочныхЦен.ПустаяСсылка()));
		Запрос.УстановитьПараметр("ВидНоменклатуры", ВидНоменклатуры);

		Результат = Запрос.Выполнить();
		
		Если Не Результат.Пустой()Тогда
			Товары.Загрузить(Результат.Выгрузить());
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//+++АК LAGP 2018.08.02 ИП-00019302 Проверка на наличие комплектов (нельзя) в документе.
	
	//+++АК ILIK 2018.08.06 ИП-00019438
	// часть проверки перенесено в форму, событие ПередЗаписью
	//---АК ILIK
	
	//Переоценка всего комплекта
	
	ТаблицаЗначенийДляПереоценкиКомплекта = Новый ТаблицаЗначений;
	ТаблицаЗначенийДляПереоценкиКомплекта.Колонки.Добавить("Номенклатура");
	ТаблицаЗначенийДляПереоценкиКомплекта.Колонки.Добавить("Комплект");
	ТаблицаЗначенийДляПереоценкиКомплекта.Колонки.Добавить("Характеристика");
	ТаблицаЗначенийДляПереоценкиКомплекта.Колонки.Добавить("Цена");
	ТаблицаЗначенийДляПереоценкиКомплекта.Колонки.Добавить("ЦенаНовая");
	ТаблицаЗначенийДляПереоценкиКомплекта.Колонки.Добавить("ЦенаКомплекта");
	ТаблицаЗначенийДляПереоценкиКомплекта.Колонки.Добавить("РазницаЦеныКомплекта");
	ТаблицаЗначенийДляПереоценкиКомплекта.Колонки.Добавить("Количество");
	ТаблицаЗначенийДляПереоценкиКомплекта.Колонки.Добавить("Поставщик");
	ТаблицаЗначенийДляПереоценкиКомплекта.Колонки.Добавить("ДатаНачала");
	ТаблицаЗначенийДляПереоценкиКомплекта.Колонки.Добавить("Составляющая");	
	
	ТаблицаЗначенийВременная = Новый ТаблицаЗначений;
	ТаблицаЗначенийВременная.Колонки.Добавить("Номенклатура");
	ТаблицаЗначенийВременная.Колонки.Добавить("Комплект");
	ТаблицаЗначенийВременная.Колонки.Добавить("Характеристика");
	ТаблицаЗначенийВременная.Колонки.Добавить("ЦенаКомплекта");
	ТаблицаЗначенийВременная.Колонки.Добавить("Количество");
	ТаблицаЗначенийВременная.Колонки.Добавить("Поставщик");
	ТаблицаЗначенийВременная.Колонки.Добавить("Составляющая");
	
	Для каждого СтрокаТовара Из Товары Цикл
		ЗапросКомплектующих = Новый Запрос;
		ЗапросКомплектующих.Текст = 
		"ВЫБРАТЬ
		|	СоставКомплектаСрезПоследних.Комплект,
		|	СоставКомплектаСрезПоследних.ТоварКомплекта КАК Номенклатура,
		|	СоставКомплектаСрезПоследних.Характеристика,
		|	ЦеныПоставщиковСрезПоследних.Цена КАК ЦенаКомплекта,
		|	СоставКомплектаСрезПоследних.Количество,
		|	СоставКомплектаСрезПоследних.Составляющая,
		|	ЦеныПоставщиковСрезПоследних.Поставщик
		|ИЗ
		|	РегистрСведений.СоставКомплекта.СрезПоследних(
		|			&ДатаНачала,
		|			ТоварКомплекта = &ТоварКомплекта 
		|				И Составляющая.id_kontr = &ХарактеристикаИДКонтр) КАК СоставКомплектаСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныПоставщиков.СрезПоследних(&ДатаНачала, ) КАК ЦеныПоставщиковСрезПоследних
		|		ПО СоставКомплектаСрезПоследних.Комплект = ЦеныПоставщиковСрезПоследних.Номенклатура
		|			И СоставКомплектаСрезПоследних.Характеристика = ЦеныПоставщиковСрезПоследних.Характеристика";
		
		ЗапросКомплектующих.УстановитьПараметр("ТоварКомплекта"			, СтрокаТовара.Номенклатура);
		ЗапросКомплектующих.УстановитьПараметр("ХарактеристикаИДКонтр"	, ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТовара.Характеристика, "id_kontr"));
		ЗапросКомплектующих.УстановитьПараметр("ДатаНачала"				, СтрокаТовара.ДатаНачала-1);		
		
		ВыборкаЗапросаКомплектующих = ЗапросКомплектующих.Выполнить().Выбрать();
		
		Пока ВыборкаЗапросаКомплектующих.Следующий() Цикл			
			НоваяСтрокаДанныхрегистра = ТаблицаЗначенийВременная.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДанныхрегистра, ВыборкаЗапросаКомплектующих);				
		КонецЦикла;	
		
	КонецЦикла;	
	
	Для каждого СтрокаРегистра Из ТаблицаЗначенийВременная Цикл
				Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаРегистра.Номенклатура, "ПроизводитсяВМагазине") Тогда
					Продолжить;	
				КонецЕсли;	
				НайденнаяСтрокаКомплектВДокументе = Товары.Найти(СтрокаРегистра.Номенклатура, "Номенклатура");
				
				Если ЗначениеЗаполнено(НайденнаяСтрокаКомплектВДокументе) И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НайденнаяСтрокаКомплектВДокументе.Характеристика, "id_kontr") = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаРегистра.Составляющая, "id_kontr") Тогда
					НоваяСтрокаДляЦеныКомплекта = ТаблицаЗначенийДляПереоценкиКомплекта.Добавить();	
					ЗаполнитьЗначенияСвойств(НоваяСтрокаДляЦеныКомплекта, НайденнаяСтрокаКомплектВДокументе);
					ЗаполнитьЗначенияСвойств(НоваяСтрокаДляЦеныКомплекта, СтрокаРегистра);
					НоваяСтрокаДляЦеныКомплекта.РазницаЦеныКомплекта = (НоваяСтрокаДляЦеныКомплекта.ЦенаНовая - НоваяСтрокаДляЦеныКомплекта.Цена) * НоваяСтрокаДляЦеныКомплекта.Количество;
					Если НоваяСтрокаДляЦеныКомплекта.Количество = 0 Тогда
					ОбщегоНазначения.СообщитьОбОшибке("Для номенлатуры " + НоваяСтрокаДляЦеныКомплекта.Номенклатура + " не указано количество в комплекте " + НоваяСтрокаДляЦеныКомплекта.Комплект + "! Разница цен установлена в 0 руб.!", Ложь);	
				КонецЕсли;	
				КонецЕсли;	
	КонецЦикла;	
	
	ТаблицаЗначенийДляПереоценкиКомплекта.Свернуть("Комплект, Характеристика, Поставщик, ЦенаКомплекта, ДатаНачала", "РазницаЦеныКомплекта");
	ТаблицаЗначенийДляПереоценкиКомплекта.Сортировать("Комплект Возр, ДатаНачала Возр");
	ТаблицаЗначенийДляПереоценкиКомплекта.Колонки.Добавить("ЦенаКомплектаНовая");
	ПрошлыйКомплект = "";
	ЦенаПрошлогоКомплекта = 0;
	
	Для каждого СтрокаТаблицыДляПереоценкиКомплекта Из ТаблицаЗначенийДляПереоценкиКомплекта Цикл
		Если ПрошлыйКомплект = СтрокаТаблицыДляПереоценкиКомплекта.Комплект Тогда
			СтрокаТаблицыДляПереоценкиКомплекта.ЦенаКомплекта = ЦенаПрошлогоКомплекта;	
		КонецЕсли;	
			
		СтрокаТаблицыДляПереоценкиКомплекта.ЦенаКомплектаНовая = СтрокаТаблицыДляПереоценкиКомплекта.ЦенаКомплекта + СтрокаТаблицыДляПереоценкиКомплекта.РазницаЦеныКомплекта;
		ПрошлыйКомплект 		= СтрокаТаблицыДляПереоценкиКомплекта.Комплект;
		ЦенаПрошлогоКомплекта 	= СтрокаТаблицыДляПереоценкиКомплекта.ЦенаКомплектаНовая;
	КонецЦикла;
	
	Если ТаблицаЗначенийДляПереоценкиКомплекта.Количество() > 0 Тогда
		ЭтотОбъект.ДополнительныеСвойства.Вставить("ТаблицаЗначенийДляПереоценкиКомплекта", ТаблицаЗначенийДляПереоценкиКомплекта);
	КонецЕсли;
	//---АК LAGP
КонецПроцедуры

#КонецОбласти
