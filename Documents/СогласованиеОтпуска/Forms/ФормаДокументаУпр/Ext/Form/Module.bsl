
&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	СотрудникПриИзмененииНАСервере();	
	
КонецПроцедуры

&НаСервере
Процедура СотрудникПриИзмененииНАСервере()
	
	Если ЗначениеЗаполнено(Объект.Сотрудник) Тогда
		
		Объект.Подразделение =  Объект.Сотрудник.ПодразделениеОрганизации;	
		Объект.ФизЛицо = Объект.Сотрудник.Физлицо;
		Объект.Организация = Объект.Сотрудник.Организация;
		Объект.Руководитель = ПолучитьРуководителя();
		Если ЗначениеЗаполнено(Объект.Руководитель) Тогда
			
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ОтправитьПисьмоОСоздании()
	
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
	
	
	Письмо = Новый ИнтернетПочтовоеСообщение;
	Письмо.Тема 			= "Создан документ согласования отпуска.";
	Письмо.Отправитель 		= УчетнаяЗапись.Логин;
	Письмо.ИмяОтправителя 	= УчетнаяЗапись.Логин;
	
	//+++ АК bara 16430.03 29.10.2017	
	Если  ЗначениеЗаполнено(Объект.Руководитель) Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Представление КАК ЕМайл
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &Объект
		|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
		|	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица)";
		
		Запрос.УстановитьПараметр("Объект", Объект.Руководитель.Физлицо);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если  ВыборкаДетальныеЗаписи.Следующий() Тогда 
			Получатель = Письмо.Получатели.Добавить();
			Получатель.Адрес = ВыборкаДетальныеЗаписи.ЕМайл;
		КонецЕсли;
	КонецЕсли;
	//--- АК bara 16430.03 29.10.2017

	Получатель = Письмо.Получатели.Добавить();
	Получатель.Адрес = "kadri@izbenka.msk.ru";	
	
	ТекстПисьма = Письмо.Тексты.Добавить();
	ТекстПисьма.ТипТекста 	= ТипТекстаПочтовогоСообщения.ПростойТекст;
	мТекстПисьма 		= "Создан документ ""Согласование отпуска"":" +   
	Символы.ПС + 
	"Сотрудник " + Объект.Сотрудник + "; период отпуска с " + Формат(Объект.ДатаС, "ДЛФ=Д") +
	" по " + Формат(Объект.ДатаПО, "ДЛФ=Д")+", вид отпуска """+Объект.ВидОтпуска+"""";
		ТекстПисьма.Текст = мТекстПисьма;
	
	Почта = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Почта.Подключиться(Профиль);	
	Почта.Послать(Письмо);
	Почта.Отключиться();
	
КонецФункции

&НаСервере
Функция ОтправитьПисьмоОСозданииПослеСогласования()
	
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
	

	Письмо = Новый ИнтернетПочтовоеСообщение;
	Письмо.Тема 			= "Согласован документ согласования отпуска.";
	Письмо.Отправитель 		= УчетнаяЗапись.Логин;
	Письмо.ИмяОтправителя 	= УчетнаяЗапись.Логин;

	//+++ АК bara 16430.03 29.10.2017	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление КАК ЕМайл
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	|	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица)";
	
	Запрос.УстановитьПараметр("Объект", Объект.Сотрудник.Физлицо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если  ВыборкаДетальныеЗаписи.Следующий() Тогда 
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = ВыборкаДетальныеЗаписи.ЕМайл;
	КонецЕсли;
	//--- АК bara 16430.03 29.10.2017
	
	Получатель = Письмо.Получатели.Добавить();
	Получатель.Адрес = "kadri@izbenka.msk.ru";	
	
	ТекстПисьма = Письмо.Тексты.Добавить();
	ТекстПисьма.ТипТекста 	= ТипТекстаПочтовогоСообщения.ПростойТекст;
	мТекстПисьма 		= "Согласован документ ""Согласование отпуска"":" +   
	Символы.ПС + 
	"Сотрудник " + Объект.Сотрудник + "; период отпуска с " + Формат(Объект.ДатаС, "ДЛФ=Д") +
	" по " + Формат(Объект.ДатаПО, "ДЛФ=Д")+", вид отпуска """+Объект.ВидОтпуска+"""";
		ТекстПисьма.Текст = мТекстПисьма;
	
	Почта = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Почта.Подключиться(Профиль);	
	Почта.Послать(Письмо);
	Почта.Отключиться();
	
КонецФункции


&НаСервере
Функция ПолучитьРуководителя()
	
	Если не ЗначениеЗаполнено(Объект.ФизЛицо) Тогда
		возврат "";
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст ="ВЫБРАТЬ
	              |	СтруктурнаеЕдиницаСотрудника.Подразделение,
	              |	СтруктурнаеЕдиницаСотрудника.ФизЛицо,
	              |	НачальникОтдела.Сотрудник КАК Руководитель
	              |ИЗ
	              |	РегистрСведений.СтруктурныеЕдиницыФизлиц.СрезПоследних КАК СтруктурнаеЕдиницаСотрудника
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиПоЦФО.СрезПоследних КАК НачальникОтдела
	              |		ПО СтруктурнаеЕдиницаСотрудника.Подразделение = НачальникОтдела.ЦФО
	              |ГДЕ
	              |	СтруктурнаеЕдиницаСотрудника.ФизЛицо = &ФизЛицо
	              |	И НачальникОтдела.РуководительОтдела";
	
	Запрос.УстановитьПараметр("ФизЛицо", Объект.Физлицо);
	Список = Запрос.Выполнить().Выгрузить();
	
	Если Список.Количество() > 0 Тогда
		Если Список.Количество() > 1 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Внимание в отделе " + Список[0].Подразделение.Наименование + " заполнено более одного руководителя!!";
			Сообщение.Сообщить(); 
		КонецЕсли; 
		Возврат Список[0].Руководитель;
	КонецЕсли; 
	
	Возврат Справочники.Пользователи.ПустаяСсылка();
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если  Объект.Руководитель = ПараметрыСеанса.ТекущийПользователь Тогда 
		Элементы.Согласован.ТолькоПросмотр = Ложь;
	КонецЕсли;
	///+++ АК bara 16430.03 29.10.2017	
	ПроверкаПросрочки();
	///--- АК bara 16430.03 29.10.2017
	
КонецПроцедуры

///+++ АК bara 16430.03 29.10.2017
&НаСервере
Процедура ПроверкаПросрочки ()
	
	Если Объект.Согласован = Ложь и Объект.ВидОтпуска = Перечисления.ВидОтпуска.Отпуск и ((НачалоДня(Объект.ДатаС) - НачалоДня(ТекущаяДата()))/86400)<10  Тогда
		Элементы.Согласован.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры
///--- АК bara 16430.03


&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Объект.Согласован = Ложь Тогда 
		ОтправитьПисьмоОСоздании();
	Иначе 		
		ОтправитьПисьмоОСозданииПослеСогласования ();
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаСПриИзменении(Элемент)
	ПроверитьДаты();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПоПриИзменении(Элемент)
	ПроверитьДаты();
КонецПроцедуры

Процедура ПроверитьДаты()
	
	Если Объект.ДатаС>Объект.ДатаПо Тогда		
		Объект.ДатаПо =  Объект.ДатаС;			
	КонецЕсли;	
	
	///+++ АК bara 16430.03 29.10.2017	
	ПроверкаПросрочки();
	///--- АК bara 16430.03 29.10.2017
	
КонецПроцедуры


&НаСервере
Процедура ВыгрузитьВЗУПНаСервере()

		
	//ПланОбменаЗУП = ПланыОбмена.ОбменСЗУП.НайтиПоНаименованию("ЗУП");	
	//Рез =	ПланыОбмена.ВыбратьИзменения(ПланОбменаЗУП,1,Метаданные.Документы.СогласованиеОтпуска);
	//
	//Пока Рез.Следующий() Цикл
	//	ОбСсылка = Рез.Получить();
	////Выгрузить документ		
	//	ПланыОбмена.УдалитьРегистрациюИзменений(ПланОбменаЗУП,ОбСсылка);		
	//КонецЦикла;
	

	
	СтрокаПодключения = ПолныеПрава.ПолучитьСтрокуПодключения_Зуп();
	СтрокаПодключения = СтрЗаменить(СтрокаПодключения,"HRM","hrm_test");
	СтрокаПодключения = СтрЗаменить(СтрокаПодключения,"10.0.0.15:1641","srv-sql02:1641");
	v8COMОбъект = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Зуп() + ".COMConnector");
	Попытка
		v8 = v8COMОбъект.Connect(СтрокаПодключения);
	Исключение
		Сообщить("Не удалось подключиться к базе Зарплаты");
		Возврат;
	КонецПопытки;
		
	
	УИНСогласованияОтпуска = Объект.Ссылка.УникальныйИдентификатор();
	
	Запросv8 = v8.NewObject("Запрос");
	Запросv8.Текст = 
	"ВЫБРАТЬ
	|	ОтпускаОрганизаций.Ссылка
	|ИЗ
	|	Документ.ОтпускаОрганизаций КАК ОтпускаОрганизаций
	|ГДЕ
	|	ОтпускаОрганизаций.УИН_СогласованияОтпуска = &УИН_СогласованияОтпуска";
	
	Запросv8.УстановитьПараметр("УИН_СогласованияОтпуска", Строка(Объект.Ссылка.УникальныйИдентификатор()));
	РезЗапросаv8 = Запросv8.Выполнить();
	Выборкаv8 = РезЗапросаv8.Выбрать();
	Если Выборкаv8.Следующий() Тогда 
		ДокV8 = Выборкаv8.Ссылка.ПолучитьДокумент();
	Иначе 
		ДокV8 =V8.Документы.ОтпускаОрганизаций.СоздатьДокумент();
	КонецЕсли;	

	ДокV8.Организация=V8.Справочники.Организации.НайтиПоРеквизиту("ИНН",Объект.Организация.ИНН);
	ДокV8.Дата = V8.ЗначениеИзСтрокиВнутр("{""D"","+Формат(Объект.Дата,"ДФ=yyyyMMddhhmmss")+"}");
	ДокV8.КраткийСоставДокумента="";  
	ДокV8.РаботникиОрганизации.Очистить();	
	
	МД=V8.XMLTypeOf(V8.Справочники.СотрудникиОрганизаций.ПустаяСсылка());
	Сотрудникv8=V8.XMLValue(V8.FromXMLType(МД),Объект.Сотрудник.УинВЗупе);
	
	МД=V8.XMLTypeOf(V8.Справочники.ФизическиеЛица.ПустаяСсылка());
	СФизЛицоv8=V8.XMLValue(V8.FromXMLType(МД),Объект.ФизЛицо.УинВЗуп);


	НовСтр=ДокV8.РаботникиОрганизации.Добавить();                         
	НовСтр.Сотрудник = Сотрудникv8;
	НовСтр.ФизЛицо = СФизЛицоv8;
	НовСтр.ОсвобождатьСтавку=Ложь;   // Тип:Булево
	НовСтр.ДатаНачала=Объект.ДатаС;   // Тип:Дата
	НовСтр.ДатаОкончания=Объект.ДатаПо;   // Тип:Дата
	НовСтр.ПричинаОтсутствия=?(Объект.ВидОтпуска = Перечисления.ВидОтпуска.Отпуск,V8.Перечисления.ПричиныОтсутствияНаРаботеВОрганизации.ОтпускЕжегодный,V8.Перечисления.ПричиныОтсутствияНаРаботеВОрганизации.ОтпускБезСохраненияЗарплаты);   // Тип:Причины отсутствия на работе
	РезГодОтпуска = V8.ОстаткиОтпусков.РабочийГодПериодаОтпуска(НовСтр.Сотрудник,НовСтр.ДатаНачала,НовСтр.ДатаОкончания,ДокV8.Ссылка,V8.Перечисления.ПорядокРасчетаОтпуска.ПоКалендарнымДням,Ложь,V8.ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка());
	НовСтр.РабочийГодС= РезГодОтпуска.РабочийГодС;   // Тип:Дата
	НовСтр.РабочийГодПо=РезГодОтпуска.РабочийГодПо;   // Тип:Дата
	//
	НовСтр.КоличествоДней=Цел(1+(Объект.ДатаПо - Объект.ДатаС)/86400);   // Тип:Число

	Попытка
		ДокV8.Записать(V8.РежимЗаписиДокумента.Запись);
	Исключение
		Сообщить(""+ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры


&НаКлиенте
Процедура ВыгрузитьВЗУП(Команда)
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда 
		ВыгрузитьВЗУПНаСервере();
	КонецЕсли;
КонецПроцедуры
 
