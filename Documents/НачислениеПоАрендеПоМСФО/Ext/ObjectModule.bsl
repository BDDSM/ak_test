
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Движения.Финансовый.Записывать = Истина;
	Движения.Финансовый.Очистить();
	Движения.Финансовый.Записать();
	
	Движения.ИнформацияПоДоговоруАренды.Записывать = Истина;
	Движения.ИнформацияПоДоговоруАренды.Очистить();
	
	УправлениеФинансов = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_50");
	СтатьяДР1 = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("31020");
	СтатьяДР2 = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("31022");
	СтатьяДР3 = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("31021");
	СтатьяДР_Закрытие_032 = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("61027");
	СтатьяДР_Закрытие_905 = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("31023");
	СтатьяДР_РасчетыПоАренде = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("31010");
	
	ТЗ = ОбеспечительныеВзносы.Выгрузить();
	ТекКол = ТЗ.Количество();
	Пока ТекКол <> 0 Цикл
		стр = ТЗ[ТекКол - 1];
		Если не стр.Провести Тогда
			ТЗ.Удалить(стр);
		КонецЕсли;
		ТекКол = ТекКол - 1;
	КонецЦикла;
	ТЗ.Свернуть("Контрагент, ТорговаяТочка", "СуммаПриход, СуммаРасход");
	Для каждого стр из ТЗ Цикл
		Если стр.СуммаПриход - стр.СуммаРасход <> 0 Тогда
			НоваяПроводка = ЭтотОбъект.Движения.Финансовый.Добавить();
			НоваяПроводка.Период = Дата;
			НоваяПроводка.Содержание = "Отражение обеспечительного взноса";
			НоваяПроводка.Организация = Организация;
			
			НоваяПроводка.СчетДт = ПланыСчетов.Финансовый.АктивПоАрендеАренда;
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 1, стр.ТорговаяТочка);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 2, стр.Контрагент);
			
			НоваяПроводка.СчетКт = ПланыСчетов.Финансовый.ОбеспечительныйВзнос;
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 1, Организация);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 2, стр.Контрагент);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 3, стр.ТорговаяТочка);
			
			НоваяПроводка.СуммаМСФО = стр.СуммаПриход - стр.СуммаРасход;

			НоваяПроводка = ЭтотОбъект.Движения.Финансовый.Добавить();
			НоваяПроводка.Период = Дата;
			НоваяПроводка.Содержание = "Отражение обеспечительного взноса";
			НоваяПроводка.Организация = Организация;
			
			НоваяПроводка.СчетДт = ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 1, стр.ТорговаяТочка);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 2, СтатьяДР1);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 3, УправлениеФинансов);
			
			НоваяПроводка.СчетКт = ПланыСчетов.Финансовый.АмортизацияРасходыПоАренде;
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 1, стр.ТорговаяТочка);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 2, стр.Контрагент);
			
			НоваяПроводка.СуммаМСФО = Окр((стр.СуммаПриход - стр.СуммаРасход) / 60, 2, 1);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого стр из НачислениеАмортизации Цикл
		Если стр.Счет <> ПланыСчетов.Финансовый.АктивПоАрендеАренда и стр.Счет <> ПланыСчетов.Финансовый.АктивПоАрендеРемонтныеРаботы Тогда
			Сообщить("В табличной части ""Начисление амортизации"" в строке " + (НачислениеАмортизации.Индекс(стр) + 1) + "  указан неверный счет!");
			Продолжить;
		КонецЕсли;
		Если стр.Амортизация <> 0 Тогда
			Если стр.АктивПоАренде - стр.АмортизацияНаНачалоМесяца < стр.Амортизация Тогда
				Сообщить("В табличной части ""Начисление амортизации"" в строке " + (НачислениеАмортизации.Индекс(стр) + 1) + 
				"  сумма амортизации больше остаточной стоимости!");
				Продолжить;
			КонецЕсли;
			НоваяПроводка = ЭтотОбъект.Движения.Финансовый.Добавить();
			НоваяПроводка.Период = Дата;
			НоваяПроводка.Содержание = "Начисление амортизации актива по действующим договрам";
			НоваяПроводка.Организация = Организация;
			
			НоваяПроводка.СчетДт = ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 1, стр.ТорговаяТочка);
			Если стр.Счет = ПланыСчетов.Финансовый.АктивПоАрендеАренда Тогда
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 2, СтатьяДР1);
			Иначе
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 2, СтатьяДР2);
			КонецЕсли;
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 3, УправлениеФинансов);
			
			Если стр.Счет = ПланыСчетов.Финансовый.АктивПоАрендеАренда Тогда
				НоваяПроводка.СчетКт = ПланыСчетов.Финансовый.АмортизацияРасходыПоАренде;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 1, стр.ТорговаяТочка);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 2, стр.Контрагент);
			Иначе
				НоваяПроводка.СчетКт = ПланыСчетов.Финансовый.АмортизацияРемонтныеРаботы;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 1, стр.ТорговаяТочка);
			КонецЕсли;
			
			НоваяПроводка.СуммаМСФО = стр.Амортизация;
		КонецЕсли;
		Если стр.ЕжемПроцент <> 0 Тогда
			НоваяПроводка = ЭтотОбъект.Движения.Финансовый.Добавить();
			НоваяПроводка.Период = Дата;
			НоваяПроводка.Содержание = "Начисление амортизации актива по действующим договрам";
			НоваяПроводка.Организация = Организация;
			
			НоваяПроводка.СчетДт = ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 1, стр.ТорговаяТочка);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 2, СтатьяДР3);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 3, УправлениеФинансов);
			
			НоваяПроводка.СчетКт = ПланыСчетов.Финансовый.РасчетыОбязательстваПоАренде;
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 1, Организация);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 2, стр.Контрагент);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 3, стр.ТорговаяТочка);
			
			НоваяПроводка.СуммаМСФО = стр.ЕжемПроцент;
			
			Запись = Движения.ИнформацияПоДоговоруАренды.ДобавитьПриход();
			Запись.Период = Дата;
			Запись.Организация = Организация;
			Запись.Контрагент = стр.Контрагент;
			Запись.ТорговаяТочка = стр.ТорговаяТочка;
			
			Запись.ДДП = стр.ЕжемПроцент;
			
			Запись.Ставка = стр.Ставка;
			Запись.КодОперации = Перечисления.КодОперацийПоАрендеМСФО.ЕжемесячныйПроцент;
			Запись.ДатаНачалаВзаимоотношений = стр.ДатаНачалаВзаимоотношений;
			
			Запись = Движения.ИнформацияПоДоговоруАренды.ДобавитьРасход();
			Запись.Период = Дата;
			Запись.Организация = Организация;
			Запись.Контрагент = стр.Контрагент;
			Запись.ТорговаяТочка = стр.ТорговаяТочка;
			
			Запись.ДДП = стр.Ставка;
			
			Запись.Ставка = стр.Ставка;
			Запись.КодОперации = Перечисления.КодОперацийПоАрендеМСФО.Начисление;
			Запись.ДатаНачалаВзаимоотношений = стр.ДатаНачалаВзаимоотношений;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого стр из ИзмененияНачислений Цикл
		Если стр.НоваяСтавка <> 0 и стр.СтараяСтавка = 0 Тогда
			НоваяПроводка = ЭтотОбъект.Движения.Финансовый.Добавить();
			НоваяПроводка.Период = Дата;
			НоваяПроводка.Содержание = "Отражение начислений по новому договору";
			НоваяПроводка.Организация = Организация;
			
			НоваяПроводка.СчетДт = ПланыСчетов.Финансовый.АктивПоАрендеАренда;
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 1, стр.ТорговаяТочка);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 2, стр.Контрагент);
			
			НоваяПроводка.СчетКт = ПланыСчетов.Финансовый.РасчетыОбязательстваПоАренде;
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 1, Организация);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 2, стр.Контрагент);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 3, стр.ТорговаяТочка);
			
			НоваяПроводка.СуммаМСФО = стр.НовыйДДП;
			
			Запись = Движения.ИнформацияПоДоговоруАренды.ДобавитьПриход();
			Запись.Период = Дата;
			Запись.Организация = Организация;
			Запись.Контрагент = стр.Контрагент;
			Запись.ТорговаяТочка = стр.ТорговаяТочка;
			
			Запись.ДДП = стр.НовыйДДП;
			
			Запись.Ставка = стр.НоваяСтавка;
			Запись.КодОперации = Перечисления.КодОперацийПоАрендеМСФО.НовыйДоговор;
			Запись.ДатаНачалаВзаимоотношений = стр.ДатаНачалаВзаимоотношений;
		КонецЕсли;
		Если стр.НоваяСтавка <> стр.СтараяСтавка и стр.СтараяСтавка <> 0 Тогда
			НоваяПроводка = ЭтотОбъект.Движения.Финансовый.Добавить();
			НоваяПроводка.Период = Дата;
			НоваяПроводка.Содержание = "Отражение изменений начислений";
			НоваяПроводка.Организация = Организация;
			
			НоваяПроводка.СчетДт = ПланыСчетов.Финансовый.АктивПоАрендеАренда;
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 1, стр.ТорговаяТочка);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 2, стр.Контрагент);
			
			НоваяПроводка.СчетКт = ПланыСчетов.Финансовый.РасчетыОбязательстваПоАренде;
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 1, Организация);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 2, стр.Контрагент);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 3, стр.ТорговаяТочка);
			
			НоваяПроводка.СуммаМСФО = стр.НовыйДДП - стр.ОстатокДДП;
			
			Запись = Движения.ИнформацияПоДоговоруАренды.ДобавитьПриход();
			Запись.Период = Дата;
			Запись.Организация = Организация;
			Запись.Контрагент = стр.Контрагент;
			Запись.ТорговаяТочка = стр.ТорговаяТочка;
			
			Запись.ДДП = стр.НовыйДДП - стр.ОстатокДДП;
			
			Запись.Ставка = стр.НоваяСтавка;
			Запись.КодОперации = Перечисления.КодОперацийПоАрендеМСФО.ИзменениеЕжемесячногоПлатежа;
			Запись.ДатаНачалаВзаимоотношений = стр.ДатаНачалаВзаимоотношений;
		КонецЕсли;
		Если стр.Амортизация <> 0 Тогда
			Если стр.АктивПоАренде - стр.АмортизацияНаНачалоМесяца < стр.Амортизация Тогда
				Сообщить("В табличной части ""Начисление амортизации"" в строке " + (НачислениеАмортизации.Индекс(стр) + 1) + 
				"  сумма амортизации больше остаточной стоимости!");
				Продолжить;
			КонецЕсли;
			НоваяПроводка = ЭтотОбъект.Движения.Финансовый.Добавить();
			НоваяПроводка.Период = Дата;
			НоваяПроводка.Содержание = "Начисление амортизации актива по действующим договрам";
			НоваяПроводка.Организация = Организация;
			
			НоваяПроводка.СчетДт = ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 1, стр.ТорговаяТочка);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 2, СтатьяДР1);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 3, УправлениеФинансов);
			
			НоваяПроводка.СчетКт = ПланыСчетов.Финансовый.АмортизацияРасходыПоАренде;
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 1, стр.ТорговаяТочка);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 2, стр.Контрагент);
			
			НоваяПроводка.СуммаМСФО = стр.Амортизация;
		КонецЕсли;
		Если стр.ЕжемПроцент <> 0 Тогда
			НоваяПроводка = ЭтотОбъект.Движения.Финансовый.Добавить();
			НоваяПроводка.Период = Дата;
			НоваяПроводка.Содержание = "Начисление амортизации актива по действующим договрам";
			НоваяПроводка.Организация = Организация;
			
			НоваяПроводка.СчетДт = ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 1, стр.ТорговаяТочка);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 2, СтатьяДР3);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 3, УправлениеФинансов);
			
			НоваяПроводка.СчетКт = ПланыСчетов.Финансовый.РасчетыОбязательстваПоАренде;
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 1, Организация);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 2, стр.Контрагент);
			БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 3, стр.ТорговаяТочка);
			
			НоваяПроводка.СуммаМСФО = стр.ЕжемПроцент;
			
			Запись = Движения.ИнформацияПоДоговоруАренды.ДобавитьПриход();
			Запись.Период = Дата;
			Запись.Организация = Организация;
			Запись.Контрагент = стр.Контрагент;
			Запись.ТорговаяТочка = стр.ТорговаяТочка;
			
			Запись.ДДП = стр.ЕжемПроцент;
			
			Запись.Ставка = стр.НоваяСтавка;
			Запись.КодОперации = Перечисления.КодОперацийПоАрендеМСФО.ЕжемесячныйПроцент;
			Запись.ДатаНачалаВзаимоотношений = стр.ДатаНачалаВзаимоотношений;
			
			Запись = Движения.ИнформацияПоДоговоруАренды.ДобавитьРасход();
			Запись.Период = Дата;
			Запись.Организация = Организация;
			Запись.Контрагент = стр.Контрагент;
			Запись.ТорговаяТочка = стр.ТорговаяТочка;
			
			Запись.ДДП = стр.НоваяСтавка;
			
			Запись.Ставка = стр.НоваяСтавка;
			Запись.КодОперации = Перечисления.КодОперацийПоАрендеМСФО.Начисление;
			Запись.ДатаНачалаВзаимоотношений = стр.ДатаНачалаВзаимоотношений;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого стр из ЗакрытыеТорговыеТочкиИДоговора Цикл
		Если не стр.Закрыть Тогда
			Продолжить;
		КонецЕсли;
		
		Если стр.Счет = ПланыСчетов.Финансовый.АктивПоАрендеАренда Тогда
			Выборка = НачислениеАмортизации.НайтиСтроки(Новый Структура("Контрагент, ТорговаяТочка", стр.Контрагент, стр.ТорговаяТочка));
			АмортизацияЭтимДоком = 0;
			ЕжемПроцент = 0;
			Для каждого стр1 из Выборка Цикл
				АмортизацияЭтимДоком = АмортизацияЭтимДоком + стр1.Амортизация;
				ЕжемПроцент = ЕжемПроцент + стр1.ЕжемПроцент;
			КонецЦикла;
			
			Если стр.СуммаАмортизации + АмортизацияЭтимДоком <> 0 Тогда
				НоваяПроводка = ЭтотОбъект.Движения.Финансовый.Добавить();
				НоваяПроводка.Период = Дата;
				НоваяПроводка.Содержание = "Закрытие договора";
				НоваяПроводка.Организация = Организация;
				
				НоваяПроводка.СчетДт = ПланыСчетов.Финансовый.АмортизацияРасходыПоАренде;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 1, стр.ТорговаяТочка);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 2, стр.Контрагент);
				
				НоваяПроводка.СчетКт = ПланыСчетов.Финансовый.АктивПоАрендеАренда;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 1, стр.ТорговаяТочка);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 2, стр.Контрагент);
				
				НоваяПроводка.СуммаМСФО = стр.СуммаАмортизации + АмортизацияЭтимДоком;
			КонецЕсли;
			Если стр.СуммаАктива - стр.СуммаАмортизации - АмортизацияЭтимДоком <> 0 Тогда
				НоваяПроводка = ЭтотОбъект.Движения.Финансовый.Добавить();
				НоваяПроводка.Период = Дата;
				НоваяПроводка.Содержание = "Закрытие договора";
				НоваяПроводка.Организация = Организация;
				
				НоваяПроводка.СчетДт = ПланыСчетов.Финансовый.РасчетыОбязательстваПоАренде;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 1, Организация);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 2, стр.Контрагент);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 3, стр.ТорговаяТочка);
				
				НоваяПроводка.СчетКт = ПланыСчетов.Финансовый.АктивПоАрендеАренда;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 1, стр.ТорговаяТочка);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 2, стр.Контрагент);
				
				НоваяПроводка.СуммаМСФО = стр.СуммаАктива - стр.СуммаАмортизации - АмортизацияЭтимДоком;
			КонецЕсли;
			
			ТекСумма = стр.СуммаАктива - стр.СуммаАмортизации - АмортизацияЭтимДоком - ЕжемПроцент + стр.ОбязательствоПоАренде;
			Если ТекСумма < 0 Тогда
				НоваяПроводка = ЭтотОбъект.Движения.Финансовый.Добавить();
				НоваяПроводка.Период = Дата;
				НоваяПроводка.Содержание = "Закрытие договора";
				НоваяПроводка.Организация = Организация;
				
				НоваяПроводка.СчетДт = ПланыСчетов.Финансовый.РасчетыОбязательстваПоАренде;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 1, Организация);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 2, стр.Контрагент);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 3, стр.ТорговаяТочка);
				
				НоваяПроводка.СчетКт = ПланыСчетов.Финансовый.ВыручкаПрочая;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 1, стр.ТорговаяТочка);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 2, СтатьяДР_Закрытие_905);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 3, УправлениеФинансов);
				
				НоваяПроводка.СуммаМСФО = -ТекСумма;
			КонецЕсли;
			Если ТекСумма > 0 Тогда
				НоваяПроводка = ЭтотОбъект.Движения.Финансовый.Добавить();
				НоваяПроводка.Период = Дата;
				НоваяПроводка.Содержание = "Закрытие договора";
				НоваяПроводка.Организация = Организация;
				
				НоваяПроводка.СчетДт = ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 1, стр.ТорговаяТочка);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 2, СтатьяДР_Закрытие_905);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 3, УправлениеФинансов);
				
				НоваяПроводка.СчетКт = ПланыСчетов.Финансовый.РасчетыОбязательстваПоАренде;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 1, Организация);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 2, стр.Контрагент);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 3, стр.ТорговаяТочка);
				
				НоваяПроводка.СуммаМСФО = ТекСумма;
			КонецЕсли;
			Если стр.ДДПОстаток <> 0 Тогда
				Запись = Движения.ИнформацияПоДоговоруАренды.ДобавитьРасход();
				Запись.Период = Дата;
				Запись.Организация = Организация;
				Запись.Контрагент = стр.Контрагент;
				Запись.ТорговаяТочка = стр.ТорговаяТочка;
				
				Запись.ДДП = стр.ДДПОстаток + ЕжемПроцент - стр.Ставка;
				
				Запись.Ставка = стр.Ставка;
				Запись.КодОперации = Перечисления.КодОперацийПоАрендеМСФО.Закрыто;
				Запись.ДатаНачалаВзаимоотношений = стр.ДатаНачалаВзаимоотношений;
			КонецЕсли;
		КонецЕсли;
		Если стр.Счет = ПланыСчетов.Финансовый.АктивПоАрендеРемонтныеРаботы Тогда
			Выборка = НачислениеАмортизации.НайтиСтроки(Новый Структура("Контрагент, ТорговаяТочка", стр.Контрагент, стр.ТорговаяТочка));
			АмортизацияЭтимДоком = 0;
			Для каждого стр1 из Выборка Цикл
				АмортизацияЭтимДоком = АмортизацияЭтимДоком + стр1.Амортизация;
			КонецЦикла;
			
			Если стр.СуммаАмортизации + АмортизацияЭтимДоком <> 0 Тогда
				НоваяПроводка = ЭтотОбъект.Движения.Финансовый.Добавить();
				НоваяПроводка.Период = Дата;
				НоваяПроводка.Содержание = "Закрытие торговой точки";
				НоваяПроводка.Организация = Организация;
				
				НоваяПроводка.СчетДт = ПланыСчетов.Финансовый.АмортизацияРемонтныеРаботы;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 1, стр.ТорговаяТочка);
				
				НоваяПроводка.СчетКт = ПланыСчетов.Финансовый.АктивПоАрендеРемонтныеРаботы;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 1, стр.ТорговаяТочка);
				
				НоваяПроводка.СуммаМСФО = стр.СуммаАмортизации + АмортизацияЭтимДоком;
			КонецЕсли;
			Если стр.СуммаАктива - стр.СуммаАмортизации - АмортизацияЭтимДоком <> 0 Тогда
				НоваяПроводка = ЭтотОбъект.Движения.Финансовый.Добавить();
				НоваяПроводка.Период = Дата;
				НоваяПроводка.Содержание = "Закрытие торговой точки";
				НоваяПроводка.Организация = Организация;
				
				НоваяПроводка.СчетДт = ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 1, стр.ТорговаяТочка);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 2, СтатьяДР_Закрытие_032);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 3, УправлениеФинансов);
				
				НоваяПроводка.СчетКт = ПланыСчетов.Финансовый.АктивПоАрендеРемонтныеРаботы;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 1, стр.ТорговаяТочка);
				
				НоваяПроводка.СуммаМСФО = стр.СуммаАктива - стр.СуммаАмортизации - АмортизацияЭтимДоком;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата1", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("Дата2", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Дата3", КонецМесяца(Дата) + 1);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.Субконто2 КАК Контрагент,
	               |	ВложенныйЗапрос.Субконто3 КАК ТорговаяТочка,
	               |	ВложенныйЗапрос.СуммаМСФООстаток КАК Сумма
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ФинансовыйОстатки.Субконто2 КАК Субконто2,
	               |		ФинансовыйОстатки.Субконто3 КАК Субконто3,
	               |		СУММА(ФинансовыйОстатки.СуммаОстаток) КАК СуммаОстаток,
	               |		СУММА(ФинансовыйОстатки.СуммаМСФООстаток) КАК СуммаМСФООстаток
	               |	ИЗ
	               |		РегистрБухгалтерии.Финансовый.Остатки(
	               |				&Дата3,
	               |				Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РасчетыПоАренде),
	               |				,
	               |				Организация = &Организация
	               |					И Субконто1 = &Организация) КАК ФинансовыйОстатки
	               |	ГДЕ
	               |		ФинансовыйОстатки.Субконто3.ДатаЗакрытия >= &Дата1
	               |		И ФинансовыйОстатки.Субконто3.ДатаЗакрытия <= &Дата2
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ФинансовыйОстатки.Субконто2,
	               |		ФинансовыйОстатки.Субконто3) КАК ВложенныйЗапрос
	               |ГДЕ
	               |	ВложенныйЗапрос.СуммаОстаток = 0
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВложенныйЗапрос.Субконто2.Наименование";
	ТЗ = Запрос.Выполнить().Выгрузить();
	Для каждого стр из ТЗ Цикл
		НоваяПроводка = ЭтотОбъект.Движения.Финансовый.Добавить();
		НоваяПроводка.Период = Дата;
		НоваяПроводка.Содержание = "Списание расчетов по аренде";
		НоваяПроводка.Организация = Организация;
		
		НоваяПроводка.СчетДт = ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 1, стр.ТорговаяТочка);
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 2, СтатьяДР_РасчетыПоАренде);
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, 3, УправлениеФинансов);
		
		НоваяПроводка.СчетКт = ПланыСчетов.Финансовый.РасчетыПоАренде;
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 1, Организация);
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 2, стр.Контрагент);
		БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, 3, стр.ТорговаяТочка);
		
		НоваяПроводка.СуммаМСФО = стр.Сумма;
	КонецЦикла;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Дата = КонецМесяца(Дата);
КонецПроцедуры




















