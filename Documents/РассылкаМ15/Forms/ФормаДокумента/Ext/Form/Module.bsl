
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 08.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Рассылка М-15 при отгрузке упаковки");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		Объект.ОтветственныйБухгалтер = Объект.Ответственный;
		//Объект.Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчаниюПользователя(Объект.Ответственный,ПланыВидовХарактеристик.НастройкиПользователей.ОсновнаяОрганизация);
		
	КонецЕсли;
	
	Период.ДатаНачала = Объект.ДатаНачала;
	Период.ДатаОкончания = Объект.ДатаОкончания;
	ОбновитьСписокКонтрагентов();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере(ОтборКонтрагент = Неопределено)
	
	//НеОбработанные = Объект.СписокРассылки.НайтиСтроки(Новый Структура("Отправлено",Дата(1,1,1)));
	//Если НеОбработанные.Количество()<Объект.СписокРассылки.Количество() Тогда
	//	Сообщить("Документ не может быть перезаполнен, есть обработанные документы");
	//	Возврат
	//КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РассылкаМ15СписокРассылки.Документ
	|ПОМЕСТИТЬ Рассылки
	|ИЗ
	|	Документ.РассылкаМ15.СписокРассылки КАК РассылкаМ15СписокРассылки
	|ГДЕ
	|	РассылкаМ15СписокРассылки.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И РассылкаМ15СписокРассылки.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И РассылкаМ15СписокРассылки.Ссылка <> &Ссылка
	|	И &ТолькоНеОтправленные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АК_ЗаявкиНаПроизводствоПерсональнойУпаковкиОбороты.Регистратор КАК Документ,
	|	АК_ЗаявкиНаПроизводствоПерсональнойУпаковкиОбороты.Регистратор.Получатель КАК Контрагент
	|ПОМЕСТИТЬ Документы
	|ИЗ
	|	РегистрНакопления.АК_ЗаявкиНаПроизводствоПерсональнойУпаковки.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, ) КАК АК_ЗаявкиНаПроизводствоПерсональнойУпаковкиОбороты
	|ГДЕ
	|	АК_ЗаявкиНаПроизводствоПерсональнойУпаковкиОбороты.Регистратор ССЫЛКА Документ.РасходныйОрдерСклад
	|	И АК_ЗаявкиНаПроизводствоПерсональнойУпаковкиОбороты.КоличествоЗаказаноРасход > 0
	//+++АК ILIK 2018.11.16 ИП-00020422
	|	И ВЫБОР
	|			КОГДА &КонтрагентНеЗаполнен
	|				ТОГДА &Бухгалтер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|						ИЛИ АК_ЗаявкиНаПроизводствоПерсональнойУпаковкиОбороты.Регистратор.Получатель.ОсновнойБухгалтерПокупателя = &Бухгалтер
	|						ИЛИ АК_ЗаявкиНаПроизводствоПерсональнойУпаковкиОбороты.Регистратор.Получатель.ОсновнойБухгалтерПоУпаковке = &Бухгалтер
	|			ИНАЧЕ АК_ЗаявкиНаПроизводствоПерсональнойУпаковкиОбороты.Регистратор.Получатель = &Контрагент
	|		КОНЕЦ
	//---АК ILIK
	|	И НЕ АК_ЗаявкиНаПроизводствоПерсональнойУпаковкиОбороты.Регистратор В
	|				(ВЫБРАТЬ
	|					Т.Документ
	|				ИЗ
	|					Рассылки КАК Т)
	//+++ AK suvv 2018.10.30 ИП-00020030.01
	|	И (АК_ЗаявкиНаПроизводствоПерсональнойУпаковкиОбороты.Регистратор.Организация = &Организация
	|			ИЛИ &ОрганизацияНеЗаполнена)
	//--- AK suvv
	|
	|СГРУППИРОВАТЬ ПО
	|	АК_ЗаявкиНаПроизводствоПерсональнойУпаковкиОбороты.Регистратор,
	|	АК_ЗаявкиНаПроизводствоПерсональнойУпаковкиОбороты.Регистратор.Получатель
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходныйОрдерСкладТовары.Ссылка,
	|	РасходныйОрдерСкладТовары.Ссылка.Получатель
	|ИЗ
	|	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
	|ГДЕ
	|	РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
	|	И РасходныйОрдерСкладТовары.Ссылка.Дата >= &ДатаНачала
	|	И РасходныйОрдерСкладТовары.Ссылка.Дата <= &ДатаОкончания
	|	И НЕ РасходныйОрдерСкладТовары.ЗаявкаНаПроизводствоПерсональнойУпаковки ЕСТЬ NULL
	|	И НЕ РасходныйОрдерСкладТовары.ЗаявкаНаПроизводствоПерсональнойУпаковки = ЗНАЧЕНИЕ(Документ.ЗаявкаНаПечатьЭтикетки.Пустаяссылка)
	//+++АК ILIK 2018.11.15 ИП-00020422
	|	И ВЫБОР
	|			КОГДА &КонтрагентНеЗаполнен
	|				ТОГДА &Бухгалтер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|						ИЛИ РасходныйОрдерСкладТовары.Ссылка.Получатель.ОсновнойБухгалтерПокупателя = &Бухгалтер
	|						ИЛИ РасходныйОрдерСкладТовары.Ссылка.Получатель.ОсновнойБухгалтерПоУпаковке = &Бухгалтер
	|			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Получатель = &Контрагент
	|		КОНЕЦ
	//---АК ILIK
	//+++ AK suvv 2018.10.30 ИП-00020030.01
	|	И (РасходныйОрдерСкладТовары.Ссылка.Организация = &Организация
	|			ИЛИ &ОрганизацияНеЗаполнена)
	//--- AK suvv
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	Документы.Контрагент,
	|	Документы.Контрагент.ОсновнойМенеджерПокупателя КАК Менеджер,
	|	ВЫБОР
	|		КОГДА Документы.Контрагент.ОсновнойБухгалтерПоУпаковке = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|			ТОГДА Документы.Контрагент.ОсновнойБухгалтерПокупателя
	|		ИНАЧЕ Документы.Контрагент.ОсновнойБухгалтерПоУпаковке
	|	КОНЕЦ КАК Бухгалтер
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	Документы КАК Документы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Данные.Контрагент,
	|	Данные.Менеджер,
	|	Данные.Бухгалтер
	|ПОМЕСТИТЬ втКонтрагенты
	|ИЗ
	|	Данные КАК Данные
	|
	|СГРУППИРОВАТЬ ПО
	|	Данные.Контрагент,
	|	Данные.Менеджер,
	|	Данные.Бухгалтер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втКонтрагенты.Контрагент,
	|	втКонтрагенты.Менеджер КАК ОсновнойМенеджер,
	|	втКонтрагенты.Бухгалтер КАК ОсновнойБухгалтер,
	|	ЕСТЬNULL(КонтактнаяИнформация.Представление, """") КАК АдресОтправки,
	|	ЕСТЬNULL(КонтактнаяИнформация1.Представление, """") КАК ПочтаМенеджера,
	|	ЕСТЬNULL(КонтактнаяИнформация2.Представление, """") КАК ПочтаБухгалтера,
	|	ЕСТЬNULL(КонтактнаяИнформация3.Представление, """") КАК ТелефоныБухгалтера,
	|	ЕСТЬNULL(КонтактнаяИнформация4.Представление, """") КАК ТелефоныМенеджера
	|ИЗ
	|	втКонтрагенты КАК втКонтрагенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО втКонтрагенты.Контрагент = КонтактнаяИнформация.Объект
	|			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыКонтрагентаДляОбменаДокументами))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация1
	|		ПО втКонтрагенты.Менеджер = КонтактнаяИнформация1.Объект
	|			И (КонтактнаяИнформация1.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|			И (КонтактнаяИнформация1.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.СлужебныйАдресЭлектроннойПочтыПользователя))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация2
	|		ПО втКонтрагенты.Бухгалтер = КонтактнаяИнформация2.Объект
	|			И (КонтактнаяИнформация2.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|			И (КонтактнаяИнформация2.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.СлужебныйАдресЭлектроннойПочтыПользователя))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация3
	|		ПО втКонтрагенты.Бухгалтер = КонтактнаяИнформация3.Объект
	|			И (КонтактнаяИнформация3.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|			И (КонтактнаяИнформация3.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСлужебный))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация4
	|		ПО втКонтрагенты.Менеджер = КонтактнаяИнформация4.Объект
	|			И (КонтактнаяИнформация4.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	|			И (КонтактнаяИнформация4.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСлужебный))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Данные.Документ,
	|	Данные.Контрагент,
	|	Отправленные.Отправлено
	|ИЗ
	|	Данные КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			РассылкаМ15СписокРассылки.Документ КАК Документ,
	|			МАКСИМУМ(РассылкаМ15СписокРассылки.Отправлено) КАК Отправлено
	|		ИЗ
	|			Документ.РассылкаМ15.СписокРассылки КАК РассылкаМ15СписокРассылки
	|		
	|		СГРУППИРОВАТЬ ПО
	|			РассылкаМ15СписокРассылки.Документ) КАК Отправленные
	|		ПО Данные.Документ = Отправленные.Документ";
	
	Запрос.УстановитьПараметр("ДатаНачала",Объект.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",КонецДня(Объект.ДатаОкончания));
	Запрос.УстановитьПараметр("Бухгалтер",Объект.ОтветственныйБухгалтер);
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Запрос.УстановитьПараметр("ТолькоНеОтправленные",Ложь);
	Запрос.УстановитьПараметр("Контрагент",ОтборКонтрагент);
	Запрос.УстановитьПараметр("КонтрагентНеЗаполнен",НЕ ЗначениеЗаполнено(ОтборКонтрагент));
	//+++ AK suvv 2018.10.30 ИП-00020030.01
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ОрганизацияНеЗаполнена", НЕ ЗначениеЗаполнено(Объект.Организация));
	//--- AK suvv
	//Запрос.УстановитьПараметр("Организация",Объект.Организация);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет(); 
	
	Контрагенты = РезультатЗапроса[4].Выгрузить();
	ДокументыКонтрагента =   РезультатЗапроса[5].Выгрузить();
	
	Объект.СписокРассылки.Загрузить(ДокументыКонтрагента);
	Объект.Контрагенты.Загрузить(Контрагенты);	
	
	ПересчитатьКоличествоДокументов();
	
КонецПроцедуры

Процедура ОбновитьСписокКонтрагентов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтрагентыТекущие.Контрагент
		|ПОМЕСТИТЬ втТекущиеКнтрагенты
		|ИЗ
		|	&КонтрагентыТекущие КАК КонтрагентыТекущие
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РасходныйОрдерСклад.Получатель КАК Контрагент
		|ПОМЕСТИТЬ втКонтрагентыОтбор
		|ИЗ
		|	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
		|ГДЕ
		|	РасходныйОрдерСклад.Ссылка В(&Документы)
		|	И НЕ РасходныйОрдерСклад.Получатель ЕСТЬ NULL
		|	И РасходныйОрдерСклад.Получатель <> ЗНАЧЕНИЕ(Справочник.Контрагенты.Пустаяссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втКонтрагентыОтбор.Контрагент,
		|	втКонтрагентыОтбор.Контрагент.ОсновнойМенеджерПокупателя КАК Менеджер,
		|	ВЫБОР
		|		КОГДА втКонтрагентыОтбор.Контрагент.ОсновнойБухгалтерПоУпаковке = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|			ТОГДА втКонтрагентыОтбор.Контрагент.ОсновнойБухгалтерПокупателя
		|		ИНАЧЕ втКонтрагентыОтбор.Контрагент.ОсновнойБухгалтерПоУпаковке
		|	КОНЕЦ КАК Бухгалтер
		|ПОМЕСТИТЬ втКонтрагенты
		|ИЗ
		|	втКонтрагентыОтбор КАК втКонтрагентыОтбор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втКонтрагенты.Контрагент,
		|	втКонтрагенты.Менеджер КАК ОсновнойМенеджер,
		|	втКонтрагенты.Бухгалтер КАК ОсновнойБухгалтер,
		|	ЕСТЬNULL(КонтактнаяИнформация.Представление, """") КАК АдресОтправки,
		|	ЕСТЬNULL(КонтактнаяИнформация1.Представление, """") КАК ПочтаМенеджера,
		|	ЕСТЬNULL(КонтактнаяИнформация2.Представление, """") КАК ПочтаБухгалтера,
		|	ЕСТЬNULL(КонтактнаяИнформация3.Представление, """") КАК ТелефоныБухгалтера,
		|	ЕСТЬNULL(КонтактнаяИнформация4.Представление, """") КАК ТелефоныМенеджера
		|ПОМЕСТИТЬ втНеобходимыеКонтрагент
		|ИЗ
		|	втКонтрагенты КАК втКонтрагенты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ПО втКонтрагенты.Контрагент = КонтактнаяИнформация.Объект
		|			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
		|			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыКонтрагентаДляОбменаДокументами))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация1
		|		ПО втКонтрагенты.Менеджер = КонтактнаяИнформация1.Объект
		|			И (КонтактнаяИнформация1.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
		|			И (КонтактнаяИнформация1.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.СлужебныйАдресЭлектроннойПочтыПользователя))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация2
		|		ПО втКонтрагенты.Бухгалтер = КонтактнаяИнформация2.Объект
		|			И (КонтактнаяИнформация2.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
		|			И (КонтактнаяИнформация2.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.СлужебныйАдресЭлектроннойПочтыПользователя))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация3
		|		ПО втКонтрагенты.Бухгалтер = КонтактнаяИнформация3.Объект
		|			И (КонтактнаяИнформация3.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
		|			И (КонтактнаяИнформация3.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСлужебный))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация4
		|		ПО втКонтрагенты.Менеджер = КонтактнаяИнформация4.Объект
		|			И (КонтактнаяИнформация4.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
		|			И (КонтактнаяИнформация4.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСлужебный))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(втНеобходимыеКонтрагент.Контрагент, втТекущиеКнтрагенты.Контрагент) КАК Контрагент,
		|	втНеобходимыеКонтрагент.ОсновнойМенеджер,
		|	втНеобходимыеКонтрагент.ОсновнойБухгалтер,
		|	втНеобходимыеКонтрагент.АдресОтправки,
		|	втНеобходимыеКонтрагент.ПочтаМенеджера,
		|	втНеобходимыеКонтрагент.ПочтаБухгалтера,
		|	втНеобходимыеКонтрагент.ТелефоныБухгалтера,
		|	втНеобходимыеКонтрагент.ТелефоныМенеджера,
		|	ВЫБОР
		|		КОГДА втНеобходимыеКонтрагент.Контрагент ЕСТЬ NULL
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Удадить,
		|	ВЫБОР
		|		КОГДА втТекущиеКнтрагенты.Контрагент ЕСТЬ NULL
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Добавить
		|ПОМЕСТИТЬ втРезультат
		|ИЗ
		|	втНеобходимыеКонтрагент КАК втНеобходимыеКонтрагент
		|		ПОЛНОЕ СОЕДИНЕНИЕ втТекущиеКнтрагенты КАК втТекущиеКнтрагенты
		|		ПО втНеобходимыеКонтрагент.Контрагент = втТекущиеКнтрагенты.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втРезультат.Контрагент
		|ИЗ
		|	втРезультат КАК втРезультат
		|ГДЕ
		|	втРезультат.Удадить = ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втРезультат.ОсновнойМенеджер,
		|	втРезультат.ОсновнойБухгалтер,
		|	втРезультат.АдресОтправки,
		|	втРезультат.ПочтаМенеджера,
		|	втРезультат.ПочтаБухгалтера,
		|	втРезультат.ТелефоныБухгалтера,
		|	втРезультат.ТелефоныМенеджера,
		|	втРезультат.Удадить,
		|	втРезультат.Добавить,
		|	втРезультат.Контрагент
		|ИЗ
		|	втРезультат КАК втРезультат
		|ГДЕ
		|	втРезультат.Добавить = ИСТИНА";
	
	Запрос.УстановитьПараметр("Документы",Объект.СписокРассылки.Выгрузить(,"Документ").ВыгрузитьКолонку("Документ"));
	Запрос.УстановитьПараметр("КонтрагентыТекущие",Объект.Контрагенты.Выгрузить(,"Контрагент"));
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаУдалить = РезультатЗапроса[5].Выгрузить();
	ТаблицаДобавить = РезультатЗапроса[6].Выгрузить();
	
	Для каждого Строка из ТаблицаДобавить Цикл
		
		НовыйКонтрагент = Объект.Контрагенты.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйКонтрагент,Строка)
		
	КонецЦикла;	
	
	Для каждого Строка из ТаблицаУдалить Цикл
		
		Отбор = Новый Структура;
		Отбор.Вставить("Контрагент",Строка.Контрагент);
		СтрокиУдалить = Объект.Контрагенты.НайтиСтроки(Отбор);
		для каждого строка из СтрокиУдалить Цикл
			Объект.Контрагенты.Удалить(строка);				
		КонецЦикла;	
		
	КонецЦикла;	
	
	ПересчитатьКоличествоДокументов();
	
КонецПроцедуры	

Процедура ПересчитатьКоличествоДокументов()
	
	Для каждого СтрокаКонтрагент из Объект.Контрагенты Цикл
		Отбор = новый Структура;
		Отбор.Вставить("Контрагент",СтрокаКонтрагент.Контрагент);
		
		Строки = Объект.СписокРассылки.НайтиСтроки(Отбор);
		Получено = 0;
		Для каждого найденнаяСтрока из Строки Цикл
			Если найденнаяСтрока.ОтветПолучен Тогда
				Получено = Получено + 1;	
			КонецЕсли;	
			
		КонецЦикла;	
	    Количество = Строки.Количество();
		СтрокаКонтрагент.Документов = Количество;
		СтрокаКонтрагент.Получено = Получено;
		СтрокаКонтрагент.Остаток = Количество-Получено;
	КонецЦикла;	
	
	Объект.ВсегоДокументов = Объект.Контрагенты.Итог("Документов");
	Объект.Получено =        Объект.Контрагенты.Итог("Получено");

	
КонецПроцедуры	

&НаКлиенте
Процедура Заполнить(Команда)
	Если Объект.ДатаНачала = Дата(1,1,1) Тогда
		Сообщить("Не заполнена дата начала периода");
		Возврат
	КонецЕсли;
	Если Объект.ДатаОкончания = Дата(1,1,1) Тогда
		Сообщить("Не заполнена дата окончания периода");
		Возврат
	КонецЕсли;
	//Если Не ЗначениеЗаполнено(Объект.Организация)Тогда
	//	Сообщить("Не заполнена организация")
	//КонецЕсли;
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	Объект.ДатаНачала = Период.ДатаНачала;
	Объект.ДатаОкончания = Период.ДатаОкончания;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Команда)
	// Вставить содержимое обработчика.
	УстановитьСнятьПометки(Истина)
КонецПроцедуры

&НаСервере
Процедура Послать(АдресПолучателя,ТекстПисьма,УЗ,Тема,Пользователь,МассивФайлов)
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
	СпАдресов=Новый СписокЗначений;
	МассивАдресов=Справочники.Контрагенты.РазложитьСтрокуВМассивПодстрок(АдресПолучателя,";");	
	Для каждого Эл Из МассивАдресов Цикл
		Если ЗначениеЗаполнено(Эл) Тогда
			СпАдресов.Добавить(Сокрлп(Эл));
		КонецЕсли; 
	КонецЦикла; 
	Почта = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Письмо = Новый ИнтернетПочтовоеСообщение;
	
	Почта.Подключиться(Профиль);
	Письмо.ИмяОтправителя = ""+УчетнаяЗапись+"";
	Письмо.ИмяОтправителя  = ""+СокрЛП(УчетнаяЗапись)+"";
	Письмо.Отправитель     = ""+СокрЛП(УчетнаяЗапись)+"";
	
	Письмо.Тексты.Добавить(ТекстПисьма,ТипТекстаПочтовогоСообщения.HTML);
	
	Для каждого АдресФайла из МассивФайлов Цикл
		Письмо.Вложения.Добавить(АдресФайла);
	КонецЦикла;	
		
	Письмо.Тема=Тема;
	
	Для каждого Адрес Из СпАдресов Цикл
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес           = Адрес.Значение;
	КонецЦикла;	
	
	Почта.Послать(Письмо);
	Сообщить("Отправлено письмо на "+АдресПолучателя);
	Почта.Отключиться();
	
КонецПроцедуры

&НаСервере
Процедура ОтправитьПисьмаНаСервере()
	
	МассивСообщений = Новый Массив;
	

	КаталогСохранения = Константы.КаталогХраненияФайловКартинок.Получить();
	КаталогСохранения = КаталогСохранения + ?(Прав(КаталогСохранения, 1) <> "\", "\", "") + "Справочник хранилище доп информации\";
	
	СформированныеФайлы = Новый Соответствие;
	
	
	Для каждого СтрокаКонтрагент из Объект.Контрагенты Цикл
		
		Если Не	СтрокаКонтрагент.Пометка Тогда
			Продолжить;	
		КонецЕсли;
		
		Отказ = Ложь;
				  
		Если Не ЗначениеЗаполнено(СтрокаКонтрагент.АдресОтправки) Тогда
			МассивСообщений.Добавить("У Контрагента "+СтрокаКонтрагент.Контрагент + " не заполнен email адрес!");
			Отказ = Истина;
		КонецЕсли;
		
		Если Отказ Тогда
			Продолжить;
		КонецЕсли;	

		МассивВложенныхФайлов = Новый Массив;
		
		Отбор = Новый Структура;
		Отбор.Вставить("Контрагент",СтрокаКонтрагент.Контрагент);	
		ДокументыКонтрагента = Объект.СписокРассылки.НайтиСтроки(Отбор);
		
		ДанныеФизЛицаМенеджера = ОбщегоНазначения.ПолучитьМассивФИО(СтрокаКонтрагент.ОсновнойМенеджер.ФизЛицо);
		ДанныеФизЛицаБухгалтера = ОбщегоНазначения.ПолучитьМассивФИО(СтрокаКонтрагент.ОсновнойБухгалтер.ФизЛицо);
		
		ФамилияИмяМенеджера = ДанныеФизЛицаМенеджера[0] + " "+ДанныеФизЛицаМенеджера[1];
		ФамилияИмяБухгалтера = ДанныеФизЛицаБухгалтера[0] + " "+ДанныеФизЛицаБухгалтера[1];
			
		Макет=Документы.РассылкаМ15.ПолучитьМакет("МакетПисьма");
		
		ТекстПисьма = Макет.ПолучитьТекст();
		ТекстПисьма = СтрЗаменить(ТекстПисьма,"%Менеджер%",ФамилияИмяМенеджера+" тел. "+СтрокаКонтрагент.ТелефоныМенеджера+", e-mail: "+СтрокаКонтрагент.ПочтаМенеджера);
		ТекстПисьма = СтрЗаменить(ТекстПисьма,"%Бухгалтер%",ФамилияИмяБухгалтера+" тел. "+СтрокаКонтрагент.ТелефоныБухгалтера+", e-mail: "+СтрокаКонтрагент.ПочтаБухгалтера);
		ТекстПисьма = СтрЗаменить(ТекстПисьма,"%АдресДоставки%",Объект.АдресДоставки.ПочтовыйАдрес);	
		ТекстПисьма = СтрЗаменить(ТекстПисьма,"%Пометка%",Объект.АдресДоставки.Пометка);
		
		
		ТаблицаОбъектовКому = СтрЗаменить(СтрокаКонтрагент.АдресОтправки, ";",Символы.ПС);
			
		Для каждого ПодчиненнаяСтрока Из ДокументыКонтрагента Цикл
								
			Если Не	ПодчиненнаяСтрока.Пометка Тогда
				Продолжить;	
			КонецЕсли;
			
				
				
			//ЗаписатьАктСверкиВХранилище(ПодчиненнаяСтрока);
			ЕстьОшибки = Ложь;
			ВложенныйДокумент = Документы.РасходныйОрдерСклад.ПечатьМ15(ПодчиненнаяСтрока.Документ,Истина,ЕстьОшибки);
			
			ВремФайл = ПолучитьИмяВременногоФайла("pdf");
			ВложенныйДокумент.Записать(ВремФайл,ТипФайлаТабличногоДокумента.PDF);
			
			//СформированныеФайлы.Вставить(ПодчиненнаяСтрока.НомерСтроки,Новый ХранилищеЗначения(ВложенныйДокумент,Новый СжатиеДанных(7)));
			//ВремФайл = ПолучитьИмяВременногоФайла("mxl");
			//ВложенныйДокумент.Записать(ВремФайл);
						
			Если ЕстьОшибки Тогда
				ПодчиненнаяСтрока.Пометка = Ложь;
				Сообщить("При формированиии печатной формы возникли ошибки для документа "+Строка(ПодчиненнаяСтрока.Документ)+". Документ сформирован, но не отправлен");		
			Иначе 	
				МассивВложенныхФайлов.Добавить(ВремФайл);
			КонецЕсли;
			
					
		КонецЦикла;
		
		
		Отправлять = Ложь;
		Для каждого ПодчиненнаяСтрока Из ДокументыКонтрагента Цикл
			Если ПодчиненнаяСтрока.Пометка Тогда
		    Отправлять = Истина;
			КонецЕсли;	
		КонецЦикла;
		
		Если Отправлять Тогда
			Для сч=1 по СтрЧислоСтрок(ТаблицаОбъектовКому) Цикл
				АдресПолучателя=СокрЛП(СтрПолучитьСтроку(ТаблицаОбъектовКому,сч));
				Попытка
					Послать(АдресПолучателя,ТекстПисьма,ПодчиненнаяСтрока.ПочтаБухгалтера,"Рассылка документов по отгрузке упаковки  "+ПодчиненнаяСтрока.Документ.Получатель,ФамилияИмяБухгалтера,МассивВложенныхФайлов);				
				Исключение
					ПодчиненнаяСтрока.Пометка = Ложь;
					Сообщить(АдресПолучателя);
					Сообщить(ОписаниеОшибки());
				КонецПопытки;
					
			КонецЦикла;
		КонецЕсли;	
		
		Для каждого ПодчиненнаяСтрока Из ДокументыКонтрагента Цикл
			Если ПодчиненнаяСтрока.Пометка Тогда
				ПодчиненнаяСтрока.Отправлено = ТекущаяДата();
				СтрокаКонтрагент.Отправлено = ТекущаяДата();
			КонецЕсли;	
		КонецЦикла;	
			
	КонецЦикла;	
	
	ДокОбъект = РеквизитФормыВЗначение("Объект");
	Для Каждого Файл из СформированныеФайлы Цикл
		ДокОбъект.СписокРассылки[Файл.Ключ-1].СформированныйФайл = Файл.Значение
	КонецЦикла;
	ДокОбъект.Записать();
	
	ЗначениеВРеквизитФормы(ДокОбъект,"Объект");
	
	МассивСообщений = ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(МассивСообщений);
	
	Для каждого ТекСтрока Из МассивСообщений Цикл
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекСтрока;
		Сообщение.Сообщить();
		
	КонецЦикла;
	
КонецПроцедуры // ОтправитьПисьмаНаСервере()

&НаКлиенте
Процедура СнятьПометки(Команда)
	УстановитьСнятьПометки(Ложь)
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	// Вставить содержимое обработчика.
	ОтправитьПисьмаНаСервере()	
КонецПроцедуры

&НаКлиенте
Процедура СписокРассылкиПередУдалением(Элемент, Отказ)
	ТекущиеДанные = Элементы.СписокРассылки.ТекущиеДанные;
	Отказ = ЗначениеЗаполнено(ТекущиеДанные.Отправлено)
КонецПроцедуры

&НаСервере
Функция ПолучитьФайлНаСервере(НомерСтроки)
	ЕстьОшибки = Ложь;
	ВложенныйДокумент = Документы.РасходныйОрдерСклад.ПечатьМ15(Объект.СписокРассылки[НомерСтроки-1].Документ,Истина,ЕстьОшибки);
	Возврат ВложенныйДокумент
КонецФункции

&НаКлиенте
Процедура ОткрытьСформированныйФайл(Команда)
	ТекСтрока = Элементы.СписокРассылки.ТекущиеДанные;
	
	Если ТекСтрока <> Неопределено Тогда
		
		ВремФайл=КаталогВременныхФайлов()+"М15.pdf";
		
		ВложенныйАкт = ПолучитьФайлНаСервере(ТекСтрока.НомерСтроки);
		
		Попытка
		    ВложенныйАкт.Записать(ВремФайл,ТипФайлаТабличногоДокумента.PDF);
			
			ЗапуститьПриложение(ВремФайл);
		Исключение
			Сообщить("Файл не сформирован!");
		КонецПопытки;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРасходныйОрдер(Команда)
	ВыбраннаяСтрока = Элементы.СписокРассылки.ТекущиеДанные;
	Если ВыбраннаяСтрока <> Неопределено Тогда
		ОткрытьЗначение(ВыбраннаяСтрока.Документ);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СписокРассылкиПослеУдаления(Элемент)
	ОбновитьСписокКонтрагентов();
КонецПроцедуры

&НаКлиенте
Процедура СписокРассылкиПриИзменении(Элемент)
	ОбновитьСписокКонтрагентов();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	//ТекущаяСтрока = Элементы.Контрагенты.ТекущиеДанные;
	//УстановитьОтборПоКонтрагенту(ТекущаяСтрока.Контрагент);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборПоКонтрагенту(Контрагент)
	
	ЭтаФорма.Элементы.СписокРассылки.ОтборСтрок = Новый ФиксированнаяСтруктура("Контрагент",Контрагент);
	
КонецПроцедуры	

&НаКлиенте
Процедура КонтрагентыПриАктивизацииСтроки(Элемент)
	ТекущаяСтрока = Элементы.Контрагенты.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		УстановитьОтборПоКонтрагенту(ТекущаяСтрока.Контрагент);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыПометкаПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.Контрагенты.ТекущиеДанные;
	УстановитьОтметкуДляДокументов(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтметкуДляДокументов(ТекущаяСтрока)

	Отбор = Новый Структура;
	Отбор.Вставить("Контрагент",ТекущаяСтрока.Контрагент);
	
	ПоискСтрок = Объект.СписокРассылки.НайтиСтроки(Отбор);
	Для каждого строка из ПоискСтрок  Цикл
		
		Строка.Пометка = ТекущаяСтрока.Пометка;	
		
	КонецЦикла;	
		
КонецПроцедуры	

&НаКлиенте
Процедура УстановитьСнятьПометки(Пометка)
	
	Для Каждого Строка из Объект.СписокРассылки Цикл
		Строка.Пометка = Пометка
	КонецЦикла;
	
	Для Каждого Строка из Объект.Контрагенты Цикл
		Строка.Пометка = Пометка
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте

Процедура КонтрагентыПередУдалением(Элемент, Отказ)
	
	ТекущаяСтрока = Элементы.Контрагенты.ТекущиеДанные;
	
	Отбор = Новый Структура;
	Отбор.Вставить("Контрагент",ТекущаяСтрока.Контрагент);
	СтрокиУдалить = Объект.СписокРассылки.НайтиСтроки(Отбор);
	для каждого строка из СтрокиУдалить Цикл
		Объект.СписокРассылки.Удалить(строка);				
	КонецЦикла;	

КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьПоКонтрагентуНаСервере(Результат,Параметры) Экспорт
		         
	Если Результат <> Неопределено Тогда
		ЗаполнитьНаСервере(Результат);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоКонтрагенту(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьПоКонтрагентуНаСервере",ЭтаФорма);
	ОткрытьФорму("Справочник.Контрагенты.Форма.ФормаВыбораУправляемая",,,,,,Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокРассылкиОтветПолученПриИзменении(Элемент)
	ПересчитатьКоличествоДокументов();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыПослеУдаления(Элемент)
	ПересчитатьКоличествоДокументов();
КонецПроцедуры

//+++АК sils 08.06.2018 ИП-00018876
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)	
	//+++ AK suvv 2018.10.31 ИП-00020030.01
	Если (Объект.СписокРассылки.Количество() <> 0 или Объект.Контрагенты.Количество() <> 0) и Объект.Организация <> ВыбранноеЗначение Тогда 
		ПараметрыВопроса = Новый Структура;
		ПараметрыВопроса.Вставить("ПредыдущаяОрганизация", Объект.Организация);
		Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопрос", ЭтаФорма, ПараметрыВопроса);
		ПоказатьВопрос(Оповещение, "Изменение организации возможно только после очистки таблиц документа. Продолжить?", РежимДиалогаВопрос.ДаНетОтмена, 0, КодВозвратаДиалога.Да);
	КонецЕсли;
	//--- AK suvv	
КонецПроцедуры

//+++ AK suvv 2018.10.31 ИП-00020030.01
&НаКлиенте
Процедура ПослеОтветаНаВопрос(Результат, Параметры) Экспорт 
	Если Результат = КодВозвратаДиалога.Да Тогда
		Объект.Контрагенты.Очистить();
		Объект.СписокРассылки.Очистить();
	Иначе
		Объект.Организация = Параметры.ПредыдущаяОрганизация;
	КонецЕсли;
КонецПроцедуры //--- AK suvv

&НаКлиенте
Процедура ОрганизацияОчистка(Элемент, СтандартнаяОбработка)
	
	//+++ AK suvv 2018.10.31 ИП-00020030.01
	Если (Объект.СписокРассылки.Количество() <> 0 или Объект.Контрагенты.Количество() <> 0) и ЗначениеЗаполнено(Объект.Организация) Тогда 
		ПараметрыВопроса = Новый Структура;
		ПараметрыВопроса.Вставить("ПредыдущаяОрганизация", Объект.Организация);
		Оповещение = Новый ОписаниеОповещения("ПослеОтветаНаВопрос", ЭтаФорма, ПараметрыВопроса);
		ПоказатьВопрос(Оповещение, "Удаление организации возможно только после очистки таблиц документа. Продолжить?", РежимДиалогаВопрос.ДаНетОтмена, 0, КодВозвратаДиалога.Да);
	КонецЕсли;
	//--- AK suvv

КонецПроцедуры



	