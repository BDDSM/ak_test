
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Дата")Тогда
		Дата = Параметры.Дата;
	КонецЕсли;

	Если Параметры.Свойство("Заголовок") И ЗначениеЗаполнено(Параметры.Заголовок)Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	Если Параметры.Свойство("Отправитель")Тогда
		Отправитель = Параметры.Отправитель;
	Иначе
		Отправитель = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
	КонецЕсли;

	Если Параметры.Свойство("СписокКонтрагентов") И Параметры.СписокКонтрагентов <> Неопределено 
		И Параметры.СписокКонтрагентов.Количество() > 0 Тогда
		Для Каждого ЭлементСписка ИЗ Параметры.СписокКонтрагентов Цикл
			НоваяСтрока = СписокКонтрагентов.Добавить();
			НоваяСтрока.Контрагент = ЭлементСписка.Значение;
		КонецЦикла;
	КонецЕсли;
	
	Если Параметры.Свойство("СписокАдресов") И Параметры.СписокАдресов.Количество() > 0 Тогда
		ТаблицаАдресов.Загрузить(Параметры.СписокАдресов);
	КонецЕсли;
	
	Если Параметры.Свойство("ТемаПисьма")Тогда
		ТемаПисьма = Параметры.ТемаПисьма;
	КонецЕсли;
	
	Если Параметры.Свойство("ШаблонПисьма")Тогда
		ШаблонПисьма = Параметры.ШаблонПисьма;
	КонецЕсли;
	
	Если Параметры.Свойство("Назначение")Тогда
		Назначение = Параметры.Назначение;
	КонецЕсли;
	
	//+++АК SHEP 2018.05.03 ИП-00018453: добавил организацию. Можно было бы просто без всех проверок написать: ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры)
	Если Параметры.Свойство("Организация")Тогда
		Организация = Параметры.Организация;
	КонецЕсли;
	
	ДополнительнаяОбработкаПараметров(Назначение);
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)

	//+++АК SHEP 2018.01.16 ИП-00017663: добавил условие
	Если Найти(ШаблонПисьма, "#НачалоПовтора") Тогда
		ОтправитьПисьмаОстаткиБезСпецификацийСервер();
		Возврат;
	Иначе
	//---АК SHEP 2018.01.16
	ОтправитьПисьмаСервер();
	КонецЕсли; //+++АК SHEP 2018.01.16 ИП-00017663
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ОтправитьПисьмаСервер()
	
	СтруктураПисьма = Новый Структура("Отправитель, Получатели, Тема, Текст, СписокКонтрагентов, Назначение", 
						Отправитель ,ТаблицаАдресов, ТемаПисьма, Строка(ШаблонПисьма), СписокКонтрагентов, Назначение);
	СтруктураПисьма.Вставить("Организация", Организация); //+++АК SHEP 2018.05.03 ИП-00018453
	
	ДополнительнаяОбработкаСтруктурыПисьма(СтруктураПисьма);
	Документы.ЗапросОстатковУпаковкиУПоставщиков.ОтправитьПисьма(СтруктураПисьма);

КонецПроцедуры

//+++АК SHEP 2018.01.16 ИП-00017663
// Отправляем по каждому технологу отдельно
&НаСервере
Процедура ОтправитьПисьмаОстаткиБезСпецификацийСервер()
	
	СтруктураПисьма = Новый Структура("Отправитель, Получатели, Тема, Текст, СписокКонтрагентов, Назначение, ТипТекста", 
						Отправитель, ТаблицаАдресов, ТемаПисьма, Строка(ШаблонПисьма), СписокКонтрагентов, Назначение, ТипТекстаПочтовогоСообщения.HTML);
	
	ТЗнТаблицаТехнологов = ТаблицаАдресов.Выгрузить(, "Технолог,Представление");
	ТЗнТаблицаТехнологов.Свернуть("Технолог,Представление", "");
	
	ПозНачалоПовтора = Найти(ШаблонПисьма, "#НачалоПовтора");
	ПозКонецПовтора = Найти(ШаблонПисьма, "#КонецПовтора");
	
	СтрокаПовтора = Сред(ШаблонПисьма, ПозНачалоПовтора, ПозКонецПовтора - ПозНачалоПовтора);
	СтрокаПовтора = СтрЗаменить(СтрокаПовтора, "#НачалоПовтора", "");
	
	НачалоПисьма = Лев(ШаблонПисьма, ПозНачалоПовтора);
	КонецПисьма = Сред(ШаблонПисьма, ПозКонецПовтора + СтрДлина("#КонецПовтора"));
	
	ТекПолучатели = РеквизитФормыВЗначение("ТаблицаАдресов").СкопироватьКолонки();
	
	Для Каждого СтрокаТехнолог Из ТЗнТаблицаТехнологов Цикл
		
		ТекстПисьма = НачалоПисьма;
		
		ТекПолучателиПредставление = СокрЛП(СтрокаТехнолог.Представление);
		МассивСтрокПоТехнологу = ТаблицаАдресов.НайтиСтроки(Новый Структура("Технолог", СтрокаТехнолог.Технолог));
		Для Каждого СтрокаКонтрагент Из МассивСтрокПоТехнологу Цикл
			ТекстПисьма = ТекстПисьма + СтрокаПовтора;
			ТекстПисьма = СтрЗаменить(ТекстПисьма, "#Контрагент", СтроковыеФункцииКлиентСервер.ПредставлениеСтрокиДляHTML(СокрЛП(СтрокаКонтрагент.Контрагент)));
			
			Если Найти(ТекстПисьма, "#ТаблицаУпаковкиКонтрагента") > 0 Тогда
				СтрокаТаблицаУпаковкиКонтрагента = "";
				СтрокиНоменклатуры = ТаблицаНоменклатуры.НайтиСтроки(Новый Структура("Контрагент", СтрокаКонтрагент.Контрагент));
				Для Каждого СтрокаНоменклатуры Из СтрокиНоменклатуры Цикл
					СтрокаТаблицаУпаковкиКонтрагента = СтрокаТаблицаУпаковкиКонтрагента + "<br>" + СтроковыеФункцииКлиентСервер.ПредставлениеСтрокиДляHTML(СокрЛП(СтрокаНоменклатуры.Номенклатура));
				КонецЦикла;
				ТекстПисьма = СтрЗаменить(ТекстПисьма, "#ТаблицаУпаковкиКонтрагента", СтрокаТаблицаУпаковкиКонтрагента);
			КонецЕсли;
			//ТекстПисьма = ТекстПисьма + "<br>Получатели: " + ТекПолучателиПредставление;
		КонецЦикла;
		
		ТекстПисьма = ТекстПисьма + КонецПисьма;
		
		ТекПолучатели.Очистить();
		НоваяСтрокаПолучатели = ТекПолучатели.Добавить();
		НоваяСтрокаПолучатели.Представление = ТекПолучателиПредставление; //"shep@automacon.ru";
		Если МассивСтрокПоТехнологу.Количество() = 1 Тогда
			НоваяСтрокаПолучатели.Контрагент = МассивСтрокПоТехнологу[0].Контрагент;
		КонецЕсли;
		
		СтруктураПисьма.Вставить("Текст", ТекстПисьма);
		СтруктураПисьма.Вставить("Получатели", ТекПолучатели);
		СтруктураПисьма.Вставить("Организация", Организация); //+++АК SHEP 2018.05.03 ИП-00018453
		
		ДополнительнаяОбработкаСтруктурыПисьма(СтруктураПисьма);
		Документы.ЗапросОстатковУпаковкиУПоставщиков.ОтправитьПисьма(СтруктураПисьма);
		
	КонецЦикла;
	
КонецПроцедуры
	
&НаСервере
Процедура ДополнительнаяОбработкаПараметров(Назначение)
	
	Если Назначение = "ЗапросТехнологам" Тогда
		
		ТаблицаАдресов.Загрузить(ЗаполнитьСоответствиеАдресовТехнологов(Параметры));
		//+++АК SHEP 2018.02.08 ИП-00017663
		//Отправитель = ПолучитьУчетнуюЗаписьДляРассылки("upakovka@vkusvill.com");
		Отправитель = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки("upakovka@vkusvill.ru");
		//---АК SHEP 2018.02.08
		
	ИначеЕсли Назначение = "КонтрагентыБезСпецификации" Тогда
		    
		ТаблицаАдресов.Загрузить(ЗаполнитьСоответствиеАдресовТехнологов(Параметры, Истина));
		//+++АК SHEP 2018.02.08 ИП-00017663
		//Отправитель = ПолучитьУчетнуюЗаписьДляРассылки("upakovka@vkusvill.com");
		Отправитель = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки("upakovka@vkusvill.ru");
		//---АК SHEP 2018.02.08
		
	КонецЕсли;
	
	//+++АК SHEP 2018.01.16 ИП-00017663
	Если Найти(ШаблонПисьма, "#НачалоПовтора") Тогда
		Элементы.ТаблицаНоменклатуры.Видимость = Истина;
		ТЗнТаблицаКонтрагентов = ТаблицаАдресов.Выгрузить(, "Контрагент");
		ТЗнТаблицаКонтрагентов.Свернуть("Контрагент", "");
		Для Каждого СтрокаТЗн Из ТЗнТаблицаКонтрагентов Цикл
			//+++АК SHEP 2018.05.03 ИП-00018453
			//ТЗнНоменклатураКонтрагента = Документы.ЗапросОстатковУпаковкиУПоставщиков.СформироватьОтчётНаСервере(СтрокаТЗн.Контрагент, Дата, Истина);
			ТЗнНоменклатураКонтрагента = Документы.ЗапросОстатковУпаковкиУПоставщиков.СформироватьОтчётНаСервере(Организация, СтрокаТЗн.Контрагент, Дата, Истина);
			//---АК SHEP 2018.05.03
			ТЗнНоменклатураКонтрагента.Свернуть("Номенклатура", "");
			Для Каждого СтрокаТЗнНоменклатуры Из ТЗнНоменклатураКонтрагента Цикл
				СтрокаНоменклатуры = ТаблицаНоменклатуры.Добавить();
				СтрокаНоменклатуры.Контрагент = СтрокаТЗн.Контрагент;
				СтрокаНоменклатуры.Номенклатура = СтрокаТЗнНоменклатуры.Номенклатура;
			КонецЦикла;
		КонецЦикла;
	Иначе
		Элементы.ТаблицаНоменклатуры.Видимость = Ложь;
	КонецЕсли;
	//---АК SHEP 2018.01.16
	
КонецПроцедуры

&НаСервере
Процедура ДополнительнаяОбработкаСтруктурыПисьма(СтруктураПисьма)
	
	Если Назначение = "КонтрагентыБезСпецификации" Тогда
		СтруктураПисьма.Вставить("Дата", Дата);		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьСоответствиеАдресовТехнологов(Параметры, ДобавлятьПоКонтрагентам = Ложь) Экспорт
	
	Запрос = Новый Запрос("Выбрать * ПОМЕСТИТЬ ВТ Из &ВременнаяТаблица Как ВременнаяТаблица");
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВременнаяТаблица", СписокКонтрагентов.Выгрузить());
	Запрос.Выполнить();
	
	Если ДобавлятьПоКонтрагентам Тогда
		Запрос.Текст = ПолучитьТекстЗапросаПоТехнологамКонтрагентам();
	Иначе
		Запрос.Текст = ПолучитьТекстЗапросаПоТехнологам();
	КонецЕсли;
		
	Запрос.УстановитьПараметр("МассивКонтрагентов", Параметры.СписокКонтрагентов);
	
	ВыборкаТехнолог = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаАдресовТехнологов = Новый ТаблицаЗначений();
	ТаблицаАдресовТехнологов.Колонки.Добавить("Контрагент" , Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаАдресовТехнологов.Колонки.Добавить("Технолог"	 , Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	ТаблицаАдресовТехнологов.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(500, ДопустимаяДлина.Фиксированная)));
	
	Соответствие = Новый Соответствие();

	Пока ВыборкаТехнолог.Следующий() Цикл
		
		ВыборкаКонтрагент = ВыборкаТехнолог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаКонтрагент.Следующий() Цикл
			
			ВыборкаДетальныеЗаписи = ВыборкаКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			ПредставлениеАдреса  = "";
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				ПредставлениеАдреса = ?(ЗначениеЗаполнено(ПредставлениеАдреса), ПредставлениеАдреса + "; " 
							+ ВыборкаДетальныеЗаписи.ПредставлениеТехнолог, ВыборкаДетальныеЗаписи.ПредставлениеТехнолог);
							
				Если ДобавлятьПоКонтрагентам Тогда
					ПредставлениеАдреса = ?(ЗначениеЗаполнено(ПредставлениеАдреса), ПредставлениеАдреса + "; " 
								+ ВыборкаДетальныеЗаписи.ПредставлениеКонтрагент, ВыборкаДетальныеЗаписи.ПредставлениеКонтрагент);
				КонецЕсли; 
							
			КонецЦикла;
			
			Если ЗначениеЗаполнено(ПредставлениеАдреса) Тогда
				
				//Удаление дублей электронных адресов
				МассивПолучатели = Документы.ЗапросОстатковУпаковкиУПоставщиков.РазложитьСтрокуВМассивПодстрок(ПредставлениеАдреса,";");
				
				СоответствиеАдресов = Новый Соответствие();
				
				Для Каждого ЭлементПолучатель Из МассивПолучатели Цикл
					Если ЗначениеЗаполнено(ЭлементПолучатель) Тогда
						СоответствиеАдресов.Вставить(СокрЛП(ЭлементПолучатель),СокрЛП(ЭлементПолучатель));
					КонецЕсли;	
				КонецЦикла;	
				
				ПредставлениеАдреса = "";
				Для Каждого ЭлементПолучатель Из СоответствиеАдресов Цикл
					Если ЗначениеЗаполнено(ЭлементПолучатель.Ключ) Тогда
						ПредставлениеАдреса  = ПредставлениеАдреса + ЭлементПолучатель.Ключ + "; ";
					КонецЕсли;	
				КонецЦикла;	
				
				//Добавление строки электронных адресов
				НоваяСтрока = ТаблицаАдресовТехнологов.Добавить();
				НоваяСтрока.Технолог = ВыборкаТехнолог.Технолог;
				НоваяСтрока.Контрагент = ВыборкаКонтрагент.Контрагент;
				НоваяСтрока.Представление = ПредставлениеАдреса;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТаблицаАдресовТехнологов;
	
КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаПоТехнологам()
	
	Возврат
	
	"ВЫБРАТЬ
	|	ВТ.Контрагент КАК Контрагент,
	|	ВТ.Контрагент.ОсновнойМенеджерПокупателя КАК Технолог
	|ПОМЕСТИТЬ ВТ_Контрагенты
	|ИЗ
	|	ВТ КАК ВТ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ.Контрагент,
	|	ВТ.Контрагент.ОсновнойМенеджерПокупателя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТ_Контрагенты.Контрагент КАК Контрагент,
	|	ВТ_Контрагенты.Технолог КАК Технолог,
	|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(1000)) КАК ПредставлениеТехнолог,
	|	КонтактнаяИнформация.Тип КАК Тип,
	|	КонтактнаяИнформация.Вид КАК Вид
	|ИЗ
	|	ВТ_Контрагенты КАК ВТ_Контрагенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО (КонтактнаяИнформация.Объект = ВТ_Контрагенты.Технолог)
	|			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|ГДЕ
	|	НЕ КонтактнаяИнформация.Представление ЕСТЬ NULL
	|	И НЕ КонтактнаяИнформация.Представление ПОДОБНО """"
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент,
	|	Технолог,
	|	Тип,
	|	Вид
	|ИТОГИ ПО
	|	Технолог,
	|	Контрагент
	|АВТОУПОРЯДОЧИВАНИЕ";

КонецФункции

&НаСервере
Функция ПолучитьТекстЗапросаПоТехнологамКонтрагентам()
	
	Возврат
	
	"ВЫБРАТЬ
	|	ВТ.Контрагент КАК Контрагент,
	|	ВТ.Контрагент.ОсновнойМенеджерПокупателя КАК Технолог
	|ПОМЕСТИТЬ ВТ_Контрагенты
	|ИЗ
	|	ВТ КАК ВТ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ.Контрагент,
	|	ВТ.Контрагент.ОсновнойМенеджерПокупателя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТ_Контрагенты.Контрагент КАК Контрагент,
	|	ВТ_Контрагенты.Технолог КАК Технолог,
	|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(1000)) КАК ПредставлениеТехнолог,
	|	"""" КАК ПредставлениеКонтрагент,
	|	КонтактнаяИнформация.Тип КАК Тип,
	|	КонтактнаяИнформация.Вид КАК Вид
	|ИЗ
	|	ВТ_Контрагенты КАК ВТ_Контрагенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО (КонтактнаяИнформация.Объект = ВТ_Контрагенты.Технолог)
	|			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|ГДЕ
	|	НЕ КонтактнаяИнформация.Представление ЕСТЬ NULL
	|	И НЕ КонтактнаяИнформация.Представление ПОДОБНО """"
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВТ_Контрагенты.Контрагент,
	|	ВТ_Контрагенты.Технолог,
	|	"""",
	|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(1000)),
	|	КонтактнаяИнформация.Тип,
	|	КонтактнаяИнформация.Вид
	|ИЗ
	|	ВТ_Контрагенты КАК ВТ_Контрагенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО (КонтактнаяИнформация.Объект = ВТ_Контрагенты.Контрагент)
	|			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|ГДЕ
	|	НЕ КонтактнаяИнформация.Представление ЕСТЬ NULL
	|	И НЕ КонтактнаяИнформация.Представление ПОДОБНО """"
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент,
	|	Технолог,
	|	Тип,
	|	Вид
	|ИТОГИ ПО
	|	Технолог,
	|	Контрагент
	|АВТОУПОРЯДОЧИВАНИЕ";

КонецФункции

&НаСервере
Функция ПолучитьУчетнуюЗаписьДляРассылки(Адрес)
	
	Возврат Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоРеквизиту("Логин", Адрес); 
	
КонецФункции

&НаКлиенте
Процедура ТаблицаАдресовПриАктивизацииСтроки(Элемент)
	
	//+++АК SHEP 2018.01.16 ИП-00017663
	Элементы.ТаблицаНоменклатуры.ОтборСтрок = Новый ФиксированнаяСтруктура("Контрагент", Элементы.ТаблицаАдресов.ТекущиеДанные.Контрагент);
	//---АК SHEP 2018.01.16
	
КонецПроцедуры
