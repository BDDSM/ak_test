
Процедура ЗаполнитьНаСервере(ОтборПоБух = Неопределено, ВариантЗаполнения = "") Экспорт
	
	//+++АК SHEP 2018.01.15 ИП-00017663
	Если ЗначениеЗаполнено(ВариантЗаполнения) Тогда
		Объект.ВидЗаполнения = ВариантЗаполнения;
	ИначеЕсли ЗначениеЗаполнено(ОтборПоБух) Тогда
		Объект.ВидЗаполнения = "ТолькоПоСебе";
	Иначе
		Объект.ВидЗаполнения = "ПоВсемБухгалтерам";
	КонецЕсли;
	Элементы.ВидЗаполнения.ТолькоПросмотр = Истина;
	//---АК SHEP 2018.01.15
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаОстатков", Новый Граница(КонецДня(Объект.Дата), ВидГраницы.Включая));
	//+++АК SHEP 2018.05.03 ИП-00018453
	//Запрос.УстановитьПараметр("Владелец", Справочники.СтруктурныеЕдиницы.СторонняяПереработка);
	Запрос.УстановитьПараметр("Владелец", ОбщегоНазначенияПовтИсп.СторонняяПереработкаДляОрганизации(Объект.Организация));
	//---АК SHEP 2018.05.06
	Запрос.УстановитьПараметр("ФизЛицо", ПараметрыСеанса.ТекущийПользователь.ФизЛицо);
	Запрос.УстановитьПараметр("ОсновнойБухгалтерПокупателя", ОтборПоБух);
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ТоварыНаСкладахОстатки.Склад.Контрагент КАК Контрагент,
	               |	ТоварыНаСкладахОстатки.Склад.Контрагент.ГоловнойКонтрагент КАК КонтрагентГоловнойКонтрагент,
	               |	ВЫРАЗИТЬ(ЕСТЬNULL(КонтактнаяИнформация.Представление, """") КАК СТРОКА(500)) КАК Имейл,
	               |	ТоварыНаСкладахОстатки.Склад.Контрагент.ОсновнойБухгалтерПокупателя.ФизЛицо КАК Бухгалтер,
	               |	ТоварыНаСкладахОстатки.Склад,
	               |	ВЫРАЗИТЬ(КонтактнаяИнформацияФизЛицо.Представление КАК СТРОКА(500)) КАК ФизЛицоМейл
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |			&ДатаОстатков,
	               |			Склад.Владелец = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.СторонняяПереработка)
	               |				И НЕ Склад.Контрагент.ПометкаУдаления) КАК ТоварыНаСкладахОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |		ПО ТоварыНаСкладахОстатки.Склад.Контрагент = КонтактнаяИнформация.Объект
	               |			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	               |			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыКонтрагентаДляОбменаДокументами))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформацияФизЛицо
	               |		ПО (КонтактнаяИнформацияФизЛицо.Объект = &ФизЛицо)
	               |			И (КонтактнаяИнформацияФизЛицо.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	               |			И (КонтактнаяИнформацияФизЛицо.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица))
	               |ГДЕ
	               |	(ТоварыНаСкладахОстатки.Склад.Контрагент.ОсновнойБухгалтерПокупателя = &ОсновнойБухгалтерПокупателя
	               |			ИЛИ &ОсновнойБухгалтерПокупателя = НЕОПРЕДЕЛЕНО)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТоварыНаСкладахОстатки.Склад.Контрагент.Наименование";
				   
	//+++ mika 
	Если ВариантЗаполнения = "ОстаткиБезСпецификаций" Тогда //Дата: 2017.09.05 ИП-00016344.04
		Запрос.Текст = ПолучитьТекстЗапросаОстатковБезСпецификаций();
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(Объект.Дата)- 86400 * 60);
	ИначеЕсли ВариантЗаполнения = "ОстаткиНеактивныеХолдинги" Тогда //Дата: 2017.10.09 ИП-00016344.04
		Запрос.Текст = ПолучитьТекстЗапросаОстатковНеактивныеХолдинги();
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(Объект.Дата)- 86400 * 60);
	Иначе 							  
		Запрос.Текст = ПолучитьТекстЗапросаОстатков();
		//+++АК SHEP 2018.01.16 ИП-00017663: берём 20-е число месяца
		//Запрос.УстановитьПараметр("Период", КонецДня(Объект.Дата));
		Запрос.УстановитьПараметр("Период", Дата(Год(Объект.Дата), Месяц(Объект.Дата), 20));
		//---АК SHEP 2018.01.16
		//mika Дата: 2017.11.07 ИП-00017182
		Запрос.УстановитьПараметр("ПериодИнвентаризация", КонецМесяца(Объект.Дата) + 86400 * 10);
		//mika
		
		//+++АК SHEP 2018.02.21 ИП-00017832: до 20-го числа берём пред. месяц
		Если День(Объект.Дата) < 20 Тогда
			ДатаПредМесяца = ДобавитьМесяц(Объект.Дата, -1);
			Запрос.УстановитьПараметр("Период", Дата(Год(ДатаПредМесяца), Месяц(ДатаПредМесяца), 20));
			Запрос.УстановитьПараметр("ПериодИнвентаризация", Мин(КонецДня(Объект.Дата), КонецМесяца(ДатаПредМесяца) + 86400 * 10));
		КонецЕсли;
		//---АК SHEP 2018.02.21
	КонецЕсли;
	//---mika	
	
	//+++АК SHEP 2018.05.06 ИП-00018453
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.СторонняяПереработка)", "&СтруктурныеЕдиницыСторонняяПереработка");
	Запрос.УстановитьПараметр("СтруктурныеЕдиницыСторонняяПереработка", ОбщегоНазначенияПовтИсп.СторонняяПереработкаДляОрганизации(Объект.Организация));
	//---АК SHEP 2018.05.06
	
	//+++ АК BARA 2017.12.25 ИП-00017278.01   
	ЗапросКА = Новый Запрос;
	ЗапросКА.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровУслуг.Контрагент,
		|	ПоступлениеТоваровУслуг.Контрагент.ГоловнойКонтрагент,
		|	ПоступлениеТоваровУслуг.Дата КАК Дата,
		|	ПоступлениеТоваровУслуг.Ссылка
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
		|ГДЕ
		|	ПоступлениеТоваровУслуг.Проведен
		|	И ПоступлениеТоваровУслуг.Дата >= &Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Контрагент,
		|	ВТ.КонтрагентГоловнойКонтрагент,
		|	МАКСИМУМ(ВТ.Дата) КАК Дата
		|ПОМЕСТИТЬ ВТ_МАКСДАТА
		|ИЗ
		|	ВТ КАК ВТ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ.Контрагент,
		|	ВТ.КонтрагентГоловнойКонтрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТ.Контрагент) КАК Контрагент,
		|	ВТ.КонтрагентГоловнойКонтрагент
		|ПОМЕСТИТЬ ПоследнийКА
		|ИЗ
		|	ВТ КАК ВТ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_МАКСДАТА КАК ВТ_МАКСДАТА
		|		ПО ВТ.Контрагент = ВТ_МАКСДАТА.Контрагент
		|			И ВТ.Дата = ВТ_МАКСДАТА.Дата
		|			И ВТ.КонтрагентГоловнойКонтрагент = ВТ_МАКСДАТА.КонтрагентГоловнойКонтрагент
		|ГДЕ
		|	ВТ.КонтрагентГоловнойКонтрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ.КонтрагентГоловнойКонтрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоследнийКА.Контрагент,
		|	ПоследнийКА.КонтрагентГоловнойКонтрагент КАК ГоловнойКонтрагент,
		|	ПоследнийКА.Контрагент.ОсновнойБухгалтерПокупателя.ФизЛицо КАК ОсновнойБухгалтерПокупателя,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(КонтактнаяИнформация.Представление, """""""") КАК СТРОКА(500)) КАК Имейл
		|ИЗ
		|	ПоследнийКА КАК ПоследнийКА
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ПО ПоследнийКА.Контрагент = КонтактнаяИнформация.Объект
		|			И (ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты) = КонтактнаяИнформация.Тип)
		|			И (ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыКонтрагентаДляОбменаДокументами) = КонтактнаяИнформация.Вид)";
		
		ЗапросКА.УстановитьПараметр("Дата", ТекущаяДата()-(180*86400));	
		ПоследнийКА = ЗапросКА.Выполнить().Выгрузить();	
		//--- АК BARA 2017.12.25 ИП-00017278.01  


	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДоб = Объект.Контрагенты.Добавить();
		СтрокаДоб.Контрагент = Выборка.Контрагент;
		//+++АК BARA 2017.12.25    ИП-00017278.01
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("ГоловнойКонтрагент", Выборка.Контрагент); 
		
		НайденныеСтроки = ПоследнийКА.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество()>=1 Тогда
			СтрокаДоб.Контрагент = НайденныеСтроки[0].Контрагент;
		КонецЕсли;
		//---АК BARA 2017.12.25  ИП-00017278.01   

		Если НЕ ЗначениеЗаполнено(СтрокаДоб.Контрагент) Тогда
			СтрокаДоб.Контрагент = Выборка.Склад;
		КонецЕсли;
		Если ТипЗнч(СтрокаДоб.Контрагент) = Тип("СправочникСсылка.Склады") Тогда
			СтрокаДоб.EMail = Выборка.ФизЛицоМейл;
			СтрокаДоб.Бухгалтер = ПараметрыСеанса.ТекущийПользователь.ФизЛицо;
		Иначе	
			СтрокаДоб.EMail = Выборка.Имейл;
			СтрокаДоб.Бухгалтер = Выборка.Бухгалтер;
			//+++АК BARA 2017.12.25    ИП-00017278.01 
			НайденныеСтроки = ПоследнийКА.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество()>=1 Тогда
				Если ЗначениеЗаполнено(НайденныеСтроки[0].Имейл) Тогда 
					СтрокаДоб.EMail = НайденныеСтроки[0].Имейл;
				КонецЕсли;
				Если ЗначениеЗаполнено(НайденныеСтроки[0].ОсновнойБухгалтерПокупателя) Тогда 
					СтрокаДоб.Бухгалтер = НайденныеСтроки[0].ОсновнойБухгалтерПокупателя;
				КонецЕсли;
			КонецЕсли;		
			//---АК BARA 2017.12.25  ИП-00017278.01 
		КонецЕсли;	
	КонецЦикла;	
	
	//+++АК SHEP 2018.02.06 ИП-00017663
	//Если Объект.ВидЗаполнения = "ОстаткиБезСпецификаций" Тогда
		ПодсветитьКонтрагентовРозовымНаСервере();
	//КонецЕсли;
	//---АК SHEP 2018.02.06
	
КонецПроцедуры	

&НаКлиенте
Процедура Заполнить(Команда)
	
	Ответ = Вопрос("Перед заполнением табличная часть контрагентов будет очищена. Продолжить", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;	
	
	Объект.Контрагенты.Очистить();
	
	ЗаполнитьНаСервере();
	
КонецПроцедуры

&НаСервере
Функция СформироватьОтчетНаСервере(Контрагент)
	
	//+++АК SHEP 2018.01.16 ИП-00017663: перенёс в модуль менеджера
	//+++АК SHEP 2018.05.03 ИП-00018453
	//Возврат Документы.ЗапросОстатковУпаковкиУПоставщиков.СформироватьОтчётНаСервере(Контрагент, Объект.Дата);
	Возврат Документы.ЗапросОстатковУпаковкиУПоставщиков.СформироватьОтчётНаСервере(Объект.Организация, Контрагент, Объект.Дата);
	//---АК SHEP 2018.05.03
	
КонецФункции	

&НаКлиенте
Процедура ПосмотретьОтчетПоВыбраннойСтроке(Команда)
	
	Если Элементы.Контрагенты.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ТабДок = СформироватьОтчетНаСервере(Элементы.Контрагенты.ТекущиеДанные.Контрагент);
	
	ИмяФайла = ПолучитьИмяВременногоФайла(".xls");
	ТабДок.Записать(ИмяФайла, ТипФайлаТабличногоДокумента.XLS97);
	
	Попытка
		ExcelApp = Новый COMОбъект("Excel.Application");
		РабочаяКнига=ExcelApp.WorkBooks;
		РабочаяКнига = РабочаяКнига.Open(ИмяФайла,0,0); 
		ExcelApp.DisplayAlerts = 0; 
		РабочийЛист=РабочаяКнига.Worksheets(1);
		
		Счетчик = 7;
		Пока Истина Цикл
			Если ПустаяСтрока(РабочийЛист.Range("F" + Формат(Счетчик, "ЧГ=0")).Text) Тогда
				Прервать;
			КонецЕсли;
			РабочийЛист.Range("M" + Формат(Счетчик, "ЧГ=0")).FormulaR1C1 = "=RC[-1]-RC[-2]";
			Счетчик = Счетчик + 1;
		КонецЦикла;		
		
		РабочаяКнига.Save();
		РабочаяКнига.Close();
		ExcelApp.Quit();
		
		ExcelApp = Неопределено;
        РабочаяКнига = Неопределено; 
		РабочийЛист = Неопределено;
	Исключение 
		Сообщить(ОписаниеОшибки());
		РабочийЛист = Неопределено;
		РабочаяКнига = Неопределено;
		ExcelApp = Неопределено; 

	КонецПопытки;
	
	ЗапуститьПриложение(ИмяФайла);
	
КонецПроцедуры

Процедура ЗаполнитьТолькоПоСебеСервер()
	
	//+++ AK suvv 2018.10.10 ИП-00020030
	Если ЗначениеЗаполнено(Объект.ОтветственныйБухгалтер) Тогда 
		ЗаполнитьНаСервере(Объект.ОтветственныйБухгалтер);
	Иначе
		ЗаполнитьНаСервере(ПараметрыСеанса.ТекущийПользователь);
	КонецЕсли;
	//--- AK suvv
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаполнитьТолькоПоСебе(Команда)
	
	Ответ = Вопрос("Перед заполнением табличная часть контрагентов будет очищена. Продолжить", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;	
	
	Объект.Контрагенты.Очистить();
	
	ЗаполнитьТолькоПоСебеСервер();
	
КонецПроцедуры

Функция ПолучитьУчетнуюЗаписьБухгалтера(Бухгалтер) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ФизЛицо", Бухгалтер);
	Запрос.Текст = "ВЫБРАТЬ
	               |	НастройкиПользователей.Значение
	               |ИЗ
	               |	РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
	               |ГДЕ
	               |	НастройкиПользователей.Пользователь.ФизЛицо = &ФизЛицо
	               |	И НастройкиПользователей.Настройка = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НастройкиПользователей.ОсновнаяУчетнаяЗапись)";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Значение;
	Иначе
		Возврат Неопределено;
	КонецЕсли;	
	
КонецФункции

Функция ПолучитьEmailБухгалтера(Бухгалтер) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Объект", Бухгалтер);
	Запрос.Текст = "ВЫБРАТЬ
	               |	КонтактнаяИнформация.Представление
	               |ИЗ
	               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |ГДЕ
	               |	КонтактнаяИнформация.Объект = &Объект
	               |	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	               |	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица)";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Представление;
	Иначе
		Возврат "";
	КонецЕсли;	
	
КонецФункции

&НаКлиенте
Процедура ОтправитьПоСтроке(ТекДанные)
	
	Если Не ЗначениеЗаполнено(ТекДанные.Бухгалтер) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке №" + Формат(ТекДанные.НомерСтроки, "ЧГ=0") + " не заполнен бухгалтер, от имени которого отправлять отчет");
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекДанные.EMail) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке №" + Формат(ТекДанные.НомерСтроки, "ЧГ=0") + " не заполнен адрес получателя отчета");
		Возврат;
	КонецЕсли;	
	
	//УчетнаяЗапись = ПолучитьУчетнуюЗаписьБухгалтера(ТекДанные.Бухгалтер);
	//+++АК SHEP 2018.02.07 ИП-00017663
	//УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки("upakovka@vkusvill.ru");
	//---АК SHEP 2018.02.07
	
	Если Не ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке №" + Формат(ТекДанные.НомерСтроки, "ЧГ=0") + " по бухгалтеру не настроена учетная запись, от имени которого отправлять отчет");
		Возврат;
	КонецЕсли;
	
	//+++АК mika Дата: 2017.07.28 ИП-00016344
	
	//+++АК SHEP 2018.02.07 ИП-00017663: закомментировал ненужное
	//Если ЗначениеЗаполнено(ТекДанные.Контрагент.ГоловнойКонтрагент) Тогда
	//	ТабДок = СформироватьОтчетНаСервере(ТекДанные.Контрагент.ГоловнойКонтрагент);
	//Иначе
		ТабДок = СформироватьОтчетНаСервере(ТекДанные.Контрагент);
	//КонецЕсли;
	//---АК SHEP 2018.02.07
	
	//---АК
	
	ИмяФайла = ПолучитьИмяВременногоФайла(".xls");
	ТабДок.Записать(ИмяФайла, ТипФайлаТабличногоДокумента.XLS97);
	
	Попытка
		ExcelApp = Новый COMОбъект("Excel.Application");
		РабочаяКнига=ExcelApp.WorkBooks;
		РабочаяКнига = РабочаяКнига.Open(ИмяФайла,0,0); 
		ExcelApp.DisplayAlerts = 0; 
		РабочийЛист=РабочаяКнига.Worksheets(1);
		
		Счетчик = 7;
		Пока Истина Цикл
			Если ПустаяСтрока(РабочийЛист.Range("F" + Формат(Счетчик, "ЧГ=0")).Text) Тогда
				Прервать;
			КонецЕсли;
			РабочийЛист.Range("M" + Формат(Счетчик, "ЧГ=0")).FormulaR1C1 = "=RC[-1]-RC[-2]";
			РабочийЛист.Range("L" + Формат(Счетчик, "ЧГ=0")).Locked = Ложь;
			Счетчик = Счетчик + 1;
		КонецЦикла;		
		
		РабочийЛист.Protect("112233", Истина, Истина, Истина);
		
		РабочаяКнига.Save();
		РабочаяКнига.Close();
		ExcelApp.Quit();
		
		ExcelApp = Неопределено;
        РабочаяКнига = Неопределено; 
		РабочийЛист = Неопределено;
	Исключение 
		Сообщить(ОписаниеОшибки());
		РабочийЛист = Неопределено;
		РабочаяКнига = Неопределено;
		ExcelApp = Неопределено; 

	КонецПопытки;
	
	МассивПолучатели = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ТекДанные.EMail,";");
	
	Почта = Новый ИнтернетПочта;
	//+++АК SHEP 2018.02.13 ИП-00017663
	//Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофильБезАутентификации(УчетнаяЗапись);
	//---АК SHEP 2018.02.13
	Письмо = Новый ИнтернетПочтовоеСообщение;
	Почта.Подключиться(Профиль);
	Письмо.Тема = "Запрос остатков неиспользованной упаковки/этикетки: " + ТекДанные.Контрагент;
	Письмо.ИмяОтправителя = ""+УчетнаяЗапись+"";
	Письмо.ИмяОтправителя  = ""+СокрЛП(УчетнаяЗапись)+"";
	Письмо.Отправитель     = ""+СокрЛП(УчетнаяЗапись)+"";
	Для Каждого ЭлементПолучатель Из МассивПолучатели Цикл
		Если ЗначениеЗаполнено(ЭлементПолучатель) Тогда
			Получатель = Письмо.Получатели.Добавить();
			Получатель.Адрес           = СокрЛП(ЭлементПолучатель);
			Получатель.ОтображаемоеИмя = СокрЛП(ЭлементПолучатель);
		КонецЕсли;	
	КонецЦикла;	
	
	ТекстСообщения = Письмо.Тексты.Добавить();
	ТекстСообщения.Текст     = "Добрый день!
								|Уважаемый партнер,
								|во вложении Отчет об остатках неиспользованной упаковки/этикетки.
								|1) заполнить данный excel файл по столбцу ""остатки по данным поставщика"", выделенным желтым цветом, 
								|здесь вы должны указать данные по упаковке/этикетке на вашем складе.
								|2) Отправить этот excel файл (не скан-копию) на адрес электронной почты отправителя.
								|3) Распечатать данный отчет уже с вашими данными, заверить печатью и подписью, отправить скан-копией на электронную почту отправителя.
								|ВАЖНО: во вложении должно быть 2 файла - excel файл с вашими данными остатков упаковки/этикетки и скан-копия отчета, заверенная печатью и подписью. Заполненный отчет, заверенный вами печатью и подписью, необходимо предоставить в срок до
								| 3-го числа следующего за отчетным месяцем.
								|
								|Спасибо!.
								|
								|Адрес для отправки заполненного отчета: upakovka@vkusvill.ru";// + ПолучитьEmailБухгалтера(ТекДанные.Бухгалтер);
	ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
	
	Письмо.Вложения.Добавить(ИмяФайла);
	Почта.Послать(Письмо);
	Почта.Отключиться();
	
	СтрокаДоб = МассивФайлыУдалить.Добавить();
	СтрокаДоб.Файл = ИмяФайла;
	
	ТекДанные.ПисьмоОтправлено = Истина;
	
	Модифицированность = Истина;
	
КонецПроцедуры	

&НаКлиенте
Процедура ОтправитьПоВыбраннойСтроке(Команда)
	
	ТекДанные = Элементы.Контрагенты.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ОтправитьПоСтроке(ТекДанные);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 08.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Запрос остатков упаковки у поставщиков");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	
	//+++АК SHEP 2018.01.16 ИП-00017663
	Элементы.ВидЗаполнения.ТолькоПросмотр = ЗначениеЗаполнено(Объект.ВидЗаполнения);
	
	//Если Объект.ВидЗаполнения = "ОстаткиБезСпецификаций" Тогда
		ПодсветитьКонтрагентовРозовымНаСервере();
	//КонецЕсли;
	//---АК SHEP 2018.01.16
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//+++АК sils 08.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
	//---АК
	
	//+++ AK suvv 2018.10.10 ИП-00020030
	ОтветственныйБухгалтерПриИзменении(неопределено);
	//--- AK suvv
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Для Каждого ЭлементФайл Из МассивФайлыУдалить Цикл
		Если ЗначениеЗаполнено(ЭлементФайл.Файл) Тогда
			УдалитьФайлы(ЭлементФайл.Файл);
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВсемКомуНеОтправляли(Команда)
	
	Для Каждого СтрокаТаб Из Объект.Контрагенты Цикл
		Если СтрокаТаб.ПисьмоОтправлено Тогда
			Продолжить;
		КонецЕсли;
		Состояние("Отправляем " + СтрокаТаб.Контрагент);
		ОтправитьПоСтроке(СтрокаТаб);
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВсем(Команда)
	
	Для Каждого СтрокаТаб Из Объект.Контрагенты Цикл
		Состояние("Отправляем " + СтрокаТаб.Контрагент);
		ОтправитьПоСтроке(СтрокаТаб);
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьМассивКонтрагентовДокумента()
	Возврат Объект.Контрагенты.Выгрузить().ВыгрузитьКолонку("Контрагент");
КонецФункции	

&НаКлиенте
Процедура ОтправитьТемКтоНеПрислалОтвет(Команда)
	
	МассивКОтправке = ОткрытьФормуМодально("Документ.ЗапросОстатковУпаковкиУПоставщиков.Форма.ФормаВыборКонтрагентов", Новый Структура("ДатаДок, МассивКонтрагенты", Объект.Дата, ПолучитьМассивКонтрагентовДокумента()));
	Если ТипЗнч(МассивКОтправке) = Тип("Массив") Тогда
		Для Каждого ЭлементКонтрагент Из МассивКОтправке Цикл
			СтрокиКонтр = Объект.Контрагенты.НайтиСтроки(Новый Структура("Контрагент", ЭлементКонтрагент));
			Если СтрокиКонтр.Количество() > 0 Тогда
				Состояние("Отправляем " + СтрокиКонтр[0].Контрагент);
				ОтправитьПоСтроке(СтрокиКонтр[0]);
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

Функция ВернутьГоловногоКонтрагента(Контрагент)
	
	Возврат ?(ЗначениеЗаполнено(Контрагент.ГоловнойКонтрагент), Контрагент.ГоловнойКонтрагент, Контрагент);
	
КонецФункции	

&НаКлиенте
Процедура КонтрагентыКонтрагентПриИзменении(Элемент)
	
	КонтрагентыКонтрагент =	Элементы.Контрагенты.ТекущиеДанные.Контрагент;
	
	//+++АК mika Дата: 2017.07.28 ИП-00016344
	//Отключить автоматическое подставление головного контрагента
	//Головной = ВернутьГоловногоКонтрагента(КонтрагентыКонтрагент);
	//Если КонтрагентыКонтрагент <> Головной Тогда
	//	Сообщить("Контрагент был автоматически заменен на головного");
	//	Элементы.Контрагенты.ТекущиеДанные.Контрагент = Головной;
	//КонецЕсли;	
	//---АК
	
	Если ЗначениеЗаполнено(КонтрагентыКонтрагент) Тогда
		Если  ЗначениеЗаполнено(КонтрагентыКонтрагент.ОсновнойБухгалтерПокупателя) Тогда 
			Элементы.Контрагенты.ТекущиеДанные.Бухгалтер = КонтрагентыКонтрагент.ОсновнойБухгалтерПокупателя.ФизЛицо;	
		КонецЕсли;
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Представление КАК Представление
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
		|	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыКонтрагентаДляОбменаДокументами)
		|	И КонтактнаяИнформация.Объект = &Объект";
		
		
		Запрос.УстановитьПараметр("Объект", КонтрагентыКонтрагент);
		
		Результат = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
			
			Элементы.Контрагенты.ТекущиеДанные.EMail = ВыборкаДетальныеЗаписи.Представление;	
			
		КонецЕсли;
		
		
	КонецЕсли;
	
КонецПроцедуры

//Прочие процедуры и функции //+++АК mika

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаОстатков()
	
	Возврат 
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СпецификацииПоставщиков.Поставщик КАК ПоставщикСпецификация
	|ПОМЕСТИТЬ ВТ_ПоставщикиСпецификация
	|ИЗ
	|	РегистрСведений.СпецификацииПоставщиков КАК СпецификацииПоставщиков
	|ГДЕ
	|	СпецификацииПоставщиков.ДатаКонца = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ИнвентаризацияСкладТовары.Склад.Контрагент
	|ПОМЕСТИТЬ ВТ_Инвентаризация
	|ИЗ
	|	Документ.ИнвентаризацияСклад.Товары КАК ИнвентаризацияСкладТовары
	|ГДЕ
	//+++АК SHEP 2018.01.16 ИП-00017663: в период от 20-го числа до конца месяца, и от начала мес. до 10го числа включительно
	//|	ИнвентаризацияСкладТовары.Ссылка.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&Период, ДЕНЬ), ДЕНЬ, -10) И &ПериодИнвентаризация
	|	ИнвентаризацияСкладТовары.Ссылка.Дата МЕЖДУ &Период И &ПериодИнвентаризация
	//---АК SHEP 2018.01.16
	|	И ИнвентаризацияСкладТовары.Ссылка.Проведен
	|	И ИнвентаризацияСкладТовары.Ссылка.ПоНесколькимСкладам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТоварыНаСкладахОстатки.Склад.Контрагент КАК Контрагент,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(КонтактнаяИнформация.Представление, """") КАК СТРОКА(500)) КАК Имейл,
	|	ТоварыНаСкладахОстатки.Склад.Контрагент.ОсновнойБухгалтерПокупателя.ФизЛицо КАК Бухгалтер,
	|	ТоварыНаСкладахОстатки.Склад,
	|	ВЫРАЗИТЬ(КонтактнаяИнформацияФизЛицо.Представление КАК СТРОКА(500)) КАК ФизЛицоМейл,
	|	ВТ_ПоставщикиСпецификация.ПоставщикСпецификация
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			&ДатаОстатков,
	|			Склад.Владелец = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.СторонняяПереработка)
	|				И Номенклатура.ТипТовара = ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.Упаковка)
	|				И НЕ Склад.Контрагент.ПометкаУдаления) КАК ТоварыНаСкладахОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО ТоварыНаСкладахОстатки.Склад.Контрагент = КонтактнаяИнформация.Объект
	|			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыКонтрагентаДляОбменаДокументами))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформацияФизЛицо
	|		ПО (КонтактнаяИнформацияФизЛицо.Объект = &ФизЛицо)
	|			И (КонтактнаяИнформацияФизЛицо.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|			И (КонтактнаяИнформацияФизЛицо.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица))
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоставщикиСпецификация КАК ВТ_ПоставщикиСпецификация
	|		ПО ТоварыНаСкладахОстатки.Склад.Контрагент = ВТ_ПоставщикиСпецификация.ПоставщикСпецификация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Инвентаризация КАК ВТ_Инвентаризация
	|		ПО ТоварыНаСкладахОстатки.Склад.Контрагент = ВТ_Инвентаризация.СкладКонтрагент
	|ГДЕ
	|	(ТоварыНаСкладахОстатки.Склад.Контрагент.ОсновнойБухгалтерПокупателя = &ОсновнойБухгалтерПокупателя
	|			ИЛИ &ОсновнойБухгалтерПокупателя = НЕОПРЕДЕЛЕНО)
	|	И НЕ ВТ_ПоставщикиСпецификация.ПоставщикСпецификация ЕСТЬ NULL
	|	И ВТ_Инвентаризация.СкладКонтрагент ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыНаСкладахОстатки.Склад.Контрагент.Наименование";
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаОстатковБезСпецификаций()
	
	Возврат 
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Склады.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ВТ_ВсеКонтрагенты
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.Владелец = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.СторонняяПереработка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВТ_ВсеКонтрагенты.Контрагент КАК Контрагент,
	|	ИСТИНА КАК НетОборота
	|ПОМЕСТИТЬ ВТ_Обороты
	|ИЗ
	|	ВТ_ВсеКонтрагенты КАК ВТ_ВсеКонтрагенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТоварыНаСкладахОбороты.Склад.Контрагент КАК КонтрагентОборот,
	|			ТоварыНаСкладахОбороты.КоличествоОборот КАК КоличествоОборот
	|		ИЗ
	|			РегистрНакопления.ТоварыНаСкладах.Обороты(
	|					&НачалоПериода,
	|					&ДатаОстатков,
	|					,
	|					Склад.Владелец = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.СторонняяПереработка)
	|						И Номенклатура.ТипТовара = ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.Упаковка)) КАК ТоварыНаСкладахОбороты) КАК ТабОбороты
	|		ПО ВТ_ВсеКонтрагенты.Контрагент = ТабОбороты.КонтрагентОборот
	|ГДЕ
	|	ТабОбороты.КоличествоОборот ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпецификацииПоставщиков.Поставщик КАК ПоставщикСпецификация,
	|	МАКСИМУМ(СпецификацииПоставщиков.ДатаКонца) КАК ДатаКонца,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СпецификацииПоставщиков.ДатаКонца = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК АктивнаяСпецификация
	|ПОМЕСТИТЬ ВТ_ПоставщикиСпецификация
	|ИЗ
	|	РегистрСведений.СпецификацииПоставщиков КАК СпецификацииПоставщиков
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацииПоставщиков.Поставщик
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПоставщикСпецификация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТоварыНаСкладахОстатки.Склад.Контрагент КАК Контрагент,
	|	ТоварыНаСкладахОстатки.Склад.Контрагент.ОсновнойБухгалтерПокупателя.ФизЛицо КАК Бухгалтер,
	|	ТоварыНаСкладахОстатки.Склад
	|ПОМЕСТИТЬ ВТ_Остатки
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			&ДатаОстатков,
	|			Склад.Владелец = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.СторонняяПереработка)
	|				И Номенклатура.ТипТовара = ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.Упаковка)) КАК ТоварыНаСкладахОстатки
	|ГДЕ
	|	(ТоварыНаСкладахОстатки.Склад.Контрагент.ОсновнойБухгалтерПокупателя = &ОсновнойБухгалтерПокупателя
	|			ИЛИ &ОсновнойБухгалтерПокупателя = НЕОПРЕДЕЛЕНО)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Остатки.Контрагент,
	|	ЕСТЬNULL(ВТ_Обороты.НетОборота, ЛОЖЬ) КАК НетОборота,
	|	ЕСТЬNULL(ВТ_ПоставщикиСпецификация.АктивнаяСпецификация, ЛОЖЬ) КАК АктивнаяСпецификация,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(КонтактнаяИнформация.Представление, """") КАК СТРОКА(500)) КАК Имейл,
	|	ВТ_Остатки.Бухгалтер,
	|	ВТ_Остатки.Склад,
	|	ВЫРАЗИТЬ(КонтактнаяИнформацияФизЛицо.Представление КАК СТРОКА(500)) КАК ФизЛицоМейл
	|ИЗ
	|	ВТ_Остатки КАК ВТ_Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Обороты КАК ВТ_Обороты
	|		ПО ВТ_Остатки.Контрагент = ВТ_Обороты.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоставщикиСпецификация КАК ВТ_ПоставщикиСпецификация
	|		ПО ВТ_Остатки.Контрагент = ВТ_ПоставщикиСпецификация.ПоставщикСпецификация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО ВТ_Остатки.Контрагент = КонтактнаяИнформация.Объект
	|			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыКонтрагентаДляОбменаДокументами))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформацияФизЛицо
	|		ПО (КонтактнаяИнформацияФизЛицо.Объект = &ФизЛицо)
	|			И (КонтактнаяИнформацияФизЛицо.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|			И (КонтактнаяИнформацияФизЛицо.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица))
	|ГДЕ
	|	(ЕСТЬNULL(ВТ_Обороты.НетОборота, ЛОЖЬ)
	//+++АК SHEP 2018.01.15 ИП-00017663 Работа с Неактивными спецификациями :
	//- в документ не должны попадать строки, если по этикетке есть движения за последние 60 дней.
	//- в документ не должны попадать строки, если по упаковке нет остатка на дату заполнения.
	//|			ИЛИ НЕ ЕСТЬNULL(ВТ_ПоставщикиСпецификация.АктивнаяСпецификация, ЛОЖЬ))
	|			И НЕ ЕСТЬNULL(ВТ_ПоставщикиСпецификация.АктивнаяСпецификация, ЛОЖЬ))
	//---АК SHEP 2018.01.15
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_Остатки.Контрагент.Наименование";
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаОстатковНеактивныеХолдинги()
	
	Возврат 
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Склады.Контрагент КАК Контрагент
	|ПОМЕСТИТЬ ВТ_ВсеКонтрагенты
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.Владелец = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.СторонняяПереработка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВТ_ВсеКонтрагенты.Контрагент КАК Контрагент,
	|	ИСТИНА КАК НетОборота
	|ПОМЕСТИТЬ ВТ_Обороты
	|ИЗ
	|	ВТ_ВсеКонтрагенты КАК ВТ_ВсеКонтрагенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТоварыНаСкладахОбороты.Склад.Контрагент КАК КонтрагентОборот,
	|			ТоварыНаСкладахОбороты.КоличествоОборот КАК КоличествоОборот
	|		ИЗ
	|			РегистрНакопления.ТоварыНаСкладах.Обороты(
	|					&НачалоПериода,
	|					&ДатаОстатков,
	|					,
	|					Склад.Владелец = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.СторонняяПереработка)
	|						И Номенклатура.ТипТовара = ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.Упаковка)) КАК ТоварыНаСкладахОбороты) КАК ТабОбороты
	|		ПО ВТ_ВсеКонтрагенты.Контрагент = ТабОбороты.КонтрагентОборот
	|ГДЕ
	|	ТабОбороты.КоличествоОборот ЕСТЬ NULL
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпецификацииПоставщиков.Поставщик КАК ПоставщикСпецификация,
	|	МАКСИМУМ(СпецификацииПоставщиков.ДатаКонца) КАК ДатаКонца,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СпецификацииПоставщиков.ДатаКонца = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК АктивнаяСпецификация
	|ПОМЕСТИТЬ ВТ_ПоставщикиСпецификация
	|ИЗ
	|	РегистрСведений.СпецификацииПоставщиков КАК СпецификацииПоставщиков
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацииПоставщиков.Поставщик
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПоставщикСпецификация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ТоварыНаСкладахОстатки.Склад.Контрагент КАК Контрагент,
	|	ТоварыНаСкладахОстатки.Склад.Контрагент.ОсновнойБухгалтерПокупателя.ФизЛицо КАК Бухгалтер,
	|	ТоварыНаСкладахОстатки.Склад
	|ПОМЕСТИТЬ ВТ_Остатки
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			&ДатаОстатков,
	|			Склад.Владелец = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.СторонняяПереработка)
	|				И Номенклатура.ТипТовара = ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.Упаковка)) КАК ТоварыНаСкладахОстатки
	|ГДЕ
	|	(ТоварыНаСкладахОстатки.Склад.Контрагент.ОсновнойБухгалтерПокупателя = &ОсновнойБухгалтерПокупателя
	|			ИЛИ &ОсновнойБухгалтерПокупателя = НЕОПРЕДЕЛЕНО)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Остатки.Контрагент,
	|	ВЫБОР
	|		КОГДА ВТ_Остатки.Контрагент.ГоловнойКонтрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА ВТ_Остатки.Контрагент
	|		ИНАЧЕ ВТ_Остатки.Контрагент.ГоловнойКонтрагент
	|	КОНЕЦ КАК ГоловнойКонтрагент,
	|	ЕСТЬNULL(ВТ_Обороты.НетОборота, ЛОЖЬ) КАК НетОборота,
	|	ЕСТЬNULL(ВТ_ПоставщикиСпецификация.АктивнаяСпецификация, ЛОЖЬ) КАК АктивнаяСпецификация,
	|	ВТ_Остатки.Бухгалтер,
	|	ВТ_Остатки.Склад,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(КонтактнаяИнформация.Представление, """") КАК СТРОКА(500)) КАК Имейл,
	|	ВЫРАЗИТЬ(КонтактнаяИнформацияФизЛицо.Представление КАК СТРОКА(500)) КАК ФизЛицоМейл
	|ПОМЕСТИТЬ ВТ_ВсеДанныеПоКонтрагентам
	|ИЗ
	|	ВТ_Остатки КАК ВТ_Остатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Обороты КАК ВТ_Обороты
	|		ПО ВТ_Остатки.Контрагент = ВТ_Обороты.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоставщикиСпецификация КАК ВТ_ПоставщикиСпецификация
	|		ПО ВТ_Остатки.Контрагент = ВТ_ПоставщикиСпецификация.ПоставщикСпецификация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО ВТ_Остатки.Контрагент = КонтактнаяИнформация.Объект
	|			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыКонтрагентаДляОбменаДокументами))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформацияФизЛицо
	|		ПО (КонтактнаяИнформацияФизЛицо.Объект = &ФизЛицо)
	|			И (КонтактнаяИнформацияФизЛицо.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|			И (КонтактнаяИнформацияФизЛицо.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица))
	|ГДЕ
	|	(ЕСТЬNULL(ВТ_Обороты.НетОборота, ЛОЖЬ)
	|			ИЛИ НЕ ЕСТЬNULL(ВТ_ПоставщикиСпецификация.АктивнаяСпецификация, ЛОЖЬ))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсеДанныеПоКонтрагентам.ГоловнойКонтрагент
	|ПОМЕСТИТЬ ВТ_АктивныеХолдинги
	|ИЗ
	|	ВТ_ВсеДанныеПоКонтрагентам КАК ВТ_ВсеДанныеПоКонтрагентам
	|ГДЕ
	|	(НЕ ВТ_ВсеДанныеПоКонтрагентам.НетОборота
	|			ИЛИ ВТ_ВсеДанныеПоКонтрагентам.АктивнаяСпецификация)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ВсеДанныеПоКонтрагентам.ГоловнойКонтрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсеДанныеПоКонтрагентам.Контрагент КАК Контрагент,
	|	ВТ_ВсеДанныеПоКонтрагентам.ГоловнойКонтрагент,
	|	ВТ_ВсеДанныеПоКонтрагентам.НетОборота,
	|	ВТ_ВсеДанныеПоКонтрагентам.АктивнаяСпецификация,
	|	ВТ_ВсеДанныеПоКонтрагентам.Бухгалтер,
	|	ВТ_ВсеДанныеПоКонтрагентам.Склад,
	|	ВТ_ВсеДанныеПоКонтрагентам.Имейл,
	|	ВТ_ВсеДанныеПоКонтрагентам.ФизЛицоМейл
	|ИЗ
	|	ВТ_ВсеДанныеПоКонтрагентам КАК ВТ_ВсеДанныеПоКонтрагентам
	|ГДЕ
	|	НЕ ВТ_ВсеДанныеПоКонтрагентам.ГоловнойКонтрагент В
	|				(ВЫБРАТЬ
	|					ВТ_АктивныеХолдинги.ГоловнойКонтрагент
	|				ИЗ
	|					ВТ_АктивныеХолдинги КАК ВТ_АктивныеХолдинги)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент
	|АВТОУПОРЯДОЧИВАНИЕ";
	
КонецФункции

&НаКлиенте
Процедура ОтправитьЗапросТехнологу(Команда)
	
	Если Не ПодтверждениеДействия("Отправить письмо технологу?") Тогда
		Возврат;
	КонецЕсли;
	
	СписокКонтрагентов = Новый СписокЗначений();
	
	Для каждого Строка Из Элементы.Контрагенты.ВыделенныеСтроки Цикл
		СписокКонтрагентов.Добавить(Объект.Контрагенты[Строка].Контрагент);
	КонецЦикла;
	
	//+++АК SHEP 2018.05.03 ИП-00018453: параметры перенёс в отдельную переменную, добавил в параметры Организацию
	//+++АК SHEP 2018.02.12 ИП-00017663: в параметры формы добавил поле "Дата"
	//ОткрытьФорму("Документ.ЗапросОстатковУпаковкиУПоставщиков.Форма.ФормаРедактированияПисьма", Новый Структура("Дата, ДокументСсылка, Заголовок, ТемаПисьма, ШаблонПисьма, СписокКонтрагентов, Назначение",
	//			Объект.Дата, Объект.Ссылка, "Отправка писем технологам",  ПолучитьШаблонТемыПисьмаТехнологам(), ПолучитьШаблонПисьмаТехнологам(), СписокКонтрагентов, "ЗапросТехнологам"),ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	ПараметрыОткрываемойФормы = Новый Структура("Дата, ДокументСсылка, Заголовок, ТемаПисьма, ШаблонПисьма, СписокКонтрагентов, Назначение",
		Объект.Дата, Объект.Ссылка, "Отправка писем технологам",  ПолучитьШаблонТемыПисьмаТехнологам(), ПолучитьШаблонПисьмаТехнологам(), СписокКонтрагентов, "ЗапросТехнологам");
	ПараметрыОткрываемойФормы.Вставить("Организация", Объект.Организация);
	ОткрытьФорму("Документ.ЗапросОстатковУпаковкиУПоставщиков.Форма.ФормаРедактированияПисьма", ПараметрыОткрываемойФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	//---АК SHEP 2018.05.03
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЗапросВсемТехнологам(Команда)
	
	Если Не ПодтверждениеДействия("Отправить письма всем технологам?") Тогда
		Возврат;
	КонецЕсли;
	
	СписокКонтрагентов = Новый СписокЗначений();
	
	Для каждого Строка Из Объект.Контрагенты Цикл
		СписокКонтрагентов.Добавить(Строка.Контрагент);
	КонецЦикла;
	
	//+++АК SHEP 2018.05.03 ИП-00018453: параметры перенёс в отдельную переменную, добавил в параметры Организацию
	//+++АК SHEP 2018.02.12 ИП-00017663: в параметры формы добавил поле "Дата"
	//ОткрытьФорму("Документ.ЗапросОстатковУпаковкиУПоставщиков.Форма.ФормаРедактированияПисьма", Новый Структура("Дата, ДокументСсылка, Заголовок, ТемаПисьма, ШаблонПисьма, СписокКонтрагентов, Назначение",
	//			Объект.Дата, Объект.Ссылка, "Отправка писем технологам",  ПолучитьШаблонТемыПисьмаТехнологам(), ПолучитьШаблонПисьмаТехнологам(), СписокКонтрагентов, "ЗапросТехнологам"),ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	ПараметрыОткрываемойФормы = Новый Структура("Дата, ДокументСсылка, Заголовок, ТемаПисьма, ШаблонПисьма, СписокКонтрагентов, Назначение",
		Объект.Дата, Объект.Ссылка, "Отправка писем технологам",  ПолучитьШаблонТемыПисьмаТехнологам(), ПолучитьШаблонПисьмаТехнологам(), СписокКонтрагентов, "ЗапросТехнологам");
	ПараметрыОткрываемойФормы.Вставить("Организация", Объект.Организация);
    ОткрытьФорму("Документ.ЗапросОстатковУпаковкиУПоставщиков.Форма.ФормаРедактированияПисьма", ПараметрыОткрываемойФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	//---АК SHEP 2018.05.03
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьКонтрагентамБезСпецификации(Команда)

	Если Не ПодтверждениеДействия("Отправить письмо контрагентам и технологам?") Тогда
		Возврат;
	КонецЕсли;
	
	СписокКонтрагентов = Новый СписокЗначений();
	
	Для каждого Строка Из Объект.Контрагенты Цикл
		СписокКонтрагентов.Добавить(Строка.Контрагент);
	КонецЦикла;
	
	//+++АК SHEP 2018.05.03 ИП-00018453: параметры перенёс в отдельную переменную, добавил в параметры Организацию
	//ОткрытьФорму("Документ.ЗапросОстатковУпаковкиУПоставщиков.Форма.ФормаРедактированияПисьма", Новый Структура("Дата, Заголовок, ТемаПисьма, ШаблонПисьма, СписокКонтрагентов, Назначение",
	//			Объект.Дата, "Отправка писем контрагентам (без спецификации) и технологам",  ПолучитьШаблонТемыПисьмаКонтрагентамБезСпецификации(), "", СписокКонтрагентов, "КонтрагентыБезСпецификации"),ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	ПараметрыОткрываемойФормы = Новый Структура("Дата, Заголовок, ТемаПисьма, ШаблонПисьма, СписокКонтрагентов, Назначение",
		Объект.Дата, "Отправка писем контрагентам (без спецификации) и технологам",  ПолучитьШаблонТемыПисьмаКонтрагентамБезСпецификации(), "", СписокКонтрагентов, "КонтрагентыБезСпецификации");
	ПараметрыОткрываемойФормы.Вставить("Организация", Объект.Организация);
    ОткрытьФорму("Документ.ЗапросОстатковУпаковкиУПоставщиков.Форма.ФормаРедактированияПисьма", ПараметрыОткрываемойФормы, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);
	//---АК SHEP 2018.05.03
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьШаблонТемыПисьмаТехнологам()
	
	//+++АК SHEP 2018.01.15 ИП-00017663
	Если Объект.ВидЗаполнения = "ОстаткиБезСпецификаций" Тогда
		//Возврат "Отсутствует информация по остаткам упаковки/этикетки за "+ НРег(Формат(Объект.Дата, "ДФ='ММММ'"))+ " месяц";
		Возврат "Список контрагентов с неактивной спецификацией (не было оборотов за последние 60 дней)"
		+ ?(Элементы.Контрагенты.ВыделенныеСтроки.Количество() = 1, ", Контрагент: #Контрагент", ""); //+++АК SHEP 2018.02.06
	КонецЕсли;
	//---АК SHEP 2018.01.15
	
	Возврат 	
	"Отсутствует информация по остаткам упаковки/этикетки (Контрагент: #Контрагент) за "+ НРег(Формат(Объект.Дата, "ДФ='ММММ'"))+ " месяц";

КонецФункции

&НаКлиенте
Функция ПолучитьШаблонТемыПисьмаКонтрагентамБезСпецификации()
	
	Возврат 
	"Отчет по неиспользованной упаковке/этикетке за " + НРег(Формат(Объект.Дата, "ДФ='ММММ'"))+ " месяц" + " по КА #Контрагент" + 
			" с неактивной спецификацией (не было оборотов за последние 60 дней)";
	
	//"Отчет списания по итогам инвентаризации на период с "+ Формат(НачалоДня(Объект.Дата) - 86400 * 10, "ДФ='dd.MM.yyyy'")
	//		+ " по " + Формат(Объект.Дата, "ДФ='dd.MM.yyyy'") + " по КА #Контрагент";

КонецФункции

&НаКлиенте
Функция ПолучитьШаблонПисьмаТехнологам()
	
	//+++АК SHEP 2018.01.15 ИП-00017663
	Если Объект.ВидЗаполнения = "ОстаткиБезСпецификаций" Тогда
		Возврат
		"<HTML>
		|<HEAD>
		|<META HTTP-EQUIV='Content-Type' CONTENT='text/html; CHARSET=utf-8'>
		|<TITLE></TITLE></HEAD><BODY>
		|Добрый день.<br>
		//+++АК SHEP 2018.02.06 ИП-00017663
		//|Отправьте, пожалуйста, запрос о предоставлении информации (инвентаризации) о фактических остатках неиспользованной упаковки/этикетки по следующим контрагентам:
		|По данным поставщикам есть неактивные спецификации (не было оборотов за последние 60 дней).
		|Просьба сообщить, что делать с неактивными спецификациями. Прошу отписаться по каждому КА, кто на своей печати, а с кем мы прекратили сотрудничество 
		|для списания виртуальных остатков в базе.
		//---АК SHEP 2018.02.06 ИП-00017663
		|<br>
		|#НачалоПовтора
		|<b>#Контрагент:</b>
		|#ТаблицаУпаковкиКонтрагента
		|<br>
		|#КонецПовтора
		|
		|<br><br>Спасибо!
		|</BODY></HTML>"
	КонецЕсли;
	//---АК SHEP 2018.01.15
	
	Возврат 
	
	"Добрый день.
	|Отправьте, пожалуйста, запрос о предоставлении информации (инвентаризации) о фактических остатках неиспользованной упаковки/этикетки по контрагенту #Контрагент за "+ Формат(Объект.Дата,"ДФ='ММММ гггг'")+ " г.
	|
	|Спасибо!";

КонецФункции

&НаКлиенте
Функция ПодтверждениеДействия(ТекстВопроса)
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Текст = "ru = """+ТекстВопроса+""";"
	+ " en = ""Do you want to continue?""";
	Ответ = Вопрос(НСтр(Текст), Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьПоОстаткам(Команда)
	
	Ответ = Вопрос("Перед заполнением табличная часть контрагентов будет очищена. Продолжить", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;	
	
	Объект.Контрагенты.Очистить();
	
	ЗаполнитьНаСервере( ,"ОстаткиБезСпецификаций");
	
	ВидЗаполненияПриИзменении(Элементы.ВидЗаполнения); //+++АК SHEP 2018.01.16 ИП-00017663

КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыЗаполнитьПоОстаткамНеактивныеХолдинги(Команда)
	
	Ответ = Вопрос("Перед заполнением табличная часть контрагентов будет очищена. Продолжить", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;	
	
	Объект.Контрагенты.Очистить();
	
	ЗаполнитьНаСервере( ,"ОстаткиНеактивныеХолдинги");

КонецПроцедуры


//---АК mika


&НаКлиенте
Процедура ВидЗаполненияПриИзменении(Элемент)
	
	//+++АК SHEP 2018.01.16 ИП-00017663
	Если Объект.ВидЗаполнения = "ОстаткиБезСпецификаций" Тогда
		ПодсветитьКонтрагентовРозовымНаСервере();
	КонецЕсли;
	//---АК SHEP 2018.01.16
	
КонецПроцедуры

//+++АК SHEP 2018.01.16 ИП-00017663
&НаСервере
Процедура ПодсветитьКонтрагентовРозовымНаСервере()
	
	Для Каждого СтрокаТЧ Из Объект.Контрагенты Цикл
		//+++АК SHEP 2018.05.03 ИП-00018453
		//ТЗнНоменклатуры = Документы.ЗапросОстатковУпаковкиУПоставщиков.СформироватьОтчётНаСервере(СтрокаТЧ.Контрагент, Объект.Дата, Истина);
		ТЗнНоменклатуры = Документы.ЗапросОстатковУпаковкиУПоставщиков.СформироватьОтчётНаСервере(Объект.Организация, СтрокаТЧ.Контрагент, Объект.Дата, Истина);
		//---АК SHEP 2018.05.03
		Для Каждого СтрокаТЗн Из ТЗнНоменклатуры Цикл
			Если СтрокаТЗн.Перемещено = 0 И СтрокаТЗн.Списано = 0 И СтрокаТЗн.Остаток <> 0 Тогда
				СтрокаТЧ.ЧастьУпаковкиВиситНаОстаткеАЧастьИспользуется = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

//+++АК SHEP 2018.01.16 ИП-00017663
&НаКлиенте
Процедура ПодсветитьКонтрагентовРозовым(Команда)
	ПодсветитьКонтрагентовРозовымНаСервере();
КонецПроцедуры

//+++ AK suvv 2018.10.10 ИП-00020030
&НаКлиенте
Процедура ОтветственныйБухгалтерПриИзменении(Элемент)
	
	КнопкаЗаполнитьТолькоПоСебе = Элементы.Контрагенты.КоманднаяПанель.ПодчиненныеЭлементы.КонтрагентыГруппа1.ПодчиненныеЭлементы.КонтрагентыЗаполнитьТолькоПоСебе;
	Если ЗначениеЗаполнено(Объект.ОтветственныйБухгалтер) Тогда
		КнопкаЗаполнитьТолькоПоСебе.Заголовок = "Заполнить только по ответственному бухгалтеру";
	Иначе
		КнопкаЗаполнитьТолькоПоСебе.Заголовок = "Заполнить только по себе";
	КонецЕсли;
	
КонецПроцедуры //--- AK suvv
