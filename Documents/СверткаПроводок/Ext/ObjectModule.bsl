
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ЭтоСверткаБух Тогда
		Счет411 = ПланыСчетов.Финансовый.Товары;
		Счет441 = ПланыСчетов.Финансовый.ЗатратыТоварныеДляРаспределения;
		Сообщить("Начало выполнения запроса " + ТекущаяДата());
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("НачПериода", Новый Граница(НачалоМесяца(Дата), ВидГраницы.Включая));
		Запрос.УстановитьПараметр("КонПериода", Новый Граница(КонецМесяца(Дата), ВидГраницы.Включая));
		Запрос.Текст = "ВЫБРАТЬ
		               |	ФинансовыйОбороты.Счет,
		               |	ФинансовыйОбороты.Субконто1,
		               |	ФинансовыйОбороты.Субконто2,
		               |	ФинансовыйОбороты.Субконто3,
		               |	ФинансовыйОбороты.КорСчет,
		               |	ФинансовыйОбороты.КорСубконто1,
		               |	ФинансовыйОбороты.КорСубконто2,
		               |	ФинансовыйОбороты.КорСубконто3,
		               |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот,
		               |	СУММА(ФинансовыйОбороты.КоличествоОборотДт) КАК КоличествоОборотДт,
		               |	СУММА(ФинансовыйОбороты.КоличествоОборотКт) КАК КоличествоОборотКт
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(&НачПериода, &КонПериода, Регистратор, Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.Товары), , , КорСчет В (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ЗатратыТоварныеДляРаспределения)), ) КАК ФинансовыйОбороты
		               |ГДЕ
		               |	НЕ ФинансовыйОбороты.Регистратор ССЫЛКА Документ.СверткаПроводок
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.Счет,
		               |	ФинансовыйОбороты.Субконто1,
		               |	ФинансовыйОбороты.Субконто2,
		               |	ФинансовыйОбороты.Субконто3,
		               |	ФинансовыйОбороты.КорСчет,
		               |	ФинансовыйОбороты.КорСубконто1,
		               |	ФинансовыйОбороты.КорСубконто2,
		               |	ФинансовыйОбороты.КорСубконто3";
					   
		Выборка = Запрос.Выполнить().Выбрать();
		Сообщить("Конец выполнения запроса " + ТекущаяДата());
		
		Сообщить("Начало заполнения движений " + ТекущаяДата());
		Пока Выборка.Следующий() Цикл
			Если Выборка.СуммаОборот = 0
				И Выборка.КоличествоОборотКт = 0
				И Выборка.КоличествоОборотДт = 0 Тогда
				Продолжить;
			КонецЕсли;	
			Проводка = Движения.Финансовый.Добавить();
			Проводка.Период = НачалоМесяца(Дата);
			Проводка.СчетДт = Выборка.Счет;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Выборка.Субконто1);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, Выборка.Субконто2);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, Выборка.Субконто3);
			
			Проводка.СчетКт = Выборка.КорСчет;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, Выборка.КорСубконто1);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, Выборка.КорСубконто2);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, Выборка.КорСубконто3);
			
			Проводка.Сумма = Выборка.СуммаОборот;
			Проводка.КоличествоДт = Выборка.КоличествоОборотКт * (-1) + Выборка.КоличествоОборотДт;
		КонецЦикла;
		Сообщить("Конец заполнения движений " + ТекущаяДата());
		
		Сообщить("Отключение итогов рег бухии " + ТекущаяДата());
		РегистрыБухгалтерии.Финансовый.УстановитьИспользованиеИтогов(Ложь);
		
		Сообщить("Начало запись движений текущего документа " + ТекущаяДата());
		Движения.Финансовый.РазрешитьЗаписьБезПроверки = Истина;
		Движения.Финансовый.ОбменДанными.Загрузка = Истина;
		Движения.Финансовый.Записать();
		Движения.Финансовый.Записывать = Ложь;
		Сообщить("Конец запись движений текущего документа " + ТекущаяДата());
	КонецЕсли;
	
	Если ЭтоСверткаТоварыНаСкладах Тогда
		Сообщить("Начало выполнения запроса " + ТекущаяДата());
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("ДатаОстатки", Новый Граница(НачалоМесяца(Дата) - 1, ВидГраницы.Включая));
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТоварыНаСкладахОстатки.Склад,
		               |	ТоварыНаСкладахОстатки.Номенклатура,
		               |	ТоварыНаСкладахОстатки.Характеристика,
		               |	ТоварыНаСкладахОстатки.ЕдиницаИзмерения,
		               |	ТоварыНаСкладахОстатки.ДатаПроизводства,
		               |	ТоварыНаСкладахОстатки.КоличествоОстаток
		               |ИЗ
		               |	РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаОстатки, ) КАК ТоварыНаСкладахОстатки";
					   
		Выборка = Запрос.Выполнить().Выбрать();
		Сообщить("Конец выполнения запроса " + ТекущаяДата());
		
		Сообщить("Начало заполнения движений " + ТекущаяДата());
		Пока Выборка.Следующий() Цикл
			Движение = Движения.ТоварыНаСкладах.ДобавитьПриход();
			Движение.Период = НачалоМесяца(Дата);
			Движение.Склад = Выборка.Склад;
			Движение.Номенклатура = Выборка.Номенклатура;
			Движение.Характеристика = Выборка.Характеристика;
			Движение.ЕдиницаИзмерения = Выборка.ЕдиницаИзмерения;
			Движение.ДатаПроизводства = Выборка.ДатаПроизводства;
			Движение.Количество = Выборка.КоличествоОстаток;
		КонецЦикла;
		Сообщить("Конец заполнения движений " + ТекущаяДата());
		
		РегистрыНакопления.ТоварыНаСкладах.УстановитьИспользованиеИтогов(Ложь);
		Сообщить("Начало запись движений текущего документа " + ТекущаяДата());
		Движения.ТоварыНаСкладах.ОбменДанными.Загрузка = Истина;
		Движения.ТоварыНаСкладах.Записать();
		Движения.ТоварыНаСкладах.Записывать = Ложь;
		Сообщить("Конец запись движений текущего документа " + ТекущаяДата());
					   
	КонецЕсли;
	
	Если ЭтоСверткаДвиженияПоЛистамУчета Тогда
		Сообщить("Начало выполнения запроса " + ТекущаяДата());
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("ДатаОстатки", Новый Граница(НачалоМесяца(Дата) - 1, ВидГраницы.Включая));
		Запрос.Текст = "ВЫБРАТЬ
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.СтруктурнаяЕдиница,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.ВидДвиженияТовара,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот
		               |ИЗ
		               |	РегистрНакопления.ДвиженияТоваровПоЛистамУчета.Обороты(ДАТАВРЕМЯ(2000, 1, 1), &ДатаОстатки, , ) КАК ДвиженияТоваровПоЛистамУчетаОбороты";
					   
		Выборка = Запрос.Выполнить().Выбрать();
		Сообщить("Конец выполнения запроса " + ТекущаяДата());
		
		Сообщить("Начало заполнения движений " + ТекущаяДата());
		Пока Выборка.Следующий() Цикл
			Движение = Движения.ДвиженияТоваровПоЛистамУчета.Добавить();
			Движение.Период = НачалоМесяца(Дата);
			Движение.СтруктурнаяЕдиница = Выборка.СтруктурнаяЕдиница;
			Движение.ВидДвиженияТовара = Выборка.ВидДвиженияТовара;
			Движение.Номенклатура = Выборка.Номенклатура;
			Движение.Количество = Выборка.КоличествоОборот;
		КонецЦикла;
		Сообщить("Конец заполнения движений " + ТекущаяДата());
		
		РегистрыНакопления.ДвиженияТоваровПоЛистамУчета.УстановитьИспользованиеИтогов(Ложь);
		Сообщить("Начало запись движений текущего документа " + ТекущаяДата());
		Движения.ДвиженияТоваровПоЛистамУчета.ОбменДанными.Загрузка = Истина;
		Движения.ДвиженияТоваровПоЛистамУчета.Записать();
		Движения.ДвиженияТоваровПоЛистамУчета.Записывать = Ложь;
		Сообщить("Конец запись движений текущего документа " + ТекущаяДата());
					   
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьПроводкиИзРегистра_Копия() Экспорт
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("10.0.0.40");
	
	Если ADOСоединение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Сообщить("Начало очистки проводок регистра за месяц " + ТекущаяДата());
	ТекстЗапросаSQL = "DELETE FROM [IzbenkaFin_deb_new].[dbo].[_AccRgED106]
						|FROM [IzbenkaFin_deb_new].[dbo].[_AccRgED106] as Sub
						|INNER JOIN (SELECT
						|T1._RecorderTRef,
						|T1._RecorderRRef,
						|T1._LineNo
						|FROM IzbenkaFin_deb_new.dbo._AccRg85 T1 WITH(NOLOCK)
						|WHERE T1._Period >= '40" + Формат(НачалоМесяца(Дата), "ДФ=yy-MM-ddTHH:mm:ss") + "' AND T1._Period <= '40" + Формат(КонецМесяца(Дата), "ДФ=yy-MM-ddTHH:mm:ss") + "' AND ((T1._AccountDtRRef = 0xA995E9578F47B55A4AC4691C38FEF906 AND T1._AccountCtRRef = 0xA5C3D8C733BD169A4720AD85158C455B) OR (T1._AccountDtRRef = 0xA5C3D8C733BD169A4720AD85158C455B AND T1._AccountCtRRef = 0xA995E9578F47B55A4AC4691C38FEF906))) as a
						|on Sub._RecorderRRef = a._RecorderRRef and Sub._LineNo = a._LineNo
						|WHERE Sub._Period >= '40" + Формат(НачалоМесяца(Дата), "ДФ=yy-MM-ddTHH:mm:ss") + "' AND Sub._Period <= '40" + Формат(КонецМесяца(Дата), "ДФ=yy-MM-ddTHH:mm:ss") + "'
						|	AND Sub._RecorderTRef <> 0x00001958
						|
						|DELETE FROM [IzbenkaFin_deb_new].[dbo].[_AccRg85]
      					|WHERE _Period >= '40" + Формат(НачалоМесяца(Дата), "ДФ=yy-MM-ddTHH:mm:ss") + "' AND _Period <= '40" + Формат(КонецМесяца(Дата), "ДФ=yy-MM-ddTHH:mm:ss") + "' AND ((_AccountDtRRef = 0xA995E9578F47B55A4AC4691C38FEF906 AND _AccountCtRRef = 0xA5C3D8C733BD169A4720AD85158C455B) OR (_AccountDtRRef = 0xA5C3D8C733BD169A4720AD85158C455B AND _AccountCtRRef = 0xA995E9578F47B55A4AC4691C38FEF906))
						|	AND _RecorderTRef <> 0x00001958
						|
						|";
						
	ADOСоединение.Execute(ТекстЗапросаSQL);
	Сообщить("Конец очистки проводок регистра за месяц " + ТекущаяДата());
	
	Сообщить("Начало включение итогов рег бухии " + ТекущаяДата());
	РегистрыБухгалтерии.Финансовый.УстановитьИспользованиеИтогов(Истина);
	Сообщить("Конец включение итогов рег бухии " + ТекущаяДата());
	
КонецПроцедуры	


Процедура УдалитьПроводкиИзРегистра() Экспорт
	
	Если ОбщегоНазначения.ЭтоКопияБазы() Тогда
		УдалитьПроводкиИзРегистра_Копия();
		Возврат;
	КонецЕсли;	
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("10.0.0.40");
	
	Если ADOСоединение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоСверткаБух Тогда
		Сообщить("Начало очистки проводок регистра за месяц " + ТекущаяДата());
		ТекстЗапросаSQL = "DELETE FROM [IzbenkaFin].[dbo].[_AccRgED106]
							|FROM [IzbenkaFin].[dbo].[_AccRgED106] as Sub
							|INNER JOIN (SELECT
							|T1._RecorderTRef,
							|T1._RecorderRRef,
							|T1._LineNo
							|FROM IzbenkaFin.dbo._AccRg85 T1 WITH(NOLOCK)
							|WHERE T1._Period >= '40" + Формат(НачалоМесяца(Дата), "ДФ=yy-MM-ddTHH:mm:ss") + "' AND T1._Period <= '40" + Формат(КонецМесяца(Дата), "ДФ=yy-MM-ddTHH:mm:ss") + "' AND ((T1._AccountDtRRef = 0xA995E9578F47B55A4AC4691C38FEF906 AND T1._AccountCtRRef = 0xA5C3D8C733BD169A4720AD85158C455B) OR (T1._AccountDtRRef = 0xA5C3D8C733BD169A4720AD85158C455B AND T1._AccountCtRRef = 0xA995E9578F47B55A4AC4691C38FEF906))) as a
							|on Sub._RecorderRRef = a._RecorderRRef and Sub._LineNo = a._LineNo
							|WHERE Sub._Period >= '40" + Формат(НачалоМесяца(Дата), "ДФ=yy-MM-ddTHH:mm:ss") + "' AND Sub._Period <= '40" + Формат(КонецМесяца(Дата), "ДФ=yy-MM-ddTHH:mm:ss") + "'
							|	AND Sub._RecorderTRef <> 0x00001958
							|
							|DELETE FROM [IzbenkaFin].[dbo].[_AccRg85]
	      					|WHERE _Period >= '40" + Формат(НачалоМесяца(Дата), "ДФ=yy-MM-ddTHH:mm:ss") + "' AND _Period <= '40" + Формат(КонецМесяца(Дата), "ДФ=yy-MM-ddTHH:mm:ss") + "' AND ((_AccountDtRRef = 0xA995E9578F47B55A4AC4691C38FEF906 AND _AccountCtRRef = 0xA5C3D8C733BD169A4720AD85158C455B) OR (_AccountDtRRef = 0xA5C3D8C733BD169A4720AD85158C455B AND _AccountCtRRef = 0xA995E9578F47B55A4AC4691C38FEF906))
							|	AND _RecorderTRef <> 0x00001958
							|
							|";
							
		ADOСоединение.Execute(ТекстЗапросаSQL);
		Сообщить("Конец очистки проводок регистра за месяц " + ТекущаяДата());
		
		Сообщить("Начало включение итогов рег бухии " + ТекущаяДата());
		РегистрыБухгалтерии.Финансовый.УстановитьИспользованиеИтогов(Истина);
		Сообщить("Конец включение итогов рег бухии " + ТекущаяДата());
	КонецЕсли;
	
	Если ЭтоСверткаТоварыНаСкладах Тогда
		
		Запрос = Новый Запрос();
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		               |	ТоварыНаСкладах.Регистратор
		               |ИЗ
		               |	РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ТоварыНаСкладах.Период";
					   
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Набор = РегистрыНакопления.ТоварыНаСкладах.СоздатьНаборЗаписей();
			Набор.Отбор.Регистратор.Установить(Выборка.Регистратор);
			Набор.Прочитать();
			Набор.Записать();
		КонецЦикла;
		
		Сообщить("Начало очистки проводок регистра за месяц " + ТекущаяДата());
		ТекстЗапросаSQL = "DELETE FROM [IzbenkaFin].[dbo].[_AccumRg3245]
	      					|WHERE _Period <= '40" + Формат(НачалоМесяца(Дата) - 1, "ДФ=yy-MM-ddTHH:mm:ss") + "'
							|
							|";
							
		ADOСоединение.Execute(ТекстЗапросаSQL);
		Сообщить("Конец очистки проводок регистра за месяц " + ТекущаяДата());
		
		Сообщить("Начало включение итогов рег бухии " + ТекущаяДата());
		РегистрыНакопления.ТоварыНаСкладах.УстановитьИспользованиеИтогов(Истина);
		Сообщить("Конец включение итогов рег бухии " + ТекущаяДата());
	КонецЕсли;
	
	Если ЭтоСверткаДвиженияПоЛистамУчета Тогда
		Сообщить("Начало очистки проводок регистра за месяц " + ТекущаяДата());
		ТекстЗапросаSQL = "DELETE FROM [IzbenkaFin].[dbo].[_AccumRg3863]
	      					|WHERE _Period <= '40" + Формат(НачалоМесяца(Дата) - 1, "ДФ=yy-MM-ddTHH:mm:ss") + "'
							|
							|";
							
		ADOСоединение.Execute(ТекстЗапросаSQL);
		Сообщить("Конец очистки проводок регистра за месяц " + ТекущаяДата());
		
		Сообщить("Начало включение итогов рег бухии " + ТекущаяДата());
		РегистрыНакопления.ДвиженияТоваровПоЛистамУчета.УстановитьИспользованиеИтогов(Истина);
		Сообщить("Конец включение итогов рег бухии " + ТекущаяДата());
	КонецЕсли;
	
КонецПроцедуры	
