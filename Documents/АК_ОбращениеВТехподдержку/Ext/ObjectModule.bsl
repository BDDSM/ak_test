
Процедура ЗаполнитьПоДокументуОснованию(ДокОснование)
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДокОснование);
	ЭтотОбъект.ДокументОснование = ДокОснование;
	ЭтотОбъект.Дата = ТекущаяДата();
	ЭтотОбъект.УстановитьНовыйНомер();
	ЭтотОбъект.СтатусОбращения = ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Направлено");
	
КонецПроцедуры

Процедура ТорговаяТочкаПриИзменении() Экспорт
	
	ПомощникТТ = ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка");
	УправляющийТТ = ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка");
	
	Если НЕ ЗначениеЗаполнено(ТорговаяТочка) Тогда Возврат; КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	РолиПользователейСоставРоли.Сотрудник КАК ПомощникТТ,
		//|	РолиПользователейСоставРоли.Сотрудник.Руководитель КАК УправляющийТТ,
		|	СоответствиеОбъектРольСрезПоследних.РольПользователя.Родитель КАК РольУправляющего
		|ИЗ
		|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
		|			,
		|			ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
		|				И Объект = &ТорговаяТочка) КАК СоответствиеОбъектРольСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = РолиПользователейСоставРоли.Ссылка");
	Запрос.УстановитьПараметр("ТорговаяТочка", ТорговаяТочка);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда Возврат; КонецЕсли;
	
	ВыборкаЗапроса = Результат.Выбрать();
	Если ВыборкаЗапроса.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаЗапроса);
		Если ЗначениеЗаполнено(ВыборкаЗапроса.ПомощникТТ) И ЗначениеЗаполнено(ВыборкаЗапроса.РольУправляющего) Тогда
			Если ВыборкаЗапроса.РольУправляющего.СоставРоли.Количество() Тогда
				УправляющийТТ=ВыборкаЗапроса.РольУправляющего.СоставРоли[0].Сотрудник;
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли;
	

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Автор = ПараметрыСеанса.ТекущийПользователь;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Если ДанныеЗаполнения.Свойство("ДокументОснование") Тогда
			ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения.ДокументОснование);
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
		ЭтотОбъект.СтатусОбращения = ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Направлено");
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.АК_ОбращениеВТехподдержку") Тогда
		ЗаполнитьПоДокументуОснованию(ДанныеЗаполнения.ДокументОснование);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Отказ Тогда Возврат; КонецЕсли;
	
	Если ЭтоНовый() Тогда
		СтараяРольИсполнителя = ПредопределенноеЗначение("Справочник.РолиИсполнителей.ПустаяСсылка");
		СтарыйСтатусОбращения = ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.ПустаяСсылка");
	Иначе
		СтараяРольИсполнителя = Ссылка.РольИсполнителя;
		СтарыйСтатусОбращения = Ссылка.СтатусОбращения;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтатусОбращения) Тогда
		СтатусОбращения = ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Направлено");
	КонецЕсли;
	
	Если СтараяРольИсполнителя <> РольИсполнителя Тогда
		ДополнительныеСвойства.Вставить("ОтправлятьСообщения", Истина);
	КонецЕсли;
	
	Если СтатусОбращения <> СтарыйСтатусОбращения Тогда
		ДополнительныеСвойства.Вставить("ОтправлятьСообщения", Истина);
		ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
		
		СтрокаТЧСтатусов = ИзменениеСтатусов.Добавить();
		СтрокаТЧСтатусов.ДатаИзменения = ТекущаяДата();
		СтрокаТЧСтатусов.Исполнитель = ?(ЗначениеЗаполнено(ТекущийПользователь.ФизЛицо), ТекущийПользователь.ФизЛицо, ТекущийПользователь);
		СтрокаТЧСтатусов.Статус = СтатусОбращения;
		СтрокаТЧСтатусов.Комментарий = Комментарий;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(ТипОбращения) И ТипОбращения.Оповещения.Количество() = 0 Тогда
	    // Если он не заполнен, сообщим об этом пользователю
	    Сообщение = Новый СообщениеПользователю();
	    Сообщение.Текст = "В типе обращения не указаны оповещения!";
	    Сообщение.Поле = "ТипОбращения";
	    Сообщение.УстановитьДанные(ЭтотОбъект);
	    Сообщение.Сообщить();
	        
	    Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Исполнитель) И НЕ ЗначениеЗаполнено(РольИсполнителя) И НЕ ЗначениеЗаполнено(ТипРолиИсполнителя) Тогда
		ПроверяемыеРеквизиты.Добавить("РольИсполнителя");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если Отказ Тогда Возврат; КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("ОтправлятьСообщения") Тогда
		ОтправитьСообщениеИсполнителям();
		ДополнительныеСвойства.Очистить();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		Если СтатусОбращения = ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Проверено") И ДокументОснование.СтатусОбращения <> СтатусОбращения Тогда
			ДокументОснованиеОбъект = ДокументОснование.ПолучитьОбъект();
			ДокументОснованиеОбъект.Комментарий = Комментарий;
			ДокументОснованиеОбъект.СтатусОбращения = СтатусОбращения;
			ДокументОснованиеОбъект.Записать();
		ИначеЕсли СтатусОбращения = ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Отменено") И ДокументОснование.СтатусОбращения <> СтатусОбращения Тогда
			ДокументОснованиеОбъект = ДокументОснование.ПолучитьОбъект();
			ДокументОснованиеОбъект.Комментарий = Комментарий;
			ДокументОснованиеОбъект.СтатусОбращения = СтатусОбращения;
			ДокументОснованиеОбъект.Записать();
		ИначеЕсли СтатусОбращения = ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Направлено")
		  И ДокументОснование.СтатусОбращения <> ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Переадресовано") Тогда
			ДокументОснованиеОбъект = ДокументОснование.ПолучитьОбъект();
			ДокументОснованиеОбъект.Комментарий = Комментарий;
			ДокументОснованиеОбъект.СтатусОбращения = ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Переадресовано");
			ДокументОснованиеОбъект.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтправитьСообщениеИсполнителям()
	
	СоздаватьСообщения = ЗначениеЗаполнено(РольИсполнителя);
	СтруктураСообщения = Новый Структура;
	СтруктураСообщения.Вставить("ТипСообщения", Перечисления.ТипыСообщенийМОС.ИнформационноеСообщение);
	СтруктураСообщения.Вставить("ВидПолучателей", Перечисления.ВидыПолучателейМОС.УказаннаяРоль);
	СтруктураСообщения.Вставить("РольПолучателя", РольИсполнителя);
	СтруктураСообщения.Вставить("Тема", Строка(Ссылка));
	
	//ФД1 = Новый ФорматированныйДокумент;
	//ФД1.Добавить("У Вас новое обращение в тех. поддержку: ");
	//ФД1.Добавить(, ТипЭлементаФорматированногоДокумента.ПереводСтроки);
	//ФД1.Добавить(Строка(Ссылка));
	//
	//ТекстФД1 = ""; КартинкиФД1 = "";
	//ФД1.ПолучитьHTML(ТекстФД1, КартинкиФД1);
	//
	//ТекстФД1 = СтрЗаменить(ТекстФД1, "<body>", "<body>
	//	|<p>У Вас новое обращение в тех. поддержку: </br>
	//	|<a href=""" + ПолучитьНавигационнуюСсылку(ЭтотОбъект) + """>" + Строка(Ссылка) + "</a>
	//	|</p>");
	//ФД1.УстановитьHTML(ТекстФД1, КартинкиФД1);
	//
	//СтруктураСообщения.Вставить("ФорматированиеТекста", Истина);
	//СтруктураСообщения.Вставить("ФД", Новый ХранилищеЗначения(ФД1));
	
	ТЗнРолиПолучателей = Новый ТаблицаЗначений;
	ТЗнРолиПолучателей.Колонки.Добавить("Роль");
	
	Если СтатусОбращения = ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Направлено") Тогда
		ТекстСообщения = "У Вас новое обращение в тех. поддержку: " + Символы.ПС + Строка(Ссылка);
	Иначе
		ТекстСообщения = "Новый статус документа: " + Символы.ПС + Строка(СтатусОбращения);
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	АК_ОбращениеВТехподдержку.Звонящий КАК ФизЛицоДляОтправки
			|ИЗ
			|	Документ.АК_ОбращениеВТехподдержку КАК АК_ОбращениеВТехподдержку
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОбращенийПрочие.Оповещения КАК ТипыОбращенийПрочиеОповещения
			|		ПО АК_ОбращениеВТехподдержку.ТипОбращения = ТипыОбращенийПрочиеОповещения.Ссылка
			|			И (ТипыОбращенийПрочиеОповещения.Сообщения1С = ИСТИНА)
			|			И (ТипыОбращенийПрочиеОповещения.РольИсполнителя = ЗНАЧЕНИЕ(Справочник.РолиИсполнителей.Инициатор))
			|ГДЕ
			|	АК_ОбращениеВТехподдержку.Ссылка = &Ссылка
			|	И АК_ОбращениеВТехподдержку.Звонящий <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	АК_ОбращениеВТехподдержку.ПомощникТТ
			|ИЗ
			|	Документ.АК_ОбращениеВТехподдержку КАК АК_ОбращениеВТехподдержку
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОбращенийПрочие.Оповещения КАК ТипыОбращенийПрочиеОповещения
			|		ПО АК_ОбращениеВТехподдержку.ТипОбращения = ТипыОбращенийПрочиеОповещения.Ссылка
			|			И (ТипыОбращенийПрочиеОповещения.Сообщения1С = ИСТИНА)
			|			И (ТипыОбращенийПрочиеОповещения.РольИсполнителя = ЗНАЧЕНИЕ(Справочник.РолиИсполнителей.ПомощникУправляющего))
			|ГДЕ
			|	АК_ОбращениеВТехподдержку.Ссылка = &Ссылка
			|	И АК_ОбращениеВТехподдержку.ПомощникТТ <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	АК_ОбращениеВТехподдержку.УправляющийТТ
			|ИЗ
			|	Документ.АК_ОбращениеВТехподдержку КАК АК_ОбращениеВТехподдержку
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОбращенийПрочие.Оповещения КАК ТипыОбращенийПрочиеОповещения
			|		ПО АК_ОбращениеВТехподдержку.ТипОбращения = ТипыОбращенийПрочиеОповещения.Ссылка
			|			И (ТипыОбращенийПрочиеОповещения.Сообщения1С = ИСТИНА)
			|			И (ТипыОбращенийПрочиеОповещения.РольИсполнителя = ЗНАЧЕНИЕ(Справочник.РолиИсполнителей.Управляющий))
			|ГДЕ
			|	АК_ОбращениеВТехподдержку.Ссылка = &Ссылка
			|	И АК_ОбращениеВТехподдержку.УправляющийТТ <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)");
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда Возврат; КонецЕсли;
		
		ВыборкаЗапроса = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаЗапроса.Следующий() Цикл
			РольДляОтправки = МеханизмОбменаСообщениями.ПолучитьРолиПользователяИлиФизЛица(ВыборкаЗапроса.ФизЛицоДляОтправки);
			Если ЗначениеЗаполнено(РольДляОтправки) Тогда
				ТЗнНоваяСтрока = ТЗнРолиПолучателей.Добавить();
				ТЗнНоваяСтрока.Роль = РольДляОтправки[0];
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Для Каждого СтрокаТЧ Из РолиИсполнителей Цикл
		ТЗнНоваяСтрока = ТЗнРолиПолучателей.Добавить();
		ТЗнНоваяСтрока.Роль = СтрокаТЧ.РольИсполнителя;
	КонецЦикла;
	
	Если ТЗнРолиПолучателей.Количество() > 0 Тогда
		СоздаватьСообщения = Истина;
		СтруктураСообщения.Вставить("РолиПолучателей", ТЗнРолиПолучателей);
	КонецЕсли;
	
	Если СоздаватьСообщения Тогда
		
		СтруктураСообщения.Вставить("ТекстСообщения", ТекстСообщения);
		СтруктураСообщения.Вставить("ОбъектИнициатор", Ссылка);
		СтруктураСообщения.Вставить("Отправитель", Справочники.РолиПользователей.Администратор);
		
		МеханизмОбменаСообщениями.СоздатьИОтправитьСообщение(СтруктураСообщения);
		
		//создаём сообщение и для торговой точки
		Если ЗначениеЗаполнено(ТорговаяТочка) Тогда
			СтруктураСообщения.Вставить("ВидПолучателей", Перечисления.ВидыПолучателейМОС.СписокМагазинов);
			СтруктураСообщения.Удалить("РольПолучателя");
			МассивМагазинов = Новый Массив;
			МассивМагазинов.Добавить(ТорговаяТочка);
			СтруктураСообщения.Вставить("СписокМагазинов", МассивМагазинов);
			СтруктураСообщения.Вставить("ВсемСменам", Истина);
			МеханизмОбменаСообщениями.СоздатьИОтправитьСообщение(СтруктураСообщения);
		КонецЕсли;
		
	КонецЕсли;
	
	ОтправитьПочтовыеСообщения(Строка(Ссылка), ТекстСообщения);
	
КонецПроцедуры

Процедура ОтправитьПочтовыеСообщения(Тема, ТелоПисьма)
	
	СтрокаАдресовЭП = "";
	МассивАдресовЭП = Новый Массив;
	
	// ОБЪЕДИНИТЬ (без ВСЕ) вместо ВЫБРАТЬ РАЗЛИЧНЫЕ по всем
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ИСТИНА КАК ЭтоИнициатор,
		|	АК_ОбращениеВТехподдержку.ТорговаяТочка.АдресЭлектроннойПочты КАК АдресЭП
		|ИЗ
		|	Документ.АК_ОбращениеВТехподдержку КАК АК_ОбращениеВТехподдержку
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОбращенийПрочие.Оповещения КАК ТипыОбращенийПрочиеОповещения
		|		ПО АК_ОбращениеВТехподдержку.ТипОбращения = ТипыОбращенийПрочиеОповещения.Ссылка
		|			И (ТипыОбращенийПрочиеОповещения.ЭлПочта = ИСТИНА)
		|			И (ТипыОбращенийПрочиеОповещения.РольИсполнителя = ЗНАЧЕНИЕ(Справочник.РолиИсполнителей.Инициатор))
		|ГДЕ
		|	АК_ОбращениеВТехподдержку.Ссылка = &Ссылка
		|	И АК_ОбращениеВТехподдержку.ТорговаяТочка <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ИСТИНА,
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(150))
		|ИЗ
		|	Документ.АК_ОбращениеВТехподдержку КАК АК_ОбращениеВТехподдержку
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОбращенийПрочие.Оповещения КАК ТипыОбращенийПрочиеОповещения
		|		ПО АК_ОбращениеВТехподдержку.ТипОбращения = ТипыОбращенийПрочиеОповещения.Ссылка
		|			И (ТипыОбращенийПрочиеОповещения.ЭлПочта = ИСТИНА)
		|			И (ТипыОбращенийПрочиеОповещения.РольИсполнителя = ЗНАЧЕНИЕ(Справочник.РолиИсполнителей.Инициатор))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ПО АК_ОбращениеВТехподдержку.Звонящий = КонтактнаяИнформация.Объект
		|			И (КонтактнаяИнформация.Тип = &Тип)
		|			И (КонтактнаяИнформация.Вид = &Вид)
		|ГДЕ
		|	АК_ОбращениеВТехподдержку.Ссылка = &Ссылка
		|	И АК_ОбращениеВТехподдержку.Звонящий <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ЛОЖЬ,
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(150))
		|ИЗ
		|	Документ.АК_ОбращениеВТехподдержку КАК АК_ОбращениеВТехподдержку
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОбращенийПрочие.Оповещения КАК ТипыОбращенийПрочиеОповещения
		|		ПО АК_ОбращениеВТехподдержку.ТипОбращения = ТипыОбращенийПрочиеОповещения.Ссылка
		|			И (ТипыОбращенийПрочиеОповещения.ЭлПочта = ИСТИНА)
		|			И (ТипыОбращенийПрочиеОповещения.РольИсполнителя = ЗНАЧЕНИЕ(Справочник.РолиИсполнителей.Исполнитель))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|			ПО РолиПользователейСоставРоли.Сотрудник = КонтактнаяИнформация.Объект
		|				И (КонтактнаяИнформация.Тип = &Тип)
		|				И (КонтактнаяИнформация.Вид = &Вид)
		|		ПО АК_ОбращениеВТехподдержку.РольИсполнителя = РолиПользователейСоставРоли.Ссылка
		|ГДЕ
		|	АК_ОбращениеВТехподдержку.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ЛОЖЬ,
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(150))
		|ИЗ
		|	Документ.АК_ОбращениеВТехподдержку КАК АК_ОбращениеВТехподдержку
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АК_ОбращениеВТехподдержку.РолиИсполнителей КАК ОбращениеВТехподдержкуРолиИсполнителей
		|		ПО АК_ОбращениеВТехподдержку.Ссылка = ОбращениеВТехподдержкуРолиИсполнителей.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОбращенийПрочие.Оповещения КАК ТипыОбращенийПрочиеОповещения
		|		ПО АК_ОбращениеВТехподдержку.ТипОбращения = ТипыОбращенийПрочиеОповещения.Ссылка
		|			И (ТипыОбращенийПрочиеОповещения.ЭлПочта = ИСТИНА)
		|			И (ТипыОбращенийПрочиеОповещения.РольИсполнителя = ЗНАЧЕНИЕ(Справочник.РолиИсполнителей.Исполнитель))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|		ПО (ОбращениеВТехподдержкуРолиИсполнителей.РольИсполнителя = РолиПользователейСоставРоли.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ПО (РолиПользователейСоставРоли.Сотрудник = КонтактнаяИнформация.Объект)
		|			И (КонтактнаяИнформация.Тип = &Тип)
		|			И (КонтактнаяИнформация.Вид = &Вид)
		|ГДЕ
		|	АК_ОбращениеВТехподдержку.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ИСТИНА,
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(150))
		|ИЗ
		|	Документ.АК_ОбращениеВТехподдержку КАК АК_ОбращениеВТехподдержку
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОбращенийПрочие.Оповещения КАК ТипыОбращенийПрочиеОповещения
		|		ПО АК_ОбращениеВТехподдержку.ТипОбращения = ТипыОбращенийПрочиеОповещения.Ссылка
		|			И (ТипыОбращенийПрочиеОповещения.ЭлПочта = ИСТИНА)
		|			И (ТипыОбращенийПрочиеОповещения.РольИсполнителя = ЗНАЧЕНИЕ(Справочник.РолиИсполнителей.ПомощникУправляющего))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ПО АК_ОбращениеВТехподдержку.ПомощникТТ = КонтактнаяИнформация.Объект
		|			И (КонтактнаяИнформация.Тип = &Тип)
		|			И (КонтактнаяИнформация.Вид = &Вид)
		|ГДЕ
		|	АК_ОбращениеВТехподдержку.Ссылка = &Ссылка
		|	И АК_ОбращениеВТехподдержку.ПомощникТТ <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ИСТИНА,
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(150))
		|ИЗ
		|	Документ.АК_ОбращениеВТехподдержку КАК АК_ОбращениеВТехподдержку
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ТипыОбращенийПрочие.Оповещения КАК ТипыОбращенийПрочиеОповещения
		|		ПО АК_ОбращениеВТехподдержку.ТипОбращения = ТипыОбращенийПрочиеОповещения.Ссылка
		|			И (ТипыОбращенийПрочиеОповещения.ЭлПочта = ИСТИНА)
		|			И (ТипыОбращенийПрочиеОповещения.РольИсполнителя = ЗНАЧЕНИЕ(Справочник.РолиИсполнителей.Управляющий))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ПО АК_ОбращениеВТехподдержку.УправляющийТТ = КонтактнаяИнформация.Объект
		|			И (КонтактнаяИнформация.Тип = &Тип)
		|			И (КонтактнаяИнформация.Вид = &Вид)
		|ГДЕ
		|	АК_ОбращениеВТехподдержку.Ссылка = &Ссылка
		|	И АК_ОбращениеВТехподдержку.УправляющийТТ <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|
		|ИТОГИ ПО
		|	ЭтоИнициатор");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
    Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.EmailФизЛица); // СлужебныйАдресЭлектроннойПочтыПользователя
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда Возврат; КонецЕсли;
	
	КонечныйСтатус = ИзменениеСтатусов[ИзменениеСтатусов.Количество() - 1];
	ОписаниеЗадачи = "
	|
	|Торговая точка: " + Строка(ТорговаяТочка)  
	//АК БЕЛН 18.07.2017+
	+" ("+?(ЗначениеЗаполнено(ТорговаяТочка),?(ЗначениеЗаполнено(ТорговаяТочка.Город),Строка(ТорговаяТочка.Город)+", ","")+ТорговаяТочка.Адрес,"")+")"+"
	|Телефон обращающегося: "+НомерТелефона+
	//АК БЕЛН 18.07.2017-
	" 
	|ККМ: " + Строка(?(ЗначениеЗаполнено(Касса), Касса, РабочееМесто)) + "
	|Тип обращения: " + Строка(ТипОбращения) + "
	|Описание: " + Строка(КраткоеОписание) + "
	|Сменивший статус: " + КонечныйСтатус.Исполнитель + Символы.ПС + СокрЛП(КонечныйСтатус.Комментарий);

	
	ВыборкаЗапроса = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаЗапроса.Следующий() Цикл
		
		СтрокаАдресовЭП = "";
		МассивАдресовЭП = Новый Массив;
		
		ВыборкаДетальныеЗаписи = ВыборкаЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			АдресЭП = СокрЛП(ВыборкаДетальныеЗаписи.АдресЭП);
			Если НЕ ЗначениеЗаполнено(АдресЭП) Тогда Продолжить; КонецЕсли;
			
			Если ЗначениеЗаполнено(СтрокаАдресовЭП) Тогда
				СтрокаАдресовЭП = СтрокаАдресовЭП + ", ";
			КонецЕсли;
			СтрокаАдресовЭП = СтрокаАдресовЭП + АдресЭП;
			МассивАдресовЭП.Добавить(АдресЭП);
		КонецЦикла;
		
		Если НЕ ЗначениеЗаполнено(СтрокаАдресовЭП) Тогда Продолжить; КонецЕсли;
		
		ДопТелоПисьма = "";
		Если ВыборкаЗапроса.ЭтоИнициатор Тогда
			
			Если СтатусОбращения = ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Направлено") Тогда
				ДопТелоПисьма = "
				|
				|Для отмены задания ответьте на это письмо
				| и напишите в самом начале текста письма ""Отменить"" (без кавычек)";
			ИначеЕсли СтатусОбращения = ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Выполнено") Тогда
				ДопТелоПисьма = "
				|
				|Для закрытия задания ответьте на это письмо
				| и напишите в самом начале текста письма ""Проверено"" (без кавычек)";
			КонецЕсли;
			
		Иначе // это исполнитель
			
			Если СтатусОбращения = ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Направлено") Тогда
				ДопТелоПисьма = "
				|
				|Для принятия к исполнению задания ответьте на это письмо
				| и напишите в самом начале текста письма ""Принято"" (без кавычек)";
			ИначеЕсли СтатусОбращения = ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Принято") Тогда
				ДопТелоПисьма = "
				|
				|Для выполнения задания ответьте на это письмо
				| и напишите в самом начале текста письма ""Выполнено"" (без кавычек)";
			КонецЕсли;
			
		КонецЕсли;
		
		ОтправитьПисьмо(Тема, ТелоПисьма + ДопТелоПисьма + ОписаниеЗадачи, МассивАдресовЭП);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтправитьПисьмо(Тема, ТелоПисьма, МассивАдресовЭП)
	
	УчёткаЭлектроннойПочты = ПредопределенноеЗначение("Справочник.УчетныеЗаписиЭлектроннойПочты.Техподдержка");
	АдресЭПОтправителя = УчёткаЭлектроннойПочты.АдресЭлектроннойПочты;
	
	Почта = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчёткаЭлектроннойПочты);
	Профиль.Пользователь = АдресЭПОтправителя;
	Профиль.ПользовательSMTP = АдресЭПОтправителя;
	Почта.Подключиться(Профиль);
	
	Письмо = Новый ИнтернетПочтовоеСообщение;
	Письмо.Тема = Тема;
	Письмо.ИмяОтправителя = УчёткаЭлектроннойПочты.Наименование;
	Письмо.Отправитель.Адрес = АдресЭПОтправителя;
	Для Каждого Адрес1 Из МассивАдресовЭП Цикл
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = Адрес1;
	КонецЦикла;
	
	Текст1 = Письмо.Тексты.Добавить();
	Текст1.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
	Текст1.Текст = ТелоПисьма;
	
	//Если НЕ ОбщегоНазначения.ЭтоКопияБазы() Тогда
		Попытка
			Почта.Послать(Письмо);
			Если ОбщегоНазначения.ЭтоКопияБазы() Тогда
				ЗаписьЖурналаРегистрации("ПримечаниеМОС", УровеньЖурналаРегистрации.Примечание,,, "Отправка почты произведена успешно");
			КонецЕсли;
		Исключение
			Сообщить(ОписаниеОшибки());
			ТекстОшибки = "Не удалось отправить письмо. Ошибка: " + ОписаниеОшибки();
			Если ОбщегоНазначения.ЭтоКопияБазы() Тогда
				ЗаписьЖурналаРегистрации("ОшибкаМОС", УровеньЖурналаРегистрации.Ошибка,,, "Ошибка при отправке почты");
			КонецЕсли;
			Сообщить(ТекстОшибки);
		КонецПопытки;
	//КонецЕсли;	
	Почта.Отключиться();
	
КонецПроцедуры