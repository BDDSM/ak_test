
&НаКлиенте
Процедура НомерКассыПриИзменении(Элемент)
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКассуДляРабочегоМеста(РабочееМесто)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РабочееМесто", РабочееМесто);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПривязкиОборудованияКРабочимМестамСрезПоследних.Касса
	|ИЗ
	|	РегистрСведений.ПривязкиОборудованияКРабочимМестам.СрезПоследних(, РабочееМесто = &РабочееМесто) КАК ПривязкиОборудованияКРабочимМестамСрезПоследних";
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат ПредопределенноеЗначение("Справочник.ОсновныеСредства.ПустаяСсылка");
	КонецЕсли;
	
	ВыборкаЗапроса = Результат.Выбрать();
	ВыборкаЗапроса.Следующий();
	
	Возврат ВыборкаЗапроса.Касса;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДолжностьНаСервере(ФизЛицо)
	
	Возврат ФизЛицо.Должность;
	
КонецФункции

&НаСервереБезКонтекста
Функция МассивСотрудниковПоРолиИсполнителя(РольИсполнителя)
	
	Возврат РольИсполнителя.СоставРоли.ВыгрузитьКолонку("Сотрудник");
	
КонецФункции

&НаСервереБезКонтекста
Функция РолиПользователейПоТипуРолиИсполнителя(ТипРолиИсполнителя, ТорговаяТочка, Номенклатура, ХарактеристикаНоменклатуры)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ХарактеристикиНоменклатуры.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ НужныеХарактеристики
		|ИЗ
		|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|ГДЕ
		|	ХарактеристикиНоменклатуры.Ссылка = &ХарактеристикаНоменклатуры
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ХарактеристикиНоменклатуры.Ссылка
		|ИЗ
		|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|ГДЕ
		|	&ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
		|	И НЕ &Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|	И ХарактеристикиНоменклатуры.Владелец = &Номенклатура
		|	И ХарактеристикиНоменклатуры.Неактивная = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХарактеристикиНоменклатуры.Ссылка,
		|	ЕСТЬNULL(СоответствиеОбъектРольСрезПоследних.РольПользователя, ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)) КАК РольПользователя
		|ПОМЕСТИТЬ ХарактеристикиНоменклатуры
		|ИЗ
		|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
		|			,
		|			ТипРоли = &ТипРоли
		|				И Объект В
		|					(ВЫБРАТЬ
		|						НужныеХарактеристики.Ссылка
		|					ИЗ
		|						НужныеХарактеристики КАК НужныеХарактеристики)) КАК СоответствиеОбъектРольСрезПоследних
		|		ПОЛНОЕ СОЕДИНЕНИЕ НужныеХарактеристики КАК ХарактеристикиНоменклатуры
		|		ПО СоответствиеОбъектРольСрезПоследних.Объект = ХарактеристикиНоменклатуры.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеОбъектРольСрезПоследних.РольПользователя
		|ПОМЕСТИТЬ РолиПользователей
		|ИЗ
		|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
		|			,
		|			ТипРоли = &ТипРоли
		|				И Объект = &ТорговаяТочка) КАК СоответствиеОбъектРольСрезПоследних
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ХарактеристикиНоменклатуры.РольПользователя
		|ИЗ
		|	ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|ГДЕ
		|	НЕ ХарактеристикиНоменклатуры.РольПользователя = ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СоответствиеОбъектРольСрезПоследних.РольПользователя
		|ИЗ
		|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
		|			,
		|			ТипРоли = &ТипРоли
		|				И Объект В
		|					(ВЫБРАТЬ
		|						ЗначенияСвойствОбъектов.Значение
		|					ИЗ
		|						РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|					ГДЕ
		|						ЗначенияСвойствОбъектов.Объект В
		|							(ВЫБРАТЬ
		|								ХарактеристикиНоменклатуры.Ссылка
		|							ИЗ
		|								ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|							ГДЕ
		|								ХарактеристикиНоменклатуры.РольПользователя = ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка))
		|						И ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))) КАК СоответствиеОбъектРольСрезПоследних
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РолиПользователейТипыРолей.Ссылка
		|ИЗ
		|	Справочник.РолиПользователей.ТипыРолей КАК РолиПользователейТипыРолей
		|ГДЕ
		|	&ИскатьПоТипуРоли = ИСТИНА
		|	И РолиПользователейТипыРолей.ТипРоли = &ТипРоли
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИСТИНА КАК Пометка,
		|	РолиПользователей.РольПользователя КАК РольИсполнителя
		|ИЗ
		|	РолиПользователей КАК РолиПользователей");
	Запрос.УстановитьПараметр("ТипРоли", ТипРолиИсполнителя);
	Запрос.УстановитьПараметр("ТорговаяТочка", ТорговаяТочка);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", ХарактеристикаНоменклатуры);
	ТипТипаРолиИсполнителя = ТипРолиИсполнителя.ТипЗначения;
	ИскатьПоТипуРоли = НЕ ((ЗначениеЗаполнено(ТорговаяТочка) И ТипТипаРолиИсполнителя.СодержитТип(Тип("СправочникСсылка.СтруктурныеЕдиницы")))
						ИЛИ ЗначениеЗаполнено(ХарактеристикаНоменклатуры) И ТипТипаРолиИсполнителя.СодержитТип(Тип("СправочникСсылка.ХарактеристикиНоменклатуры")));
	Запрос.УстановитьПараметр("ИскатьПоТипуРоли", ИскатьПоТипуРоли);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТипРозничнойТочкиТТ = Объект.ТорговаяТочка.ТипРозничнойТочки;
	Если ТипРозничнойТочкиТТ = ПредопределенноеЗначение("Перечисление.ТипыРозничныхТочек.Магазин") Тогда
		НомерКассы = Объект.РабочееМесто;
	ИначеЕсли ТипРозничнойТочкиТТ = ПредопределенноеЗначение("Перечисление.ТипыРозничныхТочек.Избенка") Тогда
		НомерКассы = Объект.Касса;
	КонецЕсли;
	
	#Если ТолстыйКлиентОбычноеПриложение Тогда
		Элементы.ТорговаяТочка.ФормаВыбора = "Справочник.СтруктурныеЕдиницы.Форма.ФормаВыбора";
	#Иначе
		Элементы.ТорговаяТочка.ФормаВыбора = "Справочник.СтруктурныеЕдиницы.Форма.ФормаВыбораУпр";
	#КонецЕсли
	
	Звонящий_Объект = "";
	Если Параметры.Свойство("Звонящий_Объект", Звонящий_Объект) Тогда
	ИначеЕсли Параметры.Свойство("Основание")
				И ТипЗнч(Параметры.Основание) = Тип("Структура")
				И Параметры.Основание.Свойство("Звонящий_Объект", Звонящий_Объект) Тогда
	КонецЕсли;
	
	Если ТипЗнч(Звонящий_Объект) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Объект.Звонящий 			= Звонящий_Объект;
		Объект.ДолжностьЗвонящего 	= ПолучитьДолжностьНаСервере(Звонящий_Объект);
	ИначеЕсли ТипЗнч(Звонящий_Объект) = Тип("СправочникСсылка.Пользователи") Тогда
		Объект.Звонящий 				= Звонящий_Объект.ФизЛицо;
		Если ЗначениеЗаполнено(Объект.Звонящий) Тогда
			Объект.ДолжностьЗвонящего 	= ПолучитьДолжностьНаСервере(Объект.Звонящий);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Элементы.ДокументОснование.Видимость = Истина;
		//Элементы.ПричинаПереадресации.Видимость = Истина;
		//Элементы.ПричинаПереадресации.АвтоВыборНезаполненного = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.НомерТелефона) Тогда
		Элементы.НомерТелефона.ТолькоПросмотр = Истина;
	КонецЕсли;
	
	СписокАктуальныхОбращений = Новый СписокЗначений;
	СписокАктуальныхОбращений.Добавить(ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.ПустаяСсылка"));
	СписокАктуальныхОбращений.Добавить(ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Направлено"));
	СписокАктуальныхОбращений.Добавить(ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Принято"));
	СписокАктуальныхОбращений.Добавить(ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Выполнено"));
	
	ФизЛицоПользователя = глЗначениеПеременной("глТекущийПользователь").ФизЛицо;
	ЭтоТехподдержка = РольДоступна("АК_Техподдержка")
						ИЛИ (АК_ТелефонияСервер.НомераТехПоддержки().Найти(ПараметрыСеанса.АК_ВнутреннийНомер) <> Неопределено);
	
	Если ЗначениеЗаполнено(ФизЛицоПользователя) Тогда
		ЭтоИсполнитель 	= (Объект.Исполнитель = ФизЛицоПользователя);
		ЭтоИнициатор 	= (Объект.Звонящий = ФизЛицоПользователя)
							ИЛИ (Объект.ПомощникТТ = ФизЛицоПользователя);
	Иначе
		ЭтоИсполнитель 	= Ложь;
		ЭтоИнициатор 	= Ложь;
	КонецЕсли;
	Если ЭтоИнициатор = Ложь
			И ЗначениеЗаполнено(ПараметрыСеанса.ТорговаяТочкаПоАйпи) Тогда
		ЭтоИнициатор = (Объект.ТорговаяТочка = ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	КонецЕсли;
	
	РолиПользователяИлиФизЛица.ЗагрузитьЗначения(МеханизмОбменаСообщениями.ПолучитьРолиПользователяИлиФизЛица(ПараметрыСеанса.ТекущийПользователь));
	Если НЕ ЭтоИсполнитель И ЗначениеЗаполнено(РолиПользователяИлиФизЛица) Тогда
		Если ЗначениеЗаполнено(Объект.РольИсполнителя) Тогда
			ЭтоИсполнитель = (РолиПользователяИлиФизЛица.НайтиПоЗначению(Объект.РольИсполнителя) <> Неопределено);
		КонецЕсли;
		
		//+++АК SHEP 20171003 ИП-00016789: ищем среди ролей исполнителей
		Если НЕ ЭтоИсполнитель И ЗначениеЗаполнено(Объект.Ссылка) И Объект.РолиИсполнителей.Количество() > 0 Тогда
			Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	АК_ОбращениеВТехподдержкуРолиИсполнителей.РольИсполнителя
				|ИЗ
				|	Документ.АК_ОбращениеВТехподдержку.РолиИсполнителей КАК АК_ОбращениеВТехподдержкуРолиИсполнителей
				|ГДЕ
				|	АК_ОбращениеВТехподдержкуРолиИсполнителей.Ссылка = &Ссылка
				|	И АК_ОбращениеВТехподдержкуРолиИсполнителей.РольИсполнителя В(&РолиПользователяИлиФизЛица)");
			Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
			Запрос.УстановитьПараметр("РолиПользователяИлиФизЛица", РолиПользователяИлиФизЛица);
			
			ЭтоИсполнитель = НЕ Запрос.Выполнить().Пустой();
		КонецЕсли;
		//---АК SHEP 20171003
	КонецЕсли;
	
	//
	УстановитьВидимостьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда // новый
		ЭтаФорма.Модифицированность = ЗначениеЗаполнено(Объект.НомерТелефона)
										ИЛИ ЗначениеЗаполнено(Объект.ДокументОснование);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура НомерКассыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	//
	СтруктураОтбора = Новый Структура("СтруктурнаяЕдиница", Объект.ТорговаяТочка);
	ВыбрЗначение = ОткрытьФормуМодально("Справочник.РабочиеМеста.ФормаВыбора", Новый Структура("Отбор, ТекущаяСтрока", СтруктураОтбора, Объект.РабочееМесто));
	Если ЗначениеЗаполнено(ВыбрЗначение) Тогда
		РабочееМестоПриИзмененииНаСервере(ВыбрЗначение);
	Иначе
		Объект.Касса 		= ПредопределенноеЗначение("Справочник.ОсновныеСредства.ПустаяСсылка");
		Объект.РабочееМесто = ПредопределенноеЗначение("Справочник.РабочиеМеста.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РабочееМестоПриИзмененииНаСервере(ВыбрЗначение)
	
	Объект.РабочееМесто = ВыбрЗначение;
	
	ТипРозничнойТочкиТТ = Объект.ТорговаяТочка.ТипРозничнойТочки;
	Если ТипРозничнойТочкиТТ = ПредопределенноеЗначение("Перечисление.ТипыРозничныхТочек.Магазин") Тогда
		НомерКассы = ВыбрЗначение;
		Объект.Касса = ПредопределенноеЗначение("Справочник.ОсновныеСредства.ПустаяСсылка");
		//Элементы.НомерКассы.ПутьКДанным = "Объект.РабочееМесто";
	ИначеЕсли ТипРозничнойТочкиТТ = ПредопределенноеЗначение("Перечисление.ТипыРозничныхТочек.Избенка") Тогда
		НомерКассы = ПолучитьКассуДляРабочегоМеста(ВыбрЗначение);
		Объект.Касса = НомерКассы;
		//Элементы.НомерКассы.ПутьКДанным = "Объект.Касса";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ТорговаяТочкаПриИзмененииНаСервере()
	
	Если Объект.РабочееМесто.СтруктурнаяЕдиница <> Объект.ТорговаяТочка Тогда
		Объект.РабочееМесто = ПредопределенноеЗначение("Справочник.РабочиеМеста.ПустаяСсылка");
		Объект.Касса 		= ПредопределенноеЗначение("Справочник.ОсновныеСредства.ПустаяСсылка");
		НомерКассы 			= ПредопределенноеЗначение("Справочник.РабочиеМеста.ПустаяСсылка");
	КонецЕсли;
	
	РеквизитОбъект = РеквизитФормыВЗначение("Объект");
	РеквизитОбъект.ТорговаяТочкаПриИзменении();
	ЗначениеВРеквизитФормы(РеквизитОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ТорговаяТочкаПриИзменении(Элемент)
	
	ТорговаяТочкаПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТипОбращенияПриИзмененииНаСервере()
Перем СтруктураРеквизитовДляЗаполнения;
	
	СтруктураРеквизитовДляЗаполнения = Новый Структура("Исполнитель,РольИсполнителя,ТипРолиИсполнителя,КритичностьОбращения,Ответ");
	ЗаполнитьЗначенияСвойств(СтруктураРеквизитовДляЗаполнения, Объект.ТипОбращения);
	ЗаполнитьЗначенияСвойств(Объект, СтруктураРеквизитовДляЗаполнения);
	
	//Объект.КраткоеОписание = Строка(Объект.ТипОбращения);
	Объект.КраткоеОписание = СтруктураРеквизитовДляЗаполнения["Ответ"];
	
	Если ЗначениеЗаполнено(Объект.РольИсполнителя) Тогда
		РольИсполнителяПриИзмененииНаСервере();
	Иначе
		ТипРолиИсполнителяПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипОбращенияПриИзменении(Элемент)
	
	ТипОбращенияПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗвонящийПриИзменении(Элемент)
	
	Объект.ДолжностьЗвонящего = ПолучитьДолжностьНаСервере(Объект.Звонящий);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		ПолучитьТехнолога();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТехнолога()
	
	Производитель = "";
	ХаркаПоТовару = Объект.Характеристика;
	
	Если НЕ ЗначениеЗаполнено(ХаркаПоТовару) Тогда
		
		Если ЗначениеЗаполнено(Производитель) Тогда
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Значение", Производитель);
			Запрос.УстановитьПараметр("Владелец", Объект.Номенклатура);
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ЗначенияСвойствОбъектов.Объект
			|ИЗ
			|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
			|ГДЕ
			|	ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель)
			|	И ЗначенияСвойствОбъектов.Значение = &Значение
			|	И ВЫРАЗИТЬ(ЗначенияСвойствОбъектов.Объект КАК Справочник.ХарактеристикиНоменклатуры).Владелец = &Владелец";
						   
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				ХаркаПоТовару = Выборка.Объект;
			КонецЕсли;
			
		ИначеЕсли ЗначениеЗаполнено(Объект.ТорговаяТочка) Тогда
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ТорговаяТочка"	, Объект.ТорговаяТочка);
			Запрос.УстановитьПараметр("Номенклатура"	, Объект.Номенклатура);
			Запрос.УстановитьПараметр("ДатаДок"			, Объект.Дата);
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ТоварныйАссортиментТочекСрезПоследних.Характеристика
			|ИЗ
			|	РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(
			|			&ДатаДок,
			|			ТорговаяТочка = &ТорговаяТочка
			|				И Номенклатура = &Номенклатура) КАК ТоварныйАссортиментТочекСрезПоследних";
						   
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				ХаркаПоТовару = Выборка.Характеристика;
			КонецЕсли;
		КонецЕсли;
		
		Объект.Характеристика = ХаркаПоТовару;
		
	КонецЕсли;
	
	РольТехнолога = Неопределено;
	Если ЗначениеЗаполнено(ХаркаПоТовару) Тогда
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	СоответствиеОбъектРольСрезПоследних.РольПользователя
			|ИЗ
			|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
			|			&ДатаДок,
			|			Объект = &Харка
			|				И ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)) КАК СоответствиеОбъектРольСрезПоследних");
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			РольТехнолога = Выборка.РольПользователя;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(РольТехнолога) Тогда
			Если НЕ ЗначениеЗаполнено(Производитель) Тогда
				Запрос.УстановитьПараметр("Харка", ХаркаПоТовару);
				Запрос.Текст =
				"ВЫБРАТЬ
				|	ЗначенияСвойствОбъектов.Значение
				|ИЗ
				|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
				|ГДЕ
				|	ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель)
				|	И ВЫРАЗИТЬ(ЗначенияСвойствОбъектов.Объект КАК Справочник.ХарактеристикиНоменклатуры) = &Харка";
							   
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Следующий() Тогда
					Производитель = Выборка.Значение;
				КонецЕсли;
			КонецЕсли;	
			Запрос.УстановитьПараметр("Производитель", Производитель);
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СоответствиеОбъектРольСрезПоследних.РольПользователя
			|ИЗ
			|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
			|			&ДатаДок,
			|			Объект = &Производитель
			|				И ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)) КАК СоответствиеОбъектРольСрезПоследних";
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				РольТехнолога = Выборка.РольПользователя;
			КонецЕсли;
		КонецЕсли;	
	Иначе
		ТипРолиИсполнителяПриИзмененииНаСервере();
		Если ЗначениеЗаполнено(Объект.РольИсполнителя) Тогда РольТехнолога = Объект.РольИсполнителя; КонецЕсли;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(РольТехнолога)
	  		И РольТехнолога.СоставРоли.Количество() > 0 Тогда
		Объект.Исполнитель 		= РольТехнолога.СоставРоли[0].Сотрудник;
		Объект.РольИсполнителя 	= РольТехнолога;
	Иначе
		Объект.Исполнитель 		= Справочники.ФизическиеЛица.ПустаяСсылка();
		Объект.РольИсполнителя 	= РольТехнолога;
	КонецЕсли;
	
КонецФункции


&НаКлиенте
Процедура Направить(Команда)
	//ОткрытьФорму("Документ.АК_ОбращениеВТехподдержку.ФормаОбъекта", Новый Структура("Ключ", Объект));
КонецПроцедуры

&НаКлиенте
Процедура Выполнено(Команда)
	
	УстановитьСтатус(Объект.Ссылка, ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Выполнено"), Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
	
	УстановитьСтатус(Объект.Ссылка, ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Отменено"), Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Переадресовать(Команда)
	
	УстановитьСтатус(Объект.Ссылка, ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Переадресовано"), Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПринятьКИсполнению(Команда)
	
	УстановитьСтатус(Объект.Ссылка, ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Принято"), Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Проверено(Команда)
	
	УстановитьСтатус(Объект.Ссылка, ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Проверено"), Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатус(ДокументСсылка, Статус, ИмяКоманды)
	
	Записать();
	
	Комментарий = "";
	Если ВвестиСтроку(Комментарий, "" + ?(Элементы[ИмяКоманды].Заголовок = "", ИмяКоманды, Элементы[ИмяКоманды].Заголовок) + "? Введите комментарий", 75) Тогда
		
		Если ИмяКоманды = "Переадресовать" Тогда
			ОткрытьФорму("Документ.АК_ОбращениеВТехподдержку.ФормаОбъекта",
			  				Новый Структура("Основание", Новый Структура("ДокументОснование,Комментарий", ДокументСсылка, Комментарий)), , ДокументСсылка);
		Иначе
			УстановитьСтатусНаСервере(ДокументСсылка, Статус, Комментарий);
		КонецЕсли;
		
		ЭтаФорма.Закрыть();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтатусНаСервере(ДокументСсылка, Статус, Комментарий)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.СтатусОбращения 	= Статус;
	ДокументОбъект.Комментарий 		= Комментарий;
	ДокументОбъект.Записать();
	
	УстановитьВидимостьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьНаСервере()
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Элементы.ГруппаКнопок.Видимость 	= Ложь;
		Возврат;
	ИначеЕсли НЕ (ЭтоИсполнитель ИЛИ ЭтоИнициатор ИЛИ ЭтоТехподдержка) Тогда
		ЭтаФорма.ТолькоПросмотр 			= Истина;
		Элементы.НомерКассы.ТолькоПросмотр 	= Истина;
		Элементы.ГруппаКнопок.Видимость 	= Ложь;
		Возврат; 
	КонецЕсли;
	//AK ziga 20171031
	Если ЭтоТехподдержка тогда
		ЭтаФорма.Элементы.ТипОбращенияИнструкцияДляТехПоддержки.Видимость=истина;
		Элементы.РолиИсполнителей.Видимость = Истина; //+++АК SHEP 2017.11.23 ИП-00016789
	КонецЕсли;
	//AK ziga 20171031

	ТекущийСтатусОбращения = Объект.СтатусОбращения;
	Если СписокАктуальныхОбращений.НайтиПоЗначению(ТекущийСтатусОбращения) = Неопределено Тогда
		Элементы.ГруппаКнопок.Видимость 	= Ложь;
		ЭтаФорма.ТолькоПросмотр 			= Истина;
		Элементы.НомерКассы.ТолькоПросмотр 	= Истина;
		
	ИначеЕсли ТекущийСтатусОбращения = ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Направлено") Тогда
		Элементы.ГруппаКнопок.Видимость 		= Истина;
		Элементы.ПринятьКИсполнению.Видимость 	= ЭтоИсполнитель;
		Элементы.Выполнено.Видимость 			= Ложь;
		Элементы.Переадресовать.Видимость 		= ЭтоТехподдержка;
		Элементы.Отменить.Видимость 			= ЭтоТехподдержка ИЛИ ЭтоИнициатор;
		Элементы.Проверено.Видимость 			= Ложь;
		Элементы.Направить.Видимость 			= Ложь;
		
	ИначеЕсли ТекущийСтатусОбращения = ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Выполнено") Тогда
		Элементы.ГруппаКнопок.Видимость 		= Истина;
		Элементы.ПринятьКИсполнению.Видимость 	= Ложь;
		Элементы.Выполнено.Видимость 			= Ложь;
		Элементы.Переадресовать.Видимость 		= ЭтоТехподдержка;
		Элементы.Отменить.Видимость 			= Ложь;
		Элементы.Проверено.Видимость 			= ЭтоИнициатор;
		Элементы.Направить.Видимость 			= Ложь;
		
	ИначеЕсли ТекущийСтатусОбращения = ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.Принято") Тогда
		Элементы.ГруппаКнопок.Видимость 		= Истина;
		Элементы.ПринятьКИсполнению.Видимость 	= Ложь;
		Элементы.Выполнено.Видимость 			= ЭтоИсполнитель;
		Элементы.Переадресовать.Видимость 		= ЭтоТехподдержка;
		Элементы.Отменить.Видимость 			= ЭтоТехподдержка ИЛИ ЭтоИнициатор;
		Элементы.Проверено.Видимость 			= Ложь;
		Элементы.Направить.Видимость 			= Ложь;
		
	ИначеЕсли ТекущийСтатусОбращения = ПредопределенноеЗначение("Перечисление.АК_СтатусыОбращенийВТехподдержку.ПустаяСсылка") Тогда
		Элементы.ГруппаКнопок.Видимость 		= Истина;
		Элементы.ПринятьКИсполнению.Видимость 	= Ложь;
		Элементы.Выполнено.Видимость 			= Ложь;
		Элементы.Переадресовать.Видимость 		= Ложь;
		Элементы.Отменить.Видимость 			= Ложь;
		Элементы.Проверено.Видимость 			= Ложь;
		Элементы.Направить.Видимость 			= Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	//УстановитьВидимостьНаСервере();
КонецПроцедуры

&НаСервере
Процедура РольИсполнителяПриИзмененииНаСервере()
	
	Элементы.Исполнитель.СписокВыбора.Очистить();
	Элементы.Исполнитель.КнопкаВыпадающегоСписка = Ложь;
	
	Если НЕ ЗначениеЗаполнено(Объект.РольИсполнителя) Тогда
		Объект.Исполнитель = ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка");
		Возврат;
	КонецЕсли;
	
	МассивСотрудников = МассивСотрудниковПоРолиИсполнителя(Объект.РольИсполнителя);
	Элементы.Исполнитель.КнопкаВыпадающегоСписка = (МассивСотрудников.Количество() > 0);
	
	Если МассивСотрудников.Количество() = 1 Тогда
		Объект.Исполнитель = МассивСотрудников[0];
	Иначе
		Если МассивСотрудников.Найти(Объект.Исполнитель) = Неопределено Тогда
			Объект.Исполнитель = ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка");
		КонецЕсли;
		Элементы.Исполнитель.СписокВыбора.ЗагрузитьЗначения(МассивСотрудников);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РольИсполнителяПриИзменении(Элемент)
	
	РольИсполнителяПриИзмененииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ТипРолиИсполнителяПриИзмененииНаСервере()
	
	Объект.РолиИсполнителей.Очистить();
	
	Если НЕ ЗначениеЗаполнено(Объект.ТипРолиИсполнителя) Тогда
		РольИсполнителяПриИзмененииНаСервере();
		Возврат;
	КонецЕсли;
	
	ТЗнРолиИсполнителей = РолиПользователейПоТипуРолиИсполнителя(Объект.ТипРолиИсполнителя, Объект.ТорговаяТочка, Объект.Номенклатура, Объект.Характеристика);
	
	Если ТЗнРолиИсполнителей.Количество() = 1 Тогда
		Объект.РольИсполнителя = ТЗнРолиИсполнителей[0].РольИсполнителя;
		РольИсполнителяПриИзмененииНаСервере();
	Иначе
		Объект.РольИсполнителя = ПредопределенноеЗначение("Справочник.РолиПользователей.ПустаяСсылка");
		Объект.Исполнитель = ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка");
		Объект.РолиИсполнителей.Загрузить(ТЗнРолиИсполнителей);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипРолиИсполнителяПриИзменении(Элемент)
	
	ТипРолиИсполнителяПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.РольИсполнителя) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	//
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.ЗагрузитьЗначения(МассивСотрудниковПоРолиИсполнителя(Объект.РольИсполнителя));
	
КонецПроцедуры

//АК БЕЛН 18.07.2017+
Процедура ВзятьИзТТСервер()
	
	Объект.НомерТелефона = Объект.ТорговаяТочка.ТелефонныйНомер1;
	
КонецПроцедуры

&НаКлиенте
Процедура ВзятьИзТТ(Команда)
	
	ВзятьИзТТСервер();
	
КонецПроцедуры
//АК БЕЛН 18.07.2017-
