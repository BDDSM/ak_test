
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = НЕ УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.РезервНаОбесцениваниеТовара, Ложь);
	
	Если Отказ Тогда
		Сообщить("Нет прав на использование документа");
	КонецЕсли;	

	Если не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	ОбновитьСуммыИтого();
	
КонецПроцедуры

&НаКлиенте
Процедура СписаниеРезерваПриИзменении(Элемент)
	
	ОбновитьТекущийРезервДляНоменклатуры();
	ОбновитьСуммыИтого();	
	
	
КонецПроцедуры

&НаКлиенте 
Процедура ОбновитьТекущийРезервДляНоменклатуры()
	
 	ТекущиеДанные = Элементы.СписаниеРезерва.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.ТекущийРезерв = ПолучитьТекущийРезерв(ТекущиеДанные.Номенклатура)

КонецПроцедуры	
	
&НаСервере
Функция ПолучитьТекущийРезерв(Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФинансовыйОстатки.Субконто1 КАК Номенклатура,
		|	(ФинансовыйОстатки.СуммаМСФООстаток + ФинансовыйОстатки.СуммаОстаток) КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.Остатки(
		|			&ДатаОкончания,
		|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РезервНаСписаниеОбесцененияТоваров),
		|			,
		|			Организация = &Организация
		|				И Субконто1 = &Номенклатура) КАК ФинансовыйОстатки";

	Запрос.УстановитьПараметр("ДатаОкончания", Объект.Дата);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Сумма;
	КонецЦикла;

	Возврат 0;
	
КонецФункции	

&НаКлиенте
Процедура СписаниеРезерваНоменклатураПриИзменении(Элемент)
	
	ОбновитьТекущийРезервДляНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Для каждого Строка из Объект.СписаниеРезерва Цикл
		
		Если Строка.Сумма > Строка.ТекущийРезерв тогда 		
						
			Сообщить("По номенклатуре " + Строка.Номенклатура +  " недостаточно резерва для списания");
			Отказ = Истина;
			
		КонецЕсли;	
			
	КонецЦикла;		
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТекущийРезерв(Команда)

	ОбновитьРезервНаКлиенте();
	
КонецПроцедуры

Процедура ОбновитьТекущийРезервНаСервере();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СписаниеРезерва.Номенклатура,
		|	СписаниеРезерва.ТекущийРезерв,
		|	СписаниеРезерва.Сумма
		|ПОМЕСТИТЬ втСписаниеРезерва
		|ИЗ
		|	&СписаниеРезерва КАК СписаниеРезерва
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втСписаниеРезерва.Номенклатура,
		|	СУММА(втСписаниеРезерва.Сумма) КАК Сумма
		|ПОМЕСТИТЬ втСписаниеГруппировка
		|ИЗ
		|	втСписаниеРезерва КАК втСписаниеРезерва
		|
		|СГРУППИРОВАТЬ ПО
		|	втСписаниеРезерва.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФинансовыйОстатки.Субконто1 КАК Номенклатура,
		|	ФинансовыйОстатки.СуммаОстаток + ФинансовыйОстатки.СуммаМСФООстаток КАК ТекущийРезерв
		|ПОМЕСТИТЬ втРезерв
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.Остатки(
		|			&ДатаОкончания,
		|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РезервНаСписаниеОбесцененияТоваров),
		|			,
		|			Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ
		|						втСписаниеГруппировка.Номенклатура
		|					ИЗ
		|						втСписаниеГруппировка)) КАК ФинансовыйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втСписаниеГруппировка.Номенклатура,
		|	втСписаниеГруппировка.Сумма,
		|	втРезерв.ТекущийРезерв
		|ИЗ
		|	втСписаниеГруппировка КАК втСписаниеГруппировка
		|		ЛЕВОЕ СОЕДИНЕНИЕ втРезерв КАК втРезерв
		|		ПО втСписаниеГруппировка.Номенклатура = втРезерв.Номенклатура";

	Запрос.УстановитьПараметр("ДатаОкончания", Объект.Дата);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("СписаниеРезерва", Объект.СписаниеРезерва.Выгрузить());
	
	Результат = Запрос.Выполнить().Выгрузить();

	Объект.СписаниеРезерва.Загрузить(Результат);	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ОбновитьРезервНаКлиенте();
	
КонецПроцедуры

Процедура ОбновитьРезервНаКлиенте()

	//Если не Объект.Проведен Тогда
		ОбновитьТекущийРезервНаСервере();
	//Иначе 	
	//	Сообщить("Необходимо отменить проведение документа для перезаполнения резерва");	
	//КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ОбновитьРезервНаКлиенте();
КонецПроцедуры


&НаКлиенте
Процедура НачислениеРезерваПриИзменении(Элемент)
	
	ОбновитьСуммыИтого();
	
КонецПроцедуры

Процедура ОбновитьСуммыИтого()
	
	ВсегоНачисление = Объект.НачислениеРезерва.Итог("Сумма");
	ВсегоСписание = Объект.СписаниеРезерва.Итог("Сумма");	
	ВсегоТекущийРезерв = Объект.СписаниеРезерва.Итог("ТекущийРезерв"); 	
	
КонецПроцедуры	

&НаСервереБезКонтекста
Функция ПолучитьТаблицуОстатковБП(ИНН,Дата)
	
	СтрокаПодключения = ПолныеПрава.ПолучитьСтрокуПодключения_Бух();
	
	Коннектор = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Бух() + ".COMConnector");
	
	Попытка
		СоединениеСБазой = Коннектор.Connect(СтрокаПодключения);
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке("Не удалось подключиться к базе бухгалтерии!");
		Возврат Неопределено;
	КонецПопытки;

	Запрос = СоединениеСБазой.NewObject("Запрос");
	
	Запрос.Текст = " ВЫБРАТЬ
	|	ХозрасчетныйОстатки.СуммаОстаток КАК БПСумма,
	|	ХозрасчетныйОстатки.КоличествоОстаток КАК БПКоличество,
	|	ХозрасчетныйОстатки.Субконто1 КАК БПНоменклатура,	
	|	ХозрасчетныйОстатки.Субконто1.ИД КАК БПИДНоменклатура
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата, Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладах), , Организация.ИНН = &ИНН) КАК ХозрасчетныйОстатки";
	
	Запрос.УстановитьПараметр("Дата",КонецМесяца(Дата));
	Запрос.УстановитьПараметр("ИНН",ИНН);
	ОстаткиПоБухгалтерии = Запрос.Выполнить().Выгрузить();
	
	ТаблицаОстаткиПоБухгалтерии = Новый ТаблицаЗначений;
	ТаблицаОстаткиПоБухгалтерии.Колонки.Добавить("БПИДНоменклатура",Новый ОписаниеТипов("Число"));	
	ТаблицаОстаткиПоБухгалтерии.Колонки.Добавить("БПКоличество",Новый ОписаниеТипов("Число"));	
	ТаблицаОстаткиПоБухгалтерии.Колонки.Добавить("БПСумма",Новый ОписаниеТипов("Число"));
	
	Для каждого Строка из ОстаткиПоБухгалтерии Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаОстаткиПоБухгалтерии.Добавить(),Строка);			
	КонецЦикла;		

	Возврат ТаблицаОстаткиПоБухгалтерии;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТаблицуПродаж(Организация,ДатаНачала,ДатаОкончания)

//СЕБЕСТОИМОСТЬ ТОВАРОВ
	ТаблицаДанных = Новый ТаблицаЗначений();
	ТаблицаДанных.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаДанных.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаДанных.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("СуммаПродаж", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("СебестоимостьПродаж", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("КоличествоВозврат", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("СуммаВозврат", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("СебестоимостьВозврат", Новый ОписаниеТипов("Число"));
								
	ДатаОбработки = ДатаНачала;
	Пока ДатаОбработки <= ДатаОкончания Цикл

		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("ТекДата", ДатаОбработки);
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница,
		               |	ЦФОСтруктурныхЕдиницСрезПоследних.Организация
		               |ИЗ
		               |	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&ТекДата, ) КАК ЦФОСтруктурныхЕдиницСрезПоследних
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВЗ_Запрос.Номенклатура,
		               |	МАКСИМУМ(ВЗ_Запрос.Цена) КАК Цена,
		               |	МАКСИМУМ(ВЗ_Запрос.Себестоимость) КАК Себестоимость
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		               |		ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
		               |		0 КАК Себестоимость
		               |	ИЗ
		               |		РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		               |				&ТекДата,
		               |				ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.ОсновнойТипЦенПродаж)
		               |					И ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)) КАК ЦеныНоменклатурыСрезПоследних
		               |	
		               |	ОБЪЕДИНИТЬ ВСЕ
		               |	
		               |	ВЫБРАТЬ
		               |		СебестоимостьТоваровСрезПоследних.Номенклатура,
		               |		0,
		               |		СебестоимостьТоваровСрезПоследних.Себестоимость
		               |	ИЗ
		               |		РегистрСведений.СебестоимостьТоваров.СрезПоследних(&ТекДата, ) КАК СебестоимостьТоваровСрезПоследних) КАК ВЗ_Запрос
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВЗ_Запрос.Номенклатура";
					   
		Результаты = Запрос.ВыполнитьПакет();
		ТабКешТТ = Результаты[0].Выгрузить();
		ТабКешТовары = Результаты[1].Выгрузить();
		ТабКешТТ.Индексы.Добавить("СтруктурнаяЕдиница");
		ТабКешТовары.Индексы.Добавить("Номенклатура");
		
		ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();

		ТекстЗапроса = "create table #ls (id_tt int, id_tov int, 
					|	summa numeric(15, 3), rashod numeric(15, 3)
					|	, vozvrat_pok numeric(15, 3)) 
	                |
					|Insert into #ls
					|exec ('SELECT
					|	DTT.id_tt
					|	,DTT.id_tov
					|	,SUM([summa]) summa
					|	,SUM([quantity]) rashod
					|	,SUM([vozvrat_pok]) vozvrat_pok
					|FROM [vv03].[dbo].[DTT] DTT (nolock) 
	                |
						|where date_tt >= '" + ВнешниеДанные.ФорматПоля(Макс(ДатаНачала, НачалоМесяца(ДатаОбработки)), Истина) + "' and date_tt <= '" + ВнешниеДанные.ФорматПоля(Мин(ДатаОкончания, КонецМесяца(ДатаОбработки)), Истина) + "'
					|GROUP BY 
					|	DTT.id_tt, DTT.id_tov') at [SRV-SQL03]
					
					|	
					|CREATE INDEX index_idtt
					|ON #ls(id_tt)
					|
					|CREATE INDEX index_id_tov
					|ON #ls(id_tov)
					|
					|SELECT 
					|	UINTT._Fld4946 as TTUID
					|	,UINTov._Fld4946 as TovarUID
					|	,[summa] summa
					|	,[rashod] rashod
					|	,[vozvrat_pok] vozvrat_pok
					|FROM #ls DTT (nolock) 
					|LEFT OUTER JOIN IzbenkaFin.dbo._InfoRg4943 UINTT (nolock) ON DTT.id_tt = UINTT._Fld4953 and UINTT._Fld4944_TYPE = 0x08 and UINTT._Fld4944_RTRef = 0x0000002A and UINTT._Fld4947 = 1
					|LEFT OUTER JOIN IzbenkaFin.dbo._InfoRg4943 UINTov (nolock) ON DTT.id_tov = UINTov._Fld4953 and UINTov._Fld4944_TYPE = 0x08 and UINTov._Fld4944_RTRef = 0x0000001D
					|LEFT OUTER JOIN IzbenkaFin.dbo._Reference29 TovSpr (nolock) ON DTT.id_tov = TovSpr._Fld760
					|WHERE TovSpr._Fld3860 = 0
	                |
					|";

		rs = ADOСоединение.Execute(ТекстЗапроса);
		Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
			rs=rs.NextRecordSet();
		КонецЦикла;
			
		Попытка
			rs.MoveFirst();
			
			Пока НЕ rs.EOF() Цикл
				СтрокаДоб = ТаблицаДанных.Добавить();
				СтрокаДоб.Номенклатура = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Rs.Fields("TovarUID").Value));
				ТТСсылка = Справочники.СтруктурныеЕдиницы.ПолучитьСсылку(Новый УникальныйИдентификатор(Rs.Fields("TTUID").Value));
				СтрокаКешТТ = ТабКешТТ.Найти(ТТСсылка, "СтруктурнаяЕдиница");
				Если СтрокаКешТТ <> Неопределено Тогда
					СтрокаДоб.Организация = СтрокаКешТТ.Организация;
				КонецЕсли;
				СтрокаДоб.Количество = Rs.Fields("rashod").Value;
				СтрокаДоб.СуммаПродаж = Rs.Fields("summa").Value;
				СтрокаКешТовар = ТабКешТовары.Найти(СтрокаДоб.Номенклатура, "Номенклатура");
				Если СтрокаКешТовар <> Неопределено Тогда
					СтрокаДоб.СебестоимостьПродаж = СтрокаКешТовар.Себестоимость * СтрокаДоб.Количество;
				КонецЕсли;
				СтрокаДоб.КоличествоВозврат = Rs.Fields("vozvrat_pok").Value;
				Если СтрокаКешТовар <> Неопределено Тогда
					СтрокаДоб.СебестоимостьВозврат = СтрокаКешТовар.Себестоимость * СтрокаДоб.КоличествоВозврат;
					СтрокаДоб.СуммаВозврат = СтрокаКешТовар.Цена * СтрокаДоб.КоличествоВозврат;
				КонецЕсли;	
				rs.MoveNext();
			КонецЦикла;
		Исключение
		КонецПопытки;
		ADOСоединение.Close();
		ADOСоединение = Неопределено;
		ДатаОбработки = ДобавитьМесяц(ДатаОбработки, 1);
		
	КонецЦикла;	
	
	ТаблицаДанных.Свернуть("Организация, Номенклатура", "Количество, СуммаПродаж, СебестоимостьПродаж");
	СтруктураОтбор = Новый Структура;
	СтруктураОтбор.Вставить("Организация",Организация);
	ТаблицаДанных = ТаблицаДанных.Скопировать(СтруктураОтбор);

	Возврат ТаблицаДанных;
	
КонецФункции

Функция ПолучитьДатуПоследнегоРезерва(Ссылка,Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОНЕЦПЕРИОДА(РезервНаОбесцениваниеТовара.Дата, МЕСЯЦ) КАК ДатаНачала
		|ИЗ
		|	Документ.РезервНаОбесцениваниеТовара КАК РезервНаОбесцениваниеТовара
		|ГДЕ
		|	РезервНаОбесцениваниеТовара.Дата < &Дата
		|	И РезервНаОбесцениваниеТовара.Проведен = ИСТИНА
		|	И РезервНаОбесцениваниеТовара.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.ДатаНачала + 1;
	КонецЦикла;
	
	Возврат Дата(2017,1,1);
	
КонецФункции	
	
&НаСервере
Процедура ЗаполнитьРезервНаСервере()
	
 	ТаблицаОстаткиПоБухгалтерии = ПолучитьТаблицуОстатковБП(Объект.Организация.ИНН,Объект.Дата);
	
	ДатаНачала = ПолучитьДатуПоследнегоРезерва(Объект.Ссылка,Объект.Дата);
	
	ТаблицаПродажиТоваров = ПолучитьТаблицуПродаж(Объект.Организация,ДатаНачала,КонецДня(Объект.Дата));
	
	Если ТаблицаОстаткиПоБухгалтерии = Неопределено Тогда
		Сообщить("не удалось получить остатки товаров по бухгалтерии");
		Возврат;	
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиБухгалтерия.БПИДНоменклатура,
		|	ОстаткиБухгалтерия.БПКоличество,
		|	ОстаткиБухгалтерия.БПСумма
		|ПОМЕСТИТЬ втОстаткиБухгалтерия
		|ИЗ
		|	&ОстаткиБухгалтерия КАК ОстаткиБухгалтерия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Номенклатура.Ссылка,
		|	втОстаткиБухгалтерия.БПКоличество,
		|	втОстаткиБухгалтерия.БПСумма
		|ПОМЕСТИТЬ втОстатки
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиБухгалтерия КАК втОстаткиБухгалтерия
		|		ПО Номенклатура.id_tov = втОстаткиБухгалтерия.БПИДНоменклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втСебестоимостьПродаж.Номенклатура,
		|	втСебестоимостьПродаж.СуммаПродаж,
		|	втСебестоимостьПродаж.СебестоимостьПродаж,
		|	втСебестоимостьПродаж.Количество
		|ПОМЕСТИТЬ втПродажи
		|ИЗ
		|	&Продажи КАК втСебестоимостьПродаж
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОстатки.Ссылка КАК Номенклатура,
		|	втОстатки.БПКоличество КАК ОстатокКоличество,
		|	втОстатки.БПСумма КАК ОстатокСумма,
		|	0 КАК ПродажиСумма,
		|	0 КАК ПродажиКоличество
		|ПОМЕСТИТЬ втОбъединение
		|ИЗ
		|	втОстатки КАК втОстатки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втПродажи.Номенклатура,
		|	0,
		|	0,
		|	втПродажи.СуммаПродаж,
		|	втПродажи.Количество
		|ИЗ
		|	втПродажи КАК втПродажи
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОбъединение.Номенклатура,
		|	СУММА(втОбъединение.ОстатокКоличество) КАК ОстатокКоличество,
		|	СУММА(втОбъединение.ОстатокСумма) КАК ОстатокСумма,
		|	СУММА(втОбъединение.ПродажиСумма) КАК ПродажиСумма,
		|	СУММА(втОбъединение.ПродажиКоличество) КАК ПродажиКоличество
		|ПОМЕСТИТЬ втСводнаяТаблица
		|ИЗ
		|	втОбъединение КАК втОбъединение
		|
		|СГРУППИРОВАТЬ ПО
		|	втОбъединение.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втСводнаяТаблица.Номенклатура,
		|	втСводнаяТаблица.ОстатокКоличество,
		|	втСводнаяТаблица.ОстатокСумма,
		|	втСводнаяТаблица.ПродажиСумма,
		|	втСводнаяТаблица.ПродажиКоличество,
		|	ВЫБОР
		|		КОГДА втСводнаяТаблица.ОстатокКоличество > 0
		|			ТОГДА втСводнаяТаблица.ОстатокСумма / втСводнаяТаблица.ОстатокКоличество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СебестоимостьОстаток,
		|	ВЫБОР
		|		КОГДА втСводнаяТаблица.ПродажиКоличество > 0
		|			ТОГДА втСводнаяТаблица.ПродажиСумма / втСводнаяТаблица.ПродажиКоличество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СебестоимостьПродажи
		|ПОМЕСТИТЬ втТаблицаСебестоимость
		|ИЗ
		|	втСводнаяТаблица КАК втСводнаяТаблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФинансовыйОстатки.Субконто1 КАК Номенклатура,
		|	-(ФинансовыйОстатки.СуммаОстаток + ФинансовыйОстатки.СуммаМСФООстаток) КАК Сумма
		|ПОМЕСТИТЬ втТекущийРезерв
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.Остатки(&Дата, Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РезервНаСписаниеОбесцененияТоваров), , Организация = &Организация) КАК ФинансовыйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТаблицаСебестоимость.Номенклатура,
		|	втТаблицаСебестоимость.ОстатокКоличество,
		|	втТаблицаСебестоимость.ОстатокСумма,
		|	втТаблицаСебестоимость.ПродажиСумма,
		|	втТаблицаСебестоимость.ПродажиКоличество,
		|	втТаблицаСебестоимость.СебестоимостьОстаток,
		|	втТаблицаСебестоимость.СебестоимостьПродажи,
		|	ВЫБОР
		|		КОГДА втТаблицаСебестоимость.СебестоимостьОстаток > втТаблицаСебестоимость.СебестоимостьПродажи
		|			ТОГДА (втТаблицаСебестоимость.СебестоимостьОстаток - втТаблицаСебестоимость.СебестоимостьПродажи) * втТаблицаСебестоимость.ОстатокКоличество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК РезервКНачислению,
		|	ВЫБОР
		|		КОГДА втТаблицаСебестоимость.СебестоимостьПродажи > 0
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК БылиПродажи,
		|	ВЫБОР
		|		КОГДА втТаблицаСебестоимость.ОстатокКоличество > 0
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьОстатки
		|ПОМЕСТИТЬ втРезультат
		|ИЗ
		|	втТаблицаСебестоимость КАК втТаблицаСебестоимость
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втРезультат.Номенклатура,
		|	втРезультат.РезервКНачислению,
		|	0 КАК Сумма,
		|	втРезультат.БылиПродажи,
		|	втРезультат.ЕстьОстатки
		|ПОМЕСТИТЬ втРезультатОбъединение
		|ИЗ
		|	втРезультат КАК втРезультат
		|ГДЕ
		|	втРезультат.СебестоимостьПродажи < втРезультат.СебестоимостьОстаток
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втТекущийРезерв.Номенклатура,
		|	0,
		|	втТекущийРезерв.Сумма,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	втТекущийРезерв КАК втТекущийРезерв
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втРезультатОбъединение.Номенклатура,
		|	СУММА(втРезультатОбъединение.РезервКНачислению) КАК РезервКНачислению,
		|	СУММА(втРезультатОбъединение.Сумма) КАК ТекущийРезерв,
		|	МАКСИМУМ(втРезультатОбъединение.БылиПродажи) КАК БылиПродажи,
		|	МАКСИМУМ(втРезультатОбъединение.ЕстьОстатки) КАК ЕстьОстатки
		|ПОМЕСТИТЬ втИтоговыйРезультат
		|ИЗ
		|	втРезультатОбъединение КАК втРезультатОбъединение
		|ГДЕ
		|	втРезультатОбъединение.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Товар)
		|
		|СГРУППИРОВАТЬ ПО
		|	втРезультатОбъединение.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втИтоговыйРезультат.Номенклатура,
		|	ВЫБОР
		|		КОГДА втИтоговыйРезультат.ЕстьОстатки = ИСТИНА
		|			ТОГДА ЕСТЬNULL(втИтоговыйРезультат.РезервКНачислению, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Требуется,
		|	ЕСТЬNULL(втИтоговыйРезультат.ТекущийРезерв, 0) КАК ТекущийРезерв,
		|	ВЫБОР
		|		КОГДА втИтоговыйРезультат.БылиПродажи = ИСТИНА
		|			ТОГДА ЕСТЬNULL(втИтоговыйРезультат.РезервКНачислению, 0) - ЕСТЬNULL(втИтоговыйРезультат.ТекущийРезерв, 0)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА втИтоговыйРезультат.ЕстьОстатки = ЛОЖЬ
		|					ТОГДА -ЕСТЬNULL(втИтоговыйРезультат.ТекущийРезерв, 0)
		|				ИНАЧЕ 0
		|			КОНЕЦ
		|	КОНЕЦ КАК Сумма,
		|	втИтоговыйРезультат.БылиПродажи
		|ИЗ
		|	втИтоговыйРезультат КАК втИтоговыйРезультат
		|ГДЕ
		|	втИтоговыйРезультат.РезервКНачислению > втИтоговыйРезультат.ТекущийРезерв
		|	И ВЫБОР
		|			КОГДА втИтоговыйРезультат.БылиПродажи = ИСТИНА
		|				ТОГДА ЕСТЬNULL(втИтоговыйРезультат.РезервКНачислению, 0) - ЕСТЬNULL(втИтоговыйРезультат.ТекущийРезерв, 0)
		|			ИНАЧЕ ВЫБОР
		|					КОГДА втИтоговыйРезультат.ЕстьОстатки = ЛОЖЬ
		|						ТОГДА -ЕСТЬNULL(втИтоговыйРезультат.ТекущийРезерв, 0)
		|					ИНАЧЕ 0
		|				КОНЕЦ
		|		КОНЕЦ > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втИтоговыйРезультат.Номенклатура,
		|	ЕСТЬNULL(втИтоговыйРезультат.РезервКНачислению, 0) КАК Требуется,
		|	ЕСТЬNULL(втИтоговыйРезультат.ТекущийРезерв, 0) КАК ТекущийРезерв,
		|	ВЫБОР
		|		КОГДА втИтоговыйРезультат.БылиПродажи = ИСТИНА
		|			ТОГДА ЕСТЬNULL(втИтоговыйРезультат.ТекущийРезерв, 0) - ЕСТЬNULL(втИтоговыйРезультат.РезервКНачислению, 0)
		|		ИНАЧЕ ВЫБОР
		|				КОГДА втИтоговыйРезультат.ЕстьОстатки = ИСТИНА
		|					ТОГДА 0
		|				ИНАЧЕ ЕСТЬNULL(втИтоговыйРезультат.ТекущийРезерв, 0)
		|			КОНЕЦ
		|	КОНЕЦ КАК Сумма
		|ИЗ
		|	втИтоговыйРезультат КАК втИтоговыйРезультат
		|ГДЕ
		|	втИтоговыйРезультат.ТекущийРезерв > втИтоговыйРезультат.РезервКНачислению
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втРезультат.Номенклатура,
		|	втРезультат.ОстатокКоличество,
		|	втРезультат.ОстатокСумма,
		|	втРезультат.ПродажиСумма,
		|	втРезультат.ПродажиКоличество,
		|	втРезультат.СебестоимостьОстаток,
		|	втРезультат.СебестоимостьПродажи,
		|	втРезультат.РезервКНачислению,
		|	втРезультат.БылиПродажи,
		|	втТекущийРезерв.Сумма КАК ТекущийРезерв
		|ИЗ
		|	втРезультат КАК втРезультат
		|		ЛЕВОЕ СОЕДИНЕНИЕ втТекущийРезерв КАК втТекущийРезерв
		|		ПО втРезультат.Номенклатура = втТекущийРезерв.Номенклатура
		|ГДЕ
		|	(втРезультат.БылиПродажи = ИСТИНА
		|			ИЛИ втРезультат.ЕстьОстатки = ИСТИНА
		|			ИЛИ втТекущийРезерв.Сумма > 0)";

	
	Запрос.УстановитьПараметр("ОстаткиБухгалтерия",ТаблицаОстаткиПоБухгалтерии);
	Запрос.УстановитьПараметр("Продажи",ТаблицаПродажиТоваров);
	Запрос.УстановитьПараметр("Дата",КонецМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("Организация",Объект.Организация);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаКНачислению = РезультатЗапроса[10].Выгрузить();
	ТаблицаКСписанию   = РезультатЗапроса[11].Выгрузить();
	Расчеты   = РезультатЗапроса[12].Выгрузить();
	

	Объект.НачислениеРезерва.Загрузить(ТаблицаКНачислению);
	Объект.СписаниеРезерва.Загрузить(ТаблицаКСписанию);	
	Объект.Расчеты.Загрузить(Расчеты);
	
КонецПроцедуры



&НаКлиенте
Процедура ЗаполнитьРезерв(Команда)
	
	Если не ЗначениеЗаполнено(Объект.Дата) Тогда
		Сообщить("Дата не заполнена!");
		Возврат;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(Объект.Организация) Тогда
		Сообщить("Организация не заполнена!");
		Возврат;
	КонецЕсли;
	
	Если Объект.НачислениеРезерва.Количество() > 0 ИЛИ Объект.СписаниеРезерва.Количество() > 0 Тогда
		ОбработкаРезультата = Новый ОписаниеОповещения("ЗаполнитьРезервЗавершение",ЭтаФорма);
		ТекстВопроса = "Табличные части будут перезаполнены. Продолжить?";	
		ПоказатьВопрос(ОбработкаРезультата,ТекстВопроса,РежимДиалогаВопрос.ДаНет);	
	Иначе 
		ЗаполнитьРезервНаСервере();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьРезервЗавершение(Результат,Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьРезервНаСервере();
	КонецЕсли;
КонецПроцедуры	
