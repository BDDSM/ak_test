
&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.СлужебнаяЗаписка.Видимость = Объект.КомандировкаНаЛичномТранспорте;
	
	// разделение - старый - новый вариант заполнения
	Элементы.ПодразделениеОрганизации.Видимость = ЗначениеЗаполнено(Объект.ПодразделениеОрганизации);
	Элементы.СтруктурнаяЕдиница.Видимость 		= НЕ ЗначениеЗаполнено(Объект.ПодразделениеОрганизации);
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокОрганизаций()
	
	Список = Новый СписокЗначений;
	Список.Добавить(Справочники.Организации.НайтиПоКоду("000000004")); // Луг да Поле
	Список.Добавить(Справочники.Организации.НайтиПоКоду("000000006")); // Вкусвилл
	Список.Добавить(Справочники.Организации.НайтиПоКоду("000000005")); // Проект Избенка
	
	Возврат Список;
	
КонецФункции

Процедура ПроверитьОрганизацию()
	
	Если ЗначениеЗаполнено(Объект.Организация)
		И ЗначениеЗаполнено(Объект.СотрудникиОрганизации)
		И НЕ Объект.СотрудникиОрганизации.Организация = Объект.Организация Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Внимание! Данный сотрудник  является работником другой организации!";
		//		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеТС()
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Владелец", Объект.ФизЛицо);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТранспортныеСредства.МаркаАвтомобиля,
	|	ТранспортныеСредства.ГосударственныйРегистрационныйНомер,
	|	ТранспортныеСредства.ВидТранспорта
	|ИЗ
	|	Справочник.ТранспортныеСредства КАК ТранспортныеСредства
	|ГДЕ
	|	ТранспортныеСредства.Владелец = &Владелец";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Объект.МодельМарка 		= Выборка.МаркаАвтомобиля;
		Объект.НомернойЗнак 	= Выборка.ГосударственныйРегистрационныйНомер;
		Объект.ВидТранспорта 	= Выборка.ВидТранспорта;
	Иначе
		Объект.МодельМарка 		= "";
		Объект.НомернойЗнак 	= "";
		Объект.ВидТранспорта 	= "";
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 08.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Приказ на командировку");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	Период.ДатаНачала 		= Объект.НачалоКомандировки;
	Период.ДатаОкончания 	= Объект.КонецКомандировки;
	
	//{[+](фрагмент добавлен), Долгих П.В. 15.02.2017 
	ОбъектДо = Новый Структура;
	Для каждого ключ Из Метаданные.Документы.ПриказНаКомандировку.Реквизиты Цикл
		ОбъектДо.Вставить(Ключ.Имя, Объект [Ключ.Имя] );
	КонецЦикла; 
	
	РуководительПодразделения = ПолучитьРуководителя();
	
	ОбновитьФорму();
	
	//} 15.02.2017
	
КонецПроцедуры

//+++ AK suvv 22.06.2018
//Процедура ОтправитьПисьмоОСозданииДокумента()
//	
//	Если НЕ Объект.Ссылка.Пустая() Тогда
//		Возврат;
//	КонецЕсли;
//	
//	//
//	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
//	
//	Письмо = Новый ИнтернетПочтовоеСообщение;
//	Письмо.Тема 			= "Создан приказ на командировку";
//	Письмо.Отправитель 		= УчетнаяЗапись.Логин;
//	Письмо.ИмяОтправителя 	= УчетнаяЗапись.Логин;
//	
//	Получатель = Письмо.Получатели.Добавить();
//	//+++ AK suvv ИП-00018409
//	//Получатель.Адрес = "buh37@vkusvill.ru";
//	Получатель.Адрес = "buh18@vkusvill.ru";
//	//--- AK suvv
//	Получатель = Письмо.Получатели.Добавить();
//	Получатель.Адрес = "buhzp2@vkusvill.ru";	
//	Получатель = Письмо.Получатели.Добавить();
//	Получатель.Адрес = "ek.vkusvill@mail.ru";	
//	
//	ТекстПисьма = Письмо.Тексты.Добавить();
//	ТекстПисьма.ТипТекста 	= ТипТекстаПочтовогоСообщения.ПростойТекст;
//	мТекстПисьма 		= "Создан документ ""Приказ на командировку"":" +   
//	Символы.ПС + 
//	"Физлицо " + Объект.СотрудникиОрганизации + "; период командировки с " + Формат(Объект.НачалоКомандировки, "ДЛФ=Д") +
//	" по " + Формат(Объект.КонецКомандировки, "ДЛФ=Д");
//	Если ЗначениеЗаполнено(Объект.ДокументОснование)
//		И Объект.ДокументОснование.СуммаДокумента > 0 Тогда
//		мТекстПисьма = мТекстПисьма + "; сумма " + Формат(Объект.ДокументОснование.СуммаДокумента, "ЧГ=");
//	КонецЕсли;
//	ТекстПисьма.Текст = мТекстПисьма;
//	
//	Почта = Новый ИнтернетПочта;
//	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
//	Почта.Подключиться(Профиль);	
//	Почта.Послать(Письмо);
//	Почта.Отключиться();
//	
//КонецПроцедуры
//--- AK suvv
Процедура ОтправитьПисьмоОСозданииДокумента()
	
	МассивАдресовДляОтправки = РегистрыСведений.АК_ГруппыРассылки.ПолучитьМассивЭлАдресовПоГруппеРассылки(Справочники.АК_ГруппыРассылки.РассылкаПриказовНаКомандировку);
	Если МассивАдресовДляОтправки.Количество() = 0 Тогда Возврат; КонецЕсли;
	МассивАдресовЭП = Новый Массив;
	// на случай, если эл. адрес составной
	Для Каждого СоставнойАдресЭП Из МассивАдресовДляОтправки Цикл
		МассАдресовЭП = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(СоставнойАдресЭП, ";");
		Для Каждого АдресЭП Из МассАдресовЭП Цикл
			Если ЗначениеЗаполнено(АдресЭП) Тогда
				МассивАдресовЭП.Добавить(АдресЭП);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	КвоАдресов = МассивАдресовЭП.Количество();
	Если МассивАдресовЭП.Количество() = 0 Тогда Возврат; КонецЕсли;
	КвоИтераций = Цел(КвоАдресов / 33) + 1;
	
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
	Если НЕ ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		Возврат;
	КонецЕсли;
	
	Почта = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Почта.Подключиться(Профиль);
	
	Для Ит = 1 По КвоИтераций Цикл
		
		Письмо = Новый ИнтернетПочтовоеСообщение;
		Письмо.Тема 			= "Создан приказ на командировку";
		Письмо.Отправитель 		= УчетнаяЗапись.Логин;
		Письмо.ИмяОтправителя 	= УчетнаяЗапись.Логин;
		
		Для Сч = (Ит - 1) * 32 + 1 По Мин(КвоАдресов, Ит * 32) Цикл
			Получатель = Письмо.Получатели.Добавить();
			Получатель.Адрес = СокрЛП(МассивАдресовЭП[Сч - 1]);
		КонецЦикла;
		
		ТекстПисьма = Письмо.Тексты.Добавить();
		ТекстПисьма.ТипТекста 	= ТипТекстаПочтовогоСообщения.ПростойТекст;
		мТекстПисьма = 
		"Создан документ Приказ на командировку № "+ Объект.Номер + " от " + Формат(Объект.Дата, "ДЛФ=DD") + "
		|на сотрудника : " + Объект.ФизЛицо + "
		|период командировки : с " + Формат(Объект.НачалоКомандировки, "ДЛФ=Д") + " по " + Формат(Объект.КонецКомандировки, "ДЛФ=Д")  + "
		|место назначения : " + Объект.МестоНазначения + "
		|цель командировки : " + Объект.ЦельКомандировки;		
		Если ЗначениеЗаполнено(Объект.ДокументОснование)
			И Объект.ДокументОснование.СуммаДокумента > 0 Тогда
			мТекстПисьма = мТекстПисьма + "
			|сумма :" + Формат(Объект.ДокументОснование.СуммаДокумента, "ЧГ=");	
		КонецЕсли;
	
		ТекстПисьма.Текст = мТекстПисьма;
		Попытка
			Почта.Послать(Письмо);
		Исключение
			Сообщить("Ошибка при отправке почты: " + ОписаниеОшибки());
		КонецПопытки;
		
	КонецЦикла;
		
	Почта.Отключиться();
	
КонецПроцедуры //--- AK suvv


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимость();
	
	//+++АК sils 08.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
	//---АК
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	//+++ AK suvv 27.06.2018 ИП-00019056
	//ОтправитьПисьмоОСозданииДокумента();
	//--- AK suvv
	
КонецПроцедуры


&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	Объект.НачалоКомандировки 	= Период.ДатаНачала;
	Объект.КонецКомандировки 	= Период.ДатаОкончания;
	
	ОбновитьФорму();
	
	
КонецПроцедуры

Процедура СотрудникиОрганизацииПриИзмененииНаСервере()
	
	Объект.ТабельныйНомер 			= Объект.СотрудникиОрганизации.Код;
	//	Объект.ПодразделениеОрганизации = Объект.СотрудникиОрганизации.ПодразделениеОрганизации;
	Объект.Должность 				= Объект.СотрудникиОрганизации.Физлицо.Должность;
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	Пользователи.ФизЛицо,
	|	Пользователи.Ссылка КАК Пользователь,
	|	ПодразделениеСотрудника.Сотрудник КАК ПользовательРегистр,
	|	ПодразделениеСотрудника.ЦФО КАК Отдел
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиПоЦФО.СрезПоследних КАК ПодразделениеСотрудника
	|		ПО (ПодразделениеСотрудника.Сотрудник = Пользователи.Ссылка)
	|ГДЕ
	|	Пользователи.ФизЛицо = &ФизЛицо"; 
	
	Запрос.УстановитьПараметр("ФизЛицо",Объект.СотрудникиОрганизации.Физлицо);
	Подр = Запрос.Выполнить().Выгрузить();
	Если Подр.Количество() > 0 Тогда
		Объект.СтруктурнаяЕдиница = Подр [0]. Отдел; 
	Иначе
		Объект.СтруктурнаяЕдиница = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	КонецЕсли; 
	Объект.ПодразделениеОрганизации = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	
	Если НЕ Объект.СотрудникиОрганизации.Организация = Объект.Организация Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Внимание! Данный сотрудник  является работником другой организации!";
		Сообщение.Сообщить();
	КонецЕсли;
	
	//
	ЗаполнитьДанныеТС();
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникиОрганизацииПриИзменении(Элемент)
	
	СотрудникиОрганизацииПриИзмененииНаСервере();
	ОбновитьФорму();
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ПроверитьОрганизацию();
	ОбновитьФорму();	
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = ПолучитьФорму("Справочник.Организации.ФормаВыбора",,Элемент);
	
	ФормаВыбора.Отбор.Ссылка.Использование 	= Истина;
	ФормаВыбора.Отбор.Ссылка.ВидСравнения 	= ВидСравнения.ВСписке;
	ФормаВыбора.Отбор.Ссылка.Значение 		= ПолучитьСписокОрганизаций();
	
	ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандировкаНаЛичномТранспортеПриИзменении(Элемент)
	
	ЗаполнитьДанныеТС();
	
	УстановитьВидимость();
	ОбновитьФорму();
	
КонецПроцедуры

//{[+](фрагмент добавлен), Долгих П.В. 14.02.2017 18:05:11

&НаКлиенте
Процедура ПрочиеПоляПриИзменении(Элемент)
	
	ОбновитьФорму();
	
КонецПроцедуры


&НаСервере
Процедура ОбновитьФорму()
	
	ЕстьИзменения = Ложь;
	Для каждого ключ Из Метаданные.Документы.ПриказНаКомандировку.Реквизиты Цикл
		Если ОбъектДо [Ключ.Имя] <>  Объект [Ключ.Имя]  Тогда
			ЕстьИзменения = Истина;
			прервать;
		КонецЕсли; 
	КонецЦикла; 
	
	ЭтоРуководитель = Ложь;
	РуководительПодразделения = ПолучитьРуководителя();
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	Если ЗначениеЗаполнено(РуководительПодразделения) 
		И РуководительПодразделения = ТекущийПользователь.ФизЛицо Тогда
		
		ЭтоРуководитель = Истина;
		
	КонецЕсли;
	
	ТипКнопки = 0 ;
	
	Если ЕстьИзменения и ЭтоРуководитель Тогда
		
		ТипКнопки 							= 2;
		Объект.АК_Статус 					= Перечисления.АК_СтаусыПриказаНаКомандировку.НаСогласовании;
		НовыйСтатус 						= Перечисления.АК_СтаусыПриказаНаКомандировку.Согласован;
		
	ИначеЕсли ЕстьИзменения  Тогда 	
		
		ТипКнопки = 1;
		Объект.АК_Статус = Перечисления.АК_СтаусыПриказаНаКомандировку.Создан;
		
	ИначеЕсли ЭтоРуководитель и Объект.АК_Статус <> Перечисления.АК_СтаусыПриказаНаКомандировку.Согласован Тогда 
		
		ТипКнопки = 2;
		
	ИначеЕсли НЕ ЭтоРуководитель и Объект.АК_Статус = Перечисления.АК_СтаусыПриказаНаКомандировку.Создан Тогда 	
		
		ТипКнопки = 1;
		
	КонецЕсли; 
	
	Если ТипКнопки = 0 Тогда
		
		Элементы.ИзменитьСтатус.Видимость = Ложь;
		
	ИначеЕсли ТипКнопки = 1 Тогда 	
		
		Элементы.ИзменитьСтатус.Заголовок = "Отправить на согласование";
		Элементы.ИзменитьСтатус.Видимость = Истина;
		НовыйСтатус = Перечисления.АК_СтаусыПриказаНаКомандировку.НаСогласовании;

		
	ИначеЕсли ТипКнопки = 2 Тогда 
		
		Элементы.ИзменитьСтатус.Заголовок 			= "Согласовать и отправить в Бухгалтерию";
		Элементы.ИзменитьСтатус.Видимость 			= Истина;
		НовыйСтатус 								= Перечисления.АК_СтаусыПриказаНаКомандировку.Согласован;

	КонецЕсли; 
	
КонецПроцедуры


&НаКлиенте
Процедура ИзменитьСтатус(Команда)
	
	//+++АК ZHAS 16-09-17 ИП-00015200.02.000.00001
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыДляПодстановкиВЗаявки.Индекс
	|ИЗ
	|	РегистрСведений.ПараметрыДляПодстановкиВЗаявки КАК ПараметрыДляПодстановкиВЗаявки
	|ГДЕ
	|	ПараметрыДляПодстановкиВЗаявки.Индекс = 100";
	ВключитьПодтверждениеПоПочте = НЕ Запрос.Выполнить().Пустой();
	//---АК ZHAS 16-09-17 ИП-00015200.02.000.00001
	
	Если НовыйСтатус = Перечисления.АК_СтаусыПриказаНаКомандировку.НаСогласовании и НЕ ЗначениеЗаполнено(РуководительПодразделения) Тогда
		АдресПолучателя = "";
	ИначеЕсли НовыйСтатус = Перечисления.АК_СтаусыПриказаНаКомандировку.НаСогласовании Тогда
		// проверка адреса начальника подразделения
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект,
		|	КонтактнаяИнформация.Тип,
		|	КонтактнаяИнформация.Вид,
		|	КонтактнаяИнформация.Представление
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект  = &Руководитель
		|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)";
		
		
		Запрос.УстановитьПараметр("Руководитель", РуководительПодразделения);
		
		СписокАдресов = Запрос.Выполнить().Выгрузить();
		
		Если СписокАдресов.Количество() > 0 Тогда
			АдресПолучателя = СписокАдресов [0].Представление; 
		Иначе
			АдресПолучателя = "";
		КонецЕсли; 
		
	ИначеЕсли НовыйСтатус = Перечисления.АК_СтаусыПриказаНаКомандировку.Согласован Тогда
		// адреса бухгалтерии для отсылка согласованного приказа
		//+++ AK suvv 17.06.2018 ИП-00019056
		//отправка писем о согласовании выполняется еще в обработке АК_ОбменПоПочтеЗагрузкаПодтвержденияЗаявок (туда тоже вносить изменения)
		АдресПолучателя = "kadri@izbenka.msk.ru; buh37@vkusvill.ru; buhzp2@gmail.com";
		//--- AK suvv
	Иначе
		АдресПолучателя = "";
	КонецЕсли; 
	
	/// АДРЕС РАЗРАБОТЧИКА для теста	
	//	АдресПолучателя = "pavel71@list.ru";
	//АдресПолучателя = "zhas@automacon.ru";
	//АдресПолучателя = "abdr@automacon.ru";
	
	Если НЕ ЗначениеЗаполнено(АдресПолучателя) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Не возможно отправить письмо т.к. не заполнен адрес получателя начальника отдела.";
		Сообщение.Сообщить(); 
		Возврат;
	КонецЕсли; 
	
	
	//+++АК ZHAS 16-09-17 ИП-00015200.02.000.00001
	Если ВключитьПодтверждениеПоПочте И НовыйСтатус = Перечисления.АК_СтаусыПриказаНаКомандировку.НаСогласовании Тогда
		Объект.ПисьмоОтправленоРуководитель 		= Перечисления.АК_СтатусыОтправкиПисемАкцепт.Подтверждение_уровень_1;
		//АкцептоватьЗаявкуОтправкаПочты(АдресПолучателя);
	Иначе
		//+++ AK suvv 19.07.2018 ИП-00019056
		//ОтправитьПисьмо(АдресПолучателя);
		Акцептант = ПараметрыСеанса.ТекущийПользователь;
		ОтправитьПисьмоНаСервере(НовыйСтатус, АдресПолучателя, Акцептант);
		//--- AK suvv
	КонецЕсли;
	//---АК ZHAS 16-09-17 ИП-00015200.02.000.00001
	
	// отметка об отправке	
	Объект.АК_Статус = НовыйСтатус;
	Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение));
	
	
	//+++АК ZHAS 16-09-17 ИП-00015200.02.000.00001
	Если ВключитьПодтверждениеПоПочте И НовыйСтатус = Перечисления.АК_СтаусыПриказаНаКомандировку.НаСогласовании Тогда
		//Объект.ПисьмоОтправленоРуководитель 		= Перечисления.АК_СтатусыОтправкиПисемАкцепт.Подтверждение_уровень_1;
		АкцептоватьЗаявкуОтправкаПочты(АдресПолучателя);
	Иначе
		//ОтправитьПисьмо(АдресПолучателя);
	КонецЕсли;
	//---АК ZHAS 16-09-17 ИП-00015200.02.000.00001

	
	
	Закрыть();
	
КонецПроцедуры

//+++ AK suvv 19.07.2018 ИП-00019056
&НаСервере
Процедура ОтправитьПисьмоНаСервере(НовыйСтатус, АдресПолучателя, ФИОПользователя)
	
	Документы.ПриказНаКомандировку.ОтправитьПисьмо(Объект.Ссылка, НовыйСтатус, АдресПолучателя, ФИОПользователя);
	
КонецПроцедуры //--- AK suvv

Процедура ПодтверждениеНачальником()
	//Меняем статус и отправляем письмо бухам
	//НовыйСтатус 								= Перечисления.АК_СтаусыПриказаНаКомандировку.Согласован;
	//ИзменитьСтатус(Команда);
КонецПроцедуры

//+++ AK suvv 19.07.2018 ИП-00019056 
//перенесла в модуль менеджера для возможности использования в других местах
//&НаСервере
//Процедура ОтправитьПисьмо(АдресПолучателя)
//	
//	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
//	ФИОПользователя =  ?(ЗначениеЗаполнено(ТекущийПользователь.ФизЛицо), строка(ТекущийПользователь.ФизЛицо), строка(ТекущийПользователь));
//	
//	
//	ШаблонТекста = 
//	" Пользователь %1  %2 
//	|
//	|Приказ на командировку № %3 от %4
//	| 
//	| на сотрудника : %5
//	| период командировки с %6 по %7
//	| место назначения : %8
//	| цель командировки : %9
//	| 
//	| 	";
//	
//	
//	Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекста, 
//	ФиоПользователя, 
//	?(НовыйСтатус = Перечисления.АК_СтаусыПриказаНаКомандировку.НаСогласовании, "отправил на согласование", "согласовал"),
//	Объект.Номер ,
//	Формат(Объект.Дата, "ДЛФ=DD"),
//	Строка(Объект.ФизЛицо),
//	Формат(Объект.НачалоКомандировки, "ДЛФ=DD"),
//	Формат(Объект.КонецКомандировки, "ДЛФ=DD"),
//	Объект.МестоНазначения,
//	Объект.ЦельКомандировки
//	);
//	
//	ТекстПисьма = Текст ;
//	
//	Тема = ?(НовыйСтатус = Перечисления.АК_СтаусыПриказаНаКомандировку.НаСогласовании,
//	"Запрос на согласование приказа на командировку" ,
//	"Извещение о согласовании приказа на командировку");
//	Тема = Тема + " № "+ Объект.Номер + " от " + Формат(Объект.Дата, "ДЛФ=DD");
//	
//	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
//	
//	СпАдресов=Новый СписокЗначений;
//	МассивАдресов=Справочники.Контрагенты.РазложитьСтрокуВМассивПодстрок(АдресПолучателя,";");	
//	Для каждого Эл Из МассивАдресов Цикл
//		Если ЗначениеЗаполнено(Эл) Тогда
//			СпАдресов.Добавить(Сокрлп(Эл));
//		КонецЕсли; 
//	КонецЦикла; 
//	
//	Почта = Новый ИнтернетПочта;
//	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
//	Письмо = Новый ИнтернетПочтовоеСообщение;
//	
//	Почта.Подключиться(Профиль);
//	Письмо.ИмяОтправителя = ""+УчетнаяЗапись+"";
//	Письмо.ИмяОтправителя  = ""+СокрЛП(УчетнаяЗапись)+"";
//	Письмо.Отправитель     = ""+СокрЛП(УчетнаяЗапись)+"";
//	
//	Письмо.Тексты.Добавить(ТекстПисьма,ТипТекстаПочтовогоСообщения.ПростойТекст);
//	
//	Письмо.Тема=Тема;
//	
//	Для каждого Адрес Из СпАдресов Цикл
//		Получатель 			= Письмо.Получатели.Добавить();
//		Получатель.Адрес 	= Адрес.Значение;
//	КонецЦикла;	
//	
//	Почта.Послать(Письмо);
//	Сообщить("Отправлено письмо на "+АдресПолучателя);
//	Почта.Отключиться();
//	
//КонецПроцедуры
//--- AK suvv

&НаСервере
Функция ПолучитьРуководителя()
	
	Если не ЗначениеЗаполнено(Объект.ФизЛицо) Тогда
		возврат "";
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст ="ВЫБРАТЬ
	|	СтруктурнаеЕдиницаСотрудника.Подразделение,
	|	СтруктурнаеЕдиницаСотрудника.ФизЛицо,
	|	НачальникОтдела.Сотрудник КАК Руководитель
	|ИЗ
	|	РегистрСведений.СтруктурныеЕдиницыФизлиц.СрезПоследних КАК СтруктурнаеЕдиницаСотрудника
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиПоЦФО.СрезПоследних КАК НачальникОтдела
	|		ПО СтруктурнаеЕдиницаСотрудника.Подразделение = НачальникОтдела.ЦФО
	|ГДЕ
	|	СтруктурнаеЕдиницаСотрудника.ФизЛицо = &ФизЛицо
	|	И НачальникОтдела.РуководительОтдела";
	
	Запрос.УстановитьПараметр("ФизЛицо", Объект.Физлицо);
	Список = Запрос.Выполнить().Выгрузить();
	
	Если Список.Количество() > 0 Тогда
		Если Список.Количество() > 1 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Внимание в отделе " + Список[0].Подразделение.Наименование + " заполнено более одного руководителя!!";
			Сообщение.Сообщить(); 
		КонецЕсли; 
		Возврат Список[0].Руководитель.ФизЛицо;
	КонецЕсли; 
	
	Возврат "";
	
КонецФункции

&НаКлиенте
Процедура ПодразделениеОрганизацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ЗначениеОтбора = Новый Структура("Организация",Объект.Организация);
		
		ПараметрыВыбора = Новый Структура("Отбор",ЗначениеОтбора );
		
		ОткрытьФорму("Справочник.СтруктурныеЕдиницы.Форма.ФормаВыбораУпр", ПараметрыВыбора, Элемент);
	Иначе
		ОткрытьФорму("Справочник.СтруктурныеЕдиницы.Форма.ФормаВыбораУпр", , Элемент);
	КонецЕсли; 
	
	
КонецПроцедуры


&НаКлиенте
Процедура СотрудникиОрганизацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗначениеОтбора = Новый Структура("Организация, ДатаУвольнения",Объект.Организация, Дата(1,1,1));
	
	ПараметрыВыбора = Новый Структура("Отбор",ЗначениеОтбора );
	
	ОткрытьФорму("Справочник.СотрудникиОрганизаций.ФормаВыбора", ПараметрыВыбора, Элемент);
	
КонецПроцедуры


&НаКлиенте
Процедура СтруктурнаяЕдиницаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.СтруктурнаяЕдиница) Тогда
		Объект.ПодразделениеОрганизации = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	КонецЕсли; 	
	
	УстановитьВидимость();
	ОбновитьФорму();
	
КонецПроцедуры


&НаКлиенте
Процедура ФизЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗначениеОтбора = Новый Структура("Организация, ДатаУвольнения",Объект.Организация, Дата(1,1,1));
	
	ПараметрыВыбора = Новый Структура("Отбор",ЗначениеОтбора );
	
	ОткрытьФорму("Справочник.ФизическиеЛица.Форма.ФормаВыбораОрганизацияПодразделение", ПараметрыВыбора, Элемент);
	
КонецПроцедуры


&НаКлиенте
Процедура ФизЛицоПриИзменении(Элемент)
	
	ФизЛицоПриИзмененииНаСервере();
	ОбновитьФорму();
	УстановитьВидимость();
	
КонецПроцедуры

&НаСервере
Процедура ФизЛицоПриИзмененииНаСервере()
	
	Объект.ТабельныйНомер 			= Объект.ФизЛицо.Код;
	Объект.Должность 				= Объект.Физлицо.Должность;
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	|	СтруктурныеЕдиницыФизлицСрезПоследних.ФизЛицо,
	|	СтруктурныеЕдиницыФизлицСрезПоследних.Подразделение как Отдел
	|ИЗ
	|	РегистрСведений.СтруктурныеЕдиницыФизлиц.СрезПоследних КАК СтруктурныеЕдиницыФизлицСрезПоследних
	|ГДЕ
	|	СтруктурныеЕдиницыФизлицСрезПоследних.ФизЛицо = &ФизЛицо"; 
	
	Запрос.УстановитьПараметр("ФизЛицо",Объект.ФизЛицо);
	Подр = Запрос.Выполнить().Выгрузить();
	Если Подр.Количество() > 0 Тогда
		Объект.СтруктурнаяЕдиница = Подр [0]. Отдел; 
	Иначе
		Объект.СтруктурнаяЕдиница = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	КонецЕсли; 
	
	Объект.ПодразделениеОрганизации = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	ЗаполнитьДанныеТС();
	
КонецПроцедуры

//+++АК ZHAS 16-09-17 ИП-00015200.02.000.00001
&НаСервере
Процедура АкцептоватьЗаявкуОтправкаПочты(Адрес) Экспорт
	
	//Адрес = "zhas@automacon.ru";
	
	//ТекстЗапроса="ВЫБРАТЬ
	//|	МАКСИМУМ(ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(100))) КАК Почта
	//|ИЗ
	//|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	//|ГДЕ
	//|	КонтактнаяИнформация.Объект = &Объект";
	//Запрос=Новый Запрос(ТекстЗапроса);
	//Запрос.УстановитьПараметр("Объект", ПараметрыСеанса.ТекущийПользователь);
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//Пока Выборка.Следующий() Цикл
		//Адрес 										= СокрЛП(Выборка.Почта);
		СсылкаАкцептант								= ПараметрыСеанса.ТекущийПользователь;
		СписокКому 									= Новый СписокЗначений;
		Если Адрес<>"" Тогда
			СпАдресов								= Новый СписокЗначений;
			МассивАдресов							= Справочники.Контрагенты.РазложитьСтрокуВМассивПодстрок(Адрес,";");	
			Для каждого Эл Из МассивАдресов Цикл
				Если ЗначениеЗаполнено(Эл) Тогда
					СписокКому.Добавить(СокрЛП(Эл));
				КонецЕсли; 
			КонецЦикла; 
		Иначе
			СообщениеПоОшибке = НСтр("ru = 'Письмо не отправлено! Не заполнен адрес электронной почты %Выборка_Акцептант%'");
			Сообщить(СтрЗаменить(СообщениеПоОшибке, "%Выборка_Акцептант%", СсылкаАкцептант));
			//Продолжить;
		КонецЕсли;
		
		Эл1 = "zhas@automacon.ru";

		
		//СписокКому.Добавить(СокрЛП(Эл1));
		
		УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки(); 
		
		ТекстЗапросаДоки = "ВЫБРАТЬ
		                   |	ДокументНаАкцепт.Ссылка,
		                   |	ДокументНаАкцепт.Номер,
		                   |	ДокументНаАкцепт.Дата,
		                   |	ДокументНаАкцепт.Организация,
		                   |	ДокументНаАкцепт.СотрудникиОрганизации,
		                   |	ДокументНаАкцепт.ПодразделениеОрганизации,
		                   |	ДокументНаАкцепт.Должность,
		                   |	ДокументНаАкцепт.МестоНазначения,
		                   |	ДокументНаАкцепт.ЦельКомандировки,
		                   |	ДокументНаАкцепт.КомандировкаНаЛичномТранспорте,
		                   |	ДокументНаАкцепт.НачалоКомандировки,
		                   |	ДокументНаАкцепт.КонецКомандировки,
		                   |	ДокументНаАкцепт.ВидТранспорта,
		                   |	ДокументНаАкцепт.МодельМарка,
		                   |	ДокументНаАкцепт.НомернойЗнак,
		                   |	ДокументНаАкцепт.ФизЛицо
		                   |ИЗ
		                   |	Документ.ПриказНаКомандировку КАК ДокументНаАкцепт
		                   |ГДЕ
		                   |	ДокументНаАкцепт.Ссылка = &Ссылка
		                   |;
		                   |
		                   |////////////////////////////////////////////////////////////////////////////////
		                   |ВЫБРАТЬ
		                   |	ДокументНаАкцептТаблица.Ссылка,
		                   |	ДокументНаАкцептТаблица.Ссылка.Номер,
		                   |	ДокументНаАкцептТаблица.Ссылка.Дата,
		                   |	ДокументНаАкцептТаблица.Документ,
		                   |	ДокументНаАкцептТаблица.Ссылка.Организация,
		                   |	ДокументНаАкцептТаблица.Ссылка.СотрудникиОрганизации,
		                   |	ДокументНаАкцептТаблица.Ссылка.ПодразделениеОрганизации,
		                   |	ДокументНаАкцептТаблица.Ссылка.Должность,
		                   |	ДокументНаАкцептТаблица.Ссылка.МестоНазначения,
		                   |	ДокументНаАкцептТаблица.Ссылка.ЦельКомандировки,
		                   |	ДокументНаАкцептТаблица.Ссылка.КомандировкаНаЛичномТранспорте,
		                   |	ДокументНаАкцептТаблица.Ссылка.НачалоКомандировки,
		                   |	ДокументНаАкцептТаблица.Ссылка.КонецКомандировки,
		                   |	ДокументНаАкцептТаблица.Ссылка.ВидТранспорта,
		                   |	ДокументНаАкцептТаблица.Ссылка.МодельМарка,
		                   |	ДокументНаАкцептТаблица.Ссылка.НомернойЗнак
		                   |ИЗ
		                   |	Документ.ПриказНаКомандировку.ПодтверждающиеДокументы КАК ДокументНаАкцептТаблица
		                   |ГДЕ
		                   |	ДокументНаАкцептТаблица.Ссылка = &Ссылка";
		
		
		ЗапросДоки 									= Новый Запрос(ТекстЗапросаДоки);
		
		
		ЗапросДоки.УстановитьПараметр("Ссылка", Объект.Ссылка);
		
		РезЗапросДоки 								= ЗапросДоки.ВыполнитьПакет();
		
		Таблица 									= ""; 
		style 										= "<td style = ""background: #fff; text-align: left;""><font FACE=""Verdana"" color=""000000"" size=2";
		ЦветШапки 									= "E5D4F2";
		ЦветШапки 									= "F0FFFF";
		TR 											= "<th style = ""background: #";
		TA											= "; text-align: left;""><font FACE=""Verdana"" color=""000000"" size=2";
		TA1											= "; text-align: left;""><font FACE=""Verdana"" color=""000000"" size=2";
		Инд 										= 1;
		НомерЗаявки 								= "";
		//СсылкаАкцептант								= ПараметрыСеанса.ТекущийПользователь;
		
		//Таблица 							 		= Таблица + "
		//|" + TR + ЦветШапки + TA + ">Документ<TR>";

		
		РезЗапросДоки_1 							= РезЗапросДоки[0].Выбрать();
		Пока РезЗапросДоки_1.Следующий() Цикл
		
			Таблица = Таблица + "<BR>" + "НомерЗаявки: " 					+ РезЗапросДоки_1.Номер;
			Таблица = Таблица + "<BR>" + "Дата: " 							+ РезЗапросДоки_1.Дата;
			Таблица = Таблица + "<BR>" + "Организация: " 					+ РезЗапросДоки_1.Организация;
			Попытка
				Таблица = Таблица + "<BR>" + "СотрудникиОрганизации: " 			+ РезЗапросДоки_1.ФизЛицо;
			Исключение
			КонецПопытки;
			Таблица = Таблица + "<BR>" + "ПодразделениеОрганизации: " 		+ РезЗапросДоки_1.ПодразделениеОрганизации;
			Таблица = Таблица + "<BR>" + "Должность: " 						+ РезЗапросДоки_1.Должность;
			Таблица = Таблица + "<BR>" + "МестоНазначения: " 				+ РезЗапросДоки_1.МестоНазначения;
			Таблица = Таблица + "<BR>" + "ЦельКомандировки: " 				+ РезЗапросДоки_1.ЦельКомандировки;
			Таблица = Таблица + "<BR>" + "КомандировкаНаЛичномТранспорте: " + РезЗапросДоки_1.КомандировкаНаЛичномТранспорте;
			Таблица = Таблица + "<BR>" + "НачалоКомандировки: " 			+ РезЗапросДоки_1.НачалоКомандировки;
			Таблица = Таблица + "<BR>" + "КонецКомандировки: " 				+ РезЗапросДоки_1.КонецКомандировки;
			Таблица = Таблица + "<BR>" + "ВидТранспорта: " 					+ РезЗапросДоки_1.ВидТранспорта;
			Таблица = Таблица + "<BR>" + "МодельМарка: " 					+ РезЗапросДоки_1.МодельМарка;
			Таблица = Таблица + "<BR>" + "НомернойЗнак: " 					+ РезЗапросДоки_1.НомернойЗнак;
			
			РезЗапросДоки_Номер												= РезЗапросДоки_1.Номер;
			РезЗапросДоки_Дата												= РезЗапросДоки_1.Дата;
			НомерЗаявки                                     				= РезЗапросДоки_1.Номер;
			
			РезЗапросДоки_                                  				= РезЗапросДоки_1.Ссылка;
			
			Прервать;
		КонецЦикла;
		
		Таблица = Таблица + "<BR>";
		Таблица = Таблица + "<BR>";
		

		//НомерЗаявки 						 		= Строка_.СсылкаНомер;
		//СсылкаАкцептант 							= ПараметрыСеанса.ТекущийПользователь;
		
		Таблица 							 		= Таблица + "<b>Информация из шапки документа</b>";
		Таблица 							 		= Таблица + "<Table border style = ""border-collapse: collapse;""><TR>";
				
		Таблица 							 		= Таблица + "</Table>";
		Таблица 							 		= Таблица + "<br>";
		
		
		//РезЗапросДоки_1 							= РезЗапросДоки[0].Выбрать();
		РезЗапросДоки_2 							= РезЗапросДоки[1].Выбрать();
		Таблица 							 		= Таблица + "<b>Информация из таблицы Приказа на коммандировку</b>";
		Таблица 							 		= Таблица + "<Table border style = ""border-collapse: collapse;""><TR>";
		Пока РезЗапросДоки_2.Следующий() Цикл
			
			
			//Таблица 							 	= Таблица + "
			//|" + TR + ЦветШапки + TA + ">Документ<TR>";
			
			Таблица 							 	= Таблица + TR + ЦветШапки + TA1 + ">" + РезЗапросДоки_2.Документ  + "<TR>";
			
			
		КонецЦикла;	
		
		Таблица 							 		= Таблица + "</Table>";
		Таблица 							 		= Таблица + "<br>";
		
		Тема 										= "ПриказНаКомандировку №" + СокрЛП(РезЗапросДоки_Номер) + " от " + Формат(РезЗапросДоки_Дата,"ДФ=dd.MM.yyyy");
		ID_MESSAGE 									= Новый УникальныйИдентификатор;
		TYPE_MESSAGE                                = 4;
		GUID_Заявки									= Строка(Объект.Ссылка.УникальныйИдентификатор());
		Объект_Ссылка								= Объект.Ссылка;
		УправлениеЭлектроннойПочтой.ОтправитьЗаявкуНаПодтверждение(Тема, Таблица, НомерЗаявки, СписокКому, GUID_Заявки, ID_MESSAGE, TYPE_MESSAGE, Адрес, СсылкаАкцептант, УчетнаяЗапись, Объект_Ссылка)
		
		//Почта 										= Новый ИнтернетПочта;
		//Профиль 									= УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
		//Письмо 										= Новый ИнтернетПочтовоеСообщение;
		//Почта.Подключиться(Профиль);
		//Письмо.Тема 								= Тема;
		//Письмо.ИмяОтправителя  						= "accept@izbenka.msk.ru";
		//Письмо.Отправитель     						= "accept@izbenka.msk.ru";
		//Для Каждого ПолучательЭлемент Из СписокКому Цикл
		//	Получатель 								= Письмо.Получатели.Добавить();
		//	Получатель.Адрес 						= ПолучательЭлемент.Значение;
		//КонецЦикла;	
		//ТекстСообщения 								= Письмо.Тексты.Добавить();
		//ТекстСообщения.Текст    					= ТекстСообщения.Текст + Таблица;
		//пТекстСсылкиНаКнопкуПодтвердить 			= "www.vkusvill.ru";
		//пТекстСсылкиНаКнопкуОтменитьПодтверждение 	= "www.vkusvill.ru";

		//
		//
		//пТекстСсылкиНаКнопкуПодтвердить 			= "mailto:vkusvill.333@gmail.com?reply-to=vkusvill.333@gmail.com&subject=Акцепт заявки №" + НомерЗаявки + "&body=GUID%20" + GUID_Заявки + "%20ID_MESSAGE%20" + ID_MESSAGE   + "%20TYPE_MESSAGE%20" + TYPE_MESSAGE  + "%20Акцептировано";
		//пТекстСсылкиНаКнопкуОтменитьПодтверждение 	= "mailto:vkusvill.333@gmail.com?reply-to=vkusvill.333@gmail.com&subject=Акцепт заявки №" + НомерЗаявки + "&body=GUID%20" + GUID_Заявки + "%20ID_MESSAGE%20" + ID_MESSAGE   + "%20TYPE_MESSAGE%20" + TYPE_MESSAGE  + "%20Отклонено";
		//
		//пТекстКнопкиПодтвердить 					= "<a href=""" + пТекстСсылкиНаКнопкуПодтвердить + """><b>Акцептовать</b></a><br><br>";
		//пТекстКнопкиОтменитьПодтверждение 			= "<a href=""" + пТекстСсылкиНаКнопкуОтменитьПодтверждение + """><b>Отклонить</b></a><br><br>";
		//ТекстСообщения.Текст 						= ТекстСообщения.Текст + пТекстКнопкиПодтвердить + пТекстКнопкиОтменитьПодтверждение;
		//ТекстСообщения.ТипТекста 					= ТипТекстаПочтовогоСообщения.HTML;
		//Почта.Послать(Письмо);
		//Почта.Отключиться();
		//Запись 										= РегистрыСведений.АкцептЗаявок.СоздатьМенеджерЗаписи();
		//Запись.GUID_Загрузки 						= ID_MESSAGE;
		//Запись.GUID_Заявки 							= GUID_Заявки;
		//Запись.ДатаОтправки 						= ТекущаяДата();
		//Запись.ЗаявкаНаУслугиМатериалы 				= Объект.Ссылка;
		//Запись.Акцептант							= СсылкаАкцептант;
		//Запись.ИдентификаторСообщения 				= Письмо.ИдентификаторСообщения;
		//Запись.ОтправленаНаАкцепт					= Истина;
		//Запись.email 								= Адрес;
		//Запись.ТипЗаявки 							= TYPE_MESSAGE;
		//Запись.Записать();

		//
		//СообщениеПоОтправке 						= НСтр("ru = 'Отправлено письмо по акцептанту:  %Выборка_Акцептант% и документу %РезЗапросДокиСсылка%'");
		//СообщениеПоОтправке 						= СтрЗаменить(СообщениеПоОтправке, "%РезЗапросДокиСсылка%", РезЗапросДоки_.Ссылка);
		//Сообщить(СтрЗаменить(СообщениеПоОтправке, "%Выборка_Акцептант%", СсылкаАкцептант));
		
	//КонецЦикла;	
КонецПроцедуры
//---АК ZHAS 16-09-17 ИП-00015200.02.000.00001

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	//+++ AK suvv 27.06.2018 ИП-00019056
	Если Объект.Ссылка.Пустая() Тогда
		ПараметрыЗаписи.Вставить("ОтправлятьПисьмаПриСоздании", Истина);
	Иначе
		ПараметрыЗаписи.Вставить("ОтправлятьПисьмаПриСоздании", Ложь);
	КонецЕсли;
	//--- AK suvv
	
КонецПроцедуры 

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	//+++ AK suvv 27.06.2018 ИП-00019056
	Если ПараметрыЗаписи.ОтправлятьПисьмаПриСоздании Тогда
		ОтправитьПисьмоОСозданииДокумента();
	КонецЕсли;
	//--- AK suvv

КонецПроцедуры
