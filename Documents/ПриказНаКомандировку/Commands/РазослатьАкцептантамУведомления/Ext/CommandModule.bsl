
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	//Если ЭтаФорма.Модифицированность Тогда
	//	Сообщить("Сначала запишите документ");
	//	Возврат;
	//КонецЕсли;	
	ЕстьПрава = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.РассылкаУведомленийАкцептантам, Ложь);
	Если Не ЕстьПрава Тогда
		Сообщить("У вас не прав на рассылку");
		Возврат;
	КонецЕсли;	
	Режим = РежимДиалогаВопрос.ДаНет;
	Текст = "ru = ""Отправить письма всем акцептантам по всем неакцептованным заявкам?"";";
	Ответ = Вопрос(НСтр(Текст), Режим, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
    	
	//МассивЗаявок = Новый Массив;
	//Если ТипЗнч(ПараметрКоманды) = Тип("ДокументСсылка.ЗаявкаНаУслугиМатериалы") Тогда
	//	МассивЗаявок.Добавить(ПараметрКоманды);
	//Иначе	
	//	МассивЗаявок = ПараметрКоманды;
	//КонецЕсли;	
	МассивРезультатов=Новый Массив;
	ВыполнитьОтправкуСервер(МассивРезультатов);
	Для каждого Таб Из МассивРезультатов Цикл
		//Таб.Показать();
		//Сообщить();
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьОтправкуСервер(МассивРезультатов)
	
	ТекстЗапроса="ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ЗаявкаНаУслугиМатериалыУслуги.Акцептант = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|			ТОГДА ЗаявкаНаУслугиМатериалыУслуги.Ссылка.Акцептант
	|		ИНАЧЕ ЗаявкаНаУслугиМатериалыУслуги.Акцептант
	|	КОНЕЦ КАК Акцептант
	|ПОМЕСТИТЬ Акцептанты
	|ИЗ
	|	Документ.ЗаявкаНаУслугиМатериалы.Услуги КАК ЗаявкаНаУслугиМатериалыУслуги
	|ГДЕ
	|	ЗаявкаНаУслугиМатериалыУслуги.Акцептована = ЛОЖЬ
	|	И ВЫБОР
	|			КОГДА ЗаявкаНаУслугиМатериалыУслуги.Акцептант = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|				ТОГДА ЗаявкаНаУслугиМатериалыУслуги.Ссылка.Акцептант
	|			ИНАЧЕ ЗаявкаНаУслугиМатериалыУслуги.Акцептант
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА ЗаявкаНаУслугиМатериалыУслуги.Акцептант = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|			ТОГДА ЗаявкаНаУслугиМатериалыУслуги.Ссылка.Акцептант
	|		ИНАЧЕ ЗаявкаНаУслугиМатериалыУслуги.Акцептант
	|	КОНЕЦ
	|;
	|
	//zhas -- ИП-00015200.01
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПользователиСПравомАкцептаОплат.Ссылка КАК ПользовательСПравомАкцепта,
	|	ПользователиСПравомАкцептаОплат.Пользователь,
	|	МАКСИМУМ(ПользователиСПравомАкцептаОплат.ВариантРассылкиЗаявкиНаУслугиИМатериалы) КАК ВариантРассылкиЗаявкиНаУслугиИМатериалы
	|ПОМЕСТИТЬ ПользователиСПравомАкцепта
	|ИЗ
	|	Справочник.ПользователиСПравомАкцептаОплат КАК ПользователиСПравомАкцептаОплат
	|ГДЕ
	|	ПользователиСПравомАкцептаОплат.Пользователь В
	|			(ВЫБРАТЬ
	|				Акцептанты.Акцептант
	|			ИЗ
	|				Акцептанты КАК Акцептанты)
	|	И ПользователиСПравомАкцептаОплат.Пользователь <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|	И ПользователиСПравомАкцептаОплат.Активен
	|
	|СГРУППИРОВАТЬ ПО
	|	ПользователиСПравомАкцептаОплат.Ссылка,
	|	ПользователиСПравомАкцептаОплат.Пользователь
	|;
	|
	//zhas --  13-10-17 ИП-00015200.01
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Акцептанты.Акцептант КАК Акцептант,
	//zhas --  13-10-17 ИП-00015200.01
	|	ЕСТЬNULL(ПользователиСПравомАкцепта.ВариантРассылкиЗаявкиНаУслугиИМатериалы, ЗНАЧЕНИЕ(Перечисление.ВариантыРассылокЗаявкиНаУслугиИМатериалы.ПустаяСсылка)) КАК ВариантРассылкиЗаявкиНаУслугиИМатериалы,
	//zhas --  13-10-17 ИП-00015200.01
	|	МАКСИМУМ(ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(100))) КАК Почта
	|ИЗ
	|	Акцептанты КАК Акцептанты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО Акцептанты.Акцептант = КонтактнаяИнформация.Объект
	|			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	//zhas --  13-10-17 ИП-00015200.01
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПользователиСПравомАкцепта КАК ПользователиСПравомАкцепта
	|		ПО Акцептанты.Акцептант = ПользователиСПравомАкцепта.Пользователь
	//zhas --  13-10-17 ИП-00015200.01
	|ГДЕ
	|	Акцептанты.Акцептант <> ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	//zhas --  13-10-17 ИП-00015200.01
	|	И ЕСТЬNULL(ПользователиСПравомАкцепта.ВариантРассылкиЗаявкиНаУслугиИМатериалы, ЗНАЧЕНИЕ(Перечисление.ВариантыРассылокЗаявкиНаУслугиИМатериалы.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Перечисление.ВариантыРассылокЗаявкиНаУслугиИМатериалы.ПустаяСсылка)
	//zhas --  13-10-17 ИП-00015200.01
	|СГРУППИРОВАТЬ ПО
	|	Акцептанты.Акцептант,
	//zhas --  13-10-17 ИП-00015200.01
	|	ЕСТЬNULL(ПользователиСПравомАкцепта.ВариантРассылкиЗаявкиНаУслугиИМатериалы, ЗНАЧЕНИЕ(Перечисление.ВариантыРассылокЗаявкиНаУслугиИМатериалы.ПустаяСсылка))
	//zhas --  13-10-17 ИП-00015200.01
	|
	|УПОРЯДОЧИТЬ ПО
	|	Акцептант";
	Запрос=Новый Запрос(ТекстЗапроса);
	//Запрос.УстановитьПараметр("Заявки",МассивЗаявок);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	//zhas --  13-10-17 ИП-00015200.01
	//ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	//КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	//
	//СКД=Отчеты.НеакцептованныеЗаявкиНаУслуги.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	//zhas --  13-10-17 ИП-00015200.01
	
	//СКД.Параметры.Заявка.Значение = Объект.Ссылка;
	//НастройкиСКД = СКД.НастройкиПоУмолчанию;

	
	Пока Выборка.Следующий() Цикл
		
		//Значение "ОднимСписком" перечисления "ВариантыРассылокЗаявкиНаУслугиИМатериалы" будет проставлено по умолчанию для всех пользователей акцептантов
		
		Если Выборка.ВариантРассылкиЗаявкиНаУслугиИМатериалы = Перечисления.ВариантыРассылокЗаявкиНаУслугиИМатериалы.ОднимСписком Тогда 
			
			//Существующий код пакетной рассылки по акцептанту, правки не вносились
			
			ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
			КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
			
			СКД=Отчеты.НеакцептованныеЗаявкиНаУслуги.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
			
			ТабДок = Новый ТабличныйДокумент;
			
			//СКД.Параметры.Исполнитель.Значение = Выборка.Исполнитель;
			НастройкиСКД = СКД.НастройкиПоУмолчанию;
			Для каждого Эл Из НастройкиСКД.Отбор.Элементы Цикл
				Если СокрЛП(Эл.ЛевоеЗначение) = "Акцептант" Тогда
					Эл.Использование = Истина;
					Эл.ПравоеЗначение = Выборка.Акцептант;
				КонецЕсли;	
			КонецЦикла;	
			//НастройкиСКД.ПараметрыДанных.УстановитьЗначениеПараметра("Исполнитель", Выборка.Исполнитель);
			
			МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, НастройкиСКД, ДанныеРасшифровки);
			
			ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
			ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ,ДанныеРасшифровки);
			
			ТабДок=Новый ТабличныйДокумент;
			
			ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
			ПроцессорВывода.УстановитьДокумент(ТабДок);
			ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
			
			ИмяФайла=Новый УникальныйИдентификатор;
			ИмяФайла=КаталогВременныхФайлов()+ИмяФайла+".pdf";
			
			ТабДок.Записать(ИмяФайла,ТипФайлаТабличногоДокумента.PDF);
			//Отправка письма
			Адрес = СокрЛП(Выборка.Почта);
			СписокКому = Новый СписокЗначений;
			Если Адрес<>"" Тогда
				СпАдресов=Новый СписокЗначений;
				МассивАдресов=Справочники.Контрагенты.РазложитьСтрокуВМассивПодстрок(Адрес,";");	
				Для каждого Эл Из МассивАдресов Цикл
					Если ЗначениеЗаполнено(Эл) Тогда
						СписокКому.Добавить(СокрЛП(Эл));
					КонецЕсли; 
				КонецЦикла; 
				
			Иначе
				Сообщить("Письмо не отправлено! Не заполнен адрес электронной почты "+Выборка.Акцептант);
				Продолжить;
			КонецЕсли;
			
			//СписокКому.Добавить(ВыборкаДетальныеЗаписи.Представление);
			//СписокКому.Добавить("retail.e@vkusvill.ru");
			//СписокКому.Добавить("pozm@automacon.ru");
			//СписокКому.Добавить("buh9@izbenka.msk.ru");
			
			
			УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
			
			Почта = Новый ИнтернетПочта;
			Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
			Письмо = Новый ИнтернетПочтовоеСообщение;
			
			Почта.Подключиться(Профиль);
			Письмо.Тема = "Список неакцептованных заявок на: "+Формат(ТекущаяДата(),"ДЛФ=DDT");
			Письмо.ИмяОтправителя 	= "" + УчетнаяЗапись + "";
			Письмо.ИмяОтправителя  	= "" + СокрЛП(УчетнаяЗапись) + "";
			Письмо.Отправитель     	= "" + СокрЛП(УчетнаяЗапись) + "";
			Для Каждого ПолучательЭлемент Из СписокКому Цикл
				Получатель = Письмо.Получатели.Добавить();
				Получатель.Адрес = ПолучательЭлемент.Значение;
			КонецЦикла;	
			
			ТекстСообщения = Письмо.Тексты.Добавить();
			ТекстСообщения.Текст     = "Во вложении находится информация о неакцептованных заявках на услуги материалы";
			ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
			
			Письмо.Вложения.Добавить(ИмяФайла);
			
			//	Если НЕ ОбщегоНазначения.ЭтоКопияБазы() Тогда
			Почта.Послать(Письмо);
			//	КонецЕсли;	
			Почта.Отключиться();
			
			Сообщить("Отправлено письмо "+Выборка.Акцептант);
			
			МассивРезультатов.Добавить(ТабДок);
			
		ИначеЕсли Выборка.ВариантРассылкиЗаявкиНаУслугиИМатериалы = Перечисления.ВариантыРассылокЗаявкиНаУслугиИМатериалы.ОтдельнымиПисьмами Тогда
			
			//Код новой рассылки в разрезе каждого документа с кнопкой подтверждения
			
			//+++АК ZHAS 18-08-17 ИП-00015200.01
			
			ДанныеРасшифровки 							= Новый ДанныеРасшифровкиКомпоновкиДанных;
			КомпоновщикМакета 							= Новый КомпоновщикМакетаКомпоновкиДанных;
			
			СКД											= Отчеты.НеакцептованныеЗаявкиНаУслуги.ПолучитьМакет("СхемаОтправкиОднойЗаявки");

			Адрес 										= СокрЛП(Выборка.Почта);
			СписокКому 									= Новый СписокЗначений;
			Если Адрес<>"" Тогда
				СпАдресов								= Новый СписокЗначений;
				МассивАдресов							= Справочники.Контрагенты.РазложитьСтрокуВМассивПодстрок(Адрес,";");	
				Для каждого Эл Из МассивАдресов Цикл
					Если ЗначениеЗаполнено(Эл) Тогда
						СписокКому.Добавить(СокрЛП(Эл));
					КонецЕсли; 
				КонецЦикла; 
				
			Иначе
				СообщениеПоОшибке = НСтр("ru = 'Письмо не отправлено! Не заполнен адрес электронной почты %Выборка_Акцептант%'");
				Сообщить(СтрЗаменить(СообщениеПоОшибке, "%Выборка_Акцептант%", Выборка.Акцептант));
				Продолжить;
			КонецЕсли;
			
			УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
			
			ТекстЗапросаДоки="ВЫБРАТЬ
			|	ЗаявкаНаУслугиМатериалыУслуги.Ссылка,
			|	ЗаявкаНаУслугиМатериалыУслуги.Ссылка.Номер,
			|	ЗаявкаНаУслугиМатериалыУслуги.Ссылка.Дата
			|ИЗ
			|	Документ.ЗаявкаНаУслугиМатериалы.Услуги КАК ЗаявкаНаУслугиМатериалыУслуги
			|ГДЕ
			|	ЗаявкаНаУслугиМатериалыУслуги.Акцептована = ЛОЖЬ
			|	И ВЫБОР
			|			КОГДА ЗаявкаНаУслугиМатериалыУслуги.Акцептант = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
			|				ТОГДА ЗаявкаНаУслугиМатериалыУслуги.Ссылка.Акцептант
			|			ИНАЧЕ ЗаявкаНаУслугиМатериалыУслуги.Акцептант
			|		КОНЕЦ = &ТекущийАкцептант
			|
			|СГРУППИРОВАТЬ ПО
			|	ЗаявкаНаУслугиМатериалыУслуги.Ссылка,
			|	ЗаявкаНаУслугиМатериалыУслуги.Ссылка.Номер,
			|	ЗаявкаНаУслугиМатериалыУслуги.Ссылка.Дата";
			ЗапросДоки 										= Новый Запрос(ТекстЗапросаДоки);
            ЗапросДоки.УстановитьПараметр("ТекущийАкцептант", Выборка.Акцептант);
			
			РезЗапросДоки 									= ЗапросДоки.Выполнить().Выбрать();
			
			Пока РезЗапросДоки.Следующий() Цикл
				
				ТабДок 										= Новый ТабличныйДокумент;
				
				НастройкиСКД 								= СКД.НастройкиПоУмолчанию;
				Для каждого Эл Из НастройкиСКД.Отбор.Элементы Цикл
					Если СокрЛП(Эл.ЛевоеЗначение) 			= "АкцептантОтбор" Тогда
						Эл.Использование 					= Истина;
						Эл.ПравоеЗначение 					= Выборка.Акцептант;
					КонецЕсли;
					Если СокрЛП(Эл.ЛевоеЗначение) 			= "Ссылка" Тогда
						Эл.Использование 					= Истина;
						Эл.ПравоеЗначение 					= РезЗапросДоки.Ссылка;
					КонецЕсли;	
				КонецЦикла;	
				
				МакетКомпоновки 							= КомпоновщикМакета.Выполнить(СКД, НастройкиСКД, ДанныеРасшифровки);
				
				ПроцессорКомпоновкиДанных 					= Новый ПроцессорКомпоновкиДанных;
				ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ,ДанныеРасшифровки);
				МакетКомпоновки 							= КомпоновщикМакета.Выполнить(СКД, НастройкиСКД,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
				ПроцессорКомпоновкиДанных 					= Новый ПроцессорКомпоновкиДанных;
				ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ,ДанныеРасшифровки);
				Результат 									= Новый ТаблицаЗначений;
				ПроцессорВывода 							= Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
				ПроцессорВывода.УстановитьОбъект(Результат);
				ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
				Таблица 									= ""; 
				style 										= "<td style = ""background: #fff; text-align: left;""><font FACE=""Verdana"" color=""000000"" size=2";
				ЦветШапки 									= "E5D4F2";
				ЦветШапки 									= "F0FFFF";
				TR 											= "<th style = ""background: #";
				TA											= "; text-align: left;""><font FACE=""Verdana"" color=""000000"" size=2";
                TA1											= "; text-align: left;""><font FACE=""Verdana"" color=""000000"" size=2";
				Инд 										= 1;
				НомерЗаявки 								= "";
				Если Результат.Количество() 				= 0 Тогда
					Продолжить;
				КонецЕсли;
				Для Каждого Строка_ ИЗ Результат Цикл
					Если Инд 								 = 1 Тогда
						Таблица 							 = Таблица + "<b>Информация из шапки документа</b>";
						Таблица 							 = Таблица + "<Table border style = ""border-collapse: collapse;""><TR>";
						Таблица 							 = Таблица + "
						|" + TR + ЦветШапки + TA + ">Заявка
						|" + TR + ЦветШапки + TA + ">Дата
						|" + TR + ЦветШапки + TA + ">Номер
						|" + TR + ЦветШапки + TA + ">Вид операции
						|" + TR + ЦветШапки + TA + ">Орагнизация
						|" + TR + ЦветШапки + TA + ">Статья ДДС
						|" + TR + ЦветШапки + TA + ">Счет учета расчетов
						|" + TR + ЦветШапки + TA + ">Контрагент
						|" + TR + ЦветШапки + TA + ">Акцептант<TR>";

						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.Ссылка;
						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СсылкаДата;
						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СсылкаНомер;
						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СсылкаВидОперации;
						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СсылкаОрганизация;
						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СсылкаСтатьяДДС;
						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СсылкаСчетУчетаРасчетов;
						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СсылкаКонтрагент;
						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СсылкаАкцептант;
						Таблица 							 = Таблица + "</Table>";
						Таблица 							 = Таблица + "<br>";
						НомерЗаявки 						 = Строка_.СсылкаНомер;
						
						СсылкаАкцептант = Строка_.СсылкаАкцептант;
						
					ИначеЕсли ЗначениеЗаполнено(Строка_.СистемныеПоляНомерПоПорядку) Тогда
						Таблица 							 = Таблица + "<b>Информация из таблицы заявка</b>";
						Таблица 							 = Таблица + "<Table border style = ""border-collapse: collapse;""><TR>";
						Таблица 							 = Таблица + "
						|" + TR + ЦветШапки + TA + ">Номенклатура
						|" + TR + ЦветШапки + TA + ">Количество
						|" + TR + ЦветШапки + TA + ">Цена
						|" + TR + ЦветШапки + TA + ">Сумма
						|" + TR + ЦветШапки + TA + ">Структурная единица
						|" + TR + ЦветШапки + TA + ">Подтверждающий
						|" + TR + ЦветШапки + TA + ">Акцептант
						|" + TR + ЦветШапки + TA + ">Комментарий<TR>";

						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.Номенклатура;
						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.Количество;
						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.Цена;
						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.Сумма;
						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СтруктурнаяЕдиница;
						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.Подтверждающий;
						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.Акцептант;
						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.Комментарий;
						Таблица 							 = Таблица + "</Table>";
						Таблица 							 = Таблица + "<br>";
						
						Если НЕ ЗначениеЗаполнено(СсылкаАкцептант) Тогда
							СсылкаАкцептант = Строка_.Акцептант;
						КонецЕсли;

					Иначе
						Таблица 							 = Таблица + "<b>Информация из таблицы оплаты</b>";
						Таблица 							 = Таблица + "<Table border style = ""border-collapse: collapse;""><TR>";
						Таблица 							 = Таблица + "
						|" + TR + ЦветШапки + TA + ">Аванс
						|" + TR + ЦветШапки + TA + ">Дата платежа
						|" + TR + ЦветШапки + TA + ">Сумма оплаты
						|" + TR + ЦветШапки + TA + ">Назначение платежа<TR>";

						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.Аванс;
						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.ДатаПлатежа;
						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СуммаОплаты;
						Таблица 							 = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.НазначениеПлатежа;
						Таблица 							 = Таблица + "</Table>";
						Таблица 							= Таблица + "<br>";
					КонецЕсли;
					Инд = Инд + 1;
				КонецЦикла;
				ТабДок										= Новый ТабличныйДокумент;
				
				ПроцессорВывода 							= Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
				ПроцессорВывода.УстановитьДокумент(ТабДок);
				ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
				
				ИмяФайла									= Новый УникальныйИдентификатор;
				ИмяФайла									= КаталогВременныхФайлов()+ИмяФайла+".xls";
				ТабДок.Записать(ИмяФайла,ТипФайлаТабличногоДокумента.XLS);
				Почта 										= Новый ИнтернетПочта;
				Профиль 									= УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
				Письмо 										= Новый ИнтернетПочтовоеСообщение;
				Почта.Подключиться(Профиль);
				Письмо.Тема 								= "Заявка на услуги/материалы №" + СокрЛП(РезЗапросДоки.Номер) + " от " + Формат(РезЗапросДоки.Дата,"ДФ=dd.MM.yyyy");
				Письмо.ИмяОтправителя  						= "accept@izbenka.msk.ru";
				Письмо.Отправитель     						= "accept@izbenka.msk.ru";
				Для Каждого ПолучательЭлемент Из СписокКому Цикл
					Получатель 								= Письмо.Получатели.Добавить();
					Получатель.Адрес 						= ПолучательЭлемент.Значение;
				КонецЦикла;	
				ТекстСообщения 								= Письмо.Тексты.Добавить();
				ТекстСообщения.Текст    					= ТекстСообщения.Текст + Таблица;
				пТекстСсылкиНаКнопкуПодтвердить 			= "www.vkusvill.ru";
				пТекстСсылкиНаКнопкуОтменитьПодтверждение 	= "www.vkusvill.ru";
				ID_MESSAGE 									= Новый УникальныйИдентификатор;
				пТекстСсылкиНаКнопкуПодтвердить 			= "mailto:vkusvill.333@gmail.com?reply-to=vkusvill.333@gmail.com&subject=Акцепт заявки №" + НомерЗаявки + "&body=ID%20" + ID_MESSAGE + РезЗапросДоки.Ссылка.УникальныйИдентификатор() + "%0D%0AАкцептировано";
				пТекстСсылкиНаКнопкуОтменитьПодтверждение 	= "mailto:vkusvill.333@gmail.com?reply-to=vkusvill.333@gmail.com&subject=Акцепт заявки №" + НомерЗаявки + "&body=ID%20" + ID_MESSAGE + РезЗапросДоки.Ссылка.УникальныйИдентификатор() + "%0D%0A%20Отклонено";
			    пТекстКнопкиПодтвердить 					= "<a href=""" + пТекстСсылкиНаКнопкуПодтвердить + """><b>Акцептовать</b></a><br><br>";
				пТекстКнопкиОтменитьПодтверждение 			= "<a href=""" + пТекстСсылкиНаКнопкуОтменитьПодтверждение + """><b>Отклонить</b></a><br><br>";
				ТекстСообщения.Текст 						= ТекстСообщения.Текст + пТекстКнопкиПодтвердить + пТекстКнопкиОтменитьПодтверждение;
				ТекстСообщения.ТипТекста 					= ТипТекстаПочтовогоСообщения.HTML;
				Почта.Послать(Письмо);
				Почта.Отключиться();
				Запись 										= РегистрыСведений.АкцептЗаявок.СоздатьМенеджерЗаписи();
				Запись.GUID_Загрузки 						= ID_MESSAGE;
				Запись.GUID_Заявки 							= РезЗапросДоки.Ссылка.УникальныйИдентификатор();
				Запись.ДатаОтправки 						= ТекущаяДата();
				Запись.ЗаявкаНаУслугиМатериалы 				= РезЗапросДоки.Ссылка;
				Запись.Акцептант							= СсылкаАкцептант;
				Запись.ИдентификаторСообщения 				= Письмо.ИдентификаторСообщения;
				Запись.ОтправленаНаАкцепт					= Истина;
				Запись.email 								= Адрес;
				Запись.Записать();
				
				СообщениеПоОтправке 						= НСтр("ru = 'Отправлено письмо по акцептанту:  %Выборка_Акцептант% и документу %РезЗапросДокиСсылка%'");
				СообщениеПоОтправке 						= СтрЗаменить(СообщениеПоОтправке, "%РезЗапросДокиСсылка%", РезЗапросДоки.Ссылка);
				Сообщить(СтрЗаменить(СообщениеПоОтправке, "%Выборка_Акцептант%", Выборка.Акцептант));
				
				МассивРезультатов.Добавить(ТабДок);
				
			КонецЦикла;	
			
			//+++АК ZHAS 18-08-17 ИП-00015200.01
			
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры	
