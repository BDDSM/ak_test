
Функция РасчетДней(ДатаНачала, ДатаОкончания)   
    
    Возврат ((НачалоДня(ДатаОкончания) - НачалоДня(ДатаНачала)) / 86400) + 1;
        
КонецФункции

Процедура ЗаполнитьПараметры(Документ, ОбластьШапка)

	Организация 	= Документ.Организация;
	СотрудникФИО 	= Документ.СотрудникиОрганизации;
	РуководительФИО = ОбщегоНазначения.ФамилияИнициалыФизЛица(СокрЛП(Организация.ГенеральныйДиректор));
	
	РуководительДолжность = СокрЛП(Организация.должностьРуководителя);
	ОбластьШапка.Параметры.ДолжностьРуководителя 	= РуководительДолжность;
	ОбластьШапка.Параметры.ФИОРуководителя  		= РуководительФИО;
	
	ОбластьШапка.Параметры.Организация  	= Документ.Организация;
	ОбластьШапка.Параметры.НомерДокумента  	= ОбщегоНазначения.ПолучитьНомерНаПечать(Документ);
	ОбластьШапка.Параметры.ДатаСоставления  = Документ.Дата;
	
	ОбластьШапка.Параметры.СтранаГород  	= Документ.МестоНазначения;
	ОбластьШапка.Параметры.КоличествоДней  	= РасчетДней(Документ.НачалоКомандировки, Документ.КонецКомандировки);
	ОбластьШапка.Параметры.Дата  			= Документ.НачалоКомандировки;
	ОбластьШапка.Параметры.ДатаПо  			= Документ.КонецКомандировки;
	ОбластьШапка.Параметры.ФИОСотрудника 	= СотрудникФИО;
	
КонецПроцедуры


Функция ПриказОКомандировке(Документ, ТабличныйДокумент) Экспорт
	
	Макет = Документы.ПриказНаКомандировку.ПолучитьМакет("ПриказОКомандировке");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	
	ЗаполнитьПараметры(Документ, ОбластьШапка);
	
	ОбластьШапка.Параметры.ТабельныйНомер  	= Документ.ТабельныйНомер;
	ОбластьШапка.Параметры.Подразделение 	= Строка(Документ.ПодразделениеОрганизации) + ", " + Документ.Должность;
	ОбластьШапка.Параметры.ЛичныйТранспорт  = Документ.КомандировкаНаЛичномТранспорте;
	ОбластьШапка.Параметры.ЦельКомандировки = Документ.ЦельКомандировки;
	ОбластьШапка.Параметры.ФИОСотрудника  	= Документ.СотрудникиОрганизации;
	ОбластьШапка.Параметры.Организация 		= Документ.Организация.НаименованиеПолное;
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция СлужебнаяЗаписка(Документ, ТабличныйДокумент) Экспорт
	
	Макет = Документы.ПриказНаКомандировку.ПолучитьМакет("СлужебнаяЗаписка");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	
	ОбластьШапка.Параметры.Заполнить(Документ);
	ЗаполнитьПараметры(Документ, ОбластьШапка);	
	
	ОбластьШапка.Параметры.ДолжностьСотудника  	= Документ.Должность;
	ОбластьШапка.Параметры.Организация 			= Документ.Организация.НаименованиеПолное;

	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаДокумента");
	Для каждого ТекСтрока Из Документ.ПодтверждающиеДокументы Цикл
		ОбластьСтрока.Параметры.Заполнить(ТекСтрока);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвал.Параметры.ФИОСотрудника  	= ОбластьШапка.Параметры.ФИОСотрудника;
	ОбластьПодвал.Параметры.ДатаСоставления = Документ.Дата;
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
	Возврат ТабличныйДокумент;
	
КонецФункции

//+++ AK suvv 19.07.2018 ИП-00019056
// отправка писем об изменении статуса документа
// Документ - Документ.ПриказНаКомандировку
// СтатусДокумента - Перечисление.АК_СтаусыПриказаНаКомандировку
// АдресПолучателя - Строка
// Акцептант - Справочник.Пользователи
Процедура ОтправитьПисьмо(Документ, СтатусДокумента, АдресПолучателя = "", Акцептант) Экспорт
	
	ФИОПользователя = ?(ЗначениеЗаполнено(Акцептант.ФизЛицо), Акцептант.ФизЛицо.Наименование, Акцептант.Наименование);
	
	ШаблонТекста = 
	" Пользователь %1  %2 
	|
	|Приказ на командировку № %3 от %4
	| 
	| на сотрудника : %5
	| период командировки с %6 по %7
	| место назначения : %8
	| цель командировки : %9
	| 
	| 	";
		
	Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекста, 
	ФиоПользователя, 
	?(СтатусДокумента = Перечисления.АК_СтаусыПриказаНаКомандировку.НаСогласовании, "отправил на согласование", "согласовал"),
	Документ.Номер ,
	Формат(Документ.Дата, "ДЛФ=DD"),
	Строка(Документ.ФизЛицо),
	Формат(Документ.НачалоКомандировки, "ДЛФ=DD"),
	Формат(Документ.КонецКомандировки, "ДЛФ=DD"),
	Документ.МестоНазначения,
	Документ.ЦельКомандировки
	);
	
	ТекстПисьма = Текст ;
	
	Тема = ?(СтатусДокумента = Перечисления.АК_СтаусыПриказаНаКомандировку.НаСогласовании,
	"Запрос на согласование приказа на командировку" ,
	"Извещение о согласовании приказа на командировку");
	Тема = Тема + " № "+ Документ.Номер + " от " + Формат(Документ.Дата, "ДЛФ=DD");
	
	СпАдресов = Новый СписокЗначений;
	МассивАдресов = Справочники.Контрагенты.РазложитьСтрокуВМассивПодстрок(АдресПолучателя, ";");	
	Для каждого Эл Из МассивАдресов Цикл
		Если ЗначениеЗаполнено(Эл) Тогда
			СпАдресов.Добавить(Сокрлп(Эл));
		КонецЕсли; 
	КонецЦикла; 
	
	Почта = Новый ИнтернетПочта;
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Почта.Подключиться(Профиль);
	
	Письмо = Новый ИнтернетПочтовоеСообщение;
	Письмо.Тема = Тема;
	Письмо.ИмяОтправителя = "" + УчетнаяЗапись + "";
	Письмо.ИмяОтправителя = "" + СокрЛП(УчетнаяЗапись) + "";
	Письмо.Отправитель    = "" + СокрЛП(УчетнаяЗапись) + "";	
	Письмо.Тексты.Добавить(ТекстПисьма, ТипТекстаПочтовогоСообщения.ПростойТекст);
	
	Для каждого Адрес Из СпАдресов Цикл
		Получатель 			= Письмо.Получатели.Добавить();
		Получатель.Адрес 	= Адрес.Значение;
	КонецЦикла;	
	
	Почта.Послать(Письмо);
	Сообщить("Отправлено письмо на " + АдресПолучателя);
	Почта.Отключиться();
	
КонецПроцедуры
