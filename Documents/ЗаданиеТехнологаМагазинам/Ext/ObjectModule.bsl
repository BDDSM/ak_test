
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Отказ Тогда Возврат;
	ИначеЕсли ОбменДанными.Загрузка Тогда Возврат;
	КонецЕсли;	
	
	СуммаПотенциальногоВозврата = Товары.Итог("СуммаПотенциальногоВозврата");
	СуммаРеализованногоВозврата = Товары.Итог("СуммаРеализованногоВозврата");
	СуммаКомпенсации = КомпенсацияПоМагазинам.Итог("Сумма");
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.Ссылка) ИЛИ ЭтотОбъект.ТипЗадания <> ЭтотОбъект.Ссылка.ТипЗадания Тогда
		ЭтотОбъект.ДатаСменыЗадания = ТекущаяДата();
	КонецЕсли;
	
	//+++АК SHEP 20160921: сделать запрет на создание нового задание технолога, пока есть активное старое с такими же товаром, характеристикой и датами производства
	УстановитьПривилегированныйРежим(Истина);
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТаблицаТоваров.Номенклатура,
			|	ТаблицаТоваров.Характеристика,
			|	ТаблицаТоваров.ДатаПроизводстваНач,
			|	ТаблицаТоваров.ДатаПроизводстваКон
			|ПОМЕСТИТЬ ТаблицаТоваров
			|ИЗ
			|	&ТаблицаТоваров КАК ТаблицаТоваров
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ЗаданиеТехнологаМагазинам.Ссылка
			|ИЗ
			|	Документ.ЗаданиеТехнологаМагазинам КАК ЗаданиеТехнологаМагазинам
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеТехнологаМагазинам.Товары КАК ЗаданиеТехнологаМагазинамТовары
			|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаТоваров КАК ТаблицаТоваров
			|			ПО ЗаданиеТехнологаМагазинамТовары.Номенклатура = ТаблицаТоваров.Номенклатура
			|				И ЗаданиеТехнологаМагазинамТовары.Характеристика = ТаблицаТоваров.Характеристика
			|		ПО (ЗаданиеТехнологаМагазинамТовары.Ссылка = ЗаданиеТехнологаМагазинам.Ссылка)
			|ГДЕ
			|	ЗаданиеТехнологаМагазинам.Проведен = ЛОЖЬ
			|	И НЕ ЗаданиеТехнологаМагазинам.Ссылка = &Ссылка
			|	И НЕ ЗаданиеТехнологаМагазинам.ПометкаУдаления
			|	И ЗаданиеТехнологаМагазинам.БезДатПроизводства = &БезДатПроизводства
			|	И НЕ ТаблицаТоваров.Номенклатура ЕСТЬ NULL 
			|	И НЕ ТаблицаТоваров.Характеристика ЕСТЬ NULL 
			|	И (ЗаданиеТехнологаМагазинамТовары.ДатаПроизводстваНач МЕЖДУ ТаблицаТоваров.ДатаПроизводстваНач И ТаблицаТоваров.ДатаПроизводстваКон
			|			ИЛИ ЗаданиеТехнологаМагазинамТовары.ДатаПроизводстваКон МЕЖДУ ТаблицаТоваров.ДатаПроизводстваНач И ТаблицаТоваров.ДатаПроизводстваКон
			|			ИЛИ ЗаданиеТехнологаМагазинамТовары.ДатаПроизводстваНач >= ТаблицаТоваров.ДатаПроизводстваНач
			|				И ТаблицаТоваров.ДатаПроизводстваКон = ДАТАВРЕМЯ(1, 1, 1)
			|			ИЛИ ЗаданиеТехнологаМагазинамТовары.ДатаПроизводстваКон >= ТаблицаТоваров.ДатаПроизводстваНач
			|				И ТаблицаТоваров.ДатаПроизводстваКон = ДАТАВРЕМЯ(1, 1, 1)
			|			ИЛИ ТаблицаТоваров.ДатаПроизводстваНач МЕЖДУ ЗаданиеТехнологаМагазинамТовары.ДатаПроизводстваНач И ЗаданиеТехнологаМагазинамТовары.ДатаПроизводстваКон
			|			ИЛИ ТаблицаТоваров.ДатаПроизводстваКон МЕЖДУ ЗаданиеТехнологаМагазинамТовары.ДатаПроизводстваНач И ЗаданиеТехнологаМагазинамТовары.ДатаПроизводстваКон
			|			ИЛИ ТаблицаТоваров.ДатаПроизводстваНач >= ЗаданиеТехнологаМагазинамТовары.ДатаПроизводстваНач
			|				И ЗаданиеТехнологаМагазинамТовары.ДатаПроизводстваКон = ДАТАВРЕМЯ(1, 1, 1)
			|			ИЛИ ТаблицаТоваров.ДатаПроизводстваКон >= ЗаданиеТехнологаМагазинамТовары.ДатаПроизводстваНач
			|				И ЗаданиеТехнологаМагазинамТовары.ДатаПроизводстваКон = ДАТАВРЕМЯ(1, 1, 1))");
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("БезДатПроизводства", БезДатПроизводства);
		ТЗнТоваров = Товары.Выгрузить(, "Номенклатура,Характеристика,ДатаПроизводстваНач,ДатаПроизводстваКон");
		ТЗнТоваров.Свернуть("Номенклатура,Характеристика,ДатаПроизводстваНач,ДатаПроизводстваКон");
		Запрос.УстановитьПараметр("ТаблицаТоваров", ТЗнТоваров);
		//Запрос.УстановитьПараметр("ДатаПроизводстваНач", ДатаПроизводстваНач);
		//Запрос.УстановитьПараметр("ДатаПроизводстваКон", ДатаПроизводстваКон);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если НЕ РезультатЗапроса.Пустой() Тогда
			//Отказ = Истина;
			ВыборкаЗапроса = РезультатЗапроса.Выбрать();
			Пока ВыборкаЗапроса.Следующий() Цикл
				//Сообщить("Уже есть подобное активное: " + ВыборкаЗапроса.Ссылка);
				ОбщегоНазначения.СообщитьОбОшибке("Уже есть подобное активное: " + ВыборкаЗапроса.Ссылка, Отказ);
			КонецЦикла;
			Возврат;
		КонецЕсли;
		
		ДатаАвтозакрытия = Дата + 16 * 24*60*60;
	КонецЕсли;
	//---АК SHEP 20160921
	
	Если НЕ СвереноСПоставщиком И ДатаСверки <> Дата(1, 1, 1) Тогда ДатаСверки = Дата(1, 1, 1); КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Если НЕ СвереноСПоставщиком Тогда
			Сообщить("Документ не проведен, необходимо согласование (сверить с поставщиком)");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		ДатаПроведения = ТекущаяДата();
		
	ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьСуммуКомпенсации() Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МП_ЗадачаТехнолога.Магазин КАК Магазин,
		|	ВЫБОР
		|		КОГДА СУММА(МП_ЗадачаТехнологаПараметрыЗадачи.Количество) > 0
		|			ТОГДА 500
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Сумма
		|ИЗ
		|	Документ.МП_ЗадачаТехнолога.ПараметрыЗадачи КАК МП_ЗадачаТехнологаПараметрыЗадачи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МП_ЗадачаТехнолога КАК МП_ЗадачаТехнолога
		|		ПО МП_ЗадачаТехнологаПараметрыЗадачи.Ссылка = МП_ЗадачаТехнолога.Ссылка
		|ГДЕ
		|	МП_ЗадачаТехнолога.Проведен
		|	И МП_ЗадачаТехнолога.ДокументОснование = &Ссылка
		|	И МП_ЗадачаТехнолога.ТипЗадания = ЗНАЧЕНИЕ(Перечисление.ТипыЗаданийТехнологаМагазинам.ВозвратНаСклад)
		|	И МП_ЗадачаТехнолога.ФактическаяДатаВыполнения <> ДАТАВРЕМЯ(1, 1, 1)
		|	И МП_ЗадачаТехнологаПараметрыЗадачи.Количество <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	МП_ЗадачаТехнолога.Магазин");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Если КомпенсацияПоМагазинам.Количество() > 0 Тогда
			КомпенсацияПоМагазинам.Очистить();
		КонецЕсли;
	Иначе
		КомпенсацияПоМагазинам.Загрузить(РезультатЗапроса.Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьСуммыРеализованногоВозврата(ДокументИсточник, Обработано = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДокументИсточник) Тогда Возврат;
	ИначеЕсли ТипЗнч(ДокументИсточник) <> Тип("ДокументСсылка.ПретензияПоставщику") И ТипЗнч(ДокументИсточник) <> Тип("ДокументСсылка.МП_ЗадачаТехнолога") Тогда Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТЗнТовары.Магазин,
		|	ТЗнТовары.СкладСклада,
		|	ТЗнТовары.Обработано КАК Обработано,
		|	ТЗнТовары.Номенклатура,
		|	ТЗнТовары.Характеристика,
		|	ТЗнТовары.ЕдиницаИзмерения,
		|	ТЗнТовары.ПотенциальноеКоличество КАК ПотенциальноеКоличество,
		|	ТЗнТовары.СуммаПотенциальногоВозврата КАК СуммаПотенциальногоВозврата,
		|	ТЗнТовары.РеализованноеКоличество КАК РеализованноеКоличество,
		|	ТЗнТовары.СуммаРеализованногоВозврата КАК СуммаРеализованногоВозврата,
		|	ТЗнТовары.ОтработанноеКоличество КАК ОтработанноеКоличество,
		|	ТЗнТовары.Цена,
		|	ТЗнТовары.ДатаПроизводстваНач,
		|	ТЗнТовары.ДатаПроизводстваКон
		|ПОМЕСТИТЬ ТЗнТовары
		|ИЗ
		|	&ТЗнТовары КАК ТЗнТовары
		|ГДЕ
		|	ТЗнТовары.Магазин <> &Магазин
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЗнТовары.Магазин,
		|	ТЗнТовары.СкладСклада,
		|	ТЗнТовары.Обработано,
		|	ТЗнТовары.Номенклатура,
		|	ТЗнТовары.Характеристика,
		|	ТЗнТовары.ЕдиницаИзмерения,
		|	ТЗнТовары.ПотенциальноеКоличество,
		|	ТЗнТовары.СуммаПотенциальногоВозврата,
		|	ТЗнТовары.РеализованноеКоличество,
		|	ТЗнТовары.СуммаРеализованногоВозврата,
		|	ТЗнТовары.ОтработанноеКоличество,
		|	ТЗнТовары.Цена КАК Цена,
		|	ТЗнТовары.ДатаПроизводстваНач,
		|	ТЗнТовары.ДатаПроизводстваКон
		|ПОМЕСТИТЬ Товары
		|ИЗ
		|	ТЗнТовары КАК ТЗнТовары
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&Магазин,
		|	&СкладСклада,
		|	ВЫБОР
		|		КОГДА &Обработано = НЕОПРЕДЕЛЕНО
		|			ТОГДА ВЫРАЗИТЬ(&ДокументИсточник КАК Документ.МП_ЗадачаТехнолога).Проведен
		|		ИНАЧЕ &Обработано
		|	КОНЕЦ,
		|	ЗадачаТехнологаТовары.Номенклатура,
		|	ЗадачаТехнологаТовары.ХарактеристикаНоменклатуры,
		|	ЗадачаТехнологаТовары.ЕдиницаИзмерения,
		|	ЗадачаТехнологаТовары.Количество,
		|	ЗадачаТехнологаТовары.Сумма,
		|	ЗадачаТехнологаТовары.Количество,
		|	ЗадачаТехнологаТовары.Сумма,
		|	ВЫБОР
		|		КОГДА ЗадачаТехнологаТовары.Ссылка.ФактическаяДатаВыполнения = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА 0
		|		ИНАЧЕ ЗадачаТехнологаТовары.Количество
		|	КОНЕЦ,
		|	ЗадачаТехнологаТовары.Цена,
		|	ЗадачаТехнологаТовары.ДатаПроизводстваНач,
		|	ЗадачаТехнологаТовары.ДатаПроизводстваКон
		|ИЗ
		|	Документ.МП_ЗадачаТехнолога.ПараметрыЗадачи КАК ЗадачаТехнологаТовары
		|ГДЕ
		|	ЗадачаТехнологаТовары.Ссылка = &ДокументИсточник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЗнНоменклатура.Номенклатура,
		|	ТЗнНоменклатура.Характеристика,
		|	ТЗнНоменклатура.УИДСтрокиНоменклатуры,
		|	ТЗнНоменклатура.ДатаПроизводстваНач,
		|	ТЗнНоменклатура.ДатаПроизводстваКон
		|ПОМЕСТИТЬ ТаблицаНоменклатуры
		|ИЗ
		|	&ТЗнНоменклатура КАК ТЗнНоменклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Товары.Магазин,
		|	Товары.СкладСклада,
		|	ВЫБОР
		|		КОГДА ВЫРАЗИТЬ(Товары.Магазин КАК Справочник.СтруктурныеЕдиницы).ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоСклад,
		|	ВЫРАЗИТЬ(Товары.Магазин КАК Справочник.СтруктурныеЕдиницы).НомерТочки КАК НомерТочки,
		|	МАКСИМУМ(Товары.Обработано) КАК Обработано,
		|	Товары.Номенклатура КАК Номенклатура,
		|	Товары.Характеристика,
		|	Товары.ЕдиницаИзмерения,
		|	СУММА(Товары.ПотенциальноеКоличество) КАК ПотенциальноеКоличество,
		|	СУММА(Товары.СуммаПотенциальногоВозврата) КАК СуммаПотенциальногоВозврата,
		|	СУММА(Товары.РеализованноеКоличество) КАК РеализованноеКоличество,
		|	СУММА(Товары.СуммаРеализованногоВозврата) КАК СуммаРеализованногоВозврата,
		|	СУММА(Товары.ОтработанноеКоличество) КАК ОтработанноеКоличество,
		|	Товары.Цена,
		|	Товары.ДатаПроизводстваНач,
		|	Товары.ДатаПроизводстваКон,
		|	ЕСТЬNULL(ТаблицаНоменклатуры.УИДСтрокиНоменклатуры, """") КАК УИДСтрокиНоменклатуры
		|ИЗ
		|	Товары КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
		|		ПО Товары.Номенклатура = ТаблицаНоменклатуры.Номенклатура
		|			И Товары.Характеристика = ТаблицаНоменклатуры.Характеристика
		|			И Товары.ДатаПроизводстваНач = ТаблицаНоменклатуры.ДатаПроизводстваНач
		|			И Товары.ДатаПроизводстваКон = ТаблицаНоменклатуры.ДатаПроизводстваКон
		|
		|СГРУППИРОВАТЬ ПО
		|	Товары.Магазин,
		|	Товары.СкладСклада,
		|	Товары.Номенклатура,
		|	Товары.ЕдиницаИзмерения,
		|	Товары.Характеристика,
		|	Товары.Цена,
		|	Товары.ДатаПроизводстваНач,
		|	Товары.ДатаПроизводстваКон,
		|	ЕСТЬNULL(ТаблицаНоменклатуры.УИДСтрокиНоменклатуры, """")
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭтоСклад УБЫВ,
		|	Обработано,
		|	НомерТочки,
		|	Номенклатура
		|АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("ТЗнТовары", Товары.Выгрузить());
	Запрос.УстановитьПараметр("ТЗнНоменклатура", Номенклатура.Выгрузить());
	Запрос.УстановитьПараметр("ДокументИсточник", ДокументИсточник);
	Запрос.УстановитьПараметр("Магазин", ДокументИсточник.Магазин);
	Запрос.УстановитьПараметр("СкладСклада", ДокументИсточник.СкладСклада);
	Запрос.УстановитьПараметр("Обработано", Обработано);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда Возврат; КонецЕсли;
	
	Товары.Загрузить(РезультатЗапроса.Выгрузить());
	
	//ОбновитьСуммуКомпенсации(); //+++АК SHEP 2018.10.09 б/н убрал из-за блокировок, уже не используется: //+++АК SHEP 20161215: убираем "Возврат на склад"
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СоздатьДокументыВозвратПоставщику();
	
	Документы.ЗаданиеТехнологаМагазинам.ЗакрытьДокументыЗадачаТехнолога(Ссылка);
	
	Возврат;
	
	//+++VERN //ЗадачаТехнологаОбъект
	Если ТипЗадания = Перечисления.ТипыЗаданийТехнологаМагазинам.ВозвратНаСклад тогда
		ВидПроверяемойОперации = Перечисления.ВидыОперацийПроверяемыхТехнологом.Возврат;
	ИначеЕсли ТипЗадания = Перечисления.ТипыЗаданийТехнологаМагазинам.СписаниеСМагазиновЗаНашСчёт тогда
		ВидПроверяемойОперации = Перечисления.ВидыОперацийПроверяемыхТехнологом.Списание;
	ИначеЕсли ТипЗадания = Перечисления.ТипыЗаданийТехнологаМагазинам.СписаниеСМагазинов тогда
		ВидПроверяемойОперации = Перечисления.ВидыОперацийПроверяемыхТехнологом.Возврат;
	ИначеЕсли ТипЗадания = Перечисления.ТипыЗаданийТехнологаМагазинам.СписаниеСМагазинов тогда
		ВидПроверяемойОперации = Перечисления.ВидыОперацийПроверяемыхТехнологом.Возврат;
	КонецЕсли;
	//---VERN
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ТипЗадания = Перечисления.ТипыЗаданийТехнологаМагазинам.ВозвратНаСклад ИЛИ ТипЗадания = Перечисления.ТипыЗаданийТехнологаМагазинам.СамовывозСМагазинов Тогда
		ПроверяемыеРеквизиты.Добавить("Склад");
		
	ИначеЕсли ТипЗадания = Перечисления.ТипыЗаданийТехнологаМагазинам.УбратьСПолок Тогда
		Поз = ПроверяемыеРеквизиты.Найти("Поставщик");
		Если Поз <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(Поз);
		КонецЕсли;
		
	КонецЕсли;
		
	Если Товары.Количество() = 0 Тогда
        Сообщение = Новый СообщениеПользователю();
        Сообщение.Текст = "Не выбрана номенклатура для задания!";
		//Сообщение.Поле = "ДатаПроизводстваКон";
		//Сообщение.УстановитьДанные(ЭтотОбъект);
        Сообщение.Сообщить();
        Отказ = Истина;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(Ссылка) Тогда
		Для Каждого СтрокаТЧ Из Товары Цикл
			Если СтрокаТЧ.ДатаПроизводстваКон < СтрокаТЧ.ДатаПроизводстваНач И СтрокаТЧ.ДатаПроизводстваКон <> Дата(1,1,1) Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "Номенклатура: " + Строка(СтрокаТЧ.Номенклатура) + ". Конечная дата производства не должна быть меньше начальной даты!";
				Сообщение.Поле = "ДатаПроизводстваКон";
				Сообщение.УстановитьДанные(ЭтотОбъект);
				Сообщение.Сообщить();
				Отказ = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	СвереноСПоставщиком = Ложь;
	ДатаСверки = Дата(1, 1, 1);
	ДатаПроведения = Дата(1, 1, 1);
	СуммаРеализованногоВозврата = 0;
	ТипЗадания = Перечисления.ТипыЗаданийТехнологаМагазинам.УбратьСПолок;
	
	Для Каждого СтрокаТЧ Из Товары Цикл
		СтрокаТЧ.Обработано = Ложь;
		СтрокаТЧ.ОтработанноеКоличество = 0;
		СтрокаТЧ.РеализованноеКоличество = 0;
		СтрокаТЧ.СуммаРеализованногоВозврата = 0;
	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из КомпенсацияПоМагазинам Цикл
		СтрокаТЧ.Сумма = 0;
	КонецЦикла;
	
КонецПроцедуры

Функция СоздатьДокументыЗадачаТехнолога() Экспорт
	
	МассивМагазинов = Новый Массив;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МП_ЗадачаТехнолога.Магазин,
		|	МП_ЗадачаТехнолога.СкладСклада
		|ПОМЕСТИТЬ Магазины
		|ИЗ
		|	Документ.МП_ЗадачаТехнолога КАК МП_ЗадачаТехнолога
		|ГДЕ
		|	МП_ЗадачаТехнолога.ДокументОснование = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаданиеТехнологаМагазинамТовары.Магазин КАК Магазин,
		|	ЗаданиеТехнологаМагазинамТовары.СкладСклада КАК СкладСклада,
		|	ЗаданиеТехнологаМагазинамТовары.Номенклатура,
		|	ЗаданиеТехнологаМагазинамТовары.Характеристика КАК ХарактеристикаНоменклатуры,
		|	ЗаданиеТехнологаМагазинамТовары.ДатаПроизводстваНач,
		|	ЗаданиеТехнологаМагазинамТовары.ДатаПроизводстваКон,
		|	ЗаданиеТехнологаМагазинамТовары.ЕдиницаИзмерения,
		|	ЗаданиеТехнологаМагазинамТовары.Цена,
		|	ЗаданиеТехнологаМагазинамТовары.ПотенциальноеКоличество КАК Количество,
		|	ЗаданиеТехнологаМагазинамТовары.СуммаПотенциальногоВозврата КАК Сумма,
		|	ЗаданиеТехнологаМагазинамТовары.УИДСтрокиНоменклатуры
		|ИЗ
		|	Документ.ЗаданиеТехнологаМагазинам.Товары КАК ЗаданиеТехнологаМагазинамТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ Магазины КАК Магазины
		|		ПО ЗаданиеТехнологаМагазинамТовары.Магазин = Магазины.Магазин
		|			И ЗаданиеТехнологаМагазинамТовары.СкладСклада = Магазины.СкладСклада
		|ГДЕ
		|	ЗаданиеТехнологаМагазинамТовары.Ссылка = &Ссылка
		|	И Магазины.Магазин ЕСТЬ NULL 
		|ИТОГИ ПО
		|	Магазин,
		|	СкладСклада");
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда Возврат МассивМагазинов; КонецЕсли;
	
	//+++АК SHEP 20161023: чтобы не сбивалась нумерация!
	//ПолныеПрава._ОбновитьНумерациюОбъектов(Метаданные.Документы.МП_ЗадачаТехнолога);
	
	ВыборкаМагазин = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМагазин.Следующий() Цикл
		
		ТекСтруктЕдиница = ВыборкаМагазин.Магазин;
		
		ВыборкаСкладСклада = ВыборкаМагазин.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСкладСклада.Следующий() Цикл
			
			ТекСкладСклада = ВыборкаСкладСклада.СкладСклада;
			
			ЗадачаТехнологаОбъект = Документы.МП_ЗадачаТехнолога.СоздатьДокумент();
			ЗадачаТехнологаОбъект.Дата = ТекущаяДата();
			//ЗадачаТехнологаОбъект.УстановитьНовыйНомер();
			ЗадачаТехнологаОбъект.ДокументОснование = ЭтотОбъект.Ссылка;
			ЗаполнитьЗначенияСвойств(ЗадачаТехнологаОбъект, ВыборкаСкладСклада, "Магазин,СкладСклада");
			ЗаполнитьЗначенияСвойств(ЗадачаТехнологаОбъект, ЭтотОбъект, "Склад,ТипЗадания,Комментарий");
			
			ВыборкаДетальныеЗаписи = ВыборкаСкладСклада.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(ЗадачаТехнологаОбъект.ПараметрыЗадачи.Добавить(), ВыборкаДетальныеЗаписи);
			КонецЦикла;
			
			ЗадачаТехнологаОбъект.Записать();
			
			Сообщить("Создано задание " + ЗадачаТехнологаОбъект.Ссылка + " по " + ТекСтруктЕдиница + ?(ЗначениеЗаполнено(ТекСкладСклада), ", склад: " + Строка(ТекСкладСклада), ""));
		КонецЦикла;
		
		МассивМагазинов.Добавить(ТекСтруктЕдиница);
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат МассивМагазинов;
	
КонецФункции

Функция ИзменитьДокументыЗадачаТехнолога(ИспользоватьПопытку = Истина, ЗакрыватьЗадачуТехнолога = Ложь) Экспорт
	
	МассивМагазинов = Новый Массив;
	
	УстановитьПривилегированныйРежим(Истина);
	
	// правим документы "МП_ЗадачаТехнолога", если изменился тип задания
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МП_ЗадачаТехнолога.Ссылка,
		|	МП_ЗадачаТехнолога.Магазин,
		|	МП_ЗадачаТехнолога.Проведен
		|ПОМЕСТИТЬ ЗадачиТехнолога
		|ИЗ
		|	Документ.МП_ЗадачаТехнолога КАК МП_ЗадачаТехнолога
		|ГДЕ
		|	МП_ЗадачаТехнолога.ДокументОснование = &Ссылка
		|	И НЕ МП_ЗадачаТехнолога.ТипЗадания = &ТипЗадания
		|	И НЕ МП_ЗадачаТехнолога.ПометкаУдаления
		|	И (МП_ЗадачаТехнолога.Проведен
		|				И МП_ЗадачаТехнолога.ФактическаяДатаВыполнения = ДАТАВРЕМЯ(1, 1, 1)
		|			ИЛИ НЕ МП_ЗадачаТехнолога.Проведен)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МП_ЗадачаТехнологаПараметрыЗадачи.Ссылка,
		|	МАКСИМУМ(МП_ЗадачаТехнологаПараметрыЗадачи.ИДСтроки) КАК МаксИДСтроки
		|ПОМЕСТИТЬ МаксИдСтрок
		|ИЗ
		|	Документ.МП_ЗадачаТехнолога.ПараметрыЗадачи КАК МП_ЗадачаТехнологаПараметрыЗадачи
		|ГДЕ
		|	МП_ЗадачаТехнологаПараметрыЗадачи.Ссылка В
		|			(ВЫБРАТЬ
		|				ЗадачиТехнолога.Ссылка
		|			ИЗ
		|				ЗадачиТехнолога КАК ЗадачиТехнолога)
		|
		|СГРУППИРОВАТЬ ПО
		|	МП_ЗадачаТехнологаПараметрыЗадачи.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗадачиТехнолога.Ссылка КАК ЗадачаТехнолога,
		|	ЗадачиТехнолога.Магазин,
		|	ЗадачиТехнолога.Проведен,
		|	ВЫБОР
		//+++АК ILIK 2018.08.08 ИП-00019413
		//|		КОГДА СпрМагазины.СтатусТорговойТочки = ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Закрыт)
		|		КОГДА СпрМагазины.СтатусТорговойТочки В (ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Закрыт), ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Приостановлен))
		//---АК ILIK
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК МагазинЗакрыт,
		|	ВЫБОР
		|		КОГДА СпрМагазины.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
		|				И СпрМагазины.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Избенка)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоИзбёнка,
		|	ЕСТЬNULL(МаксИдСтрок.МаксИДСтроки, 0) + 1 КАК МаксИДСтроки
		|ИЗ
		|	ЗадачиТехнолога КАК ЗадачиТехнолога
		|		ЛЕВОЕ СОЕДИНЕНИЕ МаксИдСтрок КАК МаксИдСтрок
		|		ПО ЗадачиТехнолога.Ссылка = МаксИдСтрок.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СпрМагазины
		|		ПО ЗадачиТехнолога.Магазин = СпрМагазины.Ссылка");
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("ТипЗадания", ЭтотОбъект.ТипЗадания);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда Возврат МассивМагазинов; КонецЕсли;
		
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		
		ЗадачаТехнологаОбъект = ВыборкаЗапроса.ЗадачаТехнолога.ПолучитьОбъект();
		
		Если ВыборкаЗапроса.МагазинЗакрыт Тогда
			
			ЗадачаТехнологаОбъект.Закрыта = Истина;
			ЗадачаТехнологаОбъект.ФактическаяДатаВыполнения = ТекущаяДата();
			
		Иначе
			
			ЗадачаТехнологаОбъект.Склад = ЭтотОбъект.Склад;
			ЗадачаТехнологаОбъект.ТипЗадания = ЭтотОбъект.ТипЗадания;
			
			Если ЗакрыватьЗадачуТехнолога Тогда ЗадачаТехнологаОбъект.Закрыта = Истина; КонецЕсли;
			
			// Для Избёнок ключ строки не меняем
			Если НЕ ВыборкаЗапроса.ЭтоИзбёнка Тогда
				МаксИДСтроки = ВыборкаЗапроса.МаксИДСтроки;
				// меняем КлючСтроки
				Для Каждого СтрокаТЧ Из ЗадачаТехнологаОбъект.ПараметрыЗадачи Цикл
					СтрокаТЧ.КлючСтроки = Новый УникальныйИдентификатор;
					СтрокаТЧ.КлючСтрокиСтр = Строка(СтрокаТЧ.КлючСтроки);
					СтрокаТЧ.ИДСтроки = МаксИДСтроки;
					МаксИДСтроки = МаксИДСтроки + 1; 
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ИспользоватьПопытку Тогда
			Попытка
				ЗадачаТехнологаОбъект.Записать(?(ВыборкаЗапроса.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
			Исключение
				СообщениеОбОшибке = "Ошибка записи/проведения документа " + Строка(ЗадачаТехнологаОбъект.Ссылка) + ": " + ОписаниеОшибки();
				Сообщить(СообщениеОбОшибке);
				ЗаписьЖурналаРегистрации("Документ.ЗаданиеТехнологаМагазинам", УровеньЖурналаРегистрации.Ошибка,, ЗадачаТехнологаОбъект.Ссылка, СообщениеОбОшибке);
			КонецПопытки;
		Иначе
			ЗадачаТехнологаОбъект.Записать(?(ВыборкаЗапроса.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
		КонецЕсли;
		
		Сообщить("Изменён документ " + ЗадачаТехнологаОбъект.Ссылка + " по магазину " + ВыборкаЗапроса.Магазин);
		
		Если НЕ ВыборкаЗапроса.МагазинЗакрыт Тогда
			МассивМагазинов.Добавить(ВыборкаЗапроса.Магазин);
		КонецЕсли;
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат МассивМагазинов;
	
КонецФункции

//+++АК SHEP 2018.08.29 ИП-00019388 
Функция ИзменитьДокументыЗадачаТехнологаИзмененаДатаАвтозакрытия(ИспользоватьПопытку = Истина) Экспорт
	
	МассивМагазинов = Новый Массив;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МП_ЗадачаТехнолога.Ссылка КАК ЗадачаТехнолога,
		|	МП_ЗадачаТехнолога.Магазин,
		|	МП_ЗадачаТехнолога.Проведен
		|ИЗ
		|	Документ.МП_ЗадачаТехнолога КАК МП_ЗадачаТехнолога
		|ГДЕ
		|	МП_ЗадачаТехнолога.ДокументОснование = &Ссылка
		|	И НЕ МП_ЗадачаТехнолога.ПометкаУдаления
		|	И НЕ МП_ЗадачаТехнолога.Закрыта
		|
		|ДЛЯ ИЗМЕНЕНИЯ
		|	Документ.МП_ЗадачаТехнолога");
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда Возврат МассивМагазинов; КонецЕсли;
		
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		
		ЗадачаТехнологаОбъект = ВыборкаЗапроса.ЗадачаТехнолога.ПолучитьОбъект();
		ЗадачаТехнологаОбъект.ИзмененаДатаАвтозакрытия = Истина;
		
		Если ИспользоватьПопытку Тогда
			Попытка
				ЗадачаТехнологаОбъект.Записать();
			Исключение
				СообщениеОбОшибке = "Ошибка записи/проведения документа " + Строка(ЗадачаТехнологаОбъект.Ссылка) + ": " + ОписаниеОшибки();
				Сообщить(СообщениеОбОшибке);
				ЗаписьЖурналаРегистрации("Документ.ЗаданиеТехнологаМагазинам", УровеньЖурналаРегистрации.Ошибка,, ЗадачаТехнологаОбъект.Ссылка, СообщениеОбОшибке);
			КонецПопытки;
		Иначе
			ЗадачаТехнологаОбъект.Записать();
		КонецЕсли;
		
		//Сообщить("Изменён документ " + ЗадачаТехнологаОбъект.Ссылка + " по магазину " + ВыборкаЗапроса.Магазин);
		
		МассивМагазинов.Добавить(ВыборкаЗапроса.Магазин);
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат МассивМагазинов;
	
КонецФункции

Процедура СоздатьДокументыВозвратПоставщику() Экспорт
Перем ТекСклад, ТекСкладПеремещения;
	
	УстановитьПривилегированныйРежим(Истина);
	
	//АК SHEP++ 20161025: возвраты поставщику создаём по каждому типу задания отдельно
	ТипыЗаданийДляВозвратаТоваровПоставщику = Новый Массив;
	ТипыЗаданийДляВозвратаТоваровПоставщику.Добавить(Перечисления.ТипыЗаданийТехнологаМагазинам.СписаниеСМагазинов); // #1
	ТипыЗаданийДляВозвратаТоваровПоставщику.Добавить(Перечисления.ТипыЗаданийТехнологаМагазинам.СамовывозСМагазинов); // #3
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЕСТЬNULL(РасходныйОрдерСклад.Ссылка, ЗНАЧЕНИЕ(Документ.РасходныйОрдерСклад.ПустаяСсылка)) КАК РасходныйОрдерСкладСсылка,
		|	ЕСТЬNULL(ВозвратТоваровПоставщику.Ссылка, ЗНАЧЕНИЕ(Документ.ВозвратТоваровПоставщику.ПустаяСсылка)) КАК ВозвратТоваровПоставщикуСсылка,
		|	МП_ЗадачаТехнолога.Склад КАК Склад,
		|	МП_ЗадачаТехнолога.ДокументОснование,
		|	МП_ЗадачаТехнологаПараметрыЗадачи.Номенклатура,
		|	МП_ЗадачаТехнологаПараметрыЗадачи.ХарактеристикаНоменклатуры КАК Характеристика,
		|	МП_ЗадачаТехнологаПараметрыЗадачи.ЕдиницаИзмерения,
		|	МП_ЗадачаТехнологаПараметрыЗадачи.ДатаПроизводства,
		|	МП_ЗадачаТехнологаПараметрыЗадачи.Цена,
		|	СУММА(МП_ЗадачаТехнологаПараметрыЗадачи.Количество) КАК Количество,
		|	СУММА(МП_ЗадачаТехнологаПараметрыЗадачи.Сумма) КАК Сумма
		|ИЗ
		|	Документ.МП_ЗадачаТехнолога.ПараметрыЗадачи КАК МП_ЗадачаТехнологаПараметрыЗадачи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МП_ЗадачаТехнолога КАК МП_ЗадачаТехнолога
		|		ПО МП_ЗадачаТехнологаПараметрыЗадачи.Ссылка = МП_ЗадачаТехнолога.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
		|		ПО (РасходныйОрдерСклад.Основание = МП_ЗадачаТехнолога.ДокументОснование)
		|			И (РасходныйОрдерСклад.Склад = ВЫБОР
		|				КОГДА МП_ЗадачаТехнолога.ТипЗадания = ЗНАЧЕНИЕ(Перечисление.ТипыЗаданийТехнологаМагазинам.СписаниеСМагазинов)
		|					ТОГДА &СкладПеремещения1
		|				КОГДА МП_ЗадачаТехнолога.ТипЗадания = ЗНАЧЕНИЕ(Перечисление.ТипыЗаданийТехнологаМагазинам.СамовывозСМагазинов)
		|					ТОГДА &СкладПеремещения3
		|				ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|			КОНЕЦ)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
		|		ПО (ВозвратТоваровПоставщику.ДокументОснование = МП_ЗадачаТехнолога.ДокументОснование)
		|			И (ВозвратТоваровПоставщику.СтруктурнаяЕдиница = МП_ЗадачаТехнолога.Склад)
		|ГДЕ
		|	МП_ЗадачаТехнолога.Проведен
		|	И МП_ЗадачаТехнолога.ДокументОснование = &ДокументОснование
		|	И МП_ЗадачаТехнолога.ТипЗадания В(&ТипыЗаданийДляВозвратаТоваровПоставщику)
		|	И МП_ЗадачаТехнологаПараметрыЗадачи.Количество <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(РасходныйОрдерСклад.Ссылка, ЗНАЧЕНИЕ(Документ.РасходныйОрдерСклад.ПустаяСсылка)),
		|	ЕСТЬNULL(ВозвратТоваровПоставщику.Ссылка, ЗНАЧЕНИЕ(Документ.ВозвратТоваровПоставщику.ПустаяСсылка)),
		|	МП_ЗадачаТехнологаПараметрыЗадачи.Номенклатура,
		|	МП_ЗадачаТехнологаПараметрыЗадачи.ХарактеристикаНоменклатуры,
		|	МП_ЗадачаТехнологаПараметрыЗадачи.ЕдиницаИзмерения,
		|	МП_ЗадачаТехнологаПараметрыЗадачи.Цена,
		|	МП_ЗадачаТехнолога.Склад,
		|	МП_ЗадачаТехнолога.ДокументОснование,
		|	МП_ЗадачаТехнологаПараметрыЗадачи.ДатаПроизводства
		|ИТОГИ ПО
		|	Склад,
		|	ВозвратТоваровПоставщикуСсылка,
		|	РасходныйОрдерСкладСсылка");
		
	Запрос.УстановитьПараметр("ДокументОснование", Ссылка);
	Запрос.УстановитьПараметр("ТипыЗаданийДляВозвратаТоваровПоставщику", ТипыЗаданийДляВозвратаТоваровПоставщику);
	Запрос.УстановитьПараметр("СкладПеремещения1",
		РегистрыСведений.СоответствиеТиповЗаданийТехнологаМагазинамИСкладов.ВернутьСкладПеремещения(Перечисления.ТипыЗаданийТехнологаМагазинам.СписаниеСМагазинов));
	Запрос.УстановитьПараметр("СкладПеремещения3",
		РегистрыСведений.СоответствиеТиповЗаданийТехнологаМагазинамИСкладов.ВернутьСкладПеремещения(Перечисления.ТипыЗаданийТехнологаМагазинам.СамовывозСМагазинов));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	// не нужно создавать ВозвратТоваровПоставщику
	Если РезультатЗапроса.Пустой() Тогда Возврат; КонецЕсли;
	
	ОргВкусвилл = Справочники.Организации.НайтиПоРеквизиту("ИНН", "7734675810");
	
	ВыборкаПоСкладу = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоСкладу.Следующий() Цикл
		
		ТекСклад = ВыборкаПоСкладу.Склад;
		ТекСкладПеремещения = РегистрыСведений.СоответствиеТиповЗаданийТехнологаМагазинамИСкладов.ПолучитьСкладПеремещенияПоСкладу(ТекСклад);
		
		ВыборкаПоДокументуВозврата = ВыборкаПоСкладу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоДокументуВозврата.Следующий() Цикл
						
			ВыборкаПоРасходномуОрдеру = ВыборкаПоДокументуВозврата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоРасходномуОрдеру.Следующий() Цикл
				
				ДокРасходныйОрдерСкладСсылка = ВыборкаПоРасходномуОрдеру.РасходныйОрдерСкладСсылка;
				Если ДокРасходныйОрдерСкладСсылка.Пустая() Тогда
					ДокРасходныйОрдерСкладОбъект = Документы.РасходныйОрдерСклад.СоздатьДокумент();
					ДокРасходныйОрдерСкладОбъект.Дата = ТекущаяДата();
					ДокРасходныйОрдерСкладОбъект.УстановитьНовыйНомер();
				Иначе
					ДокРасходныйОрдерСкладОбъект = ДокРасходныйОрдерСкладСсылка.ПолучитьОбъект();
				КонецЕсли;
				
				//ДокРасходныйОрдерСкладОбъект.Заполнить(Объект.Ссылка);
				ДокРасходныйОрдерСкладОбъект.ВидОперации = Перечисления.ВидыОперацийРасходСкладскойУчет.ВозвратПоставщику;
				ДокРасходныйОрдерСкладОбъект.Статус = Перечисления.СтатусыРасходныхОрдеров.ВСборке;
				ДокРасходныйОрдерСкладОбъект.Склад = ТекСкладПеремещения;
				ДокРасходныйОрдерСкладОбъект.Получатель	= Поставщик;
				ДокРасходныйОрдерСкладОбъект.Автор = ПараметрыСеанса.ТекущийПользователь;
				ДокРасходныйОрдерСкладОбъект.Основание = Ссылка;
				ДокРасходныйОрдерСкладОбъект.Организация = ОргВкусвилл;
				ДокРасходныйОрдерСкладОбъект.ПровереноОператором = Истина;
				
				ВыборкаДетальныеЗаписи = ВыборкаПоРасходномуОрдеру.Выбрать();
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					ЗаполнитьЗначенияСвойств(ДокРасходныйОрдерСкладОбъект.Товары.Добавить(), ВыборкаДетальныеЗаписи);
				КонецЦикла; 
				
				ДокРасходныйОрдерСкладОбъект.Записать(РежимЗаписиДокумента.Проведение);
				ДокРасходныйОрдерСкладСсылка = ДокРасходныйОрдерСкладОбъект.Ссылка;
				
			КонецЦикла;
			
			ДокВозвратТоваровПоставщикуСсылка = ВыборкаПоДокументуВозврата.ВозвратТоваровПоставщикуСсылка;
			Если ДокВозвратТоваровПоставщикуСсылка.Пустая() Тогда
				ДокВозвратТоваровПоставщикуОбъект = Документы.ВозвратТоваровПоставщику.СоздатьДокумент();
				ДокВозвратТоваровПоставщикуОбъект.Дата = ТекущаяДата();
				ДокВозвратТоваровПоставщикуОбъект.УстановитьНовыйНомер();
			Иначе
				ДокВозвратТоваровПоставщикуОбъект = ДокВозвратТоваровПоставщикуСсылка.ПолучитьОбъект();
			КонецЕсли;
			
			ДокВозвратТоваровПоставщикуОбъект.Заполнить(ДокРасходныйОрдерСкладСсылка);
			ДокВозвратТоваровПоставщикуОбъект.ДокументОснование = Ссылка;
			ДокВозвратТоваровПоставщикуОбъект.СтруктурнаяЕдиница = ТекСклад;
			ДокВозвратТоваровПоставщикуОбъект.Комментарий = Строка(Ссылка);
			ДокВозвратТоваровПоставщикуОбъект.Записать(РежимЗаписиДокумента.Проведение);
			ДокВозвратТоваровПоставщикуСсылка = ДокВозвратТоваровПоставщикуОбъект.Ссылка;
			
		КонецЦикла;
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаданиеТехнологаНаДегустацию") Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		// Заполнение шапки
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СканироватьШтрихкод = ДанныеЗаполнения.СканироватьШтрихкод;
		Комментарий = ДанныеЗаполнения.Комментарий;
		//ТипЗадания = Перечисления.ТипыЗаданийТехнологаМагазинам.УбратьСПолок;
		
		// заполнение номенклатуры
		НоваяСтрокаТЧ = ЭтотОбъект.Номенклатура.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ, ДанныеЗаполнения, "Номенклатура,ЕдиницаИзмерения,ДатаПроизводстваНач,ДатаПроизводстваКон");
		НоваяСтрокаТЧ.Характеристика = ДанныеЗаполнения.ХарактеристикаНоменклатуры;
		
		// вложения
		Если ДанныеЗаполнения.Вложения.Количество() > 0 Тогда
			КаталогБыло = Документы.ЗаданиеТехнологаНаДегустацию.ПолучитьКаталогХраненияФайлов(ДанныеЗаполнения);
			КаталогСтало = Документы.ЗаданиеТехнологаМагазинам.ПолучитьКаталогХраненияФайлов(ТекущаяДата());
			
			Для Каждого СтрокаТЧ Из ДанныеЗаполнения.Вложения Цикл
				ЗаполнитьЗначенияСвойств(ЭтотОбъект.Вложения.Добавить(), СтрокаТЧ);
				КопироватьФайл(КаталогБыло + СтрокаТЧ.ОтносительноеИмяФайла, КаталогСтало + СтрокаТЧ.ОтносительноеИмяФайла);
			КонецЦикла;
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли;
	
КонецПроцедуры
