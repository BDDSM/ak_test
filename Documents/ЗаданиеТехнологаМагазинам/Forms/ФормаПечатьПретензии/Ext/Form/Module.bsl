
&НаКлиенте
//Структура шаблонов содержит Наименование колонок и их порядок
Процедура ЗаполнитьСтрокуТаблицы(Таблица, НомерСтроки, СтруктураТЧ) //, СтруктураШаблонов, ТаблицаЗначений)
	//МассивСтрок = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(СтруктураШаблонов,",");
	//Итератор = 1;
	//Для Каждого Строка Из МассивСтрок Цикл
	//	Если ТаблицаЗначений.Колонки.Найти(Строка) = Неопределено И Строка <> "ПП" Тогда
	//		Итератор = Итератор + 1;
	//		Продолжить;
	//		//Не забываем, что Шапка тоже строка, а при нумерации нам нужно её исключить
	//	ИначеЕсли Строка = "ПП" Тогда
	//		Таблица.Cell(НомерСтроки, Итератор).Range().Text = Строка(НомерСтроки-1);
	//		Итератор = Итератор + 1;
	//		Продолжить;
	//	КонецЕсли;
	//	Таблица.Cell(НомерСтроки, Итератор).Range().Text = Строка(ЗначениеЗаполнения[Строка]);
	//	Итератор = Итератор + 1;
	//КонецЦикла;
	
	Итератор = 1;
	Для Каждого КлючИЗНачение Из СтруктураТЧ Цикл
		Таблица.Cell(НомерСтроки, Итератор).Range().Text = Строка(КлючИЗНачение.Значение);
		Итератор = Итератор + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	Месяцы=Новый Массив;
	Месяцы.Добавить("");
	Месяцы.Добавить("января");
	Месяцы.Добавить("февраля");
	Месяцы.Добавить("марта");
	Месяцы.Добавить("апреля");
	Месяцы.Добавить("мая");
	Месяцы.Добавить("июня");
	Месяцы.Добавить("июля");
	Месяцы.Добавить("августа");
	Месяцы.Добавить("сентября");
	Месяцы.Добавить("октября");
	Месяцы.Добавить("ноября");
	Месяцы.Добавить("декабря");
	
	Макет=ПолучитьИзВременногоХранилища(ПолучитьМакетНаСервере());
	ИмяФайла=ПолучитьИмяВременногоФайла("DOC");
	Макет.Записать(ИмяФайла);
	
	Ворд = Новый COMОбъект("Word.Application");

	Док = Ворд.Documents.Open(ИмяФайла);
	
	Ворд.Visible = Ложь;

    wdReplaceAll=2;
	
	Selection=Ворд.Selection;
	
	Selection.WholeStory();
	
	ДатаДень=формат(День(Дата),"ЧЦ=2; ЧН=0; ЧВН="); 
	ДатаМесяц=Месяцы[Месяц(Дата)];
	ДатаГод=формат(Год(Дата),"ЧГ=0");
	
	ДатаДеньУ=формат(День(ДатаУведомления),"ЧЦ=2; ЧН=0; ЧВН="); 
	ДатаМесяцУ=Месяцы[Месяц(ДатаУведомления)];
	ДатаГодУ=формат(Год(ДатаУведомления),"ЧГ=0");
	
	ЗаменитьТекст(Selection,"ДатаДень",ДатаДень);
	ЗаменитьТекст(Selection,"ДатаМесяц",ДатаМесяц);
	ЗаменитьТекст(Selection,"ДатаГод",ДатаГод);
	
	ЗаменитьТекст(Selection,"ДатаДеньУ",ДатаДень);
	ЗаменитьТекст(Selection,"ДатаМесяцУ",ДатаМесяц);
	ЗаменитьТекст(Selection,"ДатаГодУ",ДатаГод);

	ЗаменитьТекст(Selection,"ДоговорНомер",Элементы.ДоговорНомер.ТекстРедактирования);
	ЗаменитьТекст(Selection,"ДоговорДата",Элементы.ДоговорДата.ТекстРедактирования);
	
	ЗаменитьТекст(Selection,"Поставщик",""+Элементы.ПоставщикНаименованиеПолное.ТекстРедактирования,Ложь);
	Если ИспользоватьКонтактныеЛица тогда
		Р=Элементы.Руководитель.ТекстРедактирования;
		Д=Элементы.РуководительДолжность.ТекстРедактирования;
	иначе
		Р=Элементы.ПоставщикГенеральныйДиректор.ТекстРедактирования;
		Д=Элементы.ПоставщикДолжностьРуководителя.ТекстРедактирования;
	КонецЕсли;
	ЗаменитьТекст(Selection,"Руководитель",Р,Ложь);
	ЗаменитьТекст(Selection,"Должность2", ?(ЗначениеЗаполнено(Д), Д, "Генеральный директор"), Истина);
	ЗаменитьТекст(Selection,"Должность", ?(ЗначениеЗаполнено(Д), Д, "Генеральному директору"), Истина);
	
	
	МагазинТоварКоличество="";
	//сч=0;
	//Для Каждого СтрокаТовара из Товары цикл
	//	сч=сч+1;
	//	Если сч>1 тогда
	//		МагазинТоварКоличество=МагазинТоварКоличество+"; ";
	//	КонецЕсли;
	//	МагазинТоварКоличество=МагазинТоварКоличество+СтрокаТовара.Магазин+" - "+СтрокаТовара.Товар+", "+СтрокаТовара.Количество+" "+СтрокаТовара.ЕдиницаИзмерения;
	//КонецЦикла;
	//
	//ЗаменитьТекст(Selection,"МагазинТоварКоличест",МагазинТоварКоличество);
	
	Если Товары.Количество() > 0 Тогда
		
		//СтруктураДляФорматирования = Новый Структура("Количество", "ЧГ=");

		//Нужно оставить шапку и первую строку нетронутой
		Сч = 1;
		ПредМагазин = Неопределено;
		Итератор = 1;
		//ТаблицаВорд = Док.Content.Tables(1).Tables(1);
		ТаблицаВорд = Док.Tables(1).Tables(1);
		СтруктураСтроки = Новый Структура("НПП, МагазинТоварКоличество");
		Для Каждого СтрокаТЧ Из Товары Цикл
			
			// форматируем значения
			//ЗначениеСвойства = "";
			//Для Каждого ПараметрДляФорматирования Из СтруктураДляФорматирования Цикл
			//	Если СтрокаТЧ.Свойство(ПараметрДляФорматирования.Ключ, ЗначениеСвойства) Тогда
			//		СтрокаТЧ.Вставить(ПараметрДляФорматирования.Ключ, Формат(ЗначениеСвойства, ПараметрДляФорматирования.Значение));
			//	КонецЕсли;
			//КонецЦикла;
			
			ТекМагазин = СтрокаТЧ.Магазин;
						
			Если ТекМагазин = ПредМагазин Тогда
				МагазинТоварКоличество = МагазинТоварКоличество + ?(Прав(МагазинТоварКоличество, 2) = ": ", "", ", ") +
					СокрЛП(СтрокаТЧ.Товар) + " (" + Формат(СтрокаТЧ.Количество, "ЧГ=") + " " + СокрЛП(СтрокаТЧ.ЕдиницаИзмерения) + ")";
				Продолжить;
			ИначеЕсли ПредМагазин = Неопределено Тогда
				МагазинТоварКоличество = Строка(ТекМагазин) + ": " + СокрЛП(СтрокаТЧ.Товар) + " (" + Формат(СтрокаТЧ.Количество, "ЧГ=") + " " + СокрЛП(СтрокаТЧ.ЕдиницаИзмерения) + ")";
				ПредМагазин = ТекМагазин;
				Продолжить;
			КонецЕсли;
			
			//По умолчанию добавляет строку выше первой
			ТаблицаВорд.Rows.Add(ТаблицаВорд.Rows(Итератор));
			
			СтруктураСтроки.Вставить("НПП", Сч);
			СтруктураСтроки.Вставить("МагазинТоварКоличество", МагазинТоварКоличество);
			ЗаполнитьСтрокуТаблицы(ТаблицаВорд, Итератор, СтруктураСтроки);
			
			МагазинТоварКоличество = Строка(ТекМагазин) + ": " + СокрЛП(СтрокаТЧ.Товар) + " (" + Формат(СтрокаТЧ.Количество, "ЧГ=") + " " + СокрЛП(СтрокаТЧ.ЕдиницаИзмерения) + ")";
			ПредМагазин = ТекМагазин;
			Итератор = Итератор + 1;
			Сч = Сч + 1; 
			
		КонецЦикла;
		
		ТаблицаВорд.Rows.Add(ТаблицаВорд.Rows(Итератор));
		СтруктураСтроки.Вставить("НПП", Сч);
		СтруктураСтроки.Вставить("МагазинТоварКоличество", МагазинТоварКоличество);
		ЗаполнитьСтрокуТаблицы(ТаблицаВорд, Итератор, СтруктураСтроки);
		
	КонецЕсли;	
	
	ЗаменитьТекст(Selection,"Сумма",формат(СуммаКомпенсации,"ЧДЦ=2; ЧРД=.; ЧРГ='"));
	ЗаменитьТекст(Selection,"СуммаПрописью", СокрЛП(ЧислоПрописью(СуммаКомпенсации, "Л=ru_RU; ДП=Ложь", ""))); //, "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2"));
	
	Selection.WholeStory();
	Selection.FormFields.Shaded=Ложь;
	
	wdLine=5;
	Selection.HomeKey(wdLine);
	
	Ворд.Visible = Истина;
	Док.Activate();
	Док.Application.Activate();   	
	
	
	ПоказатьОповещениеПользователя("",,"Документ сформирован");
	
	
КонецПроцедуры


&НаКлиенте
Функция ЗаменитьТекст(Selection,Т1,Т2,ТочноеСовпадение=Истина)
	
	Selection.WholeStory();
	
	Для НомерПоля=1 по Selection.FormFields.Count цикл
		Поле=Selection.FormFields(НомерПоля);
		ИмяПоля=""+Поле.Name;
		Если (ТочноеСовпадение и ИмяПоля=Т1) 
			или (НЕ ТочноеСовпадение и найти(ИмяПоля,Т1)=1)
		тогда
			Поле.Result=""+Т2;
		КонецЕсли;
	конеццикла;
	
КонецФункции

&НаСервере
Функция ПолучитьМакетНаСервере()
	Макет=Документы.ЗаданиеТехнологаМагазинам.ПолучитьМакет("Претензия");
	возврат ПоместитьВоВременноеХранилище(Макет,УникальныйИдентификатор);
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Ссылка=Параметры.Ссылка;
	
	БазоваяСумма=500;
	
	Поставщик=Ссылка.Поставщик;
	Номер=Ссылка.Номер;
	Дата=Ссылка.Дата;
	ДатаУведомления=Дата;
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ДоговорыКонтрагентов.Ссылка КАК Договор
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Владелец = &Поставщик
		|	И НЕ ДоговорыКонтрагентов.АрендныйДоговор
		|	И ДоговорыКонтрагентов.ВидДоговора = &СПоставщиком
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДоговорыКонтрагентов.ПометкаУдаления,
		|	ДоговорыКонтрагентов.Дата УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	КонтактныеЛицаКонтрагентов.Ссылка КАК Руководитель,
		|	ВЫБОР
		|		КОГДА КонтактныеЛицаКонтрагентов.Должность ПОДОБНО &Директор
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ КАК ПриоритетДиректор,
		|	ВЫБОР
		|		КОГДА КонтактныеЛицаКонтрагентов.Должность ПОДОБНО &Генеральный
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ КАК ПриоритетГенеральный
		|ИЗ
		|	Справочник.КонтактныеЛицаКонтрагентов КАК КонтактныеЛицаКонтрагентов
		|ГДЕ
		|	КонтактныеЛицаКонтрагентов.Владелец = &Поставщик
		|
		|УПОРЯДОЧИТЬ ПО
		|	КонтактныеЛицаКонтрагентов.ПометкаУдаления,
		|	ПриоритетДиректор,
		|	ПриоритетГенеральный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МП_ЗадачаТехнолога.Магазин КАК Магазин,
		|	МП_ЗадачаТехнологаПараметрыЗадачи.Номенклатура КАК Товар,
		|	МП_ЗадачаТехнологаПараметрыЗадачи.ЕдиницаИзмерения,
		|	СУММА(МП_ЗадачаТехнологаПараметрыЗадачи.Количество) КАК Количество
		|ИЗ
		|	Документ.МП_ЗадачаТехнолога.ПараметрыЗадачи КАК МП_ЗадачаТехнологаПараметрыЗадачи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МП_ЗадачаТехнолога КАК МП_ЗадачаТехнолога
		|		ПО МП_ЗадачаТехнологаПараметрыЗадачи.Ссылка = МП_ЗадачаТехнолога.Ссылка
		|ГДЕ
		|	МП_ЗадачаТехнолога.Проведен
		|	И МП_ЗадачаТехнолога.ДокументОснование = &Ссылка
		|	И МП_ЗадачаТехнолога.ТипЗадания = ЗНАЧЕНИЕ(Перечисление.ТипыЗаданийТехнологаМагазинам.ВозвратНаСклад)
		|	И МП_ЗадачаТехнолога.ФактическаяДатаВыполнения <> ДАТАВРЕМЯ(1, 1, 1)
		|	И МП_ЗадачаТехнологаПараметрыЗадачи.Количество <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	МП_ЗадачаТехнолога.Магазин,
		|	МП_ЗадачаТехнологаПараметрыЗадачи.Номенклатура,
		|	МП_ЗадачаТехнологаПараметрыЗадачи.ЕдиницаИзмерения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МП_ЗадачаТехнолога.Магазин КАК Магазин
		|ИЗ
		|	Документ.МП_ЗадачаТехнолога КАК МП_ЗадачаТехнолога
		|ГДЕ
		|	МП_ЗадачаТехнолога.Проведен
		|	И МП_ЗадачаТехнолога.ДокументОснование = &Ссылка
		|	И МП_ЗадачаТехнолога.ТипЗадания = ЗНАЧЕНИЕ(Перечисление.ТипыЗаданийТехнологаМагазинам.ВозвратНаСклад)
		|	И МП_ЗадачаТехнолога.ФактическаяДатаВыполнения <> ДАТАВРЕМЯ(1, 1, 1)
		|
		|СГРУППИРОВАТЬ ПО
		|	МП_ЗадачаТехнолога.Магазин
		|
		|ИМЕЮЩИЕ
		|	СУММА(МП_ЗадачаТехнолога.ПараметрыЗадачи.Количество) > 0");

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Генеральный", "%енеральный%");
	Запрос.УстановитьПараметр("Директор", "%иректор%");
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	Запрос.УстановитьПараметр("СПоставщиком", Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком);
	
	Результаты = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);

	Результат=Результаты[0];
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() тогда
		Договор=ВыборкаДетальныеЗаписи.Договор;
	КонецЕсли;;

	Результат=Результаты[1];
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() тогда
		Руководитель=ВыборкаДетальныеЗаписи.Руководитель;
	КонецЕсли;;

	Результат=Результаты[2];
	Товары.Загрузить(Результат.Выгрузить());
	
	Результат=Результаты[3];
    СуммаКомпенсации=БазоваяСумма*Результат.Выбрать().Количество();
	
	Если СуммаКомпенсации = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Элементы.СформироватьДокумент.Доступность=СуммаКомпенсации>0;
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ДатаУведомления=макс(Дата,ДатаУведомления);
КонецПроцедуры

&НаКлиенте
Процедура РуководительПриИзменении(Элемент)
	ИспользоватьКонтактныеЛица=ЗначениеЗаполнено(Руководитель);
КонецПроцедуры
