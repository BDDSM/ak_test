
Функция ПолучитьИПодключитьВнешнююОбработку(НаименованиеОбработки)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ВнешниеОбработкиСсылка = Справочники.ВнешниеОбработки.НайтиПоНаименованию(НаименованиеОбработки);
	ДвоичныеДанные = ВнешниеОбработкиСсылка.ХранилищеВнешнейОбработки.Получить();
	
	#Если Сервер Тогда
		АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
		ИмяОбработки = ВнешниеОбработки.Подключить(АдресВоВременномХранилище, , Ложь);
	#Иначе
		ИмяОбработки = ПолучитьИмяВременногоФайла("epf");
		ДвоичныеДанные.Записать(ИмяОбработки); 
	#КонецЕсли
	
	Обработка = ВнешниеОбработки.Создать(ИмяОбработки);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Обработка;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТоварныеОперацииНаСервере()
Перем Дата1, Дата2, НомерТочки, Описание, СоответствиеТоваров;
	
	Магазин = Параметры.Магазин;
	Если Магазин.ТипСтруктурнойЕдиницы <> Перечисления.ТипыСтруктурныхЕдиниц.Розница Тогда Возврат; КонецЕсли;
	
	Если Магазин.ТипРозничнойТочки = Перечисления.ТипыРозничныхТочек.Избенка Тогда
		ВнешняяОбработкаОбъект = ПолучитьИПодключитьВнешнююОбработку("Уведомление по задачам технологов");
		ВнешняяОбработкаОбъект.ЗагрузкаОперацийПоИзбёнкам(Параметры.ЗаданиеТехнологаМагазинам, Ложь, Магазин, ТоварныеОперации);
	ИначеЕсли Магазин.ТипРозничнойТочки = Перечисления.ТипыРозничныхТочек.Магазин Тогда
		ДокЗадачаТехнологаСсылка = Параметры.ЗадачаТехнолога;
		Если ЗначениеЗаполнено(ДокЗадачаТехнологаСсылка) Тогда
			ДокЗадачаТехнологаОбъект = ДокЗадачаТехнологаСсылка.ПолучитьОбъект();
			ДокЗадачаТехнологаОбъект.ЗаполнитьТоварныеОперации(ТоварныеОперации);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьТоварныеОперацииНаСервере();
КонецПроцедуры
