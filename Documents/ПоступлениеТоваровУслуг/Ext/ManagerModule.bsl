Функция ПолучитьМедианыВеса(ТЗ)
	ТекстЗапроса = "";
	Для Каждого Строка из ТЗ Цикл
		ТекстЗапроса = ТекстЗапроса+?(ТекстЗапроса="",""," union all")+
		"
		|select * from
		|(select *
		|, ROW_NUMBER() over (partition by id_tov order by cn)rn
		|from
		|(SELECT top 39 Quantity cn, id_tov_cl id_tov
		|FROM         Sms_Union.dbo.CheckLine
		|WHERE id_tov_cl ="+Формат(Строка.ИД,"ЧН=;ЧГ=0")+"
		|order by date_ch,time_ch desc
		|)t1)t
		|where rn=20";
	КонецЦикла;
	ADOСоединение = Новый COMОбъект("ADODB.Connection");
	ADOСоединение.ConnectionTimeOut = 0;
	ADOСоединение.CommandTimeOut    = 0;	
	
	ПользовательSQL = ОбщегоНазначенияПовтИсп.ЗначениеКонстанты("ЛогинSQL");
	ПарольSQL 		= ОбщегоНазначенияПовтИсп.ЗначениеКонстанты("ПарольSQL");
	
	
	ADOСоединение.ConnectionString  = "SERVER=srv-sql01; DRIVER=SQL Server; UID=" + ПользовательSQL + "; PWD=" + ПарольSQL + "; OLE DB Services=-2;";
	
	Попытка
		ADOСоединение.Open();
		rs = ADOСоединение.Execute(ТекстЗапроса);
		rs.MoveFirst();
		Пока Не rs.EOF() Цикл
			Id = rs.Fields("id_tov").Value;
			Cn = rs.Fields("cn").Value;
			Стр = ТЗ.Найти(Id,"ИД");
			Если Стр<>Неопределено Тогда
				Стр.ВесУпаковки = Cn
			КонецЕсли;
			rs.MoveNext();
		КонецЦикла;
		ADOСоединение.Close();
	Исключение
		ADOСоединение.Close();
		Возврат Ложь
	КонецПопытки;
	Возврат Истина;
КонецФункции

Функция ПолучитьСпецификацииБылоДо17577(Период, МассивНоменклатуры, Контрагент, Склад=Неопределено, МоментВремени = Неопределено)
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период"				, Период);
	Запрос.УстановитьПараметр("Поставщик"			, Контрагент);
	Запрос.УстановитьПараметр("МассивНоменклатуры"	, МассивНоменклатуры);
	Запрос.УстановитьПараметр("Склад",?(Склад=Неопределено,Справочники.Склады.ПустаяСсылка(),Склад));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпецификацииПоставщиковСрезПоследних.Номенклатура,
	|	СпецификацииПоставщиковСрезПоследних.Спецификация,
	|	МАКСИМУМ(ЕСТЬNULL(НормативныйКвантУпаковкиСрезПоследних.Квант, 0)) КАК Квант,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НормативныйКвантУпаковкиСрезПоследних.Склад = &Склад
	|				ТОГДА НормативныйКвантУпаковкиСрезПоследних.Квант
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КвантПоСкладу
	|ИЗ
	|	РегистрСведений.СпецификацииПоставщиков.СрезПоследних(&Период, Номенклатура В (&МассивНоменклатуры)) КАК СпецификацииПоставщиковСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЦеныПоставщиковСрезПоследних.Номенклатура КАК Номенклатура,
	|			ЦеныПоставщиковСрезПоследних.Характеристика КАК Характеристика
	|		ИЗ
	|			РегистрСведений.ЦеныПоставщиков.СрезПоследних(
	|					&Период,
	|					Номенклатура В (&МассивНоменклатуры)
	|						И Поставщик = &Поставщик) КАК ЦеныПоставщиковСрезПоследних) КАК ЦеныПоставщиков
	|		ПО СпецификацииПоставщиковСрезПоследних.Номенклатура = ЦеныПоставщиков.Номенклатура
	|			И СпецификацииПоставщиковСрезПоследних.Характеристика = ЦеныПоставщиков.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйКвантУпаковки.СрезПоследних(&Период, Характеристика.Владелец В (&МассивНоменклатуры)) КАК НормативныйКвантУпаковкиСрезПоследних
	|		ПО СпецификацииПоставщиковСрезПоследних.Характеристика = НормативныйКвантУпаковкиСрезПоследних.Характеристика
	|ГДЕ
	|	СпецификацииПоставщиковСрезПоследних.Спецификация <> ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)
	|	И СпецификацииПоставщиковСрезПоследних.НоменклатураСырье = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И (СпецификацииПоставщиковСрезПоследних.ДатаКонца = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ СпецификацииПоставщиковСрезПоследних.ДатаКонца > &Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацииПоставщиковСрезПоследних.Номенклатура,
	|	СпецификацииПоставщиковСрезПоследних.Спецификация";
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	// АК БЕЛН 29.09.2016++
	ТЗРезультат = Новый ТаблицаЗначений;
	ТЗРезультат.Колонки.Добавить("Номенклатура");
	ТЗРезультат.Колонки.Добавить("Весовой",Новый ОписаниеТипов("Булево"));
	ТЗРезультат.Колонки.Добавить("Спецификация");
	ТЗРезультат.Колонки.Добавить("Квант",Новый ОписаниеТипов("Число"));
	Для каждого СтрокаТаблицы Из ТаблицаЗапроса Цикл
		НоваяСтрока = ТЗРезультат.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		Если СтрокаТаблицы.КвантПоСкладу > 0 Тогда
			НоваяСтрока.Квант = СтрокаТаблицы.КвантПоСкладу
		КонецЕсли;
	КонецЦикла;
	
	//
	Запрос = Новый Запрос;
	Если МоментВремени = Неопределено Тогда
		Запрос.УстановитьПараметр("МоментВремени"				, Период);	
	Иначе	
		Запрос.УстановитьПараметр("МоментВремени"				, МоментВремени);
	КонецЕсли;
	Запрос.УстановитьПараметр("Период"				, Период);
	Запрос.УстановитьПараметр("Поставщик"			, Контрагент);
	Запрос.УстановитьПараметр("МассивНоменклатуры"	, МассивНоменклатуры);
	Запрос.УстановитьПараметр("Склад",?(Склад=Неопределено,Справочники.Склады.ПустаяСсылка(),Склад));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Склады.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Склады
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.Контрагент = &Поставщик
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В(&МассивНоменклатуры)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Характеристики
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец В
	|			(ВЫБРАТЬ
	|				Таб.Ссылка
	|			ИЗ
	|				ВТ_Склады КАК Таб)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|	ТоварыНаСкладахОстатки.КоличествоОстаток
	|ПОМЕСТИТЬ ВТ_Остатки
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			ДОБАВИТЬКДАТЕ(&Период, СЕКУНДА, 1),
	|			Склад В
	|				(ВЫБРАТЬ
	|					Таб.Ссылка
	|				ИЗ
	|					ВТ_Склады КАК Таб)) КАК ТоварыНаСкладахОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналогУпаковкиУПереработчикаОстатки.СтандартнаяЭтикетка,
	|	АналогУпаковкиУПереработчикаОстатки.Аналог КАК Пустографка,
	|	АналогУпаковкиУПереработчикаОстатки.Товар,
	|	ВЫБОР
	|		КОГДА АналогУпаковкиУПереработчикаОстатки.КоличествоОстаток <= ТоварыНаСкладахОстатки.КоличествоОстаток
	|			ТОГДА АналогУпаковкиУПереработчикаОстатки.КоличествоОстаток
	|		ИНАЧЕ ТоварыНаСкладахОстатки.КоличествоОстаток
	|	КОНЕЦ КАК КоличествоПустографок,
	|	АналогУпаковкиУПереработчикаОстатки.Контрагент
	|ПОМЕСТИТЬ Пустографки
	|ИЗ
	|	РегистрНакопления.АналогУпаковкиУПереработчика.Остатки(
	|			&Период,
	|			Товар В
	|					(ВЫБРАТЬ
	|						Таб.Ссылка
	|					ИЗ
	|						ВТ_Товары КАК Таб)
	|				И Контрагент = &Поставщик) КАК АналогУпаковкиУПереработчикаОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Остатки КАК ТоварыНаСкладахОстатки
	|		ПО АналогУпаковкиУПереработчикаОстатки.Аналог = ТоварыНаСкладахОстатки.Номенклатура
	|;
	|
	//+++АК SHEP 2017.12.26 ИП-00017577: убрал лишний фильтр, выбиралось не всё сырьё/упаковка 
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	СпецификацииПоставщиковСрезПоследних.Номенклатура КАК Номенклатура,
	//|	МАКСИМУМ(СпецификацииПоставщиковСрезПоследних.Период) КАК Период,
	//|	СпецификацииПоставщиковСрезПоследних.Поставщик
	//|ПОМЕСТИТЬ ВТ_ФильтрСпецификаций
	//|ИЗ
	//|	РегистрСведений.СпецификацииПоставщиков.СрезПоследних(
	//|			&Период,
	//|			Номенклатура В
	//|				(ВЫБРАТЬ
	//|					Таб.Ссылка
	//|				ИЗ
	//|					ВТ_Товары КАК Таб)) КАК СпецификацииПоставщиковСрезПоследних
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	СпецификацииПоставщиковСрезПоследних.Номенклатура,
	//|	СпецификацииПоставщиковСрезПоследних.Поставщик
	//|;
	//---АК SHEP 2017.12.26
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпецификацииПоставщиковСрезПоследних.Номенклатура КАК Номенклатура,
	|	СпецификацииПоставщиковСрезПоследних.НоменклатураСырье,
	|	СпецификацииПоставщиковСрезПоследних.НоменклатураСырье.Весовой КАК СырьеВесовое,
	|	СпецификацииПоставщиковСрезПоследних.ЕдиницаИзмерения,
	|	СпецификацииПоставщиковСрезПоследних.Количество,
	|	Пустографки.Пустографка,
	|	ЕСТЬNULL(Пустографки.КоличествоПустографок, 0) КАК КоличествоПустографок,
	|	СпецификацииПоставщиковСрезПоследних.Номенклатура.Весовой КАК ВесовойТовар,
	|	СпецификацииПоставщиковСрезПоследних.Номенклатура.id_tov КАК ИД,
	|	ЕСТЬNULL(НормативныйКвантУпаковкиСрезПоследних.Квант, 0) КАК Квант
	|ИЗ
	//+++АК SHEP 2017.12.26 ИП-00017577
	//|	ВТ_ФильтрСпецификаций КАК ВТ_ФильтрСпецификаций
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СпецификацииПоставщиков.СрезПоследних(
	|		РегистрСведений.СпецификацииПоставщиков.СрезПоследних(
	//---АК SHEP 2017.12.26
	|				&Период,
	|				Номенклатура В
	|					(ВЫБРАТЬ
	|						Таб.Ссылка
	|					ИЗ
	|						ВТ_Товары КАК Таб)) КАК СпецификацииПоставщиковСрезПоследних
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ЦеныПоставщиковСрезПоследних.Номенклатура КАК Номенклатура,
	|				ЦеныПоставщиковСрезПоследних.Характеристика КАК Характеристика
	|			ИЗ
	|				РегистрСведений.ЦеныПоставщиков.СрезПоследних(
	|						&Период,
	|						Номенклатура В
	|								(ВЫБРАТЬ
	|									Таб.Ссылка
	|								ИЗ
	|									ВТ_Товары КАК Таб)
	|							И Поставщик = &Поставщик) КАК ЦеныПоставщиковСрезПоследних) КАК ЦеныПоставщиков
	|			ПО СпецификацииПоставщиковСрезПоследних.Номенклатура = ЦеныПоставщиков.Номенклатура
	|				И СпецификацииПоставщиковСрезПоследних.Характеристика = ЦеныПоставщиков.Характеристика
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				МАКСИМУМ(СпецификацииПоставщиковСрезПоследних.Период) КАК Период,
	|				СпецификацииПоставщиковСрезПоследних.Номенклатура КАК Номенклатура,
	|				СпецификацииПоставщиковСрезПоследних.НоменклатураСырье КАК НоменклатураСырье,
	|				СпецификацииПоставщиковСрезПоследних.Характеристика КАК Характеристика
	|			ИЗ
	|				РегистрСведений.СпецификацииПоставщиков.СрезПоследних(
	|						&Период,
	|						Номенклатура В
	|							(ВЫБРАТЬ
	|								Таб.Ссылка
	|							ИЗ
	|								ВТ_Товары КАК Таб)) КАК СпецификацииПоставщиковСрезПоследних
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|						ЦеныПоставщиковСрезПоследних.Номенклатура КАК Номенклатура,
	|						ЦеныПоставщиковСрезПоследних.Характеристика КАК Характеристика
	|					ИЗ
	|						РегистрСведений.ЦеныПоставщиков.СрезПоследних(
	|								&Период,
	|								Номенклатура В
	|										(ВЫБРАТЬ
	|											Таб.Ссылка
	|										ИЗ
	|											ВТ_Товары КАК Таб)
	|									И Поставщик = &Поставщик) КАК ЦеныПоставщиковСрезПоследних) КАК ЦеныПоставщиков
	|					ПО СпецификацииПоставщиковСрезПоследних.Номенклатура = ЦеныПоставщиков.Номенклатура
	|						И СпецификацииПоставщиковСрезПоследних.Характеристика = ЦеныПоставщиков.Характеристика
	|			
	|			СГРУППИРОВАТЬ ПО
	|				СпецификацииПоставщиковСрезПоследних.Номенклатура,
	|				СпецификацииПоставщиковСрезПоследних.НоменклатураСырье,
	|				СпецификацииПоставщиковСрезПоследних.Характеристика) КАК ВложенныйЗапрос
	|			ПО СпецификацииПоставщиковСрезПоследних.Номенклатура = ВложенныйЗапрос.Номенклатура
	|				И СпецификацииПоставщиковСрезПоследних.НоменклатураСырье = ВложенныйЗапрос.НоменклатураСырье
	|				И СпецификацииПоставщиковСрезПоследних.Характеристика = ВложенныйЗапрос.Характеристика
	|				И СпецификацииПоставщиковСрезПоследних.Период = ВложенныйЗапрос.Период
	|			ЛЕВОЕ СОЕДИНЕНИЕ Пустографки КАК Пустографки
	|			ПО СпецификацииПоставщиковСрезПоследних.Номенклатура = Пустографки.Товар
	|				И СпецификацииПоставщиковСрезПоследних.Поставщик = Пустографки.Контрагент
	|				И СпецификацииПоставщиковСрезПоследних.НоменклатураСырье = Пустографки.СтандартнаяЭтикетка
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйКвантУпаковки.СрезПоследних(
	|					&Период,
	|					Характеристика В
	|							(ВЫБРАТЬ
	|								Таб.Ссылка
	|							ИЗ
	|								ВТ_Характеристики КАК Таб)
	|						И Склад = &Склад) КАК НормативныйКвантУпаковкиСрезПоследних
	|			ПО СпецификацииПоставщиковСрезПоследних.Характеристика = НормативныйКвантУпаковкиСрезПоследних.Характеристика
	//+++АК SHEP 2017.12.26 ИП-00017577
	//|		ПО ВТ_ФильтрСпецификаций.Номенклатура = СпецификацииПоставщиковСрезПоследних.Номенклатура
	//|			И ВТ_ФильтрСпецификаций.Период = СпецификацииПоставщиковСрезПоследних.Период
	//|			И ВТ_ФильтрСпецификаций.Поставщик = СпецификацииПоставщиковСрезПоследних.Поставщик
	//---АК SHEP 2017.12.26
	|ГДЕ
	|	СпецификацииПоставщиковСрезПоследних.НоменклатураСырье <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И (СпецификацииПоставщиковСрезПоследних.ДатаКонца = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ СпецификацииПоставщиковСрезПоследних.ДатаКонца > &Период)
	|ИТОГИ
	|	СУММА(КоличествоПустографок),
	|	МАКСИМУМ(ВесовойТовар),
	|	МАКСИМУМ(ИД),
	|	МАКСИМУМ(Квант)
	|ПО
	|	Номенклатура";
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ТаблицаДопРасчет = Новый ТаблицаЗначений;
	ТаблицаДопРасчет.Колонки.Добавить("Номенклатура");
	ТаблицаДопРасчет.Колонки.Добавить("ИД",Новый ОписаниеТипов("Число"));
	ТаблицаДопРасчет.Колонки.Добавить("ВесУпаковки",Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(10,3)));
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТЗРезультат.Добавить();
		НоваяСтрока.Номенклатура = Выборка.Номенклатура;
		НоваяСтрока.Весовой = Выборка.ВесовойТовар;
		НоваяСтрока.Квант = Выборка.Квант;
		
		Если Выборка.ВесовойТовар и Выборка.КоличествоПустографок>0 Тогда
			СтрокаТЗДР = ТаблицаДопРасчет.Добавить();
			ЗаполнитьЗНаченияСвойств(СтрокаТЗДР,Выборка);
		КонецЕсли;
		
		ТЗСпец = Новый ТаблицаЗначений;
		ТЗСпец.Колонки.Добавить("Номенклатура");
		ТЗСпец.Колонки.Добавить("ЕдиницаИзмерения");
		ТЗСпец.Колонки.Добавить("Весовой");
		ТЗСпец.Колонки.Добавить("Количество");
		ТЗСпец.Колонки.Добавить("Пустографка");
		ТЗСпец.Колонки.Добавить("КоличествоПустографок");
		ВыборкаСырье = Выборка.Выбрать();
		Пока ВыборкаСырье.Следующий() Цикл
			НоваяСтрокаСпец = ТЗСпец.Добавить();
			НоваяСтрокаСпец.Номенклатура			= ВыборкаСырье.НоменклатураСырье;
			НоваяСтрокаСпец.Весовой					= ВыборкаСырье.СырьеВесовое;
			НоваяСтрокаСпец.ЕдиницаИзмерения		= ВыборкаСырье.ЕдиницаИзмерения;
			НоваяСтрокаСпец.Количество				= ВыборкаСырье.Количество;
			НоваяСтрокаСпец.Пустографка 			= ВыборкаСырье.Пустографка;
			НоваяСтрокаСпец.КоличествоПустографок 	= ВыборкаСырье.КоличествоПустографок;
		КонецЦикла;
		НоваяСтрока.Спецификация = Новый Структура("Владелец, Состав", Выборка.Номенклатура, ТЗСпец);
	КонецЦикла;
	
	Если ТаблицаДопРасчет.Количество()>0 Тогда
		ТЗРезультат.Колонки.Добавить("РасчетныйВесУпаковки",Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(10,3)));
		Если ПолучитьМедианыВеса(ТаблицаДопРасчет) Тогда
			Для Каждого СтрДР из ТаблицаДопРасчет Цикл
				СтрТЗ = ТЗРезультат.Найти(СтрДР.Номенклатура,"Номенклатура");
				Если СтрТЗ<>Неопределено Тогда
					СтрТЗ.РасчетныйВесУпаковки = СтрДР.ВесУпаковки;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТЗРезультат
	//АК БЕЛН 29.09.2016--
	
КонецФункции

//+++АК SHEP 2017.12.27 ИП-00017577
// Откорректировал запрос, предыдущий метод поместил в ПолучитьСпецификацииБылоДо17577
Функция ПолучитьСпецификации(Период, МассивНоменклатуры, Контрагент, Склад=Неопределено, МоментВремени = Неопределено, МВТ) Экспорт
	ТЗРезультат = Новый ТаблицаЗначений;
	ТЗРезультат.Колонки.Добавить("Номенклатура");
	ТЗРезультат.Колонки.Добавить("Весовой",Новый ОписаниеТипов("Булево"));
	ТЗРезультат.Колонки.Добавить("Спецификация");
	ТЗРезультат.Колонки.Добавить("Квант",Новый ОписаниеТипов("Число"));
	
	//Возврат	ТЗРезультат;    // Временно комментирую для экстренного убирания блокировок
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("Период"				, Период);
	Запрос.УстановитьПараметр("Поставщик"			, Контрагент);
	Запрос.УстановитьПараметр("МассивНоменклатуры"	, МассивНоменклатуры);
	Запрос.УстановитьПараметр("Склад",?(Склад=Неопределено,Справочники.Склады.ПустаяСсылка(),Склад));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Склады.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Склады
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.Контрагент = &Поставщик
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В(&МассивНоменклатуры)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Характеристики
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец В
	|			(ВЫБРАТЬ
	|				Таб.Ссылка
	|			ИЗ
	|				ВТ_Склады КАК Таб)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныПоставщиковСрезПоследних.Номенклатура КАК Номенклатура,
	|	ЦеныПоставщиковСрезПоследних.Характеристика КАК Характеристика,
	|	ЦеныПоставщиковСрезПоследних.Период КАК Период,
	|	ЦеныПоставщиковСрезПоследних.Поставщик КАК Поставщик
	|ПОМЕСТИТЬ ВТ_ЦеныПоставщиков
	|ИЗ
	|	РегистрСведений.ЦеныПоставщиков.СрезПоследних(
	|			&Период,
	|			Номенклатура В
	|					(ВЫБРАТЬ
	|						ВТ_Товары.Ссылка
	|					ИЗ
	|						ВТ_Товары)
	|				И Поставщик = &Поставщик) КАК ЦеныПоставщиковСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпецификацииПоставщиковСрезПоследних.Номенклатура,
	|	СпецификацииПоставщиковСрезПоследних.Спецификация,
	|	МАКСИМУМ(ЕСТЬNULL(НормативныйКвантУпаковкиСрезПоследних.Квант, 0)) КАК Квант,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА НормативныйКвантУпаковкиСрезПоследних.Склад = &Склад
	|				ТОГДА НормативныйКвантУпаковкиСрезПоследних.Квант
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КвантПоСкладу
	|ИЗ
	|	РегистрСведений.СпецификацииПоставщиков.СрезПоследних(
	|			&Период,
	|			Номенклатура В
	|				(ВЫБРАТЬ
	|					ВТ_Товары.Ссылка
	|				ИЗ
	|					ВТ_Товары)) КАК СпецификацииПоставщиковСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЦеныПоставщиков КАК ЦеныПоставщиков
	|		ПО СпецификацииПоставщиковСрезПоследних.Номенклатура = ЦеныПоставщиков.Номенклатура
	|			И СпецификацииПоставщиковСрезПоследних.Характеристика = ЦеныПоставщиков.Характеристика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйКвантУпаковки.СрезПоследних(
	|				&Период,
	|				Характеристика.Владелец В
	|					(ВЫБРАТЬ
	|						ВТ_Товары.Ссылка
	|					ИЗ
	|						ВТ_Товары)) КАК НормативныйКвантУпаковкиСрезПоследних
	|		ПО СпецификацииПоставщиковСрезПоследних.Характеристика = НормативныйКвантУпаковкиСрезПоследних.Характеристика
	|ГДЕ
	|	СпецификацииПоставщиковСрезПоследних.Спецификация <> ЗНАЧЕНИЕ(Справочник.Спецификации.ПустаяСсылка)
	|	И СпецификацииПоставщиковСрезПоследних.НоменклатураСырье = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И (СпецификацииПоставщиковСрезПоследних.ДатаКонца = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ СпецификацииПоставщиковСрезПоследних.ДатаКонца > &Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	СпецификацииПоставщиковСрезПоследних.Номенклатура,
	|	СпецификацииПоставщиковСрезПоследних.Спецификация";
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	// АК БЕЛН 29.09.2016++
	
	Для каждого СтрокаТаблицы Из ТаблицаЗапроса Цикл
		НоваяСтрока = ТЗРезультат.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		Если СтрокаТаблицы.КвантПоСкладу > 0 Тогда
			НоваяСтрока.Квант = СтрокаТаблицы.КвантПоСкладу
		КонецЕсли;
	КонецЦикла;
	
	//
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Если МоментВремени = Неопределено Тогда
		Запрос.УстановитьПараметр("МоментВремени"				, Период);	
	Иначе	
		Запрос.УстановитьПараметр("МоментВремени"				, МоментВремени);
	КонецЕсли;
	Запрос.УстановитьПараметр("Период"				, Период);
	Запрос.УстановитьПараметр("Поставщик"			, Контрагент);
	Запрос.УстановитьПараметр("МассивНоменклатуры"	, МассивНоменклатуры);
	Запрос.УстановитьПараметр("Склад",?(Склад=Неопределено,Справочники.Склады.ПустаяСсылка(),Склад));
	Запрос.УстановитьПараметр("МассивАналогов"	, ОбщегоНазначенияПовтИсп.ПолучитьАналогиУпаковокПереработчика());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АналогУпаковкиУПереработчикаОстатки.Товар,
	|	АналогУпаковкиУПереработчикаОстатки.Аналог КАК Пустографка,
	|	АналогУпаковкиУПереработчикаОстатки.СтандартнаяЭтикетка,
	|	ВЫБОР
	|		КОГДА АналогУпаковкиУПереработчикаОстатки.КоличествоОстаток >= ТоварыНаСкладахОстатки.КоличествоОстаток
	|			ТОГДА ТоварыНаСкладахОстатки.КоличествоОстаток
	|		ИНАЧЕ АналогУпаковкиУПереработчикаОстатки.КоличествоОстаток
	|	КОНЕЦ КАК КоличествоПустографок,
	|	АналогУпаковкиУПереработчикаОстатки.Контрагент
	|ПОМЕСТИТЬ Пустографки
	|ИЗ
	|	РегистрНакопления.АналогУпаковкиУПереработчика.Остатки(
	//+++АК Susk (Суслин К.В.) 2018.07.12 	 
	//вот из-за периода, когда 2 ПТУ, рисующие движения по АналогУпаковкиУПереработчикаОстатки, которые стоят в одной секунде - получаем пустографки в 
	//минус. И потом расходятся движения по проводкам и товарам на складах.
	//|			&Период,
	|			&МоментВремени,
	//---АК Susk (Суслин К.В.) 
	|			Контрагент = &Поставщик
	|				И товар В
	|					(ВЫБРАТЬ
	|						ВТ_Товары.Ссылка
	|					ИЗ
	|						ВТ_Товары)) КАК АналогУпаковкиУПереработчикаОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Период, Номенклатура В (&МассивАналогов) И Склад.Контрагент = &Поставщик) КАК ТоварыНаСкладахОстатки
	|		ПО АналогУпаковкиУПереработчикаОстатки.Аналог = ТоварыНаСкладахОстатки.Номенклатура
	|ГДЕ
	|	ТоварыНаСкладахОстатки.КоличествоОстаток > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналогУпаковкиУПереработчикаОстатки.Товар,
	|	АналогУпаковкиУПереработчикаОстатки.Контрагент,
	|	АналогУпаковкиУПереработчикаОстатки.СтандартнаяЭтикетка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныПоставщиковСрезПоследних.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ЦеныПоставщиковСрезПоследних.Период) КАК Период,
	|	ЦеныПоставщиковСрезПоследних.Поставщик
	|ПОМЕСТИТЬ ВТ_ФильтрСпецификаций
	|ИЗ
	|	ВТ_ЦеныПоставщиков КАК ЦеныПоставщиковСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныПоставщиковСрезПоследних.Номенклатура,
	|	ЦеныПоставщиковСрезПоследних.Поставщик
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЦеныПоставщиковСрезПоследних.Поставщик,
	|	Номенклатура,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпецификацииПоставщиковСрезПоследних.Номенклатура КАК Номенклатура,
	|	СпецификацииПоставщиковСрезПоследних.НоменклатураСырье,
	|	СпецификацииПоставщиковСрезПоследних.НоменклатураСырье.Весовой КАК СырьеВесовое,
	|	СпецификацииПоставщиковСрезПоследних.ЕдиницаИзмерения,
	|	СпецификацииПоставщиковСрезПоследних.Количество,
	|	Пустографки.Пустографка,
	|	ЕСТЬNULL(Пустографки.КоличествоПустографок, 0) КАК КоличествоПустографок,
	|	СпецификацииПоставщиковСрезПоследних.Номенклатура.Весовой КАК ВесовойТовар,
	|	СпецификацииПоставщиковСрезПоследних.Номенклатура.id_tov КАК ИД,
	|	ЕСТЬNULL(НормативныйКвантУпаковкиСрезПоследних.Квант, 0) КАК Квант
	|ИЗ
	|	РегистрСведений.СпецификацииПоставщиков.СрезПоследних(
	|			&Период,
	|			(Поставщик, Номенклатура) В
	|				(ВЫБРАТЬ
	|					Таб.Поставщик,
	|					Таб.Номенклатура
	|				ИЗ
	|					ВТ_ФильтрСпецификаций КАК Таб)) КАК СпецификацииПоставщиковСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ФильтрСпецификаций КАК ВТ_ФильтрСпецификаций
	|		ПО (ВТ_ФильтрСпецификаций.Номенклатура = СпецификацииПоставщиковСрезПоследних.Номенклатура)
	|			И (ВТ_ФильтрСпецификаций.Поставщик = СпецификацииПоставщиковСрезПоследних.Поставщик)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЦеныПоставщиков КАК ЦеныПоставщиков
	|		ПО СпецификацииПоставщиковСрезПоследних.Номенклатура = ЦеныПоставщиков.Номенклатура
	|			И СпецификацииПоставщиковСрезПоследних.Характеристика = ЦеныПоставщиков.Характеристика
	|			И (ВТ_ФильтрСпецификаций.Период = ЦеныПоставщиков.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Пустографки КАК Пустографки
	|		ПО СпецификацииПоставщиковСрезПоследних.Номенклатура = Пустографки.Товар
	|			И СпецификацииПоставщиковСрезПоследних.Поставщик = Пустографки.Контрагент
	|			И СпецификацииПоставщиковСрезПоследних.НоменклатураСырье = Пустографки.СтандартнаяЭтикетка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйКвантУпаковки.СрезПоследних(
	|				&Период,
	|				Характеристика В
	|						(ВЫБРАТЬ
	|							Таб.Ссылка
	|						ИЗ
	|							ВТ_Характеристики КАК Таб)
	|					И Склад = &Склад) КАК НормативныйКвантУпаковкиСрезПоследних
	|		ПО СпецификацииПоставщиковСрезПоследних.Характеристика = НормативныйКвантУпаковкиСрезПоследних.Характеристика
	|ГДЕ
	|	СпецификацииПоставщиковСрезПоследних.НоменклатураСырье <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И (СпецификацииПоставщиковСрезПоследних.ДатаКонца = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ СпецификацииПоставщиковСрезПоследних.ДатаКонца > &Период)
	|ИТОГИ
	|	СУММА(КоличествоПустографок),
	|	МАКСИМУМ(ВесовойТовар),
	|	МАКСИМУМ(ИД),
	|	МАКСИМУМ(Квант)
	|ПО
	|	Номенклатура";
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ТаблицаДопРасчет = Новый ТаблицаЗначений;
	ТаблицаДопРасчет.Колонки.Добавить("Номенклатура");
	ТаблицаДопРасчет.Колонки.Добавить("ИД",Новый ОписаниеТипов("Число"));
	ТаблицаДопРасчет.Колонки.Добавить("ВесУпаковки",Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(10,3)));
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТЗРезультат.Добавить();
		НоваяСтрока.Номенклатура = Выборка.Номенклатура;
		НоваяСтрока.Весовой = Выборка.ВесовойТовар;
		НоваяСтрока.Квант = Выборка.Квант;
		
		Если Выборка.ВесовойТовар и Выборка.КоличествоПустографок>0 Тогда
			СтрокаТЗДР = ТаблицаДопРасчет.Добавить();
			ЗаполнитьЗНаченияСвойств(СтрокаТЗДР,Выборка);
		КонецЕсли;
		
		ТЗСпец = Новый ТаблицаЗначений;
		ТЗСпец.Колонки.Добавить("Номенклатура");
		ТЗСпец.Колонки.Добавить("ЕдиницаИзмерения");
		ТЗСпец.Колонки.Добавить("Весовой");
		ТЗСпец.Колонки.Добавить("Количество");
		ТЗСпец.Колонки.Добавить("Пустографка");
		ТЗСпец.Колонки.Добавить("КоличествоПустографок");
		ВыборкаСырье = Выборка.Выбрать();
		Пока ВыборкаСырье.Следующий() Цикл
			НоваяСтрокаСпец = ТЗСпец.Добавить();
			НоваяСтрокаСпец.Номенклатура			= ВыборкаСырье.НоменклатураСырье;
			НоваяСтрокаСпец.Весовой					= ВыборкаСырье.СырьеВесовое;
			НоваяСтрокаСпец.ЕдиницаИзмерения		= ВыборкаСырье.ЕдиницаИзмерения;
			НоваяСтрокаСпец.Количество				= ВыборкаСырье.Количество;
			НоваяСтрокаСпец.Пустографка 			= ВыборкаСырье.Пустографка;
			НоваяСтрокаСпец.КоличествоПустографок 	= ВыборкаСырье.КоличествоПустографок;
		КонецЦикла;
		НоваяСтрока.Спецификация = Новый Структура("Владелец, Состав", Выборка.Номенклатура, ТЗСпец);
	КонецЦикла;
	
	Если ТаблицаДопРасчет.Количество()>0 Тогда
		ТЗРезультат.Колонки.Добавить("РасчетныйВесУпаковки",Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(10,3)));
		Если ПолучитьМедианыВеса(ТаблицаДопРасчет) Тогда
			Для Каждого СтрДР из ТаблицаДопРасчет Цикл
				СтрТЗ = ТЗРезультат.Найти(СтрДР.Номенклатура,"Номенклатура");
				Если СтрТЗ<>Неопределено Тогда
					СтрТЗ.РасчетныйВесУпаковки = СтрДР.ВесУпаковки;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТЗРезультат
	//АК БЕЛН 29.09.2016--
	
КонецФункции

Функция ПолучитьСпецификацииКомплектов(Период, МассивНоменклатуры, Контрагент, МВТ) Экспорт
	
	//
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.УстановитьПараметр("Период"				, Период);
	Запрос.УстановитьПараметр("Поставщик"			, Контрагент);
	Запрос.УстановитьПараметр("МассивНоменклатуры"	, МассивНоменклатуры);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Товар КАК Номенклатура,
	|	ВложенныйЗапрос.Составляющая,
	|	СпецификацииПоставщиковСрезПоследних.Спецификация
	|ИЗ
	|	(ВЫБРАТЬ
	|		СоставКомплектаСрезПоследних.Характеристика.Владелец КАК Товар,
	|		СоставКомплектаСрезПоследних.Составляющая.Владелец КАК Составляющая
	|	ИЗ
	|		РегистрСведений.СоставКомплекта.СрезПоследних(
	|				&Период,
	|				Характеристика.Владелец В
	|					(ВЫБРАТЬ
	|						Таб.Ссылка
	|					ИЗ
	|						ВТ_Товары КАК Таб)) КАК СоставКомплектаСрезПоследних) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СпецификацииПоставщиков.СрезПоследних(
	|				&Период,
	|				&Поставщик = Поставщик
	|					И Номенклатура В
	|						(ВЫБРАТЬ
	|							Таб.Ссылка
	|						ИЗ
	|							ВТ_Товары КАК Таб)) КАК СпецификацииПоставщиковСрезПоследних
	|		ПО ВложенныйЗапрос.Составляющая = СпецификацииПоставщиковСрезПоследних.Номенклатура
	|			И (СпецификацииПоставщиковСрезПоследних.НоменклатураСырье = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЦеныПоставщиков КАК ЦеныПоставщиков
	|		ПО (СпецификацииПоставщиковСрезПоследних.Номенклатура = ЦеныПоставщиков.Номенклатура)
	|			И (СпецификацииПоставщиковСрезПоследних.Характеристика = ЦеныПоставщиков.Характеристика)
	|ГДЕ
	|	(СпецификацииПоставщиковСрезПоследних.ДатаКонца = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ СпецификацииПоставщиковСрезПоследних.ДатаКонца > &Период)";
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	//АК БЕЛН 29.09.2016++
	ТЗРезультат = Новый ТаблицаЗначений;
	ТЗРезультат.Колонки.Добавить("Номенклатура");
	ТЗРезультат.Колонки.Добавить("Спецификация");
	ТЗРезультат.Колонки.Добавить("Составляющая");
	ТЗРезультат.Колонки.Добавить("Весовой",Новый ОписаниеТипов("Булево"));
	ТЗРезультат.Колонки.Добавить("Квант",Новый ОписаниеТипов("Число"));
	Для каждого СтрокаТаблицы Из ТаблицаЗапроса Цикл
		НоваяСтрока = ТЗРезультат.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
	КонецЦикла;
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период"				, Период);
	Запрос.УстановитьПараметр("Поставщик"			, Контрагент);
	//Запрос.УстановитьПараметр("МассивНоменклатуры"	, МассивНоменклатуры);
	Запрос.МенеджерВременныхТаблиц = МВТ;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Товар КАК Номенклатура,
	|	ВложенныйЗапрос.Составляющая КАК Составляющая,
	|	СпецификацииПоставщиковСрезПоследних.НоменклатураСырье,
	|	СпецификацииПоставщиковСрезПоследних.НоменклатураСырье.Весовой КАК СырьеВесовое,
	|	СпецификацииПоставщиковСрезПоследних.Количество,
	|	СпецификацииПоставщиковСрезПоследних.ЕдиницаИзмерения,
	|	Пустографки.Пустографка,
	|	МАКСИМУМ(ЕСТЬNULL(Пустографки.КоличествоПустографок, 0)) КАК КоличествоПустографок,
	|	ВложенныйЗапрос.Товар.Весовой КАК ВесовойТовар
	|ИЗ
	|	(ВЫБРАТЬ
	|		СоставКомплектаСрезПоследних.Характеристика.Владелец КАК Товар,
	|		СоставКомплектаСрезПоследних.Составляющая.Владелец КАК Составляющая
	|	ИЗ
	|		РегистрСведений.СоставКомплекта.СрезПоследних(
	|				&Период,
	|				Характеристика.Владелец В
	|					(ВЫБРАТЬ
	|						Таб.Ссылка
	|					ИЗ
	|						ВТ_Товары КАК Таб)) КАК СоставКомплектаСрезПоследних) КАК ВложенныйЗапрос
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СпецификацииПоставщиков.СрезПоследних(
	|				&Период,
	|				&Поставщик = Поставщик
	|					И Номенклатура В
	|						(ВЫБРАТЬ
	|							Таб.Ссылка
	|						ИЗ
	|							ВТ_Товары КАК Таб)) КАК СпецификацииПоставщиковСрезПоследних
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЦеныПоставщиков КАК ЦеныПоставщиков
	|			ПО СпецификацииПоставщиковСрезПоследних.Номенклатура = ЦеныПоставщиков.Номенклатура
	|				И СпецификацииПоставщиковСрезПоследних.Характеристика = ЦеныПоставщиков.Характеристика
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				МАКСИМУМ(СпецификацииПоставщиковСрезПоследних.Период) КАК Период,
	|				СпецификацииПоставщиковСрезПоследних.Номенклатура КАК Номенклатура,
	|				СпецификацииПоставщиковСрезПоследних.НоменклатураСырье КАК НоменклатураСырье,
	|				СпецификацииПоставщиковСрезПоследних.Характеристика КАК Характеристика
	|			ИЗ
	|				РегистрСведений.СпецификацииПоставщиков.СрезПоследних(
	|						&Период,
	|						&Поставщик = Поставщик
	|							И Номенклатура В
	|								(ВЫБРАТЬ
	|									Таб.Ссылка
	|								ИЗ
	|									ВТ_Товары КАК Таб)) КАК СпецификацииПоставщиковСрезПоследних
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЦеныПоставщиков КАК ЦеныПоставщиков
	|					ПО СпецификацииПоставщиковСрезПоследних.Номенклатура = ЦеныПоставщиков.Номенклатура
	|						И СпецификацииПоставщиковСрезПоследних.Характеристика = ЦеныПоставщиков.Характеристика
	|			
	|			СГРУППИРОВАТЬ ПО
	|				СпецификацииПоставщиковСрезПоследних.Номенклатура,
	|				СпецификацииПоставщиковСрезПоследних.НоменклатураСырье,
	|				СпецификацииПоставщиковСрезПоследних.Характеристика) КАК ВложенныйЗапрос1
	|			ПО СпецификацииПоставщиковСрезПоследних.Номенклатура = ВложенныйЗапрос1.Номенклатура
	|				И СпецификацииПоставщиковСрезПоследних.НоменклатураСырье = ВложенныйЗапрос1.НоменклатураСырье
	|				И СпецификацииПоставщиковСрезПоследних.Характеристика = ВложенныйЗапрос1.Характеристика
	|				И СпецификацииПоставщиковСрезПоследних.Период = ВложенныйЗапрос1.Период
	|			ЛЕВОЕ СОЕДИНЕНИЕ Пустографки КАК Пустографки
	|			ПО СпецификацииПоставщиковСрезПоследних.НоменклатураСырье = Пустографки.СтандартнаяЭтикетка
	|				И СпецификацииПоставщиковСрезПоследних.Номенклатура = Пустографки.Товар
	|		ПО ВложенныйЗапрос.Составляющая = СпецификацииПоставщиковСрезПоследних.Номенклатура
	|			И (СпецификацииПоставщиковСрезПоследних.НоменклатураСырье <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|ГДЕ
	|	(СпецификацииПоставщиковСрезПоследних.ДатаКонца = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ СпецификацииПоставщиковСрезПоследних.ДатаКонца > &Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Товар,
	|	ВложенныйЗапрос.Составляющая,
	|	СпецификацииПоставщиковСрезПоследних.НоменклатураСырье,
	|	СпецификацииПоставщиковСрезПоследних.Количество,
	|	СпецификацииПоставщиковСрезПоследних.ЕдиницаИзмерения,
	|	Пустографки.Пустографка,
	|	ВложенныйЗапрос.Товар.Весовой,
	|	СпецификацииПоставщиковСрезПоследних.НоменклатураСырье.Весовой
	|ИТОГИ
	|	СУММА(КоличествоПустографок),
	|	МАКСИМУМ(ВесовойТовар)
	|ПО
	|	Номенклатура,
	|	Составляющая";

	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаДопРасчет = Новый ТаблицаЗначений;
	ТаблицаДопРасчет.Колонки.Добавить("Номенклатура");
	ТаблицаДопРасчет.Колонки.Добавить("ИД",Новый ОписаниеТипов("Число"));
	ТаблицаДопРасчет.Колонки.Добавить("ВесУпаковки",Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(10,3)));
	
	Пока Выборка.Следующий() Цикл
		ВыбСост = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыбСост.Следующий() Цикл
			НоваяСтрока = ТЗРезультат.Добавить();
			НоваяСтрока.Номенклатура 	= ВыбСост.Номенклатура;
			НоваяСтрока.Составляющая 	= ВыбСост.Составляющая;
			НоваяСтрока.Весовой = ВыбСост.ВесовойТовар;
			
			Если Выборка.ВесовойТовар и Выборка.КоличествоПустографок>0 Тогда
				СтрокаТЗДР = ТаблицаДопРасчет.Добавить();
				ЗаполнитьЗНаченияСвойств(СтрокаТЗДР,Выборка);
			КонецЕсли;
			
			ВыборкаСырье = ВыбСост.Выбрать();
			ТЗСпец = Новый ТаблицаЗначений;
			ТЗСпец.Колонки.Добавить("Номенклатура");
			ТЗСпец.Колонки.Добавить("Весовой");
			ТЗСпец.Колонки.Добавить("ЕдиницаИзмерения");
			ТЗСпец.Колонки.Добавить("Количество");
			ТЗСпец.Колонки.Добавить("Пустографка");
			ТЗСпец.Колонки.Добавить("КоличествоПустографок");
			Пока ВыборкаСырье.Следующий() Цикл
				НоваяСтрокаСпец = ТЗСпец.Добавить();
				НоваяСтрокаСпец.Номенклатура			= ВыборкаСырье.НоменклатураСырье;
				НоваяСтрокаСпец.Весовой					= ВыборкаСырье.СырьеВесовое;
				НоваяСтрокаСпец.ЕдиницаИзмерения		= ВыборкаСырье.ЕдиницаИзмерения;
				НоваяСтрокаСпец.Количество				= ВыборкаСырье.Количество;
				НоваяСтрокаСпец.Пустографка 			= ВыборкаСырье.Пустографка;
				НоваяСтрокаСпец.КоличествоПустографок 	= ВыборкаСырье.КоличествоПустографок;
			КонецЦикла;
			НоваяСтрока.Спецификация 	= Новый Структура("Владелец, Состав", ВыбСост.Номенклатура, ТЗСпец);
		КонецЦикла;
	КонецЦикла;
	
	Если ТаблицаДопРасчет.Количество()>0 Тогда
		ТЗРезультат.Колонки.Добавить("РасчетныйВесУпаковки",Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(10,3)));
		Если ПолучитьМедианыВеса(ТаблицаДопРасчет) Тогда
			Для Каждого СтрДР из ТаблицаДопРасчет Цикл
				СтрТЗ = ТЗРезультат.Найти(СтрДР.Номенклатура,"Номенклатура");
				Если СтрТЗ<>Неопределено Тогда
					СтрТЗ.РасчетныйВесУпаковки = СтрДР.ВесУпаковки;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	//
	Возврат ТЗРезультат
	
КонецФункции

Функция ПолучитьТаблицуТоваровДляСторнированияНаценки(ТаблицаСпецификаций, Контрагент, Период)Экспорт
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период"		, Период);
	Запрос.УстановитьПараметр("Контрагент"	, Контрагент);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Контрагенты.Ссылка <> Контрагенты.ГоловнойКонтрагент
	|				И Контрагенты.ГоловнойКонтрагент <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА Контрагенты.ГоловнойКонтрагент
	|		ИНАЧЕ Контрагенты.Ссылка
	|	КОНЕЦ КАК Контрагент
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка = &Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НаценкиНаСебестоимостьГотовойПродукцииПроизводителейСрезПоследних.Наценка КАК НаценкаНаЕдиницуПродукции
	|ИЗ
	|	РегистрСведений.НаценкиНаСебестоимостьГотовойПродукцииПроизводителей.СрезПоследних(
	|			&Период,
	|			Производитель В
	|				(ВЫБРАТЬ
	|					ВТ.Контрагент
	|				ИЗ
	|					ВТ)) КАК НаценкиНаСебестоимостьГотовойПродукцииПроизводителейСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ";
	
	ТаблицаНаценок = ТаблицаСпецификаций.Скопировать();
	ТаблицаНаценок.Свернуть("Номенклатура");
	ТаблицаНаценок.Колонки.Добавить("НаценкаНаЕдиницуПродукции", Новый ОписаниеТипов("Число"));
	
	// Наценка единая
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()Тогда
		
		Наценка = Выборка.НаценкаНаЕдиницуПродукции;
		ТаблицаНаценок.ЗаполнитьЗначения(Наценка, "НаценкаНаЕдиницуПродукции");
		
		Возврат ТаблицаНаценок;
		
	КонецЕсли;
	
	// Нет наценок вернем пустую таблицу
	Возврат ТаблицаНаценок.СкопироватьКолонки();
	
КонецФункции


Процедура ДобавитьДвиженияПоСебестоимостиСырьяИУпаковки(Движения, Знач СсылкаНаОбъект, Знач СтрокаТЧ, ТаблицаСпецификаций) Экспорт
	
	//
	НайденнаяСтрока = ТаблицаСпецификаций.Найти(СтрокаТЧ.Номенклатура, "Номенклатура");
	Если НайденнаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//
	РегНастройкаОтражения 	= РегистрыСведений.НастройкаОтраженияОперацийВУчете;
	ТекДата 				= СсылкаНаОбъект.Дата;
	ДвиженияФинансовый 		= Движения.Финансовый;
	
	//+++АК SHEP 2018.05.06 ИП-00018453
	СтруктурныеЕдиницыСторонняяПереработка = ОбщегоНазначенияПовтИсп.СторонняяПереработкаДляОрганизации(СсылкаНаОбъект.Организация);
	СкладПереработчика = Документы.РасходныйОрдерСклад.ПолучитьСкладПереработчика(СсылкаНаОбъект.Контрагент, СсылкаНаОбъект.Организация);
	//---АК SHEP 2018.05.06
	
	Спецификация = НайденнаяСтрока.Спецификация;
	СоставСпецификации = Спецификация.Состав;
	
	ТабСчетаСоставСпецификации = ОбщегоНазначенияКлиентСервер.ПолучитьТаблицуСчетовУчетаНоменклатур(СоставСпецификации.ВыгрузитьКолонку("Номенклатура"), ТекДата);
	
	Для Каждого СоставляющаяПродукции Из СоставСпецификации Цикл
		
		Если СоставляющаяПродукции.Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Упаковка Тогда
			СтруктураНастроек = РегНастройкаОтражения.ПолучитьПоследнее(ТекДата, Новый Структура("ВидОперации", Перечисления.ВидыОперацийВУчете.СписаниеСебестоимостиУпаковки));
		Иначе
			СтруктураНастроек = РегНастройкаОтражения.ПолучитьПоследнее(ТекДата, Новый Структура("ВидОперации", Перечисления.ВидыОперацийВУчете.СписаниеСебестоимостиСырья));
		КонецЕсли;
		
		КоэффициентПересчета 	= СоставляющаяПродукции.ЕдиницаИзмерения.Коэффициент;
		Если ТекДата >= '20180601' Тогда 
			КоличествоПретензияКПоставщику = 
				СтрокаТЧ.Количество - СтрокаТЧ.ПоПриходнымОрдерам - СтрокаТЧ.КоличествоПретензияКСкладу - СтрокаТЧ.КоличествоПретензияКПеревозчику;
		Иначе
			КоличествоПретензияКПоставщику = 0;
		КонецЕсли;
		КоличествоСписания 		= (СтрокаТЧ.Количество - КоличествоПретензияКПоставщику)  * СоставляющаяПродукции.Количество * КоэффициентПересчета;
		
		КоличествоСписанияАналог = 0;
		Если СоставляющаяПродукции.КоличествоПустографок > 0 Тогда
			
			Если НайденнаяСтрока.Весовой Тогда
				Если НайденнаяСтрока.РасчетныйВесУпаковки = 0 Тогда
					КоличествоСписанияАналог = СтрокаТЧ.Количество/НайденнаяСтрока.Номенклатура.ОднаУпаковкаСодержит;
				Иначе
					КоличествоСписанияАналог = СтрокаТЧ.Количество/НайденнаяСтрока.РасчетныйВесУпаковки;
				КонецЕсли;
				КоличествоСписанияАналог=Окр(КоличествоСписанияАналог+0.5,0,РежимОкругления.Окр15как10)*СоставляющаяПродукции.Количество*КоэффициентПересчета;
				Если НайденнаяСтрока.Квант>0 Тогда
					КоличествоСписанияАналог = КоличествоСписанияАналог+Окр(СтрокаТЧ.Количество/НайденнаяСтрока.Квант+0.5,0,РежимОкругления.Окр15как10)
				КонецЕсли
			Иначе
				КоличествоСписанияАналог = КоличествоСписания;
			КонецЕсли;
			
			Проводка = ДвиженияФинансовый.Добавить();
			
			Проводка.Период = ТекДата;
			
			// Дт
			Проводка.СчетДт 							= СтрокаТЧ.СчетУчета;
			Если СтрокаТЧ.СчетУчета = ПланыСчетов.Финансовый.Товары Тогда
				Проводка.СубконтоДт.МестаХранения  			= СсылкаНаОбъект.СтруктурнаяЕдиница;
				Проводка.СубконтоДт.Товары					= СтрокаТЧ.Номенклатура;
				Проводка.СубконтоДт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров41;//СтруктураНастроек.СтатьяДвиженияТоваров;
			Иначе
				Проводка.СубконтоДт.Материалы					= СтрокаТЧ.Номенклатура;
			КонецЕсли;	
			
			// Кт
		
			Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СоставляющаяПродукции.Номенклатура, "ТипТовара") = Перечисления.ТипыТоваров.Упаковка Тогда
				Проводка.СчетКт 							= ПланыСчетов.Финансовый.МатералыДляВыпуска;
				Проводка.СубконтоКт.Материалы	  			= СоставляющаяПродукции.Пустографка;
				//+++АК SHEP 2018.05.06 ИП-00018453
				//Проводка.СубконтоКт.Склады					= Документы.РасходныйОрдерСклад.ПолучитьСкладПереработчика(СсылкаНаОбъект.Контрагент);
				Проводка.СубконтоКт.Склады					= СкладПереработчика;
				//---АК SHEP 2018.05.06
				Проводка.СубконтоКт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
				Проводка.Содержание							= "Себестоимость упаковки";
			Иначе
				Проводка.СчетКт 							= СтрокаТЧ.СчетУчета;
				//+++АК SHEP 2018.05.06 ИП-00018453
				//Проводка.СубконтоКт.МестаХранения  			= Справочники.СтруктурныеЕдиницы.СторонняяПереработка;//СсылкаНаОбъект.СтруктурнаяЕдиница;
				Проводка.СубконтоКт.МестаХранения  			= СтруктурныеЕдиницыСторонняяПереработка;
				//---АК SHEP 2018.05.06
				Проводка.СубконтоКт.Товары					= СоставляющаяПродукции.Номенклатура;
				Проводка.СубконтоКт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
				Проводка.Содержание							= "Себестоимость сырья";
			КонецЕсли;												
			//+++АК sils 28.11.2018 ИП-00020124
			//Проводка.КоличествоКт = Окр(Мин(КоличествоСписанияАналог,СоставляющаяПродукции.КоличествоПустографок));
			Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СоставляющаяПродукции.Номенклатура, "ТипТовара") = Перечисления.ТипыТоваров.Упаковка и
				ТекДата >= '20181101' Тогда
				Проводка.КоличествоКт = Окр(Мин(КоличествоСписанияАналог,СоставляющаяПродукции.КоличествоПустографок), 3, 1);
			Иначе
				Проводка.КоличествоКт = Окр(Мин(КоличествоСписанияАналог,СоставляющаяПродукции.КоличествоПустографок));
			КонецЕсли;												
			//---АК
			Проводка.НомерЖурнала	= "ТД";
			//Проводка.Организация 	= СсылкаНаОбъект.Организация;
			Проводка.Сумма 			= Проводка.КоличествоКт * ОбщегоНазначенияСервер.ПолучитьСебестоимостьЕдиницыСырья(СоставляющаяПродукции.Пустографка,, ТекДата);
			Проводка.СторонаПроводкиДляПересчетаПоСебестоимости = "КТ";
			
			ДвижениеПустографки = Движения.АналогУпаковкиУПереработчика.ДобавитьРасход();
			ДвижениеПустографки.Период 				= ТекДата;
			ДвижениеПустографки.Контрагент 			= СсылкаНаОбъект.Контрагент;
			ДвижениеПустографки.Товар 				= СтрокаТЧ.Номенклатура;
			ДвижениеПустографки.СтандартнаяЭтикетка = СоставляющаяПродукции.Номенклатура;
			ДвижениеПустографки.Аналог 				= СоставляющаяПродукции.Пустографка;
			ДвижениеПустографки.Количество 			= Мин(КоличествоСписанияАналог, СоставляющаяПродукции.КоличествоПустографок);
			
			//СтрокиАналоги = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Пустографка",СоставляющаяПродукции.Пустографка));
			
			
		КонецЕсли;
		
		Если КоличествоСписанияАналог > СоставляющаяПродукции.КоличествоПустографок или КоличествоСписанияАналог=0  
			И НЕ (КоличествоСписанияАналог = 0 И КоличествоСписания = 0) Тогда
			
			Проводка = ДвиженияФинансовый.Добавить();
			Проводка.Период = ТекДата;
			
			// Дт
			Проводка.СчетДт 							= СтрокаТЧ.СчетУчета;
			Если СтрокаТЧ.СчетУчета = ПланыСчетов.Финансовый.Товары Тогда
				Проводка.СубконтоДт.МестаХранения  			= СсылкаНаОбъект.СтруктурнаяЕдиница;
				Проводка.СубконтоДт.Товары					= СтрокаТЧ.Номенклатура;
				Проводка.СубконтоДт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров41;//СтруктураНастроек.СтатьяДвиженияТоваров;
			Иначе
				Проводка.СубконтоДт.Материалы					= СтрокаТЧ.Номенклатура;
			КонецЕсли;
		
			Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СоставляющаяПродукции.Номенклатура, "ТипТовара") = Перечисления.ТипыТоваров.Упаковка Тогда
				Проводка.СчетКт 							= ПланыСчетов.Финансовый.МатералыДляВыпуска;
				Проводка.СубконтоКт.Материалы	  			= СоставляющаяПродукции.Номенклатура;
				//+++АК SHEP 2018.05.06 ИП-00018453
				//Проводка.СубконтоКт.Склады					= Документы.РасходныйОрдерСклад.ПолучитьСкладПереработчика(СсылкаНаОбъект.Контрагент);
				Проводка.СубконтоКт.Склады					= СкладПереработчика;
				//---АК SHEP 2018.05.06
				Проводка.СубконтоКт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
				Проводка.Содержание							= "Себестоимость упаковки";
			Иначе
				Проводка.СчетКт 							= СтрокаТЧ.СчетУчета;
				//+++АК SHEP 2018.05.06 ИП-00018453
				//Проводка.СубконтоКт.МестаХранения  			= Справочники.СтруктурныеЕдиницы.СторонняяПереработка;//СсылкаНаОбъект.СтруктурнаяЕдиница;
				Проводка.СубконтоКт.МестаХранения  			= СтруктурныеЕдиницыСторонняяПереработка;
				//---АК SHEP 2018.05.06
				Проводка.СубконтоКт.Товары					= СоставляющаяПродукции.Номенклатура;
				Проводка.СубконтоКт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
				Проводка.Содержание							= "Себестоимость сырья";
			КонецЕсли;												

			//+++АК sils 28.11.2018 ИП-00020124
			//Если КоличествоСписанияАналог = 0 Тогда
			//	Проводка.КоличествоКт 	= Окр(КоличествоСписания);
			//Иначе
			//	Проводка.КоличествоКт = Окр((КоличествоСписанияАналог-СоставляющаяПродукции.КоличествоПустографок)*КоличествоСписания/КоличествоСписанияАналог);
			//КонецЕсли;
			Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СоставляющаяПродукции.Номенклатура, "ТипТовара") = Перечисления.ТипыТоваров.Упаковка и
				ТекДата >= '20181101' Тогда
				Если КоличествоСписанияАналог = 0 Тогда
					Проводка.КоличествоКт 	= Окр(КоличествоСписания, 3, 1);
				Иначе
					Проводка.КоличествоКт = Окр((КоличествоСписанияАналог-СоставляющаяПродукции.КоличествоПустографок)*КоличествоСписания/КоличествоСписанияАналог, 3, 1);
				КонецЕсли;
			Иначе
				Если КоличествоСписанияАналог = 0 Тогда
					Проводка.КоличествоКт 	= Окр(КоличествоСписания);
				Иначе
					Проводка.КоличествоКт = Окр((КоличествоСписанияАналог-СоставляющаяПродукции.КоличествоПустографок)*КоличествоСписания/КоличествоСписанияАналог);
				КонецЕсли;
			КонецЕсли;												
			//---АК
			
			
			Проводка.НомерЖурнала	= "ТД";
			//Проводка.Организация 	= СсылкаНаОбъект.Организация;
			Проводка.Сумма 			= Проводка.КоличествоКт * ОбщегоНазначенияСервер.ПолучитьСебестоимостьЕдиницыСырья(СоставляющаяПродукции.Номенклатура,, ТекДата);
			Проводка.СторонаПроводкиДляПересчетаПоСебестоимости = "КТ";
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьДвиженияПоСебестоимостиСырьяИУпаковкиКомплектов(Движения, Знач СсылкаНаОбъект, Знач СтрокаТЧ, ТаблицаСпецификаций) Экспорт
	
	//
	НайденнаяСтрока = ТаблицаСпецификаций.Найти(СтрокаТЧ.Номенклатура, "Номенклатура");
	Если НайденнаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//
	РегНастройкаОтражения 	= РегистрыСведений.НастройкаОтраженияОперацийВУчете;
	ТекДата 				= СсылкаНаОбъект.Дата;
	ДвиженияФинансовый 		= Движения.Финансовый;
	
	//+++АК SHEP 2018.05.06 ИП-00018453
	СтруктурныеЕдиницыСторонняяПереработка = ОбщегоНазначенияПовтИсп.СторонняяПереработкаДляОрганизации(СсылкаНаОбъект.Организация);
	СкладПереработчика = Документы.РасходныйОрдерСклад.ПолучитьСкладПереработчика(СсылкаНаОбъект.Контрагент, СсылкаНаОбъект.Организация);
	//---АК SHEP 2018.05.06
	
	Спецификация = НайденнаяСтрока.Спецификация;
	СоставСпецификации = Спецификация.Состав;
	
	Для Каждого СоставляющаяПродукции Из СоставСпецификации Цикл
		
		Если СоставляющаяПродукции.Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Упаковка Тогда
			СтруктураНастроек = РегНастройкаОтражения.ПолучитьПоследнее(ТекДата, Новый Структура("ВидОперации", Перечисления.ВидыОперацийВУчете.СписаниеСебестоимостиУпаковки));
		Иначе
			СтруктураНастроек = РегНастройкаОтражения.ПолучитьПоследнее(ТекДата, Новый Структура("ВидОперации", Перечисления.ВидыОперацийВУчете.СписаниеСебестоимостиСырья));
		КонецЕсли;
		
		КоэффициентПересчета 	= СоставляющаяПродукции.ЕдиницаИзмерения.Коэффициент;
		Если ТекДата >= '20180601' Тогда 
			КоличествоПретензияКПоставщику = 
				СтрокаТЧ.Количество - СтрокаТЧ.ПоПриходнымОрдерам - СтрокаТЧ.КоличествоПретензияКСкладу - СтрокаТЧ.КоличествоПретензияКПеревозчику;
		Иначе
			КоличествоПретензияКПоставщику = 0;
		КонецЕсли;

		КоличествоСписанияИсх 	= (СтрокаТЧ.Количество - КоличествоПретензияКПоставщику) * СоставляющаяПродукции.Количество * КоэффициентПересчета;
		КоличествоСписания =0;
		
		Если СоставляющаяПродукции.КоличествоПустографок > 0 Тогда
			
			Если НайденнаяСтрока.Весовой Тогда
				Если НайденнаяСтрока.РасчетныйВесУпаковки = 0 Тогда
					КоличествоСписания = СтрокаТЧ.Количество/НайденнаяСтрока.Номенклатура.ОднаУпаковкаСодержит;
				Иначе
					КоличествоСписания = СтрокаТЧ.Количество/НайденнаяСтрока.РасчетныйВесУпаковки;
				КонецЕсли;
				КоличествоСписания=Окр(КоличествоСписания+0.5,0,РежимОкругления.Окр15как10)*СоставляющаяПродукции.Количество*КоэффициентПересчета;
				//Если НайденнаяСтрока.Квант>0 Тогда
				//	КоличествоСписания = КоличествоСписания+Окр(СтрокаТЧ.Количество/НайденнаяСтрока.Квант+0.5,0,РежимОкругления.Окр15как10);
				//КонецЕсли;
			Иначе
				КоличествоСписания=КоличествоСписанияИсх
			КонецЕсли;
			
			Проводка = ДвиженияФинансовый.Добавить();
			
			Проводка.Период = ТекДата;
			
			// Дт
			Проводка.СчетДт 							= СтрокаТЧ.СчетУчета;
			Проводка.СубконтоДт.МестаХранения  			= СсылкаНаОбъект.СтруктурнаяЕдиница;
			Проводка.СубконтоДт.Товары					= НайденнаяСтрока.Составляющая;
			Проводка.СубконтоДт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров41;//СтруктураНастроек.СтатьяДвиженияТоваров;
			
			// Кт
			Если СоставляющаяПродукции.Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Упаковка Тогда
				Проводка.СчетКт 							= ПланыСчетов.Финансовый.МатералыДляВыпуска;
				Проводка.СубконтоКт.Материалы	  			= СоставляющаяПродукции.Пустографка;
				//+++АК SHEP 2018.05.06 ИП-00018453
				//Проводка.СубконтоКт.Склады					= Документы.РасходныйОрдерСклад.ПолучитьСкладПереработчика(СсылкаНаОбъект.Контрагент);
				Проводка.СубконтоКт.Склады					= СкладПереработчика;
				//---АК SHEP 2018.05.06
				Проводка.СубконтоКт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
				Проводка.Содержание							= "Себестоимость упаковки";
			Иначе
				Проводка.СчетКт 							= СтрокаТЧ.СчетУчета;
				//+++АК SHEP 2018.05.06 ИП-00018453
				//Проводка.СубконтоКт.МестаХранения  			= Справочники.СтруктурныеЕдиницы.СторонняяПереработка;//СсылкаНаОбъект.СтруктурнаяЕдиница;
				Проводка.СубконтоКт.МестаХранения  			= СтруктурныеЕдиницыСторонняяПереработка;
				//---АК SHEP 2018.05.06
				Проводка.СубконтоКт.Товары					= СоставляющаяПродукции.Пустографка;
				Проводка.СубконтоКт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
				Проводка.Содержание							= "Себестоимость сырья";
			КонецЕсли;												

			Проводка.КоличествоКт 	= Мин(КоличествоСписания,СоставляющаяПродукции.КоличествоПустографок);
			
			Проводка.НомерЖурнала	= "ТД";
			//Проводка.Организация 	= СсылкаНаОбъект.Организация;
			Проводка.Сумма 			= Проводка.КоличествоКт * ОбщегоНазначенияСервер.ПолучитьСебестоимостьЕдиницыСырья(СоставляющаяПродукции.Пустографка,, ТекДата);
			Проводка.СторонаПроводкиДляПересчетаПоСебестоимости = "КТ";
			
		КонецЕсли;
		
		Если КоличествоСписания>0 и КоличествоСписания <= СоставляющаяПродукции.КоличествоПустографок Тогда
			Продолжить
		КонецЕсли;
		
		Если КоличествоСписанияИсх=0 Тогда
			Продолжить
		КонецЕсли;
		
		Если КоличествоСписания=0 Тогда
			КоличествоСписания=КоличествоСписанияИсх
		КонецЕсли;
		
		Проводка = ДвиженияФинансовый.Добавить();
		
		Проводка.Период = ТекДата;
		
		// Дт
		Проводка.СчетДт 							= СтрокаТЧ.СчетУчета;
		Проводка.СубконтоДт.МестаХранения  			= СсылкаНаОбъект.СтруктурнаяЕдиница;
		Проводка.СубконтоДт.Товары					= НайденнаяСтрока.Составляющая;
		Проводка.СубконтоДт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров41;//СтруктураНастроек.СтатьяДвиженияТоваров;
		
		// Кт
		Если СоставляющаяПродукции.Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Упаковка Тогда
			Проводка.СчетКт 							= ПланыСчетов.Финансовый.МатералыДляВыпуска;
			Проводка.СубконтоКт.Материалы	  			= СоставляющаяПродукции.Номенклатура;
			//+++АК SHEP 2018.05.06 ИП-00018453
			//Проводка.СубконтоКт.Склады					= Документы.РасходныйОрдерСклад.ПолучитьСкладПереработчика(СсылкаНаОбъект.Контрагент);
			Проводка.СубконтоКт.Склады					= СкладПереработчика;
			//---АК SHEP 2018.05.06
			Проводка.СубконтоКт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
			Проводка.Содержание							= "Себестоимость упаковки";
		Иначе
			Проводка.СчетКт 							= СтрокаТЧ.СчетУчета;
			//+++АК SHEP 2018.05.06 ИП-00018453
			//Проводка.СубконтоКт.МестаХранения  			= Справочники.СтруктурныеЕдиницы.СторонняяПереработка;//СсылкаНаОбъект.СтруктурнаяЕдиница;
			Проводка.СубконтоКт.МестаХранения  			= СтруктурныеЕдиницыСторонняяПереработка;
			//---АК SHEP 2018.05.06
			Проводка.СубконтоКт.Товары					= СоставляющаяПродукции.Номенклатура;
			Проводка.СубконтоКт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
			Проводка.Содержание							= "Себестоимость сырья";
		КонецЕсли;												

		Проводка.КоличествоКт 	= Окр((КоличествоСписания-СоставляющаяПродукции.КоличествоПустографок)*КоличествоСписанияИсх/КоличествоСписания);
		
		Проводка.НомерЖурнала	= "ТД";
		//Проводка.Организация 	= СсылкаНаОбъект.Организация;
		Проводка.Сумма 			= Проводка.КоличествоКт * ОбщегоНазначенияСервер.ПолучитьСебестоимостьЕдиницыСырья(СоставляющаяПродукции.Номенклатура,, ТекДата);
		Проводка.СторонаПроводкиДляПересчетаПоСебестоимости = "КТ";
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура сторнирования наценки от продажи переработчику
//
Процедура ДобавитьДвиженияСторноНаценкиНаСебестоимостьСырьяИУпаковки(Движения, Знач СсылкаНаОбъект, Знач СтрокаТЧ, ТаблицаТоваровДляСторнирования) Экспорт
	
	//
	НайденнаяСтрока = ТаблицаТоваровДляСторнирования.Найти(СтрокаТЧ.Номенклатура, "Номенклатура");
	Если НайденнаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//
	ТекДата = СсылкаНаОбъект.Дата;
	ЦФО 	= ОбщиеПроцедуры.ПолучитьЦФОПоСтруктурнойЕдинице(СсылкаНаОбъект.СтруктурнаяЕдиница, ТекДата);
	
	СтруктураНастроекДт = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.СписаниеСебестоимостиСырья, ТекДата);
	СтруктураНастроекКт = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.Реализация				, ТекДата);
	
	Проводка = Движения.Финансовый.Добавить();
		
	Проводка.Период 		= ТекДата;	
	Проводка.Содержание		= "Сторно наценки на готовую продукцию";
	Проводка.НомерЖурнала	= "ТД";
	Проводка.Сумма 			= - СтрокаТЧ.Количество * НайденнаяСтрока.НаценкаНаЕдиницуПродукции;
	Проводка.СторонаПроводкиДляПересчетаПоСебестоимости = "";
	
	// ДТ 41
	Проводка.СчетДт 							= СтрокаТЧ.СчетУчета;
	//+++АК SHEP 2018.05.06 ИП-00018453
	//Проводка.СубконтоДт.МестаХранения  			= Справочники.СтруктурныеЕдиницы.СторонняяПереработка;
	Проводка.СубконтоДт.МестаХранения  			= ОбщегоНазначенияПовтИсп.СторонняяПереработкаДляОрганизации(СсылкаНаОбъект.Организация);
	//---АК SHEP 2018.05.06
	Проводка.СубконтоДт.Товары					= СтрокаТЧ.Номенклатура;
	Проводка.СубконтоДт.СтатьиТовародвижения 	= СтруктураНастроекДт.СтатьяДвиженияТоваров;
	
	// КТ 44
	Проводка.СчетКт 							= СтруктураНастроекКт.Счет;
	Проводка.СубконтоКт.ТорговыеТочки  			= СтруктураНастроекКт.СтруктурнаяЕдиница;
	Проводка.СубконтоКт.СтатьиДоходовРасходов	= СтруктураНастроекКт.СтатьяДоходовРасходов;
	Проводка.СубконтоКт.ЦФО						=  ?(ЗначениеЗаполнено(СтруктураНастроекКт.ЦФО), СтруктураНастроекКт.ЦФО, ЦФО);
		
КонецПроцедуры

Функция РасчитатьПределыРедактированияСуммыИНДСВСтрокеТЧ(Знач СтрокаТЧ, ВариантРасчетаНДС, Контрагент, Дата) Экспорт
	
	//Отбор = Новый Структура;
	//Отбор.Вставить("Номенклатура"		, СтрокаТЧ.Номенклатура);
	//Отбор.Вставить("ЕдиницаИзмерения"	, СтрокаТЧ.ЕдиницаИзмерения);
	//Отбор.Вставить("Поставщик"			, Контрагент);
	//
	//СтруктураЦены = РегистрыСведений.ЦеныПоставщиков.ПолучитьПоследнее(Дата, Отбор);
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза"		, Дата);
	Запрос.УстановитьПараметр("Поставщик"		, Контрагент);
	Запрос.УстановитьПараметр("Номенклатура"	, СтрокаТЧ.Номенклатура);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЦеныПоставщиковСрезПоследних.Цена,
	|	0 КАК ЦенаБезНДС,
	|	ЦеныПоставщиковСрезПоследних.Допуск
	|ИЗ
	|	РегистрСведений.ЦеныПоставщиков.СрезПоследних(
	|			&ДатаСреза,
	|			Номенклатура = &Номенклатура
	|				И Поставщик = &Поставщик) КАК ЦеныПоставщиковСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЦеныПоставщиковСрезПоследних.Период УБЫВ";
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		СтруктураЦены = РезультатЗапроса.Выбрать();
		СтруктураЦены.Следующий();
	Иначе
		СтруктураЦены = Новый Структура("Цена, ЦенаБезНДС, Допуск", 0, 0, 0);
	КонецЕсли;
	
	
	ПроцентОтклонения = СтруктураЦены.Допуск;
	
	Если ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле Тогда
		Цена = СтруктураЦены.Цена;
	Иначе		
		Если СтруктураЦены.ЦенаБезНДС = 0 Тогда
			ЦенаБезНДС = (СтруктураЦены.Цена / (100 + УчетНДС.ПолучитьСтавкуНДС(СтрокаТЧ.СтавкаНДС))) * 100;
			Цена = ЦенаБезНДС;
		Иначе
			Цена = СтруктураЦены.ЦенаБезНДС;
		КонецЕсли;
	КонецЕсли;
	
	СтруктураПределов = Новый Структура;
	СтруктураПределов.Вставить("СуммаМаксимум"	, ?(ПроцентОтклонения > 0, Цена * СтрокаТЧ.Количество * (1 + ПроцентОтклонения), (Цена + 0.01) * СтрокаТЧ.Количество));
	СтруктураПределов.Вставить("СуммаМинимум"	, ?(ПроцентОтклонения > 0, Цена * СтрокаТЧ.Количество * (1 - ПроцентОтклонения), (Цена - 0.01) * СтрокаТЧ.Количество));
	
	// НДС
	УчитыватьНДС 		= Истина;
	СуммаВключаетНДС 	= (ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле);
	
	СуммаНДС = УчетНДС.РассчитатьСуммуНДС(Цена * СтрокаТЧ.Количество,
										  УчитыватьНДС, СуммаВключаетНДС,
										  УчетНДС.ПолучитьСтавкуНДС(СтрокаТЧ.СтавкаНДС));
	
	СтруктураПределов.Вставить("СуммаНДСМаксимум"	, ?(ПроцентОтклонения > 0, СуммаНДС * (1 + ПроцентОтклонения), СуммаНДС + СтрокаТЧ.Количество * 0.01));
	СтруктураПределов.Вставить("СуммаНДСМинимум"	, ?(ПроцентОтклонения > 0, СуммаНДС * (1 - ПроцентОтклонения), СуммаНДС - СтрокаТЧ.Количество * 0.01));
	
	Возврат СтруктураПределов;
	
КонецФункции

Функция РасчитатьПределыРедактированияСуммыИНДСВСтрокеТЧПоОборудованию(Знач СтрокаТЧ, ВариантРасчетаНДС, Контрагент, Дата) Экспорт
	
	//Отбор = Новый Структура;
	//Отбор.Вставить("Номенклатура"	, СтрокаТЧ.Номенклатура);	
	//Отбор.Вставить("Поставщик"		, Контрагент);
	//
	//СтруктураЦены = РегистрыСведений.ЦеныПоставщиков.ПолучитьПоследнее(Дата, Отбор);
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза"	, Дата);
	Запрос.УстановитьПараметр("Поставщик"	, Контрагент);
	Запрос.УстановитьПараметр("Номенклатура", СтрокаТЧ.Номенклатура);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЦеныПоставщиковСрезПоследних.Цена,
	|	0 КАК ЦенаБезНДС,
	|	ЦеныПоставщиковСрезПоследних.Допуск
	|ИЗ
	|	РегистрСведений.ЦеныПоставщиков.СрезПоследних(
	|			&ДатаСреза,
	|			Номенклатура = &Номенклатура
	|				И Поставщик = &Поставщик) КАК ЦеныПоставщиковСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЦеныПоставщиковСрезПоследних.Период УБЫВ";
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		СтруктураЦены = РезультатЗапроса.Выбрать();
		СтруктураЦены.Следующий();
	Иначе
		СтруктураЦены = Новый Структура("Цена, ЦенаБезНДС, Допуск", 0, 0, 0);
	КонецЕсли;
	
	
	ПроцентОтклонения = СтруктураЦены.Допуск;
	
	Если ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле Тогда
		Цена = СтруктураЦены.Цена;
	Иначе		
		Если СтруктураЦены.ЦенаБезНДС = 0 Тогда
			ЦенаБезНДС = (СтруктураЦены.Цена / (100 + УчетНДС.ПолучитьСтавкуНДС(СтрокаТЧ.СтавкаНДС))) * 100;
			Цена = ЦенаБезНДС;
		Иначе
			Цена = СтруктураЦены.ЦенаБезНДС;
		КонецЕсли;
	КонецЕсли;
	
	СтруктураПределов = Новый Структура;
	СтруктураПределов.Вставить("СуммаМаксимум"	, ?(ПроцентОтклонения > 0, Цена * (1 + ПроцентОтклонения), (Цена + 0.01)));
	СтруктураПределов.Вставить("СуммаМинимум"	, ?(ПроцентОтклонения > 0, Цена * (1 - ПроцентОтклонения), (Цена - 0.01)));
	
	// НДС
	УчитыватьНДС 		= Истина;
	СуммаВключаетНДС 	= (ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле);
	
	СуммаНДС = УчетНДС.РассчитатьСуммуНДС(Цена,
										  УчитыватьНДС, СуммаВключаетНДС,
										  УчетНДС.ПолучитьСтавкуНДС(СтрокаТЧ.СтавкаНДС));
	
	СтруктураПределов.Вставить("СуммаНДСМаксимум"	, ?(ПроцентОтклонения > 0, СуммаНДС * (1 + ПроцентОтклонения), СуммаНДС + 0.01));
	СтруктураПределов.Вставить("СуммаНДСМинимум"	, ?(ПроцентОтклонения > 0, СуммаНДС * (1 - ПроцентОтклонения), СуммаНДС - 0.01));
	
	Возврат СтруктураПределов;
	
КонецФункции


Функция НайтиПоступлениеПоПриходнику(ПриходныйОрдер) Экспорт
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПриходныйОрдер", ПриходныйОрдер);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ПоступлениеТоваровУслугРасходныеОрдера.Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ПриходныеОрдера КАК ПоступлениеТоваровУслугРасходныеОрдера
	|ГДЕ
	|	ПоступлениеТоваровУслугРасходныеОрдера.ПриходныйОрдер = &ПриходныйОрдер
	|	И НЕ ПоступлениеТоваровУслугРасходныеОрдера.Ссылка.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;	
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

//+++АК SHEP 2018.01.26 ИП-00017365.02
Функция ДокументИспользуетсяВТранспортныхДокументах(ДокСсылка, ВыводитьСообщения = Ложь) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПоступлениеТоваровУслуг.Ссылка
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.ТранспортныеДокументы КАК ПоступлениеТоваровУслугТранспортныеДокументы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
		|		ПО ПоступлениеТоваровУслугТранспортныеДокументы.Ссылка = ПоступлениеТоваровУслуг.Ссылка
		|ГДЕ
		|	ПоступлениеТоваровУслуг.Проведен
		|	И ПоступлениеТоваровУслугТранспортныеДокументы.Документ = &ДокСсылка");
	Запрос.УстановитьПараметр("ДокСсылка", ДокСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	ДокументИспользуется = НЕ РезультатЗапроса.Пустой();
	
	Если НЕ ДокументИспользуется ИЛИ НЕ ВыводитьСообщения Тогда Возврат ДокументИспользуется; КонецЕсли;
	
	Сообщить("Для редактирования документа " + Строка(ДокСсылка) + ", нужно сделать непроведёнными следующие документы:", СтатусСообщения.Важное);
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		Сообщить("" + Символы.Таб + Строка(ВыборкаЗапроса.Ссылка));
	КонецЦикла;
	
	Возврат ДокументИспользуется;
	
КонецФункции

//+++АК ILIK 2018.10.11 ИП-00019835
Процедура ЗаписатьКППКонтрагента(СсылкаНаДокумент, КППКонтрагента) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ПоступлениеТоваровУслуг.Контрагент.КПП, """") <> &КПП
	               |		И &КПП <> """" КАК Добавить,
	               |	НЕ ЗначенияСвойствОбъектов.Значение ЕСТЬ NULL КАК Добавлено,
	               |	ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, """") = &КПП КАК ЗначенияРавны
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |		ПО ПоступлениеТоваровУслуг.Ссылка = ЗначенияСвойствОбъектов.Объект
	               |			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.КППКонтрагента))
	               |ГДЕ
	               |	ПоступлениеТоваровУслуг.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаДокумент);
	Запрос.УстановитьПараметр("КПП", КППКонтрагента);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.Добавить Тогда
			Если Выборка.ЗначенияРавны Тогда
				Возврат;
			КонецЕсли;
			
			НаборЗаписей = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Объект.Установить(СсылкаНаДокумент);
			НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.КППКонтрагента);
			
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Объект = СсылкаНаДокумент;
			НоваяЗапись.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.КППКонтрагента;
			НоваяЗапись.Значение = КППКонтрагента;
			
			НаборЗаписей.Записать();
		ИначеЕсли Выборка.Добавлено Тогда  
			НаборЗаписей = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Объект.Установить(СсылкаНаДокумент);
			НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.КППКонтрагента);
			НаборЗаписей.Записать();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
