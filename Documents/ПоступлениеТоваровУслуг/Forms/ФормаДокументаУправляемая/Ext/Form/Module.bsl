
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 08.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Поступление товаров услуг");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(Объект.Ссылка.ПолучитьОбъект(), ЭтаФорма);
	КонецЕсли;
	
	Основание = Параметры.Основание;
	//АК БЕЛН 28.03.2016++
	 ТекСтатус=Объект.СтатусПолученныхДокументов;
	 Если ЗначениеЗаполнено(Объект.ДокументОснование) и ТипЗнч(Объект.ДокументОснование)=Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств") Тогда
	      ТекЗаявка=Объект.ДокументОснование;
	 КонецЕсли; 
	//АК БЕЛН 28.03.2016--
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.Ссылка.Пустая() И ЗначениеЗаполнено(Основание) И ТипЗнч(Основание) = Тип("ДокументСсылка.ПриходныйОрдерСклад") Тогда
		Поступление = НайтиПоступлениеНаСервере();
		Если Поступление <> Неопределено Тогда
			
			П = Новый Структура("Ключ", Поступление);
			ОткрытьФорму("Документ.ПоступлениеТоваровУслуг.Форма.ФормаДокументаУправляемая", П);
			Отказ = Истина;
			
		КонецЕсли;                                
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
	//Проставим ответственного в новом документе
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Ответственный = ПолучитьТекущегоПользователя();
	КонецЕсли;
	//+++AK bara ИП-00015442.000.00000001
	Если Объект.НеВыгружатьВБУ Тогда
	   Элементы.АК_НеВыгружатьВБУПоясниение.Видимость = Истина;			
	КонецЕсли;
	//---AK bara ИП-00015442.000.00000001
	//+++АК sils 08.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
	//---АК
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекущегоПользователя()
	
	Возврат ПараметрыСеанса.ТекущийПользователь;
	
КонецФункции	

&НаСервере
Функция НайтиПоступлениеНаСервере()
	
	Возврат Документы.ПоступлениеТоваровУслуг.НайтиПоступлениеПоПриходнику(Основание);
	
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	//Для оборудования пока это не контролируем
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.Оборудование") Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение И Объект.ПриходныеОрдера.Количество() > 0 Тогда
		
		Если ПолучтьОрдераСНедопустимымВидомОперации() Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Невозможно провести документ! Имеются приходные ордера с видом операции отличным от <<Поступление от поставщика>>", Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
//АК БЕЛН 28.03.2016++
	//Если Объект.ДокументыПолучены и Не ЗначениеЗаполнено(Объект.СтатусПолученныхДокументов) Тогда
	//	ОбщегоНазначения.СообщитьОбОшибке("Заполните статус документов", Отказ);
	//КонецЕсли;
	ПередЗаписьюСервер(Отказ);
//АК БЕЛН 28.03.2016--
КонецПроцедуры

//АК БЕЛН 28.03.2016++
&НаСервере
Процедура ПередЗаписьюСервер(Отказ)
	УстановитьПривилегированныйРежим(Истина);
	Если ТекЗаявка<>Объект.ДокументОснование И ЗначениеЗаполнено(ТекЗаявка) И Не Отказ  Тогда
		//ОбЗавка=ТекЗаявка.ПолучитьОбъект();
		//ОбЗавка.СтатусПолученныхДокументов=Перечисления.СтатусыПолученныхДокументов.ПустаяСсылка();
		//ОбЗавка.ВсеДокументыВНаличии=Ложь;
		//ОбЗавка.ОбменДанными.Загрузка = Истина;
		//ОбЗавка.НеПроверятьДатуЗапретаРедактирования = Истина;
		//ОбЗавка.Записать(РежимЗаписиДокумента.Запись);
		//Сообщить("По заявке "+ТекЗаявка+" не обнаружено поступления. Признак о получении документов будет снят");
		ТекЗаявка=Документы.ЗаявкаНаРасходованиеСредств.ПустаяСсылка();
		Если ЗначениеЗаполнено(Объект.ДокументОснование) и ТипЗнч(Объект.ДокументОснование)=Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств") Тогда
			ТекЗаявка=Объект.ДокументОснование;
		КонецЕсли; 
	КонецЕсли;
	
	Если ТипЗнч(Объект.ДокументОснование)=Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств") И ЗначениеЗаполнено(Объект.ДокументОснование) И Не Отказ Тогда
		Если Не Объект.ДокументОснование.СтатусПолученныхДокументов=Объект.СтатусПолученныхДокументов Тогда
			Об=РеквизитФормыВЗначение("Объект");
			ОбПоступ=Об.ДокументОснование.ПолучитьОбъект();          
			ОбПоступ.СтатусПолученныхДокументов=Объект.СтатусПолученныхДокументов;
			ОбПоступ.ВсеДокументыВНаличии=ЗначениеЗаполнено(ОбПоступ.СтатусПолученныхДокументов);
			ОбПоступ.ОбменДанными.Загрузка = Истина;
			ОбПоступ.НеПроверятьДатуЗапретаРедактирования = Истина;
			ОбПоступ.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры
//АК БЕЛН 28.03.2016--

&НаСервере
Функция ПолучтьОрдераСНедопустимымВидомОперации()
	
	Для Каждого Строка Из Объект.ПриходныеОрдера Цикл
		
		Если Строка.ПриходныйОрдер.ВидОперации <> Перечисления.ВидыОперацийПриходСкладскойУчет.ОтПоставщика Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	
	ЭтоОборудование = (Объект.ВидОперации=ПредопределенноеЗначение("Перечисление.ВидыОперацийПоступлениеТоваровУслуг.Оборудование"));
	
	//Видимость страниц
	Элементы.СтраницаОборудование.Видимость = ЭтоОборудование;
	Элементы.СтраницаТовары.Видимость		= Не ЭтоОборудование;
	
	//Обязательность заполнения
	Элементы.СчетУчетаРасчетовСКонтрагентом.АвтоОтметкаНезаполненного	= ЭтоОборудование;
	Элементы.СтатьяДДС.АвтоОтметкаНезаполненного						= ЭтоОборудование;
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьСубконтоВСтрокеТЧ(СтрокаТЧ, ТекДанные, Индекс, Префикс = "")
	
	мВидыСубконто 	= ТекДанные["СчетЗатрат" + Префикс].ВидыСубконто;
	ТекВидыСубконто = СтрокаТЧ["СчетЗатрат" + Префикс].ВидыСубконто;
	Если мВидыСубконто.Количество() > (Индекс - 1)
			И ТекВидыСубконто.Количество() > (Индекс - 1)
			И ТекВидыСубконто[Индекс - 1].ВидСубконто.ТипЗначения = мВидыСубконто[Индекс - 1].ВидСубконто.ТипЗначения Тогда
		СтрокаТЧ["Субконто" + Префикс + Строка(Индекс)] = ТекДанные["Субконто" + Префикс + Строка(Индекс)];
	Иначе
		СтрокаТЧ["Субконто" + Префикс + Строка(Индекс)] = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиДублироватьНаВсеСтроки(Команда)
	
	ТекДанные = Элементы.Услуги.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекКолонка = Элементы.Услуги.ТекущаяКолонка;
	Если ТекКолонка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ИмяКолонки = ТекКолонка.Имя;
	Если ИмяКолонки = "НомерСтроки" Тогда
		Возврат;
	КонецЕсли;
	ТекЗначение = ТекДанные[ИмяКолонки];
	
	Для Каждого СтрокаТЧ Из Объект.Услуги Цикл
		Если СтрокаТЧ[ИмяКолонки] = ТекЗначение Тогда
			Продолжить;
		КонецЕсли;
		Если ИмяКолонки = "Номенклатура" Тогда
			СтрокаТЧ[ИмяКолонки] = ТекЗначение;
		ИначеЕсли ИмяКолонки = "Количество"
				ИЛИ ИмяКолонки = "Цена"
				ИЛИ ИмяКолонки = "СтавкаНДС" Тогда
			СтрокаТЧ[ИмяКолонки] = ТекЗначение;
			//ПосчитатьСуммуСтрокиТЧ(СтрокаТЧ);
		ИначеЕсли ИмяКолонки = "Сумма" Тогда
			СтрокаТЧ[ИмяКолонки] = ТекЗначение;
			//РассчитатьСуммуНДСТабЧасти(СтрокаТЧ, ЭтотОбъект.ВариантРасчетаНДС);
		ИначеЕсли ИмяКолонки = "СчетЗатрат" Тогда
			СтрокаТЧ[ИмяКолонки] = ТекЗначение;
			СтрокаТЧ.Субконто1 = ТекДанные.Субконто1;
			СтрокаТЧ.Субконто2 = ТекДанные.Субконто2;
			СтрокаТЧ.Субконто3 = ТекДанные.Субконто3;
		ИначеЕсли ИмяКолонки = "Субконто1" Тогда
			ЗаполнитьСубконтоВСтрокеТЧ(СтрокаТЧ, ТекДанные, 1);
		ИначеЕсли ИмяКолонки = "Субконто2" Тогда
			ЗаполнитьСубконтоВСтрокеТЧ(СтрокаТЧ, ТекДанные, 2);
		ИначеЕсли ИмяКолонки = "Субконто3" Тогда
			ЗаполнитьСубконтоВСтрокеТЧ(СтрокаТЧ, ТекДанные, 3);
		ИначеЕсли ИмяКолонки = "СчетЗатратБУ" Тогда
			СтрокаТЧ[ИмяКолонки] = ТекЗначение;
			СтрокаТЧ.СубконтоБУ1 = ТекДанные.СубконтоБУ1;
			СтрокаТЧ.СубконтоБУ2 = ТекДанные.СубконтоБУ2;
			СтрокаТЧ.СубконтоБУ3 = ТекДанные.СубконтоБУ3;
		ИначеЕсли ИмяКолонки = "СубконтоБУ1" Тогда
			ЗаполнитьСубконтоВСтрокеТЧ(СтрокаТЧ, ТекДанные, 1, "БУ");
		ИначеЕсли ИмяКолонки = "СубконтоБУ2" Тогда
			ЗаполнитьСубконтоВСтрокеТЧ(СтрокаТЧ, ТекДанные, 2, "БУ");
		ИначеЕсли ИмяКолонки = "СубконтоБУ3" Тогда
			ЗаполнитьСубконтоВСтрокеТЧ(СтрокаТЧ, ТекДанные, 3, "БУ");
		ИначеЕсли ИмяКолонки = "СчетЗатратНУ" Тогда
			СтрокаТЧ[ИмяКолонки] = ТекЗначение;
			СтрокаТЧ.СубконтоНУ1 = ТекДанные.СубконтоНУ1;
			СтрокаТЧ.СубконтоНУ2 = ТекДанные.СубконтоНУ2;
			СтрокаТЧ.СубконтоНУ3 = ТекДанные.СубконтоНУ3;
		ИначеЕсли ИмяКолонки = "СубконтоНУ1" Тогда
			ЗаполнитьСубконтоВСтрокеТЧ(СтрокаТЧ, ТекДанные, 1, "НУ");
		ИначеЕсли ИмяКолонки = "СубконтоНУ2" Тогда
			ЗаполнитьСубконтоВСтрокеТЧ(СтрокаТЧ, ТекДанные, 2, "НУ");
		ИначеЕсли ИмяКолонки = "СубконтоНУ3" Тогда
			ЗаполнитьСубконтоВСтрокеТЧ(СтрокаТЧ, ТекДанные, 3, "НУ");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//АК БЕЛН 28.03.2016++
&НаКлиенте
Процедура СтатусПолученныхДокументовПриИзменении(Элемент)
	Если  ЗначениеЗаполнено(ТекСтатус) И Не ЗначениеЗаполнено(Объект.СтатусПолученныхДокументов) Тогда
	    Сообщить("Нельзя очистить статус прикрепленных документов, если он был заполнен");
		Объект.СтатусПолученныхДокументов=ТекСтатус;
	Иначе
		ТекСтатус=Объект.СтатусПолученныхДокументов;
		Объект.ДокументыПолучены=ЗначениеЗаполнено(Объект.СтатусПолученныхДокументов);
	КонецЕсли;
	
КонецПроцедуры
//АК БЕЛН 28.03.2016

//+++AK bara ИП-00015442.000.00000001
&НаКлиенте
Процедура НеВыгружатьВБУПриИзменении(Элемент)
	Если Объект.НеВыгружатьВБУ Тогда
		Элементы.АК_НеВыгружатьВБУПоясниение.Видимость = Истина;		
	Иначе 
		Элементы.АК_НеВыгружатьВБУПоясниение.Видимость = Ложь;	
	КонецЕсли;
КонецПроцедуры
//---AK bara ИП-00015442.000.00000001

//+++ АК bara  ИП-00015916.000.00000001
&НаКлиенте
Процедура ДокументОснованиеПриИзменении(Элемент)
	
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда 
			Режим = РежимДиалогаВопрос.ДаНет;
			Текст = "Перезаполнить документ по выбранному приходному ордеру?";
			Ответ = Вопрос(Текст, Режим, 0);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;

	
	ДокументОснованиеПриИзмененииСервер();
	ЭтаФорма.ОбновитьОтображениеДанных();
	
КонецПроцедуры

&НаСервере
Процедура ДокументОснованиеПриИзмененииСервер()
	
	ЭОбъект = ДанныеФормыВЗначение(Объект,Тип("ДокументОбъект.ПоступлениеТоваровУслуг"));
	
	Если ТипЗнч(ЭОбъект.ДокументОснование) = Тип("ДокументСсылка.ПриходныйОрдерСклад") Тогда 
		ЭОбъект.Товары.Очистить();
		ЭОбъект.Услуги.Очистить();
		ЭОбъект.Оборудование.Очистить();	
		ЭОбъект.ПриходныеОрдера.Очистить();		
		ЭОбъект.ДокументыОснования.Очистить();		
		ЭОбъект.ОбработкаЗаполненияЭкспорт(ЭОбъект.ДокументОснование);
		ЗначениеВДанныеФормы(ЭОбъект,Объект);		
	КонецЕсли;
	
КонецПроцедуры
//--- АК bara  ИП-00015916.000.00000001

//+++АК LAGP 2018.06.20 ИП-00018875 Рассылка оповещения факторинговой компании
&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ФакторинговаяКомпанияДоговора = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.ДоговорКонтрагента, "ФакторинговаяКомпания");
		Если ЗначениеЗаполнено(ФакторинговаяКомпанияДоговора) Тогда
			//+++АК ILIK 2018.09.21 ИП-00019833
			//ИННФакторинговойКомпании = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ФакторинговаяКомпанияДоговора, "ИНН");
			//Если ИННФакторинговойКомпании = "7725314818" Тогда //ОТКРЫТИЕ ФАКТОРИНГ ООО
			//---АК ILIK 
				ОтправитьПисьмоПоПочте(ФакторинговаяКомпанияДоговора);
			//+++АК ILIK 2018.09.21 ИП-00019833
			//КонецЕсли;
			//---АК ILIK
		КонецЕсли;
	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	//+++АК LAGP 2018.06.20 ИП-00018875 Рассылка оповещения факторинговой компании
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) И ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.ДоговорКонтрагента, "РасчетыЧерезФК") И ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда	 
		Оповещение = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтаФорма);
		ПоказатьВопрос(Оповещение, "В договоре использован признак ""Расчёты через факторинговую компанию""!" + Символы.ПС + "Желате отправить письмо-уведомление факторинговой компании?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет, "Уведомить факторинговую команию?");	
	КонецЕсли;	
	//---АК LAGP
		
КонецПроцедуры	

//+++АК LAGP 2018.06.20 ИП-00018875 Рассылка оповещения факторинговой компании
&НаСервере
Процедура ОтправитьПисьмоПоПочте(ФакторинговаяКомпанияДоговора)  	
	
	СтруктураНовогоПисьма = Новый Структура;
		
	Кому = Новый Массив;
	
	ЗапросАдресовЭП = Новый Запрос;
	ЗапросАдресовЭП.Текст =                                                                                   
	"ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление,
	|	КонтактнаяИнформация.Объект
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &ФакторинговаяКомпанияДоговора
	|	И КонтактнаяИнформация.Вид = &ВидКонтактнойИнформации";
	
	СтруктураЗапроса = Новый Структура;
	СтруктураЗапроса.Вставить("Текст"							, ЗапросАдресовЭП.Текст);
	СтруктураЗапроса.Вставить("ФакторинговаяКомпанияДоговора"	, ФакторинговаяКомпанияДоговора);
	СтруктураЗапроса.Вставить("ВидКонтактнойИнформации"			, Справочники.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыКонтрагентаДляОбменаДокументами);
		
	РезультатЗапросаПолучателейРассылки = ПолныеПрава.ВыполнитьЗапрос(СтруктураЗапроса);
		
	ВыборкаДетальныеЗаписиЭП = РезультатЗапросаПолучателейРассылки.Выбрать();
	Пока ВыборкаДетальныеЗаписиЭП.Следующий() Цикл
		Если ЗначениеЗаполнено(СокрЛП(ВыборкаДетальныеЗаписиЭП.Представление)) Тогда
			Кому.Добавить(ВыборкаДетальныеЗаписиЭП.Представление);			
		КонецЕсли; 
	КонецЦикла;
		
	СтруктураНовогоПисьма.Вставить("Кому", Кому);
			
	СтрокаПредставления = "Оповещение о фактическом поступлении товара от контрагента " + Объект.Контрагент;
	СтрокаПриходныхОрдеров = "";
	Если Объект.ПриходныеОрдера.Количество() > 0 Тогда
		СтрокаПриходныхОрдеров = "Склад принял документами: " + Символы.ПС;	
	КонецЕсли;	
	Для каждого Ордер Из Объект.ПриходныеОрдера Цикл
		СтрокаПриходныхОрдеров = СтрокаПриходныхОрдеров + Ордер.ПриходныйОрдер + Символы.ПС;	
	КонецЦикла;	
	СтруктураНовогоПисьма.Вставить("Тема",	СтрокаПредставления);
	СтруктураНовогоПисьма.Вставить("Тело", "Внимание, проведено " + Объект.Ссылка + Символы.ПС + "Сумма документа: " + Объект.СуммаДокумента + Символы.ПС + СтрокаПриходныхОрдеров);
	
	УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоКоду("000000001");
	
	СпАдресов = Новый СписокЗначений;
	Для каждого ЭлСп Из СтруктураНовогоПисьма.Кому Цикл
		МассивАдресов = Справочники.Контрагенты.РазложитьСтрокуВМассивПодстрок(ЭлСп, ";");	
		Для каждого Эл Из МассивАдресов Цикл
			Если ЗначениеЗаполнено(Эл) Тогда
				СпАдресов.Добавить(Сокрлп(Эл));
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла;
	
	Почта = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Письмо = Новый ИнтернетПочтовоеСообщение;
	
	Почта.Подключиться(Профиль);
	Письмо.Тема = СтруктураНовогоПисьма.Тема;
	Письмо.ИмяОтправителя 	= "" + УчетнаяЗапись + "";
	Письмо.ИмяОтправителя  	= "" + СокрЛП(УчетнаяЗапись) + "";
	Письмо.Отправитель     	= "" + СокрЛП(УчетнаяЗапись) + "";
	
	ТабДок=СтруктураНовогоПисьма.Тело;
	
	ТекстСообщения = Письмо.Тексты.Добавить();
	ТекстСообщения.Текст     = ТабДок;	
	ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
 	
	Для каждого Адрес Из СпАдресов Цикл
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = Адрес.Значение;
	КонецЦикла;
	Почта.Послать(Письмо);
	Почта.Отключиться();
		
КонецПроцедуры
