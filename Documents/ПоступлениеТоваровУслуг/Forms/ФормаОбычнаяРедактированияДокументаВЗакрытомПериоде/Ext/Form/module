//+++АК Susk (Суслин К.В.) 2018.02.06 ИП-00017676
Перем ЗакрытПериодПоНДС;
Перем мКППКонтрагента;
//---АК Susk (Суслин К.В.) 

Процедура ОсновныеДействияФормыЗаписать(Кнопка)
	
	//+++АК Susk (Суслин К.В.) 2018.11.20 ИП-00020176
	Отказ = ПроизвестиПроверкиПередЗаписьюДанных();
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	//---АК Susk (Суслин К.В.) 
	
	//+++АК Susk (Суслин К.В.) 2018.02.06 ИП-00017676	
	ЗаписыватьВРегистрИзмененияПоСчетФактурам = Ложь;
	Если НЕ ЗакрытПериодПоНДС Тогда
		ЗаписыватьВРегистрИзмененияПоСчетФактурам = ОпределитьПризнакЗаписиВРегистрИзмененийПоСчФ();
	КонецЕсли;
	//---АК Susk (Суслин К.В.)
	
	ЭтотОбъект.НеПроверятьДатуЗапретаРедактирования = Истина;
	ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
	
	Если ЭтотОбъект.Проведен Тогда	
		ЭтотОбъект.Движения.Финансовый.Прочитать();
		ЭтотОбъект.ВыполнитьДвиженияПоРасчетамСКонтрагентами();
		ЭтотОбъект.Движения.РасчетыСКонтрагентами.Записать();
	КонецЕсли;
	
	//+++АК Susk (Суслин К.В.) 2018.10.24 ИП-00020176 
	Документы.ПоступлениеТоваровУслуг.ЗаписатьКППКонтрагента(Ссылка, КППКонтрагента);
	//---АК Susk (Суслин К.В.) 
	
	Модифицированность = Ложь;
	ВладелецФормы.ЭтотОбъект.Прочитать();
	
	//+++АК Susk (Суслин К.В.) 2018.02.06 ИП-00017676
	Если ЗаписыватьВРегистрИзмененияПоСчетФактурам Тогда
		ПроизвестиЗаписьВРегистрИзмененийПоСчФ();
	КонецЕсли;
	
	ЭтаФорма.ВладелецФормы.КППКонтрагента = КППКонтрагента;
	//---АК Susk (Суслин К.В.)	
	
КонецПроцедуры

Процедура СтатусПолученныхДокументовПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ВладелецФормы.ТекСтатус)
			И НЕ ЗначениеЗаполнено(СтатусПолученныхДокументов) Тогда
	    Сообщить("Нельзя очистить статус прикрепленных документов, если он был заполнен");
		СтатусПолученныхДокументов = ВладелецФормы.ТекСтатус;
	Иначе
		ВладелецФормы.ТекСтатус = СтатусПолученныхДокументов;
		ДокументыПолучены = ЗначениеЗаполнено(СтатусПолученныхДокументов);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДокументОснованиеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если ТипЗнч(Элемент.Значение) = Тип("ДокументСсылка.ПриходныйОрдерСклад") Тогда
		
		ФормаВыбора = Документы.ПриходныйОрдерСклад.ПолучитьФормуВыбора(, Элемент);
		ФормаВыбора.Отбор.Поставщик.Установить(Контрагент);
		ФормаВыбора.Отбор.Организация.Установить(Организация);
		СтандартнаяОбработка = Ложь;
		
	ИначеЕсли ТипЗнч(Элемент.Значение)=Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств") Тогда
		
		ФормаВыбора = Документы.ЗаявкаНаРасходованиеСредств.ПолучитьФормуВыбора(, Элемент);
		ФормаВыбора.Отбор.Контрагент.Установить(Контрагент);
		ФормаВыбора.Отбор.Организация.Установить(Организация);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;	
	
	Если СтандартнаяОбработка = Ложь Тогда
		ФормаВыбора.Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДокументОснованиеПриИзменении(Элемент)
	
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств")
			И ЗначениеЗаполнено(ДокументОснование) Тогда
		//СтатусПолученныхДокументов=ДокументОснование.СтатусПолученныхДокументов;
		//ДокументыПолучены=ЗначениеЗаполнено(СтатусПолученныхДокументов);
		Товары.Очистить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДокументыОснованияДокументОснованиеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	Если ТипЗнч(ЭлементыФормы.ДокументыОснования.ТекущиеДанные.ДокументОснование) = Тип("ДокументСсылка.ПриходныйОрдерСклад") Тогда
		
		ФормаВыбора = Документы.ПриходныйОрдерСклад.ПолучитьФормуВыбора(, Элемент);
		ФормаВыбора.Отбор.Поставщик.Установить(Контрагент);
		ФормаВыбора.Отбор.Организация.Установить(Организация);
		СтандартнаяОбработка = Ложь;
		
	ИначеЕсли ТипЗнч(ЭлементыФормы.ДокументыОснования.ТекущиеДанные.ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств") Тогда
		
		ФормаВыбора = Документы.ЗаявкаНаРасходованиеСредств.ПолучитьФормуВыбора(, Элемент);
		ФормаВыбора.Отбор.Контрагент.Установить(Контрагент);
		ФормаВыбора.Отбор.Организация.Установить(Организация);
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
	
	Если СтандартнаяОбработка = Ложь Тогда
		ФормаВыбора.Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДокументыОснованияДокументОснованиеПриИзменении(Элемент)
	
	Если ТипЗнч(ЭлементыФормы.ДокументыОснования.ТекущиеДанные.ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств")
			И ЗначениеЗаполнено(ЭлементыФормы.ДокументыОснования.ТекущиеДанные.ДокументОснование) Тогда
		//СтатусПолученныхДокументов=ДокументОснование.СтатусПолученныхДокументов;
		//ДокументыПолучены=ЗначениеЗаполнено(СтатусПолученныхДокументов);
		Товары.Очистить();
	КонецЕсли;
	
КонецПроцедуры

//++ АК luza ИП-00017231.01 28.12.17
Процедура ПриОткрытии()
	ЗакрытПериодПоНДС = НастройкаПравДоступа.ДокументВЗакрытомПериодеНДС(ДокументОбъект);
	
	ЭлементыФормы.НомерВходящегоСчетаФактуры.Доступность = НЕ ЗакрытПериодПоНДС;
	ЭлементыФормы.ДатаВходящегоСчетаФактуры.Доступность = НЕ ЗакрытПериодПоНДС;
	
	//susk ИП-00020176 - это перенес в проверку перед записью, т.к. они хотят убирать еще записи о счет-фактуре. Дал возможность убирать
	
	//фСчетФактура =  ДокументОбъект.НайтиПодчиненныйСчетФактуру(ДокументОбъект.Ссылка, "СчетФактураПолученный");
	
	//Если ЗначениеЗаполнено(фСчетФактура) = Истина Тогда
	//	ЭлементыФормы.НомерВходящегоСчетаФактуры.Доступность = Ложь;
	//	ЭлементыФормы.ДатаВходящегоСчетаФактуры.Доступность = Ложь;
	//КонецЕсли;
	
	//+++АК Susk (Суслин К.В.) 2018.10.24 ИП-00020176      
	ЗаполнитьКППКОнтрагента();
	//---АК Susk (Суслин К.В.) 	 
	
КонецПроцедуры
//-- АК luza ИП-00017231.01 28.12.17

//+++АК Susk (Суслин К.В.) 2018.02.06 ИП-00017676
Функция ОпределитьПризнакЗаписиВРегистрИзмененийПоСчФ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеТоваровУслуг.Ссылка
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	               |ГДЕ
	               |	ПоступлениеТоваровУслуг.Ссылка = &Ссылка
	               |	И (ПоступлениеТоваровУслуг.НомерВходящегоСчетаФактуры <> &НомерВходящегоСчетаФактуры
	               |	ИЛИ ПоступлениеТоваровУслуг.ДатаВходящегоСчетаФактуры <> &ДатаВходящегоСчетаФактуры)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("НомерВходящегоСчетаФактуры", НомерВходящегоСчетаФактуры);
	Запрос.УстановитьПараметр("ДатаВходящегоСчетаФактуры", ДатаВходящегоСчетаФактуры);
	
	Возврат НЕ Запрос.Выполнить().Пустой() ИЛИ мКППКонтрагента <> КППКонтрагента;
	
КонецФункции

//+++АК Susk (Суслин К.В.) 2018.02.06 ИП-00017676
Процедура ПроизвестиЗаписьВРегистрИзмененийПоСчФ()
	
	Набор = РегистрыСведений.ДокументыДляВыгрузкиПравокПоСчетФактурам.СоздатьНаборЗаписей();
	Набор.Отбор.Документ.Установить(Ссылка);
	Набор.Прочитать();
	Набор.Очистить();
	НовЗ = Набор.Добавить();
	НовЗ.Документ = Ссылка;
	Набор.Записать();
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.10.24 ИП-00020176 
Процедура ЗаполнитьКППКонтрагента()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, ПоступлениеТоваровУслуг.Контрагент.КПП) КАК КППКонтрагента
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |		ПО ПоступлениеТоваровУслуг.Ссылка = ЗначенияСвойствОбъектов.Объект
	               |			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.КППКонтрагента))
	               |ГДЕ
	               |	ПоступлениеТоваровУслуг.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		КППКонтрагента = Выборка.КППКонтрагента;
		мКППКОнтрагента = КППКонтрагента;
	КонецЕсли;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.11.20 ИП-00020176   
Функция ПроизвестиПроверкиПередЗаписьюДанных()
	
	Отказ = Ложь;
	
	Если ЗначениеЗаполнено(ДокументОбъект.НайтиПодчиненныйСчетФактуру(ДокументОбъект.Ссылка, "СчетФактураПолученный")) И (ЗначениеЗаполнено(ДатаВходящегоСчетаФактуры) ИЛИ ЗначениеЗаполнено(НомерВходящегоСчетаФактуры)) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("У документа существует подчиненная внешняя счет-фактура. Реквизиты по счет-фактуре можно только очистить!", Отказ);
	КонецЕсли;
	
	Возврат Отказ;	
	
КонецФункции