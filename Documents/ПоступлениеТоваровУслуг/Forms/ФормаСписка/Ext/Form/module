
Процедура ДействияФормыПроводкиДтКт(Кнопка)

	ТекДанные = ЭлементыФормы.ДокументСписок.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	//
	БухгалтерскийУчет.ОткрытьЖурналПроводок(ТекДанные.Ссылка);

КонецПроцедуры

Процедура ДокументСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	//
	МассивПоступлений = Новый Массив;
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		МассивПоступлений.Добавить(ОформлениеСтроки.ДанныеСтроки.Ссылка);
	КонецЦикла;
	
	//
	ТаблицаОтличий 		= ПолучитьТаблицуОтличий(МассивПоступлений);
	ТаблицаПретензий 	= ПолучитьТаблицуПретензий(МассивПоступлений);
	//+++АК sils 25.07.2018 ИП-00018865
	ТаблицаБезНДС 		= ПолучитьДокументыНеУказанаСтавкаНДС(МассивПоступлений);
	//---АК
	
	//
	Если ТаблицаОтличий.Количество() > 0
			//+++АК sils 25.07.2018 ИП-00018865
			ИЛИ ТаблицаБезНДС.Количество() > 0
			//---АК
			ИЛИ ТаблицаПретензий.Количество() > 0 Тогда
		
		//
		Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
			
			НайденнаяСтрока = ТаблицаОтличий.Найти(ОформлениеСтроки.ДанныеСтроки.Ссылка, "Поступление");
			Если НайденнаяСтрока <> Неопределено Тогда
				//ОформлениеСтроки.ЦветФона = WebЦвета.ЛососьСветлый;				
				ОформлениеСтроки.Ячейки.РазличноеКоличество.УстановитьКартинку(БиблиотекаКартинок.Внимание); 
			КонецЕсли;
			
			НайденнаяСтрока = ТаблицаПретензий.Найти(ОформлениеСтроки.ДанныеСтроки.Ссылка, "Поступление");
			Если НайденнаяСтрока <> Неопределено Тогда
				ОформлениеСтроки.ЦветФона = ЦветаСтиля.ЦветФонаШапкиОтчета;				
			КонецЕсли;
			
			//+++АК sils 25.07.2018 ИП-00018865
			НайденнаяСтрока = ТаблицаБезНДС.Найти(ОформлениеСтроки.ДанныеСтроки.Ссылка, "Поступление");
			Если НайденнаяСтрока <> Неопределено Тогда
				ОформлениеСтроки.ЦветФона = ЦветаСтиля.СтатусОтклонен;				
			КонецЕсли;
			//---АК
		КонецЦикла;
		
	КонецЕсли;	
	
КонецПроцедуры

Функция ПолучитьТаблицуОтличий(МассивПоступлений)
	
	//
	ЗапросДатыСреза = Новый Запрос;
	ЗапросДатыСреза.УстановитьПараметр("МассивДоки", МассивПоступлений);
	ЗапросДатыСреза.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ПоступлениеТоваровУслуг.Дата) КАК Дата
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В(&МассивДоки)";
	Выборка = ЗапросДатыСреза.Выполнить().Выбрать();
							
	ДатаСреза = '00010101';
	Если Выборка.Следующий() Тогда
		ДатаСреза = Выборка.Дата;
	КонецЕсли;	
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза"			, ДатаСреза);
	Запрос.УстановитьПараметр("МассивПоступлений"	, МассивПоступлений);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслугПриходныеОрдера.Ссылка КАК Поступление,
	|	ПоступлениеТоваровУслугПриходныеОрдера.ПриходныйОрдер
	|ПОМЕСТИТЬ ПриходныеОрдера
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ПриходныеОрдера КАК ПоступлениеТоваровУслугПриходныеОрдера
	|ГДЕ
	|	ПоступлениеТоваровУслугПриходныеОрдера.Ссылка В(&МассивПоступлений)
	|	И ПоступлениеТоваровУслугПриходныеОрдера.Ссылка.Проведен
	|	И ПоступлениеТоваровУслугПриходныеОрдера.ПриходныйОрдер.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриходныеОрдера.Поступление,
	|	ЕСТЬNULL(СоставКомплектаСрезПоследних.Составляющая.Владелец, ПриходныйОрдерСкладТовары.Номенклатура) КАК Номенклатура,
	|	СУММА(ПриходныйОрдерСкладТовары.Количество * ЕСТЬNULL(СоставКомплектаСрезПоследних.Количество, 1)) КАК Количество
	|ПОМЕСТИТЬ ТЗ_КоличествоВДокументах
	|ИЗ
	|	ПриходныеОрдера КАК ПриходныеОрдера
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставКомплекта.СрезПоследних(&ДатаСреза, ) КАК СоставКомплектаСрезПоследних
	|			ПО ПриходныйОрдерСкладТовары.Номенклатура = СоставКомплектаСрезПоследних.Характеристика.Владелец
	|				И (ПриходныйОрдерСкладТовары.Номенклатура.ЭтоКомплект = ИСТИНА)
	|		ПО ПриходныеОрдера.ПриходныйОрдер = ПриходныйОрдерСкладТовары.Ссылка
	|ГДЕ
	|	ПриходныйОрдерСкладТовары.Номенклатура.ВидНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Материал)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходныеОрдера.Поступление,
	|	ЕСТЬNULL(СоставКомплектаСрезПоследних.Составляющая.Владелец, ПриходныйОрдерСкладТовары.Номенклатура)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Ссылка,
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	-СУММА(ПоступлениеТоваровУслугТовары.ПоПриходнымОрдерам)
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка В(&МассивПоступлений)
	|	И ПоступлениеТоваровУслугТовары.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугТовары.Ссылка,
	|	ПоступлениеТоваровУслугТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЗ_КоличествоВДокументах.Поступление КАК Поступление
	|ИЗ
	|	ТЗ_КоличествоВДокументах КАК ТЗ_КоличествоВДокументах
	|
	|СГРУППИРОВАТЬ ПО
	|	ТЗ_КоличествоВДокументах.Поступление,
	|	ТЗ_КоличествоВДокументах.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТЗ_КоличествоВДокументах.Количество) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Поступление";
	
	ТаблицаОтличий = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаОтличий;
	
КонецФункции

Функция ПолучитьТаблицуПретензий(МассивПоступлений)
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоНачисленияПретензийПоставщику"	, Константы.ДатаНачалаНачисленияПретензийПоставщикам.Получить());
	Запрос.УстановитьПараметр("МассивПоступлений"					, МассивПоступлений);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка КАК Поступление
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	(ВЫБОР
	|				КОГДА &НачалоНачисленияПретензийПоставщику <> ДАТАВРЕМЯ(1, 1, 1)
	|						И ПоступлениеТоваровУслугТовары.Ссылка.Дата > &НачалоНачисленияПретензийПоставщику
	|					ТОГДА ПоступлениеТоваровУслугТовары.КоличествоПретензияКСкладу
	|				ИНАЧЕ ПоступлениеТоваровУслугТовары.Количество - ПоступлениеТоваровУслугТовары.ПоПриходнымОрдерам
	|			КОНЕЦ <> 0
	|			ИЛИ ВЫБОР
	|				КОГДА &НачалоНачисленияПретензийПоставщику <> ДАТАВРЕМЯ(1, 1, 1)
	|						И ПоступлениеТоваровУслугТовары.Ссылка.Дата > &НачалоНачисленияПретензийПоставщику
	|					ТОГДА ПоступлениеТоваровУслугТовары.Количество - ПоступлениеТоваровУслугТовары.ПоПриходнымОрдерам - ПоступлениеТоваровУслугТовары.КоличествоПретензияКСкладу
	|				ИНАЧЕ 0
	|			КОНЕЦ <> 0)
	|	И ПоступлениеТоваровУслугТовары.ПоПриходнымОрдерам > 0
	|	И ПоступлениеТоваровУслугТовары.Ссылка В(&МассивПоступлений)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугТовары.Ссылка";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции


Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	ТекСтрока = ЭлементыФормы.ДокументСписок.ТекущаяСтрока;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	//+++АК susk 30/07/2014
	// Если поступление введено на основании заявки на расх. средств, то в структуре подчиненности показывать
	// структуру данной заявки
	
	//РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ТекСтрока);
	
	ТекСсылка = ТекСтрока.Ссылка;
	
	Если ТекСсылка.ДокументОснование = Неопределено
			ИЛИ ТекСсылка.ДокументОснование.Пустая()
			ИЛИ ТипЗнч(ТекСсылка.ДокументОснование) <> Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств") Тогда
		РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ТекСсылка);
	Иначе
		РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ТекСсылка.ДокументОснование);
	КонецЕсли;

	//---АК susk
	
КонецПроцедуры


Процедура ДействияФормыУстановитьСнятьПолученыДокументы(Кнопка)
	
	ТекДанные = ЭлементыФормы.ДокументСписок.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//Если НЕ РольДоступна("ПравоУказанияДокументовВЗаявкахНаРасходование") Тогда
	//	Сообщить("Нет прав для выполнения операции!");
	//	Возврат;
	//КонецЕсли;
	
	СсылкаНаДокумент = ТекДанные.Ссылка;
	
	ОбъектДокумента = СсылкаНаДокумент.ПолучитьОбъект();
	ОбъектДокумента.ОбменДанными.Загрузка 	= Истина;
	
	ОбъектДокумента.ДокументыПолучены 		= НЕ ОбъектДокумента.ДокументыПолучены;
	
	Попытка
		ОбъектДокумента.Записать(РежимЗаписиДокумента.Запись);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

//+++АК sils 25.07.2018 ИП-00018865
Функция ПолучитьДокументыНеУказанаСтавкаНДС(МассивПоступлений)
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивПоступлений", МассивПоступлений);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПоступлениеТоваровУслугТовары.Ссылка КАК Поступление
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	               |ГДЕ
	               |	ПоступлениеТоваровУслугТовары.Ссылка В(&МассивПоступлений)
	               |	И ПоступлениеТоваровУслугТовары.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПоступлениеТоваровУслугУслуги.Ссылка
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
	               |ГДЕ
	               |	ПоступлениеТоваровУслугУслуги.Ссылка В(&МассивПоступлений)
	               |	И ПоступлениеТоваровУслугУслуги.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ПоступлениеТоваровУслугОборудование.Ссылка
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПоступлениеТоваровУслугОборудование
	               |ГДЕ
	               |	ПоступлениеТоваровУслугОборудование.Ссылка В(&МассивПоступлений)
	               |	И ПоступлениеТоваровУслугОборудование.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка)";
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Возврат ТЗ;
КонецФункции

//+++АК ILIK 2018.11.13 ИП-00020359
Процедура ДействияФормыОтборКонтрагентыЭДО(Кнопка)
	Кнопка.Пометка = Не Кнопка.Пометка;
	
	Если Кнопка.Пометка Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Контрагенты.Ссылка
		               |ИЗ
		               |	Справочник.Контрагенты КАК Контрагенты
		               |ГДЕ
		               |	Контрагенты.ЭДО";
		СписокКонтрагетов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		
		ЭтаФорма.ДокументСписок.Отбор.Контрагент.Использование = Истина;
	    ЭтаФорма.ДокументСписок.Отбор.Контрагент.ВидСравнения = ВидСравнения.ВСписке;
	    ЭтаФорма.ДокументСписок.Отбор.Контрагент.Значение.ЗагрузитьЗначения(СписокКонтрагетов);
		ЭлементыФормы.ДокументСписок.НастройкаОтбора.Контрагент.Доступность = Ложь;
	Иначе
		ЭтаФорма.ДокументСписок.Отбор.Контрагент.Использование = Ложь;
		ЭлементыФормы.ДокументСписок.НастройкаОтбора.Контрагент.Доступность = Истина;
	КонецЕсли;
КонецПроцедуры
