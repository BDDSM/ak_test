////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

// Хранит текущую дату документа - для проверки перехода документа в другой период установки номера
Перем мТекущаяДатаДокумента;

// Хранит дерево кнопок подменю заполнение ТЧ
Перем мКнопкиЗаполненияТЧ;

Перем ОперацияАпдекс; //+++АК sils 07.06.2018 ИП-00018876

// Процедура устанавливает подменю "Заполнить" в командных панелях ТЧ документа при необходимости
//
Процедура УстановитьКнопкиПодменюЗаполненияТЧ();
	
	мКнопкиЗаполненияТЧ = УниверсальныеМеханизмы.ПолучитьДеревоКнопокЗаполненияТабличныхЧастей(Ссылка,Новый Действие("НажатиеНаДополнительнуюКнопкуЗаполненияТЧ"));
	
	СоответствиеТЧ = Новый Соответствие;
	
	УниверсальныеМеханизмы.СформироватьПодменюЗаполненияТЧПоДеревуКнопок(мКнопкиЗаполненияТЧ,СоответствиеТЧ);
	
КонецПроцедуры


Процедура ПересчитатьСуммыОперации()
	
	ЭтотОбъект.СуммаОперации 		= 0;
	ЭтотОбъект.СуммаОперацииМСФО 	= 0;

	Для каждого Проводка Из ЭлементыФормы.ТабличноеПолеДвижения.Значение Цикл
		ЭтотОбъект.СуммаОперации 		= ЭтотОбъект.СуммаОперации 		+ Проводка.Сумма;
		ЭтотОбъект.СуммаОперацииМСФО 	= ЭтотОбъект.СуммаОперацииМСФО 	+ Проводка.СуммаМСФО;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПересчитатьСуммуОперации()
	
	ЭтотОбъект.СуммаОперации = 0;

	Для каждого Проводка Из ЭлементыФормы.ТабличноеПолеДвижения.Значение Цикл
		ЭтотОбъект.СуммаОперации = ЭтотОбъект.СуммаОперации + Проводка.Сумма;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПересчитатьСуммуОперацииМСФО()
	
	ЭтотОбъект.СуммаОперацииМСФО = 0;

	Для каждого Проводка Из ЭлементыФормы.ТабличноеПолеДвижения.Значение Цикл
		ЭтотОбъект.СуммаОперацииМСФО = ЭтотОбъект.СуммаОперацииМСФО + Проводка.СуммаМСФО;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	НомерСтроки = 0;
	//+++АК ZICD 12.01.2017 ИП-00014363
	Если АК_УчетМСФОПривилегированный.УчётВключён(Дата) И Не ЗначениеЗаполнено(Организация) Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнен реквизит ""Организация""!");
		Возврат;
	КонецЕсли;
	//---АК
	Для Каждого Стр Из Движения.Финансовый Цикл
		НомерСтроки = НомерСтроки + 1;
		Стр.Период = Дата;
	//	Стр.Организация = Справочники.Организации.Избенка;

		Если НЕ ЗначениеЗаполнено(Стр.СчетДт)
			И НЕ Стр.СчетКт.Забалансовый Тогда
			Сообщить("В строке № " + НомерСтроки + " не заполнен счет дебета.", СтатусСообщения.ОченьВажное);
			Отказ = Истина;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Стр.СчетКт)
			И НЕ Стр.СчетДт.Забалансовый Тогда
			Сообщить("В строке № " + НомерСтроки + " не заполнен счет кредита.", СтатусСообщения.ОченьВажное);
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
		
	Для Каждого Строка Из Движения.Финансовый Цикл
		Если ЗначениеЗаполнено(Строка.СубконтоДт.ТорговыеТочки) Тогда
			Если (Строка.СубконтоДт.ТорговыеТочки.ДатаЗакрытия <> Дата("00010101"))
				И (Строка.СубконтоДт.ТорговыеТочки.ДатаЗакрытия < Дата) Тогда
				Если Вопрос("В строке № " + Строка.НомерСтроки + " дата закрытия торговой точки " + Строка.СубконтоДт.ТорговыеТочки + ": " + Формат(Строка.СубконтоДт.ТорговыеТочки.ДатаЗакрытия, "ДФ=dd.MM.yyyy") + ". Т.е. на момент записи документа она является закрытой. Вы уверены, что хотите использовать ее?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
					Отказ = Истина;
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеЗаполнено(Строка.СубконтоКт.ТорговыеТочки) Тогда
			Если (Строка.СубконтоКт.ТорговыеТочки.ДатаЗакрытия <> Дата("00010101"))
				И (Строка.СубконтоКт.ТорговыеТочки.ДатаЗакрытия < Дата) Тогда
				Если Вопрос("В строке № " + Строка.НомерСтроки + " дата закрытия торговой точки " + Строка.СубконтоКт.ТорговыеТочки + ": " + Формат(Строка.СубконтоКт.ТорговыеТочки.ДатаЗакрытия, "ДФ=dd.MM.yyyy") + ". Т.е. на момент записи документа она является закрытой. Вы уверены, что хотите использовать ее?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
					Отказ = Истина;
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	//+++АК SaMi
	Если НЕ Отказ Тогда
		
		Для Каждого Запись Из Движения.РасчетыСКонтрагентами Цикл		
			Запись.Период = Дата;	
		КонецЦикла;
		
		//
		Если НЕ НеКонтролироватьРасчетыСКонтрагентами Тогда
			
			// Сверяем с регистром бухгалтерии
			СчетаДляУчетаНаРегистреРасчетовСКонтрагентами = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаДляУчетаНаРегистреРасчетовСКонтрагентами();		
			
			ТаблицаПроверки = Движения.РасчетыСКонтрагентами.Выгрузить();
			ТаблицаПроверки = ТаблицаПроверки.Скопировать(ТаблицаПроверки.НайтиСтроки(Новый Структура("Активность", Истина)));
			ТаблицаПроверки.Колонки.Добавить("СуммаПроводки");
			
			Для Каждого Запись Из Движения.Финансовый Цикл
				Если СчетаДляУчетаНаРегистреРасчетовСКонтрагентами.Найти(Запись.СчетДт)<>Неопределено  И Запись.Активность Тогда
					НоваяСтрока = ТаблицаПроверки.Добавить();
					
					НоваяСтрока.Организация = Запись.СубконтоДт.Организации;
					НоваяСтрока.Контрагент = Запись.СубконтоДт.Контрагенты;
					НоваяСтрока.СчетУчета = Запись.СчетДт;
					НоваяСтрока.СуммаПроводки = Запись.Сумма;
					НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;
				КонецЕсли; 
				
				Если СчетаДляУчетаНаРегистреРасчетовСКонтрагентами.Найти(Запись.СчетКт)<>Неопределено  И Запись.Активность Тогда
					НоваяСтрока = ТаблицаПроверки.Добавить();
					
					НоваяСтрока.Организация = Запись.СубконтоКт.Организации;
					НоваяСтрока.Контрагент = Запись.СубконтоКт.Контрагенты;
					НоваяСтрока.СчетУчета = Запись.СчетКт;
					НоваяСтрока.СуммаПроводки = Запись.Сумма;
					НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Расход;
				КонецЕсли; 
			КонецЦикла;  
			
			ТаблицаПроверки.Свернуть("Организация, Контрагент, СчетУчета, ВидДвижения", "Сумма, СуммаПроводки");
			
			ЕстьОшибки = Ложь;
			
			Для Каждого Строка Из ТаблицаПроверки Цикл
				Если Строка.Сумма <> Строка.СуммаПроводки Тогда
					Если НЕ ЕстьОшибки Тогда
						Сообщить("Внимание! Обнаружены расхождения движений по взаиморасчетам в финансовом и управленческом учете!", СтатусСообщения.Важное);
						ЕстьОшибки = Истина;
					КонецЕсли; 
					
					Сообщить("    Организация <" + Строка.Организация + ">. Контрагент <" + Строка.Контрагент + ">. Счет учета: " + Строка.СчетУчета + ". "  + ?(Строка.ВидДвижения = ВидДвиженияНакопления.Приход, "Дебет: ", "Кредит: ") + Формат(Строка.СуммаПроводки,  "ЧДЦ=2; ЧН=") + " (по упр. учету: " + Формат(Строка.Сумма, "ЧДЦ=2; ЧН=") + ").");
				КонецЕсли; 
			КонецЦикла;  
			
			//// Проверяем наличие остатков для пустых сделок
			//ТаблицаПроверки = Движения.РасчетыСКонтрагентами.Выгрузить();
			//ТаблицаПроверки = ТаблицаПроверки.Скопировать(ТаблицаПроверки.НайтиСтроки(Новый Структура("Активность", Истина)));
			//
			//
			//
			//Запрос = Новый Запрос("ВЫБРАТЬ
			//|	ДвиженияДокумента.Организация,
			//|	ДвиженияДокумента.Контрагент,
			//|	ДвиженияДокумента.СчетУчета,
			//|	ДвиженияДокумента.Сумма
			//|ПОМЕСТИТЬ ВТ_Документ
			//|ИЗ
			//|	ДвиженияДокумента КАК ДвиженияДокумента");
			//
			//Запрос.УстановитьПараметр("", );
			//
			//Выборка = Запрос.Выполнить().Выбрать();
			//
			//Пока Выборка.Следующий() Цикл
			//	
			//КонецЦикла;    			
		КонецЕсли; 

	КонецЕсли; 
	//---АК SaMi  
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	Если ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ

		// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, "Продажа");
		
	КонецЕсли;

	// Запомнить текущие значения реквизитов формы.
	мТекущаяДатаДокумента = Дата;

	// Вывести в заголовке формы вид операции.
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);
	РаботаСДиалогами.АктивизироватьРеквизитВФорме(ЭтотОбъект, ЭтаФорма);
	
	УстановитьВидимостьДвижений();
	
	Если УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.МожетРедактироватьСуммуМСФОВРучнойОперации, Ложь) Тогда
		ЭлементыФормы.ТабличноеПолеДвижения.Колонки.СуммаМСФО.ТолькоПросмотр = Ложь;
	КонецЕсли;	
	
	//+++susk
	УстановитьВидимостьДоступность();
	//---susk
	
	//+++АК sils 08.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(ЭтоНовый(), "Новый документ", "" + ЭтотОбъект));
	//---АК
КонецПроцедуры

Процедура ПослеЗаписи()

	// Вывести в заголовке формы вид операции и статус документа (новый, не проведен, проведен).
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента(, ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	//+++АК sils 08.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Операция");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК

	//+++АК Susk (Суслин К.В.) 2018.01.31 ИП-00017500
	Если ЭтоНовый() Или НовыйМеханизм Тогда
		Отказ = Истина;			
		ОткрытьФорму("Документ.Операция.Форма.ФормаУправляемая", ?(ЭтоНовый(),  Новый Структура("ПараметрОбъект", ЭтотОбъект), Новый Структура("Ключ", ЭтотОбъект.Ссылка)));				
		ЭтаФорма.Модифицированность = Ложь;
		ЭтаФорма.Закрыть();
	КонецЕсли;
	//---АК Susk (Суслин К.В.) 	 
	
	// Установка кнопок заполнение ТЧ
	УстановитьКнопкиПодменюЗаполненияТЧ();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
КонецПроцедуры
// Процедура выполняет открытие формы работы со свойствами документа
//
Процедура ДействияФормыДействиеОткрытьСвойства(Кнопка)

	РаботаСДиалогами.ОткрытьСвойстваДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура выполняет открытие формы работы с категориями документа
//
Процедура ДействияФормыДействиеОткрытьКатегории(Кнопка)

	РаботаСДиалогами.ОткрытьКатегорииДокумента(ЭтотОбъект, ЭтаФорма);

КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ДействияФормыДвиженияДокументаПоРегистрам(Кнопка)

	РаботаСДиалогами.НапечататьДвиженияДокумента(Ссылка);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

Процедура ТабличноеПолеДвиженияПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ПересчитатьСуммыОперации();
	
КонецПроцедуры

Процедура ТабличноеПолеДвиженияСуммаПриИзменении(Элемент)
	
	ПересчитатьСуммуОперации();
	
КонецПроцедуры

Процедура ТабличноеПолеДвиженияСуммаМСФОПриИзменении(Элемент)
	
	ПересчитатьСуммуОперацииМСФО();
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;
КонецПроцедуры

// Процедура вызова структуры подчиненности документа
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Процедура - обработчик нажатия на любую из дополнительных кнопок по заполнению ТЧ
//
Процедура НажатиеНаДополнительнуюКнопкуЗаполненияТЧ(Кнопка)
	
	УниверсальныеМеханизмы.ОбработатьНажатиеНаДополнительнуюКнопкуЗаполненияТЧ(мКнопкиЗаполненияТЧ.Строки.Найти(Кнопка.Имя,"Имя",Истина),ЭтотОбъект);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать".
// Открывает форму выбора печатных форм объекта.
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры // ОсновныеДействияФормыПечать()

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры

Процедура ДатаПриИзменении(Элемент)

	РаботаСДиалогами.ПроверитьНомерДокумента(ЭтотОбъект, мТекущаяДатаДокумента);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	мТекущаяДатаДокумента = Дата; // запомним текущую дату документа для контроля номера документа

КонецПроцедуры

Процедура ТабличноеПолеДвиженияСубконтоДтНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТекДанные = ЭлементыФормы.ТабличноеПолеДвижения.ТекущиеДанные; 
	
	//+++АК LAGP 2018.02.14 ИП-00017918 C 2018 счёт 57.4 изменяется на 51.2		
	//Если НЕ ТекДанные.СчетДт = ПланыСчетов.Финансовый.ПереводыНаКартыСотрудников Тогда
	Если НЕ (ТекДанные.СчетДт = ПланыСчетов.Финансовый.ПереводыНаКартыСотрудников ИЛИ ТекДанные.СчетДт = ПланыСчетов.Финансовый.ПереводыНаКартыСотрудниковДо2018) Тогда	
	//---АК LAGP
	
		БухгалтерскийУчет.ОбработатьВыборПервогоСубконто(Элемент, СтандартнаяОбработка,
			?(ТипЗнч(ТекДанные.СубконтоДт.Организации) = Тип("СправочникСсылка.Организации"), ТекДанные.СубконтоДт.Организации, ЭтотОбъект.Организация));
	КонецЕсли;
		
	//+++АК Susk (Суслин К.В.) 2017.12.13 ИП-00016538.02 
	ОбработатьВыборДоговора(ТекДанные, Элемент, СтандартнаяОбработка, "Дт");
	//---АК Susk (Суслин К.В.)
		
КонецПроцедуры

Процедура ТабличноеПолеДвиженияСубконтоКтНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТекДанные = ЭлементыФормы.ТабличноеПолеДвижения.ТекущиеДанные;
	
	//+++АК LAGP 2018.02.14 ИП-00017918 C 2018 счёт 57.4 изменяется на 51.2		
	//Если НЕ ТекДанные.СчетДт = ПланыСчетов.Финансовый.ПереводыНаКартыСотрудников Тогда
	Если НЕ (ТекДанные.СчетДт = ПланыСчетов.Финансовый.ПереводыНаКартыСотрудников ИЛИ ТекДанные.СчетДт = ПланыСчетов.Финансовый.ПереводыНаКартыСотрудниковДо2018) Тогда	
	//---АК LAGP
	
		БухгалтерскийУчет.ОбработатьВыборПервогоСубконто(Элемент, СтандартнаяОбработка,
								?(ЗначениеЗаполнено(ТекДанные.СубконтоКт.Организации), ТекДанные.СубконтоКт.Организации, ЭтотОбъект.Организация));
	КонецЕсли;
	
	//+++АК Susk (Суслин К.В.) 2017.12.13 ИП-00016538.02 
	ОбработатьВыборДоговора(ТекДанные, Элемент, СтандартнаяОбработка, "Кт");
	//---АК Susk (Суслин К.В.)
	
КонецПроцедуры

Процедура ТабличноеПолеДвиженияСчетДтОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);
КонецПроцедуры


Процедура ТабличноеПолеДвиженияСчетКтОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);
КонецПроцедуры

Процедура ДействияФормыИсторияИзменений(Кнопка)
	ИсторияИзменений = Отчеты.ИсторияИзмененийОбъектов.Создать();
	ИсторияИзменений.СсылкаНаОбъект = Ссылка;
	Форма = ИсторияИзменений.ПолучитьФорму("ФормаОтчета");
	Форма.СформироватьТаблицуВерсий();
	Форма.Открыть();
КонецПроцедуры

Процедура ТабличноеПолеДвиженияПриПолученииДанных(Элемент, ОформленияСтрок)
	Счет_443 = ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;
	Для Каждого Оформление Из ОформленияСтрок Цикл
		
		Если Оформление.ДанныеСтроки.СчетДт = Счет_443 Тогда
			Если НЕ Оформление.ДанныеСтроки.СубконтоДт.ТорговыеТочки = Неопределено 
				И Оформление.ДанныеСтроки.СубконтоДт.ТорговыеТочки.ДатаЗакрытия <> Дата("00010101")
				И Оформление.ДанныеСтроки.СубконтоДт.ТорговыеТочки.ДатаЗакрытия <= ТекущаяДата() Тогда
				Оформление.Ячейки.СубконтоДт1.ЦветФона = Новый Цвет(222, 222, 222);
			КонецЕсли;		
		КонецЕсли;
		
		Если Оформление.ДанныеСтроки.СчетКт = Счет_443 Тогда
			Если НЕ Оформление.ДанныеСтроки.СубконтоКт.ТорговыеТочки = Неопределено 
				И Оформление.ДанныеСтроки.СубконтоКт.ТорговыеТочки.ДатаЗакрытия <> Дата("00010101")
				И Оформление.ДанныеСтроки.СубконтоКт.ТорговыеТочки.ДатаЗакрытия <= ТекущаяДата() Тогда
				Оформление.Ячейки.СубконтоКт1.ЦветФона = Новый Цвет(222, 222, 222);
			КонецЕсли;		
		КонецЕсли;	
		
	КонецЦикла;
КонецПроцедуры

// Процедура - обработчик события "Файлы".
//
Процедура ДействияФормыФайлы(Кнопка)
	
	Если Ссылка.Пустая() Тогда
		Предупреждение("Сначала запишите документ.");
		Возврат;
	КонецЕсли;

	ФормаФайлов = Справочники.ХранилищеДополнительнойИнформации.ПолучитьФорму("ФормаСпискаФайловИИзображений", ЭтаФорма);
	
	ФормаФайлов.Изображения.Отбор.Объект.Использование                               = Истина;
	ФормаФайлов.Изображения.Отбор.Объект.Значение                                    = Ссылка;
	ФормаФайлов.ЭлементыФормы.Изображения.НастройкаОтбора.Объект.Доступность         = Ложь;
	ФормаФайлов.ЭлементыФормы.Изображения.Колонки.Объект.Видимость                   = Ложь;

	ФормаФайлов.ДополнительныеФайлы.Отбор.Объект.Использование                       = Истина;
	ФормаФайлов.ДополнительныеФайлы.Отбор.Объект.Значение                            = Ссылка;
	ФормаФайлов.ЭлементыФормы.ДополнительныеФайлы.НастройкаОтбора.Объект.Доступность = Ложь;
	ФормаФайлов.ЭлементыФормы.ДополнительныеФайлы.Колонки.Объект.Видимость           = Ложь;

	ОбязательныеОтборы = Новый Структура;
	ОбязательныеОтборы.Вставить("Объект",Ссылка);

	ФормаФайлов.ОбязательныеОтборы = ОбязательныеОтборы;
	
	ФормаФайлов.Открыть();
	
КонецПроцедуры

//+++АК SaMi 22.04.2017 
Процедура ТабличноеПолеДвиженияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ПерезаполнитьРасчетыСКонтрагентами();
	
	УстановитьВидимостьДвижений();
	
КонецПроцедуры

Процедура ПерезаполнитьРасчетыСКонтрагентами()
	
	СчетаДляУчетаНаРегистреРасчетовСКонтрагентами = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаДляУчетаНаРегистреРасчетовСКонтрагентами();
	
	ТаблицаДвижений = Движения.Финансовый.Выгрузить();
	УдаляемыеДвижения = Новый Массив;
	
	Для Каждого Строка Из Движения.РасчетыСКонтрагентами Цикл
		НС1 = ТаблицаДвижений.НайтиСтроки(Новый Структура("СубконтоДт1, СубконтоДт2, СчетДт", Строка.Организация, Строка.Контрагент, Строка.СчетУчета));		
		НС2 = ТаблицаДвижений.НайтиСтроки(Новый Структура("СубконтоКт1, СубконтоКт2, СчетКт", Строка.Организация, Строка.Контрагент, Строка.СчетУчета));		
		
		Если НС1.Количество() = 0 И НС2.Количество() = 0 Тогда
			УдаляемыеДвижения.Добавить(Строка);
		КонецЕсли; 
	КонецЦикла;  
	
	Для Каждого Движение ИЗ УдаляемыеДвижения Цикл
		Движения.РасчетыСКонтрагентами.Удалить(Движение);
	КонецЦикла;  
	
	// 
	ТаблицаКопия = Движения.РасчетыСКонтрагентами.ВыгрузитьКолонки();
	
	Для Каждого Строка Из Движения.Финансовый Цикл
		Если НЕ Строка.Активность Тогда
			Продолжить;	
		КонецЕсли; 
		
		Если СчетаДляУчетаНаРегистреРасчетовСКонтрагентами.Найти(Строка.СчетДт) <> Неопределено Тогда                                                                            
			НоваяСтрока = ТаблицаКопия.Добавить();
			НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Приход;
			НоваяСтрока.Организация = Строка.СубконтоДт.Организации;
			НоваяСтрока.Контрагент = Строка.СубконтоДт.Контрагенты;
			НоваяСтрока.СчетУчета = Строка.СчетДт;
			НоваяСтрока.Сумма = Строка.Сумма;
		КонецЕсли;		
			
		Если СчетаДляУчетаНаРегистреРасчетовСКонтрагентами.Найти(Строка.СчетКт) <> Неопределено Тогда                                                                            
			НоваяСтрока = ТаблицаКопия.Добавить();
			НоваяСтрока.ВидДвижения = ВидДвиженияНакопления.Расход;
			НоваяСтрока.Организация = Строка.СубконтоКт.Организации;
			НоваяСтрока.Контрагент = Строка.СубконтоКт.Контрагенты;
			НоваяСтрока.СчетУчета = Строка.СчетКт;
			НоваяСтрока.Сумма = Строка.Сумма;
		КонецЕсли;		
	КонецЦикла;
	
	ТаблицаКопия.Свернуть("ВидДвижения, Организация, Контрагент, СчетУчета", "Сумма");
	ТаблицаДвижений = Движения.РасчетыСКонтрагентами.Выгрузить();
	
	Для Каждого Строка ИЗ ТаблицаКопия Цикл
		СтруктураОтбора = Новый Структура("ВидДвижения, Организация, Контрагент, СчетУчета");
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, Строка);
		
		НС = ТаблицаДвижений.НайтиСтроки(СтруктураОтбора);		
		
		Если НС.Количество() = 0 Тогда
			НоваяЗапись = Движения.РасчетыСКонтрагентами.Добавить();
			
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Строка);
			НоваяЗапись.Период = Дата;
		ИначеЕсли НС.Количество() = 1 Тогда
			Движения.РасчетыСКонтрагентами[ТаблицаДвижений.Индекс(НС[0])].Сумма = Строка.Сумма;
		КонецЕсли;
	КонецЦикла;  
				
	
КонецПроцедуры 

Процедура УстановитьВидимостьДвижений()
		
	Если Движения.РасчетыСКонтрагентами.Количество()>0 Тогда
		ЭлементыФормы.ПанельДвижений.ОтображениеЗакладок = ОтображениеЗакладок.Сверху;
		ЭлементыФормы.ПанельДвижений.Страницы.РасчетыСКонтрагентами.Видимость = Истина;
	Иначе
		ЭлементыФормы.ПанельДвижений.ОтображениеЗакладок = ОтображениеЗакладок.НеИспользовать;
		ЭлементыФормы.ПанельДвижений.Страницы.РасчетыСКонтрагентами.Видимость = Ложь;
	КонецЕсли; 

КонецПроцедуры 

Процедура ТабличноеПолеДвиженияПослеУдаления(Элемент)

	ПерезаполнитьРасчетыСКонтрагентами();
	
	УстановитьВидимостьДвижений();
	
КонецПроцедуры

//---АК SaMi  22.04.2017 

//+++susk

//ИП-00016538

Процедура ВидОперацииПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();
	
	Если ВидОперации = Перечисления.ВидыОперацийДокументаОперация.НачислениеПроцентовПоДепозитамЗаймам И ЭтотОБъект.Движения.Финансовый.Количество() Тогда
		Ответ = Вопрос("При смене операции рекомендуется очистить все строки табличной части. Сделать это сейчас?", РежимДиалогаВопрос.ДаНет);
		
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;	
		
	КонецЕсли;	
	 
	
	ЭтотОбъект.Движения.Финансовый.Очистить();
	
КонецПроцедуры

Процедура ТабличноеПолеДвиженияПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	//Если ВидОперации = Перечисления.ВидыОперацийДокументаОперация.КорректировкаОстатковПоТоваруУпаковке Тогда
	//	
	//	 ФрмВыбора = Справочники.Номенклатура.ПолучитьФормуВыбора();
	//	 ВыбраннаяНоменклатура = ФрмВыбора.ОткрытьМодально();
	//	 
	//	 Если ВыбраннаяНоменклатура = Неопределено Тогда
	//		 Отказ = Истина;
	//		 Возврат;
	//	 КонецЕсли;
	//	 
	//	 ЭтоТовар = Ложь;
	//	 ЭтоМатериал = Ложь;
	//	 ЭтоЭтикетка = Ложь;
	//	 
	//	 //Если ВыбраннаяНоменклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.
	//	
	//КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьВидимостьДоступность()
	
	//ВидимостьСписанияОприходования = ВидОперации = Перечисления.ВидыОперацийДокументаОперация.КорректировкаОстатковПоТоваруУпаковке;	
	//ВидимостьСписанияОприходования = Ложь;
	//ЭлементыФормы.Списание.Видимость = ВидимостьСписанияОприходования;
	//ЭлементыФормы.Оприходование.Видимость = ВидимостьСписанияОприходования;	
	
	ЭлементыФормы.тНоваяФорма.Видимость = РольДоступна("ПолныеПрава");
	
КонецПроцедуры


Процедура ТабличноеПолеДвиженияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И ВидОперации = Перечисления.ВидыОперацийДокументаОперация.НачислениеПроцентовПоДепозитамЗаймам Тогда
		
		ТекСтр = ЭлементыФормы.ТабличноеПолеДвижения.ТекущаяСтрока;
		
		ТекСтр.СчетДт = ПланыСчетов.Финансовый.ПрочиеЗаймыВыданные;
		ТекСтр.СчетКт = ПланыСчетов.Финансовый.ВыручкаПрочая;
				
		ТекСтр.СубконтоКт[ТекСтр.СчетКт.ВидыСубконто[0].ВидСубконто] = Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_TT", 10969);
		ТекСтр.СубконтоКт[ТекСтр.СчетКт.ВидыСубконто[1].ВидСубконто] = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("39395");
		ТекСтр.СубконтоКт[ТекСтр.СчетКт.ВидыСубконто[2].ВидСубконто] = Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_ЦФО", 10067);
	//+++АК NEVV 2017.12.04 ИП-00016538.01
	ИначеЕсли НоваяСтрока И ВидОперации = Перечисления.ВидыОперацийДокументаОперация.КорректировкаОстатковПоТоваруУпаковке Тогда
		
		ТекСтр = ЭлементыФормы.ТабличноеПолеДвижения.ТекущиеДанные;
		
		СписокВыбораОперации = Новый СписокЗначений;                       
		СписокВыбораОперации.Добавить("Оприходование товара");
		СписокВыбораОперации.Добавить("Списание товара");
		СписокВыбораОперации.Добавить("Оприходование упаковки");
		СписокВыбораОперации.Добавить("Списание упаковки");
		
		ВыбЭлемент = СписокВыбораОперации.ВыбратьЭлемент("Выберите требуемую операцию", ВыбЭлемент);
		Если ВыбЭлемент = Неопределено Тогда 
			Возврат;
		Иначе
			ВыбЗначение = ВыбЭлемент.Значение;
		КонецЕсли;
				
		Если ВыбЗначение = "Списание товара" Тогда
			ТекСтр.СчетДт = ПланыСчетов.Финансовый.ЗатратыТоварныеДляРаспределения;
			ТекСтр.СчетКт = ПланыСчетов.Финансовый.Товары;
		    ТекСтр.СубконтоДт[ТекСтр.СчетДт.ВидыСубконто[0].ВидСубконто] = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_000");
			ТекСтр.СубконтоДт[ТекСтр.СчетДт.ВидыСубконто[1].ВидСубконто] = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("20120");
			ТекСтр.СубконтоДт[ТекСтр.СчетДт.ВидыСубконто[2].ВидСубконто] = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_16");
		ИначеЕсли ВыбЗначение = "Оприходование товара" Тогда
			ТекСтр.СчетДт = ПланыСчетов.Финансовый.Товары;
			ТекСтр.СчетКт = ПланыСчетов.Финансовый.ЗатратыТоварныеДляРаспределения;
		    ТекСтр.СубконтоКт[ТекСтр.СчетКт.ВидыСубконто[0].ВидСубконто] = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_000");
			ТекСтр.СубконтоКт[ТекСтр.СчетКт.ВидыСубконто[1].ВидСубконто] = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("20120");
			ТекСтр.СубконтоКт[ТекСтр.СчетКт.ВидыСубконто[2].ВидСубконто] = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_16");
		ИначеЕсли ВыбЗначение = "Оприходование упаковки" Тогда
			ТекСтр.СчетДт = ПланыСчетов.Финансовый.МатералыДляВыпуска;
			ТекСтр.СчетКт = ПланыСчетов.Финансовый.ЗатратыТоварныеДляРаспределения;
		    ТекСтр.СубконтоКт[ТекСтр.СчетКт.ВидыСубконто[0].ВидСубконто] = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_000");
			ТекСтр.СубконтоКт[ТекСтр.СчетКт.ВидыСубконто[1].ВидСубконто] = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("20120");
			ТекСтр.СубконтоКт[ТекСтр.СчетКт.ВидыСубконто[2].ВидСубконто] = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_16");
		ИначеЕсли ВыбЗначение = "Списание упаковки" Тогда
			ТекСтр.СчетДт = ПланыСчетов.Финансовый.ЗатратыТоварныеДляРаспределения;
			ТекСтр.СчетКт = ПланыСчетов.Финансовый.МатералыДляВыпуска;
		    ТекСтр.СубконтоДт[ТекСтр.СчетДт.ВидыСубконто[0].ВидСубконто] = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_000");
			ТекСтр.СубконтоДт[ТекСтр.СчетДт.ВидыСубконто[1].ВидСубконто] = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("20120");
			ТекСтр.СубконтоДт[ТекСтр.СчетДт.ВидыСубконто[2].ВидСубконто] = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_16");
		КонецЕсли;
		//---АК NEVV 
	КонецЕсли;
	
КонецПроцедуры

//---susk

Процедура ТабличноеПолеДвиженияСубконтоДт1ПриИзменении(Элемент)
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(Элемент.Значение);
КонецПроцедуры


Процедура ТабличноеПолеДвиженияСубконтоДт2ПриИзменении(Элемент)
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(Элемент.Значение);
КонецПроцедуры


Процедура ТабличноеПолеДвиженияСубконтоДт3ПриИзменении(Элемент)
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(Элемент.Значение);
КонецПроцедуры


Процедура ТабличноеПолеДвиженияСубконтоКт1ПриИзменении(Элемент)
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(Элемент.Значение);
КонецПроцедуры


Процедура ТабличноеПолеДвиженияСубконтоКт2ПриИзменении(Элемент)
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(Элемент.Значение);
КонецПроцедуры


Процедура ТабличноеПолеДвиженияСубконтоКт3ПриИзменении(Элемент)
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(Элемент.Значение);
КонецПроцедуры


Процедура ТабличноеПолеДвиженияСубконтоДт1ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры


Процедура ТабличноеПолеДвиженияСубконтоДт2ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры


Процедура ТабличноеПолеДвиженияСубконтоДт3ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры


Процедура ТабличноеПолеДвиженияСубконтоКт1ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры


Процедура ТабличноеПолеДвиженияСубконтоКт2ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры


Процедура ТабличноеПолеДвиженияСубконтоКт3ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.12.13 ИП-00016538.02
Процедура ОбработатьВыборДоговора(ТекДанные, Элемент, СтандартнаяОбработка, ДтКт)
	
	Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
		Если ТекДанные["Субконто" + ДтКт].КонтрагентыФизЛица <> Неопределено Тогда
			Владелец = ТекДанные["Субконто" + ДтКт].КонтрагентыФизЛица;
		ИначеЕсли ТекДанные["Субконто" + ДтКт].Контрагенты <> Неопределено Тогда
			Владелец = ТекДанные["Субконто" + ДтКт].Контрагенты;
		Иначе
			Владелец = Неопределено;
		КонецЕсли;
		
		Если Владелец <> Неопределено Тогда
			СтандартнаяОбработка = Ложь;
			ФормаВыбора          = Справочники.ДоговорыКонтрагентов.ПолучитьФормуВыбора(,Элемент,);
			
			ФормаВыбора.ПараметрОтборПоВладельцу = Владелец;
			ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Владелец.Доступность = Ложь;
			ФормаВыбора.Открыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.02.04 ИП-00017500 
Процедура тНоваяФормаНажатие(Элемент)
	
	Если ЭтоНовый() Тогда
		ОткрытьФорму("Документ.Операция.Форма.ФормаУправляемая", Новый Структура("ПараметрОбъект", ЭтотОбъект));
	Иначе
		ОткрытьФорму("Документ.Операция.Форма.ФормаУправляемая", Новый Структура("Ключ", ЭтотОбъект.Ссылка));
	КонецЕсли;
	
	ЭтаФорма.Модифицированность = Ложь;
	ЭтаФорма.Закрыть();
	
КонецПроцедуры
