&НаКлиенте
Перем ПредСклад;

&НаСервереБезКонтекста
Функция ПолучитьОстатокПоТовару(Склад, Номенклатура, Характеристика, ЕдиницаИзмерения, НаДату, ДатаПроизводства = '00010101')
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТоварыНаСкладахОстатки.КоличествоОстаток
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |			&НаДату,
	               |			Склад = &Склад
	               |				И Номенклатура = &Номенклатура
	               |				И Характеристика = &Характеристика
	               |				И ЕдиницаИзмерения = &ЕдиницаИзмерения
				   |				И ДатаПроизводства = &ДатаПроизводства) КАК ТоварыНаСкладахОстатки";
				   
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	Запрос.УстановитьПараметр("ЕдиницаИзмерения", ЕдиницаИзмерения);
	Запрос.УстановитьПараметр("ДатаПроизводства", ДатаПроизводства);
	Запрос.УстановитьПараметр("НаДату",	Новый Граница(НаДату, ВидГраницы.Включая));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.КоличествоОстаток;
	Иначе
		Возврат 0;
	КонецЕсли;	
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЕдиницаПоКлассификатору",СтруктураДанные.Номенклатура.БазоваяЕдиницаИзмерения);
	Запрос.УстановитьПараметр("Номенклатура",СтруктураДанные.Номенклатура);
	
	Если Не СтруктураДанные.Номенклатура.НеВедетсяУчетПоХарактеристикам Тогда
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика
		               |ИЗ
		               |	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		               |ГДЕ
		               |	ХарактеристикиНоменклатуры.Владелец = &Номенклатура
		               |	И НЕ ХарактеристикиНоменклатуры.ПометкаУдаления";
		ТабРезультат = Запрос.Выполнить().Выгрузить();
		Если ТабРезультат.Количество() = 1 Тогда
			СтруктураДанные.Характеристика = ТабРезультат[0].Характеристика;
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.Текст= 	"ВЫБРАТЬ
	              	|	ЕдиницыИзмерения.Ссылка КАК ЕдиницаИзмерения
	              	|ИЗ
	              	|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	              	|ГДЕ
	              	|	ЕдиницыИзмерения.Владелец = &Номенклатура
	              	|	И ЕдиницыИзмерения.ЕдиницаПоКлассификатору = &ЕдиницаПоКлассификатору
	              	|	И НЕ ЕдиницыИзмерения.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СтруктураДанные.Вставить("ЕдиницаИзмерения", Выборка.ЕдиницаИзмерения);
	КонецЕсли;
	
	Возврат СтруктураДанные;
	
КонецФункции // ПолучитьДанныеНоменклатураПриИзменении()

&НаСервере
Функция ПолныйВыборПоСкладу()
	
	//Если ЗначениеЗаполнено(Объект.Склад.Владелец) Тогда
		Разрешено = Ложь;
		Разрешено = Разрешено ИЛИ (Найти(Объект.Склад, "Возврат поставщику") > 0);
		Разрешено = Разрешено ИЛИ (Найти(Объект.Склад, "Возврат покупателя") > 0);
		//+++АК SHEP 2018.05.03 ИП-00018453
		//Разрешено = Разрешено ИЛИ Объект.Склад.Владелец = Справочники.СтруктурныеЕдиницы.СторонняяПереработка;
		Разрешено = Разрешено ИЛИ Объект.Склад.Владелец.СторонняяПереработка;
		//---АК SHEP 2018.05.03
		Возврат Разрешено
	//Иначе
	//	Возврат Ложь;
	//КонецЕсли;	
	
КонецФункции

&НаСервере
Функция НеВедетсяУчетПоХарактеристикам(Номенклатура)
	Возврат Номенклатура.НеВедетсяУчетПоХарактеристикам;
КонецФункции

&НаСервере
Процедура ПерезаполнитьОстаткиПоТоварам(ЗаполнятьКоличествоУчетным = Ложь)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Склад"				, Объект.Склад);
	Запрос.УстановитьПараметр("НаДату"				, ?(Объект.Ссылка.Пустая(), Объект.Дата, Объект.Ссылка.МоментВремени()));
	Запрос.УстановитьПараметр("Таб"					, Объект.Товары.Выгрузить());
	Запрос.УстановитьПараметр("ПоНесколькимСкладам"	, Объект.ПоНесколькимСкладам);			   
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Таб.Номенклатура,
	|	Таб.Характеристика,
	|	Таб.ДатаПроизводства,
	|	Таб.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА &ПоНесколькимСкладам
	|			ТОГДА Таб.Склад
	|		ИНАЧЕ &Склад
	|	КОНЕЦ КАК Склад
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	&Таб КАК Таб
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Склад,
	|	Таб.Номенклатура,
	|	Таб.Характеристика,
	|	Таб.ДатаПроизводства,
	|	Таб.ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	ТоварыНаСкладахОстатки.Характеристика,
	|	ТоварыНаСкладахОстатки.ДатаПроизводства,
	|	ТоварыНаСкладахОстатки.ЕдиницаИзмерения,
	|	ТоварыНаСкладахОстатки.Склад,
	|	ТоварыНаСкладахОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			&НаДату,
	|			(Склад, Номенклатура, Характеристика, ДатаПроизводства, ЕдиницаИзмерения) В
	|				(ВЫБРАТЬ
	|					Таб.Склад,
	|					Таб.Номенклатура,
	|					Таб.Характеристика,
	|					Таб.ДатаПроизводства,
	|					Таб.ЕдиницаИзмерения
	|				ИЗ
	|					ВТ_Товары КАК Таб)) КАК ТоварыНаСкладахОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_Товары";
				   
	ТабТовары = Запрос.Выполнить().Выгрузить();
	
	//
	Для Каждого СтрокаТаб Из Объект.Товары Цикл
		СтрокиОстаток = ТабТовары.НайтиСтроки(Новый Структура("Номенклатура, Характеристика, ДатаПроизводства, ЕдиницаИзмерения, Склад", СтрокаТаб.Номенклатура, СтрокаТаб.Характеристика, СтрокаТаб.ДатаПроизводства, СтрокаТаб.ЕдиницаИзмерения, ?(Объект.ПоНесколькимСкладам, СтрокаТаб.Склад, Объект.Склад)));
		Если СтрокиОстаток.Количество() > 0 Тогда
			СтрокаТаб.УчетноеКоличество = СтрокиОстаток[0].КоличествоОстаток;
			Если Объект.ПоНесколькимСкладам
					И ЗаполнятьКоличествоУчетным Тогда //ИП-00014055
				СтрокаТаб.Количество = Макс(СтрокаТаб.УчетноеКоличество, 0);
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьРеквизитСклад()
	
	Если Объект.ПоНесколькимСкладам Тогда
		
		// Заполним склад во всех строках
		Для Каждого СтрокаТаб Из Объект.Товары Цикл
			СтрокаТаб.Склад = Объект.Склад;	
		КонецЦикла;
		
	Иначе
		
		// Если склад в тч один то перенесем его в шапку
		ТаблицаСкладов = Объект.Товары.Выгрузить(, "Склад");
		ТаблицаСкладов.Свернуть("Склад");
		
		Если ТаблицаСкладов.Количество() = 1 Тогда
			Объект.Склад = ТаблицаСкладов[0].Склад;
		Иначе
			Объект.Склад = Справочники.Склады.ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПризнакИспользованияХарактеристики()
	
	НоменклатураСервер.ЗаполнитьСлужебныеРеквизитыПоНоменклатуреВКоллекции(
		Объект.Товары,
		Новый Структура(
			"ЗаполнитьПризнакХарактеристикиИспользуются",
			Новый Структура("Номенклатура", "ХарактеристикиИспользуются")));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьИДоступность()
	
	Элементы.ПоНесколькимСкладам.Доступность 	= РольДоступна(Метаданные.Роли.Финансист) ИЛИ РольДоступна(Метаданные.Роли.ФинансовыйДиректор);
	//Элементы.Склад.Видимость 					= НЕ Объект.ПоНесколькимСкладам;
	Элементы.ТоварыСклад.Видимость 				= Объект.ПоНесколькимСкладам;
	Элементы.РольОтветственныхЗаТовар.Видимость 		= Объект.ПоНесколькимСкладам;
	Элементы.ПоТоварамБезРолиОтветственных.Видимость 	= Объект.ПоНесколькимСкладам;
	Элементы.ФормаОтправитьПисьмоОРасхождениях.Видимость = Объект.ПоНесколькимСкладам;
	Элементы.ЗаполнитьОстаткиПоПроизводителю.Видимость = Объект.ПоНесколькимСкладам;
	//+++АК BELN 2017.11.16 ИП-00017261
	Если Объект.Проведен Тогда
		Элементы.ТоварыДобавитьПоОстаткам.Видимость=Ложь;
	Иначе
		Элементы.ТоварыДобавитьПоОстаткам.Видимость=Истина;
	КонецЕсли; 
	//---АК BELN 2017.11.16
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПредСклад = Объект.Склад;
	
	//+++АК sils 08.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
	//---АК
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 08.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Инвентаризация (склад)");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Объект.Дата		= ТекущаяДата();
		Объект.Автор 	= ПараметрыСеанса.ТекущийПользователь;
		Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
			Объект.Склад = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОсновнойСклад");
		КонецЕсли;
		//+++АК BELN 2018.07.12
		Если НЕ ЗначениеЗаполнено(Объект.Организация) Тогда
			Объект.Организация=Объект.Склад.Организация;
		КонецЕсли; 
		//---АК BELN 2018.07.12 
		
	КонецЕсли;
	
	//Если Объект.Проведен Тогда
	//	ЭтаФорма.ТолькоПросмотр = Истина;
	//КонецЕсли;
	
	УстановитьВидимостьИДоступность();
	ПерезаполнитьОстаткиПоТоварам();
	ЗаполнитьПризнакИспользованияХарактеристики();
	Если  ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Задания.Отбор.Элементы[1].ПравоеЗначение=Объект.Ссылка;
	КонецЕсли; 
	//+++АК BARA 2018.03.21 ИП-00018165
	Если ЗначениеЗаполнено(Объект.Ссылка) = Ложь Тогда 
		Объект.Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
	КонецЕсли;
	//---АК BARA
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ВыполнятьОтложенныеДвиженияСразу Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ОтложенноеПроведение", Истина);
	КонецЕсли;	
	
	Если Объект.ПоНесколькимСкладам Тогда
		
		// Очистим склад в шапке
		Объект.Склад = Справочники.Склады.ПустаяСсылка();
		
		Если НЕ ЕстьПравоПроводитьПоПустомуСкладу() Тогда
			Для Каждого СтрокаТаб Из Объект.Товары Цикл
				Если Не ЗначениеЗаполнено(СтрокаТаб.Склад)Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке " + Формат(СтрокаТаб.НомерСтроки, "ЧГ=0") + " не указан склад", Объект, "Товары[" + Формат(СтрокаТаб.НомерСтроки - 1, "ЧГ=0") + "].Склад",, Отказ);
				КонецЕсли;	
			КонецЦикла;
		КонецЕсли;	
		
		СтруктураПараметры = ПолучитьПараметрыДляОтправкиПисьмаОРасхождениях(Ложь);
		ТекущийОбъект.ТребуетсяВыставитьСчётНаОплату = (СтруктураПараметры.Количество() > 0);
		
	Иначе
		
		//+++АК SHEP 2018.05.03 ИП-00018453
		//СкладСтороннейПереработки = (Объект.Склад.Владелец = Справочники.СтруктурныеЕдиницы.СторонняяПереработка);
		СкладСтороннейПереработки = (Объект.Склад.Владелец.СторонняяПереработка);
		//---АК SHEP 2018.05.03
		СкладТорговойТочки = ЗначениеЗаполнено(Объект.Склад.Владелец.НомерТочки);
		
		Для Каждого СтрокаТаб Из Объект.Товары Цикл
			
			// Очистим склад в ТЧ
			Если ЗначениеЗаполнено(СтрокаТаб.Склад)Тогда
				СтрокаТаб.Склад = Справочники.Склады.ПустаяСсылка();	
			КонецЕсли;
			
			// Если склад сторонней переработки характеристика не обязательна
			Если Не СкладСтороннейПереработки
				И НЕ СкладТорговойТочки Тогда
				Если НЕ ЗначениеЗаполнено(СтрокаТаб.Характеристика)
					И НЕ СтрокаТаб.Номенклатура.НеВедетсяУчетПоХарактеристикам Тогда
					//ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке " + Формат(СтрокаТаб.НомерСтроки, "ЧГ=0") + " не указана характеристика", Объект, "Товары[" + Формат(СтрокаТаб.НомерСтроки - 1, "ЧГ=0") + "].Харатеристика",, Отказ);
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке " + Формат(СтрокаТаб.НомерСтроки, "ЧГ=0") + " не указана характеристика", Объект, "Товары[" + Формат(СтрокаТаб.НомерСтроки - 1, "ЧГ=0") + "].Харатеристика");
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ ЕстьПравоПроводитьПоПустомуСкладу() Тогда
			Если Не ЗначениеЗаполнено(Объект.Склад)Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указан склад", Объект, "Склад",, Отказ);	
			КонецЕсли;
		КонецЕсли;	
		
	КонецЕсли;
	
	
	////проверим даты производства
	//Если Не Объект.ПоНесколькимСкладам
	//	И ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
	//	Запрос = Новый Запрос();
	//	Запрос.Текст = "ВЫБРАТЬ
	//				   |	ХарактеристикиНоменклатуры.Ссылка,
	//				   |	ЕСТЬNULL(ХарактеристикиНоменклатуры.СрокГодности * ХарактеристикиНоменклатуры.ТипСрокаГодности.КоэффициентВСутках, 0) КАК СрокГодности,
	//				   |	ВЫБОР
	//				   |		КОГДА ХарактеристикиНоменклатуры.ПредельноеКоличествоДнейСрокаГодности = 0
	//				   |			ТОГДА 366
	//				   |		ИНАЧЕ ХарактеристикиНоменклатуры.ПредельноеКоличествоДнейСрокаГодности
	//				   |	КОНЕЦ КАК ДнейСрока
	//				   |ИЗ
	//				   |	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	//				   |ГДЕ
	//				   |	ХарактеристикиНоменклатуры.Ссылка В(&МассивХарактеристики)";
	//				   
	//	Запрос.УстановитьПараметр("МассивХарактеристики", ТекущийОбъект.Товары.ВыгрузитьКолонку("Характеристика"));
	//	Результаты = Запрос.ВыполнитьПакет();
	//	КешСроки = Результаты[0].Выгрузить();
	//	Для Каждого СтрокаТаб Из Объект.Товары Цикл
	//		Если СтрокаТаб.Количество >= СтрокаТаб.УчетноеКоличество
	//			И ЗначениеЗаполнено(СтрокаТаб.ДатаПроизводства) Тогда
	//			СтрокаКеш = КешСроки.Найти(СтрокаТаб.Характеристика, "Ссылка");
	//			Если СтрокаКеш <> Неопределено Тогда
	//				Если ЗначениеЗаполнено(СтрокаКеш.СрокГодности) Тогда
	//					Если НачалоДня(Объект.Дата) > СтрокаТаб.ДатаПроизводства + СтрокаКеш.СрокГодности * 86400 Тогда
	//						ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для номенклатуры " + СтрокаТаб.Номенклатура + " указана не правильная дата производства (дата производства плюс срок годности не может быть меньше даты документа)", , , , Отказ);
	//					КонецЕсли;
	//				КонецЕсли;	
	//				//Если (НачалоДня(Объект.Дата) - СтрокаТаб.ДатаПроизводства) / 86400 > СтрокаКеш.ДнейСрока Тогда
	//				//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для номенклатуры " + СтрокаТаб.Номенклатура + " достигнутое предельное количество дней срока годности при приемке", , , , Отказ);
	//				//КонецЕсли;	
	//			КонецЕсли;
	//		КонецЕсли;	
	//	КонецЦикла;	
	//КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ЗаполнитьПризнакИспользованияХарактеристики();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьПризнакИспользованияХарактеристики();
	Задания.Отбор.Элементы[1].ПравоеЗначение=Объект.Ссылка;
	
	//+++АК bara 15673	
	ПерезаполнитьОстаткиПоТоварам();
	//---АК bara 15673	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьТЧНаСервере()
	
	//нельзя здесь отсекать характеристики из остатков, для их обнуления нужно их пихать в документ
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаДокумента"	, ТекущаяДата());
	Запрос.УстановитьПараметр("Склад"			, Объект.Склад);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
	|	ТоварыНаСкладахОстатки.ДатаПроизводства КАК ДатаПроизводства,
	//|	ВЫБОР
	//|		КОГДА ТоварыНаСкладахОстатки.Номенклатура.НеВедетсяУчетПоХарактеристикам
	//|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	//|		ИНАЧЕ ТоварыНаСкладахОстатки.Характеристика
	//|	КОНЕЦ КАК Характеристика,
	|	ТоварыНаСкладахОстатки.ЕдиницаИзмерения,
	|	0 КАК Количество
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаДокумента, Склад = &Склад) КАК ТоварыНаСкладахОстатки
	|   ГДЕ &Условие
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыНаСкладахОстатки.Номенклатура.Наименование";
	
	//+++АК BELN 2017.11.16 ИП-00017261
	Запрос.Текст=СтрЗаменить(Запрос.Текст,"&Условие","  (ТоварыНаСкладахОстатки.Номенклатура В ИЕРАРХИИ (&Группа) ИЛИ &Группа=Значение(Справочник.Номенклатура.ПустаяСсылка))");
	Запрос.УстановитьПараметр("Группа",НоменклатураОтбор);
	//Объект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	Если НеОчищать Тогда
		Выб=Запрос.Выполнить().Выбрать();
		МасСтр=Новый Массив;
		Пока Выб.Следующий() Цикл
			СтрокиОстаток = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура, Характеристика, ДатаПроизводства",
			Выб.Номенклатура, Выб.Характеристика, Выб.ДатаПроизводства));
			Если СтрокиОстаток.Количество()=0 Тогда
				НовСтр=Объект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр,Выб);
				МасСтр.Добавить(НовСтр);
			КонецЕсли; 
		КонецЦикла; 
		СоздатьЗаданиеПоМассивуСтрок(МасСтр);
	Иначе	
		Объект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	КонецЕсли;
	//---АК BELN 2017.11.16 
	
	ПерезаполнитьОстаткиПоТоварам();
	//АК БЕЛН 20170919+
 	Документы.ИнвентаризацияСклад.ЗаполнитьПросрочки(Объект);
	//АК БЕЛН 20170919-
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧПоСкладамПереработчика(СОтборомПоИнвентаризациям = Ложь)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаДокумента", Объект.Дата);
	
	Если СОтборомПоИнвентаризациям Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура,
		|	ТоварыНаСкладахОстатки.Характеристика,
		|	ТоварыНаСкладахОстатки.ДатаПроизводства,
		|	ТоварыНаСкладахОстатки.ЕдиницаИзмерения,
		|	ТоварыНаСкладахОстатки.Склад КАК Склад,
		|	0 КАК Количество
		|ПОМЕСТИТЬ ВТОстаткиНаСкладах
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			&ДатаДокумента,
		|			Склад В
		|				(ВЫБРАТЬ
		|					СпрСклады.Ссылка
		|				ИЗ
		|					Справочник.Склады КАК СпрСклады
		|				ГДЕ
		|					СпрСклады.Владелец = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.СторонняяПереработка)
		|					И &УсловиеПоСкладу
		|					И НЕ СпрСклады.ПометкаУдаления
		|					И НЕ СпрСклады.Ссылка В
		|							(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|								ИнвентаризацияСкладТовары.Склад
		|							ИЗ
		|								Документ.ИнвентаризацияСклад.Товары КАК ИнвентаризацияСкладТовары
		|							ГДЕ
		|								ИнвентаризацияСкладТовары.Ссылка.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаДокумента, НЕДЕЛЯ, -2) И ДОБАВИТЬКДАТЕ(&ДатаДокумента, НЕДЕЛЯ, 1)
		|								И ИнвентаризацияСкладТовары.Ссылка.Проведен = ИСТИНА
		|								И ИнвентаризацияСкладТовары.Ссылка.ПоНесколькимСкладам = ИСТИНА))) КАК ТоварыНаСкладахОстатки";
	Иначе	
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура,
		|	ТоварыНаСкладахОстатки.Характеристика,
		|	ТоварыНаСкладахОстатки.ДатаПроизводства,
		|	ТоварыНаСкладахОстатки.ЕдиницаИзмерения,
		|	ТоварыНаСкладахОстатки.Склад КАК Склад,
		|	0 КАК Количество
		|ПОМЕСТИТЬ ВТОстаткиНаСкладах
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			&ДатаДокумента,
		|			Склад В
		|				(ВЫБРАТЬ
		|					СпрСклады.Ссылка
		|				ИЗ
		|					Справочник.Склады КАК СпрСклады
		|				ГДЕ
		|					СпрСклады.Владелец = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.СторонняяПереработка)
		|					И &УсловиеПоСкладу
		|					И НЕ СпрСклады.ПометкаУдаления)) КАК ТоварыНаСкладахОстатки";
	КонецЕсли;	
	
	//+++АК BELN 2017.11.16 ИП-00017261
	ТекстЗапроса=ТекстЗапроса+" Где (ТоварыНаСкладахОстатки.Номенклатура В ИЕРАРХИИ (&Группа) ИЛИ &Группа=Значение(Справочник.Номенклатура.ПустаяСсылка))";
	Запрос.УстановитьПараметр("Группа",НоменклатураОтбор);
	//---АК BELN 2017.11.16		
	//+++АК SHEP 2018.05.06 ИП-00018453
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.СторонняяПереработка)", "&СтруктурныеЕдиницыСторонняяПереработка");
	Запрос.УстановитьПараметр("СтруктурныеЕдиницыСторонняяПереработка", ОбщегоНазначенияПовтИсп.СторонняяПереработкаДляОрганизации(Объект.Организация));
	//---АК SHEP 2018.05.06

	
	Если НЕ Объект.ПоТоварамБезРолиОтветственных Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ПОМЕСТИТЬ ВТОстаткиНаСкладах", "");
	КонецЕсли;
	
	Если Объект.ПоНесколькимСкладам
			И НЕ Объект.Склад.Пустая() Тогда
		ТекХолдинг = Объект.Склад.Контрагент.ГоловнойКонтрагент;
		Запрос.УстановитьПараметр("Склад"				, Объект.Склад);
		Запрос.УстановитьПараметр("КонтрагентХолдинг"	, ТекХолдинг);
		Запрос.УстановитьПараметр("ОтборПоХолдингу"		, ?(Объект.ПоХолдингуВЦелом	И НЕ ТекХолдинг.Пустая(), 1, 0));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &УсловиеПоСкладу",
			"И ВЫБОР
			|		КОГДА &ОтборПоХолдингу = 1
			|		ТОГДА СпрСклады.Контрагент.ГоловнойКонтрагент = &КонтрагентХолдинг
			|		ИНАЧЕ СпрСклады.Ссылка = &Склад
			|	КОНЕЦ");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "И &УсловиеПоСкладу", "");
	КонецЕсли;
	
	Если НЕ Объект.РольОтветственныхЗаТовар.Пустая() Тогда
		Запрос.УстановитьПараметр("Роль", Объект.РольОтветственныхЗаТовар);
		ТекстЗапроса = ТекстЗапроса + "
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СпрХарактеристики
		|		ПО (СпрХарактеристики.Владелец = ТоварыНаСкладахОстатки.Номенклатура)
		|			И (НЕ СпрХарактеристики.ПометкаУдаления)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|		ПО (ЗначенияСвойствОбъектов.Объект = СпрХарактеристики.Ссылка)
		|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
		|			И (ЗначенияСвойствОбъектов.Значение = ТоварыНаСкладахОстатки.Склад.Контрагент)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних КАК СоответствиеОбъектРольСрезПоследних
		|		ПО СоответствиеОбъектРольСрезПоследних.Объект = СпрХарактеристики.Ссылка
		|			И СоответствиеОбъектРольСрезПоследних.РольПользователя = &Роль
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних КАК СоответствиеОбъектРольСрезПоследних_3
		|		ПО (СоответствиеОбъектРольСрезПоследних_3.Объект = СпрХарактеристики.Ссылка)
		|			И (НЕ СоответствиеОбъектРольСрезПоследних_3.РольПользователя = &Роль)
		|			И (НЕ СоответствиеОбъектРольСрезПоследних_3.РольПользователя = ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних КАК СоответствиеОбъектРольСрезПоследних_2
		|		ПО СоответствиеОбъектРольСрезПоследних_2.Объект = ТоварыНаСкладахОстатки.Склад.Контрагент
		|			И СоответствиеОбъектРольСрезПоследних_2.РольПользователя = &Роль
		|ГДЕ (НЕ СоответствиеОбъектРольСрезПоследних.Объект ЕСТЬ NULL)
		|	ИЛИ (СоответствиеОбъектРольСрезПоследних_3.Объект ЕСТЬ NULL
		|			И НЕ СоответствиеОбъектРольСрезПоследних_2.Объект ЕСТЬ NULL)";
	Иначе
		Если Объект.ПоТоварамБезРолиОтветственных Тогда
			ТекстЗапроса = ТекстЗапроса +
			";
			|ВЫБРАТЬ
			|	ТоварыНаСкладахОстатки.Номенклатура,
			|	ТоварыНаСкладахОстатки.Характеристика,
			|	ТоварыНаСкладахОстатки.ДатаПроизводства,
			|	ТоварыНаСкладахОстатки.ЕдиницаИзмерения,
			|	ТоварыНаСкладахОстатки.Склад КАК Склад,
			|	ТоварыНаСкладахОстатки.Количество КАК Количество
			|ИЗ
			|	ВТОстаткиНаСкладах КАК ТоварыНаСкладахОстатки
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ВТОстаткиНаСкладах.Номенклатура КАК Номенклатура,
			|			ВТОстаткиНаСкладах.Характеристика КАК Характеристика,
			|			ВТОстаткиНаСкладах.ДатаПроизводства КАК ДатаПроизводства,
			|			ВТОстаткиНаСкладах.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
			|			ВТОстаткиНаСкладах.Склад КАК Склад
			|		ИЗ
			|			ВТОстаткиНаСкладах КАК ВТОстаткиНаСкладах
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей КАК СпрРолиПользователей
			|				ПО (НЕ СпрРолиПользователей.ПометкаУдаления)
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СпрХарактеристики
			|				ПО (СпрХарактеристики.Владелец = ВТОстаткиНаСкладах.Номенклатура)
			|					И (НЕ СпрХарактеристики.ПометкаУдаления)
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
			|				ПО (ЗначенияСвойствОбъектов.Объект = СпрХарактеристики.Ссылка)
			|					И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
			|					И (ЗначенияСвойствОбъектов.Значение = ВТОстаткиНаСкладах.Склад.Контрагент)
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних КАК СоответствиеОбъектРольСрезПоследних
			|				ПО (СоответствиеОбъектРольСрезПоследних.Объект = СпрХарактеристики.Ссылка)
			|					И (СоответствиеОбъектРольСрезПоследних.РольПользователя = СпрРолиПользователей.Ссылка)
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних КАК СоответствиеОбъектРольСрезПоследних_3
			|				ПО (СоответствиеОбъектРольСрезПоследних_3.Объект = СпрХарактеристики.Ссылка)
			|					И (НЕ СоответствиеОбъектРольСрезПоследних_3.РольПользователя = СпрРолиПользователей.Ссылка)
			|					И (НЕ СоответствиеОбъектРольСрезПоследних_3.РольПользователя = ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка))
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних КАК СоответствиеОбъектРольСрезПоследних_2
			|				ПО (СоответствиеОбъектРольСрезПоследних_2.Объект = ВТОстаткиНаСкладах.Склад.Контрагент)
			|					И (СоответствиеОбъектРольСрезПоследних_2.РольПользователя = СпрРолиПользователей.Ссылка)
			|		ГДЕ
			|			(НЕ СоответствиеОбъектРольСрезПоследних.Объект ЕСТЬ NULL 
			|					ИЛИ СоответствиеОбъектРольСрезПоследних_3.Объект ЕСТЬ NULL 
			|						И НЕ СоответствиеОбъектРольСрезПоследних_2.Объект ЕСТЬ NULL )) КАК НенужныеТовары
			|		ПО (НенужныеТовары.Характеристика = ТоварыНаСкладахОстатки.Характеристика)
			|			И (НенужныеТовары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура)
			|			И (НенужныеТовары.ДатаПроизводства = ТоварыНаСкладахОстатки.ДатаПроизводства)
			|			И (НенужныеТовары.ЕдиницаИзмерения = ТоварыНаСкладахОстатки.ЕдиницаИзмерения)
			|			И (НенужныеТовары.Склад = ТоварыНаСкладахОстатки.Склад)
			|ГДЕ
			|	НенужныеТовары.Номенклатура ЕСТЬ NULL ";
		КонецЕсли;
	КонецЕсли;

    ТекстЗапроса = ТекстЗапроса + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыНаСкладахОстатки.Склад,
	|	ТоварыНаСкладахОстатки.Номенклатура.Наименование";
	Запрос.Текст = ТекстЗапроса;
	
	//+++АК BELN 2017.11.16 ИП-00017261
	Если НеОчищать Тогда
		Выб=Запрос.Выполнить().Выбрать();
		МасСтр=Новый Массив;
		Пока Выб.Следующий() Цикл
			СтрокиОстаток = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура, Характеристика, ДатаПроизводства, Склад",
			Выб.Номенклатура, Выб.Характеристика, Выб.ДатаПроизводства, ?(Объект.ПоНесколькимСкладам, Выб.Склад, Объект.Склад)));
			Если СтрокиОстаток.Количество()=0 Тогда
				НовСтр=Объект.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр,Выб);
				МасСтр.Добавить(НовСтр);
			КонецЕсли; 
		КонецЦикла; 
		ПерезаполнитьОстаткиПоТоварам();
		Для каждого Эл Из МасСтр Цикл
			Эл.Количество=Эл.УчетноеКоличество;
		КонецЦикла; 
		СоздатьЗаданиеПоМассивуСтрок(МасСтр);
	Иначе	
		Объект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
		ПерезаполнитьОстаткиПоТоварам(Истина);
	КонецЕсли;
	//---АК BELN 2017.11.16 
	
	
	
	//АК БЕЛН 20170919+
 	Документы.ИнвентаризацияСклад.ЗаполнитьПросрочки(Объект);
	//АК БЕЛН 20170919-
КонецПроцедуры

//+++АК BELN 2017.11.16 ИП-00017261
&НаСервере
Процедура СоздатьЗаданиеПоМассивуСтрок(МасСтр)
	Если МасСтр.Количество()=0 Тогда
		Возврат;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаданиеНаИнвентаризацию.Ссылка
		|ИЗ
		|	Документ.ЗаданиеНаИнвентаризацию КАК ЗаданиеНаИнвентаризацию
		|ГДЕ
		|	ЗаданиеНаИнвентаризацию.Инвентаризация = &Инвентаризация
		|	И ЗаданиеНаИнвентаризацию.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Инвентаризация", Объект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли; 

	
	
	МасСклад=Новый Массив;
	Если Объект.ПоНесколькимСкладам Тогда
		Для каждого Эл Из МасСтр Цикл
			Если МасСклад.Найти(Эл.Склад)=Неопределено Тогда
				МасСклад.Добавить(Эл.Склад);
			КонецЕсли; 
		КонецЦикла; 
	Иначе	
		МасСклад.Добавить(Объект.Склад);
	
	КонецЕсли; 
	
	Для каждого ЭлСкл Из МасСклад Цикл
		НовДок=Документы.ЗаданиеНаИнвентаризацию.СоздатьДокумент();
		НовДок.Дата=Объект.Дата;
		НовДок.Склад=?(Объект.ПоНесколькимСкладам, ЭлСкл, Объект.Склад);
		НовДок.Инвентаризация=Объект.Ссылка;
		НовДок.Автор=Объект.Автор;
		НовДок.СтруктурнаяЕдиница=?(Объект.ПоНесколькимСкладам, ЭлСкл.Владелец, Объект.Склад.Владелец);
		
		Для каждого Эл Из МасСтр Цикл
			Если (Эл.Склад)=ЭлСкл ИЛИ НЕ Объект.ПоНесколькимСкладам Тогда
				НовСтр=НовДок.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр,Эл);
			КонецЕсли; 
		КонецЦикла; 
		
		НовДок.Записать(РежимЗаписиДокумента.Проведение);
	
	КонецЦикла; 
			
	

КонецПроцедуры
 
//---АК BELN 2017.11.16 

&НаСервереБезКонтекста
Функция ЕстьПравоПроводитьПоПустомуСкладу()
	
	Возврат УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.МожетПроводитьИнвентаризациюПоПустомуСкладу, Ложь); 
	
КонецФункции	

&НаКлиенте
Процедура ЗаполнитьТЧ(Команда)
	//+++АК BELN 2017.11.16 ИП-00017261
	Если НЕ НеОчищать Тогда
		Если Объект.Товары.Количество() > 0 Тогда
			Режим = РежимДиалогаВопрос.ДаНет;
			Текст = "Внимание!" + Символы.ПС + "Табличная часть будет очищена." + Символы.ПС + "Продолжить выполнение операции?";
			Ответ = Вопрос(Текст, Режим, 0);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
			    Возврат;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли; 
	//---АК BELN 2017.11.16  
	Если Объект.ПоНесколькимСкладам Тогда
		
		ЗаполнитьТЧПоСкладамПереработчика();
		
	Иначе
		
		Если ЗначениеЗаполнено(Объект.Склад)
				ИЛИ ЕстьПравоПроводитьПоПустомуСкладу() Тогда
			ЗаполнитьТЧНаСервере();
		Иначе
			Предупреждение("Следует заполнить реквизит Склад");
		КонецЕсли
		
	КонецЕсли;
	
	ЗаполнитьПризнакИспользованияХарактеристики();
	
	//+++ AK BARA ИП-00015673.000.00000001
	АК_ЗаполитьРасхождение();
     //--- AK BARA ИП-00015673.000.00000001

КонецПроцедуры

//+++ AK BARA ИП-00015673.000.00000001
&НаКлиенте
Процедура АК_ЗаполитьРасхождение()
                      
 Для каждого Стр Из Объект.Товары Цикл
 
 	Стр.Расхождение = Стр.Количество - Стр.УчетноеКоличество ;
 
 КонецЦикла;
	

КонецПроцедуры
//--- AK BARA ИП-00015673.000.00000001

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ПерезаполнитьОстаткиПоТоварам();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладОчистка(Элемент, СтандартнаяОбработка)
	Если Объект.Товары.Количество() > 0 Тогда
		Ответ = Вопрос("Таблица товаров будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
		Объект.Товары.Очистить();
	КонецЕсли
КонецПроцедуры

//+++АК KIRN 2018.05.17 ИП-00018728 
&НаСервере 
Процедура СкладПриИзмененииНаСервере()
	Объект.Организация = Объект.Склад.Организация;	
КонецПРоцедуры
//---АК KIRN 

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	Если Объект.Товары.Количество() > 0 Тогда
		Ответ = Вопрос("Таблица товаров будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Объект.Склад = ПредСклад;
			Возврат;
		КонецЕсли;	
		Объект.Товары.Очистить();
	КонецЕсли;
	ПредСклад = Объект.Склад;
	
	//+++АК KIRN 2018.05.17 ИП-00018728
	СкладПриИзмененииНаСервере();
	//---АК KIRN 
	
	Если Объект.ПоНесколькимСкладам Тогда
		ЗаполнитьТЧПоПроизводителю();
	Иначе
		ПерезаполнитьОстаткиПоТоварам();
	КонецЕсли;
	
	ЗаполнитьПризнакИспользованияХарактеристики();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Объект.Товары.Количество() > 0 Тогда
		Ответ = Вопрос("Таблица товаров будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			СтандартнаяОбработка = Ложь;
			Объект.Склад = ПредСклад;
			Возврат;
		КонецЕсли;	
		Объект.Товары.Очистить();
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПоНесколькимСкладамПриИзменении(Элемент)
	
	ЗаполнитьРеквизитСклад();	
	УстановитьВидимостьИДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура РольОтветственныхЗаТоварПриИзменении(Элемент)
	
	Если НЕ Объект.РольОтветственныхЗаТовар.Пустая() Тогда
		Объект.ПоТоварамБезРолиОтветственных = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоТоварамБезРолиОтветственныхПриИзменении(Элемент)
	
	Если Объект.ПоТоварамБезРолиОтветственных Тогда
		Объект.РольОтветственныхЗаТовар = ПредопределенноеЗначение("Справочник.РолиПользователей.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ТоварыСортироватьПоВозрастанию(Команда)
	
	СортироватьТоварыСервер();
	Элементы.Товары.Обновить();
	
КонецПроцедуры

Процедура СортироватьТоварыСервер(ПоВозрастанию = Истина)
	
	Объект.Товары.Сортировать("Номенклатура" + ?(НЕ ПоВозрастанию, " УБЫВ", ""));
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСортироватьПоУбыванию(Команда)
	
	СортироватьТоварыСервер(Ложь);
	Элементы.Товары.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Товары.ТекущиеДанные;
	СтруктураДанные = Новый Структура;
	СтруктураДанные.Вставить("Номенклатура", 	СтрокаТабличнойЧасти.Номенклатура);
	СтруктураДанные.Вставить("Характеристика", 	?(НеВедетсяУчетПоХарактеристикам(СтрокаТабличнойЧасти.Номенклатура), ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка"), СтрокаТабличнойЧасти.Характеристика));
	
	СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
	
	СтрокаТабличнойЧасти.Характеристика		= СтруктураДанные.Характеристика;
	СтрокаТабличнойЧасти.ЕдиницаИзмерения 	= СтруктураДанные.ЕдиницаИзмерения;
	СтрокаТабличнойЧасти.Количество 		= 1;
	СтрокаТабличнойЧасти.УчетноеКоличество	= ПолучитьОстатокПоТовару(?(Объект.ПоНесколькимСкладам, СтрокаТабличнойЧасти.Склад, Объект.Склад), СтрокаТабличнойЧасти.Номенклатура
												, СтрокаТабличнойЧасти.Характеристика, СтрокаТабличнойЧасти.ЕдиницаИзмерения, Объект.Дата - 1, СтрокаТабличнойЧасти.ДатаПроизводства);
												
	ЗаполнитьПризнакИспользованияХарактеристики();											
												
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Не ПолныйВыборПоСкладу() Тогда
		СтандартнаяОбработка=Ложь;
		СтрокаТабличнойЧасти = Элементы.Товары.ТекущиеДанные;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Склад",Объект.Склад);
		Результат = ОткрытьФормуМодально("Справочник.Номенклатура.Форма.ФормаВыбораУправляемая",ПараметрыФормы);
		Если Результат = Неопределено Тогда
			Возврат;
		Иначе
			СтрокаТабличнойЧасти.Номенклатура = Результат;
			ТоварыНоменклатураПриИзменении(Элемент);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыХарактеристикаПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Товары.ТекущиеДанные;
	СтрокаТабличнойЧасти.УчетноеКоличество	= ПолучитьОстатокПоТовару(?(Объект.ПоНесколькимСкладам, СтрокаТабличнойЧасти.Склад, Объект.Склад), СтрокаТабличнойЧасти.Номенклатура
												, СтрокаТабличнойЧасти.Характеристика, СтрокаТабличнойЧасти.ЕдиницаИзмерения, Объект.Дата - 1, СтрокаТабличнойЧасти.ДатаПроизводства);
	
КонецПроцедуры
											
&НаКлиенте
Процедура ТоварыДатаПроизводстваПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Товары.ТекущиеДанные;
	СтрокаТабличнойЧасти.УчетноеКоличество	= ПолучитьОстатокПоТовару(?(Объект.ПоНесколькимСкладам, СтрокаТабличнойЧасти.Склад, Объект.Склад), СтрокаТабличнойЧасти.Номенклатура
												, СтрокаТабличнойЧасти.Характеристика, СтрокаТабличнойЧасти.ЕдиницаИзмерения, Объект.Дата - 1, СтрокаТабличнойЧасти.ДатаПроизводства);
	//АК БЕЛН 20170919+
	СтрокаТабличнойЧасти.Просрочка=ПолучитьПросрочку(СтрокаТабличнойЧасти.Характеристика,СтрокаТабличнойЧасти.ДатаПроизводства,Объект.Дата);
	//АК БЕЛН 20170919-
КонецПроцедуры

//АК БЕЛН 20170919+
Функция ПолучитьПросрочку(Характеристика,ДатаПроизводства,Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	&Характеристика как Характеристика,
		|	&ДатаПроизводства как ДатаПроизводства
		|ПОМЕСТИТЬ вт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
		|	ВЫБОР
		|		КОГДА вт.ДатаПроизводства <> ДАТАВРЕМЯ(1, 1, 1)
		|				И НЕ ХарактеристикиНоменклатуры.Ссылка.СрокГодности = 0
		|			ТОГДА ВЫБОР
		|					КОГДА РАЗНОСТЬДАТ(вт.ДатаПроизводства, &КонецПериода, ДЕНЬ) <= ХарактеристикиНоменклатуры.Ссылка.СрокГодности * ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка.ТипСрокаГодности.КоэффициентВСутках, 0) / 2
		|						ТОГДА 1
		|					КОГДА РАЗНОСТЬДАТ(вт.ДатаПроизводства, &КонецПериода, ДЕНЬ) <= ХарактеристикиНоменклатуры.Ссылка.СрокГодности * ЕСТЬNULL(ХарактеристикиНоменклатуры.Ссылка.ТипСрокаГодности.КоэффициентВСутках, 0) * 2 / 3
		|						ТОГДА 2
		|					ИНАЧЕ 3
		|				КОНЕЦ
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Просрочка,
		|	вт.ДатаПроизводства
		|ИЗ
		|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт КАК вт
		|		ПО ХарактеристикиНоменклатуры.Ссылка = вт.Характеристика";
	
	Запрос.УстановитьПараметр("Характеристика", Характеристика);
	Запрос.УстановитьПараметр("ДатаПроизводства", ДатаПроизводства);
	Запрос.УстановитьПараметр("КонецПериода", НачалоДня(Дата));
	РезультатЗапроса = Запрос.Выполнить();
	
	Выб = РезультатЗапроса.Выбрать();
	Если Выб.Следующий() Тогда
		Возврат Выб.Просрочка;	
	Иначе	
		Возврат 0;	
	КонецЕсли; 	
	

КонецФункции
//АК БЕЛН 20170919-

Функция ПолучитьСкладПоИд(ИД)
	
	Если СтрДлина(ИД) >= 36 Тогда
		Возврат Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор(ИД));
	Иначе	
		Запрос = Новый Запрос();
		Попытка
			Запрос.УстановитьПараметр("ИД", Число(ИД));
		Исключение
			Запрос.УстановитьПараметр("ИД", 0);
		КонецПопытки;	
		Запрос.Текст = "ВЫБРАТЬ
		               |	Склады.Ссылка
		               |ИЗ
		               |	Справочник.Склады КАК Склады
		               |ГДЕ
		               |	Склады.Контрагент.ИД = &ИД
		               |	И Склады.Владелец = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.СторонняяПереработка)";
		
		//+++АК SHEP 2018.05.06 ИП-00018453
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.СторонняяПереработка)", "&СтруктурныеЕдиницыСторонняяПереработка");
		Запрос.УстановитьПараметр("СтруктурныеЕдиницыСторонняяПереработка", ОбщегоНазначенияПовтИсп.СторонняяПереработкаДляОрганизации(Объект.Организация));
		//---АК SHEP 2018.05.06
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;	
	
КонецФункции	

Функция ПолучитьТоварПоАйди(Ид)
	Возврат Справочники.Номенклатура.НайтиПоРеквизиту("id_tov", Ид);
КонецФункции	

&НаСервере
Функция ПолучитьКешСкладов()
	
	ЗапросКеш = Новый Запрос();
	ЗапросКеш.Текст = "ВЫБРАТЬ
	                  |	Склады.Ссылка,
	                  |	Склады.ИД
	                  |ИЗ
	                  |	Справочник.Склады КАК Склады";
					  
	Соответствие = Новый Соответствие();
	Выборка = ЗапросКеш.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Соответствие.Вставить(Выборка.ИД, Выборка.Ссылка);
	КонецЦикла;
	
	Возврат Соответствие;
	
КонецФункции	

&НаКлиенте
Процедура ЗагрузитьИзФайлаПоставщика(Команда)
	
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбора.Фильтр = "Файлы Excel (*.xls, *.xlsx)|*.xls;*.xlsx";
	ДиалогВыбора.МножественныйВыбор = Ложь;
	Если ДиалогВыбора.Выбрать() Тогда
		ИмяФайла = ДиалогВыбора.ПолноеИмяФайла;
		
		Попытка
			ExcelApp = Новый COMОбъект("Excel.Application");
			РабочаяКнига=ExcelApp.WorkBooks;
			РабочаяКнига = РабочаяКнига.Open(ИмяФайла,0,0); 
			ExcelApp.DisplayAlerts = 0; 
			РабочийЛист=РабочаяКнига.Worksheets(1);
			
			ИдКонтр = СокрЛП(РабочийЛист.Range("J2").Text);
			ИдКонтр = СтрЗаменить(ИдКонтр, " ", "");
			ИдКонтр = СтрЗаменить(ИдКонтр, Символы.НПП, "");
			
			НовыйФормат = Ложь;
			Если НЕ ЗначениеЗаполнено(ИдКонтр) Тогда
				ИдКонтр = СокрЛП(РабочийЛист.Range("K2").Text);
				ИдКонтр = СтрЗаменить(ИдКонтр, " ", "");
				ИдКонтр = СтрЗаменить(ИдКонтр, Символы.НПП, "");
				Если ЗначениеЗаполнено(ИдКонтр) Тогда
					НовыйФормат = Истина;
				Иначе
					Сообщить("Не найден id контрагента в файле");
					Возврат;
				КонецЕсли;	
			КонецЕсли;	
			
			НовыйФормат2_0 = Ложь;
			Если НовыйФормат Тогда
				Если НРег(РабочийЛист.Range("B6").Text) = "контрагент" Тогда
					НовыйФормат2_0 = Истина;
				КонецЕсли;	
			КонецЕсли;	
			
			СкладПоставщика = ПолучитьСкладПоИд(ИдКонтр);
			Объект.ПоНесколькимСкладам = Истина;
			
			СоответствиеСклады = ПолучитьКешСкладов();
			
			Счетчик = 7;
			Пока Истина Цикл
				Если ПустаяСтрока(РабочийЛист.Range("C" + Формат(Счетчик, "ЧГ=0")).Text) Тогда
					Прервать;
				КонецЕсли;
				СкладПоСтроке = Неопределено;
				Если НовыйФормат2_0 Тогда
					Ид = СокрЛП(РабочийЛист.Range("F" + Формат(Счетчик, "ЧГ=0")).Text);
					ИдСклад = СокрЛП(РабочийЛист.Range("C" + Формат(Счетчик, "ЧГ=0")).Text);
					ИдСклад = СтрЗаменить(ИдСклад, " ", "");
					ИдСклад = СтрЗаменить(ИдСклад, Символы.НПП, "");
					Попытка
						ИдСклад = Число(ИдСклад);
						СкладПоСтроке = СоответствиеСклады.Получить(ИдСклад);
					Исключение
					КонецПопытки;	
				Иначе	
					Ид = СокрЛП(РабочийЛист.Range(?(НовыйФормат, "D", "C") + Формат(Счетчик, "ЧГ=0")).Text);
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено(СкладПоСтроке) Тогда
					СкладПоСтроке = СкладПоставщика;
				КонецЕсли;	
				Ид = СтрЗаменить(Ид, " ", "");
				Ид = СтрЗаменить(Ид, Символы.НПП, "");
				Попытка
					Товар = ПолучитьТоварПоАйди(Число(Ид));
					Если ЗначениеЗаполнено(Товар) Тогда
						СтрокиТовар = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура, Склад", Товар, СкладПоСтроке));
						Если СтрокиТовар.Количество() = 0 Тогда
							СтрокаТабличнойЧасти = Объект.Товары.Добавить();
							СтрокаТабличнойЧасти.Номенклатура = Товар;
						Иначе
							СтрокаТабличнойЧасти = СтрокиТовар[0];
						КонецЕсли;	
					КонецЕсли;
					
					СтруктураДанные = Новый Структура;
					СтруктураДанные.Вставить("Номенклатура", 	СтрокаТабличнойЧасти.Номенклатура);
					СтруктураДанные.Вставить("Характеристика", 	?(НеВедетсяУчетПоХарактеристикам(СтрокаТабличнойЧасти.Номенклатура), ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка"), СтрокаТабличнойЧасти.Характеристика));
					
					СтруктураДанные = ПолучитьДанныеНоменклатураПриИзменении(СтруктураДанные);
					
					СтрокаТабличнойЧасти.Склад = СкладПоСтроке;
					СтрокаТабличнойЧасти.Характеристика		= СтруктураДанные.Характеристика;
					СтрокаТабличнойЧасти.ЕдиницаИзмерения 	= СтруктураДанные.ЕдиницаИзмерения;
					СтрокаТабличнойЧасти.Количество 		= 1;
					СтрокаТабличнойЧасти.УчетноеКоличество	= ПолучитьОстатокПоТовару(?(Объект.ПоНесколькимСкладам, СтрокаТабличнойЧасти.Склад, Объект.Склад), СтрокаТабличнойЧасти.Номенклатура
												, СтрокаТабличнойЧасти.Характеристика, СтрокаТабличнойЧасти.ЕдиницаИзмерения, Объект.Дата - 1, СтрокаТабличнойЧасти.ДатаПроизводства);
												
					Если НовыйФормат2_0 Тогда
						Колво = СокрЛП(РабочийЛист.Range("L" + Формат(Счетчик, "ЧГ=0")).Text);
					Иначе								
						Колво = СокрЛП(РабочийЛист.Range(?(НовыйФормат, "J", "I") + Формат(Счетчик, "ЧГ=0")).Text);
					КонецЕсли;	
					Колво = СтрЗаменить(Колво, " ", "");
					Колво = СтрЗаменить(Колво, Символы.НПП, "");
					
					СтрокаТабличнойЧасти.Количество = Число(Колво);
				Исключение
					Сообщить(ОписаниеОшибки());
				КонецПопытки;	
				Счетчик = Счетчик + 1;
			КонецЦикла;
			
			ЗаполнитьПризнакИспользованияХарактеристики();
			
			//АК БЕЛН 20170919+
		//Документы.ИнвентаризацияСклад.ЗаполнитьПросрочки(Объект);
			//АК БЕЛН 20170919-
			РабочаяКнига.Close();
			ExcelApp.Quit();
			
			ExcelApp = Неопределено;
			РабочаяКнига = Неопределено; 
			РабочийЛист = Неопределено;
		Исключение 
			Сообщить(ОписаниеОшибки());
			РабочийЛист = Неопределено;
			РабочаяКнига = Неопределено;
			ExcelApp = Неопределено; 
			
		КонецПопытки;
	КонецЕсли;
	
	УстановитьВидимостьИДоступность();
	
	//+++ AK BARA ИП-00015673.000.00000001
	АК_ЗаполитьРасхождение();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПоставщикамБезИнвентаризаций(Команда)
	
	Если Не Объект.ПоНесколькимСкладам Тогда
		Сообщить("Данное заполнение можно выполнять только с признаком сторонние переработчики");
		Возврат;
	КонецЕсли;	
	
	Если Объект.Товары.Количество() > 0 Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Текст = "Внимание!" + Символы.ПС + "Табличная часть будет очищена." + Символы.ПС + "Продолжить выполнение операции?";
		Ответ = Вопрос(Текст, Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
		    Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	//
	ЗаполнитьТЧПоСкладамПереработчика(Истина);
	
	ЗаполнитьПризнакИспользованияХарактеристики();
	
	//+++ AK BARA ИП-00015673.000.00000001
	АК_ЗаполитьРасхождение();
	//--- AK BARA ИП-00015673.000.00000001

КонецПроцедуры
//АК_БЕЛН_18_03_16++
&НаКлиенте
Процедура ЗаполнитьЗадания(Команда)
	Если  Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Сообщить("Необходимо записать документ");
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗаданияСервер();
	Элементы.Задания.Обновить();
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьЗаданияСервер()
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаданиеНаИнвентаризацию.Ссылка
		|ИЗ
		|	Документ.ЗаданиеНаИнвентаризацию КАК ЗаданиеНаИнвентаризацию
		|ГДЕ
		|	ЗаданиеНаИнвентаризацию.Инвентаризация = &Инвентаризация
		|	И НЕ ЗаданиеНаИнвентаризацию.ПометкаУдаления";

	Запрос.УстановитьПараметр("Инвентаризация", Объект.Ссылка);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Об=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Если Об.Проведен Тогда
			Об.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли; 
		Об.ПометкаУдаления=Истина;
		Об.Записать(РежимЗаписиДокумента.Запись);
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнвентаризацияСкладТовары.Номенклатура,
		|	ИнвентаризацияСкладТовары.Характеристика,
		|	ИнвентаризацияСкладТовары.ЕдиницаИзмерения,
		|	0 КАК Количество,
		|	ИнвентаризацияСкладТовары.ДатаПроизводства,
		|	ИнвентаризацияСкладТовары.Номенклатура.Родитель.Родитель КАК НоменклатураРодитель,
		|	ВЫБОР
		|		КОГДА ИнвентаризацияСкладТовары.Ссылка.ПоНесколькимСкладам
		|			ТОГДА ИнвентаризацияСкладТовары.Склад
		|		ИНАЧЕ ИнвентаризацияСкладТовары.Ссылка.Склад
		|	КОНЕЦ КАК Склад
		|ИЗ
		|	Документ.ИнвентаризацияСклад.Товары КАК ИнвентаризацияСкладТовары
		|ГДЕ
		|	ИнвентаризацияСкладТовары.Ссылка = &Ссылка
		|ИТОГИ ПО
		|	НоменклатураРодитель,
		|	Склад";

	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);

	Результат = Запрос.Выполнить();

	ВыборкаНоменклатураРодитель = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатураРодитель.Следующий() Цикл
		ВыборкаСклад = ВыборкаНоменклатураРодитель.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСклад.Следующий() Цикл
			ВыборкаДетальныеЗаписи = ВыборкаСклад.Выбрать();
			НовДок=Документы.ЗаданиеНаИнвентаризацию.СоздатьДокумент();
			НовДок.Дата=Объект.Дата;
			НовДок.Склад=Объект.Склад;
			НовДок.Инвентаризация=Объект.Ссылка;
			НовДок.Автор=Объект.Автор;
			НовДок.СтруктурнаяЕдиница=Объект.Склад.Владелец;
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				НовСтр=НовДок.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр,ВыборкаДетальныеЗаписи);
			КонецЦикла;
			НовДок.Записать(РежимЗаписиДокумента.Проведение);
		КонецЦикла;
		
	КонецЦикла;
	ЭтаФорма.Модифицированность=Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧИзЗаданийСКамерами()
	Объект.Товары.Очистить();
	Объект.ЗаданияНаИнвентаризацию.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаДокумента"	, ТекущаяДата());
	Запрос.УстановитьПараметр("Склад"			, Объект.Склад);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
	|	ТоварыНаСкладахОстатки.ДатаПроизводства КАК ДатаПроизводства,
	//|	ВЫБОР
	//|		КОГДА ТоварыНаСкладахОстатки.Номенклатура.НеВедетсяУчетПоХарактеристикам
	//|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	//|		ИНАЧЕ ТоварыНаСкладахОстатки.Характеристика
	//|	КОНЕЦ КАК Характеристика,
	|	ТоварыНаСкладахОстатки.ЕдиницаИзмерения,
	|	0 КАК Количество
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаДокумента, Склад = &Склад) КАК ТоварыНаСкладахОстатки
	|   ГДЕ &Условие
	|УПОРЯДОЧИТЬ ПО
	|	ТоварыНаСкладахОстатки.Номенклатура.Наименование";
	
	//+++АК BELN 2017.11.16 ИП-00017261
	Запрос.Текст=СтрЗаменить(Запрос.Текст,"&Условие","  (ТоварыНаСкладахОстатки.Номенклатура В ИЕРАРХИИ (&Группа) ИЛИ &Группа=Значение(Справочник.Номенклатура.ПустаяСсылка))");
	Запрос.УстановитьПараметр("Группа",НоменклатураОтбор);
	//Объект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	Объект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоступностьТоваровНаСкладах.Номенклатура
		|ПОМЕСТИТЬ втНом
		|ИЗ
		|	РегистрСведений.ДоступностьТоваровНаСкладах КАК ДоступностьТоваровНаСкладах
		|ГДЕ
		|	ДоступностьТоваровНаСкладах.Склад = &Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаданиеНаИнвентаризациюТовары.Ссылка,
		|	ЗаданиеНаИнвентаризациюТовары.НомерСтроки,
		|	ЗаданиеНаИнвентаризациюТовары.Номенклатура,
		|	ЗаданиеНаИнвентаризациюТовары.Характеристика,
		|	ЗаданиеНаИнвентаризациюТовары.ЕдиницаИзмерения,
		|	ЗаданиеНаИнвентаризациюТовары.ДатаПроизводства,
		|	ЗаданиеНаИнвентаризациюТовары.Количество
		|ПОМЕСТИТЬ втЗадания
		|ИЗ
		|	Документ.ЗаданиеНаИнвентаризацию.Товары КАК ЗаданиеНаИнвентаризациюТовары
		|ГДЕ
		|	ЗаданиеНаИнвентаризациюТовары.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
		|	И ЗаданиеНаИнвентаризациюТовары.Ссылка.Закрыто
		|	И ЗаданиеНаИнвентаризациюТовары.Ссылка.Инвентаризация = ЗНАЧЕНИЕ(Документ.ИнвентаризацияСклад.ПустаяСсылка)
		|	И ЗаданиеНаИнвентаризациюТовары.Ссылка.Проведен
		|	И ЗаданиеНаИнвентаризациюТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И ЗаданиеНаИнвентаризациюТовары.Ссылка.Камера <> ЗНАЧЕНИЕ(Справочник.Камеры.ПустаяСсылка)
		|	И ЗаданиеНаИнвентаризациюТовары.Ссылка.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втЗадания.Номенклатура,
		|	втЗадания.Номенклатура.ЕдиницаХраненияОстатков,
		|	втЗадания.Характеристика,
		|	втЗадания.ЕдиницаИзмерения,
		|	втЗадания.ДатаПроизводства,
		|	втЗадания.Количество КАК Количество,
		|	втЗадания.Ссылка
		|ПОМЕСТИТЬ втИтог
		|ИЗ
		|	втНом КАК втНом
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЗадания КАК втЗадания
		|		ПО втНом.Номенклатура = втЗадания.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втИтог.Номенклатура КАК Номенклатура,
		|	втИтог.НоменклатураЕдиницаХраненияОстатков,
		|	втИтог.Характеристика,
		|	втИтог.ЕдиницаИзмерения,
		|	втИтог.ДатаПроизводства,
		|	СУММА(втИтог.Количество) КАК Количество
		|ИЗ
		|	втИтог КАК втИтог
		|
		|СГРУППИРОВАТЬ ПО
		|	втИтог.Номенклатура,
		|	втИтог.НоменклатураЕдиницаХраненияОстатков,
		|	втИтог.Характеристика,
		|	втИтог.ЕдиницаИзмерения,
		|	втИтог.ДатаПроизводства
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втИтог.Ссылка
		|ИЗ
		|	втИтог КАК втИтог
		|
		|СГРУППИРОВАТЬ ПО
		|	втИтог.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втНом.Номенклатура
		|ИЗ
		|	втНом КАК втНом";

	Запрос.УстановитьПараметр("Дата1", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("Дата2", КонецДня(Объект.Дата));
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Объект.Склад.Владелец);
	
	Результат = Запрос.ВыполнитьПакет();

	ТЗТовары = Результат[3].Выгрузить();
	ТЗЗадания = Результат[4].Выгрузить();
	ТЗДоступныеТовары = Результат[5].Выгрузить();
	
	

	Для Каждого СтрокаТаб Из Объект.Товары Цикл
		СтрокаТаб.Количество = 0;
	КонецЦикла;	
	Для Каждого СтрокаТаб Из ТЗТовары Цикл
		Номенклатура = СтрокаТаб.Номенклатура;
		Характеристика = СтрокаТаб.Характеристика;
		СтрокиВДоке = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура, Характеристика, ДатаПроизводства", Номенклатура, Характеристика, СтрокаТаб.ДатаПроизводства));
		Если СтрокиВДоке.Количество() > 0 Тогда
			//СтрокаВДоке = Неопределено;
			//Для каждого Стр Из СтрокиВДоке Цикл
			//	Если Стр.Склад=СтрокаТаб.Склад Тогда
			//		СтрокаВДоке=Стр;
			//	    Прервать;
			//	КонецЕсли; 
			//КонецЦикла;
			//Если СтрокаВДоке = Неопределено Тогда
			//	Для каждого Стр Из СтрокиВДоке Цикл
			//		Если Не ЗначениеЗаполнено(Стр.Склад) Тогда
			//			СтрокаВДоке=Стр;
			//		    Прервать;
			//		КонецЕсли; 
			//	КонецЦикла;
			//КонецЕсли; 
			СтрокаВДоке=СтрокиВДоке[0];
		Иначе
			//СтрокиВДоке = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура, Характеристика", Номенклатура, Характеристика));
			//Если СтрокиВДоке.Количество() > 0 Тогда
			//	СтрокаВДоке = Неопределено;
			//	Для каждого Стр Из СтрокиВДоке Цикл
			//		Если Стр.Склад=СтрокаТаб.Склад Тогда
			//			СтрокаВДоке=Стр;
			//		    Прервать;
			//		КонецЕсли; 
			//	КонецЦикла;
			//	Если СтрокаВДоке = Неопределено Тогда
			//		Для каждого Стр Из СтрокиВДоке Цикл
			//			Если Не ЗначениеЗаполнено(Стр.Склад) Тогда
			//				СтрокаВДоке=Стр;
			//			    Прервать;
			//			КонецЕсли; 
			//		КонецЦикла;
			//	КонецЕсли; 
			//Иначе	
				СтрокаВДоке = Объект.Товары.Добавить();
				СтрокаВДоке.Номенклатура = Номенклатура;
				СтрокаВДоке.Характеристика = Характеристика;
				СтрокаВДоке.ДатаПроизводства = СтрокаТаб.ДатаПроизводства;
				СтрокаВДоке.ЕдиницаИзмерения = СтрокаТаб.НоменклатураЕдиницаХраненияОстатков;
				Если Объект.ПоНесколькимСкладам Тогда
					СтрокаВДоке.Склад = СтрокаТаб.Склад;
				КонецЕсли; 
			//КонецЕсли;	
		КонецЕсли;	
		//СтрокаВДоке.Количество = СтрокаВДоке.Количество + СтрокаТаб.Количество;
		СтрокаВДоке.Количество = СтрокаТаб.Количество;
	КонецЦикла;	
	Для каждого Стр Из ТЗЗадания Цикл
		
	    ОбЗад=Стр.Ссылка.ПолучитьОбъект();
		Для каждого СтрЗад Из ОбЗад.Товары Цикл
			МасСтр=ТЗДоступныеТовары.НайтиСтроки(Новый Структура("Номенклатура",СтрЗад.Номенклатура)); 
			Если МасСтр.Количество() Тогда
				СтрЗад.Инвентаризация=Объект.Ссылка;
			КонецЕсли; 
		КонецЦикла; 
		
		ОбЗад.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла; 	                                         
	
	
	
	//АК БЕЛН 20170919+
 	Документы.ИнвентаризацияСклад.ЗаполнитьПросрочки(Объект);
	//АК БЕЛН 20170919-
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКоличествоИзЗаданий()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнвентаризацияСрезПоследних.Номенклатура,
		|	ИнвентаризацияСрезПоследних.ДатаПроизводства,
		|	ИнвентаризацияСрезПоследних.Характеристика,
		|	ИнвентаризацияСрезПоследних.ДокументИнвентаризации,
		|	ИнвентаризацияСрезПоследних.Склад,
		|	ИнвентаризацияСрезПоследних.Количество
		|ИЗ
		|	РегистрСведений.Инвентаризация.СрезПоследних(, ДокументИнвентаризации = &ДокументИнвентаризации) КАК ИнвентаризацияСрезПоследних";

	Запрос.УстановитьПараметр("ДокументИнвентаризации", Объект.Ссылка);

	Результат = Запрос.Выполнить();

	ТЗТовары = Результат.Выгрузить();


	Для Каждого СтрокаТаб Из Объект.Товары Цикл
		СтрокаТаб.Количество = 0;
	КонецЦикла;	
	Для Каждого СтрокаТаб Из ТЗТовары Цикл
		Номенклатура = СтрокаТаб.Номенклатура;
		Характеристика = СтрокаТаб.Характеристика;
		СтрокиВДоке = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура, Характеристика, ДатаПроизводства", Номенклатура, Характеристика, СтрокаТаб.ДатаПроизводства));
		Если СтрокиВДоке.Количество() > 0 Тогда
			СтрокаВДоке = Неопределено;
			Для каждого Стр Из СтрокиВДоке Цикл
				Если Стр.Склад=СтрокаТаб.Склад Тогда
					СтрокаВДоке=Стр;
				    Прервать;
				КонецЕсли; 
			КонецЦикла;
			Если СтрокаВДоке = Неопределено Тогда
				Для каждого Стр Из СтрокиВДоке Цикл
					Если Не ЗначениеЗаполнено(Стр.Склад) Тогда
						СтрокаВДоке=Стр;
					    Прервать;
					КонецЕсли; 
				КонецЦикла;
			КонецЕсли; 
			
		Иначе
			//СтрокиВДоке = Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура, Характеристика", Номенклатура, Характеристика));
			//Если СтрокиВДоке.Количество() > 0 Тогда
			//	СтрокаВДоке = Неопределено;
			//	Для каждого Стр Из СтрокиВДоке Цикл
			//		Если Стр.Склад=СтрокаТаб.Склад Тогда
			//			СтрокаВДоке=Стр;
			//		    Прервать;
			//		КонецЕсли; 
			//	КонецЦикла;
			//	Если СтрокаВДоке = Неопределено Тогда
			//		Для каждого Стр Из СтрокиВДоке Цикл
			//			Если Не ЗначениеЗаполнено(Стр.Склад) Тогда
			//				СтрокаВДоке=Стр;
			//			    Прервать;
			//			КонецЕсли; 
			//		КонецЦикла;
			//	КонецЕсли; 
			//Иначе	
				СтрокаВДоке = Объект.Товары.Добавить();
				СтрокаВДоке.Номенклатура = Номенклатура;
				СтрокаВДоке.Характеристика = Характеристика;
				СтрокаВДоке.ДатаПроизводства = СтрокаТаб.ДатаПроизводства;
				СтрокаВДоке.ЕдиницаИзмерения = Номенклатура.ЕдиницаХраненияОстатков;
				Если Объект.ПоНесколькимСкладам Тогда
					СтрокаВДоке.Склад = СтрокаТаб.Склад;
				КонецЕсли; 
			//КонецЕсли;	
		КонецЕсли;	
		//СтрокаВДоке.Количество = СтрокаВДоке.Количество + СтрокаТаб.Количество;
		СтрокаВДоке.Количество = СтрокаТаб.Количество;
	КонецЦикла;	
	//АК БЕЛН 20170919+
 	Документы.ИнвентаризацияСклад.ЗаполнитьПросрочки(Объект);
	//АК БЕЛН 20170919-
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКоличествоИзЗаданийИУчКоличество(Команда)
	Если Не Объект.ПоНесколькимСкладам Тогда
		
		Если ЗначениеЗаполнено(Объект.Склад) Тогда
			ЗаполнитьКоличествоИзЗаданийИУчКоличествоСервер();
		Иначе
			Предупреждение("Следует заполнить реквизит Склад");
		КонецЕсли
		
	КонецЕсли;
	
	ЗаполнитьПризнакИспользованияХарактеристики();
	
	//+++ AK BARA ИП-00015673.000.00000001
	АК_ЗаполитьРасхождение();
	 //--- AK BARA ИП-00015673.000.00000001

 КонецПроцедуры
 
//+++АК BELN 2018.04.20 ИП-00018441
&НаКлиенте
Процедура ЗаполнитьИзЗаданийСКамерами(Команда)
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Сообщить(НСтр("ru = 'Запишите документ!'"));
		Возврат;
	КонецЕсли; 
	Если Не Объект.ПоНесколькимСкладам Тогда
		
		Если ЗначениеЗаполнено(Объект.Склад) Тогда
			ЗаполнитьИзЗаданийСКамерамиСервер();
		Иначе
			Предупреждение("Следует заполнить реквизит Склад");
		КонецЕсли
		
	КонецЕсли;
	
	ЗаполнитьПризнакИспользованияХарактеристики();
	
	//+++ AK BARA ИП-00015673.000.00000001
	АК_ЗаполитьРасхождение();
	 //--- AK BARA ИП-00015673.000.00000001
	Элементы.Задания.Обновить();
КонецПроцедуры
//---АК BELN 2018.04.20 

&НаСервере
Процедура ЗаполнитьКоличествоИзЗаданийИУчКоличествоСервер()

	ПерезаполнитьОстаткиПоТоварам();
	ЗаполнитьКоличествоИзЗаданий();

КонецПроцедуры

//+++АК BELN 2018.04.20 ИП-00018441
&НаСервере
Процедура ЗаполнитьИзЗаданийСКамерамиСервер()
	ЗаполнитьТЧИзЗаданийСКамерами();

	ПерезаполнитьОстаткиПоТоварам();

КонецПроцедуры

//---АК BELN 2018.04.20 


&НаСервере
Процедура ПерезаполнитьОстаткиПоТоварамТекМомент()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Склад"				, Объект.Склад);
	Запрос.УстановитьПараметр("НаДату"				, ТекущаяДата());
	Запрос.УстановитьПараметр("Таб"					, Объект.Товары.Выгрузить());
	Запрос.УстановитьПараметр("ПоНесколькимСкладам"	, Объект.ПоНесколькимСкладам);			   
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Таб.Номенклатура,
	|	Таб.Характеристика,
	|	Таб.ДатаПроизводства,
	|	Таб.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА &ПоНесколькимСкладам
	|			ТОГДА Таб.Склад
	|		ИНАЧЕ &Склад
	|	КОНЕЦ КАК Склад
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	&Таб КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	ТоварыНаСкладахОстатки.Характеристика,
	|	ТоварыНаСкладахОстатки.ДатаПроизводства,
	|	ТоварыНаСкладахОстатки.ЕдиницаИзмерения,
	|	ТоварыНаСкладахОстатки.Склад,
	|	ТоварыНаСкладахОстатки.КоличествоОстаток
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			&НаДату,
	|			(Склад, Номенклатура, Характеристика, ДатаПроизводства, ЕдиницаИзмерения) В
	|				(ВЫБРАТЬ
	|					Таб.Склад,
	|					Таб.Номенклатура,
	|					Таб.Характеристика,
	|					Таб.ДатаПроизводства,
	|					Таб.ЕдиницаИзмерения
	|				ИЗ
	|					ВТ_Товары КАК Таб)) КАК ТоварыНаСкладахОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_Товары";
				   
	ТабТовары = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаб Из Объект.Товары Цикл
		СтрокиОстаток = ТабТовары.НайтиСтроки(Новый Структура("Номенклатура, Характеристика, ДатаПроизводства, ЕдиницаИзмерения, Склад", СтрокаТаб.Номенклатура, СтрокаТаб.Характеристика, СтрокаТаб.ДатаПроизводства, СтрокаТаб.ЕдиницаИзмерения, ?(Объект.ПоНесколькимСкладам, СтрокаТаб.Склад, Объект.Склад)));
		Если СтрокиОстаток.Количество() > 0 Тогда
			СтрокаТаб.УчетноеКоличество = СтрокиОстаток[0].КоличествоОстаток;
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры	
&НаКлиенте
Процедура ЗаданияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если  Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Сообщить("Необходимо записать документ");
		Отказ=Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЗаданий(Команда)
	ТабДок=ПечатьЗаданийСервер();

	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.Показать();
КонецПроцедуры

&НаСервере
Функция ПечатьЗаданийСервер()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаданиеНаИнвентаризацию.Ссылка
		|ИЗ
		|	Документ.ЗаданиеНаИнвентаризацию КАК ЗаданиеНаИнвентаризацию
		|ГДЕ
		|	НЕ ЗаданиеНаИнвентаризацию.ПометкаУдаления
		|	И ЗаданиеНаИнвентаризацию.Инвентаризация = &Инвентаризация";

	Запрос.УстановитьПараметр("Инвентаризация", Объект.Ссылка);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	МасДок=Новый Массив;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	    МасДок.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;


	Возврат Документы.ЗаданиеНаИнвентаризацию.Печать(МасДок);
КонецФункции


&НаКлиенте
Процедура ОбъединитьЗадания(Команда)
	Если Элементы.Задания.ВыделенныеСтроки.Количество()<=1 Тогда
		Возврат;
	КонецЕсли;
	МассивСсылок=Новый Массив;
	Для каждого Эл Из Элементы.Задания.ВыделенныеСтроки Цикл
		МассивСсылок.Добавить(Эл);
	КонецЦикла; 
	ОбъединитьЗаданияСервер(МассивСсылок);
	Элементы.Задания.Обновить();
КонецПроцедуры

&НаСервере
Процедура ОбъединитьЗаданияСервер(МассивСсылок)
	Документы.ЗаданиеНаИнвентаризацию.ОбъединитьЗадания(МассивСсылок);
КонецПроцедуры
//АК_БЕЛН_18_03_16--

//+++АК SHEP 20160611
&НаКлиенте
Процедура ОтправитьПисьмоОРасхождениях(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Записать();
	КонецЕсли;
	
	СтруктураПараметры = ПолучитьПараметрыДляОтправкиПисьмаОРасхождениях(Истина);
	Если СтруктураПараметры.Количество() = 0 Тогда Возврат; КонецЕсли;
	
	//+++ AK BARA ИП-00015673.000.00000001
	ОткрытьФорму("Документ.СчетНаОплатуПокупателю.Форма.ФормаОтправкиПисьмаОРасхождениях", СтруктураПараметры, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыДляОтправкиПисьмаОРасхождениях(ВыводитьСообщения)
Перем Склад, Контрагент;
	
	СтруктураПараметры = Новый Структура();
	  //+++ AK BARA  ИП-00015673.000.00000001
	//Запрос = Новый Запрос(
	//	"ВЫБРАТЬ
	//	|	СчетНаОплатуПокупателю.Ссылка
	//	|ИЗ
	//	|	Документ.СчетНаОплатуПокупателю КАК СчетНаОплатуПокупателю
	//	|ГДЕ
	//	|	СчетНаОплатуПокупателю.ДокументОснование = &ДокументОснование");
	//Запрос.УстановитьПараметр("ДокументОснование", Объект.Ссылка);
	//
	//Если НЕ Запрос.Выполнить().Пустой() Тогда
	//	Если ВыводитьСообщения Тогда Сообщить("Счёт на оплату покупателю уже выставлен!"); КонецЕсли;
	//	Возврат СтруктураПараметры;
	//КонецЕсли;
	//--- AK BARA  ИП-00015673.000.00000001

	МассивСкладов = Новый Массив;
	//МассивКонтрагентов = Новый Массив;
	
	Расхождения = Новый ТаблицаЗначений;
	Расхождения.Колонки.Добавить("Номенклатура");
	Расхождения.Колонки.Добавить("Количество");
	Расхождения.Колонки.Добавить("УчетноеКоличество");
	Расхождения.Колонки.Добавить("Разница");
	Расхождения.Колонки.Добавить("Отправлять");
	Расхождения.Колонки.Добавить("ЕдиницаИзмерения");
	Расхождения.Колонки.Добавить("Склад");
	
	Для Каждого СтрокаТовары Из Объект.Товары Цикл
		
		Если СтрокаТовары.Количество >= СтрокаТовары.УчетноеКоличество Тогда Продолжить; КонецЕсли;
		
		//Контрагент = СтрокаТовары.Склад.Контрагент;
		Склад = СтрокаТовары.Склад;
		СтрокаРасхождений = Расхождения.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаРасхождений, СтрокаТовары, "Номенклатура,Количество,УчетноеКоличество,ЕдиницаИзмерения");
		СтрокаРасхождений.Отправлять = Истина;
		СтрокаРасхождений.Разница = СтрокаТовары.УчетноеКоличество - СтрокаТовары.Количество;
		//СтрокаРасхождений.Контрагент = Контрагент;
		СтрокаРасхождений.Склад = Склад;
		
		Если МассивСкладов.Найти(Склад) = Неопределено Тогда
			МассивСкладов.Добавить(Склад);
		КонецЕсли;
		//Если МассивКонтрагентов.Найти(Контрагент) = Неопределено Тогда
		//	МассивКонтрагентов.Добавить(Контрагент);
		//КонецЕсли;
		
	КонецЦикла;
	
	Если Расхождения.Количество() = 0 Тогда
		Если ВыводитьСообщения Тогда Сообщить("Расхождения не найдены!"); КонецЕсли;
	Иначе
		Объект.ТребуетсяВыставитьСчётНаОплату = Истина;
		СтруктураПараметры.Вставить("ДокументОснование", Объект.Ссылка);
		СтруктураПараметры.Вставить("МассивСкладов", МассивСкладов);
		//СтруктураПараметры.Вставить("МассивКонтрагентов", МассивКонтрагентов);
		Если ВыводитьСообщения Тогда
			СтруктураПараметры.Вставить("АдресРасхождений", ПоместитьВоВременноеХранилище(Расхождения, УникальныйИдентификатор));
		КонецЕсли;
	КонецЕсли;
	
	Возврат СтруктураПараметры;
	
КонецФункции
//---АК SHEP 20160611

//+++АК SHEP 20160620

//
Процедура ЗаполнитьТЧПоПроизводителю()
	
	//
	КонтрагентСклада = Объект.Склад.Контрагент;
	Если НЕ ЗначениеЗаполнено(КонтрагентСклада) Тогда
		Сообщить("У склада не заполнен контрагент!");
		Возврат;
	КонецЕсли;
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаДокумента"	, ?(Объект.Ссылка.Пустая(), Объект.Дата, Объект.Ссылка.МоментВремени()));
	Запрос.УстановитьПараметр("Склад"			, Объект.Склад);
	Запрос.УстановитьПараметр("Контрагент"		, КонтрагентСклада);
	Если НЕ Объект.ПоХолдингуВЦелом Тогда
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ХарактеристикиНоменклатуры.Владелец КАК Номенклатура,
		|	Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения
		|ПОМЕСТИТЬ ВТТовары
		|ИЗ
		|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО ХарактеристикиНоменклатуры.Владелец = Номенклатура.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|		ПО (ЗначенияСвойствОбъектов.Объект = ХарактеристикиНоменклатуры.Ссылка)
		|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
		|			И (ЗначенияСвойствОбъектов.Значение = &Контрагент)
		|ГДЕ
		|	Номенклатура.ТипТовара = ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.Упаковка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура,
		|	ТоварыНаСкладахОстатки.Характеристика,
		|	ТоварыНаСкладахОстатки.ДатаПроизводства,
		|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ПОМЕСТИТЬ ТоварыОстатки
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			&ДатаДокумента,
		|			Склад = &Склад
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						ВТТовары.Номенклатура
		|					ИЗ
		|						ВТТовары КАК ВТТовары)) КАК ТоварыНаСкладахОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТТовары.Номенклатура,
		|	ВТТовары.ЕдиницаИзмерения,
		|	ТоварыОстатки.Характеристика,
		|	ТоварыОстатки.ДатаПроизводства,
		|	&Склад КАК Склад,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ТоварыОстатки.КоличествоОстаток, 0) < 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ТоварыОстатки.КоличествоОстаток, 0)
		|	КОНЕЦ КАК Количество,
		|	ЕСТЬNULL(ТоварыОстатки.КоличествоОстаток, 0) КАК УчетноеКоличество,
		|	ЛОЖЬ КАК ЭтоГоловнойКонтрагент
		|ИЗ
		|	ВТТовары КАК ВТТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыОстатки КАК ТоварыОстатки
		|		ПО ВТТовары.Номенклатура = ТоварыОстатки.Номенклатура
		|ГДЕ
		|	ЕСТЬNULL(ТоварыОстатки.КоличествоОстаток, 0) <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТТовары.Номенклатура
		|АВТОУПОРЯДОЧИВАНИЕ";
		
	Иначе // остатки товаров производителей (характеристики), входящих в холдинг контрагента склада
		
		Запрос.УстановитьПараметр("КонтрагентХолдинг", КонтрагентСклада.ГоловнойКонтрагент);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ХарактеристикиНоменклатуры.Владелец КАК Номенклатура,
		|	Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения
		|ПОМЕСТИТЬ ВТТовары
		|ИЗ
		|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО ХарактеристикиНоменклатуры.Владелец = Номенклатура.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|		ПО (ЗначенияСвойствОбъектов.Объект = ХарактеристикиНоменклатуры.Ссылка)
		|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
		|			И (ВЫБОР
		|				КОГДА НЕ &КонтрагентХолдинг = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|					ТОГДА ЗначенияСвойствОбъектов.Значение.ГоловнойКонтрагент = &КонтрагентХолдинг
		|				ИНАЧЕ ЗначенияСвойствОбъектов.Значение = &Контрагент
		|			КОНЕЦ)
		|ГДЕ
		|	Номенклатура.ТипТовара = ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.Упаковка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Склад,
		|	ТоварыНаСкладахОстатки.Номенклатура,
		|	ТоварыНаСкладахОстатки.Характеристика,
		|	ТоварыНаСкладахОстатки.ДатаПроизводства,
		|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ПОМЕСТИТЬ ТоварыОстатки
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			&ДатаДокумента,
		|			ВЫБОР
		|					КОГДА НЕ &КонтрагентХолдинг = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|						ТОГДА Склад.Контрагент.ГоловнойКонтрагент = &КонтрагентХолдинг
		|					ИНАЧЕ Склад = &Склад
		|				КОНЕЦ
		|				И Номенклатура В
		|					(ВЫБРАТЬ
		|						ВТТовары.Номенклатура
		|					ИЗ
		|						ВТТовары КАК ВТТовары)) КАК ТоварыНаСкладахОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТТовары.Номенклатура,
		|	ВТТовары.ЕдиницаИзмерения,
		|	ТоварыОстатки.Характеристика,
		|	ТоварыОстатки.ДатаПроизводства,
		|	ТоварыОстатки.Склад КАК Склад,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ТоварыОстатки.КоличествоОстаток, 0) < 0
		|			ТОГДА 0
		|		ИНАЧЕ ЕСТЬNULL(ТоварыОстатки.КоличествоОстаток, 0)
		|	КОНЕЦ КАК Количество,
		|	ЕСТЬNULL(ТоварыОстатки.КоличествоОстаток, 0) КАК УчетноеКоличество,
		|	ВЫБОР
		|		КОГДА ТоварыОстатки.Склад.Контрагент = &КонтрагентХолдинг
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоГоловнойКонтрагент
		|ИЗ
		|	ВТТовары КАК ВТТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТоварыОстатки КАК ТоварыОстатки
		|		ПО ВТТовары.Номенклатура = ТоварыОстатки.Номенклатура
		|ГДЕ
		|	ЕСТЬNULL(ТоварыОстатки.КоличествоОстаток, 0) <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВТТовары.Номенклатура
		|АВТОУПОРЯДОЧИВАНИЕ";
		
	КонецЕсли;
	
	//
	Объект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	//АК БЕЛН 20170919+
 	Документы.ИнвентаризацияСклад.ЗаполнитьПросрочки(Объект);
	//АК БЕЛН 20170919-
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОстаткиПоПроизводителю(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
		Предупреждение("Заполните, пожалуйста, склад!");
		Возврат;
		
	ИначеЕсли Объект.Товары.Количество() > 0 Тогда
		ТекстВопроса = "Внимание!" + Символы.ПС + "Табличная часть будет очищена." + Символы.ПС + "Продолжить выполнение операции?";
		Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, 0) <> КодВозвратаДиалога.Да Тогда
		    Возврат;
		КонецЕсли;
	КонецЕсли;
	
	//
	ЗаполнитьТЧПоПроизводителю();
	
КонецПроцедуры
//---АК SHEP 20160620

&НаКлиенте
Процедура ОтсканированныеКоробки(Команда)
	//Отбор=Новый Структура("Ссылка",Объект.Ссылка);
	Парам=Новый Структура("ОтборДок, СформироватьПриОткрытии",Объект.Ссылка,Ложь);
	ОткрытьФорму("Отчет.АК_ОтсканированнаяВесоваяНоменклатура.Форма.ФормаОтчета",Парам);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	//+++АК sole 2018.09.18 ИП-00019875
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Ответ = Вопрос("Вы точно хотите провести документ?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина;
			Возврат
		КонецЕсли;
	КонецЕсли;
	//---АК sole 2018.09.18 ИП-00019875	
	
	Ответ = Вопрос("Выполнить формирование бухгалтерских движений сразу?", РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВыполнятьОтложенныеДвиженияСразу = Истина;
	КонецЕсли;	
	
КонецПроцедуры

//+++ AK BARA ИП-00015673.000.00000001
&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	Элементы.Товары.ТекущиеДанные.Расхождение  = Элементы.Товары.ТекущиеДанные.Количество - Элементы.Товары.ТекущиеДанные.УчетноеКоличество;

КонецПроцедуры
//--- AK BARA ИП-00015673.000.00000001
  

//+++ AK BARA ИП-00015673.000.00000001
&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	//АК_ЗаполитьРасхождение();
КонецПроцедуры

//+++ AK BARA ИП-00015673.000.00000001
&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	// Вставить содержимое обработчика.
КонецПроцедуры

//+++АК BELN 2017.11.16 ИП-00017261 
&НаКлиенте
Процедура ДобавитьПоОстаткам(Команда)
	НеОчищать=Истина;
	ЗаполнитьТЧ(Команда);
	НеОчищать=Ложь;
	Элементы.Задания.Обновить();
КонецПроцедуры
//---АК BELN 2017.11.16 

//+++АК BELN 2017.11.16 ИП-00017261
&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если Объект.Проведен Тогда
		Элементы.ТоварыДобавитьПоОстаткам.Видимость=Ложь;
	Иначе
		Элементы.ТоварыДобавитьПоОстаткам.Видимость=Истина;
	КонецЕсли; 
КонецПроцедуры
//---АК BELN 2017.11.16

//+++АК BELN 2017.11.16 ИП-00017261 
&НаКлиенте
Процедура ЗаполнитьПоГруппеТоваров(Команда)
	Отбор=Новый Структура("Родитель",ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка"));
	Парам=Новый Структура("Отбор,ТолькоВерхниеГруппы",Отбор,Истина);
	НоменклатураОтбор=ОткрытьФормуМодально("Справочник.Номенклатура.ФормаВыбораГруппы",Парам);
	Если ЗначениеЗаполнено(НоменклатураОтбор) Тогда
		ЗаполнитьТЧ(Команда);
		Если ЕстьЗадания() Тогда
			Записать();
			ЗаполнитьЗаданияСервер();
			Элементы.Задания.Обновить();
		КонецЕсли; 
	КонецЕсли; 
	НоменклатураОтбор=Неопределено;
КонецПроцедуры
//---АК BELN 2017.11.16 
//+++АК BELN 2017.11.16 ИП-00017261
&НаСервере
Функция ЕстьЗадания()
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаданиеНаИнвентаризацию.Ссылка
		|ИЗ
		|	Документ.ЗаданиеНаИнвентаризацию КАК ЗаданиеНаИнвентаризацию
		|ГДЕ
		|	ЗаданиеНаИнвентаризацию.Инвентаризация = &Инвентаризация
		|	И НЕ ЗаданиеНаИнвентаризацию.ПометкаУдаления";

	Запрос.УстановитьПараметр("Инвентаризация", Объект.Ссылка);

	Результат = Запрос.Выполнить();
	Возврат НЕ Результат.Пустой()

КонецФункции // ()
//---АК BELN 2017.11.16
//+++АК BELN 2017.11.16 ИП-00017261
&НаКлиенте
Процедура СформироватьЗаданноеКоличествоЗаданий(Команда)
	Если  Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Сообщить("Необходимо записать документ");
		Возврат;
	КонецЕсли;
	
	КолДок=0;
	ВвестиЧисло(КолДок,"Введите количество заданий");
	Если ЗначениеЗаполнено(КолДок) Тогда
		СформироватьЗаданноеКоличествоЗаданийСервер(КолДок);
		Элементы.Задания.Обновить();
	КонецЕсли; 
КонецПроцедуры
//---АК BELN 2017.11.16 
//+++АК BELN 2017.11.16 ИП-00017261
&НаСервере
Процедура СформироватьЗаданноеКоличествоЗаданийСервер(КолДок)
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаданиеНаИнвентаризацию.Ссылка
		|ИЗ
		|	Документ.ЗаданиеНаИнвентаризацию КАК ЗаданиеНаИнвентаризацию
		|ГДЕ
		|	ЗаданиеНаИнвентаризацию.Инвентаризация = &Инвентаризация
		|	И НЕ ЗаданиеНаИнвентаризацию.ПометкаУдаления";

	Запрос.УстановитьПараметр("Инвентаризация", Объект.Ссылка);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Об=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Если Об.Проведен Тогда
			Об.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли; 
		Об.ПометкаУдаления=Истина;
		Об.Записать(РежимЗаписиДокумента.Запись);
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнвентаризацияСкладТовары.Номенклатура,
		|	ИнвентаризацияСкладТовары.Характеристика,
		|	ИнвентаризацияСкладТовары.ЕдиницаИзмерения,
		|	0 КАК Количество,
		|	ИнвентаризацияСкладТовары.ДатаПроизводства,
		|	ВЫБОР
		|		КОГДА ИнвентаризацияСкладТовары.Ссылка.ПоНесколькимСкладам
		|			ТОГДА ИнвентаризацияСкладТовары.Склад
		|		ИНАЧЕ ИнвентаризацияСкладТовары.Ссылка.Склад
		|	КОНЕЦ КАК Склад,
		|	ИнвентаризацияСкладТовары.Номенклатура.Наименование КАК НоменклатураНаименование
		|ИЗ
		|	Документ.ИнвентаризацияСклад.Товары КАК ИнвентаризацияСкладТовары
		|ГДЕ
		|	ИнвентаризацияСкладТовары.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НоменклатураНаименование
		|ИТОГИ ПО
		|	Склад";

	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);

	Результат = Запрос.Выполнить();

	ВыборкаСклад = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
		Пока ВыборкаСклад.Следующий() Цикл
			ВыборкаДетальныеЗаписи = ВыборкаСклад.Выбрать();
			Если КолДок>ВыборкаДетальныеЗаписи.Количество() Тогда
				Сообщить("Количество строк в инвентаризации меньше количества заданий");
				Возврат;
			
			КонецЕсли;
			
			КолИтер=Цел(ВыборкаДетальныеЗаписи.Количество()/КолДок);
			КолЗап=0;
			Для Сч=1 По КолДок Цикл
				
				НовДок=Документы.ЗаданиеНаИнвентаризацию.СоздатьДокумент();
				НовДок.Дата=Объект.Дата;
				НовДок.Склад=Объект.Склад;
				НовДок.Инвентаризация=Объект.Ссылка;
				НовДок.Автор=Объект.Автор;
				НовДок.СтруктурнаяЕдиница=Объект.Склад.Владелец;
					
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					НовСтр=НовДок.Товары.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтр,ВыборкаДетальныеЗаписи);
					КолЗап=КолЗап+1;
					Если КолЗап=КолИтер*Сч И Сч<>КолДок Тогда
						Прервать;
					КонецЕсли; 
				КонецЦикла;
				НовДок.Записать(РежимЗаписиДокумента.Проведение);
			
			КонецЦикла; 
		КонецЦикла;
	ЭтаФорма.Модифицированность=Истина;
КонецПроцедуры
//---АК BELN 2017.11.16 

//+++АК SHEP 2018.04.05 ИП-00018324
&НаКлиенте
Процедура ОтветственныйСборщикНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	// т.к. у регистров сведений нет формы выбора, получаем форму и в списке устанавливаем признак выбора
	ПараметрыФормы = Новый Структура("РежимВыбора,РежимОткрытияОкна", Истина, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ФормаВыбораСборщика = ПолучитьФорму("РегистрСведений.СборщикиНаСкладах.ФормаСписка", ПараметрыФормы, Элемент, УникальныйИдентификатор);
	
	ВыбранноеЗначениеКлючЗаписи = ФормаВыбораСборщика.ОткрытьМодально();
	Если ВыбранноеЗначениеКлючЗаписи = Неопределено Тогда Возврат; КонецЕсли;
	
	Объект.ОтветственныйСборщик = ОбщегоНазначения.ЗначениеРеквизита(ВыбранноеЗначениеКлючЗаписи, "Сборщик");
	
КонецПроцедуры
