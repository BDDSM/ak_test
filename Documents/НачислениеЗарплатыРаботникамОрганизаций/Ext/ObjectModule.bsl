
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если СчетЗатрат = ПланыСчетов.Финансовый.РезервПоОтпускам
			И НЕ ЗначениеЗаполнено(СубконтоДт1) Тогда
		СубконтоДт1 = Организация;
	КонецЕсли;	
	
	Если (НЕ ЭтотОбъект.Организация = Справочники.Организации.Избенка)
			И НЕ ЭтотОбъект.ЗаявкаНаРасходованиеСредств.Пустая() Тогда
		ЭтотОбъект.ЗаявкаНаРасходованиеСредств = Документы.ЗаявкаНаРасходованиеСредств.ПустаяСсылка();
	КонецЕсли;
	
КонецПроцедуры
 
Процедура ОбработкаПроведения(Отказ, Режим)
	
	НДФЛ			= Справочники.ВидыНалогов.НайтиПоКоду("000000010");
	ФСС				= Справочники.ВидыНалогов.НайтиПоКоду("000000011");
	ПФСтраховая		= Справочники.ВидыНалогов.НайтиПоКоду("000000004");
	ПФНакопительная	= Справочники.ВидыНалогов.НайтиПоКоду("000000005");
	ФФОМС			= Справочники.ВидыНалогов.НайтиПоКоду("000000006");
	ТФОМС			= Справочники.ВидыНалогов.НайтиПоКоду("000000007");
	НСиПЗ			= Справочники.ВидыНалогов.НайтиПоКоду("000000008");

	
	Движения.РасчетыСПерсоналом.Записывать = Истина;
	Движения.РасчетыСПерсоналом.Очистить();
	
	Движения.Финансовый.Записывать = Истина;
	Движения.Финансовый.Очистить();
	
	//
	Движение = Движения.Финансовый.Добавить();
	Движение.Период 							= Дата;
	//Движение.Организация 						= Организация;
	Движение.Сумма 								= Начисления.Итог("Результат");
	
	Движение.СчетДт 							= СчетЗатрат;
	Если НЕ ВводОстатков Тогда
		БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 1, СубконтоДт1);
		БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 2, СубконтоДт2);
		БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 3, СубконтоДт3);
	КонецЕсли;
	
	Движение.СчетКт 							= ПланыСчетов.Финансовый.РасчетыСПерсоналомПоОплатеТруда;
	Движение.СубконтоКт.Организации 			= Организация;
	//Движение.СубконтоКт.СотрудникиОрганизаций	= ТекСтрокаНачисления.Сотрудник;
	
	Движение.Содержание							= "Начисление ЗП. "+Комментарий;
			
	Для Каждого ТекСтрокаНачисления Из Начисления Цикл
		
		//РасчетыСПерсоналом
		Если ЗначениеЗаполнено(ТекСтрокаНачисления.Физлицо) Тогда
			Физлицо = ТекСтрокаНачисления.Физлицо;
		Иначе
			Физлицо = ТекСтрокаНачисления.Сотрудник.Физлицо;
		КонецЕсли;
		
		Движение = Движения.РасчетыСПерсоналом.Добавить();
		Движение.ВидДвижения						= ВидДвиженияНакопления.Приход;
		Движение.Регистратор						= Ссылка;
		Движение.Период								= Дата;
		Движение.Организация						= Организация;
		Движение.Физлицо							= Физлицо;
		Движение.Сумма								= ТекСтрокаНачисления.Результат;
		
		//НДФЛ
		//Если ТекСтрокаНачисления.НДФЛ > 0 Тогда
		//	Движение 									= Движения.Финансовый.Добавить();
		//	Движение.Период 							= Дата;
		//	Движение.Организация 						= Организация;
		//	Движение.Сумма 								= ТекСтрокаНачисления.НДФЛ;
		//	
		//	Движение.СчетДт 							= ПланыСчетов.Финансовый.РасчетыСПерсоналомПоОплатеТруда;
		//	Движение.СубконтоДт.Организации 			= Организация;
		//	Движение.СубконтоДт.СотрудникиОрганизаций	= ТекСтрокаНачисления.Сотрудник;
		//	
		//	Движение.СчетКт 							= ПланыСчетов.Финансовый.НалогиСФОТ;
		//	Движение.СубконтоКт.Организации 			= Организация;
		//	Движение.СубконтоКт.ВидыНалогов				= НДФЛ;
		//	
		//	Движение.Содержание							= "НДФЛ. "+Комментарий;
		//КонецЕсли;
		//
		////ФСС
		//Если ТекСтрокаНачисления.ФСС > 0 Тогда
		//	Движение 									= Движения.Финансовый.Добавить();
		//	Движение.Период 							= Дата;
		//	Движение.Организация 						= Организация;
		//	Движение.Сумма 								= ТекСтрокаНачисления.ФСС;
		//	
		//	Движение.СчетДт 							= СчетЗатрат;
		//	Движение.СубконтоДт.СтатьиДоходовРасходов 	= СтатьяДоходовРасходов;
		//	Движение.СубконтоДт.ЦФО 					= ЦФО;
		//	
		//	Движение.СчетКт 							= ПланыСчетов.Финансовый.НалогиСФОТ;
		//	Движение.СубконтоКт.Организации 			= Организация;
		//	Движение.СубконтоКт.ВидыНалогов				= ФСС;
		//	
		//	Движение.Содержание							= "ФСС. "+Комментарий;
		//КонецЕсли;
		//
		////Страховая часть ПФ РФ
		//Если ТекСтрокаНачисления.ПФСтраховая > 0 Тогда
		//	Движение 									= Движения.Финансовый.Добавить();
		//	Движение.Период 							= Дата;
		//	Движение.Организация 						= Организация;
		//	Движение.Сумма 								= ТекСтрокаНачисления.ПФСтраховая;
		//	
		//	Движение.СчетДт 							= СчетЗатрат;
		//	Движение.СубконтоДт.СтатьиДоходовРасходов 	= СтатьяДоходовРасходов;
		//	Движение.СубконтоДт.ЦФО 					= ЦФО;
		//	
		//	Движение.СчетКт 							= ПланыСчетов.Финансовый.НалогиСФОТ;
		//	Движение.СубконтоКт.Организации 			= Организация;
		//	Движение.СубконтоКт.ВидыНалогов				= ПФСтраховая;
		//	
		//	Движение.Содержание							= "Страховая часть ПФ РФ. "+Комментарий;
		//КонецЕсли;
		//
		////накопительная часть ПФ РФ
		//Если ТекСтрокаНачисления.ПФНакопительная > 0 Тогда
		//	Движение 									= Движения.Финансовый.Добавить();
		//	Движение.Период 							= Дата;
		//	Движение.Организация 						= Организация;
		//	Движение.Сумма 								= ТекСтрокаНачисления.ПФНакопительная;
		//	
		//	Движение.СчетДт 							= СчетЗатрат;
		//	Движение.СубконтоДт.СтатьиДоходовРасходов 	= СтатьяДоходовРасходов;
		//	Движение.СубконтоДт.ЦФО 					= ЦФО;
		//	
		//	Движение.СчетКт 							= ПланыСчетов.Финансовый.НалогиСФОТ;
		//	Движение.СубконтоКт.Организации 			= Организация;
		//	Движение.СубконтоКт.ВидыНалогов				= ПФНакопительная;
		//	
		//	Движение.Содержание							= "накопительная часть ПФ РФ. "+Комментарий;
		//КонецЕсли;
		//
		////ФФОМС
		//Если ТекСтрокаНачисления.ФФОМС > 0 Тогда
		//	Движение 									= Движения.Финансовый.Добавить();
		//	Движение.Период 							= Дата;
		//	Движение.Организация 						= Организация;
		//	Движение.Сумма 								= ТекСтрокаНачисления.ФФОМС;
		//	
		//	Движение.СчетДт 							= СчетЗатрат;
		//	Движение.СубконтоДт.СтатьиДоходовРасходов 	= СтатьяДоходовРасходов;
		//	Движение.СубконтоДт.ЦФО 					= ЦФО;
		//	
		//	Движение.СчетКт 							= ПланыСчетов.Финансовый.НалогиСФОТ;
		//	Движение.СубконтоКт.Организации 			= Организация;
		//	Движение.СубконтоКт.ВидыНалогов				= ФФОМС;
		//	
		//	Движение.Содержание							= "ФФОМС. "+Комментарий;
		//КонецЕсли;
		//
		////ТФОМС
		//Если ТекСтрокаНачисления.ТФОМС > 0 Тогда
		//	Движение 									= Движения.Финансовый.Добавить();
		//	Движение.Период 							= Дата;
		//	Движение.Организация 						= Организация;
		//	Движение.Сумма 								= ТекСтрокаНачисления.ТФОМС;
		//	
		//	Движение.СчетДт 							= СчетЗатрат;
		//	Движение.СубконтоДт.СтатьиДоходовРасходов 	= СтатьяДоходовРасходов;
		//	Движение.СубконтоДт.ЦФО 					= ЦФО;
		//	
		//	Движение.СчетКт 							= ПланыСчетов.Финансовый.НалогиСФОТ;
		//	Движение.СубконтоКт.Организации 			= Организация;
		//	Движение.СубконтоКт.ВидыНалогов				= ТФОМС;
		//	
		//	Движение.Содержание							= "ТФОМС. "+Комментарий;
		//КонецЕсли;
		//
		////НС и ПЗ
		//Если ТекСтрокаНачисления.НСиПЗ > 0 Тогда
		//	Движение 									= Движения.Финансовый.Добавить();
		//	Движение.Период 							= Дата;
		//	Движение.Организация 						= Организация;
		//	Движение.Сумма 								= ТекСтрокаНачисления.НСиПЗ;
		//	
		//	Движение.СчетДт 							= СчетЗатрат;
		//	Движение.СубконтоДт.СтатьиДоходовРасходов 	= СтатьяДоходовРасходов;
		//	Движение.СубконтоДт.ЦФО 					= ЦФО;
		//	
		//	Движение.СчетКт 							= ПланыСчетов.Финансовый.НалогиСФОТ;
		//	Движение.СубконтоКт.Организации 			= Организация;
		//	Движение.СубконтоКт.ВидыНалогов				= НСиПЗ;
		//	
		//	Движение.Содержание							= "НС и ПЗ. "+Комментарий;
		//КонецЕсли;
		
	КонецЦикла;

	АК_УчетМСФО.ЗаполнитьОрганизацию(Движения.Финансовый,Организация);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)

	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств") Тогда
		
		Если НЕ ДанныеЗаполнения.Организация = Справочники.Организации.Избенка Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Начисление зарплаты на основании заявки возможно только для организации ""Избенка""!");
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
		
		МассивСтатейДДС = ДопМодульСервер.ПолучитьСтатьиДДСОплатаЗП();
		Если МассивСтатейДДС.Найти(ДанныеЗаполнения.СтатьяДвиженияДенежныхСредств) = Неопределено Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Начисление зарплаты не предусмотрено для статьи движения ДС """ + ДанныеЗаполнения.СтатьяДвиженияДенежныхСредств + """!");
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
		
		//
		ЭтотОбъект.ЗаявкаНаРасходованиеСредств 	= ДанныеЗаполнения;
		ЭтотОбъект.Организация 					= ДанныеЗаполнения.Организация;
		
	КонецЕсли;
	
КонецПроцедуры
