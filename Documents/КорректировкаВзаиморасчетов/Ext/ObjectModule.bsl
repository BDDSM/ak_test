Перем ЕстьИзменения;

Процедура ОбработкаПроведения(Отказ, Режим)
	Если не ЗначениеЗаполнено(ДокументОснование) Тогда
		Сообщить("Вы проводите операцию без документа-основания: это может повлиять на корректное разнесение ДЗ!");
	КонецЕсли;
	
	Движения.Финансовый.Записывать = Истина;
	Движения.Финансовый.Очистить();
	
	//+++АК Susk (Суслин К.В.) 2017.12.01 ИП-00016525
	ПроверкаЗаполненияБУ(Отказ);
	//---АК Susk (Суслин К.В.) 
	
	//+++АК sils 4.08.2017 ИП-00015775.02 
	Если ЗначениеЗаполнено(ЭтотОбъект.ДокументОснование) Тогда
		Отказ = НовоеПроведениеСДокументом(Отказ);
	ИначеЕсли Версия = 1 Тогда
		Если (ВидОперации = Перечисления.ВидыОперацийКорректировкиВзаиморасчетов.АК_ПереносНаДругогоКА_ТТ
			или ВидОперации = Перечисления.ВидыОперацийКорректировкиВзаиморасчетов.СписаниеБезнадёжнойДЗ
			или ВидОперации = Перечисления.ВидыОперацийКорректировкиВзаиморасчетов.АК_ПереносНаДругойСчет) и Подтвержден Тогда
			Для Каждого Стр Из Документы Цикл
				//+++АК sils 18.11.2018 ИП-00020092
				//Если стр.Сумма <= 0 Тогда
				Если стр.Сумма < 0 или стр.СуммаМСФО < 0 или стр.Сумма = 0 и стр.СуммаМСФО = 0 Тогда
				//---АК	
					Сообщить("Не введена сумма!");
					Отказ = Истина;
				КонецЕсли;
				//+++АК Susk (Суслин К.В.) 2018.03.05 ИП-00018067
				//Если не ЗначениеЗаполнено(Стр.СчетДт) Тогда
				Если НЕ ЗначениеЗаполнено(Стр.СчетДт) И НЕ ЗначениеЗаполнено(Стр.СчетДтБух) Тогда
					Сообщить("Не заполнен счет дебета!");
				//---АК Susk (Суслин К.В.) 
					Отказ = Истина;
				КонецЕсли;
				//+++АК Susk (Суслин К.В.) 2018.03.05 ИП-00018067
				//Если не ЗначениеЗаполнено(Стр.СчетКт) Тогда
				Если НЕ ЗначениеЗаполнено(Стр.СчетКт) И НЕ ЗначениеЗаполнено(Стр.СчетКтБух) Тогда
					Сообщить("Не заполнен счет кредита!");
				//---АК Susk (Суслин К.В.) 
					Отказ = Истина;
				КонецЕсли;
				
				//+++АК Susk (Суслин К.В.) 2018.03.05 ИП-00018067
				Если НЕ ЗначениеЗаполнено(Стр.СчетДт) И НЕ ЗначениеЗаполнено(Стр.СчетКт) Тогда
					Продолжить;
				КонецЕсли;
				//---АК Susk (Суслин К.В.) 
				
				Движение = Движения.Финансовый.Добавить();
				Движение.Период = Дата;
				Движение.Организация = ЭтотОбъект.Организация;	
				Движение.Сумма = Стр.Сумма;
				//+++АК sils 18.11.2018 ИП-00020092
				Движение.СуммаМСФО = Стр.СуммаМСФО;
				//---АК
				
				Движение.СчетДт = Стр.СчетДт;
				Для й = 1 по Движение.СчетДт.ВидыСубконто.Количество() Цикл
					Если не ЗначениеЗаполнено(Стр["СубконтоДт" + й]) Тогда
						Сообщить("Не заполнено субконто " + СокрЛП(Движение.СчетДт.ВидыСубконто[й-1].ВидСубконто) + " по счету " + Движение.СчетДт);
						Отказ = Истина;
					КонецЕсли;
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, й, Стр["СубконтоДт" + й]);
				КонецЦикла;
		
				Движение.СчетКт = Стр.СчетКт;
				Для й = 1 по Движение.СчетКт.ВидыСубконто.Количество() Цикл
					Если не ЗначениеЗаполнено(Стр["СубконтоКт" + й]) Тогда
						Сообщить("Не заполнено субконто " + СокрЛП(Движение.СчетКт.ВидыСубконто[й-1].ВидСубконто) + " по счету " + Движение.СчетКт);
						Отказ = Истина;
					КонецЕсли;
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, й, Стр["СубконтоКт" + й]);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	Иначе
	//---АК
	//+++АК Познахарёв 20.06.2017
	Если ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийКорректировкиВзаиморасчетов.ЗакрытиеЗайма Тогда
		Для Каждого Стр Из ЭтотОбъект.Документы Цикл
			Проводка = Движения.Финансовый.Добавить();
			Проводка.Организация = ЭтотОбъект.Организация;	
			
			Проводка.СчетДт = Стр.СчетНаСписание;
			Проводка.СубконтоДт.Организации = ЭтотОбъект.Организация;
			Проводка.СубконтоДт.Контрагенты = ЭтотОбъект.Контрагент;
			
			Проводка.СчетКт = ПланыСчетов.Финансовый.РасчетыСПрочимиПоставщикамиИПодрядчиками;
			Проводка.СубконтоКт.Организации = ЭтотОбъект.Организация;
			Проводка.СубконтоКт.Контрагенты = ЭтотОбъект.Контрагент;
			
			Проводка.Сумма = Стр.Сумма;
			//+++АК sils 18.11.2018 ИП-00020092
			Проводка.СуммаМСФО = Стр.СуммаМСФО;
			//---АК
			
			Проводка.Период = ЭтотОбъект.Дата;
        КонецЦикла;
		
	//---АК Познахарёв 20.06.2017	
	
	//+++АК sils 26.06.2017 ИП-00015775
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийКорректировкиВзаиморасчетов.СписаниеБезнадёжнойДЗ Тогда
		НаборЗаписей = РегистрыБухгалтерии.Финансовый.СоздатьНаборЗаписей();
		Для Каждого ТекСтрокаДокументы Из Документы Цикл
			Если не ЗначениеЗаполнено(ТекСтрокаДокументы.СчетНаСписание) Тогда
				Сообщить("Не заполнен Счет на списание!");
				Отказ = Истина;
				Продолжить;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ТекСтрокаДокументы.Документ) Тогда
				Сообщить("Не заполнен документ!");
				Отказ = Истина;
				Продолжить;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ТекСтрокаДокументы.ТорговаяТочка) Тогда
				Сообщить("Не заполнена торговая точка!");
				Отказ = Истина;
				Продолжить;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(ТекСтрокаДокументы.СтатьяДР) Тогда
				Сообщить("Не заполнена Статья ДР!");
				Отказ = Истина;
				Продолжить;
			КонецЕсли;
			Если ТекСтрокаДокументы.СчетНаСписание.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.ЦФО, "ВидСубконто") <> Неопределено Тогда
				Если НЕ ЗначениеЗаполнено(ТекСтрокаДокументы.ЦФОДт) Тогда
					Сообщить("Не заполнено ЦФО!");
					Отказ = Истина;
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			//+++АК sils 18.11.2018 ИП-00020092
			//Если ТекСтрокаДокументы.Сумма <= 0 Тогда
			Если ТекСтрокаДокументы.Сумма < 0 или ТекСтрокаДокументы.СуммаМСФО < 0 или ТекСтрокаДокументы.Сумма = 0 и ТекСтрокаДокументы.СуммаМСФО = 0 Тогда
			//---АК	
				Сообщить("Не заполнена сумма!");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			
			НаборЗаписей.Отбор.Регистратор.Установить(ТекСтрокаДокументы.Документ);
			НаборЗаписей.Прочитать();    
			Если НаборЗаписей.Количество() = 0 Тогда
				Сообщить("Не найдены проводки по документу " + ТекСтрокаДокументы.Документ + "!");
				Отказ = Истина;
				Продолжить;
			КонецЕсли;
			СчетДокумента = Неопределено; 
			СуммаОперации = 0;
			Для каждого Запись из НаборЗаписей Цикл
				Если (Запись.СчетДт = ПланыСчетов.Финансовый.НайтиПоКоду("76.1")
					ИЛИ Запись.СчетДт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("60")
					ИЛИ Запись.СчетДт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("62"))
					И Запись.СубконтоДт.Организации = Организация
					И Запись.СубконтоДт.Контрагенты = Контрагент
					И Запись.Сумма > 0
					Тогда
					СчетДокумента = Запись.СчетДт;
					СуммаОперации = СуммаОперации + Запись.Сумма;
					Продолжить;
				КонецЕсли;
				Если (Запись.СчетКт = ПланыСчетов.Финансовый.НайтиПоКоду("76.1")
					ИЛИ Запись.СчетКт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("60")
					ИЛИ Запись.СчетКт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("62"))
					И Запись.СубконтоДт.Организации = Организация
					И Запись.СубконтоДт.Контрагенты = Контрагент
					И Запись.Сумма < 0
					Тогда
					СчетДокумента = Запись.СчетКт;
					СуммаОперации = СуммаОперации - Запись.Сумма;
					Продолжить;
				КонецЕсли;
			КонецЦикла;
			Если СуммаОперации < ТекСтрокаДокументы.Сумма Тогда
				Сообщить("По документу " + ТекСтрокаДокументы.Документ + " сумма превышает сумму документа!");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			//+++АК sils 18.11.2018 ИП-00020092
			СуммаМСФООперации = 0;
			Для каждого Запись из НаборЗаписей Цикл
				Если (Запись.СчетДт = ПланыСчетов.Финансовый.НайтиПоКоду("76.1")
					ИЛИ Запись.СчетДт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("60")
					ИЛИ Запись.СчетДт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("62"))
					И Запись.СубконтоДт.Организации = Организация
					И Запись.СубконтоДт.Контрагенты = Контрагент
					И Запись.СуммаМСФО > 0
					Тогда
					СчетДокумента = Запись.СчетДт;
					СуммаМСФООперации = СуммаМСФООперации + Запись.СуммаМСФО;
					Продолжить;
				КонецЕсли;
				Если (Запись.СчетКт = ПланыСчетов.Финансовый.НайтиПоКоду("76.1")
					ИЛИ Запись.СчетКт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("60")
					ИЛИ Запись.СчетКт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("62"))
					И Запись.СубконтоДт.Организации = Организация
					И Запись.СубконтоДт.Контрагенты = Контрагент
					И Запись.СуммаМСФО < 0
					Тогда
					СчетДокумента = Запись.СчетКт;
					СуммаМСФООперации = СуммаМСФООперации - Запись.СуммаМСФО;
					Продолжить;
				КонецЕсли;
			КонецЦикла;
			Если СуммаМСФООперации < ТекСтрокаДокументы.СуммаМСФО Тогда
				Сообщить("По документу " + ТекСтрокаДокументы.Документ + " сумма (МСФО) превышает сумму документа!");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			//---АК
			
			Если СчетДокумента = Неопределено Тогда
				Сообщить("По документу " + ТекСтрокаДокументы.Документ + " не определен счет документа!");
				Продолжить;
			КонецЕсли;
			
			Если Подтвержден Тогда
				Движение = Движения.Финансовый.Добавить();
				Движение.Период = Дата;
				
				Движение.СчетДт = ТекСтрокаДокументы.СчетНаСписание;
				Если ТекСтрокаДокументы.СчетНаСписание.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки, "ВидСубконто") <> Неопределено Тогда
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "ТорговыеТочки", ТекСтрокаДокументы.ТорговаяТочка);
				КонецЕсли;
				БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "СтатьиДоходовРасходов", ТекСтрокаДокументы.СтатьяДР);
				Если ТекСтрокаДокументы.СчетНаСписание.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.ЦФО, "ВидСубконто") <> Неопределено Тогда
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "ЦФО", ТекСтрокаДокументы.ЦФОДт);
				КонецЕсли;
				
				Движение.СчетКт = СчетДокумента;
				БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Организации", Организация);
				БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Контрагенты", Контрагент);
				БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "ТорговыеТочки", ТекСтрокаДокументы.ТорговаяТочка);
				
				Движение.Организация = Организация;
				Движение.Сумма = ТекСтрокаДокументы.Сумма;
				//+++АК sils 18.11.2018 ИП-00020092
				Движение.СуммаМСФО = ТекСтрокаДокументы.СуммаМСФО;
				//---АК
				
				Движение = Движения.Финансовый.Добавить();
				Движение.СчетКт = ПланыСчетов.Финансовый.БДЗ;
				Движение.Период = Дата;
				Движение.Организация = Организация;
				Движение.Сумма = ТекСтрокаДокументы.Сумма;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Контрагент;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Документы] = ТекСтрокаДокументы.Документ;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийКорректировкиВзаиморасчетов.АК_ПереносНаДругогоКА_ТТ Тогда
		НаборЗаписей = РегистрыБухгалтерии.Финансовый.СоздатьНаборЗаписей();
		Для Каждого ТекСтрокаДокументы Из Документы Цикл
			Если НЕ ЗначениеЗаполнено(ТекСтрокаДокументы.Документ) Тогда
				Сообщить("Не заполнен документ!");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			Если не ЗначениеЗаполнено(ТекСтрокаДокументы.СчетНаСписание) Тогда
				Сообщить("Не заполнен Счет взаиморасчетов!");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			
			//+++АК sils 29.06.2017 ИП-00015775
			Если не ЗначениеЗаполнено(ТекСтрокаДокументы.АК_ОрганизацияДт) Тогда
				Сообщить("Не заполнена Организация дебета!");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			Если не ЗначениеЗаполнено(ТекСтрокаДокументы.АК_КонтрагентДт) Тогда
				Сообщить("Не заполнен Контрагент дебета!");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			Если ТекСтрокаДокументы.СчетНаСписание.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки, "ВидСубконто") <> Неопределено Тогда
				Если не ЗначениеЗаполнено(ТекСтрокаДокументы.АК_ТорговаяТочкаДт) Тогда
					Сообщить("Не заполнена Торговая точка!");
					Отказ = Истина;
					Возврат;
				КонецЕсли;
			КонецЕсли;
			//+++АК sils 18.11.2018 ИП-00020092
			//Если ТекСтрокаДокументы.Сумма <= 0 Тогда
			Если ТекСтрокаДокументы.Сумма < 0 или ТекСтрокаДокументы.СуммаМСФО < 0 или ТекСтрокаДокументы.Сумма = 0 и ТекСтрокаДокументы.СуммаМСФО = 0 Тогда
			//---АК	
				Сообщить("Не заполнена сумма!");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			
			НаборЗаписей.Отбор.Регистратор.Установить(ТекСтрокаДокументы.Документ);
			НаборЗаписей.Прочитать();    
			Если НаборЗаписей.Количество() = 0 Тогда
				Сообщить("Не найдены проводки по документу " + ТекСтрокаДокументы.Документ + "!");
				Отказ = Истина;
				Продолжить;
			КонецЕсли;
			
			СуммаОперации = 0;
			ТорговаяТочка = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
			Для каждого Запись из НаборЗаписей Цикл
				Если (Запись.СчетДт = ПланыСчетов.Финансовый.НайтиПоКоду("76.1")
					ИЛИ Запись.СчетДт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("60")
					ИЛИ Запись.СчетДт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("62"))
					И Запись.СубконтоДт.Организации = Организация
					И Запись.СубконтоДт.Контрагенты = Контрагент
					И Запись.Сумма > 0
					Тогда
					СуммаОперации = СуммаОперации + Запись.Сумма;
					Если (Запись.СчетДт.Код = "60.1") или (Запись.СчетДт.Код = "60.2") или (Запись.СчетДт.Код = "62.2") Тогда
						 ТорговаяТочка = Запись.СубконтоДт.ТорговыеТочки;
					КонецЕсли;
					Продолжить;
				КонецЕсли;
				Если (Запись.СчетКт = ПланыСчетов.Финансовый.НайтиПоКоду("76.1")
					ИЛИ Запись.СчетКт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("60")
					ИЛИ Запись.СчетКт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("62"))
					И Запись.СубконтоДт.Организации = Организация
					И Запись.СубконтоДт.Контрагенты = Контрагент
					И Запись.Сумма < 0
					Тогда
					СуммаОперации = СуммаОперации - Запись.Сумма;
					Если (Запись.СчетКт.Код = "60.1") или (Запись.СчетКт.Код = "60.2") или (Запись.СчетКт.Код = "62.2") Тогда
						 ТорговаяТочка = Запись.СубконтоДт.ТорговыеТочки;
					КонецЕсли;
					Продолжить;
				КонецЕсли;
			КонецЦикла;
			Если СуммаОперации < ТекСтрокаДокументы.Сумма Тогда
				Сообщить("По документу " + ТекСтрокаДокументы.Документ + " сумма превышает сумму документа!");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			//---АК
			//+++АК sils 18.11.2018 ИП-00020092
			СуммаМСФООперации = 0;
			ТорговаяТочкаМСФО = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
			Для каждого Запись из НаборЗаписей Цикл
				Если (Запись.СчетДт = ПланыСчетов.Финансовый.НайтиПоКоду("76.1")
					ИЛИ Запись.СчетДт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("60")
					ИЛИ Запись.СчетДт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("62"))
					И Запись.СубконтоДт.Организации = Организация
					И Запись.СубконтоДт.Контрагенты = Контрагент
					И Запись.СуммаМСФО > 0
					Тогда
					СуммаМСФООперации = СуммаМСФООперации + Запись.СуммаМСФО;
					Если (Запись.СчетДт.Код = "60.1") или (Запись.СчетДт.Код = "60.2") или (Запись.СчетДт.Код = "62.2") Тогда
						 ТорговаяТочкаМСФО = Запись.СубконтоДт.ТорговыеТочки;
					КонецЕсли;
					Продолжить;
				КонецЕсли;
				Если (Запись.СчетКт = ПланыСчетов.Финансовый.НайтиПоКоду("76.1")
					ИЛИ Запись.СчетКт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("60")
					ИЛИ Запись.СчетКт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("62"))
					И Запись.СубконтоДт.Организации = Организация
					И Запись.СубконтоДт.Контрагенты = Контрагент
					И Запись.СуммаМСФО < 0
					Тогда
					СуммаМСФООперации = СуммаМСФООперации - Запись.СуммаМСФО;
					Если (Запись.СчетКт.Код = "60.1") или (Запись.СчетКт.Код = "60.2") или (Запись.СчетКт.Код = "62.2") Тогда
						 ТорговаяТочкаМСФО = Запись.СубконтоДт.ТорговыеТочки;
					КонецЕсли;
					Продолжить;
				КонецЕсли;
			КонецЦикла;
			Если СуммаМСФООперации < ТекСтрокаДокументы.СуммаМСФО Тогда
				Сообщить("По документу " + ТекСтрокаДокументы.Документ + " сумма (МСФО) превышает сумму документа!");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			//---АК

			Если Подтвержден Тогда
				Движение = Движения.Финансовый.Добавить();
				Движение.Период = Дата;
				
				Движение.СчетДт = ТекСтрокаДокументы.СчетНаСписание;
				БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Организации", ТекСтрокаДокументы.АК_ОрганизацияДт);
				БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Контрагенты", ТекСтрокаДокументы.АК_КонтрагентДт);
				БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "ТорговыеТочки", ТекСтрокаДокументы.ТорговаяТочка);
				
				Движение.СчетКт = ТекСтрокаДокументы.СчетНаСписание;
				БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Организации", Организация);
				БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Контрагенты", Контрагент);
				//+++АК sils 18.11.2018 ИП-00020092
				//БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "ТорговыеТочки", ТорговаяТочка);
				ТекТТ = ТорговаяТочка; 
				Если ТорговаяТочка = Справочники.СтруктурныеЕдиницы.ПустаяСсылка() Тогда
					ТекТТ = ТорговаяТочкаМСФО;
				КонецЕсли;
				БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "ТорговыеТочки", ТекТТ);
				//---АК
				
				Движение.Организация = Организация;
				Движение.Сумма = ТекСтрокаДокументы.Сумма;
				//+++АК sils 18.11.2018 ИП-00020092
				Движение.СуммаМСФО = ТекСтрокаДокументы.СуммаМСФО;
				//---АК
				
				Движение = Движения.Финансовый.Добавить();
				Движение.СчетКт = ПланыСчетов.Финансовый.БДЗ;
				Движение.Период = Дата;
				Движение.Организация = Организация;
				Движение.Сумма = ТекСтрокаДокументы.Сумма;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Контрагент;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Документы] = ТекСтрокаДокументы.Документ;
			КонецЕсли;
		КонецЦикла;
	//---АК
	//+++АК sils 29.06.2017 ИП-00015775
	//ИначеЕсли Подтвержден  Тогда
	//+++АК sils 29.06.2017 ИП-00015775
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийКорректировкиВзаиморасчетов.АК_ПереносНаДругойСчет  Тогда
	//---АК
		
		НаборЗаписей = РегистрыБухгалтерии.Финансовый.СоздатьНаборЗаписей();
		
		
		Для Каждого ТекСтрокаДокументы Из Документы Цикл
			Если НЕ ЗначениеЗаполнено(ТекСтрокаДокументы.Документ) Тогда
				Сообщить("Не заполнена документ!");
				Отказ = Истина;
				Продолжить;
			КонецЕсли;
			
			НаборЗаписей.Отбор.Регистратор.Установить(ТекСтрокаДокументы.Документ);
			НаборЗаписей.Прочитать();    
			Если НаборЗаписей.Количество() = 0 Тогда
				Сообщить("Не найдены проводки по документу " + ТекСтрокаДокументы.Документ + "!");
				Отказ = Истина;
				Продолжить;
			КонецЕсли;
			СчетДокумента = Неопределено; //СуммаОперации = 0;
			//Для каждого Запись из НаборЗаписей Цикл
			//	Если Запись.СчетДт = ПланыСчетов.Финансовый.НайтиПоКоду("76.1")
			//		ИЛИ Запись.СчетДт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("60")
			//		ИЛИ Запись.СчетДт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("62")
			//		Тогда
			//		СчетДокумента = Запись.СчетДт;
			//		Продолжить;
			//	КонецЕсли;
			//КонецЦикла;		
			//+++АК sils 29.06.2017 ИП-00015775
			СуммаОперации = 0;
			//---АК
			Для каждого Запись из НаборЗаписей Цикл
				Если (Запись.СчетДт = ПланыСчетов.Финансовый.НайтиПоКоду("76.1")
					ИЛИ Запись.СчетДт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("60")
					ИЛИ Запись.СчетДт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("62"))
					И Запись.СубконтоДт.Организации = Организация
					И Запись.СубконтоДт.Контрагенты = Контрагент
					И Запись.Сумма > 0
					Тогда
					//СуммаОперации = СуммаОперации + Запись.Сумма;
					//+++АК sils 29.06.2017 ИП-00015775
					СуммаОперации = СуммаОперации + Запись.Сумма;
					//---АК
					СчетДокумента = Запись.СчетДт;
					Продолжить;
				КонецЕсли;
				Если (Запись.СчетКт = ПланыСчетов.Финансовый.НайтиПоКоду("76.1")
					ИЛИ Запись.СчетКт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("60")
					ИЛИ Запись.СчетКт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("62"))
					И Запись.СубконтоДт.Организации = Организация
					И Запись.СубконтоДт.Контрагенты = Контрагент
					И Запись.Сумма < 0
					Тогда
					//СуммаОперации = СуммаОперации - Запись.Сумма;
					//+++АК sils 29.06.2017 ИП-00015775
					СуммаОперации = СуммаОперации - Запись.Сумма;
					//---АК
					СчетДокумента = Запись.СчетКт;
					Продолжить;
				КонецЕсли;
			КонецЦикла;
			//+++АК sils 29.06.2017 ИП-00015775
			Если СуммаОперации < ТекСтрокаДокументы.Сумма Тогда
				Сообщить("По документу " + ТекСтрокаДокументы.Документ + " сумма превышает сумму документа!");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			//+++АК sils 18.11.2018 ИП-00020092
			СуммаМСФООперации = 0;
			Для каждого Запись из НаборЗаписей Цикл
				Если (Запись.СчетДт = ПланыСчетов.Финансовый.НайтиПоКоду("76.1")
					ИЛИ Запись.СчетДт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("60")
					ИЛИ Запись.СчетДт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("62"))
					И Запись.СубконтоДт.Организации = Организация
					И Запись.СубконтоДт.Контрагенты = Контрагент
					И Запись.СуммаМСФО > 0
					Тогда
					СуммаМСФООперации = СуммаМСФООперации + Запись.СуммаМСФО;
					СчетДокумента = Запись.СчетДт;
					Продолжить;
				КонецЕсли;
				Если (Запись.СчетКт = ПланыСчетов.Финансовый.НайтиПоКоду("76.1")
					ИЛИ Запись.СчетКт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("60")
					ИЛИ Запись.СчетКт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("62"))
					И Запись.СубконтоДт.Организации = Организация
					И Запись.СубконтоДт.Контрагенты = Контрагент
					И Запись.СуммаМСФО < 0
					Тогда
					СуммаМСФООперации = СуммаМСФООперации - Запись.СуммаМСФО;
					СчетДокумента = Запись.СчетКт;
					Продолжить;
				КонецЕсли;
			КонецЦикла;
			Если СуммаМСФООперации < ТекСтрокаДокументы.СуммаМСФО Тогда
				Сообщить("По документу " + ТекСтрокаДокументы.Документ + " сумма превышает сумму документа!");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			//---АК
			Если ТекСтрокаДокументы.СчетНаСписание.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки, "ВидСубконто") <> Неопределено
				или СчетДокумента.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки, "ВидСубконто") <> Неопределено Тогда
				Если не ЗначениеЗаполнено(ТекСтрокаДокументы.ТорговаяТочка) Тогда
					Сообщить("Не заполнена Торговая точка!");
					Отказ = Истина;
					Возврат;
				КонецЕсли;
			КонецЕсли;
			//+++АК sils 18.11.2018 ИП-00020092
			//Если ТекСтрокаДокументы.Сумма <= 0 Тогда
			Если ТекСтрокаДокументы.Сумма < 0 или ТекСтрокаДокументы.СуммаМСФО < 0 или ТекСтрокаДокументы.Сумма = 0 и ТекСтрокаДокументы.СуммаМСФО = 0 Тогда
			//---АК	
				Сообщить("Не заполнена сумма!");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			//---АК
			
			//Если СчетДокумента = Неопределено ИЛИ СуммаОперации = 0 Тогда
			Если СчетДокумента = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			//Запрос = Новый Запрос;
			//Запрос.Текст = "ВЫБРАТЬ
			//			   |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПользователиПоЦФО.Период) КАК Период,
			//			   |	ПользователиПоЦФО.ЦФО
			//			   |ИЗ
			//			   |	РегистрСведений.ПользователиПоЦФО КАК ПользователиПоЦФО
			//			   |ГДЕ
			//			   |	ПользователиПоЦФО.Сотрудник = &Сотрудник
			//			   |
			//			   |СГРУППИРОВАТЬ ПО
			//			   |	ПользователиПоЦФО.ЦФО";
			//Запрос.УстановитьПараметр("Сотрудник", Подтверждающий);
			//Результат = Запрос.Выполнить();
			//ВыборкаДетальныеЗаписи = Результат.Выбрать();
			//
			//ЦФОПодтверждающего = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
			//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			//	ЦФОПодтверждающего = ВыборкаДетальныеЗаписи.ЦФО;
			//КонецЦикла;
			
			Движение = Движения.Финансовый.Добавить();
			Движение.Период = Дата;
			
			Движение.СчетДт = ТекСтрокаДокументы.СчетНаСписание;
			//БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "ТорговыеТочки", ТекСтрокаДокументы.ТорговаяТочка);
			//БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "СтатьиДоходовРасходов", ТекСтрокаДокументы.СтатьяДР);
			//БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "ЦФО", ЦФОПодтверждающего);
			БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Организации", Организация);
			БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Контрагенты", Контрагент);
			Если ТекСтрокаДокументы.СчетНаСписание.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки, "ВидСубконто") <> Неопределено Тогда
				БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "ТорговыеТочки", ТекСтрокаДокументы.ТорговаяТочка);
			КонецЕсли;
			//---АК
			
			Движение.СчетКт = СчетДокумента;
			БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Организации", Организация);
			БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Контрагенты", Контрагент);
			//+++АК sils 29.06.2017 ИП-00015775
			//БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "ТорговыеТочки", ТекСтрокаДокументы.ТорговаяТочка);
			//+++АК sils 29.06.2017 ИП-00015775
			Если СчетДокумента.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки, "ВидСубконто") <> Неопределено Тогда
				БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "ТорговыеТочки", ТекСтрокаДокументы.ТорговаяТочка);
			КонецЕсли;
			//---АК
			
			
			Движение.Организация = Организация;
			Движение.Сумма = ТекСтрокаДокументы.Сумма;
			//+++АК sils 18.11.2018 ИП-00020092
			Движение.СуммаМСФО = ТекСтрокаДокументы.СуммаМСФО;
			//---АК
			//Движение.Сумма = СуммаОперации;
			
			Движение = Движения.Финансовый.Добавить();
			Движение.СчетКт = ПланыСчетов.Финансовый.БДЗ;
			Движение.Период = Дата;
			//Движение.СчетДт = ТекСтрокаДокументы.СчетНаСписание;
			Движение.Организация = Организация;
			Движение.Сумма = ТекСтрокаДокументы.Сумма;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Контрагент;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Документы] = ТекСтрокаДокументы.Документ;
			
		КонецЦикла;
		
	КонецЕсли;
	//+++АК sils 4.08.2017 ИП-00015775.02
	КонецЕсли;
	//---АК
	ОтправкаПисем(Отказ,Движения,Режим);
КонецПроцедуры

//+++АК sils 4.08.2017 ИП-00015775.02
Функция НовоеПроведениеСДокументом(Отказ)
	Если ВидОперации = Перечисления.ВидыОперацийКорректировкиВзаиморасчетов.ЗакрытиеЗайма Тогда
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийКорректировкиВзаиморасчетов.СписаниеБезнадёжнойДЗ Тогда
		Отказ = ПроверкаЗаполнения();
		Если не Отказ Тогда
			СуммаОперации = ПолучитьСуммуДокумента(ДокументОснование);
			Если СуммаОперации < СуммаДокумента Тогда
				Сообщить("По документу " + ДокументОснование + " сумма превышает сумму документа!");
				Возврат Истина;
			КонецЕсли;
			//+++АК sils 18.11.2018 ИП-00020092
			СуммаМСФООперации = ПолучитьСуммуМСФОДокумента(ДокументОснование);
			Если СуммаМСФООперации < СуммаМСФОДокумента Тогда
				Сообщить("По документу " + ДокументОснование + " сумма (МСФО) превышает сумму документа!");
				Возврат Истина;
			КонецЕсли;
			//---АК
			
			Если Подтвержден Тогда
				Движение = Движения.Финансовый.Добавить();
				Движение.Период = Дата;
				
				Если ФлагСчета = 2 Тогда
					Движение.СчетДт = Счет;
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 1, Субкотно1);
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 2, Субкотно2);
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 3, Субкотно3);
					
					Движение.СчетКт = КорСчет;
					Если КорСчет.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки, "ВидСубконто") <> Неопределено Тогда
						БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "ТорговыеТочки", КорТорговаяТочка);
					КонецЕсли;
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "СтатьиДоходовРасходов", КорСтатьяДР);
					Если КорСчет.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.ЦФО, "ВидСубконто") <> Неопределено Тогда
						БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "ЦФО", КорЦФО);
					КонецЕсли;
				Иначе
					Движение.СчетДт = КорСчет;
					Если КорСчет.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки, "ВидСубконто") <> Неопределено Тогда
						БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "ТорговыеТочки", КорТорговаяТочка);
					КонецЕсли;
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "СтатьиДоходовРасходов", КорСтатьяДР);
					Если КорСчет.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.ЦФО, "ВидСубконто") <> Неопределено Тогда
						БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "ЦФО", КорЦФО);
					КонецЕсли;
					
					Движение.СчетКт = Счет;
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, 1, Субкотно1);
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, 2, Субкотно2);
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, 3, Субкотно3);
				КонецЕсли;
				
				Движение.Организация = Организация;
				Движение.Сумма = СуммаДокумента;
				//+++АК sils 18.11.2018 ИП-00020092
				Движение.СуммаМСФО = СуммаМСФОДокумента;
				//---АК
				
				Движение = Движения.Финансовый.Добавить();
				Движение.СчетКт = ПланыСчетов.Финансовый.БДЗ;
				Движение.Период = Дата;
				Движение.Организация = Организация;
				Движение.Сумма = СуммаДокумента;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Контрагент;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Документы] = ДокументОснование;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийКорректировкиВзаиморасчетов.АК_ПереносНаДругогоКА_ТТ Тогда
		Отказ = ПроверкаЗаполнения();
		Если не Отказ Тогда
			СуммаОперации = ПолучитьСуммуДокумента(ДокументОснование);
			Если СуммаОперации < СуммаДокумента Тогда
				Сообщить("По документу " + ДокументОснование + " сумма превышает сумму документа!");
				Возврат Истина;
			КонецЕсли;
			//+++АК sils 18.11.2018 ИП-00020092
			СуммаМСФООперации = ПолучитьСуммуМСФОДокумента(ДокументОснование);
			Если СуммаМСФООперации < СуммаМСФОДокумента Тогда
				Сообщить("По документу " + ДокументОснование + " сумма (МСФО) превышает сумму документа!");
				Возврат Истина;
			КонецЕсли;
			//---АК

			Если Подтвержден Тогда
				Движение = Движения.Финансовый.Добавить();
				Движение.Период = Дата;
				
				Если ФлагСчета = 2 Тогда
					Движение.СчетДт = Счет;
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 1, Субкотно1);
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 2, Субкотно2);
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 3, Субкотно3);
					
					Движение.СчетКт = КорСчет;
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Организации", КорОрганизация);
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Контрагенты", КорКонтрагент);
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "ТорговыеТочки", КорТорговаяТочка);
				Иначе
					Движение.СчетДт = КорСчет;
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Организации", КорОрганизация);
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Контрагенты", КорКонтрагент);
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "ТорговыеТочки", КорТорговаяТочка);
					
					Движение.СчетКт = Счет;
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, 1, Субкотно1);
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, 2, Субкотно2);
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, 3, Субкотно3);
				КонецЕсли;
				
				Движение.Организация = Организация;
				Движение.Сумма = СуммаДокумента;
				//+++АК sils 18.11.2018 ИП-00020092
				Движение.СуммаМСФО = СуммаМСФОДокумента;
				//---АК
				
				Движение = Движения.Финансовый.Добавить();
				Движение.СчетКт = ПланыСчетов.Финансовый.БДЗ;
				Движение.Период = Дата;
				Движение.Организация = Организация;
				Движение.Сумма = СуммаДокумента;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Контрагент;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Документы] = ДокументОснование;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийКорректировкиВзаиморасчетов.АК_ПереносНаДругойСчет  Тогда
		Отказ = ПроверкаЗаполнения();
		Если не Отказ Тогда
			СуммаОперации = ПолучитьСуммуДокумента(ДокументОснование);
			Если СуммаОперации < СуммаДокумента Тогда
				Сообщить("По документу " + ДокументОснование + " сумма превышает сумму документа!");
				Возврат Истина;
			КонецЕсли;
			//+++АК sils 18.11.2018 ИП-00020092
			СуммаМСФООперации = ПолучитьСуммуМСФОДокумента(ДокументОснование);
			Если СуммаМСФООперации < СуммаМСФОДокумента Тогда
				Сообщить("По документу " + ДокументОснование + " сумма (МСФО) превышает сумму документа!");
				Возврат Истина;
			КонецЕсли;
			//---АК
			
			Если Подтвержден Тогда
				Движение = Движения.Финансовый.Добавить();
				Движение.Период = Дата;
				
				Если ФлагСчета = 2 Тогда
					Движение.СчетДт = Счет;
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 1, Субкотно1);
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 2, Субкотно2);
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 3, Субкотно3);
					
					Движение.СчетКт = КорСчет;
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Организации", Организация);
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "Контрагенты", Контрагент);
					Если Движение.СчетКт.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки, "ВидСубконто") <> Неопределено Тогда
						БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, "ТорговыеТочки", КорТорговаяТочка);
					КонецЕсли;
				Иначе
					Движение.СчетДт = КорСчет;
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Организации", Организация);
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "Контрагенты", Контрагент);
					Если Движение.СчетДт.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки, "ВидСубконто") <> Неопределено Тогда
						БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, "ТорговыеТочки", КорТорговаяТочка);
					КонецЕсли;
					
					Движение.СчетКт = Счет;
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, 1, Субкотно1);
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, 2, Субкотно2);
					БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, 3, Субкотно3);
				КонецЕсли;

				Движение.Организация = Организация;
				Движение.Сумма = СуммаДокумента;
				//+++АК sils 18.11.2018 ИП-00020092
				Движение.СуммаМСФО = СуммаМСФОДокумента;
				//---АК
				
				Движение = Движения.Финансовый.Добавить();
				Движение.СчетКт = ПланыСчетов.Финансовый.БДЗ;
				Движение.Период = Дата;
				Движение.Организация = Организация;
				Движение.Сумма = СуммаДокумента;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Контрагенты] = Контрагент;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Документы] = ДокументОснование;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат Отказ;
КонецФункции

Функция ПолучитьСуммуДокумента(Док)
	НаборЗаписей = РегистрыБухгалтерии.Финансовый.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Док);
	НаборЗаписей.Прочитать();    
	Если НаборЗаписей.Количество() = 0 Тогда
		Сообщить("Не найдены проводки по документу " + Док + "!");
		Возврат 0;
	КонецЕсли;
	СуммаОперации = 0;
	Для каждого Запись из НаборЗаписей Цикл
		Если (Запись.СчетДт = ПланыСчетов.Финансовый.НайтиПоКоду("76.1")
			ИЛИ Запись.СчетДт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("60")
			ИЛИ Запись.СчетДт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("62"))
			И Запись.СубконтоДт.Организации = Организация
			И Запись.СубконтоДт.Контрагенты = Контрагент Тогда
			СуммаОперации = СуммаОперации + Запись.Сумма;
			Продолжить;
		КонецЕсли;
		Если (Запись.СчетКт = ПланыСчетов.Финансовый.НайтиПоКоду("76.1")
			ИЛИ Запись.СчетКт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("60")
			ИЛИ Запись.СчетКт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("62"))
			И Запись.СубконтоКт.Организации = Организация
			И Запись.СубконтоКт.Контрагенты = Контрагент Тогда
			СуммаОперации = СуммаОперации - Запись.Сумма;
			Продолжить;
		КонецЕсли;
	КонецЦикла;
	СуммаОперации = ?(СуммаОперации < 0, -СуммаОперации, СуммаОперации);
	
	Возврат СуммаОперации;
КонецФункции

Функция ПроверкаЗаполнения()
	Если ВидОперации = Перечисления.ВидыОперацийКорректировкиВзаиморасчетов.ЗакрытиеЗайма Тогда
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийКорректировкиВзаиморасчетов.СписаниеБезнадёжнойДЗ Тогда
		Если не ЗначениеЗаполнено(КорСчет) Тогда
			Сообщить("Не заполнен корр.счет!");
			Возврат Истина;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(КорТорговаяТочка) Тогда
			Сообщить("Не заполнена торговая точка!");
			Возврат Истина;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(КорСтатьяДР) Тогда
			Сообщить("Не заполнена Статья ДР!");
			Возврат Истина;
		КонецЕсли;
		Если КорСчет.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.ЦФО, "ВидСубконто") <> Неопределено Тогда
			Если НЕ ЗначениеЗаполнено(КорЦФО) Тогда
				Сообщить("Не заполнено ЦФО!");
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
		//+++АК sils 18.11.2018 ИП-00020092
		//Если СуммаДокумента <= 0 Тогда
		Если СуммаДокумента < 0 или СуммаМСФОДокумента < 0 или СуммаДокумента = 0 и СуммаМСФОДокумента = 0 Тогда
		//---АК	
			Сообщить("Не заполнена сумма!");
			Возврат Истина;
		КонецЕсли;
		Если не ЗначениеЗаполнено(Счет) Тогда
			Сообщить("По документу " + ДокументОснование + " не определен счет документа!");
			Возврат Истина;
		ИначеЕсли ФлагДоступностьСчета = Истина Тогда
			Для й = 1 по Счет.ВидыСубконто.Количество() Цикл
				Если не ЗначениеЗаполнено(ЭтотОбъект["Субконто" + й]) Тогда
					Сообщить("Не заполнено субконто " + СокрЛП(Счет.ВидыСубконто[й-1].ВидСубконто) + " по счету " + Счет);
					Отказ = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийКорректировкиВзаиморасчетов.АК_ПереносНаДругогоКА_ТТ Тогда
		Если не ЗначениеЗаполнено(КорСчет) Тогда
			Сообщить("Не заполнен корр.счет!");
			Возврат Истина;
		КонецЕсли;
		Если не ЗначениеЗаполнено(КорОрганизация) Тогда
			Сообщить("Не заполнена Организация!");
			Возврат Истина;
		КонецЕсли;
		Если не ЗначениеЗаполнено(КорКонтрагент) Тогда
			Сообщить("Не заполнен Контрагент!");
			Возврат Истина;
		КонецЕсли;
		Если КорСчет.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки, "ВидСубконто") <> Неопределено Тогда
			Если не ЗначениеЗаполнено(КорТорговаяТочка) Тогда
				Сообщить("Не заполнена Торговая точка!");
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
		//+++АК sils 18.11.2018 ИП-00020092
		//Если СуммаДокумента <= 0 Тогда
		Если СуммаДокумента < 0 или СуммаМСФОДокумента < 0 или СуммаДокумента = 0 и СуммаМСФОДокумента = 0 Тогда
		//---АК	
			Сообщить("Не заполнена сумма!");
			Возврат Истина;
		КонецЕсли;
		Если не ЗначениеЗаполнено(Счет) Тогда
			Сообщить("По документу " + ДокументОснование + " не определен счет документа!");
			Возврат Истина;
		ИначеЕсли ФлагДоступностьСчета = Истина Тогда
			Для й = 1 по Счет.ВидыСубконто.Количество() Цикл
				Если не ЗначениеЗаполнено(ЭтотОбъект["Субконто" + й]) Тогда
					Сообщить("Не заполнено субконто " + СокрЛП(Счет.ВидыСубконто[й-1].ВидСубконто) + " по счету " + Счет);
					Отказ = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийКорректировкиВзаиморасчетов.АК_ПереносНаДругойСчет  Тогда
		Если не ЗначениеЗаполнено(КорСчет) Тогда
			Сообщить("Не заполнен корр.счет!");
			Возврат Истина;
		КонецЕсли;
		Если КорСчет.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки, "ВидСубконто") <> Неопределено Тогда
			Если не ЗначениеЗаполнено(КорТорговаяТочка) Тогда
				Сообщить("Не заполнена Торговая точка!");
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
		//+++АК sils 18.11.2018 ИП-00020092
		//Если СуммаДокумента <= 0 Тогда
		Если СуммаДокумента < 0 или СуммаМСФОДокумента < 0 или СуммаДокумента = 0 и СуммаМСФОДокумента = 0 Тогда
		//---АК	
			Сообщить("Не заполнена сумма!");
			Возврат Истина;
		КонецЕсли;
		Если не ЗначениеЗаполнено(Счет) Тогда
			Сообщить("По документу " + ДокументОснование + " не определен счет документа!");
			Возврат Истина;
		ИначеЕсли ФлагДоступностьСчета = Истина Тогда
			Для й = 1 по Счет.ВидыСубконто.Количество() Цикл
				Если не ЗначениеЗаполнено(ЭтотОбъект["Субкотно" + й]) Тогда
					Сообщить("Не заполнено субконто " + СокрЛП(Счет.ВидыСубконто[й-1].ВидСубконто) + " по счету " + Счет);
					Отказ = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;	 
	
	Возврат Ложь;
КонецФункции
//---АК

Процедура ПриКопировании(ОбъектКопирования)
	Подтвержден = Ложь;
КонецПроцедуры

// +++bara  #16418
Процедура ОтправкаПисем(Отказ, Движения,Режим,ОтменаПроведения = Ложь)
	// +++bara  #16418
	Если ОтменаПроведения Тогда
		
	ИначеЕсли Отказ = Истина или Подтвержден = Ложь или Движения.Финансовый.Количество() = 0 Тогда 
		Возврат  ;
	КонецЕсли;
	
	Счет44 = ПланыСчетов.Финансовый.ЗатратыДляРаспределения;
	
	РезультатПо44 = Ложь;
	Для каждого Стр Из Движения.Финансовый  Цикл   
		Если ЗначениеЗаполнено(Стр.СчетДт) и Стр.СчетДт.ПринадлежитЭлементу(Счет44) Тогда
			РезультатПо44 = Истина;
			Прервать;
		КонецЕсли; 		      
	КонецЦикла;

	РезультатПо44Кт = Ложь;
	Для каждого Стр Из Движения.Финансовый  Цикл   
		Если ЗначениеЗаполнено(Стр.СчетКт) и Стр.СчетКт.ПринадлежитЭлементу(Счет44) Тогда
			РезультатПо44Кт = Истина;
			Прервать;
		КонецЕсли; 		      
	КонецЦикла;
	
	Если (ВидОперации = Перечисления.ВидыОперацийКорректировкиВзаиморасчетов.СписаниеБезнадёжнойДЗ 
		или ВидОперации = Перечисления.ВидыОперацийКорректировкиВзаиморасчетов.АК_ПереносНаДругойСчет)
		и (РезультатПо44 ИЛИ РезультатПо44Кт) и (РезультатПо44 = Ложь ИЛИ РезультатПо44Кт = Ложь) Тогда
		Если ЕстьИзменения Или ОтменаПроведения Тогда
			
			УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
			
			Почта = Новый ИнтернетПочта;
			Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
			Почта.Подключиться(Профиль);
			
			// +++bara  #16418						
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ФинансовыйОстатки.Организация,
			|	ФинансовыйОстатки.Субконто1,
			|	ФинансовыйОстатки.СуммаОстаток
			|ИЗ
			|	РегистрБухгалтерии.Финансовый.Остатки(
			|			&ДатаОстатков,
			|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РасчетыСПоставщикамиИПодрядчиками), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РасчетыСПокупателями), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РасчетыСПрочимиДебиторамиИКредиторами)),
			|			&СубконтоКонтр,
			|			Организация = &Организация
			|				И Субконто1 = &Субконто1) КАК ФинансовыйОстатки
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ ПЕРВЫЕ 5
			|	ФинансовыйОбороты.Организация,
			|	ФинансовыйОбороты.Субконто1,
			|	ФинансовыйОбороты.Регистратор КАК Регистратор,
			|	ФинансовыйОбороты.Период КАК Период,
			|	ТИПЗНАЧЕНИЯ(ФинансовыйОбороты.Регистратор) КАК Регистратор1
			|ИЗ
			|	РегистрБухгалтерии.Финансовый.Обороты(
			|			,
			|			&ДатаОстатков,
			|			Регистратор,
			|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РасчетыСПоставщикамиИПодрядчиками), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РасчетыСПокупателями), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РасчетыСПрочимиДебиторамиИКредиторами)),
			|			&СубконтоКонтр,
			|			Организация = &Организация
			|				И Субконто1 = &Субконто1,
			|			,
			|			) КАК ФинансовыйОбороты
			|ГДЕ
			|	ТИПЗНАЧЕНИЯ(ФинансовыйОбороты.Регистратор) <> ТИП(Документ.КорректировкаВзаиморасчетов)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Период УБЫВ";
			
			Запрос.УстановитьПараметр("ДатаОстатков", КонецДня(Дата+86400));

			Запрос.УстановитьПараметр("Организация", Организация);
			Запрос.УстановитьПараметр("Субконто1", Контрагент);
			Запрос.УстановитьПараметр("СубконтоКонтр", ПланыВидовХарактеристик.ВидыСубконто.Контрагенты);
			
			Результат = Запрос.ВыполнитьПакет();
			 СтрокаОстаток = Символы.ПС+"";
			ВыборкаОстаток = Результат[0].Выбрать();
			
			Если ВыборкаОстаток.Следующий() Тогда 
				СтрокаОстаток = Символы.ПС + СтрокаОстаток + "Сумма долга после "+?(ОтменаПроведения,"отмены ","")+"списания "+ВыборкаОстаток.СуммаОстаток+".";
			КонецЕсли;                                                                                      
			
			ВыборкаДок = Результат[1].Выбрать();
			
			Если ВыборкаДок.Следующий() Тогда 
				 СтрокаОстаток = Символы.ПС + СтрокаОстаток + "Последняя операция по документу "+ВыборкаДок.Регистратор+".";
			КонецЕсли;			
			// --- bara  #16418

				
			Письмо = Новый ИнтернетПочтовоеСообщение;

			Письмо.ИмяОтправителя  	= "" + СокрЛП(УчетнаяЗапись) + "";
			Письмо.Отправитель     	= "" + СокрЛП(УчетнаяЗапись) + "";
			КомментарийСтр = ""+Символы.ПС+"Комментарий: "+Комментарий;
			
			ТекстыПисьма = "По контрагенту  %Контрагент%, организации %Организация% списана дебиторская задолженность на сумму %СуммаДокумента%."+Символы.ПС +"Автор документа %Ответственный%, Документ %Ссылка%"+СтрокаОстаток+КомментарийСтр;
			
			Если РезультатПо44Кт Тогда 
				ТекстыПисьма = СтрЗаменить(ТекстыПисьма,"дебиторская","кредиторская");	
			КонецЕсли;
			
			ТекстыПисьма = СтрЗаменить(ТекстыПисьма,"%Контрагент%",Контрагент) ;
			ТекстыПисьма = СтрЗаменить(ТекстыПисьма,"%Организация%",Организация) ;
			ТекстыПисьма = СтрЗаменить(ТекстыПисьма,"%СуммаДокумента%",СуммаДокумента) ;
			ТекстыПисьма = СтрЗаменить(ТекстыПисьма,"%Ответственный%",Ответственный) ;
			ТекстыПисьма = СтрЗаменить(ТекстыПисьма,"%Ссылка%",Ссылка) ;
		
			Письмо.Тексты.Добавить(ТекстыПисьма,ТипТекстаПочтовогоСообщения.ПростойТекст);
			//Комментарий	
			Адреса = РегистрыСведений.СписаниеБезнадежнойДЗПолучателиУведомлений.Выбрать();
			Пока Адреса.Следующий()Цикл
				Получатель = Письмо.Получатели.Добавить();
				Получатель.Адрес = Адреса.ЭлПочта;
			КонецЦикла;	
			//Получатель = Письмо.Получатели.Добавить();
			//Получатель.Адрес = "bancom@yandex.ru";//Адреса.ЭлПочта;

			
			Письмо.Тема = "Списание безнадежной ДЗ";
			Если ОтменаПроведения Тогда 
			Письмо.Тема = "Отмена списание безнадежной ДЗ";	
			КонецЕсли;
			Если РезультатПо44Кт Тогда 
				Письмо.Тема = СтрЗаменить(Письмо.Тема,"ДЗ","КЗ");	
			КонецЕсли;

			//+++АК sils 29.06.2017 ИП-00015775
			//Почта.Послать(Письмо);
			//+++АК sils 29.06.2017 ИП-00015775
			Попытка
				Почта.Послать(Письмо);
			Исключение    
				Сообщить("Не получилось отправить уведомление о списании безнадержной ДЗ!");
			КонецПопытки;
			//---АК			
			
			Почта.Отключиться();
			
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры
// ---bara  #16418


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Ответственный = ПараметрыСеанса.ТекущийПользователь;
	
	ЕстьИзменения = Ложь;
	
	//+++АК sils 18.11.2018 ИП-00020092
	//Если ЭтоНовый() или Ссылка.Контрагент <> Контрагент ИЛИ Ссылка.СуммаДокумента <> СуммаДокумента Тогда 
	Если ЭтоНовый() или Ссылка.Контрагент <> Контрагент ИЛИ Ссылка.СуммаДокумента <> СуммаДокумента
		ИЛИ Ссылка.СуммаМСФОДокумента <> СуммаМСФОДокумента Тогда 
	//---АК	
		ЕстьИзменения  = Истина;
	КонецЕсли;
	
//	Возврат;
	//// +++bara  #16418
	//Счет44 = ПланыСчетов.Финансовый.ЗатратыДляРаспределения;

	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	КорректировкаВзаиморасчетовДокументы.СчетДт
	//	|ПОМЕСТИТЬ ВТ
	//	|ИЗ
	//	|	&КоррВзаим КАК КорректировкаВзаиморасчетовДокументы
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТ.СчетДт
	//	|ИЗ
	//	|	ВТ КАК ВТ
	//	|ГДЕ
	//	|	ВТ.СчетДт В ИЕРАРХИИ(&СчетДт)";

	//Запрос.УстановитьПараметр("КоррВзаим", ЭтотОбъект.Документы);
	//Запрос.УстановитьПараметр("СчетДт", Счет44);

	//РезультатПо44 = ?(Запрос.Выполнить().Пустой(), Ложь, Истина);
	////---bara  #16418


	//
	//Если ВидОперации = Перечисления.ВидыОперацийКорректировкиВзаиморасчетов.СписаниеБезнадёжнойДЗ 
	//	//или ВидОперации = Перечисления.ВидыОперацийКорректировкиВзаиморасчетов.АК_ПереносНаДругойСчет)
	//	и РезультатПо44 Тогда
	//	Если РежимЗаписи = РежимЗаписиДокумента.Проведение
	//		И (Ссылка.Контрагент <> Контрагент ИЛИ Ссылка.СуммаДокумента <> СуммаДокумента) Тогда
	//		
	//		УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
	//		
	//		Почта = Новый ИнтернетПочта;
	//		Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	//		Почта.Подключиться(Профиль);
	//		
	//		// +++bara  #16418						
	//		Запрос = Новый Запрос;
	//		Запрос.Текст = 
	//		"ВЫБРАТЬ
	//		|	ФинансовыйОстатки.Организация,
	//		|	ФинансовыйОстатки.Субконто1,
	//		|	ФинансовыйОстатки.СуммаОстаток
	//		|ИЗ
	//		|	РегистрБухгалтерии.Финансовый.Остатки(
	//		|			&ДатаОстатков,
	//		|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РасчетыСПоставщикамиИПодрядчиками), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РасчетыСПокупателями), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РасчетыСПрочимиДебиторамиИКредиторами)),
	//		|			&СубконтоКонтр,
	//		|			Организация = &Организация
	//		|				И Субконто1 = &Субконто1) КАК ФинансовыйОстатки
	//		|;
	//		|
	//		|////////////////////////////////////////////////////////////////////////////////
	//		|ВЫБРАТЬ ПЕРВЫЕ 5
	//		|	ФинансовыйОбороты.Организация,
	//		|	ФинансовыйОбороты.Субконто1,
	//		|	ФинансовыйОбороты.Регистратор КАК Регистратор,
	//		|	ФинансовыйОбороты.Период КАК Период,
	//		|	ТИПЗНАЧЕНИЯ(ФинансовыйОбороты.Регистратор) КАК Регистратор1
	//		|ИЗ
	//		|	РегистрБухгалтерии.Финансовый.Обороты(
	//		|			,
	//		|			&ДатаОстатков,
	//		|			Регистратор,
	//		|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РасчетыСПоставщикамиИПодрядчиками), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РасчетыСПокупателями), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РасчетыСПрочимиДебиторамиИКредиторами)),
	//		|			&СубконтоКонтр,
	//		|			Организация = &Организация
	//		|				И Субконто1 = &Субконто1,
	//		|			,
	//		|			) КАК ФинансовыйОбороты
	//		|ГДЕ
	//		|	ТИПЗНАЧЕНИЯ(ФинансовыйОбороты.Регистратор) <> ТИП(Документ.КорректировкаВзаиморасчетов)
	//		|
	//		|УПОРЯДОЧИТЬ ПО
	//		|	Период УБЫВ";
	//		
	//		Запрос.УстановитьПараметр("ДатаОстатков", КонецДня(Дата+86400));

	//		Запрос.УстановитьПараметр("Организация", Организация);
	//		Запрос.УстановитьПараметр("Субконто1", Контрагент);
	//		Запрос.УстановитьПараметр("СубконтоКонтр", ПланыВидовХарактеристик.ВидыСубконто.Контрагенты);
	//		
	//		Результат = Запрос.ВыполнитьПакет();
	//		 СтрокаОстаток = Символы.ПС+"";
	//		ВыборкаОстаток = Результат[0].Выбрать();
	//		
	//		Если ВыборкаОстаток.Следующий() Тогда 
	//			СтрокаОстаток = Символы.ПС + СтрокаОстаток + "Сумма долга после списания "+ВыборкаОстаток.СуммаОстаток+".";
	//		КонецЕсли;                                                                                      
	//		
	//		ВыборкаДок = Результат[1].Выбрать();
	//		
	//		Если ВыборкаДок.Следующий() Тогда 
	//			 СтрокаОстаток = Символы.ПС + СтрокаОстаток + "Последняя операция по документу "+ВыборкаДок.Регистратор1+".";
	//		КонецЕсли;			
	//		// --- bara  #16418

	//			
	//		Письмо = Новый ИнтернетПочтовоеСообщение;

	//		Письмо.ИмяОтправителя  	= "" + СокрЛП(УчетнаяЗапись) + "";
	//		Письмо.Отправитель     	= "" + СокрЛП(УчетнаяЗапись) + "";
	//		
	//		Письмо.Тексты.Добавить("По контрагенту " + Контрагент + ", организации "+Организация+", автор документа "++" списана БДЗ/КЗ суммой " + СуммаДокумента + ". Документ " + Ссылка+СтрокаОстаток, ТипТекстаПочтовогоСообщения.ПростойТекст);
	//			
	//		Адреса = РегистрыСведений.СписаниеБезнадежнойДЗПолучателиУведомлений.Выбрать();
	//		Пока Адреса.Следующий()Цикл
	//			Получатель = Письмо.Получатели.Добавить();
	//			Получатель.Адрес = Адреса.ЭлПочта;
	//		КонецЦикла;	

	//		Письмо.Тема = "Списание безнадежной ДЗ";
	//		
	//		//+++АК sils 29.06.2017 ИП-00015775
	//		//Почта.Послать(Письмо);
	//		//+++АК sils 29.06.2017 ИП-00015775
	//		Попытка
	//			Почта.Послать(Письмо);
	//		Исключение
	//			Сообщить("Не получилось отправить уведомление о списании безнадержной ДЗ!");
	//		КонецПопытки;
	//		//---АК
	//		
	//		
	//		Почта.Отключиться();
	//		
	//	КонецЕсли;
	//	
	//КонецЕсли;	
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Движения.Финансовый.Прочитать();
	ОтправкаПисем(Отказ,Движения,РежимПроведенияДокумента.Неоперативный,Истина);
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.11.21 ИП-00016525 
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ НеВыгружатьВБУ Тогда
		ПроверяемыеРеквизиты.Добавить("Документы.СчетДтБух");
		ПроверяемыеРеквизиты.Добавить("Документы.СчетКтБух");		
	КонецЕсли;	
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.12.01 ИП-00016525
Процедура ПроверкаЗаполненияБУ(Отказ)

	Если НеВыгружатьВБУ Тогда
		Возврат; //нечего больше проверять
	КонецЕсли;
		
	СтрСообщенияТЧ = "";
	
	Для Каждого Стр Из Документы Цикл 
		
		ПроверкаСчетаНаКорректность("ДтБух", Стр, СтрСообщенияТЧ);
		ПроверкаСчетаНаКорректность("КтБух", Стр, СтрСообщенияТЧ);
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(СтрСообщенияТЧ) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Внимание! Обнаружены следующие проблемы заполнения документа:" + Символы.ПС + СтрСообщенияТЧ, Отказ);
	КонецЕсли;
	
КонецПроцедуры 

//+++АК Susk (Суслин К.В.) 2017.12.01 ИП-00016525
Процедура ПроверкаСчетаНаКорректность(ДтКт, Стр, СтрСообщенияТЧ)
	
	//Возврат;
	
	ДанныеСчета = БухгалтерскийУчетВызовСервераПовтИспУФ.ПолучитьСвойстваСчета(Стр["Счет"+ДтКт], "Хозрасчетный");
	
	//ИП-00017628
	МассивИсключаемыхПВХ = ПолучитьСписокПВХИсключаемыхИзПроверки();
	
	Для Счетчик = 1 По ДанныеСчета.КоличествоСубконто Цикл
		
		//ИП-00017628
		Если МассивИсключаемыхПВХ.Найти(ДанныеСчета["ВидСубконто"+Строка(Счетчик)]) <> Неопределено Тогда
			Продолжить; //не проверяем
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Стр["Субконто"+ДтКт+Строка(Счетчик)]) Тогда
			СтрСообщенияТЧ = СтрСообщенияТЧ + "Строка № " + Строка(Стр.НомерСтроки) + " не заполнено Субконто " + СтрЗаменить(ДткТ, "Бух", "") + Строка(счетчик) + " (Бух)!" + Символы.ПС;
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.01.11 ИП-00017628
Функция ПолучитьСписокПВХИсключаемыхИзПроверки()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВидыСубконтоХозрасчетные.Ссылка
	               |ИЗ
	               |	ПланВидовХарактеристик.ВидыСубконтоХозрасчетные КАК ВидыСубконтоХозрасчетные
	               |ГДЕ
	               |	ВидыСубконтоХозрасчетные.Наименование В(&СписокИсключаемыхНаименований)";
	
	СписокИсключаемыхНаименований = Новый Массив;
	СписокИсключаемыхНаименований.Добавить("Документы расчетов с контрагентом");
	СписокИсключаемыхНаименований.Добавить("Регистрация в ИФНС");
	
	Запрос.УстановитьПараметр("СписокИсключаемыхНаименований", СписокИсключаемыхНаименований);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

//+++АК sils 18.11.2018 ИП-00020092
Функция ПолучитьСуммуМСФОДокумента(Док)
	НаборЗаписей = РегистрыБухгалтерии.Финансовый.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Док);
	НаборЗаписей.Прочитать();    
	Если НаборЗаписей.Количество() = 0 Тогда
		Сообщить("Не найдены проводки по документу " + Док + "!");
		Возврат 0;
	КонецЕсли;
	СуммаОперации = 0;
	Для каждого Запись из НаборЗаписей Цикл
		Если (Запись.СчетДт = ПланыСчетов.Финансовый.НайтиПоКоду("76.1")
			ИЛИ Запись.СчетДт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("60")
			ИЛИ Запись.СчетДт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("62"))
			И Запись.СубконтоДт.Организации = Организация
			И Запись.СубконтоДт.Контрагенты = Контрагент Тогда
			СуммаОперации = СуммаОперации + Запись.СуммаМСФО;
			Продолжить;
		КонецЕсли;
		Если (Запись.СчетКт = ПланыСчетов.Финансовый.НайтиПоКоду("76.1")
			ИЛИ Запись.СчетКт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("60")
			ИЛИ Запись.СчетКт.Родитель = ПланыСчетов.Финансовый.НайтиПоКоду("62"))
			И Запись.СубконтоКт.Организации = Организация
			И Запись.СубконтоКт.Контрагенты = Контрагент Тогда
			СуммаОперации = СуммаОперации - Запись.СуммаМСФО;
			Продолжить;
		КонецЕсли;
	КонецЦикла;
	СуммаОперации = ?(СуммаОперации < 0, -СуммаОперации, СуммаОперации);
	
	Возврат СуммаОперации;
КонецФункции

