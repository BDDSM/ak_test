//+++АК sils 05.07.2018 ИП-00018940.01
Функция ПечатьКорВзаиморасчетов(Ссылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаВзаиморасчетов.Организация,
	|	КорректировкаВзаиморасчетов.Номер,
	|	КорректировкаВзаиморасчетов.Дата,
	|	КорректировкаВзаиморасчетов.Контрагент,
	|	КорректировкаВзаиморасчетов.Контрагент.НаименованиеПолное,
	|	КорректировкаВзаиморасчетов.ДокументОснование,
	|	КорректировкаВзаиморасчетов.ДокументОснование.Дата,
	|	КорректировкаВзаиморасчетов.ДокументОснование.Номер,
	|	КорректировкаВзаиморасчетов.Подтверждающий,
	|	КорректировкаВзаиморасчетов.Подтверждающий.ФизЛицо,
	|	КорректировкаВзаиморасчетов.ВидОперации
	|ИЗ
	|	Документ.КорректировкаВзаиморасчетов КАК КорректировкаВзаиморасчетов
	|ГДЕ
	|	КорректировкаВзаиморасчетов.Ссылка = &Ссылка";
	
	Док = Запрос.Выполнить().Выбрать();
	Док.Следующий();
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФинансовыйДвиженияССубконто.НомерСтроки КАК НомерСтроки,
	|	ФинансовыйДвиженияССубконто.СчетДт,
	|	ФинансовыйДвиженияССубконто.СубконтоДт1,
	|	ФинансовыйДвиженияССубконто.СубконтоДт2,
	|	ФинансовыйДвиженияССубконто.СубконтоДт3,
	|	ФинансовыйДвиженияССубконто.СчетКт,
	|	ФинансовыйДвиженияССубконто.СубконтоКт1,
	|	ФинансовыйДвиженияССубконто.СубконтоКт2,
	|	ФинансовыйДвиженияССубконто.СубконтоКт3,
	|	ФинансовыйДвиженияССубконто.Сумма,
	|	ФинансовыйДвиженияССубконто.ВалютнаяСуммаДт,
	|	ФинансовыйДвиженияССубконто.ВалютнаяСуммаКт,
	|	ФинансовыйДвиженияССубконто.КоличествоДт,
	|	ФинансовыйДвиженияССубконто.КоличествоКт,
	|	ФинансовыйДвиженияССубконто.Содержание
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.ДвиженияССубконто(, , Регистратор = &Регистратор, , ) КАК ФинансовыйДвиженияССубконто
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	ВыборкаДвижений = Запрос.Выполнить().Выбрать();
	
	//
	Макет = Документы.КорректировкаВзаиморасчетов.ПолучитьМакет("КорректировкаВзаиморасчетов");
	
	// Получаем области макета для вывода в табличный документ.
	ШапкаДокумента   = Макет.ПолучитьОбласть("Шапка");
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	СтрокаТаблицы    = Макет.ПолучитьОбласть("СтрокаТаблицы");
	ПодвалТаблицы    = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ПодвалДокумента  = Макет.ПолучитьОбласть("Подвал");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета по умолчанию.
	ТабДокумент.ПолеСверху              = 10;
	ТабДокумент.ПолеСлева               = 0;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 0;
	ТабДокумент.РазмерКолонтитулаСверху = 10;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	
	// Загрузим настройки пользователя.
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КорректировкаВзаиморасчетов";

	// Выведем шапку документа.
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Док.Организация, Док.Дата);
	
	ШапкаДокумента.Параметры.Организация    = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
	ШапкаДокумента.Параметры.НомерДокумента = Док.Номер;//ОбщегоНазначения.ПолучитьНомерНаПечать(Док);
	ШапкаДокумента.Параметры.ДатаДокумента  = Формат(Док.Дата, "ДЛФ=D");
	Если ЗначениеЗаполнено(Док.ДокументОснование) Тогда
		ШапкаДокумента.Параметры.ДокументОснование = "" + ТипЗнч(Док.ДокументОснование) + 
			" №" + СокрЛП(Док.ДокументОснованиеНомер) + " от " + Формат(Док.ДокументОснованиеДата, "ДФ=dd.MM.yyyy");
	Иначе
		ШапкаДокумента.Параметры.ДокументОснование = "";
	КонецЕсли;
	Если ЗначениеЗаполнено(Док.Контрагент) Тогда
		ШапкаДокумента.Параметры.Контрагент = ?(СокрЛП(Док.КонтрагентНаименованиеПолное) = "", Док.Контрагент, Док.КонтрагентНаименованиеПолное);
	Иначе
		ШапкаДокумента.Параметры.Контрагент = "";
	КонецЕсли;

	Если ЗначениеЗаполнено(Док.Подтверждающий) и ЗначениеЗаполнено(Док.ПодтверждающийФизЛицо) Тогда
		Подтверждающий_ПолнНаим = ОбщегоНазначения.ФамилияИнициалыФизЛица(Док.ПодтверждающийФизЛицо);
	Иначе
		Подтверждающий_ПолнНаим = "";
	КонецЕсли;
	ШапкаДокумента.Параметры.Подтверждающий = ?(НЕ ЗначениеЗаполнено(Док.Подтверждающий), "", 
		?(СокрЛП(Подтверждающий_ПолнНаим) = "", СокрЛП(Ссылка.Подтверждающий), Подтверждающий_ПолнНаим));
	ШапкаДокумента.Параметры.ВидОперации = Док.ВидОперации;
	
	ТабДокумент.Вывести(ШапкаДокумента);
	
	// Выведем заголовок таблицы.
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	// Выведем строки документа.
	Пока ВыборкаДвижений.Следующий() Цикл
		
		СтрокаТаблицы.Параметры.Заполнить(ВыборкаДвижений);
		
		АналитикаДт = Строка(ВыборкаДвижений.СубконтоДт1) + Символы.ПС
		            + Строка(ВыборкаДвижений.СубконтоДт2) + Символы.ПС
                    + Строка(ВыборкаДвижений.СубконтоДт3);
					
		АналитикаКт = Строка(ВыборкаДвижений.СубконтоКт1) + Символы.ПС
		            + Строка(ВыборкаДвижений.СубконтоКт2) + Символы.ПС
                    + Строка(ВыборкаДвижений.СубконтоКт3);
					
		СтрокаТаблицы.Параметры.АналитикаДт = АналитикаДт;
		СтрокаТаблицы.Параметры.АналитикаКт = АналитикаКт;
									 
		// Проверим, помещается ли строка с подвалом.
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(СтрокаТаблицы);
		СтрокаСПодвалом.Добавить(ПодвалТаблицы);
		СтрокаСПодвалом.Добавить(ПодвалДокумента);
		
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
			
			// Выведем подвал таблицы.
			ТабДокумент.Вывести(ПодвалТаблицы);
				
			// Выведем разрыв страницы.
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

			// Выведем заголовок таблицы.
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
		КонецЕсли;
		
		ТабДокумент.Вывести(СтрокаТаблицы);
		
	КонецЦикла;
	
	// Выведем подвал таблицы.
	ТабДокумент.Вывести(ПодвалТаблицы);
	
	// Выведем подвал документа.
	Ответств_ПолнНаим = ОбщегоНазначения.ФамилияИнициалыФизЛица(Ссылка.Ответственный.ФизЛицо);
	ПодвалДокумента.Параметры.РасшифровкаПодписиИсполнителя = ?(НЕ ЗначениеЗаполнено(Ссылка.Ответственный), "", 
		?(СокрЛП(Ответств_ПолнНаим) = "", СокрЛП(Ссылка.Ответственный), Ответств_ПолнНаим));
	ТабДокумент.Вывести(ПодвалДокумента);
	
	Возврат ТабДокумент;
		
КонецФункции
