
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если НЕ ЗначениеЗаполнено(Объект.КварталОбработки) Тогда
			Объект.КварталОбработки = НачалоКвартала(ТекущаяДата());
		КонецЕсли;	
	КонецЕсли;
	
	КварталСтрока = Формат(Объект.КварталОбработки, "ДФ='к ""квартал"" yyyy'");
	
КонецПроцедуры

&НаКлиенте
Процедура КварталСтрокаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Объект.КварталОбработки = ДобавитьМесяц(Объект.КварталОбработки, Направление*3);
	КварталСтрока = Формат(Объект.КварталОбработки, "ДФ='к ""квартал"" yyyy'");
	УстановитьПризнакИзмененияПослеВыгрузки();
	
КонецПроцедуры

Процедура ЗаполнитьНаСервере()
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаНач", НачалоКвартала(Объект.КварталОбработки));
	Запрос.УстановитьПараметр("ДатаКон", КонецКвартала(Объект.КварталОбработки));
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.Текст = "ВЫБРАТЬ
	|	СтруктурныеЕдиницы.Ссылка КАК ТорговаяТочка,
	|	СтруктурныеЕдиницы.ТорговыйСбор КАК Сумма
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ЛистУчета.ТорговаяТочка КАК ТорговаяТочка
	|		ИЗ
	|			Документ.ЛистУчета КАК ЛистУчета
	|		ГДЕ
	|			ЛистУчета.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|			И ЛистУчета.Проведен = ИСТИНА
	|			И ЛистУчета.СуммаДокумента = ИСТИНА) КАК ВЗ_Листы
	|		ПО СтруктурныеЕдиницы.Ссылка = ВЗ_Листы.ТорговаяТочка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&ДатаКон, ) КАК ЦФОСтруктурныхЕдиницСрезПоследних
	|		ПО СтруктурныеЕдиницы.Ссылка = ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница
	|ГДЕ
	|	(НЕ ВЗ_Листы.ТорговаяТочка ЕСТЬ NULL 
	|			ИЛИ СтруктурныеЕдиницы.УведомлениеОбОткрытииПодано
	|				И НЕ СтруктурныеЕдиницы.УведомлениеОСнятииСУчетаПодано
	|				И НЕ СтруктурныеЕдиницы.Ссылка В
	|						(ВЫБРАТЬ
	|							НачислениеТорговогоСбораТорговыеТочки.ТорговаяТочка
	|						ИЗ
	|							Документ.НачислениеТорговогоСбора.ТорговыеТочки КАК НачислениеТорговогоСбораТорговыеТочки
	|						ГДЕ
	|							НачислениеТорговогоСбораТорговыеТочки.Ссылка.КварталОбработки = &ДатаНач
	|							И НачислениеТорговогоСбораТорговыеТочки.Ссылка.Проведен = ИСТИНА))
	|	И СтруктурныеЕдиницы.Город.УдерживаетсяТорговыйСбор = ИСТИНА
	|	И ЦФОСтруктурныхЕдиницСрезПоследних.Организация = &Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтруктурныеЕдиницы.НомерТочки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Объект.ТорговыеТочки.Добавить(), Выборка);
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура Заполнить(Команда)
	
	Объект.ТорговыеТочки.Очистить();
	ЗаполнитьНаСервере();
	УстановитьПризнакИзмененияПослеВыгрузки();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Для Каждого СтрокаТаб Из ТекущийОбъект.ТорговыеТочки Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаТаб.Сумма) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке №" + Формат(СтрокаТаб.НомерСтроки, "ЧГ=0") + " не указана сумма операции",,,, Отказ);
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;	
	
КонецПроцедуры

Процедура УстановитьПризнакИзмененияПослеВыгрузки()
	
	Если Объект.ВыгруженВБухгалтерию Тогда
		Объект.ПослеВыгрузкиВносилисьИзменения = Истина;
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьПризнакИзмененияПослеВыгрузки();
	
КонецПроцедуры

&НаКлиенте
Процедура ТорговыеТочкиПриИзменении(Элемент)
	
	УстановитьПризнакИзмененияПослеВыгрузки();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	УстановитьПризнакИзмененияПослеВыгрузки();
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьВБухгалтериюНаСервере()
	
	Документы.НачислениеТорговогоСбора.ВыгрузитьВБухгалтерию(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВБухгалтерию(Команда)
	
	Записать(?(Объект.Проведен
	, Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение)
	, Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Запись)));
	
	ВыгрузитьВБухгалтериюНаСервере();
	ЭтаФорма.Прочитать();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПлатёжныеПоручения(Команда)
	ПараметрыФормы = Новый Структура("Документ",Объект.Ссылка );
	ОткрытьФорму("Документ.НачислениеТорговогоСбора.Форма.ФормаФормированияПлатёжек", ПараметрыФормы);
КонецПроцедуры

//+++АК ZHAS 18-08-17 ИП-00016313
&НаКлиенте
Процедура СформироватьЗаявкиНаУслуги(Команда)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		СформироватьЗаявкиНаУслугиСервер();
		Записать(?(Объект.Проведен
		, Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Запись)
		, Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Запись)));
		
	Иначе	
		Сообщить(Нстр("ru = 'Перед созданием документов необходимо сохранить текущий!'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
//Все настройки по данному блоку хранятся в регистре сведений: ПараметрыДляПодставленияВЗаявки
Процедура СформироватьЗаявкиНаУслугиСервер()
	
	Подтверждающий			= Неопределено;
	Акцептант				= Неопределено;
	СчетУчетаРасчетов		= Неопределено;
	Контрагент				= Неопределено;
	СтатьяДДС				= Неопределено;
	ЦФО						= Неопределено;
	Номенклатура			= Неопределено;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА &Организация = ПараметрыДляПодставленияВЗаявки.Организация
		|			ТОГДА ПараметрыДляПодставленияВЗаявки.Контрагент_1
		|		ИНАЧЕ ПараметрыДляПодставленияВЗаявки.Контрагент_2
		|	КОНЕЦ КАК Контрагент,
		|	ПараметрыДляПодставленияВЗаявки.Акцептант_1 КАК Акцептант_1,
		|	ПараметрыДляПодставленияВЗаявки.Акцептант_2 КАК Акцептант_2,
		|	ПараметрыДляПодставленияВЗаявки.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств,
		|	ПараметрыДляПодставленияВЗаявки.ЦФО КАК ЦФО,
		|	ПараметрыДляПодставленияВЗаявки.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ ПараметрыДляПодставленияВЗаявки
		|ИЗ
		|	РегистрСведений.ПараметрыДляПодстановкиВЗаявки КАК ПараметрыДляПодставленияВЗаявки
		|ГДЕ
		|	ПараметрыДляПодставленияВЗаявки.Индекс = 1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		//+++АК SUVV 2018.04.24 ИП-00017941
		//|ВЫБРАТЬ ПЕРВЫЕ 1
		//|	СоответствияСтатейСчетов.Счет КАК СчетУчетаРасчетов
		//|ИЗ
		//|	РегистрСведений.СоответствияСтатейСчетов КАК СоответствияСтатейСчетов
		//|ГДЕ
		//|	СоответствияСтатейСчетов.СтатьяДДС В
		//|			(ВЫБРАТЬ
		//|				ПараметрыДляПодставленияВЗаявки.СтатьиДвиженияДенежныхСредств
		//|			ИЗ
		//|				ПараметрыДляПодставленияВЗаявки КАК ПараметрыДляПодставленияВЗаявки)
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
	    |СоответствияСтатейСчетов.Счет КАК СчетУчетаРасчетов
        |ИЗ
	    |(ВЫБРАТЬ
		|СоответствияСтатейСчетовСрезПоследних.СтатьяДДС КАК СтатьяДДС,
		|МАКСИМУМ(СоответствияСтатейСчетовСрезПоследних.Период) КАК МаксПериод
		|ИЗ
		|РегистрСведений.СоответствияСтатейСчетов.СрезПоследних(
		|		&ВыбДата,
		|		СтатьяДДС В
		|			(ВЫБРАТЬ
		|				ПараметрыДляПодставленияВЗаявки.СтатьиДвиженияДенежныхСредств
		|			ИЗ
		|				ПараметрыДляПодставленияВЗаявки КАК ПараметрыДляПодставленияВЗаявки)) КАК СоответствияСтатейСчетовСрезПоследних
	    |
	    |СГРУППИРОВАТЬ ПО
		|СоответствияСтатейСчетовСрезПоследних.СтатьяДДС) КАК СтатьиСМаксПериодом
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствияСтатейСчетов КАК СоответствияСтатейСчетов
		|ПО СтатьиСМаксПериодом.СтатьяДДС = СоответствияСтатейСчетов.СтатьяДДС
		|	И СтатьиСМаксПериодом.МаксПериод = СоответствияСтатейСчетов.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		//---АК SUVV
		|ВЫБРАТЬ
		|	ПараметрыДляПодставленияВЗаявки.Контрагент,
		|	ПараметрыДляПодставленияВЗаявки.Акцептант_1,
		|	ПараметрыДляПодставленияВЗаявки.Акцептант_2,
		|	ПараметрыДляПодставленияВЗаявки.ЦФО,
		|	ПараметрыДляПодставленияВЗаявки.Номенклатура,
		|	ПараметрыДляПодставленияВЗаявки.СтатьиДвиженияДенежныхСредств
		|ИЗ
		|	ПараметрыДляПодставленияВЗаявки КАК ПараметрыДляПодставленияВЗаявки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ПараметрыДляПодставленияВЗаявки";
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		//+++АК SUVV 2018.02.28 ИП-00017941
		Запрос.УстановитьПараметр("ВыбДата", Объект.Дата);
		//---АК SUVV

	Результат = Запрос.ВыполнитьПакет();
	
	Выборка_1 = Результат[1].Выбрать();
	Выборка_2 = Результат[2].Выбрать();
	
	Пока Выборка_1.СледующийПоЗначениюПоля("СчетУчетаРасчетов") Цикл
		СчетУчетаРасчетов 	= Выборка_1.СчетУчетаРасчетов;
	КонецЦикла;
	
	Пока Выборка_2.СледующийПоЗначениюПоля("Контрагент") Цикл
		Контрагент 			= Выборка_2.Контрагент;
		Акцептант 			= Выборка_2.Акцептант_1;
		Подтверждающий 		= Выборка_2.Акцептант_2;
		СтатьяДДС			= Выборка_2.СтатьиДвиженияДенежныхСредств;
		ЦФО					= Выборка_2.ЦФО;
		Номенклатура		= Выборка_2.Номенклатура;
	КонецЦикла;

	Если 	НЕ ЗначениеЗаполнено(СчетУчетаРасчетов) ИЛИ 
			НЕ ЗначениеЗаполнено(Контрагент) 		ИЛИ
			НЕ ЗначениеЗаполнено(Акцептант) 		ИЛИ
			НЕ ЗначениеЗаполнено(Подтверждающий) 	ИЛИ
			НЕ ЗначениеЗаполнено(СтатьяДДС) 		ИЛИ
			НЕ ЗначениеЗаполнено(ЦФО) 				ИЛИ
			НЕ ЗначениеЗаполнено(Номенклатура) 		Тогда
	
		//+++ Запрос для режима совместимости//
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Контрагенты.Ссылка КАК Контрагент
		|ПОМЕСТИТЬ КА_По_ИНН
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ИНН = &ИНН
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтатьиДвиженияДенежныхСредств.Ссылка
		|ПОМЕСТИТЬ Статья_ДДС
		|ИЗ
		|	Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств
		|ГДЕ
		|	СтатьиДвиженияДенежныхСредств.Код = &Код
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	Пользователи.Ссылка
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.Наименование = &Наименование_1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	Пользователи.Ссылка
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.Наименование = &Наименование_2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		//+++АК SUVV 2018.02.28 ИП-00017941
		//|ВЫБРАТЬ ПЕРВЫЕ 1
		//|	СоответствияСтатейСчетов.Счет КАК Ссылка
		//|ИЗ
		//|	РегистрСведений.СоответствияСтатейСчетов КАК СоответствияСтатейСчетов
		//|ГДЕ
		//|	СоответствияСтатейСчетов.СтатьяДДС В
		//|			(ВЫБРАТЬ
		//|				Статья_ДДС.Ссылка
		//|			ИЗ
		//|				Статья_ДДС КАК Статья_ДДС)
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
	    |СоответствияСтатейСчетов.Счет КАК Ссылка
        |ИЗ
	    |(ВЫБРАТЬ
		|СоответствияСтатейСчетовСрезПоследних.СтатьяДДС КАК СтатьяДДС,
		|МАКСИМУМ(СоответствияСтатейСчетовСрезПоследних.Период) КАК МаксПериод
		|ИЗ
		|РегистрСведений.СоответствияСтатейСчетов.СрезПоследних(
		|		&ВыбДата,
		|		СтатьяДДС В
		|			(ВЫБРАТЬ
		|				Статья_ДДС.Ссылка
		|			ИЗ
		|				Статья_ДДС КАК Статья_ДДС)) КАК СоответствияСтатейСчетовСрезПоследних
	    |
	    |СГРУППИРОВАТЬ ПО
		|СоответствияСтатейСчетовСрезПоследних.СтатьяДДС) КАК СтатьиСМаксПериодом
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствияСтатейСчетов КАК СоответствияСтатейСчетов
		|ПО СтатьиСМаксПериодом.СтатьяДДС = СоответствияСтатейСчетов.СтатьяДДС
		|	И СтатьиСМаксПериодом.МаксПериод = СоответствияСтатейСчетов.Период
		|;
		//---АК SUVV
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	КА_По_ИНН.Контрагент КАК Ссылка
		|ИЗ
		|	КА_По_ИНН КАК КА_По_ИНН
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Статья_ДДС.Ссылка
		|ИЗ
		|	Статья_ДДС КАК Статья_ДДС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ КА_По_ИНН
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Статья_ДДС";
		
		
		Если Объект.Организация.ИНН = "7734675810" Тогда
			Запрос.УстановитьПараметр("ИНН",		"7734110842");
		Иначе
			Запрос.УстановитьПараметр("ИНН",		"7726062105");
		КонецЕсли;
		Запрос.УстановитьПараметр("Код",			"120742");
		Запрос.УстановитьПараметр("Наименование_1", "Архипова Елена Сергеевна");
		Запрос.УстановитьПараметр("Наименование_2", "Сазанова Анастасия");
		//+++АК SUVV 2018.02.20 ИП-00017941
		Запрос.УстановитьПараметр("ВыбДата", Объект.Дата);
		//---АК SUVV
		Результат = Запрос.ВыполнитьПакет();
	
		Выборка_2 				= Результат[2].Выбрать();
		Пока Выборка_2.Следующий() Цикл
			Подтверждающий 		= Выборка_2.Ссылка;
			Прервать;
		КонецЦикла;
		
		Выборка_3 				= Результат[3].Выбрать();
		Пока Выборка_3.Следующий() Цикл
			Акцептант 			= Выборка_3.Ссылка;
			Прервать;
		КонецЦикла;
		
		Выборка_4 				= Результат[4].Выбрать();
		Пока Выборка_4.Следующий() Цикл
			СчетУчетаРасчетов 	= Выборка_4.Ссылка;
			Прервать;
		КонецЦикла;
		
		Выборка_5 				= Результат[5].Выбрать();
		Пока Выборка_5.Следующий() Цикл
			Контрагент 			= Выборка_5.Ссылка;
			Прервать;
		КонецЦикла;
		
		Выборка_6 				= Результат[6].Выбрать();
		Пока Выборка_6.Следующий() Цикл
			СтатьяДДС 			= Выборка_6.Ссылка;
			Прервать;
		КонецЦикла;
		ЦФО					= Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_000");
		Номенклатура		= Справочники.Номенклатура.НайтиПоКоду("000625071");
		//--- Запрос для режима совместимости//
		
	КонецЕсли;
	
	НазначениеПлатежа 	= "торговый сбор за " + Формат(Объект.КварталОбработки, "ДФ='к ""квартал"" yyyy'") + " на сумму ";
	ДатаПлатежа			= ПолучитьДатуПлатежаДляДокументаЗаявкаНаУслугиМатериалы(Объект.КварталОбработки);
	Для Каждого Строка ИЗ Объект.ТорговыеТочки Цикл
		СтрокиПоТРТ = Объект.ЗаявкиНаУслуги.НайтиСтроки(Новый Структура("ТорговаяТочка", Строка.ТорговаяТочка));
		Если СтрокиПоТРТ.Количество() > 0 Тогда
			ДокЗНУ 						= СтрокиПоТРТ.Получить(0).ЗаявкаНаУслугиМатериалы.ПолучитьОбъект();
		Иначе
			ДокЗНУ 						= Документы.ЗаявкаНаУслугиМатериалы.СоздатьДокумент();
		КонецЕсли;
		
		Если ДокЗНУ.Оплата.Количество() > 0 Тогда
			Если ЗначениеЗаполнено(ДокЗНУ.Оплата.Получить(0).РасходИзБанка) Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ДокЗНУ.Услуги.Очистить();
		ДокЗНУ.Оплата.Очистить();
		ДокЗНУ.ДокументОснование 		= Объект.Ссылка;
		ДокЗНУ.Дата 					= ТекущаяДата();
		ДокЗНУ.Организация				= Объект.Организация;
		ДокЗНУ.Ответственный 			= глЗначениеПеременной("глТекущийПользователь");
		ДокЗНУ.ВидОперации				= ПредопределенноеЗначение("Перечисление.ВидыОперацийЗаявкиНаУслугиМатериалы.ПеречислениеНалога");
		ДокЗНУ.Контрагент				= Контрагент;
		ДокЗНУ.СтатьяДДС				= СтатьяДДС;
		ДокЗНУ.ЦФО						= ЦФО;
		ДокЗНУ.Акцептант				= Акцептант;
		ДокЗНУ.Комментарий				= "" + Строка.ТорговаяТочка + "\ " + Строка.ТорговаяТочка.ОКТМО + "\ " + Формат(Объект.КварталОбработки, "ДФ='к ""квартал"" yyyy'") + " на сумму " + Строка.Сумма;
		ДокЗНУ.ДокументОснование		= Объект.Ссылка;
		ДокЗНУ.КодБК					= "18210505010021000110";
		ДокЗНУ.КодОКТМО					= Строка.ТорговаяТочка.ОКТМО;
		ДокЗНУ.СтатусСоставителя		= "01";
		ДокЗНУ.ВидПеречисленияВБюджет	= ПредопределенноеЗначение("Перечисление.ВидыПеречисленийВБюджет.НалоговыйПлатеж");
		ДокЗНУ.ВидПлатежаВГосБюджет		= ПредопределенноеЗначение("Перечисление.ВидыПлатежейВГосБюджет.Налог");
		ДокЗНУ.ПоказательОснования		= "0";
		ДокЗНУ.ПоказательТипа			= "0";
		ДокЗНУ.ИдентификаторПлатежа		= "0";
		ДокЗНУ.СуммаДокумента			= Строка.Сумма;
		ДокЗНУ.ВариантРасчетаНДС		= ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.НДСвТомЧисле");
		ДокЗНУ.СчетУчетаРасчетов 		= СчетУчетаРасчетов;
		
		//+++АК LAGP 2018.01.25 ИП-00017094.01 Проставляет период документа НачислениеТорговогоСбора, для создания заявок прошлого квартала.
		//ДокЗНУ.ПоказательПериода		= "КВ."+Формат(ДокЗНУ.Дата,"ДФ=кк.yyyy");
		ДокЗНУ.ПоказательПериода		= "КВ."+Формат(Объект.КварталОбработки,"ДФ=кк.yyyy");
		//---АК LAGP
		
		Если НЕ ЗначениеЗаполнено(ДокЗНУ.СчетУчетаРасчетов) Тогда
			СообщениеОПроблемеУказанияСтатьи = (Нстр("ru = 'Необходимо задать соответствие Статьи ДДС и счета для контрагента: %НаименованиеКонтрагента%'"));
			Сообщить(СтрЗаменить(СообщениеОПроблемеУказанияСтатьи, "%НаименованиеКонтрагента%", ДокЗНУ.Контрагент)); 
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДокЗНУ.ДоговорКонтрагента) И НЕ ЗначениеЗаполнено(ДокЗНУ.Организация) Тогда
			ДокЗНУ.Организация 			= ДокЗНУ.ДоговорКонтрагента.Организация;
		КонецЕсли;
		
		//+++АК pozm ИП-00016313 31.08.2017
		ДокЗНУ.ПоказательТипа = "НС";
		//---АК pozm ИП-00016313 31.08.2017
		
		//----------- ДокЗНУ.Услуги --------------//
		Стр 							= ДокЗНУ.Услуги.Добавить();
		Стр.Комментарий 				= ДокЗНУ.Комментарий;
		Стр.Количество					= 1;
		Стр.Номенклатура 				= Номенклатура;
		Стр.Цена						= Строка.Сумма;
		Стр.Сумма						= Строка.Сумма;
		Стр.СтавкаНДС					= ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС");
		Стр.СтруктурнаяЕдиница			= Строка.ТорговаяТочка;
		Стр.Подтверждающий				= Подтверждающий;
		Стр.Акцептант					= Акцептант;
		Стр.Акцептовал					= Акцептант;
		Стр.АкцептовалДата				= ТекущаяДата();
		Стр.Акцептована					= Истина;
		
		//----------- ДокЗНУ.Услуги --------------//
		Стр								= ДокЗНУ.Оплата.Добавить();
		Стр.ДатаПлатежа					= ДатаПлатежа;
		Стр.СуммаОплаты					= Строка.Сумма;
		Стр.НазначениеПлатежа			= НазначениеПлатежа;
		
		Попытка
			ДокЗНУ.Записать(РежимЗаписиДокумента.Проведение);
			СообщениеОСформированномДокументе = (Нстр("ru = 'Сформирован %НовыйДокумент%'"));
			Сообщить(СтрЗаменить(СообщениеОСформированномДокументе, "%НовыйДокумент%", ДокЗНУ.Ссылка));
		Исключение
			СообщениеОПроблемеПроведения = (Нстр("ru = 'Не удалось провести %НовыйДокумент%'"));
			Сообщить(СтрЗаменить(СообщениеОПроблемеПроведения, "%НовыйДокумент%", ДокЗНУ.Ссылка));
			Если НЕ ЗначениеЗаполнено(ДокЗНУ.Ссылка) Тогда
				Попытка
					ДокЗНУ.Записать(РежимЗаписиДокумента.Запись);
				Исключение
					СообщениеОПроблемеЗаписи = (Нстр("ru = 'Не удалось записать %НовыйДокумент%'"));
					Сообщить(СтрЗаменить(СообщениеОПроблемеЗаписи, "%НовыйДокумент%", ДокЗНУ.Ссылка));
					Продолжить;
				КонецПопытки;
			КонецЕсли;	
		КонецПопытки;
		
		СтрокиПоТРТИЗНУ = Объект.ЗаявкиНаУслуги.НайтиСтроки(Новый Структура("ТорговаяТочка, ЗаявкаНаУслугиМатериалы", Строка.ТорговаяТочка, ДокЗНУ.Ссылка));
		
		Если СтрокиПоТРТИЗНУ.Количество() > 0 Тогда
			Стр 						= СтрокиПоТРТИЗНУ.Получить(0);
		Иначе
			Стр 						= Объект.ЗаявкиНаУслуги.Добавить();
		КонецЕсли;
		Стр.ЗаявкаНаУслугиМатериалы 	= ДокЗНУ.Ссылка;
		Стр.ТорговаяТочка				= Строка.ТорговаяТочка;
		Стр.Сумма						= Строка.Сумма;
		
	КонецЦикла;
	
	Сообщить(Нстр("ru = 'Обработка завершена!'"));
	
КонецПроцедуры	

&НаСервере
Функция ПолучитьДатуПлатежаДляДокументаЗаявкаНаУслугиМатериалы(пВрКварталОбработки)
	пНоваяДатаПлатежа 	= Дата(1,1,1);
	пДатаДляЗапроса 	= Дата(1,1,1);
	Если ЗначениеЗаполнено(пВрКварталОбработки) Тогда
		пДатаДляЗапроса = НачалоДня((КонецКвартала(пВрКварталОбработки) + 1) + 2073600); //24 * 60 * 60 * 24);
	КонецЕсли;	
	Если ЗначениеЗаполнено(пДатаДляЗапроса) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря
		|ИЗ
		|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
		|ГДЕ
		|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря >= &ДатаДляЗапроса
		|	И РегламентированныйПроизводственныйКалендарь.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
		|
		|УПОРЯДОЧИТЬ ПО
		|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря";
		Запрос.УстановитьПараметр("ДатаДляЗапроса", пДатаДляЗапроса);
		Результат = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			пНоваяДатаПлатежа = ВыборкаДетальныеЗаписи.ДатаКалендаря;
		КонецЦикла;
	КонецЕсли;	
	Возврат пНоваяДатаПлатежа;
КонецФункции	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Рабочие настройки видимости кнопок и закладок 
	Элементы.ФормаСформироватьПлатёжныеПоручения.Видимость 	= Ложь;
	Элементы.ФормаСформироватьЗаявкиНаУслуги.Видимость 		= Истина;
	Элементы.Группа_СозданныеСтраницы.Видимость 			= Истина;
КонецПроцедуры
//---АК ZHAS 18-08-17 ИП-00016313
