
////////////////////////////////////////////////////////////////////////////////
// Печать

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаявкаНаСклад") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗаявкаНаСклад", "Заявка на склад",
																ПечатьЗаявокНаСклад(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция ПечатьЗаявокНаСклад(МассивОбъектов, ОбъектыПечати) 
	
	Если ТипЗнч(МассивОбъектов) = Тип("ДокументСсылка.ЗаявкаНаСклад") Тогда
		ЭтоОборудование = МассивОбъектов.ВидОперации = Перечисления.ВидыОперацийЗаявкиНаСклад.ВозвратОборудованияСТорговойТочки
						  ИЛИ МассивОбъектов.ВидОперации = Перечисления.ВидыОперацийЗаявкиНаСклад.ПередачаОборудованияВТорговуюТочку
						  ИЛИ МассивОбъектов.ВидОперации = Перечисления.ВидыОперацийЗаявкиНаСклад.ПоступлениеОборудованияОтПоставщика;
		Если ЭтоОборудование Тогда
			ДокументСсылка = МассивОбъектов;
			Возврат ДатьПечатныйДокумент_Оборудование(ДокументСсылка);
		Иначе
			Возврат ДатьПечатныйДокумент_Остальное(МассивОбъектов);
		КонецЕсли;
	Иначе
		Возврат ДатьПечатныйДокумент_Остальное(МассивОбъектов);
	КонецЕсли;
			
КонецФункции

Функция ДатьПечатныйДокумент_Оборудование(ДокументСсылка)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
							|	ЗаявкаНаСкладОборудование.НомерСтроки,
							|	ЗаявкаНаСкладОборудование.Номенклатура,
							|	ЗаявкаНаСкладОборудование.ОсновноеСредство,
							|	ЗаявкаНаСкладОборудование.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер
							|ИЗ
							|	Документ.ЗаявкаНаСклад.Оборудование КАК ЗаявкаНаСкладОборудование
							|ГДЕ
							|	ЗаявкаНаСкладОборудование.Ссылка = &Ссылка
							|	");
	Запрос.Параметры.Вставить("Ссылка", ДокументСсылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = Документы.ЗаявкаНаСклад.ПолучитьМакет("ЗаявкаНаСклад_Оборудование");
	
	//Шапка
	Область	= Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.Документ		= ДокументСсылка;
	Область.Параметры.Склад			= ДокументСсылка.Склад;
	Область.Параметры.ВидОперации	= ДокументСсылка.ВидОперации;
	Область.Параметры.Получатель	= ?(ЗначениеЗаполнено(ДокументСсылка.Получатель), ДокументСсылка.Получатель, ДокументСсылка.Поставщик);
	ТабДок.Вывести(Область);
	
	//Шапка таблицы
	Область = Макет.ПолучитьОбласть("ШапкаТаблицы");
	Область.Параметры.Наименование = ?(ДокументСсылка.ВидОперации = Перечисления.ВидыОперацийЗаявкиНаСклад.ВозвратОборудованияСТорговойТочки, "Основное средство", "Номенклатура");
	ТабДок.Вывести(Область);
	
	//Детали
	ВозвратОборудованияСТТ = (ДокументСсылка.ВидОперации = Перечисления.ВидыОперацийЗаявкиНаСклад.ВозвратОборудованияСТорговойТочки);
	Пока Выборка.Следующий() Цикл
		Область	= Макет.ПолучитьОбласть("Детали");
		Область.Параметры.Заполнить(Выборка);
		Область.Параметры.МТЗ				= ?(ВозвратОборудованияСТТ, Выборка.ОсновноеСредство, Выборка.Номенклатура);
		Область.Параметры.ЗаводскойНомер	= ?(ВозвратОборудованияСТТ, Выборка.ЗаводскойНомер, "-");
		ТабДок.Вывести(Область);
	КонецЦикла;
	
	//Подвал
	Область	= Макет.ПолучитьОбласть("Подвал");
	ТабДок.Вывести(Область);
	
	//Служебное
	Область = Макет.ПолучитьОбласть("ВремяПечати");
	Область.Параметры.ВремяПечати = "[" + ТекущаяДата() + "] " + "Автор: " + ДокументСсылка.Автор;
	ТабДок.Вывести(Область);
	
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.АвтоМасштаб = Истина;
	
	Возврат ТабДок;
	
КонецФункции

Функция  ДатьПечатныйДокумент_Остальное(МассивОбъектов)
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ОриентацияСтраницы		= ОриентацияСтраницы.Портрет;
	ТабДок.РазмерКолонтитулаСнизу	= 0;
	ТабДок.РазмерКолонтитулаСверху 	= 0;
	ТабДок.ПолеСверху 	= 5;
	ТабДок.ПолеСнизу 	= 5;
	ТабДок.ПолеСлева 	= 5;
	ТабДок.ПолеСправа 	= 5;
	ТабДок.АвтоМасштаб	= Истина;
	
	Макет = Документы.ЗаявкаНаСклад.ПолучитьМакет("ЗаявкаНаСклад");
	
	ДатаДляСреза = '00010101';
	Если ТипЗнч(МассивОбъектов) = Тип("ДокументСсылка.ЗаявкаНаСклад") Тогда
		ДатаДляСреза = МассивОбъектов.Дата;
	Иначе	
		Для Каждого ЭлементМассива Из МассивОбъектов Цикл
			ДатаДляСреза = Макс(ДатаДляСреза, ЭлементМассива.Дата);
		КонецЦикла;	
	КонецЕсли;	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза", КонецДня(ДатаДляСреза));
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаявкаНаСклад.Ссылка,
	|	ЗаявкаНаСклад.ПометкаУдаления,
	|	ЗаявкаНаСклад.Номер,
	|	ЗаявкаНаСклад.Дата,
	|	ЗаявкаНаСклад.Проведен,
	|	ЗаявкаНаСклад.ВидОперации,
	|	ЗаявкаНаСклад.Склад,
	|	ЗаявкаНаСклад.Автор,
	|	ЗаявкаНаСклад.Товары.(
	|		Ссылка,
	|		НомерСтроки,
	|		Номенклатура,
	|		Характеристика,
	|		ЕдиницаИзмерения,
	|		Количество
	|	),
	|	ЗаявкаНаСклад.Получатель,
	|	ЗаявкаНаСклад.Расходники.(
	|		Ссылка,
	|		НомерСтроки,
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		Отгружено
	|	),
	|	ЗаявкаНаСклад.ЕстьРасходники,
	|	ЗаявкаНаСклад.ДатаОтгрузки
	|ИЗ
	|	Документ.ЗаявкаНаСклад КАК ЗаявкаНаСклад
	|ГДЕ
	|	ЗаявкаНаСклад.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаявкаНаСклад.МоментВремени
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КоличествоВКоробкеСрезПоследних.Характеристика КАК Объект,
	|	КоличествоВКоробкеСрезПоследних.Количество КАК Значение
	|ИЗ
	|	РегистрСведений.КоличествоВКоробке.СрезПоследних(
	|			&ДатаСреза,
	|			Характеристика В
	|				(ВЫБРАТЬ
	|					ЗаявкаНаСкладТовары.Характеристика
	|				ИЗ
	|					Документ.ЗаявкаНаСклад.Товары КАК ЗаявкаНаСкладТовары
	|				ГДЕ
	|					ЗаявкаНаСкладТовары.Ссылка В (&МассивОбъектов))) КАК КоличествоВКоробкеСрезПоследних";
	
	Результаты = Запрос.ВыполнитьПакет();
	
	Выборка 			= Результаты[0].Выбрать();
	ТабХарактеристики 	= Результаты[1].Выгрузить();

	ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Заголовок");
	ОбластьСклад	 	= Макет.ПолучитьОбласть("Склад");
	ОбластьПолучатель 	= Макет.ПолучитьОбласть("Получатель");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока 		= Макет.ПолучитьОбласть("Строка");
	ОбластьШапкаТаблицыРМ 	= Макет.ПолучитьОбласть("ШапкаТаблицыРМ");
	ОбластьСтрокаРМ 		= Макет.ПолучитьОбласть("СтрокаРМ");
	ОбластьПодвалТаблицы 	= Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьПодвалТаблицыРМ 	= Макет.ПолучитьОбласть("ПодвалТаблицыРМ");
	ОбластьПодвал 			= Макет.ПолучитьОбласть("Подвал");
	ОбластьВремяПечати 		= Макет.ПолучитьОбласть("ВремяПечати");
	ОбластьИтог				= Макет.ПолучитьОбласть("Итог");

	
	ТабДок.Очистить();

	// основная выборка
	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ОбластьЗаголовок.Параметры.Заполнить(Выборка);
		ОбластьЗаголовок.Параметры.Дата = Формат(Выборка.Дата, "ДЛФ=DD");
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ОбластьСклад.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(ОбластьСклад, Выборка.Уровень());

		ОбластьПолучатель.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(ОбластьПолучатель, Выборка.Уровень());
		
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		ВыборкаНоменклатура = Выборка.Товары.Выбрать();
		
		КолвоЕд	= 0;
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаНоменклатура);
			СтрокаХарактеристика = ТабХарактеристики.Найти(ВыборкаНоменклатура.Характеристика, "Объект");
			КоличествоВУпаковке = 0;
			Если СтрокаХарактеристика <> Неопределено Тогда
				КоличествоВУпаковке = СтрокаХарактеристика.Значение;
			КонецЕсли;	

			КолвоЕд = КолвоЕд + ВыборкаНоменклатура.Количество;
			
			ТабДок.Вывести(ОбластьСтрока, ВыборкаНоменклатура.Уровень());
			
		КонецЦикла;
		ТабДок.Вывести(ОбластьПодвалТаблицы);
		
		ОбластьИтог.Параметры.ИтогЕд 	= КолвоЕд;
		ТабДок.Вывести(ОбластьИтог);
		
		Если Выборка.ЕстьРасходники Тогда
			ТабДок.Вывести(ОбластьШапкаТаблицыРМ);
			ВыборкаРасходники = Выборка.Расходники.Выбрать();
			
			Пока ВыборкаРасходники.Следующий() Цикл
				ОбластьСтрокаРМ.Параметры.Заполнить(ВыборкаРасходники);
				ТабДок.Вывести(ОбластьСтрокаРМ);
			КонецЦикла;
			ТабДок.Вывести(ОбластьПодвалТаблицыРМ);
		КонецЕсли;
		ОбластьВремяПечати.Параметры.ВремяПечати = "[" + ТекущаяДата() + "] " + "Автор: " + Выборка.Автор;
		
		ТабДок.Вывести(ОбластьПодвал);

		ВставлятьРазделительСтраниц = Истина;
		ТабДок.Вывести(ОбластьВремяПечати);
		
	КонецЦикла;
	
	ТабДок.АвтоМасштаб = Истина;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьТОРГ13(Ссылка) Экспорт 
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.РазмерКолонтитулаСнизу	= 0;
	ТабДок.РазмерКолонтитулаСверху 	= 0;
	ТабДок.ПолеСверху = 5;
	ТабДок.ПолеСнизу = 5;
	ТабДок.ПолеСлева = 5;
	ТабДок.ПолеСправа = 5;
	
	Т = Новый ТабличныйДокумент;
	
	Макет = Документы.РасходныйОрдерСклад.ПолучитьМакет("ТОРГ13");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РасходныйОрдерСклад.Ссылка,
	               |	РасходныйОрдерСклад.ВерсияДанных,
	               |	РасходныйОрдерСклад.ПометкаУдаления,
	               |	РасходныйОрдерСклад.Номер,
	               |	РасходныйОрдерСклад.Дата,
	               |	РасходныйОрдерСклад.Проведен,
	               |	РасходныйОрдерСклад.ВидОперации,
	               |	РасходныйОрдерСклад.Склад КАК ОтправительПодразделение,
	               |	РасходныйОрдерСклад.Автор,
	               |	РасходныйОрдерСклад.Товары.(
	               |		Ссылка,
	               |		НомерСтроки,
	               |		Номенклатура,
	               |		Характеристика,
	               |		ЕдиницаИзмерения,
	               |		Количество КАК КоличествоМест,
	               |		ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК EдиницаИзмеренияКодПоОКЕИ,
	               |		Номенклатура.id_tov КАК ТоварКод,
	               |		Характеристика.НаименованиеТовараУПоставщика КАК НаименованиеТовараУПоставщика,
	               |		Номенклатура.Наименование КАК ТоварНаименование
	               |	),
	               |	РасходныйОрдерСклад.Получатель КАК ПолучательПодразделение
	               |ИЗ
	               |	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
	               |ГДЕ
	               |	РасходныйОрдерСклад.Ссылка = &Ссылка" ;
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок 	= Макет.ПолучитьОбласть("Шапка");
	ОбластьИтогиПоСтранице 	= Макет.ПолучитьОбласть("ИтогиПоСтранице");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьСтрока 		= Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал 		= Макет.ПолучитьОбласть("Подвал");
	ОбластьВсего	 	= Макет.ПолучитьОбласть("Всего");
//	ОбластьВремяПечати 	= Макет.ПолучитьОбласть("ВремяПечати");
	

	НомерЛиста = 1;
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ОбластьЗаголовок.Параметры.Заполнить(Выборка);
		ОбластьЗаголовок.Параметры.ОтправительВидДеятельности = "Склад";
		ОбластьЗаголовок.Параметры.ПолучательВидДеятельности = "Розница";
		ОбластьЗаголовок.Параметры.Дата = Формат(Выборка.Дата,"ДЛФ=DD");
		Т.Вывести(ОбластьЗаголовок);
		
		//ОбластьСклад.Параметры.Заполнить(Выборка);
		//ТабДок.Вывести(ОбластьСклад, Выборка.Уровень());

		//ОбластьПолучатель.Параметры.Заполнить(Выборка);
		//ТабДок.Вывести(ОбластьПолучатель, Выборка.Уровень());
		
		Т.Вывести(ОбластьШапкаТаблицы);
		ВыборкаНоменклатура = Выборка.Товары.Выбрать();
		ИтогКоличествоМестПоСтранице = 0;
		ИтогоКоличествоМест = 0;
		
		Пока ВыборкаНоменклатура.Следующий() Цикл
			ОбластьСтрока.Параметры.Заполнить(ВыборкаНоменклатура);
			
			//+++ gusd
			НаименованиеТовара = СокрЛП(ВыборкаНоменклатура.ТоварНаименование);
			Если ЗначениеЗаполнено(ВыборкаНоменклатура.НаименованиеТовараУПоставщика)
				И ВРег(НаименованиеТовара) <> ВРег(СокрЛП(ВыборкаНоменклатура.НаименованиеТовараУПоставщика)) Тогда
				
				НаименованиеТовара = НаименованиеТовара + " (" + СокрЛП(ВыборкаНоменклатура.НаименованиеТовараУПоставщика) + ")";
				
			КонецЕсли;
			ОбластьСтрока.Параметры.Номенклатура = НаименованиеТовара;
			//--- gusd
			
			//Отбор = новый структура;
			//Отбор.Вставить("Объект",ВыборкаНоменклатура.Характеристика);
			//Отбор.Вставить("Свойство",ПланыВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке);
			//Отбор.Вставить("СтруктурнаяЕдиница",Справочники.СтруктурныеЕдиницы.ПустаяСсылка());
			//
			//Результат = РегистрыСведений.ЗначенияСвойствОбъектов.Получить(Отбор);
						
			//КоличествоВУпаковке = ?(Результат.Значение=0,1,Результат.Значение);
			КоличествоВУпаковке = 1;
			
			КоличествоМест = Окр(ВыборкаНоменклатура.КоличествоМест/КоличествоВУпаковке,1);
			
			ОбластьСтрока.Параметры.КоличествоВОдномМесте = КоличествоВУпаковке;
			ОбластьСтрока.Параметры.КоличествоМест = КоличествоМест;
			
			М = Новый Массив;
			М.Добавить(Т);
			М.Добавить(ОбластьСтрока);
			М.Добавить(ОбластьИтогиПоСтранице);
			
			Если НЕ ТабДок.ПроверитьВывод(М) Тогда
				Если ВыборкаНоменклатура.КоличествоМест = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				ТабДок.Вывести(Т);
				ОбластьИтогиПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
				ТабДок.Вывести(ОбластьИтогиПоСтранице);
				
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
				НомерЛиста = НомерЛиста + 1;
				ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Лист: "+ НомерЛиста;
				Т.Очистить();
				Т.Вывести(ОбластьШапкаТаблицы);
				Т.Вывести(ОбластьСтрока);
				ИтогоКоличествоМест = ИтогоКоличествоМест + КоличествоМест;
				ИтогКоличествоМестПоСтранице = 0;
			Иначе
				
				ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице + КоличествоМест;
				ИтогоКоличествоМест = ИтогоКоличествоМест + КоличествоМест;
				Т.Вывести(ОбластьСтрока);
			КонецЕсли;
			
		КонецЦикла;
		
		М = Новый Массив;
		М.Добавить(Т);
		М.Добавить(ОбластьВсего);
		М.Добавить(ОбластьПодвал);
		
		ОбластьВсего.Параметры.ИтогоКоличествоМест = ИтогоКоличествоМест;
		
		//Если НЕ ТабДок.ПроверитьВывод(М) Тогда
		//	ТабДок.Вывести(Т.Область(1,Т.ВысотаСтраницы-1);
		//	ОбластьИтогиПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
		//	ТабДок.Вывести(ОбластьИтогиПоСтранице);
		//	
		//	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		//	НомерЛиста = НомерЛиста + 1;
		//	ОбластьШапкаТаблицы.Параметры.НомерСтраницы = "Лист: "+ НомерЛиста;
		//	Т.Очистить();
		//	Т.Вывести(ОбластьШапкаТаблицы);
		//	Т.Вывести(ОбластьСтрока);
		//	ИтогКоличествоМестПоСтранице = 0;
		//Иначе
			ТабДок.Вывести(Т);
			ТабДок.Вывести(ОбластьВсего);
			ТабДок.Вывести(ОбластьПодвал);
		//КонецЕсли;
		

//		ОбластьВремяПечати.Параметры.ВремяПечати = "["+ТекущаяДата()+"] "+"Автор: "+Выборка.Автор+", Редактор: "+Выборка.Редактор;


		ВставлятьРазделительСтраниц = Истина;
//		ТабДок.Вывести(ОбластьВремяПечати);
	КонецЦикла;
	
	Возврат ТабДок;
КонецФункции

Функция ПечатьМ11(Ссылка) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РасходныйОрдерСкладТовары.Ссылка.Номер,
	               |	РасходныйОрдерСкладТовары.Ссылка.Дата,
	               |	"" КАК Фирма,
	               |			"" КАК КодПоОКПО,
	               |	РасходныйОрдерСкладТовары.Номенклатура.Код КАК НоменклатураКод,
	               |	РасходныйОрдерСкладТовары.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	               |	РасходныйОрдерСкладТовары.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмерения,
	               |	РасходныйОрдерСкладТовары.Количество,
	               |	0 КАК СуммаБезНДС,
	               |	0 КАК СуммаНДС,
	               |	РасходныйОрдерСкладТовары.Характеристика,
	               |	РасходныйОрдерСкладТовары.Ссылка.Склад,
	               |	РасходныйОрдерСкладТовары.Ссылка.Получатель,
	               |	РасходныйОрдерСкладТовары.Ссылка.Автор,
	               |	РасходныйОрдерСкладТовары.Ссылка.Комментарий,
	               |	РасходныйОрдерСкладТовары.Ссылка.Организация,
	               |	РасходныйОрдерСкладТовары.Ссылка.Организация.ИНН,
	               |	РасходныйОрдерСкладТовары.Ссылка.Организация.КПП,
	               |	РасходныйОрдерСкладТовары.Ссылка.Организация.КодПоОКАТО,
	               |	РасходныйОрдерСкладТовары.Ссылка.Организация.КодПоОКПО,
	               |	РасходныйОрдерСкладТовары.Номенклатура,
	               |	ВетеринарныеРазрешенияСрезПоследних.Период,
	               |	ВетеринарныеРазрешенияСрезПоследних.ВетеринарныйВрач,
	               |	ВетеринарныеРазрешенияСрезПоследних.Серия,
	               |	ВетеринарныеРазрешенияСрезПоследних.Номер КАК ВетНомер
	               |ИЗ
	               |	Документ.ЗаявкаНаСклад.Товары КАК РасходныйОрдерСкладТовары,
	               |	РегистрСведений.ВетеринарныеРазрешения.СрезПоследних(&ДатаКон, ) КАК ВетеринарныеРазрешенияСрезПоследних
	               |ГДЕ
	               |	РасходныйОрдерСкладТовары.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РасходныйОрдерСкладТовары.Ссылка.Склад.Представление,
	               |	РасходныйОрдерСкладТовары.Ссылка.Дата,
	               |	РасходныйОрдерСкладТовары.Ссылка.Номер,
	               |	РасходныйОрдерСкладТовары.ЕдиницаИзмерения.Наименование,
	               |	РасходныйОрдерСкладТовары.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код,
	               |	РасходныйОрдерСкладТовары.Номенклатура.Код,
	               |	РасходныйОрдерСкладТовары.Номенклатура.Представление,
	               |	РасходныйОрдерСкладТовары.Количество,
	               |	РасходныйОрдерСкладТовары.Характеристика,
	               |	РасходныйОрдерСкладТовары.Ссылка.Склад,
	               |	РасходныйОрдерСкладТовары.Ссылка.Получатель,
	               |	РасходныйОрдерСкладТовары.Ссылка.Автор,
	               |	РасходныйОрдерСкладТовары.Ссылка.Комментарий,
	               |	РасходныйОрдерСкладТовары.Ссылка.Организация,
	               |	РасходныйОрдерСкладТовары.Ссылка.Организация.ИНН,
	               |	РасходныйОрдерСкладТовары.Ссылка.Организация.КПП,
	               |	РасходныйОрдерСкладТовары.Ссылка.Организация.КодПоОКАТО,
	               |	РасходныйОрдерСкладТовары.Ссылка.Организация.КодПоОКПО,
	               |	РасходныйОрдерСкладТовары.Номенклатура,
	               |	ВетеринарныеРазрешенияСрезПоследних.Период,
	               |	ВетеринарныеРазрешенияСрезПоследних.ВетеринарныйВрач,
	               |	ВетеринарныеРазрешенияСрезПоследних.Серия,
	               |	ВетеринарныеРазрешенияСрезПоследних.Номер";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Ссылка.Дата));
	Запрос.УстановитьПараметр("СсылкаДата", Ссылка.МоментВремени());	//SelV в рамках СОД№18521 2012-01-31 : // 
	
	//струкУчетнаяПолитикаФирмы = ОмОперативныйУчет.ПолучитьУчетнуюПолитикуФирмыДокумента(Ссылка,"Списание",Дата);	
	//Если струкУчетнаяПолитикаФирмы.СхемаНалогообложения = Перечисления.СхемыНалогообложения.Общая Или струкУчетнаяПолитикаФирмы.СхемаНалогообложения = Перечисления.СхемыНалогообложения.ОбщаяЕНВД Тогда
	//	флУчитыватьНДС = Истина; 
	//Иначе
	//	флУчитыватьНДС = Ложь;
	//КонецЕсли; 
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Первая = Истина;
	СуммаИтого = 0;
	Макет = Документы.РасходныйОрдерСклад.ПолучитьМакет("М11");
	Пока Выборка.Следующий() Цикл
		Если Первая Тогда
			
			Шапка = Макет.ПолучитьОбласть("Шапка");
			Шапка.Параметры.Фирма = Ссылка.Организация.НаименованиеПолное + " ИНН:" + Строка(Ссылка.Организация.ИНН) + "; " + СокрЛП(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Ссылка.Организация, ТекущаяДата()).ЮридическийАдрес); 
			Шапка.Параметры.Номер = Выборка.Номер;
			Шапка.Параметры.КодОКПО = Выборка.КодПоОКПО;
			Шапка.Параметры.ДатаДок = Выборка.Дата;
			Шапка.Параметры.ПодразделениеОтправитель = Выборка.Склад;
			Шапка.Параметры.ПодразделениеПолучатель = Выборка.Получатель;
			//Шапка.Параметры.КорСчет = Выборка.СчетЗатрат;
			Строка = Макет.ПолучитьОбласть("Строка");
			
			ТабДок = Новый ТабличныйДокумент;
			ТабДок.Вывести(Шапка);
			Первая = Ложь;
			
			ВетВрач = Выборка.ВетеринарныйВрач;
			ВетНомер = Выборка.ВетНомер + Цел((Ссылка.Дата - Выборка.Период) / 86400);
			ВетСерия = Выборка.Серия;
		КонецЕсли;
		Строка.Параметры.МатЦенность =""+ Выборка.Номенклатура+ " "+Выборка.Характеристика;
		Строка.Параметры.Код = Выборка.НоменклатураКод;
		Строка.Параметры.ЕдиницаИзмеренияКод = Выборка.ЕдиницаИзмеренияКод;
		Строка.Параметры.ЕдиницаИзмерения = Выборка.ЕдиницаИзмерения;
		Строка.Параметры.КоличествоЗатребовано = Выборка.Количество;
		Строка.Параметры.КоличествоОтпущено = Выборка.Количество;
		Строка.Параметры.МатериалЦенаБезНДС = Выборка.СуммаБезНДС / Выборка.Количество;
		Строка.Параметры.МатериалСумма = Выборка.СуммаБезНДС;
		СуммаИтого = СуммаИтого + Выборка.СуммаБезНДС;
		//Строка.Параметры.СубСчет = ОмБухгалтерскийУчетДополнительно2.БУПолучитьСчетУчетаТМЦ(Выборка.ВидТовара,Выборка.ВидМатериала,Выборка.ВидСклада,Перечисления.СтатусыПартий.Собственный);
		ТабДок.Вывести(Строка);
	КонецЦикла; 
	
	Подвал = Макет.ПолучитьОбласть("Подвал");
	Подвал.Параметры.СуммаИтого = СуммаИтого;
	Подвал.Параметры.ВетНомер = Строка(ВетСерия) + " №" + Строка(ВетНомер);			
	Подвал.Параметры.Врач = ВетВрач;	
	
	ТабДок.Вывести(Подвал);
	
	Возврат ТабДок;
КонецФУнкции
