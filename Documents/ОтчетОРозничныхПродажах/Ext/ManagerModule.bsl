
Функция РассчитатьСуммуНДСТабЧасти(Сумма, СтавкаЧислом)

	СуммаНДС = УчетНДС.РассчитатьСуммуНДС(Сумма,
	    	                                               Истина, 
														   Истина,
	            	                                       СтавкаЧислом);
														   
	Возврат Окр(СуммаНДС, 2);
	
КонецФункции // РассчитатьСуммуНДСТабЧасти()

Функция ПолучитьПродажиПоОрганизации(Организация, Дата) Экспорт
	
	СтруктураВозврат = Новый Структура("ТабТовары, ТабПоСтруктурнымЕдиницам");
	
	//Если Организация.ИНН = "7734675810" Тогда // если вкусвилл
	//	Запрос = Новый Запрос();
	//	Запрос.УстановитьПараметр("Организация", Организация);
	//	Запрос.УстановитьПараметр("Дата", НачалоДня(Дата));
	//	Запрос.УстановитьПараметр("ДатаНач", Новый Граница(НачалоДня(Дата), ВидГраницы.Включая));
	//	Запрос.УстановитьПараметр("ДатаКон", Новый Граница(КонецДня(Дата), ВидГраницы.Включая));
	//	Запрос.Текст = "ВЫБРАТЬ
	//				   |	ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура,
	//				   |	СУММА(ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот * -1) КАК Количество,
	//				   |	ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	//				   |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена,
	//				   |	СУММА(ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот * -1 * ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)) КАК БазаРаспределения,
	//				   |	СУММА(ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2))) КАК Сумма,
	//				   |	СУММА(ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2))) КАК СуммаНДС
	//				   |ИЗ
	//				   |	РегистрНакопления.ДвиженияТоваровПоЛистамУчета.Обороты(&ДатаНач, &ДатаКон, Регистратор, ВидДвиженияТовара = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.Продажа)) КАК ДвиженияТоваровПоЛистамУчетаОбороты
	//				   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	//				   |				&Дата,
	//				   |				ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	//				   |					И ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.ОсновнойТипЦенПродаж)) КАК ЦеныНоменклатурыСрезПоследних
	//				   |		ПО ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	//				   |ГДЕ
	//				   |	ДвиженияТоваровПоЛистамУчетаОбороты.Регистратор.Организация = &Организация
	//				   |	И ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура.СлужебныйТовар = ЛОЖЬ
	//				   |
	//				   |СГРУППИРОВАТЬ ПО
	//				   |	ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура,
	//				   |	ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура.СтавкаНДС,
	//				   |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
	//				   |;
	//				   |
	//				   |////////////////////////////////////////////////////////////////////////////////
	//				   |ВЫБРАТЬ
	//				   |	ЛистУчета.ТорговаяТочка КАК СтруктурнаяЕдиница,
	//				   |	СУММА(ЕСТЬNULL(ЛистУчетаВыручка.Сумма, 0) - ЕСТЬNULL(ЛистУчетаВыручка.СуммаВозврата, 0) + ЕСТЬNULL(ЛистУчетаОплатыПоБанковскимКартам.Сумма, 0) + ЕСТЬNULL(ЛистУчетаОплатыПоБанковскимКартам.СуммаДоставка, 0) - ЕСТЬNULL(ЛистУчетаОплатыПоБанковскимКартам.СуммаВозврата, 0)) КАК ОбщаяСумма,
	//				   |	СУММА(ЕСТЬNULL(ЛистУчетаОплатыПоБанковскимКартам.Сумма, 0) + ЕСТЬNULL(ЛистУчетаОплатыПоБанковскимКартам.СуммаДоставка, 0) - ЕСТЬNULL(ЛистУчетаОплатыПоБанковскимКартам.СуммаВозврата, 0)) КАК СуммаБезналаВОбщейСумме
	//				   |ИЗ
	//				   |	Документ.ЛистУчета КАК ЛистУчета
	//				   |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//				   |			ЛистУчетаВыручка.Ссылка КАК Ссылка,
	//				   |			СУММА(ЛистУчетаВыручка.Сумма) КАК Сумма,
	//				   |			СУММА(ЛистУчетаВыручка.СуммаВозврата) КАК СуммаВозврата
	//				   |		ИЗ
	//				   |			Документ.ЛистУчета.Выручка КАК ЛистУчетаВыручка
	//				   |		ГДЕ
	//				   |			НАЧАЛОПЕРИОДА(ЛистУчетаВыручка.Ссылка.Дата, ДЕНЬ) = &Дата
	//				   |			И ЛистУчетаВыручка.Ссылка.Организация = &Организация
	//				   |		
	//				   |		СГРУППИРОВАТЬ ПО
	//				   |			ЛистУчетаВыручка.Ссылка) КАК ЛистУчетаВыручка
	//				   |		ПО ЛистУчета.Ссылка = ЛистУчетаВыручка.Ссылка
	//				   |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//				   |			ЛистУчетаОплатыПоБанковскимКартам.Ссылка КАК Ссылка,
	//				   |			СУММА(ЛистУчетаОплатыПоБанковскимКартам.Сумма) КАК Сумма,
	//				   |			СУММА(ЛистУчетаОплатыПоБанковскимКартам.СуммаДоставка) КАК СуммаДоставка,
	//				   |			СУММА(ЛистУчетаОплатыПоБанковскимКартам.СуммаВозврата) КАК СуммаВозврата
	//				   |		ИЗ
	//				   |			Документ.ЛистУчета.ОплатыПоБанковскимКартам КАК ЛистУчетаОплатыПоБанковскимКартам
	//				   |		ГДЕ
	//				   |			НАЧАЛОПЕРИОДА(ЛистУчетаОплатыПоБанковскимКартам.Ссылка.Дата, ДЕНЬ) = &Дата
	//				   |			И ЛистУчетаОплатыПоБанковскимКартам.Ссылка.Организация = &Организация
	//				   |		
	//				   |		СГРУППИРОВАТЬ ПО
	//				   |			ЛистУчетаОплатыПоБанковскимКартам.Ссылка) КАК ЛистУчетаОплатыПоБанковскимКартам
	//				   |		ПО ЛистУчета.Ссылка = ЛистУчетаОплатыПоБанковскимКартам.Ссылка
	//				   |ГДЕ
	//				   |	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) = &Дата
	//				   |	И ЛистУчета.Организация = &Организация
	//				   |
	//				   |СГРУППИРОВАТЬ ПО
	//				   |	ЛистУчета.ТорговаяТочка";
	//				   
	//	Результаты = Запрос.ВыполнитьПакет();
	//	ТабКРаспределению = Результаты[0].Выгрузить();
	//	ТабПоСтруктурнымЕдиницам = Результаты[1].Выгрузить();
	//	СуммаКРаспределению = ТабПоСтруктурнымЕдиницам.Итог("ОбщаяСумма");
	//	
	//	Если СуммаКРаспределению <> 0 Тогда
	//		Суммы = ОбщегоНазначения.РаспределитьПропорционально(СуммаКРаспределению, ТабКРаспределению.ВыгрузитьКолонку("БазаРаспределения"));
	//		ТабКРаспределению.ЗагрузитьКолонку(Суммы,"Сумма");
	//	КонецЕсли;	
	//	
	//	Для Каждого СтрокаТаб Из ТабКРаспределению Цикл
	//		СтрокаТаб.Цена = ?(СтрокаТаб.Количество = 0, 0, СтрокаТаб.Сумма / СтрокаТаб.Количество);
	//		СтавкаНДС = УчетНДС.ПолучитьСтавкуНДС(СтрокаТаб.СтавкаНДС);
	//		СуммаБезНДС = 100 * СтрокаТаб.Сумма / (100 + СтавкаНДС);
	//		СтрокаТаб.СуммаНДС = СтрокаТаб.Сумма - СуммаБезНДС;
	//	КонецЦикла;
	//Иначе	
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Дата", НачалоДня(Дата));
		Запрос.УстановитьПараметр("ДатаНач", Новый Граница(НачалоДня(Дата), ВидГраницы.Включая));
		Запрос.УстановитьПараметр("ДатаКон", Новый Граница(КонецДня(Дата), ВидГраницы.Включая));
		Запрос.Текст = "ВЫБРАТЬ
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура,
		               |	СУММА(ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот * -1) КАК Количество,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура.СтавкаНДС КАК СтавкаНДС,
		               |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена,
		               |	СУММА(ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот * -1 * ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)) КАК БазаРаспределения,
		               |	СУММА(ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2))) КАК Сумма,
		               |	СУММА(ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2))) КАК СуммаНДС
		               |ИЗ
		               |	РегистрНакопления.ДвиженияТоваровПоЛистамУчета.Обороты(&ДатаНач, &ДатаКон, Регистратор, ВидДвиженияТовара = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.Продажа)) КАК ДвиженияТоваровПоЛистамУчетаОбороты
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		               |				&Дата,
		               |				ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
		               |					И ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.ОсновнойТипЦенПродаж)) КАК ЦеныНоменклатурыСрезПоследних
		               |		ПО ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
		               |ГДЕ
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.Регистратор.Организация = &Организация
		               |	И ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура.СлужебныйТовар = ЛОЖЬ
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура.СтавкаНДС,
		               |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)
		               |
		               |ИМЕЮЩИЕ
		               |	СУММА(ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот * -1 * ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0)) > 0
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЛистУчетаZОтчеты.Ссылка.ТорговаяТочка КАК СтруктурнаяЕдиница,
		               |	СУММА(ЛистУчетаZОтчеты.Сумма - ЕСТЬNULL(ВЗ_Акты.СуммаАкты, 0) - ЕСТЬNULL(ВЗ_Возвраты.СуммаВозвраты, 0)) КАК ОбщаяСумма,
		               |	СУММА(ЛистУчетаZОтчеты.СуммаПоБезнал - ЕСТЬNULL(ВЗ_Акты.СуммаАктыБезнал, 0)) КАК СуммаБезналаВОбщейСумме
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		ЛистУчетаZОтчеты.Ссылка КАК Ссылка,
		               |		СУММА(ЛистУчетаZОтчеты.Сумма) КАК Сумма,
		               |		СУММА(ЛистУчетаZОтчеты.СуммаПоБезнал) КАК СуммаПоБезнал
		               |	ИЗ
		               |		Документ.ЛистУчета.ZОтчеты КАК ЛистУчетаZОтчеты
		               |	ГДЕ
		               |		НАЧАЛОПЕРИОДА(ЛистУчетаZОтчеты.Ссылка.Дата, ДЕНЬ) = &Дата
		               |		И ЛистУчетаZОтчеты.Ссылка.Организация = &Организация
		               |	
		               |	СГРУППИРОВАТЬ ПО
		               |		ЛистУчетаZОтчеты.Ссылка) КАК ЛистУчетаZОтчеты
		               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		               |			ЛистУчетаАктыКМ3.Ссылка КАК Ссылка,
		               |			СУММА(ВЫБОР
		               |					КОГДА ЕСТЬNULL(ЛистУчетаАктыКМ3.ПолученаСумма, 0) <> 0
		               |						ТОГДА ЛистУчетаАктыКМ3.ПолученаСумма
		               |					ИНАЧЕ ЛистУчетаАктыКМ3.Сумма
		               |				КОНЕЦ) КАК СуммаАкты,
		               |			СУММА(ВЫБОР
		               |					КОГДА ЛистУчетаАктыКМ3.ЭтоВозвратБезнал
		               |						ТОГДА ВЫБОР
		               |								КОГДА ЕСТЬNULL(ЛистУчетаАктыКМ3.ПолученаСумма, 0) <> 0
		               |									ТОГДА ЛистУчетаАктыКМ3.ПолученаСумма
		               |								ИНАЧЕ ЛистУчетаАктыКМ3.Сумма
		               |							КОНЕЦ
		               |					ИНАЧЕ 0
		               |				КОНЕЦ) КАК СуммаАктыБезнал
		               |		ИЗ
		               |			Документ.ЛистУчета.АктыКМ3 КАК ЛистУчетаАктыКМ3
		               |		ГДЕ
		               |			НАЧАЛОПЕРИОДА(ЛистУчетаАктыКМ3.Ссылка.Дата, ДЕНЬ) = &Дата
		               |			И ЛистУчетаАктыКМ3.Ссылка.Организация = &Организация
		               |			И ЛистУчетаАктыКМ3.АктПолучен = ИСТИНА
		               |		
		               |		СГРУППИРОВАТЬ ПО
		               |			ЛистУчетаАктыКМ3.Ссылка) КАК ВЗ_Акты
		               |		ПО ЛистУчетаZОтчеты.Ссылка = ВЗ_Акты.Ссылка
		               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		               |			ЛистУчетаВозвратыИзСейфа.Ссылка КАК Ссылка,
		               |			СУММА(ВЫБОР
		               |					КОГДА ЕСТЬNULL(ЛистУчетаВозвратыИзСейфа.ПолученаСумма, 0) <> 0
		               |						ТОГДА ЛистУчетаВозвратыИзСейфа.ПолученаСумма
		               |					ИНАЧЕ ЛистУчетаВозвратыИзСейфа.Сумма
		               |				КОНЕЦ) КАК СуммаВозвраты
		               |		ИЗ
		               |			Документ.ЛистУчета.ВозвратыИзСейфа КАК ЛистУчетаВозвратыИзСейфа
		               |		ГДЕ
		               |			НАЧАЛОПЕРИОДА(ЛистУчетаВозвратыИзСейфа.Ссылка.Дата, ДЕНЬ) = &Дата
		               |			И ЛистУчетаВозвратыИзСейфа.Ссылка.Организация = &Организация
		               |			И ЛистУчетаВозвратыИзСейфа.ВозвратПолучен = ИСТИНА
		               |		
		               |		СГРУППИРОВАТЬ ПО
		               |			ЛистУчетаВозвратыИзСейфа.Ссылка) КАК ВЗ_Возвраты
		               |		ПО ЛистУчетаZОтчеты.Ссылка = ВЗ_Возвраты.Ссылка
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ЛистУчетаZОтчеты.Ссылка.ТорговаяТочка";
					   
					   //|	СУММА(ЛистУчетаZОтчеты.Сумма - ЕСТЬNULL(ВЗ_Акты.СуммаАкты, 0) - ЕСТЬNULL(ВЗ_Возвраты.СуммаВозвраты, 0)) КАК ОбщаяСумма,
					   
		Результаты = Запрос.ВыполнитьПакет();
		ТабКРаспределению = Результаты[0].Выгрузить();
		ТабПоСтруктурнымЕдиницам = Результаты[1].Выгрузить();
		СуммаКРаспределению = ТабПоСтруктурнымЕдиницам.Итог("ОбщаяСумма");
		
		Если СуммаКРаспределению <> 0 Тогда
			Суммы = ОбщегоНазначения.РаспределитьПропорционально(СуммаКРаспределению, ТабКРаспределению.ВыгрузитьКолонку("БазаРаспределения"));
			ТабКРаспределению.ЗагрузитьКолонку(Суммы,"Сумма");
		КонецЕсли;	
		
		СуммаПоТаб10 = 0;
		СуммаПоТаб18 = 0;
		Для Каждого СтрокаТаб Из ТабКРаспределению Цикл
			СтрокаТаб.Цена = ?(СтрокаТаб.Количество = 0, 0, СтрокаТаб.Сумма / СтрокаТаб.Количество);
			СтавкаНДС = УчетНДС.ПолучитьСтавкуНДС(СтрокаТаб.СтавкаНДС);
			СуммаБезНДС = 100 * СтрокаТаб.Сумма / (100 + СтавкаНДС);
			СтрокаТаб.СуммаНДС = СтрокаТаб.Сумма - СуммаБезНДС;
			Если СтавкаНДС = 10 Тогда
				СуммаПоТаб10 = СуммаПоТаб10 + СтрокаТаб.СуммаНДС;
			ИначеЕсли СтавкаНДС = 18 Тогда	
				СуммаПоТаб18 = СуммаПоТаб18 + СтрокаТаб.СуммаНДС;
			КонецЕсли;	
		КонецЦикла;
		
	//КонецЕсли;	
	
	////теперь обработаем суммы ндс, чтобы полностью сходилось с бухией
	//Если Организация.ИНН = "7734675810" Тогда //вкусвилл
	//	СтрЗапрос = "SELECT 
	//			|	SUM(CASE WHEN ArticleBin2UID.Stavka = 10 THEN dbo_CheckLine.BaseSum ELSE 0 END) as SummaPoNDS10, 
	//			|	SUM(CASE WHEN ArticleBin2UID.Stavka = 18 THEN dbo_CheckLine.BaseSum ELSE 0 END) as SummaPoNDS18 
	//			|FROM SMS_Union.dbo.CheckLine as dbo_CheckLine (nolock) 
	//			|INNER JOIN SMS_Union.dbo.Checks as dbo_Checks (nolock) ON dbo_CheckLine.CheckUID = dbo_Checks.CheckUID
	//			|LEFT OUTER JOIN IzbenkaFin.dbo.ArticleBin2UID as ArticleBin2UID (nolock) ON dbo_CheckLine.id_tov_cl = ArticleBin2UID.id_tov
	//			|WHERE dbo_CheckLine.date_ch >= '"+Формат(Дата,"ДФ=yyyy-MM-dd")+"' and dbo_CheckLine.date_ch <= '"+Формат(Дата,"ДФ=yyyy-MM-dd")+"'
	//			|";
	//	
	//Иначе
	//	СтрЗапрос = "SELECT SUM(Chl.SummaPoNDS10) as SummaPoNDS10,
	//			|  SUM(Chl.SummaPoNDS18) as SummaPoNDS18
	//			|FROM [SMS_IZBENKA].[dbo].[Checks] as Ch (nolock)
	//			|	LEFT OUTER JOIN (SELECT Chl.date_ch, Chl.CheckUid As CheckUid, SUM(Chl.Quantity) as Qnt, 
	//			|				   				SUM(CASE WHEN ArticleBin2UID.Stavka = 10 THEN Chl.BaseSum ELSE 0 END) as SummaPoNDS10, 
	//			|			   				SUM(CASE WHEN ArticleBin2UID.Stavka = 18 THEN Chl.BaseSum ELSE 0 END) as SummaPoNDS18
	//			|						FROM [SMS_IZBENKA].[dbo].[CheckLine] as Chl (nolock)
	//			|						INNER JOIN IzbenkaFin.dbo.ArticleBin2UID as ArticleBin2UID (nolock)
	//			|						ON Chl.id_tov_cl = ArticleBin2UID.id_tov
	//			|					WHERE Chl.date_ch >= '" + Формат(НачалоДня(Дата), "ДФ=yyyy-MM-dd") + "' and Chl.date_ch <= '" + Формат(КонецДня(Дата), "ДФ=yyyy-MM-dd") + "' and Chl.OperationType_cl = 1
	//			|						GROUP BY Chl.CheckUid, Chl.date_ch) as Chl ON Ch.CheckUID = Chl.CheckUid
	//			|where Ch.CloseDate >= '" + Формат(НачалоДня(Дата), "ДФ=yyyy-MM-ddTHH:mm:ss") + "' and Ch.CloseDate <= '" + Формат(КонецДня(Дата), "ДФ=yyyy-MM-ddTHH:mm:ss") + "' and Ch.OperationType = 1
	//			|	
	//			|";		
	//КонецЕсли;	
	//ADOСоединение = Новый COMОбъект("ADODB.Connection");
	//ADOСоединение.ConnectionTimeOut = 0;
	//ADOСоединение.CommandTimeOut    = 0;
	//ADOСоединение.ConnectionString  = "DRIVER={SQL Server Native Client 10.0};SERVER=SRV-SQL01;UID=izbenka;PWD=cjyzcjyz;DATABASE=SMS_UNION;LANGUAGE=русский";
	//ADOСоединение.Open();
	//
	//
	//
	//rs = ADOСоединение.Execute(СтрЗапрос);
	//СуммаНДС10Бух = 0;
	//СуммаНДС18Бух = 0;
	//Попытка //если набор пустой, то выдает ошибку
	//	rs.MoveFirst();
	//	
	//	Пока НЕ rs.EOF() Цикл
	//		СуммаНДС10Бух = Rs.Fields("SummaPoNDS10").Value;
	//		СуммаНДС18Бух = Rs.Fields("SummaPoNDS18").Value;
	//		rs.MoveNext();
	//	КонецЦикла;
	//Исключение
	//КонецПопытки;
	//
	//КоэффициентВыручкиПоНДС10 = ?(СуммаНДС10Бух + СуммаНДС18Бух = 0, 1, СуммаНДС10Бух / (СуммаНДС10Бух + СуммаНДС18Бух));
	//ЧастьСуммыПо10ИзОбщей = Окр(СуммаКРаспределению * КоэффициентВыручкиПоНДС10, 2);
	//РасчитаннаяСуммаНДС10 = РассчитатьСуммуНДСТабЧасти(ЧастьСуммыПо10ИзОбщей, 10);
	//РасчитаннаяСуммаНДС18 = РассчитатьСуммуНДСТабЧасти(СуммаКРаспределению - ЧастьСуммыПо10ИзОбщей, 18);
	//
	//Если РасчитаннаяСуммаНДС10 <> СуммаПоТаб10 Тогда
	//	Разница = РасчитаннаяСуммаНДС10 - СуммаПоТаб10;
	//	ТабДораспределение = Новый ТаблицаЗначений();
	//	ТабДораспределение.Колонки.Добавить("СуммаНДС");
	//	ТабДораспределение.Колонки.Добавить("СтрокаОригинал");
	//	Для Каждого СтрокаТаб Из ТабКРаспределению Цикл
	//		Если СтрокаТаб.СтавкаНДС = Перечисления.СтавкиНДС.НДС10 Тогда
	//			СтрокаДоб = ТабДораспределение.Добавить();
	//			СтрокаДоб.СуммаНДС = СтрокаТаб.СуммаНДС;
	//			СтрокаДоб.СтрокаОригинал = СтрокаТаб;
	//		КонецЕсли;	
	//	КонецЦикла;
	//	Суммы = ОбщегоНазначения.РаспределитьПропорционально(Разница * ?(Разница < 0, -1, 1), ТабДораспределение.ВыгрузитьКолонку("СуммаНДС"));
	//	ТабДораспределение.ЗагрузитьКолонку(Суммы,"СуммаНДС");
	//	Для Каждого СтрокаТаб Из ТабДораспределение Цикл
	//		СтрокаТаб.СтрокаОригинал.СуммаНДС = СтрокаТаб.СтрокаОригинал.СуммаНДС + СтрокаТаб.СуммаНДС * ?(Разница < 0, -1, 1);
	//	КонецЦикла;	
	//КонецЕсли;
	//
	//Если РасчитаннаяСуммаНДС18 <> СуммаПоТаб18 Тогда
	//	Разница = РасчитаннаяСуммаНДС18 - СуммаПоТаб18;
	//	ТабДораспределение = Новый ТаблицаЗначений();
	//	ТабДораспределение.Колонки.Добавить("СуммаНДС");
	//	ТабДораспределение.Колонки.Добавить("СтрокаОригинал");
	//	Для Каждого СтрокаТаб Из ТабКРаспределению Цикл
	//		Если СтрокаТаб.СтавкаНДС = Перечисления.СтавкиНДС.НДС18 Тогда
	//			СтрокаДоб = ТабДораспределение.Добавить();
	//			СтрокаДоб.СуммаНДС = СтрокаТаб.СуммаНДС;
	//			СтрокаДоб.СтрокаОригинал = СтрокаТаб;
	//		КонецЕсли;	
	//	КонецЦикла;
	//	Суммы = ОбщегоНазначения.РаспределитьПропорционально(Разница * ?(Разница < 0, -1, 1), ТабДораспределение.ВыгрузитьКолонку("СуммаНДС"));
	//	ТабДораспределение.ЗагрузитьКолонку(Суммы,"СуммаНДС");
	//	Для Каждого СтрокаТаб Из ТабДораспределение Цикл
	//		СтрокаТаб.СтрокаОригинал.СуммаНДС = СтрокаТаб.СтрокаОригинал.СуммаНДС + СтрокаТаб.СуммаНДС * ?(Разница < 0, -1, 1);
	//	КонецЦикла;	
	//КонецЕсли;
	
	ТабКРаспределению.Сортировать("Номенклатура");
	ТабПоСтруктурнымЕдиницам.Сортировать("СтруктурнаяЕдиница");
	СтруктураВозврат.ТабТовары = ТабКРаспределению;
	СтруктураВозврат.ТабПоСтруктурнымЕдиницам = ТабПоСтруктурнымЕдиницам;
	
	Возврат СтруктураВозврат;
	
КонецФункции	

Функция ПечатьОРП(Ссылка) Экспорт
	
	ТабДок = Новый ТабличныйДокумент();
    Макет = Документы.ОтчетОРозничныхПродажах.ПолучитьМакет("ОРП");
	
	Область = Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.ОрганизацияНаименование = Ссылка.Организация.НаименованиеПолное;
	Область.Параметры.Номер = Ссылка.Номер;
	Область.Параметры.Дата = Формат(Ссылка.Дата, "ДЛФ=DD");
	ТабДок.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДок.Вывести(Область);
	
	НДС10 = 0;
	НДС18 = 0;
	Для Каждого СтрокаТаб Из Ссылка.Товары Цикл
		Область = Макет.ПолучитьОбласть("Строка");
		Область.Параметры.НомерСтроки = СтрокаТаб.НомерСтроки;
		Область.Параметры.Наименование = СтрокаТаб.Номенклатура;
		Область.Параметры.Количество = СтрокаТаб.Количество;
		Область.Параметры.Цена = СтрокаТаб.Цена;
		Область.Параметры.Ставка = СтрокаТаб.СтавкаНДС;
		Область.Параметры.СуммаНДС = СтрокаТаб.СуммаНДС;
		Область.Параметры.Сумма = СтрокаТаб.Сумма;
		ТабДок.Вывести(Область);
		Если СтрокаТаб.СтавкаНДС = Перечисления.СтавкиНДС.НДС10 Тогда
			НДС10 = НДС10 + СтрокаТаб.СуммаНДС;
		ИначеЕсли СтрокаТаб.СтавкаНДС = Перечисления.СтавкиНДС.НДС18 Тогда
			НДС18 = НДС18 + СтрокаТаб.СуммаНДС;	
		КонецЕсли;	
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("Итог");
	Область.Параметры.СуммаНДС = Ссылка.Товары.Итог("СуммаНДС");
	Область.Параметры.Сумма = Ссылка.Товары.Итог("Сумма");
	Область.Параметры.СуммаНДС10 = НДС10;
	Область.Параметры.СуммаНДС18 = НДС18;
	ТабДок.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Подвал");
	ТабДок.Вывести(Область);
	
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	Возврат ТабДок;
	
КонецФункции	
