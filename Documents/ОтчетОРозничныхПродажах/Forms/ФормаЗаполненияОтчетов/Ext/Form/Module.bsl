
&НаКлиенте
Процедура РедактироватьПериод(Команда)
	
	СтандартныйПериод = Новый СтандартныйПериод(ДатаНачала, ДатаОкончания);
	ДиалогРедактирования = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогРедактирования.Период = СтандартныйПериод;
	Если ДиалогРедактирования.Редактировать() Тогда
		СтандартныйПериод = ДиалогРедактирования.Период;
		ДатаНачала = СтандартныйПериод.ДатаНачала;
		ДатаОкончания = СтандартныйПериод.ДатаОкончания;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗагрузитьДанныеСервер(ДатаОбработки)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Дата", НачалоДня(ДатаОбработки));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОтчетОРозничныхПродажах.Ссылка,
	               |	ОтчетОРозничныхПродажах.Организация
	               |ИЗ
	               |	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	               |ГДЕ
	               |	НАЧАЛОПЕРИОДА(ОтчетОРозничныхПродажах.Дата, ДЕНЬ) = &Дата
	               |	И (ОтчетОРозничныхПродажах.Организация = &Организация
	               |			ИЛИ &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	               |	И ОтчетОРозничныхПродажах.ПометкаУдаления = ЛОЖЬ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ЛистУчета.Организация
	               |ИЗ
	               |	Документ.ЛистУчета КАК ЛистУчета
	               |ГДЕ
	               |	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) = &Дата
	               |	И ЛистУчета.Проведен = ИСТИНА
	               |	И (ЛистУчета.Организация = &Организация
	               |			ИЛИ &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))";
				   
	Результаты = Запрос.ВыполнитьПакет();
	ТабКеш = Результаты[0].Выгрузить();
	ВыборкаОрг = Результаты[1].Выбрать();
	Пока ВыборкаОрг.Следующий() Цикл
		СтрДанные = Документы.ОтчетОРозничныхПродажах.ПолучитьПродажиПоОрганизации(ВыборкаОрг.Организация, ДатаОбработки);
		СтрокаКеш = ТабКеш.Найти(ВыборкаОрг.Организация, "Организация");
		Если СтрокаКеш = Неопределено Тогда
			ДокОбъект = Документы.ОтчетОРозничныхПродажах.СоздатьДокумент();
			ДокОбъект.Дата = НачалоДня(ДатаОбработки);
			ДокОбъект.Организация = ВыборкаОрг.Организация;
		Иначе
			ДокОбъект = СтрокаКеш.Ссылка.ПолучитьОбъект();
		КонецЕсли;
		ДокОбъект.Товары.Загрузить(СтрДанные.ТабТовары);
		ДокОбъект.СуммыПоСтруктурнымЕдиницам.Загрузить(СтрДанные.ТабПоСтруктурнымЕдиницам);
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура Загрузить(Команда)
	
	Попытка
		ДатаОбработки = ДатаНачала;
		Пока ДатаОбработки <= ДатаОкончания Цикл
			Состояние("Загрузка отчетов о продажах за " + Формат(ДатаОбработки, "ДФ=dd.MM.yyyy") + " ...");
			ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Загрузка отчетов о розничных продажах");
			APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
			ЗагрузитьДанныеСервер(ДатаОбработки);
			APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ДатаОбработки);
			ОбработкаПрерыванияПользователя();
			ДатаОбработки = ДатаОбработки + 86400;
		КонецЦикла;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;	
	
	//УстановитьКонстантыЗагрузки(Ложь);
	
	Оповестить("ОбновитьОтчетыОПродажах");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(ДатаНачала) Тогда
		ДатаНачала = ТекущаяДата() - 86400;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаОкончания) Тогда
		ДатаОкончания = ТекущаяДата() - 86400;
	КонецЕсли;
	
КонецПроцедуры
