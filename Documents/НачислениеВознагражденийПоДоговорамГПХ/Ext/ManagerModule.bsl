//+++АК sole 2018.09.26 ИП-00019785.01
Процедура ВыгрузитьВЗУП(ДокументСсылка) Экспорт
	
	БПР = Новый Структура();
	БПР.Вставить("ДокументСсылка", ДокументСсылка);
	
	ВнешнееСоединение = ПолучитьСоединениеСЗУПом();
	
	Если ВнешнееСоединение = Неопределено Тогда
		Сообщить("Не удалось установить соединение с базой ЗУП!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	ВнешнийЗапрос = ВнешнееСоединение.newObject("Запрос");
	
	БПР.Вставить("ВнешнееСоединение", ВнешнееСоединение);
	БПР.Вставить("ВнешнийЗапрос", ВнешнийЗапрос);
	
	ПолучитьТаблицуДляСоданияДокументов(БПР);
	ПолучитьНаборСозданныхДокументовВЗУП(БПР);
	
	Если БПР.ТаблицаДляСозданияДокументов.Количество() = БПР.СписокСозданныхДокументов.Количество() Тогда
		// По всем строкам документа в базе ЗУП уже созданы документы
		Возврат;
	КонецЕсли;
	
	ИсключитьСозданныеИзТаблицыДляСоданияДокументов(БПР);
	ПолучитьНаборЗначенийДляЗаполнения(БПР);
	СоздатьДокументыВЗУП(БПР);
	
КонецПроцедуры

//+++АК sole 2018.09.26 ИП-00019785.01
Процедура ПолучитьТаблицуДляСоданияДокументов(БПР)
	
	Перем Запрос;
	
	Запрос = Новый Запрос();	
	
	Запрос.Текст =
"ВЫБРАТЬ
|	НачислениеВознагражденийПоДоговорамГПХСостав.ФизЛицо.УинВЗуп КАК ФизЛицоУин,
|	НачислениеВознагражденийПоДоговорамГПХСостав.Сумма,
|	НачислениеВознагражденийПоДоговорамГПХСостав.УИН
|
|ИЗ Документ.НачислениеВознагражденийПоДоговорамГПХ.Состав КАК НачислениеВознагражденийПоДоговорамГПХСостав
|ГДЕ
|		НачислениеВознагражденийПоДоговорамГПХСостав.Ссылка = &ДокументСсылка
|";	
	Запрос.УстановитьПараметр("ДокументСсылка", БПР.ДокументСсылка);
	
	ТаблицаДляСозданияДокументов	= Запрос.Выполнить().Выгрузить();
	
	БПР.Вставить("ТаблицаДляСозданияДокументов", ТаблицаДляСозданияДокументов);
	
КонецПроцедуры

//+++АК sole 2018.09.26 ИП-00019785.01
Процедура ПолучитьНаборСозданныхДокументовВЗУП(БПР)
	
	Перем ВнешнийЗапрос, ВнешнееСоединение;
	
	ВнешнееСоединение = БПР.ВнешнееСоединение; 
	ВнешнийЗапрос = БПР.ВнешнийЗапрос;
	
	СписокИдентификаторов = ВнешнееСоединение.newObject("СписокЗначений");
	СписокСозданныхДокументов = Новый СписокЗначений();
	
	Для Каждого Стр Из БПР.ТаблицаДляСозданияДокументов Цикл
		СписокИдентификаторов.Добавить(ВнешнееСоединение.NewObject("УникальныйИдентификатор",Строка(Стр.УИН)));
	КонецЦикла;
	
	ВнешнийЗапрос.Текст =
"ВЫБРАТЬ
|	ДоговорНаВыполнениеРаботСФизЛицом.АК_УИНСтрокиИсточника КАК УИН
|
|ИЗ Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
|ГДЕ
|   	ДоговорНаВыполнениеРаботСФизЛицом.АК_УИНСтрокиИсточника В ( &СписокИдентификаторов )
|	И	ДоговорНаВыполнениеРаботСФизЛицом.АК_УИНСтрокиИсточника <> &ПустойУИН
|";
	
	ВнешнийЗапрос.УстановитьПараметр("СписокИдентификаторов", СписокИдентификаторов);
	ВнешнийЗапрос.УстановитьПараметр("ПустойУИН", ВнешнееСоединение.NewObject("УникальныйИдентификатор"));
	Выборка = ВнешнийЗапрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокСозданныхДокументов.Добавить(Новый УникальныйИдентификатор(ВнешнееСоединение.XMLСтрока(Выборка.УИН)));
	КонецЦикла;
	
	БПР.Вставить("СписокСозданныхДокументов", СписокСозданныхДокументов);
	
КонецПроцедуры

//+++АК sole 2018.09.26 ИП-00019785.01
Процедура ИсключитьСозданныеИзТаблицыДляСоданияДокументов(БПР)
	
	Если БПР.СписокСозданныхДокументов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаДляСозданияДокументов = БПР.ТаблицаДляСозданияДокументов;
	
	Инд = ТаблицаДляСозданияДокументов.Количество();
	
	Пока Инд > 0 Цикл
		Инд = Инд - 1;
		Стр = ТаблицаДляСозданияДокументов[Инд];
		
		УИН = БПР.СписокСозданныхДокументов.НайтиПоЗначению(Стр.УИН);
		
		//Если ЗначениеЗаполнено(УИН) Тогда
		Если УИН <> Неопределено Тогда
			ТаблицаДляСозданияДокументов.Удалить(Инд);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры 

//+++АК sole 2018.09.26 ИП-00019785.01
Процедура ПолучитьНаборЗначенийДляЗаполнения(БПР)
	
	ВнешнееСоединение = БПР.ВнешнееСоединение;
	внОрганизация = ВнешнееСоединение.Справочники.Организации.НайтиПоКоду("000000006");
	внВидРасчета = ВнешнееСоединение.ПланыВидовРасчета.ДополнительныеНачисленияОрганизаций.НайтиПоКоду("00031");
	внХарактерОплаты = ВнешнееСоединение.Перечисления.ХарактерВыплатыПоДоговору.ОднократноВКонцеСрока;
	
	БПР.Вставить("внОрганизация", внОрганизация);
	БПР.Вставить("внВидРасчета", внВидРасчета);
	БПР.Вставить("внХарактерОплаты", внХарактерОплаты);
	
КонецПроцедуры

Процедура СоздатьДокументыВЗУП(БПР)
	
	ВнешнееСоединение = БПР.ВнешнееСоединение;
	
	Для Каждого Стр Из БПР.ТаблицаДляСозданияДокументов Цикл
		оДокумент = ВнешнееСоединение.Документы.ДоговорНаВыполнениеРаботСФизЛицом.СоздатьДокумент();
		оДокумент.Дата = ТекущаяДата();
		оДокумент.Организация = БПР.внОрганизация;
		оДокумент.ВидРасчета = БПР.внВидРасчета;
		оДокумент.ХарактерОплаты = БПР.внХарактерОплаты;
		
		оДокумент.ФизЛицо = 
			ВнешнееСоединение.Справочники.ФизическиеЛица.ПолучитьСсылку
				(
					ВнешнееСоединение.NewObject("УникальныйИдентификатор",Строка(Стр.ФизЛицоУин))	
				);
				
		оДокумент.Сотрудник = ПолучитьСотрудникаПоФизЛицу(БПР, оДокумент.ФизЛицо);
		//+++АК kats 2018.10.31 ИП-00019785.03
		//оДокумент.СуммаЗаРаботу = Стр.Сумма;
		оДокумент.СуммаЗаРаботу = Документы.НачислениеВознагражденийПоДоговорамГПХ.РассчитатьСуммуСУчетомНДФЛ(Стр.Сумма);
		//---АК kats
		оДокумент.АК_УИНСтрокиИсточника = ВнешнееСоединение.NewObject("УникальныйИдентификатор",Строка(Стр.УИН));
		оДокумент.Записать();
	КонецЦикла;
	
	
КонецПроцедуры

//+++АК sole 2018.09.26 ИП-00019785.01
Функция ПолучитьСотрудникаПоФизЛицу(БПР, ФизЛицоСсылка)
	
	ВнешнийЗапрос = БПР.ВнешнийЗапрос;
	
	ВнешнийЗапрос.Текст =
"ВЫБРАТЬ
|	СотрудникиОрганизаций.Ссылка
|
|ИЗ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
|ГДЕ 
|		НЕ СотрудникиОрганизаций.ПометкаУдаления
|	И	СотрудникиОрганизаций.Актуальность
|	И	СотрудникиОрганизаций.Физлицо = &ФизЛицо
|	И	СотрудникиОрганизаций.Организация = &Организация
|";
	ВнешнийЗапрос.УстановитьПараметр("Организация", БПР.внОрганизация);	
	ВнешнийЗапрос.УстановитьПараметр("Физлицо", ФизЛицоСсылка);
	
	Выборка = ВнешнийЗапрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий()  Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат БПР.ВнешнееСоединение.Справочники.СотрудникиОрганизаций.ПустаяСсылка();
	
КонецФункции

//+++АК sole 2018.09.26 ИП-00019785.01
Функция ПолучитьСоединениеСЗУПом() 
	
	ТекущееПодключение = СтрокаСоединенияИнформационнойБазы();
	
	Если Найти(ТекущееПодключение,"Ref=""IzbenkaFin""") > 0  Тогда
		ВнешнееСоединение = ОбменС_ЗУП.ПолучитьСоединениеСЗУПом();
		Возврат ВнешнееСоединение;
	КонецЕсли;
	
	СтрокаПодключения = "Srvr=""srv-sql02:1641""; Ref=""HRM_test2""; Usr=""Обмен""; Pwd=""123321""";
	КОМКоннектор = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Зуп() + ".COMConnector");
	
	Попытка
		Соединение = КОМКоннектор.Connect(СтрокаПодключения);
		Возврат Соединение;
	Исключение
		Возврат Неопределено; 
	КонецПопытки;

КонецФункции

//+++АК sole 2018.10.02 ИП-00019785.02
Процедура ОбработатьСогласованиеДокументаИзПисьма(ДокументСсылка, СтруктураПараметров) Экспорт
	
	Если СтруктураПараметров.Согласовано И НЕ СтруктураПараметров.Отклонено Тогда
		
		Статус = Перечисления.СтатусСогласования.Согласовано
		
	ИначеЕсли НЕ СтруктураПараметров.Согласовано И СтруктураПараметров.Отклонено Тогда
		
		Статус = Перечисления.СтатусСогласования.НеСогласовано
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Статус) Тогда
		
		ДокументОбъект = ДокументСсылка.ПолучитьОбъект();		
		
		Если ЗначениеЗаполнено(СтруктураПараметров.Примечание) Тогда
			ДокументОбъект.Комментарий = СтруктураПараметров.Примечание;			
		КонецЕсли;

		ДокументОбъект.Статус = Статус;
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
	КонецЕсли;	

КонецПроцедуры

//

//+++АК kats 2018.10.31 ИП-00019785.03
Функция РассчитатьСуммуСУчетомНДФЛ(Сумма) Экспорт

	Возврат Окр(Сумма / 0.87, 0, РежимОкругления.Окр15как20)

КонецФункции
//---АК kats