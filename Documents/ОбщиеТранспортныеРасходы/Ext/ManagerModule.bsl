
//+++АК SHEP 2018.02.20 ИП-00017365.02
Функция ДокументИспользуетсяВТранспортныхДокументах(ДокСсылка, ВыводитьСообщения = Ложь) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПоступлениеТоваровУслуг.Ссылка
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.ТранспортныеДокументы КАК ПоступлениеТоваровУслугТранспортныеДокументы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
		|		ПО ПоступлениеТоваровУслугТранспортныеДокументы.Ссылка = ПоступлениеТоваровУслуг.Ссылка
		|ГДЕ
		|	ПоступлениеТоваровУслуг.Проведен
		|	И ПоступлениеТоваровУслугТранспортныеДокументы.Документ = &ДокСсылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПоступлениеДопРасходов.Ссылка
		|ИЗ
		|	Документ.ПоступлениеДопРасходов.ТранспортныеДокументы КАК ПоступлениеДопРасходовТранспортныеДокументы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
		|		ПО ПоступлениеДопРасходовТранспортныеДокументы.Ссылка = ПоступлениеДопРасходов.Ссылка
		|ГДЕ
		|	ПоступлениеДопРасходов.Проведен
		|	И ПоступлениеДопРасходовТранспортныеДокументы.Документ = &ДокСсылка");
	Запрос.УстановитьПараметр("ДокСсылка", ДокСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	ДокументИспользуется = НЕ РезультатЗапроса.Пустой();
	
	Если НЕ ДокументИспользуется ИЛИ НЕ ВыводитьСообщения Тогда Возврат ДокументИспользуется; КонецЕсли;
	
	Сообщить("Для редактирования документа " + Строка(ДокСсылка) + ", нужно сделать непроведёнными следующие документы:", СтатусСообщения.Важное);
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		Сообщить("" + Символы.Таб + Строка(ВыборкаЗапроса.Ссылка));
	КонецЦикла;
	
	Возврат ДокументИспользуется;
	
КонецФункции

//+++АК SHEP 2018.04.19 ИП-00018423: перенёс из модуля объекта
Процедура ДвиженияВыполнить(ЭтотОбъект, мДвиженияБух, Отказ) Экспорт
	
	мСчет6004 = ПланыСчетов.Финансовый.ПрочаяЗадолженность;
	
	Если ЭтотОбъект.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле
			ИЛИ ЭтотОбъект.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.БезНДС Тогда
		мСуммаВсего = ЭтотОбъект.Сумма;
	Иначе
		мСуммаВсего = ЭтотОбъект.Сумма + ЭтотОбъект.СуммаНДС;
	КонецЕсли;
	
	НастройкаОтраженияНДСПоТоварам = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.НДС_ТоварыПоступлениеТоваровИУслуг, ЭтотОбъект.Дата);
	
	Если ЭтотОбъект.ВидТранспортныхРасходов = Перечисления.ВидыОбщихТранспортныхРасходов.ДоставкаНаСклад Тогда
		
		Если ЭтотОбъект.Поставщики.Количество() = 0 Тогда
			Сообщить("Не указаны поставщики! Проведение невозможно.");
			Отказ = Истина;
		КонецЕсли;
		
		СтруктураНастроекТовар =
			ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.ДоставкаТовараНаСклад, ЭтотОбъект.Дата);
		Если НЕ ЗначениеЗаполнено(СтруктураНастроекТовар.Счет) Тогда
			Сообщить("Не настроен вид отражения операций в учете ""Доставка товаров на склад""! Проведение невозможно.");
			Отказ = Истина;
		КонецЕсли;
	
		СтруктураНастроекУпаковка =
			ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.ДоставкаУпаковкиНаСклад, ЭтотОбъект.Дата);
		Если НЕ ЗначениеЗаполнено(СтруктураНастроекУпаковка.Счет) Тогда
			Сообщить("Не настроен вид отражения операций в учете ""Доставка упаковки на склад""! Проведение невозможно.");
			Отказ = Истина;
		КонецЕсли;
	
		РезультатыЗапроса = ПолучитьРаспределениеСуммыТранспортныхРасходов(ЭтотОбъект, мСуммаВсего);
		
		ТаблицаТоваровКПроведению 	= РезультатыЗапроса[3].Выгрузить();
		ТаблицаУпаковкиКПроведению 	= РезультатыЗапроса[4].Выгрузить();
		
		Если ТаблицаТоваровКПроведению.Количество() + ТаблицаУпаковкиКПроведению.Количество() = 0 Тогда
			Сообщить("Нет базы к распределению! Проведение невозможно.");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если Отказ Тогда
			Возврат;				
		КонецЕсли;

		мОкругленнаяСумма = 0;
		Для Каждого СтрокаТаблицы Из ТаблицаТоваровКПроведению Цикл
			мОкругленнаяСумма = мОкругленнаяСумма + Окр(СтрокаТаблицы.Сумма, 2);
		КонецЦикла;
		Для Каждого СтрокаТаблицы Из ТаблицаУпаковкиКПроведению Цикл
			мОкругленнаяСумма = мОкругленнаяСумма + Окр(СтрокаТаблицы.Сумма, 2);
		КонецЦикла;
		
		РазницаПриОкруглении = мСуммаВсего - мОкругленнаяСумма;
		
	
		ТабВыделенияНДС = Новый ТаблицаЗначений;
		ТабВыделенияНДС.Колонки.Добавить("СтрокаТаблицы");
		ТабВыделенияНДС.Колонки.Добавить("СуммаНДС", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
		ТабВыделенияНДС.Колонки.Добавить("Сумма");
		Для Каждого СтрокаТаблицы Из ТаблицаТоваровКПроведению Цикл
			Если СтрокаТаблицы.Сумма = 0 Тогда
				Продолжить;
			КонецЕсли;
			СтрокаДоб = ТабВыделенияНДС.Добавить();
			СтрокаДоб.СтрокаТаблицы = СтрокаТаблицы;
			СтрокаДоб.Сумма 		= СтрокаТаблицы.Сумма;
		КонецЦикла;
		
		Для Каждого СтрокаТаблицы Из ТаблицаУпаковкиКПроведению Цикл
			Если СтрокаТаблицы.Сумма = 0 Тогда
				Продолжить;
			КонецЕсли;
			СтрокаДоб = ТабВыделенияНДС.Добавить();
			СтрокаДоб.СтрокаТаблицы = СтрокаТаблицы;
			СтрокаДоб.Сумма 		= СтрокаТаблицы.Сумма;
		КонецЦикла;
		
		МассивРаспределения = ОбщегоНазначения.РаспределитьПропорционально(ЭтотОбъект.СуммаНДС, ТабВыделенияНДС.ВыгрузитьКолонку("Сумма"));
		Если Не МассивРаспределения = Неопределено Тогда
			ТабВыделенияНДС.ЗагрузитьКолонку(МассивРаспределения, "СуммаНДС");
		КонецЕсли;
		
		Для Каждого СтрокаНДС Из ТабВыделенияНДС Цикл
			СтрокаНДС.СтрокаТаблицы.Сумма = СтрокаНДС.СтрокаТаблицы.Сумма - СтрокаНДС.СуммаНДС;
		КонецЦикла;
		
		Для Каждого СтрокаТаблицы Из ТаблицаТоваровКПроведению Цикл
			
			///////////////////////////////////////////////////////////////////
			// Дт41.1 Кт60 - транспортные расходы по доставке товаров на склад
			
			Проводка = мДвиженияБух.Добавить();
			
			Проводка.Период 		= ЭтотОбъект.Дата;
			Проводка.СчетДт 		= СтруктураНастроекТовар.Счет; // 41.1;
			Проводка.КоличествоДт 	= 0;
			
			Попытка
				Проводка.СубконтоДт.МестаХранения 			= СтрокаТаблицы.СтруктурнаяЕдиница;//Склад;
				Проводка.СубконтоДт.Товары 					= СтрокаТаблицы.Номенклатура;
				Проводка.СубконтоДт.СтатьиТовародвижения 	= СтруктураНастроекТовар.СтатьяДвиженияТоваров41;
			Исключение
			КонецПопытки;
			
			Проводка.НомерЖурнала			= "ТД";
			Проводка.Содержание				= "Транспортные расходы по доставке товаров на склад";
			
			Проводка.СчетКт 				= мСчет6004;
			Проводка.СубконтоКт.Организации = ЭтотОбъект.Организация;
			Проводка.СубконтоКт.Контрагенты = ЭтотОбъект.Перевозчик;
			
			//Проводка.Организация 			= ЭтотОбъект.Организация;
			Проводка.Сумма 					= СтрокаТаблицы.Сумма;
			
		КонецЦикла;
		
		Для Каждого СтрокаТаблицы Из ТаблицаУпаковкиКПроведению Цикл
			
			///////////////////////////////////////////////////////////////////
			// Дт41.1 Кт60 - транспортные расходы по доставке упаковки на склад
			
			Проводка = мДвиженияБух.Добавить();
			
			Проводка.Период 		= ЭтотОбъект.Дата;
			Проводка.СчетДт 		= СтруктураНастроекУпаковка.Счет; // 41.2;
			Проводка.КоличествоДт 	= 0;
			
			Попытка
				Проводка.СубконтоДт.Материалы 				= СтрокаТаблицы.Номенклатура;
				Проводка.СубконтоДт.Склады 					= СтрокаТаблицы.Склад;
				Проводка.СубконтоДт.СтатьиТовародвижения 	= СтруктураНастроекУпаковка.СтатьяДвиженияТоваров41;
			Исключение
			КонецПопытки;
			
			Проводка.НомерЖурнала			= "ТД";
			Проводка.Содержание				= "Транспортные расходы по доставке упаковки на склад";
			
			Проводка.СчетКт 				= мСчет6004;
			Проводка.СубконтоКт.Организации = ЭтотОбъект.Организация;
			Проводка.СубконтоКт.Контрагенты = ЭтотОбъект.Перевозчик;
			
			//Проводка.Организация 			= ЭтотОбъект.Организация;
			Проводка.Сумма 					= СтрокаТаблицы.Сумма;
			
		КонецЦикла;
		
		Если НЕ РазницаПриОкруглении = 0 Тогда // разница при округлении - в последнюю проводку
			Проводка.Сумма = Проводка.Сумма + РазницаПриОкруглении;
		КонецЕсли;
		
		РезультатыЗапроса = ПолучитьРаспределениеСуммыТранспортныхРасходов(ЭтотОбъект, мСуммаВсего, Истина, Истина);
		
		ТаблицаТоваровКПроведению 	= РезультатыЗапроса[3].Выгрузить();
		ТаблицаУпаковкиКПроведению 	= РезультатыЗапроса[4].Выгрузить();
		
		мОкругленнаяСумма = 0; //+++АК SHEP 2018.05.03 ИП-00018423
		
		Для Каждого СтрокаТаблицы Из ТаблицаТоваровКПроведению Цикл
			Движение = ЭтотОбъект.Движения.ЗатратыНаДоставкуПоПоставщикам.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, СтрокаТаблицы);
			Движение.Период = ЭтотОбъект.Дата;
			мОкругленнаяСумма = мОкругленнаяСумма + Движение.Сумма; //+++АК SHEP 2018.05.03 ИП-00018423
		КонецЦикла;
		
		Для Каждого СтрокаТаблицы Из ТаблицаУпаковкиКПроведению Цикл
			Движение = ЭтотОбъект.Движения.ЗатратыНаДоставкуПоПоставщикам.Добавить();
			ЗаполнитьЗначенияСвойств(Движение, СтрокаТаблицы);
			Движение.Период = ЭтотОбъект.Дата;
			мОкругленнаяСумма = мОкругленнаяСумма + Движение.Сумма; //+++АК SHEP 2018.05.03 ИП-00018423
		КонецЦикла;
		
		//+++АК SHEP 2018.05.03 ИП-00018423: разница при округлении - в последнюю проводку
		РазницаПриОкруглении = мСуммаВсего - мОкругленнаяСумма;
		Если Движение <> Неопределено И РазницаПриОкруглении <> 0 Тогда
			Движение.Сумма = Движение.Сумма + РазницаПриОкруглении;
		КонецЕсли;
		//---АК SHEP 2018.05.03
		 
		Если ЗначениеЗаполнено(НастройкаОтраженияНДСПоТоварам.Счет) И ЭтотОбъект.СуммаНДС <> 0 Тогда

			// НДС
			Проводка = мДвиженияБух.Добавить();
			Проводка.Период = ЭтотОбъект.Дата;
			Проводка.СчетДт = НастройкаОтраженияНДСПоТоварам.Счет;
			Проводка.СубконтоДт.Организации = ЭтотОбъект.Организация;
			Проводка.СубконтоДт.ВидыНалогов	= НастройкаОтраженияНДСПоТоварам.ДопРеквизит;
			Проводка.СубконтоДт.СтавкиНДС	= ЭтотОбъект.СтавкаНДС;
			
			Проводка.СчетКт = мСчет6004;
			Проводка.СубконтоКт.Организации = ЭтотОбъект.Организация;
			Проводка.СубконтоКт.Контрагенты = ЭтотОбъект.Перевозчик;
			
			Проводка.Сумма 	= ЭтотОбъект.СуммаНДС;

		КонецЕсли;
		
	ИначеЕсли ЭтотОбъект.ВидТранспортныхРасходов = Перечисления.ВидыОбщихТранспортныхРасходов.ДополнительныеУслуги Тогда
		
		Если ЭтотОбъект.ТорговыеТочки.Количество() = 0 Тогда
			Сообщить("Не указаны торговые точки! Проведение невозможно.");
			Отказ = Истина;
		КонецЕсли;
		
		Если ЭтотОбъект.СтатьяДоходовРасходов.Пустая() Тогда
			Сообщить("Не указана статья расходов! Проведение невозможно.");
			Отказ = Истина;
		КонецЕсли;
		
		СтруктураНастроек =
			ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.ДополнительныеТранспортныеУслуги, ЭтотОбъект.Дата);
		Если НЕ ЗначениеЗаполнено(СтруктураНастроек.Счет) Тогда
			Сообщить("Не настроен вид отражения операций в учете ""Дополнительные транспортные услуги""! Проведение невозможно.");
			Отказ = Истина;
		КонецЕсли;
		
		Если Отказ Тогда
			Возврат;				
		КонецЕсли;
		
		КоличествоТорговыхТочек = ЭтотОбъект.ТорговыеТочки.Количество();
		мСуммаПроводки = Окр((мСуммаВсего - ЭтотОбъект.СуммаНДС) / КоличествоТорговыхТочек, 2);
		РазницаПриОкруглении = (мСуммаВсего - ЭтотОбъект.СуммаНДС) - (мСуммаПроводки * КоличествоТорговыхТочек);
		
		
		ТекСчетДт 	= СтруктураНастроек.Счет;
		ТекЦФО 		= СтруктураНастроек.ЦФО;
		
		Для Каждого СтрокаТЧ Из ЭтотОбъект.ТорговыеТочки Цикл
			
			Проводка = мДвиженияБух.Добавить();
			
			Проводка.Период 		= ЭтотОбъект.Дата;
			Проводка.СчетДт 		= ТекСчетДт;
			Проводка.КоличествоДт 	= 0;
			
			Попытка
				Проводка.СубконтоДт.ТорговыеТочки 			= СтрокаТЧ.ТорговаяТочка;
				Проводка.СубконтоДт.СтатьиДоходовРасходов 	= ЭтотОбъект.СтатьяДоходовРасходов;
				Проводка.СубконтоДт.ЦФО 					= ТекЦФО;
			Исключение
			КонецПопытки;
			
			Проводка.НомерЖурнала			= "ТД";
			Проводка.Содержание				= "Дополнительные транспортные услуги";
			
			Проводка.СчетКт 				= мСчет6004;
			Проводка.СубконтоКт.Организации = ЭтотОбъект.Организация;
			Проводка.СубконтоКт.Контрагенты = ЭтотОбъект.Перевозчик;
			
			//Проводка.Организация 			= ЭтотОбъект.Организация;
			
			Проводка.Сумма 					= мСуммаПроводки;
			
		КонецЦикла;
		
		Если НЕ РазницаПриОкруглении = 0 Тогда // разница при округлении - в последнюю проводку
			Проводка.Сумма = Проводка.Сумма + РазницаПриОкруглении;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(НастройкаОтраженияНДСПоТоварам.Счет) И ЭтотОбъект.СуммаНДС <> 0 Тогда
			
			Проводка = мДвиженияБух.Добавить();
			Проводка.Период = ЭтотОбъект.Дата;
			Проводка.СчетДт = НастройкаОтраженияНДСПоТоварам.Счет;
			Проводка.СубконтоДт.Организации = ЭтотОбъект.Организация;
			Проводка.СубконтоДт.ВидыНалогов	= НастройкаОтраженияНДСПоТоварам.ДопРеквизит;
			Проводка.СубконтоДт.СтавкиНДС	= ЭтотОбъект.СтавкаНДС;
			
			Проводка.СчетКт = мСчет6004;
			Проводка.СубконтоКт.Организации = ЭтотОбъект.Организация;
			Проводка.СубконтоКт.Контрагенты = ЭтотОбъект.Перевозчик;
			
			Проводка.Сумма 	= ЭтотОбъект.СуммаНДС;
			
		КонецЕсли;
		
	ИначеЕсли ЭтотОбъект.ВидТранспортныхРасходов = Перечисления.ВидыОбщихТранспортныхРасходов.Прочие Тогда
		
		////////////////////////////////////////////////
		// Дт44Кт60 - прочие транспортные расходы
		
		СтруктураНастроек =
			ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.ПрочиеТранспортныеРасходы, ЭтотОбъект.Дата);
		Если НЕ ЗначениеЗаполнено(СтруктураНастроек.Счет) Тогда
			Сообщить("Не настроен вид отражения операций в учете ""Прочие транспортные расходы""! Проведение невозможно.");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	
		Проводка = мДвиженияБух.Добавить();
		
		Проводка.Период 		= ЭтотОбъект.Дата;
		Проводка.СчетДт 		= СтруктураНастроек.Счет; // 44
		Проводка.КоличествоДт 	= 0;
		
		Попытка
			Проводка.СубконтоДт.ТорговыеТочки 			= СтруктураНастроек.СтруктурнаяЕдиница;
			Проводка.СубконтоДт.СтатьиДоходовРасходов 	= СтруктураНастроек.СтатьяДоходовРасходов;
			Проводка.СубконтоДт.ЦФО 					= СтруктураНастроек.ЦФО;
		Исключение
		КонецПопытки;
		
		Проводка.НомерЖурнала			= "ТД";
		Проводка.Содержание				= "Прочие транспортные расходы";
		
		Проводка.СчетКт 				= мСчет6004;
		Проводка.СубконтоКт.Организации = ЭтотОбъект.Организация;
		Проводка.СубконтоКт.Контрагенты = ЭтотОбъект.Перевозчик;
		
		//Проводка.Организация 			= ЭтотОбъект.Организация;
		
		Проводка.Сумма 					= мСуммаВсего - ЭтотОбъект.СуммаНДС;
		
		Если ЗначениеЗаполнено(НастройкаОтраженияНДСПоТоварам.Счет) И ЭтотОбъект.СуммаНДС <> 0 Тогда

			// НДС
			Проводка = мДвиженияБух.Добавить();
			Проводка.Период = ЭтотОбъект.Дата;
			Проводка.СчетДт = НастройкаОтраженияНДСПоТоварам.Счет;
			Проводка.СубконтоДт.Организации = ЭтотОбъект.Организация;
			Проводка.СубконтоДт.ВидыНалогов	= НастройкаОтраженияНДСПоТоварам.ДопРеквизит;
			Проводка.СубконтоДт.СтавкиНДС	= ЭтотОбъект.СтавкаНДС;
			
			Проводка.СчетКт = мСчет6004;
			Проводка.СубконтоКт.Организации = ЭтотОбъект.Организация;
			Проводка.СубконтоКт.Контрагенты = ЭтотОбъект.Перевозчик;
			
			Проводка.Сумма 	= ЭтотОбъект.СуммаНДС;

		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

//+++АК SHEP 2018.04.19 ИП-00018423: перенёс из модуля объекта
Функция ПолучитьРаспределениеСуммыТранспортныхРасходов(ЭтотОбъект, мСуммаВсего, СПоставщиками = Ложь, СХарактеристиками = Ложь)
	
	Перем Запрос, СуммаВсего;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала"			, НачалоМесяца(ЭтотОбъект.Дата));
	Запрос.УстановитьПараметр("ДатаОкончания"		, КонецМесяца(ЭтотОбъект.Дата));
	Запрос.УстановитьПараметр("МассивПоставщиков"	, ЭтотОбъект.Поставщики.ВыгрузитьКолонку("Поставщик"));
	Запрос.УстановитьПараметр("Сумма"				, мСуммаВсего);
	Запрос.УстановитьПараметр("СПоставщиками"		, СПоставщиками);
	Запрос.УстановитьПараметр("СХарактеристиками"	, СХарактеристиками);
	
	//+++АК sole 2018.06.08 ИП-00018943
	ТолькоУпаковка = (ЭтотОбъект.ВидТранспортныхРасходов = ПредопределенноеЗначение("Перечисление.ВидыОбщихТранспортныхРасходов.ДоставкаНаСклад"));
	Запрос.УстановитьПараметр("Организация"			, ЭтотОбъект.Организация);
	Запрос.УстановитьПараметр("ТолькоУпаковка"		, ТолькоУпаковка);
	//---АК sole 2018.06.08 ИП-00018943
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЗ_Полный.Склад,
	|	ВЗ_Полный.Склад.Владелец КАК СтруктурнаяЕдиница,
	|	ВЗ_Полный.Номенклатура,
	|	ВЗ_Полный.ТипТовара,
	|	СУММА(ВЗ_Полный.Вес) КАК Вес,
	|	ВЗ_Полный.Контрагент,
	|	МАКСИМУМ(ВЗ_Полный.Характеристика) КАК Характеристика
	|ПОМЕСТИТЬ ВТВеса
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТЧТовары.Ссылка.Склад КАК Склад,
	|		ТЧТовары.Номенклатура КАК Номенклатура,
	|		ТЧТовары.Номенклатура.ТипТовара КАК ТипТовара,
	|		ТЧТовары.Количество * ТЧТовары.ЕдиницаИзмерения.Вес КАК Вес,
	|		ВЫБОР
	|			КОГДА &СПоставщиками = ИСТИНА
	|				ТОГДА ТЧТовары.Ссылка.Поставщик
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК Контрагент,
	|		ВЫБОР
	|			КОГДА &СХарактеристиками = ИСТИНА
	|				ТОГДА ТЧТовары.Характеристика
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ КАК Характеристика
	|	ИЗ
	|		Документ.ПриходныйОрдерСклад.Товары КАК ТЧТовары
	|	ГДЕ
	|		(ТЧТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ОтПоставщика)
	|				ИЛИ ТЧТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ПоступлениеУпаковкиОтПоставщика))
	|		И ТЧТовары.Ссылка.Проведен
	|		И ВЫБОР
	|				КОГДА НЕ ТЧТовары.Ссылка.ДатаДокументаПоставщика = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ТЧТовары.Ссылка.ДатаДокументаПоставщика
	|				ИНАЧЕ ТЧТовары.Ссылка.Дата
	|			КОНЕЦ МЕЖДУ &ДатаНачала И &ДатаОкончания
	|		И ТЧТовары.Ссылка.Поставщик В(&МассивПоставщиков)
	|		И НЕ ТЧТовары.Номенклатура.ЭтоКомплект
	|		И ТЧТовары.Ссылка.Организация = &Организация
	|		И 	(
	|				&ТолькоУпаковка И ТЧТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ПоступлениеУпаковкиОтПоставщика) 
	|			    ИЛИ НЕ &ТолькоУпаковка 
	|			)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ТЧТовары.Склад,
	|		СоставКомплектаСрезПоследних.Составляющая.Владелец,
	|		СоставКомплектаСрезПоследних.Составляющая.Владелец.ТипТовара,
	|		ТЧТовары.Количество * СоставКомплектаСрезПоследних.Составляющая.Владелец.ЕдиницаХраненияОстатков.Вес * СоставКомплектаСрезПоследних.Количество,
	|		ВЫБОР
	|			КОГДА &СПоставщиками = ИСТИНА
	|				ТОГДА ТЧТовары.Поставщик
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА &СХарактеристиками = ИСТИНА
	|				ТОГДА СоставКомплектаСрезПоследних.Составляющая
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ
	|	ИЗ
	|		(ВЫБРАТЬ
	|			МАКСИМУМ(ТЧТовары.Ссылка.Склад) КАК Склад,
	|			ТЧТовары.Ссылка.Поставщик КАК Поставщик,
	|			ТЧТовары.Номенклатура КАК Номенклатура,
	|			ТЧТовары.Характеристика КАК Характеристика,
	|			СУММА(ТЧТовары.Количество) КАК Количество
	|		ИЗ
	|			Документ.ПриходныйОрдерСклад.Товары КАК ТЧТовары
	|		ГДЕ
	|			(ТЧТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ОтПоставщика)
	|					ИЛИ ТЧТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ПоступлениеУпаковкиОтПоставщика))
	|			И ТЧТовары.Ссылка.Проведен
	|			И ВЫБОР
	|					КОГДА НЕ ТЧТовары.Ссылка.ДатаДокументаПоставщика = ДАТАВРЕМЯ(1, 1, 1)
	|						ТОГДА ТЧТовары.Ссылка.ДатаДокументаПоставщика
	|					ИНАЧЕ ТЧТовары.Ссылка.Дата
	|				КОНЕЦ МЕЖДУ &ДатаНачала И &ДатаОкончания
	|			И ТЧТовары.Ссылка.Поставщик В(&МассивПоставщиков)
	|			И ТЧТовары.Номенклатура.ЭтоКомплект
	|			И ТЧТовары.Ссылка.Организация = &Организация
	|			И 	(
	|					&ТолькоУпаковка И ТЧТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ПоступлениеУпаковкиОтПоставщика) 
	|			    	ИЛИ НЕ &ТолькоУпаковка 
	|				)
	|
	|		СГРУППИРОВАТЬ ПО
	|			ТЧТовары.Ссылка.Поставщик,
	|			ТЧТовары.Номенклатура,
	|			ТЧТовары.Характеристика) КАК ТЧТовары
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоставКомплекта.СрезПоследних(&ДатаОкончания, ) КАК СоставКомплектаСрезПоследних
	|			ПО ТЧТовары.Характеристика = СоставКомплектаСрезПоследних.Характеристика) КАК ВЗ_Полный
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЗ_Полный.Склад,
	|	ВЗ_Полный.Склад.Владелец,
	|	ВЗ_Полный.Номенклатура,
	|	ВЗ_Полный.ТипТовара,
	|	ВЗ_Полный.Контрагент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВТВеса.Вес) КАК Вес
	|ПОМЕСТИТЬ ВТОбщийВес
	|ИЗ
	|	ВТВеса КАК ВТВеса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТВеса.Склад,
	|	ВТВеса.Контрагент,
	|	ВТВеса.СтруктурнаяЕдиница,
	|	ВТВеса.Номенклатура,
	|	ВТВеса.Характеристика,
	|	ВТВеса.ТипТовара,
	|	&Сумма * ВТВеса.Вес / ВЫБОР
	|		КОГДА ВТОбщийВес.Вес = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВТОбщийВес.Вес, 1)
	|	КОНЕЦ КАК Сумма
	|ПОМЕСТИТЬ ВТОсновная
	|ИЗ
	|	ВТВеса КАК ВТВеса
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбщийВес КАК ВТОбщийВес
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОсновная.СтруктурнаяЕдиница,
	|	ВТОсновная.Контрагент,
	|	ВТОсновная.Номенклатура,
	|	ВТОсновная.Характеристика,
	|	СУММА(ВТОсновная.Сумма) КАК Сумма
	|ИЗ
	|	ВТОсновная КАК ВТОсновная
	|ГДЕ
	|	НЕ ВТОсновная.ТипТовара = ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.Упаковка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТОсновная.СтруктурнаяЕдиница,
	|	ВТОсновная.Контрагент,
	|	ВТОсновная.Номенклатура,
	|	ВТОсновная.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОсновная.Склад,
	|	ВТОсновная.Контрагент,
	|	ВТОсновная.Номенклатура,
	|	ВТОсновная.Характеристика,
	|	ВТОсновная.Сумма
	|ИЗ
	|	ВТОсновная КАК ВТОсновная
	|ГДЕ
	|	ВТОсновная.ТипТовара = ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.Упаковка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВеса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОбщийВес
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОсновная";
	
	Возврат Запрос.ВыполнитьПакет();
	
КонецФункции
