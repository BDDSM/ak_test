
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НаДату = ТекущаяДата();
	
	Список.Параметры.УстановитьЗначениеПараметра("ДатаСреза", НаДату);
	
КонецПроцедуры

&НаКлиенте
Процедура НаДатуПриИзменении(Элемент)
	
	Список.Параметры.УстановитьЗначениеПараметра("ДатаСреза", НаДату);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеревестиВсеТочкиРасчетчикаНаДругого(Команда)
	
	Результат = ОткрытьФормуМодально("Документ.ЛистУчета.Форма.ПереносВсехТочекПоРасчетчику");
	
	Если Результат = Истина Тогда
		Элементы.Список.Обновить();
	КонецЕсли;	
	
КонецПроцедуры

Функция ПолучитьКлючЗаписи(Знач СписокПоля)
	
	СписокПоля.Вставить("ТипРоли", ПланыВидовХарактеристик.ТипыРолейПользователя.БухгалтерРасчетчик);
	Возврат РегистрыСведений.СоответствиеОбъектРоль.СоздатьКлючЗаписи(СписокПоля);
	
КонецФункции	

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	СписокПоля = Новый Структура("Период, Объект", Элементы.Список.ТекущиеДанные.ДействуетС, Элементы.Список.ТекущиеДанные.ТорговаяТочка);
	Если ЗначениеЗаполнено(Элементы.Список.ТекущиеДанные.ДействуетС) Тогда
		ОткрытьФорму("РегистрСведений.СоответствиеОбъектРоль.ФормаЗаписи", Новый Структура("Ключ", ПолучитьКлючЗаписи(СписокПоля)));
	Иначе
		ОткрытьФорму("РегистрСведений.СоответствиеОбъектРоль.ФормаЗаписи", Новый Структура("Объект, ТипРоли", Элементы.Список.ТекущиеДанные.ТорговаяТочка, ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.БухгалтерРасчетчик")));
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СоответствиеОбъектРоль.Изменен" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;	
	
КонецПроцедуры
