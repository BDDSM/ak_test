
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Акты.Загрузить(ЗначениеИзСтрокиВнутр(Параметры.ТаблицаАкты));
	ЧекиПоАктам.Загрузить(ЗначениеИзСтрокиВнутр(Параметры.ТаблицаЧеки));
	ВозвратыИзСейфа.Загрузить(ЗначениеИзСтрокиВнутр(Параметры.ТаблицаВозвратыИзСейфа));
	ТоварыПоВозвратам.Загрузить(ЗначениеИзСтрокиВнутр(Параметры.ТаблицаТоваровВозвратовИзСейфа));
	ЭтоИзбенка = Параметры.ЭтоИзбенка;
	ЛистУчета = Параметры.ЛистУчета;
	ТТ = Параметры.ТТ;
	Дата = Параметры.Дата;
	//Элементы.АктыККМ.Видимость = НЕ ЭтоИзбенка;
	//Элементы.АктыОсновноеСредство.Видимость = ЭтоИзбенка;
	
КонецПроцедуры

&НаКлиенте
Процедура Принять(Команда)
	
	МассивСтроки = Новый Массив();
	Для Каждого СтрокаТаб Из Акты Цикл
		МассивСтроки.Добавить(Новый Структура("ККМ, ОсновноеСредство, ЭтоВозвратБезнал, Сумма, ПолученаСумма, АктПолучен, ВыгруженВБухгалтерию, АктПолучилCотрудник, СуммаПоНДС10, СуммаПоНДС18, КлючСтроки, Комментарий"
				, СтрокаТаб.ККМ, СтрокаТаб.ОсновноеСредство, СтрокаТаб.ЭтоВозвратБезнал, СтрокаТаб.Сумма, СтрокаТаб.ПолученаСумма, СтрокаТаб.АктПолучен, СтрокаТаб.ВыгруженВБухгалтерию, СтрокаТаб.АктПолучилCотрудник, СтрокаТаб.СуммаПоНДС10, СтрокаТаб.СуммаПоНДС18, СтрокаТаб.КлючСтроки, СтрокаТаб.Комментарий));
	КонецЦикла;
			
	МассивЧеки = Новый Массив();
	Для Каждого СтрокаТаб Из ЧекиПоАктам Цикл
		МассивЧеки.Добавить(Новый Структура("КлючСтрокиАкта, УИНЧека, СуммаЧека"
				, СтрокаТаб.КлючСтрокиАкта, СтрокаТаб.УИНЧека, СтрокаТаб.СуммаЧека));
	КонецЦикла;
	
	МассивВозвраты = Новый Массив();
	Для Каждого СтрокаТаб Из ВозвратыИзСейфа Цикл
		МассивВозвраты.Добавить(Новый Структура("Сумма, ПолученаСумма, СуммаПоНДС10, СуммаПоНДС18, КлючСтроки, Комментарий, ВозвратПолучен, ВыгруженВБухгалтерию, ВозвратПолучилCотрудник"
				, СтрокаТаб.Сумма, СтрокаТаб.ПолученаСумма, СтрокаТаб.СуммаПоНДС10, СтрокаТаб.СуммаПоНДС18, СтрокаТаб.КлючСтроки, СтрокаТаб.Комментарий, СтрокаТаб.ВозвратПолучен, СтрокаТаб.ВыгруженВБухгалтерию, СтрокаТаб.ВозвратПолучилCотрудник));
	КонецЦикла;
			
	МассивТоварыВозвратов = Новый Массив();
	Для Каждого СтрокаТаб Из ТоварыПоВозвратам Цикл
		МассивТоварыВозвратов.Добавить(Новый Структура("КлючСтрокиВозврата, Номенклатура, Количество, СтавкаНДС, Сумма, СуммаПоНДС10, СуммаПоНДС18"
				, СтрокаТаб.КлючСтрокиВозврата, СтрокаТаб.Номенклатура, СтрокаТаб.Количество, СтрокаТаб.СтавкаНДС, СтрокаТаб.Сумма, СтрокаТаб.СуммаПоНДС10, СтрокаТаб.СуммаПоНДС18));
	КонецЦикла;		
	
	Результат = Новый Структура();
	Результат.Вставить("Акты", МассивСтроки);
	Результат.Вставить("Чеки", МассивЧеки);
	Результат.Вставить("Возвраты", МассивВозвраты);
	Результат.Вставить("ТоварыВозвратов", МассивТоварыВозвратов);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура НаличкаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	//Если НоваяСтрока Тогда
	//	Элементы.Наличка.ТекущиеДанные.ККМ = ПредопределенноеЗначение("Справочник.Терминалы.ПустаяСсылка");
	//КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура АктыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Копирование Тогда
		Элементы.Акты.ТекущиеДанные.ВыгруженВБухгалтерию = Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Элементы.Акты.ТекущиеДанные.КлючСтроки) Тогда
		Элементы.Акты.ТекущиеДанные.КлючСтроки = Строка(Новый УникальныйИдентификатор());
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекущегоПользователя()
	Возврат ПараметрыСеанса.ТекущийПользователь;
КонецФункции	

&НаКлиенте
Процедура АктыАктПолученПриИзменении(Элемент)
	
	Если Элементы.Акты.ТекущиеДанные.АктПолучен Тогда
		Элементы.Акты.ТекущиеДанные.АктПолучилCотрудник = ПолучитьТекущегоПользователя();
	Иначе	
		Элементы.Акты.ТекущиеДанные.АктПолучилCотрудник = Неопределено;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура АктыПолученаСуммаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Не ЗначениеЗаполнено(Элементы.Акты.ТекущиеДанные.КлючСтроки) Тогда
		Элементы.Акты.ТекущиеДанные.КлючСтроки = Строка(Новый УникальныйИдентификатор());
	КонецЕсли;	
	СтрокиЧеков = ЧекиПоАктам.НайтиСтроки(Новый Структура("КлючСтрокиАкта", Элементы.Акты.ТекущиеДанные.КлючСтроки));
	МассивЧеков = Новый Массив();
	Для Каждого СтрокаЧек Из СтрокиЧеков Цикл
		МассивЧеков.Добавить(Новый Структура("УИНЧека, СуммаЧека", СтрокаЧек.УИНЧека, СтрокаЧек.СуммаЧека));
	КонецЦикла;	
	Результат = ОткрытьФормуМодально("Документ.ЛистУчета.Форма.ФормаВыбораЧековКМ3", Новый Структура("ТТ, Дата, Чеки", ТТ, Дата, МассивЧеков));
	Если ТипЗнч(Результат) = Тип("Массив") Тогда
		КолвоСтрок = ЧекиПоАктам.Количество();
		Для н = 1 По КолвоСтрок Цикл
			Если ЧекиПоАктам[КолвоСтрок - н].КлючСтрокиАкта = Элементы.Акты.ТекущиеДанные.КлючСтроки Тогда
				ЧекиПоАктам.Удалить(КолвоСтрок - н);
			КонецЕсли;	
		КонецЦикла;	
		Элементы.Акты.ТекущиеДанные.ПолученаСумма = 0;
		Элементы.Акты.ТекущиеДанные.СуммаПоНдс10 = 0;
		Элементы.Акты.ТекущиеДанные.СуммаПоНдс18 = 0;
		Для Каждого СтрокаЧек Из Результат Цикл
			Элементы.Акты.ТекущиеДанные.ПолученаСумма = Элементы.Акты.ТекущиеДанные.ПолученаСумма + СтрокаЧек.ПолученаСумма;
			Элементы.Акты.ТекущиеДанные.СуммаПоНдс10 = Элементы.Акты.ТекущиеДанные.СуммаПоНдс10 + СтрокаЧек.СуммаПоНдс10;
			Элементы.Акты.ТекущиеДанные.СуммаПоНдс18 = Элементы.Акты.ТекущиеДанные.СуммаПоНдс18 + СтрокаЧек.СуммаПоНдс18;
			СтрокаДоб = ЧекиПоАктам.Добавить();
			СтрокаДоб.КлючСтрокиАкта = Элементы.Акты.ТекущиеДанные.КлючСтроки;
			СтрокаДоб.УИНЧека = СтрокаЧек.УИНЧека;
			СтрокаДоб.СуммаЧека = СтрокаЧек.ПолученаСумма;
		КонецЦикла;	
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПеренестиВВозвратыИзСейфа()
	
	ТекДанные = Акты.НайтиПоИдентификатору(Элементы.Акты.ТекущаяСтрока);
	
	СтрокаВозвратаДоб = ВозвратыИзСейфа.Добавить();
	СтрокаВозвратаДоб.КлючСтроки = ТекДанные.КлючСтроки;
	СтрокаВозвратаДоб.Сумма = ?(ТекДанные.ПолученаСумма <> 0, ТекДанные.ПолученаСумма, ТекДанные.Сумма);
	СтрокаВозвратаДоб.Комментарий = ТекДанные.Комментарий;
	
	СтрокиЧеки = ЧекиПоАктам.НайтиСтроки(Новый Структура("КлючСтрокиАкта", ТекДанные.КлючСтроки));
	
	Если СтрокиЧеки.Количество() > 0 Тогда
		
		ADOСоединение = Новый COMОбъект("ADODB.Connection");
		ADOСоединение.ConnectionTimeOut = 0;
		ADOСоединение.CommandTimeOut    = 0;
		
		ТабКешЧеки = Новый ТаблицаЗначений();
		ТабКешЧеки.Колонки.Добавить("УИНЧека");
		ТабКешЧеки.Колонки.Добавить("Номенклатура");
		ТабКешЧеки.Колонки.Добавить("Количество");
		ТабКешЧеки.Колонки.Добавить("СуммаЧека");
		ТабКешЧеки.Колонки.Добавить("СуммаПоНдс10");
		ТабКешЧеки.Колонки.Добавить("СуммаПоНдс18");
		ТабКешЧеки.Индексы.Добавить("УИНЧека");
		
		Если ТТ.ТипРозничнойТочки = Перечисления.ТипыРозничныхТочек.Избенка Тогда
			СтрСоедиение = ОбменСAccess.ПолучитьСтрокуСоединения("sms_izbenka");
			
			ADOСоединение.ConnectionString  = СтрСоедиение;
			ADOСоединение.Open();
			
			СтрЗапрос = "SELECT Ch.CheckUID,
			|  Ch.BaseSum,
			|  Chl.UID as UID,
			|  Chl.Qnt as Qnt,
			|  Chl.SummaPoNDS10 as SummaPoNDS10,
			|  Chl.SummaPoNDS18 as SummaPoNDS18
			|FROM [SMS_IZBENKA].[dbo].[Checks] as Ch (nolock)
			|	LEFT OUTER JOIN (SELECT Chl.CheckUid As CheckUid, ArticleBin2UID.UID as UID, SUM(Chl.Quantity) as Qnt,
			|				   				SUM(CASE WHEN ArticleBin2UID.Stavka = 10 THEN Chl.BaseSum * -1 ELSE 0 END) as SummaPoNDS10, 
			|				   				SUM(CASE WHEN ArticleBin2UID.Stavka = 18 THEN Chl.BaseSum * -1 ELSE 0 END) as SummaPoNDS18
			|						FROM [SMS_IZBENKA].[dbo].[CheckLine] as Chl (nolock)
			|						INNER JOIN IzbenkaFin.dbo.ArticleBin2UID as ArticleBin2UID (nolock)
			|						ON Chl.id_tov_cl = ArticleBin2UID.id_tov
			|						WHERE Chl.date_ch = '" + Формат(КонецДня(Дата), "ДФ=yyyy-MM-dd") + "' and Chl.id_tt_cl = " + Формат(ТТ.id_TT, "ЧГ=0") + "
			|						GROUP BY Chl.CheckUid, ArticleBin2UID.UID) as Chl ON Ch.CheckUID = Chl.CheckUid
			|where Ch.CloseDate >= '" + Формат(НачалоДня(Дата), "ДФ=yyyy-MM-ddTHH:mm:ss") + "' and Ch.CloseDate <= '" + Формат(КонецДня(Дата), "ДФ=yyyy-MM-ddTHH:mm:ss") + "' and Ch.OperationType IN (1, 201, 3, 202, 203)
			|and Ch.ShopNo IN (" + ТТ.НомерТочки + ")
			|";
			
			rs = ADOСоединение.Execute(СтрЗапрос);
			
			Если НЕ rs.EOF() Тогда	
				rs.MoveFirst();
				
				Пока НЕ rs.EOF() Цикл
					СтрокаДоб = ТабКешЧеки.Добавить();
					СтрокаДоб.УИНЧека = Rs.Fields("CheckUID").Value;
					СтрокаДоб.Количество = Rs.Fields("Qnt").Value;
					СтрокаДоб.СуммаПоНдс10 = Rs.Fields("SummaPoNDS10").Value;
					СтрокаДоб.СуммаПоНдс18 = Rs.Fields("SummaPoNDS18").Value;
					Если Rs.Fields("UID").Value <> NULL Тогда
						СтрокаДоб.Номенклатура = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(Rs.Fields("UID").Value, 2, 36)));
					КонецЕсли;
					Если СтрокаДоб.Количество < 0 Тогда
						СтрокаДоб.Количество = СтрокаДоб.Количество * (-1)
					КонецЕсли;
					Если СтрокаДоб.СуммаПоНдс10 < 0 Тогда
						СтрокаДоб.СуммаПоНдс10 = СтрокаДоб.СуммаПоНдс10 * (-1)
					КонецЕсли;
					Если СтрокаДоб.СуммаПоНдс18 < 0 Тогда
						СтрокаДоб.СуммаПоНдс18 = СтрокаДоб.СуммаПоНдс18 * (-1)
					КонецЕсли;
					СтрокаДоб.СуммаЧека = СтрокаДоб.СуммаПоНдс18 + СтрокаДоб.СуммаПоНдс10;
					rs.MoveNext();
				КонецЦикла;
			КонецЕсли;
		Иначе
			СтрСоедиение = ОбменСAccess.ПолучитьСтрокуСоединения("sms_union");
			
			ADOСоединение.ConnectionString  = СтрСоедиение;
			ADOСоединение.Open();
			
			СтрЗапрос = "SELECT Ch.CheckUID,
			|  Ch.BaseSum,
			|  Chl.UID as UID,
			|  Chl.Qnt as Qnt,
			|  Chl.SummaPoNDS10 as SummaPoNDS10,
			|  Chl.SummaPoNDS18 as SummaPoNDS18
			|FROM [SMS_UNION].[dbo].[Checks] as Ch (nolock)
			|	LEFT OUTER JOIN (SELECT Chl.CheckUid As CheckUid, ArticleBin2UID.UID as UID, SUM(Chl.Quantity) as Qnt,
			|				   				SUM(CASE WHEN ArticleBin2UID.Stavka = 10 THEN Chl.BaseSum * -1 ELSE 0 END) as SummaPoNDS10, 
			|				   				SUM(CASE WHEN ArticleBin2UID.Stavka = 18 THEN Chl.BaseSum * -1 ELSE 0 END) as SummaPoNDS18
			|						FROM [SMS_UNION].[dbo].[CheckLine] as Chl (nolock)
			|						INNER JOIN IzbenkaFin.dbo.ArticleBin2UID as ArticleBin2UID (nolock)
			|						ON Chl.id_tov_cl = ArticleBin2UID.id_tov
			|						WHERE Chl.date_ch = '" + Формат(КонецДня(Дата), "ДФ=yyyy-MM-dd") + "' and Chl.id_tt_cl = " + Формат(ТТ.id_TT, "ЧГ=0") + "
			|						GROUP BY Chl.CheckUid, ArticleBin2UID.UID) as Chl ON Ch.CheckUID = Chl.CheckUid
			|where Ch.CloseDate >= '" + Формат(НачалоДня(Дата), "ДФ=yyyy-MM-ddTHH:mm:ss") + "' and Ch.CloseDate <= '" + Формат(КонецДня(Дата), "ДФ=yyyy-MM-ddTHH:mm:ss") + "'
			|and Ch.ShopNo = " + Формат(ТТ.НомерТочки, "ЧГ=0") + "
			|and not Chl.UID is null
			|";
			
			rs = ADOСоединение.Execute(СтрЗапрос);
			
			Если НЕ rs.EOF() Тогда	
				rs.MoveFirst();
				
				Пока НЕ rs.EOF() Цикл
					НоменклатураЭл = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(Rs.Fields("UID").Value, 2, 36)));
					Если ЗначениеЗаполнено(НоменклатураЭл) Тогда
						СтрокаДоб = ТабКешЧеки.Добавить();
						СтрокаДоб.УИНЧека = Rs.Fields("CheckUID").Value;
						СтрокаДоб.Количество = Rs.Fields("Qnt").Value;
						СтрокаДоб.СуммаПоНдс10 = Rs.Fields("SummaPoNDS10").Value;
						СтрокаДоб.СуммаПоНдс18 = Rs.Fields("SummaPoNDS18").Value;
						Если Rs.Fields("UID").Value <> NULL Тогда
							СтрокаДоб.Номенклатура = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Сред(Rs.Fields("UID").Value, 2, 36)));
						КонецЕсли;
						
						Если СтрокаДоб.Количество < 0 Тогда
							СтрокаДоб.Количество = СтрокаДоб.Количество * (-1)
						КонецЕсли;
						Если СтрокаДоб.СуммаПоНдс10 < 0 Тогда
							СтрокаДоб.СуммаПоНдс10 = СтрокаДоб.СуммаПоНдс10 * (-1)
						КонецЕсли;
						Если СтрокаДоб.СуммаПоНдс18 < 0 Тогда
							СтрокаДоб.СуммаПоНдс18 = СтрокаДоб.СуммаПоНдс18 * (-1)
						КонецЕсли;
						СтрокаДоб.СуммаЧека = СтрокаДоб.СуммаПоНдс18 + СтрокаДоб.СуммаПоНдс10;
					КонецЕсли;	
					rs.MoveNext();
				КонецЦикла;
			КонецЕсли;	
		КонецЕсли;	
		
		ADOСоединение.Close();
		
		СуммаИтог = 0;
		СуммаПоНДС18Итог = 0;
		СуммаПоНДС10Итог = 0;
		Для Каждого СтрокаЧек Из СтрокиЧеки Цикл
			СтрокиКешЧек = ТабКешЧеки.НайтиСтроки(Новый Структура("УИНЧека", СтрокаЧек.УинЧека));
			Для Каждого СтрокаКеш Из СтрокиКешЧек Цикл
				Если СтрокаКеш.СуммаЧека = 0 Тогда
					Продолжить;
				КонецЕсли;	
				СтрокаДобТовар = ТоварыПоВозвратам.Добавить();
				СтрокаДобТовар.КлючСтрокиВозврата = СтрокаВозвратаДоб.КлючСтроки;
				СтрокаДобТовар.Номенклатура = СтрокаКеш.Номенклатура;
				СтрокаДобТовар.Количество = СтрокаКеш.Количество;
				СтрокаДобТовар.Сумма = СтрокаКеш.СуммаЧека;
				СтрокаДобТовар.СуммаПоНДС18 = СтрокаКеш.СуммаПоНДС18;
				СтрокаДобТовар.СуммаПоНДС10 = СтрокаКеш.СуммаПоНДС10;
				Если СтрокаДобТовар.СуммаПоНДС18 > 0 Тогда
					СтрокаДобТовар.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
				Иначе
					СтрокаДобТовар.СтавкаНДС = Перечисления.СтавкиНДС.НДС10;
				КонецЕсли;	
				СуммаИтог = СуммаИтог + СтрокаДобТовар.Сумма;
				СуммаПоНДС10Итог = СуммаПоНДС10Итог + СтрокаДобТовар.СуммаПоНДС10;
				СуммаПоНДС18Итог = СуммаПоНДС18Итог + СтрокаДобТовар.СуммаПоНДС18;
			КонецЦикла;	
		КонецЦикла;	
		СтрокаВозвратаДоб.ПолученаСумма = СуммаИтог;
		СтрокаВозвратаДоб.СуммаПоНДС10 = СуммаПоНДС10Итог;
		СтрокаВозвратаДоб.СуммаПоНДС18 = СуммаПоНДС18Итог;
	КонецЕсли;	
	
	КолвоСтрок = Акты.Количество();
	Для н = 1 По КолвоСтрок Цикл
		Если СтрокаВозвратаДоб.КлючСтроки = Акты[КолвоСтрок - н].КлючСтроки Тогда
			Акты.Удалить(КолвоСтрок - н);
		КонецЕсли;	
	КонецЦикла;
	
	КолвоСтрок = ЧекиПоАктам.Количество();
	Для н = 1 По КолвоСтрок Цикл
		Если СтрокаВозвратаДоб.КлючСтроки = ЧекиПоАктам[КолвоСтрок - н].КлючСтрокиАкта Тогда
			ЧекиПоАктам.Удалить(КолвоСтрок - н);
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры	

&НаКлиенте
Процедура ПеренестиВыделеннуюСтрокуВВозвратыИзСейфа(Команда)
	
	Если Элементы.Акты.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	Ответ = Вопрос("Вы действительно хотите перенести выделенную строку в возвраты из сейфа?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;	
	
	ПеренестиВВозвратыИзСейфа();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОснСредствоДляТерминала(Терминал)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Дата", КонецДня(Дата));
	Запрос.УстановитьПараметр("ТТ", ТТ);
	Запрос.УстановитьПараметр("Терминал", Терминал);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПривязкиОборудованияКРабочимМестамСрезПоследних.Касса
	               |ИЗ
	               |	РегистрСведений.ПривязкиОборудованияКРабочимМестам.СрезПоследних(&Дата, РабочееМесто.СтруктурнаяЕдиница = &ТТ) КАК ПривязкиОборудованияКРабочимМестамСрезПоследних
	               |ГДЕ
	               |	ПривязкиОборудованияКРабочимМестамСрезПоследних.Терминал = &Терминал";
	
	ТабТерминалы = Запрос.Выполнить().Выгрузить();
	
	Возврат ?(ТабТерминалы.Количество() = 0, Неопределено, ТабТерминалы[0].Касса);
	
КонецФункции

&НаСервере
Функция ПолучитьТерминалПоОснСредству(ОснСредство)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Дата", КонецДня(Дата));
	Запрос.УстановитьПараметр("ТТ", ТТ);
	Запрос.УстановитьПараметр("ОснСредство", ОснСредство);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПривязкиОборудованияКРабочимМестамСрезПоследних.Терминал
	|ИЗ
	|	РегистрСведений.ПривязкиОборудованияКРабочимМестам.СрезПоследних(&Дата, РабочееМесто.СтруктурнаяЕдиница = &ТТ) КАК ПривязкиОборудованияКРабочимМестамСрезПоследних
	|ГДЕ
	|	ПривязкиОборудованияКРабочимМестамСрезПоследних.Касса = &ОснСредство";
	ТабТерминалы = Запрос.Выполнить().Выгрузить();
	
	Возврат ?(ТабТерминалы.Количество() = 0, Неопределено, ТабТерминалы[0].Терминал);
	
КонецФункции

&НаКлиенте
Процедура АктыККМПриИзменении(Элемент)
	
	Элементы.Акты.ТекущиеДанные.ОсновноеСредство = ПолучитьОснСредствоДляТерминала(Элементы.Акты.ТекущиеДанные.ККМ);
	
КонецПроцедуры

&НаКлиенте
Процедура АктыОсновноеСредствоПриИзменении(Элемент)
	
	Элементы.Акты.ТекущиеДанные.ККМ = ПолучитьТерминалПоОснСредству(Элементы.Акты.ТекущиеДанные.ОсновноеСредство);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьВыделенныхСтрок(Команда)
	
	ПараметрКоманды = Новый Массив();
	Для Каждого ВыделеннаяСтрока Из Элементы.Акты.ВыделенныеСтроки Цикл
		СтрокаВложенная = Акты.НайтиПоИдентификатору(ВыделеннаяСтрока);
		Если (СтрокаВложенная.Сумма > 0
			ИЛИ СтрокаВложенная.ПолученаСумма > 0) Тогда
			ПараметрКоманды.Добавить(Новый Структура("ЛистУчета, Сумма, ПолученаСумма, ЭтоВозвратБезнал, ОсновноеСредство, КлючСтроки, ЧекиПоАктам",
					ЛистУчета, СтрокаВложенная.Сумма, СтрокаВложенная.ПолученаСумма, СтрокаВложенная.ЭтоВозвратБезнал, ?(ЗначениеЗаполнено(СтрокаВложенная.ОсновноеСредство), СтрокаВложенная.ОсновноеСредство, СтрокаВложенная.ККМ), СтрокаВложенная.КлючСтроки, ЧекиПоАктам));
		КонецЕсли;
	КонецЦикла;	
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Обработка.АктыКМ3",
		"АктКМ3",
		ПараметрКоманды,
		Неопределено,
		Новый Структура()
	);
	
КонецПроцедуры
