Перем мКолонкиТовары;

Процедура ПосчитатьСуммуТабличнойЧасти()
	СуммаДок = 0;
	Для Каждого СтрокаТабличнойЧастиТовары Из Товары Цикл
		СуммаДок = СуммаДок + СтрокаТабличнойЧастиТовары.Сумма;
	КонецЦикла;
	Для Каждого СтрокаТабличнойЧастиУслуги Из Услуги Цикл
		СуммаДок = СуммаДок + СтрокаТабличнойЧастиУслуги.Сумма;
	КонецЦикла;
	СуммаДокумента = СуммаДок;
Конецпроцедуры

Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ПосчитатьСуммуТабличнойЧасти();
КонецПроцедуры

Процедура ТоварыКоличествоПриИзменении(Элемент)
	ПосчитатьСуммуСтрокиТЧ(ЭлементыФормы.Товары.ТекущаяСтрока);
КонецПроцедуры

Процедура ТоварыЦенаПриИзменении(Элемент)
	ПосчитатьСуммуСтрокиТЧ(ЭлементыФормы.Товары.ТекущаяСтрока);
КонецПроцедуры

Процедура УслугиЦенаПриИзменении(Элемент)
	ПосчитатьСуммуСтрокиТЧ(ЭлементыФормы.Услуги.ТекущаяСтрока);
КонецПроцедуры

Процедура ПосчитатьСуммуСтрокиТЧ(СтрокаТабличнойЧасти)
	СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Цена * СтрокаТабличнойЧасти.Количество;
	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);
КонецПроцедуры

Процедура ТоварыНоменклатураПриИзменении(Элемент)
	Номенклатура = Элемент.Значение;
	СтрокаТабличнойЧасти = ЭлементыФормы.Товары.ТекущиеДанные;
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		Если Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Товар
			ИЛИ Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Материал Тогда
			СчетУчета = ПланыСчетов.Финансовый.Товары;
		ИначеЕсли Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Оборудование Тогда
			СчетУчета = ПланыСчетов.Финансовый.КапитальныеВложения;
		КонецЕсли;
		СтрокаТабличнойЧасти.СчетУчета 				= СчетУчета;
		СтрокаТабличнойЧасти.СтатьяТовародвижения 	= Справочники.СтатьиТовародвижения.ПоступлениеОтПоставщика;
		
		СтрокаТабличнойЧасти.ЕдиницаИзмерения 		= Номенклатура.ЕдиницаХраненияОстатков;
		СтрокаТабличнойЧасти.Коэффициент 			= Номенклатура.ЕдиницаХраненияОстатков.Коэффициент;
		Если Контрагент.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
			СтрокаТабличнойЧасти.СтавкаНДС				= Перечисления.СтавкиНДС.БезНДС;
		Иначе
			СтрокаТабличнойЧасти.СтавкаНДС				= Номенклатура.СтавкаНДС;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура КомментарийНачалоВыбора(Элемент, СтандартнаяОбработка)
		
	ФормаРедактированияТекста = ПолучитьОбщуюФорму("ФормаРедактированияТекста");
	ФормаРедактированияТекста.УстановитьРедактируемыйТекст(Комментарий);
	ОтредактировалиТекст = ФормаРедактированияТекста.ОткрытьМодально();
	
	Если ОтредактировалиТекст = Истина Тогда
		Комментарий = ФормаРедактированияТекста.ПолучитьРедактируемыйТекст();
	КонецЕсли;

КонецПроцедуры

Процедура ПриОткрытии()
	
	Если НЕ ЭтоНовый() Тогда 
		Если ЗначениеЗаполнено(ИД) Тогда
			ЭтаФорма.ТолькоПросмотр=Истина;
		Иначе
			НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
		КонецЕсли;
		Если Услуги.Количество() > 0 И Товары.Количество() = 0 Тогда
			ЭлементыФормы.Панель1.ТекущаяСтраница = ЭлементыФормы.Панель1.Страницы.Услуги;
		КонецЕсли;
	Иначе
		Если ПараметрОбъектКопирования = Неопределено Тогда
			ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Покупка;
			ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, "Покупка");
		Иначе
			ИД = 0;
		КонецЕсли
	КонецЕсли;
	
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
КонецПроцедуры

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
КонецПроцедуры

Процедура ВидОперацииПриИзменении(Элемент)
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Табличная часть документа будет очищена. Продолжить?", Режим, 0);
	Если Ответ = КодВозвратаДиалога.Да Тогда
	    Товары.Очистить();
	КонецЕсли;
КонецПроцедуры

Процедура ТоварыНоменклатураНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = Справочники.Номенклатура.ПолучитьФормуВыбора(,Элемент,);
	ФормаВыбора.СправочникСписок.Отбор.ВидНоменклатуры.Использование = Истина;
	ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ВидНоменклатуры.Доступность = Ложь;
	Если ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Покупка Тогда
		ФормаВыбора.СправочникСписок.Отбор.ВидНоменклатуры.ВидСравнения = ВидСравнения.ВСписке;
		СписокВидовНоменклатуры = Новый СписокЗначений;
		СписокВидовНоменклатуры.Добавить(Перечисления.ВидыНоменклатуры.Товар);
		СписокВидовНоменклатуры.Добавить(Перечисления.ВидыНоменклатуры.Материал);
		ФормаВыбора.СправочникСписок.Отбор.ВидНоменклатуры.Значение = СписокВидовНоменклатуры;
		ФормаВыбора.СправочникСписок.Отбор.ВидНоменклатуры.Значение = СписокВидовНоменклатуры;
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Оборудование Тогда
		ФормаВыбора.СправочникСписок.Отбор.ВидНоменклатуры.ВидСравнения = ВидСравнения.Равно;
		ФормаВыбора.СправочникСписок.Отбор.ВидНоменклатуры.Значение = Перечисления.ВидыНоменклатуры.Оборудование;
	КонецЕсли;
	
	ФормаВыбора.НачальноеЗначениеВыбора = Элемент.Значение;
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура ТоварыЕдиницаИзмеренияПриИзменении(Элемент)
	СтрокаТабличнойЧасти = ЭлементыФормы.Товары.ТекущиеДанные;
	
	СтароеЗначениеКоэффициента = СтрокаТабличнойЧасти.Коэффициент;
	НовоеЗначениеКоэффициента  = СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;
					
	Если НовоеЗначениеКоэффициента <> СтароеЗначениеКоэффициента Тогда
		СтрокаТабличнойЧасти.Коэффициент = НовоеЗначениеКоэффициента;
		ПосчитатьСуммуСтрокиТЧ(СтрокаТабличнойЧасти)
	КонецЕсли;
КонецПроцедуры

Процедура ТоварыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
		РаботаСДиалогами.ПоказатьКодАртикул(мКолонкиТовары, ОформлениеСтроки.Ячейки, ДанныеСтроки.Номенклатура);
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	Если Не ПустаяСтрока(Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;

КонецПроцедуры

Процедура ТоварыСчетУчетаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);
КонецПроцедуры

Процедура УслугиСчетЗатратПриИзменении(Элемент)
	СтрокаТабличнойЧасти = ЭлементыФормы.Услуги.ТекущиеДанные;
	Колонки = ЭлементыФормы.Услуги.Колонки;
	
	РаботаСДиалогами.ПриВыбореСчетаВТабличномПоле(Элемент.Значение, 
		СтрокаТабличнойЧасти.Субконто1, Колонки.Субконто1,
		СтрокаТабличнойЧасти.Субконто2, Колонки.Субконто2,
		СтрокаТабличнойЧасти.Субконто3, Колонки.Субконто3);
КонецПроцедуры

Процедура УслугиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ПосчитатьСуммуТабличнойЧасти();
КонецПроцедуры

Процедура УслугиНоменклатураПриИзменении(Элемент)
	СтрокаТабличнойЧасти = ЭлементыФормы.Услуги.ТекущиеДанные;

	Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.Номенклатура) Тогда
		Возврат;
	КонецЕсли;
	
	ОбработкаТабличныхЧастей.ЗаполнитьСодержаниеТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);
	Если ЗначениеЗаполнено(Контрагент) Тогда
		Если ЗначениеЗаполнено(Контрагент.СтавкаНДС) Тогда
			СтрокаТабличнойЧасти.СтавкаНДС = Контрагент.СтавкаНДС;
		Иначе
			СтрокаТабличнойЧасти.СтавкаНДС = СтрокаТабличнойЧасти.Номенклатура.СтавкаНДС;
		КонецЕсли;
	Иначе
		СтрокаТабличнойЧасти.СтавкаНДС = СтрокаТабличнойЧасти.Номенклатура.СтавкаНДС;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыПерейтиВЖурналПроводок(Кнопка)
	БухгалтерскийУчет.ОткрытьЖурналПроводок(Ссылка);
КонецПроцедуры

Процедура КонтрагентПриИзменении(Элемент)
		//+++АК SUVV 2018.02.28 ИП-00017941
		//МассивСчетов = УправлениеДенежнымиСредствами.ПолучитьСчетРасчетовСКонтрагентом(Элемент.Значение.СтатьяДвиженияДенежныхСредств);
		МассивСчетов = УправлениеДенежнымиСредствами.ПолучитьСчетРасчетовСКонтрагентом(Дата, Элемент.Значение.СтатьяДвиженияДенежныхСредств);
		//---АК SUVV
		
		Если МассивСчетов.Количество() = 1 Тогда
			СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Финансовый.НайтиПоКоду(МассивСчетов[0]).Ссылка;
		Иначе
			СчетУчетаРасчетовСКонтрагентом	= Планысчетов.Финансовый.РасчетыСПоставщиками;
		КонецЕсли;

КонецПроцедуры

Процедура ТоварыСуммаПриИзменении(Элемент)
	СтрокаТабличнойЧасти = ЭлементыФормы.Товары.ТекущаяСтрока;
	СтрокаТабличнойЧасти.Цена = Окр(СтрокаТабличнойЧасти.Сумма/СтрокаТабличнойЧасти.Количество,2);
	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);
КонецПроцедуры

Процедура ОбновлениеОтображения()
	ЭлементыФормы.СуммаНДС.Значение = Товары.Итог("СуммаНДС") + Услуги.Итог("СуммаНДС");
КонецПроцедуры

Процедура ДействияФормыИсторияИзменений(Кнопка)
	ИсторияИзменений = Отчеты.ИсторияИзмененийОбъектов.Создать();
	ИсторияИзменений.СсылкаНаОбъект = Ссылка;
	Форма = ИсторияИзменений.ПолучитьФорму("ФормаОтчета");
	Форма.СформироватьТаблицуВерсий();
	Форма.Открыть();
КонецПроцедуры

Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

мКолонкиТовары         = ЭлементыФормы.Товары.Колонки;
