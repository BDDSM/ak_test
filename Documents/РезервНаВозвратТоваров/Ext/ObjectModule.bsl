
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ЭтотОбъект.Движения.Финансовый.Очистить();
	ЭтотОбъект.Движения.Финансовый.Записывать = Истина;

	//+++АК sils 19.07.2018 ИП-00018932
	ФормированиеПроводок_Резерв();
	//---АК
	
	#Область АК_ОтключенныйКод
	//+++АК sils 30.08.2018 ИП-00018932
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	-ЕСТЬNULL(СУММА(ФинансовыйОстатки.СуммаОстаток), 0) - ЕСТЬNULL(СУММА(ФинансовыйОстатки.СуммаМСФООстаток), 0) КАК СуммаОстаток
	//	|ПОМЕСТИТЬ втТекущийРезерв
	//	|ИЗ
	//	|	РегистрБухгалтерии.Финансовый.Остатки(&ДатаНачала, Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РезервыНаСписаниеВозвратовОтПокупателей), ,Организация = &Организация) КАК ФинансовыйОстатки
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	НастройкаОтраженияОперацийВУчетеСрезПоследних.ЦФО КАК ЦФО,
	//	|	НастройкаОтраженияОперацийВУчетеСрезПоследних.СтатьяДоходовРасходов КАК СтатьяДоходовРасходов,
	//	|	НастройкаОтраженияОперацийВУчетеСрезПоследних.Счет КАК Счет,
	//	|	НастройкаОтраженияОперацийВУчетеСрезПоследних.СтруктурнаяЕдиница
	//	|ПОМЕСТИТЬ втНастройкиПроведения
	//	|ИЗ
	//	|	РегистрСведений.НастройкаОтраженияОперацийВУчете.СрезПоследних(&ДатаОкончания, ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВУчете.Резервы_ВозвратТоваров)) КАК НастройкаОтраженияОперацийВУчетеСрезПоследних
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	СУММА(Объединение.СуммаМСФО) КАК СуммаМСФО,
	//	|	Объединение.Дата,
	//	|	Объединение.Организация
	//	|ПОМЕСТИТЬ втВсегоВозвратов
	//	|ИЗ
	//	|	(ВЫБРАТЬ
	//	|		РезервНаВозвратТоваровСписания.Сумма КАК СуммаМСФО,
	//	|		РезервНаВозвратТоваровСписания.Ссылка.Дата КАК Дата,
	//	|		РезервНаВозвратТоваровСписания.Ссылка.Организация КАК Организация
	//	|	ИЗ
	//	|		Документ.РезервНаВозвратТоваров.Списания КАК РезервНаВозвратТоваровСписания
	//	|	ГДЕ
	//	|		РезервНаВозвратТоваровСписания.Ссылка = &Ссылка
	//	|	
	//	|	ОБЪЕДИНИТЬ ВСЕ
	//	|	
	//	|	ВЫБРАТЬ
	//	|		0,
	//	|		РезервНаВозвратТоваров.Дата,
	//	|		РезервНаВозвратТоваров.Организация
	//	|	ИЗ
	//	|		Документ.РезервНаВозвратТоваров КАК РезервНаВозвратТоваров
	//	|	ГДЕ
	//	|		РезервНаВозвратТоваров.Ссылка = &Ссылка) КАК Объединение
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	Объединение.Организация,
	//	|	Объединение.Дата
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	втВсегоВозвратов.СуммаМСФО - втТекущийРезерв.СуммаОстаток КАК СуммаМСФО,
	//	|	втНастройкиПроведения.ЦФО,
	//	|	втНастройкиПроведения.СтатьяДоходовРасходов,
	//	|	втНастройкиПроведения.Счет КАК СчетЗатраты,
	//	|	ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РезервыНаСписаниеВозвратовОтПокупателей) КАК СчетРезерв,
	//	|	втВсегоВозвратов.Организация,
	//	|	втВсегоВозвратов.Дата КАК Период,
	//	|	втНастройкиПроведения.СтруктурнаяЕдиница КАК ТорговаяТочка
	//	|ИЗ
	//	|	втВсегоВозвратов КАК втВсегоВозвратов,
	//	|	втТекущийРезерв КАК втТекущийРезерв,
	//	|	втНастройкиПроведения КАК втНастройкиПроведения";


	//
	//Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ЭтотОбъект.ДатаНачала));
	//Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ЭтотОбъект.ДатаОкончания));
	//Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	//РезультатЗапроса = Запрос.ВыполнитьПакет();
	//
	//Если РезультатЗапроса[1].Выгрузить().Количество() = 0 Тогда
	//	
	//	Сообщить("Настройка проведения документа не установлена");
	//	Отказ = Истина;
	//	
	//КонецЕсли;	
	//
	//ВыборкаДвижения = РезультатЗапроса[3].Выбрать();
	//                       
	//Пока ВыборкаДвижения.Следующий() Цикл
	//	
	//	НоваяПроводка = Движения.Финансовый.Добавить();
	//	ЗаполнитьЗначенияСвойств(НоваяПроводка,ВыборкаДвижения);
	//			
	//	Если ВыборкаДвижения.СуммаМСФО < 0 Тогда
	//			
	//		НоваяПроводка.СчетДт = ВыборкаДвижения.СчетРезерв;						
	//		НоваяПроводка.СчетКт = ВыборкаДвижения.СчетЗатраты;		
	//		НоваяПроводка.СубконтоКт.ТорговыеТочки = ВыборкаДвижения.ТорговаяТочка;
	//		Если ЗначениеЗаполнено(ВыборкаДвижения.ЦФО) Тогда
	//			НоваяПроводка.СубконтоКт.ЦФО = ВыборкаДвижения.ЦФО;
	//		КонецЕсли;
	//		Если ЗначениеЗаполнено(ВыборкаДвижения.СтатьяДоходовРасходов) Тогда
	//			НоваяПроводка.СубконтоКт.СтатьиДоходовРасходов = ВыборкаДвижения.СтатьяДоходовРасходов;
	//		КонецЕсли;
	//		НоваяПроводка.СуммаМСФО = -ВыборкаДвижения.СуммаМСФО;
	//		
	//	Иначе	
	//		
	//		НоваяПроводка.СчетКт = ВыборкаДвижения.СчетРезерв;						
	//		НоваяПроводка.СчетДт = ВыборкаДвижения.СчетЗатраты;		
	//		НоваяПроводка.СубконтоДт.ТорговыеТочки = ВыборкаДвижения.ТорговаяТочка;
	//		Если ЗначениеЗаполнено(ВыборкаДвижения.ЦФО) Тогда
	//			НоваяПроводка.СубконтоДт.ЦФО = ВыборкаДвижения.ЦФО;
	//		КонецЕсли;
	//		Если ЗначениеЗаполнено(ВыборкаДвижения.СтатьяДоходовРасходов) Тогда
	//			НоваяПроводка.СубконтоДт.СтатьиДоходовРасходов = ВыборкаДвижения.СтатьяДоходовРасходов;
	//		КонецЕсли;
	//		
	//	КонецЕсли;
	//	
	//КонецЦикла;

	//---АК
	#КонецОбласти
	
КонецПроцедуры

//+++АК sils 19.07.2018 ИП-00018932
Процедура ФормированиеПроводок_Резерв()
	Для каждого стр из ЭтотОбъект.Резервы Цикл
		Если ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийРезервыНаВозратТоваров.ТекущееНачислениеИСписаниеРезервов Тогда
			Если стр.РезервыНачисление_Количество <> 0 или стр.РезервыНачисление_Сумма <> 0 Тогда
				НоваяПроводка = Движения.Финансовый.Добавить();
				НоваяПроводка.Период = ЭтотОбъект.Дата;
				НоваяПроводка.Содержание = "Резервы к начислению";
				НоваяПроводка.Организация = ЭтотОбъект.Организация;
				
				НоваяПроводка.СчетДт = ЭтотОбъект.Формирование_Счет;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "ТорговыеТочки", ЭтотОбъект.Формирование_ТорговыеТочки);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "СтатьиДоходовРасходов", ЭтотОбъект.Формирование_СтатьяРасходов);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "ЦФО", ЭтотОбъект.Формирование_ЦФО);
				
				НоваяПроводка.СчетКт = ПланыСчетов.Финансовый.РезервыНаСписаниеВозвратовОтПокупателей;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "Товары", стр.Номенклатура);
				НоваяПроводка.КоличествоКт = стр.РезервыНачисление_Количество;
				
				НоваяПроводка.СуммаМСФО = стр.РезервыНачисление_Сумма;
			КонецЕсли;
			Если стр.РезервыСписание_Количество <> 0 или стр.РезервыСписание_Сумма <> 0 Тогда
				НоваяПроводка = Движения.Финансовый.Добавить();
				НоваяПроводка.Период = ЭтотОбъект.Дата;
				НоваяПроводка.Содержание = "Резервы к списанию";
				НоваяПроводка.Организация = ЭтотОбъект.Организация;
				
				НоваяПроводка.СчетДт = ПланыСчетов.Финансовый.РезервыНаСписаниеВозвратовОтПокупателей;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "Товары", стр.Номенклатура);
				НоваяПроводка.КоличествоДт = стр.РезервыСписание_Количество;
				
				НоваяПроводка.СчетКт = ЭтотОбъект.Списание_Счет;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "ТорговыеТочки", ЭтотОбъект.Формирование_ТорговыеТочки);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "СтатьиДоходовРасходов", ЭтотОбъект.Формирование_СтатьяРасходов);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "ЦФО", ЭтотОбъект.Формирование_ЦФО);
				
				НоваяПроводка.СуммаМСФО = стр.РезервыСписание_Сумма;
				
				НоваяПроводка = Движения.Финансовый.Добавить();
				НоваяПроводка.Период = ЭтотОбъект.Дата;
				НоваяПроводка.Содержание = "Резервы к списанию";
				НоваяПроводка.Организация = ЭтотОбъект.Организация;
				
				НоваяПроводка.СчетДт = ЭтотОбъект.Списание_Счет;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "ТорговыеТочки", ЭтотОбъект.Формирование_ТорговыеТочки);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "СтатьиДоходовРасходов", ЭтотОбъект.Формирование_СтатьяРасходов);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "ЦФО", ЭтотОбъект.Формирование_ЦФО);
				
				НоваяПроводка.СчетКт = ЭтотОбъект.Списание_Счет;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "ТорговыеТочки", ЭтотОбъект.Списание_ТорговыеТочки);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "СтатьиДоходовРасходов", ЭтотОбъект.Списание_СтатьяРасходов);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "ЦФО", ЭтотОбъект.Списание_ЦФО);
				
				НоваяПроводка.СуммаМСФО = стр.РезервыСписание_Сумма;
			КонецЕсли;
		КонецЕсли;
		Если ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийРезервыНаВозратТоваров.СписаниеОстатковРезервов Тогда
			Если стр.РезервыСписание_Количество <> 0 или стр.РезервыСписание_Сумма <> 0 Тогда
				НоваяПроводка = Движения.Финансовый.Добавить();
				НоваяПроводка.Период = ЭтотОбъект.Дата;
				НоваяПроводка.Содержание = "Резервы к списанию";
				НоваяПроводка.Организация = ЭтотОбъект.Организация;
				
				НоваяПроводка.СчетДт = ПланыСчетов.Финансовый.РезервыНаСписаниеВозвратовОтПокупателей;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетДт, НоваяПроводка.СубконтоДт, "Товары", стр.Номенклатура);
				НоваяПроводка.КоличествоДт = стр.РезервыСписание_Количество;
				
				НоваяПроводка.СчетКт = ЭтотОбъект.Списание_Счет;
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "ТорговыеТочки", ЭтотОбъект.Формирование_ТорговыеТочки);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "СтатьиДоходовРасходов", ЭтотОбъект.Формирование_СтатьяРасходов);
				БухгалтерскийУчет.УстановитьСубконто(НоваяПроводка.СчетКт, НоваяПроводка.СубконтоКт, "ЦФО", ЭтотОбъект.Формирование_ЦФО);
				
				НоваяПроводка.СуммаМСФО = стр.РезервыСписание_Сумма;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//+++АК sils 24.07.2018 ИП-00018932
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	ТЗ_Резервы = ЭтотОбъект.Резервы.Выгрузить();
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЗ", ТЗ_Резервы);
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ЭтотОбъект.ДатаНачала));
	Запрос.УстановитьПараметр("Организация", ЭтотОбъект.Организация);	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЗ.Номенклатура,
	               |	ТЗ.РезервыСписание_Количество,
	               |	ТЗ.РезервыСписание_Сумма
	               |ПОМЕСТИТЬ ТЗ
	               |ИЗ
	               |	&ТЗ КАК ТЗ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ФинансовыйОстатки.Субконто1 КАК Номенклатура,
	               |	ФинансовыйОстатки.КоличествоОстаток КАК Количество,
	               |	ФинансовыйОстатки.СуммаМСФООстаток КАК Сумма
	               |ПОМЕСТИТЬ ВР_96В
	               |ИЗ
	               |	РегистрБухгалтерии.Финансовый.Остатки(&ДатаНач, Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РезервыНаСписаниеВозвратовОтПокупателей), , Организация = &Организация) КАК ФинансовыйОстатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	               |	СУММА(ВложенныйЗапрос.РезервыСписание_Количество) КАК РезервыСписание_Количество,
	               |	СУММА(ВложенныйЗапрос.РезервыСписание_Сумма) КАК РезервыСписание_Сумма,
	               |	СУММА(ВложенныйЗапрос.Количество) КАК Количество96,
	               |	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма96
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ТЗ.Номенклатура КАК Номенклатура,
	               |		ТЗ.РезервыСписание_Количество КАК РезервыСписание_Количество,
	               |		ТЗ.РезервыСписание_Сумма КАК РезервыСписание_Сумма,
	               |		0 КАК Количество,
	               |		0 КАК Сумма
	               |	ИЗ
	               |		ТЗ КАК ТЗ
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВР_96В.Номенклатура,
	               |		0,
	               |		0,
	               |		-ВР_96В.Количество,
	               |		-ВР_96В.Сумма
	               |	ИЗ
	               |		ВР_96В КАК ВР_96В) КАК ВложенныйЗапрос
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВложенныйЗапрос.Номенклатура
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВложенныйЗапрос.Номенклатура.Наименование";
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Для каждого стр из ТЗ Цикл
		Если стр.РезервыСписание_Количество > стр.Количество96 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Превышение количества остатка резерва по номенклатуре " + СокрЛП(стр.Номенклатура) + 
				". Остаток резерва " + Формат(стр.Количество96, "ЧДЦ=3; ЧРД=,; ЧРГ=' '") + 
				". Списывается " + Формат(стр.РезервыСписание_Количество, "ЧДЦ=3; ЧРД=,; ЧРГ=' '") + ".",,,, Отказ);
		ИначеЕсли стр.РезервыСписание_Сумма > стр.Сумма96 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Превышение суммы остатка резерва по номенклатуре " + СокрЛП(стр.Номенклатура) + 
				". Сумма резерва " + Формат(стр.Сумма96, "ЧДЦ=2; ЧРД=,; ЧРГ=' '") + 
				". Списывается " + Формат(стр.РезервыСписание_Сумма, "ЧДЦ=2; ЧРД=,; ЧРГ=' '") + ".",,,, Отказ);
		ИначеЕсли стр.Количество96 = стр.РезервыСписание_Количество и
			стр.РезервыСписание_Сумма <> стр.Сумма96 Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("При списании остатка по номенклатуре " + СокрЛП(стр.Номенклатура) + 
				" количество списано полностью, но сумма осталась. Сумма резерва " + Формат(стр.Сумма96, "ЧДЦ=2; ЧРД=,; ЧРГ=' '") + 
				". Списывается " + Формат(стр.РезервыСписание_Сумма, "ЧДЦ=2; ЧРД=,; ЧРГ=' '") + ".",,,, Отказ);
		КонецЕсли;
	КонецЦикла;
	
	КолСтрок = ЭтотОбъект.Резервы.Количество();
	ТЗ_Резервы.Колонки.Добавить("КолСтрок");
	ТЗ_Резервы.ЗаполнитьЗначения(1, "КолСтрок");
	ТЗ_Резервы.Свернуть("Номенклатура", "КолСтрок");
	Для каждого стр из ТЗ_Резервы Цикл
		Если стр.КолСтрок > 1 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Строка с номенклатурой " + СокрЛП(стр.Номенклатура) + " не уникальна!",,,, Отказ);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


