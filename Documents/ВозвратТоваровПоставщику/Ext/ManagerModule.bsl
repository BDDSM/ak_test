
Функция ПолучитьЦеныПоставщиков(ТаблицаТоваров, Контрагент, Период) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЗ"			, ТаблицаТоваров);
	Запрос.УстановитьПараметр("Период"		, Период);
	Запрос.УстановитьПараметр("Поставщик"	, Контрагент);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТЗ.Номенклатура
	|ПОМЕСТИТЬ ВремТаб
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныПоставщиковСрезПоследних.Номенклатура,
	|	ЦеныПоставщиковСрезПоследних.Цена
	|ИЗ
	|	РегистрСведений.ЦеныПоставщиков.СрезПоследних(
	|			&Период,
	|			Поставщик = &Поставщик
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						ВремТаб.Номенклатура
	|					ИЗ
	|						ВремТаб)) КАК ЦеныПоставщиковСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВремТаб";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПечатьТорг12(СсылкаНаОбъект) Экспорт
	
	Перем ПодразделениеОтветственныхЛиц;
	
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВозвратТоваровПоставщику.НомерИсходящегоДокумента = """"
	|			ТОГДА ВозвратТоваровПоставщику.Номер
	|		ИНАЧЕ ВозвратТоваровПоставщику.НомерИсходящегоДокумента
	|	КОНЕЦ КАК Номер,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровПоставщику.ДатаИсходящегоДокумента = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ВозвратТоваровПоставщику.Дата
	|		ИНАЧЕ ВозвратТоваровПоставщику.ДатаИсходящегоДокумента
	|	КОНЕЦ КАК ДатаДокумента,
	|	ВозвратТоваровПоставщику.Организация,
	|	ВозвратТоваровПоставщику.Организация КАК ЮрФизЛицо,
	|	ВозвратТоваровПоставщику.Организация КАК Поставщик,
	|	ВозвратТоваровПоставщику.Организация КАК Контрагент,
	|	ВозвратТоваровПоставщику.Организация КАК Руководители,
	|	"""" КАК АдресДоставки,
	|	ВозвратТоваровПоставщику.Контрагент КАК Грузополучатель,
	|	ВозвратТоваровПоставщику.Организация КАК Грузоотправитель,
	|	НЕОПРЕДЕЛЕНО КАК БанковскийСчет,
	|	ВозвратТоваровПоставщику.Контрагент КАК Покупатель,
	|	ВозвратТоваровПоставщику.Контрагент КАК Плательщик,
	|	ВЫБОР
	|		КОГДА ВозвратТоваровПоставщику.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.НДСвТомЧисле)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|ГДЕ
	|	ВозвратТоваровПоставщику.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент"	, СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ДатаСреза"		, СсылкаНаОбъект.Дата);
	Запрос.УстановитьПараметр("Поставщик"		, СсылкаНаОбъект.Контрагент);
	
	Текст =
	"ВЫБРАТЬ
	|	ВозвратТоваровПоставщику.НомерСтроки КАК Номер,
	|	ВозвратТоваровПоставщику.Номенклатура,
	|	ВЫРАЗИТЬ(ВозвратТоваровПоставщику.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ЦеныПоставщиков.Характеристика.НаименованиеТовараУПоставщика, """") КАК СТРОКА(1000)) КАК НаименованиеТовараУПоставщика,
	|	ВозвратТоваровПоставщику.Номенклатура.Код КАК ТоварКод,
	|	ВозвратТоваровПоставщику.Количество,
	|	ВозвратТоваровПоставщику.Количество КАК КоличествоМест,
	|	ВозвратТоваровПоставщику.Номенклатура.БазоваяЕдиницаИзмерения КАК БазоваяЕдиницаНаименование,
	|	ВозвратТоваровПоставщику.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК БазоваяЕдиницаКодПоОКЕИ,
	|	ВозвратТоваровПоставщику.ЕдиницаИзмерения КАК ВидУпаковки,
	|	ВозвратТоваровПоставщику.Коэффициент,
	|	ВозвратТоваровПоставщику.Коэффициент КАК КоличествоВОдномМесте,
	|	ВозвратТоваровПоставщику.Цена КАК Цена,
	|	ВозвратТоваровПоставщику.Сумма КАК Сумма,
	|	ВозвратТоваровПоставщику.СуммаНДС КАК СуммаНДС,
	|	ВозвратТоваровПоставщику.Сумма КАК СуммаВВалютеДокумента,
	|	ВозвратТоваровПоставщику.СуммаНДС КАК СуммаНДСВВалютеДокумента,
	|	ВозвратТоваровПоставщику.СтавкаНДС,
	|	1 КАК ID
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщику
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныПоставщиков.СрезПоследних(&ДатаСреза, ) КАК ЦеныПоставщиков
	|		ПО (ЦеныПоставщиков.Номенклатура = ВозвратТоваровПоставщику.Номенклатура)
	|			И (ЦеныПоставщиков.Поставщик = &Поставщик)
	|ГДЕ
	|	ВозвратТоваровПоставщику.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	ID,
	|	Номер";
	
	Запрос.Текст = Текст;
	
	ЗапросТовары = Запрос.Выполнить().Выгрузить();

	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ВозвратТоваровПоставщику_ТОРГ12";
	
	// Зададим параметры макета
	ТабДокумент.ПолеСверху         = 10;
	ТабДокумент.ПолеСлева          = 10;
	ТабДокумент.ПолеСнизу          = 10;
	ТабДокумент.ПолеСправа         = 10;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Макет = ПолучитьОбщийМакет("ПФ_MXL_ТОРГ12");
	
	ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
	ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("Строка");
	ОбластьМакетаИтогоПоСтранице  = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьМакетаВсего            = Макет.ПолучитьОбласть("Всего");
	ОбластьМакетаПодвал           = Макет.ПолучитьОбласть("Подвал");

	// Выводим общие реквизиты шапки
	СведенияОПоставщике       = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо			, Шапка.ДатаДокумента,, Шапка.БанковскийСчет);
	СведенияОГрузоотправителе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Грузоотправитель	, Шапка.ДатаДокумента);
	СведенияОПокупателе       = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Покупатель			, Шапка.ДатаДокумента);
	СведенияОГрузополучателе  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Грузополучатель	, Шапка.ДатаДокумента);
	
	ОбластьМакетаШапка.Параметры.Заполнить(Шапка);
	ОбластьМакетаШапка.Параметры.НомерДокумента = ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка);
	ОбластьМакетаШапка.Параметры.ДатаДокумента  = Шапка.ДатаДокумента;
	
	Если Шапка.ЮрФизЛицо = Шапка.Грузоотправитель Тогда
		ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике);
	Иначе
		ОбластьМакетаШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(
			СведенияОГрузоотправителе, "НаименованиеДляПечатныхФорм,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	КонецЕсли;
	
	Если СокрЛП(Шапка.АдресДоставки) <> "" Тогда
		ПредставлениеГрузополучателяДоАдреса    = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(
			СведенияОГрузополучателе, "НаименованиеДляПечатныхФорм,ИНН,");
		ПредставлениеГрузополучателяПослеАдреса = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(
			СведенияОГрузополучателе, "Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
		ОбластьМакетаШапка.Параметры.ПредставлениеГрузополучателя = ?(СокрЛП(ПредставлениеГрузополучателяДоАдреса) = "",
			"", ПредставлениеГрузополучателяДоАдреса + ", ") + Шапка.АдресДоставки
			+ ?(СокрЛП(ПредставлениеГрузополучателяПослеАдреса) = "", "", ", " + ПредставлениеГрузополучателяПослеАдреса);
	Иначе
		ОбластьМакетаШапка.Параметры.ПредставлениеГрузополучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(
			СведенияОГрузополучателе, "НаименованиеДляПечатныхФорм,ИНН,ФактическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет");
	КонецЕсли;
	
	ОбластьМакетаШапка.Параметры.ПредставлениеПоставщика  = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике);
	ОбластьМакетаШапка.Параметры.ПредставлениеПлательщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе);

	// Выводим всевозможные коды
	ОбластьМакетаШапка.Параметры.ОрганизацияПоОКПО          = СведенияОГрузоотправителе.КодПоОКПО;
	ОбластьМакетаШапка.Параметры.ВидДеятельностиПоОКДП      = "";
	ОбластьМакетаШапка.Параметры.ГрузополучательПоОКПО      = СведенияОГрузополучателе.КодПоОКПО;
	ОбластьМакетаШапка.Параметры.ПоставщикПоОКПО            = СведенияОПоставщике.КодПоОКПО;
	ОбластьМакетаШапка.Параметры.ПлательщикПоОКПО           = СведенияОПокупателе.КодПоОКПО;
	ОбластьМакетаШапка.Параметры.ОснованиеНомер             = "";
	ОбластьМакетаШапка.Параметры.ОснованиеДата              = "";
	ОбластьМакетаШапка.Параметры.ТранспортнаяНакладнаяНомер = "";
	ОбластьМакетаШапка.Параметры.ТранспортнаяНакладнаяДата  = "";

	ТабДокумент.Вывести(ОбластьМакетаШапка);

	// Инициализация счетчика страниц
	НомерСтраницы = 1;

	// Инициализация итогов по странице
	ИтогоМестНаСтранице       = 0;
	ИтогоКоличествоНаСтранице = 0;
	ИтогоСуммаНаСтранице      = 0;
	ИтогоНДСНаСтранице        = 0;
	ИтогоСуммаСНДСНаСтранице  = 0;

	// Инициализация итогов по документу
	ИтогоМест       = 0;
	ИтогоКоличество = 0;
	ИтогоСуммаСНДС  = 0;
	ИтогоСумма      = 0;
	ИтогоНДС        = 0;
	
	// Инициализация счетчика строк
	НомерСтроки     = 0;
	КоличествоСтрок = ЗапросТовары.Количество();

	// Выводим заголовок многострочной части
	ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
	
	// Выводим многострочную часть документа
	Для Каждого ВыборкаСтрок Из ЗапросТовары Цикл

		НомерСтроки = НомерСтроки + 1;

		ОбластьМакетаСтрока.Параметры.Заполнить(ВыборкаСтрок);
		
		ОбластьМакетаСтрока.Параметры.Номер = НомерСтроки;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрок.КоличествоМест) Тогда
			ОбластьМакетаСтрока.Параметры.ВидУпаковки           = "";
			ОбластьМакетаСтрока.Параметры.КоличествоВОдномМесте = "";
		КонецЕсли;
		
		ТекНаименованиеТовара = СокрЛП(ВыборкаСтрок.ТоварНаименование);
		
		Если ЗначениеЗаполнено(ВыборкаСтрок.НаименованиеТовараУПоставщика)
				И НЕ ВРег(ТекНаименованиеТовара) = ВРег(СокрЛП(ВыборкаСтрок.НаименованиеТовараУПоставщика)) Тогда
			
			ТекНаименованиеТовара = ТекНаименованиеТовара + " (" + СокрЛП(ВыборкаСтрок.НаименованиеТовараУПоставщика) + ")";
			
		КонецЕсли;
		
		ОбластьМакетаСтрока.Параметры.ТоварНаименование = ТекНаименованиеТовара;
		//ОбластьМакетаСтрока.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрок.ТоварНаименование);

		СуммаСНДС = (ВыборкаСтрок.Сумма + ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрок.СуммаНДС));
		
		КоличествоМест = ВыборкаСтрок.КоличествоМест;
		Количество     = ВыборкаСтрок.Количество;
		СуммаНДС       = ВыборкаСтрок.СуммаНДС;
		СуммаБезНДС    = СуммаСНДС - СуммаНДС;

		ОбластьМакетаСтрока.Параметры.СуммаСНДС   = СуммаСНДС;
		ОбластьМакетаСтрока.Параметры.СуммаНДС    = СуммаНДС;
		ОбластьМакетаСтрока.Параметры.СтавкаНДС   = ВыборкаСтрок.СтавкаНДС;
		ОбластьМакетаСтрока.Параметры.СуммаБезНДС = СуммаБезНДС;
	
		Если НЕ Шапка.СуммаВключаетНДС ИЛИ СуммаНДС = 0 Тогда
			ОбластьМакетаСтрока.Параметры.Цена    = ВыборкаСтрок.Цена;
		Иначе
			ОбластьМакетаСтрока.Параметры.Цена    = СуммаБезНДС / ?(Количество = 0, 1, Количество);
		КонецЕсли;
		
		// Проверим вывод
		СтрокаСПодвалом = Новый Массив;
		Если НомерСтроки = 1 Тогда
			СтрокаСПодвалом.Добавить(ОбластьМакетаЗаголовокТаблицы); // если первая строка, то должен
		КонецЕсли;                                                   // помещаться заголовок
		СтрокаСПодвалом.Добавить(ОбластьМакетаСтрока);
		СтрокаСПодвалом.Добавить(ОбластьМакетаИтогоПоСтранице);
		Если НомерСтроки = КоличествоСтрок Тогда           // если последняя строка, должен
			СтрокаСПодвалом.Добавить(ОбластьМакетаВсего);  // помещаться и подвал документа
			СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
		КонецЕсли;

		#Если Клиент Тогда
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда	
		#Иначе	
		Если НЕ ФормированиеПечатныхФормСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
		#КонецЕсли

			Если КоличествоСтрок > 1 Тогда
				
				// Выводим итоги по странице
				ОбластьМакетаИтогоПоСтранице.Параметры.ИтогМестПоСтранице       = ИтогоМестНаСтранице;
				ОбластьМакетаИтогоПоСтранице.Параметры.ИтогКоличествоПоСтранице = ИтогоКоличествоНаСтранице;
				ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыПоСтранице      = ИтогоСуммаНаСтранице;
				ОбластьМакетаИтогоПоСтранице.Параметры.ИтогНДСПоСтранице        = ИтогоНДСНаСтранице;
				ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице  = ИтогоСуммаСНДСНаСтранице;
				ТабДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
				
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();			
				
				// Очистим итоги по странице
				ИтогоМестНаСтранице       = 0;
				ИтогоКоличествоНаСтранице = 0;
				ИтогоСуммаНаСтранице      = 0;
				ИтогоНДСНаСтранице        = 0;
				ИтогоСуммаСНДСНаСтранице  = 0;
				
				// Выведем заголовок таблицы
				НомерСтраницы = НомерСтраницы + 1;
				ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
				ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
				
			КонецЕсли;

		КонецЕсли;

		ТабДокумент.Вывести(ОбластьМакетаСтрока);

		// Увеличим итоги по странице
		ИтогоМестНаСтранице       = ИтогоМестНаСтранице       + КоличествоМест;
		ИтогоКоличествоНаСтранице = ИтогоКоличествоНаСтранице + Количество;
		ИтогоСуммаНаСтранице      = ИтогоСуммаНаСтранице      + СуммаБезНДС;
		ИтогоНДСНаСтранице        = ИтогоНДСНаСтранице        + СуммаНДС;
		ИтогоСуммаСНДСНаСтранице  = ИтогоСуммаСНДСНаСтранице  + СуммаСНДС;

		// Увеличим итоги по документу
		ИтогоМест       = ИтогоМест       + КоличествоМест;
		ИтогоКоличество = ИтогоКоличество + Количество;
		ИтогоСумма      = ИтогоСумма      + СуммаБезНДС;
		ИтогоНДС        = ИтогоНДС        + СуммаНДС;
		ИтогоСуммаСНДС  = ИтогоСуммаСНДС  + СуммаСНДС;

	КонецЦикла;

	// Выводим итоги по странице
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогМестПоСтранице       = ИтогоМестНаСтранице;
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогКоличествоПоСтранице = ИтогоКоличествоНаСтранице;
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыПоСтранице      = ИтогоСуммаНаСтранице;
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогНДСПоСтранице        = ИтогоНДСНаСтранице;
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогСуммыСНДСПоСтранице  = ИтогоСуммаСНДСНаСтранице;

	ТабДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
	
	// Выводим итоги по документу в целом
	ОбластьМакетаВсего.Параметры.ИтогМест       = ИтогоМест;
	ОбластьМакетаВсего.Параметры.ИтогКоличество = ИтогоКоличество;
	ОбластьМакетаВсего.Параметры.ИтогСуммы      = ИтогоСумма;
	ОбластьМакетаВсего.Параметры.ИтогНДС        = ИтогоНДС;
	ОбластьМакетаВсего.Параметры.ИтогСуммыСНДС  = ИтогоСуммаСНДС;

	ТабДокумент.Вывести(ОбластьМакетаВсего);

	// Выводим подвал документа
	
	Руководители = ОбщегоНазначения.ОтветственныеЛица(Шапка.Руководители, Шапка.ДатаДокумента, ПодразделениеОтветственныхЛиц);
	
	ОбластьМакетаПодвал.Параметры.ФИОРуководителя       = Руководители.РуководительПредставление;
	ОбластьМакетаПодвал.Параметры.ФИОГлавБухгалтера     = Руководители.ГлавныйБухгалтерПредставление;
	ОбластьМакетаПодвал.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжность;

	ОбластьМакетаПодвал.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	ОбластьМакетаПодвал.Параметры.ВсегоМестПрописью                          = ?(ИтогоМест = 0, "", ЧислоПрописью(ИтогоМест, ,",,,С,,,,,0")); 
	ОбластьМакетаПодвал.Параметры.СуммаПрописью                              = ОбщегоНазначения.СформироватьСуммуПрописью(ИтогоСуммаСНДС, мВалютаРегламентированногоУчета);
	
	ПолнаяДатаДокумента = Формат(Шапка.ДатаДокумента, "ДФ=""дд ММММ гггг """"года""""""");
	ДлинаСтроки         = СтрДлина(ПолнаяДатаДокумента);
	ПервыйРазделитель   = Найти(ПолнаяДатаДокумента," ");
	ВторойРазделитель   = Найти(Прав(ПолнаяДатаДокумента,ДлинаСтроки - ПервыйРазделитель), " ") + ПервыйРазделитель;
	
	ОбластьМакетаПодвал.Параметры.ДатаДокументаДень  = """" + Лев(ПолнаяДатаДокумента, ПервыйРазделитель - 1) + """";
	ОбластьМакетаПодвал.Параметры.ДатаДокументаМесяц = Сред(ПолнаяДатаДокумента, ПервыйРазделитель + 1, ВторойРазделитель - ПервыйРазделитель - 1);
	ОбластьМакетаПодвал.Параметры.ДатаДокументаГод   = Прав(ПолнаяДатаДокумента, ДлинаСтроки - ВторойРазделитель);	
	
	ТабДокумент.Вывести(ОбластьМакетаПодвал);

	Возврат ТабДокумент;
	
КонецФункции

//+++АК sils 16.02.2018 ИП-00017839
Функция ПечатьАктОбнаружения(Ссылка) Экспорт
	Док_РасхОрдерСклад = Ссылка.РасходныеОрдера[0].РасходныйОрдер;
	Док_ЗаданиеТехнолога = Док_РасхОрдерСклад.Основание;
	
	// Получаем данные с документа
	ДатаЗаданияТехнолога = Док_ЗаданиеТехнолога.Дата;
	ПричинаВозврата = СокрЛП(Док_ЗаданиеТехнолога.Комментарий);
	ТекПоставщик = СокрЛП(Ссылка.Контрагент.НаименованиеПолное);
	ТекПоставщик = ?(ТекПоставщик = "", СокрЛП(Ссылка.Контрагент), ТекПоставщик);
	
	// Получаем список ролей пользователей
	#Область ФИОТехнологов
	СЗ = Новый СписокЗначений;
	СЗ.ЗагрузитьЗначения(Док_РасхОрдерСклад.Товары.ВыгрузитьКолонку("Характеристика"));
	СЗ.Добавить(Ссылка.Контрагент);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СоответствиеОбъектРольСрезПоследних.Объект,
	               |	СоответствиеОбъектРольСрезПоследних.РольПользователя
	               |ИЗ
	               |	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
	               |			,
	               |			ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)
	               |				И Объект В (&СЗ)) КАК СоответствиеОбъектРольСрезПоследних"; 
	Запрос.УстановитьПараметр("СЗ", СЗ);
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	// Теперь получаем список соответствующих сотрудников
	ТЗ.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТекКол = ТЗ.Количество();
	Пока ТекКол <> 0 Цикл
		стр = ТЗ[ТекКол - 1];
		ТекРоль = стр.РольПользователя;
		Если ТекРоль.СоставРоли.Количество() > 0 Тогда
			стр.Сотрудник = ТекРоль.СоставРоли[0].Сотрудник;
			Если не ЗначениеЗаполнено(стр.Сотрудник) Тогда
				ТЗ.Удалить(стр);
			КонецЕсли;
		Иначе
			ТЗ.Удалить(стр);
		КонецЕсли;
		ТекКол = ТекКол - 1;
	КонецЦикла;

	// Теперь надо получить ФИО сотрудников
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЗ1", ТЗ);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЗ1.Объект,
	               |	ТЗ1.РольПользователя,
	               |	ТЗ1.Сотрудник
	               |ПОМЕСТИТЬ ТЗ
	               |ИЗ
	               |	&ТЗ1 КАК ТЗ1
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗ.Объект,
	               |	ТЗ.Сотрудник,
	               |	ФИОФизЛицСрезПоследних.Фамилия,
	               |	ФИОФизЛицСрезПоследних.Имя,
	               |	ФИОФизЛицСрезПоследних.Отчество
	               |ИЗ
	               |	ТЗ КАК ТЗ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОФизЛицСрезПоследних
	               |		ПО ТЗ.Сотрудник = ФИОФизЛицСрезПоследних.ФизЛицо";
	ТЗ1 = Запрос.Выполнить().Выгрузить();
	#КонецОбласти
	
	ФИОТехн_Получатель = "";
	СтрТехн = ТЗ1.Найти(Ссылка.Контрагент);
	Если СтрТехн <> Неопределено Тогда
		Если СокрЛП(СтрТехн.Фамилия) <> "" Тогда
			ФИОТехн_Получатель = СокрЛП(СтрТехн.Фамилия) + " " + Лев(СокрЛП(СтрТехн.Имя), 1) + " " + Лев(СокрЛП(СтрТехн.Отчество), 1);
		КонецЕсли;
	КонецЕсли;
	
	// Начинаем формировать печатную форму
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасходныйОрдерСклад_АктОбнаружения";
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабДок.РазмерКолонтитулаСнизу	= 0;
	ТабДок.РазмерКолонтитулаСверху 	= 0;
	ТабДок.ПолеСверху	= 5;
	ТабДок.ПолеСнизу 	= 5;
	ТабДок.ПолеСлева 	= 5;
	ТабДок.ПолеСправа 	= 5;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.Очистить();
	
	// Для каждой номенклатуры свою печатную форму надо сформировать
	Для каждого стр из Док_РасхОрдерСклад.Товары Цикл
		Если Ссылка.Товары.Индекс(стр) <> 0 Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		Макет = Документы.ВозвратТоваровПоставщику.ПолучитьМакет("АктОбнаружения");
		ОбластьЗаголовок = Макет.ПолучитьОбласть("Шапка");
		
		ОбластьЗаголовок.Параметры.Номер = ОбщегоНазначения.ПолучитьНомерНаПечать(Ссылка);
		ОбластьЗаголовок.Параметры.Дата = Формат(?(Ссылка.ДатаИсходящегоДокумента = Дата("00010101000000"), 
													Ссылка.Дата, Ссылка.ДатаИсходящегоДокумента), "ДЛФ=DD");
		ОбластьЗаголовок.Параметры.ДатаЗаданияТехнолога = Формат(ДатаЗаданияТехнолога, "ДЛФ=DD");
		ОбластьЗаголовок.Параметры.Наименование = СокрЛП(стр.Номенклатура);
		ОбластьЗаголовок.Параметры.Количество = Формат(стр.Количество, "ЧДЦ=3; ЧРД=,; ЧРГ=' '");
		
		ОбластьЗаголовок.Параметры.ДатаПроизводства = Формат(стр.ДатаПроизводства, "ДЛФ=D");
		ОбластьЗаголовок.Параметры.Поставщик = ТекПоставщик;
		
		ОбластьЗаголовок.Параметры.ПричинаВозврата = ПричинаВозврата; 
		ОбластьЗаголовок.Параметры.КороткаяДатаЗадания = Формат(ДатаЗаданияТехнолога, "ДЛФ=D");
		
		ФИОТехнолога = "";
		СтрТехн = ТЗ1.Найти(стр.Номенклатура);
		Если СтрТехн <> Неопределено Тогда
			Если СокрЛП(СтрТехн.Фамилия) <> "" Тогда
				ФИОТехнолога = СокрЛП(СтрТехн.Фамилия) + " " + Лев(СокрЛП(СтрТехн.Имя), 1) + " " + Лев(СокрЛП(СтрТехн.Отчество), 1);
			КонецЕсли;
		КонецЕсли;
		ФИОТехнолога = ?(СокрЛП(ФИОТехнолога) = "", ФИОТехн_Получатель, ФИОТехнолога);
		ОбластьЗаголовок.Параметры.ФИОТехнолога = ФИОТехнолога;
		
		ОбластьЗаголовок.Область("ПричинаВозврата").Защита = Ложь;
		ТабДок.Вывести(ОбластьЗаголовок);
	КонецЦикла;

	Возврат ТабДок;
	
КонецФункции

//+++АК sils 16.02.2018 ИП-00017839
Функция ПечатьАктУтилизации(Ссылка) Экспорт
	Док_РасхОрдерСклад = Ссылка.РасходныеОрдера[0].РасходныйОрдер;
	Док_ЗаданиеТехнолога = Док_РасхОрдерСклад.Основание;
	
	// Получаем данные с документа
	ДатаПроведения = Док_ЗаданиеТехнолога.ДатаПроведения;
	ДатаПроведения = ?(ДатаПроведения = Дата("00010101000000"), Док_ЗаданиеТехнолога.Дата, ДатаПроведения);
	ПричинаУничтожения = СокрЛП(Док_ЗаданиеТехнолога.Комментарий);
	ТекПоставщик = СокрЛП(Ссылка.Контрагент.НаименованиеПолное);
	ТекПоставщик = ?(ТекПоставщик = "", СокрЛП(Ссылка.Контрагент), ТекПоставщик);
	
	#Область ФИОТехнологов
	СЗ = Новый СписокЗначений;
	СЗ.ЗагрузитьЗначения(Док_РасхОрдерСклад.Товары.ВыгрузитьКолонку("Характеристика"));
	СЗ.Добавить(Ссылка.Контрагент);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СоответствиеОбъектРольСрезПоследних.Объект,
	               |	СоответствиеОбъектРольСрезПоследних.РольПользователя
	               |ИЗ
	               |	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
	               |			,
	               |			ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)
	               |				И Объект В (&СЗ)) КАК СоответствиеОбъектРольСрезПоследних"; 
	Запрос.УстановитьПараметр("СЗ", СЗ);
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	// Теперь получаем список соответствующих сотрудников
	ТЗ.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТекКол = ТЗ.Количество();
	Пока ТекКол <> 0 Цикл
		стр = ТЗ[ТекКол - 1];
		ТекРоль = стр.РольПользователя;
		Если ТекРоль.СоставРоли.Количество() > 0 Тогда
			стр.Сотрудник = ТекРоль.СоставРоли[0].Сотрудник;
			Если не ЗначениеЗаполнено(стр.Сотрудник) Тогда
				ТЗ.Удалить(стр);
			КонецЕсли;
		Иначе
			ТЗ.Удалить(стр);
		КонецЕсли;
		ТекКол = ТекКол - 1;
	КонецЦикла;

	// Теперь надо получить ФИО сотрудников
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЗ1", ТЗ);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЗ1.Объект,
	               |	ТЗ1.РольПользователя,
	               |	ТЗ1.Сотрудник
	               |ПОМЕСТИТЬ ТЗ
	               |ИЗ
	               |	&ТЗ1 КАК ТЗ1
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗ.Объект,
	               |	ТЗ.Сотрудник,
	               |	ФИОФизЛицСрезПоследних.Фамилия,
	               |	ФИОФизЛицСрезПоследних.Имя,
	               |	ФИОФизЛицСрезПоследних.Отчество
	               |ИЗ
	               |	ТЗ КАК ТЗ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОФизЛицСрезПоследних
	               |		ПО ТЗ.Сотрудник = ФИОФизЛицСрезПоследних.ФизЛицо";
	ТЗ1 = Запрос.Выполнить().Выгрузить();
	#КонецОбласти
	
	ФИОТехн_Получатель = "";
	СтрТехн = ТЗ1.Найти(Ссылка.Контрагент);
	Если СтрТехн <> Неопределено Тогда
		Если СокрЛП(СтрТехн.Фамилия) <> "" Тогда
			ФИОТехн_Получатель = СокрЛП(СтрТехн.Фамилия) + " " + Лев(СокрЛП(СтрТехн.Имя), 1) + " " + Лев(СокрЛП(СтрТехн.Отчество), 1);
		КонецЕсли;
	КонецЕсли;
	
	// Начинаем формировать печатную форму
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасходныйОрдерСклад_АктУтилизации";
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.РазмерКолонтитулаСнизу	= 0;
	ТабДок.РазмерКолонтитулаСверху 	= 0;
	ТабДок.ПолеСверху	= 5;
	ТабДок.ПолеСнизу 	= 5;
	ТабДок.ПолеСлева 	= 5;
	ТабДок.ПолеСправа 	= 5;
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.Очистить();
	
	// Заполняем заголовок печатной формы
	Макет = Документы.ВозвратТоваровПоставщику.ПолучитьМакет("АктУтилизации");
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Шапка");
	
	ОбластьЗаголовок.Параметры.Поставщик = ТекПоставщик;
	ОбластьЗаголовок.Параметры.Номер = ОбщегоНазначения.ПолучитьНомерНаПечать(Ссылка);
	ОбластьЗаголовок.Параметры.Дата = Формат(?(Ссылка.ДатаИсходящегоДокумента = Дата("00010101000000"), 
												Ссылка.Дата, Ссылка.ДатаИсходящегоДокумента), "ДЛФ=DD");
	ОбластьЗаголовок.Параметры.ПричинаУничтожения = ПричинаУничтожения;
	
	ТабДок.Вывести(ОбластьЗаголовок);
	
	// Выводит строки
	Для каждого стр из Ссылка.Товары Цикл
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		
		ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, стр);
		ОбластьСтрока.Параметры.Цена = стр.Сумма - стр.СуммаНДС;
		
		ТабДок.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
	
	ОбластьИтого.Параметры.СуммаВсегоПрописью = ЧислоПрописью(Ссылка.Товары.Итог("Сумма"),, "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
	ОбластьИтого.Параметры.СуммаВсегоНДС = Ссылка.Товары.Итог("СуммаНДС");
	ОбластьИтого.Параметры.ДатаПроведения = Формат(ДатаПроведения, "ДЛФ=D");
	ОбластьИтого.Параметры.ФИОТехн_Получатель = СокрЛП(ФИОТехн_Получатель);
	
	ТабДок.Вывести(ОбластьИтого);
	
	ТабДок.Область("ПричинаУничтожения").Защита = Ложь;

	Возврат ТабДок;
	
КонецФункции
