// Переменные для кэширования коллекций колонок табличных полей.
Перем мКолонкиТовары;

//+++АК susk
Перем мВариантРасчетаНДС;
//---АК susk

Перем ОперацияАпдекс; //+++АК sils 07.06.2018 ИП-00018876

Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ПосчитатьСуммуТабличнойЧасти();
	
КонецПроцедуры

Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ПосчитатьСуммуСтрокиТЧ(ЭлементыФормы.Товары.ТекущаяСтрока);
	
КонецПроцедуры

Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ПосчитатьСуммуСтрокиТЧ(ЭлементыФормы.Товары.ТекущаяСтрока);
	
КонецПроцедуры

Процедура УслугиЦенаПриИзменении(Элемент)
	
	ПосчитатьСуммуСтрокиТЧ(ЭлементыФормы.Услуги.ТекущаяСтрока);
	
КонецПроцедуры

Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	Номенклатура = Элемент.Значение;
	СтрокаТабличнойЧасти = ЭлементыФормы.Товары.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		
		//+++АК Susk (Суслин К.В.) 2018.07.30 ИП-00019275
		СчетаУчета = Справочники.Номенклатура.ПолучитьСчетаУчета(Номенклатура, Дата);		
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СчетаУчета);

		//следующий закоментированный код убрать в сентябре 2018, как откатаем универсальное получение счетов учета.
		
		#Область ЗакоментКод_ТоварыНоменклатураПриИзменении
		//Если Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Товар
		//	ИЛИ Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Материал Тогда
		//	
		//	Если Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Упаковка Тогда
		//		СчетУчета = ПланыСчетов.Финансовый.МатералыДляВыпуска;
		//	Иначе	
		//		СчетУчета = ПланыСчетов.Финансовый.Товары;
		//	КонецЕсли;	
		//	
		//ИначеЕсли Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Оборудование Тогда
		//	
		//	СчетУчета = ПланыСчетов.Финансовый.КапитальныеВложения;
		//	
		//КонецЕсли;
		//
		//ТабСчетаУчета = ОбщегоНазначенияКлиентСервер.ПолучитьТаблицуСчетовУчетаНоменклатур(Номенклатура, Дата);
		//Если ТабСчетаУчета.Количество() > 0
		//	И ЗначениеЗаполнено(ТабСчетаУчета[0].СчетУчета) Тогда
		//	СчетУчета = ТабСчетаУчета[0].СчетУчета;
		//КонецЕсли;	
		//
		//СтрокаТабличнойЧасти.СчетУчета 				= СчетУчета;
		#КонецОбласти
		
		//---АК Susk (Суслин К.В.) 
		
		СтрокаТабличнойЧасти.СтатьяТовародвижения 	= Справочники.СтатьиТовародвижения.ПоступлениеОтПоставщика;
		
		СтрокаТабличнойЧасти.ЕдиницаИзмерения 		= Номенклатура.ЕдиницаХраненияОстатков;
		СтрокаТабличнойЧасти.Коэффициент 			= Номенклатура.ЕдиницаХраненияОстатков.Коэффициент;
		
		Если ЭтотОбъект.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.БезНДС Тогда
			СтрокаТабличнойЧасти.СтавкаНДС			= Перечисления.СтавкиНДС.БезНДС;
		Иначе
			СтрокаТабличнойЧасти.СтавкаНДС			= Номенклатура.СтавкаНДС;
		КонецЕсли;
		
		ТаблицаНоменклатуры = ЭтотОбъект.Товары.ВыгрузитьКолонки("Номенклатура, ЕдиницаИзмерения");
		НоваяСтр = ТаблицаНоменклатуры.Добавить();
		НоваяСтр.Номенклатура 		= Номенклатура;
		НоваяСтр.ЕдиницаИзмерения 	= СтрокаТабличнойЧасти.ЕдиницаИзмерения;
		
		ТаблицаЦенПоставщиков = Документы.ВозвратТоваровПоставщику.ПолучитьЦеныПоставщиков(ТаблицаНоменклатуры, 
																						  ЭтотОбъект.Контрагент, 
																						   ?(ЗначениеЗаполнено(ЭтотОбъект.Дата), ЭтотОбъект.Дата, ТекущаяДата()));
																						   
		МассивСтрок = ТаблицаЦенПоставщиков.НайтиСтроки(Новый Структура("Номенклатура", СтрокаТабличнойЧасти.Номенклатура));
		Если МассивСтрок.Количество()>0 Тогда
			
			СтрокаТабличнойЧасти.Цена = МассивСтрок[0].Цена;
			
		КонецЕсли;
			
		ПосчитатьСуммуСтрокиТЧ(СтрокаТабличнойЧасти);
		ПосчитатьСуммуТабличнойЧасти();
																						   
	КонецЕсли;
	
КонецПроцедуры

Процедура КомментарийНачалоВыбора(Элемент, СтандартнаяОбработка)
		
	ФормаРедактированияТекста = ПолучитьОбщуюФорму("ФормаРедактированияТекста");
	ФормаРедактированияТекста.УстановитьРедактируемыйТекст(ЭтотОбъект.Комментарий);
	ОтредактировалиТекст = ФормаРедактированияТекста.ОткрытьМодально();
	
	Если ОтредактировалиТекст = Истина Тогда
		ЭтотОбъект.Комментарий = ФормаРедактированияТекста.ПолучитьРедактируемыйТекст();
	КонецЕсли;

КонецПроцедуры


Процедура ПриОткрытии()
	
	Если НЕ ЭтотОбъект.ЭтоНовый() Тогда 
		Если ЗначениеЗаполнено(ЭтотОбъект.ИД) Тогда
			ЭтаФорма.ТолькоПросмотр = Истина;
		Иначе
			НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ЭтотОбъект, ЭтаФорма);
		КонецЕсли;
		
		//++ АК luza 24.09.2018 ИП-00019881
		ЗаполнитьПрикрепленныеФайлы();
		//-- АК luza 24.09.2018 ИП-00019881
	Иначе
		Если ПараметрОбъектКопирования = Неопределено Тогда
			ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Покупка;
			ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, "Покупка");
			Если ЭтотОбъект.ВариантРасчетаНДС.Пустая() Тогда
				ЭтотОбъект.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле;
			КонецЕсли;
		Иначе
			ЭтотОбъект.ИД = 0;
		КонецЕсли
	КонецЕсли;
	
	ЕстьПравоРедактировать = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.РазрешитьИзменениеЦеныИСуммыВДокументе, Ложь);
	ЭлементыФормы.Товары.Колонки.Цена.ТолькоПросмотр		= Не ЕстьПравоРедактировать;
	ЭлементыФормы.Товары.Колонки.Сумма.ТолькоПросмотр		= Не ЕстьПравоРедактировать;
	ЭлементыФормы.Товары.Колонки.СтавкаНДС.ТолькоПросмотр	= Не ЕстьПравоРедактировать;
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Номер);
	
	// Создать кнопки печати
	ФормированиеПечатныхФорм.СоздатьКнопкиПечати(ЭтотОбъект, ЭтаФорма);	
	
	//+++АК sils 07.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(ЭтоНовый(), "Новый документ", "" + ЭтотОбъект));
	//---АК
КонецПроцедуры


Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

Процедура ВидОперацииПриИзменении(Элемент)
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Табличная часть документа будет очищена. Продолжить?", Режим, 0);
	Если Ответ = КодВозвратаДиалога.Да Тогда
	    ЭтотОбъект.Товары.Очистить();
	КонецЕсли;
	
КонецПроцедуры

Процедура ТоварыНоменклатураНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = Справочники.Номенклатура.ПолучитьФормуВыбора(,Элемент,);
	ФормаВыбора.СправочникСписок.Отбор.ВидНоменклатуры.Использование = Истина;
	ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ВидНоменклатуры.Доступность = Ложь;
	
	Если ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Покупка Тогда
		
		ФормаВыбора.СправочникСписок.Отбор.ВидНоменклатуры.ВидСравнения = ВидСравнения.ВСписке;
		СписокВидовНоменклатуры = Новый СписокЗначений;
		СписокВидовНоменклатуры.Добавить(Перечисления.ВидыНоменклатуры.Товар);
		СписокВидовНоменклатуры.Добавить(Перечисления.ВидыНоменклатуры.Материал);
		ФормаВыбора.СправочникСписок.Отбор.ВидНоменклатуры.Значение 	= СписокВидовНоменклатуры;
		ФормаВыбора.СправочникСписок.Отбор.ВидНоменклатуры.Значение 	= СписокВидовНоменклатуры;
		
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Оборудование Тогда
		
		ФормаВыбора.СправочникСписок.Отбор.ВидНоменклатуры.ВидСравнения = ВидСравнения.Равно;
		ФормаВыбора.СправочникСписок.Отбор.ВидНоменклатуры.Значение 	= Перечисления.ВидыНоменклатуры.Оборудование;
		
	КонецЕсли;
	
	ФормаВыбора.НачальноеЗначениеВыбора = Элемент.Значение;
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура ТоварыЕдиницаИзмеренияПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = ЭлементыФормы.Товары.ТекущиеДанные;
	
	СтароеЗначениеКоэффициента = СтрокаТабличнойЧасти.Коэффициент;
	НовоеЗначениеКоэффициента  = СтрокаТабличнойЧасти.ЕдиницаИзмерения.Коэффициент;
					
	Если НовоеЗначениеКоэффициента <> СтароеЗначениеКоэффициента Тогда
		
		СтрокаТабличнойЧасти.Коэффициент = НовоеЗначениеКоэффициента;
		
	КонецЕсли;
	
   //ПосчитатьСуммуСтрокиТЧ(СтрокаТабличнойЧасти);
   //ПосчитатьСуммуТабличнойЧасти();
	
КонецПроцедуры

Процедура ТоварыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	РаботаСДиалогами.ПоказатьКодАртикул(мКолонкиТовары, ОформлениеСтроки.Ячейки, ДанныеСтроки.Номенклатура);
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	Если НЕ ПустаяСтрока(ЭтотОбъект.Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;

КонецПроцедуры

Процедура ТоварыСчетУчетаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);
	
КонецПроцедуры

Процедура УслугиСчетЗатратПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = ЭлементыФормы.Услуги.ТекущиеДанные;
	Колонки = ЭлементыФормы.Услуги.Колонки;
	
	РаботаСДиалогами.ПриВыбореСчетаВТабличномПоле(Элемент.Значение, 
		СтрокаТабличнойЧасти.Субконто1, Колонки.Субконто1,
		СтрокаТабличнойЧасти.Субконто2, Колонки.Субконто2,
		СтрокаТабличнойЧасти.Субконто3, Колонки.Субконто3);
	
КонецПроцедуры

Процедура ДействияФормыПерейтиВЖурналПроводок(Кнопка)
	
	БухгалтерскийУчет.ОткрытьЖурналПроводок(ЭтотОбъект.Ссылка);
	
КонецПроцедуры

Процедура ТоварыСуммаПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = ЭлементыФормы.Товары.ТекущаяСтрока;
	СтрокаТабличнойЧасти.Цена = Окр(СтрокаТабличнойЧасти.Сумма / СтрокаТабличнойЧасти.Количество, 2);
	
	ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	Если ЭтотОбъект.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле Тогда
		ЭлементыФормы.НадписьСуммаДокумента1.Заголовок = "НДС (в т. ч.):";	
	Иначе
		ЭлементыФормы.НадписьСуммаДокумента1.Заголовок = "НДС (сверху):";
	КонецЕсли;
	
	ЭлементыФормы.СуммаНДС.Значение = ЭтотОбъект.Товары.Итог("СуммаНДС");
	
	СтраницаПанели  = ЭлементыФормы.Панель1.Страницы;
	СтраницаПанели.СтраницаТовары.Заголовок 			= "Товары (" 			+ ЭтотОбъект.Товары.Количество() 			+ " поз.)";
	СтраницаПанели.СтраницаРасходныеОрдера.Заголовок 	= "Расходные ордера (" 	+ ЭтотОбъект.РасходныеОрдера.Количество() 	+ " поз.)";
	
КонецПроцедуры

Процедура ДействияФормыИсторияИзменений(Кнопка)
	
	ИсторияИзменений = Отчеты.ИсторияИзмененийОбъектов.Создать();
	ИсторияИзменений.СсылкаНаОбъект = ЭтотОбъект.Ссылка;
	
	Форма = ИсторияИзменений.ПолучитьФорму("ФормаОтчета");
	Форма.СформироватьТаблицуВерсий();
	Форма.Открыть();
	
КонецПроцедуры

Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ЭтотОбъект.Ссылка);
	
КонецПроцедуры

Процедура ТоварыПоступлениеТовараНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = ЭлементыФормы.Товары.ТекущиеДанные;
	
	ФормаПодбора = Документы.ВозвратТоваровПоставщику.ПолучитьФорму("ФормаПодбораПоступлений");
	ФормаПодбора.Номенклатура 	= ТекущиеДанные.Номенклатура;
	ФормаПодбора.Контрагент 	= ЭтотОбъект.Контрагент;
	
	Результат = ФормаПодбора.ОткрытьМодально();
	Если Результат <> Неопределено Тогда
		ТекущиеДанные.ПоступлениеТовара = Результат;
		
		Отбор = Новый Структура("Номенклатура", ТекущиеДанные.Номенклатура);
		МассивСтрок = ТекущиеДанные.ПоступлениеТовара.Товары.НайтиСтроки(Отбор);
		
		Если МассивСтрок.Количество() > 0 Тогда
			
			ТекущиеДанные.Цена = МассивСтрок[0].Цена;
			ПосчитатьСуммуСтрокиТЧ(ЭлементыФормы.Товары.ТекущаяСтрока);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//+++ АК
Процедура КоманднаяПанель2Заполнить(Кнопка)
	
	Если ЭтотОбъект.Контрагент.Пустая() Тогда
		Предупреждение("Не заполнено поле Контрагент!");
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.РасходныеОрдера.Количество() > 0
			ИЛИ ЭтотОбъект.Товары.Количество() > 0 Тогда
		Режим = РежимДиалогаВопрос.ДаНет;
		Текст = "Табличные части ""Расходные ордера"" и ""Товары"" будут очищены!" + Символы.ПС + "Продолжить?";
		Ответ = Вопрос(Текст, Режим, 0);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
		    Возврат;
		Иначе
			ЭтотОбъект.РасходныеОрдера.Очистить();
			ЭтотОбъект.Товары.Очистить();
		КонецЕсли;
	КонецЕсли;	
	
	//
	ФормаПодбора = Документы.ВозвратТоваровПоставщику.ПолучитьФорму("ФормаПодбораРасходныхОрдеров");;
	ФормаПодбора.Контрагент		= ЭтотОбъект.Контрагент;
	ФормаПодбора.ВозвратТоваров = ЭтотОбъект.Ссылка;
	Если ФормаПодбора.ОткрытьМодально() = КодВозвратаДиалога.ОК Тогда
		
		МассивОрдеров = ФормаПодбора.Список.ВыгрузитьЗначения();
		
		Для Каждого СтрокаМассива Из МассивОрдеров Цикл
			НовСтр = ЭтотОбъект.РасходныеОрдера.Добавить();
			НовСтр.РасходныйОрдер = СтрокаМассива.РасходныйОрдер;
		КонецЦикла;
		
	КонецЕсли;
	
	Если ЭтотОбъект.РасходныеОрдера.Количество() > 0 Тогда
		
		МассивОрдеров = ЭтотОбъект.РасходныеОрдера.ВыгрузитьКолонку("РасходныйОрдер");
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("МассивОрдеров", МассивОрдеров);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РасходныйОрдерСкладТовары.Номенклатура,
		|	РасходныйОрдерСкладТовары.ЕдиницаИзмерения,
		|	СУММА(РасходныйОрдерСкладТовары.Количество) КАК Количество,
		|	СУММА(РасходныйОрдерСкладТовары.Количество) КАК ПоРасходнымОрдерам,
		|	РасходныйОрдерСкладТовары.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент
		|ИЗ
		|	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		|ГДЕ
		|	РасходныйОрдерСкладТовары.Ссылка В(&МассивОрдеров)
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходныйОрдерСкладТовары.ЕдиницаИзмерения,
		|	РасходныйОрдерСкладТовары.Номенклатура,
		|	РасходныйОрдерСкладТовары.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент";
		ЭтотОбъект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
		
		ТаблицаЦенПоставщиков = Документы.ВозвратТоваровПоставщику.ПолучитьЦеныПоставщиков(ЭтотОбъект.Товары.Выгрузить(, "Номенклатура"), 
																			  ЭтотОбъект. Контрагент, 
																			   ?(ЗначениеЗаполнено(ЭтотОбъект.Дата), ЭтотОбъект.Дата, ТекущаяДата()));
																			   
		//+++АК Susk (Суслин К.В.) 2018.07.30 ИП-00019275		 
		МассивНоменклатуры = Товары.ВыгрузитьКолонку("Номенклатура");	
		СоответствиеНоменклатурыИСчета = Справочники.Номенклатура.ПолучитьСчетаУчетаОбъектов(МассивНоменклатуры, Дата);
		//---АК Susk (Суслин К.В.) 																			   
																			   
		Для Каждого СтрокаТЧ Из ЭтотОбъект.Товары Цикл
			
			Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
				
				//+++АК Susk (Суслин К.В.) 2018.07.30 ИП-00019275
				СтруктураСчетов = СоответствиеНоменклатурыИСчета.Получить(СтрокаТЧ.Номенклатура);			
				ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтруктураСчетов);
				
				//следующий закоментированный код убрать в сентябре 2018, как откатаем универсальное получение счетов учета.
				
				#Область ЗакоментКод_КоманднаяПанель2Заполнить
				//Если СтрокаТЧ.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Товар
				//	ИЛИ СтрокаТЧ.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Материал Тогда
				//	
				//	СчетУчета = ПланыСчетов.Финансовый.Товары;
				//	
				//ИначеЕсли СтрокаТЧ.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Оборудование Тогда
				//	
				//	СчетУчета = ПланыСчетов.Финансовый.КапитальныеВложения;
				//	
				//КонецЕсли;
				//
				//СтрокаТЧ.СчетУчета 				= ?(Не ЗначениеЗаполнено(СчетУчета), ПланыСчетов.Финансовый.Товары, СчетУчета);
				#КонецОбласти 
				
				//---АК Susk (Суслин К.В.) 
				
				СтрокаТЧ.СтатьяТовародвижения	= Справочники.СтатьиТовародвижения.ПоступлениеОтПоставщика;
				
				Если ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.БезНДС Тогда
					СтрокаТЧ.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
				Иначе
					СтрокаТЧ.СтавкаНДС = СтрокаТЧ.Номенклатура.СтавкаНДС;
				КонецЕсли;	
				
				МассивСтрок = ТаблицаЦенПоставщиков.НайтиСтроки(Новый Структура("Номенклатура", СтрокаТЧ.Номенклатура));
				Если МассивСтрок.Количество() > 0 Тогда
					
					СтрокаТЧ.Цена = МассивСтрок[0].Цена;
					
				КонецЕсли;
				
			КонецЕсли;
			
			ПосчитатьСуммуСтрокиТЧ(СтрокаТЧ);
			
		КонецЦикла;
		
	КонецЕсли;

	//
	ПосчитатьСуммуТабличнойЧасти();
	
КонецПроцедуры

Процедура ТоварыПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		ВОрдерах = ПолучитьКоличествоВОрдерах(ОформлениеСтроки.ДанныеСтроки.Номенклатура);	
		ПредыущееКоличествоВНакладной = ОформлениеСтроки.ДанныеСтроки.ПоРасходнымОрдерам;
		
		Если ВОрдерах <> ПредыущееКоличествоВНакладной Тогда
			ОформлениеСтроки.Ячейки.ВОрдерах.Значение = Строка(Формат(ПредыущееКоличествоВНакладной, "ЧДЦ=3")) + " → " + Строка(Формат(ВОрдерах, "ЧДЦ=3"));
			ОформлениеСтроки.ЦветТекста = WebЦвета.Красный;
		Иначе
			ОформлениеСтроки.Ячейки.ВОрдерах.Значение = Строка(Формат(ВОрдерах, "ЧДЦ=3"));
			ОформлениеСтроки.ЦветТекста = WebЦвета.Черный;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанель1Проверено(Кнопка)
	
	Для Каждого СтрокаТЧ Из ЭтотОбъект.Товары Цикл
		
		СтрокаТЧ.ПоРасходнымОрдерам = ПолучитьКоличествоВОрдерах(СтрокаТЧ.Номенклатура);	 
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ТоварыПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = ЭлементыФормы.Товары.ТекущиеДанные;
	МассивОрдеров = РасходныеОрдера.ВыгрузитьКолонку("РасходныйОрдер");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОрдеров"	, МассивОрдеров);
	Запрос.УстановитьПараметр("Номенклатура"	, ТекущиеДанные.Номенклатура);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходныйОрдерСкладТовары.Номенклатура
	|ИЗ
	|	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
	|ГДЕ
	|	РасходныйОрдерСкладТовары.Ссылка В(&МассивОрдеров)
	|	И РасходныйОрдерСкладТовары.Номенклатура = &Номенклатура";
	
	Если НЕ Запрос.Выполнить().Пустой()Тогда
		Предупреждение("Товар присутствует в ордерах. Удаление строки запрещено!");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ДобавитьТоварыИзОрдеров(Отказ);
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение
			И ЭтотОбъект.РасходныеОрдера.Количество() > 0 Тогда
		
		ЕстьОшибки = Ложь;
		
		Для Каждого СтрокаТЧ Из ЭтотОбъект.РасходныеОрдера Цикл
			
			Если СтрокаТЧ.РасходныйОрдер.ВидОперации <> Перечисления.ВидыОперацийРасходСкладскойУчет.ВозвратПоставщику Тогда
				ЕстьОшибки = Истина;
			КонецЕсли;
			
		КонецЦикла;
	
		Если ЕстьОшибки Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Невозможно провести документ! Имеются расходные ордера с видом операции, отличным от <<Возврат поставщику>>", Отказ);	
		КонецЕсли;
		
	КонецЕсли;
	
	//+++АК SHEP 20161124
	Если ТипЗнч(ЭтотОбъект.ДокументОснование) = Тип("ДокументСсылка.ЗаданиеТехнологаМагазинам")
			И ЗначениеЗаполнено(ЭтотОбъект.ДокументОснование) Тогда
		
		УстановитьПривилегированныйРежим(Истина);
		
		Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
			
			Если Вопрос("Документ был помечен на удаление и должен совпадать с расх. ордерами.
				|Пометить на удаление расх. ордера?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			
			Для Каждого РасхОрдерСтрока Из ЭтотОбъект.РасходныеОрдера Цикл
				РасхОрдерСсылка = РасхОрдерСтрока.РасходныйОрдер;
				Если НЕ РасхОрдерСсылка.ПометкаУдаления Тогда
					РасхОрдерОбъект = РасхОрдерСсылка.ПолучитьОбъект();
					РасхОрдерОбъект.ПометкаУдаления = Истина;
					РасхОрдерОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
				КонецЕсли;
			КонецЦикла;
			
		ИначеЕсли РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
			
			// проверяем совпадение количеств
			ЕстьРасхождениеВКоличествах = Ложь;
			Для Каждого СтрокаТЧ Из ЭтотОбъект.Товары Цикл
				Если СтрокаТЧ.Количество <> СтрокаТЧ.ПоРасходнымОрдерам Тогда
					ЕстьРасхождениеВКоличествах = Истина;
				КонецЕсли;
			КонецЦикла;
			
			Если ЕстьРасхождениеВКоличествах Тогда
				Если Вопрос("Документ проводится и должен совпадать с расх. ордерами.
					|Провести расх. ордера?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
					Отказ = Истина;
					Возврат;
				КонецЕсли;
				
				Отказ = НЕ СинхронизироватьКоличествоВРасходномОрдереИВозвратеПоставщику();
				Если Отказ Тогда
					Сообщить("Не удалось синхронизировать количество с расх. ордерами!");
					Возврат;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли;
	//---АК SHEP 20161124
	
КонецПроцедуры

Процедура ДобавитьТоварыИзОрдеров(Отказ = Ложь, ЭтоОткрытие = Ложь)
	
	МассивОрдеров = ЭтотОбъект.РасходныеОрдера.ВыгрузитьКолонку("РасходныйОрдер");
	Если МассивОрдеров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	//
	ТаблицаТоваров = ЭтотОбъект.Товары.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОрдеров"	, МассивОрдеров);
	Запрос.УстановитьПараметр("ТЗ"				, ТаблицаТоваров);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТЗ.Номенклатура,
	|	ТЗ.ЕдиницаИзмерения
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходныйОрдерСкладТовары.Номенклатура,
	|	РасходныйОрдерСкладТовары.ЕдиницаИзмерения,
	|	СУММА(РасходныйОрдерСкладТовары.Количество) КАК Количество,
	|	РасходныйОрдерСкладТовары.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент
	|ПОМЕСТИТЬ ТоварыОрдеров
	|ИЗ
	|	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
	|ГДЕ
	|	РасходныйОрдерСкладТовары.Ссылка В(&МассивОрдеров)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходныйОрдерСкладТовары.ЕдиницаИзмерения,
	|	РасходныйОрдерСкладТовары.Номенклатура,
	|	РасходныйОрдерСкладТовары.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыОрдеров.Номенклатура,
	|	ТоварыОрдеров.ЕдиницаИзмерения,
	|	ТоварыОрдеров.Количество,
	|	ТоварыОрдеров.Коэффициент
	|ИЗ
	|	ТоварыОрдеров КАК ТоварыОрдеров
	|		ЛЕВОЕ СОЕДИНЕНИЕ Товары КАК Товары
	|		ПО ТоварыОрдеров.Номенклатура = Товары.Номенклатура
	|			И ТоварыОрдеров.ЕдиницаИзмерения = Товары.ЕдиницаИзмерения
	|ГДЕ
	|	Товары.Номенклатура ЕСТЬ NULL 
	|	И Товары.ЕдиницаИзмерения ЕСТЬ NULL ";
	
	Если Не Запрос.Выполнить().Пустой()Тогда
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если ЭтоОткрытие Тогда
			
			ДобавитьСтрокиВТабличнуюЧастьТовары(Выборка, Истина);
			
		Иначе
			
			Режим = РежимДиалогаВопрос.ДаНет;
			Текст = "В табличной части ""Товары"" присутствует не вся номенклатура из ордеров." + Символы.ПС +  "Выполнить добавление отсутствующих позиций?";
			Ответ = Вопрос(Текст, Режим, 0);
			
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			Иначе
				
				ДобавитьСтрокиВТабличнуюЧастьТовары(Выборка);
				Отказ = Истина;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьСтрокиВТабличнуюЧастьТовары(Выборка, ЭтоОткрытие = Ложь)
	
	//+++АК Susk (Суслин К.В.) 2018.07.30 ИП-00019275
	МассивНоменклатуры = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		МассивНоменклатуры.Добавить(Выборка.Номенклатура);
	КонецЦикла;
	
	СоответствиеНоменклатурыИСчета = Справочники.Номенклатура.ПолучитьСчетаУчетаОбъектов(МассивНоменклатуры, Дата);
	Выборка.Сбросить();
	//---АК Susk (Суслин К.В.) 
	
	Пока Выборка.Следующий()Цикл
		
		НоваяСтрока = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если ЭтоОткрытие Тогда
			НоваяСтрока.Количество = 0;
		КонецЕсли;
		
		//+++АК Susk (Суслин К.В.) 2018.07.30 ИП-00019275
		//следующий закоментированный код убрать в сентябре 2018, как откатаем универсальное получение счетов учета.
		
		СтруктураСчетов = СоответствиеНоменклатурыИСчета.Получить(НоваяСтрока.Номенклатура);			
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураСчетов);
		
		#Область ЗакоментКод_ДобавитьСтрокиВТабличнуюЧастьТовары
		//Если НоваяСтрока.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Товар
		//	ИЛИ НоваяСтрока.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Материал Тогда
		//	
		//	СчетУчета = ПланыСчетов.Финансовый.Товары;
		//	
		//ИначеЕсли НоваяСтрока.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Оборудование Тогда
		//	
		//	СчетУчета = ПланыСчетов.Финансовый.КапитальныеВложения;
		//	
		//КонецЕсли;
		//
		//НоваяСтрока.СчетУчета 				= СчетУчета;
		#КонецОбласти
		
		НоваяСтрока.СтатьяТовародвижения	= Справочники.СтатьиТовародвижения.ПоступлениеОтПоставщика;
		
		Если ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.БезНДС Тогда
			НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		Иначе
			НоваяСтрока.СтавкаНДС = НоваяСтрока.Номенклатура.СтавкаНДС;
		КонецЕсли;
		
		ПосчитатьСуммуСтрокиТЧ(НоваяСтрока);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВариантРасчетаНДСПриИзменении(Элемент)
	
	//mind отключил по просьбе Демниченко, пока НДС не выделяется отдельной проводкой
	////+++АК susk 28/07/2014
	//// В возврате всегда должен быть указан НДС
	//Если ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.БезНДС Тогда
	//	ОбщегоНазначения.СообщитьОбОшибке("В документе ""Возврат товаров поставщику"" всегда возврат должен осуществляться с НДС");
	//	ВариантРасчетаНДС = ?(мВариантРасчетаНДС = Неопределено ИЛИ мВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.БезНДС, Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле, мВариантРасчетаНДС);
	//КонецЕсли;
	////---АК susk
	
	Для Каждого СтрокаТЧ Из ЭтотОбъект.Товары Цикл
		
		Если ЭтотОбъект.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.БезНДС Тогда
			СтрокаТЧ.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
		Иначе
			СтрокаТЧ.СтавкаНДС = СтрокаТЧ.Номенклатура.СтавкаНДС;
		КонецЕсли;
		
		ПосчитатьСуммуСтрокиТЧ(СтрокаТЧ);
		
	КонецЦикла;	
	
	ПосчитатьСуммуТабличнойЧасти();
	
КонецПроцедуры

Процедура КонтрагентПриИзменении(Элемент)
	
	Если Элемент.Значение.ВАрхиве Тогда
		Предупреждение("Вы выбрали архивного контрагента. Его контактные данные также находятся в архиве", 120);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		//ВариантРасчетаНДС = ?(Контрагент.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС, Перечисления.ВариантыРасчетаНДС.БезНДС, Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле);
		ВариантРасчетаНДС = ?(Контрагент.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС, Перечисления.ВариантыРасчетаНДС.НДСсверху, Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле);
		
		//+++АК luza ИП-00019743 
		ЗаполнитьГрузополучателяПоУмолчанию(Контрагент);
		//-- АК luza
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ОткрытьФормуВыбораПечатныхФормОбъекта(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)

	УниверсальныеМеханизмы.НапечататьДокументПоУмолчанию(ЭтотОбъект);

КонецПроцедуры

Процедура ВариантРасчетаНДСНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	мВариантРасчетаНДС = ВариантРасчетаНДС;
	
КонецПроцедуры

//--- АК

//+++АК SHEP 20160624
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	//+++АК sils 07.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Возврат товаров поставщику");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	
	Если ТипЗнч(ПараметрОснование) = Тип("ДокументСсылка.ЗаданиеТехнологаМагазинам") Тогда
		Если ПараметрОснование.ТипЗадания <> Перечисления.ТипыЗаданийТехнологаМагазинам.СписаниеСМагазинов
				И ПараметрОснование.ТипЗадания <> Перечисления.ТипыЗаданийТехнологаМагазинам.СамовывозСМагазинов Тогда
			Сообщить("Документ может вводиться на основании только с видами операций
				|""Списание с магазинов за счёт поставщика"" и ""Самовывоз с магазинов""!");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
//---АК SHEP 20160624

//+++АК Susk (Суслин К.В.) 2018.01.10 ИП-00017530
Процедура ДействияФормыВыгрузитьВБПНов(Кнопка)
	
	Если НЕ ОбменСБП2_0.ПроверкаПередВыгрузкой(Ссылка.Пустая(), Модифицированность) Тогда
		Возврат;
	КонецЕсли;	
		
	ОбменСБП2_0.ВыгрузитьДокументВБП("ВозвратТоваровПоставщику", "ВозвратТоваровПоставщику", Ссылка); 
	
КонецПроцедуры

//+++АК luza 2018.08.23 ИП-00019074
Процедура ДействияФормыОтправитьПоЭДО_УПД(Кнопка)
	ЭтотОбъект.ОтправитьПоЭДО("УПД");
КонецПроцедуры

//+++АК luza 2018.08.23 ИП-00019074
Процедура ДействияФормыОтправитьПоЭДО_СФ(Кнопка)
	ЭтотОбъект.ОтправитьПоЭДО("СФ");
КонецПроцедуры

//+++АК luza 2018.08.23 ИП-00019074
Процедура ДействияФормыОтправитьПоЭДО_ТОРГ12(Кнопка)
	ЭтотОбъект.ОтправитьПоЭДО("ТОРГ-12");
КонецПроцедуры

//+++АК luza 2018.09.02 ИП-00019074
Процедура ДействияФормыОтправитьПоЭДО_АКТ(Кнопка)
	ЭтотОбъект.ОтправитьПоЭДО("АКТ");
КонецПроцедуры

//+++ АК luza 24.09.2018 ИП-00019881
Процедура ЗаполнитьПрикрепленныеФайлы()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЭДО_СопоставлениеДокументов.ВидДокумента,
	|	МАКСИМУМ(ЭДО_СопоставлениеДокументов.ДокументЭДО.ФайлPDF) КАК ДокументЭДОФайлPDF
	|ИЗ
	|	РегистрСведений.ЭДО_СопоставлениеДокументов КАК ЭДО_СопоставлениеДокументов
	|ГДЕ
	|	ЭДО_СопоставлениеДокументов.Документ = &Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭДО_СопоставлениеДокументов.ВидДокумента";
	
	Запрос.УстановитьПараметр("Документ", ЭтотОбъект.Ссылка);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Для каждого Стр Из ТЗ Цикл
		Если Стр.ВидДокумента = Перечисления.ЭДО_ТипыДокументов.АктВыполненныхРабот Тогда
			ФайлАкт = Стр.ДокументЭДОФайлPDF;
		ИначеЕсли Стр.ВидДокумента = Перечисления.ЭДО_ТипыДокументов.ТоварнаяНакладная Тогда
			ФайлНакладная = Стр.ДокументЭДОФайлPDF;	
		ИначеЕсли Стр.ВидДокумента = Перечисления.ЭДО_ТипыДокументов.СчетФактура Тогда
			ФайлСФ = Стр.ДокументЭДОФайлPDF;	
		ИначеЕсли Стр.ВидДокумента = Перечисления.ЭДО_ТипыДокументов.УПД Тогда
			ФайлУПД = Стр.ДокументЭДОФайлPDF;	
		КонецЕсли;	
	КонецЦикла;		
КонецПроцедуры	

//+++АК luza 24.09.2018 ИП-00019743
Процедура ЗаполнитьГрузополучателяПоУмолчанию(Контрагент)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Объект,
	|	ЗначенияСвойствОбъектов.Свойство,
	|	ЗначенияСвойствОбъектов.Значение
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект = &Объект
	|	И ЗначенияСвойствОбъектов.Свойство = &Свойство";
	
	Запрос.УстановитьПараметр("Объект", Контрагент.Ссылка);
	Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.Грузополучатель_По_Умолчанию); //+++ AK suvv 2018.12.17 ИП-00020483.01 исправлена ошибка в названии 
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Если ТЗ.Количество() > 0 Тогда
		Грузополучатель = ТЗ[0].Значение;		
	КонецЕсли;	
	
КонецПроцедуры

мКолонкиТовары = ЭлементыФормы.Товары.Колонки;
