
&НаСервере
Процедура ЗагрузитьДанныеСервер()
	//+++ AK BARA ИП-00015329.000.00000001
	Объект.ДобавилиКупоновСумма = 0;
	Объект.СписалиКупоновСумма = 0;
	Объект.НеИспользованныеЗаКварталСумма = 0;
	Объект.НачисленияПоСертификатам.Очистить();
	//+++ AK BARA ИП-00015329.000.00000001
	
	Объект.Начисления.Очистить();
	Если Объект.ВидНачисленияБонуса = Перечисления.ВидыНачисленийБонуса.Ежедневный Тогда
		ТабДанные = Документы.НачислениеБонусовПокупателям.ПолучитьЕжедневныеБонусы(Объект.ПериодЗагрузкиС, Объект.Дата);
	Иначе
		ТабДанные = Документы.НачислениеБонусовПокупателям.ПолучитьБонусыЗаМесяц(Объект.Дата);
		//+++ AK BARA ИП-00015329.000.00000001		
		РезультатСертификатов = Документы.НачислениеБонусовПокупателям.ПолучитьДаныеПоСертификатам(Объект.Дата,Объект.НачисленияПоСертификатам,Объект.ДобавилиСертификаты,Объект.ВыдалиСертификаты);
		Объект.ДобавилиКупоновСумма = РезультатСертификатов.ДобавилиКупонов;
		Объект.СписалиКупоновСумма = РезультатСертификатов.СписалиКупонов;
		Объект.НеИспользованныеЗаКварталСумма = РезультатСертификатов.НеИспользованныеЗаКвартал;
		//--- AK
	КонецЕсли;
	
	Объект.Начисления.Загрузить(ТабДанные);
	
КонецПроцедуры	

&НаКлиенте
Процедура НастроитьФорму()
	
	Если Объект.ВидНачисленияБонуса = ПредопределенноеЗначение("Перечисление.ВидыНачисленийБонуса.Ежедневный") Тогда
		Элементы.ГруппаЕжедневная.Видимость = Истина;
		Элементы.ГруппаМесячная.Видимость = Ложь;
	Иначе
		Элементы.ГруппаЕжедневная.Видимость = Ложь;
		Элементы.ГруппаМесячная.Видимость = Истина;
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗагрузитьДанные(Команда)
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(Объект.ВидНачисленияБонуса) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Заполните вид начисления бонуса", Объект, "ВидНачисленияБонуса",, Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;	
	
	Если Объект.Начисления.Количество() > 0 Тогда
		Ответ = Вопрос("Таблица начислений будет очищена перед заполнением. Продолжить?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;	
	КонецЕсли;	
	
	ЗагрузитьДанныеСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МесяцРедактирования = Формат(Объект.Дата, "ДФ='MMMM yyyy'");
	НастроитьФорму();
	
	//+++АК sils 08.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
	//---АК
КонецПроцедуры

&НаКлиенте
Процедура ВидНачисленияБонусаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцРедактированияОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 08.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Начисление бонусов покупателям");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Дата = КонецМесяца(ДобавитьМесяц(ТекущаяДата(), -1));
		Объект.ПериодЗагрузкиС = НачалоМесяца(ДобавитьМесяц(ТекущаяДата(), -1));
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцРедактированияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Объект.Дата = КонецМесяца(ДобавитьМесяц(Объект.Дата, Направление));
	Объект.ПериодЗагрузкиС = НачалоМесяца(Объект.Дата);
	МесяцРедактирования = Формат(Объект.Дата, "ДФ='MMMM yyyy'");
	
КонецПроцедуры

&НаКлиенте
Процедура ВидНачисленияБонусаПриИзменении(Элемент)
	
	НастроитьФорму();
	
	Если Объект.ВидНачисленияБонуса = ПредопределенноеЗначение("Перечисление.ВидыНачисленийБонуса.Месячный") Тогда
		Объект.ПериодЗагрузкиС = НачалоМесяца(Объект.Дата);
	КонецЕсли;	
	
КонецПроцедуры
