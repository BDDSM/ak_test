
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.Финансовый.Записывать = Истина;
	Движения.Финансовый.Очистить();
	
	//+++АК ZICD 27.12.2016 ИП-00014363
	ОрганизацияВкусВилл = АК_УчетМСФО.ОрганизацияВкусВилл(Дата);
	//---АК
	
	//++++ АК AZAP 14.02.2017 ИП-00014893.01
	//минеев переделал проведение по бонусам 2017-04-10 по заданию ИП-00015535
	//ОрганизацияЛдП = Справочники.Организации.НайтиПоРеквизиту("ИНН", "7726660031");
	//
	//Запрос = Новый Запрос();
	//Запрос.Текст = "ВЫБРАТЬ
	//			   |	СУММА(ФинансовыйОбороты.СуммаОборотДт) КАК Начисление,
	//			   |	СУММА(ФинансовыйОбороты.СуммаОборотКт) КАК Списание
	//			   |ИЗ
	//			   |	РегистрБухгалтерии.Финансовый.Обороты(&ДатаНач, &ДатаКон, Регистратор, Счет = &Счет96Б, , Организация = &Организация, , ) КАК ФинансовыйОбороты
	//			   |ГДЕ
	//			   |	ФинансовыйОбороты.Регистратор <> &Регистратор";				   
	//Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ПериодЗагрузкиС));
	//Запрос.УстановитьПараметр("ДатаКон", КонецДня(Дата));
	//Запрос.УстановитьПараметр("Счет96Б", ПланыСчетов.Финансовый.АК_РезервПоБонусам);
	//Запрос.УстановитьПараметр("Организация", ОрганизацияЛдП);
	//Запрос.УстановитьПараметр("Регистратор", Ссылка);
	//Бонусы = Запрос.Выполнить().Выбрать();
	//Бонусы.Следующий();
	//
	//СуммаТекущихНачислений = 0;
	////---- АК AZAP
	//
	//СтруктураНастроек = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(?(ВидНачисленияБонуса = Перечисления.ВидыНачисленийБонуса.Ежедневный, Перечисления.ВидыОперацийВУчете.БонусыПокупателямЕжедневные, Перечисления.ВидыОперацийВУчете.БонусыПокупателямЗаМесяц), Дата);
	//
	//Запрос = Новый Запрос();
	//Запрос.Текст = "ВЫБРАТЬ
	//			   |	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница,
	//			   |	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО,
	//			   |	ЦФОСтруктурныхЕдиницСрезПоследних.Организация
	//			   |ИЗ
	//			   |	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&Дата, ) КАК ЦФОСтруктурныхЕдиницСрезПоследних";
	//			   
	//Запрос.УстановитьПараметр("Дата", КонецДня(Дата));
	//
	//ТабЦФО = Запрос.Выполнить().Выгрузить();
	//
	//Для Каждого СтрокаНачисление Из Начисления Цикл
	//	
	//	СтрокаЦФО = ТабЦФО.Найти(СтрокаНачисление.ТорговаяТочка, "СтруктурнаяЕдиница");
	//	ЦФО_ТТ = Неопределено;
	//	Если СтрокаЦФО <> Неопределено Тогда
	//		ЦФО_ТТ = СтрокаЦФО.ЦФО;
	//	КонецЕсли;	
	//	
	//	Проводка = Движения.Финансовый.Добавить();
	//	Проводка.Период = ?(ВидНачисленияБонуса = Перечисления.ВидыНачисленийБонуса.Месячный, КонецМесяца(Дата), Дата);
	//	Проводка.Сумма				= СтрокаНачисление.Сумма;
	//	//+++АК ZICD 27.12.2016 ИП-00014363
	//	Проводка.Организация = ОрганизацияВкусВилл;
	//	//---АК
	//	//Проводка.Организация		= СтрокаНачисление.ТорговаяТочка.Организация;
	//	//Проводка.СтруктурнаяЕдиница	= СтрокаНачисление.ТорговаяТочка;
	//	Проводка.Содержание			= "Бонус по карте";
	//	
	//	Если Дата < '20170101' Тогда
	//		Проводка.СчетДт 							= СтруктураНастроек.Счет;
	//		Проводка.СубконтоДт.ТорговыеТочки  			= СтрокаНачисление.ТорговаяТочка;
	//		Проводка.СубконтоДт.СтатьиДоходовРасходов	= СтруктураНастроек.СтатьяДоходовРасходов;
	//		Проводка.СубконтоДт.ЦФО						= ?(ЗначениеЗаполнено(ЦФО_ТТ), ЦФО_ТТ, СтруктураНастроек.ЦФО);
	//		
	//		Проводка.СчетКт								= ПланыСчетов.Финансовый.ПрочаяЗадолженность;
	//		Проводка.СубконтоКт.Организации				= СтруктураНастроек.ДопРеквизит;
	//		Проводка.СубконтоКт.Контрагенты				= СтруктураНастроек.ДопРеквизит1;
	//	//++++ АК AZAP 09.02.2017 ИП-00014893
	//	Иначе
	//		Орг = СтрокаНачисление.ТорговаяТочка.Организация;
	//		Если СтрокаЦФО <> Неопределено И ЗначениеЗаполнено(СтрокаЦФО.Организация) Тогда
	//			Орг = СтрокаЦФО.Организация;
	//		КонецЕсли;
	//		
	//		СуммаОстаток = 0;
	//		Если Орг = ОрганизацияЛдП Тогда
	//			Если Бонусы.Начисление + СуммаТекущихНачислений >= Бонусы.Списание Тогда
	//				//Проводка.Организация = ОрганизацияВкусВилл;
	//				Орг = ОрганизацияВкусВилл;
	//			ИначеЕсли Бонусы.Начисление + СуммаТекущихНачислений + СтрокаНачисление.Сумма > Бонусы.Списание Тогда
	//				//разделяем проводку на 2
	//				Проводка.Организация = ОрганизацияЛдП;
	//				Проводка.Сумма = Бонусы.Списание - (Бонусы.Начисление + СуммаТекущихНачислений);
	//				СуммаОстаток = СтрокаНачисление.Сумма - Проводка.Сумма;
	//			Иначе
	//				Проводка.Организация = ОрганизацияЛдП;
	//			КонецЕсли;
	//			СуммаТекущихНачислений = СуммаТекущихНачислений + СтрокаНачисление.Сумма;
	//		КонецЕсли;
	//	
	//		
	//		Проводка.СчетДт 							= ПланыСчетов.Финансовый.АК_РезервПоБонусам;
	//		Проводка.СубконтоДт.Организации	  			= Орг;
	//		Проводка.СубконтоДт.СтатьиДоходовРасходов	= Справочники.СтатьиДоходовРасходов.НайтиПоКоду("20901");
	//		Проводка.СубконтоДт.ЦФО						= СтрокаНачисление.ТорговаяТочка;
	//		
	//		Проводка.СчетКт								= ПланыСчетов.Финансовый.ПрочаяЗадолженность;
	//		Проводка.СубконтоКт.Организации				= Орг;
	//		Проводка.СубконтоКт.Контрагенты				= СтруктураНастроек.ДопРеквизит1;
	//		
	//		//если проводку делим, то надо сделать еще одну проводку на оставшуюся сумму
	//		Если СуммаОстаток > 0 Тогда
	//			Проводка2 = Движения.Финансовый.Добавить();
	//			
	//			Проводка2.Организация = ОрганизацияВкусВилл;
	//			Проводка2.Сумма = СуммаОстаток;
	//			
	//			//копируем оставшиеся параметры
	//			Проводка2.Период = Проводка.Период;
	//			Проводка2.Содержание = Проводка.Содержание;
	//			Проводка2.СчетДт = Проводка.СчетДт;
	//			Проводка2.СубконтоДт.Организации = ОрганизацияВкусВилл;
	//			Проводка2.СубконтоДт.СтатьиДоходовРасходов = Проводка.СубконтоДт.СтатьиДоходовРасходов;
	//			Проводка2.СубконтоДт.ЦФО = Проводка.СубконтоДт.ЦФО;
	//			Проводка2.СчетКт = Проводка.СчетКт;
	//			Проводка2.СубконтоКт.Организации = ОрганизацияВкусВилл;
	//			Проводка2.СубконтоКт.Контрагенты = Проводка.СубконтоКт.Контрагенты;
	//		КонецЕсли;
	//	КонецЕсли;
	//	//---- АК AZAP
	//	
	//КонецЦикла;
	
	ОрганизацияЛдП = Справочники.Организации.НайтиПоРеквизиту("ИНН", "7726660031");
	СтруктураНастроек = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(?(ВидНачисленияБонуса = Перечисления.ВидыНачисленийБонуса.Ежедневный, Перечисления.ВидыОперацийВУчете.БонусыПокупателямЕжедневные, Перечисления.ВидыОперацийВУчете.БонусыПокупателямЗаМесяц), Дата);
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	СУММА(ФинансовыйОбороты.СуммаОборотКт) - СУММА(ФинансовыйОбороты.СуммаОборотДт) КАК Списать,
	               |	ФинансовыйОбороты.Субконто1 КАК ТТ
	               |ИЗ
	               |	РегистрБухгалтерии.Финансовый.Обороты(&ДатаНач, &ДатаКон, Регистратор, Счет = &Счет, , Организация = &Организация, , ) КАК ФинансовыйОбороты
	               |ГДЕ
	               |	ФинансовыйОбороты.Регистратор <> &Регистратор
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ФинансовыйОбороты.Субконто1";
	Запрос.УстановитьПараметр("ДатаНач", Новый Граница(НачалоДня(ПериодЗагрузкиС), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаКон", Новый Граница(КонецДня(Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет", СтруктураНастроек.Счет);
	Запрос.УстановитьПараметр("Организация", ОрганизацияЛдП);
	Запрос.УстановитьПараметр("Регистратор", Ссылка);
	ТабСписано = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница,
	               |	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО,
	               |	ЦФОСтруктурныхЕдиницСрезПоследних.Организация
	               |ИЗ
	               |	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&Дата, ) КАК ЦФОСтруктурныхЕдиницСрезПоследних";
				   
	Запрос.УстановитьПараметр("Дата", КонецДня(Дата));
	
	ТабЦФО = Запрос.Выполнить().Выгрузить();
	
	//+++АК BARA 03.11.2017 ИП-00014893.02.000.00001	
	НачислениеМинусСписаниеЛДП = 0;
	//+++АК BARA 
	
	Для Каждого СтрокаНачисление Из Начисления Цикл
		
		СтрокаЦФО = ТабЦФО.Найти(СтрокаНачисление.ТорговаяТочка, "СтруктурнаяЕдиница");
		ЦФО_ТТ = Неопределено;
		Если СтрокаЦФО <> Неопределено Тогда
			ЦФО_ТТ = СтрокаЦФО.ЦФО;
		КонецЕсли;
		
		Если Дата < '20170101' Тогда
			Проводка = Движения.Финансовый.Добавить();
			Проводка.Период = ?(ВидНачисленияБонуса = Перечисления.ВидыНачисленийБонуса.Месячный, КонецМесяца(Дата), Дата);
			Проводка.Организация = СтруктураНастроек.ДопРеквизит;
			Проводка.Сумма				= СтрокаНачисление.Сумма;
			Проводка.СчетДт 							= СтруктураНастроек.Счет;
			Проводка.СубконтоДт.ТорговыеТочки  			= СтрокаНачисление.ТорговаяТочка;
			Проводка.СубконтоДт.СтатьиДоходовРасходов	= СтруктураНастроек.СтатьяДоходовРасходов;
			Проводка.СубконтоДт.ЦФО						= ?(ЗначениеЗаполнено(ЦФО_ТТ), ЦФО_ТТ, СтруктураНастроек.ЦФО);
			
			Проводка.СчетКт								= ПланыСчетов.Финансовый.ПрочаяЗадолженность;
			Проводка.СубконтоКт.Организации				= СтруктураНастроек.ДопРеквизит;
			Проводка.СубконтоКт.Контрагенты				= СтруктураНастроек.ДопРеквизит1;
		Иначе
			Если СтрокаЦФО <> Неопределено Тогда
				ОргТекПроводки = СтрокаЦФО.Организация;
			Иначе	
				ОргТекПроводки = ОрганизацияВкусВилл;
			КонецЕсли;
			Если ОргТекПроводки = ОрганизацияВкусВилл Тогда
				Проводка = Движения.Финансовый.Добавить();
				Проводка.Период = ?(ВидНачисленияБонуса = Перечисления.ВидыНачисленийБонуса.Месячный, КонецМесяца(Дата), Дата);
				Проводка.Организация = ОргТекПроводки;
				Проводка.Сумма				= СтрокаНачисление.Сумма;
				Проводка.СчетДт 							= СтруктураНастроек.Счет;
				Проводка.СубконтоДт.ТорговыеТочки  			= СтрокаНачисление.ТорговаяТочка;
				Проводка.СубконтоДт.СтатьиДоходовРасходов	= СтруктураНастроек.СтатьяДоходовРасходов;
				Проводка.СубконтоДт.ЦФО						= ?(ЗначениеЗаполнено(ЦФО_ТТ), ЦФО_ТТ, СтруктураНастроек.ЦФО);
				
				Проводка.СчетКт								= ПланыСчетов.Финансовый.ПрочаяЗадолженность;
				Проводка.СубконтоКт.Организации				= ОргТекПроводки;
				Проводка.СубконтоКт.Контрагенты				= СтруктураНастроек.ДопРеквизит1;
			Иначе
				СтрокаКСписанию = ТабСписано.Найти(СтрокаНачисление.ТорговаяТочка, "ТТ");
				СуммаКСписанию = 0;
				Если СтрокаКСписанию <> Неопределено Тогда
					СуммаКСписанию = Макс(0, Мин(СтрокаКСписанию.Списать, СтрокаНачисление.Сумма));
					//+++АК BARA 03.11.2017 ИП-00014893.02.000.00001
					НачислениеМинусСписаниеЛДП = НачислениеМинусСписаниеЛДП + СтрокаНачисление.Сумма - СтрокаКСписанию.Списать;
				Иначе
					НачислениеМинусСписаниеЛДП = НачислениеМинусСписаниеЛДП + СтрокаНачисление.Сумма;
					//+++АК BARA 03.11.2017 					
				КонецЕсли;
				Если СуммаКСписанию < СтрокаНачисление.Сумма Тогда
					Проводка = Движения.Финансовый.Добавить();
					Проводка.Период = ?(ВидНачисленияБонуса = Перечисления.ВидыНачисленийБонуса.Месячный, КонецМесяца(Дата), Дата);
					Проводка.Организация = ОрганизацияВкусВилл;
					Проводка.Сумма				= СтрокаНачисление.Сумма - СуммаКСписанию;
					Проводка.СчетДт 							= СтруктураНастроек.Счет;
					Проводка.СубконтоДт.ТорговыеТочки  			= СтрокаНачисление.ТорговаяТочка;
					Проводка.СубконтоДт.СтатьиДоходовРасходов	= СтруктураНастроек.СтатьяДоходовРасходов;
					Проводка.СубконтоДт.ЦФО						= ?(ЗначениеЗаполнено(ЦФО_ТТ), ЦФО_ТТ, СтруктураНастроек.ЦФО);
					
					Проводка.СчетКт								= ПланыСчетов.Финансовый.ПрочаяЗадолженность;
					Проводка.СубконтоКт.Организации				= ОрганизацияВкусВилл;
					Проводка.СубконтоКт.Контрагенты				= СтруктураНастроек.ДопРеквизит1;
				КонецЕсли;
				//+++АК BARA 03.11.2017 ИП-00014893.02.000.00001  вариант по магазинам
				//Считаем сколько нужно доначислить по вкусвилл, с учтом того что списывать мы будем полную сумму с Лук да поле. И соответсвенно считаем сколько надо списать по Лук да поле.
				ДоначилениеВкусВилл = 0;
				Если СтрокаКСписанию <> Неопределено Тогда					
					Если СтрокаКСписанию.Списать > СтрокаНачисление.Сумма Тогда
						СуммаКСписанию2 = Макс(0, Макс(СтрокаКСписанию.Списать, СтрокаНачисление.Сумма));
						ДоначилениеВкусВилл = СуммаКСписанию2 - СуммаКСписанию;
						СуммаКСписанию = СуммаКСписанию2;
					КонецЕсли;  
					СтрокаКСписанию.Списать = СтрокаКСписанию.Списать - СуммаКСписанию;
				КонецЕсли;
				//---АК BARA 
				
				Если СуммаКСписанию > 0 Тогда
					Проводка = Движения.Финансовый.Добавить();
					Проводка.Период = ?(ВидНачисленияБонуса = Перечисления.ВидыНачисленийБонуса.Месячный, КонецМесяца(Дата), Дата);
					Проводка.Организация = ОргТекПроводки;
					Проводка.Сумма				= СуммаКСписанию;
					Проводка.СчетДт 							= СтруктураНастроек.Счет;
					Проводка.СубконтоДт.ТорговыеТочки  			= СтрокаНачисление.ТорговаяТочка;
					Проводка.СубконтоДт.СтатьиДоходовРасходов	= СтруктураНастроек.СтатьяДоходовРасходов;
					Проводка.СубконтоДт.ЦФО						= ?(ЗначениеЗаполнено(ЦФО_ТТ), ЦФО_ТТ, СтруктураНастроек.ЦФО);
					
					Проводка.СчетКт								= ПланыСчетов.Финансовый.ПрочаяЗадолженность;
					Проводка.СубконтоКт.Организации				= ОргТекПроводки;
					Проводка.СубконтоКт.Контрагенты				= СтруктураНастроек.ДопРеквизит1;
					//+++АК BARA 03.11.2017 ИП-00014893.02.000.00001     
					Если ДоначилениеВкусВилл >0 Тогда 
					Проводка = Движения.Финансовый.Добавить();
					Проводка.Период = ?(ВидНачисленияБонуса = Перечисления.ВидыНачисленийБонуса.Месячный, КонецМесяца(Дата), Дата);
					Проводка.Организация = ОрганизацияВкусВилл;
					Проводка.Сумма				= -ДоначилениеВкусВилл ;
					Проводка.СчетДт 							= СтруктураНастроек.Счет;
					Проводка.СубконтоДт.ТорговыеТочки  			= СтрокаНачисление.ТорговаяТочка;
					Проводка.СубконтоДт.СтатьиДоходовРасходов	= СтруктураНастроек.СтатьяДоходовРасходов;
					Проводка.СубконтоДт.ЦФО						= ?(ЗначениеЗаполнено(ЦФО_ТТ), ЦФО_ТТ, СтруктураНастроек.ЦФО);
					
					Проводка.СчетКт								= ПланыСчетов.Финансовый.ПрочаяЗадолженность;
					Проводка.СубконтоКт.Организации				= ОрганизацияВкусВилл;
					Проводка.СубконтоКт.Контрагенты				= СтруктураНастроек.ДопРеквизит1;
					КонецЕсли;
					//---АК BARA 

				КонецЕсли;	
				
			КонецЕсли;	
		КонецЕсли;	
		
	КонецЦикла;
	
	//+++АК BARA 03.11.2017 ИП-00014893.02.000.00001     вариант по магазину "ВСЕ", оставил на случай если попросят
	//Если НачислениеМинусСписаниеЛДП < 0 Тогда  
	//	// Проводка по Организация ВкусВилл сторно
	//	Проводка = Движения.Финансовый.Добавить();
	//	Проводка.Период = ?(ВидНачисленияБонуса = Перечисления.ВидыНачисленийБонуса.Месячный, КонецМесяца(Дата), Дата);
	//	Проводка.Организация = ОрганизацияВкусВилл;
	//	Проводка.Сумма				= НачислениеМинусСписаниеЛДП ;
	//	Проводка.СчетДт 							= СтруктураНастроек.Счет;
	//	Проводка.СубконтоДт.ТорговыеТочки  			= СтруктураНастроек.СтруктурнаяЕдиница;
	//	Проводка.СубконтоДт.СтатьиДоходовРасходов	= СтруктураНастроек.СтатьяДоходовРасходов;
	//	Проводка.СубконтоДт.ЦФО						= СтруктураНастроек.ЦФО;
	//	
	//	Проводка.СчетКт								= ПланыСчетов.Финансовый.ПрочаяЗадолженность;
	//	Проводка.СубконтоКт.Организации				= ОргТекПроводки;
	//	Проводка.СубконтоКт.Контрагенты				= СтруктураНастроек.ДопРеквизит1;  
	//	
	//	// Проводка по Организация Лук да Поле доначисление
	//	Проводка = Движения.Финансовый.Добавить();
	//	Проводка.Период = ?(ВидНачисленияБонуса = Перечисления.ВидыНачисленийБонуса.Месячный, КонецМесяца(Дата), Дата);
	//	Проводка.Организация = ОрганизацияЛдП;
	//	Проводка.Сумма				= -НачислениеМинусСписаниеЛДП ;
	//	Проводка.СчетДт 							= СтруктураНастроек.Счет;  
	//	Проводка.СубконтоДт.ТорговыеТочки  			= СтруктураНастроек.СтруктурнаяЕдиница;
	//	Проводка.СубконтоДт.СтатьиДоходовРасходов	= СтруктураНастроек.СтатьяДоходовРасходов;
	//	Проводка.СубконтоДт.ЦФО						= СтруктураНастроек.ЦФО;
	//	
	//	Проводка.СчетКт								= ПланыСчетов.Финансовый.ПрочаяЗадолженность;
	//	Проводка.СубконтоКт.Организации				= ОргТекПроводки;
	//	Проводка.СубконтоКт.Контрагенты				= СтруктураНастроек.ДопРеквизит1;
	//КонецЕсли;
	//Остатки по ЛДП
	Если ВидНачисленияБонуса = Перечисления.ВидыНачисленийБонуса.Месячный и  Дата >= '20170101' Тогда 				
		Для каждого Стр Из ТабСписано  Цикл
			Если Стр.Списать > 0 Тогда 
				СтрокаЦФО = ТабЦФО.Найти(Стр.ТТ, "СтруктурнаяЕдиница");
				ЦФО_ТТ = Неопределено;
				Если СтрокаЦФО <> Неопределено Тогда
					ЦФО_ТТ = СтрокаЦФО.ЦФО;
				КонецЕсли;
				
				Проводка = Движения.Финансовый.Добавить();
				Проводка.Период =  КонецМесяца(Дата);
				Проводка.Организация = ОрганизацияЛдП;
				Проводка.Сумма				= Стр.Списать;
				Проводка.СчетДт 							= СтруктураНастроек.Счет;
				Проводка.СубконтоДт.ТорговыеТочки  			= Стр.ТТ;
				Проводка.СубконтоДт.СтатьиДоходовРасходов	= СтруктураНастроек.СтатьяДоходовРасходов;
				Проводка.СубконтоДт.ЦФО						= ?(ЗначениеЗаполнено(ЦФО_ТТ), ЦФО_ТТ, СтруктураНастроек.ЦФО);
				
				Проводка.СчетКт								= ПланыСчетов.Финансовый.ПрочаяЗадолженность;
				Проводка.СубконтоКт.Организации				= ОрганизацияЛдП;
				Проводка.СубконтоКт.Контрагенты				= СтруктураНастроек.ДопРеквизит1;
				
				
				Проводка = Движения.Финансовый.Добавить();
				Проводка.Период =  КонецМесяца(Дата);
				Проводка.Организация = ОрганизацияВкусВилл;
				Проводка.Сумма				= -Стр.Списать ;
				Проводка.СчетДт 							= СтруктураНастроек.Счет;
				Проводка.СубконтоДт.ТорговыеТочки  			= Стр.ТТ;
				Проводка.СубконтоДт.СтатьиДоходовРасходов	= СтруктураНастроек.СтатьяДоходовРасходов;
				Проводка.СубконтоДт.ЦФО						= ?(ЗначениеЗаполнено(ЦФО_ТТ), ЦФО_ТТ, СтруктураНастроек.ЦФО);
				
				Проводка.СчетКт								= ПланыСчетов.Финансовый.ПрочаяЗадолженность;
				Проводка.СубконтоКт.Организации				= ОрганизацияВкусВилл;
				Проводка.СубконтоКт.Контрагенты				= СтруктураНастроек.ДопРеквизит1;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//---АК BARA 
	
	
	//+++АК BARA 11.04.2017 ИП-00015572.000.00000001
	Если ВидНачисленияБонуса = Перечисления.ВидыНачисленийБонуса.Месячный и  Дата > Дата('20170101')  Тогда 
		ЦФО_ТТ = Неопределено;
		
		СтатьиДоходовРасходов21002  = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("21002");
		ЦФО_50 = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_50");
		ЦФО_000 = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_000");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница,
		|	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО КАК ЦФО
		|ИЗ
		|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&ДатаСреза, СтруктурнаяЕдиница В (&СтруктурнаяЕдиница)) КАК ЦФОСтруктурныхЕдиницСрезПоследних";
		
		Запрос.УстановитьПараметр("ДатаСреза", НачалоМесяца(Дата));
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", НачисленияПоСертификатам.ВыгрузитьКолонку("ТорговаяТочка"));		
		
		ЦФОСтруктурныхЕдиниц = Запрос.Выполнить().Выгрузить();
		/////////////////////////////
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	АК_Сертификаты.Количество КАК Количество,
		|	АК_Сертификаты.Сертификат,
		|	АК_Сертификаты.СтруктурнаяЕдиница,
		|	АК_Сертификаты.Сертификат.Сумма * АК_Сертификаты.Количество КАК Сумма
		|ПОМЕСТИТЬ ВТ
		|ИЗ
		|	РегистрСведений.АК_Сертификаты КАК АК_Сертификаты
		|ГДЕ
		|	АК_Сертификаты.ДатаЗаписи МЕЖДУ &ДатаН И &ДатаК
		|	И АК_Сертификаты.ВидОперации = &ВидОперации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Количество КАК Количество,
		|	ВТ.Сертификат,
		|	ВТ.СтруктурнаяЕдиница,
		|	ВТ.Сумма КАК Сумма
		|ИЗ
		|	ВТ КАК ВТ
		|ИТОГИ
		|	СУММА(Количество),
		|	СУММА(Сумма)
		|ПО
		|	ОБЩИЕ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.Сертификат,
		|	СУММА(ВТ.Количество) КАК Количество,
		|	СУММА(ВТ.Сумма) КАК Сумма
		|ИЗ
		|	ВТ КАК ВТ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ.Сертификат
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ.СтруктурнаяЕдиница,
		|	СУММА(ВТ.Сумма) КАК Сумма,
		|	СУММА(ВТ.Количество) КАК Количество
		|ИЗ
		|	ВТ КАК ВТ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ.СтруктурнаяЕдиница";
		
		Запрос.УстановитьПараметр("ВидОперации", Перечисления.АК_ВидыОперацийСертификат.Выдача);
		Запрос.УстановитьПараметр("ДатаК", КонецМесяца(Дата));
		Запрос.УстановитьПараметр("ДатаН", НачалоМесяца(Дата));
		
		Результат = Запрос.ВыполнитьПакет();
		
		ВыборкаОбщийИтог = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ВыборкаОбщийИтог.Следующий();		// Общий итог
		СуммаВыдано = ВыборкаОбщийИтог.Сумма;
		КолВыдано = ВыборкаОбщийИтог.Количество;
		// Вставить обработку выборки ВыборкаОбщийИтог
		
		//ВыборкаДетальныеЗаписи = ВыборкаОбщийИтог.Выбрать();
		//
		//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//	// Вставить обработку выборки ВыборкаДетальныеЗаписи
		//КонецЦикла;

		/////
		//	ВыборкаСерт = Результат[2].Выбрать();
		//		
		//Пока ВыборкаСерт.Следующий() Цикл
		//	// Вставить обработку выборки ВыборкаДетальныеЗаписи
		//КонецЦикла;

		Для каждого Стр Из ДобавилиСертификаты Цикл
			
			Проводка = Движения.Финансовый.Добавить();
			Проводка.Период = КонецМесяца(Дата);	
			Проводка.Организация = ОрганизацияВкусВилл;		
			Проводка.Содержание			= "Создали сертификаты";			
			Проводка.СчетКт = ПланыСчетов.Финансовый.СертификатыНапечатанные;
			Проводка.Сумма = Стр.Сумма;
			Проводка.КоличествоКт = Стр.Количество;
			Проводка.СубконтоКт.Сертификат = Стр.Сертификат;
			
		КонецЦикла;
		
		Для каждого Стр Из ВыдалиСертификаты Цикл
			
			НашлиСтрокуЦФО = ЦФОСтруктурныхЕдиниц.Найти(Стр.СтруктурнаяЕдиница,"СтруктурнаяЕдиница");
			Если НашлиСтрокуЦФО <> Неопределено Тогда 
				ЦФО = НашлиСтрокуЦФО.ЦФО;
			Иначе
				ЦФО =  ЦФО_50;
			КонецЕсли;			
			
			Если Стр.ВидОперации = Перечисления.АК_ВидыОперацийСертификат.Выдача Тогда 
			
			Проводка = Движения.Финансовый.Добавить();
			Проводка.Период = КонецМесяца(Дата);	
			Проводка.Организация = ОрганизацияВкусВилл;		
			Проводка.Содержание			= "Выдали сертификаты";			
			Проводка.СчетДт = ПланыСчетов.Финансовый.СертификатыНапечатанные;
			Проводка.Сумма = Стр.Сумма;
			Проводка.КоличествоДт = Стр.Количество;
			Проводка.СубконтоДт.Сертификат = Стр.Сертификат;		
			
			Проводка = Движения.Финансовый.Добавить();
			Проводка.Период = КонецМесяца(Дата);
			Проводка.Сумма = Стр.Сумма;//ДобавилиКупоновСумма;		
			Проводка.Организация = ОрганизацияВкусВилл;		
			Проводка.Содержание			= "Выдали сертификаты";	
			Проводка.СчетДт 							= ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;//АК_РезервПоБонусам;     //ЗатратыТочекДляРаспределения
			Проводка.СубконтоДт.ТорговыеТочки  			= ЦФО_000;//Стр.СтруктурнаяЕдиница;//Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_000");
			Проводка.СубконтоДт.СтатьиДоходовРасходов	= СтатьиДоходовРасходов21002;
			Проводка.СубконтоДт.ЦФО						= ЦФО_50;
			Проводка.СчетКт								= ПланыСчетов.Финансовый.ПрочаяЗадолженность;
			Проводка.СубконтоКт.Организации				= ОрганизацияВкусВилл;
			Проводка.СубконтоКт.Контрагенты				= Справочники.Контрагенты.НайтиПоКоду("000000405");//СтруктураНастроек.ДопРеквизит1;		
			
		ИначеЕсли Стр.ВидОперации = Перечисления.АК_ВидыОперацийСертификат.Возврат Тогда 
			
			Проводка = Движения.Финансовый.Добавить();
			Проводка.Период = КонецМесяца(Дата);	
			Проводка.Организация = ОрганизацияВкусВилл;		
			Проводка.Содержание			= "Возврат сертификатов";			
			Проводка.СчетДт = ПланыСчетов.Финансовый.СертификатыНапечатанные;
			Проводка.Сумма = Стр.Сумма * -1;
			Проводка.КоличествоДт = Стр.Количество * -1;
			Проводка.СубконтоДт.Сертификат = Стр.Сертификат;
			
			Проводка = Движения.Финансовый.Добавить();
			Проводка.Период = КонецМесяца(Дата);
			Проводка.Сумма = Стр.Сумма ;//ДобавилиКупоновСумма;		
			Проводка.Организация = ОрганизацияВкусВилл;		
			Проводка.Содержание			= "Возврат сертификатов";	
			Проводка.СчетКт 							= ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;//АК_РезервПоБонусам;     //ЗатратыТочекДляРаспределения
			Проводка.СубконтоКт.ТорговыеТочки  			= ЦФО_000;//Стр.СтруктурнаяЕдиница;//Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_000");
			Проводка.СубконтоКт.СтатьиДоходовРасходов	= СтатьиДоходовРасходов21002;
			Проводка.СубконтоКт.ЦФО						= ЦФО_50;
			Проводка.СчетДт								= ПланыСчетов.Финансовый.ПрочаяЗадолженность;
			Проводка.СубконтоДт.Организации				= ОрганизацияВкусВилл;
			Проводка.СубконтоДт.Контрагенты				= Справочники.Контрагенты.НайтиПоКоду("000000405");//СтруктураНастроек.ДопРеквизит1;	
			
		КонецЕсли;
		КонецЦикла;

		////////////////////////////////	
		
		Проводка = Движения.Финансовый.Добавить();
		Проводка.Период = КонецМесяца(Дата);
		Проводка.Сумма = НеИспользованныеЗаКварталСумма;		
		Проводка.Организация = ОрганизацияВкусВилл;		
		Проводка.Содержание			= "Списание не использованных сертификатов";	
		Проводка.СчетДт								= ПланыСчетов.Финансовый.ПрочаяЗадолженность;
		Проводка.СубконтоДт.Организации				= ОрганизацияВкусВилл;
		Проводка.СубконтоДт.Контрагенты				= Справочники.Контрагенты.НайтиПоКоду("000000405");
		Проводка.СчетКт 							= ПланыСчетов.Финансовый.БонусыИСертификаты;
		Проводка.СубконтоКт.ТорговыеТочки  			=  Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_000");
		Проводка.СубконтоКт.СтатьиДоходовРасходов	= Справочники.СтатьиДоходовРасходов.НайтиПоКоду("21003");   
		Проводка.СубконтоКт.ЦФО						= ЦФО_50;
		
		
		ПустаяСсылка = Справочники.Организации.ПустаяСсылка();
		СтатьиДоходовРасходов21001  = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("21002");
		
		Для каждого Стр Из НачисленияПоСертификатам  Цикл		
			
			НашлиСтрокуЦФО = ЦФОСтруктурныхЕдиниц.Найти(Стр.ТорговаяТочка,"СтруктурнаяЕдиница");
			Если НашлиСтрокуЦФО <> Неопределено Тогда 
				ЦФО = НашлиСтрокуЦФО.ЦФО;
			Иначе
				ЦФО =  ЦФО_50;
				//Сообщить("Для торговой точки "+ Стр.ТорговаяТочка +" ЦФО взяли из настроек.");
			КонецЕсли;
			
			Проводка = Движения.Финансовый.Добавить();
			Проводка.Период = КонецМесяца(Дата);
			Проводка.Сумма = Стр.Сумма;		
			Проводка.Организация = ОрганизацияВкусВилл;		
			Проводка.Содержание			= "Списание использованных сертификатов";	
			Проводка.СчетДт								= ПланыСчетов.Финансовый.ПрочаяЗадолженность;
			Проводка.СубконтоДт.Организации				= ОрганизацияВкусВилл;
			Проводка.СубконтоДт.Контрагенты				= Справочники.Контрагенты.НайтиПоКоду("000000405");	
			Проводка.СчетКт 							= ПланыСчетов.Финансовый.БонусыИСертификаты;
			Проводка.СубконтоКт.ТорговыеТочки  			= Стр.ТорговаяТочка;
			Проводка.СубконтоКт.СтатьиДоходовРасходов	= СтатьиДоходовРасходов21002;
			Проводка.СубконтоКт.ЦФО						= ЦФО;
			
		КонецЦикла;
		
	КонецЕсли;
		//---АК BARA
	//		//+++АК BARA 22.03.2017 ИП-00015329.000.00000001
	//Если ВидНачисленияБонуса = Перечисления.ВидыНачисленийБонуса.Месячный и  Дата > Дата('20170101') и КонецКвартала(Дата) = КонецМесяца(Дата) Тогда 
	//	//   	96Б: 60.04 Статья «Бонус по карте» - начисление.
	//	//Но у Сертификатов статья должна быть «Подарки покупателям».
	//	//60.04: 96Б Статья «Бонус по карте» - списание использованных сертификатов,
	//	//но у Сертификатов статья должна быть «Подарки покупателям».
	//	//60.04: 90.5 Статья «Бонус по карте» - списание неиспользованных сертификатов, отдельная статья «Прочие доходы» (уточнить, если не будет статьи).
	//	//Проводки должен делать документ «начисление бонусов».		
	//	//60.04   орг контр  90.05  ТТ, статься, ЦФО.  96Б орг стать цфо
	//	ЦФО_ТТ = Неопределено;
	//	
	//	Проводка = Движения.Финансовый.Добавить();
	//	Проводка.Период = КонецМесяца(Дата);
	//	Проводка.Сумма = ДобавилиКупоновСумма;		
	//	Проводка.Организация = ОрганизацияВкусВилл;		
	//	Проводка.Содержание			= "Начисление сертификатов";	
	//	Проводка.СчетДт 							= ПланыСчетов.Финансовый.АК_РезервПоБонусам;
	//	//Проводка.СубконтоДт.ТорговыеТочки  			= СтрокаНачисление.ТорговаяТочка;
	//	Проводка.СубконтоДт.СтатьиДоходовРасходов	= Справочники.СтатьиДоходовРасходов.НайтиПоКоду("21002");
	//	Проводка.СубконтоДт.ЦФО						= ?(ЗначениеЗаполнено(ЦФО_ТТ), ЦФО_ТТ, СтруктураНастроек.ЦФО);	
	//	Проводка.СчетКт								= ПланыСчетов.Финансовый.ПрочаяЗадолженность;
	//	//Проводка.СубконтоКт.Организации				= ОрганизацияВкусВилл;
	//	Проводка.СубконтоКт.Контрагенты				= СтруктураНастроек.ДопРеквизит1;		
	//	
	//	
	//	Проводка = Движения.Финансовый.Добавить();
	//	Проводка.Период = КонецМесяца(Дата);
	//	Проводка.Сумма = НеИспользованныеЗаКварталСумма;		
	//	Проводка.Организация = ОрганизацияВкусВилл;		
	//	Проводка.Содержание			= "Списание не использованных сертификатов";	
	//	Проводка.СчетДт								= ПланыСчетов.Финансовый.ПрочаяЗадолженность;
	////	Проводка.СубконтоДт.Организации				= ОрганизацияВкусВилл;
	//	Проводка.СубконтоДт.Контрагенты				= СтруктураНастроек.ДопРеквизит1;		
	//	Проводка.СчетКт 							= ПланыСчетов.Финансовый.ВыручкаПрочая;
	////	//Проводка.СубконтоКт.ТорговыеТочки  			= СтрокаНачисление.ТорговаяТочка;
	//	Проводка.СубконтоКт.СтатьиДоходовРасходов	= Справочники.СтатьиДоходовРасходов.НайтиПоКоду("21003");
	//	Проводка.СубконтоКт.ЦФО	     = ?(ЗначениеЗаполнено(ЦФО_ТТ), ЦФО_ТТ, СтруктураНастроек.ЦФО);
	//	
	//	ПустаяСсылка = Справочники.Организации.ПустаяСсылка();
	//	СтатьиДоходовРасходов21001  = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("21002");

	//	Для каждого Стр Из НачисленияПоСертификатам  Цикл		
	//		//СтрокаЦФО = ТабЦФО.Найти(Стр.ТорговаяТочка, "СтруктурнаяЕдиница");
	//		//ЦФО_ТТ = Неопределено;
	//		//Если СтрокаЦФО <> Неопределено Тогда
	//		//	ЦФО_ТТ = СтрокаЦФО.ЦФО;
	//		//ИначеЕсли ЗначениеЗаполнено(Стр.ТорговаяТочка) Тогда 
	//		//	ЦФО_ТТ =  Стр.ТорговаяТочка;
	//		//Иначе
	//		//	 ЦФО_ТТ = СтруктураНастроек.ЦФО  ;
	//		//КонецЕсли;	
	//		Если ЗначениеЗаполнено(Стр.ТорговаяТочка) Тогда 
	//			ЦФО_ТТ =  Стр.ТорговаяТочка;
	//		Иначе
	//			ЦФО_ТТ = СтруктураНастроек.ЦФО  ;
	//		КонецЕсли;	
	//		
	//		//Орг = ПустаяСсылка;
	//		//Если СтрокаЦФО <> Неопределено И ЗначениеЗаполнено(СтрокаЦФО.Организация) Тогда
	//		//	Орг = СтрокаЦФО.Организация;
	//		//ИначеЕсли  ЗначениеЗаполнено(Стр.ТорговаяТочка) Тогда 
	//		//	Орг = Стр.ТорговаяТочка.Организация;
	//		//Иначе
	//		//	 Орг = СтруктураНастроек.ДопРеквизит;
	//		//КонецЕсли;

	//		
	//		Проводка = Движения.Финансовый.Добавить();
	//		Проводка.Период = КонецМесяца(Дата);
	//		Проводка.Сумма = Стр.Сумма;		
	//		Проводка.Организация = ОрганизацияВкусВилл;		
	//		Проводка.Содержание			= "Списание использованных сертификатов";	
	//		Проводка.СчетДт								= ПланыСчетов.Финансовый.ПрочаяЗадолженность;
	//		//Проводка.СубконтоДт.Организации				= ОрганизацияВкусВилл;
	//		Проводка.СубконтоДт.Контрагенты				= СтруктураНастроек.ДопРеквизит1;		
	//		Проводка.СчетКт 							= ПланыСчетов.Финансовый.АК_РезервПоБонусам;
	//		//Проводка.СубконтоКт.Организации  			= ОрганизацияВкусВилл;
	//		Проводка.СубконтоКт.СтатьиДоходовРасходов	= СтатьиДоходовРасходов21001;
	//		Проводка.СубконтоКт.ЦФО						= ЦФО_ТТ;//Стр.ТорговаяТочка;

	//	КонецЦикла;

	//КонецЕсли;
	//	//---АК BARA

КонецПроцедуры
