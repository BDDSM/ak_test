
Процедура ПриЗаписи(Отказ)
	
	МассивМагазинов = СоздатьЗадачиПоЗаданию();
	Если НЕ ОбменДанными.Загрузка И МассивМагазинов.Количество() > 0 Тогда
		Документы.ЗаданиеНаДегустациюНовинки.СформироватьСообщенияМагазинам(Ссылка, МассивМагазинов);
	КонецЕсли;
	//АК БЕЛН 13.06.2017+
	//ОтправитьПисьмо();	
	//АК БЕЛН 13.06.2017-
КонецПроцедуры

Функция СоздатьЗадачиПоЗаданию() Экспорт
	
	МассивМагазинов = Новый Массив;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗадачаНаДегустациюНовинки.Магазин
		|ПОМЕСТИТЬ Магазины
		|ИЗ
		|	Документ.ЗадачаНаДегустациюНовинки КАК ЗадачаНаДегустациюНовинки
		|ГДЕ
		|	ЗадачаНаДегустациюНовинки.ЗаданиеНаДегустациюНовинки = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.ТорговаяТочка КАК Магазин,
		|	ЦеныНоменклатурыСрезПоследних.Цена
		|ПОМЕСТИТЬ РозничныеЦеныПоМагазинам
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			&Дата,
		|			Номенклатура = &Номенклатура
		|				И ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.ОсновнойТипЦенПродаж)
		|				И НЕ ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)) КАК ЦеныНоменклатурыСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЦеныНоменклатурыСрезПоследних.Цена
		|ПОМЕСТИТЬ РозничныеЦеныОбщие
		|ИЗ
		|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|			&Дата,
		|			Номенклатура = &Номенклатура
		|				И ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.ОсновнойТипЦенПродаж)
		|				И ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)) КАК ЦеныНоменклатурыСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокЗаданиеНаДегустациюНовинки.Ссылка КАК ЗаданиеНаДегустациюНовинки,
		|	ЗаданиеНаДегустациюНовинкиМагазины.Магазин КАК Магазин,
		|	ДокЗаданиеНаДегустациюНовинки.Номенклатура,
		|	ДокЗаданиеНаДегустациюНовинки.ХарактеристикаНоменклатуры,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(РозничныеЦеныПоМагазинам.Цена, 0) = 0
		|			ТОГДА РозничныеЦеныОбщие.Цена
		|		ИНАЧЕ РозничныеЦеныПоМагазинам.Цена
		|	КОНЕЦ КАК РозничнаяЦена
		|ИЗ
		|	Документ.ЗаданиеНаДегустациюНовинки КАК ДокЗаданиеНаДегустациюНовинки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаДегустациюНовинки.Магазины КАК ЗаданиеНаДегустациюНовинкиМагазины
		|		ПО ДокЗаданиеНаДегустациюНовинки.Ссылка = ЗаданиеНаДегустациюНовинкиМагазины.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Магазины КАК ЕстьМагазины
		|		ПО (ЗаданиеНаДегустациюНовинкиМагазины.Магазин = ЕстьМагазины.Магазин)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РозничныеЦеныПоМагазинам КАК РозничныеЦеныПоМагазинам
		|		ПО (ЗаданиеНаДегустациюНовинкиМагазины.Магазин = РозничныеЦеныПоМагазинам.Магазин)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РозничныеЦеныОбщие КАК РозничныеЦеныОбщие
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ДокЗаданиеНаДегустациюНовинки.Ссылка = &Ссылка
		|	И ЕстьМагазины.Магазин ЕСТЬ NULL");
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("Номенклатура", ЭтотОбъект.Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда Возврат МассивМагазинов; КонецЕсли;
	
	ВыборкаМагазин = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМагазин.Следующий() Цикл
		
		ТекМагазин = ВыборкаМагазин.Магазин;
		
		ЗадачаОбъект = Документы.ЗадачаНаДегустациюНовинки.СоздатьДокумент();
		ЗадачаОбъект.Дата = ТекущаяДата();
		//ЗадачаОбъект.УстановитьНовыйНомер();
		ЗаполнитьЗначенияСвойств(ЗадачаОбъект, ВыборкаМагазин);	
		ЗадачаОбъект.Записать();
		
		Сообщить("Создана " + ЗадачаОбъект.Ссылка + " по " + ТекМагазин);
		
		МассивМагазинов.Добавить(ТекМагазин);
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат МассивМагазинов;
	
КонецФункции

Процедура ОбновитьСписокМагазинов(ДатаНач = '00010101') Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Магазины.Магазин
		|ПОМЕСТИТЬ Магазины
		|ИЗ
		|	&Магазины КАК Магазины
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Магазины.Магазин КАК Магазин,
		|	ВЫРАЗИТЬ(Магазины.Магазин КАК Справочник.СтруктурныеЕдиницы).НомерТочки КАК НомерТочки
		|ИЗ
		|	Магазины КАК Магазины
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РасходныйОрдерСклад.Получатель,
		|	ВЫРАЗИТЬ(РасходныйОрдерСклад.Получатель КАК Справочник.СтруктурныеЕдиницы).НомерТочки
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Обороты(
		|			,
		|			,
		|			Регистратор,
		|			Номенклатура = &Номенклатура
		|				И Характеристика = &ХарактеристикаНоменклатуры) КАК ТоварыНаСкладахОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
		|		ПО ТоварыНаСкладахОбороты.Регистратор = РасходныйОрдерСклад.Ссылка
		|ГДЕ
		|	ТоварыНаСкладахОбороты.Регистратор ССЫЛКА Документ.РасходныйОрдерСклад
		|	И РасходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
		|	И РасходныйОрдерСклад.Получатель.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходныйОрдерСклад.Получатель
		|
		|ИМЕЮЩИЕ
		|	МИНИМУМ(РасходныйОрдерСклад.Дата) МЕЖДУ &ДатаНач И &ДатаКон
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерТочки
		|АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("ДатаНач", ?(ДатаНач = Дата(1,1,1), НачалоДня(Дата), ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Магазины", Магазины.Выгрузить());
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", ХарактеристикаНоменклатуры);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Магазины.Загрузить(РезультатЗапроса.Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	Автор = ПараметрыСеанса.ТекущийПользователь;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Документы.ЗаданиеНаДегустациюНовинки.ЗакрытьЗадачиПоЗаданию(Ссылка);
	
	ДокИнвентаризацияСкладОбъект = Документы.ИнвентаризацияСклад.СоздатьДокумент();
	ДокИнвентаризацияСкладОбъект.Заполнить(ЭтотОбъект.Ссылка);
	Если ДокИнвентаризацияСкладОбъект.Товары.Количество() > 0 Тогда
		ДокИнвентаризацияСкладОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	
КонецПроцедуры

//АК БЕЛН 13.06.2017+
Процедура ОтправитьПисьмо()
	
	СтруктураНовогоПисьма 	= Новый Структура;
	СтруктураНовогоПисьма.Вставить("ВидТекста", Перечисления.ВидыТекстовЭлектронныхПисем.Текст);
	
	СписокФайловВложений 	= Новый СписокЗначений;
	//
	СтруктураНовогоПисьма.Вставить("Тема", "Добавлено задание на дегустацию "+Строка(Ссылка)+" по "+Строка(Номенклатура)+" "+Строка(ХарактеристикаНоменклатуры));
	СтруктураНовогоПисьма.Вставить("Тело", "Добавлено задание на дегустацию "+Строка(Ссылка)+" по "+Строка(Номенклатура)+" "+Строка(ХарактеристикаНоменклатуры));
	
	
	
	СтруктураНовогоПисьма.Вставить("СписокФайловВложений", СписокФайловВложений);
	
	Кому 			= Новый СписокЗначений;
	МассивАдресов	= Новый Массив;
	
	//
 
	
	МасФЛ = ОбщегоНазначенияСервер.ПолучитьФизЛицТипаРолиИсполнителя(ПланыВидовХарактеристик.ТипыРолейПользователя.БрендМенеджер, null, ХарактеристикаНоменклатуры, null, null, ТекущаяДата(), Неопределено, Истина);
	Для каждого Эл Из МасФЛ Цикл
		МассивАдресов.Добавить(Эл);
	КонецЦикла; 
	
	МасФЛ = ОбщегоНазначенияСервер.ПолучитьФизЛицТипаРолиИсполнителя(ПланыВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству, null, ХарактеристикаНоменклатуры, null, null, ТекущаяДата(), Неопределено, Истина);
	Для каждого Эл Из МасФЛ Цикл
		МассивАдресов.Добавить(Эл);
	КонецЦикла; 
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Объект", МассивАдресов);
	Запрос.Текст =                                                                                   
	"ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект В(&Объект)
	|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество()>0 Тогда
		Пока Выборка.Следующий() Цикл
			Если Кому.НайтиПоЗначению(Выборка.Представление) = Неопределено Тогда
				Кому.Добавить(Выборка.Представление);
			КонецЕсли; 
		КонецЦикла;
	Иначе
		Кому.Добавить("sp@vkusvill.ru");
	КонецЕсли;
	
	СтруктураНовогоПисьма.Вставить("Кому", Кому);
	
	
	СтрКому = "";
	Для каждого Эл Из Кому Цикл
		СтрКому = СтрКому + Эл.Значение + "; ";
	КонецЦикла; 
	Попытка
		ОбщегоНазначенияКлиентСервер.ОтправитьПисьмоПоПочте(СтруктураНовогоПисьма);
		Сообщить("Отправлено письмо с информацией об дегустации на " + СтрКому);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
	
КонецПроцедуры
//АК БЕЛН 13.06.2017-
