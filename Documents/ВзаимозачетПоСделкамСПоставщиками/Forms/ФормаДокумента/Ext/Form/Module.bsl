
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 07.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Взаимозачет по сделкам с поставщиками");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	Если Не ЗначениеЗаполнено(объект.Ссылка) Тогда
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;	
	ТекстЗапроса="ВЫБРАТЬ
	             |	СделкаСПоставщикомГрафикОплат.Ссылка КАК Сделка,
	             |	СделкаСПоставщикомГрафикОплат.НомерСтроки,
	             |	СделкаСПоставщикомГрафикОплат.СуммаОплаты,
	             |	СделкаСПоставщикомГрафикОплат.СтруктурнаяЕдиница,
	             |	СделкаСПоставщикомГрафикОплат.НомерСтрокиГрафика КАК Этап,
	             |	СделкаСПоставщикомГрафикОплат.УИН_Строки,
	             |	СделкаСПоставщикомГрафикОплат.ДатаПлатежа,
	             |	СделкаСПоставщикомГрафикОплат.Номенклатура,
	             |	СделкаСПоставщикомГрафикОплат.Количество,
	             |	СделкаСПоставщикомГрафикОплат.Цена,
	             |	СделкаСПоставщикомГрафикОплат.ДатаГотовности,
	             |	СделкаСПоставщикомГрафикОплат.УИН_ПервойСтроки,
	             |	ЕСТЬNULL(КомплектацияМагазинаПоСделкамСПоставщикомКомплектация.Ссылка.Магазин, СделкаСПоставщикомГрафикОплат.СтруктурнаяЕдиница) КАК Магазин,
	             |	КомплектацияМагазинаПоСделкамСПоставщикомКомплектация.АктПодписан КАК АктПодписан,
	             |	КомплектацияМагазинаПоСделкамСПоставщикомКомплектация.УИН_Строки КАК УИН_СтрокиКомплектации,
	             |	КомплектацияМагазинаПоСделкамСПоставщикомКомплектация.Ссылка КАК Комплектация
	             |ИЗ
	             |	Документ.СделкаСПоставщиком.ГрафикОплат КАК СделкаСПоставщикомГрафикОплат
	             |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.КомплектацияМагазинаПоСделкамСПоставщиком.Комплектация КАК КомплектацияМагазинаПоСделкамСПоставщикомКомплектация
	             |		ПО СделкаСПоставщикомГрафикОплат.Ссылка = КомплектацияМагазинаПоСделкамСПоставщикомКомплектация.Сделка
				 //|			И СделкаСПоставщикомГрафикОплат.УИН_ПервойСтроки = КомплектацияМагазинаПоСделкамСПоставщикомКомплектация.УИН_СтрокиСделки
	             |ГДЕ
	             |	СделкаСПоставщикомГрафикОплат.Ссылка В(&Сделки)";
	Запрос = Новый Запрос(ТекстЗапроса);			 
	МассивСделок = Новый Массив;
	//МассивСтрокСделок = Новый Массив;
	Для Каждого Стр Из Объект.ЧтоЗачитывать Цикл
		МассивСделок.Добавить(Стр.Сделка);
		//МассивСтрокСделок.Добавить(Стр.УИН_Этапа);
	КонецЦикла;	
	Для Каждого Стр Из Объект.НаЧтоЗачитывать Цикл
		МассивСделок.Добавить(Стр.Сделка);
		//МассивСтрокСделок.Добавить(Стр.УИН_Этапа);
	КонецЦикла;	
		
	Запрос.УстановитьПараметр("Сделки",МассивСделок);
	//Запрос.УстановитьПараметр("УИН_Строки",МассивСтрокСделок);
	
	КэшДанных = Запрос.Выполнить().Выгрузить();
	Для Каждого Стр Из Объект.ЧтоЗачитывать Цикл
		СтруктураПоиска=новый Структура;
		СтруктураПоиска.Вставить("Сделка",Стр.Сделка);
		СтруктураПоиска.Вставить("УИН_Строки",Стр.УИН_Этапа);
		Если ЗначениеЗаполнено(Стр.Комплектация) Тогда
			СтруктураПоиска.Вставить("Комплектация",Стр.Комплектация);
			СтруктураПоиска.Вставить("УИН_СтрокиКомплектации",Стр.УИН_СтрокиКомплектации);
		иначе
			
		КонецЕсли;
		СтрокиДанных=КэшДанных.НайтиСтроки(СтруктураПоиска);
		Если СтрокиДанных.Количество()>0 Тогда
			ЗаполнитьЗначенияСвойств(Стр,СтрокиДанных[0],"Магазин,АктПодписан,Номенклатура,Цена,Этап");
		Иначе
			Если ЗначениеЗаполнено(Стр.Комплектация) Тогда
				СтруктураПоиска.Вставить("Комплектация",Стр.Комплектация);
				СтруктураПоиска.Удалить("УИН_СтрокиКомплектации");
				СтрокиДанных=КэшДанных.НайтиСтроки(СтруктураПоиска);
				Если СтрокиДанных.Количество()>0 Тогда
					ЗаполнитьЗначенияСвойств(Стр,СтрокиДанных[0],"Магазин,Номенклатура,Цена,Этап");
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
	
	Для Каждого Стр Из Объект.НаЧтоЗачитывать Цикл
		СтруктураПоиска=новый Структура;
		СтруктураПоиска.Вставить("Сделка",Стр.Сделка);
		СтруктураПоиска.Вставить("УИН_Строки",Стр.УИН_Этапа);
		Если ЗначениеЗаполнено(Стр.Комплектация) Тогда
			СтруктураПоиска.Вставить("Комплектация",Стр.Комплектация);
			//СтруктураПоиска.Вставить("УИН_СтрокиКомплектации",Стр.УИН_СтрокиКомплектации);
		иначе
			
		КонецЕсли;
		СтрокиДанных=КэшДанных.НайтиСтроки(СтруктураПоиска);
		Если СтрокиДанных.Количество()>0 Тогда
			ЗаполнитьЗначенияСвойств(Стр,СтрокиДанных[0],"Магазин,АктПодписан,Номенклатура,Цена,Этап");
		Иначе
			Если ЗначениеЗаполнено(Стр.Комплектация) Тогда
				СтруктураПоиска.Вставить("Комплектация",Стр.Комплектация);
				СтруктураПоиска.Удалить("УИН_СтрокиКомплектации");
				СтрокиДанных=КэшДанных.НайтиСтроки(СтруктураПоиска);
				Если СтрокиДанных.Количество()>0 Тогда
					ЗаполнитьЗначенияСвойств(Стр,СтрокиДанных[0],"Магазин,Номенклатура,Цена,Этап");
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьМинус(Команда)
	Если Объект.Проведен Тогда
		Предупреждение("Для отображения корректных остатков, нужно распровести документ");
	КонецЕсли;	
	Парам=Новый Структура;
	Парам.Вставить("ЗакрыватьПриВыборе",Ложь);
	Парам.Вставить("Режим",1);
	Парам.Вставить("Контрагент",Объект.Контрагент);
		
	ОткрытьФорму("Документ.ВзаимозачетПоСделкамСПоставщиками.Форма.ФормаПодбораОстатков",Парам,ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ИсточникВыбора.ИмяФормы = "Документ.ВзаимозачетПоСделкамСПоставщиками.Форма.ФормаПодбораОстатков" Тогда
		
		//Объект.Комплектация.Очистить();
		//НеоплаченныеСтроки=Новый Массив;
		ВыбранныеСтроки=ВыбранноеЗначение.ВыбранныеСтроки;
		Для каждого ВыбраннаяСтрока Из ВыбранныеСтроки Цикл
			Если ВыбранноеЗначение.Режим = 1 Тогда
				НоваяСтрока = Объект.ЧтоЗачитывать.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыбраннаяСтрока);
				НоваяСтрока.Сумма = -НоваяСтрока.Сумма;
			Иначе
				НоваяСтрока = Объект.НаЧтоЗачитывать.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыбраннаяСтрока);
			КонецЕсли;	
			
		КонецЦикла;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПлюсы(Команда)
	Если Объект.Проведен Тогда
		Предупреждение("Для отображения корректных остатков, нужно распровести документ");
	КонецЕсли;	
	Парам=Новый Структура;
	Парам.Вставить("ЗакрыватьПриВыборе",Ложь);
	Парам.Вставить("Режим",2);
	Парам.Вставить("Контрагент",Объект.Контрагент);
		
	ОткрытьФорму("Документ.ВзаимозачетПоСделкамСПоставщиками.Форма.ФормаПодбораОстатков",Парам,ЭтаФорма);
КонецПроцедуры

//+++АК sils 07.06.2018 ИП-00018876
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
КонецПроцедуры



