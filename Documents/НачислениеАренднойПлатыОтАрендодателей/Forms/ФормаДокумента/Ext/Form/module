
Перем мТаблицаЗаявок;
Перем мТекущийПериод;
Перем мВалютаРегл;
Перем СписокТТсОшибочнойПлощадью;

Перем ОперацияАпдекс; //+++АК sils 07.06.2018 ИП-00018876

/////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура УстановитьБыстрыйОтбор()
	
	мОтборСтрок = ЭлементыФормы.НачислениеАренды.ОтборСтрок;
	мОтборСтрок.Сбросить();
	
	Если НЕ ЗначениеЗаполнено(ОтборЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	//
	ЭлементОтбора = мОтборСтрок.Найти(ОтборВид); 
	Если ЭлементОтбора = Неопределено Тогда
		ЭлементОтбора = мОтборСтрок.Добавить(ОтборВид);
	КонецЕсли;
		
	ЭлементОтбора.Установить(ОтборЗначение);
	
КонецПроцедуры

Процедура УстановитьВидимость()
	
	ЭтоПеременнаяЧасть = (ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть);
	
	мКолонки = ЭлементыФормы.НачислениеАренды.Колонки;
	////мКолонки.ДатаСФ.Видимость 		= ЭтоПеременнаяЧасть;
	////мКолонки.НомерСФ.Видимость 		= ЭтоПеременнаяЧасть;
	////мКолонки.ДатаАкта.Видимость 	= ЭтоПеременнаяЧасть;
	////мКолонки.НомерАкта.Видимость 	= ЭтоПеременнаяЧасть;
	мКолонки.СуммаБух.Видимость 	= ЭтоПеременнаяЧасть;
	//////мКолонки.ВыгружатьВБухгалтерию.Видимость = ЭтоПеременнаяЧасть;
	////
	//////+++ AK suvv 05.04.2018 ИП-00018025.02
	////мКолонки = ЭлементыФормы.ПрочаяЗадолженность.Колонки;
	////мКолонки.ДатаСФ.Видимость 		= ЭтоПеременнаяЧасть;
	////мКолонки.НомерСФ.Видимость 		= ЭтоПеременнаяЧасть;
	////мКолонки.ДатаАкта.Видимость 	= ЭтоПеременнаяЧасть;
	////мКолонки.НомерАкта.Видимость 	= ЭтоПеременнаяЧасть;
	//////--- AK suvv
	
	//+++АК GEYV 02.07.2015
	ВидимостьСчета = (ЭтотОбъект.Дата >= '20150501');
	ЭлементыФормы.ПрочаяЗадолженность.Колонки.СчетДт.Видимость = ВидимостьСчета;
	//---АК
	
	ДопПравоМСФО = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.МСФО_ПоАренде, Ложь);
	
	//+++АК sils 17.08.2017 ИП-00014584
	Если ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПостояннаяЧасть и (РольДоступна("АК_РаботаСАрендойМСФО") ИЛИ ДопПравоМСФО) Тогда
		ЭлементыФормы.ОсновнаяПанель.Страницы.МСФО.Видимость = Истина;
	Иначе
		ЭлементыФормы.ОсновнаяПанель.Страницы.МСФО.Видимость = Ложь;
	КонецЕсли;
	//---АК
	
	//++++ АК AZAP 21.02.2017 ИП-00014747
	Если (НЕ РольДоступна("АК_РаботаСАрендойМСФО") И НЕ ДопПравоМСФО) ИЛИ ТипАренднойПлаты <> Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть Тогда
		Если ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.Найти("РасчитатьДляМСФО") <> Неопределено Тогда
			ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.Удалить(ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.РасчитатьДляМСФО);
		КонецЕсли;
		Если ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.Найти("НастройкиРасчетаАрендыМСФО") <> Неопределено Тогда
			ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.Удалить(ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.НастройкиРасчетаАрендыМСФО);
		КонецЕсли;
		ЭлементыФормы.НачислениеАренды.Колонки.АК_ВидАлгоритма.Видимость = Ложь;
		ЭлементыФормы.НачислениеАренды.Колонки.АК_РасчетнаяСумма.Видимость = Ложь;
		ЭлементыФормы.НачислениеАренды.Колонки.АК_РучнаяКорректировкаРасчетнойСуммы.Видимость = Ложь;
	ИначеЕсли (РольДоступна("АК_РаботаСАрендойМСФО") ИЛИ ДопПравоМСФО) И ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть Тогда
		Если ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.Найти("РасчитатьДляМСФО") = Неопределено Тогда
			ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.Добавить("РасчитатьДляМСФО", ТипКнопкиКоманднойПанели.Действие, "Расчитать для МСФО", Новый Действие("КоманднаяПанельНачислениеАрендыРасчитатьДляМСФО"));
		КонецЕсли;
		Если ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.Найти("НастройкиРасчетаАрендыМСФО") = Неопределено Тогда
			ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.Добавить("НастройкиРасчетаАрендыМСФО", ТипКнопкиКоманднойПанели.Действие, "Настройки расчета аренды МСФО", Новый Действие("КоманднаяПанельНачислениеАрендыНастройкиРасчетаАрендыМСФО"));
		КонецЕсли;
		ЭлементыФормы.НачислениеАренды.Колонки.АК_ВидАлгоритма.Видимость = Истина;
		ЭлементыФормы.НачислениеАренды.Колонки.АК_РасчетнаяСумма.Видимость = Истина;
		ЭлементыФормы.НачислениеАренды.Колонки.АК_РучнаяКорректировкаРасчетнойСуммы.Видимость = Истина;
	КонецЕсли;
	//---- АК AZAP
	
	//+++АК POZM 2018.01.10 ИП-00017514 
	ЭлементыФормы.ВидАренднойПлаты.Видимость = ЭтоПеременнаяЧасть;
	ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.ДобавитьСтрокуПоЗаявке.Доступность = ЭтоПеременнаяЧасть  И ВидАренднойПлаты = Перечисления.ВидыАренднойПлаты.ПоСчету;
	//---АК POZM
	
	//+++АК SUVV 2018.03.20 ИП-00018025
	КнопкиКоманднойПанели = ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки;
	КнопкаОткрытьЗаявку = КнопкиКоманднойПанели.Найти("ОткрытьЗаявку");
	Если КнопкаОткрытьЗаявку <> неопределено и ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть и ВидАренднойПлаты = Перечисления.ВидыАренднойПлаты.ПоСчету Тогда
		ИндексКнопкиОткрытьЗаявку = КнопкиКоманднойПанели.Индекс(КнопкаОткрытьЗаявку);
		ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.Удалить(ИндексКнопкиОткрытьЗаявку);
	ИначеЕсли  КнопкаОткрытьЗаявку = неопределено  и не (ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть и ВидАренднойПлаты = Перечисления.ВидыАренднойПлаты.ПоСчету) Тогда
		ОбработкаОткрытьЗаявку = Новый Действие("ОткрытьЗаявку");
		ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.Добавить("ОткрытьЗаявку", ТипКнопкиКоманднойпанели.Действие, "Заявка", ОбработкаОткрытьЗаявку);
	КонецЕсли;
	//---АК SUVV
	
	//+++ AK suvv 2018.03.20 ИП-00018071
	Если ЭтотОбъект.Дата < Дата(2018,03,01) Тогда 
		ЭлементыФормы.НачислениеАренды.Колонки.СуммаНДФЛ.Видимость = Ложь;
		ЭлементыФормы.ПрочаяЗадолженность.Колонки.СуммаНДФЛ.Видимость = Ложь;
	Иначе
		ЭлементыФормы.НачислениеАренды.Колонки.СуммаНДФЛ.Видимость = Истина;
		ЭлементыФормы.ПрочаяЗадолженность.Колонки.СуммаНДФЛ.Видимость = Истина;
	КонецЕсли;
	//--- AK suvv
	
КонецПроцедуры

//+++ AK suvv 05.04.2018 ИП-00018025.02
//Функция ОчиститьНачисленияАренды(Обязательно = Ложь)	
//	
//	Если ЭтотОбъект.НачислениеАренды.Количество() > 0 Тогда
//		Если Обязательно Тогда
//			Если Вопрос("Табличная часть <Начисление аренды> будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
//				Возврат Ложь;
//			КонецЕсли;
//		ИначеЕсли Вопрос("Очистить табличную часть <Начисление аренды>?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
//			Возврат Истина;
//		КонецЕсли;
//	КонецЕсли;
//	
//	ЕстьСтрокиСБухДанными = Ложь;
//	
//	Для Каждого СтрокаТЧ Из ЭтотОбъект.НачислениеАренды Цикл
//		Если СтрокаТЧ.ВыгружатьВБухгалтерию
//				//++++ АК AZAP 28.02.2017 ИП-00014747
//				ИЛИ (НЕ РольДоступна("АК_РаботаСАрендойМСФО") И СтрокаТЧ.АК_РасчетнаяСумма > 0)
//				//---- АК AZAP
//				ИЛИ ЗначениеЗаполнено(СтрокаТЧ.СуммаБух)
//				ИЛИ ЗначениеЗаполнено(СтрокаТЧ.НомерАкта)
//				ИЛИ ЗначениеЗаполнено(СтрокаТЧ.ДатаАкта)
//				ИЛИ ЗначениеЗаполнено(СтрокаТЧ.НомерСФ)
//				ИЛИ ЗначениеЗаполнено(СтрокаТЧ.ДатаСФ) Тогда
//			ЕстьСтрокиСБухДанными = Истина;
//			Прервать;
//		КонецЕсли;
//	КонецЦикла;	
//	
//	Если ЕстьСтрокиСБухДанными Тогда
//		Предупреждение("Табличная часть оставлена без изменений, поскольку в ней есть строки, с внесенными бухгалтерскими данными!");
//		Возврат ?(Обязательно, Ложь, Истина);
//	КонецЕсли;
//		
//	ЭтотОбъект.НачислениеАренды.Очистить();
//	
//	Возврат Истина;
//	
//КонецФункции  //--- AK suvv

//+++ AK suvv 05.04.2018 ИП-00018025.02
Функция ЕстьСтрокиСБухДаннымиТЧНачислениеАренды()
	
	Для Каждого СтрокаТЧ Из ЭтотОбъект.НачислениеАренды Цикл
		Если СтрокаТЧ.ВыгружатьВБухгалтерию
			ИЛИ (НЕ РольДоступна("АК_РаботаСАрендойМСФО") И СтрокаТЧ.АК_РасчетнаяСумма > 0)
			ИЛИ ЗначениеЗаполнено(СтрокаТЧ.СуммаБух)
			ИЛИ ЗначениеЗаполнено(СтрокаТЧ.НомерАкта)
			ИЛИ ЗначениеЗаполнено(СтрокаТЧ.ДатаАкта)
			ИЛИ ЗначениеЗаполнено(СтрокаТЧ.НомерСФ)
			ИЛИ ЗначениеЗаполнено(СтрокаТЧ.ДатаСФ) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции //--- AK suvv

//+++ AK suvv 05.04.2018 ИП-00018025.02
Функция ЕстьСтрокиСБухДаннымиТЧПрочаяЗадолженность()
	
	Для Каждого СтрокаТЧ Из ЭтотОбъект.ПрочаяЗадолженность Цикл
		Если СтрокаТЧ.ВыгружатьВБухгалтерию
			ИЛИ ЗначениеЗаполнено(СтрокаТЧ.НомерАкта)
			ИЛИ ЗначениеЗаполнено(СтрокаТЧ.ДатаАкта)
			ИЛИ ЗначениеЗаполнено(СтрокаТЧ.НомерСФ)
			ИЛИ ЗначениеЗаполнено(СтрокаТЧ.ДатаСФ) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции //--- AK suvv

//+++ AK suvv 05.04.2018 ИП-00018025.02
Функция ОчиститьНачисленияАренды(Обязательно = Ложь)
	
	Если ЭтотОбъект.НачислениеАренды.Количество() > 0 или ЭтотОбъект.ПрочаяЗадолженность.Количество() > 0 Тогда
		Если Вопрос("Табличные части <Начисление аренды> и ""Прочая задолженность"" будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
		
	Если ЕстьСтрокиСБухДаннымиТЧНачислениеАренды() Тогда 
		Сообщить("Табличная часть ""Начисление аренды"" не может быть очищена, поскольку в ней есть строки с внесенными бухгалтерскими данными!");
		Возврат Ложь;
	КонецЕсли;
	
	Если ЕстьСтрокиСБухДаннымиТЧПрочаяЗадолженность() Тогда 
		Сообщить("Табличная часть ""Прочая задолженность"" не может быть очищена, поскольку в ней есть строки с внесенными бухгалтерскими данными!");
		Возврат Ложь;
	КонецЕсли;
	 		
	ЭтотОбъект.НачислениеАренды.Очистить();
	ЭтотОбъект.ПрочаяЗадолженность.Очистить();
	
	Возврат Истина;
	
КонецФункции //---AK suvv

Процедура ЗаполнитьСтрокиНачислениеАренды()

	//+++ AK suvv 04.04.2018 ИП-00018071
	Если ЭтотОбъект.Дата < Дата(2018, 03, 01) Тогда 
		РассчитыватьНДФЛ = Ложь;
	Иначе
		РассчитыватьНДФЛ = ?(ЭтотОбъект.ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПостояннаяЧасть или ЭтотОбъект.ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть и ЭтотОбъект.ВидАренднойПлаты = Перечисления.ВидыАренднойПлаты.Фиксированная, Истина, Ложь);
	КонецЕсли;
	//--- AK suvv
	
	// получение данных для заполнения
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода"			, НачалоМесяца(ЭтотОбъект.ПериодРегистрации));
	Запрос.УстановитьПараметр("ДатаСравненияЛистовУчета", Мин(КонецМесяца(ЭтотОбъект.ПериодРегистрации), ТекущаяДата()));
	Запрос.УстановитьПараметр("ФормаОплаты"				, ЭтотОбъект.ФормаОплаты);
	Запрос.УстановитьПараметр("ТипАренднойПлаты"		, ЭтотОбъект.ТипАренднойПлаты);
	Запрос.УстановитьПараметр("СтавкаНДС"				, ЭтотОбъект.СтавкаНДС);
	Запрос.УстановитьПараметр("ЦФО"						, Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_18")); //Управление исполнительное
	Запрос.УстановитьПараметр("ВалютаРегл"				, мВалютаРегл);
	Запрос.УстановитьПараметр("ДатаДокумента"			, ЭтотОбъект.Дата);
	//+++ AK suvv 04.04.2018 ИП-00018071
	Запрос.УстановитьПараметр("РассчитыватьНДФЛ"        , РассчитыватьНДФЛ);
	//---AK suvv 
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоговорыКонтрагентов.Ссылка
	|ПОМЕСТИТЬ Договоры
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСПоставщиком.Аренда)
	|	И ДоговорыКонтрагентов.ОбъектАренды <> ЗНАЧЕНИЕ(Справочник.ОбъектыАренды.ПустаяСсылка)
	|	И ДоговорыКонтрагентов.ОбъектАренды.СтруктурнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(РасторжениеДоговораАренды.ДоговорКонтрагента, ВложенныйЗапросСрокиДействия.ДоговорКонтрагента) КАК ДоговорКонтрагента,
	|	МАКСИМУМ(ЕСТЬNULL(РасторжениеДоговораАренды.ДатаОкончанияДоговора, ВложенныйЗапросСрокиДействия.ДатаОкончанияДоговора)) КАК ДатаОкончанияДоговора
	|ПОМЕСТИТЬ ДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДополнительноеСоглашение.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		МАКСИМУМ(ДополнительноеСоглашение.ДатаОкончанияДоговора) КАК ДатаОкончанияДоговора
	|	ИЗ
	|		Документ.ДополнительноеСоглашение КАК ДополнительноеСоглашение
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДополнительноеСоглашение.ДоговорКонтрагента
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаключениеДоговораАренды.ДоговорКонтрагента,
	|		МАКСИМУМ(ЗаключениеДоговораАренды.ДатаОкончанияДоговора)
	|	ИЗ
	|		Документ.ЗаключениеДоговораАренды КАК ЗаключениеДоговораАренды
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаключениеДоговораАренды.ДоговорКонтрагента) КАК ВложенныйЗапросСрокиДействия
	|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.РасторжениеДоговораАренды КАК РасторжениеДоговораАренды
	|		ПО ВложенныйЗапросСрокиДействия.ДоговорКонтрагента = РасторжениеДоговораАренды.ДоговорКонтрагента
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(РасторжениеДоговораАренды.ДоговорКонтрагента, ВложенныйЗапросСрокиДействия.ДоговорКонтрагента)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ЛистУчета.Дата) КАК Дата,
	|	ЛистУчета.ТорговаяТочка
	|ПОМЕСТИТЬ ЛистыУчета
	|ИЗ
	|	Документ.ЛистУчета КАК ЛистУчета
	|ГДЕ
	|	ЛистУчета.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ЛистУчета.ТорговаяТочка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Договор,
	|	ВложенныйЗапрос.ДатаОкончанияДоговора,
	|	ВложенныйЗапрос.ДатаПоследнегоЛистаУчета,
	|	ВложенныйЗапрос.ТорговаяТочка,
	|	РАЗНОСТЬДАТ(ВложенныйЗапрос.ДатаПоследнегоЛистаУчета, &ДатаСравненияЛистовУчета, ДЕНЬ) КАК СрокПоследнегоЛистаУчета
	|ПОМЕСТИТЬ ДоговорыПоСрокамИспользования
	|ИЗ
	|	(ВЫБРАТЬ
	|		Договоры.Ссылка КАК Договор,
	|		ЕСТЬNULL(ДС.ДатаОкончанияДоговора, Договоры.Ссылка.СрокДействия) КАК ДатаОкончанияДоговора,
	|		ЛистыУчета.Дата КАК ДатаПоследнегоЛистаУчета,
	|		Договоры.Ссылка.ОбъектАренды.СтруктурнаяЕдиница КАК ТорговаяТочка
	|	ИЗ
	|		Договоры КАК Договоры
	|			ЛЕВОЕ СОЕДИНЕНИЕ ДС КАК ДС
	|			ПО Договоры.Ссылка = ДС.ДоговорКонтрагента
	|			ЛЕВОЕ СОЕДИНЕНИЕ ЛистыУчета КАК ЛистыУчета
	|			ПО Договоры.Ссылка.ОбъектАренды.СтруктурнаяЕдиница = ЛистыУчета.ТорговаяТочка) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Период) КАК Период,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Договор КАК Договор,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Дата КАК Дата
	|ПОМЕСТИТЬ ВТ_ПериодыПланируемыхПлатежейПредварительно
	|ИЗ
	|	РегистрСведений.ПланируемыеПлатежиПоДоговорамАренды.СрезПоследних КАК ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Дата, МЕСЯЦ) = &НачалоПериода
	|	И (ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийДоговоровАренды.САрендодателем)
	|			ИЛИ ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Регистратор.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийДоговоровАренды.САрендодателем))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Договор,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПериодыПланируемыхПлатежейПредварительно.Период,
	|	ВТ_ПериодыПланируемыхПлатежейПредварительно.Договор,
	|	ВТ_ПериодыПланируемыхПлатежейПредварительно.Дата
	|ПОМЕСТИТЬ ВТ_ПериодыПланируемыхПлатежей
	|ИЗ
	|	ВТ_ПериодыПланируемыхПлатежейПредварительно КАК ВТ_ПериодыПланируемыхПлатежейПредварительно
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДоговоровАренды.СрезПоследних КАК СтатусыДоговоровАрендыСрезПоследних
	|		ПО ВТ_ПериодыПланируемыхПлатежейПредварительно.Договор = СтатусыДоговоровАрендыСрезПоследних.Договор
	|			И ВТ_ПериодыПланируемыхПлатежейПредварительно.Дата >= СтатусыДоговоровАрендыСрезПоследних.ДатаНачалаАренды
	|			И ВТ_ПериодыПланируемыхПлатежейПредварительно.Дата <= СтатусыДоговоровАрендыСрезПоследних.ДатаОкончанияАренды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Контрагент,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Договор КАК Договор,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Договор.ОбъектАренды.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	&ЦФО КАК ЦФО,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.ТипАренднойПлаты,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Организация,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.СтавкаНДС,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Валюта,
	|	СУММА(ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Сумма) КАК Сумма,
	|	СУММА(ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.СуммаВал) КАК СуммаВал
	|ПОМЕСТИТЬ ПредварительныйРасчет
	|ИЗ
	|	РегистрСведений.ПланируемыеПлатежиПоДоговорамАренды.СрезПоследних КАК ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПланируемыхПлатежей КАК ВТ_ПериодыПланируемыхПлатежей
	|		ПО ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Период = ВТ_ПериодыПланируемыхПлатежей.Период
	|			И ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Договор = ВТ_ПериодыПланируемыхПлатежей.Договор
	|			И ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Дата = ВТ_ПериодыПланируемыхПлатежей.Дата
	|ГДЕ
	|	(ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.ФормаОплаты = &ФормаОплаты
	|			ИЛИ &ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка))
	|	И (ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.ТипАренднойПлаты = &ТипАренднойПлаты
	|			ИЛИ &ТипАренднойПлаты = ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПустаяСсылка))
	|	И (ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.СтавкаНДС = &СтавкаНДС
	|			ИЛИ &СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.ПустаяСсылка))
	//+++АК kats 2018.10.16 ИП-00019812
	|	И НЕ ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Аванс
	//---АК kats
	|
	|СГРУППИРОВАТЬ ПО
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Контрагент,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Договор,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.ТипАренднойПлаты,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Договор.ОбъектАренды.СтруктурнаяЕдиница,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Организация,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.СтавкаНДС,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходИзБанка.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА РасходИзБанка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийППИсходящее.ОплатаПостояннойЧастиАрендыАрендодателю)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПостояннаяЧасть)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПеременнаяЧасть)
	|	КОНЕЦ КАК ТипАренднойПлаты,
	|	РасходИзБанка.ДатаОплаты
	|ПОМЕСТИТЬ ВТ_ДатыОплатПредварительно
	|ИЗ
	|	Документ.РасходИзБанка КАК РасходИзБанка
	|ГДЕ
	|	(РасходИзБанка.Проведен
	|				И РасходИзБанка.Оплачено
	|				И НАЧАЛОПЕРИОДА(РасходИзБанка.ПериодРегистрации, МЕСЯЦ) = &НачалоПериода
	|				И &ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичные)
	|			ИЛИ &ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка)
	|				И (РасходИзБанка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийППИсходящее.ОплатаПостояннойЧастиАрендыАрендодателю)
	|						И &ТипАренднойПлаты = ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПостояннаяЧасть)
	|					ИЛИ РасходИзБанка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийППИсходящее.ОплатаПеременнойЧастиАрендыАрендодателю)
	|						И &ТипАренднойПлаты = ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПеременнаяЧасть)
	|					ИЛИ &ТипАренднойПлаты = ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПустаяСсылка)))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасходИзКассы.ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА РасходИзКассы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРКО.ОплатаПостояннойЧастиАрендыАрендодателю)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПостояннаяЧасть)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПеременнаяЧасть)
	|	КОНЕЦ,
	|	НАЧАЛОПЕРИОДА(РасходИзКассы.Ссылка.Дата, ДЕНЬ)
	|ИЗ
	|	Документ.РасходИзКассы КАК РасходИзКассы
	|ГДЕ
	|	РасходИзКассы.Проведен
	|	И НАЧАЛОПЕРИОДА(РасходИзКассы.ПериодРегистрации, МЕСЯЦ) = &НачалоПериода
	|	И (&ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличные)
	|			ИЛИ &ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка))
	|	И (РасходИзКассы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРКО.ОплатаПостояннойЧастиАрендыАрендодателю)
	|				И &ТипАренднойПлаты = ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПостояннаяЧасть)
	|			ИЛИ РасходИзКассы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРКО.ОплатаПеременнойЧастиАрендыАрендодателю)
	|				И &ТипАренднойПлаты = ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПеременнаяЧасть)
	|			ИЛИ &ТипАренднойПлаты = ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДатыОплатПредварительно.ДоговорКонтрагента,
	|	ВТ_ДатыОплатПредварительно.ТипАренднойПлаты,
	|	МАКСИМУМ(ВТ_ДатыОплатПредварительно.ДатаОплаты) КАК ДатаОплаты
	|ПОМЕСТИТЬ ВТ_ДатыОплат
	|ИЗ
	|	ВТ_ДатыОплатПредварительно КАК ВТ_ДатыОплатПредварительно
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДатыОплатПредварительно.ДоговорКонтрагента,
	|	ВТ_ДатыОплатПредварительно.ТипАренднойПлаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредварительныйРасчет.Контрагент,
	|	ПредварительныйРасчет.Договор,
	|	ПредварительныйРасчет.СтруктурнаяЕдиница,
	|	ПредварительныйРасчет.ЦФО,
	|	ПредварительныйРасчет.ТипАренднойПлаты,
	|	ПредварительныйРасчет.Организация,
	|	ПредварительныйРасчет.СтавкаНДС,
	|	ПредварительныйРасчет.Сумма,
	|	ПредварительныйРасчет.СуммаВал,
	|	ВЫБОР
	|		КОГДА ПредварительныйРасчет.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|				И (КурсыВалютДляРасчетовПоАрендеСрезПоследних.Валюта <> &ВалютаРегл
	|					ИЛИ КурсыВалютДляРасчетовПоАрендеСрезПоследних.СпособРасчета <> ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаКурсаВалюты.КурсЦБ)
	|						И КурсыВалютДляРасчетовПоАрендеСрезПоследних.СпособРасчета <> ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаКурсаВалюты.ПустаяСсылка))
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЕстьРасчетыВВалюте,
	|	ДоговорыПоСрокамИспользования.ДатаОкончанияДоговора,
	|	ДоговорыПоСрокамИспользования.ДатаПоследнегоЛистаУчета,
	|	ДоговорыПоСрокамИспользования.СрокПоследнегоЛистаУчета,
	|	КурсыВалютДляРасчетовПоАрендеСрезПоследних.СпособРасчета,
	|	КурсыВалютДляРасчетовПоАрендеСрезПоследних.Валюта,
	|	КурсыВалютДляРасчетовПоАрендеСрезПоследних.Валюта2,
	|	КурсыВалютДляРасчетовПоАрендеСрезПоследних.Курс,
	|	КурсыВалютДляРасчетовПоАрендеСрезПоследних.Кратность,
	|	КурсыВалютДляРасчетовПоАрендеСрезПоследних.Коэффициент,
	|	КурсыВалютДляРасчетовПоАрендеСрезПоследних.НижняяГраница,
	|	КурсыВалютДляРасчетовПоАрендеСрезПоследних.ВерхняяГраница,
	//+++ AK suvv 04.04.2018 ИП-00018071
	//|	ЕСТЬNULL(ВТ_ДатыОплат.ДатаОплаты, &ДатаДокумента) КАК ДатаОплаты
	|	ЕСТЬNULL(ВТ_ДатыОплат.ДатаОплаты, &ДатаДокумента) КАК ДатаОплаты,
	|	ВЫБОР
	|		КОГДА &РассчитыватьНДФЛ
	|				И ПредварительныйРасчет.Договор.УплачиватьНДФЛЗаКонтрагента
	|			ТОГДА ПредварительныйРасчет.Сумма / 0.87 - ПредварительныйРасчет.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНДФЛ
	//---AK suvv
	|ИЗ
	|	ПредварительныйРасчет КАК ПредварительныйРасчет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоговорыПоСрокамИспользования КАК ДоговорыПоСрокамИспользования
	|		ПО ПредварительныйРасчет.СтруктурнаяЕдиница = ДоговорыПоСрокамИспользования.ТорговаяТочка
	|			И ПредварительныйРасчет.Договор = ДоговорыПоСрокамИспользования.Договор
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовПоАренде.СрезПоследних(КОНЕЦПЕРИОДА(&НачалоПериода, МЕСЯЦ), ) КАК КурсыВалютДляРасчетовПоАрендеСрезПоследних
	|		ПО ПредварительныйРасчет.Договор = КурсыВалютДляРасчетовПоАрендеСрезПоследних.ДоговорКонтрагента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДатыОплат КАК ВТ_ДатыОплат
	|		ПО ПредварительныйРасчет.Договор = ВТ_ДатыОплат.ДоговорКонтрагента
	|			И ПредварительныйРасчет.ТипАренднойПлаты = ВТ_ДатыОплат.ТипАренднойПлаты";
				   
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаблицы Из ТаблицаРезультат Цикл
		Если СтрокаТаблицы.ЕстьРасчетыВВалюте Тогда
			КурсВалюты = ПроцедурыНачисления.ПолучитьКурсВалютыПоДоговору(СтрокаТаблицы.ДатаОплаты, СтрокаТаблицы).Курс;
			СтрокаТаблицы.Сумма = СтрокаТаблицы.СуммаВал * КурсВалюты;
			//+++ AK suvv 04.04.2018 ИП-00018071
			Если РассчитыватьНДФЛ и СтрокаТаблицы.Договор.УплачиватьНДФЛЗаКонтрагента Тогда
				СтрокаТаблицы.СуммаНДФЛ = СтрокаТаблицы.Сумма/0.87 - СтрокаТаблицы.Сумма;
			КонецЕсли;
			//---AK suvv
		КонецЕсли;
		//+++ AK suvv 08.06.2018 ИП-00018071
		СтрокаТаблицы.СуммаНДФЛ = Окр(СтрокаТаблицы.СуммаНДФЛ);
		//---AK suvv
	КонецЦикла;
	
	//+++ AK suvv 04.04.2018 ИП-00018071
	//ТаблицаРезультат.Свернуть("Контрагент, Договор, СтруктурнаяЕдиница, ЦФО, ТипАренднойПлаты, Организация, СтавкаНДС, ДатаОкончанияДоговора, ДатаПоследнегоЛистаУчета, СрокПоследнегоЛистаУчета", "Сумма, ЕстьРасчетыВВалюте"); 
	ТаблицаРезультат.Свернуть("Контрагент, Договор, СтруктурнаяЕдиница, ЦФО, ТипАренднойПлаты, Организация, СтавкаНДС, ДатаОкончанияДоговора, ДатаПоследнегоЛистаУчета, СрокПоследнегоЛистаУчета", "Сумма, ЕстьРасчетыВВалюте, СуммаНДФЛ"); 
	//---AK suvv
	
	// заполнение
	//+++ AK suvv 05.04.2018 ИП-00018025.02
	//ЭтотОбъект.НачислениеАренды.Очистить();
	ТаблицаНачислениеАренды = ЭтотОбъект.НачислениеАренды.ВыгрузитьКолонки();
	//--- AK suvv
	ТаблицаПрочаяЗадолженность = ЭтотОбъект.ПрочаяЗадолженность.ВыгрузитьКолонки();
	
	Для Каждого СтрокаТаблицы Из ТаблицаРезультат Цикл
		Если СтрокаТаблицы.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Розница Тогда
			//+++ AK suvv 05.04.2018 ИП-00018025.02
			//НоваяСтрока = ЭтотОбъект.НачислениеАренды.Добавить();
			НоваяСтрока = ТаблицаНачислениеАренды.Добавить();
			//--- AK suvv
			НоваяСтрока.ПериодРегистрации = ЭтотОбъект.ПериодРегистрации;
		Иначе
			НоваяСтрока = ТаблицаПрочаяЗадолженность.Добавить();			
		КонецЕсли;			
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
	КонецЦикла;
	
	//+++ AK suvv 05.04.2018 ИП-00018025.02
	Если ТаблицаНачислениеАренды.Количество() > 0 Тогда 
		Если ЭтотОбъект.НачислениеАренды.Количество() > 0 и Вопрос("Табличная часть <Начислене аренды> непустая. Очистить перед добавлением новых строк?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда 
			Если ЕстьСтрокиСБухДаннымиТЧНачислениеАренды() Тогда 
				Сообщить("Табличная часть ""Начисление аренды"" не перезаполнена, поскольку в ней есть строки с внесенными бухгалтерскими данными!");
			Иначе
				ЭтотОбъект.НачислениеАренды.Загрузить(ТаблицаНачислениеАренды);
			КонецЕсли;
		Иначе
			ЭтотОбъект.НачислениеАренды.Загрузить(ТаблицаНачислениеАренды);
		КонецЕсли;
	КонецЕсли;
	//--- AK suvv 
	
	//+++ AK suvv 05.04.2018 ИП-00018025.02
	Если ТаблицаПрочаяЗадолженность.Количество() > 0 Тогда 
		Если ЭтотОбъект.ПрочаяЗадолженность.Количество() > 0 и Вопрос("Табличная часть <Прочая задолженность> непустая. Очистить перед добавлением новых строк?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда 
			Если ЕстьСтрокиСБухДаннымиТЧПрочаяЗадолженность() Тогда 
				Сообщить("Табличная часть ""Прочая задолженность"" не перезаполнена, поскольку в ней есть строки с внесенными бухгалтерскими данными!");
			Иначе
				ЭтотОбъект.ПрочаяЗадолженность.Загрузить(ТаблицаПрочаяЗадолженность);
			КонецЕсли;
		Иначе
			ЭтотОбъект.ПрочаяЗадолженность.Загрузить(ТаблицаПрочаяЗадолженность);
		КонецЕсли;
	КонецЕсли;
	
	//Если ТаблицаПрочаяЗадолженность.Количество() > 0 Тогда
	//	Если ЭтотОбъект.ПрочаяЗадолженность.Количество() > 0
	//			И Вопрос("Табличная часть <Прочая задолженность> непустая. Очистить перед добавлением новых строк?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
	//		ЭтотОбъект.ПрочаяЗадолженность.Очистить();
	//	КонецЕсли;
	//	
	//	ЭтотОбъект.ПрочаяЗадолженность.Загрузить(ТаблицаПрочаяЗадолженность);
	//КонецЕсли;
	//--- AK suvv
	
	Для каждого СтрокаТЧ Из ЭтотОбъект.НачислениеАренды Цикл
		Если СтрокаТЧ.СрокПоследнегоЛистаУчета > 5 Тогда
			СтрокаТЧ.Комментарий = Формат(СтрокаТЧ.ПериодРегистрации, "ДФ='ММMM yyyy'") + " аренда: " + СтрокаТЧ.СтруктурнаяЕдиница;
	    КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаТЧ.ДатаОкончанияДоговора)
				И КонецМесяца(СтрокаТЧ.ДатаОкончанияДоговора) < КонецМесяца(СтрокаТЧ.ПериодРегистрации) Тогда
			СтрокаТЧ.Комментарий = СтрокаТЧ.Комментарий + "Договор не действует: " + СтрокаТЧ.СтруктурнаяЕдиница;
		КонецЕсли;		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДокумент(Кнопка)
	
	Если ЭтотОбъект.НачислениеАренды.Количество() > 0 Тогда
		Если Вопрос("Табличная часть <Начисление аренды> непустая. Перед заполнением она будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;		
		ЭтотОбъект.НачислениеАренды.Очистить();
	КонецЕсли;
	
	//
	ЗаполнитьСтрокиНачислениеАренды();
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуЗаявок()

	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ФормаОплаты"		, ЭтотОбъект.ФормаОплаты);							  
	Запрос.УстановитьПараметр("СписокДоговоров"	, ЭтотОбъект.НачислениеАренды.ВыгрузитьКолонку("Договор"));							  
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаявкаНаРасходованиеСредств.Ссылка,
	|	ЗаявкаНаРасходованиеСредств.ДоговорКонтрагента,
	|	ЗаявкаНаРасходованиеСредств.НачалоПериодаАренды КАК ПериодРегистрации,
	|	ЗаявкаНаРасходованиеСредств.ТипАренднойПлаты
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеСредств КАК ЗаявкаНаРасходованиеСредств
	|ГДЕ
	|	ЗаявкаНаРасходованиеСредств.ФормаОплаты = &ФормаОплаты
	|	И ЗаявкаНаРасходованиеСредств.ДоговорКонтрагента В(&СписокДоговоров)
	|	И НЕ ЗаявкаНаРасходованиеСредств.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаявкаНаУслугиМатериалы.Ссылка,
	|	ЗаявкаНаУслугиМатериалы.ДоговорКонтрагента,
	|	ЗаявкаНаУслугиМатериалы.НачалоПериодаАренды,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПеременнаяЧасть)
	|ИЗ
	|	Документ.ЗаявкаНаУслугиМатериалы КАК ЗаявкаНаУслугиМатериалы
	|ГДЕ
	|	ЗаявкаНаУслугиМатериалы.ДоговорКонтрагента В(&СписокДоговоров)
	|	И НЕ ЗаявкаНаУслугиМатериалы.ПометкаУдаления";
						  
	//
	мТаблицаЗаявок = Запрос.Выполнить().Выгрузить();

КонецПроцедуры


/////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ПериодРегистрацииПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ЭтотОбъект.ПериодРегистрации) Тогда
		ЭтотОбъект.ПериодРегистрации = НачалоМесяца(ЭтотОбъект.ПериодРегистрации);
	КонецЕсли;
	
	Если ЭтотОбъект.ПериодРегистрации = мТекущийПериод Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ОчиститьНачисленияАренды() Тогда
		ЭтотОбъект.ПериодРегистрации = мТекущийПериод;
		Возврат;
	КонецЕсли;
	
	мТекущийПериод = ЭтотОбъект.ПериодРегистрации;
	
КонецПроцедуры

Процедура ФормаОплатыПриИзменении(Элемент)
	
	ЗаполнитьТаблицуЗаявок();
	
КонецПроцедуры

Процедура ОтборЗначениеПриИзменении(Элемент)
	
	УстановитьБыстрыйОтбор();
	
КонецПроцедуры

Процедура ОтборЗначениеОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ОтборВид = "Контрагент"  Тогда
		ОтборЗначение = Справочники.Контрагенты.ПустаяСсылка();
	ИначеЕсли	ОтборВид = "СтруктурнаяЕдиница" Тогда
		ОтборЗначение = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	КонецЕсли;

	УстановитьБыстрыйОтбор();
	
КонецПроцедуры

Процедура ОтборВидПриИзменении(Элемент)

	Если ОтборВид = "Контрагент"
			И ТипЗнч(ОтборЗначение) <> Тип("СправочникСсылка.Контрагенты") Тогда
		ОтборЗначение = Справочники.Контрагенты.ПустаяСсылка();
	ИначеЕсли ОтборВид = "СтруктурнаяЕдиница"
			И ТипЗнч(ОтборЗначение) <> Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		ОтборЗначение = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	КонецЕсли;
		
	УстановитьБыстрыйОтбор();
	
КонецПроцедуры

Процедура ОтборВидОчистка(Элемент, СтандартнаяОбработка)
	
	Отказ = Истина;
	
КонецПроцедуры


Процедура ОткрытьЗаявку(Кнопка)
	
	ТекущиеДанные = ЭлементыФормы.НачислениеАренды.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураОтбора = Новый Структура("ДоговорКонтрагента, ТипАренднойПлаты, ПериодРегистрации", ТекущиеДанные.Договор, ТекущиеДанные.ТипАренднойПлаты, ТекущиеДанные.ПериодРегистрации);
	СтрокиЗаявок = мТаблицаЗаявок.НайтиСтроки(СтруктураОтбора);
	
	Если СтрокиЗаявок.Количество() > 0 Тогда
		ФормаЗаявки = СтрокиЗаявок[0].Ссылка.ПолучитьФорму();
		ФормаЗаявки.Открыть();
		Возврат;
	КонецЕсли;
	
	Режим = Новый СписокЗначений;
	Режим.Добавить("Заявка на услуги");
	Режим.Добавить("Заявка на расход ДС");
	Режим.Добавить("Отмена");
	Текст = "ru = ""Создать заявку? "";"
			+ " en = ""Sozdat zayavku?""";
	Ответ = Вопрос(НСтр(Текст), Режим, 0);
	
	Если Ответ = "Заявка на услуги" Тогда
		//Заявка = Документы.ЗаявкаНаУслугиМатериалы.СоздатьДокумент();
		
		Форма = ПолучитьФорму("Документ.ЗаявкаНаУслугиМатериалы.Форма.ФормаДокумента");
        Заявка = Форма.Объект;

		Заявка.Организация 			= ТекущиеДанные.Организация;;
		//Заявка.СчетОрганизации = Заявка.Организация.ОсновнойБанковскийСчет;
		Заявка.Дата 				= ТекущаяДата();
		Заявка.ДоговорКонтрагента 	= ТекущиеДанные.Договор;
		Заявка.Контрагент 			= ТекущиеДанные.Контрагент;
		Заявка.СуммаДокумента 		= ТекущиеДанные.Сумма;
		Заявка.ДокументОснование 	= ЭтотОбъект.Ссылка;
		//Заявка.УИН_СтрокиОснования = ВыборкаДДС.УИН_Строки;
		//Заявка.СчетБанк = ПланыСчетов.Хозрасчетный.РасчетныеСчета;
		Заявка.СтатьяДДС 			= Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("131010");
		Заявка.НачалоПериодаАренды 	= НачалоМесяца(ТекущиеДанные.ПериодРегистрации);
		//Заявка.ТипАренднойПлаты		= ТекущиеДанные.ТипАренднойПлаты;
		Если ТекущиеДанные.ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПостояннаяЧасть Тогда
			Заявка.ВидОперации		= Перечисления.ВидыОперацийЗаявкиНаУслугиМатериалы.ОплатаПостояннойЧастиАрендыАрендодателю;
		ИначеЕсли ТекущиеДанные.ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть Тогда
			Заявка.ВидОперации		= Перечисления.ВидыОперацийЗаявкиНаУслугиМатериалы.ОплатаПеременнойЧастиАрендыАрендодателю;
		КонецЕсли;
		Заявка.ЭтоЗаявкаПоАренде = Истина;
		Заявка.ЦФО 					= ОбщиеПроцедуры.ПолучитьЦФОПоСтруктурнойЕдинице(ТекущиеДанные.СтруктурнаяЕдиница, Заявка.Дата);
		//Заявка.СтруктурнаяЕдиница = ТекущиеДанные.СтруктурнаяЕдиница;
		
		//+++АК SUVV 2018.02.28 ИП-00017941
		//МассивСчетов = УправлениеДенежнымиСредствами.ПолучитьСчетРасчетовСКонтрагентом(Заявка.СтатьяДДС);
		МассивСчетов = УправлениеДенежнымиСредствами.ПолучитьСчетРасчетовСКонтрагентом(Заявка.Дата, Заявка.СтатьяДДС);
		//---АК SUVV
	    Если МассивСчетов.Количество() = 1 Тогда
			Заявка.СчетУчетаРасчетов = ПланыСчетов.Финансовый.НайтиПоКоду(МассивСчетов[0]).Ссылка;
		Иначе
			Заявка.СчетУчетаРасчетов = Планысчетов.Финансовый.РасчетыСПоставщиками;
		КонецЕсли;
	    	
		Если ЗначениеЗаполнено(Заявка.Контрагент) Тогда
			Заявка.ВариантРасчетаНДС = ?(Заявка.Контрагент.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС,
											Перечисления.ВариантыРасчетаНДС.БезНДС,
											Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле);
		КонецЕсли;

		Заявка.Ответственный 		= ПараметрыСеанса.ТекущийПользователь;

		
		
		СтрокаОплат = Заявка.Оплата.Добавить();
		//СтрокаОплат.Аванс=ВыборкаДДС.Аванс;
		СтрокаОплат.СуммаОплаты = ТекущиеДанные.Сумма;
		//СтрокаОплат.НазначениеПлатежа = ?(ВыборкаДДС.Аванс, "Аванс ", "") + ВыборкаДДС.Услуга + " " + 
		//	?(ЗначениеЗаполнено(ВыборкаДДС.НомерСчета), "Счет №" + ВыборкаДДС.НомерСчета + " от " +
		//	Формат(ВыборкаДДС.ДатаСчета, "ДФ=dd.MM.yyyy"), "") + " " + ТекТорговаяТочка;
		//Заявка.ОчередностьПлатежа = 5;
		//ТекДата = Заявка.Дата + 86400;
		//Пока ДеньНедели(ТекДата)<>2
		//	И ДеньНедели(ТекДата)<>4 Цикл
		//	ТекДата = ТекДата + 86400;
		//КонецЦикла; 
		СтрокаОплат.ДатаПлатежа = Заявка.Дата;
		
		
		СтрокаУслуг = Заявка.Услуги.Добавить();
		СтрокаУслуг.СтруктурнаяЕдиница	= ТекущиеДанные.СтруктурнаяЕдиница;
		СтрокаУслуг.Номенклатура		= Справочники.Номенклатура.НайтиПоНаименованию("Аренда помещений");;
		СтрокаУслуг.Количество			= 1;
		СтрокаУслуг.Цена				= ТекущиеДанные.Сумма;
		СтрокаУслуг.Сумма				= ТекущиеДанные.Сумма;
		СтрокаУслуг.СтавкаНДС			= ТекущиеДанные.СтавкаНДС;
		УчитыватьНДС 		= Истина;
		СуммаВключаетНДС 	= (Заявка.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле);
	
		СтрокаУслуг.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(СтрокаУслуг.Сумма,
													   УчитыватьНДС, СуммаВключаетНДС,
													   УчетНДС.ПолучитьСтавкуНДС(СтрокаУслуг.СтавкаНДС));
         // заявки по аренде считаем подтвержденными автоматически
	    
		СтрокаУслуг.КоличествоПолучено 	= СтрокаУслуг.Количество;
		СтрокаУслуг.ПодтвердилПользователь	= Заявка.Ответственный;
		СтрокаУслуг.ПодтвердилДата			= ТекущаяДата();
		СтрокаУслуг.Подтверждено			= Истина;
		
	    Форма.Открыть();
		
	ИначеЕсли Ответ = "Заявка на расход ДС" Тогда	
		
		//
		ЗаявкаОбъект = Документы.ЗаявкаНаРасходованиеСредств.СоздатьДокумент();
		ФормаЗаявки = ЗаявкаОбъект.ПолучитьФорму();
		
		ЗаявкаОбъект.Дата = ТекущаяДата();
		
		ЗаявкаОбъект.ФормаОплаты 	= ЭтотОбъект.ФормаОплаты;
		ЗаявкаОбъект.СуммаДокумента = ТекущиеДанные.Сумма;
		
		ЗаявкаОбъект.Организация 	= ТекущиеДанные.Организация;
		ФормаЗаявки.ОрганизацияПриИзменении(ФормаЗаявки.ЭлементыФормы.Организация);
		
		ЗаявкаОбъект.Контрагент 	= ТекущиеДанные.Контрагент;
		ФормаЗаявки.КонтрагентПриИзменении(ФормаЗаявки.ЭлементыФормы.Контрагент);
		
		ЗаявкаОбъект.НазначениеПлатежа 	= "";
		ЗаявкаОбъект.ДоговорКонтрагента = ТекущиеДанные.Договор;
		ФормаЗаявки.ДоговорКонтрагентаПриИзменении(ФормаЗаявки.ЭлементыФормы.ДоговорКонтрагента);
		
		ЗаявкаОбъект.ТипАренднойПлаты 				= ЭтотОбъект.ТипАренднойПлаты;
		ЗаявкаОбъект.НачалоПериодаАренды 			= НачалоМесяца(ЭтотОбъект.ПериодРегистрации);
		ЗаявкаОбъект.КонецПериодаАренды 			= КонецМесяца(ЭтотОбъект.ПериодРегистрации);
		ЗаявкаОбъект.СтатьяДвиженияДенежныхСредств 	= Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("131010");
		
		НоваяСтрока = ЗаявкаОбъект.ТорговыеТочки.Добавить();
		
		НоваяСтрока.ТорговаяТочка = ТекущиеДанные.СтруктурнаяЕдиница;
		ФормаЗаявки.ЭлементыФормы.ТорговыеТочки.ТекущаяСтрока = НоваяСтрока;
		ФормаЗаявки.ТорговыеТочкиТорговаяТочкаПриИзменении(Неопределено);
		
		НоваяСтрока.Период 	= НачалоМесяца(ЭтотОбъект.ПериодРегистрации);
		
		НоваяСтрока.Сумма 	= ТекущиеДанные.Сумма;
		
		ФормаЗаявки.Открыть();
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ДействияФормыСтруктураПодчиненности(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ЭтотОбъект.Ссылка);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыНастройка(Кнопка)

	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(Ложь, Ссылка, ЭтотОбъект);

КонецПроцедуры

Процедура ЗаполнитьНачислениеАренды(Кнопка)
	
	//+++ AK suvv 05.04.2018 ИП-00018025.02	
	//Если ОчиститьНачисленияАренды(Истина) Тогда
	//	
	//	ЗаполнитьСтрокиНачислениеАренды();
	//	
	//КонецЕсли;
	Если ЕстьСтрокиСБухДаннымиТЧНачислениеАренды() и ЕстьСтрокиСБухДаннымиТЧПрочаяЗадолженность() Тогда
		Сообщить("Табличные части ""Начисление аренды"" и ""Прочая задолженность"" не могут быть перезаполнены, поскольку в них есть строки с внесенными бухгалтерскими данными!");
	Иначе
		ЗаполнитьСтрокиНачислениеАренды();
	КонецЕсли;
	//--- AK suvv
	
КонецПроцедуры


Процедура НачислениеАрендыОрганизацияПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.НачислениеАренды.ТекущиеДанные;	
	
	Если ТекДанные.Договор.Организация <> ТекДанные.Организация Тогда
		Сообщить("Организация в договоре, отличается от указанной в строке!");
		ТекДанные.Договор = Неопределено;
	КонецЕсли; 

КонецПроцедуры

Процедура НачислениеАрендыТипАренднойПлатыПриИзменении(Элемент)
	ТекДанные = ЭлементыФормы.НачислениеАренды.ТекущиеДанные;
	Если ЗначениеЗаполнено(ЭтотОбъект.ТипАренднойПлаты) И ТекДанные.ТипАренднойПлаты <>ЭтотОбъект.ТипАренднойПлаты Тогда
		ТекДанные.ТипАренднойПлаты = ЭтотОбъект.ТипАренднойПлаты;
		Сообщить("В шапке документа выбран другой тип арендной платы, изменение запрещено");
	КонецЕсли;	
	
	ЗаполнитьТаблицуЗаявок();
	
КонецПроцедуры

Процедура НачислениеАрендыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ЭтотОбъект.ФормаОплаты = Перечисления.ФормыОплаты.Наличные Тогда
		Возврат;
	КонецЕсли;	
	//ДанныеСтроки.Комментарий="";
	
	ОформлениеСтроки.Ячейки.СрокПоследнегоЛистаУчета.ЦветФона 	= WebЦвета.Белый;
	ОформлениеСтроки.Ячейки.ДатаОкончанияДоговора.ЦветФона 		= WebЦвета.Белый;
	ОформлениеСтроки.Ячейки.Договор.ЦветФона 					= WebЦвета.Белый;
	Если ДанныеСтроки.СрокПоследнегоЛистаУчета > 5 Тогда
		//ДанныеСтроки.Комментарий=Формат(ПериодРегистрации,"ДФ='ММMM yyyy'")+" аренда: "+ДанныеСтроки.СтруктурнаяЕдиница;
        ОформлениеСтроки.Ячейки.СрокПоследнегоЛистаУчета.ЦветФона = WebЦвета.ТусклоРозовый;
	КонецЕсли;
	Если ЗначениеЗаполнено(ДанныеСтроки.ДатаОкончанияДоговора)
			И ДанныеСтроки.ДатаОкончанияДоговора < КонецМесяца(ЭтотОбъект.ПериодРегистрации) Тогда
		//ДанныеСтроки.Комментарий=ДанныеСтроки.Комментарий+"Договор не действует. ";
        ОформлениеСтроки.Ячейки.ДатаОкончанияДоговора.ЦветФона = WebЦвета.ТусклоРозовый;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ДанныеСтроки.Договор)  Тогда
		//ДанныеСтроки.Комментарий=ДанныеСтроки.Комментарий+"Договор не действует. ";
        ОформлениеСтроки.Ячейки.Договор.ЦветФона = WebЦвета.ТусклоРозовый;
	КонецЕсли;
	
	Если ДанныеСтроки.СуммаБух = 0 Тогда
		ОформлениеСтроки.Ячейки.СуммаБух.УстановитьТекст(Формат(ДанныеСтроки.Сумма, "ЧДЦ=2"));
	КонецЕсли;
	
	//ОформлениеСтроки.Ячейки.ВыгружатьВБухгалтерию.ТолькоПросмотр = НЕ ЗначениеЗаполнено(ДанныеСтроки.ДатаАкта) ИЛИ НЕ ЗначениеЗаполнено(ДанныеСтроки.ДатаСФ);
	
	//Если ДанныеСтроки.Договор.ТипДоговора = Перечисления.ТипыДоговоровСПоставщиком.Аренда И ДанныеСтроки.ДатаОкончанияДоговора < Дата Тогда
	//	ДанныеСтроки.Комментарий=ДанныеСтроки.Комментарий+"Договор не действует. ";
	//	ОформлениеСтроки.Ячейки.ДатаОкончанияДоговора.цветФона = WebЦвета.ТусклоРозовый;
	//КонецЕсли;
КонецПроцедуры

Процедура НачислениеАрендыПриПолученииДанных(Элемент, ОформленияСтрок)

	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		ТекДанные = ОформлениеСтроки.ДанныеСтроки;
		Если ТекДанные.ЕстьРасчетыВВалюте Тогда
			ОформлениеСтроки.ЦветТекста = WebЦвета.Красный;
		КонецЕсли;
			
		СтруктураОтбора = Новый Структура("ДоговорКонтрагента, ТипАренднойПлаты, ПериодРегистрации", ТекДанные.Договор, ТекДанные.ТипАренднойПлаты, ТекДанные.ПериодРегистрации);
		СтрокиЗаявок = мТаблицаЗаявок.НайтиСтроки(СтруктураОтбора );
		Если СтрокиЗаявок.Количество() > 0 Тогда
			ОформлениеСтроки.Ячейки.Сумма.ЦветФона 		= WebЦвета.Оранжевый;
			ОформлениеСтроки.Ячейки.СуммаБух.ЦветФона 	= WebЦвета.Оранжевый;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//+++АК SUVV 2018.03.20 ИП-00018025
// бухгалтер должен иметь возможность поставить галку "выгр." для всех строк, в т.ч. с незаполненными реквизитами с./ф.
// т.к. счет-фактура может создаваться позже и отдельным документом
//Процедура НачислениеАрендыПриИзмененииФлажка(Элемент, Колонка)
//	
//	ТекущиеДанные = Элемент.ТекущиеДанные;
//	
//	Если ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть
//			И Колонка.Имя = "ВыгружатьВБухгалтерию"
//			И ТекущиеДанные.ВыгружатьВБухгалтерию
//			И (НЕ ЗначениеЗаполнено(ТекущиеДанные.ДатаСФ)
//				ИЛИ НЕ ЗначениеЗаполнено(ТекущиеДанные.ДатаАкта)) Тогда
//			 
//		Сообщить("Нельзя выгружать в бухгалтерию без установленных  даты акта и даты счета-фактуры!");
//		ТекущиеДанные.ВыгружатьВБухгалтерию = Ложь;
//		
//	КонецЕсли;
//	
//КонецПроцедуры
//---АК SUVV

Процедура НачислениеАрендыКонтрагентПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.НачислениеАренды.ТекущиеДанные;
	
	Если ТекДанные.Договор.Пустая() Тогда
		ТекДанные.Договор = ДопМодульСервер.ПолучитьОсновнойДоговорКонтрагента(ТекДанные.Организация, ТекДанные.Контрагент,
																				?(ЭтотОбъект.ЭтоНовый(), ТекущаяДата(), ЭтотОбъект.Дата));
	КонецЕсли;
	
КонецПроцедуры

Процедура НачислениеАрендыДоговорПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.НачислениеАренды.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекДанные.Договор)
			И ТекДанные.Договор.ТипДоговора <> Перечисления.ТипыДоговоровСПоставщиком.Аренда Тогда
		Сообщить("Можно указывать только договоры с признаком ""Аренда""!");
		ТекДанные.Договор = Неопределено;
	КонецЕсли;
	
	Если ТекДанные.Договор.Организация <> ТекДанные.Организация Тогда
		Сообщить("Организация в договоре, отличается от указанной в строке!");
		ТекДанные.Договор = Неопределено;
	КонецЕсли; 
	
	//
	ТекДанные.СтруктурнаяЕдиница 		= ТекДанные.Договор.ОбъектАренды.СтруктурнаяЕдиница;
	ТекДанные.ДатаОкончанияДоговора		= Дата(1, 1, 1);
	ТекДанные.ДатаПоследнегоЛистаУчета	= Дата(1, 1, 1);
	ТекДанные.СрокПоследнегоЛистаУчета	= 0;
	
	Если ЗначениеЗаполнено(ТекДанные.Договор) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("КонецПериода"	, Мин(КонецМесяца(ПериодРегистрации), ТекущаяДата()));
		Запрос.УстановитьПараметр("Договор"			, ТекДанные.Договор);
		Запрос.УстановитьПараметр("ТорговаяТочка"	, ТекДанные.Договор.ОбъектАренды.СтруктурнаяЕдиница);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДоговорыКонтрагентов.Ссылка
		|ПОМЕСТИТЬ Договоры
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСПоставщиком.Аренда)
		|	И ДоговорыКонтрагентов.ОбъектАренды <> ЗНАЧЕНИЕ(Справочник.ОбъектыАренды.ПустаяСсылка)
		|	И ДоговорыКонтрагентов.ОбъектАренды.СтруктурнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
		|	И ДоговорыКонтрагентов.Ссылка = &Договор
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(РасторжениеДоговораАренды.ДоговорКонтрагента, ВложенныйЗапросСрокиДействия.ДоговорКонтрагента) КАК ДоговорКонтрагента,
		|	МАКСИМУМ(ЕСТЬNULL(РасторжениеДоговораАренды.ДатаОкончанияДоговора, ВложенныйЗапросСрокиДействия.ДатаОкончанияДоговора)) КАК ДатаОкончанияДоговора
		|ПОМЕСТИТЬ ДС
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДополнительноеСоглашение.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|		МАКСИМУМ(ДополнительноеСоглашение.ДатаОкончанияДоговора) КАК ДатаОкончанияДоговора
		|	ИЗ
		|		Документ.ДополнительноеСоглашение КАК ДополнительноеСоглашение
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ДополнительноеСоглашение.ДоговорКонтрагента
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗаключениеДоговораАренды.ДоговорКонтрагента,
		|		МАКСИМУМ(ЗаключениеДоговораАренды.ДатаОкончанияДоговора)
		|	ИЗ
		|		Документ.ЗаключениеДоговораАренды КАК ЗаключениеДоговораАренды
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ЗаключениеДоговораАренды.ДоговорКонтрагента) КАК ВложенныйЗапросСрокиДействия
		|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.РасторжениеДоговораАренды КАК РасторжениеДоговораАренды
		|		ПО ВложенныйЗапросСрокиДействия.ДоговорКонтрагента = РасторжениеДоговораАренды.ДоговорКонтрагента
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(РасторжениеДоговораАренды.ДоговорКонтрагента, ВложенныйЗапросСрокиДействия.ДоговорКонтрагента)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(ЛистУчета.Дата) КАК Дата,
		|	ЛистУчета.ТорговаяТочка
		|ПОМЕСТИТЬ ЛистыУчета
		|ИЗ
		|	Документ.ЛистУчета КАК ЛистУчета
		|ГДЕ
		|	ЛистУчета.Проведен
		|	И ЛистУчета.ТорговаяТочка = &ТорговаяТочка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЛистУчета.ТорговаяТочка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВложенныйЗапрос.Договор,
		|	ВложенныйЗапрос.ДатаОкончанияДоговора,
		|	ВложенныйЗапрос.ДатаПоследнегоЛистаУчета,
		|	ВложенныйЗапрос.ТорговаяТочка,
		|	РАЗНОСТЬДАТ(ВложенныйЗапрос.ДатаПоследнегоЛистаУчета, &КонецПериода, ДЕНЬ) КАК СрокПоследнегоЛистаУчета
		|ИЗ
		|	(ВЫБРАТЬ
		|		Договоры.Ссылка КАК Договор,
		|		ЕСТЬNULL(ДС.ДатаОкончанияДоговора, Договоры.Ссылка.СрокДействия) КАК ДатаОкончанияДоговора,
		|		ЛистыУчета.Дата КАК ДатаПоследнегоЛистаУчета,
		|		ЛистыУчета.ТорговаяТочка КАК ТорговаяТочка
		|	ИЗ
		|		Договоры КАК Договоры
		|			ЛЕВОЕ СОЕДИНЕНИЕ ДС КАК ДС
		|			ПО Договоры.Ссылка = ДС.ДоговорКонтрагента
		|			ЛЕВОЕ СОЕДИНЕНИЕ ЛистыУчета КАК ЛистыУчета
		|			ПО Договоры.Ссылка.ОбъектАренды.СтруктурнаяЕдиница = ЛистыУчета.ТорговаяТочка) КАК ВложенныйЗапрос";
		Выборка = Запрос.Выполнить().Выбрать();
		
		//
		Если Выборка.Следующий() Тогда
			ТекДанные.ДатаОкончанияДоговора		= Выборка.ДатаОкончанияДоговора;
			ТекДанные.ДатаПоследнегоЛистаУчета	= Выборка.ДатаПоследнегоЛистаУчета;
			ТекДанные.СрокПоследнегоЛистаУчета	= Выборка.СрокПоследнегоЛистаУчета;
			Если ТекДанные.СрокПоследнегоЛистаУчета > 5 Тогда
				ТекДанные.Комментарий = Формат(ЭтотОбъект.ПериодРегистрации, "ДФ='ММMM yyyy'") + " аренда: " + ТекДанные.СтруктурнаяЕдиница;
		    КонецЕсли;
			Если ЗначениеЗаполнено(ТекДанные.ДатаОкончанияДоговора)
					И КонецМесяца(ТекДанные.ДатаОкончанияДоговора) < КонецМесяца(ЭтотОбъект.ПериодРегистрации) Тогда
				ТекДанные.Комментарий = ТекДанные.Комментарий + "Договор не действует. ";
		  	КонецЕсли;
		КонецЕсли;
		
		//+++ AK suvv 24.04.2018 ИП-00018494
		ТекДанные.СтавкаНДС = ТекДанные.Договор.СтавкаНДС; 
		//--- AK suvv 
	КонецЕсли;	
	
	//
	ЗаполнитьТаблицуЗаявок();
	
	//+++ AK suvv 04.04.2018 ИП-00018071	
	ВариантРасчета = ПолучитьВариантРасчета();
	ПересчитатьСуммуНДФЛ(ТекДанные, ВариантРасчета);
	//---AK suvv
	
КонецПроцедуры

Процедура НачислениеАрендыСуммаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	УправлениеОтчетамиПереопределяемый.ОткрытьОтчетПоАренднымПлатежам(ЭлементыФормы.НачислениеАренды.ТекущиеДанные.СтруктурнаяЕдиница);
	
КонецПроцедуры

Процедура НачислениеАрендыИзменениеРеквизитаВЗакрытомПериоде(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НовоеЗначение = Элемент.Значение;
	
	Если ВвестиЗначение(НовоеЗначение, "Введите новое значение")
			И Элемент.Значение <> НовоеЗначение Тогда
		Элемент.Значение = НовоеЗначение;
		
		Попытка 
			ОбменДанными.Загрузка = Истина;
			Записать(РежимЗаписиДокумента.Запись);
			ОбменДанными.Загрузка = Ложь;
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;

КонецПроцедуры


Процедура НачислениеДепозитаКонтрагентПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.НачислениеДепозита.ТекущиеДанные;
	
	Если ТекДанные.Договор.Пустая() Тогда
		ТекДанные.Договор = ДопМодульСервер.ПолучитьОсновнойДоговорКонтрагента(ТекДанные.Организация, ТекДанные.Контрагент,
																				?(ЭтотОбъект.ЭтоНовый(), ТекущаяДата(), ЭтотОбъект.Дата));
	КонецЕсли;
	
КонецПроцедуры

Процедура НачислениеДепозитаДоговорПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.НачислениеДепозита.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//
	ТекДанные.СтруктурнаяЕдиница = ТекДанные.Договор.ОбъектАренды.СтруктурнаяЕдиница;
	
КонецПроцедуры


Процедура ПрочаяЗадолженностьПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		ТекДанные = ОформлениеСтроки.ДанныеСтроки;
		СуммаНДСПоСтроке = Окр(УчетНДС.РассчитатьСуммуНДС(ТекДанные.Сумма, Истина, Истина, УчетНДС.ПолучитьСтавкуНДС(ТекДанные.Договор.СтавкаНДС)), 2);
		
		ОформлениеСтроки.Ячейки.СтавкаНДС.УстановитьТекст(ТекДанные.Договор.СтавкаНДС);
		ОформлениеСтроки.Ячейки.СуммаНДС.УстановитьТекст(Формат(СуммаНДСПоСтроке, "ЧДЦ=2"));
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПрочаяЗадолженностьКонтрагентПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.ПрочаяЗадолженность.ТекущиеДанные;
	
	Если ТекДанные.Договор.Пустая() Тогда
		ТекДанные.Договор = ДопМодульСервер.ПолучитьОсновнойДоговорКонтрагента(ТекДанные.Организация, ТекДанные.Контрагент,
																				?(ЭтотОбъект.ЭтоНовый(), ТекущаяДата(), ЭтотОбъект.Дата));
	КонецЕсли;
	
КонецПроцедуры

Процедура ПрочаяЗадолженностьДоговорПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.ПрочаяЗадолженность.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//
	ТекДанные.СтруктурнаяЕдиница = ТекДанные.Договор.ОбъектАренды.СтруктурнаяЕдиница;
	
КонецПроцедуры


Процедура ТипАренднойПлатыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если НЕ ОчиститьНачисленияАренды() Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТипАренднойПлатыПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ТипАренднойПлатыОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры


/////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	Если ЭтотОбъект.ЭтоНовый() Тогда
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ПериодРегистрации) Тогда
			ЭтотОбъект.ПериодРегистрации = НачалоМесяца(ТекущаяДата());
		КонецЕсли;
	КонецЕсли;
	
	//+++АК POZM 2018.01.23 ИП-00017514 
	//УстановитьДоступностьОтДопРолей();
	//---АК POZM 
	
	ЗаполнитьТаблицуЗаявок();
	
	УстановитьВидимость();
	
	мТекущийПериод = ЭтотОбъект.ПериодРегистрации;  	
	
	УстановитьДоступностьФормы();
	
	Для Каждого СтрокаТЧ Из ЭтотОбъект.НачислениеАренды Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.ПериодРегистрации) Тогда
			СтрокаТЧ.ПериодРегистрации = ЭтотОбъект.ПериодРегистрации;
		КонецЕсли; 	
	КонецЦикла;  
	
	ТекущаяТТ = Неопределено;
	Если ДополнительныеСвойства.Свойство("ТТ", ТекущаяТТ) Тогда
		СтрокаАренды = НачислениеАренды.Найти(ТекущаяТТ);
		Если СтрокаАренды <> Неопределено Тогда
			ЭлементыФормы.НачислениеАренды.ТекущаяСтрока = СтрокаАренды;
		КонецЕсли; 
	КонецЕсли; 
	
	//+++ AK suvv 24.04.2018 ИП-00018025
	НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);	
	Если ЭтаФорма.ТолькоПросмотр Тогда
		Если ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.Найти("Действие9") <> Неопределено Тогда 
			ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.Действие9.Доступность = Ложь;
		КонецЕсли;
		Если ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.Найти("РасчитатьДляМСФО") <> Неопределено Тогда 
			ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.РасчитатьДляМСФО.Доступность = Ложь;
		КонецЕсли;
		Если ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.Найти("ДобавитьСтрокуПоЗаявке") <> Неопределено Тогда 
			ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.ДобавитьСтрокуПоЗаявке.Доступность = Ложь;
		КонецЕсли;
		Если ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.Найти("НастройкиРасчетаАрендыМСФО") <> Неопределено Тогда 
			ЭлементыФормы.КоманднаяПанельНачислениеАренды.Кнопки.НастройкиРасчетаАрендыМСФО.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
	//--- AK suvv
	
	//+++АК sils 08.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(ЭтоНовый(), "Новый документ", "" + ЭтотОбъект));
	//---АК
КонецПроцедуры

//+++АК POZM 2018.01.23 ИП-00017514 
Процедура  УстановитьДоступностьОтДопРолей()
	ЭтоБухгалтер = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.БухгалтерПоАренде, Ложь);
	
	ЭтоМенеджер = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.МенеджерПоАренде, Ложь);
	
	Если ЭтоБухгалтер и ЭтоМенеджер Тогда
		Возврат;
	КонецЕсли;	
	
	Если ЭтоНовый() Тогда
		Если ЭтоБухгалтер Тогда
			ВидАренднойПлаты = Перечисления.ВидыАренднойПлаты.ПоСчету;
			ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть;
			ЭлементыФормы.ВидАренднойПлаты.Доступность = Ложь;
			ЭлементыФормы.ТипАренднойПлаты.Доступность = Ложь;
		ИначеЕсли ЭтоМенеджер Тогда
			ВидАренднойПлаты = Перечисления.ВидыАренднойПлаты.Фиксированная;
			ЭлементыФормы.ВидАренднойПлаты.Доступность = Ложь;
		КонецЕсли;	
	КонецЕсли;	
	
	//Если (ЭтоБухгалтер И ВидАренднойПлаты<>Перечисления.ВидыАренднойПлаты.ПоСчету) ИЛИ (ЭтоМенеджер И ВидАренднойПлаты=Перечисления.ВидыАренднойПлаты.ПоСчету) Тогда
	Если (ЭтоМенеджер И ВидАренднойПлаты=Перечисления.ВидыАренднойПлаты.ПоСчету) Тогда

		Для каждого ЭлементФормы Из ЭлементыФормы Цикл
			УстановилиТолькоПросмотр = Ложь;
			
			Попытка
				ЭлементФормы.ТолькоПросмотр = Истина;			
				УстановилиТолькоПросмотр = Истина;
			Исключение
			КонецПопытки; 

			Если НЕ УстановилиТолькоПросмотр Тогда
				Попытка
					ЭлементФормы.Доступность = Ложь;			
				Исключение
				КонецПопытки; 
			КонецЕсли;
			
		КонецЦикла; 		
		
		ЭлементыФормы.ОсновнаяПанель.Доступность = Истина;
		Для Каждого Страница Из ЭлементыФормы.ОсновнаяПанель.Страницы Цикл
			Если Страница.Имя <> "НачислениеАренды" Тогда
				Если Не ЭтоБухгалтер Тогда
					Страница.Доступность = Ложь;
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла;
		
		ЭлементыФормы.НачислениеАренды.ТолькоПросмотр = Ложь;
		
		ЭлементыФормы.ОсновныеДействияФормы.Доступность = Истина;
		Для Каждого Кнопка Из ЭлементыФормы.ОсновныеДействияФормы.Кнопки Цикл
			Если Кнопка.Имя <> "ОсновныеДействияФормыСохранить"
					И Кнопка.Имя <> "ОсновныеДействияФормыЗакрыть" Тогда
				Кнопка.Доступность = Ложь;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли; 
	
	Для Каждого Колонка Из ЭлементыФормы.НачислениеАренды.Колонки Цикл
		Если Колонка.Имя = "НомерАкта" ИЛИ
		         Колонка.Имя = "ДатаАкта" ИЛИ			
		         Колонка.Имя = "НомерСФ" ИЛИ							 
		         Колонка.Имя = "ДатаСФ" ИЛИ
		         Колонка.Имя = "СуммаБух" ИЛИ
				 Колонка.Имя = "ВыгружатьВБухгалтерию" Тогда					 
				 
			Если НЕ ЭтоБухгалтер Тогда
				 //Колонка.ТолькоПросмотр = Истина;
			КонецЕсли;
		ИначеЕсли ЭтоБухгалтер И ВидАренднойПлаты <> Перечисления.ВидыАренднойПлаты.ПоСчету Тогда
			Колонка.ТолькоПросмотр = Истина;
		КонецЕсли;					
	КонецЦикла;

КонецПроцедуры	
//---АК POZM 

Процедура УстановитьДоступностьФормы()
	
	ЕстьПравоЗапрещатьРедактирование = РольДоступна("ПолныеПрава")
										ИЛИ УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.РазрешитьЗапрещатьРедактироватьДокументовНачислениеАренды, Ложь);

	ЭлементыФормы.ЗапретитьРедактирование.Доступность = ЕстьПравоЗапрещатьРедактирование;
	
	Если НЕ ЕстьПравоЗапрещатьРедактирование Тогда
		ЭтаФорма.ТолькоПросмотр = ЗапретитьРедактирование;
	КонецЕсли;
	
	//+++АК POZM 2018.01.23 ИП-00017514 
	//Если УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.РазрешитьЗапрещатьРедактироватьДокументовНачислениеАренды, Ложь) И ВидАренднойПлаты<>Перечисления.ВидыАренднойПлаты.ПоСчету Тогда
	//	//ЭлементыФормы.ОсновнаяПанель.Доступность = Ложь;
	//	//ЭлементыФормы.Организация.Доступность = Ложь;
	//	ЭлементыФормы.ДействияФормы.Кнопки.Действие6.Доступность = Ложь;
	//	ЭлементыФормы.Дата.Доступность 				= Ложь;
	//	ЭлементыФормы.СтавкаНДС.Доступность 		= Ложь;
	//	ЭлементыФормы.ФормаОплаты.Доступность 		= Ложь;
	//	ЭлементыФормы.ТипАренднойПлаты.Доступность 	= Ложь;
	//	ЭлементыФормы.ПериодРегистрации.Доступность = Ложь;
	//	
	//	Для Каждого Колонка Из ЭлементыФормы.НачислениеАренды.Колонки Цикл
	//		Если Колонка.Имя = "СтавкаНДС" Тогда
	//			Продолжить;	
	//		КонецЕсли;		
	//		Колонка.ТолькоПросмотр = Истина;
	//	КонецЦикла;
	//	
	//КонецЕсли;
	//---АК POZM 
	
КонецПроцедуры

Процедура ЗапретитьРедактированиеПриИзменении(Элемент)
	
	УстановитьДоступностьФормы();	
	
КонецПроцедуры

//+++АК GEYV 02.07.2015
Процедура ПрочаяЗадолженностьСчетДтНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = ПланыСчетов.Финансовый.ПолучитьФормуВыбора("ФормаВыбора", Элемент);
	
	ФормаВыбора.Отбор.Ссылка.Использование 	= Истина;
	ФормаВыбора.Отбор.Ссылка.ВидСравнения 	= ВидСравнения.ВИерархии;
	ФормаВыбора.Отбор.Ссылка.Значение 		= ПланыСчетов.Финансовый.ЗатратыДляРаспределения;
	
	ФормаВыбора.Открыть();

КонецПроцедуры

Процедура ПрочаяЗадолженностьСтатьяДРПриИзменении(Элемент)
	
	ТекСтрока = ЭлементыФормы.ПрочаяЗадолженность.ТекущиеДанные;
	ТекСтрока.СчетДт = ОбщегоНазначения.ПолучитьСчет44ДляДр(ТекСтрока.СтатьяДР);
	
	ПрочаяЗадолженностьСчетДтПриИзменении(Элемент);

КонецПроцедуры

Процедура ДатаПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ПрочаяЗадолженностьСчетДтПриИзменении(Элемент)
	
	//Отказ = Ложь;
	//
	//ТекСтрока = ЭлементыФормы.ПрочаяЗадолженность.ТекущиеДанные;
	//
	//ОбщегоНазначения.ПроверитьСчет44ДляДр(Дата,ТекСтрока.СчетДт,ТекСтрока.СтатьяДР,Отказ);
	
КонецПроцедуры

Процедура КоманднаяПанельНачислениеАрендыЗаявкаНаУслуги(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры
//---АК

//++++ АК AZAP 23.08.2017 ИП-00014747
Функция ПолучитьАрендуЗаПериод(НачалоПериода, КонецПериода)
	
	Запрос = Новый Запрос;
    Запрос.УстановитьПараметр("НачалоПериода"		, НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода"		, КонецПериода);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(НачисленияПоДоговорамАренды.Дата, МЕСЯЦ) КАК Период,
	|	НачисленияПоДоговорамАренды.Организация,
	|	НачисленияПоДоговорамАренды.Контрагент,
	|	НачисленияПоДоговорамАренды.Договор,
	|	НачисленияПоДоговорамАренды.ОбъектАренды.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	//+++ AK suvv 15.05.2017 ИП-00018690
	//|	НачисленияПоДоговорамАренды.ОбъектАренды.ЗначениеХарактеристики КАК Площадь,
	//|	СУММА(НачисленияПоДоговорамАренды.Сумма) КАК Сумма
	|	ЕстьNull(НачисленияПоДоговорамАренды.ОбъектАренды.ЗначениеХарактеристики,0) КАК Площадь,
	|	СУММА(ЕстьNull(НачисленияПоДоговорамАренды.Сумма,0)) КАК Сумма
	//--- AK suvv
	|ИЗ
	|	РегистрСведений.НачисленияПоДоговорамАренды КАК НачисленияПоДоговорамАренды
	|ГДЕ
	|	НачисленияПоДоговорамАренды.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НачисленияПоДоговорамАренды.ТипАренднойПлаты = ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПеременнаяЧасть)
	//+++ AK suvv 28.05.2018 ИП-00018737
	|   И НачисленияПоДоговорамАренды.Регистратор.ВидАренднойПлаты = ЗНАЧЕНИЕ(Перечисление.ВидыАренднойПлаты.ПоСчету)
	|   И НачисленияПоДоговорамАренды.Сумма <> 0
	//--- AK suvv
	|
	|СГРУППИРОВАТЬ ПО
	|	НачисленияПоДоговорамАренды.Организация,
	|	НачисленияПоДоговорамАренды.Контрагент,
	|	НачисленияПоДоговорамАренды.Договор,
	|	НачисленияПоДоговорамАренды.ОбъектАренды.СтруктурнаяЕдиница,
	|	НачисленияПоДоговорамАренды.ОбъектАренды.ЗначениеХарактеристики,
	|	НАЧАЛОПЕРИОДА(НачисленияПоДоговорамАренды.Дата, МЕСЯЦ)";
	Результат = Запрос.Выполнить().Выгрузить();

	Возврат Результат;
	
	времТаб = Новый ТаблицаЗначений;
	времТаб.Колонки.Добавить("Период");
	
	н = 0; СуммаЗаМетрВсего = 0;
	Для каждого Строка Из Результат Цикл	
		Если (Строка.ТТТорговаяПлощадь = 0 ИЛИ Строка.ТТТорговаяПлощадь = 1)
			И СписокТТсОшибочнойПлощадью.НайтиПоЗначению(Строка.ТТ) = Неопределено Тогда
			Сообщить("У объекта аренды " + Строка.ТТ + " площадь " + Строка.ТТТорговаяПлощадь + ". Его стоимость аренды не будет учитываться.");
			СписокТТсОшибочнойПлощадью.Добавить(Строка.ТТ);
		ИначеЕсли Строка.ТТТорговаяПлощадь > 1 И Строка.Сумма > 0 Тогда
			новСтр = времТаб.Добавить();
			новСтр.Период = Строка.Период;
			СуммаЗаМетрВсего = СуммаЗаМетрВсего + Строка.Сумма / Строка.ТТТорговаяПлощадь;
			н = н + 1;
		КонецЕсли;		
	КонецЦикла;
	
	мСтруктура = Новый Структура;
	времТаб.Свернуть("Период");
	мСтруктура.Вставить("КоличествоПериодов"	, времТаб.Количество());
	мСтруктура.Вставить("СуммаЗаМетр"			, ?(н = 0, 0, СуммаЗаМетрВсего / н));	//средняя сумма за метр
	
	Возврат мСтруктура;
	
КонецФункции

Функция ПолучитьДанныеАренды(ДанныеАренды, НачалоПериода, КонецПериода, Организация, Контрагент = Неопределено, Договор = Неопределено, СтруктурнаяЕдиница = Неопределено)
	
	Отбор = Новый Структура();
	Отбор.Вставить("Организация", Организация);
	Если Контрагент <> Неопределено Тогда
		Отбор.Вставить("Контрагент", Контрагент);
	КонецЕсли;
	Если Договор <> Неопределено Тогда
		Отбор.Вставить("Договор", Договор);
	КонецЕсли;
	Если СтруктурнаяЕдиница <> Неопределено Тогда
		Отбор.Вставить("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	КонецЕсли;
	Строки = ДанныеАренды.НайтиСтроки(Отбор);
	
	СуммаЗаМетрВсего = 0; н = 0;
	времТаб = Новый ТаблицаЗначений;
	времТаб.Колонки.Добавить("Период");
	Для каждого СтрокаТекДанных Из Строки Цикл
		Если СтрокаТекДанных.Период >= НачалоПериода И СтрокаТекДанных.Период <= КонецПериода Тогда
			
			Если (СтрокаТекДанных.Площадь = 0 ИЛИ СтрокаТекДанных.Площадь = 1)
				И СписокТТсОшибочнойПлощадью.НайтиПоЗначению(СтрокаТекДанных.СтруктурнаяЕдиница) = Неопределено Тогда
				Сообщить("У объекта аренды " + СтрокаТекДанных.СтруктурнаяЕдиница + " площадь " + СтрокаТекДанных.Площадь + ". Его стоимость аренды не будет учитываться.");
				СписокТТсОшибочнойПлощадью.Добавить(СтрокаТекДанных.СтруктурнаяЕдиница);
			ИначеЕсли СтрокаТекДанных.Площадь > 1 И СтрокаТекДанных.Сумма > 0 Тогда
				новСтр = времТаб.Добавить();
				новСтр.Период = СтрокаТекДанных.Период;
				СуммаЗаМетрВсего = СуммаЗаМетрВсего + СтрокаТекДанных.Сумма / СтрокаТекДанных.Площадь;
				н = н + 1;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	времТаб.Свернуть("Период");
	мСтруктура = Новый Структура;
	мСтруктура.Вставить("КоличествоПериодов"	, времТаб.Количество());
	мСтруктура.Вставить("СуммаЗаМетр"			, ?(н = 0, 0, СуммаЗаМетрВсего / н));	//средняя сумма за метр

    Возврат мСтруктура;
	
КонецФункции

//+++ AK suvv 27.07.2018 ИП-00018737
Функция ПолучитьДанныеКорректировок()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоначисленоТекущимДокументом.Организация,
	|	ДоначисленоТекущимДокументом.Контрагент,
	|	ДоначисленоТекущимДокументом.Договор,
	|	ДоначисленоТекущимДокументом.СтруктурнаяЕдиница,
	|	ДоначисленоТекущимДокументом.Сумма,
	|	ДоначисленоТекущимДокументом.АК_РасчетнаяСумма,
	|	ДоначисленоТекущимДокументом.Комментарий
	|ПОМЕСТИТЬ ВТ_ДоначисленоТекущимДокументом
	|ИЗ
	|	&ДоначисленоТекущимДокументом КАК ДоначисленоТекущимДокументом
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АК_РасчетныеНачисленияПоАрендеМСФО.Организация,
	|	АК_РасчетныеНачисленияПоАрендеМСФО.СтруктурнаяЕдиница,
	|	АК_РасчетныеНачисленияПоАрендеМСФО.Контрагент,
	|	АК_РасчетныеНачисленияПоАрендеМСФО.Договор,
	|	СУММА(ВЫБОР
	|			КОГДА АК_РасчетныеНачисленияПоАрендеМСФО.РасчетнаяСумма > 0
	|				ТОГДА АК_РасчетныеНачисленияПоАрендеМСФО.РасчетнаяСумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаНачислено,
	|	СУММА(ВЫБОР
	|			КОГДА АК_РасчетныеНачисленияПоАрендеМСФО.РасчетнаяСумма < 0
	|				ТОГДА АК_РасчетныеНачисленияПоАрендеМСФО.РасчетнаяСумма
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаСторнировано
	|ПОМЕСТИТЬ ВТ_НачисленоСторнировано
	|ИЗ
	|	РегистрНакопления.АК_РасчетныеНачисленияПоАрендеМСФО КАК АК_РасчетныеНачисленияПоАрендеМСФО
	|ГДЕ
	|	АК_РасчетныеНачисленияПоАрендеМСФО.РасчетныйПериод = &РасчетныйПериод
	|
	|СГРУППИРОВАТЬ ПО
	|	АК_РасчетныеНачисленияПоАрендеМСФО.Договор,
	|	АК_РасчетныеНачисленияПоАрендеМСФО.Контрагент,
	|	АК_РасчетныеНачисленияПоАрендеМСФО.Организация,
	|	АК_РасчетныеНачисленияПоАрендеМСФО.СтруктурнаяЕдиница
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ДоначисленоТекущимДокументом.Организация,
	|	ВТ_ДоначисленоТекущимДокументом.СтруктурнаяЕдиница,
	|	ВТ_ДоначисленоТекущимДокументом.Контрагент,
	|	ВТ_ДоначисленоТекущимДокументом.Договор,
	|	ВЫБОР
	|		КОГДА ВТ_ДоначисленоТекущимДокументом.АК_РасчетнаяСумма > 0
	|			ТОГДА ВТ_ДоначисленоТекущимДокументом.АК_РасчетнаяСумма
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ВТ_ДоначисленоТекущимДокументом.АК_РасчетнаяСумма < 0
	|			ТОГДА ВТ_ДоначисленоТекущимДокументом.АК_РасчетнаяСумма
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	ВТ_ДоначисленоТекущимДокументом КАК ВТ_ДоначисленоТекущимДокументом
	//+++ AK suvv 25.06.2018 ИП-00018995
	//|ГДЕ
	//|	ВТ_ДоначисленоТекущимДокументом.Комментарий = ""дозаполнено""
	//---- AK suvv
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НачисленоСторнировано.Организация,
	|	ВТ_НачисленоСторнировано.СтруктурнаяЕдиница,
	|	ВТ_НачисленоСторнировано.Контрагент,
	|	ВТ_НачисленоСторнировано.Договор,
	|	СУММА(ВТ_НачисленоСторнировано.СуммаНачислено) КАК СуммаНачислено,
	|	СУММА(ВТ_НачисленоСторнировано.СуммаСторнировано) КАК СуммаСторнировано
	|ПОМЕСТИТЬ ВТ_НачисленоСторнированоГруппа
	|ИЗ
	|	ВТ_НачисленоСторнировано КАК ВТ_НачисленоСторнировано
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_НачисленоСторнировано.Контрагент,
	|	ВТ_НачисленоСторнировано.СтруктурнаяЕдиница,
	|	ВТ_НачисленоСторнировано.Организация,
	|	ВТ_НачисленоСторнировано.Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НачисленияПоДоговорамАренды.Организация,
	|	НачисленияПоДоговорамАренды.Договор,
	|	НачисленияПоДоговорамАренды.ОбъектАренды
	|ПОМЕСТИТЬ ВТ_ДоговораДолжноБытьСторно
	|ИЗ
	|	РегистрСведений.НачисленияПоДоговорамАренды КАК НачисленияПоДоговорамАренды
	|ГДЕ
	|	НачисленияПоДоговорамАренды.ТипАренднойПлаты = ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПеременнаяЧасть)
	|	И НачисленияПоДоговорамАренды.Договор.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком)
	|	И НачисленияПоДоговорамАренды.Договор.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСПоставщиком.Аренда)
	|	И НачисленияПоДоговорамАренды.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&РасчетныйПериод, МЕСЯЦ) И КОНЕЦПЕРИОДА(&РасчетныйПериод, МЕСЯЦ)
	|	И НачисленияПоДоговорамАренды.Регистратор ССЫЛКА Документ.НачислениеАренднойПлатыОтАрендодателей
	|	И НачисленияПоДоговорамАренды.Сумма <> 0
	|	И НачисленияПоДоговорамАренды.Регистратор.ВидАренднойПлаты = ЗНАЧЕНИЕ(Перечисление.ВидыАренднойПлаты.ПоСчету)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НачисленоСторнированоГруппа.Организация,
	|	ВТ_НачисленоСторнированоГруппа.СтруктурнаяЕдиница,
	|	ВТ_НачисленоСторнированоГруппа.Контрагент,
	|	ВТ_НачисленоСторнированоГруппа.Договор,
	|	ВТ_НачисленоСторнированоГруппа.СуммаНачислено,
	|	ВТ_НачисленоСторнированоГруппа.СуммаСторнировано,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_ДоговораДолжноБытьСторно.Договор, """") = """"
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ДолжноБытьСторнировано
	|ПОМЕСТИТЬ ВТ_ДоговораСПризнаком
	|ИЗ
	|	ВТ_НачисленоСторнированоГруппа КАК ВТ_НачисленоСторнированоГруппа
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДоговораДолжноБытьСторно КАК ВТ_ДоговораДолжноБытьСторно
	|		ПО ВТ_НачисленоСторнированоГруппа.Организация = ВТ_ДоговораДолжноБытьСторно.Организация
	|			И ВТ_НачисленоСторнированоГруппа.Договор = ВТ_ДоговораДолжноБытьСторно.Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДоговораСПризнаком.Организация,
	|	ВТ_ДоговораСПризнаком.СтруктурнаяЕдиница,
	|	ВТ_ДоговораСПризнаком.Контрагент,
	|	ВТ_ДоговораСПризнаком.Договор,
	|	ВТ_ДоговораСПризнаком.СуммаНачислено,
	|	ВТ_ДоговораСПризнаком.СуммаСторнировано,
	//+++ AK suvv 24.06.2018 ИП-00018995
	//|	ВЫБОР
	//|		КОГДА ВТ_ДоговораСПризнаком.ДолжноБытьСторнировано = ЛОЖЬ
	//|				И ВТ_ДоговораСПризнаком.СуммаСторнировано <> 0
	//|			ТОГДА ВТ_ДоговораСПризнаком.СуммаСторнировано * -1
	//|		КОГДА ВТ_ДоговораСПризнаком.ДолжноБытьСторнировано = ИСТИНА
	//|				И ВТ_ДоговораСПризнаком.СуммаНачислено <> ВТ_ДоговораСПризнаком.СуммаСторнировано
	//|			ТОГДА (ВТ_ДоговораСПризнаком.СуммаНачислено + ВТ_ДоговораСПризнаком.СуммаСторнировано) * -1
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК СуммаКорректировки
	|ВЫБОР
	|	КОГДА (ВТ_ДоговораСПризнаком.ДолжноБытьСторнировано = ЛОЖЬ
	|				И ВТ_ДоговораСПризнаком.СуммаСторнировано <> 0
	|			ИЛИ ВТ_ДоговораСПризнаком.ДолжноБытьСторнировано = ИСТИНА)
	|			И ВТ_ДоговораСПризнаком.СуммаНачислено <> ВТ_ДоговораСПризнаком.СуммаСторнировано
	|		ТОГДА (ВТ_ДоговораСПризнаком.СуммаНачислено + ВТ_ДоговораСПризнаком.СуммаСторнировано) * -1
	|	ИНАЧЕ 0
	|КОНЕЦ КАК СуммаКорректировки
	//--- AK suvv
	|ПОМЕСТИТЬ ВТ_РасчетСуммыКорректировки
	|ИЗ
	|	ВТ_ДоговораСПризнаком КАК ВТ_ДоговораСПризнаком
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РасчетСуммыКорректировки.Организация,
	|	ВТ_РасчетСуммыКорректировки.СтруктурнаяЕдиница,
	|	ВТ_РасчетСуммыКорректировки.Контрагент,
	|	ВТ_РасчетСуммыКорректировки.Договор,
	|	ВТ_РасчетСуммыКорректировки.СуммаКорректировки
	|ИЗ
	|	ВТ_РасчетСуммыКорректировки КАК ВТ_РасчетСуммыКорректировки
	|ГДЕ
	|	ВТ_РасчетСуммыКорректировки.СуммаКорректировки <> 0";
	
	Запрос.УстановитьПараметр("ДоначисленоТекущимДокументом", НачислениеАренды);
	Запрос.УстановитьПараметр("РасчетныйПериод", ПериодРегистрации);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции //--- AK suvv

//+++ AK suvv 20.06.2018 ИП-00018995
//Функция ПолучитьСторноСуммПоДоговорамМеньше21Дня()
Функция ПолучитьСторноСуммПоДоговорам()
//--- AK suvv
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АК_РасчетныеНачисленияПоАрендеМСФО.Договор,
	|	АК_РасчетныеНачисленияПоАрендеМСФО.Организация,
	|	АК_РасчетныеНачисленияПоАрендеМСФО.Контрагент,
	|	АК_РасчетныеНачисленияПоАрендеМСФО.СтруктурнаяЕдиница,
	|	СУММА(АК_РасчетныеНачисленияПоАрендеМСФО.РасчетнаяСумма) КАК РасчетнаяСумма
	|ПОМЕСТИТЬ ВТ_ВсеНачисления
	|ИЗ
	|	РегистрНакопления.АК_РасчетныеНачисленияПоАрендеМСФО КАК АК_РасчетныеНачисленияПоАрендеМСФО
	|ГДЕ
	|	АК_РасчетныеНачисленияПоАрендеМСФО.РасчетныйПериод МЕЖДУ &НачалоПериода И &КонецПериода
	|	И АК_РасчетныеНачисленияПоАрендеМСФО.РасчетнаяСумма <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	АК_РасчетныеНачисленияПоАрендеМСФО.Договор,
	|	АК_РасчетныеНачисленияПоАрендеМСФО.Организация,
	|	АК_РасчетныеНачисленияПоАрендеМСФО.Контрагент,
	|	АК_РасчетныеНачисленияПоАрендеМСФО.СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсеНачисления.Договор,
	|	ВТ_ВсеНачисления.Организация,
	|	ВТ_ВсеНачисления.Контрагент,
	|	ВТ_ВсеНачисления.СтруктурнаяЕдиница,
	|	ВТ_ВсеНачисления.РасчетнаяСумма
	|ПОМЕСТИТЬ ВТ_ВсеНачисленияСОтбором
	|ИЗ
	|	ВТ_ВсеНачисления КАК ВТ_ВсеНачисления
	|ГДЕ
	|	ВТ_ВсеНачисления.РасчетнаяСумма <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыДоговоровАрендыСрезПоследних.Договор,
	|	СтатусыДоговоровАрендыСрезПоследних.ОбъектАренды,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАрендыСрезПоследних.ДатаНачалаАренды < &НачалоПериода
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ СтатусыДоговоровАрендыСрезПоследних.ДатаНачалаАренды
	|	КОНЕЦ КАК ДатаНачалаДоговора,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАрендыСрезПоследних.ДатаОкончанияАренды > &КонецПериода
	|			ТОГДА &КонецПериода
	|		ИНАЧЕ СтатусыДоговоровАрендыСрезПоследних.ДатаОкончанияАренды
	|	КОНЕЦ КАК ДатаОкончанияДоговора,
	|	СтатусыДоговоровАрендыСрезПоследних.Регистратор,
	|	СУММА(ВЫБОР
	|			КОГДА СтатусыДоговоровАрендыСрезПоследних.Регистратор ССЫЛКА Документ.ЗаключениеДоговораАренды
	|				ТОГДА ВЫБОР
	|						КОГДА ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.СпособНачисления.Код = ""000000002""
	//+++ AK suvv 14.06.2018 ИП-00018763
	|								И НЕ ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Аванс
	//--- AK suvv
	|							ТОГДА 1
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			КОГДА СтатусыДоговоровАрендыСрезПоследних.Регистратор ССЫЛКА Документ.ДополнительноеСоглашение
	|				ТОГДА ВЫБОР
	|						КОГДА ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.СпособНачисления.Код = ""000000002""
	//+++ AK suvv 14.06.2018 ИП-00018763
	|								И НЕ ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.Аванс
	//--- AK suvv
	|							ТОГДА 1
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоСпособовПоОбъекту,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАрендыСрезПоследних.Период <= &НачалоПериода
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ СтатусыДоговоровАрендыСрезПоследних.Период
	|	КОНЕЦ КАК ДатаСобытия,
	//+++ AK suvv 20.06.2018 ИП-00018995
	//|	СтатусыДоговоровАрендыСрезПоследних.Регистратор.Организация КАК Организация
	|	СтатусыДоговоровАрендыСрезПоследних.Регистратор.Организация КАК Организация,
	|   ВЫБОР
	|	    КОГДА СтатусыДоговоровАрендыСрезПоследних.Регистратор ССЫЛКА Документ.ЗаключениеДоговораАренды
	|		    ТОГДА СтатусыДоговоровАрендыСрезПоследних.Регистратор.ВидОперации
	|	    ИНАЧЕ СтатусыДоговоровАрендыСрезПоследних.Регистратор.ДокументОснование.ВидОперации
	|   КОНЕЦ КАК ВидОперации
	//--- AK suvv
	|ПОМЕСТИТЬ ВТ_ДоговораНачПериод
	|ИЗ
	|	ВТ_ВсеНачисленияСОтбором КАК ВТ_ВсеНачисленияСОтбором
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДоговоровАренды.СрезПоследних(&НачалоПериода, ) КАК СтатусыДоговоровАрендыСрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаключениеДоговораАренды.ПеременнаяЧастьАренднойПлаты КАК ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты
	|			ПО СтатусыДоговоровАрендыСрезПоследних.Регистратор = ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДополнительноеСоглашение.ПеременнаяЧастьАренднойПлаты КАК ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты
	|			ПО СтатусыДоговоровАрендыСрезПоследних.Регистратор = ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.Ссылка
	|		ПО ВТ_ВсеНачисленияСОтбором.Договор = СтатусыДоговоровАрендыСрезПоследних.Договор
	|ГДЕ
	|	СтатусыДоговоровАрендыСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
	|	И СтатусыДоговоровАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатусыДоговоровАрендыСрезПоследних.Договор,
	|	СтатусыДоговоровАрендыСрезПоследних.ОбъектАренды,
	|	СтатусыДоговоровАрендыСрезПоследних.Регистратор,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАрендыСрезПоследних.ДатаНачалаАренды < &НачалоПериода
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ СтатусыДоговоровАрендыСрезПоследних.ДатаНачалаАренды
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАрендыСрезПоследних.ДатаОкончанияАренды > &КонецПериода
	|			ТОГДА &КонецПериода
	|		ИНАЧЕ СтатусыДоговоровАрендыСрезПоследних.ДатаОкончанияАренды
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАрендыСрезПоследних.Период <= &НачалоПериода
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ СтатусыДоговоровАрендыСрезПоследних.Период
	|	КОНЕЦ,
	//+++ AK suvv 20.06.2018 ИП-00018995
	//|	СтатусыДоговоровАрендыСрезПоследних.Регистратор.Организация
	|	СтатусыДоговоровАрендыСрезПоследних.Регистратор.Организация,
	|   ВЫБОР
	|    	КОГДА СтатусыДоговоровАрендыСрезПоследних.Регистратор ССЫЛКА Документ.ЗаключениеДоговораАренды
	|    		ТОГДА СтатусыДоговоровАрендыСрезПоследних.Регистратор.ВидОперации
	|    	ИНАЧЕ СтатусыДоговоровАрендыСрезПоследних.Регистратор.ДокументОснование.ВидОперации
	|   КОНЕЦ
	//--- AK suvv
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыДоговоровАренды.Договор,
	|	СтатусыДоговоровАренды.ОбъектАренды,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАренды.ДатаНачалаАренды < &НачалоПериода
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ СтатусыДоговоровАренды.ДатаНачалаАренды
	|	КОНЕЦ КАК ДатаНачалаДоговора,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАренды.ДатаОкончанияАренды > &КонецПериода
	|			ТОГДА &КонецПериода
	|		ИНАЧЕ СтатусыДоговоровАренды.ДатаОкончанияАренды
	|	КОНЕЦ КАК ДатаОкончанияДоговора,
	|	СтатусыДоговоровАренды.Регистратор,
	|	СУММА(ВЫБОР
	|			КОГДА СтатусыДоговоровАренды.Регистратор ССЫЛКА Документ.ЗаключениеДоговораАренды
	|				ТОГДА ВЫБОР
	|						КОГДА ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.СпособНачисления.Код = ""000000002""
	//+++ AK suvv 14.06.2018 ИП-00018763
	|								И НЕ ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Аванс
	//--- AK suvv
	|							ТОГДА 1
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			КОГДА СтатусыДоговоровАренды.Регистратор ССЫЛКА Документ.ДополнительноеСоглашение
	|				ТОГДА ВЫБОР
	|						КОГДА ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.СпособНачисления.Код = ""000000002""
	//+++ AK suvv 14.06.2018 ИП-00018763
	|								И НЕ ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.Аванс
	//--- AK suvv
	|							ТОГДА 1
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			КОГДА СтатусыДоговоровАренды.Регистратор ССЫЛКА Документ.РасторжениеДоговораАренды
	|				ТОГДА ВЫБОР
	|						КОГДА РасторжениеДоговораАрендыПеременнаяЧастьАренднойПлаты.СпособНачисления.Код = ""000000002""
	|							ТОГДА 1
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоСпособовПоОбъекту,
	|	НАЧАЛОПЕРИОДА(СтатусыДоговоровАренды.Период, ДЕНЬ) КАК ДатаСобытия,
	//+++ AK suvv 20.06.2018 ИП-00018995
	//|	СтатусыДоговоровАренды.Регистратор.Организация КАК Организация
	|	СтатусыДоговоровАренды.Регистратор.Организация КАК Организация,
	|   ВЫБОР
	|   	КОГДА СтатусыДоговоровАренды.Регистратор ССЫЛКА Документ.ЗаключениеДоговораАренды
	|   		ТОГДА СтатусыДоговоровАренды.Регистратор.ВидОперации
	|   	ИНАЧЕ СтатусыДоговоровАренды.Регистратор.ДокументОснование.ВидОперации
	|   КОНЕЦ КАК ВидОперации
	//--- AK suvv
	|ПОМЕСТИТЬ ВТ_ИзмененияЗаПериод
	|ИЗ
	|	ВТ_ВсеНачисленияСОтбором КАК ВТ_ВсеНачисленияСОтбором
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДоговоровАренды КАК СтатусыДоговоровАренды
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаключениеДоговораАренды.ПеременнаяЧастьАренднойПлаты КАК ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты
	|			ПО СтатусыДоговоровАренды.Регистратор = ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДополнительноеСоглашение.ПеременнаяЧастьАренднойПлаты КАК ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты
	|			ПО СтатусыДоговоровАренды.Регистратор = ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасторжениеДоговораАренды.ПеременнаяЧастьАренднойПлаты КАК РасторжениеДоговораАрендыПеременнаяЧастьАренднойПлаты
	|			ПО СтатусыДоговоровАренды.Регистратор = РасторжениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Ссылка
	|		ПО ВТ_ВсеНачисленияСОтбором.Договор = СтатусыДоговоровАренды.Договор
	|ГДЕ
	|	СтатусыДоговоровАренды.Период > &НачалоПериода
	|	И СтатусыДоговоровАренды.Период <= &КонецПериода
	//+++ AK suvv 14.06.2018 ИП-00018763
	|	И НЕ ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Аванс
	|	И НЕ ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.Аванс
	//--- AK suvv
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатусыДоговоровАренды.Договор,
	|	СтатусыДоговоровАренды.ОбъектАренды,
	|	СтатусыДоговоровАренды.Регистратор,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАренды.ДатаНачалаАренды < &НачалоПериода
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ СтатусыДоговоровАренды.ДатаНачалаАренды
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАренды.ДатаОкончанияАренды > &КонецПериода
	|			ТОГДА &КонецПериода
	|		ИНАЧЕ СтатусыДоговоровАренды.ДатаОкончанияАренды
	|	КОНЕЦ,
	|	НАЧАЛОПЕРИОДА(СтатусыДоговоровАренды.Период, ДЕНЬ),
	//+++ AK suvv 20.06.2018 ИП-00018995
	//|	СтатусыДоговоровАренды.Регистратор.Организация
	|	СтатусыДоговоровАренды.Регистратор.Организация,
	|   ВЫБОР
	|   	КОГДА СтатусыДоговоровАренды.Регистратор ССЫЛКА Документ.ЗаключениеДоговораАренды
	|   		ТОГДА СтатусыДоговоровАренды.Регистратор.ВидОперации
	|   	ИНАЧЕ СтатусыДоговоровАренды.Регистратор.ДокументОснование.ВидОперации
	|   КОНЕЦ
	//--- AK suvv
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДоговораНачПериод.Договор,
	|	ВТ_ДоговораНачПериод.ОбъектАренды,
	|	ВТ_ДоговораНачПериод.ДатаНачалаДоговора,
	|	ВТ_ДоговораНачПериод.ДатаОкончанияДоговора,
	|	ВТ_ДоговораНачПериод.Регистратор,
	|	ВТ_ДоговораНачПериод.КоличествоСпособовПоОбъекту,
	|	ВТ_ДоговораНачПериод.ДатаСобытия,
	//+++ AK suvv 20.06.2018 ИП-00018995
	//|	ВТ_ДоговораНачПериод.Организация
	|	ВТ_ДоговораНачПериод.Организация,
	|   ВТ_ДоговораНачПериод.ВидОперации
	//--- AK suvv
	|ПОМЕСТИТЬ ВТ_Объединение
	|ИЗ
	|	ВТ_ДоговораНачПериод КАК ВТ_ДоговораНачПериод
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ИзмененияЗаПериод.Договор,
	|	ВТ_ИзмененияЗаПериод.ОбъектАренды,
	|	ВТ_ИзмененияЗаПериод.ДатаНачалаДоговора,
	|	ВТ_ИзмененияЗаПериод.ДатаОкончанияДоговора,
	|	ВТ_ИзмененияЗаПериод.Регистратор,
	|	ВТ_ИзмененияЗаПериод.КоличествоСпособовПоОбъекту,
	|	ВТ_ИзмененияЗаПериод.ДатаСобытия,
	//+++ AK suvv 20.06.2018 ИП-00018995
	//|	ВТ_ИзмененияЗаПериод.Организация
	|	ВТ_ИзмененияЗаПериод.Организация,
	|   ВТ_ИзмененияЗаПериод.ВидОперации
	//--- AK suvv
	|ИЗ
	|	ВТ_ИзмененияЗаПериод КАК ВТ_ИзмененияЗаПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Объединение.Договор,
	|	ВТ_Объединение.ОбъектАренды,
	|	ВТ_Объединение.ДатаНачалаДоговора,
	|	ВТ_Объединение.ДатаОкончанияДоговора,
	|	ВТ_Объединение.Регистратор,
	|	ВТ_Объединение.КоличествоСпособовПоОбъекту,
	|	ВТ_Объединение.ДатаСобытия КАК ДатаНачалаСобытия,
	|	ЕСТЬNULL(ДОБАВИТЬКДАТЕ(МИНИМУМ(ВТ_Объединение1.ДатаСобытия), ДЕНЬ, -1), ВЫБОР
	|			КОГДА ВТ_Объединение.ДатаОкончанияДоговора > &конецПериода
	|				ТОГДА &КонецПериода
	|			ИНАЧЕ ВТ_Объединение.ДатаОкончанияДоговора
	|		КОНЕЦ) КАК ДатаОкончанияСобытия,
	//+++ AK suvv 20.06.2018 ИП-00018995
	//|	ВТ_Объединение.Организация
	|	ВТ_Объединение.Организация,
	|   ВТ_Объединение.ВидОперации
	//--- AK suvv
	|ПОМЕСТИТЬ ВТ_ДоговорыПоПериодам
	|ИЗ
	|	ВТ_Объединение КАК ВТ_Объединение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Объединение КАК ВТ_Объединение1
	|		ПО ВТ_Объединение.Договор = ВТ_Объединение1.Договор
	|			И ВТ_Объединение.ОбъектАренды = ВТ_Объединение1.ОбъектАренды
	|			И ВТ_Объединение.ДатаСобытия < ВТ_Объединение1.ДатаСобытия
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Объединение.Договор,
	|	ВТ_Объединение.ОбъектАренды,
	|	ВТ_Объединение.ДатаНачалаДоговора,
	|	ВТ_Объединение.ДатаОкончанияДоговора,
	|	ВТ_Объединение.Регистратор,
	|	ВТ_Объединение.КоличествоСпособовПоОбъекту,
	|	ВТ_Объединение.ДатаСобытия,
	//+++ AK suvv 20.06.2018 ИП-00018995
	//|	ВТ_Объединение.Организация
	|	ВТ_Объединение.Организация,
	|   ВТ_Объединение.ВидОперации
	//--- AK suvv
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДоговорыПоПериодам.Договор,
	|	ВТ_ДоговорыПоПериодам.ОбъектАренды,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_ДоговорыПоПериодам.КоличествоСпособовПоОбъекту > 0
	|				ТОГДА РАЗНОСТЬДАТ(ВТ_ДоговорыПоПериодам.ДатаНачалаСобытия, ВТ_ДоговорыПоПериодам.ДатаОкончанияСобытия, ДЕНЬ) + 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоДнейДействия,
	//+++ AK suvv 20.06.2018 ИП-00018995
	//|	ВТ_ДоговорыПоПериодам.Организация
	|	ВТ_ДоговорыПоПериодам.Организация,
	|   ВТ_ДоговорыПоПериодам.ВидОперации
	//--- AK suvv
	|ПОМЕСТИТЬ ВТ_ДоговорыСКолвомДнейДействия
	|ИЗ
	|	ВТ_ДоговорыПоПериодам КАК ВТ_ДоговорыПоПериодам
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДоговорыПоПериодам.Договор,
	|	ВТ_ДоговорыПоПериодам.ОбъектАренды,
	//+++ AK suvv 20.06.2018 ИП-00018995
	//|	ВТ_ДоговорыПоПериодам.Организация
	|	ВТ_ДоговорыПоПериодам.Организация,
	|	ВТ_ДоговорыПоПериодам.ВидОперации
	//--- AK suvv
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДоговорыСКолвомДнейДействия.Договор,
	|	ВТ_ДоговорыСКолвомДнейДействия.ОбъектАренды,
	//+++ AK suvv 20.06.2018 ИП-00018995
	//|	ВТ_ДоговорыСКолвомДнейДействия.Организация
	|	ВТ_ДоговорыСКолвомДнейДействия.Организация,
	|   ВТ_ДоговорыСКолвомДнейДействия.ВидОперации,
	|   ВТ_ДоговорыСКолвомДнейДействия.КоличествоДнейДействия
	//--- AK suvv
	|ПОМЕСТИТЬ ВТ_ДоговорыДляРасчета
	|ИЗ
	|	ВТ_ДоговорыСКолвомДнейДействия КАК ВТ_ДоговорыСКолвомДнейДействия
	|ГДЕ
	//+++ AK suvv 20.06.2018 ИП-00018995
	//|	ВТ_ДоговорыСКолвомДнейДействия.КоличествоДнейДействия <= 20
	|(ВТ_ДоговорыСКолвомДнейДействия.КоличествоДнейДействия <= 20
	|		ИЛИ ВТ_ДоговорыСКолвомДнейДействия.ВидОперации <> ЗНАЧЕНИЕ(Перечисление.ВидыОперацийДоговоровАренды.САрендодателем))
	//--- AK suvv
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ВсеНачисленияСОтбором.Договор,
	|	ВТ_ВсеНачисленияСОтбором.Организация,
	|	ВТ_ВсеНачисленияСОтбором.Контрагент,
	|	ВТ_ВсеНачисленияСОтбором.СтруктурнаяЕдиница,
	//+++ AK suvv 20.06.2018 ИП-00018995
	//|	ВТ_ВсеНачисленияСОтбором.РасчетнаяСумма
	|	ВТ_ВсеНачисленияСОтбором.РасчетнаяСумма,
	|   ВЫБОР
	|   	КОГДА ВТ_ДоговорыДляРасчета.КоличествоДнейДействия <= 20
	|   		ТОГДА ""сторно < 21 дня""
	|   	ИНАЧЕ ""сторно договора с арендатором""
	|   КОНЕЦ КАК Комментарий
	//--- AK suvv
	|ИЗ
	|	ВТ_ДоговорыДляРасчета КАК ВТ_ДоговорыДляРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВсеНачисленияСОтбором КАК ВТ_ВсеНачисленияСОтбором
	|		ПО ВТ_ДоговорыДляРасчета.Договор = ВТ_ВсеНачисленияСОтбором.Договор";
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

Процедура КоманднаяПанельНачислениеАрендыРасчитатьДляМСФО_Старая(Кнопка)
	
	Если НЕ ЭтотОбъект.ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть Тогда
		Возврат;
	КонецЕсли;
	
	//добавляем недостающие структурные единицы
	//+++ AK suvv 15.05.2017 ИП-00018690
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	НачислениеАренды.Организация,
	//	|	НачислениеАренды.Контрагент,
	//	|	НачислениеАренды.Договор,
	//	|	НачислениеАренды.СтруктурнаяЕдиница,
	//	|	НачислениеАренды.ПериодРегистрации
	//	|ПОМЕСТИТЬ НачислениеАренды
	//	|ИЗ
	//	|	&ВнешняяТабНачислениеАренды КАК НачислениеАренды
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	//	|	Свертка.Организация,
	//	|	Свертка.Контрагент,
	//	|	Свертка.ДоговорКонтрагента,
	//	|	Свертка.ОбъектАренды.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	//	|ИЗ
	//	|	(ВЫБРАТЬ
	//	|		ТЧ.Ссылка.Организация КАК Организация,
	//	|		ТЧ.Ссылка.Контрагент КАК Контрагент,
	//	|		ТЧ.Ссылка.ДоговорКонтрагента КАК ДоговорКонтрагента,
	//	|		ТЧ.Ссылка.ОбъектАренды КАК ОбъектАренды,
	//	|		НачислениеАренды.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	//	|	ИЗ
	//	|		Документ.ЗаключениеДоговораАренды.ПеременнаяЧастьАренднойПлаты КАК ТЧ
	//	|			ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАренды КАК НачислениеАренды
	//	|			ПО ТЧ.Ссылка.Организация = НачислениеАренды.Организация
	//	|				И ТЧ.Ссылка.Контрагент = НачислениеАренды.Контрагент
	//	|				И ТЧ.Ссылка.ДоговорКонтрагента = НачислениеАренды.Договор
	//	|				И ТЧ.Ссылка.ОбъектАренды.СтруктурнаяЕдиница = НачислениеАренды.СтруктурнаяЕдиница
	//	|				И (НачислениеАренды.ПериодРегистрации = &Дата)
	//	|	ГДЕ
	//	|		ТЧ.СпособНачисления = &СпособНачисления
	//	|		И ТЧ.Ссылка.ДатаОкончанияДоговора >= &Дата) КАК Свертка
	//	|ГДЕ
	//	|	Свертка.СтруктурнаяЕдиница ЕСТЬ NULL";

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачислениеАренднойПлатыОтАрендодателейНачислениеАренды.Организация,
		|	НачислениеАренднойПлатыОтАрендодателейНачислениеАренды.Контрагент,
		|	НачислениеАренднойПлатыОтАрендодателейНачислениеАренды.Договор,
		|	НачислениеАренднойПлатыОтАрендодателейНачислениеАренды.СтруктурнаяЕдиница,
		|	НачислениеАренднойПлатыОтАрендодателейНачислениеАренды.ПериодРегистрации
		|ПОМЕСТИТЬ НачислениеАренды
		|ИЗ
		|	Документ.НачислениеАренднойПлатыОтАрендодателей.НачислениеАренды КАК НачислениеАренднойПлатыОтАрендодателейНачислениеАренды
		|ГДЕ
		|	НачислениеАренднойПлатыОтАрендодателейНачислениеАренды.Ссылка = &Ссылка
		|	И НачислениеАренднойПлатыОтАрендодателейНачислениеАренды.Ссылка.ПериодРегистрации = &Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СтатусыДоговоровАрендыСрезПоследних.Регистратор.Организация КАК Организация,
		|	СтатусыДоговоровАрендыСрезПоследних.Договор.Владелец КАК Контрагент,
		|	СтатусыДоговоровАрендыСрезПоследних.Договор,
		|	СтатусыДоговоровАрендыСрезПоследних.Документ,
		|	СтатусыДоговоровАрендыСрезПоследних.ОбъектАренды
		|ПОМЕСТИТЬ ВТ_Договора
		|ИЗ
		|	РегистрСведений.СтатусыДоговоровАренды.СрезПоследних(КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ), ) КАК СтатусыДоговоровАрендыСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАренды КАК НачислениеАренды
		|		ПО СтатусыДоговоровАрендыСрезПоследних.Договор = НачислениеАренды.Договор
		|			И СтатусыДоговоровАрендыСрезПоследних.Регистратор.Организация = НачислениеАренды.Организация
		|			И СтатусыДоговоровАрендыСрезПоследних.ОбъектАренды.СтруктурнаяЕдиница = НачислениеАренды.СтруктурнаяЕдиница
		|ГДЕ
		|	ЕСТЬNULL(НачислениеАренды.Контрагент, """") = """"
		|	И СтатусыДоговоровАрендыСрезПоследних.ДатаНачалаАренды <= КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
		|	И СтатусыДоговоровАрендыСрезПоследних.ДатаОкончанияАренды > КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
		|	И СтатусыДоговоровАрендыСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_Договора.Организация,
		|	ВТ_Договора.Контрагент,
		|	ВТ_Договора.Договор,
		|	ВТ_Договора.Документ,
		|	ВЫБОР
		|		КОГДА ВТ_Договора.Документ ССЫЛКА Документ.ЗаключениеДоговораАренды
		|			ТОГДА ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.СпособНачисления
		|		КОГДА ВТ_Договора.Документ ССЫЛКА Документ.ДополнительноеСоглашение
		|			ТОГДА ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.СпособНачисления
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК СпособНачисления,
		|	ВТ_Договора.ОбъектАренды
		|ПОМЕСТИТЬ ВТ_ДоговораСоСпособамиНачисления
		|ИЗ
		|	ВТ_Договора КАК ВТ_Договора
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаключениеДоговораАренды.ПеременнаяЧастьАренднойПлаты КАК ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты
		|		ПО ВТ_Договора.Договор = ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Ссылка.ДоговорКонтрагента
		|			И ВТ_Договора.Организация = ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Ссылка.Организация
		|			И ВТ_Договора.ОбъектАренды = ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Ссылка.ОбъектАренды
		|			И ВТ_Договора.Документ = ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДополнительноеСоглашение.ПеременнаяЧастьАренднойПлаты КАК ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты
		|		ПО ВТ_Договора.Договор = ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.Ссылка.ДоговорКонтрагента
		|			И ВТ_Договора.Организация = ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.Ссылка.Организация
		|			И ВТ_Договора.ОбъектАренды = ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.Ссылка.ОбъектАренды
		|			И ВТ_Договора.Документ = ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.Ссылка
		//+++ AK suvv 14.06.2018 ИП-00018763
		|ГДЕ
		|	НЕ ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.Аванс
		|	И НЕ ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Аванс
		//--- AK suvv
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ДоговораСоСпособамиНачисления.Организация,
		|	ВТ_ДоговораСоСпособамиНачисления.Контрагент,
		|	ВТ_ДоговораСоСпособамиНачисления.Договор КАК ДоговорКонтрагента,
		|	ВТ_ДоговораСоСпособамиНачисления.ОбъектАренды.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
		|ПОМЕСТИТЬ ВТ_ДоговораСОтбором
		|ИЗ
		|	ВТ_ДоговораСоСпособамиНачисления КАК ВТ_ДоговораСоСпособамиНачисления
		|ГДЕ
		|	ВТ_ДоговораСоСпособамиНачисления.СпособНачисления = &СпособНачисления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НачислениеАренднойПлатыОтАрендодателейНачислениеАренды.Контрагент,
		|	НачислениеАренднойПлатыОтАрендодателейНачислениеАренды.Договор КАК ДоговорКонтрагента,
		|	НачислениеАренднойПлатыОтАрендодателейНачислениеАренды.Организация
		|ПОМЕСТИТЬ ВТ_УжеРассчитаны
		|ИЗ
		|	Документ.НачислениеАренднойПлатыОтАрендодателей.НачислениеАренды КАК НачислениеАренднойПлатыОтАрендодателейНачислениеАренды
		|ГДЕ
		|	НачислениеАренднойПлатыОтАрендодателейНачислениеАренды.Ссылка.Проведен
		|	И НачислениеАренднойПлатыОтАрендодателейНачислениеАренды.Ссылка.ПериодРегистрации МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, МЕСЯЦ) И КОНЕЦПЕРИОДА(&Дата, МЕСЯЦ)
		|	И НачислениеАренднойПлатыОтАрендодателейНачислениеАренды.Ссылка.ТипАренднойПлаты = ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПеременнаяЧасть)
		|	И НачислениеАренднойПлатыОтАрендодателейНачислениеАренды.Сумма <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДоговораСОтбором.Организация,
		|	ВТ_ДоговораСОтбором.Контрагент,
		|	ВТ_ДоговораСОтбором.ДоговорКонтрагента,
		|	ВТ_ДоговораСОтбором.СтруктурнаяЕдиница
		|ИЗ
		|	ВТ_ДоговораСОтбором КАК ВТ_ДоговораСОтбором
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_УжеРассчитаны КАК ВТ_УжеРассчитаны
		|		ПО ВТ_ДоговораСОтбором.Контрагент = ВТ_УжеРассчитаны.Контрагент
		|			И ВТ_ДоговораСОтбором.ДоговорКонтрагента = ВТ_УжеРассчитаны.ДоговорКонтрагента
		|			И ВТ_ДоговораСОтбором.Организация = ВТ_УжеРассчитаны.Организация
		|ГДЕ
		|	ВТ_УжеРассчитаны.Контрагент ЕСТЬ NULL";
	//--- AK suvv

	Запрос.УстановитьПараметр("Дата", ПериодРегистрации);
	Запрос.УстановитьПараметр("СпособНачисления", Справочники.СпособыНачисленияАренднойПлаты.НайтиПоКоду("000000002"));	//за объект по счету
	//+++ AK suvv 15.05.2017 ИП-00018690
	//Запрос.УстановитьПараметр("ВнешняяТабНачислениеАренды", ЭтотОбъект.НачислениеАренды.Выгрузить(, "Организация, Контрагент, Договор, СтруктурнаяЕдиница, ПериодРегистрации"));
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	//--- AK suvv

	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ЦФОДляПодстановки = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_18");	//Управление исполнительное
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НовСтрока = ЭтотОбъект.НачислениеАренды.Добавить();
		НовСтрока.Организация = ВыборкаДетальныеЗаписи.Организация;
		НовСтрока.Контрагент = ВыборкаДетальныеЗаписи.Контрагент;
		НовСтрока.Договор = ВыборкаДетальныеЗаписи.ДоговорКонтрагента;
		//+++ AK suvv 24.04.2018 ИП-00018494
		НовСтрока.СтавкаНДС = ВыборкаДетальныеЗаписи.ДоговорКонтрагента.СтавкаНДС; 
		//--- AK suvv 
		НовСтрока.СтруктурнаяЕдиница = ВыборкаДетальныеЗаписи.СтруктурнаяЕдиница;
		НовСтрока.ЦФО = ЦФОДляПодстановки;
		НовСтрока.ПериодРегистрации = ПериодРегистрации;
		НовСтрока.ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть;
		НовСтрока.Комментарий = "дозаполнено";
	КонецЦикла;
	
	//
	МинКолвоМесяцев 		= Справочники.АК_НастройкиРасчетаАрендыПоМСФО.ОбщийПериод.МинКоличествоМесяцев;
	МинКолвоТочкаМесяцев 	= Справочники.АК_НастройкиРасчетаАрендыПоМСФО.ТочкаМесяцы.МинКоличествоМесяцев;
	
	массивПериодов = ЭтотОбъект.НачислениеАренды.ВыгрузитьКолонку("ПериодРегистрации");
	МаксПериод = Дата('20990101'); МинПериод = Дата('19700101');
	Для каждого сПериод Из массивПериодов Цикл
		МаксПериод = Макс(МаксПериод, сПериод);
		МинПериод = Мин(МинПериод, сПериод);
	КонецЦикла;
	
	КонецПериода = НачалоМесяца(МаксПериод) - 1;
	ДанныеАренды = ПолучитьАрендуЗаПериод(ДобавитьМесяц(МинПериод, -МинКолвоМесяцев), КонецПериода);
	
	Для каждого СтрокаТЧ Из ЭтотОбъект.НачислениеАренды Цикл
		
		Если СтрокаТЧ.АК_РучнаяКорректировкаРасчетнойСуммы
			ИЛИ СтрокаТЧ.ПериодРегистрации <> ЭтотОбъект.ПериодРегистрации Тогда
			Продолжить;
		КонецЕсли;
		КонецПериода = НачалоМесяца(СтрокаТЧ.ПериодРегистрации) - 1;
		
		ДанныеАренды2 = ПолучитьДанныеАренды(ДанныеАренды, ДобавитьМесяц(КонецПериода, -МинКолвоМесяцев) , КонецПериода, СтрокаТЧ.Организация, СтрокаТЧ.Контрагент, СтрокаТЧ.Договор, СтрокаТЧ.СтруктурнаяЕдиница);
		СтрокаТЧ.АК_ВидАлгоритма = "средняя по ТТ";
		Если ДанныеАренды2.КоличествоПериодов < МинКолвоТочкаМесяцев Тогда
			ДанныеАренды2 = ПолучитьДанныеАренды(ДанныеАренды, ДобавитьМесяц(КонецПериода, -МинКолвоМесяцев) , КонецПериода, СтрокаТЧ.Организация, СтрокаТЧ.Контрагент, СтрокаТЧ.Договор);
			СтрокаТЧ.АК_ВидАлгоритма = "средняя по Контрагенту";
			Если ДанныеАренды2.КоличествоПериодов < МинКолвоТочкаМесяцев Тогда
				ДанныеАренды2 = ПолучитьДанныеАренды(ДанныеАренды, ДобавитьМесяц(КонецПериода, -МинКолвоМесяцев) , КонецПериода, СтрокаТЧ.Организация);
				СтрокаТЧ.АК_ВидАлгоритма = "средняя по всем";
			КонецЕсли;
		КонецЕсли;
		СтрокаТЧ.АК_РасчетнаяСумма = ДанныеАренды2.СуммаЗаМетр * СтрокаТЧ.СтруктурнаяЕдиница.ТорговаяПлощадь;
		
	КонецЦикла;
	
КонецПроцедуры

//+++ AK suvv 27.07.2018 ИП-00018737
Процедура КоманднаяПанельНачислениеАрендыРасчитатьДляМСФО(Кнопка)
	
	Если НЕ ЭтотОбъект.ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.Проведен Тогда
		Если Вопрос("Перед заполнением документа необходимо отменить проведение документа. Продолжить?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
			Возврат;
		Иначе
			ЭтотОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли;	
	КонецЕсли;
	
	Если НачислениеАренды.НайтиСтроки(Новый Структура("Комментарий", "дозаполнено")).Количество() <> 0
		или НачислениеАренды.НайтиСтроки(Новый Структура("Комментарий", "корректировка")).Количество() <> 0 Тогда 
		Если Вопрос("Табличная часть <Начисление аренды> содержит рассчитанные данные по МСФО, которые будут очищены при новом расчете. Продолжить?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
			Возврат;
		Иначе
			ВсегоСтрок = НачислениеАренды.Количество()-1;
			Сч = 0;
			Пока Сч <= ВсегоСтрок Цикл
				Запись = НачислениеАренды.Получить(Сч);
				Если Запись.Комментарий = "дозаполнено" или Запись.Комментарий = "корректировка"  тогда
					НачислениеАренды.Удалить(Сч);
					ВсегоСтрок = ВсегоСтрок - 1;
				Иначе
					Сч = Сч + 1;
				КонецЕсли;
			КонецЦикла;   
		КонецЕсли;	
	КонецЕсли;
	
	ЦФОДляПодстановки = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_18"); //Управление исполнительное
	
	// получаем договора аренды, по которым будет выполняться расчет сумм для МСФО
	// 1) способ начисления в документе - за объект по счету
	// 2) количество дней действия договора за период расчета > 20
	// 3) начисление 1 раз в месяц
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", ПериодРегистрации);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("СпособНачисленияАПЗаОбъектПоСчету", Справочники.СпособыНачисленияАренднойПлаты.НайтиПоКоду("000000002"));
	Запрос.УстановитьПараметр("НачислениеАренды", НачислениеАренды);	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатусыДоговоровАрендыСрезПоследних.Договор,
	|	СтатусыДоговоровАрендыСрезПоследних.ОбъектАренды,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАрендыСрезПоследних.ДатаНачалаАренды < &НачалоПериода
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ СтатусыДоговоровАрендыСрезПоследних.ДатаНачалаАренды
	|	КОНЕЦ КАК ДатаНачалаДоговора,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАрендыСрезПоследних.ДатаОкончанияАренды > &КонецПериода
	|			ТОГДА &КонецПериода
	|		ИНАЧЕ СтатусыДоговоровАрендыСрезПоследних.ДатаОкончанияАренды
	|	КОНЕЦ КАК ДатаОкончанияДоговора,
	|	СтатусыДоговоровАрендыСрезПоследних.Регистратор,
	|	СУММА(ВЫБОР
	|			КОГДА СтатусыДоговоровАрендыСрезПоследних.Регистратор ССЫЛКА Документ.ЗаключениеДоговораАренды
	|				ТОГДА ВЫБОР
	|						КОГДА ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.СпособНачисления = &СпособНачисленияАПЗаОбъектПоСчету
	//+++ AK suvv 14.06.2018 ИП-00018763
	|								И НЕ ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Аванс
	//--- AK suvv
	|							ТОГДА 1
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			КОГДА СтатусыДоговоровАрендыСрезПоследних.Регистратор ССЫЛКА Документ.ДополнительноеСоглашение
	|				ТОГДА ВЫБОР
	|						КОГДА ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.СпособНачисления = &СпособНачисленияАПЗаОбъектПоСчету
	//+++ AK suvv 14.06.2018 ИП-00018763
	|								И НЕ ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.Аванс
	//--- AK suvv
	|							ТОГДА 1
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоСпособовПоОбъекту,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАрендыСрезПоследних.Период <= &НачалоПериода
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ СтатусыДоговоровАрендыСрезПоследних.Период
	|	КОНЕЦ КАК ДатаСобытия,
	|	СтатусыДоговоровАрендыСрезПоследних.Регистратор.Организация КАК Организация
	|ПОМЕСТИТЬ ВТ_ДоговораНачПериод
	|ИЗ
	|	РегистрСведений.СтатусыДоговоровАренды.СрезПоследних(&НачалоПериода, ) КАК СтатусыДоговоровАрендыСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаключениеДоговораАренды.ПеременнаяЧастьАренднойПлаты КАК ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты
	|		ПО СтатусыДоговоровАрендыСрезПоследних.Регистратор = ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДополнительноеСоглашение.ПеременнаяЧастьАренднойПлаты КАК ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты
	|		ПО СтатусыДоговоровАрендыСрезПоследних.Регистратор = ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.Ссылка
	|ГДЕ
	|	СтатусыДоговоровАрендыСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
	|	И СтатусыДоговоровАрендыСрезПоследних.ДатаОкончанияАренды >= &НачалоПериода
	//+++ AK suvv 20.06.2018 ИП-00018995
	|   И ВЫБОР
	|		КОГДА СтатусыДоговоровАрендыСрезПоследних.Регистратор ССЫЛКА Документ.ЗаключениеДоговораАренды
	|			ТОГДА СтатусыДоговоровАрендыСрезПоследних.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийДоговоровАренды.САрендодателем)
	|		ИНАЧЕ СтатусыДоговоровАрендыСрезПоследних.Регистратор.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийДоговоровАренды.САрендодателем)
	|	КОНЕЦ
	//--- AK suvv
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатусыДоговоровАрендыСрезПоследних.Договор,
	|	СтатусыДоговоровАрендыСрезПоследних.ОбъектАренды,
	|	СтатусыДоговоровАрендыСрезПоследних.Регистратор,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАрендыСрезПоследних.ДатаНачалаАренды < &НачалоПериода
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ СтатусыДоговоровАрендыСрезПоследних.ДатаНачалаАренды
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАрендыСрезПоследних.ДатаОкончанияАренды > &КонецПериода
	|			ТОГДА &КонецПериода
	|		ИНАЧЕ СтатусыДоговоровАрендыСрезПоследних.ДатаОкончанияАренды
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАрендыСрезПоследних.Период <= &НачалоПериода
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ СтатусыДоговоровАрендыСрезПоследних.Период
	|	КОНЕЦ,
	|	СтатусыДоговоровАрендыСрезПоследних.Регистратор.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыДоговоровАренды.Договор,
	|	СтатусыДоговоровАренды.ОбъектАренды,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАренды.ДатаНачалаАренды < &НачалоПериода
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ СтатусыДоговоровАренды.ДатаНачалаАренды
	|	КОНЕЦ КАК ДатаНачалаДоговора,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАренды.ДатаОкончанияАренды > &КонецПериода
	|			ТОГДА &КонецПериода
	|		ИНАЧЕ СтатусыДоговоровАренды.ДатаОкончанияАренды
	|	КОНЕЦ КАК ДатаОкончанияДоговора,
	|	СтатусыДоговоровАренды.Регистратор,
	|	СУММА(ВЫБОР
	|			КОГДА СтатусыДоговоровАренды.Регистратор ССЫЛКА Документ.ЗаключениеДоговораАренды
	|				ТОГДА ВЫБОР
	|						КОГДА ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.СпособНачисления = &СпособНачисленияАПЗаОбъектПоСчету
	//+++ AK suvv 14.06.2018 ИП-00018763
	|								И НЕ ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Аванс
	//--- AK suvv
	|							ТОГДА 1
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			КОГДА СтатусыДоговоровАренды.Регистратор ССЫЛКА Документ.ДополнительноеСоглашение
	|				ТОГДА ВЫБОР
	|						КОГДА ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.СпособНачисления = &СпособНачисленияАПЗаОбъектПоСчету
	//+++ AK suvv 14.06.2018 ИП-00018763
	|								И НЕ ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.Аванс
	//--- AK suvv
	|							ТОГДА 1
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			КОГДА СтатусыДоговоровАренды.Регистратор ССЫЛКА Документ.РасторжениеДоговораАренды
	|				ТОГДА ВЫБОР
	|						КОГДА РасторжениеДоговораАрендыПеременнаяЧастьАренднойПлаты.СпособНачисления = &СпособНачисленияАПЗаОбъектПоСчету
	|							ТОГДА 1
	|						ИНАЧЕ 0
	|					КОНЕЦ
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоСпособовПоОбъекту,
	|	НАЧАЛОПЕРИОДА(СтатусыДоговоровАренды.Период, ДЕНЬ) КАК ДатаСобытия,
	|	СтатусыДоговоровАренды.Регистратор.Организация КАК Организация
	|ПОМЕСТИТЬ ВТ_ИзмененияЗаПериод
	|ИЗ
	|	РегистрСведений.СтатусыДоговоровАренды КАК СтатусыДоговоровАренды
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаключениеДоговораАренды.ПеременнаяЧастьАренднойПлаты КАК ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты
	|		ПО СтатусыДоговоровАренды.Регистратор = ЗаключениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДополнительноеСоглашение.ПеременнаяЧастьАренднойПлаты КАК ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты
	|		ПО СтатусыДоговоровАренды.Регистратор = ДополнительноеСоглашениеПеременнаяЧастьАренднойПлаты.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасторжениеДоговораАренды.ПеременнаяЧастьАренднойПлаты КАК РасторжениеДоговораАрендыПеременнаяЧастьАренднойПлаты
	|		ПО СтатусыДоговоровАренды.Регистратор = РасторжениеДоговораАрендыПеременнаяЧастьАренднойПлаты.Ссылка
	|ГДЕ
	|	СтатусыДоговоровАренды.Период > &НачалоПериода
	|	И СтатусыДоговоровАренды.Период <= &КонецПериода
	//+++ AK suvv 20.06.2018 ИП-00018995
	|   И ВЫБОР
	|		КОГДА СтатусыДоговоровАренды.Регистратор ССЫЛКА Документ.ЗаключениеДоговораАренды
	|			ТОГДА СтатусыДоговоровАренды.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийДоговоровАренды.САрендодателем)
	|		ИНАЧЕ СтатусыДоговоровАренды.Регистратор.ДокументОснование.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийДоговоровАренды.САрендодателем)
	|	КОНЕЦ
	//--- AK suvv
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатусыДоговоровАренды.Договор,
	|	СтатусыДоговоровАренды.ОбъектАренды,
	|	СтатусыДоговоровАренды.Регистратор,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАренды.ДатаНачалаАренды < &НачалоПериода
	|			ТОГДА &НачалоПериода
	|		ИНАЧЕ СтатусыДоговоровАренды.ДатаНачалаАренды
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СтатусыДоговоровАренды.ДатаОкончанияАренды > &КонецПериода
	|			ТОГДА &КонецПериода
	|		ИНАЧЕ СтатусыДоговоровАренды.ДатаОкончанияАренды
	|	КОНЕЦ,
	|	НАЧАЛОПЕРИОДА(СтатусыДоговоровАренды.Период, ДЕНЬ),
	|	СтатусыДоговоровАренды.Регистратор.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДоговораНачПериод.Договор,
	|	ВТ_ДоговораНачПериод.ОбъектАренды,
	|	ВТ_ДоговораНачПериод.ДатаНачалаДоговора,
	|	ВТ_ДоговораНачПериод.ДатаОкончанияДоговора,
	|	ВТ_ДоговораНачПериод.Регистратор,
	|	ВТ_ДоговораНачПериод.КоличествоСпособовПоОбъекту,
	|	ВТ_ДоговораНачПериод.ДатаСобытия,
	|	ВТ_ДоговораНачПериод.Организация
	|ПОМЕСТИТЬ ВТ_Объединение
	|ИЗ
	|	ВТ_ДоговораНачПериод КАК ВТ_ДоговораНачПериод
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ИзмененияЗаПериод.Договор,
	|	ВТ_ИзмененияЗаПериод.ОбъектАренды,
	|	ВТ_ИзмененияЗаПериод.ДатаНачалаДоговора,
	|	ВТ_ИзмененияЗаПериод.ДатаОкончанияДоговора,
	|	ВТ_ИзмененияЗаПериод.Регистратор,
	|	ВТ_ИзмененияЗаПериод.КоличествоСпособовПоОбъекту,
	|	ВТ_ИзмененияЗаПериод.ДатаСобытия,
	|	ВТ_ИзмененияЗаПериод.Организация
	|ИЗ
	|	ВТ_ИзмененияЗаПериод КАК ВТ_ИзмененияЗаПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Объединение.Договор,
	|	ВТ_Объединение.ОбъектАренды,
	|	ВТ_Объединение.ДатаНачалаДоговора,
	|	ВТ_Объединение.ДатаОкончанияДоговора,
	|	ВТ_Объединение.Регистратор,
	|	ВТ_Объединение.КоличествоСпособовПоОбъекту,
	|	ВТ_Объединение.ДатаСобытия КАК ДатаНачалаСобытия,
	|	ЕСТЬNULL(ДОБАВИТЬКДАТЕ(МИНИМУМ(ВТ_Объединение1.ДатаСобытия), ДЕНЬ, -1), ВЫБОР
	|			КОГДА ВТ_Объединение.ДатаОкончанияДоговора > &конецПериода
	|				ТОГДА &КонецПериода
	|			ИНАЧЕ ВТ_Объединение.ДатаОкончанияДоговора
	|		КОНЕЦ) КАК ДатаОкончанияСобытия,
	|	ВТ_Объединение.Организация
	|ПОМЕСТИТЬ ВТ_ДоговорыПоПериодам
	|ИЗ
	|	ВТ_Объединение КАК ВТ_Объединение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Объединение КАК ВТ_Объединение1
	|		ПО ВТ_Объединение.Договор = ВТ_Объединение1.Договор
	|			И ВТ_Объединение.ОбъектАренды = ВТ_Объединение1.ОбъектАренды
	|			И ВТ_Объединение.ДатаСобытия < ВТ_Объединение1.ДатаСобытия
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Объединение.Договор,
	|	ВТ_Объединение.ОбъектАренды,
	|	ВТ_Объединение.ДатаНачалаДоговора,
	|	ВТ_Объединение.ДатаОкончанияДоговора,
	|	ВТ_Объединение.Регистратор,
	|	ВТ_Объединение.КоличествоСпособовПоОбъекту,
	|	ВТ_Объединение.ДатаСобытия,
	|	ВТ_Объединение.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДоговорыПоПериодам.Договор,
	|	ВТ_ДоговорыПоПериодам.ОбъектАренды,
	|	СУММА(ВЫБОР
	|			КОГДА ВТ_ДоговорыПоПериодам.КоличествоСпособовПоОбъекту > 0
	|				ТОГДА РАЗНОСТЬДАТ(ВТ_ДоговорыПоПериодам.ДатаНачалаСобытия, ВТ_ДоговорыПоПериодам.ДатаОкончанияСобытия, ДЕНЬ) + 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоДнейДействия,
	|	ВТ_ДоговорыПоПериодам.Организация
	|ПОМЕСТИТЬ ВТ_ДоговорыСКолвомДнейДействия
	|ИЗ
	|	ВТ_ДоговорыПоПериодам КАК ВТ_ДоговорыПоПериодам
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДоговорыПоПериодам.Договор,
	|	ВТ_ДоговорыПоПериодам.ОбъектАренды,
	|	ВТ_ДоговорыПоПериодам.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДоговорыСКолвомДнейДействия.Договор,
	|	ВТ_ДоговорыСКолвомДнейДействия.ОбъектАренды,
	|	ВТ_ДоговорыСКолвомДнейДействия.Организация
	|ПОМЕСТИТЬ ВТ_ДоговорыДляРасчета
	|ИЗ
	|	ВТ_ДоговорыСКолвомДнейДействия КАК ВТ_ДоговорыСКолвомДнейДействия
	|ГДЕ
	|	ВТ_ДоговорыСКолвомДнейДействия.КоличествоДнейДействия > 20
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачислениеАренды.Организация,
	|	НачислениеАренды.Контрагент,
	|	НачислениеАренды.Договор,
	|	НачислениеАренды.СтруктурнаяЕдиница,
	|	НачислениеАренды.ПериодРегистрации
	|ПОМЕСТИТЬ НачислениеАренды
	|ИЗ
	|	&НачислениеАренды КАК НачислениеАренды
	|ГДЕ
	|	НачислениеАренды.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НачислениеАренды.Организация,
	|	НачислениеАренды.Контрагент,
	|	НачислениеАренды.Договор,
	|	НачислениеАренды.СтруктурнаяЕдиница,
	|	НачислениеАренды.ПериодРегистрации
	|ПОМЕСТИТЬ ВТ_ИсключениеИзРасчета
	|ИЗ
	|	НачислениеАренды КАК НачислениеАренды
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АК_РасчетныеНачисленияПоАрендеМСФО.Организация,
	|	АК_РасчетныеНачисленияПоАрендеМСФО.Контрагент,
	|	АК_РасчетныеНачисленияПоАрендеМСФО.Договор,
	|	АК_РасчетныеНачисленияПоАрендеМСФО.СтруктурнаяЕдиница,
	|	НАЧАЛОПЕРИОДА(АК_РасчетныеНачисленияПоАрендеМСФО.РасчетныйПериод, МЕСЯЦ)
	|ИЗ
	|	РегистрНакопления.АК_РасчетныеНачисленияПоАрендеМСФО КАК АК_РасчетныеНачисленияПоАрендеМСФО
	|ГДЕ
	|	АК_РасчетныеНачисленияПоАрендеМСФО.РасчетнаяСумма > 0
	|	И АК_РасчетныеНачисленияПоАрендеМСФО.РасчетныйПериод МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ДоговорыДляРасчета.Договор КАК ДоговорКонтрагента,
	|	ВТ_ДоговорыДляРасчета.ОбъектАренды,
	|	ВТ_ДоговорыДляРасчета.Организация,
	|	ВТ_ДоговорыДляРасчета.ОбъектАренды.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ВТ_ДоговорыДляРасчета.Договор.Владелец КАК Контрагент
	|ИЗ
	|	ВТ_ДоговорыДляРасчета КАК ВТ_ДоговорыДляРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИсключениеИзРасчета КАК ВТ_ИсключениеИзРасчета
	|		ПО ВТ_ДоговорыДляРасчета.Договор = ВТ_ИсключениеИзРасчета.Договор
	|ГДЕ
	|	ЕСТЬNULL(ВТ_ИсключениеИзРасчета.Контрагент, """") = """"";
	
	РезультатЗапроса = Запрос.Выполнить();	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НовСтрока = ЭтотОбъект.НачислениеАренды.Добавить();
		НовСтрока.Организация = ВыборкаДетальныеЗаписи.Организация;
		НовСтрока.Контрагент = ВыборкаДетальныеЗаписи.Контрагент;
		НовСтрока.Договор = ВыборкаДетальныеЗаписи.ДоговорКонтрагента;
		НовСтрока.СтавкаНДС = ВыборкаДетальныеЗаписи.ДоговорКонтрагента.СтавкаНДС;  
		НовСтрока.СтруктурнаяЕдиница = ВыборкаДетальныеЗаписи.СтруктурнаяЕдиница;
		НовСтрока.ЦФО = ЦФОДляПодстановки;
		НовСтрока.ПериодРегистрации = ПериодРегистрации;
		НовСтрока.ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть;
		НовСтрока.Комментарий = "дозаполнено";
	КонецЦикла;
	
	МинКолвоМесяцев = Справочники.АК_НастройкиРасчетаАрендыПоМСФО.ОбщийПериод.МинКоличествоМесяцев;
	МинКолвоТочкаМесяцев = Справочники.АК_НастройкиРасчетаАрендыПоМСФО.ТочкаМесяцы.МинКоличествоМесяцев;
	
	МассивПериодов = ЭтотОбъект.НачислениеАренды.ВыгрузитьКолонку("ПериодРегистрации");
	МаксПериод = Дата('20990101'); 
	МинПериод = Дата('19700101');
	
	Для Каждого сПериод Из МассивПериодов Цикл
		МаксПериод = Макс(МаксПериод, сПериод);
		МинПериод = Мин(МинПериод, сПериод);
	КонецЦикла;
	
	КонецПериода = НачалоМесяца(МаксПериод) - 1;
	
	ДанныеАренды = ПолучитьАрендуЗаПериод(ДобавитьМесяц(МинПериод, -МинКолвоМесяцев), КонецПериода);
	
	Для каждого СтрокаТЧ Из ЭтотОбъект.НачислениеАренды Цикл
		
		Если СтрокаТЧ.АК_РучнаяКорректировкаРасчетнойСуммы ИЛИ СтрокаТЧ.ПериодРегистрации <> ЭтотОбъект.ПериодРегистрации Тогда
			Продолжить;
		КонецЕсли;
		
		КонецПериода = НачалоМесяца(СтрокаТЧ.ПериодРегистрации) - 1;
		
		ДанныеАренды2 = ПолучитьДанныеАренды(ДанныеАренды, ДобавитьМесяц(КонецПериода, -МинКолвоМесяцев) , КонецПериода, СтрокаТЧ.Организация, СтрокаТЧ.Контрагент, СтрокаТЧ.Договор, СтрокаТЧ.СтруктурнаяЕдиница);
		СтрокаТЧ.АК_ВидАлгоритма = "средняя по ТТ";
		
		Если ДанныеАренды2.КоличествоПериодов < МинКолвоТочкаМесяцев Тогда
			
			ДанныеАренды2 = ПолучитьДанныеАренды(ДанныеАренды, ДобавитьМесяц(КонецПериода, -МинКолвоМесяцев) , КонецПериода, СтрокаТЧ.Организация, СтрокаТЧ.Контрагент, СтрокаТЧ.Договор);
			СтрокаТЧ.АК_ВидАлгоритма = "средняя по Контрагенту";
			
			Если ДанныеАренды2.КоличествоПериодов < МинКолвоТочкаМесяцев Тогда
				ДанныеАренды2 = ПолучитьДанныеАренды(ДанныеАренды, ДобавитьМесяц(КонецПериода, -МинКолвоМесяцев) , КонецПериода, СтрокаТЧ.Организация);
				СтрокаТЧ.АК_ВидАлгоритма = "средняя по всем";
			КонецЕсли;
			
		КонецЕсли;
		
		СтрокаТЧ.АК_РасчетнаяСумма = ДанныеАренды2.СуммаЗаМетр * СтрокаТЧ.СтруктурнаяЕдиница.ТорговаяПлощадь;
		
	КонецЦикла;
		
	//+++ AK suvv 20.06.2018 ИП-00018995
	//СторноСуммПоДоговорам = ПолучитьСторноСуммПоДоговорамМеньше21Дня();
	СторноСуммПоДоговорам = ПолучитьСторноСуммПоДоговорам();
	//--- AK suvv
	Для Каждого Стр из СторноСуммПоДоговорам Цикл
		НовСтрока = ЭтотОбъект.НачислениеАренды.Добавить();
		НовСтрока.Организация = Стр.Организация;
		НовСтрока.Контрагент = Стр.Контрагент;
		НовСтрока.Договор = Стр.Договор;
		НовСтрока.СтавкаНДС = Стр.Договор.СтавкаНДС;  
		НовСтрока.СтруктурнаяЕдиница = Стр.СтруктурнаяЕдиница;
		НовСтрока.ЦФО = ЦФОДляПодстановки;
		НовСтрока.ПериодРегистрации = ПериодРегистрации;
		НовСтрока.ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть;
		//+++ AK suvv 20.06.2018 ИП-00018995
		//НовСтрока.Комментарий = "сторно < 21 дня";
		НовСтрока.Комментарий = Стр.Комментарий;
		//--- AK suvv
		НовСтрока.АК_РасчетнаяСумма = (-1) * Стр.РасчетнаяСумма;
	КонецЦикла;
	
	//+++ AK suvv 21.06.2018 ИП-00018995
	// корретировка должна происходить после сторнирования сумм
	ДанныеКорректировок = ПолучитьДанныеКорректировок();
	Для Каждого Стр из ДанныеКорректировок Цикл
		НовСтрока = ЭтотОбъект.НачислениеАренды.Добавить();
		НовСтрока.Организация = Стр.Организация;
		НовСтрока.Контрагент = Стр.Контрагент;
		НовСтрока.Договор = Стр.Договор;
		НовСтрока.СтавкаНДС = Стр.Договор.СтавкаНДС;  
		НовСтрока.СтруктурнаяЕдиница = Стр.СтруктурнаяЕдиница;
		НовСтрока.ЦФО = ЦФОДляПодстановки;
		НовСтрока.ПериодРегистрации = ПериодРегистрации;
		НовСтрока.ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть;
		НовСтрока.Комментарий = "корректировка";
		НовСтрока.АК_РасчетнаяСумма = Стр.СуммаКорректировки;
	КонецЦикла;
	//--- AK suvv
	
	ЭтотОбъект.НачислениеАренды.Сортировать("Контрагент, Комментарий");
		
КонецПроцедуры //--- AK suvv

Процедура КоманднаяПанельНачислениеАрендыНастройкиРасчетаАрендыМСФО(Кнопка)
	
	Справочники.АК_НастройкиРасчетаАрендыПоМСФО.ПолучитьФормуСписка().Открыть();
	
КонецПроцедуры

Процедура НачислениеАрендыПередУдалением(Элемент, Отказ)
	Если НЕ РольДоступна("АК_РаботаСАрендойМСФО") И Элемент.ТекущиеДанные.АК_РасчетнаяСумма > 0 Тогда
		Отказ = Истина;
		Предупреждение("Строку нельзя удалять, поскольку в ней есть строки, с внесенными бухгалтерскими данными!");
	КонецЕсли;
КонецПроцедуры
//---- АК AZAP

//+++АК sils 15.08.2017 ИП-00014584
Процедура РасчетСтимулов()
	МСФО1 = МСФО.Выгрузить();
	ТекКол = МСФО1.Количество();
	Пока ТекКол <> 0 Цикл
		стр = МСФО1[ТекКол - 1];
		Если не стр.РучнаяКорректировкаСуммы Тогда
			МСФО1.Удалить(стр);
		КонецЕсли;
		ТекКол = ТекКол - 1;
	КонецЦикла;
	
	МСФО.Очистить();
	// Находим действующие договора
	ТЗ_Договоров = ПолучитьСписокДействующихДоговоров();
	// Находим действующие доп.соглашения со стимулами
	ТЗ_ДопСоглашений = ПолучитьСписокДействующихДопСоглашений();
	// Находим графики списания
	ТЗ_Графики = ПолучитьГрафикиСтимулов(ТЗ_ДопСоглашений);
	
	Для каждого стр из ТЗ_Договоров Цикл
		// Ищем в графиках нашу строчку
		Отбор = Новый Структура;
		Отбор.Вставить("Контрагент", стр.Контрагент);
		Отбор.Вставить("Договор", стр.Договор);
		Отбор.Вставить("Документ", стр.Документ);
		НайденныеДопСоглашения = ТЗ_ДопСоглашений.НайтиСтроки(Отбор);
		
		Для каждого стр1 из НайденныеДопСоглашения Цикл
			Отбор1 = Новый Структура;
			Отбор1.Вставить("ДопСоглашение", стр1.ДопСоглашение);
			//+++АК sils 08.07.2018 ИП-00014584.02 
			// Если есть стимул, то на сумму стимула увеличить затраты по корр МСФО. Делать при самом первом начислении стимулов.
			//Если КонецМесяца(стр.ДатаОкончания) <> КонецМесяца(ПериодРегистрации) Тогда
			//	Отбор1.Вставить("ПериодНачисления", НачалоМесяца(ПериодРегистрации));
			//КонецЕсли;
			//---АК
			НайденныйГрафик = ТЗ_Графики.НайтиСтроки(Отбор1);
			
			Отбор2 = Новый Структура;
			Отбор2.Вставить("ДопСоглашение", стр1.ДопСоглашение);
			Для каждого стр2 из НайденныйГрафик Цикл
				//+++АК sils 09.07.2018 ИП-00014584.02
				Если стр2.Сумма = 0 и стр2.СуммаОбщая = 0 Тогда
					Продолжить;
				КонецЕсли;
				Если стр.ДатаОкончания > КонецМесяца(ПериодРегистрации) Тогда
					Если стр2.ПериодНачисления > НачалоМесяца(ПериодРегистрации) Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				//---АК
				Отбор2.Вставить("ПериодРегистрации", стр2.ПериодНачисления);
				НайденныйГрафик1 = МСФО1.НайтиСтроки(Отбор2);
				Если НайденныйГрафик1.Количество() > 0 Тогда
					ЗаполнитьЗначенияСвойств(МСФО.Добавить(), НайденныйГрафик1[0]);
					Продолжить;
				КонецЕсли;
				
				//+++АК sils 09.07.2018 ИП-00014584.02
				Если стр2.СуммаОбщая <> 0 Тогда
					НовСтр = МСФО.Добавить();
					НовСтр.Организация = стр.ПоследнийДокумент.Организация;
					НовСтр.Контрагент = стр.Контрагент;
					НовСтр.Договор = стр.Договор;
					НовСтр.СтруктурнаяЕдиница = стр.СтруктурнаяЕдиница;
					НовСтр.ДопСоглашение = стр1.ДопСоглашение;
					НовСтр.Сумма = -стр2.СуммаОбщая;
					НовСтр.ПериодРегистрации = стр2.ПериодНачисления;
					НовСтр.ОбщаяСумма = Истина;
					НовСтр.СтатьяДР = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("31010");
				КонецЕсли;
				Если стр2.Сумма <> 0 Тогда
				//---АК
				
				НовСтр = МСФО.Добавить();
				НовСтр.Организация = стр.ПоследнийДокумент.Организация;
				НовСтр.Контрагент = стр.Контрагент;
				НовСтр.Договор = стр.Договор;
				НовСтр.СтруктурнаяЕдиница = стр.СтруктурнаяЕдиница;
				НовСтр.ДопСоглашение = стр1.ДопСоглашение;
				НовСтр.Сумма = стр2.Сумма;
				НовСтр.ПериодРегистрации = стр2.ПериодНачисления;
				//+++ AK suvv 08.05.2018 ИП-00018589
				НовСтр.СтатьяДР = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("31010");
				//--- AK suvv
				//+++АК sils 11.07.2018 ИП-00014584.02
				КонецЕсли;
				//---АК
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьСписокДействующихДоговоров()
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Контрагент");
	ТЗ.Колонки.Добавить("Договор");
	ТЗ.Колонки.Добавить("Документ");
	ТЗ.Колонки.Добавить("СтруктурнаяЕдиница");
	ТЗ.Колонки.Добавить("ДатаНачала");
	ТЗ.Колонки.Добавить("ДатаОкончания");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ДоговорыКонтрагентов.Ссылка
	               |ПОМЕСТИТЬ Договоры
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |ГДЕ
	               |	ДоговорыКонтрагентов.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСПоставщиком.Аренда)
	               |	И ДоговорыКонтрагентов.ОбъектАренды <> ЗНАЧЕНИЕ(Справочник.ОбъектыАренды.ПустаяСсылка)
	               |	И ДоговорыКонтрагентов.ОбъектАренды.СтруктурнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
				   //+++АК sils 11.07.2018 ИП-00014584.02
				   //|	ЕСТЬNULL(ВложенныйЗапрос.ДоговорКонтрагента, ВложенныйЗапросСрокиДействия.ДоговорКонтрагента) КАК ДоговорКонтрагента,
				   //|	МАКСИМУМ(ЕСТЬNULL(ВложенныйЗапрос.ДатаОкончанияДоговора, ВложенныйЗапросСрокиДействия.ДатаОкончанияДоговора)) КАК ДатаОкончанияДоговора,
				   //|	ЕСТЬNULL(ВложенныйЗапрос.ДокументОснование, ВложенныйЗапросСрокиДействия.Документ) КАК Документ
				   //|ПОМЕСТИТЬ ДС
				   //|ИЗ
				   //|	(ВЫБРАТЬ
				   //|		ДополнительноеСоглашение.ДоговорКонтрагента КАК ДоговорКонтрагента,
				   //|		МАКСИМУМ(ДополнительноеСоглашение.ДатаОкончанияДоговора) КАК ДатаОкончанияДоговора,
				   //|		ДополнительноеСоглашение.ДокументОснование КАК Документ
				   //|	ИЗ
				   //|		Документ.ДополнительноеСоглашение КАК ДополнительноеСоглашение
				   //|	ГДЕ
				   //|		ДополнительноеСоглашение.Проведен = ИСТИНА
				   //|		И ДополнительноеСоглашение.Дата < &Дата2
				   //|	
				   //|	СГРУППИРОВАТЬ ПО
				   //|		ДополнительноеСоглашение.ДоговорКонтрагента,
				   //|		ДополнительноеСоглашение.ДокументОснование
				   //|	
				   //|	ОБЪЕДИНИТЬ ВСЕ
				   //|	
				   //|	ВЫБРАТЬ
				   //|		ЗаключениеДоговораАренды.ДоговорКонтрагента,
				   //|		МАКСИМУМ(ЗаключениеДоговораАренды.ДатаОкончанияДоговора),
				   //|		ЗаключениеДоговораАренды.Ссылка
				   //|	ИЗ
				   //|		Документ.ЗаключениеДоговораАренды КАК ЗаключениеДоговораАренды
				   //|	ГДЕ
				   //|		ЗаключениеДоговораАренды.Проведен = ИСТИНА
				   //|		И ЗаключениеДоговораАренды.Дата < &Дата2
				   //|	
				   //|	СГРУППИРОВАТЬ ПО
				   //|		ЗаключениеДоговораАренды.ДоговорКонтрагента,
				   //|		ЗаключениеДоговораАренды.Ссылка) КАК ВложенныйЗапросСрокиДействия
				   //|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				   //|			РасторжениеДоговораАренды.ДоговорКонтрагента КАК ДоговорКонтрагента,
				   //|			РасторжениеДоговораАренды.ДатаОкончанияДоговора КАК ДатаОкончанияДоговора,
				   //|			РасторжениеДоговораАренды.ДокументОснование КАК ДокументОснование
				   //|		ИЗ
				   //|			Документ.РасторжениеДоговораАренды КАК РасторжениеДоговораАренды
				   //|		ГДЕ
				   //|			РасторжениеДоговораАренды.Проведен = ИСТИНА
				   //|			И РасторжениеДоговораАренды.Дата < &Дата2) КАК ВложенныйЗапрос
				   //|		ПО ВложенныйЗапросСрокиДействия.ДоговорКонтрагента = ВложенныйЗапрос.ДоговорКонтрагента
				   //|			И ВложенныйЗапросСрокиДействия.Документ = ВложенныйЗапрос.ДокументОснование
				   //|
				   //|СГРУППИРОВАТЬ ПО
				   //|	ЕСТЬNULL(ВложенныйЗапрос.ДоговорКонтрагента, ВложенныйЗапросСрокиДействия.ДоговорКонтрагента),
				   //|	ЕСТЬNULL(ВложенныйЗапрос.ДокументОснование, ВложенныйЗапросСрокиДействия.Документ)
	               |	ЕСТЬNULL(ВложенныйЗапрос.ДоговорКонтрагента, ЕСТЬNULL(СрокиДействия_Доп.ДоговорКонтрагента, СрокиДействия_Осн.ДоговорКонтрагента)) КАК ДоговорКонтрагента,
	               |	МАКСИМУМ(ЕСТЬNULL(ВложенныйЗапрос.ДатаОкончанияДоговора, ЕСТЬNULL(СрокиДействия_Доп.ДатаОкончанияДоговора, СрокиДействия_Осн.ДатаОкончанияДоговора))) КАК ДатаОкончанияДоговора,
	               |	ЕСТЬNULL(ВложенныйЗапрос.ДокументОснование, СрокиДействия_Доп.Документ) КАК Документ
				   |ПОМЕСТИТЬ ДС
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ДополнительноеСоглашение.ДоговорКонтрагента КАК ДоговорКонтрагента,
	               |		МАКСИМУМ(ДополнительноеСоглашение.ДатаОкончанияДоговора) КАК ДатаОкончанияДоговора,
	               |		ДополнительноеСоглашение.ДокументОснование КАК Документ
	               |	ИЗ
	               |		Документ.ДополнительноеСоглашение КАК ДополнительноеСоглашение
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |				ДополнительноеСоглашение.ДоговорКонтрагента КАК ДоговорКонтрагента,
	               |				ДополнительноеСоглашение.ДокументОснование КАК Документ,
	               |				МАКСИМУМ(ДополнительноеСоглашение.Дата) КАК Дата
	               |			ИЗ
	               |				Документ.ДополнительноеСоглашение КАК ДополнительноеСоглашение
	               |			ГДЕ
	               |				ДополнительноеСоглашение.Проведен = ИСТИНА
	               |				И ДополнительноеСоглашение.Дата <= &Дата2
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				ДополнительноеСоглашение.ДоговорКонтрагента,
	               |				ДополнительноеСоглашение.ДокументОснование) КАК ВложенныйЗапрос
	               |			ПО ДополнительноеСоглашение.ДоговорКонтрагента = ВложенныйЗапрос.ДоговорКонтрагента
	               |				И ДополнительноеСоглашение.ДокументОснование = ВложенныйЗапрос.Документ
	               |				И ДополнительноеСоглашение.Дата = ВложенныйЗапрос.Дата
	               |	ГДЕ
	               |		ДополнительноеСоглашение.Проведен = ИСТИНА
	               |		И ДополнительноеСоглашение.Дата <= &Дата2
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ДополнительноеСоглашение.ДоговорКонтрагента,
	               |		ДополнительноеСоглашение.ДокументОснование) КАК СрокиДействия_Доп
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			РасторжениеДоговораАренды.ДоговорКонтрагента КАК ДоговорКонтрагента,
	               |			РасторжениеДоговораАренды.ДатаОкончанияДоговора КАК ДатаОкончанияДоговора,
	               |			РасторжениеДоговораАренды.ДокументОснование КАК ДокументОснование
	               |		ИЗ
	               |			Документ.РасторжениеДоговораАренды КАК РасторжениеДоговораАренды
	               |		ГДЕ
	               |			РасторжениеДоговораАренды.Проведен = ИСТИНА
	               |			И РасторжениеДоговораАренды.Дата <= &Дата2) КАК ВложенныйЗапрос
	               |		ПО СрокиДействия_Доп.ДоговорКонтрагента = ВложенныйЗапрос.ДоговорКонтрагента
	               |			И СрокиДействия_Доп.Документ = ВложенныйЗапрос.ДокументОснование
	               |	ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |		ЗаключениеДоговораАренды.ДоговорКонтрагента КАК ДоговорКонтрагента,
	               |		МАКСИМУМ(ЗаключениеДоговораАренды.ДатаОкончанияДоговора) КАК ДатаОкончанияДоговора,
	               |		ЗаключениеДоговораАренды.Ссылка КАК Ссылка
	               |	ИЗ
	               |		Документ.ЗаключениеДоговораАренды КАК ЗаключениеДоговораАренды
	               |	ГДЕ
	               |		ЗаключениеДоговораАренды.Проведен = ИСТИНА
	               |		И ЗаключениеДоговораАренды.Дата <= &Дата2
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ЗаключениеДоговораАренды.ДоговорКонтрагента,
	               |		ЗаключениеДоговораАренды.Ссылка) КАК СрокиДействия_Осн
	               |		ПО СрокиДействия_Доп.ДоговорКонтрагента = СрокиДействия_Осн.ДоговорКонтрагента
	               |			И СрокиДействия_Доп.Документ = СрокиДействия_Осн.Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЕСТЬNULL(ВложенныйЗапрос.ДокументОснование, СрокиДействия_Доп.Документ),
	               |	ЕСТЬNULL(ВложенныйЗапрос.ДоговорКонтрагента, ЕСТЬNULL(СрокиДействия_Доп.ДоговорКонтрагента, СрокиДействия_Осн.ДоговорКонтрагента))				   //---АК
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДС.ДоговорКонтрагента,
	               |	ДС.Документ,
	               |	ВЫБОР
	               |		КОГДА ДС.Документ.ДатаЗаключенияДоговора ЕСТЬ NULL 
	               |			ТОГДА ДС.Документ.Дата
	               |		ИНАЧЕ ДС.Документ.ДатаЗаключенияДоговора
	               |	КОНЕЦ КАК ДатаНачала,
	               |	ДС.ДатаОкончанияДоговора КАК ДатаОкончания,
	               |	Договоры.Ссылка.ОбъектАренды.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	               |ПОМЕСТИТЬ ТЗ
	               |ИЗ
	               |	ДС КАК ДС
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Договоры КАК Договоры
	               |		ПО ДС.ДоговорКонтрагента = Договоры.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(ДополнительноеСоглашение.Ссылка, ЗаключениеДоговораАренды.Ссылка) КАК ПоследнийДокумент,
	               |	ВложенныйЗапрос.ДокументОснование
	               |ПОМЕСТИТЬ ПоследнееСоглашение
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВложенныйЗапрос.ДокументОснование КАК ДокументОснование,
	               |		МАКСИМУМ(ВложенныйЗапрос.Дата) КАК Дата
	               |	ИЗ
	               |		(ВЫБРАТЬ
	               |			ДополнительноеСоглашение.ДокументОснование КАК ДокументОснование,
	               |			ДополнительноеСоглашение.Дата КАК Дата
	               |		ИЗ
	               |			Документ.ДополнительноеСоглашение КАК ДополнительноеСоглашение
	               |		ГДЕ
	               |			ДополнительноеСоглашение.Проведен = ИСТИНА
	               |			И ДополнительноеСоглашение.Дата <= &Дата2
	               |		
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			ЗаключениеДоговораАренды.Ссылка,
	               |			ЗаключениеДоговораАренды.Дата
	               |		ИЗ
	               |			Документ.ЗаключениеДоговораАренды КАК ЗаключениеДоговораАренды
	               |		ГДЕ
	               |			ЗаключениеДоговораАренды.Проведен = ИСТИНА
	               |			И ЗаключениеДоговораАренды.Дата <= &Дата2) КАК ВложенныйЗапрос
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ВложенныйЗапрос.ДокументОснование) КАК ВложенныйЗапрос
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаключениеДоговораАренды КАК ЗаключениеДоговораАренды
	               |		ПО ВложенныйЗапрос.ДокументОснование = ЗаключениеДоговораАренды.Ссылка
	               |			И ВложенныйЗапрос.Дата = ЗаключениеДоговораАренды.Дата
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДополнительноеСоглашение КАК ДополнительноеСоглашение
	               |		ПО ВложенныйЗапрос.ДокументОснование = ДополнительноеСоглашение.ДокументОснование
	               |			И ВложенныйЗапрос.Дата = ДополнительноеСоглашение.Дата
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗ.ДоговорКонтрагента.Владелец КАК Контрагент,
	               |	ТЗ.ДоговорКонтрагента КАК Договор,
	               |	ТЗ.Документ,
	               |	ТЗ.ДатаНачала,
	               |	ТЗ.ДатаОкончания,
	               |	ТЗ.СтруктурнаяЕдиница,
	               |	ПоследнееСоглашение.ПоследнийДокумент
	               |ИЗ
	               |	ТЗ КАК ТЗ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПоследнееСоглашение КАК ПоследнееСоглашение
	               |		ПО ТЗ.Документ = ПоследнееСоглашение.ДокументОснование
	               |ГДЕ
	               |	ТЗ.ДатаНачала <= &Дата2
	               |	И ТЗ.ДатаОкончания >= &Дата1";
	Запрос.УстановитьПараметр("Дата1", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Дата2", КонецМесяца(ПериодРегистрации));
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Возврат ТЗ;
КонецФункции

Функция ПолучитьСписокДействующихДопСоглашений()
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Контрагент");
	ТЗ.Колонки.Добавить("Договор");
	ТЗ.Колонки.Добавить("Документ");
	ТЗ.Колонки.Добавить("ДопСоглашение");
	ТЗ.Колонки.Добавить("ДатаНачала");
	ТЗ.Колонки.Добавить("ДатаОкончания");
	ТЗ.Колонки.Добавить("ТипСтимулаАренды");
	ТЗ.Колонки.Добавить("КоличествоДнейСтимулаАренды");
	ТЗ.Колонки.Добавить("ДатаНачалаСтимула");
	ТЗ.Колонки.Добавить("ДатаОкончанияСтимула");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ДоговорыКонтрагентов.Ссылка
	               |ПОМЕСТИТЬ Договоры
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |ГДЕ
	               |	ДоговорыКонтрагентов.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСПоставщиком.Аренда)
	               |	И ДоговорыКонтрагентов.ОбъектАренды <> ЗНАЧЕНИЕ(Справочник.ОбъектыАренды.ПустаяСсылка)
	               |	И ДоговорыКонтрагентов.ОбъектАренды.СтруктурнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДополнительноеСоглашение.ДоговорКонтрагента.Владелец КАК Контрагент,
	               |	ДополнительноеСоглашение.ДоговорКонтрагента КАК Договор,
	               |	ДополнительноеСоглашение.ДокументОснование КАК Документ,
	               |	ДополнительноеСоглашение.Ссылка КАК ДопСоглашение,
	               |	ДополнительноеСоглашение.Дата КАК ДатаНачала,
	               |	ДополнительноеСоглашение.ДатаОкончанияДоговора КАК ДатаОкончания,
	               |	ДополнительноеСоглашение.ТипСтимулаАренды,
	               |	ДополнительноеСоглашение.КоличествоДнейСтимулаАренды,
	               |	ДополнительноеСоглашение.ДатаНачалаСтимула,
	               |	ДополнительноеСоглашение.ДатаОкончанияСтимула
	               |ИЗ
	               |	Документ.ДополнительноеСоглашение КАК ДополнительноеСоглашение
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Договоры КАК Договоры
	               |		ПО ДополнительноеСоглашение.ДоговорКонтрагента = Договоры.Ссылка
	               |ГДЕ
	               |	ДополнительноеСоглашение.ТипСтимулаАренды <> ЗНАЧЕНИЕ(Перечисление.АК_ТипыЛьготПоАренде.ПустаяСсылка)
	               |	И ДополнительноеСоглашение.Проведен = ИСТИНА
	               |	И ДополнительноеСоглашение.Дата < &Дата2
					//+++АК sils 16.07.2018 ИП-00014584.02
				   //|	И ДополнительноеСоглашение.ДатаОкончанияДоговора > &Дата1";
	               |	И ДополнительноеСоглашение.ДатаОкончанияДоговора > &Дата1
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗаключениеДоговораАренды.ДоговорКонтрагента.Владелец,
	               |	ЗаключениеДоговораАренды.ДоговорКонтрагента,
	               |	ЗаключениеДоговораАренды.Ссылка,
	               |	ЗаключениеДоговораАренды.Ссылка,
	               |	ЗаключениеДоговораАренды.Дата,
	               |	ЗаключениеДоговораАренды.ДатаОкончанияДоговора,
	               |	ЗаключениеДоговораАренды.ТипСтимулаАренды,
	               |	ЗаключениеДоговораАренды.КоличествоДнейСтимулаАренды,
	               |	NULL,
	               |	NULL
	               |ИЗ
	               |	Документ.ЗаключениеДоговораАренды КАК ЗаключениеДоговораАренды
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Договоры КАК Договоры
	               |		ПО ЗаключениеДоговораАренды.ДоговорКонтрагента = Договоры.Ссылка
	               |ГДЕ
	               |	ЗаключениеДоговораАренды.ТипСтимулаАренды <> ЗНАЧЕНИЕ(Перечисление.АК_ТипыЛьготПоАренде.ПустаяСсылка)
	               |	И ЗаключениеДоговораАренды.Проведен = ИСТИНА
	               |	И ЗаключениеДоговораАренды.Дата < &Дата2
	               |	И ЗаключениеДоговораАренды.ДатаОкончанияДоговора > &Дата1";					
					//---АК
	Запрос.УстановитьПараметр("Дата1", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Дата2", КонецМесяца(ПериодРегистрации));
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Возврат ТЗ;
КонецФункции

Функция ПолучитьГрафикиСтимулов(ТЗ_ДопСоглашений)
	ТЗ_Графики = Новый ТаблицаЗначений;
	ТЗ_Графики.Колонки.Добавить("ДопСоглашение");
	ТЗ_Графики.Колонки.Добавить("ПериодНачисления");
	ТЗ_Графики.Колонки.Добавить("Сумма");
	
	СЗ = Новый СписокЗначений;
	СЗ.ЗагрузитьЗначения(ТЗ_ДопСоглашений.ВыгрузитьКолонку("ДопСоглашение"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.ДопСоглашение,
	               |	ВложенныйЗапрос.ПериодНачисления,
				   //+++АК sils 09.07.2018 ИП-00014584.02
	               |	СУММА(ВложенныйЗапрос.СуммаОбщая) КАК СуммаОбщая,
	               |	СУММА(ВложенныйЗапрос.СуммаБаза) КАК СуммаБаза,
				   //---АК
	               |	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма
	               |ПОМЕСТИТЬ Графики
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		СтимулыПоДоговорамАрендыПоМесяцам.ДопСоглашение КАК ДопСоглашение,
	               |		СтимулыПоДоговорамАрендыПоМесяцам.ПериодНачисления КАК ПериодНачисления,
				   //+++АК sils 09.07.2018 ИП-00014584.02
	               |		СтимулыПоДоговорамАрендыПоМесяцам.СуммаОбщая КАК СуммаОбщая,
	               |		СтимулыПоДоговорамАрендыПоМесяцам.СуммаОбщая КАК СуммаБаза,
				   //---АК
	               |		СтимулыПоДоговорамАрендыПоМесяцам.Сумма КАК Сумма
	               |	ИЗ
	               |		РегистрСведений.СтимулыПоДоговорамАрендыПоМесяцам КАК СтимулыПоДоговорамАрендыПоМесяцам
	               |	ГДЕ
				   //+++АК sils 09.07.2018 ИП-00014584.02
				   //|		СтимулыПоДоговорамАрендыПоМесяцам.ПериодНачисления >= &Период
				   //|		И СтимулыПоДоговорамАрендыПоМесяцам.ДопСоглашение В(&СЗ)
	               |		СтимулыПоДоговорамАрендыПоМесяцам.ДопСоглашение В(&СЗ)
				   //---АК
	               |		И СтимулыПоДоговорамАрендыПоМесяцам.Начислено = ЛОЖЬ
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		СтимулыПоДоговорамАрендыПоМесяцам.ДопСоглашение,
	               |		СтимулыПоДоговорамАрендыПоМесяцам.ПериодНачисления,
				   //+++АК sils 09.07.2018 ИП-00014584.02
	               |		-СтимулыПоДоговорамАрендыПоМесяцам.СуммаОбщая КАК СуммаОбщая,
	               |		0,
				   //---АК
	               |		-СтимулыПоДоговорамАрендыПоМесяцам.Сумма
	               |	ИЗ
	               |		РегистрСведений.СтимулыПоДоговорамАрендыПоМесяцам КАК СтимулыПоДоговорамАрендыПоМесяцам
	               |	ГДЕ
				   //+++АК sils 09.07.2018 ИП-00014584.02
				   //|		СтимулыПоДоговорамАрендыПоМесяцам.ПериодНачисления >= &Период
				   //|		И СтимулыПоДоговорамАрендыПоМесяцам.ДопСоглашение В(&СЗ)
	               |		СтимулыПоДоговорамАрендыПоМесяцам.ДопСоглашение В(&СЗ)
				   //---АК
	               |		И СтимулыПоДоговорамАрендыПоМесяцам.Начислено = ИСТИНА) КАК ВложенныйЗапрос
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВложенныйЗапрос.ДопСоглашение,
	               |	ВложенныйЗапрос.ПериодНачисления
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Графики.ДопСоглашение,
	               |	Графики.ПериодНачисления,
				   //+++АК sils 09.07.2018 ИП-00014584.02
	               |	Графики.СуммаОбщая,
	               |	Графики.СуммаБаза,
				   //---АК
	               |	Графики.Сумма
	               |ИЗ
				   //+++АК sils 09.07.2018 ИП-00014584.02
				   //|	Графики КАК Графики
				   //|ГДЕ
				   //|	Графики.Сумма <> 0";
	               |	Графики КАК Графики";
				   //---АК
	Запрос.УстановитьПараметр("СЗ", СЗ);
	Запрос.УстановитьПараметр("Период", НачалоМесяца(ПериодРегистрации));
	ТЗ_Графики = Запрос.Выполнить().Выгрузить();
	
	Возврат ТЗ_Графики;
КонецФункции

Процедура КоманднаяПанельМСФОЗаполнить(Кнопка)
	Если ЭтотОбъект.ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПостояннаяЧасть Тогда
		РасчетСтимулов();
	КонецЕсли;
КонецПроцедуры

Процедура МСФОСуммаПриИзменении(Элемент)
	стр = ЭлементыФормы.МСФО.ТекущиеДанные;
	Если стр.Сумма = 0 Тогда
		стр.РучнаяКорректировкаСуммы = Ложь;
	Иначе
		стр.РучнаяКорректировкаСуммы = Истина;
	КонецЕсли;
КонецПроцедуры

Процедура МСФОПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.РучнаяКорректировкаСуммы = Истина Тогда
		ОформлениеСтроки.Ячейки.Сумма.ЦветФона = Новый Цвет(220, 220, 220);
	Иначе
		ОформлениеСтроки.Ячейки.Сумма.ЦветФона = Новый Цвет(255, 255, 255);
	КонецЕсли;
КонецПроцедуры

//+++АК POZM 2018.01.10 ИП-00017514 
Процедура КоманднаяПанельНачислениеАрендыДобавитьСтрокуПоЗаявке(Кнопка)
	Заявка = ОткрытьФормуМодально("Документ.ЗаявкаНаУслугиМатериалы.Форма.ФормаВыбораНеоплаченныхЗаявокПоАренде");
	Если ЗначениеЗаполнено(Заявка) Тогда
		НС = НачислениеАренды.Добавить();
		Результат = СобратьДанныеПоЗаявке(Заявка);
		ЗаполнитьЗначенияСвойств(НС,Результат);
		НС.ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть;
		//+++ AK suvv 08.06.2018 ИП-00018071
		НС.СуммаНДФЛ = Окр(НС.СуммаНДФЛ);
		//--- AK suvv
	КонецЕсли;	
КонецПроцедуры

Функция СобратьДанныеПоЗаявке(Заявка)
	ТекстЗапроса="ВЫБРАТЬ
	             //+++ AK suvv 04.04.2018 ИП-00018071
	             |	&Заявка КАК Ссылка,
	             |	СУММА(ЗаявкаНаУслугиМатериалы.СуммаДокумента) КАК СуммаНДФЛ
	             |ПОМЕСТИТЬ ВТ_СуммыНДФЛПоЗаявке
	             |ИЗ
	             |	Документ.ЗаявкаНаУслугиМатериалы КАК ЗаявкаНаУслугиМатериалы
	             |ГДЕ
	             |	ЗаявкаНаУслугиМатериалы.Проведен
	             |	И ЗаявкаНаУслугиМатериалы.ДокументОснование = &Заявка
	             |	И ЗаявкаНаУслугиМатериалы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаявкиНаУслугиМатериалы.ПеречислениеНалога)
	             |	И ЗаявкаНаУслугиМатериалы.СчетУчетаРасчетов = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.НалогиСФОТ)
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
				 //---AK suvv
	             |	ЗаявкаНаУслугиМатериалыУслуги.Ссылка КАК Заявка,
	             |	ЗаявкаНаУслугиМатериалыУслуги.Ссылка.Организация,
	             |	ЗаявкаНаУслугиМатериалыУслуги.Ссылка.Контрагент,
	             |	ЗаявкаНаУслугиМатериалыУслуги.Ссылка.ДоговорКонтрагента КАК Договор,
	             |	МАКСИМУМ(ЗаявкаНаУслугиМатериалыУслуги.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиница,
	             |	ЗаявкаНаУслугиМатериалыУслуги.Ссылка.ЦФО,
	             |	СУММА(ЗаявкаНаУслугиМатериалыУслуги.Сумма) КАК Сумма,
	             |	МАКСИМУМ(ЗаявкаНаУслугиМатериалыУслуги.СтавкаНДС) КАК СтавкаНДС,
	             |	СУММА(ЗаявкаНаУслугиМатериалыУслуги.Сумма) КАК СуммаБух,
	             |	ИСТИНА КАК ВыгружатьВБухгалтерию,
	             |	ЗаявкаНаУслугиМатериалыУслуги.Ссылка.НачалоПериодаАренды КАК ПериодРегистрации,
				 //+++ AK suvv 04.04.2018 ИП-00018071
				 ////|	СУММА(ЗаявкаНаУслугиМатериалыУслуги.Сумма) КАК АК_РасчетнаяСумма
				 //|	0 КАК АК_РасчетнаяСумма,
	             |	ЕСТЬNULL(ВТ_СуммыНДФЛПоЗаявке.СуммаНДФЛ, 0) КАК СуммаНДФЛ
				 //---AK suvv
	             |ИЗ
	             |	Документ.ЗаявкаНаУслугиМатериалы.Услуги КАК ЗаявкаНаУслугиМатериалыУслуги
				 //+++ AK suvv 04.04.2018 ИП-00018071
				 |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммыНДФЛПоЗаявке КАК ВТ_СуммыНДФЛПоЗаявке
	             |		ПО ЗаявкаНаУслугиМатериалыУслуги.Ссылка = ВТ_СуммыНДФЛПоЗаявке.Ссылка
	             //---AK suvv
				 |ГДЕ
	             |	ЗаявкаНаУслугиМатериалыУслуги.Ссылка = &Заявка
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ЗаявкаНаУслугиМатериалыУслуги.Ссылка,
	             |	ЗаявкаНаУслугиМатериалыУслуги.Ссылка.Организация,
	             |	ЗаявкаНаУслугиМатериалыУслуги.Ссылка.Контрагент,
	             |	ЗаявкаНаУслугиМатериалыУслуги.Ссылка.ДоговорКонтрагента,
	             |	ЗаявкаНаУслугиМатериалыУслуги.Ссылка.ЦФО,
				 //+++ AK suvv 04.04.2018 ИП-00018071
				 //|	ЗаявкаНаУслугиМатериалыУслуги.Ссылка.НачалоПериодаАренды";
				 |	ЗаявкаНаУслугиМатериалыУслуги.Ссылка.НачалоПериодаАренды,
	             |	ЕСТЬNULL(ВТ_СуммыНДФЛПоЗаявке.СуммаНДФЛ, 0)";
				 //---AK suvv
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Заявка",Заявка);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка;
КонецФункции	

Процедура ВидАренднойПлатыПриИзменении(Элемент)
	УстановитьДоступностьОтДопРолей();
	УстановитьВидимость();
КонецПроцедуры
//---АК POZM 
//---АК

//+++АК Susk (Суслин К.В.) 2018.01.25 ИП-00017731 
Процедура ДействияФормыВыгрузитьВБПНов(Кнопка)
	
	Если НЕ ОбменСБП2_0.ПроверкаПередВыгрузкой(Ссылка.Пустая(), Модифицированность) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипАренднойПлаты <> Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть ИЛИ ВидАренднойПлаты <> Перечисления.ВидыАренднойПлаты.ПоСчету Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Выгружаются в БП только документы по переменной части с видом арендной платы ""По счету""!");
		Возврат;
	КонецЕсли;
		
	ОбменСБП2_0.ВыгрузитьДокументВБП("НачислениеАренднойПлатыОтАрендодателей", "НачислениеАренднойПлатыОтАрендодателей", Ссылка); 
	
КонецПроцедуры

//+++АК SUVV 2018.03.20 ИП-00018025
Процедура КоманднаяПанельНачислениеАрендыДействиеЗарегистрироватьСФ(Кнопка)
	
	ТекДанные = ЭлементыФормы.НачислениеАренды.ТекущиеДанные;
	Если ТекДанные = неопределено Тогда 
		Предупреждение("Не выбрана строка начисления аренды для формирования счета-фактуры!");
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьНовуюСФ(ТекДанные, "НачислениеАренды");
	
КонецПроцедуры //---АК SUVV

//+++АК SUVV 2018.03.20 ИП-00018025
Процедура КоманднаяПанель1ДействиеЗарегистрироватьСФ(Кнопка)
	
	ТекДанные = ЭлементыФормы.ПрочаяЗадолженность.ТекущиеДанные;
	Если ТекДанные = неопределено Тогда 
		Предупреждение("Не выбрана строка прочей задолженности для формирования счета-фактуры!");
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьНовуюСФ(ТекДанные, "ПрочаяЗадолженность");
	
КонецПроцедуры //---АК SUVV

//+++АК SUVV 2018.03.20 ИП-00018025
// создание документа "Счет-фактура полученный"
// ТекДанные - строка табличной части, содержащая информацию об операции, облагаемой НДС
// НаименованиеТабличнойЧасти - наименование табличной части, из которой получена строка ТекДанные
Процедура ЗарегистрироватьНовуюСФ(ТекДанные, НаименованиеТабличнойЧасти)
		
	Если ТекДанные.Договор.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС или не ЗначениеЗаполнено(ТекДанные.Договор.СтавкаНДС) Тогда 
		Предупреждение("Счет-фактура может быть зарегистрирован только по договорам контрагентов-плательщиков НДС.");
		Возврат;
	КонецЕсли;
	
	Если НаименованиеТабличнойЧасти = "НачислениеАренды" Тогда 
		
		Если ТекДанные.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС или НЕ ЗначениеЗаполнено(ТекДанные.СтавкаНДС) Тогда 
			Предупреждение("Счет-фактура может быть зарегистрирован только по операциям с учетом НДС.");
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	Если ТекДанные.НомерСФ <> "" или ТекДанные.ДатаСФ <> Дата(0001,01,01) Тогда 
		Сообщить("По выбранной операции уже зарегистрирована счет-фактура №" + ТекДанные.НомерСФ + " от " + Формат(ТекДанные.ДатаСФ, "ДФ=dd.MM.yyyy"));
		Возврат;
	КонецЕсли;
		
	СчетФактураПоСтроке = ПолучитьСчетФактуруПоСтроке(НаименованиеТабличнойЧасти, ТекДанные.НомерСтроки); 
	
	Если ЗначениеЗаполнено(СчетФактураПоСтроке) Тогда
		СчетФактураПоСтрокеУжеСоздана = Истина;
	Иначе
		СчетФактураПоСтрокеУжеСоздана = Ложь;
	КонецЕсли;
	
	Если СчетФактураПоСтрокеУжеСоздана Тогда 
		Сообщить("По выбранной операции уже зарегистрирована счет-фактура " + СчетФактураПоСтроке + " (Вх. №" + СчетФактураПоСтроке.НомерВходящегоДокумента + ", вх. дата " + Формат(СчетФактураПоСтроке.ДатаВходящегоДокумента, "ДФ=dd.MM.yyyy") + ")");
		Возврат;
	КонецЕсли;
	
	ФормаНовДокументаСФ = ПолучитьФорму("Документ.СчетФактураПолученный.Форма.ФормаДокумента");
	
	Если НаименованиеТабличнойЧасти = "НачислениеАренды" Тогда
		СуммаНДСПоСтроке = Окр(УчетНДС.РассчитатьСуммуНДС(ТекДанные.Сумма, Истина, Истина, УчетНДС.ПолучитьСтавкуНДС(ТекДанные.СтавкаНДС)), 2);
	ИначеЕсли НаименованиеТабличнойЧасти = "ПрочаяЗадолженность" Тогда 
		СуммаНДСПоСтроке = Окр(УчетНДС.РассчитатьСуммуНДС(ТекДанные.Сумма, Истина, Истина, УчетНДС.ПолучитьСтавкуНДС(ТекДанные.Договор.СтавкаНДС)), 2);
	Иначе
		СуммаНДСПоСтроке = 0;
	КонецЕсли;
	
	СтруктураСвойств = Новый Структура;
	СтруктураСвойств.Вставить("ДокументОснование", Ссылка);
	СтруктураСвойств.Вставить("Организация",       ТекДанные.Организация);
	СтруктураСвойств.Вставить("Контрагент",        ТекДанные.Контрагент);
	СтруктураСвойств.Вставить("СуммаДокумента",    ТекДанные.Сумма);
	СтруктураСвойств.Вставить("СуммаНДСДокумента", СуммаНДСПоСтроке);
	СтруктураСвойств.Вставить("Ответственный",     ПараметрыСеанса.ТекущийПользователь);
	СтруктураСвойств.Вставить("Файл",              ТекДанные.Организация);
	СтруктураСвойств.Вставить("КППКонтрагента",    ТекДанные.Контрагент.КПП);
	СтруктураСвойств.Вставить("НаименованиеТабличнойЧасти", НаименованиеТабличнойЧасти);
	СтруктураСвойств.Вставить("НомерСтрокиВТабличнойЧасти", ТекДанные.НомерСтроки);
	
	ЗаполнитьЗначенияСвойств(ФормаНовДокументаСФ, СтруктураСвойств);
	ФормаНовДокументаСФ.Открыть();
	
КонецПроцедуры //---АК SUVV

//+++АК SUVV 2018.03.20 ИП-00018025
Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ЭтотОбъект.Ссылка);

КонецПроцедуры //---АК SUVV

//+++АК SUVV 2018.03.20 ИП-00018025
Процедура ДействияФормыДействиеОтчетПоСФ(Кнопка)
		
	ОтборПоДокументу = Новый Структура();
	ОтборПоДокументу.Вставить("ДокументНачислениеАренды", Ссылка);
	ПараметрыФормы = Новый Структура("СформироватьПриОткрытии, Отбор", Истина, ОтборПоДокументу);
	ФормаОтчета = ПолучитьФорму("Отчет.ОтчетПоСФАренда.Форма.ФормаОтчета", ПараметрыФормы);
	НовыеПользовательскиеНастройки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
	КомпоновщикНастроек = ФормаОтчета.Отчет.КомпоновщикНастроек;
	КомпоновщикНастроек.ЗагрузитьПользовательскиеНастройки(НовыеПользовательскиеНастройки);
	//+++ AK suvv 04.04.2018 ИП-00018025.04	
	ИдНастройки = КомпоновщикНастроек.ПользовательскиеНастройки.ПолучитьИдентификаторПоОбъекту(КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период")));
	ПараметрПериод = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ИдНастройки);
	Если ПараметрПериод <> неопределено Тогда 
		ПараметрПериод.Использование = Истина;
		ПараметрПериод.Значение.ДатаНачала = НачалоДня(Дата);
		ПараметрПериод.Значение.ДатаОкончания = КонецДня(Дата);
	КонецЕсли;
	//--- AK suvv
	ОткрытьФорму(ФормаОтчета);
	ФормаОтчета.СкомпоноватьРезультат();

КонецПроцедуры //---АК SUVV

//+++ AK suvv 04.04.2018 ИП-00018071
Функция ПолучитьВариантРасчета()
	Если ЭтотОбъект.ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПостояннаяЧасть или 
		ЭтотОбъект.ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть и ЭтотОбъект.ВидАренднойПлаты = Перечисления.ВидыАренднойПлаты.Фиксированная Тогда
		Возврат 1;
	ИначеЕсли ЭтотОбъект.ТипАренднойПлаты = Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть и ЭтотОбъект.ВидАренднойПлаты = Перечисления.ВидыАренднойПлаты.ПоСчету Тогда
		Возврат 2;
	Иначе
		Возврат 0;
	КонецЕсли;
КонецФункции  //---AK suvv

//+++ AK suvv 04.04.2018 ИП-00018071
Функция ПолучитьСуммуНДФЛПоЗаявке(Заявка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ЗаявкаНаУслугиМатериалы.СуммаДокумента) КАК СуммаНДФЛ
	|ИЗ
	|	Документ.ЗаявкаНаУслугиМатериалы КАК ЗаявкаНаУслугиМатериалы
	|ГДЕ
	|	ЗаявкаНаУслугиМатериалы.ДокументОснование = &Заявка
	|	И ЗаявкаНаУслугиМатериалы.Проведен
	|	И ЗаявкаНаУслугиМатериалы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийЗаявкиНаУслугиМатериалы.ПеречислениеНалога)
	|	И ЗаявкаНаУслугиМатериалы.СчетУчетаРасчетов = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.НалогиСФОТ)";
	Запрос.УстановитьПараметр("Заявка", Заявка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		//+++ AK suvv 08.06.2018 ИП-00018071
		//Возврат Выборка.СуммаНДФЛ;
		Возврат Окр(Выборка.СуммаНДФЛ);
		//--- AK suvv
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции //---AK suvv

//+++ AK suvv 04.04.2018 ИП-00018071
Процедура ПересчитатьСуммуНДФЛ(ТекДанные, ВариантРасчета)
	
	Если ТекДанные.Договор.УплачиватьНДФЛЗаКонтрагента Тогда
		
		Если ВариантРасчета = 1 Тогда 			 
			ТекДанные.СуммаНДФЛ = ТекДанные.Сумма / 0.87 - ТекДанные.Сумма;
			//+++ AK suvv 08.06.2018 ИП-00018071
			ТекДанные.СуммаНДФЛ = Окр(ТекДанные.СуммаНДФЛ);
			//--- AK suvv
		ИначеЕсли ВариантРасчета = 2 Тогда
			ТекДанные.СуммаНДФЛ = ПолучитьСуммуНДФЛПоЗаявке(ТекДанные.Заявка);
		Иначе
			ТекДанные.СуммаНДФЛ = 0;
		КонецЕсли;		
	Иначе
		ТекДанные.СуммаНДФЛ = 0;
	КонецЕсли;
	
КонецПроцедуры //---AK suvv

//+++ AK suvv 04.04.2018 ИП-00018071
Процедура ПрочаяЗадолженностьСуммаПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.ПрочаяЗадолженность.ТекущиеДанные;
	
	ВариантРасчета = 1;
	ПересчитатьСуммуНДФЛ(ТекДанные, ВариантРасчета);
	
КонецПроцедуры //---AK suvv

//+++ AK suvv 04.04.2018 ИП-00018071
Процедура НачислениеАрендыСуммаПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.НачислениеАренды.ТекущиеДанные;
	
	ВариантРасчета = ПолучитьВариантРасчета();
	ПересчитатьСуммуНДФЛ(ТекДанные, ВариантРасчета);
	
КонецПроцедуры //---AK suvv

//+++ AK suvv 04.04.2018 ИП-00018071
Процедура НачислениеАрендыЗаявкаПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.НачислениеАренды.ТекущиеДанные;
	Если ТекДанные <> неопределено Тогда 
		ТекДанные.СуммаНДФЛ = ПолучитьСуммуНДФЛПоЗаявке(ТекДанные.Заявка);
	КонецЕсли;
	
КонецПроцедуры  //---AK suvv

//+++ AK suvv 04.06.2018 ИП-00018737
Процедура ДействияФормыДействиеОтчетАнализНачислений(Кнопка)
	
	ФормаОтчета = ПолучитьФорму("Отчет.АнализДанныхПоУсловнымНачислениямАренднойПлаты.Форма.ФормаОтчета");
	ФормаОтчета.ТекущийДокумент = Ссылка;
	ОткрытьФорму(ФормаОтчета);
	ФормаОтчета.ОбновитьОтчет();
	
КонецПроцедуры //--- AK suvv

//+++АК sils 08.06.2018 ИП-00018876
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Начисление арендной платы от арендодателей");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
КонецПроцедуры

//+++АК sils 10.07.2018 ИП-00014584.02
Процедура КоманднаяПанельМСФОРасшифровкаРасчетов(Кнопка)
	// Находим действующие договора
	ТЗ_Договоров = ПолучитьСписокДействующихДоговоров();
	// Находим действующие доп.соглашения со стимулами
	ТЗ_ДопСоглашений = ПолучитьСписокДействующихДопСоглашений();
	// Находим графики списания
	ТЗ_Графики = ПолучитьГрафикиСтимулов(ТЗ_ДопСоглашений);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасшифровкаРасчетов";
	
	Макет = ПолучитьМакет("РасшифровкаРасчетов");
	ШапкаДокумента = Макет.ПолучитьОбласть("Шапка");
	ТабДокумент.Вывести(ШапкаДокумента);
	
	СтрокаКонтрагент = Макет.ПолучитьОбласть("Контрагент");
	СтрокаДопСоглашение_Каникулы = Макет.ПолучитьОбласть("ДопСоглашение_Каникулы");
	СтрокаДопСоглашение_Скидка = Макет.ПолучитьОбласть("ДопСоглашение_Скидка");
	СтрокаПериод = Макет.ПолучитьОбласть("Период");
	
	ТЧ = МСФО.Выгрузить();
	ТЧ.Свернуть("Контрагент, Договор", "");
	ТЧ.Сортировать("Контрагент, Договор");
	
	ТЧ_Период = МСФО.Выгрузить();
	ТЧ_Период.Свернуть("Контрагент, Договор, ДопСоглашение, ОбщаяСумма, ПериодРегистрации", "Сумма");
	ТЧ_Период.Сортировать("Контрагент, Договор, ДопСоглашение, ОбщаяСумма, ПериодРегистрации");
	
	Для каждого стр1 из ТЧ Цикл
		Отбор1 = Новый Структура;
		Отбор1.Вставить("Контрагент", стр1.Контрагент);
		Отбор1.Вставить("Договор", стр1.Договор);
		НайденныеДоговора = ТЗ_Договоров.НайтиСтроки(Отбор1);
		
		Для каждого стр2 из НайденныеДоговора Цикл
			// Ищем в графиках нашу строчку
			Отбор2 = Новый Структура;
			Отбор2.Вставить("Контрагент", стр1.Контрагент);
			Отбор2.Вставить("Договор", стр1.Договор);
			Отбор2.Вставить("Документ", стр2.Документ);
			НайденныеДопСоглашения = ТЗ_ДопСоглашений.НайтиСтроки(Отбор2);
			
			СтрокаКонтрагент.Параметры.Контрагент = стр1.Контрагент;
			СтрокаКонтрагент.Параметры.Договор = стр1.Договор;
			СтрокаКонтрагент.Параметры.Документ = стр2.Документ;
			ТабДокумент.Вывести(СтрокаКонтрагент);
			
			Для каждого стр3 из НайденныеДопСоглашения Цикл
				Отбор3 = Новый Структура;
				Отбор3.Вставить("ДопСоглашение", стр3.ДопСоглашение);
				
				ОбщаяСуммаСкидки = 0;
				НайденныйГрафик = ТЗ_Графики.НайтиСтроки(Отбор3);
				Для каждого стр4 из НайденныйГрафик Цикл
					ОбщаяСуммаСкидки = ОбщаяСуммаСкидки + стр4.СуммаБаза;
				КонецЦикла;
				
				ТекДопСоглашение = стр3.ДопСоглашение;
				Если стр3.ТипСтимулаАренды = Перечисления.АК_ТипыЛьготПоАренде.Каникулы Тогда
					СтрокаДопСоглашение_Каникулы.Параметры.ДопСоглашениеНаим = 
						?(ТипЗнч(ТекДопСоглашение) = Тип("ДокументСсылка.ДополнительноеСоглашение"), "Доп.соглашение №", "Закл.договора аренды №") + 
						СокрЛП(ТекДопСоглашение.Номер) + " от " + Формат(ТекДопСоглашение.Дата, "ДФ=dd.MM.yyyy");
					СтрокаДопСоглашение_Каникулы.Параметры.ДопСоглашение = ТекДопСоглашение;
					
					СрокДействияСкидки = ТекДопСоглашение.КоличествоДнейСтимулаАренды;
					Если СрокДействияСкидки = 0 и ТипЗнч(ТекДопСоглашение) = Тип("ДокументСсылка.ДополнительноеСоглашение")
						и ЗначениеЗаполнено(ТекДопСоглашение.ДатаОкончанияСтимула) и ЗначениеЗаполнено(ТекДопСоглашение.ДатаНачалаСтимула) и
						ТекДопСоглашение.ДатаОкончанияСтимула > ТекДопСоглашение.ДатаНачалаСтимула Тогда
						СрокДействияСкидки = (КонецДня(ТекДопСоглашение.ДатаОкончанияСтимула) - НачалоДня(ТекДопСоглашение.ДатаНачалаСтимула) + 1) / 86400 ;
					КонецЕсли;
					СтрокаДопСоглашение_Каникулы.Параметры.СрокДействияСкидки = СрокДействияСкидки;
					
					СуммаКаникул = ?(СрокДействияСкидки = 0, 0, ОбщаяСуммаСкидки / СрокДействияСкидки);
					Сумма2 = СуммаКаникул* 365 / 12;
					
					СтрокаДопСоглашение_Каникулы.Параметры.СуммаДоговора = Формат(Сумма2, "ЧДЦ=2; ЧРД=,; ЧРГ=' '");
					СтрокаДопСоглашение_Каникулы.Параметры.СуммаКаникул = Формат(Окр(СуммаКаникул, 2, 1), "ЧДЦ=2; ЧРД=,; ЧРГ=' '");
					
					СтоимостьКаникул = СуммаКаникул * СрокДействияСкидки;
					СтрокаДопСоглашение_Каникулы.Параметры.СтоимостьКаникул = Формат(Окр(СтоимостьКаникул, 2, 1), "ЧДЦ=2; ЧРД=,; ЧРГ=' '");
					ТабДокумент.Вывести(СтрокаДопСоглашение_Каникулы);
				Иначе
					СрокДействияСкидки = ТекДопСоглашение.КоличествоДнейСтимулаАренды;
					Если СрокДействияСкидки = 0 и ЗначениеЗаполнено(ТекДопСоглашение.ДатаОкончанияСтимула) и ЗначениеЗаполнено(ТекДопСоглашение.ДатаНачалаСтимула) и
						ТекДопСоглашение.ДатаОкончанияСтимула > ТекДопСоглашение.ДатаНачалаСтимула Тогда
						СрокДействияСкидки = (КонецДня(ТекДопСоглашение.ДатаОкончанияСтимула) - НачалоДня(ТекДопСоглашение.ДатаНачалаСтимула) + 1) / 86400;
					КонецЕсли;
					
					СуммаСкидки = ?(СрокДействияСкидки = 0, 0, ОбщаяСуммаСкидки * 30 / СрокДействияСкидки);
					
					СтрокаДопСоглашение_Скидка.Параметры.ДопСоглашениеНаим = "Доп.соглашение №" + 
						СокрЛП(ТекДопСоглашение.Номер) + " от " + Формат(ТекДопСоглашение.Дата, "ДФ=dd.MM.yyyy");
					СтрокаДопСоглашение_Скидка.Параметры.ДопСоглашение = ТекДопСоглашение;
					СтрокаДопСоглашение_Скидка.Параметры.СуммаСкидки = Формат(Окр(СуммаСкидки, 2, 1), "ЧДЦ=2; ЧРД=,; ЧРГ=' '");
					СтрокаДопСоглашение_Скидка.Параметры.СрокДействияСкидки = СрокДействияСкидки;
					СтрокаДопСоглашение_Скидка.Параметры.ОбщаяСуммаСкидки = Формат(Окр(ОбщаяСуммаСкидки, 2, 1), "ЧДЦ=2; ЧРД=,; ЧРГ=' '");
					ТабДокумент.Вывести(СтрокаДопСоглашение_Скидка);
				КонецЕсли;
				
				Отбор4 = Новый Структура;
				Отбор4.Вставить("Контрагент", стр1.Контрагент);
				Отбор4.Вставить("Договор", стр1.Договор);
				Отбор4.Вставить("ДопСоглашение", стр3.ДопСоглашение);
				НайденныеПериоды = ТЧ_Период.НайтиСтроки(Отбор4);
				
				Для каждого стр4 из НайденныеПериоды Цикл
					Если стр4.ОбщаяСумма Тогда
						Продолжить;
					КонецЕсли;
					СтрокаПериод.Параметры.Период = стр4.ПериодРегистрации;
					СтрокаПериод.Параметры.Сумма = стр4.Сумма;
					ТабДокумент.Вывести(СтрокаПериод);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ТабДокумент.ОтображатьСетку		= Ложь;
	ТабДокумент.Защита				= Истина;
	ТабДокумент.ТолькоПросмотр		= Истина;
	ТабДокумент.ОтображатьЗаголовки	= Ложь;
	ТабДокумент.Показать();
КонецПроцедуры

////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

ЭлементыФормы.ТипАренднойПлаты.СписокВыбора.Добавить(Перечисления.ТипыАренднойПлаты.ПостояннаяЧасть);
ЭлементыФормы.ТипАренднойПлаты.СписокВыбора.Добавить(Перечисления.ТипыАренднойПлаты.ПеременнаяЧасть);

ОтборЗначение 	= Справочники.Контрагенты.ПустаяСсылка();
мВалютаРегл 	= Константы.ВалютаРегламентированногоУчета.Получить();

СписокТТсОшибочнойПлощадью = Новый СписокЗначений;
