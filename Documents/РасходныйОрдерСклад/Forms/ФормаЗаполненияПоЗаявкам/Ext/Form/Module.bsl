
&НаКлиенте
Процедура Перенести(Команда)
	
	//
	ВладелецФормы.Объект.Товары.Очистить();
	Для Каждого СтрокаТЧ Из Товары Цикл 
		
		//
		Если НЕ СтрокаТЧ.Перенести Тогда
			Продолжить;
		КонецЕсли;	
		
		//
		НоваяСтрока = ВладелецФормы.Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
		
		//
		НоваяСтрока.ЗаявкаНаПроизводствоПерсональнойУпаковки = СтрокаТЧ.Заявка;
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.ЗаявкаНаПроизводствоПерсональнойУпаковки) Тогда
			НоваяСтрока.ЗаявкаНаПроизводствоПерсональнойУпаковки = ВладелецФормы.Объект.Основание;	
		КонецЕсли;
		
	КонецЦикла;
	
	//
	ВладелецФормы.ЗаполнитьПризнакИспользованияХарактеристики();
	
	//
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоЗаявкамПоставщикаСервер(Ссылка, Поставщик, Склад)
	
	//
	ТЗ = "ВЫБРАТЬ
	     |	Таблица.Заявка,
	     |	Таблица.Номенклатура,
	     |	Таблица.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	     |	Таблица.КоличествоЗаказаноОстаток,
	     |	Таблица.КоличествоКОтгрузкеОстаток,
	     |	СУММА(ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0)) КАК КоличествоОстаток
	     |ИЗ
	     |	РегистрНакопления.АК_ЗаявкиНаПроизводствоПерсональнойУпаковки.Остатки(, Заявка.Поставщик = &Поставщик) КАК Таблица
	     |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	     |			Таблица.Номенклатура КАК Номенклатура,
	     |			Таблица.КоличествоОстаток КАК КоличествоОстаток
	     |		ИЗ
	     |			РегистрНакопления.ТоварыНаСкладах.Остатки(, Склад = &Склад) КАК Таблица
	     |		
	     |		ОБЪЕДИНИТЬ ВСЕ
	     |		
	     |		ВЫБРАТЬ
	     |			Таблица.Номенклатура,
	     |			-Таблица.КоличествоКОтгрузкеОстаток
	     |		ИЗ
	     |			РегистрНакопления.АК_ЗаявкиНаПроизводствоПерсональнойУпаковки.Остатки(
	     |					,
	     |					НЕ Заявка.Ссылка ЕСТЬ NULL 
	     |						И Заявка <> &Заявка
	     |						И &ПризнакЗаявкаУказана) КАК Таблица) КАК ТоварыНаСкладахОстатки
	     |		ПО Таблица.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	     |ГДЕ
	     |	Таблица.КоличествоЗаказаноОстаток > 0
	     |
	     |СГРУППИРОВАТЬ ПО
	     |	Таблица.Заявка,
	     |	Таблица.Номенклатура,
	     |	Таблица.Номенклатура.ЕдиницаХраненияОстатков,
	     |	Таблица.КоличествоЗаказаноОстаток,
	     |	Таблица.КоличествоКОтгрузкеОстаток";
	
	//
	ПЗ = Новый ПостроительЗапроса;
	ПЗ.Текст = ТЗ;
	
	//
	ПЗ.Параметры.Вставить("Дата", ?(ЗначениеЗаполнено(Ссылка), Ссылка.МоментВремени(), КонецДня(ТекущаяДата())));
	ПЗ.Параметры.Вставить("Поставщик", Поставщик);
	ПЗ.Параметры.Вставить("Склад", Склад);
	
	//
	Если ТипЗнч(Ссылка.Основание) = Тип("ДокументСсылка.ЗаявкаНаПечатьЭтикетки") Тогда
		ПЗ.Параметры.Вставить("Заявка", Ссылка.Основание);
	ИначеЕсли ТипЗнч(Ссылка.Основание) = Тип("ДокументСсылка.ПриходныйОрдерСклад") Тогда
		ПЗ.Параметры.Вставить("Заявка", Ссылка.Основание.Основание);
	Иначе
		ПЗ.Параметры.Вставить("Заявка", Ссылка.Основание);
	КонецЕсли; 
	
	//
	ПЗ.Параметры.Вставить("ПризнакЗаявкаУказана", ЗначениеЗаполнено(ПЗ.Параметры.Заявка));
	
	//
	ПЗ.Выполнить();
	
	//
	Выборка = ПЗ.Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		//
		Если НЕ ЗначениеЗаполнено(Выборка.КоличествоОстаток) Тогда
			Продолжить;
		КонецЕсли; 
		
		//
		Количество = МАКС(0, мин(Выборка.КоличествоЗаказаноОстаток, Выборка.КоличествоОстаток), мин(Выборка.КоличествоКОтгрузкеОстаток, Выборка.КоличествоОстаток)); 
		Если Количество = 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		//
		НоваяСтрока = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		//
		НоваяСтрока.Количество = Количество;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьПоЗаявкамПоставщикаСервер(ВладелецФормы.Объект.Ссылка, ВладелецФормы.Объект.Получатель, ВладелецФормы.Объект.Склад);
КонецПроцедуры
