
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Дата = ТекущаяДата();
	СтруктурноеПодразделение = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОсновноеСтруктурноеПодразделение");
	
	Если ЗначениеЗаполнено(СтруктурноеПодразделение) Тогда
		ПерезаполнитьТаблицуТоваров();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьТаблицуТоваров()
	
	Товары.Очистить();
	
	ТабТТ = ВнешниеДанные.ПолучитьДвиженияТоваровПолная(Дата, Дата, ?(ЗначениеЗаполнено(ТорговаяТочка), ТорговаяТочка, Неопределено));
	
	ТабРасходники = ПолныеПрава.ПолучитьТаблицуТоваровПереданныхВТТ(Дата, СтруктурноеПодразделение, ?(ЗначениеЗаполнено(ТорговаяТочка), ТорговаяТочка, Неопределено));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТабТТ"				, ТабТТ);
	Запрос.УстановитьПараметр("ТабРасходники"		, ТабРасходники);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница"	, СтруктурноеПодразделение);
	Запрос.УстановитьПараметр("Дата"				, КонецДня(Дата));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таб.Номенклатура,
	|	Таб.ТТ,
	|	Таб.Поступило
	|ПОМЕСТИТЬ ВТ_ТТ
	|ИЗ
	|	&ТабТТ КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.Номенклатура,
	|	Таб.ТТ
	|ПОМЕСТИТЬ ВТ_Расходники
	|ИЗ
	|	&ТабРасходники КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЗ_Запрос.Поступило КАК Количество,
	|	ВЗ_Запрос.Номенклатура,
	|	ВЗ_Запрос.ТТ,
	|	ВЗ_Доступность.Склад КАК ОтгрузкаСоСклада
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_ТТ.Поступило КАК Поступило,
	|		НоменклатураСпр.Ссылка КАК Номенклатура,
	|		СтруктурныеЕдиницы.Ссылка КАК ТТ
	|	ИЗ
	|		ВТ_ТТ КАК ВТ_ТТ
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Расходники КАК ВТ_Расходники
	|			ПО ВТ_ТТ.ТТ = ВТ_Расходники.ТТ
	|				И ВТ_ТТ.Номенклатура = ВТ_Расходники.Номенклатура
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	|			ПО ВТ_ТТ.Номенклатура = НоменклатураСпр.Ссылка
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|			ПО ВТ_ТТ.ТТ = СтруктурныеЕдиницы.Ссылка
	|	ГДЕ
	|		ВТ_Расходники.Номенклатура ЕСТЬ NULL 
	|		И ВТ_ТТ.Поступило <> 0) КАК ВЗ_Запрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(ДоступностьТоваровНаСкладах.Склад) КАК Склад,
	|			НоменклатураСпр.Ссылка КАК Номенклатура
	|		ИЗ
	|			РегистрСведений.ДоступностьТоваровНаСкладах КАК ДоступностьТоваровНаСкладах
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	|				ПО ДоступностьТоваровНаСкладах.Номенклатура = НоменклатураСпр.Ссылка
	|		ГДЕ
	|			ДоступностьТоваровНаСкладах.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|		
	|		СГРУППИРОВАТЬ ПО
	|			НоменклатураСпр.Ссылка) КАК ВЗ_Доступность
	|		ПО ВЗ_Запрос.Номенклатура = ВЗ_Доступность.Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			НоменклатураСпр.Ссылка КАК Ссылка,
	|			ПорядокОбеспеченияТорговыхТочекСрезПоследних.ТорговаяТочка КАК ТорговаяТочка
	|		ИЗ
	|			РегистрСведений.ПорядокОбеспеченияТорговыхТочек.СрезПоследних(&Дата, Расчетчик = &СтруктурнаяЕдиница) КАК ПорядокОбеспеченияТорговыхТочекСрезПоследних
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	|				ПО ПорядокОбеспеченияТорговыхТочекСрезПоследних.ГруппаУРЗ = НоменклатураСпр.ГруппаНоменклатурыУРЗ
	|		ГДЕ
	|			НоменклатураСпр.ЭтоГруппа = ЛОЖЬ) КАК ВЗ_ПорядокОбеспечения
	|		ПО ВЗ_Запрос.Номенклатура = ВЗ_ПорядокОбеспечения.Ссылка
	|			И ВЗ_Запрос.ТТ = ВЗ_ПорядокОбеспечения.ТорговаяТочка
	|ГДЕ
	|	ВЗ_Запрос.Номенклатура.БезОстатков = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВЗ_Запрос.ТТ.Наименование,
	|	ВЗ_Запрос.Номенклатура.Наименование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_Расходники
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ТТ";
				   
	Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры	

&НаКлиенте
Процедура ВыполнитьЗаполнение(Команда)
	
	Отказ = Ложь;
	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Следует заполнить дату", , "Дата",,Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СтруктурноеПодразделение) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Следует заполнить структурное подразделение", , "СтруктурноеПодразделение",,Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;	
	
	ПерезаполнитьТаблицуТоваров();
	
КонецПроцедуры

Функция ПолучитьРасходник(Склад, ТТ) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	РасходныйОрдерСклад.Ссылка
	               |ИЗ
	               |	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
	               |ГДЕ
	               |	(НАЧАЛОПЕРИОДА(РасходныйОрдерСклад.Дата, ДЕНЬ) = &Дата
	               |			ИЛИ РасходныйОрдерСклад.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
	               |				И НАЧАЛОПЕРИОДА(РасходныйОрдерСклад.ДатаРаспределения, ДЕНЬ) = &Дата)
	               |	И РасходныйОрдерСклад.Склад.Владелец = &Владелец
	               |	И РасходныйОрдерСклад.Получатель = &ТТ
	               |	И РасходныйОрдерСклад.ПометкаУдаления = ЛОЖЬ
	               |	И РасходныйОрдерСклад.Получатель ССЫЛКА Справочник.СтруктурныеЕдиницы
	               |	И РасходныйОрдерСклад.Получатель <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	               |	И РасходныйОрдерСклад.Склад = &Склад";
				   
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Владелец", СтруктурноеПодразделение);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ТТ", ТТ);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	РасходныйОрдерСклад.Ссылка
		               |ИЗ
		               |	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
		               |ГДЕ
		               |	(НАЧАЛОПЕРИОДА(РасходныйОрдерСклад.Дата, ДЕНЬ) = &Дата
		               |			ИЛИ РасходныйОрдерСклад.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |				И НАЧАЛОПЕРИОДА(РасходныйОрдерСклад.ДатаРаспределения, ДЕНЬ) = &Дата)
		               |	И РасходныйОрдерСклад.Склад.Владелец = &Владелец
		               |	И РасходныйОрдерСклад.Получатель = &ТТ
		               |	И РасходныйОрдерСклад.ПометкаУдаления = ЛОЖЬ
		               |	И РасходныйОрдерСклад.Получатель ССЫЛКА Справочник.СтруктурныеЕдиницы
		               |	И РасходныйОрдерСклад.Получатель <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
		               |	И РасходныйОрдерСклад.Склад В
		               |			(ВЫБРАТЬ
		               |				МаршрутыСклады.ЗонаОтгрузки
		               |			ИЗ
		               |				Справочник.Маршруты.ТорговыеТочки КАК МаршрутыТорговыеТочки ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Маршруты.Склады КАК МаршрутыСклады
		               |					ПО
		               |						МаршрутыТорговыеТочки.Ссылка = МаршрутыСклады.Ссылка
		               |			ГДЕ
		               |				МаршрутыСклады.Склад = &Склад
		               |				И МаршрутыТорговыеТочки.СтруктурнаяЕдиница = &ТТ)";
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Ссылка;
		Иначе	
			Возврат Документы.РасходныйОрдерСклад.ПустаяСсылка();
		КонецЕсли;	
	КонецЕсли;	
	
КонецФункции	

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекДанные = Элементы.Товары.ТекущиеДанные;
	Расходник = ПолучитьРасходник(ТекДанные.ОтгрузкаСоСклада, ТекДанные.ТТ);
	Если ЗначениеЗаполнено(Расходник) Тогда
		ОткрытьЗначение(Расходник);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не был найден расходный ордер для данного склада и торговой точки");
	КонецЕсли;	
	
КонецПроцедуры

