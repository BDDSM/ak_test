
&НаКлиенте
Процедура ОтборСкладПриИзменении(Элемент)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "Склад", ОтборСклад,,, ЗначениеЗаполнено(ОтборСклад));
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьРаспределениеУРЗ(Команда)
	//+++АК KIRN 2018.07.11 ИП-00019159 
	ОткрытьФорму("Обработка.ЗагрузитьРаспределение1.Форма", , , , );
	//ОткрытьФорму("Обработка.ЗагрузитьРаспределение.Форма", , , , );
	//---АК KIRN 
КонецПроцедуры

&НаКлиенте
Процедура ОтборВидОперацииПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ВидОперации", ОтборВидОперации,,, ЗначениеЗаполнено(ОтборВидОперации));
	
КонецПроцедуры

&НаКлиенте
Процедура ПолученоТТНетВРасходниках(Команда)
	
	ОткрытьФорму("Документ.РасходныйОрдерСклад.Форма.ФормаПолученныхТТ");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтатусВСборкеСервер()
	
	Для Каждого ВыделеннаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
		Если ВыделеннаяСтрока.Статус = Перечисления.СтатусыРасходныхОрдеров.ВСборке Тогда
			Продолжить;
		КонецЕсли;
		ДокОбъект = ВыделеннаяСтрока.ПолучитьОбъект();
		ДокОбъект.Статус = Перечисления.СтатусыРасходныхОрдеров.ВСборке;
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;	
	
КонецПроцедуры
	
&НаКлиенте
Процедура УстановитьСтатусВСборке(Команда)
	
	Ответ = Вопрос("Вы действительно хотите в выделенные строки установить статус ""В сборке""?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		УстановитьСтатусВСборкеСервер();
		Элементы.Список.Обновить();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтатусНеОбработанСервер()
	
	Для Каждого ВыделеннаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
		Если ВыделеннаяСтрока.Статус = Перечисления.СтатусыРасходныхОрдеров.НеОбработан Тогда
			Продолжить;
		КонецЕсли;
		ДокОбъект = ВыделеннаяСтрока.ПолучитьОбъект();
		ДокОбъект.Статус = Перечисления.СтатусыРасходныхОрдеров.НеОбработан;
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусНеОбработан(Команда)
	
	Ответ = Вопрос("Вы действительно хотите в выделенные строки установить статус ""Не обработан""?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		УстановитьСтатусНеОбработанСервер();
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Распределение(Команда)
	
	ОткрытьФорму("Отчет.РаспределениеПоРасходнымОрдерам.Форма.ФормаОтчета");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтатусОтмененСервер()
	
	Для Каждого ВыделеннаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
		Если ВыделеннаяСтрока.Статус = Перечисления.СтатусыРасходныхОрдеров.Отменен Тогда
			Продолжить;
		КонецЕсли;
		ДокОбъект = ВыделеннаяСтрока.ПолучитьОбъект();
		ДокОбъект.Статус = Перечисления.СтатусыРасходныхОрдеров.Отменен;
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусОтменен(Команда)
	
	Ответ = Вопрос("Вы действительно хотите в выделенные строки установить статус ""Отменен""?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		УстановитьСтатусОтмененСервер();
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиШтрихКод(Команда)
	ШтрихКод = ОткрытьФормуМодально("ОбщаяФорма.ФормаВводаШтрихкода");
	Если ЗначениеЗаполнено(ШтрихКод) Тогда
		СсылкаНаДок = ВнешниеДанные.ПолучитьДокументПоШтрихКоду(ШтрихКод);
		Если СсылкаНаДок<>неопределено Тогда
			ОткрытьЗначение(СсылкаНаДок);	
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
	
	Если Источник = "KeyboardHook" Тогда
		Если Данные = "00122" Тогда
			ШтрихКодОбработанФормой = Истина;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиСерверВызовСервера.ПолучитьОперацию("Открытие списка расходных накладных");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//АК_БЕЛН_20.04.2016++
	ОбъектПрав = ПараметрыСеанса.ТекущийПользователь;//глЗначениеПеременной("ПрофильПолномочийПользователя");
	ЗначениеПрава = Ложь;
	Если ЗначениеЗаполнено(ОбъектПрав) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ОбъектПрав"			, ОбъектПрав);
		Запрос.УстановитьПараметр("ПравоПользователя"	, ПланыВидовХарактеристик.ПраваПользователей.НайтиПоНаименованию("Все склады"));
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегистрЗначениеПрав.Значение КАК Значение
		|ИЗ
		|	РегистрСведений.ЗначенияДополнительныхПравПользователя КАК РегистрЗначениеПрав
		|ГДЕ
		|	РегистрЗначениеПрав.Право = &ПравоПользователя
		|	И РегистрЗначениеПрав.Пользователь = &ОбъектПрав";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			ЗначениеПрава = Выборка.Значение;
		Иначе
			ЗначениеПрава = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	//минеев внес изменения, нельзя ставить такие отборы, ударяет по производительности
	//МассивНастроек=Новый Массив;
	//МассивНастроек.Добавить("ОсновноеСтруктурноеПодразделение");
	//Струк=УправлениеПользователями.ПолучитьСтруктуруЗначенийПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), МассивНастроек);
	//Если Струк.Свойство("ОсновноеСтруктурноеПодразделение") и ЗначениеЗаполнено(Струк.ОсновноеСтруктурноеПодразделение) и ЗначениеПрава=Ложь 
	//	и (РольДоступна("ОператорСклада") или РольДоступна("Ветеринар")) и Не РольДоступна("ПолныеПрава") 
	//	Тогда
	//	Выборка=Справочники.Склады.Выбрать(,Струк.ОсновноеСтруктурноеПодразделение,,);
	//	СписокСкл=Новый СписокЗначений;
	//	Пока Выборка.Следующий() Цикл
	//		 СписокСкл.Добавить(Выборка.Ссылка);
	//	 КонецЦикла;
	//	ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Склад");   
	//	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
	//	ЭлементОтбора.Использование  = Истина;
	//	ЭлементОтбора.ПравоеЗначение = СписокСкл;
	//	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный; 
	//КонецЕсли; 
	
	МассивНастроек = Новый Массив;
	МассивНастроек.Добавить("ОсновноеСтруктурноеПодразделение");
	Струк = УправлениеПользователями.ПолучитьСтруктуруЗначенийПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), МассивНастроек);
	Если Струк.Свойство("ОсновноеСтруктурноеПодразделение") и ЗначениеЗаполнено(Струк.ОсновноеСтруктурноеПодразделение) и ЗначениеПрава=Ложь 
		и (РольДоступна("ОператорСклада") или РольДоступна("Кладовщик") или РольДоступна("Ветеринар")) и Не РольДоступна("ПолныеПрава") 
		Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ВсеСклады", Ложь);
		Список.Параметры.УстановитьЗначениеПараметра("ОсновноеПодразделение", Струк.ОсновноеСтруктурноеПодразделение);
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("ВсеСклады", Истина);
		Список.Параметры.УстановитьЗначениеПараметра("ОсновноеПодразделение", Неопределено);
	КонецЕсли;	
		
	Если РольДоступна("Ветеринар") и не РольДоступна("ОператорСклада") и Не РольДоступна("ПолныеПрава")  и Не РольДоступна("Кладовщик")  Тогда
		Элементы.ЕстьРасходники.Видимость=Ложь;	
		Элементы.Сборщик.Видимость=Ложь;	
		Элементы.ДатаРаспределения.Видимость=Ложь;	
		Элементы.Статус.Видимость=Ложь;	
		//Элементы.Автор.Видимость=Ложь;	
		//Элементы.Редактор.Видимость=Ложь;	
		Элементы.СборкаТерминаломЗакончена.Видимость=Ложь;
		Элементы.Комментарий.Видимость=Ложь;
		Элементы.УстановитьСтатус.Видимость=Ложь;
		Элементы.ФормаГруппаОтчеты.Видимость=Ложь;
	КонецЕсли; 	
	//АК_БЕЛН_20.04.2016--
	
	//++ АК luza ИП-00018473 20.04.2018
	Если Параметры.Свойство("ТолькоОшибки") Тогда
		ОтборТолькоПроблемныеПоEDI = Истина;
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ЕстьЗаказEDI", Ложь,,, ОтборТолькоПроблемныеПоEDI);
	КонецЕсли;		
	//-- АК luza ИП-00018473 20.04.2018
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалениеТовараИзРаспределения(Команда)
	
	ОткрытьФорму("Документ.РасходныйОрдерСклад.Форма.ФормаУдаленияТовара");
	
КонецПроцедуры


//++ АК luza ИП-00018473 20.04.2018 
&НаКлиенте
Процедура УстановитьГотовКОбменуПоEDI(Команда)
	Ответ = Вопрос("Вы действительно хотите в выделенные строки, в реализации установить статус ""готов к обомену по EDI""?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	МассивРеализаций = Новый Массив;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Для Каждого ВыделеннаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
			Реализация = Элементы.Список.ДанныеСтроки(ВыделеннаяСтрока).Реализация;
			Если ЗначениеЗаполнено(Реализация) = Истина Тогда
				МассивРеализаций.Добавить(Реализация);
			КонецЕсли;
		КонецЦикла;	
		
		УстановитьСтатусГотовКОбменуПоEDIСервер(МассивРеализаций);
		Элементы.Список.Обновить();
	КонецЕсли;	
	
КонецПроцедуры
//-- АК luza ИП-00018473 20.04.2018

//++ АК luza ИП-00018473 20.04.2018
&НаСервере
Процедура УстановитьСтатусГотовКОбменуПоEDIСервер(МассивРеализаций)
	
	Для каждого ЗначМассива Из МассивРеализаций Цикл 
		ДокОбъект = ЗначМассива.ПолучитьОбъект();
		ДокОбъект.EDI_ГотовКОбмену = Истина;
		Попытка 
			ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
		КонецПопытки;	
	КонецЦикла;	
	
КонецПроцедуры
//-- АК luza ИП-00018473 20.04.2018

//++ АК luza ИП-00018473 20.04.2018
&НаКлиенте
Процедура ОтборТолькоПроблемныеПоEDIПриИзменении(Элемент)
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор, "ЕстьЗаказEDI", Ложь,,, ОтборТолькоПроблемныеПоEDI);	
КонецПроцедуры
//-- АК luza ИП-00018473 20.04.2018

