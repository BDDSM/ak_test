
Процедура ДокументСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	МассивДокументов = Новый Массив;
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		МассивДокументов.Добавить(ОформлениеСтроки.ДанныеСтроки.Ссылка);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РасходныйОрдерСклад.Ссылка,
	               |	РасходныйОрдерСклад.Дата,
	               |	РасходныйОрдерСклад.ВидОперации,
	               |	РасходныйОрдерСклад.ПризкакПодтвержденияВФинУчете
	               |ИЗ
	               |	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
	               |ГДЕ
	               |	РасходныйОрдерСклад.Ссылка В(&МассивДокументов)
	               |	И (РасходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ВозвратПоставщику)
	               |			ИЛИ РасходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.Реализация))";
				   
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	ТабРасходные = Запрос.Выполнить().Выгрузить();
	Если ТабРасходные.Количество() > 0 Тогда
		
		МинДата = '39990101';
		МаксДата = '00010101';
		Для Каждого СтрокаТаб Из ТабРасходные Цикл
			МинДата = Мин(СтрокаТаб.Дата, МинДата);
			МаксДата = Мин(СтрокаТаб.Дата, МаксДата);
		КонецЦикла;	
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВозвратТоваровПоставщикуРасходныеОрдера.РасходныйОрдер
		               |ИЗ
		               |	Документ.ВозвратТоваровПоставщику.РасходныеОрдера КАК ВозвратТоваровПоставщикуРасходныеОрдера
		               |ГДЕ
		               |	ВозвратТоваровПоставщикуРасходныеОрдера.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		               |	И ВозвратТоваровПоставщикуРасходныеОрдера.Ссылка.ПометкаУдаления = ЛОЖЬ";
					   
		Запрос.УстановитьПараметр("ДатаНач", ДобавитьМесяц(МинДата, -3));
		Запрос.УстановитьПараметр("ДатаКон", ДобавитьМесяц(МинДата, 3));
		ТабВозвраты = Запрос.Выполнить().Выгрузить();
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	РеализацияТоваровУслугРасходныеОрдера.РасходныйОрдер
		               |ИЗ
		               |	Документ.РеализацияТоваровУслуг.РасходныеОрдера КАК РеализацияТоваровУслугРасходныеОрдера
		               |ГДЕ
		               |	РеализацияТоваровУслугРасходныеОрдера.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
		               |	И РеализацияТоваровУслугРасходныеОрдера.Ссылка.ПометкаУдаления = ЛОЖЬ";
					   
		Запрос.УстановитьПараметр("ДатаНач", ДобавитьМесяц(МинДата, -3));
		Запрос.УстановитьПараметр("ДатаКон", ДобавитьМесяц(МинДата, 3));
		ТабРеализации = Запрос.Выполнить().Выгрузить();
				
		ВозвратПеречисление = Перечисления.ВидыОперацийРасходСкладскойУчет.ВозвратПоставщику;
		Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
			СтрокаРасходник = ТабРасходные.Найти(ОформлениеСтроки.ДанныеСтроки.Ссылка, "Ссылка");
			Если СтрокаРасходник <> Неопределено Тогда
				Если СтрокаРасходник.ВидОперации = ВозвратПеречисление Тогда
					СтрокаВозврат = ТабВозвраты.Найти(СтрокаРасходник.Ссылка, "РасходныйОрдер");
				Иначе 
					СтрокаВозврат = ТабРеализации.Найти(СтрокаРасходник.Ссылка, "РасходныйОрдер");
				КонецЕсли;	
					
				Если СтрокаВозврат = Неопределено Тогда
					ОформлениеСтроки.ЦветФона = Новый Цвет(255, 200, 200);
				КонецЕсли;	
			КонецЕсли;
			
			
		КонецЦикла;
		
	КонецЕсли;
	
	//++ АК luza 18.12.2017 ИП-00017459 
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	РасходныйОрдерСкладПрикрепленныеФайлы.Ссылка
	|ИЗ
	|	Документ.РасходныйОрдерСклад.ПрикрепленныеФайлы КАК РасходныйОрдерСкладПрикрепленныеФайлы
	|ГДЕ
	|	РасходныйОрдерСкладПрикрепленныеФайлы.Ссылка В(&МассивДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходныйОрдерСкладПрикрепленныеФайлы.Ссылка";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	ТЗ_ПрикрепленныхФайлов = Запрос.Выполнить().Выгрузить();
	Скрепка = БиблиотекаКартинок.Скрепка;
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл		
		СтрокаПрикрепленныйФайл = ТЗ_ПрикрепленныхФайлов.Найти(ОформлениеСтроки.ДанныеСтроки.Ссылка, "Ссылка");
		Если СтрокаПрикрепленныйФайл <> Неопределено Тогда
			ОформлениеСтроки.Ячейки.ПрикрепленныйФайл.ОтображатьКартинку = истина;
			ОформлениеСтроки.Ячейки.ПрикрепленныйФайл.Картинка = Скрепка;
		Иначе
			ОформлениеСтроки.Ячейки.ПрикрепленныйФайл.ОтображатьКартинку = Ложь;			
		КонецЕсли;	
	КонецЦикла;
	//-- АК luza 18.12.2017 ИП-00017459  
	
	//Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
	//	
	//	СтрокаРасходник = ТабРасходные.Найти(ОформлениеСтроки.ДанныеСтроки.Ссылка, "Ссылка");
	//	
	//	ТекДанные = ОформлениеСтроки.ДанныеСтроки;
	//	Если (ТекДанные.ВидОперации = Перечисления.ВидыОперацийРасходСкладскойУчет.ОтгрузкаТехнологу
	//				ИЛИ ТекДанные.ВидОперации = Перечисления.ВидыОперацийРасходСкладскойУчет.Утилизация
	//				ИЛИ ТекДанные.ВидОперации = Перечисления.ВидыОперацийРасходСкладскойУчет.УтилизацияБой
	//				ИЛИ ТекДанные.ВидОперации = Перечисления.ВидыОперацийРасходСкладскойУчет.СписаниеНаНуждыСклада)
	//			И НЕ СтрокаРасходник.ПризкакПодтвержденияВФинУчете Тогда
	//		ОформлениеСтроки.ЦветФона = Новый Цвет(255, 200, 200);
	//	КонецЕсли;
	//	
	//КонецЦикла;
	
	//+++АК SaMi 2018.04.19 ИП-00018178. Отмечаем цветом состояние обмена по EDI 
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	РасходныйОрдерСклад.Ссылка
	                      |ПОМЕСТИТЬ ВТ_ОрдераEDI
	                      |ИЗ
	                      |	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
	                      |ГДЕ
	                      |	РасходныйОрдерСклад.Ссылка В(&МассивДокументов)
	                      |	И РасходныйОрдерСклад.Получатель ССЫЛКА Справочник.СтруктурныеЕдиницы
	                      |	И РасходныйОрдерСклад.Получатель.ТипРозничнойТочки В (ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Перекресток), ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Пятерочка))
	                      |	И РасходныйОрдерСклад.Проведен
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ОрдераEDI.Ссылка КАК РасходныйОрдер,
	                      |	РеализацияТоваровУслугРасходныеОрдера.Ссылка КАК Реализация
	                      |ПОМЕСТИТЬ ВТ_ОрдераРеализации
	                      |ИЗ
	                      |	ВТ_ОрдераEDI КАК ВТ_ОрдераEDI
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.РасходныеОрдера КАК РеализацияТоваровУслугРасходныеОрдера
	                      |		ПО ВТ_ОрдераEDI.Ссылка = РеализацияТоваровУслугРасходныеОрдера.РасходныйОрдер
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ОрдераРеализации.РасходныйОрдер,
	                      |	МАКСИМУМ(ВЫБОР
	                      |			КОГДА КонтурEDI_Сообщения.Ссылка ЕСТЬ NULL
	                      |				ТОГДА ЛОЖЬ
	                      |			ИНАЧЕ ИСТИНА
	                      |		КОНЕЦ) КАК ЕстьЗаказEDI
	                      |ИЗ
	                      |	ВТ_ОрдераРеализации КАК ВТ_ОрдераРеализации
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтурEDI_Сообщения КАК КонтурEDI_Сообщения
	                      |		ПО ВТ_ОрдераРеализации.Реализация = КонтурEDI_Сообщения.Документ
	                      |			И (КонтурEDI_Сообщения.ТипСообщения = ""ORDERS"")
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ_ОрдераРеализации.РасходныйОрдер");
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
				
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		НайденнаяСтрока = ТаблицаРезультат.Найти(ОформлениеСтроки.ДанныеСтроки.Ссылка, "РасходныйОрдер");
		
		Если НайденнаяСтрока = Неопределено Тогда
			Продолжить;
		КонецЕсли; 
		
		Если НайденнаяСтрока.ЕстьЗаказEDI Тогда
			ОформлениеСтроки.Ячейки.EDI.ЦветФона = WebЦвета.Зеленый;
		Иначе
			ОформлениеСтроки.Ячейки.EDI.ЦветФона = WebЦвета.Красный;
		КонецЕсли; 
		
	КонецЦикла;   
	//---АК SaMi  2018.04.19 
	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Структура подчиненности" меню "Перейти".
Процедура СтруктураПодчиненностиДокумента(Кнопка)
	
	Если ЭлементыФормы.ДокументСписок.ТекущиеДанные = Неопределено тогда
		Возврат
	КонецЕсли;
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ЭлементыФормы.ДокументСписок.ТекущиеДанные.Ссылка);
	
КонецПроцедуры


//+++АК SHEP 20170727 ИП-00016113
Процедура ФильтрыПриИзменении(Элемент = Неопределено, СтандартнаяОбработка = Истина)
	
	Если ЗначениеЗаполнено(ВыбКонтрагент) ИЛИ ЗначениеЗаполнено(ОтвБухгалтер) Тогда
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Контрагенты.Ссылка
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	НЕ Контрагенты.ПометкаУдаления
			|	И НЕ Контрагенты.ЭтоГруппа
			|	И ВЫБОР
			|			КОГДА &ВыбКонтрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
			|				ТОГДА ИСТИНА
			|			ИНАЧЕ Контрагенты.Ссылка = &ВыбКонтрагент
			|		КОНЕЦ
			|	И ВЫБОР
			|			КОГДА &ОсновнойБухгалтерПокупателя = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
			|				ТОГДА ИСТИНА
			|			ИНАЧЕ Контрагенты.ОсновнойБухгалтерПокупателя = &ОсновнойБухгалтерПокупателя
			|		КОНЕЦ");
		Запрос.УстановитьПараметр("ОсновнойБухгалтерПокупателя", ОтвБухгалтер);
		Запрос.УстановитьПараметр("ВыбКонтрагент", ВыбКонтрагент);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Отбор.ВидОперации.Использование = Истина;
		Отбор.ВидОперации.Значение = ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходСкладскойУчет.ВозвратПоставщику");
		
		Отбор.Получатель.Использование = Истина;
		Отбор.Получатель.ВидСравнения = ВидСравнения.ВСписке;
		СписокОтбораКонтрагентов = Новый СписокЗначений;
		СписокОтбораКонтрагентов.ЗагрузитьЗначения(РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Ссылка"));
		Отбор.Получатель.Значение = СписокОтбораКонтрагентов;
		
	Иначе
		Отбор.Получатель.Использование = Ложь;
		Отбор.ВидОперации.Использование = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьПривязкуВозвратногоДокументаНажатие(Элемент)
	
	ДатаОтбор = Отбор.Дата;
	ДатаЖурналаНач = Дата(1,1,1);
	ДатаЖурналаКон = Дата(1,1,1);
	
	ВидСравненияОтбора = ДатаОтбор.ВидСравнения;
	
	Если НЕ ДатаОтбор.Использование Тогда
		// отбор не используется – даты пустые
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.Больше ИЛИ ВидСравненияОтбора = ВидСравнения.БольшеИлиРавно Тогда
		ДатаЖурналаНач = ДатаОтбор.Значение;
	ИначеЕсли ВидСравненияОтбора = ВидСравнения.Меньше ИЛИ ВидСравненияОтбора = ВидСравнения.МеньшеИлиРавно Тогда
		ДатаЖурналаКон = ДатаОтбор.Значение;
	Иначе
		ДатаЖурналаНач = ДатаОтбор.ЗначениеС;
		ДатаЖурналаКон = ДатаОтбор.ЗначениеПо;
	КонецЕсли;
	
	Если ДатаЖурналаНач = Дата(1,1,1) Тогда
		Предупреждение("Не выбран начальный период журнала!");
		Возврат;
	ИначеЕсли Вопрос("Выполнить привязку возвратных документов с " + Формат(ДатаЖурналаНач, "ДФ=dd.MM.yyyy") + " по " + Формат(ДатаЖурналаКон, "ДФ=dd.MM.yyyy") + "?",
			РежимДиалогаВопрос.ДаНетОтмена) <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Построитель = Новый ПостроительЗапроса;
	Построитель.ИсточникДанных = Новый ОписаниеИсточникаДанных(ДокументСписок);
	Построитель.ЗаполнитьНастройки();
	
	//СтруктураОтбораПостроителя = Новый Структура("Проведен,ВидОперации", Истина, ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходСкладскойУчет.ВозвратПоставщику"));
	//ОтборПостроителя = Построитель.Отбор;
	//ДоступныеПоляОтбора = ОтборПостроителя.ПолучитьДоступныеПоля();
	//
	//Для Каждого КлючИЗначение Из СтруктураОтбораПостроителя Цикл
	//	
	//	КлючОтбора = КлючИЗначение.Ключ;
	//	
	//	ПолеНастройки = ДоступныеПоляОтбора.Найти(КлючОтбора);
	//	Если ПолеНастройки = Неопределено Тогда
	//		Продолжить;
	//	ИначеЕсли НЕ ПолеНастройки.Отбор Тогда
	//		ПолеНастройки.Отбор = Истина;
	//		МассивТиповОтбора = Новый Массив;
	//		МассивТиповОтбора.Добавить(ТипЗнч(КлючИЗначение.Значение));
	//		ПолеНастройки.ТипЗначения = Новый ОписаниеТипов(МассивТиповОтбора);
	//	КонецЕсли;
	//	
	//	Если ОтборПостроителя.Найти(КлючОтбора) = Неопределено Тогда
	//		ОтборПостроителя.Добавить(КлючОтбора);
	//	КонецЕсли;
	//	ОтборПостроителя[КлючОтбора].Использование = Истина;
	//	ОтборПостроителя[КлючОтбора].ВидСравнения = ВидСравнения.Равно;
	//	ОтборПостроителя[КлючОтбора].Значение = КлючИЗначение.Значение;
	//	
	//КонецЦикла;
	//
	//Построитель.ЗаполнитьНастройки();
	
	РезультатПостроителя = Построитель.Результат;
	Если РезультатПостроителя.Пустой() Тогда
		Предупреждение("Список документов пуст!");
		Возврат;
	КонецЕсли;
	
	МассивСсылок = РезультатПостроителя.Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	РасходныйОрдерСклад.Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(РасходныйОрдерСклад.Ссылка) КАК Представление,
		|	РасходныйОрдерСклад.Дата,
		|	РасходныйОрдерСклад.Склад.Владелец КАК СтруктурнаяЕдиница,
		//+++АК KIRN 2018.05.11 ИП-00018598 
		|	РасходныйОрдерСклад.Организация КАК Организация
		//|	РасходныйОрдерСклад.Получатель.ОсновнойДоговорКонтрагента.Организация КАК Организация
		//---АК KIRN 
		|ИЗ
		|	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.РасходныеОрдера КАК ВозвратТоваровПоставщикуРасходныеОрдера
		|		ПО (ВозвратТоваровПоставщикуРасходныеОрдера.РасходныйОрдер = РасходныйОрдерСклад.Ссылка)
		|			И (ВозвратТоваровПоставщикуРасходныеОрдера.Ссылка.Проведен)
		|ГДЕ
		|	РасходныйОрдерСклад.Ссылка В(&МассивСсылок)
		|	И РасходныйОрдерСклад.Проведен
		|	И РасходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ВозвратПоставщику)
		|	И ВозвратТоваровПоставщикуРасходныеОрдера.Ссылка ЕСТЬ NULL");
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатПостроителя.Пустой() Тогда
		Предупреждение("Отсутствуют документы, по которым нужно создать возвратные документы!");
		Возврат;
	КонецЕсли;

	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		
		Попытка
			ДокВозвратПоставщикуОбъект = Документы.ВозвратТоваровПоставщику.СоздатьДокумент();
			ДокВозвратПоставщикуОбъект.Дата = ВыборкаЗапроса.Дата; //ТекущаяДата();
			ДокВозвратПоставщикуОбъект.Заполнить(ВыборкаЗапроса.Ссылка);
			ЗаполнитьЗначенияСвойств(ДокВозвратПоставщикуОбъект, ВыборкаЗапроса, "СтруктурнаяЕдиница,Организация"); 
			//+++АК KIRN 2018.05.11  ИП-00018598
			ДокВозвратПоставщикуОбъект.Комментарий = "#Привязка возвратного документа";
			//---АК KIRN 
			ДокВозвратПоставщикуОбъект.Записать();
			
			Сообщить("Для документа " + ВыборкаЗапроса.Представление + "
				|" + Символы.Таб + " создан " + ДокВозвратПоставщикуОбъект.Ссылка);
			
			ДокВозвратПоставщикуОбъект.Записать(РежимЗаписиДокумента.Проведение);
			
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры
//---АК SHEP 20170727