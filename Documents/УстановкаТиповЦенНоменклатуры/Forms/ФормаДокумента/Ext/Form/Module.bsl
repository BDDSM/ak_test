
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПроставитьПредыдущиеЦеныДляНоменклатуры();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 08.06.2018 ИП-00018466
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Установка типов цен номенклатуры");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Дата) Тогда
		Объект.Дата = КонецДня(ТекущаяДата()) + 6;
	КонецЕсли;	
	
КонецПроцедуры

//+++АК sils 08.06.2018 ИП-00018466
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
КонецПроцедуры

//+++АК LATV 2018.10.16 ИП-00020163
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Если Не ПараметрыЗаписи.Свойство("ПроведениеПриНаличииАссортиментаВендингов")
		   И (НачалоДня(Объект.Дата) - НачалоДня(ТекущаяДата())) < 5 * 24*60*60
		   И ЕстьАссортиментВендингов() Тогда
			
			Отказ = Истина;
			ПровестиПриНаличииАссортиментаВендинговАсинхронно();
			Возврат;
			
		КонецЕсли;
	КонецЕсли;
	
	МассивТоварыПоАкции = ПолучитьТоварыПоАкциям();
	Если МассивТоварыПоАкции.Количество() > 0 Тогда
		СтрокаПредупреждение = "По следующим товарам на дату документа есть действующие акции:";
		СтрокаПредупреждение = СтрокаПредупреждение + Символы.ПС
			+ СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(МассивТоварыПоАкции, Символы.ПС);
		ПоказатьПредупреждение(, СтрокаПредупреждение, 30);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ПроставитьПредыдущиеЦеныДляНоменклатуры();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_Товары

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ТоварыПриНачалеРедактированияСервер(Элементы.Товары.ТекущаяСтрока);
	КонецЕсли;	
	
КонецПроцедуры

//+++АК mika 2018.06.27 ИП-00019047
&НаКлиенте
Процедура ТоварыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		//+++АК mika 2018.06.26 ИП-00018789
		ИмяПоля = СтрЗаменить(Элемент.ТекущийЭлемент.Имя, "Товары", ""); 
		Если ИмяПоля = "Цена" Или ИмяПоля = "СебестоимостьСНДС" Тогда
			ПроверитьПроцентНаценкиНаТовар(ИмяПоля, ТекущиеДанные[ИмяПоля], ТекущиеДанные);
		КонецЕсли;
		//---АК mika 
		
		//+++АК mika 2018.06.27 ИП-00019047
		УведомелениеПользовалю = ПроверитьНаличиеАкцийПоТовару(ТекущиеДанные.Номенклатура, Объект.Дата, ТекущиеДанные.ТорговаяТочка);  
		Если ЗначениеЗаполнено(УведомелениеПользовалю) Тогда
			ПоказатьПредупреждение(,УведомелениеПользовалю);
		КонецЕсли;
		//---АК mika 

	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыТорговаяТочкаПриИзменении(Элемент)
	
	ПроставитьПредыдущиеЦеныДляНоменклатуры(Элементы.Товары.ТекущаяСтрока);
	
	//+++АК KIRN 2018.02.20 ИП-00017976	
	Если ПроверитьТорговуюМаркуНоменклатуры(Элементы.Товары.ТекущаяСтрока) Тогда
		ПоказатьОповещениеПользователя("Неверная номенклатура",,"Выбрана номенклатура с торговой маркой, 
		|которая не соответствует торговой точке");
	КонецЕсли;
	//---АК KIRN 
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	
	ПроставитьПредыдущиеЦеныДляНоменклатуры(Элементы.Товары.ТекущаяСтрока);
	
	//+++АК KIRN 2018.02.20 ИП-00017976	
	Если НЕ ПроверитьТорговуюМаркуНоменклатуры(Элементы.Товары.ТекущаяСтрока) Тогда
		ПоказатьОповещениеПользователя("Неверная номенклатура",,"Выбрана номенклатура с торговой маркой, 
		|которая не соответствует торговой точке");
	КонецЕсли;
	//---АК KIRN 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийКомандФормы

//+++АК KIRN 2018.02.20 ИП-00017976
&НаКлиенте
Процедура ЗаполнитьПоТипуЦены(Команда)
	ЗаполнитьПоТипуЦеныНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//+++АК KIRN 2018.02.20 ИП-00017976
//проверяет номенклатуру в заданной строке на соответствие торговой марке в типеЦены
&НаСервере
Функция ПроверитьТорговуюМаркуНоменклатуры(ТекСтрока)
	
	ТекДанные = Объект.Товары.НайтиПоИдентификатору(ТекСтрока);
	Если НЕ ЗначениеЗаполнено(ТекДанные.ТорговаяТочка) ТОгда //не проверяем
		ТекДанные.ТипЦен = Справочники.ТипыЦен.ПолучитьТипЦены(ТекДанные.Номенклатура.ТорговаяМарка);
		Возврат Истина;
	КонецЕСли;
		
	Если РегистрыСведений.СоответствиеТиповРозничныхТочекИТорговыхМарок.ПроверитьСоответствиеРозничнойТочкиИТорговойМарки(ТекДанные.ТорговаяТочка, ТекДанные.Номенклатура.ТорговаяМарка) ТОгда
		ТекДанные.ТипЦен = Справочники.ТипыЦен.ПолучитьТипЦены(ТекДанные.Номенклатура.ТорговаяМарка);
		Возврат Истина;
	Иначе 
		ТекДанные.Номенклатура = Справочники.Номенклатура.ПустаяСсылка();
	КонецЕСли;
	
	Возврат Ложь;
КонецФункции

&НаСервере
Процедура ПроставитьПредыдущиеЦеныДляНоменклатуры(ТекСтрока = Неопределено)
	
	Если ТекСтрока <> Неопределено Тогда
		ТабТовары = Новый ТаблицаЗначений;
		ТабТовары.Колонки.Добавить("Номенклатура"	, Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТабТовары.Колонки.Добавить("ТорговаяТочка"	, Новый ОписаниеТипов("СправочникСсылка.СтруктурныеЕдиницы"));
		СтрокаТаб = Объект.Товары.НайтиПоИдентификатору(ТекСтрока);
		СтрокаДоб = ТабТовары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДоб, СтрокаТаб);
	Иначе
		ТабТовары = Объект.Товары.Выгрузить();
	КонецЕсли;	
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Таб"			, ТабТовары);
	Запрос.УстановитьПараметр("Период"		, Объект.Дата);
	Запрос.УстановитьПараметр("Регистратор"	, Объект.Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Таб.Номенклатура,
	|	Таб.ТорговаяТочка
	|ПОМЕСТИТЬ ВТ_Товары
	|ИЗ
	|	&Таб КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Товары.ТорговаяТочка,
	|	ВТ_Товары.Номенклатура,
	|	ЕСТЬNULL(ВЗ_Запрос.Цена, 0) КАК Цена,
	|	СебестоимостьТоваров.Себестоимость * ВЫБОР
	|		КОГДА СебестоимостьТоваров.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|				ИЛИ СебестоимостьТоваров.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|			ТОГДА 1.1
	|		КОГДА СебестоимостьТоваров.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|				ИЛИ СебестоимостьТоваров.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|			ТОГДА 1.18
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Себестоимость
	|ИЗ
	|	ВТ_Товары КАК ВТ_Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВЗ_Макс.ТорговаяТочка КАК ТорговаяТочка,
	|			ВЗ_Макс.Номенклатура КАК Номенклатура,
	|			ЦеныНоменклатуры.Цена КАК Цена
	|		ИЗ
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период,
	|				ЦеныНоменклатуры.ТорговаяТочка КАК ТорговаяТочка,
	|				ЦеныНоменклатуры.Номенклатура КАК Номенклатура
	|			ИЗ
	|				РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|			ГДЕ
	|				ЦеныНоменклатуры.Номенклатура В
	|						(ВЫБРАТЬ
	|							ВТ_Товары.Номенклатура
	|						ИЗ
	|							ВТ_Товары КАК ВТ_Товары)
	|				И ЦеныНоменклатуры.Период <= &Период
	|				И ЦеныНоменклатуры.Регистратор <> &Регистратор
	|				И ЦеныНоменклатуры.ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.ОсновнойТипЦенПродаж)
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ЦеныНоменклатуры.ТорговаяТочка,
	|				ЦеныНоменклатуры.Номенклатура) КАК ВЗ_Макс
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|				ПО ВЗ_Макс.Период = ЦеныНоменклатуры.Период
	|					И ВЗ_Макс.ТорговаяТочка = ЦеныНоменклатуры.ТорговаяТочка
	|					И ВЗ_Макс.Номенклатура = ЦеныНоменклатуры.Номенклатура) КАК ВЗ_Запрос
	|		ПО ВТ_Товары.Номенклатура = ВЗ_Запрос.Номенклатура
	|			И ВТ_Товары.ТорговаяТочка = ВЗ_Запрос.ТорговаяТочка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьТоваров.СрезПоследних(
	|				,
	|				Номенклатура В
	|					(ВЫБРАТЬ
	|						ВТ_Товары.Номенклатура
	|					ИЗ
	|						ВТ_Товары КАК ВТ_Товары)) КАК СебестоимостьТоваров
	|		ПО (СебестоимостьТоваров.Номенклатура = ВТ_Товары.Номенклатура)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_Товары";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	СтруктураОтбора = Новый Структура("ТорговаяТочка, Номенклатура");
	Пока Выборка.Следующий() Цикл
		СтруктураОтбора.ТорговаяТочка 	= Выборка.ТорговаяТочка;
		СтруктураОтбора.Номенклатура 	= Выборка.Номенклатура;
		СтрокиТоваров = Объект.Товары.НайтиСтроки(СтруктураОтбора);
		Для Каждого СтрокаТовар Из СтрокиТоваров Цикл
			СтрокаТовар.ПредыдущаяЦена 		= Выборка.Цена;
			СтрокаТовар.СебестоимостьСНДС 	= Выборка.Себестоимость;
		КонецЦикла;	
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Функция ПолучитьТоварыПоАкциям()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	НоменклатураАкции.Ссылка
	               |ИЗ
	               |	Справочник.Номенклатура.Акции КАК НоменклатураАкции
	               |ГДЕ
	               |	НоменклатураАкции.ДатаНачала <= &Дата
	               |	И НоменклатураАкции.ДатаОкончания >= &Дата
	               |	И НоменклатураАкции.Ссылка В(&Товары)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НоменклатураАкции.Ссылка.Наименование";
				   
	Запрос.УстановитьПараметр("Дата", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("Товары", Объект.Товары.Выгрузить().ВыгрузитьКолонку("Номенклатура"));
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции	

//+++АК LATV 2018.10.16 ИП-00020163
&НаСервере
Функция ЕстьАссортиментВендингов()

	Результат = Ложь;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Товары.НомерСтроки,
		|	Товары.ТорговаяТочка КАК ТорговаяТочка,
		|	Товары.Номенклатура КАК Номенклатура
		|ПОМЕСТИТЬ втТовары
		|ИЗ
		|	&Товары КАК Товары
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТорговаяТочка,
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""Проверка по торговой точке"" КАК Описание,
		|	втТовары.НомерСтроки КАК НомерСтроки,
		|	втТовары.Номенклатура
		|ИЗ
		|	втТовары КАК втТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(&Дата, ТорговаяТочка.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Вкусомат)) КАК ТоварныйАссортиментТочекСрезПоследних
		|		ПО втТовары.ТорговаяТочка = ТоварныйАссортиментТочекСрезПоследних.ТорговаяТочка
		|			И втТовары.Номенклатура = ТоварныйАссортиментТочекСрезПоследних.Номенклатура
		|ГДЕ
		|	НЕ ТоварныйАссортиментТочекСрезПоследних.Выведена
		|	И НЕ ТоварныйАссортиментТочекСрезПоследних.Запрещена
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	""Проверка по всем торговым точкам"",
		|	втТовары.НомерСтроки,
		|	втТовары.Номенклатура
		|ИЗ
		|	втТовары КАК втТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(&Дата, ТорговаяТочка.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Вкусомат)) КАК ТоварныйАссортиментТочекСрезПоследних
		|		ПО (втТовары.ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
		|			И втТовары.Номенклатура = ТоварныйАссортиментТочекСрезПоследних.Номенклатура
		|ГДЕ
		|	НЕ ТоварныйАссортиментТочекСрезПоследних.Выведена
		|	И НЕ ТоварныйАссортиментТочекСрезПоследних.Запрещена
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
	
	Отбор = Новый Структура("ТипЦен", Справочники.ТипыЦен.ОсновнойТипЦенПродаж);
	ТоварыДляПроверки = Объект.Товары.Выгрузить(Отбор, "НомерСтроки, ТорговаяТочка, Номенклатура");
	
	Запрос.УстановитьПараметр("Дата",	НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("Товары",	ТоварыДляПроверки);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Результат = Истина;
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Товар ""%1"" в строке %2 из ассортимента вендингов'"), Выборка.Номенклатура, Выборка.НомерСтроки);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции

//+++АК LATV 2018.11.16 ИП-00020163
&НаКлиенте
Процедура ПровестиПриНаличииАссортиментаВендинговАсинхронно()

	Объект.Дата = ТекущаяДата() + 5 * 24*60*60;
	
	НаборКнопок = Новый СписокЗначений;
	НаборКнопок.Добавить("ПровестиИЗакрыть",	"Провести и закрыть");
	НаборКнопок.Добавить("Провести",			"Провести");
	НаборКнопок.Добавить("Отмена",				"Отмена");
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'В документе есть позиции товарного ассортимента вендингов, цена по ним должна меняться не менее чем за 5 суток.
				   |
				   |Установлена дата документа %1. Действительно хотите провести документ?'")
		, Объект.Дата);
	Оповещение = Новый ОписаниеОповещения("ПровестиПриНаличииАссортиментаВендинговПодтверждение", ЭтаФорма);
	ПоказатьВопрос(Оповещение, ТекстВопроса, НаборКнопок,, "Отмена");

КонецПроцедуры

//+++АК LATV 2018.10.16 ИП-00020163
&НаКлиенте
Процедура ПровестиПриНаличииАссортиментаВендинговПодтверждение(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса = "Отмена" Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("РежимЗаписи", РежимЗаписиДокумента.Проведение);
	ПараметрыЗаписи.Вставить("ПроведениеПриНаличииАссортиментаВендингов");
	
	Записать(ПараметрыЗаписи);
	
	Если РезультатВопроса = "ПровестиИЗакрыть" Тогда
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ТоварыПриНачалеРедактированияСервер(ИдентификаторСтроки)
	
	ТекДанные = Объект.Товары.НайтиПоИдентификатору(ИдентификаторСтроки);
	ТекДанные.Валюта = Справочники.Валюты.НайтиПоНаименованию("RUB");
	//+++АК KIRN 2018.02.20  ИП-00017976
	//тип цены заполняется в зависимости от торговой марки номенклатуры, при ее выборе
	//ТекДанные.ТипЦен = Справочники.ТипыЦен.ОсновнойТипЦенПродаж;
	//ТекДанные.ТипЦен = Объект.ТипЦены;
	//---АК KIRN
	
КонецПроцедуры

//+++АК KIRN 2018.02.20 ИП-00017976
&НаСервере
Процедура ЗаполнитьПоТипуЦеныНаСервере()
	Объект.Товары.Очистить();
	
	Запрос = Новый Запрос;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка) КАК ТорговаяТочка,
	               |	СпрНоменклатура.Ссылка КАК Номенклатура,
	               |	СпрВалюты.Ссылка КАК Валюта,
	               |	СпрНоменклатураОсн.Ссылка КАК НоменклатураОсн
	               |ПОМЕСТИТЬ ВТ_Товары
	               |ИЗ
	               |	Справочник.Номенклатура КАК СпрНоменклатура
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатураОсн
	               |		ПО СпрНоменклатура.ОсновнаяНоменклатура = СпрНоменклатураОсн.Ссылка,
	               |	Справочник.Валюты КАК СпрВалюты
	               |ГДЕ
	               |	СпрНоменклатура.ТорговаяМарка = &ТорговаяМарка
	               |	И СпрВалюты.Наименование = &НаименованиеВалюты
	               |	И СпрНоменклатура.ПометкаУдаления = ЛОЖЬ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Товары.ТорговаяТочка,
	               |	ВТ_Товары.Номенклатура,
	               |	ЕСТЬNULL(ВЗ_Запрос.Цена, 0) КАК Цена,
	               |	СебестоимостьТоваров.Себестоимость * ВЫБОР
	               |		КОГДА СебестоимостьТоваров.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	               |				ИЛИ СебестоимостьТоваров.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	               |			ТОГДА 1.1
	               |		КОГДА СебестоимостьТоваров.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	               |				ИЛИ СебестоимостьТоваров.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	               |			ТОГДА 1.18
	               |		ИНАЧЕ 1
	               |	КОНЕЦ КАК Себестоимость,
	               |	ВТ_Товары.Валюта,
	               |	ВТ_Товары.НоменклатураОсн
	               |ИЗ
	               |	ВТ_Товары КАК ВТ_Товары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВЗ_Макс.ТорговаяТочка КАК ТорговаяТочка,
	               |			ВЗ_Макс.Номенклатура КАК Номенклатура,
	               |			ЦеныНоменклатуры.Цена КАК Цена
	               |		ИЗ
	               |			(ВЫБРАТЬ
	               |				МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период,
	               |				ЦеныНоменклатуры.ТорговаяТочка КАК ТорговаяТочка,
	               |				ЦеныНоменклатуры.Номенклатура КАК Номенклатура
	               |			ИЗ
	               |				РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	               |			ГДЕ
	               |				ЦеныНоменклатуры.Номенклатура В
	               |						(ВЫБРАТЬ
	               |							ВТ_Товары.НоменклатураОсн
	               |						ИЗ
	               |							ВТ_Товары КАК ВТ_Товары)
	               |				И ЦеныНоменклатуры.Период <= &Период
	               |				И ЦеныНоменклатуры.Регистратор <> &Регистратор
	               |				И ЦеныНоменклатуры.ТипЦен = &ОсновнойТипЦен
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				ЦеныНоменклатуры.ТорговаяТочка,
	               |				ЦеныНоменклатуры.Номенклатура) КАК ВЗ_Макс
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	               |				ПО ВЗ_Макс.Период = ЦеныНоменклатуры.Период
	               |					И ВЗ_Макс.ТорговаяТочка = ЦеныНоменклатуры.ТорговаяТочка
	               |					И ВЗ_Макс.Номенклатура = ЦеныНоменклатуры.Номенклатура) КАК ВЗ_Запрос
	               |		ПО ВТ_Товары.НоменклатураОсн = ВЗ_Запрос.Номенклатура
	               |			И ВТ_Товары.ТорговаяТочка = ВЗ_Запрос.ТорговаяТочка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьТоваров.СрезПоследних(
	               |				,
	               |				Номенклатура В
	               |					(ВЫБРАТЬ
	               |						ВТ_Товары.Номенклатура
	               |					ИЗ
	               |						ВТ_Товары КАК ВТ_Товары)) КАК СебестоимостьТоваров
	               |		ПО (СебестоимостьТоваров.Номенклатура = ВТ_Товары.Номенклатура)
	               |ГДЕ
	               |	ЕСТЬNULL(ВЗ_Запрос.Цена, 0) <> 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_Товары";
	
	Запрос.УстановитьПараметр("Период"		, Объект.Дата);
	Запрос.УстановитьПараметр("НаименованиеВалюты"		, "RUB");
	Запрос.УстановитьПараметр("Регистратор"	, Объект.Ссылка);
	Запрос.УстановитьПараметр("ТорговаяМарка"	, Объект.ТипЦены.ТорговаяМарка);
	Запрос.УстановитьПараметр("ОсновнойТипЦен"	, Объект.ОсновнойТипЦены);

	Выборка = Запрос.Выполнить().Выбрать();
	СтруктураОтбора = Новый Структура("ТорговаяТочка, Номенклатура");
	Пока Выборка.Следующий() Цикл
		СтрокаТовар = Объект.Товары.Добавить();
		СтрокаТовар.Номенклатура 		= Выборка.Номенклатура;
		СтрокаТовар.Валюта 				= Выборка.Валюта;
		СтрокаТовар.ПредыдущаяЦена 		= Выборка.Цена;
		СтрокаТовар.СебестоимостьСНДС 	= Выборка.Себестоимость;
		СтрокаТовар.ТипЦен				= Объект.ТипЦены;
		СтрокаТовар.Цена				= Выборка.Цена+Выборка.Цена*Объект.ПроцентНаценки/100;		
	КонецЦикла;	
КонецПроцедуры

// Выполняет проверку процента наценки на товар от «Себестоимости с НДС» //+++АК mika 2018.06.26 ИП-00018789
//
// Параметры: 
//      ИмяКолонки - <Тип.Срока> - Поле формы Цена
//      НовоеЗначение - <Тип.Число> - Введенное пользователем значение
//      ТекущиеДанные - <Тип.ДанныеФормыЭлементКоллекции> - Даныне текущей строки
//
&НаКлиенте
Процедура ПроверитьПроцентНаценкиНаТовар(ИмяПоля, НовоеЗначение, ТекущиеДанные)
		
	Если ТекущиеДанные <> Неопределено Тогда
		
		Если ТекущиеДанные.ТипЦен <> ПредопределенноеЗначение("Справочник.ТипыЦен.ОсновнойТипЦенПродаж") Тогда
			Возврат;
		КонецЕсли;
		
		Если ИмяПоля = "Цена" Тогда
			Цена  = Число(НовоеЗначение);
			СебестоимостьСНДС = ТекущиеДанные.СебестоимостьСНДС;
		ИначеЕсли  ИмяПоля = "СебестоимостьСНДС" Тогда
			Цена  = ТекущиеДанные.Цена;
			СебестоимостьСНДС = Число(НовоеЗначение);
		Иначе
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СебестоимостьСНДС) И ЗначениеЗаполнено(Цена) 
			И Окр(Цена/СебестоимостьСНДС,2) < 1.3 Тогда
			
			Оповещение = Новый ОписаниеОповещения("ПроверитьПроцентВопросЗавершение", ЭтаФорма);
			
			ПоказатьВопрос(Оповещение, НСтр(СтрЗаменить(СтрЗаменить("ru = 'Наценка на товар Номенклатура менее 30%! СимволПС Хотите ввести другое значение?'", 
								"СимволПС", Символы.ПС),"Номенклатура", ТекущиеДанные.Номенклатура), "ru"), РежимДиалогаВопрос.ДаНет, 30 );
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры // ПроверитьПроцентНаценкиНаТовар()

//+++АК mika 2018.06.26 ИП-00018789
&НаКлиенте
Процедура ПроверитьПроцентВопросЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Если Результат = КодВозвратаДиалога.Да Тогда
			 Элементы.Товары.ИзменитьСтроку();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
// Функция проверяет наличие установленных действующий акций по товару //+++АК mika 2018.06.27 ИП-00019047
//
// Параметры:
//  Номенклатура  - <Тип.СправочникСсылкаНоменклатура> - Контролируемый товар
//  Период    - <Тип.Дата> - Контролируемый период
//  ТорговаяТочка - <Тип.СправочникСсылкаСтруктурныеЕдиницы> - Контролируемый магазин
//
// Возвращаемое значение:
//   <Тип.Строка>   - Текст уведомления
//
Функция ПроверитьНаличиеАкцийПоТовару(Номенклатура, Период, ТорговаяТочка)
	
	ТекстУведомления = "";
	
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Возврат ТекстУведомления;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НоменклатураАкции.Ссылка.Наименование КАК Номенклатура,
	|	НоменклатураАкции.НазваниеАкции,
	|	НоменклатураАкции.ТипСкидки,
	|	НоменклатураАкции.ДатаНачала КАК ДатаНачала,
	|	НоменклатураАкции.ДатаОкончания,
	|	ВЫБОР
	|		КОГДА НоменклатураАкции.ТипСкидки = ЗНАЧЕНИЕ(Перечисление.ТипыАкцийПоТоварам.СкидкаПоБонуснойКарте)
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(Таб_ЦеныНоменклатуры.Цена - НоменклатураАкции.ДействуетЦена_Скидка * Таб_ЦеныНоменклатуры.Цена / 100 КАК ЧИСЛО(15, 0)), 0)
	|		ИНАЧЕ НоменклатураАкции.ДействуетЦена_Скидка
	|	КОНЕЦ КАК ЦенаСкидка
	|ИЗ
	|	Справочник.Номенклатура.Акции КАК НоменклатураАкции,
	|	(ВЫБРАТЬ
	|		ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|		ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|	ИЗ
	|		РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|				&ТекущаяДата,
	|				Номенклатура = &Номенклатура
	|					И ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|					И ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.ОсновнойТипЦенПродаж)) КАК ЦеныНоменклатурыСрезПоследних) КАК Таб_ЦеныНоменклатуры
	|ГДЕ
	|	НоменклатураАкции.ДатаНачала <= &Период
	|	И НоменклатураАкции.ДатаОкончания >= &Период
	|	И (НоменклатураАкции.ДействуетВМагазине = &ТорговаяТочка
	|			ИЛИ НоменклатураАкции.ДействуетВМагазине = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|			ИЛИ &ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
	|	И НоменклатураАкции.Ссылка = &Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	НоменклатураАкции.НазваниеАкции,
	|	НоменклатураАкции.ДатаНачала,
	|	НоменклатураАкции.ДатаОкончания,
	|	НоменклатураАкции.Ссылка.Наименование,
	|	НоменклатураАкции.ТипСкидки,
	|	НоменклатураАкции.ДействуетЦена_Скидка,
	|	ВЫБОР
	|		КОГДА НоменклатураАкции.ТипСкидки = ЗНАЧЕНИЕ(Перечисление.ТипыАкцийПоТоварам.СкидкаПоБонуснойКарте)
	|			ТОГДА ЕСТЬNULL(ВЫРАЗИТЬ(Таб_ЦеныНоменклатуры.Цена - НоменклатураАкции.ДействуетЦена_Скидка * Таб_ЦеныНоменклатуры.Цена / 100 КАК ЧИСЛО(15, 0)), 0)
	|		ИНАЧЕ НоменклатураАкции.ДействуетЦена_Скидка
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаНачала,
	|	Номенклатура
	|ИТОГИ ПО
	|	Номенклатура";
	
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ТорговаяТочка", ТорговаяТочка);
	
	РезультатЗапроса = Запрос.Выполнить();

	Если Не РезультатЗапроса.Пустой() Тогда
		
		ТекстУведомления = ТекстУведомления + СтрЗаменить("По номенклатуре Номенклатура есть действующие акции:", "Номенклатура", Номенклатура)+ Символы.ПС+ Символы.ПС;  
		
		ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ШаблонУведомлния = "    НазваниеАкции, Тип скидки: ТипСкидки Акция действует с ДатаНачала по ДатаОкончания, акционная цена: ЦенаСкидка" + Символы.ПС;
				Для каждого Колонка из РезультатЗапроса.Колонки Цикл
					Если Колонка.Имя = "ДатаНачала" ИЛИ Колонка.Имя = "ДатаОкончания" Тогда
						ШаблонУведомлния = СтрЗаменить(ШаблонУведомлния, Колонка.Имя , Формат(ВыборкаДетальныеЗаписи[Колонка.Имя], "ДФ=dd.MM.yyyy"));        
					Иначе
						ШаблонУведомлния = СтрЗаменить(ШаблонУведомлния, Колонка.Имя , ВыборкаДетальныеЗаписи[Колонка.Имя]);        
					КонецЕсли;	
				КонецЦикла;
				ТекстУведомления = ТекстУведомления + ШаблонУведомлния;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;

	Возврат ТекстУведомления;
	
КонецФункции // ПроверитьПериодыУстановкиЦенНоменклатуры()

#КонецОбласти
