//+++AK susk

// черный ход для смены счетов
Перем НеПроверятьСчета Экспорт;
//---AK susk

//+++АК Susk (Суслин К.В.) 2018.07.04 ИП-00018553^08
Перем ПроверкаПроводокПоТранспорту;
//---АК Susk (Суслин К.В.)  

//+++АК sole 2018.05.25 ИП-00018320.01 
Функция АК_ВыполнитьСверку() Экспорт
	тзСверки = Новый ТаблицаЗначений();
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	Запрос.Текст =
"ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	т.Документ,
|	т.СуммаДокумента
|
|		ПОМЕСТИТЬ втСписокДокументов
|
|ИЗ &Таблица КАК т
|ГДЕ
|		ТИПЗНАЧЕНИЯ(т.Документ) = ТИП(Документ.МаршрутныйЛист)
|;
|///////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	втСписокДокументов.Документ,
|	СУММА(ЕСТЬNULL(ПриходныйОрдерСкладТовары.ЕдиницаИзмерения.Вес, 0) * ЕСТЬNULL(ПриходныйОрдерСкладТовары.Количество, 0)) КАК Вес,
|	втСписокДокументов.СуммаДокумента
|	
|		ПОМЕСТИТЬ втВесаИСуммыТД
|
|ИЗ втСписокДокументов
|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛист.ПриходныеОрдера КАК МаршрутныйЛистПриходныеОрдера ПО
|			МаршрутныйЛистПриходныеОрдера.Ссылка = втСписокДокументов.Документ
|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары ПО
|		ПриходныйОрдерСкладТовары.Ссылка = МаршрутныйЛистПриходныеОрдера.ПриходныйОрдер
|
|СГРУППИРОВАТЬ ПО 
|	втСписокДокументов.Документ,
|	втСписокДокументов.СуммаДокумента
|
|ИНДЕКСИРОВАТЬ ПО втСписокДокументов.Документ
|;
|///////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	втВесаИСуммыТД.Документ.Дата КАК Дата,
|	СУММА(втВесаИСуммыТД.Вес) КАК ВесТД,
|	СУММА(втВесаИСуммыТД.СуммаДокумента) КАК СуммаТД
|	
|		ПОМЕСТИТЬ втВесаИСуммыТДСгруппированныеПоДатам
|
|ИЗ втВесаИСуммыТД
|
|СГРУППИРОВАТЬ ПО втВесаИСуммыТД.Документ.Дата
|
|ИНДЕКСИРОВАТЬ ПО  втВесаИСуммыТД.Документ.Дата
|;
|///////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	втВесаИСуммыТДСгруппированныеПоДатам.Дата,
|	СУММА(ЕСТЬNULL(ИтогиПоАктамСверкиСПеревозчиком.Вес, 0)) КАК Вес,
|	СУММА(ЕСТЬNULL(ИтогиПоАктамСверкиСПеревозчиком.СУММА, 0)) КАК Сумма
|
|		ПОМЕСТИТЬ втИтогиПоАктамСверкиСПеревозчиком
|
|ИЗ втВесаИСуммыТДСгруппированныеПоДатам
|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИтогиПоАктамСверкиСПеревозчиком КАК ИтогиПоАктамСверкиСПеревозчиком ПО
|			ИтогиПоАктамСверкиСПеревозчиком.Дата = втВесаИСуммыТДСгруппированныеПоДатам.Дата
|		И	ИтогиПоАктамСверкиСПеревозчиком.Перевозчик = &Перевозчик
|		И	(	
|					ИтогиПоАктамСверкиСПеревозчиком.Поставщик = &Поставщик
|				ИЛИ &Поставщик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
|			)
|
|СГРУППИРОВАТЬ ПО втВесаИСуммыТДСгруппированныеПоДатам.Дата
|
|ИНДЕКСИРОВАТЬ ПО втВесаИСуммыТДСгруппированныеПоДатам.Дата
|;
|///////////////////////////////////////////////////////////
|ВЫБРАТЬ РАЗРЕШЕННЫЕ
|	втВесаИСуммыТДСгруппированныеПоДатам.Дата,
|	втВесаИСуммыТДСгруппированныеПоДатам.СуммаТД КАК СуммаПоТД,		
|	втИтогиПоАктамСверкиСПеревозчиком.Сумма КАК СуммаИзАктов,
|	втИтогиПоАктамСверкиСПеревозчиком.Сумма - втВесаИСуммыТДСгруппированныеПоДатам.СуммаТД КАК РазницаСумм,
|	втВесаИСуммыТДСгруппированныеПоДатам.ВесТД КАК ВесПоТД,		
|	втИтогиПоАктамСверкиСПеревозчиком.Вес КАК ВесИзАктов,
|	втИтогиПоАктамСверкиСПеревозчиком.Вес - втВесаИСуммыТДСгруппированныеПоДатам.ВесТД КАК РазницаВесов
|
|ИЗ втВесаИСуммыТДСгруппированныеПоДатам
|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втИтогиПоАктамСверкиСПеревозчиком ПО
|		втИтогиПоАктамСверкиСПеревозчиком.Дата =  втВесаИСуммыТДСгруппированныеПоДатам.Дата
|";
	Запрос.Параметры.Вставить("Таблица", ЭтотОбъект.ТранспортныеДокументы);
	Запрос.Параметры.Вставить("Перевозчик", ЭтотОбъект.Контрагент);
	Запрос.Параметры.Вставить("Поставщик", ЭтотОбъект.ФильтрПоПоставщику);
	
	тзСверки = Запрос.Выполнить().Выгрузить();
	
	Запрос.МенеджерВременныхТаблиц.Закрыть();
	
	Возврат тзСверки;
КонецФункции

Функция ПолучитьНастройкуСписания()
	
	//+++АК Susk (Суслин К.В.) 2018.12.06 ИП-00020497	 
	Возврат ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.ОсновныеСредства_СписаниеПриВводеВЭксплуатацию, Дата, Организация);
		
КонецФункции

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если ЭтотОбъект.СводныйАктЗаПериод Тогда
		Если ЭтотОбъект.Сумма<>ЭтотОбъект.Товары.Итог("СуммаРаспределено") Тогда
			Отказ=Истина;
			Сообщить("Сумма документа и распределение по табличной части не совпадают!");
		КонецЕсли;	
		Возврат;
	КонецЕсли;	
	
	//+++АК Susk (Суслин К.В.) 2018.07.04 ИП-00018553^08
	Если ПроверкаПроводокПоТранспорту Тогда		
		СверитьСуммыПоТранспортнымДокументам(Отказ);
	КонецЕсли;
	//---АК Susk (Суслин К.В.) 	 
	
	//+++АК ZHAS 18-08-17 -- ИП-00016175	
	Если НоменклатураДопОборудование.Количество() > 0 Тогда
		
		пКопияНоменклатураДопОборудование = НоменклатураДопОборудование.Выгрузить();
		пКопияНоменклатураДопОборудование.Свернуть("Предпоступление");
		
		пКопияТовары = Товары.Выгрузить();
		пКопияТовары.Свернуть("Партия");
		
		СтруктураПустаяПартия = Новый Структура("Партия", Документы.ПоступлениеТоваровУслуг.ПустаяСсылка());
		СтрокаБезПартии = пКопияТовары.Найти(СтруктураПустаяПартия, "Партия");
		
		Если СтрокаБезПартии <> Неопределено Тогда
			пКопияТовары.Удалить(СтрокаБезПартии);
		КонецЕсли;
		
		СтруктураПустоеПредПоступление = Новый Структура("Предпоступление", Документы.ПредпоступлениеПоКомплектации.ПустаяСсылка());
		
		СтрокаБезПредпоступления = пКопияНоменклатураДопОборудование.Найти(СтруктураПустоеПредПоступление, "Предпоступление");
		
		Если СтрокаБезПредпоступления <> Неопределено Тогда
			пКопияНоменклатураДопОборудование.Удалить(СтрокаБезПредпоступления);
		КонецЕсли;
		
		//Проверяем при наличии предпоступлений
		
		Если пКопияНоменклатураДопОборудование.Количество() > 0 Тогда
			
			пОшибкаДопОборудование = Ложь;
			
			Если пКопияНоменклатураДопОборудование.Количество() > 1 Тогда
				//#Если Клиент Тогда
				Сообщить("В таблице доп. оборудования имеется больше одного пред.поступления!", СтатусСообщения.Важное);
				//#КонецЕсли
				пОшибкаДопОборудование = Истина;
			КонецЕсли; 	
			
			Если пКопияТовары.Количество() > 1 Тогда
				//#Если Клиент Тогда
				Сообщить("В таблице товаров имеется больше одного поступления товаро и услуг!", СтатусСообщения.Важное);
				//#КонецЕсли
				пОшибкаДопОборудование = Истина;
			КонецЕсли; 	
			
			//---АК ZHAS 28-08-17 -- ИП-00016175.01
			//---АК ZHAS 13-09-17 -- ИП-00016175.01
			//13-09-17 Рустем написал - блокировку снять.
			
			//пКонтрагентПост = ?(пКопияТовары.Количество() > 0 И ЗначениеЗаполнено(пКопияТовары[0].Партия.Контрагент), пКопияТовары[0].Партия.Контрагент, Справочники.Конкуренты.ПустаяСсылка());
			//пКонтрагентПредПост = ?(пКопияНоменклатураДопОборудование.Количество() > 0 И ЗначениеЗаполнено(пКопияНоменклатураДопОборудование[0].Предпоступление.Контрагент), пКопияНоменклатураДопОборудование[0].Предпоступление.Контрагент, Справочники.Конкуренты.ПустаяСсылка());
			//
			//Если пКонтрагентПост <> пКонтрагентПредПост Тогда
			//	Сообщить("Не совпадают контрагенты в документе поступления и пред.поступления!", СтатусСообщения.Важное);
			//	пОшибкаДопОборудование = Истина;
			//КонецЕсли;	
			
			//---АК ZHAS 28-08-17 -- ИП-00016175.01
			
			Если пОшибкаДопОборудование Тогда
				Отказ = Истина;
				Возврат;
			Иначе
				
				//---АК ZHAS 28-08-17 -- ИП-00016175.01
				
				пРучнойПодбор = Ложь;
				СтрокаРучнойПодбор = НоменклатураДопОборудование.Найти(Истина, "ДобавленоВРучную");
				пРучнойПодбор = СтрокаРучнойПодбор <> Неопределено; 
				
				//---АК ZHAS 28-08-17 -- ИП-00016175.01
				
				пСуммаДопРасходыПлюсПТУ = 0;
				
				//---АК ZHAS 28-08-17 -- ИП-00016175.01
				
				//пСуммаПост = ?(пКопияТовары.Количество() > 0, пКопияТовары[0].Партия.СуммаДокумента, 0);
				
				Если пРучнойПодбор Тогда
					пСуммаПост = СтрокаРучнойПодбор.Поступление.СуммаДокумента;
				Иначе
					пСуммаПост = ?(пКопияТовары.Количество() > 0, пКопияТовары[0].Партия.СуммаДокумента, 0);
				КонецЕсли;	
				
				//---АК ZHAS 28-08-17 -- ИП-00016175.01
				
				пСуммаПредПост = ?(пКопияНоменклатураДопОборудование.Количество() > 0, пКопияНоменклатураДопОборудование[0].Предпоступление.СуммаДокумента, 0);
				
				
				пСуммаДопРасходыПлюсПТУ = ЭтотОбъект.СуммаДокумента + пСуммаПост;
				
				Если пСуммаДопРасходыПлюсПТУ <> пСуммаПредПост Тогда
					//#Если Клиент Тогда
					Сообщить("Сумма текущего документа + ПТУ равна: " + пСуммаДопРасходыПлюсПТУ + ", сумма пред.поступления - " + пСуммаПредПост, СтатусСообщения.Важное);
					
					//Пожеления от 10-11-17 - обход блокировка
					Запрос = Новый Запрос;
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	ПараметрыДляПодстановкиВЗаявки.Индекс
					|ИЗ
					|	РегистрСведений.ПараметрыДляПодстановкиВЗаявки КАК ПараметрыДляПодстановкиВЗаявки
					|ГДЕ
					|	ПараметрыДляПодстановкиВЗаявки.Индекс = 585
					|	И ПараметрыДляПодстановкиВЗаявки.Пользователи = &Пользователи";
					Запрос.УстановитьПараметр("Пользователи", ПараметрыСеанса.ТекущийПользователь);
					ОбходБлокировки = НЕ Запрос.Выполнить().Пустой();

					
					
					
					//#КонецЕсли
					Отказ = Истина;
					Если НЕ ОбходБлокировки Тогда
						Возврат;
					Иначе
						Отказ = Ложь;
						Сообщить("Активирован обход блокировки");
					КонецЕсли;
				КонецЕсли;	
				
			КонецЕсли;	
			
		КонецЕсли;	
		
		//Пожеления от 21-08-17 - блокировка дубляжа предпоступлений
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыДляПодстановкиВЗаявки.Индекс
		|ИЗ
		|	РегистрСведений.ПараметрыДляПодстановкиВЗаявки КАК ПараметрыДляПодстановкиВЗаявки
		|ГДЕ
		|	ПараметрыДляПодстановкиВЗаявки.Индекс = 200";
		ВключитьПодтверждениеПоПочте = НЕ Запрос.Выполнить().Пустой();
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеДопРасходовНоменклатураДопОборудование.Предпоступление
		|ПОМЕСТИТЬ ТаблицаГруппировкаПредпоступление
		|ИЗ
		|	Документ.ПоступлениеДопРасходов.НоменклатураДопОборудование КАК ПоступлениеДопРасходовНоменклатураДопОборудование
		|ГДЕ
		|	ПоступлениеДопРасходовНоменклатураДопОборудование.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеДопРасходовНоменклатураДопОборудование.Предпоступление
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоступлениеДопРасходовНоменклатураДопОборудование.Предпоступление,
		|	1 КАК Количество
		|ПОМЕСТИТЬ ТаблицаГруппировка
		|ИЗ
		|	Документ.ПоступлениеДопРасходов.НоменклатураДопОборудование КАК ПоступлениеДопРасходовНоменклатураДопОборудование
		|ГДЕ
		|	ПоступлениеДопРасходовНоменклатураДопОборудование.Ссылка = &Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПоступлениеДопРасходовНоменклатураДопОборудование.Предпоступление,
		|	СУММА(1)
		|ИЗ
		|	Документ.ПоступлениеДопРасходов.НоменклатураДопОборудование КАК ПоступлениеДопРасходовНоменклатураДопОборудование
		|ГДЕ
		|	ПоступлениеДопРасходовНоменклатураДопОборудование.Ссылка <> &Ссылка
		|	И ПоступлениеДопРасходовНоменклатураДопОборудование.Ссылка.Проведен
		|	И ПоступлениеДопРасходовНоменклатураДопОборудование.Предпоступление В
		|			(ВЫБРАТЬ
		|				ТаблицаГруппировкаПредпоступление.Предпоступление
		|			ИЗ
		|				ТаблицаГруппировкаПредпоступление КАК ТаблицаГруппировкаПредпоступление)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеДопРасходовНоменклатураДопОборудование.Предпоступление
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаГруппировка.Предпоступление
		|ИЗ
		|	ТаблицаГруппировка КАК ТаблицаГруппировка
		|ГДЕ
		|	ТаблицаГруппировка.Количество > 1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаГруппировка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Если ВключитьПодтверждениеПоПочте Тогда
			
			Отказ = НЕ Запрос.Выполнить().Пустой();
			
			Если Отказ Тогда
				//#Если Клиент Тогда
				Сообщить ("В программе уже существует Поступление доп. расходов по такому предпоступлению");
				//#КонецЕсли
				Возврат;
			КонецЕсли;
			
		КонецЕсли
		
	КонецЕсли;	
	
	//---АК ZHAS 18-08-17 -- ИП-00016175
	
	ТаблицаСРаспределениями = ЗаплонитьСуммыРаспределения();
	
	УчитыватьНДС = ?(ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.БезНДС,Ложь,Истина);
	СуммаВключаетНДС = (ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле);
	СтавкаНДСЧисло = УчетНДС.ПолучитьСтавкуНДС(СтавкаНДС); 
	Счет08   = ПланыСчетов.Финансовый.КапитальныеВложения;
	Счет60_7 = ПланыСчетов.Финансовый.РасчетыСПоставщикамиОборудования;
	Счет68_2 = ПланыСчетов.Финансовый.НалогиУН;
	Счет02_1 = ПланыСчетов.Финансовый.ККМ;
	Счет01   = ПланыСчетов.Финансовый.Инвестиции;
	Счет44_3 = ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;
	мЦФО = Константы.ЦФОДляУчетаОсновныхСредств.Получить();
	мНДС =  Справочники.ВидыНалогов.НайтиПоКоду("000000001");
	мСтатьяДР = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("61010");
	Движения.Финансовый.Очистить();
	Движения.Финансовый.Записывать = Истина;
	
	НачалоВеденияУчетаОСМСФО = АК_УчетМСФОПривилегированный.ПолучитьПараметрыУчетаОС().НачалоВеденияУчета;
	УчетОСМСФО = (ЭтотОбъект.Дата > НачалоВеденияУчетаОСМСФО);  
	
	//+++АК SHEP 2018.01.31 ИП-00017365.02
	Если ТранспортныеУслуги Тогда
		СтруктураНастроек = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.ДоставкаТовараНаСклад, Дата);
	КонецЕсли;
	//---АК SHEP 2018.01.31
	
	//+++АК Susk (Суслин К.В.) 2018.11.29 ИП-00020534
	РеквизитыПТУ = ПолучитьРеквизитыПартий();
	//---АК Susk (Суслин К.В.) 	 
	
	Для Каждого СтрокаТЧ Из ТаблицаСРаспределениями Цикл
		
		//Если начали вести учет ОС МСФО основные средства обработаем отдельно
		Если ЗначениеЗаполнено(СтрокаТЧ.ОсновноеСредство) И УчетОСМСФО Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТЧ.СуммаРаспределено) Тогда	
			СтрокаТЧСуммаСписания = СтрокаТЧ.СуммаРаспределено + ?(ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле, СтрокаТЧ.Сумма - СтрокаТЧ.СуммаНДС, СтрокаТЧ.Сумма);
			СтрокаТЧСуммаНДС = СтрокаТЧ.СуммаНДС + СтрокаТЧ.СуммаНДСРаспределено;
			//дтХХ Кт60.7		
			Проводка = Движения.Финансовый.Добавить();
			Проводка.Период									  = Дата;
			Проводка.СчетДт 								  = СтрокаТЧ.СчетЗатрат;
			Если СтрокаТЧ.СчетЗатрат = Счет08 Тогда
				Проводка.СубконтоДт.СтатьиДвиженияДенежныхСредств = СтатьяДДС;
				Проводка.СубконтоДт.ОсновныеСредства 			  = СтрокаТЧ.ОсновноеСредство;
				Проводка.СубконтоДт.ЦФО 						  = мЦФО;
			ИначеЕсли ЗначениеЗаполнено(СтрокаТЧ.СчетЗатрат) И СтрокаТЧ.СчетЗатрат.ПринадлежитЭлементу(ПланыСчетов.Финансовый.Материалы) Тогда
				Проводка.СубконтоДт.Материалы					  = СтрокаТЧ.Номенклатура;
				//Если СтрокаТЧ.СчетЗатрат = ПланыСчетов.Финансовый.ПрочиеМатериалы Тогда
				//	Проводка.СубконтоДт.Склады 			 			  = СтрокаТЧ.Партия.Склад;
				//	Проводка.СубконтоДт.СтатьиТовародвижения 	      = Справочники.СтатьиТовародвижения.ПоступлениеОтПоставщика;
				//КонецЕсли;	
			//+++АК SHEP 2018.01.31 ИП-00017365.02
			ИначеЕсли ТранспортныеУслуги Тогда
				//+++АК SHEP 2018.05.04 ИП-00018524
				//Проводка.СубконтоДт.МестаХранения = СтрокаТЧ.ТорговаяТочка;
				//Проводка.СубконтоДт.Товары = СтрокаТЧ.Номенклатура;
				Если ЗначениеЗаполнено(СтрокаТЧ.ТорговаяТочка) Тогда
					Проводка.СубконтоДт.МестаХранения = СтрокаТЧ.ТорговаяТочка;
					Проводка.СубконтоДт.Товары = СтрокаТЧ.Номенклатура;
				ИначеЕсли ЗначениеЗаполнено(СтрокаТЧ.Склад) Тогда
					Проводка.СубконтоДт.Склады = СтрокаТЧ.Склад;
					Проводка.СубконтоДт.Материалы = СтрокаТЧ.Номенклатура;
				КонецЕсли;
				//---АК SHEP 2018.05.04
				Проводка.СубконтоДт.СтатьиТовародвижения = СтруктураНастроек.СтатьяДвиженияТоваров41;
				СтрокаТЧСуммаСписания = СтрокаТЧ.СуммаРаспределено;
				СтрокаТЧСуммаНДС = СтрокаТЧ.СуммаНДСРаспределено;
			//---АК SHEP 2018.01.31
			Иначе 
				//+++АК Susk (Суслин К.В.) 2018.11.29 ИП-00020534
				Если СтрокаТЧ.СчетЗатрат = ПланыСчетов.Финансовый.Товары Тогда //41.1
					ЗаполнитьТоварнуюПроводку(Проводка, СтрокаТЧ, РеквизитыПТУ, Отказ);
				Иначе
					ЗаполнитьПоДокументуПартии(Проводка,СтрокаТЧ,Отказ);
				КонецЕсли;
				//---АК Susk (Суслин К.В.) 
			КонецЕсли;
			Проводка.НомерЖурнала 							  = "ТД";
			Проводка.Содержание								  = "Доп. расходы";
			//Проводка.СчетКт                                   = Счет60_7;
			Проводка.СчетКт                                   = СчетУчетаРасчетовСКонтрагентом;
			Проводка.СубконтоКт.Организации					  = Организация;
			Проводка.СубконтоКт.Контрагенты					  = Контрагент;
			Проводка.Сумма 									  = СтрокаТЧСуммаСписания;
			
			//АК_УчетМСФО.КорректироватьПериодДвиженияМСФО(Движения.Финансовый,Проводка,ДатаВходящегоДокумента,Дата,ДатаОтраженияМСФО,Отказ); 
			
			//дт68.2 кт60.7
			Если СтрокаТЧСуммаНДС > 0 Тогда
				
				Проводка = Движения.Финансовый.Добавить();
				Проводка.Период									  = Дата;
				Проводка.СчетДт 								  = Счет68_2;
				Проводка.СубконтоДт.Организации 				  = Организация;
				Проводка.СубконтоДт.ВидыНалогов		 			  = мНДС;
				Проводка.СубконтоДт.СтавкиНДС					  = СтавкаНДС;
				Проводка.НомерЖурнала 							  = "ТД";
				Проводка.Содержание								  = "Доп. расходы";
				//Проводка.СчетКт                                   = Счет60_7;
				Проводка.СчетКт                                   = СчетУчетаРасчетовСКонтрагентом;
				Проводка.СубконтоКт.Организации					  = Организация;
				Проводка.СубконтоКт.Контрагенты					  = Контрагент;
				Проводка.Сумма                                    = СтрокаТЧСуммаНДС;
				
				//АК_УчетМСФО.КорректироватьПериодДвиженияМСФО(Движения.Финансовый,Проводка,ДатаВходящегоДокумента,Дата,ДатаОтраженияМСФО,Отказ);
				
			КонецЕсли;
			//02.1
			Если ЗначениеЗаполнено(СтрокаТЧ.ОсновноеСредство) Тогда
				//дт02.1
				Проводка = Движения.Финансовый.Добавить();
				Проводка.Период								  = Дата;
				Проводка.СчетДт 							  = Счет02_1;
				Проводка.СубконтоДт.ЦФО 					  = мЦФО;
				Проводка.СубконтоДт.МестаХраненияОС			  = СтрокаТЧ.Партия.Склад;
				Проводка.СубконтоДт.ОсновныеСредства 		  = СтрокаТЧ.ОсновноеСредство;
				Проводка.НомерЖурнала 						  = "ТД";
				Проводка.Содержание							  = "Доп. расходы";
				Проводка.Сумма                                = СтрокаТЧСуммаСписания;
				//дт02.1 кт02.1
				Проводка = Движения.Финансовый.Добавить();
				Проводка.Период								  = Дата;
				Проводка.СчетДт 							  = Счет02_1;
				Проводка.СубконтоДт.ЦФО 					  = мЦФО;
				Проводка.СубконтоДт.МестаХраненияОС			  = СтрокаТЧ.ТорговаяТочка;
				Проводка.СубконтоДт.ОсновныеСредства 		  = СтрокаТЧ.ОсновноеСредство;
				Проводка.СчетКт 							  = Счет02_1;
				Проводка.СубконтоКт.ЦФО 					  = мЦФО;
				Проводка.СубконтоКт.МестаХраненияОС			  = СтрокаТЧ.Партия.Склад;
				Проводка.СубконтоКт.ОсновныеСредства 		  = СтрокаТЧ.ОсновноеСредство;
				Проводка.НомерЖурнала 						  = "ТД";
				Проводка.Содержание							  = "Доп. расходы";
				Проводка.Сумма	                              = СтрокаТЧСуммаСписания;
			КонецЕсли;
			Если СтрокаТЧ.СчетЗатрат = Счет08 Тогда
				
				// 21.02.17 koro ИП-00015003 Не прогоняем через 01. На 01 остаются только объекты ОС			
				Если АК_ОсновныеСредства.УчетМСФО(ЭтотОбъект.Дата) Тогда
					
					//дт44.3 кт08
					Проводка = Движения.Финансовый.Добавить();
					Проводка.Период								   	  = Дата;
					Проводка.СчетДт 								  = Счет44_3;
					Проводка.СубконтоДт.ТорговыеТочки				  = СтрокаТЧ.ТорговаяТочка;
					Проводка.СубконтоДт.СтатьиДоходовРасходов		  = мСтатьяДР;
					Проводка.СубконтоДт.ЦФО 						  = мЦФО;
					
					Проводка.СчетКт 								  = Счет08;
					Проводка.СубконтоКт.СтатьиДвиженияДенежныхСредств = СтатьяДДС;
					Проводка.СубконтоКт.ОсновныеСредства 			  = СтрокаТЧ.ОсновноеСредство;
					Проводка.СубконтоКт.ЦФО 						  = мЦФО;
					Проводка.НомерЖурнала 							  = "ТД";
					Проводка.Содержание								  = "Доп. расходы";
					Проводка.Сумма	                      	          = СтрокаТЧСуммаСписания;
					
				Иначе 	
					//дт01 кт08
					Проводка = Движения.Финансовый.Добавить();
					Проводка.Период								   	  = Дата;
					Проводка.СчетДт 								  = Счет01;
					Проводка.СубконтоДт.ТорговыеТочки				  = СтрокаТЧ.ТорговаяТочка;
					Проводка.СчетКт 								  = Счет08;
					Проводка.СубконтоКт.СтатьиДвиженияДенежныхСредств = СтатьяДДС;
					Проводка.СубконтоКт.ОсновныеСредства 			  = СтрокаТЧ.ОсновноеСредство;
					Проводка.СубконтоКт.ЦФО 						  = мЦФО;
					Проводка.НомерЖурнала 							  = "ТД";
					Проводка.Содержание								  = "Доп. расходы";
					Проводка.Сумма	                      	          = СтрокаТЧСуммаСписания;
					//дт43.1 кт01
					Проводка 										  = Движения.Финансовый.Добавить();
					Проводка.Период								   	  = Дата;
					Проводка.СчетДт 								  = Счет44_3;
					Проводка.СубконтоДт.ТорговыеТочки				  = СтрокаТЧ.ТорговаяТочка;
					Проводка.СубконтоДт.СтатьиДоходовРасходов		  = мСтатьяДР;
					Проводка.СубконтоДт.ЦФО 						  = мЦФО;
					Проводка.СчетКт 								  = Счет01;
					Проводка.СубконтоКт.ТорговыеТочки				  = СтрокаТЧ.ТорговаяТочка;
					Проводка.НомерЖурнала 							  = "ТД";
					Проводка.Содержание								  = "Доп. расходы";
					Проводка.Сумма	                      	          = СтрокаТЧСуммаСписания;
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	
	//временно закомменчу, потому что нужны другие проводки
	
	//Для Каждого СтрокаТовар Из Товары Цикл
	//	Если ЗначениеЗаполнено(СтрокаТовар.СуммаРаспределено) Тогда
	//		Проводка = Движения.Финансовый.Добавить();
	//		
	//		Проводка.Период = Дата;
	//		Если СтрокаТовар.Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Упаковка Тогда
	//			Проводка.СчетДт = ПланыСчетов.Финансовый.МатералыДляВыпуска;
	//			Проводка.СубконтоДт.Материалы			= СтрокаТовар.Номенклатура;
	//			Проводка.СубконтоДт.СтатьиТовародвижения = СтатьяТовародвижения;
	//			Проводка.НомерЖурнала			= "ТД";
	//			Проводка.Содержание				= "Доп. расходы";
	//			
	//		Иначе
	//			Проводка.СчетДт = ПланыСчетов.Финансовый.Товары;
	//			Проводка.СубконтоДт.Товары			= СтрокаТовар.Номенклатура;
	//			Проводка.СубконтоДт.СтатьиТовародвижения = СтатьяТовародвижения;
	//			Проводка.НомерЖурнала			= "ТД";
	//			Проводка.Содержание				= "Доп. расходы";
	//			
	//		КонецЕсли;	
	//		
	//		Проводка.СчетКт 			= СчетУчетаРасчетовСКонтрагентом;
	//		Проводка.СубконтоКт.Организации = Организация;
	//		Проводка.СубконтоКт.Контрагенты = Контрагент;
	//		
	//		Проводка.Сумма 					= СтрокаТовар.СуммаРаспределено;
	//	КонецЕсли;	
	//КонецЦикла;
	//
	//НастройкаОтраженияНДСПоТоварам = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.НДС_ПоступлениеДопРасходов, Дата);
	//
	//Если СуммаНДС <> 0 Тогда
	//	Проводка = Движения.Финансовый.Добавить();
	//	
	//	Проводка.Период = ЭтотОбъект.Дата;
	//	Проводка.СчетДт = НастройкаОтраженияНДСПоТоварам.Счет;
	//	
	//	
	//	Проводка.СубконтоДт.Организации  	= Организация;
	//	Проводка.СубконтоДт.ВидыНалогов		= НастройкаОтраженияНДСПоТоварам.ДопРеквизит;
	//	Проводка.СубконтоДт.СтавкиНДС		= СтавкаНДС;
	//	
	//	Проводка.СчетКт 			= СчетУчетаРасчетовСКонтрагентом;
	//	
	//	Проводка.СубконтоКт.Организации = Организация;
	//	Проводка.СубконтоКт.Контрагенты = Контрагент;
	//	
	//	//Проводка.Организация 			= ЭтотОбъект.Организация;
	//	Проводка.Сумма 					= СуммаНДС;
	//КонецЕсли;
	
	НастрокаСписания = ПолучитьНастройкуСписания();
	
	НастройкаОтраженияНДСПоОборудованию = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(
	Перечисления.ВидыОперацийВУчете.НДС_ОборудованиеПоступлениеТоваровИУслуг,
	ЭтотОбъект.Дата);
	
	
	Для Каждого СтрокаТЧ Из ТаблицаСРаспределениями Цикл
		
		//Обрабатываем ОС МСФО
		Если НЕ (ЗначениеЗаполнено(СтрокаТЧ.ОсновноеСредство) И УчетОСМСФО) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТЧ.СуммаРаспределено) Тогда
			
			ПроверкаСчетаУчетаМСФО(СтрокаТЧ,Отказ);
			
			СтрокаТЧСуммаСписания = СтрокаТЧ.СуммаРаспределено + ?(ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле, СтрокаТЧ.Сумма - СтрокаТЧ.СуммаНДС, СтрокаТЧ.Сумма);
			СтрокаТЧСуммаНДС = СтрокаТЧ.СуммаНДС + СтрокаТЧ.СуммаНДСРаспределено;
			ТекущаяТорговаяТочка = АК_ОсновныеСредства.ТекущаяТорговаяТочка(СтрокаТЧ.ОсновноеСредство,Дата);			
			
			Если АК_УчетМСФО.ОСВведеноВЭксплуатацию(СтрокаТЧ.ОсновноеСредство,Дата) Тогда
				
				СчетУчетаОС = АК_ОсновныеСредства.СчетУчета(СтрокаТЧ.ОсновноеСредство,Дата);
				
				//Если ОС принято к учет - увеличим стоимость
				Если АК_ОсновныеСредства.ЭтоСчетУчетаПринятогоОС(СчетУчетаОС) Тогда					
					
					//+++AK susk
					СчетУчетаПриобретения = АК_УчетМСФО.ПолучитьСчетУчетаПриобретенияОС(СтрокаТЧ.Партия, СтрокаТЧ.ОсновноеСредство);
					
					Если СчетУчетаПриобретения.Пустая() Тогда
						ОбщегоНазначения.СообщитьОбОшибке("НЕ удалось определить счет учета приобретения основного средства: " + Строка(СтрокаТЧ.ОсновноеСредство) + " с инв. номером: " + СтрокаТЧ.ОсновноеСредство.ИнвентарныйНомер, Отказ);
					КонецЕсли;					
					//---AK susk				
					
					Проводка = Движения.Финансовый.Добавить();
					
					Проводка.Период								  = Дата;
					Проводка.Организация                          = Организация;
					Проводка.НомерЖурнала 						  = "ТД";
					Проводка.Содержание							  = "Увеличение стоимости ОС";
					
					//+++AK susk
					//Проводка.СчетДт  							  = ПланыСчетов.Финансовый.ПриобретениеОсновныхСредств;;
					Проводка.СчетДт  							  = СчетУчетаПриобретения;
					//---AK susk
					
					Проводка.СубконтоДт.ОсновныеСредства          = СтрокаТЧ.ОсновноеСредство;
					
					Проводка.СчетКт                               = СчетУчетаРасчетовСКонтрагентом;
					Проводка.СубконтоКт.Контрагенты				  = Контрагент;
					Проводка.СубконтоКт.Организации				  = ЭтотОбъект.Организация;
					
					Проводка.Сумма    							  = СтрокаТЧСуммаСписания;
					
					//АК_УчетМСФО.КорректироватьПериодДвиженияМСФО(Движения.Финансовый,Проводка,ДатаВходящегоДокумента,Дата,ДатаОтраженияМСФО,Отказ);
					
					Проводка = Движения.Финансовый.Добавить();
					
					Проводка.Период								  = Дата;
					Проводка.Организация                          = Организация;
					Проводка.НомерЖурнала 						  = "ТД";
					Проводка.Содержание							  = "Увеличение стоимости ОС";
					
					Проводка.СчетДт  							  = СчетУчетаОС;
					Проводка.СубконтоДт.ОсновныеСредства          = СтрокаТЧ.ОсновноеСредство;
					
					//+++AK susk
					//Проводка.СчетКт  							  = ПланыСчетов.Финансовый.ПриобретениеОсновныхСредств;;
					Проводка.СчетКт  							  = СчетУчетаПриобретения;
					//---AK susk
					
					Проводка.СубконтоКт.ОсновныеСредства          = СтрокаТЧ.ОсновноеСредство;
					
					Проводка.Сумма    							  = СтрокаТЧСуммаСписания;
					
					//АК_УчетМСФО.КорректироватьПериодДвиженияМСФО(Движения.Финансовый,Проводка,ДатаВходящегоДокумента,Дата,ДатаОтраженияМСФО,Отказ);
					
				Иначе
					
					Проводка = Движения.Финансовый.Добавить();
					Проводка.Период								  = Дата;
					Проводка.Организация                          = Организация;
					Проводка.НомерЖурнала 						  = "ТД";
					Проводка.Содержание							  = "Списание расходов по ОС, уже принятому в эксплуатацию";
					
					Проводка.СчетДт  							  = СтрокаТЧ.СчетЗатрат;
					
					СтатьяДР = АК_ОсновныеСредства.ПолучитьСтатьюДР(СтрокаТЧ.ОсновноеСредство,Дата);
					
					Если ЗначениеЗаполнено(СтатьяДР) Тогда
						Проводка.СубконтоДт.СтатьиДоходовРасходов = СтатьяДР;
					Иначе	
						Проводка.СубконтоДт.СтатьиДоходовРасходов = НастрокаСписания.СтатьяДоходовРасходов;
					КонецЕсли;	
					
					Проводка.СубконтоДт.ЦФО 					  = НастрокаСписания.ЦФО;			
					
					Если ЗначениеЗаполнено(ТекущаяТорговаяТочка) Тогда
						Проводка.СубконтоДт.ТорговыеТочки = ТекущаяТорговаяТочка;
					КонецЕсли;	
					
					Проводка.СчетКт                               = СчетУчетаРасчетовСКонтрагентом;
					Проводка.СубконтоКт.Контрагенты				  = Контрагент;
					Проводка.СубконтоКт.Организации				  = ЭтотОбъект.Организация;
					
					Проводка.Сумма    							  = СтрокаТЧСуммаСписания;
					
					//АК_УчетМСФО.КорректироватьПериодДвиженияМСФО(Движения.Финансовый,Проводка,ДатаВходящегоДокумента,Дата,ДатаОтраженияМСФО,Отказ);
					
				КонецЕсли;	
			Иначе	
				//ОС
				Проводка = Движения.Финансовый.Добавить();
				Проводка.Период								  = Дата;
				Проводка.Организация                          = Организация;
				Проводка.НомерЖурнала 						  = "ТД";
				Проводка.Содержание							  = "Доп. расходы";
				
				Проводка.СчетДт 							  = СтрокаТЧ.СчетЗатрат;
				Проводка.СубконтоДт.ОсновныеСредства 		  = СтрокаТЧ.ОсновноеСредство;
				
				Проводка.СчетКт                               = СчетУчетаРасчетовСКонтрагентом;				
				Проводка.СубконтоКт.Контрагенты				  = Контрагент;
				Проводка.СубконтоКт.Организации				  = ЭтотОбъект.Организация;
				
				Проводка.Сумма    							  = СтрокаТЧСуммаСписания;
				
				//АК_УчетМСФО.КорректироватьПериодДвиженияМСФО(Движения.Финансовый,Проводка,ДатаВходящегоДокумента,Дата,ДатаОтраженияМСФО,Отказ);
				
			КонецЕсли;	
			
			//НДС ОС
			Если  СтрокаТЧСуммаНДС > 0 Тогда
				
				Проводка = Движения.Финансовый.Добавить();
				Проводка.Период									  = Дата;
				Проводка.Организация                              = Организация;
				
				Проводка.СчетДт	= НастройкаОтраженияНДСПоОборудованию.Счет;
				Проводка.СубконтоДт.Организации					  = ЭтотОбъект.Организация;
				Проводка.СубконтоДт.ВидыНалогов 				  = НастройкаОтраженияНДСПоОборудованию.ДопРеквизит;
				Проводка.СубконтоДт.СтавкиНДС 					  = ЭтотОбъект.СтавкаНДС;
				
				Проводка.НомерЖурнала 							  = "ТД";
				Проводка.Содержание								  = "Доп. расходы";
				
				Проводка.СчетКт                                   = СчетУчетаРасчетовСКонтрагентом;
				Проводка.СубконтоКт.Контрагенты					  = Контрагент;
				Проводка.СубконтоКт.Организации				      = ЭтотОбъект.Организация;
				
				Проводка.Сумма                                    = СтрокаТЧСуммаНДС;
				
				//АК_УчетМСФО.КорректироватьПериодДвиженияМСФО(Движения.Финансовый,Проводка,ДатаВходящегоДокумента,Дата,ДатаОтраженияМСФО,Отказ);
				
			КонецЕсли;
			
		КонецЕсли;	
	КонецЦикла;
	
	АК_УчетМСФО.ЗаполнитьОрганизацию(Движения.Финансовый,Организация);	
	
	//+++АК pozm 23.08.2017 ИП-00016295
	ВыполнитьДвиженияВРасчетыПоСделкам();
	//---АК pozm 23.08.2017 ИП-00016295
	
	//+++АК POZM 2017.10.22 ИП-00017015
	Если Не Отказ Тогда
		ВыполнитьДвиженияПоТМЦКПоступлению();
	КонецЕсли;
	//---АК POZM 
	
	//+++АК POZM 2017.11.22 ИП-00017139
	Если ЭтотОбъект.ДополнительныеСвойства.Свойство("ПроводитьВЗакрытомПериоде") И ЭтотОбъект.ДополнительныеСвойства.ПроводитьВЗакрытомПериоде Тогда
		ЭтотОбъект.Движения.Финансовый.ДополнительныеСвойства.Вставить("ПроводитьВЗакрытомПериоде",Истина);
	КонецЕсли;	
	//---АК POZM 
КонецПроцедуры

Процедура ПроверкаСчетаУчетаМСФО(СтрокаТЧ,Отказ)
	
	ОСВведеноВЭксплуатацию = АК_УчетМСФО.ОСВведеноВЭксплуатацию(СтрокаТЧ.ОсновноеСредство,Дата);
	СчетДоступен = Ложь;
	
	Если ОСВведеноВЭксплуатацию Тогда
		
		СчетУчета =  АК_ОсновныеСредства.СчетУчета(СтрокаТЧ.ОсновноеСредство,Дата);
		
		Если АК_ОсновныеСредства.ЭтоСчетУчетаПринятогоОС(СчетУчета) Тогда
			Если СтрокаТЧ.СчетЗатрат <> СчетУчета Тогда
				Отказ = Истина;
				Сообщить("ОС: " + СтрокаТЧ.ОсновноеСредство +" введено в эксплуатацию. Необходимо отразить затраты на счете " + СчетУчета);
			КонецЕсли;
			
		Иначе	
			
			ДоступныеСчета = АК_УчетМСФО.СчетаЗатратОСПослеВводаВЭксплуатацию();
			Для Каждого ДоступныйСчет из ДоступныеСчета Цикл
				Если СтрокаТЧ.СчетЗатрат = ДоступныйСчет Тогда
					СчетДоступен = Истина;
				КонецЕсли;	
			КонецЦикла;;
			Если НЕ СчетДоступен Тогда
				Отказ = Истина;
				Сообщить("ОС: " + СтрокаТЧ.ОсновноеСредство +" списано на расходы. Счет: " +  СтрокаТЧ.СчетУчета + " не доступен для учета затрат");
			КонецЕсли;
			
		КонецЕсли;	
		
	Иначе
		ЗатратыНаОС = АК_УчетМСФО.ЗатратыНаОС(СтрокаТЧ.ОсновноеСредство,Дата);
		
		Если ЗатратыНаОС.Количество() > 0 тогда
			Для каждого СтрокаЗатраты из ЗатратыНаОС Цикл
				
				Если СтрокаЗатраты.СчетДт = СтрокаТЧ.СчетЗатрат Тогда
					СчетДоступен = Истина;
				КонецЕсли;
				СчетЗатрат = СтрокаЗатраты.СчетДт;
				
			КонецЦикла;	
			
			Если НЕ СчетДоступен Тогда
				Отказ = Истина;
				Сообщить("Дополнительные расходы по ОС: " + СтрокаТЧ.ОсновноеСредство +" необходимо отнести на счет: " +  СчетЗатрат);
			КонецЕсли;
		Иначе 
			Сообщить("Внимание! Не введен документ поступления по основному средству: " + СтрокаТЧ.ОсновноеСредство);
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ЗаполнитьПоДокументуПартии(Проводка,СтрокаТЧ,Отказ)
	СтруктураОтбора = Новый Структура("Номенклатура, СчетЗатрат");
	СтруктураОтбора.Номенклатура = СтрокаТЧ.Номенклатура;
	СтруктураОтбора.СчетЗатрат = СтрокаТЧ.СчетЗатрат;
	найд = СтрокаТЧ.Услуги.Товары.НайтиСтроки(СтруктураОтбора);
	Если найд.Количество() = 0 Тогда
		Сообщить("Не найдена позиция: "+ СтрокаТЧ.Номенклатура +" счет учета: "+ СтрокаТЧ.СчетЗатрат +" в документе партии");
		Отказ = Истина;
	иначе
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, найд[0].Субконто1);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, найд[0].Субконто2);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, найд[0].Субконто3);
	КонецЕсли;
КонецПроцедуры

Функция ЗаплонитьСуммыРаспределения() Экспорт
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Таб", Товары.Выгрузить());
	Запрос.Текст = "ВЫБРАТЬ
	|	ПоступлениеДопРасходовТовары.Номенклатура,
	|	ПоступлениеДопРасходовТовары.Количество,
	|	ПоступлениеДопРасходовТовары.СтоимостьПартии,
	|	ПоступлениеДопРасходовТовары.НомерСтроки,
	|	ПоступлениеДопРасходовТовары.Партия,
	|	ПоступлениеДопРасходовТовары.Сумма,
	|	ПоступлениеДопРасходовТовары.СуммаНДС,
	|	ПоступлениеДопРасходовТовары.СчетУчета,
	|	ПоступлениеДопРасходовТовары.СчетУчетаНУ,
	|	ПоступлениеДопРасходовТовары.ОсновноеСредство,
	|	ПоступлениеДопРасходовТовары.ТорговаяТочка,
	//+++АК SHEP 2018.05.04 ИП-00018524
	|	ПоступлениеДопРасходовТовары.Склад,
	//---АК SHEP 2018.05.04
	|	ПоступлениеДопРасходовТовары.СчетЗатрат
	|ПОМЕСТИТЬ ВТ_ДанныеДока
	|ИЗ
	|	&Таб КАК ПоступлениеДопРасходовТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеДока.Номенклатура,
	|	ВТ_ДанныеДока.Количество,
	|	ВТ_ДанныеДока.СтоимостьПартии,
	|	СпрНоменклатура.ЕдиницаХраненияОстатков.Вес * ВТ_ДанныеДока.Количество КАК Вес,
	|	ВТ_ДанныеДока.Партия,
	|	ВТ_ДанныеДока.Сумма,
	|	ВТ_ДанныеДока.СуммаНДС,
	|	ВТ_ДанныеДока.СчетУчета,
	|	ВТ_ДанныеДока.СчетУчетаНУ,
	|	ВТ_ДанныеДока.ОсновноеСредство,
	|	ВТ_ДанныеДока.ТорговаяТочка,
	//+++АК SHEP 2018.05.04 ИП-00018524
	|	ВТ_ДанныеДока.Склад,
	//---АК SHEP 2018.05.04
	|	0 КАК СуммаРаспределено,
	|	0 КАК СуммаНДСРаспределено,
	|	ВТ_ДанныеДока.СчетЗатрат
	|ИЗ
	|	ВТ_ДанныеДока КАК ВТ_ДанныеДока
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	|		ПО ВТ_ДанныеДока.Номенклатура = СпрНоменклатура.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_ДанныеДока.НомерСтроки";
	
	ТабДокумента = Запрос.Выполнить().Выгрузить();
	
	Если СпособРаспределения = Перечисления.СпособыРаспределенияДопРасходов.ПоСумме Тогда
		МассивКоэф = ТабДокумента.ВыгрузитьКолонку("СтоимостьПартии");
	ИначеЕсли СпособРаспределения = Перечисления.СпособыРаспределенияДопРасходов.ПоКоличеству Тогда
		МассивКоэф = ТабДокумента.ВыгрузитьКолонку("Количество");
	ИначеЕсли СпособРаспределения = Перечисления.СпособыРаспределенияДопРасходов.ПоВесу Тогда
		МассивКоэф = ТабДокумента.ВыгрузитьКолонку("Вес");
	КонецЕсли;
	
	//+++АК sole 2018.08.08 ИП-00019504
	Если ЭтотОбъект.ТранспортныеУслуги Тогда
		СуммаКРаспределению = ?(ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле, Сумма, Сумма - СуммаНДС);
	Иначе
		СуммаКРаспределению = ?(ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле, Сумма - СуммаНДС, Сумма);
	КонецЕсли;
	//---АК sole 2018.08.08 ИП-00019504
	
	РаспредСумма = ОбщегоНазначения.РаспределитьПропорционально(СуммаКРаспределению, МассивКоэф);
	РаспредНДС   = ОбщегоНазначения.РаспределитьПропорционально(СуммаНДС, МассивКоэф);
	Если РаспредСумма <> Неопределено Тогда
		ТабДокумента.ЗагрузитьКолонку(РаспредСумма, "СуммаРаспределено");
	КонецЕсли;
	Если РаспредНДС <> Неопределено Тогда
		ТабДокумента.ЗагрузитьКолонку(РаспредНДС, "СуммаНДСРаспределено");
	КонецЕсли;
	
	возврат ТабДокумента;
	
КонецФункции

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	АК_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка);
КонецПроцедуры

// +++AK obue 20160415 00012420
Процедура АК_ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Основание = ДанныеЗаполнения;
	//Документ можно вводить только на основании поступлений
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") И НЕ  Основание.ПометкаУдаления Тогда
		// Заполним реквизиты из стандартного набора по документу основанию.
		ЗаполнитьШапкуДокументаПоОснованию(Основание);
		ЗаполнитьТоварыПоПоступлениюТоваров(Основание);
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ЗаявкаНаУслугиМатериалы")  Тогда
		
		ЭтотОбъект.Организация 		= ДанныеЗаполнения.Организация;
		ЭтотОбъект.Контрагент		= ДанныеЗаполнения.Контрагент;
		ЭтотОбъект.ДоговорКонтрагента = ДанныеЗаполнения.ДоговорКонтрагента;
		
		ЭтотОбъект.ЗаявкаНаРсходованиеСредств = ДанныеЗаполнения.Ссылка;
		//ЭтотОбъект.СтатьяДоходовРасходов = ДанныеЗаполнения.
		ЭтотОбъект.Сумма		= ДанныеЗаполнения.Услуги.Итог("Сумма");
		
		ЭтотОбъект.СуммаНДС			= ДанныеЗаполнения.Услуги.Итог("СуммаНДС");
		ЭтотОбъект.Ответственный			= ДанныеЗаполнения.Ответственный;
		
		Если ДанныеЗаполнения.Услуги.Количество()>0 Тогда
			ЭтотОбъект.Содержание = ДанныеЗаполнения.Услуги[0].Номенклатура; 
			ЭтотОбъект.СтавкаНДС = ДанныеЗаполнения.Услуги[0].СтавкаНДС;
		КонецЕсли;
		
		ЭтотОбъект.ВариантРасчетаНДС = ДанныеЗаполнения.ВариантРасчетаНДС;
		ЭтотОбъект.СтатьяДДС = ДанныеЗаполнения.СтатьяДДС;
		ЭтотОбъект.СпособРаспределения = перечисления.СпособыРаспределенияДопРасходов.ПоСумме;
		ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом = ДанныеЗаполнения.СчетУчетаРасчетов;
		
	КонецЕсли;	
	
	
КонецПроцедуры

Процедура ЗаполнитьШапкуДокументаПоОснованию(Основание) Экспорт
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект,Основание);
	
	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		Дата = ТекущаяДата();	
	КонецЕсли;
	
	Проведен = Ложь;
	Номер = Неопределено;
	Комментарий = Неопределено;
	СуммаДокумента = Неопределено;
	Ответственный = ПараметрыСеанса.ТекущийПользователь;
	//АК БЕЛН 13.03.17+
	ДокументыПолучены = (Основание.ДокументыПолучены);
	СтатусПолученныхДокументов = (Основание.СтатусПолученныхДокументов);
	//АК БЕЛН 13.03.17-                                       
	//СтатусПолученныхДокументов = Неопределено;
	//СтавкаНДС
	
	Если ЗначениеЗаполнено(ДоговорКонтрагента.СтавкаНДС) Тогда
		СтавкаНДС = ДоговорКонтрагента.СтавкаНДС;
	иначе
		СтавкаНДС =Контрагент.СтавкаНДС;
	КонецЕсли;
	
	Если ТипЗнч(Основание.ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаУслугиМатериалы") Тогда
		ЗаявкаНаРсходованиеСредств = Основание.ДокументОснование;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ЗаполнитьТоварыПоПоступлениюТоваров(Основание) Экспорт
	
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	Запрос.УстановитьПараметр("СчетТовары",ПланыСчетов.Хозрасчетный.НайтиПоКоду("44.01"));
	Запрос.УстановитьПараметр("СчетЗатрат",ПланыСчетов.Финансовый.КапитальныеВложения);
	Запрос.УстановитьПараметр("УчетМСФО",АК_УчетМСФОПривилегированный.ПолучитьПараметрыУчетаОС().НачалоВеденияУчета);
	
	Запрос.Текст ="ВЫБРАТЬ
	|	Док.Номенклатура,
	|	Док.Ссылка КАК Партия,
	|	Док.Сумма КАК СтоимостьПартии,
	|	Док.Количество,
	|	&СчетТовары КАК СчетУчета,
	|	&СчетТовары КАК СчетУчетаНУ,
	|	ЗНАЧЕНИЕ(Справочник.ОсновныеСредства.ПустаяСсылка) КАК ОсновноеСредство,
	|	NULL КАК ТорговаяТочка,
	|	Док.СчетУчета КАК СчетЗатрат
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК Док
	|ГДЕ
	|	Док.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Док.Номенклатура,
	|	Док.Ссылка,
	|	Док.Сумма,
	|	1,
	|	Док.СчетУчетаБУ,
	|	Док.СчетУчетаБУ,
	|	Док.ОсновноеСредство,
	|	Док.ТорговаяТочка,
	|	&СчетЗатрат
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Оборудование КАК Док
	|ГДЕ
	|	Док.Ссылка = &ДокументОснование
	|	И Док.Ссылка.Дата < &УчетМСФО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Док.Номенклатура,
	|	Док.Ссылка,
	|	Док.Сумма,
	|	1,
	|	Док.СчетУчетаБУ,
	|	Док.СчетУчетаБУ,
	|	Док.ОсновноеСредство,
	|	Док.ТорговаяТочка,
	|	Док.СчетУчета
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Оборудование КАК Док
	|ГДЕ
	|	Док.Ссылка = &ДокументОснование
	|	И Док.Ссылка.Дата >= &УчетМСФО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Док.Номенклатура,
	|	Док.Ссылка,
	|	Док.Сумма,
	|	Док.Количество,
	|	Док.СчетЗатратБУ,
	|	Док.СчетЗатратНУ,
	|	ВЫБОР
	|		КОГДА Док.Субконто2 ССЫЛКА Справочник.ОсновныеСредства
	|			ТОГДА Док.Субконто2
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ОсновныеСредства.ПустаяСсылка)
	|	КОНЕЦ,
	|	Док.ТорговаяТочка,
	|	Док.СчетЗатрат
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК Док
	|ГДЕ
	|	Док.Ссылка = &ДокументОснование";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Товары.Добавить(),Выборка);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//+++АК SHEP 2018.01.31 ИП-00017365.02
	//Если НЕ Товары.Количество() = 0 Тогда
	Если НЕ ТранспортныеУслуги И НЕ Товары.Количество() = 0 Тогда
	//---АК SHEP 2018.01.31
		ТабДокумента = ЗаплонитьСуммыРаспределения();
		РаспредСумма = ТабДокумента.ВыгрузитьКолонку("СуммаРаспределено");
		Товары.ЗагрузитьКолонку(РаспредСумма, "СуммаРаспределено");
		//+++AK susk
		//ИП-00016617
		РаспредСуммаНДС = ТабДокумента.ВыгрузитьКолонку("СуммаНДСРаспределено");
		Товары.ЗагрузитьКолонку(РаспредСуммаНДС, "СуммаНДСРаспределено");
		//---AK susk		
		//Заполним данные в ТЧ
		Для Каждого СтрокаТЧ из Товары Цикл
			СтрокаТЧ.СуммаРаспределено = СтрокаТЧ.СуммаРаспределено + СтрокаТЧ.Сумма;	
		КонецЦикла;
	КонецЕсли;
	
	//+++AK susk
	Если НЕ НепроверятьСчета Тогда
		ПроверкаСчетовНаКорректность(Отказ);
	КонецЕсли;
	//---AK susk
	
	//+++АК Susk (Суслин К.В.) 2018.07.04 ИП-00018553^08
	Если НЕ ЭтоНовый() И Не Проведен И РежимЗаписи = РежимЗаписиДокумента.Проведение И ТранспортныеУслуги Тогда
		ПроверкаПроводокПоТранспорту = Истина;
	КонецЕсли;
	//---АК Susk (Суслин К.В.) 	 
	
	// koro 16505 контроль на заведомо некорректные даты 
	АК_УчетМСФО.КонтрольДатыВходящегоДокумента(ЭтотОбъект,Отказ);
	
	//+++АК Susk (Суслин К.В.) 2017.12.27 ИП-00017530
	ПроверкаНоменклатурыДокумента(Отказ);
	//---АК Susk (Суслин К.В.) 	 
	
	//+++АК SHEP 2018.01.17 ИП-00017365.02
	Если НЕ ТранспортныеУслуги И ТранспортныеДокументы.Количество() > 0 Тогда
		ТранспортныеДокументы.Очистить();
	КонецЕсли;
	//---АК SHEP 2018.01.17
	
	//++ АК luza 13.02.2018 ИП-00017231.02
	//синхронизация пометки удаления со счетом фактурой
	Документы.СчетФактураПолученный.СинхронизацияПометкиНаУдалениеУСчетаФактуры(ЭтотОбъект, "СчетФактураПолученный");
	//-- АК luza 13.02.2018 ИП-00017231.02

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	//+++АК POZM 2018.05.31 ИП-00018739
	Если ЗначениеЗаполнено(ЭтотОбъект.ЗаявкаНаРсходованиеСредств)
			И ТипЗнч(ЭтотОбъект.ЗаявкаНаРсходованиеСредств) = Тип("ДокументСсылка.ЗаявкаНаУслугиМатериалы") Тогда
		ПолныеПрава.ЗарегистрироватьОтложенныйРасчетНаличияПоступленийПоЗаявке(ЭтотОбъект.ЗаявкаНаРсходованиеСредств);
	КонецЕсли;
	Если ЗначениеЗаполнено(Ссылка.ЗаявкаНаРсходованиеСредств) И ТипЗнч(Ссылка.ЗаявкаНаРсходованиеСредств)=Тип("ДокументСсылка.ЗаявкаНаУслугиМатериалы") И Ссылка.ЗаявкаНаРсходованиеСредств<>ЗаявкаНаРсходованиеСредств Тогда	
		ПолныеПрава.ЗарегистрироватьОтложенныйРасчетНаличияПоступленийПоЗаявке(Ссылка.ЗаявкаНаРсходованиеСредств);
	КонецЕсли;
	
	#Область АК_ОтключенныйКод 
	//Если ЗначениеЗаполнено(ЭтотОбъект.ЗаявкаНаРсходованиеСредств) И ТипЗнч(ЭтотОбъект.ЗаявкаНаРсходованиеСредств)=Тип("ДокументСсылка.ЗаявкаНаУслугиМатериалы") Тогда
	//	ЗаявкаОбъект = ЭтотОбъект.ЗаявкаНаРсходованиеСредств.ПолучитьОбъект();
	//	ВсеДокументыВНаличииЗаявка = ЗаявкаОбъект.ВсеДокументыВНаличии;
	//	СуммаОстатка = ЗаявкаОбъект.ВсеДокументыВНаличии(ЭтотОбъект.Ссылка);
	//	
	//	Если (СуммаОстатка-ЭтотОбъект.СуммаДокумента)<0 Тогда
	//		//Отказ = истина;
	//		Сообщить("Сумма поступлений по заявке документа превышает сумму заявки!");
	//		//Возврат;
	//	ИначеЕсли СуммаОстатка=ЭтотОбъект.СуммаДокумента Тогда
	//		ЗаявкаОбъект.ВсеДокументыВНаличии = Истина;	
	//	КонецЕсли;	
	//	
	//	
	//	Если ЗаявкаОбъект.ВсеДокументыВНаличии<>ВсеДокументыВНаличииЗаявка Тогда
	//		ЗаявкаОбъект.Записать(РежимЗаписиДокумента.Запись);
	//	КонецЕсли;	
	//КонецЕсли;
	//
	//Если ЗначениеЗаполнено(Ссылка.ЗаявкаНаРсходованиеСредств) И ТипЗнч(Ссылка.ЗаявкаНаРсходованиеСредств)=Тип("ДокументСсылка.ЗаявкаНаУслугиМатериалы") И Ссылка.ЗаявкаНаРсходованиеСредств<>ЗаявкаНаРсходованиеСредств Тогда
	//	ЗаявкаОбъект = Ссылка.ЗаявкаНаРсходованиеСредств.ПолучитьОбъект();
	//	ВсеДокументыВНаличииЗаявка = ЗаявкаОбъект.ВсеДокументыВНаличии;
	//	СуммаОстатка = ЗаявкаОбъект.ВсеДокументыВНаличии(ЭтотОбъект.Ссылка);
	//	#Если Клиент Тогда
	//		Если (СуммаОстатка-ЭтотОбъект.СуммаДокумента)<0 Тогда
	//			//Отказ = истина;
	//			//Сообщить("Сумма поступлений по заявке документа превышает сумму заявки!");
	//			//Возврат;
	//		КонецЕсли;	
	//	#КонецЕсли
	//	Если ЗаявкаОбъект.ВсеДокументыВНаличии<>ВсеДокументыВНаличииЗаявка Тогда
	//		ЗаявкаОбъект.Записать(РежимЗаписиДокумента.Запись);
	//	КонецЕсли;	
	//КонецЕсли;
	#КонецОбласти 
	//---АК POZM 
	
	//++АК luza 17.05.2018 закоментировал то что ниже
	//т.к. может вызывать блокиовке при длительном сравнении. Вынес в регламентное задание
	////++ АК 15.12.2017 luza ИП-00017451
	//
	////при изменении документа, если он был привязан к распознанному и вер. файлу
	////необходимо провести повторное сравнение
	//Запрос = Новый Запрос;	
	//Запрос.Текст = "ВЫБРАТЬ
	//|	РезультатСравненияФайлаСОбъектом.Файл,
	//|	РезультатСравненияФайлаСОбъектом.ОбъектСравнения	
	//|ИЗ
	//|	РегистрСведений.РезультатСравненияФайлаСОбъектом КАК РезультатСравненияФайлаСОбъектом
	//|ГДЕ
	//|	РезультатСравненияФайлаСОбъектом.ОбъектСравнения = &ОбъектСравнения";
	//Запрос.УстановитьПараметр("ОбъектСравнения", ЭтотОбъект.Ссылка);
	//
	//ТЗ = Запрос.Выполнить().Выгрузить();
	//Для каждого Стр ИЗ ТЗ Цикл
	//	Попытка
	//		Справочники.АК_АлгоритмыРаспознаванияФайлов.СравнитьОбъектИФайл(Стр.Файл, Стр.ОбъектСравнения);
	//	Исключение
	//	КонецПопытки;	
	//КонецЦикла;
	//
	////-- АК 15.12.2017 luza ИП-00017451	
	
	Набор = РегистрыСведений.РезультатСравненияФайлаСОбъектом.СоздатьНаборЗаписей();
	Набор.Отбор.ОбъектСравнения.Установить(ЭтотОбъект.Ссылка);
	Набор.Прочитать();
	
	Для каждого Запись Из Набор Цикл
		Запись.Пересчитать = Истина;
	КонецЦикла;	
	
	Набор.Записать();

	//--АК luza 17.05.2018
	
КонецПроцедуры

//---AK obue

//+++АК POZM 2018.05.31 ИП-00018739 
#Область АК_ОтключенныйКод 

//Процедура ВыполнитьДвиженияПоАвансамАкцептантов()
//	Запись = РегистрыСведений.ОтложенныеДвиженияДокументов.СоздатьМенеджерЗаписи();
//	Запись.Документ = ЭтотОбъект.Ссылка;
//	Запись.ДатаДокумента = ЭтотОбъект.Дата;
//	Запись.Записать();
//КонецПроцедуры	

#КонецОбласти 
//---АК POZM 
//+++AK susk
Процедура ПроверкаСчетовНаКорректность(Отказ)
	
	Если НеВыгружатьВБУ Тогда
		Возврат;
	КонецЕсли;
	
	НачалоВеденияУчетаОСМСФО = АК_УчетМСФОПривилегированный.ПолучитьПараметрыУчетаОС().НачалоВеденияУчета;
	УчетОСМСФО = (ЭтотОбъект.Дата > НачалоВеденияУчетаОСМСФО);  
	
	Для Каждого Стр Из Товары Цикл
		
		Если ЗначениеЗаполнено(Стр.ОсновноеСредство) И УчетОСМСФО Тогда
			Если Стр.СчетЗатрат = ПланыСчетов.Финансовый.ОсновныеСредстваВОрганизации Тогда
				Если Стр.СчетУчета <> ПланыСчетов.Хозрасчетный.ОСвОрганизации Тогда
					ОбщегоНазначения.СообщитьОбОшибке("Строка № " + Строка(Стр.НомерСтроки) + " - не совпадает Счет учета (БУ) и Счет учета. Счет учета (БУ) должен быть: " + Строка(ПланыСчетов.Хозрасчетный.ОСвОрганизации), Отказ);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры

//+++АК pozm 23.08.2017 ИП-00016295
Процедура ВыполнитьДвиженияВРасчетыПоСделкам()
	ДвиженияПоСделкам = Движения.РасчетыПоСделкамСПоставщиками;
	ДвиженияПоСделкам.Записывать = Истина;
	ДвиженияПоСделкам.Очистить();
	
	//+++АК POZM 2017.10.22 ИП-00017015 
	//Для Каждого Стр Из ЭтотОбъект.НоменклатураДопОборудование Цикл
	//
	//	Если Не ЗначениеЗаполнено(Стр.Сделка) Тогда
	//		Продолжить;
	//	КонецЕсли;	
	//	
	//			 
	//	НД = ДвиженияПоСделкам.ДобавитьПриход();
	//	НД.Сделка = Стр.Сделка;
	//	НД.Комплектация = ЭтотОбъект.Ссылка;
	//	НД.ДатаПлатежа = ЭтотОбъект.Дата;
	//	НД.Период = ЭтотОбъект.Дата;
	//	НД.Сумма = Стр.Сумма;
		ТекстЗапроса="ВЫБРАТЬ
		             |	РасчетыПоСделкамСПоставщиками.Сделка,
		             |	РасчетыПоСделкамСПоставщиками.УИН_Этапа,
		             |	РасчетыПоСделкамСПоставщиками.Комплектация,
		             |	РасчетыПоСделкамСПоставщиками.УИН_СтрокиКомплектации,
		             |	РасчетыПоСделкамСПоставщиками.ДатаПлатежа,
		             |	РасчетыПоСделкамСПоставщиками.Сумма / ПредпоступлениеПоКомплектацииТовары.Количество * ПоступлениеДопРасходовОборудование.Количество КАК Сумма
		             |ИЗ
		             |	Документ.ПоступлениеДопРасходов.НоменклатураДопОборудование КАК ПоступлениеДопРасходовОборудование
		             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПредпоступлениеПоКомплектации.Товары КАК ПредпоступлениеПоКомплектацииТовары
		             |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыПоСделкамСПоставщиками КАК РасчетыПоСделкамСПоставщиками
		             |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СделкаСПоставщиком.ГрафикОплат КАК СделкаСПоставщикомГрафикОплат
		             |					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СделкаСПоставщиком.ЭтапыСделки КАК СделкаСПоставщикомЭтапыСделки
		             |					ПО (СделкаСПоставщикомЭтапыСделки.НомерСтроки = СделкаСПоставщикомГрафикОплат.НомерСтрокиГрафика)
		             |						И (СделкаСПоставщикомЭтапыСделки.Ссылка = СделкаСПоставщикомГрафикОплат.Ссылка)
		             |				ПО РасчетыПоСделкамСПоставщиками.Сделка = СделкаСПоставщикомГрафикОплат.Ссылка
		             |					И РасчетыПоСделкамСПоставщиками.УИН_Этапа = СделкаСПоставщикомГрафикОплат.УИН_Строки
		             |			ПО (РасчетыПоСделкамСПоставщиками.Регистратор = ПредпоступлениеПоКомплектацииТовары.Ссылка)
		             |				И (РасчетыПоСделкамСПоставщиками.Комплектация = ПредпоступлениеПоКомплектацииТовары.Ссылка)
		             |				И (РасчетыПоСделкамСПоставщиками.УИН_СтрокиКомплектации = ПредпоступлениеПоКомплектацииТовары.УИН_Строки)
		             |				И (РасчетыПоСделкамСПоставщиками.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
		             |		ПО ПоступлениеДопРасходовОборудование.Сделка = ПредпоступлениеПоКомплектацииТовары.Сделка
		             |			И ПоступлениеДопРасходовОборудование.Предпоступление = ПредпоступлениеПоКомплектацииТовары.Ссылка
		             |			И ПоступлениеДопРасходовОборудование.Номенклатура = ПредпоступлениеПоКомплектацииТовары.Номенклатура
		             |ГДЕ
		             |	ПоступлениеДопРасходовОборудование.Ссылка = &Ссылка
		             |	И СделкаСПоставщикомЭтапыСделки.ВариантОплаты <> ЗНАЧЕНИЕ(Перечисление.ВариантыОплаты.ВУказаннуюДату)";
	Запрос = Новый Запрос(ТекстЗапроса);			 
	Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
		
	ДвиженияПоСделкам = Движения.РасчетыПоСделкамСПоставщиками;
	ДвиженияПоСделкам.Записывать = Истина;
	ДвиженияПоСделкам.Очистить();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НД = ДвиженияПоСделкам.ДобавитьРасход();
		ЗаполнитьЗначенияСвойств(НД,Выборка);
		НД.Период = ЭтотОбъект.Дата;
		НД = ДвиженияПоСделкам.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(НД,Выборка,"Сделка,ДатаПлатежа,Сумма");
		НД.Комплектация = ЭтотОбъект.Ссылка;
		НД.Период = ЭтотОбъект.Дата;
	КонецЦикла;
	//---АК POZM 
КонецПроцедуры	
//---АК pozm 23.08.2017 ИП-00016295
Процедура ПриКопировании(ОбъектКопирования)
	ОбщегоНазначенияКлиентСервер.ПроверкаРеквизитовПомеченныхНаУдаление(ЭтотОбъект);
КонецПроцедуры

//+++АК POZM 2017.10.22 ИП-00017015
Процедура ВыполнитьДвиженияПоТМЦКПоступлению()
	
	ДвиженияТМЦ = Движения.ТМЦКПоступлению;
	ДвиженияТМЦ.Записывать = Истина;
	ДвиженияТМЦ.Очистить();
	
	Для Каждого СтрокаОборудования Из ЭтотОбъект.НоменклатураДопОборудование Цикл 
		Если ЗначениеЗаполнено(СтрокаОборудования.Предпоступление) Тогда
			Движение=ДвиженияТМЦ.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Количество = СтрокаОборудования.Количество;
			Движение.Номенклатура = СтрокаОборудования.Номенклатура;
			Движение.Период = ЭтотОбъект.Дата;
			Движение.Предпоступление = СтрокаОборудования.Предпоступление;
			Движение.Сделка = СтрокаОборудования.Сделка;
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

Процедура ВыполнитьДвиженияПоРасчетамСКонтрагентами() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Движения.РасчетыСКонтрагентами.Записывать = Истина;
	Движения.РасчетыСКонтрагентами.Очистить();
	
	ЕстьСделки =Ложь;
	
	Для Каждого Строка Из НоменклатураДопОборудование Цикл
		Если ЗначениеЗаполнено(Строка.Сделка) Тогда
			ЕстьСделки = Истина;
			Прервать;
		КонецЕсли; 
	КонецЦикла;  
	
	Если НЕ ЕстьСделки Тогда
		БухгалтерскийУчетРасчетовСКонтрагентами.СформироватьДвиженияПоРасчетамСКонтрагентами(ЭтотОбъект);	
		Возврат;
	КонецЕсли; 
	
	СчетаДляУчетаНаРегистреРасчетовСКонтрагентами = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаДляУчетаНаРегистреРасчетовСКонтрагентами();
	
	СчетУчета = Неопределено;
	
	Для Каждого Запись ИЗ Движения.Финансовый Цикл
		Если СчетаДляУчетаНаРегистреРасчетовСКонтрагентами.Найти(Запись.СчетКт) <> Неопределено Тогда
			СчетУчета = Запись.СчетКт;
			Прервать;
		КонецЕсли; 
	КонецЦикла;  
	
	Если Дата<Дата(2017,1,1) ИЛИ СчетУчета = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Движения по сделкам с поставщиками
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПоступлениеДопРасходовОборудование.Сделка,
	                      |	СУММА(ПоступлениеДопРасходовОборудование.Сумма + ВЫБОР
	                      |			КОГДА ПоступлениеДопРасходовОборудование.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.НДССверху)
	                      |				ТОГДА ПоступлениеДопРасходовОборудование.СуммаНДС
	                      |			ИНАЧЕ 0
	                      |		КОНЕЦ) КАК Сумма
	                      |ПОМЕСТИТЬ ВТ_ПоступленияПоСделкам
	                      |ИЗ
	                      |	Документ.ПоступлениеДопРасходов.НоменклатураДопОборудование КАК ПоступлениеДопРасходовОборудование
	                      |ГДЕ
	                      |	ПоступлениеДопРасходовОборудование.Ссылка = &Ссылка
	                      |	И ПоступлениеДопРасходовОборудование.Сделка.Ссылка ЕСТЬ НЕ NULL 
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ПоступлениеДопРасходовОборудование.Сделка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	СделкаСПоставщикомЭтапыСделки.Ссылка КАК Сделка,
	                      |	СУММА(СделкаСПоставщикомГрафикОплат.СуммаОплаты) КАК АвансСделки
	                      |ПОМЕСТИТЬ ВТ_АвансыВСделках
	                      |ИЗ
	                      |	Документ.СделкаСПоставщиком.ЭтапыСделки КАК СделкаСПоставщикомЭтапыСделки
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СделкаСПоставщиком.ГрафикОплат КАК СделкаСПоставщикомГрафикОплат
	                      |		ПО СделкаСПоставщикомЭтапыСделки.НомерСтроки = СделкаСПоставщикомГрафикОплат.НомерСтрокиГрафика
	                      |			И СделкаСПоставщикомЭтапыСделки.Ссылка = СделкаСПоставщикомГрафикОплат.Ссылка
	                      |ГДЕ
	                      |	СделкаСПоставщикомЭтапыСделки.ВариантОплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОплаты.ВУказаннуюДату)
	                      |	И СделкаСПоставщикомЭтапыСделки.Ссылка В
	                      |			(ВЫБРАТЬ
	                      |				ВТ_ПоступленияПоСделкам.Сделка
	                      |			ИЗ
	                      |				ВТ_ПоступленияПоСделкам)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	СделкаСПоставщикомЭтапыСделки.Ссылка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ПоступленияПоСделкам.Сделка,
	                      |	ВТ_ПоступленияПоСделкам.Сумма,
	                      |	ВЫБОР
	                      |		КОГДА ВТ_ПоступленияПоСделкам.Сделка.СуммаСделки = 0
	                      |			ТОГДА 0
	                      |		ИНАЧЕ ВТ_ПоступленияПоСделкам.Сумма * ЕСТЬNULL(ВТ_АвансыВСделках.АвансСделки, 0) / ВТ_ПоступленияПоСделкам.Сделка.СуммаСделки
	                      |	КОНЕЦ КАК АвансПоСделке
	                      |ИЗ
	                      |	ВТ_ПоступленияПоСделкам КАК ВТ_ПоступленияПоСделкам
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АвансыВСделках КАК ВТ_АвансыВСделках
	                      |		ПО ВТ_ПоступленияПоСделкам.Сделка = ВТ_АвансыВСделках.Сделка");

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		Движение = Движения.РасчетыСКонтрагентами.Добавить();
		Движение.ВидДвижения	= ВидДвиженияНакопления.Расход;
		Движение.Регистратор	= ЭтотОбъект.Ссылка;
		Движение.Период			= ЭтотОбъект.Дата;
		Движение.Организация = ЭтотОбъект.Организация;
		Движение.Контрагент = ЭтотОбъект.Контрагент;
		Движение.Сделка = Выборка.Сделка;
		Движение.СчетУчета = ПланыСчетов.Финансовый.ПрочаяЗадолженность;      // все движения по сделкам учитываем на 60.4
		Движение.Сумма			= Выборка.Сумма;
		Движение.АвансПоСделке= Выборка.АвансПоСделке;
	КонецЦикла;   
	
	// Движение по заявками и без сделок
	СуммаПоСделкам = Движения.РасчетыСКонтрагентами.Итог("Сумма");
	СуммаВзаиморасчетов = 0;
	
	Для Каждого Проводка ИЗ Движения.Финансовый Цикл
		Если СчетаДляУчетаНаРегистреРасчетовСКонтрагентами.Найти(Проводка.СчетКт) <> Неопределено Тогда
			СуммаВзаиморасчетов = СуммаВзаиморасчетов + Проводка.Сумма;
		КонецЕсли; 
	КонецЦикла;  
	
	Если СуммаВзаиморасчетов>СуммаПоСделкам Тогда
		Движение = Движения.РасчетыСКонтрагентами.Добавить();
		Движение.ВидДвижения	= ВидДвиженияНакопления.Расход;
		Движение.Регистратор	= ЭтотОбъект.Ссылка;
		Движение.Период			= ЭтотОбъект.Дата;
		Движение.Организация = ЭтотОбъект.Организация;
		Движение.Контрагент = ЭтотОбъект.Контрагент;
		Движение.Сделка = Выборка.Сделка;
		Движение.СчетУчета = СчетУчета;
		Движение.Сумма			= СуммаВзаиморасчетов - СуммаПоСделкам;
	КонецЕсли; 
	
КонецПроцедуры 
//---АК POZM 

//+++АК Susk (Суслин К.В.) 2017.12.27 ИП-00017530
Процедура ПроверкаНоменклатурыДокумента(Отказ)
	
	МассивНоменклатур = Товары.ВыгрузитьКолонку("Номенклатура");
	ЗначРеквизитовНоменклатур = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивНоменклатур, "ЭтоГруппа");
	
	Для Каждого Стр Из Товары Цикл
		Если ЗначРеквизитовНоменклатур[Стр.Номенклатура]["ЭтоГруппа"] Тогда		
			ОбщегоНазначения.СообщитьОбОшибке("В строке № " + Строка(Стр.НомерСтроки) + " - выбрана номенклатура, являющаяся Группой!", Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//+++АК SHEP 2018.01.30 ИП-00017365.02
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ТранспортныеУслуги Тогда
		ПозДляУдаления = ПроверяемыеРеквизиты.Найти("Товары.Партия");
		Если ПозДляУдаления <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(ПозДляУдаления);
		КонецЕсли;
	КонецЕсли;
	
	//+++АК Susk (Суслин К.В.) 2018.08.01 ИП-00019369
	ПроверкаКорректностиДоговора(Отказ);
	//---АК Susk (Суслин К.В.) 	 
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.07.05 ИП-00018553^08 
Процедура СверитьСуммыПоТранспортнымДокументам(Отказ)
	
	Если ТранспортныеДокументы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	МИНИМУМ(ПоступлениеДопРасходовТранспортныеДокументы.Документ.Дата) КАК МинимальнаяДата,
	               |	МАКСИМУМ(ПоступлениеДопРасходовТранспортныеДокументы.Документ.Дата) КАК МаксимальнаяДата
	               |ИЗ
	               |	Документ.ПоступлениеДопРасходов.ТранспортныеДокументы КАК ПоступлениеДопРасходовТранспортныеДокументы
	               |ГДЕ
	               |	ПоступлениеДопРасходовТранспортныеДокументы.Ссылка = &Ссылка";
	
	ВыборкаДаты = Запрос.Выполнить().Выбрать();	
	ВыборкаДаты.Следующий();
	Запрос.УстановитьПараметр("НачалоПериода", ВыборкаДаты.МинимальнаяДата);
	Запрос.УстановитьПараметр("КонецПериода", ВыборкаДаты.МаксимальнаяДата);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеДопРасходовТранспортныеДокументы.НомерСтроки,
	               |	ПоступлениеДопРасходовТранспортныеДокументы.Документ,
	               |	ВЫБОР
	               |		КОГДА ПоступлениеДопРасходов.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.НДСвТомЧисле)
	               |			ТОГДА ПоступлениеДопРасходовТранспортныеДокументы.СуммаДокумента - ПоступлениеДопРасходовТранспортныеДокументы.СуммаНДС
	               |		ИНАЧЕ ПоступлениеДопРасходовТранспортныеДокументы.СуммаДокумента
	               |	КОНЕЦ КАК СуммаДокумента,
	               |	ПоступлениеДопРасходовТранспортныеДокументы.СуммаНДС
	               |ПОМЕСТИТЬ Сводная
	               |ИЗ
	               |	Документ.ПоступлениеДопРасходов.ТранспортныеДокументы КАК ПоступлениеДопРасходовТранспортныеДокументы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
	               |		ПО ПоступлениеДопРасходовТранспортныеДокументы.Ссылка = ПоступлениеДопРасходов.Ссылка
	               |ГДЕ
	               |	ПоступлениеДопРасходовТранспортныеДокументы.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(ВЫБОР
	               |			КОГДА ФинансовыйДвиженияССубконто.СчетДт В (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.Товары), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.Материалы))
	               |				ТОГДА ЕСТЬNULL(ФинансовыйДвиженияССубконто.Сумма, 0)
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК СуммаПоПроводкам,
	               |	СУММА(ВЫБОР
	               |			КОГДА ФинансовыйДвиженияССубконто.СчетДт В (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.Товары), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.Материалы))
	               |				ТОГДА 0
	               |			ИНАЧЕ ЕСТЬNULL(ФинансовыйДвиженияССубконто.Сумма, 0)
	               |		КОНЕЦ) КАК СуммаНДСпоПроводкам,
	               |	ФинансовыйДвиженияССубконто.Регистратор
	               |ПОМЕСТИТЬ СводнаяРег
	               |ИЗ
	               |	РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
	               |			&НачалоПериода,
	               |			&КонецПериода,
	               |			СчетДт В (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.Товары), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.Материалы), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.НалогиУН))
	               |				И Регистратор В
	               |					(ВЫБРАТЬ
	               |						Сводная.Документ
	               |					ИЗ
	               |						Сводная),
	               |			,
	               |			) КАК ФинансовыйДвиженияССубконто
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ФинансовыйДвиженияССубконто.Регистратор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Сводная.НомерСтроки,
	               |	Сводная.Документ,
	               |	Сводная.СуммаДокумента,
	               |	Сводная.СуммаНДС,
	               |	СводнаяРег.СуммаПоПроводкам,
	               |	СводнаяРег.СуммаНДСпоПроводкам
	               |ИЗ
	               |	Сводная КАК Сводная
	               |		ЛЕВОЕ СОЕДИНЕНИЕ СводнаяРег КАК СводнаяРег
	               |		ПО Сводная.Документ = СводнаяРег.Регистратор
	               |ГДЕ
	               |	(Сводная.СуммаДокумента <> СводнаяРег.СуммаПоПроводкам
	               |			ИЛИ Сводная.СуммаНДС <> СводнаяРег.СуммаНДСпоПроводкам)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ОбщегоНазначения.СообщитьОбОшибке("В строке № " + Строка(Выборка.НомерСтроки) + " сумма проводок транспортного документа отличается от указанной суммы в таблице!", Отказ);
	КонецЦикла;
	
КонецПроцедуры				   

//+++АК Susk (Суслин К.В.) 2018.08.01 ИП-00019369
Процедура ПроверкаКорректностиДоговора(Отказ)
	
	СтруктураДоговор = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ДоговорКонтрагента, "Владелец");
	
	Если СтруктураДоговор.Владелец <> Контрагент Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Контрагент в договоре отличается от контрагента документа!", Отказ);
	КонецЕсли;	
	
КонецПроцедуры  

//+++АК Susk (Суслин К.В.) 2018.11.29 ИП-00020534
Процедура ЗаполнитьТоварнуюПроводку(Проводка, СтрокаТЧ, РеквизитыПТУ, Отказ)
	
	СтруктураПоиска = Новый Структура("Партия,Номенклатура", СтрокаТч.Партия, СтрокаТЧ.Номенклатура);
	
	НайдСтрПартии = РеквизитыПТУ.НайтиСтроки(СтруктураПоиска);
	
	Если НЕ НайдСтрПартии.Количество() Тогда
	    ОбщегоНазначения.СообщитьОбОшибке("Не найдена позиция: " + СтрокаТЧ.Номенклатура + ", в документе партии: " + СтрокаТЧ.Партия, Отказ);
		Возврат;
	КонецЕсли;                                                             	
	
	ЗначенияРеквизитовПТУ = НайдСтрПартии[0];
	
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, ЗначенияРеквизитовПТУ.МестоХранения);
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, ЗначенияРеквизитовПТУ.Номенклатура);
	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, ЗначенияРеквизитовПТУ.СтатьяТовародвижения);	
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.11.29 ИП-00020534
Функция ПолучитьРеквизитыПартий()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПоступлениеТоваровУслуг.Ссылка КАК Партия,
	               |	Склады.Владелец КАК МестоХранения,
	               |	ПоступлениеТоваровУслугТовары.Номенклатура,
	               |	ПоступлениеТоваровУслугТовары.СтатьяТовародвижения
	               |ИЗ
	               |	Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	               |		ПО ПоступлениеДопРасходовТовары.Партия = ПоступлениеТоваровУслуг.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	               |		ПО ПоступлениеДопРасходовТовары.Партия = ПоступлениеТоваровУслугТовары.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	               |		ПО (ПоступлениеТоваровУслуг.Склад = Склады.Ссылка)
	               |ГДЕ
	               |	ПоступлениеДопРасходовТовары.Ссылка = &Ссылка
	               |	И ПоступлениеДопРасходовТовары.Партия <> ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ТзРеквизитыПартий = Запрос.Выполнить().Выгрузить();
	ТзРеквизитыПартий.Индексы.Добавить("Партия");
	ТзРеквизитыПартий.Индексы.Добавить("Номенклатура");
	
	Возврат ТзРеквизитыПартий;	
	
КонецФункции

//+++AK susk
НеПроверятьСчета = Ложь;
//+++АК Susk (Суслин К.В.) 2018.07.04 ИП-00018553^08
ПроверкаПроводокПоТранспорту = Ложь;
 
