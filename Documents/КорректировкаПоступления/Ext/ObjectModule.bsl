Перем СтруктурныеЕдиницыСторонняяПереработка; //+++АК SHEP 2018.05.03 ИП-00018453
Перем СкладПереработчика; //+++АК SHEP 2018.05.03 ИП-00018453

Процедура ЗаполнитьСвойстваШапки() Экспорт

	Если НЕ ЗначениеЗаполнено(ДокументПоступления) Тогда
		Возврат;
	КонецЕсли;
	
	ДокументПоступленияСсылка = УчетНДСПереопределяемый.ПолучитьИсправляемыйДокументПоступления(ДокументПоступления, Истина);
	
	Если НЕ ЗначениеЗаполнено(ДокументПоступленияСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	КорректировкаКорректировочногоСчетаФактуры = Ложь;
	
	Если ТипЗнч(УчетНДСПереопределяемый.ПолучитьИсправляемыйДокументПоступления(ДокументПоступления, Ложь)) = Тип("ДокументСсылка.КорректировкаПоступления") 
		И ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда
		КорректировкаКорректировочногоСчетаФактуры = Истина;
	КонецЕсли;
	
	Если ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда
		Если КорректировкаКорректировочногоСчетаФактуры Тогда
			ИсправляемыйДокументПоступления = УчетНДСПереопределяемый.ПолучитьИсправляемыйДокументПоступления(ДокументПоступления, Ложь);
		Иначе	
			ИсправляемыйДокументПоступления = УчетНДСПереопределяемый.ПолучитьИсправляемыйДокументПоступления(ДокументПоступления, Истина);
		КонецЕсли;	
	Иначе
		ИсправляемыйДокументПоступления = УчетНДСПереопределяемый.ПолучитьИсправляемыйДокументПоступления(ДокументПоступления, Ложь);
	КонецЕсли;
	
	РеквизитыКЗаполнению = Новый Структура("Организация, Контрагент, ДоговорКонтрагента, ВариантрасчетаНДС, Склад, НеВыгружатьВБУ, СчетУчетаРасчетовСКонтрагентом");
	
	ЗаполнитьЗначенияСвойств(РеквизитыКЗаполнению, ДокументПоступления);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыКЗаполнению);

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
	
		// Заполним реквизиты из стандартного набора по документу основанию.
		ДокументПоступления = ДанныеЗаполнения;
		ЗаполнитьСвойстваШапки();
		
		Документы.КорректировкаПоступления.ЗаполнитьПоДокументу(ЭтотОбъект);
	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	// Контроль количества претензии поставщику в табличной части Товары
	Для каждого Стр Из Товары Цикл
	
		ТекущееКоличествоПретензия = Стр.КоличествоДоИзменения - Стр.Количество;
		Если ТекущееКоличествоПретензия <> Стр.КоличествоПретензияПоставщику Тогда
			Сообщить("В строке " + Строка(Стр.НомерСтроки) + " табличной части ""Товары"" количество, отнесенное на претензию поставщику: " + Формат(ТекущееКоличествоПретензия, "ЧДЦ=3") + ", не соответствует количеству в первичном документе: " + Формат(Стр.КоличествоПретензияПоставщику, "ЧДЦ=3")); 
			Отказ = Истина;
		КонецЕсли;
	
	КонецЦикла;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Движения.Финансовый.Записывать = Истина;
	Движения.Финансовый.Очистить();
	
	// Получим дату начала начисления претензий
	ДатаНачалаНачисленияПретензий = Константы.ДатаНачалаНачисленияПретензийПоставщикам.Получить();

	// НЕДОСТАЧИ, ИЗЛИШКИ ЗА СЧЕТ ПОСТАВЩИКА (СТОРНО)
	Если ЗначениеЗаполнено(ДатаНачалаНачисленияПретензий) И Дата >= ДатаНачалаНачисленияПретензий Тогда 
		ОтразитьДвиженияПоПретензиямПоставщикам();
	КонецЕсли;
	
	//+++АК Susk (Суслин К.В.) 2017.11.21 ИП-00016528	 	
	ОбработкаПроведения_ПТУ(Отказ, РежимПроведения);
	
	Для Каждого Стр Из Движения.Финансовый Цикл
		Стр.Регистратор = ИсправляемыйДокументПоступления;
	КонецЦикла;
	//
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.11.21 ИП-00016528
Процедура ОбработкаПроведения_ПТУ(Отказ, РежимПроведения)
	
	ЕстьМатериалыВУслугах = Ложь;
	
	Если ЗначениеЗаполнено(Склад) И Склад.ЗаблокироватьДвижениеПоСкладу И Склад.ДатаБлокировкиДвижений <= НачалоДня(ТекущаяДата()) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Движения по складу " + Склад.Наименование + " заблокированы! Проведение невозможно.", Отказ);		
	КонецЕсли;
	
	Для Каждого СтрокаТЧ Из Услуги Цикл
		
		Если НЕ НеВыгружатьВБУ Тогда
			
			ТекСчетЗатратБУ = СтрокаТЧ.СчетЗатратБУ;
			
			Если ЗначениеЗаполнено(ТекСчетЗатратБУ) Тогда
				Если ТекСчетЗатратБУ.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.Материалы) Тогда
					ЕстьМатериалыВУслугах = Истина;
					Если  СтрокаТЧ.Номенклатура.ВидНоменклатуры <> Перечисления.ВидыНоменклатуры.Материал Тогда
						Сообщить("В строке №" + Формат(СтрокаТЧ.НомерСтроки, "ЧГ=") +
							" табличной части ""Услуги"" указана номенклатура с некорректным видом номенклатуры! Проведение невозможно.");
						Отказ = Истина;
					КонецЕсли;	
				ИначеЕсли ТекСчетЗатратБУ.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.Товары) Тогда
					Если  СтрокаТЧ.Номенклатура.ВидНоменклатуры <> Перечисления.ВидыНоменклатуры.Товар Тогда
						Сообщить("В строке №" + Формат(СтрокаТЧ.НомерСтроки, "ЧГ=") +
							" табличной части ""Услуги"" указана номенклатура с некорректным видом номенклатуры! Проведение невозможно.");
						Отказ = Истина;
					КонецЕсли;	
				ИначеЕсли  ТекСчетЗатратБУ.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасходыНаПродажу) Тогда// Услуги
					Если  СтрокаТЧ.Номенклатура.ВидНоменклатуры <> Перечисления.ВидыНоменклатуры.Услуга Тогда
						Сообщить("В строке №" + Формат(СтрокаТЧ.НомерСтроки, "ЧГ=") +
							" табличной части ""Услуги"" указана номенклатура с некорректным видом номенклатуры! Проведение невозможно.44 счет БУ используется только с видом номенклатуры ""услуга"". Замените номенклатуру.");
						Отказ = Истина;
					КонецЕсли;		
				КонецЕсли;	
			Иначе	
				Сообщить("В строке №" + Формат(СтрокаТЧ.НомерСтроки, "ЧГ=") +
							" табличной части ""Услуги"" не указан Счет затрат БУ! Проведение невозможно.");
				Отказ = Истина;
			КонецЕсли;
			
			Если НЕ Отказ
					И НЕ ЗначениеЗаполнено(СтрокаТЧ.СубконтоБУ1)
					И ТекСчетЗатратБУ.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасходыНаПродажу) Тогда
				Если НЕ ИсправляемыйДокументПоступления.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ПриходИзПереработки Тогда	
					Сообщить("В строке №" + СтрокаТЧ.НомерСтроки + " не заполнено ""Субконто БУ 1""! Проведение невозможно!");
					Отказ = Истина;
				КонецЕсли;	
			КонецЕсли;
			
		КонецЕсли;	
		
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.СчетЗатратНУ) Тогда
			Если НЕ НеВыгружатьВБУ Тогда					
				Сообщить("В строке №" + Формат(СтрокаТЧ.НомерСтроки, "ЧГ=") +
							" табличной части ""Услуги"" не указан Счет затрат НУ! Проведение невозможно.");
				Отказ = Истина;
			КонецЕсли;	
		КонецЕсли;		
		
		Если СтрокаТЧ.СчетЗатрат.Родитель = ПланыСчетов.Финансовый.ЗатратыДляРаспределения Тогда
			Если СтрокаТЧ.СчетЗатрат = ПланыСчетов.Финансовый.ЗатратыДляОтнесенияНаИнвестиции Тогда
				СтатьяДРВСтроке = СтрокаТЧ.Субконто1;
				НомерСубконто = 1;
			Иначе
				СтатьяДрВСтроке = СтрокаТЧ.Субконто2;
				НомерСубконто = 2;
			КонецЕсли;
			
			Если СтатьяДРВСтроке <> ИсправляемыйДокументПоступления.СтатьяЗатрат И Не РольДоступна("ПолныеПрава") Тогда
				ОбщегоНазначения.СообщитьОбОшибке("В строке № " + Строка(СтрокаТЧ.НомерСтроки) + " табличной части ""Услуги"", Субконто " + Строка(НомерСубконто) + " отличается от статьи затрат на вкладке ""Дополнительно"" у документа поступления", Отказ);
			КонецЕсли;
		КонецЕсли;
				
	КонецЦикла;	
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// служ. таблицы
	МВТ = Новый МенеджерВременныхТаблиц;
	Номенклатура = ЭтотОбъект.Товары.ВыгрузитьКолонку("Номенклатура");
	ТаблицаСпецификаций 			= Документы.ПоступлениеТоваровУслуг.ПолучитьСпецификации(Дата, Номенклатура, ИсправляемыйДокументПоступления.Контрагент,ИсправляемыйДокументПоступления.СтруктурнаяЕдиница, МоментВремени(), МВТ);
	ТаблицаСпецификацийКомплектов	= Документы.ПоступлениеТоваровУслуг.ПолучитьСпецификацииКомплектов(Дата, Номенклатура, ИсправляемыйДокументПоступления.Контрагент, МВТ);
	ТаблицаТоваровДляСторнирования 	= Документы.ПоступлениеТоваровУслуг.ПолучитьТаблицуТоваровДляСторнированияНаценки(ТаблицаСпецификаций, ИсправляемыйДокументПоступления.Контрагент, Дата);
	
	Если НЕ Дата < '20131114' Тогда
		
		НастройкаОтраженияНДСПоТоварам = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.НДС_ТоварыПоступлениеТоваровИУслуг, Дата);
		
		Если ИсправляемыйДокументПоступления.ПриходныеОрдера.Количество() > 0 Тогда
			
			// Получим дату начала начисления претензий
			ДатаНачалаНачисленияПретензий = Константы.ДатаНачалаНачисленияПретензийПоставщикам.Получить();
			
			// Новая схема проведения
			Движения.Финансовый.Записывать = Истина;
			Движения.Финансовый.Очистить();			
			
			//+++shae 2018.08.30 ИП-00019212 
			ИсправляемыйДокументПоступленияДата = ИсправляемыйДокументПоступления.Дата;
			СтруктураНастроекОтражениеНДСПоТоварамБезНДС 	= ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.ОтражениеНДСПоТоварамБезНДС, ИсправляемыйДокументПоступленияДата);
			СтруктураНастроекПоступление_Излишки 			= ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.Поступление_Излишки, ИсправляемыйДокументПоступленияДата);
			СтруктураНастроекПоступление_Недостачи 			= ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.Поступление_Недостачи, ИсправляемыйДокументПоступленияДата);
			СтавкаНДСПриОтгрузкеБезНДС  = ОбщегоНазначенияСервер.ПолучитьСтавкуНДСПриОтгрузкеБезНДС(ИсправляемыйДокументПоступленияДата);
			ЦФО 						= ОбщиеПроцедуры.ПолучитьЦФОПоСтруктурнойЕдинице(ИсправляемыйДокументПоступления.СтруктурнаяЕдиница, ИсправляемыйДокументПоступленияДата);
			
			ТаблицаТавары = ПолучитьТаблицуТовары();		
			Для Каждого ТекСтрокаТовары Из ТаблицаТавары Цикл 
			//---shae 2018.08.30 ИП-00019212  			
			//Для Каждого ТекСтрокаТовары Из Товары Цикл  //shae 2018.08.30 ИП-00019212 закомментировано				
				
				СуммаВсегоПТУ = 0;
				СуммаВсегоКорр = 0;
				СуммаВсего = 0;
				СуммаНДСОтдельноПТУ = 0;
				СуммаНДСОтдельноКорр = 0;
				СуммаНДСОтдельно = 0;
				
				Если ЗначениеЗаполнено(НастройкаОтраженияНДСПоТоварам.Счет) Тогда
					Если ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле Тогда
						СуммаВсегоПТУ = ТекСтрокаТовары.СуммаДоИзменения - ТекСтрокаТовары.СуммаНДСДоИзменения;
						СуммаВсегоКорр = ТекСтрокаТовары.Сумма - ТекСтрокаТовары.СуммаНДС;
						СуммаВсего = СуммаВсегоКорр - СуммаВсегоПТУ;
					Иначе
						СуммаВсего = ТекСтрокаТовары.Сумма - ТекСтрокаТовары.СуммаДоИзменения;
					КонецЕсли;
					СуммаНДСОтдельно = ТекСтрокаТовары.СуммаНДС - ТекСтрокаТовары.СуммаНДСДоИзменения;
				Иначе	
					Если ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле Тогда
						СуммаВсего = ТекСтрокаТовары.Сумма - ТекСтрокаТовары.СуммаДоИзменения;
					Иначе
						СуммаВсегоПТУ = ТекСтрокаТовары.СуммаДоИзменения + ТекСтрокаТовары.СуммаНДСДоИзменения;
						СуммаВсегоКорр = ТекСтрокаТовары.Сумма + ТекСтрокаТовары.СуммаНДС;
						СуммаВсего = СуммаВсегоКорр - СуммаВсегоПТУ; 
					КонецЕсли;
				КонецЕсли;	
				
				КоличествоВПроводку = (ТекСтрокаТовары.Количество * ТекСтрокаТовары.Коэффициент) - (ТекСтрокаТовары.КоличествоДоИзменения * ТекСтрокаТовары.Коэффициент);
				
				Если КоличествоВПроводку <> 0 ИЛИ СуммаВсего <> 0 Тогда
				
					Проводка = Движения.Финансовый.Добавить();
				
					Проводка.Период = Дата;
				
					Проводка.СчетДт = ТекСтрокаТовары.СчетУчета;
					Проводка.КоличествоДт = КоличествоВПроводку;				
						
					ТекНоменклатура	= ТекСтрокаТовары.Номенклатура;
				
					Если ТекСтрокаТовары.СчетУчета = ПланыСчетов.Финансовый.Товары Тогда
						Проводка.СубконтоДт.МестаХранения  	= ИсправляемыйДокументПоступления.СтруктурнаяЕдиница;
						Проводка.СубконтоДт.Товары			= ТекНоменклатура;
						Проводка.СубконтоДт.СтатьиТовародвижения = ТекСтрокаТовары.СтатьяТовародвижения;
						Проводка.НомерЖурнала			= "ТД";
						Проводка.Содержание				= "Покупка товара";
					ИначеЕсли ТекСтрокаТовары.СчетУчета = ПланыСчетов.Финансовый.МатералыДляВыпуска Тогда
						Проводка.СубконтоДт.Склады		 		= Склад;
						Проводка.СубконтоДт.Материалы			= ТекНоменклатура;
						Проводка.СубконтоДт.СтатьиТовародвижения = ТекСтрокаТовары.СтатьяТовародвижения;						
						Проводка.НомерЖурнала			= "МВ";
						Проводка.Содержание				= "Покупка материалов";	
					Иначе
						Проводка.СубконтоДт.Материалы			= ТекНоменклатура;
						Проводка.НомерЖурнала			= "МВ";
						Проводка.Содержание				= "Покупка";
					КонецЕсли;
					
					Проводка.СчетКт 			= СчетУчетаРасчетовСКонтрагентом;				
					Проводка.СубконтоКт.Организации = Организация;
					Проводка.СубконтоКт.Контрагенты = Контрагент;						
				
					Проводка.Сумма 					= СуммаВсего;				
				
					//отдельная проводка по НДС при включенной новой системе
					Если СуммаНДСОтдельно <> 0 Тогда
					
						Проводка = Движения.Финансовый.Добавить();
				
						Проводка.Период = Дата;
						Проводка.СчетДт = НастройкаОтраженияНДСПоТоварам.Счет;
					
					
						Проводка.СубконтоДт.Организации  	= Организация;
						Проводка.СубконтоДт.ВидыНалогов		= НастройкаОтраженияНДСПоТоварам.ДопРеквизит;
						Проводка.СубконтоДт.СтавкиНДС		= ТекСтрокаТовары.СтавкаНДС;										
						Проводка.СчетКт 			= СчетУчетаРасчетовСКонтрагентом;
					
						Проводка.СубконтоКт.Организации = Организация;
						Проводка.СубконтоКт.Контрагенты = Контрагент;
					
						Проводка.Сумма 					= СуммаНДСОтдельно;			
					
					КонецЕсли;	
					
				КонецЕсли;
				
				Если Дата >= '20131201' Тогда
					
					//
					// ДВИЖЕНИЯ СЕБЕСТОИМОСТЬ СЫРЬЯ И УПАКОВКИ ПО СПЕЦИФИКАЦИИ
					Если ТаблицаСпецификаций.Количество() > 0 И Дата < '20180601' Тогда
						ДобавитьДвиженияПоСебестоимостиСырьяИУпаковки(Движения, Ссылка, ТекСтрокаТовары, ТаблицаСпецификаций);
					КонецЕсли;
					//
					Если ТаблицаСпецификацийКомплектов.Количество() > 0 И Дата< '20180601' Тогда
						ДобавитьДвиженияПоСебестоимостиСырьяИУпаковкиКомплектов(Движения, Ссылка, ТекСтрокаТовары, ТаблицаСпецификацийКомплектов);
					КонецЕсли;
					//
					////
					//// СТОРНО НАЦЕНКИ НА СЕБЕСТОИМОСТЬ СЫРЬЯ И УПАКОВКИ ПО СПЕЦИФИКАЦИИ
					Если ТаблицаСпецификаций.Количество() > 0 И Дата < '20180601' Тогда
						ДобавитьДвиженияСторноНаценкиНаСебестоимостьСырьяИУпаковки(Движения, Ссылка, ТекСтрокаТовары, ТаблицаТоваровДляСторнирования);	
					КонецЕсли;
					
					//
					// ДВИЖЕНИЯ ПО ТОВАРАМ БЕЗ НДС
					Если ТекСтрокаТовары.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда  
						ОтразитьДвиженияПоТоварамНеОблагающимсяНДС(СуммаВсего, ТекСтрокаТовары, СтруктураНастроекОтражениеНДСПоТоварамБезНДС, СтавкаНДСПриОтгрузкеБезНДС);
					КонецЕсли;                 
					
					// ПО ТИПУ ТОВАРА ПРОДУКЦИЯ, ИЗЛИШКИ И НЕДОСТАЧИ НЕ ОТРАЖАЕМ
					Если ТекСтрокаТовары.ТипТовара <> Перечисления.ТипыТоваров.Продукция Тогда  
						
						// Если Дата документа больше ДатаНачалаНачисленияПретензий, и претензия не складу, тогда проводки по складу не нужны.
						// Ниже будут движения по Поставщику (ОтразитьДвиженияПоПретензиямПоставщикам())
						Если ЗначениеЗаполнено(ДатаНачалаНачисленияПретензий)
								И Дата >= ДатаНачалаНачисленияПретензий Тогда
							Продолжить;
						КонецЕсли;
						
						ПоПриходнымОрдерам = ПолучитьКоличествоВОрдерах(ТекСтрокаТовары.Номенклатура);
						
						КоличествоПретензияКСкладуПТУ = 0;
						КоличествоПретензияКСкладуКорр = 0;
						КоличествоПретензияКСкладу = 0;
		
						Если СтрокаТЧ.КоличествоДоИзменения < ПоПриходнымОрдерам Тогда							
							КоличествоПретензияКСкладуПТУ = СтрокаТЧ.КоличествоДоИзменения - ПоПриходнымОрдерам;
						КонецЕсли;
						
						Если СтрокаТЧ.Количество < ПоПриходнымОрдерам Тогда							
							КоличествоПретензияКСкладуКорр = СтрокаТЧ.Количество - ПоПриходнымОрдерам;
						КонецЕсли;
						
						КоличествоПретензияКСкладу = КоличествоПретензияКСкладуКорр - КоличествоПретензияКСкладуПТУ;					 
						
						Если КоличествоПретензияКСкладу = 0 Тогда
							Продолжить;
						КонецЕсли;
						
						РазнПТУ = ТекСтрокаТовары.КоличествоДоИзменения - ПоПриходнымОрдерам;
						РазнКорр = ТекСтрокаТовары.Количество - ПоПриходнымОрдерам;
						Разн = РазнКорр - РазнПТУ;
						
						// С учетом старых документов
						РазницаВКоличестве = ?(КоличествоПретензияКСкладу <> 0,
												КоличествоПретензияКСкладу,
												Разн);
						
						//
						// ОТРАЖЕНИЕ НЕДОСТАЧ
						//Если ТекСтрокаТовары.Количество > ТекСтрокаТовары.ПоПриходнымОрдерам Тогда
						Если РазницаВКоличестве > 0 Тогда
							ОтразитьДвиженияПоНедостачамТоваров(ТекСтрокаТовары, СуммаВсего, РазницаВКоличестве, СтруктураНастроекПоступление_Излишки, ЦФО);
						КонецЕсли;
						
						//
						// ОТРАЖЕНИЕ ИЗЛИШКОВ
						//Если ТекСтрокаТовары.Количество < ТекСтрокаТовары.ПоПриходнымОрдерам Тогда
						Если РазницаВКоличестве < 0 Тогда
							ОтразитьДвиженияПоИзлишкамТоваров(ТекСтрокаТовары, СуммаВсего, -РазницаВКоличестве, СтруктураНастроекПоступление_Недостачи, ЦФО);
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
					
				//КонецЕсли;
				
			КонецЦикла;
			
			// НЕДОСТАЧИ, ИЗЛИШКИ ЗА СЧЕТ ПОСТАВЩИКА
			Если ЗначениеЗаполнено(ДатаНачалаНачисленияПретензий)
					И Дата >= ДатаНачалаНачисленияПретензий Тогда
				//!!!ОтразитьДвиженияПоПретензиямПоставщикам();
			КонецЕсли;
			
		Иначе
			
			// Старая схема проведения
			Движения.Финансовый.Записывать = Истина;
			Движения.Финансовый.Очистить();
			
			Для Каждого ТекСтрокаТовары Из Товары Цикл
				
				СуммаВсегоПТУ 			= 0;
				СуммаВсегоКорр 			= 0;
				СуммаВсего 			= 0;
				
				СуммаНДСОтдельноПТУ 	= 0;
				СуммаНДСОтдельноКорр 	= 0;
				СуммаНДСОтдельно 	= 0;
				
				Если ЗначениеЗаполнено(НастройкаОтраженияНДСПоТоварам.Счет) Тогда
					Если ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле Тогда
						СуммаВсегоПТУ 	= ТекСтрокаТовары.СуммаДоИзменения - ТекСтрокаТовары.СуммаНДСДоИзменения;
						СуммаВсегоКорр 	= ТекСтрокаТовары.Сумма - ТекСтрокаТовары.СуммаНДС;
						СуммаВсего 	= СуммаВсегоКорр - СуммаВсегоПТУ;
					Иначе
						СуммаВсегоПТУ 	= ТекСтрокаТовары.СуммаДоИзменения;
						СуммаВсегоКорр 	= ТекСтрокаТовары.Сумма;
						СуммаВсего 	= СуммаВсегоКорр - СуммаВсегоПТУ;
					КонецЕсли;
					СуммаНДСОтдельноПТУ = ТекСтрокаТовары.СуммаНДСДоИзменения;
					СуммаНДСОтдельноКорр = ТекСтрокаТовары.СуммаНДС;
					СуммаНДСОтдельно = СуммаНДСОтдельноКорр - СуммаНДСОтдельноПТУ;
				Иначе	
					Если ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле Тогда
						СуммаВсегоПТУ 	= ТекСтрокаТовары.СуммаДоИзменения;
						СуммаВсегоКорр 	= ТекСтрокаТовары.Сумма;
						СуммаВсего 	= СуммаВсегоКорр - СуммаВсегоПТУ;
					Иначе
						СуммаВсегоПТУ 	= ТекСтрокаТовары.СуммаДоИзменения + ТекСтрокаТовары.СуммаНДСДоИзменения;
						СуммаВсегоКорр 	= ТекСтрокаТовары.Сумма + ТекСтрокаТовары.СуммаНДС;
						СуммаВсего 	= СуммаВсегоКорр - СуммаВсегоПТУ;
					КонецЕсли;
				КонецЕсли;
				
				Проводка = Движения.Финансовый.Добавить();
				Проводка.Период = Дата;
				Проводка.СчетДт = ТекСтрокаТовары.СчетУчета;
				ТекНоменклатура = ТекСтрокаТовары.Номенклатура;
				
				Если ТекСтрокаТовары.СчетУчета = ПланыСчетов.Финансовый.Товары Тогда
					Проводка.СубконтоДт.МестаХранения  	= ИсправляемыйДокументПоступления.СтруктурнаяЕдиница;
					Проводка.СубконтоДт.Товары			= ТекНоменклатура;
					Проводка.СубконтоДт.СтатьиТовародвижения = ТекСтрокаТовары.СтатьяТовародвижения;
					Проводка.НомерЖурнала			= "ТД";
					Проводка.Содержание				= "Покупка товара";
				ИначеЕсли ТекСтрокаТовары.СчетУчета = ПланыСчетов.Финансовый.МатералыДляВыпуска Тогда
					//Проводка.СубконтоДт.Контрагенты		 	= Контрагент;
					Проводка.СубконтоДт.Склады		= Склад;
					Проводка.СубконтоДт.Материалы	= ТекНоменклатура;
					Проводка.СубконтоДт.СтатьиТовародвижения = ТекСтрокаТовары.СтатьяТовародвижения;
					Проводка.КоличествоДт			= (ТекСтрокаТовары.Количество - ТекСтрокаТовары.КоличествоДоИзменения) * ТекСтрокаТовары.Коэффициент;
					Проводка.НомерЖурнала			= "МВ";
					Проводка.Содержание				= "Покупка материалов";
				ИначеЕсли ТекСтрокаТовары.СчетУчета 	= ПланыСчетов.Финансовый.КапитальныеВложения Тогда
					Проводка.СубконтоДт.СтатьиДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("").Ссылка;//НаПриобретениеОборудованияТорговыхТочек;
					Проводка.НомерЖурнала			= "КВ";
					Проводка.Содержание				= "Покупка оборудования";
				Иначе
					Проводка.СубконтоДт.Материалы	= ТекНоменклатура;
				КонецЕсли;
				Проводка.СчетКт 				= СчетУчетаРасчетовСКонтрагентом;
				Проводка.СубконтоКт.Организации = Организация;
				Проводка.СубконтоКт.Контрагенты = Контрагент;
				
				//Проводка.Организация 			= ;
				Проводка.Сумма = СуммаВсего;
				
				//отдельная проводка по НДС при включенной новой системе
				Если СуммаНДСОтдельно <> 0 Тогда
					Проводка = Движения.Финансовый.Добавить();
				
					Проводка.Период = Дата;
					Проводка.СчетДт = НастройкаОтраженияНДСПоТоварам.Счет;
					
					Проводка.СубконтоДт.Организации = Организация;
					Проводка.СубконтоДт.ВидыНалогов	= НастройкаОтраженияНДСПоТоварам.ДопРеквизит;
					Проводка.СубконтоДт.СтавкиНДС	= ТекСтрокаТовары.СтавкаНДС;
					
					Проводка.СчетКт 				= СчетУчетаРасчетовСКонтрагентом;	
						
					Проводка.СубконтоКт.Организации = Организация;
					Проводка.СубконтоКт.Контрагенты = Контрагент;
					
					//Проводка.Организация 			= ЭтотОбъект.Организация;
					Проводка.Сумма 					= СуммаНДСОтдельно;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	Иначе	
		
		// Старая схема проведения
		Движения.Финансовый.Записывать = Истина;
		Движения.Финансовый.Очистить();
		
		Для Каждого ТекСтрокаТовары Из Товары Цикл
			
			Проводка = Движения.Финансовый.Добавить();
			Проводка.Период = Дата;
			Проводка.СчетДт = ТекСтрокаТовары.СчетУчета;
			ТекНоменклатура = ТекСтрокаТовары.Номенклатура;
			
			Если ТекСтрокаТовары.СчетУчета = ПланыСчетов.Финансовый.Товары Тогда
				Проводка.СубконтоДт.МестаХранения  			= ИсправляемыйДокументПоступления.СтруктурнаяЕдиница;
				Проводка.СубконтоДт.Товары					= ТекНоменклатура;
				Проводка.СубконтоДт.СтатьиТовародвижения 	= ТекСтрокаТовары.СтатьяТовародвижения;
				Проводка.НомерЖурнала			= "ТД";
				Проводка.Содержание				= "Покупка товара";
			ИначеЕсли ТекСтрокаТовары.СчетУчета = ПланыСчетов.Финансовый.МатералыДляВыпуска Тогда
				//Проводка.СубконтоДт.Контрагенты		 	= Контрагент;
				Проводка.СубконтоДт.Склады		 			= Склад;
				Проводка.СубконтоДт.Материалы				= ТекНоменклатура;
				Проводка.СубконтоДт.СтатьиТовародвижения 	= ТекСтрокаТовары.СтатьяТовародвижения;
				Проводка.КоличествоДт			= (ТекСтрокаТовары.Количество - ТекСтрокаТовары.КоличествоДоИзменения) * ТекСтрокаТовары.Коэффициент;
				Проводка.НомерЖурнала			= "МВ";
				Проводка.Содержание				= "Покупка материалов";
			ИначеЕсли ТекСтрокаТовары.СчетУчета = ПланыСчетов.Финансовый.КапитальныеВложения Тогда
				Проводка.СубконтоДт.СтатьиДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("").Ссылка;//НаПриобретениеОборудованияТорговыхТочек;
				Проводка.НомерЖурнала			= "КВ";
				Проводка.Содержание				= "Покупка оборудования";
			КонецЕсли;
			Проводка.СчетКт 		= СчетУчетаРасчетовСКонтрагентом;
			Проводка.СубконтоКт.Организации = Организация;
			Проводка.СубконтоКт.Контрагенты = Контрагент;
			
			Проводка.Организация 	= Организация;
			Проводка.Сумма 			= (ТекСтрокаТовары.Сумма - ТекСтрокаТовары.СуммаДоИзменения);
			
		КонецЦикла;
		
	КонецЕсли;	
	
	// Услуги
	ДвиженияФинансовый = Движения.Финансовый;
	
	Счет08 	= ПланыСчетов.Финансовый.КапитальныеВложения;
	Счет681 = ПланыСчетов.Финансовый.НалогиСФОТ;
	мАмортизацияИнвестицийВТТ 	= Справочники.СтатьиДоходовРасходов.НайтиПоКоду("61010");
	мУправлениеИсполнительное 	= Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_18");
	мСтрЕдиницаРезерв			= Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_100");
	мВидНалогаНДФЛ 				= Справочники.ВидыНалогов.НайтиПоКоду("000000010");     // НДФЛ
	
	НастройкаОтраженияНДСПоУслугам 	=
		ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.НДС_УслугиПоступлениеТоваровИУслуг	, ИсправляемыйДокументПоступления.Дата);
	НастройкаОтраженияНДФЛПоУслугам =
		ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.НДФЛ_ПоступлениеУслуг				, ИсправляемыйДокументПоступления.Дата);
	
	мИтСуммаПТУ = Услуги.Итог("СуммаДоИзменения");
	мИтСуммаКорр = Услуги.Итог("Сумма");
	мИтСумма = мИтСуммаКорр - мИтСуммаПТУ; 
	
	Для Каждого ТекСтрокаУслуги Из Услуги Цикл
		
		СуммаВсегоПТУ 			= 0;
		СуммаВсегоКорр 			= 0;
		СуммаВсего 			= 0;
		
		СуммаНДСОтдельноПТУ 	= 0;
		СуммаНДСОтдельноКорр 	= 0;
		СуммаНДСОтдельно 	= 0;
		
		ТекСуммаНДФЛПТУ 		= 0;
		ТекСуммаНДФЛКорр 		= 0;
		ТекСуммаНДФЛ 		= 0;
		
		ЭтоСчет44 = (ТекСтрокаУслуги.СчетЗатрат.ПринадлежитЭлементу(ПланыСчетов.Финансовый.ЗатратыДляРаспределения));
		
		Если НЕ ИсправляемыйДокументПоступления.ПроизвестиУплатуНДФЛ Тогда
			Если ЗначениеЗаполнено(НастройкаОтраженияНДСПоТоварам.Счет) Тогда
				Если ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле Тогда
					СуммаВсегоПТУ = ТекСтрокаУслуги.СуммаДоИзменения - ТекСтрокаУслуги.СуммаНДСДоИзменения;
					СуммаВсегоКорр = ТекСтрокаУслуги.Сумма - ТекСтрокаУслуги.СуммаНДС;
					СуммаВсего = СуммаВсегоКорр - СуммаВсегоПТУ;
				Иначе
					СуммаВсегоПТУ = ТекСтрокаУслуги.СуммаДоИзменения;
					СуммаВсегоКорр = ТекСтрокаУслуги.Сумма;
					СуммаВсего = СуммаВсегоКорр - СуммаВсегоПТУ;
				КонецЕсли;
				СуммаНДСОтдельноПТУ = ТекСтрокаУслуги.СуммаНДСДоИзменения;
				СуммаНДСОтдельноКорр = ТекСтрокаУслуги.СуммаНДС;
				СуммаНДСОтдельно = СуммаНДСОтдельноКорр - СуммаНДСОтдельноПТУ;
			Иначе	
				Если ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле Тогда
					СуммаВсегоПТУ = ТекСтрокаУслуги.СуммаДоИзменения;
					СуммаВсегоКорр = ТекСтрокаУслуги.Сумма;
					СуммаВсего = СуммаВсегоКорр - СуммаВсегоПТУ;
				Иначе
					СуммаВсегоПТУ = ТекСтрокаУслуги.СуммаДоИзменения + ТекСтрокаУслуги.СуммаНДСДоИзменения;
					СуммаВсегоКорр = ТекСтрокаУслуги.Сумма + ТекСтрокаУслуги.СуммаНДС;
					СуммаВсего = СуммаВсегоКорр - СуммаВсегоПТУ;
				КонецЕсли;
			КонецЕсли;
		Иначе
			ТекСуммаНДФЛПТУ = ?(НЕ мИтСуммаПТУ = 0, Окр(ИсправляемыйДокументПоступления.СуммаНДФЛ * ТекСтрокаУслуги.СуммаДоИзменения / мИтСуммаПТУ, 2), 0);
			ТекСуммаНДФЛКорр = ?(НЕ мИтСуммаКорр = 0, Окр(ИсправляемыйДокументПоступления.СуммаНДФЛ * ТекСтрокаУслуги.Сумма / мИтСуммаКорр, 2), 0);
			ТекСуммаНДФЛ = ТекСуммаНДФЛКорр - ТекСуммаНДФЛПТУ;
			СуммаВсего = ТекСтрокаУслуги.Сумма - ТекСуммаНДФЛ;
		КонецЕсли;
		
		//Если ЗначениеЗаполнено(НастройкаОтраженияНДСПоУслугам.Счет) Тогда
		//	
		//	СуммаВсего = ТекСтрокаУслуги.Сумма - ТекСтрокаУслуги.СуммаНДС;
		//	СуммаНДСОтдельно = ТекСтрокаУслуги.СуммаНДС;
		//Иначе	
		//	СуммаВсего = ТекСтрокаУслуги.Сумма;
		//КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекСтрокаУслуги.СчетЗатрат) И ТекСтрокаУслуги.СчетЗатрат.ПринадлежитЭлементу(ПланыСчетов.Финансовый.Материалы)
				И ТекСтрокаУслуги.СчетЗатрат <> ПланыСчетов.Финансовый.Инвентарь
				И ТекСтрокаУслуги.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Материал Тогда
			ЭтоМатериал = Истина;
		Иначе 
			ЭтоМатериал = Ложь;	
		КонецЕсли;	
		
		Если СуммаВсего <> 0 Тогда
			
			Проводка = ДвиженияФинансовый.Добавить();
			Проводка.Период 		= Дата;
			Проводка.СчетДт 		= ТекСтрокаУслуги.СчетЗатрат;
			
			Если НЕ ЭтоМатериал Тогда 
				
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, ТекСтрокаУслуги.Субконто1);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, ТекСтрокаУслуги.Субконто2);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, ТекСтрокаУслуги.Субконто3);
				
			Иначе
				
				Если НЕ ЗначениеЗаполнено(ТекСтрокаУслуги.Номенклатура) Тогда
					Сообщить("Для учета материалов поле номенклатура должно быть заполнено");
					Отказ = Истина;
					Возврат;
				КонецЕсли;	
				
				Если НЕ ЗначениеЗаполнено(ТекСтрокаУслуги.Номенклатура.ЭтоГруппа) Тогда
					Сообщить("Не допускается выбор группы: " + ТекСтрокаУслуги.Номенклатура);
					Отказ = Истина;
					Возврат;
				КонецЕсли;	
				//Если НЕ ЗначениеЗаполнено(Склад) Тогда
				//	Сообщить("Для учета материалов поле склад должно быть заполнено");
				//	Отказ = Истина;
				//	Возврат;
				//КонецЕсли;
				
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, ТекСтрокаУслуги.Номенклатура);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, Склад);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, Справочники.СтатьиТовародвижения.ПоступлениеОтПоставщика);
				
				Проводка.КоличествоДт = ТекСтрокаУслуги.Количество - ТекСтрокаУслуги.КоличествоДоИзменения;
				
			КонецЕсли;	
			
			
			Проводка.НомерЖурнала			= "УС";			
			Проводка.Содержание				= ?(ЭтоМатериал, "Поступление материалов", "Поступление услуг");
			
			Проводка.СчетКт 				=
			?(ЗначениеЗаполнено(СчетУчетаРасчетовСКонтрагентом), СчетУчетаРасчетовСКонтрагентом, ПланыСчетов.Финансовый.РасчетыСПоставщиками);
			Проводка.СубконтоКт.Организации = Организация;
			Проводка.СубконтоКт.Контрагенты = Контрагент;
			Если Проводка.СчетКт = ПланыСчетов.Финансовый.ОбеспечительныйВзнос
				ИЛИ Проводка.СчетКт = ПланыСчетов.Финансовый.РасчетыПоАренде Тогда
				Проводка.СубконтоКт.ТорговыеТочки = ИсправляемыйДокументПоступления.СтруктурнаяЕдиница;
			КонецЕсли;
			
			//Проводка.Организация 	= Организация;
			Проводка.Сумма 			= СуммаВсего;
			
		КонецЕсли;
		
		//отдельная проводка по НДС при включенной новой системе
		Если НЕ ИсправляемыйДокументПоступления.ПроизвестиУплатуНДФЛ Тогда
			Если НЕ СуммаНДСОтдельно = 0 Тогда
				Проводка = ДвиженияФинансовый.Добавить();
				Проводка.Период 		= Дата;
				Проводка.СчетДт 		= НастройкаОтраженияНДСПоУслугам.Счет;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Организация);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, НастройкаОтраженияНДСПоУслугам.ДопРеквизит);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, ТекСтрокаУслуги.СтавкаНДС);
				Проводка.НомерЖурнала			= "УС";
				Проводка.Содержание				= "НДС";
				
				Проводка.СчетКт 				=
					?(ЗначениеЗаполнено(СчетУчетаРасчетовСКонтрагентом), СчетУчетаРасчетовСКонтрагентом, ПланыСчетов.Финансовый.РасчетыСПоставщиками);
				Проводка.СубконтоКт.Организации = Организация;
				Проводка.СубконтоКт.Контрагенты = Контрагент;
				Если Проводка.СчетКт = ПланыСчетов.Финансовый.ОбеспечительныйВзнос
						ИЛИ Проводка.СчетКт = ПланыСчетов.Финансовый.РасчетыПоАренде Тогда
					Проводка.СубконтоКт.ТорговыеТочки = ИсправляемыйДокументПоступления.СтруктурнаяЕдиница;
				КонецЕсли;
				
				//Проводка.Организация 	= Организация;
				Проводка.Сумма 			= СуммаНДСОтдельно;
				
				//АК_УчетМСФО.КорректироватьПериодДвиженияМСФО(Движения.Финансовый,Проводка,ДатаВходящегоДокумента,Дата,ДатаОтраженияМСФО,Отказ); 

			КонецЕсли;
		Иначе
			Если НЕ ТекСуммаНДФЛ = 0 Тогда
				Проводка = ДвиженияФинансовый.Добавить();
				Проводка.Период 		= Дата;
				Проводка.СчетДт 		= НастройкаОтраженияНДФЛПоУслугам.Счет;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, НастройкаОтраженияНДФЛПоУслугам.СтруктурнаяЕдиница);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 2, НастройкаОтраженияНДФЛПоУслугам.СтатьяДоходовРасходов);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 3, НастройкаОтраженияНДФЛПоУслугам.ЦФО);
				Проводка.СчетКт 		= Счет681;
				Проводка.СубконтоКт.Организации = Организация;
				Проводка.СубконтоКт.ВидыНалогов = мВидНалогаНДФЛ;
				Проводка.Сумма 			= ТекСуммаНДФЛ;
				Проводка.Содержание		= "НДФЛ";
			КонецЕсли;
		КонецЕсли;
		
		мДатаНовогоУчетаСчетовОС = Константы.ДатаИзмененияУчетаПоСчетамОС.Получить();
		Если ТекСтрокаУслуги.СчетЗатрат = Счет08
				И (НЕ ЗначениеЗаполнено(ТекСтрокаУслуги.Субконто2)
			 		ИЛИ Оборудование_УжеСписано(ТекСтрокаУслуги.Субконто2))
				И Дата >= мДатаНовогоУчетаСчетовОС
				И НЕ ТекСтрокаУслуги.ТорговаяТочка = мСтрЕдиницаРезерв Тогда
				
			// 21.02.17 koro ИП-00015003 Не прогоняем через 01. На 01 остаются только объекты ОС
			
			Если АК_ОсновныеСредства.УчетМСФО(Дата) Тогда
					
				Если НЕ СуммаВсего = 0 Тогда
					
					//Дт44.3-Кт01
					Проводка = ДвиженияФинансовый.ДобавитьДебет();
					Проводка.Период							= Дата;
					Проводка.Сумма							= СуммаВсего;
					
					
					СтатьяДР = ИсправляемыйДокументПоступления.СтатьяЗатрат;
					Если не ЗначениеЗаполнено(СтатьяДР) Тогда
						//+++АК SUVV 2018.02.28 ИП-00017941
						//СтатьяДР = ОбщиеПроцедуры.ПолучитьСтатьюДРПоСтатьеДДС(ТекСтрокаУслуги.Субконто1);
						СтатьяДР = ОбщиеПроцедуры.ПолучитьСтатьюДРПоСтатьеДДС(ИсправляемыйДокументПоступления.Дата, ТекСтрокаУслуги.Субконто1);
						//---АК SUVV
					КонецЕсли;	
					Если не ЗначениеЗаполнено(СтатьяДР) Тогда
						СтатьяДР = ПолучитьСтатьюДР(ТекСтрокаУслуги.Субконто1);
					КонецЕсли;	
					Если не ЗначениеЗаполнено(СтатьяДР) Тогда
						СтатьяДР = мАмортизацияИнвестицийВТТ;
					КонецЕсли;			
					
					//Если ЭтоНоваяТорговаяТочка(ТекСтрокаУслуги.ТорговаяТочка,НачалоМесяца(Дата)) Тогда
					//	Проводка.СчетДт = ПланыСчетов.Финансовый.НайтиПоКоду("44.5");
					
					//Иначе 	
					Проводка.СчетДт								= ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;
					//КонецЕсли;	
					Проводка.СубконтоДт.СтатьиДоходовРасходов 	= СтатьяДР;	
					//mind 2015-01-27
					Если ЗначениеЗаполнено(ТекСтрокаУслуги.ТорговаяТочка)
						И НЕ ТекСтрокаУслуги.ТорговаяТочка.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Розница Тогда
						Проводка.СубконтоДт.ТорговыеТочки		= Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_000");
					Иначе
						Проводка.СубконтоДт.ТорговыеТочки		= ТекСтрокаУслуги.ТорговаяТочка;
					КонецЕсли;	
					
					Проводка.СубконтоДт.ЦФО						= мУправлениеИсполнительное;//ТекСтрокаУслуги.Субконто3;
					
					Проводка.СчетКт							= ПланыСчетов.Финансовый.КапитальныеВложения;
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, ТекСтрокаУслуги.Субконто1);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, ТекСтрокаУслуги.Субконто2);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, ТекСтрокаУслуги.Субконто3);
					
					АК_УчетМСФО.ВыделитьДвиженияПрошлогоГода(Движения.Финансовый,Проводка,ДатаВходящегоДокумента,Дата); 
					
				КонецЕсли;

			Иначе
				
				Если НЕ СуммаВсего = 0 Тогда
					
					//Дт01-Кт08
					Проводка = ДвиженияФинансовый.ДобавитьДебет();
					Проводка.Период							= Дата;
					//Проводка.Сумма							= ТекСтрокаУслуги.Сумма;
					Проводка.Сумма							= СуммаВсего;
					
					Проводка.СчетДт							= ПланыСчетов.Финансовый.Инвестиции;
					Проводка.СубконтоДт.ТорговыеТочки		= ТекСтрокаУслуги.ТорговаяТочка;
					
					Проводка.СчетКт							= ПланыСчетов.Финансовый.КапитальныеВложения;
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, ТекСтрокаУслуги.Субконто1);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, ТекСтрокаУслуги.Субконто2);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, ТекСтрокаУслуги.Субконто3);
					
					//Дт44.3-Кт01
					Проводка = ДвиженияФинансовый.ДобавитьДебет();
					Проводка.Период							= Дата;
					//Проводка.Сумма							= ТекСтрокаУслуги.Сумма;
					Проводка.Сумма							= СуммаВсего;
					
					Проводка.СчетДт								= ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;
					//mind 2015-01-27
					Если ЗначениеЗаполнено(ТекСтрокаУслуги.ТорговаяТочка)
						И НЕ ТекСтрокаУслуги.ТорговаяТочка.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Розница Тогда
						Проводка.СубконтоДт.ТорговыеТочки		= Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_000");
					Иначе
						Проводка.СубконтоДт.ТорговыеТочки		= ТекСтрокаУслуги.ТорговаяТочка;
					КонецЕсли;	
					Проводка.СубконтоДт.СтатьиДоходовРасходов 	= мАмортизацияИнвестицийВТТ;//ТекСтрокаУслуги.Субконто1;
					Проводка.СубконтоДт.ЦФО						= мУправлениеИсполнительное;//ТекСтрокаУслуги.Субконто3;
					
					Проводка.СчетКт							= ПланыСчетов.Финансовый.Инвестиции;
					Проводка.СубконтоКт.ТорговыеТочки		= ТекСтрокаУслуги.ТорговаяТочка;
					
				КонецЕсли;
				
			КонецЕсли;	
				
		КонецЕсли;
		
	КонецЦикла;
	
	//Оборудование
	Если ИсправляемыйДокументПоступления.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Оборудование Тогда
		Оборудование_ВыполнитьДвижения(Отказ);
	КонецЕсли;
		
	АК_УчетМСФО.ЗаполнитьОрганизацию(Движения.Финансовый, Организация);
	
	ВыполнитьДвиженияПоРасчетамСКонтрагентами();
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.11.21 ИП-00016528	 	
Процедура ДобавитьДвиженияПоСебестоимостиСырьяИУпаковки(Движения, Знач СсылкаНаОбъект, Знач СтрокаТЧ, ТаблицаСпецификаций) Экспорт
	
	//
	НайденнаяСтрока = ТаблицаСпецификаций.Найти(СтрокаТЧ.Номенклатура, "Номенклатура");
	Если НайденнаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//
	РегНастройкаОтражения 	= РегистрыСведений.НастройкаОтраженияОперацийВУчете;
	ТекДата 				= ИсправляемыйДокументПоступления.Дата;
	ДвиженияФинансовый 		= Движения.Финансовый;
	
	Спецификация = НайденнаяСтрока.Спецификация;
		
	СоставСпецификации = Спецификация.Состав;
	
	ТабСчетаСоставСпецификации = ОбщегоНазначенияКлиентСервер.ПолучитьТаблицуСчетовУчетаНоменклатур(СоставСпецификации.ВыгрузитьКолонку("Номенклатура"), ТекДата);
	
	Для Каждого СоставляющаяПродукции Из СоставСпецификации Цикл
		
		Если СоставляющаяПродукции.Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Упаковка Тогда
			СтруктураНастроек = РегНастройкаОтражения.ПолучитьПоследнее(ТекДата, Новый Структура("ВидОперации", Перечисления.ВидыОперацийВУчете.СписаниеСебестоимостиУпаковки));
		Иначе
			СтруктураНастроек = РегНастройкаОтражения.ПолучитьПоследнее(ТекДата, Новый Структура("ВидОперации", Перечисления.ВидыОперацийВУчете.СписаниеСебестоимостиСырья));
		КонецЕсли;
		
		КоэффициентПересчета 	= СоставляющаяПродукции.ЕдиницаИзмерения.Коэффициент;
		КоличествоСписанияПТУ 		= СтрокаТЧ.КоличествоДоИзменения * СоставляющаяПродукции.Количество * КоэффициентПересчета;
		КоличествоСписанияКорр 		= СтрокаТЧ.Количество * СоставляющаяПродукции.Количество * КоэффициентПересчета;
		КоличествоСписания = КоличествоСписанияКорр - КоличествоСписанияПТУ;
		
		КоличествоСписанияАналог = 0;
		
		Если СоставляющаяПродукции.КоличествоПустографок > 0 Тогда
			
			Если НайденнаяСтрока.Весовой Тогда
				Если НайденнаяСтрока.РасчетныйВесУпаковки = 0 Тогда
					КоличествоСписанияАналогПТУ = СтрокаТЧ.КоличествоДоИзменения/НайденнаяСтрока.Номенклатура.ОднаУпаковкаСодержит;
					КоличествоСписанияАналогКорр = СтрокаТЧ.Количество/НайденнаяСтрока.Номенклатура.ОднаУпаковкаСодержит;
					КоличествоСписанияАналог = КоличествоСписанияАналогКорр - КоличествоСписанияАналогПТУ;
				Иначе
					КоличествоСписанияАналогПТУ = СтрокаТЧ.КоличествоДоИзменения/НайденнаяСтрока.РасчетныйВесУпаковки;
					КоличествоСписанияАналогКорр = СтрокаТЧ.Количество/НайденнаяСтрока.РасчетныйВесУпаковки;
					КоличествоСписанияАналог = КоличествоСписанияАналогКорр - КоличествоСписанияАналогПТУ;
				КонецЕсли;
				КоличествоСписанияАналог=Окр(КоличествоСписанияАналог+0.5,0,РежимОкругления.Окр15как10)*СоставляющаяПродукции.Количество*КоэффициентПересчета;
				Если НайденнаяСтрока.Квант>0 Тогда
					КоличествоСписанияАналог = КоличествоСписанияАналог+Окр(СтрокаТЧ.Количество/НайденнаяСтрока.Квант+0.5,0,РежимОкругления.Окр15как10)
				КонецЕсли
			Иначе
				КоличествоСписанияАналог = КоличествоСписания
			КонецЕсли;
			
			Если КоличествоСписанияАналог <> 0 Тогда
				
				КолвоВПроводку = Окр(Мин(КоличествоСписанияАналог,СоставляющаяПродукции.КоличествоПустографок));
				
				Если КолвоВПроводку <> 0 Тогда
					
					Проводка = ДвиженияФинансовый.Добавить();
					
					Проводка.Период = ТекДата;
					
					// Дт
					Проводка.СчетДт 							= СтрокаТЧ.СчетУчета;
					Если СтрокаТЧ.СчетУчета = ПланыСчетов.Финансовый.Товары Тогда
						Проводка.СубконтоДт.МестаХранения  			= ИсправляемыйДокументПоступления.СтруктурнаяЕдиница;
						Проводка.СубконтоДт.Товары					= СтрокаТЧ.Номенклатура;
						Проводка.СубконтоДт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров41;//СтруктураНастроек.СтатьяДвиженияТоваров;
					Иначе
						Проводка.СубконтоДт.Материалы					= СтрокаТЧ.Номенклатура;
					КонецЕсли;	
					
					// Кт
					
					Если СоставляющаяПродукции.Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Упаковка Тогда
						Проводка.СчетКт 							= ПланыСчетов.Финансовый.МатералыДляВыпуска;
						Проводка.СубконтоКт.Материалы	  			= СоставляющаяПродукции.Пустографка;
						//+++АК SHEP 2018.05.03 ИП-00018453
						//Проводка.СубконтоКт.Склады					= Документы.РасходныйОрдерСклад.ПолучитьСкладПереработчика(СсылкаНаОбъект.Контрагент);
						Проводка.СубконтоКт.Склады					= СкладПереработчика;
						//---АК SHEP 2018.05.03
						Проводка.СубконтоКт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
						Проводка.Содержание							= "Себестоимость упаковки";
					Иначе
						Проводка.СчетКт 							= СтрокаТЧ.СчетУчета;
						//+++АК SHEP 2018.05.03 ИП-00018453
						//Проводка.СубконтоКт.МестаХранения  			= Справочники.СтруктурныеЕдиницы.СторонняяПереработка;//СсылкаНаОбъект.СтруктурнаяЕдиница;
						Проводка.СубконтоКт.МестаХранения  			= СтруктурныеЕдиницыСторонняяПереработка;
						//---АК SHEP 2018.05.03
						Проводка.СубконтоКт.Товары					= СоставляющаяПродукции.Номенклатура;
						Проводка.СубконтоКт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
						Проводка.Содержание							= "Себестоимость сырья";
					КонецЕсли;												
					Проводка.КоличествоКт = Окр(Мин(КоличествоСписанияАналог,СоставляющаяПродукции.КоличествоПустографок));
					Проводка.НомерЖурнала	= "ТД";
					//Проводка.Организация 	= СсылкаНаОбъект.Организация;
					Проводка.Сумма 			= Проводка.КоличествоКт * ОбщегоНазначенияСервер.ПолучитьСебестоимостьЕдиницыСырья(СоставляющаяПродукции.Пустографка,, ТекДата);
					Проводка.СторонаПроводкиДляПересчетаПоСебестоимости = "КТ";
					
					ДвижениеПустографки = Движения.АналогУпаковкиУПереработчика.ДобавитьРасход();
					ДвижениеПустографки.Период 				= ТекДата;
					ДвижениеПустографки.Контрагент 			= СсылкаНаОбъект.Контрагент;
					ДвижениеПустографки.Товар 				= СтрокаТЧ.Номенклатура;
					ДвижениеПустографки.СтандартнаяЭтикетка = СоставляющаяПродукции.Номенклатура;
					ДвижениеПустографки.Аналог 				= СоставляющаяПродукции.Пустографка;
					ДвижениеПустографки.Количество 			= Мин(КоличествоСписанияАналог, СоставляющаяПродукции.КоличествоПустографок);
					
				КонецЕсли;
				//СтрокиАналоги = ТаблицаСпецификаций.НайтиСтроки(Новый Структура("Пустографка",СоставляющаяПродукции.Пустографка));
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если КоличествоСписанияАналог > СоставляющаяПродукции.КоличествоПустографок или КоличествоСписанияАналог=0 Тогда
			
			Если КоличествоСписанияАналог = 0 Тогда
				КолВоВпроводку 	= КоличествоСписания
			Иначе
				КолВоВпроводку = Окр((КоличествоСписанияАналог-СоставляющаяПродукции.КоличествоПустографок)*КоличествоСписания/КоличествоСписанияАналог);
			КонецЕсли;
			
			Если КолВоВпроводку <> 0 Тогда
				
				Проводка = ДвиженияФинансовый.Добавить();
				Проводка.Период = ТекДата;
				
				// Дт
				Проводка.СчетДт 							= СтрокаТЧ.СчетУчета;
				Если СтрокаТЧ.СчетУчета = ПланыСчетов.Финансовый.Товары Тогда
					Проводка.СубконтоДт.МестаХранения  			= ИсправляемыйДокументПоступления.СтруктурнаяЕдиница;
					Проводка.СубконтоДт.Товары					= СтрокаТЧ.Номенклатура;
					Проводка.СубконтоДт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров41;//СтруктураНастроек.СтатьяДвиженияТоваров;
				Иначе
					Проводка.СубконтоДт.Материалы					= СтрокаТЧ.Номенклатура;
				КонецЕсли;
				
				Если СоставляющаяПродукции.Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Упаковка Тогда
					Проводка.СчетКт 							= ПланыСчетов.Финансовый.МатералыДляВыпуска;
					Проводка.СубконтоКт.Материалы	  			= СоставляющаяПродукции.Номенклатура;
					//+++АК SHEP 2018.05.03 ИП-00018453
					//Проводка.СубконтоКт.Склады					= Документы.РасходныйОрдерСклад.ПолучитьСкладПереработчика(СсылкаНаОбъект.Контрагент);
					Проводка.СубконтоКт.Склады					= СкладПереработчика;
					//---АК SHEP 2018.05.03
					Проводка.СубконтоКт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
					Проводка.Содержание							= "Себестоимость упаковки";
				Иначе
					Проводка.СчетКт 							= СтрокаТЧ.СчетУчета;
					//+++АК SHEP 2018.05.03 ИП-00018453
					//Проводка.СубконтоКт.МестаХранения  			= Справочники.СтруктурныеЕдиницы.СторонняяПереработка;//СсылкаНаОбъект.СтруктурнаяЕдиница;
					Проводка.СубконтоКт.МестаХранения  			= СтруктурныеЕдиницыСторонняяПереработка;
					//---АК SHEP 2018.05.03
					Проводка.СубконтоКт.Товары					= СоставляющаяПродукции.Номенклатура;
					Проводка.СубконтоКт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
					Проводка.Содержание							= "Себестоимость сырья";
				КонецЕсли;												
				
				Если КоличествоСписанияАналог = 0 Тогда
					Проводка.КоличествоКт 	= КоличествоСписания
				Иначе
					Проводка.КоличествоКт = Окр((КоличествоСписанияАналог-СоставляющаяПродукции.КоличествоПустографок)*КоличествоСписания/КоличествоСписанияАналог);
				КонецЕсли;
				
				
				Проводка.НомерЖурнала	= "ТД";
				//Проводка.Организация 	= СсылкаНаОбъект.Организация;
				Проводка.Сумма 			= Проводка.КоличествоКт * ОбщегоНазначенияСервер.ПолучитьСебестоимостьЕдиницыСырья(СоставляющаяПродукции.Номенклатура,, ТекДата);
				Проводка.СторонаПроводкиДляПересчетаПоСебестоимости = "КТ";
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.11.21 ИП-00016528	 	
Процедура ДобавитьДвиженияПоСебестоимостиСырьяИУпаковкиКомплектов(Движения, Знач СсылкаНаОбъект, Знач СтрокаТЧ, ТаблицаСпецификаций) Экспорт
	
	//
	НайденнаяСтрока = ТаблицаСпецификаций.Найти(СтрокаТЧ.Номенклатура, "Номенклатура");
	Если НайденнаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//
	РегНастройкаОтражения 	= РегистрыСведений.НастройкаОтраженияОперацийВУчете;
	ТекДата 				= ИсправляемыйДокументПоступления.Дата;
	ДвиженияФинансовый 		= Движения.Финансовый;
	
	Спецификация = НайденнаяСтрока.Спецификация;
		
	СоставСпецификации = Спецификация.Состав;
	
	Для Каждого СоставляющаяПродукции Из СоставСпецификации Цикл
		
		Если СоставляющаяПродукции.Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Упаковка Тогда
			СтруктураНастроек = РегНастройкаОтражения.ПолучитьПоследнее(ТекДата, Новый Структура("ВидОперации", Перечисления.ВидыОперацийВУчете.СписаниеСебестоимостиУпаковки));
		Иначе
			СтруктураНастроек = РегНастройкаОтражения.ПолучитьПоследнее(ТекДата, Новый Структура("ВидОперации", Перечисления.ВидыОперацийВУчете.СписаниеСебестоимостиСырья));
		КонецЕсли;
		
		КоэффициентПересчета 	= СоставляющаяПродукции.ЕдиницаИзмерения.Коэффициент;
		КоличествоСписанияИсхПТУ 		= СтрокаТЧ.КоличествоДоИзменения * СоставляющаяПродукции.Количество * КоэффициентПересчета;
		КоличествоСписанияИсхКорр 		= СтрокаТЧ.Количество * СоставляющаяПродукции.Количество * КоэффициентПересчета;
		КоличествоСписанияИсх 		= КоличествоСписанияИсхКорр - КоличествоСписанияИсхПТУ;
		КоличествоСписания =0;
		
		Если СоставляющаяПродукции.КоличествоПустографок > 0 Тогда
			
			Если НайденнаяСтрока.Весовой Тогда
				Если НайденнаяСтрока.РасчетныйВесУпаковки = 0 Тогда
					КоличествоСписанияПТУ = СтрокаТЧ.КоличествоДоИзменения/НайденнаяСтрока.Номенклатура.ОднаУпаковкаСодержит;
					КоличествоСписанияКорр = СтрокаТЧ.Количество/НайденнаяСтрока.Номенклатура.ОднаУпаковкаСодержит;
					КоличествоСписания = КоличествоСписанияКорр - КоличествоСписанияПТУ;
				Иначе
					КоличествоСписанияПТУ = СтрокаТЧ.КоличествоДоИзменения/НайденнаяСтрока.РасчетныйВесУпаковки;
					КоличествоСписанияКорр = СтрокаТЧ.Количество/НайденнаяСтрока.РасчетныйВесУпаковки;
					КоличествоСписания = КоличествоСписанияКорр - КоличествоСписанияПТУ;
				КонецЕсли;
				КоличествоСписания=Окр(КоличествоСписания+0.5,0,РежимОкругления.Окр15как10)*СоставляющаяПродукции.Количество*КоэффициентПересчета;
				//Если НайденнаяСтрока.Квант>0 Тогда
				//	КоличествоСписания = КоличествоСписания+Окр(СтрокаТЧ.Количество/НайденнаяСтрока.Квант+0.5,0,РежимОкругления.Окр15как10);
				//КонецЕсли;
			Иначе
				КоличествоСписания=КоличествоСписанияИсх
			КонецЕсли;
			
			Если КоличествоСписания <> 0 Тогда
				
				КолВоВПроводку = Мин(КоличествоСписания,СоставляющаяПродукции.КоличествоПустографок);
				
				Если КолВоВПроводку <> 0 Тогда
					
					Проводка = ДвиженияФинансовый.Добавить();
					
					Проводка.Период = ТекДата;
					
					// Дт
					Проводка.СчетДт 							= СтрокаТЧ.СчетУчета;
					Проводка.СубконтоДт.МестаХранения  			= ИсправляемыйДокументПоступления.СтруктурнаяЕдиница;
					Проводка.СубконтоДт.Товары					= НайденнаяСтрока.Составляющая;
					Проводка.СубконтоДт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров41;//СтруктураНастроек.СтатьяДвиженияТоваров;
					
					// Кт
					Если СоставляющаяПродукции.Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Упаковка Тогда
						Проводка.СчетКт 							= ПланыСчетов.Финансовый.МатералыДляВыпуска;
						Проводка.СубконтоКт.Материалы	  			= СоставляющаяПродукции.Пустографка;
						//+++АК SHEP 2018.05.03 ИП-00018453
						//Проводка.СубконтоКт.Склады					= Документы.РасходныйОрдерСклад.ПолучитьСкладПереработчика(СсылкаНаОбъект.Контрагент);
						Проводка.СубконтоКт.Склады					= СкладПереработчика;
						//---АК SHEP 2018.05.03
						Проводка.СубконтоКт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
						Проводка.Содержание							= "Себестоимость упаковки";
					Иначе
						Проводка.СчетКт 							= СтрокаТЧ.СчетУчета;
						//+++АК SHEP 2018.05.03 ИП-00018453
						//Проводка.СубконтоКт.МестаХранения  			= Справочники.СтруктурныеЕдиницы.СторонняяПереработка;//СсылкаНаОбъект.СтруктурнаяЕдиница;
						Проводка.СубконтоКт.МестаХранения  			= СтруктурныеЕдиницыСторонняяПереработка;
						//---АК SHEP 2018.05.03
						Проводка.СубконтоКт.Товары					= СоставляющаяПродукции.Пустографка;
						Проводка.СубконтоКт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
						Проводка.Содержание							= "Себестоимость сырья";
					КонецЕсли;												
					
					Проводка.КоличествоКт 	= Мин(КоличествоСписания,СоставляющаяПродукции.КоличествоПустографок);
					
					Проводка.НомерЖурнала	= "ТД";
					//Проводка.Организация 	= СсылкаНаОбъект.Организация;
					Проводка.Сумма 			= Проводка.КоличествоКт * ОбщегоНазначенияСервер.ПолучитьСебестоимостьЕдиницыСырья(СоставляющаяПродукции.Пустографка,, ТекДата);
					Проводка.СторонаПроводкиДляПересчетаПоСебестоимости = "КТ";
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если КоличествоСписания>0 и КоличествоСписания <= СоставляющаяПродукции.КоличествоПустографок Тогда
			Продолжить
		КонецЕсли;
		
		Если КоличествоСписанияИсх=0 Тогда
			Продолжить
		КонецЕсли;
		
		Если КоличествоСписания=0 Тогда
			КоличествоСписания=КоличествоСписанияИсх
		КонецЕсли;
		
		КолвоВпроводку = Окр((КоличествоСписания-СоставляющаяПродукции.КоличествоПустографок)*КоличествоСписанияИсх/КоличествоСписания);
		
		Если КолвоВпроводку <> 0 Тогда
			
			Проводка = ДвиженияФинансовый.Добавить();
			
			Проводка.Период = ТекДата;
			
			// Дт
			Проводка.СчетДт 							= СтрокаТЧ.СчетУчета;
			Проводка.СубконтоДт.МестаХранения  			= ИсправляемыйДокументПоступления.СтруктурнаяЕдиница;
			Проводка.СубконтоДт.Товары					= НайденнаяСтрока.Составляющая;
			Проводка.СубконтоДт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров41;//СтруктураНастроек.СтатьяДвиженияТоваров;
			
			// Кт
			Если СоставляющаяПродукции.Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Упаковка Тогда
				Проводка.СчетКт 							= ПланыСчетов.Финансовый.МатералыДляВыпуска;
				Проводка.СубконтоКт.Материалы	  			= СоставляющаяПродукции.Номенклатура;
				//+++АК SHEP 2018.05.03 ИП-00018453
				//Проводка.СубконтоКт.Склады					= Документы.РасходныйОрдерСклад.ПолучитьСкладПереработчика(СсылкаНаОбъект.Контрагент);
				Проводка.СубконтоКт.Склады					= СкладПереработчика;
				//---АК SHEP 2018.05.03
				Проводка.СубконтоКт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
				Проводка.Содержание							= "Себестоимость упаковки";
			Иначе
				Проводка.СчетКт 							= СтрокаТЧ.СчетУчета;
				//+++АК SHEP 2018.05.03 ИП-00018453
				//Проводка.СубконтоКт.МестаХранения  			= Справочники.СтруктурныеЕдиницы.СторонняяПереработка;//СсылкаНаОбъект.СтруктурнаяЕдиница;
				Проводка.СубконтоКт.МестаХранения  			= СтруктурныеЕдиницыСторонняяПереработка;
				//---АК SHEP 2018.05.03
				Проводка.СубконтоКт.Товары					= СоставляющаяПродукции.Номенклатура;
				Проводка.СубконтоКт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
				Проводка.Содержание							= "Себестоимость сырья";
			КонецЕсли;												
			
			Проводка.КоличествоКт 	= Окр((КоличествоСписания-СоставляющаяПродукции.КоличествоПустографок)*КоличествоСписанияИсх/КоличествоСписания);
			
			Проводка.НомерЖурнала	= "ТД";
			//Проводка.Организация 	= СсылкаНаОбъект.Организация;
			Проводка.Сумма 			= Проводка.КоличествоКт * ОбщегоНазначенияСервер.ПолучитьСебестоимостьЕдиницыСырья(СоставляющаяПродукции.Номенклатура,, ТекДата);
			Проводка.СторонаПроводкиДляПересчетаПоСебестоимости = "КТ";
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.11.21 ИП-00016528	 	
Процедура ДобавитьДвиженияСторноНаценкиНаСебестоимостьСырьяИУпаковки(Движения, Знач СсылкаНаОбъект, Знач СтрокаТЧ, ТаблицаТоваровДляСторнирования) Экспорт
	
	//
	НайденнаяСтрока = ТаблицаТоваровДляСторнирования.Найти(СтрокаТЧ.Номенклатура, "Номенклатура");
	Если НайденнаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//
	ТекДата = ИсправляемыйДокументПоступления.Дата;
	ЦФО 	= ОбщиеПроцедуры.ПолучитьЦФОПоСтруктурнойЕдинице(ИсправляемыйДокументПоступления.СтруктурнаяЕдиница, ТекДата);
	
	СтруктураНастроекДт = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.СписаниеСебестоимостиСырья, ТекДата);
	СтруктураНастроекКт = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.Реализация				, ТекДата);
	
	СуммаВПроводки = (СтрокаТЧ.КоличествоДоИзменения * НайденнаяСтрока.НаценкаНаЕдиницуПродукции) - (СтрокаТЧ.Количество * НайденнаяСтрока.НаценкаНаЕдиницуПродукции);
	
	Если СуммаВПроводки = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Проводка = Движения.Финансовый.Добавить();
		
	Проводка.Период 		= ТекДата;	
	Проводка.Содержание		= "Сторно наценки на готовую продукцию";
	Проводка.НомерЖурнала	= "ТД";
	Проводка.Сумма 			= - СуммаВПроводки;
	Проводка.СторонаПроводкиДляПересчетаПоСебестоимости = "";
	
	// ДТ 41
	Проводка.СчетДт 							= СтрокаТЧ.СчетУчета;
	//+++АК SHEP 2018.05.03 ИП-00018453
	//Проводка.СубконтоДт.МестаХранения  			= Справочники.СтруктурныеЕдиницы.СторонняяПереработка;
	Проводка.СубконтоДт.МестаХранения  			= СтруктурныеЕдиницыСторонняяПереработка;
	//---АК SHEP 2018.05.03
	Проводка.СубконтоДт.Товары					= СтрокаТЧ.Номенклатура;
	Проводка.СубконтоДт.СтатьиТовародвижения 	= СтруктураНастроекДт.СтатьяДвиженияТоваров;
	
	// КТ 44
	Проводка.СчетКт 							= СтруктураНастроекКт.Счет;
	Проводка.СубконтоКт.ТорговыеТочки  			= СтруктураНастроекКт.СтруктурнаяЕдиница;
	Проводка.СубконтоКт.СтатьиДоходовРасходов	= СтруктураНастроекКт.СтатьяДоходовРасходов;
	Проводка.СубконтоКт.ЦФО						=  ?(ЗначениеЗаполнено(СтруктураНастроекКт.ЦФО), СтруктураНастроекКт.ЦФО, ЦФО);
		
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.11.21 ИП-00016528	 	
Процедура ОтразитьДвиженияПоТоварамНеОблагающимсяНДС(СуммаПроводки, СтрокаТЧ, СтруктураНастроек, СтавкаНДСПриОтгрузкеБезНДС)
	
	//СтруктураНастроек = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.ОтражениеНДСПоТоварамБезНДС, ИсправляемыйДокументПоступления.Дата);   //shae 2018.08.30 ИП-00019212 закомментировано
	
	Если ЗначениеЗаполнено(СтруктураНастроек.Счет) Тогда
		
		//ЦФО = ОбщиеПроцедуры.ПолучитьЦФОПоСтруктурнойЕдинице(СтруктурнаяЕдиница, Дата);
		
		//пСумма = (СуммаПроводки * ОбщегоНазначенияСервер.ПолучитьСтавкуНДСПриОтгрузкеБезНДС(ИсправляемыйДокументПоступления.Дата))/100;   //shae 2018.08.30 ИП-00019212 закомментировано
		пСумма = (СуммаПроводки * СтавкаНДСПриОтгрузкеБезНДС)/100; //shae 2018.08.30 ИП-00019212 
	
		Если пСумма = 0 Тогда
			Возврат;
		КонецЕсли;
		
		ПроводкаНДС = Движения.Финансовый.Добавить();
		
		ПроводкаНДС.Период 			= Дата;
		//ПроводкаНДС.Организация 	= Организация;
		ПроводкаНДС.Сумма 			= пСумма;
		ПроводкаНДС.Содержание		= "НДС";
		
		// Дт 41.1 или 41.2
		Если СтрокаТЧ.СчетУчета = ПланыСчетов.Финансовый.Товары Тогда
			ПроводкаНДС.СчетДт 							= ПланыСчетов.Финансовый.Товары;
			ПроводкаНДС.СубконтоДт.МестаХранения  		= ИсправляемыйДокументПоступления.СтруктурнаяЕдиница;
			ПроводкаНДС.СубконтоДт.Товары				= СтрокаТЧ.Номенклатура;
			ПроводкаНДС.СубконтоДт.СтатьиТовародвижения = СтруктураНастроек.СтатьяДвиженияТоваров41;
		ИначеЕсли СтрокаТЧ.СчетУчета = ПланыСчетов.Финансовый.МатералыДляВыпуска Тогда
			ПроводкаНДС.СчетДт 							= ПланыСчетов.Финансовый.МатералыДляВыпуска;
			ПроводкаНДС.СубконтоДт.Склады		 		= Склад;
			ПроводкаНДС.СубконтоДт.Материалы			= СтрокаТЧ.Номенклатура;
			ПроводкаНДС.СубконтоДт.СтатьиТовародвижения = СтруктураНастроек.СтатьяДвиженияТоваров41;
		КонецЕсли;
		
		// Кт 44.3
		Если СтруктураНастроек.Счет = ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения Тогда 
			ПроводкаНДС.СчетКт 							 = ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;
			ПроводкаНДС.СубконтоКт.ТорговыеТочки 		 = СтруктураНастроек.СтруктурнаяЕдиница;
			ПроводкаНДС.СубконтоКт.СтатьиДоходовРасходов = СтруктураНастроек.СтатьяДоходовРасходов;
			ПроводкаНДС.СубконтоКт.ЦФО 					 = СтруктураНастроек.ЦФО;
		КонецЕсли;		
		
	КонецЕсли;	
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.11.21 ИП-00016528	 	
Процедура ОтразитьДвиженияПоНедостачамТоваров(СтрокаТЧ, СуммаВсего, КоличествоКт, СтруктураНастроек, ЦФО)
	
	//СтруктураНастроек = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.Поступление_Излишки, ИсправляемыйДокументПоступления.Дата); //shae 2018.08.30 ИП-00019212 закомментировано
	
	Если ЗначениеЗаполнено(СтруктураНастроек.Счет) Тогда
		
		//ЦФО = ОбщиеПроцедуры.ПолучитьЦФОПоСтруктурнойЕдинице(ИсправляемыйДокументПоступления.СтруктурнаяЕдиница, ИсправляемыйДокументПоступления.Дата); //shae 2018.08.30 ИП-00019212 закомментировано
		
		Проводка = Движения.Финансовый.Добавить();
		Проводка.Период = Дата;
		
		// Дт
		Проводка.СчетДт = СтруктураНастроек.Счет;
		Проводка.СубконтоДт.ТорговыеТочки  			= СтруктураНастроек.СтруктурнаяЕдиница;
		Проводка.СубконтоДт.СтатьиДоходовРасходов	= СтруктураНастроек.СтатьяДоходовРасходов;
		Проводка.СубконтоДт.ЦФО						= ?(ЗначениеЗаполнено(СтруктураНастроек.ЦФО), СтруктураНастроек.ЦФО, ЦФО);
		
		// Кт
		Проводка.СчетКт 		= СтрокаТЧ.СчетУчета;
		Проводка.КоличествоКт 	= КоличествоКт;
		
		Если СтрокаТЧ.СчетУчета = ПланыСчетов.Финансовый.Товары Тогда
			
			Проводка.СубконтоКт.МестаХранения  			= ИсправляемыйДокументПоступления.СтруктурнаяЕдиница;
			Проводка.СубконтоКт.Товары					= СтрокаТЧ.Номенклатура;
			Проводка.СубконтоКт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
			Проводка.НомерЖурнала						= "ТД";
			Проводка.Содержание							= "Недостача товара";//"Излишки товара";
			
		ИначеЕсли СтрокаТЧ.СчетУчета = ПланыСчетов.Финансовый.МатералыДляВыпуска Тогда
			
			Проводка.СубконтоКт.Склады		 			= Склад;
			Проводка.СубконтоКт.Материалы				= СтрокаТЧ.Номенклатура;
			Проводка.СубконтоКт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
			Проводка.КоличествоКт						= КоличествоКт * СтрокаТЧ.Коэффициент;
			Проводка.НомерЖурнала						= "МВ";
			Проводка.Содержание							= "Недостача материалов";//"Излишки материалов";
			
		КонецЕсли;
		
		Проводка.Сумма = Проводка.КоличествоКт * ОбщегоНазначенияСервер.ПолучитьСебестоимостьЕдиницыСырья(СтрокаТЧ.Номенклатура,, Дата);  
		Проводка.СторонаПроводкиДляПересчетаПоСебестоимости = "КТ";
		
	КонецЕсли;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.11.21 ИП-00016528	 	
Процедура ОтразитьДвиженияПоИзлишкамТоваров(СтрокаТЧ, СуммаВсего, КоличествоДт, СтруктураНастроек, ЦФО)
	
	//СтруктураНастроек = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.Поступление_Недостачи, ИсправляемыйДокументПоступления.Дата);
	
	Если ЗначениеЗаполнено(СтруктураНастроек.Счет) Тогда
		
		//ЦФО = ОбщиеПроцедуры.ПолучитьЦФОПоСтруктурнойЕдинице(ИсправляемыйДокументПоступления.СтруктурнаяЕдиница, ИсправляемыйДокументПоступления.Дата);
		
		Проводка = Движения.Финансовый.Добавить();
		Проводка.Период	= Дата;
		
		// Дт
		Проводка.СчетДт 		= СтрокаТЧ.СчетУчета;
		Проводка.КоличествоДт 	= КоличествоДт;
		
		Если СтрокаТЧ.СчетУчета = ПланыСчетов.Финансовый.Товары Тогда
			
			Проводка.СубконтоДт.МестаХранения  			= ИсправляемыйДокументПоступления.СтруктурнаяЕдиница;
			Проводка.СубконтоДт.Товары					= СтрокаТЧ.Номенклатура;
			Проводка.СубконтоДт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
			Проводка.НомерЖурнала						= "ТД";
			Проводка.Содержание							= "Излишки товаров";//"Недостача товара";
			
		ИначеЕсли СтрокаТЧ.СчетУчета = ПланыСчетов.Финансовый.МатералыДляВыпуска Тогда
			
			Проводка.СубконтоДт.Склады		 			= Склад;
			Проводка.СубконтоДт.Материалы				= СтрокаТЧ.Номенклатура;
			Проводка.СубконтоДт.СтатьиТовародвижения 	= СтруктураНастроек.СтатьяДвиженияТоваров;
			Проводка.КоличествоДт						= КоличествоДт * СтрокаТЧ.Коэффициент;
			Проводка.НомерЖурнала						= "МВ";
			Проводка.Содержание							= "Излишки материалов";//"Недостача материалов";
			
		КонецЕсли;
		
		// Кт
		Проводка.СчетКт = СтруктураНастроек.Счет;
		Проводка.СубконтоКт.ТорговыеТочки 			= СтруктураНастроек.СтруктурнаяЕдиница;
		Проводка.СубконтоКт.СтатьиДоходовРасходов	= СтруктураНастроек.СтатьяДоходовРасходов;
		Проводка.СубконтоКт.ЦФО 					= ?(ЗначениеЗаполнено(СтруктураНастроек.ЦФО), СтруктураНастроек.ЦФО, ЦФО);
		
		Проводка.Сумма = Проводка.КоличествоДт * ОбщегоНазначенияСервер.ПолучитьСебестоимостьЕдиницыСырья(СтрокаТЧ.Номенклатура,, Дата); 

		Проводка.СторонаПроводкиДляПересчетаПоСебестоимости = "ДТ";
		
	КонецЕсли;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.11.21 ИП-00016528	 	
Функция ПолучитьКоличествоВОрдерах(мНоменклатура) Экспорт
	
	МассивОрдеров = ИсправляемыйДокументПоступления.ПриходныеОрдера.ВыгрузитьКолонку("ПриходныйОрдер");
	
	Запрос = Новый Запрос;
	ДатаСоставляющих = '00010101';
	Для Каждого ЭлементОрдер Из МассивОрдеров Цикл
		ДатаСоставляющих = Макс(ДатаСоставляющих, ЭлементОрдер.Дата);
	КонецЦикла;	
	Запрос.УстановитьПараметр("МассивОрдеров"	, МассивОрдеров);
	Запрос.УстановитьПараметр("МаксДата"		, ДатаСоставляющих);
	Запрос.УстановитьПараметр("Номенклатура"	, мНоменклатура);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА СоставКомплектаСрезПоследних.Составляющая ЕСТЬ NULL 
	|				ТОГДА ПриходныйОрдерСкладТовары.Количество
	|			ИНАЧЕ ПриходныйОрдерСкладТовары.Количество * СоставКомплектаСрезПоследних.Количество
	|		КОНЕЦ) КАК Количество
	|ИЗ
	|	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставКомплекта.СрезПоследних(&МаксДата, ) КАК СоставКомплектаСрезПоследних
	|		ПО ПриходныйОрдерСкладТовары.Характеристика = СоставКомплектаСрезПоследних.Характеристика
	|			И (ПриходныйОрдерСкладТовары.Характеристика.НеРазбиватьВБухДокументахНаСоставляющие = ЛОЖЬ)
	|ГДЕ
	|	ПриходныйОрдерСкладТовары.Ссылка В(&МассивОрдеров)
	|	И ВЫБОР
	|		КОГДА СоставКомплектаСрезПоследних.Составляющая ЕСТЬ NULL 
	|			ТОГДА ПриходныйОрдерСкладТовары.Номенклатура
	|		ИНАЧЕ СоставКомплектаСрезПоследних.Составляющая.Владелец
	|	КОНЕЦ = &Номенклатура";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат 0;
	КонецЕсли;
	
	Возврат РезультатЗапроса.Выгрузить().Итог("Количество");
	
КонецФункции

//+++АК Susk (Суслин К.В.) 2017.11.21 ИП-00016528
Процедура ДобавитьДвижениеПоРасчетамСКонтрагентами(Стр, ТаблицаДвиженийПТУ, ПоискПоСделке = Ложь)
	
	СуммаПроводки = Стр.Сумма - Стр.СуммаДоИзменения;
	СуммаНДС = Стр.СуммаНДС - Стр.СуммаНДСДоИзменения;
	СуммаПроводки = ?(ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСсверху,СуммаПроводки+СуммаНДС,СуммаПроводки);
		
	Если СуммаПроводки <> 0 Тогда
		
		Если ПоискПоСделке Тогда
			НайдСтр = ТаблицаДвиженийПТУ.Найти(Стр.Сделка, "Сделка");
		Иначе
			НайдСтр = ТаблицаДвиженийПТУ[0];
		КонецЕсли;
			
		Если НЕ НайдСтр = Неопределено Тогда
			НовДвиж = Движения.РасчетыСКонтрагентами.Добавить();
			ЗаполнитьЗначенияСвойств(НовДвиж, НайдСтр);
			НовДвиж.Период = Дата;
			НовДвиж.Регистратор = Ссылка;
			НовДвиж.Сумма = СуммаПроводки;
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.11.21 ИП-00016528	 	
Процедура ВыполнитьДвиженияПоРасчетамСКонтрагентами() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Движения.РасчетыСКонтрагентами.Записывать = Истина;
	Движения.РасчетыСКонтрагентами.Очистить();
		
	ЕстьСделки =Ложь;
	
	//Для Каждого Строка Из Оборудование Цикл
	//	Если ЗначениеЗаполнено(Строка.Сделка) Тогда
	//		ЕстьСделки = Истина;
	//		Прервать;
	//	КонецЕсли; 
	//КонецЦикла;  
	
	//Если ЕстьСделки Тогда
	//	Возврат;
	//КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РасчетыСКонтрагентами.ВидДвижения,
	               |	РасчетыСКонтрагентами.Организация,
	               |	РасчетыСКонтрагентами.Контрагент,
	               |	РасчетыСКонтрагентами.СчетУчета,
	               |	РасчетыСКонтрагентами.Сделка,
	               |	СУММА(РасчетыСКонтрагентами.Сумма) КАК Сумма,
	               |	СУММА(РасчетыСКонтрагентами.АвансПоСделке) КАК АвансПоСделке,
	               |	РасчетыСКонтрагентами.ДокументДт
	               |ИЗ
	               |	РегистрНакопления.РасчетыСКонтрагентами КАК РасчетыСКонтрагентами
	               |ГДЕ
	               |	РасчетыСКонтрагентами.Регистратор = &Регистратор
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РасчетыСКонтрагентами.ВидДвижения,
	               |	РасчетыСКонтрагентами.Организация,
	               |	РасчетыСКонтрагентами.Контрагент,
	               |	РасчетыСКонтрагентами.СчетУчета,
	               |	РасчетыСКонтрагентами.Сделка,
	               |	РасчетыСКонтрагентами.ДокументДт";
	
	Запрос.УстановитьПараметр("Регистратор", ДокументПоступления);
	
	ТаблицаДвиженийПТУ = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Стр Из Оборудование Цикл
		ДобавитьДвижениеПоРасчетамСКонтрагентами(Стр, ТаблицаДвиженийПТУ, Истина);
	КонецЦикла;
	
	Для Каждого Стр Из Товары Цикл
		ДобавитьДвижениеПоРасчетамСКонтрагентами(Стр, ТаблицаДвиженийПТУ);
	КонецЦикла;
	
	Для Каждого Стр Из Услуги Цикл
		ДобавитьДвижениеПоРасчетамСКонтрагентами(Стр, ТаблицаДвиженийПТУ);
	КонецЦикла;
	
	ТзДвижРасч = Движения.РасчетыСКонтрагентами.Выгрузить();
	ТзДвижРасч.Свернуть("Период, Регистратор, ВидДвижения, Организация, Контрагент, СчетУчета, Сделка, ДокументДт", "Сумма, АвансПоСделке");
	
	Движения.РасчетыСКонтрагентами.Загрузить(ТзДвижРасч);
	
	//СчетаДляУчетаНаРегистреРасчетовСКонтрагентами = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаДляУчетаНаРегистреРасчетовСКонтрагентами();
	//
	//СчетУчета = Неопределено;
	//
	//Для Каждого Запись ИЗ Движения.Финансовый Цикл
	//	Если СчетаДляУчетаНаРегистреРасчетовСКонтрагентами.Найти(Запись.СчетКт) <> Неопределено Тогда
	//		СчетУчета = Запись.СчетКт;
	//		Прервать;
	//	КонецЕсли; 
	//КонецЦикла;  
	//
	//Если Дата<Дата(2017,1,1) ИЛИ СчетУчета = Неопределено Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//// Движения по сделкам с поставщиками
	//Запрос = Новый Запрос("ВЫБРАТЬ
	//                      |	ПоступлениеТоваровУслугОборудование.Сделка,
	//                      |	СУММА(ПоступлениеТоваровУслугОборудование.Сумма + ВЫБОР
	//                      |			КОГДА ПоступлениеТоваровУслугОборудование.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.НДССверху)
	//                      |				ТОГДА ПоступлениеТоваровУслугОборудование.СуммаНДС
	//                      |			ИНАЧЕ 0
	//                      |		КОНЕЦ) КАК Сумма
	//                      |ПОМЕСТИТЬ ВТ_ПоступленияПоСделкам
	//                      |ИЗ
	//                      |	Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПоступлениеТоваровУслугОборудование
	//                      |ГДЕ
	//                      |	ПоступлениеТоваровУслугОборудование.Ссылка = &Ссылка
	//                      |	И ПоступлениеТоваровУслугОборудование.Сделка.Ссылка ЕСТЬ НЕ NULL 
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	ПоступлениеТоваровУслугОборудование.Сделка
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	СделкаСПоставщикомЭтапыСделки.Ссылка КАК Сделка,
	//                      |	СУММА(СделкаСПоставщикомГрафикОплат.СуммаОплаты) КАК АвансСделки
	//                      |ПОМЕСТИТЬ ВТ_АвансыВСделках
	//                      |ИЗ
	//                      |	Документ.СделкаСПоставщиком.ЭтапыСделки КАК СделкаСПоставщикомЭтапыСделки
	//                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СделкаСПоставщиком.ГрафикОплат КАК СделкаСПоставщикомГрафикОплат
	//                      |		ПО СделкаСПоставщикомЭтапыСделки.НомерСтроки = СделкаСПоставщикомГрафикОплат.НомерСтрокиГрафика
	//                      |			И СделкаСПоставщикомЭтапыСделки.Ссылка = СделкаСПоставщикомГрафикОплат.Ссылка
	//                      |ГДЕ
	//                      |	СделкаСПоставщикомЭтапыСделки.ВариантОплаты = ЗНАЧЕНИЕ(Перечисление.ВариантыОплаты.ВУказаннуюДату)
	//                      |	И СделкаСПоставщикомЭтапыСделки.Ссылка В
	//                      |			(ВЫБРАТЬ
	//                      |				ВТ_ПоступленияПоСделкам.Сделка
	//                      |			ИЗ
	//                      |				ВТ_ПоступленияПоСделкам)
	//                      |
	//                      |СГРУППИРОВАТЬ ПО
	//                      |	СделкаСПоставщикомЭтапыСделки.Ссылка
	//                      |;
	//                      |
	//                      |////////////////////////////////////////////////////////////////////////////////
	//                      |ВЫБРАТЬ
	//                      |	ВТ_ПоступленияПоСделкам.Сделка,
	//                      |	ВТ_ПоступленияПоСделкам.Сумма,
	//                      |	ВЫБОР
	//                      |		КОГДА ВТ_ПоступленияПоСделкам.Сделка.СуммаСделки = 0
	//                      |			ТОГДА 0
	//                      |		ИНАЧЕ ВТ_ПоступленияПоСделкам.Сумма * ЕСТЬNULL(ВТ_АвансыВСделках.АвансСделки, 0) / ВТ_ПоступленияПоСделкам.Сделка.СуммаСделки
	//                      |	КОНЕЦ КАК АвансПоСделке
	//                      |ИЗ
	//                      |	ВТ_ПоступленияПоСделкам КАК ВТ_ПоступленияПоСделкам
	//                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АвансыВСделках КАК ВТ_АвансыВСделках
	//                      |		ПО ВТ_ПоступленияПоСделкам.Сделка = ВТ_АвансыВСделках.Сделка");

	//Запрос.УстановитьПараметр("Ссылка", Ссылка);

	//Выборка = Запрос.Выполнить().Выбрать();

	//Пока Выборка.Следующий() Цикл
	//	Движение = Движения.РасчетыСКонтрагентами.Добавить();
	//	Движение.ВидДвижения	= ВидДвиженияНакопления.Расход;
	//	Движение.Регистратор	= ЭтотОбъект.Ссылка;
	//	Движение.Период			= ЭтотОбъект.Дата;
	//	Движение.Организация = ЭтотОбъект.Организация;
	//	Движение.Контрагент = ЭтотОбъект.Контрагент;
	//	Движение.Сделка = Выборка.Сделка;
	//	Движение.СчетУчета = ПланыСчетов.Финансовый.ПрочаяЗадолженность;      // все движения по сделкам учитываем на 60.4
	//	Движение.Сумма			= Выборка.Сумма;
	//	Движение.АвансПоСделке= Выборка.АвансПоСделке;
	//КонецЦикла;   
	//
	//// Движение по заявками и без сделок
	//СуммаПоСделкам = Движения.РасчетыСКонтрагентами.Итог("Сумма");
	//СуммаВзаиморасчетов = 0;
	//
	//Для Каждого Проводка ИЗ Движения.Финансовый Цикл
	//	Если СчетаДляУчетаНаРегистреРасчетовСКонтрагентами.Найти(Проводка.СчетКт) <> Неопределено Тогда
	//		СуммаВзаиморасчетов = СуммаВзаиморасчетов + Проводка.Сумма;
	//	КонецЕсли; 
	//КонецЦикла;  
	//
	//Если СуммаВзаиморасчетов>СуммаПоСделкам Тогда
	//	Движение = Движения.РасчетыСКонтрагентами.Добавить();
	//	Движение.ВидДвижения	= ВидДвиженияНакопления.Расход;
	//	Движение.Регистратор	= ЭтотОбъект.Ссылка;
	//	Движение.Период			= ЭтотОбъект.Дата;
	//	Движение.Организация = ЭтотОбъект.Организация;
	//	Движение.Контрагент = ЭтотОбъект.Контрагент;
	//	Если ЗначениеЗаполнено(ДокументОснование) И ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаУслугиМатериалы") Тогда
	// 		Движение.Сделка = ЭтотОбъект.ДокументОснование;
	//	КонецЕсли; 
	//	Движение.СчетУчета = СчетУчета;
	//	Движение.Сумма			= СуммаВзаиморасчетов - СуммаПоСделкам;
	//КонецЕсли; 
	
КонецПроцедуры 

//+++АК Susk (Суслин К.В.) 2017.11.21 ИП-00016528
Процедура Оборудование_ВыполнитьДвижения(Отказ)
	
	УчетОС_МСФО = АК_УчетМСФОПривилегированный.ПолучитьПараметрыУчетаОС();
	
	Если Дата > УчетОС_МСФО.НачалоВеденияУчета Тогда
		
		ОтразитьДвиженияФинансовыйОС_Корректировка();				
		АК_ОсновныеСредства.ПроверитьСчетаУчетаВДокументе(ЭтотОбъект);
		
	//Иначе
	//			
	//	//Получение и проверка ЦФО
	//	мЦФО 						= Константы.ЦФОДляУчетаОсновныхСредств.Получить();
	//	мДатаНовогоУчетаСчетовОС 	= Константы.ДатаИзмененияУчетаПоСчетамОС.Получить();
	//	мСчет02 = ПланыСчетов.Финансовый.ККМ;
	//	
	//	ДвиженияФинансовый = ЭтотОбъект.Движения.Финансовый;
	//	
	//	Если НЕ ЭтотОбъект.Дата < Дата(2014, 9, 1) Тогда
	//		ПараметрыСписания01 					= ПолучитьПараметрыСписанияСоСчета01();
	//		НастройкиВводВЭксплуатациюНаСтаройТТ 	= ПолучитьНастройкиОборудование_ВводВЭксплуатациюНаСтаройТТ();
	//	КонецЕсли;
	//	
	//	мЕстьПриходники = (ЭтотОбъект.ПриходныеОрдера.Количество() > 0);
	//	
	//	НастройкаОтраженияНДСПоОборудованию = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.НДС_ОборудованиеПоступлениеТоваровИУслуг, Дата);
	//	
	//	Для Каждого СтрокаТЧ Из ЭтотОбъект.Оборудование Цикл
	//		
	//		СуммаВсего = 0;
	//		СуммаНДСОтдельно = 0;
	//		Если ЗначениеЗаполнено(НастройкаОтраженияНДСПоОборудованию.Счет) Тогда
	//			Если ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле Тогда
	//				СуммаВсего = СтрокаТЧ.Сумма - СтрокаТЧ.СуммаНДС;
	//			Иначе
	//				СуммаВсего = СтрокаТЧ.Сумма;
	//			КонецЕсли;
	//			СуммаНДСОтдельно = СтрокаТЧ.СуммаНДС;
	//		Иначе	
	//			Если ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле Тогда
	//				СуммаВсего = СтрокаТЧ.Сумма;
	//			Иначе
	//				СуммаВсего = СтрокаТЧ.Сумма + СтрокаТЧ.СуммаНДС;
	//			КонецЕсли;
	//		КонецЕсли;
	//		
	//		//Дт08 - Кт60.х
	//		Проводка = ДвиженияФинансовый.Добавить();
	//		Проводка.Период	= ЭтотОбъект.Дата;
	//		//Проводка.Сумма	= СтрокаТЧ.Сумма;
	//		Проводка.Сумма	= СуммаВсего;
	//		
	//		Проводка.СчетДт	= ПланыСчетов.Финансовый.КапитальныеВложения;
	//		Проводка.СубконтоДт.ОсновныеСредства				= СтрокаТЧ.ОсновноеСредство;
	//		Проводка.СубконтоДт.СтатьиДвиженияДенежныхСредств 	= ЭтотОбъект.СтатьяДДС;
	//		Если НЕ Проводка.Период < мДатаНовогоУчетаСчетовОС Тогда
	//			Проводка.СубконтоДт.ЦФО 						= мЦФО;
	//		КонецЕсли;
	//		
	//		Проводка.СчетКт	= ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом;
	//		Проводка.СубконтоКт.Организации	= ЭтотОбъект.Организация;
	//		Проводка.СубконтоКт.Контрагенты	= ЭтотОбъект.Контрагент;
	//		
	//		Если СуммаНДСОтдельно <> 0 Тогда
	//			Проводка = ДвиженияФинансовый.Добавить();
	//			Проводка.Период	= ЭтотОбъект.Дата;
	//			//Проводка.Сумма	= СтрокаТЧ.Сумма;
	//			Проводка.Сумма	= СуммаНДСОтдельно;
	//			
	//			Проводка.СчетДт	= НастройкаОтраженияНДСПоОборудованию.Счет;
	//			Проводка.СубконтоДт.Организации				= ЭтотОбъект.Организация;
	//			Проводка.СубконтоДт.ВидыНалогов 			= НастройкаОтраженияНДСПоОборудованию.ДопРеквизит;
	//			Проводка.СубконтоДт.СтавкиНДС 				= СтрокаТЧ.СтавкаНДС;
	//			
	//			Проводка.СчетКт	= ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом;
	//			Проводка.СубконтоКт.Организации	= ЭтотОбъект.Организация;
	//			Проводка.СубконтоКт.Контрагенты	= ЭтотОбъект.Контрагент;
	//		КонецЕсли;	
	//		
	//		
	//		// Дт02
	//		Проводка = ДвиженияФинансовый.Добавить();
	//		Проводка.Период	= ЭтотОбъект.Дата;
	//		
	//		Проводка.СчетДт	= мСчет02;
	//		Если Проводка.Период < мДатаНовогоУчетаСчетовОС Тогда
	//			Проводка.СубконтоДт.ЦФО				= мЦФО;
	//		КонецЕсли;
	//		Проводка.СубконтоДт.МестаХраненияОС		= ЭтотОбъект.Склад;
	//		Проводка.СубконтоДт.ОсновныеСредства	= СтрокаТЧ.ОсновноеСредство;
	//		Если НЕ мЕстьПриходники Тогда
	//			Проводка.КоличествоДт 				= 1;
	//		КонецЕсли;
	//		//Проводка.Сумма 							= СтрокаТЧ.Сумма;
	//		Проводка.Сумма 							= СуммаВсего;
	//		
	//		// списание на торговую точку аналогично расходному ордеру складскому
	//		Если (НЕ СтрокаТЧ.ТорговаяТочка.Пустая())
	//				И НЕ ЭтотОбъект.Дата < Дата(2014, 9, 1) Тогда
	//			
	//			ЭтоНеНоваяТТ = (СтрокаТЧ.ТорговаяТочка.ДатаОткрытия < ДобавитьМесяц(НачалоДня(ЭтотОбъект.Дата), -1));
	//			//Списание суммы со счета 02 склад, приход на 02 ТТ
	//			Проводка = ДвиженияФинансовый.Добавить();
	//			Проводка.Период							= ЭтотОбъект.Дата;
	//			Проводка.СчетДт							= мСчет02;
	//			Проводка.СубконтоДт.МестаХраненияОС		= СтрокаТЧ.ТорговаяТочка;
	//			Проводка.СубконтоДт.ОсновныеСредства	= СтрокаТЧ.ОсновноеСредство;
	//			Проводка.КоличествоДт 					= 1;
	//			Проводка.СчетКт							= мСчет02;
	//			Проводка.СубконтоКт.МестаХраненияОС		= ЭтотОбъект.Склад;
	//			Проводка.СубконтоКт.ОсновныеСредства	= СтрокаТЧ.ОсновноеСредство;
	//			Проводка.КоличествоКт 					= 1;
	//			//Проводка.Сумма       					= СтрокаТЧ.Сумма;
	//			Проводка.Сумма       					= СуммаВсего;
	//			
	//			Если ЭтоНеНоваяТТ
	//					И НЕ СтрокаТЧ.Инвестиция Тогда
	//				//Дт44-Кт08
	//				Проводка = ДвиженияФинансовый.ДобавитьДебет();
	//				Проводка.Период							= ЭтотОбъект.Дата;
	//				//Проводка.Сумма							= СтрокаТЧ.Сумма;
	//				Проводка.Сумма							= СуммаВсего;
	//				
	//				Проводка.СчетДт							= НастройкиВводВЭксплуатациюНаСтаройТТ.Счет;
	//				Проводка.СубконтоДт.ТорговыеТочки		= СтрокаТЧ.ТорговаяТочка;
	//				//mind 2015-01-27
	//				Если ЗначениеЗаполнено(СтрокаТЧ.ТорговаяТочка)
	//					И СтрокаТЧ.ТорговаяТочка.ТипСтруктурнойЕдиницы <> Перечисления.ТипыСтруктурныхЕдиниц.Розница Тогда
	//					Проводка.СубконтоДт.ТорговыеТочки			= Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_000");
	//				Иначе
	//					Проводка.СубконтоДт.ТорговыеТочки			= СтрокаТЧ.ТорговаяТочка;
	//				КонецЕсли;
	//				Проводка.СубконтоДт.СтатьиДоходовРасходов = НастройкиВводВЭксплуатациюНаСтаройТТ.СтатьяДоходовРасходов;
	//				Проводка.СубконтоДт.ЦФО					= мЦФО;
	//				
	//				Проводка.СчетКт							= ПланыСчетов.Финансовый.КапитальныеВложения;
	//				Проводка.СубконтоКт.ОсновныеСредства	= СтрокаТЧ.ОсновноеСредство;
	//				Проводка.СубконтоКт.СтатьиДвиженияДенежныхСредств	= ЭтотОбъект.СтатьяДДС;//ПолучитьСтатьюДДСОсновногоСредства(СтрокаТЧ.ОсновноеСредство);
	//				Проводка.СубконтоКт.ЦФО					= МЦФО;
	//			Иначе
	//				//Дт01-Кт08
	//				Проводка = ДвиженияФинансовый.ДобавитьДебет();
	//				Проводка.Период							= ЭтотОбъект.Дата;
	//				//Проводка.Сумма							= СтрокаТЧ.Сумма;
	//				Проводка.Сумма							= СуммаВсего;
	//				
	//				Проводка.СчетДт							= ПланыСчетов.Финансовый.Инвестиции;
	//				Проводка.СубконтоДт.ТорговыеТочки		= СтрокаТЧ.ТорговаяТочка;
	//				
	//				Проводка.СчетКт							= ПланыСчетов.Финансовый.КапитальныеВложения;
	//				Проводка.СубконтоКт.ОсновныеСредства	= СтрокаТЧ.ОсновноеСредство;
	//				Проводка.СубконтоКт.СтатьиДвиженияДенежныхСредств	= ЭтотОбъект.СтатьяДДС;//ПолучитьСтатьюДДСОсновногоСредства(СтрокаТЧ.ОсновноеСредство);
	//				Проводка.СубконтоКт.ЦФО					= МЦФО;
	//				
	//				//Дт44-Кт01
	//				Проводка = ДвиженияФинансовый.ДобавитьДебет();
	//				Проводка.Период							= ЭтотОбъект.Дата;
	//				//Проводка.Сумма							= СтрокаТЧ.Сумма;
	//				Проводка.Сумма							= СуммаВсего;
	//				
	//				Проводка.СчетДт							= ПараметрыСписания01.Счет;
	//				//mind 2015-01-27
	//				Если ЗначениеЗаполнено(СтрокаТЧ.ТорговаяТочка)
	//					И СтрокаТЧ.ТорговаяТочка.ТипСтруктурнойЕдиницы <> Перечисления.ТипыСтруктурныхЕдиниц.Розница Тогда
	//					Проводка.СубконтоДт.ТорговыеТочки			= Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_000");
	//				Иначе
	//					Проводка.СубконтоДт.ТорговыеТочки			= СтрокаТЧ.ТорговаяТочка;
	//				КонецЕсли;
	//				Проводка.СубконтоДт.СтатьиДоходовРасходов = ПараметрыСписания01.СтатьяДоходовРасходов;
	//				Проводка.СубконтоДт.ЦФО					= мЦФО;
	//				
	//				Проводка.СчетКт							= ПланыСчетов.Финансовый.Инвестиции;
	//				Проводка.СубконтоКт.ТорговыеТочки		= СтрокаТЧ.ТорговаяТочка;
	//			КонецЕсли;
	//		КонецЕсли;	
	//		
	//	КонецЦикла;
	//	
	//	АК_УчетМСФО.ЗаполнитьОрганизацию(ДвиженияФинансовый, ЭтотОбъект.Организация);
	//	ДвиженияФинансовый.Записать();
	//	
	//	// перепроведение расходных складских ордеров (если есть такие, проведенные после тек. документа)
	//	ДопМодульСервер.Оборудование_ПерепроведениеРасходников(ЭтотОбъект.Дата, ЭтотОбъект.Склад, ЭтотОбъект.Оборудование.ВыгрузитьКолонку("ОсновноеСредство"));
		
	КонецЕсли;	
		
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.11.21 ИП-00016528	 	
Процедура ОтразитьДвиженияФинансовыйОС_Корректировка() Экспорт
	
	ДвиженияФинансовый = Движения.Финансовый;
	НастройкаОтраженияНДСПоОборудованию = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(
												Перечисления.ВидыОперацийВУчете.НДС_ОборудованиеПоступлениеТоваровИУслуг,
												Дата);
												
	Отказ = Ложь;											
												
	Для Каждого СтрокаОС Из Оборудование Цикл
		
		СуммаПроводки = СтрокаОС.Сумма - СтрокаОС.СуммаДоИзменения;
		СуммаНДС = СтрокаОС.СуммаНДС - СтрокаОС.СуммаНДСДоИзменения;
		СуммаПроводки = ?(ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле,СуммаПроводки-СуммаНДС,СуммаПроводки);		
		
		Если СуммаПроводки <> 0 Тогда
			
			Если АК_УчетМСФО.ОСВведеноВЭксплуатацию(СтрокаОС.ОсновноеСредство,Дата) Тогда
				
				СчетУчетаОС = АК_ОсновныеСредства.СчетУчета(СтрокаОС.ОсновноеСредство,Дата);
				
				//Если ОС принято к учет - увеличим стоимость
				Если АК_ОсновныеСредства.ЭтоСчетУчетаПринятогоОС(СчетУчетаОС) Тогда					
					
					СчетУчетаПриобретения = АК_УчетМСФО.ПолучитьСчетУчетаПриобретенияОС(ДокументПоступления, СтрокаОС.ОсновноеСредство);
					
					Если СчетУчетаПриобретения.Пустая() Тогда
						ОбщегоНазначения.СообщитьОбОшибке("НЕ удалось определить счет учета приобретения основного средства: " + Строка(СтрокаОС.ОсновноеСредство) + " с инв. номером: " + СтрокаОС.ОсновноеСредство.ИнвентарныйНомер, Отказ);
					КонецЕсли;					
					
					Если СуммаПроводки > 0 Тогда
						//08-60 или 60-08
						Проводка = Движения.Финансовый.Добавить();					
						Проводка.Период								  = Дата;
						Проводка.Организация                          = Организация;
						Проводка.НомерЖурнала 						  = "ТД";
						Проводка.Содержание							  = "Увеличение стоимости ОС";					
						Проводка.СчетДт  							  = СчетУчетаПриобретения;					
						Проводка.СубконтоДт.ОсновныеСредства          = СтрокаОС.ОсновноеСредство;					
						Проводка.СчетКт                               = СчетУчетаРасчетовСКонтрагентом;
						Проводка.СубконтоКт.Контрагенты				  = Контрагент;
						Проводка.СубконтоКт.Организации				  = Организация;              					
						Проводка.Сумма    							  = СуммаПроводки;
					                                                                              					
					Иначе
						//08-60 или 60-08
						Проводка = Движения.Финансовый.Добавить();					
						Проводка.Период								  = Дата;
						Проводка.Организация                          = Организация;
						Проводка.НомерЖурнала 						  = "ТД";
						Проводка.Содержание							  = "Уменьшение стоимости ОС";					
						Проводка.СчетКт  							  = СчетУчетаПриобретения;					
						Проводка.СубконтоКт.ОсновныеСредства          = СтрокаОС.ОсновноеСредство;					
						Проводка.СчетДт                               = СчетУчетаРасчетовСКонтрагентом;
						Проводка.СубконтоДт.Контрагенты				  = Контрагент;
						Проводка.СубконтоДт.Организации				  = Организация;              					
						Проводка.Сумма    							  = -СуммаПроводки;
					                                                                              					
					КонецЕсли;
					
					Проводка = Движения.Финансовый.Добавить();					
					Проводка.Период								  = Дата;
					Проводка.Организация                          = Организация;
					Проводка.НомерЖурнала 						  = "ТД";
					Проводка.Содержание							  = ?(СуммаПроводки > 0, "Увеличение стоимости ОС", "Уменьшение стоимости ОС");
					Проводка.СчетДт  							  = СчетУчетаОС;
					Проводка.СубконтоДт.ОсновныеСредства          = СтрокаОС.ОсновноеСредство;					
					Проводка.СчетКт  							  = СчетУчетаПриобретения;					
					Проводка.СубконтоКт.ОсновныеСредства          = СтрокаОС.ОсновноеСредство;					
					Проводка.Сумма    							  = СуммаПроводки;
					
				КонецЕсли;
				
				
			Иначе
				
				//Дт08 - Кт60.х
				Проводка = ДвиженияФинансовый.Добавить();
				Проводка.Период						= Дата;
				Проводка.Организация				= Организация;
				
				Сумма                            	= СуммаПроводки;
				Проводка.Сумма						= Сумма;
				
				Проводка.СчетДт						= СтрокаОС.СчетУчета;
				Проводка.СубконтоДт.ОсновныеСредства= СтрокаОС.ОсновноеСредство;
				
				Проводка.СчетКт						= СчетУчетаРасчетовСКонтрагентом;
				
				//Пока субконто тоже заполняем
				Проводка.СубконтоКт.Организации		= Организация;		
				Проводка.СубконтоКт.Контрагенты		= Контрагент;
				
				АК_УчетМСФО.ВыделитьДвиженияПрошлогоГода(ДвиженияФинансовый,Проводка,ДатаВходящегоДокумента,Дата);
				
			КонецЕсли;
			
		КонецЕсли;
		
		//НДС отдельно
		Если СуммаНДС > 0 Тогда
			Проводка = ДвиженияФинансовый.Добавить();	
			Проводка.Период						= Дата;
			Проводка.Организация				= Организация;
			
			Проводка.Сумма						= СуммаНДС;
				
			Проводка.СчетДт	= НастройкаОтраженияНДСПоОборудованию.Счет;
			Проводка.СубконтоДт.Организации				= Организация;
			Проводка.СубконтоДт.ВидыНалогов 			= НастройкаОтраженияНДСПоОборудованию.ДопРеквизит;
			Проводка.СубконтоДт.СтавкиНДС 				= СтрокаОС.СтавкаНДС;
					
			Проводка.СчетКт						= СчетУчетаРасчетовСКонтрагентом;
			
			//Пока субконто тоже заполняем
			Проводка.СубконтоКт.Организации		= Организация;		
			Проводка.СубконтоКт.Контрагенты		= Контрагент;
			
			АК_УчетМСФО.ВыделитьДвиженияПрошлогоГода(ДвиженияФинансовый,Проводка,ДатаВходящегоДокумента,Дата);		

			АК_УчетМСФО.ЗаполнитьОрганизацию(ДвиженияФинансовый, ЭтотОбъект.Организация); //+++АК SHEP 2018.05.11 ИП-00018492: я бы лучше убрал след. строку, но неизвестно, на что повлияет
			ДвиженияФинансовый.Записать();
			
		КонецЕсли;
		
	КонецЦикла;
	
	// перепроведение расходных складских ордеров (если есть такие, проведенные после тек. документа)
	//ДопМодульСервер.Оборудование_ПерепроведениеРасходников(ЭтотОбъект.Дата, ЭтотОбъект.Склад, ЭтотОбъект.Оборудование.ВыгрузитьКолонку("ОсновноеСредство"));
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.11.21 ИП-00016528	 	
Функция ПолучитьСтатьюДР(СтатьяДДС)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиДоходовРасходов.Ссылка
		|ИЗ
		|	Справочник.СтатьиДоходовРасходов КАК СтатьиДоходовРасходов
		|ГДЕ
		|	СтатьиДоходовРасходов.ОсновнаяСтатьяДвиженияДенежныхСредств = &СтатьяДДС";

	Запрос.УстановитьПараметр("СтатьяДДС", СтатьяДДС);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат  ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;

КонецФункции

//+++АК Susk (Суслин К.В.) 2017.11.21 ИП-00016528	 	
Функция Оборудование_УжеСписано(мОсновноеСредство)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаОстатков"	, Дата);
	Запрос.УстановитьПараметр("ОсновноеСредство", мОсновноеСредство);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФинансовыйОбороты.Субконто2
	|ПОМЕСТИТЬ ВТОбороты
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Обороты(, &ДатаОстатков, , Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.КапитальныеВложения), , Субконто2 = &ОсновноеСредство, , ) КАК ФинансовыйОбороты
	|ГДЕ
	|	ФинансовыйОбороты.СуммаОборот > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФинансовыйОстатки.Субконто2
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(&ДатаОстатков, Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.КапитальныеВложения), , Субконто2 = &ОсновноеСредство) КАК ФинансовыйОстатки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбороты КАК ВТОбороты
	|		ПО (ВТОбороты.Субконто2 = ФинансовыйОстатки.Субконто2)
	|ГДЕ
	|	ФинансовыйОстатки.СуммаОстаток = 0";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

Процедура ОтразитьДвиженияПоПретензиямПоставщикам()
	
	СтруктураНастроек = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.ПретензияПоставщику, Дата);
	НастройкаОтраженияНДСПоТоварам = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.НДС_ТоварыПоступлениеТоваровИУслуг, Дата);
	СуммаВключаетНДС = (ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле);
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	КорректировкаПоступленияТовары.Номенклатура,
	|	КорректировкаПоступленияТовары.КоличествоПретензияПоставщику КАК КоличествоПретензияПоставщику,
	|	КорректировкаПоступленияТовары.Цена,
	|	КорректировкаПоступленияТовары.СчетУчета,
	|	КорректировкаПоступленияТовары.Сумма,
	|	КорректировкаПоступленияТовары.Количество,
	|	КорректировкаПоступленияТовары.СтавкаНДС
	|ИЗ
	|	Документ.КорректировкаПоступления.Товары КАК КорректировкаПоступленияТовары
	|ГДЕ
	|	КорректировкаПоступленияТовары.Ссылка = &Ссылка
	|	И КорректировкаПоступленияТовары.КоличествоПретензияПоставщику <> 0");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий()Цикл
		
		Если Выборка.КоличествоПретензияПоставщику > 0 Тогда
			
			// Дт 60 - Кт 76 (Сторно по недостаче)
			Проводка = Движения.Финансовый.Добавить();
			Проводка.Период	= Дата;
			
			// ДТ
			// Если упаковка то ДТ 60.5
			Если Выборка.Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Упаковка Тогда
				Проводка.СчетДт = ПланыСчетов.Финансовый.РасчетыСПоставщикамиУпаковки;
			Иначе
				Проводка.СчетДт = СчетУчетаРасчетовСКонтрагентом;
			КонецЕсли;	
			
			Проводка.СубконтоДт.Организации = Организация;
			Проводка.СубконтоДт.Контрагенты = Контрагент;
			
			// КТ
			Проводка.СчетКт = ПланыСчетов.Финансовый.РасчетыСПрочимиПоставщикамиИПодрядчиками;
			Проводка.СубконтоКт.Организации = Организация;
			Проводка.СубконтоКт.Контрагенты = Контрагент;
			
			// Сумма проводки всегда без НДС
			СуммаПроводки = Окр(Выборка.Сумма*Выборка.КоличествоПретензияПоставщику/?(Выборка.Количество = 0, 1, Выборка.Количество), 2);
			СуммаНДС = Окр(УчетНДС.РассчитатьСуммуНДС(СуммаПроводки,
													Истина, СуммаВключаетНДС,
													УчетНДС.ПолучитьСтавкуНДС(Выборка.СтавкаНДС)), 2);
			
			Если СуммаВключаетНДС Тогда
				СуммаПроводки = СуммаПроводки - СуммаНДС;
			КонецЕсли;											   
			
			Проводка.Сумма = СуммаПроводки;
			Проводка.Содержание = "Сторно по недостаче товаров (претензия)";
			
			
			//отдельная проводка по НДС при включенной новой системе
			Если СуммаНДС <> 0 И ЗначениеЗаполнено(НастройкаОтраженияНДСПоТоварам.Счет)Тогда
				
				// Дт 60 - Кт 68 (Сторно НДС)
				Проводка = Движения.Финансовый.Добавить();
				Проводка.Период	= Дата;
				
				// ДТ
				// Если упаковка то ДТ 60.5
				Если Выборка.Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Упаковка Тогда
					Проводка.СчетДт = ПланыСчетов.Финансовый.РасчетыСПоставщикамиУпаковки;
				Иначе
					Проводка.СчетДт = СчетУчетаРасчетовСКонтрагентом;
				КонецЕсли;	
				
				Проводка.СубконтоДт.Организации = Организация;
				Проводка.СубконтоДт.Контрагенты = Контрагент;
				
				// КТ
				Проводка.СчетКт = НастройкаОтраженияНДСПоТоварам.Счет;
				Проводка.СубконтоКт.Организации  = Организация;
				Проводка.СубконтоКт.ВидыНалогов	 = НастройкаОтраженияНДСПоТоварам.ДопРеквизит;
				Проводка.СубконтоКт.СтавкиНДС	 = Выборка.СтавкаНДС;
				
				Проводка.Сумма = СуммаНДС;
				Проводка.Содержание = "Сторно НДС по недостаче товаров (претензия)";
				
			КонецЕсли;
			
		ИначеЕсли Выборка.КоличествоПретензияПоставщику < 0 Тогда
			
			// Дт 76 - Кт 60 (Сторно по излишкам)
			Проводка = Движения.Финансовый.Добавить();
			Проводка.Период	= Дата;
			
			// ДТ
			Проводка.СчетДт = ПланыСчетов.Финансовый.РасчетыСПрочимиПоставщикамиИПодрядчиками;
			Проводка.СубконтоДт.Организации = Организация;
			Проводка.СубконтоДт.Контрагенты = Контрагент;
			
			// КТ
			// Если упаковка то КТ 60.5
			Если Выборка.Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Упаковка Тогда
				Проводка.СчетКт = ПланыСчетов.Финансовый.РасчетыСПоставщикамиУпаковки;
			Иначе
				Проводка.СчетКт = СчетУчетаРасчетовСКонтрагентом;
			КонецЕсли;	
			
			Проводка.СубконтоКт.Организации = Организация;
			Проводка.СубконтоКт.Контрагенты = Контрагент;
			
			// Сумма проводки всегда без НДС
			СуммаПроводки = Окр(Выборка.Сумма*(-Выборка.КоличествоПретензияПоставщику)/?(Выборка.Количество = 0, 1, Выборка.Количество), 2);
			СуммаНДС = Окр(УчетНДС.РассчитатьСуммуНДС(СуммаПроводки,
													Истина, СуммаВключаетНДС,
													УчетНДС.ПолучитьСтавкуНДС(Выборка.СтавкаНДС)), 2);
			
			Если СуммаВключаетНДС Тогда
				СуммаПроводки = СуммаПроводки - СуммаНДС;
			КонецЕсли;											   
			
			Проводка.Сумма = СуммаПроводки;
			Проводка.Содержание = "Сторно по излишкам товаров (претензия)";
			
			
			//отдельная проводка по НДС при включенной новой системе
			Если СуммаНДС <> 0 И ЗначениеЗаполнено(НастройкаОтраженияНДСПоТоварам.Счет)Тогда
				
				//// Дт 68 - Кт 60 (Сторно НДС)
				Проводка = Движения.Финансовый.Добавить();
				Проводка.Период	= Дата;
				
				// ДТ
				Проводка.СчетДт = НастройкаОтраженияНДСПоТоварам.Счет;
				Проводка.СубконтоДт.Организации  = Организация;
				Проводка.СубконтоДт.ВидыНалогов	 = НастройкаОтраженияНДСПоТоварам.ДопРеквизит;
				Проводка.СубконтоДт.СтавкиНДС	 = Выборка.СтавкаНДС;
				
				// КТ
				// Если упаковка то КТ 60.5
				Если Выборка.Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Упаковка Тогда
					Проводка.СчетКт = ПланыСчетов.Финансовый.РасчетыСПоставщикамиУпаковки;
				Иначе
					Проводка.СчетКт = СчетУчетаРасчетовСКонтрагентом;
				КонецЕсли;	
				
				Проводка.СубконтоКт.Организации = Организация;
				Проводка.СубконтоКт.Контрагенты = Контрагент;
				
				Проводка.Сумма = СуммаНДС;
				Проводка.Содержание = "Сторно НДС по излишкам товаров (претензия)";
				
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

//shae 2018.08.07 ИП-00019236 
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	СкладыСервер.ПроверитьНаСоответствиеОрганизацииЗакупки(ЭтотОбъект.Организация, ЭтотОбъект.Товары.Выгрузить(), Отказ);	

КонецПроцедуры

//shae 2018.09.03 ИП-00019212
Функция ПолучитьТаблицуТовары()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаПоступленияТовары.Ссылка,
	|	КорректировкаПоступленияТовары.НомерСтроки,
	|	КорректировкаПоступленияТовары.Номенклатура,
	|	КорректировкаПоступленияТовары.ЕдиницаИзмерения,
	|	КорректировкаПоступленияТовары.Коэффициент,
	|	КорректировкаПоступленияТовары.Количество,
	|	КорректировкаПоступленияТовары.Цена,
	|	КорректировкаПоступленияТовары.Сумма,
	|	КорректировкаПоступленияТовары.СтавкаНДС,
	|	КорректировкаПоступленияТовары.СуммаНДС,
	|	КорректировкаПоступленияТовары.СчетУчета,
	|	КорректировкаПоступленияТовары.СтатьяТовародвижения,
	|	КорректировкаПоступленияТовары.КоличествоДоКорректировки,
	|	КорректировкаПоступленияТовары.КоличествоДоИзменения,
	|	КорректировкаПоступленияТовары.ЦенаДоКорректировки,
	|	КорректировкаПоступленияТовары.ЦенаДоИзменения,
	|	КорректировкаПоступленияТовары.СуммаДоКорректировки,
	|	КорректировкаПоступленияТовары.СуммаДоИзменения,
	|	КорректировкаПоступленияТовары.СтавкаНДСДоИзменения,
	|	КорректировкаПоступленияТовары.СуммаНДСДоКорректировки,
	|	КорректировкаПоступленияТовары.СуммаНДСДоИзменения,
	|	КорректировкаПоступленияТовары.ЕстьВДокументеПоступления,
	|	КорректировкаПоступленияТовары.КоличествоПретензияПоставщику,
	|	КорректировкаПоступленияТовары.Номенклатура.ТипТовара КАК ТипТовара
	|ИЗ
	|	Документ.КорректировкаПоступления.Товары КАК КорректировкаПоступленияТовары
	|ГДЕ
	|	КорректировкаПоступленияТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

//+++АК SHEP 2018.05.03 ИП-00018453
СтруктурныеЕдиницыСторонняяПереработка = ОбщегоНазначенияПовтИсп.СторонняяПереработкаДляОрганизации(Организация);
СкладПереработчика = Документы.РасходныйОрдерСклад.ПолучитьСкладПереработчика(Контрагент, Организация);
//---АК SHEP 2018.05.03
