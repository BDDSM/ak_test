
// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

//Хранит текущую строку списка оплачиваемых документов
Перем СтрокаПлатеж;

Перем ОперацияАпдекс; //+++АК sils 07.06.2018 ИП-00018876

Процедура УстановитьВидимостьСубконто()

	Для Ном = 1 по 3 Цикл

		Если (Ном <= ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом.ВидыСубконто.Количество())
				И ЗначениеЗаполнено(ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом) Тогда
			ЭлементыФормы["НадписьСубконтоКт" + Ном].Заголовок = ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом.ВидыСубконто[Ном-1].ВидСубконто.Наименование;
			ЭлементыФормы["НадписьСубконтоКт" + Ном].Видимость = Истина;
			ЭлементыФормы["СубконтоКт" + Ном].Видимость        = Истина;
		Иначе
			ЭлементыФормы["НадписьСубконтоКт" + Ном].Видимость = Ложь;
			ЭлементыФормы["СубконтоКт" + Ном].Видимость        = Ложь;
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

Процедура СчетУчетаРасчетовСКонтрагентомПриИзменении(Элемент)

	УстановитьВидимостьСубконто();

	РаботаСДиалогами.ПриВыбореСчетаВТабличномПоле(Элемент.Значение,
													ЭтотОбъект.СубконтоКт1, ЭлементыФормы.СубконтоКт1,
													ЭтотОбъект.СубконтоКт2, ЭлементыФормы.СубконтоКт2,
													ЭтотОбъект.СубконтоКт3, ЭлементыФормы.СубконтоКт3);
	
	Для Ном = 1 по 3 Цикл
		Если НЕ ЗначениеЗаполнено(ЭлементыФормы["СубконтоКт" + Ном].Значение) Тогда
			Если ТипЗнч(ЭлементыФормы["СубконтоКт" + Ном].Значение) = Тип("СправочникСсылка.Организации") Тогда
				ЭлементыФормы["СубконтоКт" + Ном].Значение = ЭтотОбъект.Организация;
			ИначеЕсли ТипЗнч(ЭлементыФормы["СубконтоКт" + Ном].Значение) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
				ЭлементыФормы["СубконтоКт" + Ном].Значение = ЭтотОбъект.СтруктурнаяЕдиница;
			ИначеЕсли ТипЗнч(ЭлементыФормы["СубконтоКт" + Ном].Значение) = Тип("СправочникСсылка.СтатьиДвиженияДенежныхСредств") Тогда
				ЭлементыФормы["СубконтоКт" + Ном].Значение = ЭтотОбъект.СтатьяДвиженияДенежныхСредств;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	мСчетБУ = Элемент.Значение;

КонецПроцедуры

Процедура ПриОткрытии()
		
	Если НЕ ЭтотОбъект.ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ЭтотОбъект, ЭтаФорма);
	Иначе
		Если ПараметрОбъектКопирования = Неопределено Тогда
			ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствПрочее;
//			ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, "Покупка");
		КонецЕсли;
		ТекущийПользователь = глЗначениеПеременной("глТекущийПользователь");
		ЗаполнениеДокументовПереопределяемый.ЗаполнитьШапкуДокумента(ЭтотОбъект, ТекущийПользователь);
//		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, "Покупка");
		//УправлениеДенежнымиСредствами.ЗаполнитьРеквизитыРасчетногоДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"), мВалютаРегламентированногоУчета, РасшифровкаПлатежа);
		
		ЭтотОбъект.СчетКасса = ПланыСчетов.Хозрасчетный.КассаОрганизации;
	КонецЕсли;
	
	УстановитьТипКонтрагент(Истина);
	
	УстановитьВидимость();
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	//+++АК sils 08.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(ЭтоНовый(), "Новый документ", "" + ЭтотОбъект));
	//---АК
КонецПроцедуры

Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
КонецПроцедуры

Процедура ВидОперацииПриИзменении(Элемент)
	
	УстановитьТипКонтрагент();
	
	УстановитьВидимость();
	СтатьяДДС_БУ_ПоУмолчанию();
	
КонецПроцедуры

// Процедура устанавливает видимость для тех колонок в табличной части 
// "Товары", видимость которых определяется реквизитами документа.
//
// Параметры:
//  Нет.
//
Процедура УстановитьВидимость()
	
	УстановитьВидимостьСубконто();

	Если ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствРозничнаяВыручка Тогда
		
		РаботаСДиалогами.УстановитьТекущуюСтраницу("ПриходДенежныхСредствРозничнаяВыручка", ЭлементыФормы.ОсновнаяПанель);
		
		ЭлементыФормы.НадписьДоговорКонтрагента.Видимость 	= Ложь;
		ЭлементыФормы.ДоговорКонтрагента.Видимость 			= Ложь;
		ЭлементыФормы.НадписьПериодРегистрации.Видимость 	= Ложь;
		ЭлементыФормы.ПериодРегистрации.Видимость 			= Ложь;
		
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ПолучениеНаличныхДенежныхСредствВБанке Тогда
		
		РаботаСДиалогами.УстановитьТекущуюСтраницу("ПолучениеНаличностиВБанке", ЭлементыФормы.ОсновнаяПанель);
		
		ЭлементыФормы.НадписьДоговорКонтрагента.Видимость 	= Ложь;
		ЭлементыФормы.ДоговорКонтрагента.Видимость 			= Ложь;
		ЭлементыФормы.НадписьПериодРегистрации.Видимость 	= Ложь;
		ЭлементыФормы.ПериодРегистрации.Видимость 			= Ложь;
		
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.Инкассация Тогда
		
		РаботаСДиалогами.УстановитьТекущуюСтраницу("Инкассация", ЭлементыФормы.ОсновнаяПанель);
		
		ЭлементыФормы.НадписьДоговорКонтрагента.Видимость 	= Ложь;
		ЭлементыФормы.ДоговорКонтрагента.Видимость 			= Ложь;
		ЭлементыФормы.НадписьПериодРегистрации.Видимость 	= Ложь;
		ЭлементыФормы.ПериодРегистрации.Видимость 			= Ложь;
		
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствПрочее Тогда
		
		РаботаСДиалогами.УстановитьТекущуюСтраницу("Прочее", ЭлементыФормы.ОсновнаяПанель);
		
		ЭлементыФормы.НадписьПериодРегистрации.Видимость 	= Ложь;
		ЭлементыФормы.ПериодРегистрации.Видимость 			= Ложь;
		
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратЗаработнойПлаты Тогда
		
		РаботаСДиалогами.УстановитьТекущуюСтраницу("ЗаработнаяПлата", ЭлементыФормы.ОсновнаяПанель);
		
		ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Финансовый.РасчетыСПерсоналомПоОплатеТруда;
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.Контрагент) Тогда
			УстановитьТипФизическиеЛица();
		КонецЕсли;
		
		ЭлементыФормы.НадписьДоговорКонтрагента.Видимость 	= Ложь;
		ЭлементыФормы.ДоговорКонтрагента.Видимость 			= Ложь;
		ЭлементыФормы.НадписьПериодРегистрации.Видимость 	= Ложь;
		ЭлементыФормы.ПериодРегистрации.Видимость 			= Ложь;
		
	//ИначеЕсли ВидОперации=Перечисления.ВидыОперацийПКО.ВозвратДенежныхСредствРаботником Тогда
	//	
	//	РаботаСДиалогами.УстановитьТекущуюСтраницу("ВозвратПодотчетника",ЭлементыФормы.ОсновнаяПанель);
	//	ЭлементыФормы.РамкаПолучатель.Заголовок ="Расчеты с работниками";
	//	ЭлементыФормы.НадписьФизЛицо.Заголовок  ="Сотрудник:";
	
	ИначеЕсли (ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПостояннойЧастиАрендыОтАрендатора)
			ИЛИ (ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПеременнойЧастиАрендыОтАрендатора)
			ИЛИ (ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратПостояннойЧастиАрендыОтАрендодателя)
			ИЛИ (ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратПеременнойЧастиАрендыОтАрендодателя) Тогда
		
		РаботаСДиалогами.УстановитьТекущуюСтраницу("Прочее", ЭлементыФормы.ОсновнаяПанель);
		
		ЭлементыФормы.НадписьДоговорКонтрагента.Видимость 	= Истина;
		ЭлементыФормы.ДоговорКонтрагента.Видимость 			= Истина;
		ЭлементыФормы.НадписьПериодРегистрации.Видимость 	= Истина;
		ЭлементыФормы.ПериодРегистрации.Видимость 			= Истина;
		
	ИначеЕсли (ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаДепозитаОтАрендатора)
			ИЛИ (ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратДепозитаОтАрендодателя) Тогда
		
		РаботаСДиалогами.УстановитьТекущуюСтраницу("Прочее", ЭлементыФормы.ОсновнаяПанель);
		
		ЭлементыФормы.НадписьДоговорКонтрагента.Видимость 	= Истина;
		ЭлементыФормы.ДоговорКонтрагента.Видимость 			= Истина;
		ЭлементыФормы.НадписьПериодРегистрации.Видимость 	= Ложь;
		ЭлементыФормы.ПериодРегистрации.Видимость 			= Ложь;
		
	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.СнятиеНаличныхСРасчетногоСчета Тогда
		
		РаботаСДиалогами.УстановитьТекущуюСтраницу("Прочее", ЭлементыФормы.ОсновнаяПанель);
		
		ЭлементыФормы.НадписьДоговорКонтрагента.Видимость 	= Ложь;
		ЭлементыФормы.ДоговорКонтрагента.Видимость 			= Ложь;
		ЭлементыФормы.НадписьПериодРегистрации.Видимость 	= Ложь;
		ЭлементыФормы.ПериодРегистрации.Видимость 			= Ложь;
		
		ЭлементыФормы.НадписьСубконтоКт1.Видимость 	= Ложь; 
        ЭлементыФормы.СубконтоКт1.Видимость 		= Ложь;
		ЭлементыФормы.НадписьСубконтоКт3.Видимость 	= Ложь; 
        ЭлементыФормы.СубконтоКт3.Видимость 		= Ложь;		
		ЭлементыФормы.НадписьСубконтоКт2.Видимость 	= Истина; 
        ЭлементыФормы.СубконтоКт2.Видимость 		= Истина;
		
		ЭлементыФормы.ФизЛицоСнятиеНаличных.Видимость 			= Истина; 
        ЭлементыФормы.НадписьФизЛицоСнятиеНаличных.Видимость 	= Истина;
		
		ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Финансовый.СнятиеНаличныхСРасчетногоСчета;
		
	КонецЕсли;

КонецПроцедуры

Процедура УстановитьТипКонтрагент(флПриОткрытии = Ложь)

	ИмяСправочника 			= "Контрагенты";
	ИмяРасчетногоДокумента	= "РасходныйКассовыйОрдер";
	
	ЕстьКонтрагент			= Истина;
	ЕстьРасчетныйДокумент	= Ложь;
	
	Если (ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствРозничнаяВыручка)
		ИЛИ (ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПостояннойЧастиАрендыОтАрендатора)
		ИЛИ (ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПеременнойЧастиАрендыОтАрендатора)
		ИЛИ (ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаДепозитаОтАрендатора)
		ИЛИ (ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратПостояннойЧастиАрендыОтАрендодателя)
		ИЛИ (ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратПеременнойЧастиАрендыОтАрендодателя)
		ИЛИ (ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратДепозитаОтАрендодателя)
		ИЛИ (ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ПриходДенежныхСредствПрочее) Тогда

		//ИмяСправочника = ?( ВидПриемаРозничнойВыручки = Перечисления.ВидПриемаРозничнойВыручки.ИзНТТ, "Склады", "КассыККМ");
		ИмяСправочника = "Контрагенты";

	//ИначеЕсли ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратДенежныхСредствПодотчетником  Тогда

	//	ИмяСправочника = "ФизическиеЛица";
	//	ЕстьРасчетныйДокумент=Истина;
		
	//ИначеЕсли ВидОперации=Перечисления.ВидыОперацийПКО.РасчетыПоКредитамИЗаймамСРаботниками Тогда
	//	
	//	ИмяСправочника="ФизическиеЛица";
	//	ИмяРасчетногоДокумента="ДоговорЗаймаСРаботником";
	//	ЕстьРасчетныйДокумент=Истина;

	//ИначеЕсли ВидОперации=Перечисления.ВидыОперацийПКО.ВозвратДенежныхСредствРаботником Тогда
	//	
	//	ИмяСправочника="ФизическиеЛица";
	//	ЕстьРасчетныйДокумент=Ложь;

	ИначеЕсли ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратЗаработнойПлаты 
			ИЛИ ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.СнятиеНаличныхСРасчетногоСчета Тогда
		
		ИмяСправочника = "ФизическиеЛица";
		
	Иначе

		ЕстьКонтрагент = Ложь;

	КонецЕсли;

	Если ЕстьКонтрагент Тогда
		Если флПриОткрытии Тогда
			Массив = Новый Массив;
			Массив.Добавить(Тип("СправочникСсылка." + ИмяСправочника));
			ЭлементыФормы.Контрагент.ОграничениеТипа = Новый ОписаниеТипов(Массив);
		Иначе	
			Если ТипЗнч(ЭтотОбъект.Контрагент) <> Тип("СправочникСсылка." + ИмяСправочника) Тогда
				ЭтотОбъект.Контрагент = Справочники[ИмяСправочника].ПустаяСсылка();
			КонецЕсли;
		КонецЕсли;	
	Иначе
		Если НЕ флПриОткрытии Тогда
			Если НЕ ЭтотОбъект.Контрагент = Неопределено Тогда
				ЭтотОбъект.Контрагент = Неопределено;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура УстановитьТипФизическиеЛица(флПриОткрытии = Ложь)

	ИмяСправочника 			= "ФизическиеЛица";
	ИмяРасчетногоДокумента	= "РасходныйКассовыйОрдер";
	
	ЕстьКонтрагент			= Истина;
	ЕстьРасчетныйДокумент	= Ложь;
	
	Если ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийРКО.РасходДенежныхСредствПрочее Тогда

		ЕстьКонтрагент = Ложь;

	КонецЕсли;

	Если ЕстьКонтрагент Тогда
		Если флПриОткрытии Тогда
			Массив = Новый Массив;
			Массив.Добавить(Тип("СправочникСсылка." + ИмяСправочника));
			ЭлементыФормы.Сотрудник.ОграничениеТипа = Новый ОписаниеТипов(Массив);
		Иначе	
			Если ТипЗнч(ЭтотОбъект.Контрагент) <> Тип("СправочникСсылка." + ИмяСправочника) Тогда
				ЭтотОбъект.Контрагент = Справочники[ИмяСправочника].ПустаяСсылка();
			КонецЕсли;
		КонецЕсли;	
	Иначе
		Если НЕ флПриОткрытии Тогда
			Если НЕ ЭтотОбъект.Контрагент = Неопределено Тогда
				ЭтотОбъект.Контрагент = Неопределено;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	//+++АК sils 08.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Поступление в кассу");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	
	УстановитьТипКонтрагент(Истина);
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
КонецПроцедуры

Процедура КомментарийНачалоВыбора(Элемент, СтандартнаяОбработка)
			
	ФормаРедактированияТекста = ПолучитьОбщуюФорму("ФормаРедактированияТекста");
	ФормаРедактированияТекста.УстановитьРедактируемыйТекст(ЭтотОбъект.Комментарий);
	ОтредактировалиТекст = ФормаРедактированияТекста.ОткрытьМодально();
	
	Если ОтредактировалиТекст = Истина Тогда
		ЭтотОбъект.Комментарий = ФормаРедактированияТекста.ПолучитьРедактируемыйТекст();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	Если НЕ ПустаяСтрока(ЭтотОбъект.Номер) Тогда
		МеханизмНумерацииОбъектов.СброситьУстановленныйКодНомерОбъекта(ЭтотОбъект, "Номер", ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	КонецЕсли;

	Если ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.СнятиеНаличныхСРасчетногоСчета Тогда
		ЭтотОбъект.СубконтоКт2 = ЭтотОбъект.Организация.ОсновнойБанковскийСчет;	
	КонецЕсли;
	
КонецПроцедуры

Процедура СубконтоКт1НачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СписокПараметров = Новый Структура;
	Для н = 1 По 3 Цикл
		Если ТипЗнч(ЭтотОбъект["СубконтоКт" + н]) = Тип("СправочникСсылка.Контрагенты") Тогда
			СписокПараметров.Вставить("Контрагент", ЭтотОбъект["СубконтоКт" + н]);
		ИначеЕсли ТипЗнч(ЭтотОбъект["СубконтоКт" + н]) = Тип("СправочникСсылка.Организации") Тогда
			СписокПараметров.Вставить("Организация", ЭтотОбъект["СубконтоКт" + н]);
		КонецЕсли;
	КонецЦикла;
	
	БухгалтерскийУчет.ОбработатьВыборСубконто(Элемент, СтандартнаяОбработка, ЭтотОбъект.Организация, СписокПараметров);
	
КонецПроцедуры

Процедура СубконтоКт1ПриИзменении(Элемент)
	
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(Элемент.Значение);
	//
	СписокСубконто = Новый СписокЗначений;
	СписокСубконто.Добавить("СубконтоКт2");
	СписокСубконто.Добавить("СубконтоКт3");
	
	БухгалтерскийУчет.ОбработатьИзменениеСубконто(Элемент, ЭтотОбъект, СписокСубконто);
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура СубконтоКт2ПриИзменении(Элемент)
	
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(Элемент.Значение);
	//
	СписокСубконто = Новый СписокЗначений;
	СписокСубконто.Добавить("СубконтоКт3");
	
	БухгалтерскийУчет.ОбработатьИзменениеСубконто(Элемент, ЭтотОбъект, СписокСубконто);
	
	Если ТипЗнч(Элемент.Значение) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		Орг = ОбщиеПроцедуры.ПолучитьОрганизациюФизЛица(Элемент.Значение, ЭтотОбъект.Дата);
		Если ЗначениеЗаполнено(Орг) Тогда
			ЭтотОбъект.Организация = Орг;
			ОрганизацияПриИзменении(Неопределено);
			Если ТипЗнч(ЭтотОбъект.СубконтоКт1) = Тип("СправочникСсылка.Организации")
					ИЛИ ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом.Код = "71.1" Тогда
				ЭтотОбъект.СубконтоКт1 = Орг;
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;	
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура СчетУчетаРасчетовСКонтрагентомОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	Оповестить("ОбновитьФорму", ВладелецФормы, ЭтотОбъект);
	
	// Установка кнопок печати
	УстановитьКнопкиПечати();
	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ОсновныеДействияФормыНастройка(Кнопка)

	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(Ложь, ЭтотОбъект.Ссылка, ЭтотОбъект);

КонецПроцедуры

Процедура ДействияФормыДействие6(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ЭтотОбъект.Ссылка);
	
КонецПроцедуры

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(ЭтотОбъект.Ссылка, ПолучитьСтруктуруПечатныхФорм(),
								Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов.Строки.Количество() > 0);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя, Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если НЕ мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати, Истина, Истина);
	КонецЕсли;
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ДействияФормыИсторияИзменений(Кнопка)
	
	ИсторияИзменений = Отчеты.ИсторияИзмененийОбъектов.Создать();
	ИсторияИзменений.СсылкаНаОбъект = ЭтотОбъект.Ссылка;
	
	Форма = ИсторияИзменений.ПолучитьФорму("ФормаОтчета");
	Форма.СформироватьТаблицуВерсий();
	Форма.Открыть();
	
КонецПроцедуры

Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ЭтотОбъект.Ссылка);
	
КонецПроцедуры

Процедура ПривестиКНачалуПериода(Дата, Договор) 
	
	Если ТипЗнч(Дата) = Тип("Дата") Тогда
		Если ЗначениеЗаполнено(Договор) Тогда 
			Дата = ОбщиеПроцедуры.ОпределитьНачалоПериодаОплатыПоДоговору(Дата, Договор);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура выполняет необходимые действия при изменении договора взаиморасчетов
// с контрагентом.
//
Процедура ПриИзмененииДоговора()
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.Контрагент) Тогда
		ЭтотОбъект.Контрагент = СтрокаПлатеж.ДоговорКонтрагента.Владелец;
	КонецЕсли;
	
	УстановитьВидимость();

КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	//РассчитатьСуммуДокумента();
КонецПроцедуры

Процедура РасшифровкаПлатежаПослеУдаления(Элемент)
	//РассчитатьСуммуДокумента();
КонецПроцедуры

Процедура РасшифровкаПлатежаСтавкаНДСПриИзменении(Элемент)
	//ПересчитатьСуммуНДС(СтрокаПлатеж);
КонецПроцедуры

Процедура РасшифровкаПлатежаПриАктивизацииСтроки(Элемент)
	//СтрокаПлатеж = ЭлементыФормы.РасшифровкаПлатежа.ТекущиеДанные;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ((ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПостояннойЧастиАрендыОтАрендатора)
				ИЛИ (ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ОплатаПеременнойЧастиАрендыОтАрендатора)
				ИЛИ (ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратПостояннойЧастиАрендыОтАрендодателя)
				ИЛИ (ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.ВозвратПеременнойЧастиАрендыОтАрендодателя)) 
			И НЕ ЗначениеЗаполнено(ЭтотОбъект.ПериодРегистрации) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан период аренды (месяц)");
		Отказ = Истина;
	КонецЕсли;
	
	Если ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийПКО.СнятиеНаличныхСРасчетногоСчета
			И НЕ ЗначениеЗаполнено(ЭтотОбъект.ФизЛицо) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указано физ. лицо!");
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ДоговорКонтрагентаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	РаботаСДиалогами.НачалоВыбораЗначенияДоговораКонтрагента(
		ЭтотОбъект, ЭтаФорма, Элемент, ЭтотОбъект.Контрагент, ЭтотОбъект.ДоговорКонтрагента,
		УправлениеВзаиморасчетами.ОпределитьВидДоговораСКонтрагентом(ЭтотОбъект.ВидОперации), СтандартнаяОбработка);
	
КонецПроцедуры

Процедура КомментарийПриИзменении(Элемент)
	
	ЗаполнитьПоляПечати();
	
КонецПроцедуры

Процедура ЗаполнитьПоляПечати()
	
	НомерСимвола_Запятая = Найти(Комментарий, ",");
	Если НомерСимвола_Запятая = 0 Тогда
		Возврат;	
	КонецЕсли;
	
	ПринятоОт = СокрЛП(Лев(Комментарий, НомерСимвола_Запятая - 1));
	Основание = СокрЛП(Сред(Комментарий, НомерСимвола_Запятая + 1));
	
КонецПроцедуры


Процедура СтатьяДДС_БУ_ПоУмолчанию()
	
	ЭтотОбъект.СтатьяДвиженияДенежныхСредствБУ = ОбщегоНазначенияСервер.ПолучитьСтатьюДДС_БУ(ЭтотОбъект.СтатьяДвиженияДенежныхСредств, ЭтотОбъект.ВидОперации)
	
КонецПроцедуры	

Процедура СтатьяДвиженияДенежныхСредствПриИзменении(Элемент)
	
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(Элемент.Значение);
	СтатьяДДС_БУ_ПоУмолчанию();
	
КонецПроцедуры

Процедура СубконтоКт3ПриИзменении(Элемент)
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(Элемент.Значение);
КонецПроцедуры

Процедура СтатьяДвиженияДенежныхСредствОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

Процедура СубконтоКт1ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

Процедура СубконтоКт2ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры

Процедура СубконтоКт3ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	РаботаСДиалогамиДополнительный.ПроверкаВыбранногоЗначения(ВыбранноеЗначение, СтандартнаяОбработка);
КонецПроцедуры
