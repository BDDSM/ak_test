
&НаСервере
Процедура ЗаполнитьНаСервере()
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка КАК Договор,
		|	ВЫБОР
		|		КОГДА ДОБАВИТЬКДАТЕ(ДоговорыКонтрагентов.Дата,ДЕНЬ,1) > &ДатаНачала
		|			ТОГДА ДОБАВИТЬКДАТЕ(ДоговорыКонтрагентов.Дата,ДЕНЬ,1)
		|		ИНАЧЕ &ДатаНачала
		|	КОНЕЦ КАК ДатаНачала,
		|	ВЫБОР
		|		КОГДА ДоговорыКонтрагентов.СрокДействия < &ДатаОкончания
		|			ТОГДА ДоговорыКонтрагентов.СрокДействия
		|		ИНАЧЕ &ДатаОкончания
		|	КОНЕЦ КАК ДатаОкончания
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Владелец = &Контрагент
		|	И ДоговорыКонтрагентов.Организация = &Организация
		|	И ДоговорыКонтрагентов.Дата <= &ДатаОкончания
		|	И ДоговорыКонтрагентов.СрокДействия >= &ДатаНачала
		|	И ДоговорыКонтрагентов.ТипДоговораФинансы = &ТипДоговораФинансы
		|	И ДоговорыКонтрагентов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.Финансовый)";
	
	Запрос.УстановитьПараметр("Контрагент",  Объект.Контрагент);
	Запрос.УстановитьПараметр("ДатаНачала", Объект.ДатаНачала);
	Запрос.УстановитьПараметр("Организация",  Объект.Организация);
	Запрос.УстановитьПараметр("ДатаОкончания",  Объект.ДатаОкончания);
	Запрос.УстановитьПараметр("ТипДоговораФинансы", Объект.ТипДоговора);

	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Объект.Начисления.Загрузить(РезультатЗапроса);
	
	ЗаполнитьРеквизиты(Истина);
	
КонецПроцедуры

Процедура ЗаполнитьРеквизиты(ЗаполнитьСумму = Ложь)
	
	Для каждого строка из Объект.Начисления Цикл 
		
		ЗаполнитьРеквизитыВСтроке(строка);	
		Если ЗаполнитьСумму Тогда
			ЗаполнитьСуммуВСтроке(строка);
		КонецЕсли;
		
	КонецЦикла;	
		
КонецПроцедуры	

Процедура ЗаполнитьРеквизитыВСтроке(строка)
	
	Строка.СуммаДоговора =Строка.Договор.СуммаДоговора;
	Строка.Ставка = 	  Строка.Договор.ПроцентнаяСтавка;
	
	Если Строка.ДатаНачала < Строка.ДатаОкончания И  Строка.ДатаНачала > Дата(1,1,1) И  Строка.ДатаОкончания > Дата(1,1,1) Тогда
		Строка.Дней = (Строка.ДатаОкончания-Строка.ДатаНачала)/(24*3600)+1;
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ЗаполнитьСуммуВСтроке(строка)
		
	Если Строка.ДатаНачала < Строка.ДатаОкончания И  Строка.ДатаНачала > Дата(1,1,1) И  Строка.ДатаОкончания > Дата(1,1,1) Тогда
		ДнейВГоду = (КонецГода(Строка.ДатаОкончания)+1-НачалоГода(Строка.ДатаНачала))/(24*3600);		
		Начисление = (Строка.Дней*Строка.Ставка*Строка.Договор.СуммаДоговора)/(ДнейВГоду*100);	
		Строка.Сумма = Начисление;
	иначе	
		Строка.Сумма = 0;
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 08.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Начисление процентов по договорам");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	
	
	Если не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;	
		Объект.ТипДоговора   = Перечисления.ТипыДоговоровФинансы.Депозит;
		Объект.ДатаНачала  = НачалоМесяца(ТекущаяДата());
		Объект.ДатаОкончания  = КонецМесяца(ТекущаяДата());
	КонецЕсли;	
	
	Период.ДатаНачала = Объект.ДатаНачала;
	Период.ДатаОкончания = Объект.ДатаОкончания;
		
	ЗаполнитьРеквизиты();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	Объект.ДатаНачала = Период.ДатаНачала;
	Объект.ДатаОкончания = Период.ДатаОкончания;
КонецПроцедуры

&НаКлиенте
Процедура НачисленияДнейПриИзменении(Элемент)
	РасчитатьСуммуВСтрокеНаКлиенте();
КонецПроцедуры


Процедура РасчитатьСуммуВСтрокеНаКлиенте()
	
	ТекущаяСтрока = Объект.Начисления.НайтиПоИдентификатору(Элементы.Начисления.ТекущаяСтрока);
	ЗаполнитьРеквизитыВСтроке(ТекущаяСтрока);
	ЗаполнитьСуммуВСтроке(ТекущаяСтрока);
	
КонецПроцедуры

Процедура ЗаполнитьРеквизитыВСтрокеНаКлиенте()
	
	ТекущаяСтрока = Объект.Начисления.НайтиПоИдентификатору(Элементы.Начисления.ТекущаяСтрока);
	ЗаполнитьРеквизитыВСтроке(ТекущаяСтрока);
	
КонецПроцедуры


&НаКлиенте
Процедура НачисленияДатаНачалаПриИзменении(Элемент)
	РасчитатьСуммуВСтрокеНаКлиенте();
КонецПроцедуры


&НаКлиенте
Процедура НачисленияДатаОкончанияПриИзменении(Элемент)
	РасчитатьСуммуВСтрокеНаКлиенте();
КонецПроцедуры


&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ЗаполнитьРеквизиты();
КонецПроцедуры


&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ЗаполнитьРеквизиты();
КонецПроцедуры


&НаКлиенте
Процедура НачисленияДоговорПриИзменении(Элемент)
	ЗаполнитьРеквизитыВСтрокеНаКлиенте();
КонецПроцедуры

//+++susk

&НаКлиенте
Процедура ВыгрузитьВБП(Команда)
	
	Если Параметры.Ключ.Пустая() Тогда
		Сообщить("Сначала нужно записать документ");
		Возврат;
	КонецЕсли;	
	
	Если ЭтаФорма.Модифицированность Тогда
		Сообщить("Документ был изменен. Сначала нужно записать документ");
		Возврат;
	КонецЕсли;
	
	ВыгрузитьВБПСервер();
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьВБПСервер()
	
	ОбменСБП2_0.ВыгрузитьДокументВБП("НачислениеПроцентовПоДоговорам", "НачислениеПроцентовПоДоговорам", Объект.Ссылка); 
	
КонецПроцедуры

//---susk

//+++АК sils 08.06.2018 ИП-00018876
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
КонецПроцедуры

