
Функция СчетУчетаЗабалансовыйРазрешен(пСчетУчетаЗабалансовый)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОграничениеПоСчетамДляОС.СчетУчетаЗабалансовый
	|ИЗ
	|	РегистрСведений.ОграничениеПоСчетамДляОС КАК ОграничениеПоСчетамДляОС
	|ГДЕ
	|	ОграничениеПоСчетамДляОС.Пользователь = &Пользователь";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		Возврат Истина;
	Иначе
		Пока Выборка.Следующий() Цикл
			Если Выборка.СчетУчета = пСчетУчетаЗабалансовый Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция ПроверитьЗадвоения()
	
	тзНоменклатура = Номенклатура.Выгрузить();
	тзНоменклатура.Свернуть("ОсновноеСредство");
	Если тзНоменклатура.Количество() = Номенклатура.Количество() Тогда
		Возврат Истина;
	Иначе
		тзНоменклатура.Колонки.Добавить("Количество");
		тзНоменклатура.ЗаполнитьЗначения(0, "Количество");
		Для Каждого Строка Из Номенклатура Цикл
			пСтрока = тзНоменклатура.Найти(Строка.ОсновноеСредство, "ОсновноеСредство");
			пСтрока.Количество = пСтрока.Количество + 1;
		КонецЦикла;
		
		ОбщегоНазначения.СообщитьОбОшибке("", Истина, "В табличной части имеются задвоения:");
		Для Каждого Строка Из Номенклатура Цикл
			пСтрока = тзНоменклатура.Найти(Строка.ОсновноеСредство, "ОсновноеСредство");
			Если пСтрока.Количество > 1 Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Строка № " + Строка.НомерСтроки + " (" + Строка.ОсновноеСредство + ")", Истина);	
			КонецЕсли;
		КонецЦикла;
		
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьОстатки(мДатаНовогоУчетаСчетовОС)
	
	мДата = ?(ЗначениеЗаполнено(ЭтотОбъект.Дата), ЭтотОбъект.Дата, ТекущаяДата());
	ЕстьОтборПоЦФО = (мДата < мДатаНовогоУчетаСчетовОС);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата"	, мДата);
	Запрос.УстановитьПараметр("Ссылка"	, ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("Склад"	, ЭтотОбъект.СкладОтправитель);
	Запрос.УстановитьПараметр("МассивОС", ЭтотОбъект.Номенклатура.ВыгрузитьКолонку("ОсновноеСредство"));
	Если ЕстьОтборПоЦФО Тогда
		Запрос.УстановитьПараметр("ЦФО"	, ЭтотОбъект.ЦФООтправитель);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФинансовыйОстатки.Счет КАК Счет,
	|	ФинансовыйОстатки.Субконто3 КАК ОсновноеСредство,
	|	ФинансовыйОстатки.КоличествоОстаток КАК Количество,
	|	ФинансовыйОстатки.СуммаОстаток КАК Сумма
	|ПОМЕСТИТЬ ВТОстаткиФин
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(
	|			&Дата,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредства)),
	|			,
	|			Субконто2 = &Склад
	|				И Субконто3 В (&МассивОС)
	|				И &УсловиеПоЦФО) КАК ФинансовыйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧНоменклатура.НомерСтроки КАК НомерСтроки,
	|	ТЧНоменклатура.ОсновноеСредство КАК ОсновноеСредство,
	|	ТЧНоменклатура.СчетУчетаЗабалансовый КАК СчетУчетаЗабалансовый,
	|	ЕСТЬNULL(ВТОстаткиФин.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(ВТОстаткиФин.Сумма, 0) КАК Сумма
	|ИЗ
	|	Документ.СписаниеОС.Номенклатура КАК ТЧНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиФин КАК ВТОстаткиФин
	|		ПО (ВТОстаткиФин.Счет = ТЧНоменклатура.СчетУчетаЗабалансовый)
	|			И (ВТОстаткиФин.ОсновноеСредство = ТЧНоменклатура.ОсновноеСредство)
	|ГДЕ
	|	ТЧНоменклатура.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОстаткиФин";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "
	|				И &УсловиеПоЦФО",
		?(ЕстьОтборПоЦФО, "
	|				И Субконто1 = &ЦФО", ""));
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.ВыполнитьПакет();
	
КонецФункции

// остатки по счету 08
Функция ПолучитьОстатки08()
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Дата"	, Дата(3999, 12, 31));
	Запрос.Параметры.Вставить("Список"	, ЭтотОбъект.Номенклатура.ВыгрузитьКолонку("ОсновноеСредство"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФинансовыйОстатки.Субконто1 КАК СтатьяДДС,
	|	ФинансовыйОстатки.Субконто2 КАК ОсновноеСредство,
	|	ФинансовыйОстатки.Субконто3 КАК ЦФО,
	|	ФинансовыйОстатки.СуммаОстаток
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(&Дата, Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.КапитальныеВложения), , Субконто2 В (&Список)) КАК ФинансовыйОстатки";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьНастройкиСписанияОС()
	
	Результат = Новый Структура("Счет, СтруктурнаяЕдиница, СтатьяДоходовРасходов");
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Дата", ЭтотОбъект.Дата);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Срез.Счет,
	|	Срез.СтатьяДоходовРасходов,
	|	Срез.СтруктурнаяЕдиница
	|ИЗ
	|	РегистрСведений.НастройкаОтраженияОперацийВУчете.СрезПоследних(&Дата, ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВУчете.ОсновныеСредства_Списание)) КАК Срез";
							
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Результат.Счет					= Выборка.Счет;
		Результат.СтруктурнаяЕдиница	= Выборка.СтруктурнаяЕдиница;
		Результат.СтатьяДоходовРасходов	= Выборка.СтатьяДоходовРасходов;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьОСПоИнвентаризации(мДокументИнвентаризации)
	
	Перем Запрос;
	
	мДатаНовогоУчетаСчетовОС = Константы.ДатаИзмененияУчетаПоСчетамОС.Получить();
	ЕстьОтборПоЦФО = (мДокументИнвентаризации.Дата < мДатаНовогоУчетаСчетовОС);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка"		, мДокументИнвентаризации);
	Запрос.УстановитьПараметр("СчетУчета"	, мДокументИнвентаризации.СчетУчета);
	Запрос.УстановитьПараметр("ДатаСреза"	, мДокументИнвентаризации.Дата);
	Запрос.УстановитьПараметр("Склад"		, мДокументИнвентаризации.Склад);
	Если ЕстьОтборПоЦФО Тогда
		Запрос.УстановитьПараметр("ЦФО"		, мДокументИнвентаризации.ЦФО);
	КонецЕсли;
	Запрос.УстановитьПараметр("МассивОС"	, мДокументИнвентаризации.ОС.ВыгрузитьКолонку("ОсновноеСредство"));
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФинансовыйОстатки.Субконто3 КАК ОсновноеСредство,
	|	ВЫРАЗИТЬ(ФинансовыйОстатки.Субконто3 КАК Справочник.ОсновныеСредства).ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	-ФинансовыйОстатки.КоличествоОстаток КАК КоличествоРасхождение,
	|	-ФинансовыйОстатки.СуммаОстаток КАК СуммаРасхождение
	|ПОМЕСТИТЬ ВТОсновная
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(
	|			&ДатаСреза,
	|			Счет = &СчетУчета,
	|			,
	|			Субконто2 = &Склад
	|				И Субконто3 В (&МассивОС)
	|				И &УсловиеПоЦФО) КАК ФинансовыйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТЧОС.ОсновноеСредство,
	|	ТЧОС.ОсновноеСредство.ИнвентарныйНомер,
	|	ТЧОС.Количество,
	|	ТЧОС.Сумма
	|ИЗ
	|	Документ.ИнвентаризацияОС.ОС КАК ТЧОС
	|ГДЕ
	|	ТЧОС.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	ИнвентарныйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&СчетУчета КАК СчетУчетаЗабалансовый,
	|	ВТОсновная.ОсновноеСредство КАК ОсновноеСредство,
	|	-СУММА(ВТОсновная.СуммаРасхождение) КАК Сумма
	|ИЗ
	|	ВТОсновная КАК ВТОсновная
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТОсновная.ОсновноеСредство,
	|	ВТОсновная.ИнвентарныйНомер
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТОсновная.КоличествоРасхождение) < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТОсновная.ИнвентарныйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОсновная";	
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "
	|				И &УсловиеПоЦФО",
		?(ЕстьОтборПоЦФО, "
	|				И Субконто1 = &ЦФО", ""));
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.Номенклатура.Загрузить(РезультатЗапроса.Выгрузить());
	ЭтотОбъект.СуммаДокумента = ЭтотОбъект.Номенклатура.Итог("Сумма");
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ЭтотОбъект.СуммаДокумента = ЭтотОбъект.Номенклатура.Итог("Сумма");
	
	Если СокрЛП(ЭтотОбъект.Комментарий) = ""
			И ЭтотОбъект.Номенклатура.Количество() > 0 Тогда
		
		ВремТаблица = Новый ТаблицаЗначений;
		ВремТаблица.Колонки.Добавить("Наименование"	, Новый ОписаниеТипов("Строка"));
		ВремТаблица.Колонки.Добавить("Количество"	, Новый ОписаниеТипов("Число"));
		
		Для Каждого СтрокаТЧ Из ЭтотОбъект.Номенклатура Цикл
			НоваяСтрока = ВремТаблица.Добавить();
			НоваяСтрока.Наименование 	= СокрЛП(СтрокаТЧ.ОсновноеСредство.Наименование);
			НоваяСтрока.Количество 		= 1;
		КонецЦикла;	
		
		ВремТаблица.Свернуть("Наименование", "Количество");
		
		СтрокаКомментария = "";
		Для Каждого СтрокаТаблицы Из ВремТаблица Цикл			
			СтрокаКомментария = СтрокаКомментария + ", " + СтрокаТаблицы.Наименование +
								?(СтрокаТаблицы.Количество > 1, " " + Формат(СтрокаТаблицы.Количество, "ЧГ=") + "шт", "")			
		КонецЦикла;
		СтрокаКомментария = Сред(СтрокаКомментария, 3);
		
		ЭтотОбъект.Комментарий = СокрЛП(Лев(СтрокаКомментария, 200));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПоступлениеОС") Тогда
		
		ЭтотОбъект.СкладОтправитель = ДанныеЗаполнения.Склад;
		ЭтотОбъект.ЦФООтправитель 	= ДанныеЗаполнения.ЦФО;
		ЭтотОбъект.Номенклатура.Загрузить(ДанныеЗаполнения.Номенклатура.Выгрузить());
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОприходованиеОС") Тогда
		
		ЭтотОбъект.СкладОтправитель = ДанныеЗаполнения.Склад;
		ЭтотОбъект.ЦФООтправитель 	= ДанныеЗаполнения.ЦФО;
		ЭтотОбъект.СчетУчетаБУ 		= ДанныеЗаполнения.СчетУчетаБУ;
		ЭтотОбъект.СуммаДокумента 	= ДанныеЗаполнения.СуммаДокумента;
		ЭтотОбъект.Номенклатура.Загрузить(ДанныеЗаполнения.Номенклатура.Выгрузить());
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИнвентаризацияОС") Тогда
		
		МСФО = АК_ОсновныеСредства.УчетМСФО(ДанныеЗаполнения.Дата);
		
		Если МСФО Тогда
			
			ЭтотОбъект.ДокИнвентаризации 	= ДанныеЗаполнения.Ссылка;
			ЭтотОбъект.Организация 			= ДанныеЗаполнения.Организация;
			ЗаполнитьОСПоИнвентаризацииМСФО();
			
		Иначе 	
			
			ЭтотОбъект.СкладОтправитель 	= ДанныеЗаполнения.Склад;
			ЭтотОбъект.ЦФООтправитель 		= ДанныеЗаполнения.ЦФО;
			ЭтотОбъект.СчетУчетаБУ 			= ДанныеЗаполнения.СчетУчета;
			ЭтотОбъект.ДокИнвентаризации 	= ДанныеЗаполнения.Ссылка;
			
			ЗаполнитьОСПоИнвентаризации(ДанныеЗаполнения);
			
		КонецЕсли; 
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОСПоИнвентаризацииМСФО() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнвентаризацияОСОС.ОсновноеСредство,
		|	ИнвентаризацияОСОС.Инвентарь КАК Инвентарь 
		|ИЗ
		|	Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
		|ГДЕ
		|	ИнвентаризацияОСОС.Ссылка = &Ссылка
		|	И (ИнвентаризацияОСОС.Количество = 0
		|			ИЛИ ИнвентаризацияОСОС.Количество ЕСТЬ NULL )";

	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.ДокИнвентаризации);
	ТаблицаОС = Запрос.Выполнить().Выгрузить();
	
	ТаблицаОС = АК_ОсновныеСредства.СформироватьТаблицуДанных(ТаблицаОС);

	ЭтотОбъект.Номенклатура.Загрузить(ТаблицаОС);
		
КонецПроцедуры	
	
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Перем Заголовок;
	
	// Проверка ручной корректировки
 	Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(ЭтотОбъект.РучнаяКорректировка, Отказ, Заголовок, ЭтотОбъект,,
																	Истина) Тогда
		Возврат
	КонецЕсли;
		
	МСФО = АК_ОсновныеСредства.УчетМСФО(ЭтотОбъект.Дата);
	
	Если МСФО Тогда 
		
		ВыполнитьРасходКСписанию();
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СписаниеОСНоменклатура.ОсновноеСредство,
			|	СписаниеОСНоменклатура.Сумма,
			|	СписаниеОСНоменклатура.СуммаАмортизация,
			|	НастройкаОтраженияОперацийВУчетеСрезПоследних.Счет,
			|	НастройкаОтраженияОперацийВУчетеСрезПоследних.ЦФО,
			|	НастройкаОтраженияОперацийВУчетеСрезПоследних.СтатьяДоходовРасходов,
			|	НастройкаОтраженияОперацийВУчетеСрезПоследних.СтруктурнаяЕдиница,
			|	СписаниеОСНоменклатура.Местоположение КАК ТорговаяТочка,
			|	СписаниеОСНоменклатура.Инвентарь,
			|	СписаниеОСНоменклатура.СчетУчетаЗабалансовый КАК СчетУчета,
			|	СписаниеОСНоменклатура.СчетУчетаАмортизация,
			|	ВЫБОР
			|		КОГДА СписаниеОСНоменклатура.Местоположение.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
			|				ИЛИ СписаниеОСНоменклатура.Местоположение ССЫЛКА Справочник.Склады
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ВЫБОР
			|				КОГДА РабочиеТорговыеТочки.РабочаяТочка
			|					ТОГДА ЛОЖЬ
			|				ИНАЧЕ ВЫБОР
			|						КОГДА ОСЭксплуатируется.Эксплуатируется
			|							ТОГДА ЛОЖЬ
			|						ИНАЧЕ ЛОЖЬ
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ КАК ЭтоХранениеСклад,
			|	ВЫБОР
			|		КОГДА СписаниеОСНоменклатура.Местоположение.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
			|				ИЛИ СписаниеОСНоменклатура.Местоположение ЕСТЬ NULL
			|				ИЛИ СписаниеОСНоменклатура.Местоположение = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяССылка)
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК ЭтоПодразделение,
			|	ВЫБОР
			|		КОГДА СписаниеОСНоменклатура.СчетУчетаЗабалансовый = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000)
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВУчете.ОсновныеСредства_НачислениеАмортизацииДо100000)
			|		ИНАЧЕ ВЫБОР
			|				КОГДА СписаниеОСНоменклатура.Местоположение.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад)
			|						ИЛИ СписаниеОСНоменклатура.Местоположение ССЫЛКА Справочник.Склады
			|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВУчете.ОсновныеСредства_НачислениеАмортизацииХранениеНаСкладе)
			|				КОГДА СписаниеОСНоменклатура.Местоположение.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
			|						ИЛИ СписаниеОСНоменклатура.Местоположение ЕСТЬ NULL
			|						ИЛИ СписаниеОСНоменклатура.Местоположение = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяССылка)
			|					ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВУчете.ОсновныеСредства_НачислениеАмортизацииВПодразделении)
			|				ИНАЧЕ ВЫБОР
			|						КОГДА РабочиеТорговыеТочки.РабочаяТочка
			|							ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВУчете.ОсновныеСредства_НачислениеАмортизации)
			|						ИНАЧЕ ВЫБОР
			|								КОГДА ОСЭксплуатируется.Эксплуатируется
			|									ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВУчете.ОсновныеСредства_НачислениеАмортизацииНаСкладе)
			|								ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВУчете.ОсновныеСредства_НачислениеАмортизацииХранениеНаСкладе)
			|							КОНЕЦ
			|					КОНЕЦ
			|			КОНЕЦ
			|	КОНЕЦ КАК ВидАмортизация
			|ПОМЕСТИТЬ ВтРезультат
			|ИЗ
			|	Документ.СписаниеОС.Номенклатура КАК СписаниеОСНоменклатура
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
			|			ЛистУчета.ТорговаяТочка КАК ТорговаяТочка,
			|			ИСТИНА КАК РабочаяТочка
			|		ИЗ
			|			Документ.ЛистУчета КАК ЛистУчета
			|		ГДЕ
			|			ЛистУчета.Проведен = ИСТИНА
			|			И ЛистУчета.Дата <= &ДатаОкончанияЛУ
			|			И ЛистУчета.Дата >= &ДатаНачалаЛУ) КАК РабочиеТорговыеТочки
			|		ПО (СписаниеОСНоменклатура.Местоположение = РабочиеТорговыеТочки.ТорговаяТочка
			|				ИЛИ СписаниеОСНоменклатура.Местоположение.Владелец = РабочиеТорговыеТочки.ТорговаяТочка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			СостояниеОС.ОсновноеСредство КАК ОсновноеСредство,
			|			ИСТИНА КАК Эксплуатируется
			|		ИЗ
			|			РегистрСведений.СостояниеОС КАК СостояниеОС
			|		ГДЕ
			|			СостояниеОС.ОсновноеСредство В
			|					(ВЫБРАТЬ
			|						СписаниеОСНоменклатура.ОсновноеСредство
			|					ИЗ
			|						Документ.СписаниеОС.Номенклатура КАК СписаниеОСНоменклатура
			|					ГДЕ
			|						СписаниеОСНоменклатура.Ссылка = &Ссылка)
			|			И СостояниеОС.Эксплуатируется
			|		
			|		СГРУППИРОВАТЬ ПО
			|			СостояниеОС.ОсновноеСредство) КАК ОСЭксплуатируется
			|		ПО СписаниеОСНоменклатура.ОсновноеСредство = ОСЭксплуатируется.ОсновноеСредство,
			|	РегистрСведений.НастройкаОтраженияОперацийВУчете.СрезПоследних(&Дата, ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВУчете.ОсновныеСредства_Списание)) КАК НастройкаОтраженияОперацийВУчетеСрезПоследних
			|ГДЕ
			|	СписаниеОСНоменклатура.Ссылка = &Ссылка
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВтРезультат.ОсновноеСредство,
			|	ВтРезультат.Сумма,
			|	ВтРезультат.СуммаАмортизация,
			|	ВтРезультат.Счет,
			|	ВтРезультат.ЦФО,
			|	ВтРезультат.СтатьяДоходовРасходов,
			|	ВтРезультат.СтруктурнаяЕдиница,
			|	ВтРезультат.ТорговаяТочка,
			|	ВтРезультат.Инвентарь,
			|	ВтРезультат.СчетУчета,
			|	ВтРезультат.СчетУчетаАмортизация,
			|	ВтРезультат.ЭтоХранениеСклад КАК ЭтоСклад,
			|	ВтРезультат.ЭтоПодразделение,
			|	ВтРезультат.ВидАмортизация,
			|	СпособНачисленияАмортизации.ТорговаяТочка КАК НастройкаТорговаяТочка
			|ИЗ
			|	ВтРезультат КАК ВтРезультат
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			Срез.Счет КАК СчетДт,
			|			Срез.СтруктурнаяЕдиница КАК ТорговаяТочка,
			|			Срез.ЦФО КАК ЦФО,
			|			Срез.СтатьяДоходовРасходов КАК СтатьяДоходовРасходов,
			|			Срез.ВидОперации КАК ВидОперации
			|		ИЗ
			|			РегистрСведений.НастройкаОтраженияОперацийВУчете.СрезПоследних(&ДатаОкончанияЛУ, ) КАК Срез) КАК СпособНачисленияАмортизации
			|		ПО ВтРезультат.ВидАмортизация = СпособНачисленияАмортизации.ВидОперации";

		Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
		Запрос.УстановитьПараметр("Дата", ЭтотОбъект.Дата);
		
		//+++АК Susk (Суслин К.В.) 2018.01.11 ИП-00017530
		Запрос.УстановитьПараметр("ДатаНачалаЛУ", ДобавитьМесяц(НачалоМесяца(Дата), -1));
		Запрос.УстановитьПараметр("ДатаОкончанияЛУ", КонецМесяца(Дата));
		//---АК Susk (Суслин К.В.) 
		
		Результат = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		
		ДвиженияФинансовый = ЭтотОбъект.Движения.Финансовый;
		ДвиженияФинансовый.Записывать = Истина;
        ДвиженияФинансовый.Очистить();

		Движения.СостояниеОС.Записывать = Истина;
		Движения.СостояниеОС.Очистить();
		
		//+++АК Susk (Суслин К.В.) 2018.01.11 ИП-00017530
		МассивОС = Новый Массив;
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			МассивОС.Добавить(ВыборкаДетальныеЗаписи.ОсновноеСредство);
		КонецЦикла;
		
		ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(МассивОС);
		
		ТаблицаАмортизации = АК_ОсновныеСредства.РассчитатьАмортизациюНаЛету(МассивОС, Организация, Дата);
		
		ВыборкаДетальныеЗаписи.Сбросить();
		//---АК Susk (Суслин К.В.) 		 
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл			
			
			Если не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ОсновноеСредство) Тогда
				Сообщить("Не заполнено основное средство");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			
			Если ВыборкаДетальныеЗаписи.Сумма = 0 И ВыборкаДетальныеЗаписи.СуммаАмортизация = 0 И НЕ ВыборкаДетальныеЗаписи.Инвентарь Тогда
				Сообщить("Не заполнены суммы списания. Будет только изменено состояние ОС");
				//Отказ = Истина;
				//Возврат;
			КонецЕсли;		
			
			Состояние = Движения.СостояниеОС.Добавить();
			Состояние.ОсновноеСредство = ВыборкаДетальныеЗаписи.ОсновноеСредство;
			Состояние.Период = ЭтотОбъект.Дата;
			Состояние.Местоположение = ВыборкаДетальныеЗаписи.ТорговаяТочка;
			//+++AK susk
			Состояние.Организация = Организация;
			//---AK susk
			Состояние.Списано = Истина;		
			
			//+++АК Susk (Суслин К.В.) 2018.01.11 ИП-00017530
			ТТВПроводку = ВыборкаДетальныеЗаписи.ТорговаяТочка;
				
			Если ВыборкаДетальныеЗаписи.ЭтоСклад ИЛИ ВыборкаДетальныеЗаписи.ЭтоПодразделение Тогда
				//ВсеТТ
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.НастройкаТорговаяТочка) Тогда
					ТТВПроводку = ВыборкаДетальныеЗаписи.НастройкаТорговаяТочка;
				КонецЕсли; 	
			Иначе 	
				Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ТорговаяТочка) Тогда
					ТТВПроводку = ВыборкаДетальныеЗаписи.ТорговаяТочка;
				КонецЕсли;
			КонецЕсли;
			//---АК Susk (Суслин К.В.) 			
			
			//+++susk
			//Если НЕ ВыборкаДетальныеЗаписи.Инвентарь И (ВыборкаДетальныеЗаписи.Сумма <> 0 ИЛИ ВыборкаДетальныеЗаписи.СуммаАмортизация <> 0)  Тогда 
			Если (ВыборкаДетальныеЗаписи.Сумма <> 0 ИЛИ ВыборкаДетальныеЗаписи.СуммаАмортизация <> 0)  Тогда 
			//---susk			
			
				//01
				//+++susk
				Если ВыборкаДетальныеЗаписи.Сумма <> 0 Тогда
				//---susk
				
					Проводка = ДвиженияФинансовый.Добавить();
					Проводка.Период 					 = ЭтотОбъект.Дата;
					
					Проводка.СчетДт         			 = ВыборкаДетальныеЗаписи.Счет;
					Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ЦФО) Тогда
						Проводка.СубконтоДт.ЦФО 			 = ВыборкаДетальныеЗаписи.ЦФО;
					КонецЕсли;
					Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ТорговаяТочка) Тогда
						//+++АК Susk (Суслин К.В.) 2018.01.12 ИП-00017530						 
						//Проводка.СубконтоДт.ТорговыеТочки 	 = ВыборкаДетальныеЗаписи.ТорговаяТочка;						
						Проводка.СубконтоДт.ТорговыеТочки 	 = ТТВПроводку;
						//---АК Susk (Суслин К.В.) 
					КонецЕсли;
					Если ЗначениеЗаполнено( ВыборкаДетальныеЗаписи.СтатьяДоходовРасходов) Тогда
						Проводка.СубконтоДт.СтатьиДоходовРасходов = ВыборкаДетальныеЗаписи.СтатьяДоходовРасходов;
					КонецЕсли;
					
					//+++АК Susk (Суслин К.В.) 2018.05.29 ИП-00018786					 
					
					//Если ВыборкаДетальныеЗаписи.СчетУчета = ПланыСчетов.Финансовый.ОсновныеСредстваДо100000 Тогда
					//	Проводка.СчетКт 					 = ПланыСчетов.Финансовый.ОсновныеСредстваДо100000;
					//Иначе 	
					//	Проводка.СчетКт 					 = ПланыСчетов.Финансовый.ОсновныеСредстваВОрганизации;
					//КонецЕсли;	
					
					Проводка.СчетКт = ВыборкаДетальныеЗаписи.СчетУчета;
					//---АК Susk (Суслин К.В.) 
					
					Проводка.СубконтоКт.ОсновныеСредства = ВыборкаДетальныеЗаписи.ОсновноеСредство;
					
					//Проводка.Количество 				 = 1;
					Проводка.Сумма                       = ВыборкаДетальныеЗаписи.Сумма;
					
					//+++susk
					Проводка.Организация = Организация;
					//---susk
					
				КонецЕсли;	
			
				//02
					
				//+++АК Susk (Суслин К.В.) 2018.01.11 ИП-00017530				 
				НайдСтр = ТаблицаАмортизации.Найти(ВыборкаДетальныеЗаписи.ОсновноеСредство, "ОсновноеСредство");
		
				Если НайдСтр = Неопределено Тогда		
	   				АмортизацияРасчитанная = 0;
				Иначе
					АмортизацияРасчитанная = НайдСтр.Сумма;					
				КонецЕсли;

				СуммаАмортизации = ВыборкаДетальныеЗаписи.СуммаАмортизация + АмортизацияРасчитанная;
				
				Если СуммаАмортизации <> 0 Тогда					
				//---АК Susk (Суслин К.В.) 
						
					Проводка = ДвиженияФинансовый.Добавить();
					Проводка.Период 					 = ЭтотОбъект.Дата;
					
					//+++AK susk
					//Если  ВыборкаДетальныеЗаписи.СчетУчета = ПланыСчетов.Финансовый.ОсновныеСредстваДо100000 Тогда
					//	Проводка.СчетДт 					 = ПланыСчетов.Финансовый.АмортизацияОсновныхСредствДо100000;
					//Иначе 
					//	Проводка.СчетДт 					 = ПланыСчетов.Финансовый.АмортизацияОсновныхСредств;
					//КонецЕсли;
					
					Если  ВыборкаДетальныеЗаписи.СчетУчетаАмортизация = ПланыСчетов.Финансовый.АмортизацияОсновныхСредствДо100000 Тогда
						Проводка.СчетДт 					 = ПланыСчетов.Финансовый.АмортизацияОсновныхСредствДо100000;
					Иначе 
						Проводка.СчетДт 					 = ПланыСчетов.Финансовый.АмортизацияОсновныхСредств;
					КонецЕсли;
					
					//---AK susk				
						
					Проводка.СубконтоДт.ОсновныеСредства = ВыборкаДетальныеЗаписи.ОсновноеСредство;
					
					Проводка.СчетКт         			 = ВыборкаДетальныеЗаписи.Счет;
					Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ЦФО) Тогда
						Проводка.СубконтоКт.ЦФО 			 = ВыборкаДетальныеЗаписи.ЦФО; 
					КонецЕсли;	
					//+++АК Susk (Суслин К.В.) 2018.01.12 ИП-00017530
					//Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ТорговаяТочка) Тогда
					//	Проводка.СубконтоКт.ТорговыеТочки 	 = ВыборкаДетальныеЗаписи.ТорговаяТочка;
					//КонецЕсли;
					Если ЗначениеЗаполнено(ТТВПроводку) Тогда
						Проводка.СубконтоКт.ТорговыеТочки 	 = ТТВПроводку;
					КонецЕсли;
					//---АК Susk (Суслин К.В.) 
					Если ЗначениеЗаполнено( ВыборкаДетальныеЗаписи.СтатьяДоходовРасходов) Тогда
						Проводка.СубконтоКт.СтатьиДоходовРасходов = ВыборкаДетальныеЗаписи.СтатьяДоходовРасходов;
					КонецЕсли;

					////+++AK susk
					// ?????
					//Проводка.Сумма                       = ВыборкаДетальныеЗаписи.Сумма - ВыборкаДетальныеЗаписи.СуммаАмортизация;
					Проводка.Сумма = СуммаАмортизации;				
					
					Проводка.Организация = Организация;
					
				КонецЕсли;
				//---AK susk
				
			КонецЕсли;			
			
		КонецЦикла;

				
	Иначе 	
		
		Если НЕ ПроверитьЗадвоения() Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Для Каждого СтрокаТЧ Из ЭтотОбъект.Номенклатура Цикл
			Если НЕ СчетУчетаЗабалансовыйРазрешен(СтрокаТЧ.СчетУчетаЗабалансовый) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("В строке № " + СтрокаТЧ.НомерСтроки + " недостаточно прав доступа к счету учета " +
													СтрокаТЧ.СчетУчетаЗабалансовый);
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		КонецЦикла;
		
		
		мДатаНовогоУчетаСчетовОС = Константы.ДатаИзмененияУчетаПоСчетамОС.Получить();
		мСоздаватьПриход = ЗначениеЗаполнено(ЭтотОбъект.СкладПолучатель)
								ИЛИ ЗначениеЗаполнено(ЭтотОбъект.ЦФОПолучатель);
		
		// запрос по остаткам (02 счет)
		РезультатыЗапроса = ПолучитьОстатки(мДатаНовогоУчетаСчетовОС);
		
		Если НЕ ЭтотОбъект.Дата < Дата(2014, 9, 1) Тогда
			ТаблицаОстатков08 = ПолучитьОстатки08();
			мНастройкиСписанияОС = ПолучитьНастройкиСписанияОС();
			Если НЕ ЗначениеЗаполнено(мНастройкиСписанияОС.Счет) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен счет учета в настройке отражения операций ""Списание основных средств"" или настройка отсутствует");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(мНастройкиСписанияОС.СтатьяДоходовРасходов) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена статья доходов-расходов в настройке отражения операций ""Списание основных средств"" или настройка отсутствует");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		КонецЕсли;
		

		// Движения по регистру бухгалтерии "Финансовый"
		ДвиженияФинансовый = ЭтотОбъект.Движения.Финансовый;
		ДвиженияФинансовый.Записывать 					= Истина;
		ДвиженияФинансовый.РазрешитьЗаписьБезПроверки 	= Истина;
		
		ВыборкаФин = РезультатыЗапроса[1].Выбрать();
		Пока ВыборкаФин.Следующий() Цикл
			
			Если НЕ ВыборкаФин.Количество = 1 Тогда
				ОбщегоНазначения.СообщитьОбОшибке("По строке № " + ВыборкаФин.НомерСтроки + " недостаточно остатка по счету " +
													ВыборкаФин.СчетУчетаЗабалансовый + " (ОС: " + ВыборкаФин.ОсновноеСредство +
													", Склад: " + ЭтотОбъект.СкладОтправитель + ")");
				Отказ = Истина;
				Продолжить;
			КонецЕсли;
			
			Проводка = ДвиженияФинансовый.Добавить();
			Проводка.Период 		= ЭтотОбъект.Дата;
			Проводка.СчетКт 		= ВыборкаФин.СчетУчетаЗабалансовый;
			Если Проводка.Период < мДатаНовогоУчетаСчетовОС Тогда
				Проводка.СубконтоКт.ЦФО				= ЭтотОбъект.ЦФООтправитель;
			КонецЕсли;
			Проводка.СубконтоКт.МестаХраненияОС 	= ЭтотОбъект.СкладОтправитель;
			Проводка.СубконтоКт.ОсновныеСредства 	= ВыборкаФин.ОсновноеСредство;
			Проводка.КоличествоКт 	= 1;
			Проводка.Сумма 			= ВыборкаФин.Сумма;
			
			Если мСоздаватьПриход Тогда
				
				Проводка = ДвиженияФинансовый.Добавить();
				Проводка.Период = ЭтотОбъект.Дата;
				Проводка.СчетДт = ВыборкаФин.СчетУчетаЗабалансовый;
				Если Проводка.Период < мДатаНовогоУчетаСчетовОС Тогда
					Проводка.СубконтоДт.ЦФО 			= ЭтотОбъект.ЦФОПолучатель;
				КонецЕсли;
				Проводка.СубконтоДт.МестаХраненияОС 	= ЭтотОбъект.СкладПолучатель;
				Проводка.СубконтоДт.ОсновныеСредства 	= ВыборкаФин.ОсновноеСредство;
				Проводка.КоличествоДт 	= 1;
				Проводка.Сумма 			= 0;
				
			КонецЕсли;	
			
			
			Если НЕ ЭтотОбъект.Дата < Дата(2014, 9, 1) Тогда
				СтрокиОстатков = ТаблицаОстатков08.НайтиСтроки(Новый Структура("ОсновноеСредство", ВыборкаФин.ОсновноеСредство));
				Для Каждого СтрокаОстатка Из СтрокиОстатков Цикл
					
					Если НЕ СтрокаОстатка.СуммаОстаток > 0 Тогда
						Продолжить;
					КонецЕсли;
					
					//Дт44-Кт08
					Проводка = ДвиженияФинансовый.ДобавитьДебет();
					Проводка.Период							= ЭтотОбъект.Дата;
					Проводка.Сумма							= СтрокаОстатка.СуммаОстаток;
					
					Проводка.СчетДт								= мНастройкиСписанияОС.Счет;
					Проводка.СубконтоДт.ТорговыеТочки			= мНастройкиСписанияОС.СтруктурнаяЕдиница;
					Проводка.СубконтоДт.СтатьиДоходовРасходов 	= мНастройкиСписанияОС.СтатьяДоходовРасходов;
					Проводка.СубконтоДт.ЦФО						= СтрокаОстатка.ЦФО;
					
					Проводка.СчетКт	= ПланыСчетов.Финансовый.КапитальныеВложения;
					Проводка.СубконтоКт.ОсновныеСредства				= ВыборкаФин.ОсновноеСредство;
					Проводка.СубконтоКт.СтатьиДвиженияДенежныхСредств	= СтрокаОстатка.СтатьяДДС;
					Проводка.СубконтоКт.ЦФО								= СтрокаОстатка.ЦФО;
					
				КонецЦикла;		
			КонецЕсли;	
			
		КонецЦикла;

	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьРасходКСписанию()
		
	Движения.АК_ОсновныеСредстваКСписаниюОприходованию.Записывать = Истина;
	Движения.АК_ОсновныеСредстваКСписаниюОприходованию.Очистить();	
	
	Если ЗначениеЗаполнено(ДокИнвентаризации) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СписаниеОСНоменклатура.ОсновноеСредство,
			|	ЕСТЬNULL(АК_ОсновныеСредстваКСписаниюОприходованиюОстатки.КоличествоОстаток, 0) КАК Количество,
			|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДВижения,
			|	СписаниеОСНоменклатура.Ссылка.Дата КАК Период
			|ИЗ
			|	Документ.СписаниеОС.Номенклатура КАК СписаниеОСНоменклатура
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.АК_ОсновныеСредстваКСписаниюОприходованию.Остатки(&МоментВремени, ) КАК АК_ОсновныеСредстваКСписаниюОприходованиюОстатки
			|		ПО СписаниеОСНоменклатура.ОсновноеСредство = АК_ОсновныеСредстваКСписаниюОприходованиюОстатки.ОсновноеСредство
			|ГДЕ
			|	СписаниеОСНоменклатура.Ссылка = &Ссылка
			|	И ЕСТЬNULL(АК_ОсновныеСредстваКСписаниюОприходованиюОстатки.КоличествоОстаток, 0) <> 0";

		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("МоментВремени", Ссылка.МоментВремени());

		Результат = Запрос.Выполнить().Выгрузить();
        Движения.АК_ОсновныеСредстваКСписаниюОприходованию.Загрузить(Результат);
		
	КонецЕсли;		
	
КонецПроцедуры	

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ, ЭтотОбъект.РучнаяКорректировка, Истина,	Истина);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МСФО = АК_ОсновныеСредства.УчетМСФО(ЭтотОбъект.Дата);
	
	Если МСФО Тогда
		
		Реквизит = ПроверяемыеРеквизиты.Найти("СкладОтправитель");
		ПроверяемыеРеквизиты.Удалить(Реквизит);
		Реквизит = ПроверяемыеРеквизиты.Найти("Номенклатура.СчетУчетаЗабалансовый");
		ПроверяемыеРеквизиты.Удалить(Реквизит);		
		
	КонецЕсли;	
	
КонецПроцедуры

