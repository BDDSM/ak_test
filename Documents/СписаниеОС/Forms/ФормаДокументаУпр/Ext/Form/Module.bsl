
&НаСервереБезКонтекста
Функция ПолучитьДатуЗакрытияТТ(мСклад)
	
	Возврат мСклад.ДатаЗакрытия;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСчетУчетаОС(мОсновноеСредство, мДата)
	
	Запрос = Новый Запрос;            
	Запрос.УстановитьПараметр("Дата"			, мДата);
	Запрос.УстановитьПараметр("ОсновноеСредство", мОсновноеСредство);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФинансовыйОстатки.Счет
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(&Дата, Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредства)), , Субконто3 = &ОсновноеСредство) КАК ФинансовыйОстатки";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Счет;
	КонецЕсли;

	Возврат ПланыСчетов.Финансовый.ПустаяСсылка();
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЦФОПоТТ(мТорговаяТочка, мДата)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТТ"	, мТорговаяТочка);
	Запрос.УстановитьПараметр("Дата", мДата);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО
	|ИЗ
	|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&Дата, СтруктурнаяЕдиница = &ТТ) КАК ЦФОСтруктурныхЕдиницСрезПоследних";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ЦФО;
	Иначе
		Возврат Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОстаток(мОсновноеСредство, мДата, мСкладОтправитель, мЦФООтправитель)
	
	мДатаНовогоУчетаСчетовОС = Константы.ДатаИзмененияУчетаПоСчетамОС.Получить();
	ЕстьОтборПоЦФО = (мДата < мДатаНовогоУчетаСчетовОС);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата"			, мДата);
	Запрос.УстановитьПараметр("Склад"			, мСкладОтправитель);
	Запрос.УстановитьПараметр("ОсновноеСредство", мОсновноеСредство);
	Если ЕстьОтборПоЦФО Тогда
		Запрос.УстановитьПараметр("ЦФО"			, мЦФООтправитель);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФинансовыйОстатки.Субконто3 КАК ОсновноеСредство,
	|	ФинансовыйОстатки.КоличествоОстаток КАК Количество,
	|	ФинансовыйОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(
	|			&Дата,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредства)),
	|			,
	|			Субконто2 = &Склад
	|				И Субконто3 = &ОсновноеСредство
	|				И &УсловиеПОЦФО) КАК ФинансовыйОстатки";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "
	|				И &УсловиеПОЦФО",
		?(ЕстьОтборПоЦФО, "
	|				И Субконто1 = &ЦФО", ""));
	
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Сумма;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОстаткиСервер(мДата, мСкладОтправитель, мЦФООтправитель)
	
	Перем Запрос, мСписокОС;
	
	мДатаНовогоУчетаСчетовОС = Константы.ДатаИзмененияУчетаПоСчетамОС.Получить();
	ЕстьОтборПоЦФО = (мДата < мДатаНовогоУчетаСчетовОС);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата"	, мДата);
	Запрос.УстановитьПараметр("Склад"	, мСкладОтправитель);
	Если ЕстьОтборПоЦФО Тогда
		Запрос.УстановитьПараметр("ЦФО"	, мЦФООтправитель);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФинансовыйОстатки.Субконто3 КАК ОсновноеСредство
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(
	|			&Дата,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредства)),
	|			,
	|			Субконто2 = &Склад
	|				И &УсловиеПОЦФО) КАК ФинансовыйОстатки
	|ГДЕ
	|	ФинансовыйОстатки.КоличествоОстаток > 0";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "
	|				И &УсловиеПОЦФО",
		?(ЕстьОтборПоЦФО, "
	|				И Субконто1 = &ЦФО", ""));
	
	Запрос.Текст = ТекстЗапроса;
	
	мСписокОС = Новый СписокЗначений;
	мСписокОС.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ОсновноеСредство"));
	
	Возврат мСписокОС;
	
КонецФункции

Процедура УстановитьВидимость()
	
	Если ТипЗнч(Объект.СкладОтправитель) = Тип("СправочникСсылка.СтруктурныеЕдиницы")
			И ЗначениеЗаполнено(Объект.СкладОтправитель) Тогда
		мДатаЗакрытия = ПолучитьДатуЗакрытияТТ(Объект.СкладОтправитель);
		Если ЗначениеЗаполнено(мДатаЗакрытия)
				И мДатаЗакрытия < Объект.Дата Тогда
			Элементы.СкладОтправитель.ЦветФона = Новый Цвет(222, 222, 222);
		Иначе
			Элементы.СкладОтправитель.ЦветФона = Новый Цвет(255, 255, 255);
		КонецЕсли;
	Иначе
		Элементы.СкладОтправитель.ЦветФона = Новый Цвет(255, 255, 255);
	КонецЕсли;
	
	Если ТипЗнч(Объект.СкладПолучатель) = Тип("СправочникСсылка.СтруктурныеЕдиницы")
			И ЗначениеЗаполнено(Объект.СкладПолучатель) Тогда
		мДатаЗакрытия = ПолучитьДатуЗакрытияТТ(Объект.СкладПолучатель);
		Если ЗначениеЗаполнено(мДатаЗакрытия)
				И мДатаЗакрытия < Объект.Дата Тогда
			Элементы.СкладПолучатель.ЦветФона = Новый Цвет(222, 222, 222);
		Иначе
			Элементы.СкладПолучатель.ЦветФона = Новый Цвет(255, 255, 255);
		КонецЕсли;
	Иначе
		Элементы.СкладПолучатель.ЦветФона = Новый Цвет(255, 255, 255);
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 08.06.2018 ИП-00018466
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Списание ОС");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(Объект.Ссылка.ПолучитьОбъект(), ЭтаФорма);
	КонецЕсли;	

	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.СкладОтправитель) Тогда
		Объект.СкладОтправитель = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.СкладПолучатель) Тогда
		Объект.СкладПолучатель = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	КонецЕсли;
	
	УстановитьВариант();
	
	
КонецПроцедуры

Процедура УстановитьВариант();

	МСФО = АК_ОсновныеСредства.УчетМСФО(Объект.Дата);
	ТребуетсяАктуализацияОС = Истина;
	
	УсловноеОформление();	
	
КонецПроцедуры	

Процедура УсловноеОформление()
	
	Элементы.ГруппаВариантНовый.Видимость = МСФО;
	Элементы.ГруппаВариантСтарый.Видимость = Не МСФО;
	
	Элементы.НаОсновании.Видимость = МСФО;
	Элементы.ОборудованиеПерезаполнитьПоИнвентаризации.Видимость = МСФО;	
	
	
	Если Не МСФО Тогда
		УстановитьВидимость();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ МСФО Тогда
	
		Если Объект.СкладОтправитель = Объект.СкладПолучатель
				И Объект.ЦФООтправитель = Объект.ЦФОПолучатель Тогда
			Сообщение = Новый СообщениеПользователю();
			Сообщение.ПутьКДанным 	= ?(Объект.СкладОтправитель = Объект.СкладПолучатель, Объект.СкладПолучатель, Объект.ЦФОПолучатель);
			Сообщение.Текст 		= "Ошибка! Данные отправителя и получателя ОС идентичны";
			Сообщение.Сообщить();
			Отказ = Истина;		
		КонецЕсли;
		
	КонецЕсли;	
	
	//+++АК Susk (Суслин К.В.) 2018.06.01 ИП-00018786	 
	Если МСФО И ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Ответ = Вопрос("Рекомендуется автоматически актуализировать данные по ОС (счета, суммы) перед проведением документа, чтобы исключить искажения в учете."
				+ Символы.ПС + "Сделать это сейчас", РежимДиалогаВопрос.ДаНетОтмена);
				
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
			ЗаполнитьДанныеПоОССервер();
		КонецЕсли;
	КонецЕсли;
    //---АК Susk (Суслин К.В.) 
		
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если СтрЧислоВхождений(ИсточникВыбора.ИмяФормы, "Справочник.ОсновныеСредства") > 0 Тогда
		
		// Проверка на то, что ОС уже есть в ТЧ
		Массив = Объект.Номенклатура.НайтиСтроки(Новый Структура("ОсновноеСредство", ВыбранноеЗначение));
		Если Массив.Количество() > 0
				И НЕ Вопрос(Строка(ВыбранноеЗначение) + " уже есть в табличной части. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		
		СтрокаТЧ = Объект.Номенклатура.Добавить();
		СтрокаТЧ.ОсновноеСредство = ВыбранноеЗначение;
		
		мДата = ?(НЕ ЗначениеЗаполнено(Объект.Ссылка), ТекущаяДата(), Объект.Дата);
		пСчетУчета = ПолучитьСчетУчетаОС(ВыбранноеЗначение, мДата);
		Если ЗначениеЗаполнено(пСчетУчета) Тогда
			СтрокаТЧ.СчетУчетаЗабалансовый = пСчетУчета;
		КонецЕсли;
		СтрокаТЧ.Сумма = ПолучитьОстаток(ВыбранноеЗначение, мДата, Объект.СкладОтправитель, Объект.ЦФООтправитель);
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура Подбор(Команда)
	
	ПараметрыФормы = Новый Структура;
	мДата = ?(НЕ ЗначениеЗаполнено(Объект.Ссылка), ТекущаяДата(), КонецДня(Объект.Дата));
	ПараметрыФормы.Вставить("ДатаОстатков"		, мДата);
	мСписокОС = ПолучитьОстаткиСервер(мДата, Объект.СкладОтправитель, Объект.ЦФООтправитель);
	ПараметрыФормы.Вставить("СписокПриОткрытии"	, мСписокОС);
	ПараметрыФормы.Вставить("Склад"				, Объект.СкладОтправитель);
	ПараметрыФормы.Вставить("ЦФО"			, Объект.ЦФООтправитель);
		
	Форма = ПолучитьФорму("Справочник.ОсновныеСредства.Форма.ФормаВыбораУправляемая", ПараметрыФормы, ЭтаФорма);
	
	Форма.Заголовок						= "Основные средства. Подбор";
	Форма.ЗакрыватьПриЗакрытииВладельца	= Истина;
	Форма.ЗакрыватьПриВыборе			= Ложь;
	
	Форма.ОткрытьМодально();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.СкладОтправитель) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		мДата = ?(НЕ ЗначениеЗаполнено(Объект.Ссылка), ТекущаяДата(), Объект.Дата);
		Объект.ЦФООтправитель = ПолучитьЦФОПоТТ(Объект.СкладОтправитель, мДата);
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПолучательПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.СкладПолучатель) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		мДата = ?(НЕ ЗначениеЗаполнено(Объект.Ссылка), ТекущаяДата(), Объект.Дата);
		Объект.ЦФОПолучатель = ПолучитьЦФОПоТТ(Объект.СкладПолучатель, мДата);
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры


&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	Объект.СуммаДокумента = Объект.Номенклатура.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
		НоваяСтрока = Объект.Номенклатура.Добавить();
		НоваяСтрока.ОсновноеСредство 		= ВыбранноеЗначение;
		мДата = ?(НЕ ЗначениеЗаполнено(Объект.Ссылка), ТекущаяДата(), Объект.Дата);
		НоваяСтрока.СчетУчетаЗабалансовый 	= ПолучитьСчетУчетаОС(ВыбранноеЗначение, мДата);
		НоваяСтрока.Сумма 					= ПолучитьОстаток(ВыбранноеЗначение, мДата, Объект.СкладОтправитель, Объект.ЦФООтправитель);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураОсновноеСредствоПриИзменении(Элемент)
	
	ТекДанные = Элементы.Номенклатура.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	мДата = ?(НЕ ЗначениеЗаполнено(Объект.Ссылка), ТекущаяДата(), Объект.Дата);
	пСчетУчета = ПолучитьСчетУчетаОС(ТекДанные.ОсновноеСредство, мДата);
	Если ЗначениеЗаполнено(пСчетУчета) Тогда
		ТекДанные.СчетУчетаЗабалансовый = пСчетУчета;
	КонецЕсли;
	ТекДанные.Сумма = ПолучитьОстаток(ТекДанные.ОсновноеСредство, мДата, Объект.СкладОтправитель, Объект.ЦФООтправитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьПоИнвентаризации(Команда)
	
	Если Объект.Проведен Тогда		
		Сообщить("Нельзя перезаполнять проведенный документ. Отмените проведение для перезаполнения");		
	Иначе		
		ПерезаполнитьПоИнвентаризацииНаСервере();	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьПоИнвентаризацииНаСервере()

	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьОСПоИнвентаризацииМСФО();
	ЗначениеВРеквизитФормы(ДокументОбъект,"Объект");

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
		
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	УстановитьВариант();
	
КонецПроцедуры

&НаКлиенте
Процедура ОборудованиеОсновноеСредствоПриИзменении(Элемент)
	
	ЗаполнитьДанныеОС();
	
КонецПроцедуры

	
&НаКлиенте
Процедура ЗаполнитьДанныеОС()
	
	ТекущиеДанные = Элементы.Оборудование.ТекущиеДанные;	
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ОсновноеСредство) Тогда
		ДанныеОС = АК_ОсновныеСредства.ПолучитьДанныеОС(ТекущиеДанные.ОсновноеСредство,Объект.Ссылка);
	    ТекущиеДанные.Сумма = ДанныеОС.Сумма;
		ТекущиеДанные.СуммаАмортизация = ДанныеОС.СуммаАмортизация;
		ТекущиеДанные.Местоположение = ДанныеОС.Местоположение;
		ТекущиеДанные.Инвентарь =  ДанныеОС.Инвентарь;
		ТекущиеДанные.СчетУчетаЗабалансовый =  ДанныеОС.СчетУчетаЗабалансовый;
	Иначе 
	    ТекущиеДанные.Сумма = 0;
		ТекущиеДанные.СуммаАмортизация = 0;	
		ТекущиеДанные.Местоположение = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
		ТекущиеДанные.Инвентарь = Ложь;
		ТекущиеДанные.СчетУчетаЗабалансовый = ПланыСчетов.Финансовый.ПустаяСсылка();
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОборудованиеОсновноеСредствоОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("СкладскиеАкты_ПослеЗаписи");
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.01.10 б/н 
&НаСервере
Процедура ЗаполнитьДанныеПоОССервер()
	
	КопияТаблицыОС = Объект.Номенклатура.Выгрузить(, "ОсновноеСредство");
	СписокОс = КопияТаблицыОС.ВыгрузитьКолонку("ОсновноеСредство");		
	
	ТаблицаДанныхПоОС = ПолучитьДанныеПоОС(СписокОС, Объект.Дата, Объект.Организация);	
		
	Объект.Номенклатура.Очистить();
		
	Для Каждого Стр Из ТаблицаДанныхПоОС Цикл		
		ЗаполнитьСтрокуДаннымиПоОС(Объект.Номенклатура.Добавить(), Стр);
	КонецЦикла;
			
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.05.29 ИП-00018786
&НаСервере
Процедура ЗаполнитьСтрокуДаннымиПоОС(НовСтр, СтрДанные)	
	
	НовСтр.ОсновноеСредство = СтрДанные.ОсновноеСредство;
	НовСтр.СчетУчетаЗабалансовый = СтрДанные.СчетУчетаРегистр;
	НовСтр.СчетУчетаАмортизация = СтрДанные.СчетАмортизация;
	НовСтр.Сумма = СтрДанные.СуммаОстатокРегистр;
	НовСтр.СуммаАмортизация = -СтрДанные.СуммаОстатокАмортизация;			
	НовСтр.Местоположение = СтрДанные.Местоположение;
	НовСтр.Инвентарь = СтрДанные.СчетУчетаРегистр = ПланыСчетов.Финансовый.ОсновныеСредстваДо100000;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.05.29 ИП-00018786
&НаСервереБезКонтекста	
Функция ПолучитьДанныеПоОС(СписокОС, Дата, Организация)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СпрОС.Ссылка КАК ОсновноеСредство,
	               |	ЕСТЬNULL(ФинансовыйОстатки.Счет, ЗНАЧЕНИЕ(плансчетов.Финансовый.ПустаяСсылка)) КАК СчетУчетаРегистр,
	               |	ЕСТЬNULL(ФинансовыйОстатки.СуммаОстаток, 0) КАК СуммаОстатокРегистр,
	               |	ЕСТЬNULL(ФинансовыйОстаткиАмортизация.Счет, ЗНАЧЕНИЕ(плансчетов.Финансовый.ПустаяСсылка)) КАК СчетАмортизация,
	               |	ЕСТЬNULL(ФинансовыйОстаткиАмортизация.СуммаОстаток, 0) КАК СуммаОстатокАмортизация,
	               |	ЕСТЬNULL(СостояниеОССрезПоследних.Местоположение, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)) КАК Местоположение
	               |ИЗ
	               |	Справочник.ОсновныеСредства КАК СпрОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.Остатки(
	               |				&Период,
	               |				Счет В (&СчетаУчетаМСФО),
	               |				,
	               |				Организация = &Организация
	               |					И Субконто1 В (&СписокОС)) КАК ФинансовыйОстатки
	               |		ПО СпрОС.Ссылка = ФинансовыйОстатки.Субконто1
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.Остатки(
	               |				&Период,
	               |				Счет В (&СчетаУчетаАмортизация),
	               |				,
	               |				Организация = &Организация
	               |					И Субконто1 В (&СписокОС)) КАК ФинансовыйОстаткиАмортизация
	               |		ПО СпрОС.Ссылка = ФинансовыйОстаткиАмортизация.Субконто1
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеОС.СрезПоследних(&Период, ОсновноеСредство В (&СписокОС)) КАК СостояниеОССрезПоследних
	               |		ПО СпрОС.Ссылка = СостояниеОССрезПоследних.ОсновноеСредство
	               |ГДЕ
	               |	СпрОС.Ссылка В(&СписокОС)";	               
				   
	Запрос.УстановитьПараметр("Период", ?(ЗначениеЗаполнено(Дата), Новый Граница(Дата, ВидГраницы.Исключая), ТекущаяДата()));
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	СчетаМсфо = Новый Массив;
	СчетаМСФО.Добавить(ПланыСчетов.Финансовый.ОсновныеСредстваВОрганизации);
	СчетаМСФО.Добавить(ПланыСчетов.Финансовый.ОсновныеСредстваДо100000);
	СчетаМСФО.Добавить(ПланыСчетов.Финансовый.ПриобретениеОсновныхСредств);
	СчетаМСФО.Добавить(ПланыСчетов.Финансовый.ПриобретениеОсновныхСредствДо100000);
		
	Запрос.УстановитьПараметр("СчетаУчетаМСФО", СчетаМСФО);
	
	СчетаАм = Новый Массив;
	СчетаАм.Добавить(ПланыСчетов.Финансовый.АмортизацияОсновныхСредств);
	СчетаАм.Добавить(ПланыСчетов.Финансовый.АмортизацияОсновныхСредствДо100000);

	Запрос.УстановитьПараметр("СчетаУчетаАмортизация", СчетаАм);
	
	Возврат Запрос.Выполнить().Выгрузить();
		
КонецФункции

//+++АК Susk (Суслин К.В.) 2018.01.10 б/н 
&НаКлиенте
Процедура ЗаполнитьДанныеПоОС(Команда)
	
	Если Объект.Организация = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка") Тогда
		Предупреждение("Заполните организацию в документе!");
		Возврат;
	КонецЕсли;
	
	ЗаполнитьДанныеПоОССервер();	
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.01.10 б/н 
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если МСФО И ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ЗаполнитьДанныеПоОССервер();		
	КонецЕсли;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.01.10 ИП-00017530 
&НаКлиенте
Процедура ВыгрузитьВБП(Команда)	
		
	Если НЕ ПроверкаПередВыгрузкойСервер(Параметры.Ключ.Пустая(), ЭтаФорма.Модифицированность, ?(Объект.Дата < Дата(2017, 1, 1), "1 января 2017 года", "")) Тогда
		Возврат;
	КонецЕсли;
	
	ВыгрузитьВБПСервер();
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.01.10 ИП-00017530
&НаСервере
Процедура ВыгрузитьВБПСервер()
	
	ОбменСБП2_0.ВыгрузитьДокументВБП("СписаниеОС", "СписаниеОС", Объект.Ссылка); 
	
КонецПроцедуры	

//+++АК Susk (Суслин К.В.) 2018.01.10 ИП-00017530
&НаСервере
Функция ПроверкаПередВыгрузкойСервер(НужноЗаписать, МодифицированностьФормы, ДатаМеньше)
	
	Возврат ОбменСБП2_0.ПроверкаПередВыгрузкой(НужноЗаписать, МодифицированностьФормы, ДатаМеньше);
	
КонецФункции

//+++АК sils 08.06.2018 ИП-00018466
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
КонецПроцедуры

	