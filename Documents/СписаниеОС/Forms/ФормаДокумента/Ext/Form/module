
Процедура УстановитьВидимость()
	
	Если ТипЗнч(СкладОтправитель) = Тип("СправочникСсылка.СтруктурныеЕдиницы")
			И ЗначениеЗаполнено(СкладОтправитель) Тогда
		Если ЗначениеЗаполнено(СкладОтправитель.ДатаЗакрытия)
				И СкладОтправитель.ДатаЗакрытия < Дата Тогда
			ЭлементыФормы.СкладОтправитель.ЦветФона = Новый Цвет(222, 222, 222);
		Иначе
			ЭлементыФормы.СкладОтправитель.ЦветФона = Новый Цвет(255, 255, 255);
		КонецЕсли;
	Иначе
		ЭлементыФормы.СкладОтправитель.ЦветФона = Новый Цвет(255, 255, 255);
	КонецЕсли;
	
	Если ТипЗнч(СкладПолучатель) = Тип("СправочникСсылка.СтруктурныеЕдиницы")
			И ЗначениеЗаполнено(СкладПолучатель) Тогда
		Если ЗначениеЗаполнено(СкладПолучатель.ДатаЗакрытия)
				И СкладПолучатель.ДатаЗакрытия < Дата Тогда
			ЭлементыФормы.СкладПолучатель.ЦветФона = Новый Цвет(222, 222, 222);
		Иначе
			ЭлементыФормы.СкладПолучатель.ЦветФона = Новый Цвет(255, 255, 255);
		КонецЕсли;
	Иначе
		ЭлементыФормы.СкладПолучатель.ЦветФона = Новый Цвет(255, 255, 255);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьОстаткиСервер()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата"	, ?(ЗначениеЗаполнено(ЭтотОбъект.Дата), ЭтотОбъект.Дата, ТекущаяДата()));
	Запрос.УстановитьПараметр("Склад"	, ЭтотОбъект.СкладОтправитель);
	Запрос.УстановитьПараметр("ЦФО"		, ЭтотОбъект.ЦФООтправитель);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФинансовыйОстатки.Субконто3 КАК ОсновноеСредство
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(
	|			&Дата,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредства)),
	|			,
	|			Субконто1 = &ЦФО
	|				И Субконто2 = &Склад) КАК ФинансовыйОстатки
	|ГДЕ
	|	ФинансовыйОстатки.КоличествоОстаток > 0";
	
	спРез = Новый СписокЗначений;
	спРез.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ОсновноеСредство"));
	
	Возврат спРез;
	
КонецФункции

Функция ПолучитьОстатокФин(мОсновноеСредство) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата"			, ?(ЗначениеЗаполнено(ЭтотОбъект.Дата), ЭтотОбъект.Дата, ТекущаяДата()));
	Запрос.УстановитьПараметр("Склад"			, ЭтотОбъект.СкладОтправитель);
	Запрос.УстановитьПараметр("ЦФО"				, ЭтотОбъект.ЦФООтправитель);
	Запрос.УстановитьПараметр("ОсновноеСредство", мОсновноеСредство);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФинансовыйОстатки.Субконто3 КАК ОсновноеСредство,
	|	ФинансовыйОстатки.КоличествоОстаток КАК Количество,
	|	ФинансовыйОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(
	|			&Дата,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредства)),
	|			,
	|			Субконто1 = &ЦФО
	|				И Субконто2 = &Склад
	|				И Субконто3 = &ОсновноеСредство) КАК ФинансовыйОстатки";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Сумма;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции

Функция ПолучитьСчетУчетаОС(пОсновноеСредство)
	
	Запрос = Новый Запрос;            
	Запрос.УстановитьПараметр("Дата"			, ?(ЗначениеЗаполнено(ЭтотОбъект.Дата), ЭтотОбъект.Дата, ТекущаяДата()));
	Запрос.УстановитьПараметр("ОсновноеСредство", пОсновноеСредство);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФинансовыйОстатки.Счет
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(&Дата, Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредства)), , Субконто3 = &ОсновноеСредство) КАК ФинансовыйОстатки";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Счет;
	КонецЕсли;

	Возврат ПланыСчетов.Финансовый.ПустаяСсылка();
	
КонецФункции

Функция ПолучитьЦФОПоТТ(ТТ, мДата)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТТ"	, ТТ);
	Запрос.УстановитьПараметр("Дата", мДата);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО
	|ИЗ
	|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&Дата, СтруктурнаяЕдиница = &ТТ) КАК ЦФОСтруктурныхЕдиницСрезПоследних";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ЦФО;
	Иначе
		Возврат Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции


Процедура Подбор(Кнопка)
	
	Форма = Справочники.ОсновныеСредства.ПолучитьФормуВыбора(, ЭлементыФормы.Номенклатура);
	Форма.РежимВыбора 					= Истина;
	Форма.ЗакрыватьПриЗакрытииВладельца = Истина;
	Форма.ЗакрыватьПриВыборе 			= Ложь;
	Форма.ЭлементыФормы.СправочникСписок.ИерархическийПросмотр = Ложь;
	
	Если Не Форма.Открыта() Тогда
		Форма.РазрешитьСоединятьОкно 			= Истина;
		Форма.СоединяемоеОкно 					= Истина;
		Форма.РазрешитьСостояниеПрикрепленное 	= Истина;
		Форма.РазрешитьСостояниеПрячущееся 		= Истина;
		Форма.РазрешитьСостояниеСвободное 		= Ложь;
		Форма.ИзменятьСпособОтображенияОкна 	= ИзменениеСпособаОтображенияОкна.Разрешить;
		Форма.СостояниеОкна 					= ВариантСостоянияОкна.Прикрепленное;
		Форма.РазрешитьСостояниеОбычное 		= Ложь;
		Форма.ПоложениеПрикрепленногоОкна 		= ВариантПрикрепленияОкна.Право;
	КонецЕсли;
	
	Форма.СправочникСписок.Отбор.Ссылка.ВидСравнения 	= ВидСравнения.ВСписке;
	Форма.СправочникСписок.Отбор.Ссылка.Значение 		= ПолучитьОстаткиСервер();
	Форма.СправочникСписок.Отбор.Ссылка.Использование 	= Истина;
	
	Форма.ДатаОстатков 	= КонецДня(ЭтотОбъект.Дата);
	Форма.Склад 		= ЭтотОбъект.СкладОтправитель;
	Форма.ЦФО 			= ЭтотОбъект.ЦФООтправитель;
	Форма.Открыть();
	
КонецПроцедуры

Процедура РедактированиеДвижений(Команда)
	
	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(Ложь, Ссылка, ЭтотОбъект);
	
КонецПроцедуры


Процедура ПриОткрытии()
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		ЭтотОбъект.Ответственный 	= ПараметрыСеанса.ТекущийПользователь;
		ЭтотОбъект.СкладПолучатель 	= Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_231");
		ЭтотОбъект.ЦФОПолучатель 	= ПолучитьЦФОПоТТ(ЭтотОбъект.СкладПолучатель, ТекущаяДата());
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.СкладОтправитель) Тогда
		ЭтотОбъект.СкладОтправитель = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.СкладПолучатель) Тогда
		ЭтотОбъект.СкладПолучатель = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если СкладОтправитель = СкладПолучатель
			И ЦФООтправитель = ЦФОПолучатель Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Ошибка! Данные отправителя и получателя ОС идентичны");
		Отказ = Истина;		
	КонецЕсли;
	
КонецПроцедуры


Процедура СкладОтправительПриИзменении(Элемент)
	
	Если ТипЗнч(СкладОтправитель) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		ЦФООтправитель = ПолучитьЦФОПоТТ(СкладОтправитель, Дата);
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура СкладПолучательПриИзменении(Элемент)
	
	Если ТипЗнч(СкладПолучатель) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		ЦФОПолучатель = ПолучитьЦФОПоТТ(СкладПолучатель, Дата);
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры


Процедура НоменклатураПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ОформлениеСтроки.Ячейки.ИнвентарныйНомер.УстановитьТекст(ОформлениеСтроки.ДанныеСтроки.ОсновноеСредство.ИнвентарныйНомер);
	КонецЦикла;
	
КонецПроцедуры

Процедура НоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
		
		НоваяСтрока = ЭтотОбъект.Номенклатура.Добавить();
		НоваяСтрока.ОсновноеСредство 		= ВыбранноеЗначение;
		НоваяСтрока.СчетУчетаЗабалансовый 	= ПолучитьСчетУчетаОС(ВыбранноеЗначение);
		
		НоваяСтрока.Сумма 					= ПолучитьОстатокФин(ВыбранноеЗначение);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура НоменклатураПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	СуммаДокумента = ЭтотОбъект.Номенклатура.Итог("Сумма");
	
КонецПроцедуры
