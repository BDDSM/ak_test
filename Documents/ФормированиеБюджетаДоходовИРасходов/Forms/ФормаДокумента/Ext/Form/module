
Процедура ПриОткрытии()
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	Иначе
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, );
		ПериодРегистрации = НачалоМесяца(ТекущаяДата());
		пСтруктурнаяЕдиница = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(Ответственный, "ОсновноеПодразделение").СтруктурнаяЕдиница;
		Если пСтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение Тогда
			СтруктурнаяЕдиница = пСтруктурнаяЕдиница;
		КонецЕсли;
	КонецЕсли;
	
	МесяцСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрации);
	
	ЭлементыФормы.Подписант.ТолькоПросмотр = Не РольДоступна("ПолныеПрава");
	ТолькоПросмотр = НЕ (РольДоступна("ПолныеПрава") ИЛИ (РольДоступна("ПравоПодписиБюджетов") И Подписант = глЗначениеПеременной("глТекущийПользователь")));
КонецПроцедуры

Процедура ДействияФормыПерейтиВЖурналПроводок(Кнопка)
	БухгалтерскийУчет.ОткрытьЖурналПроводок(Ссылка);
КонецПроцедуры

Процедура ДействияФормыИсторияИзменений(Кнопка)
	ИсторияИзменений = Отчеты.ИсторияИзмененийОбъектов.Создать();
	ИсторияИзменений.СсылкаНаОбъект = Ссылка;
	Форма = ИсторияИзменений.ПолучитьФорму("ФормаОтчета");
	Форма.СформироватьТаблицуВерсий();
	Форма.Открыть();
КонецПроцедуры

Процедура Кнопка1Нажатие(Элемент)
	Если РольДоступна("ПравоПодписиБюджетов") Тогда
		Если Вопрос("Подписать документ?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			Подписант = глЗначениеПеременной("глТекущийПользователь");
		КонецЕсли;
	Иначе
		ОбщегоНазначения.СообщитьОбОшибке("Ошибка! У вас нет прав на подпись бюджетов");
	КонецЕсли;
КонецПроцедуры

Процедура ЦФОНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Форма = Справочники.СтруктурныеЕдиницы.ПолучитьФормуВыбора(, Элемент);
	Форма.СправочникСписок.Отбор.ТипСтруктурнойЕдиницы.Значение = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение;
	Форма.СправочникСписок.Отбор.ТипСтруктурнойЕдиницы.Использование = Истина;
	Форма.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ТипСтруктурнойЕдиницы.Доступность = Ложь;
	Форма.Открыть();
КонецПроцедуры

Процедура РасшифровкаСтатьяДРНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Форма = Справочники.СтатьиДоходовРасходов.ПолучитьФормуВыбора(, Элемент);
	Форма.СправочникСписок.Отбор.Ссылка.ВидСравнения = ВидСравнения.ВСписке;
	спВрем = Новый СписокЗначений;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", ЦФО);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПраваДоступаКСтатьямДР.СтатьяДР
	               |ИЗ
	               |	РегистрСведений.ПраваДоступаКСтатьямДР КАК ПраваДоступаКСтатьямДР
	               |ГДЕ
	               |	ПраваДоступаКСтатьямДР.СтруктурнаяЕдиница = &СтруктурнаяЕдиница";
	спВрем.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("СтатьяДР"));
	Форма.СправочникСписок.Отбор.Ссылка.Значение = спВрем;
	Форма.СправочникСписок.Отбор.Ссылка.Использование = Истина;
	Форма.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Ссылка.Доступность = Ложь;
	Форма.Открыть();
КонецПроцедуры

Процедура ПериодРегистрацииПриИзменении(Элемент)
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(Элемент.Значение, ПериодРегистрации);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрации);	
КонецПроцедуры

Процедура ПериодРегистрацииРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ПериодРегистрации = ДобавитьМесяц(ПериодРегистрации, Направление);
	Элемент.Значение = РаботаСДиалогами.ДатаКакМесяцПредставление(ПериодРегистрации);
КонецПроцедуры

Процедура ЗаполнитьНаОснованииФактическихДанныхПрошлогоМесяца(Кнопка)
	Запрос = Новый Запрос;
	
	пФорма = ПолучитьФорму("ФормаВыбораПериода");
	Если ЗначениеЗаполнено(ПериодРегистрации) Тогда
		пФорма.ПериодРегистрации = ДобавитьМесяц(ПериодРегистрации, -1);
	КонецЕсли;
	пФорма.ОткрытьМодально();
	Если ЗначениеЗаполнено(пФорма.ПериодРегистрации) Тогда			
		Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(пФорма.ПериодРегистрации));
		Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(пФорма.ПериодРегистрации));
	Иначе
		Возврат;
	КонецЕсли;
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", ЦФО);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ФинансовыйОбороты.Субконто2 КАК СтатьяДР,
	               |	СУММА(ВЫБОР
	               |			КОГДА ФинансовыйОбороты.СуммаОборотДт >= 0
	               |				ТОГДА ФинансовыйОбороты.СуммаОборотДт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК Доход,
	               |	СУММА(ВЫБОР
	               |			КОГДА ФинансовыйОбороты.СуммаОборотДт < 0
	               |				ТОГДА -ФинансовыйОбороты.СуммаОборотДт
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК Расход
	               |ИЗ
	               |	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, , Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.Продажи)), , Субконто3 = &СтруктурнаяЕдиница, , ) КАК ФинансовыйОбороты
	               |ГДЕ
	               |	ФинансовыйОбороты.СуммаОборотДт <> 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ФинансовыйОбороты.Субконто2";
	Расшифровка.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

Процедура ЗаполнитьНаОснованииПлановыхДанныхПрошлогоМесяца(Кнопка)
	Запрос = Новый Запрос;
	
	пФорма = ПолучитьФорму("ФормаВыбораПериода");
	Если ЗначениеЗаполнено(ПериодРегистрации) Тогда
		пФорма.ПериодРегистрации = ДобавитьМесяц(ПериодРегистрации, -1);
	КонецЕсли;
	пФорма.ОткрытьМодально();
	Если ЗначениеЗаполнено(пФорма.ПериодРегистрации) Тогда			
		Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(пФорма.ПериодРегистрации));
		Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(пФорма.ПериодРегистрации));
	Иначе
		Возврат;
	КонецЕсли;
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", ЦФО);
	Запрос.УстановитьПараметр("Счет", ПланыСчетов.Финансовый.Продажи);
	Запрос.Текст = "ВЫБРАТЬ
	               |	БюджетДоходовИРасходов.СтатьяДР КАК СтатьяДР,
	               |	СУММА(ВЫБОР
	               |			КОГДА БюджетДоходовИРасходов.Сумма >= 0
	               |				ТОГДА БюджетДоходовИРасходов.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК Доход,
	               |	СУММА(ВЫБОР
	               |			КОГДА БюджетДоходовИРасходов.Сумма < 0
	               |				ТОГДА -БюджетДоходовИРасходов.Сумма
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК Расход
	               |ИЗ
	               |	РегистрНакопления.БюджетДоходовИРасходов КАК БюджетДоходовИРасходов
	               |ГДЕ
	               |	БюджетДоходовИРасходов.Период >= &НачалоПериода
	               |	И БюджетДоходовИРасходов.Период <= &КонецПериода
	               |	И БюджетДоходовИРасходов.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	               |	И БюджетДоходовИРасходов.Сумма <> 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	БюджетДоходовИРасходов.СтатьяДР
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	СтатьяДР";
	Расшифровка.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

Процедура ПрименитьКоэффициент(Кнопка)
	пФорма = ПолучитьФорму("ФормаВыбораКоэффициента");
	пФорма.ОткрытьМодально();
	Если ЗначениеЗаполнено(пФорма.Коэффициент) Тогда			
		Для Каждого Строка Из Расшифровка Цикл
			Строка.Доход = Строка.Доход * пФорма.Коэффициент;
			Строка.Расход = Строка.Расход * пФорма.Коэффициент;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ПериодРегистрацииОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

Процедура ПериодРегистрацииНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(Элемент, СтандартнаяОбработка, ПериодРегистрации, ЭтаФорма);
КонецПроцедуры

Процедура ПериодРегистрацииАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	РаботаСДиалогами.ДатаКакМесяцАвтоПодборТекста(Текст, ТекстАвтоПодбора, СтандартнаяОбработка);
КонецПроцедуры

Процедура ПериодРегистрацииОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, Значение, СтандартнаяОбработка);
КонецПроцедуры
