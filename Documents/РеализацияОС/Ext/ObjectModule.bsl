
Функция РассчитатьАмортизациюНаЛету(СписокОС)
	
	Возврат АК_ОсновныеСредства.РассчитатьАмортизациюНаЛету(СписокОС, Организация, Дата);
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ФинансовыйОбороты.Субконто1 КАК ОсновноеСредство,
	//               |	ФинансовыйОбороты.СуммаОстаток КАК СуммаОборотПо01,
	//               |	ПринятыеКУчетуОССрезПоследних.НачислятьАмортизацию,
	//               |	ПринятыеКУчетуОССрезПоследних.СрокАмортизации,
	//               |	ПринятыеКУчетуОССрезПоследних.ЭтоОприходование
	//               |ПОМЕСТИТЬ Сводная
	//               |ИЗ
	//               |	РегистрБухгалтерии.Финансовый.Остатки(
	//               |			&КонецПериода,
	//               |			Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации)
	//               |				ИЛИ Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000),
	//               |			,
	//               |			Организация = &Организация
	//               |				И Субконто1 В (&СписокОС)) КАК ФинансовыйОбороты
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПринятыеКУчетуОС.СрезПоследних(&КонецПериода, ) КАК ПринятыеКУчетуОССрезПоследних
	//               |		ПО ФинансовыйОбороты.Субконто1 = ПринятыеКУчетуОССрезПоследних.ОсновноеСредство
	//               |			И ФинансовыйОбороты.Организация = ПринятыеКУчетуОССрезПоследних.Организация
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	Сводная.ОсновноеСредство,
	//               |	Сводная.СуммаОборотПо01 КАК НачальнаяСтоимость,
	//               |	Сводная.НачислятьАмортизацию,
	//               |	Сводная.СрокАмортизации,
	//               |	Сводная.ЭтоОприходование
	//               |ПОМЕСТИТЬ ПринятыеКУчетуОССрассчитаннойСтоимостью
	//               |ИЗ
	//               |	Сводная КАК Сводная
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ПринятыеКУчетуОССрезПоследних.ОсновноеСредство,
	//               |	ПринятыеКУчетуОССрезПоследних.НачальнаяСтоимость / ПринятыеКУчетуОССрезПоследних.СрокАмортизации КАК СуммаСписанияЗаМесяц,
	//               |	ЕСТЬNULL(ПринятыеКУчетуОССрезПоследних.НачальнаяСтоимость, 0) КАК НачальнаяСтоимость,
	//               |	ПринятыеКУчетуОССрезПоследних.СрокАмортизации,
	//               |	ПринятыеКУчетуОССрезПоследних.ЭтоОприходование
	//               |ПОМЕСТИТЬ втПринятыеКУчету
	//               |ИЗ
	//               |	ПринятыеКУчетуОССрассчитаннойСтоимостью КАК ПринятыеКУчетуОССрезПоследних
	//               |ГДЕ
	//               |	ПринятыеКУчетуОССрезПоследних.НачислятьАмортизацию
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ФинансовыйОстатки.Субконто1 КАК ОсновноеСредство,
	//               |	ФинансовыйОстатки.СуммаОстаток КАК Сумма,
	//               |	ФинансовыйОстатки.Счет
	//               |ПОМЕСТИТЬ втСтоимостьОС
	//               |ИЗ
	//               |	РегистрБухгалтерии.Финансовый.Остатки(
	//               |			&ГраницаНачала,
	//               |			Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации)
	//               |				ИЛИ Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000),
	//               |			,
	//               |			Субконто1 В
	//               |				(ВЫБРАТЬ
	//               |					втПринятыеКУчету.ОсновноеСредство
	//               |				ИЗ
	//               |					втПринятыеКУчету)) КАК ФинансовыйОстатки
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	втПринятыеКУчету.ОсновноеСредство,
	//               |	СУММА(ВЫБОР
	//               |			КОГДА ВЫБОР
	//               |					КОГДА втСтоимостьОС.Сумма > 0
	//               |						ТОГДА втСтоимостьОС.Сумма / втПринятыеКУчету.СрокАмортизации
	//               |					ИНАЧЕ втПринятыеКУчету.СуммаСписанияЗаМесяц
	//               |				КОНЕЦ + НачисленноАмортизации.Сумма > втСтоимостьОС.Сумма
	//               |				ТОГДА втСтоимостьОС.Сумма - НачисленноАмортизации.Сумма
	//               |			ИНАЧЕ ВЫБОР
	//               |					КОГДА втСтоимостьОС.Сумма > 0
	//               |						ТОГДА втСтоимостьОС.Сумма / втПринятыеКУчету.СрокАмортизации
	//               |					ИНАЧЕ втПринятыеКУчету.СуммаСписанияЗаМесяц
	//               |				КОНЕЦ
	//               |		КОНЕЦ) КАК Сумма,
	//               |	втСтоимостьОС.Счет,
	//               |	втПринятыеКУчету.ЭтоОприходование
	//               |ИЗ
	//               |	втПринятыеКУчету КАК втПринятыеКУчету
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//               |			ФинансовыйДвиженияССубконто.СубконтоКт1 КАК ОсновноеСредство,
	//               |			СУММА(ЕСТЬNULL(ФинансовыйДвиженияССубконто.Сумма, 0)) КАК Сумма
	//               |		ИЗ
	//               |			РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
	//               |					,
	//               |					&ДатаНачала,
	//               |					СубконтоКт1 В
	//               |							(ВЫБРАТЬ
	//               |								втПринятыеКУчету.ОсновноеСредство
	//               |							ИЗ
	//               |								втПринятыеКУчету)
	//               |						И (СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредств)
	//               |							ИЛИ СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредствДо100000)),
	//               |					,
	//               |					) КАК ФинансовыйДвиженияССубконто
	//               |		
	//               |		СГРУППИРОВАТЬ ПО
	//               |			ФинансовыйДвиженияССубконто.СубконтоКт1) КАК НачисленноАмортизации
	//               |		ПО втПринятыеКУчету.ОсновноеСредство = НачисленноАмортизации.ОсновноеСредство
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостьОС КАК втСтоимостьОС
	//               |		ПО втПринятыеКУчету.ОсновноеСредство = втСтоимостьОС.ОсновноеСредство
	//               |ГДЕ
	//               |	ЕСТЬNULL(втПринятыеКУчету.НачальнаяСтоимость, 0) > ЕСТЬNULL(НачисленноАмортизации.Сумма, 0)
	//               |
	//               |СГРУППИРОВАТЬ ПО
	//               |	втПринятыеКУчету.ОсновноеСредство,
	//               |	втСтоимостьОС.Счет,
	//               |	втПринятыеКУчету.ЭтоОприходование";
	//
	//Запрос.УстановитьПараметр("Организация", Организация);
	//Запрос.УстановитьПараметр("СписокОС", СписокОС);
	//
	//ГраницаНачала = Новый Граница(Началомесяца(Дата),ВидГраницы.Включая);
	//Запрос.УстановитьПараметр("ГраницаНачала", ГраницаНачала);

	//Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	//
	//Граница = Новый Граница(НачалоМесяца(Дата),ВидГраницы.Исключая);	
	//Запрос.УстановитьПараметр("КонецПериода", Граница); 
	//
	//Возврат Запрос.Выполнить().Выгрузить();	
	
КонецФункции

Функция ПолучитьОстаткиПоОССервер(СписокОС, ТолькоПолучитьСчетУчета = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА ФинансовыйОстатки.Счет В ИЕРАРХИИ (&СчетаАмортизации)
	               |			ТОГДА -ФинансовыйОстатки.СуммаОстаток
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ОстатокАмортизации,
	               |	ВЫБОР
	               |		КОГДА ФинансовыйОстатки.Счет В ИЕРАРХИИ (&СчетаУчетаОС, ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ПриобретениеОсновныхСредств), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ПриобретениеОсновныхСредствДо100000))
	               |			ТОГДА ФинансовыйОстатки.СуммаОстаток
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК ОстатокПоОС,
	               |	ВЫБОР
	               |		КОГДА ФинансовыйОстатки.Счет В (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ПриобретениеОсновныхСредств), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ПриобретениеОсновныхСредствДо100000))
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК НеПринятоКУчету,
	               |	ФинансовыйОстатки.Субконто1 КАК ОС,
	               |	ФинансовыйОстатки.Счет
	               |ПОМЕСТИТЬ Сводная
	               |ИЗ
	               |	РегистрБухгалтерии.Финансовый.Остатки(
	               |			&Период,
	               |			Счет В ИЕРАРХИИ (&СписокСчетов, ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ПриобретениеОсновныхСредств), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ПриобретениеОсновныхСредствДо100000)),
	               |			,
	               |			Субконто1 В (&СписокОС)
	               |				И Организация = &Организация) КАК ФинансовыйОстатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(Сводная.ОстатокАмортизации) КАК ОстатокАмортизации,
	               |	СУММА(Сводная.ОстатокПоОС) КАК ОстатокПоОС,
	               |	Сводная.ОС,
	               |	МАКСИМУМ(Сводная.НеПринятоКУчету) КАК НеПринятоКУчету,
	               |	МАКСИМУМ(Сводная.Счет) КАК Счет
	               |ИЗ
	               |	Сводная КАК Сводная
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Сводная.ОС";
	
	СписокСчетов = Новый Массив;
	СписокСчетов.Добавить(ПланыСчетов.Финансовый.ОсновныеСредстваВОрганизации);
	СписокСчетов.Добавить(ПланыСчетов.Финансовый.АмортизацияОсновныхСредств);		
	
	СчетаАмортизации = Новый Массив;
	СчетаАмортизации.Добавить(ПланыСчетов.Финансовый.АмортизацияОсновныхСредств);
		
	СчетаУчетаОС = Новый Массив;
	СчетаУчетаОС.Добавить(ПланыСчетов.Финансовый.ОсновныеСредстваВОрганизации);
		
	Запрос.УстановитьПараметр("СписокСчетов", СписокСчетов);
	Запрос.УстановитьПараметр("СчетаУчетаОС", СчетаУчетаОС);
	Запрос.УстановитьПараметр("СчетаАмортизации", СчетаАмортизации);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("Организация", Организация); 
		
	ТаблицаДанныеОС = Запрос.Выполнить().Выгрузить();
	
	Если НЕ ТолькоПолучитьСчетУчета Тогда
		ТаблицаАмортизации = РассчитатьАмортизациюНаЛету(СписокОС);	
		ТаблицаАмортизации.Индексы.Добавить("ОсновноеСредство");
	
		Для Каждого Стр Из ТаблицаДанныеОС Цикл
			НайдСтр = ТаблицаАмортизации.Найти(Стр.ОС, "ОсновноеСредство");
		
			Если НайдСтр <> Неопределено Тогда
				Стр.ОстатокАмортизации = Стр.ОстатокАмортизации + НайдСтр.Сумма;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТаблицаДанныеОС;	
	
КонецФункции

Функция ПроверитьЗадвоения()
	
	тзНоменклатура = ОсновныеСредства.Выгрузить();
	тзНоменклатура.Свернуть("ОсновноеСредство");
	Если тзНоменклатура.Количество() = ОсновныеСредства.Количество() Тогда
		Возврат Истина;
	КонецЕсли;

	тзНоменклатура.Колонки.Добавить("Количество");
	тзНоменклатура.ЗаполнитьЗначения(0, "Количество");
	Для Каждого Строка Из ОсновныеСредства Цикл
		пСтрока = тзНоменклатура.Найти(Строка.ОсновноеСредство, "ОсновноеСредство");
		пСтрока.Количество = пСтрока.Количество + 1;
	КонецЦикла;
	
	ОбщегоНазначения.СообщитьОбОшибке("", Истина, "В табличной части имеются задвоения:");
	Для Каждого Строка Из ОсновныеСредства Цикл
		пСтрока = тзНоменклатура.Найти(Строка.ОсновноеСредство, "ОсновноеСредство");
		Если пСтрока.Количество > 1 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Строка № " + Строка.НомерСтроки + " (" + Строка.ОсновноеСредство + ")", Истина);	
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//+++АК Susk (Суслин К.В.) 2018.05.11 ИП-00018664	 
	//ЭтотОбъект.СуммаДокумента = ЭтотОбъект.ОсновныеСредства.Итог("Сумма");	
	СуммаДокумента = ОсновныеСредства.Итог("Сумма") + ?(ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСсверху, ОсновныеСредства.Итог("СуммаНДС"), 0);
	//---АК Susk (Суслин К.В.) 
		
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверяемыеРеквизиты.Добавить("Организация");
	ПроверяемыеРеквизиты.Добавить("Контрагент");
	ПроверяемыеРеквизиты.Добавить("ДоговорКонтрагента");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Перем Заголовок;
	
	// Проверка ручной корректировки
	Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(ЭтотОбъект.РучнаяКорректировка, Отказ, Заголовок, ЭтотОбъект) Тогда
		Возврат
	КонецЕсли;
	
	Если НЕ ПроверитьЗадвоения() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		ДвиженияПоРегистрам(Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДвиженияПоРегистрам(Отказ)
	
	ДвиженияФинансовый(Отказ);
	ДвиженияСнятиеСУчета(Отказ);
	ДвиженияРасчетыСКонтрагентами(Отказ);
	
КонецПроцедуры

Процедура ДвиженияФинансовый(Отказ)
	
	Движения.Финансовый.Записывать = Истина;
	
	Счет_01_9 = ПланыСчетов.Финансовый.НайтиПоКоду("01.9");
	Счет_44_5 = ПланыСчетов.Финансовый.НайтиПоКоду("44.5");
	Счет_96_1 = ПланыСчетов.Финансовый.НайтиПоКоду("96.1");
	
	ВидНалогаНДС = Справочники.ВидыНалогов.НайтиПоНаименованию("НДС");
	
	Если Документы.РеализацияОС.ВГО(Контрагент) Тогда
	
		Для Каждого Стр Из ОсновныеСредства Цикл
		
			//62.ВГ-96.1
			Движение = Движения.Финансовый.Добавить();
			Движение.СчетДт = ПланыСчетов.Финансовый.ВГОРасчетыСПокупателями;
			Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[0].ВидСубконто] = Организация;
			Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[1].ВидСубконто] = Контрагент;
			Движение.СчетКт = Счет_96_1;
			Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[0].ВидСубконто] = Стр.СтруктурнаяЕдиница;
			Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[1].ВидСубконто] = СтатьяДР90счет;
			Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[2].ВидСубконто] = ЦФО;
			Движение.Сумма = Стр.Сумма;
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.Содержание = "Реализация ОС";
			
			//01.9-01
			Движение = Движения.Финансовый.Добавить();
			Движение.СчетДт = Счет_01_9;
			Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[0].ВидСубконто] = Стр.ОсновноеСредство;
			Движение.СчетКт = ПланыСчетов.Финансовый.ОсновныеСредстваВОрганизации;
			Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[0].ВидСубконто] = Стр.ОсновноеСредство;
			Движение.Сумма = Стр.ОстаточнаяСтоимость;
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.Содержание = "Реализация ОС";
			
			//02-01.9
			Если ЗначениеЗаполнено(Стр.ОстаточнаяАмортизация) Тогда
				Движение = Движения.Финансовый.Добавить();
				Движение.СчетДт = ПланыСчетов.Финансовый.АмортизацияОсновныхСредств;
				Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[0].ВидСубконто] = Стр.ОсновноеСредство;
				Движение.СчетКт = Счет_01_9;
				Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[0].ВидСубконто] = Стр.ОсновноеСредство;
				Движение.Сумма = Стр.ОстаточнаяАмортизация;
				Движение.Период = Дата;
				Движение.Организация = Организация;
				Движение.Содержание = "Реализация ОС";
			КонецЕсли;
			
			//44.5-01.9
			Движение = Движения.Финансовый.Добавить();
			Движение.СчетДт = Счет_44_5;
			
			//+++АК VERT 2018.06.19 по просьбе Чиркова Н. для 44 счета должна быть структурная единица всегда
			Если ТипЗнч(Стр.СтруктурнаяЕдиница) = Тип("СправочникСсылка.Склады") Тогда 
				СтруктурнаяЕдиница = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Стр.СтруктурнаяЕдиница, "Владелец");
			Иначе
				СтруктурнаяЕдиница = Стр.СтруктурнаяЕдиница;
			КонецЕсли;
			Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[0].ВидСубконто] = СтруктурнаяЕдиница;
			Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[1].ВидСубконто] = СтатьяДР44;
			Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[2].ВидСубконто] = ЦФО;
			Движение.СчетКт = Счет_01_9;
			Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[0].ВидСубконто] = Стр.ОсновноеСредство;
			Движение.Сумма = Стр.ОстаточнаяСтоимость - Стр.ОстаточнаяАмортизация;
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.Содержание = "Реализация ОС";
			
			//НДС			
			Движение = Движения.Финансовый.Добавить();
			Движение.СчетДт = Счет_96_1;
			Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[0].ВидСубконто] = Стр.СтруктурнаяЕдиница;
			Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[1].ВидСубконто] = СтатьяДР90счет;
			Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[2].ВидСубконто] = ЦФО;
			Движение.СчетКт = ПланыСчетов.Финансовый.НалогиУН; //68.2
			Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[0].ВидСубконто] = Организация;
			Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[1].ВидСубконто] = ВидНалогаНДС;
			Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[2].ВидСубконто] = Стр.СтавкаНДС;			
			Движение.Сумма = Стр.СуммаНДС;
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.Содержание = "Реализация ОС";
				
		КонецЦикла;	
		
	Иначе
		
		СписокОС = ОсновныеСредства.ВыгрузитьКолонку("ОсновноеСредство");
		
		ТаблицаПринятыхКУчетуОС = ПолучитьТаблицуПринятыхКУчетуОС(СписокОС);
		ТаблицаОстатков = ПолучитьОстаткиПоОССервер(СписокОС, Истина);
		
		Для Каждого Стр Из ОсновныеСредства Цикл
			
			Если Стр.СтруктурнаяЕдиница = Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("bee01d02-4cf5-11e3-979d-005056a00106")) Тогда //Склад_оборудование меняю на стр.ед
				СтруктЕд = Справочники.СтруктурныеЕдиницы.ПолучитьСсылку(Новый УникальныйИдентификатор("49138a04-cdee-11e7-8383-005056a0779c")); //Склад оборудование
			Иначе
				СтруктЕд = Стр.СтруктурнаяЕдиница;
			КонецЕсли;		
			
		
			//62.1-90.5
			Движение = Движения.Финансовый.Добавить();
			Движение.СчетДт = ПланыСчетов.Финансовый.РасчетыСПокупателямиПрочие;
			Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[0].ВидСубконто] = Организация;
			Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[1].ВидСубконто] = Контрагент;
			Движение.СчетКт = ПланыСчетов.Финансовый.ВыручкаПрочая;
			Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[0].ВидСубконто] = СтруктЕд;
			Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[1].ВидСубконто] = СтатьяДР90счет;
			Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[2].ВидСубконто] = ЦФО;
			Движение.Сумма = ?(ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.БезНДС, Стр.Сумма, Стр.Сумма + Стр.СуммаНДС); // в Передаче ОС в бухе 62 счет идет + НДС
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.Содержание = "Реализация ОС";
			
			//НДС			
			Движение = Движения.Финансовый.Добавить();
			Движение.СчетДт = ПланыСчетов.Финансовый.ВыручкаПрочая;
			Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[0].ВидСубконто] = СтруктЕд;
			Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[1].ВидСубконто] = СтатьяДР90счет;
			Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[2].ВидСубконто] = ЦФО;
			Движение.СчетКт = ПланыСчетов.Финансовый.НалогиУН;
			Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[0].ВидСубконто] = Организация;
			Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[1].ВидСубконто] = ВидНалогаНДС;
			Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[2].ВидСубконто] = Стр.СтавкаНДС;			
			Движение.Сумма = Стр.СуммаНДС;
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.Содержание = "Реализация ОС";
			
			НайдСтр = ТаблицаПринятыхКУчетуОС.Найти(Стр.ОсновноеСредство, "ОсновноеСредство");
			
			ОСПринятоКУчету = НайдСтр <> Неопределено;
			
			Если ОСПринятоКУчету Тогда
				
				//01.9-01
				Движение = Движения.Финансовый.Добавить();
				Движение.СчетДт = Счет_01_9;
				Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[0].ВидСубконто] = Стр.ОсновноеСредство;
				Движение.СчетКт = ПланыСчетов.Финансовый.ОсновныеСредстваВОрганизации;
				Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[0].ВидСубконто] = Стр.ОсновноеСредство;
				Движение.Сумма = Стр.ОстаточнаяСтоимость;
				Движение.Период = Дата;
				Движение.Организация = Организация;
				Движение.Содержание = "Реализация ОС";
				
				//02-01.9
				Если ЗначениеЗаполнено(Стр.ОстаточнаяАмортизация) Тогда
					Движение = Движения.Финансовый.Добавить();
					Движение.СчетДт = ПланыСчетов.Финансовый.АмортизацияОсновныхСредств;
					Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[0].ВидСубконто] = Стр.ОсновноеСредство;
					Движение.СчетКт = Счет_01_9;
					Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[0].ВидСубконто] = Стр.ОсновноеСредство;
					Движение.Сумма = Стр.ОстаточнаяАмортизация;
					Движение.Период = Дата;
					Движение.Организация = Организация;
					Движение.Содержание = "Реализация ОС";
				КонецЕсли;
				
			КонецЕсли;
			
			//44.5-01.9
			//+++АК VERT 2018.06.19 по просьбе Чиркова Н. для 44 счета должна быть структурная единица всегда
			Если ТипЗнч(Стр.СтруктурнаяЕдиница) = Тип("СправочникСсылка.Склады") Тогда 
				СтруктурнаяЕдиница = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Стр.СтруктурнаяЕдиница, "Владелец");
			Иначе
				СтруктурнаяЕдиница = Стр.СтруктурнаяЕдиница;
			КонецЕсли;

			Движение = Движения.Финансовый.Добавить();
			Движение.СчетДт = Счет_44_5;
			Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[0].ВидСубконто] = СтруктурнаяЕдиница;
			Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[1].ВидСубконто] = СтатьяДР44;
			Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[2].ВидСубконто] = ЦФО;			
			
			НайдСтрОстаток = ТаблицаОстатков.Найти(Стр.ОсновноеСредство, "ОС");
			
			Если ОСПринятоКУчету Тогда
				СчетКт = Счет_01_9;
			Иначе				
				НайдСтрОстаток = ТаблицаОстатков.Найти(Стр.ОсновноеСредство, "ОС");
			
				Если НайдСтрОстаток = Неопределено Тогда
					ОбщегоНазначения.СообщитьОбОшибке("Не удалось найти остаток по счетам для ОС: " + Строка(Стр.ОсновноеСредство) + ", " + ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Стр.ОсновноеСредство, "ИнвентарныйНомер"));
					Возврат;
				КонецЕсли;
				
				СчетКт = НайдСтрОстаток.Счет; 
				
			КонецЕсли;
			
			Движение.СчетКт = СчетКт;
			Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[0].ВидСубконто] = Стр.ОсновноеСредство;
			Движение.Сумма = Стр.ОстаточнаяСтоимость - Стр.ОстаточнаяАмортизация;
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.Содержание = "Реализация ОС";			
							
		КонецЦикла;	
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДвиженияСнятиеСУчета(Отказ)
	
	Движения.СостояниеОС.Записывать = Истина;
	
	Для Каждого Стр Из ОсновныеСредства Цикл
		НовДвиж = Движения.СостояниеОС.Добавить();
		НовДвиж.Период = Дата;
		НовДвиж.ОсновноеСредство = Стр.ОсновноеСредство;
		НовДвиж.Местоположение = Стр.СтруктурнаяЕдиница;
		НовДвиж.Списано = Истина;
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ДвиженияРасчетыСКонтрагентами(Отказ)
	//
	//Движения.РасчетыСКонтрагентами.Записывать = Истина;
	//
	//Движение = Движения.РасчетыСКонтрагентами.Добавить();
	//Движение.Период = Дата;
	//Движение.Организация = Организация;
	//Движение.Контрагент = Контрагент;
	//Движение.Сумма = СуммаДокумента;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ, ЭтотОбъект.РучнаяКорректировка);
	
КонецПроцедуры

Функция ПолучитьТаблицуПринятыхКУчетуОС(СписокОС)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПринятыеКУчетуОССрезПоследних.ОсновноеСредство,
		|	ПринятыеКУчетуОССрезПоследних.ДатаВводаВЭксплуатацию
		|ИЗ
		|	РегистрСведений.ПринятыеКУчетуОС.СрезПоследних(&ДатаСреза, ОсновноеСредство В (&СписокОС)) КАК ПринятыеКУчетуОССрезПоследних";

	Запрос.УстановитьПараметр("ДатаСреза", Дата);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);

	Возврат Запрос.Выполнить().Выгрузить();	

КонецФункции