
&НаСервереБезКонтекста
Функция СчетМожноИспользоватьВПроводках(мСчет)
	
	Если НЕ ТипЗнч(мСчет) = Тип("ПланСчетовСсылка.Финансовый") Тогда
		Возврат Ложь; // Неправильный тип
	КонецЕсли;

	Если мСчет = ПланыСчетов.Финансовый.ПустаяСсылка() Тогда
		Возврат Истина; // Пустая ссылка может использоваться
	КонецЕсли;

	Если мСчет.ЗапретитьИспользоватьВПроводках Тогда

 		Сообщение = Новый СообщениеПользователю();
		//Сообщение.ПутьКДанным 	= мСчет;
		Сообщение.Текст 		= "Счет " + СокрЛП(мСчет)+ " """ + мСчет.Наименование + """ нельзя использовать в проводках.";
		Сообщение.Сообщить();

		Возврат Ложь; // Счет использовать в проводках нельзя

	КонецЕсли;

	Возврат Истина; // Счет можно использовать в проводках 
	
КонецФункции

&НаКлиенте
Процедура УстановитьВидимость()
	
	ПризнакВГО = ПолучитьПризнакВГОСервер(Объект.Контрагент);
	
	Элементы.тВго.Заголовок = ?(ПризнакВГО, "ВГО", "");
	Элементы.СтатьяДР90.Заголовок = ?(ПризнакВГО, "Статья ДР 96 счет", "Статья ДР 90 счет");
	
	Если НЕ ЗначениеЗаполнено(Объект.ПроцентНаценки) Тогда
		Объект.ПроцентНаценки = ?(ПризнакВГО, 30, 0);		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 08.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Реализация ОС");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда // новый документ
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		Объект.ЦФО = Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Управление исполнительное");				
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	//+++АК Susk (Суслин К.В.) 2018.06.01 ИП-00018522	 
	МСФО = АК_ОсновныеСредства.УчетМСФО(Объект.Дата);

	Если МСФО И ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Ответ = Вопрос("Рекомендуется автоматически актуализировать данные по ОС (счета, суммы) перед проведением документа, чтобы исключить искажения в учете."
				+ Символы.ПС + "Сделать это сейчас", РежимДиалогаВопрос.ДаНетОтмена);
				
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
			ПерезаполнитьСуммыТЧСервер();
		КонецЕсли;
	КонецЕсли;
	//---АК Susk (Суслин К.В.) 
		
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	ПараметрыФормы = Новый Структура;
				
	Форма = ПолучитьФорму("Справочник.ОсновныеСредства.Форма.ФормаВыбораУправляемая", ПараметрыФормы, Элементы.ОсновныеСредства);
		
	Форма.Заголовок						= "Основные средства. Подбор";
	Форма.ЗакрыватьПриЗакрытииВладельца	= Истина;
	Форма.ЗакрыватьПриВыборе			= Ложь;
		
	Форма.ОткрытьМодально();
		
КонецПроцедуры

Функция ПолучитьСуммуДокументаСервер()
	
	//+++АК Susk (Суслин К.В.) 2018.05.11 ИП-00018664	 
	//Возврат Объект.ОсновныеСредства.Итог("Сумма");
	Возврат Объект.ОсновныеСредства.Итог("Сумма") + ?(Объект.ВариантРасчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.НДСсверху"), Объект.ОсновныеСредства.Итог("СуммаНДС"), 0);
	//---АК Susk (Суслин К.В.) 
	
КонецФункции

Функция ПолучитьСуммуНДССервер()
	
	Возврат Объект.ОсновныеСредства.Итог("СуммаНДС");
	
КонецФункции

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	Объект.СуммаДокумента = ПолучитьСуммуДокументаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
		
		мДата = ?(НЕ ЗначениеЗаполнено(Объект.Ссылка), ТекущаяДата(), Объект.Дата);
		
		СтрЕд = ПолучитьСтруктурнуюЕдиницу(ВыбранноеЗначение);

		Если СтрЕд <> Неопределено Тогда
			НоваяСтрока = Объект.ОсновныеСредства.Добавить();
			НоваяСтрока.ОсновноеСредство		= ВыбранноеЗначение;		
			НоваяСтрока.СтруктурнаяЕдиница = СтрЕд;						
		КонецЕсли;
		
		СтруктураСумм = ПолучитьОстаткиПоОССервер_Форма(ВыбранноеЗначение);
		
		СтруктураСумм.Свойство("Сумма", НоваяСтрока.ОстаточнаяСтоимость);
		СтруктураСумм.Свойство("СуммаАмортизации", НоваяСтрока.ОстаточнаяАмортизация);
		
		НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
		//НоваяСтрока.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(НоваяСтрока.Сумма,
		//											   ?(Объект.ВариантРасчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.БезНДС"), Ложь, Истина),
		//											   ?(Объект.ВариантРасчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.НДСвТомЧисле"), Истина, Ложь),
		//											   УчетНДС.ПолучитьСтавкуНДС(НоваяСтрока.СтавкаНДС));
		НоваяСтрока.СуммаНДС = ВернутьСуммуНДСТабЧасти(НоваяСтрока.Сумма, НоваяСтрока.СтавкаНДС, Объект.ВариантРасчетаНДС);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураОсновноеСредствоПриИзменении(Элемент)
	
	ТекДанные = Элементы.ОсновныеСредства.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	мДата = ?(НЕ ЗначениеЗаполнено(Объект.Ссылка), ТекущаяДата(), Объект.Дата);
	
	СтрЕд = ПолучитьСтруктурнуюЕдиницу(ТекДанные.ОсновноеСредство);
	ТекДанные.СтруктурнаяЕдиница = СтрЕд;
			
	Если СтрЕд = Неопределено Тогда
		ТекДанные.ОсновноеСредство = Справочники.ОсновныеСредства.ПустаяСсылка();
	КонецЕсли;
	
	СтруктураСумм = ПолучитьОстаткиПоОССервер_Форма(ТекДанные.ОсновноеСредство);
		
	СтруктураСумм.Свойство("Сумма", ТекДанные.ОстаточнаяСтоимость);
	СтруктураСумм.Свойство("СуммаАмортизации", ТекДанные.ОстаточнаяАмортизация);
	
	Если НЕ ЗначениеЗаполнено(ТекДанные.СтавкаНДС) Тогда
		ТекДанные.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
	КонецЕсли;
	
	//ТекДанные.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(ТекДанные.Сумма,
	//												   ?(Объект.ВариантРасчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.БезНДС"), Ложь, Истина),
	//												   ?(Объект.ВариантРасчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.НДСвТомЧисле"), Истина, Ложь),
	//												   УчетНДС.ПолучитьСтавкуНДС(ТекДанные.СтавкаНДС));
	
	ТекДанные.СуммаНДС = ВернутьСуммуНДСТабЧасти(ТекДанные.Сумма, ТекДанные.СтавкаНДС, Объект.ВариантРасчетаНДС);
	
	ТекДанные.Сумма = 0;
	
	ПересчетСуммыСНаценкой(ТекДанные);		
	ПересчитатьСуммуДокумента();
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимость();
	ОбновитьНадписьСуммаДокумента();
	
	//+++АК sils 08.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
	//---АК
КонецПроцедуры

&НаКлиенте
Процедура ОсновныеСредстваСуммаПриИзменении(Элемент)
	
	ТекДанные = Элементы.ОсновныеСредства.ТекущиеДанные;
	
	ТекДанные.СуммаНДС = ВернутьСуммуНДСТабЧасти(ТекДанные.Сумма, ТекДанные.СтавкаНДС, Объект.ВариантРасчетаНДС);
	
	//Процент наценки
	ГолаяСумма = ТекДанные.ОстаточнаяСтоимость - ТекДанные.ОстаточнаяАмортизация;		
	СуммаМинусНДС = ТекДанные.Сумма / 1.18;
	
	Объект.ПроцентНаценки = ?(ГолаяСумма = 0, 0, ((СуммаМинусНДС * 100) / ГолаяСумма) - 100);
	
	ПересчитатьСуммуДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновныеСредстваСтавкаНДСПриИзменении(Элемент)
	
	ТекДанные = Элементы.ОсновныеСредства.ТекущиеДанные;
	
	ТекДанные.СуммаНДС = ВернутьСуммуНДСТабЧасти(ТекДанные.Сумма, ТекДанные.СтавкаНДС, Объект.ВариантРасчетаНДС);
	
	ПересчитатьСуммуДокумента();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВернутьСуммуНДСТабЧасти(Сумма, СтавкаНДС, ВариантРасчета)
	
	УчитыватьНДС = Истина;
	СуммаВключаетНДС = ВариантРасчета = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле;
	
	Возврат УчетНДС.РассчитатьСуммуНДС(Сумма, УчитыватьНДС, СуммаВключаетНДС, УчетНДС.ПолучитьСтавкуНДС(СтавкаНДС));
	
КонецФункции

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	УстановитьВидимость();
	
	Вго = ПолучитьПризнакВГОСервер(Объект.Контрагент);
	
	Если ВГО Тогда
		Объект.СтатьяДР90счет = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("10110");
		Объект.СтатьяДР44 = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("39131");
	Иначе
		Объект.СтатьяДР90счет = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("10110");
		Объект.СтатьяДР44 = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("61014");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновныеСредстваОстаточнаяСтоимостьПриИзменении(Элемент)
	
	ПересчетСуммыСНаценкой(Элементы.ОсновныеСредства.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновныеСредстваОстаточнаяАмортизацияПриИзменении(Элемент)
	
	ПересчетСуммыСНаценкой(Элементы.ОсновныеСредства.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцентНаценкиПриИзменении(Элемент)
	
	Для Каждого Стр Из Объект.ОсновныеСредства Цикл
		ПересчитатьСуммуПоСтроке(Стр);		
	КонецЦикла;
	
	ПересчитатьСуммуДокумента();
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////

&НаСервереБезКонтекста
Функция ПолучитьПризнакВГОСервер(Контрагент)
	
	ПризнакВГО = Документы.РеализацияОС.ВГО(Контрагент);
	
	Возврат ПризнакВГО;
	
КонецФункции

&НаСервереБезКонтекста
Функция РассчитатьАмортизациюНаЛету(СписокОС, Организация, Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ФинансовыйОбороты.Субконто1 КАК ОсновноеСредство,
	               |	ФинансовыйОбороты.СуммаОстаток КАК СуммаОборотПо01,
	               |	ПринятыеКУчетуОССрезПоследних.НачислятьАмортизацию,
	               |	ПринятыеКУчетуОССрезПоследних.СрокАмортизации,
	               |	ПринятыеКУчетуОССрезПоследних.ЭтоОприходование
	               |ПОМЕСТИТЬ Сводная
	               |ИЗ
	               |	РегистрБухгалтерии.Финансовый.Остатки(
	               |			&КонецПериода,
	               |			Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации)
	               |				ИЛИ Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000),
	               |			,
	               |			Организация = &Организация
	               |				И Субконто1 В (&СписокОС)) КАК ФинансовыйОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПринятыеКУчетуОС.СрезПоследних(&КонецПериода, ) КАК ПринятыеКУчетуОССрезПоследних
	               |		ПО ФинансовыйОбороты.Субконто1 = ПринятыеКУчетуОССрезПоследних.ОсновноеСредство
	               |			И ФинансовыйОбороты.Организация = ПринятыеКУчетуОССрезПоследних.Организация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Сводная.ОсновноеСредство,
	               |	Сводная.СуммаОборотПо01 КАК НачальнаяСтоимость,
	               |	Сводная.НачислятьАмортизацию,
	               |	Сводная.СрокАмортизации,
	               |	Сводная.ЭтоОприходование
	               |ПОМЕСТИТЬ ПринятыеКУчетуОССрассчитаннойСтоимостью
	               |ИЗ
	               |	Сводная КАК Сводная
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПринятыеКУчетуОССрезПоследних.ОсновноеСредство,
	               |	ПринятыеКУчетуОССрезПоследних.НачальнаяСтоимость / ПринятыеКУчетуОССрезПоследних.СрокАмортизации КАК СуммаСписанияЗаМесяц,
	               |	ЕСТЬNULL(ПринятыеКУчетуОССрезПоследних.НачальнаяСтоимость, 0) КАК НачальнаяСтоимость,
	               |	ПринятыеКУчетуОССрезПоследних.СрокАмортизации,
	               |	ПринятыеКУчетуОССрезПоследних.ЭтоОприходование
	               |ПОМЕСТИТЬ втПринятыеКУчету
	               |ИЗ
	               |	ПринятыеКУчетуОССрассчитаннойСтоимостью КАК ПринятыеКУчетуОССрезПоследних
	               |ГДЕ
	               |	ПринятыеКУчетуОССрезПоследних.НачислятьАмортизацию
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ФинансовыйОстатки.Субконто1 КАК ОсновноеСредство,
	               |	ФинансовыйОстатки.СуммаОстаток КАК Сумма,
	               |	ФинансовыйОстатки.Счет
	               |ПОМЕСТИТЬ втСтоимостьОС
	               |ИЗ
	               |	РегистрБухгалтерии.Финансовый.Остатки(
	               |			&ГраницаНачала,
	               |			Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации)
	               |				ИЛИ Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000),
	               |			,
	               |			Субконто1 В
	               |				(ВЫБРАТЬ
	               |					втПринятыеКУчету.ОсновноеСредство
	               |				ИЗ
	               |					втПринятыеКУчету)) КАК ФинансовыйОстатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втПринятыеКУчету.ОсновноеСредство,
	               |	СУММА(ВЫБОР
	               |			КОГДА ВЫБОР
	               |					КОГДА втСтоимостьОС.Сумма > 0
	               |						ТОГДА втСтоимостьОС.Сумма / втПринятыеКУчету.СрокАмортизации
	               |					ИНАЧЕ втПринятыеКУчету.СуммаСписанияЗаМесяц
	               |				КОНЕЦ + НачисленноАмортизации.Сумма > втСтоимостьОС.Сумма
	               |				ТОГДА втСтоимостьОС.Сумма - НачисленноАмортизации.Сумма
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА втСтоимостьОС.Сумма > 0
	               |						ТОГДА втСтоимостьОС.Сумма / втПринятыеКУчету.СрокАмортизации
	               |					ИНАЧЕ втПринятыеКУчету.СуммаСписанияЗаМесяц
	               |				КОНЕЦ
	               |		КОНЕЦ) КАК Сумма,
	               |	втСтоимостьОС.Счет,
	               |	втПринятыеКУчету.ЭтоОприходование
	               |ИЗ
	               |	втПринятыеКУчету КАК втПринятыеКУчету
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ФинансовыйДвиженияССубконто.СубконтоКт1 КАК ОсновноеСредство,
	               |			СУММА(ЕСТЬNULL(ФинансовыйДвиженияССубконто.Сумма, 0)) КАК Сумма
	               |		ИЗ
	               |			РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
	               |					,
	               |					&ДатаНачала,
	               |					СубконтоКт1 В
	               |							(ВЫБРАТЬ
	               |								втПринятыеКУчету.ОсновноеСредство
	               |							ИЗ
	               |								втПринятыеКУчету)
	               |						И (СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредств)
	               |							ИЛИ СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредствДо100000)),
	               |					,
	               |					) КАК ФинансовыйДвиженияССубконто
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ФинансовыйДвиженияССубконто.СубконтоКт1) КАК НачисленноАмортизации
	               |		ПО втПринятыеКУчету.ОсновноеСредство = НачисленноАмортизации.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостьОС КАК втСтоимостьОС
	               |		ПО втПринятыеКУчету.ОсновноеСредство = втСтоимостьОС.ОсновноеСредство
	               |ГДЕ
	               |	ЕСТЬNULL(втПринятыеКУчету.НачальнаяСтоимость, 0) > ЕСТЬNULL(НачисленноАмортизации.Сумма, 0)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втПринятыеКУчету.ОсновноеСредство,
	               |	втСтоимостьОС.Счет,
	               |	втПринятыеКУчету.ЭтоОприходование";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	
	ГраницаНачала = Новый Граница(Началомесяца(Дата),ВидГраницы.Включая);
	Запрос.УстановитьПараметр("ГраницаНачала", ГраницаНачала);

	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	
	Граница = Новый Граница(НачалоМесяца(Дата),ВидГраницы.Исключая);	
	Запрос.УстановитьПараметр("КонецПериода", Граница); 
	
	Возврат Запрос.Выполнить().Выгрузить();	
	
КонецФункции

&НаСервере
Функция ПолучитьСтруктурнуюЕдиницу(ОС)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СостояниеОССрезПоследних.ОсновноеСредство,
	               |	СостояниеОССрезПоследних.Местоположение,
	               |	СостояниеОССрезПоследних.Списано
	               |ИЗ
	               |	РегистрСведений.СостояниеОС.СрезПоследних(&Период, ) КАК СостояниеОССрезПоследних
	               |ГДЕ
	               |	СостояниеОССрезПоследних.ОсновноеСредство = &СписокОС";
	
	Запрос.УстановитьПараметр("СписокОС", ОС);	
	
	Если Объект.Ссылка.Пустая() Тогда
		Запрос.УстановитьПараметр("Период", Объект.Дата);
	Иначе	
		Гр = Новый Граница(Объект.Ссылка.МоментВремени(), ВидГраницы.Исключая);
		Запрос.УстановитьПараметр("Период", Гр);
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Если Выборка.Списано Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Основное средство: " + Строка(Выборка.ОсновноеСредство) + " с инв. номером: " + Строка(Выборка.ОсновноеСредство.ИнвентарныйНомер) + " - уже списано, реализация невозможна!");
			Возврат Неопределено;
		КонецЕсли;
		
		Возврат Выборка.Местоположение;	
		
	КонецЕсли;	
	
	Возврат Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	
КонецФункции

&НаКлиенте
Процедура ПересчитатьСуммуПоСтроке(ТекДанные)
	
	ГолаяСумма = ТекДанные.ОстаточнаяСтоимость - ТекДанные.ОстаточнаяАмортизация;		
	ПромСумма = ГолаяСумма + ((ГолаяСумма * Объект.ПроцентНаценки) / 100);
	СуммаСНаценкой = ПромСумма * 1.18;		
	ТекДанные.Сумма = СуммаСНаценкой;
		
	Если НЕ ЗначениеЗаполнено(ТекДанные.СтавкаНДС) Тогда
		ТекДанные.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
	КонецЕсли;
	
	//ТекДанные.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(ТекДанные.Сумма,
	//												   ?(Объект.ВариантРасчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.БезНДС"), Ложь, Истина),
	//												   ?(Объект.ВариантРасчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.НДСвТомЧисле"), Истина, Ложь),
	//												   УчетНДС.ПолучитьСтавкуНДС(ТекДанные.СтавкаНДС));
													   
	ТекДанные.СуммаНДС = ВернутьСуммуНДСТабЧасти(ТекДанные.Сумма, ТекДанные.СтавкаНДС, Объект.ВариантРасчетаНДС);													   

КонецПроцедуры

&НаКлиенте
Процедура ПересчетСуммыСНаценкой(ТекДанные)
	
	Если ТекДанные.ОстаточнаяСтоимость - ТекДанные.ОстаточнаяАмортизация <> 0 Тогда
		
		Ответ = Вопрос("Пересчитать сумму с учетом наценки?", РежимДиалогаВопрос.ДаНет);
		
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		
		Если Объект.ПроцентНаценки = 0 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не заполнен процент наценки, пересчет невозможен!");
			Возврат;
		КонецЕсли;
		
		ПересчитатьСуммуПоСтроке(ТекДанные);
		
	Иначе
		
		ТекДанные.СуммаНДС = 0;
															   
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = ПолучитьСуммуДокументаСервер();
	СуммаНДС = ПолучитьСуммуНДССервер();
	
	ОбновитьНадписьСуммаДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНадписьСуммаДокумента()
	
	Если Объект.ВариантРасчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.НДСвТомЧисле") Тогда
		НадписьНДС = "НДС (в т. ч.): ";
	ИначеЕсли Объект.ВариантРасчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.НДСсверху") Тогда
		НадписьНДС = "НДС (сверху): ";
	ИначеЕсли Объект.ВариантРасчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.БезНДС")
		ИЛИ Объект.ВариантРасчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.ПустаяСсылка") Тогда
		НадписьНДС = "Без НДС";
	КонецЕсли;
	
	СуммаНДС = ПолучитьСуммуНДССервер();
	
	Элементы.СуммаДокумента.Заголовок = "Сумма документа: " + Строка(Объект.СуммаДокумента) + ", " + НадписьНДС + ?(СуммаНДС = 0, "", Строка(СуммаНДС)); 
	
КонецПроцедуры


&НаКлиенте
Процедура ВариантРасчетаНДСПриИзменении(Элемент)
	
	Для Каждого Стр Из Объект.ОсновныеСредства Цикл
		//Стр.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(Стр.Сумма,
		//											   ?(Объект.ВариантРасчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.БезНДС"), Ложь, Истина),
		//											   ?(Объект.ВариантРасчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.НДСвТомЧисле"), Истина, Ложь),
		//											   УчетНДС.ПолучитьСтавкуНДС(Стр.СтавкаНДС));
		
		Стр.СуммаНДС = ВернутьСуммуНДСТабЧасти(Стр.Сумма, Стр.СтавкаНДС, Объект.ВариантРасчетаНДС);
		
		Если Объект.ВариантРасчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРасчетаНДС.БезНДС") Тогда
			Стр.СтавкаНДС = ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС");
			Стр.СуммаНДС = 0;
		КонецЕсли;
		
	КонецЦикла;
	
	//+++АК Susk (Суслин К.В.) 2018.05.11 ИП-00018664	   
	ПересчитатьСуммуДокумента();
	//ОбновитьНадписьСуммаДокумента();
	//---АК Susk (Суслин К.В.) 
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьСуммыТЧ(Команда)
	
	ПерезаполнитьСуммыТЧСервер();
	
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьСуммыТЧСервер()
	
	КопияТаблОС = Объект.ОсновныеСредства.Выгрузить(, "ОсновноеСредство");
	СписокОС = КопияТаблОС.ВыгрузитьКолонку("ОсновноеСредство");
	
	ТаблицаОстатковСумм = ПолучитьОстаткиПоОССервер_Форма(СписокОС);
	ТаблицаОстатковСумм.Индексы.Добавить("ОС");
	
	Для Каждого Стр Из Объект.ОсновныеСредства Цикл
		НайдСтр = ТаблицаОстатковСумм.Найти(Стр.ОсновноеСредство, "ОС");
		
		Если Не НайдСтр = Неопределено Тогда
			Стр.ОстаточнаяСтоимость = НайдСтр.ОстатокПоОС;
			Стр.ОстаточнаяАмортизация = НайдСтр.ОстатокАмортизации;
			Стр.НЕПринятоКУчету = НайдСтр.НеПринятоКУчету;
		Иначе
			Стр.ОстаточнаяСтоимость = 0;
			Стр.ОстаточнаяАмортизация = 0;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

//+++АК Susk (Суслин К.В.) б/н
&НаКлиенте
Процедура ВыгрузитьВБП(Команда)
	
	Если Параметры.Ключ.Пустая() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Сначала нужно записать документ");
		Возврат;
	КонецЕсли;	
	
	Если ЭтаФорма.Модифицированность Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Документ был изменен. Сначала нужно записать документ");
		Возврат;
	КонецЕсли;
	
	Если Объект.Дата < Дата(2018, 1, 1) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Дата документа меньше 1 января 2018 года. Выгружен не будет!");
		Возврат;
	КонецЕсли;
	
	ВыгрузитьВБПСервер();
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) б/н
&НаСервере
Процедура ВыгрузитьВБПСервер()
	
	ОбменСБП2_0.ВыгрузитьДокументВБП("РеализацияОС", "РеализацияОС", Объект.Ссылка); 
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.05.29 ИП-00018522
&НаСервере
Функция ПолучитьОстаткиПоОССервер_Форма(СписокОС)
	
	Об = РеквизитФормыВЗначение("Объект");
	ТаблицаОстатков = Об.ПолучитьОстаткиПоОССервер(СписокОС);
	ЗначениеВРеквизитФормы(Об, "Объект");
	
	Возврат ТаблицаОстатков;

КонецФункции

//+++АК Susk (Суслин К.В.) 2018.05.29 ИП-00018522
&НаКлиенте
Процедура ОсновныеСредстваПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.НеПринятоКУчету = Ложь;
		Элемент.ТекущиеДанные.ОстаточнаяСтоимость = 0;
	КонецЕсли;
	
КонецПроцедуры
