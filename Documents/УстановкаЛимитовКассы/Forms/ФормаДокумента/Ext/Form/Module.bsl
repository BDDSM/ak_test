
//********************************************************

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	если (не значениеЗаполнено(объект.ссылка)) тогда
		объект.Дата = текущаяДата();
		привестиДату();
	конецЕсли;
	датаСтарая = объект.Дата;
		
	ЛимитГруппыРазвития = константы.ЛимитГруппыРазвития.Получить();
	
КонецПроцедуры


//********************************************************

&НаКлиенте
Процедура ДействиеЗаполнить()
	
	если (не ЗначениеЗаполнено(объект.организация)) тогда
		предупреждение("Не выбрана организация");
		возврат;
	конецЕсли;
	
	//---
	состояние("Заполнение таблицы");
	
	//---	
	описаниеОшибки = "";
	если (не ЗаполнитьНаСервере(описаниеОшибки)) тогда
		предупреждение(описаниеОшибки);
	конецЕсли;
	
	
	//---
	состояние("");

КонецПроцедуры


//********************************************************

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	//---
	если (не началоМесяца(объект.дата) = началоМесяца(ДатаСтарая)) тогда
		ответ = вопрос("При изменении квартала документ будет перезаполнен. Продолжить?", РежимДиалогаВопрос.ДаНетОтмена);
		если (не ответ = КодВозвратаДиалога.Да) тогда
			объект.Дата = датаСтарая;
			возврат;
		конецЕсли;

		привестиДату();
		ДатаСтарая = объект.Дата;
		ДействиеЗаполнить();
	иначе
		привестиДату();				
	конецЕсли;	
	
КонецПроцедуры


//********************************************************

процедура привестиДату()
	объект.дата = КонецМесяца(объект.дата);
	СтрокаМесяц = формат(объект.дата, "ДФ='MMMM yyyy ""г.""'");
	
	началоКвартала = ДобавитьМесяц(объект.дата, -2);
	строкаКвартал = формат(началоКвартала, "ДФ='MMMM'");
	если (месяц(объект.дата) < 3) тогда
		строкаКвартал = строкаКвартал + " " + формат(началоКвартала, "ДФ='yyyy'");
	конецЕсли;
	строкаКвартал = строкаКвартал + " - " + формат(КонецМесяца(объект.дата), "ДФ='MMMM yyyy ""г.""'");

	
конецПроцедуры


//********************************************************

&НаКлиенте
Процедура ПриОткрытии(Отказ)
КонецПроцедуры


//********************************************************

&наСервере
функция заполнитьНаСервере(описаниеОшибки,ТолькоНовые = Ложь)
	
	
	//---
	документОбъект = РеквизитФормыВЗначение("Объект");
	заполнено = документОбъект.заполнитьТаблицу(описаниеОшибки,ТолькоНовые);
	
	//---
	ЗначениеВРеквизитФормы(документОбъект, "Объект");
	возврат заполнено;
	
конецФункции



///////////////////////////////////////////////////////////
// Редактирование табличной части


//********************************************************

&НаКлиенте
Процедура РасчетЛимитовОтработаноЗаМесяцПриИзменении(Элемент)
	рассчитатьСреднийОборот(0);
КонецПроцедуры


//********************************************************

&НаКлиенте
Процедура РасчетЛимитовНаличныеЗаМесяцПриИзменении(Элемент)
	рассчитатьСреднийОборот(0);
КонецПроцедуры


//********************************************************

&НаКлиенте
Процедура РасчетЛимитовСреднийОборотЗаМесяцПриИзменении(Элемент)
	рассчитатьОборотПоСреднему(0);
	рассчитатьЛимит(0);
КонецПроцедуры


//********************************************************

&НаКлиенте
Процедура РасчетЛимитовОтработаноЗаКварталПриИзменении(Элемент)
	рассчитатьСреднийОборот(0);
КонецПроцедуры


//********************************************************

&НаКлиенте
Процедура РасчетЛимитовНаличныеЗаКварталПриИзменении(Элемент)
	рассчитатьСреднийОборот(0);
КонецПроцедуры


//********************************************************

&НаКлиенте
Процедура РасчетЛимитовСреднийОборотЗаКварталПриИзменении(Элемент)
	рассчитатьОборотПоСреднему(1);
	рассчитатьЛимит(1);
КонецПроцедуры


//********************************************************

&НаКлиенте
Процедура РасчетЛимитовЛимитЗаМесяцПриИзменении(Элемент)
	рассчитатьЛимитИтоговый();
КонецПроцедуры


//********************************************************

&НаКлиенте
Процедура РасчетЛимитовЛимитЗаКварталПриИзменении(Элемент)
	рассчитатьЛимитИтоговый();
КонецПроцедуры


//********************************************************

&НаКлиенте
Процедура РасчетЛимитовВГруппеРазвитияПриИзменении(Элемент)
	рассчитатьЛимитИтоговый();
КонецПроцедуры


//********************************************************

&НаКлиенте
процедура рассчитатьЛимитИтоговый()
	текущиеДанные = элементы.РасчетЛимитов.ТекущиеДанные;
	
	если (текущиеДанные.вГруппеРазвития) тогда
		текущиеДанные.лимитИтоговый = ЛимитГруппыРазвития;
		
	иначе
		если (текущиеДанные.лимитЗаМесяц > текущиеДанные.лимитЗаКвартал) тогда
			текущиеДанные.лимитИтоговый = текущиеДанные.лимитЗаМесяц;
			текущиеДанные.периодИтоговый = 0;
		иначе
			текущиеДанные.лимитИтоговый = текущиеДанные.лимитЗаКвартал;
			текущиеДанные.периодИтоговый = 1;
		конецЕсли;
	конецЕсли;
конецПроцедуры


//********************************************************

&НаКлиенте
процедура рассчитатьЛимит(период)
	текущиеДанные = элементы.РасчетЛимитов.ТекущиеДанные;
	приставка = приставка(период);

	текущиеДанные["лимитЗа" + приставка] = текущиеДанные["среднийОборотЗа" + приставка] * 2;
	рассчитатьЛимитИтоговый();
конецПроцедуры


//********************************************************

&НаКлиенте
процедура рассчитатьСреднийОборот(период)
	текущиеДанные = элементы.РасчетЛимитов.ТекущиеДанные;
	приставка = приставка(период);
	
	если (текущиеДанные["отработаноЗа" + приставка] > 0) тогда
		текущиеДанные["среднийОборотЗа" + приставка] = текущиеДанные["наличныеЗа" + приставка] / текущиеДанные["отработаноЗа" + приставка];
	иначе
		текущиеДанные["среднийОборотЗа" + приставка] = 0;
	конецЕсли;
	
	рассчитатьЛимит(период);
конецПроцедуры


//********************************************************

&НаКлиенте
процедура рассчитатьОборотПоСреднему(период)
	текущиеДанные = элементы.РасчетЛимитов.ТекущиеДанные;
	приставка = приставка(период);
	
	если (текущиеДанные["отработаноЗа" + приставка] > 0) тогда
		текущиеДанные["наличныеЗа" + приставка] = текущиеДанные["среднийОборотЗа" + приставка] * текущиеДанные["отработаноЗа" + приставка];
	конецЕсли;
	
конецПроцедуры


//********************************************************

&НаКлиенте
функция приставка(период)
	если (период=0) тогда
		возврат "Месяц";
	иначе
		возврат "Квартал";
	конецЕсли;
конецФункции


&НаКлиенте
Процедура РасчетЛимитовКоличествоДнейМеждуИнкассациями1ПриИзменении(Элемент)
	
	ТекСтрока = Элементы.РасчетЛимитов.ТекущиеДанные; 
	
	ПерерасчитатьЛимитПоСтроке(ТекСтрока, ТекСтрока.КоличествоДнейМеждуИнкассациями);
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоДнейМеждуИнкассациямиПриИзменении(Элемент)
	
	Для каждого ТекСтрока Из Объект.РасчетЛимитов Цикл
	
		ПерерасчитатьЛимитПоСтроке(ТекСтрока,Объект.КоличествоДнейМеждуИнкассациями);	
	
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ПерерасчитатьЛимитПоСтроке(ТекСтрока,КоличествоДнейМеждуИнкассациями)

	ТекСтрока.лимитЗаМесяц = ТекСтрока.среднийОборотЗаМесяц *КоличествоДнейМеждуИнкассациями;
	
	ТекСтрока.лимитЗаКвартал = ТекСтрока.среднийОборотЗаКвартал *КоличествоДнейМеждуИнкассациями;
	
	ТекСтрока.КоличествоДнейМеждуИнкассациями = КоличествоДнейМеждуИнкассациями;
	
	если Не (ТекСтрока.вГруппеРазвития=истина) Или (ТекСтрока.лимитЗаМесяц > лимитГруппыРазвития Или  ТекСтрока.лимитЗаКвартал > лимитГруппыРазвития ) тогда

		если (ТекСтрока.лимитЗаМесяц > ТекСтрока.лимитЗаКвартал) тогда
			
			ТекСтрока.лимитИтоговый = Цел(ТекСтрока.лимитЗаМесяц);

		иначе
			
			ТекСтрока.лимитИтоговый = Цел(ТекСтрока.лимитЗаКвартал);

		конецЕсли;
		
	конецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗначениемИзШапки(Команда)
	
	Для каждого ТекСтрока Из Объект.РасчетЛимитов Цикл
	
		ПерерасчитатьЛимитПоСтроке(ТекСтрока,Объект.КоличествоДнейМеждуИнкассациями);	
	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитТолькоНовымиТочками(Команда)
	если (не ЗначениеЗаполнено(объект.организация)) тогда
		предупреждение("Не выбрана организация");
		возврат;
	конецЕсли;
	
	//---
	состояние("Заполнение таблицы");
	
	//---	
	описаниеОшибки = "";
	если (не ЗаполнитьНаСервере(описаниеОшибки,Истина)) тогда
		предупреждение(описаниеОшибки);
	конецЕсли;
	
	
	//---
	состояние("");
КонецПроцедуры

&НаКлиенте
Процедура ПометитьВыгрузку(Команда)
	УстановитьСнятьФлаги("ВыгружатьВБухгалтерию",Истина)
КонецПроцедуры

&НаКлиенте
Процедура ПометитьПечать(Команда)
	УстановитьСнятьФлаги("Печатать",Истина)
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыгрузку(Команда)
	УстановитьСнятьФлаги("ВыгружатьВБухгалтерию",Ложь)
КонецПроцедуры

&НаКлиенте
Процедура СнятьПечать(Команда)
	УстановитьСнятьФлаги("Печатать",Ложь)
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьФлаги(ИмяРеквизита,Значение)

	Для каждого ТекСтрока Из Объект.РасчетЛимитов Цикл
	
		ТекСтрока[ИмяРеквизита] = Значение;	
	
	КонецЦикла;	

КонецПроцедуры // УстановитьСнятьФлаги()



