

//********************************************************

функция подключениеКБухгалтерии(описаниеОшибки)
	
	//---
	СтрокаПодключения = ПолныеПрава.ПолучитьСтрокуПодключения_Бух();
	
	// Отладка
	//СтрокаПодключения="File=""E:\Users\belm\buh_corp""; Usr=""Любимов (администратор)""; Pwd=""""";
	
	v82COMОбъект = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Бух() + ".COMConnector");
	Попытка
		БухКорп = v82COMОбъект.Connect(СтрокаПодключения);
		ПодключениеУстановлено=Истина;
	Исключение
		ПодключениеУстановлено=Ложь;
		описаниеОшибки = "Не удалось подключитьс к базе бухгалтерии";
		Возврат неопределено;
	КонецПопытки;
	
	возврат БухКорп;
	
конецФункции

//********************************************************

&наСервере
функция заполнитьТаблицу(описаниеОшибки,ТолькоНовые) экспорт
	
	//---
	если (не значениеЗаполнено(Организация)) тогда
		описаниеОшибки = "Не выбрана организация";
		возврат ложь;
	конецЕсли;
	
	//---
	оборотыБух = получитьОборотыБух(описаниеОшибки);
	если (оборотыБух = неопределено) тогда
		возврат ложь;;
	конецЕсли;
	
	//---
	РасчетЛимитов.Очистить();
	
	//---
	запрос = новый запрос;
	запрос.Текст =
	"ВЫБРАТЬ
	|	таблицаОборотыБух.наименование,
	|	таблицаОборотыБух.код,
	|	таблицаОборотыБух.префикс,
	|	таблицаОборотыБух.оборотыКвартал,
	|	таблицаОборотыБух.оборотыМесяц
	|ПОМЕСТИТЬ ВТ_ОборотыБух
	|ИЗ
	|	&таблицаОборотыБух КАК таблицаОборотыБух
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтруктурныеЕдиницы.Ссылка КАК ТорговаяТочка,
	|	СтруктурныеЕдиницы.НомерТочки,
	|	ЦФОСтруктурныхЕдиницСрезПоследних.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО = &ГруппаРазвития
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ГруппаРазвития
	|ПОМЕСТИТЬ ВТ_ТорговыеТочки
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&конецПериода, ) КАК ЦФОСтруктурныхЕдиницСрезПоследних
	|		ПО (ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница = СтруктурныеЕдиницы.Ссылка)
	|ГДЕ
	|	ЦФОСтруктурныхЕдиницСрезПоследних.Организация = &организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛистУчета.Дата КАК Дата,
	|	ЛистУчета.ТорговаяТочка КАК ТорговаяТочка
	|ПОМЕСТИТЬ ВТ_ЛистыУчета
	|ИЗ
	|	Документ.ЛистУчета КАК ЛистУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ТорговыеТочки КАК ВТ_ТорговыеТочки
	|		ПО ЛистУчета.ТорговаяТочка = ВТ_ТорговыеТочки.ТорговаяТочка
	|ГДЕ
	|	ЛистУчета.Проведен = ИСТИНА
	|	И ЛистУчета.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЛистыУчета.ТорговаяТочка,
	|	МИНИМУМ(ВТ_ЛистыУчета.Дата) КАК Дата
	|ПОМЕСТИТЬ ВТ_ДатыПервогоОтчета
	|ИЗ
	|	ВТ_ЛистыУчета КАК ВТ_ЛистыУчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ЛистыУчета.ТорговаяТочка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ_ЛистыУчета.Дата) КАК КоличествоДней,
	|	НАЧАЛОПЕРИОДА(ВТ_ЛистыУчета.Дата, МЕСЯЦ) КАК Месяц,
	|	ВТ_ЛистыУчета.ТорговаяТочка КАК ТорговаяТочка
	|ПОМЕСТИТЬ ВТ_КоличествоДнейПоМесяцам
	|ИЗ
	|	ВТ_ЛистыУчета КАК ВТ_ЛистыУчета
	|ГДЕ
	|	ВТ_ЛистыУчета.Дата МЕЖДУ &началоПериода И &конецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ВТ_ЛистыУчета.Дата, МЕСЯЦ),
	|	НАЧАЛОПЕРИОДА(ВТ_ЛистыУчета.Дата, КВАРТАЛ),
	|	ВТ_ЛистыУчета.ТорговаяТочка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_КоличествоДнейПоМесяцам.ТорговаяТочка,
	|	СУММА(ВТ_КоличествоДнейПоМесяцам.КоличествоДней) КАК КоличествоДнейКвартал,
	|	ЕСТЬNULL(ВТ_КоличествоДнейПоМесяцамПоследний.КоличествоДней, 0) КАК КоличествоДнейМесяц
	|ПОМЕСТИТЬ ВТ_КолчествоДнейИтоговое
	|ИЗ
	|	ВТ_КоличествоДнейПоМесяцам КАК ВТ_КоличествоДнейПоМесяцам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КоличествоДнейПоМесяцам КАК ВТ_КоличествоДнейПоМесяцамПоследний
	|		ПО ВТ_КоличествоДнейПоМесяцам.ТорговаяТочка = ВТ_КоличествоДнейПоМесяцамПоследний.ТорговаяТочка
	|			И (ВТ_КоличествоДнейПоМесяцамПоследний.Месяц = НАЧАЛОПЕРИОДА(&конецПериода, МЕСЯЦ))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_КоличествоДнейПоМесяцам.ТорговаяТочка,
	|	ЕСТЬNULL(ВТ_КоличествоДнейПоМесяцамПоследний.КоличествоДней, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТорговыеТочки.ТорговаяТочка,
	|	ВТ_ТорговыеТочки.НомерТочки,
	|	ВТ_ТорговыеТочки.ГруппаРазвития,
	|	ЕСТЬNULL(ВТ_КолчествоДнейИтоговое.КоличествоДнейКвартал, 0) КАК КоличествоДнейКвартал,
	|	ЕСТЬNULL(ВТ_КолчествоДнейИтоговое.КоличествоДнейМесяц, 0) КАК КоличествоДнейМесяц,
	|	ВТ_ДатыНачала.Дата КАК ДатаПервогоОтчета
	|ПОМЕСТИТЬ ВТ_ДанныеФинансы
	|ИЗ
	|	ВТ_ТорговыеТочки КАК ВТ_ТорговыеТочки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_КолчествоДнейИтоговое КАК ВТ_КолчествоДнейИтоговое
	|		ПО ВТ_ТорговыеТочки.ТорговаяТочка = ВТ_КолчествоДнейИтоговое.ТорговаяТочка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДатыПервогоОтчета КАК ВТ_ДатыНачала
	|		ПО ВТ_ТорговыеТочки.ТорговаяТочка = ВТ_ДатыНачала.ТорговаяТочка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеФинансы.ТорговаяТочка КАК ТорговаяТочка,
	|	ВТ_ДанныеФинансы.ГруппаРазвития,
	|	ВТ_ДанныеФинансы.КоличествоДнейКвартал,
	|	ВТ_ДанныеФинансы.КоличествоДнейМесяц,
	|	ВТ_ДанныеФинансы.ДатаПервогоОтчета КАК ДатаПервогоОтчета,
	|	ЕСТЬNULL(ВТ_ОборотыБух.оборотыКвартал, 0) КАК ОборотыКвартал,
	|	ЕСТЬNULL(ВТ_ОборотыБух.оборотыМесяц, 0) КАК ОборотыМесяц,
	|	ЕСТЬNULL(ЦФОСтруктурныхЕдиницСрезПервых.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ПереходИзГруппыРазвития
	|ПОМЕСТИТЬ Выборка
	|ИЗ
	|	ВТ_ДанныеФинансы КАК ВТ_ДанныеФинансы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПервых(
	|				&КонецПериода,
	|				ЦФО <> &ГруппаРазвития
	|					И СтруктурнаяЕдиница В
	|						(ВЫБРАТЬ
	|							ВТ_ДанныеФинансы.ТорговаяТочка
	|						ИЗ
	|							ВТ_ДанныеФинансы КАК ВТ_ДанныеФинансы)
	|					И Организация = &Организация) КАК ЦФОСтруктурныхЕдиницСрезПервых
	|		ПО ВТ_ДанныеФинансы.ТорговаяТочка = ЦФОСтруктурныхЕдиницСрезПервых.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОборотыБух КАК ВТ_ОборотыБух
	|		ПО ВТ_ДанныеФинансы.НомерТочки = ВТ_ОборотыБух.префикс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выборка.ТорговаяТочка,
	|	Выборка.ГруппаРазвития,
	|	Выборка.КоличествоДнейКвартал,
	|	Выборка.КоличествоДнейМесяц,
	|	Выборка.ДатаПервогоОтчета КАК ДатаПервогоОтчета,
	|	Выборка.ОборотыКвартал,
	|	Выборка.ОборотыМесяц,
	|	Выборка.ПереходИзГруппыРазвития
	|ИЗ
	|	Выборка КАК Выборка
	|ГДЕ
	|	Выборка.ТорговаяТочка.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|	И (Выборка.ДатаПервогоОтчета МЕЖДУ &НачалоМесяца И &КонецМесяца
	|			ИЛИ Выборка.ПереходИзГруппыРазвития МЕЖДУ &НачалоМесяца И &КонецМесяца)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Выборка.ТорговаяТочка.НомерТочки
	|ИТОГИ
	|	МИНИМУМ(ДатаПервогоОтчета)
	|ПО
	|	ОБЩИЕ";
	
	запрос.УстановитьПараметр("НачалоПериода", ДобавитьМесяц(началоМесяца(дата),-2));
	запрос.УстановитьПараметр("КонецПериода", КонецМесяца(дата));
	запрос.УстановитьПараметр("Организация", Организация);
	запрос.УстановитьПараметр("ТаблицаОборотыБух", оборотыБух);
	запрос.УстановитьПараметр("ГруппаРазвития", справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_88"));
	
	//---
	лимитГруппыРазвития = константы.ЛимитГруппыРазвития.Получить();
	
	Если ТолькоНовые Тогда
		запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(дата));
		запрос.УстановитьПараметр("КонецМесяца", КонецМесяца(дата));
	Иначе
		СтрокаПоиска = 	"И (Выборка.ДатаПервогоОтчета МЕЖДУ &НачалоМесяца И &КонецМесяца
		|			ИЛИ Выборка.ПереходИзГруппыРазвития МЕЖДУ &НачалоМесяца И &КонецМесяца)";
		
		запрос.Текст = СтрЗаменить(запрос.Текст,СтрокаПоиска,"");
		
	КонецЕсли;
	
	Результат = запрос.Выполнить();
	
	выборкаОбщийИтог =Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	выборкаОбщийИтог.Следующий();
	
	выборка =выборкаОбщийИтог.Выбрать();
	
	пока (выборка.Следующий()) цикл
		ОбойтиСтрокуВыборки(выборка,выборкаОбщийИтог,лимитГруппыРазвития);	
	конецЦикла;
	
	УпрРозницей = оборотыБух.Найти("УправлениеРозницей");
	
	Если УпрРозницей <> Неопределено Тогда
	
		ОбойтиСтрокуВыборки(УпрРозницей,выборкаОбщийИтог,лимитГруппыРазвития);	
	
	КонецЕсли;
	
	возврат истина;
	
конецФункции

Процедура ОбойтиСтрокуВыборки(выборка,выборкаОбщийИтог,лимитГруппыРазвития)

		// Запрос дает все существующие подразделения. 
		// Здесь можно изменить условия попадания данных в таблицу
		//---
		// Берем те подразделения, по которым есть какие-нибудь данные - хоть по выручке, хоть по дням
		если (выборка.количествоДнейМесяц + выборка.количествоДнейКвартал + выборка.ОборотыМесяц + выборка.ОборотыКвартал = 0) тогда
			Возврат;
		конецЕсли;
		
		//---
		новаяСтрока = РасчетЛимитов.Добавить();
		
		Если Не ЗначениеЗаполнено(выборка.торговаяТочка) Тогда // Тогда УправлениеРозницей
			
			ВыборкаУправлениеРозницей = ПолучитьРезультатЗапроса_ДнейОтработано(); 
			
			ЗаполнитьЗначенияСвойств(новаяСтрока,ВыборкаУправлениеРозницей);
			
			новаяСтрока.датаПервогоОтчета = выборкаОбщийИтог.датаПервогоОтчета;	
			
			новаяСтрока.подразделение = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("000000003");
			
		Иначе
			
			новаяСтрока.вГруппеРазвития = выборка.группаРазвития;
			новаяСтрока.подразделение = выборка.торговаяТочка;
			новаяСтрока.датаПервогоОтчета = выборка.датаПервогоОтчета;		
			новаяСтрока.отработаноЗаМесяц = выборка.КоличествоДнейМесяц;
			новаяСтрока.отработаноЗаКвартал = выборка.КоличествоДнейКвартал;
			новаяСтрока.ПереходИзГруппыРазвития = выборка.ПереходИзГруппыРазвития;
			
		КонецЕсли;
		
		
		новаяСтрока.наличныеЗаМесяц = выборка.ОборотыМесяц;
		новаяСтрока.наличныеЗаКвартал = выборка.ОборотыКвартал;
		новаяСтрока.среднийОборотЗаМесяц = ?(новаяСтрока.отработаноЗаМесяц=0,0,новаяСтрока.наличныеЗаМесяц/новаяСтрока.отработаноЗаМесяц);
		новаяСтрока.среднийОборотЗаКвартал = ?(новаяСтрока.отработаноЗаКвартал=0,0,новаяСтрока.наличныеЗаКвартал/новаяСтрока.отработаноЗаКвартал);
		новаяСтрока.КоличествоДнейМеждуИнкассациями = ?(ЗначениеЗаполнено(КоличествоДнейМеждуИнкассациями),КоличествоДнейМеждуИнкассациями,1);
		новаяСтрока.лимитЗаМесяц = новаяСтрока.среднийОборотЗаМесяц * новаяСтрока.КоличествоДнейМеждуИнкассациями;
		новаяСтрока.лимитЗаКвартал = новаяСтрока.среднийОборотЗаКвартал * новаяСтрока.КоличествоДнейМеждуИнкассациями;
		
		если (новаяСтрока.вГруппеРазвития=истина) тогда
			
			новаяСтрока.датаПриказа = началоДня(новаяСтрока.датаПервогоОтчета)-1;	
			
			Если новаяСтрока.лимитЗаМесяц < лимитГруппыРазвития Тогда
				новаяСтрока.лимитИтоговый = лимитГруппыРазвития;
			Иначе
				если (новаяСтрока.лимитЗаМесяц > новаяСтрока.лимитЗаКвартал) тогда
					новаяСтрока.лимитИтоговый = Цел(новаяСтрока.лимитЗаМесяц);
					новаяСтрока.периодИтоговый = 0;
				иначе
					новаяСтрока.лимитИтоговый = Цел(новаяСтрока.лимитЗаКвартал);
					новаяСтрока.периодИтоговый = 1;
				конецЕсли;
			КонецЕсли;
			
		иначе
			новаяСтрока.датаПриказа = конецДня(дата)+1;		
			если (новаяСтрока.лимитЗаМесяц > новаяСтрока.лимитЗаКвартал) тогда
				новаяСтрока.лимитИтоговый = Цел(новаяСтрока.лимитЗаМесяц);
				новаяСтрока.периодИтоговый = 0;
			иначе
				новаяСтрока.лимитИтоговый = Цел(новаяСтрока.лимитЗаКвартал);
				новаяСтрока.периодИтоговый = 1;
			конецЕсли;
				
		конецЕсли;
		
		Если НачалоМесяца(новаяСтрока.датаПервогоОтчета) = НачалоМесяца(Дата) И ЗначениеЗаполнено(выборка.торговаяТочка) Тогда
		
			новаяСтрока.датаПриказа = началоДня(новаяСтрока.датаПервогоОтчета);
			
			Если Не КонецМесяца(новаяСтрока.датаПервогоОтчета) = КонецМесяца(Дата) Тогда
			
				новаяСтрокаРасчетная = РасчетЛимитов.Добавить();
				
				ЗаполнитьЗначенияСвойств(новаяСтрокаРасчетная,новаяСтрока);
				
				новаяСтрока.датаПриказа = КонецМесяца(новаяСтрока.датаПервогоОтчета)+1;
			
			КонецЕсли;
		
		КонецЕсли;
		
КонецПроцедуры

Функция ПолучитьРезультатЗапроса_ДнейОтработано()
	
	//Текст сформирован автоматически обработкой Универсальная консоль отчетов 2.7.8
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ВложенныйЗапрос.отработаноЗаКвартал,
	|	ВложенныйЗапрос.отработаноЗаМесяц - 1 КАК отработаноЗаМесяц
	|ИЗ
	|	(ВЫБРАТЬ
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НАЧАЛОПЕРИОДА(ЛистыЗаКвартал.Дата, ДЕНЬ)) КАК отработаноЗаКвартал,
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВЫБОР
	|				КОГДА ЛистыЗаКвартал.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
	|					ТОГДА НАЧАЛОПЕРИОДА(ЛистыЗаКвартал.Дата, ДЕНЬ)
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК отработаноЗаМесяц
	|	ИЗ
	|		Документ.ЛистУчета КАК ЛистыЗаКвартал
	|	ГДЕ
	|		ЛистыЗаКвартал.Организация = &Организация
	|		И ЛистыЗаКвартал.Проведен
	|		И ЛистыЗаКвартал.Дата МЕЖДУ &НачалоПериода И &КонецПериода) КАК ВложенныйЗапрос";
	//Параметры запроса
	
	запрос.УстановитьПараметр("НачалоПериода", ДобавитьМесяц(началоМесяца(дата),-2));
	запрос.УстановитьПараметр("КонецПериода", КонецМесяца(дата));
	Запрос.УстановитьПараметр("КонецМесяца",КонецМесяца(дата));// Дата
	Запрос.УстановитьПараметр("НачалоМесяца",началоМесяца(дата));// Дата
	Запрос.УстановитьПараметр("Организация",Организация);// Организации
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
		//<Код>
	//КонецЦикла;

	Возврат Выборка;

КонецФункции //ПолучитьРезультатЗапроса_ДнейОтработано//********************************************************

&наСервере
функция получитьОборотыБух(описаниеОшибки)
	
	// Для отладки без подключения к бух.
	//возврат значениеИзФайла(КаталогВременныхФайлов() + "\1.txt");
	
	бухКорп = подключениеКБухгалтерии(описаниеОшибки);
	если (бухКорп = неопределено) тогда
		возврат неопределено;
	конецЕсли;
		
	//---
	Если ТипРозничнойТочки = Перечисления.ТипыРозничныхТочек.Избенка Тогда
		ТекстЗапроса= 	"ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Подразделение,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаОборот,
		|	ХозрасчетныйОбороты.Период,
		|	ХозрасчетныйОбороты.Счет
		|ПОМЕСТИТЬ ВТ_ДанныеПоМесяцам
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&началоПериода, &конецПериода, Месяц, Счет В ИЕРАРХИИ (&счет50), , Организация.ИНН = &ИНН, Корсчет В ИЕРАРХИИ (&МассивСчетов), ) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Подразделение,
		|	ХозрасчетныйОбороты.Период,
		|	ХозрасчетныйОбороты.Счет;";
	Иначе
		ТекстЗапроса= 	"ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.Период,
		|	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК СуммаОборот,
		|	ХозрасчетныйОборотыДтКт.ПодразделениеДт КАК Подразделение,
		|	ХозрасчетныйОборотыДтКт.СчетДт КАК Счет
		|ПОМЕСТИТЬ ВТ_ДанныеПоМесяцам
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&началоПериода, &конецПериода, Месяц, счетДт В ИЕРАРХИИ (&счет50), , счетКт В ИЕРАРХИИ (&счет62Р), , организация.ИНН = &ИНН) КАК ХозрасчетныйОборотыДтКт
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОборотыДтКт.Период,
		|	ХозрасчетныйОборотыДтКт.ПодразделениеДт,
		|	ХозрасчетныйОборотыДтКт.СчетДт
		|;";
	КонецЕсли;    	
	
	ТекстЗапроса= 	ТекстЗапроса+ 	"////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВТ_ДанныеПоМесяцам.СуммаОборот) КАК СуммаОборот,
	|	ВТ_ДанныеПоМесяцам.Подразделение,
	|	ВТ_ДанныеПоМесяцам.Счет
	|ПОМЕСТИТЬ ВТ_ОборотыЗаКвартал
	|ИЗ
	|	ВТ_ДанныеПоМесяцам КАК ВТ_ДанныеПоМесяцам
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДанныеПоМесяцам.Подразделение,
	|	ВТ_ДанныеПоМесяцам.Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОборотыЗаКвартал.Подразделение.Наименование КАК Наименование,
	|	ВТ_ОборотыЗаКвартал.Подразделение.Префикс КАК Префикс,
	|	ВТ_ОборотыЗаКвартал.Подразделение.Код КАК Код,
	|	СУММА(ВТ_ОборотыЗаКвартал.СуммаОборот) КАК ОборотыКвартал,
	|	СУММА(ЕСТЬNULL(ВТ_ДанныеПоМесяцам.СуммаОборот, 0)) КАК ОборотыМесяц,
	|	ВТ_ДанныеПоМесяцам.Счет
	|ИЗ
	|	ВТ_ОборотыЗаКвартал КАК ВТ_ОборотыЗаКвартал
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеПоМесяцам КАК ВТ_ДанныеПоМесяцам
	|		ПО ВТ_ОборотыЗаКвартал.Подразделение = ВТ_ДанныеПоМесяцам.Подразделение
	|			И (ВТ_ДанныеПоМесяцам.Период = НАЧАЛОПЕРИОДА(&конецПериода, МЕСЯЦ))
	|			И ВТ_ОборотыЗаКвартал.Счет = ВТ_ДанныеПоМесяцам.Счет
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОборотыЗаКвартал.Подразделение.Наименование,
	|	ВТ_ОборотыЗаКвартал.Подразделение.Префикс,
	|	ВТ_ОборотыЗаКвартал.Подразделение.Код,
	|	ВТ_ДанныеПоМесяцам.Счет
	|ИТОГИ
	|	МАКСИМУМ(Префикс),
	|	МАКСИМУМ(Код),
	|	СУММА(ОборотыКвартал),
	|	СУММА(ОборотыМесяц)
	|ПО
	|	Наименование";
	
	запрос = БухКорп.NewObject("Запрос");  
	запрос.текст = ТекстЗапроса;			
	
	ПараметрСписок_МассивСчетов = БухКорп.NewObject("СписокЗначений");
	
	Если ТипРозничнойТочки = Перечисления.ТипыРозничныхТочек.Избенка Тогда
		
		запрос.текст = СтрЗаменить(запрос.текст,"счетКт = &счет62Р","счетКт В ИЕРАРХИИ (&МассивСчетов)"); 
		
		запрос.установитьПараметр("счет50", БухКорп.планыСчетов.Хозрасчетный.Выручка);
		ПараметрСписок_МассивСчетов.Добавить(БухКорп.ПланыСчетов.Хозрасчетный.Касса);
		ПараметрСписок_МассивСчетов.Добавить(БухКорп.ПланыСчетов.Хозрасчетный.РасчетыСРозничнымиПокупателями);
	Иначе
		
		запрос.установитьПараметр("счет50", БухКорп.планыСчетов.Хозрасчетный.Касса);
		ПараметрСписок_МассивСчетов.Добавить(БухКорп.ПланыСчетов.Хозрасчетный.Выручка);
		ПараметрСписок_МассивСчетов.Добавить(БухКорп.ПланыСчетов.Хозрасчетный.РасчетыСРозничнымиПокупателями);
	КонецЕсли;
	
	
	
	Запрос.УстановитьПараметр("МассивСчетов",ПараметрСписок_МассивСчетов);// Список значений
	
	запрос.установитьПараметр("началоПериода", ДобавитьМесяц(началоМесяца(дата),-2));
	запрос.установитьПараметр("конецПериода", КонецМесяца(Дата));	
	запрос.установитьПараметр("ИНН", Организация.ИНН);
	запрос.установитьПараметр("счет62Р", ПараметрСписок_МассивСчетов);	
	
	//---
	результат = новый таблицаЗначений;
	результат.Колонки.Добавить("Наименование", новый ОписаниеТипов("Строка",,,,новый квалификаторыСтроки(100)));
	результат.Колонки.Добавить("Код", новый ОписаниеТипов("Строка",,,,новый квалификаторыСтроки(9)));
	результат.Колонки.Добавить("Префикс", новый ОписаниеТипов("Число"));
	результат.Колонки.Добавить("ОборотыКвартал", новый ОписаниеТипов("Число"));	
	результат.Колонки.Добавить("ОборотыМесяц", новый ОписаниеТипов("Число"));		
	результат.Колонки.Добавить("ТорговаяТочка", новый ОписаниеТипов("Строка",,,,новый квалификаторыСтроки(100)));	
	результат.Колонки.Добавить("количествоДнейМесяц", новый ОписаниеТипов("Число"));	
	результат.Колонки.Добавить("количествоДнейКвартал", новый ОписаниеТипов("Число"));		
	//---
	выборка = запрос.выполнить().выбрать(БухКорп.ОбходРезультатаЗапроса.ПоГруппировкам);
	пока (выборка.следующий()) цикл
		Попытка
			Преф = число(выборка.префикс);
		Исключение
			Попытка
			
				Преф = выборка.префикс;
				
				Преф = СтрЗаменить(Преф,"_","");
				
				Преф = число(Преф);
			
			Исключение
				
				Если выборка.Наименование = "Управление розницей" 
					И  ТипРозничнойТочки = Перечисления.ТипыРозничныхТочек.Избенка 
					Тогда
					
					ВыборкаПоСчетам = выборка.Выбрать();
					
					Пока ВыборкаПоСчетам.Следующий() Цикл
						
						Если ВыборкаПоСчетам.Счет.Order = бухКорп.планыСчетов.хозрасчетный.ВыручкаЕНВД.Order
							Тогда
							новаяСтрока = результат.Добавить();
							новаяСтрока.Префикс = 575;
							новаяСтрока.ОборотыКвартал = ВыборкаПоСчетам.оборотыКвартал;
							новаяСтрока.ОборотыМесяц = ВыборкаПоСчетам.оборотыМесяц;
						КонецЕсли;	
						
					КонецЦикла;
					
					
					
					
					//новаяСтрока.Наименование = выборка.наименование;
					//новаяСтрока.Код = выборка.код;
					Продолжить;	
					
				КонецЕсли;
				
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Не удалось преоброзовать префикс в число, необходимо вручную ввести корректный префикс в бухгалтерии для подразделения :"+Символы.ПС
				+выборка.Наименование+ " код " + выборка.Код + " префикс "+выборка.префикс;
				Сообщение.Сообщить();
				
				Продолжить;
			
			КонецПопытки;
		КонецПопытки;
		новаяСтрока = результат.Добавить();
		новаяСтрока.Наименование = выборка.наименование;
		новаяСтрока.Код = выборка.код;
		новаяСтрока.Префикс = Преф;
		новаяСтрока.ОборотыКвартал = выборка.оборотыКвартал;
		новаяСтрока.ОборотыМесяц = выборка.оборотыМесяц;

	конецЦикла;
	
	// Для отладки без подключения к бух.
	//значениеВФайла(результат, КаталогВременныхФайлов() + "\1.txt");
	
	Если ТипРозничнойТочки = Перечисления.ТипыРозничныхТочек.Избенка Тогда
		
		
		//Текст сформирован автоматически обработкой Универсальная консоль отчетов 2.7.8
		//Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Подразделение,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК СуммаОборот,
		|	ХозрасчетныйОбороты.Период
		|ПОМЕСТИТЬ ВТ_ДанныеПоМесяцам
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&началоПериода, &конецПериода, Месяц, Счет В ИЕРАРХИИ (&счет50), , Организация.ИНН = &ИНН, Корсчет В ИЕРАРХИИ (&МассивСчетов), ) КАК ХозрасчетныйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Подразделение,
		|	ХозрасчетныйОбороты.Период;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВТ_ДанныеПоМесяцам.СуммаОборот) КАК СуммаОборот,
		|	ВТ_ДанныеПоМесяцам.Подразделение
		|ПОМЕСТИТЬ ВТ_ОборотыЗаКвартал
		|ИЗ
		|	ВТ_ДанныеПоМесяцам КАК ВТ_ДанныеПоМесяцам
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ДанныеПоМесяцам.Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	""УправлениеРозницей"" КАК Наименование,
		|	СУММА(ВТ_ОборотыЗаКвартал.СуммаОборот) КАК ОборотыКвартал,
		|	СУММА(ЕСТЬNULL(ВТ_ДанныеПоМесяцам.СуммаОборот, 0)) КАК ОборотыМесяц
		|ИЗ
		|	ВТ_ОборотыЗаКвартал КАК ВТ_ОборотыЗаКвартал
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеПоМесяцам КАК ВТ_ДанныеПоМесяцам
		|		ПО ВТ_ОборотыЗаКвартал.Подразделение = ВТ_ДанныеПоМесяцам.Подразделение
		|			И (ВТ_ДанныеПоМесяцам.Период = НАЧАЛОПЕРИОДА(&конецПериода, МЕСЯЦ))";
		//Параметры запроса
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			новаяСтрока = результат.Добавить();
        	ЗаполнитьЗначенияСвойств(новаяСтрока,выборка);
		КонецЦикла;

	КонецЕсли;
	
	возврат результат;
	
конецФункции


//********************************************************

функция установитьЛимиты(описаниеОшибки) экспорт;
	
	//---
	бухКорп = ОбщегоНазначения.ПодключитьсяКБухгалтерии();
	
	если (бухКорп=неопределено) тогда
		возврат ложь;
	конецЕсли;
	
	//---
	// Поиск организации в бух.
	бухОрганизация = неопределено;
	бухВыборкаОрганизации = бухКорп.справочники.организации.выбрать();
	пока (бухВыборкаОрганизации.следующий()) цикл
		если (бухВыборкаОрганизации.ИНН = организация.ИНН) тогда
			бухОрганизация = бухВыборкаОрганизации.ссылка;
			прервать;
		конецЕсли;
	конецЦикла;
	если (бухОрганизация = неопределено) тогда
		описаниеОшибки = "В бухгалтерии не найдена организация с ИНН " + организация.ИНН;
	конецЕсли;
	
	//---
	// Соответствие для поиска подразделений в бух.
	бухПодразделения = новый соответствие;
	//???ZEZA бухВыборкаПодразделения = бухКорп.справочники.подразделенияОрганизаций.выбрать(,бухОрганизация);
	бухВыборкаПодразделения = бухКорп.справочники.подразделенияОрганизаций.Выбрать();
	пока (бухВыборкаПодразделения.следующий()) цикл
		попытка
			префикс = число(бухВыборкаПодразделения.префикс);
		исключение
			продолжить;
		конецПопытки;
		бухПодразделения.Вставить(число(префикс), бухВыборкаПодразделения.ссылка);
	конецЦикла;
	
	//---
	запрос = новый запрос;
	запрос.Текст =
	"ВЫБРАТЬ
	|	УстановкаЛимитовКассыРасчетЛимитов.Подразделение,
	|	УстановкаЛимитовКассыРасчетЛимитов.Подразделение.НомерТочки КАК НомерТочки,
	|	УстановкаЛимитовКассыРасчетЛимитов.ЛимитИтоговый,
	|	УстановкаЛимитовКассыРасчетЛимитов.ДатаПриказа
	|ИЗ
	|	Документ.УстановкаЛимитовКассы.РасчетЛимитов КАК УстановкаЛимитовКассыРасчетЛимитов
	|ГДЕ
	|	УстановкаЛимитовКассыРасчетЛимитов.Ссылка = &ссылка
	|	И УстановкаЛимитовКассыРасчетЛимитов.ВыгружатьВБухгалтерию";
	
	запрос.УстановитьПараметр("ссылка", ссылка);
	
	//---
	выборка = запрос.Выполнить().Выбрать();	
	пока (выборка.Следующий()) цикл
		бухПодразделение = бухПодразделения[выборка.номерТочки];
		если (бухПодразделение = неопределено) тогда
			описаниеОшибки = "В бухгалтерии не найдено подразделение " + выборка.Подразделение + " (номер точки " + выборка.номерТочки+ ")";
			возврат ложь;
		конецЕсли;
		
		новаяЗапись = бухКорп.регистрыСведений.ЛимитОстаткаКассыОрганизаций.создатьМенеджерЗаписи();
		новаяЗапись.организация = бухОрганизация;
		новаяЗапись.подразделениеОрганизации = бухПодразделение;
		новаяЗапись.период = выборка.ДатаПриказа;
		
		НоваяЗапись.Прочитать();
		
		Если НоваяЗапись.Лимит <> 0 И выборка.лимитИтоговый <> НоваяЗапись.Лимит Тогда
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "на дату "+Формат(выборка.ДатаПриказа, "ДФ=dd.MM.yyyy")+" уже записан лимит("+НоваяЗапись.Лимит+") у подразделения " +Строка(выборка.Подразделение);
			Сообщение.Сообщить();
			
			Продолжить;
			
		ИначеЕсли выборка.лимитИтоговый = НоваяЗапись.Лимит Тогда
			
			Продолжить;
			
		КонецЕсли;

		новаяЗапись.организация = бухОрганизация;
		новаяЗапись.подразделениеОрганизации = бухПодразделение;
		новаяЗапись.период = выборка.ДатаПриказа;
		
		новаяЗапись.лимит = выборка.лимитИтоговый;
		

		новаяЗапись.записать();
		
	конецЦикла;
	
	//---
	возврат истина;
	
конецФункции


//********************************************************

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	описаниеОшибки = "";
	если (не установитьЛимиты(описаниеОшибки)) тогда
		сообщить(описаниеОшибки);
	конецЕсли;
КонецПроцедуры
