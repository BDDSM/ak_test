
&НаКлиенте
Процедура ЕдинаяСтоимостьПриИзменении(Элемент)
	Элементы.Стоимость.Видимость = Объект.ЕдинаяСтоимость;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 07.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Изменение условий обслуживания по регламентным работам");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	Если Объект.Ссылка.Пустая() Тогда
		ЗаполнениеНовогоДокументаПоУмолчанию();	
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнениеНовогоДокументаПоУмолчанию()
	Объект.ДатаСоздания = ТекущаяДата();
	Объект.Дата = ТекущаяДата();
	Объект.Периодичность = ?(ЗначениеЗаполнено(Объект.Периодичность),Объект.Периодичность,Перечисления.Периодичность.Месяц);
	Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	Объект.ФормаОплаты = ?(ЗначениеЗаполнено(Объект.ФормаОплаты),Объект.ФормаОплаты,Перечисления.ФормыОплаты.Безналичные);
	Объект.ПериодичностьОплаты = ?(ЗначениеЗаполнено(Объект.ПериодичностьОплаты),Объект.ПериодичностьОплаты,Перечисления.ВидыПериодовОплатыАренды.Предыдущий);
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	РаботаСДиалогами.НачалоВыбораЗначенияДоговораКонтрагента(
		Объект, ЭтаФорма, Элемент, Объект.Контрагент, Объект.ДоговорКонтрагента, ПредопределенноеЗначение("Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком"), СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если Не ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Объект.Контрагент = ВыбранноеЗначение.Владелец;		
	КонецЕсли;                                 
КонецПроцедуры

&НаКлиенте
Процедура СтруктурныеТочкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	СтрокаТЧ = Элемент.ТекущиеДанные;
	Если не Копирование и НоваяСтрока Тогда
		СтрокаТЧ.ДатаНачала = Объект.ДатаНачала;
		СтрокаТЧ.ДатаОкончания = Объект.ДатаОкончания;
		СтрокаТЧ.ЧислоОплаты = Объект.ЧислоОплаты;
		СтрокаТЧ.ЧислоОплатыКонец = Объект.ЧислоОплатыКонец;
		Если Объект.ЕдинаяСтоимость Тогда
			СтрокаТЧ.Стоимость = Объект.Стоимость;	
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.Стоимость.Видимость = Объект.ЕдинаяСтоимость;
	//+++АК sils 07.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));	
	//---АК
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВсеОткрытые(Команда)
	Если Вопрос("Табличная часть будет очищена, продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьДобавитьВсеОткрытые();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавитьВсеОткрытые()
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала",Объект.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",Объект.ДатаОкончания);
	Запрос.УстановитьПараметр("ФормаОплаты",Объект.ФормаОплаты);
	Запрос.УстановитьПараметр("ЧислоОплаты",Объект.ЧислоОплаты);
	Запрос.УстановитьПараметр("ЧислоОплатыКонец",Объект.ЧислоОплатыКонец);
	Запрос.УстановитьПараметр("Стоимость",?(Объект.ЕдинаяСтоимость,Объект.Стоимость,0));
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтруктурныеЕдиницы.Ссылка КАК СтруктурнаяЕдиница,
	               |	&ДатаНачала,
	               |	&ДатаОкончания,
	               |	&ФормаОплаты,
	               |	&ЧислоОплаты,
	               |	&ЧислоОплатыКонец,
	               |	&Стоимость
	               |ИЗ
	               |	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	               |ГДЕ
	               |	СтруктурныеЕдиницы.СтатусТорговойТочки = ЗНАЧЕНИЕ(перечисление.СтатусыТорговыхТочек.Открыт)";
	Объект.СтруктурныеЕдиницы.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

&НаКлиенте
Процедура Файлы(Команда)
	Если не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Предупреждение("Сначала запишите документ.");
		Возврат;
	КонецЕсли;
	
	ФормаФайлов = Справочники.ХранилищеДополнительнойИнформации.ПолучитьФорму("ФормаСпискаФайловИИзображений", ЭтаФорма);
	
	ФормаФайлов.Изображения.Отбор.Объект.Использование                               = Истина;
	ФормаФайлов.Изображения.Отбор.Объект.Значение                                    = Объект.Ссылка;
	ФормаФайлов.ЭлементыФормы.Изображения.НастройкаОтбора.Объект.Доступность         = Ложь;
	ФормаФайлов.ЭлементыФормы.Изображения.Колонки.Объект.Видимость                   = Ложь;
	
	ФормаФайлов.ДополнительныеФайлы.Отбор.Объект.Использование                       = Истина;
	ФормаФайлов.ДополнительныеФайлы.Отбор.Объект.Значение                            = Объект.Ссылка;
	ФормаФайлов.ЭлементыФормы.ДополнительныеФайлы.НастройкаОтбора.Объект.Доступность = Ложь;
	ФормаФайлов.ЭлементыФормы.ДополнительныеФайлы.Колонки.Объект.Видимость           = Ложь;
	
	ОбязательныеОтборы = Новый Структура;
	ОбязательныеОтборы.Вставить("Объект", Объект.Ссылка);
	
	ФормаФайлов.ОбязательныеОтборы = ОбязательныеОтборы;
	
	ФормаФайлов.Открыть();

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВсеСтроки(Команда)
	ЗаполнитьСтроки(Истина);	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСтроки(Все)
	ТекущиеДанные = Элементы.СтруктурныеТочки.ТекущиеДанные;
	ТекущаяКолонка = Элементы.СтруктурныеТочки.ТекущийЭлемент;
	Если не ТекущиеДанные = Неопределено Тогда
		Если не ТекущаяКолонка = Элементы.СтруктурныеТочкиНомерСтроки 
			и не ТекущаяКолонка = Элементы.СтруктурныеТочкиСтруктурнаяЕдиница Тогда
			ИмяРеквизитаТЧ = СтрЗаменить(ТекущаяКолонка.Имя,"СтруктурныеТочки",""); 
			Для каждого стр из Объект.СтруктурныеЕдиницы Цикл
				Если Все или не ЗначениеЗаполнено(стр[ИмяРеквизитаТЧ]) Тогда
					стр[ИмяРеквизитаТЧ] = ТекущиеДанные[ИмяРеквизитаТЧ]; 	
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПустыеСтроки(Команда)
	ЗаполнитьСтроки(Ложь);
КонецПроцедуры
