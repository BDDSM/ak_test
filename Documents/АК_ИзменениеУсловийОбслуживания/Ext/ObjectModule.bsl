
Процедура ОбработкаПроведения(Отказ, Режим)
	//Контроль
	ГруппировочноеПоле = ?(ВидОперации=Перечисления.АК_ВидыОперацийИзменениеУсловийОбслуживаний.Завершение,"ДатаОкончания","ДатаНачала");
	ТаблицаДатДляСвертки = СтруктурныеЕдиницы.Выгрузить();
	ТаблицаДатДляСвертки.Свернуть(ГруппировочноеПоле);
	Для Каждого СтрокаДаты из ТаблицаДатДляСвертки Цикл
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить(ГруппировочноеПоле,СтрокаДаты[ГруппировочноеПоле]);
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТаблицаСтруктурныхЕдиниц",СтруктурныеЕдиницы.Выгрузить(ПараметрыОтбора));
		Запрос.УстановитьПараметр("Услуга",Услуга);
		Запрос.УстановитьПараметр("Контрагент",Контрагент);
		//СозданиеИзменение
		Если не ВидОперации=Перечисления.АК_ВидыОперацийИзменениеУсловийОбслуживаний.Завершение Тогда
			Запрос.УстановитьПараметр("Период",СтрокаДаты.ДатаНачала);
			Запрос.Текст = "ВЫБРАТЬ
			               |	ТаблицаСтруктурныхЕдиниц.СтруктурнаяЕдиница
			               |ПОМЕСТИТЬ ВТ_СтруктурныеЕдиницы
			               |ИЗ
			               |	&ТаблицаСтруктурныхЕдиниц КАК ТаблицаСтруктурныхЕдиниц
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ТаблицаСтруктурныхЕдиниц.СтруктурнаяЕдиница,
			               |	АК_УсловияРегламентныхРаботСрезПоследних.Регистратор,
			               |	ЛОЖЬ КАК ТочкаЗакрыта
			               |ИЗ
			               |	ВТ_СтруктурныеЕдиницы КАК ТаблицаСтруктурныхЕдиниц
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АК_УсловияРегламентныхРабот.СрезПоследних(
			               |				&Период,
			               |				Услуга = &Услуга
			               |					И НЕ Контрагент = &Контрагент) КАК АК_УсловияРегламентныхРаботСрезПоследних
			               |		ПО ТаблицаСтруктурныхЕдиниц.СтруктурнаяЕдиница = АК_УсловияРегламентныхРаботСрезПоследних.СтруктурнаяЕдиница
			               |ГДЕ
						   //+++АК ILIK 2018.08.08 ИП-00019413
			               //|	НЕ АК_УсловияРегламентныхРаботСрезПоследних.СтруктурнаяЕдиница.СтатусТорговойТочки = ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Закрыт)
						   |	НЕ АК_УсловияРегламентныхРаботСрезПоследних.СтруктурнаяЕдиница.СтатусТорговойТочки В (ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Закрыт), ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Приостановлен))
						   //---АК ILIK
			               |	И НЕ АК_УсловияРегламентныхРаботСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Приостановлен)
			               |
			               |ОБЪЕДИНИТЬ ВСЕ
			               |
			               |ВЫБРАТЬ
			               |	ВТ_СтруктурныеЕдиницы.СтруктурнаяЕдиница,
			               |	NULL,
			               |	ИСТИНА
			               |ИЗ
			               |	ВТ_СтруктурныеЕдиницы КАК ВТ_СтруктурныеЕдиницы
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
			               |		ПО ВТ_СтруктурныеЕдиницы.СтруктурнаяЕдиница = СтруктурныеЕдиницы.Ссылка
			               |ГДЕ
						   //+++АК ILIK 2018.08.08 ИП-00019413
			               //|	СтруктурныеЕдиницы.СтатусТорговойТочки = ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Закрыт)";
						   |	СтруктурныеЕдиницы.СтатусТорговойТочки В (ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Закрыт), ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Приостановлен))";
						   //---АК ILIK
			Выборка=Запрос.Выполнить().Выбрать();
			//Отказ = Выборка.Количество();
			пока Выборка.Следующий() Цикл
				Если Выборка.ТочкаЗакрыта Тогда
					ОбщегоНазначения.СообщитьОбОшибке("ПРЕДУПРЕЖДЕНИЕ! Торговая точка "+Выборка.СтруктурнаяЕдиница+" закрыта.");
				иначе
					ОбщегоНазначения.СообщитьОбОшибке("ОШИБКА! Для торговой точки "+Выборка.СтруктурнаяЕдиница+" уже есть договор на обслуживание на данный период");
					Отказ = Истина;
				КонецЕсли;
			КонецЦикла;
		иначе
			//Закрытие
			Запрос.УстановитьПараметр("Период",СтрокаДаты.ДатаОкончания);
			Запрос.УстановитьПараметр("Регистратор",Ссылка);
			Запрос.Текст = "ВЫБРАТЬ
			|	ТаблицаСтруктурныхЕдиниц.СтруктурнаяЕдиница
			|ПОМЕСТИТЬ ВТ_СтруктурныеЕдиницы
			|ИЗ
			|	&ТаблицаСтруктурныхЕдиниц КАК ТаблицаСтруктурныхЕдиниц
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТаблицаСтруктурныхЕдиниц.СтруктурнаяЕдиница,
			|	АК_УсловияРегламентныхРаботСрезПоследних.Регистратор
			|ИЗ
			|	ВТ_СтруктурныеЕдиницы КАК ТаблицаСтруктурныхЕдиниц
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АК_УсловияРегламентныхРабот.СрезПоследних(
			|				&Период,
			|				Контрагент = &Контрагент
			|					И Услуга = &Услуга
			|					И НЕ Регистратор = &Регистратор) КАК АК_УсловияРегламентныхРаботСрезПоследних
			|		ПО ТаблицаСтруктурныхЕдиниц.СтруктурнаяЕдиница = АК_УсловияРегламентныхРаботСрезПоследних.СтруктурнаяЕдиница
			|ГДЕ
			|	(НЕ АК_УсловияРегламентныхРаботСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыДоговоровКонтрагентов.Действует)
			|			ИЛИ АК_УсловияРегламентныхРаботСрезПоследних.Статус ЕСТЬ NULL )";
			Выборка = Запрос.Выполнить().Выбрать();
			Если не Выборка.Количество() = 0 Тогда
				Отказ = Истина;
				Пока Выборка.Следующий()Цикл
					ОбщегоНазначения.СообщитьОбОшибке("ОШИБКА! Для торговой точки "+Выборка.СтруктурнаяЕдиница+" нет действующего договора с этим контрагентом на эту услугу на "+СтрокаДаты.ДатаОкончания);
				КонецЦикла;
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	//Движения
	Движения.АК_УсловияРегламентныхРабот.Записывать = Истина;
	Движения.АК_УсловияРегламентныхРабот.Очистить();
	Для Каждого ТекСтрокаСтруктурныеЕдиницы Из СтруктурныеЕдиницы Цикл
		Движение = Движения.АК_УсловияРегламентныхРабот.Добавить();
		Движение.Период = ?(ВидОперации=Перечисления.АК_ВидыОперацийИзменениеУсловийОбслуживаний.Завершение,НачалоДня(ТекСтрокаСтруктурныеЕдиницы.ДатаОкончания),НачалоДня(ТекСтрокаСтруктурныеЕдиницы.ДатаНачала));
		Движение.Контрагент = Контрагент;
		Движение.Услуга = Услуга;
		Движение.СтруктурнаяЕдиница = ТекСтрокаСтруктурныеЕдиницы.СтруктурнаяЕдиница;
		Движение.Статус = ?(ВидОперации=Перечисления.АК_ВидыОперацийИзменениеУсловийОбслуживаний.Завершение,Перечисления.СтатусыДоговоровКонтрагентов.Приостановлен,Перечисления.СтатусыДоговоровКонтрагентов.Действует);
		Движение.Стоимость = ТекСтрокаСтруктурныеЕдиницы.Стоимость;
		Движение.Периодичность = Периодичность;
		Движение.ФормаОплаты = ФормаОплаты;
		Движение.ДатаНачала = ТекСтрокаСтруктурныеЕдиницы.ДатаНачала;
		Движение.ДатаОкончания = ТекСтрокаСтруктурныеЕдиницы.ДатаОкончания;
		Движение.ЧислоОплаты = ТекСтрокаСтруктурныеЕдиницы.ЧислоОплаты;
		Движение.ЧислоОплатыКонец = ТекСтрокаСтруктурныеЕдиницы.ЧислоОплатыКонец;
		Движение.ПериодОплаты = ПериодичностьОплаты;
		Движение.ДоговорКонтрагента = ДоговорКонтрагента;
		Движение.НеТребуетРегистрацииВыполнения = НеТребуетРегистрацииВыполнения;
	КонецЦикла;
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Если ВидОперации = Перечисления.АК_ВидыОперацийИзменениеУсловийОбслуживаний.Завершение Тогда
		Если не ЗначениеЗаполнено(ДатаОкончания) Тогда
			ПроверяемыеРеквизиты.Добавить("СтруктурныеЕдиницы.ДатаОкончания");
		КонецЕсли;
	иначе
		Если не ЗначениеЗаполнено(ДатаНачала) Тогда
			ПроверяемыеРеквизиты.Добавить("СтруктурныеЕдиницы.ДатаНачала");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ЗаполнениеПустыхРеквизитовСтрокиПоШапке();	
КонецПроцедуры

Процедура ЗаполнениеПустыхРеквизитовСтрокиПоШапке() Экспорт	
	Для Каждого стр из СтруктурныеЕдиницы Цикл	
		ЗаполнитьРеквизитСтроки(стр,"ДатаНачала");
		ЗаполнитьРеквизитСтроки(стр,"ДатаОкончания");
		ЗаполнитьРеквизитСтроки(стр,"ДатаОкончания");
		ЗаполнитьРеквизитСтроки(стр,"ЧислоОплаты");
		ЗаполнитьРеквизитСтроки(стр,"ЧислоОплатыКонец");
		Если ЕдинаяСтоимость Тогда
			стр.Стоимость = Стоимость;	
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьРеквизитСтроки(СтрокаТЧ,Реквизит)
	Если ЗначениеЗаполнено(ЭтотОбъект[Реквизит]) и не ЗначениеЗаполнено(СтрокаТЧ[Реквизит]) Тогда
		СтрокаТЧ[Реквизит] = ЭтотОбъект[Реквизит];
	КонецЕсли;	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.АК_ИзменениеУсловийОбслуживания") Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,ДанныеЗаполнения);
		ЭтотОбъект.ВидОперации = Неопределено;
		ЭтотОбъект.ДатаНачала = Неопределено;
		ЭтотОбъект.ДатаОкончания = Неопределено;
		ЭтотОбъект.Номер = Неопределено;
		ЭтотОбъект.Комментарий = Неопределено;
		СтруктурныеЕдиницы.Загрузить(ДанныеЗаполнения.СтруктурныеЕдиницы.Выгрузить(,"СтруктурнаяЕдиница,Стоимость,ЧислоОплаты,ЧислоОплатыКонец"));
	КонецЕсли;
КонецПроцедуры
