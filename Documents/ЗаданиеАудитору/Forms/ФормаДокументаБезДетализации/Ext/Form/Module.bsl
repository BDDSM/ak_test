&НаСервере
Функция ЭтоАудитор()
	
	Возврат РольДоступна("АудиторТоваров");
	
КонецФункции 


&НаКлиенте
Процедура ПриОткрытии(Отказ)

	Если ЭтоАудитор() Тогда
		Отказ = Истина;
		
		ПараметрыФормы = Новый Структура("Ключ", Объект.Ссылка);
		ОткрытьФорму("Документ.ЗаданиеАудитору.Форма.ФормаДляАудитора", ПараметрыФормы);
	КонецЕсли;
	
	
	УстановитьВидимость();

КонецПроцедуры

&НаКлиенте
Процедура ТипЗаданияПриИзменении(Элемент)
	
	УстановитьВидимость();

КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()

	Элементы.Номенклатура.Видимость = НЕ (Объект.ТипЗадания = ПредопределенноеЗначение("Перечисление.ТипыЗаданийАудитору.АудитПроизводителя"));
	Элементы.ХарактеристикаНоменклатуры.Видимость = (Объект.ТипЗадания = ПредопределенноеЗначение("Перечисление.ТипыЗаданийАудитору.ПроверитьЭтикетку") ИЛИ Объект.ТипЗадания = ПредопределенноеЗначение("Перечисление.ТипыЗаданийАудитору.СоздатьЭтикетку"));
    Элементы.Производитель.Видимость = (Объект.ТипЗадания = ПредопределенноеЗначение("Перечисление.ТипыЗаданийАудитору.АудитПроизводителя"));

	Элементы.ГруппаТовары.Видимость = НЕ (Объект.ТипЗадания = ПредопределенноеЗначение("Перечисление.ТипыЗаданийАудитору.ПроверитьЭтикетку") ИЛИ Объект.ТипЗадания = ПредопределенноеЗначение("Перечисление.ТипыЗаданийАудитору.СоздатьЭтикетку"));

	Элементы.ТоварыНоменклатура.Видимость = (Объект.ТипЗадания = ПредопределенноеЗначение("Перечисление.ТипыЗаданийАудитору.АудитПроизводителя"));
	Элементы.ТоварыХарактеристикаНоменклатурыКонтекстноеМеню.Видимость = (Объект.ТипЗадания = ПредопределенноеЗначение("Перечисление.ТипыЗаданийАудитору.ПоискНовыхПроизводителей"));


КонецПроцедуры 

&НаКлиенте
Процедура ХарактеристикаНоменклатурыОткрытие(Элемент, СтандартнаяОбработка)
	
	//СтандартнаяОбработка = Ложь;

	//СтруктураПараметров = Новый Структура();
	//СтруктураПараметров.Вставить("Ключ", Объект.ХарактеристикаНоменклатуры);
	//СтруктураПараметров.Вставить("ТипЗадания", Объект.ТипЗадания);

	//ОткрытьФорму("Справочник.ХарактеристикиНоменклатуры.Форма.ФормаДляАудита", СтруктураПараметров);

КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	Если Объект.ТипЗадания = ПредопределенноеЗначение("Перечисление.ТипыЗаданийАудитору.ПоискНовыхПроизводителей") Тогда
		ЗаполнитьХарактеристикиПоНоменклатуре();
				
	ИначеЕсли Объект.ТипЗадания = ПредопределенноеЗначение("Перечисление.ТипыЗаданийАудитору.ПроверитьЭтикетку") ИЛИ 
					    Объект.ТипЗадания = ПредопределенноеЗначение("Перечисление.ТипыЗаданийАудитору.СоздатьЭтикетку") Тогда
		
		УстановитьХарактеристику();
	КонецЕсли; 

КонецПроцедуры

&НаСервере
Процедура УстановитьХарактеристику()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец = &Владелец
	|	И НЕ ХарактеристикиНоменклатуры.Неактивная");
	
	Запрос.УстановитьПараметр("Владелец", Объект.Номенклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		Объект.ХарактеристикаНоменклатуры = Выборка.Ссылка;
	КонецЕсли; 	
		
КонецПроцедуры		
		
&НаСервере
Процедура ЗаполнитьХарактеристикиПоНоменклатуре()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ХарактеристикиНоменклатуры.Ссылка КАК ХарактеристикаНоменклатуры
	                      |ИЗ
	                      |	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	                      |ГДЕ
	                      |	ХарактеристикиНоменклатуры.Владелец = &Владелец
	                      |	И НЕ ХарактеристикиНоменклатуры.Неактивная
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ХарактеристикиНоменклатуры.Наименование");
	
	Запрос.УстановитьПараметр("Владелец", Объект.Номенклатура);

	Объект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры 

&НаКлиенте
Процедура ПроизводительПриИзменении(Элемент)

	ЗаполнитьНоменклатуруПоПроизводителю();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНоменклатуруПоПроизводителю()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЗначенияСвойствОбъектов.Объект.Владелец КАК Номенклатура, 	ЗначенияСвойствОбъектов.Объект КАК ХарактеристикаНоменклатуры
	                      |ИЗ
	                      |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	                      |ГДЕ
	                      |	ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель)
	                      |	И ЗначенияСвойствОбъектов.Значение = &Значение
	                      |	И НЕ ЗначенияСвойствОбъектов.Объект.Неактивная");
	
	Запрос.УстановитьПараметр("Значение", Объект.Производитель);

	Объект.Товары.Загрузить(Запрос.Выполнить().Выгрузить());

	Объект.Товары.Сортировать("Номенклатура"); 
	
КонецПроцедуры 


&НаКлиенте
Процедура ТоварыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ТоварыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	//СтандартнаяОбработка = Ложь;

	//СтруктураПараметров = Новый Структура();
	//СтруктураПараметров.Вставить("Ключ", Элементы.Товары.ТекущиеДанные.ХарактеристикаНоменклатуры);
	//СтруктураПараметров.Вставить("ТипЗадания", Объект.ТипЗадания);

	//ОткрытьФорму("Справочник.ХарактеристикиНоменклатуры.Форма.ФормаДляАудита", СтруктураПараметров);

КонецПроцедуры

&НаКлиенте
Процедура ТипЗаданияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ВыбранноеЗначение <> Объект.ТипЗадания Тогда
		Объект.Товары.Очистить();
		
		Если ВыбранноеЗначение = ПредопределенноеЗначение("Перечисление.ТипыЗаданийАудитору.АудитПроизводителя")  Тогда
			Объект.Номенклатура = Неопределено;
		Иначе
			Объект.Производитель = Неопределено;
		КонецЕсли; 
		
		Если ВыбранноеЗначение = ПредопределенноеЗначение("Перечисление.ТипыЗаданийАудитору.ПоискНовыхПроизводителей")  Тогда
			ЗаполнитьХарактеристикиПоНоменклатуре();
		КонецЕсли; 

	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикаНоменклатурыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = Справочники.ХарактеристикиНоменклатуры.ПолучитьФормуВыбора(, Элемент);
	
	ФормаВыбора.СправочникСписок.Отбор.Владелец.Установить(Объект.Номенклатура);
	ФормаВыбора.СправочникСписок.Отбор.Неактивная.Установить(Ложь);
	
	ФормаВыбора.Открыть();
	
КонецПроцедуры


 