&НаКлиенте
Процедура Заполнить(Команда)
	Если ЭтаФорма.Объект.ТорговыеТочки.Количество() тогда
		Ответ=Вопрос("При заполнении табличная часть будет очищена. Продолжить?",РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.Да,"Подтверждение");
		Если Ответ=КодВозвратаДиалога.Да тогда
		ЗаполнитьНаСервере();
		КонецЕсли;
	Иначе
		ЗаполнитьНаСервере();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	Документы.АК_РазнесениеСписанийНаКачество.ЗаполнитьНаСервере(Объект);
	ПересчитатьИтоги();
КонецПроцедуры


&НаКлиенте
Процедура ТорговыеТочкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя="ТорговыеТочкиФотография" тогда
		КоличествоКартинокПоСтроке=СтрЧислоВхождений(Элемент.ТекущиеДанные.АдресКартинки,"№№№№");
		МассивКартинок=Новый Массив;
		ОсталосьОбработать=СокрЛП(Элемент.ТекущиеДанные.АдресКартинки);
		Пока ОсталосьОбработать<>"" и КоличествоКартинокПоСтроке>0 цикл
			ОсталосьОбработать=Сред(ОсталосьОбработать,5);//отрезаем первые символы
			НачалоСледующейКартинки=Найти(ОсталосьОбработать,"№№№№");
			Если НачалоСледующейКартинки>0 тогда
				ТекущаяКартинка=Лев(ОсталосьОбработать,НачалоСледующейКартинки-1);
				ОсталосьОбработать=Сред(ОсталосьОбработать,НачалоСледующейКартинки);
			Иначе
				ТекущаяКартинка=ОсталосьОбработать;
				ОсталосьОбработать="";
			КонецЕсли;
			//Картинка = Новый Картинка(ТекущаяКартинка);
			//ОткрытьЗначение(Картинка);
			ТемпФайл = Новый Файл(ТекущаяКартинка);
			ЗапуститьПриложение(ТекущаяКартинка, ТемпФайл.Путь);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ТорговыеТочкиПричинаБояПриИзменении(Элемент)
	Отбор=Новый Структура;
	Отбор.Вставить("Номенклатура",ЭтаФорма.Элементы.ТорговыеТочки.ТекущиеДанные.Номенклатура);
	Отбор.Вставить("Характеристика",ЭтаФорма.Элементы.ТорговыеТочки.ТекущиеДанные.Характеристика);
	СтрокиТЧ=Объект.ТорговыеТочки.НайтиСтроки(Отбор);
	Если СтрокиТЧ.Количество()>1 тогда
		Ответ=Вопрос("Проставить причину списания для всех строк с аналогичной номенклатурой и характеристикой?",РежимДиалогаВопрос.ДаНет,0,КодВозвратаДиалога.Да,"Автоподстановка");
		Если Ответ=КодВозвратаДиалога.Да тогда
			Для Каждого СтрТЧ из СтрокиТЧ цикл
				СтрТЧ.ПричинаСписания=ЭтаФорма.Элементы.ТорговыеТочки.ТекущиеДанные.ПричинаСписания;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	ПересчитатьИтоги();
КонецПроцедуры

&НаСервере
Процедура ПересчитатьИтоги()
	ЭтаФорма.Итоги.Очистить();
	СтрокаИтогов=ЭтаФорма.Итоги.Добавить();
	СтрокаИтогов.Показатель="Сумма";
	СтрокаИтогов.Всего=Объект.ТорговыеТочки.Итог("Сумма");
	ПолучитьИтог(Перечисления.АК_ПричиныСписанияПоКачеству.ПустаяСсылка(),СтрокаИтогов.НеОбработано,Ложь);
	ПолучитьИтог(Перечисления.АК_ПричиныСписанияПоКачеству.СрокГодностиКончился,СтрокаИтогов.СрокГодности,Ложь);
	ПолучитьИтог(Перечисления.АК_ПричиныСписанияПоКачеству.НеВыяснено,СтрокаИтогов.НеВыяснено,Ложь);
	ПолучитьИтог(Перечисления.АК_ПричиныСписанияПоКачеству.ПлохоеКачествоОтПоставщика,СтрокаИтогов.Поставщик,Ложь);
	ПолучитьИтог(Перечисления.АК_ПричиныСписанияПоКачеству.ПлохоеХранениеВМагазине,СтрокаИтогов.Магазин,Ложь);
	
	СтрокаИтогов=ЭтаФорма.Итоги.Добавить();
	СтрокаИтогов.Показатель="Количество";
	СтрокаИтогов.Всего=Объект.ТорговыеТочки.Итог("Колво");
	ПолучитьИтог(Перечисления.АК_ПричиныСписанияПоКачеству.ПустаяСсылка(),СтрокаИтогов.НеОбработано,Истина);
	ПолучитьИтог(Перечисления.АК_ПричиныСписанияПоКачеству.СрокГодностиКончился,СтрокаИтогов.СрокГодности,Истина);
	ПолучитьИтог(Перечисления.АК_ПричиныСписанияПоКачеству.НеВыяснено,СтрокаИтогов.НеВыяснено,Истина);
	ПолучитьИтог(Перечисления.АК_ПричиныСписанияПоКачеству.ПлохоеКачествоОтПоставщика,СтрокаИтогов.Поставщик,Истина);
	ПолучитьИтог(Перечисления.АК_ПричиныСписанияПоКачеству.ПлохоеХранениеВМагазине,СтрокаИтогов.Магазин,Истина);
	//Отбор=Новый Структура%
	//Отбор.Вставить("ПричинаБоя",Перечисления.АК_ПричиныБоя.ПустаяСсылка());
	//ТаблицаОтбора=Объект.ТорговыеТочки.Выгрузить(Отбор);
	//ЭтаФорма.ИтогНеопределен="Кол "+Строка(ТаблицаОтбора.Итог("Колво"))+" / Сум "+ Строка(ТаблицаОтбора.Итог("Сумма"));
	//

КонецПроцедуры

&НаСервере
Процедура ПолучитьИтог(ПричинаБоя,Реквизит,Кол)
	Отбор=Новый Структура;
	Отбор.Вставить("ПричинаСписания",ПричинаБоя);
	ТаблицаОтбора=Объект.ТорговыеТочки.Выгрузить(Отбор);
	Реквизит=?(Кол,ТаблицаОтбора.Итог("Колво"),ТаблицаОтбора.Итог("Сумма"));
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 07.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Разнесение списаний на качество");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	ПересчитатьИтоги();
КонецПроцедуры

&НаКлиенте
Процедура ОтобразитьМелкиеСписания()
	Если Не ЭтаФорма.ПоказатьМелкиеСписания тогда
		ЭтаФорма.Элементы.ТорговыеТочки.ОтборСтрок=Новый ФиксированнаяСтруктура("ЭтоМелкий",Ложь);
	Иначе
		ЭтаФОрма.Элементы.ТорговыеТочки.ОтборСтрок=Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОтобразитьМелкиеСписания();
	//+++АК sils 07.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
	//---АК
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьМелкиеСписанияПриИзменении(Элемент)
	ОтобразитьМелкиеСписания();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТекПользователь()
	Возврат ПараметрыСеанса.ТекущийПользователь;
КонецФункции	

&НаКлиенте
Процедура ТорговыеТочкиСтрокаОбработанаПриИзменении(Элемент)
	
	Если Элементы.ТорговыеТочки.ТекущиеДанные.СтрокаОбработана Тогда
		Элементы.ТорговыеТочки.ТекущиеДанные.ОбработалСотрудник = ТекПользователь();
	Иначе	
		Элементы.ТорговыеТочки.ТекущиеДанные.ОбработалСотрудник = Неопределено;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТорговыеТочкиКодПричиныНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//СтандартнаяОбработка = Ложь;
	//Элемент.СписокВыбора.Очистить();
	
КонецПроцедуры
