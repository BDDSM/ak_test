Перем ОперацияАпдекс; //+++АК sils 07.06.2018 ИП-00018876

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Процедура создает и настраивает табличные поля на страницах панели ОсновнаяПанель
//
Процедура НастроитьЗакладкиПанели()

	Если ТаблицаРегистровНакопления.Количество() = 0 Тогда
		
		ЭлементыФормы.ОсновнаяПанель.Страницы.Очистить();
		ЭлементыФормы.ОсновнаяПанель.ОтображениеЗакладок = ОтображениеЗакладок.НеИспользовать;
		
	Иначе
		
		// Добавим новые страницы
		ЭлементыФормы.ОсновнаяПанель.ОтображениеЗакладок = ОтображениеЗакладок.Сверху;
		Для каждого СтрокаТаблицыРегистров Из ТаблицаРегистровНакопления Цикл
			Найдена = Ложь;
			Для каждого СтраницаПанели Из ЭлементыФормы.ОсновнаяПанель.Страницы Цикл
				Если СтраницаПанели.Имя = СтрокаТаблицыРегистров.Имя Тогда
					Найдена = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
			Если Найдена Тогда
				Продолжить;
			КонецЕсли; 
			
			Если ТаблицаРегистровНакопления.Индекс(СтрокаТаблицыРегистров) + 1 > ЭлементыФормы.ОсновнаяПанель.Страницы.Количество() Тогда
				СтраницаПанели = ЭлементыФормы.ОсновнаяПанель.Страницы.Добавить(СтрокаТаблицыРегистров.Имя, СтрокаТаблицыРегистров.Представление);
			Иначе
				СтраницаПанели = ЭлементыФормы.ОсновнаяПанель.Страницы.Вставить(ТаблицаРегистровНакопления.Индекс(СтрокаТаблицыРегистров), СтрокаТаблицыРегистров.Имя, СтрокаТаблицыРегистров.Представление);
			КонецЕсли;
			
			ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = СтраницаПанели;
			
			// Расположим на странице командную панель
			КоманднаяПанельРегистра = ЭлементыФормы.Добавить(Тип("КоманднаяПанель"), ("КоманднаяПанель" + СтрокаТаблицыРегистров.Имя), Истина, ЭлементыФормы.ОсновнаяПанель);
			КоманднаяПанельРегистра.Верх = 6;
			КоманднаяПанельРегистра.Лево = 6;
			КоманднаяПанельРегистра.Ширина = ЭлементыФормы.ОсновнаяПанель.Ширина - 12 - 2;
			КоманднаяПанельРегистра.Высота = 24;
			
			КоманднаяПанельРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Верх,ЭлементыФормы.ОсновнаяПанель,ГраницаЭлементаУправления.Верх);
			КоманднаяПанельРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Низ,КоманднаяПанельРегистра,ГраницаЭлементаУправления.Верх);
			КоманднаяПанельРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Право,ЭлементыФормы.ОсновнаяПанель,ГраницаЭлементаУправления.Право);
			КоманднаяПанельРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Лево,ЭлементыФормы.ОсновнаяПанель,ГраницаЭлементаУправления.Лево);
			
			// Расположим на странице табличное поле
			ПолеРегистра = ЭлементыФормы.Добавить(Тип("ТабличноеПоле"), СтрокаТаблицыРегистров.Имя, Истина, ЭлементыФормы.ОсновнаяПанель);
			ПолеРегистра.Данные = "ДокументОбъект.Движения." + СтрокаТаблицыРегистров.Имя;
			
			Если НЕ ЭтоНовый() Тогда
				ПолеРегистра.Значение.Прочитать();
			КонецЕсли; 
			
			ПолеРегистра.Верх = 30;
			ПолеРегистра.Лево = 6;
			ПолеРегистра.Ширина = ЭлементыФормы.ОсновнаяПанель.Ширина - 12 - 2;
			ПолеРегистра.Высота = ЭлементыФормы.ОсновнаяПанель.Высота - 24 - 12 - 20;
			ПолеРегистра.ТолькоПросмотр = Ложь;
			ПолеРегистра.ИзменятьПорядокСтрок = Истина;
			ПолеРегистра.ИзменятьСоставСтрок = Истина;
			
			ПолеРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Верх,ЭлементыФормы.ОсновнаяПанель,ГраницаЭлементаУправления.Верх);
			ПолеРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Низ,ЭлементыФормы.ОсновнаяПанель,ГраницаЭлементаУправления.Низ);
			ПолеРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Право,ЭлементыФормы.ОсновнаяПанель,ГраницаЭлементаУправления.Право);
			ПолеРегистра.УстановитьПривязку(ГраницаЭлементаУправления.Лево,ЭлементыФормы.ОсновнаяПанель,ГраницаЭлементаУправления.Лево);
			
			ПолеРегистра.СоздатьКолонки();
			Если НЕ СтрокаТаблицыРегистров.Имя = "ГТДОрганизаций" Тогда
				Если Метаданные.РегистрыНакопления[СтрокаТаблицыРегистров.Имя].ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки Тогда
					КолонкаВидДвижения = ПолеРегистра.Колонки.Вставить(1, "Вид движения");
					КолонкаВидДвижения.Имя = "ВидДвиженияРегистраНакопления";
					КолонкаВидДвижения.УстановитьЭлементУправления(Тип("ПолеВвода"));
					КолонкаВидДвижения.Данные = "ВидДвижения";
					КолонкаВидДвижения.ЭлементУправления.КнопкаВыбора = Истина;
					КолонкаВидДвижения.ЭлементУправления.ВыбиратьТип = Ложь;
				КонецЕсли; 
			КонецЕсли;
			
			ПолеРегистра.Колонки.Регистратор.Видимость = Ложь;
			ПолеРегистра.Колонки.Период.Видимость      = Ложь;
			ПолеРегистра.Колонки.НомерСтроки.Видимость = Ложь;
			
			КоманднаяПанельРегистра.ИсточникДействий = ПолеРегистра;
			КоманднаяПанельРегистра.АвтоЗаполнение = Истина;
			КоманднаяПанельРегистра.Кнопки.Добавить("Разделитель" + СтрокаТаблицыРегистров.Имя);
			Кнопка = КоманднаяПанельРегистра.Кнопки.Добавить(СтрокаТаблицыРегистров.Имя, ТипКнопкиКоманднойПанели.Действие, , Новый Действие("ПереключитьАктивность"));
			Кнопка.Отображение = ОтображениеКнопкиКоманднойПанели.Картинка;
			Кнопка.Картинка    = БиблиотекаКартинок.ПереключитьАктивность;
			Кнопка.Подсказка   = "Переключить активность";
			
		КонецЦикла; 
		
		// Удалим лишние страницы
		Индекс = 0;
		Пока 1 = 1 Цикл
			
			Если Индекс > ЭлементыФормы.ОсновнаяПанель.Страницы.Количество() - 1 Тогда
				Прервать;
			КонецЕсли; 
			
			СтраницаПанели = ЭлементыФормы.ОсновнаяПанель.Страницы[Индекс];
			
			Если ТаблицаРегистровНакопления.Найти(СтраницаПанели.Имя, "Имя") = Неопределено Тогда
				ЭлементыФормы.ОсновнаяПанель.Страницы.Удалить(Индекс);
				Продолжить;
			КонецЕсли;
			
			Индекс = Индекс + 1;
		
		КонецЦикла; 
		
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница = ЭлементыФормы.ОсновнаяПанель.Страницы[0];
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПереключитьАктивность(Кнопка)

	ТекущаяАктивность = Ложь;
	Если ЭлементыФормы[Кнопка.Имя].Значение.Количество() > 0 Тогда
		ТекущаяАктивность = ЭлементыФормы[Кнопка.Имя].Значение[0].Активность;
	КонецЕсли;
	ЭлементыФормы[Кнопка.Имя].Значение.УстановитьАктивность(НЕ ТекущаяАктивность);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ КОМАНДНОЙ ПАНЕЛИ ФОРМЫ

// Обработчик события элемента ДействияФормы.Настройка.
// .
Процедура ДействияФормыНастройка(Кнопка)
	
	ФормаНастройки = ЭтотОбъект.ПолучитьФорму("ФормаНастройки", ЭтаФорма);
	
	ФормаНастройки.СписокРегистровНакопления.Очистить();
	
	Для каждого Набор Из Движения Цикл
		НовыйЭлементСписка = ФормаНастройки.СписокРегистровНакопления.Добавить(Набор.Метаданные().Имя, Набор.Метаданные().Синоним);
		//СД Заплаточка
		Если Найти(ТипЗнч(Набор), "Регистр сведений набор записей:") > 0 Тогда
			Продолжить;
		КонецЕсли;
		//* ДК 2012-09-17
		Если Набор.Метаданные().Имя = "МСФО" Тогда
			Продолжить;
		КонецЕсли;
		Если Метаданные.РегистрыНакопления[Набор.Метаданные().Имя].ВидРегистра = Метаданные.СвойстваОбъектов.ВидРегистраНакопления.Остатки Тогда
			НовыйЭлементСписка.Картинка = БиблиотекаКартинок.РегистрНакопления_Остатки;
		Иначе
			НовыйЭлементСписка.Картинка = БиблиотекаКартинок.РегистрНакопления_Обороты;
		КонецЕсли;
		
		Если ТаблицаРегистровНакопления.Найти(Набор.Метаданные().Имя, "Имя") <> Неопределено Тогда
			НовыйЭлементСписка.Пометка = Истина;
		КонецЕсли; 
		
	КонецЦикла; 
	
	ФормаНастройки.ТЗРегистровНакопления = ТаблицаРегистровНакопления.Выгрузить();
	
	ВозвратОтФормы = ФормаНастройки.ОткрытьМодально();
	
	Если ТипЗнч(ВозвратОтФормы) = Тип("СписокЗначений") Тогда
	
		// Сначала удалим те, у которых сняли флажки
		Индекс = 0;
		Пока 1 = 1 Цикл
		
			Если Индекс > ТаблицаРегистровНакопления.Количество() - 1 Тогда
				Прервать;
			КонецЕсли; 
			
			СтрокаТаблицы = ТаблицаРегистровНакопления[Индекс];
			
			ЭлементСписка = ВозвратОтФормы.НайтиПоЗначению(СтрокаТаблицы.Имя);
			Если ЭлементСписка = Неопределено Тогда
				Движения[СтрокаТаблицы.Имя].Очистить();
				ТаблицаРегистровНакопления.Удалить(СтрокаТаблицы);
				Продолжить;
			КонецЕсли; 
			Если НЕ ЭлементСписка.Пометка Тогда
				Движения[СтрокаТаблицы.Имя].Очистить();
				ТаблицаРегистровНакопления.Удалить(СтрокаТаблицы);
				Продолжить;
			КонецЕсли;
			
			Индекс = Индекс + 1;
		
		КонецЦикла;
		
		// Теперь добавим новые
		Для каждого ЭлементСписка Из ВозвратОтФормы Цикл
		
			Если НЕ ЭлементСписка.Пометка Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТаблицаРегистровНакопления.Найти(ЭлементСписка.Значение, "Имя") <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = ТаблицаРегистровНакопления.Добавить();
			НоваяСтрока.Имя = ЭлементСписка.Значение;
			НоваяСтрока.Представление = ЭлементСписка.Представление;
		
		КонецЦикла; 
		
		ТаблицаРегистровНакопления.Сортировать("Имя ВОЗР");
		
	КонецЕсли; 
	
	НастроитьЗакладкиПанели();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда
        Ответственный = ПараметрыСеанса.ТекущийПользователь;
    КонецЕсли; 
	
	НастроитьЗакладкиПанели();
	
	//+++АК sils 08.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(ЭтоНовый(), "Новый документ", "" + ЭтотОбъект));
	//---АК
КонецПроцедуры

// Обработчик события ПередЗаписью формы.
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Для каждого СтрокаТаблицы Из ТаблицаРегистровНакопления Цикл
		Для каждого Запись Из Движения[СтрокаТаблицы.Имя] Цикл
			Запись.Период = Дата;
		КонецЦикла; 
	КонецЦикла; 
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	УстановитьНовыйНомер();
КонецПроцедуры

//+++АК sils 08.06.2018 ИП-00018876
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Корректировка записей регистров накопления");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ СВОЙСТВ И КАТЕГОРИЙ






