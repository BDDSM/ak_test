
&НаСервереБезКонтекста
Функция ПолучитьЦФОПоТТ(мТорговаяТочка, мДата)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТТ"	, мТорговаяТочка);
	Запрос.УстановитьПараметр("Дата", мДата);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО
	|ИЗ
	|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&Дата, СтруктурнаяЕдиница = &ТТ) КАК ЦФОСтруктурныхЕдиницСрезПоследних";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ЦФО;
	Иначе
		Возврат Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСчетУчетаОС(мОсновноеСредство, мДата)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОсновноеСредство", мОсновноеСредство);
	Запрос.УстановитьПараметр("Дата"			, мДата);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФинансовыйОстатки.Счет
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(&Дата, Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредства)), , Субконто3 = &ОсновноеСредство) КАК ФинансовыйОстатки";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Счет;
	Иначе
		Возврат ПланыСчетов.Финансовый.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДатуЗакрытияТТ(мСклад)
	
	Возврат мСклад.ДатаЗакрытия;
	
КонецФункции

Процедура УстановитьВидимость()
	
	Если ТипЗнч(Объект.Склад) = Тип("СправочникСсылка.СтруктурныеЕдиницы")
			И ЗначениеЗаполнено(Объект.Склад) Тогда
		мДатазакрытия = ПолучитьДатуЗакрытияТТ(Объект.Склад);
		Если ЗначениеЗаполнено(мДатаЗакрытия)
				И мДатаЗакрытия < Объект.Дата Тогда
			Элементы.Склад.ЦветФона = Новый Цвет(222, 222, 222);
		Иначе
			Элементы.Склад.ЦветФона = Новый Цвет(255, 255, 255);
		КонецЕсли;
	Иначе
		Элементы.Склад.ЦветФона = Новый Цвет(255, 255, 255);
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(Объект.Ссылка.ПолучитьОбъект(), ЭтаФорма);
	КонецЕсли;	

	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
		Объект.Склад = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	КонецЕсли;
	
	УстановитьВариант();
	ЗаполнитьРеквизитыОС();
	
КонецПроцедуры

Процедура УстановитьВариант();

	МСФО = АК_ОсновныеСредства.УчетМСФО(Объект.Дата);
	
	УсловноеОформление();	
	
КонецПроцедуры	

Процедура УсловноеОформление()
	
	Элементы.ГруппаВариантНовый.Видимость = МСФО;		
	Элементы.ГруппаВариантСтарый.Видимость = Не МСФО;
	
	Элементы.СчетУчета.Видимость = не МСФО;
	Элементы.Основание.Видимость = МСФО;
	//Элементы.ОсновныеСредстваПерезаполнитьПоИнвентаризации.Видимость = МСФО;	
	
	Если Не МСФО Тогда
		УстановитьВидимость();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.Склад) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		мДата = ?(НЕ ЗначениеЗаполнено(Объект.Ссылка), ТекущаяДата(), Объект.Дата);
		Объект.ЦФО = ПолучитьЦФОПоТТ(Объект.Склад, мДата);
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьОСПоИнвентарномуНомеру(мИнвентарныйНомер)
	
	Возврат Справочники.ОсновныеСредства.НайтиПоРеквизиту("ИнвентарныйНомер", мИнвентарныйНомер);
	
КонецФункции

&НаКлиенте
Процедура Подбор(Команда)
	
	Перем мИнвентарныйНомер;
	
	Если ВвестиЗначение(мИнвентарныйНомер, "Укажите инвентарный номер", Новый ОписаниеТипов("Строка")) Тогда
		ТекОС = ПолучитьОСПоИнвентарномуНомеру(мИнвентарныйНомер);
		Если НЕ ТекОС.Пустая() Тогда
			НоваяСтрока = Объект.Номенклатура.Добавить();
			НоваяСтрока.ОсновноеСредство = ПолучитьОСПоИнвентарномуНомеру(мИнвентарныйНомер);
	
			мДата = ?(НЕ ЗначениеЗаполнено(Объект.Ссылка), ТекущаяДата(), Объект.Дата);
			пСчетУчета = ПолучитьСчетУчетаОС(НоваяСтрока.ОсновноеСредство, мДата);
			Если ЗначениеЗаполнено(пСчетУчета) Тогда
				НоваяСтрока.СчетУчета = пСчетУчета;
			КонецЕсли;
		Иначе
			Сообщить("Не найдено основное средство с указанным инв. номером!");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//+++AK susk

&НаСервере
Функция ПолучитьСуммуДокументаСервер()
	
	// Возврат Объект.Номенклатура.Итог("Сумма");
	Возврат ОБъект.Номенклатура.Итог("Сумма") + Объект.Номенклатура.Итог("АК_СуммаАмортизации");

КонецФункции

//---AK susk

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	Объект.СуммаДокумента = ПолучитьСуммуДокументаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
		НоваяСтрока = Объект.Номенклатура.Добавить();
		НоваяСтрока.ОсновноеСредство 		= ВыбранноеЗначение;
		мДата = ?(НЕ ЗначениеЗаполнено(Объект.Ссылка), ТекущаяДата(), Объект.Дата);
		НоваяСтрока.СчетУчетаЗабалансовый 	= ПолучитьСчетУчетаОС(ВыбранноеЗначение, мДата);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураОсновноеСредствоПриИзменении(Элемент)
	
	ТекДанные = Элементы.ОсновныеСредства.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	мДата = ?(НЕ ЗначениеЗаполнено(Объект.Ссылка), ТекущаяДата(), Объект.Дата);
	пСчетУчета = ПолучитьСчетУчетаОС(ТекДанные.ОсновноеСредство, мДата);
	Если ЗначениеЗаполнено(пСчетУчета) Тогда
		ТекДанные.СчетУчета = пСчетУчета;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСрокИГруппу(Команда)
	
	УстановитьСрокИГруппуНачало();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСрокИГруппуНачало()

	Результат = ОткрытьФормуМодально("Документ.ВводВЭксплуатацию.Форма.ФормаЗаполненияТЧ");		
	
	Если Результат = Неопределено Тогда
		возврат;
	КонецЕсли;
	
	Если Результат.РежимЗаполнения = "Не заполненные" Тогда
		
		Для каждого СтрокаТЧ из Объект.Номенклатура Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТЧ.СрокПолезногоИспользования) Тогда
				СтрокаТЧ.СрокПолезногоИспользования = Результат.СрокПолезногоИспользования;	
			КонецЕсли;
			
			АК_ОсновныеСредства.УстановитьРеквизитыОС(СтрокаТЧ.ОсновноеСредство,Результат,Ложь);
 			
		КонецЦикла;			
		
	КонецЕсли;	
	
	Если Результат.РежимЗаполнения = "Все" Тогда
		
		Для каждого СтрокаТЧ из Объект.Номенклатура Цикл
			
			СтрокаТЧ.СрокПолезногоИспользования = Результат.СрокПолезногоИспользования;				
			АК_ОсновныеСредства.УстановитьРеквизитыОС(СтрокаТЧ.ОсновноеСредство,Результат,Истина);
 			
		КонецЦикла;			
		
	КонецЕсли;
	
	Если Результат.РежимЗаполнения = "Выделенные" Тогда
		
		Для каждого Строка из Элементы.ОсновныеСредства.ВыделенныеСтроки Цикл
			
			СтрокаТЧ = Элементы.ОсновныеСредства.ДанныеСтроки(Строка);
			АК_ОсновныеСредства.УстановитьРеквизитыОС(СтрокаТЧ.ОсновноеСредство,Результат,Истина);
			СтрокаТЧ.СрокПолезногоИспользования = Результат.СрокПолезногоИспользования;
			
		КонецЦикла;			
		
	КонецЕсли;
	
	ЗаполнитьРеквизитыОС();
	
КонецПроцедуры	

Процедура ЗаполнитьРеквизитыОС()

	Для каждого СтрокаОС из Объект.Номенклатура Цикл
		
		ЗаполнитьРеквизитыОСВСтроке(СтрокаОС);	
		
	КонецЦикла;	
	
КонецПроцедуры	

Процедура ЗаполнитьРеквизитыОСВСтроке(СтрокаОС)
	
	Если ЗначениеЗаполнено(СтрокаОС.ОсновноеСредство) Тогда
			
		СтрокаОС.АмортизационнаяГруппаОС = СтрокаОС.ОсновноеСредство.АмортизационнаяГруппа;
		СтрокаОС.ГруппаОС                = СтрокаОС.ОсновноеСредство.ГруппаОС;
		СтрокаОС.КодПоОКОФ               = СтрокаОС.ОсновноеСредство.КодПоОКОФ;
			
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОсновныеСредстваВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Врег(Поле.Имя) =  Врег("ОсновныеСредстваАмортизационнаяГруппаОС") ИЛИ
			Врег(Поле.Имя) =  Врег("ОсновныеСредстваСрокПолезногоИспользования") ИЛИ
			Врег(Поле.Имя) =  Врег("ОсновныеСредстваГруппаОС") ИЛИ
			Врег(Поле.Имя) =  Врег("ОсновныеСредстваКодПоОКОФ") Тогда
			
			
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ВыбранноеПоле",Врег(Поле.Имя)); 
			
		ОткрытьРедактированиеОС(ПараметрыОткрытия);
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРедактированиеОС(ПараметрыОткрытия)
	
  	ВыбраннаяСтрока = Элементы.ОсновныеСредства.ТекущиеДанные;
	
	Если  Элементы.ОсновныеСредства.ВыделенныеСтроки.Количество() = 1 Тогда	
		ПараметрыОткрытия.Вставить("АмортизационнаяГруппа",ВыбраннаяСтрока.ОсновноеСредство.АмортизационнаяГруппа);
		ПараметрыОткрытия.Вставить("ГруппаОС",ВыбраннаяСтрока.ОсновноеСредство.ГруппаОС);
		ПараметрыОткрытия.Вставить("КодПоОКОФ",ВыбраннаяСтрока.ОсновноеСредство.КодПоОКОФ);
		ПараметрыОткрытия.Вставить("СрокПолезногоИспользования",ВыбраннаяСтрока.СрокПолезногоИспользования);	
	Иначе 	
		ПараметрыОткрытия.Вставить("АмортизационнаяГруппа",Перечисления.АмортизационныеГруппы.ПустаяСсылка());
		ПараметрыОткрытия.Вставить("ГруппаОС",Перечисления.ГруппыОС.ПустаяСсылка());
		ПараметрыОткрытия.Вставить("КодПоОКОФ",Справочники.ОбщероссийскийКлассификаторОсновныхФондов.ПустаяСсылка());
		ПараметрыОткрытия.Вставить("СрокПолезногоИспользования",0);	
	КонецЕсли;	
		
	ПараметрыОткрытия.Вставить("ПоказыватьРежим",Ложь);
	
	Результат = ОткрытьФормуМодально("Документ.ВводВЭксплуатацию.Форма.ФормаЗаполненияТЧ",ПараметрыОткрытия);	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураЗаполнения = Новый Структура;
	
	Если ПараметрыОткрытия.ВыбранноеПоле =  Врег("ОсновныеСредстваАмортизационнаяГруппаОС") Тогда 
		СтруктураЗаполнения.Вставить("АмортизационнаяГруппа",Результат.АмортизационнаяГруппа)			
	КонецЕсли;	
		
	Если ПараметрыОткрытия.ВыбранноеПоле =  Врег("ОсновныеСредстваГруппаОС") Тогда 
		СтруктураЗаполнения.Вставить("ГруппаОС",Результат.ГруппаОС)			
	КонецЕсли;	
	
	Если ПараметрыОткрытия.ВыбранноеПоле =  Врег("ОсновныеСредстваКодПоОКОФ") Тогда 
		СтруктураЗаполнения.Вставить("КодПоОКОФ",Результат.КодПоОКОФ)			
	КонецЕсли;	
	
	Для каждого Строка из Элементы.ОсновныеСредства.ВыделенныеСтроки Цикл
		СтрокаТЧ = Элементы.ОсновныеСредства.ДанныеСтроки(Строка);
		АК_ОсновныеСредства.УстановитьРеквизитыОС(СтрокаТЧ.ОсновноеСредство,СтруктураЗаполнения,Истина);
	КонецЦикла;
	
	Если ПараметрыОткрытия.ВыбранноеПоле =  Врег("ОсновныеСредстваСрокПолезногоИспользования") Тогда 
		Для каждого Строка из Элементы.ОсновныеСредства.ВыделенныеСтроки Цикл
			СтрокаТЧ = Элементы.ОсновныеСредства.ДанныеСтроки(Строка);
			СтрокаТЧ.СрокПолезногоИспользования = Результат.СрокПолезногоИспользования;
		КонецЦикла;	
	КонецЕсли;		
	
	ЗаполнитьРеквизитыОС();
	
КонецПроцедуры




&НаКлиенте
Процедура ПерезаполнитьПоИнвентаризации(Команда)
	
	Если Объект.Проведен Тогда		
		Сообщить("Нельзя перезаполнять проведенный документ. Отмените проведение для перезаполнения");		
	Иначе		
		ПерезаполнитьПоИнвентаризацииНаСервере();	
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьПоИнвентаризацииНаСервере()

	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьОСПоИнвентаризацииМСФО();
	ЗначениеВРеквизитФормы(ДокументОбъект,"Объект");

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ЗаполнитьРеквизитыОС();
	Оповестить("СкладскиеАкты_ПослеЗаписи");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСчетУчета(Команда)
	
	УстановитьСчет(ПредопределенноеЗначение("ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации"));

КонецПроцедуры

&НаКлиенте
Процедура УстановитьСчет0110до100(Команда)
	
	УстановитьСчет(ПредопределенноеЗначение("ПланСчетов.Финансовый.ОсновныеСредстваДо100000"),Истина);
	
КонецПроцедуры

Процедура УстановитьСчет(Счет,ОтборПоСтоимости = Ложь)
	
	Для Каждого СтрокаОС из Объект.Номенклатура Цикл
		
		Если ОтборПоСтоимости и СтрокаОС.Сумма > 100000 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаОС.СчетУчетаЗабалансовый = Счет;
				
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура УстановитьСчет0110(Команда)
	
	УстановитьСчет(ПредопределенноеЗначение("ПланСчетов.Финансовый.ОсновныеСредстваДо100000"));

КонецПроцедуры
