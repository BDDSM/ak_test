
Функция СчетУчетаЗабалансовыйРазрешен(пСчетУчетаЗабалансовый)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОграничениеПоСчетамДляОС.СчетУчетаЗабалансовый
	|ИЗ
	|	РегистрСведений.ОграничениеПоСчетамДляОС КАК ОграничениеПоСчетамДляОС
	|ГДЕ
	|	ОграничениеПоСчетамДляОС.Пользователь = &Пользователь";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		Возврат Истина;
	Иначе
		Пока Выборка.Следующий() Цикл
			Если Выборка.СчетУчета = пСчетУчетаЗабалансовый Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция ПроверитьЗадвоения()
	
	тзНоменклатура = Номенклатура.Выгрузить();
	тзНоменклатура.Свернуть("ОсновноеСредство");
	Если тзНоменклатура.Количество() = Номенклатура.Количество() Тогда
		Возврат Истина;
	Иначе
		тзНоменклатура.Колонки.Добавить("Количество");
		тзНоменклатура.ЗаполнитьЗначения(0, "Количество");
		Для Каждого Строка Из Номенклатура Цикл
			пСтрока = тзНоменклатура.Найти(Строка.ОсновноеСредство, "ОсновноеСредство");
			пСтрока.Количество = пСтрока.Количество + 1;
		КонецЦикла;
		
		ОбщегоНазначения.СообщитьОбОшибке("", Истина, "В табличной части имеются задвоения:");
		Для Каждого Строка Из Номенклатура Цикл
			пСтрока = тзНоменклатура.Найти(Строка.ОсновноеСредство, "ОсновноеСредство");
			Если пСтрока.Количество > 1 Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Строка № " + Строка.НомерСтроки + " (" + Строка.ОсновноеСредство + ")", Истина);	
			КонецЕсли;
		КонецЦикла;
		
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьТаблицуКЗаполнению(мДокументИнвентаризации)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НаДату"				, мДокументИнвентаризации.МоментВремени());
	Запрос.УстановитьПараметр("Дата"				, мДокументИнвентаризации.Дата);
	Запрос.УстановитьПараметр("Склад"				, мДокументИнвентаризации.Склад);
	Запрос.УстановитьПараметр("Ссылка"				, мДокументИнвентаризации);
	Запрос.УстановитьПараметр("ПоНесколькимСкладам"	, мДокументИнвентаризации.ПоНесколькимСкладам);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Склад,
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	ТоварыНаСкладахОстатки.Характеристика,
	|	ТоварыНаСкладахОстатки.ЕдиницаИзмерения,
	|	-ТоварыНаСкладахОстатки.КоличествоОстаток КАК Количество
	|ПОМЕСТИТЬ ОбщаяТаблица
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах.Остатки(
	|			&НаДату,
	|			(Склад, Номенклатура, Характеристика, ЕдиницаИзмерения) В
	|				(ВЫБРАТЬ
	|					ВЫБОР
	|						КОГДА &ПоНесколькимСкладам
	|							ТОГДА Товары.Склад
	|						ИНАЧЕ &Склад
	|					КОНЕЦ КАК Склад,
	|					Товары.Номенклатура,
	|					Товары.Характеристика,
	|					Товары.ЕдиницаИзмерения
	|				ИЗ
	|					Документ.ИнвентаризацияСклад.Товары КАК Товары
	|				ГДЕ
	|					Товары.Ссылка = &Ссылка)) КАК ТоварыНаСкладахОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ПоНесколькимСкладам
	|			ТОГДА ИнвентаризацияСкладТовары.Склад
	|		ИНАЧЕ &Склад
	|	КОНЕЦ,
	|	ИнвентаризацияСкладТовары.Номенклатура,
	|	ВЫБОР
	|		КОГДА &ПоНесколькимСкладам
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ИнвентаризацияСкладТовары.Номенклатура.НеВедетсяУчетПоХарактеристикам
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				ИНАЧЕ ИнвентаризацияСкладТовары.Характеристика
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ИнвентаризацияСкладТовары.ЕдиницаИзмерения,
	|	СУММА(ИнвентаризацияСкладТовары.Количество)
	|ИЗ
	|	Документ.ИнвентаризацияСклад.Товары КАК ИнвентаризацияСкладТовары
	|ГДЕ
	|	ИнвентаризацияСкладТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА &ПоНесколькимСкладам
	|			ТОГДА ИнвентаризацияСкладТовары.Склад
	|		ИНАЧЕ &Склад
	|	КОНЕЦ,
	|	ИнвентаризацияСкладТовары.Номенклатура,
	|	ИнвентаризацияСкладТовары.Характеристика,
	|	ИнвентаризацияСкладТовары.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА &ПоНесколькимСкладам
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ИнвентаризацияСкладТовары.Номенклатура.НеВедетсяУчетПоХарактеристикам
	|					ТОГДА ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|				ИНАЧЕ ИнвентаризацияСкладТовары.Характеристика
	|			КОНЕЦ
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбщаяТаблица.Номенклатура,
	|	СУММА(ОбщаяТаблица.Количество) КАК Количество
	|ИЗ
	|	ОбщаяТаблица КАК ОбщаяТаблица
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбщаяТаблица.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	СУММА(ОбщаяТаблица.Количество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ОбщаяТаблица";
	
КонецФункции

Процедура ЗаполнитьОСПоИнвентаризации(мДокументИнвентаризации)
	
	Перем Запрос;
	
	мДата = мДокументИнвентаризации.Дата;
	
	мДатаНовогоУчетаСчетовОС = Константы.ДатаИзмененияУчетаПоСчетамОС.Получить();
	ЕстьНовыйУчетСчетовОС = (НЕ мДата < мДатаНовогоУчетаСчетовОС);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка"		, мДокументИнвентаризации);
	Запрос.УстановитьПараметр("СчетУчета"	, мДокументИнвентаризации.СчетУчета);
	Запрос.УстановитьПараметр("ДатаСреза"	, мДата);
	Запрос.УстановитьПараметр("Склад"		, мДокументИнвентаризации.Склад);
	Если НЕ ЕстьНовыйУчетСчетовОС Тогда
		Запрос.УстановитьПараметр("ЦФО"		, мДокументИнвентаризации.ЦФО);
	КонецЕсли;
	Запрос.УстановитьПараметр("МассивОС"	, мДокументИнвентаризации.ОС.ВыгрузитьКолонку("ОсновноеСредство"));
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФинансовыйОстатки.Субконто3 КАК ОсновноеСредство,
	|	ВЫРАЗИТЬ(ФинансовыйОстатки.Субконто3 КАК Справочник.ОсновныеСредства).ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	-ФинансовыйОстатки.КоличествоОстаток КАК КоличествоРасхождение,
	|	-ФинансовыйОстатки.СуммаОстаток КАК СуммаРасхождение
	|ПОМЕСТИТЬ ВТОсновная
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(
	|			&ДатаСреза,
	|			Счет = &СчетУчета,
	|			,
	|			Субконто2 = &Склад
	|				И Субконто3 В (&МассивОС)
	|				И &УсловиеПоЦФО) КАК ФинансовыйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТЧОС.ОсновноеСредство,
	|	ТЧОС.ОсновноеСредство.ИнвентарныйНомер,
	|	ТЧОС.Количество,
	|	ТЧОС.Сумма
	|ИЗ
	|	Документ.ИнвентаризацияОС.ОС КАК ТЧОС
	|ГДЕ
	|	ТЧОС.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	ИнвентарныйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	&СчетУчета КАК СчетУчетаЗабалансовый,
	|	ВТОсновная.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ВТОсновная.СуммаРасхождение) КАК Сумма
	|ИЗ
	|	ВТОсновная КАК ВТОсновная
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТОсновная.ОсновноеСредство,
	|	ВТОсновная.ИнвентарныйНомер
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТОсновная.КоличествоРасхождение) > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТОсновная.ИнвентарныйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТОсновная";	
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "
	|				И &УсловиеПоЦФО",
		?(НЕ ЕстьНовыйУчетСчетовОС, "
	|				И Субконто1 = &ЦФО", ""));
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.Номенклатура.Загрузить(РезультатЗапроса.Выгрузить());
	
	//+++AK susk
	//ЭтотОбъект.СуммаДокумента = ЭтотОбъект.Номенклатура.Итог("Сумма");
	СуммаДокумента = ПолучитьСуммуДокументаМодуль();	
	//---AK susk
	
КонецПроцедуры


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИнвентаризацияОС") Тогда
		
		МСФО = АК_ОсновныеСредства.УчетМСФО(ДанныеЗаполнения.Дата);
		
		Если МСФО Тогда
			
			ЭтотОбъект.ДокИнвентаризации 	= ДанныеЗаполнения.Ссылка;
			ЭтотОбъект.Организация 			= ДанныеЗаполнения.Организация;
			ЗаполнитьОСПоИнвентаризацииМСФО();

		Иначе
			
			ЭтотОбъект.Склад 				= ДанныеЗаполнения.Склад;
			ЭтотОбъект.ЦФО 					= ДанныеЗаполнения.ЦФО;
			ЭтотОбъект.СчетУчетаБУ 			= ДанныеЗаполнения.СчетУчета;
			ЭтотОбъект.ДокИнвентаризации 	= ДанныеЗаполнения.Ссылка;
			
			ЗаполнитьОСПоИнвентаризации(ДанныеЗаполнения);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОСПоИнвентаризацииМСФО() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнвентаризацияОСОС.ОсновноеСредство,
		|	ВЫБОР
		|		КОГДА ИнвентаризацияОСОС.Местоположение ЕСТЬ NULL 
		|			ТОГДА ИнвентаризацияОСОС.Ссылка.Склад
		|		ИНАЧЕ ИнвентаризацияОСОС.Местоположение
		|	КОНЕЦ КАК Местоположение,
		|	ИнвентаризацияОСОС.Сумма,
		|	ИнвентаризацияОСОС.Инвентарь
		|ИЗ
		|	Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
		|ГДЕ
		|	ИнвентаризацияОСОС.Ссылка = &Ссылка
		|	И ИнвентаризацияОСОС.Количество = 1
		|	И ИнвентаризацияОСОС.КоличествоУчет = 0";

	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.ДокИнвентаризации);
	ТаблицаОС = Запрос.Выполнить().Выгрузить();
	
	ТаблицаОС = АК_ОсновныеСредства.СформироватьТаблицуДанных(ТаблицаОС);

	ЭтотОбъект.Номенклатура.Загрузить(ТаблицаОС);
		
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//+++AK susk
	//ЭтотОбъект.СуммаДокумента = ЭтотОбъект.Номенклатура.Итог("Сумма");
	СуммаДокумента = ПолучитьСуммуДокументаМодуль();	
	//---AK susk
	
	Если СокрЛП(ЭтотОбъект.Комментарий) = ""
			И ЭтотОбъект.Номенклатура.Количество() > 0 Тогда
		
		ВремТаблица = Новый ТаблицаЗначений;
		ВремТаблица.Колонки.Добавить("Наименование"	, Новый ОписаниеТипов("Строка"));
		ВремТаблица.Колонки.Добавить("Количество"	, Новый ОписаниеТипов("Число"));
		
		Для Каждого СтрокаТЧ Из ЭтотОбъект.Номенклатура Цикл
			НоваяСтрока = ВремТаблица.Добавить();
			НоваяСтрока.Наименование 	= СокрЛП(СтрокаТЧ.ОсновноеСредство.Наименование);
			НоваяСтрока.Количество 		= 1;
		КонецЦикла;	
		
		ВремТаблица.Свернуть("Наименование", "Количество");
		
		СтрокаКомментария = "";
		Для Каждого СтрокаТаблицы Из ВремТаблица Цикл			
			СтрокаКомментария = СтрокаКомментария + ", " + СтрокаТаблицы.Наименование +
								?(СтрокаТаблицы.Количество > 1, " " + Формат(СтрокаТаблицы.Количество, "ЧГ=") + "шт", "")			
		КонецЦикла;
		СтрокаКомментария = Сред(СтрокаКомментария, 3);
		
		ЭтотОбъект.Комментарий = СокрЛП(Лев(СтрокаКомментария, 200));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Перем Заголовок;
	
	// Проверка ручной корректировки
	Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(ЭтотОбъект.РучнаяКорректировка, 
		Отказ, 
		Заголовок, 
		ЭтотОбъект,,
		Ложь) Тогда
		Возврат
	КонецЕсли;
	
	Если НЕ ПроверитьЗадвоения() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	МСФО = АК_ОсновныеСредства.УчетМСФО(ЭтотОбъект.Дата);
	
	Если МСФО Тогда
	      
	    АК_ОсновныеСредства.ВыполнитьКонтрольДублейНомеров(ЭтотОбъект,Отказ);
		АК_ОсновныеСредства.ВыполнитьКонтрольВводаВЭксплуатацию(ЭтотОбъект,Отказ);
		ВыполнитьРасходКОприходованию();
		ВыполнитьДвиженияОС_МСФО(Отказ);
		
	Иначе
		
		Для Каждого СтрокаТЧ Из ЭтотОбъект.Номенклатура Цикл
			Если НЕ СчетУчетаЗабалансовыйРазрешен(СтрокаТЧ.СчетУчетаЗабалансовый) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("В строке № " + СтрокаТЧ.НомерСтроки + " недостаточно прав доступа к счету учета " +
													СтрокаТЧ.СчетУчетаЗабалансовый);
				Отказ = Истина;
				Возврат;
			КонецЕсли;
		КонецЦикла;
		
		мДатаНовогоУчетаСчетовОС = Константы.ДатаИзмененияУчетаПоСчетамОС.Получить();
		
		ДвиженияФинансовый = ЭтотОбъект.Движения.Финансовый;
		ДвиженияФинансовый.Записывать = Истина;
		//ДвиженияФинансовый.РазрешитьЗаписьБезПроверки 	= НЕ ЭтотОбъект.НеФормироватьПроводкиПоБалансовымСчетам;
		
		
		Для Каждого СтрокаТЧ Из ЭтотОбъект.Номенклатура Цикл

			Проводка = ДвиженияФинансовый.Добавить();
			Проводка.Период = ЭтотОбъект.Дата;
			Проводка.СчетДт = СтрокаТЧ.СчетУчетаЗабалансовый;
			Если Проводка.Период < мДатаНовогоУчетаСчетовОС Тогда
				Проводка.СубконтоДт.ЦФО 			= ЭтотОбъект.ЦФО;
			КонецЕсли;
			Проводка.СубконтоДт.МестаХраненияОС 	= ЭтотОбъект.Склад;
			Проводка.СубконтоДт.ОсновныеСредства 	= СтрокаТЧ.ОсновноеСредство;
			Проводка.КоличествоДт 	= 1;
			Проводка.Сумма 			= 0;//ВыборкаФин.Сумма;

		КонецЦикла;
		
	КонецЕсли;	
		
КонецПроцедуры

Процедура ВыполнитьРасходКОприходованию()
	
	
	Движения.АК_ОсновныеСредстваКСписаниюОприходованию.Записывать = Истина;
	Движения.АК_ОсновныеСредстваКСписаниюОприходованию.Очистить();	
	
	Если ЗначениеЗаполнено(ДокИнвентаризации) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОприходованиеОСНоменклатура.ОсновноеСредство,
			|	1 КАК Количество,
			|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДВижения,
			|	ОприходованиеОСНоменклатура.Ссылка.Дата КАК Период
			|ИЗ
			|	Документ.ОприходованиеОС.Номенклатура КАК ОприходованиеОСНоменклатура
			|ГДЕ
			|	ОприходованиеОСНоменклатура.Ссылка = &Ссылка";

		Запрос.УстановитьПараметр("Ссылка", Ссылка);

		Результат = Запрос.Выполнить().Выгрузить();
        Движения.АК_ОсновныеСредстваКСписаниюОприходованию.Загрузить(Результат);
		
	КонецЕсли;		
	
КонецПроцедуры	

Процедура ВыполнитьДвиженияОС_МСФО(Отказ)
	
		Запрос = Новый Запрос;
		
		//+++AK susk
		
		//Запрос.Текст = 
		//"ВЫБРАТЬ РАЗЛИЧНЫЕ
		//|	ОприходованиеОСНоменклатура.ОсновноеСредство,
		//|	ОприходованиеОСНоменклатура.Ссылка,
		//|	ОприходованиеОСНоменклатура.НомерСтроки,
		//|	ОприходованиеОСНоменклатура.СрокПолезногоИспользования,
		//|	ОприходованиеОСНоменклатура.АмортизационнаяГруппа,
		//|	ОприходованиеОСНоменклатура.Местоположение,
		//|	ОприходованиеОСНоменклатура.Ссылка.Дата КАК ДатаДокумента,
		//|	ОприходованиеОСНоменклатура.Ссылка.Организация,
		//|	ОприходованиеОСНоменклатура.Сумма
		//|ПОМЕСТИТЬ втОсновныеСредства
		//|ИЗ
		//|	Документ.ОприходованиеОС.Номенклатура КАК ОприходованиеОСНоменклатура
		//|ГДЕ
		//|	ОприходованиеОСНоменклатура.Ссылка = &Ссылка
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	НастройкаОтраженияОперацийВУчетеСрезПоследних.Счет,
		//|	НастройкаОтраженияОперацийВУчетеСрезПоследних.ЦФО,
		//|	НастройкаОтраженияОперацийВУчетеСрезПоследних.СтатьяДоходовРасходов,
		//|	НастройкаОтраженияОперацийВУчетеСрезПоследних.СтруктурнаяЕдиница
		//|ПОМЕСТИТЬ втНастройкаОтражения
		//|ИЗ
		//|	РегистрСведений.НастройкаОтраженияОперацийВУчете.СрезПоследних(&ДатаОкончания, ВидОперации = ЗНАЧЕНИЕ(перечисление.ВидыОперацийВУчете.ОсновныеСредства_Оприходование)) КАК НастройкаОтраженияОперацийВУчетеСрезПоследних
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	втОсновныеСредства.ОсновноеСредство,
		//|	втОсновныеСредства.Ссылка,
		//|	втОсновныеСредства.НомерСтроки,
		//|	втОсновныеСредства.ДатаДокумента КАК Период,
		//|	втОсновныеСредства.Организация,
		//|	1 КАК Количество,
		//|	втНастройкаОтражения.Счет КАК СчетКт,
		//|	втНастройкаОтражения.ЦФО,
		//|	втНастройкаОтражения.СтатьяДоходовРасходов,
		//|	втОсновныеСредства.Сумма,
		//|	ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации) КАК СчетДт,
		//|	""Оприходование основных средств"" КАК Содержание,
		//|	ВЫБОР
		//|		КОГДА втОсновныеСредства.Местоположение ССЫЛКА Справочник.Склады
		//|			ТОГДА втОсновныеСредства.Местоположение.Владелец
		//|		ИНАЧЕ втОсновныеСредства.Местоположение
		//|	КОНЕЦ КАК ТорговаяТочка,
		//|	втНастройкаОтражения.СтруктурнаяЕдиница
		//|ИЗ
		//|	втОсновныеСредства КАК втОсновныеСредства,
		//|	втНастройкаОтражения КАК втНастройкаОтражения
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	втОсновныеСредства.ДатаДокумента КАК Период,
		//|	втОсновныеСредства.ОсновноеСредство,
		//|	втОсновныеСредства.Местоположение,
		//|	втОсновныеСредства.Организация
		//|ИЗ
		//|	втОсновныеСредства КАК втОсновныеСредства
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	втОсновныеСредства.ДатаДокумента КАК Период,
		//|	втОсновныеСредства.ОсновноеСредство,
		//|	втОсновныеСредства.Организация,
		//|	втОсновныеСредства.ДатаДокумента КАК ДатаВводаВЭксплуатацию,
		//|	втОсновныеСредства.ОсновноеСредство.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
		//|	втОсновныеСредства.СрокПолезногоИспользования КАК СрокАмортизации,
		//|	ИСТИНА КАК НачислятьАмортизацию,
		//|	втОсновныеСредства.Сумма КАК НачальнаяСтоимость
		//|ИЗ
		//|	втОсновныеСредства КАК втОсновныеСредства";
		
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ОприходованиеОСНоменклатура.ОсновноеСредство,
		               |	ОприходованиеОСНоменклатура.Ссылка,
		               |	ОприходованиеОСНоменклатура.НомерСтроки,
		               |	ОприходованиеОСНоменклатура.СрокПолезногоИспользования,
		               |	ОприходованиеОСНоменклатура.АмортизационнаяГруппа,
		               |	ОприходованиеОСНоменклатура.Местоположение,
		               |	ОприходованиеОСНоменклатура.Ссылка.Дата КАК ДатаДокумента,
		               |	ОприходованиеОСНоменклатура.Ссылка.Организация,
		               |	ОприходованиеОСНоменклатура.Сумма,
		               |	ОприходованиеОСНоменклатура.АК_СуммаАмортизации КАК СуммаАмортизации,
		               |	ОприходованиеОСНоменклатура.АК_ДатаВводаВЭксплуатацию КАК ДатаВводаВЭксплуатацию,
		               |	ОприходованиеОСНоменклатура.СчетУчетаЗабалансовый КАК СчетУчета
		               |ПОМЕСТИТЬ втОсновныеСредства
		               |ИЗ
		               |	Документ.ОприходованиеОС.Номенклатура КАК ОприходованиеОСНоменклатура
		               |ГДЕ
		               |	ОприходованиеОСНоменклатура.Ссылка = &Ссылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	НастройкаОтраженияОперацийВУчетеСрезПоследних.Счет,
		               |	НастройкаОтраженияОперацийВУчетеСрезПоследних.ЦФО,
		               |	НастройкаОтраженияОперацийВУчетеСрезПоследних.СтатьяДоходовРасходов,
		               |	НастройкаОтраженияОперацийВУчетеСрезПоследних.СтруктурнаяЕдиница
		               |ПОМЕСТИТЬ втНастройкаОтражения
		               |ИЗ
		               |	РегистрСведений.НастройкаОтраженияОперацийВУчете.СрезПоследних(&ДатаОкончания, ВидОперации = ЗНАЧЕНИЕ(перечисление.ВидыОперацийВУчете.ОсновныеСредства_Оприходование)) КАК НастройкаОтраженияОперацийВУчетеСрезПоследних
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	НастройкаОтраженияОперацийВУчетеСрезПоследних.Счет,
		               |	НастройкаОтраженияОперацийВУчетеСрезПоследних.ЦФО,
		               |	НастройкаОтраженияОперацийВУчетеСрезПоследних.СтатьяДоходовРасходов,
		               |	НастройкаОтраженияОперацийВУчетеСрезПоследних.СтруктурнаяЕдиница
		               |ПОМЕСТИТЬ втНастройкаОтраженияАмортизация
		               |ИЗ
		               |	РегистрСведений.НастройкаОтраженияОперацийВУчете.СрезПоследних(&ДатаОкончания, ВидОперации = ЗНАЧЕНИЕ(перечисление.ВидыОперацийВУчете.ОсновныеСредства_НачислениеАмортизации)) КАК НастройкаОтраженияОперацийВУчетеСрезПоследних
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	втОсновныеСредства.ОсновноеСредство,
		               |	втОсновныеСредства.Ссылка,
		               |	втОсновныеСредства.НомерСтроки,
		               |	втОсновныеСредства.ДатаДокумента КАК Период,
		               |	втОсновныеСредства.Организация,
		               |	1 КАК Количество,
		               |	втНастройкаОтражения.Счет КАК СчетКт,
		               |	втНастройкаОтраженияАмортизация.Счет КАК СчетДтАмортизация,
		               |	втНастройкаОтражения.ЦФО,
		               |	втНастройкаОтражения.СтатьяДоходовРасходов,
		               |	втОсновныеСредства.Сумма,
		               |	ВЫБОР
		               |		КОГДА втОсновныеСредства.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000)
		               |			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000)
		               |		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации)
		               |	КОНЕЦ КАК СчетДт,
		               |	ВЫБОР
		               |		КОГДА втОсновныеСредства.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000)
		               |			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредствДо100000)
		               |		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредств)
		               |	КОНЕЦ КАК СчетКтАмортизация,
		               |	""Оприходование основных средств"" КАК Содержание,
		               |	ВЫБОР
		               |		КОГДА втОсновныеСредства.Местоположение ССЫЛКА Справочник.Склады
		               |			ТОГДА втОсновныеСредства.Местоположение.Владелец
		               |		ИНАЧЕ втОсновныеСредства.Местоположение
		               |	КОНЕЦ КАК ТорговаяТочка,
		               |	втНастройкаОтражения.СтруктурнаяЕдиница,
		               |	втНастройкаОтраженияАмортизация.ЦФО КАК ЦФОАмортизация,
		               |	втНастройкаОтражения.СтатьяДоходовРасходов КАК СтатьяДоходовРасходовАмортизация,
		               |	втНастройкаОтраженияАмортизация.СтруктурнаяЕдиница КАК СтруктурнаяЕдиницаАмортизация,
		               |	втОсновныеСредства.СуммаАмортизации
		               |ИЗ
		               |	втОсновныеСредства КАК втОсновныеСредства,
		               |	втНастройкаОтражения КАК втНастройкаОтражения,
		               |	втНастройкаОтраженияАмортизация КАК втНастройкаОтраженияАмортизация
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	втОсновныеСредства.ДатаДокумента КАК Период,
		               |	втОсновныеСредства.ОсновноеСредство,
		               |	втОсновныеСредства.Местоположение,
		               |	втОсновныеСредства.Организация
		               |ИЗ
		               |	втОсновныеСредства КАК втОсновныеСредства
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	втОсновныеСредства.ДатаДокумента КАК Период,
		               |	втОсновныеСредства.ОсновноеСредство,
		               |	втОсновныеСредства.Организация,
		               |	ВЫБОР
		               |		КОГДА втОсновныеСредства.ДатаВводаВЭксплуатацию = ДАТАВРЕМЯ(1, 1, 1)
		               |			ТОГДА втОсновныеСредства.ДатаДокумента
		               |		ИНАЧЕ втОсновныеСредства.ДатаВводаВЭксплуатацию
		               |	КОНЕЦ КАК ДатаВводаВЭксплуатацию,
		               |	втОсновныеСредства.ОсновноеСредство.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
		               |	втОсновныеСредства.СрокПолезногоИспользования КАК СрокАмортизации,
		               |	ИСТИНА КАК НачислятьАмортизацию,
		               |	втОсновныеСредства.Сумма КАК НачальнаяСтоимость,
		               |	втОсновныеСредства.СчетУчета,
		               |	ВЫБОР
		               |		КОГДА втОсновныеСредства.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000)
		               |			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредствДо100000)
		               |		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредств)
		               |	КОНЕЦ КАК СчетУчетаАмортизация,
		               |	ИСТИНА КАК ЭтоОприходование
		               |ИЗ
		               |	втОсновныеСредства КАК втОсновныеСредства";
					   
		//---AK susk					   
		
	Запрос.УстановитьПараметр("ДатаОкончания",КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Ссылка",Ссылка);

 	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ЭтотОбъект.Движения.Финансовый.Очистить();
	ЭтотОбъект.Движения.Финансовый.Записывать = Истина;
	
	//+++AK susk
	//ТаблицаФинансовый = РезультатЗапроса[2].Выгрузить();
	//ТаблицаСостояние  = РезультатЗапроса[3].Выгрузить();	
	//ТаблицаПринятыеКУчету = РезультатЗапроса[4].Выгрузить();
	
	//Для каждого СтрокаОС из ТаблицаФинансовый Цикл
	//		
	//	Если не ЗначениеЗаполнено(СтрокаОС.СчетДт) Тогда
	//		Сообщить("Не найдена настройка отражения операции оприходования основных средств в учете");
	//		Отказ = Истина;
	//		Возврат;
	//	КонецЕсли;

	//	//Если не ЗначениеЗаполнено(СтрокаОС.ТорговаяТочка) Тогда
	//	//	Сообщить("Не заполнено местоположение для основного средства: " + СтрокаОС.ОсновноеСредство);
	//	//	Отказ = Истина;
	//	//КонецЕсли;	
	//	
	//	НоваяПроводка = ЭтотОбъект.Движения.Финансовый.Добавить();
	//	
	//	ЗаполнитьЗначенияСвойств(НоваяПроводка,СтрокаОС);
	//	
	//	НоваяПроводка.СубконтоДт.ОсновныеСредства = СтрокаОС.ОсновноеСредство;
	//	
	//	НоваяПроводка.СубконтоКт.СтатьиДоходовРасходов = СтрокаОС.СтатьяДоходовРасходов;
	//	
	//	Если ЗначениеЗаполнено(СтрокаОС.ТорговаяТочка) Тогда
	//		НоваяПроводка.СубконтоКт.ТорговыеТочки = СтрокаОС.ТорговаяТочка; 
	//	Иначе 
	//		Если ЗначениеЗаполнено(СтрокаОС.СтруктурнаяЕдиница) Тогда
	//			НоваяПроводка.СубконтоКт.ТорговыеТочки = СтрокаОС.СтруктурнаяЕдиница;
	//		КонецЕсли;	
	//	КонецЕсли;	
	//		
	//	НоваяПроводка.СубконтоКт.ЦФО = СтрокаОС.ЦФО;			
	//
	//КонецЦикла;	
	
	ТаблицаФинансовый = РезультатЗапроса[3].Выгрузить();
	ТаблицаСостояние  = РезультатЗапроса[4].Выгрузить();	
	ТаблицаПринятыеКУчету = РезультатЗапроса[5].Выгрузить();
		
	Для каждого СтрокаОС из ТаблицаФинансовый Цикл
			
		Если не ЗначениеЗаполнено(СтрокаОС.СчетКт) И НЕ ЗначениеЗаполнено(СтрокаОС.СчетКтАмортизация) Тогда
			Сообщить("Не найдена настройка отражения операции оприходования основных средств в учете");
			Отказ = Истина;
			Возврат;
		КонецЕсли;

		// оприходование		
		Если ЗначениеЗаполнено(СтрокаОС.СчетКт) И СтрокаОС.Сумма <> 0 Тогда
			НоваяПроводка = ЭтотОбъект.Движения.Финансовый.Добавить();
		
			ЗаполнитьЗначенияСвойств(НоваяПроводка,СтрокаОС);
		
			НоваяПроводка.СубконтоДт.ОсновныеСредства = СтрокаОС.ОсновноеСредство;
		
			НоваяПроводка.СубконтоКт.СтатьиДоходовРасходов = СтрокаОС.СтатьяДоходовРасходов;
		
			Если ЗначениеЗаполнено(СтрокаОС.ТорговаяТочка) Тогда
				НоваяПроводка.СубконтоКт.ТорговыеТочки = СтрокаОС.ТорговаяТочка; 
			Иначе 
				Если ЗначениеЗаполнено(СтрокаОС.СтруктурнаяЕдиница) Тогда
					НоваяПроводка.СубконтоКт.ТорговыеТочки = СтрокаОС.СтруктурнаяЕдиница;
				КонецЕсли;	
			КонецЕсли;	
			
			НоваяПроводка.СубконтоКт.ЦФО = СтрокаОС.ЦФО;
			
		КонецЕсли;
		
		//амортизация		
		Если ЗначениеЗаполнено(СтрокаОС.СчетКтАмортизация) И СтрокаОС.СуммаАмортизации <> 0 Тогда
			НоваяПроводка = ЭтотОбъект.Движения.Финансовый.Добавить();
		
			ЗаполнитьЗначенияСвойств(НоваяПроводка,СтрокаОС);
			
			НоваяПроводка.Сумма = СтрокаОС.СуммаАмортизации;
			НоваяПроводка.СчетКт = СтрокаОС.СчетКтАмортизация;
			НоваяПроводка.СчетДт = СтрокаОС.СчетДтАмортизация;
		
			НоваяПроводка.СубконтоКт.ОсновныеСредства = СтрокаОС.ОсновноеСредство;
		
			НоваяПроводка.СубконтоДт.СтатьиДоходовРасходов = СтрокаОС.СтатьяДоходовРасходовАмортизация;
		
			Если ЗначениеЗаполнено(СтрокаОС.ТорговаяТочка) Тогда
				НоваяПроводка.СубконтоДт.ТорговыеТочки = СтрокаОС.ТорговаяТочка; 
			Иначе 
				Если ЗначениеЗаполнено(СтрокаОС.СтруктурнаяЕдиницаАмортизация) Тогда
					НоваяПроводка.СубконтоДт.ТорговыеТочки = СтрокаОС.СтруктурнаяЕдиницаАмортизация;
				КонецЕсли;	
			КонецЕсли;	
			
			НоваяПроводка.СубконтоДт.ЦФО = СтрокаОС.ЦФОАмортизация;
			
		КонецЕсли;
	
	КонецЦикла;	
	
	//---AK susk
		
	ЭтотОбъект.Движения.СостояниеОС.Записывать = Истина;
	ЭтотОбъект.Движения.СостояниеОС.Загрузить(ТаблицаСостояние);
	
	ЭтотОбъект.Движения.ПринятыеКУчетуОС.Записывать = Истина;
	ЭтотОбъект.Движения.ПринятыеКУчетуОС.Загрузить(ТаблицаПринятыеКУчету);
	
			
		
КонецПроцедуры	

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ, ЭтотОбъект.РучнаяКорректировка, Истина,	Ложь);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МСФО = АК_ОсновныеСредства.УчетМСФО(ЭтотОбъект.Дата);
	
	Если МСФО Тогда
		
		Реквизит = ПроверяемыеРеквизиты.Найти("Номенклатура.СчетУчетаЗабалансовый");
		ПроверяемыеРеквизиты.Удалить(Реквизит);		
		
	КонецЕсли;	
	
КонецПроцедуры

//+++AK susk

Функция ПолучитьСуммуДокументаМодуль() Экспорт
	
	Возврат Номенклатура.Итог("Сумма") + Номенклатура.Итог("АК_СуммаАмортизации");
		
КонецФункции

//---AK susk
