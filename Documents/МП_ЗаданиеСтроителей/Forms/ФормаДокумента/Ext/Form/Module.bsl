
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПриЧтенииСозданииНаСервере();
	//AK LOBV Устанавливаем фильтр для истории
	Если Объект.Проект тогда
		ЭлементОтбора = ЭтаФорма.История.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Проект");
		ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение 	= Объект.Ссылка;
		ЭлементОтбора.Использование 	= Истина;
		
		Элементы.Фотографии.ОтборСтрок=Новый ФиксированнаяСтруктура("ЭтоПланировка",Ложь);
		//.ФотографииЭтоПланировка.Установить(Ложь);
		Элементы.Фотографии1.ОтборСтрок=Новый ФиксированнаяСтруктура("ЭтоПланировка",Истина);
		//.ФотографииЭтоПланировка1.Установить(Истина);
	Иначе
		ЭлементОтбора = ЭтаФорма.История.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Этап");
		ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение 	= Объект.Ссылка;
		ЭлементОтбора.Использование 	= Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ПриЧтенииСозданииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Элементы.Дата.ТолькоПросмотр = Истина;
		Элементы.Номер.ТолькоПросмотр = Истина;
		Элементы.ОбъектCтроительства.ТолькоПросмотр = Истина;
	Иначе
		Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Планирование");
		Объект.Проект=Истина;
		Объект.Ответственный=ПараметрыСеанса.ТекущийПользователь.ФизЛицо;
		Объект.ТипСобытия=Справочники.МП_СобытияСтроителей.НайтиПоНаименованию("Открытие магазина");
		//МассивПоставщиков=Новый Массив;
		//МассивПоставщиков.Добавить("Строители");
		//МассивПоставщиков.Добавить("Холодильное оборудование");
		//МассивПоставщиков.Добавить("Кондиционирование");
		//МассивПоставщиков.Добавить("Реклама");
		//МассивПоставщиков.Добавить("Согласование рекламы");
		//МассивПоставщиков.Добавить("Пожарка");
		//МассивПоставщиков.Добавить("Охранка");
		//МассивПоставщиков.Добавить("Видеонаблюдение");
		//МассивПоставщиков.Добавить("Мебель");
		//МассивПоставщиков.Добавить("Комплексная поставка");
		//МассивПоставщиков.Добавить("Входные группы");
		//МассивПоставщиков.Добавить("Поставщик света");
		//МассивПоставщиков.Добавить("Стеллажка");
		//МассивПоставщиков.Добавить("Накопители");
		//МассивПоставщиков.Добавить("Проектирование");
		//МассивПоставщиков.Добавить("Прочее");
		//Для каждого Пост из МассивПоставщиков цикл
		//	НоваяСтрокаПоставщика=Объект.Поставщики.Добавить();
		//	НоваяСтрокаПоставщика.Комментарий=Пост;
		//КонецЦикла;
		ОтборПоставщиков=Новый Структура;
		ОтборПоставщиков.Вставить("Использование",Истина);
		ВыборкаПоставщиков=РегистрыСведений.АК_ПоставщикиСтроителей.Выбрать(ОтборПоставщиков);
		Пока ВыборкаПоставщиков.Следующий() цикл
			НоваяСтрокаПоставщика=Объект.Поставщики.Добавить();
			НоваяСтрокаПоставщика.Поставщик=ВыборкаПоставщиков.Поставщик;
			НоваяСтрокаПоставщика.Комментарий=ВыборкаПоставщиков.РольПоставщика;
			НоваяСтрокаПоставщика.ЭлПочта=ВыборкаПоставщиков.АдресЭлПочты;
		КонецЦикла;
	КонецЕсли;
	
	ТекСтатус = Объект.Статус;
	//AK Lobv 18.12.16 новые статусы
	Элементы.ДатаФактическогоЗавершения.ТолькоПросмотр = Строка(ТекСтатус) <> Строка(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Завершено"));
	Элементы.ДатаНачала.ТолькоПросмотр=Ложь;
	МассивСтатусовПланирования=Новый Массив;
	МассивСтатусовПланирования.Добавить(Перечисления.СтатусыСтроительства.Планирование);
	МассивСтатусовПланирования.Добавить(Перечисления.СтатусыСтроительства.НеСогласовано);
	МассивСтатусовПланирования.Добавить(Перечисления.СтатусыСтроительства.ТребуетДоработки);
	Элементы.ДатаПлановогоЗавершения.ТолькоПросмотр=МассивСтатусовПланирования.Найти(ТекСтатус)=Неопределено;
	Элементы.ДатаПринятия.Доступность=УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.РазрешитьУстановкуДатыПринятияОбъекта, Ложь);
				
	//
	//
	//Если ТекСтатус = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Начало") Тогда
	//	Элементы.ДатаНачала.ТолькоПросмотр = Ложь;
	//	Элементы.ДатаПлановогоЗавершения.ТолькоПросмотр = Ложь;
	//	Элементы.ДатаФактическогоЗавершения.ТолькоПросмотр = Истина;
	//ИначеЕсли ТекСтатус = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Продолжение") Тогда
	//	Элементы.ДатаНачала.ТолькоПросмотр = Истина;
	//	Элементы.ДатаПлановогоЗавершения.ТолькоПросмотр = Ложь;
	//	Элементы.ДатаФактическогоЗавершения.ТолькоПросмотр = Истина;
	//ИначеЕсли ТекСтатус = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Завершено") Тогда
	//	Элементы.Статус.ТолькоПросмотр = Истина;
	//	Элементы.ДатаНачала.ТолькоПросмотр = Истина;
	//	Элементы.ДатаПлановогоЗавершения.ТолькоПросмотр = Истина;
	//	Элементы.ДатаФактическогоЗавершения.ТолькоПросмотр = Ложь;
	//ИначеЕсли ТекСтатус = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Приостановлено") Тогда
	//	Элементы.ДатаНачала.ТолькоПросмотр = Истина;
	//	Элементы.ДатаПлановогоЗавершения.ТолькоПросмотр = Ложь;
	//	Элементы.ДатаФактическогоЗавершения.ТолькоПросмотр = Истина;
	//Иначе
	//	Элементы.ДатаНачала.ТолькоПросмотр = Истина;
	//	Элементы.ДатаПлановогоЗавершения.ТолькоПросмотр = Истина;
	//	Элементы.ДатаФактическогоЗавершения.ТолькоПросмотр = Истина;
	//КонецЕсли;
	
	//Элементы.Комментарий.Видимость = (ТекСтатус = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Приостановлено"));
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТекСтатус = Объект.Ссылка.Статус;
	КонецЕсли;
	Элементы.СписокЭтаповДобавитьСтандартныйНабор.Доступность=Объект.Проект;
	ОтразитьПроектИЭтапы();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ПриЧтенииСозданииНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ФотографииПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	ОтображаемоеФото = ?(ПустаяСтрока(ТекущиеДанные.ОтносительноеИмяФайла), "", ПолучитьФотоНаСервере(ТекущиеДанные.ОтносительноеИмяФайла));
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьФотоНаСервере(ОтносительноеИмяФайла)
	
	Картинка = Новый Картинка;
	
	КаталогФотографий = СокрЛП(Константы.МП_КаталогХраненияФайловЗадачМП.Получить());
	Если Прав(КаталогФотографий, 1) <> "\" Тогда
		КаталогФотографий = КаталогФотографий + "\";
	КонецЕсли;
	
	ФайлКартинки = Новый Файл(КаталогФотографий + ОтносительноеИмяФайла);
	Если ФайлКартинки.Существует() Тогда
		Картинка = Новый Картинка(КаталогФотографий + ОтносительноеИмяФайла);
	КонецЕсли;
	
	Возврат ПоместитьВоВременноеХранилище(Картинка);
	
КонецФункции

&НаКлиенте
Процедура ФотографииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ИдентификаторФотографии = Новый УникальныйИдентификатор;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФотографииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
Перем ИдентификаторФотографии, ОтносительноеИмяФайла, Расширение;
	
	Отказ = Истина;
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.Заголовок = "Выберите файл с фотографией";
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	ДиалогОткрытияФайла.ПредварительныйПросмотр = Истина;
	ДиалогОткрытияФайла.ПроверятьСуществованиеФайла = Истина;
	ДиалогОткрытияФайла.Фильтр = 
		"Все картинки (*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf)|*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf|" 
		+ "Формат bmp (*.bmp;*.dib;*.rle)|*.bmp;*.dib;*.rle|"
		+ "Формат JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|"
		+ "Формат TIFF (*.tif)|*.tif|"
		+ "Формат GIF (*.gif)|*.gif|"
		+ "Формат PNG (*.png)|*.png|"
		+ "Формат icon (*.ico)|*.ico|"
		+ "Формат метафайл (*.wmf;*.emf)|*.wmf;*.emf|"; // картинки
	
	Если ДиалогОткрытияФайла.Выбрать() = Ложь Тогда
	    Возврат;
	КонецЕсли;
	
	ФайлКартинки = Новый Файл(ДиалогОткрытияФайла.ПолноеИмяФайла);
	ИдентификаторФотографии = Строка(Новый УникальныйИдентификатор);
	ДанныеФотографии = Новый Структура("ИдентификаторФотографии, Расширение", ИдентификаторФотографии, ФайлКартинки.Расширение);
	
	ОтносительноеИмяФайла = ОбменМобильноеПриложениеПереопределяемый.ОбновитьФайлФотографииНаДиске(Новый ДвоичныеДанные(ФайлКартинки.ПолноеИмя), Объект.Ссылка, ДанныеФотографии);
	Если ОтносительноеИмяФайла = Неопределено Тогда
		Предупреждение("Ошибка при добавлении фотографии!");
		Возврат;
	КонецЕсли;
	
	СтрокаФотографии = Объект.Фотографии.Добавить();
	СтрокаФотографии.ИмяФайла = ФайлКартинки.Имя;
	СтрокаФотографии.ИдентификаторФотографии = ИдентификаторФотографии;
	СтрокаФотографии.ОтносительноеИмяФайла = ОтносительноеИмяФайла;
	//AK Lobv 050217>
	СтрокаФотографии.Дата=ТекущаяДата();
	СтрокаФотографии.ЭтоПланировка=Ложь;
	
	Элемент.ТекущаяСтрока = СтрокаФотографии.ПолучитьИдентификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура ФотографииПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	Если Вопрос("Удалить фотографию?", РежимДиалогаВопрос.ДаНетОтмена,,, "Задание строителей") <> КодВозвратаДиалога.Да Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекущиеДанные.ОтносительноеИмяФайла) Тогда
		УдалитьФотографиюНаСервере(ТекущиеДанные.ОтносительноеИмяФайла);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьФотографиюНаСервере(ОтносительноеИмяФайла)
	
	КаталогФотографий = СокрЛП(Константы.МП_КаталогХраненияФайловЗадачМП.Получить());
	Если Прав(КаталогФотографий, 1) <> "\" Тогда
		КаталогФотографий = КаталогФотографий + "\";
	КонецЕсли;
	
	ФайлКартинки = Новый Файл(КаталогФотографий + ОтносительноеИмяФайла);
	Если ФайлКартинки.Существует() Тогда
		УдалитьФайлы(ФайлКартинки.ПолноеИмя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = Новый СписокЗначений;
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		//++AK Lobv 18.12.16 Изменение статусов
		ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Планирование"));
	Иначе
		
		ДанныеВыбора.Добавить(ТекСтатус);
		//Если ТекСтатус = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.НеПринято") Тогда
		//	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Принято"));
		//ИначеЕсли ТекСтатус = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Принято") Тогда
		//	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Начало"));
		//ИначеЕсли ТекСтатус = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Начало") Тогда
		//	//ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Продолжение"));
		//	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Приостановлено"));
		//	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Завершено"));
		////ИначеЕсли ТекСтатус = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Продолжение") Тогда
		////	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Завершено"));
		//ИначеЕсли ТекСтатус = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Приостановлено") Тогда
		//	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Начало"));
		//КонецЕсли;
		Если Строка(ТекСтатус) = Строка(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Планирование")) Тогда
			ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.НеСогласовано"));
		ИначеЕсли Строка(ТекСтатус) = Строка(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.НеСогласовано")) Тогда
			Если УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.РазрешитьСогласованиеЗаданийСтроителя, Ложь) тогда
				ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Согласовано"));
			
			ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.ВРаботе"));
			ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.ТребуетДоработки"));
			КонецЕсли;
		ИначеЕсли Строка(ТекСтатус) = Строка(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Согласовано")) Тогда
			ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.ВРаботе"));
			ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.НеСогласовано"));
		ИначеЕсли Строка(ТекСтатус) = Строка(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.ТребуетДоработки")) Тогда
			ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.НеСогласовано"));
		ИначеЕсли Строка(ТекСтатус) = Строка(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.ВРаботе")) Тогда
			//ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Продолжение"));
			ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Приостановлено"));
			ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Завершено"));
			ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.НеСогласовано"));
		//ИначеЕсли ТекСтатус = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Продолжение") Тогда
		//	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Завершено"));
		ИначеЕсли Строка(ТекСтатус) = Строка(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Приостановлено")) Тогда
			ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.ВРаботе"));
			ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.НеСогласовано"));
		КонецЕсли;
		
	КонецЕсли;
	//ДанныеВыбора=ПолучитьСписокДоступныхСтатусов(ТекСтатус);
	//--АК	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРеквизитНаСервере(Ссылка, ИмяРекъ)
	Возврат Ссылка[ИмяРекъ];
КонецФункции

&НаКлиенте
Процедура СтатусОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура СтатусОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	//++AK Lobv новые статусы
	Отказ=Ложь;
	Если ВыбранноеЗначение = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Завершено") тогда
		Если ВсеЭтапыЗавершены() тогда
			Если НЕ ЗначениеЗаполнено(Объект.ДатаФактическогоЗавершения) Тогда
				Объект.ДатаФактическогоЗавершения = ТекущаяДата();
				Объект.ДатаЗавершенияПоСтатусу=ТекущаяДата();
			КонецЕсли;
		Иначе
			Сообщить("Проект не может быть завершен до завершения последнего этапа!");
			Отказ=Истина;
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(Объект.ДатаФактическогоЗавершения) И ВыбранноеЗначение <> ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Завершено") Тогда
		Объект.ДатаФактическогоЗавершения = Дата(1, 1, 1);
	ИначеЕсли ВыбранноеЗначение = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.ВРаботе") И НЕ ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		Объект.ДатаНачала = ТекущаяДата();
	ИначеЕсли ВыбранноеЗначение=ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Согласовано") тогда
		
	//ИначеЕсли ЗначениеЗаполнено(Объект.ДатаНачала) И 
	//  (ВыбранноеЗначение = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Принято") ИЛИ ВыбранноеЗначение = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.НеПринято")) Тогда
	//	Объект.ДатаНачала = Дата(1, 1, 1);
	КонецЕсли;
	Если не Отказ тогда
	Объект.Статус = ВыбранноеЗначение;
	КонецЕсли;
	ПриЧтенииСозданииНаСервере();
	
КонецПроцедуры
//++lobv 23.11.16
&НаКлиенте
Процедура ЧастьПроектаПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.ЧастьПроекта) тогда
		Объект.ЧастьПроекта=ПроверитьЧастьПроекта();
		Если не ЗначениеЗаполнено(Объект.ЧастьПроекта) тогда
			Сообщить("Выбранное задание не является проектом!");
		КонецЕсли;
	КонецЕСли;
КонецПроцедуры

&НаСервере
Процедура ОтразитьПроектИЭтапы()
	//++lobv 23.11.2016
	Элементы.СоставПроекта.Видимость=Объект.Проект;
	Элементы.ДанныеПроекта.Видимость=Объект.Проект;
	Элементы.Планировки.Видимость=Объект.Проект;
	ЭтаФорма.СписокЭтапов.Отбор.Элементы.Очистить();
	ЭлементОтбора = ЭтаФорма.СписокЭтапов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("ЧастьПроекта");
	ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение 	= Объект.Ссылка;
	ЭлементОтбора.Использование 	= Истина;
	ЭлементОтбора = ЭтаФорма.СписокЭтапов.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("ЧастьПроекта");
	ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.НеРавно;
	ЭлементОтбора.ПравоеЗначение 	= документы.МП_ЗаданиеСтроителей.ПустаяСсылка();
	ЭлементОтбора.Использование 	= Истина;
	Элементы.ЧастьПроекта.Видимость=Не Объект.Проект;
	Элементы.Проект.Видимость=не ЗначениеЗаполнено(Объект.ЧастьПроекта);
	Элементы.СписокЭтапов.Обновить();
КонецПроцедуры

&НаСервере
Функция ПроверитьЧастьПроекта()
	Если Объект.ЧастьПроекта.Проект тогда
		Возврат Объект.ЧастьПроекта;
	Иначе
		Возврат Документы.МП_ЗаданиеСтроителей.ПустаяСсылка();
	КонецЕсли;
	ОтразитьПроектИЭтапы();
КонецФункции

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	Элементы.СписокЭтаповДобавитьСтандартныйНабор.Доступность=Объект.Проект;
	ОтразитьПроектИЭтапы();
КонецПроцедуры


&НаКлиенте
Процедура Добавить(Команда)
	ОткрытьФорму("Документ.МП_ЗаданиеСтроителей.Форма.ФормаДокумента",,ЭтаФорма,Новый УникальныйИдентификатор);
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Попытка
		Если ЭтаФорма.ВладелецФормы.ИмяФормы="Документ.МП_ЗаданиеСтроителей.Форма.ФормаДокумента" тогда
			ЭтаФорма.Объект.Проект=Ложь;
			ЭтаФорма.Объект.ЧастьПроекта=ЭтаФорма.ВладелецФормы.Объект.Ссылка;
			ЭтаФорма.Объект.ОбъектCтроительства=ЭтаФорма.ВладелецФормы.Объект.ОбъектCтроительства;
			ЭтаФорма.ВладелецФормы.ОтразитьПроектИЭтапы();
		КонецЕсли;
	Исключение
	
	КонецПопытки; 
	
КонецПроцедуры


&НаКлиенте
Процедура УдалитьЭтап(Команда)
	Если ЭтаФорма.Элементы.СписокЭтапов.ТекущаяСтрока<>Неопределено тогда
		ПометитьНаУдаление(ЭтаФорма.Элементы.СписокЭтапов.ТекущаяСтрока);
		ЭтаФорма.Элементы.СписокЭтапов.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПометитьНаУдаление(СсылкаНаЭтап)
	ОбъектЭтапа=СсылкаНаЭтап.ПолучитьОбъект();
	ОбъектЭтапа.ПометкаУдаления=не ОбъектЭтапа.ПометкаУдаления;
	ОбъектЭтапа.Записать();
КонецПроцедуры

&НаСервере
Функция ВсеЭтапыЗавершены()
	ВсеЗавершено=Истина;
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	МП_ЗаданиеСтроителей.Ссылка
	             |ИЗ
	             |	Документ.МП_ЗаданиеСтроителей КАК МП_ЗаданиеСтроителей
	             |ГДЕ
	             |	МП_ЗаданиеСтроителей.ЧастьПроекта = &ЧастьПроекта
	             |	И МП_ЗаданиеСтроителей.Статус <> &Статус";
	Запрос.УстановитьПараметр("Статус",Перечисления.СтатусыСтроительства.Завершено);
	Запрос.УстановитьПараметр("ЧастьПроекта",Объект.Ссылка);
	Выборка=Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() тогда
		ВсеЗавершено=Ложь;
	КонецЕсли;
	Возврат ВсеЗавершено;
КонецФункции


&НаКлиенте
Процедура ДатаФактическогоЗавершенияПриИзменении(Элемент)
	Если Объект.ДатаЗавершенияПоСтатусу>Объект.ДатаФактическогоЗавершения+86400 тогда
		Сообщить("Дата фактического завершения не может быть перенесена более чем на один день!");
		Объект.ДатаФактическогоЗавершения=Объект.ДатаЗавершенияПоСтатусу;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокДоступныхСтатусов(ТекСтатус)
	ДанныеВыбора = Новый СписокЗначений;
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		//++AK Lobv 18.12.16 Изменение статусов
		ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Планирование"));
	Иначе
		
		ДанныеВыбора.Добавить(ТекСтатус);
		//Если ТекСтатус = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.НеПринято") Тогда
		//	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Принято"));
		//ИначеЕсли ТекСтатус = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Принято") Тогда
		//	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Начало"));
		//ИначеЕсли ТекСтатус = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Начало") Тогда
		//	//ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Продолжение"));
		//	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Приостановлено"));
		//	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Завершено"));
		////ИначеЕсли ТекСтатус = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Продолжение") Тогда
		////	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Завершено"));
		//ИначеЕсли ТекСтатус = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Приостановлено") Тогда
		//	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Начало"));
		//КонецЕсли;
		Если ТекСтатус = Перечисления.СтатусыСтроительства.Планирование Тогда
			ДанныеВыбора.Добавить(Перечисления.СтатусыСтроительства.НеСогласовано);
		ИначеЕсли ТекСтатус = Перечисления.СтатусыСтроительства.НеСогласовано Тогда
			Если УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.РазрешитьСогласованиеЗаданийСтроителя, Ложь) тогда
				ДанныеВыбора.Добавить(Перечисления.СтатусыСтроительства.Согласовано);
				ДанныеВыбора.Добавить(Перечисления.СтатусыСтроительства.ВРаботе);
			ДанныеВыбора.Добавить(Перечисления.СтатусыСтроительства.ТребуетДоработки);
			КонецЕсли;
		ИначеЕсли ТекСтатус = Перечисления.СтатусыСтроительства.Согласовано Тогда
			ДанныеВыбора.Добавить(Перечисления.СтатусыСтроительства.ВРаботе);
			ДанныеВыбора.Добавить(Перечисления.СтатусыСтроительства.НеСогласовано);
		ИначеЕсли ТекСтатус = Перечисления.СтатусыСтроительства.ТребуетДоработки Тогда
			ДанныеВыбора.Добавить(Перечисления.СтатусыСтроительства.НеСогласовано);
		ИначеЕсли Строка(ТекСтатус) = Строка(Перечисления.СтатусыСтроительства.ВРаботе) Тогда
			//ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Продолжение"));
			ДанныеВыбора.Добавить(Перечисления.СтатусыСтроительства.Приостановлено);
			ДанныеВыбора.Добавить(Перечисления.СтатусыСтроительства.Завершено);
			ДанныеВыбора.Добавить(Перечисления.СтатусыСтроительства.НеСогласовано);
		//ИначеЕсли ТекСтатус = ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Продолжение") Тогда
		//	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусыСтроительства.Завершено"));
		ИначеЕсли ТекСтатус = Перечисления.СтатусыСтроительства.Приостановлено Тогда
			ДанныеВыбора.Добавить(Перечисления.СтатусыСтроительства.ВРаботе);
			ДанныеВыбора.Добавить(Перечисления.СтатусыСтроительства.НеСогласовано);
		КонецЕсли;
		
	КонецЕсли;
	Возврат ДанныеВыбора;
КонецФункции


&НаКлиенте
Процедура ДобавитьСтандартныйНабор(Команда)
	Отказ=Ложь;
	Если не ЗначениеЗаполнено(Объект.Ссылка) тогда
		Сообщить("Перед созданием этапов необходимо записать документ.");
		Отказ=Истина;
	КонецЕсли;
	Если не Отказ тогда
		СоздатьСтандартныеЭтапыНаСервере();
		ОтразитьПроектИЭтапы();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьСтандартныеЭтапыНаСервере()
	МассивСтандартныхЭтапов=Новый Массив;
	МассивСтандартныхЭтапов.Добавить("Стройка");
	МассивСтандартныхЭтапов.Добавить("Оборудование");
	МассивСтандартныхЭтапов.Добавить("Реклама");
	МассивСтандартныхЭтапов.Добавить("Открытие");
	Для каждого Этап из МассивСтандартныхЭтапов цикл
		ДокЭтап=Документы.МП_ЗаданиеСтроителей.СоздатьДокумент();
		ДокЭтап.Дата=ТекущаяДата();
		ДокЭтап.ОбъектCтроительства=Объект.ОбъектCтроительства;
		ДокЭтап.Ответственный=Объект.Ответственный;
		ДокЭтап.Проект=ложь;
		ДокЭтап.Статус=Перечисления.СтатусыСтроительства.Планирование;
		ДокЭтап.ЧастьПроекта=Объект.Ссылка;
		ДокЭтап.ТипСобытия=Справочники.МП_СобытияСтроителей.НайтиПоНаименованию(Этап);
		ДокЭтап.Записать();
	КонецЦикла;
			
КонецПроцедуры


&НаКлиенте
Процедура ПоказатьОбщийСписокПоставщиков(Команда)
	РегистрыСведений.АК_ПоставщикиСтроителей.ПолучитьФормуСписка().Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ПланировкиПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	ОтображаемоеФото1 = ?(ПустаяСтрока(ТекущиеДанные.ОтносительноеИмяФайла), "", ПолучитьФотоНаСервере(ТекущиеДанные.ОтносительноеИмяФайла));
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
Перем ИдентификаторФотографии, ОтносительноеИмяФайла, Расширение;
	
	Отказ = Истина;
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.Заголовок = "Выберите файл с фотографией";
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	ДиалогОткрытияФайла.ПредварительныйПросмотр = Истина;
	ДиалогОткрытияФайла.ПроверятьСуществованиеФайла = Истина;
	ДиалогОткрытияФайла.Фильтр = 
		"Все картинки (*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf)|*.bmp;*.dib;*.rle;*.jpg;*.jpeg;*.tif;*.gif;*.png;*.ico;*.wmf;*.emf|" 
		+ "Формат bmp (*.bmp;*.dib;*.rle)|*.bmp;*.dib;*.rle|"
		+ "Формат JPEG (*.jpg;*.jpeg)|*.jpg;*.jpeg|"
		+ "Формат TIFF (*.tif)|*.tif|"
		+ "Формат GIF (*.gif)|*.gif|"
		+ "Формат PNG (*.png)|*.png|"
		+ "Формат icon (*.ico)|*.ico|"
		+ "Формат метафайл (*.wmf;*.emf)|*.wmf;*.emf|"; // картинки
	
	Если ДиалогОткрытияФайла.Выбрать() = Ложь Тогда
	    Возврат;
	КонецЕсли;
	
	ФайлКартинки = Новый Файл(ДиалогОткрытияФайла.ПолноеИмяФайла);
	ИдентификаторФотографии = Строка(Новый УникальныйИдентификатор);
	ДанныеФотографии = Новый Структура("ИдентификаторФотографии, Расширение", ИдентификаторФотографии, ФайлКартинки.Расширение);
	
	ОтносительноеИмяФайла = ОбменМобильноеПриложениеПереопределяемый.ОбновитьФайлФотографииНаДиске(Новый ДвоичныеДанные(ФайлКартинки.ПолноеИмя), Объект.Ссылка, ДанныеФотографии);
	Если ОтносительноеИмяФайла = Неопределено Тогда
		Предупреждение("Ошибка при добавлении фотографии!");
		Возврат;
	КонецЕсли;
	
	СтрокаФотографии = Объект.Фотографии.Добавить();
	СтрокаФотографии.ИмяФайла = ФайлКартинки.Имя;
	СтрокаФотографии.ИдентификаторФотографии = ИдентификаторФотографии;
	СтрокаФотографии.ОтносительноеИмяФайла = ОтносительноеИмяФайла;
	//AK Lobv 050217>
	СтрокаФотографии.Дата=ТекущаяДата();
	СтрокаФотографии.ЭтоПланировка=Истина;
	
	Элемент.ТекущаяСтрока = СтрокаФотографии.ПолучитьИдентификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура ПланировкиПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	Если Вопрос("Удалить планировку?", РежимДиалогаВопрос.ДаНетОтмена,,, "Задание строителей") <> КодВозвратаДиалога.Да Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(ТекущиеДанные.ОтносительноеИмяФайла) Тогда
		УдалитьФотографиюНаСервере(ТекущиеДанные.ОтносительноеИмяФайла);
	КонецЕсли;
	
КонецПроцедуры
//--lobv