
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.Ссылка) И Магазины.Количество() = 0 Тогда
		ОбновитьСписокМагазинов(ЭтотОбъект.МинимальноеКоличествоНеобходимыхДегустаций);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	МассивМагазинов = СоздатьЗадачиПоЗаданию();
	Если НЕ ОбменДанными.Загрузка И МассивМагазинов.Количество() > 0 Тогда
		Документы.ЗаданиеТехнологаНаДегустацию.СформироватьСообщенияМагазинам(Ссылка, МассивМагазинов);
	КонецЕсли;
	
КонецПроцедуры

Функция СоздатьЗадачиПоЗаданию() Экспорт
	
	МассивМагазинов = Новый Массив;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗадачаТехнологаНаДегустацию.Магазин
		|ПОМЕСТИТЬ Магазины
		|ИЗ
		|	Документ.ЗадачаТехнологаНаДегустацию КАК ЗадачаТехнологаНаДегустацию
		|ГДЕ
		|	ЗадачаТехнологаНаДегустацию.ЗаданиеТехнологаНаДегустацию = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДокЗаданиеТехнологаНаДегустацию.Ссылка КАК ЗаданиеТехнологаНаДегустацию,
		|	ЗаданиеТехнологаНаДегустациюМагазины.Магазин КАК Магазин,
		|	ДокЗаданиеТехнологаНаДегустацию.Номенклатура,
		|	ДокЗаданиеТехнологаНаДегустацию.ХарактеристикаНоменклатуры
		|ИЗ
		|	Документ.ЗаданиеТехнологаНаДегустацию КАК ДокЗаданиеТехнологаНаДегустацию
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЗаданиеТехнологаНаДегустацию.Магазины КАК ЗаданиеТехнологаНаДегустациюМагазины
		|		ПО ДокЗаданиеТехнологаНаДегустацию.Ссылка = ЗаданиеТехнологаНаДегустациюМагазины.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Магазины КАК ЕстьМагазины
		|		ПО (ЗаданиеТехнологаНаДегустациюМагазины.Магазин = ЕстьМагазины.Магазин)
		|ГДЕ
		|	ДокЗаданиеТехнологаНаДегустацию.Ссылка = &Ссылка
		|	И ЕстьМагазины.Магазин ЕСТЬ NULL");
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда Возврат МассивМагазинов; КонецЕсли;
	
	ВыборкаМагазин = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаМагазин.Следующий() Цикл
		
		ТекМагазин = ВыборкаМагазин.Магазин;
		
		ЗадачаОбъект = Документы.ЗадачаТехнологаНаДегустацию.СоздатьДокумент();
		ЗадачаОбъект.Дата = ТекущаяДата();
		//ЗадачаОбъект.УстановитьНовыйНомер();
		ЗаполнитьЗначенияСвойств(ЗадачаОбъект, ВыборкаМагазин);	
		ЗадачаОбъект.Записать();
		
		Сообщить("Создана " + ЗадачаОбъект.Ссылка + " по " + ТекМагазин);
		
		МассивМагазинов.Добавить(ТекМагазин);
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат МассивМагазинов;
	
КонецФункции

Процедура ОбновитьСписокМагазинов(КвоМагазинов) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Магазины.Магазин
		|ПОМЕСТИТЬ Магазины
		|ИЗ
		|	&Магазины КАК Магазины
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 999
		|	РасходныйОрдерСклад.Получатель КАК Магазин,
		|	СУММА(-ТоварыНаСкладахОбороты.КоличествоОборот) КАК Количество
		|ПОМЕСТИТЬ МагазиныПоРасходникам
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Обороты(
		|			,
		|			,
		|			Регистратор,
		|			Номенклатура = &Номенклатура
		|				И Характеристика = &ХарактеристикаНоменклатуры
		|				И ВЫБОР
		|					КОГДА &ДатаПроизводстваКон <> ДАТАВРЕМЯ(1, 1, 1)
		|						ТОГДА ДатаПроизводства МЕЖДУ &ДатаПроизводстваНач И &ДатаПроизводстваКон
		|					КОГДА &ДатаПроизводстваНач <> ДАТАВРЕМЯ(1, 1, 1)
		|						ТОГДА ДатаПроизводства >= &ДатаПроизводстваНач
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ) КАК ТоварыНаСкладахОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
		|		ПО ТоварыНаСкладахОбороты.Регистратор = РасходныйОрдерСклад.Ссылка
		|ГДЕ
		|	ТоварыНаСкладахОбороты.Регистратор ССЫЛКА Документ.РасходныйОрдерСклад
		|	И РасходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
		|	И РасходныйОрдерСклад.Получатель.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
		|	И НЕ РасходныйОрдерСклад.Получатель В
		|				(ВЫБРАТЬ
		|					Магазины.Магазин
		|				ИЗ
		|					Магазины КАК Магазины)
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходныйОрдерСклад.Получатель
		|
		|УПОРЯДОЧИТЬ ПО
		|	Количество УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Магазины.Магазин КАК Магазин,
		|	ВЫРАЗИТЬ(Магазины.Магазин КАК Справочник.СтруктурныеЕдиницы).НомерТочки КАК НомерТочки
		|ИЗ
		|	Магазины КАК Магазины
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	Магазины.Магазин,
		|	ВЫРАЗИТЬ(Магазины.Магазин КАК Справочник.СтруктурныеЕдиницы).НомерТочки
		|ИЗ
		|	МагазиныПоРасходникам КАК Магазины
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерТочки
		|АВТОУПОРЯДОЧИВАНИЕ");
	Запрос.УстановитьПараметр("ДатаПроизводстваНач", ДатаПроизводстваНач);
	Запрос.УстановитьПараметр("ДатаПроизводстваКон", ?(ДатаПроизводстваКон = Дата(1,1,1), ДатаПроизводстваКон, КонецДня(ДатаПроизводстваКон)));
	Запрос.УстановитьПараметр("Магазины", Магазины.Выгрузить());
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", ХарактеристикаНоменклатуры);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "999", Формат(КвоМагазинов, "ЧГ="));
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Магазины.Загрузить(РезультатЗапроса.Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	Автор = ПараметрыСеанса.ТекущийПользователь;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Документы.ЗаданиеТехнологаНаДегустацию.ЗакрытьЗадачиПоЗаданию(Ссылка);
	
	ДокИнвентаризацияСкладОбъект = Документы.ИнвентаризацияСклад.СоздатьДокумент();
	ДокИнвентаризацияСкладОбъект.Заполнить(ЭтотОбъект.Ссылка);
	Если ДокИнвентаризацияСкладОбъект.Товары.Количество() > 0 Тогда
		ДокИнвентаризацияСкладОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	
КонецПроцедуры
