
Процедура СформироватьСообщенияМагазинам(Ссылка, МассивМагазинов) Экспорт
	
	Если МассивМагазинов.Количество() = 0 Тогда Возврат; КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ОбщегоНазначения.ЭтоКопияБазы() Тогда Возврат; КонецЕсли;
	
	НомерДатаСтр = " №" + СокрЛП(Ссылка.Номер) + " от " + Формат(Ссылка.Дата, "ДФ=dd.MM.yyyy");
	Тема = "Задача контролёра качества на дегустацию " + НомерДатаСтр;
	ТекстСообщения =
		"Задача контролёра качества на дегустацию " + НомерДатаСтр + ".
		|
		|Нужно продегустировать номенклатуру:
		|" + Ссылка.Номенклатура + " (" + Ссылка.ХарактеристикаНоменклатуры + ")
		|и внести в задачу оценку и комментарий.";
	
	Если НЕ ПустаяСтрока(Ссылка.Комментарий) Тогда
		ТекстСообщения = ТекстСообщения + Символы.ПС + "
		|Примечание к задаче: " + Ссылка.Комментарий;
	КонецЕсли;
	
	ПараметрыСообщения = Новый Структура;
	ПараметрыСообщения.Вставить("ТипСообщения", Перечисления.ТипыСообщенийМОС.ИнформационноеСообщение);
	ПараметрыСообщения.Вставить("ВидПолучателей", Перечисления.ВидыПолучателейМОС.СписокМагазинов);
	ПараметрыСообщения.Вставить("ВсемСменам", Истина);
	ПараметрыСообщения.Вставить("Тема", Тема);
	ПараметрыСообщения.Вставить("ТекстСообщения", ТекстСообщения);
	ПараметрыСообщения.Вставить("СписокМагазинов", МассивМагазинов); //СтруктурныеЕдиницы
	ПараметрыСообщения.Вставить("ОбъектИнициатор", Ссылка.Ссылка);
	ПараметрыСообщения.Вставить("Отправитель", Справочники.РолиПользователей.Администратор);
	//ПараметрыСообщения.Вставить("ШаблонСообщений", Справочники.ШаблоныСообщенийМОС.УведомлениеЗаданиеТехнолога);
	
	СообщениеОбОшибке = "";
	Попытка
		СообщениеОбОшибке = МеханизмОбменаСообщениями.СоздатьИОтправитьСообщение(ПараметрыСообщения, Истина);
		СообщениеОбОшибке = ?(ТипЗнч(СообщениеОбОшибке) = Тип("ДокументСсылка.СообщениеМОС"), "", СообщениеОбОшибке);
	Исключение
		СообщениеОбОшибке = ОписаниеОшибки();
	КонецПопытки; 
	
	Если НЕ ПустаяСтрока(СообщениеОбОшибке) Тогда
		СообщениеОбОшибке = "Ошибка формирования сообщений магазинам: " + СообщениеОбОшибке;
		Сообщить(СообщениеОбОшибке);
		ЗаписьЖурналаРегистрации("Документ.ЗаданиеТехнологаНаДегустацию", УровеньЖурналаРегистрации.Ошибка,, Ссылка.Ссылка, СообщениеОбОшибке);
		Возврат;
	КонецЕсли;
	
	//первичная рассылка по эл. почте, пока убрал
	Возврат;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СтруктурныеЕдиницы.Ссылка,
		|	СтруктурныеЕдиницы.АдресЭлектроннойПочты КАК АдресЭП
		|ИЗ
		|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		|ГДЕ
		|	СтруктурныеЕдиницы.Ссылка В(&МассивМагазинов)
		|	И (ВЫРАЗИТЬ(СтруктурныеЕдиницы.АдресЭлектроннойПочты КАК СТРОКА(1))) <> """"");
	Запрос.УстановитьПараметр("МассивМагазинов", МассивМагазинов);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда Возврат; КонецЕсли;
	
	МассивАдресовЭП = Новый Массив;
	
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		МассивАдресовЭП.Добавить(ВыборкаЗапроса.АдресЭП);
	КонецЦикла;
	
	Если МассивАдресовЭП.Количество() > 0 Тогда
		Документы.ЗаданиеТехнологаМагазинам.ОтправитьСообщение(Тема, ТекстСообщения, МассивАдресовЭП, "Задания контролёра качества на дегустацию");
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьКаталогХраненияФайлов(СсылкаИлиДата) Экспорт
Перем ДатаДок;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДатаДок = ?(ТипЗнч(СсылкаИлиДата) = Тип("Дата"), СсылкаИлиДата, СсылкаИлиДата.Дата);
	КаталогХраненияФайлов = СокрЛП(Константы.КаталогХраненияФайлов.Получить());
	КаталогХраненияФайлов = КаталогХраненияФайлов + ?(Прав(КаталогХраненияФайлов, 1) = "\", "", "\") + "Документ.ЗаданиеТехнологаНаДегустацию\" + Формат(ДатаДок, "ДФ=yyyyMM") + "\";
	
	ФайлКаталогХраненияФайлов = Новый Файл(КаталогХраненияФайлов);
	Если НЕ ФайлКаталогХраненияФайлов.Существует() Тогда
		СоздатьКаталог(КаталогХраненияФайлов);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат КаталогХраненияФайлов;
	
КонецФункции // ПолучитьКаталогХраненияФайлов()

Процедура ЗакрытьЗадачиПоЗаданию(Ссылка, ЗакрыватьЗадачи = Истина) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЗадачаТехнологаНаДегустацию.Ссылка,
		|	ЗадачаТехнологаНаДегустацию.Закрыта КАК ЗадачаЗакрыта,
		|	ВЫБОР
		//+++АК ILIK 2018.08.08 ИП-00019413
		//|		КОГДА ЗадачаТехнологаНаДегустацию.Магазин.СтатусТорговойТочки = ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Закрыт)
		|		КОГДА ЗадачаТехнологаНаДегустацию.Магазин.СтатусТорговойТочки В (ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Закрыт), ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Приостановлен))
		//---АК ILIK
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК МагазинЗакрыт
		|ИЗ
		|	Документ.ЗадачаТехнологаНаДегустацию КАК ЗадачаТехнологаНаДегустацию
		|ГДЕ
		|	ЗадачаТехнологаНаДегустацию.ЗаданиеТехнологаНаДегустацию = &Ссылка
		|	И НЕ ЗадачаТехнологаНаДегустацию.Закрыта = &ЗакрыватьЗадачи
		|
		|ДЛЯ ИЗМЕНЕНИЯ");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ЗакрыватьЗадачи", ЗакрыватьЗадачи);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда Возврат; КонецЕсли;
	
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		
		ЗадачаТехнологаНаДегустациюОбъект = ВыборкаЗапроса.Ссылка.ПолучитьОбъект();
		
		Если ВыборкаЗапроса.МагазинЗакрыт Тогда
			Если НЕ ВыборкаЗапроса.ЗадачаЗакрыта Тогда 
				ЗадачаТехнологаНаДегустациюОбъект.Закрыта = Истина;
			КонецЕсли;
		Иначе
			ЗадачаТехнологаНаДегустациюОбъект.Закрыта = ЗакрыватьЗадачи;
		КонецЕсли;
		
		ЗадачаТехнологаНаДегустациюОбъект.Записать();
		Сообщить("Закрыт документ " + ЗадачаТехнологаНаДегустациюОбъект.Ссылка);
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Функция ВернутьТЗнОтветственных(ЗаданиеТехнологаСсылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	РолиПользователейСоставРоли.Сотрудник,
		|	""Управляющий управления качества"" КАК ТипРолиСтр,
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(40)) КАК НомерТелефона,
		|	ЕСТЬNULL(РолиПользователейСоставРоли.Ссылка, ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)) КАК РольПользователя
		|ИЗ
		|	Документ.ЗаданиеТехнологаНаДегустацию КАК ЗаданиеТехнологаНаДегустацию
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
		|				,
		|				ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)
		|					И Объект ССЫЛКА Справочник.ХарактеристикиНоменклатуры) КАК СоответствиеОбъектРольСрезПоследнихХ
		|		ПО (СоответствиеОбъектРольСрезПоследнихХ.Объект = ЗаданиеТехнологаНаДегустацию.ХарактеристикаНоменклатуры)
		|			И (СоответствиеОбъектРольСрезПоследнихХ.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка))
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|		ПО (ЗначенияСвойствОбъектов.Объект = ЗаданиеТехнологаНаДегустацию.ХарактеристикаНоменклатуры)
		|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
		|				,
		|				ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)
		|					И Объект ССЫЛКА Справочник.Контрагенты) КАК СоответствиеОбъектРольСрезПоследнихК
		|		ПО (СоответствиеОбъектРольСрезПоследнихХ.Объект ЕСТЬ NULL )
		|			И (ЗначенияСвойствОбъектов.Значение = СоответствиеОбъектРольСрезПоследнихК.Объект)
		|			И (СоответствиеОбъектРольСрезПоследнихК.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|		ПО (ЕСТЬNULL(СоответствиеОбъектРольСрезПоследнихХ.РольПользователя, СоответствиеОбъектРольСрезПоследнихК.РольПользователя) <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка))
		|			И (РолиПользователейСоставРоли.Ссылка = ЕСТЬNULL(СоответствиеОбъектРольСрезПоследнихХ.РольПользователя.Родитель, СоответствиеОбъектРольСрезПоследнихК.РольПользователя.Родитель))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ПО (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСлужебный))
		|			И (РолиПользователейСоставРоли.Сотрудник = КонтактнаяИнформация.Объект)
		|ГДЕ
		|	ЗаданиеТехнологаНаДегустацию.Ссылка = &ЗаданиеТехнологаСсылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РолиПользователейСоставРоли.Сотрудник,
		|	""Технолог по качеству"",
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(40)) КАК НомерТелефона,
		|	ЕСТЬNULL(РолиПользователейСоставРоли.Ссылка, ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка))
		|ИЗ
		|	Документ.ЗаданиеТехнологаНаДегустацию КАК ЗаданиеТехнологаНаДегустацию
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
		|				,
		|				ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)
		|					И Объект ССЫЛКА Справочник.ХарактеристикиНоменклатуры) КАК СоответствиеОбъектРольСрезПоследнихХ
		|		ПО (СоответствиеОбъектРольСрезПоследнихХ.Объект = ЗаданиеТехнологаНаДегустацию.ХарактеристикаНоменклатуры)
		|			И (СоответствиеОбъектРольСрезПоследнихХ.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка))
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|		ПО (ЗначенияСвойствОбъектов.Объект = ЗаданиеТехнологаНаДегустацию.ХарактеристикаНоменклатуры)
		|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
		|				,
		|				ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)
		|					И Объект ССЫЛКА Справочник.Контрагенты) КАК СоответствиеОбъектРольСрезПоследнихК
		|		ПО (СоответствиеОбъектРольСрезПоследнихХ.Объект ЕСТЬ NULL )
		|			И (ЗначенияСвойствОбъектов.Значение = СоответствиеОбъектРольСрезПоследнихК.Объект)
		|			И (СоответствиеОбъектРольСрезПоследнихК.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|		ПО (ЕСТЬNULL(СоответствиеОбъектРольСрезПоследнихХ.РольПользователя, СоответствиеОбъектРольСрезПоследнихК.РольПользователя) <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка))
		|			И (РолиПользователейСоставРоли.Ссылка = ЕСТЬNULL(СоответствиеОбъектРольСрезПоследнихХ.РольПользователя, СоответствиеОбъектРольСрезПоследнихК.РольПользователя)
		|				ИЛИ РолиПользователейСоставРоли.Ссылка.Родитель = ЕСТЬNULL(СоответствиеОбъектРольСрезПоследнихХ.РольПользователя, СоответствиеОбъектРольСрезПоследнихК.РольПользователя))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ПО (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСлужебный))
		|			И (РолиПользователейСоставРоли.Сотрудник = КонтактнаяИнформация.Объект)
		|ГДЕ
		|	ЗаданиеТехнологаНаДегустацию.Ссылка = &ЗаданиеТехнологаСсылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РолиПользователейСоставРоли.Сотрудник,
		|	""Товаровед"",
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(40)) КАК НомерТелефона,
		|	ЕСТЬNULL(РолиПользователейСоставРоли.Ссылка, ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка))
		|ИЗ
		|	Документ.ЗаданиеТехнологаНаДегустацию КАК ЗаданиеТехнологаНаДегустацию
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
		|				,
		|				ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)
		|					И Объект ССЫЛКА Справочник.ХарактеристикиНоменклатуры) КАК СоответствиеОбъектРольСрезПоследнихХ
		|		ПО (СоответствиеОбъектРольСрезПоследнихХ.Объект = ЗаданиеТехнологаНаДегустацию.ХарактеристикаНоменклатуры)
		|			И (СоответствиеОбъектРольСрезПоследнихХ.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка))
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|		ПО (ЗначенияСвойствОбъектов.Объект = ЗаданиеТехнологаНаДегустацию.ХарактеристикаНоменклатуры)
		|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
		|				,
		|				ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)
		|					И Объект ССЫЛКА Справочник.Контрагенты) КАК СоответствиеОбъектРольСрезПоследнихК
		|		ПО (СоответствиеОбъектРольСрезПоследнихХ.Объект ЕСТЬ NULL )
		|			И (ЗначенияСвойствОбъектов.Значение = СоответствиеОбъектРольСрезПоследнихК.Объект)
		|			И (СоответствиеОбъектРольСрезПоследнихК.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
		|				,
		|				ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.БрендМенеджер)
		|					И Объект ССЫЛКА Справочник.РолиПользователей) КАК СоответствиеОбъектРольСрезПоследнихБМ
		|		ПО (ЕСТЬNULL(СоответствиеОбъектРольСрезПоследнихХ.РольПользователя, СоответствиеОбъектРольСрезПоследнихК.РольПользователя) <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка))
		|			И (СоответствиеОбъектРольСрезПоследнихБМ.Объект = ЕСТЬNULL(СоответствиеОбъектРольСрезПоследнихХ.РольПользователя, СоответствиеОбъектРольСрезПоследнихК.РольПользователя))
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|		ПО (РолиПользователейСоставРоли.Ссылка = СоответствиеОбъектРольСрезПоследнихБМ.РольПользователя)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ПО (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСлужебный))
		|			И (РолиПользователейСоставРоли.Сотрудник = КонтактнаяИнформация.Объект)
		|ГДЕ
		|	ЗаданиеТехнологаНаДегустацию.Ссылка = &ЗаданиеТехнологаСсылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗаданиеТехнологаНаДегустацию.Автор.ФизЛицо,
		|	""Автор"",
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(40)) КАК НомерТелефона,
		|	ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
		|ИЗ
		|	Документ.ЗаданиеТехнологаНаДегустацию КАК ЗаданиеТехнологаНаДегустацию
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ПО (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСлужебный))
		|			И (ЗаданиеТехнологаНаДегустацию.Автор.ФизЛицо = КонтактнаяИнформация.Объект)
		|ГДЕ
		|	ЗаданиеТехнологаНаДегустацию.Ссылка = &ЗаданиеТехнологаСсылка");
	Запрос.УстановитьПараметр("ЗаданиеТехнологаСсылка", ЗаданиеТехнологаСсылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ПолучитьДолиРезультатов(ЗаданиеТехнологаНаДегустациюСсылка, ТекущаяДоляПоложительныхРезультатов, ТекущаяДоляОтрицательныхРезультатов) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ОценкиЗадачТехнологаНаДегустацию.ЗаданиеТехнологаНаДегустацию,
		|	ОценкиЗадачТехнологаНаДегустацию.ЗаданиеТехнологаНаДегустацию.МинимальноеКоличествоНеобходимыхДегустаций КАК МинимальноеКоличествоНеобходимыхДегустаций,
		|	СУММА(ВЫБОР
		|			КОГДА ОценкиЗадачТехнологаНаДегустацию.Оценка МЕЖДУ 1 И 5
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КвоДегустаций,
		|	СУММА(ВЫБОР
		|			КОГДА ОценкиЗадачТехнологаНаДегустацию.Оценка МЕЖДУ 1 И 3
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КвоОтрицательных,
		|	СУММА(ВЫБОР
		|			КОГДА ОценкиЗадачТехнологаНаДегустацию.Оценка МЕЖДУ 4 И 5
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КвоПоложительных
		|ПОМЕСТИТЬ РезультатыДегустаций
		|ИЗ
		|	РегистрСведений.ОценкиЗадачТехнологаНаДегустацию КАК ОценкиЗадачТехнологаНаДегустацию
		|ГДЕ
		|	ОценкиЗадачТехнологаНаДегустацию.ЗаданиеТехнологаНаДегустацию = &ЗаданиеТехнологаНаДегустацию
		|
		|СГРУППИРОВАТЬ ПО
		|	ОценкиЗадачТехнологаНаДегустацию.ЗаданиеТехнологаНаДегустацию,
		|	ОценкиЗадачТехнологаНаДегустацию.ЗаданиеТехнологаНаДегустацию.МинимальноеКоличествоНеобходимыхДегустаций
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РезультатыДегустаций.ЗаданиеТехнологаНаДегустацию,
		|	ВЫБОР
		|		КОГДА РезультатыДегустаций.КвоДегустаций >= РезультатыДегустаций.МинимальноеКоличествоНеобходимыхДегустаций
		|			ТОГДА РезультатыДегустаций.КвоОтрицательных / (РезультатыДегустаций.КвоДегустаций + 1)
		|		ИНАЧЕ РезультатыДегустаций.КвоОтрицательных / (РезультатыДегустаций.МинимальноеКоличествоНеобходимыхДегустаций + 1)
		|	КОНЕЦ КАК ДоляОтрицательных,
		|	ВЫБОР
		|		КОГДА РезультатыДегустаций.КвоДегустаций >= РезультатыДегустаций.МинимальноеКоличествоНеобходимыхДегустаций
		|			ТОГДА РезультатыДегустаций.КвоПоложительных / (РезультатыДегустаций.КвоДегустаций + 1)
		|		ИНАЧЕ РезультатыДегустаций.КвоПоложительных / (РезультатыДегустаций.МинимальноеКоличествоНеобходимыхДегустаций + 1)
		|	КОНЕЦ КАК ДоляПоложительных
		|ИЗ
		|	РезультатыДегустаций КАК РезультатыДегустаций");
	Запрос.УстановитьПараметр("ЗаданиеТехнологаНаДегустацию", ЗаданиеТехнологаНаДегустациюСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		ТекущаяДоляПоложительныхРезультатов = 0;
		ТекущаяДоляОтрицательныхРезультатов = 0;
	Иначе
		ВыборкаЗапроса = РезультатЗапроса.Выбрать();
		ВыборкаЗапроса.Следующий();
		ТекущаяДоляПоложительныхРезультатов = ВыборкаЗапроса.ДоляПоложительных;
		ТекущаяДоляОтрицательныхРезультатов = ВыборкаЗапроса.ДоляОтрицательных;
	КонецЕсли;
	
КонецПроцедуры
