
Функция ПолучитьРезультатЗапросаПоОстаткам()
	
	Перем Запрос;
	
	мДатаНовогоУчетаСчетовОС = Константы.ДатаИзмененияУчетаПоСчетамОС.Получить();
	ЕстьНовыйУчетСчетовОС = (НЕ ЭтотОбъект.Дата < мДатаНовогоУчетаСчетовОС);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка"		, ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("СчетУчета"	, ЭтотОбъект.СчетУчета);
	Запрос.УстановитьПараметр("ДатаСреза"	, ЭтотОбъект.Дата);
	Запрос.УстановитьПараметр("Склад"		, ЭтотОбъект.Склад);
	Если НЕ ЕстьНовыйУчетСчетовОС Тогда
		Запрос.УстановитьПараметр("ЦФО"		, ЭтотОбъект.ЦФО);
	КонецЕсли;
	Запрос.УстановитьПараметр("МассивОС"	, ЭтотОбъект.ОС.ВыгрузитьКолонку("ОсновноеСредство"));
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФинансовыйОстатки.Субконто3 КАК ОсновноеСредство,
	|	ВЫРАЗИТЬ(ФинансовыйОстатки.Субконто3 КАК Справочник.ОсновныеСредства).ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	-ФинансовыйОстатки.КоличествоОстаток КАК КоличествоРасхождение,
	|	0 КАК Сумма02
	|ПОМЕСТИТЬ ВТОсновная
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(
	|			&ДатаСреза,
	|			Счет = &СчетУчета,
	|			,
	|			Субконто2 = &Склад
	|				И Субконто3 В (&МассивОС)
	|				И &УсловиеПоЦФО) КАК ФинансовыйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТЧОС.ОсновноеСредство,
	|	ТЧОС.ОсновноеСредство.ИнвентарныйНомер,
	|	ТЧОС.Количество,
	|	ТЧОС.Сумма
	|ИЗ
	|	Документ.ИнвентаризацияОС.ОС КАК ТЧОС
	|ГДЕ
	|	ТЧОС.Ссылка = &Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	ИнвентарныйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФинансовыйОстатки.Субконто1 КАК СтатьяДДС,
	|	ФинансовыйОстатки.Субконто2 КАК ОсновноеСредство,
	|	ФинансовыйОстатки.СуммаОстаток КАК Сумма
	|ПОМЕСТИТЬ ВТОстатки08
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(&ДатаСреза, Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.КапитальныеВложения), , Субконто2 В (&МассивОС)) КАК ФинансовыйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОсновная.ОсновноеСредство КАК ОсновноеСредство,
	|	ВТОсновная.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ВЫБОР
	|		КОГДА СУММА(ВТОсновная.КоличествоРасхождение) < 0
	|			ТОГДА ""Кт""
	|		ИНАЧЕ ""Дт""
	|	КОНЕЦ КАК ВидДвижения,
	|	ВЫБОР
	|		КОГДА СУММА(ВТОсновная.КоличествоРасхождение) < 0
	|			ТОГДА -СУММА(ВТОсновная.КоличествоРасхождение)
	|		ИНАЧЕ СУММА(ВТОсновная.КоличествоРасхождение)
	|	КОНЕЦ КАК Количество,
	|	ВЫБОР
	|		КОГДА СУММА(ВТОсновная.КоличествоРасхождение) = -1
	|			ТОГДА СУММА(ВТОсновная.Сумма02)
	|		КОГДА СУММА(ВТОсновная.КоличествоРасхождение) = 0
	|			ТОГДА -СУММА(ВТОсновная.Сумма02)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Сумма02
	|ПОМЕСТИТЬ ВТПоследняя
	|ИЗ
	|	ВТОсновная КАК ВТОсновная
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТОсновная.ОсновноеСредство,
	|	ВТОсновная.ИнвентарныйНомер
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПоследняя.ОсновноеСредство КАК ОсновноеСредство,
	|	ВТПоследняя.ВидДвижения КАК ВидДвижения,
	|	ВТПоследняя.Количество КАК Количество,
	|	ВТПоследняя.Сумма02 КАК Сумма02,
	|	ЕСТЬNULL(ВТОстатки08.СтатьяДДС, ЗНАЧЕНИЕ(Справочник.СтатьиДвиженияДенежныхСредств.ПустаяСсылка)) КАК СтатьяДДС,
	|	ЕСТЬNULL(ВТОстатки08.Сумма, 0) КАК Сумма
	|ИЗ
	|	ВТПоследняя КАК ВТПоследняя
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстатки08 КАК ВТОстатки08
	|		ПО (ВТОстатки08.ОсновноеСредство = ВТПоследняя.ОсновноеСредство)
	|ГДЕ
	|	НЕ(ВТПоследняя.Количество = 0
	|				И ВТПоследняя.Сумма02 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТПоследняя.ИнвентарныйНомер";	
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "
	|				И &УсловиеПоЦФО",
		?(НЕ ЕстьНовыйУчетСчетовОС, "
	|				И Субконто1 = &ЦФО", ""));
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
		
	Возврат РезультатЗапроса;
	
КонецФункции

Процедура ПроверитьНаличиеДублейВТабличнойЧасти(Отказ)
	
	//+++АК Susk (Суслин К.В.) 2017.11.29 ИП-00015400
	//ПроверяемыеРеквизиты = "ОсновноеСредство";
	
	ТаблицаДокумента = ЭтотОбъект.ОС.Выгрузить();
	//ТаблицаДокумента.Колонки.Добавить("КвоПроверкаДублей"); 
	//ТаблицаДокумента.ЗаполнитьЗначения(1, "КвоПроверкаДублей");
	//
	//ТаблицаДокумента.Свернуть(ПроверяемыеРеквизиты, "КвоПроверкаДублей");
	
	ТаблицаДокумента.Колонки.Добавить("Обработан"); 
	ТаблицаДокумента.ЗаполнитьЗначения(0, "Обработан");
	ТаблицаДокумента.Колонки.Добавить("ДатчикЗаполнен"); 
	
	Для Каждого Стр Из ТаблицаДокумента Цикл
		Стр.ДатчикЗаполнен = Стр.Датчик <> Справочники.Датчики.ПустаяСсылка();
	КонецЦикла;
	
	ТаблицаДокумента.Сортировать("ДатчикЗаполнен Убыв");
	
	СтруктураПоиска = Новый Структура;
	
	СтрокаСообщения = "";	
	
	Для Каждого Стр Из ТаблицаДокумента Цикл
		
		Если Стр.Обработан Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураПоиска.Вставить("ОсновноеСредство", Стр.ОсновноеСредство);
		
		НайдСтрокиДок = ТаблицаДокумента.НайтиСтроки(СтруктураПоиска);
		
		НСтрокаСОобщения = "";
		ЕстьПроблема = Ложь;
		
		Для Каждого НСтр Из НайдСтрокиДок Цикл
			НСтр.Обработан = Истина;
			
			Если Стр <> НСтр Тогда
				//Датчик в исходной строке есть, значит в остальных тоже должен быть
				Если Стр.Датчик <> Справочники.Датчики.ПустаяСсылка() Тогда
					Если НСтр.Датчик = Справочники.Датчики.ПустаяСсылка() Тогда						
						НСтрокаСообщения = НСтрокаСообщения + "- строка №" + Формат(НСтр.НомерСтроки, "ЧГ=") + Символы.ПС;
						ЕстьПроблема = Истина;					
					КонецЕсли;
				Иначе
					//датчик в исходной строке не заполнен, значит не может быть больше строк с этим ОС.
					НСтрокаСообщения = НСтрокаСообщения + "- строка №" + Формат(НСтр.НомерСтроки, "ЧГ=") + Символы.ПС;
					ЕстьПроблема = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если ЕстьПроблема Тогда
			СтрокаСообщения = СтрокаСообщения + "- строка №" + Формат(Стр.НомерСтроки, "ЧГ=") + Символы.ПС + НСтрокаСообщения 
						+ "////////////////////////////////////////////////////////////////" + Символы.ПС;						
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(СтрокаСообщения) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("В табличной части существуют строки с одинаковыми реквизитами ""Основное средство""!"
				+ Символы.ПС
				+ СтрокаСообщения, Отказ);
	КонецЕсли;
	 
	
	//ЕстьОшибки = Ложь;
	//СтруктураОтбора = Новый Структура("ОсновноеСредство");
	//Для Каждого ТекущаяСтрока Из ТаблицаДокумента Цикл 
	//	Если ТекущаяСтрока.КвоПроверкаДублей > 1 Тогда
	//		ОбщегоНазначения.СообщитьОбОшибке("В табличной части существуют строки с одинаковыми реквизитами " + ПроверяемыеРеквизиты + ".", Отказ);
	//		СтруктураОтбора.ОсновноеСредство = ТекущаяСтрока.ОсновноеСредство;
	//		СтрокиОС = ЭтотОбъект.ОС.НайтиСтроки(СтруктураОтбора);
	//		Для Каждого СтрокаОС Из СтрокиОС Цикл
	//			ОбщегоНазначения.СообщитьОбОшибке("- строка №" + Формат(СтрокаОС.НомерСтроки, "ЧГ="), Отказ);
	//		КонецЦикла;
	//	КонецЕсли; 
	//КонецЦикла;
	
	//---АК Susk (Суслин К.В.) 	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ПроверитьНаличиеДублейВТабличнойЧасти(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ЭтотОбъект.ОтражатьВУправленческомУчете = Ложь;
	
КонецПроцедуры

Функция ПолучитьСтатьюУценка()	

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкаОтраженияОперацийВУчетеСрезПоследних.СтатьяДоходовРасходов КАК Статья 
		|ИЗ
		|	РегистрСведений.НастройкаОтраженияОперацийВУчете.СрезПоследних(&Дата,
		|	СтатьяДоходовРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВУчете.ОсновныеСредства_УменьшениеСтоимости)) КАК НастройкаОтраженияОперацийВУчетеСрезПоследних";

	Запрос.УстановитьПараметр("Дата", Дата);

	Результат = Запрос.Выполнить();
                                                                
	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Статья;
	КонецЦикла;

	Возврат Справочники.СтатьиДоходовРасходов.ПустаяСсылка();
	
КонецФункции

Процедура ОтразитьИзменениеСтоимостиПринятыеКУчету()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнвентаризацияОСОС.ОсновноеСредство,
		|	ИнвентаризацияОСОС.Сумма,
		|	ИнвентаризацияОСОС.Местоположение
		|ПОМЕСТИТЬ втОСИзмененные
		|ИЗ
		|	Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
		|ГДЕ
		|	ИнвентаризацияОСОС.Сумма <> ИнвентаризацияОСОС.СуммаУчет
		|	И ИнвентаризацияОСОС.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|   &Дата КАК Период,
		|	втОСИзмененные.ОсновноеСредство,
		|	втОСИзмененные.Сумма КАК НачальнаяСтоимость,
		|	втОСИзмененные.Местоположение,
		|	ПринятыеКУчетуОССрезПоследних.ДатаВводаВЭксплуатацию,
		|	ПринятыеКУчетуОССрезПоследних.НачислятьАмортизацию,
		|	ПринятыеКУчетуОССрезПоследних.СрокАмортизации,
		|	ПринятыеКУчетуОССрезПоследних.СчетУчетаАмортизация,
		|	ПринятыеКУчетуОССрезПоследних.СчетУчета,
		|   &Организация КАК Организация
		|ИЗ
		|	втОСИзмененные КАК втОСИзмененные
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПринятыеКУчетуОС.СрезПоследних(&Дата, Организация = &Организация) КАК ПринятыеКУчетуОССрезПоследних
		|		ПО втОСИзмененные.ОсновноеСредство = ПринятыеКУчетуОССрезПоследних.ОсновноеСредство";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата", Дата);

	ДвиженияПринятыеКУчету = Запрос.Выполнить().Выгрузить();

	Движения.ПринятыеКУчетуОС.Записывать = Истина;
	Движения.ПринятыеКУчетуОС.Загрузить(ДвиженияПринятыеКУчету);		
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	МСФО = ЭтотОбъект.Дата > АК_УчетМСФОПривилегированный.ПолучитьПараметрыУчетаОС().НачалоВеденияУчета; 

	ДвиженияФинансовый = ЭтотОбъект.Движения.Финансовый;
	ДвиженияФинансовый.Записывать = Истина;
	ДвиженияФинансовый.Очистить();
														
	Если МСФО Тогда	
		
		ОтразитьОСКОприходованиюСписанию();
		ОтразитьНовоеПоложениеОС();	
		
		//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)		 
		//ОтразитьПроблемныеОС();
		ОтразитьПривязкуОборудованияКДатчикам();
		ПроверитьОшибочныеДанные(Отказ);
		
		Если ТипЗнч(Склад) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
			ОтразитьПринятыеКУчету();
		КонецЕсли;
		//---АК Susk (Суслин К.В.) 
		
		Если ИзменениеСуммовойОценки = Истина Тогда
					
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ИнвентаризацияОСОС.Ссылка,
				|	ИнвентаризацияОСОС.НомерСтроки,
				|	ИнвентаризацияОСОС.ОсновноеСредство,
				|	ИнвентаризацияОСОС.ИнвентарныйНомер,
				|	ИнвентаризацияОСОС.ЗаводскойНомер,
				|	ИнвентаризацияОСОС.Количество,
				|	ИнвентаризацияОСОС.Сумма,
				|	ИнвентаризацияОСОС.Амортизация,
				|	ИнвентаризацияОСОС.Местоположение,
				|	ИнвентаризацияОСОС.КоличествоУчет,
				|	ИнвентаризацияОСОС.СуммаУчет,
				|	ИнвентаризацияОСОС.АмортизацияУчет,
				|	ИнвентаризацияОСОС.СчетУчета
				|ПОМЕСТИТЬ втОсновныеСредства
				|ИЗ
				|	Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
				|ГДЕ
				|	ИнвентаризацияОСОС.Ссылка = &Ссылка
				|	И (ИнвентаризацияОСОС.Сумма <> ИнвентаризацияОСОС.СуммаУчет
				|			ИЛИ ИнвентаризацияОСОС.Амортизация <> ИнвентаризацияОСОС.АмортизацияУчет)
				|	И ИнвентаризацияОСОС.Количество = 1
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ФинансовыйДвиженияССубконто.СубконтоКт1 КАК ОсновноеСредство,
				|	-(ФинансовыйДвиженияССубконто.Сумма + ФинансовыйДвиженияССубконто.СуммаМСФО) КАК Сумма
				|ПОМЕСТИТЬ втДооценкаАмортизация
				|ИЗ
				|	РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
				|			,
				|			&Дата,
				|			СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ПереоценкаВнеоборотныхАктивов)
				|				И (СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредств)
				|					ИЛИ СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредствДо100000))
				|				И СубконтоКт1 В
				|					(ВЫБРАТЬ
				|						втОсновныеСредства.ОсновноеСредство
				|					ИЗ
				|						втОсновныеСредства),
				|			,
				|			) КАК ФинансовыйДвиженияССубконто
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ФинансовыйДвиженияССубконто.СубконтоДт1 КАК ОсновноеСредство,
				|	ФинансовыйДвиженияССубконто.Сумма + ФинансовыйДвиженияССубконто.СуммаМСФО КАК Сумма
				|ПОМЕСТИТЬ втУценкаАмортизация
				|ИЗ
				|	РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
				|			,
				|			&Дата,
				|			СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ПереоценкаВнеоборотныхАктивов)
				|				И (СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредств)
				|					ИЛИ СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредствДо100000))
				|				И СубконтоДт1 В
				|					(ВЫБРАТЬ
				|						втОсновныеСредства.ОсновноеСредство
				|					ИЗ
				|						втОсновныеСредства),
				|			,
				|			) КАК ФинансовыйДвиженияССубконто
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ФинансовыйДвиженияССубконто.СубконтоДт1 КАК ОсновноеСредство,
				|	ФинансовыйДвиженияССубконто.Сумма + ФинансовыйДвиженияССубконто.СуммаМСФО КАК Сумма
				|ПОМЕСТИТЬ втДооценка
				|ИЗ
				|	РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
				|			,
				|			&Дата,
				|			(СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации)
				|				ИЛИ СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000))
				|				И СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ПереоценкаВнеоборотныхАктивов)
				|				И СубконтоДт1 В
				|					(ВЫБРАТЬ
				|						втОсновныеСредства.ОсновноеСредство
				|					ИЗ
				|						втОсновныеСредства),
				|			,
				|			) КАК ФинансовыйДвиженияССубконто
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ФинансовыйДвиженияССубконто.СубконтоКт1 КАК ОсновноеСредство,
				|	-(ФинансовыйДвиженияССубконто.Сумма + ФинансовыйДвиженияССубконто.СуммаМСФО) КАК Сумма
				|ПОМЕСТИТЬ втУценка
				|ИЗ
				|	РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
				|			,
				|			&Дата,
				|			(СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации)
				|				ИЛИ СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000))
				|				И СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ПереоценкаВнеоборотныхАктивов)
				|				И СубконтоКт1 В
				|					(ВЫБРАТЬ
				|						втОсновныеСредства.ОсновноеСредство
				|					ИЗ
				|						втОсновныеСредства),
				|			,
				|			) КАК ФинансовыйДвиженияССубконто
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВсеДооценкиИУценки.ОсновноеСредство,
				|	СУММА(ВсеДооценкиИУценки.Дооценка) КАК Дооценка,
				|	СУММА(ВсеДооценкиИУценки.АмортизацияДооценка) КАК АмортизацияДооценка
				|ПОМЕСТИТЬ втВсеДооценкиИУценки
				|ИЗ
				|	(ВЫБРАТЬ
				|		втДооценка.ОсновноеСредство КАК ОсновноеСредство,
				|		втДооценка.Сумма КАК Дооценка,
				|		0 КАК АмортизацияДооценка
				|	ИЗ
				|		втДооценка КАК втДооценка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		втУценка.ОсновноеСредство,
				|		втУценка.Сумма,
				|		0
				|	ИЗ
				|		втУценка КАК втУценка
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		втДооценкаАмортизация.ОсновноеСредство,
				|		0,
				|		втДооценкаАмортизация.Сумма
				|	ИЗ
				|		втДооценкаАмортизация КАК втДооценкаАмортизация
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		втУценкаАмортизация.ОсновноеСредство,
				|		0,
				|		втУценкаАмортизация.Сумма
				|	ИЗ
				|		втУценкаАмортизация КАК втУценкаАмортизация) КАК ВсеДооценкиИУценки
				|
				|СГРУППИРОВАТЬ ПО
				|	ВсеДооценкиИУценки.ОсновноеСредство
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	втОсновныеСредства.ОсновноеСредство,
				|	втОсновныеСредства.Сумма,
				|	втОсновныеСредства.СуммаУчет,
				|	втОсновныеСредства.Амортизация,
				|	втОсновныеСредства.АмортизацияУчет,
				|	ЕСТЬNULL(втВсеДооценкиИУценки.Дооценка, 0) КАК СуммаДооценка,
				|	ЕСТЬNULL(втВсеДооценкиИУценки.АмортизацияДооценка, 0) КАК АмортизацияДооценка,
				|	ВЫБОР
				|		КОГДА втОсновныеСредства.Местоположение ССЫЛКА Справочник.Склады
				|			ТОГДА втОсновныеСредства.Местоположение.Владелец
				|		ИНАЧЕ втОсновныеСредства.Местоположение
				|	КОНЕЦ КАК ТорговаяТочка,
				|	втОсновныеСредства.СчетУчета
				|ИЗ
				|	втОсновныеСредства КАК втОсновныеСредства
				|		ЛЕВОЕ СОЕДИНЕНИЕ втВсеДооценкиИУценки КАК втВсеДооценкиИУценки
				|		ПО втОсновныеСредства.ОсновноеСредство = втВсеДооценкиИУценки.ОсновноеСредство";

			Запрос.УстановитьПараметр("Дата", Дата);
			Запрос.УстановитьПараметр("Ссылка", Ссылка);

			НастройкаУменьшениеСтоимостиОС = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(
															Перечисления.ВидыОперацийВУчете.ОсновныеСредства_УменьшениеСтоимости,
															ЭтотОбъект.Дата);  
															
			НастройкаУменьшениеАмортизацииОС = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(
																Перечисления.ВидыОперацийВУчете.ОсновныеСредства_УменьшениеАмортизации,
																ЭтотОбъект.Дата);
																
			ВыборкаОС = Запрос.Выполнить().Выбрать();

			Пока ВыборкаОС.Следующий() Цикл
				
				//Увеличение стоимости
				Если ВыборкаОС.Сумма > ВыборкаОС.СуммаУчет Тогда
					
					Проводка = ДвиженияФинансовый.Добавить(); 		
					Проводка.Период = ЭтотОбъект.Дата;	
					Проводка.Организация = ЭтотОбъект.Организация;
					Проводка.Содержание = "Увеличение стоимости ОС";
					
					Если ВыборкаОС.СчетУчета = ПланыСчетов.Финансовый.ОсновныеСредстваДо100000 Тогда 
						Проводка.СчетДт = ПланыСчетов.Финансовый.ОсновныеСредстваДо100000;
					Иначе 	
						Проводка.СчетДт = ПланыСчетов.Финансовый.ОсновныеСредстваВОрганизации;
					КонецЕсли;	
						
						
					Проводка.СубконтоДт.ОсновныеСредства = ВыборкаОС.ОсновноеСредство;
					
					Проводка.СчетКт = ПланыСчетов.Финансовый.ПереоценкаВнеоборотныхАктивов;
					Проводка.СубконтоКт.ОсновныеСредства = ВыборкаОС.ОсновноеСредство;
					
					Проводка.Сумма = ВыборкаОС.Сумма - ВыборкаОС.СуммаУчет;
								
				КонецЕсли;	
				
				//Уменьшение стоимости
				Если ВыборкаОС.Сумма < ВыборкаОС.СуммаУчет Тогда
					
					СуммаУменьшение = ВыборкаОС.СуммаУчет - ВыборкаОС.Сумма;
					
					Если ВыборкаОС.СуммаДооценка > 0 Тогда
						
						Проводка = ДвиженияФинансовый.Добавить();	
		
						Проводка.Период = ЭтотОбъект.Дата;	
						Проводка.Организация = ЭтотОбъект.Организация;
						Проводка.Содержание = "Уменьшение стоимости ОС в пределах предыдущих дооценок";
						
						Проводка.СчетДт = ПланыСчетов.Финансовый.ПереоценкаВнеоборотныхАктивов;
						Проводка.СубконтоДт.ОсновныеСредства = ВыборкаОС.ОсновноеСредство;
						
						Если ВыборкаОС.СчетУчета = ПланыСчетов.Финансовый.ОсновныеСредстваДо100000 Тогда
							Проводка.СчетКт = ПланыСчетов.Финансовый.ОсновныеСредстваДо100000;
						Иначе 	
							Проводка.СчетКт = ПланыСчетов.Финансовый.ОсновныеСредстваВОрганизации;
						КонецЕсли;	
							
						Проводка.СубконтоКт.ОсновныеСредства = ВыборкаОС.ОсновноеСредство;
						
						Если ВыборкаОС.СуммаДооценка > СуммаУменьшение Тогда
							Проводка.Сумма = СуммаУменьшение;
							СуммаУменьшение = 0;
						Иначе 
							Проводка.Сумма = ВыборкаОС.СуммаДооценка;
							СуммаУменьшение = СуммаУменьшение - ВыборкаОС.СуммаДооценка;
						КонецЕсли;	
						
					КонецЕсли;	
					
					Если СуммаУменьшение > 0 Тогда
						
						Проводка = ДвиженияФинансовый.Добавить(); 		
						Проводка.Период = ЭтотОбъект.Дата;	
						Проводка.Организация = ЭтотОбъект.Организация;
						Проводка.Содержание = "Уменьшение стоимости ОС";
						
						Проводка.СчетДт = НастройкаУменьшениеСтоимостиОС.Счет;	
						Проводка.СубконтоДт.ТорговыеТочки = ВыборкаОС.ТорговаяТочка;
						//+++ZEZA
						
						
						Проводка.СубконтоДт.ЦФО = НастройкаУменьшениеСтоимостиОС.ЦФО;
						Проводка.СубконтоДт.СтатьиДоходовРасходов = НастройкаУменьшениеСтоимостиОС.СтатьяДоходовРасходов;
						
						Если ВыборкаОС.СчетУчета = ПланыСчетов.Финансовый.ОсновныеСредстваДо100000 Тогда
							Проводка.СчетКт = ПланыСчетов.Финансовый.ОсновныеСредстваДо100000;
						Иначе 	
							Проводка.СчетКт = ПланыСчетов.Финансовый.ОсновныеСредстваВОрганизации;
						КонецЕсли;	
							
							
						Проводка.СубконтоКт.ОсновныеСредства = ВыборкаОС.ОсновноеСредство;
						
						Проводка.Сумма = СуммаУменьшение;
						
					КонецЕсли;
					
				КонецЕсли;			
				
				
				//Увеличение аммортизации
				Если ВыборкаОС.Амортизация > ВыборкаОС.АмортизацияУчет Тогда
					
	 				Проводка = ДвиженияФинансовый.Добавить(); 		
					Проводка.Период = ЭтотОбъект.Дата;	
					Проводка.Организация = ЭтотОбъект.Организация;
					Проводка.Содержание = "Увеличение начисленной аммортизации ОС";
					
					Если ВыборкаОС.СчетУчета = ПланыСчетов.Финансовый.ОсновныеСредстваДо100000 Тогда
						Проводка.СчетДт = ПланыСчетов.Финансовый.АмортизацияОсновныхСредствДо100000;
					Иначе 	
						Проводка.СчетДт = ПланыСчетов.Финансовый.АмортизацияОсновныхСредств;
					КонецЕсли;	
						
					Проводка.СубконтоДт.ОсновныеСредства = ВыборкаОС.ОсновноеСредство;
				
					Проводка.СчетКт = ПланыСчетов.Финансовый.ПереоценкаВнеоборотныхАктивов;
					Проводка.СубконтоКт.ОсновныеСредства = ВыборкаОС.ОсновноеСредство;
					
					Проводка.Сумма = ВыборкаОС.Амортизация - ВыборкаОС.АмортизацияУчет;
					
				КонецЕсли;
							
				//Уменьшение амортизации
				Если ВыборкаОС.Амортизация < ВыборкаОС.АмортизацияУчет Тогда
								
					СуммаУменьшение = ВыборкаОС.АмортизацияУчет - ВыборкаОС.Амортизация;
					
					Если ВыборкаОС.АмортизацияДооценка > 0 Тогда
						
		 				Проводка = ДвиженияФинансовый.Добавить(); 		
						Проводка.Период = ЭтотОбъект.Дата;	
						Проводка.Организация = ЭтотОбъект.Организация;
						Проводка.Содержание = "Уменьшение амортизации ОС в пределах предыдущих дооценок";
						
						Проводка.СчетДт = ПланыСчетов.Финансовый.ПереоценкаВнеоборотныхАктивов;
						Проводка.СубконтоДт.ОсновныеСредства = ВыборкаОС.ОсновноеСредство;
						
						Если ВыборкаОС.СчетУчета = ПланыСчетов.Финансовый.ОсновныеСредстваДо100000 Тогда
							Проводка.СчетКт = ПланыСчетов.Финансовый.АмортизацияОсновныхСредствДо100000;
						Иначе 	
							Проводка.СчетКт = ПланыСчетов.Финансовый.АмортизацияОсновныхСредств;
						КонецЕсли;	
							
						Проводка.СубконтоКт.ОсновныеСредства = ВыборкаОС.ОсновноеСредство;
					
						Если ВыборкаОС.АмортизацияДооценка > СуммаУменьшение Тогда
							Проводка.Сумма = СуммаУменьшение;
							СуммаУменьшение = 0;
						Иначе 
							Проводка.Сумма = ВыборкаОС.АмортизацияДооценка;
							СуммаУменьшение = СуммаУменьшение - ВыборкаОС.АмортизацияДооценка;
						КонецЕсли;	
						
					КонецЕсли;					
					
					Если  СуммаУменьшение > 0 Тогда
					
						Проводка = ДвиженияФинансовый.Добавить(); 		
						Проводка.Период = ЭтотОбъект.Дата;	
						Проводка.Организация = ЭтотОбъект.Организация;
						Проводка.Содержание = "Уменьшение начисленной аммортизации ОС";
						
						Если ВыборкаОС.СчетУчета = ПланыСчетов.Финансовый.ОсновныеСредстваДо100000 Тогда
							Проводка.СчетДт = ПланыСчетов.Финансовый.АмортизацияОсновныхСредствДо100000;
						Иначе	
							Проводка.СчетДт = ПланыСчетов.Финансовый.АмортизацияОсновныхСредств;
						КонецЕсли;
						
						Проводка.СубконтоДт.ОсновныеСредства = ВыборкаОС.ОсновноеСредство;
								
						Проводка.СчетКт = НастройкаУменьшениеАмортизацииОС.Счет;				
						Проводка.СубконтоКт.ЦФО = НастройкаУменьшениеАмортизацииОС.ЦФО;
						Проводка.СубконтоКт.СтатьиДоходовРасходов = НастройкаУменьшениеАмортизацииОС.СтатьяДоходовРасходов;
						Проводка.СубконтоКт.ТорговыеТочки = ВыборкаОС.ТорговаяТочка;  
								
						Проводка.Сумма = СуммаУменьшение;
						
					КонецЕсли;	
						
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;	
		//ОтразитьИзменениеСтоимостиПринятыеКУчету();
		
	Иначе	
		
		Если ЭтотОбъект.СчетУчета.Пустая() Тогда
			Сообщить("Не указан счет учета! Проведение невозможно.");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Если ЭтотОбъект.ОтражатьВУправленческомУчете
				ИЛИ ЭтотОбъект.Дата < Дата(2014, 9, 1) Тогда
			Возврат
		КонецЕсли;
		

		Счет08 	= ПланыСчетов.Финансовый.КапитальныеВложения;
		Счет443	= ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;
		СтатьяДДСИнвентаризацияОС	= ?(ЭтотОбъект.Склад = Справочники.Склады.НайтиПоКоду("000000297"),   // склад_оборудование
											Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("121204"),
											Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("139119"));
		СтатьяДРИнвентаризацияОС	= СтатьяДДСИнвентаризацияОС.ОсновнаяСтатьяДоходовРасходов;
		ЦФОУправлениеРазвития	= Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_12");
		СтрЕдиницаВсе			= Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_000");		
			
		// Регистр бухгалтерии "Финансовый"
		РезультатЗапроса = ПолучитьРезультатЗапросаПоОстаткам();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			мВидЗаписи = Выборка.ВидДвижения;
			
			//
			Проводка = ДвиженияФинансовый.Добавить();
			Проводка.Период = ЭтотОбъект.Дата;
			
			Проводка["Счет" + мВидЗаписи] 						= ЭтотОбъект.СчетУчета;
			
			Проводка["Субконто" + мВидЗаписи].МестаХраненияОС 	= ЭтотОбъект.Склад;
			Проводка["Субконто" + мВидЗаписи].ОсновныеСредства 	= Выборка.ОсновноеСредство;
			
			Проводка["Количество" + мВидЗаписи] 				= Выборка.Количество;
			
			Проводка.Сумма = Выборка.Сумма02;//0;//Выборка.Сумма;
				
			Если НЕ Выборка.Сумма = 0 Тогда
				
				Если мВидЗаписи = "Дт" Тогда
					мВидЗаписи2 = "Кт";
				Иначе
					мВидЗаписи2 = "Дт";
				КонецЕсли;
					
				
				//
				Проводка = ДвиженияФинансовый.Добавить();
				Проводка.Период = ЭтотОбъект.Дата;
				
				Проводка["Счет" + мВидЗаписи] = Счет08;
				Проводка["Субконто" + мВидЗаписи].СтатьиДвиженияДенежныхСредств = ?(мВидЗаписи = "Дт", СтатьяДДСИнвентаризацияОС, Выборка.СтатьяДДС);
				Проводка["Субконто" + мВидЗаписи].ОсновныеСредства 				= Выборка.ОсновноеСредство;
				Проводка["Субконто" + мВидЗаписи].ЦФО 							= ЦФОУправлениеРазвития;
				
				Проводка["Счет" + мВидЗаписи2] = Счет443;
				Проводка["Субконто" + мВидЗаписи2].ТорговыеТочки 			= СтрЕдиницаВсе;
				Проводка["Субконто" + мВидЗаписи2].СтатьиДоходовРасходов 	= СтатьяДРИнвентаризацияОС;
				Проводка["Субконто" + мВидЗаписи2].ЦФО 						= ЦФОУправлениеРазвития;
						
				Проводка.Сумма = Выборка.Сумма;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтразитьОСКОприходованиюСписанию()
	
	Движения.АК_ОсновныеСредстваКСписаниюОприходованию.Записывать = Истина;
	Движения.АК_ОсновныеСредстваКСписаниюОприходованию.Очистить();
	

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнвентаризацияОСОС.ОсновноеСредство,
		|	СУММА(ИнвентаризацияОСОС.Количество - ИнвентаризацияОСОС.КоличествоУчет) КАК Количество,
		|	ИнвентаризацияОСОС.Ссылка.Дата КАК Период,
		|	ВЫБОР
		|		КОГДА ПринятыеКУчетуОССрезПоследних.ОсновноеСредство ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ПринятоКУчету,
		|	ЕСТЬNULL(СостояниеОССрезПоследних.Списано, 0) КАК Списано
		|ПОМЕСТИТЬ втОтклонения
		|ИЗ
		|	Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеОС.СрезПоследних КАК СостояниеОССрезПоследних
		|		ПО ИнвентаризацияОСОС.ОсновноеСредство = СостояниеОССрезПоследних.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПринятыеКУчетуОС.СрезПоследних КАК ПринятыеКУчетуОССрезПоследних
		|		ПО (ИнвентаризацияОСОС.ОсновноеСредство = ПринятыеКУчетуОССрезПоследних.ОсновноеСредство
		|				И ПринятыеКУчетуОССрезПоследних.Организация = ИнвентаризацияОСОС.Ссылка.Организация)
		|ГДЕ
		|	ИнвентаризацияОСОС.Ссылка = &Ссылка
		|	И ИнвентаризацияОСОС.Количество <> ИнвентаризацияОСОС.КоличествоУчет
		|
		|СГРУППИРОВАТЬ ПО
		|	ИнвентаризацияОСОС.ОсновноеСредство,
		|	ИнвентаризацияОСОС.Ссылка.Дата,
		|	ВЫБОР
		|		КОГДА ПринятыеКУчетуОССрезПоследних.ОсновноеСредство ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	ЕСТЬNULL(СостояниеОССрезПоследних.Списано, 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОтклонения.ОсновноеСредство,
		|	втОтклонения.Количество,
		|	втОтклонения.Период,
		|	втОтклонения.ПринятоКУчету
		|ПОМЕСТИТЬ втОприходование
		|ИЗ
		|	втОтклонения КАК втОтклонения
		|ГДЕ
		|	втОтклонения.Количество > 0
		|	И НЕ втОтклонения.ПринятоКУчету
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОтклонения.ОсновноеСредство,
		|	втОтклонения.Количество,
		|	втОтклонения.Период,
		|	втОтклонения.ПринятоКУчету
		|ПОМЕСТИТЬ втСписание
		|ИЗ
		|	втОтклонения КАК втОтклонения
		|ГДЕ
		|	втОтклонения.Количество < 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОприходование.ОсновноеСредство,
		|	втОприходование.Количество,
		|	втОприходование.Период,
		|	втОприходование.ПринятоКУчету
		|ПОМЕСТИТЬ Итоговая
		|ИЗ
		|	втОприходование КАК втОприходование
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втСписание.ОсновноеСредство,
		|	втСписание.Количество,
		|	втСписание.Период,
		|	втСписание.ПринятоКУчету
		|ИЗ
		|	втСписание КАК втСписание
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Итоговая.ОсновноеСредство,
		|	СУММА(Итоговая.Количество) КАК Количество,
		|	Итоговая.Период,
		|	Итоговая.ПринятоКУчету
		|ИЗ
		|	Итоговая КАК Итоговая
		|
		|СГРУППИРОВАТЬ ПО
		|	Итоговая.ОсновноеСредство,
		|	Итоговая.Период,
		|	Итоговая.ПринятоКУчету";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Результат = Запрос.Выполнить().Выгрузить();
	Движения.АК_ОсновныеСредстваКСписаниюОприходованию.Загрузить(Результат);
	
КонецПроцедуры	

Процедура ОтразитьНовоеПоложениеОС()
	
    ЭтотОбъект.Движения.СостояниеОС.Записывать = Истина;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнвентаризацияОСОС.ОсновноеСредство,
		|	ИнвентаризацияОСОС.Местоположение,
		|	ИнвентаризацияОСОС.Ссылка.Дата КАК Период
		|ИЗ
		|	Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеОС.СрезПоследних(&ДатаДокумента, ) КАК СостояниеОССрезПоследних
		|		ПО ИнвентаризацияОСОС.ОсновноеСредство = СостояниеОССрезПоследних.ОсновноеСредство
		|ГДЕ
		|	ИнвентаризацияОСОС.Ссылка = &Ссылка
		|	И (СостояниеОССрезПоследних.Местоположение <> ИнвентаризацияОСОС.Местоположение
		|			ИЛИ СостояниеОССрезПоследних.Местоположение ЕСТЬ NULL )";

	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Результат = Запрос.Выполнить().Выгрузить();
	ЭтотОбъект.Движения.СостояниеОС.Загрузить(Результат);
	
КонецПроцедуры	

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	//ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ,, Истина);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МСФО = ЭтотОбъект.Дата > АК_УчетМСФОПривилегированный.ПолучитьПараметрыУчетаОС().НачалоВеденияУчета; 
	
	Если МСФО Тогда
		
		Реквизит = ПроверяемыеРеквизиты.Найти("Склад");
		ПроверяемыеРеквизиты.Удалить(Реквизит);
		
	КонецЕсли;	
	     
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.12.27 ИП-00016825
Процедура ОтразитьПроблемныеОС()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СостояниеОССрезПервых.ОсновноеСредство,
	               |	СостояниеОССрезПервых.Местоположение,
	               |	СостояниеОССрезПервых.Списано
	               |ПОМЕСТИТЬ СрезСостояния
	               |ИЗ
	               |	РегистрСведений.СостояниеОС.СрезПервых(&Граница, ОсновноеСредство В (&СписокОС)) КАК СостояниеОССрезПервых
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ИнвентаризацияОСОС.ОсновноеСредство,
	               |	ВЫБОР
	               |		КОГДА СрезСостояния.ОсновноеСредство ЕСТЬ NULL 
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ИнвентаризацияОСОС.Количество = 0
	               |						И СрезСостояния.Списано
	               |					ТОГДА ИСТИНА
	               |				КОГДА ИнвентаризацияОСОС.Количество <> 0
	               |						И НЕ СрезСостояния.Списано
	               |						И СрезСостояния.Местоположение <> ИнвентаризацияОСОС.Местоположение
	               |					ТОГДА ИСТИНА
	               |				ИНАЧЕ ЛОЖЬ
	               |			КОНЕЦ
	               |	КОНЕЦ КАК ЕстьПроблема
	               |ПОМЕСТИТЬ Итоговая
	               |ИЗ
	               |	СрезСостояния КАК СрезСостояния
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
	               |		ПО СрезСостояния.ОсновноеСредство = ИнвентаризацияОСОС.ОсновноеСредство
	               |			И (ИнвентаризацияОСОС.Ссылка = &Ссылка)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Итоговая.ОсновноеСредство
	               |ИЗ
	               |	Итоговая КАК Итоговая
	               |ГДЕ
	               |	Итоговая.ЕстьПроблема";
				   
	Гр = Новый Граница(МоментВремени(), ВидГраницы.Исключая);
	
	Запрос.УстановитьПараметр("Граница", Гр);
	Запрос.УстановитьПараметр("СписокОС", ОС.ВыгрузитьКолонку("ОсновноеСредство"));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ЕстьПроблема = Ложь;
	
	Для Каждого Стр Из ОС Цикл
		Стр.ПроблемноеОС = Ложь;
	КонецЦикла;
	
	ТЗДвиженияОСКСписаниюОприходованию = Движения.АК_ОсновныеСредстваКСписаниюОприходованию.Выгрузить();
	ТЗДвиженияСостояниеОС = Движения.СостояниеОС.Выгрузить();
	ТЗДвиженияПринятыеКУчету = Движения.ПринятыеКУчетуОС.Выгрузить();
	
	Пока Выборка.Следующий() Цикл
		НайдСтроки = ОС.НайтиСтроки(Новый Структура("ОсновноеСредство", Выборка.ОсновноеСредство));
		
		Для Каждого НСтр Из НайдСтроки Цикл
			Если НЕ НСтр.СнятВручнуюПризнакПроблемноеОС Тогда
				НСтр.ПроблемноеОС = Истина;
				ЕстьПроблема =  Истина;
			КонецЕсли;
			
			//
			НайдСтрДляУд = ТЗДвиженияОСКСписаниюОприходованию.НайтиСтроки(Новый Структура("ОсновноеСредство", НСтр.ОсновноеСредство));
			
			Для Каждого СтрУд Из НайдСтрДляУд Цикл
				ТЗДвиженияОСКСписаниюОприходованию.Удалить(СтрУд);
			КонецЦикла;
			
			//
			НайдСтрДляУд = ТЗДвиженияСостояниеОС.НайтиСтроки(Новый Структура("ОсновноеСредство", НСтр.ОсновноеСредство));
			
			Для Каждого СтрУд Из НайдСтрДляУд Цикл
				ТЗДвиженияСостояниеОС.Удалить(СтрУд);
			КонецЦикла;
			
			//
			НайдСтрДляУд = ТЗДвиженияПринятыеКУчету.НайтиСтроки(Новый Структура("ОсновноеСредство", НСтр.ОсновноеСредство));
			
			Для Каждого СтрУд Из НайдСтрДляУд Цикл
				ТЗДвиженияПринятыеКУчету.Удалить(СтрУд);
			КонецЦикла;			
			
		КонецЦикла;
		
	КонецЦикла;
	
	Движения.АК_ОсновныеСредстваКСписаниюОприходованию.Загрузить(ТЗДвиженияОСКСписаниюОприходованию);
	Движения.СостояниеОС.Загрузить(ТЗДвиженияСостояниеОС);
	Движения.ПринятыеКУчетуОС.Загрузить(ТЗДвиженияПринятыеКУчету);
	
	ЗаписыватьДок = Ложь;
	
	Если НЕ СуществуютПроблемныеОС И ЕстьПроблема Тогда
		СуществуютПроблемныеОС = Истина;		
	ИначеЕсли СуществуютПроблемныеОС И НЕ ЕстьПроблема Тогда
		СуществуютПроблемныеОС = Ложь;				
	КонецЕсли;                                                    
	
	ЭтотОбъект.ОбменДанными.Загрузка = Истина;
	ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);	
		
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.12.27 ИП-00016825
Процедура ОтразитьПривязкуОборудованияКДатчикам()
	
	Движения.СоответствиеДатчиковИОсновныхСредств.Записывать = Истина;
	Движения.СоответствиеДатчиковИОсновныхСредств.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИнвентаризацияОСОС.ОсновноеСредство,
	               |	ИнвентаризацияОСОС.Датчик
	               |ИЗ
	               |	Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
	               |ГДЕ
	               |	ИнвентаризацияОСОС.Ссылка = &Ссылка
	               |	И НЕ ИнвентаризацияОСОС.Датчик = ЗНАЧЕНИЕ(Справочник.Датчики.ПустаяСсылка)
	               |	И НЕ ИнвентаризацияОСОС.ПроблемноеОС
	               |	И НЕ ИнвентаризацияОСОС.ОсновноеСредство = ЗНАЧЕНИЕ(Справочник.ОсновныеСредства.ПустаяСсылка)";
				   
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Движ = Движения.СоответствиеДатчиковИОсновныхСредств.Добавить();
		ЗаполнитьЗначенияСвойств(Движ, Выборка);
		Движ.Период = Дата;		
	КонецЦикла;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.12.27 ИП-00016825
Процедура ПроверитьОшибочныеДанные(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИнвентаризацияОСОС.Ссылка,
	               |	ИнвентаризацияОСОС.ОсновноеСредство
	               |ИЗ
	               |	Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСТекущая
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
	               |		ПО ИнвентаризацияОСТекущая.Ссылка <> ИнвентаризацияОСОС.Ссылка
	               |			И ИнвентаризацияОСТекущая.ОсновноеСредство = ИнвентаризацияОСОС.ОсновноеСредство
	               |			И (ИнвентаризацияОСОС.Ссылка.Проведен
	               |				И ИнвентаризацияОСОС.Количество <> 0)
	               |			И (ИнвентаризацияОСОС.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода)
	               |ГДЕ
	               |	ИнвентаризацияОСТекущая.Ссылка = &Ссылка
	               |	И НЕ ИнвентаризацияОСОС.Ссылка ЕСТЬ NULL";
				   
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Дата));
	                                           
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ОбщегоНазначения.СообщитьОбОшибке("Основное средство: " + Строка(Выборка.ОсновноеСредство) + " (" + Выборка.ОсновноеСредство.ИнвентарныйНомер + ") - уже указано в документе: " + Строка(Выборка.Ссылка), Отказ);
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ИнвентаризацияОСОС.ОсновноеСредство) КАК ОсновноеСредство,
	               |	ИнвентаризацияОСОС.Датчик
	               |ИЗ
	               |	Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
	               |ГДЕ
	               |	ИнвентаризацияОСОС.Ссылка = &Ссылка
	               |	И НЕ ИнвентаризацияОСОС.Датчик = ЗНАЧЕНИЕ(Справочник.Датчики.ПустаяСсылка)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ИнвентаризацияОСОС.Датчик
	               |
	               |ИМЕЮЩИЕ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ИнвентаризацияОСОС.ОсновноеСредство) > 1";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ОбщегоНазначения.СообщитьОбОшибке("Датчик: " + Строка(Выборка.Датчик) + " указан в документе более одного раза!!!", Отказ);
	КонецЦикла;
	
КонецПроцедуры	

//+++АК Susk (Суслин К.В.) 2017.12.27 ИП-00016825
Процедура ОтразитьПринятыеКУчету()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИнвентаризацияОСОС.ОсновноеСредство
	               |ИЗ
	               |	Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПринятыеКУчетуОС.СрезПоследних(&Дата, ) КАК ПринятыеКУчетуОССрезПоследних
	               |		ПО ИнвентаризацияОСОС.ОсновноеСредство = ПринятыеКУчетуОССрезПоследних.ОсновноеСредство
	               |ГДЕ
	               |	ИнвентаризацияОСОС.Ссылка = &Ссылка
	               |	И ПринятыеКУчетуОССрезПоследних.ОсновноеСредство ЕСТЬ NULL";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);	
	Запрос.УстановитьПараметр("Дата", Дата);

	Движения.ПринятыеКУчетуОС.Записывать = Истина;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НовДвиж = Движения.ПринятыеКУчетуОС.Добавить();
		НовДвиж.ОсновноеСредство = Выборка.ОсновноеСредство;
		НовДвиж.ДатаВводаВЭксплуатацию = Дата;
		НовДвиж.НачальнаяСтоимость = 0;
		НовДвиж.НачислятьАмортизацию = Ложь;
		НовДвиж.СрокАмортизации = 0;
		НовДвиж.Период = Дата;
	КонецЦикла;
	
КонецПроцедуры
