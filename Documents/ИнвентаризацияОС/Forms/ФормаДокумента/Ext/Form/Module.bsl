
&НаСервереБезКонтекста
Функция ПолучитьЦФОПоТТ(мТорговаяТочка, мДата)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТТ"	, мТорговаяТочка);
	Запрос.УстановитьПараметр("Дата", мДата);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО
	|ИЗ
	|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&Дата, СтруктурнаяЕдиница = &ТТ) КАК ЦФОСтруктурныхЕдиницСрезПоследних";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ЦФО;
	Иначе
		Возврат Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьИнвентарныйНомерОС(мОС)
	
	Возврат мОС.ИнвентарныйНомер;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЗаводскойНомерОС(мОС)
	
	Возврат мОС.ЗаводскойНомер;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОСПоИнвентарномуНомеру(мИнвентарныйНомер)
	
	Возврат Справочники.ОсновныеСредства.НайтиПоРеквизиту("ИнвентарныйНомер", мИнвентарныйНомер);
	
КонецФункции

&НаКлиенте
Процедура ПодборОСПоИнвНомеру(Команда)
	
	Перем мИнвентарныйНомер;
	
	Если ВвестиЗначение(мИнвентарныйНомер, "Укажите инвентарный номер", Новый ОписаниеТипов("Строка")) Тогда
		ТекОС = ПолучитьОСПоИнвентарномуНомеру(мИнвентарныйНомер);
		Если НЕ ТекОС.Пустая() Тогда
			
			НоваяСтрока = Объект.ОС.Добавить();
			НоваяСтрока.ОсновноеСредство 	= ТекОС;
			НоваяСтрока.ИнвентарныйНомер 	= мИнвентарныйНомер;
			НоваяСтрока.ЗаводскойНомер 		= ТекОС.ЗаводскойНомер;
			НоваяСтрока.Количество 			= 1;
			
			мМассив = Новый Массив;
			мМассив.Добавить(ТекОС);
			ЗаполнитьУчетныеКоличества(мМассив); 
			
		Иначе
			
			
			
			   
			
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОстаткамиСервер(мНаименование = "")
	
	Если Объект.ОтражатьВУправленческомУчете Тогда
		Возврат;
	КонецЕсли;
	
    ДлинаНаименования = СтрДлина(СокрЛП(мНаименование));
	ЕстьОтборПоНаименованию = (ДлинаНаименования > 0);
	
	мДата = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата());
	мДатаНовогоУчетаСчетовОС = Константы.ДатаИзмененияУчетаПоСчетамОС.Получить();
	ЕстьНовыйУчетСчетовОС = (НЕ мДата < мДатаНовогоУчетаСчетовОС);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза"	, мДата);
	Запрос.Параметры.Вставить("Склад"		, Объект.Склад);
	Если НЕ ЕстьНовыйУчетСчетовОС Тогда
		Запрос.Параметры.Вставить("ЦФО"		, Объект.ЦФО);
	КонецЕсли;
	Если ЕстьОтборПоНаименованию Тогда
		Запрос.Параметры.Вставить("Наименование"		, мНаименование);
		Запрос.УстановитьПараметр("ДлинаНаименования"	, ДлинаНаименования);
	КонецЕсли;
	Запрос.УстановитьПараметр("СчетУчета"	, Объект.СчетУчета);
		
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФинансовыйОстатки.Субконто3 КАК ОсновноеСредство,
	|	ВЫРАЗИТЬ(ФинансовыйОстатки.Субконто3 КАК Справочник.ОсновныеСредства).ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ВЫРАЗИТЬ(ФинансовыйОстатки.Субконто3 КАК Справочник.ОсновныеСредства).ЗаводскойНомер КАК ЗаводскойНомер,
	|	ФинансовыйОстатки.КоличествоОстаток КАК Количество,
	|	ФинансовыйОстатки.КоличествоОстаток КАК КоличествоУчетное,
	|	ФинансовыйОстатки.СуммаОстаток КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(
	|			&ДатаСреза,
	|			Счет = &СчетУчета,
	|			,
	|			Субконто2 = &Склад
	|				И &УсловиеПоЦФО
	|				И &УсловиеПоНаименованию) КАК ФинансовыйОстатки";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "
	|				И &УсловиеПоЦФО",
		?(НЕ ЕстьНовыйУчетСчетовОС, "
	|				И Субконто1 = &ЦФО", ""));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "
	|				И &УсловиеПоНаименованию",
		?(ЕстьОтборПоНаименованию, "
	|				И ПОДСТРОКА(ВЫРАЗИТЬ(Субконто3 КАК Справочник.ОсновныеСредства).Наименование, 1, &ДлинаНаименования) = &Наименование", ""));
	
	Запрос.Текст = ТекстЗапроса;
	
	Объект.ОС.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОСПоНаименованию(Команда)
	
	Перем мЗначение;
	
	Если ВвестиЗначение(мЗначение, "Укажите наименование", Новый ОписаниеТипов("Строка")) Тогда
		ЗаполнитьОстаткамиСервер(мЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОстатками(Команда)

	ЗаполнитьОстаткамиСервер();
	
КонецПроцедуры

Процедура ЗаполнитьУчетныеКоличества(мМассив = "")
	
	Если МСФО ИЛИ Объект.ОтражатьВУправленческомУчете Тогда
		Возврат;
	КонецЕсли;
	
	Если мМассив = "" Тогда
		мМассивОС = Объект.ОС.Выгрузить(, "ОсновноеСредство"); // в общем случае - по всей ТЧ ОС
	Иначе
		мМассивОС = мМассив;
	КонецЕсли;
	
	мДата = ?(ЗначениеЗаполнено(Объект.Дата), Объект.Дата, ТекущаяДата());
	мДатаНовогоУчетаСчетовОС = Константы.ДатаИзмененияУчетаПоСчетамОС.Получить();
	ЕстьНовыйУчетСчетовОС = (НЕ мДата < мДатаНовогоУчетаСчетовОС);
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ДатаСреза"	, мДата);
	Запрос.Параметры.Вставить("Склад"		, Объект.Склад);
	Если НЕ ЕстьНовыйУчетСчетовОС Тогда
		Запрос.Параметры.Вставить("ЦФО"		, Объект.ЦФО);
	КонецЕсли;
	Запрос.УстановитьПараметр("СчетУчета"	, Объект.СчетУчета);
	Запрос.Параметры.Вставить("МассивОС"	, мМассивОС);
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФинансовыйОстатки.Субконто3 КАК ОсновноеСредство,
	|	ФинансовыйОстатки.КоличествоОстаток КАК КоличествоУчетное
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(
	|			&ДатаСреза,
	|			Счет = &СчетУчета,
	|			,
	|			Субконто2 = &Склад
	|				И Субконто3 В (&МассивОС)
	|				И &УсловиеПоЦФО) КАК ФинансовыйОстатки";
						
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "
	|				И &УсловиеПоЦФО",
		?(НЕ ЕстьНовыйУчетСчетовОС, "
	|				И Субконто1 = &ЦФО", ""));
		
	Запрос.Текст = ТекстЗапроса;
	
	ТаблицаОстатков = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТЧ Из Объект.ОС Цикл    
		СтрокаОстатка = ТаблицаОстатков.Найти(СтрокаТЧ.ОсновноеСредство);
		Если (мМассив = ""
				ИЛИ НЕ мМассивОС.Найти(СтрокаТЧ.ОсновноеСредство) = Неопределено) Тогда
			СтрокаТЧ.КоличествоУчетное	= ?(НЕ СтрокаОстатка = Неопределено, СтрокаОстатка.КоличествоУчетное, 0);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(Объект.Ссылка.ПолучитьОбъект(), ЭтаФорма);
	КонецЕсли;	

	УстановитьВариант();
	
	Если МСФО Тогда
		
		УстановитьДоступностьДляМагазина();
		
	Иначе 	
		
		Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
			
			Объект.СчетУчета 		= ПланыСчетов.Финансовый.ККМ; //ПланыСчетов.Финансовый.ХолодильноеОборудование; //02.2
			Объект.Склад			= Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_69");
			Объект.ЦФО 				= ПолучитьЦФОПоТТ(Объект.Склад, ТекущаяДата());
		КонецЕсли;
		
		ЗаполнитьУчетныеКоличества();
		
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Ответственный 	= ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;	
		
КонецПроцедуры

Процедура УстановитьДоступностьДляМагазина()
	
	ЭтоПолныеПрава = РольДоступна("ПолныеПрава") или РольДоступна("ОсновныеСредства");
	
	Если ЗначениеЗаполнено(ПараметрыСеанса.ТорговаяТочкаПоАйпи) Тогда
		
		Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Объект.Склад = ПараметрыСеанса.ТорговаяТочкаПоАйпи;
		КонецЕсли;	
		Элементы.Склад1.Доступность = ЭтоПолныеПрава;
		
	Иначе 
		
		Элементы.Склад1.Доступность = Истина;
		
	КонецЕсли;		
	
КонецПроцедуры	

Процедура УстановитьВариант();
	
	МСФО = АК_ОсновныеСредства.УчетМСФО(Объект.Дата);
	
	УсловноеОформление();	
	
КонецПроцедуры	

Процедура УсловноеОформление()
	
	Элементы.ГруппаВариантНовый.Видимость = МСФО;	
	Элементы.ГруппаВариантСтарый.Видимость = Не МСФО;
	
	ДоступнаПереоценка = Объект.ИзменениеСуммовойОценки;
	
	Элементы.ОборудованиеГруппаСумма.Видимость = ДоступнаПереоценка;
	Элементы.ОборудованиеГруппаАмортизация.Видимость = ДоступнаПереоценка;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьУчетныеКоличества();

КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	УстановитьВариант();
	ЗаполнитьУчетныеКоличества();
	
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.Склад) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		мДата = ?(НЕ ЗначениеЗаполнено(Объект.Ссылка), ТекущаяДата(), Объект.Дата);
		Объект.ЦФО = ПолучитьЦФОПоТТ(Объект.Склад, мДата);
	КонецЕсли;
	
	ЗаполнитьУчетныеКоличества();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтражатьВУправленческомУчетеПриИзменении(Элемент)
	
	ЗаполнитьУчетныеКоличества();
	
КонецПроцедуры

&НаКлиенте
Процедура ОСПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Копирование Тогда
		
		Отказ = Истина;
		
		НоваяСтрока = Объект.ОС.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Элементы.ОС.ТекущиеДанные,, "ОсновноеСредство");
		НоваяСтрока.Количество = 1;
		Элементы.ОС.ТекущаяСтрока = НоваяСтрока;
		Элементы.ОС.ИзменитьСтроку();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОСВПоСчету(Команда)
	
	Если Объект.ОтражатьВУправленческомУчете Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.СчетУчета.Пустая() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан счет учета!");
		Возврат;
	КонецЕсли;
	
	
	ФормаОтчета = ПолучитьФорму("Отчет.ОборотноСальдоваяВедомостьПоСчетуФинансовый.Форма",, ЭтаФорма);
	ФормаОтчета.ДатаКон = Объект.Дата;
	ФормаОтчета.Счет 	= Объект.СчетУчета;
	ФормаОтчета.НеЗаполнятьНастройкиПриОткрытии = Истина;
	ФормаОтчета.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОСОсновноеСредствоПриИзменении(Элемент)
	
	ТекДанные = Элементы.ОС.ТекущиеДанные;
	ТекДанные.ИнвентарныйНомер 	= ПолучитьИнвентарныйНомерОС(ТекДанные.ОсновноеСредство);
	ТекДанные.ЗаводскойНомер 	= ПолучитьЗаводскойНомерОС(ТекДанные.ОсновноеСредство);
	
	мМассив = Новый Массив;
	мМассив.Добавить(ТекДанные.ОсновноеСредство);
	
	ЗаполнитьУчетныеКоличества(мМассив);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНовоеОсновноеСредство(мНоменклатура, мИнвентарныйНомер)
	
	НовоеОС = Справочники.ОсновныеСредства.СоздатьЭлемент();
	НовоеОС.Наименование		= Строка(мНоменклатура);
	НовоеОС.Номенклатура		= мНоменклатура;
	НовоеОС.ИнвентарныйНомер	= мИнвентарныйНомер;
	НовоеОС.ЗаводскойНомер		= мИнвентарныйНомер;
	Попытка
		НовоеОС.Записать();
	Исключение
		Сообщить("Не удалось записать основное средство" + Символы.ПС + ОписаниеОшибки());
		Возврат Справочники.ОсновныеСредства.ПустаяСсылка();
	КонецПопытки;
	
	Возврат НовоеОС.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура ОСОсновноеСредствоИнвентарныйНомерПриИзменении(Элемент)
	
	Перем мНоменклатура;
	
	ТекДанные = Элементы.Оборудование.ТекущиеДанные;
	
	мИнвентарныйНомер = ТекДанные.ИнвентарныйНомер;
	мОсновноеСредство = ПолучитьОСПоИнвентарномуНомеру(мИнвентарныйНомер);
	Если НЕ ТекДанные.ОсновноеСредство = мОсновноеСредство Тогда
		ТекДанные.ОсновноеСредство = мОсновноеСредство;
	КонецЕсли;
	
	Если мОсновноеСредство.Пустая() Тогда
		Если Вопрос("Основное средство не найдено. Создать новое?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			
			//+++AK susk
			//Если ВвестиЗначение(мНоменклатура, "Укажите номенклатуру основного средства", Новый ОписаниеТипов("СправочникСсылка.Номенклатура")) Тогда
			
			мНоменклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
			
			Если ТипЗнч(Объект.Склад) = Тип("СправочникСсылка.СтруктурныеЕдиницы") И ЗначениеЗаполнено(ТекДанные.Номенклатура) Тогда
				мНоменклатура = ТекДанные.Номенклатура;
			Иначе	
				ВвестиЗначение(мНоменклатура, "Укажите номенклатуру основного средства", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
			КонецЕсли;
			
			Если мНоменклатура <> ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка") Тогда
			//---AK susk
				НовоеОС = ПолучитьНовоеОсновноеСредство(мНоменклатура, мИнвентарныйНомер);
				ТекДанные.ОсновноеСредство 	= НовоеОС;
				ТекДанные.ЗаводскойНомер 	= мИнвентарныйНомер;
				//+++AK susk
				ТекДанные.Номенклатура = мНоменклатура;
				//---AK susk
			Иначе
				ТекДанные.ИнвентарныйНомер 	= "";
				ТекДанные.ЗаводскойНомер 	= "";
				//+++AK susk
				ТекДанные.Номенклатура = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
				//---AK susk
				Возврат;
			КонецЕсли;
		Иначе
			ТекДанные.ИнвентарныйНомер 	= "";
			ТекДанные.ЗаводскойНомер 	= "";
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	
	мМассив = Новый Массив;
	мМассив.Добавить(ТекДанные.ОсновноеСредство);
	
	ЗаполнитьУчетныеКоличества(мМассив);
	
КонецПроцедуры

&НаКлиенте
Процедура МСФОЗаполнитьОС(Команда)
	
	Если Объект.Проведен Тогда
		
		Сообщить("Нельзя перезаполнять проведенный документ. Отмените проведение для перезаполнения");
		Возврат;
		
	КонецЕсли;	
	
	Если Объект.ОС.Количество() > 0 Тогда
		Если Вопрос("Таблица будет перезаполнена. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			ЗаполнитьОСНаСервере();			
		КонецЕсли;			
	Иначе 			
		ЗаполнитьОСНаСервере();		
	КонецЕсли;
	
	//+++AK susk
	ВидимостьНадписиПроблемныеОС();
	//---AK susk
	
КонецПроцедуры

&НаСервере
Процедура _ПроверкаОрганизацийНаСкладе()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СостояниеОССрезПоследних.ОсновноеСредство,
		|	СостояниеОССрезПоследних.Местоположение
		|ПОМЕСТИТЬ втОСнаВыбранномСкладе
		|ИЗ
		|	РегистрСведений.СостояниеОС.СрезПоследних(&Дата, ) КАК СостояниеОССрезПоследних
		|ГДЕ
		|	(СостояниеОССрезПоследних.Местоположение = &Местоположение
		|			ИЛИ СостояниеОССрезПоследних.Местоположение.Родитель = &Местоположение)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СостояниеОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	СостояниеОССрезПоследних.Организация КАК Организация
		|ПОМЕСТИТЬ втОрганизации
		|ИЗ
		|	РегистрСведений.СостояниеОС.СрезПоследних(&Дата, Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяССылка)) КАК СостояниеОССрезПоследних
		|ГДЕ
		|	СостояниеОССрезПоследних.Организация <> &ВыбраннаяОрганизация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОрганизации.Организация,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втОСнаВыбранномСкладе.ОсновноеСредство) КАК Количество
		|ИЗ
		|	втОСнаВыбранномСкладе КАК втОСнаВыбранномСкладе
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОрганизации КАК втОрганизации
		|		ПО втОСнаВыбранномСкладе.ОсновноеСредство = втОрганизации.ОсновноеСредство
		|
		|СГРУППИРОВАТЬ ПО
		|	втОрганизации.Организация";

	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Местоположение", Объект.Склад);
	Запрос.УстановитьПараметр("ВыбраннаяОрганизация", Объект.Организация);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщить("На складе " + Объект.Склад + " находится " + ВыборкаДетальныеЗаписи.Количество + " шт. основных средств, принадлежащих " + ВыборкаДетальныеЗаписи.Организация);
	КонецЦикла;

	
КонецПроцедуры	

&НаСервере
Процедура ПроверкаОрганизацийНаСкладе()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА Таблица.Организация.Ссылка ЕСТЬ NULL 
	               |			ТОГДА &ОрганизацияВкусвилл
	               |		ИНАЧЕ Таблица.Организация
	               |	КОНЕЦ КАК Организация,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Таблица.ОсновноеСредство) КАК Количество
	               |ИЗ
	               |	РегистрСведений.СостояниеОС.СрезПоследних(&Дата, ) КАК Таблица
	               |ГДЕ
	               |	(Таблица.Местоположение = &Местоположение
	               |			ИЛИ Таблица.Местоположение.Родитель = &Местоположение)
	               |	И ВЫБОР
	               |			КОГДА Таблица.Организация.Ссылка ЕСТЬ NULL 
	               |				ТОГДА &ОрганизацияВкусвилл
	               |			ИНАЧЕ Таблица.Организация
	               |		КОНЕЦ <> &Организация
	               |	И НЕ Таблица.Списано
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Таблица.Организация,
	               |	ВЫБОР
	               |		КОГДА Таблица.Организация.Ссылка ЕСТЬ NULL 
	               |			ТОГДА &ОрганизацияВкусвилл
	               |		ИНАЧЕ Таблица.Организация
	               |	КОНЕЦ";

	//	
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Местоположение", Объект.Склад);

	//
	Запрос.УстановитьПараметр("ОрганизацияВкусвилл", Справочники.Организации.НайтиПоКоду("000000006"));
	
	//
	Результат = Запрос.Выполнить();

	//
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщить("На складе " + Объект.Склад + " находится " + ВыборкаДетальныеЗаписи.Количество + " шт. основных средств, принадлежащих " + ВыборкаДетальныеЗаписи.Организация);
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьОСНаСервере()
	
	Запрос = Новый Запрос;
	
	//+++AK susk
	// ВРЕМЕННО ТАК: 
	// по складам надо показывать ОС, которые могут быть не введены в эксплуатацию
	// НО склады могут еще товар учитывать, который был не введен Приходным ордером, но в последней инвентаризации количество факт > 0.
	// поэтому выбираем ОС, который либо по Приходным ордерам, либо по последним инвентаризациям с фактом.
	// но если есть Расходные ордера (либо в дате инвентаризации, либо последние), то их тоже убираем.
	
	// добавлено - еще отбираем чтобы оборудование было факт <> 0 по любой инвентаризации с начала года.
	
	// добавлено - проверяем последний док по оборудованию, чтобы там было количество факт не равно нулю
	
	// добавлено - если ОС списано, то не добавляю его в список
	
	Если ТипЗнч(Объект.Склад) = Тип("СправочникСсылка.Склады") Тогда
		
		Если ЗначениеЗаполнено(Объект.ВременноТекстЗапросаПоСкладу) Тогда
			Запрос.Текст = Объект.ВременноТекстЗапросаПоСкладу;
		Иначе
		
		//Запрос.Текст = "ВЫБРАТЬ
		//			   |	СостояниеОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		//			   |	СостояниеОССрезПоследних.Местоположение,
		//			   |	НЕ ПринятыеКУчетуОССрезПоследних.НачислятьАмортизацию КАК Инвентарь,
		//			   |	1 КАК КоличествоУчет,
		//			   |	0 КАК Количество,
		//			   |	СостояниеОССрезПоследних.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
		//			   |	СостояниеОССрезПоследних.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
		//			   |	СостояниеОССрезПоследних.Регистратор,
		//			   |	СостояниеОССрезПоследних.Период КАК ПериодЗаписи
		//			   |ПОМЕСТИТЬ ОборудованиеПоРегистру
		//			   |ИЗ
		//			   |	РегистрСведений.СостояниеОС.СрезПоследних(&Дата, Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК СостояниеОССрезПоследних
		//			   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПринятыеКУчетуОС.СрезПоследних КАК ПринятыеКУчетуОССрезПоследних
		//			   |		ПО СостояниеОССрезПоследних.ОсновноеСредство = ПринятыеКУчетуОССрезПоследних.ОсновноеСредство
		//			   |ГДЕ
		//			   |	(СостояниеОССрезПоследних.Местоположение = &Местоположение
		//			   |			ИЛИ СостояниеОССрезПоследних.Местоположение.Владелец = &Местоположение)
		//			   |	И НЕ СостояниеОССрезПоследних.Списано
		//			   |	И (СостояниеОССрезПоследних.Регистратор ССЫЛКА Документ.ПриходныйОрдерСклад
		//			   |			ИЛИ СостояниеОССрезПоследних.Регистратор ССЫЛКА Документ.РасходныйОрдерСклад)
		//			   |;
		//			   |
		//			   |////////////////////////////////////////////////////////////////////////////////
		//			   |ВЫБРАТЬ
		//			   |	МАКСИМУМ(ИнвентаризацияОС.Дата) КАК МаксДата
		//			   |ПОМЕСТИТЬ ПоследняяДатаИнвентаризации
		//			   |ИЗ
		//			   |	Документ.ИнвентаризацияОС КАК ИнвентаризацияОС
		//			   |ГДЕ
		//			   |	ИнвентаризацияОС.Склад = &Местоположение
		//			   |	И ИнвентаризацияОС.Проведен
		//			   |;
		//			   |
		//			   |////////////////////////////////////////////////////////////////////////////////
		//			   |ВЫБРАТЬ
		//			   |	МАКСИМУМ(ИнвентаризацияОС.Ссылка) КАК Ссылка
		//			   |ПОМЕСТИТЬ ПоследняяИнвентаризацияПоСкладу
		//			   |ИЗ
		//			   |	ПоследняяДатаИнвентаризации КАК ПоследняяДатаИнвентаризации
		//			   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияОС КАК ИнвентаризацияОС
		//			   |		ПО ПоследняяДатаИнвентаризации.МаксДата = ИнвентаризацияОС.Дата
		//			   |			И (ИнвентаризацияОС.Склад = &Местоположение)
		//			   |			И (ИнвентаризацияОС.Проведен)
		//			   |;
		//			   |
		//			   |////////////////////////////////////////////////////////////////////////////////
		//			   |ВЫБРАТЬ
		//			   |	ОборудованиеПоРегистру.ОсновноеСредство,
		//			   |	ОборудованиеПоРегистру.Местоположение,
		//			   |	ОборудованиеПоРегистру.Инвентарь,
		//			   |	ОборудованиеПоРегистру.КоличествоУчет,
		//			   |	ОборудованиеПоРегистру.Количество,
		//			   |	ОборудованиеПоРегистру.ИнвентарныйНомер,
		//			   |	ОборудованиеПоРегистру.ЗаводскойНомер,
		//			   |	ОборудованиеПоРегистру.Регистратор,
		//			   |	ОборудованиеПоРегистру.ПериодЗаписи
		//			   |ПОМЕСТИТЬ СводнаяТаблица
		//			   |ИЗ
		//			   |	ОборудованиеПоРегистру КАК ОборудованиеПоРегистру
		//			   |ГДЕ
		//			   |	(ОборудованиеПоРегистру.Регистратор ССЫЛКА Документ.ПриходныйОрдерСклад
		//			   |			ИЛИ ОборудованиеПоРегистру.Регистратор ССЫЛКА Документ.РасходныйОрдерСклад)
		//			   |
		//			   |ОБЪЕДИНИТЬ ВСЕ
		//			   |
		//			   |ВЫБРАТЬ
		//			   |	ИнвентаризацияОСОС.ОсновноеСредство,
		//			   |	ИнвентаризацияОСОС.Местоположение,
		//			   |	ИнвентаризацияОСОС.Инвентарь,
		//			   |	1,
		//			   |	0,
		//			   |	ИнвентаризацияОСОС.ИнвентарныйНомер,
		//			   |	ИнвентаризацияОСОС.ЗаводскойНомер,
		//			   |	ИнвентаризацияОСОС.Ссылка,
		//			   |	ИнвентаризацияОСОС.Ссылка.Дата
		//			   |ИЗ
		//			   |	ПоследняяИнвентаризацияПоСкладу КАК ПоследняяИнвентаризацияПоСкладу
		//			   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
		//			   |		ПО ПоследняяИнвентаризацияПоСкладу.Ссылка = ИнвентаризацияОСОС.Ссылка
		//			   |ГДЕ
		//			   |	ИнвентаризацияОСОС.Количество > 0
		//			   |;
		//			   |
		//			   |////////////////////////////////////////////////////////////////////////////////
		//			   |УНИЧТОЖИТЬ ОборудованиеПоРегистру
		//			   |;
		//			   |
		//			   |////////////////////////////////////////////////////////////////////////////////
		//			   |УНИЧТОЖИТЬ ПоследняяДатаИнвентаризации
		//			   |;
		//			   |
		//			   |////////////////////////////////////////////////////////////////////////////////
		//			   |УНИЧТОЖИТЬ ПоследняяИнвентаризацияПоСкладу
		//			   |;
		//			   |
		//			   |////////////////////////////////////////////////////////////////////////////////
		//			   |ВЫБРАТЬ
		//			   |	МАКСИМУМ(СводнаяТаблица.ПериодЗаписи) КАК ПериодЗаписи,
		//			   |	СводнаяТаблица.ОсновноеСредство
		//			   |ПОМЕСТИТЬ МаксДатаДокументаПоОС
		//			   |ИЗ
		//			   |	СводнаяТаблица КАК СводнаяТаблица
		//			   |
		//			   |СГРУППИРОВАТЬ ПО
		//			   |	СводнаяТаблица.ОсновноеСредство
		//			   |;
		//			   |
		//			   |////////////////////////////////////////////////////////////////////////////////
		//			   |ВЫБРАТЬ
		//			   |	СводнаяТаблица.ОсновноеСредство,
		//			   |	СводнаяТаблица.Регистратор
		//			   |ПОМЕСТИТЬ ОС_ГдеПоследнийДокумент_РО
		//			   |ИЗ
		//			   |	МаксДатаДокументаПоОС КАК МаксДатаДокументаПоОС
		//			   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СводнаяТаблица КАК СводнаяТаблица
		//			   |		ПО МаксДатаДокументаПоОС.ПериодЗаписи = СводнаяТаблица.ПериодЗаписи
		//			   |			И МаксДатаДокументаПоОС.ОсновноеСредство = СводнаяТаблица.ОсновноеСредство
		//			   |ГДЕ
		//			   |	СводнаяТаблица.Регистратор ССЫЛКА Документ.РасходныйОрдерСклад
		//			   |;
		//			   |
		//			   |////////////////////////////////////////////////////////////////////////////////
		//			   |ВЫБРАТЬ
		//			   |	СводнаяТаблица.ОсновноеСредство КАК ОсновноеСредство,
		//			   |	СводнаяТаблица.Местоположение,
		//			   |	СводнаяТаблица.Инвентарь,
		//			   |	СводнаяТаблица.КоличествоУчет,
		//			   |	СводнаяТаблица.Количество,
		//			   |	СводнаяТаблица.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
		//			   |	СводнаяТаблица.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер
		//			   |ИЗ
		//			   |	СводнаяТаблица КАК СводнаяТаблица
		//			   |ГДЕ
		//			   |	НЕ СводнаяТаблица.ОсновноеСредство В
		//			   |				(ВЫБРАТЬ
		//			   |					ОС.ОсновноеСредство
		//			   |				ИЗ
		//			   |					ОС_ГдеПоследнийДокумент_РО КАК ОС)
		//			   |
		//			   |СГРУППИРОВАТЬ ПО
		//			   |	СводнаяТаблица.ОсновноеСредство,
		//			   |	СводнаяТаблица.Местоположение,
		//			   |	СводнаяТаблица.Инвентарь,
		//			   |	СводнаяТаблица.КоличествоУчет,
		//			   |	СводнаяТаблица.Количество,
		//			   |	СводнаяТаблица.ИнвентарныйНомер,
		//			   |	СводнаяТаблица.ЗаводскойНомер,
		//			   |	СводнаяТаблица.ОсновноеСредство.ИнвентарныйНомер,
		//			   |	СводнаяТаблица.ОсновноеСредство.ЗаводскойНомер
		//			   |
		//			   |УПОРЯДОЧИТЬ ПО
		//			   |	ОсновноеСредство,
		//			   |	ИнвентарныйНомер
		//			   |АВТОУПОРЯДОЧИВАНИЕ";
					   
			Запрос.Текст = "ВЫБРАТЬ
			               |	СостояниеОССрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
			               |	СостояниеОССрезПоследних.Местоположение,
			               |	НЕ ПринятыеКУчетуОССрезПоследних.НачислятьАмортизацию КАК Инвентарь,
			               |	1 КАК КоличествоУчет,
			               |	0 КАК Количество,
			               |	СостояниеОССрезПоследних.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
			               |	СостояниеОССрезПоследних.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
			               |	СостояниеОССрезПоследних.Регистратор,
			               |	СостояниеОССрезПоследних.Период КАК ПериодЗаписи
			               |ПОМЕСТИТЬ ОборудованиеПоРегистру
			               |ИЗ
			               |	РегистрСведений.СостояниеОС.СрезПоследних(&Дата, Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК СостояниеОССрезПоследних
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПринятыеКУчетуОС.СрезПоследних КАК ПринятыеКУчетуОССрезПоследних
			               |		ПО СостояниеОССрезПоследних.ОсновноеСредство = ПринятыеКУчетуОССрезПоследних.ОсновноеСредство
			               |ГДЕ
			               |	(СостояниеОССрезПоследних.Регистратор ССЫЛКА Документ.ПриходныйОрдерСклад
			               |			ИЛИ СостояниеОССрезПоследних.Регистратор ССЫЛКА Документ.РасходныйОрдерСклад)
			               |	И ВЫБОР
			               |			КОГДА СостояниеОССрезПоследних.Регистратор ССЫЛКА Документ.ПриходныйОрдерСклад
			               |				ТОГДА СостояниеОССрезПоследних.Местоположение = &Местоположение
			               |						ИЛИ СостояниеОССрезПоследних.Местоположение.Владелец = &Местоположение
			               |			ИНАЧЕ СостояниеОССрезПоследних.Регистратор.Склад = &Местоположение
			               |		КОНЕЦ
			               |	И НЕ СостояниеОССрезПоследних.Списано
			               |
			               |ОБЪЕДИНИТЬ ВСЕ
			               |
			               |ВЫБРАТЬ
			               |	СостояниеОССрезПоследних.ОсновноеСредство,
			               |	СостояниеОССрезПоследних.Местоположение,
			               |	НЕ ПринятыеКУчетуОССрезПоследних.НачислятьАмортизацию,
			               |	1,
			               |	0,
			               |	СостояниеОССрезПоследних.ОсновноеСредство.ИнвентарныйНомер,
			               |	СостояниеОССрезПоследних.ОсновноеСредство.ЗаводскойНомер,
			               |	СостояниеОССрезПоследних.Регистратор,
			               |	СостояниеОССрезПоследних.Период
			               |ИЗ
			               |	РегистрСведений.СостояниеОС.СрезПоследних(&Дата, ) КАК СостояниеОССрезПоследних
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПринятыеКУчетуОС.СрезПоследних КАК ПринятыеКУчетуОССрезПоследних
			               |		ПО СостояниеОССрезПоследних.ОсновноеСредство = ПринятыеКУчетуОССрезПоследних.ОсновноеСредство
			               |ГДЕ
			               |	СостояниеОССрезПоследних.Регистратор ССЫЛКА Документ.ПеремещениеОС
			               |	И СостояниеОССрезПоследних.Местоположение = &Местоположение
			               |	И НЕ СостояниеОССрезПоследних.Списано
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	РасходныйОрдерСкладОборудование.Оборудование КАК ОсновноеСредство,
			               |	РасходныйОрдерСкладОборудование.Оборудование.ИнвентарныйНомер КАК ИнвентарныйНомер,
			               |	РасходныйОрдерСкладОборудование.Ссылка.Дата
			               |ПОМЕСТИТЬ РоИПеремещения
			               |ИЗ
			               |	Документ.РасходныйОрдерСклад.Оборудование КАК РасходныйОрдерСкладОборудование
			               |ГДЕ
			               |	РасходныйОрдерСкладОборудование.Ссылка.Склад = &Местоположение
			               |	И РасходныйОрдерСкладОборудование.Ссылка.Проведен
			               |	И РасходныйОрдерСкладОборудование.Ссылка.Дата >= &НачалоГода
			               |
			               |ОБЪЕДИНИТЬ ВСЕ
			               |
			               |ВЫБРАТЬ
			               |	ПеремещениеОСНоменклатура.ОсновноеСредство,
			               |	ПеремещениеОСНоменклатура.ОсновноеСредство.ИнвентарныйНомер,
			               |	ПеремещениеОСНоменклатура.Ссылка.Дата
			               |ИЗ
			               |	Документ.ПеремещениеОС.Номенклатура КАК ПеремещениеОСНоменклатура
			               |ГДЕ
			               |	ПеремещениеОСНоменклатура.СтруктурнаяЕдиницаОтправитель = &Местоположение
			               |	И ПеремещениеОСНоменклатура.Ссылка.Проведен
			               |	И ПеремещениеОСНоменклатура.Ссылка.Дата >= &НачалоГода
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	РоИПеремещения.ОсновноеСредство,
			               |	МАКСИМУМ(РоИПеремещения.Дата) КАК Дата
			               |ПОМЕСТИТЬ МаксимумыРоИПеремещений
			               |ИЗ
			               |	РоИПеремещения КАК РоИПеремещения
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	РоИПеремещения.ОсновноеСредство
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |УНИЧТОЖИТЬ РоИПеремещения
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ИнвентаризацияОС.ОсновноеСредство,
			               |	ИнвентаризацияОС.ОсновноеСредство.ИнвентарныйНомер,
			               |	ИнвентаризацияОС.Местоположение КАК Местоположение,
			               |	ИнвентаризацияОС.Инвентарь КАК Инвентарь,
			               |	ИнвентаризацияОС.Ссылка КАК Регистратор,
			               |	ИнвентаризацияОС.Ссылка.Дата КАК ПериодЗаписи,
			               |	ИнвентаризацияОС.КоличествоУчет,
			               |	ИнвентаризацияОС.Количество КАК КоличествоФакт
			               |ПОМЕСТИТЬ ВсеИнвентаризацииПоОборудованию
			               |ИЗ
			               |	Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОС
			               |		ЛЕВОЕ СОЕДИНЕНИЕ МаксимумыРоИПеремещений КАК МаксимумыРоИПеремещений
			               |		ПО ИнвентаризацияОС.ОсновноеСредство = МаксимумыРоИПеремещений.ОсновноеСредство
			               |ГДЕ
			               |	ИнвентаризацияОС.Ссылка.Склад = &Местоположение
			               |	И ИнвентаризацияОС.Ссылка.Проведен
			               |	И ИнвентаризацияОС.Ссылка.Дата >= &НачалоГода
			               |	И НЕ ИнвентаризацияОС.Ссылка = &ТекущийДокумент
			               |	И ВЫБОР
			               |			КОГДА МаксимумыРоИПеремещений.Дата ЕСТЬ NULL
			               |				ТОГДА ИСТИНА
			               |			ИНАЧЕ ИнвентаризацияОС.Ссылка.Дата > МаксимумыРоИПеремещений.Дата
			               |		КОНЕЦ
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	МАКСИМУМ(ВсеИнвентаризации.ПериодЗаписи) КАК ПериодЗаписи,
			               |	ВсеИнвентаризации.ОсновноеСредство
			               |ПОМЕСТИТЬ МаксПериодИзВсехИнвентаризацийПоОборудованию
			               |ИЗ
			               |	ВсеИнвентаризацииПоОборудованию КАК ВсеИнвентаризации
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	ВсеИнвентаризации.ОсновноеСредство
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ВсеИнвентаризацииПоОборудованию.ОсновноеСредство,
			               |	ВсеИнвентаризацииПоОборудованию.ОсновноеСредство.ИнвентарныйНомер,
			               |	МАКСИМУМ(ВсеИнвентаризацииПоОборудованию.Местоположение) КАК Местоположение,
			               |	МАКСИМУМ(ВсеИнвентаризацииПоОборудованию.Инвентарь) КАК Инвентарь,
			               |	МАКСИМУМ(ВсеИнвентаризацииПоОборудованию.ПериодЗаписи) КАК ПериодЗаписи,
			               |	МАКСИМУМ(ВсеИнвентаризацииПоОборудованию.КоличествоУчет) КАК КоличествоУчет,
			               |	МАКСИМУМ(ВсеИнвентаризацииПоОборудованию.КоличествоФакт) КАК КоличествоФакт
			               |ПОМЕСТИТЬ ПоследняяИнвентаризацияПоКонкретнымОС
			               |ИЗ
			               |	МаксПериодИзВсехИнвентаризацийПоОборудованию КАК МаксПериодИзВсехИнвентаризацийПоОборудованию
			               |		ЛЕВОЕ СОЕДИНЕНИЕ ВсеИнвентаризацииПоОборудованию КАК ВсеИнвентаризацииПоОборудованию
			               |		ПО МаксПериодИзВсехИнвентаризацийПоОборудованию.ПериодЗаписи = ВсеИнвентаризацииПоОборудованию.ПериодЗаписи
			               |			И МаксПериодИзВсехИнвентаризацийПоОборудованию.ОсновноеСредство = ВсеИнвентаризацииПоОборудованию.ОсновноеСредство
			               |ГДЕ
			               |	НЕ ВсеИнвентаризацииПоОборудованию.ОсновноеСредство ЕСТЬ NULL
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	ВсеИнвентаризацииПоОборудованию.ОсновноеСредство,
			               |	ВсеИнвентаризацииПоОборудованию.ОсновноеСредство.ИнвентарныйНомер
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |УНИЧТОЖИТЬ ВсеИнвентаризацииПоОборудованию
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |УНИЧТОЖИТЬ МаксПериодИзВсехИнвентаризацийПоОборудованию
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ПоследняяИнвентаризацияПоКонкретнымОС.ОсновноеСредство,
			               |	ПоследняяИнвентаризацияПоКонкретнымОС.ОсновноеСредство.ИнвентарныйНомер
			               |ПОМЕСТИТЬ ОоборудованиеГдеПоследняяИнвентаризацияФактРавенНулю
			               |ИЗ
			               |	ПоследняяИнвентаризацияПоКонкретнымОС КАК ПоследняяИнвентаризацияПоКонкретнымОС
			               |ГДЕ
			               |	ПоследняяИнвентаризацияПоКонкретнымОС.КоличествоФакт = 0
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ИнвентаризацияОС.ОсновноеСредство,
			               |	ИнвентаризацияОС.ОсновноеСредство.ИнвентарныйНомер,
			               |	МАКСИМУМ(ИнвентаризацияОС.Местоположение) КАК Местоположение,
			               |	МАКСИМУМ(ИнвентаризацияОС.Инвентарь) КАК Инвентарь,
			               |	МАКСИМУМ(ИнвентаризацияОС.Ссылка) КАК Регистратор,
			               |	МАКСИМУМ(ИнвентаризацияОС.Ссылка.Дата) КАК ПериодЗаписи
			               |ПОМЕСТИТЬ ОборудованиеИзПрочихИнвентаризаций
			               |ИЗ
			               |	Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОС
			               |		ЛЕВОЕ СОЕДИНЕНИЕ МаксимумыРоИПеремещений КАК МаксимумыРоИПеремещений
			               |		ПО ИнвентаризацияОС.ОсновноеСредство = МаксимумыРоИПеремещений.ОсновноеСредство
			               |ГДЕ
			               |	ИнвентаризацияОС.Ссылка.Склад = &Местоположение
			               |	И ИнвентаризацияОС.Ссылка.Проведен
			               |	И ИнвентаризацияОС.Ссылка.Дата >= &НачалоГода
			               |	И НЕ ИнвентаризацияОС.Ссылка = &ТекущийДокумент
			               |	И ИнвентаризацияОС.Количество <> 0
			               |	И ВЫБОР
			               |			КОГДА МаксимумыРоИПеремещений.Дата ЕСТЬ NULL
			               |				ТОГДА ИСТИНА
			               |			ИНАЧЕ ИнвентаризацияОС.Ссылка.Дата >= МаксимумыРоИПеремещений.Дата
			               |		КОНЕЦ
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	ИнвентаризацияОС.ОсновноеСредство,
			               |	ИнвентаризацияОС.Ссылка,
			               |	ИнвентаризацияОС.ОсновноеСредство.ИнвентарныйНомер
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	МАКСИМУМ(ИнвентаризацияОС.Дата) КАК МаксДата
			               |ПОМЕСТИТЬ ПоследняяДатаИнвентаризации
			               |ИЗ
			               |	Документ.ИнвентаризацияОС КАК ИнвентаризацияОС
			               |ГДЕ
			               |	ИнвентаризацияОС.Склад = &Местоположение
			               |	И ИнвентаризацияОС.Проведен
			               |	И НЕ ИнвентаризацияОС.Ссылка = &ТекущийДокумент
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	МАКСИМУМ(ИнвентаризацияОС.Ссылка) КАК Ссылка
			               |ПОМЕСТИТЬ ПоследняяИнвентаризацияПоСкладу
			               |ИЗ
			               |	ПоследняяДатаИнвентаризации КАК ПоследняяДатаИнвентаризации
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияОС КАК ИнвентаризацияОС
			               |		ПО ПоследняяДатаИнвентаризации.МаксДата = ИнвентаризацияОС.Дата
			               |			И (ИнвентаризацияОС.Склад = &Местоположение)
			               |			И (ИнвентаризацияОС.Проведен)
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ИнвентаризацияОСОС.ОсновноеСредство,
			               |	ИнвентаризацияОСОС.ОсновноеСредство.ИнвентарныйНомер,
			               |	СУММА(ИнвентаризацияОСОС.Количество) КАК Количество
			               |ПОМЕСТИТЬ ОборудованиеИКоличествоПоследнейИнвентаризацииПоСкладу
			               |ИЗ
			               |	ПоследняяИнвентаризацияПоСкладу КАК ПоследняяИнвентаризацияПоСкладу
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
			               |		ПО ПоследняяИнвентаризацияПоСкладу.Ссылка = ИнвентаризацияОСОС.Ссылка
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	ИнвентаризацияОСОС.ОсновноеСредство,
			               |	ИнвентаризацияОСОС.ОсновноеСредство.ИнвентарныйНомер
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ОборудованиеПоРегистру.ОсновноеСредство,
			               |	ОборудованиеПоРегистру.Местоположение,
			               |	ОборудованиеПоРегистру.Инвентарь,
			               |	ОборудованиеПоРегистру.КоличествоУчет,
			               |	ОборудованиеПоРегистру.Количество,
			               |	ОборудованиеПоРегистру.ИнвентарныйНомер,
			               |	ОборудованиеПоРегистру.ЗаводскойНомер,
			               |	ОборудованиеПоРегистру.Регистратор,
			               |	ОборудованиеПоРегистру.ПериодЗаписи,
			               |	ЛОЖЬ КАК Добавлено
			               |ПОМЕСТИТЬ СводнаяТаблица
			               |ИЗ
			               |	ОборудованиеПоРегистру КАК ОборудованиеПоРегистру
			               |ГДЕ
			               |	(ОборудованиеПоРегистру.Регистратор ССЫЛКА Документ.ПриходныйОрдерСклад
			               |			ИЛИ ОборудованиеПоРегистру.Регистратор ССЫЛКА Документ.РасходныйОрдерСклад
			               |			ИЛИ ОборудованиеПоРегистру.Регистратор ССЫЛКА Документ.ПеремещениеОС)
			               |
			               |ОБЪЕДИНИТЬ ВСЕ
			               |
			               |ВЫБРАТЬ
			               |	ИнвентаризацияОСОС.ОсновноеСредство,
			               |	ИнвентаризацияОСОС.Местоположение,
			               |	ИнвентаризацияОСОС.Инвентарь,
			               |	1,
			               |	0,
			               |	ИнвентаризацияОСОС.ИнвентарныйНомер,
			               |	ИнвентаризацияОСОС.ЗаводскойНомер,
			               |	ИнвентаризацияОСОС.Ссылка,
			               |	ИнвентаризацияОСОС.Ссылка.Дата,
			               |	ЛОЖЬ
			               |ИЗ
			               |	ПоследняяИнвентаризацияПоСкладу КАК ПоследняяИнвентаризацияПоСкладу
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИнвентаризацияОС.ОС КАК ИнвентаризацияОСОС
			               |		ПО ПоследняяИнвентаризацияПоСкладу.Ссылка = ИнвентаризацияОСОС.Ссылка
			               |ГДЕ
			               |	ИнвентаризацияОСОС.Количество > 0
			               |
			               |ОБЪЕДИНИТЬ ВСЕ
			               |
			               |ВЫБРАТЬ
			               |	ОборудованиеИзПрочихИнвентаризаций.ОсновноеСредство,
			               |	ОборудованиеИзПрочихИнвентаризаций.Местоположение,
			               |	ОборудованиеИзПрочихИнвентаризаций.Инвентарь,
			               |	1,
			               |	0,
			               |	ОборудованиеИзПрочихИнвентаризаций.ОсновноеСредство.ИнвентарныйНомер,
			               |	ОборудованиеИзПрочихИнвентаризаций.ОсновноеСредство.ЗаводскойНомер,
			               |	ОборудованиеИзПрочихИнвентаризаций.Регистратор,
			               |	ОборудованиеИзПрочихИнвентаризаций.ПериодЗаписи,
			               |	ИСТИНА
			               |ИЗ
			               |	ОборудованиеИзПрочихИнвентаризаций КАК ОборудованиеИзПрочихИнвентаризаций
			               |		ЛЕВОЕ СОЕДИНЕНИЕ ОборудованиеИКоличествоПоследнейИнвентаризацииПоСкладу КАК ОборудованиеИКоличествоПоследнейИнвентаризацииПоСкладу
			               |		ПО ОборудованиеИзПрочихИнвентаризаций.ОсновноеСредство = ОборудованиеИКоличествоПоследнейИнвентаризацииПоСкладу.ОсновноеСредство
			               |ГДЕ
			               |	ЕСТЬNULL(ОборудованиеИКоличествоПоследнейИнвентаризацииПоСкладу.Количество, 1) <> 0
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |УНИЧТОЖИТЬ ОборудованиеПоРегистру
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |УНИЧТОЖИТЬ ПоследняяДатаИнвентаризации
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |УНИЧТОЖИТЬ ПоследняяИнвентаризацияПоСкладу
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	МАКСИМУМ(СводнаяТаблица.ПериодЗаписи) КАК ПериодЗаписи,
			               |	СводнаяТаблица.ОсновноеСредство
			               |ПОМЕСТИТЬ МаксДатаДокументаПоОС
			               |ИЗ
			               |	СводнаяТаблица КАК СводнаяТаблица
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	СводнаяТаблица.ОсновноеСредство
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	СводнаяТаблица.ОсновноеСредство,
			               |	СводнаяТаблица.Регистратор
			               |ПОМЕСТИТЬ ОС_ГдеПоследнийДокумент_РО
			               |ИЗ
			               |	МаксДатаДокументаПоОС КАК МаксДатаДокументаПоОС
			               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СводнаяТаблица КАК СводнаяТаблица
			               |		ПО МаксДатаДокументаПоОС.ПериодЗаписи = СводнаяТаблица.ПериодЗаписи
			               |			И МаксДатаДокументаПоОС.ОсновноеСредство = СводнаяТаблица.ОсновноеСредство
			               |ГДЕ
			               |	СводнаяТаблица.Регистратор ССЫЛКА Документ.РасходныйОрдерСклад
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	СостояниеОССрезПоследних.ОсновноеСредство,
			               |	ПеремещениеОСНоменклатура.ОсновноеСредство.ИнвентарныйНомер
			               |ПОМЕСТИТЬ ПеремещенияСоСклада
			               |ИЗ
			               |	РегистрСведений.СостояниеОС.СрезПоследних(&Дата, ) КАК СостояниеОССрезПоследних
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС.Номенклатура КАК ПеремещениеОСНоменклатура
			               |		ПО СостояниеОССрезПоследних.ОсновноеСредство = ПеремещениеОСНоменклатура.ОсновноеСредство
			               |ГДЕ
			               |	ПеремещениеОСНоменклатура.СтруктурнаяЕдиницаОтправитель = &Местоположение
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	СводнаяТаблица.ОсновноеСредство КАК ОсновноеСредство,
			               |	СводнаяТаблица.Местоположение,
			               |	МАКСИМУМ(ЕСТЬNULL(СводнаяТаблица.Инвентарь, ЛОЖЬ)) КАК Инвентарь,
			               |	СводнаяТаблица.КоличествоУчет,
			               |	СводнаяТаблица.Количество,
			               |	СводнаяТаблица.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
			               |	СводнаяТаблица.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер
			               |ИЗ
			               |	СводнаяТаблица КАК СводнаяТаблица
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеОС.СрезПоследних(&Дата, ) КАК СостояниеОССрезПоследних
			               |		ПО СводнаяТаблица.ОсновноеСредство = СостояниеОССрезПоследних.ОсновноеСредство
			               |			И (СостояниеОССрезПоследних.Списано)
			               |ГДЕ
			               |	НЕ СводнаяТаблица.ОсновноеСредство В
			               |				(ВЫБРАТЬ
			               |					ОС.ОсновноеСредство
			               |				ИЗ
			               |					ОС_ГдеПоследнийДокумент_РО КАК ОС)
			               |	И НЕ СводнаяТаблица.ОсновноеСредство В
			               |				(ВЫБРАТЬ
			               |					ПеремещенияСоСклада.ОсновноеСредство
			               |				ИЗ
			               |					ПеремещенияСоСклада)
			               |	И НЕ СводнаяТаблица.ОсновноеСредство В
			               |				(ВЫБРАТЬ
			               |					ОоборудованиеГдеПоследняяИнвентаризацияФактРавенНулю.ОсновноеСредство
			               |				ИЗ
			               |					ОоборудованиеГдеПоследняяИнвентаризацияФактРавенНулю КАК ОоборудованиеГдеПоследняяИнвентаризацияФактРавенНулю)
			               |	И СостояниеОССрезПоследних.ОсновноеСредство ЕСТЬ NULL
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	СводнаяТаблица.ОсновноеСредство,
			               |	СводнаяТаблица.Местоположение,
			               |	СводнаяТаблица.КоличествоУчет,
			               |	СводнаяТаблица.Количество,
			               |	СводнаяТаблица.ОсновноеСредство.ИнвентарныйНомер,
			               |	СводнаяТаблица.ОсновноеСредство.ЗаводскойНомер
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	ОсновноеСредство,
			               |	ИнвентарныйНомер
			               |АВТОУПОРЯДОЧИВАНИЕ";
					   
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Запрос.УстановитьПараметр("ТекущийДокумент", Объект.Ссылка);
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И НЕ ИнвентаризацияОС.Ссылка = &ТекущийДокумент", "");
		КонецЕсли;	
		
		Запрос.УстановитьПараметр("НачалоГода", НачалоГода(ТекущаяДата())); 
					   
	Иначе
	//---AK susk				   
	
	    //+++AK susk
		
		//Запрос.Текст = 
		//		"ВЫБРАТЬ
		//		|	СостояниеОССрезПоследних.ОсновноеСредство,
		//		|	СостояниеОССрезПоследних.Местоположение,
		//		|	НЕ ПринятыеКУчетуОССрезПоследних.НачислятьАмортизацию КАК Инвентарь,
		//		|	1 КАК КоличествоУчет,
		//		|	0 КАК Количество,
		//		|	СостояниеОССрезПоследних.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
		//		|	СостояниеОССрезПоследних.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер
		//		|ИЗ
		//		|	РегистрСведений.СостояниеОС.СрезПоследних(&Дата, ) КАК СостояниеОССрезПоследних
		//		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПринятыеКУчетуОС.СрезПоследних КАК ПринятыеКУчетуОССрезПоследних
		//		|		ПО СостояниеОССрезПоследних.ОсновноеСредство = ПринятыеКУчетуОССрезПоследних.ОсновноеСредство
		//		|ГДЕ
		//		|	(СостояниеОССрезПоследних.Местоположение = &Местоположение
		//		|			ИЛИ СостояниеОССрезПоследних.Местоположение.Владелец = &Местоположение)
		//		|	И СостояниеОССрезПоследних.Списано <> ИСТИНА
		//		|	И НЕ ПринятыеКУчетуОССрезПоследних.ОсновноеСредство ЕСТЬ NULL ";
		
		Запрос.Текст = 
				"ВЫБРАТЬ
				|	СостояниеОССрезПоследних.ОсновноеСредство,
				|	СостояниеОССрезПоследних.Местоположение,
				|	НЕ ЕСТЬNULL(ПринятыеКУчетуОССрезПоследних.НачислятьАмортизацию, ЛОЖЬ) КАК Инвентарь,
				|	1 КАК КоличествоУчет,
				|	1 КАК Количество,
				|	СостояниеОССрезПоследних.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
				|	СостояниеОССрезПоследних.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
				|	СостояниеОССрезПоследних.ОсновноеСредство.Номенклатура КАК Номенклатура,
				|	ЕСТЬNULL(СоответствиеДатчиковИОсновныхСредствСрезПоследних.Датчик, ЗНАЧЕНИЕ(Справочник.Датчики.ПустаяСсылка)) КАК Датчик
				|ИЗ
				|	РегистрСведений.СостояниеОС.СрезПоследних(&Дата, ) КАК СостояниеОССрезПоследних
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПринятыеКУчетуОС.СрезПоследних КАК ПринятыеКУчетуОССрезПоследних
				|		ПО СостояниеОССрезПоследних.ОсновноеСредство = ПринятыеКУчетуОССрезПоследних.ОсновноеСредство
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеДатчиковИОсновныхСредств.СрезПоследних(&Дата, ) КАК СоответствиеДатчиковИОсновныхСредствСрезПоследних
				|		ПО СостояниеОССрезПоследних.ОсновноеСредство = СоответствиеДатчиковИОсновныхСредствСрезПоследних.ОсновноеСредство
				|ГДЕ
				|	СостояниеОССрезПоследних.Местоположение = &Местоположение
				|	И НЕ СостояниеОССрезПоследних.Списано";
				
	КонецЕсли;
		   
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("Местоположение", Объект.Склад);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Объект.ОС.Загрузить(Результат);
	
	Если ТипЗнч(Объект.Склад) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		ДополнитьДатчикиСервер();
	КонецЕсли;
	
	//+++AK susk
	ОБъект.СуществуютПроблемныеОС = Ложь;
	//---AK susk
	
КонецПроцедуры	
&НаКлиенте
Процедура ЗаполнитьФактПоУчету(Команда)
	
	Если Вопрос("Фактические данные будут перезаполнены. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда

		Для Каждого СтрокаОС из Объект.ОС Цикл
			
			СтрокаОС.Сумма 	     = СтрокаОС.СуммаУчет;			
			СтрокаОС.Количество  = СтрокаОС.КоличествоУчет;
			СтрокаОС.Амортизация = СтрокаОС.АмортизацияУчет;
			
		КонецЦикла;	
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДанныеОС(ОсновноеСредство)

	Результат = Новый Структура;
	Результат.Вставить("ИнвентарныйНомер",ОсновноеСредство.ИнвентарныйНомер);
	Результат.Вставить("ЗаводскойНомер",ОсновноеСредство.ЗаводскойНомер);
	Результат.Вставить("Местоположение",Объект.Склад);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОборудованиеОсновноеСредствоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Оборудование.ТекущиеДанные;	
	
	Если ЗначениеЗаполнено(ТекущиеДанные.ОсновноеСредство) Тогда
		
		//Если АК_УчетМСФО.ОСВведеноВЭксплуатацию(ТекущиеДанные.ОсновноеСредство,Объект.Дата) = Ложь Тогда
		//	
		//	Сообщить("Основное средство: " + ТекущиеДанные.ОсновноеСредство  + " не введено в эксплуатацию");
		//	ТекущиеДанные.ОсновноеСредство = Неопределено;
		//	ТекущиеДанные.Местоположение = Неопределено;//Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
		//	ТекущиеДанные.Инвентарь = Ложь;
		//	ТекущиеДанные.ИнвентарныйНомер = "";
		//	ТекущиеДанные.ЗаводскойНомер = "";
		// 
		//Иначе
		 	ЗаполнитьЗначенияСвойств(ТекущиеДанные,ДанныеОС(ТекущиеДанные.ОсновноеСредство));
		//КонецЕсли;		
		
		//+++AK susk
		ТекущиеДанные.Номенклатура = ПолучитьНоменклатуру(ТекущиеДанные.ОсновноеСредство);
		//---AK susk

	Иначе 
		//ТекущиеДанные.Сумма = 0;
		//ТекущиеДанные.СуммаАмортизация = 0;	
		ТекущиеДанные.Местоположение = Неопределено;//Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
		ТекущиеДанные.Инвентарь = Ложь;
		ТекущиеДанные.ИнвентарныйНомер = "";
		ТекущиеДанные.ЗаводскойНомер = "";
		//ТекущиеДанные.СчетУчета = Неопределено;//ПланыСчетов.Финансовый.ПустаяСсылка();
	КонецЕсли;		
	
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	//ПроверитьСчетаУчета(Отказ);
	
КонецПроцедуры
	

Процедура ПроверитьСчетаУчета(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОсновныеСредства.ОсновноеСредство,
		|	ОсновныеСредства.СчетУчета,
		|	ОсновныеСредства.Инвентарь
		|ПОМЕСТИТЬ втОсновныеСредства
		|ИЗ
		|	&ОсновныеСредства КАК ОсновныеСредства
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОсновныеСредства.ОсновноеСредство,
		|	ПринятыеКУчетуОССрезПоследних.СчетУчета КАК СчетУчета
		|ИЗ
		|	втОсновныеСредства КАК втОсновныеСредства
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПринятыеКУчетуОС.СрезПоследних КАК ПринятыеКУчетуОССрезПоследних
		|		ПО втОсновныеСредства.ОсновноеСредство = ПринятыеКУчетуОССрезПоследних.ОсновноеСредство
		|ГДЕ
		|	ПринятыеКУчетуОССрезПоследних.СчетУчета <> втОсновныеСредства.СчетУчета
		|	И НЕ ПринятыеКУчетуОССрезПоследних.СчетУчета ЕСТЬ NULL 
		|	И ПринятыеКУчетуОССрезПоследних.СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ПустаяССылка)
		|	И втОсновныеСредства.Инвентарь <> ИСТИНА";

	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	Запрос.УстановитьПараметр("ОсновныеСредства", Объект.ОС.Выгрузить());

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщить("Внимание! Основное средство: " +  ВыборкаДетальныеЗаписи.ОсновноеСредство + " принято к учету на счет " + ВыборкаДетальныеЗаписи.СчетУчета);
		//Отказ = Истина
	КонецЦикла;

	
КонецПроцедуры	

&НаКлиенте
Процедура ОткрытьДокументыПоОС(Команда)
	
	ТекущаяСтрока = Элементы.Оборудование.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда
		Если ЗначениеЗаполнено(ТекущаяСтрока.ОсновноеСредство) Тогда
			ПараметрыФормы = Новый Структура("ОсновноеСредство",ТекущаяСтрока.ОсновноеСредство);
			ОткрытьФорму("Справочник.ОсновныеСредства.Форма.ДокументыПоОС", ПараметрыФормы);
		КонецЕсли;
	КонецЕсли;	
		
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораМестоположение()
	
	Элементы.ОборудованиеМестоположение.СписокВыбора.Очистить();	
	Если ЗначениеЗаполнено(Объект.Склад) Тогда
		Элементы.ОборудованиеМестоположение.СписокВыбора.Добавить(Объект.Склад);
	Иначе 
		Возврат;		
	КонецЕсли;
	
	Если ТипЗнч(Объект.Склад) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Склады.Ссылка
			|ИЗ
			|	Справочник.Склады КАК Склады
			|ГДЕ
			|	Склады.Владелец = &Владелец";

		Запрос.УстановитьПараметр("Владелец", Объект.Склад);
		Результат = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = Результат.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Элементы.ОборудованиеМестоположение.СписокВыбора.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;

	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ОборудованиеМестоположениеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	

	ЗаполнитьСписокВыбораМестоположение()
	
	 	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("СкладскиеАкты_ПослеЗаписи");
	ВидимостьНадписиПроблемныеОС();
	
	//+++AK susk
	Если ТипЗнч(Объект.Склад) = Тип("СправочникСсылка.Склады") И ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ПроверитьСоздатьОпрИСпис();
	КонецЕсли;
	//---AK susk
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаКлиенте
Процедура Склад1ПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();	
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	
	ЭтоМагазин = ТипЗнч(Объект.Склад) = Тип("СправочникСсылка.СтруктурныеЕдиницы");
	
	Элементы.ОборудованиеНоменклатура.Видимость = ЭтоМагазин;	
	Элементы.ОборудованиеИнвентарныйНомер.ТолькоПросмотр = НЕ ЭтоМагазин;	
	Элементы.ФормаПоменятьДатчикиМестами.Видимость = ЭтоМагазин;
	Элементы.ОборудованиеДатчик.Видимость = ЭтоМагазин; 
	Элементы.ОборудованиеЗаполнитьПеремещение.Видимость = ЭтоМагазин;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьДоступность();
	УстановитьОтборы();
	ВидимостьНадписиПроблемныеОС();
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаКлиенте
Процедура ОборудованиеОсновноеСредствоОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = ПолучитьСписокОборудованияПоИнвНомеру(Текст);
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаСервере
Функция ПолучитьСписокОборудованияПоИнвНомеру(Текст)
	
	СписокОб = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОсновныеСредства.Ссылка,
	               |	ОсновныеСредства.Наименование,
	               |	ОсновныеСредства.ИнвентарныйНомер
	               |ИЗ
	               |	Справочник.ОсновныеСредства КАК ОсновныеСредства
	               |ГДЕ
	               |	ОсновныеСредства.ИнвентарныйНомер ПОДОБНО &ИнвентарныйНомер";
				   
	Запрос.УстановитьПараметр("ИнвентарныйНомер", "%" + Текст + "%");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокОБ.Добавить(Выборка.Ссылка, Выборка.Наименование + "(" + Выборка.ИнвентарныйНомер + ")");
	КонецЦикла;
	
	Возврат СписокОб;	
	
КонецФункции

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаКлиенте
Процедура УстановитьОтборы()
	
	Элементы.ПроблемноеОборудование.ОтборСтрок = Новый ФиксированнаяСтруктура("ПроблемноеОС", Истина); 
	Элементы.ОС.ОтборСтрок = Новый ФиксированнаяСтруктура("ПроблемноеОС", Ложь);   
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаКлиенте
Процедура ВидимостьНадписиПроблемныеОС()
	
	Элементы.НадписьСуществуютПроблемныеОС.Видимость = Объект.СуществуютПроблемныеОС;
	Элементы.ПроблемноеОборудованиеСнятВручнуюПризнакПроблемноеОС.Видимость = ПроверкаРоли("ПолныеПрава") ИЛИ ПроверкаРоли("Финансист") ИЛИ ПроверкаРоли("ФинансовыйДиректор");
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаСервереБезКонтекста
Функция ПолучитьНоменклатуру(ОС)
	
	Возврат ОС.Номенклатура;
	
КонецФункции

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаСервереБезКонтекста
Функция ПроверкаРоли(РольСтрокой)
	
	Возврат РольДоступна(РольСтрокой);
	
КонецФункции

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаКлиенте
Процедура ПроблемноеОборудованиеСнятВручнуюПризнакПроблемноеОСПриИзменении(Элемент)
	
	Если Элементы.ПроблемноеОборудование.ТекущиеДанные.СнятВручнуюПризнакПроблемноеОС Тогда
		Элементы.ПроблемноеОборудование.ТекущиеДанные.ПроблемноеОС = Ложь;
		
		ЕстьПроблемныеОС = Ложь;
		
		Для Каждого Стр Из Объект.ОС Цикл
			Если Стр.ПроблемноеОС Тогда
				ЕстьПроблемныеОС = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НЕ ЕстьПроблемныеОС Тогда
			Объект.СуществуютПроблемныеОС = Ложь;
			ВидимостьНадписиПроблемныеОС();
		КонецЕсли;
		
	Иначе
		
		Элементы.ПроблемноеОборудование.ТекущиеДанные.ПроблемноеОС = Истина;
		
	КонецЕсли;
	
	УстановитьОтборы();
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаКлиенте
Процедура ОборудованиеЗаводскойНомерПриИзменении(Элемент)
	
	ВведеныйЗаводской = Элементы.Оборудование.ТекущиеДанные.ЗаводскойНомер;
	ТекОС = Элементы.Оборудование.ТекущиеДанные.ОсновноеСредство;
	
	СписокОборудованияПоЗаводскому = ПолучитьСписокОборудованияПоЗаводскомуНомеруСервер(ВведеныйЗаводской, ТекОС);
	
	Если СписокОборудованияПоЗаводскому.Количество() = 0 Тогда
		Если ЗначениеЗаполнено(ТекОС) Тогда
			
			Ответ = Вопрос("Поменять заводской номер у ОС: " + Строка(ТекОС) + " с " + ПолучитьЗаводской(ТекОС) + " на " + ВведеныйЗаводской + "?", РежимДиалогаВопрос.ДаНет);
			
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
			
			Если НЕ ПоменятьЗаводскойНомерУЭлементаСервер(ТекОС, ВведеныйЗаводской) Тогда
				Элементы.Оборудование.ТекущиеДанные.ЗаводскойНомер = "";
			КонецЕслИ;
		КонецЕсли;
		
	Иначе
		
		СтрокаВопроса = "Существуют еще основные средства с данным заводским номером: " + Символы.ПС;
		
		Для Каждого ЭлОс Из СписокОборудованияПоЗаводскому Цикл
			СтрокаВопроса2 = "-" + ЭлОС + Символы.ПС;
		КонецЦикла;
		
		Ответ = Вопрос(СтрокаВопроса + СтрокаВопроса2 + "В случае нажатия на ""Да"" номер " + ВведеныйЗаводской + " будет очищен у данных ОС и присвоен текущему" 
					+ Символы.ПС + "Нажатие на НЕТ - отмена операции" + Символы.ПС + "Выберите действие", РежимДиалогаВопрос.ДаНет);
					
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Элементы.Оборудование.ТекущиеДанные.ЗаводскойНомер = ПолучитьЗаводской(ТекОС);
			Возврат;
		КонецЕсли;
		
		Если НЕ ПоменятьЗаводскойНомерСписком(ВведеныйЗаводской, ТекОС) Тогда
			Элементы.Оборудование.ТекущиеДанные.ЗаводскойНомер = ПолучитьЗаводской(ТекОС);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаСервереБезКонтекста
Функция ПоменятьЗаводскойНомерСписком(ВведеныйЗаводской, ТекОС)
	
	НачатьТранзакцию();
	
	Если ПоменятьЗаводскойНомерУЭлементаСервер(ТекОс, ВведеныйЗаводской) Тогда
		
		Если ОчиститьЗаводскойУПрочихЭлементовСервер(ВведеныйЗаводской, ТекОС) Тогда
			ЗафиксироватьТранзакцию();
		Иначе
			ОтменитьТранзакцию();
			Возврат Ложь;
		КонецЕсли;
		
	КонецЕсли;	
	
	Возврат Истина;
	
КонецФункции

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаСервереБезКонтекста
Функция ОчиститьЗаводскойУПрочихЭлементовСервер(ВведеныйЗаводской, ТекОС)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОсновныеСредства.Ссылка
	               |ИЗ
	               |	Справочник.ОсновныеСредства КАК ОсновныеСредства
	               |ГДЕ
	               |	ОсновныеСредства.ЗаводскойНомер = &ЗаводскойНомер
	               |	И ОсновныеСредства.Ссылка <> &Ссылка";
				   
	Запрос.УстановитьПараметр("ЗаводскойНомер", ВведеныйЗаводской);
	Запрос.УстановитьПараметр("Ссылка", ТекОС);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ОСОб = Выборка.Ссылка.ПолучитьОбъект();
		ОСОб.ЗаводскойНомер = "";
		
		Попытка
			ОСОб.Записать();
		Исключение
			ОбщегоНазначения.СообщитьОбОшибке("Не удалось записать ОС: " + СТрока(Выборка.Ссылка) + " по причине: " + ОписаниеОшибки());
			Возврат Ложь;
		КонецПопытки;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаСервереБезКонтекста
Функция ПолучитьЗаводской(текОС)
	
	Возврат ТекОс.ЗаводскойНомер;
	
КонецФункции

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаСервереБезКонтекста
Функция ПоменятьЗаводскойНомерУЭлементаСервер(ОССсылка, ЗаводскойНомер)
	
	ОсОбъект = ОССсылка.ПолучитьОбъект();
	ОСОбъект.ЗаводскойНомер = ЗаводскойНомер;
	
	Попытка
		ОСОбъект.Записать();
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке("Не удалось записать основное средство " + Строка(ОССсылка) + ", по причине: " + ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаСервереБезКонтекста
Функция ПолучитьСписокОборудованияПоЗаводскомуНомеруСервер(ЗаводскойНомер, ТекОС)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ОсновныеСредства.Ссылка
	               |ИЗ
	               |	Справочник.ОсновныеСредства КАК ОсновныеСредства
	               |ГДЕ
	               |	ОсновныеСредства.ЗаводскойНомер = &ЗаводскойНомер
	               |	И ОсновныеСредства.Ссылка <> &Ссылка";
				   
	Запрос.УстановитьПараметр("ЗаводскойНомер", ЗаводскойНомер);
	Запрос.УстановитьПараметр("Ссылка", ТекОС);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивОС = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		МассивОС.Добавить(Строка(Выборка.Ссылка) + " с кодом: (" + Выборка.Ссылка.Код + ")");
	КонецЦикла;      	
	
	Возврат МассивОС;
	
КонецФункции

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаКлиенте
Процедура ПроверитьСоздатьОпрИСпис()
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИнвДляОтбора", Объект.Ссылка);
	
	ОткрытьФорму("ЖурналДокументов.ДокументыОсновныеСредстваСклад.Форма.ФормаФормированиеАктов", ПараметрыФормы);	
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаСервере
Процедура ДополнитьДатчикиСервер()
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	
	ТекстЗапроса = "SELECT     GetSensorShopNo_1.Магазин, GetSensorShopNo_1.МестоВыкладки, GetSensorShopNo_1.Датчик, GetSensorShopNo_1.ИдДатчика
		|FROM M2.dbo.GetSensorShopNo('&ПараметрДата', -3) AS GetSensorShopNo_1
		|WHERE GetSensorShopNo_1.НомерМагазина = '&НомерМагазина'";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПараметрДата", Формат(?(Объект.Дата = Дата("00010101"), ТекущаяДата(), Объект.Дата), "ДФ=yyyyMMdd"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&НомерМагазина", Формат(Объект.Склад.НомерТочки, "ЧГ=0"));
		
	rs = ADOСоединение.Execute(ТекстЗапроса);
	
	ТаблицаДатчики = Новый ТаблицаЗначений;
	ТаблицаДатчики.Колонки.Добавить("Датчик");
	
	ЗапросСпр = Новый Запрос;
	ЗапросСпр.Текст = "ВЫБРАТЬ
	                  |	Датчики.Ссылка,
	                  |	Датчики.Наименование,
	                  |	Датчики.ИД
	                  |ИЗ
	                  |	Справочник.Датчики КАК Датчики";
	
	ТаблицаДатчикиБазы = ЗапросСПр.Выполнить().Выгрузить();
		
	СтруктураПоиска = Новый Структура;
	
	Попытка
		rs.MoveFirst();
		Пока НЕ rs.Eof() Цикл
			
			МестоВыкладки = СокрЛП(rs.Fields("МестоВыкладки").Value);
			
			Если Найти(МестоВыкладки, "Теплые") = 0 Тогда				
				
				СтруктураПоиска.Вставить("Наименование", СокрЛП(rs.Fields("Датчик").Value));
				СтруктураПоиска.Вставить("ИД", rs.Fields("ИдДатчика").Value);
						
				НайдСтроки = ТаблицаДатчикиБазы.НайтиСтроки(СтруктураПоиска);
			
				Если НайдСтроки.Количество() Тогда			
				
					Датчик = НайдСтроки[0].Ссылка;			
								
					НовСтр = ТаблицаДатчики.Добавить();					
					НовСтр.Датчик =	Датчик;				
									
				КонецЕсли;
				
			КонецЕсли;
			
			rs.MoveNext();
			
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	ADOСоединение.Close();
	
	ТаблицаДатчики.Свернуть("Датчик");

	Для Каждого Стр Из ТаблицаДатчики Цикл
		НайдСтр = Объект.ОС.НайтиСтроки(Новый Структура("Датчик", Датчик));
		
		Если НайдСтр.Количество() = 0 Тогда
			НОвСтр = Объект.ОС.Добавить();
			НовСтр.Датчик = Стр.Датчик;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаКлиенте
Процедура ПоменятьДатчикиМестами(Команда)
	
	ВыдСтроки = Элементы.Оборудование.ВыделенныеСтроки;	
	
	Если ВыдСтроки.Количество() > 2 Тогда
		Предупреждение("Выбрано более 2-х строк таблицы. Необходимо выбрать 2 строки для переноса датчиков между ними!");
		Возврат;
	ИначеЕсли ВыдСтроки.Количество() =  1 Тогда
		Предупреждение("Выбрана только 1 строка таблицы. Необходимо выбрать 2 строки для переноса датчиков между ними!");
		Возврат;
	ИначеЕсли ВыдСтроки.Количество() = 0 Тогда
		Предупреждение("Не выбрано ни одной строки таблицы. Необходимо выбрать 2 строки для переноса датчиков между ними!");
		Возврат;
	КонецЕсли;	
	
	Строка1 = Объект.ОС.НайтиПоИдентификатору(ВыдСтроки[0]);
	Строка2 = Объект.ОС.НайтиПоИдентификатору(ВыдСтроки[1]);
	
	ДатчикПромежуточный = Строка1.Датчик;
	Строка1.Датчик = Строка2.Датчик;
	Строка2.Датчик = ДатчикПромежуточный;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаКлиенте
Процедура ОборудованиеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		НайдСтроки = Объект.ОС.НайтиСтроки(Новый Структура("Датчик", Элемент.ТекущиеДанные.Датчик));
		Для Каждого НСтр Из НайдСтроки Цикл
			Если НСтр<>Элементы.Оборудование.ТекущаяСтрока Тогда
				Элемент.ТекущиеДанные.Датчик = ПредопределенноеЗначение("Справочник.Датчики.ПустаяСсылка");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаКлиенте
Процедура ЗаполнитьПеремещение(Команда)
	
	Если Объект.Ссылка = ПредопределенноеЗначение("Документ.ИнвентаризацияОС.ПустаяСсылка") Тогда
		Предупреждение("Сперва необходимо записать документ!");
		Возврат;
	КонецЕсли;
	
	ВыдСтроки = Элементы.Оборудование.ВыделенныеСтроки;
	
	Если ВыдСтроки.Количество() = 0 Тогда
		Предупреждение("Не выделена ни одна строка в табличной части!");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
		Предупреждение("Не заполнена структурная единица!");
		Возврат;
	КонецЕсли;
	
	МассивОС = Новый Массив;
	
	Для Каждого ВыдСтрока Из ВыдСтроки Цикл
		НайдСтр = Объект.ОС.НайтиПоИдентификатору(ВыдСтрока);
		МассивОС.Добавить(НайдСтр.ОсновноеСредство);
	КонецЦикла;
	
	ДокПеремещения = СоздатьПеремещениеСервер(МассивОС);	
		
	СтруктураКлюч = Новый Структура("Ключ",ДокПеремещения);
	ОткрытьФорму("Документ.ПеремещениеОС.Форма.ФормаДокументаУпр", СтруктураКлюч);
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаСервере
Функция НайтиПеремещениеСервер()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПеремещениеОС.Ссылка
	               |ИЗ
	               |	Документ.ПеремещениеОС КАК ПеремещениеОС
	               |ГДЕ
	               |	ПеремещениеОС.Основание = &Основание";
	
	Запрос.УстановитьПараметр("Основание", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
КонецФункции

//+++АК Susk (Суслин К.В.) 2017.12.28 (исправление старых префиксов)
&НаСервере
Функция СоздатьПеремещениеСервер(МассивОС)
	
	ДокСсылка = НайтиПеремещениеСервер();
	
	Если ДокСсылка <> Неопределено Тогда
		Док = ДокСсылка.ПолучитьОбъект();
	Иначе
		Док = Документы.ПеремещениеОС.СоздатьДокумент();
	КонецЕсли;
	
	Док.Организация = Справочники.Организации.НайтиПоРеквизиту("ИНН", "7734675810");
	Док.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	Док.Комментарий = "Создан автоматически по результатам инвентаризации " + Строка(Объект.Ссылка);
	
	ВиртСклад = Справочники.Склады.НайтиПоНаименованию("Склад Холодильников");
	
	Док.Номенклатура.Очистить();
	
	Для Каждого ОС Из МассивОС Цикл
		НовСтр = Док.Номенклатура.Добавить();
		НОвСтр.ОсновноеСредство = ОС;
		НовСтр.СтруктурнаяЕдиницаОтправитель = Объект.Склад;
		НовСтр.СтруктурнаяЕдиницаПолучатель = ВиртСклад;
	КонецЦикла;
	
	Док.Дата = Объект.Дата + 1;
	Док.НеВыгружатьВБУ = Истина;
	Док.ПометкаУдаления = Ложь;
	Док.Основание = Объект.Ссылка;
	
	Док.Записать(?(Док.Проведен, РежимЗаписиДокумента.Проведение, РежимЗаписиДОкумента.Запись));
	
	Возврат Док.Ссылка;
	
КонецФункции
	