
Перем ОбработкаПроверкиЗаполненияВыполнена;
Перем ЭтоНовыйОбъект;

//+++АК sole 2018.07.12 ИП-00018320.04
Процедура Конструктор()
	ОбработкаПроверкиЗаполненияВыполнена = Ложь;
КонецПроцедуры

//+++АК sole 2018.07.26 ИП-00018320.04
// Процедура проверяет нет ли других документов, связанных 
// с документом основания, указанным в документе.
Процедура ПроверитьУникальностьЗаявки(Отказ)
	
	Перем Запрос;
	
	Запрос = Новый Запрос();
	
	Запрос.Текст =
"ВЫБРАТЬ ПЕРВЫЕ 1
|	 ПРЕДСТАВЛЕНИЕ(АК_ЗаявкаНаПеревозку.Ссылка)
|
|ИЗ	Документ.АК_ЗаявкаНаПеревозку КАК АК_ЗаявкаНаПеревозку
|ГДЕ
|		НЕ АК_ЗаявкаНаПеревозку.ПометкаУдаления
|	И	АК_ЗаявкаНаПеревозку.ДокументОснование = &ДокументОснование
|	И   АК_ЗаявкаНаПеревозку.Ссылка <> &ЗаявкаНаПеревозкуСсылка
|";
	Запрос.УстановитьПараметр("ДокументОснование", ЭтотОбъект.ДокументОснование);
	Запрос.УстановитьПараметр("ЗаявкаНаПеревозкуСсылка", ЭтотОбъект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ОбщегоНазначения.СообщитьОбОшибке
			(
				"Для указанного документа основания уже создана заявка """ + Выборка[0] + """.", 
				Отказ
			);
	КонецЕсли;

КонецПроцедуры

//+++АК sole 2018.07.12 ИП-00018320.04
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) 
	
	ЭтотОбъект.Дата = ТекущаяДата();
	ЭтотОбъект.Статус = Перечисления.СтатусыЗаявокНаПеревозку.Черновик;
	ЭтотОбъект.ВидПеревозки = Справочники.АК_ВидыПеревозки.ВозвратПоставщику;
	ЭтотОбъект.Проведен = Истина;
	ЭтотОбъект.Организация = Справочники.Организации.НайтиПоКоду("000000006"); //Вкусвилл		
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПеремещениеСклад") Тогда
		
		ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
		ЭтотОбъект.СтруктурнаяЕдиница = ДанныеЗаполнения.СкладПолучатель.Владелец;
		
	КонецЕсли;
	
КонецПроцедуры

//+++АК sole 2018.07.12 ИП-00018320.04
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ЗначениеЗаполнено(ЭтотОбъект.Дата) Тогда
		Если ЭтотОбъект.ДатаПлановойДоставки < ЭтотОбъект.Дата Тогда
			ОбщегоНазначения.СообщитьОбОшибке
				(
					"Дата плановой доставки не может иметь значение раньше даты документа!", 
					Отказ
				);
		КонецЕсли;	
	КонецЕсли;
	
	ПроверитьУникальностьЗаявки(Отказ);
	
	Если ЭтотОбъект.ВидПеревозки = Справочники.АК_ВидыПеревозки.ВозвратПоставщику Тогда
		  ПроверяемыеРеквизиты.Добавить("Поставщик");
	КонецЕсли;	
	
КонецПроцедуры

//+++АК sole 2018.07.12 ИП-00018320.04
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ЭтоНовыйОбъект = ЭтоНовый();
	
	Если 
		Не (
					ЭтотОбъект.ОбменДанными.Загрузка 
				Или ОбработкаПроверкиЗаполненияВыполнена
			)
	Тогда
	    Отказ = Не ЭтотОбъект.ПроверитьЗаполнение();
		
		Если Отказ Тогда
			Возврат;	
		КонецЕсли;
	КонецЕсли;		
	
КонецПроцедуры

//+++АК sole 2018.08.01 ИП-00018320.06
Процедура ПриЗаписи(Отказ)
	
	Если ЭтоНовыйОбъект Тогда
		ОтправитьСообщениеПеревозчику();	
	КонецЕсли;
	
КонецПроцедуры

//+++АК sole 2018.08.01 ИП-00018320.06
Функция ПолучитьОбъектыДляРаботыСПочтой()
	
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	
	Результат = Новый Структура();
	
	Результат.Вставить("УчетнаяЗапись", УчетнаяЗапись);
	Результат.Вставить("Профиль", Профиль);
	
	Возврат Результат;	
КонецФункции

//+++АК sole 2018.08.01 ИП-00018320.06
Процедура ОтправитьСообщениеПеревозчику()
	
	АдресПредставителяПеревозчика = ПолучитьАдресПредставителяПеревозчика();
	
	Если Не ЗначениеЗаполнено(АдресПредставителяПеревозчика) Тогда
		Возврат;	
	КонецЕсли;
	
	БПР = ПолучитьОбъектыДляРаботыСПочтой();
	
	Сообщение = Новый ИнтернетПочтовоеСообщение();
	
	Сообщение.Отправитель = БПР.УчетнаяЗапись.Логин;
	Сообщение.ИмяОтправителя = БПР.УчетнаяЗапись.Логин;

	МассивАдресов = Справочники.Контрагенты.РазложитьСтрокуВМассивПодстрок(АдресПредставителяПеревозчика,";");	
	
	Для Каждого Элем Из МассивАдресов Цикл
		Если ЗначениеЗаполнено(Элем) Тогда
			Получатель = Сообщение.Получатели.Добавить();
			Получатель.Адрес = СокрЛП(Элем);
		КонецЕсли; 
	КонецЦикла; 
	
	Сообщение.Тема ="Новая заявка на перевозку"; 

	ИнтернетТекстПочтовогоСообщения = Сообщение.Тексты.Добавить();
	ТекстПочтовогоСообщения	 =
"Добрый день!
|Создана заявка на перевозку № ""&Номер"" для контрагента ""&Контрагент""
|
|Дата создания: &ДатаCоздания
|Плановая дата выполнения: &ПлановаяДатаВыполнения
|
|Проверьте возможность выполнения перевозки или измените перевозчика. 
|Установите сумму перевозки для согласования.";
	
	ТекстПочтовогоСообщения = СтрЗаменить(ТекстПочтовогоСообщения, "&Номер", ЭтотОбъект.Номер); 
	ТекстПочтовогоСообщения = СтрЗаменить(ТекстПочтовогоСообщения, "&Контрагент", ЭтотОбъект.Перевозчик); 
	ТекстПочтовогоСообщения = СтрЗаменить(ТекстПочтовогоСообщения, "&ДатаCоздания", ЭтотОбъект.Дата); 
	ТекстПочтовогоСообщения = СтрЗаменить(ТекстПочтовогоСообщения, "&ПлановаяДатаВыполнения", ЭтотОбъект.ДатаПлановойДоставки); 
	
	ИнтернетТекстПочтовогоСообщения.Текст = ТекстПочтовогоСообщения;
	ИнтернетТекстПочтовогоСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
	
	Почта = Новый ИнтернетПочта();

	Почта.Подключиться(БПР.Профиль);
	Почта.Послать(Сообщение);
	Почта.Отключиться();
	
КонецПроцедуры

//+++АК sole 2018.08.01 ИП-00018320.06
Функция ПолучитьАдресПредставителяПеревозчика()
	
	Перем Запрос;
	
	Запрос = Новый Запрос();

	Запрос.Текст =
"ВЫБРАТЬ ПЕРВЫЕ 1
|	КонтактнаяИнформация.Представление КАК EMailАдрес
|	
|ИЗ РегистрСведений.АК_ПеревозчикиПоКонтрагентам КАК АК_ПеревозчикиПоКонтрагентам
|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация ПО
|		КонтактнаяИнформация.Объект = АК_ПеревозчикиПоКонтрагентам.Пользователь.ФизЛицо
|	И	КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица)
|	
|ГДЕ АК_ПеревозчикиПоКонтрагентам.Перевозчик.Родитель = &Перевозчик
|";
	Запрос.УстановитьПараметр("Перевозчик", ЭтотОбъект.Перевозчик);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка[0];
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

//+++АК sole 2018.08.01 ИП-00018320.06
Процедура ОтправитьСообщениеДляСогласования() Экспорт;
	
	ТекстПочтовогоСообщения =
"<br>Добрый день!
|<br>Необходимо  согласовать сумму перевозки по заявке на перевозку № ""&Номер""
|<br>
|<br>Перевозчик: &Перевозчик
|<br>Дата создания:  &ДатаCоздания 
|<br>Плановая дата выполнения: &ПлановаяДатаВыполнения
|<br>Сумма: &Сумма
|<br>
|";
	ТекстПочтовогоСообщения = СтрЗаменить(ТекстПочтовогоСообщения, "&Номер", ЭтотОбъект.Номер);
	ТекстПочтовогоСообщения = СтрЗаменить(ТекстПочтовогоСообщения, "&Перевозчик", ЭтотОбъект.Перевозчик); 
	ТекстПочтовогоСообщения = СтрЗаменить(ТекстПочтовогоСообщения, "&ДатаCоздания", ЭтотОбъект.Дата); 
	ТекстПочтовогоСообщения = СтрЗаменить(ТекстПочтовогоСообщения, "&ПлановаяДатаВыполнения", ЭтотОбъект.ДатаПлановойДоставки); 
	ТекстПочтовогоСообщения = СтрЗаменить(ТекстПочтовогоСообщения, "&Сумма", ЭтотОбъект.Сумма); 
	
	БПР = ПолучитьОбъектыДляРаботыСПочтой();
	
	АдресПолучателя = "product_1@vkusvill.ru";
	
	Акцептант = Справочники.ФизическиеЛица.НайтиПоКоду("0000003716"); // Римский Евгений
	СписокКому = Новый СписокЗначений();
	
	Тема = "Заявка на перевозку №" + СокрЛП(ЭтотОбъект.Номер) + " от " + Формат(ЭтотОбъект.Дата,"ДФ=dd.MM.yyyy");
	ID_MESSAGE = Новый УникальныйИдентификатор;
	TYPE_MESSAGE = 0;
	GUID_Заявки = Строка(ЭтотОбъект.Ссылка.УникальныйИдентификатор());
	Объект_Ссылка = ЭтотОбъект.Ссылка;
	
	УправлениеЭлектроннойПочтой.ОтправитьЗаявкуНаПодтверждение
		(
			Тема, 
			ТекстПочтовогоСообщения,
			ЭтотОбъект.Номер,
			СписокКому,
			GUID_Заявки,
			ID_MESSAGE,
			TYPE_MESSAGE,
			АдресПолучателя,
			Акцептант,
			БПР.УчетнаяЗапись,
			Объект_Ссылка
		);
	
КонецПроцедуры

Конструктор();


