// Хранит дерево макетов печатных форм
Перем мДеревоМакетов;

// Хранит элемент управления подменю печати
Перем мПодменюПечати;

// Хранит элемент управления кнопку печать по умолчанию
Перем мПечатьПоУмолчанию;

Перем ОперацияАпдекс; //+++АК sils 07.06.2018 ИП-00018876

// Процедура устанавливает подменю "Печать" и кнопку "Печать по умолчанию" при необходимости
//
Процедура УстановитьКнопкиПечати()
	
	мДеревоМакетов = УниверсальныеМеханизмы.ПолучитьДеревоМакетовПечати(Ссылка, ПолучитьСтруктуруПечатныхФорм(), Новый Действие("ОсновныеДействияФормыПечать"), Новый Действие("ОсновныеДействияФормыУстановитьПечатьПоУмолчанию"));

	УниверсальныеМеханизмы.УстановитьПодменюПечати    (мПодменюПечати, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов.Строки.Количество() > 0);
	УниверсальныеМеханизмы.УстановитьПечатьПоУмолчанию(мПечатьПоУмолчанию, ЭлементыФормы.ОсновныеДействияФормы, мДеревоМакетов, Метаданные().Имя, Новый Действие("ОсновныеДействияФормыПечатьПоУмолчанию"));

	Если НЕ мПодменюПечати = Неопределено Тогда
		УниверсальныеМеханизмы.СформироватьПодменю(мДеревоМакетов, мПодменюПечати, Истина, Истина);
	КонецЕсли;
	
	Кнопки = мПодменюПечати.Кнопки;
	Кнопки.Добавить(, ТипКнопкиКоманднойПанели.Разделитель);
	
	//ДействиеПечатьПланировок = Новый Действие("ОсновныеДействияФормыПланировка");
	//Кнопка = Кнопки.Добавить("Печать планировок",ТипКнопкиКоманднойПанели.Действие, "Печать планировок", ДействиеПечатьПланировок);
	//Кнопка.Подсказка      = "Печать планировок в MS EXCEL";

	//ДействиеШаблон = Новый Действие("ОсновныеДействияФормыШаблон");
	//Кнопка = Кнопки.Добавить("Заполнение полей шаблона",ТипКнопкиКоманднойПанели.Действие, "Заполнение полей шаблона", ДействиеШаблон);
	//Кнопка.Подсказка      = "Заполение полей в шаблоне договора";
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать по умолчанию"
//
Процедура ОсновныеДействияФормыПечатьПоУмолчанию(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Печать"
//
Процедура ОсновныеДействияФормыПечать(Кнопка)
	
	УниверсальныеМеханизмы.ПечатьПоДополнительнойКнопке(мДеревоМакетов, ЭтотОбъект, ЭтаФорма, Кнопка.Текст);
	
КонецПроцедуры

// Процедура - обработчик нажатия на кнопку "Установить печать по умолчанию"
//
Процедура ОсновныеДействияФормыУстановитьПечатьПоУмолчанию(Кнопка)
	
	Если УниверсальныеМеханизмы.НазначитьКнопкуПечатиПоУмолчанию(мДеревоМакетов, Метаданные().Имя) Тогда
		
		УстановитьКнопкиПечати();
		
	КонецЕсли; 
	
КонецПроцедуры

// Процедура разрешения/запрещения редактирования номера документа
Процедура ДействияФормыРедактироватьНомер(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
			
КонецПроцедуры

Процедура УстановитьДоговор()
	
	Если ЗначениеЗаполнено(ЭтотОбъект.ДоговорКонтрагента) Тогда
		
		Если ЗначениеЗаполнено(ЭтотОбъект.ДоговорКонтрагента)
				И ДоговорКонтрагента.ТипДоговора <> Перечисления.ТипыДоговоровСПоставщиком.Аренда Тогда
			ЭтотОбъект.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЭтотОбъект.ДокументОснование)
				И НЕ ДокументОснование.Контрагент = Контрагент Тогда
			ЭтотОбъект.ДокументОснование = Документы.ЗаключениеДоговораАренды.ПустаяСсылка();
		КонецЕсли;
		
		Если ДокументОснование.ВидОперации = Перечисления.ВидыОперацийДоговоровАренды.САрендатором
				И ДоговорКонтрагента.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СПокупателем Тогда
			ЭтотОбъект.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		ИначеЕсли ДокументОснование.ВидОперации = Перечисления.ВидыОперацийДоговоровАренды.САрендодателем
				И ДоговорКонтрагента.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком Тогда
			ЭтотОбъект.ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ДоговорКонтрагента)
			И ЗначениеЗаполнено(ЭтотОбъект.Организация)
			И ЗначениеЗаполнено(ЭтотОбъект.Контрагент) Тогда
		ЭтотОбъект.ДоговорКонтрагента = ДопМодульСервер.ПолучитьОсновнойДоговорКонтрагента(ЭтотОбъект.Организация, ЭтотОбъект.Контрагент, ?(ЭтотОбъект.ЭтоНовый(), ТекущаяДата(), ЭтотОбъект.Дата));
		//Запрос = Новый Запрос;
		//Запрос.УстановитьПараметр("Организация"	, Организация);
		//Запрос.УстановитьПараметр("Контрагент"	, Контрагент);
		//Запрос.УстановитьПараметр("ВидДоговора"	, ?(ДокументОснование.ВидОперации = Перечисления.ВидыОперацийДоговоровАренды.САрендатором, Перечисления.ВидыДоговоровКонтрагентов.СПокупателем, Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком));
		//Запрос.Текст =
		//"ВЫБРАТЬ
		//|	ДоговорыКонтрагентов.Ссылка
		//|ИЗ
		//|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		//|ГДЕ
		//|	ДоговорыКонтрагентов.Организация = &Организация
		//|	И ДоговорыКонтрагентов.Владелец = &Контрагент
		//|	И ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора
		//|	И ДоговорыКонтрагентов.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСПоставщиком.Аренда)
		//|
		//|УПОРЯДОЧИТЬ ПО
		//|	ДоговорыКонтрагентов.ПометкаУдаления";
		//Выборка = Запрос.Выполнить().Выбрать();
		//Если Выборка.Следующий() Тогда
		//	ДоговорКонтрагента = Выборка.Ссылка;
		//КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура АрендаторПриИзменении(Элемент)
	
	УстановитьДоговор();
	
	Если ЗначениеЗаполнено(ДоговорКонтрагента)
			И НЕ ДоговорКонтрагента.ТипДоговора = Перечисления.ТипыДоговоровСПоставщиком.Аренда Тогда
		ДоговорКонтрагента = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	КонецЕсли;
		
КонецПроцедуры

Процедура ДоговорАрендыНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбщиеПроцедуры.ВыборАрендногоДоговораКонтрагента(ЭтотОбъект);		

КонецПроцедуры

Процедура ДатаЗаключенияДоговораПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ДатаЗаключенияДоговора) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаОкончанияДоговора)
			И ДатаОкончанияДоговора < ДатаЗаключенияДоговора Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Дата окончания договора не может быть меньше даты заключения договора!");
		ДатаЗаключенияДоговора = '00010101';
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

Функция СпроситьОбИзменении(ТекстВопроса)
	
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет, "Вопрос");
	
	Возврат (Ответ = КодВозвратаДиалога.Да);
	
КонецФункции

Процедура УстановитьДоступностьСтимулы()
	
	ЭлементыФормы.ТипСтимулаАренды.Доступность 						= ЭтаФорма.ЕстьСтимулыАренды;
	ЭлементыФормы.НадписьКоличествоДнейСтимулаАренды.Доступность 	= ЭтаФорма.ЕстьСтимулыАренды;
	ЭлементыФормы.КоличествоДнейСтимулаАренды.Доступность 			= ЭтаФорма.ЕстьСтимулыАренды;
	//+++АК sils 15.08.2017 ИП-00014584
	ЭлементыФормы.НадписьДатаНачалаСтимула.Доступность 			    = ЭтаФорма.ЕстьСтимулыАренды;
	ЭлементыФормы.ДатаНачалаСтимула.Доступность 			        = ЭтаФорма.ЕстьСтимулыАренды;
	ЭлементыФормы.НадписьДатаОкончанияСтимула.Доступность 			= ЭтаФорма.ЕстьСтимулыАренды;
	ЭлементыФормы.ДатаОкончанияСтимула.Доступность 			        = ЭтаФорма.ЕстьСтимулыАренды;
	//---АК
	
КонецПроцедуры

Процедура УстановитьДоступностьПоДопПравам()
	
	ПолныеПраваНаДокументыАренды = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.ДоступКДокументамАренды, Ложь);
	
	Если ПолныеПраваНаДокументыАренды = Ложь
			И НЕ РольДоступна("ПолныеПрава") Тогда
		Для Каждого ТекЭлемент Из ЭлементыФормы Цикл
			Попытка
				ТекЭлемент.ТолькоПросмотр 	= Истина;
			Исключение
				ТекЭлемент.Доступность 		= Ложь;				
			КонецПопытки;
		КонецЦикла;
		ЭлементыФормы.Панель.Доступность 				= Истина;
		ЭлементыФормы.ОсновныеДействияФормы.Доступность = Истина;
		ПраваНаРедактированиеДоговора = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.МожетРедактироватьДоговораВДокументахАренды, Ложь);
		ЭлементыФормы.НадписьДоговорАренды.Доступность 	= ПраваНаРедактированиеДоговора;
		ЭлементыФормы.ДоговорАренды.ТолькоПросмотр 		= НЕ ПраваНаРедактированиеДоговора;
	КонецЕсли;
	
	//+++АК sils 23.10.2018 ИП-00020193
	флДоступАрендыМСФО = РольДоступна("АК_РаботаСАрендойМСФО"); 
	ЭлементыФормы.СуммаЗалогаМСФО.Доступность 					= флДоступАрендыМСФО;
	//---АК
КонецПроцедуры


Процедура ДатаОкончанияДоговораПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(ДатаОкончанияДоговора) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДатаОкончанияДоговора < ДатаЗаключенияДоговора Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Дата окончания договора не может быть меньше даты заключения договора!");
		ДатаЗаключенияДоговора = '00010101';
		Возврат;
	КонецЕсли;		
		
КонецПроцедуры

Процедура ВыборПериодаНажатие(Элемент)
	
	ОбщиеПроцедуры.ВыборПериодаПоДоговору(ДатаЗаключенияДоговора,ДатаОкончанияДоговора,ДоговорКонтрагента);
	Если ЗначениеЗаполнено(ДатаОкончанияДоговора)
			И ДатаОкончанияДоговора < ДатаЗаключенияДоговора Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Дата окончания договора не может быть меньше даты заключения договора!");
		ДатаЗаключенияДоговора = '00010101';
		Возврат;
	КонецЕсли;		
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтотОбъект.ЭтоНовый() Тогда // проверить объект на то, что он еще не внесен в ИБ
    	// Заполнить реквизиты значениями по умолчанию.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
		
		ЭтотОбъект.ВалютаСпособаНачисления = мВалютаРегламентированногоУчета;
	КонецЕсли;
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияНомера(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", ЭтотОбъект, ЭтаФорма);
	УстановитьВидимость();
	
	//
	ЭтаФорма.ЕстьСтимулыАренды = НЕ ЭтотОбъект.ТипСтимулаАренды.Пустая();
	УстановитьДоступностьСтимулы();
	
	//
	УстановитьДоступностьПоДопПравам();
	
	//+++АК CISA 2018.09.26 ИП-00019931
	УстановитьВидимостьТипДоговорАренды(ЭлементыФормы.ТипДоговораАренды);
	//---АК CISA
	
	//+++АК sils 07.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(ЭтоНовый(), "Новый документ", "" + ЭтотОбъект));
	//---АК
	//+++АК sils 15.07.2018 ИП-00014584.02
	УстановитьСтатусРасчетаСтимула();
	//---АК
КонецПроцедуры

Процедура УстановитьВидимость()
			
	//Видимость элементов формы на закладке "Залог"
	ЭлементыФормы.НадписьСпособРасчетаЗалога.Видимость 			= УчитыватьЗалог;
	ЭлементыФормы.СпособРасчетаЗалога.Видимость 				= УчитыватьЗалог;
	ЭлементыФормы.НадписьУсловиеИспользованияДепозита.Видимость = УчитыватьЗалог;
	ЭлементыФормы.УсловиеИспользованияДепозита.Видимость 		= УчитыватьЗалог;
	ЭлементыФормы.НадписьСуммаЗалогаБезналичные.Видимость 		= УчитыватьЗалог;
	ЭлементыФормы.СуммаЗалогаБезналичные.Видимость 				= УчитыватьЗалог;
	ЭлементыФормы.НадписьСуммаЗалогаНаличные.Видимость 			= УчитыватьЗалог;
	ЭлементыФормы.СуммаЗалогаНаличные.Видимость 				= УчитыватьЗалог;
	ЭлементыФормы.ВалютаДепозита.Видимость 						= УчитыватьЗалог;
	ЭлементыФормы.НадписьВалютаДепозита.Видимость 				= УчитыватьЗалог;
	ЭлементыФормы.ВалютаДепозита2.Видимость 					= УчитыватьЗалог
																	И (СпособРасчетаЗалога = Перечисления.СпособРасчетаЗалога.СуммаДвухКурсовВалютДеленнаяПололам);
	ЭлементыФормы.НадписьВалютаДепозита2.Видимость 				= УчитыватьЗалог
																	И (СпособРасчетаЗалога = Перечисления.СпособРасчетаЗалога.СуммаДвухКурсовВалютДеленнаяПололам);

	ЭлементыФормы.РамкаБезналичные.Видимость 					= УчитыватьЗалог;
	ЭлементыФормы.РамкаНаличные.Видимость 						= УчитыватьЗалог;
	ЭлементыФормы.НадписьСтавкаНДСЗалогаБезналичные.Видимость 	= УчитыватьЗалог;
	ЭлементыФормы.СтавкаНДСЗалогаБезналичные.Видимость 			= УчитыватьЗалог;
	ЭлементыФормы.НадписьСтавкаНДСЗалогаНаличные.Видимость 		= УчитыватьЗалог;
	ЭлементыФормы.СтавкаНДСЗалогаНаличные.Видимость 			= УчитыватьЗалог;
	//+++АК sils 23.10.2018 ИП-00020193
	ЭлементыФормы.РамкаМСФО.Видимость 							= УчитыватьЗалог и ЗначениеЗаполнено(ДокументОснование) и (ДокументОснование.ВидОперации = Перечисления.ВидыОперацийДоговоровАренды.САрендодателем);
	ЭлементыФормы.НадписьСуммаЗалогаМСФО.Видимость 				= УчитыватьЗалог и ЗначениеЗаполнено(ДокументОснование) и (ДокументОснование.ВидОперации = Перечисления.ВидыОперацийДоговоровАренды.САрендодателем);
	ЭлементыФормы.СуммаЗалогаМСФО.Видимость 					= УчитыватьЗалог и ЗначениеЗаполнено(ДокументОснование) и (ДокументОснование.ВидОперации = Перечисления.ВидыОперацийДоговоровАренды.САрендодателем);
	//---АК
	
	// Видимость элементов на закладке "Курсы валюты"
	ВидимостьФиксированная 		= (СпособРасчета = Перечисления.СпособыРасчетаКурсаВалюты.Фиксированный);
	ВидимостьРасчетная 			= (СпособРасчета = Перечисления.СпособыРасчетаКурсаВалюты.Расчетный);
	ВидимостьСуммаДвухКурсов 	= (СпособРасчета = Перечисления.СпособыРасчетаКурсаВалюты.СуммаДвухКурсовВалютДеленнаяПололам);	
	ЭлементыФормы.НадписьВалюта2СпособаНачисления.Видимость = ВидимостьСуммаДвухКурсов;
	ЭлементыФормы.Валюта2СпособаНачисления.Видимость 		= ВидимостьСуммаДвухКурсов;
	ЭлементыФормы.НадписьКоэффициент.Видимость 				= ВидимостьРасчетная;
	ЭлементыФормы.Коэффициент.Видимость 					= ВидимостьРасчетная;
	ЭлементыФормы.НадписьНижняяГраница.Видимость 			= ВидимостьРасчетная ИЛИ ВидимостьСуммаДвухКурсов;;
	ЭлементыФормы.НижняяГраница.Видимость 					= ВидимостьРасчетная ИЛИ ВидимостьСуммаДвухКурсов;
	ЭлементыФормы.НадписьВерхняяГраница.Видимость 			= ВидимостьРасчетная ИЛИ ВидимостьСуммаДвухКурсов;
	ЭлементыФормы.ВерхняяГраница.Видимость 					= ВидимостьРасчетная ИЛИ ВидимостьСуммаДвухКурсов;
	ЭлементыФормы.НадписьКратность.Видимость 				= ВидимостьФиксированная;
	ЭлементыФормы.Кратность.Видимость 						= ВидимостьФиксированная;
	ЭлементыФормы.НадписьКурс.Видимость 					= ВидимостьФиксированная;
	ЭлементыФормы.Курс.Видимость 							= ВидимостьФиксированная;

	// Видимость элементов на закладке "Постоянная часть оплаты"
	ЭлементыФормы.ПостояннаяЧастьАренднойПлаты.Колонки.НДФЛ.Видимость = (ДоговорКонтрагента.УплачиватьНДФЛЗаКонтрагента);
	ЭлементыФормы.ПеременнаяЧастьАренднойПлаты.Колонки.НДФЛ.Видимость = (ДоговорКонтрагента.УплачиватьНДФЛЗаКонтрагента);
	
	Если СозданПоУсловиямДоговора Тогда
		ЭлементыФормы.НадписьНомерДС.Видимость	= Истина;
		ЭлементыФормы.НомерДС.Видимость			= Истина;
		ЭлементыФормы.НадписьДатаДС.Видимость	= Истина;
		ЭлементыФормы.ДатаДС.Видимость			= Истина;
	Иначе
		ЭлементыФормы.НадписьНомерДС.Видимость	= Ложь;
		ЭлементыФормы.НомерДС.Видимость			= Ложь;
		ЭлементыФормы.НадписьДатаДС.Видимость	= Ложь;
		ЭлементыФормы.ДатаДС.Видимость			= Ложь;
	КонецЕсли;	
	
КонецПроцедуры

Функция ЗаписатьДокумент(Действие)
	
	Если Модифицированность
			ИЛИ ДокументОбъект.ЭтоНовый() Тогда
		
		Если Вопрос("Автоматически " + Действие + " можно только после записи документа. Записать?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Если Проведен Тогда
			ЗаписатьВФорме(РежимЗаписиДокумента.ОтменаПроведения);	
		КонецЕсли;
		
		ЗаписатьВФорме(РежимЗаписиДокумента.Запись);
		
	КонецЕсли;
	
	Возврат Истина;
 	
КонецФункции

Процедура ПослеЗаписи()
	
	РаботаСДиалогами.УстановитьЗаголовокФормыДокумента("", ЭтотОбъект, ЭтаФорма);
	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Номер);
	//+++ AK suvv 03.06.2018 ИП-00018425
	ЗаполнитьВкладкуДинамикаАренды();
	//--- AK suvv
КонецПроцедуры

Процедура ДействияФормыСтруктураПодчиненности(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ЭтотОбъект.Ссылка);
	
КонецПроцедуры

Процедура УчитыватьЗалогПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	//+++АК sils 07.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Дополнительное соглашение");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	//+++ak ziga ИП-00015987 2017111201
	Если Не ЭтоНовый() Тогда
	Если Не ДоговорКонтрагента=Справочники.ДоговорыКонтрагентов.ПустаяСсылка()  Тогда
		Аренда=?(ДоговорКонтрагента.ТипДоговора=Перечисления.ТипыДоговоровСПоставщиком.Аренда,Истина,Ложь);	
		//НаименованиеДопПрава="Доступ к документам аренды";	
		МассивПраваАренда=УправлениеДопПравамиПользователей.ПрочитатьЗначениеПраваПользователя(ПланыВидовХарактеристик.ПраваПользователей.ДоступКДокументамАренды,Ложь,ПараметрыСеанса.ТекущийПользователь);	
		ПравоАренда=МассивПраваАренда[0];
		//НаименованиеДопПрава="Может редактировать договора в документах аренды";	
		МассивПраваНаИзменениеДоговора=УправлениеДопПравамиПользователей.ПрочитатьЗначениеПраваПользователя(ПланыВидовХарактеристик.ПраваПользователей.МожетРедактироватьДоговораВДокументахАренды,Ложь,ПараметрыСеанса.ТекущийПользователь);	
		ПравоИзменениеДоговора=МассивПраваНаИзменениеДоговора[0];

		
		Если не РольДоступна("ПолныеПрава") Тогда
			Если Аренда Тогда
				ЭтаФорма.ТолькоПросмотр=Не ПравоАренда;
				ЭлементыФормы.ДоговорАренды.Доступность=ПравоИзменениеДоговора;
					Если Не ПравоАренда Тогда
					Сообщить("Нет доступа изменения документов аренды");
				КонецЕсли
			КонецЕсли;		
		КонецЕсли;
	КонецЕсли;
	КонецЕсли;
	//---ak ziga ИП-00015987 2017111201
	УстановитьКнопкиПечати();
	
	//+++ AK suvv 03.06.2018 ИП-00018425
	ЗаполнитьВкладкуДинамикаАренды();
	//--- AK suvv

КонецПроцедуры

Процедура ОтсрочкаПоОплатеПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыПланировка(Кнопка)
	//ПечатьПланировок(ЭтотОбъект.Ссылка);
КонецПроцедуры

Процедура ОсновныеДействияФормыШаблон(Кнопка)
	//ФормированиеШаблона(ЭтотОбъект.Ссылка);
КонецПроцедуры

// Обработчик события элемента КоманднаяПанельФормы.Файлы.
//
Процедура ДействияФормыФайлы(Кнопка)

	Если НЕ РаботаСДиалогами.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;

	СтруктураДляСпискаИзображдений 			= Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
	СтруктураДляСпискаДополнительныхФайлов 	= Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
	ОбязательныеОтборы = Новый Структура("Объект", ЭтотОбъект.Ссылка);

	РаботаСФайлами.ОткрытьФормуСпискаФайловИИзображений(СтруктураДляСпискаИзображдений, СтруктураДляСпискаДополнительныхФайлов, ОбязательныеОтборы, ЭтаФорма, "ХранилищеДополнительнойИнформации");

КонецПроцедуры

Процедура ЗаполнитьКурсВалютыПоУмолчанию()
	
	Если ЗначениеЗаполнено(ВалютаСпособаНачисления) Тогда
		СтруктураКурса = МодульВалютногоУчета.ПолучитьКурсВалюты(ВалютаСпособаНачисления, ЭтотОбъект.Дата);
		СпособРасчета = Перечисления.СпособыРасчетаКурсаВалюты.КурсЦБ;
		Курс 		= СтруктураКурса.Курс;
		Кратность 	= СтруктураКурса.Кратность;
		Коэффициент = 1;
		НижняяГраница 	= 0;
		ВерхняяГраница 	= 0;
	КонецЕсли;
	
КонецПроцедуры

Процедура СпособРасчетаПриИзменении(Элемент)
	
	УстановитьВидимость();
	
	//+++АК sils 23.10.2018 ИП-00020193
	РассчитатьСуммуДепозитаМСФО();
	//---АК
КонецПроцедуры

Процедура ДействияФормыДействие(Кнопка)
	
	ЗаполнитьТабличныеЧасти();
	//+++АК BARA 08.11.17   ИП-00017110
	ЭтотОбъект.РазмерИндексацииПриПерезаключенииДоговора = ДокументОснование.РазмерИндексацииПриПерезаключенииДоговора;
	//---АК BARA 08.11.17 
	
	//+++ AK suvv 03.06.2018 ИП-00018425
	ЭтотОбъект.СрокУведомленияОПерезаключении = ДокументОснование.СрокУведомленияОПерезаключении;
	ЭтотОбъект.СрокУведомленияОДосрочномПогашении = ДокументОснование.СрокУведомленияОДосрочномРасторжении;
	ЭтотОбъект.ВывозТБО = ДокументОснование.ВывозТБО;
	ЭтотОбъект.ПериодичностьПредоставленияОтчетаОВыручке = ДокументОснование.ПериодичностьПредоставленияОтчетаОВыручке; 
	ЭтотОбъект.СогласиеНаСубаренду = ДокументОснование.СогласиеНаСубаренду;
	ЭтотОбъект.РазмерИндексацииПриПерезаключенииДоговора = ДокументОснование.РазмерИндексацииПриПерезаключенииДоговора;
	//--- AK suvv
	
	//+++ AK suvv 14.06.2018 ИП-00018763
	//попросили отключить автоматический расчет; возможно нужно будет вернуть
	//РассчитатьПеременнуюЧасть();
	ЗаполнитьВкладкуДинамикаАренды();
	//--- AK suvv
	
	//+++АК CISA 2018.09.27 ИП-00019931
	ЭтотОбъект.ТипДоговораАренды = ДокументОснование.ТипДоговораАренды;
	ЭтотОбъект.НаименованиеСобственникаОбъектаСубаренды = ДокументОснование.НаименованиеСобственникаОбъектаСубаренды;
	УстановитьВидимостьТипДоговорАренды(ЭлементыФормы.ТипДоговораАренды);
	//---АК CISA
	
КонецПроцедуры

Процедура ДокументОснованиеПриИзменении(Элемент)
	
	СтрокаСвойств = "Организация,Контрагент,ДоговорКонтрагента,ДатаЗаключенияДоговора,ДатаОкончанияДоговора";
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДокументОснование, СтрокаСвойств,); 
	//+++АК BARA 08.11.17   ИП-00017110
	ЭтотОбъект.РазмерИндексацииПриПерезаключенииДоговора = ДокументОснование.РазмерИндексацииПриПерезаключенииДоговора;
	//---АК BARA 08.11.17 
КонецПроцедуры

Процедура ДоговорАрендыПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ДокументОснование)
			И НЕ ДокументОснование.ДоговорКонтрагента = ДоговорКонтрагента Тогда
		ДокументОснование = Документы.ЗаключениеДоговораАренды.ПустаяСсылка();
	КонецЕсли;
	
	ОбъектАренды = ДоговорКонтрагента.ОбъектАренды;
	ОбъектАрендыОбработкаВыбора(Неопределено, ДоговорКонтрагента, Истина);
	
КонецПроцедуры

Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ДокументОснование)
			И НЕ ДокументОснование.Организация = Организация Тогда
		ДокументОснование = Документы.ЗаключениеДоговораАренды.ПустаяСсылка();
	КонецЕсли;

КонецПроцедуры

Процедура ДокументОснованиеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Документы.ЗаключениеДоговораАренды.ПолучитьФормуВыбора(, Элемент);
	ФормаВыбора.Отбор.Организация.Установить(Организация, ЗначениеЗаполнено(Организация));
	ФормаВыбора.Отбор.Контрагент.Установить(Контрагент, ЗначениеЗаполнено(Контрагент));
	ФормаВыбора.Отбор.ДоговорКонтрагента.Установить(ДоговорКонтрагента, ЗначениеЗаполнено(ДоговорКонтрагента));
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура ПриИзмененииУслуги(ТекущаяСтрока)
	
	Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.Количество) Тогда
		ТекущаяСтрока.Количество = ОбъектАренды.ЗначениеХарактеристики;
	КонецЕсли;
	
КонецПроцедуры

//////////////////////////////////////////////////////
// Постоянная часть



Процедура ПостояннаяЧастьАренднойПлатыПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ИтогоСумма = 0;
	Для Каждого СтрокаТЧ Из ПостояннаяЧастьАренднойПлаты Цикл
		ИтогоСумма = ИтогоСумма + Окр(ОбщиеПроцедуры.ПолучитьСтавку(СтрокаТЧ.Ставка) * ?(СтрокаТЧ.СпособНачисления.ЗаОбъектВЦелом, 1, СтрокаТЧ.Количество), 2);
	КонецЦикла;
	ЭлементыФормы.ПостояннаяЧастьАренднойПлаты.Колонки.Сумма.ТекстПодвала = ОбщегоНазначения.ФорматСумм(ИтогоСумма);
	
КонецПроцедуры

Процедура ПостояннаяЧастьАренднойПлатыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ТекущаяСтрока = ЭлементыФормы.ПостояннаяЧастьАренднойПлаты.ТекущаяСтрока;
		Если НЕ Копирование Тогда
			ТекущаяСтрока.Ставка = 0;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры



Процедура ПостояннаяЧастьАренднойПлатыСпособНачисленияПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ПостояннаяЧастьАренднойПлаты.ТекущаяСтрока;
	Если ТекущаяСтрока.НомерСтроки = 1
			И мВалютаРегламентированногоУчета <> ВалютаСпособаНачисления Тогда
		ВалютаСпособаНачисления = мВалютаРегламентированногоУчета;
		ЗаполнитьКурсВалютыПоУмолчанию();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПостояннаяЧастьАренднойПлатыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Услуга) Тогда
		ДанныеСтроки.Услуга = Константы.УслугаАренда.Получить();
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДанныеСтроки.СпособНачисления) Тогда
		ДанныеСтроки.СпособНачисления = Константы.ОсновнойСпособНачисленияАрендойПлаты.Получить();
	КонецЕсли;
	
	ОформлениеСтроки.Ячейки.Сумма.УстановитьТекст(ОбщегоНазначения.ФорматСумм(ОбщиеПроцедуры.ПолучитьСтавку(ДанныеСтроки.Ставка) * ?(ДанныеСтроки.СпособНачисления.ЗаОбъектВЦелом, 1, ДанныеСтроки.Количество)));
	
	Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Валюта) Тогда
		ОформлениеСтроки.Ячейки.Валюта.УстановитьТекст("Осн.");	
		ОформлениеСтроки.Ячейки.Валюта.ЦветТекста = WebЦвета.Серый;	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПостояннаяЧастьАренднойПлатыУслугаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекСтрока = ЭлементыФормы.ПостояннаяЧастьАренднойПлаты.ТекущаяСтрока;
	ОбщиеПроцедуры.ВыборУслуги(ТекСтрока, Истина);
	ПриИзмененииУслуги(ТекСтрока);
	
КонецПроцедуры

Процедура ПостояннаяЧастьАренднойПлатыУслугаПриИзменении(Элемент)
		
	ТекущаяСтрока = ЭлементыФормы.ПостояннаяЧастьАренднойПлаты.ТекущаяСтрока;
	ПриИзмененииУслуги(ТекущаяСтрока);
	
КонецПроцедуры

Процедура ПостояннаяЧастьАренднойПлатыУслугаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Значение = ОбщиеПроцедуры.ПолучитьСписокУслугДляПодбора(Текст, Истина);
	
КонецПроцедуры

//////////////////////////////////////////////////////
// Переменная часть

Процедура ПеременнаяЧастьАренднойПлатыСпособНачисленияПриИзменении(Элемент)
	
	Если ПостояннаяЧастьАренднойПлаты.Количество() = 0 Тогда
		ТекущаяСтрока = ЭлементыФормы.ПеременнаяЧастьАренднойПлаты.ТекущаяСтрока;
		Если ТекущаяСтрока.НомерСтроки = 1
				И мВалютаРегламентированногоУчета <> ВалютаСпособаНачисления Тогда
			ВалютаСпособаНачисления = мВалютаРегламентированногоУчета;
			ЗаполнитьКурсВалютыПоУмолчанию();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПеременнаяЧастьАренднойПлатыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если НЕ ЗначениеЗаполнено(ДанныеСтроки.СпособНачисления) Тогда
		ДанныеСтроки.СпособНачисления = Константы.ОсновнойСпособНачисленияАрендойПлаты.Получить();
	КонецЕсли;
	
	ОформлениеСтроки.Ячейки.Сумма.УстановитьТекст(ОбщегоНазначения.ФорматСумм(ОбщиеПроцедуры.ПолучитьСтавку(ДанныеСтроки.Ставка) * ?(ДанныеСтроки.СпособНачисления.ЗаОбъектВЦелом, 1, ДанныеСтроки.Количество)));

	Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Валюта) Тогда
		ОформлениеСтроки.Ячейки.Валюта.УстановитьТекст("Осн.");	
		ОформлениеСтроки.Ячейки.Валюта.ЦветТекста = WebЦвета.Серый;	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПеременнаяЧастьАренднойПлатыУслугаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекСтрока = ЭлементыФормы.ПеременнаяЧастьАренднойПлаты.ТекущаяСтрока;
	ОбщиеПроцедуры.ВыборУслуги(ТекСтрока, Ложь);
	ПриИзмененииУслуги(ТекСтрока);
	
КонецПроцедуры

Процедура ПеременнаяЧастьАренднойПлатыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		ТекущаяСтрока = ЭлементыФормы.ПеременнаяЧастьАренднойПлаты.ТекущаяСтрока;
		ТекущаяСтрока.КоэффициентОтнесенияСчетчика = 1;
		Если НЕ Копирование Тогда
			ТекущаяСтрока.Ставка = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры



Процедура ПеременнаяЧастьАренднойПлатыУслугаПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ПеременнаяЧастьАренднойПлаты.ТекущаяСтрока;
	ПриИзмененииУслуги(ТекущаяСтрока);
	
КонецПроцедуры

Процедура ПеременнаяЧастьАренднойПлатыУслугаОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	Значение = ОбщиеПроцедуры.ПолучитьСписокУслугДляПодбора(Текст, Ложь);
	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ОсновныеДействияФормыНастройка(Кнопка)

	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(Ложь, ЭтотОбъект.Ссылка, ЭтотОбъект);

КонецПроцедуры

Процедура ОбъектАрендыОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Для Каждого СтрокаТЧ Из ЭтотОбъект.ПостояннаяЧастьАренднойПлаты Цикл
		СтрокаТЧ.Количество = ВыбранноеЗначение.ЗначениеХарактеристики;
		ОбновитьСтавку(СтрокаТЧ, ВыбранноеЗначение, СтрокаТЧ.Услуга);
	КонецЦикла;
	Для Каждого СтрокаТЧ Из ЭтотОбъект.ПеременнаяЧастьАренднойПлаты Цикл
		СтрокаТЧ.Количество = ВыбранноеЗначение.ЗначениеХарактеристики;
		ОбновитьСтавку(СтрокаТЧ, ВыбранноеЗначение, СтрокаТЧ.Услуга);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьСтавку(ТекСтрока, ОбъектАренды, Услуга)
	
	ПараметрыОтбора = Новый Структура("ОбъектАренды, Услуга", ОбъектАренды, Услуга);
	СтруктураЗаписи = РегистрыСведений.Ставки.ПолучитьПоследнее(МоментВремени(), ПараметрыОтбора);
	ТекСтрока.Ставка = СтруктураЗаписи.Ставка;
	ТекСтрока.СпособНачисления = СтруктураЗаписи.СпособНачисления;
	
КонецПроцедуры

Процедура ПостояннаяЧастьАренднойПлатыУслугаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекСтрока = ЭлементыФормы.ПостояннаяЧастьАренднойПлаты.ТекущаяСтрока;
	ТекСтрока.Количество = ОбъектАренды.ЗначениеХарактеристики;
	ОбновитьСтавку(ТекСтрока, ВыбранноеЗначение, ТекСтрока.Услуга);
	
КонецПроцедуры

Процедура ПеременнаяЧастьАренднойПлатыУслугаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекСтрока = ЭлементыФормы.ПеременнаяЧастьАренднойПлаты.ТекущаяСтрока;
	ТекСтрока.Количество = ОбъектАренды.ЗначениеХарактеристики;
	ОбновитьСтавку(ТекСтрока, ВыбранноеЗначение, ТекСтрока.Услуга);
	
КонецПроцедуры

Процедура СпособРасчетаЗалогаПриИзменении(Элемент)
	
	УстановитьВидимость();
	
	//+++АК sils 23.10.2018 ИП-00020193
	РассчитатьСуммуДепозитаМСФО();
	//---АК
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЭтотОбъект.Дата < ЭтотОбъект.ДатаЗаключенияДоговора Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Дате документа должна быть позднее даты заключения договора");
		Отказ = Истина;
	КонецЕсли;
	
	Если ДокументОснование.ВидОперации = Перечисления.ВидыОперацийДоговоровАренды.САрендодателем
			И ДоговорКонтрагента.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Для арендодателя необходимо выбрать договор с поставщиком");
		Отказ = Истина;
	ИначеЕсли ДокументОснование.ВидОперации = Перечисления.ВидыОперацийДоговоровАренды.САрендатором
			И ДоговорКонтрагента.ВидДоговора <> Перечисления.ВидыДоговоровКонтрагентов.СПокупателем Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Для арендодателя необходимо выбрать договор с покупателем");
		Отказ = Истина;
	КонецЕсли;	
	Если ЭтотОбъект.ПостояннаяЧастьАренднойПлаты.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнена постоянная часть арендной платы");
		Отказ = Истина;
	КонецЕсли;
	
	Если ДоговорКонтрагента.ТипДоговора <> Перечисления.ТипыДоговоровСПоставщиком.Аренда
			И ДоговорКонтрагента.ТипДоговора <> Перечисления.ТипыДоговоровСПоставщиком.Субаренда Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Договор не является договором аренды!");
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ПериодичностьПредоставленияОтчетаОВыручке) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Необходимо заполнить реквизит ""Предоставлять отчет о выручке""!");
		Отказ = Истина;
	КонецЕсли;
	
	Если ДоговорКонтрагента.УплачиватьНДФЛЗаКонтрагента Тогда
		Для Каждого СтрокаПЧ Из ПостояннаяЧастьАренднойПлаты Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаПЧ.НДФЛ)
					И ЗначениеЗаполнено(СтрокаПЧ.Ставка) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("В договоре указан признак Уплачивать НДФЛ за контрагента, но НДФЛ указан не во всех строках постоянной части аренды");
				Отказ = Истина;
			КонецЕсли;	
		КонецЦикла;
		
		Для Каждого СтрокаПЧ Из ПеременнаяЧастьАренднойПлаты Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаПЧ.НДФЛ)
					И ЗначениеЗаполнено(СтрокаПЧ.Ставка) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("В договоре указан признак Уплачивать НДФЛ за контрагента, но НДФЛ указан не во всех строках переменной части аренды");
				Отказ = Истина;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	
	//+++АК sils 15.08.2017 ИП-00014584
	//Если есть стимул, проверяем заполнение дат.
	Если НЕ ТипСтимулаАренды.Пустая() Тогда
		//+++АК sils 22.08.2018 ИП-00014584.04
		//Если НЕ ЗначениеЗаполнено(ДатаНачалаСтимула) Тогда
		//	ОбщегоНазначения.СообщитьОбОшибке("Не заполнена дата начала стимула!");
		//	Отказ = Истина;
		//КонецЕсли;
		//Если НЕ ЗначениеЗаполнено(ДатаОкончанияСтимула) Тогда
		//	ОбщегоНазначения.СообщитьОбОшибке("Не заполнена дата окончания стимула!");
		//	Отказ = Истина;
		//КонецЕсли;
		//---АК
		Если ЗначениеЗаполнено(ДатаНачалаСтимула) И ЗначениеЗаполнено(ДатаОкончанияСтимула) Тогда
			Если ДатаНачалаСтимула > ДатаОкончанияСтимула Тогда 
				ОбщегоНазначения.СообщитьОбОшибке("Введены неверные даты стимула!");
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//---АК
	
	//+++АК CISA 2018.09.26 ИП-00019931
	Если НЕ ЗначениеЗаполнено(ТипДоговораАренды) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Необходимо заполнить реквизит ""Тип договора аренды""!");
		Отказ = Истина;
	ИначеЕсли ЭтотОбъект.ТипДоговораАренды = Перечисления.ТипыДоговоровАренды.СнимаемВСубаренду И НЕ ЗначениеЗаполнено(НаименованиеСобственникаОбъектаСубаренды) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Необходимо заполнить реквизит ""Наименование собственника объекта субаренды""!");
		Отказ = Истина;		
	КонецЕсли;	
	//---АК CISA

КонецПроцедуры


Процедура СозданПоУсловиямДоговораПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ПостояннаяЧастьАренднойПлатыСтавкаПриИзменении(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.ПостояннаяЧастьАренднойПлаты.ТекущиеДанные;
	
	Если ДоговорКонтрагента.УплачиватьНДФЛЗаКонтрагента Тогда
		//+++АК pozm 11.07.17 ИП-00014695
		//ТекущиеДанные.НДФЛ = ТекущиеДанные.Ставка * 13 / 87;	
		ТекущиеДанные.НДФЛ = ТекущиеДанные.Ставка * ?(Контрагент.НеРезидент, 30 / 70, 13 / 87);
		//---АК pozm 11.07.17 ИП-00014695
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПеременнаяЧастьАренднойПлатыСтавкаПриИзменении(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.ПеременнаяЧастьАренднойПлаты.ТекущиеДанные;
	
	Если ДоговорКонтрагента.УплачиватьНДФЛЗаКонтрагента Тогда
		//+++АК pozm 11.07.17 ИП-00014695
		//ТекущиеДанные.НДФЛ = ТекущиеДанные.Ставка * 13 / 87;	
		ТекущиеДанные.НДФЛ = ТекущиеДанные.Ставка * ?(Контрагент.НеРезидент, 30 / 70, 13 / 87);
		//---АК pozm 11.07.17 ИП-00014695
	КонецЕсли;
	
КонецПроцедуры

Процедура ПериодичностьПредоставленияОтчетаОВыручкеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элемент.СписокВыбора.Очистить();
	Элемент.СписокВыбора.Добавить(Перечисления.Периодичность.Нет);
	Элемент.СписокВыбора.Добавить(Перечисления.Периодичность.Месяц);
	Элемент.СписокВыбора.Добавить(Перечисления.Периодичность.Квартал);
	Элемент.СписокВыбора.Добавить(Перечисления.Периодичность.Год);
	
КонецПроцедуры

Процедура ДействияФормыИсторияВерсий(Кнопка)
	
	ИсторияИзменений = Отчеты.ИсторияИзмененийОбъектов.Создать();
	ИсторияИзменений.СсылкаНаОбъект = ЭтотОбъект.Ссылка;
	
	Форма = ИсторияИзменений.ПолучитьФорму("ФормаОтчета");
	Форма.СформироватьТаблицуВерсий();
	Форма.Открыть();

КонецПроцедуры

Процедура ЕстьСтимулыАрендыПриИзменении(Элемент)
	
	Если Элемент.Значение
			И ЭтотОбъект.ТипСтимулаАренды.Пустая() Тогда
		ЭтотОбъект.ТипСтимулаАренды 			= Перечисления.АК_ТипыЛьготПоАренде.Каникулы;
	ИначеЕсли Элемент.Значение = Ложь
			И НЕ ЭтотОбъект.ТипСтимулаАренды.Пустая() Тогда
		ЭтотОбъект.ТипСтимулаАренды 			= Перечисления.АК_ТипыЛьготПоАренде.ПустаяСсылка();
		ЭтотОбъект.КоличествоДнейСтимулаАренды 	= 0;
	КонецЕсли;
	
	УстановитьДоступностьСтимулы();
	
КонецПроцедуры

//+++АК sils 15.08.2017 ИП-00014584
Процедура ДатаНачалаСтимулаПриИзменении(Элемент)
	
	Если ДатаНачалаСтимула = Дата("00010101000000") Тогда
		Возврат;
	КонецЕсли;
	Если ДатаЗаключенияДоговора = Дата("00010101000000") Тогда
		Возврат;
	КонецЕсли;
	
	Если ДатаНачалаСтимула < ДатаЗаключенияДоговора Тогда
		Сообщить("Дата начала действия стимула не может быть раньше даты начала действия договора!");
		ДатаНачалаСтимула = ДатаЗаключенияДоговора;
	ИначеЕсли ДатаНачалаСтимула > ДатаОкончанияДоговора Тогда
		Сообщить("Дата начала действия стимула не может быть позже даты окончания действия договора!");
		ДатаНачалаСтимула = ДатаЗаключенияДоговора;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДатаОкончанияСтимулаПриИзменении(Элемент)
	
	Если ДатаОкончанияСтимула = Дата("00010101000000") Тогда
		Возврат;
	КонецЕсли;
	Если ДатаОкончанияДоговора = Дата("00010101000000") Тогда
		Возврат;
	КонецЕсли;
	
	Если ДатаОкончанияДоговора < ДатаОкончанияСтимула Тогда
		Сообщить("Дата окончания действия стимула не может быть позже даты окончания действия договора!");
		ДатаНачалаСтимула = ДатаЗаключенияДоговора;
	ИначеЕсли ДатаЗаключенияДоговора > ДатаОкончанияСтимула Тогда
		Сообщить("Дата окончания действия стимула не может быть раньше даты начала действия договора!");
		ДатаНачалаСтимула = ДатаЗаключенияДоговора;
	КонецЕсли;
	
КонецПроцедуры
//---АК

//+++ AK suvv 03.06.2018 ИП-00018425
Процедура ЗаполнитьВкладкуДинамикаАренды()
	
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ДинамикаАренднойСтавкиСрезПервых.АренднаяСтавка, 0) КАК ИсходнаяАренднаяСтавка,
	|	ЕСТЬNULL(ДинамикаАренднойСтавкиСрезПервых.ПеременнаяЧасть, 0) КАК ИсходнаяПеременнаяЧасть,
	|	ЕСТЬNULL(ДинамикаАренднойСтавкиСрезПервых.РазмерИндексацииПриПерезаключенииДоговора, 0) КАК ИсходныйРазмерИндексацииПриПерезаключенииДоговора,
	|	ЕСТЬNULL(ДинамикаАренднойСтавкиСрезПоследних.АренднаяСтавка, 0) КАК ПредыдущаяАренднаяСтавка,
	|	ЕСТЬNULL(ДинамикаАренднойСтавкиСрезПоследних.РазмерИндексацииПриПерезаключенииДоговора, 0) КАК ПредыдущийРазмерИндексацииПриПерезаключенииДоговора,
	|	ЕСТЬNULL(ДинамикаАренднойСтавкиСрезПоследних.ПеременнаяЧасть, 0) КАК ПредыдущаяПеременнаяЧасть
	|ПОМЕСТИТЬ ВТ_ДинамикаАренды
	|ИЗ
	|	РегистрСведений.ДинамикаАренднойСтавки.СрезПервых(
	|			,
	|			Контрагент = &Контрагент
	|				И ОбъектАренды = &ОбъектАренды
	|				И Регистратор <> &ТекущийДокумент) КАК ДинамикаАренднойСтавкиСрезПервых,
	|	РегистрСведений.ДинамикаАренднойСтавки.СрезПоследних(
	|			&ДатаДокумента,
	|			Контрагент = &Контрагент
	|				И ОбъектАренды = &ОбъектАренды
	|				И Регистратор <> &ТекущийДокумент) КАК ДинамикаАренднойСтавкиСрезПоследних
	|ГДЕ
	|	ДинамикаАренднойСтавкиСрезПервых.Период < &ДатаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДинамикаАренды.ИсходнаяАренднаяСтавка,
	|	ВТ_ДинамикаАренды.ИсходнаяПеременнаяЧасть,
	|	ВТ_ДинамикаАренды.ИсходныйРазмерИндексацииПриПерезаключенииДоговора,
	|	ВТ_ДинамикаАренды.ПредыдущаяАренднаяСтавка,
	|	ВТ_ДинамикаАренды.ПредыдущийРазмерИндексацииПриПерезаключенииДоговора,
	|	ВТ_ДинамикаАренды.ПредыдущаяПеременнаяЧасть
	|ИЗ
	|	ВТ_ДинамикаАренды КАК ВТ_ДинамикаАренды";
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ОбъектАренды", ОбъектАренды);
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ИсходнаяАренднаяСтавка = Выборка.ИсходнаяАренднаяСтавка;
		ПредыдущаяАренднаяСтавка = Выборка.ПредыдущаяАренднаяСтавка;
		ИсходнаяПеременнаяЧасть = Выборка.ИсходнаяПеременнаяЧасть;
		ПредыдущаяПеременнаяЧасть = Выборка.ПредыдущаяПеременнаяЧасть;
		ПроцентПовышенияПеременнойЧасти = Окр(?(Выборка.ПредыдущаяПеременнаяЧасть = 0, 0, ПеременнаяЧасть/Выборка.ПредыдущаяПеременнаяЧасть*100 - 100), 2);
		ПроцентПревышенияИндексации = Окр(?(Выборка.ПредыдущийРазмерИндексацииПриПерезаключенииДоговора = 0, 0, РазмерИндексацииПриПерезаключенииДоговора/Выборка.ПредыдущийРазмерИндексацииПриПерезаключенииДоговора * 100 - 100),2);
	КонецЕсли;
		
	ЭтаФорма.Модифицированность = Ложь;
	
КонецПроцедуры //--- AK suvv

//+++ AK suvv 03.06.2018 ИП-00018425
Процедура РассчитатьПеременнуюЧасть()

	ПеременнаяЧасть = 0;
	СтрокиПоПеременнойЧасти = ПеременнаяЧастьАренднойПлаты.НайтиСтроки(Новый Структура("Услуга", Справочники.Номенклатура.НайтиПоКоду("000000253")));
	Для Каждого Стр из СтрокиПоПеременнойЧасти Цикл 
		//+++ AK suvv 14.06.2018 ИП-00018763
		Если Стр.Аванс Тогда 
			Продолжить;
		КонецЕсли;
		//--- AK suvv
		ПеременнаяЧасть = ПеременнаяЧасть + Стр.Ставка;
	КонецЦикла;

КонецПроцедуры //--- AK suvv

//+++ AK suvv 03.06.2018 ИП-00018425
Процедура ПеременнаяЧастьАренднойПлатыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	//попросили отключить автоматический расчет; возможно нужно будет вернуть
	//РассчитатьПеременнуюЧасть();
	
КонецПроцедуры //--- AK suvv

//+++ AK suvv 03.06.2018 ИП-00018425
Процедура ПревышениеОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры //--- AK suvv

//+++АК sils 11.07.2018 ИП-00014584.02
Процедура ОсновныеДействияФормыПересчитатьСтимулы(Кнопка)
	Если не УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.РазрешитьПересчитыватьСтимулы, Ложь) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Отсутствует право на пересчет стимулов! Операция не выполнена.", );
		Возврат;
	КонецЕсли;
	//+++АК sils 22.08.2018 ИП-00014584.04
	//Если ЭтотОбъект.ТипСтимулаАренды <> Перечисления.АК_ТипыЛьготПоАренде.ПустаяСсылка() Тогда
	//	Возврат;
	//КонецЕсли;
	//---АК
	
	РасчитатьСтимулы();
	УстановитьСтатусРасчетаСтимула();
КонецПроцедуры

//+++АК sils 15.07.2018 ИП-00014584.02
Процедура УстановитьСтатусРасчетаСтимула()
	//+++АК sils 22.08.2018 ИП-00014584.04
	//Если ЭтотОбъект.ТипСтимулаАренды = Перечисления.АК_ТипыЛьготПоАренде.ПустаяСсылка() Тогда
	//---АК	
		Если ЗначениеЗаполнено(ЭтотОбъект.ДокументСтимула) Тогда
			Если ТипЗнч(ЭтотОбъект.ДокументСтимула) = Тип("ДокументСсылка.ДополнительноеСоглашение") Тогда
				ЭлементыФормы.СтатусРасчетаСтимула.Заголовок = "Стимул расчитан для доп.соглашения №" + СокрЛП(ЭтотОбъект.ДокументСтимула.Номер);
			ИначеЕсли ТипЗнч(ЭтотОбъект.ДокументСтимула) = Тип("ДокументСсылка.ЗаключениеДоговораАренды") Тогда
				ЭлементыФормы.СтатусРасчетаСтимула.Заголовок = "Стимул расчитан для закл.договора аренды №" + СокрЛП(ЭтотОбъект.ДокументСтимула.Номер);
			КонецЕсли;
		Иначе
			ЭлементыФормы.СтатусРасчетаСтимула.Заголовок = "";
		КонецЕсли;
	//+++АК sils 22.08.2018 ИП-00014584.04	
	//КонецЕсли;
	//---АК
КонецПроцедуры

//+++АК sils 15.07.2018 ИП-00014584.02
Процедура СтатусРасчетаСтимулаНажатие(Элемент)
	Если ЗначениеЗаполнено(ЭтотОбъект.ДокументСтимула) Тогда
		ОткрытьЗначение(ЭтотОбъект.ДокументСтимула);
	КонецЕсли;
КонецПроцедуры

//+++АК CISA 2018.09.26 ИП-00019931
Процедура ТипДоговораАрендыПриИзменении(Элемент)
	УстановитьВидимостьТипДоговорАренды(Элемент);
КонецПроцедуры

//+++АК CISA 2018.09.27 ИП-00019931
Процедура УстановитьВидимостьТипДоговорАренды(Элемент)
	Если Элемент.Значение = Перечисления.ТипыДоговоровАренды.СнимаемВСубаренду Тогда
		ЭлементыФормы.НаименованиеСобственникаОбъектаСубаренды.Видимость = Истина;
		ЭлементыФормы.НадписьНаименованиеСобственникаОбъектаСубаренды.Видимость = Истина;
	Иначе
		ЭлементыФормы.НаименованиеСобственникаОбъектаСубаренды.Значение = "";
		ЭлементыФормы.НаименованиеСобственникаОбъектаСубаренды.Видимость = Ложь;
		ЭлементыФормы.НадписьНаименованиеСобственникаОбъектаСубаренды.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

//+++АК sils 23.10.2018 ИП-00020193
Процедура ВалютаДепозитаПриИзменении(Элемент)
	РассчитатьСуммуДепозитаМСФО();
КонецПроцедуры

//+++АК sils 23.10.2018 ИП-00020193
Процедура ВалютаДепозита2ПриИзменении(Элемент)
	РассчитатьСуммуДепозитаМСФО();
КонецПроцедуры

//+++АК sils 23.10.2018 ИП-00020193
Процедура СуммаЗалогаБезналичныеПриИзменении(Элемент)
	РассчитатьСуммуДепозитаМСФО();
КонецПроцедуры

//+++АК sils 23.10.2018 ИП-00020193
Процедура СуммаЗалогаНаличныеПриИзменении(Элемент)
	РассчитатьСуммуДепозитаМСФО();
КонецПроцедуры

//+++АК sils 23.10.2018 ИП-00020193
Процедура ВалютаСпособаНачисленияПриИзменении(Элемент)
	РассчитатьСуммуДепозитаМСФО();
КонецПроцедуры

//+++АК sils 23.10.2018 ИП-00020193
Процедура Валюта2СпособаНачисленияПриИзменении(Элемент)
	РассчитатьСуммуДепозитаМСФО();
КонецПроцедуры

//+++АК sils 23.10.2018 ИП-00020193
Процедура НижняяГраницаПриИзменении(Элемент)
	РассчитатьСуммуДепозитаМСФО();
КонецПроцедуры

//+++АК sils 23.10.2018 ИП-00020193
Процедура ВерхняяГраницаПриИзменении(Элемент)
	РассчитатьСуммуДепозитаМСФО();
КонецПроцедуры

Элементыформы.ПостояннаяЧастьАренднойПлаты.Колонки.Валюта.ЭлементУправления.СписокВыбора.Добавить(Константы.ВалютаРегламентированногоУчета.Получить());
Элементыформы.ПеременнаяЧастьАренднойПлаты.Колонки.Валюта.ЭлементУправления.СписокВыбора.Добавить(Константы.ВалютаРегламентированногоУчета.Получить());
