
&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеДатПроизводства(ДатаПроизводстваНач, ДатаПроизводстваКон)
Перем ДатыПроизводстваСтр;
	
	Если ДатаПроизводстваНач = Дата(1,1,1) И ДатаПроизводстваКон = Дата(1,1,1) Тогда
		ДатыПроизводстваСтр = "все";
	ИначеЕсли ДатаПроизводстваНач = Дата(1,1,1) Тогда
		ДатыПроизводстваСтр = "все, по " + Формат(ДатаПроизводстваКон, "ДФ=dd.MM.yyyy");
	ИначеЕсли ДатаПроизводстваКон = Дата(1,1,1) Тогда
		ДатыПроизводстваСтр = "все, с " + Формат(ДатаПроизводстваНач, "ДФ=dd.MM.yyyy");
	ИначеЕсли ДатаПроизводстваНач = ДатаПроизводстваКон Тогда
		ДатыПроизводстваСтр = Формат(ДатаПроизводстваНач, "ДФ=dd.MM.yyyy");
	Иначе
		ДатыПроизводстваСтр = Формат(ДатаПроизводстваНач, "ДФ=dd.MM.yyyy") + "-" + Формат(ДатаПроизводстваКон, "ДФ=dd.MM.yyyy");
	КонецЕсли;
	
	Возврат "Даты производства: " + ДатыПроизводстваСтр;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПричиныСписания()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТипыОперацийМагазина.Наименование КАК Наименование,
		|	ТипыОперацийМагазина.code_operation КАК code_operation
		|ИЗ
		|	Справочник.ТипыОперацийМагазина КАК ТипыОперацийМагазина
		|ГДЕ
		|	ТипыОперацийМагазина.table_operation = ""td_move""
		|	И ТипыОперацийМагазина.field_operation = ""id_reason""
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	""Всё хорошо"",
		|	NULL
		|
		|УПОРЯДОЧИТЬ ПО
		|	code_operation");
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Наименование");
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаданиеТехнологаНаДегустацию = Объект.ЗаданиеТехнологаНаДегустацию;
	ДатаДок = ЗаданиеТехнологаНаДегустацию.Дата;
	НомерДок = ЗаданиеТехнологаНаДегустацию.Номер;
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ЗаданиеТехнологаНаДегустацию, "Комментарий,СканироватьШтрихкод,ДатаПроизводстваНач,ДатаПроизводстваКон,ЕдиницаИзмерения,КомментарийОбязателен"); 
	Элементы.ОценкиВвестиШтрихКод.Видимость = СканироватьШтрихкод;
	Если НЕ СканироватьШтрихкод Тогда
		Элементы.КнопкаДобавлениеОценки.ЦветТекста = Новый Цвет();
		Элементы.КнопкаДобавлениеОценки.Заголовок = "Добавить оценку";
		Элементы.КнопкаДобавлениеОценки.Картинка = БиблиотекаКартинок.ДобавитьЭлементСписка;
	КонецЕсли;
	//Элементы.ДекорацияДатыПроизводства.Заголовок = ПредставлениеДатПроизводства(ДатаПроизводстваНач, ДатаПроизводстваКон);
	ЭтоШтучныйТовар = НЕ ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.Номенклатура, "Весовой");
	
	ОтветственныеЛица.Загрузить(Документы.ЗаданиеТехнологаНаДегустацию.ВернутьТЗнОтветственных(ЗаданиеТехнологаНаДегустацию));
	
	ТолькоПросмотр = Объект.Закрыта ИЛИ Объект.Проведен ИЛИ (ЗаданиеТехнологаНаДегустацию.Проведен ИЛИ ЗаданиеТехнологаНаДегустацию.ПометкаУдаления);
	
	ЗадачаНаРазработке = (РегистрыСведений.ПараметрыРаботыССоцСетями.ПолучитьЗначениеПараметра(, "ЗадачаТехнологаНаДегустациюНаРазработке") = Истина);
	Если ЗадачаНаРазработке Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Если НЕ ТолькоПросмотр Тогда
		Элементы.ОценкиКомментарий.СписокВыбора.ЗагрузитьЗначения(ПолучитьПричиныСписания());
	КонецЕсли;
	
	//+++АК SHEP 20170620: добавляем вложения
	КаталогХраненияФайлов = Документы.ЗаданиеТехнологаНаДегустацию.ПолучитьКаталогХраненияФайлов(ЗаданиеТехнологаНаДегустацию);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЗаданиеТехнологаНаДегустациюВложения.НомерСтроки КАК НомерСтроки,
		|	ЗаданиеТехнологаНаДегустациюВложения.ИмяФайла,
		|	ЗаданиеТехнологаНаДегустациюВложения.ОтносительноеИмяФайла
		|ИЗ
		|	Документ.ЗаданиеТехнологаНаДегустацию.Вложения КАК ЗаданиеТехнологаНаДегустациюВложения
		|ГДЕ
		|	ЗаданиеТехнологаНаДегустациюВложения.Ссылка = &ДокументОснование
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки");
	Запрос.УстановитьПараметр("ДокументОснование", ЗаданиеТехнологаНаДегустацию);
	
	Вложения.Загрузить(Запрос.Выполнить().Выгрузить());
	Если Вложения.Количество() > 0 Тогда
		Элементы.СтраницаВложения.Заголовок = "Вложения (" + Вложения.Количество() + ")";
	КонецЕсли;
	//---АК SHEP 20170620
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НетТовараДанногоПроизводителя = Истина;
	
	Если ЗадачаНаРазработке Тогда
		Предупреждение("По данному функционалу проводятся сервисные работы,
			|попробуйте работать с данным документом чуть позже!");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// если нет данного товара, проверки не выполняем
	Если НетТовараДанногоПроизводителя Тогда Возврат; КонецЕсли;
	
	Для Каждого СтрокаОценки Из Объект.Оценки Цикл
		
		ТекНомерСтроки = СтрокаОценки.НомерСтроки;
		
		Если СтрокаОценки.Оценка = 0 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "В строке №" + ТекНомерСтроки + " не заполнена оценка!";
			Сообщение.Поле = "Объект.Оценки[" + (ТекНомерСтроки - 1) + "].Оценка";
			Сообщение.УстановитьДанные(Объект);
			Сообщение.Сообщить();
			Отказ = Истина;
			Возврат;
			
		ИначеЕсли СтрокаОценки.Количество = 0 Тогда
			
			Если Вопрос("В строке №" + ТекНомерСтроки + " не заполнено количество для списания!
			  |Провести по этой строке без количества?", РежимДиалогаВопрос.ДаНетОтмена,, КодВозвратаДиалога.Нет, "Задача контролёра качества на дегустацию") <> КодВозвратаДиалога.Да Тогда
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			
		ИначеЕсли ЭтоШтучныйТовар И СтрокаОценки.Количество <> Цел(СтрокаОценки.Количество) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Строка №" + ТекНомерСтроки + ": для штучного товара нужно указывать целое количество (штук)!",
				Объект, "Объект.Оценки[" + (ТекНомерСтроки - 1) + "].Количество",, Отказ);
			Возврат;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ВнешнееСобытие(Источник, Событие, Данные)
Перем ПерваяСтрока;
	
	Если Источник = "KeyboardHook" И Данные = "00122" И НЕ ШтрихКодОбработанФормой Тогда
		
		ШтрихКодОбработанФормой = Истина;
		Если НЕ СканироватьШтрихкод Тогда Возврат; КонецЕсли;
		
		ШтрихКод = ОткрытьФормуМодально("ОбщаяФорма.ФормаВводаШтрихкода");
		ШтрихКодОбработанФормой = Истина;
		Если НЕ ЗначениеЗаполнено(ШтрихКод) Тогда Возврат; КонецЕсли;
		
		СтруктураДанных = ВнешниеДанные.СчитатьДанныеПоШтрихКоду(ШтрихКод);
		Если Объект.Номенклатура <> СтруктураДанных.Номенклатура Тогда
			ОшибкаСтрокой = "Данный товар по этой задаче технолога не надо оценивать!";
		ИначеЕсли Объект.ХарактеристикаНоменклатуры <> СтруктураДанных.Характеристика Тогда
			ОшибкаСтрокой = "Данного производителя по этой задаче технолога не надо оценивать!";
		Иначе
			ШтрихКодОтсканирован = Истина;
		КонецЕсли;
		
		Если ПустаяСтрока(ОшибкаСтрокой) Тогда
			// разрешаем редактирование
			НетТовараДанногоПроизводителя = Ложь;
			ТекущийЭлемент = Элементы.Оценки;
			Если ТекущийЭлемент.ТекущийЭлемент.Имя <> "ОценкиОценка" Тогда ТекущийЭлемент.ТекущийЭлемент = Элементы.ОценкиДатаПроизводства; КонецЕсли;
			НоваяСтрокаТЧ = Объект.Оценки.Добавить();
			ТекущийЭлемент.ТекущаяСтрока = НоваяСтрокаТЧ.ПолучитьИдентификатор();
			ТекущийЭлемент.ИзменитьСтроку();
		Иначе
			Предупреждение(ОшибкаСтрокой);
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиШтрихКод(Команда)
	ШтрихКодОбработанФормой = Ложь;
	ВнешнееСобытие("KeyboardHook", "KeyboardHook", "00122");
КонецПроцедуры

&НаКлиенте
Процедура ДобавлениеОценки(Команда)
	
	Если НЕ СканироватьШтрихкод Тогда
		ТекущаяСтрока = Объект.Оценки.Добавить().ПолучитьИдентификатор();
		ТекущийЭлемент = Элементы.Оценки;
		ТекущийЭлемент.ТекущаяСтрока = ТекущаяСтрока;
		ТекущийЭлемент.ИзменитьСтроку();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОценкиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	// для нулевого кол-ва не проверяем дату производства
	ТекНомерСтроки = ТекущиеДанные.НомерСтроки;
	
	Если ТекущиеДанные.Количество = 0 Тогда Возврат;
	ИначеЕсли ТекущиеДанные.Количество < 0 Тогда
		Элемент.ТекущийЭлемент = Элементы.ОценкиКоличество;
        Сообщение = Новый СообщениеПользователю();
        Сообщение.Текст = "Количество не может быть меньше нуля!";
        Сообщение.Поле 	= "Объект.Оценки[" + (ТекНомерСтроки - 1) + "].Количество";
        Сообщение.КлючДанных = Объект.Ссылка;
        Сообщение.Сообщить();
        Отказ = Истина;
		Возврат;
	КонецЕсли;
	//---АК SHEP 20160826
	
	ОшибкаДатыПроизводства = Ложь;
	ТекДатаПроизводства = ТекущиеДанные.ДатаПроизводства;
	
	//ТекстОшибки = "В строке №" + ТекНомерСтроки + " дата производства не соответствует датам производства (с..по)";
	ТекстОшибки = "Строка №" + ТекНомерСтроки + ": Продукцию с этой датой производства дегустировать по этой задаче не надо.
		|Верни товар на полку, а в эту строчку внеси нулевое количество.";
	
	Если Ложь Тогда //Если БезДатПроизводства ИЛИ ВсеПартии Тогда
		// не проверяем дату производства
	ИначеЕсли НЕ ЗначениеЗаполнено(ТекДатаПроизводства) Тогда
		ОшибкаДатыПроизводства = Истина;
		ТекстОшибки = "В строке №" + ТекНомерСтроки + " укажи дату производства или обнули количество!";
		
	ИначеЕсли ЗначениеЗаполнено(ДатаПроизводстваКон) Тогда
		ОшибкаДатыПроизводства = (ТекДатаПроизводства < ДатаПроизводстваНач
									ИЛИ ТекДатаПроизводства > ДатаПроизводстваКон);
	ИначеЕсли ЗначениеЗаполнено(ДатаПроизводстваНач) Тогда
		ОшибкаДатыПроизводства = (ТекДатаПроизводства < ДатаПроизводстваНач);
	Иначе
		//+++АК SHEP 20160805: если период дат проиводства не заполнен, дату производства не проверяем
		//ОшибкаДатыПроизводства = ЗначениеЗаполнено(ТекДатаПроизводства);
		//---АК SHEP 20160805
	КонецЕсли;
	
	Если ОшибкаДатыПроизводства Тогда
		Элемент.ТекущийЭлемент = Элементы.ОценкиДатаПроизводства;
        Сообщение = Новый СообщениеПользователю();
        Сообщение.Текст = ТекстОшибки;
        Сообщение.Поле 	= "Объект.Оценки[" + (ТекНомерСтроки - 1) + "].ДатаПроизводства";
        Сообщение.КлючДанных = Объект.Ссылка;
        Сообщение.Сообщить();
        Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОценкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ВложенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
Перем Файл, ОтносительноеИмяФайла;
	
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	ОтносительноеИмяФайла = ТекущиеДанные.ОтносительноеИмяФайла;
	Если НЕ ПустаяСтрока(ОтносительноеИмяФайла) Тогда
		АдресВремХранилища = ПолучитьФайлНаСервере(КаталогХраненияФайлов + ОтносительноеИмяФайла, УникальныйИдентификатор);
		Если ЗначениеЗаполнено(АдресВремХранилища) Тогда
			Файл = Новый Файл(ОтносительноеИмяФайла);
			ИмяВременногоФайла = ПолучитьИмяВременногоФайла(Файл.Расширение);
			ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВремХранилища);
			ДвоичныеДанные.Записать(ИмяВременногоФайла);
			ЗапуститьПриложение(ИмяВременногоФайла);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьФайлНаСервере(ИмяФайла, УникальныйИдентификатор)
Перем Файл;
	
	Файл = Новый Файл(ИмяФайла);
	Если Файл.Существует() Тогда
		Возврат ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ИмяФайла), УникальныйИдентификатор);
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если КомментарийОбязателен Тогда
		Для Каждого СтрокаОценки Из Объект.Оценки Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаОценки.Комментарий) Тогда
				ТекНомерСтроки = СтрокаОценки.НомерСтроки;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Строка №" + ТекНомерСтроки + ": " + СокрЛП(Комментарий),
					Объект, "Объект.Оценки[" + (ТекНомерСтроки - 1) + "].Комментарий",, Отказ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		ДокЗаданиеТехнологаНаДегустациюОбъект = Объект.ЗаданиеТехнологаНаДегустацию.ПолучитьОбъект();
		
		КоличествоМагазиновБыло = ДокЗаданиеТехнологаНаДегустациюОбъект.Магазины.Количество();
		ДокЗаданиеТехнологаНаДегустациюОбъект.ОбновитьСписокМагазинов(2);
		КоличествоМагазиновСтало = ДокЗаданиеТехнологаНаДегустациюОбъект.Магазины.Количество();
		
		Если КоличествоМагазиновБыло = КоличествоМагазиновСтало Тогда
			// больше нет магазинов для дегустации
		Иначе
			ДокЗаданиеТехнологаНаДегустациюОбъект.Записать();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
