
Функция КоличествоНеотработанныхЗадач() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если НЕ ЗначениеЗаполнено(ПараметрыСеанса.ТорговаяТочкаПоАйпи) Тогда Возврат 0; КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ЗадачаТехнологаНаДегустацию.Ссылка КАК Ссылка,
		|	ЗадачаТехнологаНаДегустацию.Магазин КАК Магазин
		|ИЗ
		|	Документ.ЗадачаТехнологаНаДегустацию КАК ЗадачаТехнологаНаДегустацию
		|ГДЕ
		|	НЕ ЗадачаТехнологаНаДегустацию.Проведен
		|	И НЕ ЗадачаТехнологаНаДегустацию.ПометкаУдаления
		|	И НЕ ЗадачаТехнологаНаДегустацию.Закрыта
		|	И ЗадачаТехнологаНаДегустацию.Магазин = &Магазин");
	Запрос.УстановитьПараметр("Магазин", ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	
	ВыборкаЗапроса = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ВыборкаЗапроса.Количество();
	
КонецФункции // КоличествоНеотработанныхЗадач()

Функция ПолучитьОрдерНаСклад(ДокОснование) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПриходныйОрдерСклад.Ссылка,
		|	ПриходныйОрдерСклад.МоментВремени КАК МоментВремени,
		|	ПриходныйОрдерСклад.Проведен КАК Проведен,
		|	ПриходныйОрдерСклад.ПометкаУдаления КАК ПометкаУдаления
		|ИЗ
		|	Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
		|ГДЕ
		|	ПриходныйОрдерСклад.Основание = &ДокОснование
		|	И ПриходныйОрдерСклад.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	МоментВремени УБЫВ");
	Запрос.УстановитьПараметр("ДокОснование", ДокОснование);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Документы.ПриходныйОрдерСклад.ПустаяСсылка();
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаЗапроса.Следующий();
	Возврат ВыборкаЗапроса.Ссылка;
	
КонецФункции
