
&НаСервереБезКонтекста
Функция ПолучитьТаблицуРО(СтруктураПараметров, мМассивТТ, мТаблицаПометок)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала"				, СтруктураПараметров.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания"			, СтруктураПараметров.ДатаОкончания);
	Запрос.УстановитьПараметр("ОрганизацияПолучатель"	, СтруктураПараметров.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("МассивТТ"				, мМассивТТ);
	Запрос.УстановитьПараметр("КоличествоТТ"			, СтруктураПараметров.КоличествоТТ);
	Запрос.УстановитьПараметр("Маршрут"					, СтруктураПараметров.Маршрут);
	Запрос.УстановитьПараметр("ТаблицаПометок"			, мТаблицаПометок);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходныйОрдерСклад.Ссылка КАК РасходныйОрдер,
	|	РасходныйОрдерСклад.МоментВремени КАК МоментВремени,
	|	НАЧАЛОПЕРИОДА(РасходныйОрдерСклад.Дата, ДЕНЬ) КАК Дата,
	|	ВЫРАЗИТЬ(РасходныйОрдерСклад.Получатель КАК Справочник.СтруктурныеЕдиницы) КАК ТорговаяТочка,
	|	МАКСИМУМ(ЕСТЬNULL(ВодителиПоМаршруту.Период, ДАТАВРЕМЯ(1, 1, 1))) КАК Период
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВодителиПоМаршруту КАК ВодителиПоМаршруту
	|		ПО (ВодителиПоМаршруту.Маршрут = &Маршрут)
	|			И (НЕ ВодителиПоМаршруту.Период > РасходныйОрдерСклад.Дата)
	|ГДЕ
	|	РасходныйОрдерСклад.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И (РасходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
	|			ИЛИ РасходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ПередачаОборудованияВТорговуюТочку))
	|	И РасходныйОрдерСклад.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
	|	И ВЫРАЗИТЬ(РасходныйОрдерСклад.Получатель КАК Справочник.СтруктурныеЕдиницы) В
	|			(ВЫБРАТЬ
	|				ЦФОСтруктурныхЕдиниц.СтруктурнаяЕдиница КАК ТорговаяТочка
	|			ИЗ
	|				РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&ДатаОкончания, &КоличествоТТ = 0
	|					ИЛИ СтруктурнаяЕдиница В (&МассивТТ)) КАК ЦФОСтруктурныхЕдиниц
	|			ГДЕ
	|				ЦФОСтруктурныхЕдиниц.Организация = &ОрганизацияПолучатель)
	|	И РасходныйОрдерСклад.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходныйОрдерСклад.Ссылка,
	|	РасходныйОрдерСклад.МоментВремени,
	|	НАЧАЛОПЕРИОДА(РасходныйОрдерСклад.Дата, ДЕНЬ),
	|	ВЫРАЗИТЬ(РасходныйОрдерСклад.Получатель КАК Справочник.СтруктурныеЕдиницы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПометок.Пометка КАК Пометка,
	|	ТаблицаПометок.Дата КАК Дата,
	|	ТаблицаПометок.РасходныйОрдер КАК РасходныйОрдер
	|ПОМЕСТИТЬ ВТПометки
	|ИЗ
	|	&ТаблицаПометок КАК ТаблицаПометок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТПометки.Пометка, ЛОЖЬ) КАК Пометка,
	|	ВТДокументы.РасходныйОрдер КАК РасходныйОрдер,
	|	ВТДокументы.Дата КАК Дата,
	|	ВТДокументы.ТорговаяТочка КАК ТорговаяТочка,
	|	ЕСТЬNULL(ВодителиПоМаршруту.Водитель, ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаКонтрагентов.ПустаяСсылка)) КАК Водитель,
	|	ЕСТЬNULL(ВодителиПоМаршруту.Автомобиль, ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)) КАК Автомобиль
	|ИЗ
	|	ВТДокументы КАК ВТДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПометки КАК ВТПометки
	|		ПО ВТДокументы.Дата = ВТПометки.Дата
	|			И ВТДокументы.РасходныйОрдер = ВТПометки.РасходныйОрдер
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВодителиПоМаршруту КАК ВодителиПоМаршруту
	|		ПО (ВодителиПоМаршруту.Маршрут = &Маршрут)
	|			И (ВодителиПоМаршруту.Период = ВТДокументы.Период)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТДокументы.МоментВремени";

	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ЗаполнитьТаблицуРО(СтруктураПараметров)
	
	мТаблицаПометок = ЭтаФорма.ТаблицаРО.Выгрузить(, "Дата, РасходныйОрдер, Пометка");
	мМассивТТ 		= ЭтаФорма.ТаблицаТорговыхТочек.Выгрузить(, "ТорговаяТочка").ВыгрузитьКолонку("ТорговаяТочка");
	
	мТаблицаРО = ПолучитьТаблицуРО(СтруктураПараметров, мМассивТТ, мТаблицаПометок);
	ЭтаФорма.ТаблицаРО.Загрузить(мТаблицаРО);
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.ДатаНачала 			= ЭтаФорма.Параметры.ДатаНачала;
	ЭтаФорма.ДатаОкончания			= ЭтаФорма.Параметры.ДатаОкончания;
	ЭтаФорма.ОрганизацияПолучатель 	= ЭтаФорма.Параметры.ОрганизацияПолучатель;
	ЭтаФорма.Маршрут 				= ЭтаФорма.Параметры.Маршрут;
	
	мМассивТТ = ЭтаФорма.Параметры.МассивТТ;
	Для Каждого ТекТТ Из мМассивТТ Цикл
		НоваяСтрока = ЭтаФорма.ТаблицаТорговыхТочек.Добавить();
		НоваяСтрока.ТорговаяТочка = ТекТТ;
	КонецЦикла;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДатаНачала"			, ЭтаФорма.ДатаНачала);
	СтруктураПараметров.Вставить("ДатаОкончания"		, ЭтаФорма.ДатаОкончания);
	СтруктураПараметров.Вставить("ОрганизацияПолучатель", ЭтаФорма.ОрганизацияПолучатель);
	СтруктураПараметров.Вставить("КоличествоТТ"			, ЭтаФорма.ТаблицаТорговыхТочек.Количество());
	СтруктураПараметров.Вставить("Маршрут"				, ЭтаФорма.Маршрут);
	
	ЗаполнитьТаблицуРО(СтруктураПараметров);
	
КонецПроцедуры


&НаКлиенте
Процедура ТаблицаТорговыхТочекПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДатаНачала"			, ЭтаФорма.ДатаНачала);
	СтруктураПараметров.Вставить("ДатаОкончания"		, ЭтаФорма.ДатаОкончания);
	СтруктураПараметров.Вставить("ОрганизацияПолучатель", ЭтаФорма.ОрганизацияПолучатель);
	СтруктураПараметров.Вставить("КоличествоТТ"			, ЭтаФорма.ТаблицаТорговыхТочек.Количество());
	СтруктураПараметров.Вставить("Маршрут"				, ЭтаФорма.Маршрут);
	
	ЗаполнитьТаблицуРО(СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТорговыхТочекПослеУдаления(Элемент)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДатаНачала"			, ЭтаФорма.ДатаНачала);
	СтруктураПараметров.Вставить("ДатаОкончания"		, ЭтаФорма.ДатаОкончания);
	СтруктураПараметров.Вставить("ОрганизацияПолучатель", ЭтаФорма.ОрганизацияПолучатель);
	СтруктураПараметров.Вставить("КоличествоТТ"			, ЭтаФорма.ТаблицаТорговыхТочек.Количество());
	СтруктураПараметров.Вставить("Маршрут"				, ЭтаФорма.Маршрут);
	
	ЗаполнитьТаблицуРО(СтруктураПараметров);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПолучателяРО(ТекРО)
	
	Возврат ТекРО.Получатель;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДатуРО(ТекРО)
	
	Возврат ТекРО.Дата;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруВодителей(СтруктураПараметров)
	
	СтруктураВодителей = Новый Структура("Водитель, Автомобиль", Справочники.КонтактныеЛицаКонтрагентов.ПустаяСсылка(), Справочники.Автомобили.ПустаяСсылка());
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Маршрут"	, СтруктураПараметров.Маршрут);
	Запрос.УстановитьПараметр("Дата"	, СтруктураПараметров.Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВодителиПоМаршрутуСрезПоследних.Водитель,
	|	ВодителиПоМаршрутуСрезПоследних.Автомобиль
	|ИЗ
	|	РегистрСведений.ВодителиПоМаршруту.СрезПоследних(&Дата, Маршрут = &Маршрут) КАК ВодителиПоМаршрутуСрезПоследних";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СтруктураВодителей, Выборка);
	КонецЕсли;
	
	Возврат СтруктураВодителей;
	
КонецФункции

&НаКлиенте
Процедура ТаблицаРОРасходныйОрдерПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТаблицаРО.ТекущиеДанные;
	ТекДанные.ТорговаяТочка = ПолучитьПолучателяРО(ТекДанные.РасходныйОрдер);
	ТекДанные.Дата 			= ПолучитьДатуРО(ТекДанные.РасходныйОрдер);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Маршрут"	, ЭтаФорма.Маршрут);
	СтруктураПараметров.Вставить("Дата"		, ТекДанные.Дата);
	СтруктураВодителей = ПолучитьСтруктуруВодителей(СтруктураПараметров);
	ТекДанные.Водитель 		= СтруктураВодителей.Водитель;
	ТекДанные.Автомобиль 	= СтруктураВодителей.Автомобиль;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРОРасходныйОрдерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	
	
КонецПроцедуры


&НаКлиенте
Процедура КомандаОК(Команда)
	
	МассивРО = Новый Массив;
	Для Каждого СтрокаТаблицы Из ЭтаФорма.ТаблицаРО Цикл
		Если НЕ СтрокаТаблицы.Пометка Тогда
			Продолжить;
		КонецЕсли; 
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("РасходныйОрдер"	, СтрокаТаблицы.РасходныйОрдер);
		СтруктураПараметров.Вставить("Водитель"			, СтрокаТаблицы.Водитель);
		СтруктураПараметров.Вставить("Автомобиль"		, СтрокаТаблицы.Автомобиль);
		МассивРО.Добавить(СтруктураПараметров);
	КонецЦикла;
	
	// возвращается массив структур
	ЭтаФорма.Закрыть(МассивРО);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРОУстановитьПометки(Команда)
	
	Для Каждого СтрокаТаблицы Из ЭтаФорма.ТаблицаРО Цикл
		СтрокаТаблицы.Пометка = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРОСнятьПометки(Команда)
	
	Для Каждого СтрокаТаблицы Из ЭтаФорма.ТаблицаРО Цикл
		СтрокаТаблицы.Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры
