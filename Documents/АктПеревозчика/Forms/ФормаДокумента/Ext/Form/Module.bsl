
Функция ПолучитьМассивТТ()
	
	Возврат Объект.ТочкиДоставки.Выгрузить(, "ТорговаяТочка").ВыгрузитьКолонку("ТорговаяТочка");
	
КонецФункции

Процедура УстановитьОтборВодителиИАвтомобили()
	
	ПараметрыЗапроса = ЭтаФорма.ВодителиПоМаршруту.Параметры;
	ПараметрыЗапроса.УстановитьЗначениеПараметра("Маршрут"		, Объект.Маршрут);
	ПараметрыЗапроса.УстановитьЗначениеПараметра("ДатаНачала"	, Объект.ДатаНачала);
	ПараметрыЗапроса.УстановитьЗначениеПараметра("ДатаОкончания", КонецДня(Объект.ДатаОкончания));
	
КонецПроцедуры

Процедура УстановитьВидимостьПоВидуОперации()
	
	ЭтоОтгрузкаВТТ 		= (Объект.ВидОперации = Перечисления.ВидыОперацийАктПеревозчика.ОтгрузкаВТорговуюТочку);
	ЭтоДоставкаНаСклад 	= (Объект.ВидОперации = Перечисления.ВидыОперацийАктПеревозчика.ДоставкаНаСклад);
	Элементы.Маршрут.Видимость						= ЭтоОтгрузкаВТТ;
	Элементы.ГруппаТочкиДоставки.Видимость 			= ЭтоОтгрузкаВТТ;
	Элементы.ГруппаВодителиИАвтомобили.Видимость 	= ЭтоОтгрузкаВТТ;
	Элементы.ГруппаРасходныеОрдера.Видимость 		= ЭтоОтгрузкаВТТ;
	//Элементы.НачальныйНомерТТН.Доступность 			= ЭтоОтгрузкаВТТ;
	//Элементы.КнопкаПроставитьНомераТТН.Доступность 	= ЭтоОтгрузкаВТТ;
	Элементы.ГруппаПриходныеОрдера.Видимость 		= ЭтоДоставкаНаСклад;
	Элементы.ГруппаТранспортныеРасходы.Видимость 	= ЭтоДоставкаНаСклад;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда // новый документ
		Объект.Автор 		= ПараметрыСеанса.ТекущийПользователь;
		Объект.ВидОперации 	= ПредопределенноеЗначение("Перечисление.ВидыОперацийАктПеревозчика.ОтгрузкаВТорговуюТочку");
	КонецЕсли;
	
	УстановитьВидимостьПоВидуОперации();
	
	//
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийАктПеревозчика.ОтгрузкаВТорговуюТочку") Тогда
		УстановитьОтборВодителиИАвтомобили();
		Элементы.ВодителиПоМаршруту.Обновить();
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура РедактироватьПериод(Команда)
	
	СтандартныйПериод = Новый СтандартныйПериод(Объект.ДатаНачала, Объект.ДатаОкончания);
	ДиалогРедактирования = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогРедактирования.Период = СтандартныйПериод;
	Если ДиалогРедактирования.Редактировать() Тогда
		СтандартныйПериод = ДиалогРедактирования.Период;
		Объект.ДатаНачала 		= СтандартныйПериод.ДатаНачала;
		Объект.ДатаОкончания 	= СтандартныйПериод.ДатаОкончания;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Объект.ДатаНачала)
			И ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		
		Если ЗначениеЗаполнено(Объект.ДатаОкончания)
				И Объект.ДатаНачала > Объект.ДатаОкончания Тогда
			
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Дата начала периода больше даты окончания периода!";
			СообщениеПользователю.Сообщить();
			
			Объект.ДатаНачала = Объект.ДатаОкончания;
			Возврат;
		КонецЕсли;
		
	Иначе
		
		Если НЕ ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Должна быть указана дата начала периода!";
			СообщениеПользователю.Сообщить();
		КонецЕсли;
	
		Если НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Должна быть указана дата окончания периода!";
			СообщениеПользователю.Сообщить();
		КонецЕсли;
	
	КонецЕсли;
	
	//
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийАктПеревозчика.ОтгрузкаВТорговуюТочку") Тогда
		УстановитьОтборВодителиИАвтомобили();
		Элементы.ВодителиПоМаршруту.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		
		Если ЗначениеЗаполнено(Объект.ДатаОкончания)
				И Объект.ДатаНачала > Объект.ДатаОкончания Тогда
			
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Дата начала периода больше даты окончания периода!";
			СообщениеПользователю.Сообщить();
			
			Объект.ДатаНачала = Объект.ДатаОкончания;
			Возврат;
		КонецЕсли;

	Иначе
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Должна быть указана дата начала периода!";
		СообщениеПользователю.Сообщить();
	КонецЕсли;
	
	//
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийАктПеревозчика.ОтгрузкаВТорговуюТочку") Тогда
		УстановитьОтборВодителиИАвтомобили();
		Элементы.ВодителиПоМаршруту.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		
		Если ЗначениеЗаполнено(Объект.ДатаНачала)
				И Объект.ДатаНачала > Объект.ДатаОкончания Тогда
		
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Дата окончания периода меньше даты начала периода!";
			СообщениеПользователю.Сообщить();
			
			Объект.ДатаОкончания = Объект.ДатаНачала;
			Возврат;
		КонецЕсли;

	Иначе
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Должна быть указана дата окончания периода!";
		СообщениеПользователю.Сообщить();
	КонецЕсли;
	
	//
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийАктПеревозчика.ОтгрузкаВТорговуюТочку") Тогда
		УстановитьОтборВодителиИАвтомобили();
		Элементы.ВодителиПоМаршруту.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	УстановитьВидимостьПоВидуОперации();
	
	//
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийАктПеревозчика.ОтгрузкаВТорговуюТочку") Тогда
		УстановитьОтборВодителиИАвтомобили();
		Элементы.ВодителиПоМаршруту.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)

	Если Объект.Договор.Пустая() Тогда
		Объект.Договор = ДопМодульСервер.ПолучитьОсновнойДоговорКонтрагента(Объект.Организация, Объект.Перевозчик, ?(Объект.Ссылка.Пустая(), ТекущаяДата(), Объект.Дата));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеревозчикПриИзменении(Элемент)

	Если Объект.Договор.Пустая() Тогда
		Объект.Договор = ДопМодульСервер.ПолучитьОсновнойДоговорКонтрагента(Объект.Организация, Объект.Перевозчик, ?(Объект.Ссылка.Пустая(), ТекущаяДата(), Объект.Дата));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МаршрутПриИзменении(Элемент)
	
	УстановитьОтборВодителиИАвтомобили();
	Элементы.ВодителиПоМаршруту.Обновить();
		
КонецПроцедуры

Процедура ПроставитьНомераТТНСервер()
	
	ЭтоОтгрузкаВТТ = (Объект.ВидОперации = Перечисления.ВидыОперацийАктПеревозчика.ОтгрузкаВТорговуюТочку);
	
	ИмяТЧ = ?(ЭтоОтгрузкаВТТ, "РасходныеОрдера", "ПриходныеОрдера");
	ВремТаблица = Объект[ИмяТЧ].Выгрузить();
	ВремТаблица.Колонки.Добавить("ДатаДень");
	ВремТаблица.Колонки.Добавить("Дата");
	Для Каждого СтрТаб Из ВремТаблица Цикл
		СтрТаб.Дата 		= ?(ЭтоОтгрузкаВТТ, СтрТаб.РасходныйОрдер.Дата,
			?(ЗначениеЗаполнено(СтрТаб.ПриходныйОрдер.ДатаВремяЗаездаМашины), СтрТаб.ПриходныйОрдер.ДатаВремяЗаездаМашины, СтрТаб.ПриходныйОрдер.Дата));
		СтрТаб.ДатаДень 	= НачалоДня(СтрТаб.Дата);
	КонецЦикла;
	ВремТаблица.Сортировать("Дата, Автомобиль");
	
	ТекДатаДень		= Неопределено;
	ТекАвтомобиль 	= Неопределено;
	ТекНомерТТН 	= ЭтаФорма.НачальныйНомерТТН - 1;
	Для Каждого СтрокаТаблицы Из ВремТаблица Цикл
		
		Если (НЕ СтрокаТаблицы.ДатаДень = ТекДатаДень)
				ИЛИ НЕ СтрокаТаблицы.Автомобиль = ТекАвтомобиль ТОгда
			ТекНомерТТН = ТекНомерТТН + 1;
		КонецЕсли;
		
		СтрокаТЧ = Объект[ИмяТЧ][СтрокаТаблицы.НомерСтроки - 1];
		СтрокаТЧ.НомерТТН = ТекНомерТТН;
		
		ТекДатаДень 	= СтрокаТаблицы.ДатаДень;
		ТекАвтомобиль 	= СтрокаТаблицы.Автомобиль;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьНомераТТН(Команда)

	Если Объект.Организация.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст			= "Не указана организация. Заполнение невозможно";
		Сообщение.Поле 			= "Организация";
		Сообщение.ПутьКДанным 	= "Организация";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если ЭтаФорма.НачальныйНомерТТН = 0 Тогда
		ЭтаФорма.НачальныйНомерТТН = ДопМодульСервер.ПолучитьНачальныйНомерТТН(Объект.Организация, Объект.ВидОперации, Объект.Дата, Год(Объект.ДатаОкончания));
	КонецЕсли;
		
	Если ЭтаФорма.НачальныйНомерТТН = 0 Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не определен начальный номер ТТН!";
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	//
	ПроставитьНомераТТНСервер();
	
КонецПроцедуры


//
Функция ЕстьПовторТТ(мТорговаяТочка)
	
	Возврат Объект.ТочкиДоставки.НайтиСтроки(Новый Структура("ТорговаяТочка", мТорговаяТочка)).Количество() > 1;
	
КонецФункции

Процедура ЗаполнитьПоМаршрутуСервер()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Маршрут", Объект.Маршрут);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МаршрутыТорговыеТочки.СтруктурнаяЕдиница КАК ТорговаяТочка,
	//|	ЕСТЬNULL(ВодителиПоМаршруту.Водитель, ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаКонтрагентов.ПустаяСсылка)) КАК Водитель,
	//|	ЕСТЬNULL(ВодителиПоМаршруту.Автомобиль, ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)) КАК Автомобиль,
	|	МАКСИМУМ(МаршрутыТорговыеТочки.Стоимость) КАК СтоимостьПеревозки
	|ИЗ
	|	Справочник.Маршруты.ТорговыеТочки КАК МаршрутыТорговыеТочки
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВодителиПоМаршруту.СрезПоследних(, Маршрут = &Маршрут) КАК ВодителиПоМаршруту
	//|		ПО (ВодителиПоМаршруту.Маршрут = МаршрутыТорговыеТочки.Ссылка)
	|ГДЕ
	|	МаршрутыТорговыеТочки.Ссылка = &Маршрут
	|
	|СГРУППИРОВАТЬ ПО
	|	МаршрутыТорговыеТочки.СтруктурнаяЕдиница
	//|	ЕСТЬNULL(ВодителиПоМаршруту.Водитель, ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаКонтрагентов.ПустаяСсылка)),
	//|	ЕСТЬNULL(ВодителиПоМаршруту.Автомобиль, ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	МаршрутыТорговыеТочки.СтруктурнаяЕдиница.id_TT";
	
	Объект.ТочкиДоставки.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ТочкиДоставкиЗаполнитьПоМаршруту(Команда)

	Если Объект.Маршрут.Пустая() Тогда
		Сообщить("Маршрут не указан! Заполнение невозможно.");
		Возврат;
	КонецЕсли;
	
	//
	ЗаполнитьПоМаршрутуСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ТочкиДоставкиПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)

	ТекДанные = Элементы.ТочкиДоставки.ТекущиеДанные;

	Если ЕстьПовторТТ(ТекДанные.ТорговаяТочка) Тогда
		Сообщить("Уже есть строки с указанной торговой точкой!");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры


//
&НаКлиенте
Процедура РасходныеОрдераПодбор(Команда)
	
	Перем ПараметрыФормы, мМассивТТ, ФормаПодбора, СтруктураОтбора, ТЧРасходныеОрдера, НоваяСтрока;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		Сообщить("Не указана дата начала периода!");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		Сообщить("Не указана дата окончания периода!");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ОрганизацияПолучатель) Тогда
		Сообщить("Не указана организация-получатель!");
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ДатаНачала"			, Объект.ДатаНачала);
	ПараметрыФормы.Вставить("ДатаОкончания"			, КонецДня(Объект.ДатаОкончания));
	ПараметрыФормы.Вставить("ОрганизацияПолучатель"	, Объект.ОрганизацияПолучатель);
	ПараметрыФормы.Вставить("Маршрут"				, Объект.Маршрут);
	
	мМассивТТ = ПолучитьМассивТТ();
	ПараметрыФормы.Вставить("МассивТТ"				, мМассивТТ);
	
	//
	ФормаПодбора = ПолучитьФорму("Документ.АктПеревозчика.Форма.ФормаПодбораРасходныхОрдеров", ПараметрыФормы, ЭтаФорма);
	мМассивРасходныхОрдеров = ФормаПодбора.ОткрытьМодально();
	Если мМассивРасходныхОрдеров = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураОтбораРО = Новый Структура("РасходныйОрдер");
	СтруктураОтбораТТ = Новый Структура("ТорговаяТочка");
	ТЧРасходныеОрдера 	= Объект.РасходныеОрдера;
	ТЧТочкиДоставки 	= Объект.ТочкиДоставки;
	
	Для Каждого СтрокаРО Из мМассивРасходныхОрдеров Цикл // каждый элемент массива - это структура [РасходныйОрдер, Водитель, Автомобиль]
		
		СтруктураОтбораРО.РасходныйОрдер = СтрокаРО.РасходныйОрдер;
		Если ТЧРасходныеОрдера.НайтиСтроки(СтруктураОтбораРО).Количество() > 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТЧРасходныеОрдера.Добавить();
		НоваяСтрока.РасходныйОрдер = СтрокаРО.РасходныйОрдер;
		
		СтруктураОтбораТТ.ТорговаяТочка = СтрокаРО.РасходныйОрдер.Получатель;
		СтрокиТЧ = ТЧТочкиДоставки.НайтиСтроки(СтруктураОтбораТТ);
		Если СтрокиТЧ.Количество() > 0 Тогда
			СтрокаТЧ = СтрокиТЧ[0];
			НоваяСтрока.Автомобиль 	= СтрокаРО.Автомобиль;
			НоваяСтрока.Водитель 	= СтрокаРО.Водитель;
			НоваяСтрока.Стоимость 	= СтрокаТЧ.СтоимостьПеревозки;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТаблицуРасходныхОрдеров(СтруктураПараметров, мТаблицаТТ)
	
	ЕстьОтборПоТТ = (мТаблицаТТ.Количество() > 0);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала"				, СтруктураПараметров.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания"			, КонецДня(СтруктураПараметров.ДатаОкончания));
	Запрос.УстановитьПараметр("ОрганизацияПолучатель"	, СтруктураПараметров.ОрганизацияПолучатель);
	
	Если ЕстьОтборПоТТ Тогда
		Запрос.УстановитьПараметр("МассивТТ"			, СтруктураПараметров.МассивТТ);
		Запрос.УстановитьПараметр("ТаблицаТТ"			, мТаблицаТТ);
		//Запрос.УстановитьПараметр("Маршрут"				, СтруктураПараметров.Маршрут);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаТТ.ТорговаяТочка КАК ТорговаяТочка,
		|	ТаблицаТТ.СтоимостьПеревозки КАК Стоимость
		|ПОМЕСТИТЬ ВТТорговыеТочки
		|ИЗ
		|	&ТаблицаТТ КАК ТаблицаТТ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасходныйОрдерСклад.Ссылка КАК РасходныйОрдер,
		|	ЕСТЬNULL(МЛРасходныеОрдера.Ссылка.Водитель, ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаКонтрагентов.ПустаяСсылка)) КАК Водитель,
		|	ЕСТЬNULL(МЛРасходныеОрдера.Ссылка.Автомобиль, ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)) КАК Автомобиль,
		|	ЕСТЬNULL(ВТТорговыеТочки.Стоимость, 0) КАК Стоимость,
		|	НАЧАЛОПЕРИОДА(РасходныйОрдерСклад.Дата, ДЕНЬ) КАК ДеньДокумента
		|ИЗ
		|	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТорговыеТочки КАК ВТТорговыеТочки
		|		ПО (ВТТорговыеТочки.ТорговаяТочка = РасходныйОрдерСклад.Получатель)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛист.РасходныеОрдера КАК МЛРасходныеОрдера
		|		ПО (МЛРасходныеОрдера.Документ = РасходныйОрдерСклад.Ссылка)
		|			И (МЛРасходныеОрдера.Ссылка.Проведен)
		|ГДЕ
		|	РасходныйОрдерСклад.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И (РасходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
		|			ИЛИ РасходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ПередачаОборудованияВТорговуюТочку))
		|	И РасходныйОрдерСклад.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		|	И ВЫРАЗИТЬ(РасходныйОрдерСклад.Получатель КАК Справочник.СтруктурныеЕдиницы) В
		|			(ВЫБРАТЬ
		|				ЦФОСтруктурныхЕдиниц.СтруктурнаяЕдиница КАК ТорговаяТочка
		|			ИЗ
		|				РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&ДатаОкончания, СтруктурнаяЕдиница В (&МассивТТ)) КАК ЦФОСтруктурныхЕдиниц
		|			ГДЕ
		|				ЦФОСтруктурныхЕдиниц.Организация = &ОрганизацияПолучатель)
		|	И РасходныйОрдерСклад.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	РасходныйОрдерСклад.МоментВремени";
		//"ВЫБРАТЬ
		//|	РасходныйОрдерСклад.Ссылка КАК РасходныйОрдер,
		//|	НАЧАЛОПЕРИОДА(РасходныйОрдерСклад.Дата, ДЕНЬ) КАК ДеньДокумента,
		//|	РасходныйОрдерСклад.МоментВремени КАК МоментВремени,
		//|	ВЫРАЗИТЬ(РасходныйОрдерСклад.Получатель КАК Справочник.СтруктурныеЕдиницы) КАК ТорговаяТочка,
		//|	МАКСИМУМ(ЕСТЬNULL(ВодителиПоМаршруту.Период, ДАТАВРЕМЯ(1, 1, 1))) КАК Период
		//|ПОМЕСТИТЬ ВТМаксПериоды
		//|ИЗ
		//|	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
		//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВодителиПоМаршруту КАК ВодителиПоМаршруту
		//|		ПО (ВодителиПоМаршруту.Маршрут = &Маршрут)
		//|			И (НЕ ВодителиПоМаршруту.Период > РасходныйОрдерСклад.Дата)
		//|ГДЕ
		//|	РасходныйОрдерСклад.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		//|	И (РасходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
		//|			ИЛИ РасходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ПередачаОборудованияВТорговуюТочку))
		//|	И РасходныйОрдерСклад.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		//|	И ВЫРАЗИТЬ(РасходныйОрдерСклад.Получатель КАК Справочник.СтруктурныеЕдиницы) В
		//|			(ВЫБРАТЬ
		//|				ЦФОСтруктурныхЕдиниц.СтруктурнаяЕдиница КАК ТорговаяТочка
		//|			ИЗ
		//|				РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&ДатаОкончания, СтруктурнаяЕдиница В (&МассивТТ)) КАК ЦФОСтруктурныхЕдиниц
		//|			ГДЕ
		//|				ЦФОСтруктурныхЕдиниц.Организация = &ОрганизацияПолучатель)
		//|	И РасходныйОрдерСклад.Проведен
		//|
		//|СГРУППИРОВАТЬ ПО
		//|	РасходныйОрдерСклад.Ссылка,
		//|	НАЧАЛОПЕРИОДА(РасходныйОрдерСклад.Дата, ДЕНЬ),
		//|	РасходныйОрдерСклад.МоментВремени,
		//|	ВЫРАЗИТЬ(РасходныйОрдерСклад.Получатель КАК Справочник.СтруктурныеЕдиницы)
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	ТаблицаТТ.ТорговаяТочка КАК ТорговаяТочка,
		//|	ТаблицаТТ.СтоимостьПеревозки КАК Стоимость
		//|ПОМЕСТИТЬ ВТТорговыеТочки
		//|ИЗ
		//|	&ТаблицаТТ КАК ТаблицаТТ
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	РасходныйОрдерСклад.РасходныйОрдер КАК РасходныйОрдер,
		//|	ЕСТЬNULL(ВодителиПоМаршруту.Водитель, ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаКонтрагентов.ПустаяСсылка)) КАК Водитель,
		//|	ЕСТЬNULL(ВодителиПоМаршруту.Автомобиль, ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)) КАК Автомобиль,
		//|	ЕСТЬNULL(ВТТорговыеТочки.Стоимость, 0) КАК Стоимость,
		//|	РасходныйОрдерСклад.ДеньДокумента КАК ДеньДокумента
		//|ИЗ
		//|	ВТМаксПериоды КАК РасходныйОрдерСклад
		//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТорговыеТочки КАК ВТТорговыеТочки
		//|		ПО (ВТТорговыеТочки.ТорговаяТочка = РасходныйОрдерСклад.ТорговаяТочка)
		//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВодителиПоМаршруту КАК ВодителиПоМаршруту
		//|		ПО (ВодителиПоМаршруту.Маршрут = &Маршрут)
		//|			И (ВодителиПоМаршруту.Период = РасходныйОрдерСклад.Период)
		//|
		//|УПОРЯДОЧИТЬ ПО
		//|	РасходныйОрдерСклад.МоментВремени";
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РасходныйОрдерСклад.Ссылка КАК РасходныйОрдер,
		|	ЕСТЬNULL(МЛРасходныеОрдера.Ссылка.Водитель, ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаКонтрагентов.ПустаяСсылка)) КАК Водитель,
		|	ЕСТЬNULL(МЛРасходныеОрдера.Ссылка.Автомобиль, ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)) КАК Автомобиль,
		|	НАЧАЛОПЕРИОДА(РасходныйОрдерСклад.Дата, ДЕНЬ) КАК ДеньДокумента
		|ИЗ
		|	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛист.РасходныеОрдера КАК МЛРасходныеОрдера
		|		ПО (МЛРасходныеОрдера.Документ = РасходныйОрдерСклад.Ссылка)
		|			И (МЛРасходныеОрдера.Ссылка.Проведен)
		|ГДЕ
		|	РасходныйОрдерСклад.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И (РасходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
		|			ИЛИ РасходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ПередачаОборудованияВТорговуюТочку))
		|	И РасходныйОрдерСклад.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		|	И ВЫРАЗИТЬ(РасходныйОрдерСклад.Получатель КАК Справочник.СтруктурныеЕдиницы) В
		|			(ВЫБРАТЬ
		|				ЦФОСтруктурныхЕдиниц.СтруктурнаяЕдиница КАК ТорговаяТочка
		|			ИЗ
		|				РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&ДатаОкончания, ) КАК ЦФОСтруктурныхЕдиниц
		|			ГДЕ
		|				ЦФОСтруктурныхЕдиниц.Организация = &ОрганизацияПолучатель)
		|	И РасходныйОрдерСклад.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	РасходныйОрдерСклад.МоментВремени";
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура РасходныеОрдераЗаполнитьСервер(СтруктураПараметров)
	
	мМассивТТ = ПолучитьМассивТТ();
	СтруктураПараметров.Вставить("МассивТТ", мМассивТТ);
	
	мТаблицаТТ = Объект.ТочкиДоставки.Выгрузить();
	мТаблица = ПолучитьТаблицуРасходныхОрдеров(СтруктураПараметров, мТаблицаТТ);
	
	
	// Распределение - служ. переменные
	//КолДнейПериода = (Объект.ДатаОкончания - Объект.ДатаНачала) / 86400 + 1;
	ВремТаблица = мТаблица.Скопировать(, "ДеньДокумента");
	ВремТаблица.Свернуть("ДеньДокумента");
	КолДнейПериода = ВремТаблица.Количество();
	Если КолДнейПериода < 1 Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.КоличествоПоездок > 0 Тогда
		КолРасходников = Мин(мТаблица.Количество(), Объект.КоличествоПоездок);
	Иначе
		КолРасходников = мТаблица.Количество();
	КонецЕсли;
	КолРасходниковВДень = Цел(КолРасходников / КолДнейПериода);
	Если КолРасходниковВДень = 0 Тогда
		КолРасходниковВДень = 1;
	КонецЕсли;
	
	КолРасходниковДобавлено = 0;
	СтруктураОтбора 		= Новый Структура("ДеньДокумента");
	МассивСтрок = Новый Массив;
	
	
	// основное "размазывание"
	ТекДата = Объект.ДатаНачала;
	Для н = 1 По КолДнейПериода Цикл
		
		Если КолРасходниковДобавлено = КолРасходников Тогда
			Прервать;
		КонецЕсли;
			
		СтруктураОтбора.ДеньДокумента = ТекДата;
		СтрокиТаблицы = мТаблица.НайтиСтроки(СтруктураОтбора);
		
		сч = 0;
		Для Каждого СтрокаТаблицы Из СтрокиТаблицы Цикл
			сч = сч + 1;
			Если сч > КолРасходниковВДень
					ИЛИ КолРасходниковДобавлено = КолРасходников Тогда
				Прервать;
			КонецЕсли;
			НоваяСтрока = Объект.РасходныеОрдера.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
			КолРасходниковДобавлено = КолРасходниковДобавлено + 1;
			МассивСтрок.Добавить(СтрокаТаблицы);
		КонецЦикла;
		
	
		ТекДата = ТекДата + 86400;
	КонецЦикла;
	
	// если в результате округления КолРасходниковВДень общее количество добавленных строк меньше необходимого
	Если КолРасходниковДобавлено < КолРасходников Тогда
		
		Для Каждого СтрокаТаблицы Из МассивСтрок Цикл
			мТаблица.Удалить(СтрокаТаблицы);
		КонецЦикла;
		МассивСтрок.Очистить();
		
		ОсталосьРасходников = КолРасходников - КолРасходниковДобавлено;
		КолРасходниковВДень = Цел(ОсталосьРасходников / КолДнейПериода);
		Если КолРасходниковВДень = 0 Тогда
			КолРасходниковВДень = 1;
		КонецЕсли;
		
		ТекДата = Объект.ДатаНачала;
		Для н = 1 По КолДнейПериода Цикл
			
			Если КолРасходниковДобавлено = КолРасходников Тогда
				Прервать;
			КонецЕсли;
			
			СтруктураОтбора.ДеньДокумента = ТекДата;
			СтрокиТаблицы = мТаблица.НайтиСтроки(СтруктураОтбора);
			
			сч = 0;
			Для Каждого СтрокаТаблицы Из СтрокиТаблицы Цикл
				сч = сч + 1;
				Если сч > КолРасходниковВДень
						ИЛИ КолРасходниковДобавлено = КолРасходников Тогда
					Прервать;
				КонецЕсли;
				НоваяСтрока = Объект.РасходныеОрдера.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
				КолРасходниковДобавлено = КолРасходниковДобавлено + 1;
				МассивСтрок.Добавить(СтрокаТаблицы);
			КонецЦикла;
			
		
			ТекДата = ТекДата + 86400;
		КонецЦикла;
		
	КонецЕсли;
	
	//
	Если КолРасходниковДобавлено < КолРасходников Тогда
		
		Для Каждого СтрокаТаблицы Из МассивСтрок Цикл
			мТаблица.Удалить(СтрокаТаблицы);
		КонецЦикла;
		
		ОсталосьРасходников = КолРасходников - КолРасходниковДобавлено;
		
		сч = 0;
		Для Каждого СтрокаТаблицы Из мТаблица Цикл
			сч = сч + 1;
			Если сч > ОсталосьРасходников Тогда
				Прервать;
			КонецЕсли;
			НоваяСтрока = Объект.РасходныеОрдера.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		КонецЦикла;
		
	КонецЕсли;
	
	Объект.РасходныеОрдера.Сортировать("РасходныйОрдер");
	
КонецПроцедуры

&НаКлиенте
Процедура РасходныеОрдераЗаполнить(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		Сообщить("Не указана дата начала периода!");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		Сообщить("Не указана дата окончания периода!");
		Возврат;
	КонецЕсли;
	
	Если Объект.РасходныеОрдера.Количество() > 0 Тогда
		Если Вопрос("Табличная часть будет перезаполнена. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет ТОгда
		    Возврат;
		КонецЕсли;
		Объект.РасходныеОрдера.Очистить();
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДатаНачала"			, Объект.ДатаНачала);
	СтруктураПараметров.Вставить("ДатаОкончания"		, Объект.ДатаОкончания);
	СтруктураПараметров.Вставить("ОрганизацияПолучатель", Объект.ОрганизацияПолучатель);
	СтруктураПараметров.Вставить("Маршрут"				, Объект.Маршрут);
	
	РасходныеОрдераЗаполнитьСервер(СтруктураПараметров);
	
КонецПроцедуры


//
&НаСервереБезКонтекста
Функция ПолучитьТаблицуТранспортныхРасходов(СтруктураПараметров)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала"				, СтруктураПараметров.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания"			, КонецДня(СтруктураПараметров.ДатаОкончания));
	Запрос.УстановитьПараметр("ОрганизацияПолучатель"	, СтруктураПараметров.ОрганизацияПолучатель);
	Запрос.УстановитьПараметр("Перевозчик"				, СтруктураПараметров.Перевозчик);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ТранспортныеРасходы.Дата, ДЕНЬ) КАК Дата,
	|	ТранспортныеРасходы.Маршрут КАК Маршрут,
	|	СУММА(ТранспортныеРасходы.Сумма) КАК Стоимость
	|ИЗ
	|	Документ.ТранспортныеРасходы КАК ТранспортныеРасходы
	|ГДЕ
	|	ТранспортныеРасходы.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ТранспортныеРасходы.Организация = &ОрганизацияПолучатель
	|	И ТранспортныеРасходы.Перевозчик = &Перевозчик
	|	И ТранспортныеРасходы.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ТранспортныеРасходы.Маршрут,
	|	НАЧАЛОПЕРИОДА(ТранспортныеРасходы.Дата, ДЕНЬ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Маршрут";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ТранспортныеРасходыЗаполнитьСервер(СтруктураПараметров)
	
	мТаблица = ПолучитьТаблицуТранспортныхРасходов(СтруктураПараметров);
	Объект.ТранспортныеРасходы.Загрузить(мТаблица);
		
КонецПроцедуры

&НаКлиенте
Процедура ТранспортныеРасходыЗаполнить(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		Сообщить("Не указана дата начала периода!");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		Сообщить("Не указана дата окончания периода!");
		Возврат;
	КонецЕсли;
	
	Если Объект.ТранспортныеРасходы.Количество() > 0
			И Вопрос("Табличная часть будет перезаполнена. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет ТОгда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДатаНачала"			, Объект.ДатаНачала);
	СтруктураПараметров.Вставить("ДатаОкончания"		, Объект.ДатаОкончания);
	СтруктураПараметров.Вставить("ОрганизацияПолучатель", Объект.ОрганизацияПолучатель);
	СтруктураПараметров.Вставить("Перевозчик"			, Объект.Перевозчик);
	
	ТранспортныеРасходыЗаполнитьСервер(СтруктураПараметров);
	
КонецПроцедуры


//
&НаСервереБезКонтекста
Функция ПолучитьТаблицуПриходныхОрдеров(СтруктураПараметров)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала"		, СтруктураПараметров.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания"	, КонецДня(СтруктураПараметров.ДатаОкончания));
	//Запрос.УстановитьПараметр("Водитель"		, СтруктураПараметров.Водитель);
	Запрос.УстановитьПараметр("Перевозчик"		, СтруктураПараметров.Перевозчик);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПриходныйОрдерСклад.Ссылка КАК ПриходныйОрдер,
	//|	&Водитель КАК Водитель,
	|	ЕСТЬNULL(МЛПриходныеОрдера.Ссылка.Водитель, ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаКонтрагентов.ПустаяСсылка)) КАК Водитель,
	|	ПриходныйОрдерСклад.Автомобиль КАК Автомобиль
	|ИЗ
	|	Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛист.ПриходныеОрдера КАК МЛПриходныеОрдера
	|		ПО (МЛПриходныеОрдера.ПриходныйОрдер = ПриходныйОрдерСклад.Ссылка)
	|			И (МЛПриходныеОрдера.Ссылка.Перевозчик = &Перевозчик)
	|			И (МЛПриходныеОрдера.Ссылка.Проведен)
	|ГДЕ
	|	ПриходныйОрдерСклад.ДатаВремяЗаездаМашины МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И (ПриходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ОтПоставщика)
	|			ИЛИ ПриходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ПоступлениеОборудованияОтПоставщика)
	|			ИЛИ ПриходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ПоступлениеУпаковкиОтПоставщика))
	|	И ПриходныйОрдерСклад.Автомобиль.Перевозчик = &Перевозчик
	|	И ПриходныйОрдерСклад.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПриходныйОрдерСклад.МоментВремени";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ПриходныеОрдераЗаполнитьСервер(СтруктураПараметров)
	
	мТаблица = ПолучитьТаблицуПриходныхОрдеров(СтруктураПараметров);

	Объект.ПриходныеОрдера.Загрузить(мТаблица);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриходныеОрдераЗаполнить(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		Сообщить("Не указана дата начала периода!");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		Сообщить("Не указана дата окончания периода!");
		Возврат;
	КонецЕсли;
	
	Если Объект.ПриходныеОрдера.Количество() > 0 Тогда
		Если Вопрос("Табличная часть будет перезаполнена. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет ТОгда
		    Возврат;
		КонецЕсли;
		Объект.ПриходныеОрдера.Очистить();
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДатаНачала"			, Объект.ДатаНачала);
	СтруктураПараметров.Вставить("ДатаОкончания"		, Объект.ДатаОкончания);
	СтруктураПараметров.Вставить("ОрганизацияПолучатель", Объект.ОрганизацияПолучатель);
	СтруктураПараметров.Вставить("Перевозчик"			, Объект.Перевозчик);
	СтруктураПараметров.Вставить("Водитель"				, Объект.ОтветственныйЗаПеревозку);
	
	ПриходныеОрдераЗаполнитьСервер(СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриходныеОрдераЗаполнитьВодителей(Команда)
	
	Если Объект.ПриходныеОрдера.Количество() = 0 Тогда
	    Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		Сообщить("Не указана дата начала периода!");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		Сообщить("Не указана дата окончания периода!");
		Возврат;
	КонецЕсли;
	
	//
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("АктПеревозчика", Объект.Ссылка);
	
	ОткрытьФормуМодально("Обработка.ЗаполнениеВодителейВАктеПеревозчика.Форма.Форма", ПараметрыФормы, ЭтаФорма);
	
	ЭтаФорма.ОбновитьОтображениеДанных();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьАвтомобильВДокументе(мДокумент)
	
	Возврат мДокумент.Автомобиль;
	
КонецФункции

&НаКлиенте
Процедура ПриходныеОрдераПриходныйОрдерПриИзменении(Элемент)
	
	ТекДанные = Элементы.ПриходныеОрдера.ТекущиеДанные;
	ТекДанные.Автомобиль = ПолучитьАвтомобильВДокументе(ТекДанные.ПриходныйОрдер);
	
КонецПроцедуры
