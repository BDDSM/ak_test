//+++АК LAGP 2018.06.26 ИП-00018465.04 Создание объекта. 
//Документ предназначен для "гашения" регистра накопления "Расчёты с контрагентами" по измерению "Сделка" со значениями документов ВозвратОтПокупателя, ПоступлениеВБанк, РеализацияТоваровИУслуг. 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МассивПраваРедактированиеРегистраПривязкаСтороннихМагазиновКДоговорам = УправлениеДопПравамиПользователей.ПрочитатьЗначениеПраваПользователя(ПланыВидовХарактеристик.ПраваПользователей.РедактированиеРегистраПривязкаСтороннихМагазиновКДоговорам,Ложь,ПараметрыСеанса.ТекущийПользователь);	
	ПравоПривязкаСтороннихМагазиновКДоговорам = МассивПраваРедактированиеРегистраПривязкаСтороннихМагазиновКДоговорам[0];
	
	Если НЕ ПравоПривязкаСтороннихМагазиновКДоговорам Тогда
		Сообщить("У вас нет дополнительного права ""Редактирование регистра ""Привязка сторонних магазинов к договорам""""");
		Отказ = Истина;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьИтогРТУ();	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Справочники.ДоговорыКонтрагентов.ПолучитьФормуВыбора(,Элемент,);
	ФормаВыбора.ПараметрОтборПоВладельцу = Объект.Контрагент;
	ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Владелец.Доступность = Ложь;
	
	ФормаВыбора.СправочникСписок.Отбор.ВидДоговора.Значение                            = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
	ФормаВыбора.СправочникСписок.Отбор.ВидДоговора.Использование                       = Истина;
	ФормаВыбора.СправочникСписок.Отбор.ВидДоговора.ВидСравнения                        = ВидСравнения.Равно;

	ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОстаткам(Команда)
	
	ТаблицаНакладныхЭксель.Очистить();
	ЗаполнитьТЧНаСервере();
	ЗаполнитьИтогРТУ();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИзЭкселя(Команда)
	
	ТаблицаНакладныхЭксель.Очистить();
	
	ОткрытьФормуМодально("Документ.РаспределениеПлатежей.Форма.ФормаЗагрузкиЭксель", , ЭтаФорма);
	
	Если ТаблицаНакладныхЭксель.Количество() > 0 Тогда	
		ЗаполнитьТЧНаСервере();	
			                   
		ЗаполнитьИтогРТУ();
		ЭтаФорма.ОбновитьОтображениеДанных();
	КонецЕсли;	

КонецПроцедуры

Процедура ЗаполнитьТЧНаСервере() Экспорт
		
	Объект.ТаблицаРаспределяемыхДокументов.Очистить();
			
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РасчетыСКонтрагентамиОстатки.Сделка,
		|	РасчетыСКонтрагентамиОстатки.СуммаОстаток,
		|	РасчетыСКонтрагентамиОстатки.Сделка.Дата КАК СделкаДата,
		|	РасчетыСКонтрагентамиОстатки.Сделка.НомерИсходящегоДокумента КАК НомерИсходящегоДокумента
		|ИЗ
		|	РегистрНакопления.РасчетыСКонтрагентами.Остатки(
		|			&ДатаОстатка,
		|			(Сделка ССЫЛКА Документ.РеализацияТоваровУслуг
		|				ИЛИ Сделка ССЫЛКА Документ.ВозвратТоваровОтПокупателя
		|				ИЛИ Сделка ССЫЛКА Документ.ПоступлениеВБанк)
		|				И Контрагент = &Контрагент
		|				И Организация = &Организация
		|				И Сделка.ДоговорКонтрагента = &ДоговорКонтрагента) КАК РасчетыСКонтрагентамиОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	СделкаДата";
	
	Запрос.УстановитьПараметр("ДатаОстатка",	 	ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ПлатежныйДокумент, "Дата"));
	Запрос.УстановитьПараметр("ДоговорКонтрагента", Объект.ДоговорКонтрагента);
	Запрос.УстановитьПараметр("Контрагент", 		Объект.Контрагент);
	Запрос.УстановитьПараметр("Организация", 		Объект.Организация);
	
	Если ЗначениеЗаполнено(ТаблицаНакладныхЭксель) Тогда
		Сообщить("Поиск по номерам накладных из файла EXCEL.");
		ТаблицаИзЭкселя = ТаблицаНакладныхЭксель.Выгрузить();
		ТаблицаИзЭкселя.Свернуть("НомерНакладной", "СуммаНакладной");
		МассивНомеровНакладных = ТаблицаИзЭкселя.ВыгрузитьКолонку("НомерНакладной");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, 
		"				И Сделка.ДоговорКонтрагента = &ДоговорКонтрагента", 
		"				И Сделка.ДоговорКонтрагента = &ДоговорКонтрагента" + Символы.ПС + "				И Сделка.НомерИсходящегоДокумента В (&НомераНакладных)");
		Запрос.УстановитьПараметр("НомераНакладных", МассивНомеровНакладных);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ЗначениеЗаполнено(ТаблицаНакладныхЭксель) Тогда
		Сообщить("Найдено " + ВыборкаДетальныеЗаписи.Количество() + " элементов!");	
	КонецЕсли;	
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл		
		НоваяСтрока = Объект.ТаблицаРаспределяемыхДокументов.Добавить();	
		НоваяСтрока.Сделка 			= ВыборкаДетальныеЗаписи.Сделка;
		НоваяСтрока.СуммаОстаток 	= ?(ВыборкаДетальныеЗаписи.СуммаОстаток < 0, -ВыборкаДетальныеЗаписи.СуммаОстаток, ВыборкаДетальныеЗаписи.СуммаОстаток);
		НоваяСтрока.ВидДокумента 	= ТипЗнч(ВыборкаДетальныеЗаписи.Сделка);
		
		Если ЗначениеЗаполнено(ТаблицаНакладныхЭксель) Тогда
			НайденнаяСтрокаЭксель = ТаблицаИзЭкселя.Найти(ВыборкаДетальныеЗаписи.НомерИсходящегоДокумента, "НомерНакладной");
			Если НЕ НайденнаяСтрокаЭксель = Неопределено Тогда
				Если НайденнаяСтрокаЭксель.СуммаНакладной > ВыборкаДетальныеЗаписи.СуммаОстаток Тогда
					Сообщить("Для накладной " + ВыборкаДетальныеЗаписи.НомерИсходящегоДокумента + " вносимая сумма в EXCEL больше суммы остатка по регистру. Установлена сумма вносимая по остатку в регистре.");
					НоваяСтрока.СуммаРаспределяемая = ВыборкаДетальныеЗаписи.СуммаОстаток;
				ИначеЕсли НайденнаяСтрокаЭксель.СуммаНакладной = ВыборкаДетальныеЗаписи.СуммаОстаток Тогда
					НоваяСтрока.СуммаРаспределяемая = ВыборкаДетальныеЗаписи.СуммаОстаток;
				Иначе
					Сообщить("Для накладной " + ВыборкаДетальныеЗаписи.НомерИсходящегоДокумента + " вносимая сумма в EXCEL меньше суммы остатка по регистру.");
					НоваяСтрока.СуммаРаспределяемая = НайденнаяСтрокаЭксель.СуммаНакладной;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИтогРТУ()
	
	СуммаРеализаций = ПолучитьСуммуТаблицыНаСервере("Реализация товаров и услуг");
	СуммаВозвратов 	= ПолучитьСуммуТаблицыНаСервере("Возврат товаров от покупателя");
	
	Если СуммаРеализаций > 0 Тогда
		Элементы.НадписьСуммаРеализаций.Заголовок = "Сумма реализаций: " + СуммаРеализаций;
	Иначе
		Элементы.НадписьСуммаРеализаций.Заголовок = "";
	КонецЕсли;	
	
	Если СуммаВозвратов > 0 Тогда
		Элементы.НадписьСуммаВозвратов.Заголовок = "Сумма возвратов: " + СуммаВозвратов;
	Иначе
		Элементы.НадписьСуммаВозвратов.Заголовок = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ПлатежныйДокумент) Тогда
		ОстатокПлатёжногоДокумента = Документы.РаспределениеПлатежей.ПолучитьОстатокПлатёжногоДокумента(Объект.ПлатежныйДокумент, Новый Граница(Объект.ПлатежныйДокумент.МоментВремени(), ВидГраницы.Исключая), Объект.Ссылка);	//+++АК LAGP 2018.07.06 ИП-00019118.02 Проверяются остатки не включая движения документа	
		
		Элементы.СуммаПлатежногоДокумента.Заголовок = "Остаток по ПД: " + ОстатокПлатёжногоДокумента + ". ";
		
		СуммаВносимых = 0;
		Для каждого СтрокаТаблицыРаспределяемыхДокументов из Объект.ТаблицаРаспределяемыхДокументов Цикл		
			СуммаВносимых = СуммаВносимых + ?(ТипЗнч(СтрокаТаблицыРаспределяемыхДокументов.Сделка) = Тип("ДокументСсылка.РеализацияТоваровУслуг"), СтрокаТаблицыРаспределяемыхДокументов.СуммаРаспределяемая, -СтрокаТаблицыРаспределяемыхДокументов.СуммаРаспределяемая);			
		КонецЦикла;	
		
		Если СуммаВносимых > 0 Тогда	
		СуммаПлатежногоДокументаПосле = ОстатокПлатёжногоДокумента - СуммаВносимых;
		Элементы.НадписьОстатокПлатёжногоДокумента.Заголовок = "Сумма к списанию с ПД: " + СуммаВносимых;
		Элементы.СуммаПлатежногоДокументаПосле.Заголовок	 = "Остаток по ПД после проведения: " + СуммаПлатежногоДокументаПосле;
		
		Если ЗначениеЗаполнено(Объект.ПлатежныйДокумент) И СуммаВносимых > ОстатокПлатёжногоДокумента Тогда
			Элементы.НадписьОстатокПлатёжногоДокумента.Заголовок  = Элементы.НадписьОстатокПлатёжногоДокумента.Заголовок + ". Превышение остатка на " + (СуммаВносимых - ОстатокПлатёжногоДокумента) + "!";
			Элементы.НадписьОстатокПлатёжногоДокумента.ЦветТекста = WebЦвета.Красный;
		Иначе
			Элементы.НадписьОстатокПлатёжногоДокумента.ЦветТекста = WebЦвета.Черный;
		КонецЕсли;	
	Иначе	
		Элементы.НадписьОстатокПлатёжногоДокумента.Заголовок 	= "";
		Элементы.НадписьОстатокПлатёжногоДокумента.ЦветТекста = WebЦвета.Черный;
	КонецЕсли;	
	Иначе
		Сообщить("Платёжный документ не выбран!");
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ТаблицаРаспределяемыхДокументовСуммаРаспределяемаяПриИзменении(Элемент)
	
	ЗаполнитьИтогРТУ();	
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВозвраты(Команда)
		
	ТаблицаВозвратовИзДополнительнойФормы = ОткрытьФормуМодально("Документ.РаспределениеПлатежей.Форма.ФормаДобавленияВозвратов", , ЭтаФорма);
	Если ЗначениеЗаполнено(ТаблицаВозвратовИзДополнительнойФормы) Тогда
		Для каждого СтрокаВозврата Из ТаблицаВозвратовИзДополнительнойФормы Цикл
			НоваяСтрокаСделок = Объект.ТаблицаРаспределяемыхДокументов.Добавить();
			НоваяСтрокаСделок.Сделка 				= СтрокаВозврата.ВозвратТоваровОтПокупателя;
			НоваяСтрокаСделок.СуммаОстаток 			= СтрокаВозврата.СуммаОстаткаПоРегистру;
			НоваяСтрокаСделок.СуммаРаспределяемая 	= СтрокаВозврата.СуммаОстаткаПоРегистру;
			НоваяСтрокаСделок.ВидДокумента 			= ТипЗнч(СтрокаВозврата.ВозвратТоваровОтПокупателя);
		КонецЦикла;	
	КонецЕсли;	

	ЗаполнитьИтогРТУ();
	ЭтаФорма.ОбновитьОтображениеДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатежныйДокументНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Документы.ПоступлениеВБанк.ПолучитьФормуВыбора(,Элемент,);
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ФормаВыбора.ДокументСписок.Отбор.Организация.Значение                            = Объект.Организация;
		ФормаВыбора.ДокументСписок.Отбор.Организация.Использование                       = Истина;
		ФормаВыбора.ДокументСписок.Отбор.Организация.ВидСравнения                        = ВидСравнения.Равно;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
		ФормаВыбора.ДокументСписок.Отбор.Контрагент.Значение                            = Объект.Контрагент;
		ФормаВыбора.ДокументСписок.Отбор.Контрагент.Использование                       = Истина;
		ФормаВыбора.ДокументСписок.Отбор.Контрагент.ВидСравнения                        = ВидСравнения.Равно;
	КонецЕсли;
			
	ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСуммуТаблицыНаСервере(ВидДокументов)
	
	СтрокиПоОтбору = Объект.ТаблицаРаспределяемыхДокументов.НайтиСтроки(Новый Структура("ВидДокумента", ВидДокументов));
	
	СуммаРезультат = 0;
	Если СтрокиПоОтбору.Количество() > 0 Тогда
		Для каждого СтрокаПоОтбора Из СтрокиПоОтбору Цикл
			СуммаРезультат = СуммаРезультат + СтрокаПоОтбора.СуммаРаспределяемая;
		КонецЦикла;	
	КонецЕсли;	
	
	Возврат СуммаРезультат;
	
КонецФункции	

&НаКлиенте
Процедура ТаблицаРаспределяемыхДокументовПриИзменении(Элемент)
	
	ЗаполнитьИтогРТУ();
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатежныйДокументПриИзменении(Элемент)
	
	ЗаполнитьИтогРТУ();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРаспределяемыхДокументовРаспределяемыйДокументОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Элемент.Родитель.ТекущиеДанные.ВидДокумента = ТипЗнч(ВыбранноеЗначение);
	Если ЗначениеЗаполнено(ВыбранноеЗначение) И ТипЗнч(ВыбранноеЗначение) <> Тип("Тип") Тогда
		СуммаОстаток = Документы.РаспределениеПлатежей.ПолучитьОстатокПлатёжногоДокумента(ВыбранноеЗначение, Новый Граница(ВыбранноеЗначение.МоментВремени(), ВидГраницы.Исключая), Объект.Ссылка);  //+++АК LAGP 2018.07.06 ИП-00019118.02 Проверяются остатки не включая движения документа
		Элемент.Родитель.ТекущиеДанные.СуммаОстаток = ?(СуммаОстаток < 0, -СуммаОстаток, СуммаОстаток);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРаспределяемыхДокументовСуммаОстатокПриИзменении(Элемент)
	
	ЗаполнитьИтогРТУ();
	
КонецПроцедуры
