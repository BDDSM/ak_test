
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 07.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Ввод в эксплуатацию");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
    	Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(Объект.Ссылка.ПолучитьОбъект(), ЭтаФорма);
	КонецЕсли;			
		
	УстановитьУсловноеОформление();	
	ЗаполнитьРеквизитыОС();
		
КонецПроцедуры

Процедура УстановитьУсловноеОформление()

	Элемент = ЭтаФорма.УсловноеОформление;	
	
КонецПроцедуры	
	
Процедура ЗаполнитьРеквизитыОС()

	СписокОС = Объект.Оборудование.Выгрузить().ВыгрузитьКолонку("ОсновноеСредство");
	РеквизитыОС = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(СписокОС, "АмортизационнаяГруппа,ГруппаОС,КодПоОКОФ,инвентарныйНомер,ВидНМА");
	
	Для каждого СтрокаОС из Объект.Оборудование Цикл
		
		ЗаполнитьРеквизитыОСВСтроке(СтрокаОС, РеквизитыОС);	
		
	КонецЦикла;	
	
КонецПроцедуры	

Процедура ЗаполнитьРеквизитыОСВСтроке(СтрокаОС, РеквизитыОС)
	
	ЗначенияРеквизитовОС = РеквизитыОС.Получить(СтрокаОС.ОсновноеСредство);
	
	Если  СтрокаОС.СписываетсяВМоментВвода Тогда
		
		СтрокаОС.АмортизационнаяГруппаОС = "Не используется";
		СтрокаОС.ГруппаОС                = "Не используется";
		СтрокаОС.КодПоОКОФ               = "Не используется";	
		СтрокаОС.СчетУчета               = "Не используется";
		СтрокаОС.СрокПолезногоИспользования = "";
		
	Иначе
		
		Если ЗначениеЗаполнено(СтрокаОС.ОсновноеСредство) Тогда			
			
			СтрокаОС.АмортизационнаяГруппаОС = ЗначенияРеквизитовОС["АмортизационнаяГруппа"];
			СтрокаОС.ГруппаОС                = ЗначенияРеквизитовОС["ГруппаОС"];
			СтрокаОС.КодПоОКОФ               = ЗначенияРеквизитовОС["КодПоОКОФ"];
			СтрокаОС.ВидНМА 				 = ЗначенияРеквизитовОС["ВидНМА"];
			
		КонецЕсли;	
	
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(СтрокаОС.ОсновноеСредство) Тогда	
		СтрокаОС.ИнвентарныйНомер = ЗначенияРеквизитовОС["инвентарныйНомер"];
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура Заполнить(Команда)
	
	//+++АК Susk (Суслин К.В.) 2018.10.08 ИП-00020055
	Если НЕ ЗначениеЗаполнено(Объект.ВидОперации) И Объект.Дата >= Дата("20180901") Тогда
		Предупреждение("Необходимо выбрать вид операции для заполнения документа!");
		Возврат;
	КонецЕсли;
	//---АК Susk (Суслин К.В.) 	 
	
	Если Объект.Проведен Тогда
		Общегоназначения.СообщитьОбОшибке("Для перезаполнения необходимо отменить проведение документа");
	//+++AK susk	
	ИначеЕсли Объект.Ссылка.Пустая() Тогда
		Предупреждение("Для заполнения следует записать документ!");
	Иначе	
	
		Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийВводВЭксплуатацию.ВводВЭксплуатациюОС") ИЛИ Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийВводВЭксплуатацию.ПустаяСсылка") Тогда
			ЗаполнитьОборудованиеНаСервере();
			ПроверитьНекорректныеДопРасходы();
		ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийВводВЭксплуатацию.ВводВЭксплуатациюНМА") Тогда
			ЗаполнитьНМАНаСервере();		
		КонецЕсли;				
	//---АК Susk (Суслин К.В.) 
		
		ЗаполнитьРеквизитыОС();
		ОбновитьПодвалТаблицы();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОборудованиеНаСервере()
	
	Запрос = Новый Запрос;
	
	//+++АК Susk (Суслин К.В.) 2018.07.10 ИП-00019167
	
	#Область ЗаполнениеВводаСтарыйЗапрос
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ПринятыеКУчетуОССрезПоследних.ОсновноеСредство
	//               |ПОМЕСТИТЬ ПринятыеКУчетуОС
	//               |ИЗ
	//               |	РегистрСведений.ПринятыеКУчетуОС.СрезПоследних(, ) КАК ПринятыеКУчетуОССрезПоследних
	//               |ГДЕ
	//               |	ПринятыеКУчетуОССрезПоследних.Организация = &Организация
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	СостояниеОССрезПоследних.ОсновноеСредство,
	//               |	СостояниеОССрезПоследних.Эксплуатируется,
	//               |	СостояниеОССрезПоследних.Местоположение,
	//               |	СостояниеОССрезПоследних.Период
	//               |ПОМЕСТИТЬ НеВведенныеВЭксплуатацию
	//               |ИЗ
	//               |	РегистрСведений.СостояниеОС.СрезПоследних(
	//               |			&ДатаОкончания,
	//               |			НЕ ОсновноеСредство В
	//               |					(ВЫБРАТЬ
	//               |						ПринятыеКУчетуОС.ОсновноеСредство
	//               |					ИЗ
	//               |						ПринятыеКУчетуОС)) КАК СостояниеОССрезПоследних
	//               |ГДЕ
	//               |	ВЫБОР
	//               |			КОГДА СостояниеОССрезПоследних.Местоположение ССЫЛКА Справочник.Склады
	//               |				ТОГДА СостояниеОССрезПоследних.Местоположение.Владелец.id_TT = 11595
	//               |						ИЛИ СостояниеОССрезПоследних.Эксплуатируется
	//               |			ИНАЧЕ ИСТИНА
	//               |		КОНЕЦ
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	НеВведенныеВЭксплуатацию.ОсновноеСредство,
	//               |	НеВведенныеВЭксплуатацию.Местоположение,
	//               |	НеВведенныеВЭксплуатацию.Период
	//               |ПОМЕСТИТЬ ЭксплуатиретсяНаСкладе
	//               |ИЗ
	//               |	НеВведенныеВЭксплуатацию КАК НеВведенныеВЭксплуатацию
	//               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//               |			СостояниеОС.ОсновноеСредство КАК ОсновноеСредство,
	//               |			МАКСИМУМ(СостояниеОС.Эксплуатируется) КАК Эксплуатируется
	//               |		ИЗ
	//               |			РегистрСведений.СостояниеОС КАК СостояниеОС
	//               |		ГДЕ
	//               |			СостояниеОС.Эксплуатируется = ИСТИНА
	//               |		
	//               |		СГРУППИРОВАТЬ ПО
	//               |			СостояниеОС.ОсновноеСредство) КАК Эксплуатировалось
	//               |		ПО НеВведенныеВЭксплуатацию.ОсновноеСредство = Эксплуатировалось.ОсновноеСредство
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	//               |	ЛистУчета.ТорговаяТочка,
	//               |	ИСТИНА КАК ТочкаРаботает
	//               |ПОМЕСТИТЬ РаботающиеТочки
	//               |ИЗ
	//               |	Документ.ЛистУчета КАК ЛистУчета
	//               |ГДЕ
	//               |	ЛистУчета.Проведен = ИСТИНА
	//               |	И ЛистУчета.Дата < &ДатаОкончания
	//               |	И ЛистУчета.Дата > &ДатаНачала
	//               |	И ЛистУчета.ТорговаяТочка.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	НеВведенныеВЭксплуатацию.ОсновноеСредство,
	//               |	НеВведенныеВЭксплуатацию.Местоположение,
	//               |	НеВведенныеВЭксплуатацию.Период,
	//               |	ЕСТЬNULL(РаботающиеТочки.ТочкаРаботает, ЛОЖЬ) КАК ТочкаРаботает
	//               |ПОМЕСТИТЬ НеВведеноВЭксплуатациюВРаботающихТочках
	//               |ИЗ
	//               |	НеВведенныеВЭксплуатацию КАК НеВведенныеВЭксплуатацию
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ РаботающиеТочки КАК РаботающиеТочки
	//               |		ПО (НеВведенныеВЭксплуатацию.Местоположение = РаботающиеТочки.ТорговаяТочка
	//               |				ИЛИ НеВведенныеВЭксплуатацию.Местоположение.Владелец = РаботающиеТочки.ТорговаяТочка)
	//               |ГДЕ
	//               |	НЕ НеВведенныеВЭксплуатацию.ОсновноеСредство В
	//               |				(ВЫБРАТЬ
	//               |					ЭксплуатиретсяНаСкладе.ОсновноеСредство
	//               |				ИЗ
	//               |					ЭксплуатиретсяНаСкладе)
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ЭксплуатиретсяНаСкладе.Период,
	//               |	ЭксплуатиретсяНаСкладе.ОсновноеСредство,
	//               |	ЭксплуатиретсяНаСкладе.Местоположение,
	//               |	ИСТИНА КАК ТребуетсяСписание
	//               |ПОМЕСТИТЬ Результат
	//               |ИЗ
	//               |	ЭксплуатиретсяНаСкладе КАК ЭксплуатиретсяНаСкладе
	//               |
	//               |ОБЪЕДИНИТЬ ВСЕ
	//               |
	//               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	//               |	НеВведеноВЭксплуатациюВРаботающихТочках.Период,
	//               |	НеВведеноВЭксплуатациюВРаботающихТочках.ОсновноеСредство,
	//               |	НеВведеноВЭксплуатациюВРаботающихТочках.Местоположение,
	//               |	ВЫБОР
	//               |		КОГДА НеВведеноВЭксплуатациюВРаботающихТочках.Местоположение.Владелец.id_TT = 11595
	//               |			ТОГДА ИСТИНА
	//               |		ИНАЧЕ НеВведеноВЭксплуатациюВРаботающихТочках.ТочкаРаботает
	//               |	КОНЕЦ
	//               |ИЗ
	//               |	НеВведеноВЭксплуатациюВРаботающихТочках КАК НеВведеноВЭксплуатациюВРаботающихТочках
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ФинансовыйДвиженияССубконто.Субконто1 КАК ОсновноеСредство,
	//               |	СУММА(ФинансовыйДвиженияССубконто.СуммаОстаток) КАК ПервоначальнаяСтоимость,
	//               |	ФинансовыйДвиженияССубконто.Счет КАК СчетУчета
	//               |ПОМЕСТИТЬ СтоимостьОС
	//               |ИЗ
	//               |	РегистрБухгалтерии.Финансовый.Остатки(
	//               |			&МоментВремени,
	//               |			Счет В (&СчетаУчетаОСМСФО),
	//               |			,
	//               |			Субконто1 В
	//               |					(ВЫБРАТЬ
	//               |						Результат.ОсновноеСредство
	//               |					ИЗ
	//               |						Результат)
	//               |				И Организация = &Организация) КАК ФинансовыйДвиженияССубконто
	//               |
	//               |СГРУППИРОВАТЬ ПО
	//               |	ФинансовыйДвиженияССубконто.Субконто1,
	//               |	ФинансовыйДвиженияССубконто.Счет
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ПринятыеКУчетуОССрезПоследних.ОсновноеСредство.Номенклатура КАК Номенклатура,
	//               |	ЕСТЬNULL(ПринятыеКУчетуОССрезПоследних.СрокАмортизации, 0) КАК СрокАмортизации,
	//               |	ЕСТЬNULL(ПринятыеКУчетуОССрезПоследних.АмортизационнаяГруппа, ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПустаяСсылка)) КАК АмортизационнаяГруппа,
	//               |	СУММА(1) КАК Количество
	//               |ПОМЕСТИТЬ втСтатистика
	//               |ИЗ
	//               |	РегистрСведений.ПринятыеКУчетуОС.СрезПоследних(, ) КАК ПринятыеКУчетуОССрезПоследних
	//               |
	//               |СГРУППИРОВАТЬ ПО
	//               |	ПринятыеКУчетуОССрезПоследних.ОсновноеСредство.Номенклатура,
	//               |	ПринятыеКУчетуОССрезПоследних.СрокАмортизации,
	//               |	ПринятыеКУчетуОССрезПоследних.АмортизационнаяГруппа
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ТаблицаМаксимум.Номенклатура,
	//               |	МАКСИМУМ(втСтатистика.СрокАмортизации) КАК СрокАмортизации,
	//               |	МАКСИМУМ(втСтатистика.АмортизационнаяГруппа) КАК АмортизационнаяГруппа
	//               |ПОМЕСТИТЬ втРезультатСтатистика
	//               |ИЗ
	//               |	втСтатистика КАК втСтатистика
	//               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//               |			втСтатистика.Номенклатура КАК Номенклатура,
	//               |			МАКСИМУМ(втСтатистика.Количество) КАК Максимум
	//               |		ИЗ
	//               |			втСтатистика КАК втСтатистика
	//               |		
	//               |		СГРУППИРОВАТЬ ПО
	//               |			втСтатистика.Номенклатура) КАК ТаблицаМаксимум
	//               |		ПО втСтатистика.Номенклатура = ТаблицаМаксимум.Номенклатура
	//               |			И втСтатистика.Количество = ТаблицаМаксимум.Максимум
	//               |
	//               |СГРУППИРОВАТЬ ПО
	//               |	ТаблицаМаксимум.Номенклатура
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	&ДатаВвода КАК ДатаВвода,
	//               |	Результат.ОсновноеСредство,
	//               |	Результат.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
	//               |	Результат.Местоположение,
	//               |	СтоимостьОС.ПервоначальнаяСтоимость,
	//               |	ВЫБОР
	//               |		КОГДА СтоимостьОС.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.Инвентарь)
	//               |			ТОГДА ИСТИНА
	//               |		ИНАЧЕ ЛОЖЬ
	//               |	КОНЕЦ КАК СписываетсяВМоментВвода,
	//               |	ВЫБОР
	//               |		КОГДА ЕСТЬNULL(Результат.ОсновноеСредство.Номенклатура.СрокПолезногоИспользования, 0) > 0
	//               |			ТОГДА Результат.ОсновноеСредство.Номенклатура.СрокПолезногоИспользования
	//               |		ИНАЧЕ втРезультатСтатистика.СрокАмортизации
	//               |	КОНЕЦ КАК СрокПолезногоИспользования,
	//               |	втРезультатСтатистика.АмортизационнаяГруппа,
	//               |	ВЫБОР
	//               |		КОГДА ЕСТЬNULL(СтоимостьОС.ПервоначальнаяСтоимость, 0) > &СтоимостьОСПо0110
	//               |			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации)
	//               |		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000)
	//               |	КОНЕЦ КАК СчетУчета,
	//               |	Результат.Период КАК ДатаПринятияКУчету
	//               |ИЗ
	//               |	Результат КАК Результат
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьОС КАК СтоимостьОС
	//               |		ПО Результат.ОсновноеСредство = СтоимостьОС.ОсновноеСредство
	//               |		ЛЕВОЕ СОЕДИНЕНИЕ втРезультатСтатистика КАК втРезультатСтатистика
	//               |		ПО Результат.ОсновноеСредство.Номенклатура = втРезультатСтатистика.Номенклатура
	//               |ГДЕ
	//               |	(Результат.ТребуетсяСписание = ИСТИНА
	//               |			ИЛИ СтоимостьОС.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.Инвентарь))
	//               |	И СтоимостьОС.ПервоначальнаяСтоимость > 0";
	#КонецОбласти
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	0 КАК Цифра
	               |ПОМЕСТИТЬ ТЗ_Цифры
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	1
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	2
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	3
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	4
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	5
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	6
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	7
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	8
	               |
	               |ОБЪЕДИНИТЬ
	               |
	               |ВЫБРАТЬ
	               |	9
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	10 * ТЗ_Десятки.Цифра + ТЗ_Единицы.Цифра КАК Число
	               |ПОМЕСТИТЬ ТЗ_Числа
	               |ИЗ
	               |	ТЗ_Цифры КАК ТЗ_Десятки,
	               |	ТЗ_Цифры КАК ТЗ_Единицы
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, МЕСЯЦ), ДЕНЬ, ТЗ_Числа.Число) КАК ПериодДень
	               |ПОМЕСТИТЬ ТЗ_Даты
	               |ИЗ
	               |	ТЗ_Числа КАК ТЗ_Числа
	               |ГДЕ
	               |	ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ДатаНачала, МЕСЯЦ), ДЕНЬ, ТЗ_Числа.Число) МЕЖДУ &ДатаНачала И &ДатаОкончания
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗ_Даты.ПериодДень,
	               |	СоответствияСтатейСчетов.СтатьяДР,
	               |	СоответствияСтатейСчетов.СтатьяДДС,
	               |	СоответствияСтатейСчетов.Счет,
	               |	СоответствияСтатейСчетов.СтатьяДРМСФО,
	               |	СоответствияСтатейСчетов.ВидОперацииЗаявки,
	               |	СоответствияСтатейСчетов.Период
	               |ПОМЕСТИТЬ СоответствияСтатейСчетовПоДням
	               |ИЗ
	               |	ТЗ_Даты КАК ТЗ_Даты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствияСтатейСчетов КАК СоответствияСтатейСчетов
	               |		ПО ТЗ_Даты.ПериодДень >= СоответствияСтатейСчетов.Период
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(СоответствияСтатейСчетовПоДням.Период) КАК Период,
	               |	СоответствияСтатейСчетовПоДням.СтатьяДДС,
	               |	СоответствияСтатейСчетовПоДням.ПериодДень
	               |ПОМЕСТИТЬ МаксимумДатыСоответствиеСтатей
	               |ИЗ
	               |	СоответствияСтатейСчетовПоДням КАК СоответствияСтатейСчетовПоДням
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СоответствияСтатейСчетовПоДням.СтатьяДДС,
	               |	СоответствияСтатейСчетовПоДням.ПериодДень
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(СоответствияСтатейСчетовПоДням.СтатьяДР) КАК СтатьяДР,
	               |	СоответствияСтатейСчетовПоДням.ПериодДень КАК ПериодДень,
	               |	СоответствияСтатейСчетовПоДням.СтатьяДДС
	               |ПОМЕСТИТЬ СоответствиеСтатейИСчетов
	               |ИЗ
	               |	МаксимумДатыСоответствиеСтатей КАК МаксимумДатыСоответствиеСтатей
	               |		ЛЕВОЕ СОЕДИНЕНИЕ СоответствияСтатейСчетовПоДням КАК СоответствияСтатейСчетовПоДням
	               |		ПО МаксимумДатыСоответствиеСтатей.Период = СоответствияСтатейСчетовПоДням.Период
	               |			И МаксимумДатыСоответствиеСтатей.СтатьяДДС = СоответствияСтатейСчетовПоДням.СтатьяДДС
	               |			И МаксимумДатыСоответствиеСтатей.ПериодДень = СоответствияСтатейСчетовПоДням.ПериодДень
	               |ГДЕ
	               |	НЕ СоответствияСтатейСчетовПоДням.ПериодДень ЕСТЬ NULL
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СоответствияСтатейСчетовПоДням.ПериодДень,
	               |	СоответствияСтатейСчетовПоДням.СтатьяДДС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ТЗ_Цифры
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ТЗ_Числа
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ТЗ_Даты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ СоответствияСтатейСчетовПоДням
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ МаксимумДатыСоответствиеСтатей
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПринятыеКУчетуОССрезПоследних.ОсновноеСредство
	               |ПОМЕСТИТЬ ПринятыеКУчетуОС
	               |ИЗ
	               |	РегистрСведений.ПринятыеКУчетуОС.СрезПоследних(, ) КАК ПринятыеКУчетуОССрезПоследних
	               |ГДЕ
	               |	ПринятыеКУчетуОССрезПоследних.Организация = &Организация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СостояниеОССрезПоследних.ОсновноеСредство,
	               |	СостояниеОССрезПоследних.Эксплуатируется,
	               |	СостояниеОССрезПоследних.Местоположение,
	               |	СостояниеОССрезПоследних.Период
	               |ПОМЕСТИТЬ НеВведенныеВЭксплуатацию
	               |ИЗ
	               |	РегистрСведений.СостояниеОС.СрезПоследних(
	               |			&ДатаОкончания,
	               |			НЕ ОсновноеСредство В
	               |					(ВЫБРАТЬ
	               |						ПринятыеКУчетуОС.ОсновноеСредство
	               |					ИЗ
	               |						ПринятыеКУчетуОС)) КАК СостояниеОССрезПоследних
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницыСкладов
	               |			ПО Склады.Владелец = СтруктурныеЕдиницыСкладов.Ссылка
	               |		ПО СостояниеОССрезПоследних.Местоположение = Склады.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	               |		ПО СостояниеОССрезПоследних.Местоположение = СтруктурныеЕдиницы.Ссылка
	               |ГДЕ
	               |	ВЫБОР
	               |			КОГДА СостояниеОССрезПоследних.Местоположение ССЫЛКА Справочник.Склады
	               |				ТОГДА СтруктурныеЕдиницыСкладов.id_TT = 11595
	               |						ИЛИ СостояниеОССрезПоследних.Эксплуатируется
	               |			ИНАЧЕ НЕ СтруктурныеЕдиницы.id_TT = 10947
	               |		КОНЕЦ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НеВведенныеВЭксплуатацию.ОсновноеСредство,
	               |	НеВведенныеВЭксплуатацию.Местоположение,
	               |	НеВведенныеВЭксплуатацию.Период
	               |ПОМЕСТИТЬ ЭксплуатиретсяНаСкладе
	               |ИЗ
	               |	НеВведенныеВЭксплуатацию КАК НеВведенныеВЭксплуатацию
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			СостояниеОС.ОсновноеСредство КАК ОсновноеСредство,
	               |			МАКСИМУМ(СостояниеОС.Эксплуатируется) КАК Эксплуатируется
	               |		ИЗ
	               |			РегистрСведений.СостояниеОС КАК СостояниеОС
	               |		ГДЕ
	               |			СостояниеОС.Эксплуатируется
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			СостояниеОС.ОсновноеСредство) КАК Эксплуатировалось
	               |		ПО НеВведенныеВЭксплуатацию.ОсновноеСредство = Эксплуатировалось.ОсновноеСредство
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ЛистУчета.ТорговаяТочка,
	               |	ИСТИНА КАК ТочкаРаботает
	               |ПОМЕСТИТЬ РаботающиеТочки
	               |ИЗ
	               |	Документ.ЛистУчета КАК ЛистУчета
	               |ГДЕ
	               |	ЛистУчета.Проведен = ИСТИНА
	               |	И ЛистУчета.Дата < &ДатаОкончания
	               |	И ЛистУчета.Дата > &ДатаНачала
	               |	И ЛистУчета.ТорговаяТочка.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НеВведенныеВЭксплуатацию.ОсновноеСредство,
	               |	НеВведенныеВЭксплуатацию.Местоположение,
	               |	НеВведенныеВЭксплуатацию.Период,
	               |	ЕСТЬNULL(РаботающиеТочки.ТочкаРаботает, ЛОЖЬ) КАК ТочкаРаботает
	               |ПОМЕСТИТЬ НеВведеноВЭксплуатациюВРаботающихТочках
	               |ИЗ
	               |	НеВведенныеВЭксплуатацию КАК НеВведенныеВЭксплуатацию
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РаботающиеТочки КАК РаботающиеТочки
	               |		ПО (НеВведенныеВЭксплуатацию.Местоположение = РаботающиеТочки.ТорговаяТочка
	               |				ИЛИ НеВведенныеВЭксплуатацию.Местоположение.Владелец = РаботающиеТочки.ТорговаяТочка)
	               |ГДЕ
	               |	НЕ НеВведенныеВЭксплуатацию.ОсновноеСредство В
	               |				(ВЫБРАТЬ
	               |					ЭксплуатиретсяНаСкладе.ОсновноеСредство
	               |				ИЗ
	               |					ЭксплуатиретсяНаСкладе)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЭксплуатиретсяНаСкладе.Период,
	               |	ЭксплуатиретсяНаСкладе.ОсновноеСредство,
	               |	ЭксплуатиретсяНаСкладе.Местоположение,
	               |	ИСТИНА КАК ТребуетсяСписание
	               |ПОМЕСТИТЬ Результат
	               |ИЗ
	               |	ЭксплуатиретсяНаСкладе КАК ЭксплуатиретсяНаСкладе
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	НеВведеноВЭксплуатациюВРаботающихТочках.Период,
	               |	НеВведеноВЭксплуатациюВРаботающихТочках.ОсновноеСредство,
	               |	НеВведеноВЭксплуатациюВРаботающихТочках.Местоположение,
	               |	ВЫБОР
	               |		КОГДА СтруктурныеЕдиницы.id_TT = 11595
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ НеВведеноВЭксплуатациюВРаботающихТочках.ТочкаРаботает
	               |	КОНЕЦ
	               |ИЗ
	               |	НеВведеноВЭксплуатациюВРаботающихТочках КАК НеВведеноВЭксплуатациюВРаботающихТочках
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	               |			ПО Склады.Владелец = СтруктурныеЕдиницы.Ссылка
	               |		ПО НеВведеноВЭксплуатациюВРаботающихТочках.Местоположение = Склады.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(ФинансовыйДвиженияССубконто.Регистратор) КАК Рег,
	               |	ФинансовыйДвиженияССубконто.СубконтоДт1 КАК ОС
	               |ПОМЕСТИТЬ РегистраторыпоОС
	               |ИЗ
	               |	РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
	               |			ДОБАВИТЬКДАТЕ(&ДатаНачала, МЕСЯЦ, -6),
	               |			&ДатаОкончания,
	               |			Субконто1 В
	               |					(ВЫБРАТЬ
	               |						Результат.ОсновноеСредство
	               |					ИЗ
	               |						Результат)
	               |				И Организация = &Организация
	               |				И Счет В (&СчетаУчетаОСМСФО),
	               |			,
	               |			) КАК ФинансовыйДвиженияССубконто
	               |ГДЕ
	               |	(ФинансовыйДвиженияССубконто.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
	               |			ИЛИ ФинансовыйДвиженияССубконто.Регистратор ССЫЛКА Документ.АвансовыйОтчет)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ФинансовыйДвиженияССубконто.СубконтоДт1
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РегистраторыпоОС.ОС,
	               |	ПоступлениеТоваровУслуг.СтруктурнаяЕдиница,
	               |	ПоступлениеТоваровУслуг.СтатьяДДС,
	               |	ПоступлениеТоваровУслуг.СтатьяЗатрат,
	               |	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслуг.Дата, ДЕНЬ) КАК ДатаДок
	               |ПОМЕСТИТЬ ДанныеПоРегистраторамОС
	               |ИЗ
	               |	РегистраторыпоОС КАК РегистраторыпоОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	               |		ПО РегистраторыпоОС.Рег = ПоступлениеТоваровУслуг.Ссылка
	               |ГДЕ
	               |	РегистраторыпоОС.Рег ССЫЛКА Документ.ПоступлениеТоваровУслуг
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	РегистраторыпоОС.ОС,
	               |	АвансовыйОтчет.СтруктурнаяЕдиница,
	               |	АвансовыйОтчет.СтатьяДДС,
	               |	АвансовыйОтчет.СтатьяЗатрат,
	               |	НАЧАЛОПЕРИОДА(АвансовыйОтчет.Дата, ДЕНЬ)
	               |ИЗ
	               |	РегистраторыпоОС КАК РегистраторыпоОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АвансовыйОтчет КАК АвансовыйОтчет
	               |		ПО РегистраторыпоОС.Рег = АвансовыйОтчет.Ссылка
	               |ГДЕ
	               |	РегистраторыпоОС.Рег ССЫЛКА Документ.АвансовыйОтчет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ РегистраторыПоОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДанныеПоРегистраторамОС.ОС,
	               |	ДанныеПоРегистраторамОС.СтруктурнаяЕдиница,
	               |	ВЫБОР
	               |		КОГДА ДанныеПоРегистраторамОС.СтатьяЗатрат ЕСТЬ NULL
	               |				ИЛИ ДанныеПоРегистраторамОС.СтатьяЗатрат = ЗНАЧЕНИЕ(Справочник.СтатьиДоходовРасходов.ПустаяСсылка)
	               |			ТОГДА ВЫБОР
	               |					КОГДА СоответствиеСтатейИСчетов.СтатьяДР ЕСТЬ NULL
	               |							ИЛИ СоответствиеСтатейИСчетов.СтатьяДР = ЗНАЧЕНИЕ(Справочник.СтатьиДоходовРасходов.ПустаяСсылка)
	               |						ТОГДА ДанныеПоРегистраторамОС.СтатьяДДС.ОсновнаяСтатьяДоходовРасходов
	               |					ИНАЧЕ СоответствиеСтатейИСчетов.СтатьяДР
	               |				КОНЕЦ
	               |		ИНАЧЕ ДанныеПоРегистраторамОС.СтатьяЗатрат
	               |	КОНЕЦ КАК СтатьяДР
	               |ПОМЕСТИТЬ ЦФОСтатьиДрПоОс
	               |ИЗ
	               |	ДанныеПоРегистраторамОС КАК ДанныеПоРегистраторамОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ СоответствиеСтатейИСчетов КАК СоответствиеСтатейИСчетов
	               |		ПО ДанныеПоРегистраторамОС.ДатаДок = СоответствиеСтатейИСчетов.ПериодДень
	               |			И ДанныеПоРегистраторамОС.СтатьяДДС = СоответствиеСтатейИСчетов.СтатьяДДС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ДанныеПоРегистраторамОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ФинансовыйДвиженияССубконто.Субконто1 КАК ОсновноеСредство,
	               |	СУММА(ФинансовыйДвиженияССубконто.СуммаОстаток) КАК ПервоначальнаяСтоимость,
	               |	ФинансовыйДвиженияССубконто.Счет КАК СчетУчета
	               |ПОМЕСТИТЬ СтоимостьОС
	               |ИЗ
	               |	РегистрБухгалтерии.Финансовый.Остатки(
	               |			&МоментВремени,
	               |			Счет В (&СчетаУчетаОСМСФО),
	               |			,
	               |			Субконто1 В
	               |					(ВЫБРАТЬ
	               |						Результат.ОсновноеСредство
	               |					ИЗ
	               |						Результат)
	               |				И Организация = &Организация) КАК ФинансовыйДвиженияССубконто
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ФинансовыйДвиженияССубконто.Субконто1,
	               |	ФинансовыйДвиженияССубконто.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОсновныеСредства.Номенклатура КАК Номенклатура,
	               |	ЕСТЬNULL(ПринятыеКУчетуОССрезПоследних.СрокАмортизации, 0) КАК СрокАмортизации,
	               |	ЕСТЬNULL(ПринятыеКУчетуОССрезПоследних.АмортизационнаяГруппа, ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПустаяСсылка)) КАК АмортизационнаяГруппа,
	               |	СУММА(1) КАК Количество
	               |ПОМЕСТИТЬ втСтатистика
	               |ИЗ
	               |	РегистрСведений.ПринятыеКУчетуОС.СрезПоследних(, ) КАК ПринятыеКУчетуОССрезПоследних
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
	               |		ПО ПринятыеКУчетуОССрезПоследних.ОсновноеСредство = ОсновныеСредства.Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПринятыеКУчетуОССрезПоследних.СрокАмортизации,
	               |	ПринятыеКУчетуОССрезПоследних.АмортизационнаяГруппа,
	               |	ОсновныеСредства.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаМаксимум.Номенклатура,
	               |	МАКСИМУМ(втСтатистика.СрокАмортизации) КАК СрокАмортизации,
	               |	МАКСИМУМ(втСтатистика.АмортизационнаяГруппа) КАК АмортизационнаяГруппа
	               |ПОМЕСТИТЬ втРезультатСтатистика
	               |ИЗ
	               |	втСтатистика КАК втСтатистика
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			втСтатистика.Номенклатура КАК Номенклатура,
	               |			МАКСИМУМ(втСтатистика.Количество) КАК Максимум
	               |		ИЗ
	               |			втСтатистика КАК втСтатистика
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			втСтатистика.Номенклатура) КАК ТаблицаМаксимум
	               |		ПО втСтатистика.Номенклатура = ТаблицаМаксимум.Номенклатура
	               |			И втСтатистика.Количество = ТаблицаМаксимум.Максимум
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТаблицаМаксимум.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	&ДатаВвода КАК ДатаВвода,
	               |	Результат.ОсновноеСредство,
	               |	ОсновныеСредства.ИнвентарныйНомер КАК ИнвентарныйНомер,
	               |	Результат.Местоположение,
	               |	СтоимостьОС.ПервоначальнаяСтоимость,
	               |	ВЫБОР
	               |		КОГДА СтоимостьОС.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.Инвентарь)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК СписываетсяВМоментВвода,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(СпрНоменклатура.СрокПолезногоИспользования, 0) > 0
	               |			ТОГДА СпрНоменклатура.СрокПолезногоИспользования
	               |		ИНАЧЕ втРезультатСтатистика.СрокАмортизации
	               |	КОНЕЦ КАК СрокПолезногоИспользования,
	               |	втРезультатСтатистика.АмортизационнаяГруппа,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(СтоимостьОС.ПервоначальнаяСтоимость, 0) > &СтоимостьОСПо0110
	               |			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации)
	               |		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000)
	               |	КОНЕЦ КАК СчетУчета,
	               |	Результат.Период КАК ДатаПринятияКУчету
	               |ПОМЕСТИТЬ СводнаяРезультат
	               |ИЗ
	               |	Результат КАК Результат
	               |		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьОС КАК СтоимостьОС
	               |		ПО Результат.ОсновноеСредство = СтоимостьОС.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втРезультатСтатистика КАК втРезультатСтатистика
	               |		ПО Результат.ОсновноеСредство.Номенклатура = втРезультатСтатистика.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	               |			ПО ОсновныеСредства.Номенклатура = СпрНоменклатура.Ссылка
	               |		ПО Результат.ОсновноеСредство = ОсновныеСредства.Ссылка
	               |ГДЕ
	               |	(Результат.ТребуетсяСписание = ИСТИНА
	               |			ИЛИ СтоимостьОС.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.Инвентарь))
	               |	И СтоимостьОС.ПервоначальнаяСтоимость > 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ПринятыеКУчетуОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ НеВведенныеВЭксплуатацию
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ЭксплуатиретсяНаСкладе
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ РаботающиеТочки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ НеВведеноВЭксплуатациюВРаботающихТочках
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ Результат
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ СтоимостьОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ втСтатистика
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ втРезультатСтатистика
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СводнаяРезультат.ДатаВвода,
	               |	СводнаяРезультат.ОсновноеСредство,
	               |	СводнаяРезультат.ИнвентарныйНомер,
	               |	СводнаяРезультат.Местоположение,
	               |	СводнаяРезультат.ПервоначальнаяСтоимость,
	               |	СводнаяРезультат.СписываетсяВМоментВвода,
	               |	СводнаяРезультат.СрокПолезногоИспользования,
	               |	СводнаяРезультат.АмортизационнаяГруппа,
	               |	СводнаяРезультат.СчетУчета,
	               |	СводнаяРезультат.ДатаПринятияКУчету,
	               |	ЦФОСтатьиДрПоОс.СтруктурнаяЕдиница КАК ЦФО,
	               |	ЦФОСтатьиДрПоОс.СтатьяДР КАК СтатьяДр
	               |ИЗ
	               |	СводнаяРезультат КАК СводнаяРезультат
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ЦФОСтатьиДрПоОс КАК ЦФОСтатьиДрПоОс
	               |		ПО СводнаяРезультат.ОсновноеСредство = ЦФОСтатьиДрПоОс.ОС";	
	
	Если ЗначениеЗаполнено(Объект.ВременноТекстЗапросаВнешний) Тогда
		// небольшая хитрость, чтобы не ждать обновления.
		Запрос.Текст = Объект.ВременноТекстЗапросаВнешний;
	КонецЕсли;
	//---AK susk				   

	ДатаНачала = НачалоМесяца(Объект.Дата);
	ДатаОкончания = КонецМесяца(Объект.Дата);
	
	//+++AK susk
	Гр = Новый Граница(ВернутьМоментВремени(), ВидГраницы.Исключая);	
	Запрос.УстановитьПараметр("МоментВремени", Гр);
	//---AK susk       
	
	//+++АК Susk (Суслин К.В.) 2018.02.08 ИП-00017835	 
	Запрос.УстановитьПараметр("СтоимостьОСПо0110", АК_УчетМСФО.ВернутьСуммуДляОприходованияОСНа0110(Объект.Дата));
	//---АК Susk (Суслин К.В.) 
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаВвода", ДатаОкончания+1);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("СчетаУчетаОСМСФО", АК_УчетМСФО.СчетаУчетаОС());	
	Запрос.УстановитьПараметр("СписыватьНаРасходы", АК_УчетМСФОПривилегированный.ПолучитьПараметрыУчетаОС().СтоимостьСписания);	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);

	Результат = Запрос.Выполнить().Выгрузить();

	Объект.Оборудование.Загрузить(Результат);	

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПодвалТаблицы()
	
	ИтогоПервоначальнаяСтоимость = Объект.Оборудование.Итог("ПервоначальнаяСтоимость");		
	
КонецПроцедуры	

&НаКлиенте
Процедура ОборудованиеПриИзменении(Элемент)
	ЗаполнитьРеквизитыОС();	
	ОбновитьПодвалТаблицы();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьПодвалТаблицы();
	//+++АК sils 07.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
	//---АК
	
	//+++АК Susk (Суслин К.В.) 2018.10.08 ИП-00020055
	УстановитьВидимостьДоступность();
	мТекущийВидОперации = Объект.ВидОперации;
	//---АК Susk (Суслин К.В.) 	 
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьГруппу(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСрокПолезногоИспользования(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура УстановитьГруппуДляВсех(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСрокПолезногоИспользованияДляВсех(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСрокИГруппу(Команда)
	
	УстановитьСрокИГруппуНачало();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСрокИГруппуНачало()

	//+++АК Susk (Суслин К.В.) 2018.10.08 ИП-00020055	 
	ПараметрыФормы = Новый Структура("ВидОперации", Объект.ВидОперации);	
	Результат = ОткрытьФормуМодально("Документ.ВводВЭксплуатацию.Форма.ФормаЗаполненияТЧ", ПараметрыФормы);		
	//---АК Susk (Суслин К.В.) 
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.РежимЗаполнения = "Не заполненные" Тогда
		
		Для каждого СтрокаТЧ из Объект.Оборудование Цикл
			
			Если НЕ ЗначениеЗаполнено(СтрокаТЧ.СрокПолезногоИспользования) Тогда
				СтрокаТЧ.СрокПолезногоИспользования = Результат.СрокПолезногоИспользования;	
			КонецЕсли;
			
			АК_ОсновныеСредства.УстановитьРеквизитыОС(СтрокаТЧ.ОсновноеСредство,Результат,Ложь);
 			
		КонецЦикла;			
		
	КонецЕсли;	
	
	Если Результат.РежимЗаполнения = "Все" Тогда
		
		Для каждого СтрокаТЧ из Объект.Оборудование Цикл
			
			СтрокаТЧ.СрокПолезногоИспользования = Результат.СрокПолезногоИспользования;				
			АК_ОсновныеСредства.УстановитьРеквизитыОС(СтрокаТЧ.ОсновноеСредство,Результат,Истина);
 			
		КонецЦикла;			
		
	КонецЕсли;
	
	Если Результат.РежимЗаполнения = "Выделенные" Тогда
		
		Для каждого Строка из Элементы.Оборудование.ВыделенныеСтроки Цикл
			
			СтрокаТЧ = Элементы.Оборудование.ДанныеСтроки(Строка);
			АК_ОсновныеСредства.УстановитьРеквизитыОС(СтрокаТЧ.ОсновноеСредство,Результат,Истина);
			СтрокаТЧ.СрокПолезногоИспользования = Результат.СрокПолезногоИспользования;
			
		КонецЦикла;			
		
	КонецЕсли;
	
	ЗаполнитьРеквизитыОС();
	
КонецПроцедуры	

&НаКлиенте
Процедура ОборудованиеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Врег(Поле.Имя) =  Врег("ОборудованиеАмортизационнаяГруппаОС") ИЛИ
			Врег(Поле.Имя) =  Врег("ОборудованиеСрокПолезногоИспользования") ИЛИ
			Врег(Поле.Имя) =  Врег("ОборудованиеГруппаОС") ИЛИ
			//+++АК Susk (Суслин К.В.) 2018.10.24 ИП-00020055			 
			Врег(Поле.Имя) =  Врег("ОборудованиеВидНМА") ИЛИ
			//---АК Susk (Суслин К.В.) 			
			Врег(Поле.Имя) =  Врег("ОборудованиеКодПоОКОФ") Тогда
			
			
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("ВыбранноеПоле",Врег(Поле.Имя)); 
			
		ОткрытьРедактированиеОС(ПараметрыОткрытия);
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРедактированиеОС(ПараметрыОткрытия)
	
  	ВыбраннаяСтрока = Элементы.Оборудование.ТекущиеДанные;
	
	Если  Элементы.Оборудование.ВыделенныеСтроки.Количество() = 1 Тогда	
		ПараметрыОткрытия.Вставить("АмортизационнаяГруппа",ВыбраннаяСтрока.ОсновноеСредство.АмортизационнаяГруппа);
		ПараметрыОткрытия.Вставить("ГруппаОС",ВыбраннаяСтрока.ОсновноеСредство.ГруппаОС);
		ПараметрыОткрытия.Вставить("КодПоОКОФ",ВыбраннаяСтрока.ОсновноеСредство.КодПоОКОФ);
		ПараметрыОткрытия.Вставить("СрокПолезногоИспользования",ВыбраннаяСтрока.СрокПолезногоИспользования);	
		//+++АК Susk (Суслин К.В.) 2018.10.24 ИП-00020055	 
		ПараметрыОткрытия.Вставить("ВидНМА",ВыбраннаяСтрока.ВидНМА);	
		//---АК Susk (Суслин К.В.) 
	Иначе 	
		ПараметрыОткрытия.Вставить("АмортизационнаяГруппа",Перечисления.АмортизационныеГруппы.ПустаяСсылка());
		ПараметрыОткрытия.Вставить("ГруппаОС",Перечисления.ГруппыОС.ПустаяСсылка());
		ПараметрыОткрытия.Вставить("КодПоОКОФ",Справочники.ОбщероссийскийКлассификаторОсновныхФондов.ПустаяСсылка());
		ПараметрыОткрытия.Вставить("СрокПолезногоИспользования",0);	
	КонецЕсли;	
		
	ПараметрыОткрытия.Вставить("ПоказыватьРежим",Ложь);
	
	Результат = ОткрытьФормуМодально("Документ.ВводВЭксплуатацию.Форма.ФормаЗаполненияТЧ",ПараметрыОткрытия);	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураЗаполнения = Новый Структура;
	
	Если ПараметрыОткрытия.ВыбранноеПоле =  Врег("ОборудованиеАмортизационнаяГруппаОС") Тогда 
		СтруктураЗаполнения.Вставить("АмортизационнаяГруппа",Результат.АмортизационнаяГруппа)			
	КонецЕсли;	
		
	Если ПараметрыОткрытия.ВыбранноеПоле =  Врег("ОборудованиеГруппаОС") Тогда 
		СтруктураЗаполнения.Вставить("ГруппаОС",Результат.ГруппаОС)			
	КонецЕсли;	
	
	Если ПараметрыОткрытия.ВыбранноеПоле =  Врег("ОборудованиеКодПоОКОФ") Тогда 
		СтруктураЗаполнения.Вставить("КодПоОКОФ",Результат.КодПоОКОФ)			
	КонецЕсли;	
	
	//+++АК Susk (Суслин К.В.) 2018.10.24 ИП-00020055
	Если ПараметрыОткрытия.ВыбранноеПоле =  Врег("ОборудованиеВидНМА") Тогда 
		СтруктураЗаполнения.Вставить("ВидНМА",Результат.ВидНМА)			
	КонецЕсли;
	//---АК Susk (Суслин К.В.)
	
	Для каждого Строка из Элементы.Оборудование.ВыделенныеСтроки Цикл
		СтрокаТЧ = Элементы.Оборудование.ДанныеСтроки(Строка);
		АК_ОсновныеСредства.УстановитьРеквизитыОС(СтрокаТЧ.ОсновноеСредство,СтруктураЗаполнения,Истина);
	КонецЦикла;
	
	Если ПараметрыОткрытия.ВыбранноеПоле =  Врег("ОборудованиеСрокПолезногоИспользования") Тогда 
		Для каждого Строка из Элементы.Оборудование.ВыделенныеСтроки Цикл
			СтрокаТЧ = Элементы.Оборудование.ДанныеСтроки(Строка);
			СтрокаТЧ.СрокПолезногоИспользования = Результат.СрокПолезногоИспользования;
		КонецЦикла;	
	КонецЕсли;		
	
	ЗаполнитьРеквизитыОС();
	
КонецПроцедуры

&НаКлиенте
Процедура ОборудованиеОсновноеСредствоПриИзменении(Элемент)
	
	СтрокаОС = Элементы.Оборудование.ТекущиеДанные;
	
	СписокОС = Новый Массив;
	СписокОС.Добавить(СтрокаОС.ОсновноеСредство);	
	РеквизитыОС = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(СписокОС, "АмортизационнаяГруппа,ГруппаОС,КодПоОКОФ,инвентарныйНомер");
	
	ЗаполнитьРеквизитыОСВСтроке(СтрокаОС, РеквизитыОС);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ЗаполнитьРеквизитыОС();
	
	//+++AK susk
	
	ТаблицаОборудованиеНеРаспределено = СоздатьРасходныеОрдераПоВиртуальномуСкладу(Истина);
	
	Если ТаблицаОборудованиеНеРаспределено <> Неопределено И ТаблицаОборудованиеНеРаспределено.Количество() <> 0 Тогда
		П = Новый Структура;
		П.Вставить("ТЗРаспределение", ТаблицаОборудованиеНеРаспределено);
		П.Вставить("Ввод", Объект.Ссылка);
		
		Фрм = ПолучитьФорму("Документ.ВводВЭксплуатацию.Форма.ФормаПредвРаспредОСпоВиртСкладам", П);
		Результ = Фрм.ОткрытьМодально();
		
		Если Результ = Ложь Тогда
			УдалитьОборудованиеВиртСклада();
			ЗаписатьВМодуле();
		КонецЕсли;
		
	КонецЕсли;
	
	ПроверитьОборудованиеНеВыгружатьВБУ();
	//---AK susk
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьСчет011(Команда)
	
	УстановитьСчет(ПредопределенноеЗначение("ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации"));
	
КонецПроцедуры

Процедура УстановитьСчет(Счет,ОтборПоСтоимости = Ложь)
	
	Для Каждого СтрокаОС из Объект.Оборудование Цикл
		
		Если ОтборПоСтоимости и СтрокаОС.ПервоначальнаяСтоимость > АК_УчетМСФО.ВернутьСуммуДляОприходованияОСНа0110(Объект.Дата) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаОС.СчетУчета = Счет;
				
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура УстановитьСчет0110(Команда)
	
	УстановитьСчет(ПредопределенноеЗначение("ПланСчетов.Финансовый.ОсновныеСредстваДо100000"));
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСчет0110ДляОСдешевле100000(Команда)
	
	УстановитьСчет(ПредопределенноеЗначение("ПланСчетов.Финансовый.ОсновныеСредстваДо100000"),Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПоОС(Команда)
	
	ТекущаяСтрока = Элементы.Оборудование.ТекущиеДанные;
	ПараметрыФормы = Новый Структура("ОсновноеСредство",ТекущаяСтрока.ОсновноеСредство);
	ОткрытьФорму("Справочник.ОсновныеСредства.Форма.ДокументыПоОС", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчетПоДвижениям(Команда)
	
	ПараметрыОткрытия = Новый Структура("Регистратор",Объект.Ссылка);
	//ПараметрыОткрытия.Вставить("СформироватьПриОткрытии",Истина);	
	ОткрытьФорму("Отчет.ОтчетОДвиженияхДокумента.Форма.ФормаОтчета",ПараметрыОткрытия);
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) старые задачи 
&НаСервере
Функция СоздатьРасходныеОрдераПоВиртуальномуСкладу(ТолькоВернутьДанные = Ложь)
	
	ЗапросОткрытые = Новый Запрос;
	ЗапросОткрытые.Текст = "ВЫБРАТЬ
	                       |	МИНИМУМ(ЛистУчета.Дата) КАК ДатаОткрытия,
	                       |	ЛистУчета.ТорговаяТочка
	                       |ПОМЕСТИТЬ ВТ_ДатыОткрытия
	                       |ИЗ
	                       |	Документ.ЛистУчета КАК ЛистУчета
	                       |ГДЕ
	                       |	ЛистУчета.Проведен
	                       |
	                       |СГРУППИРОВАТЬ ПО
	                       |	ЛистУчета.ТорговаяТочка
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |ВЫБРАТЬ
	                       |	СтруктурныеЕдиницы.Ссылка
	                       |ПОМЕСТИТЬ СводнаяТочки
	                       |ИЗ
	                       |	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	                       |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДатыОткрытия КАК ВТ_ДатыОткрытия
	                       |		ПО СтруктурныеЕдиницы.Ссылка = ВТ_ДатыОткрытия.ТорговаяТочка
	                       |ГДЕ
	                       |	СтруктурныеЕдиницы.ПометкаУдаления = ЛОЖЬ
	                       |	И ВЫБОР
	                       |			КОГДА СтруктурныеЕдиницы.ДатаОткрытия <> ДАТАВРЕМЯ(1, 1, 1)
	                       |					И СтруктурныеЕдиницы.ДатаОткрытия < ДАТАВРЕМЯ(2012, 1, 1)
	                       |				ТОГДА СтруктурныеЕдиницы.ДатаОткрытия
	                       |			ИНАЧЕ ЕСТЬNULL(ВТ_ДатыОткрытия.ДатаОткрытия, ДАТАВРЕМЯ(1, 1, 1))
	                       |		КОНЕЦ <> ДАТАВРЕМЯ(1, 1, 1)
	                       |	И ВЫБОР
	                       |			КОГДА СтруктурныеЕдиницы.ДатаОткрытия <> ДАТАВРЕМЯ(1, 1, 1)
	                       |					И СтруктурныеЕдиницы.ДатаОткрытия < ДАТАВРЕМЯ(2012, 1, 1)
	                       |				ТОГДА СтруктурныеЕдиницы.ДатаОткрытия
	                       |			ИНАЧЕ ЕСТЬNULL(ВТ_ДатыОткрытия.ДатаОткрытия, ДАТАВРЕМЯ(1, 1, 1))
	                       |		КОНЕЦ МЕЖДУ &ДатаНач И &ДатаКон
	                       |	И СтруктурныеЕдиницы.ТипРозничнойТочки <> ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
	                       |
	                       |СГРУППИРОВАТЬ ПО
	                       |	СтруктурныеЕдиницы.Ссылка
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |УНИЧТОЖИТЬ ВТ_ДатыОткрытия
	                       |;
	                       |
	                       |////////////////////////////////////////////////////////////////////////////////
	                       |ВЫБРАТЬ
	                       |	СводнаяТочки.Ссылка,
	                       |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасходныйОрдерСкладОборудование.Оборудование) КАК СчетчикОборудования
	                       |ИЗ
	                       |	СводнаяТочки КАК СводнаяТочки
	                       |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерСклад.Оборудование КАК РасходныйОрдерСкладОборудование
	                       |		ПО (НЕ РасходныйОрдерСкладОборудование.Ссылка.ПометкаУдаления)
	                       |			И (РасходныйОрдерСкладОборудование.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон)
	                       |			И СводнаяТочки.Ссылка = РасходныйОрдерСкладОборудование.Ссылка.Получатель
	                       |			И (РасходныйОрдерСкладОборудование.Ссылка.Склад.Владелец.id_TT = 11595)
	                       |
	                       |СГРУППИРОВАТЬ ПО
	                       |	СводнаяТочки.Ссылка
	                       |
	                       |ИМЕЮЩИЕ
	                       |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасходныйОрдерСкладОборудование.Оборудование) < 4";
						   
	//НайдОборудование = Оборудование.НайтиСтроки(Новый Структура("Местоположение", Справочники.Склады.НайтиПоКоду("100002036")));
	
	ЗапросОткрытые.УстановитьПараметр("ДатаНач", НачалоМесяца(Объект.Дата));
	ЗапросОткрытые.УстановитьПараметр("ДатаКон", КонецМесяца(Объект.Дата)); 	
	
	ВыборкаТочки = ЗапросОткрытые.Выполнить().Выбрать();
	
	Если ВыборкаТочки.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Нет открытых точек в текущем месяце или на них уже было распределено оборудование."); // Распределить оборудование виртуального склада поставщика - невозможно!!! Оборудование, которое не удалось распределить будет удалено из документа.");
		//УдалитьОборудованиеВиртСклада();
		//Возврат Неопределено;
	КонецЕсли;
	
	ЗапросОборудованиеДляРаспределения = Новый Запрос;
	ЗапросОборудованиеДляРаспределения.Текст = "ВЫБРАТЬ
	                                           |	ВводВЭксплуатациюОборудование.ОсновноеСредство,
	                                           |	ВводВЭксплуатациюОборудование.Местоположение КАК Местоположение
	                                           |ПОМЕСТИТЬ СводнаяТаблица
	                                           |ИЗ
	                                           |	Документ.ВводВЭксплуатацию.Оборудование КАК ВводВЭксплуатациюОборудование
	                                           |ГДЕ
	                                           |	ВводВЭксплуатациюОборудование.Местоположение.Владелец.id_TT = 11595
	                                           |	И ВводВЭксплуатациюОборудование.Ссылка = &Ссылка
	                                           |;
	                                           |
	                                           |////////////////////////////////////////////////////////////////////////////////
	                                           |ВЫБРАТЬ
	                                           |	СводнаяТаблица.ОсновноеСредство,
	                                           |	СводнаяТаблица.Местоположение,
	                                           |	ЕСТЬNULL(СостояниеОССрезПервыхДляУпорядочивания.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК Период
	                                           |ИЗ
	                                           |	СводнаяТаблица КАК СводнаяТаблица
	                                           |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеОС.СрезПоследних(&Период, НЕ Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг) КАК СостояниеОССрезПоследних
	                                           |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеОС.СрезПервых(&Начало2017, ) КАК СостояниеОССрезПервыхДляУпорядочивания
	                                           |			ПО СостояниеОССрезПоследних.ОсновноеСредство = СостояниеОССрезПервыхДляУпорядочивания.ОсновноеСредство
	                                           |		ПО СводнаяТаблица.ОсновноеСредство = СостояниеОССрезПоследних.ОсновноеСредство
	                                           |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеОС.СрезПервых(&ГраницаВключая, Регистратор ССЫЛКА Документ.РасходныйОрдерСклад) КАК СостояниеОССрезПервых
	                                           |		ПО СводнаяТаблица.ОсновноеСредство = СостояниеОССрезПервых.ОсновноеСредство
	                                           |ГДЕ
	                                           |	НЕ ЕСТЬNULL(СостояниеОССрезПоследних.Эксплуатируется, ЛОЖЬ)
	                                           |	И СостояниеОССрезПервых.Регистратор ЕСТЬ NULL
	                                           |
	                                           |УПОРЯДОЧИТЬ ПО
	                                           |	Период
	                                           |АВТОУПОРЯДОЧИВАНИЕ";
											   
	ЗапросОборудованиеДляРаспределения.УстановитьПараметр("Период", КонецМесяца(Объект.Дата));
	ЗапросОборудованиеДляРаспределения.УстановитьПараметр("Начало2017", Дата("20170101"));
	
	ГраницаВключая = Новый Граница(Объект.Дата, ВидГраницы.Включая);
	ЗапросОборудованиеДляРаспределения.УстановитьПараметр("ГраницаВключая", ГраницаВключая);
											   
	ЗапросОборудованиеДляРаспределения.Параметры.Вставить("Ссылка", Объект.Ссылка);
	
	ВыборкаОборудование = ЗапросОборудованиеДляРаспределения.Выполнить().Выбрать();
	
	СчОборудования = 0;
	ТТ = Неопределено;
	
	ТаблицаОборудованиеПоТочкам = Новый ТаблицаЗначений;
	ТаблицаОборудованиеПоТочкам.Колонки.Добавить("ТТ");
	ТаблицаОборудованиеПоТочкам.Колонки.Добавить("Оборудование");	
	ТаблицаОборудованиеПоТочкам.Колонки.Добавить("Склад");
	
	МассивОбДляУд = Новый Массив;
	
	Пока ВыборкаОборудование.Следующий() Цикл
	
		СчОборудования = СчОборудования + 1;
		
		Если СчОборудования = 5 ИЛИ ТТ = Неопределено Тогда
			СчОборудования = 1;			
		
			Если ВыборкаТочки.Следующий() Тогда
				ТТ = ВыборкаТочки.Ссылка;
				СчОборудования = ВыборкаТочки.СчетчикОборудования + 1;			
			Иначе
				ТТ = Неопределено;
			КонецЕсли;	
			
		КонецЕсли;             		
		
		Если ТТ = Неопределено Тогда
			МассивОбДляУд.Добавить(ВыборкаОборудование.ОсновноеСредство);
		Иначе		
			НовСтр = ТаблицаОборудованиеПоТочкам.Добавить();
			НовСтр.ТТ = ТТ;
			НовСтр.Оборудование = ВыборкаОборудование.ОсновноеСредство;
			НовСтр.Склад = ВыборкаОборудование.Местоположение;
		КонецЕсли;
		
	КонецЦикла;	
	
	МассивОборудования = ТаблицаОборудованиеПоТочкам.ВыгрузитьКолонку("Оборудование");
	ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(МассивОборудования);
	
	ОборудованиеТТСклад = ТаблицаОборудованиеПоТочкам.Скопировать();
	ОборудованиеТТСклад.Свернуть("ТТ, Склад");
	
	Если ТолькоВернутьДанные Тогда
		ТзВозврат = Новый ТаблицаЗначений;
		ТзВозврат.Колонки.Добавить("ОсновноеСредство");
		ТзВозврат.Колонки.Добавить("ИнвентарныйНомер");
		ТзВозврат.Колонки.Добавить("Местоположение");
		ТзВозврат.Колонки.Добавить("БудетУдалено");	
		
		Для Каждого СтрПереместить Из ОборудованиеТТСклад Цикл
		
			Куда = СтрПереместить.ТТ;					
			
			СтрОборудованиеПоТочкам = ТаблицаОборудованиеПоТочкам.НайтиСтроки(Новый структура("ТТ, Склад", СтрПереместить.ТТ, СтрПереместить.Склад));
		
			Для Каждого СтрОборудование Из СтрОборудованиеПоТочкам Цикл
		
				НовСтрОб = ТзВозврат.Добавить();
				НовСтрОБ.ОсновноеСредство = СтрОборудование.Оборудование;
				НовСтрОб.ИнвентарныйНомер = СтрОборудование.Оборудование.ИнвентарныйНомер;		
				НовСтрОб.Местоположение = Куда;		
				НовСтрОб.БудетУдалено = Ложь;
							
			КонецЦикла;		
					
		КонецЦикла;	
	
		Для Каждого ОбДляУд Из МассивОбДляУд Цикл
			
			НовСтрОб = ТзВозврат.Добавить();
			НовСтрОБ.ОсновноеСредство = ОбДляУд;
			НовСтрОб.ИнвентарныйНомер = ОбДляУд.ИнвентарныйНомер;		
			НовСтрОб.Местоположение = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();		
			НовСтрОб.БудетУдалено = Истина;
		
		КонецЦИкла;
		
		Возврат ТзВозврат;
	
	КонецЕсли;	
		
КонецФункции

//+++АК Susk (Суслин К.В.) старые задачи 
&НаСервере
Функция ЕстьОборудованиеВиртСкладаКотороеНеРаспределено()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВводВЭксплуатациюОборудование.ОсновноеСредство,
	               |	ВводВЭксплуатациюОборудование.Местоположение
	               |ПОМЕСТИТЬ ОборудованиеПоСкладу
	               |ИЗ
	               |	Документ.ВводВЭксплуатацию.Оборудование КАК ВводВЭксплуатациюОборудование
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеОС.СрезПоследних(&Граница, НЕ Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг) КАК СостояниеОССрезПоследних
	               |		ПО ВводВЭксплуатациюОборудование.ОсновноеСредство = СостояниеОССрезПоследних.ОсновноеСредство
	               |ГДЕ
	               |	ВводВЭксплуатациюОборудование.Ссылка = &Ссылка
	               |	И ВводВЭксплуатациюОборудование.Местоположение.Владелец.id_TT = 11595
	               |	И НЕ ЕСТЬNULL(СостояниеОССрезПоследних.Эксплуатируется, ЛОЖЬ)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОборудованиеПоСкладу.ОсновноеСредство
	               |ИЗ
	               |	ОборудованиеПоСкладу КАК ОборудованиеПоСкладу
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеОС.СрезПервых(&ГраницаВключая, Регистратор ССЫЛКА Документ.РасходныйОрдерСклад) КАК СостояниеОССрезПервых
	               |		ПО ОборудованиеПоСкладу.ОсновноеСредство = СостояниеОССрезПервых.ОсновноеСредство
	               |ГДЕ
	               |	СостояниеОССрезПервых.Регистратор ЕСТЬ NULL ";
				   
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Объект.Дата));
		
	Гр = новый Граница(Объект.Дата, ВидГраницы.Исключая);
	ГрВключая = Новый Граница(Объект.Дата, ВидГраницы.Включая);
	
	Запрос.УстановитьПараметр("Граница", Гр);
	Запрос.УстановитьПараметр("ГраницаВключая", ГрВключая);
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Объект.Дата));
	Запрос.УстановитьПараметр("Ссылка", ОБъект.Ссылка);
				   
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

//+++АК Susk (Суслин К.В.) старые задачи 
&НаСервере
Процедура УдалитьОборудованиеВиртСклада()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Склады.Ссылка
	               |ИЗ
	               |	Справочник.Склады КАК Склады
	               |ГДЕ
	               |	Склады.Владелец.id_TT = 11595";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивСтрДляУд = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
	
		НайдСтроки = ОБъект.Оборудование.НайтиСтроки(Новый Структура("Местоположение", Выборка.Ссылка));
		
		Для Каждого НСтр Из НайдСтроки Цикл
			МассивСтрДляУд.Добавить(НСтр);
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого СтрУд Из МассивСтрДляУд Цикл
		Объект.Оборудование.Удалить(СтрУд);
	КонецЦикла;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) старые задачи 
&НаСервере
Процедура ЗаписатьВМодуле()
	
	Об = РеквизитФормыВЗначение("Объект");
	Об.ЗаписатьВМодулеОБъекта();
	ЗначениеВРеквизитФормы(Об, "Объект");
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) старые задачи 
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Объект.Дата = КонецМесяца(Объект.Дата);
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийВводВЭксплуатацию.ВводВЭксплуатациюНМА") Тогда
		ПроверкаЗаполнения_НМА(Отказ);
	КонецЕсли;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) старые задачи 
&НаСервере
Процедура ПроверитьОборудованиеНеВыгружатьВБУ()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВводВЭксплуатациюОборудование.Ссылка,
	               |	ВводВЭксплуатациюОборудование.ОсновноеСредство,
	               |	ВводВЭксплуатациюОборудование.НомерСтроки
	               |ПОМЕСТИТЬ ВводОборудование
	               |ИЗ
	               |	Документ.ВводВЭксплуатацию.Оборудование КАК ВводВЭксплуатациюОборудование
	               |ГДЕ
	               |	ВводВЭксплуатациюОборудование.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВводОборудование.Ссылка,
	               |	ВводОборудование.ОсновноеСредство,
	               |	ПоступлениеТоваровУслугОборудование.Ссылка КАК СсылкаПТУ,
	               |	ВводОборудование.НомерСтроки
	               |ИЗ
	               |	ВводОборудование КАК ВводОборудование
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПоступлениеТоваровУслугОборудование
	               |		ПО ВводОборудование.ОсновноеСредство = ПоступлениеТоваровУслугОборудование.ОсновноеСредство
	               |			И (ПоступлениеТоваровУслугОборудование.Ссылка.Проведен)
	               |ГДЕ
	               |	ЕСТЬNULL(ПоступлениеТоваровУслугОборудование.Ссылка.НеВыгружатьВБУ, ЛОЖЬ)";
				   
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Начало = "ВНИМАНИЕ: по следующим ОС обнаружены ПТУ, с флагом ""Не выгружать в БУ"". При выгрузке Ввода в Бухгалтерию - эти ОС не будут выгружены: ";
	
	СтрОс = "";
	
	Пока Выборка.Следующий() Цикл
		СтрОс = СтрОс + "-" + "№ строки: " + Строка(Выборка.НомерСтроки) + " " + Строка(Выборка.ОсновноеСредство) + " инв. номер: " + Выборка.ОсновноеСредство.ИнвентарныйНомер + ", ПТУ: " + Строка(Выборка.СсылкаПТУ) + Символы.ПС;
	КонецЦикла;
	
	Если СтрОс <> "" Тогда
		ОбщегоНазначения.СообщитьОбОшибке(Начало + Символы.ПС + СтрОс);
	КонецЕсли;	
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) старые задачи 
&НаСервере
Процедура ПроверитьНекорректныеДопРасходы()
	
	НачалоОшибки = "Обнаружены проблемы счетов по оборудованию: " + Символы.ПС;
	
	//1. Доп.расходы после Ввода не на тот счет
	
	СтрокиОборудованиеПо0110 = Объект.Оборудование.НайтиСтроки(Новый Структура("СчетУчета", ПланыСчетов.Финансовый.ОсновныеСредстваДо100000));
	
	МассивОборудованиеПо0110 = Новый Массив;
	
	Для Каждого НСтр Из СтрокиОборудованиеПо0110 Цикл
		МассивОборудованиеПо0110.Добавить(НСтр.ОсновноеСредство);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеДопРасходовТовары.Ссылка,
	               |	ПоступлениеДопРасходовТовары.ОсновноеСредство
	               |ИЗ
	               |	Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	               |ГДЕ
	               |	ПоступлениеДопРасходовТовары.Ссылка.Дата >= &ДатаПроверки
	               |	И ПоступлениеДопРасходовТовары.СчетУчета = &СчетУчета
	               |	И ПоступлениеДопРасходовТовары.ОсновноеСредство В(&ОсновноеСредство)
	               |	И ПоступлениеДопРасходовТовары.Ссылка.Проведен";
				   
	Запрос.УстановитьПараметр("ДатаПроверки", ?(ЗначениеЗаполнено(Объект.Дата), ОБъект.Дата, ТекущаяДата()));
	Запрос.УстановитьПараметр("СчетУчета", ПланыСчетов.Финансовый.ПриобретениеОсновныхСредств);
	Запрос.УстановитьПараметр("ОсновноеСредство", МассивОборудованиеПо0110);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтрОшибки = "";
	
	Пока Выборка.Следующий() Цикл
		
		СтрОшибки = СтрОшибки + "-" + Строка(Выборка.ОсновноеСредство) + ", инв. номер: " + Выборка.ОсновноеСредство.ИнвентарныйНомер + " принимается на учет по счету 01.10, но существует доп.расход на счет 08.4: " + Строка(Выборка.Ссылка) + Символы.ПС;		
		
	КонецЦикла;
	
	//1.1
	СтрокиОборудованиеПо011 = Объект.Оборудование.НайтиСтроки(Новый Структура("СчетУчета", ПланыСчетов.Финансовый.ОсновныеСредстваВОрганизации));
	
	МассивОборудованиеПо011 = Новый Массив;
	
	Для Каждого НСтр Из СтрокиОборудованиеПо011 Цикл
		МассивОборудованиеПо011.Добавить(НСтр.ОсновноеСредство);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеДопРасходовТовары.Ссылка,
	               |	ПоступлениеДопРасходовТовары.ОсновноеСредство
	               |ИЗ
	               |	Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	               |ГДЕ
	               |	ПоступлениеДопРасходовТовары.Ссылка.Дата >= &ДатаПроверки
	               |	И ПоступлениеДопРасходовТовары.СчетЗатрат <> &СчетУчета
	               |	И ПоступлениеДопРасходовТовары.ОсновноеСредство В(&ОсновноеСредство)
	               |	И ПоступлениеДопРасходовТовары.Ссылка.Проведен";
				   
	Запрос.УстановитьПараметр("ДатаПроверки", ?(ЗначениеЗаполнено(Объект.Дата), ОБъект.Дата, ТекущаяДата()));
	Запрос.УстановитьПараметр("СчетУчета", ПланыСчетов.Финансовый.ПриобретениеОсновныхСредств);
	Запрос.УстановитьПараметр("ОсновноеСредство", МассивОборудованиеПо011);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтрОшибки = СтрОшибки + "-" + Строка(Выборка.ОсновноеСредство) + ", инв. номер: " + Выборка.ОсновноеСредство.ИнвентарныйНомер + " принимается на учет по счету 01.1, но существует доп.расход на счет, отличный от 08.4: " + Строка(Выборка.Ссылка) + Символы.ПС;
		
	КонецЦикла;
	
    //2. Счета во вводе вообще не туда

	ТзОс = Объект.Оборудование.Выгрузить(, "ОсновноеСредство, СписываетсяВМоментВвода, СчетУчета");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТзОС.ОсновноеСредство,
	               |	ТзОС.СписываетсяВМоментВвода,
	               |	ТзОС.СчетУчета
	               |ПОМЕСТИТЬ СводнаяТаблица
	               |ИЗ
	               |	&ТзОС КАК ТзОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СводнаяТаблица.ОсновноеСредство,
	               |	ВЫБОР
	               |		КОГДА СводнаяТаблица.СписываетсяВМоментВвода
	               |			ТОГДА ВЫБОР
	               |					КОГДА ЕСТЬNULL(ФинансовыйОстатки.Счет, ЗНАЧЕНИЕ(ПланСчетов.Финансовый.Инвентарь)) = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.Инвентарь)
	               |						ТОГДА ИСТИНА
	               |					ИНАЧЕ ЛОЖЬ
	               |				КОНЕЦ
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА СводнаяТаблица.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВОРганизации)
	               |					ТОГДА ВЫБОР
	               |							КОГДА ЕСТЬNULL(ФинансовыйОстатки.Счет, ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредства)) = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ПриобретениеОсновныхСредств)
	               |								ТОГДА ИСТИНА
	               |							ИНАЧЕ ЛОЖЬ
	               |						КОНЕЦ
	               |				ИНАЧЕ ВЫБОР
	               |						КОГДА СводнаяТаблица.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000)
	               |							ТОГДА ВЫБОР
	               |									КОГДА ЕСТЬNULL(ФинансовыйОстатки.Счет, ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредства)) = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ПриобретениеОсновныхСредств)
	               |										ТОГДА ЛОЖЬ
	               |									ИНАЧЕ ИСТИНА
	               |								КОНЕЦ
	               |					КОНЕЦ
	               |			КОНЕЦ
	               |	КОНЕЦ КАК НетПроблемы,
	               |	СводнаяТаблица.СчетУчета КАК СчетУчетаДокумента,
	               |	ФинансовыйОстатки.Счет КАК СчетУчета
	               |ИЗ
	               |	СводнаяТаблица КАК СводнаяТаблица
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.Остатки(
	               |				&Период,
	               |				Счет В (&СчетаУчетаМСФО),
	               |				,
	               |				Субконто1 В
	               |						(ВЫБРАТЬ
	               |							Тз.ОсновноеСредство
	               |						ИЗ
	               |							СводнаяТаблица КАК Тз)
	               |					И Организация = &Организация) КАК ФинансовыйОстатки
	               |		ПО СводнаяТаблица.ОсновноеСредство = ФинансовыйОстатки.Субконто1";
				   
	Запрос.УстановитьПараметр("ТзОС", ТзОс);
	Запрос.УстановитьПараметр("СчетаУчетаМСФО", АК_ОсновныеСредства.СчетаУчетаОС());
	Запрос.УстановитьПараметр("Период", ?(ЗначениеЗаполнено(Объект.Дата), КонецМесяца(Объект.Дата), КонецМесяца(ТекущаяДата())));
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если НЕ Выборка.НетПроблемы Тогда
			СтрОшибки = СтрОшибки + "-" + Строка(Выборка.ОсновноеСредство) + ", с инв. номером: " + Выборка.ОсновноеСредство.ИнвентарныйНомер + " - остатки на счете: " + Строка(Выборка.СчетУчета) + ", в документе счет: " + Строка(Выборка.СчетУчетаДокумента) + Символы.ПС; 
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(СтрОшибки) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НачалоОшибки + СтрОшибки);
	КонецЕсли;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) старые задачи 
&НаКлиенте
Процедура ВыгрузитьВБП(Команда)
	
	Если Параметры.Ключ.Пустая() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Сначала нужно записать документ");
		Возврат;
	КонецЕсли;	
	
	Если ЭтаФорма.Модифицированность Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Документ был изменен. Сначала нужно записать документ");
		Возврат;
	КонецЕсли;
	
	Если Объект.Дата < Дата(2017, 1, 1) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Дата документа меньше 1 января 2017 года. Выгружен не будет!");
		Возврат;
	КонецЕсли;
	
	ВыгрузитьВБПСервер();
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) старые задачи 
&НаСервере
Процедура ВыгрузитьВБПСервер()
	
	ОбменСБП2_0.ВыгрузитьДокументВБП("ВводВЭксплуатацию", "ВводВЭксплуатацию", Объект.Ссылка); 
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) старые задачи 
&НаСервере
Функция ВернутьМоментВремени()
	
	Возврат ОБъект.Ссылка.МоментВремени();
	
КонецФункции

//+++АК Susk (Суслин К.В.) 2018.10.08 ИП-00020055
&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	
	Элементы.ВидОперации.Видимость = Объект.Дата >= Дата("20180901");
	
	ВводНМА =  Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийВводВЭксплуатацию.ВводВЭксплуатациюНМА");
	Элементы.ОборудованиеСписываетсяВМоментВвода.Видимость = НЕ ВводНМА;
	Элементы.ОборудованиеГруппаОС.Видимость = НЕ ВводНМА;
	Элементы.ОборудованиеКодПоОКОФ.Видимость = НЕ ВводНМА;
	Элементы.ОборудованиеВидНМА.Видимость = ВводНМА;
	Элементы.ОборудованиеСтатьяДР.Видимость = НЕ ВводНМА;
	Элементы.ОборудованиеЦФО.Видимость = НЕ ВводНМА;
	Элементы.ОборудованиеМестоположение.Видимость = НЕ ВводНМА;
	
КонецПроцедуры	

//+++АК Susk (Суслин К.В.) 2018.10.08 ИП-00020055
&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.10.08 ИП-00020055
&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	Если Объект.Оборудование.Количество() Тогда
		
		Ответ = Вопрос("При смене операции необходимо перезаполнить документ. Сделать это сейчас?", РежимДиалогаВопрос.ДаНет);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Заполнить(Неопределено);	
		Иначе
			Объект.ВидОперации = мТекущийВидОперации; //вернем обратно вид операции
		КонецЕсли;
		
	КонецЕсли;			
	
	мТекущийВидОперации = Объект.ВидОперации;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.10.08 ИП-00020055
&НаСервере
Процедура ЗаполнитьНМАНаСервере()
	
	Запрос = Новый Запрос;		
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПринятыеКУчетуОССрезПоследних.ОсновноеСредство
	               |ПОМЕСТИТЬ ПринятыеКУчетуОС
	               |ИЗ
	               |	РегистрСведений.ПринятыеКУчетуОС.СрезПоследних(&МоментВремени, ) КАК ПринятыеКУчетуОССрезПоследних
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ФинансовыйДвиженияССубконто.Субконто1 КАК ОсновноеСредство,
	               |	СУММА(ФинансовыйДвиженияССубконто.СуммаОстаток) КАК ПервоначальнаяСтоимость,
	               |	ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваУчетНМА) КАК СчетУчета,
	               |	ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредствУчетНМА) КАК СчетУчетаАмортизации
	               |ПОМЕСТИТЬ Остатки_НМА
	               |ИЗ
	               |	РегистрБухгалтерии.Финансовый.Остатки(
	               |			&МоментВремени,
	               |			Счет = &СчетУчетаНМА,
	               |			,
	               |			Организация = &Организация
	               |				И НЕ Субконто1 В
	               |						(ВЫБРАТЬ
	               |							ПринятыеКУчетуОССрезПоследних.ОсновноеСредство
	               |						ИЗ
	               |							ПринятыеКУчетуОС КАК ПринятыеКУчетуОССрезПоследних)) КАК ФинансовыйДвиженияССубконто
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ФинансовыйДвиженияССубконто.Субконто1,
	               |	ФинансовыйДвиженияССубконто.Счет
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	&ДатаВвода КАК ДатаВвода,
	               |	Результат.ОсновноеСредство,
	               |	ОсновныеСредства.ИнвентарныйНомер КАК ИнвентарныйНомер,
	               |	Результат.ПервоначальнаяСтоимость,
	               |	ЛОЖЬ КАК СписываетсяВМоментВвода,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(ОсновныеСредства.СрокЭксплуатации, 0) > 0
	               |			ТОГДА ОсновныеСредства.СрокЭксплуатации
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА ЕСТЬNULL(СпрНоменклатура.СрокПолезногоИспользования, 0) > 0
	               |					ТОГДА СпрНоменклатура.СрокПолезногоИспользования
	               |				ИНАЧЕ 0
	               |			КОНЕЦ
	               |	КОНЕЦ КАК СрокПолезногоИспользования,
	               |	ОсновныеСредства.АмортизационнаяГруппа,
	               |	Результат.СчетУчета КАК СчетУчета,
	               |	Результат.СчетУчетаАмортизации КАК СчетУчетаАмортизации,
	               |	&ДатаВвода КАК ДатаПринятияКУчету
	               |ИЗ
	               |	Остатки_НМА КАК Результат
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	               |			ПО ОсновныеСредства.Номенклатура = СпрНоменклатура.Ссылка
	               |		ПО Результат.ОсновноеСредство = ОсновныеСредства.Ссылка";
	               	               
	
	Если ЗначениеЗаполнено(Объект.ВременноТекстЗапросаВнешний) Тогда		
		Запрос.Текст = Объект.ВременноТекстЗапросаВнешний;
	КонецЕсли;	

	ДатаНачала = НачалоМесяца(Объект.Дата);
	ДатаОкончания = КонецМесяца(Объект.Дата);
	
	Гр = Новый Граница(ВернутьМоментВремени(), ВидГраницы.Исключая);	
	Запрос.УстановитьПараметр("МоментВремени", Гр);
	Запрос.УстановитьПараметр("ДатаВвода", ДатаОкончания+1);
	Запрос.УстановитьПараметр("СчетУчетаНМА", ОбщегоНазначенияПовтИсп.ВернутьСчетПоУсловию("08.5", "Финансовый"));	
	Запрос.УстановитьПараметр("Организация", Объект.Организация);

	Объект.Оборудование.Загрузить(Запрос.Выполнить().Выгрузить());	
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.10.08 ИП-00020055
&НаКлиенте
Процедура ПроверкаЗаполнения_НМА(Отказ)
	
	СписокОС = Новый Массив;
	
	Для Каждого Стр Из Объект.Оборудование Цикл
		СписокОс.Добавить(Стр.ОсновноеСредство);
	КонецЦикла;
		 
	РеквизитыОС = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(СписокОС, "ВидОсновногоСредства");
	СписокОСПрописатьВид = Новый Массив;
	СтрДляВопроса = "";
	
	Для Каждого Стр Из Объект.Оборудование Цикл
		ОС = РеквизитыОС.Получить(Стр.ОсновноеСредство);
		
		Если ОС["ВидОсновногоСредства"] <> Перечисления.ВидыОсновныхСредств.НеметериальныйАктив Тогда
			СписокОСПрописатьВид.Добавить(Стр.ОсновноеСредство);
			СтрДляВопроса = СтрДляВопроса + Строка(Стр.НомерСтроки) + ",";
		КонецЕсли;
	КонецЦикла;
	
	Если СписокОСПрописатьВид.Количество() Тогда
		Ответ = Вопрос("В строках " + Лев(СтрДляВопроса, СтрДлина(СтрДляВопроса) - 1) + " у основных средств не проставлен тип ""НМА"". Проставить автоматически?", РежимДиалогаВопрос.ДаНет );
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ПроставитьПризнакНМАДляСпискаОС(СписокОСПрописатьВид);
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.10.08 ИП-00020055
&НаСервере
Процедура ПроставитьПризнакНМАДляСпискаОС(СписокОСПрописатьВид)
	
	Для Каждого ОС Из СписокОСПрописатьВид Цикл
		ОС_Объект = ОС.ПолучитьОбъект();
		ОС_Объект.ВидОсновногоСредства = Перечисления.ВидыОсновныхСредств.НеметериальныйАктив;
		ОС_Объект.ОбменДанными.Загрузка = Истина;
		ОС_Объект.Записать();
	КонецЦикла;
	
КонецПроцедуры

	