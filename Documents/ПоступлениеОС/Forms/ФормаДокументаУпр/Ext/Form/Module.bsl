
&НаСервереБезКонтекста
Функция ПолучитьЦФОПоТТ(мТорговаяТочка, мДата)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТТ"	, мТорговаяТочка);
	Запрос.УстановитьПараметр("Дата", мДата);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО
	|ИЗ
	|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&Дата, СтруктурнаяЕдиница = &ТТ) КАК ЦФОСтруктурныхЕдиницСрезПоследних";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ЦФО;
	Иначе
		Возврат Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДатуЗакрытияТТ(мСклад)
	
	Возврат мСклад.ДатаЗакрытия;
	
КонецФункции

&НаСервереБезКонтекста
Функция НомерОССуществует(пИнвентарныйНомер, пОсновноеСредство)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИнвентарныйНомер", пИнвентарныйНомер);
	Запрос.УстановитьПараметр("ОсновноеСредство", пОсновноеСредство);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОсновныеСредства.Ссылка
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОсновныеСредства
	|ГДЕ
	|	ОсновныеСредства.ИнвентарныйНомер = &ИнвентарныйНомер
	|	И ОсновныеСредства.Ссылка <> &ОсновноеСредство";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка.Следующий();
	
КонецФункции

&НаСервереБезКонтекста
Функция ЕстьПоступлениеНаОсновании(мДокументОснование)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("ДокументОснование", мДокументОснование);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПоступлениеОС.Ссылка
	|ИЗ
	|	Документ.ПоступлениеОС КАК ПоступлениеОС
	|ГДЕ
	|	ПоступлениеОС.ДокументОснование = &ДокументОснование";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка.Следующий();
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПараметрыВыбораПолейСубконто(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ПараметрыДокумента = ПолучитьСписокПараметровВыбораСубконто(Форма, Объект, "СубконтоКт%Индекс%");
	БухгалтерскийУчетКлиентСерверУФ.ИзменитьПараметрыВыбораПолейСубконто(Форма, Объект,
													"СубконтоКт%Индекс%", "СубконтоКт%Индекс%Прочие", ПараметрыДокумента);
	БухгалтерскийУчетКлиентСерверУФ.ИзменитьПараметрыВыбораПолейСубконто(Форма, Объект,
													"СубконтоКт%Индекс%", "СубконтоКт%Индекс%УслугиБанка", ПараметрыДокумента);
	
КонецПроцедуры
	
&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьСписокПараметровВыбораСубконто(Форма, ПараметрыОбъекта, ШаблонИмяПоляОбъекта)

	СписокПараметров = Новый Структура;
	Для Индекс = 1 По 3 Цикл
		ИмяПоля = СтрЗаменить(ШаблонИмяПоляОбъекта, "%Индекс%", Индекс);
		Если ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Контрагенты") Тогда
			СписокПараметров.Вставить("Контрагент"	, ПараметрыОбъекта[ИмяПоля]);
		ИначеЕсли ТипЗнч(ПараметрыОбъекта[ИмяПоля]) = Тип("СправочникСсылка.Склады") Тогда
			СписокПараметров.Вставить("Склад"		, ПараметрыОбъекта[ИмяПоля]);
		КонецЕсли;
	КонецЦикла;
	СписокПараметров.Вставить("Организация", Форма.Объект.Организация);

	Возврат СписокПараметров;

КонецФункции
	
&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовкиИДоступностьСубконто(Форма, Счет, Префикс = "", Постфикс = "", ЕстьПодразделение, ЭтоТаблица = Ложь)

	ПоляФормы = Новый Структура("Субконто1, Субконто2, Субконто3",
									Префикс + "СубконтоКт1" + Постфикс,
									Префикс + "СубконтоКт2" + Постфикс,
									Префикс + "СубконтоКт3" + Постфикс);

	ЗаголовкиПолей = Новый Структура("Субконто1, Субконто2, Субконто3",
										"ЗаголовокСубконто1", "ЗаголовокСубконто2", "ЗаголовокСубконто3");

	БухгалтерскийУчетКлиентСерверУФ.ПриВыбореСчета(Счет, Форма, ПоляФормы, ЗаголовкиПолей, ЭтоТаблица);

КонецПроцедуры

Процедура УстановитьВидимость()
	
	Если ТипЗнч(Объект.Склад) = Тип("СправочникСсылка.СтруктурныеЕдиницы")
			И ЗначениеЗаполнено(Объект.Склад) Тогда
		мДатаЗакрытия = ПолучитьДатуЗакрытияТТ(Объект.Склад);
		Если ЗначениеЗаполнено(мДатаЗакрытия)
				И мДатаЗакрытия < Объект.Дата Тогда
			Элементы.Склад.ЦветФона = Новый Цвет(222, 222, 222);
		Иначе
			Элементы.Склад.ЦветФона = Новый Цвет(255, 255, 255);
		КонецЕсли;
	Иначе
		Элементы.Склад.ЦветФона = Новый Цвет(255, 255, 255);
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьДоступностьЦФОСотрудника()
	
	ТекДоступность = ЗначениеЗаполнено(Объект.Контрагент)
						И ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.ФизическиеЛица");
						
	Элементы.ЦФОСотрудника.ТолькоПросмотр = НЕ ТекДоступность;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка)
			И ЗначениеЗаполнено(Объект.ДокументОснование) // ввод на основании
			И ЕстьПоступлениеНаОсновании(Объект.ДокументОснование)
			И НЕ Вопрос("На основании этого документа уже есть поступление ОС. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда  // новый документ
		Объект.Ответственный 					= ПараметрыСеанса.ТекущийПользователь;
		Объект.СчетУчетаРасчетовСКонтрагентом 	= ПланыСчетов.Финансовый.ПрочаяЗадолженность; 	//60.4
		Объект.СчетУчетаРасчетовСКонтрагентомБУ = ПланыСчетов.Хозрасчетный.ОСвОрганизации; 		//08.01
	КонецЕсли;
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма);
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, Объект.СчетУчетаРасчетовСКонтрагентом,, "", Истина);
	
	УстановитьВидимость();
	УстановитьДоступностьЦФОСотрудника();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)	
	
	Для Каждого СтрокаТЧ Из Объект.Номенклатура Цикл
		Если СокрЛП(СтрокаТЧ.ИнвентарныйНомер) <> "" Тогда;
			Если Объект.Номенклатура.НайтиСтроки(Новый Структура("ИнвентарныйНомер", СтрокаТЧ.ИнвентарныйНомер)).Количество() > 1 Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "Ошибка! Обнаружены задвоения инвентарного номера <" + СтрокаТЧ.ИнвентарныйНомер + ">";
				Сообщение.Сообщить();
				Отказ = Истина;
			КонецЕсли;				
			Если НомерОССуществует(СтрокаТЧ.ИнвентарныйНомер, СтрокаТЧ.ОсновноеСредство) Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.ПутьКДанным 	= СтрокаТЧ.ИнвентарныйНомер;
				Сообщение.Текст 		= "Ошибка! В строке № " + СтрокаТЧ.НомерСтроки + " инвентарный номер <" + СтрокаТЧ.ИнвентарныйНомер + "> уже существует";
				Сообщение.Сообщить();
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаТЧ.ОсновноеСредство) Тогда;
			Если Объект.Номенклатура.НайтиСтроки(Новый Структура("ОсновноеСредство", СтрокаТЧ.ОсновноеСредство)).Количество() > 1 Тогда
				Сообщение = Новый СообщениеПользователю();
				Сообщение.Текст = "Ошибка! Обнаружены задвоения основного средства <" + СтрокаТЧ.ОсновноеСредство + "> (Код: " + СтрокаТЧ.ОсновноеСредство.Код + ")";
				Сообщение.Сообщить();
				Отказ = Истина;
			КонецЕсли;
        КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	
	Если ТипЗнч(Объект.Склад) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		мДата = ?(НЕ ЗначениеЗаполнено(Объект.Ссылка), ТекущаяДата(), Объект.Дата);
		Объект.ЦФО = ПолучитьЦФОПоТТ(Объект.Склад, мДата);
	КонецЕсли;
	
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	УстановитьДоступностьЦФОСотрудника();
	
КонецПроцедуры

Процедура ЗаполнитьСубконтоСчетаУчетаСКонтрагентомСервер()
	
	Если Объект.СчетУчетаРасчетовСКонтрагентом.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Инд = 1;
	мВидыСубконто = Объект.СчетУчетаРасчетовСКонтрагентом.ВидыСубконто;
	Для Каждого СтрокаВидСубконто Из мВидыСубконто Цикл
		Если ЗначениеЗаполнено(Объект["СубконтоКт" + Инд]) Тогда
			//Пропускаем
		ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.МестаХраненияОС Тогда
			Объект["СубконтоКт" + Инд] = Объект.Склад;
		ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.ЦФО Тогда
			Объект["СубконтоКт" + Инд] = Объект.ЦФО;
		ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки Тогда
			Объект["СубконтоКт" + Инд] = Объект.Склад;
		ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.Организации Тогда
			Объект["СубконтоКт" + Инд] = Объект.Организация;
		ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.Контрагенты Тогда
			Объект["СубконтоКт" + Инд] = Объект.Контрагент;
		ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.ФизическиеЛица
				И ТипЗнч(Объект.Контрагент) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			Объект["СубконтоКт" + Инд] = Объект.Контрагент;
		КонецЕсли;
		Инд = Инд + 1;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СчетУчетаРасчетовСКонтрагентомПриИзменении(Элемент)
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма);
	УстановитьЗаголовкиИДоступностьСубконто(ЭтаФорма, Объект.СчетУчетаРасчетовСКонтрагентом,, "", Истина);
	
	ЗаполнитьСубконтоСчетаУчетаСКонтрагентомСервер();
	
КонецПроцедуры


Процедура УстановитьОССервер(пСтрока)
	
	Если ЗначениеЗаполнено(пСтрока.ОсновноеСредство)
			И Найти(пСтрока.ОсновноеСредство, "<Объект не найден>") = 0 Тогда
		обСпр = пСтрока.ОсновноеСредство.ПолучитьОбъект();
	Иначе
		обСпр = Справочники.ОсновныеСредства.СоздатьЭлемент();
		обСпр.Наименование = пСтрока.Номенклатура.Наименование;
	КонецЕсли;
	
	обСпр.Номенклатура 				= пСтрока.Номенклатура;
	обСпр.ПервоначальнаяСтоимость 	= пСтрока.Сумма;
	Попытка
		обСпр.Записать();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	обСпр.ИнвентарныйНомер 	= ?(НЕ ЗначениеЗаполнено(пСтрока.ИнвентарныйНомер)
									И НЕ ЗначениеЗаполнено(пСтрока.ЗаводскойНомер), обСпр.Код, пСтрока.ИнвентарныйНомер);
	обСпр.ЗаводскойНомер 	= ?(НЕ ЗначениеЗаполнено(пСтрока.ИнвентарныйНомер)
									И НЕ ЗначениеЗаполнено(пСтрока.ЗаводскойНомер), обСпр.Код, пСтрока.ЗаводскойНомер);
	Попытка
		обСпр.Записать();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	Если НЕ ЗначениеЗаполнено(пСтрока.ИнвентарныйНомер)
			И НЕ ЗначениеЗаполнено(пСтрока.ЗаводскойНомер) Тогда
		пСтрока.ИнвентарныйНомер 	= обСпр.Код;
		пСтрока.ЗаводскойНомер 		= обСпр.Код;
	КонецЕсли;
	
	пСтрока.ОсновноеСредство = обСпр.Ссылка;
	
КонецПроцедуры

Процедура СоздатьЭлементыОССервер()
	
	НачатьТранзакцию();
	
	Попытка
		Для Каждого СтрокаТЧ Из Объект.Номенклатура Цикл
			УстановитьОССервер(СтрокаТЧ);
		КонецЦикла;
		ЗафиксироватьТранзакцию();
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());
		ОбщегоНазначения.СообщитьОбОшибке("Ошибка при создании ОС по строке № " + СтрокаТЧ.НомерСтроки);
		ОтменитьТранзакцию();
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьОсновныеСредства(Команда)
	
	СоздатьЭлементыОССервер();
	
КонецПроцедуры

Функция ПолучитьСуммуДокументаСервер()
	
	Возврат Объект.Номенклатура.Итог("Сумма");
	
КонецФункции

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	Объект.СуммаДокумента = ПолучитьСуммуДокументаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Копирование Тогда
		
		Отказ = Истина;
		
		НоваяСтрока = Объект.Номенклатура.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Элементы.Номенклатура.ТекущиеДанные,, "ОсновноеСредство");
		Элементы.Номенклатура.ТекущаяСтрока = НоваяСтрока;
		Элементы.Номенклатура.ИзменитьСтроку();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСчетУчетаНомПоУмолчанию(мНоменклатура)
	
	Возврат мНоменклатура.ТипОборудования.СчетУчетаПоУмолчанию;
	
КонецФункции

&НаКлиенте
Процедура НоменклатураНоменклатураПриИзменении(Элемент)
	
	ТекДанные = Элементы.Номенклатура.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	мСчетУчета = ПолучитьСчетУчетаНомПоУмолчанию(ТекДанные.Номенклатура);
	Если ЗначениеЗаполнено(мСчетУчета) Тогда
		ТекДанные.СчетУчетаЗабалансовый = мСчетУчета;
		ТекДанные.СчетУчетаБУ 			= ПредопределенноеЗначение("ПланСчетов.Хозрасчетный.ОСвОрганизации");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИнвНомерОССервер(мОсновноеСредство)
	
	Возврат мОсновноеСредство.ИнвентарныйНомер;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЗавНомерОССервер(мОсновноеСредство)
	
	Возврат мОсновноеСредство.ЗаводскойНомер;
	
КонецФункции

&НаКлиенте
Процедура НоменклатураОсновноеСредствоПриИзменении(Элемент)
	
	ТекДанные = Элементы.Номенклатура.ТекущиеДанные;
	Если ТекДанные = Неопределено ТОгда
		Возврат;
	КонецЕсли;
	
	ТекДанные.ИнвентарныйНомер	= ПолучитьИнвНомерОССервер(ТекДанные.ОсновноеСредство);
	ТекДанные.ЗаводскойНомер	= ПолучитьЗавНомерОССервер(ТекДанные.ОсновноеСредство);
	
КонецПроцедуры
