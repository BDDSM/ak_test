
Функция СчетУчетаЗабалансовыйРазрешен(пСчетУчетаЗабалансовый)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОграничениеПоСчетамДляОС.СчетУчетаЗабалансовый
	|ИЗ
	|	РегистрСведений.ОграничениеПоСчетамДляОС КАК ОграничениеПоСчетамДляОС
	|ГДЕ
	|	ОграничениеПоСчетамДляОС.Пользователь = &Пользователь";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		Возврат Истина;
	Иначе
		Пока Выборка.Следующий() Цикл
			Если Выборка.СчетУчетаЗабалансовый = пСчетУчетаЗабалансовый Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции
 
Процедура ВыполнитьАнализСчета_02(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Список",	ЭтотОбъект.Номенклатура.ВыгрузитьКолонку("ОсновноеСредство"));
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Движения.Период,
	|	Движения.Регистратор,
	|	Движения.СубконтоКт2 КАК МестоХранения,
	|	Движения.СубконтоКт3 КАК ОсновноеСредство
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
	|			,
	|			,
	|			СчетКт В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредства))
	|				И Субконто3 В (&Список),
	|			,
	|			) КАК Движения
	|ГДЕ
	|	НЕ Движения.Сумма = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Движения.Период";
	ТаблицаДвижений = Запрос.Выполнить().Выгрузить();
	
	//Контроль того, что ОС списывались только с этого склада (ИП-1825)
	СтруктураОтбора = Новый Структура("ОсновноеСредство");
	Для Каждого СтрокаТЧ Из ЭтотОбъект.Номенклатура Цикл
		СтруктураОтбора.ОсновноеСредство = СтрокаТЧ.ОсновноеСредство;
		ВремТаблица = ТаблицаДвижений.Скопировать(СтруктураОтбора);
		Для Каждого СтрокаТаблицы Из ВремТаблица Цикл
			Если НЕ СтрокаТаблицы.МестоХранения = ЭтотОбъект.Склад Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке № " + СтрокаТЧ.НомерСтроки +
												" обнаружено списание со склада " + СтрокаТаблицы.МестоХранения + ". Документ " +
												Строка(СтрокаТаблицы.Регистратор));
				Отказ = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	//Чтобы не проводить несколько раз (несколько ОС может быть в одном документе)
	СписокОбработано = Новый СписокЗначений;
	
	Для Каждого СтрокаТЧ Из ЭтотОбъект.Номенклатура Цикл
		СтрокаДвижения = ТаблицаДвижений.Найти(СтрокаТЧ.ОсновноеСредство);	//обрабатывается только первый расходный документ
		Если СтрокаДвижения <> Неопределено
				И СписокОбработано.НайтиПоЗначению(СтрокаДвижения.Регистратор) = Неопределено Тогда
			 
			//Если это Операция, то перепровести не сможем
			Если СтрокаДвижения.Регистратор.Метаданные().Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Перепроведение документа " + Строка(СтрокаДвижения.Регистратор));
				ДокументОбъект = СтрокаДвижения.Регистратор.ПолучитьОбъект();
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
			Иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ВНИМАНИЕ! Документ " + Строка(СтрокаДвижения.Регистратор) + " не имеет режима ""Проведение"", необходимо проверить его вручную");
			КонецЕсли;
			СписокОбработано.Добавить(СтрокаДвижения.Регистратор);
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПроверитьОСУжеОприходованы(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Список"				, ЭтотОбъект.Номенклатура.ВыгрузитьКолонку("ОсновноеСредство"));
	Запрос.Параметры.Вставить("ДатаОкончания"		, ЭтотОбъект.Дата);
	Запрос.Параметры.Вставить("СтруктурнаяЕдиница"	, ЭтотОбъект.Склад);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Движения.Регистратор,
	|	Движения.СубконтоДт3,
	|	Движения.КоличествоДт
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
	|			,
	|			&ДатаОкончания,
	|			СубконтоДт3 В (&Список)
	|				И СубконтоДт2 = &СтруктурнаяЕдиница
	|				И СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ККМ),
	|			,
	|			) КАК Движения";
	//|				И СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ХолодильноеОборудование),
	
	ТаблицаПриходов = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТЧ Из ЭтотОбъект.Номенклатура Цикл
		СтрокаПрихода = ТаблицаПриходов.Найти(СтрокаТЧ.ОсновноеСредство);
		Если НЕ СтрокаПрихода = Неопределено Тогда
			ОбщегоНазначения.СообщитьОбОшибке("В строке № " + СтрокаТЧ.НомерСтроки + " ОС уже оприходовано документом " + Строка(СтрокаПрихода.Регистратор));
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции


Процедура ПриКопировании(ОбъектКопирования)
	
	Для Каждого СтрокаТЧ Из ЭтотОбъект.Номенклатура Цикл
		СтрокаТЧ.ОсновноеСредство 	= Справочники.ОсновныеСредства.ПустаяСсылка();
		СтрокаТЧ.ЗаводскойНомер 	= "";
		СтрокаТЧ.ИнвентарныйНомер 	= "";
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.СуммаДокумента = ЭтотОбъект.Номенклатура.Итог("Сумма");
	
	Если СокрЛП(ЭтотОбъект.Комментарий) = ""
			И ЭтотОбъект.Номенклатура.Количество() > 0 Тогда
		
		ВремТаблица = Новый ТаблицаЗначений;
		ВремТаблица.Колонки.Добавить("Наименование"	, Новый ОписаниеТипов("Строка"));
		ВремТаблица.Колонки.Добавить("Количество"	, Новый ОписаниеТипов("Число"));
		
		Для Каждого СтрокаТЧ Из ЭтотОбъект.Номенклатура Цикл
			НоваяСтрока = ВремТаблица.Добавить();
			НоваяСтрока.Наименование 	= СокрЛП(СтрокаТЧ.ОсновноеСредство.Наименование);
			НоваяСтрока.Количество 		= 1;
		КонецЦикла;	
		
		ВремТаблица.Свернуть("Наименование", "Количество");
		
		СтрокаКомментария = "";
		Для Каждого СтрокаТаблицы Из ВремТаблица Цикл			
			СтрокаКомментария = СтрокаКомментария + ", " + СтрокаТаблицы.Наименование +
								?(СтрокаТаблицы.Количество > 1, " " + Формат(СтрокаТаблицы.Количество, "ЧГ=") + "шт", "")			
		КонецЦикла;
		СтрокаКомментария = Сред(СтрокаКомментария, 3);
		
		ЭтотОбъект.Комментарий = СокрЛП(Лев(СтрокаКомментария, 200));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПриходныйОрдерСклад") Тогда
		
		ЭтотОбъект.Ответственный 	= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОсновнойОтветственный");
		ЭтотОбъект.ЦФО				= Константы.ЦФОДляУчетаОсновныхСредств.Получить();
		
		ЭтотОбъект.Организация				= ДанныеЗаполнения.Организация;
		ЭтотОбъект.Склад					= ДанныеЗаполнения.Склад.Владелец;
		ЭтотОбъект.Контрагент				= ДанныеЗаполнения.Поставщик;
		ЭтотОбъект.НомерВходящегоДокумента	= ДанныеЗаполнения.НомерДокументаПоставщика;
		ЭтотОбъект.ДатаВходящегоДокумента	= ДанныеЗаполнения.ДатаДокументаПоставщика;
		ЭтотОбъект.СубконтоКт1				= ДанныеЗаполнения.Организация;
		ЭтотОбъект.СубконтоКт2				= ДанныеЗаполнения.Поставщик;
		
		//Связка
		ЭтотОбъект.ДокументОснование		= ДанныеЗаполнения;
		
		Для Каждого СтрокаИсточник Из ДанныеЗаполнения.Оборудование Цикл
			СтрокаТЧ = ЭтотОбъект.Номенклатура.Добавить();
			СтрокаТЧ.ЗаводскойНомер			= СтрокаИсточник.ЗаводскойНомер;
			СтрокаТЧ.ИнвентарныйНомер		= СтрокаИсточник.ЗаводскойНомер;
			СтрокаТЧ.Номенклатура			= СтрокаИсточник.Номенклатура;
			СтрокаТЧ.ОсновноеСредство		= СтрокаИсточник.ОсновноеСредство;
			СтрокаТЧ.СчетУчетаЗабалансовый	= ПланыСчетов.Финансовый.ККМ;//ХолодильноеОборудование;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ИнвентаризацияОС") Тогда
		
		ЭтотОбъект.Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОсновнойОтветственный");
		
		ЭтотОбъект.Склад 	= ДанныеЗаполнения.Склад;
		ЭтотОбъект.ЦФО 		= ДанныеЗаполнения.ЦФО;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Перем Заголовок;
	
	// Проверка ручной корректировки
	Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(ЭтотОбъект.РучнаяКорректировка, Отказ, Заголовок, ЭтотОбъект,,
																	ЭтотОбъект.НеФормироватьПроводкиПоБалансовымСчетам) Тогда
		Возврат
	КонецЕсли;
	
	мДатаНовогоУчетаСчетовОС = Константы.ДатаИзмененияУчетаПоСчетамОС.Получить();
	
	//Документ мог быть введен на основании приходного ордера на склад
	ПоОрдеру = ЗначениеЗаполнено(ДокументОснование)
				И ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПриходныйОрдерСклад");
	
	ДвиженияФинансовый = ЭтотОбъект.Движения.Финансовый;
	ДвиженияФинансовый.Записывать 					= Истина;
	ДвиженияФинансовый.РазрешитьЗаписьБезПроверки 	= ЭтотОбъект.НеФормироватьПроводкиПоБалансовымСчетам;
	
	Для Каждого Строка Из ЭтотОбъект.Номенклатура Цикл
		
		Проводка = ДвиженияФинансовый.Добавить();
		Проводка.Период 						= ЭтотОбъект.Дата;
		Проводка.СчетДт 						= Строка.СчетУчетаЗабалансовый;
		Если Проводка.Период < мДатаНовогоУчетаСчетовОС Тогда
			Проводка.СубконтоДт.ЦФО 			= ЭтотОбъект.ЦФО;
		КонецЕсли;
		Проводка.СубконтоДт.МестаХраненияОС		= ЭтотОбъект.Склад;
		Проводка.СубконтоДт.ОсновныеСредства	= Строка.ОсновноеСредство;
		Проводка.КоличествоДт 					= ?(ПоОрдеру, 0, 1);
		Проводка.Сумма 							= Строка.Сумма;
		
		Если НЕ ЭтотОбъект.НеФормироватьПроводкиПоБалансовымСчетам Тогда
			
			Проводка = ДвиженияФинансовый.Добавить();
			Проводка.Период = ЭтотОбъект.Дата;
			
			Проводка.СчетДт = ПланыСчетов.Финансовый.КапитальныеВложения; //08
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "СтатьиДвиженияДенежныхСредств"	,
																						ЭтотОбъект.СтатьяДвиженияДенежныхСредств);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства"	, Строка.ОсновноеСредство);
			Если НЕ Проводка.Период < мДатаНовогоУчетаСчетовОС Тогда
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ЦФО"			, ЭтотОбъект.ЦФО);
			КонецЕсли;
			
			Проводка.СчетКт = ЭтотОбъект.СчетУчетаРасчетовСКонтрагентом;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, СубконтоКт1);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 2, СубконтоКт2);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 3, СубконтоКт3);

			Проводка.Сумма = Строка.Сумма;
			Если Проводка.СчетКт.Количественный Тогда
				Проводка.КоличествоКт = 1;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Строка Из ЭтотОбъект.Номенклатура Цикл
		Если НЕ СчетУчетаЗабалансовыйРазрешен(Строка.СчетУчетаЗабалансовый) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("В строке № " + Строка.НомерСтроки + " недостаточно прав доступа к счету учета " + Строка.СчетУчетаЗабалансовый);
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	
	//ОС могли быть оприходованы ордером(-ами) ранее
	Если Не Отказ Тогда
		ПроверитьОСУжеОприходованы(Отказ);
	КонецЕсли;
	
	//Необходимо учесть что в документе могут поменять сумму или ввести его намного позже,
	//когда уже ОС переместили в другое место хранения. Если такое случится,
	//то списыающий документ не учтет изменение сумм на счете 02 и суммы зависнут.
	//Для этого необходимо анализировать счет 02 по всем ОС, которые указаны в документе,
	//и препроводить по каждому из ОС первый документ, отражающий проводки по кредиту счета 02.
	Если Не Отказ Тогда
		Движения.Финансовый.Записать(Истина);
		ВыполнитьАнализСчета_02(Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ, ЭтотОбъект.РучнаяКорректировка,, ЭтотОбъект.НеФормироватьПроводкиПоБалансовымСчетам);
	
КонецПроцедуры
