
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	УстановитьПривилегированныйРежим(Истина);

	КолвоФотоВРакурсах = 0;
	Для Каждого СтрокаРакурс Из Ракурсы Цикл
		Если СтрокаРакурс.Ракурс <> Справочники.МП_Ракурсы.ИсправленныеФотографии Тогда
			КолвоФотоВРакурсах = КолвоФотоВРакурсах + СтрокаРакурс.КоличествоФотографий;
		КонецЕсли;	
	КонецЦикла;	
	
	Если Ссылка.Пустая() Тогда
		
		//
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	МП_ЗадачаМагазина.Ссылка
		                      |ИЗ
		                      |	Документ.МП_ЗадачаМагазина КАК МП_ЗадачаМагазина
		                      |ГДЕ
		                      |	 НАЧАЛОПЕРИОДА(МП_ЗадачаМагазина.Дата, ДЕНЬ) = &Дата
		                      |	И МП_ЗадачаМагазина.Шаблон = &Шаблон
		                      |	И МП_ЗадачаМагазина.Магазин = &Магазин
		                      |	И НЕ МП_ЗадачаМагазина.ПометкаУдаления");
		
		Запрос.УстановитьПараметр("Шаблон", Шаблон);
		Запрос.УстановитьПараметр("Магазин", Магазин);
		Запрос.УстановитьПараметр("Дата", НачалоДня(Дата));
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Сообщить("В системе уже создана задача с аналогичными параметрами! " + Выборка.Ссылка);
			Отказ = Истина;
			Возврат;
		КонецЕсли;     
		
		//
		ДатаСоздания = ТекущаяДата();
		ДатаВремяСоздания = ТекущаяДата();
	КонецЕсли;
	
	//
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	МП_Ракурсы.Ссылка,
	               |	МП_Ракурсы.Наименование
	               |ИЗ
	               |	Справочник.МП_Ракурсы КАК МП_Ракурсы";
				   
	ТабКеш = Запрос.Выполнить().Выгрузить();
	РакурсыЗаданияСтрокой = "";
	Для Каждого СтрокаРакурс Из Ракурсы Цикл
		Если ЗначениеЗаполнено(СтрокаРакурс.Ракурс) Тогда
			СтрокаКеш = ТабКеш.Найти(СтрокаРакурс.Ракурс, "Ссылка");
			Если СтрокаКеш <> Неопределено Тогда
				РакурсыЗаданияСтрокой = РакурсыЗаданияСтрокой + СокрЛП(СтрокаКеш.Наименование) + ";";
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	

	Если ЭтоНовый() Тогда
		Автор = глЗначениеПеременной("глТекущийПользователь");
	КонецЕсли; 

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МобильноеПриложение.Ссылка
	|ИЗ
	|	ПланОбмена.МобильноеПриложение КАК МобильноеПриложение
	|ГДЕ
	|	МобильноеПриложение.Магазин <> &Магазин";
	Запрос.УстановитьПараметр("Магазин", Магазин);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Ссылка <> ПланыОбмена.МобильноеПриложение.ЭтотУзел() Тогда
			ПланыОбмена.УдалитьРегистрациюИзменений(Выборка.Ссылка, Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МобильноеПриложение.Ссылка
	|ИЗ
	|	ПланОбмена.МобильноеПриложение КАК МобильноеПриложение
	|ГДЕ
	|	МобильноеПриложение.Магазин = &Магазин";
	Запрос.УстановитьПараметр("Магазин", Магазин);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Ссылка <> ПланыОбмена.МобильноеПриложение.ЭтотУзел() Тогда
			ПланыОбмена.УдалитьРегистрациюИзменений(Выборка.Ссылка, Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	ОбменДанными.Получатели.Очистить();
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Ссылка <> ПланыОбмена.МобильноеПриложение.ЭтотУзел() Тогда
			ПланыОбмена.ЗарегистрироватьИзменения(Выборка.Ссылка, Ссылка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ВАрхиве = Ложь;
	
КонецПроцедуры
