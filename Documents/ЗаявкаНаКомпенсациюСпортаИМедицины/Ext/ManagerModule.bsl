
//+++АК ILIK 2018.07.19 ИП-00019130
Функция ПолучитьСписокРуководителей() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПраваПользователейНаРедактированиеГрафиков.Пользователь
	               |ИЗ
	               |	РегистрСведений.ПраваПользователейНаРедактированиеГрафиков КАК ПраваПользователейНаРедактированиеГрафиков";
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Пользователь");
КонецФункции

//+++АК ILIK 2018.07.19 ИП-00019130
Функция ЭтоРуководительПодразделения() Экспорт
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПраваПользователейНаРедактированиеГрафиков.Подразделение
	               |ИЗ
	               |	РегистрСведений.ПраваПользователейНаРедактированиеГрафиков КАК ПраваПользователейНаРедактированиеГрафиков
	               |ГДЕ
	               |	ПраваПользователейНаРедактированиеГрафиков.Пользователь = &Пользователь";
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Результат = Запрос.Выполнить();
	Возврат (Не Результат.Пустой());
КонецФункции

//++K&C 07.11.2018 VKUS-1
Функция ОтправитьЗаявкуПоЭлектроннойПочте(Знач ДокументСсылка) Экспорт
	
	РезультатОтправки = Новый Структура("Результат,Сообщение",Ложь,"");
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	КонтактнаяИнформация.Представление
	                      |ИЗ
	                      |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	                      |ГДЕ
	                      |	КонтактнаяИнформация.Объект = &Объект
	                      |	И КонтактнаяИнформация.Тип = &Тип
						  |	И КонтактнаяИнформация.Объект ССЫЛКА Справочник.ФизическиеЛица
	                      |	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ЗаявкаНаКомпенсациюСпортаИМедицины.Получатель,
	                      |	ЗаявкаНаКомпенсациюСпортаИМедицины.СуммаДокумента,
	                      |	ЗаявкаНаКомпенсациюСпортаИМедицины.Номер,
	                      |	ЗаявкаНаКомпенсациюСпортаИМедицины.Дата
	                      |ИЗ
	                      |	Документ.ЗаявкаНаКомпенсациюСпортаИМедицины КАК ЗаявкаНаКомпенсациюСпортаИМедицины
	                      |ГДЕ
	                      |	ЗаявкаНаКомпенсациюСпортаИМедицины.Ссылка = &ДокументСсылка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ЗаявкаНаКомпенсациюСпортаИМедициныПереченьДокументов.НомерДоговора,
	                      |	ЗаявкаНаКомпенсациюСпортаИМедициныПереченьДокументов.ДатаДоговора,
	                      |	ЗаявкаНаКомпенсациюСпортаИМедициныПереченьДокументов.ДатаНачала,
	                      |	ЗаявкаНаКомпенсациюСпортаИМедициныПереченьДокументов.ДатаОкончания,
	                      |	ЗаявкаНаКомпенсациюСпортаИМедициныПереченьДокументов.СуммаДоговора,
	                      |	ЗаявкаНаКомпенсациюСпортаИМедициныПереченьДокументов.Компенсация
	                      |ИЗ
	                      |	Документ.ЗаявкаНаКомпенсациюСпортаИМедицины.ПереченьДокументов КАК ЗаявкаНаКомпенсациюСпортаИМедициныПереченьДокументов
	                      |ГДЕ
	                      |	ЗаявкаНаКомпенсациюСпортаИМедициныПереченьДокументов.Ссылка = &ДокументСсылка");
	
	ФизЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументСсылка.Акцептант,"ФизЛицо");
	Запрос.УстановитьПараметр("Объект", ФизЛицо);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	Запрос.УстановитьПараметр("ДокументСсылка",ДокументСсылка);
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаАдрес = Результат[0].Выбрать();
	АдресПолучателя = "";
	Если ВыборкаАдрес.Следующий() ТОгда
		
		АдресПолучателя = ВыборкаАдрес.Представление;
		
	КонецЕсли;	
	
	Если ПустаяСтрока(АдресПолучателя) Тогда
		
		РезультатОтправки.Сообщение = "Не заполнен адрес электронной почты у акцептанта!!";
		Возврат РезультатОтправки;
		
	КонецЕсли;	
	
	ВыборкаШапкаДокумента = Результат[1].Выбрать();
	ВыборкаШапкаДокумента.Следующий();
	
	ВыборкаПереченьДокументов = Результат[2].Выбрать();
	Если ВыборкаПереченьДокументов.Количество() = 0 Тогда
		
		РезультатОтправки.Сообщение = "Не заполнен перечень документов для получения компенсации!!";
		Возврат РезультатОтправки;
		
	КонецЕсли;	
		
	Таблица 									= ""; 
	style 										= "<td style = ""background: #fff; text-align: left;""><font FACE=""Verdana"" color=""000000"" size=2";
	ЦветШапки 									= "F0FFFF";
	TR 											= "<th style = ""background: #";
	TA1											= "; text-align: left;""><font FACE=""Verdana"" color=""000000"" size=2";
	Таблица 							 		= Таблица + "<b>Информация о документе</b>";
	
	Таблица = Таблица + "<BR>" + "Номер заявки: " 	 + ВыборкаШапкаДокумента.Номер;
	Таблица = Таблица + "<BR>" + "Дата: " 			 + ВыборкаШапкаДокумента.Дата;
	Таблица = Таблица + "<BR>" + "Получатель: " 	 + ВыборкаШапкаДокумента.Получатель;
	Таблица = Таблица + "<BR>" + "Сумма документа: " + Формат(ВыборкаШапкаДокумента.СуммаДокумента,"ЧЦ=15; ЧДЦ=2");
	
	Таблица = Таблица + "<BR>";
	
	Таблица	= Таблица + "<br>";
	Таблица	= Таблица + "<b>Информация из таблицы Перечень документов</b>";
	Таблица	= Таблица + "<Table border style = ""border-collapse: collapse;"">";
	Таблица	= Таблица + TR + ЦветШапки + TA1 + ">Номер договора" + TR + ЦветШапки + TA1 + ">Дата договора" + TR + ЦветШапки + TA1 + ">Дата начала" + TR + ЦветШапки + TA1 + ">Дата окончания" + TR + ЦветШапки + TA1 + ">Сумма договора" + TR + ЦветШапки + TA1 + ">Компенсация" + "<TR>";
	
	Пока ВыборкаПереченьДокументов.Следующий() Цикл
		Таблица	= Таблица + TR + ЦветШапки + TA1 + ">" + ВыборкаПереченьДокументов.НомерДоговора;
		Таблица	= Таблица + TR + ЦветШапки + TA1 + ">" + Формат(ВыборкаПереченьДокументов.ДатаДоговора,"ДФ=dd.MM.yyyy");
		Таблица	= Таблица + TR + ЦветШапки + TA1 + ">" + Формат(ВыборкаПереченьДокументов.ДатаНачала,"ДФ=dd.MM.yyyy");
		Таблица	= Таблица + TR + ЦветШапки + TA1 + ">" + Формат(ВыборкаПереченьДокументов.ДатаОкончания,"ДФ=dd.MM.yyyy");
		Таблица	= Таблица + TR + ЦветШапки + TA1 + ">" + Формат(ВыборкаПереченьДокументов.СуммаДоговора,"ЧЦ=15; ЧДЦ=2");
		Таблица	= Таблица + TR + ЦветШапки + TA1 + ">" + Формат(ВыборкаПереченьДокументов.Компенсация,"ЧЦ=15; ЧДЦ=2")		+ "<TR>";
	КонецЦикла;
	
	Таблица	= Таблица + "</Table>";
	Таблица	= Таблица + "<br>";
	
	//Отправка почтового сообщения
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
	
	СписокКому = Новый СписокЗначений;
	
	Тема 										= "Заявка на компенсацию спорта и медицины №" + СокрЛП(ВыборкаШапкаДокумента.Номер) + " от " + Формат(ВыборкаШапкаДокумента.Дата,"ДФ=dd.MM.yyyy");
	ID_MESSAGE 									= Новый УникальныйИдентификатор;
	TYPE_MESSAGE                                = 13; //susk - исправил. 12 уже был.
	GUID_Заявки									= Строка(ДокументСсылка.УникальныйИдентификатор());

	Попытка
		УправлениеЭлектроннойПочтой.ОтправитьЗаявкуНаПодтверждение(Тема, Таблица, ВыборкаШапкаДокумента.Номер, СписокКому, GUID_Заявки, ID_MESSAGE, TYPE_MESSAGE, АдресПолучателя, ДокументСсылка.Акцептант, УчетнаяЗапись, ДокументСсылка);
		РезультатОтправки.Результат = Истина;
	Исключение
		РезультатОтправки.Сообщение = ОписаниеОшибки();
	КонецПопытки;	
	
	Возврат РезультатОтправки;
	
КонецФункции	




















