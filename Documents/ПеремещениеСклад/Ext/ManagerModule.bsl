
Функция ПолучитьТекстЗапросаПоТоварамЗаданийНаПеремещение() Экспорт
	
	Возврат
		"ВЫБРАТЬ
		|	ЗаданиеНаПеремещениеТовары.Ссылка КАК ЗаданиеНаФасовку,
		|	ЗаданиеНаПеремещениеТовары.Номенклатура КАК Номенклатура,
		|	ЗаданиеНаПеремещениеТовары.Характеристика КАК Характеристика,
		|	ЗаданиеНаПеремещениеТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЗаданиеНаПеремещениеТовары.ДатаПроизводства КАК ДатаПроизводства,
		|	СУММА(ЗаданиеНаПеремещениеТовары.Количество) КАК КоличествоОтправитель,
		|	СУММА(ЗаданиеНаПеремещениеТовары.Количество) КАК КоличествоПолучатель
		|ИЗ
		|	Документ.ЗаданиеНаПеремещение.Товары КАК ЗаданиеНаПеремещениеТовары
		|ГДЕ
		|	ЗаданиеНаПеремещениеТовары.Ссылка В(&ЗаданияНаПеремещение)
		//|	И ЗаданиеНаПеремещениеТовары.ДатаПроизводства = &ДатаПроизводства
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаданиеНаПеремещениеТовары.Ссылка,
		|	ЗаданиеНаПеремещениеТовары.Номенклатура,
		|	ЗаданиеНаПеремещениеТовары.Характеристика,
		|	ЗаданиеНаПеремещениеТовары.ЕдиницаИзмерения,
		|	ЗаданиеНаПеремещениеТовары.ДатаПроизводства
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗаданиеНаПеремещениеТовары.Номенклатура.Наименование,
		|	ЗаданиеНаПеремещениеТовары.Ссылка.МоментВремени";

КонецФункции	

Функция ПолучитьТекстЗапросаПоТоварамЗаданийНаФасовку() Экспорт
	
	Возврат
		"ВЫБРАТЬ
		|	ЗаданиеНаФасовкуТовары.Ссылка КАК ЗаданиеНаФасовку,
		|	ЗаданиеНаФасовкуТовары.Номенклатура КАК Номенклатура,
		|	ЗаданиеНаФасовкуТовары.Характеристика КАК Характеристика,
		|	ЗаданиеНаФасовкуТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЗаданиеНаФасовкуТовары.ДатаПроизводства КАК ДатаПроизводства,
		|	СУММА(ЗаданиеНаФасовкуТовары.Количество) КАК КоличествоОтправитель,
		|	СУММА(ЗаданиеНаФасовкуТовары.Количество) КАК КоличествоПолучатель
		|ИЗ
		|	Документ.ЗаданиеНаФасовку.Товары КАК ЗаданиеНаФасовкуТовары
		|ГДЕ
		|	ЗаданиеНаФасовкуТовары.Ссылка В(&ЗаданияНаФасовку)
		|	И ЗаданиеНаФасовкуТовары.ДатаПроизводства = &ДатаПроизводства
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаданиеНаФасовкуТовары.Ссылка,
		|	ЗаданиеНаФасовкуТовары.Номенклатура,
		|	ЗаданиеНаФасовкуТовары.Характеристика,
		|	ЗаданиеНаФасовкуТовары.ЕдиницаИзмерения,
		|	ЗаданиеНаФасовкуТовары.ДатаПроизводства
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗаданиеНаФасовкуТовары.Номенклатура.Наименование,
		|	ЗаданиеНаФасовкуТовары.Ссылка.МоментВремени";

КонецФункции	

Функция Печать(Ссылка) Экспорт 
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ОриентацияСтраницы		= ОриентацияСтраницы.Портрет;
	ТабДок.РазмерКолонтитулаСнизу	= 0;
	ТабДок.РазмерКолонтитулаСверху 	= 0;
	ТабДок.ПолеСверху 	= 5;
	ТабДок.ПолеСнизу 	= 5;
	ТабДок.ПолеСлева 	= 5;
	ТабДок.ПолеСправа 	= 5;
	ТабДок.АвтоМасштаб	= Истина;
	
	Макет = Документы.ПеремещениеСклад.ПолучитьМакет("Ордер");
	
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Запрос.Параметры.Вставить("ДатаСреза", Ссылка.Дата);
	Запрос.Параметры.Вставить("СтрЕдиница", Ссылка.СкладОтправитель.Владелец);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПеремещениеСклад.Ссылка,
	|	ПеремещениеСклад.ВерсияДанных,
	|	ПеремещениеСклад.ПометкаУдаления,
	|	ПеремещениеСклад.Номер,
	|	ПеремещениеСклад.Дата,
	|	ПеремещениеСклад.Проведен,
	|	ПеремещениеСклад.Автор,
   //+++АК SHEP 2018.04.06 ИП-00018324
   |	ПеремещениеСклад.ОтветственныйСборщик,
   //---АК SHEP 2018.04.06
	|	ПеремещениеСклад.Товары.(
	|		Ссылка,
	|		НомерСтроки,
	|		Номенклатура,
	|		Характеристика,
	|		ЕдиницаИзмерения,
	|		КоличествоОтправитель,
	|		КоличествоПолучатель,
	|		ДатаПроизводства КАК ДатаПроизв
	|	),
	|	ПеремещениеСклад.СкладОтправитель,
	|	ПеремещениеСклад.СкладПолучатель,
	|	ПеремещениеСклад.СтруктурнаяЕдиница
	|ИЗ
	|	Документ.ПеремещениеСклад КАК ПеремещениеСклад
	|ГДЕ
	|	ПеремещениеСклад.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КоличествоВКоробкеСрезПоследних.Характеристика КАК Объект,
	|	КоличествоВКоробкеСрезПоследних.Количество КАК Значение,
	|	КоличествоВКоробкеСрезПоследних.СтруктурнаяЕдиница
	|ИЗ
	|	РегистрСведений.КоличествоВКоробке.СрезПоследних(
	|			&ДатаСреза,
	|			СтруктурнаяЕдиница = &СтрЕдиница
	|				И Характеристика В
	|					(ВЫБРАТЬ
	|						ПеремещениеСкладТовары.Характеристика
	|					ИЗ
	|						Документ.ПеремещениеСклад.Товары КАК ПеремещениеСкладТовары
	|					ГДЕ
	|						ПеремещениеСкладТовары.Ссылка = &Ссылка)) КАК КоличествоВКоробкеСрезПоследних";
	Результаты = Запрос.ВыполнитьПакет();
	Выборка 			= Результаты[0].Выбрать();
	ТабХарактеристики 	= Результаты[1].Выгрузить();

	ОбластьЗаголовок 			= Макет.ПолучитьОбласть("Заголовок");
	ОбластьСтруктурнаяЕдиница	= Макет.ПолучитьОбласть("СтруктурнаяЕдиница");
	ОбластьОтправитель	= Макет.ПолучитьОбласть("Отправитель");
	ОбластьПолучатель 	= Макет.ПолучитьОбласть("Получатель");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьСтрока 		= Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал 		= Макет.ПолучитьОбласть("Подвал");
	ОбластьВремяПечати 	= Макет.ПолучитьОбласть("ВремяПечати");
	

	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ОбластьЗаголовок.Параметры.Заполнить(Выборка);
		ОбластьЗаголовок.Параметры.Дата = Формат(Выборка.Дата, "ДЛФ=DD");
		
		ОбщегоНазначенияКлиентСервер.ДобавитьШтрихкодВОбластьДокумента(ОбластьЗаголовок,Выборка.Ссылка);
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		ОбластьСтруктурнаяЕдиница.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(ОбластьСтруктурнаяЕдиница, Выборка.Уровень());

		ОбластьОтправитель.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(ОбластьОтправитель, Выборка.Уровень());
		
		ОбластьПолучатель.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(ОбластьПолучатель, Выборка.Уровень());
		
		ТабДок.Вывести(ОбластьШапкаТаблицы);
		ВыборкаНоменклатура = Выборка.Товары.Выбрать();
		
		Пока ВыборкаНоменклатура.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаНоменклатура);
			СтрокиХарактеристика = ТабХарактеристики.НайтиСтроки(Новый структура("Объект", ВыборкаНоменклатура.Характеристика));
			КоличествоВУпаковке = 0;
			Если СтрокиХарактеристика.Количество() > 0 Тогда
				КоличествоВУпаковке = СтрокиХарактеристика[0].Значение;
			КонецЕсли;	
			Если КоличествоВУпаковке > 0 Тогда
				ОбластьСтрока.Параметры.КоличествоКоробок = Окр(ВыборкаНоменклатура.КоличествоОтправитель / КоличествоВУпаковке, 1);
			Иначе				
				ОбластьСтрока.Параметры.КоличествоКоробок = "";
			КонецЕсли;
			
//			Отбор = новый структура;
//			Отбор.Вставить("Объект",ВыборкаНоменклатура.Характеристика);
//			Отбор.Вставить("Свойство",ПланыВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке);
//			Отбор.Вставить("СтруктурнаяЕдиница",Справочники.СтруктурныеЕдиницы.ПустаяСсылка());
//			
//			Результат = РегистрыСведений.ЗначенияСвойствОбъектов.Получить(Отбор);
//			КоличествоВУпаковке = Результат.Значение;
//			Если КоличествоВУпаковке = Неопределено Тогда
//				КоличествоВУпаковке = 0;
//			КонецЕсли;
//			Если КоличествоВУпаковке > 0 Тогда
////				ОбластьСтрока.Параметры.КолВУпак = КоличествоВУпаковке;
//				ОбластьСтрока.Параметры.КолУпакУРЗ = Окр(ВыборкаНоменклатура.КоличествоУРЗ/КоличествоВУпаковке,1);
//			Иначе				
////				ОбластьСтрока.Параметры.КолВУпак = "";
//				ОбластьСтрока.Параметры.КолУпакУРЗ = "";
//			КонецЕсли;
			
			ТабДок.Вывести(ОбластьСтрока, ВыборкаНоменклатура.Уровень());
			
		КонецЦикла;

		ОбластьВремяПечати.Параметры.ВремяПечати = "["+ТекущаяДата()+"] "+"Автор: "+Выборка.Автор;
		
		ОбластьПодвал.Параметры.Заполнить(Выборка); //+++АК SHEP 2018.04.06 ИП-00018324
		ТабДок.Вывести(ОбластьПодвал);

		ВставлятьРазделительСтраниц = Истина;
		ТабДок.Вывести(ОбластьВремяПечати);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьМХ1(Ссылка) Экспорт 
	
	ЗапросОрганизация = Новый Запрос;
	
	ЗапросОрганизация.Текст =
    	       	
	"ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление КАК АдресОрганизации
	|ИЗ
	|	Документ.ПеремещениеСклад КАК ПеремещениеСклад
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
	|			И ПеремещениеСклад.СкладОтправитель.Контрагент = КонтактнаяИнформация.Объект
	|ГДЕ
	|	ПеремещениеСклад.Ссылка = &ТекущийДокумент";
	
	ЗапросОрганизация.УстановитьПараметр("ТекущийДокумент", Ссылка);
	
	ВыборкаОрганизация = ЗапросОрганизация.Выполнить().Выбрать();
	ВыборкаОрганизация.Следующий();
	
	ЗапросКонтрагент = Новый Запрос;
	
	ЗапросКонтрагент.Текст =
			   	
	"ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление КАК АдресКонтрагента
	|ИЗ
	|	Документ.ПеремещениеСклад КАК ПеремещениеСклад
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО ( КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента))
	|			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|			И ПеремещениеСклад.СкладПолучатель.Контрагент = КонтактнаяИнформация.Объект
	|ГДЕ
	|	ПеремещениеСклад.Ссылка = &ТекущийДокумент";
	
	ЗапросКонтрагент.УстановитьПараметр("ТекущийДокумент", Ссылка);
	
	ВыборкаКонтрагент = ЗапросКонтрагент.Выполнить().Выбрать();
	ВыборкаКонтрагент.Следующий();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
    "ВЫБРАТЬ
    |	ПеремещениеСкладТовары.Ссылка.Номер КАК НомерДокумента,
    |	ПеремещениеСкладТовары.Ссылка.Дата КАК ДатаДокумента,
    |	ПеремещениеСкладТовары.Ссылка.СкладОтправитель.Контрагент.НаименованиеПолное КАК НаименованиеПолноеОрганизации,
    |	ПеремещениеСкладТовары.Ссылка.СкладПолучатель.Контрагент.НаименованиеПолное КАК Заказчик,
    |	ПеремещениеСкладТовары.Номенклатура.Артикул КАК Артикул,
    |	ПеремещениеСкладТовары.Номенклатура.Наименование КАК Товар,
    |	ПеремещениеСкладТовары.КоличествоПолучатель КАК Количество,
    |	0 КАК Цена,
    |	0 КАК Сумма,
    |	0 КАК СуммаНДС,
    |	ПеремещениеСкладТовары.ЕдиницаИзмерения КАК ЕденицаИзмерения
    |ИЗ
    |	Документ.ПеремещениеСклад.Товары КАК ПеремещениеСкладТовары
    |ГДЕ
    |	ПеремещениеСкладТовары.Ссылка = &ТекущийДокумент";
	
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	ТабДокумент = Новый ТабличныйДокумент;

	ТабДокумент.ПолеСверху              = 0;
	ТабДокумент.ПолеСлева               = 5;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 5;
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.РазмерКолонтитулаСнизу  = 0;
	ТабДокумент.АвтоМасштаб             = Истина;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_МХ1";
	
	Макет = Документы.ПеремещениеСклад.ПолучитьМакет("МХ1");
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");                                                     
	//ОбластьМакета.Параметры.ПредставлениеОрганизации = ?(Выборка.НаименованиеПолноеОрганизации = null, "", Выборка.НаименованиеПолноеОрганизации) + ", " + ВыборкаОрганизация.АдресОрганизации;
	//ОбластьМакета.Параметры.ПредставлениеКонтрагента = ?(Выборка.Заказчик = null, "", Выборка.Заказчик) + ", " + ВыборкаКонтрагент.АдресКонтрагента;
    ОбластьМакета.Параметры.НомерДокумента =  Выборка.НомерДокумента;
	ОбластьМакета.Параметры.ДатаДокумента =  Выборка.ДатаДокумента;
	ТабДокумент.Вывести(ОбластьМакета);
	
	Ном = 0;
	НомерСтраницы = 1;
	НомерСтроки = 0;
	ИтогоСумма = 0;
	ИтогоКоличество = 0;
	ИтогоСуммаПоСтранице = 0;
	ИтогоКоличествоПоСтранице = 0;
	КоличествоСтрок = Выборка.Количество();
	
	МассивВыводимыхОбластей = Новый Массив;
	
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьМакетаИтогоПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьМакетаИтого = Макет.ПолучитьОбласть("Итого");
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");
	
	Выборка.Сбросить();
	
	Пока Выборка.Следующий() Цикл
		
		НомерСтроки = НомерСтроки + 1;
		Ном         = Ном + 1;
		
		ОбластьМакетаСтрока.Параметры.НомерСтроки = НомерСтроки;              
		ОбластьМакетаСтрока.Параметры.Заполнить(Выборка);
		
		Если Ном = 1 Тогда // первая срока
			
			ОбластьМакетаШапка.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
			ТабДокумент.Вывести(ОбластьМакетаШапка);
			
		Иначе
			
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакетаСтрока);
			МассивВыводимыхОбластей.Добавить(ОбластьМакетаИтогоПоСтранице);
			Если Ном = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьМакетаИтого);
				МассивВыводимыхОбластей.Добавить(ОбластьМакетаПодвал);
			КонецЕсли;	
			
			Если Ном <> 1 И НЕ ТабДокумент.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
				
				ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоКоличествоПоСтранице = ИтогоКоличествоПоСтранице;
				ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоСуммаПоСтранице = ИтогоСуммаПоСтранице;
				ТабДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
				
				ИтогоКоличествоПоСтранице = 0;
				ИтогоСуммаПоСтранице = 0;
				
				НомерСтраницы = НомерСтраницы + 1;
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ОбластьМакетаШапка.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ОбластьМакетаШапка);
			КонецЕсли;
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакетаСтрока);
		
		ИтогоКоличествоПоСтранице = ИтогоКоличествоПоСтранице + Выборка.Количество;
		ИтогоСуммаПоСтранице = ИтогоСуммаПоСтранице + Выборка.Сумма;

		ИтогоСумма = ИтогоСумма + Выборка.Сумма; 
		ИтогоКоличество = ИтогоКоличество + Выборка.Количество;

	КонецЦикла;
	//
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоКоличествоПоСтранице = ИтогоКоличествоПоСтранице;
	ОбластьМакетаИтогоПоСтранице.Параметры.ИтогоСуммаПоСтранице = ИтогоСуммаПоСтранице;
	ТабДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
	
	ОбластьМакетаИтого.Параметры.ИтогоСумма = ИтогоСумма;	
	ОбластьМакетаИтого.Параметры.ИтогоКоличество =  ИтогоКоличество;

	ТабДокумент.Вывести(ОбластьМакетаИтого);
	ТабДокумент.Вывести(ОбластьМакетаПодвал);
	
	Возврат ТабДокумент;
	
КонецФункции

//+++ KOPA 23.11.2017 [ИП-00017264]
Функция ПечатьУведомлениеОВозвратеТовара(Ссылка) Экспорт 
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ОриентацияСтраницы		= ОриентацияСтраницы.Портрет;
	ТабДок.РазмерКолонтитулаСнизу	= 0;
	ТабДок.РазмерКолонтитулаСверху 	= 0;
	ТабДок.ПолеСверху 	= 5;
	ТабДок.ПолеСнизу 	= 5;
	ТабДок.ПолеСлева 	= 5;
	ТабДок.ПолеСправа 	= 5;
	ТабДок.АвтоМасштаб	= Истина;
	
	Если Ссылка.Товары.Количество() = 0 Тогда
		Возврат ТабДок;	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПеремещениеСклад.Дата,
		|	ПРЕДСТАВЛЕНИЕ(ПеремещениеСклад.Технолог) КАК ФИО,
		|	ПРЕДСТАВЛЕНИЕ(ПеремещениеСклад.СкладОтправитель) КАК Склад,
		//+++АК SHEP 2018.04.06 ИП-00018324
		|	ПРЕДСТАВЛЕНИЕ(ПеремещениеСклад.ОтветственныйСборщик) КАК ОтветственныйСборщик,
		//---АК SHEP 2018.04.06
		|	ПеремещениеСклад.Комментарий КАК ПричинаВозврата
		|ИЗ
		|	Документ.ПеремещениеСклад КАК ПеремещениеСклад
		|ГДЕ
		|	ПеремещениеСклад.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДокумент = РезультатЗапроса.Выбрать();	
	ВыборкаДокумент.Следующий();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПеремещениеСкладТовары.Номенклатура КАК Номенклатура,
		|	СУММА(ПеремещениеСкладТовары.КоличествоПолучатель) КАК Количество,
		|	ПеремещениеСкладТовары.Характеристика,
		|	ПеремещениеСкладТовары.ДатаПроизводства
		|ПОМЕСТИТЬ тТовары
		|ИЗ
		|	Документ.ПеремещениеСклад.Товары КАК ПеремещениеСкладТовары
		|ГДЕ
		|	ПеремещениеСкладТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПеремещениеСкладТовары.Номенклатура,
		|	ПеремещениеСкладТовары.Характеристика,
		|	ПеремещениеСкладТовары.ДатаПроизводства
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ПРЕДСТАВЛЕНИЕ(тТовары.Номенклатура) КАК Наименование,
		|	тТовары.Количество,
		|	тТовары.Характеристика,
		|	ПРЕДСТАВЛЕНИЕ(ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, ЗНАЧЕНИЕ(справочник.Контрагенты.пустаяссылка))) КАК Поставщик,
		|	тТовары.ДатаПроизводства
		|ИЗ
		|	тТовары КАК тТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|		ПО тТовары.Характеристика = ЗначенияСвойствОбъектов.Объект
		|			И (ЗначенияСвойствОбъектов.Свойство = &СвойствоПроизводитель)
		|ИТОГИ ПО
		|	Поставщик";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("СвойствоПроизводитель", ПланыВидовХарактеристик.СвойстваОбъектов.Производитель);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Данные = Новый Структура("Дата, Фио, Склад");
	Данные.Вставить("ОтветственныйСборщик"); //+++АК SHEP 2018.04.06 ИП-00018324
	ЗаполнитьЗначенияСвойств(Данные, ВыборкаДокумент);
	Данные.Вставить("ПричинаВозврата", СтрЗаменить(ВыборкаДокумент.ПричинаВозврата, "Создано программно.", ""));
	
	Количество = Выборка.Количество() - 1;
	е = 0;
	
	Пока Выборка.Следующий() Цикл			
		Данные.Вставить("Поставщик", Выборка.Поставщик);
		
		ВыборкаТовары = Выборка.Выбрать();
		
		АК_ДобавитьВозвратТовара(ТабДок, Данные, ВыборкаТовары);
				
		Если Не е = Количество Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		е = е + 1;
	КонецЦикла;

	Возврат ТабДок;	
КонецФункции//--- KOPA

//+++ KOPA 23.11.2017 [ИП-00017264]
Функция АК_ДобавитьВозвратТовара(ТабДок, Данные, ВыборкаТовары)
	Макет = Документы.ПеремещениеСклад.ПолучитьМакет("УведомлениеОВозвратеТовара");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры, Данные);
	ТабДок.Вывести(ОбластьШапка);
	
	ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаТовары");
	
	Номер = 1;
	Пока ВыборкаТовары.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, ВыборкаТовары);
		
		ОбластьСтрока.Параметры.Номер = Номер;
		Номер = Номер + 1;
		
		ТабДок.Вывести(ОбластьСтрока);
	КонецЦикла;
	
		
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ЗаполнитьЗначенияСвойств(ОбластьПодвал.Параметры, Данные);
	
	ОбластьПодвал.Параметры.День = День(Данные.Дата);
	ОбластьПодвал.Параметры.Месяц = Формат(Данные.Дата, "ДФ=MMMM");
	ОбластьПодвал.Параметры.Год = Год(Данные.Дата);
	
	ТабДок.Вывести(ОбластьПодвал);
КонецФункции//--- KOPA


