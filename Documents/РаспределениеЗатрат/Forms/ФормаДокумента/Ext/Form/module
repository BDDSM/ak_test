
//+++АК ZICD 11.01.2017 ИП-00014365
Перем _НачалоУчётаМСФО; // Настройка системы
//---АК

Перем ОперацияАпдекс; //+++АК sils 07.06.2018 ИП-00018876

Процедура КомментарийНачалоВыбора(Элемент, СтандартнаяОбработка)
		
	ФормаРедактированияТекста = ПолучитьОбщуюФорму("ФормаРедактированияТекста");
	ФормаРедактированияТекста.УстановитьРедактируемыйТекст(Комментарий);
	ОтредактировалиТекст = ФормаРедактированияТекста.ОткрытьМодально();
	
	Если ОтредактировалиТекст = Истина Тогда
		Комментарий = ФормаРедактированияТекста.ПолучитьРедактируемыйТекст();
	КонецЕсли;

КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЭтоНовый() Тогда 
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, );
	Иначе
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	КонецЕсли;
	
	//+++АК ZICD 11.01.2017 ИП-00014365
	УстановитьЗначенияПоУмолчанию();
	УстановитьВидимостьЭлементов();
	//---АК
	
	//+++АК sils 08.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(ЭтоНовый(), "Новый документ", "" + ЭтотОбъект));
	//---АК
КонецПроцедуры

//+++АК ZICD 11.01.2017 ИП-00014365
Процедура УстановитьЗначенияПоУмолчанию()
	// Выполняется только для нового документа
	Если Не ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	ЭтотОбъект.МСФО = Ложь;
	ЭтотОбъект.СчетЗатрат = ПланыСчетов.Финансовый.ЗатратыДляРаспределения; // 44.0
КонецПроцедуры
Процедура УстановитьВидимостьЭлементов()
	УчётПоМСФО_Выключен = (_НачалоУчётаМСФО = Дата("00010101") Или ЭтотОбъект.Дата < _НачалоУчётаМСФО);
	ЭлементыФормы.Панель1.Страницы.СтраницаРасчет.Видимость = УчётПоМСФО_Выключен;
	ЭлементыФормы.НадписьМСФО.Видимость = Не УчётПоМСФО_Выключен;
	ЭлементыФормы.ФлажокМСФО.Видимость = Не УчётПоМСФО_Выключен;
КонецПроцедуры
//---АК

Процедура КоманднаяПанель1Заполнить(Кнопка)
	
	Если НЕ ЗначениеЗаполнено(СчетЗатрат) Тогда
		Сообщить("Не заполнен счет затрат!", СтатусСообщения.Внимание);
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.Проведен Тогда
		ОтветНаВопрос = Вопрос("Перед заполнением требуется отменить проведение?", РежимДиалогаВопрос.ДаНет);
		
		Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
			Возврат;
		ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			ЭтотОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли; 
	КонецЕсли;
	
	Если Распределение.Количество() > 0 Тогда
		
		ОтветНаВопрос = Вопрос("Очистить табличную часть перед загрузкой?", РежимДиалогаВопрос.ДаНетОтмена);
		
		Если ОтветНаВопрос = КодВозвратаДиалога.Отмена Тогда
			Возврат;
		ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			Распределение.Очистить();;
		КонецЕсли;
		
	КонецЕсли; 
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("10.0.0.40");
	
	ТекстЗапросаSQL = "SELECT CAST(TTBin2UID.UID as nvarchar(50)) TTUid, olap.date date
					|	  ,SUM(olap.Эффективность) Эффективность
					|  FROM [OLAP].[dbo].[olap_v] (nolock) as olap
					|  LEFT OUTER JOIN IzbenkaFin.dbo.TTBin2UID as TTBin2UID
					|	ON olap.id_tt = TTBin2UID.id_tt
					|WHERE olap.date >= " + ВнешниеДанные.ФорматПоля(НачалоМесяца(ЭтотОбъект.Дата)) + " and olap.date <= " + ВнешниеДанные.ФорматПоля(КонецМесяца(ЭтотОбъект.Дата)) + "
					|GROUP BY
					|CAST(TTBin2UID.UID as nvarchar(50)), olap.date";
					
	ТабСЭффективностью = Новый ТаблицаЗначений();
	ТабСЭффективностью.Колонки.Добавить("ТорговаяТочка", Новый ОписаниеТипов("СправочникСсылка.СтруктурныеЕдиницы"));
	ТабСЭффективностью.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	ТабСЭффективностью.Колонки.Добавить("Эффективность", Новый ОписаниеТипов("Число"));
	
	rs = ADOСоединение.Execute(ТекстЗапросаSQL);
	Попытка
		rs.MoveFirst();
		Пока НЕ rs.Eof() Цикл
			НовСтр = ТабСЭффективностью.Добавить();
			НовСтр.ТорговаяТочка = Справочники.СтруктурныеЕдиницы.ПолучитьСсылку(Новый УникальныйИдентификатор(rs.Fields("TTUid").Value));
			НовСтр.Дата = rs.Fields("date").Value;
			НовСтр.Эффективность = rs.Fields("Эффективность").Value;
			
			rs.MoveNext();
		КонецЦикла;
		
	Исключение
	КонецПопытки;
	
	ADOСоединение.Close();
	
	СписокСчетов = Новый СписокЗначений;
	СписокСчетов.Добавить(ПланыСчетов.Финансовый.ЗатратыТорговыхТочек);
	СписокСчетов.Добавить(ПланыСчетов.Финансовый.ВыручкаТорговыхТочек);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач"		, НачалоМесяца(ЭтотОбъект.Дата));
	Запрос.УстановитьПараметр("ДатаКон"		, КонецМесяца(ЭтотОбъект.Дата));
	Запрос.УстановитьПараметр("ДатаНачала"		, Новый Граница(НачалоМесяца(ЭтотОбъект.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаОкончания"	, Новый Граница(КонецМесяца(ЭтотОбъект.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаОкончанияГр"	, Новый Граница(КонецМесяца(ЭтотОбъект.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ИзбенкаОбщий"	, Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_ЦФО", 10032));
	Запрос.УстановитьПараметр("ВкусвиллОбщий"	, Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_ЦФО", 10030));
	Запрос.УстановитьПараметр("Все"				, Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_ЦФО", 10031));
	Запрос.УстановитьПараметр("СчетЗатрат"		, СчетЗатрат);
	Запрос.УстановитьПараметр("СписокСчетов"	, СписокСчетов);
	Запрос.УстановитьПараметр("ТабЭффективность"	, ТабСЭффективностью);
	
	//+++ VERN 2016-09-14 ИП-00013592 Устранение ошибки SQL при выполнении запроса
	//Запрос.Текст =
	//"ВЫБРАТЬ
	//|	З.ГоловноеПодразделение КАК ГоловноеПодразделение
	//|ПОМЕСТИТЬ Временная_ГоловноеПодразделение
	//|ИЗ
	//|	(ВЫБРАТЬ
	//|		СтруктурныеЕдиницы.ГоловноеПодразделение КАК ГоловноеПодразделение
	//|	ИЗ
	//|		Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	//|	ГДЕ
	//|		НЕ СтруктурныеЕдиницы.ГоловноеПодразделение = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	//|	
	//|	СГРУППИРОВАТЬ ПО
	//|		СтруктурныеЕдиницы.ГоловноеПодразделение
	//|	
	//|	ОБЪЕДИНИТЬ ВСЕ
	//|	
	//|	ВЫБРАТЬ
	//|		ФинансовыйОбороты.Субконто3
	//|	ИЗ
	//|		РегистрБухгалтерии.Финансовый.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, Счет В (&СписокСчетов), , Субконто2 = ЗНАЧЕНИЕ(Справочник.СтатьиДоходовРасходов.РозничнаяВыручка), , ) КАК ФинансовыйОбороты
	//|	ГДЕ
	//|		ТИПЗНАЧЕНИЯ(ФинансовыйОбороты.Регистратор) = ТИП(Документ.ЛистУчета)
	//|	
	//|	СГРУППИРОВАТЬ ПО
	//|		ФинансовыйОбороты.Субконто3) КАК З
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	З.ГоловноеПодразделение
	//|
	//|ИНДЕКСИРОВАТЬ ПО
	//|	ГоловноеПодразделение
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	Таб.ТорговаяТочка,
	//|	Таб.Дата,
	//|	Таб.Эффективность
	//|ПОМЕСТИТЬ ВТТаб
	//|ИЗ
	//|	&ТабЭффективность КАК Таб
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ЛистУчета.ТорговаяТочка,
	//|	ЛистУчета.ЦФО КАК Управление,
	//|	ВЫБОР
	//|		КОГДА ЛистУчета.ЦФО.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат = 0
	//|				ИЛИ ЛистУчета.ЦФО.ГоловноеПодразделение ЕСТЬ NULL 
	//|			ТОГДА 1
	//|		ИНАЧЕ ЛистУчета.ЦФО.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат
	//|	КОНЕЦ КАК КоэффициентРаспределенияЗатрат,
	//|	ВЫБОР
	//|		КОГДА ЛистУчета.ТорговаяТочка.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	//|			ТОГДА &ВкусвиллОбщий
	//|		ИНАЧЕ &ИзбенкаОбщий
	//|	КОНЕЦ КАК ГоловноеПодразделение,
	//|	&Все КАК ВсеПодразделения,
	//|	СУММА(ВТТаб.Эффективность) КАК Эффективность
	//|ПОМЕСТИТЬ ВТБазаЭффективность
	//|ИЗ
	//|	Документ.ЛистУчета КАК ЛистУчета
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаб КАК ВТТаб
	//|		ПО ЛистУчета.ТорговаяТочка = ВТТаб.ТорговаяТочка
	//|			И (НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) = ВТТаб.Дата)
	//|ГДЕ
	//|	ЛистУчета.Дата МЕЖДУ &ДатаНач И &ДатаКон
	//|	И ЛистУчета.Проведен = ИСТИНА
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ЛистУчета.ТорговаяТочка,
	//|	ЛистУчета.ЦФО,
	//|	ВЫБОР
	//|		КОГДА ЛистУчета.ЦФО.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат = 0
	//|				ИЛИ ЛистУчета.ЦФО.ГоловноеПодразделение ЕСТЬ NULL 
	//|			ТОГДА 1
	//|		ИНАЧЕ ЛистУчета.ЦФО.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат
	//|	КОНЕЦ,
	//|	ВЫБОР
	//|		КОГДА ЛистУчета.ТорговаяТочка.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	//|			ТОГДА &ВкусвиллОбщий
	//|		ИНАЧЕ &ИзбенкаОбщий
	//|	КОНЕЦ
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ФинансовыйОбороты.Субконто1 КАК ТорговаяТочка,
	//|	ВЫБОР
	//|		КОГДА СУММА(ФинансовыйОбороты.СуммаОборотКт) > 0
	//|			ТОГДА СУММА(ФинансовыйОбороты.СуммаОборотКт - ФинансовыйОбороты.СуммаОборотДт)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК Выручка,
	//|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ФинансовыйОбороты.Период) КАК КоличествоСмен,
	//|	ВЫБОР
	//|		КОГДА ФинансовыйОбороты.Субконто3.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат = 0
	//|				ИЛИ ФинансовыйОбороты.Субконто3.ГоловноеПодразделение ЕСТЬ NULL 
	//|			ТОГДА 1
	//|		ИНАЧЕ ФинансовыйОбороты.Субконто3.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат
	//|	КОНЕЦ КАК КоэффициентРаспределенияЗатрат,
	//|	ФинансовыйОбороты.Субконто3 КАК Управление,
	//|	ВЫБОР
	//|		КОГДА ФинансовыйОбороты.Субконто1.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	//|			ТОГДА &ВкусвиллОбщий
	//|		ИНАЧЕ &ИзбенкаОбщий
	//|	КОНЕЦ КАК ГоловноеПодразделение,
	//|	&Все КАК ВсеПодразделения
	//|ПОМЕСТИТЬ ВТБазаВыручка
	//|ИЗ
	//|	РегистрБухгалтерии.Финансовый.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, Счет В (&СписокСчетов), , Субконто2 = ЗНАЧЕНИЕ(Справочник.СтатьиДоходовРасходов.РозничнаяВыручка), , ) КАК ФинансовыйОбороты
	//|ГДЕ
	//|	ТИПЗНАЧЕНИЯ(ФинансовыйОбороты.Регистратор) = ТИП(Документ.ЛистУчета)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ФинансовыйОбороты.Субконто1,
	//|	ФинансовыйОбороты.Субконто3,
	//|	ВЫБОР
	//|		КОГДА ФинансовыйОбороты.Субконто1.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	//|			ТОГДА &ВкусвиллОбщий
	//|		ИНАЧЕ &ИзбенкаОбщий
	//|	КОНЕЦ,
	//|	ВЫБОР
	//|		КОГДА ФинансовыйОбороты.Субконто3.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат = 0
	//|				ИЛИ ФинансовыйОбороты.Субконто3.ГоловноеПодразделение ЕСТЬ NULL 
	//|			ТОГДА 1
	//|		ИНАЧЕ ФинансовыйОбороты.Субконто3.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат
	//|	КОНЕЦ
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ЕСТЬNULL(ВТБазаВыручка.ТорговаяТочка, ВТБазаЭффективность.ТорговаяТочка) КАК ТорговаяТочка,
	//|	ЕСТЬNULL(ВТБазаВыручка.Выручка, 0) КАК Выручка,
	//|	ЕСТЬNULL(ВТБазаВыручка.КоличествоСмен, 0) КАК КоличествоСмен,
	//|	ВЫБОР
	//|		КОГДА ЕСТЬNULL(ВТБазаЭффективность.Эффективность, 0) <= 0
	//|			ТОГДА 0
	//|		ИНАЧЕ ВТБазаЭффективность.Эффективность
	//|	КОНЕЦ КАК Эффективность,
	//|	ЕСТЬNULL(ВТБазаВыручка.КоэффициентРаспределенияЗатрат, ВТБазаЭффективность.КоэффициентРаспределенияЗатрат) КАК КоэффициентРаспределенияЗатрат,
	//|	ЕСТЬNULL(ВТБазаВыручка.Управление, ВТБазаЭффективность.Управление) КАК Управление,
	//|	ЕСТЬNULL(ВТБазаВыручка.ГоловноеПодразделение, ВТБазаЭффективность.ГоловноеПодразделение) КАК ГоловноеПодразделение,
	//|	ЕСТЬNULL(ВТБазаВыручка.ВсеПодразделения, ВТБазаЭффективность.ВсеПодразделения) КАК ВсеПодразделения
	//|ПОМЕСТИТЬ ВТБаза
	//|ИЗ
	//|	ВТБазаВыручка КАК ВТБазаВыручка
	//|		ПОЛНОЕ СОЕДИНЕНИЕ ВТБазаЭффективность КАК ВТБазаЭффективность
	//|		ПО ВТБазаВыручка.ТорговаяТочка = ВТБазаЭффективность.ТорговаяТочка И ВТБазаВыручка.Управление = ВТБазаЭффективность.Управление
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ФинансовыйОбороты.Субконто2 КАК СДР,
	//|	ФинансовыйОбороты.Субконто3 КАК ЦФО,
	//|	СУММА(ФинансовыйОбороты.СуммаОстаток) КАК СуммаОборот,
	//|	ФинансовыйОбороты.Субконто2.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	//|	ФинансовыйОбороты.Субконто2.БазаРаспределенияЗатрат КАК БазаРаспределенияЗатрат,
	//|	База.ТорговаяТочка,
	//|	ВЫБОР
	//|		КОГДА Временная_ГоловноеПодразделениеЦФО.ГоловноеПодразделение ЕСТЬ NULL 
	//|				ИЛИ Временная_ГоловноеПодразделениеБАЗА.ГоловноеПодразделение = ФинансовыйОбороты.Субконто1
	//|				ИЛИ ФинансовыйОбороты.Субконто1 = База.Управление
	//|				ИЛИ ФинансовыйОбороты.Субконто1 = База.ВсеПодразделения
	//|			ТОГДА ЕСТЬNULL(База.Выручка, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК Выручка,
	//|	ВЫБОР
	//|		КОГДА Временная_ГоловноеПодразделениеЦФО.ГоловноеПодразделение ЕСТЬ NULL 
	//|				ИЛИ Временная_ГоловноеПодразделениеБАЗА.ГоловноеПодразделение = ФинансовыйОбороты.Субконто1
	//|				ИЛИ ФинансовыйОбороты.Субконто1 = База.Управление
	//|				ИЛИ ФинансовыйОбороты.Субконто1 = База.ВсеПодразделения
	//|			ТОГДА ЕСТЬNULL(База.КоличествоСмен, 0) * ЕСТЬNULL(База.КоэффициентРаспределенияЗатрат, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК КоличествоСмен,
	//|	ВЫБОР
	//|		КОГДА Временная_ГоловноеПодразделениеЦФО.ГоловноеПодразделение ЕСТЬ NULL 
	//|				ИЛИ Временная_ГоловноеПодразделениеБАЗА.ГоловноеПодразделение = ФинансовыйОбороты.Субконто1
	//|				ИЛИ ФинансовыйОбороты.Субконто1 = База.Управление
	//|				ИЛИ ФинансовыйОбороты.Субконто1 = База.ВсеПодразделения
	//|			ТОГДА ЕСТЬNULL(База.Эффективность, 0) * ЕСТЬNULL(База.КоэффициентРаспределенияЗатрат, 0)
	//|		ИНАЧЕ 0
	//|	КОНЕЦ КАК Эффективность,
	//|	База.Управление КАК Управление,
	//|	Временная_ГоловноеПодразделениеБАЗА.ГоловноеПодразделение КАК ГоловноеПодразделениеБАЗА,
	//|	Временная_ГоловноеПодразделениеЦФО.ГоловноеПодразделение КАК ГоловноеПодразделениеЦФО
	//|ИЗ
	//|	РегистрБухгалтерии.Финансовый.Остатки(&ДатаОкончанияГр, Счет = &СчетЗатрат, , ) КАК ФинансовыйОбороты
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Временная_ГоловноеПодразделение КАК Временная_ГоловноеПодразделениеЦФО
	//|		ПО ФинансовыйОбороты.Субконто1 = Временная_ГоловноеПодразделениеЦФО.ГоловноеПодразделение,
	//|	ВТБаза КАК База
	//|		ПОЛНОЕ СОЕДИНЕНИЕ Временная_ГоловноеПодразделение КАК Временная_ГоловноеПодразделениеБАЗА
	//|		ПО База.ГоловноеПодразделение = Временная_ГоловноеПодразделениеБАЗА.ГоловноеПодразделение
	//|ГДЕ
	//|	1 = 1
	//|	И НЕ ФинансовыйОбороты.Субконто1 ЕСТЬ NULL 
	//|	И НЕ ФинансовыйОбороты.Субконто2 = ЗНАЧЕНИЕ(Справочник.СтатьиДоходовРасходов.ПустаяСсылка)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ФинансовыйОбороты.Субконто1,
	//|	ФинансовыйОбороты.Субконто2,
	//|	ФинансовыйОбороты.Субконто3,
	//|	ФинансовыйОбороты.Субконто2.СпособРаспределенияЗатрат,
	//|	ФинансовыйОбороты.Субконто2.БазаРаспределенияЗатрат,
	//|	База.ТорговаяТочка,
	//|	База.Выручка,
	//|	База.Эффективность,
	//|	База.КоличествоСмен,
	//|	База.КоэффициентРаспределенияЗатрат,
	//|	База.Управление,
	//|	База.ВсеПодразделения,
	//|	Временная_ГоловноеПодразделениеБАЗА.ГоловноеПодразделение,
	//|	Временная_ГоловноеПодразделениеЦФО.ГоловноеПодразделение
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	СДР
	//|ИТОГИ
	//|	МАКСИМУМ(СуммаОборот),
	//|	СУММА(Выручка),
	//|	СУММА(КоличествоСмен),
	//|	СУММА(Эффективность)
	//|ПО
	//|	СДР,
	//|	ЦФО,
	//|	ГоловноеПодразделениеЦФО";
	//
	//СтатьиРаспределенныеПоЭффективности_Копия = СтатьиРаспределенныеПоЭффективности.ВыгрузитьКолонки();
	//ЭффективностьТорговыхТочек_Копия = ЭффективностьТорговыхТочек.ВыгрузитьКолонки();
	//ЭффективностьТорговыхТочек_Копия.Индексы.Добавить("ТорговаяТочка, Управление");
	//ВыборкаСДР 	= Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СДР");				   
	
	Запрос.МенеджерВременныхТаблиц=новый МенеджерВременныхТаблиц;
	
	ТекстЗапросов=
	"ВЫБРАТЬ
	|	ЛистУчета.Ссылка КАК Ссылка,
	|	ЛистУчета.ТорговаяТочка,
	|	ЛистУчета.ЦФО,
	|	ЛистУчета.Дата,
	|	ЛистУчета.Проведен
	|ПОМЕСТИТЬ ЛистыУчета
	|ИЗ
	|	Документ.ЛистУчета КАК ЛистУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	З.ГоловноеПодразделение КАК ГоловноеПодразделение
	|ПОМЕСТИТЬ Временная_ГоловноеПодразделение
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтруктурныеЕдиницы.ГоловноеПодразделение КАК ГоловноеПодразделение
	|	ИЗ
	|		Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|	ГДЕ
	|		НЕ СтруктурныеЕдиницы.ГоловноеПодразделение = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СтруктурныеЕдиницы.ГоловноеПодразделение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ФинансовыйОбороты.Субконто3
	|	ИЗ
	|		РегистрБухгалтерии.Финансовый.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, Счет В (&СписокСчетов), , (ВЫРАЗИТЬ(Субконто2 КАК Справочник.СтатьиДоходовРасходов)) = ЗНАЧЕНИЕ(Справочник.СтатьиДоходовРасходов.РозничнаяВыручка), , ) КАК ФинансовыйОбороты
	|	ГДЕ
	|		ТИПЗНАЧЕНИЯ(ФинансовыйОбороты.Регистратор) = ТИП(Документ.ЛистУчета)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ФинансовыйОбороты.Субконто3) КАК З
	|
	|СГРУППИРОВАТЬ ПО
	|	З.ГоловноеПодразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГоловноеПодразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб.ТорговаяТочка,
	|	Таб.Дата,
	|	Таб.Эффективность
	|ПОМЕСТИТЬ ВТТаб
	|ИЗ
	|	&ТабЭффективность КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛистУчета.ТорговаяТочка,
	|	ЛистУчета.ЦФО КАК Управление,
	|	ВЫБОР
	|		КОГДА ЛистУчета.ЦФО.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат = 0
	|				ИЛИ ЛистУчета.ЦФО.ГоловноеПодразделение ЕСТЬ NULL 
	|			ТОГДА 1
	|		ИНАЧЕ ЛистУчета.ЦФО.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат
	|	КОНЕЦ КАК КоэффициентРаспределенияЗатрат,
	|	ВЫБОР
	|		КОГДА ЛистУчета.ТорговаяТочка.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	|			ТОГДА &ВкусвиллОбщий
	|		ИНАЧЕ &ИзбенкаОбщий
	|	КОНЕЦ КАК ГоловноеПодразделение,
	|	&Все КАК ВсеПодразделения,
	|	СУММА(ВТТаб.Эффективность) КАК Эффективность
	|ПОМЕСТИТЬ ВТБазаЭффективность
	|ИЗ
	|	ЛистыУчета КАК ЛистУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаб КАК ВТТаб
	|		ПО ЛистУчета.ТорговаяТочка = ВТТаб.ТорговаяТочка
	|			И (НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) = ВТТаб.Дата)
	|ГДЕ
	|	ЛистУчета.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ЛистУчета.Проведен = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ЛистУчета.ТорговаяТочка,
	|	ЛистУчета.ЦФО,
	|	ВЫБОР
	|		КОГДА ЛистУчета.ЦФО.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат = 0
	|				ИЛИ ЛистУчета.ЦФО.ГоловноеПодразделение ЕСТЬ NULL 
	|			ТОГДА 1
	|		ИНАЧЕ ЛистУчета.ЦФО.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЛистУчета.ТорговаяТочка.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	|			ТОГДА &ВкусвиллОбщий
	|		ИНАЧЕ &ИзбенкаОбщий
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФинансовыйОбороты.Субконто1 КАК ТорговаяТочка,
	|	ВЫБОР
	|		КОГДА СУММА(ФинансовыйОбороты.СуммаОборотКт) > 0
	|			ТОГДА СУММА(ФинансовыйОбороты.СуммаОборотКт - ФинансовыйОбороты.СуммаОборотДт)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Выручка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ФинансовыйОбороты.Период) КАК КоличествоСмен,
	|	ВЫБОР
	|		КОГДА ФинансовыйОбороты.Субконто3.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат = 0
	|				ИЛИ ФинансовыйОбороты.Субконто3.ГоловноеПодразделение ЕСТЬ NULL 
	|			ТОГДА 1
	|		ИНАЧЕ ФинансовыйОбороты.Субконто3.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат
	|	КОНЕЦ КАК КоэффициентРаспределенияЗатрат,
	|	ФинансовыйОбороты.Субконто3 КАК Управление,
	|	ВЫБОР
	|		КОГДА ФинансовыйОбороты.Субконто1.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	|			ТОГДА &ВкусвиллОбщий
	|		ИНАЧЕ &ИзбенкаОбщий
	|	КОНЕЦ КАК ГоловноеПодразделение,
	|	&Все КАК ВсеПодразделения
	|ПОМЕСТИТЬ ВТБазаВыручка
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, Счет В (&СписокСчетов), , (ВЫРАЗИТЬ(Субконто2 КАК Справочник.СтатьиДоходовРасходов)) = ЗНАЧЕНИЕ(Справочник.СтатьиДоходовРасходов.РозничнаяВыручка), , ) КАК ФинансовыйОбороты
	|ГДЕ
	|	ВЫРАЗИТЬ(ФинансовыйОбороты.Регистратор КАК Документ.ЛистУчета) В
	|			(ВЫБРАТЬ
	|				ЛистыУчета.Ссылка
	|			ИЗ
	|				ЛистыУчета)
	|
	|СГРУППИРОВАТЬ ПО
	|	ФинансовыйОбороты.Субконто1,
	|	ФинансовыйОбороты.Субконто3,
	|	ВЫБОР
	|		КОГДА ФинансовыйОбороты.Субконто1.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	|			ТОГДА &ВкусвиллОбщий
	|		ИНАЧЕ &ИзбенкаОбщий
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ФинансовыйОбороты.Субконто3.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат = 0
	|				ИЛИ ФинансовыйОбороты.Субконто3.ГоловноеПодразделение ЕСТЬ NULL 
	|			ТОГДА 1
	|		ИНАЧЕ ФинансовыйОбороты.Субконто3.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЛистыУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВТБазаВыручка.ТорговаяТочка, ВТБазаЭффективность.ТорговаяТочка) КАК ТорговаяТочка,
	|	ЕСТЬNULL(ВТБазаВыручка.Выручка, 0) КАК Выручка,
	|	ЕСТЬNULL(ВТБазаВыручка.КоличествоСмен, 0) КАК КоличествоСмен,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТБазаЭффективность.Эффективность, 0) <= 0
	|			ТОГДА 0
	|		ИНАЧЕ ВТБазаЭффективность.Эффективность
	|	КОНЕЦ КАК Эффективность,
	|	ЕСТЬNULL(ВТБазаВыручка.КоэффициентРаспределенияЗатрат, ВТБазаЭффективность.КоэффициентРаспределенияЗатрат) КАК КоэффициентРаспределенияЗатрат,
	|	ЕСТЬNULL(ВТБазаВыручка.Управление, ВТБазаЭффективность.Управление) КАК Управление,
	|	ЕСТЬNULL(ВТБазаВыручка.ГоловноеПодразделение, ВТБазаЭффективность.ГоловноеПодразделение) КАК ГоловноеПодразделение,
	|	ЕСТЬNULL(ВТБазаВыручка.ВсеПодразделения, ВТБазаЭффективность.ВсеПодразделения) КАК ВсеПодразделения
	|ПОМЕСТИТЬ ВТБаза
	|ИЗ
	|	ВТБазаВыручка КАК ВТБазаВыручка
	|		ПОЛНОЕ СОЕДИНЕНИЕ ВТБазаЭффективность КАК ВТБазаЭффективность
	|		ПО ВТБазаВыручка.ТорговаяТочка = ВТБазаЭффективность.ТорговаяТочка
	|			И ВТБазаВыручка.Управление = ВТБазаЭффективность.Управление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФинансовыйОбороты.Субконто2 КАК СДР,
	|	ФинансовыйОбороты.Субконто3 КАК ЦФО,
	|	СУММА(ФинансовыйОбороты.СуммаОстаток) КАК СуммаОборот,
	|	ФинансовыйОбороты.Субконто2.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	|	ФинансовыйОбороты.Субконто2.БазаРаспределенияЗатрат КАК БазаРаспределенияЗатрат,
	|	База.ТорговаяТочка,
	|	ВЫБОР
	|		КОГДА Временная_ГоловноеПодразделениеЦФО.ГоловноеПодразделение ЕСТЬ NULL 
	|				ИЛИ Временная_ГоловноеПодразделениеБАЗА.ГоловноеПодразделение = ФинансовыйОбороты.Субконто1
	|				ИЛИ ФинансовыйОбороты.Субконто1 = База.Управление
	|				ИЛИ ФинансовыйОбороты.Субконто1 = База.ВсеПодразделения
	|			ТОГДА ЕСТЬNULL(База.Выручка, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Выручка,
	|	ВЫБОР
	|		КОГДА Временная_ГоловноеПодразделениеЦФО.ГоловноеПодразделение ЕСТЬ NULL 
	|				ИЛИ Временная_ГоловноеПодразделениеБАЗА.ГоловноеПодразделение = ФинансовыйОбороты.Субконто1
	|				ИЛИ ФинансовыйОбороты.Субконто1 = База.Управление
	|				ИЛИ ФинансовыйОбороты.Субконто1 = База.ВсеПодразделения
	|			ТОГДА ЕСТЬNULL(База.КоличествоСмен, 0) * ЕСТЬNULL(База.КоэффициентРаспределенияЗатрат, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоСмен,
	|	ВЫБОР
	|		КОГДА Временная_ГоловноеПодразделениеЦФО.ГоловноеПодразделение ЕСТЬ NULL 
	|				ИЛИ Временная_ГоловноеПодразделениеБАЗА.ГоловноеПодразделение = ФинансовыйОбороты.Субконто1
	|				ИЛИ ФинансовыйОбороты.Субконто1 = База.Управление
	|				ИЛИ ФинансовыйОбороты.Субконто1 = База.ВсеПодразделения
	|			ТОГДА ЕСТЬNULL(База.Эффективность, 0) * ЕСТЬNULL(База.КоэффициентРаспределенияЗатрат, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Эффективность,
	|	База.Управление КАК Управление,
	|	Временная_ГоловноеПодразделениеБАЗА.ГоловноеПодразделение КАК ГоловноеПодразделениеБАЗА,
	|	Временная_ГоловноеПодразделениеЦФО.ГоловноеПодразделение КАК ГоловноеПодразделениеЦФО
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(&ДатаОкончанияГр, Счет = &СчетЗатрат, , ) КАК ФинансовыйОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Временная_ГоловноеПодразделение КАК Временная_ГоловноеПодразделениеЦФО
	|		ПО ФинансовыйОбороты.Субконто1 = Временная_ГоловноеПодразделениеЦФО.ГоловноеПодразделение,
	|	ВТБаза КАК База
	|		ПОЛНОЕ СОЕДИНЕНИЕ Временная_ГоловноеПодразделение КАК Временная_ГоловноеПодразделениеБАЗА
	|		ПО База.ГоловноеПодразделение = Временная_ГоловноеПодразделениеБАЗА.ГоловноеПодразделение
	|ГДЕ
	|	1 = 1
	|	И НЕ ФинансовыйОбороты.Субконто1 ЕСТЬ NULL 
	|	И НЕ (ВЫРАЗИТЬ(ФинансовыйОбороты.Субконто2 КАК Справочник.СтатьиДоходовРасходов)) = ЗНАЧЕНИЕ(Справочник.СтатьиДоходовРасходов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ФинансовыйОбороты.Субконто1,
	|	ФинансовыйОбороты.Субконто2,
	|	ФинансовыйОбороты.Субконто3,
	|	ФинансовыйОбороты.Субконто2.СпособРаспределенияЗатрат,
	|	ФинансовыйОбороты.Субконто2.БазаРаспределенияЗатрат,
	|	База.ТорговаяТочка,
	|	База.Выручка,
	|	База.Эффективность,
	|	База.КоличествоСмен,
	|	База.КоэффициентРаспределенияЗатрат,
	|	База.Управление,
	|	База.ВсеПодразделения,
	|	Временная_ГоловноеПодразделениеБАЗА.ГоловноеПодразделение,
	|	Временная_ГоловноеПодразделениеЦФО.ГоловноеПодразделение
	|
	|УПОРЯДОЧИТЬ ПО
	|	СДР
	|ИТОГИ
	|	МАКСИМУМ(СуммаОборот),
	|	СУММА(Выручка),
	|	СУММА(КоличествоСмен),
	|	СУММА(Эффективность)
	|ПО
	|	СДР,
	|	ЦФО,
	|	ГоловноеПодразделениеЦФО";
	
	Массивтекстов=новый Массив;
	
	Поз=Найти(ТекстЗапросов,";");
	Пока Поз>0 цикл
		Массивтекстов.Добавить(лев(ТекстЗапросов,Поз-1));
		ТекстЗапросов=сред(ТекстЗапросов,Поз+1);
		Поз=Найти(ТекстЗапросов,";");
	КонецЦикла;
	
	Массивтекстов.Добавить(ТекстЗапросов);
	
	Сч=0;
	Для Каждого ТекстЗапроса из Массивтекстов цикл
		сч=сч+1;
		Запрос.Текст = ТекстЗапроса;
		попытка
			Если сч=Массивтекстов.Количество() тогда
				ВыборкаСДР 	= Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СДР");				   
			иначе
				Запрос.Выполнить();
			КонецЕсли;
		Исключение
			Сообщить("Ошибка при выполнении запроса, пакет #"+сч+": "+ОписаниеОшибки());
			Возврат;
		КонецПопытки;
	КонецЦикла;
	
	
	СтатьиРаспределенныеПоЭффективности_Копия = СтатьиРаспределенныеПоЭффективности.ВыгрузитьКолонки();
	ЭффективностьТорговыхТочек_Копия = ЭффективностьТорговыхТочек.ВыгрузитьКолонки();
	ЭффективностьТорговыхТочек_Копия.Индексы.Добавить("ТорговаяТочка, Управление");
	
	//--- VERN 2016-09-14 ИП-00013592 Устранение ошибки SQL при выполнении запроса
	
	Пока ВыборкаСДР.Следующий() Цикл
		ВыборкаГоловноеПодразделениеЦФО = ВыборкаСДР.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ГоловноеПодразделениеЦФО");				   
		Пока ВыборкаГоловноеПодразделениеЦФО.Следующий() Цикл
			ВыборкаЦФО = ВыборкаГоловноеПодразделениеЦФО.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ЦФО");				   
			Пока ВыборкаЦФО.Следующий() Цикл
				Выборка = ВыборкаЦФО.Выбрать();
				СуммаРаспределения = 0;
				СуммаЗатрат = 0;
				МассивСтрок = Новый Массив;
				Если ВыборкаЦФО.СпособРаспределенияЗатрат = Перечисления.СпособыРаспределенияЗатрат.ПоЭффективности Тогда
					СтрокаДоб = СтатьиРаспределенныеПоЭффективности_Копия.Добавить();
					СтрокаДоб.СтатьяДоходовРасходов = ВыборкаЦФО.СДР;
					СтрокаДоб.ЦФО = ВыборкаЦФО.ЦФО;
					СтрокаДоб.Сумма = ВыборкаЦФО.СуммаОборот;
				КонецЕсли;	
				Пока Выборка.Следующий() Цикл
					
					Если Выборка.СпособРаспределенияЗатрат = Перечисления.СпособыРаспределенияЗатрат.ПоКоличествуСмен Тогда
						Если ВыборкаЦФО.КоличествоСмен > 0 Тогда
							Доля = Выборка.КоличествоСмен / ВыборкаЦФО.КоличествоСмен;
						Иначе
							Доля = 0;
						КонецЕсли;
						СпособРаспределенияЗатрат = Выборка.СпособРаспределенияЗатрат;
					ИначеЕсли Выборка.СпособРаспределенияЗатрат = Перечисления.СпособыРаспределенияЗатрат.ПоВыручке Тогда
						Если ВыборкаЦФО.Выручка > 0 Тогда
							Доля = Выборка.Выручка / ВыборкаЦФО.Выручка;
						Иначе
							Доля = 0;
						КонецЕсли;
						СпособРаспределенияЗатрат = Выборка.СпособРаспределенияЗатрат;
					ИначеЕсли Выборка.СпособРаспределенияЗатрат = Перечисления.СпособыРаспределенияЗатрат.ПоЭффективности Тогда
						Если ВыборкаЦФО.Эффективность > 0 Тогда
							Доля = Выборка.Эффективность / ВыборкаЦФО.Эффективность;
							Если Доля > 0 Тогда
								СтрокиВЭффективности = ЭффективностьТорговыхТочек_Копия.НайтиСтроки(Новый Структура("ТорговаяТочка, Управление", Выборка.ТорговаяТочка, Выборка.Управление));
								Если СтрокиВЭффективности.Количество() = 0 Тогда
									СтрокаВЭффективности = ЭффективностьТорговыхТочек_Копия.Добавить();
									СтрокаВЭффективности.ТорговаяТочка = Выборка.ТорговаяТочка;
									СтрокаВЭффективности.Управление = Выборка.Управление;
									СтрокаВЭффективности.Эффективность = Выборка.Эффективность;
								КонецЕсли;
							КонецЕсли;	
						Иначе
							Доля = 0;
						КонецЕсли;
						СпособРаспределенияЗатрат = Выборка.СпособРаспределенияЗатрат;	
					Иначе
						//					Сообщить("Для статьи "+Выборка.СДР+" не назначен способ распределения. Распределяем по выручке");
						СпособРаспределенияЗатрат = Перечисления.СпособыРаспределенияЗатрат.ПоВыручке;
						Если ВыборкаЦФО.Выручка > 0 Тогда
							Доля = Выборка.Выручка / ВыборкаЦФО.Выручка;
						Иначе
							Доля = 0;
						КонецЕсли;
					КонецЕсли;
					
					Если Доля = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					СуммаЗатрат = ВыборкаЦФО.СуммаОборот * Доля;
					
					Если НЕ СуммаЗатрат = 0 Тогда
						НоваяСтрока = ЭтотОбъект.Распределение.Добавить();
						НоваяСтрока.Авторазмещение			= Истина;
						НоваяСтрока.СпособРаспределенияЗатрат = СпособРаспределенияЗатрат;
						НоваяСтрока.ТорговаяТочка 			= Выборка.ТорговаяТочка;
						НоваяСтрока.СтатьяДоходовРасходов 	= Выборка.СДР;
						НоваяСтрока.ЦФО						= Выборка.ЦФО;
						НоваяСтрока.ПодразделениеРасхода	= Выборка.ГоловноеПодразделениеЦФО;
						НоваяСтрока.Управление				= Выборка.Управление;
						НоваяСтрока.Сумма 					= ВыборкаЦФО.СуммаОборот*Доля;
						
						СуммаРаспределения					= СуммаРаспределения + НоваяСтрока.Сумма;
						
						Если МассивСтрок.Количество() = 0 Тогда
							МассивСтрок.Добавить(НоваяСтрока);	
						Иначе
							Если ВыборкаЦФО.СуммаОборот < 0 Тогда
								Если МассивСтрок[0].Сумма > НоваяСтрока.Сумма Тогда
									МассивСтрок.Вставить(0, НоваяСтрока);		
								КонецЕсли;
							Иначе
								Если МассивСтрок[0].Сумма < НоваяСтрока.Сумма Тогда
									МассивСтрок.Вставить(0, НоваяСтрока);		
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				//Если НЕ СуммаЗатрат = 0 И НЕ СуммаРаспределения = 0 Тогда
				Если ВыборкаЦФО.СуммаОборот <> СуммаРаспределения Тогда
					РаспределитьОставшиесяКопейки(МассивСтрок, ВыборкаЦФО.СуммаОборот, СуммаРаспределения);
				КонецЕсли;				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	СтатьиРаспределенныеПоЭффективности_Копия.Свернуть("СтатьяДоходовРасходов, ЦФО", "Сумма");
	
	СтатьиРаспределенныеПоЭффективности.Загрузить(СтатьиРаспределенныеПоЭффективности_Копия);
	ЭффективностьТорговыхТочек.Загрузить(ЭффективностьТорговыхТочек_Копия);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФО.ТорговаяТочка,
	|	ФО.СДР,
	|	ФО.ЦФО,
	|	ФО.СуммаОборот
	|ИЗ
	|	(ВЫБРАТЬ
	|		ФинансовыйОбороты.Субконто1 КАК ТорговаяТочка,
	|		ФинансовыйОбороты.Субконто2 КАК СДР,
	|		ФинансовыйОбороты.Субконто3 КАК ЦФО,
	|		СУММА(ФинансовыйОбороты.СуммаОстаток) КАК СуммаОборот
	|	ИЗ
	|		РегистрБухгалтерии.Финансовый.Остатки(&ДатаОкончанияГр, Счет = &СчетЗатрат, , ) КАК ФинансовыйОбороты
	|	ГДЕ
	|		НЕ ФинансовыйОбороты.Субконто1 = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ФинансовыйОбороты.Субконто1,
	|		ФинансовыйОбороты.Субконто2,
	|		ФинансовыйОбороты.Субконто3) КАК ФО
	|ГДЕ
	|	(ФО.ТорговаяТочка.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|			ИЛИ ФО.ТорговаяТочка.БратьВРаспределениеЗатрат = ИСТИНА)";
	
	Выборка = Запрос.Выполнить().Выбрать();				   
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ЭтотОбъект.Распределение.Добавить();
		НоваяСтрока.ТорговаяТочка 			= Выборка.ТорговаяТочка;
		НоваяСтрока.СтатьяДоходовРасходов 	= Выборка.СДР;
		НоваяСтрока.ЦФО						= Выборка.ЦФО;
		НоваяСтрока.Сумма 					= Выборка.СуммаОборот;
	КонецЦикла;
	
КонецПроцедуры

Процедура КоманднаяПанель1Заполнить_(Кнопка)
	
	Если НЕ ЗначениеЗаполнено(СчетЗатрат) Тогда
		Сообщить("Не заполнен счет затрат!", СтатусСообщения.Внимание);
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект.Проведен Тогда
		ОтветНаВопрос = Вопрос("Перед заполнением требуется отменить проведение?", РежимДиалогаВопрос.ДаНет);
		
		Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
			Возврат;
		ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			ЭтотОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		КонецЕсли; 
	КонецЕсли;
	
	Если Распределение.Количество() > 0 Тогда
		
		ОтветНаВопрос = Вопрос("Очистить табличную часть перед загрузкой?", РежимДиалогаВопрос.ДаНетОтмена);
		
		Если ОтветНаВопрос = КодВозвратаДиалога.Отмена Тогда
			Возврат;
		ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			Распределение.Очистить();;
		КонецЕсли;
		
	КонецЕсли; 
	
	СписокСчетов = Новый СписокЗначений;
	СписокСчетов.Добавить(ПланыСчетов.Финансовый.ЗатратыТорговыхТочек);
	СписокСчетов.Добавить(ПланыСчетов.Финансовый.ВыручкаТорговыхТочек);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала"		, Новый Граница(НачалоМесяца(ЭтотОбъект.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаОкончания"	, Новый Граница(КонецМесяца(ЭтотОбъект.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаОкончанияГр"	, Новый Граница(КонецМесяца(ЭтотОбъект.Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ИзбенкаОбщий"	, Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_ЦФО", 10032));
	Запрос.УстановитьПараметр("ВкусвиллОбщий"	, Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_ЦФО", 10030));
	Запрос.УстановитьПараметр("Все"				, Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_ЦФО", 10031));
	Запрос.УстановитьПараметр("СчетЗатрат"		, СчетЗатрат);
	Запрос.УстановитьПараметр("СписокСчетов"	, СписокСчетов);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	З.ГоловноеПодразделение КАК ГоловноеПодразделение
	|ПОМЕСТИТЬ Временная_ГоловноеПодразделение
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтруктурныеЕдиницы.ГоловноеПодразделение КАК ГоловноеПодразделение
	|	ИЗ
	|		Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|	ГДЕ
	|		НЕ СтруктурныеЕдиницы.ГоловноеПодразделение = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СтруктурныеЕдиницы.ГоловноеПодразделение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ФинансовыйОбороты.Субконто3
	|	ИЗ
	|		РегистрБухгалтерии.Финансовый.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, Счет В (&СписокСчетов), , Субконто2 = ЗНАЧЕНИЕ(Справочник.СтатьиДоходовРасходов.РозничнаяВыручка), , ) КАК ФинансовыйОбороты
	|	ГДЕ
	|		ТИПЗНАЧЕНИЯ(ФинансовыйОбороты.Регистратор) = ТИП(Документ.ЛистУчета)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ФинансовыйОбороты.Субконто3) КАК З
	|
	|СГРУППИРОВАТЬ ПО
	|	З.ГоловноеПодразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГоловноеПодразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФинансовыйОбороты.Субконто1 КАК ТорговаяТочка,
	|	ВЫБОР
	|		КОГДА СУММА(ФинансовыйОбороты.СуммаОборотКт) > 0
	|			ТОГДА СУММА(ФинансовыйОбороты.СуммаОборотКт - ФинансовыйОбороты.СуммаОборотДт)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Выручка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ФинансовыйОбороты.Период) КАК КоличествоСмен,
	|	ВЫБОР
	|		КОГДА ФинансовыйОбороты.Субконто3.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат = 0
	|				ИЛИ ФинансовыйОбороты.Субконто3.ГоловноеПодразделение ЕСТЬ NULL 
	|			ТОГДА 1
	|		ИНАЧЕ ФинансовыйОбороты.Субконто3.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат
	|	КОНЕЦ КАК КоэффициентРаспределенияЗатрат,
	|	ФинансовыйОбороты.Субконто3 КАК Управление,
	|	ВЫБОР
	|		КОГДА ФинансовыйОбороты.Субконто1.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	|			ТОГДА &ВкусвиллОбщий
	|		ИНАЧЕ &ИзбенкаОбщий
	|	КОНЕЦ КАК ГоловноеПодразделение,
	|	&Все КАК ВсеПодразделения
	|ПОМЕСТИТЬ ВТБаза
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, Счет В (&СписокСчетов), , Субконто2 = ЗНАЧЕНИЕ(Справочник.СтатьиДоходовРасходов.РозничнаяВыручка), , ) КАК ФинансовыйОбороты
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ФинансовыйОбороты.Регистратор) = ТИП(Документ.ЛистУчета)
	|
	|СГРУППИРОВАТЬ ПО
	|	ФинансовыйОбороты.Субконто1,
	|	ФинансовыйОбороты.Субконто3,
	|	ВЫБОР
	|		КОГДА ФинансовыйОбороты.Субконто1.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	|			ТОГДА &ВкусвиллОбщий
	|		ИНАЧЕ &ИзбенкаОбщий
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ФинансовыйОбороты.Субконто3.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат = 0
	|				ИЛИ ФинансовыйОбороты.Субконто3.ГоловноеПодразделение ЕСТЬ NULL 
	|			ТОГДА 1
	|		ИНАЧЕ ФинансовыйОбороты.Субконто3.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФинансовыйОбороты.Субконто2 КАК СДР,
	|	ФинансовыйОбороты.Субконто3 КАК ЦФО,
	|	СУММА(ФинансовыйОбороты.СуммаОстаток) КАК СуммаОборот,
	|	ФинансовыйОбороты.Субконто2.СпособРаспределенияЗатрат КАК СпособРаспределенияЗатрат,
	|	ФинансовыйОбороты.Субконто2.БазаРаспределенияЗатрат КАК БазаРаспределенияЗатрат,
	|	База.ТорговаяТочка,
	|	ВЫБОР
	|		КОГДА Временная_ГоловноеПодразделениеЦФО.ГоловноеПодразделение ЕСТЬ NULL 
	|				ИЛИ Временная_ГоловноеПодразделениеБАЗА.ГоловноеПодразделение = ФинансовыйОбороты.Субконто1
	|				ИЛИ ФинансовыйОбороты.Субконто1 = База.Управление
	|				ИЛИ ФинансовыйОбороты.Субконто1 = База.ВсеПодразделения
	|			ТОГДА ЕСТЬNULL(База.Выручка, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Выручка,
	|	ВЫБОР
	|		КОГДА Временная_ГоловноеПодразделениеЦФО.ГоловноеПодразделение ЕСТЬ NULL 
	|				ИЛИ Временная_ГоловноеПодразделениеБАЗА.ГоловноеПодразделение = ФинансовыйОбороты.Субконто1
	|				ИЛИ ФинансовыйОбороты.Субконто1 = База.Управление
	|				ИЛИ ФинансовыйОбороты.Субконто1 = База.ВсеПодразделения
	|			ТОГДА ЕСТЬNULL(База.КоличествоСмен, 0) * ЕСТЬNULL(База.КоэффициентРаспределенияЗатрат, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоСмен,
	|	База.Управление КАК Управление,
	|	Временная_ГоловноеПодразделениеБАЗА.ГоловноеПодразделение КАК ГоловноеПодразделениеБАЗА,
	|	Временная_ГоловноеПодразделениеЦФО.ГоловноеПодразделение КАК ГоловноеПодразделениеЦФО
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(&ДатаОкончанияГр, Счет = &СчетЗатрат, , ) КАК ФинансовыйОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Временная_ГоловноеПодразделение КАК Временная_ГоловноеПодразделениеЦФО
	|		ПО ФинансовыйОбороты.Субконто1 = Временная_ГоловноеПодразделениеЦФО.ГоловноеПодразделение,
	|	ВТБаза КАК База
	|		ПОЛНОЕ СОЕДИНЕНИЕ Временная_ГоловноеПодразделение КАК Временная_ГоловноеПодразделениеБАЗА
	|		ПО База.ГоловноеПодразделение = Временная_ГоловноеПодразделениеБАЗА.ГоловноеПодразделение
	|ГДЕ
	|	1 = 1
	|	И НЕ ФинансовыйОбороты.Субконто1 ЕСТЬ NULL 
	|	И НЕ ФинансовыйОбороты.Субконто2 = ЗНАЧЕНИЕ(Справочник.СтатьиДоходовРасходов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ФинансовыйОбороты.Субконто1,
	|	ФинансовыйОбороты.Субконто2,
	|	ФинансовыйОбороты.Субконто3,
	|	ФинансовыйОбороты.Субконто2.СпособРаспределенияЗатрат,
	|	ФинансовыйОбороты.Субконто2.БазаРаспределенияЗатрат,
	|	База.ТорговаяТочка,
	|	База.Выручка,
	|	База.КоличествоСмен,
	|	База.КоэффициентРаспределенияЗатрат,
	|	База.Управление,
	|	База.ВсеПодразделения,
	|	Временная_ГоловноеПодразделениеБАЗА.ГоловноеПодразделение,
	|	Временная_ГоловноеПодразделениеЦФО.ГоловноеПодразделение
	|
	|УПОРЯДОЧИТЬ ПО
	|	СДР
	|ИТОГИ
	|	МАКСИМУМ(СуммаОборот),
	|	СУММА(Выручка),
	|	СУММА(КоличествоСмен)
	|ПО
	|	СДР,
	|	ЦФО,
	|	ГоловноеПодразделениеЦФО";
	
	ВыборкаСДР 	= Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "СДР");				   
	Пока ВыборкаСДР.Следующий() Цикл
		ВыборкаГоловноеПодразделениеЦФО = ВыборкаСДР.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ГоловноеПодразделениеЦФО");				   
		Пока ВыборкаГоловноеПодразделениеЦФО.Следующий() Цикл
			ВыборкаЦФО = ВыборкаГоловноеПодразделениеЦФО.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ЦФО");				   
			Пока ВыборкаЦФО.Следующий() Цикл
				Выборка = ВыборкаЦФО.Выбрать();
				СуммаРаспределения = 0;
				СуммаЗатрат = 0;
				МассивСтрок = Новый Массив;
				Пока Выборка.Следующий() Цикл
					
					Если Выборка.СпособРаспределенияЗатрат = Перечисления.СпособыРаспределенияЗатрат.ПоКоличествуСмен Тогда
						Если ВыборкаЦФО.КоличествоСмен > 0 Тогда
							Доля = Выборка.КоличествоСмен / ВыборкаЦФО.КоличествоСмен;
						Иначе
							Доля = 0;
						КонецЕсли;
						СпособРаспределенияЗатрат = Перечисления.СпособыРаспределенияЗатрат.ПоКоличествуСмен;
					ИначеЕсли Выборка.СпособРаспределенияЗатрат = Перечисления.СпособыРаспределенияЗатрат.ПоВыручке Тогда
						Если ВыборкаЦФО.Выручка > 0 Тогда
							Доля = Выборка.Выручка / ВыборкаЦФО.Выручка;
						Иначе
							Доля = 0;
						КонецЕсли;
						СпособРаспределенияЗатрат = Перечисления.СпособыРаспределенияЗатрат.ПоВыручке;
					Иначе
						//					Сообщить("Для статьи "+Выборка.СДР+" не назначен способ распределения. Распределяем по выручке");
						СпособРаспределенияЗатрат = Перечисления.СпособыРаспределенияЗатрат.ПоВыручке;
						Если ВыборкаЦФО.Выручка > 0 Тогда
							Доля = Выборка.Выручка / ВыборкаЦФО.Выручка;
						Иначе
							Доля = 0;
						КонецЕсли;
					КонецЕсли;
					
					Если Доля = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					СуммаЗатрат = ВыборкаЦФО.СуммаОборот * Доля;
					
					Если НЕ СуммаЗатрат = 0 Тогда
						НоваяСтрока = ЭтотОбъект.Распределение.Добавить();
						НоваяСтрока.Авторазмещение			= Истина;
						НоваяСтрока.СпособРаспределенияЗатрат = СпособРаспределенияЗатрат;
						НоваяСтрока.ТорговаяТочка 			= Выборка.ТорговаяТочка;
						НоваяСтрока.СтатьяДоходовРасходов 	= Выборка.СДР;
						НоваяСтрока.ЦФО						= Выборка.ЦФО;
						НоваяСтрока.ПодразделениеРасхода	= Выборка.ГоловноеПодразделениеЦФО;
						НоваяСтрока.Управление				= Выборка.Управление;
						НоваяСтрока.Сумма 					= ВыборкаЦФО.СуммаОборот*Доля;
						
						СуммаРаспределения					= СуммаРаспределения + НоваяСтрока.Сумма;
						
						Если МассивСтрок.Количество() = 0 Тогда
							МассивСтрок.Добавить(НоваяСтрока);	
						Иначе
							Если ВыборкаЦФО.СуммаОборот < 0 Тогда
								Если МассивСтрок[0].Сумма > НоваяСтрока.Сумма Тогда
									МассивСтрок.Вставить(0, НоваяСтрока);		
								КонецЕсли;
							Иначе
								Если МассивСтрок[0].Сумма < НоваяСтрока.Сумма Тогда
									МассивСтрок.Вставить(0, НоваяСтрока);		
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				//Если НЕ СуммаЗатрат = 0 И НЕ СуммаРаспределения = 0 Тогда
				Если ВыборкаЦФО.СуммаОборот <> СуммаРаспределения Тогда
					РаспределитьОставшиесяКопейки(МассивСтрок, ВыборкаЦФО.СуммаОборот, СуммаРаспределения);
				КонецЕсли;				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФО.ТорговаяТочка,
	|	ФО.СДР,
	|	ФО.ЦФО,
	|	ФО.СуммаОборот
	|ИЗ
	|	(ВЫБРАТЬ
	|		ФинансовыйОбороты.Субконто1 КАК ТорговаяТочка,
	|		ФинансовыйОбороты.Субконто2 КАК СДР,
	|		ФинансовыйОбороты.Субконто3 КАК ЦФО,
	|		СУММА(ФинансовыйОбороты.СуммаОстаток) КАК СуммаОборот
	|	ИЗ
	|		РегистрБухгалтерии.Финансовый.Остатки(&ДатаОкончанияГр, Счет = &СчетЗатрат, , ) КАК ФинансовыйОбороты
	|	ГДЕ
	|		НЕ ФинансовыйОбороты.Субконто1 = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ФинансовыйОбороты.Субконто1,
	|		ФинансовыйОбороты.Субконто2,
	|		ФинансовыйОбороты.Субконто3) КАК ФО
	|ГДЕ
	|	(ФО.ТорговаяТочка.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|			ИЛИ ФО.ТорговаяТочка.БратьВРаспределениеЗатрат = ИСТИНА)";
	
	Выборка = Запрос.Выполнить().Выбрать();				   
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ЭтотОбъект.Распределение.Добавить();
		НоваяСтрока.ТорговаяТочка 			= Выборка.ТорговаяТочка;
		НоваяСтрока.СтатьяДоходовРасходов 	= Выборка.СДР;
		НоваяСтрока.ЦФО						= Выборка.ЦФО;
		НоваяСтрока.Сумма 					= Выборка.СуммаОборот;
	КонецЦикла;
	
КонецПроцедуры



Процедура ДействияФормыПерейтиВЖурналПроводок(Кнопка)
	
	БухгалтерскийУчет.ОткрытьЖурналПроводок(Ссылка);
	
КонецПроцедуры

Процедура РаспределениеПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Авторазмещение Тогда
		ОформлениеСтроки.ЦветФона = WebЦвета.БледноБирюзовый;
	КонецЕсли
	
КонецПроцедуры

Процедура ДействияФормыИсторияИзменений(Кнопка)
	
	ИсторияИзменений = Отчеты.ИсторияИзмененийОбъектов.Создать();
	ИсторияИзменений.СсылкаНаОбъект = Ссылка;
	
	Форма = ИсторияИзменений.ПолучитьФорму("ФормаОтчета");
	Форма.СформироватьТаблицуВерсий();
	Форма.Открыть();
	
КонецПроцедуры

Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
	
КонецПроцедуры

//+++АК ZICD 11.01.2017 ИП-00014365
//Процедура РаспределитьОставшиесяКопейки(МассивСтрок, СуммаРаспределения, СуммаРаспределено)
//	
//	Если СуммаРаспределения = СуммаРаспределено Тогда
//		Возврат;
//	КонецЕсли;
//	Если МассивСтрок.Количество() = 0 Тогда
//		Возврат;
//	КонецЕсли;
//	
//	КопейкиРаспределения = СуммаРаспределения - СуммаРаспределено;
//	Если СуммаРаспределения < 0 Тогда
//		//Если КопейкиРаспределения < 0 Тогда
//		//	МассивСтрок[0].Сумма = МассивСтрок[0].Сумма - КопейкиРаспределения;	
//		//ИначеЕсли КопейкиРаспределения > 0 Тогда
//			МассивСтрок[0].Сумма = МассивСтрок[0].Сумма + КопейкиРаспределения;
//		//КонецЕсли;	
//	ИначеЕсли СуммаРаспределения > 0 Тогда
//		//Если КопейкиРаспределения < 0 Тогда
//		//	МассивСтрок[0].Сумма = МассивСтрок[0].Сумма + КопейкиРаспределения;	
//		//ИначеЕсли КопейкиРаспределения > 0 Тогда
//			МассивСтрок[0].Сумма = МассивСтрок[0].Сумма + КопейкиРаспределения;
//		//КонецЕсли;	
//	Иначе
//		Возврат;
//	КонецЕсли;   		
//
//КонецПроцедуры
//---АК

//+++АК ZICD 11.01.2017 ИП-00014365
Процедура ДатаПриИзменении(Элемент)
	УстановитьВидимостьЭлементов();
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.Дата) Тогда
		Отказ = Истина;
		Сообщить("Не заполнена дата документа!", СтатусСообщения.Внимание);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры
//---АК

//+++АК sils 08.06.2018 ИП-00018876
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Распределение затрат");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
КонецПроцедуры

//+++АК ZICD 11.01.2017 ИП-00014365
_НачалоУчётаМСФО = АК_УчетМСФОПривилегированный.ПолучитьДатуНачалаУчетаМСФО(); //Дата("20180101");
//---АК