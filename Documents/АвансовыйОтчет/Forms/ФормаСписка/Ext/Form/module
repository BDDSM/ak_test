
Функция ПолучитьТаблицуОтличий(МассивПоступлений)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивПоступлений", МассивПоступлений);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслугПриходныеОрдера.Ссылка КАК Поступление,
	|	ПоступлениеТоваровУслугПриходныеОрдера.ПриходныйОрдер
	|ПОМЕСТИТЬ ПриходныеОрдера
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.ПриходныеОрдера КАК ПоступлениеТоваровУслугПриходныеОрдера
	|ГДЕ
	|	ПоступлениеТоваровУслугПриходныеОрдера.Ссылка В(&МассивПоступлений)
	|	И ПоступлениеТоваровУслугПриходныеОрдера.Ссылка.Проведен
	|	И ПоступлениеТоваровУслугПриходныеОрдера.ПриходныйОрдер.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриходныеОрдера.Поступление,
	|	ПриходныйОрдерСкладТовары.Номенклатура,
	|	СУММА(ПриходныйОрдерСкладТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ТЗ_КоличествоВДокументах
	|ИЗ
	|	ПриходныеОрдера КАК ПриходныеОрдера
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
	|		ПО ПриходныеОрдера.ПриходныйОрдер = ПриходныйОрдерСкладТовары.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ПриходныеОрдера.Поступление,
	|	ПриходныйОрдерСкладТовары.Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Ссылка,
	|	ПоступлениеТоваровУслугТовары.Номенклатура,
	|	-СУММА(ПоступлениеТоваровУслугТовары.ПоПриходнымОрдерам)
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка В(&МассивПоступлений)
	|	И ПоступлениеТоваровУслугТовары.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслугТовары.Ссылка,
	|	ПоступлениеТоваровУслугТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЗ_КоличествоВДокументах.Поступление КАК Поступление
	|ИЗ
	|	ТЗ_КоличествоВДокументах КАК ТЗ_КоличествоВДокументах
	|
	|СГРУППИРОВАТЬ ПО
	|	ТЗ_КоличествоВДокументах.Поступление,
	|	ТЗ_КоличествоВДокументах.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТЗ_КоличествоВДокументах.Количество) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Поступление";
	
	//
	ТаблицаОтличий = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаОтличий;
	
КонецФункции


Процедура ДействияФормыПроводкиДтКт(Кнопка)

	ТекДанные = ЭлементыФормы.ДокументСписок.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	//
	БухгалтерскийУчет.ОткрытьЖурналПроводок(ТекДанные.Ссылка);

КонецПроцедуры

Функция ЕстьОстаткиПоКорпКарте(мДокумент)
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МоментВремени"	, Новый Граница(мДокумент.МоментВремени(), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ФизЛицо"			, мДокумент.ФизЛицо);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДвиженияПоКорпоративнымКартамОстатки.СуммаОстаток
	|ИЗ
	|	РегистрНакопления.ДвиженияПоКорпоративнымКартам.Остатки(&МоментВремени, НомерКорпоративнойКарты.ФизЛицо = &ФизЛицо) КАК ДвиженияПоКорпоративнымКартамОстатки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

Процедура ДокументСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	//
	//МассивСписанийСКорпКарт = Новый Массив;
	МассивПоступлений 		= Новый Массив;
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ТекДокумент = ОформлениеСтроки.ДанныеСтроки.Ссылка;
		МассивПоступлений.Добавить(ТекДокумент);
		//Если ТекДокумент.СписаниеСКорпоративнойКарты Тогда
		//	МассивСписанийСКорпКарт.Добавить(ТекДокумент);
		//КонецЕсли;
	КонецЦикла;
	
	//
	ТаблицаОтличий = ПолучитьТаблицуОтличий(МассивПоступлений);
	
	Если ТаблицаОтличий.Количество() > 0 Тогда
		Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
			НайденнаяСтрока = ТаблицаОтличий.Найти(ОформлениеСтроки.ДанныеСтроки.Ссылка, "Поступление");
			Если НайденнаяСтрока <> Неопределено Тогда
				ОформлениеСтроки.ЦветФона = WebЦвета.ЛососьСветлый;				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
	//
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		ТекДокумент = ОформлениеСтроки.ДанныеСтроки.Ссылка;
		Если ТекДокумент.СписаниеСКорпоративнойКарты Тогда
			ВыводитьКартинку = ЕстьОстаткиПоКорпКарте(ТекДокумент);
			Если ВыводитьКартинку Тогда
				ОформлениеСтроки.Ячейки.СписаниеСКорпоративнойКарты.ОтображатьКартинку = Истина;
				ОформлениеСтроки.Ячейки.СписаниеСКорпоративнойКарты.Картинка = БиблиотекаКартинок.Важно;
			Иначе
				ОформлениеСтроки.Ячейки.СписаниеСКорпоративнойКарты.ОтображатьКартинку = Ложь;
			КонецЕсли;
			//ОформлениеСтроки.Ячейки.СписаниеСКорпоративнойКарты.ЦветТекста =
			//	?(ВКрасныйЦвет, Новый Цвет(255, 0, 0), Новый Цвет(0, 255, 0));
		КонецЕсли;
	КонецЦикла;
	//ТаблицаОтличий = ПолучитьТаблицуОтличий(МассивСписанийСКорпКарт);
	//
	//Если ТаблицаОтличий.Количество() > 0 Тогда
	//	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
	//		НайденнаяСтрока = ТаблицаОтличий.Найти(ОформлениеСтроки.ДанныеСтроки.Ссылка, "Поступление");
	//		Если НайденнаяСтрока <> Неопределено Тогда
	//			ОформлениеСтроки.ЦветФона = WebЦвета.ЛососьСветлый;				
	//		КонецЕсли;
	//	КонецЦикла;
	//КонецЕсли;	
	
КонецПроцедуры


Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	
	ТекСтрока = ЭлементыФормы.ДокументСписок.ТекущаяСтрока;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	//+++АК susk 30/07/2014
	// Если поступление введено на основании заявки на расх. средств, то в структуре подчиненности показывать
	// структуру данной заявки
	
	//РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ТекСтрока);
	
	ТекСсылка = ТекСтрока.Ссылка;
	
	Если ТекСсылка.ДокументОснование = Неопределено
			ИЛИ ТекСсылка.ДокументОснование.Пустая()
			ИЛИ ТипЗнч(ТекСсылка.ДокументОснование) <> Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств") Тогда
		РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ТекСсылка);
	Иначе
		РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ТекСсылка.ДокументОснование);
	КонецЕсли;

	//---АК susk
	
КонецПроцедуры


Процедура ДействияФормыУстановитьСнятьПолученыДокументы(Кнопка)
	
	ТекДанные = ЭлементыФормы.ДокументСписок.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//Если НЕ РольДоступна("ПравоУказанияДокументовВЗаявкахНаРасходование") Тогда
	//	Сообщить("Нет прав для выполнения операции!");
	//	Возврат;
	//КонецЕсли;
	
	СсылкаНаДокумент = ТекДанные.Ссылка;
	
	ОбъектДокумента = СсылкаНаДокумент.ПолучитьОбъект();
	ОбъектДокумента.ОбменДанными.Загрузка = Истина;
	
	ОбъектДокумента.ДокументыПолучены = НЕ ОбъектДокумента.ДокументыПолучены;
	
	Попытка
		ОбъектДокумента.Записать(РежимЗаписиДокумента.Запись);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

//+++susk
//ИП-00016878
Процедура ДействияФормыВыгрузитьВБП(Кнопка)
	
	ТекДанные = ЭлементыФормы.ДокументСписок.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СсылкаНаДокумент = ТекДанные.Ссылка;
	
	Если НЕ СсылкаНаДокумент.ВыгружатьВ_БП Тогда
		ОбщегоНазначения.СообщитьОбОшибке("У документа установлен признак ""Не выгружать в БУ"". Выгрузка производиться не будет.");
		Возврат;
	КонецЕсли;
	
	ОбменСБП2_0.ВыгрузитьДокументВБП("АвансовыйОтчет", "АвансовыйОтчет", СсылкаНаДокумент);	
	
КонецПроцедуры
//---susk
