
Перем СтатьяДРАренда;


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ЭтотОбъект.ОтборВидДоговораАренды = Перечисления.ВидыОперацийДоговоровАренды.САрендатором;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Для Каждого СтрокаТЧ Из ЭтотОбъект.НачислениеАренды Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.ТипАренднойПлаты) Тогда
			ОбщегоНазначения.СообщитьОбОшибке("В строке № " + СтрокаТЧ.НомерСтроки + " не заполнен реквизит <Тип арендной платы>", Отказ);
		КонецЕсли;
	КонецЦикла;
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Движения.Финансовый.Записывать = Истина;
	
	НастройкаОтраженияОперацииВУчетеНДС = ОбщегоНазначенияСервер.ПолучитьНастройкиОтраженияОперацийВУчете(Перечисления.ВидыОперацийВУчете.НДС_НачислениеАренднойПлатыАрендаторам, ЭтотОбъект.Дата);
	СтатьяДРВыручкаОтАренды = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("10106");  // Выручка от сдачи в аренду торговых площадей
	ЦФОУправлениеРазвития	= Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Управление по развитию");
	
	Для Каждого СтрокаТЧ Из ЭтотОбъект.НачислениеАренды Цикл
		
		Проводка = Движения.Финансовый.Добавить();
		
		СуммаНДСПоСтроке = 0;
		СуммаВсего = 0;
		Если ЗначениеЗаполнено(НастройкаОтраженияОперацииВУчетеНДС.Счет) Тогда
			СуммаНДСПоСтроке = Окр(УчетНДС.РассчитатьСуммуНДС(СтрокаТЧ.Сумма, Истина, Истина, УчетНДС.ПолучитьСтавкуНДС(СтрокаТЧ.СтавкаНДС)), 2);
			СуммаВсего = СтрокаТЧ.Сумма - СуммаНДСПоСтроке;
		Иначе
			СуммаВсего = СтрокаТЧ.Сумма;
		КонецЕсли;
		
		Проводка.Период = ЭтотОбъект.Дата;
		
		Проводка.СчетДт = ПланыСчетов.Финансовый.РасчетыСПокупателямиПоАренде;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Организации"	,
									?(ЭтотОбъект.ФормаОплаты = Перечисления.ФормыОплаты.Наличные, Константы.ОрганизацияДляОплатыНаличными.Получить(), ЭтотОбъект.Организация));
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Контрагенты"	, СтрокаТЧ.Контрагент);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ТорговыеТочки"	, СтрокаТЧ.СтруктурнаяЕдиница);
		
		Если ЭтотОбъект.Дата >= Дата(2017, 1, 1) Тогда
			НачСтрокаСодержания = "Выручка от сдачи в аренду торговых площадей";
			Проводка.СчетКт = ПланыСчетов.Финансовый.ВыручкаПрочая;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ТорговыеТочки"			, СтрокаТЧ.СтруктурнаяЕдиница);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "СтатьиДоходовРасходов"	, СтатьяДРВыручкаОтАренды);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ЦФО"					, ЦФОУправлениеРазвития);
		Иначе
			НачСтрокаСодержания = "Начисление аренды";
			Проводка.СчетКт = ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ТорговыеТочки"			, СтрокаТЧ.СтруктурнаяЕдиница);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "СтатьиДоходовРасходов"	, СтатьяДРАренда);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ЦФО"					, СтрокаТЧ.ЦФО);
		КонецЕсли;
		//Проводка.СчетКт = ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;
		//БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ТорговыеТочки"			, СтрокаТЧ.СтруктурнаяЕдиница);
		//БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "СтатьиДоходовРасходов"	, СтатьяДРАренда);
		//БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ЦФО"					, СтрокаТЧ.ЦФО);
		Проводка.Содержание = НачСтрокаСодержания + " за период с " + Формат(НачалоМесяца(ЭтотОбъект.ПериодРегистрации), "ДФ=dd.MM.yyyy") + " по " +
		//Проводка.Содержание = "Начисление аренды за период с " + Формат(НачалоМесяца(ЭтотОбъект.ПериодРегистрации), "ДФ=dd.MM.yyyy") + " по " +
								Формат(КонецМесяца(ПериодРегистрации), "ДФ=dd.MM.yyyy");
		Проводка.Содержание = Проводка.Содержание + ?(СокрЛП(Проводка.Содержание) <> "" И СокрЛП(СтрокаТЧ.Описание) <> "", ". ", "") + СокрЛП(СтрокаТЧ.Описание);
		Проводка.Сумма 		= СуммаВсего;
		
		Если СуммаНДСПоСтроке <> 0 Тогда
			Проводка = Движения.Финансовый.Добавить();
			Проводка.Период = ЭтотОбъект.Дата;
			Проводка.СчетДт = ПланыСчетов.Финансовый.РасчетыСПокупателямиПоАренде;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Организации"	,
									?(ЭтотОбъект.ФормаОплаты = Перечисления.ФормыОплаты.Наличные, Константы.ОрганизацияДляОплатыНаличными.Получить(), ЭтотОбъект.Организация));
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Контрагенты"	, СтрокаТЧ.Контрагент);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ТорговыеТочки"	, СтрокаТЧ.СтруктурнаяЕдиница);
			Проводка.СчетКт = НастройкаОтраженияОперацииВУчетеНДС.Счет;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Организации",
									?(ЭтотОбъект.ФормаОплаты = Перечисления.ФормыОплаты.Наличные, Константы.ОрганизацияДляОплатыНаличными.Получить(), ЭтотОбъект.Организация));
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ВидыНалогов", НастройкаОтраженияОперацииВУчетеНДС.ДопРеквизит);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "СтавкиНДС"	, СтрокаТЧ.СтавкаНДС);
			Проводка.Содержание = "НДС аренды";
			Проводка.Сумма 		= СуммаНДСПоСтроке;
		КонецЕсли;
		
	КонецЦикла;
	//Для Каждого Строка Из НачислениеДепозита Цикл
	//	Проводка = Движения.Финансовый.Добавить();
	//	Проводка.Период = Дата;
	//	Проводка.СчетДт = ПланыСчетов.Финансовый.ОбеспечительныйВзнос;
	//	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Организации", ?(ФормаОплаты = Перечисления.ФормыОплаты.Наличные, Константы.ОрганизацияДляОплатыНаличными.Получить(), Организация));
	//	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Контрагент", Строка.Контрагент);
	//	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ТорговыеТочки", Строка.СтруктурнаяЕдиница);
	//	Проводка.СчетКт = ПланыСчетов.Финансовый.РасчетыПоАренде;
	//	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Организации", ?(ФормаОплаты = Перечисления.ФормыОплаты.Наличные, Константы.ОрганизацияДляОплатыНаличными.Получить(), Организация));
	//	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты", Строка.Контрагент);
	//	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ТорговыеТочки", Строка.СтруктурнаяЕдиница);
	//	Проводка.Содержание = "Начисление депозита за период с " + Формат(НачалоМесяца(ПериодРегистрации), "ДФ=dd.MM.yyyy") + " по " + Формат(КонецМесяца(ПериодРегистрации), "ДФ=dd.MM.yyyy");
	//	Проводка.Содержание = Проводка.Содержание + ?(СокрЛП(Проводка.Содержание) <> "" И СокрЛП(Строка.Описание) <> "", ". ", "") + СокрЛП(Строка.Описание);
	//	Проводка.Сумма = Строка.Сумма;
	//КонецЦикла;
	//Для Каждого Строка Из ПрочаяЗадолженность Цикл
	//	Проводка = Движения.Финансовый.Добавить();
	//	Проводка.Период = Дата;
	//	Проводка.СчетДт = ПланыСчетов.Финансовый.ПрочаяЗадолженность;
	//	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Организации", ?(ФормаОплаты = Перечисления.ФормыОплаты.Наличные, Константы.ОрганизацияДляОплатыНаличными.Получить(), Организация));
	//	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Контрагенты", Строка.Контрагент);
	//	Проводка.СчетКт = ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения;
	//	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ТорговыеТочки", Строка.СтруктурнаяЕдиница);
	//	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "СтатьиДоходовРасходов", Строка.СтатьяДР);
	//	БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ЦФО", Строка.ЦФО);
	//	Проводка.Содержание = Строка.Описание;
	//	Проводка.Сумма = Строка.Сумма;
	//КонецЦикла;
	//															 
	Движения.НачисленияПоДоговорамАренды.Записывать = Истина;
	
	//ТЗНачисления = НачислениеАренды.Выгрузить();
	//ТЗНачисления.Свернуть("Контрагент, СтруктурнаяЕдиница, ТипАренднойПлаты", "Сумма");
	//Для Каждого Строка Из ТЗНачисления Цикл
	//	ТЗДоговорыПоДням = ПроцедурыНачисления.ПолучитьТЗДоговорыПоДням(Организация, Строка.Контрагент, Строка.СтруктурнаяЕдиница, ФормаОплаты, ПериодРегистрации, КонецМесяца(ПериодРегистрации));
	//	ТЗДоговорыПоДням.Колонки.Добавить("Сумма");
	//	ПроцедурыНачисления.РаспределениеПоТабличнойЧасти4_4(ТЗДоговорыПоДням, "СуммаПлан", "Сумма", Строка.Сумма);
	//	
	//	Если ТЗДоговорыПоДням.Количество() = 0 Тогда
	//		ОбщегоНазначения.СообщитьОбОшибке("Начисление аренды. По параметрам (" + Строка.Контрагент + ", " + Строка.СтруктурнаяЕдиница + ") не обнаружены плановые данные по договорам аренды");
	//	КонецЕсли;
	//	
	//	Для Каждого СтрокаДень Из ТЗДоговорыПоДням Цикл	 
	//		Движение = Движения.НачисленияПоДоговорамАренды.Добавить();
	//		Движение.Период = Дата;
	//		Движение.Дата = СтрокаДень.ДатаКалендаря;
	//		Движение.Депозит = Ложь;
	//		Движение.Договор = СтрокаДень.Договор;
	//		Движение.Документ = Ссылка;
	//		Движение.Контрагент = Строка.Контрагент;
	//		Движение.ОбъектАренды = СтрокаДень.Договор.ОбъектАренды;
	//		Движение.Организация = Организация;
	//		Движение.Услуга = СтрокаДень.Услуга;
	//		Движение.ФормаОплаты = СтрокаДень.ФормаОплаты;
	//		Движение.СтавкаНДС = СтрокаДень.СтавкаНДС;
	//		Движение.СпособНачисления = СтрокаДень.СпособНачисления;
	//		Движение.ТипАренднойПлаты = Строка.ТипАренднойПлаты;
	//		Движение.Ставка = СтрокаДень.Ставка;
	//		Движение.Сумма = СтрокаДень.Сумма;
	//	КонецЦикла;
	//КонецЦикла;
	//
	//ТЗНачисления = НачислениеДепозита.Выгрузить();
	//ТЗНачисления.Свернуть("Контрагент, СтруктурнаяЕдиница", "Сумма");
	//Для Каждого Строка Из ТЗНачисления Цикл
	//	ТЗДоговорыПоДням = ПроцедурыНачисления.ПолучитьТЗДоговорыПоДням(Организация, Строка.Контрагент, Строка.СтруктурнаяЕдиница, ФормаОплаты, ПериодРегистрации, КонецМесяца(ПериодРегистрации));
	//	ТЗДоговорыПоДням.Колонки.Добавить("Сумма");
	//	ПроцедурыНачисления.РаспределениеПоТабличнойЧасти4_4(ТЗДоговорыПоДням, "СуммаПлан", "Сумма", Строка.Сумма);
	//	
	//	Если ТЗДоговорыПоДням.Количество() = 0 Тогда
	//		ОбщегоНазначения.СообщитьОбОшибке("Начисление аренды. По параметрам (" + Строка.Контрагент + ", " + Строка.СтруктурнаяЕдиница + ") не обнаружены плановые данные по договорам аренды");
	//	КонецЕсли;
	//	
	//	Для Каждого СтрокаДень Из ТЗДоговорыПоДням Цикл	 
	//		Движение = Движения.НачисленияПоДоговорамАренды.Добавить();
	//		Движение.Период = Дата;
	//		Движение.Дата = СтрокаДень.ДатаКалендаря;
	//		Движение.Депозит = Истина;
	//		Движение.Договор = СтрокаДень.Договор;
	//		Движение.Документ = Ссылка;
	//		Движение.Контрагент = Строка.Контрагент;
	//		Движение.ОбъектАренды = СтрокаДень.Договор.ОбъектАренды;
	//		Движение.Организация = Организация;
	//		Движение.Услуга = СтрокаДень.Услуга;
	//		Движение.ФормаОплаты = СтрокаДень.ФормаОплаты;
	//		Движение.СтавкаНДС = СтрокаДень.СтавкаНДС;
	//		Движение.СпособНачисления = СтрокаДень.СпособНачисления;
	//		Движение.Ставка = СтрокаДень.Ставка;
	//		Движение.Сумма = СтрокаДень.Сумма;
	//	КонецЦикла;
	//КонецЦикла;
	
	ТЗНачисления = ЭтотОбъект.НачислениеАренды.Выгрузить();
	ТЗНачисления.Свернуть("Контрагент, Договор, ТипАренднойПлаты", "Сумма");
	ТЗНачисления = ПроцедурыНачисления.РаспределитьТаблицуПоДням(ТЗНачисления, ЭтотОбъект.ПериодРегистрации, КонецМесяца(ЭтотОбъект.ПериодРегистрации));
	Для Каждого СтрокаДень Из ТЗНачисления Цикл	 
		Движение = Движения.НачисленияПоДоговорамАренды.Добавить();
		Движение.Период 		= ЭтотОбъект.Дата;
		Движение.Дата 			= СтрокаДень.ДатаКалендаря;
		Движение.Депозит 		= Ложь;
		Движение.Договор 		= СтрокаДень.Договор;
		Движение.Документ 		= ЭтотОбъект.Ссылка;
		Движение.Контрагент 	= СтрокаДень.Контрагент;
		Движение.ОбъектАренды 	= СтрокаДень.Договор.ОбъектАренды;
		Движение.Организация 	= ЭтотОбъект.Организация;
		Движение.ФормаОплаты 	= ЭтотОбъект.ФормаОплаты;
		Движение.ТипАренднойПлаты = СтрокаДень.ТипАренднойПлаты;
		Движение.Сумма 			= СтрокаДень.Сумма;
	КонецЦикла;
	
	ТЗНачисления = ЭтотОбъект.НачислениеДепозита.Выгрузить();
	ТЗНачисления.Свернуть("Контрагент, Договор", "Сумма");
	ТЗНачисления = ПроцедурыНачисления.РаспределитьТаблицуПоДням(ТЗНачисления, ЭтотОбъект.ПериодРегистрации, КонецМесяца(ЭтотОбъект.ПериодРегистрации));
	Для Каждого СтрокаДень Из ТЗНачисления Цикл	 
		Движение = Движения.НачисленияПоДоговорамАренды.Добавить();
		Движение.Период 		= ЭтотОбъект.Дата;
		Движение.Дата 			= СтрокаДень.ДатаКалендаря;
		Движение.Депозит 		= Истина;
		Движение.Договор 		= СтрокаДень.Договор;
		Движение.Документ 		= ЭтотОбъект.Ссылка;
		Движение.Контрагент 	= СтрокаДень.Контрагент;
		Движение.ОбъектАренды 	= СтрокаДень.Договор.ОбъектАренды;
		Движение.Организация 	= ЭтотОбъект.Организация;
		Движение.ФормаОплаты 	= ЭтотОбъект.ФормаОплаты;
		Движение.Сумма 			= СтрокаДень.Сумма;
	КонецЦикла;
	
	АК_УчетМСФО.ЗаполнитьОрганизацию(Движения.Финансовый, ЭтотОбъект.Организация);
	
КонецПроцедуры


СтатьяДРАренда = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("31010");
