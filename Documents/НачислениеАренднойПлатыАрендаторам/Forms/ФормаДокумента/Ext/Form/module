
Перем мВалютаРегл;

Перем ОперацияАпдекс; //+++АК sils 07.06.2018 ИП-00018876

Процедура УстановитьДоступностьФормы()   
	
	ЕстьПравоРазрешитьЗапрещать = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.РазрешитьЗапрещатьРедактироватьДокументовНачислениеАренды, Ложь);
	ЕстьПравоЗапрещатьРедактирование = РольДоступна("ПолныеПрава")
										ИЛИ ЕстьПравоРазрешитьЗапрещать;

	ЭлементыФормы.ЗапретитьРедактирование.Доступность = ЕстьПравоЗапрещатьРедактирование;
	
	Если НЕ ЕстьПравоЗапрещатьРедактирование Тогда
		ЭтаФорма.ТолькоПросмотр = ЭтотОбъект.ЗапретитьРедактирование;
	КонецЕсли;
	
	Если ЕстьПравоРазрешитьЗапрещать Тогда
	//	//ЭлементыФормы.Панель1.Доступность = Ложь;
		ЭлементыФормы.Организация.Доступность 		= Ложь;
		ЭлементыФормы.ДействияФормы.Кнопки.Действие6.Доступность = Ложь;
		ЭлементыФормы.Дата.Доступность				= Ложь;
		ЭлементыФормы.ПериодРегистрации.Доступность = Ложь;
		ЭлементыФормы.ФормаОплаты.Доступность 		= Ложь;
		
		Для Каждого Колонка Из ЭлементыФормы.НачислениеАренды.Колонки Цикл
			Если Колонка.Имя = "СтавкаНДС" Тогда
				Продолжить;	
			КонецЕсли;		
			Колонка.ТолькоПросмотр = Истина;
		КонецЦикла;
		
	//	ЭлементыФормы.НачислениеАренды.ТолькоПросмотр = Истина;
	//	ЭлементыФормы.НачислениеДепозита.ТолькоПросмотр = Истина;
	//	ЭлементыФормы.ПрочаяЗадолженность.ТолькоПросмотр = Истина;
	КонецЕсли;
		
КонецПроцедуры


Процедура ПриОткрытии()
	
	Если ЭтотОбъект.ЭтоНовый() Тогда
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ПериодРегистрации) Тогда
			ЭтотОбъект.ПериодРегистрации = НачалоМесяца(ТекущаяДата());
		КонецЕсли;
	КонецЕсли;	
	
	УстановитьДоступностьФормы();
	
	//+++АК sils 08.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(ЭтоНовый(), "Новый документ", "" + ЭтотОбъект));
	//---АК
КонецПроцедуры


Процедура ПериодРегистрацииПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ЭтотОбъект.ПериодРегистрации) Тогда
		ЭтотОбъект.ПериодРегистрации = НачалоМесяца(ЭтотОбъект.ПериодРегистрации);
	КонецЕсли;
	
КонецПроцедуры


Процедура ДействияФормыСтруктураПодчиненности(Кнопка)
	
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(ЭтотОбъект.Ссылка);
	
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ОсновныеДействияФормыНастройка(Кнопка)

	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(Ложь, ЭтотОбъект.Ссылка, ЭтотОбъект);

КонецПроцедуры

Процедура ЗаполнитьСтрокиНачислениеАренды()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода"			, НачалоМесяца(ЭтотОбъект.ПериодРегистрации));
	Запрос.УстановитьПараметр("ДатаСравненияЛистовУчета", Мин(КонецМесяца(ЭтотОбъект.ПериодРегистрации), ТекущаяДата()));
	Запрос.УстановитьПараметр("ФормаОплаты"				, ЭтотОбъект.ФормаОплаты);
	Запрос.УстановитьПараметр("Организация"				, ЭтотОбъект.Организация);
	Запрос.УстановитьПараметр("ЦФО"						, Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_18")); //Управление исполнительное
	Запрос.УстановитьПараметр("ВалютаРегл"				, мВалютаРегл);
	Запрос.УстановитьПараметр("ДатаДокумента"			, ЭтотОбъект.Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДоговорыКонтрагентов.Ссылка
	|ПОМЕСТИТЬ Договоры
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.ТипДоговора = Значение(Перечисление.ТипыДоговоровСПоставщиком.Аренда)
	|	И ДоговорыКонтрагентов.ОбъектАренды <> ЗНАЧЕНИЕ(Справочник.ОбъектыАренды.ПустаяСсылка)
	|	И ДоговорыКонтрагентов.ОбъектАренды.СтруктурнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(РасторжениеДоговораАренды.ДоговорКонтрагента, ВложенныйЗапросСрокиДействия.ДоговорКонтрагента) КАК ДоговорКонтрагента,
	|	МАКСИМУМ(ЕСТЬNULL(РасторжениеДоговораАренды.ДатаОкончанияДоговора, ВложенныйЗапросСрокиДействия.ДатаОкончанияДоговора)) КАК ДатаОкончанияДоговора
	|ПОМЕСТИТЬ ДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДополнительноеСоглашение.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|		МАКСИМУМ(ДополнительноеСоглашение.ДатаОкончанияДоговора) КАК ДатаОкончанияДоговора
	|	ИЗ
	|		Документ.ДополнительноеСоглашение КАК ДополнительноеСоглашение
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДополнительноеСоглашение.ДоговорКонтрагента
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗаключениеДоговораАренды.ДоговорКонтрагента,
	|		МАКСИМУМ(ЗаключениеДоговораАренды.ДатаОкончанияДоговора)
	|	ИЗ
	|		Документ.ЗаключениеДоговораАренды КАК ЗаключениеДоговораАренды
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ЗаключениеДоговораАренды.ДоговорКонтрагента) КАК ВложенныйЗапросСрокиДействия
	|		ПОЛНОЕ СОЕДИНЕНИЕ Документ.РасторжениеДоговораАренды КАК РасторжениеДоговораАренды
	|		ПО ВложенныйЗапросСрокиДействия.ДоговорКонтрагента = РасторжениеДоговораАренды.ДоговорКонтрагента
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(РасторжениеДоговораАренды.ДоговорКонтрагента, ВложенныйЗапросСрокиДействия.ДоговорКонтрагента)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ЛистУчета.Дата) КАК Дата,
	|	ЛистУчета.ТорговаяТочка
	|ПОМЕСТИТЬ ЛистыУчета
	|ИЗ
	|	Документ.ЛистУчета КАК ЛистУчета
	|ГДЕ
	|	ЛистУчета.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ЛистУчета.ТорговаяТочка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВложенныйЗапрос.Договор,
	|	ВложенныйЗапрос.ДатаОкончанияДоговора,
	|	ВложенныйЗапрос.ДатаПоследнегоЛистаУчета,
	|	ВложенныйЗапрос.ТорговаяТочка,
	|	РАЗНОСТЬДАТ(ВложенныйЗапрос.ДатаПоследнегоЛистаУчета, &ДатаСравненияЛистовУчета, ДЕНЬ) КАК СрокПоследнегоЛистаУчета
	|ПОМЕСТИТЬ ДоговорыПоСрокамИспользования
	|ИЗ
	|	(ВЫБРАТЬ
	|		Договоры.Ссылка КАК Договор,
	|		ЕСТЬNULL(ДС.ДатаОкончанияДоговора, Договоры.Ссылка.СрокДействия) КАК ДатаОкончанияДоговора,
	|		ЛистыУчета.Дата КАК ДатаПоследнегоЛистаУчета,
	|		ЛистыУчета.ТорговаяТочка КАК ТорговаяТочка
	|	ИЗ
	|		Договоры КАК Договоры
	|			ЛЕВОЕ СОЕДИНЕНИЕ ДС КАК ДС
	|			ПО Договоры.Ссылка = ДС.ДоговорКонтрагента
	|			ЛЕВОЕ СОЕДИНЕНИЕ ЛистыУчета КАК ЛистыУчета
	|			ПО Договоры.Ссылка.ОбъектАренды.СтруктурнаяЕдиница = ЛистыУчета.ТорговаяТочка) КАК ВложенныйЗапрос
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Период) КАК Период,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Договор КАК Договор,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Дата КАК Дата
	|ПОМЕСТИТЬ ВТ_ПериодыПланируемыхПлатежейПредварительно
	|ИЗ
	|	РегистрСведений.ПланируемыеПлатежиПоДоговорамАренды.СрезПоследних КАК ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Дата, МЕСЯЦ) = &НачалоПериода
	|	И (ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийДоговоровАренды.САрендатором)
	|			ИЛИ ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Регистратор.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийДоговоровАренды.САрендатором))
	//|	И (ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.ОбъектАренды.СтруктурнаяЕдиница.ДатаЗакрытия >= &НачалоПериода
	//|			ИЛИ ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.ОбъектАренды.СтруктурнаяЕдиница.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Договор,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПериодыПланируемыхПлатежейПредварительно.Период,
	|	ВТ_ПериодыПланируемыхПлатежейПредварительно.Договор,
	|	ВТ_ПериодыПланируемыхПлатежейПредварительно.Дата
	|ПОМЕСТИТЬ ВТ_ПериодыПланируемыхПлатежей
	|ИЗ
	|	ВТ_ПериодыПланируемыхПлатежейПредварительно КАК ВТ_ПериодыПланируемыхПлатежейПредварительно
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДоговоровАренды.СрезПоследних КАК СтатусыДоговоровАрендыСрезПоследних
	|		ПО ВТ_ПериодыПланируемыхПлатежейПредварительно.Договор = СтатусыДоговоровАрендыСрезПоследних.Договор
	|			И ВТ_ПериодыПланируемыхПлатежейПредварительно.Дата >= СтатусыДоговоровАрендыСрезПоследних.ДатаНачалаАренды
	|			И ВТ_ПериодыПланируемыхПлатежейПредварительно.Дата <= СтатусыДоговоровАрендыСрезПоследних.ДатаОкончанияАренды
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Контрагент,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Договор КАК Договор,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Договор.ОбъектАренды.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	&ЦФО КАК ЦФО,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.ТипАренднойПлаты,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Организация,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.СтавкаНДС,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Валюта,
	|	СУММА(ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Сумма) КАК Сумма,
	|	СУММА(ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.СуммаВал) КАК СуммаВал
	|ПОМЕСТИТЬ ПредварительныйРасчет
	|ИЗ
	|	РегистрСведений.ПланируемыеПлатежиПоДоговорамАренды.СрезПоследних КАК ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПланируемыхПлатежей КАК ВТ_ПериодыПланируемыхПлатежей
	|		ПО ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Период = ВТ_ПериодыПланируемыхПлатежей.Период
	|			И ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Договор = ВТ_ПериодыПланируемыхПлатежей.Договор
	|			И ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Дата = ВТ_ПериодыПланируемыхПлатежей.Дата
	|ГДЕ
	|	(ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Сумма <> 0
	|			ИЛИ ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.СуммаВал <> 0)
	|	И (ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.ФормаОплаты = &ФормаОплаты
	|			ИЛИ &ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.ПустаяСсылка))
	|	И (ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Организация = &Организация
	|			ИЛИ &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Контрагент,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Договор,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.ТипАренднойПлаты,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Договор.ОбъектАренды.СтруктурнаяЕдиница,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Организация,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.СтавкаНДС,
	|	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеВБанк.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА ПоступлениеВБанк.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийППИсходящее.ОплатаПостояннойЧастиАрендыАрендодателю)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПостояннаяЧасть)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПеременнаяЧасть)
	|	КОНЕЦ КАК ТипАренднойПлаты,
	|	ВЫБОР
	|		КОГДА ПоступлениеВБанк.ДатаВходящегоДокумента = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА НАЧАЛОПЕРИОДА(ПоступлениеВБанк.Дата, ДЕНЬ)
	|		ИНАЧЕ ПоступлениеВБанк.ДатаВходящегоДокумента
	|	КОНЕЦ КАК ДатаОплаты
	|ПОМЕСТИТЬ ВТ_ДатыОплатПредварительно
	|ИЗ
	|	Документ.ПоступлениеВБанк КАК ПоступлениеВБанк
	|ГДЕ
	|	ПоступлениеВБанк.Проведен
	|	И НАЧАЛОПЕРИОДА(ПоступлениеВБанк.ПериодРегистрации, МЕСЯЦ) = &НачалоПериода
	|	И &ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичные)
	|	И (ПоступлениеВБанк.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ОплатаПостояннойЧастиАрендыОтАрендатора)
	|			ИЛИ ПоступлениеВБанк.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ОплатаПеременнойЧастиАрендыОтАрендатора))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеВКассу.ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА ПоступлениеВКассу.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРКО.ОплатаПостояннойЧастиАрендыАрендодателю)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПостояннаяЧасть)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПеременнаяЧасть)
	|	КОНЕЦ,
	|	НАЧАЛОПЕРИОДА(ПоступлениеВКассу.Ссылка.Дата, ДЕНЬ)
	|ИЗ
	|	Документ.ПоступлениеВКассу КАК ПоступлениеВКассу
	|ГДЕ
	|	ПоступлениеВКассу.Проведен
	|	И НАЧАЛОПЕРИОДА(ПоступлениеВКассу.ПериодРегистрации, МЕСЯЦ) = &НачалоПериода
	|	И &ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличные)
	|	И (ПоступлениеВКассу.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПКО.ОплатаПостояннойЧастиАрендыОтАрендатора)
	|			ИЛИ ПоступлениеВКассу.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПКО.ОплатаПеременнойЧастиАрендыОтАрендатора))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДатыОплатПредварительно.ДоговорКонтрагента,
	|	ВТ_ДатыОплатПредварительно.ТипАренднойПлаты,
	|	МАКСИМУМ(ВТ_ДатыОплатПредварительно.ДатаОплаты) КАК ДатаОплаты
	|ПОМЕСТИТЬ ВТ_ДатыОплат
	|ИЗ
	|	ВТ_ДатыОплатПредварительно КАК ВТ_ДатыОплатПредварительно
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ДатыОплатПредварительно.ДоговорКонтрагента,
	|	ВТ_ДатыОплатПредварительно.ТипАренднойПлаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПредварительныйРасчет.Контрагент,
	|	ПредварительныйРасчет.Договор,
	|	ПредварительныйРасчет.СтруктурнаяЕдиница,
	|	ПредварительныйРасчет.ЦФО,
	|	ПредварительныйРасчет.ТипАренднойПлаты,
	|	ПредварительныйРасчет.Организация,
	|	ПредварительныйРасчет.СтавкаНДС,
	|	ПредварительныйРасчет.Сумма,
	|	ПредварительныйРасчет.СуммаВал,
	|	ВЫБОР
	|		КОГДА ПредварительныйРасчет.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	|				И (КурсыВалютДляРасчетовПоАрендеСрезПоследних.Валюта <> &ВалютаРегл
	|					ИЛИ КурсыВалютДляРасчетовПоАрендеСрезПоследних.СпособРасчета <> ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаКурсаВалюты.КурсЦБ)
	|						И КурсыВалютДляРасчетовПоАрендеСрезПоследних.СпособРасчета <> ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаКурсаВалюты.ПустаяСсылка))
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЕстьРасчетыВВалюте,
	|	ДоговорыПоСрокамИспользования.ДатаОкончанияДоговора,
	|	ДоговорыПоСрокамИспользования.ДатаПоследнегоЛистаУчета,
	|	ДоговорыПоСрокамИспользования.СрокПоследнегоЛистаУчета,
	|	КурсыВалютДляРасчетовПоАрендеСрезПоследних.СпособРасчета,
	|	КурсыВалютДляРасчетовПоАрендеСрезПоследних.Валюта,
	|	КурсыВалютДляРасчетовПоАрендеСрезПоследних.Валюта2,
	|	КурсыВалютДляРасчетовПоАрендеСрезПоследних.Курс,
	|	КурсыВалютДляРасчетовПоАрендеСрезПоследних.Кратность,
	|	КурсыВалютДляРасчетовПоАрендеСрезПоследних.Коэффициент,
	|	КурсыВалютДляРасчетовПоАрендеСрезПоследних.НижняяГраница,
	|	КурсыВалютДляРасчетовПоАрендеСрезПоследних.ВерхняяГраница,
	|	ЕСТЬNULL(ВТ_ДатыОплат.ДатаОплаты, &ДатаДокумента) КАК ДатаОплаты
	|ИЗ
	|	ПредварительныйРасчет КАК ПредварительныйРасчет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДоговорыПоСрокамИспользования КАК ДоговорыПоСрокамИспользования
	|		ПО ПредварительныйРасчет.СтруктурнаяЕдиница = ДоговорыПоСрокамИспользования.ТорговаяТочка
	|			И ПредварительныйРасчет.Договор = ДоговорыПоСрокамИспользования.Договор
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовПоАренде.СрезПоследних(КОНЕЦПЕРИОДА(&НачалоПериода, МЕСЯЦ), ) КАК КурсыВалютДляРасчетовПоАрендеСрезПоследних
	|		ПО ПредварительныйРасчет.Договор = КурсыВалютДляРасчетовПоАрендеСрезПоследних.ДоговорКонтрагента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДатыОплат КАК ВТ_ДатыОплат
	|		ПО ПредварительныйРасчет.Договор = ВТ_ДатыОплат.ДоговорКонтрагента
	|			И ПредварительныйРасчет.ТипАренднойПлаты = ВТ_ДатыОплат.ТипАренднойПлаты";
				   
				   
	ТаблицаРезультат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Строка Из ТаблицаРезультат Цикл
		Если Строка.ЕстьРасчетыВВалюте Тогда
			КурсВалюты = ПроцедурыНачисления.ПолучитьКурсВалютыПоДоговору(Строка.ДатаОплаты, Строка).Курс;	
			Строка.Сумма = Строка.СуммаВал * КурсВалюты;
		КонецЕсли;			
	КонецЦикла;
	
	ТаблицаРезультат.Свернуть("Контрагент, Договор, СтруктурнаяЕдиница, ЦФО, ТипАренднойПлаты, Организация, СтавкаНДС, ДатаОкончанияДоговора, ДатаПоследнегоЛистаУчета, СрокПоследнегоЛистаУчета", "Сумма, ЕстьРасчетыВВалюте"); 
	
	НачислениеАренды.Очистить();
	
	Для Каждого Строка Из ТаблицаРезультат Цикл
		//Если Строка.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Розница Тогда
			НоваяСтрока = НачислениеАренды.Добавить();
		//Иначе
		//	НоваяСтрока = ТаблицаПрочаяЗадолженность.Добавить();			
		//КонецЕсли;			
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		Если НЕ ЗначениеЗаполнено(НоваяСтрока.СтавкаНДС)
				ИЛИ НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
			Сообщить("По контрагенту " + НоваяСтрока.Контрагент + " с договором " + НоваяСтрока.Договор + " не заполнена ставка НДС");
		КонецЕсли;	
		НоваяСтрока.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
		Если Строка.СрокПоследнегоЛистаУчета > 5 Тогда
			НоваяСтрока.Описание = Формат(ПериодРегистрации,"ДФ='ММMM yyyy'") + " аренда: " + Строка.СтруктурнаяЕдиница;
	    КонецЕсли;
		Если ЗначениеЗаполнено(Строка.ДатаОкончанияДоговора)
				и КонецМесяца(Строка.ДатаОкончанияДоговора) < КонецМесяца(ПериодРегистрации) Тогда
			НоваяСтрока.Описание = НоваяСтрока.Описание + "Договор не действует: " + Строка.СтруктурнаяЕдиница;
		КонецЕсли;
	КонецЦикла;
//	Запрос = Новый Запрос;
//	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(ПериодРегистрации));
//	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(ПериодРегистрации));
//	Запрос.УстановитьПараметр("Организация", Организация);
//	Запрос.УстановитьПараметр("ФормаОплаты", ФормаОплаты);
//	Запрос.УстановитьПараметр("ЦФО", Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_18")); //Управление исполнительное
//	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
//				   |	ПланируемыеПлатежиПоДоговорамАренды.Контрагент,
//				   |	ПланируемыеПлатежиПоДоговорамАренды.Договор,
//				   |	ПланируемыеПлатежиПоДоговорамАренды.Договор.ОбъектАренды.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
//				   |	&ЦФО КАК ЦФО,
//				   |	ПланируемыеПлатежиПоДоговорамАренды.ТипАренднойПлаты,
//				   |	СУММА(ПланируемыеПлатежиПоДоговорамАренды.Сумма) КАК Сумма,
//				   |	ПланируемыеПлатежиПоДоговорамАренды.СтавкаНДС
//				   |ИЗ
//				   |	РегистрСведений.ПланируемыеПлатежиПоДоговорамАренды КАК ПланируемыеПлатежиПоДоговорамАренды
//				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
//				   |			МАКСИМУМ(ПланируемыеПлатежиПоДоговорамАренды.Период) КАК Период,
//				   |			ПланируемыеПлатежиПоДоговорамАренды.Договор КАК Договор,
//				   |			ПланируемыеПлатежиПоДоговорамАренды.Услуга КАК Услуга,
//				   |			ПланируемыеПлатежиПоДоговорамАренды.СпособНачисления КАК СпособНачисления,
//				   |			ПланируемыеПлатежиПоДоговорамАренды.СтавкаНДС КАК СтавкаНДС,
//				   |			ПланируемыеПлатежиПоДоговорамАренды.ТипАренднойПлаты КАК ТипАренднойПлаты,
//				   |			ПланируемыеПлатежиПоДоговорамАренды.Ставка КАК Ставка,
//				   |			ПланируемыеПлатежиПоДоговорамАренды.Дата КАК Дата
//				   |		ИЗ
//				   |			РегистрСведений.ПланируемыеПлатежиПоДоговорамАренды КАК ПланируемыеПлатежиПоДоговорамАренды
//				   |		ГДЕ
//				   |			ПланируемыеПлатежиПоДоговорамАренды.Период <= &КонецПериода
//				   |			И ПланируемыеПлатежиПоДоговорамАренды.Договор.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком)
//				   |			И ПланируемыеПлатежиПоДоговорамАренды.ФормаОплаты = &ФормаОплаты
//				   |			И ПланируемыеПлатежиПоДоговорамАренды.Организация = &Организация
//				   |		
//				   |		СГРУППИРОВАТЬ ПО
//				   |			ПланируемыеПлатежиПоДоговорамАренды.Договор,
//				   |			ПланируемыеПлатежиПоДоговорамАренды.Услуга,
//				   |			ПланируемыеПлатежиПоДоговорамАренды.СпособНачисления,
//				   |			ПланируемыеПлатежиПоДоговорамАренды.СтавкаНДС,
//				   |			ПланируемыеПлатежиПоДоговорамАренды.Ставка,
//				   |			ПланируемыеПлатежиПоДоговорамАренды.Дата,
//				   |			ПланируемыеПлатежиПоДоговорамАренды.ТипАренднойПлаты) КАК Периоды
//				   |		ПО ПланируемыеПлатежиПоДоговорамАренды.Период = Периоды.Период
//				   |			И ПланируемыеПлатежиПоДоговорамАренды.Договор = Периоды.Договор
//				   |			И ПланируемыеПлатежиПоДоговорамАренды.Услуга = Периоды.Услуга
//				   |			И ПланируемыеПлатежиПоДоговорамАренды.СпособНачисления = Периоды.СпособНачисления
//				   |			И ПланируемыеПлатежиПоДоговорамАренды.СтавкаНДС = Периоды.СтавкаНДС
//				   |			И ПланируемыеПлатежиПоДоговорамАренды.Ставка = Периоды.Ставка
//				   |			И ПланируемыеПлатежиПоДоговорамАренды.Дата = Периоды.Дата
//				   |			И ПланируемыеПлатежиПоДоговорамАренды.ТипАренднойПлаты = Периоды.ТипАренднойПлаты
//				   |ГДЕ
//				   |	ПланируемыеПлатежиПоДоговорамАренды.Период <= &КонецПериода
//				   |	И ПланируемыеПлатежиПоДоговорамАренды.Дата >= &НачалоПериода
//				   |	И ПланируемыеПлатежиПоДоговорамАренды.Дата <= &КонецПериода
//				   |	И ПланируемыеПлатежиПоДоговорамАренды.Договор.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком)
//				   |	И ПланируемыеПлатежиПоДоговорамАренды.ФормаОплаты = &ФормаОплаты
//				   |	И ПланируемыеПлатежиПоДоговорамАренды.Организация = &Организация
//				   |
//				   |СГРУППИРОВАТЬ ПО
//				   |	ПланируемыеПлатежиПоДоговорамАренды.Контрагент,
//				   |	ПланируемыеПлатежиПоДоговорамАренды.Договор,
//				   |	ПланируемыеПлатежиПоДоговорамАренды.Договор.ОбъектАренды.СтруктурнаяЕдиница,
//				   |	ПланируемыеПлатежиПоДоговорамАренды.ТипАренднойПлаты,
//				   |	ПланируемыеПлатежиПоДоговорамАренды.СтавкаНДС";
//				   
//	Выборка = Запрос.Выполнить().Выбрать();
//	Пока Выборка.Следующий() Цикл
//		Если Не ЗначениеЗаполнено(Выборка.СтавкаНДС)
//			ИЛИ Выборка.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
//			Сообщить("По контрагенту " + Выборка.Контрагент + " с договором " + Выборка.Договор + " не заполнена ставка НДС");
//		КонецЕсли;	
//		СтрокаДоб = НачислениеАренды.Добавить();
//		ЗаполнитьЗначенияСвойств(СтрокаДоб, Выборка);
//		СтрокаДоб.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
//	КонецЦикла;	
	
КонецПроцедуры	

Процедура ЗаполнитьДокумент(Кнопка)
	
	Если ЭтотОбъект.НачислениеАренды.Количество() > 0 Тогда
		Если Вопрос("Табличная часть <Начисление аренды> непустая. Перед заполнением она будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		
		ЭтотОбъект.НачислениеАренды.Очистить();
	КонецЕсли;
	
	//
	ЗаполнитьСтрокиНачислениеАренды();
	
КонецПроцедуры

Процедура ЗаполнитьНачислениеАренды(Кнопка)
	
	Если ЭтотОбъект.НачислениеАренды.Количество() Тогда
		Если Вопрос("Табличная часть <Начисление аренды> непустая. Перед заполнением она будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		ЭтотОбъект.НачислениеАренды.Очистить();
	КонецЕсли;
	
	//
	ЗаполнитьСтрокиНачислениеАренды();
	
КонецПроцедуры


Процедура НачислениеАрендыДоговорПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.НачислениеАренды.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные.СтруктурнаяЕдиница = ТекДанные.Договор.ОбъектАренды.СтруктурнаяЕдиница;
	
КонецПроцедуры

Процедура НачислениеАрендыКонтрагентПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.НачислениеАренды.ТекущиеДанные;
	
	Если ТекДанные.Договор.Пустая() Тогда
		ТекДанные.Договор = ДопМодульСервер.ПолучитьОсновнойДоговорКонтрагента(ЭтотОбъект.Организация, ТекДанные.Контрагент, ?(ЭтотОбъект.ЭтоНовый(), ТекущаяДата(), ЭтотОбъект.Дата));
	КонецЕсли;
	
КонецПроцедуры


Процедура НачислениеДепозитаКонтрагентПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.НачислениеДепозита.ТекущиеДанные;
	
	Если ТекДанные.Договор.Пустая() Тогда
		ТекДанные.Договор = ДопМодульСервер.ПолучитьОсновнойДоговорКонтрагента(ЭтотОбъект.Организация, ТекДанные.Контрагент, ?(ЭтотОбъект.ЭтоНовый(), ТекущаяДата(), ЭтотОбъект.Дата));
	КонецЕсли;
	
КонецПроцедуры

Процедура НачислениеДепозитаДоговорПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.НачислениеДепозита.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные.СтруктурнаяЕдиница = ТекДанные.Договор.ОбъектАренды.СтруктурнаяЕдиница;
	
КонецПроцедуры


Процедура ПрочаяЗадолженностьКонтрагентПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.НачислениеАренды.ТекущиеДанные;
	
	Если ТекДанные.Договор.Пустая() Тогда
		ТекДанные.Договор = ДопМодульСервер.ПолучитьОсновнойДоговорКонтрагента(ЭтотОбъект.Организация, ТекДанные.Контрагент, ?(ЭтотОбъект.ЭтоНовый(), ТекущаяДата(), ЭтотОбъект.Дата));
	КонецЕсли;
	
КонецПроцедуры

Процедура ПрочаяЗадолженностьДоговорПриИзменении(Элемент)
	
	ТекДанные = ЭлементыФормы.ПрочаяЗадолженность.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные.СтруктурнаяЕдиница = ТекДанные.Договор.ОбъектАренды.СтруктурнаяЕдиница;
	
КонецПроцедуры

//+++АК sils 08.06.2018 ИП-00018876
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Начисление арендной платы арендаторам");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
КонецПроцедуры


мВалютаРегл = Константы.ВалютаРегламентированногоУчета.Получить();
