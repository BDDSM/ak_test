
Процедура ЗаполнитьДокумент(Кнопка)
	Если Начисления.Количество() > 0 Тогда
		Если Вопрос("Перед заполнением табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		Иначе
			Начисления.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация");
		Возврат;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(НачалоПериода) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указано начало периода");
		Возврат;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(КонецПериода) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указано начало периода");
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ДокументЗаявкаНаРасходованиеСредств.Ссылка КАК ЗаявкаНаРасходованиеСредств,
	               |	ДокументЗаявкаНаРасходованиеСредств.Ссылка.Ответственный,
	               |	ДокументЗаявкаНаРасходованиеСредств.Ссылка.НазначениеПлатежа,
	               |	ДокументЗаявкаНаРасходованиеСредств.ТорговаяТочка,
	               |	ДокументЗаявкаНаРасходованиеСредств.ЦФО,
	               |	ДокументЗаявкаНаРасходованиеСредств.Ссылка.СчетЗатрат,
	               |	ВложенныйЗапрос.Документ КАК ПлатежныйДокумент,
	               |	ВложенныйЗапрос.Документ.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	               |	ВложенныйЗапрос.Документ.СубконтоДт1 КАК СубконтоКт1,
	               |	ВложенныйЗапрос.Документ.СубконтоДт2 КАК СубконтоКт2,
	               |	ВложенныйЗапрос.Документ.СубконтоДт3 КАК СубконтоКт3,
	               |	ДокументЗаявкаНаРасходованиеСредств.Сумма КАК Сумма
	               |ИЗ
	               |	Документ.ЗаявкаНаРасходованиеСредств.ТорговыеТочки КАК ДокументЗаявкаНаРасходованиеСредств
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			РасходИзБанка.Ссылка КАК Документ,
	               |			РасходИзБанка.ЗаявкаНаРасходованиеСредств КАК ЗаявкаНаРасходованиеСредств,
	               |			РасходИзБанка.ТорговаяТочкаЗаявки КАК ТорговаяТочкаЗаявки
	               |		ИЗ
	               |			Документ.РасходИзБанка КАК РасходИзБанка
	               |		ГДЕ
	               |			РасходИзБанка.Проведен
	               |		
	               |		ОБЪЕДИНИТЬ ВСЕ
	               |		
	               |		ВЫБРАТЬ
	               |			РасходИзКассы.Ссылка,
	               |			РасходИзКассы.ЗаявкаНаРасходованиеСредств,
	               |			РасходИзКассы.ТорговаяТочкаЗаявки
	               |		ИЗ
	               |			Документ.РасходИзКассы КАК РасходИзКассы
	               |		ГДЕ
	               |			РасходИзКассы.Проведен) КАК ВложенныйЗапрос
	               |		ПО ДокументЗаявкаНаРасходованиеСредств.Ссылка = ВложенныйЗапрос.ЗаявкаНаРасходованиеСредств
	               |			И ДокументЗаявкаНаРасходованиеСредств.ТорговаяТочка = ВложенныйЗапрос.ТорговаяТочкаЗаявки
	               |ГДЕ
	               |	ДокументЗаявкаНаРасходованиеСредств.Ссылка.Проведен
	               |	И ДокументЗаявкаНаРасходованиеСредств.Ссылка.ВсеДокументыВНаличии
	               |	И ДокументЗаявкаНаРасходованиеСредств.Ссылка.ДатаРасхода >= &НачалоПериода
	               |	И ДокументЗаявкаНаРасходованиеСредств.Ссылка.ДатаРасхода <= &КонецПериода
	               |	И ДокументЗаявкаНаРасходованиеСредств.Ссылка.Организация = &Организация
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДокументЗаявкаНаРасходованиеСредств.Ссылка
	               |АВТОУПОРЯДОЧИВАНИЕ";
	Начисления.Загрузить(Запрос.Выполнить().Выгрузить());
	Для Каждого Строка Из Начисления Цикл
		ЗаполнитьАнлитикуВСтроке(Строка);
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьАнлитикуВСтроке(Строка, Тип = "")
	Если ЗначениеЗаполнено(Строка.СчетЗатрат)
		И (Тип = ""
			ИЛИ Тип = "Дт") Тогда
		Инд = 1;
		Для Каждого СтрокаВидСубконто Из Строка.СчетЗатрат.ВидыСубконто Цикл
			Если СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки Тогда
				Строка["СубконтоДт" + Инд] = Строка.ТорговаяТочка;
			ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.ЦФО Тогда
				Строка["СубконтоДт" + Инд] = Строка.ЦФО;
			ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДвиженияДенежныхСредств Тогда
				Строка["СубконтоДт" + Инд] = Строка.ЗаявкаНаРасходованиеСредств.СтатьяДвиженияДенежныхСредств;
			ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДоходовРасходов Тогда
				//+++АК SUVV 2018.02.20 ИП-00017941
				//Строка["СубконтоДт" + Инд] = ОбщиеПроцедуры.ПолучитьСтатьюДРПоСтатьеДДС(Строка.ЗаявкаНаРасходованиеСредств.СтатьяДвиженияДенежныхСредств);
				Строка["СубконтоДт" + Инд] = ОбщиеПроцедуры.ПолучитьСтатьюДРПоСтатьеДДС(Дата, Строка.ЗаявкаНаРасходованиеСредств.СтатьяДвиженияДенежныхСредств);
				//---АК SUVV
			ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.Организации Тогда
				Строка["СубконтоДт" + Инд] = Строка.ЗаявкаНаРасходованиеСредств.Организация;
			ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.Контрагенты
				И ТипЗнч(Строка.ЗаявкаНаРасходованиеСредств.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
				Строка["СубконтоДт" + Инд] = Строка.ЗаявкаНаРасходованиеСредств.Контрагент;
			ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.ФизическиеЛица
				И ТипЗнч(Строка.ЗаявкаНаРасходованиеСредств.Контрагент) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
				Строка["СубконтоДт" + Инд] = Строка.ЗаявкаНаРасходованиеСредств.Контрагент;
			ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.БанковскиеСчета
				И ТипЗнч(Строка.ЗаявкаНаРасходованиеСредств.БанковскийСчетКасса) = Тип("СправочникСсылка.БанковскиеСчета") Тогда
				Строка["СубконтоДт" + Инд] = Строка.ЗаявкаНаРасходованиеСредств.Контрагент;
			КонецЕсли;
			
			Инд = Инд + 1;
		КонецЦикла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Строка.СчетУчетаРасчетовСКонтрагентом)
		И (Тип = ""
			ИЛИ Тип = "Кт") Тогда
		Инд = 1;
		Для Каждого СтрокаВидСубконто Из Строка.СчетУчетаРасчетовСКонтрагентом.ВидыСубконто Цикл
			Если ЗначениеЗаполнено(Строка["СубконтоКт" + Инд]) Тогда
				//Пропускаем
			ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки Тогда
				Строка["СубконтоКт" + Инд] = Строка.ТорговаяТочка;
			ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.ЦФО Тогда
				Строка["СубконтоКт" + Инд] = Строка.ЦФО;
			ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДвиженияДенежныхСредств Тогда
				Строка["СубконтоКт" + Инд] = Строка.ЗаявкаНаРасходованиеСредств.СтатьяДвиженияДенежныхСредств;
			ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.Организации Тогда
				Строка["СубконтоКт" + Инд] = Строка.ЗаявкаНаРасходованиеСредств.Организация;
			ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.Контрагенты
				И ТипЗнч(Строка.ЗаявкаНаРасходованиеСредств.Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
				Строка["СубконтоКт" + Инд] = Строка.ЗаявкаНаРасходованиеСредств.Контрагент;
			ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.ФизическиеЛица
				И ТипЗнч(Строка.ЗаявкаНаРасходованиеСредств.Контрагент) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
				Строка["СубконтоКт" + Инд] = Строка.ЗаявкаНаРасходованиеСредств.Контрагент;
			ИначеЕсли СтрокаВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконто.БанковскиеСчета
				И ТипЗнч(Строка.ЗаявкаНаРасходованиеСредств.БанковскийСчетКасса) = Тип("СправочникСсылка.БанковскиеСчета") Тогда
				Строка["СубконтоКт" + Инд] = Строка.ЗаявкаНаРасходованиеСредств.Контрагент;
			КонецЕсли;
			
			Инд = Инд + 1;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	Если НЕ ЭтоНовый() Тогда 
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	Иначе
		Ответственный = глЗначениеПеременной("глТекущийПользователь");
		ЗаполнениеДокументовПереопределяемый.ЗаполнитьШапкуДокумента(ЭтотОбъект, Ответственный);
	КонецЕсли;
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачалоПериода, ?(КонецПериода='0001-01-01', КонецПериода, КонецДня(КонецПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачалоПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонецПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ВыбПериодНажатие1(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачалоПериода, ?(КонецПериода='0001-01-01', КонецПериода, КонецДня(КонецПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачалоПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонецПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура НачисленияСубконтоДт1НачалоВыбора(Элемент, СтандартнаяОбработка)
	БухгалтерскийУчет.ОбработатьВыборПервогоСубконто(Элемент, СтандартнаяОбработка, Организация);
КонецПроцедуры

Процедура НачисленияСубконтоКт1НачалоВыбора(Элемент, СтандартнаяОбработка)
	БухгалтерскийУчет.ОбработатьВыборПервогоСубконто(Элемент, СтандартнаяОбработка, Организация);
КонецПроцедуры

Процедура НачисленияСчетРасходовОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);
КонецПроцедуры

Процедура НачисленияСчетУчетаРасчетовСКонтрагентомОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);
КонецПроцедуры

Процедура ДействияФормыИсторияИзменений(Кнопка)
	ИсторияИзменений = Отчеты.ИсторияИзмененийОбъектов.Создать();
	ИсторияИзменений.СсылкаНаОбъект = Ссылка;
	Форма = ИсторияИзменений.ПолучитьФорму("ФормаОтчета");
	Форма.СформироватьТаблицуВерсий();
	Форма.Открыть();
КонецПроцедуры

Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры

// Процедура вызывается при выборе пункта подменю "Движения документа по регистрам" меню "Перейти".
// командной панели формы. Процедура отрабатывает печать движений документа по регистрам.
//
Процедура ОсновныеДействияФормыНастройка(Кнопка)

	ОбщегоНазначения.РучнаяКорректировкаОсновнаяФорма(Ложь, Ссылка, ЭтотОбъект);

КонецПроцедуры // ДействияФормыДвиженияДокументаПоРегистрам()

Процедура НачисленияСчетЗатратПриИзменении(Элемент)
	ТекДанные = ЭлементыФормы.Начисления.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьАнлитикуВСтроке(ТекДанные, "Дт");
КонецПроцедуры                           

Процедура НачисленияСчетУчетаРасчетовСКонтрагентомПриИзменении(Элемент)
	ТекДанные = ЭлементыФормы.Начисления.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьАнлитикуВСтроке(ТекДанные, "Кт");
КонецПроцедуры
