
Процедура УстановитьОтборы()
	
	Список.Параметры.УстановитьЗначениеПараметра("Пользователь"	, ОтборПоПользователю);
	//Список.Параметры.УстановитьЗначениеПараметра("ФизЛицо"		, ОтборПоПользователю.ФизЛицо);
	Список.Параметры.УстановитьЗначениеПараметра("ВсеДокументы"	, НЕ ЗначениеЗаполнено(ОтборПоПользователю));
	
	ЭлементыОтбора = ЭтаФорма.Список.Отбор.Элементы;
	Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
		
		Если СокрЛП(ЭлементОтбора.ЛевоеЗначение) = "Оплачен" Тогда
			Если ЭтаФорма.ОтборТолькоОплаченные
					ИЛИ ЭтаФорма.ОтборТолькоНеоплаченные Тогда
				ЭлементОтбора.Использование 	= ИСтина;
				ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
				ЭлементОтбора.ПравоеЗначение 	= ЭтаФорма.ОтборТолькоОплаченные;
			Иначе
				ЭлементОтбора.Использование 	= Ложь;
			КонецЕсли;	
		КонецЕсли;
		
		Если СокрЛП(ЭлементОтбора.ЛевоеЗначение) = "ОжидаетАкцепт" Тогда
			Если ЭтаФорма.ОтборТолькоАкцептованные
					ИЛИ ЭтаФорма.ОтборТолькоНеАкцептованные Тогда
				ЭлементОтбора.Использование 	= ИСтина;
				ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
				ЭлементОтбора.ПравоеЗначение 	= НЕ ЭтаФорма.ОтборТолькоАкцептованные;
			Иначе
				ЭлементОтбора.Использование		= Ложь;
			КонецЕсли;	
		КонецЕсли;
		
		Если СокрЛП(ЭлементОтбора.ЛевоеЗначение) = "ОжидаетПодтверждения" Тогда
			Если ЭтаФорма.ОтборТолькоПодтвержденные
					ИЛИ ЭтаФорма.ОтборТолькоНеПодтвержденные Тогда
				ЭлементОтбора.Использование 	= Истина;
				ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
				ЭлементОтбора.ПравоеЗначение 	= НЕ ЭтаФорма.ОтборТолькоПодтвержденные;
			Иначе
				ЭлементОтбора.Использование 	= Ложь;
			КонецЕсли;	
		КонецЕсли;
		
		Если СокрЛП(ЭлементОтбора.ЛевоеЗначение) = "Аванс" Тогда
			Если ЭтаФорма.ОтборТолькоБезАвансов ИЛИ ЭтаФорма.ОтборТолькоСАвансами	Тогда
				ЭлементОтбора.Использование 	= ИСтина;
				ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
				ЭлементОтбора.ПравоеЗначение 	= ЭтаФорма.ОтборТолькоСАвансами;
			Иначе
				ЭлементОтбора.Использование 	= Ложь;
			КонецЕсли;	
		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры	


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Акцептант = Справочники.ПользователиСПравомАкцептаОплат.НайтиПоРеквизиту("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Если ЗначениеЗаполнено(Акцептант)
			И Акцептант.Активен Тогда
		ЭтаФорма.АкцептированиеДоступно = Истина;
	КонецЕсли;

	ОтборПоПользователю = ПараметрыСеанса.ТекущийПользователь;
	УстановитьОтборы();
	
КонецПроцедуры


&НаКлиенте
Процедура УправлениеАкцептантами(Команда)
	
	ОткрытьФорму("Справочник.ПользователиСПравомАкцептаОплат.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура Акцептовать(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура ОтборПоПользователюПриИзменении(Элемент)
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборТолькоНеоплаченныеПриИзменении(Элемент)
	
	Если ЭтаФорма.ОтборТолькоОплаченные
			И ЭтаФорма.ОтборТолькоНеоплаченные Тогда 
		ЭтаФорма.ОтборТолькоОплаченные = Ложь;
	КонецЕсли;
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборТолькоОплаченныеПриИзменении(Элемент)
	
	Если ЭтаФорма.ОтборТолькоОплаченные
			И ЭтаФорма.ОтборТолькоНеоплаченные Тогда 
		ЭтаФорма.ОтборТолькоНеоплаченные = Ложь;
	КонецЕсли;
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборТолькоАкцептованныеПриИзменении(Элемент)
	
	Если ЭтаФорма.ОтборТолькоАкцептованные
			И ЭтаФорма.ОтборТолькоНеАкцептованные Тогда 
		ЭтаФорма.ОтборТолькоНеАкцептованные = Ложь;
	КонецЕсли;
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборТолькоНеАкцептованныеПриИзменении(Элемент)
	
	Если ЭтаФорма.ОтборТолькоАкцептованные
			И ЭтаФорма.ОтборТолькоНеАкцептованные Тогда 
		ЭтаФорма.ОтборТолькоАкцептованные = Ложь;
	КонецЕсли;
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборТолькоПодтвержденныеПриИзменении(Элемент)
	
	Если ЭтаФорма.ОтборТолькоПодтвержденные
			И ЭтаФорма.ОтборТолькоНеПодтвержденные Тогда 
		ЭтаФорма.ОтборТолькоНеПодтвержденные = Ложь;
	КонецЕсли;
	
	УстановитьОтборы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборТолькоНеПодтвержденныеПриИзменении(Элемент)
	
	Если ЭтаФорма.ОтборТолькоПодтвержденные
			И ЭтаФорма.ОтборТолькоНеПодтвержденные Тогда 
		ЭтаФорма.ОтборТолькоПодтвержденные = Ложь;
	КонецЕсли;
	
	УстановитьОтборы();
	
КонецПроцедуры

//АК БЕЛН 30.03.2017+
&НаКлиенте
Процедура ВывестиСписокРейсов(Команда)
	Если Не Элементы.Список.ТекущиеДанные=Неопределено Тогда
		Струк=Новый Структура("Заявка",Элементы.Список.ТекущиеДанные.Ссылка);
	    ОткрытьФорму("Документ.ЗаявкаНаУслугиМатериалы.Форма.ФормаПросмотраРейсов",Струк,,Новый УникальныйИдентификатор);
	КонецЕсли; 
КонецПроцедуры
//АК БЕЛН 30.03.2017-


&НаКлиенте
Процедура ОтборТолькоСАвансамиПриИзменении(Элемент)
	Если ЭтаФорма.ОтборТолькоСАвансами
		И ЭтаФорма.ОтборТолькоБезАвансов Тогда 
		ЭтаФорма.ОтборТолькоБезАвансов = Ложь;
	КонецЕсли;
	
	УстановитьОтборы();

КонецПроцедуры


&НаКлиенте
Процедура ОтборТолькоБезАвансовПриИзменении(Элемент)
	Если ЭтаФорма.ОтборТолькоСАвансами
		И ЭтаФорма.ОтборТолькоБезАвансов Тогда 
		ЭтаФорма.ОтборТолькоСАвансами = Ложь;
	КонецЕсли;
	
	УстановитьОтборы();
КонецПроцедуры

//+++АК SHEP 2017.11.08 ИП-00017193 
&НаСервереБезКонтекста
Функция КомплектацияНаСервере(ЗаявкаНаУслугиМатериалыСсылка, МассивПредставлений)
	
	МассивКомплектаций = Новый Массив;
	МассивПредставлений = Новый Массив;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗаявкаНаУслугиМатериалыУслуги.СтруктурнаяЕдиница КАК Магазин
		|ПОМЕСТИТЬ СписокМагазинов
		|ИЗ
		|	Документ.ЗаявкаНаУслугиМатериалы.Услуги КАК ЗаявкаНаУслугиМатериалыУслуги
		|ГДЕ
		|	ЗаявкаНаУслугиМатериалыУслуги.Ссылка = &ЗаявкаНаУслугиМатериалыСсылка
		|	И НЕ ЗаявкаНаУслугиМатериалыУслуги.СтруктурнаяЕдиница = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КомплектацияМагазинаПоСделкамСПоставщиком.Ссылка,
		|	КомплектацияМагазинаПоСделкамСПоставщиком.Представление КАК ПредставлениеКомплектации,
		|	ПРЕДСТАВЛЕНИЕ(КомплектацияМагазинаПоСделкамСПоставщиком.Магазин) КАК НаименованиеМагазина,
		|	КомплектацияМагазинаПоСделкамСПоставщиком.МоментВремени КАК МоментВремени
		|ИЗ
		|	Документ.КомплектацияМагазинаПоСделкамСПоставщиком КАК КомплектацияМагазинаПоСделкамСПоставщиком
		|ГДЕ
		|	КомплектацияМагазинаПоСделкамСПоставщиком.ПометкаУдаления = ЛОЖЬ
		|	И КомплектацияМагазинаПоСделкамСПоставщиком.Магазин В
		|			(ВЫБРАТЬ
		|				СписокМагазинов.Магазин
		|			ИЗ
		|				СписокМагазинов КАК СписокМагазинов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	МоментВремени УБЫВ");
	Запрос.УстановитьПараметр("ЗаявкаНаУслугиМатериалыСсылка", ЗаявкаНаУслугиМатериалыСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ВыборкаЗапроса = РезультатЗапроса.Выбрать();
		Пока ВыборкаЗапроса.Следующий() Цикл
			МассивКомплектаций.Добавить(ВыборкаЗапроса.Ссылка);
			МассивПредставлений.Добавить(ВыборкаЗапроса.ПредставлениеКомплектации + " (" + ВыборкаЗапроса.НаименованиеМагазина + ")");
		КонецЦикла;
	КонецЕсли;
	
	Возврат МассивКомплектаций;
	
КонецФункции

//+++АК SHEP 2017.11.08 ИП-00017193
&НаКлиенте
Процедура Комплектация(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	МассивПредставлений = Новый Массив; // для отображения магазина
	МассивКомплектаций = КомплектацияНаСервере(Элементы.Список.ТекущаяСтрока, МассивПредставлений);
	
	КоличествоКомплектаций = МассивКомплектаций.Количество();
	Если КоличествоКомплектаций = 0 Тогда
		ПоказатьОповещениеПользователя("Комплектации не найдены!");
		Возврат;
	КонецЕсли;
	
	ПараметрыФормыКомплектации = Новый Структура;
	
	Если КоличествоКомплектаций = 1 Тогда
		ПараметрыФормыКомплектации.Вставить("Ключ", МассивКомплектаций[0]);
	Иначе
		СписокКомплектаций = Новый СписокЗначений;
		Для Сч = 0 По КоличествоКомплектаций - 1 Цикл
			СписокКомплектаций.Добавить(МассивКомплектаций[Сч], МассивПредставлений[Сч]);
		КонецЦикла;
		ВыбраннаяКомплектация = СписокКомплектаций.ВыбратьЭлемент("Выберите комплектацию");
		Если ВыбраннаяКомплектация = Неопределено Тогда Возврат; КонецЕсли;
		ПараметрыФормыКомплектации.Вставить("Ключ", ВыбраннаяКомплектация.Значение);
	КонецЕсли;
	
	ОткрытьФорму("Документ.КомплектацияМагазинаПоСделкамСПоставщиком.ФормаОбъекта", ПараметрыФормыКомплектации, ЭтаФорма);
	
КонецПроцедуры

