//+++АК ILIK 2018.07.19 ИП-00018770
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не Параметры.Свойство("МассивДокументов") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СсылкаНаДокумент = Параметры.МассивДокументов[0];
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВЫБОР
	               |		КОГДА ЗаявкаНаУслугиМатериалыУслуги.Акцептант = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	               |			ТОГДА ЗаявкаНаУслугиМатериалыУслуги.Ссылка.Акцептант
	               |		ИНАЧЕ ЗаявкаНаУслугиМатериалыУслуги.Акцептант
	               |	КОНЕЦ КАК Акцептант
	               |ИЗ
	               |	Документ.ЗаявкаНаУслугиМатериалы.Услуги КАК ЗаявкаНаУслугиМатериалыУслуги
	               |ГДЕ
	               |	ЗаявкаНаУслугиМатериалыУслуги.Ссылка = &Ссылка
	               |	И НЕ ЗаявкаНаУслугиМатериалыУслуги.Акцептована";
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаДокумент);
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Сообщить(Строка(СсылкаНаДокумент) + " полностью акцептована. Рассылка произведена не будет.", СтатусСообщения.ОченьВажное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Акцептант) Тогда
			ЗаполнитьЗначенияСвойств(ТаблицаПолучателей.Добавить(), Выборка);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//+++АК ILIK 2018.07.19 ИП-00018770
&НаСервере
Функция ПолучитьИтоговуюТаблицу(ТаблицаОтчета)
	Таблица = ""; 
	style = "<td style = ""background: #fff; text-align: left;""><font FACE=""Verdana"" color=""000000"" size=2";
	ЦветШапки = "E5D4F2";
	ЦветШапки = "F0FFFF";
	TR = "<th style = ""background: #";
	TA = "; text-align: left;""><font FACE=""Verdana"" color=""000000"" size=2";
    TA1 = "; text-align: left;""><font FACE=""Verdana"" color=""000000"" size=2";
	Инд = 1;
	НомерЗаявки = "";
	
	Для Каждого Строка_ ИЗ ТаблицаОтчета Цикл
		Если Инд = 1 Тогда
			Таблица = Таблица + "<b>Информация из шапки документа</b>";
			Таблица = Таблица + "<Table border style = ""border-collapse: collapse;""><TR>";
			Таблица = Таблица + "
				|" + TR + ЦветШапки + TA + ">Заявка
				|" + TR + ЦветШапки + TA + ">Дата
				|" + TR + ЦветШапки + TA + ">Номер
				|" + TR + ЦветШапки + TA + ">Вид операции
				|" + TR + ЦветШапки + TA + ">Орагнизация
				|" + TR + ЦветШапки + TA + ">Статья ДДС
				|" + TR + ЦветШапки + TA + ">Счет учета расчетов
				|" + TR + ЦветШапки + TA + ">Контрагент
				|" + TR + ЦветШапки + TA + ">Акцептант<TR>";

			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.Ссылка;
			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СсылкаДата;
			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СсылкаНомер;
			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СсылкаВидОперации;
			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СсылкаОрганизация;
			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СсылкаСтатьяДДС;
			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СсылкаСчетУчетаРасчетов;
			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СсылкаКонтрагент;
			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СсылкаАкцептант;
			Таблица = Таблица + "</Table>";
			Таблица = Таблица + "<br>";
			НомерЗаявки = Строка_.СсылкаНомер;
			
			СсылкаАкцептант = Строка_.СсылкаАкцептант;
			
		ИначеЕсли ЗначениеЗаполнено(Строка_.СистемныеПоляНомерПоПорядку) Тогда
			Таблица = Таблица + "<b>Информация из таблицы заявка</b>";
			Таблица = Таблица + "<Table border style = ""border-collapse: collapse;""><TR>";
			Таблица = Таблица + "
				|" + TR + ЦветШапки + TA + ">Номенклатура
				|" + TR + ЦветШапки + TA + ">Количество
				|" + TR + ЦветШапки + TA + ">Цена
				|" + TR + ЦветШапки + TA + ">Сумма
				|" + TR + ЦветШапки + TA + ">Структурная единица
				|" + TR + ЦветШапки + TA + ">Подтверждающий
				|" + TR + ЦветШапки + TA + ">Акцептант
				|" + TR + ЦветШапки + TA + ">Комментарий<TR>";

			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.Номенклатура;
			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.Количество;
			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.Цена;
			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.Сумма;
			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СтруктурнаяЕдиница;
			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.Подтверждающий;
			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.Акцептант;
			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.Комментарий;
			Таблица = Таблица + "</Table>";
			Таблица = Таблица + "<br>";
			
			Если НЕ ЗначениеЗаполнено(СсылкаАкцептант) Тогда
				СсылкаАкцептант = Строка_.Акцептант;
			КонецЕсли;
			
		Иначе
			Таблица = Таблица + "<b>Информация из таблицы оплаты</b>";
			Таблица = Таблица + "<Table border style = ""border-collapse: collapse;""><TR>";
			Таблица = Таблица + "
				|" + TR + ЦветШапки + TA + ">Аванс
				|" + TR + ЦветШапки + TA + ">Дата платежа
				|" + TR + ЦветШапки + TA + ">Сумма оплаты
				|" + TR + ЦветШапки + TA + ">Назначение платежа<TR>";

			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.Аванс;
			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.ДатаПлатежа;
			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.СуммаОплаты;
			Таблица = Таблица + TR + ЦветШапки + TA1 + ">" + Строка_.НазначениеПлатежа;
			Таблица = Таблица + "</Table>";
			Таблица = Таблица + "<br>";
		КонецЕсли;
		Инд = Инд + 1;
	КонецЦикла;
	
	Возврат Таблица; 
КонецФункции

//+++АК ILIK 2018.07.19 ИП-00018770
&НаСервере
Процедура СформироватьИОтправитьОтчет(ПолучателиРассылки)
	СообщениеОбОтправке = "";
	ПереченьАдресов = "";
	
	СписокКому = Новый СписокЗначений;
	Для Каждого Получатель Из ПолучателиРассылки Цикл
		Если Не Получатель.ПравоАкцепта Тогда
			Сообщить("У пользователя " + Строка(Получатель.Акцептант) + " нет права акцепта оплат.", СтатусСообщения.Внимание);
			Продолжить;
		КонецЕсли;
		
		Если ПустаяСтрока(Получатель.АдресПочты) Тогда
			Сообщить("У акцептанта " + Строка(Получатель.Акцептант) + " не заполнен адрес электронной почты. Письмо не отправлено!", СтатусСообщения.Внимание);
			Продолжить;
		Иначе
			СообщениеОбОтправке = СообщениеОбОтправке + ?(ПустаяСтрока(СообщениеОбОтправке), "", Символы.ПС) + Строка(Получатель.Акцептант);
			
			АдресПочты = СтрЗаменить(Получатель.АдресПочты, ";", Символы.ПС);
			Для й = 1 По СтрЧислоСтрок(АдресПочты) Цикл
				ТекАдресПочты = СокрЛП(СтрПолучитьСтроку(АдресПочты, й));
				Если ПустаяСтрока(ТекАдресПочты) Тогда
					Продолжить;
				КонецЕсли;
				
				 СписокКому.Добавить(ТекАдресПочты);
				 ПереченьАдресов = ПереченьАдресов + ?(ПустаяСтрока(ПереченьАдресов), "", ";") + ТекАдресПочты 
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Если СписокКому.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// формиурем файл
	СхемаКомпоновкиДанных = Отчеты.НеакцептованныеЗаявкиНаУслуги.ПолучитьМакет("СхемаОтправкиОднойЗаявки");
	
	ПолеОтбора = Новый ПолеКомпоновкиДанных("Ссылка");
	Настройки = СхемаКомпоновкиДанных.ВариантыНастроек[0].Настройки;
	Для Каждого Элемент Из Настройки.Отбор.Элементы Цикл
		Если Элемент.ЛевоеЗначение = ПолеОтбора Тогда
			Элемент.Использование = Истина;
			Элемент.ПравоеЗначение = СсылкаНаДокумент;
		КонецЕсли;	
	КонецЦикла;	
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	ТаблицаОтчета = Новый ТаблицаЗначений;
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаОтчета);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Если ТаблицаОтчета.Количество() = 0 Тогда
		Сообщить("Таблица для отправки не содержит данных. Рассылка произведена не будет.", СтатусСообщения.ОченьВажное);
		Возврат;
	КонецЕсли;
	
	ТаблицаHTML = ПолучитьИтоговуюТаблицу(ТаблицаОтчета);
	
	// отправляем файл
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	
	ИнтернетПочта = Новый ИнтернетПочта;
	ИнтернетПочта.Подключиться(Профиль);
	
	ПочтовоеСобщение = Новый ИнтернетПочтовоеСообщение;
	//ПочтовоеСобщение.ИмяОтправителя = Строка(УчетнаяЗапись);
	//ПочтовоеСобщение.Отправитель = Строка(УчетнаяЗапись);
	ПочтовоеСобщение.ИмяОтправителя = "accept@izbenka.msk.ru";
	ПочтовоеСобщение.Отправитель = "accept@izbenka.msk.ru";
	
	Для Каждого ПолучательЭлемент Из СписокКому Цикл
		Получатель = ПочтовоеСобщение.Получатели.Добавить();
		Получатель.Адрес = ПолучательЭлемент.Значение;
	КонецЦикла;	
	ПочтовоеСобщение.Тема = Строка(СсылкаНаДокумент);
	
	ID_MESSAGE = Новый УникальныйИдентификатор;
	TYPE_MESSAGE = 1;
	GUID_Заявки = СсылкаНаДокумент.УникальныйИдентификатор();
	
	пТекстСсылкиНаКнопкуПодтвердить = "mailto:vkusvill.333@gmail.com?reply-to=vkusvill.333@gmail.com&subject=Акцепт заявки №" + НомерЗаявки + "&body=GUID%20" + GUID_Заявки + "%20ID_MESSAGE%20" + ID_MESSAGE   + "%20TYPE_MESSAGE%20" + TYPE_MESSAGE  + "%20Акцептировано";
	пТекстСсылкиНаКнопкуОтменитьПодтверждение = "mailto:vkusvill.333@gmail.com?reply-to=vkusvill.333@gmail.com&subject=Акцепт заявки №" + НомерЗаявки + "&body=GUID%20" + GUID_Заявки + "%20ID_MESSAGE%20" + ID_MESSAGE   + "%20TYPE_MESSAGE%20" + TYPE_MESSAGE  + "%20Отклонено";
 	пТекстКнопкиПодтвердить = "<a href=""" + пТекстСсылкиНаКнопкуПодтвердить + """><b>Акцептовать</b></a><br><br>";
	пТекстКнопкиОтменитьПодтверждение = "<a href=""" + пТекстСсылкиНаКнопкуОтменитьПодтверждение + """><b>Отклонить</b></a><br><br>";
	ПочтовоеСобщение.Тексты.Добавить(ТаблицаHTML + пТекстКнопкиПодтвердить + пТекстКнопкиОтменитьПодтверждение, ТипТекстаПочтовогоСообщения.HTML);
	
	ИнтернетПочта.Послать(ПочтовоеСобщение);
	ИнтернетПочта.Отключиться();
	
	Запись = РегистрыСведений.АкцептЗаявок.СоздатьМенеджерЗаписи();
	Запись.GUID_Загрузки = ID_MESSAGE;
	Запись.GUID_Заявки = GUID_Заявки;
	Запись.ДатаОтправки = ТекущаяДата();
	Запись.ЗаявкаНаУслугиМатериалы = СсылкаНаДокумент;
	Запись.Акцептант = СсылкаАкцептант;
	Запись.ИдентификаторСообщения = ПочтовоеСобщение.ИдентификаторСообщения;
	Запись.ОтправленаНаАкцепт = Истина;
	Запись.email = ПереченьАдресов;
	Запись.ТипЗаявки = TYPE_MESSAGE;
	Запись.Записать();
	
	Сообщить("Письмо отправлено следующим пользователям: " + Символы.ПС + СообщениеОбОтправке, СтатусСообщения.Информация);
КонецПроцедуры

//+++АК ILIK 2018.07.19 ИП-00018770
&НаСервере
Процедура ОтправитьНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаПолучателей.Акцептант
	               |ПОМЕСТИТЬ ВТТаблицаПолучателей
	               |ИЗ
	               |	&ТаблицаПолучателей КАК ТаблицаПолучателей
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТТаблицаПолучателей.Акцептант,
	               |	МАКСИМУМ(ВЫРАЗИТЬ(ЕСТЬNULL(КонтактнаяИнформация.Представление, """") КАК СТРОКА(100))) КАК АдресПочты,
	               |	МАКСИМУМ(ВЫБОР
	               |			КОГДА ПользователиСПравомАкцептаОплат.Ссылка ЕСТЬ NULL
	               |				ТОГДА ЛОЖЬ
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ) КАК ПравоАкцепта
	               |ИЗ
	               |	ВТТаблицаПолучателей КАК ВТТаблицаПолучателей
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |		ПО ВТТаблицаПолучателей.Акцептант = КонтактнаяИнформация.Объект
	               |			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ПользователиСПравомАкцептаОплат КАК ПользователиСПравомАкцептаОплат
	               |		ПО ВТТаблицаПолучателей.Акцептант = ПользователиСПравомАкцептаОплат.Пользователь
	               |			И (ПользователиСПравомАкцептаОплат.Активен)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТТаблицаПолучателей.Акцептант
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВТТаблицаПолучателей.Акцептант";
	Запрос.УстановитьПараметр("ТаблицаПолучателей", РеквизитФормыВЗначение("ТаблицаПолучателей"));
		
	СформироватьИОтправитьОтчет(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

//+++АК ILIK 2018.07.19 ИП-00018770
&НаКлиенте
Процедура Отправить(Команда)
	ОтправитьНаСервере();
	Закрыть();
КонецПроцедуры
