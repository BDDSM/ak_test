
Процедура РассчитатьСуммуНДС()
	
	Перем мСуммаВключаетНДС;
	
	мСуммаВключаетНДС = (Объект.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле);
	Если Объект.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.БезНДС Тогда
		Объект.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
	КонецЕсли;
	
	Объект.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(Объект.Сумма,
													   Истина, мСуммаВключаетНДС,
													   УчетНДС.ПолучитьСтавкуНДС(Объект.СтавкаНДС));
	
КонецПроцедуры

Процедура ЗаполнитьСуммыДокументаПоПриходникам()
	
	Если Объект.ПриходныеОрдера.Количество() = 0 Тогда
		Объект.ВариантРасчетаНДС 	= Перечисления.ВариантыРасчетаНДС.ПустаяСсылка();
		Объект.Сумма 				= 0;
		Объект.СуммаНДС 			= 0;
		Возврат;
	КонецЕсли;
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Маршрут"				, Объект.Маршрут);
	Запрос.УстановитьПараметр("ДатаНачала"			, Объект.Дата);
	Запрос.УстановитьПараметр("МассивПриходников"	, Объект.ПриходныеОрдера.Выгрузить().ВыгрузитьКолонку("ПриходныйОрдер"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТарифыНаДоставкуПоМаршруту.ВесОт КАК ВесОт,
	|	ТарифыНаДоставкуПоМаршруту.Сумма КАК Сумма,
	|	ТарифыНаДоставкуПоМаршруту.ВариантРасчетаНДС,
	|	ТарифыНаДоставкуПоМаршруту.СтавкаНДС,
	|	ТарифыНаДоставкуПоМаршруту.СуммаНДС,
	|	ТарифыНаДоставкуПоМаршруту.ЦенаЗаКг,
	|	ТарифыНаДоставкуПоМаршруту.Перевозчик
	|ИЗ
	|	РегистрСведений.ТарифыНаДоставкуПоМаршруту.СрезПоследних(ДОБАВИТЬКДАТЕ(&ДатаНачала, СЕКУНДА, 1), Маршрут = &Маршрут) КАК ТарифыНаДоставкуПоМаршруту
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТарифыНаДоставкуПоМаршруту.ЕдиныйТариф КАК ЕдиныйТариф
	|		ИЗ
	|			РегистрСведений.ТарифыНаДоставкуПоМаршруту КАК ТарифыНаДоставкуПоМаршруту
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					МАКСИМУМ(ТарифыНаДоставкуПоМаршруту.Период) КАК Период
	|				ИЗ
	|					РегистрСведений.ТарифыНаДоставкуПоМаршруту КАК ТарифыНаДоставкуПоМаршруту
	|				ГДЕ
	|					ТарифыНаДоставкуПоМаршруту.Маршрут = &Маршрут
	|					И НЕ ТарифыНаДоставкуПоМаршруту.Период > &ДатаНачала) КАК ВТПоследняяЗапись
	|				ПО (ВТПоследняяЗапись.Период = ТарифыНаДоставкуПоМаршруту.Период)
	|		ГДЕ
	|			ТарифыНаДоставкуПоМаршруту.Маршрут = &Маршрут
	|			И НЕ ТарифыНаДоставкуПоМаршруту.Период > &ДатаНачала
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТарифыНаДоставкуПоМаршруту.ЕдиныйТариф) КАК ВТПоследниеПериоды
	|		ПО (ВТПоследниеПериоды.ЕдиныйТариф = ТарифыНаДоставкуПоМаршруту.ЕдиныйТариф)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТарифыНаДоставкуПоМаршруту.ВесОт УБЫВ";
	
	ТаблицаТарифов = Запрос.Выполнить().Выгрузить();
	
	мОбщийВес = 0;
	Для Каждого СтрокаТЧ Из Объект.ПриходныеОрдера Цикл
		ТекТЧТовары = СтрокаТЧ.ПриходныйОрдер.Товары;
		Для Каждого СтрокаТовары Из ТекТЧТовары Цикл
			мОбщийВес = мОбщийВес + СтрокаТовары.ЕдиницаИзмерения.Вес * СтрокаТовары.Количество;
		КонецЦикла;
	КонецЦикла;
	
	//
	Для Каждого СтрокаТарифа Из ТаблицаТарифов Цикл
		Если НЕ мОбщийВес < СтрокаТарифа.ВесОт Тогда
			Объект.Сумма 				= СтрокаТарифа.Сумма 	* ?(СтрокаТарифа.ЦенаЗаКг, мОбщийВес, 1);
			Объект.СуммаНДС 			= СтрокаТарифа.СуммаНДС * ?(СтрокаТарифа.ЦенаЗаКг, мОбщийВес, 1);
			Объект.ВариантРасчетаНДС 	= СтрокаТарифа.ВариантРасчетаНДС;
			Объект.СтавкаНДС 			= СтрокаТарифа.СтавкаНДС;
			Объект.Перевозчик 			= СтрокаТарифа.Перевозчик;
			Прервать;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура ЗаполнитьПриходныеОрдера()
	
	// очистка табличной части приходников (кроме введенных вручную)
	МассивКУдалению = Новый Массив;
	Для Каждого СтрокаТЧ Из Объект.ПриходныеОрдера Цикл
		Если СтрокаТЧ.ДобавленВручную Тогда
			Продолжить;
		КонецЕсли;
		МассивКУдалению.Добавить(СтрокаТЧ);
	КонецЦикла;
	Для Каждого СтрокаТЧ Из МассивКУдалению Цикл
		Объект.ПриходныеОрдера.Удалить(СтрокаТЧ);
	КонецЦикла;
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала"			, НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("ДатаПредыдущая1"		, НачалоДня(Объект.Дата) - 7 * 86400);
	Запрос.УстановитьПараметр("ДатаПредыдущая2"		, НачалоДня(Объект.Дата) - 1);
	Запрос.УстановитьПараметр("Перевозчик"			, Объект.Перевозчик);
	Запрос.УстановитьПараметр("МассивПоставщиков"	, Объект.Поставщики.Выгрузить().ВыгрузитьКолонку("Поставщик"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПриходныйОрдерСклад.Ссылка КАК ПриходныйОрдер
	|ИЗ
	|	Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
	|ГДЕ
	|	ПриходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ОтПоставщика)
	|	И ПриходныйОрдерСклад.Проведен
	|	И НАЧАЛОПЕРИОДА(ВЫБОР
	|				КОГДА НЕ ПриходныйОрдерСклад.ДатаДокументаПоставщика = ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА ПриходныйОрдерСклад.ДатаДокументаПоставщика
	|				ИНАЧЕ ПриходныйОрдерСклад.Дата
	|			КОНЕЦ, ДЕНЬ) = &ДатаНачала
	|	И ПриходныйОрдерСклад.Поставщик В(&МассивПоставщиков)
	|	И ПриходныйОрдерСклад.Автомобиль.Перевозчик = &Перевозчик
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПриходныйОрдерСклад.Ссылка
	|ИЗ
	|	Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ТранспортныеРасходы.ПриходныеОрдера КАК ТранспортныеРасходыПриходныеОрдера
	|		ПО (ТранспортныеРасходыПриходныеОрдера.Ссылка.Дата >= &ДатаПредыдущая1)
	|			И (ТранспортныеРасходыПриходныеОрдера.ПриходныйОрдер = ПриходныйОрдерСклад.Ссылка)
	|ГДЕ
	|	ПриходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ОтПоставщика)
	|	И ПриходныйОрдерСклад.Проведен
	|	И ВЫБОР
	|			КОГДА НЕ ПриходныйОрдерСклад.ДатаДокументаПоставщика = ДАТАВРЕМЯ(1, 1, 1)
	|				ТОГДА ПриходныйОрдерСклад.ДатаДокументаПоставщика
	|			ИНАЧЕ ПриходныйОрдерСклад.Дата
	|		КОНЕЦ МЕЖДУ &ДатаПредыдущая1 И &ДатаПредыдущая2
	|	И ПриходныйОрдерСклад.Поставщик В(&МассивПоставщиков)
	|	И ПриходныйОрдерСклад.Автомобиль.Перевозчик = &Перевозчик
	|	И ТранспортныеРасходыПриходныеОрдера.ПриходныйОрдер ЕСТЬ NULL ";
	
	ТекТЧТовары = Объект.Маршрут.Товары;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекПриходник = Выборка.ПриходныйОрдер;
		
		ТекТоварыПриходника = ТекПриходник.Товары;
		мДобавлять = (ТекТоварыПриходника.Количество() > 0);
		Если мДобавлять
				И ТекТЧТовары.Количество() > 0 Тогда
			мДобавлять = Ложь;
			Для Каждого СтрокаТЧ Из ТекТоварыПриходника Цикл
				Если НЕ ТекТЧТовары.Найти(СтрокаТЧ.Номенклатура, "Номенклатура") = Неопределено Тогда
					мДобавлять = Истина;
					Продолжить;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если НЕ мДобавлять Тогда
			Продолжить;
		КонецЕсли;
		
		//
		НоваяСтрока = Объект.ПриходныеОрдера.Добавить();
		НоваяСтрока.ПриходныйОрдер = ТекПриходник;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоМаршрутуСервер()
	
	Перем мТаблица;
	
	Объект.Организация 	= Объект.Маршрут.Организация;
	//Объект.Перевозчик 	= Объект.Маршрут.Перевозчик;
	
	мТаблица = Объект.Маршрут.Поставщики.Выгрузить();
	
	// поставщики
	Объект.Поставщики.Загрузить(мТаблица);
	
	//
	ЗаполнитьПриходныеОрдера();
	ЗаполнитьСуммыДокументаПоПриходникам();
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("Маршрут", Объект.Маршрут);
	//Запрос.Текст =
	//"ВЫБРАТЬ
	//|	РегистрСведенийТарифыНаДоставкуПоМаршрутуСрезПоследних.Сумма,
	//|	РегистрСведенийТарифыНаДоставкуПоМаршрутуСрезПоследних.ВариантРасчетаНДС,
	//|	РегистрСведенийТарифыНаДоставкуПоМаршрутуСрезПоследних.СтавкаНДС,
	//|	РегистрСведенийТарифыНаДоставкуПоМаршрутуСрезПоследних.СуммаНДС
	//|ИЗ
	//|	РегистрСведений.ТарифыНаДоставкуПоМаршруту.СрезПоследних(, Маршрут = &Маршрут) КАК РегистрСведенийТарифыНаДоставкуПоМаршрутуСрезПоследних
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//|			ТарифыНаДоставкуПоМаршруту.ЕдиныйТариф КАК ЕдиныйТариф
	//|		ИЗ
	//|			РегистрСведений.ТарифыНаДоставкуПоМаршруту КАК ТарифыНаДоставкуПоМаршруту
	//|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//|					МАКСИМУМ(ТарифыНаДоставкуПоМаршруту.Период) КАК Период
	//|				ИЗ
	//|					РегистрСведений.ТарифыНаДоставкуПоМаршруту КАК ТарифыНаДоставкуПоМаршруту
	//|				ГДЕ
	//|					ТарифыНаДоставкуПоМаршруту.Маршрут = &Маршрут) КАК ВТПоследняяЗапись
	//|				ПО (ВТПоследняяЗапись.Период = ТарифыНаДоставкуПоМаршруту.Период)
	//|		ГДЕ
	//|			ТарифыНаДоставкуПоМаршруту.Маршрут = &Маршрут
	//|		
	//|		СГРУППИРОВАТЬ ПО
	//|			ТарифыНаДоставкуПоМаршруту.ЕдиныйТариф) КАК ПоследниеПериоды
	//|		ПО (ПоследниеПериоды.ЕдиныйТариф = РегистрСведенийТарифыНаДоставкуПоМаршрутуСрезПоследних.ЕдиныйТариф)";
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//Если Выборка.Следующий() Тогда
	//	ЗаполнитьЗначенияСвойств(Объект, Выборка);
	//Иначе
	//	Объект.ВариантРасчетаНДС 	= 0;
	//	Объект.Сумма 				= 0;
	//	Объект.СуммаНДС 			= 0;
	//КонецЕсли;
	
	//Объект.ВариантРасчетаНДС 	= Объект.Маршрут.ВариантРасчетаНДС;
	//Объект.Сумма 				= Объект.Маршрут.Сумма;
	//Объект.СуммаНДС 			= Объект.Маршрут.СуммаНДС;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// значения "по умолчанию"
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Объект.Автор 		= ПараметрыСеанса.ТекущийПользователь;
		Объект.Дата 		= ТекущаяДата();
		Объект.Организация 	= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
		
		Объект.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(Объект.Ссылка.ПолучитьОбъект(), ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура МаршрутПриИзменении(Элемент)
	
	ЗаполнитьПоМаршрутуСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	
	РассчитатьСуммуНДС();
	//ДопМодульКлиентСервер.ПересчитатьСуммуНДС(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантРасчетаНДСПриИзменении(Элемент)
	
	РассчитатьСуммуНДС();
	
КонецПроцедуры

&НаКлиенте
Процедура СтавкаНДСПриИзменении(Элемент)
	
	РассчитатьСуммуНДС();
	
КонецПроцедуры


&НаКлиенте
Процедура ПриходныеОрдераПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТекДанные = Элемент.ТекущиеДанные;
	
	Если (НЕ ТекДанные.ПриходныйОрдер.Пустая())
			И НЕ ТекДанные.ПриходныйОрдер.Автомобиль.Перевозчик = Объект.Перевозчик Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Перевозчик у автомобиля перевозчика в приходном ордере не соответствует перевозчику документа!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НоваяСтрока Тогда
		ТекДанные.ДобавленВручную = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриходныеОрдераПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ЗаполнитьСуммыДокументаПоПриходникам();

КонецПроцедуры
