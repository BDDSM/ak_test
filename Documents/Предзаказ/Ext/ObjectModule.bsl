
Процедура ЗаписатьИзменениеДатыПоступления(мПредзаказ, СтараяДатаПоступления, НоваяДатаПоступления)
	
	НаборЗаписей = РегистрыСведений.АК_ИсторияИзмененийПредзаказа_ДатаПоступления.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Предзаказ.Установить(мПредзаказ);
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() = 0 Тогда // в первый раз записывается изменение - пишется первоначальное значение
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Период 			= ТекущаяДата() - 1;
		НоваяЗапись.Предзаказ 		= мПредзаказ;
		НоваяЗапись.ДатаПоступления = СтараяДатаПоступления;
		НоваяЗапись.Автор 			= мПредзаказ.Ответственный;
		Попытка
			НаборЗаписей.Записать();
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	НаборЗаписей = Неопределено; // забота о памяти приложения 1С
	
	// измененное значение
	МенеджерЗаписи = РегистрыСведений.АК_ИсторияИзмененийПредзаказа_ДатаПоступления.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период 			= ТекущаяДата();
	МенеджерЗаписи.Предзаказ 		= мПредзаказ;
	МенеджерЗаписи.ДатаПоступления 	= НоваяДатаПоступления;
	МенеджерЗаписи.Автор 			= ПараметрыСеанса.ТекущийПользователь;
	Попытка
		МенеджерЗаписи.Записать();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗаписатьИзмененияТоваров()
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент"	, ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("ТЧТовары"		, ЭтотОбъект.Товары.Выгрузить());
	//Запрос.УстановитьПараметр("ДатаСреза"		, Новый Граница(ЭтотОбъект.Дата, ВидГраницы.Исключая));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТЧТовары.Номенклатура,
	|	ТЧТовары.Характеристика,
	|	ТЧТовары.Количество
	|ПОМЕСТИТЬ ВТТовары
	|ИЗ
	|	&ТЧТовары КАК ТЧТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ИсторияИзмененияПредзаказа_Количество.Номенклатура, ТЧТовары.Номенклатура) КАК Номенклатура,
	|	ЕСТЬNULL(ИсторияИзмененияПредзаказа_Количество.Характеристика, ТЧТовары.Характеристика) КАК Характеристика,
	|	ЕСТЬNULL(ИсторияИзмененияПредзаказа_Количество.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата_До,
	|	ЕСТЬNULL(ИсторияИзмененияПредзаказа_Количество.Количество, 0) КАК Количество_До,
	|	ЕСТЬNULL(ТЧТовары.Количество, 0) КАК Количество_Текущее,
	|	ЕСТЬNULL(ТЧТовары.Количество, 0) - ЕСТЬNULL(ИсторияИзмененияПредзаказа_Количество.Количество, 0) КАК Количество
	|ИЗ
	|	РегистрСведений.АК_ИсторияИзмененияПредзаказа_Количество.СрезПоследних(, Предзаказ = &ТекущийДокумент) КАК ИсторияИзмененияПредзаказа_Количество
	|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВТТовары.Номенклатура КАК Номенклатура,
	|			ВТТовары.Характеристика КАК Характеристика,
	|			СУММА(ВТТовары.Количество) КАК Количество
	|		ИЗ
	|			ВТТовары КАК ВТТовары
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВТТовары.Номенклатура,
	|			ВТТовары.Характеристика) КАК ТЧТовары
	|		ПО (ТЧТовары.Номенклатура = ИсторияИзмененияПредзаказа_Количество.Номенклатура)
	|			И (ТЧТовары.Характеристика = ИсторияИзмененияПредзаказа_Количество.Характеристика)
	|ГДЕ
	|	НЕ ЕСТЬNULL(ИсторияИзмененияПредзаказа_Количество.Количество, 0) = ЕСТЬNULL(ТЧТовары.Количество, 0)";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	// если есть расхождения - запись их в регистр (при первом проведении документа - тоже)
	мДата 	= ТекущаяДата();
	мАвтор 	= ПараметрыСеанса.ТекущийПользователь;
	
	НаборЗаписей = РегистрыСведений.АК_ИсторияИзмененияПредзаказа_Количество.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Предзаказ.Установить(ЭтотОбъект.Ссылка);
	НаборЗаписей.Прочитать();
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		//Если НЕ Выборка.Количество_До = 0 Тогда
		//	НоваяЗапись = НаборЗаписей.Добавить();
		//	НоваяЗапись.Период 			= Выборка.Дата_До;
		//	НоваяЗапись.Предзаказ 		= ЭтотОбъект.Ссылка;
		//	НоваяЗапись.Номенклатура 	= Выборка.Номенклатура;
		//	НоваяЗапись.Характеристика 	= Выборка.Характеристика;
		//	НоваяЗапись.Количество		= - Выборка.Количество_До;
		//	НоваяЗапись.Автор 			= мАвтор;
		//КонецЕсли;
		//Если НЕ Выборка.Количество_Текущее = 0 Тогда
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Период 			= мДата;
			НоваяЗапись.Предзаказ 		= ЭтотОбъект.Ссылка;
			НоваяЗапись.Номенклатура 	= Выборка.Номенклатура;
			НоваяЗапись.Характеристика 	= Выборка.Характеристика;
			НоваяЗапись.Количество		= Выборка.Количество_Текущее;
			НоваяЗапись.Автор 			= мАвтор;
		//КонецЕсли;
	КонецЦикла;
	Попытка
		НаборЗаписей.Записать();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	НаборЗаписей = Неопределено;
	
КонецПроцедуры	


Процедура ПроверитьПроизводителейТоваров(Отказ)
	
	Если ЭтотОбъект.ГрафикЗаказа.Пустая() Тогда
		Возврат;
	КонецЕсли;	
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Производитель"	, ЭтотОбъект.ГрафикЗаказа.Владелец);
	Запрос.УстановитьПараметр("ТабТовары"		, ЭтотОбъект.Товары.Выгрузить());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТабТовары.НомерСтроки КАК НомерСтроки,
	|	ТабТовары.Номенклатура КАК Номенклатура,
	|	ТабТовары.Характеристика КАК ХарактеристикаНом
	|ПОМЕСТИТЬ ВТТовары
	|ИЗ
	|	&ТабТовары КАК ТабТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫРАЗИТЬ(ПроизводителиТоваров.Объект КАК Справочник.ХарактеристикиНоменклатуры).Владелец КАК Номенклатура,
	|	ПроизводителиТоваров.Объект КАК ХарактеристикаНоменклатуры
	|ПОМЕСТИТЬ ВТХарактеристики
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ПроизводителиТоваров
	|ГДЕ
	|	ПроизводителиТоваров.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель)
	|	И ПроизводителиТоваров.Значение = &Производитель
	|	И НЕ ВЫРАЗИТЬ(ПроизводителиТоваров.Объект КАК Справочник.ХарактеристикиНоменклатуры).Неактивная
	|	И НЕ ВЫРАЗИТЬ(ПроизводителиТоваров.Объект КАК Справочник.ХарактеристикиНоменклатуры).ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабТовары.НомерСтроки КАК НомерСтроки,
	|	ТабТовары.Номенклатура КАК Номенклатура
	|ИЗ
	|	ВТТовары КАК ТабТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТХарактеристики КАК ВТХарактеристики
	|		ПО (ВТХарактеристики.Номенклатура = ТабТовары.Номенклатура)
	|			И (ВТХарактеристики.ХарактеристикаНоменклатуры = ТабТовары.ХарактеристикаНом)
	|ГДЕ
	|	ВТХарактеристики.Номенклатура ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	//
	Отказ = Истина;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Номенклатура.НеВедетсяУчетПоХарактеристикам Тогда
			Продолжить;
		КонецЕсли;
		Сообщить("В строке " + Формат(Выборка.НомерСтроки, "ЧГ=") + " для номенклатуры " + СокрЛП(Выборка.Номенклатура.Наименование) +
					" указана характеристика, не соответствующая производителю, указанному в графике заказа (" + СокрЛП(ЭтотОбъект.ГрафикЗаказа.Владелец.Наименование) + ")!");
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьВыведенаИзАссортимента()
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент"	, ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДатаСреза"		, ?(ЗначениеЗаполнено(ЭтотОбъект.Дата), ЭтотОбъект.Дата, ТекущаяДата()));
	Запрос.УстановитьПараметр("МассивТТ"		, ЭтотОбъект.Товары.ВыгрузитьКолонку("ТорговаяТочка"));
	Запрос.УстановитьПараметр("МассивТоваров"	, ЭтотОбъект.Товары.ВыгрузитьКолонку("Номенклатура"));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПредзаказТовары.НомерСтроки,
	|	ПредзаказТовары.ТорговаяТочка.Наименование КАК ТорговаяТочка,
	|	ПредзаказТовары.Номенклатура.Наименование КАК Номенклатура,
	|	ПредзаказТовары.Характеристика
	|ИЗ
	|	Документ.Предзаказ.Товары КАК ПредзаказТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(
	|				&ДатаСреза,
	|				ТорговаяТочка В (&МассивТТ)
	|					И Номенклатура В (&МассивТоваров)) КАК ТоварныйАссортиментТочек
	|		ПО (ТоварныйАссортиментТочек.ТорговаяТочка = ПредзаказТовары.ТорговаяТочка)
	|			И (ТоварныйАссортиментТочек.Номенклатура = ПредзаказТовары.Номенклатура)
	|			И (ТоварныйАссортиментТочек.Характеристика = ПредзаказТовары.Характеристика)
	|			И (ТоварныйАссортиментТочек.Выведена)
	|ГДЕ
	|	ПредзаказТовары.Ссылка = &ТекущийДокумент";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	//
	Сообщить("---" + Символы.ПС + ЭтотОбъект);
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Сообщить("Строка №" + Формат(Выборка.НомерСтроки, "ЧГ=") + ": из ассортимента торговой точки """ + Выборка.ТорговаяТочка +
					""" выведена товарная позиция """ + Выборка.Номенклатура +
					?(ЗначениеЗаполнено(Выборка.Характеристика), " (" + Выборка.Характеристика + ")", "") + """");
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьПерезаполнитьЗаказы()
	
	Если ЭтотОбъект.ЭтоНовый()
			ИЛИ ЭтотОбъект.ДатаПоступления = ЭтотОбъект.Ссылка.ДатаПоступления
			ИЛИ ЭтотОбъект.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Предзаказ"		, ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("ДатаПоступления"	, ЭтотОбъект.ДатаПоступления);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗаказПоставщикуПредзаказы.Ссылка КАК Заказ
	|ИЗ
	|	Документ.ЗаказПоставщику.Предзаказы КАК ЗаказПоставщикуПредзаказы
	|ГДЕ
	|	ЗаказПоставщикуПредзаказы.Документ = &Предзаказ
	|	И НЕ ЗаказПоставщикуПредзаказы.Ссылка.ДатаПоступления = &ДатаПоступления";	
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	//
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОбъектДокумента = Выборка.Заказ.ПолучитьОбъект();
		ОбъектДокумента.ОбменДанными.Загрузка = Истина; // чтобы не вызывать процедуру перед записью в модуле заказа
		ОбъектДокумента.ДатаПоступления = ЭтотОбъект.ДатаПоступления;
		
		МассивТоваров = ЭтотОбъект.Товары.Выгрузить().ВыгрузитьКолонку("Номенклатура");
		ОбъектДокумента.ЗаписатьДатыПоставкиПоЗаказам();
		ОбъектДокумента.НаписатьПисьмоОбИзмененииДатыПоступления(МассивТоваров, ОбъектДокумента.Ссылка.ДатаПоступления, ЭтотОбъект.ДатаПоступления);
		ОбъектДокумента.СформироватьСообщенияОбИзмененииДатыПоступления(ОбъектДокумента.Ссылка.ДатаПоступления, ЭтотОбъект.ДатаПоступления);
		
		Попытка
		    ОбъектДокумента.Записать();
			Сообщить("В документе """ + ОбъектДокумента + """ дата поступления изменена на " + Формат(ЭтотОбъект.ДатаПоступления, "ДЛФ=Д"));
			
			//ОбъектДокумента.ЗаписатьДатыПоставкиПоЗаказам();
			
			//МассивТоваров = ЭтотОбъект.Товары.Выгрузить().ВыгрузитьКолонку("Номенклатура");
			//ОбъектДокумента.НаписатьПисьмоОбИзмененииДатыПоступления(МассивТоваров);
			//ОбъектДокумента.СформироватьСообщенияОбИзмененииДатыПоступления();
			
			Для Каждого СтрокаТЧ Из ОбъектДокумента.Предзаказы Цикл
				Если СтрокаТЧ.Документ = ЭтотОбъект.Ссылка
						ИЛИ СтрокаТЧ.Документ.ДатаПоступления = ЭтотОбъект.ДатаПоступления Тогда
					Продолжить;
				КонецЕсли;
				
				ОбъектПЗ = СтрокаТЧ.Документ.ПолучитьОбъект();
				ОбъектПЗ.ОбменДанными.Загрузка = Истина;
				мСтараяДатаПоступления = ОбъектПЗ.ДатаПоступления;
				ОбъектПЗ.ДатаПоступления = ЭтотОбъект.ДатаПоступления;
				Попытка
				    ОбъектПЗ.Записать();
					Сообщить("В документе """ + ОбъектПЗ + """ дата поступления изменена на " + Формат(ЭтотОбъект.ДатаПоступления, "ДЛФ=Д"));
					
					ЗаписатьИзменениеДатыПоступления(ОбъектПЗ.Ссылка, мСтараяДатаПоступления, ОбъектПЗ.Ссылка.ДатаПоступления);
					
				Исключение
					Сообщить(ОписаниеОшибки());
				КонецПопытки;
			КонецЦикла;
			
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры


Процедура ПриКопировании(ОбъектКопирования)
	
	ЭтотОбъект.ЗагруженИзАкцес 	= Ложь;
	ЭтотОбъект.Подготовлен 		= Ложь;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ЭтотОбъект.Организация.Пустая() Тогда
		
		ОргЛугДаПоле = Справочники.Организации.НайтиПоРеквизиту("ИНН", "7726660031");
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Дата"			, ЭтотОбъект.Дата);
		Запрос.УстановитьПараметр("Производитель"	, ЭтотОбъект.Поставщик);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПоставщикиОрганизацийСрезПоследних.Организация
		|ИЗ
		|	РегистрСведений.ПоставщикиОрганизаций.СрезПоследних(&Дата, Производитель = &Производитель) КАК ПоставщикиОрганизацийСрезПоследних";
					   
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЭтотОбъект.Организация = ?(ЗначениеЗаполнено(Выборка.Организация), Выборка.Организация, ОргЛугДаПоле);
		//Иначе
		//	ЭтотОбъект.Организация = ОргЛугДаПоле; //shae 2018.08.07 ИП-00019236 закомментировано, возможно надо будет вернуть	 
		КонецЕсли;
	КонецЕсли;	
	
	Если НЕ ЭтотОбъект.ПометкаУдаления Тогда
		
		ПроверитьПроизводителейТоваров(Отказ);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		ПроверитьВыведенаИзАссортимента();
		
	КонецЕсли;
	
	ПроверитьПерезаполнитьЗаказы();
	
	//++АК БЕЛН 19/01/2017
	Если НЕ ЭтотОбъект.ОбменДанными.Загрузка Тогда
		мСтатусВыведена 	= Перечисления.СтатусыАктивностиХарактеристик.Выведена;
		мСтатусНеактивная 	= Перечисления.СтатусыАктивностиХарактеристик.Неактивная;
		Если НЕ Отказ Тогда
			Для Каждого СтрокаТЧ Из ЭтотОбъект.Товары Цикл
				ТекСтатус = СтрокаТЧ.Характеристика.СтатусАктивностиХарактеристики;
				Если ТекСтатус = мСтатусВыведена
						ИЛИ ТекСтатус = мСтатусНеактивная Тогда
				//	// +++ АК tuta 2017.07.18 по заданию ИП-00015776
				//	Сообщить("В строке " + СтрокаТЧ.НомерСтроки + " выбрана характеристика со статусом """ + ТекСтатус + """");
				////	Сообщить("В строке " + СтрокаТЧ.НомерСтроки + " выбрана характеристика со статусом """ + ТекСтатус + """. Запись невозможна");
				////	Отказ = (НЕ СтрокаТЧ.Количество = 0);
				////	Если Отказ Тогда
				////		Прервать;
				////	КонецЕсли; 
				//	// -- АК tuta 2017.07.18
					// +++ АК tuta 2017.08.22 по заданию ИП-00016517
					Сообщить("В строке " + СтрокаТЧ.НомерСтроки + " выбрана характеристика со статусом """ + ТекСтатус + """. Запись невозможна");
					Отказ = (НЕ СтрокаТЧ.Количество = 0);
					Если Отказ Тогда
						Прервать;
					КонецЕсли; 
					// -- АК tuta 2017.08.22
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;
		Если НЕ Отказ Тогда
			Для Каждого СтрокаТЧ Из ЭтотОбъект.Товары Цикл
				Если СтрокаТЧ.Характеристика.Пустая() Тогда
					Продолжить;
				КонецЕсли;
				ТекСтатус = СтрокаТЧ.Характеристика.Статус;
				Если (ТекСтатус = Перечисления.СтатусыХарактеристик.НаВывод
							ИЛИ ТекСтатус = Перечисления.СтатусыХарактеристик.Приостановлена)
						И ЭтотОбъект.ДатаПоступления >= СтрокаТЧ.Характеристика.ДатаВывода
						И ЗначениеЗаполнено(СтрокаТЧ.Характеристика.ДатаВывода)
						И ЗначениеЗаполнено(СтрокаТЧ.Характеристика) Тогда
					// +++ АК tuta 2017.07.18 по заданию ИП-00015776
					Сообщить("В строке " + СтрокаТЧ.НомерСтроки + " выбрана характеристика со статусом """ + ТекСтатус +
								""". Дата поступления больше даты вывода характеристики");
				//	Сообщить("В строке " + СтрокаТЧ.НомерСтроки + " выбрана характеристика со статусом """ + ТекСтатус + """. Дата поступления больше даты вывода характеристики. Запись невозможна");
				//	Отказ = (НЕ СтрокаТЧ.Количество = 0);
				//	Если Отказ Тогда
				//		Прервать;
				//	КонецЕсли; 
					// -- АК tuta 2017.07.18
				КонецЕсли;	
			КонецЦикла;	
			
			//+++shae 2018.08.07 ИП-00019236  
			Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда 
				СкладыСервер.ПроверитьНаСоответствиеОрганизацииЗакупки(ЭтотОбъект.Организация, ЭтотОбъект.Товары.Выгрузить(), Отказ);	
			КонецЕсли;
			//---shae 2018.08.07 ИП-00019236  
				
		КонецЕсли;
		//--АК БЕЛН 19/01/2017
	КонецЕсли;
	
КонецПроцедуры

//+++АК SHEP 2017.11.13 ИП-00016064
Процедура ПроверитьРазрешённоеКоличествоЗаказа(Отказ)
	
	МВТ = Новый МенеджерВременныхТаблиц;
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТЧТовары.Номенклатура,
		|	ТЧТовары.Характеристика,
		|	ТЧТовары.Количество КАК Количество
		|ПОМЕСТИТЬ ВТТовары
		|ИЗ
		|	&ТЧТовары КАК ТЧТовары
		|ГДЕ
		|	ТЧТовары.Количество > 0");
	Запрос.УстановитьПараметр("ТЧТовары", Товары.Выгрузить(, "Номенклатура,Характеристика,Количество"));
	Запрос.МенеджерВременныхТаблиц = МВТ;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда Возврат; КонецЕсли;
	
	Отказ = НЕ Документы.ЗаказПоставщику.ПроверитьРазрешённоеКоличествоЗаказа(МВТ);
	
КонецПроцедуры

//+++ golv 16.05.2018 ИП-00018607 Проверки по Тилси
Процедура ПроверкиПоТилси(Отказ)				
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПредзаказТовары.Номенклатура,
	|	ПредзаказТовары.Характеристика,
	|	ЕСТЬNULL(КонтурEDI_СоответствияТоваров.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК НоменклатураEDI
	|ИЗ
	|	Документ.Предзаказ.Товары КАК ПредзаказТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтурEDI_СоответствияТоваров КАК КонтурEDI_СоответствияТоваров
	|		ПО ПредзаказТовары.Номенклатура = КонтурEDI_СоответствияТоваров.Номенклатура
	|			И ПредзаказТовары.Характеристика = КонтурEDI_СоответствияТоваров.ХарактеристикаНоменклатуры
	|ГДЕ
	|	ПредзаказТовары.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	РЗ = Запрос.Выполнить().Выбрать();
	Пока РЗ.Следующий() Цикл
		Если НЕ ЗначениеЗаполнено(РЗ.НоменклатураEDI) Тогда
			Отказ = Истина;
			Сообщить("Не заведен PLU для товара " + РЗ.Номенклатура + ", " + РЗ.Характеристика, СтатусСообщения.Внимание);
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПредзаказТовары.Номенклатура,
	|	ЕСТЬNULL(ЦеныРеализацииСрезПоследних.ЦенаБезНДС, 0) КАК ЦенаБезНДС
	|ИЗ
	|	Документ.Предзаказ.Товары КАК ПредзаказТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныРеализации.СрезПоследних(&ДатаДок, ) КАК ЦеныРеализацииСрезПоследних
	|		ПО (ПредзаказТовары.Номенклатура = ЦеныРеализацииСрезПоследних.Номенклатура
	|				И ЦеныРеализацииСрезПоследних.ЦенаБезНДС > 0)
	|ГДЕ
	|	ПредзаказТовары.Ссылка = &Ссылка");
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДатаДок", Дата);
	РЗ = Запрос.Выполнить().Выбрать();
	Пока РЗ.Следующий() Цикл
		Если НЕ ЗначениеЗаполнено(РЗ.ЦенаБезНДС) Тогда
			Отказ = Истина;
			Сообщить("Не задана цена реализации без НДС для товара " + РЗ.Номенклатура, СтатусСообщения.Внимание);
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)		
		
	Если НЕ Отказ Тогда
		
		ЗаписатьИзмененияТоваров();
		
	КонецЕсли;
	
	//+++АК Susk (Суслин К.В.) 2018.11.29 ИП-00020589
	Если НЕ Отказ Тогда ОбновитьДвиженияПоНеПолностьюНадежнымПоставщикам(Отказ) КонецЕсли;
	//---АК Susk (Суслин К.В.) 	 
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)

	//++АК Lobv 30/10/2016
	Попытка
		Документы.Предзаказ.СоздатьПриходныеОрдераПоПредзаказу(ЭтотОбъект.Ссылка);
	Исключение
		Сообщить("Не удалось скорректировать приходный ордер для виртуального склада по документу " + Строка(ЭтотОбъект.Ссылка));
	КонецПопытки; 
	//--AK
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	мСтатусВыведена 	= Перечисления.СтатусыАктивностиХарактеристик.Выведена;
	мСтатусНеактивная 	= Перечисления.СтатусыАктивностиХарактеристик.Неактивная;
	Для Каждого СтрокаТЧ Из ЭтотОбъект.Товары Цикл
		ТекСтатус = СтрокаТЧ.Характеристика.СтатусАктивностиХарактеристики;
		Если ТекСтатус = мСтатусВыведена
				ИЛИ ТекСтатус = мСтатусНеактивная Тогда
			//Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке " + СтрокаТЧ.НомерСтроки + " выбрана характеристика со статусом """ + ТекСтатус + """. Проведение невозможно");
			Отказ = (НЕ СтрокаТЧ.Количество = 0);
		КонецЕсли;	
	КонецЦикла;	
	
	//++АК БЕЛН 19/01/2017
	Для Каждого СтрокаТЧ Из ЭтотОбъект.Товары Цикл
		ТекСтатус = СтрокаТЧ.Характеристика.Статус;
		Если ЗначениеЗаполнено(СтрокаТЧ.Характеристика) Тогда
			Если (ТекСтатус = Перечисления.СтатусыХарактеристик.НаВывод
					ИЛИ ТекСтатус = Перечисления.СтатусыХарактеристик.Приостановлена) и ДатаПоступления>=СтрокаТЧ.Характеристика.ДатаВывода и ЗначениеЗаполнено(СтрокаТЧ.Характеристика.ДатаВывода) и ЗначениеЗаполнено(СтрокаТЧ.Характеристика)  Тогда
				//Отказ = Истина;
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В строке " + СтрокаТЧ.НомерСтроки + " выбрана характеристика со статусом """ + ТекСтатус + """. Дата поступления больше даты вывода характеристики. Проведение невозможно");
				Отказ = (НЕ СтрокаТЧ.Количество = 0);
			КонецЕсли;	
		КонецЕсли; 
	КонецЦикла;	
	
	
	//+++АК SHEP 20170307 ИП-00015092: Если в договоре контрагента галка "Есть оригинал договора" не проставлена, добавить запрет на размещение заказов этому поставщику
	Если РегистрыСведений.ПараметрыРаботыССоцСетями.ПолучитьЗначениеПараметра(, "ЗапретЗаказаПоставщикуБезОригиналаДог") = Истина Тогда
		Если Документы.ЗаказПоставщику.НетДоговоровПоставщикаСПолученнымОригиналом(ЭтотОбъект.Поставщик, ЭтотОбъект.Дата) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("У поставщика нет ни одного полученного оригинала договора. Размещение заказов будет запрещено!", ЭтотОбъект.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		ПроверитьРазрешённоеКоличествоЗаказа(Отказ);
	КонецЕсли;
	
	Если Организация = ОбщегоНазначенияПовтИсп.Тилси() Тогда
		ПроверкиПоТилси(Отказ);
	КонецЕсли;
	
	//+++АК KIRN 2018.04.16 ИП-00018240      
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	вт.НомерСтроки КАК НомерСтроки,
	               |	ВЫРАЗИТЬ(вт.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	               |	ВЫРАЗИТЬ(вт.ТорговаяТочка КАК Справочник.СтруктурныеЕдиницы) КАК ТорговаяТочка
	               |ПОМЕСТИТЬ втТЧ
	               |ИЗ
	               |	&тчТовары КАК вт
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПредзаказТовары.Номенклатура КАК Номенклатура,
	               |	ПредзаказТовары.Номенклатура.ТорговаяМарка.ОрганизацияЗакупки КАК ОрганизацияТМ,
				   |	ПредзаказТовары.НомерСтроки КАК НомерСтроки,
	               |	ПредзаказТовары.ТорговаяТочка,
	               |	ПредзаказТовары.Номенклатура.ТорговаяМарка,
	               |	ПредзаказТовары.ТорговаяТочка.ТипРозничнойТочки,
	               |	СоответствиеТиповРозничныхТочекИТорговыхМарок.ТорговаяМарка,
	               |	ПредзаказТовары.Номенклатура.Представление  КАК НоменклатураПредставление,
				   |	ПредзаказТовары.Номенклатура.ТорговаяМарка.ОрганизацияЗакупки.ПРедставление КАК ОрганизацияТМПредставление
	               |ИЗ
	               |	втТЧ КАК ПредзаказТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеТиповРозничныхТочекИТорговыхМарок КАК СоответствиеТиповРозничныхТочекИТорговыхМарок
	               |		ПО ПредзаказТовары.ТорговаяТочка.ТипРозничнойТочки = СоответствиеТиповРозничныхТочекИТорговыхМарок.ТипРозничнойТочки
	               |ГДЕ
				   |	ПредзаказТовары.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Товар)
				   //|	И ((ПредзаказТовары.Номенклатура.ТорговаяМарка.ОрганизацияЗакупки <> &Организация //shae 2018.08.07 ИП-00019236 перенесена проверка в процедуру ПередЗаписью
				   |			И ПредзаказТовары.Номенклатура.ТорговаяМарка <> СоответствиеТиповРозничныхТочекИТорговыхМарок.ТорговаяМарка";
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("тчТовары",Товары.Выгрузить());
	Выборка = Запрос.Выполнить().Выбрать();
	Пока ВЫборка.Следующий() Цикл
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя записать номенклатуру <" + Выборка.НоменклатураПредставление + "> с организацией ТМ <"+Выборка.ОрганизацияТМПредставление+">",,,, Отказ);
	КонецЦИкла;
	Если Отказ ТОгда
		Возврат;
	Конецесли;
	//---АК KIRN 

КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.11.29 ИП-00020589
Процедура ОбновитьДвиженияПоНеПолностьюНадежнымПоставщикам(Отказ) 
	
	СтруктураУсловий = Новый Структура;
	СтруктураУсловий.Вставить("Документ", Ссылка);
	
	Выборка = ОбщиеПроцедуры.ПолучитьВыборкуПоНеПолностьюНадежнымПоставщикам(СтруктураУсловий);
	
	УсловиеПоНоменклатуреВыполняется = ЕстьНоменклатураСПризнакомНескладируемый();
	
	Если Выборка.Следующий() Тогда
		Если Выборка.Контрагент <> Поставщик
			ИЛИ Выборка.ДатаС <> ДатаПоступления
			ИЛИ НЕ УсловиеПоНоменклатуреВыполняется Тогда
				УдалитьЗаписьПоНеПолностьюНадежнымПоставщикам(Выборка.Контрагент, Выборка.ДатаС, Отказ); //удаляем старое
				
				//Если также остались условия по номенклатуре, при которых пишем записи в регистр, то добавим измененное.
				//иначе смысла нет особого.
				Если УсловиеПоНоменклатуреВыполняется И ЭтоПервыйДокПоКонтрагенту() И НЕ Отказ Тогда 
					СоздатьЗаписьПоНеПолностьюНадежнымПоставщикам(Отказ); //добавляем измененное
				КонецЕсли;
		КонецЕсли;		
		
		Возврат; //уже была запись по данному документу, дальше смысла нет что-то проверять
		
	КонецЕсли;
		
	//а вот если не было записи, значит надо проверить - не новый ли это поставщик.
	Если УсловиеПоНоменклатуреВыполняется Тогда
		ПроверитьСоздатьЗаписьПоНеПолностьюНадежнымПоставщикам(Отказ);
	КонецЕсли;	
	
КонецПроцедуры
		
//+++АК Susk (Суслин К.В.) 2018.11.29 ИП-00020589
Процедура УдалитьЗаписьПоНеПолностьюНадежнымПоставщикам(Контрагент, ДатаС, Отказ)		
	
	ЗаписьРегистра = РегистрыСведений.НеПолностьюНадежныеПоставщики.СоздатьМенеджерЗаписи();
	ЗаписьРегистра.Контрагент = Контрагент;
	ЗаписьРегистра.ДатаС = ДатаС;
	ЗаписьРегистра.Прочитать();

	Если ЗаписьРегистра.Выбран() Тогда
		Попытка
			ЗаписьРегистра.Удалить();
		Исключение
			ОбщегоНазначения.СообщитьОбОшибке("Не удалось изменить запись по не полностью надежным поставщикам для данного документа!", Отказ);
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.11.29 ИП-00020589
Процедура СоздатьЗаписьПоНеПолностьюНадежнымПоставщикам(Отказ)
	
	ЗаписьРегистра = РегистрыСведений.НеПолностьюНадежныеПоставщики.СоздатьМенеджерЗаписи();
	ЗаписьРегистра.Контрагент = Поставщик;
	ЗаписьРегистра.ДатаС = ДатаПоступления;
	ЗаписьРегистра.Прочитать();
	
	Если НЕ ЗаписьРегистра.Выбран() Тогда
		ЗаписьРегистра.Контрагент = Поставщик;
		ЗаписьРегистра.ДатаС = ДатаПоступления;
		ЗаписьРегистра.ДатаПо = ДатаПоступления + 864000; // +10 дней
		ЗаписьРегистра.Причина = "Новый поставщик";
		ЗаписьРегистра.Автор = глЗначениеПеременной("глТекущийПользователь");
		ЗаписьРегистра.Документ = Ссылка;
		
		Попытка
			ЗаписьРегистра.Записать(Ложь);
		Исключение
			ОбщегоНазначения.СообщитьОбОшибке("Не удалось изменить запись по не полностью надежным поставщикам для данного документа!", Отказ);
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.11.29 ИП-00020589
Функция ЕстьНоменклатураСПризнакомНескладируемый()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПредзаказТовары.Номенклатура
	               |ИЗ
	               |	Документ.Предзаказ.Товары КАК ПредзаказТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураДокумента
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураРодитель
	               |				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураРодительРодитель
	               |				ПО НоменклатураРодитель.Родитель = НоменклатураРодительРодитель.Ссылка
	               |			ПО НоменклатураДокумента.Родитель = НоменклатураРодитель.Ссылка
	               |		ПО ПредзаказТовары.Номенклатура = НоменклатураДокумента.Ссылка
	               |ГДЕ
	               |	ПредзаказТовары.Ссылка = &Ссылка
	               |	И (НоменклатураРодитель.Ссылка = &Группа401
	               |			ИЛИ НоменклатураРодительРодитель.Ссылка = &Группа401
	               |			ИЛИ НоменклатураДокумента.ВидСкладируемости = ЗНАЧЕНИЕ(Перечисление.ВидыСкладируемостиТовара.Нескладируемый))
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПредзаказТовары.Номенклатура";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Группа401", ПолучитьНоменклатуру401()); 
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

//+++АК Susk (Суслин К.В.) 2018.11.29 ИП-00020589
Функция ПолучитьНоменклатуру401()
	
	СтрокаСоединения = СтрокаСоединенияИнформационнойБазы();
	ИмяБД = Сред(СтрокаСоединения,Найти(СтрокаСоединения, "Ref=") + 4);
	ИмяБД = СтрЗаменить(ИмяБД, ";"			, "");
	ИмяБД = СтрЗаменить(ИмяБД, Символ(34)	, "");
	ИмяБД = ?(ИмяБД = "IzbenkaFin", "Основная БД", ИмяБД);
	
	Если ИмяБД = "IzbenkaFin" Тогда
		Возврат Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор("4488f928-4b79-11e3-b5ab-005056a00106"));
	Иначе
		Возврат Справочники.Номенклатура.НайтиПоКоду("000000401");
	КонецЕсли;
	
КонецФункции

//+++АК Susk (Суслин К.В.) 2018.11.29 ИП-00020589
Процедура ПроверитьСоздатьЗаписьПоНеПолностьюНадежнымПоставщикам(Отказ)
	
	ЭтоПервыйДокПоПоставщику = ЭтоПервыйДокПоКонтрагенту();
	
	Если Не ЭтоПервыйДокПоПоставщику Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьЗаписьПоНеПолностьюНадежнымПоставщикам(Отказ);	
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.11.29 ИП-00020589
Функция ЭтоПервыйДокПоКонтрагенту() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Предзаказ.Ссылка
	               |ИЗ
	               |	Документ.Предзаказ КАК Предзаказ
	               |ГДЕ
	               |	Предзаказ.Ссылка <> &Ссылка
	               |	И Предзаказ.Проведен
	               |	И Предзаказ.Поставщик = &Поставщик";		   
	
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Возврат Запрос.Выполнить().Пустой();
				   
КонецФункции

