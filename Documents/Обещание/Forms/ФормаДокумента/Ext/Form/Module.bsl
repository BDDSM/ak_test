
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 08.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Обещание");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	ТекФизЛицо=ПараметрыСеанса.ТекущийПользователь.ФизЛицо;
	Запрос = Новый Запрос;
	Запрос.Текст =                                                                                   
	"ВЫБРАТЬ                                                   
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = (&Объект)
	|	И КонтактнаяИнформация.Тип = &Тип";
	
	Запрос.УстановитьПараметр("Объект", ТекФизЛицо);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	ЕмейлТекФизЛица="";
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ЕмейлТекФизЛица=ВыборкаДетальныеЗаписи.Представление;
	КонецЕсли;
	ТекОценка=Объект.Оценка;
	
	УстановитьСписок();
	НастроитьДоступностьОценки();
	
	
	Элементы.ДатаИсполнения.Доступность=Объект.Срочное;
	НовыйДок=Не ЗначениеЗаполнено(Объект.Ссылка);
	История.Отбор.Элементы[0].ПравоеЗначение=Объект.Ссылка;
	Элементы.ОбещаниеИсточник.АвтоОтметкаНезаполненного=ТипЗнч(Объект.Заказчик)<>Тип("СправочникСсылка.КорневыеЗаказчикиОбещаний");
	Если Не РольДоступна("ПолныеПрава") Тогда
		Если ТипЗнч(Объект.Заказчик)=Тип("СправочникСсылка.КорневыеЗаказчикиОбещаний") или ТипЗнч(Объект.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") Тогда
			Элементы.Заказчик.Доступность=Ложь;
			Если ТипЗнч(Объект.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") Тогда
				МасФЛ=ПолучитьФизЛицТипаРоли(Объект.Заказчик,ТекФизЛицо);
				Элементы.Статус.Доступность=МасФЛ.Найти(ТекФизЛицо)<>Неопределено;
			КонецЕсли;
		Иначе
			Элементы.Заказчик.ОграничениеТипа=Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица");
		КонецЕсли; 
		Если ТипЗнч(Объект.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") Тогда
			Элементы.Исполнитель.Доступность=Ложь;
		Иначе
			Элементы.Исполнитель.ОграничениеТипа=Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица");
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
			Объект.Заказчик=ТекФизЛицо;
		КонецЕсли;
		Элементы.Заказчик.ТолькоПросмотр=Истина;
	КонецЕсли;
	НастроитьКолонки();
	УстановитьВидимость();
	ТекСтатус=Объект.Статус;
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимость()
	

	
	Продавец=ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Продавец-консультант");
	СтаршийПродавец=ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Старший продавец-консультант");
	
	Элементы.ОбъектыПривязкиЗаказчик.Видимость=ТипЗнч(Объект.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") ;
	
	Элементы.Заказчики.Видимость=ТипЗнч(Объект.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя")
	и   (Не ТипЗнч(Объект.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя"))
	или  Объект.Исполнитель=ПланыВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники ИЛИ ИсполнительБезПривязки;
	//или  Объект.Исполнитель=ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Продавец-консультант");
	
	
	
	Элементы.ЗаказчикиЗаказчик.Видимость=ТипЗнч(Объект.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") 
	и  Не (ТипЗнч(Объект.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя")
	и Не Объект.Исполнитель=ПланыВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники И НЕ ИсполнительБезПривязки);
	
	//Элементы.ИсполнителиИсполнитель.Видимость=ТипЗнч(Объект.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") ;
	Элементы.ОбъектыПривязкиИсполнитель.Видимость=ТипЗнч(Объект.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") ;
	
	Элементы.Исполнители.Видимость=ТипЗнч(Объект.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя")
	И Не Объект.Исполнитель=ПланыВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники  И НЕ ИсполнительБезПривязки
	И Не Объект.Исполнитель=СтаршийПродавец
	И Не Объект.Исполнитель=Продавец
	;
	Если Объект.Номер="000000006" Тогда
		Элементы.Исполнители.ТолькоПросмотр=Ложь;		
	КонецЕсли; 
	
	Элементы.ЗаказчикиИсполнитель.Видимость=(Объект.Исполнитель=ПланыВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники  ИЛИ ИсполнительБезПривязки ИЛИ
	Объект.Исполнитель=Продавец	ИЛИ	Объект.Исполнитель=СтаршийПродавец);
	
	Элементы.ЗаказчикиДата.Видимость=(Объект.Заказчик=ПланыВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники  ИЛИ
	Объект.Заказчик=Продавец	ИЛИ	Объект.Заказчик=СтаршийПродавец) И ЭтоПродавец();
	//
	//Если Объект.Исполнитель=Продавец ИЛИ
	//	Объект.Заказчик=Продавец Тогда
	//	Элементы.Исполнители.Видимость=Ложь;
	//Иначе	
	//	Элементы.Исполнители.Видимость=Истина;
	
	//КонецЕсли; 
	
	Если Не ЕстьПолныеПрава() Тогда
		Элементы.ЗаказчикиИсполнитель.ТолькоПросмотр=Истина;
		//Элементы.ИсполнителиИсполнитель.ТолькоПросмотр=Истина;
		Элементы.ОбъектыПривязкиИсполнитель.ТолькоПросмотр=Истина;
		
		Если ТипЗнч(Объект.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") 
			и Не Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники") И НЕ ИсполнительБезПривязки
			И Не(Объект.Заказчик)=ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Продавец-консультант")
			И НЕ (Объект.Заказчик)=ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Старший продавец-консультант")Тогда
			МасФЛ=ПолучитьФизЛицТипаРоли(Объект.Заказчик,ТекФизЛицо);
			Если МасФЛ.Количество()>0 Тогда
				Если МасФЛ[0]=ТекФизЛицо Тогда
					Элементы.ЗаказчикиИсполнитель.ТолькоПросмотр=Ложь;
					
					//Элементы.ИсполнителиИсполнитель.ТолькоПросмотр=Ложь;
					Элементы.ОбъектыПривязкиИсполнитель.ТолькоПросмотр=Ложь;
				КонецЕсли; 
			КонецЕсли;
		ИначеЕсли ((Объект.Заказчик)=ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Продавец-консультант")
			ИЛИ  (Объект.Заказчик)=ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Старший продавец-консультант")) И РольДоступна("Продавец") Тогда
			Элементы.ЗаказчикиИсполнитель.ТолькоПросмотр=Ложь;
			
			Элементы.ОбъектыПривязкиИсполнитель.ТолькоПросмотр=Ложь;
		ИначеЕсли ТипЗнч(Объект.Заказчик)=Тип("СправочникСсылка.КорневыеЗаказчикиОбещаний") Тогда
			Элементы.ЗаказчикиИсполнитель.ТолькоПросмотр=Объект.Заказчик.Сотрудники.Найти(ТекФизЛицо)=Неопределено;
			//Элементы.ИсполнителиИсполнитель.ТолькоПросмотр=Объект.Заказчик.Сотрудники.Найти(ТекФизЛицо)=Неопределено;
			Элементы.ОбъектыПривязкиИсполнитель.ТолькоПросмотр=Объект.Заказчик.Сотрудники.Найти(ТекФизЛицо)=Неопределено;
		КонецЕсли;
		Если ТекФизЛицо=Объект.Заказчик Тогда
			Элементы.ЗаказчикиИсполнитель.ТолькоПросмотр=Ложь;
			
			//Элементы.ИсполнителиИсполнитель.ТолькоПросмотр=Ложь;
			Элементы.ОбъектыПривязкиИсполнитель.ТолькоПросмотр=Ложь;
		КонецЕсли;
		Если Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники") ИЛИ ИсполнительБезПривязки Тогда
			Элементы.ЗаказчикиИсполнитель.ТолькоПросмотр=Ложь;
			
			//Элементы.ИсполнителиИсполнитель.ТолькоПросмотр=Ложь;
			Элементы.ОбъектыПривязкиИсполнитель.ТолькоПросмотр=Ложь;
		КонецЕсли; 
		//Элементы.ЗаказчикиИсполнитель.ТолькоПросмотр=Ложь;
		//Элементы.ИсполнителиИсполнитель.ТолькоПросмотр=Ложь;
		//Если ТипЗнч(Объект.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя")Тогда
		//	Элементы.ЗаказчикиИсполнитель.ТолькоПросмотр=Истина;
		//	Элементы.ИсполнителиИсполнитель.ТолькоПросмотр=Истина;
		//КонецЕсли;
		
		Элементы.ЗаказчикиЗаказчик.ТолькоПросмотр=Ложь;
		//Элементы.ИсполнителиЗаказчик.ТолькоПросмотр=Ложь;
		Элементы.ОбъектыПривязкиЗаказчик.ТолькоПросмотр=Ложь;
		
		Если (ТипЗнч(Объект.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя")
			ИЛИ ТипЗнч(Объект.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя"))
			И НЕ (РольДоступна("Продавец") И ((Объект.Заказчик)=ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Продавец-консультант")
			ИЛИ (Объект.Заказчик)=ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Старший продавец-консультант")
			ИЛИ Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники")  ИЛИ ИсполнительБезПривязки))
			Тогда
			Элементы.ЗаказчикиЗаказчик.ТолькоПросмотр=Истина;
			//Элементы.ИсполнителиЗаказчик.ТолькоПросмотр=Истина;
			Элементы.ОбъектыПривязкиЗаказчик.ТолькоПросмотр=Истина;
		КонецЕсли;
		//Если Элементы.ИсполнителиОценка.Доступность=Ложь и Элементы.ИсполнителиИсполнитель.ТолькоПросмотр и Элементы.ИсполнителиЗаказчик.ТолькоПросмотр  Тогда
		//	Элементы.Исполнители.ТолькоПросмотр=Истина;
		//КонецЕсли; 
		Если Элементы.ЗаказчикиОценка.Доступность=Ложь и Элементы.ЗаказчикиИсполнитель.ТолькоПросмотр и Элементы.ЗаказчикиЗаказчик.ТолькоПросмотр  Тогда
			Элементы.Заказчики.ТолькоПросмотр=Истина;
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура НастроитьДоступностьОценки()
	Элементы.Оценка.Доступность=Истина;
	Элементы.Обещание.Доступность=Истина;
	Элементы.ОбъектыПривязкиОценка.Доступность=Истина;
	Элементы.ОбъектыПривязки.ТолькоПросмотр=Ложь;
	Если Не Объект.Заказчик=ПланыВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники Тогда
		Если Не РольДоступна("ПолныеПрава") Тогда
			Если ТипЗнч(Объект.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") Тогда
				МасФЛ=ПолучитьФизЛицТипаРоли(Объект.Заказчик,ТекФизЛицо);
				//Элементы.ОбъектыПривязкиОценка.Доступность=МасФЛ.Найти(ТекФизЛицо)<>Неопределено;
				Элементы.ИсполнителиОценка.Доступность=МасФЛ.Найти(ТекФизЛицо)<>Неопределено;
				Элементы.ЗаказчикиОценка.Доступность=(МасФЛ.Найти(ТекФизЛицо)<>Неопределено ИЛИ ((Объект.Заказчик=ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Старший продавец-консультант")
				ИЛИ Объект.Заказчик=ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Продавец-консультант")) И РольДоступна("Продавец")));
				
				Элементы.Оценка.Доступность=МасФЛ.Найти(ТекФизЛицо)<>Неопределено;
				Элементы.Обещание.Доступность=МасФЛ.Найти(ТекФизЛицо)<>Неопределено;
				Элементы.ОбъектыПривязки.ТолькоПросмотр=Не МасФЛ.Найти(ТекФизЛицо)<>Неопределено И НЕ ((Объект.Заказчик=ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Старший продавец-консультант")
				ИЛИ Объект.Заказчик=ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Продавец-консультант")) И РольДоступна("Продавец"));
			ИначеЕсли ТипЗнч(Объект.Заказчик)=Тип("СправочникСсылка.КорневыеЗаказчикиОбещаний") Тогда
				Элементы.ИсполнителиОценка.Доступность=Объект.Заказчик.Сотрудники.Найти(ТекФизЛицо)<>Неопределено;
				Элементы.ЗаказчикиОценка.Доступность=Объект.Заказчик.Сотрудники.Найти(ТекФизЛицо)<>Неопределено;
				Элементы.Оценка.Доступность=Объект.Заказчик.Сотрудники.Найти(ТекФизЛицо)<>Неопределено;
				Элементы.Обещание.Доступность=Объект.Заказчик.Сотрудники.Найти(ТекФизЛицо)<>Неопределено;
				Элементы.ОбъектыПривязки.ТолькоПросмотр=Не Объект.Заказчик.Сотрудники.Найти(ТекФизЛицо)<>Неопределено;
			Иначе
				//Элементы.ОбъектыПривязкиОценка.Доступность=Объект.Заказчик=ТекФизЛицо;
				Элементы.ИсполнителиОценка.Доступность=Объект.Заказчик=ТекФизЛицо;
				Элементы.ЗаказчикиОценка.Доступность=Объект.Заказчик=ТекФизЛицо;
				Элементы.Оценка.Доступность=(ТекФизЛицо=Объект.Заказчик);
				Элементы.Обещание.Доступность=ТекФизЛицо=Объект.Заказчик;
				Элементы.ОбъектыПривязки.ТолькоПросмотр=Не ТекФизЛицо=Объект.Заказчик;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 
	Если Элементы.Оценка.Доступность Тогда
		Элементы.Оценка.Доступность= ?((ТипЗнч(Объект.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя")) 
		ИЛИ ТипЗнч(Объект.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя"),Ложь,Истина);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура НастроитьКолонки()
	ИсполнительБезПривязки=Ложь;
	Если ТипЗнч(Объект.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СоответствиеОбъектРольСрезПоследних.Объект
			|ИЗ
			|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних";
		
		Запрос.УстановитьПараметр("ТипРоли", Объект.Исполнитель);
		
		РезультатЗапроса = Запрос.Выполнить();
		ИсполнительБезПривязки=РезультатЗапроса.Пустой()  И НЕ Объект.Исполнитель=ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Старший продавец-консультант")
		И НЕ Объект.Исполнитель=ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Продавец-консультант");
		
	
	КонецЕсли; 	
	
	Элементы.ОбъектыПривязки.Видимость=Истина;
	Элементы.ОбъектыПривязкиНоменклатура.Видимость=Истина;
	Элементы.ОбъектыПривязкиХарактеристика.Видимость=Истина;
	Элементы.ОбъектыПривязкиСтруктурнаяЕдиница.Видимость=Истина;
	Элементы.ОбъектыПривязкиТехнолог.Видимость=Истина;
	Элементы.ОбъектыПривязкиДата.Видимость=Истина;
	Если ЗначениеЗаполнено(Объект.Исполнитель) и ТипЗнч(Объект.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") 
		и Не Объект.Исполнитель=ПланыВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники И НЕ ИсполнительБезПривязки Тогда
		
		ОбДок=РеквизитФормыВЗначение("Объект");
		Если ОбДок.Номер= "000000006" Тогда 
			Элементы.ОбъектыПривязки.Видимость=Ложь;
		ИначеЕсли (ОбДок.Исполнитель.ТипЗначения.СодержитТип(Тип("СправочникСсылка.Номенклатура")) 
			или ОбДок.Исполнитель.ТипЗначения.СодержитТип(Тип("СправочникСсылка.ХарактеристикиНоменклатуры")))
			и Не ОбДок.Исполнитель.ТипЗначения.СодержитТип(Тип("СправочникСсылка.РолиПользователей"))   Тогда
			Элементы.ОбъектыПривязкиСтруктурнаяЕдиница.Видимость=Ложь;
			Элементы.ОбъектыПривязкиТехнолог.Видимость=Ложь;
			Элементы.ОбъектыПривязкиДата.Видимость=Ложь;
		ИначеЕсли ОбДок.Исполнитель.ТипЗначения.СодержитТип(Тип("СправочникСсылка.СтруктурныеЕдиницы")) Тогда
			Элементы.ОбъектыПривязкиНоменклатура.Видимость=Ложь;
			Элементы.ОбъектыПривязкиХарактеристика.Видимость=Ложь;
			Элементы.ОбъектыПривязкиТехнолог.Видимость=Ложь;
			Элементы.ОбъектыПривязкиДата.Видимость=Объект.Исполнитель=ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Старший продавец-консультант")
			ИЛИ Объект.Исполнитель=ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Продавец-консультант");
			//Элементы.ОбъектыПривязки.Видимость=Объект.Исполнитель<>ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Продавец-консультант");
		ИначеЕсли  ОбДок.Исполнитель.ТипЗначения.СодержитТип(Тип("СправочникСсылка.РолиПользователей")) Тогда
			Элементы.ОбъектыПривязкиНоменклатура.Видимость=Ложь;
			Элементы.ОбъектыПривязкиХарактеристика.Видимость=Ложь;
			Элементы.ОбъектыПривязкиСтруктурнаяЕдиница.Видимость=Ложь;
			Элементы.ОбъектыПривязкиДата.Видимость=Ложь;
		Иначе
			Элементы.ОбъектыПривязки.Видимость=Ложь;
		КонецЕсли;
	Иначе
		Элементы.ОбъектыПривязки.Видимость=Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СрочноеПриИзменении(Элемент)
	Элементы.ДатаИсполнения.Доступность=Объект.Срочное;
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Не Отказ и (Объект.Обещание<>Объект.Ссылка.Обещание или Объект.Заказчик<>Объект.Ссылка.Заказчик 
		или Объект.Исполнитель<>Объект.Ссылка.Исполнитель или Объект.Срочное<>Объект.Ссылка.Срочное или Объект.ДатаИсполнения<>Объект.Ссылка.ДатаИсполнения
		или Объект.Оценка<>Объект.Ссылка.Оценка)
		и ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ДокИзменен=Истина;
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ОтправитьПисьмоПоставщикуСервер()
	СтруктураНовогоПисьма = Новый Структура;
	СтруктураНовогоПисьма.Вставить("ВидТекста", Перечисления.ВидыТекстовЭлектронныхПисем.Текст);
	СписокФайловВложений = Новый СписокЗначений;
	
	СтруктураНовогоПисьма.Вставить("Тема", "Создано "+Строка(Объект.Ссылка)+" заказчиком "+Строка(Объект.Заказчик)+" для исполнителя "+Строка(Объект.Исполнитель)+".");
	//Для каждого Стр Из Объект.ПрикрепленныеФайлы Цикл
	//	СписокФайловВложений.Добавить(Новый Структура("ИмяФайла",  Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(Стр.Файл)));
	//КонецЦикла; 
	СтруктураНовогоПисьма.Вставить("СписокФайловВложений", СписокФайловВложений);
	Кому = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст =                                                                                   
	"ВЫБРАТЬ                                                   
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект в (&Объект)
	|	И КонтактнаяИнформация.Тип = &Тип";
	МассивАдресов=Новый Массив;
	Если ТипЗнч(Объект.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") Тогда
		МасФЛ=ПолучитьФизЛицТипаРоли(Объект.Заказчик,ТекФизЛицо,истина);
		Для каждого Эл Из МасФЛ Цикл
			МассивАдресов.Добавить(Эл);
		КонецЦикла; 
	Иначе	
		МассивАдресов.Добавить(Объект.Заказчик);
	КонецЕсли;
	Если Объект.Заказчик=ПланыВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники Тогда
		Для каждого Стр Из Объект.Заказчики Цикл
			МассивАдресов.Добавить(Стр.Заказчик);
		КонецЦикла; 
	КонецЕсли; 
	
	
	Если ТипЗнч(Объект.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") Тогда
		МасФЛ=ПолучитьФизЛицТипаРоли(Объект.Исполнитель,ТекФизЛицо,истина);
		Для каждого Эл Из МасФЛ Цикл
			МассивАдресов.Добавить(Эл);
		КонецЦикла; 
		
	Иначе	
		МассивАдресов.Добавить(Объект.Исполнитель);
	КонецЕсли;
	
	Если Объект.Исполнитель=ПланыВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники Тогда
		Для каждого Стр Из Объект.Заказчики Цикл
			МассивАдресов.Добавить(Стр.Исполнитель);
		КонецЦикла; 
	КонецЕсли; 
	
	
	Запрос.УстановитьПараметр("Объект", МассивАдресов);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если Кому.НайтиПоЗначению(ВыборкаДетальныеЗаписи.Представление)=Неопределено Тогда
				Кому.Добавить(ВыборкаДетальныеЗаписи.Представление);
			КонецЕсли; 
		КонецЦикла;
	Иначе
		Кому.Добавить("sp@vkusvill.ru");
	КонецЕсли; 
	//Запрос = Новый Запрос;
	//Запрос.Текст =                                                                                   
	//"ВЫБРАТЬ                                                   
	//|	КонтактнаяИнформация.Представление
	//|ИЗ
	//|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	//|ГДЕ
	//|	КонтактнаяИнформация.Объект = (&Объект)
	//|	И КонтактнаяИнформация.Тип = &Тип";
	//
	//Запрос.УстановитьПараметр("Объект", ТекФизЛицо);
	//Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	//Результат = Запрос.Выполнить();
	//ВыборкаДетальныеЗаписи = Результат.Выбрать();
	//ЕмейлТекФизЛица="";
	//Если ВыборкаДетальныеЗаписи.Следующий() Тогда
	//	ЕмейлТекФизЛица=ВыборкаДетальныеЗаписи.Представление;
	//КонецЕсли; 
	//
	
	СтруктураНовогоПисьма.Вставить("Кому", Кому);
	СтруктураНовогоПисьма.Вставить("Тело","Создано "+Строка(Объект.Ссылка)+"
	|Заказчик - "+Объект.Заказчик+"
	|Исполнитель - "+Объект.Исполнитель+?(Объект.Срочное,"
	|Дата исполнения - " +Формат(Объект.ДатаИсполнения,"ДФ=dd.MM.yyyy"),"")+ "
	|Статус - "+Объект.Статус+"
	|Оценка - "+Объект.Оценка+"
	|Содержание - "+Объект.Обещание+"
	|Автор изменения - "+ТекФизЛицо+" "+ЕмейлТекФизЛица);
	СтрКому="";
	Для каждого Эл Из Кому Цикл
		СтрКому=СтрКому+Эл.Значение+"; ";
	КонецЦикла; 
	Попытка
		Документы.Обещание.ОтправитьПисьмоПоПочте(СтруктураНовогоПисьма);
		Сообщить("Отправлено письмо с информацией о созданном обещании на "+СтрКому);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
	//УдалитьФайлы(КаталогВременныхФайлов()+"Акт сверки и заказы.epf");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьФизЛицТипаРоли(ТипРоли,ТекФизЛицо,ВесьСписок=Ложь)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РолиПользователейСоставРоли.Сотрудник,
	|	РолиПользователейСоставРоли.Сотрудник.Наименование КАК СотрудникНаименование
	|ИЗ
	|	Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(, ТипРоли = &ТипРоли) КАК РолиПользователейТипыРолей
	|		ПО РолиПользователейСоставРоли.Ссылка = РолиПользователейТипыРолей.РольПользователя
	|			И (ВЫБОР
	|				КОГДА РолиПользователейТипыРолей.Объект ССЫЛКА Справочник.ХарактеристикиНоменклатуры
	|					ТОГДА НЕ РолиПользователейТипыРолей.Объект.Неактивная
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.ТипыРолей КАК РолиПользователейТипыРолей1
	|		ПО (РолиПользователейСоставРоли.Ссылка = РолиПользователейТипыРолей1.Ссылка
	|				И РолиПользователейТипыРолей1.ТипРоли = &ТипРоли)
	|ГДЕ
	|	НЕ РолиПользователейСоставРоли.Ссылка.ПометкаУдаления
	|	И ВЫБОР
	|			КОГДА &ФлПолныйСписок
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ РолиПользователейСоставРоли.Сотрудник = &ТекФизЛицо
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	СотрудникНаименование";
	
	ФлПолныйСписок=РольДоступна("ПолныеПрава") Или ВесьСписок;
	
	Запрос.УстановитьПараметр("ТипРоли", ТипРоли);
	Запрос.УстановитьПараметр("ФлПолныйСписок", ФлПолныйСписок);
	Запрос.УстановитьПараметр("ТекФизЛицо", ТекФизЛицо);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	МасФЛ=Новый Массив;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МасФЛ.Добавить(ВыборкаДетальныеЗаписи.Сотрудник);
	КонецЦикла;
	Возврат МасФЛ;
КонецФункции // ()

&НаСервере
Процедура ОтправитьПисьмоПоставщикуОбИзмененияхСервер(ОбъектОбещания)
	СтруктураНовогоПисьма = Новый Структура;
	СтруктураНовогоПисьма.Вставить("ВидТекста", Перечисления.ВидыТекстовЭлектронныхПисем.Текст);
	СписокФайловВложений = Новый СписокЗначений;
	
	СтруктураНовогоПисьма.Вставить("Тема", "Изменено "+Строка(ОбъектОбещания.Ссылка)+" заказчик - "+Строка(ОбъектОбещания.Заказчик)+" для исполнителя "+Строка(ОбъектОбещания.Исполнитель)+".");
	//Для каждого Стр Из Объект.ПрикрепленныеФайлы Цикл
	//	СписокФайловВложений.Добавить(Новый Структура("ИмяФайла",  Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(Стр.Файл)));
	//КонецЦикла; 
	СтруктураНовогоПисьма.Вставить("СписокФайловВложений", СписокФайловВложений);
	Кому = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст =                                                                                   
	"ВЫБРАТЬ                                                   
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект в (&Объект)
	|	И КонтактнаяИнформация.Тип = &Тип";
	МассивАдресов=Новый Массив;
	Если ТипЗнч(ОбъектОбещания.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") Тогда
		//Если ТипЗнч(ОбъектОбещания.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") Тогда
		//	Если ОбъектОбещания.Исполнитель=ПланыВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники Тогда
		//		Для каждого Стр Из ОбъектОбещания.Заказчики Цикл
		//			Если Стр.Оценка<>Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется  И ЗначениеЗаполнено(Стр.Заказчик)  Тогда
		//				МассивАдресов.Добавить(Стр.Заказчик);
		//			КонецЕсли; 
		//		КонецЦикла; 
		//	Иначе
		//		//МасФЛ=ПолучитьФизЛицТипаРоли(ОбъектОбещания.Заказчик,ТекФизЛицо,истина);
		//		//Для каждого Эл Из МасФЛ Цикл
		//		//	МассивАдресов.Добавить(Эл);
		//		//КонецЦикла;
		//		Для каждого Стр Из ОбъектОбещания.ОбъектыПривязки Цикл
		//			Если Стр.Оценка<>Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется И ЗначениеЗаполнено(Стр.Заказчик) Тогда
		//				МассивАдресов.Добавить(Стр.Заказчик);
		//			КонецЕсли; 
		//		КонецЦикла; 
		//		
		//	КонецЕсли;
		//Иначе
		//	Для каждого Стр Из ОбъектОбещания.Заказчики Цикл
		//		Если Стр.Оценка<>Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется И ЗначениеЗаполнено(Стр.Заказчик) Тогда
		//			МассивАдресов.Добавить(Стр.Заказчик);
		//		КонецЕсли; 
		//	КонецЦикла; 
		//КонецЕсли;
		МасФЛ=ПолучитьФизЛицТипаРоли(ОбъектОбещания.Заказчик,ТекФизЛицо,истина);
		Для каждого Эл Из МасФЛ Цикл
			МассивАдресов.Добавить(Эл);
		КонецЦикла; 
		
	Иначе	
		МассивАдресов.Добавить(ОбъектОбещания.Заказчик);
	КонецЕсли;
	Если ОбъектОбещания.Заказчик=ПланыВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники Тогда
		Для каждого Стр Из ОбъектОбещания.Заказчики Цикл
			Если Стр.Оценка<>Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется Тогда
				МассивАдресов.Добавить(Стр.Заказчик);
			КонецЕсли; 
		КонецЦикла; 
	КонецЕсли; 
	
	
	Если ТипЗнч(ОбъектОбещания.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") Тогда
		МасФЛ=ПолучитьФизЛицТипаРоли(ОбъектОбещания.Исполнитель,ТекФизЛицо,истина);
		Для каждого Эл Из МасФЛ Цикл
			МассивАдресов.Добавить(Эл);
		КонецЦикла; 
	Иначе	
		МассивАдресов.Добавить(ОбъектОбещания.Исполнитель);
	КонецЕсли;
	
	Если ОбъектОбещания.Исполнитель=ПланыВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники Тогда
		Для каждого Стр Из ОбъектОбещания.Заказчики Цикл
			МассивАдресов.Добавить(Стр.Исполнитель);
		КонецЦикла; 
	КонецЕсли; 
	Запрос.УстановитьПараметр("Объект", МассивАдресов);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если Кому.НайтиПоЗначению(ВыборкаДетальныеЗаписи.Представление)=Неопределено Тогда
				Кому.Добавить(ВыборкаДетальныеЗаписи.Представление);
			КонецЕсли; 
		КонецЦикла;
	Иначе
		Кому.Добавить("sp@vkusvill.ru");
	КонецЕсли; 
	//Запрос = Новый Запрос;
	//Запрос.Текст =                                                                                   
	//"ВЫБРАТЬ                                                   
	//|	КонтактнаяИнформация.Представление
	//|ИЗ
	//|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	//|ГДЕ
	//|	КонтактнаяИнформация.Объект = (&Объект)
	//|	И КонтактнаяИнформация.Тип = &Тип";
	//
	//Запрос.УстановитьПараметр("Объект", ТекФизЛицо);
	//Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	//Результат = Запрос.Выполнить();
	//ВыборкаДетальныеЗаписи = Результат.Выбрать();
	//ЕмейлТекФизЛица="";
	//Если ВыборкаДетальныеЗаписи.Следующий() Тогда
	//	ЕмейлТекФизЛица=ВыборкаДетальныеЗаписи.Представление;
	//КонецЕсли; 
	
	СтруктураНовогоПисьма.Вставить("Кому", Кому);
	СтруктураНовогоПисьма.Вставить("Тело","Изменено "+Строка(ОбъектОбещания.Ссылка)+"
	|Заказчик - "+ОбъектОбещания.Заказчик+"
	|Исполнитель - "+ОбъектОбещания.Исполнитель+?(ОбъектОбещания.Срочное,"
	|Дата исполнения - " +Формат(ОбъектОбещания.ДатаИсполнения,"ДФ=dd.MM.yyyy"),"")+ "
	|Статус - "+ОбъектОбещания.Статус+"
	|Оценка - "+ОбъектОбещания.Оценка+"
	|Содержание - "+ОбъектОбещания.Обещание+"
	|Автор изменения - "+ТекФизЛицо+" "+ЕмейлТекФизЛица);
	СтрКому="";
	Для каждого Эл Из Кому Цикл
		СтрКому=СтрКому+Эл.Значение+"; ";
	КонецЦикла; 
	Попытка
		Документы.Обещание.ОтправитьПисьмоПоПочте(СтруктураНовогоПисьма);
		Сообщить("Отправлено письмо с информацией об измененном обещании на "+СтрКому);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
	//УдалитьФайлы(КаталогВременныхФайлов()+"Акт сверки и заказы.epf");
КонецПроцедуры

&НаСервере
Процедура ОтправитьПисьмоОбИндивилуальныхОценках(ОбъектОбещания,ФизЛицо)
	СтруктураНовогоПисьма = Новый Структура;
	СтруктураНовогоПисьма.Вставить("ВидТекста", Перечисления.ВидыТекстовЭлектронныхПисем.Текст);
	СписокФайловВложений = Новый СписокЗначений;
	
	СтруктураНовогоПисьма.Вставить("Тема", "Изменена оценка "+Строка(ОбъектОбещания.Ссылка)+" заказчик - "+Строка(ОбъектОбещания.Заказчик)+" для исполнителя "+Строка(ФизЛицо)+".");
	//Для каждого Стр Из Объект.ПрикрепленныеФайлы Цикл
	//	СписокФайловВложений.Добавить(Новый Структура("ИмяФайла",  Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(Стр.Файл)));
	//КонецЦикла; 
	СтруктураНовогоПисьма.Вставить("СписокФайловВложений", СписокФайловВложений);
	Кому = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст =                                                                                   
	"ВЫБРАТЬ                                                   
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект в (&Объект)
	|	И КонтактнаяИнформация.Тип = &Тип";
	ТЗАдресатов=ТЗОценки.Выгрузить();
	ТЗАдресатов.Свернуть("ФизЛицо");
	МассивАдресов=Новый Массив;
	МассивАдресов.Добавить(ФизЛицо);	
	МассивАдресов.Добавить(ПараметрыСеанса.ТекущийПользователь.ФизЛицо);	
	
	Запрос.УстановитьПараметр("Объект", МассивАдресов);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если Кому.НайтиПоЗначению(ВыборкаДетальныеЗаписи.Представление)=Неопределено Тогда
				Кому.Добавить(ВыборкаДетальныеЗаписи.Представление);
			КонецЕсли; 
		КонецЦикла;
	Иначе
		Кому.Добавить("sp@vkusvill.ru");
	КонецЕсли; 
	
	ОценкаФЛ="";
	МасСтр=ОбъектОбещания.Заказчики.НайтиСтроки(Новый Структура("Исполнитель",ФизЛицо));
	Если МасСтр.Количество()>0 Тогда
		ОценкаФЛ=МасСтр[0].Оценка;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ОценкаФЛ) Тогда
		МасСтр=ОбъектОбещания.Исполнители.НайтиСтроки(Новый Структура("Исполнитель",ФизЛицо));
		Если МасСтр.Количество()>0 Тогда
			ОценкаФЛ=МасСтр[0].Оценка;
		КонецЕсли;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ОценкаФЛ) Тогда
		ОценкаФЛ=ОбъектОбещания.Оценка;	
	КонецЕсли;
	
	ДопСообщение="";
	Если (ОценкаФЛ=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется или ОценкаФЛ=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется) И
		НЕ Объект.Исполнитель=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники") Тогда
		ТЗОц=Объект.ОбъектыПривязки.НайтиСтроки(Новый Структура("Исполнитель",ФизЛицо));
		
		ДопСообщение="Причина:
		|";
		Для каждого ЭлМасСтр Из ТЗОц Цикл
			ДопСообщение=ДопСообщение+"
			|"+ЭлМасСтр.ДатаИзменения+" "+ЭлМасСтр.СтруктурнаяЕдиница+" "+ЭлМасСтр.Технолог+" "+ЭлМасСтр.Номенклатура+" "+ЭлМасСтр.Характеристика+" оценен "+ЭлМасСтр.Заказчик+" - "+Строка(ЭлМасСтр.Оценка);
		КонецЦикла; 
	КонецЕсли; 
	
	
	СтруктураНовогоПисьма.Вставить("Кому", Кому);
	СтруктураНовогоПисьма.Вставить("Тело","Изменена оценка "+Строка(ОбъектОбещания.Ссылка)+"
	|Заказчик - "+ОбъектОбещания.Заказчик+"
	|Исполнитель - "+ФизЛицо+?(ОбъектОбещания.Срочное,"
	|Дата исполнения - " +Формат(ОбъектОбещания.ДатаИсполнения,"ДФ=dd.MM.yyyy"),"")+ "
	|Статус - "+ОбъектОбещания.Статус+"
	|Оценка - "+ОценкаФЛ+"
	|"+ОбъектОбещания.Обещание+"
	|Автор изменения - "+ТекФизЛицо+" "+ЕмейлТекФизЛица+
	"
	|"+ДопСообщение);
	
	СтрКому="";
	Для каждого Эл Из Кому Цикл
		СтрКому=СтрКому+Эл.Значение+"; ";
	КонецЦикла; 
	Попытка
		Документы.Обещание.ОтправитьПисьмоПоПочте(СтруктураНовогоПисьма);
		Сообщить("Отправлено письмо с информацией об измененной оценке на "+СтрКому);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
	//УдалитьФайлы(КаталогВременныхФайлов()+"Акт сверки и заказы.epf");
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	История.Отбор.Элементы[0].ПравоеЗначение=Объект.Ссылка;
	Если НовыйДок Тогда
		ОтправитьПисьмоПоставщикуСервер();
		НовыйДок=Ложь;
	ИначеЕсли ДокИзменен Тогда
		ЭтоОбещание=РеквизитФормыВЗначение("Объект");
		ОтправитьПисьмоПоставщикуОбИзмененияхСервер(ЭтоОбещание);
		ДокИзменен=Ложь;
	КонецЕсли;
	Если Не ТекСтатус=Объект.Статус и Объект.Статус=Перечисления.СтатусОбещания.СнятоеОбещание Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДокОбещание.Ссылка
		|ИЗ
		|	Документ.Обещание КАК ДокОбещание
		|ГДЕ
		|	(ДокОбещание.ОбещаниеИсточник = &Ссылка
		|			ИЛИ ДокОбещание.ОбещаниеИсточник.ОбещаниеИсточник = &Ссылка
		|			ИЛИ ДокОбещание.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник = &Ссылка
		|			ИЛИ ДокОбещание.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник = &Ссылка
		|			ИЛИ ДокОбещание.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник = &Ссылка
		|			ИЛИ ДокОбещание.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник = &Ссылка
		|			ИЛИ ДокОбещание.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник = &Ссылка
		|			ИЛИ ДокОбещание.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник.ОбещаниеИсточник = &Ссылка
		|)";
		
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		
		Результат = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		
		
		Сообщить("Изменены статусы подчиненных обещаний");
		Сообщить("Будут отправлены письма об изменении статуса подчиненных обещаний");
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ОбъектОбещания=ВыборкаДетальныеЗаписи.ссылка.ПолучитьОбъект();
			ОбъектОбещания.Статус=Перечисления.СтатусОбещания.СнятоеОбещание;
			Сообщить("Изменен статус "+ВыборкаДетальныеЗаписи.ссылка);
			
			ОбъектОбещания.Записать();
			ОтправитьПисьмоПоставщикуОбИзмененияхСервер(ОбъектОбещания);
		КонецЦикла;
	КонецЕсли;
	ЭтоОбещание=РеквизитФормыВЗначение("Объект").Ссылка;
	ИзменитьЗаказчикаВПодчиненныхОбещаниях(ЭтоОбещание);
	
	ТекСтатус=Объект.Статус;
	ТЗАдресатов=ТЗОценки.Выгрузить();
	ТЗАдресатов.Свернуть("ФизЛицо");
	МассивАдресов=ТЗАдресатов.ВыгрузитьКолонку("ФизЛицо");
	Для каждого Эл Из МассивАдресов Цикл
		ОтправитьПисьмоОбИндивилуальныхОценках(Объект,Эл);
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ИзменитьЗаказчикаВПодчиненныхОбещаниях(СсылкаГлав)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокОбещание.Ссылка,
	|	ДокОбещание.Заказчик,
	|	ДокОбещание.Исполнитель
	|ИЗ
	|	Документ.Обещание КАК ДокОбещание
	|ГДЕ
	|	ДокОбещание.ОбещаниеИсточник = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаГлав);
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если Объект.Исполнитель<>ВыборкаДетальныеЗаписи.Заказчик И ВыборкаДетальныеЗаписи.Ссылка<>Объект.Ссылка Тогда
			ОбъектОбещания=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			ОбъектОбещания.Заказчик=СсылкаГлав.Исполнитель;
			ОбъектОбещания.Записать();
			Сообщить("Изменен заказчик "+ВыборкаДетальныеЗаписи.ссылка);
			ОтправитьПисьмоПоставщикуОбИзмененияхСервер(ОбъектОбещания);
		КонецЕсли; 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаказчикПриИзменении(Элемент)
	НеАктивизироватьСтроку=Истина;
	Если Не ЗначениеЗаполнено(Объект.Заказчик) Тогда
		Возврат;	
	КонецЕсли; 
	Для каждого стр Из Объект.Исполнители Цикл
		Стр.Заказчик=Неопределено;
	КонецЦикла;
	Объект.Заказчики.Очистить();
	Элементы.Статус.СписокВыбора.Очистить();
	УстановитьСписок();
	НастроитьДоступностьОценки();
	
	//Элементы.ИсполнителиЗаказчик.Видимость=ТипЗнч(Объект.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя");
	//Элементы.Заказчики.Видимость=ТипЗнч(Объект.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") и  Не ТипЗнч(Объект.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя");
	УстановитьВидимость();
	СформироватьСписокЗаказчиков();
	Элементы.ОбещаниеИсточник.АвтоОтметкаНезаполненного=ТипЗнч(Объект.Заказчик)<>Тип("СправочникСсылка.КорневыеЗаказчикиОбещаний");
	Если ТипЗнч(Объект.Заказчик)<>Тип("СправочникСсылка.КорневыеЗаказчикиОбещаний") и ЗначениеЗаполнено(Объект.ОбещаниеИсточник) Тогда
		Если Вопрос("Изменить исполнителя в обещании-источнике?", РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да Тогда
			ИзменитьИсполнителяВВышестоящемОбещании();
		Иначе	
			Объект.ОбещаниеИсточник=Неопределено;
			Сообщить("Очищено обещание-источник");
		КонецЕсли;
	Иначе
		Объект.ОбещаниеИсточник=Неопределено;
		Сообщить("Очищено обещание-источник");
	КонецЕсли; 
	НеАктивизироватьСтроку=Ложь;
КонецПроцедуры

&НаСервере
Процедура ИзменитьИсполнителяВВышестоящемОбещании()
	Записать(Новый Структура("РежимЗаписи",РежимЗаписиДокумента.Запись));
	ВерхнееОбещание=РеквизитФормыВЗначение("Объект").ОбещаниеИсточник;
	ОбъектОбещания=ВерхнееОбещание.ПолучитьОбъект();
	ОбъектОбещания.Исполнитель=Объект.Заказчик;
	Сообщить("Изменен исполнитель  "+ВерхнееОбещание);
	ОбъектОбещания.Записать();
	ОтправитьПисьмоПоставщикуОбИзмененияхСервер(ОбъектОбещания);
	ИзменитьЗаказчикаВПодчиненныхОбещаниях(ВерхнееОбещание);
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)
	НеАктивизироватьСтроку=Истина;
	Элементы.Статус.СписокВыбора.Очистить();
	УстановитьСписок();
	Объект.ОбъектыПривязки.Очистить();
	Объект.Исполнители.Очистить();
	
	НастроитьКолонки();
	НастроитьДоступностьОценки();
	//Элементы.ОбъектыПривязкиИсполнитель.Видимость=ТипЗнч(Объект.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя");
	//Элементы.Исполнители.Видимость=ТипЗнч(Объект.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") ;
	УстановитьВидимость();
	//Если Элементы.ОбъектыПривязки.ТекущиеДанные<>Неопределено Тогда
	СформироватьСписокИсполнителей();
	//КонецЕсли; 
	НеАктивизироватьСтроку=Ложь;
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокСтаршихПродавцов(ТорговаяТочка,Дата,Фл=Неопределено)
	ТТ= ТорговаяТочка;
	Если Не ЗначениеЗаполнено(ТТ) Тогда
		ТТ=ПараметрыСеанса.ТорговаяТочкаПоАйпи;	
	КонецЕсли; 
	
	Если Фл=Неопределено Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ Различные
		|	ТабельРаботыПродавцов.Сотрудник
		|ИЗ
		|	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
		|ГДЕ
		|	ТабельРаботыПродавцов.ТорговаяТочка = &ТорговаяТочка
		|	И ТабельРаботыПродавцов.Период МЕЖДУ &Дата1 И &Дата2
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ Различные
		|	ТабельРаботыКассиров.Сотрудник
		|ИЗ
		|	РегистрСведений.ТабельРаботыКассиров КАК ТабельРаботыКассиров
		|ГДЕ
		|	ТабельРаботыКассиров.ТорговаяТочка = &ТорговаяТочка
		|	И ТабельРаботыКассиров.Период МЕЖДУ &Дата1 И &Дата2
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ Различные
		|	ТабельРаботыГрузчиков.Сотрудник
		|ИЗ
		|	РегистрСведений.ТабельРаботыГрузчиков КАК ТабельРаботыГрузчиков
		|ГДЕ
		|	ТабельРаботыГрузчиков.ТорговаяТочка = &ТорговаяТочка
		|	И ТабельРаботыГрузчиков.Период МЕЖДУ &Дата1 И &Дата2
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ Различные
		|	ТабельРаботыПромоутеров.Сотрудник
		|ИЗ
		|	РегистрСведений.ТабельРаботыПромоутеров КАК ТабельРаботыПромоутеров
		|ГДЕ
		|	ТабельРаботыПромоутеров.ТорговаяТочка = &ТорговаяТочка
		|	И ТабельРаботыПромоутеров.Период МЕЖДУ &Дата1 И &Дата2";
	ИначеЕсли Фл=Истина Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ Различные
		|	ТабельРаботыПродавцов.Сотрудник
		|ИЗ
		|	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
		|ГДЕ
		|	ТабельРаботыПродавцов.ТорговаяТочка = &ТорговаяТочка
		|	И ТабельРаботыПродавцов.Период МЕЖДУ &Дата1 И &Дата2
		|	И ТабельРаботыПродавцов.СвойствоПродавца = 2";
	ИначеЕсли Фл=Ложь Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ Различные
		|	ТабельРаботыПродавцов.Сотрудник
		|ИЗ
		|	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
		|ГДЕ
		|	ТабельРаботыПродавцов.ТорговаяТочка = &ТорговаяТочка
		|	И ТабельРаботыПродавцов.Период МЕЖДУ &Дата1 И &Дата2
		|	И ТабельРаботыПродавцов.СвойствоПродавца <> 2";
		
	КонецЕсли; 
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	МАКСИМУМ(ЛистУчета.Дата) КАК Дата
	//	|ПОМЕСТИТЬ вт
	//	|ИЗ
	//	|	Документ.ЛистУчета КАК ЛистУчета
	//	|ГДЕ
	//	|	ЛистУчета.Проведен
	//	|	И ЛистУчета.Дата МЕЖДУ &Дата1 И &Дата2
	//	|	И ЛистУчета.ТорговаяТочка = &ТорговаяТочка
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ЛистУчетаПродавцы.Продавец как Сотрудник
	//	|ИЗ
	//	|	Документ.ЛистУчета.Продавцы КАК ЛистУчетаПродавцы
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт КАК вт
	//	|		ПО ЛистУчетаПродавцы.Ссылка.Дата = вт.Дата
	//	|ГДЕ
	//	|	ЛистУчетаПродавцы.Ссылка.ТорговаяТочка = &ТорговаяТочка";
	
	Запрос.УстановитьПараметр("Дата1", НачалоДня(?(ЗначениеЗаполнено(Дата),Дата,ТекущаяДата())-24*60*60));
	Запрос.УстановитьПараметр("Дата2", КонецДня(?(ЗначениеЗаполнено(Дата),Дата,ТекущаяДата())));
	Запрос.УстановитьПараметр("ТорговаяТочка", ТТ);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	МасФЛ=Новый Массив;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МасФЛ.Добавить(ВыборкаДетальныеЗаписи.Сотрудник);
	КонецЦикла;
	Возврат МасФЛ;
КонецФункции // ()


&НаКлиенте
Процедура СформироватьСписокИсполнителей()
	//Элементы.ИсполнителиИсполнитель.РежимВыбораИзСписка=Истина;
	//Элементы.ИсполнителиИсполнитель.КнопкаВыбора=Ложь;
	//Элементы.ИсполнителиИсполнитель.КнопкаСпискаВыбора=Истина;
	//Элементы.ИсполнителиИсполнитель.СписокВыбора.Очистить();
	НеАктивизироватьСтроку=Истина;
	Если Элементы.ОбъектыПривязки.ТекущиеДанные=Неопределено Тогда
		Если ИсполнительБезПривязки ИЛИ Объект.Номер="000000006" Тогда
			Элементы.ЗаказчикиИсполнитель.РежимВыбораИзСписка=Истина;
			Элементы.ЗаказчикиИсполнитель.КнопкаВыбора=Ложь;
			Элементы.ЗаказчикиИсполнитель.КнопкаСпискаВыбора=Истина;
			Элементы.ЗаказчикиИсполнитель.СписокВыбора.Очистить();
			МасФЛ=ПолучитьФизЛицТипаРоли(Объект.Исполнитель,ТекФизЛицо);
			Элементы.ЗаказчикиИсполнитель.СписокВыбора.ЗагрузитьЗначения(МасФЛ);
			
			Элементы.ИсполнителиИсполнитель.РежимВыбораИзСписка=Истина;
			Элементы.ИсполнителиИсполнитель.КнопкаВыбора=Ложь;
			Элементы.ИсполнителиИсполнитель.КнопкаСпискаВыбора=Истина;
			Элементы.ИсполнителиИсполнитель.СписокВыбора.Очистить();
			Элементы.ИсполнителиИсполнитель.СписокВыбора.ЗагрузитьЗначения(МасФЛ);
		Иначе	
			Элементы.ИсполнителиИсполнитель.РежимВыбораИзСписка=Ложь;
			Элементы.ИсполнителиИсполнитель.КнопкаВыбора=Истина;
			Элементы.ИсполнителиИсполнитель.КнопкаСпискаВыбора=Ложь;
			
			Элементы.ЗаказчикиИсполнитель.РежимВыбораИзСписка=Ложь;
			Элементы.ЗаказчикиИсполнитель.КнопкаВыбора=Истина;
			Элементы.ЗаказчикиИсполнитель.КнопкаСпискаВыбора=Ложь;
		КонецЕсли; 
		
		Возврат;	
	КонецЕсли; 
	
	Элементы.ОбъектыПривязкиИсполнитель.РежимВыбораИзСписка=Истина;
	Элементы.ОбъектыПривязкиИсполнитель.КнопкаВыбора=Ложь;
	Элементы.ОбъектыПривязкиИсполнитель.КнопкаСпискаВыбора=Истина;
	Элементы.ОбъектыПривязкиИсполнитель.СписокВыбора.Очистить();
	
	
	Если ЗначениеЗаполнено(Элементы.ОбъектыПривязки.ТекущиеДанные.Номенклатура) или ЗначениеЗаполнено(Элементы.ОбъектыПривязки.ТекущиеДанные.Характеристика) 
		или ЗначениеЗаполнено(Элементы.ОбъектыПривязки.ТекущиеДанные.СтруктурнаяЕдиница) или ЗначениеЗаполнено(Элементы.ОбъектыПривязки.ТекущиеДанные.Технолог) Тогда
		Если (ТипЗнч(Объект.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя")
			И НЕ Объект.Исполнитель=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники")) 
			ИЛИ (Объект.Исполнитель=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники") И  ЭтоПродавец())
			//и Не Строка(Объект.Исполнитель)="Продавец-консультант" 
			Тогда
			
			Элементы.ОбъектыПривязкиИсполнитель.РежимВыбораИзСписка=Истина;
			Элементы.ОбъектыПривязкиИсполнитель.КнопкаВыбора=Ложь;
			Элементы.ОбъектыПривязкиИсполнитель.КнопкаСпискаВыбора=Истина;
			Если Строка(Объект.Исполнитель)="Старший продавец-консультант" Тогда
				МасФЛ=ПолучитьСписокСтаршихПродавцов(Элементы.ОбъектыПривязки.ТекущиеДанные.СтруктурнаяЕдиница,Элементы.ОбъектыПривязки.ТекущиеДанные.Дата,Истина);
			ИначеЕсли Строка(Объект.Исполнитель)="Продавец-консультант" Тогда
				МасФЛ=ПолучитьСписокСтаршихПродавцов(Элементы.ОбъектыПривязки.ТекущиеДанные.СтруктурнаяЕдиница,Элементы.ОбъектыПривязки.ТекущиеДанные.Дата,Ложь);
			ИначеЕсли Объект.Исполнитель=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники") Тогда
				МасФЛ=ПолучитьСписокСтаршихПродавцов(Элементы.ОбъектыПривязки.ТекущиеДанные.СтруктурнаяЕдиница,Элементы.ОбъектыПривязки.ТекущиеДанные.Дата);
			Иначе	
				МасФЛ=ОбщегоНазначенияСервер.ПолучитьФизЛицТипаРолиИсполнителя(Объект.Исполнитель,Элементы.ОбъектыПривязки.ТекущиеДанные.Номенклатура,
				Элементы.ОбъектыПривязки.ТекущиеДанные.Характеристика,Элементы.ОбъектыПривязки.ТекущиеДанные.СтруктурнаяЕдиница,Элементы.ОбъектыПривязки.ТекущиеДанные.Технолог,
				ТекущаяДата(),ТекФизЛицо,Истина);
			КонецЕсли; 
			
			
			Элементы.ОбъектыПривязкиИсполнитель.СписокВыбора.ЗагрузитьЗначения(МасФЛ);
		КонецЕсли; 
	КонецЕсли;
	Если Объект.Исполнитель=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники") И Не ЭтоПродавец()
		//	ИЛИ Строка(Объект.Исполнитель)="Продавец-консультант" 
		Тогда
		//	
		Элементы.ОбъектыпривязкиИсполнитель.РежимВыбораИзСписка=Ложь;
		Элементы.ОбъектыпривязкиИсполнитель.КнопкаВыбора=Истина;
		Элементы.ОбъектыпривязкиИсполнитель.КнопкаСпискаВыбора=Ложь;
	КонецЕсли; 
	НеАктивизироватьСтроку=Ложь;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоПродавец()
	Возврат РольДоступна("Продавец");
КонецФункции // ()


&НаКлиенте
Процедура СформироватьСписокЗаказчиков()
	НеАктивизироватьСтроку=Истина;
	//Элементы.ИсполнителиЗаказчик.РежимВыбораИзСписка=Ложь;
	//Элементы.ИсполнителиЗаказчик.КнопкаВыбора=Истина;
	//Элементы.ИсполнителиЗаказчик.КнопкаСпискаВыбора=Ложь;
	//Элементы.ИсполнителиЗаказчик.СписокВыбора.Очистить();
	
	Элементы.ОбъектыПривязкиЗаказчик.РежимВыбораИзСписка=Ложь;
	Элементы.ОбъектыПривязкиЗаказчик.КнопкаВыбора=Истина;
	Элементы.ОбъектыПривязкиЗаказчик.КнопкаСпискаВыбора=Ложь;
	Элементы.ОбъектыПривязкиЗаказчик.СписокВыбора.Очистить();
	
	Если ТипЗнч(Объект.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя")
		и Не Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники")  
		и Не Строка(Объект.Заказчик)="Продавец-консультант" и Не Строка(Объект.Исполнитель)="Старший продавец-консультант"
		Тогда
		//Элементы.ИсполнителиЗаказчик.РежимВыбораИзСписка=Истина;
		//Элементы.ИсполнителиЗаказчик.КнопкаВыбора=Ложь;
		//Элементы.ИсполнителиЗаказчик.КнопкаСпискаВыбора=Истина;
		//МасФЛ=ПолучитьФизЛицТипаРоли(Объект.Заказчик,ТекФизЛицо);
		//Элементы.ИсполнителиЗаказчик.СписокВыбора.ЗагрузитьЗначения(МасФЛ);
		
		Элементы.ОбъектыПривязкиЗаказчик.РежимВыбораИзСписка=Истина;
		Элементы.ОбъектыПривязкиЗаказчик.КнопкаВыбора=Ложь;
		Элементы.ОбъектыПривязкиЗаказчик.КнопкаСпискаВыбора=Истина;
		МасФЛ=ПолучитьФизЛицТипаРоли(Объект.Заказчик,ТекФизЛицо);
		Элементы.ОбъектыПривязкиЗаказчик.СписокВыбора.ЗагрузитьЗначения(МасФЛ);
		
	КонецЕсли; 
	Если (Строка(Объект.Заказчик)=("Продавец-консультант")
		ИЛИ Строка(Объект.Заказчик)=("Старший продавец-консультант")
		ИЛИ Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники") И ЭтоПродавец()
		)
		И НЕ Элементы.ОбъектыПривязки.ТекущиеДанные =Неопределено Тогда
		Если Строка(Объект.Заказчик)="Старший продавец-консультант" Тогда
			МасФЛ=ПолучитьСписокСтаршихПродавцов(Элементы.ОбъектыПривязки.ТекущиеДанные.СтруктурнаяЕдиница,Элементы.ОбъектыПривязки.ТекущиеДанные.Дата,Истина);
		ИначеЕсли Строка(Объект.Заказчик)="Продавец-консультант" Тогда
			МасФЛ=ПолучитьСписокСтаршихПродавцов(Элементы.ОбъектыПривязки.ТекущиеДанные.СтруктурнаяЕдиница,Элементы.ОбъектыПривязки.ТекущиеДанные.Дата,Ложь);
		ИначеЕсли Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники")Тогда
			МасФЛ=ПолучитьСписокСтаршихПродавцов(Неопределено,Элементы.ОбъектыПривязки.ТекущиеДанные.Дата);
		КонецЕсли;
		
		
		Элементы.ОбъектыПривязкиЗаказчик.РежимВыбораИзСписка=Истина;
		Элементы.ОбъектыПривязкиЗаказчик.КнопкаВыбора=Ложь;
		Элементы.ОбъектыПривязкиЗаказчик.КнопкаСпискаВыбора=Истина;
		Элементы.ОбъектыПривязкиЗаказчик.СписокВыбора.ЗагрузитьЗначения(МасФЛ);
		
	КонецЕсли; 
	
	
	
	
	
	Элементы.ЗаказчикиЗаказчик.РежимВыбораИзСписка=Ложь;
	Элементы.ЗаказчикиЗаказчик.КнопкаВыбора=Истина;
	Элементы.ЗаказчикиЗаказчик.КнопкаСпискаВыбора=Ложь;
	Элементы.ЗаказчикиЗаказчик.СписокВыбора.Очистить();
	Если ТипЗнч(Объект.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя")
		и Не Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники")
		и Не Строка(Объект.Заказчик)="Продавец-консультант" и Не Строка(Объект.Заказчик)="Старший продавец-консультант" 
		Тогда
		Элементы.ЗаказчикиЗаказчик.РежимВыбораИзСписка=Истина;
		Элементы.ЗаказчикиЗаказчик.КнопкаВыбора=Ложь;
		Элементы.ЗаказчикиЗаказчик.КнопкаСпискаВыбора=Истина;
		//МасФЛ=ПолучитьФизЛицТипаРоли(Объект.Заказчик,ТекФизЛицо);
		Элементы.ЗаказчикиЗаказчик.СписокВыбора.ЗагрузитьЗначения(МасФЛ);
	КонецЕсли; 
	
	Если (Строка(Объект.Заказчик)=("Продавец-консультант")
		ИЛИ Строка(Объект.Заказчик)=("Старший продавец-консультант") ИЛИ Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники"))
		И НЕ Элементы.Заказчики.ТекущиеДанные =Неопределено И ЭтоПродавец()
		Тогда
		Если Строка(Объект.Заказчик)="Старший продавец-консультант" Тогда
			МасФЛ=ПолучитьСписокСтаршихПродавцов(Неопределено,Элементы.Заказчики.ТекущиеДанные.Дата,Истина);
		ИначеЕсли Строка(Объект.Заказчик)="Продавец-консультант" Тогда
			МасФЛ=ПолучитьСписокСтаршихПродавцов(Неопределено,Элементы.Заказчики.ТекущиеДанные.Дата,Ложь);
		ИначеЕсли Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники")Тогда
			МасФЛ=ПолучитьСписокСтаршихПродавцов(Неопределено,Элементы.Заказчики.ТекущиеДанные.Дата);
		КонецЕсли;
		
		Элементы.ЗаказчикиЗаказчик.РежимВыбораИзСписка=Истина;
		Элементы.ЗаказчикиЗаказчик.КнопкаВыбора=Ложь;
		Элементы.ЗаказчикиЗаказчик.КнопкаСпискаВыбора=Истина;
		Элементы.ЗаказчикиЗаказчик.СписокВыбора.ЗагрузитьЗначения(МасФЛ);
	КонецЕсли; 
	
	НеАктивизироватьСтроку=Ложь;
КонецПроцедуры

&НаСервере
Процедура УстановитьСписок()
	Элементы.Статус.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусОбещания.ЗапросОбещания"));
	Если Не РольДоступна("ПолныеПрава") Тогда
		Если ТипЗнч(Объект.Заказчик)=Тип("СправочникСсылка.ФизическиеЛица") Тогда
			Если ТекФизЛицо=Объект.Заказчик Тогда
				Элементы.Статус.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусОбещания.СнятоеОбещание"));
			КонецЕсли;
		ИначеЕсли ТипЗнч(Объект.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") Тогда
			МасФЛ=ПолучитьФизЛицТипаРоли(Объект.Заказчик,ТекФизЛицо);
			Если МасФЛ.Найти(ТекФизЛицо)<>Неопределено Тогда
				Элементы.Статус.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусОбещания.СнятоеОбещание"));
			КонецЕсли;
		Иначе
			//Если РольДоступна("ПолныеПрава") Тогда
			//	Элементы.Статус.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусОбещания.СнятоеОбещание"));
			//КонецЕсли; 
		КонецЕсли;
		Если ТипЗнч(Объект.Исполнитель)=Тип("СправочникСсылка.ФизическиеЛица") Тогда
			Если ТекФизЛицо=Объект.Исполнитель Тогда
				Элементы.Статус.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусОбещания.ДостигнутаяДоговоренность"));
			КонецЕсли;
		ИначеЕсли ТипЗнч(Объект.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") Тогда
			МасФЛ=ПолучитьФизЛицТипаРоли(Объект.Исполнитель,ТекФизЛицо);
			Если МасФЛ.Найти(ТекФизЛицо)<>Неопределено Тогда
				Элементы.Статус.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусОбещания.ДостигнутаяДоговоренность"));
			КонецЕсли;
		КонецЕсли;
	Иначе
		Элементы.Статус.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусОбещания.СнятоеОбещание"));
		Элементы.Статус.СписокВыбора.Добавить(ПредопределенноеЗначение("Перечисление.СтатусОбещания.ДостигнутаяДоговоренность"));
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОбещаниеПриИзменении(Элемент)
	Объект.Статус=ПредопределенноеЗначение("Перечисление.СтатусОбещания.ЗапросОбещания");
КонецПроцедуры

&НаКлиенте
Процедура ОбещаниеИсточникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	СтрукОтб=Новый Структура("Исполнитель, ПометкаУдаления",Объект.Заказчик,Ложь);
	Если ТипЗнч(Объект.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") Тогда
		Парам=Новый Структура("РежимВыбора,Заказчик",Истина,Объект.Заказчик);       
		ОткрытьФорму("Документ.Обещание.ФормаВыбора",Парам,Элемент);
	Иначе	
		Парам=Новый Структура("Отбор, РежимВыбора",СтрукОтб,Истина);       
		ОткрытьФорму("Документ.Обещание.ФормаВыбора",Парам,Элемент);
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ЗаписатьЕмейл(Текст)
	Мен=РегистрыСведений.КонтактнаяИнформация.СоздатьМенеджерЗаписи();
	Мен.Объект=ТекФизЛицо;
	Мен.Вид=Справочники.ВидыКонтактнойИнформации.EmailФизЛица;
	Мен.Тип=Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
	Мен.Представление=Текст;
	Мен.Записать();
КонецПроцедуры
 


&НаКлиенте
Процедура ОбъектыПривязкиОценкаПриИзменении(Элемент)
	Если НЕ ЗначениеЗаполнено(ЕмейлТекФизЛица) Тогда
		Текст = "";
		Подсказка = "Введите свой е-мейл";
		Если ВвестиСтроку(Текст, Подсказка, 0, Истина) Тогда
			Попытка
				ЗаписатьЕмейл(Текст);
				ЕмейлТекФизЛица=Текст;
			Исключение
				Элементы.ОбъектыПривязки.ТекущиеДанные.Оценка=ТекОценка;
				Возврат;
			КонецПопытки; 	
		Иначе
			Элементы.ОбъектыПривязки.ТекущиеДанные.Оценка=ТекОценка;
			Возврат;
		КонецЕсли;
		
	
	КонецЕсли; 
	Элементы.ОбъектыПривязки.ТекущиеДанные.Динамика=ПолучитьДинамикуОценки(ТекОценка,Элементы.ОбъектыПривязки.ТекущиеДанные.Оценка);
	ТекОценка=Элементы.ОбъектыПривязки.ТекущиеДанные.Оценка;
	Если ЗначениеЗаполнено(Элементы.ОбъектыПривязки.ТекущиеДанные.Исполнитель) Тогда
		Элементы.ОбъектыПривязки.ТекущиеДанные.ДатаИзменения= ТекущаяДата();
	КонецЕсли;
	ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(Элементы.ОбъектыПривязки.ТекущиеДанные.Исполнитель);
	ОбъектыПривязкиОценкаПриИзмененииСервер();
	ДобавитьАдресат(Элементы.ОбъектыПривязки.ТекущиеДанные.Исполнитель);
КонецПроцедуры

&НаСервере
Функция ПолучитьДинамикуОценки(Оценка1,Оценка2)
	Возврат Документы.Обещание.ПолучитьДинамикуОценки(Оценка1,Оценка2)
КонецФункции // ()
 

&НаСервере
Процедура ОбъектыПривязкиОценкаПриИзмененииСервер()
	ТЗ=Объект.Исполнители.Выгрузить();
	ТЗ.Свернуть("Оценка");
	Если ТЗ.Количество()=1 Тогда
		Оценка=ТЗ[0].Оценка;
	ИначеЕсли ТЗ.Количество()=0 Тогда
		Оценка=Неопределено;
	Иначе	
		Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
	КонецЕсли;
	Объект.Динамика=ПолучитьДинамикуОценки(Объект.Оценка,Оценка);
	Объект.Оценка=Оценка;
	
	Объект.ДатаИзменения=ТекущаяДата();
КонецПроцедуры

&НаСервере
Процедура ОбъектыПривязкиЗаказчикиОценкаПриИзмененииСервер()
	ТЗ=Объект.Заказчики.Выгрузить();
	ТЗ.Свернуть("Оценка");
	Если ТЗ.Количество()=1 Тогда
		Оценка=ТЗ[0].Оценка;
	ИначеЕсли ТЗ.Количество()=0 Тогда
		Оценка=Неопределено;
	Иначе	
		Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
	КонецЕсли;
	
	Объект.Динамика=ПолучитьДинамикуОценки(Объект.Оценка,Оценка);
	Объект.Оценка=Оценка;	
	Объект.ДатаИзменения=ТекущаяДата();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФорум(Команда)
	Парам=Новый Структура("НачальноеОбещание",Объект.Ссылка);
	ОткрытьФорму("РегистрСведений.ФорумПоОбещаниям.ФормаСписка",Парам);
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПривязкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ=Истина;
	НеАктивизироватьСтроку=Истина;
	Стр=Объект.ОбъектыПривязки.Добавить();
	Если Копирование И Элементы.ОбъектыПривязки.ТекущиеДанные<>Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Стр,Элементы.ОбъектыПривязки.ТекущиеДанные);
	КонецЕсли; 
	ОбъектыПривязкиПередНачаломДобавленияСервер();
	Элементы.ОбъектыПривязки.ТекущаяСтрока=Объект.ОбъектыПривязки[Объект.ОбъектыПривязки.Количество()-1].ПолучитьИдентификатор();
	ЗаполнитьИсполнителяЗаказчика();
	//Если (Строка(Объект.Заказчик)=("Продавец-консультант")
	//		ИЛИ Строка(Объект.Заказчик)=("Старший продавец-консультант")
	//		ИЛИ Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники")) Тогда
	//	СформироватьСписокЗаказчиков();
	//КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбъектыПривязкиПередНачаломДобавленияСервер()
	Если ЗначениеЗаполнено(ПараметрыСеанса.ТорговаяТочкаПоАйпи) и РольДоступна("Продавец") Тогда
		Объект.ОбъектыПривязки[Объект.ОбъектыПривязки.Количество()-1].СтруктурнаяЕдиница=ПараметрыСеанса.ТорговаяТочкаПоАйпи;	
	КонецЕсли; 
КонецПроцедуры


&НаКлиенте
Процедура ОбъектыПривязкиПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные<>Неопределено Тогда
		//	ОтборСтрок = Новый Структура;
		//	ОтборСтрок.Вставить("УИН_Строки", Элемент.ТекущиеДанные.УИН_Строки);
		//	Элементы.Исполнители.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрок);
		//	
		//	СформироватьСписокИсполнителей();
		//КонецЕсли; 
		ТекИсполнитель=Элементы.ОбъектыПривязки.ТекущиеДанные.Исполнитель;
		ТекОценка=Элементы.ОбъектыПривязки.ТекущиеДанные.Оценка;

		
		Если Не НеАктивизироватьСтроку  Тогда
			СформироватьСписокИсполнителей();
			Если (Строка(Объект.Заказчик)=("Продавец-консультант")
				ИЛИ Строка(Объект.Заказчик)=("Старший продавец-консультант")
				ИЛИ Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники") ) Тогда
				СформироватьСписокЗаказчиков();
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПривязкиПередУдалением(Элемент, Отказ)
	МасСтрИсп=Объект.ОбъектыПривязки.НайтиСтроки(Новый Структура("Исполнитель",Элементы.ОбъектыПривязки.ТекущиеДанные.Исполнитель));
	Если МасСтрИсп.Количество()=1 Тогда
		Кол=Объект.Исполнители.Количество()-1;
		Для Сч=0 По Кол Цикл
			//Если Объект.Исполнители[Кол-Сч].УИН_Строки=Элементы.ОбъектыПривязки.ТекущиеДанные.УИН_Строки Тогда
			Если Объект.Исполнители[Кол-Сч].Исполнитель=Элементы.ОбъектыПривязки.ТекущиеДанные.Исполнитель Тогда
				Объект.Исполнители.Удалить(Кол-Сч);
			КонецЕсли; 
		КонецЦикла;
		ОбъектыПривязкиОценкаПриИзмененииСервер();
	Иначе
		Для каждого Стр Из Объект.ОбъектыПривязки Цикл
			Если Стр.НомерСтроки=Элементы.ОбъектыПривязки.ТекущиеДанные.НомерСтроки Тогда
				Объект.ОбъектыПривязки.Удалить(Стр);
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
		ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(ТекИсполнитель);
		ОбъектыПривязкиОценкаПриИзмененииСервер();
		ДобавитьАдресат(ТекИсполнитель);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	//Если Элементы.ОбъектыПривязки.ТекущиеДанные<>Неопределено Тогда
	//	Стр=Объект.Исполнители.Добавить();
	//	Стр.УИН_Строки=Элементы.ОбъектыПривязки.ТекущиеДанные.УИН_Строки;
	//	Если Не ЕстьПолныеПрава() Тогда
	//		Если ТипЗнч(Объект.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя")и Не Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники")  Тогда
	//			МасФЛ=ПолучитьФизЛицТипаРоли(Объект.Заказчик,ТекФизЛицо);
	//			Если МасФЛ.Количество()>0 Тогда
	//				Если МасФЛ[0]=ТекФизЛицо Тогда
	//					Стр.Заказчик=ТекФизЛицо;
	//				КонецЕсли; 
	//			КонецЕсли;
	//		ИначеЕсли Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники") Тогда
	//			Стр.Заказчик=ТекФизЛицо;
	//		КонецЕсли;
	//		
	//	КонецЕсли;
	//КонецЕсли;  
	//Отказ=Истина;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьПолныеПрава()
	Возврат РольДоступна("ПолныеПрава");
КонецФункции // ()

&НаКлиенте
Процедура ИсполнителиОценкаПриИзменении(Элемент)
	Элементы.Исполнители.ТекущиеДанные.Динамика=ПолучитьДинамикуОценки(ТекОценкаИсп,Элементы.Исполнители.ТекущиеДанные.Оценка);
	Если ТекОценкаИсп<>Элементы.Исполнители.ТекущиеДанные.Оценка Тогда
		Элементы.Исполнители.ТекущиеДанные.ДатаИзменения=ТекущаяДата();	
	КонецЕсли; 
	ТекОценкаИсп=Элементы.Исполнители.ТекущиеДанные.Оценка;
	
	
	ОбъектыПривязкиОценкаПриИзмененииСервер();
	ДобавитьАдресат(Элементы.Исполнители.ТекущиеДанные.Исполнитель);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СформироватьСписокЗаказчиков();
	Если Элементы.ОбъектыПривязки.ТекущиеДанные<>Неопределено Тогда
		СформироватьСписокИсполнителей();
	КонецЕсли; 
	Элементы.ОбъектыПривязки.ОтборСтрок = Новый ФиксированнаяСтруктура("НеПоказывать", Ложь);
	//+++АК sils 08.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
	//---АК
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПривязкиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	//СформироватьСписокИсполнителей();
КонецПроцедуры

&НаКлиенте
Процедура ЗаказчикиОценкаПриИзменении(Элемент)
	Если НЕ ЗначениеЗаполнено(ЕмейлТекФизЛица) Тогда
		Текст = "";
		Подсказка = "Введите свой е-мейл";
		Если ВвестиСтроку(Текст, Подсказка, 0, Истина) Тогда
			Попытка
				ЗаписатьЕмейл(Текст);
				ЕмейлТекФизЛица=Текст;
			Исключение
				Элементы.Заказчики.ТекущиеДанные.Оценка=ТекОценка;
				Возврат;
			КонецПопытки; 	
		Иначе
			Элементы.Заказчики.ТекущиеДанные.Оценка=ТекОценка;
			Возврат;
		КонецЕсли;
		
	
	КонецЕсли; 
	
	Элементы.Заказчики.ТекущиеДанные.Динамика=ПолучитьДинамикуОценки(ТекОценка,Элементы.Заказчики.ТекущиеДанные.Оценка);
	
	ТекОценка=Элементы.Заказчики.ТекущиеДанные.Оценка;
	
	Элементы.Заказчики.ТекущиеДанные.ДатаИзменения=ТекущаяДата();
	ОбъектыПривязкиЗаказчикиОценкаПриИзмененииСервер();
	ДобавитьАдресат(?(ТипЗнч(Объект.Исполнитель)=Тип("СправочникСсылка.ФизическиеЛица"),Объект.Исполнитель,Элементы.Заказчики.ТекущиеДанные.Исполнитель));
КонецПроцедуры

&НаКлиенте
Процедура ЗаказчикиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Стр=Объект.Заказчики.Добавить();
	Если Не ЕстьПолныеПрава() Тогда
		//Если ТипЗнч(Объект.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя")и Не Объект.Исполнитель=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники")  Тогда
		//	МасФЛ=ПолучитьФизЛицТипаРоли(Объект.Исполнитель,ТекФизЛицо,Истина);
		//	Если МасФЛ.Количество()>0 Тогда
		//		Если МасФЛ[0]=ТекФизЛицо Тогда
		//			Стр.Исполнитель=ТекФизЛицо;
		//		КонецЕсли; 
		//	КонецЕсли;
		//ИначеЕсли Объект.Исполнитель=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники") Тогда
		//	Стр.Исполнитель=ТекФизЛицо;
		//КонецЕсли;
		Если ТипЗнч(Объект.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя")и Не Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники")  Тогда
			МасФЛ=ПолучитьФизЛицТипаРоли(Объект.Заказчик,ТекФизЛицо);
			Если МасФЛ.Количество()>0 Тогда
				Если МасФЛ[0]=ТекФизЛицо Тогда
					Стр.Заказчик=ТекФизЛицо;
				КонецЕсли; 
			КонецЕсли;
		ИначеЕсли Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники") Тогда
			Стр.Заказчик=ТекФизЛицо;
		КонецЕсли;
		//Если Объект.Исполнитель=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники")  Тогда
		//	Стр.Исполнитель=ТекФизЛицо;
		//КонецЕсли;
	КонецЕсли;
	Отказ=Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("АК_ОбновитьСписокОбещаний");
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиИсполнительПриИзменении(Элемент)
	УдалитьЛишниеАдресаты();
	ДобавитьАдресат(Элементы.Исполнители.ТекущиеДанные.Исполнитель);
КонецПроцедуры

&НаКлиенте
Процедура ЗаказчикиИсполнительПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Элементы.Заказчики.ТекущиеДанные.Оценка) Тогда
		Элементы.Заказчики.ТекущиеДанные.ДатаИзменения=ТекущаяДата();
	КонецЕсли; 
	УдалитьЛишниеАдресаты();
	ДобавитьАдресат(Элементы.Заказчики.ТекущиеДанные.Исполнитель);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьАдресат(ФизЛицо)
	Если ЗначениеЗаполнено(ФизЛицо) Тогда
		НовСтр=ТЗОценки.Добавить();
		НовСтр.ФизЛицо=ФизЛицо;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЛишниеАдресаты()
	МасФл=Новый Массив;
	Для каждого стр Из ТЗОценки Цикл
		Если Объект.Заказчики.НайтиСтроки(Новый Структура("Исполнитель",стр.ФизЛицо)).Количество()=0 и Объект.Исполнители.НайтиСтроки(Новый Структура("Исполнитель",стр.ФизЛицо)).Количество()=0 Тогда
			МасФл.Добавить(стр.ФизЛицо);
		КонецЕсли; 	
	КонецЦикла; 
	КолСтр=ТЗОценки.Количество()-1;
	Для Сч=0 По КолСтр Цикл
		Если МасФл.Найти(ТЗОценки[КолСтр-Сч].ФизЛицо)<>Неопределено Тогда
			ТЗОценки.Удалить(КолСтр-Сч);
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПослеУдаления(Элемент)
	УдалитьЛишниеАдресаты();
КонецПроцедуры

&НаКлиенте
Процедура ЗаказчикиПослеУдаления(Элемент)
	УдалитьЛишниеАдресаты();
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПривязкиНоменклатураПриИзменении(Элемент)
	ЗаполнитьИсполнителяЗаказчика();
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПривязкиХарактеристикаПриИзменении(Элемент)
	ЗаполнитьИсполнителяЗаказчика();
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПривязкиСтруктурнаяЕдиницаПриИзменении(Элемент)
	ЗаполнитьИсполнителяЗаказчика();
	//Если (Строка(Объект.Заказчик)=("Продавец-консультант")
	//		ИЛИ Строка(Объект.Заказчик)=("Старший продавец-консультант")
	//		ИЛИ Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники")) Тогда
	//	СформироватьСписокЗаказчиков();
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПривязкиТехнологПриИзменении(Элемент)
	ЗаполнитьИсполнителяЗаказчика();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьИсполнителяЗаказчика()
	НеАктивизироватьСтроку=Истина;
	Если Элементы.ОбъектыПривязки.ТекущиеДанные<>Неопределено Тогда
		Элементы.ОбъектыПривязки.ТекущиеДанные.Исполнитель=Неопределено;
		Элементы.ОбъектыПривязки.ТекущиеДанные.Оценка=Неопределено;
		Элементы.ОбъектыПривязки.ТекущиеДанные.Заказчик=Неопределено;
		ОбъектыПривязкиИсполнительПриИзменении(Неопределено);
		СформироватьСписокИсполнителей();
		Если Элементы.ОбъектыпривязкиИсполнитель.РежимВыбораИзСписка и Элементы.ОбъектыпривязкиИсполнитель.СписокВыбора.Количество()>0
			И Не Строка(Объект.Исполнитель)=("Продавец-консультант")
			Тогда
			Элементы.ОбъектыПривязки.ТекущиеДанные.Исполнитель=Элементы.ОбъектыпривязкиИсполнитель.СписокВыбора[0].Значение;
			ОбъектыПривязкиИсполнительПриИзменении(Неопределено);
		КонецЕсли; 
		Если (Строка(Объект.Заказчик)=("Продавец-консультант")
			ИЛИ Строка(Объект.Заказчик)=("Старший продавец-консультант")) Тогда
			СформироватьСписокЗаказчиков();
		КонецЕсли; 
		Если (Строка(Объект.Заказчик)=("Старший продавец-консультант")) Тогда
			Если Элементы.ОбъектыпривязкиЗаказчик.РежимВыбораИзСписка и Элементы.ОбъектыпривязкиЗаказчик.СписокВыбора.Количество()>0
				Тогда
				Элементы.ОбъектыПривязки.ТекущиеДанные.Заказчик=Элементы.ОбъектыпривязкиЗаказчик.СписокВыбора[0].Значение;
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли; 
	
	Если Элементы.Заказчики.ТекущиеДанные<>Неопределено Тогда
		Элементы.Заказчики.ТекущиеДанные.Исполнитель=Неопределено;
		Элементы.Заказчики.ТекущиеДанные.Оценка=Неопределено;
		Элементы.Заказчики.ТекущиеДанные.Заказчик=Неопределено;
		ЗаказчикиИсполнительПриИзменении(Неопределено);
		СформироватьСписокИсполнителей();
		Если Элементы.ЗаказчикиИсполнитель.РежимВыбораИзСписка и Элементы.ЗаказчикиИсполнитель.СписокВыбора.Количество()>0
			И Не Строка(Объект.Исполнитель)=("Продавец-консультант")
			Тогда
			Элементы.Заказчики.ТекущиеДанные.Исполнитель=Элементы.ЗаказчикиИсполнитель.СписокВыбора[0].Значение;
			ЗаказчикиИсполнительПриИзменении(Неопределено);
		КонецЕсли; 
		
		Если (Строка(Объект.Заказчик)=("Продавец-консультант")
			ИЛИ Строка(Объект.Заказчик)=("Старший продавец-консультант")) Тогда
			СформироватьСписокЗаказчиков();
		КонецЕсли; 
		Если (Строка(Объект.Заказчик)=("Старший продавец-консультант")) Тогда
			Если Элементы.ЗаказчикиЗаказчик.РежимВыбораИзСписка и Элементы.ЗаказчикиЗаказчик.СписокВыбора.Количество()>0
				Тогда
				Элементы.Заказчики.ТекущиеДанные.Заказчик=Элементы.ЗаказчикиЗаказчик.СписокВыбора[0].Значение;
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли; 
	
	
	Если Не ЕстьПолныеПрава() Тогда
		Если ТипЗнч(Объект.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя")и
			Не Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники")
			И Не Строка(Объект.Заказчик)=("Продавец-консультант")
			//И НЕ (Объект.Заказчик)=ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Старший продавец-консультант")
			Тогда
			МасФЛ=ПолучитьФизЛицТипаРоли(Объект.Заказчик,ТекФизЛицо);
			Если МасФЛ.Количество()>0 Тогда
				Если МасФЛ[0]=ТекФизЛицо Тогда
					Элементы.ОбъектыПривязки.ТекущиеДанные.Заказчик=ТекФизЛицо;
				КонецЕсли; 
			КонецЕсли;
			
		ИначеЕсли Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники") И Элементы.ОбъектыПривязки.ТекущиеДанные<>Неопределено Тогда
			Элементы.ОбъектыПривязки.ТекущиеДанные.Заказчик=ТекФизЛицо;
		КонецЕсли;
	КонецЕсли;
	НеАктивизироватьСтроку=Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПривязкиИсполнительПриИзменении(Элемент)
	Если Объект.Номер="000000014" и ЗначениеЗаполнено(Элементы.ОбъектыПривязки.ТекущиеДанные.Исполнитель) и ЗначениеЗаполнено(Элементы.ОбъектыПривязки.ТекущиеДанные.СтруктурнаяЕдиница)  Тогда
		Элементы.ОбъектыПривязки.ТекущиеДанные.Оценка=ЗаполнитьОценку(Элементы.ОбъектыПривязки.ТекущиеДанные.СтруктурнаяЕдиница);
	КонецЕсли;
	Если ЗначениеЗаполнено(Элементы.ОбъектыПривязки.ТекущиеДанные.Оценка) Тогда
		Элементы.ОбъектыПривязки.ТекущиеДанные.ДатаИзменения=ТекущаяДата();
	КонецЕсли;
	
	ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(Элементы.ОбъектыПривязки.ТекущиеДанные.Исполнитель);
	
	Если Объект.Номер="000000014" и ЗначениеЗаполнено(Элементы.ОбъектыПривязки.ТекущиеДанные.Исполнитель) и ЗначениеЗаполнено(Элементы.ОбъектыПривязки.ТекущиеДанные.СтруктурнаяЕдиница)  Тогда
		ОбъектыПривязкиОценкаПриИзмененииСервер();
	КонецЕсли; 
	УдалитьЛишниеАдресаты();
	ДобавитьАдресат(Элементы.ОбъектыПривязки.ТекущиеДанные.Исполнитель);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьОценку(СтруктурнаяЕдиница)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ОбращенияПокупателей.id_OK) КАК КоличествоСлучаев,
	|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ИЗ
	|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(, СтруктурнаяЕдиница.Активное = ИСТИНА) КАК ЦФОСтруктурныхЕдиницСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|		ПО (ОбращенияПокупателей.СтруктурнаяЕдиница = ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница)
	|ГДЕ
	|	ОбращенияПокупателей.ТипЖалобы В(&ТипЖалобы)
	|	И ОбращенияПокупателей.ДатаДок МЕЖДУ &ДатаДок1 И &ДатаДок2
	|	И ОбращенияПокупателей.СтатусЖалобы = ЗНАЧЕНИЕ(Перечисление.СтатусыЖалоб.Подтверждена)
	|	И ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО = &СтруктурнаяЕдиница
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница
	|ИТОГИ
	|	СУММА(КоличествоСлучаев),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтруктурнаяЕдиница)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("ДатаДок1", НачалоДня(ДобавитьМесяц(ТекущаяДата(),-1)));
	Запрос.УстановитьПараметр("ДатаДок2", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	
	ТипЖалобы=Новый СписокЗначений;
	ТипЖалобы.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("210"));
	ТипЖалобы.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("211"));
	ТипЖалобы.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("212"));
	ТипЖалобы.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("213"));
	ТипЖалобы.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("214"));
	ТипЖалобы.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("187"));
	ТипЖалобы.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("115"));
	ТипЖалобы.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("252"));
	
	
	Запрос.УстановитьПараметр("ТипЖалобы", ТипЖалобы);
	
	Результат = Запрос.Выполнить();                                                   
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.КоличествоСлучаев/ВыборкаДетальныеЗаписи.СтруктурнаяЕдиница<=2 и ВыборкаДетальныеЗаписи.КоличествоСлучаев/ВыборкаДетальныеЗаписи.СтруктурнаяЕдиница >1 Тогда
			Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
		ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоСлучаев/ВыборкаДетальныеЗаписи.СтруктурнаяЕдиница>2 Тогда
			Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;
		КонецЕсли; 
	КонецЦикла;
	Возврат Оценка;
КонецФункции

&НаСервере
Процедура ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(ТекИсполнитель)
	Если Объект.Номер="000000006" Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Номер="000000176" или Объект.Номер="000000011"  или Объект.Номер="000000008"  или Объект.Номер="000000184" Тогда
		//Кол=ДокОбещание.Исполнители.Количество()-1;
		//Для Сч=0 По Кол Цикл
		//	МасСтрИсп=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Исполнитель",ДокОбещание.Исполнители[Кол-Сч].Исполнитель));
		//	Если МасСтрИсп.Количество()=0 Тогда
		//		ДокОбещание.Исполнители.Удалить(Кол-Сч);
		//	ИначеЕсли МасСтрИсп.Количество()=1  Тогда
		//		Если Не ЗначениеЗаполнено(МасСтрИсп[0].Оценка)  Тогда
		//			ДокОбещание.Исполнители.Удалить(Кол-Сч);
		//		КонецЕсли; 	
		//	КонецЕсли; 
		//КонецЦикла;
		ТЗ=Новый ТаблицаЗначений;
		ТЗ.Колонки.Добавить("Исполнитель");
		ТЗ.Колонки.Добавить("Оценка");
		Для каждого Стр Из Объект.ОбъектыПривязки Цикл
			ЗаполнитьЗначенияСвойств(ТЗ.Добавить(),Стр);
		КонецЦикла; 
		
		ТЗ.Свернуть("Исполнитель, Оценка");
		МасСтр=ТЗ.НайтиСтроки(Новый Структура("Исполнитель",ТекИсполнитель));
		
		Если Не ЗначениеЗаполнено(ТекИсполнитель)  Тогда
			Возврат;
		КонецЕсли; 

		
		МасСтрИсп=Объект.Исполнители.НайтиСтроки(Новый Структура("Исполнитель",ТекИсполнитель));
		Если МасСтрИсп.Количество()=0 Тогда
			СтрИсп=Объект.Исполнители.Добавить();
			СтрИсп.Исполнитель=ТекИсполнитель;
			СтрИсп.Наименование=ТекИсполнитель.Наименование;
		Иначе	
			СтрИсп=МасСтрИсп[0];	
		КонецЕсли;
		
		
		ФлНеИсп=Ложь;
		Для каждого ЭлМас Из МасСтр Цикл
			Если ЭлМас.Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется Тогда
				ФлНеИсп=Истина;
			КонецЕсли; 
		КонецЦикла; 
		
		Если МасСтр.Количество()=0 Тогда
			Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
		ИначеЕсли МасСтр.Количество()=1 Тогда
			Оценка=?(ЗначениеЗаполнено(МасСтр[0].Оценка),МасСтр[0].Оценка,Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется);
		Иначе	
			Оценка=?(ФлНеИсп и Объект.Номер="000000176",Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется,Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется);
		КонецЕсли; 
		
		СтрИсп.Динамика=ПолучитьДинамикуОценки(СтрИсп.Оценка,Оценка);
		Если НЕ СтрИсп.Оценка=Оценка Тогда
			
			СтрИсп.Оценка=Оценка;
			СтрИсп.ДатаИзменения=ТекущаяДата();
			
		КонецЕсли; 
		Объект.Исполнители.Сортировать("Наименование");
		
	Иначе	
		
		Кол=Объект.Исполнители.Количество()-1;
		Для Сч=0 По Кол Цикл
			МасСтрИсп=Объект.ОбъектыПривязки.НайтиСтроки(Новый Структура("Исполнитель",Объект.Исполнители[Кол-Сч].Исполнитель));
			Если МасСтрИсп.Количество()=0 Тогда
				Объект.Исполнители.Удалить(Кол-Сч);
			ИначеЕсли МасСтрИсп.Количество()=1  Тогда
				Если Не ЗначениеЗаполнено(МасСтрИсп[0].Оценка)  Тогда
					Объект.Исполнители.Удалить(Кол-Сч);
				КонецЕсли; 	
			КонецЕсли; 
		КонецЦикла;
		ТЗ=Новый ТаблицаЗначений;
		ТЗ.Колонки.Добавить("Исполнитель");
		ТЗ.Колонки.Добавить("Оценка");
		Для каждого Стр Из Объект.ОбъектыПривязки Цикл
			ЗаполнитьЗначенияСвойств(ТЗ.Добавить(),Стр);
		КонецЦикла; 
		ТЗ.Свернуть("Исполнитель, Оценка");
		МасСтр=ТЗ.НайтиСтроки(Новый Структура("Исполнитель",ТекИсполнитель));
		
		Если Не ЗначениеЗаполнено(ТекИсполнитель) ИЛИ МасСтр.Количество()=0 Тогда
			Возврат;
		КонецЕсли; 
		Если  Не ЗначениеЗаполнено(МасСтр[0].Оценка) И МасСтр.Количество()=1 Тогда
			Возврат;
		КонецЕсли; 

		
		МасСтрИсп=Объект.Исполнители.НайтиСтроки(Новый Структура("Исполнитель",ТекИсполнитель));
		Если МасСтрИсп.Количество()=0 Тогда
			СтрИсп=Объект.Исполнители.Добавить();
			СтрИсп.Исполнитель=ТекИсполнитель;
			СтрИсп.Наименование=ТекИсполнитель.Наименование;
		Иначе	
			СтрИсп=МасСтрИсп[0];	
		КонецЕсли;
		
		Если МасСтр.Количество()=1 Тогда
			Оценка=МасСтр[0].Оценка;
		Иначе	
			Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
		КонецЕсли;
		
		СтрИсп.Динамика=ПолучитьДинамикуОценки(СтрИсп.Оценка,Оценка);
		Если НЕ СтрИсп.Оценка=Оценка Тогда
			
			СтрИсп.Оценка=Оценка;
			СтрИсп.ДатаИзменения=ТекущаяДата();
			
		КонецЕсли; 
		Объект.Исполнители.Сортировать("Наименование");
		
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПривязкиПослеУдаления(Элемент)
	УдалитьЛишниеАдресаты();
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПривязкиСтруктурнаяЕдиницаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Объект.Исполнитель=ВозвратЭлемента("Управляющий по рознице") или Объект.Исполнитель=ВозвратЭлемента("Помощник по рознице")  Тогда
		Если Объект.Исполнитель=ВозвратЭлемента("Управляющий по рознице") Тогда
			Отбор=Новый Структура("ТипСтруктурнойЕдиницы",ПредопределенноеЗначение("Перечисление.ТипыСтруктурныхЕдиниц.Подразделение"));
		ИначеЕсли Объект.Исполнитель=ВозвратЭлемента("Помощник по рознице") Тогда
			Отбор=Новый Структура("ТипСтруктурнойЕдиницы",ПредопределенноеЗначение("Перечисление.ТипыСтруктурныхЕдиниц.Розница"));
		КонецЕсли; 
		Парам=Новый Структура("Отбор",Отбор);
		СтандартнаяОбработка=Ложь;
		ОткрытьФорму("Справочник.СтруктурныеЕдиницы.Форма.ФормаВыбораУпр",Парам,Элемент);
	КонецЕсли; 
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВозвратЭлемента(Наименование)
	Возврат ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию(Наименование);	
КонецФункции // ()

&НаКлиенте
Процедура ОценкаПриИзменении(Элемент)
	Если НЕ ЗначениеЗаполнено(ЕмейлТекФизЛица) Тогда
		Текст = "";
		Подсказка = "Введите свой е-мейл";
		Если ВвестиСтроку(Текст, Подсказка, 0, Истина) Тогда
			Попытка
				ЗаписатьЕмейл(Текст);
				ЕмейлТекФизЛица=Текст;
			Исключение
				Объект.Оценка=ТекОценка;
				Возврат;
			КонецПопытки; 	
		Иначе
			Объект.Оценка=ТекОценка;
			Возврат;
		КонецЕсли;
		
	
	КонецЕсли; 
	
	Объект.ДатаИзменения=ТекущаяДата();
	ТекОценка=Объект.Оценка;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПривязку(Команда)
	Если Элементы.ОбъектыПривязки.ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли; 
	Если Элементы.ОбъектыПривязкиХарактеристика.Видимость Тогда
		ОбъектПривязки=Элементы.ОбъектыПривязки.ТекущиеДанные.Характеристика;	
	ИначеЕсли Элементы.ОбъектыПривязкиТехнолог.Видимость Тогда
		ОбъектПривязки=Элементы.ОбъектыПривязки.ТекущиеДанные.Технолог;
	ИначеЕсли Элементы.ОбъектыПривязкиСтруктурнаяЕдиница.Видимость Тогда
		ОбъектПривязки=Элементы.ОбъектыПривязки.ТекущиеДанные.СтруктурнаяЕдиница;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ОбъектПривязки) Тогда
		Возврат;
	КонецЕсли;
	СтруктураЗаполнения=Новый Структура("Объект, ТипРоли",ОбъектПривязки,Объект.Исполнитель);		
	ОткрытьФормуЗаписи(СтруктураЗаполнения);	                              
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуЗаписи(СтруктураЗаполнения)
	СтруктураЗаполнения.Вставить("Период",НачалоДня(ТекущаяДата()));
	
	Если Не ЕстьЗапись(СтруктураЗаполнения) Тогда
		СтруктураДанных=Новый Структура("ЗначенияЗаполнения,ОграничитьДоступность",СтруктураЗаполнения,Истина)		
	Иначе
		ЭтотМассив=Новый Массив;
		ЭтотМассив.Добавить(СтруктураЗаполнения);
		КлючЗаписи       =    Новый("РегистрСведенийКлючЗаписи.СоответствиеОбъектРоль", ЭтотМассив);
		СтруктураДанных=Новый Структура("Ключ,ОграничитьДоступность",КлючЗаписи,Истина)		
	КонецЕсли;
	
	ОткрытьФорму("РегистрСведений.СоответствиеОбъектРоль.ФормаЗаписи",СтруктураДанных,ЭтаФорма);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьЗапись(СтруктураЗаполнения)
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	|	СоответствиеОбъектРольСрезПоследних.Период,
	|	СоответствиеОбъектРольСрезПоследних.ТипРоли,
	|	СоответствиеОбъектРольСрезПоследних.Объект,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя,
	|	СоответствиеОбъектРольСрезПоследних.ТипРолиID,
	|	1 КАК Приоритет,
	|	СоответствиеОбъектРольСрезПоследних.Автор
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
	|			,
	|			ТипРоли = &ТипРоли
	|				И Объект = &Объект) КАК СоответствиеОбъектРольСрезПоследних
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СоответствиеОбъектРольСрезПоследних.Период,
	|	СоответствиеОбъектРольСрезПоследних.ТипРоли,
	|	ЗначенияСвойствОбъектов.Значение,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя,
	|	СоответствиеОбъектРольСрезПоследних.ТипРолиID,
	|	2,
	|	СоответствиеОбъектРольСрезПоследних.Автор
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО (ЗначенияСвойствОбъектов.Значение = СоответствиеОбъектРольСрезПоследних.Объект)
	|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовхарактеристик.СвойстваОбъектов.Производитель))
	|			И (ЗначенияСвойствОбъектов.Объект = &Объект)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	
	Запрос.УстановитьПараметр("ТипРоли", СтруктураЗаполнения.ТипРоли);
	Запрос.УстановитьПараметр("Объект", СтруктураЗаполнения.Объект);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтруктураЗаполнения.Период=Выборка.Период;
		СтруктураЗаполнения.Объект=Выборка.Объект;
		Возврат Истина;
	КонецЦикла;
	
	Возврат  Ложь;
КонецФункции

&НаКлиенте
Процедура ОбъектыПривязкиДатаПриИзменении(Элемент)
	ЗаполнитьИсполнителяЗаказчика();
	//Если (Строка(Объект.Заказчик)=("Продавец-консультант")
	//		ИЛИ Строка(Объект.Заказчик)=("Старший продавец-консультант")
	//		ИЛИ Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники")) Тогда
	//СформироватьСписокЗаказчиков();
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаказчикиДатаПриИзменении(Элемент)
	ЗаполнитьИсполнителяЗаказчика();
	//Если (Строка(Объект.Заказчик)=("Продавец-консультант")
	//		ИЛИ Строка(Объект.Заказчик)=("Старший продавец-консультант")
	//		ИЛИ Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники")) Тогда
	//СформироватьСписокЗаказчиков();
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаказчикиПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные<>Неопределено Тогда
		//	ОтборСтрок = Новый Структура;
		//	ОтборСтрок.Вставить("УИН_Строки", Элемент.ТекущиеДанные.УИН_Строки);
		//	Элементы.Исполнители.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрок);
		//	
		//	СформироватьСписокИсполнителей();
		//КонецЕсли;  
		ТекИсполнитель=Элементы.Заказчики.ТекущиеДанные.Исполнитель;
		ТекОценка=Элементы.Заказчики.ТекущиеДанные.Оценка;
		
		Если Не НеАктивизироватьСтроку  Тогда
			СформироватьСписокИсполнителей();
			Если (Строка(Объект.Заказчик)=("Продавец-консультант")
				ИЛИ Строка(Объект.Заказчик)=("Старший продавец-консультант")
				ИЛИ Объект.Заказчик=ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники")) Тогда
				СформироватьСписокЗаказчиков();
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ЗаказчикиПередУдалением(Элемент, Отказ)
	Для каждого Стр Из Объект.Заказчики Цикл
		Если Стр.НомерСтроки=Элементы.Заказчики.ТекущиеДанные.НомерСтроки Тогда
			Объект.Заказчики.Удалить(Стр);
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	
	ОбъектыПривязкиЗаказчикиОценкаПриИзмененииСервер();
	ДобавитьАдресат(?(ТипЗнч(Объект.Исполнитель)=Тип("СправочникСсылка.ФизическиеЛица"),Объект.Исполнитель,ТекИсполнитель));

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОписание(Команда)
	Если Элементы.Исполнители.ТекущиеДанные<>Неопределено Тогда
		Сообщить(Элементы.Исполнители.ТекущиеДанные.Описание);
	Иначе
		Если Элементы.ОбъектыПривязки.ТекущиеДанные<>Неопределено И Элементы.Исполнители.Видимость=Ложь Тогда
			Сообщить(Элементы.ОбъектыПривязки.ТекущиеДанные.ОписаниеДоп+Символы.ПС+Элементы.ОбъектыПривязки.ТекущиеДанные.Описание);
		Иначе
			Сообщить(Объект.Описание);
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПоВозрастанию(Команда)
	Если Элементы.ОбъектыПривязки.ТекущийЭлемент<>Неопределено Тогда
		Имя=СтрЗаменить(Элементы.ОбъектыПривязки.ТекущийЭлемент.Имя,"ОбъектыПривязки","");	
		Объект.ОбъектыПривязки.Сортировать(Имя);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОбъектыПоУбыванию(Команда)
	Если Элементы.ОбъектыПривязки.ТекущийЭлемент<>Неопределено Тогда
		Имя=СтрЗаменить(Элементы.ОбъектыПривязки.ТекущийЭлемент.Имя,"ОбъектыПривязки","");	
		Объект.ОбъектыПривязки.Сортировать(Имя+" Убыв");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПоВозрастанию(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПоУбыванию(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ЗаказчикиПоВозрастанию(Команда)
	Если Элементы.Заказчики.ТекущийЭлемент<>Неопределено Тогда
		Имя=СтрЗаменить(Элементы.Заказчики.ТекущийЭлемент.Имя,"Заказчики","");	
		Объект.Заказчики.Сортировать(Имя);
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ЗаказчикиПоУбыванию(Команда)
	Если Элементы.Заказчики.ТекущийЭлемент<>Неопределено Тогда
		Имя=СтрЗаменить(Элементы.Заказчики.ТекущийЭлемент.Имя,"Заказчики","");	
		Объект.Заказчики.Сортировать(Имя+" Убыв");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ИсполнителиПриАктивизацииСтроки(Элемент)
	Если Элементы.Исполнители.ТекущиеДанные<>Неопределено Тогда
		СформироватьСписокИсполнителей();
		ТекОценкаИсп=Элементы.Исполнители.ТекущиеДанные.Оценка;
	КонецЕсли; 
КонецПроцедуры
