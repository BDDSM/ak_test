Процедура ВыполнитьОценку(ДокОбещание,СоотПисемОбОценках) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РолиПользователейСоставРоли.Ссылка,
	|	РолиПользователейСоставРоли.Сотрудник,
	|	РолиПользователейСоставРоли.Сотрудник.Активный КАК Активный
	|ИЗ
	|	Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли";
	
	Результат = Запрос.Выполнить();
	
	ТЗРоли = Результат.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =                                                                                   
	"ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление,
	|	КонтактнаяИнформация.Объект
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект ССЫЛКА Справочник.ФизическиеЛица
	|	И КонтактнаяИнформация.Тип = &Тип";
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	Результат = Запрос.Выполнить();
	ТЗЭлАдреса = Результат.Выгрузить();
	
	Если ДокОбещание.Номер="000000014" Тогда
		ТЗОценки=Новый ТаблицаЗначений;
		ТЗОценки.Колонки.Добавить("ФизЛицо");
		ТЗОценки.Колонки.Добавить("МасСтрок");
		ТЗРезультат=ПолучитьТаблицуРезультатаОбещания14();
		
		УдалитьЛишниеСтроки(ДокОбещание);		
		
		МасИсп=Новый Массив;
		МасУд=Новый Массив;
		Для каждого СтрРез Из ТЗРезультат Цикл
			МасСтр=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница,Исполнитель,Дата",СтрРез.СтруктурнаяЕдиница,СтрРез.Сотрудник,СтрРез.ДатаДок));
			Если СтрРез.РезультатОбращения=0 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
			ИначеЕсли СтрРез.РезультатОбращения=1 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
			Иначе	
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;
			КонецЕсли; 
			ТекОценка=Неопределено;
			Если НЕ МасСтр.Количество()=0 Тогда
				ТекОценка=МасСтр[0].Оценка;
			КонецЕсли; 
			
			
			
			МасСтрВсе=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Исполнитель",СтрРез.Сотрудник));
			ТЗПоСотр=Новый ТаблицаЗначений;
			ТЗПоСотр.Колонки.Добавить("Дата");
			ТЗПоСотр.Колонки.Добавить("НомСтр");
			ТЗПоСотр.Колонки.Добавить("Оценка");
			
			Для каждого Эл Из МасСтрВсе Цикл
				Если Эл.Дата<СтрРез.ДатаДок Тогда
					НовСтр=ТЗПоСотр.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтр,Эл);	
					НовСтр.НомСтр=Эл.НомерСтроки;
				КонецЕсли; 
			КонецЦикла; 
			ТЗПоСотр.Сортировать("Дата");
			Если ТЗПоСотр.Количество() Тогда
				
				Если ТЗПоСотр[ТЗПоСотр.Количество()-1].Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется И
					Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется Тогда
					
					Если НЕ ТекОценка=Неопределено Тогда
				    	МасУд.Добавить(МасСтр[0].НомерСтроки);
					КонецЕсли; 
					
				    Продолжить;
				
				КонецЕсли; 
				
				
				
				Если ТЗПоСотр[ТЗПоСотр.Количество()-1].Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется 
					И (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
					ИЛИ Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется) И
					ДобавитьМесяц(СтрРез.ДатаДок,-1)<ТЗПоСотр[ТЗПоСотр.Количество()-1].Дата Тогда
					Если НЕ ТекОценка=Неопределено  Тогда
		    			МасУд.Добавить(МасСтр[0].НомерСтроки);
					КонецЕсли; 
			    	Продолжить;
					
				КонецЕсли; 
				Если (ТЗПоСотр[ТЗПоСотр.Количество()-1].Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется) 
					И Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется И
					ДобавитьМесяц(СтрРез.ДатаДок,-1)<ТЗПоСотр[ТЗПоСотр.Количество()-1].Дата Тогда
					Если НЕ ТекОценка=Неопределено  Тогда
		    			МасУд.Добавить(МасСтр[0].НомерСтроки);
					КонецЕсли; 
			   		Продолжить;
				КонецЕсли; 
				
			КонецЕсли; 
			
			ПрошлаяОценка=Неопределено;
			Для каждого СтрОцФЛ Из ТЗПоСотр Цикл
				Если МасУд.Найти(СтрОцФЛ.НомСтр)=Неопределено Тогда
					ПрошлаяОценка=СтрОцФЛ.Оценка;
				КонецЕсли; 
			КонецЦикла; 
			
			Если МасСтр.Количество()=0 Тогда
				//	Если СоставРоли.Количество()>0 Тогда
				Стр=ДокОбещание.ОбъектыПривязки.Добавить();
				Стр.СтруктурнаяЕдиница=СтрРез.СтруктурнаяЕдиница;	
				Стр.Исполнитель=СтрРез.Сотрудник;
				Стр.Дата=СтрРез.ДатаДок;
				Исполнитель=Стр.Исполнитель;
				//Иначе
				//	Продолжить;
				//КонецЕсли; 
			Иначе	                                                   
				Стр=МасСтр[0];
				//Если СоставРоли.Количество()>0 Тогда
				Исполнитель=Стр.Исполнитель;
				Стр.Исполнитель=СтрРез.Сотрудник;
				//Иначе
				//	Продолжить;
				//КонецЕсли; 
			КонецЕсли; 
			
			
			
			ДопСообщение="";
			Если (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
				или Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется) Тогда
				ДопСообщение="
				|";
				МасСтрок=СтрРез.МасСтрок.Получить();
				Для каждого СтрДоп Из МасСтрок Цикл
					ДопСообщение=ДопСообщение+"
					|"+СтрДоп.ДатаДок+" "+СтрДоп.СтруктурнаяЕдиница+" "+СтрДоп.РезультатОбращения+" "+СтрДоп.Номенклатура+" "+СтрДоп.Производитель+" "+Строка(СтрДоп.ТипЖалобы);
				КонецЦикла; 
			КонецЕсли;
			Стр.Описание=ДопСообщение;
			Стр.ОписаниеДоп="Оценка проставляется исходя из обращений: некомпетентный продавец; хамство; ошибка
			|«Не подтверждена» не учитывать.
			|Нет жалоб -  исполняется.  Одна – частично. Больше одной – не исполняется.";
			
			
			
			Если  ЗначениеЗаполнено(Стр.Исполнитель) и ЗначениеЗаполнено(Стр.СтруктурнаяЕдиница) и (Не Оценка=Стр.Оценка или Не Исполнитель=Стр.Исполнитель) Тогда
				Стр.Динамика=ПолучитьДинамикуОценки(ПрошлаяОценка,Оценка);
				Стр.Оценка=Оценка;
			иначе
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр.Оценка) Тогда
				Стр.ДатаИзменения=ТекущаяДата();
			КонецЕсли;
			
			Если МасИсп.Найти(Стр.Исполнитель)=Неопределено Тогда
				МасИсп.Добавить(Стр.Исполнитель);
			КонецЕсли; 
			ДобавитьАдресат(Стр.Исполнитель,ТЗОценки,ТЗРезультат);
		КонецЦикла;
		Для каждого Эл Из МасИсп Цикл
			ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(Эл,ДокОбещание);
		КонецЦикла; 
		
		ОбъектыПривязкиОценкаПриИзмененииСервер(ДокОбещание);
		УдалитьЛишниеАдресаты(ТЗОценки,ДокОбещание);
		ДокОбещание.ДатаКонтроляОценки=ТекущаяДата();
		
		КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		Для Сч=0 По КолСтр Цикл
			Если МасУд.Найти(ДокОбещание.ОбъектыПривязки[КолСтр-Сч].НомерСтроки)<>Неопределено Тогда
				ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
			КонецЕсли; 
		КонецЦикла; 
		
		ДокОбещание.Записать();
		ТЗАдресатов=ТЗОценки.Скопировать();
		ТЗАдресатов.Свернуть("ФизЛицо");
		МассивАдресов=ТЗАдресатов.ВыгрузитьКолонку("ФизЛицо");
		Для каждого Эл Из МассивАдресов Цикл
			ОтправитьПисьмоОбИндивилуальныхОценках(ДокОбещание,Эл,ТЗОценки,СоотПисемОбОценках,ТЗЭлАдреса);
		КонецЦикла;

		
	ИначеЕсли ДокОбещание.Номер="000000037" Тогда
		ТЗОценки=Новый ТаблицаЗначений;
		ТЗОценки.Колонки.Добавить("ФизЛицо");
		ТЗОценки.Колонки.Добавить("МасСтрок");
		ТЗРезультат=ПолучитьТаблицуРезультатаОбещания37();
		
		//КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		//Для Сч=0 По КолСтр Цикл
		//	Если ТЗРезультат.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница",ДокОбещание.ОбъектыПривязки[КолСтр-Сч].СтруктурнаяЕдиница)).Количество()=0 Тогда
		//		ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
		//	КонецЕсли; 
		//КонецЦикла; 
		УдалитьЛишниеСтроки(ДокОбещание);		
		МасИсп=Новый Массив;
		МасУд=Новый Массив;
		Для каждого СтрРез Из ТЗРезультат Цикл
			МасСтр=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница,Дата",СтрРез.СтруктурнаяЕдиница,СтрРез.ДатаДок));
			Если СтрРез.РезультатОбращения=1 или СтрРез.РезультатОбращения=0 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
			ИначеЕсли СтрРез.РезультатОбращения=2 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
			Иначе	
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;
			КонецЕсли; 
			
			
			ТекОценка=Неопределено;
			Если НЕ МасСтр.Количество()=0 Тогда
				ТекОценка=МасСтр[0].Оценка;
			КонецЕсли; 
			
			
			
			МасСтрВсе=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Исполнитель",СтрРез.Сотрудник));
			ТЗПоСотр=Новый ТаблицаЗначений;
			ТЗПоСотр.Колонки.Добавить("Дата");
			ТЗПоСотр.Колонки.Добавить("НомСтр");
			ТЗПоСотр.Колонки.Добавить("Оценка");
			
			Для каждого Эл Из МасСтрВсе Цикл
				Если Эл.Дата<СтрРез.ДатаДок Тогда
					НовСтр=ТЗПоСотр.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтр,Эл);	
					НовСтр.НомСтр=Эл.НомерСтроки;
				КонецЕсли; 
			КонецЦикла; 
			ТЗПоСотр.Сортировать("Дата");
			Если ТЗПоСотр.Количество() Тогда
				Если ТЗПоСотр[ТЗПоСотр.Количество()-1].Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется И
					Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется Тогда
					
					Если НЕ ТекОценка=Неопределено Тогда
				    	МасУд.Добавить(МасСтр[0].НомерСтроки);
					КонецЕсли; 
					
				    Продолжить;
				
				КонецЕсли; 
				
				
				
				Если ТЗПоСотр[ТЗПоСотр.Количество()-1].Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется 
					И (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
					ИЛИ Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется) И
					ДобавитьМесяц(СтрРез.ДатаДок,-1)<ТЗПоСотр[ТЗПоСотр.Количество()-1].Дата Тогда
					Если НЕ ТекОценка=Неопределено  Тогда
		    			МасУд.Добавить(МасСтр[0].НомерСтроки);
					КонецЕсли; 
			    	Продолжить;
					
				КонецЕсли; 
				Если (ТЗПоСотр[ТЗПоСотр.Количество()-1].Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется) 
					И Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется И
					ДобавитьМесяц(СтрРез.ДатаДок,-1)<ТЗПоСотр[ТЗПоСотр.Количество()-1].Дата Тогда
					Если НЕ ТекОценка=Неопределено  Тогда
		    			МасУд.Добавить(МасСтр[0].НомерСтроки);
					КонецЕсли; 
			   		Продолжить;
				КонецЕсли; 

			КонецЕсли; 
			
			
			ПрошлаяОценка=Неопределено;
			Для каждого СтрОцФЛ Из ТЗПоСотр Цикл
				Если МасУд.Найти(СтрОцФЛ.НомСтр)=Неопределено Тогда
					ПрошлаяОценка=СтрОцФЛ.Оценка;
				КонецЕсли; 
			КонецЦикла; 
			
			
			
			Если МасСтр.Количество()=0 Тогда
				//	Если СоставРоли.Количество()>0 Тогда
				Стр=ДокОбещание.ОбъектыПривязки.Добавить();
				Стр.СтруктурнаяЕдиница=СтрРез.СтруктурнаяЕдиница;	
				Стр.Исполнитель=СтрРез.Сотрудник;
				Стр.Дата=СтрРез.ДатаДок;
				Исполнитель=Стр.Исполнитель;
				//Иначе
				//	Продолжить;
				//КонецЕсли; 
			Иначе	                                                   
				Стр=МасСтр[0];
				//Если СоставРоли.Количество()>0 Тогда
				Исполнитель=Стр.Исполнитель;
				Стр.Исполнитель=СтрРез.Сотрудник;
				//Иначе
				//	Продолжить;
				//КонецЕсли; 
			КонецЕсли; 
			
			
			
			
			ДопСообщение="";
			Если (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
				или Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется) Тогда
				ДопСообщение="
				|";
				МасСтрок=СтрРез.МасСтрок.Получить();
				Для каждого СтрДоп Из МасСтрок Цикл
					ДопСообщение=ДопСообщение+"
					|"+СтрДоп.ДатаДок+" "+СтрДоп.СтруктурнаяЕдиница+" "+СтрДоп.РезультатОбращения+" "+СтрДоп.Номенклатура+" "+СтрДоп.Производитель+" "+Строка(СтрДоп.ТипЖалобы);
				КонецЦикла; 
			КонецЕсли;
			Стр.Описание=ДопСообщение;
			Стр.ОписаниеДоп="Все обращения 06 (кроме 06_8 и 06_4) получен оперативный ответ -  полностью исполняется,  
			|если получен ответ -  частично, в остальных ситуациях(в работе, или нет статуса) - не исполняется. 
			|Привязка к старшему продавцу работавшему в день поступления обращения. 
			|Период оценки - семь дней";
			
			
			
			Если  ЗначениеЗаполнено(Стр.Исполнитель) и ЗначениеЗаполнено(Стр.СтруктурнаяЕдиница) и (Не Оценка=Стр.Оценка или Не Исполнитель=Стр.Исполнитель) Тогда
				Стр.Динамика=ПолучитьДинамикуОценки(ПрошлаяОценка,Оценка);
				Стр.Оценка=Оценка;
			иначе
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр.Оценка) Тогда
				Стр.ДатаИзменения=ТекущаяДата();
			КонецЕсли;
		
			Если МасИсп.Найти(Стр.Исполнитель)=Неопределено Тогда
				МасИсп.Добавить(Стр.Исполнитель);
			КонецЕсли; 
			ДобавитьАдресат(Стр.Исполнитель,ТЗОценки,ТЗРезультат);
		КонецЦикла;
		Для каждого Эл Из МасИсп Цикл
			ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(Эл,ДокОбещание);
		КонецЦикла; 
		
		
		
		ОбъектыПривязкиОценкаПриИзмененииСервер(ДокОбещание);
		УдалитьЛишниеАдресаты(ТЗОценки,ДокОбещание);
		ДокОбещание.ДатаКонтроляОценки=ТекущаяДата();
		КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		Для Сч=0 По КолСтр Цикл
			Если МасУд.Найти(ДокОбещание.ОбъектыПривязки[КолСтр-Сч].НомерСтроки)<>Неопределено Тогда
				ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
			КонецЕсли; 
		КонецЦикла; 
		
		
		ДокОбещание.Записать();
		ТЗАдресатов=ТЗОценки.Скопировать();
		ТЗАдресатов.Свернуть("ФизЛицо");
		МассивАдресов=ТЗАдресатов.ВыгрузитьКолонку("ФизЛицо");
		Для каждого Эл Из МассивАдресов Цикл
			ОтправитьПисьмоОбИндивилуальныхОценках(ДокОбещание,Эл,ТЗОценки,СоотПисемОбОценках,ТЗЭлАдреса);
		КонецЦикла;
	ИначеЕсли ДокОбещание.Номер="000000015" Тогда
		ТЗОценки=Новый ТаблицаЗначений;
		ТЗОценки.Колонки.Добавить("ФизЛицо");
		ТЗОценки.Колонки.Добавить("МасСтрок");
		ТЗРезультат=ПолучитьТаблицуРезультатаОбещания15();
		
		КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		Для Сч=0 По КолСтр Цикл
			Если ТЗРезультат.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница",ДокОбещание.ОбъектыПривязки[КолСтр-Сч].СтруктурнаяЕдиница)).Количество()=0 Тогда
				ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
			КонецЕсли; 
		КонецЦикла; 
		
		КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		Для Сч=0 По КолСтр Цикл
			Если ТЗРезультат.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница",ДокОбещание.ОбъектыПривязки[КолСтр-Сч].СтруктурнаяЕдиница)).Количество()=0 Тогда
				ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
			КонецЕсли; 
		КонецЦикла; 
		
		Для каждого СтрРез Из ТЗРезультат Цикл
			МасСтр=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница",СтрРез.СтруктурнаяЕдиница));
			Если Не ЗначениеЗаполнено(СтрРез.РольПользователя) Тогда
				Продолжить;
			КонецЕсли; 
			СоставРоли=ТЗРоли.НайтиСтроки(Новый Структура("Ссылка",СтрРез.РольПользователя));
			Если МасСтр.Количество()=0 Тогда
				Если СоставРоли.Количество()>0 Тогда
					Стр=ДокОбещание.ОбъектыПривязки.Добавить();
					Стр.СтруктурнаяЕдиница=СтрРез.СтруктурнаяЕдиница;	
					Стр.Исполнитель=СоставРоли[0].Сотрудник;
					Исполнитель=Стр.Исполнитель;
				Иначе
					Продолжить;
				КонецЕсли; 
			Иначе	                                                   
				Стр=МасСтр[0];
				Если СоставРоли.Количество()>0 Тогда
					Исполнитель=Стр.Исполнитель;
					Стр.Исполнитель=СоставРоли[0].Сотрудник;
				Иначе
					Продолжить;
				КонецЕсли; 
			КонецЕсли; 
			
			
			Если СтрРез.РезультатОбращения<=1 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
			ИначеЕсли СтрРез.РезультатОбращения<=3 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
			Иначе	
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;
			КонецЕсли; 
			
			Если  ЗначениеЗаполнено(Стр.Исполнитель) и ЗначениеЗаполнено(Стр.СтруктурнаяЕдиница) и (Не Оценка=Стр.Оценка или Не Исполнитель=Стр.Исполнитель)  Тогда
				Стр.Оценка=Оценка;
			иначе
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр.Оценка) Тогда
				Стр.ДатаИзменения=ТекущаяДата();
			КонецЕсли;
			
			ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(Стр.Исполнитель,ДокОбещание);
			
			ДобавитьАдресат(Стр.Исполнитель,ТЗОценки,ТЗРезультат);
		КонецЦикла;
		ОбъектыПривязкиОценкаПриИзмененииСервер(ДокОбещание);
		УдалитьЛишниеАдресаты(ТЗОценки,ДокОбещание);
		ДокОбещание.ДатаКонтроляОценки=ТекущаяДата();	
		ДокОбещание.Записать();
		ТЗАдресатов=ТЗОценки.Скопировать();
		ТЗАдресатов.Свернуть("ФизЛицо");
		МассивАдресов=ТЗАдресатов.ВыгрузитьКолонку("ФизЛицо");
		Для каждого Эл Из МассивАдресов Цикл
			ОтправитьПисьмоОбИндивилуальныхОценках(ДокОбещание,Эл,ТЗОценки,СоотПисемОбОценках,ТЗЭлАдреса);
		КонецЦикла;
	ИначеЕсли ДокОбещание.Номер="000000016" Тогда
		ТЗОценки=Новый ТаблицаЗначений;
		ТЗОценки.Колонки.Добавить("ФизЛицо");
		ТЗОценки.Колонки.Добавить("МасСтрок");
		ТЗРезультат=ПолучитьТаблицуРезультатаОбещания16();
		УдалитьЛишниеСтроки(ДокОбещание);		
		МасУд=Новый Массив;
		МасИсп=Новый Массив;
		Для каждого СтрРез Из ТЗРезультат Цикл
			МасСтр=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница,Исполнитель,Дата",СтрРез.СтруктурнаяЕдиница,СтрРез.Сотрудник,СтрРез.ДатаДок));
			Если СтрРез.РезультатОбращения=0 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
			ИначеЕсли СтрРез.РезультатОбращения=1 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
			Иначе	
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;
			КонецЕсли; 
			ТекОценка=Неопределено;
			Если НЕ МасСтр.Количество()=0 Тогда
				ТекОценка=МасСтр[0].Оценка;
			КонецЕсли; 
			
			
			
			МасСтрВсе=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Исполнитель",СтрРез.Сотрудник));
			ТЗПоСотр=Новый ТаблицаЗначений;
			ТЗПоСотр.Колонки.Добавить("Дата");
			ТЗПоСотр.Колонки.Добавить("НомСтр");
			ТЗПоСотр.Колонки.Добавить("Оценка");
			
			Для каждого Эл Из МасСтрВсе Цикл
				Если Эл.Дата<СтрРез.ДатаДок Тогда
					НовСтр=ТЗПоСотр.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтр,Эл);	
					НовСтр.НомСтр=Эл.НомерСтроки;
				КонецЕсли; 
			КонецЦикла; 
			ТЗПоСотр.Сортировать("Дата");
			Если ТЗПоСотр.Количество() Тогда
				Если ТЗПоСотр[ТЗПоСотр.Количество()-1].Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется И
					Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется Тогда
					
					Если НЕ ТекОценка=Неопределено Тогда
				    	МасУд.Добавить(МасСтр[0].НомерСтроки);
					КонецЕсли; 
					
				    Продолжить;
				
				КонецЕсли; 
				
				
				
				Если ТЗПоСотр[ТЗПоСотр.Количество()-1].Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется 
					И (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
					ИЛИ Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется) И
					ДобавитьМесяц(СтрРез.ДатаДок,-1)<ТЗПоСотр[ТЗПоСотр.Количество()-1].Дата Тогда
					Если НЕ ТекОценка=Неопределено  Тогда
		    			МасУд.Добавить(МасСтр[0].НомерСтроки);
					КонецЕсли; 
			    	Продолжить;
					
				КонецЕсли; 
				Если (ТЗПоСотр[ТЗПоСотр.Количество()-1].Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется) 
					И Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется И
					ДобавитьМесяц(СтрРез.ДатаДок,-1)<ТЗПоСотр[ТЗПоСотр.Количество()-1].Дата Тогда
					Если НЕ ТекОценка=Неопределено  Тогда
		    			МасУд.Добавить(МасСтр[0].НомерСтроки);
					КонецЕсли; 
			   		Продолжить;
				КонецЕсли; 

			КонецЕсли; 
			
			ПрошлаяОценка=Неопределено;
			Для каждого СтрОцФЛ Из ТЗПоСотр Цикл
				Если МасУд.Найти(СтрОцФЛ.НомСтр)=Неопределено Тогда
					ПрошлаяОценка=СтрОцФЛ.Оценка;
				КонецЕсли; 
			КонецЦикла; 
			
			Если МасСтр.Количество()=0 Тогда
				//	Если СоставРоли.Количество()>0 Тогда
				Стр=ДокОбещание.ОбъектыПривязки.Добавить();
				Стр.СтруктурнаяЕдиница=СтрРез.СтруктурнаяЕдиница;	
				Стр.Исполнитель=СтрРез.Сотрудник;
				Стр.Дата=СтрРез.ДатаДок;
				Исполнитель=Стр.Исполнитель;
				//Иначе
				//	Продолжить;
				//КонецЕсли; 
			Иначе	                                                   
				Стр=МасСтр[0];
				//Если СоставРоли.Количество()>0 Тогда
				Исполнитель=Стр.Исполнитель;
				Стр.Исполнитель=СтрРез.Сотрудник;
				//Иначе
				//	Продолжить;
				//КонецЕсли; 
			КонецЕсли; 
			
			
				
			ДопСообщение="";
			Если (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
				или Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется) Тогда
				ДопСообщение="
				|";
				МасСтрок=СтрРез.МасСтрок.Получить();
				Для каждого СтрДоп Из МасСтрок Цикл
					ДопСообщение=ДопСообщение+"
					|"+СтрДоп.ДатаДок+" "+СтрДоп.СтруктурнаяЕдиница+" "+СтрДоп.РезультатОбращения+" "+СтрДоп.Номенклатура+" "+СтрДоп.Производитель+" "+Строка(СтрДоп.ТипЖалобы);
				КонецЦикла; 
			КонецЕсли;
			Стр.Описание=ДопСообщение;
			Стр.ОписаниеДоп="Оценка проставляется исходя из жалоб «Продажа просроченной продукции» (06_9)
			|«Не подтверждена» не учитывать. Нет жалоб -  исполняется.  одна – частично. Больше одной – не исполняется.";
			
			
			
			Если  ЗначениеЗаполнено(Стр.Исполнитель) и ЗначениеЗаполнено(Стр.СтруктурнаяЕдиница) и (Не Оценка=Стр.Оценка или Не Исполнитель=Стр.Исполнитель) Тогда
				Стр.Динамика=ПолучитьДинамикуОценки(ПрошлаяОценка,Оценка);
				Стр.Оценка=Оценка;
			иначе
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр.Оценка) Тогда
				Стр.ДатаИзменения=ТекущаяДата();
			КонецЕсли;
			
			Если МасИсп.Найти(Стр.Исполнитель)=Неопределено Тогда
				МасИсп.Добавить(Стр.Исполнитель);
			КонецЕсли; 
			ДобавитьАдресат(Стр.Исполнитель,ТЗОценки,ТЗРезультат);
		КонецЦикла;
		Для каждого Эл Из МасИсп Цикл
			ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(Эл,ДокОбещание);
		КонецЦикла; 
		
		ОбъектыПривязкиОценкаПриИзмененииСервер(ДокОбещание);
		УдалитьЛишниеАдресаты(ТЗОценки,ДокОбещание);
		ДокОбещание.ДатаКонтроляОценки=ТекущаяДата();	
		КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		Для Сч=0 По КолСтр Цикл
			Если МасУд.Найти(ДокОбещание.ОбъектыПривязки[КолСтр-Сч].НомерСтроки)<>Неопределено Тогда
				ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
			КонецЕсли; 
		КонецЦикла; 
		
		
		ДокОбещание.Записать();
		ТЗАдресатов=ТЗОценки.Скопировать();
		ТЗАдресатов.Свернуть("ФизЛицо");
		МассивАдресов=ТЗАдресатов.ВыгрузитьКолонку("ФизЛицо");
		Для каждого Эл Из МассивАдресов Цикл
			ОтправитьПисьмоОбИндивилуальныхОценках(ДокОбещание,Эл,ТЗОценки,СоотПисемОбОценках,ТЗЭлАдреса);
		КонецЦикла;

	ИначеЕсли ДокОбещание.Номер="000000017" Тогда
		ТЗОценки=Новый ТаблицаЗначений;
		ТЗОценки.Колонки.Добавить("ФизЛицо");
		ТЗОценки.Колонки.Добавить("МасСтрок");
		ТЗРезультат=ПолучитьТаблицуРезультатаОбещания17();
		УдалитьЛишниеСтроки(ДокОбещание);		
		МасУд=Новый Массив;
		МасИсп=Новый Массив;
		Для каждого СтрРез Из ТЗРезультат Цикл
			МасСтр=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница,Исполнитель,Дата",СтрРез.СтруктурнаяЕдиница,СтрРез.Сотрудник,СтрРез.ДатаДок));
			Если СтрРез.РезультатОбращения=0 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
			ИначеЕсли СтрРез.РезультатОбращения=1 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
			Иначе	
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;
			КонецЕсли; 
			ТекОценка=Неопределено;
			Если НЕ МасСтр.Количество()=0 Тогда
				ТекОценка=МасСтр[0].Оценка;
			КонецЕсли; 
			
			
			
			МасСтрВсе=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Исполнитель",СтрРез.Сотрудник));
			ТЗПоСотр=Новый ТаблицаЗначений;
			ТЗПоСотр.Колонки.Добавить("Дата");
			ТЗПоСотр.Колонки.Добавить("НомСтр");
			ТЗПоСотр.Колонки.Добавить("Оценка");
			
			Для каждого Эл Из МасСтрВсе Цикл
				Если Эл.Дата<СтрРез.ДатаДок Тогда
					НовСтр=ТЗПоСотр.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтр,Эл);	
					НовСтр.НомСтр=Эл.НомерСтроки;
				КонецЕсли; 
			КонецЦикла; 
			ТЗПоСотр.Сортировать("Дата");
			Если ТЗПоСотр.Количество() Тогда
				Если ТЗПоСотр[ТЗПоСотр.Количество()-1].Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется И
					Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется Тогда
					
					Если НЕ ТекОценка=Неопределено Тогда
				    	МасУд.Добавить(МасСтр[0].НомерСтроки);
					КонецЕсли; 
					
				    Продолжить;
				
				КонецЕсли; 
				
				
				
				Если ТЗПоСотр[ТЗПоСотр.Количество()-1].Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется 
					И (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
					ИЛИ Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется) И
					ДобавитьМесяц(СтрРез.ДатаДок,-1)<ТЗПоСотр[ТЗПоСотр.Количество()-1].Дата Тогда
					Если НЕ ТекОценка=Неопределено  Тогда
		    			МасУд.Добавить(МасСтр[0].НомерСтроки);
					КонецЕсли; 
			    	Продолжить;
					
				КонецЕсли; 
				Если (ТЗПоСотр[ТЗПоСотр.Количество()-1].Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется) 
					И Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется И
					ДобавитьМесяц(СтрРез.ДатаДок,-1)<ТЗПоСотр[ТЗПоСотр.Количество()-1].Дата Тогда
					Если НЕ ТекОценка=Неопределено  Тогда
		    			МасУд.Добавить(МасСтр[0].НомерСтроки);
					КонецЕсли; 
			   		Продолжить;
				КонецЕсли; 

			КонецЕсли; 
			ПрошлаяОценка=Неопределено;
			Для каждого СтрОцФЛ Из ТЗПоСотр Цикл
				Если МасУд.Найти(СтрОцФЛ.НомСтр)=Неопределено Тогда
					ПрошлаяОценка=СтрОцФЛ.Оценка;
				КонецЕсли; 
			КонецЦикла; 
			
			
			Если МасСтр.Количество()=0 Тогда
				//	Если СоставРоли.Количество()>0 Тогда
				Стр=ДокОбещание.ОбъектыПривязки.Добавить();
				Стр.СтруктурнаяЕдиница=СтрРез.СтруктурнаяЕдиница;	
				Стр.Исполнитель=СтрРез.Сотрудник;
				Стр.Дата=СтрРез.ДатаДок;
				Исполнитель=Стр.Исполнитель;
				//Иначе
				//	Продолжить;
				//КонецЕсли; 
			Иначе	                                                   
				Стр=МасСтр[0];
				//Если СоставРоли.Количество()>0 Тогда
				Исполнитель=Стр.Исполнитель;
				Стр.Исполнитель=СтрРез.Сотрудник;
				//Иначе
				//	Продолжить;
				//КонецЕсли; 
			КонецЕсли; 
			
			
			
			ДопСообщение="";
			Если (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
				или Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется) Тогда
				ДопСообщение="
				|";
				МасСтрок=СтрРез.МасСтрок.Получить();
				Для каждого СтрДоп Из МасСтрок Цикл
					ДопСообщение=ДопСообщение+"
					|"+СтрДоп.ДатаДок+" "+СтрДоп.СтруктурнаяЕдиница+" "+СтрДоп.РезультатОбращения+" "+СтрДоп.Номенклатура+" "+СтрДоп.Производитель+" "+Строка(СтрДоп.ТипЖалобы);
				КонецЦикла; 
			КонецЕсли;
			Стр.Описание=ДопСообщение;
			Стр.ОписаниеДоп="Оценка проставляется исходя из жалоб «Ошибка в оформлении возврата» (06_11)  «Не подтверждена» не учитывать.
			|(проблемы с возвратом через курьера так же вносятся в реестр)
			|Нет жалоб -  исполняется.  Одна – частично. Больше одной – не исполняется.";
			
			
			
			Если  ЗначениеЗаполнено(Стр.Исполнитель) и ЗначениеЗаполнено(Стр.СтруктурнаяЕдиница) и (Не Оценка=Стр.Оценка или Не Исполнитель=Стр.Исполнитель) Тогда
				Стр.Динамика=ПолучитьДинамикуОценки(ПрошлаяОценка,Оценка);
				Стр.Оценка=Оценка;
			иначе
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр.Оценка) Тогда
				Стр.ДатаИзменения=ТекущаяДата();
			КонецЕсли;
			
			Если МасИсп.Найти(Стр.Исполнитель)=Неопределено Тогда
				МасИсп.Добавить(Стр.Исполнитель);
			КонецЕсли; 
			ДобавитьАдресат(Стр.Исполнитель,ТЗОценки,ТЗРезультат);
		КонецЦикла;
		Для каждого Эл Из МасИсп Цикл
			ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(Эл,ДокОбещание);
		КонецЦикла; 
		
		ОбъектыПривязкиОценкаПриИзмененииСервер(ДокОбещание);
		УдалитьЛишниеАдресаты(ТЗОценки,ДокОбещание);
		ДокОбещание.ДатаКонтроляОценки=ТекущаяДата();	
		КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		Для Сч=0 По КолСтр Цикл
			Если МасУд.Найти(ДокОбещание.ОбъектыПривязки[КолСтр-Сч].НомерСтроки)<>Неопределено Тогда
				ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
			КонецЕсли; 
		КонецЦикла; 
		
		ДокОбещание.Записать();
		ТЗАдресатов=ТЗОценки.Скопировать();
		ТЗАдресатов.Свернуть("ФизЛицо");
		МассивАдресов=ТЗАдресатов.ВыгрузитьКолонку("ФизЛицо");
		Для каждого Эл Из МассивАдресов Цикл
			ОтправитьПисьмоОбИндивилуальныхОценках(ДокОбещание,Эл,ТЗОценки,СоотПисемОбОценках,ТЗЭлАдреса);
		КонецЦикла;

	ИначеЕсли ДокОбещание.Номер="000000020" Тогда
		ТЗОценки=Новый ТаблицаЗначений;
		ТЗОценки.Колонки.Добавить("ФизЛицо");
		ТЗОценки.Колонки.Добавить("МасСтрок");
		ТЗРезультат=ПолучитьТаблицуРезультатаОбещания20();
		УдалитьЛишниеСтроки(ДокОбещание);		
		//КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		//Для Сч=0 По КолСтр Цикл
		//	Если ТЗРезультат.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница",ДокОбещание.ОбъектыПривязки[КолСтр-Сч].СтруктурнаяЕдиница)).Количество()=0 Тогда
		//		ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
		//	КонецЕсли; 
		//КонецЦикла; 
		МасИсп=Новый Массив;
		МасУд=Новый Массив;
		Для каждого СтрРез Из ТЗРезультат Цикл
			МасСтр=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница,Исполнитель,Дата",СтрРез.СтруктурнаяЕдиница,СтрРез.Сотрудник,СтрРез.ДатаДок));
			Если СтрРез.РезультатОбращения=0 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
			ИначеЕсли СтрРез.РезультатОбращения=1 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
			Иначе	
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;
			КонецЕсли; 
			ТекОценка=Неопределено;
			Если НЕ МасСтр.Количество()=0 Тогда
				ТекОценка=МасСтр[0].Оценка;
			КонецЕсли; 
			
			
			
			МасСтрВсе=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Исполнитель",СтрРез.Сотрудник));
			ТЗПоСотр=Новый ТаблицаЗначений;
			ТЗПоСотр.Колонки.Добавить("Дата");
			ТЗПоСотр.Колонки.Добавить("НомСтр");
			ТЗПоСотр.Колонки.Добавить("Оценка");
			
			Для каждого Эл Из МасСтрВсе Цикл
				Если Эл.Дата<СтрРез.ДатаДок Тогда
					НовСтр=ТЗПоСотр.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтр,Эл);	
					НовСтр.НомСтр=Эл.НомерСтроки;
				КонецЕсли; 
			КонецЦикла; 
			ТЗПоСотр.Сортировать("Дата");
			Если ТЗПоСотр.Количество() Тогда
				Если ТЗПоСотр[ТЗПоСотр.Количество()-1].Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется И
					Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется Тогда
					
					Если НЕ ТекОценка=Неопределено Тогда
				    	МасУд.Добавить(МасСтр[0].НомерСтроки);
					КонецЕсли; 
					
				    Продолжить;
				
				КонецЕсли; 
				
				
				
				Если ТЗПоСотр[ТЗПоСотр.Количество()-1].Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется 
					И (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
					ИЛИ Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется) И
					ДобавитьМесяц(СтрРез.ДатаДок,-1)<ТЗПоСотр[ТЗПоСотр.Количество()-1].Дата Тогда
					Если НЕ ТекОценка=Неопределено  Тогда
		    			МасУд.Добавить(МасСтр[0].НомерСтроки);
					КонецЕсли; 
			    	Продолжить;
					
				КонецЕсли; 
				Если (ТЗПоСотр[ТЗПоСотр.Количество()-1].Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется) 
					И Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется И
					ДобавитьМесяц(СтрРез.ДатаДок,-1)<ТЗПоСотр[ТЗПоСотр.Количество()-1].Дата Тогда
					Если НЕ ТекОценка=Неопределено  Тогда
		    			МасУд.Добавить(МасСтр[0].НомерСтроки);
					КонецЕсли; 
			   		Продолжить;
				КонецЕсли; 

			КонецЕсли; 
			
			
			ПрошлаяОценка=Неопределено;
			Для каждого СтрОцФЛ Из ТЗПоСотр Цикл
				Если МасУд.Найти(СтрОцФЛ.НомСтр)=Неопределено Тогда
					ПрошлаяОценка=СтрОцФЛ.Оценка;
				КонецЕсли; 
			КонецЦикла; 
			
			
			Если МасСтр.Количество()=0 Тогда
				//	Если СоставРоли.Количество()>0 Тогда
				Стр=ДокОбещание.ОбъектыПривязки.Добавить();
				Стр.СтруктурнаяЕдиница=СтрРез.СтруктурнаяЕдиница;	
				Стр.Исполнитель=СтрРез.Сотрудник;
				Стр.Дата=СтрРез.ДатаДок;
				Исполнитель=Стр.Исполнитель;
				//Иначе
				//	Продолжить;
				//КонецЕсли; 
			Иначе	                                                   
				Стр=МасСтр[0];
				//Если СоставРоли.Количество()>0 Тогда
				Исполнитель=Стр.Исполнитель;
				Стр.Исполнитель=СтрРез.Сотрудник;
				//Иначе
				//	Продолжить;
				//КонецЕсли; 
			КонецЕсли; 
			
			
			
			ДопСообщение="";
			Если (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
				или Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется) Тогда
				ДопСообщение="
				|";
				МасСтрок=СтрРез.МасСтрок.Получить();
				Для каждого СтрДоп Из МасСтрок Цикл
					ДопСообщение=ДопСообщение+"
					|"+СтрДоп.ДатаДок+" "+СтрДоп.СтруктурнаяЕдиница+" "+СтрДоп.РезультатОбращения+" "+СтрДоп.Номенклатура+" "+СтрДоп.Производитель+" "+Строка(СтрДоп.ТипЖалобы);
				КонецЦикла; 
			КонецЕсли;
			Стр.Описание=ДопСообщение;
			Стр.ОписаниеДоп="Оценка проставляется исходя из жалоб «Очередь»(06_1) «Не подтверждена» не учитывать.
			|Нет жалоб -  исполняется.  Одна – частично. Больше одной – не исполняется.";
			
			
			
			Если  ЗначениеЗаполнено(Стр.Исполнитель) и ЗначениеЗаполнено(Стр.СтруктурнаяЕдиница) и (Не Оценка=Стр.Оценка или Не Исполнитель=Стр.Исполнитель) Тогда
				Стр.Динамика=ПолучитьДинамикуОценки(ПрошлаяОценка,Оценка);
				Стр.Оценка=Оценка;
			иначе
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр.Оценка) Тогда
				Стр.ДатаИзменения=ТекущаяДата();
			КонецЕсли;
			
			Если МасИсп.Найти(Стр.Исполнитель)=Неопределено Тогда
				МасИсп.Добавить(Стр.Исполнитель);
			КонецЕсли; 
			ДобавитьАдресат(Стр.Исполнитель,ТЗОценки,ТЗРезультат);
		КонецЦикла;
		Для каждого Эл Из МасИсп Цикл
			ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(Эл,ДокОбещание);
		КонецЦикла; 
		
		ОбъектыПривязкиОценкаПриИзмененииСервер(ДокОбещание);
		УдалитьЛишниеАдресаты(ТЗОценки,ДокОбещание);
		ДокОбещание.ДатаКонтроляОценки=ТекущаяДата();
		КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		Для Сч=0 По КолСтр Цикл
			Если МасУд.Найти(ДокОбещание.ОбъектыПривязки[КолСтр-Сч].НомерСтроки)<>Неопределено Тогда
				ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
			КонецЕсли; 
		КонецЦикла; 
		
		ДокОбещание.Записать();
		ТЗАдресатов=ТЗОценки.Скопировать();
		ТЗАдресатов.Свернуть("ФизЛицо");
		МассивАдресов=ТЗАдресатов.ВыгрузитьКолонку("ФизЛицо");
		Для каждого Эл Из МассивАдресов Цикл
			ОтправитьПисьмоОбИндивилуальныхОценках(ДокОбещание,Эл,ТЗОценки,СоотПисемОбОценках,ТЗЭлАдреса);
		КонецЦикла;

	ИначеЕсли ДокОбещание.Номер="000000019" Тогда
		ТЗОценки=Новый ТаблицаЗначений;
		ТЗОценки.Колонки.Добавить("ФизЛицо");
		ТЗОценки.Колонки.Добавить("МасСтрок");
		ТЗРезультат=ПолучитьТаблицуРезультатаОбещания19();
		УдалитьЛишниеСтроки(ДокОбещание);		
		//КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		//Для Сч=0 По КолСтр Цикл
		//	Если ТЗРезультат.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница",ДокОбещание.ОбъектыПривязки[КолСтр-Сч].СтруктурнаяЕдиница)).Количество()=0 Тогда
		//		ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
		//	КонецЕсли; 
		//КонецЦикла; 
		МасИсп=Новый Массив;
		МасУд=Новый Массив;
		Для каждого СтрРез Из ТЗРезультат Цикл
			МасСтр=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница,Исполнитель,Дата",СтрРез.СтруктурнаяЕдиница,СтрРез.Сотрудник,СтрРез.ДатаДок));
			Если СтрРез.РезультатОбращения<=1 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
			ИначеЕсли СтрРез.РезультатОбращения<=5 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
			Иначе	
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;
			КонецЕсли; 
			ТекОценка=Неопределено;
			Если НЕ МасСтр.Количество()=0 Тогда
				ТекОценка=МасСтр[0].Оценка;
			КонецЕсли; 
			
			
			
			МасСтрВсе=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Исполнитель",СтрРез.Сотрудник));
			ТЗПоСотр=Новый ТаблицаЗначений;
			ТЗПоСотр.Колонки.Добавить("Дата");
			ТЗПоСотр.Колонки.Добавить("НомСтр");
			ТЗПоСотр.Колонки.Добавить("Оценка");
			
			Для каждого Эл Из МасСтрВсе Цикл
				Если Эл.Дата<СтрРез.ДатаДок Тогда
					НовСтр=ТЗПоСотр.Добавить();
					ЗаполнитьЗначенияСвойств(НовСтр,Эл);	
					НовСтр.НомСтр=Эл.НомерСтроки;
				КонецЕсли; 
			КонецЦикла; 
			ТЗПоСотр.Сортировать("Дата");
			Если ТЗПоСотр.Количество() Тогда
				Если ТЗПоСотр[ТЗПоСотр.Количество()-1].Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется И
					Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется Тогда
					
					Если НЕ ТекОценка=Неопределено Тогда
				    	МасУд.Добавить(МасСтр[0].НомерСтроки);
					КонецЕсли; 
					
				    Продолжить;
				
				КонецЕсли; 
				
				
				
				Если ТЗПоСотр[ТЗПоСотр.Количество()-1].Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется 
					И (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
					ИЛИ Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется) И
					ДобавитьМесяц(СтрРез.ДатаДок,-1)<ТЗПоСотр[ТЗПоСотр.Количество()-1].Дата Тогда
					Если НЕ ТекОценка=Неопределено  Тогда
		    			МасУд.Добавить(МасСтр[0].НомерСтроки);
					КонецЕсли; 
			    	Продолжить;
					
				КонецЕсли; 
				Если (ТЗПоСотр[ТЗПоСотр.Количество()-1].Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется) 
					И Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется И
					ДобавитьМесяц(СтрРез.ДатаДок,-1)<ТЗПоСотр[ТЗПоСотр.Количество()-1].Дата Тогда
					Если НЕ ТекОценка=Неопределено  Тогда
		    			МасУд.Добавить(МасСтр[0].НомерСтроки);
					КонецЕсли; 
			   		Продолжить;
				КонецЕсли; 

			КонецЕсли; 
			
			ПрошлаяОценка=Неопределено;
			Для каждого СтрОцФЛ Из ТЗПоСотр Цикл
				Если МасУд.Найти(СтрОцФЛ.НомСтр)=Неопределено Тогда
					ПрошлаяОценка=СтрОцФЛ.Оценка;
				КонецЕсли; 
			КонецЦикла; 
			
			
			Если МасСтр.Количество()=0 Тогда
				//	Если СоставРоли.Количество()>0 Тогда
				Стр=ДокОбещание.ОбъектыПривязки.Добавить();
				Стр.СтруктурнаяЕдиница=СтрРез.СтруктурнаяЕдиница;	
				Стр.Исполнитель=СтрРез.Сотрудник;
				Стр.Дата=СтрРез.ДатаДок;
				Исполнитель=Стр.Исполнитель;
				//Иначе
				//	Продолжить;
				//КонецЕсли; 
			Иначе	                                                   
				Стр=МасСтр[0];
				//Если СоставРоли.Количество()>0 Тогда
				Исполнитель=Стр.Исполнитель;
				Стр.Исполнитель=СтрРез.Сотрудник;
				//Иначе
				//	Продолжить;
				//КонецЕсли; 
			КонецЕсли; 
			
			
			
			ДопСообщение="";
			Если (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
				или Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется) Тогда
				ДопСообщение="
				|";
				МасСтрок=СтрРез.МасСтрок.Получить();
				Для каждого СтрДоп Из МасСтрок Цикл
					ДопСообщение=ДопСообщение+"
					|"+СтрДоп.ДатаДок+" "+СтрДоп.СтруктурнаяЕдиница+" "+СтрДоп.РезультатОбращения+" "+СтрДоп.Номенклатура+" "+СтрДоп.Производитель+" "+Строка(СтрДоп.ТипЖалобы);
				КонецЦикла; 
			КонецЕсли;
			Стр.Описание=ДопСообщение;
			Стр.ОписаниеДоп="Оценка проставляется исходя из жалоб: коробки/некорректный разбор поставки; 
			|запутанная выкладка/ некорректные ценники; нарушение санитарных норм, нарушение температурного режима. 
			|«Не подтверждена» не учитывать. Не более 1 обращения  – исполняется. Не более 5 – частично исполняется. Более 5 – не исполняется.";
			
			
			
			Если  ЗначениеЗаполнено(Стр.Исполнитель) и ЗначениеЗаполнено(Стр.СтруктурнаяЕдиница) и (Не Оценка=Стр.Оценка или Не Исполнитель=Стр.Исполнитель) Тогда
				Стр.Динамика=ПолучитьДинамикуОценки(ПрошлаяОценка,Оценка);
				Стр.Оценка=Оценка;
			иначе
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр.Оценка) Тогда
				Стр.ДатаИзменения=ТекущаяДата();
			КонецЕсли;
			
			Если МасИсп.Найти(Стр.Исполнитель)=Неопределено Тогда
				МасИсп.Добавить(Стр.Исполнитель);
			КонецЕсли; 
			ДобавитьАдресат(Стр.Исполнитель,ТЗОценки,ТЗРезультат);
		КонецЦикла;
		Для каждого Эл Из МасИсп Цикл
			ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(Эл,ДокОбещание);
		КонецЦикла; 
		
		ОбъектыПривязкиОценкаПриИзмененииСервер(ДокОбещание);
		УдалитьЛишниеАдресаты(ТЗОценки,ДокОбещание);
		ДокОбещание.ДатаКонтроляОценки=ТекущаяДата();	
		КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		Для Сч=0 По КолСтр Цикл
			Если МасУд.Найти(ДокОбещание.ОбъектыПривязки[КолСтр-Сч].НомерСтроки)<>Неопределено Тогда
				ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
			КонецЕсли; 
		КонецЦикла; 
		
		ДокОбещание.Записать();
		ТЗАдресатов=ТЗОценки.Скопировать();
		ТЗАдресатов.Свернуть("ФизЛицо");
		МассивАдресов=ТЗАдресатов.ВыгрузитьКолонку("ФизЛицо");
		Для каждого Эл Из МассивАдресов Цикл
			ОтправитьПисьмоОбИндивилуальныхОценках(ДокОбещание,Эл,ТЗОценки,СоотПисемОбОценках,ТЗЭлАдреса);
		КонецЦикла;

	ИначеЕсли ДокОбещание.Номер="000000003" Тогда
		ТЗОценки=Новый ТаблицаЗначений;
		ТЗОценки.Колонки.Добавить("ФизЛицо");
		ТЗОценки.Колонки.Добавить("МасСтрок");
		ТЗРезультат=ПолучитьТаблицуРезультатаОбещания03();
		
		КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		Для Сч=0 По КолСтр Цикл
			Если ТЗРезультат.НайтиСтроки(Новый Структура("Технолог",ДокОбещание.ОбъектыПривязки[КолСтр-Сч].Технолог)).Количество()=0 Тогда
				ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
			КонецЕсли; 
		КонецЦикла; 
		
		Для каждого СтрРез Из ТЗРезультат Цикл
			Если Не ЗначениеЗаполнено(СтрРез.РольПользователя) Тогда
				Продолжить;
			КонецЕсли; 
			МасСтр=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Технолог",СтрРез.Технолог));
			СоставРоли=ТЗРоли.НайтиСтроки(Новый Структура("Ссылка",СтрРез.РольПользователя));
			Если МасСтр.Количество()=0 Тогда
				Если СоставРоли.Количество()>0 Тогда
					Стр=ДокОбещание.ОбъектыПривязки.Добавить();
					Стр.Технолог=СтрРез.Технолог;	
					Стр.Исполнитель=СоставРоли[0].Сотрудник;
					Исполнитель=Стр.Исполнитель;
					Активный=СоставРоли[0].Активный;
					
				Иначе
					Продолжить;
				КонецЕсли; 
			Иначе	                                                   
				Стр=МасСтр[0];
				Если СоставРоли.Количество()>0 Тогда
					Исполнитель=Стр.Исполнитель;
					Стр.Исполнитель=СоставРоли[0].Сотрудник;
					Активный=СоставРоли[0].Активный;
				Иначе
					Продолжить;
				КонецЕсли; 
			КонецЕсли; 
			
			
			Если СтрРез.РезультатОбращения<=1 ИЛИ Не Активный Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
			ИначеЕсли СтрРез.РезультатОбращения<=15 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
			Иначе	
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;
			КонецЕсли;
			
			ДопСообщение="";
			Если (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
				или Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется) Тогда
				ДопСообщение="
				|";
				МасСтрок=СтрРез.МасСтрок.Получить();
				Для каждого СтрДоп Из МасСтрок Цикл
					ДопСообщение=ДопСообщение+"
					|"+СтрДоп.ДатаДок+" "+СтрДоп.СтруктурнаяЕдиница+" "+СтрДоп.РезультатОбращения+" "+СтрДоп.Номенклатура+" "+СтрДоп.Производитель+" "+Строка(СтрДоп.ТипЖалобы);
				КонецЦикла; 
			КонецЕсли;
			Стр.Описание=ДопСообщение;
			Стр.ОписаниеДоп="Обращения, тип 4. Считается в разрезе Номенклатура/Производитель за месяц количество позиций, у которых обращений было больше равно 2 (для молочки - 3) у каждого технолога.
			|Считается так - 1 продукт-производитель - допустимо, 15 - частично исполняется обещание, 16 и более - полностью не исполняется.
			|Если по всем технологам продакта полностью (не) исполняется, тогда полностью (не) исполняется, в остальных случаях - частично исполняется.
			|Определение оценки производится ежедневно";
			
			Стр.Динамика=ПолучитьДинамикуОценки(Стр.Оценка,Оценка);
			Если  ЗначениеЗаполнено(Стр.Исполнитель) и ЗначениеЗаполнено(Стр.Технолог) и (Не Оценка=Стр.Оценка или Не Исполнитель=Стр.Исполнитель)  Тогда
				Стр.Оценка=Оценка;
			иначе
				ЗаполнитьОписание(Стр.Исполнитель,ДокОбещание);
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр.Оценка) Тогда
				Стр.ДатаИзменения=ТекущаяДата();
			КонецЕсли;
			
			ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(Стр.Исполнитель,ДокОбещание);
			
			ДобавитьАдресат(Стр.Исполнитель,ТЗОценки,ТЗРезультат,СтрРез);
		КонецЦикла;
		ОбъектыПривязкиОценкаПриИзмененииСервер(ДокОбещание);
		УдалитьЛишниеАдресаты(ТЗОценки,ДокОбещание);
		ДокОбещание.ДатаКонтроляОценки=ТекущаяДата();	
		ДокОбещание.Записать();
		ТЗАдресатов=ТЗОценки.Скопировать();
		ТЗАдресатов.Свернуть("ФизЛицо");
		МассивАдресов=ТЗАдресатов.ВыгрузитьКолонку("ФизЛицо");
		Для каждого Эл Из МассивАдресов Цикл
			ОтправитьПисьмоОбИндивилуальныхОценках(ДокОбещание,Эл,ТЗОценки,СоотПисемОбОценках,ТЗЭлАдреса);
		КонецЦикла;
		
	ИначеЕсли ДокОбещание.Номер="000000004" Тогда
		ТЗОценки=Новый ТаблицаЗначений;
		ТЗОценки.Колонки.Добавить("ФизЛицо");
		ТЗОценки.Колонки.Добавить("МасСтрок");
		ТЗРезультат=ПолучитьТаблицуРезультатаОбещания04();
		
		КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		Для Сч=0 По КолСтр Цикл
			Если ТЗРезультат.НайтиСтроки(Новый Структура("Технолог",ДокОбещание.ОбъектыПривязки[КолСтр-Сч].Технолог)).Количество()=0 Тогда
				ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
			КонецЕсли; 
		КонецЦикла; 
		
		Для каждого СтрРез Из ТЗРезультат Цикл
			Если Не ЗначениеЗаполнено(СтрРез.РольПользователя) Тогда
				Продолжить;
			КонецЕсли; 
			МасСтр=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Технолог",СтрРез.Технолог));
			СоставРоли=ТЗРоли.НайтиСтроки(Новый Структура("Ссылка",СтрРез.РольПользователя));
			Если МасСтр.Количество()=0 Тогда
				Если СоставРоли.Количество()>0 Тогда
					Стр=ДокОбещание.ОбъектыПривязки.Добавить();
					Стр.Технолог=СтрРез.Технолог;	
					Стр.Исполнитель=СоставРоли[0].Сотрудник;
					Активный=СоставРоли[0].Активный;
					Исполнитель=Стр.Исполнитель;
				Иначе
					Продолжить;
				КонецЕсли; 
			Иначе	                                                   
				Стр=МасСтр[0];
				Если СоставРоли.Количество()>0 Тогда
					Исполнитель=Стр.Исполнитель;
					Стр.Исполнитель=СоставРоли[0].Сотрудник;
					Активный=СоставРоли[0].Активный;
				Иначе
					Продолжить;
				КонецЕсли; 
			КонецЕсли; 
			
			
			Если СтрРез.РезультатОбращения=0 ИЛИ Не Активный Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
			ИначеЕсли СтрРез.РезультатОбращения<=2 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
			Иначе	
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;
			КонецЕсли; 
			
			ДопСообщение="";
			Если (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
				или Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется) Тогда
				ДопСообщение="
				|";
				МасСтрок=СтрРез.МасСтрок.Получить();
				Для каждого СтрДоп Из МасСтрок Цикл
					ДопСообщение=ДопСообщение+"
					|"+СтрДоп.ДатаДок+" "+СтрДоп.СтруктурнаяЕдиница+" "+СтрДоп.РезультатОбращения+" "+СтрДоп.Номенклатура+" "+СтрДоп.Производитель+" "+Строка(СтрДоп.ТипЖалобы);
				КонецЦикла; 
			КонецЕсли;
			Стр.Описание=ДопСообщение;
			Стр.ОписаниеДоп="Обращения, тип 8. Считается по каждому производителю за месяц количество обращений у каждого технолога.
			|Считается так - 0 обращений по производителю - допустимо, 2 - частично исполняется обещание, 3 и более - полностью не исполняется.
			|Если по всем технологам продакта полностью (не) исполняется, тогда полностью (не) исполняется, в остальных случаях - частично исполняется.
			|Определение оценки производится ежедневно";
			
			Стр.Динамика=ПолучитьДинамикуОценки(Стр.Оценка,Оценка);
			Если  ЗначениеЗаполнено(Стр.Исполнитель) и ЗначениеЗаполнено(Стр.Технолог) и (Не Оценка=Стр.Оценка или Не Исполнитель=Стр.Исполнитель)  Тогда
				Стр.Оценка=Оценка;
			иначе
				ЗаполнитьОписание(Стр.Исполнитель,ДокОбещание);
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр.Оценка) Тогда
				Стр.ДатаИзменения=ТекущаяДата();
			КонецЕсли;
			
			ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(Стр.Исполнитель,ДокОбещание);
			
			ДобавитьАдресат(Стр.Исполнитель,ТЗОценки,ТЗРезультат,СтрРез);
		КонецЦикла;
		УдалитьЛишниеАдресаты(ТЗОценки,ДокОбещание);
		ОбъектыПривязкиОценкаПриИзмененииСервер(ДокОбещание);
		ДокОбещание.ДатаКонтроляОценки=ТекущаяДата();	
		ДокОбещание.Записать();
		ТЗАдресатов=ТЗОценки.Скопировать();
		ТЗАдресатов.Свернуть("ФизЛицо");
		МассивАдресов=ТЗАдресатов.ВыгрузитьКолонку("ФизЛицо");
		Для каждого Эл Из МассивАдресов Цикл
			ОтправитьПисьмоОбИндивилуальныхОценках(ДокОбещание,Эл,ТЗОценки,СоотПисемОбОценках,ТЗЭлАдреса);
		КонецЦикла;
	ИначеЕсли ДокОбещание.Номер="000000184" Тогда
		ТЗОценки=Новый ТаблицаЗначений;
		ТЗОценки.Колонки.Добавить("ФизЛицо");
		ТЗОценки.Колонки.Добавить("МасСтрок");
		ТЗРезультат=ПолучитьТаблицуРезультатаОбещания184();
		Если ТЗРезультат=Неопределено Тогда
			Возврат;
		КонецЕсли; 
		
		КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		Для Сч=0 По КолСтр Цикл
			Если ТЗРезультат.НайтиСтроки(Новый Структура("Характеристика",ДокОбещание.ОбъектыПривязки[КолСтр-Сч].Характеристика)).Количество()=0 Тогда
				ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
			КонецЕсли; 
		КонецЦикла; 
		
		ЗаполнитьИсполнителей(ДокОбещание);
		
		
		
		Для каждого СтрРез Из ТЗРезультат Цикл
			Если Не ЗначениеЗаполнено(СтрРез.РольПользователя) Тогда
				Продолжить;
			КонецЕсли; 
			
			МасСтр=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Характеристика",СтрРез.Характеристика));
			СоставРоли=ТЗРоли.НайтиСтроки(Новый Структура("Ссылка",СтрРез.РольПользователя));
			Если МасСтр.Количество()=0 Тогда
				Если СоставРоли.Количество()>0 Тогда
					Стр=ДокОбещание.ОбъектыПривязки.Добавить();
					Стр.Характеристика=СтрРез.Характеристика;
					Стр.Номенклатура=СтрРез.Номенклатура;
					Стр.Исполнитель=СоставРоли[0].Сотрудник;
					Активный=СоставРоли[0].Активный;
					Исполнитель=Стр.Исполнитель;
				Иначе
					Продолжить;
				КонецЕсли; 
			Иначе	                                                   
				Стр=МасСтр[0];
				Если СоставРоли.Количество()>0 Тогда
					Исполнитель=Стр.Исполнитель;
					Стр.Исполнитель=СоставРоли[0].Сотрудник;
					Активный=СоставРоли[0].Активный;
				Иначе
					Продолжить;
				КонецЕсли; 
			КонецЕсли; 
			
			
			Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;
			
			
			ДопСообщение="";
			Если (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
				или Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется) Тогда
				ДопСообщение="
				|";
					ДопСообщение=ДопСообщение+"
				|"+Стр.Номенклатура+" "+Стр.Характеристика;
			КонецЕсли;
			Стр.Описание=ДопСообщение;
			Стр.ОписаниеДоп=" Берутся ошибки сканирования из отчетов
			|446 Не сканируются товары во ВкусВилл sms_repl..Not_scanned_rep 
			|639 Ошибки в сканированиии весового товара Reports..err_q_ves, если есть запись, оценка - полностью не исполняется ";
			
			Стр.Динамика=ПолучитьДинамикуОценки(Стр.Оценка,Оценка);
			
			Если  ЗначениеЗаполнено(Стр.Исполнитель) и ЗначениеЗаполнено(Стр.Характеристика) и (Не Оценка=Стр.Оценка или Не Исполнитель=Стр.Исполнитель)  Тогда
				Стр.Оценка=Оценка;
				ЗаполнитьОписание(Стр.Исполнитель,ДокОбещание);
			иначе
				ЗаполнитьОписание(Стр.Исполнитель,ДокОбещание);
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр.Оценка) Тогда
				Стр.ДатаИзменения=ТекущаяДата();
			КонецЕсли;
			
			ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(Стр.Исполнитель,ДокОбещание);
			
			ДобавитьАдресат(Стр.Исполнитель,ТЗОценки,ТЗРезультат,СтрРез);
		КонецЦикла;
		//
		УдалитьЛишниеАдресаты(ТЗОценки,ДокОбещание);
		
		ОбъектыПривязкиОценкаПриИзмененииСервер(ДокОбещание);
		
		ДокОбещание.ДатаКонтроляОценки=ТекущаяДата();	
		ДокОбещание.Записать();
		ТЗАдресатов=ТЗОценки.Скопировать();
		ТЗАдресатов.Свернуть("ФизЛицо");
		МассивАдресов=ТЗАдресатов.ВыгрузитьКолонку("ФизЛицо");
		Для каждого Эл Из МассивАдресов Цикл
			ОтправитьПисьмоОбИндивилуальныхОценках(ДокОбещание,Эл,ТЗОценки,СоотПисемОбОценках,ТЗЭлАдреса);
		КонецЦикла;

	ИначеЕсли ДокОбещание.Номер="000000010" Тогда
		ТЗОценки=Новый ТаблицаЗначений;
		ТЗОценки.Колонки.Добавить("ФизЛицо");
		ТЗОценки.Колонки.Добавить("МасСтрок");
		ТЗРезультат=ПолучитьТаблицуРезультатаОбещания10();
		
		КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		Для Сч=0 По КолСтр Цикл
			Если ТЗРезультат.НайтиСтроки(Новый Структура("Технолог",ДокОбещание.ОбъектыПривязки[КолСтр-Сч].Технолог)).Количество()=0 Тогда
				ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
			КонецЕсли; 
		КонецЦикла; 
		
		Для каждого СтрРез Из ТЗРезультат Цикл
			Если Не ЗначениеЗаполнено(СтрРез.РольПользователя) Тогда
				Продолжить;
			КонецЕсли; 
			
			МасСтр=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Технолог",СтрРез.Технолог));
			СоставРоли=ТЗРоли.НайтиСтроки(Новый Структура("Ссылка",СтрРез.РольПользователя));
			Если МасСтр.Количество()=0 Тогда
				Если СоставРоли.Количество()>0 Тогда
					Стр=ДокОбещание.ОбъектыПривязки.Добавить();
					Стр.Технолог=СтрРез.Технолог;	
					Стр.Исполнитель=СоставРоли[0].Сотрудник;
					Активный=СоставРоли[0].Активный;
					Исполнитель=Стр.Исполнитель;
				Иначе
					Продолжить;
				КонецЕсли; 
			Иначе	                                                   
				Стр=МасСтр[0];
				Если СоставРоли.Количество()>0 Тогда
					Исполнитель=Стр.Исполнитель;
					Стр.Исполнитель=СоставРоли[0].Сотрудник;
					Активный=СоставРоли[0].Активный;
				Иначе
					Продолжить;
				КонецЕсли; 
			КонецЕсли; 
			
			
			Если СтрРез.РезультатОбращения=0 ИЛИ Не Активный Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
			ИначеЕсли СтрРез.РезультатОбращения<=2 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
			Иначе	
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;
			КонецЕсли; 
			
			ДопСообщение="";
			Если (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
				или Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется) Тогда
				ДопСообщение="
				|";
				МасСтрок=СтрРез.МасСтрок.Получить();
				Для каждого СтрДоп Из МасСтрок Цикл
					ДопСообщение=ДопСообщение+"
					|"+СтрДоп.ДатаДок+" "+СтрДоп.СтруктурнаяЕдиница+" "+СтрДоп.РезультатОбращения+" "+СтрДоп.Номенклатура+" "+СтрДоп.Производитель+" "+Строка(СтрДоп.ТипЖалобы);
				КонецЦикла; 
			КонецЕсли;
			Стр.Описание=ДопСообщение;
			Стр.ОписаниеДоп="Обращения, тип 11.3. Считается по каждому производителю за месяц количество обращений у каждого технолога.
			|Считается так - 0 обращений по производителю - допустимо, 2 - частично исполняется обещание, 3 и более - полностью не исполняется.
			|Если по всем технологам продакта полностью (не) исполняется, тогда полностью (не) исполняется, в остальных случаях - частично исполняется.
			|Определение оценки производится ежедневно";
			
			Стр.Динамика=ПолучитьДинамикуОценки(Стр.Оценка,Оценка);
			Если  ЗначениеЗаполнено(Стр.Исполнитель) и ЗначениеЗаполнено(Стр.Технолог) и (Не Оценка=Стр.Оценка или Не Исполнитель=Стр.Исполнитель)  Тогда
				Стр.Оценка=Оценка;
			иначе
				ЗаполнитьОписание(Стр.Исполнитель,ДокОбещание);
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр.Оценка) Тогда
				Стр.ДатаИзменения=ТекущаяДата();
			КонецЕсли;
			
			ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(Стр.Исполнитель,ДокОбещание);
			
			ДобавитьАдресат(Стр.Исполнитель,ТЗОценки,ТЗРезультат,СтрРез);
		КонецЦикла;
		УдалитьЛишниеАдресаты(ТЗОценки,ДокОбещание);
		ОбъектыПривязкиОценкаПриИзмененииСервер(ДокОбещание);
		ДокОбещание.ДатаКонтроляОценки=ТекущаяДата();	
		ДокОбещание.Записать();
		ТЗАдресатов=ТЗОценки.Скопировать();
		ТЗАдресатов.Свернуть("ФизЛицо");
		МассивАдресов=ТЗАдресатов.ВыгрузитьКолонку("ФизЛицо");
		Для каждого Эл Из МассивАдресов Цикл
			ОтправитьПисьмоОбИндивилуальныхОценках(ДокОбещание,Эл,ТЗОценки,СоотПисемОбОценках,ТЗЭлАдреса);
		КонецЦикла;
		
	ИначеЕсли ДокОбещание.Номер="000000176" Тогда
		ТЗОценки=Новый ТаблицаЗначений;
		ТЗОценки.Колонки.Добавить("ФизЛицо");
		ТЗОценки.Колонки.Добавить("МасСтрок");
		ТЗРезультат=ПолучитьТаблицуРезультатаОбещания176();
		
		КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		Для Сч=0 По КолСтр Цикл
			Если ТЗРезультат.НайтиСтроки(Новый Структура("Характеристика",ДокОбещание.ОбъектыПривязки[КолСтр-Сч].Характеристика)).Количество()=0 Тогда
				ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
			КонецЕсли; 
		КонецЦикла; 
		
		ЗаполнитьИсполнителей(ДокОбещание);
		
		
		
		Для каждого СтрРез Из ТЗРезультат Цикл
			Если Не ЗначениеЗаполнено(СтрРез.РольПользователя) Тогда
				Продолжить;
			КонецЕсли; 
			
			МасСтр=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Характеристика",СтрРез.Характеристика));
			СоставРоли=ТЗРоли.НайтиСтроки(Новый Структура("Ссылка",СтрРез.РольПользователя));
			Если МасСтр.Количество()=0 Тогда
				Если СоставРоли.Количество()>0 Тогда
					Стр=ДокОбещание.ОбъектыПривязки.Добавить();
					Стр.Характеристика=СтрРез.Характеристика;
					Стр.Номенклатура=СтрРез.Характеристика.Владелец;
					Стр.Исполнитель=СоставРоли[0].Сотрудник;
					Активный=СоставРоли[0].Активный;
					Исполнитель=Стр.Исполнитель;
				Иначе
					Продолжить;
				КонецЕсли; 
			Иначе	                                                   
				Стр=МасСтр[0];
				Если СоставРоли.Количество()>0 Тогда
					Исполнитель=Стр.Исполнитель;
					Стр.Исполнитель=СоставРоли[0].Сотрудник;
					Активный=СоставРоли[0].Активный;
				Иначе
					Продолжить;
				КонецЕсли; 
			КонецЕсли; 
			
			
			Если СтрРез.РезультатОбращения<=1 ИЛИ НЕ Активный Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
			ИначеЕсли СтрРез.РезультатОбращения<=3 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
			Иначе	
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;
			КонецЕсли; 
			
			
			ДопСообщение="";
			Если (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
				или Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется) Тогда
				ДопСообщение="
				|";
				МасСтрок=СтрРез.МасСтрок.Получить();
				Для каждого СтрДоп Из МасСтрок Цикл
					ДопСообщение=ДопСообщение+"
					|"+СтрДоп.ДатаДок+" "+СтрДоп.СтруктурнаяЕдиница+" "+СтрДоп.РезультатОбращения+" "+СтрДоп.Номенклатура+" "+СтрДоп.Производитель+" "+Строка(СтрДоп.ТипЖалобы);
				КонецЦикла; 
			КонецЕсли;
			Стр.Описание=ДопСообщение;
			Стр.ОписаниеДоп="Обращения, тип 1. Считается по каждой характеристике за месяц количество обращений у каждого технолога.
			|Считается так - 1 обращений по позиции - допустимо, 3 - частично исполняется обещание, 4 и более - полностью не исполняется.
			|Т. е. обещание у технолога может иметь статус полностью не исполняется даже если по одному продукту попались включения, но больше 4-х раз за месяц.
			|Определение оценки производится ежедневно";
			
			Стр.Динамика=ПолучитьДинамикуОценки(Стр.Оценка,Оценка);
			Если  ЗначениеЗаполнено(Стр.Исполнитель) и ЗначениеЗаполнено(Стр.Характеристика) и (Не Оценка=Стр.Оценка или Не Исполнитель=Стр.Исполнитель)  Тогда
				Стр.Оценка=Оценка;
			иначе
				ЗаполнитьОписание(Стр.Исполнитель,ДокОбещание);
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр.Оценка) Тогда
				Стр.ДатаИзменения=ТекущаяДата();
			КонецЕсли;
			
			ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(Стр.Исполнитель,ДокОбещание);
			
			ДобавитьАдресат(Стр.Исполнитель,ТЗОценки,ТЗРезультат,СтрРез);
		КонецЦикла;
		//
		УдалитьЛишниеАдресаты(ТЗОценки,ДокОбещание);
		
		ОбъектыПривязкиОценкаПриИзмененииСервер(ДокОбещание);
		
		ДокОбещание.ДатаКонтроляОценки=ТекущаяДата();	
		ДокОбещание.Записать();
		ТЗАдресатов=ТЗОценки.Скопировать();
		ТЗАдресатов.Свернуть("ФизЛицо");
		МассивАдресов=ТЗАдресатов.ВыгрузитьКолонку("ФизЛицо");
		Для каждого Эл Из МассивАдресов Цикл
			ОтправитьПисьмоОбИндивилуальныхОценках(ДокОбещание,Эл,ТЗОценки,СоотПисемОбОценках,ТЗЭлАдреса);
		КонецЦикла;
	ИначеЕсли ДокОбещание.Номер="000000011" Тогда
		ТЗОценки=Новый ТаблицаЗначений;
		ТЗОценки.Колонки.Добавить("ФизЛицо");
		ТЗОценки.Колонки.Добавить("МасСтрок");
		ТЗРезультат=ПолучитьТаблицуРезультатаОбещания11();
		
		КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		Для Сч=0 По КолСтр Цикл
			Если ТЗРезультат.НайтиСтроки(Новый Структура("Характеристика",ДокОбещание.ОбъектыПривязки[КолСтр-Сч].Характеристика)).Количество()=0 Тогда
				ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
			КонецЕсли; 
		КонецЦикла; 
		
		ЗаполнитьИсполнителей(ДокОбещание);
		
		
		
		Для каждого СтрРез Из ТЗРезультат Цикл
			Если Не ЗначениеЗаполнено(СтрРез.РольПользователя) Тогда
				Продолжить;
			КонецЕсли; 
			
			МасСтр=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Характеристика",СтрРез.Характеристика));
			СоставРоли=ТЗРоли.НайтиСтроки(Новый Структура("Ссылка",СтрРез.РольПользователя));
			Если МасСтр.Количество()=0 Тогда
				Если СоставРоли.Количество()>0 Тогда
					Стр=ДокОбещание.ОбъектыПривязки.Добавить();
					Стр.Характеристика=СтрРез.Характеристика;	
					Стр.Номенклатура=СтрРез.Характеристика.Владелец;
					Стр.Исполнитель=СоставРоли[0].Сотрудник;
					Исполнитель=Стр.Исполнитель;
					Активный=СоставРоли[0].Активный;
				Иначе
					Продолжить;
				КонецЕсли; 
			Иначе	                                                   
				Стр=МасСтр[0];
				Если СоставРоли.Количество()>0 Тогда
					Исполнитель=Стр.Исполнитель;
					Стр.Исполнитель=СоставРоли[0].Сотрудник;
					Активный=СоставРоли[0].Активный;
				Иначе
					Продолжить;
				КонецЕсли; 
			КонецЕсли; 
			
			
			Если СтрРез.РезультатОбращения<=СтрРез.Эталон ИЛИ НЕ Активный Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
			ИначеЕсли СтрРез.РезультатОбращения<=1.1*СтрРез.Эталон  Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
			Иначе	
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;
			КонецЕсли; 
			
			ДопСообщение="";
			Если (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
				или Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется) Тогда
				ДопСообщение="
				|";
				МасСтрок=СтрРез.МасСтрок.Получить();
				Для каждого СтрДоп Из МасСтрок Цикл
					ДопСообщение=ДопСообщение+"
					|"+СтрДоп.ДатаДок+" "+СтрДоп.СтруктурнаяЕдиница+" "+СтрДоп.РезультатОбращения+" "+СтрДоп.Номенклатура+" "+СтрДоп.Производитель+" "+Строка(СтрДоп.ТипЖалобы);
				КонецЦикла; 
			КонецЕсли;
			Стр.Описание=ДопСообщение;
			Стр.ОписаниеДоп="Обращения, тип 2 и 3. Считается по каждой характеристике за месяц количество обращений на 1 ед продаж.
			|Считается так - меньше или равно количества обращений на 1 ед продаж по сети - допустимо, больше или равно количества обращений на 1 ед продаж по сети на 10% - частично исполняется, иначе - полностью не исполняется.
			|Если по всем характеристикам полностью (не) исполняется, тогда полностью (не) исполняется, в остальных случаях - частично исполняется.
			|Определение оценки производится ежедневно";
			
			
			Стр.Динамика=ПолучитьДинамикуОценки(Стр.Оценка,Оценка);
			Если  ЗначениеЗаполнено(Стр.Исполнитель) и ЗначениеЗаполнено(Стр.Характеристика) и (Не Оценка=Стр.Оценка или Не Исполнитель=Стр.Исполнитель)  Тогда
				Стр.Оценка=Оценка;
			иначе
				ЗаполнитьОписание(Стр.Исполнитель,ДокОбещание);
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр.Оценка) Тогда
				Стр.ДатаИзменения=ТекущаяДата();
			КонецЕсли;
			
			ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(Стр.Исполнитель,ДокОбещание);
			
			ДобавитьАдресат(Стр.Исполнитель,ТЗОценки,ТЗРезультат,СтрРез);
		КонецЦикла;
		УдалитьЛишниеАдресаты(ТЗОценки,ДокОбещание);
		//
		ОбъектыПривязкиОценкаПриИзмененииСервер(ДокОбещание);
		ДокОбещание.ДатаКонтроляОценки=ТекущаяДата();	
		ДокОбещание.Записать();
		ТЗАдресатов=ТЗОценки.Скопировать();
		ТЗАдресатов.Свернуть("ФизЛицо");
		МассивАдресов=ТЗАдресатов.ВыгрузитьКолонку("ФизЛицо");
		Для каждого Эл Из МассивАдресов Цикл
			ОтправитьПисьмоОбИндивилуальныхОценках(ДокОбещание,Эл,ТЗОценки,СоотПисемОбОценках,ТЗЭлАдреса);
		КонецЦикла;
	ИначеЕсли ДокОбещание.Номер="000000001" Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбещаниеДок.Оценка,
		|	ОбещаниеДок.Обещание
		|ИЗ
		|	Документ.Обещание КАК ОбещаниеДок
		|ГДЕ
		|	ОбещаниеДок.Ссылка <> &Ссылка
		|	И ОбещаниеДок.Заказчик = &Заказчик
		|	И ОбещаниеДок.Проведен";
		
		Запрос.УстановитьПараметр("Заказчик", Справочники.КорневыеЗаказчикиОбещаний.НайтиПоНаименованию("покупатели"));
		Запрос.УстановитьПараметр("Ссылка", ДокОбещание.Ссылка);
		
		Результат = Запрос.Выполнить();
		
		ТЗРез = Результат.Выгрузить();
		Если ТЗРез.НайтиСтроки(Новый Структура("Оценка",Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется)).Количество()>ТЗРез.Количество()/2 Тогда
			Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;	
		ИначеЕсли ТЗРез.НайтиСтроки(Новый Структура("Оценка",Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется)).Количество()>ТЗРез.Количество()/2 Тогда
			Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;	
		Иначе	
			Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;	
		КонецЕсли;
		
		ДопСообщение="";
		Если (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
			или Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется) Тогда
			ДопСообщение="
			|";
			Для каждого СтрДоп Из ТЗРез Цикл
				ДопСообщение=ДопСообщение+"
				|"+СтрДоп.Обещание+" - "+СтрДоп.Оценка;
			КонецЦикла; 
		КонецЕсли;
		ДокОбещание.Описание="Считается исходя из оценок обещаний покупателям.
		|Считается так - если по всем таким обещаниям оценка - полностью исполняется, если больше половины не исполняется  - полностью не исполняется, иначе - частично исполняется.
		|Определение оценки производится ежедневно"+ДопСообщение;
		
		
		Фл=Ложь;
		ДокОбещание.Динамика=ПолучитьДинамикуОценки(ДокОбещание.Оценка,Оценка);
		Если Оценка<>ДокОбещание.Оценка Тогда
			ДокОбещание.Оценка=Оценка;
			ДокОбещание.ДатаИзменения=ТекущаяДата();
			Фл=Истина;
		КонецЕсли; 
		
		ДокОбещание.ДатаКонтроляОценки=ТекущаяДата();	
		ДокОбещание.Записать();
		Если Фл Тогда
			ОтправитьПисьмоПоставщикуОбИзмененияхСервер(ДокОбещание);
		КонецЕсли; 
	ИначеЕсли ДокОбещание.Номер="000000022" Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(ОбращенияПокупателей.РезультатОбращения) КАК РезультатОбращения,
		|	ОбращенияПокупателей.СтруктурнаяЕдиница
		|ИЗ
		|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
		|ГДЕ
		|	ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
		|	И ОбращенияПокупателей.ТипЖалобы В(&ТипЖалобы)
		|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
		|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбращенияПокупателей.СтруктурнаяЕдиница
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(ОбращенияПокупателей.РезультатОбращения) > 2";
		
		
		Запрос.УстановитьПараметр("ДатаДок1", НачалоДня(ДобавитьМесяц(ТекущаяДата(),-1)));
		Запрос.УстановитьПараметр("ДатаДок2", КонецДня(ТекущаяДата()));
		
		
		Мас=Новый Массив;
		Мас.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("221"));//Справочники.ТипыЖалоб.НайтиПоНаименованию("10_1 Нет товара в наличии"));
		Мас.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("222"));//Справочники.ТипыЖалоб.НайтиПоНаименованию("10_2 Нет свежего товара"));
		
		Запрос.УстановитьПараметр("ТипЖалобы", Мас);
		Запрос.УстановитьПараметр("СтатусЖалобы", Перечисления.СтатусыЖалоб.НеПодтверждена);
		
		
		Результат = Запрос.Выполнить();
		
		ТЗРез = Результат.Выгрузить();
		Если ТЗРез.Количество()<5 Тогда
			Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;	
		ИначеЕсли ТЗРез.Количество()<15 Тогда
			Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;	
		Иначе	
			Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;	
		КонецЕсли;
		
		ДопСообщение="";
		Если (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
			или Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется) Тогда
			ДопСообщение="
			|";
			Для каждого СтрДоп Из ТЗРез Цикл
				ДопСообщение=ДопСообщение+"
				|"+СтрДоп.СтруктурнаяЕдиница+" - "+Строка(СтрДоп.РезультатОбращения);
			КонецЦикла; 
		КонецЕсли;
		ДокОбещание.Описание="Считается исходя из обращений 10.1 и 10.2 таким образом - определяется количество магазинов, у которых таких обращений было за месяц больше 2.
		|Если таких магазинов меньше 5 - полностью исполняется, если меньше 15  - частично исполняется, иначе - полностью не исполняется.
		|Определение оценки производится ежедневно"+ДопСообщение;
		
		
		
		Фл=Ложь;
		ДокОбещание.Динамика=ПолучитьДинамикуОценки(ДокОбещание.Оценка,Оценка);
		Если Оценка<>ДокОбещание.Оценка  ИЛИ Не ЗначениеЗаполнено(ДокОбещание.ДатаИзменения) Тогда
			ДокОбещание.Оценка=Оценка;
			ДокОбещание.ДатаИзменения=ТекущаяДата();
			Фл=Истина;
		КонецЕсли; 
		
		ДокОбещание.ДатаКонтроляОценки=ТекущаяДата();	
		ДокОбещание.Записать();
		Если Фл  Тогда
			ОтправитьПисьмоПоставщикуОбИзмененияхСервер(ДокОбещание);
		КонецЕсли; 
	ИначеЕсли ДокОбещание.Номер="000000007" Тогда
		
		СписокНомеров = Новый СписокЗначений;
		СтруктураНомеров = Новый Структура("НомераГорячейЛинии", "Горячая линия");
		Для Каждого КлючИЗначение Из СтруктураНомеров Цикл
			
			
			МассивНомеров = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок("84956638602" ",");
			Для Каждого Номер Из МассивНомеров Цикл
				НомерТелефона = Номер;//АК_ТелефонияСервер.ОчиститьНомерТелефона((Номер));
				Если СписокНомеров.НайтиПоЗначению(НомерТелефона) = Неопределено Тогда
					СписокНомеров.Добавить(НомерТелефона, КлючИЗначение.Значение);
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
		
		ДатаНачала=НачалоДня(ДобавитьМесяц(ТекущаяДата(),-1));
		ДатаОкончания=КонецДня(ТекущаяДата());
		
		Отч=Отчеты.ОтчётПоПринятымИПропущеннымЗвонкамГорячаяЛиния.Создать();
		//ТЗнЗвонков = Отч.ЗаполнитьТЗнЗвонков(НачалоДня(ДобавитьМесяц(ТекущаяДата(),-1)), КонецДня(ТекущаяДата()), СписокНомеров, 9, 21);
		
		ТЗнЗвонков = Отч.ЗаполнитьТЗнЗвонков(ДатаНачала, ДатаОкончания, СписокНомеров, 9, 21);
		ТЗнЗвонков.Сортировать("Дата");	
		ТЗнЗвонковИсх = Отч.ЗаполнитьТЗнЗвонков(ДатаНачала, ДатаОкончания+24*60*60, СписокНомеров,Неопределено,Неопределено,Истина);
	    Кол=ТЗнЗвонков.Количество();
		Для Сч=0 По Кол-1 Цикл
			ТекСтр=ТЗнЗвонков[Сч];
			Если ТекСтр.КвоПропущенныхЗвонков>0 Тогда
				Фл=Истина;
				Для каждого Стр Из ТЗнЗвонков Цикл
					Если Стр.Дата>ТекСтр.Дата И ТекСтр.Исходящий=Стр.Исходящий И Стр.ВидНедозвона="ANSWERED"  Тогда
						ТекСтр.КвоПропущенныхЗвонков=0;
						Прервать;
					КонецЕсли; 
					//Если Стр.Дата>ТекСтр.Дата И ТекСтр.Исходящий=Стр.Исходящий И Стр.ВидНедозвона<>"ANSWERED"  Тогда
					//	ФЛ=Ложь;
					//КонецЕсли;
				КонецЦикла;
				Если ТекСтр.КвоПропущенныхЗвонков>0 Тогда
					Для каждого Стр Из ТЗнЗвонковИсх Цикл
						Если Стр.Дата>ТекСтр.Дата И ТекСтр.Исходящий=Стр.НомерТелефона И Стр.ВидНедозвона="ANSWERED"  Тогда
							ТекСтр.КвоПропущенныхЗвонков=0;
							//Если Не Фл Тогда
							//	ТекСтр.КвоПринятыхЗвонков=0;
							//Иначе	
							//	ТекСтр.КвоПринятыхЗвонков=1;
							//КонецЕсли; 
							Прервать;
						КонецЕсли; 
					КонецЦикла;
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла; 
		
		
		
		КолЗв=ТЗнЗвонков.Количество();
		ТЗнЗвонков.Колонки.Добавить("ИД");
		ТЗнЗвонков.ЗаполнитьЗначения(Истина,"ИД");
		ТЗнЗвонков.Свернуть("ИД","КвоПринятыхЗвонков,КвоПропущенныхЗвонков");
		Если ТЗнЗвонков.Количество()>0 Тогда
			КолЗв=ТЗнЗвонков[0].КвоПринятыхЗвонков;
			Если ТЗнЗвонков[0].КвоПропущенныхЗвонков/(КолЗв)<0.05 Тогда
				ОценкаЗ=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;	
			ИначеЕсли ТЗнЗвонков[0].КвоПропущенныхЗвонков/(КолЗв)>0.15 Тогда
				ОценкаЗ=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;	
			Иначе
				ОценкаЗ=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;	
			КонецЕсли;
		Иначе
			ОценкаЗ=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;	
		КонецЕсли; 

		Сообщить(ТЗнЗвонков[0].КвоПропущенныхЗвонков);
		Сообщить(КолЗв);
		
		Сообщить(ОценкаЗ);
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбращенияПокупателей.РезультатОбращения КАК РезультатОбращения,
		|	ОбращенияПокупателей.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ОбращенияПокупателей.ДатаДок КАК ДатаДок,
		|	ОбращенияПокупателей.Номенклатура,
		|	ОбращенияПокупателей.Производитель,
		|	ОбращенияПокупателей.ТипЖалобы
		|ИЗ
		|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
		|ГДЕ
		|	ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
		|	И ОбращенияПокупателей.ТипЖалобы В(&ТипЖалобы)
		|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
		|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2";
		
		
		Запрос.УстановитьПараметр("ДатаДок1", НачалоДня(ДобавитьМесяц(ТекущаяДата(),-1)));
		Запрос.УстановитьПараметр("ДатаДок2", КонецДня(ТекущаяДата()));
		
		
		Мас=Новый Массив;
		Мас.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("245"));//Справочники.ТипыЖалоб.НайтиПоНаименованию("17_1 Горячая линия . Жалоба"));
		Мас.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("246"));//Справочники.ТипыЖалоб.НайтиПоНаименованию("17_3 Соц. сети Жалоба "));
		
		Запрос.УстановитьПараметр("ТипЖалобы", Мас);
		Запрос.УстановитьПараметр("СтатусЖалобы", Перечисления.СтатусыЖалоб.НеПодтверждена);
		
		
		Результат = Запрос.Выполнить();
		
		ТЗРез = Результат.Выгрузить();
		Если ТЗРез.Количество()=0 Тогда
			ОценкаО=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;	
		ИначеЕсли НЕ ЗначениеЗаполнено(ТЗРез.Количество()) Тогда
			ОценкаО=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;	
		ИначеЕсли ТЗРез.Количество()<3 Тогда
			ОценкаО=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;	
		ИначеЕсли ТЗРез.Количество()<6 Тогда
			ОценкаО=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;	
		Иначе	
			ОценкаО=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;	
		КонецЕсли;
		Если ОценкаО=ОценкаЗ Тогда
			Оценка=ОценкаО;
		Иначе	
			Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;	
		КонецЕсли; 
		Сообщить(ОценкаО);
		
		ДопСообщение="Первая оценка - "+ОценкаО;
		Если (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
			или Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется) Тогда
			ДопСообщение="
			|";
			Для каждого СтрДоп Из ТЗРез Цикл
				ДопСообщение=ДопСообщение+"
				|"+СтрДоп.ДатаДок+" "+СтрДоп.СтруктурнаяЕдиница+" "+СтрДоп.РезультатОбращения+" "+СтрДоп.Номенклатура+" "+СтрДоп.Производитель+" "+Строка(СтрДоп.ТипЖалобы);
			КонецЦикла; 
		КонецЕсли;
		ДопСообщение=ДопСообщение+"
		|Вторая оценка - "+ОценкаЗ+"
		|За месяц всего звонков - "+Строка(КолЗв)+", пропущенных - "+Строка(ТЗнЗвонков[0].КвоПропущенныхЗвонков)+", доля пропущенных - "+Строка(ТЗнЗвонков[0].КвоПропущенныхЗвонков/(КолЗв));
		
		
		ДокОбещание.Описание="Обращения 17_1 ГЛ Жалобы и 17_3 Соц.сети. Жалобы. 
		|Обращения со статусом «Не подтверждена» не учитывать за месяц. Определяются 2 оценки:
		|1) Если таких обращений меньше 3 - полностью исполняется, если меньше 6  - частично исполняется, иначе - полностью не исполняется.
		|2) Пропущенных звонков за месяц меньше 5% - полностью исполняется, если меньше 15  - частично исполняется, иначе - полностью не исполняется.
		|Определение оценки производится ежедневно как средняя этих 2 оценок
		|"+ДопСообщение;
		
		
		
		Фл=Ложь;
		ДокОбещание.Динамика=ПолучитьДинамикуОценки(ДокОбещание.Оценка,Оценка);
		Если Оценка<>ДокОбещание.Оценка ИЛИ Не ЗначениеЗаполнено(ДокОбещание.ДатаИзменения) Тогда
			ДокОбещание.Оценка=Оценка;
			ДокОбещание.ДатаИзменения=ТекущаяДата();
			Фл=Истина;
		КонецЕсли; 

		
		ДокОбещание.ДатаКонтроляОценки=ТекущаяДата();	
		ДокОбещание.Записать();
		Если Фл Тогда
			ОтправитьПисьмоПоставщикуОбИзмененияхСервер(ДокОбещание);
		КонецЕсли; 
	ИначеЕсли ДокОбещание.Номер="000000008" Тогда
		ТЗОценки=Новый ТаблицаЗначений;
		ТЗОценки.Колонки.Добавить("ФизЛицо");
		ТЗОценки.Колонки.Добавить("МасСтрок");
		ТЗРезультат=ПолучитьТаблицуРезультатаОбещания08();
		
		КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		Для Сч=0 По КолСтр Цикл
			Если ТЗРезультат.НайтиСтроки(Новый Структура("Характеристика",ДокОбещание.ОбъектыПривязки[КолСтр-Сч].Характеристика)).Количество()=0 Тогда
				ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
			КонецЕсли; 
		КонецЦикла; 
		
		ЗаполнитьИсполнителей(ДокОбещание);
		
		
		
		Для каждого СтрРез Из ТЗРезультат Цикл
			Если Не ЗначениеЗаполнено(СтрРез.РольПользователя) Тогда
				Продолжить;
			КонецЕсли; 
			МасСтр=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Характеристика",СтрРез.Характеристика));
			СоставРоли=ТЗРоли.НайтиСтроки(Новый Структура("Ссылка",СтрРез.РольПользователя));
			Если МасСтр.Количество()=0 Тогда
				Если СоставРоли.Количество()>0 Тогда
					Стр=ДокОбещание.ОбъектыПривязки.Добавить();
					Стр.Характеристика=СтрРез.Характеристика;	
					Стр.Номенклатура=СтрРез.Характеристика.Владелец;
					Стр.Исполнитель=СоставРоли[0].Сотрудник;
					Исполнитель=Стр.Исполнитель;
					Активный=СоставРоли[0].Активный;
				Иначе
					Продолжить;
				КонецЕсли; 
			Иначе	                                                   
				Стр=МасСтр[0];
				Если СоставРоли.Количество()>0 Тогда
					Исполнитель=Стр.Исполнитель;
					Стр.Исполнитель=СоставРоли[0].Сотрудник;
					Активный=СоставРоли[0].Активный;
				Иначе
					Продолжить;
				КонецЕсли; 
			КонецЕсли; 
			
			
			Если СтрРез.РезультатОбращения<=2 ИЛИ НЕ Активный Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
			ИначеЕсли СтрРез.РезультатОбращения<=5 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
			Иначе	
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;
			КонецЕсли; 
			
			ДопСообщение="";
			Если (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
				или Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется) Тогда
				ДопСообщение="
				|";
				МасСтрок=СтрРез.МасСтрок.Получить();
				Для каждого СтрДоп Из МасСтрок Цикл
					ДопСообщение=ДопСообщение+"
					|"+СтрДоп.ДатаДок+" "+СтрДоп.СтруктурнаяЕдиница+" "+СтрДоп.РезультатОбращения+" "+СтрДоп.Номенклатура+" "+СтрДоп.Производитель+" "+Строка(СтрДоп.ТипЖалобы);
				КонецЦикла; 
			КонецЕсли;
			Стр.Описание=ДопСообщение;
			Стр.ОписаниеДоп="Обращения, тип 9.2. Считается по каждой характеристике количество магазинов, у которых было больше 2 обращений.
			|Считается так - меньше 3 магазинов по продукту - допустимо, меньше 6 - частично исполняется обещание, 6 и более - полностью не исполняется.
			|Если по всем характеристикам полностью (не) исполняется, тогда полностью (не) исполняется, в остальных случаях - частично исполняется.
			|Определение оценки производится ежедневно";
			
			
			
			
			Стр.Динамика=ПолучитьДинамикуОценки(Стр.Оценка,Оценка);
			Если  ЗначениеЗаполнено(Стр.Исполнитель) и ЗначениеЗаполнено(Стр.Характеристика) и (Не Оценка=Стр.Оценка или Не Исполнитель=Стр.Исполнитель)  Тогда
				Стр.Оценка=Оценка;
			иначе
				ЗаполнитьОписание(Стр.Исполнитель,ДокОбещание);
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр.Оценка) Тогда
				Стр.ДатаИзменения=ТекущаяДата();
			КонецЕсли;
			
			ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(Стр.Исполнитель,ДокОбещание);
			
			ДобавитьАдресат(Стр.Исполнитель,ТЗОценки,ТЗРезультат,СтрРез);
		КонецЦикла;
		//
		УдалитьЛишниеАдресаты(ТЗОценки,ДокОбещание);
		ОбъектыПривязкиОценкаПриИзмененииСервер(ДокОбещание);
		ДокОбещание.ДатаКонтроляОценки=ТекущаяДата();	
		ДокОбещание.Записать();
		ТЗАдресатов=ТЗОценки.Скопировать();
		ТЗАдресатов.Свернуть("ФизЛицо");
		МассивАдресов=ТЗАдресатов.ВыгрузитьКолонку("ФизЛицо");
		Для каждого Эл Из МассивАдресов Цикл
			ОтправитьПисьмоОбИндивилуальныхОценках(ДокОбещание,Эл,ТЗОценки,СоотПисемОбОценках,ТЗЭлАдреса);
		КонецЦикла;
	ИначеЕсли ДокОбещание.Номер="000000018" Тогда
		ТЗОценки=Новый ТаблицаЗначений;
		ТЗОценки.Колонки.Добавить("ФизЛицо");
		ТЗОценки.Колонки.Добавить("МасСтрок");
		ТЗРезультат=ПолучитьТаблицуРезультатаОбещания18();
		
		КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		Для Сч=0 По КолСтр Цикл
			Если ТЗРезультат.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница",ДокОбещание.ОбъектыПривязки[КолСтр-Сч].СтруктурнаяЕдиница)).Количество()=0 Тогда
				ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
			КонецЕсли; 
		КонецЦикла; 
		
		
		Для каждого СтрРез Из ТЗРезультат Цикл
			Если Не ЗначениеЗаполнено(СтрРез.РольПользователя) Тогда
				Продолжить;
			КонецЕсли; 
			МасСтр=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница",СтрРез.СтруктурнаяЕдиница));
			СоставРоли=ТЗРоли.НайтиСтроки(Новый Структура("Ссылка",СтрРез.РольПользователя));
			Если МасСтр.Количество()=0 Тогда
				Если СоставРоли.Количество()>0 Тогда
					Стр=ДокОбещание.ОбъектыПривязки.Добавить();
					Стр.СтруктурнаяЕдиница=СтрРез.СтруктурнаяЕдиница;	
					Стр.Исполнитель=СоставРоли[0].Сотрудник;
					Активный=СоставРоли[0].Активный;
					Исполнитель=Стр.Исполнитель;
				Иначе
					Продолжить;
				КонецЕсли; 
			Иначе	                                                   
				Стр=МасСтр[0];
				Если СоставРоли.Количество()>0 Тогда
					Исполнитель=Стр.Исполнитель;
					Стр.Исполнитель=СоставРоли[0].Сотрудник;
					Активный=СоставРоли[0].Активный;
				Иначе
					Продолжить;
				КонецЕсли; 
			КонецЕсли; 
			
			
			Если СтрРез.РезультатОбращения<=1 ИЛИ НЕ Активный Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
			ИначеЕсли СтрРез.РезультатОбращения<=3 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
			Иначе	
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;
			КонецЕсли; 
			
			ДопСообщение="";
			Если (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
				или Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется) Тогда
				ДопСообщение="
				|";
				МасСтрок=СтрРез.МасСтрок.Получить();
				Для каждого СтрДоп Из МасСтрок Цикл
					ДопСообщение=ДопСообщение+"
					|"+СтрДоп.ДатаДок+" "+СтрДоп.СтруктурнаяЕдиница+" "+СтрДоп.РезультатОбращения+" "+СтрДоп.Номенклатура+" "+СтрДоп.Производитель+" "+Строка(СтрДоп.ТипЖалобы);
				КонецЦикла; 
			КонецЕсли;
			Стр.Описание=ДопСообщение;
			Стр.ОписаниеДоп="Обращения, тип 15.1. Считается по каждому магазину.
			|Считается так - меньше 3 обращений по магазину - допустимо, меньше 6 - частично исполняется обещание, 6 и более - полностью не исполняется.
			|Если по всем магазинам полностью (не) исполняется, тогда полностью (не) исполняется, в остальных случаях - частично исполняется.
			|Определение оценки производится ежедневно";
			
			
			Стр.Динамика=ПолучитьДинамикуОценки(Стр.Оценка,Оценка);
			Если  ЗначениеЗаполнено(Стр.Исполнитель) и ЗначениеЗаполнено(Стр.СтруктурнаяЕдиница) и (Не Оценка=Стр.Оценка или Не Исполнитель=Стр.Исполнитель)  Тогда
				Стр.Оценка=Оценка;
			иначе
				ЗаполнитьОписание(Стр.Исполнитель,ДокОбещание);
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр.Оценка) Тогда
				Стр.ДатаИзменения=ТекущаяДата();
			КонецЕсли;
			
			ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(Стр.Исполнитель,ДокОбещание);
			
			ДобавитьАдресат(Стр.Исполнитель,ТЗОценки,ТЗРезультат,СтрРез);
		КонецЦикла;
		ОбъектыПривязкиОценкаПриИзмененииСервер(ДокОбещание);
		УдалитьЛишниеАдресаты(ТЗОценки,ДокОбещание);
		
		ДокОбещание.ДатаКонтроляОценки=ТекущаяДата();	
		ДокОбещание.Записать();
		
		
		ТЗАдресатов=ТЗОценки.Скопировать();
		ТЗАдресатов.Свернуть("ФизЛицо");
		МассивАдресов=ТЗАдресатов.ВыгрузитьКолонку("ФизЛицо");
		Для каждого Эл Из МассивАдресов Цикл
			ОтправитьПисьмоОбИндивилуальныхОценках(ДокОбещание,Эл,ТЗОценки,СоотПисемОбОценках,ТЗЭлАдреса);
		КонецЦикла;
		
	ИначеЕсли ДокОбещание.Номер="000000006" Тогда
		ТЗОценки=Новый ТаблицаЗначений;
		ТЗОценки.Колонки.Добавить("ФизЛицо");
		ТЗРезультат=ПолучитьТаблицуРезультатаОбещания06();
		
		КолСтр=ДокОбещание.Исполнители.Количество()-1;
		Для Сч=0 По КолСтр Цикл
			Если ТЗРезультат.НайтиСтроки(Новый Структура("Исполнитель",ДокОбещание.Исполнители[КолСтр-Сч].Исполнитель)).Количество()=0 Тогда
				ДокОбещание.Исполнители.Удалить(КолСтр-Сч);
			КонецЕсли; 
		КонецЦикла; 
		
		
		Для каждого СтрРез Из ТЗРезультат Цикл
			Если Не ЗначениеЗаполнено(СтрРез.РольПользователя) Тогда
				Продолжить;
			КонецЕсли; 
			МасСтр=ДокОбещание.Исполнители.НайтиСтроки(Новый Структура("Исполнитель",СтрРез.Исполнитель));
			Если МасСтр.Количество()=0 Тогда
				//Если СтрРез.РольПользователя.СоставРоли.Количество()>0 Тогда
				Стр=ДокОбещание.Исполнители.Добавить();
				Стр.Исполнитель=СтрРез.Исполнитель;
				Стр.Наименование=Строка(СтрРез.Исполнитель);
				СоставРоли=ТЗРоли.НайтиСтроки(Новый Структура("Сотрудник",СтрРез.Исполнитель));
				Если СоставРоли.Количество() Тогда
					Активный=СоставРоли[0].Активный;
				Иначе	
					Активный=Истина;
				КонецЕсли; 
				
			Иначе 
				Стр=МасСтр[0];
				СоставРоли=ТЗРоли.НайтиСтроки(Новый Структура("Сотрудник",СтрРез.Исполнитель));
				Если СоставРоли.Количество() Тогда
					Активный=СоставРоли[0].Активный;
				Иначе	
					Активный=Истина;
				КонецЕсли; 
			КонецЕсли; 
			//КонецЕсли; 
			
			
			Если СтрРез.КолМагВДень*СтрРез.Дней>=2.99 ИЛИ НЕ Активный Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
			ИначеЕсли СтрРез.КолМагВДень*СтрРез.Дней>=1.99 Тогда
				Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
			Иначе	
				Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;
			КонецЕсли; 
			
			
			ДопСообщение="";
			Если (Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
				или Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется) Тогда
				ДопСообщение="
				|Среднее количество открытых магазинов за день в течение месяца "+Строка(Окр(СтрРез.КолМагВДень,2))+", кол-во дней "+Строка(СтрРез.Дней);
			КонецЕсли;
			Стр.Описание="Считается так - Среднее количество открытых магазинов за месяц больше или равно 2.99 - допустимо, больше или равно 1.99 - частично исполняется обещание, иначе - полностью не исполняется.
			|Определение оценки производится ежедневно"+ДопСообщение;
			
			
			
			Стр.Динамика=ПолучитьДинамикуОценки(Стр.Оценка,Оценка);
			Если  ЗначениеЗаполнено(Стр.Исполнитель) и (Не Оценка=Стр.Оценка )  Тогда
				Стр.Оценка=Оценка;
			иначе
				Продолжить;
			КонецЕсли;
			Если ЗначениеЗаполнено(Стр.Оценка) Тогда
				Стр.ДатаИзменения=ТекущаяДата();
			КонецЕсли;
			
			
			Если ЗначениеЗаполнено(Стр.Исполнитель) Тогда
				НовСтр=ТЗОценки.Добавить();
				НовСтр.ФизЛицо=Стр.Исполнитель;
			КонецЕсли; 
		КонецЦикла;
		ОбъектыПривязкиОценкаПриИзмененииСервер(ДокОбещание);
		УдалитьЛишниеАдресаты(ТЗОценки,ДокОбещание);
		ДокОбещание.ДатаКонтроляОценки=ТекущаяДата();
		ДокОбещание.Исполнители.Сортировать("Наименование");
		ДокОбещание.Записать();
		
		
		ТЗАдресатов=ТЗОценки.Скопировать();
		ТЗАдресатов.Свернуть("ФизЛицо");
		МассивАдресов=ТЗАдресатов.ВыгрузитьКолонку("ФизЛицо");
		Для каждого Эл Из МассивАдресов Цикл
			ОтправитьПисьмоОбИндивилуальныхОценках(ДокОбещание,Эл,ТЗОценки,СоотПисемОбОценках,ТЗЭлАдреса);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДинамикуОценки(Оценка1,Оценка2) Экспорт
	Если Оценка1=Оценка2 Тогда
		Возврат Перечисления.ДинамикаОценок.ПоПрежнему;
	ИначеЕсли Оценка1=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется И 
		(Оценка2=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется ИЛИ Оценка2=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется) Тогда	
		Возврат Перечисления.ДинамикаОценок.Улучшается;
	ИначеЕсли Оценка1=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется И Оценка2=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется  Тогда
		Возврат Перечисления.ДинамикаОценок.Улучшается;
	ИначеЕсли Оценка1=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется И Оценка2=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется  Тогда
		Возврат Перечисления.ДинамикаОценок.Ухудшается;
	ИначеЕсли Оценка1=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется И 
		(Оценка2=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется ИЛИ Оценка2=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется) Тогда	
		Возврат Перечисления.ДинамикаОценок.Ухудшается;
	Иначе	
		Возврат Перечисления.ДинамикаОценок.ПустаяСсылка();
	КонецЕсли; 
	

КонецФункции // ()
 

Функция ПолучитьТаблицуРезультата()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ОбращенияПокупателей.РезультатОбращения.Код = ""117""
	|				ТОГДА 1
	|			КОГДА ОбращенияПокупателей.РезультатОбращения.Код = ""18""
	|				ТОГДА 2
	|			ИНАЧЕ 3
	|		КОНЕЦ) КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	ОбращенияПокупателей.ТипОбращения = &ТипОбращения
	|	И ОбращенияПокупателей.ТипЖалобы <> &ТипЖалобы
	|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбращенияПокупателей.СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеОбъектРольСрезПоследних.Объект КАК СтруктурнаяЕдиница,
	|	ЕСТЬNULL(вт.РезультатОбращения, 0) КАК РезультатОбращения,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя
	|ИЗ
	//+++ AK suvv 2018.06.08 ИП-00018376.01
	//|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли ИЛИ ТипРоли = &ТипРолиСторонняяРозница) КАК СоответствиеОбъектРольСрезПоследних
	//--- AK suvv
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт КАК вт
	|		ПО вт.СтруктурнаяЕдиница = СоответствиеОбъектРольСрезПоследних.Объект
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)";
	КонецНедели=НачалоНедели(ТекущаяДата())-1;
	НачалоНедели=НачалоНедели(КонецНедели);	
	Запрос.УстановитьПараметр("ДатаДок1", НачалоНедели);
	Запрос.УстановитьПараметр("ДатаДок2", КонецНедели);
	Запрос.УстановитьПараметр("ТипОбращения", Справочники.ТипыОбращенийПокупателей.НайтиПоКоду("206"));
	
	Запрос.УстановитьПараметр("ТипЖалобы", Справочники.ТипыЖалоб.НайтиПоКоду("216"));//Справочники.ТипыЖалоб.НайтиПоНаименованию("06_8 Благодарность продавцу"));
	Запрос.УстановитьПараметр("ТипРоли", ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего);
	//+++ AK suvv 2018.06.08 ИП-00018376.01
	Запрос.УстановитьПараметр("ТипРолиСторонняяРозница", ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы);
	//--- AK suvv
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	
	//Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОбращенияПокупателей.РезультатОбращения КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОбращенияПокупателей.ДатаДок КАК ДатаДок,
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель,
	|	ОбращенияПокупателей.ТипЖалобы
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	ОбращенияПокупателей.ТипОбращения = &ТипОбращения
	|	И ОбращенияПокупателей.ТипЖалобы <> &ТипЖалобы
	|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,
	|	СтруктурнаяЕдиница";
	Результат = Запрос.Выполнить();
	ТЗОбращения = Результат.Выгрузить();
	ТЗ.Колонки.Добавить("МасСтрок");
	Для каждого Стр Из ТЗ Цикл
		МасСтр=ТЗОбращения.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница",Стр.СтруктурнаяЕдиница));
		ТЗДетализация=ТЗОбращения.СкопироватьКолонки();
		Для каждого Эл Из МасСтр Цикл
			НовСтрДет=ТЗДетализация.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрДет,Эл);
		КонецЦикла; 
		Стр.МасСтрок=Новый ХранилищеЗначения(ТЗДетализация);
	КонецЦикла; 
	
	
	Возврат ТЗ;
	
КонецФункции // ()

Функция ПолучитьТаблицуРезультатаОбещания15()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ОбращенияПокупателей.РезультатОбращения) КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	ОбращенияПокупателей.ТипЖалобы = &ТипЖалобы
	|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2
	|	И ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы1
	|	И ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы2
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбращенияПокупателей.СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО,
	|	РолиПользователейТипыРолей.Ссылка как РольПользователя
	|ПОМЕСТИТЬ втЦФО
	|ИЗ
	|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&ДатаДок2, СтруктурнаяЕдиница.Активное = ИСТИНА) КАК ЦФОСтруктурныхЕдиницСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ) КАК СоответствиеОбъектРольСрезПоследних
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.ТипыРолей КАК РолиПользователейТипыРолей
	|			ПО (РолиПользователейТипыРолей.ТипРоли = &ТипРоли)
	|				И (СоответствиеОбъектРольСрезПоследних.РольПользователя.Родитель = РолиПользователейТипыРолей.Ссылка)
	|		ПО ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница = СоответствиеОбъектРольСрезПоследних.Объект
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница,
	|	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО,
	|	РолиПользователейТипыРолей.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(втЦФО.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиница,
	|	втЦФО.ЦФО,
	|	втЦФО.РольПользователя
	|ПОМЕСТИТЬ втЦФОКол
	|ИЗ
	|	втЦФО КАК втЦФО
	|
	|СГРУППИРОВАТЬ ПО
	|	втЦФО.ЦФО,
	|	втЦФО.РольПользователя
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЦФОКол.ЦФО,
	|	МАКСИМУМ(втЦФОКол.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ втЦФОКолМакс
	|ИЗ
	|	втЦФОКол КАК втЦФОКол
	|
	|СГРУППИРОВАТЬ ПО
	|	втЦФОКол.ЦФО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЦФОКол.СтруктурнаяЕдиница,
	|	втЦФОКол.ЦФО,
	|	втЦФОКол.РольПользователя
	|ПОМЕСТИТЬ втЦФОИтог
	|ИЗ
	|	втЦФОКол КАК втЦФОКол
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦФОКолМакс КАК втЦФОКолМакс
	|		ПО втЦФОКол.ЦФО = втЦФОКолМакс.ЦФО
	|			И втЦФОКол.СтруктурнаяЕдиница = втЦФОКолМакс.СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО,
	|	СУММА(ЕСТЬNULL(вт.РезультатОбращения, 0)) КАК РезультатОбращения
	|ПОМЕСТИТЬ втОбращения
	|ИЗ
	|	вт КАК вт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&ДатаДок2, СтруктурнаяЕдиница.Активное = ИСТИНА) КАК ЦФОСтруктурныхЕдиницСрезПоследних
	|		ПО вт.СтруктурнаяЕдиница = ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втЦФОИтог.ЦФО КАК СтруктурнаяЕдиница,
	|	втЦФОИтог.РольПользователя,
	|	СУММА(ЕСТЬNULL(втОбращения.РезультатОбращения, 0)) КАК РезультатОбращения
	|ИЗ
	|	втЦФОИтог КАК втЦФОИтог
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОбращения КАК втОбращения
	|		ПО втЦФОИтог.ЦФО = втОбращения.ЦФО
	|
	|СГРУППИРОВАТЬ ПО
	|	втЦФОИтог.ЦФО,
	|	втЦФОИтог.РольПользователя";
	
	Запрос.УстановитьПараметр("ДатаДок1", НачалоДня(ДобавитьМесяц(ТекущаяДата()-3*24*60*60,-1)));
	Запрос.УстановитьПараметр("ДатаДок2", КонецДня(ТекущаяДата()-3*24*60*60));
	
	Запрос.УстановитьПараметр("ТипЖалобы", Справочники.ТипыЖалоб.НайтиПоКоду("256"));//Справочники.ТипыЖалоб.НайтиПоНаименованию("06_12 Нарушение санитарных норм "));
	Запрос.УстановитьПараметр("СтатусЖалобы1", Перечисления.СтатусыЖалоб.ВРаботе);
	Запрос.УстановитьПараметр("СтатусЖалобы2", Перечисления.СтатусыЖалоб.НеПодтверждена);
	
	Запрос.УстановитьПараметр("ТипРоли", ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоНаименованию("Управляющий по рознице"));
	Результат = Запрос.Выполнить();
	
	
	ТЗ = Результат.Выгрузить();
	
	Запрос.Текст = 
	
	
	"ВЫБРАТЬ
	|	ОбращенияПокупателей.РезультатОбращения КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОбращенияПокупателей.ДатаДок КАК ДатаДок,
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель,
	|	ОбращенияПокупателей.ТипЖалобы,
	|	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&ДатаДок2, СтруктурнаяЕдиница.Активное = ИСТИНА) КАК ЦФОСтруктурныхЕдиницСрезПоследних
	|		ПО (ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница = ОбращенияПокупателей.СтруктурнаяЕдиница)
	|ГДЕ
	|	ОбращенияПокупателей.ТипЖалобы = &ТипЖалобы
	|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2
	|	И ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы1
	|	И ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы2
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,
	|	СтруктурнаяЕдиница";
	Результат = Запрос.Выполнить();
	ТЗОбращения = Результат.Выгрузить();
	ТЗ.Колонки.Добавить("МасСтрок");
	Для каждого Стр Из ТЗ Цикл
		МасСтр=ТЗОбращения.НайтиСтроки(Новый Структура("ЦФО",Стр.СтруктурнаяЕдиница));
		ТЗДетализация=ТЗОбращения.СкопироватьКолонки();
		Для каждого Эл Из МасСтр Цикл
			НовСтрДет=ТЗДетализация.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрДет,Эл);
		КонецЦикла; 
		Стр.МасСтрок=Новый ХранилищеЗначения(ТЗДетализация);
	КонецЦикла; 
	
	
	Возврат ТЗ;
	
КонецФункции // ()


Функция ПолучитьТаблицуРезультатаОбещания37()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТабельРаботыПродавцов.ТорговаяТочка КАК СтруктурнаяЕдиница,
	|	ТабельРаботыПродавцов.Период КАК Дата,
	|	ТабельРаботыПродавцов.Сотрудник КАК Исполнитель
	|ПОМЕСТИТЬ втОбещ
	|ИЗ
	|	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
	|ГДЕ
	|	ТабельРаботыПродавцов.Период МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаДок1, МЕСЯЦ, -2) И &ДатаДок2
	|	И ТабельРаботыПродавцов.СвойствоПродавца = 2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбещ.Дата,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ОбращенияПокупателей.РезультатОбращения ЕСТЬ NULL
	|				ТОГДА 0
	|			КОГДА ОбращенияПокупателей.РезультатОбращения.Код = ""117""
	|				ТОГДА 1
	|			КОГДА ОбращенияПокупателей.РезультатОбращения.Код = ""18""
	|				ТОГДА 2
	|			ИНАЧЕ 3
	|		КОНЕЦ) КАК РезультатОбращения,
	|	втОбещ.СтруктурнаяЕдиница,
	|	втОбещ.Исполнитель
	|ПОМЕСТИТЬ втСтарыеОценки
	|ИЗ
	|	втОбещ КАК втОбещ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|		ПО (ОбращенияПокупателей.ДатаДок >= ДОБАВИТЬКДАТЕ(&ДатаДок1, ДЕНЬ, -66))
	|			И (ОбращенияПокупателей.ДатаДок <= ДОБАВИТЬКДАТЕ(&ДатаДок2, ДЕНЬ, 5))
	|			И (ОбращенияПокупателей.ТипОбращения = &ТипОбращения)
	|			И (ОбращенияПокупателей.ТипЖалобы <> &ТипЖалобы)
	|			И (ОбращенияПокупателей.ТипЖалобы <> &ТипЖалобы1)
	|			И (НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ) = втОбещ.Дата)
	|			И втОбещ.СтруктурнаяЕдиница = ОбращенияПокупателей.СтруктурнаяЕдиница
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбещ.Дата,
	|	втОбещ.СтруктурнаяЕдиница,
	|	втОбещ.Исполнитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ОбращенияПокупателей.РезультатОбращения.Код = ""117""
	|				ТОГДА 1
	|			КОГДА ОбращенияПокупателей.РезультатОбращения.Код = ""18""
	|				ТОГДА 2
	|			ИНАЧЕ 3
	|		КОНЕЦ) КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница,
	|	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ) КАК Период
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	ОбращенияПокупателей.ДатаДок >= ДОБАВИТЬКДАТЕ(&ДатаДок1, ДЕНЬ, -5)
	|	И ОбращенияПокупателей.ДатаДок <= ДОБАВИТЬКДАТЕ(&ДатаДок2, ДЕНЬ, 5)
	|	И ОбращенияПокупателей.ТипОбращения = &ТипОбращения
	|	И ОбращенияПокупателей.ТипЖалобы <> &ТипЖалобы
	|	И ОбращенияПокупателей.ТипЖалобы <> &ТипЖалобы1
	|	И ОбращенияПокупателей.ДатаСобытия >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаСобытия <= &ДатаДок2
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбращенияПокупателей.СтруктурнаяЕдиница,
	|	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСтарыеОценки.Дата,
	|	втСтарыеОценки.РезультатОбращения,
	|	втСтарыеОценки.СтруктурнаяЕдиница,
	|	втСтарыеОценки.Исполнитель
	|ПОМЕСТИТЬ втСтарыеОценкиБезДублей
	|ИЗ
	|	втСтарыеОценки КАК втСтарыеОценки
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт КАК вт
	|		ПО втСтарыеОценки.СтруктурнаяЕдиница = вт.СтруктурнаяЕдиница
	|			И втСтарыеОценки.Дата = вт.Период
	|ГДЕ
	|	вт.РезультатОбращения ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабельРаботыПродавцов.ТорговаяТочка КАК СтруктурнаяЕдиница,
	|	ЕСТЬNULL(вт.РезультатОбращения, 0) КАК РезультатОбращения,
	|	вт.Период КАК ДатаДок,
	|	ТабельРаботыПродавцов.Сотрудник
	|ИЗ
	|	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт КАК вт
	|		ПО (вт.СтруктурнаяЕдиница = ТабельРаботыПродавцов.ТорговаяТочка)
	|			И ТабельРаботыПродавцов.Период = вт.Период
	|			И (ТабельРаботыПродавцов.СвойствоПродавца = 2)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСтарыеОценкиБезДублей.СтруктурнаяЕдиница,
	|	втСтарыеОценкиБезДублей.РезультатОбращения,
	|	втСтарыеОценкиБезДублей.Дата,
	|	втСтарыеОценкиБезДублей.Исполнитель
	|ИЗ
	|	втСтарыеОценкиБезДублей КАК втСтарыеОценкиБезДублей
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,СтруктурнаяЕдиница
	|	";
	КонецНедели=НачалоДня(ТекущаяДата())-1-24*60*60;
	НачалоНедели=НачалоДня(НачалоДня(ТекущаяДата())-24*60*60-1);	
	Запрос.УстановитьПараметр("ДатаДок1", НачалоНедели);
	Запрос.УстановитьПараметр("ДатаДок2", КонецНедели);
	Запрос.УстановитьПараметр("ТипОбращения", Справочники.ТипыОбращенийПокупателей.НайтиПоКоду("206"));
	Запрос.УстановитьПараметр("ТипЖалобы", Справочники.ТипыЖалоб.НайтиПоКоду("216"));//Справочники.ТипыЖалоб.НайтиПоНаименованию("06_8 Благодарность продавцу"));
	Запрос.УстановитьПараметр("ТипЖалобы1", Справочники.ТипыЖалоб.НайтиПоКоду("213"));//Справочники.ТипыЖалоб.НайтиПоНаименованию("06_4 Низкая температура в магазине"));
	Док = Документы.Обещание.НайтиПоНомеру("000000037",'20160101');
	Запрос.УстановитьПараметр("Ссылка", Док);
	
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОбращенияПокупателей.РезультатОбращения КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ)  КАК ДатаДок1,
	|	(ОбращенияПокупателей.ДатаСобытия)  КАК ДатаДок,
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель,
	|	ОбращенияПокупателей.ТипЖалобы
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	 ОбращенияПокупателей.ДатаДок>= ДобавитьКДате(&ДатаДок1,День,-66)
	|	И ОбращенияПокупателей.ДатаДок <= ДобавитьКДате(&ДатаДок2,День,5) И
	|	ОбращенияПокупателей.ТипОбращения = &ТипОбращения И ОбращенияПокупателей.ТипЖалобы <> &ТипЖалобы1
	|	И ОбращенияПокупателей.ТипЖалобы <> &ТипЖалобы
	|	И ОбращенияПокупателей.ДатаСобытия >= ДОБАВИТЬКДАТЕ(&ДатаДок1, МЕСЯЦ, -2)
	|	И ОбращенияПокупателей.ДатаСобытия <= &ДатаДок2
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,
	|	СтруктурнаяЕдиница";
	Результат = Запрос.Выполнить();
	ТЗОбращения = Результат.Выгрузить();
	ТЗ.Колонки.Добавить("МасСтрок");
	Для каждого Стр Из ТЗ Цикл
		МасСтр=ТЗОбращения.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница,ДатаДок1",Стр.СтруктурнаяЕдиница,Стр.ДатаДок));
		ТЗДетализация=ТЗОбращения.СкопироватьКолонки();
		Для каждого Эл Из МасСтр Цикл
			НовСтрДет=ТЗДетализация.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрДет,Эл);
		КонецЦикла; 
		Стр.МасСтрок=Новый ХранилищеЗначения(ТЗДетализация);
	КонецЦикла; 
	
	
	
	Возврат ТЗ;
	
КонецФункции // ()

Функция ПолучитьТаблицуРезультатаОбещания14()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТабельРаботыПродавцов.ТорговаяТочка КАК СтруктурнаяЕдиница,
	|	ТабельРаботыПродавцов.Период КАК Дата,
	|	ТабельРаботыПродавцов.Сотрудник КАК Исполнитель
	|ПОМЕСТИТЬ втОбещ
	|ИЗ
	|	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
	|ГДЕ
	|	ТабельРаботыПродавцов.Период МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаДок1, ДЕНЬ, -15) И &ДатаДок2
	|	И ТабельРаботыПродавцов.СвойствоПродавца = 0
	|	И ТабельРаботыПродавцов.КоличествоЧасов > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбещ.Дата,
	|	СУММА(ВЫБОР
	|			КОГДА ОбращенияПокупателей.РезультатОбращения ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК РезультатОбращения,
	|	втОбещ.СтруктурнаяЕдиница,
	|	втОбещ.Исполнитель
	|ПОМЕСТИТЬ втСтарыеОценки
	|ИЗ
	|	втОбещ КАК втОбещ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|		ПО (ОбращенияПокупателей.ДатаДок >= ДОБАВИТЬКДАТЕ(&ДатаДок1, ДЕНЬ, -20))
	|			И (ОбращенияПокупателей.ДатаДок <= ДОБАВИТЬКДАТЕ(&ДатаДок2, ДЕНЬ, 5))
	|			И (ОбращенияПокупателей.ТипЖалобы В (&ТипЖалобы))
	|			И (ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы)
	|			И (НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ) = втОбещ.Дата)
	|			И втОбещ.СтруктурнаяЕдиница = ОбращенияПокупателей.СтруктурнаяЕдиница
	|			И (втОбещ.Исполнитель = ОбращенияПокупателей.Продавец1
	|				ИЛИ втОбещ.Исполнитель = ОбращенияПокупателей.Продавец2
	|				ИЛИ ОбращенияПокупателей.Продавец1 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.пустаяСсылка)
	|					И ОбращенияПокупателей.Продавец2 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.пустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбещ.Дата,
	|	втОбещ.СтруктурнаяЕдиница,
	|	втОбещ.Исполнитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ОбращенияПокупателей.РезультатОбращения) КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница,
	|	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ) КАК Период,
	|	ОбращенияПокупателей.Продавец1,
	|	ОбращенияПокупателей.Продавец2
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	ОбращенияПокупателей.ДатаДок >= ДОБАВИТЬКДАТЕ(&ДатаДок1, ДЕНЬ, -5)
	|	И ОбращенияПокупателей.ДатаДок <= ДОБАВИТЬКДАТЕ(&ДатаДок2, ДЕНЬ, 5)
	|	И ОбращенияПокупателей.ТипЖалобы В(&ТипЖалобы)
	|	И ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
	|	И ОбращенияПокупателей.ДатаСобытия >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаСобытия <= &ДатаДок2
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбращенияПокупателей.СтруктурнаяЕдиница,
	|	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ),
	|	ОбращенияПокупателей.Продавец1,
	|	ОбращенияПокупателей.Продавец2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСтарыеОценки.Дата,
	|	втСтарыеОценки.РезультатОбращения,
	|	втСтарыеОценки.СтруктурнаяЕдиница,
	|	втСтарыеОценки.Исполнитель
	|ПОМЕСТИТЬ втСтарыеОценкиБезДублей
	|ИЗ
	|	втСтарыеОценки КАК втСтарыеОценки
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт КАК вт
	|		ПО втСтарыеОценки.СтруктурнаяЕдиница = вт.СтруктурнаяЕдиница
	|			И втСтарыеОценки.Дата = вт.Период
	|ГДЕ
	|	вт.РезультатОбращения ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабельРаботыПродавцов.ТорговаяТочка КАК СтруктурнаяЕдиница,
	|	ТабельРаботыПродавцов.Период КАК Период,
	|	ТабельРаботыПродавцов.Сотрудник
	|ПОМЕСТИТЬ втТабель
	|ИЗ
	|	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
	|ГДЕ
	|	ТабельРаботыПродавцов.Период >= &ДатаДок1
	|	И ТабельРаботыПродавцов.Период <= &ДатаДок2
	|	И ТабельРаботыПродавцов.СвойствоПродавца = 0
	|	И ТабельРаботыПродавцов.КоличествоЧасов > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабельРаботыПродавцов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ЕСТЬNULL(вт.РезультатОбращения, 0)) КАК РезультатОбращения,
	|	ТабельРаботыПродавцов.Период КАК ДатаДок,
	|	ТабельРаботыПродавцов.Сотрудник
	|ИЗ
	|	втТабель КАК ТабельРаботыПродавцов
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт КАК вт
	|		ПО (вт.СтруктурнаяЕдиница = ТабельРаботыПродавцов.СтруктурнаяЕдиница)
	|			И ТабельРаботыПродавцов.Период = вт.Период
	|			И (ТабельРаботыПродавцов.Сотрудник = вт.Продавец1
	|				ИЛИ ТабельРаботыПродавцов.Сотрудник = вт.Продавец2
	|				ИЛИ вт.Продавец1 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.пустаяСсылка)
	|					И вт.Продавец2 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.пустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабельРаботыПродавцов.СтруктурнаяЕдиница,
	|	ТабельРаботыПродавцов.Период,
	|	ТабельРаботыПродавцов.Сотрудник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСтарыеОценкиБезДублей.СтруктурнаяЕдиница,
	|	втСтарыеОценкиБезДублей.РезультатОбращения,
	|	втСтарыеОценкиБезДублей.Дата,
	|	втСтарыеОценкиБезДублей.Исполнитель
	|ИЗ
	|	втСтарыеОценкиБезДублей КАК втСтарыеОценкиБезДублей
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,СтруктурнаяЕдиница
	|	";

	КонецНедели=НачалоДня(ТекущаяДата())-1-24*60*60;
	НачалоНедели=НачалоДня(НачалоДня(ТекущаяДата())-1*24*60*60-1);	
	Запрос.УстановитьПараметр("СтатусЖалобы", Перечисления.СтатусыЖалоб.НеПодтверждена);
	Запрос.УстановитьПараметр("ДатаДок1", НачалоНедели);
	Запрос.УстановитьПараметр("ДатаДок2", КонецНедели);
	Запрос.УстановитьПараметр("ТипОбращения", Справочники.ТипыОбращенийПокупателей.НайтиПоКоду("206"));
	ТипЖалобы=Новый СписокЗначений;
	ТипЖалобы.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("211"));
	ТипЖалобы.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("187"));
	ТипЖалобы.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("115"));
	
	Запрос.УстановитьПараметр("ТипЖалобы", ТипЖалобы);
	Док = Документы.Обещание.НайтиПоНомеру("000000014",'20160101');
	Запрос.УстановитьПараметр("Ссылка", Док);
	
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОбращенияПокупателей.РезультатОбращения КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ) КАК ДатаДок1,
	|	ОбращенияПокупателей.ДатаСобытия КАК ДатаДок,
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель,
	|	ОбращенияПокупателей.ТипЖалобы,
	|	ОбращенияПокупателей.Продавец1,
	|	ОбращенияПокупателей.Продавец2
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	 ОбращенияПокупателей.ДатаДок>= ДобавитьКДате(&ДатаДок1,День,-20)
	|	И ОбращенияПокупателей.ДатаДок <= ДобавитьКДате(&ДатаДок2,День,5) И
	|	ОбращенияПокупателей.ТипЖалобы в(&ТипЖалобы)
	|	И ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
	|	И ОбращенияПокупателей.ДатаСобытия >= ДОБАВИТЬКДАТЕ(&ДатаДок1, ДЕНЬ, -15)
	|	И ОбращенияПокупателей.ДатаСобытия <= &ДатаДок2
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,
	|	СтруктурнаяЕдиница";
	Результат = Запрос.Выполнить();
	ТЗОбращения = Результат.Выгрузить();
	ТЗОбращения.Индексы.Добавить("СтруктурнаяЕдиница,ДатаДок1");
	ТЗ.Колонки.Добавить("МасСтрок");
	Для каждого Стр Из ТЗ Цикл
		МасСтр=ТЗОбращения.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница,ДатаДок1",Стр.СтруктурнаяЕдиница,Стр.ДатаДок));
		ТЗДетализация=ТЗОбращения.СкопироватьКолонки();
		Для каждого Эл Из МасСтр Цикл
			Если Эл.Продавец1=Стр.Сотрудник ИЛИ Эл.Продавец2=Стр.Сотрудник ИЛИ НЕ ЗначениеЗаполнено(Эл.Продавец1) И НЕ ЗначениеЗаполнено(Эл.Продавец2) Тогда
				НовСтрДет=ТЗДетализация.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтрДет,Эл);
			КонецЕсли; 
		КонецЦикла; 
		Стр.МасСтрок=(Новый ХранилищеЗначения(ТЗДетализация));
	КонецЦикла; 

	
	Возврат ТЗ;

	
КонецФункции // ()

Функция ПолучитьТаблицуРезультатаОбещания16()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"	ВЫБРАТЬ
	|	ТабельРаботыПродавцов.ТорговаяТочка КАК СтруктурнаяЕдиница,
	|	ТабельРаботыПродавцов.Период КАК Дата,
	|	ТабельРаботыПродавцов.Сотрудник КАК Исполнитель
	|ПОМЕСТИТЬ втОбещ
	|ИЗ
	|	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
	|ГДЕ
	|	ТабельРаботыПродавцов.Период МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаДок1, ДЕНЬ, -15) И &ДатаДок2
	|	И ТабельРаботыПродавцов.СвойствоПродавца = 0
	|	И ТабельРаботыПродавцов.КоличествоЧасов > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбещ.Дата,
	|	СУММА(ВЫБОР
	|			КОГДА ОбращенияПокупателей.РезультатОбращения ЕСТЬ NULL
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ) КАК РезультатОбращения,
	|	втОбещ.СтруктурнаяЕдиница,
	|	втОбещ.Исполнитель
	|ПОМЕСТИТЬ втСтарыеОценки
	|ИЗ
	|	втОбещ КАК втОбещ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|		ПО 
	|	 ОбращенияПокупателей.ДатаДок>= ДобавитьКДате(&ДатаДок1,День,-20)
	|	И ОбращенияПокупателей.ДатаДок <= ДобавитьКДате(&ДатаДок2,День,5) И
	|	(ОбращенияПокупателей.ТипЖалобы = &ТипЖалобы)
	|			И (ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы)
	|			И (НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ) = втОбещ.Дата)
	|			И втОбещ.СтруктурнаяЕдиница = ОбращенияПокупателей.СтруктурнаяЕдиница
	|			И (втОбещ.Исполнитель = ОбращенияПокупателей.Продавец1
	|				ИЛИ втОбещ.Исполнитель = ОбращенияПокупателей.Продавец2
	|				ИЛИ ОбращенияПокупателей.Продавец1 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.пустаяСсылка)
	|					И ОбращенияПокупателей.Продавец2 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.пустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбещ.Дата,
	|	втОбещ.СтруктурнаяЕдиница,
	|	втОбещ.Исполнитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ОбращенияПокупателей.РезультатОбращения) КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница,
	|	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ) КАК Период,
	|	ОбращенияПокупателей.Продавец1,
	|	ОбращенияПокупателей.Продавец2
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	 ОбращенияПокупателей.ДатаДок>= ДобавитьКДате(&ДатаДок1,День,-5)
	|	И ОбращенияПокупателей.ДатаДок <= ДобавитьКДате(&ДатаДок2,День,5) И
	|	ОбращенияПокупателей.ТипЖалобы = &ТипЖалобы
	|	И ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
	|	И ОбращенияПокупателей.ДатаСобытия >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаСобытия <= &ДатаДок2
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбращенияПокупателей.СтруктурнаяЕдиница,
	|	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ),
	|	ОбращенияПокупателей.Продавец1,
	|	ОбращенияПокупателей.Продавец2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСтарыеОценки.Дата,
	|	втСтарыеОценки.РезультатОбращения,
	|	втСтарыеОценки.СтруктурнаяЕдиница,
	|	втСтарыеОценки.Исполнитель
	|ПОМЕСТИТЬ втСтарыеОценкиБезДублей
	|ИЗ
	|	втСтарыеОценки КАК втСтарыеОценки
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт КАК вт
	|		ПО втСтарыеОценки.СтруктурнаяЕдиница = вт.СтруктурнаяЕдиница
	|			И втСтарыеОценки.Дата = вт.Период
	|ГДЕ
	|	вт.РезультатОбращения ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабельРаботыПродавцов.ТорговаяТочка КАК СтруктурнаяЕдиница,
	|	ТабельРаботыПродавцов.Период КАК Период,
	|	ТабельРаботыПродавцов.Сотрудник
	|ПОМЕСТИТЬ втТабель
	|ИЗ
	|	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
	|ГДЕ
	|	ТабельРаботыПродавцов.Период >= &ДатаДок1
	|	И ТабельРаботыПродавцов.Период <= &ДатаДок2
	|	И ТабельРаботыПродавцов.СвойствоПродавца = 0
	|	И ТабельРаботыПродавцов.КоличествоЧасов > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабельРаботыПродавцов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	СУММА(ЕСТЬNULL(вт.РезультатОбращения, 0)) КАК РезультатОбращения,
	|	ТабельРаботыПродавцов.Период КАК ДатаДок,
	|	ТабельРаботыПродавцов.Сотрудник
	|ИЗ
	|	втТабель КАК ТабельРаботыПродавцов
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт КАК вт
	|		ПО (вт.СтруктурнаяЕдиница = ТабельРаботыПродавцов.СтруктурнаяЕдиница)
	|			И ТабельРаботыПродавцов.Период = вт.Период
	|			И (ТабельРаботыПродавцов.Сотрудник = вт.Продавец1
	|				ИЛИ ТабельРаботыПродавцов.Сотрудник = вт.Продавец2
	|				ИЛИ вт.Продавец1 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.пустаяСсылка)
	|					И вт.Продавец2 = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.пустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабельРаботыПродавцов.СтруктурнаяЕдиница,
	|	ТабельРаботыПродавцов.Период,
	|	ТабельРаботыПродавцов.Сотрудник
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСтарыеОценкиБезДублей.СтруктурнаяЕдиница,
	|	втСтарыеОценкиБезДублей.РезультатОбращения,
	|	втСтарыеОценкиБезДублей.Дата,
	|	втСтарыеОценкиБезДублей.Исполнитель
	|ИЗ
	|	втСтарыеОценкиБезДублей КАК втСтарыеОценкиБезДублей
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,СтруктурнаяЕдиница
	|	";

	КонецНедели=НачалоДня(ТекущаяДата())-1-24*60*60;
	НачалоНедели=НачалоДня(НачалоДня(ТекущаяДата())-1*24*60*60-1);	
	Запрос.УстановитьПараметр("СтатусЖалобы", Перечисления.СтатусыЖалоб.НеПодтверждена);
	Запрос.УстановитьПараметр("ДатаДок1", НачалоНедели);
	Запрос.УстановитьПараметр("ДатаДок2", КонецНедели);
	Запрос.УстановитьПараметр("ТипОбращения", Справочники.ТипыОбращенийПокупателей.НайтиПоКоду("206"));
	Запрос.УстановитьПараметр("ТипЖалобы", Справочники.ТипыЖалоб.НайтиПоКоду("252"));//Справочники.ТипыЖалоб.НайтиПоНаименованию("06_9 Продажа просроченной продукции "));
	Док = Документы.Обещание.НайтиПоНомеру("000000016",'20160101');
	Запрос.УстановитьПараметр("Ссылка", Док);
	
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОбращенияПокупателей.РезультатОбращения КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ) КАК ДатаДок1,
	|	ОбращенияПокупателей.ДатаСобытия КАК ДатаДок,
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель,
	|	ОбращенияПокупателей.ТипЖалобы,
	|	ОбращенияПокупателей.Продавец1,
	|	ОбращенияПокупателей.Продавец2
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	 ОбращенияПокупателей.ДатаДок>= ДобавитьКДате(&ДатаДок1,День,-20)
	|	И ОбращенияПокупателей.ДатаДок <= ДобавитьКДате(&ДатаДок2,День,5) И
	|	ОбращенияПокупателей.ТипЖалобы =(&ТипЖалобы)
	|	И ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
	|	И ОбращенияПокупателей.ДатаСобытия >= ДОБАВИТЬКДАТЕ(&ДатаДок1, ДЕНЬ, -15)
	|	И ОбращенияПокупателей.ДатаСобытия <= &ДатаДок2
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,
	|	СтруктурнаяЕдиница";
	Результат = Запрос.Выполнить();
	ТЗОбращения = Результат.Выгрузить();
	ТЗОбращения.Индексы.Добавить("СтруктурнаяЕдиница,ДатаДок1");
	ТЗ.Колонки.Добавить("МасСтрок");
	Для каждого Стр Из ТЗ Цикл
		МасСтр=ТЗОбращения.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница,ДатаДок1",Стр.СтруктурнаяЕдиница,Стр.ДатаДок));
		ТЗДетализация=ТЗОбращения.СкопироватьКолонки();
		Для каждого Эл Из МасСтр Цикл
			Если Эл.Продавец1=Стр.Сотрудник ИЛИ Эл.Продавец2=Стр.Сотрудник ИЛИ НЕ ЗначениеЗаполнено(Эл.Продавец1) И НЕ ЗначениеЗаполнено(Эл.Продавец2) Тогда
				НовСтрДет=ТЗДетализация.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтрДет,Эл);
			КонецЕсли; 
		КонецЦикла; 
		Стр.МасСтрок=(Новый ХранилищеЗначения(ТЗДетализация));
	КонецЦикла; 

	
	Возврат ТЗ;
	
КонецФункции // ()

Функция ПолучитьТаблицуРезультатаОбещания17()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"	ВЫБРАТЬ
	|	ТабельРаботыПродавцов.ТорговаяТочка КАК СтруктурнаяЕдиница,
	|	ТабельРаботыПродавцов.Период КАК Дата,
	|	ТабельРаботыПродавцов.Сотрудник КАК Исполнитель
	|ПОМЕСТИТЬ втОбещ
	|ИЗ
	|	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
	|ГДЕ
	|	ТабельРаботыПродавцов.Период МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаДок1, ДЕНЬ, -15) И &ДатаДок2
	|	И ТабельРаботыПродавцов.СвойствоПродавца = 2
	|	И ТабельРаботыПродавцов.КоличествоЧасов > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбещ.Дата,
	|	Сумма(Выбор когда ОбращенияПокупателей.РезультатОбращения есть null тогда 0 иначе 1 конец) КАК РезультатОбращения,
	|	втОбещ.СтруктурнаяЕдиница,
	|	втОбещ.Исполнитель
	|ПОМЕСТИТЬ втСтарыеОценки
	|ИЗ
	|	втОбещ КАК втОбещ
	|		Левое СОЕДИНЕНИЕ РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|		ПО 
	|	 ОбращенияПокупателей.ДатаДок>= ДобавитьКДате(&ДатаДок1,День,-20)
	|	И ОбращенияПокупателей.ДатаДок <= ДобавитьКДате(&ДатаДок2,День,5) И
	|(ОбращенияПокупателей.ТипЖалобы = &ТипЖалобы)
	|			И (ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы)
	|			И (НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ) = втОбещ.Дата)
	|			И втОбещ.СтруктурнаяЕдиница = ОбращенияПокупателей.СтруктурнаяЕдиница
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбещ.Дата,
	|	втОбещ.СтруктурнаяЕдиница,
	|	втОбещ.Исполнитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ОбращенияПокупателей.РезультатОбращения) КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница,
	|	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ) КАК Период
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	 ОбращенияПокупателей.ДатаДок>= ДобавитьКДате(&ДатаДок1,День,-5)
	|	И ОбращенияПокупателей.ДатаДок <= ДобавитьКДате(&ДатаДок2,День,5) И
	|	ОбращенияПокупателей.ТипЖалобы = &ТипЖалобы
	|	И ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
	|	И ОбращенияПокупателей.ДатаСобытия >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаСобытия <= &ДатаДок2
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбращенияПокупателей.СтруктурнаяЕдиница,
	|	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСтарыеОценки.Дата,
	|	втСтарыеОценки.РезультатОбращения,
	|	втСтарыеОценки.СтруктурнаяЕдиница,
	|	втСтарыеОценки.Исполнитель
	|ПОМЕСТИТЬ втСтарыеОценкиБезДублей
	|ИЗ
	|	втСтарыеОценки КАК втСтарыеОценки
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт КАК вт
	|		ПО втСтарыеОценки.СтруктурнаяЕдиница = вт.СтруктурнаяЕдиница
	|			И втСтарыеОценки.Дата = вт.Период
	|ГДЕ
	|	вт.РезультатОбращения ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабельРаботыПродавцов.ТорговаяТочка КАК СтруктурнаяЕдиница,
	|	ТабельРаботыПродавцов.Период КАК Период,
	|	ТабельРаботыПродавцов.Сотрудник
	|ПОМЕСТИТЬ втТабель
	|ИЗ
	|	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
	|ГДЕ
	|	ТабельРаботыПродавцов.Период >= &ДатаДок1
	|	И ТабельРаботыПродавцов.Период <= &ДатаДок2
	|	И ТабельРаботыПродавцов.СвойствоПродавца = 2
	|	И ТабельРаботыПродавцов.КоличествоЧасов > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабельРаботыПродавцов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЕСТЬNULL(вт.РезультатОбращения, 0) КАК РезультатОбращения,
	|	ТабельРаботыПродавцов.Период КАК ДатаДок,
	|	ТабельРаботыПродавцов.Сотрудник
	|ИЗ
	|	втТабель КАК ТабельРаботыПродавцов
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт КАК вт
	|		ПО (вт.СтруктурнаяЕдиница = ТабельРаботыПродавцов.СтруктурнаяЕдиница)
	|			И ТабельРаботыПродавцов.Период = вт.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСтарыеОценкиБезДублей.СтруктурнаяЕдиница,
	|	втСтарыеОценкиБезДублей.РезультатОбращения,
	|	втСтарыеОценкиБезДублей.Дата,
	|	втСтарыеОценкиБезДублей.Исполнитель
	|ИЗ
	|	втСтарыеОценкиБезДублей КАК втСтарыеОценкиБезДублей
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,СтруктурнаяЕдиница
	|	";
	КонецНедели=НачалоДня(ТекущаяДата())-1-24*60*60;
	НачалоНедели=НачалоДня(НачалоДня(ТекущаяДата())-1*24*60*60-1);	
	Запрос.УстановитьПараметр("СтатусЖалобы", Перечисления.СтатусыЖалоб.НеПодтверждена);
	Запрос.УстановитьПараметр("ДатаДок1", НачалоНедели);
	Запрос.УстановитьПараметр("ДатаДок2", КонецНедели);
	Запрос.УстановитьПараметр("ТипОбращения", Справочники.ТипыОбращенийПокупателей.НайтиПоКоду("206"));
	Запрос.УстановитьПараметр("ТипЖалобы", Справочники.ТипыЖалоб.НайтиПоКоду("255"));//Справочники.ТипыЖалоб.НайтиПоНаименованию("06_11 Ошибка в оформлении возврата"));
	Док = Документы.Обещание.НайтиПоНомеру("000000017",'20160101');
	Запрос.УстановитьПараметр("Ссылка", Док);
	
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	
	
	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОбращенияПокупателей.РезультатОбращения КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ)  КАК ДатаДок1,
	|	(ОбращенияПокупателей.ДатаСобытия)  КАК ДатаДок,
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель,
	|	ОбращенияПокупателей.ТипЖалобы
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	 ОбращенияПокупателей.ДатаДок>= ДобавитьКДате(&ДатаДок1,День,-20)
	|	И ОбращенияПокупателей.ДатаДок <= ДобавитьКДате(&ДатаДок2,День,5) И
	|	ОбращенияПокупателей.ТипЖалобы = &ТипЖалобы И ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
	|	И ОбращенияПокупателей.ДатаСобытия >= ДОБАВИТЬКДАТЕ(&ДатаДок1, День, -15)
	|	И ОбращенияПокупателей.ДатаСобытия <= &ДатаДок2
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,
	|	СтруктурнаяЕдиница";
	Результат = Запрос.Выполнить();
	ТЗОбращения = Результат.Выгрузить();
	ТЗОбращения.Индексы.Добавить("СтруктурнаяЕдиница,ДатаДок1");
	ТЗ.Колонки.Добавить("МасСтрок");
	Для каждого Стр Из ТЗ Цикл
		МасСтр=ТЗОбращения.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница,ДатаДок1",Стр.СтруктурнаяЕдиница,Стр.ДатаДок));
		ТЗДетализация=ТЗОбращения.СкопироватьКолонки();
		Для каждого Эл Из МасСтр Цикл
			НовСтрДет=ТЗДетализация.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрДет,Эл);
		КонецЦикла; 
		Стр.МасСтрок=(Новый ХранилищеЗначения(ТЗДетализация));
	КонецЦикла; 
	
	Возврат ТЗ;
	
	
КонецФункции // ()

Функция ПолучитьТаблицуРезультатаОбещания20()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"	ВЫБРАТЬ
	|	ТабельРаботыПродавцов.ТорговаяТочка КАК СтруктурнаяЕдиница,
	|	ТабельРаботыПродавцов.Период КАК Дата,
	|	ТабельРаботыПродавцов.Сотрудник КАК Исполнитель
	|ПОМЕСТИТЬ втОбещ
	|ИЗ
	|	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
	|ГДЕ
	|	ТабельРаботыПродавцов.Период МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаДок1, ДЕНЬ, -15) И &ДатаДок2
	|	И ТабельРаботыПродавцов.СвойствоПродавца = 2
	|	И ТабельРаботыПродавцов.КоличествоЧасов > 0

	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбещ.Дата,
	|	Сумма(Выбор когда ОбращенияПокупателей.РезультатОбращения есть null тогда 0 иначе 1 конец) КАК РезультатОбращения,
	|	втОбещ.СтруктурнаяЕдиница,
	|	втОбещ.Исполнитель
	|ПОМЕСТИТЬ втСтарыеОценки
	|ИЗ
	|	втОбещ КАК втОбещ
	|		Левое СОЕДИНЕНИЕ РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|		ПО
	|	 ОбращенияПокупателей.ДатаДок>= ДобавитьКДате(&ДатаДок1,День,-20)
	|	И ОбращенияПокупателей.ДатаДок <= ДобавитьКДате(&ДатаДок2,День,5) И
	|((ОбращенияПокупателей.ТипЖалобы = &ТипЖалобы))
	|			И (ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы)
	|			И (НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ) = втОбещ.Дата)
	|			И втОбещ.СтруктурнаяЕдиница = ОбращенияПокупателей.СтруктурнаяЕдиница
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбещ.Дата,
	|	втОбещ.СтруктурнаяЕдиница,
	|	втОбещ.Исполнитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ОбращенияПокупателей.РезультатОбращения) КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница,
	|	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ) КАК Период
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	 ОбращенияПокупателей.ДатаДок>= ДобавитьКДате(&ДатаДок1,День,-5)
	|	И ОбращенияПокупателей.ДатаДок <= ДобавитьКДате(&ДатаДок2,День,5) И
	|	(ОбращенияПокупателей.ТипЖалобы = &ТипЖалобы )
	|	И ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
	|	И ОбращенияПокупателей.ДатаСобытия >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаСобытия <= &ДатаДок2
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбращенияПокупателей.СтруктурнаяЕдиница,
	|	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСтарыеОценки.Дата,
	|	втСтарыеОценки.РезультатОбращения,
	|	втСтарыеОценки.СтруктурнаяЕдиница,
	|	втСтарыеОценки.Исполнитель
	|ПОМЕСТИТЬ втСтарыеОценкиБезДублей
	|ИЗ
	|	втСтарыеОценки КАК втСтарыеОценки
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт КАК вт
	|		ПО втСтарыеОценки.СтруктурнаяЕдиница = вт.СтруктурнаяЕдиница
	|			И втСтарыеОценки.Дата = вт.Период
	|ГДЕ
	|	вт.РезультатОбращения ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабельРаботыПродавцов.ТорговаяТочка КАК СтруктурнаяЕдиница,
	|	ТабельРаботыПродавцов.Период КАК Период,
	|	ТабельРаботыПродавцов.Сотрудник
	|ПОМЕСТИТЬ втТабель
	|ИЗ
	|	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
	|ГДЕ
	|	ТабельРаботыПродавцов.Период >= &ДатаДок1
	|	И ТабельРаботыПродавцов.Период <= &ДатаДок2
	|	И ТабельРаботыПродавцов.СвойствоПродавца = 2
	|	И ТабельРаботыПродавцов.КоличествоЧасов > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабельРаботыПродавцов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЕСТЬNULL(вт.РезультатОбращения, 0) КАК РезультатОбращения,
	|	ТабельРаботыПродавцов.Период КАК ДатаДок,
	|	ТабельРаботыПродавцов.Сотрудник
	|ИЗ
	|	втТабель КАК ТабельРаботыПродавцов
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт КАК вт
	|		ПО (вт.СтруктурнаяЕдиница = ТабельРаботыПродавцов.СтруктурнаяЕдиница)
	|			И ТабельРаботыПродавцов.Период = вт.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСтарыеОценкиБезДублей.СтруктурнаяЕдиница,
	|	втСтарыеОценкиБезДублей.РезультатОбращения,
	|	втСтарыеОценкиБезДублей.Дата,
	|	втСтарыеОценкиБезДублей.Исполнитель
	|ИЗ
	|	втСтарыеОценкиБезДублей КАК втСтарыеОценкиБезДублей
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,СтруктурнаяЕдиница
	|	";
	КонецНедели=НачалоДня(ТекущаяДата())-1-24*60*60;
	НачалоНедели=НачалоДня(НачалоДня(ТекущаяДата())-1*24*60*60-1);	
	Запрос.УстановитьПараметр("СтатусЖалобы", Перечисления.СтатусыЖалоб.НеПодтверждена);
	Запрос.УстановитьПараметр("ДатаДок1", НачалоНедели);
	Запрос.УстановитьПараметр("ДатаДок2", КонецНедели);
	Запрос.УстановитьПараметр("ТипОбращения", Справочники.ТипыОбращенийПокупателей.НайтиПоНаименованию("06 Сервис"));
	Запрос.УстановитьПараметр("ТипОбращения", Справочники.ТипыОбращенийПокупателей.НайтиПоКоду("206"));
	Запрос.УстановитьПараметр("ТипЖалобы", Справочники.ТипыЖалоб.НайтиПоКоду("210"));//Справочники.ТипыЖалоб.НайтиПоНаименованию("06_1 Очередь"));
	
	Док = Документы.Обещание.НайтиПоНомеру("000000020",'20160101');
	Запрос.УстановитьПараметр("Ссылка", Док);
	
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	
	
	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОбращенияПокупателей.РезультатОбращения КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ)  КАК ДатаДок1,
	|	(ОбращенияПокупателей.ДатаСобытия)  КАК ДатаДок,
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель,
	|	ОбращенияПокупателей.ТипЖалобы
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	 ОбращенияПокупателей.ДатаДок>= ДобавитьКДате(&ДатаДок1,День,-20)
	|	И ОбращенияПокупателей.ДатаДок <= ДобавитьКДате(&ДатаДок2,День,5) И
	|	(ОбращенияПокупателей.ТипЖалобы = &ТипЖалобы) И ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
	|	И ОбращенияПокупателей.ДатаСобытия >= ДОБАВИТЬКДАТЕ(&ДатаДок1, День, -15)
	|	И ОбращенияПокупателей.ДатаСобытия <= &ДатаДок2
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,
	|	СтруктурнаяЕдиница";
	Результат = Запрос.Выполнить();
	ТЗОбращения = Результат.Выгрузить();
	ТЗОбращения.Индексы.Добавить("СтруктурнаяЕдиница,ДатаДок1");
	ТЗ.Колонки.Добавить("МасСтрок");
	Для каждого Стр Из ТЗ Цикл
		МасСтр=ТЗОбращения.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница,ДатаДок1",Стр.СтруктурнаяЕдиница,Стр.ДатаДок));
		ТЗДетализация=ТЗОбращения.СкопироватьКолонки();
		Для каждого Эл Из МасСтр Цикл
			НовСтрДет=ТЗДетализация.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрДет,Эл);
		КонецЦикла; 
		Стр.МасСтрок=(Новый ХранилищеЗначения(ТЗДетализация));
	КонецЦикла; 
	
	Возврат ТЗ;
	
	
КонецФункции // ()

Функция ПолучитьТаблицуРезультатаОбещания19()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
	|	ТабельРаботыПродавцов.ТорговаяТочка КАК СтруктурнаяЕдиница,
	|	ТабельРаботыПродавцов.Период КАК Дата,
	|	ТабельРаботыПродавцов.Сотрудник КАК Исполнитель
	|ПОМЕСТИТЬ втОбещ
	|ИЗ
	|	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
	|ГДЕ
	|	ТабельРаботыПродавцов.Период МЕЖДУ ДОБАВИТЬКДАТЕ(&ДатаДок1, ДЕНЬ, -15) И &ДатаДок2
	|	И ТабельРаботыПродавцов.СвойствоПродавца = 2
	|	И ТабельРаботыПродавцов.КоличествоЧасов > 0

	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбещ.Дата,
	|	Сумма(Выбор когда ОбращенияПокупателей.РезультатОбращения есть null тогда 0 иначе 1 конец) КАК РезультатОбращения,
	|	втОбещ.СтруктурнаяЕдиница,
	|	втОбещ.Исполнитель
	|ПОМЕСТИТЬ втСтарыеОценки
	|ИЗ
	|	втОбещ КАК втОбещ
	|		Левое СОЕДИНЕНИЕ РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|		ПО 
	|	 ОбращенияПокупателей.ДатаДок>= ДобавитьКДате(&ДатаДок1,День,-20)
	|	И ОбращенияПокупателей.ДатаДок <= ДобавитьКДате(&ДатаДок2,День,5) И
	|((ОбращенияПокупателей.ТипЖалобы в (&ТипЖалобы)))
	|			И (ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы)
	|			И (НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ) = втОбещ.Дата)
	|			И втОбещ.СтруктурнаяЕдиница = ОбращенияПокупателей.СтруктурнаяЕдиница
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбещ.Дата,
	|	втОбещ.СтруктурнаяЕдиница,
	|	втОбещ.Исполнитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ОбращенияПокупателей.РезультатОбращения) КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница,
	|	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ) КАК Период
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	 ОбращенияПокупателей.ДатаДок>= ДобавитьКДате(&ДатаДок1,День,-5)
	|	И ОбращенияПокупателей.ДатаДок <= ДобавитьКДате(&ДатаДок2,День,5) И
	|	(ОбращенияПокупателей.ТипЖалобы в (&ТипЖалобы))
	|	И ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
	|	И ОбращенияПокупателей.ДатаСобытия >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаСобытия <= &ДатаДок2
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбращенияПокупателей.СтруктурнаяЕдиница,
	|	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСтарыеОценки.Дата,
	|	втСтарыеОценки.РезультатОбращения,
	|	втСтарыеОценки.СтруктурнаяЕдиница,
	|	втСтарыеОценки.Исполнитель
	|ПОМЕСТИТЬ втСтарыеОценкиБезДублей
	|ИЗ
	|	втСтарыеОценки КАК втСтарыеОценки
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт КАК вт
	|		ПО втСтарыеОценки.СтруктурнаяЕдиница = вт.СтруктурнаяЕдиница
	|			И втСтарыеОценки.Дата = вт.Период
	|ГДЕ
	|	вт.РезультатОбращения ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабельРаботыПродавцов.ТорговаяТочка КАК СтруктурнаяЕдиница,
	|	ТабельРаботыПродавцов.Период КАК Период,
	|	ТабельРаботыПродавцов.Сотрудник
	|ПОМЕСТИТЬ втТабель
	|ИЗ
	|	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
	|ГДЕ
	|	ТабельРаботыПродавцов.Период >= &ДатаДок1
	|	И ТабельРаботыПродавцов.Период <= &ДатаДок2
	|	И ТабельРаботыПродавцов.СвойствоПродавца = 2
	|	И ТабельРаботыПродавцов.КоличествоЧасов > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабельРаботыПродавцов.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ЕСТЬNULL(вт.РезультатОбращения, 0) КАК РезультатОбращения,
	|	ТабельРаботыПродавцов.Период КАК ДатаДок,
	|	ТабельРаботыПродавцов.Сотрудник
	|ИЗ
	|	втТабель КАК ТабельРаботыПродавцов
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт КАК вт
	|		ПО (вт.СтруктурнаяЕдиница = ТабельРаботыПродавцов.СтруктурнаяЕдиница)
	|			И ТабельРаботыПродавцов.Период = вт.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСтарыеОценкиБезДублей.СтруктурнаяЕдиница,
	|	втСтарыеОценкиБезДублей.РезультатОбращения,
	|	втСтарыеОценкиБезДублей.Дата,
	|	втСтарыеОценкиБезДублей.Исполнитель
	|ИЗ
	|	втСтарыеОценкиБезДублей КАК втСтарыеОценкиБезДублей
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,СтруктурнаяЕдиница
	|	";
	КонецНедели=НачалоДня(ТекущаяДата())-1-24*60*60;
	НачалоНедели=НачалоДня(НачалоДня(ТекущаяДата())-1*24*60*60-1);	
	Запрос.УстановитьПараметр("СтатусЖалобы", Перечисления.СтатусыЖалоб.НеПодтверждена);
	Запрос.УстановитьПараметр("ДатаДок1", НачалоНедели);
	Запрос.УстановитьПараметр("ДатаДок2", КонецНедели);
	Запрос.УстановитьПараметр("ТипОбращения", Справочники.ТипыОбращенийПокупателей.НайтиПоНаименованию("06 Сервис"));
	Запрос.УстановитьПараметр("ТипОбращения", Справочники.ТипыОбращенийПокупателей.НайтиПоКоду("206"));
	Мас=Новый Массив;
	Мас.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("268"));//Справочники.ТипыЖалоб.НайтиПоНаименованию("06_13 Запутанная выкладка/некорректные ценники"));
	Мас.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("254"));//Справочники.ТипыЖалоб.НайтиПоНаименованию("06_10 Коробки/некорректный разбор поставки"));
	Мас.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("256"));//Справочники.ТипыЖалоб.НайтиПоНаименованию("06_12 Нарушение санитарных норм "));
	Мас.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("212"));//Справочники.ТипыЖалоб.НайтиПоНаименованию("06_3 Нарушение температурного режима"));
	
	Запрос.УстановитьПараметр("ТипЖалобы",Мас); 	
	Док = Документы.Обещание.НайтиПоНомеру("000000019",'20160101');
	Запрос.УстановитьПараметр("Ссылка", Док);
	
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	
	
	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОбращенияПокупателей.РезультатОбращения КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаСобытия, ДЕНЬ)  КАК ДатаДок1,
	|	(ОбращенияПокупателей.ДатаСобытия)  КАК ДатаДок,
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель,
	|	ОбращенияПокупателей.ТипЖалобы
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	 ОбращенияПокупателей.ДатаДок>= ДобавитьКДате(&ДатаДок1,День,-20)
	|	И ОбращенияПокупателей.ДатаДок <= ДобавитьКДате(&ДатаДок2,День,5) И
	|	(ОбращенияПокупателей.ТипЖалобы в(&ТипЖалобы)) И ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
	|	И ОбращенияПокупателей.ДатаСобытия >= ДОБАВИТЬКДАТЕ(&ДатаДок1, День, -15)
	|	И ОбращенияПокупателей.ДатаСобытия <= &ДатаДок2
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,
	|	СтруктурнаяЕдиница";
	Результат = Запрос.Выполнить();
	ТЗОбращения = Результат.Выгрузить();
	ТЗОбращения.Индексы.Добавить("СтруктурнаяЕдиница,ДатаДок1");
	ТЗ.Колонки.Добавить("МасСтрок");
	Для каждого Стр Из ТЗ Цикл
		МасСтр=ТЗОбращения.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница,ДатаДок1",Стр.СтруктурнаяЕдиница,Стр.ДатаДок));
		ТЗДетализация=ТЗОбращения.СкопироватьКолонки();
		Для каждого Эл Из МасСтр Цикл
			НовСтрДет=ТЗДетализация.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрДет,Эл);
		КонецЦикла; 
		Стр.МасСтрок=(Новый ХранилищеЗначения(ТЗДетализация));
	КонецЦикла; 
	
	Возврат ТЗ;
	
	
	
		
КонецФункции // ()  

Функция ПолучитьТаблицуРезультатаОбещания03()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ОбращенияПокупателей.РезультатОбращения) КАК РезультатОбращения,
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	ОбращенияПокупателей.СтатусЖалобы = &СтатусЖалобы
	|	И ОбращенияПокупателей.ТипОбращения = &ТипЖалобы
	|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(вт.РезультатОбращения) КАК РезультатОбращения,
	|	вт.Производитель,
	|	вт.Номенклатура
	|ПОМЕСТИТЬ втЖалобыНоменклатура
	|ИЗ
	|	вт КАК вт
	|ГДЕ
	|	ВЫБОР
	|			КОГДА вт.Номенклатура В ИЕРАРХИИ (&Молочка)
	|				ТОГДА вт.РезультатОбращения >= 3
	|			ИНАЧЕ вт.РезультатОбращения >= 2
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	вт.Производитель,
	|	вт.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(вт.РезультатОбращения) КАК РезультатОбращения,
	|	вт.Производитель
	|ПОМЕСТИТЬ втЖалобы
	|ИЗ
	|	втЖалобыНоменклатура КАК вт
	|
	|СГРУППИРОВАТЬ ПО
	|	вт.Производитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеОбъектРольСрезПоследних.Объект КАК Объект,
	|	ЕСТЬNULL(вт.РезультатОбращения, 0) КАК РезультатОбращения,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя
	|ПОМЕСТИТЬ втЖалобыПоТехнологам
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЖалобы КАК вт
	|		ПО (вт.Производитель = СоответствиеОбъектРольСрезПоследних.Объект)
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеОбъектРольСрезПоследних.Объект КАК Технолог,
	|	СУММА(ЕСТЬNULL(вт.РезультатОбращения, 0)) КАК РезультатОбращения,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРолиБрендМен) КАК СоответствиеОбъектРольСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЖалобыПоТехнологам КАК вт
	|		ПО (вт.РольПользователя = СоответствиеОбъектРольСрезПоследних.Объект)
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> НЕОПРЕДЕЛЕНО
	|	И СоответствиеОбъектРольСрезПоследних.РольПользователя.ПометкаУдаления = ЛОЖЬ
	|	И СоответствиеОбъектРольСрезПоследних.Объект ССЫЛКА Справочник.РолиПользователей
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеОбъектРольСрезПоследних.Объект,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя";
	Запрос.УстановитьПараметр("ДатаДок1", НачалоДня(ДобавитьМесяц(ТекущаяДата(),-1)));
	Запрос.УстановитьПараметр("ДатаДок2", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Молочка", Справочники.Номенклатура.НайтиПоКоду("000000401"));
	
	Запрос.УстановитьПараметр("ТипЖалобы", Справочники.ТипыОбращенийПокупателей.НайтиПоНаименованию("04 Вкус не нравится"));
	Запрос.УстановитьПараметр("ТипЖалобы", Справочники.ТипыОбращенийПокупателей.НайтиПоКоду("204"));
	Запрос.УстановитьПараметр("СтатусЖалобы", Перечисления.СтатусыЖалоб.Подтверждена);
	
	Запрос.УстановитьПараметр("ТипРоли", ПланыВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству);
	Запрос.УстановитьПараметр("ТипРолиБрендМен", ПланыВидовХарактеристик.ТипыРолейПользователя.БрендМенеджер);
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель,
	|	КОЛИЧЕСТВО(ОбращенияПокупателей.ТипЖалобы) КАК ТипЖалобы
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	ОбращенияПокупателей.СтатусЖалобы = &СтатусЖалобы
	|	И ОбращенияПокупателей.ТипОбращения = &ТипЖалобы
	|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	"""" КАК РезультатОбращения,
	|	"""" КАК СтруктурнаяЕдиница,
	|	"""" КАК ДатаДок,
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель,
	|	ОбращенияПокупателей.ТипЖалобы КАК ТипЖалобы,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя КАК Технолог
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт КАК ОбращенияПокупателей
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	//|		ПО ОбращенияПокупателей.Производитель = ЗначенияСвойствОбъектов.Значение И ОбращенияПокупателей.Номенклатура = Выразить(ЗначенияСвойствОбъектов.Объект как Справочник.ХарактеристикиНоменклатуры).Владелец
	//|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
	|		ПО (ОбращенияПокупателей.Производитель = СоответствиеОбъектРольСрезПоследних.Объект)
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТипЖалобы УБЫВ";
	Результат = Запрос.Выполнить();
	ТЗОбращения = Результат.Выгрузить();
	ТЗ.Колонки.Добавить("МасСтрок");
	Для каждого Стр Из ТЗ Цикл
		МасСтр=ТЗОбращения.НайтиСтроки(Новый Структура("Технолог",Стр.Технолог));
		ТЗДетализация=ТЗОбращения.СкопироватьКолонки();
		Для каждого Эл Из МасСтр Цикл
			НовСтрДет=ТЗДетализация.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрДет,Эл);
		КонецЦикла; 
		Стр.МасСтрок=(Новый ХранилищеЗначения(ТЗДетализация));
	КонецЦикла; 
	
	
	Возврат ТЗ;
	
КонецФункции // ()

Функция ПолучитьТаблицуРезультатаОбещания04()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ОбращенияПокупателей.РезультатОбращения) КАК РезультатОбращения,
	|	ОбращенияПокупателей.Производитель
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	ОбращенияПокупателей.СтатусЖалобы = &СтатусЖалобы
	|	И ОбращенияПокупателей.ТипОбращения = &ТипЖалобы
	|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбращенияПокупателей.Производитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеОбъектРольСрезПоследних.Объект КАК Объект,
	|	ЕСТЬNULL(вт.РезультатОбращения, 0) КАК РезультатОбращения,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя
	|ПОМЕСТИТЬ втЖалобыПоТехнологам
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт КАК вт
	|		ПО (вт.Производитель = СоответствиеОбъектРольСрезПоследних.Объект)
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеОбъектРольСрезПоследних.Объект КАК Технолог,
	|	СУММА(ЕСТЬNULL(вт.РезультатОбращения, 0)) КАК РезультатОбращения,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРолиБрендМен) КАК СоответствиеОбъектРольСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЖалобыПоТехнологам КАК вт
	|		ПО (вт.РольПользователя = СоответствиеОбъектРольСрезПоследних.Объект)
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> НЕОПРЕДЕЛЕНО
	|	И СоответствиеОбъектРольСрезПоследних.РольПользователя.ПометкаУдаления = ЛОЖЬ
	|	И СоответствиеОбъектРольСрезПоследних.Объект ССЫЛКА Справочник.РолиПользователей
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеОбъектРольСрезПоследних.Объект,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя";
	Запрос.УстановитьПараметр("ДатаДок1", НачалоДня(ДобавитьМесяц(ТекущаяДата(),-1)));
	Запрос.УстановитьПараметр("ДатаДок2", КонецДня(ТекущаяДата()));
	
	Запрос.УстановитьПараметр("ТипЖалобы", Справочники.ТипыОбращенийПокупателей.НайтиПоНаименованию("08 Состав и производство"));
	Запрос.УстановитьПараметр("ТипЖалобы", Справочники.ТипыОбращенийПокупателей.НайтиПоКоду("208"));
	
	Запрос.УстановитьПараметр("СтатусЖалобы", Перечисления.СтатусыЖалоб.Подтверждена);
	
	Запрос.УстановитьПараметр("ТипРоли", ПланыВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству);
	Запрос.УстановитьПараметр("ТипРолиБрендМен", ПланыВидовХарактеристик.ТипыРолейПользователя.БрендМенеджер);
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбращенияПокупателей.РезультатОбращения КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОбращенияПокупателей.ДатаДок КАК ДатаДок,
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель,
	|	ОбращенияПокупателей.ТипЖалобы
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	ОбращенияПокупателей.СтатусЖалобы = &СтатусЖалобы
	|	И ОбращенияПокупателей.ТипОбращения = &ТипЖалобы
	|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбращенияПокупателей.РезультатОбращения КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОбращенияПокупателей.ДатаДок КАК ДатаДок,
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель,
	|	ОбращенияПокупателей.ТипЖалобы,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя КАК Технолог
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт КАК ОбращенияПокупателей
	|		ПО (ОбращенияПокупателей.Производитель = СоответствиеОбъектРольСрезПоследних.Объект)
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,
	|	СтруктурнаяЕдиница";
	Результат = Запрос.Выполнить();
	ТЗОбращения = Результат.Выгрузить();
	ТЗ.Колонки.Добавить("МасСтрок");
	Для каждого Стр Из ТЗ Цикл
		МасСтр=ТЗОбращения.НайтиСтроки(Новый Структура("Технолог",Стр.Технолог));
		ТЗДетализация=ТЗОбращения.СкопироватьКолонки();
		Для каждого Эл Из МасСтр Цикл
			НовСтрДет=ТЗДетализация.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрДет,Эл);
		КонецЦикла; 
		Стр.МасСтрок=(Новый ХранилищеЗначения(ТЗДетализация));
	КонецЦикла; 
	
	
	
	Возврат ТЗ;
	
КонецФункции // ()

Функция ПолучитьТаблицуРезультатаОбещания10()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ОбращенияПокупателей.РезультатОбращения) КАК РезультатОбращения,
	|	ОбращенияПокупателей.Производитель
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	ОбращенияПокупателей.СтатусЖалобы = &СтатусЖалобы
	|	И ОбращенияПокупателей.ТипЖалобы = &ТипЖалобы
	|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбращенияПокупателей.Производитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеОбъектРольСрезПоследних.Объект КАК Объект,
	|	ЕСТЬNULL(вт.РезультатОбращения, 0) КАК РезультатОбращения,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя
	|ПОМЕСТИТЬ втЖалобыПоТехнологам
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт КАК вт
	|		ПО (вт.Производитель = СоответствиеОбъектРольСрезПоследних.Объект)
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеОбъектРольСрезПоследних.Объект КАК Технолог,
	|	СУММА(ЕСТЬNULL(вт.РезультатОбращения, 0)) КАК РезультатОбращения,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРолиБрендМен) КАК СоответствиеОбъектРольСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЖалобыПоТехнологам КАК вт
	|		ПО (вт.РольПользователя = СоответствиеОбъектРольСрезПоследних.Объект)
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> НЕОПРЕДЕЛЕНО
	|	И СоответствиеОбъектРольСрезПоследних.РольПользователя.ПометкаУдаления = ЛОЖЬ
	|	И СоответствиеОбъектРольСрезПоследних.Объект ССЫЛКА Справочник.РолиПользователей
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеОбъектРольСрезПоследних.Объект,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя";
	Запрос.УстановитьПараметр("ДатаДок1", НачалоДня(ДобавитьМесяц(ТекущаяДата(),-1)));
	Запрос.УстановитьПараметр("ДатаДок2", КонецДня(ТекущаяДата()));
	
	Запрос.УстановитьПараметр("ТипЖалобы", Справочники.ТипыЖалоб.НайтиПоКоду("225"));//Справочники.ТипыЖалоб.НайтиПоНаименованию("11_3 Высокая цена"));
	Запрос.УстановитьПараметр("СтатусЖалобы", Перечисления.СтатусыЖалоб.Подтверждена);
	
	Запрос.УстановитьПараметр("ТипРоли", ПланыВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству);
	Запрос.УстановитьПараметр("ТипРолиБрендМен", ПланыВидовХарактеристик.ТипыРолейПользователя.БрендМенеджер);
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбращенияПокупателей.РезультатОбращения КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОбращенияПокупателей.ДатаДок КАК ДатаДок,
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель,
	|	ОбращенияПокупателей.ТипЖалобы
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	ОбращенияПокупателей.СтатусЖалобы = &СтатусЖалобы
	|	И ОбращенияПокупателей.ТипОбращения = &ТипЖалобы
	|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбращенияПокупателей.РезультатОбращения КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОбращенияПокупателей.ДатаДок КАК ДатаДок,
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель,
	|	ОбращенияПокупателей.ТипЖалобы,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя КАК Технолог
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт КАК ОбращенияПокупателей
	|		ПО (ОбращенияПокупателей.Производитель = СоответствиеОбъектРольСрезПоследних.Объект)
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,
	|	СтруктурнаяЕдиница";
	Результат = Запрос.Выполнить();
	ТЗОбращения = Результат.Выгрузить();
	ТЗ.Колонки.Добавить("МасСтрок");
	Для каждого Стр Из ТЗ Цикл
		МасСтр=ТЗОбращения.НайтиСтроки(Новый Структура("Технолог",Стр.Технолог));
		ТЗДетализация=ТЗОбращения.СкопироватьКолонки();
		Для каждого Эл Из МасСтр Цикл
			НовСтрДет=ТЗДетализация.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрДет,Эл);
		КонецЦикла; 
		Стр.МасСтрок=(Новый ХранилищеЗначения(ТЗДетализация));
	КонецЦикла; 
	
	
	Возврат ТЗ;
	
КонецФункции // ()

Функция ПолучитьТаблицуРезультатаОбещания184()
	
	ADOСоединение = Новый COMОбъект("ADODB.Connection");
	ADOСоединение.ConnectionTimeOut = 0;
	ADOСоединение.CommandTimeOut    = 0;
	СтрПодкл=ОбменСAccess.ПолучитьСтрокуСоединения("M2");
	ADOСоединение.ConnectionString  = СтрПодкл;
	ADOСоединение.Open();
	Если ADOСоединение.State() = 0 Тогда
		Возврат Неопределено;
	Иначе           
	КонецЕсли;
	
	СтрЗапрос =	
	"select * from sms_repl..Not_scanned_rep	
	|";

	
	
	rs = ADOСоединение.Execute(СтрЗапрос);
	Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
		rs=rs.NextRecordSet();
	КонецЦикла;
	
	ТЗВердикты=Новый ТаблицаЗначений;
	ТЗВердикты.Колонки.Добавить("Наименование",Новый ОписаниеТипов("строка",,Новый КвалификаторыСтроки(100)));
	ТЗВердикты.Колонки.Добавить("НаимХар",Новый ОписаниеТипов("строка",,Новый КвалификаторыСтроки(100)));
	
	Попытка
		rs.MoveFirst();
		//
		Сч=0;
		Пока НЕ rs.EOF() Цикл
			Сч=Сч+1;
			Если Сч=100 Тогда
				//прервать;
			КонецЕсли;
			НовСтр=ТЗВердикты.Добавить();
			НовСтр.Наименование=Rs.Fields("name_tov").Value;
			НовСтр.НаимХар=Rs.Fields("Харак").Value;
			
			
			
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЗ",ТЗВердикты);
	Запрос.УстановитьПараметр("ТипРоли", ПланыВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЗ.Наименование,
		|	ТЗ.НаимХар
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХарактеристикиНоменклатуры.Ссылка,
		|	ХарактеристикиНоменклатуры.Владелец,
		|	ЗначенияСвойствОбъектов.Значение КАК Производитель
		|ПОМЕСТИТЬ втНом
		|ИЗ
		|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт КАК вт
		|		ПО ХарактеристикиНоменклатуры.Наименование = вт.НаимХар
		|			И ХарактеристикиНоменклатуры.Владелец.Наименование = вт.Наименование
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|		ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов.Объект
		|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
		|ГДЕ
		|	ХарактеристикиНоменклатуры.Владелец.БезУпаковки = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втНом.Ссылка КАК Характеристика,
		|	втНом.Владелец КАК Номенклатура,
		|	втНом.Производитель,
		|	СоответствиеОбъектРольСрезПоследних.РольПользователя КАК РольПользователя
		|ИЗ
		|	втНом КАК втНом
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
		|		ПО втНом.Производитель = СоответствиеОбъектРольСрезПоследних.Объект";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТЗ = РезультатЗапроса.Выгрузить();
	ТЗ.Колонки.Добавить("МасСтрок");
	Для каждого Стр Из ТЗ Цикл
		Стр.МасСтрок=Новый ХранилищеЗначения(Новый Массив);
		
	
	КонецЦикла; 
	
	Возврат ТЗ;
	
КонецФункции // ()


Функция ПолучитьТаблицуРезультатаОбещания176()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ОбращенияПокупателей.РезультатОбращения) КАК РезультатОбращения,
	|	ОбращенияПокупателей.Производитель,
	|	ЗначенияСвойствОбъектов.Объект КАК Характеристика
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО ОбращенияПокупателей.Производитель = ЗначенияСвойствОбъектов.Значение
	|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
	|			И ОбращенияПокупателей.Номенклатура = ЗначенияСвойствОбъектов.Объект.Владелец
	|ГДЕ
	|	ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
	|	И ОбращенияПокупателей.ТипОбращения = &ТипЖалобы
	|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбращенияПокупателей.Производитель,
	|	ЗначенияСвойствОбъектов.Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт.Характеристика КАК Характеристика,
	|	СУММА(ЕСТЬNULL(вт.РезультатОбращения, 0)) КАК РезультатОбращения,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя,
	|	вт.Производитель
	|ПОМЕСТИТЬ вт1
	|ИЗ
	|	вт КАК вт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
	|		ПО вт.Характеристика = СоответствиеОбъектРольСрезПоследних.Объект
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> НЕОПРЕДЕЛЕНО
	|	И СоответствиеОбъектРольСрезПоследних.РольПользователя.ПометкаУдаления = ЛОЖЬ
	|	И СоответствиеОбъектРольСрезПоследних.Объект ССЫЛКА Справочник.ХарактеристикиНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	вт.Характеристика,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя,
	|	вт.Производитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт.Характеристика КАК Характеристика,
	|	вт.РезультатОбращения КАК РезультатОбращения,
	|	ЕСТЬNULL(вт.РольПользователя, СоответствиеОбъектРольСрезПоследних.РольПользователя) КАК РольПользователя
	|ИЗ
	|	вт1 КАК вт
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
	|		ПО вт.Производитель = СоответствиеОбъектРольСрезПоследних.Объект
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> НЕОПРЕДЕЛЕНО
	|	И СоответствиеОбъектРольСрезПоследних.РольПользователя.ПометкаУдаления = ЛОЖЬ
	|	И СоответствиеОбъектРольСрезПоследних.Объект ССЫЛКА Справочник.Контрагенты";
	Запрос.УстановитьПараметр("ДатаДок1", НачалоДня(ДобавитьМесяц(ТекущаяДата(),-1)));
	Запрос.УстановитьПараметр("ДатаДок2", КонецДня(ТекущаяДата()));
	
	Запрос.УстановитьПараметр("ТипЖалобы", Справочники.ТипыОбращенийПокупателей.НайтиПоНаименованию("01 Включение"));
	Запрос.УстановитьПараметр("ТипЖалобы", Справочники.ТипыОбращенийПокупателей.НайтиПоКоду("201"));
	Запрос.УстановитьПараметр("СтатусЖалобы", Перечисления.СтатусыЖалоб.НеПодтверждена);
	
	Запрос.УстановитьПараметр("ТипРоли", ПланыВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству);
	
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	//Запрос.Текст="выбрать * из вт";
	//
	//Результат1 = Запрос.Выполнить();
	
	//ТЗ1 = Результат1.Выгрузить();
	
	//ТабличноеПоле1=ТЗ;
	//ЭлементыФормы.ТабличноеПоле1.СоздатьКолонки();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбращенияПокупателей.РезультатОбращения КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОбращенияПокупателей.ДатаДок КАК ДатаДок,
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель,
	|	ЗначенияСвойствОбъектов.Объект КАК Характеристика,
	|	ОбращенияПокупателей.ТипЖалобы
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО ОбращенияПокупателей.Производитель = ЗначенияСвойствОбъектов.Значение
	|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
	|			И ОбращенияПокупателей.Номенклатура = ЗначенияСвойствОбъектов.Объект.Владелец
	|ГДЕ
	|	ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
	|	И ОбращенияПокупателей.ТипОбращения = &ТипЖалобы
	|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,
	|	СтруктурнаяЕдиница";
	Результат = Запрос.Выполнить();
	ТЗОбращения = Результат.Выгрузить();
	ТЗ.Колонки.Добавить("МасСтрок");
	Для каждого Стр Из ТЗ Цикл
		МасСтр=ТЗОбращения.НайтиСтроки(Новый Структура("Характеристика",Стр.Характеристика));
		ТЗДетализация=ТЗОбращения.СкопироватьКолонки();
		Для каждого Эл Из МасСтр Цикл
			НовСтрДет=ТЗДетализация.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрДет,Эл);
		КонецЦикла; 
		Стр.МасСтрок=(Новый ХранилищеЗначения(ТЗДетализация));
	КонецЦикла; 
	
	
	
	Возврат ТЗ;
	
КонецФункции // ()

Функция ПолучитьТаблицуРезультатаОбещания11()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ОбращенияПокупателей.РезультатОбращения) КАК РезультатОбращения,
	|	ОбращенияПокупателей.Производитель,
	|	ЗначенияСвойствОбъектов.Объект КАК Характеристика,
	|	ОбращенияПокупателей.Номенклатура
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО ОбращенияПокупателей.Производитель = ЗначенияСвойствОбъектов.Значение
	|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
	|			И ОбращенияПокупателей.Номенклатура = ЗначенияСвойствОбъектов.Объект.Владелец
	|ГДЕ
	|	ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
	|	И ОбращенияПокупателей.ТипОбращения В(&ТипЖалобы)
	|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбращенияПокупателей.Производитель,
	|	ЗначенияСвойствОбъектов.Объект,
	|	ОбращенияПокупателей.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатистикаПоПродажам.Номенклатура,
	|	СУММА(СтатистикаПоПродажам.КоличествоОборот) КАК КоличествоПродано,
	|	СтатистикаПоПродажам.СтруктурнаяЕдиница
	|ПОМЕСТИТЬ втДвиж
	|ИЗ
	|	РегистрНакопления.ДвиженияТоваровПоЛистамУчета.Обороты(
	|			&ДатаДок1,
	|			&ДатаДок2,
	|			,
	|			ВидДвиженияТовара = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.Продажа)
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						вт.Номенклатура
	|					ИЗ
	|						вт)
	|) КАК СтатистикаПоПродажам
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатистикаПоПродажам.Номенклатура,
	|	СтатистикаПоПродажам.СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втДвиж.Номенклатура,
	|	СУММА(втДвиж.КоличествоПродано) КАК КоличествоПродано,
	|	ТоварныйАссортиментТочекСрезПоследних.Характеристика КАК Характеристика
	|ПОМЕСТИТЬ втДвижСХар
	|ИЗ
	|	втДвиж КАК втДвиж
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(&ДатаДок2, ) КАК ТоварныйАссортиментТочекСрезПоследних
	|		ПО втДвиж.Номенклатура = ТоварныйАссортиментТочекСрезПоследних.Номенклатура
	|			И втДвиж.СтруктурнаяЕдиница = ТоварныйАссортиментТочекСрезПоследних.ТорговаяТочка
	|
	|СГРУППИРОВАТЬ ПО
	|	втДвиж.Номенклатура,
	|	ТоварныйАссортиментТочекСрезПоследних.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатистикаПоПродажам.Номенклатура,
	|	СтатистикаПоПродажам.Характеристика,
	|	-СУММА(ВЫБОР
	|			КОГДА СтатистикаПоПродажам.Номенклатура.Весовой
	|				ТОГДА СтатистикаПоПродажам.КоличествоПродано / (ВЫРАЗИТЬ(ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, 1) КАК ЧИСЛО(10, 3)))
	|			ИНАЧЕ СтатистикаПоПродажам.КоличествоПродано
	|		КОНЕЦ) КАК КоличествоПродано
	|ПОМЕСТИТЬ втПродажи
	|ИЗ
	|	втДвижСХар КАК СтатистикаПоПродажам
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО СтатистикаПоПродажам.Характеристика = ЗначенияСвойствОбъектов.Объект
	|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке))
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатистикаПоПродажам.Номенклатура,
	|	СтатистикаПоПродажам.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(вт.РезультатОбращения) КАК РезультатОбращения
	|ПОМЕСТИТЬ втСредПоказатель
	|ИЗ
	|	вт КАК вт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(втПродажи.КоличествоПродано) КАК КоличествоПродано
	|ПОМЕСТИТЬ втСредПоказатель1
	|ИЗ
	|	втПродажи КАК втПродажи
	|;
	|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	вт.Характеристика КАК Характеристика,
	//|	ЕСТЬNULL(вт.РезультатОбращения, 0) / (ВЫРАЗИТЬ(ЕСТЬNULL(втПродажи.КоличествоПродано, 1) КАК ЧИСЛО(10, 3))) КАК РезультатОбращения,
	//|	СоответствиеОбъектРольСрезПоследних.РольПользователя,
	//|	втСредПоказатель.РезультатОбращения / втСредПоказатель1.КоличествоПродано КАК Эталон
	//|ИЗ
	//|	вт КАК вт
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
	//|		ПО вт.Производитель = СоответствиеОбъектРольСрезПоследних.Объект
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСредПоказатель КАК втСредПоказатель
	//|		ПО (ИСТИНА)
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСредПоказатель1 КАК втСредПоказатель1
	//|		ПО (ИСТИНА)
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПродажи КАК втПродажи
	//|		ПО вт.Характеристика = втПродажи.Характеристика
	//|ГДЕ
	//|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	//|	И СоответствиеОбъектРольСрезПоследних.Объект <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	//|	И СоответствиеОбъектРольСрезПоследних.Объект <> НЕОПРЕДЕЛЕНО
	//|	И СоответствиеОбъектРольСрезПоследних.РольПользователя.ПометкаУдаления = ЛОЖЬ
	//|	И СоответствиеОбъектРольСрезПоследних.Объект ССЫЛКА Справочник.Контрагенты
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт.Характеристика КАК Характеристика,
	|	ЕСТЬNULL(вт.РезультатОбращения, 0) / (ВЫРАЗИТЬ(ЕСТЬNULL(втПродажи.КоличествоПродано, 1) КАК ЧИСЛО(10, 3))) КАК РезультатОбращения,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя,
	|	вт.Производитель,
	|	(втСредПоказатель.РезультатОбращения / втСредПоказатель1.КоличествоПродано) КАК Эталон
	|ПОМЕСТИТЬ вт1
	|ИЗ
	|	вт КАК вт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
	|		ПО вт.Характеристика = СоответствиеОбъектРольСрезПоследних.Объект
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСредПоказатель КАК втСредПоказатель
	|		ПО (ИСТИНА)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСредПоказатель1 КАК втСредПоказатель1
	|		ПО (ИСТИНА)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПродажи КАК втПродажи
	|		ПО вт.Характеристика = втПродажи.Характеристика
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> НЕОПРЕДЕЛЕНО
	|	И СоответствиеОбъектРольСрезПоследних.РольПользователя.ПометкаУдаления = ЛОЖЬ
	|	И СоответствиеОбъектРольСрезПоследних.Объект ССЫЛКА Справочник.ХарактеристикиНоменклатуры
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт.Характеристика КАК Характеристика,
	|	вт.РезультатОбращения КАК РезультатОбращения,
	|	ЕСТЬNULL(вт.РольПользователя, СоответствиеОбъектРольСрезПоследних.РольПользователя) КАК РольПользователя,
	|вт.Эталон
	|ИЗ
	|	вт1 КАК вт
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
	|		ПО вт.Производитель = СоответствиеОбъектРольСрезПоследних.Объект
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> НЕОПРЕДЕЛЕНО
	|	И СоответствиеОбъектРольСрезПоследних.РольПользователя.ПометкаУдаления = ЛОЖЬ
	|	И СоответствиеОбъектРольСрезПоследних.Объект ССЫЛКА Справочник.Контрагенты";		
	Запрос.УстановитьПараметр("ДатаДок1", НачалоДня(ДобавитьМесяц(ТекущаяДата(),-1)));
	Запрос.УстановитьПараметр("ДатаДок2", КонецДня(ТекущаяДата()));
	
	Мас=Новый Массив;
	Мас.Добавить(Справочники.ТипыОбращенийПокупателей.НайтиПоКоду("202"));//Справочники.ТипыОбращенийПокупателей.НайтиПоНаименованию("02 Продукт испорчен раньше срока"));
	Мас.Добавить(Справочники.ТипыОбращенийПокупателей.НайтиПоКоду("203"));//Справочники.ТипыОбращенийПокупателей.НайтиПоНаименованию("03 Продукт изменился"));
	
	Запрос.УстановитьПараметр("ТипЖалобы", Мас);
	
	
	
	
	
	
	Запрос.УстановитьПараметр("СтатусЖалобы", Перечисления.СтатусыЖалоб.НеПодтверждена);
	
	Запрос.УстановитьПараметр("ТипРоли", ПланыВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству);
	
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	//Запрос.Текст="выбрать * из втСредПоказатель1";
	//
	//Результат1 = Запрос.Выполнить();
	
	//ТЗ1 = Результат1.Выгрузить();
	//
	//ТабличноеПоле1=ТЗ;
	//ЭлементыФормы.ТабличноеПоле1.СоздатьКолонки();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбращенияПокупателей.РезультатОбращения КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОбращенияПокупателей.ДатаДок КАК ДатаДок,
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель,
	|	ЗначенияСвойствОбъектов.Объект КАК Характеристика,
	|	ОбращенияПокупателей.ТипЖалобы
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО ОбращенияПокупателей.Производитель = ЗначенияСвойствОбъектов.Значение
	|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
	|			И ОбращенияПокупателей.Номенклатура = ЗначенияСвойствОбъектов.Объект.Владелец
	|ГДЕ
	|	ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
	|	И ОбращенияПокупателей.ТипОбращения в (&ТипЖалобы)
	|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,
	|	СтруктурнаяЕдиница";
	Результат = Запрос.Выполнить();
	ТЗОбращения = Результат.Выгрузить();
	ТЗ.Колонки.Добавить("МасСтрок");
	Для каждого Стр Из ТЗ Цикл
		МасСтр=ТЗОбращения.НайтиСтроки(Новый Структура("Характеристика",Стр.Характеристика));
		ТЗДетализация=ТЗОбращения.СкопироватьКолонки();
		Для каждого Эл Из МасСтр Цикл
			НовСтрДет=ТЗДетализация.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрДет,Эл);
		КонецЦикла; 
		Стр.МасСтрок=(Новый ХранилищеЗначения(ТЗДетализация));
	КонецЦикла; 
	
	
	
	Возврат ТЗ;
	
КонецФункции // ()

Функция ПолучитьТаблицуРезультатаОбещания08()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ОбращенияПокупателей.РезультатОбращения) КАК РезультатОбращения,
	|	ОбращенияПокупателей.Производитель,
	|	ЗначенияСвойствОбъектов.Объект КАК Характеристика,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО ОбращенияПокупателей.Производитель = ЗначенияСвойствОбъектов.Значение
	|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
	|			И ОбращенияПокупателей.Номенклатура = ЗначенияСвойствОбъектов.Объект.Владелец
	|ГДЕ
	|	ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
	|	И ОбращенияПокупателей.ТипЖалобы в (&ТипЖалобы)
	|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбращенияПокупателей.Производитель,
	|	ЗначенияСвойствОбъектов.Объект,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(ОбращенияПокупателей.РезультатОбращения) > 2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт.Характеристика,
	|	вт.Производитель,
	|	КОЛИЧЕСТВО(вт.РезультатОбращения) КАК РезультатОбращения
	|ПОМЕСТИТЬ втЖалобы
	|ИЗ
	|	вт КАК вт
	|
	|СГРУППИРОВАТЬ ПО
	|	вт.Характеристика,
	|	вт.Производитель
	|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	вт.Характеристика КАК Характеристика,
	//|	СУММА(ЕСТЬNULL(вт.РезультатОбращения, 0)) КАК РезультатОбращения,
	//|	СоответствиеОбъектРольСрезПоследних.РольПользователя
	//|ИЗ
	//|	втЖалобы КАК вт
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
	//|		ПО вт.Производитель = СоответствиеОбъектРольСрезПоследних.Объект
	//|ГДЕ
	//|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	//|	И СоответствиеОбъектРольСрезПоследних.Объект <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	//|	И СоответствиеОбъектРольСрезПоследних.Объект <> НЕОПРЕДЕЛЕНО
	//|	И СоответствиеОбъектРольСрезПоследних.РольПользователя.ПометкаУдаления = ЛОЖЬ
	//|	И СоответствиеОбъектРольСрезПоследних.Объект ССЫЛКА Справочник.Контрагенты
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	вт.Характеристика,
	//|	СоответствиеОбъектРольСрезПоследних.РольПользователя
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт.Характеристика КАК Характеристика,
	|	СУММА(ЕСТЬNULL(вт.РезультатОбращения, 0)) КАК РезультатОбращения,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя,
	|	вт.Производитель
	|ПОМЕСТИТЬ вт1
	|ИЗ
	|	втЖалобы КАК вт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
	|		ПО вт.Характеристика = СоответствиеОбъектРольСрезПоследних.Объект
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> НЕОПРЕДЕЛЕНО
	|	И СоответствиеОбъектРольСрезПоследних.РольПользователя.ПометкаУдаления = ЛОЖЬ
	|	И СоответствиеОбъектРольСрезПоследних.Объект ССЫЛКА Справочник.ХарактеристикиНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	вт.Характеристика,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя,
	|	вт.Производитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт.Характеристика КАК Характеристика,
	|	вт.РезультатОбращения КАК РезультатОбращения,
	|	ЕСТЬNULL(вт.РольПользователя, СоответствиеОбъектРольСрезПоследних.РольПользователя) КАК РольПользователя
	|ИЗ
	|	вт1 КАК вт
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
	|		ПО вт.Производитель = СоответствиеОбъектРольСрезПоследних.Объект
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> НЕОПРЕДЕЛЕНО
	|	И СоответствиеОбъектРольСрезПоследних.РольПользователя.ПометкаУдаления = ЛОЖЬ
	|	И СоответствиеОбъектРольСрезПоследних.Объект ССЫЛКА Справочник.Контрагенты";
	Запрос.УстановитьПараметр("ДатаДок1", НачалоДня(ДобавитьМесяц(ТекущаяДата(),-1)));
	Запрос.УстановитьПараметр("ДатаДок2", КонецДня(ТекущаяДата()));
	
	
	Мас=Новый Массив;
	Мас.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("220"));//Справочники.ТипыЖалоб.НайтиПоНаименованию("09_2 Плохая упаковка"));
	
	Запрос.УстановитьПараметр("ТипЖалобы", Мас);
	
	
	
	
	
	
	Запрос.УстановитьПараметр("СтатусЖалобы", Перечисления.СтатусыЖалоб.НеПодтверждена);
	
	Запрос.УстановитьПараметр("ТипРоли", ПланыВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству);
	
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	//Запрос.Текст="выбрать * из втСредПоказатель1";
	//
	//Результат1 = Запрос.Выполнить();
	
	//ТЗ1 = Результат1.Выгрузить();
	//
	//ТабличноеПоле1=ТЗ;
	//ЭлементыФормы.ТабличноеПоле1.СоздатьКолонки();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбращенияПокупателей.РезультатОбращения КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОбращенияПокупателей.ДатаДок КАК ДатаДок,
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель,
	|	ЗначенияСвойствОбъектов.Объект КАК Характеристика,
	|	ОбращенияПокупателей.ТипЖалобы
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО ОбращенияПокупателей.Производитель = ЗначенияСвойствОбъектов.Значение
	|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
	|			И ОбращенияПокупателей.Номенклатура = ЗначенияСвойствОбъектов.Объект.Владелец
	|ГДЕ
	|	ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
	|	И ОбращенияПокупателей.ТипОбращения в (&ТипЖалобы)
	|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,
	|	СтруктурнаяЕдиница";
	Результат = Запрос.Выполнить();
	ТЗОбращения = Результат.Выгрузить();
	ТЗ.Колонки.Добавить("МасСтрок");
	Для каждого Стр Из ТЗ Цикл
		МасСтр=ТЗОбращения.НайтиСтроки(Новый Структура("Характеристика",Стр.Характеристика));
		ТЗДетализация=ТЗОбращения.СкопироватьКолонки();
		Для каждого Эл Из МасСтр Цикл
			НовСтрДет=ТЗДетализация.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрДет,Эл);
		КонецЦикла; 
		Стр.МасСтрок=(Новый ХранилищеЗначения(ТЗДетализация));
	КонецЦикла; 
	
	
	
	Возврат ТЗ;
	
КонецФункции // ()

Функция ПолучитьТаблицуРезультатаОбещания18()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ОбращенияПокупателей.РезультатОбращения) КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
	|	И ОбращенияПокупателей.ТипЖалобы = &ТипЖалобы
	|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбращенияПокупателей.СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеОбъектРольСрезПоследних.Объект КАК СтруктурнаяЕдиница,
	|	ЕСТЬNULL(вт.РезультатОбращения, 0) КАК РезультатОбращения,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя
	|ИЗ
	//+++ AK suvv 2018.06.08 ИП-00018376.01
	//|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли или ТипРоли = &ТипРолиСторонняяРозница) КАК СоответствиеОбъектРольСрезПоследних
	//--- AK suvv
	|		ЛЕВОЕ СОЕДИНЕНИЕ вт КАК вт
	|		ПО (вт.СтруктурнаяЕдиница = СоответствиеОбъектРольСрезПоследних.Объект)
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект.СтатусТорговойТочки = ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Открыт)";
	Запрос.УстановитьПараметр("ДатаДок1", НачалоДня(ДобавитьМесяц(ТекущаяДата(),-1)));
	Запрос.УстановитьПараметр("ДатаДок2", КонецДня(ТекущаяДата()));
	
	Запрос.УстановитьПараметр("ТипЖалобы", Справочники.ТипыЖалоб.НайтиПоКоду("186"));//Справочники.ТипыЖалоб.НайтиПоНаименованию("15_1 Шум оборудования/громкий промоутер"));
	Запрос.УстановитьПараметр("СтатусЖалобы", Перечисления.СтатусыЖалоб.НеПодтверждена);	
	
	Запрос.УстановитьПараметр("ТипРоли", ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего);
	//+++ AK suvv 2018.06.08 ИП-00018376.01
	Запрос.УстановитьПараметр("ТипРолиСторонняяРозница", ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы);
	//--- AK suvv
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	//
	//ТабличноеПоле1=ТЗ;
	//ЭлементыФормы.ТабличноеПоле1.СоздатьКолонки();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОбращенияПокупателей.РезультатОбращения КАК РезультатОбращения,
	|	ОбращенияПокупателей.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ОбращенияПокупателей.ДатаДок КАК ДатаДок,
	|	ОбращенияПокупателей.Номенклатура,
	|	ОбращенияПокупателей.Производитель,
	|	ОбращенияПокупателей.ТипЖалобы
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	ОбращенияПокупателей.СтатусЖалобы <> &СтатусЖалобы
	|	И ОбращенияПокупателей.ТипЖалобы = &ТипЖалобы
	|	И ОбращенияПокупателей.ДатаДок >= &ДатаДок1
	|	И ОбращенияПокупателей.ДатаДок <= &ДатаДок2
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДок,
	|	СтруктурнаяЕдиница";
	Результат = Запрос.Выполнить();
	ТЗОбращения = Результат.Выгрузить();
	ТЗ.Колонки.Добавить("МасСтрок");
	Для каждого Стр Из ТЗ Цикл
		МасСтр=ТЗОбращения.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница",Стр.СтруктурнаяЕдиница));
		ТЗДетализация=ТЗОбращения.СкопироватьКолонки();
		Для каждого Эл Из МасСтр Цикл
			НовСтрДет=ТЗДетализация.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтрДет,Эл);
		КонецЦикла; 
		Стр.МасСтрок=(Новый ХранилищеЗначения(ТЗДетализация));
	КонецЦикла; 
	
	
	
	Возврат ТЗ;
	
КонецФункции // ()

Функция ПолучитьТаблицуРезультатаОбещания06()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтруктурныеЕдиницы.Ссылка КАК СтруктурнаяЕдиница
	|ПОМЕСТИТЬ втОткрытыеМагазины
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	СтруктурныеЕдиницы.СтатусТорговойТочки = &СтатусТорговойТочки
	|	И СтруктурныеЕдиницы.ДатаОткрытия МЕЖДУ &ДатаДок1 И &ДатаДок2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(РегламентированныйПроизводственныйКалендарь.Пятидневка) КАК Пятидневка
	|ПОМЕСТИТЬ втКалендарь
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &ДатаДок1 И &ДатаДок2
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(СоответствиеОбъектРольСрезПоследних.Объект) КАК СтруктурнаяЕдиница,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя,
	|	втКалендарь.Пятидневка
	|ПОМЕСТИТЬ втИтог
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОткрытыеМагазины КАК вт
	|		ПО (вт.СтруктурнаяЕдиница = СоответствиеОбъектРольСрезПоследних.Объект)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втКалендарь КАК втКалендарь
	|		ПО (ИСТИНА)
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект.СтатусТорговойТочки = ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Открыт)
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя,
	|	втКалендарь.Пятидневка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втИтог.РольПользователя,
	|	втИтог.СтруктурнаяЕдиница / втИтог.Пятидневка КАК КолМагВДень,
	|	втИтог.Пятидневка как Дней,
	|	РолиПользователейСоставРоли.Сотрудник КАК Исполнитель
	|ИЗ
	|	втИтог КАК втИтог
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|		ПО втИтог.РольПользователя = РолиПользователейСоставРоли.Ссылка
	|			И (РолиПользователейСоставРоли.НомерСтроки = 1)";
	Запрос.УстановитьПараметр("ДатаДок1", НачалоДня(ДобавитьМесяц(ТекущаяДата(),-1)));
	Запрос.УстановитьПараметр("ДатаДок2", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("СтатусТорговойТочки", Перечисления.СтатусыТорговыхТочек.Открыт);
	
	Запрос.УстановитьПараметр("ТипРоли", ПланыВидовХарактеристик.ТипыРолейПользователя.СпециалистПоРазвитию);
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	//
	//ТабличноеПоле1=ТЗ;
	//ЭлементыФормы.ТабличноеПоле1.СоздатьКолонки();
	
	
	Возврат ТЗ;
	
КонецФункции // ()


Процедура ОтправитьПисьмоПоставщикуОбИзмененияхСервер(ОбъектОбещания)
	СтруктураНовогоПисьма = Новый Структура;
	СтруктураНовогоПисьма.Вставить("ВидТекста", Перечисления.ВидыТекстовЭлектронныхПисем.Текст);
	СписокФайловВложений = Новый СписокЗначений;
	
	СтруктураНовогоПисьма.Вставить("Тема", "Изменено "+Строка(ОбъектОбещания.Ссылка)+" заказчик - "+Строка(ОбъектОбещания.Заказчик)+" для исполнителя "+Строка(ОбъектОбещания.Исполнитель)+".");
	//Для каждого Стр Из Объект.ПрикрепленныеФайлы Цикл
	//	СписокФайловВложений.Добавить(Новый Структура("ИмяФайла",  Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(Стр.Файл)));
	//КонецЦикла; 
	СтруктураНовогоПисьма.Вставить("СписокФайловВложений", СписокФайловВложений);
	Кому = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст =                                                                                   
	"ВЫБРАТЬ                                                   
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект в (&Объект)
	|	И КонтактнаяИнформация.Тип = &Тип";
	МассивАдресов=Новый Массив;
	//Если ТипЗнч(ОбъектОбещания.Заказчик)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") Тогда
	//	МасФЛ=ПолучитьФизЛицТипаРоли(ОбъектОбещания.Заказчик,ТекФизЛицо,истина);
	//	Для каждого Эл Из МасФЛ Цикл
	//		МассивАдресов.Добавить(Эл);
	//	КонецЦикла; 
	//Иначе	
	//	МассивАдресов.Добавить(ОбъектОбещания.Заказчик);
	//КонецЕсли;
	//Если ОбъектОбещания.Заказчик=ПланыВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники Тогда
	//	Для каждого Стр Из ОбъектОбещания.Заказчики Цикл
	//		МассивАдресов.Добавить(Стр.Заказчик);
	//	КонецЦикла; 
	//КонецЕсли; 
	
	
	//Если ТипЗнч(ОбъектОбещания.Исполнитель)=Тип("ПланВидовХарактеристикСсылка.ТипыРолейПользователя") Тогда
	//	МасФЛ=ПолучитьФизЛицТипаРоли(ОбъектОбещания.Исполнитель,ТекФизЛицо,истина);
	//	Для каждого Эл Из МасФЛ Цикл
	//		МассивАдресов.Добавить(Эл);
	//	КонецЦикла; 
	
	//Иначе	
	МассивАдресов.Добавить(ОбъектОбещания.Исполнитель);
	//КонецЕсли;
	ТекФизЛицо=?(ЗначениеЗаполнено(ОбъектОбещания.Ответственный),ОбъектОбещания.Ответственный,Справочники.ФизическиеЛица.НайтиПоНаименованию("Латыпова Анна"));
	МассивАдресов.Добавить(ТекФизЛицо);
	//Если ОбъектОбещания.Исполнитель=ПланыВидовХарактеристик.ТипыРолейПользователя.ВсеСотрудники Тогда
	//	Для каждого Стр Из ОбъектОбещания.Заказчики Цикл
	//		МассивАдресов.Добавить(Стр.Исполнитель);
	//	КонецЦикла; 
	//КонецЕсли; 
	Запрос.УстановитьПараметр("Объект", МассивАдресов);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если Кому.НайтиПоЗначению(ВыборкаДетальныеЗаписи.Представление)=Неопределено Тогда
				Кому.Добавить(ВыборкаДетальныеЗаписи.Представление);
			КонецЕсли; 
		КонецЦикла;
	Иначе
		Кому.Добавить("sp@vkusvill.ru");
	КонецЕсли; 
	//Запрос = Новый Запрос;
	//Запрос.Текст =                                                                                   
	//	"ВЫБРАТЬ                                                   
	//	|	КонтактнаяИнформация.Представление
	//	|ИЗ
	//	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	//	|ГДЕ
	//	|	КонтактнаяИнформация.Объект = (&Объект)
	//	|	И КонтактнаяИнформация.Тип = &Тип";
	//
	//Запрос.УстановитьПараметр("Объект", ТекФизЛицо);
	//Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	//Результат = Запрос.Выполнить();
	//ВыборкаДетальныеЗаписи = Результат.Выбрать();
	//ЕмейлТекФизЛица="";
	//Если ВыборкаДетальныеЗаписи.Следующий() Тогда
	//	ЕмейлТекФизЛица=ВыборкаДетальныеЗаписи.Представление;
	//КонецЕсли;
	ДопСообщение="";
	Если ЗначениеЗаполнено(ОбъектОбещания.Описание) Тогда
		ДопСообщение="Причина: "+ОбъектОбещания.Описание;
	КонецЕсли; 
	
	СтруктураНовогоПисьма.Вставить("Кому", Кому);
	СтруктураНовогоПисьма.Вставить("Тело","Изменено "+Строка(ОбъектОбещания.Ссылка)+"
	|Заказчик - "+ОбъектОбещания.Заказчик+"
	|Исполнитель - "+ОбъектОбещания.Исполнитель+?(ОбъектОбещания.Срочное,"
	|Дата исполнения - " +Формат(ОбъектОбещания.ДатаИсполнения,"ДФ=dd.MM.yyyy"),"")+ "
	|Статус - "+ОбъектОбещания.Статус+"
	|Оценка - "+ОбъектОбещания.Оценка+"
	|Содержание - "+ОбъектОбещания.Обещание+"
	|Автор изменения - автоматически"+Символы.ПС+ДопСообщение);
	
	Сообщить(СтруктураНовогоПисьма.Тело);
	СтрКому="";
	Для каждого Эл Из Кому Цикл
		СтрКому=СтрКому+Эл.Значение+"; ";
	КонецЦикла; 
	Попытка
		ОтправитьПисьмоПоПочте(СтруктураНовогоПисьма);
		Сообщить("Отправлено письмо с информацией об измененном обещании на "+СтрКому);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
	//УдалитьФайлы(КаталогВременныхФайлов()+"Акт сверки и заказы.epf");
КонецПроцедуры

Процедура ЗаполнитьИсполнителей(ДокОбещание)
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя,
	|	РолиПользователейСоставРоли.Сотрудник как Исполнитель
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаДок2, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = РолиПользователейСоставРоли.Ссылка
	|			И (РолиПользователейСоставРоли.НомерСтроки = 1)
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|	И СоответствиеОбъектРольСрезПоследних.Объект <> НЕОПРЕДЕЛЕНО
	|	И СоответствиеОбъектРольСрезПоследних.РольПользователя.ПометкаУдаления = ЛОЖЬ
	|	И СоответствиеОбъектРольСрезПоследних.Объект ССЫЛКА Справочник.Контрагенты
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя,
	|	РолиПользователейСоставРоли.Сотрудник";
	Запрос.УстановитьПараметр("ДатаДок2", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ТипРоли", ПланыВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству);
	Результат = Запрос.Выполнить();
	Выб= Результат.Выбрать();
	
	ТЗОбещания=Результат.Выгрузить();
	
	
	Кол=ДокОбещание.Исполнители.Количество()-1;
	Для Сч=0 По Кол Цикл
		МасСтрИсп=ТЗОбещания.НайтиСтроки(Новый Структура("Исполнитель",ДокОбещание.Исполнители[Кол-Сч].Исполнитель));
		Если МасСтрИсп.Количество()=0 Тогда
			ДокОбещание.Исполнители.Удалить(Кол-Сч);
		КонецЕсли; 
	КонецЦикла;
	
	Пока Выб.Следующий() Цикл
		
		//
		//ТЗ=ДокОбещание.ОбъектыПривязки.Выгрузить();
		//ТЗ.Свернуть("Исполнитель, Оценка");
		//МасСтр=ТЗ.НайтиСтроки(Новый Структура("Исполнитель",ТекИсполнитель));
		//
		//Если Не ЗначениеЗаполнено(ТекИсполнитель) или Не ЗначениеЗаполнено(МасСтр[0].Оценка) Тогда
		//	Возврат;
		//КонецЕсли; 
		
		МасСтрИсп=ДокОбещание.Исполнители.НайтиСтроки(Новый Структура("Исполнитель",Выб.Исполнитель));
		Если МасСтрИсп.Количество()=0 Тогда
			СтрИсп=ДокОбещание.Исполнители.Добавить();
			СтрИсп.Исполнитель=Выб.Исполнитель;
			СтрИсп.Наименование=Строка(Выб.Исполнитель);
			СтрИсп.ДатаИзменения=ТекущаяДата();
			СтрИсп.Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
		Иначе	
			СтрИсп=МасСтрИсп[0];
			СтрИсп.СтараяОценка=СтрИсп.Оценка;
			СтрИсп.Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
			СтрИсп.Динамика=ПолучитьДинамикуОценки(СтрИсп.СтараяОценка,СтрИсп.Оценка);
		КонецЕсли;
		ДокОбещание.Исполнители.Сортировать("Наименование");
		
		
		
		
		
	КонецЦикла; 	
	
	
	
	
КонецПроцедуры

Процедура ОтправитьПисьмоОбИндивилуальныхОценках(ОбъектОбещания,ФизЛицо,ТЗОценки,СоотПисемОбОценках,ТЗЭлАдреса)
	СтруктураНовогоПисьма = Новый Структура;
	//СтруктураНовогоПисьма.Вставить("ВидТекста", Перечисления.ВидыТекстовЭлектронныхПисем.Текст);
	//СписокФайловВложений = Новый СписокЗначений;
	//
	//СтруктураНовогоПисьма.Вставить("СписокФайловВложений", СписокФайловВложений);
	//Кому = Новый СписокЗначений;
	
	//Запрос = Новый Запрос;
	//Запрос.Текст =                                                                                   
	//	"ВЫБРАТЬ                                                   
	//	|	КонтактнаяИнформация.Представление
	//	|ИЗ
	//	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	//	|ГДЕ
	//	|	КонтактнаяИнформация.Объект в (&Объект)
	//	|	И КонтактнаяИнформация.Тип = &Тип";
	ТекФизЛицо=?(ЗначениеЗаполнено(ОбъектОбещания.Ответственный),ОбъектОбещания.Ответственный,Справочники.ФизическиеЛица.НайтиПоНаименованию("Латыпова Анна"));
	//МассивАдресов=Новый Массив;
	//МассивАдресов.Добавить(ФизЛицо);	
	//МассивАдресов.Добавить(ТекФизЛицо);	
	//
	//Запрос.УстановитьПараметр("Объект", МассивАдресов);
	//Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	
	//Результат = Запрос.Выполнить();
	
	//ВыборкаДетальныеЗаписи = Результат.Выбрать();
	//
	//Если ВыборкаДетальныеЗаписи.Количество()>0 Тогда
	//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//		Если Кому.НайтиПоЗначению(ВыборкаДетальныеЗаписи.Представление)=Неопределено Тогда
	//			Кому.Добавить(ВыборкаДетальныеЗаписи.Представление);
	//		КонецЕсли; 
	//	КонецЦикла;
	//Иначе
	//	Кому.Добавить("sp@vkusvill.ru");
	//КонецЕсли; 
	//Запрос = Новый Запрос;
	//Запрос.Текст =                                                                                   
	//	"ВЫБРАТЬ                                                   
	//	|	КонтактнаяИнформация.Представление
	//	|ИЗ
	//	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	//	|ГДЕ
	//	|	КонтактнаяИнформация.Объект = (&Объект)
	//	|	И КонтактнаяИнформация.Тип = &Тип";
	//Запрос.УстановитьПараметр("Объект", ТекФизЛицо);
	//Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	//Результат = Запрос.Выполнить();
	//ВыборкаДетальныеЗаписи = Результат.Выбрать();
	ЕмейлТекФизЛица="";
	МасСтр=ТЗЭлАдреса.НайтиСтроки(Новый Структура("Объект",ТекФизЛицо));
	Если МасСтр.Количество() Тогда
		ЕмейлТекФизЛица=МасСтр[0].Представление;
	КонецЕсли; 
	//Если ВыборкаДетальныеЗаписи.Следующий() Тогда
	//	ЕмейлТекФизЛица=ВыборкаДетальныеЗаписи.Представление;
	//КонецЕсли;
	
	ОценкаФЛ="";
	
	
	Если Строка(ОбъектОбещания.Исполнитель)="Старший продавец-консультант" ИЛИ
		Строка(ОбъектОбещания.Исполнитель)="Продавец-консультант" Тогда
		МасСтр=ОбъектОбещания.ОбъектыПривязки.НайтиСтроки(Новый Структура("Исполнитель",ФизЛицо));
		КонецНедели=НачалоДня(ТекущаяДата())-1-1*24*60*60;
		НачалоНедели=ДобавитьМесяц(НачалоДня(НачалоДня(ТекущаяДата())-7*24*60*60-1),-2);	
		Для каждого Эл Из МасСтр Цикл
			Если Эл.Дата>=НачалоНедели И Эл.Дата<=КонецНедели Тогда
				ОценкаФЛ=ОценкаФЛ+" "+Строка(Формат(Эл.Дата,"ДФ=dd.MM.yyyy"))+" - "+Эл.Оценка;
			КонецЕсли; 
		КонецЦикла; 
	Иначе
		МасСтр=ОбъектОбещания.Заказчики.НайтиСтроки(Новый Структура("Исполнитель",ФизЛицо));
		Если МасСтр.Количество()>0 Тогда
			ОценкаФЛ=МасСтр[0].Оценка;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ОценкаФЛ) Тогда
			МасСтр=ОбъектОбещания.Исполнители.НайтиСтроки(Новый Структура("Исполнитель",ФизЛицо));
			Если МасСтр.Количество()>0 Тогда
				ОценкаФЛ=МасСтр[0].Оценка;
			КонецЕсли;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ОценкаФЛ) Тогда
			ОценкаФЛ=ОбъектОбещания.Оценка;	
		КонецЕсли;
	КонецЕсли;
	Если ТипЗнч(ОценкаФЛ)=Тип("Строка") И Не ЗначениеЗаполнено(ОценкаФЛ) Тогда
		Возврат;	
	КонецЕсли;
	
	ДопСообщение="";
	Если (ОценкаФЛ=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется
		ИЛИ ОценкаФЛ=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется
		ИЛИ (ТипЗнч(ОценкаФЛ)=Тип("Строка") И (Найти(Строка(ОценкаФЛ),"Частично исполняется")>0 ИЛИ Найти(Строка(ОценкаФЛ),"Полностью не исполняется")>0))) 
		И ТЗОценки.Колонки.Найти("МасСтрок")<>Неопределено Тогда
		ДопСообщение="Причина:
		|";
		МасСтрТЗОценки=ТЗОценки.НайтиСтроки(Новый Структура("ФизЛицо",ФизЛицо));
		Для каждого ЭлМасСтр Из МасСтрТЗОценки Цикл
			МасСтрок=ЭлМасСтр.МасСтрок.Получить();
			Для каждого СтрДоп Из МасСтрок Цикл
				ДопСообщение=ДопСообщение+"
				|"+СтрДоп.ДатаДок+" "+СтрДоп.СтруктурнаяЕдиница+" "+СтрДоп.РезультатОбращения+" "+СтрДоп.Номенклатура+" "+СтрДоп.Производитель+" "+Строка(СтрДоп.ТипЖалобы);
			КонецЦикла; 
		КонецЦикла; 
	КонецЕсли; 
	
	//СтруктураНовогоПисьма.Вставить("Кому", Кому);
	СтруктураНовогоПисьма.Вставить("Тема", "Изменена оценка "+Строка(ОбъектОбещания.Ссылка)+" заказчик - "+Строка(ОбъектОбещания.Заказчик)+" для исполнителя "+Строка(ФизЛицо)+".");
	СтруктураНовогоПисьма.Вставить("Тело","Изменена оценка "+Строка(ОбъектОбещания.Ссылка)+"
	|Заказчик - "+ОбъектОбещания.Заказчик+"
	|Исполнитель - "+ФизЛицо+?(ОбъектОбещания.Срочное,"
	|Дата исполнения - " +Формат(ОбъектОбещания.ДатаИсполнения,"ДФ=dd.MM.yyyy"),"")+ "
	|Статус - "+ОбъектОбещания.Статус+"
	|Оценка - "+ОценкаФЛ+"
	| "+ОбъектОбещания.Обещание+"
	|Автор изменения - "+ТекФизЛицо+" "+ЕмейлТекФизЛица+
	"
	|"+ДопСообщение);
	Сообщить(СтруктураНовогоПисьма.Тело);
	ТЗСоотПисемОбОценках=ПолучитьИзВременногоХранилища(СоотПисемОбОценках).Получить();
	МасПисьма=ТЗСоотПисемОбОценках.НайтиСтроки(Новый Структура("ФизЛицо,Ответственный",ФизЛицо,ТекФизЛицо));
	Если МасПисьма.Количество()=0 Тогда
		СтрНовПисьма=ТЗСоотПисемОбОценках.Добавить();	
		СтрНовПисьма.ФизЛицо=ФизЛицо;
		СтрНовПисьма.Ответственный=ТекФизЛицо;
	Иначе
		СтрНовПисьма=МасПисьма[0];
	КонецЕсли; 
	
	ТекстПисьма=СтрНовПисьма.Текст;	
	Если ТекстПисьма=Неопределено Тогда
		ТекстПисьма="";		
	КонецЕсли;
	ТекстПисьма=ТекстПисьма+Символы.ПС+Символы.ПС+СтруктураНовогоПисьма.Тело;
	СтрНовПисьма.Текст=ТекстПисьма;	
	
	СоотПисемОбОценках=ПоместитьВоВременноеХранилище(Новый ХранилищеЗначения(ТЗСоотПисемОбОценках),Новый УникальныйИдентификатор);
	
	//СтрКому="";
	//Для каждого Эл Из Кому Цикл
	//    СтрКому=СтрКому+Эл.Значение+"; ";
	//КонецЦикла; 
	//Попытка
	//	//ОтправитьПисьмоПоПочте(СтруктураНовогоПисьма);
	//    Сообщить("Отправлено письмо с информацией об измененной оценке на "+СтрКому);
	//Исключение
	//    Сообщить(ОписаниеОшибки());
	//КонецПопытки; 
	//
КонецПроцедуры

Процедура ОтправитьПисьмоПоПочте(СтруктураНовогоПисьма)  Экспорт
	КолАдр=СтруктураНовогоПисьма.Кому.Количество();
	КолИтер=Цел(КолАдр/21)+1;
	УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию("no-reply@vkusvill.ru");
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Почта = Новый ИнтернетПочта;
	Почта.Подключиться(Профиль);
	Для Ит=1 По КолИтер Цикл
		//УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
		
		СпАдресов=Новый СписокЗначений;
		
		Для Сч= (Ит-1)*20+1 По Мин(СтруктураНовогоПисьма.Кому.Количество(),Ит*20) Цикл
			ЭлСп=СтруктураНовогоПисьма.Кому[Сч-1];
			МассивАдресов=Справочники.Контрагенты.РазложитьСтрокуВМассивПодстрок(ЭлСп.Значение,";");	
			Для каждого Эл Из МассивАдресов Цикл
				Если ЗначениеЗаполнено(Эл) Тогда
					СпАдресов.Добавить(Сокрлп(Эл));
				КонецЕсли; 
			КонецЦикла; 
		КонецЦикла;
		Письмо = Новый ИнтернетПочтовоеСообщение;
		
		Письмо.Тема = СтруктураНовогоПисьма.Тема;
		Письмо.ИмяОтправителя = ""+УчетнаяЗапись+"";
		Письмо.ИмяОтправителя  = ""+СокрЛП(УчетнаяЗапись)+"";
		Письмо.Отправитель     = ""+СокрЛП(УчетнаяЗапись)+"";
		
		ТабДок=СтруктураНовогоПисьма.Тело;
		
		ТекстСообщения = Письмо.Тексты.Добавить();
		ТекстСообщения.Текст     = 	ТабДок;
		ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
		
		
		
		Для каждого Эл1 Из СтруктураНовогоПисьма.СписокФайловВложений Цикл
			Письмо.Вложения.Добавить(Эл1.Значение.ИмяФайла);
		КонецЦикла;
		
		Для каждого Адрес Из СпАдресов Цикл
			Получатель = Письмо.Получатели.Добавить();
			Получатель.Адрес           = Адрес.Значение;
		КонецЦикла;
		Почта.Послать(Письмо);
	КонецЦикла; 	
	Почта.Отключиться();
КонецПроцедуры

Функция ЗаполнитьОценку(СтруктурнаяЕдиница)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(ОбращенияПокупателей.id_OK) КАК КоличествоСлучаев,
	|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница
	|ИЗ
	|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(, СтруктурнаяЕдиница.Активное = ИСТИНА) КАК ЦФОСтруктурныхЕдиницСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|		ПО (ОбращенияПокупателей.СтруктурнаяЕдиница = ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница)
	|ГДЕ
	|	ОбращенияПокупателей.ТипЖалобы В(&ТипЖалобы)
	|	И ОбращенияПокупателей.ДатаДок МЕЖДУ &ДатаДок1 И &ДатаДок2
	|	И ОбращенияПокупателей.СтатусЖалобы = ЗНАЧЕНИЕ(Перечисление.СтатусыЖалоб.Подтверждена)
	|	И ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО = &СтруктурнаяЕдиница
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница
	|ИТОГИ
	|	СУММА(КоличествоСлучаев),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтруктурнаяЕдиница)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.УстановитьПараметр("ДатаДок1", НачалоДня(ДобавитьМесяц(ТекущаяДата(),-1)));
	Запрос.УстановитьПараметр("ДатаДок2", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	
	ТипЖалобы=Новый СписокЗначений;
	ТипЖалобы.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("210"));
	ТипЖалобы.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("211"));
	ТипЖалобы.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("212"));
	ТипЖалобы.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("213"));
	ТипЖалобы.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("214"));
	ТипЖалобы.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("187"));
	ТипЖалобы.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("115"));
	ТипЖалобы.Добавить(Справочники.ТипыЖалоб.НайтиПоКоду("252"));
	
	
	Запрос.УстановитьПараметр("ТипЖалобы", ТипЖалобы);
	
	Результат = Запрос.Выполнить();                                                   
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.КоличествоСлучаев/ВыборкаДетальныеЗаписи.СтруктурнаяЕдиница<=2 и ВыборкаДетальныеЗаписи.КоличествоСлучаев/ВыборкаДетальныеЗаписи.СтруктурнаяЕдиница >1 Тогда
			Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
		ИначеЕсли ВыборкаДетальныеЗаписи.КоличествоСлучаев/ВыборкаДетальныеЗаписи.СтруктурнаяЕдиница>2 Тогда
			Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется;
		КонецЕсли; 
	КонецЦикла;
	Возврат Оценка;
КонецФункции

Процедура ОбъектыПривязкиОценкаПриИзмененииПоИсполнителямСервер(ТекИсполнитель,ДокОбещание) Экспорт
	Если ДокОбещание.Номер="000000176" или ДокОбещание.Номер="000000011" или ДокОбещание.Номер="000000008" или ДокОбещание.Номер="000000184" Тогда
		ТЗ=Новый ТаблицаЗначений;
		ТЗ.Колонки.Добавить("Исполнитель");
		ТЗ.Колонки.Добавить("Оценка");
		Для каждого Стр Из ДокОбещание.ОбъектыПривязки Цикл
			ЗаполнитьЗначенияСвойств(ТЗ.Добавить(),Стр);
		КонецЦикла; 
		
		ТЗ.Свернуть("Исполнитель, Оценка");
		МасСтр=ТЗ.НайтиСтроки(Новый Структура("Исполнитель",ТекИсполнитель));
		
		Если Не ЗначениеЗаполнено(ТекИсполнитель)  Тогда
			Возврат;
		КонецЕсли; 

		
		МасСтрИсп=ДокОбещание.Исполнители.НайтиСтроки(Новый Структура("Исполнитель",ТекИсполнитель));
		Если МасСтрИсп.Количество()=0 Тогда
			СтрИсп=ДокОбещание.Исполнители.Добавить();
			СтрИсп.Исполнитель=ТекИсполнитель;
			СтрИсп.Наименование=Строка(ТекИсполнитель);
		Иначе	
			СтрИсп=МасСтрИсп[0];	
		КонецЕсли;
		
		ДопСообщение="";
		Сообщение="";
		МасСтрОбъекты=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Исполнитель",ТекИсполнитель));
		Для каждого Эл Из МасСтрОбъекты Цикл
			Сообщение=Сообщение+"
			|"+Эл.Описание;
			ДопСообщение=Эл.ОписаниеДоп;
		КонецЦикла; 
		СтрИсп.Описание=ДопСообщение+"
		|"+Сообщение;
		
		
		
		ФлНеИсп=Ложь;
		Для каждого ЭлМас Из МасСтр Цикл
			Если ЭлМас.Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется Тогда
				ФлНеИсп=Истина;
			КонецЕсли; 
		КонецЦикла; 
		
		Если МасСтр.Количество()=0 Тогда
			Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется;
		ИначеЕсли МасСтр.Количество()=1 Тогда
			Оценка=?(ЗначениеЗаполнено(МасСтр[0].Оценка),МасСтр[0].Оценка,Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется);
		Иначе	
			Оценка=?(ФлНеИсп и ДокОбещание.Номер="000000176",Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется,Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется);
		КонецЕсли;
		
		СтрИсп.Динамика=ПолучитьДинамикуОценки(СтрИсп.СтараяОценка,Оценка);
		Если НЕ СтрИсп.Оценка=Оценка Тогда
			
			СтрИсп.Оценка=Оценка;
			СтрИсп.ДатаИзменения=ТекущаяДата();
			
		КонецЕсли; 
		ДокОбещание.Исполнители.Сортировать("Наименование");
		
		
	Иначе	
		Кол=ДокОбещание.Исполнители.Количество()-1;
		Для Сч=0 По Кол Цикл
			МасСтрИсп=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Исполнитель",ДокОбещание.Исполнители[Кол-Сч].Исполнитель));
			Если МасСтрИсп.Количество()=0 Тогда
				ДокОбещание.Исполнители.Удалить(Кол-Сч);
			ИначеЕсли МасСтрИсп.Количество()=1  Тогда
				Если Не ЗначениеЗаполнено(МасСтрИсп[0].Оценка)  Тогда
					ДокОбещание.Исполнители.Удалить(Кол-Сч);
				КонецЕсли; 	
			КонецЕсли; 
		КонецЦикла;
		ТЗ=Новый ТаблицаЗначений;
		ТЗ.Колонки.Добавить("Исполнитель");
		ТЗ.Колонки.Добавить("Оценка");
		Для каждого Стр Из ДокОбещание.ОбъектыПривязки Цикл
			ЗаполнитьЗначенияСвойств(ТЗ.Добавить(),Стр);
		КонецЦикла; 
		ТЗ.Свернуть("Исполнитель, Оценка");
		МасСтр=ТЗ.НайтиСтроки(Новый Структура("Исполнитель",ТекИсполнитель));
		
		Если Не ЗначениеЗаполнено(ТекИсполнитель) ИЛИ МасСтр.Количество()=0 Тогда
			Возврат;
		КонецЕсли; 
		Если  Не ЗначениеЗаполнено(МасСтр[0].Оценка) И МасСтр.Количество()=1 Тогда
			Возврат;
		КонецЕсли; 
		
		МасСтрИсп=ДокОбещание.Исполнители.НайтиСтроки(Новый Структура("Исполнитель",ТекИсполнитель));
		Если МасСтрИсп.Количество()=0 Тогда
			СтрИсп=ДокОбещание.Исполнители.Добавить();
			СтрИсп.Исполнитель=ТекИсполнитель;
			СтрИсп.Наименование=Строка(ТекИсполнитель);
		Иначе	
			СтрИсп=МасСтрИсп[0];	
		КонецЕсли;
		
		ДокОбещание.Исполнители.Сортировать("Наименование");
		
		ДопСообщение="";
		Сообщение="";
		МасСтрОбъекты=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Исполнитель",ТекИсполнитель));
		Для каждого Эл Из МасСтрОбъекты Цикл
			Сообщение=Сообщение+"
			|"+Эл.Описание;
			ДопСообщение=Эл.ОписаниеДоп;
		КонецЦикла; 
		СтрИсп.Описание=ДопСообщение+"
		|"+Сообщение;
		
		
		
		Если МасСтр.Количество()=1 Тогда
			Оценка=МасСтр[0].Оценка;
		Иначе	
			Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
		КонецЕсли;
		
		СтрИсп.Динамика=ПолучитьДинамикуОценки(СтрИсп.Оценка,Оценка);
		Если НЕ СтрИсп.Оценка=Оценка Тогда
			
			СтрИсп.Оценка=Оценка;
			СтрИсп.ДатаИзменения=ТекущаяДата();
			
		КонецЕсли; 
		ДокОбещание.Исполнители.Сортировать("Наименование");
		
		
	КонецЕсли; 
КонецПроцедуры


Процедура ЗаполнитьОписание(ТекИсполнитель,ДокОбещание)
	
	Если Не ЗначениеЗаполнено(ТекИсполнитель) Тогда
		Возврат;
	КонецЕсли; 
	
	МасСтрИсп=ДокОбещание.Исполнители.НайтиСтроки(Новый Структура("Исполнитель",ТекИсполнитель));
	Если МасСтрИсп.Количество()=0 Тогда
		Возврат;
	Иначе	
		СтрИсп=МасСтрИсп[0];	
	КонецЕсли;
	
	ДопСообщение="";
	Сообщение="";
	МасСтрОбъекты=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Исполнитель",ТекИсполнитель));
	Для каждого Эл Из МасСтрОбъекты Цикл
		Сообщение=Сообщение+"
		|"+Эл.Описание;
		ДопСообщение=Эл.ОписаниеДоп;
	КонецЦикла; 
	СтрИсп.Описание=ДопСообщение+"
	|"+Сообщение;
КонецПроцедуры


Процедура ДобавитьАдресат(Знач ФизЛицо,ТЗОценки,ТЗРезультат=Неопределено,СтрРез=Неопределено)
	Если ЗначениеЗаполнено(ФизЛицо) Тогда
		Если ТЗРезультат=Неопределено Тогда
			НовСтр=ТЗОценки.Добавить();
			НовСтр.ФизЛицо=ФизЛицо;
			
		Иначе
			Если НЕ СтрРез=Неопределено Тогда
				НовСтр=ТЗОценки.Добавить();
				НовСтр.ФизЛицо=ФизЛицо;
				НовСтр.МасСтрок=СтрРез.МасСтрок;
			Иначе	
				Если ТЗОценки.НайтиСтроки(Новый Структура("ФизЛицо",ФизЛицо)).Количество()=0 Тогда
					Струк=Новый Структура("Сотрудник",ФизЛицо); 
					МасСтр=ТЗРезультат.НайтиСтроки(Струк);
					Для каждого Эл Из МасСтр Цикл
						НовСтр=ТЗОценки.Добавить();
						НовСтр.ФизЛицо=ФизЛицо;
						НовСтр.МасСтрок=Эл.МасСтрок;
					КонецЦикла; 
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

Процедура УдалитьЛишниеАдресаты(ТЗОценки,ДокОбещание)
	МасФл=Новый Массив;
	Для каждого стр Из ТЗОценки Цикл
		Если ДокОбещание.Заказчики.НайтиСтроки(Новый Структура("Исполнитель",стр.ФизЛицо)).Количество()=0 и ДокОбещание.Исполнители.НайтиСтроки(Новый Структура("Исполнитель",стр.ФизЛицо)).Количество()=0 Тогда
			МасФл.Добавить(стр.ФизЛицо);
		КонецЕсли; 	
	КонецЦикла; 
	КолСтр=ТЗОценки.Количество()-1;
	Для Сч=0 По КолСтр Цикл
		Если МасФл.Найти(ТЗОценки[КолСтр-Сч].ФизЛицо)<>Неопределено Тогда
			ТЗОценки.Удалить(КолСтр-Сч);
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

Процедура ОбъектыПривязкиОценкаПриИзмененииСервер(ДокОбещание) Экспорт
	
	ТЗ=ДокОбещание.Исполнители.Выгрузить();
	ТЗ.Свернуть("Оценка");
	Если ТЗ.Количество()=1 Тогда
		Оценка=ТЗ[0].Оценка;
	Иначе	
		Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется;
	КонецЕсли;
	ДокОбещание.Динамика=ПолучитьДинамикуОценки(ДокОбещание.Оценка,Оценка);
	Если ДокОбещание.Оценка<>Оценка Тогда
		ДокОбещание.Оценка=Оценка;	   
		ДокОбещание.ДатаИзменения=ТекущаяДата();
	КонецЕсли;
	ТЗОц=Новый ТаблицаЗначений;
	ТЗОц.Колонки.Добавить("Исполнитель");
	ТЗОц.Колонки.Добавить("Дата");
	
	
	Для каждого СтрИсп Из ДокОбещание.Исполнители Цикл
		ТЗОцИсп=Новый ТаблицаЗначений;
		ТЗОцИсп.Колонки.Добавить("Исполнитель");
		ТЗОцИсп.Колонки.Добавить("Дата");
	    МасСтр=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Исполнитель",СтрИсп.Исполнитель));
		Для каждого Эл Из МасСтр Цикл
			ЗаполнитьЗначенияСвойств(ТЗОцИсп.Добавить(),Эл);
		КонецЦикла;
		ТЗОцИсп.Сортировать("Дата");
		Если ТЗОцИсп.Количество() Тогда
			ЗаполнитьЗначенияСвойств(ТЗОц.Добавить(),ТЗОцИсп[ТЗОцИсп.Количество()-1]);
		КонецЕсли; 
	КонецЦикла; 
	Для каждого Стр Из ДокОбещание.ОбъектыПривязки Цикл
		Если ЗначениеЗаполнено(Стр.Дата) Тогда
			Если ТЗОц.НайтиСтроки(Новый Структура("Исполнитель,Дата",Стр.Исполнитель,Стр.Дата)).Количество()=0 Тогда
				Стр.НеПоказывать=Истина;
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

Процедура УдалитьЛишниеСтроки(ДокОбещание)
		МасИскл=Новый Массив;
		Для каждого СтрРез Из ДокОбещание.Исполнители Цикл
			МасСтр=ДокОбещание.ОбъектыПривязки.НайтиСтроки(Новый Структура("Исполнитель",СтрРез.Исполнитель));
			ТЗПоСотр=Новый ТаблицаЗначений;
			ТЗПоСотр.Колонки.Добавить("Дата");
			ТЗПоСотр.Колонки.Добавить("НомСтр");
			ТЗПоСотр.Колонки.Добавить("Оценка");
			
			Для каждого Эл Из МасСтр Цикл
				НовСтр=ТЗПоСотр.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр,Эл);	
				НовСтр.НомСтр=Эл.НомерСтроки;
			КонецЦикла; 
			ТЗПоСотр.Сортировать("Дата");
		
			КолСтр=ТЗПоСотр.Количество()-1;
			Для Сч=0 По КолСтр Цикл
				Если Сч<КолСтр Тогда
					Если ТЗПоСотр[КолСтр-Сч].Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется
						И ТЗПоСотр[КолСтр-Сч-1].Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется Тогда
						МасИскл.Добавить(ТЗПоСотр[КолСтр-Сч].НомСтр);
					КонецЕсли; 
				КонецЕсли; 
			КонецЦикла; 
			ТекОценка=Неопределено;
			Для Сч=0 По КолСтр Цикл
				//Если Сч<КолСтр Тогда
				Если НЕ ЗначениеЗаполнено(ТекОценка) Тогда
					Если ТЗПоСотр[Сч].Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется ИЛИ
						ТЗПоСотр[Сч].Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется Тогда
						ТекОценка=ТЗПоСотр[Сч].Оценка;
					    ТекДата=ТЗПоСотр[Сч].Дата;
						Продолжить;
					КонецЕсли; 
				ИначеЕсли ТекОценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется   Тогда
					Если ТЗПоСотр[Сч].Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется Тогда
						ТекОценка=ТЗПоСотр[Сч].Оценка;
					    ТекДата=ТЗПоСотр[Сч].Дата;
						Продолжить;
					КонецЕсли; 
				ИначеЕсли ТекОценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется Тогда
					Если ТЗПоСотр[Сч].Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется ИЛИ
						ТЗПоСотр[Сч].Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется Тогда
						ТекОценка=ТЗПоСотр[Сч].Оценка;
					    ТекДата=ТЗПоСотр[Сч].Дата;
						Продолжить;
					КонецЕсли; 
				КонецЕсли; 
					
					Если ЗначениеЗаполнено(ТекОценка) Тогда
						Если ТекОценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюНеИсполняется 
							И (ТЗПоСотр[Сч].Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется 
							ИЛИ ТЗПоСотр[Сч].Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется) И
							ДобавитьМесяц(ТЗПоСотр[Сч].Дата,-1)<ТекДата Тогда
							МасИскл.Добавить(ТЗПоСотр[Сч].НомСтр);
						КонецЕсли; 
						Если (ТЗПоСотр[Сч].Оценка=Перечисления.ОценкаКачестваИсполнения.ЧастичноИсполняется) 
							И ТЗПоСотр[Сч].Оценка=Перечисления.ОценкаКачестваИсполнения.ПолностьюИсполняется И
							ДобавитьМесяц(ТЗПоСотр[Сч].Дата,-1)<ТекДата Тогда
							МасИскл.Добавить(ТЗПоСотр[Сч].НомСтр);
						КонецЕсли; 
					КонецЕсли; 
				//КонецЕсли; 
			КонецЦикла; 
		КонецЦикла;
		КолСтр=ДокОбещание.ОбъектыПривязки.Количество()-1;
		Для Сч=0 По КолСтр Цикл
			Если МасИскл.Найти(ДокОбещание.ОбъектыПривязки[КолСтр-Сч].НомерСтроки)<>Неопределено Тогда
				ДокОбещание.ОбъектыПривязки.Удалить(КолСтр-Сч);
			КонецЕсли; 
		КонецЦикла; 
	

КонецПроцедуры
 
