//
&НаСервере
Процедура РазослатьВБотНаСервере() Экспорт 
	
	Если НЕ Объект.Бот Тогда
		Сообщить("Сообщения в Бот Telegram не создаются");
		Возврат;
	КонецЕсли;		
	
	ЭтоРабочаяБаза = Истина; //(Найти(СтрокаСоединенияИнформационнойБазы(), "IzbenkaFin") > 0); 
	ИмяБазы = ?(ЭтоРабочаяБаза, "IzbenkaFin", "automacon11"); // ТЕСТ
	
	//+++АК mika 2018.09.20 ИП-00019640 (текст перенесен в модуль менеджера)
	Документы.РассылкаТелеграм.РазослатьВБотНаСервере(Объект);
	//---АК mika
		
КонецПроцедуры

//
&НаСервере
Процедура РазослатьВМПНаСервере() Экспорт 
	
	Если НЕ Объект.МП Тогда
		Сообщить("Сообщения в мобильное приложение не создаются");
		Возврат;
	КонецЕсли;
	
	Если Объект.ТипПушаМП = "Акция" ТОгда
		ТипПуша = "6";	
	ИначеЕсли Объект.ТипПушаМП = "Простое сообщение" ТОгда
		ТипПуша = "0";
	ИначеЕсли Объект.ТипПушаМП = "Опрос" ТОгда
		ТипПуша = "3";		
	Иначе
		Сообщить("Тип пуша не выбран");
		Возврат;		
	КонецЕсли;	
	
	ИмяБазы = "IzbenkaFin";
	
	ТекстЗапроса =
	"INSERT INTO [srv-sql03].[Telegram].[dbo].[outbox_MP]
	|   ([oneSignalToken]
	|   ,[Heading_message]
	|   ,[Message]
	|   ,[Type_message]
	|   ,[date_message]
	|   ,[date_send]
	|   ,[Data_message]
	|   ,[read_time]
	|	,number)
	|SELECT
	|	token
	|	,title
	|	,REPLACE(
	|	REPLACE(
	|	REPLACE(
	|	REPLACE(
	|	REPLACE(
	|	REPLACE(
	|	REPLACE(
	|	REPLACE(CAST(template as nvarchar(500)), '[Имя]', name)
	|	,'[Сумма]', CAST(summ as nvarchar))
	|	,'[Карта]', card_number)
	|	,'[П1]', P1)
	|	,'[П2]', P2) 
	|	,'[П3]', P3) 
	|	,'[П4]', P4) 
	|	,'[П5]', P5) as message
	|	," + ТипПуша + "
	|	,GETDATE()
	|	,'1900-01-01 00:00:00.000'
	|	,REPLACE(
	|	REPLACE(
	|	REPLACE(
	|	REPLACE(CAST(keyboard_template as nvarchar(500)), '[Сумма]', CAST(summ as nvarchar))
	|	,'[П1]', P1)
	|	,'[П2]', P2) 
	|	,'[П3]', P3) as keyboard_parameter
	|	,NULL
	|	,card_number
	|FROM
	|	(SELECT _IDRRef,_Fld13431RRef, _Fld13151 as title, _Fld11702 as template,_Fld11719 as keyboard_id,_Fld11720 as keyboard_template
	|	FROM [IzbenkaFin].[dbo].[_Document11699] (nolock)
	|	WHERE _Number = '" + Объект.Номер + "') as a
	|	join 
	|	(SELECT [_Document11699_IDRRef],_Fld14376 as token,[_Fld11708] as name,[_Fld11709] as card_number,[_Fld11785] as summ,
	|	_Fld14187 as 'P1', _Fld14188 as 'P2', _Fld14189 as 'P3', _Fld14190 as 'P4', _Fld14191 as 'P5'
	|	FROM [IzbenkaFin].[dbo].[_Document11699_VT11704] (nolock) WHERE _Fld14376 <> '') as b on a._IDRRef = b._Document11699_IDRRef
	|	LEFT join
	|	[IzbenkaFin].[dbo].[_Enum13428] (nolock) as c on a._Fld13431RRef = c._IDRRef
	|SELECT @@rowcount as 'rowcount'";
	ТЗ = ПолучитьРезультатЗапросаТЗ2(ТекстЗапроса);
	
	Если ТипЗнч(ТЗ) = Тип("ТаблицаЗначений") И Тз.Количество()>0 Тогда
		Сообщить("Создано сообщений в мобильном приложении: " + Формат(ТЗ[0].rowcount, "ЧН=0; ЧГ="));
	КонецЕсли;
	
КонецПроцедуры


//
Процедура РазослатьСмсНаСервере()
	
	Если НЕ (Объект.СМС И Объект.Клавиатура = 0) Тогда
		Сообщить("SMS сообщения не создаются");
		Возврат;
	КонецЕсли;	
	
	Если Объект.МП тогда
		УсловиеМП = " AND  _Fld14376 = ''";
	Иначе
		УсловиеМП = "";
	КонецЕсли;
	
	Если Объект.Бот тогда
		УсловиеБот = " AND  _Fld11706 = 0";
	Иначе
		УсловиеБот = "";
	КонецЕсли;		
	
	ТекстЗапроса =
	"INSERT INTO [IES].[dbo].[Outgoing]
	|	([Number]
	|	,[Message]
	|	,[AddDate])
	|SELECT
	|	'7' + RIGHT(phone, 10)
	|	,LEFT(
	|	REPLACE(
	|	REPLACE(
	|	REPLACE(
	|	REPLACE(
	|	REPLACE(
	|	REPLACE(
	|	REPLACE(
	|	REPLACE(CAST(template as nvarchar(4000)), '[Имя]', name)
	|	,'[Сумма]', CAST(summ as nvarchar))
	|	,'[Карта]', card_number)
	|	,'[П1]', P1)
	|	,'[П2]', P2) 
	|	,'[П3]', P3) 
	|	,'[П4]', P4) 
	|	,'[П5]', P5)
	|	, 512) as message
	|	,GETDATE()
	|FROM
	|	(SELECT _IDRRef,_Fld13431RRef, _Fld11702 as template
	|	FROM [IzbenkaFin].[dbo].[_Document11699] (nolock)
	|	WHERE _Number = '" + Объект.Номер + "') as a
	|	join 
	|	(SELECT [_Document11699_IDRRef], _Fld14650 as phone,[_Fld11708] as name,[_Fld11709] as card_number,[_Fld11785] as summ,
	|	_Fld14187 as 'P1', _Fld14188 as 'P2', _Fld14189 as 'P3', _Fld14190 as 'P4', _Fld14191 as 'P5'
	|	FROM [IzbenkaFin].[dbo].[_Document11699_VT11704] (nolock) as strokes
	|	left join Loyalty..Customer as blocked with(nolock) on strokes._Fld14650 = blocked.Phone
	|	WHERE _Fld14650 <> '' and isNULL(MobilCarta, 1)=1" + УсловиеМП + УсловиеБот + ") as b on a._IDRRef = b._Document11699_IDRRef
	|SELECT @@rowcount as 'rowcount'";
	
	ТЗ = ПолучитьРезультатЗапросаТЗ2(ТекстЗапроса);
	
	Если ТипЗнч(ТЗ) = Тип("ТаблицаЗначений") И Тз.Количество()>0 Тогда
		Сообщить("Создано SMS сообщений: " + Формат(ТЗ[0].rowcount, "ЧН=0; ЧГ="));
	КонецЕсли;	
	
	
КонецПроцедуры	
	
//
&НаКлиенте
Процедура Разосласть(Команда)
	
	Если НЕ Объект.Бот И НЕ Объект.МП И НЕ Объект.СМС Тогда
		Предупреждение("Не выбран ни один канал рассылки!
		|(Бот Telegram, Мобильное приложение, SMS)");
		Возврат;
	КонецЕсли;
	
	Если Объект.МП и Не ЗначениеЗаполнено(Объект.ТипПушаМП) Тогда
		Предупреждение("Не выбран тип пуша МП!
		|Выберите тип или отключите рассылку в МП");
		Возврат;
	КонецЕсли;	
	
	//Если Объект.МП и (Объект.Клавиатура = 1000 ИЛИ Объект.Клавиатура = 1001) и ЗначениеЗаполнено(Объект.Опрос) Тогда
	//	Сообщить("Опросы в мобильное приложение не рассылаются!");
	//	Возврат;
	//КонецЕсли;	
	
	Если Модифицированность Тогда
		Если Вопрос("Документ изменен. Записать и разослать?", РежимДиалогаВопрос.ДаНетОтмена) = КодВозвратаДиалога.Да Тогда
			ЭтаФорма.Записать();
		Иначе
			Возврат;
		КонецЕсли;
	Иначе
		Если Вопрос("Разослать?", РежимДиалогаВопрос.ДаНетОтмена) = КодВозвратаДиалога.Да Тогда
			//ЭтаФорма.Записать();
		Иначе
			Возврат;
		КонецЕсли;		
	КонецЕсли;
	
	Если Объект.Клавиатура = 66 И НЕ (ЗначениеЗаполнено(Объект.ТоварНГ) И ЗначениеЗаполнено(Объект.АктивноДо) И ЗначениеЗаполнено(Объект.ПараметрКлавиатуры)) Тогда
		Сообщить("Заполните параметры!", СтатусСообщения.Внимание);
		Возврат;
	КонецЕсли;
	

	Попытка
		РазослатьВМПНаСервере();
	Исключение
	КонецПопытки;
	РазослатьВБотНаСервере();
	РазослатьСмсНаСервере();
	Объект.Разослано = ТекущаяДата();
	ЭтаФорма.Записать();	
	
КонецПроцедуры

//
&НаСервере
Процедура ЗаполнитьТестНаСервере() Экспорт 
	
	// ТЕСТ
	Объект.Получатели.Очистить();
	
	НоваяСтрока = Объект.Получатели.Добавить();
	НоваяСтрока.ИД = 230236517;
	НоваяСтрока.Имя = "Владимир";
	НоваяСтрока.Бот = 4;
	НоваяСтрока.Карта = "0000098";
	
	НоваяСтрока = Объект.Получатели.Добавить();
	НоваяСтрока.ИД = 278392370;
	НоваяСтрока.Имя = "Евгений Владимирович";
	НоваяСтрока.Бот = 4;
	НоваяСтрока.Карта = "0000003";
	
	НоваяСтрока = Объект.Получатели.Добавить();
	НоваяСтрока.ИД = 300140001;
	НоваяСтрока.Имя = "Мария";
	НоваяСтрока.Бот = 4;
	НоваяСтрока.Карта = "3258801";	
	
КонецПроцедуры

//
&НаКлиенте
Процедура ЗаполнитьТест(Команда)
	ЗаполнитьТестНаСервере();
КонецПроцедуры

//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 08.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Рассылка телеграм");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
	      
	Если Объект.Ссылка.Пустая() Тогда
		ЗаполнитьПроизводителей();
		ЗаполнитьПоШаблону();
		Объект.Бот = Истина;
	КонецЕсли;
	
	//ИП-00016861 Раков П.С. Заполенние таблицы ответов ++
	ОбновитьтАблицуОтветов();
	//Раков--
	
КонецПроцедуры

//
&НаСервере
Процедура ЗаполнитьПоШаблону()
	
	Если ЗначениеЗаполнено(Объект.ТоварНГ) И ЗначениеЗаполнено(Объект.АктивноДо) Тогда
		ЗаполнитьНГ();
		Элементы.ПараметрКлавиатуры.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

//
&НаСервере
Функция ЭтоНовинка(ИД, Нонфуд = Ложь)
	
	ТекстЗапроса =
	"select * from vv03..tovari_ostatki (nolock) WHERE id_tov = " + Формат(ИД, "ЧГ=");
	Результат = Телеграм.База_ВыполнитьЗапрос(
		ТекстЗапроса,
		ВнешниеДанные.ПолучитьСтрокуПодключенияMSSQL("srv-sql03", "Loyalty"));		
	ТЗ = Телеграм.База_РезультатЗапросВТаблицуЗначений(Результат);
	Если ЗначениеЗаполнено(ТЗ) Тогда
		Попытка
			Нонфуд = (ТЗ[0].non_food = 1);
			Возврат (ТЗ[0].novinka = 1);
		Исключение		
		КонецПопытки;
	КонецЕсли;
	
	Возврат Ложь;	
	
КонецФункции

//
&НаСервере
Процедура ЗаполнитьНГ()
	
	Если ЗначениеЗаполнено(Объект.ТоварНГ) и ЗначениеЗаполнено(Объект.АктивноДо) Тогда
		Объект.Клавиатура = 66;
		Объект.ПараметрКлавиатуры = Формат(Объект.ТоварНГ.id_tov, "ЧГ=") + "|[Сумма]|" + Формат(КонецДня(Объект.АктивноДо), "ДФ=yyyyMMddHHmmss");
		НонФуд = Ложь;
		Если ЭтоНовинка(Объект.ТоварНГ.id_tov, Нонфуд) Тогда
			ТекстНГ = ?(Нонфуд, Справочники.ШаблоныТелеграм.НовинкаНонФуд.Шаблон, Справочники.ШаблоныТелеграм.НовинкаФуд.Шаблон);
		Иначе
			ТекстНГ = ?(Нонфуд, Справочники.ШаблоныТелеграм.НеНовинкаНонФуд.Шаблон, Справочники.ШаблоныТелеграм.НеНовинкаФуд.Шаблон);
		КонецЕсли;
		//ТекстНГ = Константы.СообщениеНародныйГурман.Получить();
		Если ТекстНГ = "" Тогда
			ТекстНГ = "[Имя], сегодня в магазине «ВкусВилл» вы купили товар [НаименованиеТовара].
			|Мы вернем полную стоимость за этот продукт [Сумма] на вашу карту [Карта], если вы напишете нам свое честное мнение о новинке и пришлете фото (лучше несколько).
			|Довольны ли вы качеством продукта, его вкусом, ценой, внешним видом, упаковкой? Чем подробнее и честнее вы сформулируете свое мнение, тем полезнее для нас окажется отзыв.
			|Чтобы робот вернул вам полную стоимость за продукт, отзыв нужно прислать до [АктивноДо].
			|Ваш отзыв может быть опубликован в рубрике «Народный гурман» в группе ВКонтакте или на сайте в обзоре продуктов.";
		КонецЕсли;
		ТекстНГ = СтрЗаменить(ТекстНГ, "[НаименованиеТовара]",  Объект.ТоварНГ.Наименование);
		ТекстНГ = СтрЗаменить(ТекстНГ, "[АктивноДо]",  Формат(Объект.АктивноДо, "ДЛФ=DD"));
		Объект.ТекстСообщения = ТекстНГ;
	Иначе
		Объект.Клавиатура = 0;
		Объект.ПараметрКлавиатуры = "";
		Объект.ТекстСообщения = "";		
	КонецЕсли;
		
КонецПроцедуры

//
&НаСервере
Процедура ЗаполнитьПроизводителей()
	
	Если ЗначениеЗаполнено(Объект.ТоварНГ)  Тогда
		ТекстЗапроса =
		"exec sms_repl.dbo.sales_id_tov_id_kontr
		|@date1 = '" + Формат(Объект.ДатаПокупкиНГ, "ДФ=yyyy-MM-dd") + "',
		|@date2 = '" + Формат(Объект.ДатаПокупкиНГ, "ДФ=yyyy-MM-dd") + "',
		|@id_tov = " + Формат(Объект.ТоварНГ.id_tov, "ЧГ=");
		Результат = Телеграм.База_ВыполнитьЗапрос(ТекстЗапроса, ВнешниеДанные.ПолучитьСтрокуПодключенияMSSQL("srv-sql01", "Loyalty"));
		ТЗ = Телеграм.База_РезультатЗапросВТаблицуЗначений(Результат);	
		Если ТЗ.Количество() = 0 Тогда
			Объект.ПроизводительНГ = Справочники.Контрагенты.ПустаяСсылка();
			Элементы.ПроизводительНГ.СписокВыбора.Очистить();			
		Иначе
			МассивИД = ТЗ.ВыгрузитьКолонку("id_kontr");
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	Контрагенты.Ссылка
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	Контрагенты.ИД В(&МассивИД)");
			Запрос.УстановитьПараметр("МассивИД", МассивИД);
			ТЗ = Запрос.Выполнить().Выгрузить();
			Если ТЗ.Количество() = 0 Тогда
				Объект.ПроизводительНГ = Справочники.Контрагенты.ПустаяСсылка();
				Элементы.ПроизводительНГ.СписокВыбора.Очистить();			
			Иначе
				Элементы.ПроизводительНГ.СписокВыбора.ЗагрузитьЗначения(ТЗ.ВыгрузитьКолонку("Ссылка"));
			КонецЕсли;
		КонецЕсли;
	Иначе
		Объект.ПроизводительНГ = Справочники.Контрагенты.ПустаяСсылка();
		Элементы.ПроизводительНГ.СписокВыбора.Очистить();	
	КонецЕсли;
		
КонецПроцедуры

//
&НаКлиенте
Процедура ТоварНГПриИзменении(Элемент)
	ЗаполнитьПроизводителей();
	ЗаполнитьНГ();
КонецПроцедуры

//
&НаКлиенте
Процедура ЗаполнитьПоПокупкам(Команда)
	
	Если Объект.КоличествоНГ = 0 ИЛИ НЕ ЗначениеЗаполнено(Объект.ДатаПокупкиНГ) ИЛИ НЕ ЗначениеЗаполнено(Объект.ТоварНГ) Тогда
		Сообщить("Заполните параметры выборки!", СтатусСообщения.Внимание);
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоПокупкамНаСервере();	
	
КонецПроцедуры

//
&НаСервере
Процедура ЗаполнитьПоПокупкамНаСервере(ТолькоСотрудники = Ложь)
	
	Весовой = Объект.ТоварНГ.Весовой;
	id_kontr = ?(ЗначениеЗаполнено(Объект.ПроизводительНГ), Формат(Объект.ПроизводительНГ.ИД, "ЧГ="), "NULL"); 

	ТекстЗапроса =
	"sms_repl.dbo.customer_id_tov
	|@date1 = '" + Формат(Объект.ДатаПокупкиНГ, "ДФ=yyyy-MM-dd") + "',
	|@date2 = '" + Формат(Объект.ДатаПокупкиНГ, "ДФ=yyyy-MM-dd") + "',
	|@id_tov = " + Формат(Объект.ТоварНГ.id_tov, "ЧГ=") + ",
	//|@id_tov = 20870,
	|@id_kontr = " + id_kontr;	
	
	Результат = Телеграм.База_ВыполнитьЗапрос(ТекстЗапроса, ВнешниеДанные.ПолучитьСтрокуПодключенияMSSQL("srv-sql01", "Loyalty"));
	ТЗН = Телеграм.База_РезультатЗапросВТаблицуЗначений(Результат);	
	
	ТЗ					= Новый ТаблицаЗначений;
	КС7					= Новый КвалификаторыСтроки(7);
	КС50				= Новый КвалификаторыСтроки(50);
	МассивС				= Новый Массив;
	МассивС.Добавить(Тип("Строка"));
	ОписаниеТиповСтр7	= Новый ОписаниеТипов(МассивС,,КС7);
	ОписаниеТиповСтр50	= Новый ОписаниеТипов(МассивС,,КС50);
	МассивЧ				= Новый Массив;
	МассивЧ.Добавить(Тип("Число"));		
	ОписаниеТиповЧисло	= Новый ОписаниеТипов(МассивЧ);
	ТЗ.Колонки.Добавить("BonusCard_cl",	ОписаниеТиповСтр7);
	ТЗ.Колонки.Добавить("FullName",		ОписаниеТиповСтр50);
	ТЗ.Колонки.Добавить("telegram_id",	ОписаниеТиповЧисло);
	ТЗ.Колонки.Добавить("IsEmployee",	ОписаниеТиповЧисло);	
	ТЗ.Колонки.Добавить("Quantity",		ОписаниеТиповЧисло);
	ТЗ.Колонки.Добавить("BaseSum",		ОписаниеТиповЧисло);
	ТЗ.Колонки.Добавить("Price_retail",	ОписаниеТиповЧисло);
	
	Для каждого Стр Из ТЗН Цикл
		Если ТолькоСотрудники И Стр.IsEmployee = 0 Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = ТЗ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);	
		Если НоваяСтрока.IsEmployee = 1 Тогда
			НоваяСтрока.IsEmployee = 3;
		Иначе
			НоваяСтрока.IsEmployee = 1;
		КонецЕсли;
	КонецЦикла; 
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Покупатели.BonusCard_cl,
	|	Покупатели.FullName,
	|	Покупатели.telegram_id,
	|	Покупатели.Quantity,
	|	Покупатели.BaseSum,
	|	Покупатели.Price_retail,
	|	Покупатели.IsEmployee
	|ПОМЕСТИТЬ Покупатели
	|ИЗ
	|	&Покупатели КАК Покупатели
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Покупатели.BonusCard_cl КАК Карта,
	|	Покупатели.FullName КАК Имя,
	|	Покупатели.telegram_id КАК ИД,
	|	Покупатели.IsEmployee КАК Бот,
	|	ВЫБОР
	|		КОГДА &Весовой
	|			ТОГДА ВЫРАЗИТЬ(Покупатели.BaseSum КАК ЧИСЛО(10, 0))
	|		ИНАЧЕ ВЫБОР
	|				КОГДА Покупатели.Quantity = 0
	|					ТОГДА 0
	|				ИНАЧЕ ВЫРАЗИТЬ(Покупатели.BaseSum / Покупатели.Quantity КАК ЧИСЛО(10, 0))
	|			КОНЕЦ
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	Покупатели КАК Покупатели
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РассылкаТелеграм.Получатели КАК РассылкаТелеграмПолучатели
	|		ПО Покупатели.BonusCard_cl = РассылкаТелеграмПолучатели.Карта
	|			И (НЕ РассылкаТелеграмПолучатели.Ссылка.ПометкаУдаления)
	|			И (РассылкаТелеграмПолучатели.Ссылка.Дата >= &МинусМесяц)
	|ГДЕ
	|	РассылкаТелеграмПолучатели.Карта ЕСТЬ NULL ");
	Запрос.УстановитьПараметр("Покупатели",	ТЗ);
	Запрос.УстановитьПараметр("Весовой",	Весовой);
	Запрос.УстановитьПараметр("МинусМесяц",	ТекущаяДата() - 60*60*24*30);
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	ЧислоСтрок = Мин(Объект.КоличествоНГ, ТЗ.Количество());
	
	Объект.Получатели.Очистить();
	Для ном = 0 по ЧислоСтрок-1 Цикл	
		НоваяСтрока = Объект.Получатели.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТЗ[ном]);
	КонецЦикла; 
	
КонецПроцедуры

//
&НаКлиенте
Процедура АктивноДоПриИзменении(Элемент)
	ЗаполнитьПроизводителей();
	ЗаполнитьПоШаблону();
КонецПроцедуры

//
&НаКлиенте
Процедура Настройка(Команда)
	ОткрытьФорму("ОбщаяФорма.НастройкаНародногоГурмана");
КонецПроцедуры

//
&НаКлиенте
Процедура ЗаполнитьПоПокупкамСотрудники(Команда)
	
	Если Объект.КоличествоНГ = 0 ИЛИ НЕ ЗначениеЗаполнено(Объект.ДатаПокупкиНГ) ИЛИ НЕ ЗначениеЗаполнено(Объект.ТоварНГ) Тогда
		Сообщить("Заполните параметры выборки!", СтатусСообщения.Внимание);
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПоПокупкамНаСервере(Истина);	
	
КонецПроцедуры

//ИП-00016861 Раков П.С. Заполнение покупателей по результатам выборк из СКЛ ++
&НаКлиенте
Процедура ОпросНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьФормуМодально("Документ.РассылкаТелеграм.Форма.ФормаВыбораОпроса",,ЭтаФорма);
	
	ОбновитьтАблицуОтветов();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборкаПоПоведениюНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Выбран = ложь;
	ОткрытьФормуМодально("Документ.РассылкаТелеграм.Форма.ФормаВыборкиПоПоведеиюБота",,ЭтаФорма);
	
	Если НЕ Выбран тогда
		Возврат;
	КонецЕсли;	
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборкаПоПоведениюОчистка(Элемент, СтандартнаяОбработка)
	//СтандартнаяОбработка = Ложь;
	//Объект.ВыборкаПоПоведению = "";
	//ВыборкаЗППриИзменении(Неопределено);  //нужно оставить только вторую выборку, если она есть
КонецПроцедуры

&НаКлиенте
Процедура ВыборкаЗППриИзменении(Элемент)
	//Если не Объект.КоличествоНГ тогда
	//	 Сообщить("Установите количество получателей.");
	//	 Возврат
	//КонецЕсли;	
	//ВыборкаЗППриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыборкаЗППриИзмененииНаСервере()
		
	Если НЕ ЗначениеЗаполнено(Объект.ВыборкаЗП) тогда      // Отбор осуществляется по резултатам 2ух выборок
		Если ЗначениеЗаполнено(Объект.ВыборкаПоПоведению) тогда 
			ТаблицаПолучателей = ВыбратьНаСервере();
			Объект.Получатели.Загрузить(ТаблицаПолучателей);
			возврат;
		Иначе
			Объект.Получатели.Очистить();
			Возврат;
		КонецЕсли;	
	КонецЕсли;
	
	Попытка
		ТаблицаПолучателейЗП = ПолучитьПолучателейПоВыборкеЗП();
		
		Если ТипЗнч(ТаблицаПолучателейЗП) = Тип("ТаблицаЗначений") тогда
			Объект.Получатели.Очистить();
		Иначе
			Возврат;
		КонецЕсли;	

		Для Каждого Строка из ТаблицаПолучателейЗП Цикл
			НСтрока = Объект.Получатели.Добавить();
			НСтрока.ИД = Строка.telegram_id;
			НСтрока.Карта = Строка.Email;
			НСтрока.Имя = Строка.FullName;
			НСтрока.Бот = ?(Строка.IsEmployee = 0, 1, 3);
			Нстрока.Токен = Строка.OneSignalToken;
		КонецЦикла;
	Исключение
		Сообщить(ОписаниеОшибки());

	КонецПопытки;

КонецПроцедуры

&НаСервере
Функция ПолучитьПолучателейПоВыборкеЗП()

	СтруктураТаблицы = новый Структура;
	СтруктураТаблицы.Вставить("ВыборкаЗП", Объект.ВыборкаЗП);
	СтруктураТаблицы.Вставить("Проект", Перечисления.Проекты.ВкусВилл);
	СтруктураТаблицы.Вставить("Вопрос", "");
	СтруктураТаблицы.Вставить("ТипСвязи", Справочники.ТипыСвязейСПокупателями.ПустаяСсылка()); 
	СтруктураТаблицы.Вставить("КоличествоОбрабатываемыхЧеков", 10000);  
	СтруктураТаблицы.Вставить("ТипОбращения", "ГруппаЗП"); 
	СтруктураТаблицы.Вставить("МаксКол", Формат(Объект.КоличествоНГ,"ЧГ="));    
	СтруктураТаблицы.Вставить("ТекРассылка", Справочники.РассылкиСМС.ПустаяСсылка());
	СтруктураТаблицы.Вставить("ИспользоватьПриоритеты", Ложь);
	СтруктураТаблицы.Вставить("ТипРассылки", ПолучитьТипРассылкиСтрокой(Объект.ТипРассылки));
	СтруктураТаблицы.Вставить("ТипРассылкиЧислом", ПолучитьТипРассылкиНомером(Объект.ТипРассылки));
	СтруктураТаблицы.Вставить("Частота", Объект.Частота);
	СтруктураТаблицы.Вставить("Дата", Объект.Дата); //+++АК mika 2018.08.01 ИП-00019066
	
	РассылкаТелеграмм = Истина;	
	Если ЗначениеЗаполнено(Объект.ВыборкаПоПоведению) тогда
		ТекстЗапроса = ?(Объект.ОсновнойБот,
		"Select telegram_id from 
		|(SELECT [_Fld98] as telegram_id      
		|FROM [srv-sql02].[Telegramm].[dbo].[_InfoRg94] as BOT_Poll with(nolock) left join [srv-sql02].[Telegramm].[dbo].[_InfoRg68] as Cont with(nolock) on BOT_Poll.[_Fld98] = Cont.[_Fld69]
		|Where [_Fld198]='"+ Объект.ВыборкаПоПоведению + "' 
		|and not [_Fld98] = 0 
		|and not [_Fld287] = '' 
		|and not [_Fld71] = '' 	
		|group by  [_Fld98]
		|union all
		|", "")
 		+ ?(Объект.ТестовыйБот,
		"SELECT [_Fld98] as telegram_id      
		|FROM [srv-sql02].[telegramm_test].[dbo].[_InfoRg94] as BOT_Poll with(nolock) left join [srv-sql02].[telegramm_test].[dbo].[_InfoRg68] as Cont with(nolock) on BOT_Poll.[_Fld98] = Cont.[_Fld69]
		|Where [_Fld198]='"+ Объект.ВыборкаПоПоведению + "' 
		|and not [_Fld98] = 0 
		|and not [_Fld287] = '' 
		|and not [_Fld71] = '' 	
		|group by  [_Fld98]) as ins", "");
	Иначе
		ТекстЗапроса = "";
	КонецЕсли;	
	
	Возврат CRM.ПостроитьТаблицуРассылки(СтруктураТаблицы, РассылкаТелеграмм, ТекстЗапроса, Объект.ОсновнойБот, Объект.ТестовыйБот, Объект.МПОтбор);

КонецФункции // ПолучитьПолучателейПоВыборкеЗП()

&НаСервере
Функция ВыбратьНаСервере()
	
	ТекстЗапроса = "Select top " + Формат(Объект.КоличествоНГ,"ЧН=0; ЧГ=") + " ИД,  Карта,  Имя,  Бот from 
	|(" + ?(Объект.ОсновнойБот,																			   
	"SELECT top " + Формат(Объект.КоличествоНГ,"ЧН=0; ЧГ=") + " [_Fld198], [_Fld98] as ИД, [_Fld287] as Карта, [_Fld71] as Имя, 1 as Бот      
	|FROM [srv-sql04].[Telegramm].[dbo].[_InfoRg94] as BOT_Poll with(nolock) left join [srv-sql04].[Telegramm].[dbo].[_InfoRg68] as Cont with(nolock) on BOT_Poll.[_Fld98] = Cont.[_Fld69]
	|Where [_Fld198]='"+ Объект.ВыборкаПоПоведению + "' 
	|and not [_Fld98] = 0
	|and not [_Fld287] = ''
	|and not [_Fld71] = ''
	|group by [_Fld198], [_Fld98], [_Fld287], [_Fld71]
	|", "")
	 + ?(Объект.ТестовыйБот, ?(Объект.ОсновнойБот, "union all
	|", "") +
	"SELECT top " + Формат(Объект.КоличествоНГ,"ЧН=0; ЧГ=") + " [_Fld198], [_Fld98] as ИД, [_Fld287] as Карта, [_Fld71] as Имя, 3 as Бот      
	|FROM [srv-sql02].[telegramm_test].[dbo].[_InfoRg94] as BOT_Poll with(nolock) left join [srv-sql02].[telegramm_test].[dbo].[_InfoRg68] as Cont with(nolock) on BOT_Poll.[_Fld98] = Cont.[_Fld69]
	|Where [_Fld198]='"+ Объект.ВыборкаПоПоведению + "' 
	|and not [_Fld98] = 0 
	|and not [_Fld287] = '' 
	|and not [_Fld71] = '' 	
	|group by [_Fld198], [_Fld98], [_Fld287], [_Fld71]", "") + ") as Ins";

	ДопУсловие = ""; 
	 
	Если НЕ Объект.ТипРассылки.Пустая() тогда
		
		ДопУсловие = 
		"Карта in (select number as Карта
		|from [srv-sql03].[vv03].[dbo].[Cards_Settings] with (nolock) where " + ПолучитьТипРассылкиСтрокой(Объект.ТипРассылки) + " = 1)";
		
		Если ЗначениеЗаполнено(Объект.Частота) Тогда
			ДопУсловие = ДопУсловие + ?(ЗначениеЗаполнено(ДопУсловие), " and ", "")
			+ "ИД not in (SELECT id FROM [srv-sql03].Telegram.dbo.outbox_telegram with (nolock)
			|WHERE type_distribusion = " + ПолучитьТипРассылкиНомером(Объект.ТипРассылки) + " and add_date > DATEADD(day, -" + Строка(Объект.Частота) +  ", GETDATE())
			|GROUP by id)";
		КонецЕсли;		
		
	КонецЕсли;
		
	ТекстЗапроса = ТекстЗапроса + ?(ЗначениеЗаполнено(ДопУсловие), " WHERE " + ДопУсловие, "");
	
	ВТЗ =  ПолучитьРезультатЗапросаТЗ2(ТекстЗапроса);
	
	Возврат ВТЗ;
		
КонецФункции

&НаСервере
Функция ВернутьНаименованиеВыборки(Выборка)

	Возврат Выборка.Наименование;

КонецФункции // ВернутьНаименованиеВыборки()

&НаСервере
Функция ПолучитьРезультатЗапросаТЗ(ТекстЗапроса)

	СтрСоединения = ВнешниеДанные.ПолучитьСтрокуСоединенияSQL(,"srv-sql02", "Telegramm");
	
	CurrentConnection = База_Подключение(СтрСоединения);
		
	RecordSet = CurrentConnection.Execute(ТекстЗапроса);
		
	Пока RecordSet <> Неопределено И RecordSet.Fields.Count <= 0 Цикл
		RecordSet=RecordSet.NextRecordSet();
	КонецЦикла;			
	
	РТЗ = Телеграм.База_РезультатЗапросВТаблицуЗначений(RecordSet);
	
	Возврат РТЗ;	

КонецФункции // ПолучитьРезультатЗапросаВТЗ()

&НаСервере
Функция ПолучитьРезультатЗапросаТЗ2(ТекстЗапроса)
	
	//+++АК mika 2018.09.20 ИП-00019640 (текст перенесен в модуль менеджера)
	Возврат Документы.РассылкаТелеграм.ПолучитьРезультатЗапросаТЗ2(ТекстЗапроса);
	//---АК mika
	
КонецФункции // ПолучитьРезультатЗапросаВТЗ()

&НаСервере
Функция База_Подключение(СтрокаПодключения) экспорт	
	
	//+++АК mika 2018.09.20 ИП-00019640 (текст перенесен в модуль менеджера)
	Возврат Документы.РассылкаТелеграм.База_Подключение(СтрокаПодключения);
	//---АК mika
	
КонецФункции

&НаСервере
Процедура ОбновитьтАблицуОтветов()
	
	// +++ golv 2018.10.22 ИП-00020201
	ТаблицаОтветов = Документы.РассылкаТелеграм.ПолучитьОтчетПоРассылке(Объект.id_poll, Объект.Номер, Объект.Получатели.Количество(), Объект.ВыборкаЗП);
	Возврат;
	// --- golv 2018.10.22 ИП-00020201
	
КонецПроцедуры

//Раков П.С. формирование параметра бота  ++
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если НЕ НГ тогда
		Если НЕ ЗначениеЗаполнено(Объект.ТипРассылки) Тогда
			Отказ = истина;
			Сообщить("Укажите тип рассылки");
			Возврат;
		КонецЕсли; 
		Если НЕ ЗначениеЗаполнено(ТекущийОбъект.Номер) тогда 
			ТекущийОбъект.УстановитьНовыйНомер(); 
		КонецЕсли;
		ПроверкаЗаполненияРассылкаТелеграмм(Отказ);
		Если ЗначениеЗаполнено(ТекущийОбъект.Опрос) Тогда
			ТекущийОбъект.ПараметрКлавиатуры = Объект.id_poll + "|" + ТекущийОбъект.Номер
			+ "|" + ?(ЗначениеЗаполнено(Объект.АктивноДо),Формат(КонецДня(Объект.АктивноДо), "ДФ=yyyyMMddHHmmss"), "")
			+ "|" +  ?(Объект.НеУдалятьСообщение,"1", "0") + "|" +  ?(ТекущийОбъект.Клавиатура = 1001, "1", "0"); 	
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОпросОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Попытка
		ОткрытьФормуМодально("Обработка.Опросы.Форма.ФормаЭлемента",новый Структура("id_poll", Объект.id_poll),ЭтаФорма);
	Исключение
		Сообщить("Опрос не найден!");
	КонецПопытки;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтветы(Команда)
	ОбновитьтАблицуОтветов();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаОтветовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	id_poll = Объект.id_poll;
	
	ТекстЗапроса = 
	"SELECT Answer.telegram_id , comment, date_add, FullName 
	|FROM [Telegram].[dbo].[BOT_Polling_Answer]  as Answer with(nolock)
	|left join [vv03].[dbo].[Cards] (nolock) as Cards on Answer.telegram_id = Cards.telegram_id
	|WHERE id_poll = " + Формат(id_poll, "ЧГ=") + " and par1 = '" + Объект.Номер + "' and id_answer = " + Элемент.ТекущиеДанные.id_answer;	
	
	//ТД = ОпросОткрытиеНаСервере(ТекстЗапроса);
	
	ОткрытьФормуМодально("Документ.РассылкаТелеграм.Форма.ФормаОтветов",новый Структура("ТекстЗапроса", ТекстЗапроса));
	
	//ТД.Показать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НГ = Ложь;
	Если НЕ ЭтаФорма.ВладелецФормы = Неопределено и ( ЭтаФорма.ВладелецФормы.Имя = "СписокРассылок") тогда//и (не ЭтаФорма.ВладелецФормы.Родитель.ИмяФормы = "РассылкиТелеграмм") тогда
		НГ = Истина;
		Если Не ЗначениеЗаполнено(Объект.ТипРассылки) тогда
			//+++АК rakp@automacon.ru, 30.11.2017 14:57:48 без задачи, в НГ всегда Тема.
			 ЗаполнитьТипНаСервере("distribution_tema");
			 Модифицированность = Ложь;
		КонецЕсли;	
	КонецЕсли;	
	
	УстановитьВидимость(НГ);
	
	//+++АК sils 08.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
	//---АК
КонецПроцедуры


Процедура УстановитьВидимость(НГ)
	
	Элементы.ТоварНГ.Видимость = НГ;
	Элементы.ДатаПокупкиНГ.Видимость = НГ;
	Элементы.ПроизводительНГ.Видимость = НГ;
	//Элементы.Группа2.Видимость = НГ; // golv
	Элементы.Получатели.КоманднаяПанель.ПодчиненныеЭлементы.Заполнить.Видимость = НГ;
	
	Элементы.Группа4.Видимость = НЕ НГ;
	Элементы.НаименованиеРассылки.Видимость = НЕ НГ;
	Элементы.Получатели.КоманднаяПанель.ПодчиненныеЭлементы.ПолучателиЗаполнитьТелеграмм.Видимость = НЕ НГ;
	Элементы.ТипРассылки.Видимость = НЕ НГ;
	Элементы.Частота.Видимость = НЕ НГ;
	Элементы.НеУдалятьСообщение.Видимость = НЕ НГ;
	
	Элементы.ПолучателиП1.Видимость = НЕ НГ;
	Элементы.ПолучателиП2.Видимость = НЕ НГ;
	Элементы.ПолучателиП3.Видимость = НЕ НГ;
	Элементы.ПолучателиП4.Видимость = НЕ НГ;
	Элементы.ПолучателиП5.Видимость = НЕ НГ;
	
	РазрешитьЗапросы = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.ИспользованиеЗапросовВРассылках, Ложь);
	
	Элементы.ЗапросSQL.Видимость = НЕ НГ И РазрешитьЗапросы;
	Элементы.Получатели.КоманднаяПанель.ПодчиненныеЭлементы.ПолучателиЗаполнитьИзЗапроса.Видимость = НЕ НГ И РазрешитьЗапросы;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТелеграмм(Команда)
	
	Если НЕ Объект.ТестовыйБот И НЕ Объект.ОсновнойБот И НЕ Объект.МПОтбор Тогда
		Предупреждение("Не выбран бот или МП!");
		Возврат;
	КонецЕсли;
	
	Если Объект.КоличествоНГ = 0  Тогда
		Предупреждение("Не выбрано количество!");
		Возврат;
	КонецЕсли;	
	
	ВыборкаЗППриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиКартаПриИзменении(Элемент)
	
	ТД = Элементы.Получатели.ТекущиеДанные;	
	СтруктураСтроки = ПолучателиПриИзмененииНаСервере(ТД.Карта);	
	Если ТипЗнч(СтруктураСтроки) = Тип("Структура") тогда
		ЗаполнитьЗначенияСвойств(ТД, СтруктураСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучателиПриИзмененииНаСервере(Карта)

	ЗапросSQL =
	"SELECT  
	|	Buyers.Email as Карта,
	|	Buyers.telegram_id as ИД,
	|	Case when Buyers.IsEmployee = 0 then 1 else 3 end as Бот,
	|	Buyers.FullName as Имя,
	|	isNULL(Buyers.Phone, '') as Телефон,
	|	isNULL(Buyers.OneSignalToken, '') as Токен
	|FROM
	|	[Loyalty].[dbo].[Customer] AS Buyers with(nolock)
	|WHERE                                             
	|	Buyers.Email = '" + Карта + "'   
	|";
			
	Результат = Телеграм.База_ВыполнитьЗапрос(ЗапросSQL);	
	Инфо = Телеграм.База_РезультатЗапросВТаблицуЗначений(Результат);
	Если ТипЗнч(Инфо) = ТИП("ТаблицаЗначений") и Инфо.Количество() > 0 тогда
	    Возврат новый Структура("Карта, ИД, Бот, Имя, Токен, Телефон", Инфо[0].Карта, Инфо[0].ИД, Инфо[0].Бот, Инфо[0].Имя, Инфо[0].Токен, Инфо[0].Телефон);
	КонецЕсли;

КонецФункции

&НаСервере
Функция ПолучитьТипРассылкиСтрокой(ТипРассылки)	
	
	Если ТипРассылки = Перечисления.ТипыРассылокТелеграмм.distribution_action Тогда
		Возврат "distribution_action"; 
	ИначеЕсли ТипРассылки = Перечисления.ТипыРассылокТелеграмм.distribution_service Тогда
		Возврат "distribution_service"; 
	ИначеЕсли ТипРассылки = Перечисления.ТипыРассылокТелеграмм.distribution_tema Тогда
		Возврат "distribution_tema"; 
	Иначе
		Возврат "";
	КонецЕсли; 
	
КонецФункции // ПолучитьТипРассылкиСтрокой()

&НаСервере
Функция ПолучитьТипРассылкиНомером(ТипРассылки)	
	
	Если ТипРассылки = Перечисления.ТипыРассылокТелеграмм.distribution_action Тогда
		Возврат "1"; 
	ИначеЕсли ТипРассылки = Перечисления.ТипыРассылокТелеграмм.distribution_service Тогда
		Возврат "2"; 
	ИначеЕсли ТипРассылки = Перечисления.ТипыРассылокТелеграмм.distribution_tema Тогда
		Возврат "3"; 
	Иначе
		Возврат "";		
	КонецЕсли; 
	
КонецФункции

&НаСервере
Процедура ПроверкаЗаполненияРассылкаТелеграмм(Отказ)

	//Если Не ЗначениеЗаполнено(Объект.Опрос) тогда
	//	Сообщить("Значение ""Опрос"" не заполнено.");
	//	Отказ = Истина;
	//КонецЕсли;
	
	Если  ЗначениеЗаполнено(Объект.Опрос) И Не ЗначениеЗаполнено(Объект.АктивноДо) тогда
		Сообщить("Значение ""Активен до"" не заполнено.");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпросПриИзменении(Элемент)
	//Объект.id_poll = Элемент.ИД;
	Модифицированность = Истина;
КонецПроцедуры
//--- АК rakp@automacon.ru

//+++АК rakp@automacon.ru, 30.11.2017 14:58:46,  без задачи
&НаСервере
Процедура ЗаполнитьТипНаСервере(Тип)

	Объект.ТипРассылки = Перечисления.ТипыРассылокТелеграмм[Тип];	

КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьИзЗапроса(Команда)
	
	ЗаполнитьИзЗапросаНаСервере();
	
КонецПроцедуры

//
&НаСервере
Процедура ЗаполнитьИзЗапросаНаСервере()
	
	Если НЕ ЗначениеЗаполнено(Объект.СыройЗапрос) Тогда
		Сообщить("Текст запроса пустой!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	Попытка
		ТекстЗапроса  = Объект.СыройЗапрос;
		Результат = Телеграм.База_ВыполнитьЗапрос(ТекстЗапроса, ВнешниеДанные.ПолучитьСтрокуПодключенияMSSQL("srv-sql01", "Loyalty"));
		ТЗ = Телеграм.База_РезультатЗапросВТаблицуЗначений(Результат);
		Колонки = ТЗ.Колонки;
	Исключение
		Сообщить("Ошибка при выполнении запроса:" + Символы.ПС + ОписаниеОшибки(), СтатусСообщения.Важное);
		Возврат;
	КонецПопытки;
	
	КолонкаИД = Колонки.Найти("ИД");
	Если КолонкаИД = Неопределено Тогда
		ТЗ.Колонки.Добавить("ИД",	Новый ОписаниеТипов("Число"));	
	ИначеЕсли НЕ КолонкаИД.ТипЗначения.СодержитТип(Тип("Число")) Тогда
		Сообщить("Неверный тип колонки ИД!", СтатусСообщения.Важное);
		Возврат;		
	КонецЕсли; 
	
	КолонкаБот = Колонки.Найти("Бот");
	Если КолонкаБот = Неопределено Тогда
		ТЗ.Колонки.Добавить("Бот",	Новый ОписаниеТипов("Число"));	
	ИначеЕсли НЕ КолонкаБот.ТипЗначения.СодержитТип(Тип("Число")) Тогда
		Сообщить("Неверный тип колонки Бот!", СтатусСообщения.Важное);
		Возврат;		
	КонецЕсли; 	
	
	КолонкаТокен = Колонки.Найти("Токен");
	Если КолонкаТокен = Неопределено Тогда
		ТЗ.Колонки.Добавить("Токен",	Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(40)));	
	ИначеЕсли НЕ КолонкаТокен.ТипЗначения.СодержитТип(Тип("Строка")) Тогда
		Сообщить("Неверный тип колонки Токен!", СтатусСообщения.Важное);
		Возврат;		
	КонецЕсли; 	
	
	КолонкаТелефон = Колонки.Найти("Телефон");
	Если КолонкаТелефон = Неопределено Тогда
		ТЗ.Колонки.Добавить("Телефон",	Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(10)));	
	ИначеЕсли НЕ КолонкаТелефон.ТипЗначения.СодержитТип(Тип("Строка")) Тогда
		Сообщить("Неверный тип колонки Телефон!", СтатусСообщения.Важное);
		Возврат;		
	КонецЕсли; 	
	
	Ограничение = ?(ЗначениеЗаполнено(Объект.КоличествоНГ), Объект.КоличествоНГ, 1000000);
	
	Объект.Получатели.Очистить();
	Счетчик = 0;
	Для ном = 0 по ТЗ.Количество()-1 Цикл	
		ТекущаяСтрока = ТЗ[ном];
		Если НЕ (ЗначениеЗаполнено(ТекущаяСтрока.ИД) ИЛИ ЗначениеЗаполнено(ТекущаяСтрока.Телефон) ИЛИ ЗначениеЗаполнено(ТекущаяСтрока.Токен)) Тогда Продолжить КонецЕсли;
		НоваяСтрока = Объект.Получатели.Добавить();
		Счетчик = Счетчик + 1;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТЗ[ном]);
		Если ЗначениеЗаполнено(НоваяСтрока.ИД) И НЕ ЗначениеЗаполнено(НоваяСтрока.Бот) Тогда
			НоваяСтрока.Бот = 1;
		КонецЕсли;
		Если Счетчик >= Ограничение Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла; 		
	
КонецПроцедуры

&НаСервере
Процедура ЗапросСправочникПриИзмененииНаСервере()
	
	Если ЗначениеЗаполнено(ЗапросСправочник) Тогда
		Объект.СыройЗапрос = ЗапросСправочник.ТекстЗапроса;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапросСправочникПриИзменении(Элемент)
	ЗапросСправочникПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СписокРассылкиУЕКНажатие(Элемент)
	
	Мас=Новый Массив;
	Мас.Добавить(Объект.ГруппаРассылки);
	П = Новый Структура("Группы", Мас);
	Форма = ПолучитьФорму("РегистрСведений.АК_ГруппыРассылки.Форма.ФормаСпискаУправляемая", П);
	Форма.Открыть()
	
КонецПроцедуры

&НаСервере
Функция ПолучателиТелефонПриИзмененииНаСервере(Телефон)
	
	ЗапросSQL =
	"SELECT  
	|	Buyers.telegram_id as ИД,
	|	Case when Buyers.IsEmployee = 0 then 1 else 3 end as Бот,
	|	Buyers.FullName as Имя,
	|	isNULL(Buyers.Email, '') as Карта,
	|	isNULL(Buyers.OneSignalToken, '') as Токен
	|FROM
	|	[Loyalty].[dbo].[Customer] AS Buyers with(nolock)
	|WHERE                                             
	|	Buyers.Phone = '" + Телефон + "'   
	|";
			
	Результат = Телеграм.База_ВыполнитьЗапрос(ЗапросSQL);	
	Инфо = Телеграм.База_РезультатЗапросВТаблицуЗначений(Результат);
	Если ТипЗнч(Инфо) = ТИП("ТаблицаЗначений") и Инфо.Количество() > 0 тогда
	    Возврат новый Структура("Карта, ИД, Бот, Имя, Токен, Карта", Инфо[0].Карта, Инфо[0].ИД, Инфо[0].Бот, Инфо[0].Имя, Инфо[0].Токен, Инфо[0].Карта);
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПолучателиТелефонПриИзменении(Элемент)
	
	ТД = Элементы.Получатели.ТекущиеДанные;	
	Если ЗначениеЗаполнено(ТД.Телефон) Тогда
		СтруктураСтроки = ПолучателиТелефонПриИзмененииНаСервере(ТД.Телефон);	
		Если ТипЗнч(СтруктураСтроки) = Тип("Структура") тогда
			ЗаполнитьЗначенияСвойств(ТД, СтруктураСтроки);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры
