
&НаСервере
Процедура ВыбратьНаСервере(Имя)
	
	//ТекстЗапроса = 
	//
	//"SELECT [_Fld198], [_Fld98] as Карта, [_Fld73] as ИД, [_Fld71] as Имя
	//|FROM [_InfoRg94] as BOT_Poll with(nolock) left join [_InfoRg68] as Cont with(nolock) on BOT_Poll.[_Fld98] = Cont.[_Fld69]
	//|Where [_Fld198]='"+ Имя + "' 
	//|and not [_Fld98] = 0 
	//|and not [_Fld73] = '' 
	//|and not [_Fld71] = '' 	
	//|group by [_Fld198], [_Fld98], [_Fld73], [_Fld71]";

	//
	//
	//ВТЗ =  ПолучитьРезультатЗапросаТЗ(ТекстЗапроса);
	//
	//Если ЗначениеЗаполнено(Выборка) тогда	
	//	СоединитьСВыборкойЗП(ВТЗ);
	//КонецЕсли;
	//
	//ТЗРезультат.Загрузить(ВТЗ);
		
КонецПроцедуры

&НаСервере
Процедура СоединитьСВыборкойЗП(ВТЗ)

	МассивПолучателей = ВТЗ.ВыгрузитьКолонку("ИД");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1000
		|	ОбращенияКПокупателям.ФИО КАК Имя,
		|	ОбращенияКПокупателям.НомерКарты_3p КАК КАРТА,
		|	ОбращенияКПокупателям.Контакт КАК ИД
		|ИЗ
		|	РегистрСведений.ОбращенияКПокупателям КАК ОбращенияКПокупателям
		|ГДЕ
		|	ОбращенияКПокупателям.Выборка.Наименование = &Выборка
		|	И ОбращенияКПокупателям.Контакт В(&МассивПолучателей)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбращенияКПокупателям.ФИО,
		|	ОбращенияКПокупателям.НомерКарты_3p,
		|	ОбращенияКПокупателям.Контакт";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"1000", Формат(КоличествоНГ,"ЧГ="));
	
	Запрос.УстановитьПараметр("Выборка", Выборка);
	Запрос.УстановитьПараметр("МассивПолучателей", МассивПолучателей);
	
	ВТЗ = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры


&НаКлиенте
Процедура Выбрать(Команда)
		
	Имя = Элементы.ТЗ.ТекущиеДанные.Name;
	
	ЭтаФорма.ВладелецФормы.Объект.ВыборкаПоПоведению = Имя;
	ЭтаФорма.ВладелецФормы.Выбран = Истина;
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	//Выборка = Параметры.Выборка;
	//КоличествоНГ = Параметры.КоличествоНГ;
	
	ТекстЗапроса = 
	//"SELECT distinct [_Fld198] as Name
	//|FROM [_InfoRg94] with(nolock)
	//|where not isnull([_Fld198], '') = ''";	
	"SELECT distinct Name FROM
	|(SELECT distinct [_Fld198] as Name
	|FROM [srv-sql04].[Telegramm].[dbo].[_InfoRg94] with(nolock)
	|where not isnull([_Fld198], '') = ''
	|union all
	|SELECT distinct [_Fld198] as Name
	|FROM [srv-sql02].telegramm_test.[dbo].[_InfoRg94] with(nolock)
	|where not isnull([_Fld198], '') = '') as a
	|ORDER BY Name";
	 
	РТЗ = ПолучитьРезультатЗапросаТЗ(ТекстЗапроса);
		
	ЭтаФорма.ТЗ.Загрузить(РТЗ);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРезультатЗапросаТЗ(ТекстЗапроса)

	СтрСоединения = ВнешниеДанные.ПолучитьСтрокуСоединенияSQL();
	
	CurrentConnection = База_Подключение(СтрСоединения);
		
	RecordSet = CurrentConnection.Execute(ТекстЗапроса);
		
	Пока RecordSet <> Неопределено И RecordSet.Fields.Count <= 0 Цикл
		RecordSet=RecordSet.NextRecordSet();
	КонецЦикла;			
	
	РТЗ = Телеграм.База_РезультатЗапросВТаблицуЗначений(RecordSet);
	
	Возврат РТЗ;	

КонецФункции // ПолучитьРезультатЗапросаВТЗ()


Функция База_Подключение(СтрокаПодключения) экспорт	
	
	Попытка
		CurrentConnection = Новый COMОбъект("ADODB.Connection");
		CurrentConnection.ConnectionTimeOut = 90; //минеев добавил таймауты
		CurrentConnection.CommandTimeOut    = 90;
		CurrentConnection.Open(СтрокаПодключения);
		Возврат CurrentConnection;			
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();		
		#Если НаКлиенте тогда
		Сообщить(ОписаниеОшибки);			
		#КонецЕсли		
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

&НаКлиенте
Процедура ТЗВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Выбрать(Неопределено);
КонецПроцедуры
