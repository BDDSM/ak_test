////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет рассылку в телеграм (перенесена из модуля формы Документы.РассылкаТелеграм.ФормаДокумента)
//
// Параметры:
//  Объект  - <Тип.ДокументОбъект.РассылкаТелеграм>, <Тип.ДанныеФормы> - Документ, по которому необходимо запустить рассылку
//
Процедура РазослатьВБотНаСервере(Объект, ИмяКартинки ="") Экспорт //+++АК mika 2018.09.20 ИП-00019640 
	
	Если Объект.МП тогда
		УсловиеМП = " AND _Fld14376 = ''";
	Иначе
		УсловиеМП = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ИмяКартинки) Тогда
		ТипСообщения = "1100";
	Иначе
		ТипСообщения = "0";
	КонецЕсли;
	
	ТекстЗапроса = 		
	"INSERT INTO [srv-sql03].[Telegram].[dbo].[outbox_telegram]
	|([bot_id]
	|,[user_id]
	|,[message]
	|,[keyboard_id]
	|,[keyboard_parameter]
	|,[message_type]
	|,[add_date]
	|,[type_distribusion]
	|,[photo_url])
	|SELECT
	|bot
	|,telegram_id
	|,REPLACE(
	|REPLACE(
	|REPLACE(
	|REPLACE(
	|REPLACE(
	|REPLACE(
	|REPLACE(
	|REPLACE(CAST(template as nvarchar(4000)), '[Имя]', name)
	|,'[Сумма]', CAST(summ as nvarchar))
	|,'[Карта]', card_number)
	|,'[П1]', P1)
	|,'[П2]', P2) 
	|,'[П3]', P3) 
	|,'[П4]', P4) 
	|,'[П5]', P5) 
	|,keyboard_id
	|,REPLACE(
	|REPLACE(
	|REPLACE(
	|REPLACE(CAST(keyboard_template as nvarchar(1000)), '[Сумма]', CAST(summ as nvarchar))
	|,'[П1]', P1)
	|,'[П2]', P2) 
	|,'[П3]', P3) 
	|," + ТипСообщения + "
	|,GETDATE()
	|,isNULL(c._EnumOrder, -1)+1 as dist_type
	|,'" + ИмяКартинки + "'
	|FROM
	|(SELECT _IDRRef,_Fld13431RRef,_Fld11702 as template,_Fld11719 as keyboard_id,_Fld11720 as keyboard_template
	|FROM [IzbenkaFin].[dbo].[_Document11699] (nolock)
	|WHERE _Number = '" + Объект.Номер + "') as a
	|join 
	|(SELECT [_Document11699_IDRRef],[_Fld11706] as telegram_id,[_Fld11707] as bot,[_Fld11708] as name,[_Fld11709] as card_number,[_Fld11785] as summ,
	|_Fld14187 as 'P1', _Fld14188 as 'P2', _Fld14189 as 'P3', _Fld14190 as 'P4', _Fld14191 as 'P5'
	|FROM [IzbenkaFin].[dbo].[_Document11699_VT11704] (nolock) WHERE [_Fld11706] <> 0" + УсловиеМП + ") as b on a._IDRRef = b._Document11699_IDRRef
	|LEFT join
	|[IzbenkaFin].[dbo].[_Enum13428] (nolock) as c on a._Fld13431RRef = c._IDRRef
	|SELECT @@rowcount as 'rowcount'";
	ТЗ = ПолучитьРезультатЗапросаТЗ2(ТекстЗапроса);
	
	Если ТипЗнч(ТЗ) = Тип("ТаблицаЗначений") И Тз.Количество()>0 Тогда
		Сообщить("Создано сообщений в боте: " + Формат(ТЗ[0].rowcount, "ЧН=0; ЧГ="));
	КонецЕсли;
	
КонецПроцедуры

// Возвращает таблицу значений по входящему тексту SQL запроса (перенесена из модуля формы Документы.РассылкаТелеграм.ФормаДокумента)
//
// Параметры:
//  ТекстЗапроса  - <Тип.Строка> - Текст входящего запроса
//
Функция ПолучитьРезультатЗапросаТЗ2(ТекстЗапроса) Экспорт //+++АК mika 2018.09.20 ИП-00019640

	СтрСоединения = ВнешниеДанные.ПолучитьСтрокуСоединенияSQL();
	
	CurrentConnection = База_Подключение(СтрСоединения);
		
	RecordSet = CurrentConnection.Execute(ТекстЗапроса);
		
	Пока RecordSet <> Неопределено И RecordSet.Fields.Count <= 0 Цикл
		RecordSet = RecordSet.NextRecordSet();
	КонецЦикла;			
	
	РТЗ = Телеграм.База_РезультатЗапросВТаблицуЗначений(RecordSet);
	
	Возврат РТЗ;	

КонецФункции // ПолучитьРезультатЗапросаВТЗ()

// Выполняет подключение к базе Teletgram по строке соединения (перенесена из модуля формы Документы.РассылкаТелеграм.ФормаДокумента)
//
// Параметры:
//  СтрокаПодключения  - <Тип.Строка> - Строка подключения
//
Функция База_Подключение(СтрокаПодключения) Экспорт	 //+++АК mika 2018.09.20 ИП-00019640 
	
	Попытка
		CurrentConnection = Новый COMОбъект("ADODB.Connection");
		CurrentConnection.ConnectionTimeOut = 300; //минеев добавил таймауты
		CurrentConnection.CommandTimeOut    = 300;
		CurrentConnection.Open(СтрокаПодключения);
		Возврат CurrentConnection;			
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();		
		#Если НаКлиенте тогда
		Сообщить(ОписаниеОшибки);			
		#КонецЕсли		
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// РАССЫЛКА ТЕЛЕГРАМ ПО СЛУЖБАМ ДОСТАВКИ

// Формирует документы для рассылки по службам доставки 1(H) - Инстамарт, 2(S) - Сейвтайм, 4(H) - Го Лама Го
//
// Параметры:
//  СтруктураПараметров  - <Тип.Структура> - Структура входящих параметров
//
Процедура СформироватьДокументыРассылкаТелеграмСлужбыДоставки(СтруктураПараметров) Экспорт //+++АК mika 2018.09.21 ИП-00019640 
	
	ТаблицаЗаказов = ПолучитьТаблицуЗаказовSQL(СтруктураПараметров);	

	//Разбивка таблицы заказов по службам доставки
	Запрос = Новый Запрос("Выбрать * ПОМЕСТИТЬ ВТ Из &ВременнаяТаблица Как ВременнаяТаблица");
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВременнаяТаблица", ТаблицаЗаказов);
	Запрос.Выполнить();
	
	Запрос.Текст = "
	|ВЫБРАТЬ *, ""Инсмарт"" КАК СлужбаДоставки
	|ИЗ
	| ВТ КАК ВТ
	|ГДЕ
	| ВТ.OperatorDeliveryID = 1 //(H) - Инстамарт
	|;
	|ВЫБРАТЬ *, ""Сейвтайм"" КАК СлужбаДоставки
	|ИЗ
	| ВТ КАК ВТ
	|ГДЕ
	| ВТ.OperatorDeliveryID = 2 //(S) - Сейвтайм
	|;
	|ВЫБРАТЬ *, ""ГоЛамаГо"" КАК СлужбаДоставки
	|ИЗ
	| ВТ КАК ВТ
	|ГДЕ
	| ВТ.OperatorDeliveryID = 4 //(G) - Го Лама Го";
	
	МассивРезультатов = Запрос.ВыполнитьПакет();	
	
	Индекс = 0;
	Пока Индекс < 3 Цикл 
		
		ТаблицаЗаказов = МассивРезультатов[Индекс].Выгрузить();
		
		//Если СтруктураПараметров.Свойство("Отладка") Тогда
		//	СгенерироватьТаблицуНаФорме(ЭтаФорма, "ТаблицаЗаказов1", ТаблицаЗаказов); 	
		//КонецЕсли;

		ДокументОбъет = СоздатьДокументРассылкаТелеграммСлужбыДоставки(ТаблицаЗаказов, СтруктураПараметров);
		
		Если СтруктураПараметров.Свойство("Авторассылка") И СтруктураПараметров.Авторассылка Тогда
			Документы.РассылкаТелеграм.РазослатьВБотНаСервере(ДокументОбъет);
		КонецЕсли;
		
		Индекс = Индекс + 1;
		
	КонецЦикла;
	
КонецПроцедуры // СформироватьДокументыРассылкаТелеграмСлужбыДоставки()

// Формирует и возвращает таблицу заказов из SQL //+++АК mika 2018.09.21 ИП-00019640
//
// Параметры:
//  СтруктураПараметров  - <Тип.Структура> - Структура входящих параметров
//
// Возвращаемое значение:
//   <Тип.ТаблицаЗначений>  - Таблица заказов за "вчерашнюю дату"
//
Функция ПолучитьТаблицуЗаказовSQL(СтруктураПараметров)  

	//После отладки запрос необходимо перенести в хранимую процедуру ••
	
	ТекстЗапроса = "
	
	|IF OBJECT_ID('tempdb..#Orders') IS NOT NULL DROP TABLE #Orders
	|
	|SELECT * INTO #Orders FROM 
	|(SELECT TOP 5000
	|	ch.ShopNo,
	|	CONVERT(varchar(10), cd.CloseDate, 120) Дата,
	|	CONVERT(varchar(5), cd.CloseDate, 108) Время,
	|	cd.OrderNo      AS [НомерЗаказа],
	|	ch.BONUSCARD    AS [Карта],
	|	cd.CashCheckNo  AS [НомерЧека],
	|	cd.BaseSum      AS [Сумма],
	| 	ch.CheckUID,
	|	cd.OperatorDeliveryID
	|FROM SMS_UNION.dbo.Checks_Deliveries AS cd WITH (NOLOCK)
	|	INNER JOIN SMS_UNION..Checks AS ch WITH (NOLOCK)
	|		ON ch.CheckUID = cd.CheckUID
	|WHERE ch.CloseDate BETWEEN CONVERT(date, DATEADD(DAY, -1, GETDATE())) AND CONVERT(date, GETDATE())
	|	AND ch.BONUSCARD <> ''   
	|	AND cd.OperatorDeliveryID IN (1,2,4)  /*1(H) - Инстамарт, 2(S) - Сейвтайм, 4(G) - Го Лама Го*/)Orders
	|
	|SELECT 
	|   Orders.ShopNo,
	|   Orders.Дата,
	|   Orders.Время,
	|   Orders.Карта,
	|   1 as Бот,
	|	ContInfo.FullName as Имя, 
	|	ContInfo.telegram_id as ИД,
	|   ISNULL(ContInfo.OneSignalToken,'') as Токен, 
	|	Orders.НомерЧека,
	|	Orders.Сумма,
	|	Orders.CheckUID,
	|	Orders.OperatorDeliveryID	 
	|FROM #Orders as Orders
	|	LEFT JOIN [srv-sql03].[vv03].[dbo].[Cards] as ContInfo 
	|		ON Orders.Карта = ContInfo.number
	|WHERE 		
	|	ISNULL(ContInfo.telegram_id,0) <> 0";
	
	ТаблицаЗаказов = ПолучитьРезультатЗапросаТЗ2(ТекстЗапроса);
	
	//Если СтруктураПараметров.Свойство("Отладка") Тогда
	//	СгенерироватьТаблицуНаФорме(ЭтаФорма, "ТаблицаЗаказов", ТаблицаЗаказов); 	
	//КонецЕсли;
	
	Возврат ТаблицаЗаказов;
	
КонецФункции // ПолучитьТаблицуЗаказов()

// Создает/Перезаполняет документы Рассылка телеграм (Службы доставки) //+++АК mika 2018.09.21 ИП-00019640
//
// Параметры:
//  ТаблицаЗаказов  - <Тип.ТаблицаЗначений> - Таблица заказов текущей службы доставки
//  СтруктураПараметров  - <Тип.Структура> - Структура входящих параметров
//
// Возвращаемое значение:
//   <Тип.ДокументОбъект.РассылкаТелеграм>  - Заполненный документ
//
Функция СоздатьДокументРассылкаТелеграммСлужбыДоставки(ТаблицаЗаказов, СтруктураПараметров)

	Если ТаблицаЗаказов.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;

	СлужбаДоставки       = ТаблицаЗаказов[0].СлужбаДоставки;
	НаименованиеРассылки = СтрЗаменить("Опрос по доставке СлужбаДоставки","СлужбаДоставки", СлужбаДоставки);
	
	ДокументОбъект = Документы.РассылкаТелеграм.СоздатьДокумент();
	
	ДокументОбъект = ПолучитьДокументОбъектРассылкаТелеграм(НаименованиеРассылки);
	
	Если НЕ ЗначениеЗаполнено(ДокументОбъект.Номер) Тогда
		ДокументОбъект.УстановитьНовыйНомер();
	КонецЕсли;
		
	//Заполнение документа
	ДокументОбъект.Дата =  ТекущаяДата();
	ДокументОбъект.НаименованиеРассылки = НаименованиеРассылки; 
	ДокументОбъект.АктивноДо = ТекущаяДата() + 86400; 
	ДокументОбъект.ОсновнойБот = Истина;
	ДокументОбъект.Бот         = Истина;
	ДокументОбъект.КоличествоНГ = ТаблицаЗаказов.Количество();
	ДокументОбъект.ТипРассылки  = Перечисления.ТипыРассылокТелеграмм.distribution_tema;
	ДокументОбъект.Частота      = 3;
	
	ДокументОбъект.ТекстСообщения =	СтрЗаменить("Добрый день. 
    	 |Оцените доставку из Вкусвилла службой СлужбаДоставки от 1 до 5 баллов, где 1 - совсем не понравилось, а 5 - очень понравилось. 
		 |(если Ваша оценка от 1 до 3 баллов, напишите, пожалуйста, комментарий)", "СлужбаДоставки", СлужбаДоставки);

	ДокументОбъект.Получатели.Загрузить(ТаблицаЗаказов);
	
	//Заполнение ID опроса (по умолчанию, опросы хранятся в [Telegram].[dbo].[BOT_Poll]) 
	Если СлужбаДоставки = "Инсмарт" Тогда 
		ДокументОбъект.id_poll = 235;
		ДокументОбъект.Опрос = "Опрос по доставке Инсмарт";
	ИначеЕсли СлужбаДоставки = "Сейвтайм" Тогда 
		ДокументОбъект.id_poll = 236;
		ДокументОбъект.Опрос = "Опрос по доставке Сейвтайм";
	ИначеЕсли СлужбаДоставки = "ГоЛамаГо" Тогда 
		ДокументОбъект.id_poll = 237;
		ДокументОбъект.Опрос = "Опрос по доставке ГоЛамаГо";
	КонецЕсли;
	
	ДокументОбъект.Клавиатура = 1000;
	
	ДокументОбъект.ПараметрКлавиатуры = ДокументОбъект.id_poll + "|" + ДокументОбъект.Номер
		+ "|" + ?(ЗначениеЗаполнено(ДокументОбъект.АктивноДо),Формат(КонецДня(ДокументОбъект.АктивноДо), "ДФ=yyyyMMddHHmmss"), "")
		+ "|" +  ?(ДокументОбъект.НеУдалятьСообщение,"1", "0") + "|" +  ?(ДокументОбъект.Клавиатура = 1001, "1", "0"); 	

	Если СтруктураПараметров.Свойство("Авторассылка") И СтруктураПараметров.Авторассылка Тогда	
		ДокументОбъект.Разослано = ТекущаяДата();
	КонецЕсли;
		
	ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
	
	Возврат ДокументОбъект;
	
КонецФункции // СоздатьДокументРассылкаТелеграммСлужбыДоставки()

// Возвращает документ объект Рассылка телегамм по службе доставки //+++АК mika 2018.09.21 ИП-00019640
//
// Параметры:
//  СлужбаДоставки  - <Тип.Строка> - Служба доставки
//
// Возвращаемое значение:
//   <Тип.ДокументОбъект.РассылкаТелеграм>   - Документ объект
//
Функция ПолучитьДокументОбъектРассылкаТелеграм(НаименованиеРассылки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	РассылкаТелеграм.Ссылка
	|ИЗ
	|	Документ.РассылкаТелеграм КАК РассылкаТелеграм
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(РассылкаТелеграм.Дата, ДЕНЬ) = &Период
	|	И РассылкаТелеграм.НаименованиеРассылки = &НаименованиеРассылки";
	
	Запрос.УстановитьПараметр("НаименованиеРассылки", НаименованиеРассылки);
	Запрос.УстановитьПараметр("Период", НачалоДня(ТекущаяДата()));
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Документы.РассылкаТелеграм.СоздатьДокумент();
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.Ссылка.ПолучитьОбъект();
	КонецЕсли;
	
КонецФункции // ПолучитьДокументОбъектРассылкаТелеграм()

// +++ golv 2018.10.22 ИП-00020201
Функция ПолучитьОтчетПоРассылке(id_poll, Номер, Количество, ВыборкаЗП) Экспорт

	ТаблицаОтветов = Новый ТабличныйДокумент;
	
	Если НЕ ЗначениеЗаполнено(id_poll) тогда
		Возврат Неопределено;                                                                        
	КонецЕсли;	
	
	// Таблица ответов
	ТекстЗапроса = 
	"SELECT BOT_PollAnswer_List.id_answer ,[name_answer], ISNULL(answer_count, 0) as answer_count
	|, BOT_PollAnswer_List.id_answer * ISNULL(answer_count, 0) as answer_count_total
	|FROM [Telegram].[dbo].[BOT_PollAnswer_List] (nolock) as BOT_PollAnswer_List
	|LEFT JOIN
	|(SELECT COUNT(distinct telegram_id)as answer_count,[id_answer] 
	|FROM [Telegram].[dbo].[BOT_Polling_Answer] (nolock)
	|WHERE id_poll = " + Формат(id_poll, "ЧГ=") + " and par1 = '" + Номер + "' GROUP BY id_answer) as ans on BOT_PollAnswer_List.id_answer = ans.id_answer
	|WHERE id_poll = " + Формат(id_poll, "ЧГ=");
	
	Результат = Телеграм.База_ВыполнитьЗапрос(ТекстЗапроса);	
	ТЗ = Телеграм.База_РезультатЗапросВТаблицуЗначений(Результат);
	
	ТекстЗапроса = 
	"SELECT Answer.telegram_id, comment, date_add, id_answer, FullName, Loy.number, isNULL(Loy.phone_card, 0) as phone from 
	|(SELECT telegram_id , isnull(comment,'') as comment, date_add, id_answer, Number 
	|FROM [Telegram].[dbo].[BOT_Polling_Answer] (nolock) WHERE id_poll = " + Формат(id_poll, "ЧГ=") + " and par1 = '" + Номер  + "')  as Answer
	|left join [vv03].[dbo].[Cards] (nolock) as Loy on Answer.Number = Loy.number";	
	
	Результат = Телеграм.База_ВыполнитьЗапрос(ТекстЗапроса);	
	ТЗ2 = Телеграм.База_РезультатЗапросВТаблицуЗначений(Результат);
	
	Макет = Документы.РассылкаТелеграм.ПолучитьМакет("Макет");
									
	ОбластьДокумент = Макет.ПолучитьОбласть("Документ");							
	ОбластьДокумент.Параметры.Документ = ВыборкаЗП;
	ТаблицаОтветов.Вывести(ОбластьДокумент);
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ТаблицаОтветов.Вывести(Шапка);
	
	Если ТЗ2.Колонки.Количество() = 0 тогда
		ТЗ2.Колонки.Добавить("telegram_id");
		ТЗ2.Колонки.Добавить("comment");
		ТЗ2.Колонки.Добавить("date_add");
		ТЗ2.Колонки.Добавить("FullName");
		ТЗ2.Колонки.Добавить("id_answer");
		ТЗ2.Колонки.Добавить("number");
	КонецЕсли;

	СтрокаНоменклатуры = "";
	Если ЗначениеЗаполнено(ВыборкаЗП) И ТипЗнч(ВыборкаЗП) <> Тип("Строка") Тогда
		ЭлементыОтбора = ВыборкаЗП.ХранилищеОтбора.Получить().Элементы;
		Для каждого ЭлементОтбора Из ЭлементыОтбора Цикл
			Если ТипЗнч(ЭлементОтбора.ПравоеЗначение) = ТИП("СправочникСсылка.Номенклатура") Тогда
				Если СтрокаНоменклатуры = "" Тогда
				    СтрокаНоменклатуры = Строка(ЭлементОтбора.ПравоеЗначение);
				Иначе
				   	СтрокаНоменклатуры = СтрокаНоменклатуры + ", " + Строка(ЭлементОтбора.ПравоеЗначение);
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла;  
	КонецЕсли; 
	
	для Каждого СтрокаТЗ из ТЗ цикл
		Итог = Макет.ПолучитьОбласть("Итог");
		Итог.Параметры.Заполнить(СтрокаТЗ);	
		ТаблицаОтветов.Вывести(Итог);
	КонецЦикла;	
	
	Итог = Макет.ПолучитьОбласть("ИтогИтога");
	Итог.Параметры.name_answer = "Всего отправлено";
	Итог.Параметры.answer_count = Количество;
	
	ТаблицаОтветов.Вывести(Итог);
	
	Итог = Макет.ПолучитьОбласть("ИтогИтога");
	Итог.Параметры.name_answer = "Получено ответов";
	Итог.Параметры.answer_count = ТЗ.Итог("answer_count");
	ТаблицаОтветов.Вывести(Итог);
	
	//Вывод средней оценки
	ВсегоОтветов = Итог.Параметры.answer_count;
	Если ВсегоОтветов > 0 Тогда
		Итог = Макет.ПолучитьОбласть("ИтогИтога");
		Итог.Параметры.name_answer = "Средняя оценка";
		Итог.Параметры.answer_count = Окр(ТЗ.Итог("answer_count_total")/ВсегоОтветов,1);
		ТаблицаОтветов.Вывести(Итог);
	КонецЕсли;
	
	//Вывод диаграммы
	ОбластьДиаграммы = Макет.ПолучитьОбласть("Диаграмма");
	
	Диаграмма = ОбластьДиаграммы.Рисунки.D1.Объект;
	Диаграмма.Очистить();

    //Установить единственную точку. 
    Диаграмма.КоличествоТочек = 1; 

    //Запрет обновления диаграммы 
	Диаграмма.Обновление = Ложь;
    Диаграмма.АвтоТранспонирование = Ложь;
	
	Для Каждого ТкущаяСтрока из ТЗ цикл
		
		Серия = Диаграмма.УстановитьСерию(ТкущаяСтрока.id_answer);
		Серия.Текст       = "Оценка: " + ТкущаяСтрока.id_answer;
		
		Если ТкущаяСтрока.id_answer = 1 Тогда
			Серия.Цвет = Новый Цвет(79,129,189);  //Синий
		ИначеЕсли ТкущаяСтрока.id_answer = 2 Тогда
			Серия.Цвет = Новый Цвет(192,80,77);   //Красный
		ИначеЕсли ТкущаяСтрока.id_answer = 3 Тогда
			Серия.Цвет = Новый Цвет(155,187,89);  //Салатовый
		ИначеЕсли ТкущаяСтрока.id_answer = 4 Тогда
			Серия.Цвет = Новый Цвет(128,100,162); //Фиолетовый
		ИначеЕсли ТкущаяСтрока.id_answer = 5 Тогда
			Серия.Цвет = Новый Цвет(75,172,198);  //Голубой
		КонецЕсли;
			
		Диаграмма.УстановитьЗначение(0, Серия, ТкущаяСтрока.answer_count);
		
	КонецЦикла;
	
	Диаграмма.Точки[0].Текст = " к-во: ";

	//Обновление диаграммы
	Диаграмма.Обновление = Истина;
    Диаграмма.АвтоТранспонирование = Истина; 
	
	ТаблицаОтветов.Вывести(ОбластьДиаграммы);

	Ком = Макет.ПолучитьОбласть("Ком");
	ТаблицаОтветов.Вывести(Ком);
	
	для Каждого СтрокаТЗ из ТЗ цикл
		Строка = Макет.ПолучитьОбласть("Строка");
		Строка.Параметры.Заполнить(СтрокаТЗ);	
		СтрОтбора = новый Структура;
		СтрОтбора.Вставить("id_answer", СтрокаТЗ.id_answer);
		Ответы = ТЗ2.НайтиСтроки(СтрОтбора);
		Для Каждого СтроОтвета из Ответы цикл
			Строка.Параметры.Заполнить(СтроОтвета);	
			Строка.Параметры.Номенклатура = СтрокаНоменклатуры;	
			ТаблицаОтветов.Вывести(Строка);
		КонецЦикла;	
	КонецЦикла;		
	
	ТаблицаОтветов.ЗакончитьАвтогруппировкуСтрок();
	
	Возврат ТаблицаОтветов;	
	
КонецФункции
// --- golv