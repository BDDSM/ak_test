
Функция ПолучитьСчетОрганизации()
	
	ТекСчетОрганизации = Справочники.БанковскиеСчета.ПустаяСсылка();
	
	Если НЕ ЭтотОбъект.Организация.Пустая()
			И НЕ ЭтотОбъект.СчетКонтрагента.Пустая() Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация"	, ЭтотОбъект.Организация);
		Запрос.УстановитьПараметр("НомерСчета"	, ЭтотОбъект.СчетКонтрагента.НомерСчета);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	СпрБанковскиеСчета.Ссылка
		|ИЗ
		|	Справочник.БанковскиеСчета КАК СпрБанковскиеСчета
		|ГДЕ
		|	СпрБанковскиеСчета.Владелец = &Организация
		|	И СпрБанковскиеСчета.НомерСчета = &НомерСчета
		|	И НЕ СпрБанковскиеСчета.ПометкаУдаления";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ТекСчетОрганизации = Выборка.Ссылка;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТекСчетОрганизации;
	
КонецФункции


Процедура ПриКопировании(ОбъектКопирования)
	
	ЭтотОбъект.НазначениеПлатежа = "";
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	// прописать счет организации - номер тот же, что и у счета контрагента, этот реквизит (СчетОрганизации) - для отбора в ж.док-тов Банк
	ТекСчетОрганизации = ПолучитьСчетОрганизации();
	Если НЕ ЭтотОбъект.СчетОрганизации = ТекСчетОрганизации Тогда
		ЭтотОбъект.СчетОрганизации = ТекСчетОрганизации;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ДвиженияПоКартам = ЭтотОбъект.Движения.ДвиженияПоКорпоративнымКартам;
	ДвиженияПоКартам.Записывать = Истина;
	ДвиженияПоКартам.Очистить();
	
	Если ЭтотОбъект.Дата > ТекущаяДата() Тогда
		РежимПроведения = РежимПроведенияДокумента.Неоперативный;
	КонецЕсли;
	
	Для Каждого СтрокаТЧ Из ЭтотОбъект.РасшифровкаПлатежа Цикл
		
		Если НЕ СтрокаТЧ.Оплачено Тогда
			Продолжить;
		КонецЕсли;
		
		НовоеДвижение = ДвиженияПоКартам.ДобавитьПриход();
		НовоеДвижение.Период 		= ЭтотОбъект.Дата;
		НовоеДвижение.Организация 	= ЭтотОбъект.Организация;
		НовоеДвижение.ДатаСписания 	= ЭтотОбъект.Дата;
		ЗаполнитьЗначенияСвойств(НовоеДвижение, СтрокаТЧ);
		
	КонецЦикла;
	
	//Перем Заголовок;
	//
	//// Проверка ручной корректировки
	//Если ОбщегоНазначения.РучнаяКорректировкаОбработкаПроведения(ЭтотОбъект.РучнаяКорректировка, Отказ, Заголовок, ЭтотОбъект,,
	//																Истина) Тогда
	//	Возврат
	//КонецЕсли;
	//
	//Если ЭтотОбъект.Оплачено Тогда
	//	
	//	Если ЭтотОбъект.ДатаОплаты = Дата(1, 1, 1) Тогда
	//		Сообщить("Не указана дата оплаты! Проведение невозможно.");	
	//		Отказ = Истина;
	//		Возврат
	//	КонецЕсли;
	//	
	//	ДвиженияФинансовый = ЭтотОбъект.Движения.Финансовый;
	//	ДвиженияФинансовый.Записывать = Истина;
	//	ДвиженияФинансовый.Очистить();
	//	
	//	Если ЭтотОбъект.ДатаОплаты < Дата(2015, 5, 1) Тогда
	//		
	//		Если ЭтотОбъект.Дата > ТекущаяДата() Тогда
	//			РежимПроведения = РежимПроведенияДокумента.Неоперативный;
	//		КонецЕсли;
	//		
	//		Счет574 = ПланыСчетов.Финансовый.ПереводыНаКартыСотрудников;
	//		Счет712 = ПланыСчетов.Финансовый.РасчетыСПодотчетнымиЛицамиНаКартах;
	//		
	//		Для Каждого СтрокаТЧ Из ЭтотОбъект.РасшифровкаПлатежа Цикл
	//			
	//			// Дт71.2 Кт57.4
	//			Проводка = ДвиженияФинансовый.Добавить();
	//			Проводка.Период		= ЭтотОбъект.ДатаОплаты;
	//			Проводка.СчетКт		= Счет574;
	//			Проводка.СубконтоКт.Организации						= ЭтотОбъект.Организация;
	//			Проводка.СубконтоКт.ИсточникиДенежныхСредств		= ЭтотОбъект.СчетКонтрагента;
	//			Проводка.СубконтоКт.КорпоративныеБанковскиеКарты	= СтрокаТЧ.НомерКорпоративнойКарты;
	//			//Проводка.Организация			= Организация;
	//			
	//			Проводка.СчетДт		= Счет712;
	//			Проводка.СубконтоДт.Организации		= ЭтотОбъект.Организация;
	//			Проводка.СубконтоДт.ФизическиеЛица	= СтрокаТЧ.Физлицо;

	//			Проводка.Сумма		= СтрокаТЧ.Сумма;
	//			Проводка.Содержание	= "Перевод денежных средств физ. лица с корпоративного счета на карту";
	//			
	//		КонецЦикла;
	//		
	//	КонецЕсли;
	//	
	//КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	//ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ, ЭтотОбъект.РучнаяКорректировка, Истина,	Истина);
	
КонецПроцедуры
