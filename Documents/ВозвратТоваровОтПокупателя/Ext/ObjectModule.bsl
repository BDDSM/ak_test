
перем ВидНалогаНДС;
перем СтатьяДоходовРасходовВыручка;
перем СтатьяДРСебестоимостьПроданногоТовара;

//+++АК Susk (Суслин К.В.) 2018.11.06 ИП-00019917.02
Перем мНеПриниматьКВычетуНДС;
Перем мОплатаВозврата;
Перем мЭтоНовый;
//---АК Susk (Суслин К.В.) 

Функция СебестоимостьОптовыхПродаж()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	//+++АК Susk (Суслин К.В.) 2018.11.20 оптимизация запроса
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателяТовары.Номенклатура КАК Номенклатура,
	|	ВозвратТоваровОтПокупателяТовары.СтатьяТовародвижения КАК СтатьяТовародвижения,
	|	ВозвратТоваровОтПокупателяТовары.СчетУчета КАК СчетУчетаНоменклатуры,
	|	ВозвратТоваровОтПокупателя.Дата КАК ДатаСделки,
	|	СУММА(ВозвратТоваровОтПокупателяТовары.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТ_СуммыПоДатамСделок
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ПО ВозвратТоваровОтПокупателяТовары.Ссылка = ВозвратТоваровОтПокупателя.Ссылка
	|ГДЕ
	|	ВозвратТоваровОтПокупателяТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровОтПокупателяТовары.Номенклатура,
	|	ВозвратТоваровОтПокупателяТовары.СтатьяТовародвижения,
	|	ВозвратТоваровОтПокупателяТовары.СчетУчета,
	|	ВозвратТоваровОтПокупателя.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СуммыПоДатамСделок.Номенклатура,
	|	ВТ_СуммыПоДатамСделок.СчетУчетаНоменклатуры,
	|	ВТ_СуммыПоДатамСделок.СтатьяТовародвижения,
	|	ВТ_СуммыПоДатамСделок.Количество,
	|	ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0) * ВТ_СуммыПоДатамСделок.Количество КАК Себестоимость
	|ИЗ
	|	ВТ_СуммыПоДатамСделок КАК ВТ_СуммыПоДатамСделок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьТоваров.СрезПоследних(
	|				&Дата,
	|				Номенклатура В
	|					(ВЫБРАТЬ
	|						ВТ_СуммыПоДатамСделок.Номенклатура
	|					ИЗ
	|						ВТ_СуммыПоДатамСделок)) КАК СебестоимостьТоваровСрезПоследних
	|		ПО ВТ_СуммыПоДатамСделок.Номенклатура = СебестоимостьТоваровСрезПоследних.Номенклатура";
	//---АК Susk (Суслин К.В.) 
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ПолучитьЦФОТорговойТочки(ТорговаяТочка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО
	|ИЗ
	|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(
	|			&Дата,
	|			Организация = &Организация
	|				И СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ЦФОСтруктурныхЕдиницСрезПоследних";
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", ТорговаяТочка);
	Запрос.УстановитьПараметр("Организация", Организация);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		Возврат Выборка.ЦФО;
	Иначе
		Возврат Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

Процедура ПроведениеДокументаПоРБФинансовый(Отказ)
	
	Движения.Финансовый.Записывать = Истина;
	Движения.Финансовый.Очистить();
	
	ТорговаяТочка = ТочкаДоставки;
	ЦФОТорговойТочки = ПолучитьЦФОТорговойТочки(ТорговаяТочка);
	
	// Дт 90.4 Кт 62.1 "Возврат выручки от оптовых продаж"
	Если СуммаДокумента <> 0 Тогда  	
		Движение = Движения.Финансовый.Добавить();
		Движение.Период = Дата;
		Движение.Активность = Истина;
		Движение.Организация = Организация;
		Движение.Регистратор = Ссылка;
		Движение.Содержание = "Возврат выручки от оптовых продаж";
		Движение.СчетДт = ПланыСчетов.Финансовый.ВыручкаТорговыхТочек;
		Движение.СубконтоДт.ТорговыеТочки = ТорговаяТочка;
		Движение.СубконтоДт.СтатьиДоходовРасходов = СтатьяДоходовРасходовВыручка;
		Движение.СубконтоДт.ЦФО = ЦФОТорговойТочки;
		Движение.СчетКт = ПланыСчетов.Финансовый.РасчетыСПокупателямиПрочие;
		Движение.СубконтоКт.Организации = Организация;
		Движение.СубконтоКт.Контрагенты = Контрагент;
		Движение.Сумма = СуммаДокумента;
	КонецЕсли;
	
	// Дт 68.2 Кт 90.4 "Отмена НДС"
	ТЗТоварыПоСтавкам = Товары.Выгрузить().Скопировать();
	ТЗТоварыПоСтавкам.Свернуть("СтавкаНДС", "СуммаНДС");
	Для Каждого Стр из ТЗТоварыПоСтавкам Цикл
		Если Стр.СуммаНДС <> 0 Тогда
			Движение = Движения.Финансовый.Добавить();
			Движение.Период = Дата;
			Движение.Активность = Истина;
			Движение.Организация = Организация;
			Движение.Регистратор = Ссылка;
			Движение.Содержание = "Отмена НДС";
			Движение.СчетДт = ПланыСчетов.Финансовый.НалогиУН;
			Движение.СубконтоДт.Организации = Организация;
			Движение.СубконтоДт.ВидыНалогов = ВидНалогаНДС;
			Движение.СубконтоДт.СтавкиНДС = Стр.СтавкаНДС;
			Движение.СчетКт = ПланыСчетов.Финансовый.ВыручкаТорговыхТочек;
			Движение.СубконтоКт.ТорговыеТочки = ТорговаяТочка;  
			Движение.СубконтоКт.СтатьиДоходовРасходов = СтатьяДоходовРасходовВыручка;
			Движение.СубконтоКт.ЦФО = ЦФОТорговойТочки;
			Движение.Сумма = Стр.СуммаНДС;
		КонецЕсли;
	КонецЦикла;
	
	// Дт 41.1 Кт 44.1 "Отражение себестоимости возврата"
	// Дт 44.1 Кт 41.1 "Отнесение себестоимости возврата на затраты"
	ТЗСебестоимостьОптовыхПродаж = СебестоимостьОптовыхПродаж(); 
	
	Для Каждого Стр из ТЗСебестоимостьОптовыхПродаж Цикл
		
		Движение = Движения.Финансовый.Добавить();
		Движение.Период = Дата;
		Движение.Активность = Истина;
		Движение.Организация = Организация;
		Движение.Регистратор = Ссылка;
		Движение.Содержание = "Отражение себестоимости возврата";
		Движение.СчетДт = Стр.СчетУчетаНоменклатуры;
		Движение.СубконтоДт.МестаХранения = Склад;
		Движение.СубконтоДт.Товары = Стр.Номенклатура;
		Движение.СубконтоДт.СтатьиТовародвижения = Стр.СтатьяТовародвижения;
		Движение.СчетКт = ПланыСчетов.Финансовый.ЗатратыТоварныеДляРаспределения;
		Движение.СубконтоКт.ТорговыеТочки = ТорговаяТочка;
		Движение.СубконтоКт.СтатьиДоходовРасходов = СтатьяДРСебестоимостьПроданногоТовара;
		Движение.СубконтоКт.ЦФО = ЦФОТорговойТочки;
		Движение.Сумма = Стр.Себестоимость;
		Движение.КоличествоДт = Стр.Количество;
		Движение.СторонаПроводкиДляПересчетаПоСебестоимости = "ДТ";
		
		Движение = Движения.Финансовый.Добавить();
		Движение.Период = Дата;
		Движение.Активность = Истина;
		Движение.Организация = Организация;
		Движение.Регистратор = Ссылка;
		Движение.Содержание = "Отнесение себестоимости возврата на затраты";
		Движение.СчетДт = ПланыСчетов.Финансовый.ЗатратыТоварныеДляРаспределения;
		Движение.СубконтоДт.ТорговыеТочки = ТорговаяТочка;
		Движение.СубконтоДт.СтатьиДоходовРасходов = СтатьяСписания;
		Движение.СубконтоДт.ЦФО = ЦФОТорговойТочки;
		Движение.СчетКт = Стр.СчетУчетаНоменклатуры;
		Движение.СубконтоКт.МестаХранения = Склад;
		Движение.СубконтоКт.Товары = Стр.Номенклатура;
		Движение.СубконтоКт.СтатьиТовародвижения = Стр.СтатьяТовародвижения;
		Движение.Сумма = Стр.Себестоимость;
		Движение.КоличествоКт = Стр.Количество;
		Движение.СторонаПроводкиДляПересчетаПоСебестоимости = "КТ"; 
		
	КонецЦикла;
	
	//+++АК Susk (Суслин К.В.) 2018.11.06 ИП-00019917.02
	Если мОплатаВозврата Тогда
		СоздатьДвиженияФинансовый_ОплатаВозврата(Отказ);
	КонецЕсли;
	
	Если мНеПриниматьКВычетуНДС Тогда
		НастройкаОтраженияВУчете = ПолучитьНастройкуОтраженияВУчете_НеПриниматьКВычетуНДС();
		
		Если НЕ НастройкаОтраженияВУчете = Неопределено Тогда
			СоздатьДвиженияФинансовый_НеПриниматьКВычетуНДС(НастройкаОтраженияВУчете, ТЗТоварыПоСтавкам, Отказ);
		КонецЕсли;
	КонецЕсли;
	//---АК Susk (Суслин К.В.) 	 
	
КонецПроцедуры 

Процедура ПроведениеДокументаПоРНТоварыНаСкладах()
	
	Если не Склад.ОтражатьДвиженияПоСкладуБезСкладскихОрдеров Тогда 
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.ТоварыНаСкладах.Очистить();
	
	Для Каждого Стр Из Товары Цикл
		
		Если Стр.Количество <> 0 Тогда 
			
			Движение = Движения.ТоварыНаСкладах.Добавить();
			Движение.Активность = Истина;
			Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
			Движение.Период = Дата;
			Движение.Регистратор = Ссылка;
			Движение.Склад = Склад;
			Движение.АвторИзменений = ПараметрыСеанса.ТекущийПользователь;	 
			Движение.Номенклатура = Стр.Номенклатура;	
			Движение.Количество = Стр.Количество;
			Движение.ЕдиницаИзмерения = Стр.ЕдиницаИзмерения;
			
			Движение = Движения.ТоварыНаСкладах.Добавить();
			Движение.Активность = Истина;
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Регистратор = Ссылка;
			Движение.Склад = Склад;
			Движение.АвторИзменений = ПараметрыСеанса.ТекущийПользователь;	 
			Движение.Номенклатура = Стр.Номенклатура;	
			Движение.Количество = Стр.Количество;
			Движение.ЕдиницаИзмерения = Стр.ЕдиницаИзмерения;
			
		КонецЕсли;
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Функция ПроверкаЗаполненияОбязательныхРеквизитовУспешна()
	
	Если ВидОперации.Пустая() Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В документе не указан вид операции!");
		Возврат Ложь;
	КонецЕсли;
	
	Если ВариантРасчетаНДС.Пустая() Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В документе не указан вариант расчета НДС!");
		Возврат Ложь;
	КонецЕсли;
	
	СообщениеОНезаполненныхРеквизитах = "";
		
	Если Контрагент.Пустая() Тогда 
		СообщениеОНезаполненныхРеквизитах = СообщениеОНезаполненныхРеквизитах + "Контрагент" + Символы.ПС;
	КонецЕсли;
	
	//+++АК Susk (Суслин К.В.) 2018.11.02 ИП-00019917.02	 
	//Если Склад.Пустая() Тогда 
	Если Склад.Пустая() И НЕ мНеПриниматьКВычетуНДС Тогда 
	//---АК Susk (Суслин К.В.) 	
		СообщениеОНезаполненныхРеквизитах = СообщениеОНезаполненныхРеквизитах + "Склад" + Символы.ПС;
	КонецЕсли;
	
	Если ТочкаДоставки.Пустая() Тогда 
		СообщениеОНезаполненныхРеквизитах = СообщениеОНезаполненныхРеквизитах + "Точка доставки" + Символы.ПС;
	КонецЕсли;
	
	Если СтатьяСписания.Пустая() Тогда 
		СообщениеОНезаполненныхРеквизитах = СообщениеОНезаполненныхРеквизитах + "Сатья списания" + Символы.ПС;
	КонецЕсли;
	
	//+++ AK suvv 22.05.2018 ИП-00018769
	Если ПредъявленСчетФактура Тогда
		Если НомерВходящегоСчетФактуры = "" Тогда 
			СообщениеОНезаполненныхРеквизитах = СообщениеОНезаполненныхРеквизитах + "Номер входящего счет-фактуры" + Символы.ПС;
		КонецЕсли;
		Если ДатаВходящегоСчетаФактуры = Дата(0001,01,01) Тогда 
			СообщениеОНезаполненныхРеквизитах = СообщениеОНезаполненныхРеквизитах + "Дата входящего счет-фактуры" + Символы.ПС;
		КонецЕсли;
	КонецЕсли;
	//--- AK suvv
	
	Если СообщениеОНезаполненныхРеквизитах = "" Тогда 
		Возврат Истина;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В документе не заполнены обязательные реквизиты:" + Символы.ПС + СообщениеОНезаполненныхРеквизитах);
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ПроверкаЗаполненияОбязательныхРеквизитовТабЧастиУспешна()
	
	НайденыОшибкиЗаполнения = Ложь; 
	
	СписокОбязательныхДляЗаполненияРеквизитов = Новый СписокЗначений;
	СписокОбязательныхДляЗаполненияРеквизитов.Добавить("Номенклатура");
	СписокОбязательныхДляЗаполненияРеквизитов.Добавить("СчетУчета");
	СписокОбязательныхДляЗаполненияРеквизитов.Добавить("СтатьяТовародвижения");
	СписокОбязательныхДляЗаполненияРеквизитов.Добавить("СтавкаНДС");
	СписокОбязательныхДляЗаполненияРеквизитов.Добавить("Количество");
	
	Для Каждого Стр Из Товары Цикл
		СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(Стр.НомерСтроки) + """ ";
		Для Каждого РеквизитДляПроверки из СписокОбязательныхДляЗаполненияРеквизитов Цикл
			Если НЕ ЗначениеЗаполнено(Стр[РеквизитДляПроверки.Значение]) Тогда 
				СтрокаСообщения = "не заполнено значение реквизита """ + РеквизитДляПроверки + """!";
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаНачалаСообщенияОбОшибке + СтрокаСообщения);
				НайденыОшибкиЗаполнения = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат НЕ НайденыОшибкиЗаполнения;
	
КонецФункции

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если не ПроверкаЗаполненияОбязательныхРеквизитовУспешна() Тогда 
		Отказ = Истина;
	КонецЕсли;
	
	Если не ПроверкаЗаполненияОбязательныхРеквизитовТабЧастиУспешна() Тогда 
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ Отказ Тогда 
		
		ПроведениеДокументаПоРБФинансовый(Отказ);
		
	КонецЕсли;
	
	//Если не Отказ Тогда 
	Если не Отказ И НЕ мНеПриниматьКВычетуНДС Тогда 
		
		ПроведениеДокументаПоРНТоварыНаСкладах();
		
	КонецЕсли;
	
КонецПроцедуры

//shae 2018.08.07 ИП-00019236 
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	СкладыСервер.ПроверитьНаСоответствиеОрганизацииЗакупки(ЭтотОбъект.Организация, ЭтотОбъект.Товары.Выгрузить(), Отказ);	
	
	//+++АК ILIK 2018.08.20 ИП-00019574
	ПроверитьЗаполнениеТочкиДоставки();
	//---АК ILIK

КонецПроцедуры

//+++АК ILIK 2018.08.20 ИП-00019574
Процедура ПроверитьЗаполнениеТочкиДоставки()
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтотОбъект.Организация, "ИНН") <> "7734410589" Тогда // организация Тилси
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭтотОбъект.ТочкаДоставки) И Не ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтотОбъект.ТочкаДоставки, "КППСторонняяРозница")) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("У точки доставки " + Строка(ЭтотОбъект.ТочкаДоставки) + " не заполнен реквизит ""КПП (сторонняя розница)""!");
	КонецЕсли;
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.10.30 ИП-00019917.02
Функция ВернутьЗначениеСвойстваОбъекта(Объект, Свойство)

	ЗнСвойств = ЗаполнениеДокументов.ВернутьТаблицуЗначенийСвойств(Свойство, Объект);
	
	НеПриниматьКВычетуНДС = Ложь;
	
	Если ЗнСвойств.Количество() Тогда
		Возврат ЗнСвойств[0].Значение;		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//+++АК Susk (Суслин К.В.) 2018.10.30 ИП-00019917.02
	ПроставитьСтатьюСписания();
	мЭтоНовый = ЭтоНовый();
	//---АК Susk (Суслин К.В.) 
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	//+++АК Susk (Суслин К.В.) 2018.10.30 ИП-00019917.02
	СчитатьСвойстваОбъекта(); //считаю свойства объекта в глобальную переменную
	ЗаписатьЗначенияСвойствОбъекта();	
	//---АК Susk (Суслин К.В.) 
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.10.30 ИП-00019917.02
Процедура ЗаписатьЗначенияСвойствОбъекта()
	
	ЗаписатьЗначениеСвойстваПВХ(ПланыВидовХарактеристик.СвойстваОбъектов.НеПриниматьКВычетуНДС, мНеПриниматьКВычетуНДС, мНеПриниматьКВычетуНДС <> Ложь);
	ЗаписатьЗначениеСвойстваПВХ(ПланыВидовХарактеристик.СвойстваОбъектов.ОплатаВозврата, мОплатаВозврата, мОплатаВозврата <> Ложь);	
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.10.30 ИП-00019917.02
Процедура ЗаписатьЗначениеСвойстваПВХ(Свойство, Значение, ЗаписыватьНовые)
			
	Запись = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
	Запись.Объект = Ссылка;
	Запись.Свойство = Свойство;	
	Запись.Прочитать();
	
	Записывать = Ложь;
	
	Если НЕ Запись.Выбран() Тогда	
		Если ЗаписыватьНовые Тогда
			Записывать = Истина;
		КонецЕсли;
	Иначе
		Если НЕ Запись.Значение = Значение Тогда
			Записывать = Истина;
		КонецЕсли;
	КонецЕсли;		
	
	Если Записывать Тогда
		Запись.Значение = Значение; 
		Запись.Объект = Ссылка;
		Запись.Свойство = Свойство;	
		Запись.Записать();
	КонецЕсли;

КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.10.30 ИП-00019917.02
Процедура ПроставитьСтатьюСписания()
	
	//тянем статью списания из доп.свойства контрагента, если у него заполнено.
	СтатьяСписанияИзСвойства = СтатьяСписания; //бэкаплю статью с документа сразу, если в свойстве контрагента не будет.
	
	Если НЕ ЭтотОбъект.ДополнительныеСвойства.Свойство("СтатьяСписания", СтатьяСписанияИзСвойства) Тогда
		ЗнСвойства = ВернутьЗначениеСвойстваОбъекта(Контрагент, ПланыВидовХарактеристик.СвойстваОбъектов.СтатьяСписания);	
	Иначе
		ЗнСвойства = СтатьяСписанияИзСвойства;
	КонецЕсли;
				
	Если ЗнСвойства <> Неопределено И ЗначениеЗаполнено(ЗнСвойства) Тогда
		СтатьяСписания = ЗнСвойства;
	КонецЕсли;	
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.10.30 ИП-00019917.02
Функция ПолучитьТаблицуЗначенийСвойствДокумента()
	
	МассивСвойств = Новый Массив;
	МассивСвойств.Добавить(ПланыВидовХарактеристик.СвойстваОбъектов.НеПриниматьКВычетуНДС);
	МассивСвойств.Добавить(ПланыВидовХарактеристик.СвойстваОбъектов.ОплатаВозврата);
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Контрагент);
	
	Если НЕ мЭтоНовый Тогда
		МассивОбъектов.Добавить(Ссылка);
	КонецЕсли;	
	
	Возврат ЗаполнениеДокументов.ВернутьТаблицуЗначенийСвойств(МассивСвойств, МассивОбъектов);
	
КонецФункции

//+++АК Susk (Суслин К.В.) 2018.10.30 ИП-00019917.02
Функция СчитатьЗначениеСвойстваОбъектаИзТаблицыСвойств(ТаблицаЗначенийСвойств, СтроковоеНазваниеСвойства, СсылкаНаСвойство, ПолеПоиска, КудаПрисвоитьЗначение)
	
	ЗначСвойства = Неопределено;
	
	//если из формы не были проставлены свойство "Не принимать к вычету НДС", то берем из свойства контрагента, иначе с объекта	
	Если НЕ ЭтотОбъект.ДополнительныеСвойства.Свойство(СтроковоеНазваниеСвойства, ЗначСвойства) Тогда
		СтруктураПоиска = Новый Структура("Объект,Свойство", ЭтотОбъект[ПолеПоиска], СсылкаНаСвойство);		
		
		НайдСтроки = ТаблицаЗначенийСвойств.НайтиСтроки(СтруктураПоиска);
		
		Если НайдСтроки.Количество() Тогда
			ЗначСвойства = НайдСтроки[0].Значение;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначСвойства <> Неопределено Тогда
		КудаПрисвоитьЗначение = ЗначСвойства;
	КонецЕсли;	
	
КонецФункции

//+++АК Susk (Суслин К.В.) 2018.11.02 ИП-00019917.02 
Процедура СчитатьСвойстваОбъекта()		
	
	ТаблицаЗначенийСвойств = ПолучитьТаблицуЗначенийСвойствДокумента();
	
	//не принимать к вычету ндс
	мНеПриниматьКВычетуНДС = Ложь;
	СчитатьЗначениеСвойстваОбъектаИзТаблицыСвойств(ТаблицаЗначенийСвойств, "НеПриниматьКВычетуНДС", ПланыВидовХарактеристик.СвойстваОбъектов.НеПриниматьКВычетуНДС, ?(мЭтоНовый, "Контрагент", "Ссылка"), мНеПриниматьКВычетуНДС);
		
	//оплата возврата
	мОплатаВозврата = Ложь;
	ОплатаВозврата = СчитатьЗначениеСвойстваОбъектаИзТаблицыСвойств(ТаблицаЗначенийСвойств, "ОплатаВозврата", ПланыВидовХарактеристик.СвойстваОбъектов.ОплатаВозврата, "Ссылка", мОплатаВозврата);	
		
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.11.06 ИП-00019917.02 
Функция ПолучитьНастройкуОтраженияВУчете_НеПриниматьКВычетуНДС()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	НастройкаОтраженияОперацийВУчетеСрезПоследних.Счет КАК СчетДт,
	               |	НастройкаОтраженияОперацийВУчетеСрезПоследних.СтруктурнаяЕдиница КАК СубконтоДт1,
	               |	НастройкаОтраженияОперацийВУчетеСрезПоследних.СтатьяДоходовРасходов КАК СубконтоДт2,
	               |	НастройкаОтраженияОперацийВУчетеСрезПоследних.ЦФО КАК СубконтоДт3,
	               |	НастройкаОтраженияОперацийВУчетеСрезПоследних.ДопРеквизит КАК СубконтоКт1,
	               |	НастройкаОтраженияОперацийВУчетеСрезПоследних.ДопРеквизит1 КАК СубконтоКт2
	               |ИЗ
	               |	РегистрСведений.НастройкаОтраженияОперацийВУчете.СрезПоследних(&Период, ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийВУчете.ВозвратОтПокупателя_НеПриниматьКВычетуНДС)) КАК НастройкаОтраженияОперацийВУчетеСрезПоследних";
	
	Запрос.УстановитьПараметр("Период", Дата);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;	

КонецФункции 

//+++АК Susk (Суслин К.В.) 2018.11.06 ИП-00019917.02
Процедура СоздатьДвиженияФинансовый_НеПриниматьКВычетуНДС(НастройкаОтраженияВУчете, ТаблицаПоСтавкамНДС, Отказ)
	
	Для Каждого Стр Из ТаблицаПоСтавкамНДС Цикл
		
		Движение = Движения.Финансовый.Добавить();
		Движение.Период = Дата;
		Движение.Активность = Истина;
		Движение.Организация = Организация;
		Движение.Регистратор = Ссылка;
		
		Движение.СчетДт = НастройкаОтраженияВУчете.СчетДт;
		Движение.СубконтоДт.ТорговыеТочки = НастройкаОтраженияВУчете.СубконтоДт1;
		Движение.СубконтоДт.СтатьиДоходовРасходов = НастройкаОтраженияВУчете.СубконтоДт2;
		Движение.СубконтоДт.ЦФО = НастройкаОтраженияВУчете.СубконтоДт3;
		Движение.СчетКт = ПланыСчетов.Финансовый.НалогиУН;
		Движение.СубконтоКт.Организации = НастройкаОтраженияВУчете.СубконтоКт1;	
		Движение.СубконтоКт.ВидыНалогов = НастройкаОтраженияВУчете.СубконтоКт2;
		Движение.СубконтоКт.СтавкиНДС = Стр.СтавкаНДС;
		Движение.Сумма = Стр.СуммаНДС;	
		
	КонецЦикла;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.11.06 ИП-00019917.02
Процедура СоздатьДвиженияФинансовый_ОплатаВозврата(Отказ)
	
	// Дт 62.1 Кт 60.3 
	Если СуммаДокумента <> 0 Тогда  	
		Движение = Движения.Финансовый.Добавить();
		Движение.Период = Дата;
		Движение.Активность = Истина;
		Движение.Организация = Организация;
		Движение.Регистратор = Ссылка;
		Движение.Содержание = "Претензия от покупателя";
		
		Движение.СчетДт = ПланыСчетов.Финансовый.РасчетыСПокупателямиПрочие;
		Движение.СубконтоДт.Организации = Организация;
		Движение.СубконтоДт.Контрагенты = Контрагент;
		
		Движение.СчетКт = ПланыСчетов.Финансовый.РасчетыСПоставщиками;
		Движение.СубконтоКт.Организации = Организация;
		Движение.СубконтоКт.Контрагенты = Контрагент;	
		
		Движение.Сумма = СуммаДокумента;
	КонецЕсли;
	
КонецПроцедуры

//+++ AK suvv 2018.11.27 ИП-00019917.06
Процедура РассчитатьСуммуДокумента() Экспорт 
	
	СуммаДок = 0;
	
	Для Каждого СтрокаТабличнойЧастиТовары Из Товары Цикл
		Если ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле Тогда
			СуммаДок = СуммаДок + СтрокаТабличнойЧастиТовары.Сумма;
		Иначе
			СуммаДок = СуммаДок + СтрокаТабличнойЧастиТовары.Сумма + СтрокаТабличнойЧастиТовары.СуммаНДС;
		КонецЕсли;
	КонецЦикла;
	
	СуммаДокумента = СуммаДок;
	
Конецпроцедуры //--- AK suvv

ВидНалогаНДС = Справочники.ВидыНалогов.НайтиПоКоду("000000001");
СтатьяДоходовРасходовВыручка = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("10105");
СтатьяДРСебестоимостьПроданногоТовара = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("20110");
