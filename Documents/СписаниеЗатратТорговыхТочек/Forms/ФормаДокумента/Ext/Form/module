
Процедура КомментарийНачалоВыбора(Элемент, СтандартнаяОбработка)
		
	ФормаРедактированияТекста = ПолучитьОбщуюФорму("ФормаРедактированияТекста");
	ФормаРедактированияТекста.УстановитьРедактируемыйТекст(Комментарий);
	ОтредактировалиТекст = ФормаРедактированияТекста.ОткрытьМодально();
	
	Если ОтредактировалиТекст = Истина Тогда
		Комментарий = ФормаРедактированияТекста.ПолучитьРедактируемыйТекст();
	КонецЕсли;

КонецПроцедуры

Процедура ПриОткрытии()
	Если НЕ ЭтоНовый() Тогда 
		УстановитьВидимостьСубконто();
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
	Иначе
		ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Покупка;
		ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, );
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//СуммаДокумента = ТорговыеТочки.Итог("Сумма");
	//+++АК ZICD 12.01.2017 ИП-00014363
	Если АК_УчетМСФОПривилегированный.УчётВключён(Дата) И Не ЗначениеЗаполнено(Организация) Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнен реквизит ""Организация""!");
		Возврат;
	КонецЕсли;
	//---АК
КонецПроцедуры

Процедура СчетЗатратОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = БухгалтерскийУчет.СчетМожноИспользоватьВПроводках(ВыбранноеЗначение);
КонецПроцедуры

Процедура СчетЗатратПриИзменении(Элемент)
	
	УстановитьВидимостьСубконто();

	РаботаСДиалогами.ПриВыбореСчетаВТабличномПоле(Элемент.Значение,
	СубконтоКт1, ЭлементыФормы.СубконтоКт1,
	СубконтоКт2, ЭлементыФормы.СубконтоКт2,
	СубконтоКт3, ЭлементыФормы.СубконтоКт3);
	

КонецПроцедуры

Процедура УстановитьВидимостьСубконто()

	Для Ном = 1 по 3 Цикл

		Если (Ном <= СчетЗатрат.ВидыСубконто.Количество()) и (ЗначениеЗаполнено(СчетЗатрат)) Тогда
			ЭлементыФормы["НадписьСубконтоКт"+Ном].Заголовок = СчетЗатрат.ВидыСубконто[Ном-1].ВидСубконто.Наименование;
			ЭлементыФормы["НадписьСубконтоКт"+Ном].Видимость = Истина;
			ЭлементыФормы["СубконтоКт"+Ном].Видимость        = Истина;
		Иначе
			ЭлементыФормы["НадписьСубконтоКт"+Ном].Видимость = Ложь;
			ЭлементыФормы["СубконтоКт"+Ном].Видимость        = Ложь;
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // УстановитьВидимостьСубконо()

Процедура КоманднаяПанель1ЗагрузитьИзExcel(Кнопка)
	Если ТорговыеТочки.Количество() > 0 Тогда
		ОтветНаВопрос = Вопрос("Очистить табличную часть перед загрузкой?", РежимДиалогаВопрос.ДаНетОтмена);
		
		Если ОтветНаВопрос = КодВозвратаДиалога.Отмена Тогда
			Возврат;
		ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			ТорговыеТочки.Очистить();;
		КонецЕсли; 
	КонецЕсли; 
	
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораФайла.Заголовок = "Открыть файл с данными";
	ДиалогВыбораФайла.Фильтр    = "Файл Excel (*.xls)|*.xls";
	
	Если НЕ ДиалогВыбораФайла.Выбрать() Тогда
		Возврат;
	КонецЕсли;
    ТЧ = Новый ОписаниеТипов ("Число",,,Новый КвалификаторыЧисла(15,2));
	
	xl = Новый COMОбъект("Excel.Application");
	xl_документ = xl.Workbooks.Open(ДиалогВыбораФайла.ПолноеИмяФайла);
	xl_лист  = xl_документ.Sheets(1);
	
	й=0;
	КоличествоПустых = 10;
	Пока КоличествоПустых>0 Цикл	
		й = й + 1;
		НомерТочки 	= СокрЛП(xl_лист.cells(й,1).value);
		Если НЕ ЗначениеЗаполнено(НомерТочки) Тогда
			КоличествоПустых = КоличествоПустых - 1;
			Продолжить;
		КонецЕсли;
		ТорговаяТочка = Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию(НомерТочки,Ложь);
		Если ТорговаяТочка.Пустая() Тогда
			Сообщить("Не нашли точку: "+НомерТочки);
			Продолжить;
		КонецЕсли;
		Сумма 		= ТЧ.ПривестиЗначение(СокрЛП(xl_лист.cells(й,2).value));
		
		НоваяСтрока = ТорговыеТочки.Добавить();	
		НоваяСтрока.ТорговаяТочка 	=  ТорговаяТочка;
		НоваяСтрока.Сумма		 	=  Сумма;
	КонецЦикла;
	xl.quit();
	Сообщить("Всё");
КонецПроцедуры

Процедура СчетСписанияЗатратНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ФормаВыбора          = ПланыСчетов.Финансовый.ПолучитьФормуВыбора(,Элемент,);
	ФормаВыбора.ПланСчетовСписок.Отбор.Код.Значение      = "90.";
	ФормаВыбора.ПланСчетовСписок.Отбор.Код.Использование = Истина;
	ФормаВыбора.ПланСчетовСписок.Отбор.Код.ВидСравнения  = ВидСравнения.Содержит;
	ФормаВыбора.Открыть();
КонецПроцедуры

Процедура ДействияФормыПерейтиВЖурналПроводок(Кнопка)
	БухгалтерскийУчет.ОткрытьЖурналПроводок(Ссылка);
КонецПроцедуры

Процедура ДействияФормыИсторияИзменений(Кнопка)
	ИсторияИзменений = Отчеты.ИсторияИзмененийОбъектов.Создать();
	ИсторияИзменений.СсылкаНаОбъект = Ссылка;
	Форма = ИсторияИзменений.ПолучитьФорму("ФормаОтчета");
	Форма.СформироватьТаблицуВерсий();
	Форма.Открыть();
КонецПроцедуры

Процедура ДействияФормыСтруктураПодчиненностиДокумента(Кнопка)
	РаботаСДиалогами.ПоказатьСтруктуруПодчиненностиДокумента(Ссылка);
КонецПроцедуры
