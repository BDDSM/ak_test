//+++АК LAGP 2018.03.07 ИП-00017097.03 Создание.

&НаСервере
Функция ПроверитьДопПрава()
	
	Попытка 
		МассивПраваЛаборатория=УправлениеДопПравамиПользователей.ПрочитатьЗначениеПраваПользователя(ПланыВидовХарактеристик.ПраваПользователей.Лаборатория,Ложь,ПараметрыСеанса.ТекущийПользователь);	
		ПравоЛаборатория = МассивПраваЛаборатория[0];
	Исключение
		ПравоЛаборатория = Ложь;
	КонецПопытки;	
	
	Если НЕ ПравоЛаборатория Тогда
		Сообщить("Для работы с документами ""Задание лаборатории"" необходимо доп. право ""Лаборатория""");
		Возврат Истина;	
	КонецЕсли;	
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Отказ = ПроверитьДопПрава();
	
	Если НЕ (РольДоступна("ПроверкаКачестваТоваров") ИЛИ РольДоступна("ПолныеПрава")) Тогда
		Элементы.Статус.Доступность = Ложь;
	КонецЕсли;	
	
	//+++АК CISA 2018.11.08 ИП-00020059
	Элементы.ГруппаСтраницаОтветыТехнологов.Видимость = Объект.ВидОперации <> Перечисления.ВидыОперацийДокументаЗаданиеЛаборатории.Основная;
	УправлениеФормой();
	//---АК CISA
	
	//+++АК sils 07.06.2018 ИП-00018876
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
	//---АК
КонецПроцедуры

&НаКлиенте
Процедура СтатусНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Новый СписокЗначений;
	
	Если РольДоступна("ПолныеПрава") Тогда
		ДанныеВыбора.Добавить(Перечисления.СтатусыЗаданийЛаборатории.НеОбработано);
		ДанныеВыбора.Добавить(Перечисления.СтатусыЗаданийЛаборатории.Выполнено);
	КонецЕсли;
	
	Если (РольДоступна("ПроверкаКачестваТоваров") И НЕ ПроверитьДопПрава()) ИЛИ РольДоступна("ПолныеПрава") Тогда
		ДанныеВыбора.Добавить(Перечисления.СтатусыЗаданийЛаборатории.ВРаботе);
		ДанныеВыбора.Добавить(Перечисления.СтатусыЗаданийЛаборатории.Неактуально);
		
	КонецЕсли;
	
	//+++АК CISA 2018.11.08 ИП-00020059
	ДанныеВыбора.Добавить(Перечисления.СтатусыЗаданийЛаборатории.БезСтатуса);
	ДанныеВыбора.Добавить(Перечисления.СтатусыЗаданийЛаборатории.ОтправленоВЛабораторию);
	ДанныеВыбора.Добавить(Перечисления.СтатусыЗаданийЛаборатории.Отменено);
	//---АК CISA

КонецПроцедуры

//+++АК sils 07.06.2018 ИП-00018876
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Задание лаборатории");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	
	//+++АК CISA 2018.11.08 ИП-00020059
	Если Параметры.Ключ.Пустая() Тогда
		Объект.ВидОперации	= Перечисления.ВидыОперацийДокументаЗаданиеЛаборатории.Основная;
		Объект.Статус		= Перечисления.СтатусыЗаданийЛаборатории.БезСтатуса;
		Объект.Автор		= ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	//---АК CISA	
КонецПроцедуры


//+++АК CISA 2018.11.08 ИП-00020059
&НаСервере
Функция ПолучитьСтрокуОтделеннойСимволом(Знач ИсходнаяСтрока, Знач СимволПоиска)
	
	ПозицияСимвола = СтрДлина(ИсходнаяСтрока);
	Пока ПозицияСимвола >= 1 Цикл
		
		Если Сред(ИсходнаяСтрока, ПозицияСимвола, 1) = СимволПоиска Тогда
						
			Возврат Сред(ИсходнаяСтрока, ПозицияСимвола + 1); 
			
		КонецЕсли;
		
		ПозицияСимвола = ПозицияСимвола - 1;	
	КонецЦикла;

	Возврат "";
  	
КонецФункции

//+++АК CISA 2018.11.08 ИП-00020059
&НаСервере
Процедура УправлениеФормой()
	
	Если НЕ ЗначениеЗаполнено(Объект.ИмяФайлаЭтикеткиЗагруженной) Тогда
		Элементы.СтраницыФайлы.ТекущаяСтраница = Элементы.ФайлДобавление;
	Иначе
		Элементы.СтраницыФайлы.ТекущаяСтраница = Элементы.ФайлОткрытие;
	КонецЕсли;
		
КонецПроцедуры

//+++АК CISA 2018.11.08 ИП-00020059
&НаКлиенте
Процедура ИмяФайлаЭтикеткиИзНоменклатурыСРасширениемНажатие(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если ПустаяСтрока(Объект.ИмяФайлаЭтикеткиИзНоменклатуры) ИЛИ ПустаяСтрока(Объект.ИмяФайлаЭтикеткиЗагруженной) Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.Имя = "ИмяФайлаЭтикеткиИзНоменклатурыСРасширением" Тогда
		ИмяФайла = Объект.ИмяФайлаЭтикеткиИзНоменклатуры;	
	ИначеЕсли Элемент.Имя = "ИмяФайлаЭтикеткиЗагруженнойСРасширением" Тогда
		ИмяФайла = Объект.ИмяФайлаЭтикеткиЗагруженной;
	КонецЕсли;	
	
	Если ИмяФайла <> Неопределено Тогда
		ЗапуститьПриложение(ИмяФайла);
	КонецЕсли;	
	
КонецПроцедуры

//+++АК CISA 2018.11.08 ИП-00020059
&НаСервере
Процедура УдалитьФайлНаСервере()
	
	Попытка
	
		УдалитьФайлы(Объект.ИмяФайлаЭтикеткиЗагруженной);
		
		Объект.ИмяФайлаЭтикеткиЗагруженной = "";
		Объект.ИмяФайлаЭтикеткиЗагруженнойСРасширением = "";
		Модифицированность = Истина;
	
	Исключение
		
	КонецПопытки;	
	
	УправлениеФормой();
	
КонецПроцедуры

//+++АК CISA 2018.11.08 ИП-00020059
&НаСервере
Функция ПолучитьКаталогХраненияФайлов() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	КаталогХраненияФайлов = СокрЛП(Константы.КаталогХраненияФайлов.Получить());
	КаталогХраненияФайлов = КаталогХраненияФайлов + ?(Прав(КаталогХраненияФайлов, 1) = "\", "", "\");
	
	ФайлКаталогХраненияФайлов = Новый Файл(КаталогХраненияФайлов);
	Если НЕ ФайлКаталогХраненияФайлов.Существует() Тогда
		СоздатьКаталог(КаталогХраненияФайлов);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат КаталогХраненияФайлов;
	
КонецФункции

//+++АК CISA 2018.11.08 ИП-00020059
&НаСервере
Процедура ЗаписатьФайлНаСервере(АдресВременногоХранилища, ИмяФайлаСРасширением, Расширение)
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	КаталогХраненияФайлов = ПолучитьКаталогХраненияФайлов();
		
	УникальноеИмяФайла = Новый УникальныйИдентификатор;
	ИмяФайлаНаСервере = КаталогХраненияФайлов + УникальноеИмяФайла + "." + Расширение;
	
	Попытка
		
		ДвоичныеДанные.Записать(ИмяФайлаНаСервере);
		
		Объект.ИмяФайлаЭтикеткиЗагруженной = ИмяФайлаНаСервере;
		Объект.ИмяФайлаЭтикеткиЗагруженнойСРасширением = ИмяФайлаСРасширением;		
		
		Модифицированность = Истина;
		
	Исключение
		Сообщить("Не удалось добавить файл.");
	КонецПопытки;
	
КонецПроцедуры

//+++АК CISA 2018.11.08 ИП-00020059
&НаКлиенте
Процедура ВыбратьФайлЭтикеткиЗагруженной(Команда)
	
	#Если Не ВебКлиент Тогда
		
		Режим = РежимДиалогаВыбораФайла.Открытие;
		ДиалогФайла = Новый ДиалогВыбораФайла(Режим);
		
		ДиалогФайла.МножественныйВыбор = Ложь;
		ДиалогФайла.ПроверятьСуществованиеФайла = Истина;
		
		Если ДиалогФайла.Выбрать() Тогда
			
			ПолноеИмяФайла   = ДиалогФайла.ПолноеИмяФайла;
			ИмяФайлаСРасширением = ПолучитьСтрокуОтделеннойСимволом(ПолноеИмяФайла, "\");
			Расширение = ПроцедурыОбменаДанными.ПолучитьРасширениеИмениФайла(ПолноеИмяФайла);
			
			АдресВременногоХранилища = "";
			Если ПоместитьФайл(АдресВременногоХранилища, ПолноеИмяФайла,, Ложь)Тогда
				ЗаписатьФайлНаСервере(АдресВременногоХранилища, ИмяФайлаСРасширением, Расширение);
			Иначе 
				Сообщить("Не удалось добавить файл.");
			КонецЕсли;
			
		КонецЕсли;
		
	#Иначе	
	
		Если НЕ ПодключитьРасширениеРаботыСФайлами() Тогда
			УстановитьРасширениеРаботыСФайлами();
		КонецЕсли;
		
		Если ПодключитьРасширениеРаботыСФайлами() Тогда
			
			Режим = РежимДиалогаВыбораФайла.Открытие;
			ДиалогФайла = Новый ДиалогВыбораФайла(Режим);
			
			ДиалогФайла.МножественныйВыбор = Ложь;
			ДиалогФайла.ПроверятьСуществованиеФайла = Истина;
			
			Если ДиалогФайла.Выбрать() Тогда
				
				ПолноеИмяФайла = ДиалогФайла.ПолноеИмяФайла;
				ИмяФайлаСРасширением = ПолучитьСтрокуОтделеннойСимволом(ПолноеИмяФайла, "\");
				
				Расширение = ПроцедурыОбменаДанными.ПолучитьРасширениеИмениФайла(ПолноеИмяФайла);
				Описание = Новый ОписаниеПередаваемогоФайла(ПолноеИмяФайла);
				
				//
				ПомещаемыеФайлы = Новый Массив;
				ПомещаемыеФайлы.Добавить(Описание);
				
				//
				ПомещенныеФайлы = Новый Массив;
				
				Если ПоместитьФайлы(ПомещаемыеФайлы, ПомещенныеФайлы,, Ложь, УникальныйИдентификатор) Тогда
					СохранитьФайлПротоколаНаСервере(ПомещенныеФайлы, Расширение, ИмяФайлаСРасширением);
					
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			ВызватьИсключение "Для данного браузера использование расширения для работы с файлами не поддерживается.";
			
		КонецЕсли;
	
	#КонецЕсли
	
	УправлениеФормой();
	
КонецПроцедуры

//+++АК CISA 2018.11.08 ИП-00020059
&НаКлиенте
Процедура УдалитьФайлЭтикеткиЗагруженной(Команда)
	
	Если ПустаяСтрока(Объект.ИмяФайлаЭтикеткиЗагруженной)Тогда
		Возврат;
	КонецЕсли;
	
	Ответ = Вопрос("Вы действительно хотите удалить файл загруженной этикетки?", РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
		
	УдалитьФайлНаСервере();
	
КонецПроцедуры

//+++АК CISA 2018.11.08 ИП-00020059
&НаСервере
Функция НайтиЭтикеткуНоменклатураХарактеристикаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	НоменклатураЭтикетки.ИмяФайла
		|ИЗ
		|	Справочник.Номенклатура.Этикетки КАК НоменклатураЭтикетки
		|ГДЕ
		|	НоменклатураЭтикетки.Ссылка = &Номенклатура
		|	И НоменклатураЭтикетки.Характеристика = &Характеристика";
	
	Запрос.УстановитьПараметр("Номенклатура", Объект.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Объект.Характеристика);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.ИмяФайла;
	КонецЦикла;
	
КонецФункции

//+++АК CISA 2018.11.08 ИП-00020059
&НаСервереБезКонтекста
Функция ПолучитьПоставщика(Характеристика)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗначенияСвойствОбъектов.Значение
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Объект = &Объект
		|	И ЗначенияСвойствОбъектов.Свойство = &Свойство";
	
	Запрос.УстановитьПараметр("Объект", Характеристика);
	Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.Производитель);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Значение;
	КонецЦикла;
	
КонецФункции

//+++АК CISA 2018.11.08 ИП-00020059
&НаКлиенте
Процедура ПолучитьИмяФайлаЭтикеткиИзНоменклатуры()
	Объект.ИмяФайлаЭтикеткиИзНоменклатуры = НайтиЭтикеткуНоменклатураХарактеристикаСервере();
	Объект.ИмяФайлаЭтикеткиИзНоменклатурыСРасширением = ПолучитьСтрокуОтделеннойСимволом(Объект.ИмяФайлаЭтикеткиИзНоменклатуры, "\");
КонецПроцедуры

//+++АК CISA 2018.11.08 ИП-00020059
&НаКлиенте
Процедура ХарактеристикаПриИзменении(Элемент)
	ПолучитьИмяФайлаЭтикеткиИзНоменклатуры();
	Объект.Поставщик = ПолучитьПоставщика(Объект.Характеристика);
КонецПроцедуры

//+++АК CISA 2018.11.08 ИП-00020059
&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	ПолучитьИмяФайлаЭтикеткиИзНоменклатуры();
КонецПроцедуры
