
Процедура УстановитьВидимостьКомментарияДаты()
	
	Элементы.КомментарийДатыПоступления.Видимость = (НЕ Объект.ДатаПоступления = Объект.Ссылка.ДатаПоступления);
	
КонецПроцедуры

Процедура ПолучитьТаблицуТоваров()
	
	Запрос = Новый Запрос;
	Запрос.Текст = Документы.ЗаказПоставщику.ПолучитьТекстЗапросаПоТоварамПредзаказов();				   
	Запрос.УстановитьПараметр("ПредЗаказы"	, Объект.Предзаказы.Выгрузить().ВыгрузитьКолонку("Документ"));
	Запрос.УстановитьПараметр("Заказ"		, Объект.Ссылка);
	ЭтаФорма.Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	Счетчик = 1;
	Для Каждого СтрокаТовар Из ЭтаФорма.Товары Цикл
		СтрокаТовар.НомерСтроки = Счетчик;
		Счетчик = Счетчик + 1;
	КонецЦикла;	
	
КонецПроцедуры	


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//+++АК sils 08.06.2018 ИП-00018876
	ОперацияАпдекс = APDEX_ОценкаПроизводительностиКлиентСервер.ПолучитьОперацию("Открытие документа Заказ поставщику");
	APDEX_ОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(ОперацияАпдекс);
	//---АК
			
	Если Объект.Ссылка.Пустая() Тогда
		Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
			Объект.Склад = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОсновноеСтруктурноеПодразделение");
		КонецЕсли;
		Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;	
	
	ПолучитьТаблицуТоваров();
	
	Элементы.КнопкаИсторияДатПоступления.Видимость = НЕ Объект.Ссылка.Пустая();
	УстановитьВидимостьКомментарияДаты();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.Ссылка.Пустая()
			ИЛИ Отказ Тогда
		Возврат;
	КонецЕсли;	
	
	Если НЕ ТекущийОбъект.ДатаПоступления = ТекущийОбъект.Ссылка.ДатаПоступления Тогда
		
		ТекущийОбъект.ЗаписатьДатыПоставкиПоЗаказам();
		
		МассивТоваров = ЭтаФорма.Товары.Выгрузить().ВыгрузитьКолонку("Номенклатура");
		ТекущийОбъект.НаписатьПисьмоОбИзмененииДатыПоступления(МассивТоваров, ТекущийОбъект.Ссылка.ДатаПоступления, ТекущийОбъект.ДатаПоступления);
		ТекущийОбъект.СформироватьСообщенияОбИзмененииДатыПоступления(ТекущийОбъект.Ссылка.ДатаПоступления, ТекущийОбъект.ДатаПоступления);
		
	КонецЕсли;
	
КонецПроцедуры               

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Элементы.КнопкаИсторияДатПоступления.Видимость = Истина;
	
КонецПроцедуры


&НаКлиенте
Процедура ДатаПоступленияПриИзменении(Элемент)
	
	УстановитьВидимостьКомментарияДаты();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьИсториюДатПоступления(Команда)
	
	Если Объект.Ссылка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ФормаСписка = ПолучитьФорму("РегистрСведений.ДатыПоставкиПоЗаказам.ФормаСписка", , Элементы.ДатаПоступления);
	
	мСписок = ФормаСписка.Список;
	ЭлементОтбора = мСписок.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ЗаказПоставщику");   
    ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементОтбора.Использование  = Истина;
    ЭлементОтбора.ПравоеЗначение = Объект.Ссылка;
    ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ФормаСписка.ТолькоПросмотр = Истина;
	ФормаСписка.ОткрытьМодально();
	
КонецПроцедуры


&НаКлиенте
Процедура ПредзаказыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ПолучитьТаблицуТоваров();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредзаказыПослеУдаления(Элемент)
	
	ПолучитьТаблицуТоваров();
	
КонецПроцедуры

&НаСервере
Процедура НаписатьПисьмоОбИзмененииДатыПоступления()

	УстановитьПривилегированныйРежим(Истина);
		
	СтруктураНовогоПисьма = Новый Структура;
	СтруктураНовогоПисьма.Вставить("Тема", "Изменена дата поступления заказа № " + Строка(Объект.Номер)+" "+Строка(Объект.Поставщик) + " от " + Формат(Объект.Дата, "ДФ=dd.MM.yyyy") + " ");
	СтруктураНовогоПисьма.Вставить("Тело", "Изменена дата поступления заказа № " + Строка(Объект.Номер)+" "+Строка(Объект.Поставщик) + " от " + Формат(Объект.Дата, "ДФ=dd.MM.yyyy") + Символы.ПС + Символы.ПС + 
											"Предыдущая дата: " + Объект.Ссылка.ДатаПоступления + Символы.ПС + 
											"Новая дата: "		+ Объект.ДатаПоступления + Символы.ПС +
											"Автор изменения: " + ПараметрыСеанса.ТекущийПользователь + Символы.ПС +
											"Комментарий: " 	+ Объект.КомментарийДатыПоступления);
		
	СписокКому            = Новый СписокЗначений;
	МассивПользователей   = Новый Массив;
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Объект"				, МассивПользователей);
	Запрос.УстановитьПараметр("Тип"					, Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	СписокВидов = Новый Массив;
	СписокВидов.Добавить(Справочники.ВидыКонтактнойИнформации.СлужебныйАдресЭлектроннойПочтыПользователя);
	СписокВидов.Добавить(Справочники.ВидыКонтактнойИнформации.EmailФизЛица);
	Запрос.УстановитьПараметр("Виды"				, СписокВидов);
	Запрос.УстановитьПараметр("СписокНоменклатуры"	, ЭтаФорма.Товары.Выгрузить().ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("ПредЗаказы"	, Объект.Предзаказы.Выгрузить().ВыгрузитьКолонку("Документ"));
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РолиПользователейСоставРоли.Сотрудник
	|ПОМЕСТИТЬ Пользователи
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ЕСТЬNULL(СоответствиеОбъектРольСрезПоследнихПоХар.РольПользователя, ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
	|				ТОГДА СоответствиеОбъектРольСрезПоследнихПоПроизв.РольПользователя
	|			ИНАЧЕ СоответствиеОбъектРольСрезПоследнихПоХар.РольПользователя
	|		КОНЕЦ КАК РольПользователя
	|	ИЗ
	|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаСреза, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)) КАК СоответствиеОбъектРольСрезПоследнихПоХар
	|			ПО ХарактеристикиНоменклатуры.Ссылка = СоответствиеОбъектРольСрезПоследнихПоХар.Объект
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|			ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов.Объект
	|				И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаСреза, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)) КАК СоответствиеОбъектРольСрезПоследнихПоПроизв
	|			ПО (ЗначенияСвойствОбъектов.Значение = СоответствиеОбъектРольСрезПоследнихПоПроизв.Объект)
	|	ГДЕ
	|		ХарактеристикиНоменклатуры.Ссылка В
	|				(ВЫБРАТЬ
	|					ПредзаказТовары.Характеристика
	|				ИЗ
	|					Документ.Предзаказ.Товары КАК ПредзаказТовары
	|				ГДЕ
	|					ПредзаказТовары.Ссылка В (&ПредЗаказы))) КАК ВЗ_Технологи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|		ПО ВЗ_Технологи.РольПользователя = РолиПользователейСоставРоли.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(РасчетчикиГруппыНоменклатуры.Ссылка.УчетнаяЗаписьЭлектроннойПочты.АдресЭлектроннойПочты КАК СТРОКА(100)) КАК Адрес
	|ПОМЕСТИТЬ Расчетчики
	|ИЗ
	|	Справочник.Расчетчики.ГруппыНоменклатуры КАК РасчетчикиГруппыНоменклатуры
	|ГДЕ
	|	РасчетчикиГруппыНоменклатуры.ГруппаНоменклатуры В(&СписокНоменклатуры)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	Пользователи КАК Пользователи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО Пользователи.Сотрудник = КонтактнаяИнформация.Объект
	|ГДЕ
	|	КонтактнаяИнформация.Тип = &Тип
	|	И КонтактнаяИнформация.Вид В(&Виды)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расчетчики.Адрес
	|ИЗ
	|	Расчетчики КАК Расчетчики";	
		
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выгрузить();
	Выборка.Свернуть("Представление");	
	
	//СписокКому.Добавить("pozm@automacon.ru", "pozm@automacon.ru");
	
	Для каждого Адр из Выборка Цикл
		СписокАдресов=РазложитьСтроку(Адр.Представление);
		Для й=0 По СписокАдресов.Количество()-1 Цикл
			Адрес=СписокАдресов.Получить(й).Значение;
			Если СокрЛП(Адрес)="" Тогда
				продолжить;
			КонецЕсли;	
			СписокКому.Добавить(Адрес,Адрес);
		КонецЦикла;	
	КонецЦикла;
		
	Док=РеквизитФормыВЗначение("Объект");
	Док.ОтправитьПисьмоОбИзмененииДатыПоступления(СтруктураНовогоПисьма,СписокКому);
				
	УстановитьПривилегированныйРежим(Ложь);

		//КонецЕсли; 
	
КонецПроцедуры
	
Функция РазложитьСтроку(Знач Стр, Разделитель = ";") Экспорт
    
    Список = Новый СписокЗначений;
    Длина  = СтрДлина(Разделитель);
    
    Стр = СокрЛП(Стр);
    Поз = Найти(Стр, Разделитель);
    
    Пока 0 < Поз Цикл
        Список.Добавить(СокрП(Лев(Стр, Поз-1)));
        
        Стр = СокрЛ(Сред(Стр, Поз+Длина));
        Поз = Найти(Стр, Разделитель);
    КонецЦикла;

    Список.Добавить(Стр);
    
    Возврат Список;
    
КонецФункции // глРазложить()

Процедура СформироватьСообщенияОбИзмененииДатыПоступления()
	
	СП1 = Новый Структура;
	СП1.Вставить("Тема"				, "Изменена дата поступления заказа № " + Строка(Объект.Номер) + " от " + Формат(Объект.Дата, "ДФ=dd.MM.yyyy") + " ");
	СП1.Вставить("ТекстСообщения"	, "Изменена дата поступления заказа № " + Строка(Объект.Номер) + " от " + Формат(Объект.Дата, "ДФ=dd.MM.yyyy") + Символы.ПС + Символы.ПС + 
										"Предыдущая дата: " + Формат(Объект.Ссылка.ДатаПоступления, "ДЛФ=Д") + Символы.ПС + 
										"Новая дата: " + Формат(Объект.ДатаПоступления, "ДЛФ=Д") + Символы.ПС +
										"Автор изменения: " + ПараметрыСеанса.ТекущийПользователь + Символы.ПС +
										"Комментарий: " + Объект.КомментарийДатыПоступления);
	СП1.Вставить("Автор"			, ПараметрыСеанса.ТекущийПользователь);
				
	МеханизмОбменаСообщениями.СоздатьИОтправитьАвтоматическоеСообщение(СП1, Справочники.СобытияАвторассылкиМОС.ИзменениеДатыЗаказаПоставщику);
	
КонецПроцедуры

//+++АК sils 08.06.2018 ИП-00018876
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	APDEX_ОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(ОперацияАпдекс, ?(Параметры.Ключ.Пустая(), "Новый документ", "" + Объект.Ссылка));
КонецПроцедуры
