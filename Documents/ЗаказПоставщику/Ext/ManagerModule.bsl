
Функция ПолучитьТекстЗапросаПоТоварамПредзаказов() Экспорт
	
	Возврат
		"ВЫБРАТЬ
		|	ВЗ_Товары.Номенклатура,
		|	ВЗ_Товары.ЕдиницаИзмерения,
		|	ВЗ_Товары.Количество,
		|	ЗаказыПоставщикамОбороты.КоличествоРасход КАК Поступило
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПредзаказТовары.Номенклатура КАК Номенклатура,
		|		ПредзаказТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|		СУММА(ПредзаказТовары.Количество) КАК Количество
		|	ИЗ
		|		Документ.Предзаказ.Товары КАК ПредзаказТовары
		|	ГДЕ
		|		ПредзаказТовары.Ссылка В(&ПредЗаказы)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПредзаказТовары.Номенклатура,
		|		ПредзаказТовары.ЕдиницаИзмерения) КАК ВЗ_Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Обороты(, , , ЗаказПоставщику = &Заказ) КАК ЗаказыПоставщикамОбороты
		|		ПО ВЗ_Товары.Номенклатура = ЗаказыПоставщикамОбороты.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВЗ_Товары.Номенклатура.Наименование";

КонецФункции	
	

////////////////////////////////////////////////////////////////////////////////
// Печать

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаказПоставщику") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗаказПоставщику", "Заказ поставщику",
																СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьПечатнуюФорму(МассивОбъектов, ОбъектыПечати)
	
	Перем ТабличныйДокумент, Запрос, Выборка;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТЧПредзаказы.Ссылка КАК ЗаказПоставщику,
	|	ТЧПредзаказы.Ссылка.Поставщик КАК Поставщик,
	|	ТЧПредзаказы.Документ КАК ПредЗаказ
	|ПОМЕСТИТЬ ВТПредзаказы
	|ИЗ
	|	Документ.ЗаказПоставщику.Предзаказы КАК ТЧПредзаказы
	|ГДЕ
	|	ТЧПредзаказы.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Владелец КАК Поставщик,
	|	КОЛИЧЕСТВО(ДоговорыКонтрагентов.Ссылка) КАК КоличествоДоговоров,
	|	МИНИМУМ(ДоговорыКонтрагентов.Код) КАК Код
	|ПОМЕСТИТЬ ВТКоличествоДоговоров
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Владелец В
	|			(ВЫБРАТЬ
	|				ВТПредзаказы.Поставщик
	|			ИЗ
	|				ВТПредзаказы)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоговорыКонтрагентов.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОрганизацииПолучатели.ТорговаяТочка КАК ТорговаяТочка,
	|	ОрганизацииПолучатели.Контрагент КАК Контрагент,
	|	ОрганизацииПолучатели.Организация КАК Организация
	|ПОМЕСТИТЬ ВТОрганизацииПолучатели
	|ИЗ
	|	РегистрСведений.ОрганизацияПолучательТовараОтПоставщикаНаТочку КАК ОрганизацииПолучатели
	|ГДЕ
	|	ОрганизацииПолучатели.Контрагент В
	|			(ВЫБРАТЬ
	|				ВТПредзаказы.Поставщик
	|			ИЗ
	|				ВТПредзаказы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПредзаказы.ЗаказПоставщику КАК ЗаказПоставщику,
	|	ТЧТовары.Ссылка.Поставщик КАК Поставщик,
	|	ТЧТовары.Номенклатура КАК Номенклатура,
	|	ТЧТовары.Номенклатура.Наименование КАК НаименованиеНоменклатуры,
	|	ТЧТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ТЧТовары.Количество КАК Количество,
	|	ЕСТЬNULL(ВТКоличествоДоговоров.Код, 0) КАК КодДоговора,
	|	ЕСТЬNULL(ВТКоличествоДоговоров.КоличествоДоговоров, 0) КАК КоличествоДоговоров,
	|	ЕСТЬNULL(ВТОрганизацииПолучатели.Организация, ТЧТовары.ТорговаяТочка.Организация) КАК ОрганизацияПолучатель
	|ИЗ
	|	Документ.Предзаказ.Товары КАК ТЧТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПредзаказы КАК ВТПредзаказы
	|		ПО (ВТПредзаказы.ПредЗаказ = ТЧТовары.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоличествоДоговоров КАК ВТКоличествоДоговоров
	|		ПО (ВТКоличествоДоговоров.Поставщик = ТЧТовары.Ссылка.Поставщик)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОрганизацииПолучатели КАК ВТОрганизацииПолучатели
	|		ПО (ВТОрганизацииПолучатели.ТорговаяТочка = ТЧТовары.ТорговаяТочка)
	|			И (ВТОрганизацииПолучатели.Контрагент = ТЧТовары.Ссылка.Поставщик)
	|ГДЕ
	|	ТЧТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТПредзаказы.ПредЗаказ
	|			ИЗ
	|				ВТПредзаказы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаказПоставщику.Ссылка КАК Ссылка,
	|	ЗаказПоставщику.Номер КАК Номер,
	|	ЗаказПоставщику.Дата КАК Дата,
	|	ЗаказПоставщику.Склад КАК Склад,
	|	ЗаказПоставщику.ДатаПоступления КАК ДатаПоступления,
	|	ЗаказПоставщику.Поставщик КАК Поставщик,
	|	ЗаказПоставщику.Поставщик.Наименование КАК НаименованиеПоставщика
	|ИЗ
	|	Документ.ЗаказПоставщику КАК ЗаказПоставщику
	|ГДЕ
	|	ЗаказПоставщику.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	РезультатЗаказыПоставщику = РезультатыЗапроса[4];
	Выборка = РезультатЗаказыПоставщику.Выбрать();
	
	СпрДоговоры = Справочники.ДоговорыКонтрагентов;
	ТаблицаТовары = РезультатыЗапроса[3].Выгрузить();
	Для Каждого СтрокаТаблицы Из ТаблицаТовары Цикл
		Если СтрокаТаблицы.КоличествоДоговоров = 1 Тогда
			мДоговор = СпрДоговоры.НайтиПоКоду(СтрокаТаблицы.КодДоговора);
			СтрокаТаблицы.ОрганизацияПолучатель = мДоговор.Организация;
		КонецЕсли;
	КонецЦикла;
	ТаблицаТовары.Свернуть("ЗаказПоставщику, ОрганизацияПолучатель, Номенклатура, НаименованиеНоменклатуры, ЕдиницаИзмерения", "Количество");
	ТаблицаТовары.Сортировать("ОрганизацияПолучатель, НаименованиеНоменклатуры");

	ПервыйДокумент = Истина;
	
	Макет = Документы.ЗаказПоставщику.ПолучитьМакет("ПФ_ЗаказПоставщику");
	
	СтруктураОтбора = Новый Структура("ЗаказПоставщику");
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказПоставщику_ЗаказПоставщику";
		
			
		// Заполнить реквизиты шапки
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Поставщик 				= Выборка.Поставщик;
		ОбластьМакета.Параметры.НаименованиеПоставщика 	= Выборка.НаименованиеПоставщика;
		ОбластьМакета.Параметры.ДатаЗаказа 				= Формат(Выборка.Дата, "ДЛФ=Д");
		ОбластьМакета.Параметры.Номер	 				= Формат(Выборка.Номер, "ДЛФ=Д");
		
		ОбщегоНазначенияКлиентСервер.ДобавитьШтрихкодВОбластьДокумента(ОбластьМакета,Выборка.Ссылка);
		
		ТабличныйДокумент.Вывести(ОбластьМакета);
		
		// Заполнить реквизиты шапки (товары)
		ОбластьМакетаШапкаТовары 	= Макет.ПолучитьОбласть("ШапкаТовары");
		ОбластьМакетаСтрока 		= Макет.ПолучитьОбласть("Строка");
		
		
		печСклад 			= СокрЛП(Выборка.Склад.Наименование);
		печДатаПоступления 	= Формат(Выборка.ДатаПоступления		, "ДЛФ=Д");
		печДатаСклад		= Формат(Выборка.ДатаПоступления - 86400, "ДЛФ=Д");
		
		мОрганизацияПолучатель = Неопределено;
		СтруктураОтбора.ЗаказПоставщику = Выборка.Ссылка;
		СтрокиТоваров = ТаблицаТовары.НайтиСтроки(СтруктураОтбора);
		
		Для Каждого СтрокаТовары Из СтрокиТоваров Цикл
			
			Если НЕ СтрокаТовары.ОрганизацияПолучатель = мОрганизацияПолучатель Тогда
				ОбластьМакетаШапкаТовары.Параметры.ОрганизацияПолучатель 	= СтрокаТовары.ОрганизацияПолучатель;
				ОбластьМакетаШапкаТовары.Параметры.Склад 					= печСклад;
				ОбластьМакетаШапкаТовары.Параметры.ДатаПоступления 			= печДатаПоступления;
				ОбластьМакетаШапкаТовары.Параметры.ДатаСклад 				= печДатаСклад;
				ТабличныйДокумент.Вывести(ОбластьМакетаШапкаТовары);
			КонецЕсли;
			
			ОбластьМакетаСтрока.Параметры.Номенклатура 		= СтрокаТовары.Номенклатура;
			ОбластьМакетаСтрока.Параметры.Товар 			= СокрЛП(СтрокаТовары.НаименованиеНоменклатуры);
			ОбластьМакетаСтрока.Параметры.ЕдиницаИзмерения 	= СтрокаТовары.ЕдиницаИзмерения;
			ОбластьМакетаСтрока.Параметры.Количество 		= Формат(СтрокаТовары.Количество, "ЧГ=");
			ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
			
			мОрганизацияПолучатель = СтрокаТовары.ОрганизацияПолучатель;

		КонецЦикла;
        				
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Выборка.Ссылка);
		
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

//+++АК SHEP 20170307 ИП-00015092: Если в договоре контрагента галка "Есть оригинал договора" не проставлена, добавить запрет на размещение заказов этому поставщику
Функция НетДоговоровПоставщикаСПолученнымОригиналом(Поставщик, НаДату) Экспорт
Перем Результат;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка,
		|	ДоговорыКонтрагентов.ПолученОригинал
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Владелец = &Поставщик
		|	И НЕ ДоговорыКонтрагентов.ПометкаУдаления
		|	И ДоговорыКонтрагентов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПоставщиком)
		|	И ДоговорыКонтрагентов.ТипДоговора = ЗНАЧЕНИЕ(Перечисление.ТипыДоговоровСПоставщиком.ПоставкаТоваров)
		|	И ДоговорыКонтрагентов.ПолученОригинал
		|	И (ДоговорыКонтрагентов.СрокДействия = ДАТАВРЕМЯ(1,1,1) ИЛИ ДоговорыКонтрагентов.СрокДействия >= &НаДату)");
	Запрос.УстановитьПараметр("НаДату", НаДату);
	Запрос.УстановитьПараметр("Поставщик", Поставщик);
	
	Результат = Запрос.Выполнить().Пустой();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;
	
КонецФункции

//+++АК SHEP 2017.11.24 ИП-00016064
Функция ПроверитьРазрешённоеКоличествоЗаказа(МВТ) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТаблицаТоваров.Номенклатура,
		|	ТаблицаТоваров.Характеристика,
		|	СУММА(ТаблицаТоваров.Количество) КАК Количество,
		|	ХарактеристикиНоменклатуры.РазрешённоеКоличествоЗаказа
		|ПОМЕСТИТЬ ТаблицаТоваров
		|ИЗ
		|	ВТТовары КАК ТаблицаТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|		ПО ТаблицаТоваров.Характеристика = ХарактеристикиНоменклатуры.Ссылка
		|ГДЕ
		|	ТаблицаТоваров.Количество > 0
		|	И ХарактеристикиНоменклатуры.РазрешённоеКоличествоЗаказа > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.Номенклатура,
		|	ТаблицаТоваров.Характеристика,
		|	ХарактеристикиНоменклатуры.РазрешённоеКоличествоЗаказа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ТаблицаТоваров.Характеристика КАК Характеристика,
		|	СУММА(ИсторияИзмененияПредзаказа_Количество.Количество) КАК Количество
		|ПОМЕСТИТЬ ЗаказанныеКоличества
		|ИЗ
		|	ТаблицаТоваров КАК ТаблицаТоваров
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АК_ИсторияИзмененияПредзаказа_Количество КАК ИсторияИзмененияПредзаказа_Количество
		|		ПО ТаблицаТоваров.Номенклатура = ИсторияИзмененияПредзаказа_Количество.Номенклатура
		|			И ТаблицаТоваров.Характеристика = ИсторияИзмененияПредзаказа_Количество.Характеристика
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаТоваров.Номенклатура,
		|	ТаблицаТоваров.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаТоваров.Номенклатура КАК Номенклатура,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваров.Номенклатура) КАК НоменклатураПредставление,
		|	ТаблицаТоваров.Характеристика КАК Характеристика,
		|	ПРЕДСТАВЛЕНИЕ(ТаблицаТоваров.Характеристика) КАК ХарактеристикаПредставление,
		|	ТаблицаТоваров.РазрешённоеКоличествоЗаказа КАК РазрешённоеКоличествоЗаказа,
		|	ТаблицаТоваров.Количество + ЕСТЬNULL(ЗаказанныеКоличества.Количество, 0) КАК ЗаказанноеКоличество
		|ИЗ
		|	ТаблицаТоваров КАК ТаблицаТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЗаказанныеКоличества КАК ЗаказанныеКоличества
		|		ПО ТаблицаТоваров.Номенклатура = ЗаказанныеКоличества.Номенклатура
		|			И ТаблицаТоваров.Характеристика = ЗаказанныеКоличества.Характеристика
		|ГДЕ
		|	ТаблицаТоваров.Количество + ЕСТЬNULL(ЗаказанныеКоличества.Количество, 0) > ТаблицаТоваров.РазрешённоеКоличествоЗаказа");
	Запрос.МенеджерВременныхТаблиц = МВТ;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда Возврат Истина; КонецЕсли;
	
	СтруктураПараметровОшибки = Новый Структура("НоменклатураПредставление,ХарактеристикаПредставление,ЗаказанноеКоличество,РазрешённоеКоличествоЗаказа");
	
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПараметровОшибки, ВыборкаЗапроса);
		СтрокаОшибки = НСтр("ru = 'Для товара [НоменклатураПредставление] ([ХарактеристикаПредставление])" +
		" общее заказанное количество ([ЗаказанноеКоличество]) превышает разрешённое количество: [РазрешённоеКоличествоЗаказа]'");
		Сообщить(СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(СтрокаОшибки, СтруктураПараметровОшибки));
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции
