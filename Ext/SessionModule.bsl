
Процедура УстановкаПараметровСеанса(ТребуемыеПараметры)
	
	Если ТребуемыеПараметры = Неопределено Тогда
		// раздел "безусловной" инициализации параметров сеанса
		
		ПолныеПрава.УстановитьПараметрыМеханизмаОграниченияПравДоступа();
		
	Иначе		
		
		УстановленныеПараметры = Новый Структура;
		
		Для Каждого ИмяПараметра ИЗ ТребуемыеПараметры Цикл
			УстановитьЗначениеПараметраСеанса(ИмяПараметра, УстановленныеПараметры);
			
			ДлительныеОперации.УстановкаПараметровСеанса(ИмяПараметра, УстановленныеПараметры);
		КонецЦикла;
		
	КонецЕсли;
	ПараметрыСеанса.НеСохранятьВерсииОбъектов = Ложь;
	ПараметрыСеанса.ЗамерПроизводительности_ИмяСобытия = "";
	ПараметрыСеанса.ЗамерПроизводительности_ДопКлюч = 0;
	
	//+++АК
	//korn 2015.05.16
	Если ЗначениеЗаполнено(ПараметрыСеанса.ТекущийПользователь) Тогда
		ПараметрыСеанса.АК_ВнутреннийНомер = ПараметрыСеанса.ТекущийПользователь.АК_ВнутренийНомер;
		ПараметрыСеанса.АК_TrunkName = "SIP";
	КонецЕсли;
	//---АК
	
	// АПДЕКС
	
	Если ТребуемыеПараметры = Неопределено ИЛИ ТребуемыеПараметры.Найти("APDEX_НастройкиЗамеров")<>Неопределено Тогда
		ХранилищеЗначения = Новый ХранилищеЗначения(Новый Соответствие);
		ПараметрыСеанса.APDEX_ТекущийЗамерВремени = ХранилищеЗначения;
		
		
		APDEX_Настройки = APDEX_ОценкаПроизводительностиСерверВызовСервера.ПолучитьНастройки();
		APDEX_НастройкиЗамеров = Новый Структура;
		APDEX_НастройкиЗамеров.Вставить("APDEX_ОтключитьЗамер",APDEX_Настройки.APDEX_ОтключитьЗамер);
		APDEX_НастройкиЗамеров.Вставить("APDEX_МинимальноеВремяЗамера",APDEX_Настройки.APDEX_МинимальноеВремяЗамера);
		APDEX_НастройкиЗамеров.Вставить("APDEX_ИдентификаторБазыAPDEX",APDEX_Настройки.APDEX_ИдентификаторБазыAPDEX);
		APDEX_НастройкиЗамеров.Вставить("APDEX_СпособЗаписиЗамеров",APDEX_Настройки.APDEX_СпособЗаписиЗамеров);
		
		ПараметрыСеанса.APDEX_НастройкиЗамеров = Новый ФиксированнаяСтруктура(APDEX_НастройкиЗамеров);
	КонецЕсли;
	
	ПараметрыСеанса.ЭтоПериферийнаяБаза = Константы.ЭтоПериферийнаяБаза.Получить();
	ПараметрыСеанса.ПрефиксПериферийнойБазы = Константы.ПрефиксПериферийнойБазы.Получить();
	ПараметрыСеанса.ТекущийКонтрагент = Справочники.Контрагенты.ПустаяСсылка();
		
КонецПроцедуры

Процедура УстановитьЗначениеПараметраСеанса(ИмяПараметра, УстановленныеПараметры)
	
	Если УстановленныеПараметры.Свойство(ИмяПараметра) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыРИБ = Новый Структура;
	ПараметрыРИБ.Вставить("НаличиеОбменаУПП");
	ПараметрыРИБ.Вставить("ВсеУзлыОбменаУПП");
	ПараметрыРИБ.Вставить("СоответствиеОрганизацийИУзловОбменаУПП");
	ПараметрыРИБ.Вставить("СоответствиеУзловИДатДляОбменаУПП");
	
	ПараметрыРИБ.Вставить("ИспользованиеРИБ");
	ПараметрыРИБ.Вставить("ПрефиксУзлаРаспределеннойИнформационнойБазы");
	ПараметрыРИБ.Вставить("ВсеУзлыДляОбменаССайтомТоварами");
	ПараметрыРИБ.Вставить("ВсеУзлыДляОбменаССайтомЗаказами");
	ПараметрыРИБ.Вставить("НаличиеОбменаССайтом");
	
	ПараметрыРИБ.Вставить("ВсеУзлыОбменаУТУПП");
	ПараметрыРИБ.Вставить("НаличиеОбменаУТУПП");
	ПараметрыРИБ.Вставить("СоответствиеОрганизацийИУзловОбменаУТУПП");
	ПараметрыРИБ.Вставить("СоответствиеУзловИДатДляОбменаУТУПП");
	ПараметрыРИБ.Вставить("СохранятьИнформациюОМестеСозданияОбъектов");
	
	Если ИмяПараметра = "ОбщиеЗначения" Тогда
		ПараметрыСеанса.ОбщиеЗначения = Новый ХранилищеЗначения(Новый Структура);
		УстановленныеПараметры.Вставить("ОбщиеЗначения");
		
	ИначеЕсли ПараметрыРИБ.Свойство(ИмяПараметра) Тогда	
		ПолныеПрава.ОпределитьФактИспользованияРИБ();
		ДополнитьСписокУстановленныхПараметров(УстановленныеПараметры, ПараметрыРИБ);
		
	ИначеЕсли ИмяПараметра = "ТекущийПользователь" Тогда
		ПользователиПолныеПрава.ОпределитьТекущегоПользователя("ТекущийПользователь", УстановленныеПараметры);
		
	ИначеЕсли ИмяПараметра = "ГраницыЗапретаИзмененияДанных" Тогда		
		ПолныеПрава.УстановитьПараметрГраницыЗапретаИзмененияДанных();
		УстановленныеПараметры.Вставить("ГраницыЗапретаИзмененияДанных");
		
	ИначеЕсли ИмяПараметра = "НеВыполнятьДинамическоеЧтениеКоличествПолученныхТТ" Тогда	
		 ПользователиПолныеПрава.УстановитьПараметрДинамическогоСчитыванияПолученногоКоличества(Ложь);
	ИначеЕсли ИмяПараметра = "МассивСтатьиПросмотрЗаявок" Тогда	
		 ПараметрыСеанса.МассивСтатьиПросмотрЗаявок = Новый ФиксированныйМассив(ОбщиеПроцедуры.ПолучитьСписокСтатейДДСДляАкцептированияПользователя(ПараметрыСеанса.ТекущийПользователь, Истина));
	ИначеЕсли ИмяПараметра = "МассивЦФОПросмотрЗаявок" Тогда	
		 ПараметрыСеанса.МассивЦФОПросмотрЗаявок = Новый ФиксированныйМассив(ОбщиеПроцедуры.ПолучитьСписокЦФОПользователя(ТекущаяДата(), ПараметрыСеанса.ТекущийПользователь, Истина));
	ИначеЕсли ИмяПараметра = "МассивПользователейПросмотрЗаявок" Тогда	
		МассивПользователиЗаявок = Новый Массив();
		МассивПользователиЗаявок.Добавить(ПараметрыСеанса.ТекущийПользователь);
		Если ПараметрыСеанса.ТекущийПользователь = Справочники.Пользователи.НайтиПоНаименованию("Курвяков Евгений") Тогда
			МассивПользователиЗаявок.Добавить(Справочники.Пользователи.НайтиПоНаименованию("Крылова Наталья"));
		КонецЕсли;
		ПараметрыСеанса.МассивПользователейПросмотрЗаявок = Новый ФиксированныйМассив(МассивПользователиЗаявок);
	ИначеЕсли ИмяПараметра = "ПравоВидетьЗаявкиНаРасходованиеПоВсемЦФО" 
		ИЛИ ИмяПараметра = "ПравоВидетьЗаявкиНаРасходованиеТолькоНаНаличные"
		ИЛИ ИмяПараметра = "ПравоВидетьЗаявкиНаРасходованиеТолькоНаБезналичные" Тогда	
		ПараметрыСеанса.ПравоВидетьЗаявкиНаРасходованиеПоВсемЦФО = РольДоступна("ПравоВидетьЗаявкиНаРасходованиеПоВсемЦФО");
		ПараметрыСеанса.ПравоВидетьЗаявкиНаРасходованиеТолькоНаНаличные = РольДоступна("ПравоВидетьЗаявкиНаРасходованиеТолькоНаНаличные");
		ПараметрыСеанса.ПравоВидетьЗаявкиНаРасходованиеТолькоНаБезналичные = РольДоступна("ПравоВидетьЗаявкиНаРасходованиеТолькоНаБезналичные");
	ИначеЕсли ИмяПараметра = "ДоступныеРакурсы" Тогда	 
		МассивРолей = МеханизмОбменаСообщениями.ПолучитьРолиПользователяИлиФизЛица(ПараметрыСеанса.ТекущийПользователь.ФизЛицо);
	
		МассивДР = Новый Массив;
		Запрос1 = Новый Запрос;
		Запрос1.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РолиПользователейДоступныеРакурсы.Ракурс
		|ИЗ
		|	Справочник.РолиПользователей.ДоступныеРакурсы КАК РолиПользователейДоступныеРакурсы
		|ГДЕ
		|	РолиПользователейДоступныеРакурсы.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И РолиПользователейДоступныеРакурсы.Ссылка В(&Роли)";
		
		Запрос1.УстановитьПараметр("Роли", МассивРолей);
		
		Рез1 = Запрос1.Выполнить();
		Выб1 = Рез1.Выбрать();
		
		Пока Выб1.Следующий() Цикл
			МассивДР.Добавить(Выб1.Ракурс);
		КонецЦикла;
		ПараметрыСеанса.ДоступныеРакурсы = Новый ФиксированныйМассив(МассивДР);
	ИначеЕсли ИмяПараметра = "ГруппыКонтрагентовПоставщикиТоваров" Тогда	 
		МС1 = Новый Массив;
		МС1.Добавить(Справочники.Контрагенты.НайтиПоКоду("000000452"));
		
		МСРез = Новый Массив;
		
		Запрос1 = Новый Запрос;
		Запрос1.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.ЭтоГруппа = ИСТИНА
		|	И Контрагенты.Ссылка В ИЕРАРХИИ(&ГруппаПоставщиковТоваров)";
		
		Запрос1.УстановитьПараметр("ГруппаПоставщиковТоваров", МС1);
		
		Рез1 = Запрос1.Выполнить();
		Выб1 = Рез1.Выбрать();
		
		Пока Выб1.Следующий() Цикл
			МСРез.Добавить(Выб1.Ссылка);
		КонецЦикла; 
		ПараметрыСеанса.ГруппыКонтрагентовПоставщикиТоваров = Новый ФиксированныйМассив(МСРез);
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьСписокУстановленныхПараметров(УстановленныеПараметры, ПараметрыРаздела)
	
	Для Каждого КлючИЗначение ИЗ ПараметрыРаздела Цикл
		УстановленныеПараметры.Вставить(КлючИЗначение.Ключ);
	КонецЦикла;
		
КонецПроцедуры