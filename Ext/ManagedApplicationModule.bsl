
Перем глОбщиеЗначения Экспорт;

Перем КомпонентаTwain Экспорт; // Twain компонента для работы со сканером

Перем КомпонентаKeyBoardHook Экспорт; //глобальный перехват нажатия клавиш для системы штрих-кодов

Перем КомпонентаРаботыСВебКамерой Экспорт;

Перем КомпонентаДопГрафика Экспорт;

Перем ШтрихКодОбработанФормой Экспорт;
//+++АК
//korn 2015.05.16
Перем глТелефония Экспорт;
Перем глRegExp Экспорт;
//+++АК

Перем ПредлагатьУстановкуРасширенияРаботыСФайлами Экспорт; //+++АК SHEP 2018.01.31 ИП-00017032

//БазоваяФункциональность

// СписокЗначений для накапливания пакета сообщений в журнал регистрации, 
// формируемых в клиентской бизнес-логике.
Перем СообщенияДляЖурналаРегистрации Экспорт; 

//Конец БазоваяФункциональность

Процедура ПриНачалеРаботыСистемы()
	
	//+++АК mika 2018.09.25 ИП-00019947
	#Если ВебКлиент Тогда
		Если ПолныеПрава.ПолучитьДоступностьРоли("Продавец") Тогда
			ПоказатьПредупреждение(Новый ОписаниеОповещения("ПредупреждениеWebКлиентПродавецЗакрытие", ОбщегоНазначенияКлиент), 
					НСтр("ru = 'Для пользователей с ролью ""Продавец"" не предусмотрена работа через Web клиент!';"),15);
			Возврат;
		КонецЕсли;  
	#КонецЕсли 
	//---АК mika 

	#Если НЕ ВебКлиент Тогда
		
	////обновление версии 1с
	//Попытка
	//	ЗапуститьПриложение("\\10.1.5.155\Shared\vkusvill.exe",, Ложь); 
	//Исключение	
	//КонецПопытки;	
		
	objWMIService = ПолучитьCOMОбъект("winmgmts:{impersonationLevel=impersonate}!\\.\root\cimv2");
	colItems = objWMIService.ExecQuery("Select * from Win32_NetworkAdapterConfiguration Where IPEnabled=TRUE");
	МассивАйпи = Новый Массив();
	Для Каждого objItem Из colItems Цикл
		Для Каждого Стр Из objItem.IPAddress Цикл
			СтрАйпи = СтрЗаменить(Стр, ".", Символы.ПС);
			Если СтрЧислоСтрок(СтрАйпи) = 4 Тогда
				МассивАйпи.Добавить(СтрПолучитьСтроку(СтрАйпи, 1) + "." + СтрПолучитьСтроку(СтрАйпи, 2) + "." + СтрПолучитьСтроку(СтрАйпи, 3));
			КонецЕсли;	
		КонецЦикла;
	КонецЦикла;
	ПолныеПрава.УстановитьТекущуюТочкуПоАйпиПодключения(МассивАйпи);
	
	////mind закинем нужные файлы свежей платформы
	//Попытка
	//	ИмяКаталога = "C:\8.3.10.2561\";
	//	СоздатьКаталог(ИмяКаталога);
	//	ФайлЯрлык = Новый Файл(ИмяКаталога + "Starter.bat");
	//	Если НЕ ФайлЯрлык.Существует()  Тогда
	//		Состояние("Получение файлов дистрибутива платформы...Ожидайте (примерно 5 минут)");
	//		ФТПСервер = Новый FTPСоединение("10.0.0.90", 21, "IFTP", "Asdqaz");
	//		ФТПСервер.Получить("IN/1C/UpdateMagaz/8.3.10.2561.ZIP", ИмяКаталога + "Архив.Zip");
	//		ЧтениеЗип = Новый ЧтениеZipФайла(ИмяКаталога + "Архив.Zip");
	//		ЧтениеЗип.ИзвлечьВсе(ИмяКаталога);
	//		
	//		УдалитьФайлы(ИмяКаталога + "Архив.Zip");
	//		
	//		ФТПСервер.Получить("IN/1C/UpdateMagaz/Starter.bat", ИмяКаталога + "Starter.bat");
	//	КонецЕсли;	
	//Исключение
	//	Предупреждение(ОписаниеОшибки());
	//КонецПопытки;
	
	Если ПолныеПрава.ПолучитьДоступностьРоли("Продавец") Тогда
		
		////проверим ярлык запуска
		//МассивКаталоговЯрлыка = Новый Массив();
		////МассивКаталоговЯрлыка.Добавить("d:\Izbenka\Управление Информации\automacon01\");
		//МассивКаталоговЯрлыка.Добавить("C:\Users");
		//
		//Для Каждого ЭлементЯрлык Из МассивКаталоговЯрлыка Цикл
		//	ФайлыЯрлыки = НайтиФайлы(ЭлементЯрлык, "Вкусвилл.v8i", Истина);
		//	Для Каждого Файл Из ФайлыЯрлыки Цикл
		//		ТекстДокумент = Новый ТекстовыйДокумент();
		//		ТекстДокумент.Прочитать(Файл.ПолноеИмя);
		//		Текст = ТекстДокумент.ПолучитьТекст();
		//		Если Найти(Текст, "/10.0.0.90/") > 0 Тогда
		//			Текст = СтрЗаменить(Текст, "/10.0.0.90/", "/10.0.0.15/");
		//			ТекстДокумент.УстановитьТекст(Текст);
		//			ТекстДокумент.Записать(Файл.ПолноеИмя);
		//			ЗапуститьПриложение(Файл.ПолноеИмя);
		//			ЗавершитьРаботуСистемы(Ложь);
		//			Возврат;
		//		КонецЕсли;	
		//	КонецЦикла;	
		//КонецЦикла;
		
		////проверим ярлык запуска
		//СетевоеИмяКомпьютера = ИмяКомпьютера();
		//Если Найти(ВРег(СетевоеИмяКомпьютера), "SERVER00") = 0 Тогда
		//	МассивКаталоговЯрлыка = Новый Массив();
		//	МассивКаталоговЯрлыка.Добавить("C:\Users");
		//	
		//	Для Каждого ЭлементЯрлык Из МассивКаталоговЯрлыка Цикл
		//		ФайлыЯрлыки = НайтиФайлы(ЭлементЯрлык, "*.v8i", Истина);
		//		Для Каждого Файл Из ФайлыЯрлыки Цикл
		//			ТекстДокумент = Новый ТекстовыйДокумент();
		//			ТекстДокумент.Прочитать(Файл.ПолноеИмя);
		//			Текст = НРег(ТекстДокумент.ПолучитьТекст());
		//			Если Найти(Текст, "izbenkafin") > 0 Тогда
		//				//ДвоичныеДанныеЯрлык = ПолныеПрава.ПолучитьЯрлыкДляЗапускаВМагазинах();
		//				//ДвоичныеДанныеЯрлык.Записать(НовоеИмя);
		//				УдалитьФайлы(Файл.ПолноеИмя);
		//				//ТекстДокумент.УстановитьТекст(ТекстОригинал);
		//				//ТекстДокумент.Записать(Файл.Путь + "Будет удалено.v8i");
		//				//ЗапуститьПриложение(НовоеИмя);
		//				//ЗавершитьРаботуСистемы(Ложь);
		//				//Возврат;
		//			КонецЕсли;	
		//		КонецЦикла;	
		//	КонецЦикла;
		//КонецЕсли;	
		
		//обработаем телефон магазина
		ТорговаяТочкаПоАйпи = ПолныеПрава.ПолучитьТорговуюТочкуИзПараметровСеанса();
		Если ЗначениеЗаполнено(ТорговаяТочкаПоАйпи) Тогда
			Попытка
				ИЕ = Новый COMОбъект("InternetExplorer.Application");
				ИЕ.Visible = Ложь;
				ИЕ.Silent = Ложь;
				ИЕ.Navigate("https://lk.megafon.ru");
				ТекДата = ТекущаяДата() + 15;
				Пока ИЕ.readyState < 4
					И ТекДата >= ТекущаяДата() Цикл
				КонецЦикла;
				ДокументHTML = ИЕ.Document.body.innerHtml;
				ИЕ.Quit();
				ИЕ = Неопределено;
				ПозицияНужная = Найти(ДокументHTML, "userID_LK_MSISDN");
				Если ПозицияНужная > 0 Тогда
					ТекстРазбора = Сред(ДокументHTML, ПозицияНужная + 19, 13);
					ТекстРазбора = СтрЗаменить(ТекстРазбора, "'", "");
					ТекстРазбора = СтрЗаменить(ТекстРазбора, """", "");
					ТекстРазбора = СтрЗаменить(ТекстРазбора, " ", "");
					ТекстРазбора = СтрЗаменить(ТекстРазбора, ",", "");
					ТекстРазбора = Сред(ТекстРазбора, 2);
					ТекстТелефона = "";
					Для н = 1 По СтрДлина(ТекстРазбора) Цикл
						Если Найти("1234567890", Сред(ТекстРазбора, н, 1)) > 0 Тогда
							ТекстТелефона = ТекстТелефона + Сред(ТекстРазбора, н, 1);
						КонецЕсли;	
					КонецЦикла;	
					ПолныеПрава.УстановитьТелефонМагазинаПриЗапускеМагазина(ТекстТелефона);
				КонецЕсли;
			Исключение
			КонецПопытки;
		Иначе
			Предупреждение("Магазин по Ip не определен");
			ЗавершитьРаботуСистемы(Ложь);
		КонецЕсли;
		
		//установим режим открытия окон в закладках
		ПолныеПрава.УстановитьРежимОткрытияОконВЗакладках(Истина);
		
		ПолныеПрава.ВыполнитьПодключениеКSMS_Repl();
		
		////проверим локальные права пользователя на компе для обновления платформы
		//Попытка
		//	ТексДокумент = Новый ТекстовыйДокумент();
		//	ТексДокумент.УстановитьТекст("Тест");
		//	ТексДокумент.Записать("c:\Program Files (x86)\Test.txt");
		//	ПолныеПрава.ЗаписатьОтладочнуюИнформацию(Ложь);
		//Исключение
		//	ПолныеПрава.ЗаписатьОтладочнуюИнформацию(Истина);
		//КонецПопытки;	
		
		//МассивСеансов = ПолныеПрава.ПолучитьСеансыИнфБазы();
		//Для Каждого Сеанс Из МассивСеансов Цикл
		//	Если ВРег(Сеанс) = ВРег(ИмяКомпьютера()) Тогда
		//		Предупреждение("На данном компьютере уже запущена база");
		//		ЗавершитьРаботуСистемы(Ложь, Ложь);
		//		Возврат;
		//	КонецЕсли;	
		//КонецЦикла;
		
		Фрм = ПолучитьФорму("ОбщаяФорма.Аутентификация", Новый Структура("ОткрытаПриНачале", Истина));
		Результ = Фрм.ОткрытьМодально();
		
		Если Результ = Неопределено
				ИЛИ Результ = Ложь Тогда
			ЗавершитьРаботуСистемы(Ложь, Ложь);
		Иначе
			//ОткрытьФорму("Обработка.РабочийСтолПродавца.Форма.Форма");
			//ПользовательВРежимеРабочегоСтола = Истина;
			//ПроверитьОбновлениеКонфигурации();
			//ПодключитьОбработчикОжидания("ПроверитьОбновлениеКонфигурации", 3600);
			
			//+++АК
			//ДопМодульСервер.ДобавитьЗаписьВЖурналУчетаСотрудниковАутсорсинг(); // регистрация внештатных сотрудников
			//---АК
			
		КонецЕсли;
		
		УстановитьЗаголовокПриложения("Текущий магазин: " + ПолныеПрава.ПолучитьЗаголовокСистемыДляМагазина());
		
		//+++АК SHEP 2018.09.24 ИП-00019906
		Если ТекущаяДата() >= Дата("20180925100000") И НЕ ПолныеПрава.ПолучитьДоступностьРоли("ПродавецТолькоПросмотр") Тогда
			ВидКИ = ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ФактАдресСтруктурнойЕдиницы");
			Если НЕ ЗначениеЗаполнено(ОбщегоНазначения.ПолучитьКонтактнуюИнформациюПоВиду(ТорговаяТочкаПоАйпи, ВидКИ)) Тогда
				
				ПараметрыОткрытия = Новый Структура;
				ПараметрыОткрытия.Вставить("ВидКонтактнойИнформации", ВидКИ);
				ПараметрыОткрытия.Вставить("ТолькоПросмотр", Ложь);
				ПараметрыОткрытия.Вставить("Комментарий", "Не подтверждён");
				ПараметрыОткрытия.Вставить("СкрытьКомментарий", Истина);
				
				ДопПараметры = Новый Структура("Объект", ТорговаяТочкаПоАйпи);
				ДопПараметры.Вставить("Вид", ВидКИ);
				ДопПараметры.Вставить("Тип", ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес"));
				Оповещение = Новый ОписаниеОповещения("ЗаписьКонтактнойИнформацииИзВводКонтактнойИнформации", ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент"), ДопПараметры);
				
				УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, , , , Оповещение);
				
			КонецЕсли;
		КонецЕсли;
		//---АК SHEP 2018.09.24
		
	КонецЕсли;
	
	//Предупреждение("Производится переход на новую платформу. Сейчас программа будет закрыта и запущена под новой версией платформы. Возможно вам потребуется выбрать своего пользователя и ввести пароль заново");
	//ЗапуститьПриложение("""c:\8.3.10.2561\bin\1cv8c.exe"" ENTERPRISE /S10.0.0.15:1641\IzbenkaFin_deb83");
	//ЗавершитьРаботуСистемы(Ложь, Ложь);
	//Возврат;
	
	
	Если ПолныеПрава.ПолучитьДоступностьРоли("ПродавецТолькоПросмотр") Тогда
		ПолныеПрава.УстановитьРежимОткрытияОконВЗакладках();
		СписокВыбора = Новый СписокЗначений();
		СписокВыбора.ЗагрузитьЗначения(ПолныеПрава.ПолучитьМассивМагазинов());
		//Результ = ОткрытьФормуМодально("Справочник.СтруктурныеЕдиницы.ФормаВыбора", Новый Структура("РежимВыбора, ЗакрыватьПриВыборе", Истина, Истина));
		Результ = СписокВыбора.ВыбратьЭлемент("Выберите магазин");
		Если Результ <> Неопределено Тогда
			ПолныеПрава.УстановитьТекущийМагазин(Результ.Значение);
			УстановитьЗаголовокПриложения("Текущий магазин: " + Результ.Значение);
		Иначе
			УстановитьЗаголовокПриложения("Текущий магазин: <Не установлен>");
			ПолныеПрава.УстановитьТекущийМагазин(ПредопределенноеЗначение("Справочник.СтруктурныеЕдиницы.ПустаяСсылка"));
		КонецЕсли;	
	КонецЕсли;
	
	//mind в 8.3 отваливается установка
	//+++АК CISA 2018.09.24 ИП-00019888 раскоментировал код подключения хука и добавил КомпонентаKeyBoardHook.ЗахватПервым = Ложь; 09.26 вынес весь код в отдельную процедуру
	ПодключитьКомпонентуKeyboardHook();
	//---АК CISA 2018.09.24 ИП-00019888
	
	//Попытка
	//	ПодключитьВнешнююКомпоненту("ОбщийМакет.WebКамера", "WebCamera", ТипВнешнейКомпоненты.Native);
	//	КомпонентаРаботыСВебКамерой = Новый("AddIn.WebCamera.ExecExtention");
	//Исключение
	//	УстановитьВнешнююКомпоненту("ОбщийМакет.WebКамера");
	//	ПодключитьВнешнююКомпоненту("ОбщийМакет.WebКамера", "WebCamera", ТипВнешнейКомпоненты.Native);
	//	КомпонентаРаботыСВебКамерой = Новый("AddIn.WebCamera.ExecExtention");
	//КонецПопытки;
	
	КомпонентаРаботыСВебКамерой = Неопределено;
	
	//Попытка
	//	ПодключитьВнешнююКомпоненту("ОбщийМакет.ДопГрафика", "Graphics", ТипВнешнейКомпоненты.Native);
	//	КомпонентаДопГрафика = Новый("AddIn.Graphics.ExecExtention");
	//Исключение
	//	УстановитьВнешнююКомпоненту("ОбщийМакет.ДопГрафика");
	//	ПодключитьВнешнююКомпоненту("ОбщийМакет.ДопГрафика", "Graphics", ТипВнешнейКомпоненты.Native);
	//	КомпонентаДопГрафика = Новый("AddIn.Graphics.ExecExtention");
	//КонецПопытки;
	
	ШтрихКодОбработанФормой = Ложь;
	
	//+++АК
	//korn 2015.05.16
	АК_ТелефонияКлиент.ПодключитьсяAsterisk(); 
	//---АК
	
	//+++АК
	//golv 20.05.2016
	Попытка
		WshShell = Новый COMОбъект("WScript.Shell");	
		//РезультатЗапроса = WshShell.Exec("reg query ""HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\EscDomains\security_1cv8c.exe""").StdOut.ReadAll();
			
		// Добавить параметр
		WshShell.Run("reg add ""HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap\EscDomains\security_1cv8c.exe"" /v about /t REG_DWORD /d 2 /f", 0, 0);
	Исключение
	КонецПопытки;
	//---АК
	
#КонецЕсли
	
	//+++АК SHEP 20170317 ИП-00014350
	Если ПолныеПрава.ПолучитьДоступностьРоли("Поставщик") Тогда
		ОткрытьФорму("ОбщаяФорма.ФормаАвторизацииКонтрагента");
		Возврат; //+++АК SHEP 2018.02.04 ИП-00017032: остальное не нужно
	КонецЕсли;
	//---АК SHEP 20170317

	Если ЗначениеЗаполнено(ПараметрЗапуска) Тогда
		Если Найти(НРег(ПараметрЗапуска), "otchetid") > 0 Тогда
			АйдиТекст = СтрЗаменить(НРег(ПараметрЗапуска), "otchetid", "");
			АйдиТекст = СтрЗаменить(АйдиТекст, "=", "");
			Айди = Число(АйдиТекст);
			ОткрытьФорму("ОбщаяФорма.ОтпискаОтОтчетов", Новый Структура("АйдиОтчета", Айди));
		КонецЕсли;
		//+++AK GREK 30.11.2017 ИП-00015325.02
		Если Найти(НРег(ПараметрЗапуска), "formaperedachimag") > 0 Тогда
			ОткрытьФорму("Справочник.СтруктурныеЕдиницы.Форма.ФормаПодтверждениеПередачи");
		КонецЕсли;
		//---AK
	КонецЕсли;
	
	//+++АК SHEP 2018.09.25 ИП-00019906
	Если УправлениеКонтактнойИнформацией.НеподтверждённыеАдресаТТПомощникаТУ(Истина) > 0 Тогда
		ОткрытьФорму("Справочник.СтруктурныеЕдиницы.Форма.ФормаНеподтверждённыхАдресов");
	КонецЕсли;
	//---АК SHEP 2018.09.25
	
	Если ПолныеПрава.РольРедактированияТренинговДоступна() Тогда
		ОткрытьФорму("ОбщаяФорма.ФормаРедактированиеТренингов");
	КонецЕсли;	
	
	//+++АК mika 2017.12.20 ИП-00017045 Открытие формы подтверждения "Правил работы сотрудников"
	УправлениеПользователямиКлиент.ОткрытьФормуПодтвержденияПравилРаботыПользователей();
	//---АК mika 
	
	//++ АК luza 2018.06.0
	ДопПараметрыПользователя = Новый Структура("ЕстьРольОбработкаЗвонков, ЕстьРольОператорСклада", Ложь, Ложь);
	ДопПараметрыПользователя.ЕстьРольОбработкаЗвонков = Телеграм.ЕстьРольОбработкаЗвонков();
	ДопПараметрыПользователя.ЕстьРольОператорСклада = Телеграм.ЕстьРольОператорСклада();
	
	глДопПараметрыПользователя = Новый ФиксированнаяСтруктура(ДопПараметрыПользователя);
	РаботаСОбщимиПеременными.УстановитьЗначениеПеременной("глДопПараметрыПользователя", глДопПараметрыПользователя, Истина);
	
	Если глДопПараметрыПользователя.ЕстьРольОбработкаЗвонков Или 
		глДопПараметрыПользователя.ЕстьРольОператорСклада Тогда
		ПодключитьОбработчикОжидания("глОбработкаОжиданияДляОповещения", 120);
	КонецЕсли;	
	//-- АК luza 2018.06.07


	
КонецПроцедуры

//+++АК
//korn 2015.10.05
Процедура ПодключитьсяКAsterisk() Экспорт
	
	АК_ТелефонияКлиент.ПодключитьсяПовторно();
	
КонецПроцедуры
//---АК

Процедура ПередНачаломРаботыСистемы(Отказ)
	
	
КонецПроцедуры


Процедура ОбработкаВнешнегоСобытия(Источник, Событие, Данные)
	
	Если Источник = "KeyboardHook" Тогда
		
		Если Данные = "00122" Тогда //F11
			Если ШтрихКодОбработанФормой = Ложь Тогда
				ШтрихКодОбработанФормой = Ложь;
				ШтрихКод = ОткрытьФормуМодально("ОбщаяФорма.ФормаВводаШтрихкода");
				Если ЗначениеЗаполнено(ШтрихКод) Тогда
					СтруктураДанных = ВнешниеДанные.СчитатьДанныеПоШтрихКоду(ШтрихКод);
					Если НЕ ЗначениеЗаполнено(СтруктураДанных.Номенклатура) Тогда
						СсылкаНаДок = ВнешниеДанные.ПолучитьДокументПоШтрихКоду(ШтрихКод);
						Если ЗначениеЗаполнено(СсылкаНаДок) Тогда
							ОткрытьЗначение(СсылкаНаДок);	
						КонецЕсли;
					Иначе
						ОткрытьЗначение(СтруктураДанных.Номенклатура);
					КонецЕсли;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;
		ШтрихКодОбработанФормой = Ложь;
		
		Если Данные = "00123" Тогда //F12
			ОткрытьФорму("ОбщаяФорма.ОтпискаОтОтчетов", Новый Структура("АйдиОтчета", -1));
		КонецЕсли;
	//+++АК
	//korn 2015.05.16
	ИначеЕсли Источник = "ROM-Asterisk" Тогда
		АК_ТелефонияКлиент.ВнешнееСобытие(Источник, Событие, Данные);
	//---АК
	КонецЕсли;	
	
КонецПроцедуры


//+++АК
//korn 2015.05.19
Процедура ПриЗавершенииРаботыСистемы()
	
	АК_ТелефонияКлиент.Отключиться();
	
КонецПроцедуры

//+++АК CISA 2018.09.26 ИП-00019888 доработка
Процедура ПодключитьКомпонентуKeyboardHook()
	Попытка
		ПодключитьВнешнююКомпоненту("ОбщийМакет.KeyboardHook", "Hook", ТипВнешнейКомпоненты.Native);
		КомпонентаKeyBoardHook = Новый("AddIn.Hook.KeyboardHook");
		КомпонентаKeyBoardHook.ЗахватРазрешен = Истина;
		КомпонентаKeyBoardHook.ЗахватПервым = Ложь;
	Исключение
		Попытка
			УстановитьВнешнююКомпоненту("ОбщийМакет.KeyboardHook");
			ПодключитьВнешнююКомпоненту("ОбщийМакет.KeyboardHook", "Hook", ТипВнешнейКомпоненты.Native);
			КомпонентаKeyBoardHook = Новый("AddIn.Hook.KeyboardHook");
			КомпонентаKeyBoardHook.ЗахватРазрешен = Истина;
			КомпонентаKeyBoardHook.ЗахватПервым = Ложь;
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
	КонецПопытки;	
КонецПроцедуры
//---АК CISA 2018.09.26 ИП-00019888