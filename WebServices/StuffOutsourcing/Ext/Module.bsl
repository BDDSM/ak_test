
Функция ДобавлениеНовогоСотрудника(ДанныеСистемы)
	
	//+++АК mika 2018.02.06 ИП-00017859
	//Отключить автоматическое создание "Внештатных сотрудников" для компании СТС-Групп (создаются дубли)
	//(на текущий момент все компании должны заводить вручную через Web интерфейс)
	Возврат "";
	//---АК mika ИП-00017859

	СтруктураДанных = ДанныеСистемы.Получить();
	
	ТекКонтрагент = Справочники.Контрагенты.НайтиПоРеквизиту("ИД", СтруктураДанных.ИДОрганизации); // для СТС-Групп - 11960
	
	НовыйСотрудник = Справочники.СотрудникиАутсорсинг.СоздатьЭлемент();
	НовыйСотрудник.Наименование = СтруктураДанных.ФИО;
	Попытка
		НовыйСотрудник.ДатаРождения = СтруктураДанных.ДатаРождения;
	Исключение
	КонецПопытки;
	НовыйСотрудник.Пол 				= Перечисления.ПолФизическихЛиц[СтруктураДанных.Пол];
	НовыйСотрудник.Должность 		= Справочники.ДолжностиВнештатныхСотрудников.НайтиПоКоду(СтруктураДанных.Должность);
	НовыйСотрудник.Контрагент		= ТекКонтрагент; // для СТС-Групп - 11960
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Контрагент", ТекКонтрагент);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КонтрагентыСотрудников.ГруппаСотрудников
	|ИЗ
	|	РегистрСведений.КонтрагентыСотрудниковАутсорсинг.СрезПоследних(, ) КАК КонтрагентыСотрудников
	|ГДЕ
	|	КонтрагентыСотрудников.Контрагент = &Контрагент";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		НовыйСотрудник.ГруппаСотрудников = Выборка.ГруппаСотрудников;
	КонецЕсли;
	//НовыйСотрудник.ГруппаСотрудников = ПолучитьГруппуСотрудникаПоКонтрагенту(ТекКонтрагент);
	НовыйСотрудник.Комментарий		= СтруктураДанных.Комментарий;
	
	Попытка
		НовыйСотрудник.Записать();
	Исключение
		Возврат "";
	КонецПопытки;
	
	//
	ТекПерсоналККМ = Справочники.ПерсоналККМ.НайтиПоКоду(Прав("0000000000" + Формат(НовыйСотрудник.ИД, "ЧГ=0"), 10));

	Возврат ?(НЕ ТекПерсоналККМ.Пустая(), ТекПерсоналККМ.Пароль, "");
	
КонецФункции

Функция ЖурналУчетаРаботы(ДанныеСистемы)

	СтруктураДанных = ДанныеСистемы.Получить();
	
	ТекКонтрагент = Справочники.Контрагенты.НайтиПоРеквизиту("ИД", СтруктураДанных.ИДОрганизации); // для СТС-Групп - 11960
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала"		, СтруктураДанных.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания"	, СтруктураДанных.ДатаОкончания);
	Запрос.УстановитьПараметр("Контрагент"		, ТекКонтрагент);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЖурналУчетаСотрудниковАутсорсинг.ДатаОтметки КАК Дата,
	|	ЖурналУчетаСотрудниковАутсорсинг.Сотрудник.ИД КАК ИДСотрудника,
	|	ЖурналУчетаСотрудниковАутсорсинг.ТорговаяТочка.Наименование КАК НаименованиеТТ,
	|	ЖурналУчетаСотрудниковАутсорсинг.ТорговаяТочка.id_TT КАК id_TT,
	|	ЖурналУчетаСотрудниковАутсорсинг.ТорговаяТочка.Адрес КАК АдресТТ,
	|	ЖурналУчетаСотрудниковАутсорсинг.ТорговаяТочка.НомерТочки КАК НомерТТ
	|ИЗ
	|	РегистрСведений.ЖурналУчетаСотрудниковАутсорсинг КАК ЖурналУчетаСотрудниковАутсорсинг
	|ГДЕ
	|	ЖурналУчетаСотрудниковАутсорсинг.ДатаОтметки МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ЖурналУчетаСотрудниковАутсорсинг.Контрагент = &Контрагент";
	
	ТаблицаОтвета = Запрос.Выполнить().Выгрузить();
	
	ТаблицаОтвета.Колонки.Добавить("ШтрихКод", Новый ОписаниеТипов("Строка"));
	СпрПерсоналККМ = Справочники.ПерсоналККМ;
	Для Каждого СтрокаТаблицы Из ТаблицаОтвета Цикл
		ТекПерсоналККМ = СпрПерсоналККМ.НайтиПоКоду(Прав("0000000000" + Формат(СтрокаТаблицы.ИДСотрудника, "ЧГ=0"), 10));
		Если НЕ ТекПерсоналККМ.Пустая() Тогда
			СтрокаТаблицы.ШтрихКод = ТекПерсоналККМ.Пароль;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураОтвета = Новый Структура("Логин, ТаблицаДанных", "Izbenka", ТаблицаОтвета);
	
	ХранилищеОтвет = Новый ХранилищеЗначения(СтруктураОтвета);
	
	Возврат ХранилищеОтвет;
	
КонецФункции
