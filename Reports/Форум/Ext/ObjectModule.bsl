
////////////////////////////////////////////////////////////////////////////////
// ГЛОБАЛЬНЫЕ ПЕРЕМЕННЫЕ
////////////////////////////////////////////////////////////////////////////////
Перем АдминНаФоруме				Экспорт;
Перем ВопросовНаСтранице		Экспорт;
Перем RegExp                	Экспорт;
//Перем Script2                	Экспорт;
Перем ПараметрыСервераИБазы	 	Экспорт;
Перем МассивТермСерверов	 	Экспорт;
Перем МассивВопросовДляОзнакомления Экспорт;
Перем ТекстПанелиОтвета;
Перем КоличествоСмайликов;





////////////////////////////////////////////////////////////////////////////////
// ОСНОВНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
////////////////////////////////////////////////////////////////////////////////

Процедура Инициализация() Экспорт
	RegExp = Новый COMОбъект("VBScript.RegExp");
	RegExp.MultiLine    = Истина;
	RegExp.Global 		= Истина;
	RegExp.IgnoreCase   = Истина;
	////////////////////////////////////
	//Script2 = Новый COMОбъект("MSScriptControl.ScriptControl");
	//Script2.Language = "vbscript";	
	////////////////////////////////////
	ПолучитьИмяСервераИБазы();
	////////////////////////////////////
	ПрочитатьКоличествоСмайликов();
	////////////////////////////////////
	ЗаполнитьМассивВопросовДляОзнакомления();
	////////////////////////////////////
	ПостроительОтчета.Текст = 
	"ВЫБРАТЬ
	|	ВопросыПользователей.Ссылка КАК Документ,
	|	ВопросыПользователей.Дата КАК ДатаВопроса,
	|	ВопросыПользователей.Категория КАК Категория,
	|	(ВЫРАЗИТЬ(ВопросыПользователей.Вопрос КАК СТРОКА(120))) + "" ..."" КАК Вопрос,
	|	ВопросыПользователей.Номер КАК НомерВопроса,
	|	ВопросыПользователей.Автор КАК АвторВопроса,
	|	ВопросыПользователей.Автор.Код КАК АвторВопросаКод,
	|	ЕСТЬNULL(ОтветыНаВопросСрезПоследних.Период, ВопросыПользователей.Дата) КАК ПоследняяДата,
	|	ЕСТЬNULL(ОтветыНаВопросСрезПоследних.Пользователь, ВопросыПользователей.Автор) КАК ПоследнийАвтор,
	|	ЕСТЬNULL(ОтветыНаВопросСрезПоследних.Пользователь.Код, ВопросыПользователей.Автор.Код) КАК ПоследнийАвторКод,
	|	ЕСТЬNULL(Подсчет.Ответов, 0) КАК Ответов,
	|	ВопросыПользователей.Снят КАК Снят,
	|	ВЫБОР
	|		КОГДА ОтветыНаВопросСрезПоследних.Период ЕСТЬ NULL 
	|			ТОГДА ВопросыПользователей.Дата
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ОтветыНаВопросСрезПоследних.ДатаИзменения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА ОтветыНаВопросСрезПоследних.Период
	|				ИНАЧЕ ОтветыНаВопросСрезПоследних.ДатаИзменения
	|			КОНЕЦ
	|	КОНЕЦ КАК ДатаПоследнейАктивности,
	|	ВЫБОР
	|		КОГДА ВопросыПользователей.Автор = &ТекПользователь
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СвойВопрос,
	|	НастройкиПользователейФорума.Емайл КАК Емайл,
	|	НастройкиПользователейФорума.ТелефонРабочий КАК ТелефонРабочий,
	|	НастройкиПользователейФорума.ТелефонСотовый КАК ТелефонСотовый,
	|	НастройкиПользователейФорума.ОповещатьПоЕмайл КАК ОповещатьПоЕмайл,
	|	НастройкиПользователейФорума.ГруппаПользователя КАК ГруппаПользователя
	|ИЗ
	|	Документ.ВопросыПользователей КАК ВопросыПользователей
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветыНаВопрос.СрезПоследних КАК ОтветыНаВопросСрезПоследних
	|		ПО ВопросыПользователей.Ссылка = ОтветыНаВопросСрезПоследних.Вопрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ОтветыНаВопрос.Вопрос КАК Вопрос,
	|			КОЛИЧЕСТВО(ВЫРАЗИТЬ(ОтветыНаВопрос.Комментарий КАК СТРОКА(1024))) КАК Ответов
	|		ИЗ
	|			РегистрСведений.ОтветыНаВопрос КАК ОтветыНаВопрос
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ОтветыНаВопрос.Вопрос) КАК Подсчет
	|		ПО ВопросыПользователей.Ссылка = Подсчет.Вопрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветыНаВопрос КАК ОтветыНаВопрос
	|		ПО ВопросыПользователей.Ссылка = ОтветыНаВопрос.Вопрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПользователейФорума КАК НастройкиПользователейФорума
	|		ПО ВопросыПользователей.Автор = НастройкиПользователейФорума.Пользователь
	|ГДЕ
	|	(НЕ ВопросыПользователей.ПометкаУдаления)
	|{ГДЕ
	|	ВопросыПользователей.Вопрос КАК Вопрос,
	|	ВопросыПользователей.Ссылка.* КАК Документ,
	|	ВопросыПользователей.Номер КАК Номер,
	|	ВопросыПользователей.Категория.* КАК Категория,
	|	ВопросыПользователей.Автор.* КАК АвторВопроса,
	|	(ЕСТЬNULL(ОтветыНаВопросСрезПоследних.Пользователь, ВопросыПользователей.Автор)) КАК ПоследнийАвтор,
	|	(ЕСТЬNULL(Подсчет.Ответов, 0)) КАК Ответов,
	|	ВопросыПользователей.Снят КАК Снят,
	|	(ВЫБОР
	|			КОГДА ВопросыПользователей.Автор = &ТекПользователь
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК СвоиВопросы,
	|	(ВЫБОР
	|			КОГДА ЕСТЬNULL(ОтветыНаВопросСрезПоследних.Период, ВопросыПользователей.Дата) МЕЖДУ НАЧАЛОПЕРИОДА(&ТекДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&ТекДата, ДЕНЬ)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК АктивныеСегодня,
	|	ОтветыНаВопрос.Комментарий КАК Комментарий}
	|
	|СГРУППИРОВАТЬ ПО
	|	ВопросыПользователей.Ссылка,
	|	ВопросыПользователей.Категория,
	|	ВЫРАЗИТЬ(ВопросыПользователей.Вопрос КАК СТРОКА(120)),
	|	ВопросыПользователей.Автор,
	|	ЕСТЬNULL(ОтветыНаВопросСрезПоследних.Период, ВопросыПользователей.Дата),
	|	ЕСТЬNULL(ОтветыНаВопросСрезПоследних.Пользователь, ВопросыПользователей.Автор),
	|	ОтветыНаВопросСрезПоследних.Пользователь.Код,
	|	ЕСТЬNULL(Подсчет.Ответов, 0),
	|	""№"" + (ВЫРАЗИТЬ(ВопросыПользователей.Вопрос КАК СТРОКА(120))),
	|	(ВЫРАЗИТЬ(ВопросыПользователей.Вопрос КАК СТРОКА(120))) + "" ..."",
	|	""№"" + ВопросыПользователей.Номер,
	|	ВопросыПользователей.Дата,
	|	ВЫБОР
	|		КОГДА ОтветыНаВопросСрезПоследних.Период ЕСТЬ NULL 
	|			ТОГДА ВопросыПользователей.Дата
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ОтветыНаВопросСрезПоследних.ДатаИзменения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА ОтветыНаВопросСрезПоследних.Период
	|				ИНАЧЕ ОтветыНаВопросСрезПоследних.ДатаИзменения
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВопросыПользователей.Снят,
	|	ВЫБОР
	|		КОГДА ВопросыПользователей.Автор = &ТекПользователь
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	НастройкиПользователейФорума.Емайл,
	|	НастройкиПользователейФорума.ТелефонРабочий,
	|	НастройкиПользователейФорума.ТелефонСотовый,
	|	НастройкиПользователейФорума.ОповещатьПоЕмайл,
	|	НастройкиПользователейФорума.ГруппаПользователя,
	|	ВопросыПользователей.Номер,
	|	ЕСТЬNULL(ОтветыНаВопросСрезПоследних.Пользователь.Код, ВопросыПользователей.Автор.Код),
	|	ВопросыПользователей.Автор.Код
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПоследнейАктивности УБЫВ
	|{УПОРЯДОЧИТЬ ПО
	|	ВопросыПользователей.Дата КАК ДатаВопроса,
	|	ДатаПоследнейАктивности КАК ДатаПоследнейАктивности,
	|	НомерВопроса КАК НомерВопроса,
	|	ВопросыПользователей.Автор.Наименование КАК Автор,
	|	Ответов КАК Ответов}";
	///////////////////////
	ПостроительОтчета.Параметры.Вставить("ТекПользователь", ПараметрыСеанса.ТекущийПользователь);
	ПостроительОтчета.Отбор.Добавить("Номер",,"№");
	ПостроительОтчета.Отбор.Номер.ВидСравнения = ВидСравнения.Содержит;
	ПостроительОтчета.Отбор.Добавить("Вопрос",,"Вопрос");
	ПостроительОтчета.Отбор.Вопрос.ВидСравнения = ВидСравнения.Содержит;
	ПостроительОтчета.Отбор.Добавить("Комментарий",,"Комментарий");
	ПостроительОтчета.Отбор.Комментарий.ВидСравнения = ВидСравнения.Содержит;
	ПостроительОтчета.Отбор.Добавить("Категория");
	ПостроительОтчета.Отбор.Добавить("АвторВопроса",,"Автор вопроса");
	ПостроительОтчета.Отбор.АвторВопроса.Значение = ПараметрыСеанса.ТекущийПользователь;
	//////////////////////////////////
	Если АдминНаФоруме Тогда
		ПостроительОтчета.Отбор.Добавить("ПоследнийАвтор",,"Последний автор");
		ПостроительОтчета.Отбор.ПоследнийАвтор.ВидСравнения = ВидСравнения.НеВСписке;
		ПостроительОтчета.Отбор.ПоследнийАвтор.Значение 	= ПолучитьСписокАдминистраторов();
	КонецЕсли;
	//////////////////////////////////
	ПостроительОтчета.Отбор.Добавить("СвоиВопросы",,"Свои вопросы");
	ПостроительОтчета.Отбор.Добавить("АктивныеСегодня",,"Активные сегодня");
	ПостроительОтчета.Отбор.Добавить("Снят",,"Вопрос снят");
	ПостроительОтчета.Отбор.СвоиВопросы.Значение 		= Истина;
	ПостроительОтчета.Отбор.АктивныеСегодня.Значение 	= Истина;
	/////////////////////
	ТекстПанелиОтвета = ПолучитьТекстПанелиОтвета();
КонецПроцедуры // Инициализация()

Процедура ПолучитьИмяСервераИБазы()
	ПараметрыСервераИБазы = Новый Структура;
	ПараметрыСервераИБазы.Вставить("Сервер"); // Сервер приложений 1С
	ПараметрыСервераИБазы.Вставить("База");
	СтрСоед = СтрокаСоединенияИнформационнойБазы();
	СтрСоед = СтрЗаменить(СтрСоед, """","");
	Если Найти(НРег(СтрСоед),"srvr") > 0 Тогда 
		// Srvr="192.168.0.1";Ref="Trade";
		Массив = МодульФорум.РазложитьСтрокуВМассив(СтрСоед, ";");
		Для каждого Эл Из Массив Цикл
			Если Найти(НРег(Эл),"srvr") > 0 Тогда
				ПараметрыСервераИБазы.Сервер = Сред(Эл, Найти(НРег(Эл),"=") + 1, СтрДлина(Эл) - 1);
			ИначеЕсли Найти(НРег(Эл),"ref") > 0 Тогда
				ПараметрыСервераИБазы.База = Сред(Эл, Найти(НРег(Эл),"=") + 1, СтрДлина(Эл) - 1);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли Найти(НРег(СтрСоед),"file") > 0 Тогда 
		//
	КонецЕсли;
	МассивТермСерверов = МодульФорум.РазложитьСтрокуВМассив(Справочники.НастройкиФорума.ТерминальныеСервераЧерезЗапятую.Наименование, ",");
КонецПроцедуры // ПолучитьИмяСервераИБазы()

Функция ПолучитьСписокАдминистраторов()
	Список = Новый СписокЗначений;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиПользователейФорума.Пользователь КАК Пользователь
	|ИЗ
	|	РегистрСведений.НастройкиПользователейФорума КАК НастройкиПользователейФорума
	|ГДЕ
	|	НастройкиПользователейФорума.АдминистраторФорума";
	Список.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Пользователь"));
	Возврат Список;
КонецФункции // ПолучитьСписокАдминистраторов()

Функция ПолучитьДанныеДокумента(ДокВопрос) Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокВопрос", ДокВопрос);
	Запрос.УстановитьПараметр("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("МассивВопросовДляОзнакомления", МассивВопросовДляОзнакомления);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВопросыПользователей.Ссылка КАК Ссылка,
	|	ВопросыПользователей.Номер КАК Номер,
	|	ВопросыПользователей.Дата КАК Дата,
	|	ВопросыПользователей.Проведен КАК Проведен,
	|	ВопросыПользователей.Вопрос КАК Вопрос,
	|	ВопросыПользователей.Категория КАК Категория,
	|	ВопросыПользователей.Автор КАК Автор,
	|	ВопросыПользователей.Автор.Код КАК Логин,
	|	ВопросыПользователей.Снят КАК Снят,
	|	ЕСТЬNULL(ЗапросПоКоличеству.КоличествоСсылок, 0) КАК КоличествоСсылок,
	|	ВЫБОР
	|		КОГДА ВопросыПользователей.Автор = &ТекущийПользователь
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК СвойВопрос,
	|	ВопросыПользователей.Автор.Родитель КАК ГруппаПользователя,
	|	ВопросыПользователей.ПоказыватьВНовостях КАК ПоказыватьВНовостях,
	|	ВопросыПользователей.ОбязателенДляОзнакомления КАК ОбязателенДляОзнакомления,
	|	ВЫБОР
	|		КОГДА ВопросыПользователей.Ссылка В (&МассивВопросовДляОзнакомления)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТребуетсяОзнакомление
	|ИЗ
	|	Документ.ВопросыПользователей КАК ВопросыПользователей
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТЧСсылки.Ссылка КАК СамДокумент,
	|			КОЛИЧЕСТВО(ТЧСсылки.СсылкаНаОбъект) КАК КоличествоСсылок
	|		ИЗ
	|			Документ.ВопросыПользователей.ТЧСсылки КАК ТЧСсылки
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ТЧСсылки.Ссылка) КАК ЗапросПоКоличеству
	|		ПО ВопросыПользователей.Ссылка = ЗапросПоКоличеству.СамДокумент
	|ГДЕ
	|	ВопросыПользователей.Ссылка = &ДокВопрос";
	Результат = Запрос.Выполнить();
	СтруктРез = Новый Структура;
	Для каждого Колонка Из Результат.Колонки Цикл
		СтруктРез.Вставить(Колонка.Имя);
	КонецЦикла;
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СтруктРез, Выборка);
	КонецЦикла;
	Возврат СтруктРез;
КонецФункции // ПолучитьДанныеДокумента()

Функция ПолучитьДанныеКомментария(ДанныеДокумента) Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Вопрос", ДанныеДокумента.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОтветыНаВопрос.Вопрос КАК Ссылка,
	|	ОтветыНаВопрос.Период КАК Период,
	|	ОтветыНаВопрос.Комментарий КАК Комментарий,
	|	ОтветыНаВопрос.Пользователь КАК Пользователь,
	|	ОтветыНаВопрос.Пользователь.Код КАК КодПользователя,
	|	ОтветыНаВопрос.ДатаИзменения КАК ДатаИзменения,
	|	ОтветыНаВопрос.СсылкаНаОбъект1 КАК СсылкаНаОбъект1,
	|	ОтветыНаВопрос.СсылкаНаОбъект2 КАК СсылкаНаОбъект2,
	|	ОтветыНаВопрос.СсылкаНаОбъект3 КАК СсылкаНаОбъект3,
	|	ОтветыНаВопрос.СсылкаНаОбъект4 КАК СсылкаНаОбъект4,
	|	ОтветыНаВопрос.СсылкаНаОбъект5 КАК СсылкаНаОбъект5,
	|	ОтветыНаВопрос.Файл КАК Файл,
	|	ОтветыНаВопрос.ИмяФайла КАК ИмяФайла
	|ИЗ
	|	РегистрСведений.ОтветыНаВопрос КАК ОтветыНаВопрос
	|ГДЕ
	|	ОтветыНаВопрос.Вопрос = &Вопрос";
	Результат = Запрос.Выполнить();
	СтруктРез = Новый Структура;
	Для каждого Колонка Из Результат.Колонки Цикл
		СтруктРез.Вставить(Колонка.Имя);
	КонецЦикла;
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СтруктРез, Выборка);
	КонецЦикла;
	Возврат СтруктРез;
КонецФункции // ПолучитьДанныеКомментария()

Функция ОпределитьТипКоллекции(Парам) Экспорт
	Если Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(Парам)) Тогда
		Возврат "Справочники";
	ИначеЕсли Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Парам)) Тогда
	    Возврат "Документы";
	ИначеЕсли ПланыВидовРасчета.ТипВсеСсылки().СодержитТип(ТипЗнч(Парам)) Тогда
		Возврат "ПланыВидовРасчета";
	ИначеЕсли ПланыВидовХарактеристик.ТипВсеСсылки().СодержитТип(ТипЗнч(Парам)) Тогда
		Возврат "ПланыВидовХарактеристик";
	ИначеЕсли ПланыОбмена.ТипВсеСсылки().СодержитТип(ТипЗнч(Парам)) Тогда
		Возврат "ПланыОбмена";
	ИначеЕсли ПланыСчетов.ТипВсеСсылки().СодержитТип(ТипЗнч(Парам)) Тогда
		Возврат "ПланыСчетов";
	ИначеЕсли БизнесПроцессы.ТипВсеСсылки().СодержитТип(ТипЗнч(Парам)) Тогда
		Возврат "БизнесПроцессы";
	ИначеЕсли Задачи.ТипВсеСсылки().СодержитТип(ТипЗнч(Парам)) Тогда
		Возврат "Задачи";
	//.......................................................
	КонецЕсли;
КонецФункции // ОпределитьТипКоллекции()

Функция ПолучитьМассивАктивныхПользователей() Экспорт
	Массив = Новый Массив;
	Попытка
		Соединения = ПолучитьСоединенияИнформационнойБазы();
		Для каждого ТекСоединение Из Соединения Цикл
			ТекЛогин = СокрЛП(ТекСоединение.Пользователь.Имя);
			ТекПользователь = Справочники.Пользователи.НайтиПоКоду(ТекЛогин);
			Если Массив.Найти(ТекПользователь) = Неопределено Тогда
				Массив.Добавить(ТекПользователь);
			КонецЕсли;
		КонецЦикла;
	Исключение
		Возврат Массив;
	КонецПопытки;
	Возврат Массив;
КонецФункции // ПолучитьМассивАктивныхПользователей()

Функция ПолучитьМассивАктивныхЛогинов() Экспорт
	Массив = Новый Массив;
	Попытка
		Соединения = ПолучитьСоединенияИнформационнойБазы();
		Для каждого ТекСоединение Из Соединения Цикл
			ТекЛогин = СокрЛП(ТекСоединение.Пользователь.Имя);
			Если Массив.Найти(ТекЛогин) = Неопределено Тогда
				Массив.Добавить(ТекЛогин);
			КонецЕсли;
		КонецЦикла;
	Исключение
		Возврат Массив;
	КонецПопытки;
	Возврат Массив;
КонецФункции // ПолучитьМассивАктивныхЛогинов()

Функция ПользовательСейчасВБазе(Пользователь, МассивАктивныхЛогинов) Экспорт
	Попытка
		Если МассивАктивныхЛогинов.Найти(СокрЛП(Пользователь.Код)) = Неопределено Тогда
			Возврат Ложь;
		Иначе
			Возврат Истина;
		КонецЕсли;
	Исключение
		Возврат Ложь;
	КонецПопытки;
КонецФункции // ПользовательСейчасВБазе()

Функция ПолучитьСтруктуруНастроекПользователя(Пользователь) Экспорт
	СтруктураНастроек = Новый Структура("Емайл,ТелефонРабочий,ТелефонСотовый,ТерминальныйСервер,ОповещатьПоЕмайл,ОповещатьНаСервер,ГруппаПользователя,АдминистраторФорума");
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиПользователейФорума.Емайл КАК Емайл,
	|	НастройкиПользователейФорума.ТелефонРабочий КАК ТелефонРабочий,
	|	НастройкиПользователейФорума.ТелефонСотовый КАК ТелефонСотовый,
	|	НастройкиПользователейФорума.ТерминальныйСервер КАК ТерминальныйСервер,
	|	НастройкиПользователейФорума.ОповещатьПоЕмайл КАК ОповещатьПоЕмайл,
	|	НастройкиПользователейФорума.ОповещатьНаСервер КАК ОповещатьНаСервер,
	|	НастройкиПользователейФорума.ГруппаПользователя КАК ГруппаПользователя,
	|	НастройкиПользователейФорума.АдминистраторФорума КАК АдминистраторФорума
	|ИЗ
	|	РегистрСведений.НастройкиПользователейФорума КАК НастройкиПользователейФорума
	|ГДЕ
	|	НастройкиПользователейФорума.Пользователь = &Пользователь";
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() > 0 Тогда
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(СтруктураНастроек, Выборка);
	КонецЕсли;
	Возврат СтруктураНастроек;
КонецФункции // ПолучитьСтруктуруНастроекПользователя()

Функция ПолучитьСоответствиеПользовательГруппа(Документ) Экспорт
	СоответствиеПользовательГруппа = Новый Соответствие;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВложенныйЗапрос.Пользователь КАК Пользователь,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.Группа ЕСТЬ NULL 
	|				ИЛИ ВложенныйЗапрос.Группа = НЕОПРЕДЕЛЕНО
	|				ИЛИ ВложенныйЗапрос.Группа = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|				ИЛИ ВложенныйЗапрос.Группа = """"
	|			ТОГДА ""Группа не установлена""
	|		ИНАЧЕ ВложенныйЗапрос.Группа
	|	КОНЕЦ КАК Группа
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВопросыПользователей.Автор КАК Пользователь,
	|		НастройкиПользователейФорума.ГруппаПользователя КАК Группа
	|	ИЗ
	|		Документ.ВопросыПользователей КАК ВопросыПользователей
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПользователейФорума КАК НастройкиПользователейФорума
	|			ПО ВопросыПользователей.Автор = НастройкиПользователейФорума.Пользователь
	|	ГДЕ
	|		ВопросыПользователей.Ссылка = &Документ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОтветыНаВопрос.Пользователь,
	|		НастройкиПользователейФорума.ГруппаПользователя
	|	ИЗ
	|		Документ.ВопросыПользователей КАК ВопросыПользователей
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветыНаВопрос КАК ОтветыНаВопрос
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиПользователейФорума КАК НастройкиПользователейФорума
	|				ПО ОтветыНаВопрос.Пользователь = НастройкиПользователейФорума.Пользователь
	|			ПО ВопросыПользователей.Ссылка = ОтветыНаВопрос.Вопрос
	|	ГДЕ
	|		ВопросыПользователей.Ссылка = &Документ) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Пользователь,
	|	ВложенныйЗапрос.Группа";
	Запрос.УстановитьПараметр("Документ", Документ);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СоответствиеПользовательГруппа.Вставить(Выборка.Пользователь, Выборка.Группа);
	КонецЦикла;
	Возврат СоответствиеПользовательГруппа;
КонецФункции // ПолучитьСоответствиеПользовательГруппа()

Функция ЭтоАдресВИнтернете(htmlElement) Экспорт
	Попытка
		Если СокрЛП(htmlElement.href) <> "" И Найти(НРег(htmlElement.href),"v8config") = 0 И СокрЛП(htmlElement.href) <> "about:blank" Тогда
			Возврат Истина;
		Иначе	
			Возврат Ложь;
		КонецЕсли;
	Исключение
		Возврат Ложь;
	КонецПопытки;
КонецФункции // ЭтоАдресВИнтернете()

Функция СвойКомментарий(Знач Документ, Знач ДатаКомментария)
	МенеджерЗаписи = РегистрыСведений.ОтветыНаВопрос.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период			= ДатаКомментария;
	МенеджерЗаписи.Вопрос 			= Документ;
	МенеджерЗаписи.Прочитать();
	Если МенеджерЗаписи.Выбран() Тогда
		Если МенеджерЗаписи.Пользователь = ПараметрыСеанса.ТекущийПользователь Тогда
			Возврат Истина;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции // СвойКомментарий()

Процедура ДобавитьКомментарий(НаВопрос, ТекстКомментария) Экспорт
	МенеджерЗаписи = РегистрыСведений.ОтветыНаВопрос.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период		= ТекущаяДата();
	МенеджерЗаписи.Вопрос 		= НаВопрос;
	МенеджерЗаписи.Комментарий 	= ФорматироватьСтрокуДляHTML(ТекстКомментария);
	МенеджерЗаписи.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	МенеджерЗаписи.Записать();
	МодульФорум.ОповеститьУчастниковОбсужденияВопроса(НаВопрос, ФорматироватьСтрокуДляКомментария(ТекстКомментария));
КонецПроцедуры // ДобавитьКомментарий()

Процедура ИзменитьКомментарий(Вопрос, Период, НовыйТекст) Экспорт
	Запись = РегистрыСведений.ОтветыНаВопрос.СоздатьМенеджерЗаписи();
	Запись.Вопрос = Вопрос;
	Запись.Период = Период;
	Запись.Прочитать();
	Запись.Комментарий 	 = ФорматироватьСтрокуДляHTML(НовыйТекст);
	Запись.ДатаИзменения = ТекущаяДата();
	Запись.Записать();
КонецПроцедуры // ИзменитьКомментарий()

Функция ЕстьПрикрепленныеСсылки(МенеджерЗаписи)
	Если МенеджерЗаписи.Выбран() Тогда
		Для Ном = 1 По 5 Цикл
			Если МенеджерЗаписи["СсылкаНаОбъект" + Ном] <> Неопределено И ЗначениеЗаполнено(МенеджерЗаписи["СсылкаНаОбъект" + Ном]) Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат Ложь;
КонецФункции // ЕстьПрикрепленныеСсылки()

Функция ЕстьПрикрепленныйФайл(МенеджерЗаписи)
	Если МенеджерЗаписи.Выбран() Тогда
		ДвоичныеДанные = МенеджерЗаписи.Файл.Получить();
		Если ДвоичныеДанные <> Неопределено Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	Возврат Ложь;
КонецФункции // ЕстьПрикрепленныйФайл()

Функция ПолучитьИнформациюОФайле(ПутьКФайлу) Экспорт
	Файл = Новый Файл(ПутьКФайлу);
	КомментарийКФайлу = Файл.Имя + " размер: " + Файл.Размер()+" байт; изменен: " + Файл.ПолучитьВремяИзменения() + "; сохранен в ИБ: " + ТекущаяДата();
	СтруктураВозврата = Новый Структура("КомментарийКФайлу, ПолноеИмяФайла, ИмяФайла, Размер", КомментарийКФайлу, Файл.ПолноеИмя, Файл.Имя, Файл.Размер()/1024/1024);
	Возврат СтруктураВозврата;
КонецФункции // ПолучитьИнформациюОФайле()

Функция ВыбратьФайл() Экспорт
	ДиалогФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогФайла.Фильтр = "Все файлы(*.*)|*.*";
	ДиалогФайла.Заголовок = "Выберите файл для вставки";
	Если ДиалогФайла.Выбрать() Тогда
		Возврат ДиалогФайла.ПолноеИмяФайла;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции // ВыбратьФайл

Функция ОткрытьФайлКомментария(Документ, Период) Экспорт
	МенеджерЗаписи = РегистрыСведений.ОтветыНаВопрос.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период	= Период;
	МенеджерЗаписи.Вопрос 	= Документ;
	МенеджерЗаписи.Прочитать();
	Если МенеджерЗаписи.Выбран() Тогда
		ДвоичныеДанные = МенеджерЗаписи.Файл.Получить();
		Если ДвоичныеДанные <> Неопределено Тогда
			времФайл = КаталогВременныхФайлов() + МенеджерЗаписи.ИмяФайла;
			ДвоичныеДанные.Записать(времФайл);
			ЗапуститьПриложение(времФайл);
		КонецЕсли;
	КонецЕсли;
КонецФункции // ОткрытьФайлКомментария()

Функция ЗаполненыНастройкиПользователяФорума() Экспорт
    Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиПользователейФорума.Емайл КАК Емайл,
	|	НастройкиПользователейФорума.ТелефонРабочий КАК ТелефонРабочий
	|ИЗ
	|	РегистрСведений.НастройкиПользователейФорума КАК НастройкиПользователейФорума
	|ГДЕ
	|	НастройкиПользователейФорума.Пользователь = &ТекПользователь";
	Запрос.УстановитьПараметр("ТекПользователь", ПараметрыСеанса.ТекущийПользователь);
	врТЗ = Запрос.Выполнить().Выгрузить();
	Если врТЗ.Количество() > 0 Тогда
		Если СокрЛП(врТЗ[0].Емайл) = "" ИЛИ СокрЛП(врТЗ[0].ТелефонРабочий) = "" Тогда
			Возврат Ложь;
		Иначе
			Возврат Истина;
		КонецЕсли;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции // ЗаполненыНастройкиПользователяФорума()

Функция ПолучитьRDPСессию(ИмяФайла) Экспорт
	Файл = Новый Файл(ИмяФайла);
	Если НЕ Файл.Существует() Тогда
		Возврат Неопределено;
	КонецЕсли;
	Текст = Новый ЧтениеТекста(ИмяФайла, КодировкаТекста.OEM);
	Стр = Текст.ПрочитатьСтроку();
	НомерСтроки = 1;
	Пока Стр <> Неопределено Цикл // строки читаются до символа перевода строки
		Если НомерСтроки = 2 Тогда
			Массив = МодульФорум.РазложитьСтрокуВМассив(Стр, " ");
			Для каждого Элем Из Массив Цикл
				Если Найти(Нрег(Элем), "rdp-tcp") Тогда
					Возврат СокрЛП(Элем);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Стр = Текст.ПрочитатьСтроку();
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
	Возврат Неопределено;
КонецФункции // ПолучитьRDPСессию()

Процедура Пауза(Секунд)
	oShell = Новый COMОбъект("WScript.Shell");
	Состояние("Пауза " + Секунд + " секунд");
	oShell.Run("ping 127.0.0.1 -w 1000 -n " + Секунд,0,1);
 	Состояние("");
КонецПроцедуры // Пауза()

Процедура ПодключитьсяКСессии(Логин) Экспорт
	Если Логин = Неопределено Тогда
		Предупреждение("Не удалось определить логин", 10);
		Возврат;
	КонецЕсли;
	врФайл = ПолучитьИмяВременногоФайла();
	Для каждого ТермСервер Из МассивТермСерверов Цикл
		КомандаСистемы("QUSER /SERVER:" + ТермСервер + " " + Логин + " > " + врФайл);
		ИД = ПолучитьRDPСессию(врФайл);
		Если ИД <> Неопределено Тогда
			КомандаСистемы("SHADOW " + ИД + " /SERVER:" + ТермСервер + "");
			Возврат;
		КонецЕсли;	
	КонецЦикла;
	Если ИД = Неопределено Тогда
		Предупреждение("Не удалось определить session ID", 10);
	КонецЕсли;
КонецПроцедуры // ПодключитьсяКСессии()

Процедура ВходОтПользователя(Логин) Экспорт
	ПользИБ = ПользователиИнформационнойБазы.НайтиПоИмени(Логин);
	Если ПользИБ = Неопределено Тогда
		Предупреждение("Не найден!");
		Возврат;
	КонецЕсли;
	Если ПользИБ.ПарольУстановлен Тогда
		Предупреждение("У пользователя установлен пароль (не доменная авторизация), а пароль нельзя менять!");
		Возврат;
	КонецЕсли;
	ПользИБ.АутентификацияСтандартная = Истина;
	ПользИБ.Записать();
    СтрокаЗапуска = КаталогПрограммы() + "1cv8.exe" + " ENTERPRISE /S " + ПараметрыСервераИБазы.Сервер + "\" + ПараметрыСервераИБазы.База + " /N " + ПользИБ.Имя + " /P ";
	ЗапуститьПриложение(СтрокаЗапуска);
	Пауза(10);
	ПользИБ.АутентификацияСтандартная = Ложь;
	ПользИБ.Записать();
КонецПроцедуры // ВходОтПользователя()

Процедура ОтправитьСообщениеПоФайлу(ФайлРассылки, Пользователь) Экспорт
	ТекстСообщения = "" + Пользователь + ", ";
	Если ВвестиСтроку(ТекстСообщения, "Сообщение для " + Пользователь, 0, Истина) Тогда
		врФайл = ПолучитьИмяВременногоФайла("bat");
		ЗапТекст = Новый ЗаписьТекста(врФайл, КодировкаТекста.OEM);
		Для каждого ТермСерв Из МассивТермСерверов Цикл
			ЗапТекст.ЗаписатьСтроку("MSG.EXE @" + ФайлРассылки + " /SERVER:" + ТермСерв + " " + ТекстСообщения);
		КонецЦикла;
		ЗапТекст.Закрыть();
		ЗапуститьПриложение(врФайл, , Ложь);
	КонецЕсли;
КонецПроцедуры // ОтправитьСообщениеПоФайлу()

Функция ПолучитьЕмайлПользователя(Пользователь) Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиПользователейФорума.Емайл КАК Емайл
	|ИЗ
	|	РегистрСведений.НастройкиПользователейФорума КАК НастройкиПользователейФорума
	|ГДЕ
	|	НастройкиПользователейФорума.Пользователь = &Пользователь";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат СокрЛП(Выборка.Емайл);
	КонецЦикла;
	Возврат Неопределено;
КонецФункции // ПолучитьЕмайлПользователя()

Функция ПолучитьТекстПисьма(Пользователь = Неопределено) Экспорт
	ПереводСтроки = "%0A";
	Если Пользователь = Неопределено ИЛИ Пользователь = Справочники.Пользователи.ПустаяСсылка() Тогда
		Возврат "Уважаемые коллеги!" + ПереводСтроки;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФИОФизЛицСрезПоследних.Имя КАК Имя,
		|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество
		|ИЗ
		|	РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОФизЛицСрезПоследних
		|ГДЕ
		|	ФИОФизЛицСрезПоследних.ФизЛицо = &ФизЛицо";
		Запрос.УстановитьПараметр("ФизЛицо", Пользователь.ФизЛицо);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Возврат "Добрый день, " + Выборка.Имя + " " + Выборка.Отчество + "!" + ПереводСтроки;
		КонецЦикла;
	КонецЕсли;
КонецФункции // ПолучитьТекстПисьма()

Процедура ДействиеНадПользователем(Пользователь) Экспорт
	СписокДействий = Новый СписокЗначений;
	СписокДействий.Добавить("ВходОтПользователя","Вход от пользователя");
	СписокДействий.Добавить("ОткрытьЭлемент","Открыть элемент");
	//СписокДействий.Добавить("ПользовательБД","Пользователь БД");
	СписокДействий.Добавить("ПодключитьсяКСессии","Подключиться к сессии");
	СписокДействий.Добавить("ОтправитьСообщение","Отправить сообщение на сервер");
	СписокДействий.Добавить("НаписатьПисьмо","Написать письмо");
	ВыбДействие = СписокДействий.ВыбратьЭлемент("Выберите действие");
	Если ВыбДействие = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ВыбЗнач 	= ВыбДействие.Значение;
	КодПольз 	= СокрЛП(Пользователь.Код);
	Если ВыбЗнач = "ВходОтПользователя" Тогда
		ВходОтПользователя(КодПольз);
	ИначеЕсли ВыбЗнач = "ОткрытьЭлемент" Тогда
		Пользователь.ПолучитьФорму().Открыть();
	ИначеЕсли ВыбЗнач = "ПодключитьсяКСессии" Тогда
		ПодключитьсяКСессии(КодПольз);
	ИначеЕсли ВыбЗнач = "ОтправитьСообщение" Тогда
		врФайл = ПолучитьИмяВременногоФайла();
		ЗапТекст = Новый ЗаписьТекста(врФайл, КодировкаТекста.ANSI);
		ЗапТекст.ЗаписатьСтроку(КодПольз);
		ЗапТекст.Закрыть();
		ОтправитьСообщениеПоФайлу(врФайл, Пользователь);
	ИначеЕсли ВыбЗнач = "НаписатьПисьмо" Тогда
		Емайл = ПолучитьЕмайлПользователя(Пользователь);
		Если Емайл <> Неопределено Тогда
			ТекстПисьма = "" + Пользователь + "!";
			СтрокаЗапуска = "mailto:" + Емайл + "?cc= &bcc= &subject=1С&body=" + ТекстПисьма;
			ЗапуститьПриложение(СтрокаЗапуска);
		КонецЕсли;
	ИначеЕсли ВыбЗнач = "ПользовательБД" Тогда
		ПользовательБД = ПользователиИнформационнойБазы.НайтиПоИмени(КодПольз);
		ОбъектПользователя = Пользователь.ПолучитьОбъект();
	КонецЕсли;
КонецПроцедуры // ДействиеНадПользователем()

Процедура НаписатьПисьмоВсемПользователям() Экспорт
    Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиПользователейФорума.Пользователь КАК Пользователь,
	|	НастройкиПользователейФорума.Емайл КАК Емайл
	|ИЗ
	|	РегистрСведений.НастройкиПользователейФорума КАК НастройкиПользователейФорума
	|ГДЕ
	|	(НЕ НастройкиПользователейФорума.Емайл ЕСТЬ NULL )
	|	И НастройкиПользователейФорума.Емайл <> """"
	|
	|УПОРЯДОЧИТЬ ПО
	|	НастройкиПользователейФорума.Пользователь.Наименование";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Ном = Выборка.Количество();
	Адреса = "";
	МассивАдресов = Новый Массив;
	Пока Выборка.Следующий() Цикл
		ОбработкаПрерыванияПользователя();
		Состояние(Ном);
		Емайл = СокрЛП(Выборка.Емайл);
		Если НЕ МодульФорум.КорректныйЕмайл(Емайл) Тогда
			Сообщить("У пользователя " + Выборка.Пользователь + " не верно заполнен Емайл (" + Выборка.Емайл + ")");
			Продолжить; 
		КонецЕсли;
		Если МассивАдресов.Найти(Емайл) = Неопределено Тогда
			Адреса = Адреса + Емайл + ";";
			МассивАдресов.Добавить(Емайл);
		КонецЕсли;
		Ном = Ном - 1;
	КонецЦикла;
	Если СокрЛП(Адреса) <> "" Тогда
		ТекстПисьма = "Уважаемые коллеги!
		|";
		СтрокаЗапуска = "mailto:" + Адреса + "?cc= &bcc= &subject=1С&body=" + ТекстПисьма;
		ЗапуститьПриложение(СтрокаЗапуска);
	КонецЕсли;
КонецПроцедуры // НаписатьПисьмоВсемПользователям()

Функция РазложитьСтрокуВМассив2(Строка, Разделитель = ",") Экспорт
    //Возврат Script2.eval("Split(""" + Строка + """, """ + Разделитель + """)").Выгрузить();
КонецФункции

Процедура ПоказатьХелп() Экспорт
	ДвоичныеДанные = ПолучитьМакет("Инструкции");
	Если ДвоичныеДанные = Неопределено Тогда
		Сообщить("Внешний файл отсутствует в базе!");
		Возврат;
	КонецЕсли; 
	времФайл = ПолучитьИмяВременногоФайла("pdf");
	ДвоичныеДанные.Записать(времФайл);
	ЗапуститьПриложение(времФайл);
КонецПроцедуры // ПоказатьХелп()

Функция ПолучитьТаблицуВопросовДляОзнакомления() Экспорт
    Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекПользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВопросыПользователей.Ссылка КАК Вопрос
	|ИЗ
	|	Документ.ВопросыПользователей КАК ВопросыПользователей
	|ГДЕ
	|	ВопросыПользователей.ОбязателенДляОзнакомления
	|	И (НЕ ВопросыПользователей.ПометкаУдаления)
	|	И (НЕ ВопросыПользователей.Ссылка В
	|				(ВЫБРАТЬ
	|					ВопросыФорумаДляОзнакомления.Вопрос
	|				ИЗ
	|					РегистрСведений.ВопросыФорумаДляОзнакомления КАК ВопросыФорумаДляОзнакомления
	|				ГДЕ
	|					ВопросыФорумаДляОзнакомления.Пользователь = &ТекПользователь))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВопросыПользователей.Дата";
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции // ПолучитьТаблицуВопросовДляОзнакомления()

Процедура ЗаполнитьМассивВопросовДляОзнакомления() Экспорт
	врТЗ = ПолучитьТаблицуВопросовДляОзнакомления();
	МассивВопросовДляОзнакомления = врТЗ.ВыгрузитьКолонку("Вопрос");
КонецПроцедуры // ЗаполнитьМассивВопросовДляОзнакомления()





////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ФОРМИРОВАНИЯ HTML-страниц
////////////////////////////////////////////////////////////////////////////////

Функция ПолучитьТекстСсылки(ID, Цвет = "000000", Текст = "", Жирный = Ложь) Экспорт
	Возврат "<a style='cursor: pointer;" + ?(Жирный,"font-weight: bold;","") + "color:#" + Цвет + "' id='" + ID + "' >" + Текст + "</a>";
КонецФункции // ПолучитьТекстСсылки()

Функция ПолучитьСтрокуСКомментариями(Знач Документ, ДанныеДокумента) Экспорт
	//ДанныеКомментария = ПолучитьДанныеКомментария(ДанныеДокумента);
	//ПП(ДанныеКомментария);
	СоответствиеПользовательГруппа = ПолучитьСоответствиеПользовательГруппа(Документ);
	Результат = "";
	НаборЗаписей = РегистрыСведений.ОтветыНаВопрос.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Вопрос.Установить(Документ);
	НаборЗаписей.Прочитать();
	Счетчик = 1;        // <a href='' ID='user_" + СокрЛП(Документ.Автор.Код) + "' >
	Для каждого Запись Из НаборЗаписей Цикл
		Результат = Результат + "<tr align='left' style='cursor:pointer;color:#3399CC;font-size:12;background-color:#FFFFFF'>
		|<td>" + Счетчик + ". <a href='' ID='user_" + СокрЛП(Запись.Пользователь.Код) + "'>" + Запись.Пользователь + "</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<FONT color='#999999'> " +
		?(Запись.ДатаИзменения = Дата(1,1,1),Формат(Запись.Период,"ДФ='dd.MM.yyyy hh:mm'"), Формат(Запись.ДатаИзменения,"ДФ='dd.MM.yyyy hh:mm'")) + "</FONT> &nbsp;&nbsp;&nbsp " + СоответствиеПользовательГруппа[Запись.Пользователь] + " <br> <FONT color='#000000'> " + ПолучитьТекстСоСмайликами(Запись.Комментарий) + "</FONT> <br><br> <div align='right'>" + 
		
		?(Счетчик = НаборЗаписей.Количество() И НЕ ДанныеДокумента.Снят И СвойКомментарий(Документ, Запись.Период),
		" <a href='' id='coment_change" + Счетчик + "' coment_text='" + Запись.Комментарий + 
		"' docNumber='" + ДанныеДокумента.Номер + "' period='" + Запись.Период + "' title='Изменить текст комментария' >Редактировать</a>&nbsp;&nbsp;","") + 
		
		
		?(НЕ ДанныеДокумента.Снят И СвойКомментарий(Документ, Запись.Период),
		" <a href='' id='addlinkcomment_" + Счетчик + "' docNumber='" + ДанныеДокумента.Номер + "' 
		|period='" + Запись.Период + "' title='Добавить ссылку на объект из базы'>Вставить объект</a>&nbsp;&nbsp;
		|
		| <a href='' id='addlinkvopros_" + Счетчик + "' docNumber='" + ДанныеДокумента.Номер + "' 
		|period='" + Запись.Период + "' title='Добавить ссылку на другой вопрос форума'>Ссылка на другой вопрос</a>&nbsp;&nbsp;
		|
		| <a href='' id='addfile_" + Счетчик + "' docNumber='" + ДанныеДокумента.Номер + "' 
		|period='" + Запись.Период + "' title='Прикрепить файл' >Добавить файл</a>&nbsp;&nbsp;","") + 
		
		
		?(ДанныеДокумента.Снят,"","<a href='' ID='comment_num" + Счетчик + "' coment_Quote='" + ФорматироватьСтрокуДляКомментария(Запись.Комментарий) + "' " + 
		"onclick=""CommentQuote('comment_num" + Счетчик + "')"" title='Цитировать текст комментария' >Цитировать</a>&nbsp;&nbsp;") + 
		?(ДанныеДокумента.Снят,"","<a href='' " + 
		"onclick=""CommentName('" + Запись.Пользователь +  ", ')"" title='Вставить в поле ответа имя автора комментария'>Имя</a>") + 
		"</div> " + 
		ПолучитьСтрокуПрикрепленныхОбъектовККомментарию(Документ, Запись.Период, Счетчик) + "
		|</td>";
		Счетчик = Счетчик + 1;
	КонецЦикла;
	Результат = Результат + ?(ДанныеДокумента.ТребуетсяОзнакомление,"
	|<tr align='left' style='cursor:pointer;color:#FF0000;font-size:14'>
	|<td>
	|<input type='checkbox' checked>С данным вопросом ознакомлен&nbsp;&nbsp <button id='podtverjdenie' title='Нажмите для потверждения'>Подтверждаю</button>
	|</td>
	|","");
	Возврат Результат;
КонецФункции // ПолучитьСтрокуСКомментариями()

Функция ПолучитьТекстСнятияВопроса(ДанныеДокумента) Экспорт
	Если ДанныеДокумента.Снят Тогда
		Возврат "<div align='center'><FONT color='#008000'> <b> Вопрос снят </b><FONT> &nbsp;&nbsp;&nbsp;&nbsp; <a href='' id='close_page' title='Закрыть страницу'>ЗАКРЫТЬ</a> </div>";
	Иначе
		Если ДанныеДокумента.СвойВопрос ИЛИ АдминНаФоруме Тогда
			Возврат "
			|<div align='center'>
			|<a href='' onclick=""SetFocusOtvet()"" title='Перейти к полю ввода ответа'>ОТВЕТИТЬ</a>&nbsp;&nbsp;&nbsp;&nbsp;
			|<a href='' id='close_vopros' docNumber='" + ДанныеДокумента.Номер + "' title='Снять вопрос с обсуждения'>СНЯТЬ ВОПРОС</a>&nbsp;&nbsp;&nbsp;&nbsp;
			|<a href='' id='refresh_page' docNumber='" + ДанныеДокумента.Номер + "' title='Обновить страницу'>ОБНОВИТЬ</a>&nbsp;&nbsp;&nbsp;&nbsp;
			|<a href='' id='close_page' title='Закрыть страницу'>ЗАКРЫТЬ</a>&nbsp;&nbsp;&nbsp;&nbsp;
			|</div>";
		Иначе
			Возврат 
			"<div align='left'>
			|<a onclick=""SetFocusOtvet()"" href='' title='Перейти к полю ввода ответа'>ОТВЕТИТЬ</a>&nbsp;&nbsp;&nbsp;&nbsp;
			|<a href='' id='refresh_page' docNumber='" + ДанныеДокумента.Номер + "' title='Обновить страницу'>ОБНОВИТЬ</a>&nbsp;&nbsp;&nbsp;&nbsp;
			|<a href='' id='close_page' title='Закрыть страницу'>ЗАКРЫТЬ</a>&nbsp;&nbsp;&nbsp;&nbsp;
			|</div>";
		КонецЕсли;
	КонецЕсли;
КонецФункции // ПолучитьТекстСнятияВопроса()

Функция ФорматироватьСтрокуДляHTML(стр) Экспорт
	RegExp.Pattern = Символы.ПС;
	стр = СокрЛП(RegExp.Replace(стр, "<br>"));
	RegExp.Pattern = "'";
	стр = СокрЛП(RegExp.Replace(стр, ""));
	Возврат стр;
КонецФункции // ФорматироватьСтрокуДляHTML()

Функция ФорматироватьСтрокуДляКомментария(Знач стр) Экспорт
	RegExp.Pattern = "<br>";
	Возврат СокрЛП(RegExp.Replace(стр, Символы.ПС));
КонецФункции // ФорматироватьСтрокуДляКомментария()

Функция ПолучитьТекстСоСмайликами(Знач стрТекст) Экспорт
	ПолеHTML = ЭтотОбъект.ПолучитьФорму().ЭлементыФормы.Поле_0;
	НовТекст = стрТекст;
	Ном = 49;
	Пока Ном >= 0 Цикл
		Если Найти(НовТекст, "smile_") = 0 Тогда
			Прервать;
		КонецЕсли;
		ИмяСмайла = "smile_" + Ном;
		RegExp.Pattern 	= ИмяСмайла;
		ТегКартинки 	= "<img src='" + ПолеHTML.ПолучитьURL(Метаданные.ОбщиеКартинки[ИмяСмайла]) + "'>";
		НовТекст 		= RegExp.Replace(НовТекст, ТегКартинки);
		Ном = Ном - 1;
	КонецЦикла;
	Возврат НовТекст;
КонецФункции // ПолучитьТекстСоСмайликами()

Процедура ПрочитатьКоличествоСмайликов()
	Попытка
		КоличествоСмайликов = Число(Справочники.НастройкиФорума.КоличествоСмайликов.Наименование);
		Если КоличествоСмайликов > 50 Тогда
			КоличествоСмайликов = 50;
		КонецЕсли;
	Исключение
		КоличествоСмайликов = 5;
	КонецПопытки;
КонецПроцедуры // ПрочитатьКоличествоСмайликов()

Функция ПолучитьПанельСмайликов()
	ПолеHTML = ПолучитьФорму("Форма").ЭлементыФормы.Поле_0;
	СтрокаСмайлов = "<tr>";
	Для Ном = 0 по КоличествоСмайликов - 1 Цикл
		ИмяСмайла = "smile_" + Ном;
		СтрокаСмайлов = СтрокаСмайлов + "<td onMouseOver=""lightOnColor('" + ИмяСмайла + "','#D8D0A2')"" ><img style='cursor: pointer;' id='" + ИмяСмайла + 
		"' src='" + ПолеHTML.ПолучитьURL(Метаданные.ОбщиеКартинки[ИмяСмайла]) + "'></td>";
		Если (Ном + 1) % 10 = 0 Тогда
			СтрокаСмайлов = СтрокаСмайлов + "</tr><tr>";
		КонецЕсли;
	КонецЦикла;
	СтрокаСмайлов = СтрокаСмайлов + "</tr>";
	Результат = 
	"<table border='0' style='position: absolute; left: 1;'>
	|<tr>
	|<td 
	|	onMouseOver=""showLayer('PanelSML');lightOn('menu_smile')"" 
	|	onMouseOut=""hiddenLayer('PanelSML');lightOff('menu_smile')"" 
	|>
	|<img style='cursor: pointer;' id='menu_smile' src='" + ПолеHTML.ПолучитьURL(Метаданные.ОбщиеКартинки["smile_1"]) + "'>
	|</td>
	|
	|<td width='0px' valign='top'>
	|<table class='submenu' id='PanelSML' onMouseOver=""showLayer('PanelSML')"" onMouseOut=""hiddenLayer('PanelSML');""  >
	|
	|" + СтрокаСмайлов + "
	|
	|</table>
	|</td>
	|
	|</tr>
	|</table>
	|";
	Возврат Результат;
КонецФункции // ПолучитьПанельСмайликов()

Функция ПолучитьТекстПанелиОтвета()
	Возврат 
	"<div style='cursor: pointer;'> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + ПолучитьПанельСмайликов() + "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
	|<B><a style='color:#000000;text-decoration:none' href='' title='Полужирный' onclick=""replaceSelectedText('B','MyRepl')"" ><B>Ж</B></a>&nbsp;
	|	<a style='color:#000000;text-decoration:none' href='' title='Курсив' onclick=""replaceSelectedText('I','MyRepl')"" ><I>К</I></a>&nbsp;
	|	<a style='color:#000000;text-decoration:none' href='' title='Подчеркнутый' onclick=""replaceSelectedText('U','MyRepl')"" ><U>Ч</U></a>&nbsp;
	|	<a style='color:#000000;text-decoration:none' href='' title='Перечеркнутый' onclick=""replaceSelectedText('S','MyRepl')"" ><S>П</S></a>&nbsp;
	|	<a style='color:#000000;text-decoration:none' href='' title='Оформление текста в виде цитаты' onclick=""replaceSelectedText('QUOTE','MyRepl')"" >Ц</a>&nbsp;
	|	<a style='color:#000000;text-decoration:none' href='' title='Ввод гиперссылки' onclick=""InsertHyperLink()"" >Ссылка</a>&nbsp;
	|	<a style='color:#000000;text-decoration:none' href='' title='Скопировать в комментарий выделенный на странице текст' onclick=""SetCommentSelText()"" >Копир</a>&nbsp;
	|</B>" + ПолучитьТекстКолорБокса() + "
	|
	|</div>
	|
	|<a name='labelotvet'></a>
	|<table border='10' frame='border' width='100%' cellpadding='10' cellspacing='0' bordercolor='#F0F0F0'>
	|<tr><td>
	|<textarea name='comment' cols='80' rows='10' tabindex='1'></textarea> 
	|<br><br>
	|<button id='add_comment' title='Записать комментарий'>Ответить</button>
	|</td></tr>
	|</table>
	|<div align='center'>
	|
	|</div>
	|";
КонецФункции // ПолучитьТекстПанелиОтвета()

Функция ПолучитьПолеВводаОтвета(ДанныеДокумента) Экспорт
	Если ДанныеДокумента.Снят Тогда
		Возврат "<div align='center'><FONT color='#008000'> <b> Вопрос снят </b><FONT> &nbsp;&nbsp;&nbsp;&nbsp;  <a href='' id='close_page' title='Закрыть страницу'>ЗАКРЫТЬ</a></div>";
	Иначе
		Возврат ТекстПанелиОтвета;
	КонецЕсли;
КонецФункции // ПолучитьПолеВводаОтвета()

Функция ПолучитьСтрокуПрикрепленныхОбъектовКВопросу(Знач Документ, ДанныеДокумента) Экспорт
	Результат = "";
	// Ссылки
	Если ДанныеДокумента.КоличествоСсылок > 0 Тогда
		Результат = "<table border='0'> <th align = 'left'>Прикрепленные ссылки:</th>";
		Для каждого СтрокаТЧ Из Документ.ТЧСсылки Цикл
			Результат = Результат + "<tr><td onMouseOver=""lightOnColor('openObject_" + СтрокаТЧ.НомерСтроки + 
			"','#CCFFFF')"" onMouseOut=""lightOff('openObject_" + СтрокаТЧ.НомерСтроки + "')"" " + 
			"><a style='text-decoration:underline' href='' ID='openObject_" + СтрокаТЧ.НомерСтроки + "' " + 
			"metaType='" + ОпределитьТипКоллекции(СтрокаТЧ.СсылкаНаОбъект) + "' " + 
			"metaName='" + СтрокаТЧ.СсылкаНаОбъект.Метаданные().Имя + "' " + 
			"uid='" + СтрокаТЧ.СсылкаНаОбъект.УникальныйИдентификатор() + "' >" + 
			СтрокаТЧ.СсылкаНаОбъект + "</a></td></tr>";
		КонецЦикла;
		Результат = Результат + "</table>";
	КонецЕсли;
	// Файлы
	Если Документ.ТЧФайлы.Количество() > 0 Тогда
		Результат = Результат + "<table border='0'> <th align = 'left'>Прикрепленные файлы:</th>";
		Для каждого СтрокаТЧ Из Документ.ТЧФайлы Цикл
			Результат = Результат + "<tr><td onMouseOver=""lightOnColor('openFile_" + СтрокаТЧ.НомерСтроки + 
			"','#CCFFFF')"" onMouseOut=""lightOff('openFile_" + СтрокаТЧ.НомерСтроки + "')""> " + 
			"<a style='text-decoration:underline' href='' ID='openFile_" + СтрокаТЧ.НомерСтроки + "' " + 
			"docNumber='" + ДанныеДокумента.Номер + "' " + 
			"fileName='" + СтрокаТЧ.ИмяФайла + "'> " + 
			"  " + ?(СокрЛП(СтрокаТЧ.Комментарий)<>"",СтрокаТЧ.Комментарий,СтрокаТЧ.ИмяФайла) + "</a> </td></tr>";
		КонецЦикла;
		Результат = Результат + "</table>";
	КонецЕсли;
	Результат = Результат + "<div align='right'>" + 
	
	?( ДанныеДокумента.СвойВопрос ИЛИ АдминНаФоруме,"<a href='' ID='opendocument' docNumber='" + ДанныеДокумента.Номер + "'>Открыть вопрос</a>&nbsp;&nbsp;","") +
	
	?(ДанныеДокумента.Снят,"","<a href='' ID='comment_num0' coment_Quote='" + ДанныеДокумента.Вопрос + "' "
	"onclick=""CommentQuote('comment_num0')"" >Цитировать</a>&nbsp;&nbsp;") + 
	
	?(ДанныеДокумента.Снят,"","<a href='' " + 
	"onclick=""CommentName('" + ДанныеДокумента.Автор +  ", ')"" >Имя</a>") + 
	"</div>";
	Возврат Результат;
КонецФункции // ПолучитьСтрокуПрикрепленныхОбъектовКВопросу()

Функция ПолучитьСтрокуПрикрепленныхОбъектовККомментарию(Документ, Период, НомерКомментария)
	Результат = "";
	// Ссылки
	МенеджерЗаписи = РегистрыСведений.ОтветыНаВопрос.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Вопрос 	= Документ;
	МенеджерЗаписи.Период	= Период;
	МенеджерЗаписи.Прочитать();
	Если ЕстьПрикрепленныеСсылки(МенеджерЗаписи) Тогда
		Результат = "<table border='0' cellspacing='5'> <th align = 'left'>Прикрепленные ссылки:</th>";
		Для Ном = 1 По 5 Цикл
			СсылкаНаОбъект = МенеджерЗаписи["СсылкаНаОбъект" + Ном];
			Если СсылкаНаОбъект <> Неопределено И ЗначениеЗаполнено(СсылкаНаОбъект) Тогда
				Результат = Результат + "<tr><td onMouseOver=""lightOnColor('openComentObject_" + НомерКомментария + "_" + Ном +  
				"','#CCFFFF')"" onMouseOut=""lightOff('openComentObject_" + НомерКомментария + "_" + Ном +  "')"" " + 
				"><a style='text-decoration:underline' href='' ID='openComentObject_" + НомерКомментария + "_" + Ном + "' " + 
				"metaType='" + ОпределитьТипКоллекции(СсылкаНаОбъект) + "' " + 
				"metaName='" + СсылкаНаОбъект.Метаданные().Имя + "' " + 
				"uid='" + СсылкаНаОбъект.УникальныйИдентификатор() + "'>" + 
				СсылкаНаОбъект + "</a></td>" + 
				?(СвойКомментарий(Документ, Период) И НЕ Документ.Снят,
				"<td> <a href='' id='changelinkcomment" + НомерКомментария + "_" + Ном +  "' docNumber='" + Документ.Номер + "' 
				|period='" + Период + "'title='Выбрать другой объект или удалить' >  Изменить </a>
				|</td>","") + 
				"</tr>";
			КонецЕсли;
		КонецЦикла;
		Результат = Результат + "</table>";
	КонецЕсли;
	
	// Файлы
	Если ЕстьПрикрепленныйФайл(МенеджерЗаписи) Тогда
		Результат = Результат + 
		"&nbsp<FONT color='000000'><B>Прикрепленный файл:</B></FONT>
		|<a style='text-decoration:underline' href='' ID='openComentFile_" + НомерКомментария + "' " + 
		"docNumber='" + Документ.Номер + "' " + 
		"period='" + Период + "' " + 
		"title='Открыть прикрепленный файл' >  " + МенеджерЗаписи.ИмяФайла + "</a>";
	КонецЕсли;
	Возврат Результат;
КонецФункции // ПолучитьСтрокуПрикрепленныхОбъектовККомментарию()

Функция ПолучитьТекстКолорБокса()
	Возврат 
	"<SELECT onChange='SelectTextColor();' id='colorbox' title='Цвет текста'> 
	|<OPTION style='background-color: #FFFFFF  value='000000' selected>- выбор цвета -</OPTION> 
	|<OPTION style='background-color: #993300' value=#993300>Коричневый</OPTION> 
	|<OPTION style='background-color: #0000FF' value=0000FF>Синий</OPTION> 
	|<OPTION style='background-color: #FF6600' value=FF6600>Оранжевый</OPTION> 
	|<OPTION style='background-color: #008000' value=008000>Зеленый</OPTION> 
	|<OPTION style='background-color: #FF0000' value=FF0000>Красный</OPTION> 
	|<OPTION style='background-color: #A6CAF0' value=A6CAF0>Голубой</OPTION> 
	|<OPTION style='background-color: #FFCC00' value=FFCC00>Желтый</OPTION> 
	|<OPTION style='background-color: #00FFFF' value=00FFFF>Циан</OPTION> 
	|<OPTION style='background-color: #EE82EE' value=EE82EE>Фиолетовый</OPTION> 
	|</SELECT>";
КонецФункции // ПолучитьТекстКолорБокса()




////////////////////////////////////////////////////////////////////////////////
// ОСНОВНАЯ ЧАСТЬ
////////////////////////////////////////////////////////////////////////////////

АдминНаФоруме 	= МодульФорум.ПолныеПраваНаФоруме();
КоличествоСмайликов = 5;
МассивВопросовДляОзнакомления = Новый Массив;