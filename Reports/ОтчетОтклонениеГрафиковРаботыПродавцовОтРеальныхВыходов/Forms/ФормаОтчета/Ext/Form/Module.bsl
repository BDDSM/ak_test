
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//Вызывать "При открытии", для переопределения локальных пользовательских настроек
	ЗаполнениеОтветственныхПользователейСервер();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	//Если ТекущаяСтраница.Имя = "ГруппаТаблицаКЗаписи" Тогда
	//	Состояние("Формирование таблицы");
	//	ТаблицаКЗаписи.Очистить();
	//	СформироватьОтчетВТаблицу();
	//КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаКЗаписи

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для Каждого СтрокаТаб Из ТаблицаКЗаписи Цикл
		СтрокаТаб.Записать = Ложь;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого СтрокаТаб Из ТаблицаКЗаписи Цикл
		СтрокаТаб.Записать = Истина;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	
	ТаблицаКЗаписи.Очистить();
	СформироватьОтчетВТаблицу();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанными(Команда)
	
	//ТаблицаКЗаписи.Очистить();
	//СформироватьОтчетВТабДок();
	СкомпоноватьРезультат();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеВЛистыСервер()
	
	УстановитьПривилегированныйРежим(Истина);
	
	//ТабЗначений = РеквизитФормыВЗначение("ТаблицаКЗаписи");
	ТабЗначений = ТаблицаКЗаписи.Выгрузить();
	КолвоСтрок = ТабЗначений.Количество();
	Для н = 1 По КолвоСтрок Цикл
		Если ТабЗначений[КолвоСтрок - н].Записать = Ложь
			ИЛИ НЕ ЗначениеЗаполнено(ТабЗначений[КолвоСтрок - н].ЛистУчета) Тогда
			ТабЗначений.Удалить(КолвоСтрок - н);
		КонецЕсли;	
	КонецЦикла;	
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	Таб.ЛистУчета,
	               |	Таб.Сотрудник,
	               |	Таб.Свойство_Гр,
	               |	Таб.КоличествоЧасов_Гр,
	               |	Таб.ЭкстренныйВызов_Гр
	               |ПОМЕСТИТЬ ВТ_Данные
	               |ИЗ
	               |	&Таб КАК Таб
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Данные.ЛистУчета КАК ЛистУчета,
	               |	ВТ_Данные.Сотрудник,
	               |	ВТ_Данные.Свойство_Гр,
	               |	ВТ_Данные.КоличествоЧасов_Гр,
	               |	ВТ_Данные.ЭкстренныйВызов_Гр,
	               |	ВЫБОР
	               |		КОГДА ЛистУчетаДоки.Дата >= ДАТАВРЕМЯ(2017, 10, 1)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК НоваяСистема,
	               |	ЛистУчетаДоки.Дата
	               |ИЗ
	               |	ВТ_Данные КАК ВТ_Данные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЛистУчета КАК ЛистУчетаДоки
	               |		ПО ВТ_Данные.ЛистУчета = ЛистУчетаДоки.Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ЛистУчета
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_Данные";
				   
	Запрос.УстановитьПараметр("Таб", ТабЗначений);
	Выборка = Запрос.Выполнить().Выбрать();
	ТабТипыНочь = Новый ТаблицаЗначений();
	ТабТипыНочь.Колонки.Добавить("ТипЧислом");
	ТабТипыНочь.Колонки.Добавить("ТипСтрокой");
	СтрокаДоб = ТабТипыНочь.Добавить();
	СтрокаДоб.ТипЧислом = 5;
	СтрокаДоб.ТипСтрокой = "Ночной продавец";
	СтрокаДоб = ТабТипыНочь.Добавить();
	СтрокаДоб.ТипЧислом = 6;
	СтрокаДоб.ТипСтрокой = "Старший ночной продавец";
	
	Пока Выборка.СледующийПоЗначениюПоля("ЛистУчета") Цикл
		ДокОбъект = Выборка.ЛистУчета.ПолучитьОбъект();
		ТабПродавцы = ДокОбъект.Продавцы.Выгрузить();
		Пока Выборка.Следующий() Цикл
			СтрокаТаб = ТабПродавцы.Найти(Выборка.Сотрудник, "Продавец");
			Если СтрокаТаб = Неопределено И ЗначениеЗаполнено(Выборка.Свойство_Гр) Тогда
				СтрокаТаб = ТабПродавцы.Добавить();
				СтрокаТаб.Продавец = Выборка.Сотрудник;
				СтрокаТаб.ДобавилПользовательИзТабеля = ПараметрыСеанса.ТекущийПользователь;
			КонецЕсли;
			Если СтрокаТаб <> Неопределено Тогда
				//+++АК MIND 2017.12.17 если сотрудник переходит из дня в ночь, или наоборот, то нужно убрать уже установленные часы, чтобы даты прихода/ухода тоже перезаписались
				Если (ТабТипыНочь.Найти(Выборка.Свойство_Гр, "ТипСтрокой") = Неопределено
					И ТабТипыНочь.Найти(СтрокаТаб.Пч, "ТипЧислом") <> Неопределено)
					ИЛИ (ТабТипыНочь.Найти(Выборка.Свойство_Гр, "ТипСтрокой") <> Неопределено
					И ТабТипыНочь.Найти(СтрокаТаб.Пч, "ТипЧислом") = Неопределено) Тогда
					СтрокаТаб.КоличествоЧасов = 0;
					СтрокаТаб.ДатаПрихода = '00010101';
					СтрокаТаб.ДатаУхода = '00010101';
				КонецЕсли;	
				//---АК MIND 
				СтрокаТаб.ЭкстренныйВызов = Выборка.ЭкстренныйВызов_Гр;
				Если Выборка.Свойство_Гр = "Частичный" Тогда
					СтрокаТаб.Пч = 1;
					Если Выборка.НоваяСистема Тогда
						Если Выборка.КоличествоЧасов_Гр <> СтрокаТаб.КоличествоЧасов Тогда
							СтрокаТаб.ДатаПрихода = НачалоДня(Выборка.Дата) + 22*3600 - Выборка.КоличествоЧасов_Гр * 3600;
							СтрокаТаб.ДатаУхода = НачалоДня(Выборка.Дата) + 22*3600;
						КонецЕсли;
					КонецЕсли;	
					СтрокаТаб.КоличествоЧасов = Выборка.КоличествоЧасов_Гр;
				ИначеЕсли Выборка.Свойство_Гр = "Старший продавец" Тогда
					СтрокаТаб.Пч = 2;
					Если Выборка.НоваяСистема Тогда
						Если Выборка.КоличествоЧасов_Гр <> СтрокаТаб.КоличествоЧасов Тогда
							СтрокаТаб.ДатаПрихода = НачалоДня(Выборка.Дата) + 22*3600 - Выборка.КоличествоЧасов_Гр * 3600;
							СтрокаТаб.ДатаУхода = НачалоДня(Выборка.Дата) + 22*3600;
						КонецЕсли;
					КонецЕсли;
					СтрокаТаб.КоличествоЧасов = Выборка.КоличествоЧасов_Гр;
				ИначеЕсли Выборка.Свойство_Гр = "Практикант" Тогда
					СтрокаТаб.Пч = 3;
					Если Выборка.НоваяСистема Тогда
						Если Выборка.КоличествоЧасов_Гр <> СтрокаТаб.КоличествоЧасов Тогда
							СтрокаТаб.ДатаПрихода = НачалоДня(Выборка.Дата) + 22*3600 - Выборка.КоличествоЧасов_Гр * 3600;
							СтрокаТаб.ДатаУхода = НачалоДня(Выборка.Дата) + 22*3600;
						КонецЕсли;
					КонецЕсли;
					СтрокаТаб.КоличествоЧасов = Выборка.КоличествоЧасов_Гр;
				ИначеЕсли Выборка.Свойство_Гр = "Стажер" Тогда
					СтрокаТаб.Пч = 4;
					Если Выборка.НоваяСистема Тогда
						Если Выборка.КоличествоЧасов_Гр <> СтрокаТаб.КоличествоЧасов Тогда
							СтрокаТаб.ДатаПрихода = НачалоДня(Выборка.Дата) + 22*3600 - Выборка.КоличествоЧасов_Гр * 3600;
							СтрокаТаб.ДатаУхода = НачалоДня(Выборка.Дата) + 22*3600;
						КонецЕсли;
					КонецЕсли;
					СтрокаТаб.КоличествоЧасов = Выборка.КоличествоЧасов_Гр;
				ИначеЕсли Выборка.Свойство_Гр = "Ночной продавец" Тогда
					СтрокаТаб.Пч = 5;
					Если Выборка.НоваяСистема Тогда
						Если Выборка.КоличествоЧасов_Гр <> СтрокаТаб.КоличествоЧасов Тогда
							СтрокаТаб.ДатаПрихода = НачалоДня(Выборка.Дата) + 20*3600;
							СтрокаТаб.ДатаУхода = НачалоДня(Выборка.Дата) + 20*3600 + Выборка.КоличествоЧасов_Гр * 3600;
						КонецЕсли;
					КонецЕсли;
					СтрокаТаб.КоличествоЧасов = Выборка.КоличествоЧасов_Гр;
				ИначеЕсли Выборка.Свойство_Гр = "Старший ночной продавец" Тогда
					СтрокаТаб.Пч = 6;
					Если Выборка.НоваяСистема Тогда
						Если Выборка.КоличествоЧасов_Гр <> СтрокаТаб.КоличествоЧасов Тогда
							СтрокаТаб.ДатаПрихода = НачалоДня(Выборка.Дата) + 20*3600;
							СтрокаТаб.ДатаУхода = НачалоДня(Выборка.Дата) + 20*3600 + Выборка.КоличествоЧасов_Гр * 3600;
						КонецЕсли;
					КонецЕсли;
					СтрокаТаб.КоличествоЧасов = Выборка.КоличествоЧасов_Гр;	
				ИначеЕсли Выборка.Свойство_Гр = "Кассир" Тогда
					СтрокаТаб.Пч = 7;
					Если Выборка.НоваяСистема Тогда
						Если Выборка.КоличествоЧасов_Гр <> СтрокаТаб.КоличествоЧасов Тогда
							СтрокаТаб.ДатаПрихода = НачалоДня(Выборка.Дата) + 22*3600 - Выборка.КоличествоЧасов_Гр * 3600;
							СтрокаТаб.ДатаУхода = НачалоДня(Выборка.Дата) + 22*3600;
						КонецЕсли;
					КонецЕсли;
					СтрокаТаб.КоличествоЧасов = Выборка.КоличествоЧасов_Гр;	
				ИначеЕсли Выборка.Свойство_Гр = "Полный" Тогда
					СтрокаТаб.Пч = 0;
					Если Выборка.НоваяСистема Тогда
						Если Выборка.КоличествоЧасов_Гр <> СтрокаТаб.КоличествоЧасов Тогда
							СтрокаТаб.ДатаПрихода = НачалоДня(Выборка.Дата) + 22*3600 - Выборка.КоличествоЧасов_Гр * 3600;
							СтрокаТаб.ДатаУхода = НачалоДня(Выборка.Дата) + 22*3600;
						КонецЕсли;
					КонецЕсли;
					СтрокаТаб.КоличествоЧасов = Выборка.КоличествоЧасов_Гр;
				Иначе
					Если НЕ ЗначениеЗаполнено(Выборка.Свойство_Гр) Тогда
						ТабПродавцы.Удалить(СтрокаТаб);
					КонецЕсли;	
				КонецЕсли;
				
			КонецЕсли;	
		КонецЦикла;
		ДокОбъект.Продавцы.Загрузить(ТабПродавцы);
		ДокОбъект.ДополнительныеСвойства.Вставить("ВыполняетсяЗаписьТолькоПродавцов", Истина);
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьОтчетВТаблицу()
	
	//Макет компоновки 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Отчеты.ОтчетОтклонениеГрафиковРаботыПродавцовОтРеальныхВыходов.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных")
													, Отчет.КомпоновщикНастроек.ПолучитьНастройки(),,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	//Компоновка данных
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	
	//Вывод результата
	ТабРезультат = Новый ТаблицаЗначений();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТабРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	Если ТабРезультат.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	МассивТТ = Новый Массив();
	МинДата = '39990101';
	МаксДата = '00010101';
	Для Каждого СтрокаТаб Из ТабРезультат Цикл
		МинДата = Мин(СтрокаТаб.Период, МинДата);
		МаксДата = Макс(СтрокаТаб.Период, МаксДата);
		Если ЗначениеЗаполнено(СтрокаТаб.ТТ_Гр) Тогда
			МассивТТ.Добавить(СтрокаТаб.ТТ_Гр);
		ИначеЕсли ЗначениеЗаполнено(СтрокаТаб.ТТ_ЛУ) Тогда
			МассивТТ.Добавить(СтрокаТаб.ТТ_ЛУ);	
		КонецЕсли;	
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЛистУчета.Ссылка,
	               |	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) КАК Дата,
	               |	ЛистУчета.ТорговаяТочка
	               |ИЗ
	               |	Документ.ЛистУчета КАК ЛистУчета
	               |ГДЕ
	               |	ЛистУчета.Проведен = ИСТИНА
	               |	И НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) МЕЖДУ &ДатаНач И &ДатаКон
	               |	И ЛистУчета.ТорговаяТочка В(&МассивТТ)";
				   
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(МинДата));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(МаксДата));
	Запрос.УстановитьПараметр("МассивТТ", МассивТТ);
	ТабКеш = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаТаб Из ТабРезультат Цикл
		СтрокаДоб = ТаблицаКЗаписи.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДоб, СтрокаТаб);
		//СтрокаДоб.Записать = Истина;
		СтрокиКеш = Новый Массив();
		Если ЗначениеЗаполнено(СтрокаТаб.ТТ_Гр) Тогда
			СтрокиКеш = ТабКеш.НайтиСтроки(Новый Структура("Дата, ТорговаяТочка", СтрокаТаб.Период, СтрокаТаб.ТТ_Гр));
		ИначеЕсли ЗначениеЗаполнено(СтрокаТаб.ТТ_ЛУ) Тогда
			СтрокиКеш = ТабКеш.НайтиСтроки(Новый Структура("Дата, ТорговаяТочка", СтрокаТаб.Период, СтрокаТаб.ТТ_ЛУ));
		КонецЕсли;
		Если СтрокиКеш.Количество() > 0 Тогда
			СтрокаДоб.ЛистУчета = СтрокиКеш[0].Ссылка;
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаписатьДанныеВЛисты(Команда)
	
	Ответ = Вопрос("Записать отмеченные строки в листы учета?", РежимДиалогаВопрос.ДаНет, 120, КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;	
	
	ЗаписатьДанныеВЛистыСервер();
	ТаблицаКЗаписи.Очистить();
	СформироватьОтчетВТаблицу();
	
КонецПроцедуры

&Насервере
Процедура ЗаполнениеОтветственныхПользователейСервер()
	
	РегистрыСведений.ПользователиПоЦФО.ЗаполнитьПользовательскиеОтборыПоСтруктуреПодчинения(Отчет.КомпоновщикНастроек, ЭтаФорма.Заголовок);	//+++АК mika 2018.07.24 ИП-00019184.01 
	
КонецПроцедуры

#КонецОбласти




