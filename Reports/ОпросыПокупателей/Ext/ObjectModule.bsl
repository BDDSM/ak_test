////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//Выполняет запуск рассылки опросов покупателей технологам и бренд менеджерам 
// (рассылка выполняется ежедневно Периодическим заданием mika ИП-00019630 Рассылка опросов покупателей)
// Параметры:
//   ВидОтчета <Тип.Строка> - Телеграм, Устный опрос
//   СтруктураПараметров <Тип.Структура> - Структура дополнительных параметров
//
Процедура ВыполнитьРассылкуОпросовТехнологамПродактМенеджерам(ВидОтчета, СтруктураПараметров = Неопределено) Экспорт //+++АК mika 2018.09.03 ИП-00019630
	
	СтруктураПараметров.Свойство("ТекущийПериод", Период);
	
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Период = НачалоДня(ТекущаяДата());
	КонецЕсли;
	
	СтруктураПараметров.Вставить("ВидОтчета", ВидОтчета);
	
	Если ВидОтчета = "Телеграм" Тогда
		СтруктураВозврата = ЗаполнитьСтруктуруДокументовРассылкаТелеграмм(СтруктураПараметров);
	ИначеЕсли ВидОтчета = "Устный опрос" Тогда
		СтруктураВозврата = ЗаполнитьСтруктуруРассылкиУстныеОпросы(СтруктураПараметров);
	ИначеЕсли ВидОтчета = "Доставка" Тогда
		СтруктураВозврата = ЗаполнитьСтруктуруРассылкиДоставка(СтруктураПараметров); 
	Иначе
		Возврат;
	КонецЕсли;

КонецПроцедуры // ВыполнитьРассылкуОпросовТехнологамПродактМенеджерам()

//Возвращает структуру таблиц документов для рассылки 
//
// Параметры:
// СтруктураПараметров <Тип.Структура> - Структура дополнительных параметров
//
// Возвращаемое значение:
//    Структура параметров - <Тип.Структура> - Структура содержит разделенные по получателям таблицы документов
//
Функция ЗаполнитьСтруктуруДокументовРассылкаТелеграмм(СтруктураПараметров) //+++АК mika 2018.09.03 ИП-00019630
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Таб_Итоговая.Ссылка,
	|	Таб_Итоговая.Номер,
	|	Таб_Итоговая.ВыборкаЗП,
	|	Таб_Итоговая.ВыборкаЗПКод,
	|	Таб_Итоговая.id_poll,
	|	Таб_Итоговая.Получатели,
	|	Таб_Итоговая.ВыборкаЗП.ХранилищеОтбора КАК ХранилищеОтбора,
	|	Таб_Итоговая.Ссылка.Номер КАК Номер,
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Производитель
	|ИЗ
	|	(ВЫБРАТЬ
	|		РассылкаТелеграм.Ссылка КАК Ссылка,
	|		РассылкаТелеграм.Ссылка.Номер КАК Номер,
	|		РассылкаТелеграм.Ссылка.ВыборкаЗП КАК ВыборкаЗП,
	|		РассылкаТелеграм.Ссылка.ВыборкаЗП.Код КАК ВыборкаЗПКод,
	|		РассылкаТелеграм.Ссылка.id_poll КАК id_poll,
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РассылкаТелеграм.НомерСтроки) КАК Получатели
	|	ИЗ
	|		Документ.РассылкаТелеграм.Получатели КАК РассылкаТелеграм
	|	ГДЕ
	|		НЕ РассылкаТелеграм.Ссылка.ПометкаУдаления
	|		И ДОБАВИТЬКДАТЕ(РассылкаТелеграм.Ссылка.АктивноДо, ДЕНЬ, 2) = НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|		И РассылкаТелеграм.Ссылка.ВыборкаЗП <> ЗНАЧЕНИЕ(Справочник.СохраненныеВыборкиПоПокупателям.ПустаяСсылка)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РассылкаТелеграм.Ссылка,
	|		РассылкаТелеграм.Ссылка.Номер,
	|		РассылкаТелеграм.Ссылка.ВыборкаЗП,
	|		РассылкаТелеграм.Ссылка.ВыборкаЗП.Код,
	|		РассылкаТелеграм.Ссылка.id_poll) КАК Таб_Итоговая";
	
	Запрос.УстановитьПараметр("ТекущаяДата", Период);
	РезультатЗапроса = Запрос.Выполнить();
	
	СтрокаНоменклатуры = "";
	Если Не РезультатЗапроса.Пустой() Тогда
		ТаблицаРезультата = РезультатЗапроса.Выгрузить();
		ТаблицаДокументов = ТаблицаРезультата.Скопировать();
		
		ТаблицаДокументов = Новый ТаблицаЗначений();
		ТаблицаДокументов.Колонки.Добавить("Ссылка"         , Новый ОписаниеТипов("ДокументСсылка.РассылкаТелеграм"));
		ТаблицаДокументов.Колонки.Добавить("id_poll"		, Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(10, ДопустимаяДлина.Переменная)));
		ТаблицаДокументов.Колонки.Добавить("Номер"		    , Новый ОписаниеТипов("Строка"	, , Новый КвалификаторыСтроки(9, ДопустимаяДлина.Переменная)));
		ТаблицаДокументов.Колонки.Добавить("ВыборкаЗП"      , Новый ОписаниеТипов("СправочникСсылка.СохраненныеВыборкиПоПокупателям"));
		ТаблицаДокументов.Колонки.Добавить("Номенклатура"   , Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
		ТаблицаДокументов.Колонки.Добавить("Производитель"	, Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		
		Для каждого Строка  Из ТаблицаРезультата Цикл
			ЭлементыОтбора = Строка.ХранилищеОтбора.Получить().Элементы;
			НоваяСтрока = ТаблицаДокументов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			Для каждого ЭлементОтбора Из ЭлементыОтбора Цикл
				Если ТипЗнч(ЭлементОтбора.ПравоеЗначение) = ТИП("СправочникСсылка.Номенклатура") И ЭлементОтбора.Использование 
					И ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
					НоваяСтрока.Номенклатура = ЭлементОтбора.ПравоеЗначение; 
				ИначеЕсли ТипЗнч(ЭлементОтбора.ПравоеЗначение) = ТИП("СправочникСсылка.Контрагенты") И ЭлементОтбора.Использование 
					И ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
					НоваяСтрока.Производитель = ЭлементОтбора.ПравоеЗначение;  
				КонецЕсли; 
			КонецЦикла;  
			
		КонецЦикла;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос("Выбрать * ПОМЕСТИТЬ ВТ Из &ВременнаяТаблица Как ВременнаяТаблица");
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВременнаяТаблица", ТаблицаДокументов);
	Запрос.Выполнить();
	
	Запрос.Текст = ПолучитьТекстОсновногоЗапросаРассылкаТелеграм();
	
	СтруктураТабДокументов  = Новый Структура();
	СоответствиеПолучателей = Новый Соответствие();
	
	ПакетЗапросов = Запрос.ВыполнитьПакет();
	
	//Добавление в структуру бренд менеджеров
	Результат = ПакетЗапросов [ПакетЗапросов.Количество()-2];     
	Если НЕ Результат.Пустой() Тогда
		ЗаполнитьОсновныеСтруктурыПараметров(Результат, СтруктураТабДокументов, СоответствиеПолучателей);			
	КонецЕсли;

    //Добавление в структуру технологов
	Результат = ПакетЗапросов [ПакетЗапросов.Количество()-1];     
	Если НЕ Результат.Пустой() Тогда
		ЗаполнитьОсновныеСтруктурыПараметров(Результат, СтруктураТабДокументов, СоответствиеПолучателей);			
	КонецЕсли;
	
	ОтправитьПисьмаПолучателям(СоответствиеПолучателей, СтруктураПараметров);
	
КонецФункции

//Возвращает структуру таблиц устных опросов для рассылки 
//
// Параметры:
// СтруктураПараметров <Тип.Структура> - Структура дополнительных параметров
//
// Возвращаемое значение:
//    Структура параметров - <Тип.Структура> - Структура содержит разделенные по получателям таблицы документов
//
Функция ЗаполнитьСтруктуруРассылкиУстныеОпросы(СтруктураПараметров) //+++АК mika 2018.09.20 ИП-00019630
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОпросыПокупателей.Номенклатура,
	|	Контрагенты.Ссылка КАК Производитель,
	|	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика
	|ПОМЕСТИТЬ ВТ_Характеристики
	|ИЗ
	|	РегистрСведений.ОпросыПокупателей КАК ОпросыПокупателей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	|			ПО ХарактеристикиНоменклатуры.id_kontr = Контрагенты.ИД
	|		ПО ОпросыПокупателей.Номенклатура = ХарактеристикиНоменклатуры.Владелец
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(ОпросыПокупателей.Период, ДЕНЬ) = &Период
	|	И НЕ ХарактеристикиНоменклатуры.Неактивная
	|	И НЕ ХарактеристикиНоменклатуры.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РолиПользователейТипыРолей.Ссылка,
	|	РолиПользователейТипыРолей.ТипРоли,
	|	РолиПользователейТипыРолей.ТипРоли.Код
	|ПОМЕСТИТЬ ВТ_БрендМенеджеры
	|ИЗ
	|	Справочник.РолиПользователей.ТипыРолей КАК РолиПользователейТипыРолей
	|ГДЕ
	|	РолиПользователейТипыРолей.ТипРоли.Код = ""BrendManager""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РолиПользователей.Ссылка КАК РольБрендменеджер,
	|	СоответствиеОбъектРольСрезПоследних.Объект КАК РольТехнолога
	|ПОМЕСТИТЬ ВТ_БрендМенеджерыТехнологов
	|ИЗ
	|	Справочник.РолиПользователей.ТипыРолей КАК РолиПользователей
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(, Объект ССЫЛКА Справочник.РолиПользователей) КАК СоответствиеОбъектРольСрезПоследних
	|		ПО РолиПользователей.Ссылка = СоответствиеОбъектРольСрезПоследних.РольПользователя
	|			И РолиПользователей.ТипРоли = СоответствиеОбъектРольСрезПоследних.ТипРоли
	|ГДЕ
	|	РолиПользователей.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТ_БрендМенеджеры.Ссылка
	|			ИЗ
	|				ВТ_БрендМенеджеры КАК ВТ_БрендМенеджеры)
	|	И НЕ СоответствиеОбъектРольСрезПоследних.Объект ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВТ_Характеристики.Номенклатура,
	|	ВТ_Характеристики.Характеристика,
	|	ЕСТЬNULL(СоответствиеОбъектРоль.РольПользователя, ЕСТЬNULL(СоответствиеОбъектРольКонтрагенты.РольПользователя, ""Не установлена роль"")) КАК ДоступнаяРольПользователя
	|ПОМЕСТИТЬ ВТ_ТоварыРоли
	|ИЗ
	|	ВТ_Характеристики КАК ВТ_Характеристики
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль КАК СоответствиеОбъектРоль
	|		ПО (СоответствиеОбъектРоль.Объект ССЫЛКА Справочник.ХарактеристикиНоменклатуры)
	|			И (СоответствиеОбъектРоль.ТипРолиID = ""TechnologPoKachestvu"")
	|			И ВТ_Характеристики.Характеристика = СоответствиеОбъектРоль.Объект
	|			И (ВТ_Характеристики.Номенклатура = ВЫРАЗИТЬ(СоответствиеОбъектРоль.Объект КАК Справочник.ХарактеристикиНоменклатуры).Владелец)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль КАК СоответствиеОбъектРольКонтрагенты
	|		ПО (СоответствиеОбъектРольКонтрагенты.Объект ССЫЛКА Справочник.Контрагенты)
	|			И (СоответствиеОбъектРольКонтрагенты.ТипРолиID = ""TechnologPoKachestvu"")
	|			И ВТ_Характеристики.Производитель = СоответствиеОбъектРольКонтрагенты.Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТоварыРоли.Номенклатура,
	|	ВТ_ТоварыРоли.Характеристика,
	|	ВТ_ТоварыРоли.ДоступнаяРольПользователя КАК РольТехнолог,
	|	ВТ_БрендМенеджерыТехнологов.РольБрендменеджер
	|ПОМЕСТИТЬ ВТ_ТоварыРолиВсе
	|ИЗ
	|	ВТ_ТоварыРоли КАК ВТ_ТоварыРоли
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БрендМенеджерыТехнологов КАК ВТ_БрендМенеджерыТехнологов
	|		ПО ВТ_ТоварыРоли.ДоступнаяРольПользователя = ВТ_БрендМенеджерыТехнологов.РольТехнолога
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб_Итоговая.Номенклатура,
	|	Таб_Итоговая.Производитель,
	|	Таб_Итоговая.Характеристика,
	|	Таб_Итоговая.Роль,
	|	Таб_Итоговая.Сотрудник,
	|	Таб_Итоговая.ЭлектронныйАдрес,
	|	Таб_Итоговая.ЭтоБренд
	|ПОМЕСТИТЬ ВТ_Итоговая
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_Характеристики.Номенклатура КАК Номенклатура,
	|		ВТ_Характеристики.Производитель КАК Производитель,
	|		ВТ_Характеристики.Характеристика КАК Характеристика,
	|		ВТ_ТоварыРолиВсе.РольТехнолог КАК Роль,
	|		РолиПользователейСоставРоли.Сотрудник КАК Сотрудник,
	|		ПОДСТРОКА(КонтактнаяИнформация.Представление, 1, 50) КАК ЭлектронныйАдрес,
	|		ЛОЖЬ КАК ЭтоБренд
	|	ИЗ
	|		ВТ_Характеристики КАК ВТ_Характеристики
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыРолиВсе КАК ВТ_ТоварыРолиВсе
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|					ПО РолиПользователейСоставРоли.Сотрудник = КонтактнаяИнформация.Объект
	|						И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|				ПО ВТ_ТоварыРолиВсе.РольТехнолог = РолиПользователейСоставРоли.Ссылка
	|			ПО ВТ_Характеристики.Номенклатура = ВТ_ТоварыРолиВсе.Номенклатура
	|				И ВТ_Характеристики.Характеристика = ВТ_ТоварыРолиВсе.Характеристика
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ВТ_Характеристики.Номенклатура,
	|		ВТ_Характеристики.Производитель,
	|		ВТ_Характеристики.Характеристика,
	|		ВТ_ТоварыРолиВсе.РольБрендменеджер,
	|		РолиПользователейСоставРоли.Сотрудник,
	|		ПОДСТРОКА(КонтактнаяИнформация.Представление, 1, 50),
	|		ИСТИНА
	|	ИЗ
	|		ВТ_Характеристики КАК ВТ_Характеристики
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыРолиВсе КАК ВТ_ТоварыРолиВсе
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|					ПО РолиПользователейСоставРоли.Сотрудник = КонтактнаяИнформация.Объект
	|						И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|				ПО ВТ_ТоварыРолиВсе.РольБрендменеджер = РолиПользователейСоставРоли.Ссылка
	|			ПО ВТ_Характеристики.Номенклатура = ВТ_ТоварыРолиВсе.Номенклатура
	|				И ВТ_Характеристики.Характеристика = ВТ_ТоварыРолиВсе.Характеристика) КАК Таб_Итоговая
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Итоговая.Номенклатура,
	|	ВТ_Итоговая.ЭлектронныйАдрес КАК ЭлектронныйАдрес
	|ИЗ
	|	ВТ_Итоговая КАК ВТ_Итоговая
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Итоговая.ЭлектронныйАдрес,
	|	ВТ_Итоговая.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭлектронныйАдрес";
	
	Запрос.УстановитьПараметр("Период", НачалоДня(Период)-86400);
	РезультатЗапроса = Запрос.Выполнить();
	
	СтрокаНоменклатуры = "";
	Если Не РезультатЗапроса.Пустой() Тогда
		ТаблицаПолучателей = РезультатЗапроса.Выгрузить();
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	СтруктураТабДокументов  = Новый Структура();
	СоответствиеПолучателей = Новый Соответствие();
	
	ЗаполнитьОсновныеСтруктурыПараметров(ТаблицаПолучателей, СтруктураТабДокументов, СоответствиеПолучателей, "Устный опрос");			
	
	ОтправитьПисьмаПолучателям(СоответствиеПолучателей, СтруктураПараметров);
	
КонецФункции

//Возвращает структуру таблиц опросов по доставке для рассылки 
//
// Параметры:
// СтруктураПараметров <Тип.Структура> - Структура дополнительных параметров
//
// Возвращаемое значение:
//    Структура параметров - <Тип.Структура> - Структура содержит разделенные по получателям таблицы документов
//
Функция ЗаполнитьСтруктуруРассылкиДоставка(СтруктураПараметров) //+++АК mika 2018.09.24 ИП-00019640

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РассылкаТелеграм.Ссылка,
	|	РассылкаТелеграм.Номер,
	|	РассылкаТелеграм.id_poll,
	|	РассылкаТелеграм.Опрос КАК ВыборкаЗП,
	|	&ЭлектронныйАдрес КАК ЭлектронныйАдрес
	|ИЗ
	|	Документ.РассылкаТелеграм КАК РассылкаТелеграм
	|ГДЕ
	|	ДОБАВИТЬКДАТЕ(РассылкаТелеграм.Ссылка.АктивноДо, ДЕНЬ, 1) = НАЧАЛОПЕРИОДА(&Период, ДЕНЬ)
	|	И НЕ РассылкаТелеграм.ПометкаУдаления
	|	И РассылкаТелеграм.id_poll В (""235"", ""236"", ""237"") //235(H) - Инстамарт, 236(S) - Сейвтайм, 237(H) - Го Лама Го
	|ИТОГИ ПО
	|	ЭлектронныйАдрес";
	
	Запрос.УстановитьПараметр("Период", НачалоДня(Период));
	Запрос.УстановитьПараметр("ЭлектронныйАдрес", СтруктураПараметров.Получатели);
	
	Результат = Запрос.Выполнить();

	СтруктураТабДокументов  = Новый Структура();
	СоответствиеПолучателей = Новый Соответствие();
	
	Если Не Результат.Пустой() Тогда
		ЗаполнитьОсновныеСтруктурыПараметров(Результат, СтруктураТабДокументов, СоответствиеПолучателей, "Доставка");		
	КонецЕсли;

	ОтправитьПисьмаПолучателям(СоответствиеПолучателей, СтруктураПараметров);

КонецФункции // ЗаполнитьСтруктуруРассылкиДоставка()

//Возвращает текст основного запроса для рассылки брендменеджерам и технологам
//
Функция ПолучитьТекстОсновногоЗапросаРассылкаТелеграм() //+++АК mika 2018.09.03 ИП-00019630

	Возврат "ВЫБРАТЬ
	|	ВТ.Ссылка,
	|	ВТ.Номер,
	|	ВТ.id_poll,
	|	ВТ.ВыборкаЗП,
	|	ВТ.Номенклатура,
	|	ВТ.Производитель,
	|	ВЫРАЗИТЬ(ЗначенияСвойствОбъектов.Объект КАК Справочник.ХарактеристикиНоменклатуры) КАК Характеристика
	|ПОМЕСТИТЬ ВТ_Характеристики
	|ИЗ
	|	ВТ КАК ВТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО (ВТ.Номенклатура = ВЫРАЗИТЬ(ЗначенияСвойствОбъектов.Объект КАК Справочник.ХарактеристикиНоменклатуры).Владелец)
	|			И ВТ.Производитель = ЗначенияСвойствОбъектов.Значение
	|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
	|ГДЕ
	|	(ВЫРАЗИТЬ(ЗначенияСвойствОбъектов.Объект КАК Справочник.ХарактеристикиНоменклатуры)) <> ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РолиПользователейТипыРолей.Ссылка,
	|	РолиПользователейТипыРолей.ТипРоли,
	|	РолиПользователейТипыРолей.ТипРоли.Код
	|ПОМЕСТИТЬ ВТ_БрендМенеджеры
	|ИЗ
	|	Справочник.РолиПользователей.ТипыРолей КАК РолиПользователейТипыРолей
	|ГДЕ
	|	РолиПользователейТипыРолей.ТипРоли.Код = ""BrendManager""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РолиПользователей.Ссылка КАК РольБрендменеджер,
	|	СоответствиеОбъектРольСрезПоследних.Объект КАК РольТехнолога
	|ПОМЕСТИТЬ ВТ_БрендМенеджерыТехнологов
	|ИЗ
	|	Справочник.РолиПользователей.ТипыРолей КАК РолиПользователей
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(, Объект ССЫЛКА Справочник.РолиПользователей) КАК СоответствиеОбъектРольСрезПоследних
	|		ПО РолиПользователей.Ссылка = СоответствиеОбъектРольСрезПоследних.РольПользователя
	|			И РолиПользователей.ТипРоли = СоответствиеОбъектРольСрезПоследних.ТипРоли
	|ГДЕ
	|	РолиПользователей.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТ_БрендМенеджеры.Ссылка
	|			ИЗ
	|				ВТ_БрендМенеджеры КАК ВТ_БрендМенеджеры)
	|	И НЕ СоответствиеОбъектРольСрезПоследних.Объект ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ВТ_Характеристики.Номенклатура,
	|	ВТ_Характеристики.Характеристика,
	|	ЕСТЬNULL(СоответствиеОбъектРоль.РольПользователя, ЕСТЬNULL(СоответствиеОбъектРольКонтрагенты.РольПользователя, ""Не установлена роль"")) КАК ДоступнаяРольПользователя
	|ПОМЕСТИТЬ ВТ_ТоварыРоли
	|ИЗ
	|	ВТ_Характеристики КАК ВТ_Характеристики
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль КАК СоответствиеОбъектРоль
	|		ПО (СоответствиеОбъектРоль.Объект ССЫЛКА Справочник.ХарактеристикиНоменклатуры)
	|			И (СоответствиеОбъектРоль.ТипРолиID = ""TechnologPoKachestvu"")
	|			И ВТ_Характеристики.Характеристика = СоответствиеОбъектРоль.Объект
	|			И (ВТ_Характеристики.Номенклатура = ВЫРАЗИТЬ(СоответствиеОбъектРоль.Объект КАК Справочник.ХарактеристикиНоменклатуры).Владелец)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль КАК СоответствиеОбъектРольКонтрагенты
	|		ПО (СоответствиеОбъектРольКонтрагенты.Объект ССЫЛКА Справочник.Контрагенты)
	|			И (СоответствиеОбъектРольКонтрагенты.ТипРолиID = ""TechnologPoKachestvu"")
	|			И ВТ_Характеристики.Производитель = СоответствиеОбъектРольКонтрагенты.Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТоварыРоли.Номенклатура,
	|	ВТ_ТоварыРоли.Характеристика,
	|	ВТ_ТоварыРоли.ДоступнаяРольПользователя КАК РольТехнолог,
	|	ВТ_БрендМенеджерыТехнологов.РольБрендменеджер
	|ПОМЕСТИТЬ ВТ_ТоварыРолиВсе
	|ИЗ
	|	ВТ_ТоварыРоли КАК ВТ_ТоварыРоли
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_БрендМенеджерыТехнологов КАК ВТ_БрендМенеджерыТехнологов
	|		ПО ВТ_ТоварыРоли.ДоступнаяРольПользователя = ВТ_БрендМенеджерыТехнологов.РольТехнолога
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб_Итоговая.Ссылка,
	|	Таб_Итоговая.Номер,
	|	Таб_Итоговая.id_poll,
	|	Таб_Итоговая.ВыборкаЗП,
	|	Таб_Итоговая.Номенклатура,
	|	Таб_Итоговая.Производитель,
	|	Таб_Итоговая.Характеристика,
	|	Таб_Итоговая.Роль,
	|	Таб_Итоговая.Сотрудник,
	|	Таб_Итоговая.ЭлектронныйАдрес,
	|	Таб_Итоговая.ЭтоБренд
	|ПОМЕСТИТЬ ВТ_Итоговая
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_Характеристики.Ссылка КАК Ссылка,
	|		ВТ_Характеристики.Номер КАК Номер,
	|		ВТ_Характеристики.id_poll КАК id_poll,
	|		ВТ_Характеристики.ВыборкаЗП КАК ВыборкаЗП,
	|		ВТ_Характеристики.Номенклатура КАК Номенклатура,
	|		ВТ_Характеристики.Производитель КАК Производитель,
	|		ВТ_Характеристики.Характеристика КАК Характеристика,
	|		ВТ_ТоварыРолиВсе.РольТехнолог КАК Роль,
	|		РолиПользователейСоставРоли.Сотрудник КАК Сотрудник,
	|		ПОДСТРОКА(КонтактнаяИнформация.Представление, 1, 50) КАК ЭлектронныйАдрес,
	|		ЛОЖЬ КАК ЭтоБренд
	|	ИЗ
	|		ВТ_Характеристики КАК ВТ_Характеристики
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыРолиВсе КАК ВТ_ТоварыРолиВсе
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|					ПО РолиПользователейСоставРоли.Сотрудник = КонтактнаяИнформация.Объект
	|						И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|				ПО ВТ_ТоварыРолиВсе.РольТехнолог = РолиПользователейСоставРоли.Ссылка
	|			ПО ВТ_Характеристики.Номенклатура = ВТ_ТоварыРолиВсе.Номенклатура
	|				И ВТ_Характеристики.Характеристика = ВТ_ТоварыРолиВсе.Характеристика
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ВТ_Характеристики.Ссылка,
	|		ВТ_Характеристики.Номер,
	|		ВТ_Характеристики.id_poll,
	|		ВТ_Характеристики.ВыборкаЗП,
	|		ВТ_Характеристики.Номенклатура,
	|		ВТ_Характеристики.Производитель,
	|		ВТ_Характеристики.Характеристика,
	|		ВТ_ТоварыРолиВсе.РольБрендменеджер,
	|		РолиПользователейСоставРоли.Сотрудник,
	|		ПОДСТРОКА(КонтактнаяИнформация.Представление, 1, 50),
	|		ИСТИНА
	|	ИЗ
	|		ВТ_Характеристики КАК ВТ_Характеристики
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТоварыРолиВсе КАК ВТ_ТоварыРолиВсе
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|					ПО РолиПользователейСоставРоли.Сотрудник = КонтактнаяИнформация.Объект
	|						И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|				ПО ВТ_ТоварыРолиВсе.РольБрендменеджер = РолиПользователейСоставРоли.Ссылка
	|			ПО ВТ_Характеристики.Номенклатура = ВТ_ТоварыРолиВсе.Номенклатура
	|				И ВТ_Характеристики.Характеристика = ВТ_ТоварыРолиВсе.Характеристика) КАК Таб_Итоговая
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Итоговая.Ссылка,
	|	ВТ_Итоговая.Номер,
	|	ВТ_Итоговая.id_poll,
	|	ВТ_Итоговая.ВыборкаЗП,
	|	ВТ_Итоговая.Роль,
	|	ВТ_Итоговая.Сотрудник,
	|	ВТ_Итоговая.ЭлектронныйАдрес КАК ЭлектронныйАдрес
	|ИЗ
	|	ВТ_Итоговая КАК ВТ_Итоговая
	|ГДЕ
	|	ВТ_Итоговая.ЭтоБренд
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_Итоговая.id_poll
	|ИТОГИ ПО
	|	ЭлектронныйАдрес
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Итоговая.Ссылка,
	|	ВТ_Итоговая.Номер,
	|	ВТ_Итоговая.id_poll КАК id_poll,
	|	ВТ_Итоговая.ВыборкаЗП,
	|	ВТ_Итоговая.Роль,
	|	ВТ_Итоговая.Сотрудник,
	|	ВТ_Итоговая.ЭлектронныйАдрес КАК ЭлектронныйАдрес
	|ИЗ
	|	ВТ_Итоговая КАК ВТ_Итоговая
	|ГДЕ
	|	НЕ ВТ_Итоговая.ЭтоБренд
	|
	|УПОРЯДОЧИТЬ ПО
	|	id_poll
	|ИТОГИ ПО
	|	ЭлектронныйАдрес";

КонецФункции // ПолучитьТекстОсновногоЗапросаРассылкаТелеграм()

//Заполняет основные структуры параметров данными для отправки
//
// Параметры:
//  Результат  - <Тип.РезультатЗапроса>, <Тип.ТаблицаЗначений>  - Результат запроса/Таблица значений
//  СтруктураТабДокументов  - <Тип.Структура> - Структура табличных документов
//  СоответствиеПолучателей  - <Тип.Структура> - Структура соответствия получателей
//
Процедура ЗаполнитьОсновныеСтруктурыПараметров(Результат, СтруктураТабДокументов, СоответствиеПолучателей, ТипРассылки = "Телеграм")//+++АК mika 2018.09.03 ИП-00019630
	
	Если ТипРассылки = "Телеграм" ИЛИ ТипРассылки = "Доставка" Тогда
		
		Если ТипРассылки = "Телеграм" Тогда
			ТемаПисьма = СтрЗаменить("Опросы покупателей Телеграм (у которых закончилась активность Период)", "Период", Формат(Период-86400*2, "ДФ=yyyyMMdd"));
		ИначеЕсли  ТипРассылки = "Доставка" Тогда
			ТемаПисьма = СтрЗаменить("Опросы покупателей по качеству доставки Телеграм (у которых закончилась активность Период)", "Период", Формат(Период-86400, "ДФ=yyyyMMdd"));
		КонецЕсли;
		
		ВыборкаАдрес = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока  ВыборкаАдрес.Следующий() Цикл
			
			ВыборкаДетальныеЗаписи = ВыборкаАдрес.Выбрать();
			
			Массивid_poll = Новый Массив(); 
			ВыборкиМассив = Новый Массив();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ТекущийКлюч = "id_poll" + СокрЛП(ВыборкаДетальныеЗаписи.id_poll);
				Если НЕ СтруктураТабДокументов.Свойство(ТекущийКлюч) Тогда
					ТабличныйДокумент = ОбновитьТаблицуОтветов(ВыборкаДетальныеЗаписи.id_poll, ВыборкаДетальныеЗаписи.Номер, 
							ВыборкаДетальныеЗаписи.Ссылка, ВыборкаДетальныеЗаписи.ВыборкаЗП);
					Если ТабличныйДокумент <> Неопределено Тогда
						СтруктураТабДокументов.Вставить(ТекущийКлюч, ТабличныйДокумент);
					Иначе 
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				ВыборкиМассив.Добавить(ВыборкаДетальныеЗаписи.ВыборкаЗП);
				Массивid_poll.Добавить(ТекущийКлюч);
			КонецЦикла;
			
			СоответствиеПолучателей.Вставить(ВыборкаАдрес.ЭлектронныйАдрес, Новый Структура("ВыборкиМассив, Файлы, ТемаПисьма", 
					ВыборкиМассив, СформироватьФайлыДляОтправки(СтруктураТабДокументов, Массивid_poll), ТемаПисьма));
			
		КонецЦикла;
		
	ИначеЕсли ТипРассылки = "Устный опрос" Тогда
		
		ТемаПисьма = СтрЗаменить("Устные опросы покупателей за Период", "Период", Формат(Период-86400, "ДФ=yyyyMMdd"));
		
		ТекущийКлюч  = "id_poll_1";
		Номенклатура = Результат[0].Номенклатура;
		
		ТабличныйДокумент = СформироватьОтчетСерверУстныйОпрос(Номенклатура);
				
		Если ТабличныйДокумент <> Неопределено Тогда
			СтруктураТабДокументов.Вставить(ТекущийКлюч, ТабличныйДокумент);
		КонецЕсли;
		
		Массивid_poll = Новый Массив(); 
		Массивid_poll.Добавить(ТекущийКлюч);
		
		ВыборкиМассив = Новый Массив();
		ВыборкиМассив.Добавить(Номенклатура);
		
		СоответствиеПолучателей.Вставить("ВсеПолучатели", Новый Структура("Файлы, ТемаПисьма, ВыборкиМассив, Номенклатура, МассивПолучателей", 
				СформироватьФайлыДляОтправки(СтруктураТабДокументов, Массивid_poll), ТемаПисьма, ВыборкиМассив, Номенклатура, Результат.ВыгрузитьКолонку("ЭлектронныйАдрес")));
				
	КонецЕсли;
		
КонецПроцедуры // ЗаполнитьОсновныеСтруктурыПараметров()

//Возвращает табличный документ по (оригинальная процедура из формы документа)
// Параметры:
//  id_poll  - <Тип.Строка> - id_poll документа
//  Номер  -   <Тип.Строка> - Номер документа
//  СсылкаНаДокумент  -   <Тип.ДокументСсылка.РассылкаТелеграм> - Номер документа
//  ВыборкаЗП - <Тип.СправочникСсылка.СохраненныеВыборкиПоПокупателям> - Выборка хранящая отборы по номенклатуре и производителю
//
// Возвращаемое значение:
//   <Тип.ТабличныйДокумент>   - Табличный документ статистики
//
Функция ОбновитьТаблицуОтветов(id_poll, Номер, СсылкаНаДокумент, ВыборкаЗП)//+++АК mika 2018.09.03 ИП-00019630
	
	// +++ golv 2018.10.22 ИП-00020201
	Возврат Документы.РассылкаТелеграм.ПолучитьОтчетПоРассылке(id_poll, Номер, СсылкаНаДокумент.Получатели.Количество(), ВыборкаЗП);
	// --- golv 2018.10.22 ИП-00020201
	
	ТаблицаОтветов = Новый ТабличныйДокумент;
	
	Если НЕ ЗначениеЗаполнено(id_poll) тогда
		Возврат Неопределено;                                                                        
	КонецЕсли;	
	
	// Таблица ответов
	ТекстЗапроса = 
	"SELECT BOT_PollAnswer_List.id_answer ,[name_answer], ISNULL(answer_count, 0) as answer_count
	|, BOT_PollAnswer_List.id_answer * ISNULL(answer_count, 0) as answer_count_total
	|FROM [Telegram].[dbo].[BOT_PollAnswer_List] (nolock) as BOT_PollAnswer_List
	|LEFT JOIN
	|(SELECT COUNT(distinct telegram_id)as answer_count,[id_answer] 
	|FROM [Telegram].[dbo].[BOT_Polling_Answer] (nolock)
	|WHERE id_poll = " + Формат(id_poll, "ЧГ=") + " and par1 = '" + Номер + "' GROUP BY id_answer) as ans on BOT_PollAnswer_List.id_answer = ans.id_answer
	|WHERE id_poll = " + Формат(id_poll, "ЧГ=");
	
	Результат = Телеграм.База_ВыполнитьЗапрос(ТекстЗапроса);	
	ТЗ = Телеграм.База_РезультатЗапросВТаблицуЗначений(Результат);
	
	ТекстЗапроса = 
	"SELECT Answer.telegram_id, comment, date_add, id_answer, FullName, Loy.number from 
	|(SELECT telegram_id , isnull(comment,'') as comment, date_add, id_answer 
	|FROM [Telegram].[dbo].[BOT_Polling_Answer] (nolock) WHERE id_poll = " + Формат(id_poll, "ЧГ=") + " and par1 = '" + Номер  + "')  as Answer
	|left join [vv03].[dbo].[Cards] (nolock) as Loy on Answer.telegram_id = Loy.telegram_id";	
	
	Результат = Телеграм.База_ВыполнитьЗапрос(ТекстЗапроса);	
	ТЗ2 = Телеграм.База_РезультатЗапросВТаблицуЗначений(Результат);
	
	Макет = Документы.РассылкаТелеграм.ПолучитьМакет("Макет");
									
	ОбластьДокумент = Макет.ПолучитьОбласть("Документ");							
	ОбластьДокумент.Параметры.Документ = ВыборкаЗП;
	ТаблицаОтветов.Вывести(ОбластьДокумент);
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ТаблицаОтветов.Вывести(Шапка);
	
	Если ТЗ2.Колонки.Количество() = 0 тогда
		ТЗ2.Колонки.Добавить("telegram_id");
		ТЗ2.Колонки.Добавить("comment");
		ТЗ2.Колонки.Добавить("date_add");
		ТЗ2.Колонки.Добавить("FullName");
		ТЗ2.Колонки.Добавить("id_answer");
		ТЗ2.Колонки.Добавить("number");
	КонецЕсли;

	СтрокаНоменклатуры = "";
	Если ЗначениеЗаполнено(ВыборкаЗП) И ТипЗнч(ВыборкаЗП) <> Тип("Строка") Тогда
		ЭлементыОтбора = ВыборкаЗП.ХранилищеОтбора.Получить().Элементы;
		Для каждого ЭлементОтбора Из ЭлементыОтбора Цикл
			Если ТипЗнч(ЭлементОтбора.ПравоеЗначение) = ТИП("СправочникСсылка.Номенклатура") Тогда
				Если СтрокаНоменклатуры = "" Тогда
				    СтрокаНоменклатуры = Строка(ЭлементОтбора.ПравоеЗначение);
				Иначе
				   	СтрокаНоменклатуры = СтрокаНоменклатуры + ", " + Строка(ЭлементОтбора.ПравоеЗначение);
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла;  
	КонецЕсли; 
	
	для Каждого СтрокаТЗ из ТЗ цикл
		Итог = Макет.ПолучитьОбласть("Итог");
		Итог.Параметры.Заполнить(СтрокаТЗ);	
		ТаблицаОтветов.Вывести(Итог);
	КонецЦикла;	
	
	Итог = Макет.ПолучитьОбласть("ИтогИтога");
	Итог.Параметры.name_answer = "Всего отправлено";
	Итог.Параметры.answer_count = СсылкаНаДокумент.Получатели.Количество();
	
	ТаблицаОтветов.Вывести(Итог);
	
	Итог = Макет.ПолучитьОбласть("ИтогИтога");
	Итог.Параметры.name_answer = "Получено ответов";
	Итог.Параметры.answer_count = ТЗ.Итог("answer_count");
	ТаблицаОтветов.Вывести(Итог);
	
	//Вывод средней оценки
	ВсегоОтветов = Итог.Параметры.answer_count;
	Если ВсегоОтветов > 0 Тогда
		Итог = Макет.ПолучитьОбласть("ИтогИтога");
		Итог.Параметры.name_answer = "Средняя оценка";
		Итог.Параметры.answer_count = Окр(ТЗ.Итог("answer_count_total")/ВсегоОтветов,1);
		ТаблицаОтветов.Вывести(Итог);
	КонецЕсли;
	
	//Вывод диаграммы
	ОбластьДиаграммы = Макет.ПолучитьОбласть("Диаграмма");
	
	Диаграмма = ОбластьДиаграммы.Рисунки.D1.Объект;
	Диаграмма.Очистить();

    //Установить единственную точку. 
    Диаграмма.КоличествоТочек = 1; 

    //Запрет обновления диаграммы 
	Диаграмма.Обновление = Ложь;
    Диаграмма.АвтоТранспонирование = Ложь;
	
	Для Каждого ТкущаяСтрока из ТЗ цикл
		
		Серия = Диаграмма.УстановитьСерию(ТкущаяСтрока.id_answer);
		Серия.Текст       = "Оценка: " + ТкущаяСтрока.id_answer;
		
		Если ТкущаяСтрока.id_answer = 1 Тогда
			Серия.Цвет = Новый Цвет(79,129,189);  //Синий
		ИначеЕсли ТкущаяСтрока.id_answer = 2 Тогда
			Серия.Цвет = Новый Цвет(192,80,77);   //Красный
		ИначеЕсли ТкущаяСтрока.id_answer = 3 Тогда
			Серия.Цвет = Новый Цвет(155,187,89);  //Салатовый
		ИначеЕсли ТкущаяСтрока.id_answer = 4 Тогда
			Серия.Цвет = Новый Цвет(128,100,162); //Фиолетовый
		ИначеЕсли ТкущаяСтрока.id_answer = 5 Тогда
			Серия.Цвет = Новый Цвет(75,172,198);  //Голубой
		КонецЕсли;
			
		Диаграмма.УстановитьЗначение(0, Серия, ТкущаяСтрока.answer_count);
		
	КонецЦикла;
	
	Диаграмма.Точки[0].Текст = " к-во: ";

	//Обновление диаграммы
	Диаграмма.Обновление = Истина;
    Диаграмма.АвтоТранспонирование = Истина; 
	
	ТаблицаОтветов.Вывести(ОбластьДиаграммы);

	Ком = Макет.ПолучитьОбласть("Ком");
	ТаблицаОтветов.Вывести(Ком);
	
	для Каждого СтрокаТЗ из ТЗ цикл
		Строка = Макет.ПолучитьОбласть("Строка");
		Строка.Параметры.Заполнить(СтрокаТЗ);	
		СтрОтбора = новый Структура;
		СтрОтбора.Вставить("id_answer", СтрокаТЗ.id_answer);
		Ответы = ТЗ2.НайтиСтроки(СтрОтбора);
		Для Каждого СтроОтвета из Ответы цикл
			Строка.Параметры.Заполнить(СтроОтвета);	
			Строка.Параметры.Номенклатура = СтрокаНоменклатуры;	
			ТаблицаОтветов.Вывести(Строка);
		КонецЦикла;	
	КонецЦикла;		
	
	ТаблицаОтветов.ЗакончитьАвтогруппировкуСтрок();
	
	Возврат ТаблицаОтветов;
	
КонецФункции

//Возвращает табличный документ по устным опросам покупателей
// Параметры:
//  Номенклатура  - <Тип.СправочникСсылка.Номенклатура> - Ссылка на номенклатуру
//
// Возвращаемое значение:
//   <Тип.ТабличныйДокумент>   - Табличный документ статистики
Функция СформироватьОтчетСерверУстныйОпрос(Номенклатура) //+++АК mika 2018.09.20 ИП-00019630
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОпросыПокупателейСрезПоследних.Период,
	|	ОпросыПокупателейСрезПоследних.Организация,
	|	ОпросыПокупателейСрезПоследних.Номенклатура,
	|	ОпросыПокупателейСрезПоследних.КвоОпрошенных,
	|	ОпросыПокупателейСрезПоследних.КвоОтветов,
	|	ОпросыПокупателейСрезПоследних.КвоНеПробовали,
	|	ОпросыПокупателейСрезПоследних.СреднийБалл,
	|	ОпросыПокупателейСрезПоследних.Оценка1,
	|	ОпросыПокупателейСрезПоследних.Оценка2,
	|	ОпросыПокупателейСрезПоследних.Оценка3,
	|	ОпросыПокупателейСрезПоследних.Оценка4,
	|	ОпросыПокупателейСрезПоследних.Оценка5,
	|	ОпросыПокупателейСрезПоследних.ПоложительныеОтзывы,
	|	ОпросыПокупателейСрезПоследних.ОтрицательныеОтзывы,
	|	ОпросыПокупателейСрезПоследних.Автор
	|ИЗ
	|	РегистрСведений.ОпросыПокупателей.СрезПоследних(&Период, Номенклатура = &Номенклатура) КАК ОпросыПокупателейСрезПоследних";
	
	Запрос.УстановитьПараметр("Период", НачалоДня(Период)-86400);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Результат = Новый ТабличныйДокумент();
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Макет = Документы.РассылкаТелеграм.ПолучитьМакет("Макет");
		
		Шапка = Макет.ПолучитьОбласть("ШапкаСокр");
		Шапка.Параметры.Номенклатура = Номенклатура;
		
		Результат.Вывести(Шапка);
		
		Индекс = 1;
		Пока Индекс < 6 Цикл
			Итог = Макет.ПолучитьОбласть("ИтогСокр");
			Итог.Параметры.answer_count = СокрЛП(Выборка["Оценка" + Индекс]);     
			Итог.Параметры.name_answer  = "Оценка " + Индекс;
			Результат.Вывести(Итог);
			Индекс = Индекс + 1;
		КонецЦикла;
		
		Итог = Макет.ПолучитьОбласть("ИтогИтогаСокр");
		Итог.Параметры.name_answer = "К-во опрошенных";
		Итог.Параметры.answer_count = Выборка.КвоОпрошенных;
		Результат.Вывести(Итог);
		
		Итог = Макет.ПолучитьОбласть("ИтогИтогаСокр");
		Итог.Параметры.name_answer = "К-во ответов";
		Итог.Параметры.answer_count = Выборка.КвоОтветов;
		Результат.Вывести(Итог);
		
		Итог = Макет.ПолучитьОбласть("ИтогИтогаСокр");
		Итог.Параметры.name_answer = "К-во не пробовали";
		Итог.Параметры.answer_count = Выборка.КвоНеПробовали;
		Результат.Вывести(Итог);

		Итог = Макет.ПолучитьОбласть("ИтогИтогаСокр");
		Итог.Параметры.name_answer = "Средняя оценка";
		Итог.Параметры.answer_count = Выборка.СреднийБалл;
		Результат.Вывести(Итог);
				
		//Вывод диаграммы
		ОбластьДиаграммы = Макет.ПолучитьОбласть("Диаграмма");
		
		Диаграмма = ОбластьДиаграммы.Рисунки.D1.Объект;
		Диаграмма.Очистить();
		
		//Установить единственную точку. 
		Диаграмма.КоличествоТочек = 1; 
		
		//Запрет обновления диаграммы 
		Диаграмма.Обновление = Ложь;
		Диаграмма.АвтоТранспонирование = Ложь;
		
		Индекс = 1;
		Пока Индекс < 6 Цикл
			
			Серия = Диаграмма.УстановитьСерию(Индекс);
			Серия.Текст       = "Оценка: " + Индекс;
			
			Если Индекс = 1 Тогда
				Серия.Цвет = Новый Цвет(79,129,189);  //Синий
			ИначеЕсли Индекс = 2 Тогда
				Серия.Цвет = Новый Цвет(192,80,77);   //Красный
			ИначеЕсли Индекс = 3 Тогда
				Серия.Цвет = Новый Цвет(155,187,89);  //Салатовый
			ИначеЕсли Индекс = 4 Тогда
				Серия.Цвет = Новый Цвет(128,100,162); //Фиолетовый
			ИначеЕсли Индекс = 5 Тогда
				Серия.Цвет = Новый Цвет(75,172,198);  //Голубой
			КонецЕсли;
			
			Диаграмма.УстановитьЗначение(0, Серия, Выборка["Оценка" + Индекс]);
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
		
		Диаграмма.Точки[0].Текст = " к-во: ";
		
		//Обновление диаграммы
		Диаграмма.Обновление = Истина;
		Диаграмма.АвтоТранспонирование = Истина; 
		
		Результат.Вывести(ОбластьДиаграммы);
		
		//Вывод комментариев
		Ком = Макет.ПолучитьОбласть("КомСокр");
		Результат.Вывести(Ком);
		
		Ком = Макет.ПолучитьОбласть("СтрокаСокр");
		Ком.Параметры.name_answer = СтрЗаменить("ПОЛОЖИТЕЛЬНЫЕ: 
									            |ТекущиеОтзывы
									            |", "ТекущиеОтзывы", ?(ЗначениеЗаполнено(Выборка.ПоложительныеОтзывы), Выборка.ПоложительныеОтзывы, "-")); 	 
		
		Результат.Вывести(Ком);
		
		Ком = Макет.ПолучитьОбласть("СтрокаСокр");
		Ком.Параметры.name_answer = СтрЗаменить("ОТРИЦАТЕЛЬНЫЕ: 
									            |ТекущиеОтзывы
									            |", "ТекущиеОтзывы", ?(ЗначениеЗаполнено(Выборка.ОтрицательныеОтзывы), Выборка.ОтрицательныеОтзывы, "-")); 	 
		
		Результат.Вывести(Ком);
	Иначе
		Результат = Неопределено;
	КонецЕсли;

	Возврат Результат;
	
КонецФункции

//Формирует и возвращает файлы для отправки получателям //+++АК mika 2018.09.03 ИП-00019630
//
// Параметры:
//  СтруктураТабДокументов  - <Тип.Структура> - Структура табличных документов
//  Массивid_poll  - <Тип.Массив> - Массив предназначенных для получателя документов
//
Функция СформироватьФайлыДляОтправки(СтруктураТабДокументов, Массивid_poll)

	//Запись в HTML файл (заполнение тела письма)
	МассивДляУдаления = Новый Массив();
    Сч = 1;
	Для каждого ЭлемМассива Из Массивid_poll Цикл

		ВременныйКаталог = КаталогВременныхФайлов(); 
		ИмяФайла = "" + Сч + "_" + Формат(Период, "ДФ=yyyyMMdd") + "_" + ЭлемМассива+ ".xls";
		ПолноеИмяФайла = ВременныйКаталог + ИмяФайла;
		
		МассивДляУдаления.Добавить(ПолноеИмяФайла);
		
		СтруктураТабДокументов[ЭлемМассива].Записать(ПолноеИмяФайла, ТипФайлаТабличногоДокумента.xls);
		
		Сч = Сч + 1;
	КонецЦикла;
	
	ВременныйКаталог = КаталогВременныхФайлов(); 
	ИмяФайла = Формат(Период-86400, "ДФ=yyyyMMdd") + "_ОпросыПокупателей.zip";
	ПолноеИмяФайла = ВременныйКаталог + ИмяФайла;

	//Архивирование вложений
	НовыйАрхив = Новый ЗаписьZipФайла(
		ПолноеИмяФайла,
		"",
		"Содержит информацию об опросах покупателей", 
		МетодСжатияZIP.Сжатие, 
		УровеньСжатияZIP.Оптимальный,
		МетодШифрованияZIP.Zip20);
	
	Для каждого Строка Из МассивДляУдаления Цикл
		НовыйАрхив.Добавить(Строка);	
	КонецЦикла;
	
	НовыйАрхив.Записать();
	
	МассивДляУдаления.Добавить(ПолноеИмяФайла);
    АрхивДвоичныеДанные = Новый ДвоичныеДанные(ПолноеИмяФайла);
	
	//Удаление временных файлов
	Для каждого Строка Из МассивДляУдаления Цикл
		Попытка
			УдалитьФайлы(Строка);
		Исключение
		КонецПопытки;
	КонецЦикла;

	Возврат АрхивДвоичныеДанные;
	
КонецФункции // СформироватьФайлыДляОтправки()

//Заполняет структуру параметров писем и отправляет письма получателям
//
// Параметры:
//  СоответствиеПолучателей  - <Тип.Структура> - Структура соответствия получателей
//  СтруктураПараметров <Тип.Структура> - Структура дополнительных параметров
//
Процедура ОтправитьПисьмаПолучателям(СоответствиеПолучателей, СтруктураПараметров)//+++АК mika 2018.09.03 ИП-00019630

	Для каждого ЭлементСоответствия Из СоответствиеПолучателей Цикл
		//Формирование структуры письма
		СтруктураПисьма = Новый Структура();
		
		Если СтруктураПараметров.ВидОтчета = "Устный опрос" Тогда
			
			ПолучателиСтрока = "";
			Для каждого ЭлементМассива Из ЭлементСоответствия.Значение.МассивПолучателей Цикл
				ПолучателиСтрока = ПолучателиСтрока + ЭлементМассива + ";";
			КонецЦикла;
			
			СтруктураПисьма.Вставить("Получатели", ПолучателиСтрока);
		Иначе
			СтруктураПисьма.Вставить("Получатели", ЭлементСоответствия.Ключ);
		КонецЕсли;
		
		СтруктураПисьма.Вставить("Отправитель",    Документы.ИзменениеЗакупочныхЦен.ПолучитьУчетнуюЗаписьДляРассылки("no-reply@vkusvill.ru")); 
		СтруктураПисьма.Вставить("Тема",           ЭлементСоответствия.Значение.ТемаПисьма); 
		СтруктураПисьма.Вставить("Текст", "");
		СтруктураПисьма.Вставить("ВложениеПуть",   ЭлементСоответствия.Значение.Файлы);
		СтруктураПисьма.Вставить("ИмяФайла");
		
		Если СтруктураПараметров.Свойство("МассивКопий") Тогда
			СтруктураПисьма.Вставить("Копии", СтруктураПараметров.МассивКопий);
		КонецЕсли;
		
		Если СтруктураПараметров.Свойство("ТестоваяРассылка") Тогда
			СтруктураПисьма.Получатели = СтруктураПараметров.ТестоваяРассылка;
			СтруктураПисьма.Тема       = СтруктураПисьма.Тема + " Получатель: " + ЭлементСоответствия.Ключ;
			СтруктураПисьма.Удалить("Копии");
		КонецЕсли;
		
		ИмяФайла = Формат(Период-86400, "ДФ=yyyyMMdd") + "_ОпросыПокупателей.zip";
		СтруктураПисьма.ИмяФайла = ИмяФайла;
		
		ИмяВыборки    = "";
		ШаблонВыборки = "<BR>&nbsp;&nbsp;&nbsp; #. descr&nbsp;";
		
		Сч = 1;
		Для каждого ЭлементМассива Из ЭлементСоответствия.Значение.ВыборкиМассив Цикл
			ИмяВыборки = ИмяВыборки + СтрЗаменить(СтрЗаменить(ШаблонВыборки,"#",Сч),"descr", ЭлементМассива);
			Сч = Сч+1;
		КонецЦикла;
		
		Текст = "
		|<HTML><HEAD>
		|<META content=""text/html; charset=utf-8"" http-equiv=Content-Type text html;><LINK rel=stylesheet type=text/css href="" v8help: service_book service_style??><BASE href="" v8config: 577dda85-0a04-496d-bb0b-b8464746a435 mdobject id40b6f892-1b1f-4eb1-a139-816d8a0540b2 038b5c85-fb1c-4082-9c4c-e69f8928bf3a??>
		|<META name=GENERATOR content=""MSHTML 11.00.9600.19003"" MSHTML 11.00.9600.19003??></HEAD>
		|<BODY><SPAN lang=RU><SPAN lang=RU>
		|<P dir=ltr align=left><FONT face=Calibri>Информация о результатах опросов в приложении(ИмяФайла)</FONT> <BR><FONT face=Calibri><FONT face=Calibri>
		|<FONT color=#595959><FONT color=#000000 size=2><BR><FONT size=3>Архив содержит результаты опросов по выборкам: 
		|</FONT>
		|<FONT size=3 face=Calibri><FONT size=3 face=Calibri><FONT color=#595959><FONT color=#000000>
		| ИмяВыборки 
		|</FONT>
		|<BR>
		|<BR>(<FONT size=1><EM>ежедневная рассылка в 9:00, данные&nbsp;за прошлый день</EM></FONT>)</FONT></P></FONT></FONT></SPAN></SPAN></FONT></FONT></FONT></FONT></BODY></HTML>";

		Текст = СтрЗаменить(Текст, "ИмяФайла", ИмяФайла); 	
		
		Если СтруктураПараметров.ВидОтчета = "Устный опрос" Тогда
			Текст = СтрЗаменить(Текст, "опросов по выборкам:", "устных опросов:"); 
		КонецЕсли;
		
		Если СтруктураПараметров.ВидОтчета = "Доставка" Тогда
			Текст = СтрЗаменить(Текст, "ежедневная рассылка в 9:00", "ежедневная рассылка в 10:00"); 
		КонецЕсли;

		СтруктураПисьма.Текст = СтрЗаменить(Текст, "ИмяВыборки", ИмяВыборки);
		
		Если СтруктураПараметров.Свойство("БезОтправки") Тогда
			Возврат;
		КонецЕсли;
		
		//Отправка письма
		Документы.ИзменениеЗакупочныхЦен.ОтправитьПисьмо(СтруктураПисьма);
		
	КонецЦикла;

КонецПроцедуры
