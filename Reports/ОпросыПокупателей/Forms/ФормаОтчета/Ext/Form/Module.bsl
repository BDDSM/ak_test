
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Номенклатура", Номенклатура);
	Параметры.Свойство("ВидОтчета", ВидОтчета);
	Параметры.Свойство("СформироватьПриОткрытии", СформироватьПриОткрытии);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если СформироватьПриОткрытии Тогда
		СформироватьОтчетКлиент();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаСформировать(Команда)
	
	СформироватьОтчетКлиент();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СформироватьОтчетКлиент()
	
	СформироватьОтчетСервер();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетСервер()
	
	Если ПроверитьЗаполнение() Тогда
		
		Результат.Очистить();
		
		Если ВидОтчета = "Телеграм" Тогда
			 СформироватьОтчетСерверТелеграм();
		ИначеЕсли ВидОтчета = "Устный опрос" Тогда
			 СформироватьОтчетСерверУстныйОпрос();
		Иначе
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетСерверТелеграм()
	
	ЗаполнитьСписокДокументовРассылкаТелеграмм();
	
	Для Каждого Строка Из СписокДокументов Цикл
		//формирование согласно основного алгоритма из Рассылки телеграм.
		//На одну позицию, как паравило, один опрос, но может быть несколько(тогда вывод "по убыванию" опросов)
		СформироватьОтчетСерверТелеграмЗаполнитьРезультат(Строка);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетСерверТелеграмЗаполнитьРезультат(Строка)
	
	id_poll = Строка.id_poll;
	Если НЕ ЗначениеЗаполнено(id_poll) тогда
		Возврат;                                                                        
	КонецЕсли;	
	
	// Таблица ответов
	ТекстЗапроса = 
	"SELECT BOT_PollAnswer_List.id_answer ,[name_answer], ISNULL(answer_count, 0) as answer_count
	|, BOT_PollAnswer_List.id_answer * ISNULL(answer_count, 0) as answer_count_total
	|FROM [Telegram].[dbo].[BOT_PollAnswer_List] (nolock) as BOT_PollAnswer_List
	|LEFT JOIN
	|(SELECT COUNT(distinct telegram_id)as answer_count,[id_answer] 
	|FROM [Telegram].[dbo].[BOT_Polling_Answer] (nolock)
	|WHERE id_poll = " + Формат(id_poll, "ЧГ=") + " and par1 = '" + Строка.Номер + "' GROUP BY id_answer) as ans on BOT_PollAnswer_List.id_answer = ans.id_answer
	|WHERE id_poll = " + Формат(id_poll, "ЧГ=");
	
	РезультатЗапроса = Телеграм.База_ВыполнитьЗапрос(ТекстЗапроса);	
	ТЗ = Телеграм.База_РезультатЗапросВТаблицуЗначений(РезультатЗапроса);
	
	ТекстЗапроса = 
	"SELECT Answer.telegram_id, comment, date_add, id_answer, FullName, Loy.number from 
	|(SELECT telegram_id , isnull(comment,'') as comment, date_add, id_answer 
	|FROM [Telegram].[dbo].[BOT_Polling_Answer] (nolock) WHERE id_poll = " + Формат(id_poll, "ЧГ=") + " and par1 = '" + Строка.Номер  + "')  as Answer
	|left join [vv03].[dbo].[Cards] (nolock) as Loy on Answer.telegram_id = Loy.telegram_id";	
	
	РезультатЗапроса = Телеграм.База_ВыполнитьЗапрос(ТекстЗапроса);	
	ТЗ2 = Телеграм.База_РезультатЗапросВТаблицуЗначений(РезультатЗапроса);
	
	Макет = Документы.РассылкаТелеграм.ПолучитьМакет("Макет");
	
	Документ = Макет.ПолучитьОбласть("Документ");
	Документ.Параметры.Документ = СтрЗаменить(СтрЗаменить("Документ: ТекущийДокумент (Выборка: ТекущаяВыборка)","ТекущийДокумент",Строка.Ссылка), "ТекущаяВыборка",Строка.ВыборкаЗП); 
	Результат.Вывести(Документ);

	Шапка = Макет.ПолучитьОбласть("Шапка");
	Результат.Вывести(Шапка);
	
	Если ТЗ2.Колонки.Количество() = 0 тогда
		ТЗ2.Колонки.Добавить("telegram_id");
		ТЗ2.Колонки.Добавить("comment");
		ТЗ2.Колонки.Добавить("date_add");
		ТЗ2.Колонки.Добавить("FullName");
		ТЗ2.Колонки.Добавить("id_answer");
		ТЗ2.Колонки.Добавить("number");
	КонецЕсли;

	СтрокаНоменклатуры = "";
	Если ЗначениеЗаполнено(Строка.ВыборкаЗП)  Тогда
		ЭлементыОтбора = Строка.ХранилищеОтбора.Получить().Элементы;
		Для каждого ЭлементОтбора Из ЭлементыОтбора Цикл
			Если ТипЗнч(ЭлементОтбора.ПравоеЗначение) = ТИП("СправочникСсылка.Номенклатура") Тогда
				Если СтрокаНоменклатуры = "" Тогда
				    СтрокаНоменклатуры = Строка(ЭлементОтбора.ПравоеЗначение);
				Иначе
				   	СтрокаНоменклатуры = СтрокаНоменклатуры + ", " + Строка(ЭлементОтбора.ПравоеЗначение);
				КонецЕсли; 
			КонецЕсли; 
		КонецЦикла;  
	КонецЕсли; 
	
	для Каждого СтрокаТЗ из ТЗ цикл
		Итог = Макет.ПолучитьОбласть("Итог");
		Итог.Параметры.Заполнить(СтрокаТЗ);	
		Результат.Вывести(Итог);
	КонецЦикла;	
	
	Итог = Макет.ПолучитьОбласть("ИтогИтога");
	Итог.Параметры.name_answer = "Всего отправлено";
	Итог.Параметры.answer_count = Строка.Получатели;
	Результат.Вывести(Итог);
	
	Итог = Макет.ПолучитьОбласть("ИтогИтога");
	Итог.Параметры.name_answer = "Получено ответов";
	Итог.Параметры.answer_count = ТЗ.Итог("answer_count");
	Результат.Вывести(Итог);
	
	//Вывод средней оценки
	ВсегоОтветов = Итог.Параметры.answer_count;
	Если ВсегоОтветов > 0 Тогда
		Итог = Макет.ПолучитьОбласть("ИтогИтога");
		Итог.Параметры.name_answer = "Средняя оценка";
		Итог.Параметры.answer_count = Окр(ТЗ.Итог("answer_count_total")/ВсегоОтветов,1);
		Результат.Вывести(Итог);
	КонецЕсли;
	
	//Вывод диаграммы
	ОбластьДиаграммы = Макет.ПолучитьОбласть("Диаграмма");
	
	Диаграмма = ОбластьДиаграммы.Рисунки.D1.Объект;
	Диаграмма.Очистить();

	//Установить единственную точку. 
	Диаграмма.КоличествоТочек = 1; 

	//Запрет обновления диаграммы 
	Диаграмма.Обновление = Ложь;
	Диаграмма.АвтоТранспонирование = Ложь;
	
	Для Каждого ТкущаяСтрока из ТЗ цикл
		
		Серия = Диаграмма.УстановитьСерию(ТкущаяСтрока.id_answer);
		Серия.Текст       = "Оценка: " + ТкущаяСтрока.id_answer;
		
		Если ТкущаяСтрока.id_answer = 1 Тогда
			Серия.Цвет = Новый Цвет(79,129,189);  //Синий
		ИначеЕсли ТкущаяСтрока.id_answer = 2 Тогда
			Серия.Цвет = Новый Цвет(192,80,77);   //Красный
		ИначеЕсли ТкущаяСтрока.id_answer = 3 Тогда
			Серия.Цвет = Новый Цвет(155,187,89);  //Салатовый
		ИначеЕсли ТкущаяСтрока.id_answer = 4 Тогда
			Серия.Цвет = Новый Цвет(128,100,162); //Фиолетовый
		ИначеЕсли ТкущаяСтрока.id_answer = 5 Тогда
			Серия.Цвет = Новый Цвет(75,172,198);  //Голубой
		КонецЕсли;
			
		Диаграмма.УстановитьЗначение(0, Серия, ТкущаяСтрока.answer_count);
		
	КонецЦикла;
	
	Диаграмма.Точки[0].Текст = " к-во: ";

	//Обновление диаграммы
	Диаграмма.Обновление = Истина;
	Диаграмма.АвтоТранспонирование = Истина; 
	
	Результат.Вывести(ОбластьДиаграммы);
	
	Ком = Макет.ПолучитьОбласть("Ком");
	Результат.Вывести(Ком);
	
	для Каждого СтрокаТЗ из ТЗ цикл
		Строка = Макет.ПолучитьОбласть("Строка");
		Строка.Параметры.Заполнить(СтрокаТЗ);	
		СтрОтбора = новый Структура;
		СтрОтбора.Вставить("id_answer", СтрокаТЗ.id_answer);
		Ответы = ТЗ2.НайтиСтроки(СтрОтбора);
		Для Каждого СтроОтвета из Ответы цикл
			Строка.Параметры.Заполнить(СтроОтвета);	
			Строка.Параметры.Номенклатура = СтрокаНоменклатуры;	
			Результат.Вывести(Строка);
		КонецЦикла;	
	КонецЦикла;		
	
	Результат.ЗакончитьАвтогруппировкуСтрок();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДокументовРассылкаТелеграмм()
	
	СписокДокументов.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Таб_Итоговая.Ссылка,
	|	Таб_Итоговая.ВыборкаЗП,
	|	Таб_Итоговая.ВыборкаЗПКод,
	|	Таб_Итоговая.id_poll,
	|	Таб_Итоговая.Получатели,
	|	Таб_Итоговая.ВыборкаЗП.ХранилищеОтбора КАК ХранилищеОтбора,
	|	Таб_Итоговая.Ссылка.Номер КАК Номер
	|ИЗ
	|	(ВЫБРАТЬ
	|		РассылкаТелеграм.Ссылка КАК Ссылка,
	|		РассылкаТелеграм.Ссылка.ВыборкаЗП КАК ВыборкаЗП,
	|		РассылкаТелеграм.Ссылка.ВыборкаЗП.Код КАК ВыборкаЗПКод,
	|		РассылкаТелеграм.Ссылка.id_poll КАК id_poll,
	|		КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РассылкаТелеграм.НомерСтроки) КАК Получатели
	|	ИЗ
	|		Документ.РассылкаТелеграм.Получатели КАК РассылкаТелеграм
	|	ГДЕ
	|		НЕ РассылкаТелеграм.Ссылка.ПометкаУдаления
	|		И РассылкаТелеграм.Ссылка.Дата < НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ)
	|		И РассылкаТелеграм.Ссылка.ВыборкаЗП <> ЗНАЧЕНИЕ(Справочник.СохраненныеВыборкиПоПокупателям.ПустаяСсылка)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		РассылкаТелеграм.Ссылка,
	|		РассылкаТелеграм.Ссылка.ВыборкаЗП,
	|		РассылкаТелеграм.Ссылка.ВыборкаЗП.Код,
	|		РассылкаТелеграм.Ссылка.id_poll) КАК Таб_Итоговая";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	СтрокаНоменклатуры = "";
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЭлементыОтбора = Выборка.ХранилищеОтбора.Получить().Элементы;
			Для каждого ЭлементОтбора Из ЭлементыОтбора Цикл
				Если ТипЗнч(ЭлементОтбора.ПравоеЗначение) = ТИП("СправочникСсылка.Номенклатура") И ЭлементОтбора.Использование 
					И ЭлементОтбора.ПравоеЗначение = Номенклатура Тогда
						ЗаполнитьЗначенияСвойств(СписокДокументов.Добавить(), Выборка);  
				КонецЕсли; 
			КонецЦикла;  

		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетСерверУстныйОпрос()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОпросыПокупателейСрезПоследних.Период,
	|	ОпросыПокупателейСрезПоследних.Организация,
	|	ОпросыПокупателейСрезПоследних.Номенклатура,
	|	ОпросыПокупателейСрезПоследних.КвоОпрошенных,
	|	ОпросыПокупателейСрезПоследних.КвоОтветов,
	|	ОпросыПокупателейСрезПоследних.КвоНеПробовали,
	|	ОпросыПокупателейСрезПоследних.СреднийБалл,
	|	ОпросыПокупателейСрезПоследних.Оценка1,
	|	ОпросыПокупателейСрезПоследних.Оценка2,
	|	ОпросыПокупателейСрезПоследних.Оценка3,
	|	ОпросыПокупателейСрезПоследних.Оценка4,
	|	ОпросыПокупателейСрезПоследних.Оценка5,
	|	ОпросыПокупателейСрезПоследних.ПоложительныеОтзывы,
	|	ОпросыПокупателейСрезПоследних.ОтрицательныеОтзывы,
	|	ОпросыПокупателейСрезПоследних.Автор
	|ИЗ
	|	РегистрСведений.ОпросыПокупателей.СрезПоследних(, Номенклатура = &Номенклатура) КАК ОпросыПокупателейСрезПоследних";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		
		Макет = Документы.РассылкаТелеграм.ПолучитьМакет("Макет");
		
		Шапка = Макет.ПолучитьОбласть("ШапкаСокр");
		Шапка.Параметры.Номенклатура = Номенклатура;
		
		Результат.Вывести(Шапка);
		
		Индекс = 1;
		Пока Индекс < 6 Цикл
			Итог = Макет.ПолучитьОбласть("ИтогСокр");
			Итог.Параметры.answer_count = СокрЛП(Выборка["Оценка" + Индекс]);     
			Итог.Параметры.name_answer  = "Оценка " + Индекс;
			Результат.Вывести(Итог);
			Индекс = Индекс + 1;
		КонецЦикла;
		
		Итог = Макет.ПолучитьОбласть("ИтогИтогаСокр");
		Итог.Параметры.name_answer = "К-во опрошенных";
		Итог.Параметры.answer_count = Выборка.КвоОпрошенных;
		Результат.Вывести(Итог);
		
		Итог = Макет.ПолучитьОбласть("ИтогИтогаСокр");
		Итог.Параметры.name_answer = "К-во ответов";
		Итог.Параметры.answer_count = Выборка.КвоОтветов;
		Результат.Вывести(Итог);
		
		Итог = Макет.ПолучитьОбласть("ИтогИтогаСокр");
		Итог.Параметры.name_answer = "К-во не пробовали";
		Итог.Параметры.answer_count = Выборка.КвоНеПробовали;
		Результат.Вывести(Итог);

		Итог = Макет.ПолучитьОбласть("ИтогИтогаСокр");
		Итог.Параметры.name_answer = "Средняя оценка";
		Итог.Параметры.answer_count = Выборка.СреднийБалл;
		Результат.Вывести(Итог);
				
		//Вывод диаграммы
		ОбластьДиаграммы = Макет.ПолучитьОбласть("Диаграмма");
		
		Диаграмма = ОбластьДиаграммы.Рисунки.D1.Объект;
		Диаграмма.Очистить();
		
		//Установить единственную точку. 
		Диаграмма.КоличествоТочек = 1; 
		
		//Запрет обновления диаграммы 
		Диаграмма.Обновление = Ложь;
		Диаграмма.АвтоТранспонирование = Ложь;
		
		Индекс = 1;
		Пока Индекс < 6 Цикл
			
			Серия = Диаграмма.УстановитьСерию(Индекс);
			Серия.Текст       = "Оценка: " + Индекс;
			
			Если Индекс = 1 Тогда
				Серия.Цвет = Новый Цвет(79,129,189);  //Синий
			ИначеЕсли Индекс = 2 Тогда
				Серия.Цвет = Новый Цвет(192,80,77);   //Красный
			ИначеЕсли Индекс = 3 Тогда
				Серия.Цвет = Новый Цвет(155,187,89);  //Салатовый
			ИначеЕсли Индекс = 4 Тогда
				Серия.Цвет = Новый Цвет(128,100,162); //Фиолетовый
			ИначеЕсли Индекс = 5 Тогда
				Серия.Цвет = Новый Цвет(75,172,198);  //Голубой
			КонецЕсли;
			
			Диаграмма.УстановитьЗначение(0, Серия, Выборка["Оценка" + Индекс]);
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
		
		Диаграмма.Точки[0].Текст = " к-во: ";
		
		//Обновление диаграммы
		Диаграмма.Обновление = Истина;
		Диаграмма.АвтоТранспонирование = Истина; 
		
		Результат.Вывести(ОбластьДиаграммы);
		
		//Вывод комментариев
		Ком = Макет.ПолучитьОбласть("КомСокр");
		Результат.Вывести(Ком);
		
		Ком = Макет.ПолучитьОбласть("СтрокаСокр");
		Ком.Параметры.name_answer = СтрЗаменить("ПОЛОЖИТЕЛЬНЫЕ: 
									            |ТекущиеОтзывы
									            |", "ТекущиеОтзывы", ?(ЗначениеЗаполнено(Выборка.ПоложительныеОтзывы), Выборка.ПоложительныеОтзывы, "-")); 	 
		
		Результат.Вывести(Ком);
		
		Ком = Макет.ПолучитьОбласть("СтрокаСокр");
		Ком.Параметры.name_answer = СтрЗаменить("ОТРИЦАТЕЛЬНЫЕ: 
									            |ТекущиеОтзывы
									            |", "ТекущиеОтзывы", ?(ЗначениеЗаполнено(Выборка.ОтрицательныеОтзывы), Выборка.ОтрицательныеОтзывы, "-")); 	 
		
		Результат.Вывести(Ком);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

