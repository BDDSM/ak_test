
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	мВалютаРегл = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	МАКСИМУМ(ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Период) КАК Период,
	                      |	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Договор КАК Договор,
	                      |	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Дата КАК Дата
	                      |ПОМЕСТИТЬ ВТ_ПериодыПланируемыхПлатежейПредварительно
	                      |ИЗ
	                      |	РегистрСведений.ПланируемыеПлатежиПоДоговорамАренды.СрезПоследних КАК ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних
	                      |ГДЕ
	                      |	НАЧАЛОПЕРИОДА(ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Дата, МЕСЯЦ) = &МесяцАренды
	                      |	И (ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийДоговоровАренды.САрендодателем)
	                      |			ИЛИ ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Регистратор.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийДоговоровАренды.САрендодателем))
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Договор,
	                      |	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Дата
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ПериодыПланируемыхПлатежейПредварительно.Период,
	                      |	ВТ_ПериодыПланируемыхПлатежейПредварительно.Договор,
	                      |	ВТ_ПериодыПланируемыхПлатежейПредварительно.Дата
	                      |ПОМЕСТИТЬ ВТ_ПериодыПланируемыхПлатежей
	                      |ИЗ
	                      |	ВТ_ПериодыПланируемыхПлатежейПредварительно КАК ВТ_ПериодыПланируемыхПлатежейПредварительно
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыДоговоровАренды.СрезПоследних КАК СтатусыДоговоровАрендыСрезПоследних
	                      |		ПО ВТ_ПериодыПланируемыхПлатежейПредварительно.Договор = СтатусыДоговоровАрендыСрезПоследних.Договор
	                      |			И ВТ_ПериодыПланируемыхПлатежейПредварительно.Дата >= СтатусыДоговоровАрендыСрезПоследних.ДатаНачалаАренды
	                      |			И ВТ_ПериодыПланируемыхПлатежейПредварительно.Дата <= СтатусыДоговоровАрендыСрезПоследних.ДатаОкончанияАренды
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Договор КАК Договор,
	                      |	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Валюта,
	                      |	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.ФормаОплаты КАК ФормаОплаты,
	                      |	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.ТипАренднойПлаты КАК ТипАренднойПлаты,
	                      |	СУММА(ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Сумма) КАК Сумма,
	                      |	СУММА(ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.СуммаВал) КАК СуммаВал
	                      |ПОМЕСТИТЬ ВТ_Начислено
	                      |ИЗ
	                      |	РегистрСведений.ПланируемыеПлатежиПоДоговорамАренды.СрезПоследних КАК ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПериодыПланируемыхПлатежей КАК ВТ_ПериодыПланируемыхПлатежей
	                      |		ПО ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Период = ВТ_ПериодыПланируемыхПлатежей.Период
	                      |			И ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Договор = ВТ_ПериодыПланируемыхПлатежей.Договор
	                      |			И ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Дата = ВТ_ПериодыПланируемыхПлатежей.Дата
	                      |ГДЕ
	                      |	(ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Сумма <> 0
	                      |			ИЛИ ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.СуммаВал <> 0)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Договор,
	                      |	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.ФормаОплаты,
	                      |	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.ТипАренднойПлаты,
	                      |	ПланируемыеПлатежиПоДоговорамАрендыСрезПоследних.Валюта
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_Начислено.Договор КАК Договор,
	                      |	ВТ_Начислено.ФормаОплаты КАК ФормаОплаты,
	                      |	ВТ_Начислено.ТипАренднойПлаты КАК ТипАренднойПлаты,
	                      |	ВТ_Начислено.Сумма,
	                      |	ВТ_Начислено.СуммаВал,
	                      |	КурсыВалютДляРасчетовПоАрендеСрезПоследних.СпособРасчета,
	                      |	КурсыВалютДляРасчетовПоАрендеСрезПоследних.Валюта КАК Валюта,
	                      |	КурсыВалютДляРасчетовПоАрендеСрезПоследних.Валюта2,
	                      |	КурсыВалютДляРасчетовПоАрендеСрезПоследних.НижняяГраница,
	                      |	КурсыВалютДляРасчетовПоАрендеСрезПоследних.ВерхняяГраница,
	                      |	КурсыВалютДляРасчетовПоАрендеСрезПоследних.Курс,
	                      |	КурсыВалютДляРасчетовПоАрендеСрезПоследних.Кратность,
	                      |	ВЫБОР
	                      |		КОГДА ВТ_Начислено.Валюта = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ КАК ПлатежПоОсновнойВалюте,
	                      |	ВЫБОР
	                      |		КОГДА ВТ_Начислено.Валюта <> ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
	                      |			ТОГДА &ВалютаРегл
	                      |		КОГДА КурсыВалютДляРасчетовПоАрендеСрезПоследних.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаКурсаВалюты.СуммаДвухКурсовВалютДеленнаяПололам)
	                      |			ТОГДА ""Бивалюта""
	                      |		ИНАЧЕ КурсыВалютДляРасчетовПоАрендеСрезПоследних.Валюта
	                      |	КОНЕЦ КАК ВалютаРезультат
	                      |ИЗ
	                      |	ВТ_Начислено КАК ВТ_Начислено
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовПоАренде.СрезПоследних(КОНЕЦПЕРИОДА(&МесяцАренды, МЕСЯЦ), ) КАК КурсыВалютДляРасчетовПоАрендеСрезПоследних
	                      |		ПО ВТ_Начислено.Договор = КурсыВалютДляРасчетовПоАрендеСрезПоследних.ДоговорКонтрагента
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Договор,
	                      |	ФормаОплаты,
	                      |	ТипАренднойПлаты,
	                      |	ПлатежПоОсновнойВалюте УБЫВ");
						  
	Запрос.УстановитьПараметр("МесяцАренды", НачалоМесяца(КомпоновщикНастроек.ПолучитьНастройки().ПараметрыДанных.Элементы.Найти("МесяцАренды").Значение));
	Запрос.УстановитьПараметр("ВалютаРегл", мВалютаРегл);
	
	ТаблицаНачислений = Запрос.Выполнить().Выгрузить();
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	РасходИзБанка.ДоговорКонтрагента КАК Договор,
	               |	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичные) КАК ФормаОплаты,
	               |	ВЫБОР
	               |		КОГДА РасходИзБанка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийППИсходящее.ОплатаПостояннойЧастиАрендыАрендодателю)
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПостояннаяЧасть)
	               |		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПеременнаяЧасть)
	               |	КОНЕЦ КАК ТипАренднойПлаты,
	               |	РасходИзБанка.ДатаОплаты КАК ДатаОплаты,
	               |	РасходИзБанка.СуммаДокумента
	               |ИЗ
	               |	Документ.РасходИзБанка КАК РасходИзБанка
	               |ГДЕ
	               |	РасходИзБанка.Проведен
	               |	И РасходИзБанка.Оплачено
	               |	И РасходИзБанка.ДоговорКонтрагента В(&Договоры)
	               |	И РасходИзБанка.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийППИсходящее.ОплатаПостояннойЧастиАрендыАрендодателю), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийППИсходящее.ОплатаПеременнойЧастиАрендыАрендодателю))
	               |	И НАЧАЛОПЕРИОДА(РасходИзБанка.ПериодРегистрации, МЕСЯЦ) = &МесяцАренды
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	РасходИзКассы.ДоговорКонтрагента,
	               |	ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Наличные),
	               |	ВЫБОР
	               |		КОГДА РасходИзКассы.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРКО.ОплатаПостояннойЧастиАрендыАрендодателю)
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПостояннаяЧасть)
	               |		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыАренднойПлаты.ПеременнаяЧасть)
	               |	КОНЕЦ,
	               |	НАЧАЛОПЕРИОДА(РасходИзКассы.Ссылка.Дата, ДЕНЬ),
	               |	РасходИзКассы.СуммаДокумента
	               |ИЗ
	               |	Документ.РасходИзКассы КАК РасходИзКассы
	               |ГДЕ
	               |	РасходИзКассы.Проведен
	               |	И РасходИзКассы.ДоговорКонтрагента В(&Договоры)
	               |	И РасходИзКассы.ВидОперации В (ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРКО.ОплатаПостояннойЧастиАрендыАрендодателю), ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРКО.ОплатаПеременнойЧастиАрендыАрендодателю))
	               |	И НАЧАЛОПЕРИОДА(РасходИзКассы.ПериодРегистрации, МЕСЯЦ) = &МесяцАренды
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЗачетОплатыАрендыЗачетДепозита.Ссылка.ДоговорКонтрагента,
	               |	ЗачетОплатыАрендыЗачетДепозита.ФормаОплаты,
	               |	ЗачетОплатыАрендыЗачетДепозита.ТипАренднойПлаты,
	               |	НАЧАЛОПЕРИОДА(ЗачетОплатыАрендыЗачетДепозита.Ссылка.Дата, ДЕНЬ),
	               |	ЗачетОплатыАрендыЗачетДепозита.Сумма
	               |ИЗ
	               |	Документ.ЗачетОплатыАренды.ЗачетДепозита КАК ЗачетОплатыАрендыЗачетДепозита
	               |ГДЕ
	               |	ЗачетОплатыАрендыЗачетДепозита.Ссылка.Проведен
	               |	И ЗачетОплатыАрендыЗачетДепозита.Ссылка.ДоговорКонтрагента В(&Договоры)
	               |	И НАЧАЛОПЕРИОДА(ЗачетОплатыАрендыЗачетДепозита.ПериодРегистрации, МЕСЯЦ) = &МесяцАренды
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Договор,
	               |	ФормаОплаты,
	               |	ТипАренднойПлаты,
	               |	ДатаОплаты";
				   
	Запрос.УстановитьПараметр("Договоры",  ТаблицаНачислений.ВыгрузитьКолонку("Договор"));	
	
	ТаблицаОплат = Запрос.Выполнить().Выгрузить();
	
	ТаблицаНачисленийИОплат = ТаблицаНачислений.СкопироватьКолонки();	
	ТаблицаНачисленийИОплат.Колонки.Добавить("Начислено", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
	ТаблицаНачисленийИОплат.Колонки.Добавить("Оплачено", ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 2));
	
	Для Каждого СтрокаНачисления Из ТаблицаНачислений Цикл
		
		ЭтоВалютныйПлатеж =  (СтрокаНачисления.ПлатежПоОсновнойВалюте И 
												 (СтрокаНачисления.Валюта <> мВалютаРегл  ИЛИ	
												 (СтрокаНачисления.СпособРасчета <> Перечисления.СпособыРасчетаКурсаВалюты.КурсЦБ И СтрокаНачисления.СпособРасчета <> Перечисления.СпособыРасчетаКурсаВалюты.ПустаяСсылка())));
												 
		Оплачено = 0;
		Начислено = ?(ЭтоВалютныйПлатеж, СтрокаНачисления.СуммаВал, СтрокаНачисления.Сумма);
												 
		СтруктураОтбора = Новый Структура("Договор, ФормаОплаты, ТипАренднойПлаты");
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаНачисления);
		
		СтрокиОплаты = ТаблицаОплат.НайтиСтроки(СтруктураОтбора);
		Для Каждого СтрокаОплаты Из СтрокиОплаты Цикл
			//Если ЭтоВалютныйПлатеж И СтрокаНачисления.СуммаВал = 0 ИЛИ НЕ ЭтоВалютныйПлатеж И СтрокаНачисления.Сумма = 0 Тогда
			//	Прервать;
			//КонецЕсли;
			
			Если ЭтоВалютныйПлатеж Тогда
				КурсВалюты = ПроцедурыНачисления.ПолучитьКурсВалютыПоДоговору(СтрокаОплаты.ДатаОплаты, СтрокаНачисления).Курс;	
				СуммаДокументаВал = СтрокаОплаты.СуммаДокумента/КурсВалюты;
				
				//СуммаКЗачету =  Мин(СтрокаНачисления.СуммаВал, СуммаДокументаВал );
				СуммаКЗачету =  СуммаДокументаВал;
				
				СтрокаНачисления.СуммаВал = СтрокаНачисления.СуммаВал - СуммаКЗачету;
				//Если СуммаКЗачету = СуммаДокументаВал Тогда
				//	СтрокаОплаты.СуммаДокумента = 0;
				//Иначе
				//	СтрокаОплаты.СуммаДокумента = СтрокаОплаты.СуммаДокумента - СуммаКЗачету*КурсВалюты;
				//КонецЕсли;
			Иначе
				//СуммаКЗачету = Мин(СтрокаНачисления.Сумма,  СтрокаОплаты.СуммаДокумента); 
				//Сообщить("" + СтрокаНачисления.Договор + " --- " + СтрокаОплаты.СуммаДокумента);
				СуммаКЗачету = СтрокаОплаты.СуммаДокумента; 
				СтрокаНачисления.Сумма = СтрокаНачисления.Сумма - СуммаКЗачету;
				//СтрокаОплаты.СуммаДокумента = СтрокаОплаты.СуммаДокумента - СуммаКЗачету;
			КонецЕсли;			
			
			Оплачено = Оплачено  + СуммаКЗачету;			
			
		КонецЦикла;
		
		Если ЭтоВалютныйПлатеж И СтрокаНачисления.СуммаВал <> 0 ИЛИ НЕ ЭтоВалютныйПлатеж И СтрокаНачисления.Сумма <> 0 Тогда
			СтрокаРезультата = ТаблицаНачисленийИОплат.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРезультата, СтрокаНачисления);
			СтрокаРезультата.Начислено = Начислено;
			СтрокаРезультата.Оплачено = Оплачено;
		КонецЕсли;
		
	КонецЦикла;
	
	//
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных; 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных; 
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, 
							Настройки, ДанныеРасшифровки);
	
	// Скомпонуем результат
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,	Новый Структура("ТаблицаНачисленийИОплат", ТаблицаНачисленийИОплат), ДанныеРасшифровки);
	
	ДокументРезультат.Очистить();
	
	// Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

