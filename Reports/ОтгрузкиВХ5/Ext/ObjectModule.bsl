//+++АК KOPA 2018.04.27 ИП-00018509

//Необходимо создать отчет. Пример отчета:



//Строки:
//1. с номенклатурой - берем из документа "Реализация товаров и услуг" , из основной ТЧ (только с контрагентом Перекресток"). Одна строка - одна номенклатура.
//2. Общий итог - всего отправлено номенклатуры по данному магазину
//3. Заказ получен - берем из регистра "Контур EDI. Статусы документов". Находим в регистре нужную реализацию по магазину.
//ДА - у документа реализации есть имя статуса "Получен обратный заказ" (подсветка зеленым)
//НЕТ - такого статуса у документа нет (подсветка красным)
//4. Номер заказа - в справочнике Контур EDI. Сообщения находим нужный документ реализации. Для него находим сообщение с типом ORDERS. поле номер документа - это и есть номер заказа.

//Столбцы:

//1.Добавить один дополнительный столбец после "Номенклатуры" - "Характеристика". Берем из ТЧ EDI.
//2. Каждый столбец - наименование магазина. брать из документа реализации на вкладке EDI. Ячейка с числом на пересечении столбца и номенклатуры показывает какое кол-во номенклатуры было отправлено по данному магазину в реализации.
//3. Общий итог - общее кол-во отправленной номенклатуры
//4. Соответствие PLU/Характеристики - последним добавить столбец. Если есть соответствие характеристике в регистре "Контур EDI. Соответствие товаров" - выводить номер ПЛУ, который присвоен данной хар-ке. Если нет - писать "НЕТ", подсвечивать красным.

//Отчет формировать и отправлять в 4 часа утра Широкову Максиму, Михайлову Антон, Белугину Андрею

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	Параметры = КомпоновщикНастроек.Настройки.ПараметрыДанных;
	//+++AK GREK 29.09.2018 ИП-00019974  
	Контрагенты = Новый СписокЗначений;
	Контрагенты.Добавить(Справочники.Контрагенты.НайтиПоКоду("000001121"));
	Контрагенты.Добавить(Справочники.Контрагенты.НайтиПоКоду("Т0004486"));
	Контрагенты.Добавить(Справочники.Контрагенты.НайтиПоКоду("Т0004485"));
	Параметры.УстановитьЗначениеПараметра("Контрагент", Контрагенты);
	//---AK
	
	//+++AK GREK 01.11.2018 ИП-00020095
	ТипыТочек = Новый СписокЗначений;
	ТипыТочек.Добавить(ПредопределенноеЗначение("Перечисление.ТипыРозничныхТочек.Перекресток"));
	ТипыТочек.Добавить(ПредопределенноеЗначение("Перечисление.ТипыРозничныхТочек.Пятерочка"));
	Параметры.УстановитьЗначениеПараметра("ТипРозничнойТочки", ТипыТочек);
	//---AK

	Параметры.УстановитьЗначениеПараметра("ПартнерХ5", Справочники.КонтурEDI_ДополнительныеСправочники.НайтиПоКоду("000000006"));
		
	//Параметры.УстановитьЗначениеПараметра("ДатаНач", '20180423');
	//Параметры.УстановитьЗначениеПараметра("ДатаКон", КонецДня('20180423'));
КонецПроцедуры







#Область СформироватьИОтправитьПоПочте

Процедура СформироватьОтчет(ТабДок, Параметры) Экспорт 	
	УстановитьПривилегированныйРежим(Истина);
	
	//ИмяФайла = Параметры.ЛокКаталог + "ОтгрузкиВХ5.erf";
	//Отчет = ВнешниеОтчеты.Создать(ИмяФайла);
	//Получаем схему из макета
	//СхемаКомпоновкиДанных = Отчеты.ОтгрузкиВХ5.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	СхемаКомпоновкиДанных = ЭтотОбъект.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	//Из схемы возьмем настройки по умолчанию
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	_КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	_КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));	
	
	//УстановитьОтбор(Значение, Настройки);
	УстановитьПараметры(Настройки, Параметры);
	
	//Помещаем в переменную данные о расшифровке данных
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки);
	
	//Очищаем поле табличного документа
	ТабДок.Очистить();
	
	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабДок);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);	
КонецПроцедуры

// +++ golv ИП-00019136 16.08.18
Процедура ОтправитьУведомлениеВТелеграм(ТекстСообщения)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	НЕ ФизическиеЛица.ПометкаУдаления
	|	И ФизическиеЛица.СотрудникТилси");
	ТЗ = Запрос.Выполнить().Выгрузить();
	Получатели = ТЗ.ВыгрузитьКолонку("Ссылка");
	
	ТелеграмТехБот.ОтправитьСообщенияВТехбот(Получатели, ТекстСообщения);
	
КонецПроцедуры
// --- golv ИП-00019136 16.08.18

Процедура ОтправитьФайлПоПочте(Параметры)
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
		
	Почта = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Письмо = Новый ИнтернетПочтовоеСообщение;
		
	Почта.Подключиться(Профиль);
	Письмо.Тема = Параметры.Тема;//
	Письмо.ИмяОтправителя 	= "" + УчетнаяЗапись + "";
	Письмо.ИмяОтправителя  	= "" + СокрЛП(УчетнаяЗапись) + "";
	Письмо.Отправитель     	= "" + СокрЛП(УчетнаяЗапись) + "";
	
	Для Каждого ПолучательЭлемент Из Параметры.МассивАдресов Цикл//
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = ПолучательЭлемент;
	КонецЦикла;	
		
	ТекстСообщения = Письмо.Тексты.Добавить();
	ТекстСообщения.Текст = Параметры.Текст;//"Во вложении находится информация о Х5";
	
	Если Параметры.Свойство("ТипТекста") Тогда	
		ТипТекста = Параметры.ТипТекста;		
	Иначе
	    ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;	
	КонецЕсли;
	
	ТекстСообщения.ТипТекста = ТипТекста;//ТипТекстаПочтовогоСообщения.ПростойТекст;
		
	//Письмо.Вложения.Добавить(Параметры.ПутьКФайлу);		
	
	Почта.Послать(Письмо);
	
	Почта.Отключиться();
КонецПроцедуры

Функция СформироватьОтчетИОтправитьПоПочте(Параметры) Экспорт 
	
	Параметры.Вставить("МассивУдалитьФайлы", Новый Массив);
	
	ТабДок = Новый ТабличныйДокумент;
	СформироватьОтчет(ТабДок, Параметры);
	
	ДанныеПреобразования = СформироватьТаблицуХТМЛ_ТабДок(ТабДок);
	
	// +++ golv ИП-00019136 16.08.18
	ТекстТелеграм = "";
	//ТемаПисьма = СформироватьТемуПисьма(ТабДок, ДанныеПреобразования, Параметры);
	ТемаПисьма = СформироватьТемуПисьма(ТабДок, ДанныеПреобразования, Параметры, ТекстТелеграм);
	Если ЗначениеЗаполнено(ТекстТелеграм) Тогда
		ОтправитьУведомлениеВТелеграм(ТекстТелеграм);
	КонецЕсли;	
	// --- golv ИП-00019136 16.08.18
	
	ВнестиТемуПисьмаВХТМЛ(ТемаПисьма, ДанныеПреобразования);
		
	ОтправлятьПоПочте = Не Параметры.Свойство("НеОтправлятьПоПочте");
	
	Если ОтправлятьПоПочте Тогда
		Параметры.Вставить("Тема", ТемаПисьма);
		Параметры.Вставить("Текст", ДанныеПреобразования.ХТМЛ);
		Параметры.Вставить("ТипТекста", ТипТекстаПочтовогоСообщения.HTML);
		
		ОтправитьФайлПоПочте(Параметры);	
	КонецЕсли;
	
	Возврат ДанныеПреобразования;
	
КонецФункции 


Процедура УстановитьОтбор(Значение, Настройки)	
	ЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Значение");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	
	ЭлементОтбора.ПравоеЗначение = Значение;
	ЭлементОтбора.Использование = Истина;	
КонецПроцедуры

Процедура УстановитьПараметры(Настройки, Параметры)	
	ПараметрыДанных = Настройки.ПараметрыДанных;
	
	ПараметрыДанных.УстановитьЗначениеПараметра("Контрагент", Параметры.Контрагент);
	ПараметрыДанных.УстановитьЗначениеПараметра("ПартнерХ5", Параметры.ПартнерХ5);
	ПараметрыДанных.УстановитьЗначениеПараметра("ДатаНач", Параметры.ДатаНачала);
	ПараметрыДанных.УстановитьЗначениеПараметра("ДатаКон", КонецДня(Параметры.ДатаОкончания));
	//+++AK GREK 01.11.2018 ИП-00020095
	ПараметрыДанных.УстановитьЗначениеПараметра("ТипРозничнойТочки", Параметры.ТипРозничнойТочки);
	//---AK
КонецПроцедуры


Функция ПолучитьОбласть(ТабДок, Верх, Лево, Высота, Ширина)
	Возврат ТабДок.Область(Верх, Лево, Верх + Высота - 1, Лево + Ширина - 1);
КонецФункции

Функция ПолучитьОбластьЯчейки(ТабДок, Верх, Лево)
	Возврат ПолучитьОбласть(ТабДок, Верх, Лево, 1, 1);
КонецФункции

Функция ПолучитьТекстОбласти(Область)
	Возврат Область.Текст;	
КонецФункции

Функция ПолучитьКоличествоПоГоризонтали(ТабДок)
	е = 1;
	
	Пока Истина Цикл
		Текст = ПолучитьТекстОбласти(ПолучитьОбластьЯчейки(ТабДок, 1, е));	
		
		Если Не ЗначениеЗаполнено(Текст) Тогда
			Возврат е - 1;		
		КонецЕсли;
		
		е = е + 1;
	КонецЦикла;
КонецФункции

Функция ПолучитьКоличествоПоВертикали(ТабДок)
	е = 3;
	
	Пока Истина Цикл
		Текст = ПолучитьТекстОбласти(ПолучитьОбластьЯчейки(ТабДок, е, 1));	
		
		Если Не ЗначениеЗаполнено(Текст) Тогда
			Возврат е - 1;		
		КонецЕсли;
		
		е = е + 1;
	КонецЦикла;
КонецФункции

Функция СформироватьТаблицуХТМЛ_ТабДок(ТабДок)
	КоличествоПоГоризонтали = ПолучитьКоличествоПоГоризонтали(ТабДок);	
	КоличествоПоВертикали = ПолучитьКоличествоПоВертикали(ТабДок);
	
	НомерИтого = КоличествоПоВертикали - 2;
	НомерЗаказПолучен = КоличествоПоВертикали - 1;
	
	МассивСтрок = Новый Массив;
	
	Для е = 1 По КоличествоПоВертикали Цикл
		
		Если е = 2 Тогда
			Продолжить;
		КонецЕсли;
		
		МассивЯчеек = Новый Массив;

		Для е1 = 1 По КоличествоПоГоризонтали Цикл					
			Текст = ПолучитьТекстОбласти(ПолучитьОбластьЯчейки(ТабДок, е, е1));
			
			Цвет = Неопределено;
			
			Если е = НомерЗаказПолучен Тогда
				Если Текст = "Да" Тогда
					Цвет = ЦветЗеленый();
				ИначеЕсли Текст = "Нет" Тогда
					Цвет = ЦветКрасный();
				КонецЕсли;		
			КонецЕсли;
			
			Ячейка = ТегЯчейкаТаблицы(Текст, Цвет);			
			МассивЯчеек.Добавить(Ячейка);
		КонецЦикла;
		
		Цвет = Неопределено;
		
		Если е = 1 Или е = НомерИтого Тогда
			Цвет = ЦветЗаголовкаОтчета();		
		КонецЕсли;
		
	    МассивСтрок.Добавить(ТегСтрокаТаблицы(ТелеграмТехБот.МассивВСтроку(МассивЯчеек, ""), Цвет));
	КонецЦикла;
	
	ХТМЛТаблица = ТегТаблица(ТелеграмТехБот.МассивВСтроку(МассивСтрок, Символы.ПС));
	
	Результат = Новый Структура;
	Результат .Вставить("ХТМЛ", ХТМЛТаблица);
	Результат .Вставить("КоличествоПоГоризонтали", КоличествоПоГоризонтали);
	Результат .Вставить("КоличествоПоВертикали", КоличествоПоВертикали);
	Результат .Вставить("НомерЗаказПолучен", НомерЗаказПолучен);
	
	Возврат Результат;
КонецФункции

Функция ТегТаблица(Текст)
	Возврат "<table border=""1"">" + Текст + "</table>";
КонецФункции

Функция ТегСтрокаТаблицы(Текст, Цвет = Неопределено)
	Возврат "<tr" + ?(Цвет = Неопределено, "", " bgcolor=""" + Цвет + """") + ">" + Текст + "</tr>";
КонецФункции

Функция ТегЯчейкаТаблицы(Текст, Цвет = Неопределено)
	Возврат "<td" + ?(Цвет = Неопределено, "", " bgcolor=""" + Цвет + """") + ">" + ?(ЗначениеЗаполнено(Текст), Текст, "-") + "</td>";
КонецФункции

Функция ТегН(Текст, Размер)
	Возврат "<H" + Размер + ">" + Текст + "</H" + Размер + ">";
КонецФункции

Функция ТегBody(Текст)
	Возврат "<Body>" + Текст + "</Body>";
КонецФункции

Функция ЦветЗаголовкаОтчета()
	Возврат "#F4ECC5";	
КонецФункции

Функция ЦветЗеленый()
	Возврат "#ADFF2F";	
КонецФункции

Функция ЦветКрасный()
	Возврат "#FF0000";	
КонецФункции

Функция ЕстьНетЗаказПолучен(ТабДок, НомерЗаказПолучен, КоличествоПоГоризонтали)
	Для е = 3 По КоличествоПоГоризонтали - 2 Цикл
		Текст = ПолучитьТекстОбласти(ПолучитьОбластьЯчейки(ТабДок, НомерЗаказПолучен, е));
		
		Если Текст = "Нет" Тогда
			Возврат Истина;
		КонецЕсли;	
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

Функция ЕстьНетНайденPLU(ТабДок, КоличествоПоГоризонтали, КоличествоПоВертикали)
	Для е = 3 По КоличествоПоВертикали - 3 Цикл
		Текст = ПолучитьТекстОбласти(ПолучитьОбластьЯчейки(ТабДок, е, КоличествоПоГоризонтали));
		
		Если Текст = "Нет" Тогда
			Возврат Истина;
		КонецЕсли;	
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

Функция СформироватьТемуПисьма(ТабДок, Данные, Параметры, ТекстТелеграм = "")
	
	Результат = "";
		
	Если Данные.КоличествоПоГоризонтали = 3 Тогда
		Результат = "Ошибка!!!";	
	КонецЕсли;
	
	Если ЕстьНетЗаказПолучен(ТабДок, Данные.НомерЗаказПолучен, Данные.КоличествоПоГоризонтали) Тогда
		Результат = "Есть не полученные заказы. ";
		ТекстТелеграм = "Есть неполученные заказы. Более подробная информация в письме"; // golv ИП-00019136 16.08.18
	КонецЕсли;
	
	Если ЕстьНетНайденPLU(ТабДок, Данные.КоличествоПоГоризонтали, Данные.КоличествоПоВертикали) Тогда
		Результат = Результат + "Есть не полученные заказы";
		ТекстТелеграм = "Есть неполученные заказы. Более подробная информация в письме"; // golv ИП-00019136 16.08.18
	КонецЕсли;
	
	Если Результат = "" Тогда
		Результат = "Все заказы получены.";	
		ТекстТелеграм = "Все заказы получены"; // golv ИП-00019136 16.08.18
	КонецЕсли;
	
	Результат = "Отгрузка Х5 за " + Формат(Параметры.ДатаНачала, "ДЛФ=D") + " " + Результат;
	
	//+++AK GREK 29.10.2018 ИП-00020095        
	Если Параметры.Свойство("Назначение") Тогда
		Результат = Параметры.Назначение + " " + Результат;
		// +++AK golv ЗА-00015570 02.11.2018
		ТекстТелеграм = Параметры.Назначение + " " + ТекстТелеграм;
		// ---AK		
	КонецЕсли;					
	//---AK
	
	Возврат Результат;
	
КонецФункции


Процедура ВнестиТемуПисьмаВХТМЛ(ТемаПисьма, ДанныеПреобразования)
	ДанныеПреобразования.ХТМЛ = ТегН(ТемаПисьма, 3) + ДанныеПреобразования.ХТМЛ;
КонецПроцедуры

#КонецОбласти

//Пример использования
//МассивАдресов = Новый Массив;
//МассивАдресов.Добавить("kopa@automacon.ru");	
//МассивАдресов.Добавить("miha@automacon.ru");

//МоиПараметры = Новый Структура;
//МоиПараметры.Вставить("МассивАдресов", МассивАдресов);
//МоиПараметры.Вставить("ДатаНачала", '20180423');
//МоиПараметры.Вставить("ДатаОкончания", '20180423');
//МоиПараметры.Вставить("Контрагент", Справочники.Контрагенты.НайтиПоКоду("000001121"));
//МоиПараметры.Вставить("ПартнерХ5", Справочники.КонтурEDI_ДополнительныеСправочники.НайтиПоКоду("000000006"));
////МоиПараметры.Вставить("НеОтправлятьПоПочте");//Опционально
//МоиПараметры.Вставить("ЛокКаталог", "\\10.0.0.90\d$\Izbenka\Управление Информации\automacon33\KOPA\X5\2018.04.25 Сформировать отчет и отправить на почту\");//Опционально
//Текст = СформироватьОтчетИОтправитьПоПочте(МоиПараметры).ХТМЛ;
//ЭлементыФормы.ПолеHTMLДокумента1.УстановитьТекст(Текст);