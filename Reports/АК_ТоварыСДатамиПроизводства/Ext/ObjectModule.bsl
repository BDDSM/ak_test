
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;	
		
	Настройки = КомпоновщикНастроек.ПолучитьНастройки(); // Получаем настройки отчета
	
	ПараметрыОтчета = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	Производитель = ?(Настройки.ПараметрыДанных.Элементы[3].Использование, Настройки.ПараметрыДанных.Элементы[3].Значение, "");
	Магазин = ?(Настройки.ПараметрыДанных.Элементы[1].Использование, Настройки.ПараметрыДанных.Элементы[1].Значение, "");
	ДатаУстановлена = ЗначениеЗаполнено(Настройки.ПараметрыДанных.Элементы[2].Значение) и Настройки.ПараметрыДанных.Элементы[2].Использование;
	НаДату = ?(ДатаУстановлена, "'" + Формат(Дата(Настройки.ПараметрыДанных.Элементы[2].Значение), "ДФ=yyyy-MM-dd") + "'", "GETDATE()");
	КоличествоДней = Настройки.ПараметрыДанных.Элементы[4].Значение;	
	Номенклатура = ?(Настройки.ПараметрыДанных.Элементы[0].Использование, Настройки.ПараметрыДанных.Элементы[0].Значение, Неопределено);
		
	ADO = ВнешниеДанные.ПолучитьADOСоединение("10.0.0.40");
	
	ТекстЗапроса = "select 
			   | 		x.id_tov as [ТовНомер],
			    | 		GETDATE() as [ТекДата],
			   | 		t.Name_tov as [Номенклатура], 
			   | 		Ves as [ТовВес], 
			   | 		Ed_Izm as [ЕдИзм],
			   | 		x.ShopNo_rep as [МагНомер],
			   | 		tt.name_TT as [Магазин],
			   | 		x.id_kontr as [ПостНомер],
			   | 		k.nova_kontr as [Производитель],
			   | 		case when x.Date_proizv = '1900-01-01' then NULL else x.Date_proizv end as [ДатаПроизводства],
			   | 		x.Quantity as [Количество],
			   | 		ROW_NUMBER () over (partition by x.id_tov, shopno_rep order by date_proizv) as [ПорядокДатаПроизводства]
			   | 	from(
			   | 		 select  
			   | 		 	id_tov, 
			   | 			 ShopNo_rep, 
			   | 			 max(id_kontr) as id_kontr, 
			   | 			 ISNULL(Date_proizv,'1900-01-01') as Date_proizv, 
			   | 			 sum(Quantity) as Quantity
			   | 		 from SMS_REPL.dbo.TD_move (nolock) m
			   | 		 join SMS_REPL.dbo.Types_Operation (nolock) t_o on t_o.table_operation = 'td_move' 
			   | 		 AND t_o.field_operation = 'operation_type_orig' 
			   | 		 and t_o.code_operation = m.operation_type
			   |          and t_o.znak > 0 
			   | 		 and m.Quantity > 0 
			   		 //—and t_o.code_operation in (106,400)              
			   |         where closedate is not null 
			         //—and id_kontr is not null and id_kontr <> 0
			   |       group by id_tov, ShopNo_rep, ISNULL(Date_proizv,'1900-01-01'), operation_type, operation_type_orig
			   |    )x
			   |   join SMS_UNION.dbo.Tovari (nolock) t on x.id_tov = t.id_tov
			   |   join M2.dbo.tt  (nolock) on tt.n = x.ShopNo_rep
			   |   left join M2.dbo.kontr (nolock) k on x.id_kontr = k.id_kontr
			   |
			   |   where Date_proizv >= DATEADD(DAY,-%КолДней%,CAST(%НаДату% as Date)) 
			   |   and Date_proizv < %НаДату%  
			   |   and x.id_kontr = 66
			   |   and x.id_tov in (46, 838) 
			   |  and ShopNo_rep = 1352";
					 
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%НаДату%", НаДату);				 
					 
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%КолДней%", ?(КоличествоДней = 0, 365, КоличествоДней));
	
	Если ЗначениеЗаполнено(Производитель) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "and x.id_kontr = 66", "and x.id_kontr = " + Формат(Производитель.ИД, "ЧГ=0"));	
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "and x.id_kontr = 66", "and 1 = 1");
	КонецЕсли;                                                                                      
	
	Если ЗначениеЗаполнено(Магазин) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "and ShopNo_rep = 1352", "and ShopNo_rep = " + формат(Магазин.КодОПБух, "ЧГ=0"));	
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "and ShopNo_rep = 1352", "and 1 = 1");	
	КонецЕсли; 
	
	Если Номенклатура = Неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "and x.id_tov in (46, 838)", "and 1 = 1");	
	ИначеЕсли ТипЗнч(Номенклатура) = Тип("СписокЗначений") Тогда
		
		СписокИД = "";
		Для каждого стр Из Номенклатура Цикл
			СписокИД = СписокИД + Строка(Формат(стр.Значение.id_tov, "ЧГ=0")) + ","	
		КонецЦикла; 
		
		СписокИД = Лев(СписокИД, СтрДлина(СписокИД) - 1); //избавляемся от последней запятой
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "and x.id_tov in (46, 838)", "and x.id_tov in (" + СписокИД + ")");
		
	Иначе
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "and x.id_tov in (46, 838)", "and x.id_tov = " + Формат(Номенклатура.id_tov, "ЧГ=0"));
		
	КонецЕсли; 
	
	
	rs = ADO.Execute(ТекстЗапроса);
	
	Результат = ПреобразоватьРезультатВТаблицуЗначений(rs);
	
	Если  Результат.Колонки.Количество() = 0 Тогда
		
		Результат = Новый ТаблицаЗначений;
		Результат.Колонки.Добавить("Номенклатура");
		Результат.Колонки.Добавить("Магазин");
		Результат.Колонки.Добавить("ДатаПроизводства");
		Результат.Колонки.Добавить("Производитель");
		Результат.Колонки.Добавить("Количество");
		Результат.Колонки.Добавить("ЕдИзм");	
		
	КонецЕсли; 

	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;//+++
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных; //+++
	
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	ВнешнийНаборДанных = Новый Структура("ТаблицаТоваров", Результат);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешнийНаборДанных, ДанныеРасшифровки);
	
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	
КонецПроцедуры


Функция ПреобразоватьРезультатВТаблицуЗначений(rsTABLE) Экспорт
	КоличествоПолейТаблица=rsTABLE.fields.Count-1;
    ТаблицаПоискаТаблица = Новый массив;
    Если (НЕ rsTABLE.EOF) Тогда
        ТаблицаПоискаТаблица = rsTABLE.GetRows().Выгрузить();
	КонецЕсли;
	
	тзРезультат = Новый ТаблицаЗначений;
	
	Если ТаблицаПоискаТаблица.Количество() = 0 Тогда
		Возврат ТзРезультат;
	КонецЕсли;
	
	Для сч = 0 По КоличествоПолейТаблица Цикл
		массив = Новый Массив;
		//массив.Добавить(ТипЗнч(ТаблицаПоискаТаблица[1][сч]));
		массив.Добавить(ТипЗнч(ТаблицаПоискаТаблица[0][сч]));
        тзРезультат.Колонки.Добавить(rsTABLE.fields.item(сч).name,Новый ОписаниеТипов(массив));
    КонецЦикла;

    Для Каждого стрТаблица Из ТаблицаПоискаТаблица Цикл
        стр=тзРезультат.Добавить();
        Для сч = 0 По КоличествоПолейТаблица Цикл
			попытка
               	стр[сч] = СокрЛП(стрТаблица[сч]);
            исключение
               	сообщить(ОписаниеОшибки());
			конецпопытки;			
        КонецЦикла;
	КонецЦикла;
	Возврат тзРезультат;
КонецФункции


