
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	мДатаРаспределения 	= Дата(1, 1, 1);
	мРасчетчик			= Справочники.Расчетчики.ПустаяСсылка();
	мСклад				= Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	Для Каждого ПользПоле Из ЭтотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(ПользПоле) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
			Если Строка(ПользПоле.Параметр) = "ДатаПоказателей" Тогда
				мДатаРаспределения 	= ПользПоле.Значение.Дата;
			ИначеЕсли Строка(ПользПоле.Параметр) = "Расчетчик" Тогда
				мРасчетчик 			= ПользПоле.Значение;
			ИначеЕсли Строка(ПользПоле.Параметр) = "Склад" Тогда
				мСклад 				= ПользПоле.Значение;			
			ИначеЕсли Строка(ПользПоле.Параметр) = "Поставщик" И ПользПоле.Использование Тогда
				мПоставщик 				= ПользПоле.Значение;					
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	
	//+++АК KIRN 2018.08.01 ИП-00012852.07 
	//
	ТаблицаДанных = Отчеты.ОтчетПоЗаказамПоставщикуАвто.ПолучитьДанныеДляФормирования(мДатаРаспределения, мРасчетчик, мСклад, мПоставщик,
						ЭтотОбъект.ДнейПродажВГруппировке, ЭтотОбъект.ГлубинаАнализа, ЭтотОбъект.ВыводитьТТМиниТТПусто, ЭтотОбъект.ВыводитьТолькоВВ, ЭтотОбъект.ИспользоватьНормативныйКвантДляРасчетаПлановогоОстатка);

	//ТаблицаДанных = Отчеты.ОтчетПоЗаказамПоставщикуАвто.ПолучитьДанныеДляФормирования(мДатаРаспределения, мРасчетчик, мСклад,
	//					ЭтотОбъект.ДнейПродажВГруппировке, ЭтотОбъект.ГлубинаАнализа, ЭтотОбъект.ВыводитьТТМиниТТПусто, ЭтотОбъект.ВыводитьТолькоВВ);
	//---АК KIRN 
	
	//
	мДата1  = мДатаРаспределения;
	мДата2  = мДатаРаспределения + 86400;
	мДата3  = мДатаРаспределения + 2*86400;
	мДата4  = мДатаРаспределения + 3*86400;
	мДата5  = мДатаРаспределения + 4*86400;
	мДата6  = мДатаРаспределения + 5*86400;
	Заголовок1 	= "Заказано на " + Формат(мДата1, "ДЛФ=Д");
	Заголовок2 	= "Заказано на " + Формат(мДата2, "ДЛФ=Д");
	Заголовок3 	= "Заказано на " + Формат(мДата3, "ДЛФ=Д");
	Заголовок4 	= "Заказано на " + Формат(мДата4, "ДЛФ=Д");
	Заголовок5 	= "Заказано на " + Формат(мДата5, "ДЛФ=Д");
	Заголовок6 	= "Заказано на " + Формат(мДата6, "ДЛФ=Д");
	Заголовок1_ = "Неразмещ. заказы на " + Формат(мДата1, "ДЛФ=Д");
	Заголовок2_ = "Неразмещ. заказы на " + Формат(мДата2, "ДЛФ=Д");
	Заголовок3_ = "Неразмещ. заказы на " + Формат(мДата3, "ДЛФ=Д");
	Заголовок4_ = "Неразмещ. заказы на " + Формат(мДата4, "ДЛФ=Д");
	Заголовок5_ = "Неразмещ. заказы на " + Формат(мДата5, "ДЛФ=Д");
	Заголовок6_ = "Неразмещ. заказы на " + Формат(мДата6, "ДЛФ=Д");
	
	ПолеКомпоновкиКолЗаказ1 = Новый ПолеКомпоновкиДанных("КоличествоЗаказ");
	ПолеКомпоновкиКолЗаказ2 = Новый ПолеКомпоновкиДанных("КоличествоЗаказ2");
	ПолеКомпоновкиКолЗаказ3 = Новый ПолеКомпоновкиДанных("КоличествоЗаказ3");
	ПолеКомпоновкиКолЗаказ4 = Новый ПолеКомпоновкиДанных("КоличествоЗаказ4");
	ПолеКомпоновкиКолЗаказ5 = Новый ПолеКомпоновкиДанных("КоличествоЗаказ5");
	ПолеКомпоновкиКолЗаказ6 = Новый ПолеКомпоновкиДанных("КоличествоЗаказ6");
	ПолеКомпоновкиКолЗаказ1_ = Новый ПолеКомпоновкиДанных("КоличествоЗаказ_");
	ПолеКомпоновкиКолЗаказ2_ = Новый ПолеКомпоновкиДанных("КоличествоЗаказ2_");
	ПолеКомпоновкиКолЗаказ3_ = Новый ПолеКомпоновкиДанных("КоличествоЗаказ3_");
	ПолеКомпоновкиКолЗаказ4_ = Новый ПолеКомпоновкиДанных("КоличествоЗаказ4_");
	ПолеКомпоновкиКолЗаказ5_ = Новый ПолеКомпоновкиДанных("КоличествоЗаказ5_");
	ПолеКомпоновкиКолЗаказ6_ = Новый ПолеКомпоновкиДанных("КоличествоЗаказ6_");
	
	ЭлементыПолейВыбора = ЭтотОбъект.КомпоновщикНастроек.Настройки.Выбор.Элементы;
	Для Каждого ПолеВыбора Из ЭлементыПолейВыбора Цикл
		Если ПолеВыбора.Поле = ПолеКомпоновкиКолЗаказ1 Тогда
            ПолеВыбора.Заголовок 		= Заголовок1;
			ПолеВыбора.Использование	= (ТаблицаДанных.Итог("КоличествоЗаказ") > 0)
		ИначеЕсли ПолеВыбора.Поле = ПолеКомпоновкиКолЗаказ2 Тогда
            ПолеВыбора.Заголовок 		= Заголовок2;
			ПолеВыбора.Использование	= (ТаблицаДанных.Итог("КоличествоЗаказ2") > 0)
		ИначеЕсли ПолеВыбора.Поле = ПолеКомпоновкиКолЗаказ3 Тогда
            ПолеВыбора.Заголовок 		= Заголовок3;
			ПолеВыбора.Использование	= (ТаблицаДанных.Итог("КоличествоЗаказ3") > 0)
		ИначеЕсли ПолеВыбора.Поле = ПолеКомпоновкиКолЗаказ4 Тогда
            ПолеВыбора.Заголовок 		= Заголовок4;
			ПолеВыбора.Использование	= (ТаблицаДанных.Итог("КоличествоЗаказ4") > 0)
		ИначеЕсли ПолеВыбора.Поле = ПолеКомпоновкиКолЗаказ5 Тогда
            ПолеВыбора.Заголовок 		= Заголовок5;
			ПолеВыбора.Использование	= (ТаблицаДанных.Итог("КоличествоЗаказ5") > 0)
		ИначеЕсли ПолеВыбора.Поле = ПолеКомпоновкиКолЗаказ6 Тогда
            ПолеВыбора.Заголовок 		= Заголовок6;
			ПолеВыбора.Использование	= (ТаблицаДанных.Итог("КоличествоЗаказ6") > 0)
		ИначеЕсли ПолеВыбора.Поле = ПолеКомпоновкиКолЗаказ1_ Тогда
            ПолеВыбора.Заголовок 		= Заголовок1_;
			ПолеВыбора.Использование	= (ТаблицаДанных.Итог("КоличествоЗаказ_") > 0)
		ИначеЕсли ПолеВыбора.Поле = ПолеКомпоновкиКолЗаказ2_ Тогда
            ПолеВыбора.Заголовок 		= Заголовок2_;
			ПолеВыбора.Использование	= (ТаблицаДанных.Итог("КоличествоЗаказ2_") > 0)
		ИначеЕсли ПолеВыбора.Поле = ПолеКомпоновкиКолЗаказ3_ Тогда
            ПолеВыбора.Заголовок 		= Заголовок3_;
			ПолеВыбора.Использование	= (ТаблицаДанных.Итог("КоличествоЗаказ3_") > 0)
		ИначеЕсли ПолеВыбора.Поле = ПолеКомпоновкиКолЗаказ4_ Тогда
            ПолеВыбора.Заголовок 		= Заголовок4_;
			ПолеВыбора.Использование	= (ТаблицаДанных.Итог("КоличествоЗаказ4_") > 0)
		ИначеЕсли ПолеВыбора.Поле = ПолеКомпоновкиКолЗаказ5_ Тогда
            ПолеВыбора.Заголовок 		= Заголовок5_;
			ПолеВыбора.Использование	= (ТаблицаДанных.Итог("КоличествоЗаказ5_") > 0)
		ИначеЕсли ПолеВыбора.Поле = ПолеКомпоновкиКолЗаказ6_ Тогда
            ПолеВыбора.Заголовок 		= Заголовок6_;
			ПолеВыбора.Использование	= (ТаблицаДанных.Итог("КоличествоЗаказ6_") > 0)
		КонецЕсли;
	КонецЦикла;
	
	
	//
	Настройки = ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки();

	// Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;

	// Передаем в макет компоновки схему, настройки и данные расшифровки
	мСхемаКомпоновки = ЭтотОбъект.ПолучитьМакет("Макет");
	МакетКомпоновки = КомпоновщикМакета.Выполнить(мСхемаКомпоновки, Настройки, ДанныеРасшифровки);

	// Выполним компоновку с помощью процессора компоновки
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ДанныеДляФормирования", ТаблицаДанных);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);

	// Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);	
	
КонецПроцедуры
