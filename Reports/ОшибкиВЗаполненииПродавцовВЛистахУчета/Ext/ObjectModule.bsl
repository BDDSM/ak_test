#Если Клиент Тогда

Перем ИмяРегистраБухгалтерии Экспорт;
Перем МаксКоличествоСубконто Экспорт;

Перем Линия;
Перем ЛинияЖирная;


//////////////////////////////////////////////////////////
// ФОРМИРОВАНИЕ ЗАГОЛОВКА ОТЧЕТА
//

Функция ЗаголовокОтчета() Экспорт
	
	Возврат "Ошибки в заполнении продавцов в листах учета";
	
КонецФункции // ЗаголовокОтчета()


//////////////////////////////////////////////////////////
// ПОСТРОЕНИЕ ОТЧЕТА
//

Процедура ОбвестиОбласти(ДокументРезультат, НачалоСекции=0)
	
	КонСтр = ДокументРезультат.ВысотаТаблицы;

	ДокументРезультат.Область(КонСтр,2,КонСтр,4).ГраницаСнизу = Линия;
	ДокументРезультат.Область(КонСтр,5,КонСтр,8).ГраницаСнизу = ЛинияЖирная;
	ДокументРезультат.Область(КонСтр,9,КонСтр,12).ГраницаСнизу = Линия;
	
	ДокументРезультат.Область(НачалоСекции,2,КонСтр,2).Объединить();
	ДокументРезультат.Область(НачалоСекции,3,КонСтр,3).Объединить();
	ДокументРезультат.Область(НачалоСекции,13,КонСтр,13).Объединить();
	ДокументРезультат.Область(НачалоСекции,2,КонСтр,3).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
	ДокументРезультат.Область(НачалоСекции,13,КонСтр,13).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
	
КонецПроцедуры

// Формирование отчета
Процедура СформироватьОтчет(ДокументРезультат) Экспорт

	//ОграничениеПоДатамКорректно = БухгалтерскиеОтчеты.ПроверитьКорректностьОграниченийПоДатам(ДатаНач, ДатаКон);
	//Если НЕ ОграничениеПоДатамКорректно Тогда
	//	Возврат;
	//КонецЕсли;

	Если ЭтотОбъект.ДатаНач > ЭтотОбъект.ДатаКон
			И ЭтотОбъект.ДатаКон <> '00010101000000' Тогда
        Сообщить("Дата начала периода не может быть больше даты конца периода");
		Возврат;
	КонецЕсли;
	
	ДокументРезультат.Очистить();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала"		, ЭтотОбъект.ДатаНач);
	Запрос.УстановитьПараметр("ДатаОкончания"	, ?(ЭтотОбъект.ДатаКон = '00010101', ЭтотОбъект.ДатаКон, КонецДня(ЭтотОбъект.ДатаКон)));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЛистУчетаПродавцы.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТЛистУчетаПродавцы
	|ИЗ
	|	Документ.ЛистУчета.Продавцы КАК ЛистУчетаПродавцы
	|ГДЕ
	|	ЛистУчетаПродавцы.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И НЕ ЛистУчетаПродавцы.Ссылка.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	ЛистУчетаПродавцы.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЛистУчетаПродавцы.Ссылка.МоментВремени КАК МоментВремени,
	|	ЛистУчетаПродавцы.Ссылка КАК ЛистУчета
	|ИЗ
	|	Документ.ЛистУчета.Продавцы КАК ЛистУчетаПродавцы
	|ГДЕ
	|	ЛистУчетаПродавцы.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И НЕ ЛистУчетаПродавцы.Ссылка.ПометкаУдаления
	|
	|СГРУППИРОВАТЬ ПО
	|	ЛистУчетаПродавцы.Ссылка,
	|	ЛистУчетаПродавцы.Ссылка.МоментВремени
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|		КОГДА ЛистУчетаПродавцы.Пч = 0             // Полный
	|				ИЛИ ЛистУчетаПродавцы.Пч = 2       // Старший продавец
	|			ТОГДА 0
	|		ИНАЧЕ 1                                    // все остальные
	|	КОНЕЦ) = МАКСИМУМ(ЛистУчетаПродавцы.НомерСтроки)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокЛистУчета.МоментВремени,
	|	ДокЛистУчета.Ссылка
	|ИЗ
	|	Документ.ЛистУчета КАК ДокЛистУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЛистУчетаПродавцы КАК ЛистУчетаПродавцы
	|		ПО (ЛистУчетаПродавцы.Ссылка = ДокЛистУчета.Ссылка)
	|ГДЕ
	|	ДокЛистУчета.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И НЕ ДокЛистУчета.ПометкаУдаления
	|	И ЛистУчетаПродавцы.Ссылка ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	МоментВремени
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЛистУчетаПродавцы";
	
	
	Состояние("Выполнение запроса");
	Результат = Запрос.Выполнить();
	
	Макет = ПолучитьМакет("Макет");

	ОбластьШапки = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапки.Параметры.ДатаНач = Формат(ЭтотОбъект.ДатаНач, "ДЛФ=Д");
	ОбластьШапки.Параметры.ДатаКон = Формат(ЭтотОбъект.ДатаКон, "ДЛФ=Д");
	ДокументРезультат.Вывести(ОбластьШапки);
	
	Выборка = Результат.Выбрать();
	
	Если Выборка.Количество() > 0 Тогда
		
		ОбластьШапки = Макет.ПолучитьОбласть("Шапка");
		ДокументРезультат.Вывести(ОбластьШапки);
		
		ОблСтрока = Макет.ПолучитьОбласть("Строка");
		
		СуммаИтого = 0;
		
		Пока Выборка.Следующий() Цикл
			
			ОблСтрока.Параметры.Заполнить(Выборка);
			ДокументРезультат.Вывести(ОблСтрока);
				
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры


#КонецЕсли