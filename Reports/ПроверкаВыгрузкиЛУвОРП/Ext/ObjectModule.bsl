Функция ПолучитьОрганизациюБух(ОргФин, Соединение)
	
	Запрос = Соединение.NewObject("Запрос");	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Организации.Ссылка
	               |ИЗ
	               |	Справочник.Организации КАК Организации
	               |ГДЕ
	               |	Организации.ИНН = &ИНН";
	
	Запрос.УстановитьПараметр("ИНН", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОргФин, "ИНН"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Соединение.Справочники.Организации.ПустаяСсылка();
	КонецЕсли;	                                                          
	
КонецФункции
	
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;	
	
	СтрокаПодключения = ПолныеПрава.ПолучитьСтрокуПодключения_Бух();
	
	v82COMОбъект = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Бух() + ".COMConnector");
	Попытка
		v82 = v82COMОбъект.Connect(СтрокаПодключения);
		ПодключениеУстановлено=Истина;
	Исключение
		ПодключениеУстановлено=Ложь;
		Сообщить("Не удалось подключиться к базе бухгалтерии!");
		Возврат;
	КонецПопытки;	
		
	ЗапросБух=v82.NewObject("Запрос");	
	ЗапросФин = Новый Запрос;
	
	КомпоновщикНастроек.ЗагрузитьНастройки(КомпоновщикНастроек.ПолучитьНастройки());
	
	Для каждого Параметр из КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы Цикл
		Если СокрЛП(Параметр.Параметр)="ПериодОтчета" Тогда
			ЗапросБух.УстановитьПараметр("НачалоПериода",Параметр.Значение.ДатаНачала);
			ЗапросБух.УстановитьПараметр("КонецПериода",КонецДня(Параметр.Значение.ДатаОкончания));
			
			ЗапросФин.УстановитьПараметр("НачалоПериода",Параметр.Значение.ДатаНачала);
			ЗапросФин.УстановитьПараметр("КонецПериода",КонецДня(Параметр.Значение.ДатаОкончания));			
			
		ИначеЕсли СокрЛП(Параметр.Параметр) = "Организация" Тогда
			
			Если Параметр.Значение = Справочники.Организации.ПустаяСсылка() Тогда
				Орг = Справочники.Организации.ПолучитьСсылку(Новый УникальныйИдентификатор("5b68dea0-77d9-11e1-86c2-000c29e4e68a")); //Вкусвилл - если не заполнили
			Иначе
				Орг = Параметр.Значение;
			КонецЕсли;
			
			ЗапросБух.УстановитьПараметр("Организация", ПолучитьОрганизациюБух(Орг, v82));
			ЗапросФин.УстановитьПараметр("Организация", Орг);
		
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаФинансы.Очистить();
	ДанныеБух.Очистить();

	ЗапросФин.Текст = "ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ФинансовыйОборотыДтКт.Период, ДЕНЬ) КАК Период,
	|	ФинансовыйОборотыДтКт.СубконтоДт3 КАК ТТ,
	|	СУММА(ФинансовыйОборотыДтКт.СуммаОборот) КАК Сумма,
	|	ФинансовыйОборотыДтКт.Регистратор КАК ЛистУчета
	|ПОМЕСТИТЬ ВыручкаРВ1
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.ОборотыДтКт(&НачалоПериода, &КонецПериода, Регистратор, СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.НераспределеннаяРозничнаяВыручка), , , , Организация = &Организация) КАК ФинансовыйОборотыДтКт
	|ГДЕ
	|	ФинансовыйОборотыДтКт.Регистратор ССЫЛКА Документ.ЛистУчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ФинансовыйОборотыДтКт.СубконтоДт3,
	|	НАЧАЛОПЕРИОДА(ФинансовыйОборотыДтКт.Период, ДЕНЬ),
	|	ФинансовыйОборотыДтКт.Регистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) КАК Дата,
	|	СУММА(ВЫБОР
	|			КОГДА ЛистУчетаАктыКМ3.ПолученаСумма <> 0
	|				ТОГДА ЛистУчетаАктыКМ3.ПолученаСумма
	|			ИНАЧЕ ЛистУчетаАктыКМ3.Сумма
	|		КОНЕЦ) КАК Сумма,
	|	ЛистУчета.ТорговаяТочка КАК ТорговаяТочка,
	|	ЛистУчета.Ссылка КАК ЛистУчета
	|ПОМЕСТИТЬ ОбъединениеВозвраты
	|ИЗ
	|	Документ.ЛистУчета.АктыКМ3 КАК ЛистУчетаАктыКМ3
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЛистУчета КАК ЛистУчета
	|		ПО ЛистУчетаАктыКМ3.Ссылка = ЛистУчета.Ссылка
	|ГДЕ
	|	ЛистУчетаАктыКМ3.АктПолучен
	|	И ЛистУчета.Проведен
	|	И ЛистУчета.Организация = &Организация
	|	И ЛистУчета.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ),
	|	ЛистУчета.ТорговаяТочка,
	|	ЛистУчета.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ),
	|	СУММА(ВЫБОР
	|			КОГДА ЛистУчетаВозвратыИзСейфа.ПолученаСумма <> 0
	|				ТОГДА ЛистУчетаВозвратыИзСейфа.ПолученаСумма
	|			ИНАЧЕ ЛистУчетаВозвратыИзСейфа.Сумма
	|		КОНЕЦ),
	|	ЛистУчета.ТорговаяТочка,
	|	ЛистУчета.Ссылка
	|ИЗ
	|	Документ.ЛистУчета.ВозвратыИзСейфа КАК ЛистУчетаВозвратыИзСейфа
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЛистУчета КАК ЛистУчета
	|		ПО ЛистУчетаВозвратыИзСейфа.Ссылка = ЛистУчета.Ссылка
	|ГДЕ
	|	ЛистУчета.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ЛистУчета.Проведен
	|	И ЛистУчета.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ),
	|	ЛистУчета.ТорговаяТочка,
	|	ЛистУчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбъединениеВозвраты.Дата,
	|	СУММА(ОбъединениеВозвраты.Сумма) КАК Сумма,
	|	ОбъединениеВозвраты.ТорговаяТочка,
	|	ОбъединениеВозвраты.ЛистУчета
	|ПОМЕСТИТЬ СводнаяВозвраты
	|ИЗ
	|	ОбъединениеВозвраты КАК ОбъединениеВозвраты
	|
	|СГРУППИРОВАТЬ ПО
	|	ОбъединениеВозвраты.Дата,
	|	ОбъединениеВозвраты.ТорговаяТочка,
	|	ОбъединениеВозвраты.ЛистУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыручкаРВ1.Период,
	|	ВыручкаРВ1.ЛистУчета,
	|	ВыручкаРВ1.Сумма - ЕСТЬNULL(СводнаяВозвраты.Сумма, 0) КАК СуммаФин
	|ИЗ
	|	ВыручкаРВ1 КАК ВыручкаРВ1
	|		ЛЕВОЕ СОЕДИНЕНИЕ СводнаяВозвраты КАК СводнаяВозвраты
	|		ПО ВыручкаРВ1.Период = СводнаяВозвраты.Дата
	|			И ВыручкаРВ1.ТТ = СводнаяВозвраты.ТорговаяТочка
	|			И ВыручкаРВ1.ЛистУчета = СводнаяВозвраты.ЛистУчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ВыручкаРВ1.Период,
	|	ВыручкаРВ1.ЛистУчета,
	|	ВыручкаРВ1.Сумма - ЕСТЬNULL(СводнаяВозвраты.Сумма, 0)";
	
	ТаблицаФинансы.Загрузить(ЗапросФин.Выполнить().Выгрузить());	
	
	ЗапросБух.Текст = "ВЫБРАТЬ
	                  |	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОборотыДтКт.Регистратор) КАК РегистраторПредставление,
	                  |	ХозрасчетныйОборотыДтКт.Регистратор КАК РегистраторСсылка,
	                  |	НАЧАЛОПЕРИОДА(ХозрасчетныйОборотыДтКт.Период, ДЕНЬ) КАК Период,
	                  |	ХозрасчетныйОборотыДтКт.ПодразделениеКт КАК ТТ,
	                  |	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК Сумма
	                  |ИЗ
	                  |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Регистратор, СчетДт В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСРозничнымиПокупателями)), , СчетКт В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Выручка)), , ) КАК ХозрасчетныйОборотыДтКт
	                  |ГДЕ
	                  |	(ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	                  |			ИЛИ ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя)
	                  |
	                  |СГРУППИРОВАТЬ ПО
	                  |	НАЧАЛОПЕРИОДА(ХозрасчетныйОборотыДтКт.Период, ДЕНЬ),
	                  |	ХозрасчетныйОборотыДтКт.ПодразделениеКт,
	                  |	ХозрасчетныйОборотыДтКт.Регистратор
	                  |
	                  |ОБЪЕДИНИТЬ ВСЕ
	                  |
	                  |ВЫБРАТЬ
	                  |	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОборотыДтКт.Регистратор),
	                  |	ХозрасчетныйОборотыДтКт.Регистратор,
	                  |	НАЧАЛОПЕРИОДА(ХозрасчетныйОборотыДтКт.Период, ДЕНЬ),
	                  |	ХозрасчетныйОборотыДтКт.ПодразделениеКт,
	                  |	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот)
	                  |ИЗ
	                  |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&НачалоПериода, &КонецПериода, Регистратор, СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПродажиПоПлатежнымКартам), , СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПокупателями), , ) КАК ХозрасчетныйОборотыДтКт
	                  |ГДЕ
	                  |	ХозрасчетныйОборотыДтКт.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	                  |
	                  |СГРУППИРОВАТЬ ПО
	                  |	НАЧАЛОПЕРИОДА(ХозрасчетныйОборотыДтКт.Период, ДЕНЬ),
	                  |	ХозрасчетныйОборотыДтКт.ПодразделениеКт,
	                  |	ХозрасчетныйОборотыДтКт.Регистратор
	                  |
	                  |УПОРЯДОЧИТЬ ПО
	                  |	ТТ
	                  |АВТОУПОРЯДОЧИВАНИЕ";		
	
	ВыборкаБух = ЗапросБух.Выполнить().Выбрать();
	
	СоответствиеСтрокСГуидами = Новый Соответствие;
	
	Пока ВыборкаБух.Следующий() Цикл
		НС=ДанныеБух.Добавить();
		ЗаполнитьЗначенияСвойств(НС, ВыборкаБух);		       		
		НС.Гуид = v82.XmlСтрока(ВыборкаБух.РегистраторСсылка);
		
		МассивСтрокПоГуиду = СоответствиеСтрокСГуидами.Получить(НС.Гуид);
		
		Если МассивСтрокПоГуиду = Неопределено Тогда
			МассивСтрокПоГуиду = Новый Массив;
		КонецЕсли;
		
		МассивСтрокПоГуиду.Добавить(НС);
			
		СоответствиеСтрокСГуидами.Вставить(НС.Гуид, МассивСтрокПоГуиду);
		
	КонецЦикла;	
		
	СводнаяТаблица = Новый ТаблицаЗначений;	
	СводнаяТаблица.Колонки.Добавить("Период");
	СводнаяТаблица.Колонки.Добавить("ЛистУчета");
	СводнаяТаблица.Колонки.Добавить("ДокументБух");
	СводнаяТаблица.Колонки.Добавить("СуммаФин");
	СводнаяТаблица.Колонки.Добавить("СуммаБух");
	СводнаяТаблица.Колонки.Добавить("Отклонение");
		
	Для Каждого Стр Из ТаблицаФинансы Цикл
		НовСтр = СводнаяТаблица.Добавить();
		НовСтр.ЛистУчета = Стр.ЛистУчета;
		НовСтр.СуммаФин = Стр.СуммаФин;
		НовСтр.Период = Стр.Период;
		
		ПерваяСтрока = Истина;
		ОбщСуммаБух = 0;
		
		НайдМассивСтрок = СоответствиеСтрокСГуидами.Получить(Строка(Стр.ЛистУчета.УникальныйИдентификатор()));
		
		Если НайдМассивСтрок = Неопределено Тогда
			НовСтр.ДокументБух = "";
			НовСтр.СуммаБух = "";
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаБух Из НайдМассивСтрок Цикл
			Если НЕ ПерваяСтрока Тогда
				НовСтр = СводнаяТаблица.Добавить();
				НовСтр.ЛистУчета = Стр.ЛистУчета;
				НовСтр.Период = Стр.Период;
				НовСтр.СуммаФин = 0;
			КонецЕсли;
			
			НовСтр.ДокументБух = СтрокаБух.РегистраторПредставление;
			НовСтр.СуммаБух = СтрокаБух.Сумма;
			ОбщСуммаБух = ОбщСуммаБух + СтрокаБух.Сумма;
			ПерваяСтрока = Ложь;			
		КонецЦикла;
		
		НовСтр.Отклонение = Стр.СуммаФин - ОбщСуммаБух;
		
	КонецЦикла;
	//Из схемы возьмем настройки по умолчанию
	Настройки = КомпоновщикНастроек.Настройки;

	//Помещаем в переменную данные о расшифровке данных
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;

	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;

	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,
											Настройки, ДанныеРасшифровки);

	ВнешниеНаборыДанных=Новый Структура;

	ВнешниеНаборыДанных.Вставить("СводнаяТаблица",СводнаяТаблица);										
											
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,
													   ДанныеРасшифровки);

	//Очищаем поле табличного документа

	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);

	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

КонецПроцедуры