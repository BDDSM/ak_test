
&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьСервер();
КонецПроцедуры

Процедура СформироватьСервер()
	ТабДок.Очистить();
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МИНИМУМ(ТоварыНаСкладах.Ссылка.Дата) КАК Период,
		|	ТоварыНаСкладах.Номенклатура,
		|	ТоварыНаСкладах.Характеристика,
		|	ЗначенияСвойствОбъектов.Значение.ИД КАК ИДКонтр,
		|	ТоварыНаСкладах.Номенклатура.id_tov КАК id_tov
		|ИЗ
		|	Документ.ПриходныйОрдерСклад.Товары КАК ТоварыНаСкладах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|		ПО (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовхарактеристик.СвойстваОбъектов.Производитель))
		|			И ТоварыНаСкладах.Характеристика = ЗначенияСвойствОбъектов.Объект
		|			И (ТоварыНаСкладах.Ссылка.Дата < &Дата2)
		|			И (ТоварыНаСкладах.Характеристика.Неактивная = ЛОЖЬ)
		|ГДЕ
		|	ТоварыНаСкладах.Ссылка.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыНаСкладах.Номенклатура,
		|	ТоварыНаСкладах.Характеристика,
		|	ЗначенияСвойствОбъектов.Значение.ИД,
		|	ТоварыНаСкладах.Номенклатура.id_tov
		|
		|ИМЕЮЩИЕ
		|	ДОБАВИТЬКДАТЕ(МИНИМУМ(ТоварыНаСкладах.Ссылка.Дата), ДЕНЬ, 30) МЕЖДУ &Дата1 И &Дата2";
	Запрос.УстановитьПараметр("Дата2",КонецМесяца(Дата));
	Запрос.УстановитьПараметр("Дата1",НачалоМесяца(Дата));

	ТЗПериоды=Запрос.Выполнить().Выгрузить();
	
	
	ADOСоединение = Новый COMОбъект("ADODB.Connection");
	ADOСоединение.ConnectionTimeOut = 0;
	ADOСоединение.CommandTimeOut    = 0;
	СтрПодкл=ОбменСAccess.ПолучитьСтрокуСоединения("M2");
	//СтрПодкл=СтрЗаменить(СтрПодкл,"sms_izbenka","m2");
	ADOСоединение.ConnectionString  = СтрПодкл;
	ADOСоединение.Open();
	Если ADOСоединение.State() = 0 Тогда
		Возврат;
	Иначе         
	КонецЕсли;
	//
	
	
	
	СтрЗапрос =	" 
	|
	|declare @date1 as datetime , @date2 as datetime, @date3 as datetime , @date4 as datetime

					|set @date1="+ВнешниеДанные.ФорматПоля(ДобавитьМесяц(НачалоМесяца(Дата),-1))+"
					|set @date2 = "+ВнешниеДанные.ФорматПоля(КонецМесяца(Дата))+"
					|set @date3="+ВнешниеДанные.ФорматПоля(ДобавитьМесяц(НачалоМесяца(Дата),-3))+"
					|set @date4 = "+ВнешниеДанные.ФорматПоля(НачалоМесяца(Дата)-1)+"
	 |create table #ls (Period datetime,id_tov int, id_kontr int, Расх numeric(15, 3), Кол numeric(15, 3)

	 |) 
	 |
	|Insert into #ls


	|SELECT date_r Period,id_tov ,id_kontr,  sum(Summa+transp) Расх, sum(kolvo)  Кол 
	|FROM [Reports].[dbo].[Sebest_proizvod_old] sp with(nolock)
	|where date_r between @date1 and @date2	

	|group by  id_tov,id_kontr,date_r                                                
	|having sum(kolvo)>0
	
|-----------------------------------------------
	 |create table #ls1 (id_tov int,  Себест numeric(15, 3)
	 |) 
	 |
	|Insert into #ls1


	|SELECT id_tov ,  convert(decimal(15,2),sum(Summa+transp) / sum(kolvo))  Себест 
	|FROM [Reports].[dbo].[Sebest_proizvod_old] sp with(nolock)
	|where date_r between @date3 and @date4	

	|group by  id_tov                                                
	|having sum(kolvo)>0

|-----------------------------------------------

	|SELECT ls.Period,ls.id_tov ,ls.id_kontr,  ls.Расх, ls.Кол,ls1.Себест 
	|FROM #ls ls 
	|Inner join #ls1 ls1 on ls.id_tov=ls1.id_tov
|";


	
	//СтрЗапрос = "SELECT * 
	//			  |  	  FROM IzbenkaFin.._Reference5118 (nolock)";

	   //МасИДХар=Объект.Характеристики.Выгрузить().ВыгрузитьКолонку("ИДЭлемента");
	rs = ADOСоединение.Execute(СтрЗапрос);
	//ТЗ=Новый ТаблицаЗначений;
	//ТЗ.Колонки.Добавить("Место");
	//ТЗ.Колонки.Добавить("Сенсор");
	//ТЗ.Колонки.Добавить("Shop_name");
	//ТЗ.Колонки.Добавить("mest_name");
	//ТЗ.Колонки.Добавить("Ответ");
	//ТЗ.Колонки.Добавить("Дата");
	//ТЗ.Колонки.Добавить("is_made");                           
	//ТЗ.Колонки.Добавить("ShopNo");
	Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
		rs=rs.NextRecordSet();
	КонецЦикла;
	
	
	ТабДанныеСТТ = Новый ТаблицаЗначений();
	ТабДанныеСТТ.Колонки.Добавить("ТовИД"	, Новый ОписаниеТипов("Число"));
	ТабДанныеСТТ.Колонки.Добавить("КонтрИД"	, Новый ОписаниеТипов("Число"));
	ТабДанныеСТТ.Колонки.Добавить("Дата"		, Новый ОписаниеТипов("Дата"));
	//ТабДанные.Колонки.Добавить("ДатаОкончания"		, Новый ОписаниеТипов("Дата"));
	//

	//ТабДанные.Колонки.Добавить("Выручка"			, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ВыручкаОбщ"			, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("Оборот"			, Новый ОписаниеТипов("Число"));
	ТабДанныеСТТ.Колонки.Добавить("Расх"			, Новый ОписаниеТипов("Число"));
	ТабДанныеСТТ.Колонки.Добавить("Кол"			, Новый ОписаниеТипов("Число"));
	ТабДанныеСТТ.Колонки.Добавить("Себест"			, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ПроцентПродажСоСкидкойКВыручке"			, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ПроцентСписанийПоСрокуКВыручке"			, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ПроцентСписанийПоКачествуКВыручке"	, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ПовторныеПокупки"				, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ПокупкиОбщие"				, Новый ОписаниеТипов("Число"));
	//
	//ТабДанные.Колонки.Добавить("Частота"				, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ПродажиСоСкидкой"				, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("СписанияПоСроку"				, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("СписанияПоКачеству"				, Новый ОписаниеТипов("Число"));
	                                                                                                 
	//Попытка
		rs.MoveFirst();
		//
		Сч=0;
		Пока НЕ rs.EOF() Цикл
			Сч=Сч+1;
			Если Сч=100 Тогда
			 //прервать;
		  КонецЕсли; 
		  //Сообщить(Rs.Fields("period").Value);
			Если ТЗПериоды.НайтиСтроки(Новый Структура("id_tov,ИДКонтр",Rs.Fields("id_tov").Value,Rs.Fields("id_kontr").Value)).Количество()=0 Тогда
				rs.MoveNext();
				Продолжить;
			КонецЕсли;
			
			
			
			СтрокаДоб = ТабДанныеСТТ.Добавить();

			СтрокаДоб.Дата=	(Rs.Fields("Period").Value);
			СтрокаДоб.ТовИД=	(Rs.Fields("id_tov").Value);
			СтрокаДоб.КонтрИД = Rs.Fields("id_kontr").Value;
			СтрокаДоб.Расх = Rs.Fields("Расх").Value;
			СтрокаДоб.Кол = Rs.Fields("Кол").Value;
			СтрокаДоб.Себест = Rs.Fields("Себест").Value;
			rs.MoveNext();
		КонецЦикла;
		
		ТЗИтог=ТЗПериоды.СкопироватьКолонки();
		ТЗИтог.Колонки.Добавить("СебестоимостьХарактеристикиЗаМесяц"			, Новый ОписаниеТипов("Число"));
		ТЗИтог.Колонки.Добавить("СредняяСебестоимостьТовара"			, Новый ОписаниеТипов("Число"));
		ТЗИтог.Колонки.Добавить("ПроцентРазницы"			, Новый ОписаниеТипов("Число"));
		
		Для каждого Стр Из ТЗПериоды Цикл
			ДатаОтсчета=НачалоДня(Стр.Период);
		    Расх=0;
			Кол=0;
			Для Сч=1 По 30 Цикл
				МасСтр=ТабДанныеСТТ.НайтиСтроки(Новый Структура("Дата,ТовИД,КонтрИД",ДатаОтсчета,Стр.id_tov,Стр.ИДКонтр));
				Для каждого Эл Из МасСтр Цикл
				    Расх=Расх+Эл.Расх;
					Кол=Кол+Эл.Кол;
					СС=Эл.Себест;
				КонецЦикла;
				
			    ДатаОтсчета=ДатаОтсчета+24*60*60;
			КонецЦикла;
			Если Кол=0 Тогда
				Продолжить;
			КонецЕсли; 
			ССМесяц=Расх/Кол;
			Если ССМесяц<СС И (СС-ССМесяц)/СС>=ПроцентСниженияЦены/100 Тогда
				НовСтр=ТЗИтог.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр,Стр);
				НовСтр.СебестоимостьХарактеристикиЗаМесяц=Окр(ССМесяц,2);
				НовСтр.СредняяСебестоимостьТовара=Окр(СС,2);
				НовСтр.ПроцентРазницы=Окр(100*(СС-ССМесяц)/СС,2);
			КонецЕсли; 
		КонецЦикла;
		ТЗИтог.Сортировать("ПроцентРазницы убыв");
		Мак=Отчеты.ОтчетПоОпределениюТоваровПоСниженнымЦенам.ПолучитьМакет("Макет");
		Шапка=Мак.ПолучитьОбласть("Шапка");
		ТабДок.Вывести(Шапка);
		Для каждого Стр Из ТЗИтог Цикл
			Строка=Мак.ПолучитьОбласть("Строка");
			ЗаполнитьЗначенияСвойств(Строка.Параметры,Стр);
			ТабДок.Вывести(Строка);
		КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Дата=КонецМесяца(ТекущаяДата());
	ПроцентСниженияЦены=10;
КонецПроцедуры
