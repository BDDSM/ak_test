
#Область ОбработчикиСобытий

//+++АК LATV 2018.11.30 ИП-00020296
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	Сформировать(ДокументРезультат, ДанныеРасшифровки);
	
	// Рассылка отчета
	РежимРассылки = КомпоновщикНастроек.ФиксированныеНастройки.ДополнительныеСвойства.Свойство("РежимРассылки");
	Если РежимРассылки
	   И Не КомпоновщикНастроек.ФиксированныеНастройки.ДополнительныеСвойства.Свойство("ОтчетПустой") Тогда
		
		ПисьмаДляОтправки = Новый Массив;
		
		Получатели = КомпоновщикНастроек.ФиксированныеНастройки.ДополнительныеСвойства.Получатели;
		Письмо = УправлениеЭлектроннойПочтой.СформироватьПисьмоСОтчетом(ДокументРезультат, Метаданные().Синоним, Получатели);
		
		ПисьмаДляОтправки.Добавить(Письмо);
		
		УправлениеЭлектроннойПочтой.СформироватьИОтправитьПисьма(ПисьмаДляОтправки);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ФормированиеВРежимеРассылки

//+++АК LATV 2018.11.30 ИП-00020296
Процедура Сформировать(ДокументРезультат, ДанныеРасшифровки)

	// Получение данных отчета
	ДанныеРаспределения = ПолучитьДанныеРаспределения();
	Расхождения = ПолучитьРасхождениеДанных1СиРаспределения(ДанныеРаспределения);
	
	Если Расхождения.Количество() = 0 Тогда
		КомпоновщикНастроек.ФиксированныеНастройки.ДополнительныеСвойства.Вставить("ОтчетПустой");
		Возврат;
	КонецЕсли;
	
	// Формирование отчета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("Расхождения", Расхождения);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);

КонецПроцедуры

//+++АК LATV 2018.11.30 ИП-00020296
Функция ПолучитьДанныеРаспределения()

	ДанныеРаспределения = Новый ТаблицаЗначений;
	ДанныеРаспределения.Колонки.Добавить("id_zone",		ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(10));
	ДанныеРаспределения.Колонки.Добавить("id_tt",		ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(10));
	ДанныеРаспределения.Колонки.Добавить("id_tov",		ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(10));
	ДанныеРаспределения.Колонки.Добавить("id_kontr",	ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(10));
	ДанныеРаспределения.Колонки.Добавить("number_r",	ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(10));
	ДанныеРаспределения.Колонки.Добавить("q_raspr",		ОбщегоНазначения.ПолучитьОписаниеТиповЧисла(15, 3));
	
	СтрокаПоключения = ОбменСAccess.ПолучитьСтрокуСоединения("M2");
	ADOСоединение = Справочники.АК_ВнешниеБазыДанных.ADO_Connection(СтрокаПоключения);
	
	ТекстЗапроса = "EXEC M2..FOR1C_Get_аrchive_rasp &ДатаРаспределения, &ТорговыеТочки";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ДатаРаспределения",	"@DateRaspr = " + ВнешниеДанные.ФорматПоля(ДатаРаспределения));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТорговыеТочки",		"@id_tt = ''");

	ADORecordSet = Справочники.АК_ВнешниеБазыДанных.ADO_Execute(ADOСоединение, ТекстЗапроса);
	Если ADORecordSet = Неопределено Тогда
		Возврат ДанныеРаспределения;
	КонецЕсли;
	
	ADO_Данные = Справочники.АК_ВнешниеБазыДанных.RecordSet_в_ТаблицуЗначений(ADORecordSet);
	Для Каждого ТекСтрокаДанных Из ADO_Данные Цикл
		
		НоваяСтрока = ДанныеРаспределения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрокаДанных);
		
	КонецЦикла;
	
	ADOСоединение.Close();
	
	Возврат ДанныеРаспределения;

КонецФункции

//+++АК LATV 2018.11.30 ИП-00020296
Функция ПолучитьРасхождениеДанных1СиРаспределения(ДанныеРаспределения)

	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ДанныеРаспределения.id_zone КАК id_zone,
		|	ДанныеРаспределения.id_tt КАК id_tt,
		|	ДанныеРаспределения.id_tov КАК id_tov,
		|	ДанныеРаспределения.id_kontr КАК id_kontr,
		|	ДанныеРаспределения.number_r КАК НомерРаспределения,
		|	ДанныеРаспределения.q_raspr КАК КоличествоКРаспределению
		|ПОМЕСТИТЬ втДанныеРаспределения
		|ИЗ
		|	&ДанныеРаспределения КАК ДанныеРаспределения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Склады.Ссылка КАК Склад,
		|	Склады.НеОчищатьЗаданияНаРазборкуПриНовомРаспределении КАК СкладРазборки,
		|	СтруктурныеЕдиницы.Ссылка КАК ТорговаяТочка,
		|	СтруктурныеЕдиницы.ОсновнойСклад КАК ОсновнойСклад,
		|	Номенклатура.Ссылка КАК Номенклатура,
		|	Номенклатура.Весовой КАК ВесовойТовар,
		|	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
		|	втДанныеРаспределения.НомерРаспределения,
		|	втДанныеРаспределения.КоличествоКРаспределению
		|ПОМЕСТИТЬ втДанныеРаспределения1С
		|ИЗ
		|	втДанныеРаспределения КАК втДанныеРаспределения
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады КАК Склады
		|		ПО втДанныеРаспределения.id_zone = Склады.ИД
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		|		ПО втДанныеРаспределения.id_tt = СтруктурныеЕдиницы.id_TT
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО втДанныеРаспределения.id_tov = Номенклатура.id_tov
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|		ПО втДанныеРаспределения.id_kontr = ХарактеристикиНоменклатуры.id_kontr
		|			И (Номенклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втДанныеРаспределения1С.Склад,
		|	втДанныеРаспределения1С.ТорговаяТочка КАК ТорговаяТочка,
		|	втДанныеРаспределения1С.Номенклатура КАК Номенклатура,
		|	втДанныеРаспределения1С.ВесовойТовар,
		|	втДанныеРаспределения1С.Характеристика КАК Характеристика,
		|	втДанныеРаспределения1С.КоличествоКРаспределению КАК КоличествоКРаспределению,
		|	СУММА(ЕСТЬNULL(ЗаданиеНаРазборкуТовары.Количество, 0)) КАК КоличествоВДокументе,
		|	СУММА(ЕСТЬNULL(ЗаданиеНаРазборкуТовары.КоличествоУРЗ, 0)) КАК КоличествоУРЗ,
		|	ЕСТЬNULL(ЗаданиеНаРазборкуТовары.Ссылка, НЕОПРЕДЕЛЕНО) КАК Документ,
		|	втДанныеРаспределения1С.НомерРаспределения
		|ПОМЕСТИТЬ втДанные1С
		|ИЗ
		|	втДанныеРаспределения1С КАК втДанныеРаспределения1С
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДоступностьТоваровНаСкладах КАК ДоступностьТоваровНаСкладах
		|		ПО втДанныеРаспределения1С.ОсновнойСклад = ДоступностьТоваровНаСкладах.СтруктурнаяЕдиница
		|			И втДанныеРаспределения1С.Номенклатура = ДоступностьТоваровНаСкладах.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаРазборку.Товары КАК ЗаданиеНаРазборкуТовары
		|		ПО втДанныеРаспределения1С.ТорговаяТочка = ЗаданиеНаРазборкуТовары.СтруктурнаяЕдиница
		|			И втДанныеРаспределения1С.Номенклатура = ЗаданиеНаРазборкуТовары.Ссылка.Номенклатура
		|			И втДанныеРаспределения1С.Характеристика = ЗаданиеНаРазборкуТовары.Ссылка.Характеристика
		|			И (ЗаданиеНаРазборкуТовары.Ссылка.Дата = &ДатаРаспределения)
		|			И втДанныеРаспределения1С.НомерРаспределения = ЗаданиеНаРазборкуТовары.НомерРаспределения
		|			И (НЕ ЗаданиеНаРазборкуТовары.Ссылка.ПометкаУдаления)
		|ГДЕ
		|	втДанныеРаспределения1С.СкладРазборки
		|
		|СГРУППИРОВАТЬ ПО
		|	втДанныеРаспределения1С.Склад,
		|	втДанныеРаспределения1С.ТорговаяТочка,
		|	втДанныеРаспределения1С.Номенклатура,
		|	втДанныеРаспределения1С.ВесовойТовар,
		|	втДанныеРаспределения1С.Характеристика,
		|	ЕСТЬNULL(ЗаданиеНаРазборкуТовары.Ссылка, НЕОПРЕДЕЛЕНО),
		|	втДанныеРаспределения1С.КоличествоКРаспределению,
		|	втДанныеРаспределения1С.НомерРаспределения
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втДанныеРаспределения1С.Склад,
		|	втДанныеРаспределения1С.ТорговаяТочка,
		|	втДанныеРаспределения1С.Номенклатура,
		|	втДанныеРаспределения1С.ВесовойТовар,
		|	втДанныеРаспределения1С.Характеристика,
		|	втДанныеРаспределения1С.КоличествоКРаспределению,
		|	СУММА(ЕСТЬNULL(РасходныйОрдерСкладТовары.Количество, 0)),
		|	СУММА(ЕСТЬNULL(РасходныйОрдерСкладТовары.КоличествоУРЗ, 0)),
		|	ЕСТЬNULL(РасходныйОрдерСкладТовары.Ссылка, НЕОПРЕДЕЛЕНО),
		|	втДанныеРаспределения1С.НомерРаспределения
		|ИЗ
		|	втДанныеРаспределения1С КАК втДанныеРаспределения1С
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДоступностьТоваровНаСкладах КАК ДоступностьТоваровНаСкладах
		|		ПО втДанныеРаспределения1С.ОсновнойСклад = ДоступностьТоваровНаСкладах.СтруктурнаяЕдиница
		|			И втДанныеРаспределения1С.Номенклатура = ДоступностьТоваровНаСкладах.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		|		ПО втДанныеРаспределения1С.ТорговаяТочка = РасходныйОрдерСкладТовары.Ссылка.Получатель
		|			И втДанныеРаспределения1С.Номенклатура = РасходныйОрдерСкладТовары.Номенклатура
		|			И втДанныеРаспределения1С.Характеристика = РасходныйОрдерСкладТовары.Характеристика
		|			И (РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения = &ДатаРаспределения)
		|			И втДанныеРаспределения1С.НомерРаспределения = РасходныйОрдерСкладТовары.НомерРаспределения
		|			И (НЕ РасходныйОрдерСкладТовары.Ссылка.ПометкаУдаления)
		|ГДЕ
		|	НЕ втДанныеРаспределения1С.СкладРазборки
		|
		|СГРУППИРОВАТЬ ПО
		|	втДанныеРаспределения1С.Склад,
		|	втДанныеРаспределения1С.ТорговаяТочка,
		|	втДанныеРаспределения1С.Номенклатура,
		|	втДанныеРаспределения1С.ВесовойТовар,
		|	втДанныеРаспределения1С.Характеристика,
		|	ЕСТЬNULL(РасходныйОрдерСкладТовары.Ссылка, НЕОПРЕДЕЛЕНО),
		|	втДанныеРаспределения1С.КоличествоКРаспределению,
		|	втДанныеРаспределения1С.НомерРаспределения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втДанные1С.Склад,
		|	втДанные1С.Характеристика,
		|	втДанные1С.Номенклатура,
		|	втДанные1С.ТорговаяТочка,
		|	втДанные1С.КоличествоКРаспределению,
		|	втДанные1С.КоличествоВДокументе,
		|	втДанные1С.КоличествоУРЗ,
		|	втДанные1С.Документ,
		|	втДанные1С.НомерРаспределения
		|ИЗ
		|	втДанные1С КАК втДанные1С
		|ГДЕ
		|	ВЫБОР
		|			КОГДА втДанные1С.Документ = НЕОПРЕДЕЛЕНО
		|				ТОГДА ИСТИНА
		|			КОГДА НЕ втДанные1С.ВесовойТовар
		|				ТОГДА втДанные1С.КоличествоКРаспределению <> втДанные1С.КоличествоУРЗ
		|			ИНАЧЕ втДанные1С.КоличествоКРаспределению * &ДопустимоеОтклонениеВПроцентах / 100 < втДанные1С.КоличествоКРаспределению - втДанные1С.КоличествоУРЗ
		|		КОНЕЦ");
		
	Запрос.УстановитьПараметр("ДанныеРаспределения",			ДанныеРаспределения);
	Запрос.УстановитьПараметр("ДатаРаспределения",				ДатаРаспределения);
	Запрос.УстановитьПараметр("ДопустимоеОтклонениеВПроцентах",	ДопустимоеОтклонениеВПроцентах);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;

КонецФункции

#КонецОбласти

ДатаРаспределения				= НачалоДня(ТекущаяДата()) + 24*60*60;
ДопустимоеОтклонениеВПроцентах	= 10;
