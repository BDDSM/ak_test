
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	СтрокаПодключения = ПолныеПрава.ПолучитьСтрокуПодключения_Зуп();
	
	v82COMОбъект = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Зуп() + ".COMConnector");
	Попытка
		v82 = v82COMОбъект.Connect(СтрокаПодключения);
		ПодключениеУстановлено=Истина;
	Исключение
		ПодключениеУстановлено=Ложь;
		Сообщить("Не удалось подключитьс к базе ЗУП");
		//Возврат;
	КонецПопытки;
	
	ТекстЗапроса="ВЫБРАТЬ
	             |	Организации.Ссылка КАК Организация,
	             |	Организации.ИНН
	             |ИЗ
	             |	Справочник.Организации КАК Организации";
	Запрос=Новый Запрос(ТекстЗапроса);			 
	КэшОрганизаций=Запрос.Выполнить().Выгрузить();
	
	Настройки=КомпоновщикНастроек.ПолучитьНастройки();
	Период = Настройки.ПараметрыДанных.Элементы.Найти("Период");
	
	ТекстЗапроса="ВЫБРАТЬ
	             |	СотрудникиОрганизаций.Физлицо.Наименование КАК ИмяФизЛица,
				 |	СотрудникиОрганизаций.Физлицо.Код КАК КодФизЛица,
	             |	СотрудникиОрганизаций.Организация.ИНН КАК ИННОрг,
	             |	СотрудникиОрганизаций.ДатаПриемаНаРаботу,
	             |	СотрудникиОрганизаций.ДатаУвольнения
	             |ИЗ
	             |	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	             |ГДЕ
	             |	СотрудникиОрганизаций.ДатаПриемаНаРаботу <= КОНЕЦПЕРИОДА(&НаДату, МЕСЯЦ)
	             |	И СотрудникиОрганизаций.ДатаПриемаНаРаботу <> &ПустаяДата
	             |	И (СотрудникиОрганизаций.ДатаУвольнения >= &НаДату
	             |			ИЛИ СотрудникиОрганизаций.ДатаУвольнения = &ПустаяДата)
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	СотрудникиОрганизаций.Физлицо,
	             |	СотрудникиОрганизаций.Организация,
	             |	СотрудникиОрганизаций.ДатаПриемаНаРаботу,
	             |	СотрудникиОрганизаций.ДатаУвольнения";
	запрос=v82.NewObject("Запрос");  
	запрос.текст = ТекстЗапроса;			 
	Запрос.установитьПараметр("НаДату",Период.Значение.ДатаНачала);
	Запрос.установитьПараметр("ПустаяДата",Дата(1,1,1));
	Выборка=Запрос.Выполнить().Выбрать();
	
	ТЗЗУП=Новый ТаблицаЗначений;
	ТЗЗУП.Колонки.Добавить("ИмяФизЛица");
	ТЗЗУП.Колонки.Добавить("ИННОрг");
	ТЗЗУП.Колонки.Добавить("ДатаПриемаНаРаботу");
	ТЗЗУП.Колонки.Добавить("ДатаУвольнения");
	ТЗЗУП.Колонки.Добавить("Организация");
	ТЗЗУП.Колонки.Добавить("ФизЛицо");
	
	Пока Выборка.следующий() Цикл
		НС=ТЗЗУП.Добавить();
		ЗаполнитьЗначенияСвойств(НС,Выборка);
		НС.ФизЛицо=Справочники.ФизическиеЛица.НайтиПоКоду(Выборка.КодФизЛица);
		НС.Организация=КэшОрганизаций.Найти(Выборка.ИННОрг).Организация;
	КонецЦикла;	
	
	ТекстЗапроса="ВЫБРАТЬ
	             |	ЛистУчетаПродавцы.Продавец,
	             |	ЛистУчетаПродавцы.Ссылка КАК ЛистУчета,
	             |	ЛистУчетаПродавцы.Ссылка.Организация КАК ОрганизацияЛистаУчета,
	             |	ЛистУчетаПродавцы.Ссылка.ТорговаяТочка
	             |ПОМЕСТИТЬ ДанныеЛУ
	             |ИЗ
	             |	Документ.ЛистУчета.Продавцы КАК ЛистУчетаПродавцы
	             |ГДЕ
	             |	ЛистУчетаПродавцы.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ПериодС, МЕСЯЦ) И КОНЕЦПЕРИОДА(&ПериодПо, МЕСЯЦ)
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ДанныеЛУ.Продавец,
	             |	ДанныеЛУ.ОрганизацияЛистаУчета,
	             |	ДанныеЛУ.ТорговаяТочка,
	             |	СУММА(1) КАК КолЛистов
	             |ПОМЕСТИТЬ КоличестваЛистов
	             |ИЗ
	             |	ДанныеЛУ КАК ДанныеЛУ
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ДанныеЛУ.Продавец,
	             |	ДанныеЛУ.ОрганизацияЛистаУчета,
	             |	ДанныеЛУ.ТорговаяТочка
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	КоличестваЛистов.Продавец,
	             |	МАКСИМУМ(КоличестваЛистов.КолЛистов) КАК КолЛистов,
	             |	ИСТИНА КАК ЭтоОсновноеМестоРаботы
	             |ПОМЕСТИТЬ МаксимумыЛистов
	             |ИЗ
	             |	КоличестваЛистов КАК КоличестваЛистов
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	КоличестваЛистов.Продавец
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	ДанныеЛУ.Продавец,
	             |	ДанныеЛУ.ЛистУчета,
	             |	ДанныеЛУ.ОрганизацияЛистаУчета,
	             |	ДанныеЛУ.ТорговаяТочка,
	             |	КоличестваЛистов.КолЛистов,
	             |	ЕСТЬNULL(МаксимумыЛистов.ЭтоОсновноеМестоРаботы, ЛОЖЬ) КАК ЭтоОсновноеМесто
	             |ИЗ
	             |	ДанныеЛУ КАК ДанныеЛУ
	             |		ЛЕВОЕ СОЕДИНЕНИЕ КоличестваЛистов КАК КоличестваЛистов
	             |			ЛЕВОЕ СОЕДИНЕНИЕ МаксимумыЛистов КАК МаксимумыЛистов
	             |			ПО (МаксимумыЛистов.КолЛистов = КоличестваЛистов.КолЛистов)
	             |				И (МаксимумыЛистов.Продавец = КоличестваЛистов.Продавец)
	             |		ПО ДанныеЛУ.Продавец = КоличестваЛистов.Продавец
	             |			И ДанныеЛУ.ОрганизацияЛистаУчета = КоличестваЛистов.ОрганизацияЛистаУчета
	             |			И ДанныеЛУ.ТорговаяТочка = КоличестваЛистов.ТорговаяТочка
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ДанныеЛУ.ОрганизацияЛистаУчета,
	             |	ДанныеЛУ.ЛистУчета,
	             |	ДанныеЛУ.Продавец,
	             |	ДанныеЛУ.ТорговаяТочка,
	             |	ЕСТЬNULL(МаксимумыЛистов.ЭтоОсновноеМестоРаботы, ЛОЖЬ),
	             |	КоличестваЛистов.КолЛистов";
	Запрос=Новый Запрос(ТекстЗапроса);
	Запрос.установитьПараметр("ПериодС",Период.Значение.ДатаНачала);
	Запрос.установитьПараметр("ПериодПо",Период.Значение.ДатаОкончания);
	ДанныеЛУ=Запрос.Выполнить().Выгрузить();
	ДанныеЛУ.Колонки.Добавить("ДатаПриемаНаРаботу");
	ДанныеЛУ.Колонки.Добавить("ДатаУвольнения");
	ДанныеЛУ.Колонки.Добавить("Организация");
	ДанныеЛУ.Колонки.Добавить("ОрганизацииСовпадают");
	СтруктураПоиска=Новый Структура;
	Для каждого Стр из ДанныеЛУ Цикл
		СтруктураПоиска.Вставить("ФизЛицо",Стр.Продавец);
		СтруктураПоиска.Вставить("Организация",Стр.ОрганизацияЛистаУчета);
		Найденные=ТЗЗУП.НайтиСтроки(СтруктураПоиска);
		Если Найденные.Количество()=0 Тогда
			нашли=ТЗЗУП.Найти(Стр.Продавец);
			Если нашли<>неопределено Тогда
				Стр.Организация=Нашли.Организация;
				Стр.ДатаПриемаНаРаботу=Нашли.ДатаПриемаНаРаботу;
				Стр.ДатаУвольнения=Нашли.ДатаУвольнения;
			КонецЕсли;
		Иначе
			Стр.Организация=Найденные[0].Организация;
			Стр.ДатаПриемаНаРаботу=Найденные[0].ДатаПриемаНаРаботу;
			Стр.ДатаУвольнения=Найденные[0].ДатаУвольнения;
		КонецЕсли;
		Стр.ОрганизацииСовпадают=Стр.Организация=Стр.ОрганизацияЛистаУчета;
	КонецЦикла;	
	
	ВнешниеНаборыДанных = Новый Структура; 
	ВнешниеНаборыДанных.Вставить("ДанныеЗУП1",ДанныеЛУ); 
	//ВнешниеНаборыДанных.Вставить("ДанныеЗУП2",ТЗЗУП); 
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(),ДанныеРасшифровки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных);
	
	ДокументРезультат.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    ПроцессорВывода.УстановитьДокумент(ДокументРезультат);

	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
КонецПроцедуры
