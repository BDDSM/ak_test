
#Область ОбработчикиСобытий

//+++АК LATV 2018.07.01 ИП-00019011
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)

	// Установка условного оформления
	НастройкиКомпоновкиДанных = КомпоновщикНастроек.ПолучитьНастройки();
	флИспользоватьУсловие = Истина;
	пТолькоПросроченные = Новый ПолеКомпоновкиДанных("ТолькоПросроченные");
	пКонтрагент = Новый ПолеКомпоновкиДанных("Контрагент");
	пТорговаяТочка = Новый ПолеКомпоновкиДанных("ТорговаяТочка");
	
	ЭлементыОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы;
	Для каждого стр из ЭлементыОтбора Цикл
		Если ТипЗнч(стр) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
			Продолжить;
		КонецЕсли;
		Если стр.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно и
			стр.Использование = Истина и 
			стр.ПравоеЗначение = Истина Тогда
			
			Если стр.ЛевоеЗначение = пТолькоПросроченные Тогда
				флИспользоватьУсловие = Истина
			Иначе
				флИспользоватьУсловие = Ложь;
			КонецЕсли;
			
			Структура1 = КомпоновщикНастроек.Настройки.Структура;
			// Для варианта Рассылка группировки находятся внутри таблицы
			Если Структура1.Количество() > 0
			   И Структура1[0].Структура.Количество() > 0
			   И ТипЗнч(Структура1[0].Структура[0]) = Тип("ТаблицаКомпоновкиДанных") Тогда
				Структура1 = Структура1[0].Структура[0].Строки;
			КонецЕсли;
			
			Для каждого стр1 из Структура1 Цикл
				Если ПроверитьНаличиеПоля(стр1, пКонтрагент) Тогда
					УстановитьОформление(стр1.УсловноеОформление, флИспользоватьУсловие);
				КонецЕсли;
				
				Структура2 = стр1.Структура;
				Для каждого стр2 из Структура2 Цикл
					Если ПроверитьНаличиеПоля(стр2, пТорговаяТочка) Тогда
						УстановитьОформление(стр2.УсловноеОформление, флИспользоватьУсловие);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	// Рассылка отчета
	Если КомпоновщикНастроек.ФиксированныеНастройки.ДополнительныеСвойства.Свойство("РежимРассылки") Тогда
		СтандартнаяОбработка = Ложь;
		СформироватьВРежимеРассылки(ДокументРезультат, ДанныеРасшифровки);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПроверитьНаличиеПоля(стр1, поле)
	Для каждого стр2 из стр1.ПоляГруппировки.Элементы Цикл
		Если стр2.Поле = поле Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

Процедура УстановитьОформление(УсловноеОформление, флИспользоватьУсловие)
	Для каждого стр2 из УсловноеОформление.Элементы Цикл
		стр2.Использование = флИспользоватьУсловие;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ФормированиеВРежимеРассылки

//+++АК LATV 2018.07.01 ИП-00019011
Процедура СформироватьВРежимеРассылки(ДокументРезультат, ДанныеРасшифровки)

	ПисьмаДляОтправки = Новый Массив;
	
	// Установка параметров
	ПараметрыОтправки = Новый Структура("Контролеры, ОтправитьТолькоКонтролерам", Новый Массив, Ложь);
	Получатели = Неопределено;
	Если КомпоновщикНастроек.ФиксированныеНастройки.ДополнительныеСвойства.Свойство("Получатели", Получатели) Тогда
		ПараметрыОтправки.Контролеры = УправлениеЭлектроннойПочтой.ЭлектронныеАдресаФизическихЛиц(Получатели);
	КонецЕсли;
	
	Если КомпоновщикНастроек.ФиксированныеНастройки.ДополнительныеСвойства.Свойство("ОтправитьТолькоМенеджерамИзСписка") Тогда
		ПараметрыОтправки.ОтправитьТолькоКонтролерам = Истина;
	КонецЕсли;
	
	// Формирование отчета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,, ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	// Обработка результата
	ПроцессорВывода.НачатьВывод();
	
	НачалоОбластиТекущегоОтчета = 1;
	
	ЭлементРезультата = ПроцессорКомпоновки.Следующий();
	Пока ЭлементРезультата <> Неопределено Цикл
		
		Параметры = ЭлементРезультата.ЗначенияПараметров;
		Если Параметры.Количество() = 3
		   И Параметры[0].Значение = "<РазрывТаблицы>" Тогда
			
			ПредставлениеПолучателя	= Параметры[1].Значение;
			СтрокаАдресПолучателя	= Параметры[2].Значение;
			
			Если Не ПустаяСтрока(СтрокаАдресПолучателя) Тогда
				ТекущийОтчет = ДокументРезультат.ПолучитьОбласть(НачалоОбластиТекущегоОтчета,, ДокументРезультат.ВысотаТаблицы);
				ПараметрыПисьма = СФормироватьПисьмоДляОтправки(ТекущийОтчет, СтрокаАдресПолучателя, ПредставлениеПолучателя, ПараметрыОтправки);
				ПисьмаДляОтправки.Добавить(ПараметрыПисьма);
			КонецЕсли;
			
			НачалоОбластиТекущегоОтчета = ДокументРезультат.ВысотаТаблицы;
			
		Иначе
			ПроцессорВывода.ВывестиЭлемент(ЭлементРезультата);
		КонецЕсли;
		
		ЭлементРезультата = ПроцессорКомпоновки.Следующий();
	КонецЦикла;
	
	ПроцессорВывода.ЗакончитьВывод();
	
	КомпоновщикНастроек.ФиксированныеНастройки.ДополнительныеСвойства.Удалить("РежимРассылки");
	
	// Отправка
	Если ПисьмаДляОтправки.Количество() > 0 Тогда
		ОтправитьПисьма(ПисьмаДляОтправки);
	КонецЕсли;

КонецПроцедуры

//+++АК LATV 2018.07.01 ИП-00019011
Функция СФормироватьПисьмоДляОтправки(ТекущийОтчет, АдресПолучателя, ПредставлениеПолучателя, ПараметрыОтправки)

	Кому = Новый Массив;
	Кому.Добавить(Новый Структура("Адрес, Представление", АдресПолучателя, ПредставлениеПолучателя));
	
	Копия = Новый Массив;
	Для Каждого Контролер Из ПараметрыОтправки.Контролеры Цикл
		Копия.Добавить(Новый Структура("Адрес, Представление", Контролер.Адрес, Контролер.Представление));
	КонецЦикла;
	
	Если ПараметрыОтправки.ОтправитьТолькоКонтролерам Тогда
		Кому	= Копия;
		Копия	= Новый Массив;
	КонецЕсли;
	
	ПараметрыПисьма = Новый Структура();
	ПараметрыПисьма.Вставить("Важность",	ВажностьИнтернетПочтовогоСообщения.Обычная);
	ПараметрыПисьма.Вставить("ТипТекста",	ТипТекстаПочтовогоСообщения.HTML);
	ПараметрыПисьма.Вставить("Тема",		Метаданные().Синоним);
	ПараметрыПисьма.Вставить("Тело",		ПоместитьОтчетВТелоПисьма(ТекущийОтчет));
	ПараметрыПисьма.Вставить("Кому",		Кому);
	ПараметрыПисьма.Вставить("Копия",		Копия);
	
	Возврат ПараметрыПисьма;

КонецФункции

//+++АК LATV 2018.07.01 ИП-00019011
Функция ПоместитьОтчетВТелоПисьма(ТекущийОтчет)

	ИмяФайлаHTML = ПолучитьИмяВременногоФайла("html");
	ТекущийОтчет.Записать(ИмяФайлаHTML, ТипФайлаТабличногоДокумента.HTML4);
	
	ТекстДляЧтения = Новый ЧтениеТекста(ИмяФайлаHTML);
	ВесьТекст = ТекстДляЧтения.Прочитать();
	ТекстДляЧтения.Закрыть();
	УдалитьФайлы(ИмяФайлаHTML);
	
	ВесьТекст = ЗаменитьНедопустимыеСимволыXML(ВесьТекст);
	ТекстСообщения = СтрЗаменить(ВесьТекст, Символы.ПС, "");
	
	Возврат ТекстСообщения;

КонецФункции

//+++АК LATV 2018.07.01 ИП-00019011
Функция ЗаменитьНедопустимыеСимволыXML(Знач Текст, СимволЗамены = "")

	#Если Не ВебКлиент Тогда
		ПозицияНачала = 1;
		Пока Истина Цикл
			Позиция = НайтиНедопустимыеСимволыXML(Текст, ПозицияНачала);
			Если Позиция = 0 Тогда
				Прервать;
			КонецЕсли;
			Если Позиция > 1 Тогда
				НедопустимыйСимвол = Сред(Текст, Позиция - 1, 1);
				Если НайтиНедопустимыеСимволыXML(НедопустимыйСимвол) > 0 Тогда
					Текст = СтрЗаменить(Текст, НедопустимыйСимвол, СимволЗамены);
				КонецЕсли;
			КонецЕсли;
			НедопустимыйСимвол = Сред(Текст, Позиция, 1);
			Если НайтиНедопустимыеСимволыXML(НедопустимыйСимвол) > 0 Тогда
				Текст = СтрЗаменить(Текст, НедопустимыйСимвол, СимволЗамены);
			КонецЕсли;
			ПозицияНачала = Позиция + 1;
		КонецЦикла;
	#КонецЕсли
	
	Возврат Текст;

КонецФункции

//+++АК LATV 2018.07.01 ИП-00019011
Процедура ОтправитьПисьма(ПисьмаДляОтправки)

	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
	
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	
	ДанныеУчетнойЗаписи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(УчетнаяЗапись, "АдресЭлектроннойПочты, Наименование");
	
	Почта = Новый ИнтернетПочта;
	Почта.Подключиться(Профиль);
	
	Для Каждого ПараметрыПисьма Из ПисьмаДляОтправки Цикл
		Письмо = Новый ИнтернетПочтовоеСообщение;
		
		Письмо.Тема				= ПараметрыПисьма.Тема;
		Письмо.ИмяОтправителя	= СокрЛП(ДанныеУчетнойЗаписи.Наименование);
		Письмо.Отправитель		= СокрЛП(ДанныеУчетнойЗаписи.АдресЭлектроннойПочты);
		
		Для Каждого СтрокаПолучатель Из ПараметрыПисьма.Кому Цикл
			Получатель = Письмо.Получатели.Добавить();
			Получатель.Адрес			= СтрокаПолучатель.Адрес;
			Получатель.ОтображаемоеИмя	= СтрокаПолучатель.Представление;
		КонецЦикла;
		
		Для Каждого СтрокаПолучатель Из ПараметрыПисьма.Копия Цикл
			Получатель = Письмо.Копии.Добавить();
			Получатель.Адрес			= СтрокаПолучатель.Адрес;
			Получатель.ОтображаемоеИмя	= СтрокаПолучатель.Представление;
		КонецЦикла;
		
		ТекстСообщения = Письмо.Тексты.Добавить();
		ТекстСообщения.Текст		= ПараметрыПисьма.Тело;
		ТекстСообщения.ТипТекста	= ПараметрыПисьма.ТипТекста;
		
		Почта.Послать(Письмо);
	КонецЦикла;
	
	Почта.Отключиться();

КонецПроцедуры

#КонецОбласти

#Область МодульМенеджера

//+++АК LATV 2018.07.01 ИП-00019011
Функция КодДляВыполненияВПериодическихЗаданиях(ТекущаяОбработка, ОтправитьТолькоМенеджерамИзСписка = Ложь) Экспорт

	ЗапросПолучателей = Новый Запрос();
	ЗапросПолучателей.Текст =
		"ВЫБРАТЬ
		|	ПериодическиеЗаданияПолучателиРассылки.ФизЛицо КАК ФизЛицо
		|ИЗ
		|	Справочник.ПериодическиеЗадания.ПолучателиРассылки КАК ПериодическиеЗаданияПолучателиРассылки
		|ГДЕ
		|	ПериодическиеЗаданияПолучателиРассылки.Ссылка = &Задание";
	
	ЗапросПолучателей.УстановитьПараметр("Задание", ТекущаяОбработка);
	Получатели = ЗапросПолучателей.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизЛицо");
	
	// Выполнение отчета
	ВыполняемыйОтчет = Отчеты.ОтчетПоПросроченнымДепозитам.Создать();
	
	ВариантДляРассылки = ВыполняемыйОтчет.СхемаКомпоновкиДанных.ВариантыНастроек.Найти("ДляРассылки");
	ВыполняемыйОтчет.КомпоновщикНастроек.ЗагрузитьНастройки(ВариантДляРассылки.Настройки);
	
	ВыполняемыйОтчет.КомпоновщикНастроек.ФиксированныеНастройки.ДополнительныеСвойства.Вставить("РежимРассылки");
	ВыполняемыйОтчет.КомпоновщикНастроек.ФиксированныеНастройки.ДополнительныеСвойства.Вставить("Получатели", Получатели);
	
	Если ОтправитьТолькоМенеджерамИзСписка Тогда
		ВыполняемыйОтчет.КомпоновщикНастроек.ФиксированныеНастройки.ДополнительныеСвойства.Вставить("ОтправитьТолькоМенеджерамИзСписка");
	КонецЕсли;
	
	ВыполняемыйОтчет.СкомпоноватьРезультат(Новый ТабличныйДокумент, Неопределено);

КонецФункции

#КонецОбласти
