Перем ПодключениеУстановлено; 
Перем ДатаНачала; 
Перем ДатаОкончания;
Перем v82;
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	Запрос = Новый Запрос;
	
	ДатаНачала = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.ДатаНачала;
	ДатаОкончания = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.ДатаОкончания;
	
	Если Не ЗначениеЗаполнено(ДатаНачала) 
		Или Не ЗначениеЗаполнено(ДатаОкончания)
		Или ДатаНачала > ДатаОкончания
		Тогда
	
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Заполните период!";
		Сообщение.Сообщить();
		
		Возврат;
	
	КонецЕсли;
	
	
	Запрос.УстановитьПараметр("Бухгалтерия",ПолучитьДанныеИзБухгалтерии());
	Запрос.УстановитьПараметр("ДатаНачала",ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания",ДатаОкончания);
	
	Если Не ПодключениеУстановлено Тогда
	
		Возврат
	
	КонецЕсли;
	
	//Запрос.УстановитьПараметр("Бухгалтерия",ПолучитьДанныеИзБухгалтерии());
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Бухгалтерия.ИНН КАК ИНН,
		|	Бухгалтерия.Период КАК Период,
		|	Бухгалтерия.Выручка,
		|	Бухгалтерия.Нал,
		|	Бухгалтерия.Безнал,
		|	Бухгалтерия.КМ3
		|ПОМЕСТИТЬ ОборотыБух
		|ИЗ
		|	&Бухгалтерия КАК Бухгалтерия
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИНН,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЛистУчета.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ ЛистыУчета
		|ИЗ
		|	Документ.ЛистУчета КАК ЛистУчета
		|ГДЕ
		|	ЛистУчета.Проведен
		|	И ЛистУчета.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЛистУчетаZОтчеты.Ссылка.Организация,
		|	НАЧАЛОПЕРИОДА(ЛистУчетаZОтчеты.Ссылка.Дата, ДЕНЬ) КАК Дата,
		|	СУММА(ЛистУчетаZОтчеты.СуммаПоНал) КАК Нал,
		|	СУММА(ЛистУчетаZОтчеты.СуммаПоБезнал) КАК Безнал,
		|	СУММА(ЛистУчетаZОтчеты.СуммаПоНал + ЛистУчетаZОтчеты.СуммаПоБезнал) КАК Выручка,
		|	NULL КАК КМ3
		|ПОМЕСТИТЬ Документ
		|ИЗ
		|	Документ.ЛистУчета.ZОтчеты КАК ЛистУчетаZОтчеты
		|ГДЕ
		|	ЛистУчетаZОтчеты.Ссылка В
		|			(ВЫБРАТЬ
		|				ЛистыУчета.Ссылка
		|			ИЗ
		|				ЛистыУчета КАК ЛистыУчета)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЛистУчетаZОтчеты.Ссылка.Организация,
		|	НАЧАЛОПЕРИОДА(ЛистУчетаZОтчеты.Ссылка.Дата, ДЕНЬ)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЛистУчетаАктыКМ3.Ссылка.Организация,
		|	НАЧАЛОПЕРИОДА(ЛистУчетаАктыКМ3.Ссылка.Дата, ДЕНЬ),
		|	NULL,
		|	NULL,
		|	NULL,
		|	СУММА(ЛистУчетаАктыКМ3.Сумма)
		|ИЗ
		|	Документ.ЛистУчета.АктыКМ3 КАК ЛистУчетаАктыКМ3
		|ГДЕ
		|	ЛистУчетаАктыКМ3.АктПолучен
		|	И ЛистУчетаАктыКМ3.Ссылка В
		|			(ВЫБРАТЬ
		|				ЛистыУчета.Ссылка
		|			ИЗ
		|				ЛистыУчета КАК ЛистыУчета)
		|	И ЛистУчетаАктыКМ3.ВыгруженВБухгалтерию = &ВыгруженВБухгалтерию
		|
		|СГРУППИРОВАТЬ ПО
		|	ЛистУчетаАктыКМ3.Ссылка.Организация,
		|	НАЧАЛОПЕРИОДА(ЛистУчетаАктыКМ3.Ссылка.Дата, ДЕНЬ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Документ.Организация,
		|	Документ.Дата,
		|	СУММА(Документ.Выручка - ЕСТЬNULL(Документ.КМ3, 0)) КАК Выручка,
		|	СУММА(Документ.Нал) КАК Нал,
		|	СУММА(Документ.Безнал) КАК Безнал,
		|	СУММА(Документ.КМ3) КАК КМ3
		|ПОМЕСТИТЬ Группировка
		|ИЗ
		|	Документ КАК Документ
		|
		|СГРУППИРОВАТЬ ПО
		|	Документ.Организация,
		|	Документ.Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Группировка.Организация,
		|	Группировка.Дата КАК Дата,
		|	Группировка.Выручка - ЕСТЬNULL(Группировка.КМ3, 0) КАК Выручка,
		|	Группировка.Нал,
		|	Группировка.Безнал КАК БезНал,
		|	Группировка.КМ3,
		|	ОборотыБух.Выручка КАК БухВыручка,
		|	ОборотыБух.Нал КАК БухНал,
		|	ОборотыБух.Безнал КАК БухБезнал,
		|	ОборотыБух.КМ3 КАК БухКМ3,
		|	Группировка.Выручка - ЕСТЬNULL(Группировка.КМ3, 0) - ЕСТЬNULL(ОборотыБух.Выручка, 0) КАК РазницаВыручка,
		|	Группировка.Нал - ЕСТЬNULL(ОборотыБух.Нал, 0) КАК РазницаНал,
		|	Группировка.Безнал - ЕСТЬNULL(ОборотыБух.Безнал, 0) КАК РазницаБезНал,
		|	Группировка.КМ3 - ЕСТЬNULL(ОборотыБух.КМ3, 0) КАК РазницаКМ3
		|ИЗ
		|	Группировка КАК Группировка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОборотыБух КАК ОборотыБух
		|		ПО Группировка.Организация.ИНН = ОборотыБух.ИНН
		|			И Группировка.Дата = ОборотыБух.Период
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
		
		ВыгруженВБухгалтерию = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[1].Значение;
		
		Если ВыгруженВБухгалтерию = "Все" Тогда
			
			//ИспользоватьВыгруженВБухгалтерию = Ложь;
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"И ЛистУчетаАктыКМ3.ВыгруженВБухгалтерию = &ВыгруженВБухгалтерию","");
			
		Иначе
			//ИспользоватьВыгруженВБухгалтерию = Истина;
			ЗначениеВыгруженВБухгалтерию = ?(ВыгруженВБухгалтерию="Да",Истина,Ложь);
			Запрос.УстановитьПараметр("Бухгалтерия",ЗначениеВыгруженВБухгалтерию);
		КонецЕсли;

	тзИтоговыйРезультат = Запрос.Выполнить().Выгрузить();

	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");

	//Из схемы возьмем настройки по умолчанию
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	
	Для каждого ЭлементОтбора Из Настройки.Отбор.Элементы Цикл
		
		//ЭлементОтбора.ИдентификаторПользовательскойНастройки
		
		ЭлементОтбораПользовательскаяНастройка = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ЭлементОтбора.ИдентификаторПользовательскойНастройки);		
		ЭлементОтбора.ПравоеЗначение = ЭлементОтбораПользовательскаяНастройка.ПравоеЗначение;
		ЭлементОтбора.Использование = ЭлементОтбораПользовательскаяНастройка.Использование;
		ЭлементОтбора.ВидСравнения = ЭлементОтбораПользовательскаяНастройка.ВидСравнения;
		//ЗаполнитьЗначенияСвойств(ЭлементОтбора,ЭлементОтбораПользовательскаяНастройка);
		
	КонецЦикла;

	//Помещаем в переменную данные о расшифровке данных
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;

	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;

	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);

	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, Новый Структура("тзИтоговыйРезультат", тзИтоговыйРезультат), ДанныеРасшифровки);

	//Очищаем поле табличного документа
	ДокументРезультат.Очистить();

	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);   
	
КонецПроцедуры

Функция ПолучитьДанныеИзБухгалтерии()
	
	СтрокаПодключения = ПолныеПрава.ПолучитьСтрокуПодключения_Бух();
	
	Если v82 = Неопределено Тогда
		
		v82COMОбъект = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Бух() + ".COMConnector");
		Попытка
			v82 = v82COMОбъект.Connect(СтрокаПодключения);
			ПодключениеУстановлено = Истина;
		Исключение
			ПодключениеУстановлено = Ложь;
			Сообщить("Не удалось подключитьс к базе Бух");
			Возврат Неопределено;
		КонецПопытки;
		
	КонецЕсли;
	
	Запрос = v82.NewObject("Запрос");
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Организация,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.Счет = &Счет501
	|				ТОГДА ХозрасчетныйОбороты.СуммаОборотДт
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК Наличные,
	|	NULL КАК КМ3,
	|	СУММА(ВЫБОР
	|			КОГДА ХозрасчетныйОбороты.Счет = &Счет501
	|				ТОГДА 0
	|			ИНАЧЕ ХозрасчетныйОбороты.СуммаОборотДт
	|		КОНЕЦ) КАК БезНал,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК Выручка,
	|	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, ДЕНЬ) КАК Период
	|ПОМЕСТИТЬ Выборкой
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет В (&МассивСчетов), , , , ) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ХозрасчетныйОбороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Организация,
	|	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, ДЕНЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Организация,
	|	NULL,
	|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт),
	|	NULL,
	|	NULL,
	|	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, ДЕНЬ)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Запись, Счет В (&МассивСчетов), , , , ) КАК ХозрасчетныйОбороты
	|ГДЕ
	|	ХозрасчетныйОбороты.СуммаОборотДт < 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Организация,
	|	НАЧАЛОПЕРИОДА(ХозрасчетныйОбороты.Период, ДЕНЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(Выборкой.Выручка) КАК Выручка,
	|	СУММА(Выборкой.Наличные) КАК Нал,
	|	СУММА(Выборкой.БезНал) КАК БезНал,
	|	СУММА(Выборкой.КМ3 * -1) КАК КМ3,
	|	Выборкой.Организация.ИНН КАК ИНН,
	|	Выборкой.Период
	|ИЗ
	|	Выборкой КАК Выборкой
	|
	|СГРУППИРОВАТЬ ПО
	|	Выборкой.Организация.ИНН,
	|	Выборкой.Период";
	
	МассивСчетов = v82.NewObject("Массив");   
	
	МассивСчетов.Добавить(v82.ПланыСчетов.Хозрасчетный.ПродажиПоПлатежнымКартам);
	МассивСчетов.Добавить(v82.ПланыСчетов.Хозрасчетный.КассаОрганизации);
	                               
	Запрос.УстановитьПараметр("НачалоПериода",ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода",ДатаОкончания);
	Запрос.УстановитьПараметр("МассивСчетов",МассивСчетов);
	Запрос.УстановитьПараметр("Счет501",v82.ПланыСчетов.Хозрасчетный.КассаОрганизации);
	Запрос.УстановитьПараметр("Счет62Р",v82.ПланыСчетов.Хозрасчетный.РасчетыСРозничнымиПокупателями);
	Результат = Запрос.Выполнить();
	
	ТЗ_Бухгалтерия = Новый ТаблицаЗначений;
	
	ТЗ_Бухгалтерия.Колонки.Добавить("ИНН",Новый ОписаниеТипов("Строка", ,
										  Новый КвалификаторыСтроки(12, ДопустимаяДлина.Переменная)));
	ТЗ_Бухгалтерия.Колонки.Добавить("Период",Новый ОписаниеТипов("Дата", , ,
											 Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ТЗ_Бухгалтерия.Колонки.Добавить("Выручка",Новый ОписаниеТипов("Число",
											 Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)));
	ТЗ_Бухгалтерия.Колонки.Добавить("Нал",Новый ОписаниеТипов("Число",
											 Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)));
	ТЗ_Бухгалтерия.Колонки.Добавить("БезНал",Новый ОписаниеТипов("Число",
											 Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)));
	ТЗ_Бухгалтерия.Колонки.Добавить("КМ3",Новый ОписаниеТипов("Число",
											 Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Любой)));
											 
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		НоваяСтрока = ТЗ_Бухгалтерия.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
		
		//НоваяСтрока.Период = Выборка.Period;
	
	КонецЦикла;											 
											 
	Возврат ТЗ_Бухгалтерия;
	
	
КонецФункции // ПолучитьДанныеИзБухгалтерии()

