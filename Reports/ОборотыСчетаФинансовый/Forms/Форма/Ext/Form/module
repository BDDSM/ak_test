
// Процедура формирует заголовок формы отчета с учетом настроек
//
// Параметры:
//  Нет.
//
Процедура СформироватьЗаголовокФормы()

	ОписаниеПериода = БухгалтерскиеОтчеты.СформироватьСтрокуОграниченийПоДатамДляФормы(ДатаНач, ДатаКон);

	Заголовок = ЗаголовокОтчета()+" (" + ОписаниеПериода + ") " +  ?(ЗначениеЗаполнено(Организация.НаименованиеПолное), Организация.НаименованиеПолное, Организация);
	
КонецПроцедуры // СформироватьЗаголовокФормы()()

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт

	НеЗаполнятьНастройкиПриОткрытии = Не Открыта();
	
	СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;
	
КонецПроцедуры // ОбновитьОтчет()

Процедура ВыводЗаголовка()

	БухгалтерскиеОтчеты.ОбработатьВыводЗаголовка(ЭтаФорма, ЭтотОбъект, ВысотаЗаголовка, ПоказыватьЗаголовок);
	
КонецПроцедуры // ВыводЗаголовка()

Процедура СчетПриИзменении(Элемент)
	ОбработкаВыбораСчета();
КонецПроцедуры

Процедура Сформировать(Кнопка)
	ОбновитьОтчет();
КонецПроцедуры

Процедура Настройка(Кнопка)
	ФормаНастройка = ПолучитьФорму("ФормаНастройка");
	Если ФормаНастройка.ОткрытьМодально() = Истина Тогда
		ОбновитьОтчет();
	КонецЕсли;
КонецПроцедуры

Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	РаботаСДиалогами.ОбработчикНастройкаПериодаНажатие(ДатаНач, ДатаКон);
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

Процедура ПередСохранениемЗначений(Отказ)
	СохраненныеНастройки = Новый Структура(
	"Счет, Организация, ПоСубсчетам, ПоВалютам, Период, ВсеПериоды, НастройкиПостроителяОтчета, СальдоНачДт, СальдоНачКт,СальдоКонДт, СальдоКонКт,ОборотДт, ОборотКт,ОборотДтКорСчета, ОборотКтКорСчета, ПоКоличеству",
	Счет, 
	Организация, ПоСубсчетам,
	ПоВалютам, 
	Период, ВсеПериоды, 
	ПостроительОтчета.ПолучитьНастройки(Истина,Ложь,Истина,Ложь),
	СальдоНачДт, СальдоНачКт,
	СальдоКонДт, СальдоКонКт,
	ОборотДт, ОборотКт,
	ОборотДтКорСчета, ОборотКтКорСчета,
	ПоКоличеству);
КонецПроцедуры

Процедура ПослеВосстановленияЗначений()
	
	// Если настройка восстанавливается, когда открывается форма сформированного отчета, игнорируем
	Если НеЗаполнятьНастройкиПриОткрытии Тогда
		Возврат;
	КонецЕсли;
	
	// Тип восстановленного значения должен быть Структура
	Если НЕ ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда 
		Возврат;
	КонецЕсли;
	
	// После установки счета и флагов можно заполнять текст построителя
	ЗаполнитьНачальныеНастройки();
	
	СохраненныеНастройки.Свойство("Счет"        , Счет);
	СохраненныеНастройки.Свойство("Организация" , Организация);
	СохраненныеНастройки.Свойство("ПоСубсчетам" , ПоСубсчетам);
	СохраненныеНастройки.Свойство("ПоВалютам"   , ПоВалютам);
	СохраненныеНастройки.Свойство("ПоКоличеству", ПоКоличеству);
	
	НастройкиПостроителяОтчета = Неопределено;
	СохраненныеНастройки.Свойство("НастройкиПостроителяОтчета", НастройкиПостроителяОтчета);
	Если НастройкиПостроителяОтчета<> Неопределено Тогда
		ПостроительОтчета.УстановитьНастройки(НастройкиПостроителяОтчета, Истина, Истина, Истина, Истина);
	КонецЕсли;
	
	СохраненныеНастройки.Свойство("Период"          , Период );
	СохраненныеНастройки.Свойство("ВсеПериоды"      , ВсеПериоды );
	
	СохраненныеНастройки.Свойство("СальдоНачДт"     , СальдоНачДт );
	СохраненныеНастройки.Свойство("СальдоНачКт"     , СальдоНачКт );
	СохраненныеНастройки.Свойство("СальдоКонДт"     , СальдоКонДт );
	СохраненныеНастройки.Свойство("СальдоКонКт"     , СальдоКонКт );
	СохраненныеНастройки.Свойство("ОборотДт"        , ОборотДт  );
	СохраненныеНастройки.Свойство("ОборотКт"        , ОборотКт  );
	СохраненныеНастройки.Свойство("ОборотДтКорСчета", ОборотДтКорСчета  );
	СохраненныеНастройки.Свойство("ОборотКтКорСчета", ОборотКтКорСчета  );
	
КонецПроцедуры

Процедура КоманднаяПанельЗаголовок(Кнопка)
	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	ВыводЗаголовка();
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ТиповыеОтчеты.НазначитьФормеУникальныйКлючИдентификации(ЭтаФорма);
	
	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		
		ПоказыватьЗаголовок = Истина;
		
		СтруктураОбщихПараметров = ВосстановитьЗначение("ОбщиеПараметрыОтчетов"+ИмяРегистраБухгалтерии);
		Если ТипЗнч(СтруктураОбщихПараметров) = Тип("Структура") Тогда
			
			//СтруктураОбщихПараметров.Свойство("Организация", Организация);
			СтруктураОбщихПараметров.Свойство("Счет", Счет);
	
			ОбработкаВыбораСчета();
			СтруктураОбщихПараметров.Свойство("ПоСубсчетам", ПоСубсчетам);
			СтруктураОбщихПараметров.Свойство("ДатаНач", ДатаНач);
			СтруктураОбщихПараметров.Свойство("ДатаКон", ДатаКон);
			//СтруктураОбщихПараметров.Вставить("ПоВалютам",  ПоВалютам );
			
			СтруктураОбщихПараметров.Свойство("ВсеПериоды",  ВсеПериоды );
			
			СтруктураОбщихПараметров.Свойство("Период",  Период );
			
			Если НЕ СтруктураОбщихПараметров.Свойство("СальдоНачДт",  СальдоНачДт ) Тогда
				СальдоНачДт=Истина;
			КонецЕсли;
			Если НЕ СтруктураОбщихПараметров.Свойство("СальдоНачКт",  СальдоНачКт ) Тогда
				СальдоНачКт=Истина;
			КонецЕсли;
			Если НЕ СтруктураОбщихПараметров.Свойство("СальдоКонДт",  СальдоКонДт ) Тогда
				СальдоКонДт=Истина;
			КонецЕсли;
			Если НЕ СтруктураОбщихПараметров.Свойство("СальдоКонКт",  СальдоКонКт ) Тогда
				СальдоКонКт=Истина;
			КонецЕсли;
			Если НЕ СтруктураОбщихПараметров.Свойство("ОборотДт", ОборотДт  ) Тогда
				ОборотДт=Истина;
			КонецЕсли;
			Если НЕ СтруктураОбщихПараметров.Свойство("ОборотКт", ОборотКт  ) Тогда
				ОборотКт=Истина;
			КонецЕсли;
			Если НЕ СтруктураОбщихПараметров.Свойство("ОборотДтКорСчета", ОборотДтКорСчета  ) Тогда
				ОборотДтКорСчета=Истина;
			КонецЕсли;
			Если НЕ СтруктураОбщихПараметров.Свойство("ОборотКтКорСчета", ОборотКтКорСчета  ) Тогда
				ОборотКтКорСчета=Истина;
			КонецЕсли;
			
			ОбработкаВыбораСчета();
			
		КонецЕсли;
		
		ВысотаЗаголовка = 0;
		
	КонецЕсли; 
    	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		ВыводЗаголовка();
		СформироватьЗаголовокФормы();
	КонецЕсли;
	
	НеЗаполнятьНастройкиПриОткрытии=Ложь;
	
	БухгалтерскиеОтчеты.УправлениеПометкамиКнопокЗаголовковКоманднойПанели(ЭтаФорма, ВысотаЗаголовка);

КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтруктураОбщихПараметров = Новый Структура;
	СтруктураОбщихПараметров.Вставить("Организация", Организация);
	СтруктураОбщихПараметров.Вставить("ДатаНач", ДатаНач);
	СтруктураОбщихПараметров.Вставить("ДатаКон", ДатаКон);
	СтруктураОбщихПараметров.Вставить("Счет",    Счет);
	СтруктураОбщихПараметров.Вставить("ПоСубсчетам", ПоСубсчетам);
	СтруктураОбщихПараметров.Вставить("Период",  Период );
	СтруктураОбщихПараметров.Вставить("ВсеПериоды",  ВсеПериоды );
	СтруктураОбщихПараметров.Вставить("ПоВалютам",  ПоВалютам );
	
	СтруктураОбщихПараметров.Вставить("СальдоНачДт",  СальдоНачДт );
	СтруктураОбщихПараметров.Вставить("СальдоНачКт",  СальдоНачКт );
	СтруктураОбщихПараметров.Вставить("СальдоКонДт",  СальдоКонДт );
	СтруктураОбщихПараметров.Вставить("СальдоКонКт",  СальдоКонКт );
	СтруктураОбщихПараметров.Вставить("ОборотДт", ОборотДт  );
	СтруктураОбщихПараметров.Вставить("ОборотКт", ОборотКт  );
	СтруктураОбщихПараметров.Вставить("ОборотДтКорСчета", ОборотДтКорСчета  );
	СтруктураОбщихПараметров.Вставить("ОборотКтКорСчета", ОборотКтКорСчета  );
	
	СохранитьЗначение("ОбщиеПараметрыОтчетов"+ИмяРегистраБухгалтерии, СтруктураОбщихПараметров);
	
КонецПроцедуры

Процедура ОбновлениеОтображения()

	СформироватьЗаголовокФормы();

КонецПроцедуры

Процедура ДокументРезультатОбработкаРасшифровки(ЭлементУправления, РасшифровкаСтроки, СтандартнаяОбработка)
	
	Если ТипЗнч(РасшифровкаСтроки) = Тип("СписокЗначений") Тогда
		Если РасшифровкаСтроки.Количество() = 1 Тогда
			ВыбранноеЗначение = РасшифровкаСтроки[0];
		Иначе
			ВыбранноеЗначение = РасшифровкаСтроки.ВыбратьЭлемент("Выберите расшифровку",РасшифровкаСтроки[0]);
		КонецЕсли;
		Если ВыбранноеЗначение <> Неопределено Тогда
			ВыбраннаяРасшифровка = ВыбранноеЗначение.Значение;
		Иначе
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
	ИначеЕсли ТипЗнч(РасшифровкаСтроки) = Тип("Структура")
		ИЛИ ТипЗнч(РасшифровкаСтроки) = Тип("Соответствие") Тогда
		
		ВыбраннаяРасшифровка = РасшифровкаСтроки;
	КонецЕсли;
	
	Если ТипЗнч(ВыбраннаяРасшифровка) = Тип("Структура") 
		ИЛИ ТипЗнч(ВыбраннаяРасшифровка) = Тип("Соответствие") Тогда
		
		ОбщаяРасшифровка = ЭлементУправления.Область(1, 1).Расшифровка;
		
		БухгалтерскиеОтчеты.СкопироватьОбщиеПараметрыРасшифровки(ОбщаяРасшифровка, ВыбраннаяРасшифровка);
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = ЭлементУправления.Область(ВысотаЗаголовка + 2, ЭлементУправления.ТекущаяОбласть.Лево).Расшифровка;
		
		Расшифровка = Новый Структура;
		
		Для Каждого Элемент Из ВыбраннаяРасшифровка Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;
		
		Расшифровка.Вставить("КорСчет", РасшифровкаКолонки);
				
		ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка);
	КонецЕсли;

	СтандартнаяОбработка = Ложь;

КонецПроцедуры

