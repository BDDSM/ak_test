
&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Сп=РасшифроватьОтчет(Расшифровка,СтандартнаяОбработка);
	Если НЕ Сп=Неопределено Тогда
		Если  Сп.Количество()Тогда
			Эл=Сп.ВыбратьЭлемент("Выберите расходник");
			Парам=Новый Структура("Ключ",Эл.Значение);	
		    ОткрытьФорму("Документ.РасходныйОрдерСклад.Форма.ФормаДокументаУправляемая",Парам);
		КонецЕсли; 
	
	КонецЕсли; 
КонецПроцедуры


Процедура ПолучитьСтруктуруВозврата(ПолеИлиГруппировка,СтруктураПолей)
	МассивРодителей = ПолеИлиГруппировка.ПолучитьРодителей();
	Для Каждого Стр из МассивРодителей Цикл
		Если ТипЗнч(Стр) = Тип("ЭлементРасшифровкиКомпоновкиДанныхГруппировка") Тогда 
			ПолучитьСтруктуруВозврата(Стр,СтруктураПолей);
		ИначеЕсли ТипЗнч(Стр) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
			ПоляГруппировки = Стр.ПолучитьПоля();
			Для Каждого гСтр из ПоляГруппировки Цикл
				Если СтруктураПолей.Свойство(гСтр.Поле) Тогда
					Если Не ЗначениеЗаполнено(СтруктураПолей[гСтр.Поле]) Тогда
						СтруктураПолей[гСтр.Поле] = гСтр.Значение;
					КонецЕсли;
				КонецЕсли;
				ПолучитьСтруктуруВозврата(Стр,СтруктураПолей);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция РасшифроватьОтчет(Расшифровка,СтандартнаяОбработка)
	СтруктураВозврата = Новый Структура("Номенклатура,Склад, ПричинаСписания");
	
	Данные = ПолучитьИзВременногоХранилища(ДанныеРасшифровки); 
	ПолучитьСтруктуруВозврата(Данные.Элементы[Расшифровка],СтруктураВозврата);
	
	ДатаОтчета = ТекущаяДата();

	НоменклатураОтбор = СтруктураВозврата.Номенклатура;
	СкладОтбор = СтруктураВозврата.Склад;
	ПричинаСписанияОтбор = СтруктураВозврата.ПричинаСписания;
	
	Если  ЗначениеЗаполнено(ПричинаСписанияОтбор) И ЗначениеЗаполнено(СкладОтбор) И ЗначениеЗаполнено(НоменклатураОтбор)  Тогда
		СтандартнаяОбработка=Ложь;
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	РасходныйОрдерСклад.Ссылка
			|ПОМЕСТИТЬ вт
			|ИЗ
			|	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
			|ГДЕ
			|	РасходныйОрдерСклад.Дата МЕЖДУ &Дата1 И &Дата2
			|	И РасходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.УтилизацияБой)
			|	И РасходныйОрдерСклад.Склад = &Склад
			|	И РасходныйОрдерСклад.ПричинаСписания = &ПричинаСписания
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РасходныйОрдерСкладТовары.Ссылка
			|ИЗ
			|	вт КАК вт
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
			|		ПО вт.Ссылка = РасходныйОрдерСкладТовары.Ссылка
			|ГДЕ
			|	РасходныйОрдерСкладТовары.Номенклатура = &Номенклатура
			|
			|СГРУППИРОВАТЬ ПО
			|	РасходныйОрдерСкладТовары.Ссылка";
		
		
		Д1=Дата(1,1,1);
		Д2=Дата(1,1,1);
		
		Для каждого Эл Из Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
			Попытка
				Если Строка(Эл.Параметр)="НачалоПериода" Тогда
					Д1=Эл.Значение;
				КонецЕсли; 
				Если Строка(Эл.Параметр)="КонецПериода" Тогда
					Д2=Эл.Значение;
				КонецЕсли; 
			Исключение
			
			КонецПопытки;
		КонецЦикла; 
		
		
		Запрос.УстановитьПараметр("Дата1", Д1.Дата);
		Запрос.УстановитьПараметр("Дата2", КонецДня(Д2.Дата));
		Запрос.УстановитьПараметр("Номенклатура", НоменклатураОтбор);
		Запрос.УстановитьПараметр("ПричинаСписания", ПричинаСписанияОтбор);
		Запрос.УстановитьПараметр("Склад", СкладОтбор);
		
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Сп=Новый СписокЗначений;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Сп.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
	

		
	    Возврат Сп;
	КонецЕсли; 
	
	Возврат Неопределено;

	
КонецФункции
