
Функция ПолучитьДанныеДляОтчета(ДатаОтчета, НоменклатураОтбор = Неопределено, СкладОтбор = Неопределено, СворачиватьДанные = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаОтчета", ДатаОтчета);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("Номенкл", НоменклатураОтбор);
	Запрос.УстановитьПараметр("Склад", СкладОтбор);
	Запрос.Текст = "ВЫБРАТЬ
	               |	РасходныйОрдерСклад.Ссылка КАК Документ
	               |ПОМЕСТИТЬ ВТ_Расходники
	               |ИЗ
	               |	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
	               |ГДЕ
	               |	РасходныйОрдерСклад.ДатаРаспределения = &ДатаОтчета
	               |	И РасходныйОрдерСклад.Проведен = ИСТИНА
	               |	И РасходныйОрдерСклад.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
	               |	И РасходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Документ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПорядокОбеспеченияТорговыхТочекСрезПоследних.ТорговаяТочка,
	               |	Номенклатура.Ссылка КАК Номенклатура,
	               |	ПорядокОбеспеченияТорговыхТочекСрезПоследних.Расчетчик
	               |ИЗ
	               |	РегистрСведений.ПорядокОбеспеченияТорговыхТочек.СрезПоследних(&ДатаОтчета, ) КАК ПорядокОбеспеченияТорговыхТочекСрезПоследних
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	               |		ПО ПорядокОбеспеченияТорговыхТочекСрезПоследних.ГруппаУРЗ = Номенклатура.ГруппаНоменклатурыУРЗ
	               |ГДЕ
	               |	(Номенклатура.Ссылка = &Номенкл
	               |			ИЛИ &Номенкл = НЕОПРЕДЕЛЕНО)
	               |	И (ПорядокОбеспеченияТорговыхТочекСрезПоследних.Расчетчик = &Склад
	               |			ИЛИ &Склад = НЕОПРЕДЕЛЕНО)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РасходныйОрдерСкладТовары.Номенклатура,
	               |	СУММА(РасходныйОрдерСкладТовары.Количество) КАК Количество,
	               |	РасходныйОрдерСкладТовары.Ссылка.Получатель КАК ТорговаяТочка,
	               |	РасходныйОрдерСкладТовары.Характеристика,
	               |	РасходныйОрдерСкладТовары.Ссылка.Склад.Владелец КАК СтруктурнаяЕдиница,
	               |	РасходныйОрдерСкладТовары.Ссылка.Сборщик
	               |ИЗ
	               |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
	               |ГДЕ
	               |	РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения = &ДатаОтчета
	               |	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
	               |	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
	               |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
	               |	И (РасходныйОрдерСкладТовары.Номенклатура = &Номенкл
	               |			ИЛИ &Номенкл = НЕОПРЕДЕЛЕНО)
	               |	И (РасходныйОрдерСкладТовары.Ссылка.Склад.Владелец = &Склад
	               |			ИЛИ &Склад = НЕОПРЕДЕЛЕНО)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РасходныйОрдерСкладТовары.Номенклатура,
	               |	РасходныйОрдерСкладТовары.Ссылка.Получатель,
	               |	РасходныйОрдерСкладТовары.Характеристика,
	               |	РасходныйОрдерСкладТовары.Ссылка.Склад.Владелец,
	               |	РасходныйОрдерСкладТовары.Ссылка.Сборщик
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	КоличествоВКоробкеСрезПоследних.СтруктурнаяЕдиница КАК Склад,
	               |	КоличествоВКоробкеСрезПоследних.Количество,
	               |	КоличествоВКоробкеСрезПоследних.Характеристика
	               |ИЗ
	               |	РегистрСведений.КоличествоВКоробке.СрезПоследних(
	               |			&ДатаОтчета,
	               |			СтруктурнаяЕдиница = &Склад
	               |				ИЛИ &Склад = НЕОПРЕДЕЛЕНО) КАК КоличествоВКоробкеСрезПоследних
	               |ГДЕ
	               |	КоличествоВКоробкеСрезПоследних.Характеристика.Неактивная = ЛОЖЬ
	               |	И КоличествоВКоробкеСрезПоследних.Характеристика.БратьКоличествоВКоробкеПоСкладуДляРаспределения = ИСТИНА
	               |	И (КоличествоВКоробкеСрезПоследних.Характеристика.Владелец = &Номенкл
	               |			ИЛИ &Номенкл = НЕОПРЕДЕЛЕНО)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОстаткиРаспределенныеПоТТ.ТорговаяТочка,
	               |	ОстаткиРаспределенныеПоТТ.Номенклатура,
	               |	СУММА(ОстаткиРаспределенныеПоТТ.Количество) КАК Количество,
	               |	ОстаткиРаспределенныеПоТТ.Характеристика
	               |ИЗ
	               |	РегистрСведений.ОстаткиРаспределенныеПоТТ КАК ОстаткиРаспределенныеПоТТ
	               |ГДЕ
	               |	ОстаткиРаспределенныеПоТТ.Дата = &ДатаОтчета
	               |	И ОстаткиРаспределенныеПоТТ.Количество <> 0
	               |	И (ОстаткиРаспределенныеПоТТ.Номенклатура = &Номенкл
	               |			ИЛИ &Номенкл = НЕОПРЕДЕЛЕНО)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОстаткиРаспределенныеПоТТ.ТорговаяТочка,
	               |	ОстаткиРаспределенныеПоТТ.Номенклатура,
	               |	ОстаткиРаспределенныеПоТТ.Характеристика
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ОстаткиРаспределенныеПоТТ.ТорговаяТочка,
	               |	ОстаткиРаспределенныеПоТТ.Номенклатура,
	               |	СУММА(ОстаткиРаспределенныеПоТТ.Количество),
	               |	ОстаткиРаспределенныеПоТТ.Характеристика
	               |ИЗ
	               |	РегистрСведений.ОстаткиРаспределенныеПоТТПолная КАК ОстаткиРаспределенныеПоТТ
	               |ГДЕ
	               |	ОстаткиРаспределенныеПоТТ.Дата = &ДатаОтчета
	               |	И ОстаткиРаспределенныеПоТТ.Количество <> 0
	               |	И (ОстаткиРаспределенныеПоТТ.Номенклатура = &Номенкл
	               |			ИЛИ &Номенкл = НЕОПРЕДЕЛЕНО)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ОстаткиРаспределенныеПоТТ.ТорговаяТочка,
	               |	ОстаткиРаспределенныеПоТТ.Номенклатура,
	               |	ОстаткиРаспределенныеПоТТ.Характеристика
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТоварыНаСкладах.Номенклатура,
	               |	ТоварыНаСкладах.Характеристика,
	               |	МИНИМУМ(ТоварыНаСкладах.Период) КАК Период,
	               |	ТоварыНаСкладах.Склад.Владелец КАК СтруктурнаяЕдиница
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
	               |ГДЕ
	               |	ТоварыНаСкладах.Регистратор В
	               |			(ВЫБРАТЬ
	               |				ВТ_Расходники.Документ
	               |			ИЗ
	               |				ВТ_Расходники КАК ВТ_Расходники)
	               |	И (ТоварыНаСкладах.Номенклатура = &Номенкл
	               |			ИЛИ &Номенкл = НЕОПРЕДЕЛЕНО)
	               |	И (ТоварыНаСкладах.Склад.Владелец = &Склад
	               |			ИЛИ &Склад = НЕОПРЕДЕЛЕНО)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТоварыНаСкладах.Номенклатура,
	               |	ТоварыНаСкладах.Характеристика,
	               |	ТоварыНаСкладах.Склад.Владелец
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
	               |	ЗначенияСвойствОбъектов.Значение
	               |ИЗ
	               |	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |		ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов.Объект
	               |			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке))
	               |ГДЕ
	               |	ХарактеристикиНоменклатуры.БратьКоличествоВКоробкеПоСкладуДляРаспределения = ЛОЖЬ
	               |	И (ХарактеристикиНоменклатуры.Владелец = &Номенкл
	               |			ИЛИ &Номенкл = НЕОПРЕДЕЛЕНО)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТоварныйАссортиментТочекСрезПоследних.ТорговаяТочка,
	               |	ТоварныйАссортиментТочекСрезПоследних.Номенклатура,
	               |	ТоварныйАссортиментТочекСрезПоследних.Характеристика
	               |ИЗ
	               |	РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(&ДатаОтчета, ) КАК ТоварныйАссортиментТочекСрезПоследних
	               |ГДЕ
	               |	ТоварныйАссортиментТочекСрезПоследних.Выведена = ЛОЖЬ
	               |	И (ТоварныйАссортиментТочекСрезПоследних.Номенклатура = &Номенкл
	               |			ИЛИ &Номенкл = НЕОПРЕДЕЛЕНО)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	МаршрутыСклады.Ссылка КАК Маршрут,
	               |	ДоступностьТоваровНаСкладах.Номенклатура
	               |ИЗ
	               |	Справочник.Маршруты.Склады КАК МаршрутыСклады
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоступностьТоваровНаСкладах КАК ДоступностьТоваровНаСкладах
	               |		ПО МаршрутыСклады.Склад = ДоступностьТоваровНаСкладах.Склад
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МаршрутыТорговыеТочки.Ссылка КАК Маршрут,
	               |	МаршрутыТорговыеТочки.СтруктурнаяЕдиница КАК ТорговаяТочка,
	               |	МаршрутыТорговыеТочки.Ссылка.ПорядокСортировки * 10000 + МаршрутыТорговыеТочки.НомерСтроки КАК ПорядокСборки,
	               |	МаршрутыТорговыеТочки.Ссылка.СтруктурноеПодразделение
	               |ИЗ
	               |	Справочник.Маршруты.ТорговыеТочки КАК МаршрутыТорговыеТочки
	               |ГДЕ
	               |	(МаршрутыТорговыеТочки.Ссылка.СтруктурноеПодразделение = &Склад
	               |			ИЛИ &Склад = НЕОПРЕДЕЛЕНО)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ПорядокСборки";
				   
	Результаты = Запрос.ВыполнитьПакет();
	ТабПорядокОбеспечения = Результаты[1].Выгрузить();
	ТабОтгружено = Результаты[2].Выгрузить();
	ТабКолвоВКоробке = Результаты[3].Выгрузить();
	ТабРаспределено = Результаты[4].Выгрузить();
	ТабМинДатыОстатковПоНоменклатуре = Результаты[5].Выгрузить();
	ТабВКоробкеПоХарактеристике = Результаты[6].Выгрузить();
	ТабТовАссортимент = Результаты[7].Выгрузить();
	ТабТоварыМаршрутов = Результаты[8].Выгрузить();
	ТабТТМаршрутов = Результаты[9].Выгрузить();
	
	ТабПорядокОбеспечения.Индексы.Добавить("ТорговаяТочка, Номенклатура");
	ТабКолвоВКоробке.Индексы.Добавить("Склад, Характеристика");
	ТабВКоробкеПоХарактеристике.Индексы.Добавить("Характеристика");
	ТабОтгружено.Индексы.Добавить("ТорговаяТочка, Номенклатура");
	ТабТовАссортимент.Индексы.Добавить("ТорговаяТочка, Номенклатура");
	ТабТоварыМаршрутов.Индексы.Добавить("Маршрут, Номенклатура");
	ТабТТМаршрутов.Индексы.Добавить("СтруктурноеПодразделение, ТорговаяТочка");
	ТабМинДатыОстатковПоНоменклатуре.Индексы.Добавить("СтруктурнаяЕдиница, Номенклатура, Характеристика");
	
	МинДатаОстатков = ТекущаяДата();
	МаксДатаОстатков = ТекущаяДата();
	Для Каждого СтрокаТовар Из ТабМинДатыОстатковПоНоменклатуре Цикл
		МинДатаОстатков = Мин(МинДатаОстатков, СтрокаТовар.Период);
		МаксДатаОстатков = Макс(МаксДатаОстатков, СтрокаТовар.Период);
	КонецЦикла;
	
	МинДатаОстатков = МинДатаОстатков - 1;
	
	Запрос.УстановитьПараметр("МинДатаГраница", Новый Граница(МинДатаОстатков, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаНач", МинДатаОстатков);
	Запрос.УстановитьПараметр("ДатаКон", МаксДатаОстатков);
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	РасходныйОрдерСклад.Склад
	               |ПОМЕСТИТЬ ВТ_Склады
	               |ИЗ
	               |	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
	               |ГДЕ
	               |	РасходныйОрдерСклад.Ссылка В
	               |			(ВЫБРАТЬ
	               |				ВТ_Расходники.Документ
	               |			ИЗ
	               |				ВТ_Расходники КАК ВТ_Расходники)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТоварыНаСкладахОстатки.Номенклатура,
	               |	ТоварыНаСкладахОстатки.Характеристика,
	               |	СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток,
	               |	ТоварыНаСкладахОстатки.Склад.Владелец КАК СтруктурнаяЕдиница
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |			&МинДатаГраница,
	               |			Склад В
	               |					(ВЫБРАТЬ
	               |						ВТ_Склады.Склад
	               |					ИЗ
	               |						ВТ_Склады КАК ВТ_Склады)
	               |				И (Номенклатура = &Номенкл
	               |					ИЛИ &Номенкл = НЕОПРЕДЕЛЕНО)
	               |				И (Склад.Владелец = &Склад
	               |					ИЛИ &Склад = НЕОПРЕДЕЛЕНО)) КАК ТоварыНаСкладахОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТоварыНаСкладахОстатки.Номенклатура,
	               |	ТоварыНаСкладахОстатки.Характеристика,
	               |	ТоварыНаСкладахОстатки.Склад.Владелец
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТоварыНаСкладах.Период,
	               |	ТоварыНаСкладах.Номенклатура,
	               |	ТоварыНаСкладах.Характеристика,
	               |	ТоварыНаСкладах.Склад.Владелец КАК СтруктурнаяЕдиница,
	               |	ТоварыНаСкладах.Количество * ВЫБОР
	               |		КОГДА ТоварыНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	               |			ТОГДА -1
	               |		ИНАЧЕ 1
	               |	КОНЕЦ КАК Количество
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
	               |ГДЕ
	               |	ТоварыНаСкладах.Период МЕЖДУ &ДатаНач И &ДатаКон
	               |	И НЕ ТоварыНаСкладах.Регистратор В
	               |				(ВЫБРАТЬ
	               |					ВТ_Расходники.Документ
	               |				ИЗ
	               |					ВТ_Расходники КАК ВТ_Расходники)
	               |	И ТоварыНаСкладах.Активность = ИСТИНА
	               |	И ТоварыНаСкладах.Склад В
	               |			(ВЫБРАТЬ
	               |				ВТ_Склады.Склад
	               |			ИЗ
	               |				ВТ_Склады КАК ВТ_Склады)
	               |	И (ТоварыНаСкладах.Номенклатура = &Номенкл
	               |			ИЛИ &Номенкл = НЕОПРЕДЕЛЕНО)
	               |	И (ТоварыНаСкладах.Склад.Владелец = &Склад
	               |			ИЛИ &Склад = НЕОПРЕДЕЛЕНО)";
				   
	Результаты = Запрос.ВыполнитьПакет();
	ТабОстатки = Результаты[1].Выгрузить();
	ТабДвижения = Результаты[2].Выгрузить();
	
	ТабДвижения.Индексы.Добавить("СтруктурнаяЕдиница, Номенклатура, Характеристика");
	ТабОстатки.Индексы.Добавить("СтруктурнаяЕдиница, Номенклатура, Характеристика");
	ТабДвиженияКопия = ТабДвижения.Скопировать();
	ТабДвиженияКопия.Свернуть("СтруктурнаяЕдиница, Номенклатура, Характеристика");
	
	Для Каждого СтрокаДвижение Из ТабДвиженияКопия Цикл
		СтрокиОстатки = ТабОстатки.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница, Номенклатура, Характеристика", СтрокаДвижение.СтруктурнаяЕдиница, СтрокаДвижение.Номенклатура, СтрокаДвижение.Характеристика));
		Если СтрокиОстатки.Количество() = 0 Тогда
			СтрокаОстаток = ТабОстатки.Добавить();
			СтрокаОстаток.СтруктурнаяЕдиница = СтрокаДвижение.СтруктурнаяЕдиница;
			СтрокаОстаток.Номенклатура = СтрокаДвижение.Номенклатура;
			СтрокаОстаток.Характеристика = СтрокаДвижение.Характеристика;
			СтрокаОстаток.КоличествоОстаток = 0;
		КонецЕсли;	
	КонецЦикла;	
	
	Для Каждого СтрокаОстаток Из ТабОстатки Цикл
		СтрокиМинОстатки = ТабМинДатыОстатковПоНоменклатуре.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница, Номенклатура, Характеристика", СтрокаОстаток.СтруктурнаяЕдиница, СтрокаОстаток.Номенклатура, СтрокаОстаток.Характеристика));
		Если СтрокиМинОстатки.Количество() > 0 Тогда
			МинДата = СтрокиМинОстатки[0].Период;
			СтрокиДвижения = ТабДвижения.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница, Номенклатура, Характеристика", СтрокаОстаток.СтруктурнаяЕдиница, СтрокаОстаток.Номенклатура, СтрокаОстаток.Характеристика));
			Для Каждого СтрокаДвижение Из СтрокиДвижения Цикл
				Если СтрокаДвижение.Период <= МинДата Тогда
					СтрокаОстаток.КоличествоОстаток = СтрокаОстаток.КоличествоОстаток + СтрокаДвижение.Количество;
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;	
	КонецЦикла;	
	
	ТабДвижения = Неопределено;
	ТабМинДатыОстатковПоНоменклатуре = Неопределено;
	Запрос = Неопределено;
				   
	ТаблицаДанных = Новый ТаблицаЗначений();
	ТаблицаДанных.Колонки.Добавить("Склад");
	ТаблицаДанных.Колонки.Добавить("Сборщик");
	ТаблицаДанных.Колонки.Добавить("Номенклатура");
	ТаблицаДанных.Колонки.Добавить("ТорговаяТочка");
	ТаблицаДанных.Колонки.Добавить("Характеристика");
	ТаблицаДанных.Колонки.Добавить("РаспределеноКоробок", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("РаспределеноШтук", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("ОтгруженоКоробок", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("ОтгруженоШтук", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("НехваткаКоробок", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("НехваткаШтук", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("ПолучилаТТКоробок", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("ПолучилаТТШтук", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("ПорядокСборки", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("Остаток", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("Маршрут");
	
	ТаблицаДанных.Индексы.Добавить("Склад, ТорговаяТочка, Номенклатура, Характеристика");
	ТаблицаДанных.Индексы.Добавить("ТорговаяТочка, Номенклатура");
	
	Для Каждого СтрокаРаспределено Из ТабРаспределено Цикл
		СтрокаДоб = ТаблицаДанных.Добавить();
		СтрокаДоб.Номенклатура = СтрокаРаспределено.Номенклатура;
		СтрокаДоб.ТорговаяТочка = СтрокаРаспределено.ТорговаяТочка;
		СтрокаДоб.Характеристика = СтрокаРаспределено.Характеристика;
		СтрокиОтгружено = ТабОтгружено.НайтиСтроки(Новый Структура("ТорговаяТочка, Номенклатура", СтрокаРаспределено.ТорговаяТочка, СтрокаРаспределено.Номенклатура));
		Если СтрокиОтгружено.Количество() > 0 Тогда
			СтрокаДоб.Склад = СтрокиОтгружено[0].СтруктурнаяЕдиница;
			СтрокаДоб.Сборщик = СтрокиОтгружено[0].Сборщик;
		Иначе	
			СтрокиПорядокОбеспечения = ТабПорядокОбеспечения.НайтиСтроки(Новый Структура("ТорговаяТочка, Номенклатура", СтрокаРаспределено.ТорговаяТочка, СтрокаРаспределено.Номенклатура));
			Если СтрокиПорядокОбеспечения.Количество() > 0 Тогда
				СтрокаДоб.Склад = СтрокиПорядокОбеспечения[0].Расчетчик;
			КонецЕсли;
		КонецЕсли;	
		КолвоВКоробке = 0;
		СтрокиВКоробке = ТабКолвоВКоробке.НайтиСтроки(Новый Структура("Склад, Характеристика", СтрокаДоб.Склад, СтрокаДоб.Характеристика));
		Если СтрокиВКоробке.Количество() > 0 Тогда
			КолвоВКоробке = СтрокиВКоробке[0].Количество;
		Иначе
			СтрокаХар = ТабВКоробкеПоХарактеристике.Найти(СтрокаДоб.Характеристика, "Характеристика");
			Если СтрокаХар <> Неопределено Тогда
				КолвоВКоробке = СтрокаХар.Значение;
			КонецЕсли;	
		КонецЕсли;
		СтрокаДоб.РаспределеноШтук = СтрокаРаспределено.Количество;
		Если СтрокаДоб.РаспределеноШтук = 0 Тогда
			СтрокаДоб.РаспределеноКоробок = 0;
		Иначе
			СтрокаДоб.РаспределеноКоробок = ?(ЗначениеЗаполнено(КолвоВКоробке), Цел(СтрокаДоб.РаспределеноШтук / КолвоВКоробке), СтрокаДоб.РаспределеноШтук);
			Если СтрокаДоб.РаспределеноКоробок <> СтрокаДоб.РаспределеноШтук Тогда
				Если Цел(СтрокаДоб.РаспределеноШтук / КолвоВКоробке) * КолвоВКоробке <> СтрокаДоб.РаспределеноШтук Тогда
					СтрокаДоб.РаспределеноКоробок = СтрокаДоб.РаспределеноКоробок + 1;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
		
	КонецЦикла;
	
	Для Каждого СтрокаОтгрузка Из ТабОтгружено Цикл
		СтрокиДанных = ТаблицаДанных.НайтиСтроки(Новый Структура("Склад, ТорговаяТочка, Номенклатура, Характеристика", СтрокаОтгрузка.СтруктурнаяЕдиница, СтрокаОтгрузка.ТорговаяТочка, СтрокаОтгрузка.Номенклатура, СтрокаОтгрузка.Характеристика));
		Если СтрокиДанных.Количество() > 0 Тогда
			СтрокаДоб = СтрокиДанных[0];
		Иначе
			СтрокаДоб = ТаблицаДанных.Добавить();
			СтрокаДоб.Склад = СтрокаОтгрузка.СтруктурнаяЕдиница;
			СтрокаДоб.ТорговаяТочка = СтрокаОтгрузка.ТорговаяТочка;
			СтрокаДоб.Номенклатура = СтрокаОтгрузка.Номенклатура;
			СтрокаДоб.Характеристика = СтрокаОтгрузка.Характеристика;
		КонецЕсли;
		
		КолвоВКоробке = 0;
		СтрокиВКоробке = ТабКолвоВКоробке.НайтиСтроки(Новый Структура("Склад, Характеристика", СтрокаДоб.Склад, СтрокаДоб.Характеристика));
		Если СтрокиВКоробке.Количество() > 0 Тогда
			КолвоВКоробке = СтрокиВКоробке[0].Количество;
		Иначе
			СтрокаХар = ТабВКоробкеПоХарактеристике.Найти(СтрокаДоб.Характеристика, "Характеристика");
			Если СтрокаХар <> Неопределено Тогда
				КолвоВКоробке = СтрокаХар.Значение;
			КонецЕсли;	
		КонецЕсли;
		СтрокаДоб.ОтгруженоШтук = СтрокаОтгрузка.Количество;
		Если СтрокаДоб.ОтгруженоШтук = 0 Тогда
			СтрокаДоб.ОтгруженоКоробок = 0;
		Иначе
			СтрокаДоб.ОтгруженоКоробок = ?(ЗначениеЗаполнено(КолвоВКоробке), Окр(СтрокаДоб.ОтгруженоШтук / КолвоВКоробке, 0), СтрокаДоб.ОтгруженоШтук);
		КонецЕсли;
		
	КонецЦикла;
	
	ADOСоединение = Новый COMОбъект("ADODB.Connection");
	ADOСоединение.ConnectionTimeOut = 0;
	ADOСоединение.CommandTimeOut    = 0;
	ADOСоединение.ConnectionString  = ОбменСAccess.ПолучитьСтрокуСоединения("VV");
	ADOСоединение.Open();
	
	СтрЗапрос = "create table #ls (post numeric(15, 3), id_tov int, id_tt int) 
                    |
					|Insert into #ls
					|exec ('SELECT CAST(DTT.post as numeric(15, 3)) as post, DTT.id_tov, DTT.id_tt
				  |
				  |  	  FROM [vv03].[dbo].[DTT] DTT (nolock)
				  |  	  
				  |  	  WHERE DTT.date_tt = '" + ВнешниеДанные.ФорматПоля(ДатаОтчета, Истина) + "' and DTT.post <> 0" + ?(ЗначениеЗаполнено(НоменклатураОтбор), " and DTT.id_tov = " + ВнешниеДанные.ФорматПоля(НоменклатураОтбор.id_tov), "") + "
				  |			') at [SRV-SQL03]
				  |
				  |SELECT CAST(DTT.post as numeric(15, 3)) as post, CAST(ArticleBin2UID.UID as nvarchar(50)) as tov, CAST(TTBin2UID.UID as nvarchar(50)) as TT
				  |
				  |  	  FROM #ls DTT
				  |  	  LEFT OUTER JOIN IzbenkaFin.dbo.ArticleBin2UID (nolock) ArticleBin2UID
				  |  	  ON DTT.id_tov = ArticleBin2UID.id_tov
				  |  	  LEFT OUTER JOIN IzbenkaFin.dbo.TTBin2UID (nolock) TTBin2UID
				  |  	  ON DTT.id_tt = TTBin2UID.id_tt";
	
	//СтрЗапрос = "SELECT CAST(DTT.post as numeric(15, 3)) as post, CAST(ArticleBin2UID.UID as nvarchar(50)) as tov, CAST(TTBin2UID.UID as nvarchar(50)) as TT
	//			  |
	//			  |  	  FROM [Reports].[dbo].[DTT] DTT (nolock)
	//			  |  	  LEFT OUTER JOIN IzbenkaFin.dbo.ArticleBin2UID (nolock) ArticleBin2UID
	//			  |  	  ON DTT.id_tov = ArticleBin2UID.id_tov
	//			  |  	  LEFT OUTER JOIN IzbenkaFin.dbo.TTBin2UID (nolock) TTBin2UID
	//			  |  	  ON DTT.id_tt = TTBin2UID.id_tt
	//			  |  	  
	//			  |  	  WHERE DTT.date_tt = " + ВнешниеДанные.ФорматПоля(ДатаОтчета, Истина) + " and DTT.post <> 0" + ?(ЗначениеЗаполнено(НоменклатураОтбор), " and DTT.id_tov = " + ВнешниеДанные.ФорматПоля(НоменклатураОтбор.id_tov), "");
  
	rs = ADOСоединение.Execute(СтрЗапрос);
	Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
		rs=rs.NextRecordSet();
	КонецЦикла;
	
	Попытка
		rs.MoveFirst();
		
		Пока НЕ rs.EOF() Цикл
			Товар = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Rs.Fields("tov").Value));
			ТТ = Справочники.СтруктурныеЕдиницы.ПолучитьСсылку(Новый УникальныйИдентификатор(Rs.Fields("TT").Value));
			СтрокиДанных = ТаблицаДанных.НайтиСтроки(Новый Структура("ТорговаяТочка, Номенклатура", ТТ, Товар));
			Если СтрокиДанных.Количество() > 0 Тогда
				СтрокаДоб = СтрокиДанных[0];
			Иначе
				СтрокаДоб = ТаблицаДанных.Добавить();
				СтрокаДоб.Номенклатура = Товар;
				СтрокаДоб.ТорговаяТочка = ТТ;
				СтрокиПорядокОбеспечения = ТабПорядокОбеспечения.НайтиСтроки(Новый Структура("ТорговаяТочка, Номенклатура", СтрокаДоб.ТорговаяТочка, СтрокаДоб.Номенклатура));
				Если СтрокиПорядокОбеспечения.Количество() > 0 Тогда
					СтрокаДоб.Склад = СтрокиПорядокОбеспечения[0].Расчетчик;
				КонецЕсли;
				СтрокиТовАссортимент = ТабТовАссортимент.НайтиСтроки(Новый Структура("ТорговаяТочка, Номенклатура", СтрокаДоб.ТорговаяТочка, СтрокаДоб.Номенклатура));
				Если СтрокиТовАссортимент.Количество() > 0 Тогда
					СтрокаДоб.Характеристика = СтрокиТовАссортимент[0].Характеристика;
				КонецЕсли;
			КонецЕсли;
			
			КолвоВКоробке = 0;
			СтрокиВКоробке = ТабКолвоВКоробке.НайтиСтроки(Новый Структура("Склад, Характеристика", СтрокаДоб.Склад, СтрокаДоб.Характеристика));
			Если СтрокиВКоробке.Количество() > 0 Тогда
				КолвоВКоробке = СтрокиВКоробке[0].Количество;
			Иначе
				СтрокаХар = ТабВКоробкеПоХарактеристике.Найти(СтрокаДоб.Характеристика, "Характеристика");
				Если СтрокаХар <> Неопределено Тогда
					КолвоВКоробке = СтрокаХар.Значение;
				КонецЕсли;	
			КонецЕсли;
			СтрокаДоб.ПолучилаТТШтук = Rs.Fields("post").Value;
			Если СтрокаДоб.ПолучилаТТШтук = 0 Тогда
				СтрокаДоб.ПолучилаТТКоробок = 0;
			Иначе
				СтрокаДоб.ПолучилаТТКоробок = ?(ЗначениеЗаполнено(КолвоВКоробке), Окр(СтрокаДоб.ПолучилаТТШтук / КолвоВКоробке, 0), СтрокаДоб.ПолучилаТТШтук);
			КонецЕсли;
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	ТабДляСортировкиМаршрутов = Новый ТаблицаЗначений();
	ТабДляСортировкиМаршрутов.Колонки.Добавить("Маршрут");
	ТабДляСортировкиМаршрутов.Колонки.Добавить("ПорядокСборки");
	//теперь самое главное - нужно проставить порядок отгрузки точек по маршрутам
	Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
		СтрокиМаршрутыПоТочкам = ТабТТМаршрутов.НайтиСтроки(Новый Структура("СтруктурноеПодразделение, ТорговаяТочка", СтрокаДанных.Склад, СтрокаДанных.ТорговаяТочка));
		ТабДляСортировкиМаршрутов.Очистить();
		Для Каждого СтрокаМаршрут Из СтрокиМаршрутыПоТочкам Цикл
			ЗаполнитьЗначенияСвойств(ТабДляСортировкиМаршрутов.Добавить(), СтрокаМаршрут);
		КонецЦикла;	
		ТабДляСортировкиМаршрутов.Сортировать("ПорядокСборки");
		Для Каждого СтрокаМаршрут Из ТабДляСортировкиМаршрутов Цикл
			СтрокиВТоварахМаршрутов = ТабТоварыМаршрутов.НайтиСтроки(Новый Структура("Маршрут, Номенклатура", СтрокаМаршрут.Маршрут, СтрокаДанных.Номенклатура));
			Если СтрокиВТоварахМаршрутов.Количество() > 0 Тогда
				СтрокаДанных.ПорядокСборки = СтрокаМаршрут.ПорядокСборки;
				СтрокаДанных.Маршрут = СтрокаМаршрут.Маршрут;
				Прервать;
			КонецЕсли;	
		КонецЦикла;	
	КонецЦикла;
	
	ТаблицаДанных.Сортировать("Склад, Номенклатура, ПорядокСборки");
	
	Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
		СтрокиОстаток = ТабОстатки.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница, Номенклатура, Характеристика", СтрокаДанных.Склад, СтрокаДанных.Номенклатура, СтрокаДанных.Характеристика));
		Если СтрокиОстаток.Количество() > 0 Тогда
			СтрокаОстаток = СтрокиОстаток[0];
		Иначе
			СтрокаОстаток = ТабОстатки.Добавить();
			СтрокаОстаток.СтруктурнаяЕдиница = СтрокаДанных.Склад;
			СтрокаОстаток.Номенклатура = СтрокаДанных.Номенклатура;
			СтрокаОстаток.Характеристика = СтрокаДанных.Характеристика;
			СтрокаОстаток.КоличествоОстаток = 0;
		КонецЕсли;
		Если СтрокаДанных.ПолучилаТТШтук > 0 Тогда
			СтрокаОстаток.КоличествоОстаток = Макс(0, СтрокаОстаток.КоличествоОстаток - СтрокаДанных.ПолучилаТТШтук);
		КонецЕсли;	
		СтрокаДанных.Остаток = СтрокаОстаток.КоличествоОстаток;
		Если СтрокаДанных.РаспределеноШтук > СтрокаДанных.ПолучилаТТШтук Тогда
			Если СтрокаОстаток.КоличествоОстаток <= 0 Тогда
				СтрокаДанных.НехваткаШтук = СтрокаДанных.РаспределеноШтук - СтрокаДанных.ПолучилаТТШтук;
				Если НЕ ЗначениеЗаполнено(СтрокаДанных.Склад)
					И НЕ ЗначениеЗаполнено(СтрокаДанных.ПолучилаТТШтук) Тогда
					СтрокаДанных.НехваткаШтук = 0;
				КонецЕсли;		
				КолвоВКоробке = 0;
				СтрокиВКоробке = ТабКолвоВКоробке.НайтиСтроки(Новый Структура("Склад, Характеристика", СтрокаДанных.Склад, СтрокаДанных.Характеристика));
				Если СтрокиВКоробке.Количество() > 0 Тогда
					КолвоВКоробке = СтрокиВКоробке[0].Количество;
				Иначе
					СтрокаХар = ТабВКоробкеПоХарактеристике.Найти(СтрокаДанных.Характеристика, "Характеристика");
					Если СтрокаХар <> Неопределено Тогда
						КолвоВКоробке = СтрокаХар.Значение;
					КонецЕсли;	
				КонецЕсли;
				Если СтрокаДанных.НехваткаШтук = 0 Тогда
					СтрокаДанных.НехваткаКоробок = 0;
				Иначе
					СтрокаДанных.НехваткаКоробок = ?(ЗначениеЗаполнено(КолвоВКоробке), Окр(СтрокаДанных.НехваткаШтук / КолвоВКоробке, 0), СтрокаДанных.НехваткаШтук);
				КонецЕсли;
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
	
	Если СворачиватьДанные Тогда
		ТаблицаДанных.Свернуть("Склад, Сборщик, Номенклатура, Характеристика", "РаспределеноКоробок, РаспределеноШтук, ОтгруженоКоробок, ОтгруженоШтук, НехваткаКоробок, НехваткаШтук, ПолучилаТТКоробок, ПолучилаТТШтук");
	КонецЕсли;	
	
	ТаблицаДанных.Колонки.Добавить("Дата");
	ТаблицаДанных.ЗаполнитьЗначения(ДатаОтчета, "Дата");
	
	Возврат ТаблицаДанных;
	
КонецФункции	