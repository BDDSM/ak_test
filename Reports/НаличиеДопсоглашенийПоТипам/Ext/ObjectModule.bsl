
//Для каждого типа допсоглашения отправлять отдельным письмом. Рассылку начинать за месяц до наступления даты "Выполнить до"
Функция ПолучитьТипыДопСоглашенийДляОтбора()
	
	МассивДопСоглашений = Новый Массив;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
		|	ТипыДопСоглашений.Ссылка КАК ТипДопСоглашения
		|ИЗ
		|	Справочник.ТипыДопСоглашений КАК ТипыДопСоглашений
		|ГДЕ
		|	ТипыДопСоглашений.ВыполнитьДо МЕЖДУ &Дата1 И &Дата2
		|	И НЕ ТипыДопСоглашений.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТипыДопСоглашений.ВыполнитьДо");
	Запрос.УстановитьПараметр("Дата1", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Дата2", КонецДня(ДобавитьМесяц(ТекущаяДата(), 1)));
	
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		МассивДопСоглашений = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("ТипДопСоглашения");
	КонецЕсли;
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат МассивДопСоглашений;
	
КонецФункции

Процедура ОтправитьОтчётПоЭлектронке() Экспорт
Перем КомпоновщикНастроек;
	
	// если массив доп. соглашений пустой, значит, отправлять нечего
	МассивДопСоглашений = ПолучитьТипыДопСоглашенийДляОтбора();
	Если МассивДопСоглашений.Количество() = 0 Тогда Возврат; КонецЕсли;
	
	СКД = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	
	ВыбранныйВариант = СКД.ВариантыНастроек.Найти("РассылкаУведомлений");
	Если ВыбранныйВариант = Неопределено Тогда
		КомпоновщикНастроек.ЗагрузитьНастройки(СКД.НастройкиПоУмолчанию);
	Иначе
		КомпоновщикНастроек.ЗагрузитьНастройки(ВыбранныйВариант.Настройки);
	КонецЕсли;
	
	НастройкиКомпоновщика = КомпоновщикНастроек.Настройки;
	НашаСтруктураКомпоновщика = НастройкиКомпоновщика.Структура[0];
	НастройкиКомпоновщика.ПараметрыВывода.УстановитьЗначениеПараметра("РасположениеРесурсов", РасположениеРесурсовКомпоновкиДанных.Горизонтально);
	НастройкиКомпоновщика.ПараметрыВывода.УстановитьЗначениеПараметра("АвтоПозицияРесурсов", АвтоПозицияРесурсовКомпоновкиДанных.ПослеВсехПолей);
	НашаСтруктураКомпоновщика.ПараметрыВывода.УстановитьЗначениеПараметра("РасположениеИтогов", РасположениеИтоговКомпоновкиДанных.Нет);
	
	// отбор
	ЭлементыОтбора = НастройкиКомпоновщика.Отбор.Элементы; //НашаСтруктураКомпоновщика.Отбор.Элементы;
	// отбор по типу доп. соглашения
	ЭлементОтбора = ЭлементыОтбора.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипДопСоглашения");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбора.ПравоеЗначение = Новый СписокЗначений;
	ЭлементОтбора.ПравоеЗначение.ЗагрузитьЗначения(МассивДопСоглашений);
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД, КомпоновщикНастроек.ПолучитьНастройки(), , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;	
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ,, Истина);
	
	// подготовим таблицу и процессор вывода результата СКД в таблицу
	ДеревоРезультатов = Новый ДеревоЗначений;
	ПроцессорВыводаВДЗ = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;	
	ПроцессорВыводаВДЗ.УстановитьОбъект(ДеревоРезультатов);	
	ДеревоРезультатов = ПроцессорВыводаВДЗ.Вывести(ПроцессорКомпоновкиДанных);
	
	СтруктураПолей = Новый Структура;
	Для Каждого КолонкаДЗ Из ДеревоРезультатов.Колонки Цикл СтруктураПолей.Вставить(КолонкаДЗ.Имя, КолонкаДЗ.Заголовок); КонецЦикла;
	Если СтруктураПолей.Свойство("АдресЭП") Тогда СтруктураПолей.Удалить("АдресЭП"); КонецЕсли;
	
	ТекстХТМЛ = "<HTML>
		|<HEAD>
		|<META HTTP-EQUIV='Content-Type' CONTENT='text/html; CHARSET=utf-8'>
		|<TITLE></TITLE></HEAD><BODY>
		|
		|<TABLE width='100%' border='1' cellspacing='0'>
		|<THEAD align='center'>
		|<TR>";
	
	Для Каждого КлючИЗначение Из СтруктураПолей Цикл
		ТекстХТМЛ = ТекстХТМЛ + "
		|	<TD><B>" + КлючИЗначение.Значение + "</B></TD>";
	КонецЦикла;
	
	ТекстХТМЛ = ТекстХТМЛ + "
		|</TR>
		|</THEAD>
		|<TBODY>
		|";
	
	Для Каждого ВыборкаТипДопСоглашения Из ДеревоРезультатов.Строки Цикл
		
		ТекТипДопСоглашения = ВыборкаТипДопСоглашения.ТипДопСоглашения;
		Если НЕ ЗначениеЗаполнено(ТекТипДопСоглашения) Тогда Продолжить; КонецЕсли;
		
		ТемаПисьма = "Наличие допсоглашений " + ТекТипДопСоглашения;
		
		Для Каждого ВыборкаТехнолог Из ВыборкаТипДопСоглашения.Строки Цикл
			
			ЭлАдрес = СокрЛП(ВыборкаТехнолог.АдресЭП);
			//ЭлАдрес = "shep@automacon.ru";
			ТелоПисьма = ТекстХТМЛ;
			
			Для Каждого ВыборкаДетальныеЗаписи Из ВыборкаТехнолог.Строки Цикл
				
				ТелоПисьма = ТелоПисьма + "<TR>";
				Для Каждого КлючИЗначение Из СтруктураПолей Цикл
					ТелоПисьма = ТелоПисьма + Символы.ПС + Символы.Таб + "<TD>" + ВыборкаДетальныеЗаписи[КлючИЗначение.Ключ] + "</TD>";
				КонецЦикла;
				ТелоПисьма = ТелоПисьма + Символы.ПС + "</TR>" + Символы.ПС;
				
			КонецЦикла;
			
			ТелоПисьма = ТелоПисьма + "</TBODY></TABLE></BODY></HTML>";
			ОтправитьСообщение(ТемаПисьма, ТелоПисьма, ЭлАдрес);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОтправитьСообщение(Тема, ТекстСообщения, СтрокаАдресовЭП)
	
	АдресЭПОтправителя = "no-reply@vkusvill.ru";
	УчётнаяЗаписьЭП = МеханизмОбменаСообщениями.ПолучитьУчетнуюЗаписьПоАдресу(АдресЭПОтправителя);
	Если НЕ ЗначениеЗаполнено(УчётнаяЗаписьЭП) Тогда
		Возврат;
	ИначеЕсли НЕ ЗначениеЗаполнено(СтрокаАдресовЭП) Тогда
		Возврат;
	КонецЕсли;
	
	МассивАдресовЭП = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(СтрокаАдресовЭП, ";");
	Если МассивАдресовЭП.Количество() = 0 Тогда Возврат; КонецЕсли;
	
	Отправитель = "Наличие доп. соглашений";
	
	Почта = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчётнаяЗаписьЭП);
	Почта.Подключиться(Профиль);
	
	Письмо = Новый ИнтернетПочтовоеСообщение;
	Письмо.Тема = Тема;
	Письмо.ИмяОтправителя = Строка(Отправитель);
	Письмо.Отправитель.Адрес = АдресЭПОтправителя;
	Для Каждого АдресЭП Из МассивАдресовЭП Цикл
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = АдресЭП;
	КонецЦикла;
	
	ТекстПисьма = Письмо.Тексты.Добавить();
	ТекстПисьма.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;
	ТекстПисьма.Текст = ТекстСообщения;
	
	Почта.Послать(Письмо);
	Почта.Отключиться();
	
КонецПроцедуры
