/////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ПриОткрытии" формы.
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	АдресХранилищаСКД = ПоместитьВоВременноеХранилище(ОтчетОбъект.СхемаКомпоновкиДанных, Новый УникальныйИдентификатор);
	
КонецПроцедуры // ПриСозданииНаСервере()

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	//
	Если Найти(ПредставлениеТекущегоВарианта, "Дата / Склад / Номенклатура") = 1 Тогда
		//Сообщить("Данный вариант расшифровки находится на доработке!", СтатусСообщения.Важное);
		//Возврат;
		ТабДок = РасшифроватьСуммуОтчетаЗаДень(Расшифровка);	
	ИначеЕсли Найти(ПредставлениеТекущегоВарианта, "Склад / Номенклатура") = 1 Тогда
		ТабДок = РасшифроватьСуммуОтчетаЗаПериод(Расшифровка);
	//ИначеЕсли ПредставлениеТекущегоВарианта = "По дате" Тогда
	//	ТабДок = Расшифровать_ПоДате(Расшифровка);
	//ИначеЕсли ПредставлениеТекущегоВарианта = "По комплектовщику и номенклатуре" Тогда
	//	ТабДок = Расшифровать_ПоКомплектовщикуИНоменклатуре(Расшифровка);
	//ИначеЕсли ПредставлениеТекущегоВарианта = "По комплетовщику" Тогда
	//	ТабДок = Расшифровать_ПоКомплектовщику(Расшифровка);
	//ИначеЕсли ПредставлениеТекущегоВарианта = "По складу" Тогда
	//	ТабДок = Расшифровать_ПоСкладу(Расшифровка);
	ИначеЕсли ПредставлениеТекущегоВарианта = "ТТ / Номенклатура / Сумма" Тогда
		ТабДок = Расшифровать_ПоТТ(Расшифровка);
	Иначе
		Сообщить("Необходимо выбрать вариант отчета!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.Показать();

КонецПроцедуры // РезультатОбработкаРасшифровки()

&НаСервере
Функция РасшифроватьСуммуОтчетаЗаПериод(Расшифровка)
	
	Данные = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	//СтатьяДР_Код = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[1].Значение);
	//СтатьяДР_Наименование = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение);
	
	ПараметрПериод = Данные.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПериодОтчета"));
	
	НачалоПериода = ПараметрПериод.Значение.ДатаНачала;
	КонецПериода  = ПараметрПериод.Значение.ДатаОкончания;

	ПоляРасшифровки = ТиповыеОтчеты.ПолучитьМассивПолейРасшифровки(Расшифровка, Данные);
	
	Для Каждого ЭлементРасшифровка Из ПоляРасшифровки Цикл
		Если ТипЗнч(ЭлементРасшифровка) = Тип("ЗначениеПоляРасшифровкиКомпоновкиДанных") Тогда
			Если НРег(ЭлементРасшифровка.Поле) = "номенклатура" Тогда
				НоменклатураСсылка = ЭлементРасшифровка.Значение;
			ИначеЕсли НРег(ЭлементРасшифровка.Поле) = "видданных" Тогда
				ВидДанных = ЭлементРасшифровка.Значение;
			ИначеЕсли НРег(ЭлементРасшифровка.Поле) = "склад" Тогда
				СкладСсылка = ЭлементРасшифровка.Значение;	
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
	
	//НоменклатураСсылка = Данные.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	Если НЕ ТипЗнч(НоменклатураСсылка) = Тип("СправочникСсылка.Номенклатура") Тогда
		Возврат Новый ТабличныйДокумент;	
	КонецЕсли;
	//ВидДанных = Данные.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;
	//СкладСсылка = Данные.Элементы[Данные.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	//ДатаРасшифровки = Данные.Элементы[Данные.Элементы[Данные.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	ВыбранноеЗначение =  Данные.Элементы[Расшифровка].ПолучитьПоля()[0].Значение;
	
	Если ВидДанных = "Инвентаризация" Тогда
		Запрос = Новый Запрос;
		//Запрос.Текст = "ВЫБРАТЬ
		//			   |	НАЧАЛОПЕРИОДА(ТоварыНаСкладахОстаткиИОбороты.Регистратор.Дата, ДЕНЬ) КАК Дата,
		//			   |	ТоварыНаСкладахОстаткиИОбороты.Регистратор КАК Документ
		//			   |ИЗ
		//			   |	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Авто, , ) КАК ТоварыНаСкладахОстаткиИОбороты
		//			   |ГДЕ
		//			   |	ТоварыНаСкладахОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИнвентаризацияСклад
		//			   |	И ТоварыНаСкладахОстаткиИОбороты.Склад = &Склад
		//			   |	И ТоварыНаСкладахОстаткиИОбороты.Номенклатура = &Номенклатура
		//			   |	И НАЧАЛОПЕРИОДА(ТоварыНаСкладахОстаткиИОбороты.Регистратор.Дата, ДЕНЬ) = &ДатаРасшифровки
		//			   |
		//			   |СГРУППИРОВАТЬ ПО
		//			   |	ТоварыНаСкладахОстаткиИОбороты.Регистратор,
		//			   |	НАЧАЛОПЕРИОДА(ТоварыНаСкладахОстаткиИОбороты.Регистратор.Дата, ДЕНЬ)";		   
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТоварыНаСкладахОстаткиИОбороты.Склад,
		               |	ТоварыНаСкладахОстаткиИОбороты.Номенклатура,
		               |	НАЧАЛОПЕРИОДА(ТоварыНаСкладахОстаткиИОбороты.Регистратор.Дата, ДЕНЬ) КАК Дата,
		               |	ТоварыНаСкладахОстаткиИОбороты.КоличествоПриход,
		               |	ТоварыНаСкладахОстаткиИОбороты.КоличествоРасход,
		               |	ТоварыНаСкладахОстаткиИОбороты.Регистратор КАК Документ
		               |ПОМЕСТИТЬ ТабИнвентаризация
		               |ИЗ
		               |	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(
		               |			,
		               |			,
		               |			Авто,
		               |			,
		               |			Номенклатура = &Номенклатура
		               |				И Склад = &Склад) КАК ТоварыНаСкладахОстаткиИОбороты
		               |ГДЕ
		               |	ТоварыНаСкладахОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИнвентаризацияСклад
		               |	И ТоварыНаСкладахОстаткиИОбороты.Регистратор.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТоварыНаСкладах.Склад,
		               |	ТоварыНаСкладах.Номенклатура,
		               |	СУММА(ВЫБОР
		               |			КОГДА ТоварыНаСкладах.ВидДвижения = &Расход
		               |				ТОГДА ТоварыНаСкладах.Количество * -1
		               |			ИНАЧЕ ТоварыНаСкладах.Количество
		               |		КОНЕЦ) КАК Количество,
		               |	ТоварыНаСкладах.ВидДвижения,
		               |	НАЧАЛОПЕРИОДА(ТоварыНаСкладах.КорректировкаПоИнвентаризации.Дата, ДЕНЬ) КАК Дата,
		               |	ТоварыНаСкладах.Регистратор КАК Документ
		               |ПОМЕСТИТЬ ТабКорректировок
		               |ИЗ
		               |	РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
		               |ГДЕ
		               |	ТоварыНаСкладах.КорректировкаПоИнвентаризации <> ЗНАЧЕНИЕ(Документ.ИнвентаризацияСклад.ПустаяСсылка)
		               |	И ТоварыНаСкладах.КорректировкаПоИнвентаризации.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ТоварыНаСкладах.Склад,
		               |	ТоварыНаСкладах.Номенклатура,
		               |	ТоварыНаСкладах.ВидДвижения,
		               |	НАЧАЛОПЕРИОДА(ТоварыНаСкладах.КорректировкаПоИнвентаризации.Дата, ДЕНЬ),
		               |	ТоварыНаСкладах.Регистратор
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТабКорректировок.Склад,
		               |	ТабКорректировок.Номенклатура,
		               |	СУММА(ВЫБОР
		               |			КОГДА ТабКорректировок.Количество < 0
		               |				ТОГДА -ТабКорректировок.Количество
		               |			ИНАЧЕ 0
		               |		КОНЕЦ) КАК КНедостаче,
		               |	СУММА(ВЫБОР
		               |			КОГДА ТабКорректировок.Количество > 0
		               |				ТОГДА ТабКорректировок.Количество
		               |			ИНАЧЕ 0
		               |		КОНЕЦ) КАК КИзлишкам,
		               |	ТабКорректировок.Дата,
		               |	ТабКорректировок.Документ
		               |ПОМЕСТИТЬ ТаблКорректировкиПодготовленная
		               |ИЗ
		               |	ТабКорректировок КАК ТабКорректировок
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ТабКорректировок.Склад,
		               |	ТабКорректировок.Номенклатура,
		               |	ТабКорректировок.Дата,
		               |	ТабКорректировок.Документ
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТабИнвентаризация.Склад КАК Склад,
		               |	ТабИнвентаризация.Номенклатура КАК Номенклатура,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ТабИнвентаризация.КоличествоРасход, 0) > ЕСТЬNULL(ТабИнвентаризация.КоличествоПриход, 0)
		               |			ТОГДА ЕСТЬNULL(ТабИнвентаризация.КоличествоРасход, 0) - ЕСТЬNULL(ТабИнвентаризация.КоличествоПриход, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Недостача,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ТабИнвентаризация.КоличествоРасход, 0) < ЕСТЬNULL(ТабИнвентаризация.КоличествоПриход, 0)
		               |			ТОГДА ЕСТЬNULL(ТабИнвентаризация.КоличествоПриход, 0) - ЕСТЬNULL(ТабИнвентаризация.КоличествоРасход, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Излишки,
		               |	""Инвентаризация"" КАК ВидДанных,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ТабИнвентаризация.КоличествоРасход, 0) > ЕСТЬNULL(ТабИнвентаризация.КоличествоПриход, 0)
		               |			ТОГДА ЕСТЬNULL(ТабИнвентаризация.КоличествоРасход, 0) - ЕСТЬNULL(ТабИнвентаризация.КоличествоПриход, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ * ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0) КАК СуммаНедостачи,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ТабИнвентаризация.КоличествоРасход, 0) < ЕСТЬNULL(ТабИнвентаризация.КоличествоПриход, 0)
		               |			ТОГДА ЕСТЬNULL(ТабИнвентаризация.КоличествоПриход, 0) - ЕСТЬNULL(ТабИнвентаризация.КоличествоРасход, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ * ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0) КАК СуммаИзлишки,
		               |	ТабИнвентаризация.Склад.Владелец.ТипСтруктурнойЕдиницы КАК ТипСклада,
		               |	ТабИнвентаризация.Дата КАК Дата,
		               |	ТабИнвентаризация.Документ
		               |ПОМЕСТИТЬ ТабИтог
		               |ИЗ
		               |	ТабИнвентаризация КАК ТабИнвентаризация
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьТоваров.СрезПоследних(&КонецПериода, ) КАК СебестоимостьТоваровСрезПоследних
		               |		ПО ТабИнвентаризация.Номенклатура = СебестоимостьТоваровСрезПоследних.Номенклатура
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	ТаблКорректировкиПодготовленная.Склад,
		               |	ТаблКорректировкиПодготовленная.Номенклатура,
		               |	ТаблКорректировкиПодготовленная.КНедостаче,
		               |	ТаблКорректировкиПодготовленная.КИзлишкам,
		               |	""Инвентаризация"",
		               |	ТаблКорректировкиПодготовленная.КНедостаче * ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0),
		               |	ТаблКорректировкиПодготовленная.КИзлишкам * ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0),
		               |	ТаблКорректировкиПодготовленная.Склад.Владелец.ТипСтруктурнойЕдиницы,
		               |	ТаблКорректировкиПодготовленная.Дата,
		               |	ТаблКорректировкиПодготовленная.Документ
		               |ИЗ
		               |	ТаблКорректировкиПодготовленная КАК ТаблКорректировкиПодготовленная
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьТоваров.СрезПоследних(&КонецПериода, ) КАК СебестоимостьТоваровСрезПоследних
		               |		ПО ТаблКорректировкиПодготовленная.Номенклатура = СебестоимостьТоваровСрезПоследних.Номенклатура
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТабИтог.Склад,
		               |	ТабИтог.Номенклатура,
		               |	СУММА(ТабИтог.Недостача) КАК Недостача,
		               |	СУММА(ТабИтог.Излишки) КАК Излишки,
		               |	ТабИтог.ВидДанных,
		               |	СУММА(ТабИтог.СуммаНедостачи) КАК СуммаНедостачи,
		               |	СУММА(ТабИтог.СуммаИзлишки) КАК СуммаИзлишки,
		               |	ТабИтог.ТипСклада,
		               |	ТабИтог.Дата,
		               |	ТабИтог.Документ
		               |ИЗ
		               |	ТабИтог КАК ТабИтог
		               |ГДЕ
		               |	ТабИтог.Склад = &Склад
		               |	И ТабИтог.Номенклатура = &Номенклатура
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ТабИтог.Склад,
		               |	ТабИтог.Номенклатура,
		               |	ТабИтог.ВидДанных,
		               |	ТабИтог.ТипСклада,
		               |	ТабИтог.Дата,
		               |	ТабИтог.Документ";
		
		Запрос.УстановитьПараметр("ВидОперации", Перечисления.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку);			   
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));			   
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));			   
		//Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке);	
		Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка);
		Запрос.УстановитьПараметр("Склад", СкладСсылка);
		Запрос.УстановитьПараметр("Расход", ВидДвиженияНакопления.Расход);
		Запрос.УстановитьПараметр("Приход", ВидДвиженияНакопления.Приход);
		//Запрос.УстановитьПараметр("ДатаРасшифровки", ДатаРасшифровки);
		
		Выгрузка = Запрос.Выполнить().Выгрузить();       
				
		ТабДокумент = Новый ТабличныйДокумент;
		Макет = Отчеты.ОтчетПоПотерямСклада.ПолучитьМакет("РасшифровкаИнвентаризация");
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
		//
		ОбластьШапка.Параметры.Номенклатура = НоменклатураСсылка;
		ОбластьШапка.Параметры.Дата = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
		
		ТабДокумент.Вывести(ОбластьШапка);

		Для Каждого Строка Из Выгрузка Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Строка);
			ОбластьСтрока.Параметры.Склад = Строка.Склад;
			ОбластьСтрока.Параметры.Дата = Формат(Строка.Дата, "ДФ=dd.MM.yyyy");
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;	
		
	ИначеЕсли ВидДанных = "Отгрузка в ТТ" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	РасходныйОрдерСкладТовары.Номенклатура КАК Номенклатура,
		               |	МАКСИМУМ(РасходныйОрдерСкладТовары.Ссылка.Склад) КАК Склад,
		               |	РасходныйОрдерСкладТовары.Ссылка.Получатель КАК ТТ,
		               |	НАЧАЛОПЕРИОДА(ВЫБОР
		               |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ, ДЕНЬ) КАК Дата
		               |ПОМЕСТИТЬ ТЗ_СкладыИзРасходников
		               |ИЗ
		               |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		               |ГДЕ
		               |	ВЫБОР
		               |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ МЕЖДУ ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, -5) И &КонецПериода
		               |	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		               |	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		               |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
		               |	И РасходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	РасходныйОрдерСкладТовары.Номенклатура,
		               |	РасходныйОрдерСкладТовары.Ссылка.Получатель,
		               |	НАЧАЛОПЕРИОДА(ВЫБОР
		               |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ, ДЕНЬ)
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	ПриходныйОрдерСкладТовары.Номенклатура,
		               |	МАКСИМУМ(ПриходныйОрдерСкладТовары.Ссылка.Склад),
		               |	ЕСТЬNULL(ПриходныйОрдерСкладТовары.Ссылка.Поставщик, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)),
		               |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ)
		               |ИЗ
		               |	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		               |ГДЕ
		               |	ПриходныйОрдерСкладТовары.Ссылка.Проведен
		               |	И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ИзТорговойТочки)
		               |	И ПриходныйОрдерСкладТовары.Ссылка.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, -5) И &КонецПериода
		               |	И ПриходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		               |	И ЛОЖЬ
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ПриходныйОрдерСкладТовары.Номенклатура,
		               |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ),
		               |	ЕСТЬNULL(ПриходныйОрдерСкладТовары.Ссылка.Поставщик, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_СкладыИзРасходников.Номенклатура,
		               |	ТЗ_СкладыИзРасходников.Склад,
		               |	ТЗ_СкладыИзРасходников.ТТ,
		               |	ТЗ_СкладыИзРасходников.Дата
		               |ПОМЕСТИТЬ ТЗ_СкладыСвернутые
		               |ИЗ
		               |	ТЗ_СкладыИзРасходников КАК ТЗ_СкладыИзРасходников
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ТЗ_СкладыИзРасходников.Номенклатура,
		               |	ТЗ_СкладыИзРасходников.ТТ,
		               |	ТЗ_СкладыИзРасходников.Дата,
		               |	ТЗ_СкладыИзРасходников.Склад
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.СтруктурнаяЕдиница КАК ТорговаяТочка,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот КАК Количество,
		               |	НАЧАЛОПЕРИОДА(ДвиженияТоваровПоЛистамУчетаОбороты.Период, ДЕНЬ) КАК День
		               |ПОМЕСТИТЬ ВТ_Полученные
		               |ИЗ
		               |	РегистрНакопления.ДвиженияТоваровПоЛистамУчета.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			День,
		               |			ВидДвиженияТовара = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.Поступление)
		               |				И НЕ Номенклатура В
		               |						(ВЫБРАТЬ
		               |							Номенклатура.Ссылка
		               |						ИЗ
		               |							Справочник.Номенклатура КАК Номенклатура
		               |						ГДЕ
		               |							Номенклатура.СлужебныйТовар = ИСТИНА)
		               |				И Номенклатура = &Номенклатура) КАК ДвиженияТоваровПоЛистамУчетаОбороты
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ_Полученные.ТорговаяТочка,
		               |	ВТ_Полученные.Номенклатура,
		               |	СУММА(ВТ_Полученные.Количество) КАК Количество,
		               |	ВТ_Полученные.День
		               |ПОМЕСТИТЬ ТЗ_ПолученныеСвернутые
		               |ИЗ
		               |	ВТ_Полученные КАК ВТ_Полученные
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВТ_Полученные.ТорговаяТочка,
		               |	ВТ_Полученные.Номенклатура,
		               |	ВТ_Полученные.День
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВЗ_Запрос.Номенклатура КАК Номенклатура,
		               |	СУММА(ВЗ_Запрос.Количество) КАК Количество,
		               |	ВЗ_Запрос.ТорговаяТочка КАК ТорговаяТочка,
		               |	ВЗ_Запрос.День
		               |ПОМЕСТИТЬ ВТ_Отправленные
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		РасходныйОрдерСкладТовары.Номенклатура КАК Номенклатура,
		               |		РасходныйОрдерСкладТовары.Количество КАК Количество,
		               |		РасходныйОрдерСкладТовары.Ссылка.Получатель КАК ТорговаяТочка,
		               |		НАЧАЛОПЕРИОДА(ВЫБОР
		               |				КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |					ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |				ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |			КОНЕЦ, ДЕНЬ) КАК День
		               |	ИЗ
		               |		Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		               |	ГДЕ
		               |		ВЫБОР
		               |				КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |					ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |				ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |			КОНЕЦ МЕЖДУ &НачалоПериода И &КонецПериода
		               |		И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		               |		И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		               |		И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
		               |		И РасходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		               |	
		               |	ОБЪЕДИНИТЬ ВСЕ
		               |	
		               |	ВЫБРАТЬ
		               |		ПриходныйОрдерСкладТовары.Номенклатура,
		               |		ПриходныйОрдерСкладТовары.Количество * -1,
		               |		ПриходныйОрдерСкладТовары.Ссылка.Поставщик,
		               |		НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ)
		               |	ИЗ
		               |		Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		               |	ГДЕ
		               |		ПриходныйОрдерСкладТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		               |		И ПриходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		               |		И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ИзТорговойТочки)
		               |		И ПриходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		               |		И ЛОЖЬ) КАК ВЗ_Запрос
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВЗ_Запрос.Номенклатура,
		               |	ВЗ_Запрос.ТорговаяТочка,
		               |	ВЗ_Запрос.День
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	ТорговаяТочка,
		               |	Номенклатура
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЕСТЬNULL(ВТ_Отправленные.ТорговаяТочка, ТЗ_ПолученныеСвернутые.ТорговаяТочка) КАК ТорговаяТочка,
		               |	ЕСТЬNULL(ВТ_Отправленные.Номенклатура, ТЗ_ПолученныеСвернутые.Номенклатура) КАК Номенклатура,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ВТ_Отправленные.Количество, 0) > ЕСТЬNULL(ТЗ_ПолученныеСвернутые.Количество, 0)
		               |			ТОГДА ЕСТЬNULL(ВТ_Отправленные.Количество, 0) - ЕСТЬNULL(ТЗ_ПолученныеСвернутые.Количество, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Недостача,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ВТ_Отправленные.Количество, 0) < ЕСТЬNULL(ТЗ_ПолученныеСвернутые.Количество, 0)
		               |			ТОГДА ЕСТЬNULL(ТЗ_ПолученныеСвернутые.Количество, 0) - ЕСТЬNULL(ВТ_Отправленные.Количество, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Излишки,
		               |	ЕСТЬNULL(ВТ_Отправленные.День, ТЗ_ПолученныеСвернутые.День) КАК Дата
		               |ПОМЕСТИТЬ ТЗ_ДанныеБезСумм
		               |ИЗ
		               |	ВТ_Отправленные КАК ВТ_Отправленные
		               |		ПОЛНОЕ СОЕДИНЕНИЕ ТЗ_ПолученныеСвернутые КАК ТЗ_ПолученныеСвернутые
		               |		ПО ВТ_Отправленные.ТорговаяТочка = ТЗ_ПолученныеСвернутые.ТорговаяТочка
		               |			И ВТ_Отправленные.День = ТЗ_ПолученныеСвернутые.День
		               |			И ВТ_Отправленные.Номенклатура = ТЗ_ПолученныеСвернутые.Номенклатура
		               |ГДЕ
		               |	ЕСТЬNULL(ВТ_Отправленные.Количество, 0) - ЕСТЬNULL(ТЗ_ПолученныеСвернутые.Количество, 0) <> 0
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_ДанныеБезСумм.ТорговаяТочка КАК ТТ,
		               |	ТЗ_ДанныеБезСумм.Номенклатура,
		               |	ТЗ_ДанныеБезСумм.Недостача,
		               |	ТЗ_ДанныеБезСумм.Излишки,
		               |	ТЗ_ДанныеБезСумм.Недостача КАК СуммаНедостачи,
		               |	ТЗ_ДанныеБезСумм.Излишки КАК СуммаИзлишки,
		               |	ТЗ_ДанныеБезСумм.Дата,
		               |	МАКСИМУМ(ТЗ_СкладыСвернутые.Дата) КАК ДатаПредыдущая
		               |ПОМЕСТИТЬ ТЗ_ДанныеБезСуммСПредыдущейДатой
		               |ИЗ
		               |	ТЗ_ДанныеБезСумм КАК ТЗ_ДанныеБезСумм
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_СкладыСвернутые КАК ТЗ_СкладыСвернутые
		               |		ПО ТЗ_ДанныеБезСумм.ТорговаяТочка = ТЗ_СкладыСвернутые.ТТ
		               |			И ТЗ_ДанныеБезСумм.Номенклатура = ТЗ_СкладыСвернутые.Номенклатура
		               |			И ТЗ_ДанныеБезСумм.Дата >= ТЗ_СкладыСвернутые.Дата
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ТЗ_ДанныеБезСумм.ТорговаяТочка,
		               |	ТЗ_ДанныеБезСумм.Номенклатура,
		               |	ТЗ_ДанныеБезСумм.Дата,
		               |	ТЗ_ДанныеБезСумм.Недостача,
		               |	ТЗ_ДанныеБезСумм.Излишки,
		               |	ТЗ_ДанныеБезСумм.Недостача,
		               |	ТЗ_ДанныеБезСумм.Излишки
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.ТТ,
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.Номенклатура,
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.Недостача,
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.Излишки,
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.СуммаНедостачи,
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.СуммаИзлишки,
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.Дата,
		               |	ЕСТЬNULL(ТЗ_СкладыСвернутые.Склад, ""!!!Склад неопределен"") КАК Склад
		               |ПОМЕСТИТЬ ТЗ_ДанныеБезСуммСоСкладом
		               |ИЗ
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой КАК ТЗ_ДанныеБезСуммСПредыдущейДатой
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_СкладыСвернутые КАК ТЗ_СкладыСвернутые
		               |		ПО ТЗ_ДанныеБезСуммСПредыдущейДатой.ТТ = ТЗ_СкладыСвернутые.ТТ
		               |			И ТЗ_ДанныеБезСуммСПредыдущейДатой.Номенклатура = ТЗ_СкладыСвернутые.Номенклатура
		               |			И ТЗ_ДанныеБезСуммСПредыдущейДатой.ДатаПредыдущая = ТЗ_СкладыСвернутые.Дата
		               |;


						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	ВЫРАЗИТЬ(РасходныйОрдерСкладТовары.Получатель КАК Справочник.СтруктурныеЕдиницы) КАК ТорговаяТочка,
						|	ВЫРАЗИТЬ(РасходныйОрдерСкладТовары.Получатель КАК Справочник.СтруктурныеЕдиницы).ТипРозничнойТочки КАК ТипРозничнойТочки,
						|	МАКСИМУМ(ВЫБОР
						|			КОГДА РасходныйОрдерСкладТовары.ПриемкаВМагазинеБезПересчета < 0
						|				ТОГДА -РасходныйОрдерСкладТовары.ПриемкаВМагазинеБезПересчета
						|			ИНАЧЕ РасходныйОрдерСкладТовары.ПриемкаВМагазинеБезПересчета
						|		КОНЕЦ) КАК ПриемкаВМагазинеБезПересчета,
						|	РасходныйОрдерСкладТовары.ДатаРаспределения,
						|	МАКСИМУМ(ВЫРАЗИТЬ(РасходныйОрдерСкладТовары.Получатель КАК Справочник.СтруктурныеЕдиницы).ПриемкаТовараБезПересчета) КАК ПриемкаТовараБезПересчета
						|ПОМЕСТИТЬ втТипыМагазинов
						|ИЗ
						|	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСкладТовары
						|ГДЕ
						|	ВЫБОР
						|			КОГДА РасходныйОрдерСкладТовары.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
						|				ТОГДА РасходныйОрдерСкладТовары.ДатаРаспределения
						|			ИНАЧЕ РасходныйОрдерСкладТовары.Дата
						|		КОНЕЦ МЕЖДУ ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, 0) И &КонецПериода
						|	И РасходныйОрдерСкладТовары.Проведен = ИСТИНА
						|	И РасходныйОрдерСкладТовары.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
						|	И РасходныйОрдерСкладТовары.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)

						|СГРУППИРОВАТЬ ПО
						|	ВЫРАЗИТЬ(РасходныйОрдерСкладТовары.Получатель КАК Справочник.СтруктурныеЕдиницы),
						|	ВЫРАЗИТЬ(РасходныйОрдерСкладТовары.Получатель КАК Справочник.СтруктурныеЕдиницы).ТипРозничнойТочки,
						|	РасходныйОрдерСкладТовары.ДатаРаспределения
						|;

						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	втТипыМагазинов.ТорговаяТочка,
						|	втТипыМагазинов.ДатаРаспределения
						|ПОМЕСТИТЬ втМагазиныОтбор
						|ИЗ
						|	втТипыМагазинов КАК втТипыМагазинов
						|ГДЕ
						|	ВЫБОР
						|			КОГДА &ОтборПоТипуМагазина = ""Магазины с пересчетом""
						|				ТОГДА втТипыМагазинов.ПриемкаТовараБезПересчета = ЛОЖЬ
						|			КОГДА &ОтборПоТипуМагазина = ""Магазины без пересчета (с контрольным пересчетом в магазине)""
						|				ТОГДА втТипыМагазинов.ПриемкаТовараБезПересчета = ИСТИНА
						|						И втТипыМагазинов.ПриемкаВМагазинеБезПересчета = 2
						|			КОГДА &ОтборПоТипуМагазина = ""Магазины без пересчета""
						|				ТОГДА втТипыМагазинов.ПриемкаТовараБезПересчета = ИСТИНА
						|						И втТипыМагазинов.ПриемкаВМагазинеБезПересчета <> 2 иначе истина
						|		КОНЕЦ
						|;
					   
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_ДанныеБезСуммСоСкладом.ТТ,
		               |	ТЗ_ДанныеБезСуммСоСкладом.Номенклатура,
		               |	ТЗ_ДанныеБезСуммСоСкладом.Недостача,
		               |	ТЗ_ДанныеБезСуммСоСкладом.Излишки,
		               |	ТЗ_ДанныеБезСуммСоСкладом.СуммаНедостачи * ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0) КАК СуммаНедостачи,
		               |	ТЗ_ДанныеБезСуммСоСкладом.СуммаИзлишки * ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0) КАК СуммаИзлишки,
		               |	ТЗ_ДанныеБезСуммСоСкладом.Дата КАК Дата,
		               |	ВЫБОР
		               |		КОГДА ТЗ_ДанныеБезСуммСоСкладом.Склад = ""!!!Склад неопределен""
		               |			ТОГДА ЕСТЬNULL(СкладыНоменклатурыИТорговыхТочекСрезПоследних.Склад, ""!!!Склад неопределен"")
		               |		ИНАЧЕ ТЗ_ДанныеБезСуммСоСкладом.Склад
		               |	КОНЕЦ КАК Склад,
		               |	""Отгрузка в ТТ"" КАК ВидДанных,
		               |	ВЫБОР
		               |		КОГДА ТЗ_ДанныеБезСуммСоСкладом.Склад = ""!!!Склад неопределен""
		               |			ТОГДА &Тип
		               |		ИНАЧЕ ТЗ_ДанныеБезСуммСоСкладом.Склад.Владелец.ТипСтруктурнойЕдиницы
		               |	КОНЕЦ КАК ТипСклада
		               |ИЗ
		               |	ТЗ_ДанныеБезСуммСоСкладом КАК ТЗ_ДанныеБезСуммСоСкладом
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьТоваров.СрезПоследних(&КонецПериода, ) КАК СебестоимостьТоваровСрезПоследних
		               |		ПО ТЗ_ДанныеБезСуммСоСкладом.Номенклатура = СебестоимостьТоваровСрезПоследних.Номенклатура
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СкладыНоменклатурыИТорговыхТочек.СрезПоследних(&КонецПериода, Номенклатура = &Номенклатура) КАК СкладыНоменклатурыИТорговыхТочекСрезПоследних
		               |		ПО ТЗ_ДанныеБезСуммСоСкладом.ТТ = СкладыНоменклатурыИТорговыхТочекСрезПоследних.ТорговаяТочка
		               |			И ТЗ_ДанныеБезСуммСоСкладом.Номенклатура = СкладыНоменклатурыИТорговыхТочекСрезПоследних.Номенклатура
						|			   		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМагазиныОтбор КАК втМагазиныОтбор
						|ПО ТЗ_ДанныеБезСуммСоСкладом.Дата = втМагазиныОтбор.ДатаРаспределения
						|И ТЗ_ДанныеБезСуммСоСкладом.ТТ = втМагазиныОтбор.ТорговаяТочка
						|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствСтруктурныхЕдиниц КАК ЗначенияСвойствСтруктурныхЕдиниц
						|		ПО ТЗ_ДанныеБезСуммСоСкладом.ТТ = ЗначенияСвойствСтруктурныхЕдиниц.СтруктурнаяЕдиница
						|			И (ЗначенияСвойствСтруктурныхЕдиниц.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваСтруктурныхЕдиниц.ВыездноеМероприятие))
						
		               |ГДЕ
		               |	ВЫБОР
		               |			КОГДА ТЗ_ДанныеБезСуммСоСкладом.Склад = ""!!!Склад неопределен""
		               |				ТОГДА ЕСТЬNULL(СкладыНоменклатурыИТорговыхТочекСрезПоследних.Склад, ""!!!Склад неопределен"")
		               |			ИНАЧЕ ТЗ_ДанныеБезСуммСоСкладом.Склад
		               |		КОНЕЦ = &Склад И
					   |	ВЫРАЗИТЬ(ТЗ_ДанныеБезСуммСоСкладом.ТТ КАК Справочник.СтруктурныеЕдиницы).ТипРозничнойТочки <> ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Вкусомат)
						|	И (ЗначенияСвойствСтруктурныхЕдиниц.Значение ЕСТЬ NULL
						|			ИЛИ НЕ ЗначенияСвойствСтруктурныхЕдиниц.Значение)

		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Дата";
        //АК БЕЛН 29.09.2017+
		ПараметрТипПересчета = Данные.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ОтборПоТипуМагазина")).Значение;
		Запрос.УстановитьПараметр("ОтборПоТипуМагазина", ПараметрТипПересчета);		
        //АК БЕЛН 29.09.2017-
		//Запрос.УстановитьПараметр("ТабПоступило", ТаблицаДанныхПоПоступлению);//Запрос.УстановитьПараметр("ДатаНач", НачалоДня(НачалоПериода));	
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));			   
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));	
		Запрос.УстановитьПараметр("ДатаНач", НачалоДня(НачалоПериода));			   
		Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));			   
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка);
		Запрос.УстановитьПараметр("Склад", СкладСсылка);
		//Запрос.УстановитьПараметр("ДатаРасшифровки", ДатаРасшифровки);
		Запрос.УстановитьПараметр("ВыбранноеЗначение", 10);
		Запрос.УстановитьПараметр("Тип", Перечисления.ТипыСтруктурныхЕдиниц.Склад);
		
		Выгрузка = Запрос.Выполнить().Выгрузить();    
		 Запрос.Текст = "ВЫБРАТЬ
		                |	РасходныйОрдерСкладТовары.Номенклатура КАК Номенклатура,
		                |	МАКСИМУМ(РасходныйОрдерСкладТовары.Ссылка.Склад) КАК Склад,
		                |	РасходныйОрдерСкладТовары.Ссылка.Получатель КАК ТТ,
		                |	НАЧАЛОПЕРИОДА(ВЫБОР
		                |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		                |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		                |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		                |		КОНЕЦ, ДЕНЬ) КАК Дата
		                |ПОМЕСТИТЬ ТЗ_СкладыИзРасходников
		                |ИЗ
		                |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		                |ГДЕ
		                |	ВЫБОР
		                |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		                |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		                |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		                |		КОНЕЦ МЕЖДУ ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, -5) И &КонецПериода
		                |	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		                |	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		                |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
		                |	И РасходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	РасходныйОрдерСкладТовары.Номенклатура,
		                |	РасходныйОрдерСкладТовары.Ссылка.Получатель,
		                |	НАЧАЛОПЕРИОДА(ВЫБОР
		                |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		                |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		                |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		                |		КОНЕЦ, ДЕНЬ)
		                |
		                |ОБЪЕДИНИТЬ ВСЕ
		                |
		                |ВЫБРАТЬ
		                |	ПриходныйОрдерСкладТовары.Номенклатура,
		                |	МАКСИМУМ(ПриходныйОрдерСкладТовары.Ссылка.Склад),
		                |	ЕСТЬNULL(ПриходныйОрдерСкладТовары.Ссылка.Поставщик, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)),
		                |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ)
		                |ИЗ
		                |	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		                |ГДЕ
		                |	ПриходныйОрдерСкладТовары.Ссылка.Проведен
		                |	И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ИзТорговойТочки)
		                |	И ПриходныйОрдерСкладТовары.Ссылка.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, -5) И &КонецПериода
		                |	И ПриходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ПриходныйОрдерСкладТовары.Номенклатура,
		                |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ),
		                |	ЕСТЬNULL(ПриходныйОрдерСкладТовары.Ссылка.Поставщик, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	РасходныйОрдерСкладТовары.Ссылка.Получатель КАК ТТ,
		                |	НАЧАЛОПЕРИОДА(ВЫБОР
		                |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		                |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		                |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		                |		КОНЕЦ, ДЕНЬ) КАК Дата,
		                |	РасходныйОрдерСкладТовары.Ссылка КАК Документ,
		                |	РасходныйОрдерСкладТовары.Номенклатура
		                |ПОМЕСТИТЬ ТЗ_ИсходныеДанные
		                |ИЗ
		                |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		                |ГДЕ
		                |	НАЧАЛОПЕРИОДА(ВЫБОР
		                |				КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		                |					ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		                |				ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		                |			КОНЕЦ, ДЕНЬ) В (&ПериодыДни)
		                |	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		                |	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		                |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
		                |	И РасходныйОрдерСкладТовары.Ссылка.Получатель В(&Получатели)
		                |	И РасходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	РасходныйОрдерСкладТовары.Ссылка,
		                |	РасходныйОрдерСкладТовары.Ссылка.Получатель,
		                |	НАЧАЛОПЕРИОДА(ВЫБОР
		                |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		                |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		                |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		                |		КОНЕЦ, ДЕНЬ),
		                |	РасходныйОрдерСкладТовары.Номенклатура
		                |
		                |ОБЪЕДИНИТЬ ВСЕ
		                |
		                |ВЫБРАТЬ
		                |	ПриходныйОрдерСкладТовары.Ссылка.Поставщик,
		                |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ),
		                |	ПриходныйОрдерСкладТовары.Ссылка,
		                |	ПриходныйОрдерСкладТовары.Номенклатура
		                |ИЗ
		                |	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		                |ГДЕ
		                |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ) В (&ПериодыДни)
		                |	И ПриходныйОрдерСкладТовары.Ссылка.Поставщик В(&Получатели)
		                |	И ПриходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		                |	И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ИзТорговойТочки)
		                |	И ПриходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ПриходныйОрдерСкладТовары.Ссылка.Поставщик,
		                |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ),
		                |	ПриходныйОрдерСкладТовары.Ссылка,
		                |	ПриходныйОрдерСкладТовары.Номенклатура
		                |
		                |ОБЪЕДИНИТЬ ВСЕ
		                |
		                |ВЫБРАТЬ
		                |	ДвиженияТоваровПоЛистамУчета.СтруктурнаяЕдиница,
		                |	НАЧАЛОПЕРИОДА(ДвиженияТоваровПоЛистамУчета.Период, ДЕНЬ),
		                |	ДвиженияТоваровПоЛистамУчета.Регистратор,
		                |	ДвиженияТоваровПоЛистамУчета.Номенклатура
		                |ИЗ
		                |	РегистрНакопления.ДвиженияТоваровПоЛистамУчета КАК ДвиженияТоваровПоЛистамУчета
		                |ГДЕ
		                |	ДвиженияТоваровПоЛистамУчета.Период В(&ПериодыДни)
		                |	И ДвиженияТоваровПоЛистамУчета.Номенклатура = &Номенклатура
		                |	И ДвиженияТоваровПоЛистамУчета.СтруктурнаяЕдиница В(&Получатели)
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ТЗ_СкладыИзРасходников.Дата КАК ДатаПредыдущая,
		                |	ТЗ_ИсходныеДанные.ТТ,
		                |	ТЗ_ИсходныеДанные.Дата КАК Дата,
		                |	ТЗ_ИсходныеДанные.Документ,
		                |	ТЗ_ИсходныеДанные.Номенклатура
		                |ПОМЕСТИТЬ ТЗ_ИсходныеДанныеПромежуточная
		                |ИЗ
		                |	ТЗ_ИсходныеДанные КАК ТЗ_ИсходныеДанные
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_СкладыИзРасходников КАК ТЗ_СкладыИзРасходников
		                |		ПО ТЗ_ИсходныеДанные.ТТ = ТЗ_СкладыИзРасходников.ТТ
		                |			И ТЗ_ИсходныеДанные.Дата >= ТЗ_СкладыИзРасходников.Дата
		                |			И ТЗ_ИсходныеДанные.Номенклатура >= ТЗ_СкладыИзРасходников.Номенклатура
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ТЗ_ИсходныеДанныеПромежуточная.ТТ,
		                |	ТЗ_ИсходныеДанныеПромежуточная.Дата КАК Дата,
		                |	ТЗ_ИсходныеДанныеПромежуточная.Документ,
		                |	ТЗ_ИсходныеДанныеПромежуточная.Номенклатура,
		                |	ВЫБОР
		                |		КОГДА ЕСТЬNULL(ТЗ_СкладыИзРасходников.Склад, ""!!!Склад неопределен"") = ""!!!Склад неопределен""
		                |			ТОГДА ЕСТЬNULL(СкладыНоменклатурыИТорговыхТочекСрезПоследних.Склад, ""!!!Склад неопределен"")
		                |		ИНАЧЕ ЕСТЬNULL(ТЗ_СкладыИзРасходников.Склад, ""!!!Склад неопределен"")
		                |	КОНЕЦ КАК Склад
		                |ИЗ
		                |	ТЗ_ИсходныеДанныеПромежуточная КАК ТЗ_ИсходныеДанныеПромежуточная
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_СкладыИзРасходников КАК ТЗ_СкладыИзРасходников
		                |		ПО ТЗ_ИсходныеДанныеПромежуточная.ДатаПредыдущая = ТЗ_СкладыИзРасходников.Дата
		                |			И ТЗ_ИсходныеДанныеПромежуточная.Номенклатура = ТЗ_СкладыИзРасходников.Номенклатура
		                |			И ТЗ_ИсходныеДанныеПромежуточная.ТТ = ТЗ_СкладыИзРасходников.ТТ
		                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СкладыНоменклатурыИТорговыхТочек.СрезПоследних(&КонецПериода, Номенклатура = &Номенклатура) КАК СкладыНоменклатурыИТорговыхТочекСрезПоследних
		                |		ПО ТЗ_ИсходныеДанныеПромежуточная.ТТ = СкладыНоменклатурыИТорговыхТочекСрезПоследних.ТорговаяТочка
		                |			И ТЗ_ИсходныеДанныеПромежуточная.Номенклатура = СкладыНоменклатурыИТорговыхТочекСрезПоследних.Номенклатура
						|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствСтруктурныхЕдиниц КАК ЗначенияСвойствСтруктурныхЕдиниц
						|		ПО ТЗ_ИсходныеДанныеПромежуточная.ТТ = ЗначенияСвойствСтруктурныхЕдиниц.СтруктурнаяЕдиница
						|			И (ЗначенияСвойствСтруктурныхЕдиниц.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваСтруктурныхЕдиниц.ВыездноеМероприятие))
		                |
						|ГДЕ ВЫРАЗИТЬ(ТЗ_ИсходныеДанныеПромежуточная.ТТ КАК Справочник.СтруктурныеЕдиницы).ТипРозничнойТочки <> ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Вкусомат)
						|	И (ЗначенияСвойствСтруктурныхЕдиниц.Значение ЕСТЬ NULL
						|			ИЛИ НЕ ЗначенияСвойствСтруктурныхЕдиниц.Значение)

		                |СГРУППИРОВАТЬ ПО
		                |	ТЗ_ИсходныеДанныеПромежуточная.ТТ,
		                |	ТЗ_ИсходныеДанныеПромежуточная.Дата,
		                |	ТЗ_ИсходныеДанныеПромежуточная.Документ,
		                |	ТЗ_ИсходныеДанныеПромежуточная.Номенклатура,
		                |	ВЫБОР
		                |		КОГДА ЕСТЬNULL(ТЗ_СкладыИзРасходников.Склад, ""!!!Склад неопределен"") = ""!!!Склад неопределен""
		                |			ТОГДА ЕСТЬNULL(СкладыНоменклатурыИТорговыхТочекСрезПоследних.Склад, ""!!!Склад неопределен"")
		                |		ИНАЧЕ ЕСТЬNULL(ТЗ_СкладыИзРасходников.Склад, ""!!!Склад неопределен"")
		                |	КОНЕЦ
		                |
		                |УПОРЯДОЧИТЬ ПО
		                |	Дата";
						
					
		Запрос.УстановитьПараметр("Получатели", Выгрузка.ВыгрузитьКолонку("ТТ"));
		Запрос.УстановитьПараметр("Склады", Выгрузка.ВыгрузитьКолонку("Склад"));
		МассивДаты = Выгрузка.ВыгрузитьКолонку("Дата");
		МаксДата = '00010101';
		МинДата = '39990101';
		Для Каждого ЭлементДата Из МассивДаты Цикл
			МаксДата = Макс(МаксДата, ЭлементДата);
			МинДата = Мин(МинДата, ЭлементДата);
		КонецЦикла;
		Запрос.УстановитьПараметр("ПериодыДни", МассивДаты);
		
		ВыгрузкаДокументов = Запрос.Выполнить().Выгрузить();
		
		ЗапросЛисты = Новый Запрос();
		ЗапросЛисты.УстановитьПараметр("ДатаНач", НачалоДня(МинДата));
		ЗапросЛисты.УстановитьПараметр("ДатаКон", КонецДня(МаксДата));
		ЗапросЛисты.Текст = "ВЫБРАТЬ
		                    |	ЛистУчета.Ссылка,
		                    |	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) КАК Дата,
		                    |	ЛистУчета.ТорговаяТочка
		                    |ИЗ
		                    |	Документ.ЛистУчета КАК ЛистУчета
		                    |ГДЕ
		                    |	ЛистУчета.Дата МЕЖДУ &ДатаНач И &ДатаКон";
							
		ТабЛУ = ЗапросЛисты.Выполнить().Выгрузить();
		
		ТабДокумент = Новый ТабличныйДокумент;
		Макет = Отчеты.ОтчетПоПотерямСклада.ПолучитьМакет("РасшифровкаОтгрузкаВТТ");
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьСтрокаДок = Макет.ПолучитьОбласть("СтрокаДок");
		ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
		//
		ОбластьШапка.Параметры.Номенклатура = НоменклатураСсылка;
		ОбластьШапка.Параметры.Дата = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
		
		ТабДокумент.Вывести(ОбластьШапка);

		Для Каждого Строка Из Выгрузка Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Строка);
			ОбластьСтрока.Параметры.Склад = Строка.Склад;
			ОбластьСтрока.Параметры.Дата = Формат(Строка.Дата, "ДФ=dd.MM.yyyy");
			//ОбластьСтрока.Параметры.Документ = "";
			ТабДокумент.Вывести(ОбластьСтрока);
			
			ОтборСтруктура = Новый Структура;
			ОтборСтруктура.Вставить("ТТ", Строка.ТТ);
			ОтборСтруктура.Вставить("Склад", Строка.Склад);
			ОтборСтруктура.Вставить("Дата", Строка.Дата);
			ОтборСтруктура.Вставить("Номенклатура", Строка.Номенклатура);

			//ОбластьСтрока.Параметры.Дата = "";	
			//ОбластьСтрока.Параметры.ТТ = "";	
			//ОбластьСтрока.Параметры.Документ = "";				
			//ОбластьСтрока.Параметры.Склад = "";	
			//ОбластьСтрока.Параметры.Недостача = "";	
			//ОбластьСтрока.Параметры.Излишки = "";	
			//ОбластьСтрока.Параметры.СуммаНедостачи = "";	
			//ОбластьСтрока.Параметры.СуммаИзлишки = "";
			
			НайденныеСтроки = ВыгрузкаДокументов.НайтиСтроки(ОтборСтруктура); 
			
			Если НайденныеСтроки.Количество() = 0 Тогда
				ОбластьСтрокаДок.Параметры.Документ = "Не определен";
				ТабДокумент.Вывести(ОбластьСтрокаДок);
			КонецЕсли;
			
			Для Каждого СтрокаДок Из НайденныеСтроки ЦИкл
				ОбластьСтрокаДок.Параметры.Документ = СтрокаДок.Документ;
				ТабДокумент.Вывести(ОбластьСтрокаДок);		
			КонецЦикла;
			
			СтрокиЛУ = ТабЛУ.НайтиСтроки(Новый Структура("Дата, ТорговаяТочка", НачалоДня(Строка.Дата), Строка.ТТ));
			Если СтрокиЛУ.Количество() > 0 Тогда
				ОбластьСтрокаЛУ = Макет.ПолучитьОбласть("СтрокаДокЛист");
				ОбластьСтрокаЛУ.Параметры.Документ = СтрокиЛУ[0].Ссылка;
				ТабДокумент.Вывести(ОбластьСтрокаЛУ);
			КонецЕсли;	
			
		КонецЦикла;
		
		ОбластьИтоги.Параметры.НедостачаИ = Выгрузка.Итог("Недостача");
		ОбластьИтоги.Параметры.ИзлишкиИ = Выгрузка.Итог("Излишки");	
		ОбластьИтоги.Параметры.СуммаНедостачиИ = Выгрузка.Итог("СуммаНедостачи");	
		ОбластьИтоги.Параметры.СуммаИзлишкиИ = Выгрузка.Итог("СуммаИзлишки");
		ТабДокумент.Вывести(ОбластьИтоги);
	ИначеЕсли ВидДанных = "Перемещение на склад" Тогда
		Запрос = Новый Запрос;
		//Запрос.Текст = "ВЫБРАТЬ
		//			   |	РасходныйОрдерСкладТовары.Ссылка КАК РасходныйОрдер,
		//			   |	НАЧАЛОПЕРИОДА(РасходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ) КАК Дата
		//			   |ПОМЕСТИТЬ ВремТабРО
		//			   |ИЗ
		//			   |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		//			   |ГДЕ
		//			   |	НАЧАЛОПЕРИОДА(РасходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ) = &Датарасшифровки
		//			   |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = &ВидОперацииРОПеремещение
		//			   |	И РасходныйОрдерСкладТовары.Ссылка.Проведен
		//			   |	И РасходныйОрдерСкладТовары.Ссылка.ПровереноОператором
		//			   |	И РасходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		//			   |	И РасходныйОрдерСкладТовары.Ссылка.Склад = &Склад
		//			   |;
		//			   |
		//			   |////////////////////////////////////////////////////////////////////////////////
		//			   |ВЫБРАТЬ
		//			   |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ) КАК Дата,
		//			   |	ПриходныйОрдерСкладТовары.Ссылка КАК ПриходныйОрдер
		//			   |ПОМЕСТИТЬ ВремТабПО
		//			   |ИЗ
		//			   |	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		//			   |ГДЕ
		//			   |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ) = &Датарасшифровки
		//			   |	И ПриходныйОрдерСкладТовары.Ссылка.Проведен
		//			   |	И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = &ВидОперацииПОПеремещение
		//			   |	И ПриходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		//			   |;
		//			   |
		//			   |////////////////////////////////////////////////////////////////////////////////
		//			   |ВЫБРАТЬ
		//			   |	ВремТабПО.ПриходныйОрдер,
		//			   |	ВремТабРО.РасходныйОрдер
		//			   |ИЗ
		//			   |	ВремТабРО КАК ВремТабРО
		//			   |		ЛЕВОЕ СОЕДИНЕНИЕ ВремТабПО КАК ВремТабПО
		//			   |		ПО ВремТабРО.РасходныйОрдер = ВремТабПО.ПриходныйОрдер.Основание
		//			   |
		//			   |СГРУППИРОВАТЬ ПО
		//			   |	ВремТабПО.ПриходныйОрдер,
		//			   |	ВремТабРО.РасходныйОрдер";		   
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	РасходныйОрдерСкладТовары.Номенклатура КАК Номенклатура,
		               |	СУММА(РасходныйОрдерСкладТовары.Количество) КАК Количество,
		               |	РасходныйОрдерСкладТовары.Ссылка.Склад КАК Склад,
		               |	НАЧАЛОПЕРИОДА(ВЫБОР
		               |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ, ДЕНЬ) КАК Дата,
		               |	РасходныйОрдерСкладТовары.Ссылка
		               |ПОМЕСТИТЬ ВТ_Расход
		               |ИЗ
		               |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		               |ГДЕ
		               |	ВЫБОР
		               |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ МЕЖДУ &НачалоПериода И &КонецПериода
		               |	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		               |	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		               |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.Перемещение)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	РасходныйОрдерСкладТовары.Номенклатура,
		               |	РасходныйОрдерСкладТовары.Ссылка.Склад,
		               |	НАЧАЛОПЕРИОДА(ВЫБОР
		               |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ, ДЕНЬ),
		               |	РасходныйОрдерСкладТовары.Ссылка
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	Номенклатура
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ПриходныйОрдерСкладТовары.Номенклатура КАК Номенклатура,
		               |	СУММА(ПриходныйОрдерСкладТовары.Количество) КАК Количество,
		               |	ПриходныйОрдерСкладТовары.Ссылка.Склад КАК Склад,
		               |	НАЧАЛОПЕРИОДА(ВЫБОР
		               |			КОГДА ПриходныйОрдерСкладТовары.Ссылка.Дата < ДАТАВРЕМЯ(2014, 3, 1)
		               |				ТОГДА ПриходныйОрдерСкладТовары.Ссылка.Дата
		               |			КОГДА ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА ВЫБОР
		               |						КОГДА ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика < ДАТАВРЕМЯ(2014, 3, 1)
		               |								И ПриходныйОрдерСкладТовары.Ссылка.Дата >= ДАТАВРЕМЯ(2014, 3, 1)
		               |							ТОГДА ДАТАВРЕМЯ(2014, 3, 1)
		               |						ИНАЧЕ ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика
		               |					КОНЕЦ
		               |			ИНАЧЕ ПриходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ, ДЕНЬ) КАК Дата,
		               |	ПриходныйОрдерСкладТовары.Ссылка.Основание,
		               |	ПриходныйОрдерСкладТовары.Ссылка
		               |ПОМЕСТИТЬ ВТ_Приход
		               |ИЗ
		               |	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		               |ГДЕ
		               |	ВЫБОР
		               |			КОГДА ПриходныйОрдерСкладТовары.Ссылка.Дата < ДАТАВРЕМЯ(2014, 3, 1)
		               |				ТОГДА ПриходныйОрдерСкладТовары.Ссылка.Дата
		               |			КОГДА ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА ВЫБОР
		               |						КОГДА ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика < ДАТАВРЕМЯ(2014, 3, 1)
		               |								И ПриходныйОрдерСкладТовары.Ссылка.Дата >= ДАТАВРЕМЯ(2014, 3, 1)
		               |							ТОГДА ДАТАВРЕМЯ(2014, 3, 1)
		               |						ИНАЧЕ ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика
		               |					КОНЕЦ
		               |			ИНАЧЕ ПриходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ МЕЖДУ &НачалоПериода И &КонецПериода
		               |	И ПриходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		               |	И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.Перемещение)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ПриходныйОрдерСкладТовары.Номенклатура,
		               |	ПриходныйОрдерСкладТовары.Ссылка.Склад,
		               |	ПриходныйОрдерСкладТовары.Ссылка.Основание,
		               |	ПриходныйОрдерСкладТовары.Ссылка,
		               |	НАЧАЛОПЕРИОДА(ВЫБОР
		               |			КОГДА ПриходныйОрдерСкладТовары.Ссылка.Дата < ДАТАВРЕМЯ(2014, 3, 1)
		               |				ТОГДА ПриходныйОрдерСкладТовары.Ссылка.Дата
		               |			КОГДА ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА ВЫБОР
		               |						КОГДА ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика < ДАТАВРЕМЯ(2014, 3, 1)
		               |								И ПриходныйОрдерСкладТовары.Ссылка.Дата >= ДАТАВРЕМЯ(2014, 3, 1)
		               |							ТОГДА ДАТАВРЕМЯ(2014, 3, 1)
		               |						ИНАЧЕ ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика
		               |					КОНЕЦ
		               |			ИНАЧЕ ПриходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ, ДЕНЬ)
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	Номенклатура
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	РасходныйОрдерСкладТовары.Номенклатура КАК Номенклатура,
		               |	СУММА(РасходныйОрдерСкладТовары.Количество) КАК Количество,
		               |	РасходныйОрдерСкладТовары.Ссылка.Склад.Владелец КАК Склад
		               |ПОМЕСТИТЬ ВТ_РасходДоп
		               |ИЗ
		               |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		               |ГДЕ
		               |	ВЫБОР
		               |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ МЕЖДУ &НачалоПериода И &КонецПериода
		               |	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		               |	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		               |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.Перемещение)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	РасходныйОрдерСкладТовары.Номенклатура,
		               |	РасходныйОрдерСкладТовары.Ссылка.Склад.Владелец
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	Номенклатура
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ПриходныйОрдерСкладТовары.Номенклатура КАК Номенклатура,
		               |	СУММА(ПриходныйОрдерСкладТовары.Количество) КАК Количество,
		               |	ПриходныйОрдерСкладТовары.Ссылка.Склад.Владелец КАК Склад
		               |ПОМЕСТИТЬ ВТ_ПриходДоп
		               |ИЗ
		               |	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		               |ГДЕ
		               |	ВЫБОР
		               |			КОГДА ПриходныйОрдерСкладТовары.Ссылка.Дата < ДАТАВРЕМЯ(2014, 3, 1)
		               |				ТОГДА ПриходныйОрдерСкладТовары.Ссылка.Дата
		               |			КОГДА ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА ВЫБОР
		               |						КОГДА ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика < ДАТАВРЕМЯ(2014, 3, 1)
		               |								И ПриходныйОрдерСкладТовары.Ссылка.Дата >= ДАТАВРЕМЯ(2014, 3, 1)
		               |							ТОГДА ДАТАВРЕМЯ(2014, 3, 1)
		               |						ИНАЧЕ ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика
		               |					КОНЕЦ
		               |			ИНАЧЕ ПриходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ МЕЖДУ &НачалоПериода И &КонецПериода
		               |	И ПриходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		               |	И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.Перемещение)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ПриходныйОрдерСкладТовары.Номенклатура,
		               |	ПриходныйОрдерСкладТовары.Ссылка.Склад.Владелец
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	Номенклатура
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЕСТЬNULL(ВТ_РасходДоп.Номенклатура, ВТ_ПриходДоп.Номенклатура) КАК Номенклатура
		               |ПОМЕСТИТЬ ТабОграничениеПоНоменклатуре
		               |ИЗ
		               |	ВТ_РасходДоп КАК ВТ_РасходДоп
		               |		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ПриходДоп КАК ВТ_ПриходДоп
		               |		ПО ВТ_РасходДоп.Номенклатура = ВТ_ПриходДоп.Номенклатура
		               |			И ВТ_РасходДоп.Склад <> ВТ_ПриходДоп.Склад
		               |ГДЕ
		               |	ЕСТЬNULL(ВТ_РасходДоп.Количество, 0) - ЕСТЬNULL(ВТ_ПриходДоп.Количество, 0) <> 0
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ЕСТЬNULL(ВТ_РасходДоп.Номенклатура, ВТ_ПриходДоп.Номенклатура)
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЕСТЬNULL(ВТ_Расход.Номенклатура, ВТ_Приход.Номенклатура) КАК Номенклатура,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ВТ_Расход.Количество, 0) > ЕСТЬNULL(ВТ_Приход.Количество, 0)
		               |			ТОГДА ЕСТЬNULL(ВТ_Расход.Количество, 0) - ЕСТЬNULL(ВТ_Приход.Количество, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Недостача,
		               |	ЕСТЬNULL(ВТ_Расход.Склад, ВТ_Приход.Склад) КАК Склад,
		               |	ЕСТЬNULL(ВТ_Расход.Дата, ВТ_Приход.Дата) КАК Дата,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ВТ_Расход.Количество, 0) < ЕСТЬNULL(ВТ_Приход.Количество, 0)
		               |			ТОГДА ЕСТЬNULL(ВТ_Приход.Количество, 0) - ЕСТЬNULL(ВТ_Расход.Количество, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Излишки,
		               |	ЕСТЬNULL(ВТ_Расход.Ссылка, ВТ_Приход.Ссылка) КАК Расходник
		               |ПОМЕСТИТЬ ТабБезСумм
		               |ИЗ
		               |	ВТ_Расход КАК ВТ_Расход
		               |		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Приход КАК ВТ_Приход
		               |		ПО ВТ_Расход.Номенклатура = ВТ_Приход.Номенклатура
		               |			И ВТ_Расход.Ссылка = ВТ_Приход.Основание
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТабБезСумм.Склад.Владелец.ТипСтруктурнойЕдиницы КАК ТипСклада,
		               |	ТабБезСумм.Номенклатура,
		               |	ТабБезСумм.Склад,
		               |	ТабБезСумм.Дата,
		               |	ТабБезСумм.Излишки,
		               |	ТабБезСумм.Недостача,
		               |	ТабБезСумм.Излишки * СебестоимостьТоваровСрезПоследних.Себестоимость КАК СуммаИзлишки,
		               |	ТабБезСумм.Недостача * СебестоимостьТоваровСрезПоследних.Себестоимость КАК СуммаНедостачи,
		               |	""Перемещение на склад"" КАК ВидДанных,
		               |	ТабБезСумм.Расходник
		               |ИЗ
		               |	ТабБезСумм КАК ТабБезСумм
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьТоваров.СрезПоследних(&КонецПериода, ) КАК СебестоимостьТоваровСрезПоследних
		               |		ПО ТабБезСумм.Номенклатура = СебестоимостьТоваровСрезПоследних.Номенклатура
		               |ГДЕ
		               |	ТабБезСумм.Номенклатура В
		               |			(ВЫБРАТЬ
		               |				ТабОграничениеПоНоменклатуре.Номенклатура
		               |			ИЗ
		               |				ТабОграничениеПоНоменклатуре КАК ТабОграничениеПоНоменклатуре)
		               |	И ТабБезСумм.Номенклатура = &Номенклатура
		               |	И ТабБезСумм.Склад = &Склад
		               |	И (ТабБезСумм.Излишки <> 0
		               |			ИЛИ ТабБезСумм.Недостача <> 0)";
		
		
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));			   
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));			   
		//Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке);	
		Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка);
		Запрос.УстановитьПараметр("Склад", СкладСсылка);
		//Запрос.УстановитьПараметр("ДатаРасшифровки", ДатаРасшифровки);
		
		Запрос.УстановитьПараметр("ВидОперацииПОПеремещение", Перечисления.ВидыОперацийПриходСкладскойУчет.Перемещение);			   
		Запрос.УстановитьПараметр("ВидОперацииРОПеремещение", Перечисления.ВидыОперацийРасходСкладскойУчет.Перемещение);			   
		
		
		Выгрузка = Запрос.Выполнить().Выгрузить();       
				
		ТабДокумент = Новый ТабличныйДокумент;
		Макет = Отчеты.ОтчетПоПотерямСклада.ПолучитьМакет("РасшифровкаПеремещениеНаСклад");
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
		//
		ОбластьШапка.Параметры.Номенклатура = НоменклатураСсылка;
		ОбластьШапка.Параметры.Дата = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
		
		ТабДокумент.Вывести(ОбластьШапка);

		Для Каждого Строка Из Выгрузка Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Строка);
			ОбластьСтрока.Параметры.Склад = Строка.Склад;
			ОбластьСтрока.Параметры.Дата = Формат(Строка.Дата, "ДФ=dd.MM.yyyy");
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
	ИначеЕсли ВидДанных = "Поступление от поставщика" Тогда
		Запрос = Новый Запрос;
		//Запрос.Текст = "ВЫБРАТЬ
		//			   |	ПоступлениеТоваровУслугПриходныеОрдера.Ссылка КАК Поступление,
		//			   |	ПриходныйОрдерСкладТовары.Ссылка КАК Приходник
		//			   |ПОМЕСТИТЬ ВремТабПриходныйОрдер
		//			   |ИЗ
		//			   |	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		//			   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.ПриходныеОрдера КАК ПоступлениеТоваровУслугПриходныеОрдера
		//			   |		ПО ПриходныйОрдерСкладТовары.Ссылка = ПоступлениеТоваровУслугПриходныеОрдера.ПриходныйОрдер
		//			   |ГДЕ
		//			   |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ) = &ДатаРасшифровки
		//			   |	И ПриходныйОрдерСкладТовары.Ссылка.Проведен
		//			   |	И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = &ВидОперацииПО
		//			   |	И ПриходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		//			   |	И ПриходныйОрдерСкладТовары.Ссылка.Склад = &Склад
		//			   |	И ПоступлениеТоваровУслугПриходныеОрдера.Ссылка.Проведен
		//			   |
		//			   |СГРУППИРОВАТЬ ПО
		//			   |	ПоступлениеТоваровУслугПриходныеОрдера.Ссылка,
		//			   |	ПриходныйОрдерСкладТовары.Ссылка
		//			   |;
		//			   |
		//			   |////////////////////////////////////////////////////////////////////////////////
		//			   |ВЫБРАТЬ
		//			   |	ВремТабПриходныйОрдер.Приходник КАК ПриходныйОрдер,
		//			   |	ПоступлениеТоваровУслугТовары.Ссылка КАК Поступление
		//			   |ИЗ
		//			   |	ВремТабПриходныйОрдер КАК ВремТабПриходныйОрдер
		//			   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
		//			   |		ПО ВремТабПриходныйОрдер.Поступление = ПоступлениеТоваровУслугТовары.Ссылка
		//			   |ГДЕ
		//			   |	ПоступлениеТоваровУслугТовары.Номенклатура = &Номенклатура
		//			   |
		//			   |СГРУППИРОВАТЬ ПО
		//			   |	ВремТабПриходныйОрдер.Приходник,
		//			   |	ПоступлениеТоваровУслугТовары.Ссылка";		   
		
			Запрос.Текст = "ВЫБРАТЬ
			               |	МАКСИМУМ(ЕСТЬNULL(ПриходныйОрдерСклад.Склад, ""!!!Склад неопределен"")) КАК Склад,
			               |	ПоступлениеТоваровУслугПриходныеОрдера.Ссылка КАК Поступление
			               |ПОМЕСТИТЬ ТаблицаСкладов
			               |ИЗ
			               |	Документ.ПоступлениеТоваровУслуг.ПриходныеОрдера КАК ПоступлениеТоваровУслугПриходныеОрдера
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
			               |		ПО ПоступлениеТоваровУслугПриходныеОрдера.ПриходныйОрдер = ПриходныйОрдерСклад.Ссылка
			               |ГДЕ
			               |	ПриходныйОрдерСклад.Ссылка В
			               |			(ВЫБРАТЬ
			               |				ПоступлениеТоваровУслугПриходныеОрдера.ПриходныйОрдер
			               |			ИЗ
			               |				Документ.ПоступлениеТоваровУслуг.ПриходныеОрдера КАК ПоступлениеТоваровУслугПриходныеОрдера
			               |			ГДЕ
			               |				ПоступлениеТоваровУслугПриходныеОрдера.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
			               |				И ПоступлениеТоваровУслугПриходныеОрдера.Ссылка.Проведен
			               |				И ПоступлениеТоваровУслугПриходныеОрдера.Ссылка.ВидОперации = &ВидОперацииПоступления)
			               |	И ПриходныйОрдерСклад.Проведен
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	ПоступлениеТоваровУслугПриходныеОрдера.Ссылка
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугТовары.Ссылка.Дата, ДЕНЬ) КАК Дата,
			               |	ЕСТЬNULL(ТаблицаСкладов.Склад, ""!!!Склад неопределен"") КАК Склад,
			               |	""Поступление от поставщика"" КАК ВидДанных,
			               |	ЕСТЬNULL(ФинансовыйОборотыДтКтИзлишки.КоличествоОборотДт, 0) КАК Излишки,
			               |	ЕСТЬNULL(ФинансовыйОборотыДтКтИзлишки.СуммаОборот, 0) КАК СуммаИзлишки,
			               |	ЕСТЬNULL(ФинансовыйОборотыДтКтНедостача.СуммаОборот, 0) КАК СуммаНедостачи,
			               |	ЕСТЬNULL(ФинансовыйОборотыДтКтНедостача.КоличествоОборотКт, 0) КАК Недостача,
			               |	ПоступлениеТоваровУслугТовары.Номенклатура,
			               |	ПоступлениеТоваровУслугТовары.Ссылка КАК Поступление,
			               |	ВЫБОР
			               |		КОГДА ЕСТЬNULL(ТаблицаСкладов.Склад, ""!!!Склад неопределен"") = ""!!!Склад неопределен""
			               |			ТОГДА &Тип
			               |		ИНАЧЕ ТаблицаСкладов.Склад.Владелец.ТипСтруктурнойЕдиницы
			               |	КОНЕЦ КАК ТипСклада
			               |ПОМЕСТИТЬ ВремТабПриходныйОрдер
			               |ИЗ
			               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ОборотыДтКт(&НачалоПериода, &КонецПериода, Авто, СчетДт = &Счет411, , СчетКт = &Счет441, , СубконтоДт3 = &ОтклонениеВПоступленииТоваров) КАК ФинансовыйОборотыДтКтИзлишки
			               |		ПО ПоступлениеТоваровУслугТовары.Ссылка = ФинансовыйОборотыДтКтИзлишки.Регистратор
			               |			И ПоступлениеТоваровУслугТовары.Номенклатура = ФинансовыйОборотыДтКтИзлишки.СубконтоДт2
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ОборотыДтКт(&НачалоПериода, &КонецПериода, Авто, СчетДт = &Счет441, , СчетКт = &Счет411, , СубконтоКт3 = &ОтклонениеВПоступленииТоваров) КАК ФинансовыйОборотыДтКтНедостача
			               |		ПО ПоступлениеТоваровУслугТовары.Ссылка = ФинансовыйОборотыДтКтНедостача.Регистратор
			               |			И ПоступлениеТоваровУслугТовары.Номенклатура = ФинансовыйОборотыДтКтНедостача.СубконтоКт2
			               |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСкладов КАК ТаблицаСкладов
			               |		ПО ПоступлениеТоваровУслугТовары.Ссылка = ТаблицаСкладов.Поступление
			               |ГДЕ
			               |	ПоступлениеТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
			               |	И ПоступлениеТоваровУслугТовары.Ссылка.ВидОперации = &ВидОперацииПоступления
			               |	И ПоступлениеТоваровУслугТовары.Ссылка.Проведен
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ВремТабПриходныйОрдер.Дата,
			               |	ВремТабПриходныйОрдер.Склад,
			               |	ВремТабПриходныйОрдер.ВидДанных,
			               |	ВремТабПриходныйОрдер.Излишки,
			               |	ВремТабПриходныйОрдер.СуммаИзлишки,
			               |	ВремТабПриходныйОрдер.СуммаНедостачи,
			               |	ВремТабПриходныйОрдер.Недостача,
			               |	ВремТабПриходныйОрдер.Номенклатура,
			               |	ВремТабПриходныйОрдер.Поступление,
			               |	ВремТабПриходныйОрдер.ТипСклада
			               |ПОМЕСТИТЬ ТабБезСумм
			               |ИЗ
			               |	ВремТабПриходныйОрдер КАК ВремТабПриходныйОрдер
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ТабБезСумм.Дата,
			               |	ТабБезСумм.Склад,
			               |	ТабБезСумм.ВидДанных,
			               |	ТабБезСумм.Излишки,
			               |	ТабБезСумм.СуммаИзлишки,
			               |	ТабБезСумм.СуммаНедостачи,
			               |	ТабБезСумм.Недостача,
			               |	ТабБезСумм.Номенклатура,
			               |	ТабБезСумм.Поступление,
			               |	ТабБезСумм.ТипСклада
			               |ИЗ
			               |	ТабБезСумм КАК ТабБезСумм
			               |ГДЕ
			               |	(ТабБезСумм.Излишки <> 0
			               |			ИЛИ ТабБезСумм.Недостача <> 0
			               |			ИЛИ ТабБезСумм.СуммаИзлишки <> 0
			               |			ИЛИ ТабБезСумм.СуммаНедостачи <> 0)
			               |	И ТабБезСумм.Номенклатура = &Номенклатура
			               |	И ТабБезСумм.Склад = &Склад";
						   
		
		Запрос.УстановитьПараметр("ВидОперацииПО", Перечисления.ВидыОперацийПриходСкладскойУчет.ОтПоставщика);			   
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));			   
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));			   
		//Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке);	
		Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка);
		Запрос.УстановитьПараметр("Склад", СкладСсылка);
		Запрос.УстановитьПараметр("ВидОперацииПоступления", Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Покупка);
		Запрос.УстановитьПараметр("Счет411", ПланыСчетов.Финансовый.Товары);
		Запрос.УстановитьПараметр("Счет441", ПланыСчетов.Финансовый.ЗатратыТоварныеДляРаспределения);
		Запрос.УстановитьПараметр("ОтклонениеВПоступленииТоваров", Справочники.СтатьиТовародвижения.НайтиПоНаименованию("Отклонение в поступлении товаров"));
		Запрос.УстановитьПараметр("Тип", Перечисления.ТипыСтруктурныхЕдиниц.Склад);
		//Запрос.УстановитьПараметр("ДатаРасшифровки", ДатаРасшифровки);
		
		Выгрузка = Запрос.Выполнить().Выгрузить();       
				
		ТабДокумент = Новый ТабличныйДокумент;
		Макет = Отчеты.ОтчетПоПотерямСклада.ПолучитьМакет("РасшифровкаПоступлениеОтПоставщика");
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
		//
		ОбластьШапка.Параметры.Номенклатура = НоменклатураСсылка;
		ОбластьШапка.Параметры.Дата = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
		
		ТабДокумент.Вывести(ОбластьШапка);

		Для Каждого Строка Из Выгрузка Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Строка);
			ОбластьСтрока.Параметры.Склад = Строка.Склад;
			ОбластьСтрока.Параметры.Дата = Формат(Строка.Дата, "ДФ=dd.MM.yyyy");
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;	
	ИначеЕсли ВидДанных = "Возврат поставщику" Тогда
    	Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	РасходныйОрдерСкладТовары.Ссылка.Склад,
		               |	НАЧАЛОПЕРИОДА(РасходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ) КАК Дата,
		               |	РасходныйОрдерСкладТовары.Номенклатура,
		               |	СУММА(РасходныйОрдерСкладТовары.Количество) КАК Количество,
		               |	ВозвратТоваровПоставщикуРасходныеОрдера.Ссылка КАК Поступление,
		               |	РасходныйОрдерСкладТовары.Ссылка КАК Расходник
		               |ПОМЕСТИТЬ ВремТабПриходныйОрдер
		               |ИЗ
		               |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.РасходныеОрдера КАК ВозвратТоваровПоставщикуРасходныеОрдера
		               |		ПО РасходныйОрдерСкладТовары.Ссылка = ВозвратТоваровПоставщикуРасходныеОрдера.РасходныйОрдер
		               |ГДЕ
		               |	РасходныйОрдерСкладТовары.Ссылка.Проведен
		               |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = &ВидОперацииВозврат
		               |	И РасходныйОрдерСкладТовары.Ссылка В
		               |			(ВЫБРАТЬ
		               |				ВозвратТоваровПоставщикуРасходныеОрдера.РасходныйОрдер
		               |			ИЗ
		               |				Документ.ВозвратТоваровПоставщику.РасходныеОрдера КАК ВозвратТоваровПоставщикуРасходныеОрдера
		               |			ГДЕ
		               |				ВозвратТоваровПоставщикуРасходныеОрдера.Ссылка.Проведен
		               |				И ВозвратТоваровПоставщикуРасходныеОрдера.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	РасходныйОрдерСкладТовары.Ссылка.Склад,
		               |	НАЧАЛОПЕРИОДА(РасходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ),
		               |	РасходныйОрдерСкладТовары.Номенклатура,
		               |	ВозвратТоваровПоставщикуРасходныеОрдера.Ссылка,
		               |	РасходныйОрдерСкладТовары.Ссылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	""Возврат поставщику"" КАК ВидДанных,
		               |	ЕСТЬNULL(ВремТабПриходныйОрдер.Склад, ""!!!Склад неопределен"") КАК Склад,
		               |	ЕСТЬNULL(ВремТабПриходныйОрдер.Дата, НАЧАЛОПЕРИОДА(ВозвратТоваровПоставщикуТовары.Ссылка.Дата, ДЕНЬ)) КАК Дата,
		               |	ЕСТЬNULL(ВремТабПриходныйОрдер.Номенклатура, ВозвратТоваровПоставщикуТовары.Номенклатура) КАК Номенклатура,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ВремТабПриходныйОрдер.Количество, 0) > ЕСТЬNULL(ВозвратТоваровПоставщикуТовары.Количество, 0)
		               |			ТОГДА ЕСТЬNULL(ВремТабПриходныйОрдер.Количество, 0) - ЕСТЬNULL(ВозвратТоваровПоставщикуТовары.Количество, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Недостача,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ВремТабПриходныйОрдер.Количество, 0) < ЕСТЬNULL(ВозвратТоваровПоставщикуТовары.Количество, 0)
		               |			ТОГДА ЕСТЬNULL(ВозвратТоваровПоставщикуТовары.Количество, 0) - ЕСТЬNULL(ВремТабПриходныйОрдер.Количество, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Излишки,
		               |	ВремТабПриходныйОрдер.Расходник,
		               |	ВозвратТоваровПоставщикуТовары.Ссылка КАК Возврат
		               |ПОМЕСТИТЬ ТабБезСумм
		               |ИЗ
		               |	ВремТабПриходныйОрдер КАК ВремТабПриходныйОрдер
		               |		ПОЛНОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
		               |		ПО ВремТабПриходныйОрдер.Номенклатура = ВозвратТоваровПоставщикуТовары.Номенклатура
		               |			И ВремТабПриходныйОрдер.Поступление = ВозвратТоваровПоставщикуТовары.Ссылка
		               |ГДЕ
		               |	ВозвратТоваровПоставщикуТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		               |	И ВозвратТоваровПоставщикуТовары.Ссылка.Проведен
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТабБезСумм.ВидДанных,
		               |	ТабБезСумм.Недостача,
		               |	ТабБезСумм.Излишки,
		               |	ТабБезСумм.Недостача * ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0) КАК СуммаНедостачи,
		               |	ТабБезСумм.Излишки * ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0) КАК СуммаИзлишки,
		               |	ТабБезСумм.Склад,
		               |	ТабБезСумм.Дата,
		               |	ТабБезСумм.Номенклатура,
		               |	ТабБезСумм.Склад.Владелец.ТипСтруктурнойЕдиницы КАК ТипСклада,
		               |	ТабБезСумм.Расходник,
		               |	ТабБезСумм.Возврат
		               |ИЗ
		               |	ТабБезСумм КАК ТабБезСумм
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьТоваров.СрезПоследних(&КонецПериода, ) КАК СебестоимостьТоваровСрезПоследних
		               |		ПО ТабБезСумм.Номенклатура = СебестоимостьТоваровСрезПоследних.Номенклатура
		               |ГДЕ
		               |	(ТабБезСумм.Недостача <> 0
		               |			ИЛИ ТабБезСумм.Излишки <> 0)
		               |	И ТабБезСумм.Склад = &Склад
		               |	И ТабБезСумм.Номенклатура = &Номенклатура";
		
		Запрос.УстановитьПараметр("ВидОперацииВозврат", Перечисления.ВидыОперацийРасходСкладскойУчет.ВозвратПоставщику);			   
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));			   
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));			   
		//Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке);	
		Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка);
		Запрос.УстановитьПараметр("Склад", СкладСсылка);
		//Запрос.УстановитьПараметр("ДатаРасшифровки", ДатаРасшифровки);
		
		Выгрузка = Запрос.Выполнить().Выгрузить();       
				
		ТабДокумент = Новый ТабличныйДокумент;
		Макет = Отчеты.ОтчетПоПотерямСклада.ПолучитьМакет("РасшифровкаВозвратПоставщику");
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
		//
		ОбластьШапка.Параметры.Номенклатура = НоменклатураСсылка;
		ОбластьШапка.Параметры.Дата = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
		
		ТабДокумент.Вывести(ОбластьШапка);

		Для Каждого Строка Из Выгрузка Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Строка);
			ОбластьСтрока.Параметры.Склад = Строка.Склад;
			ОбластьСтрока.Параметры.Дата = Формат(Строка.Дата, "ДФ=dd.MM.yyyy");
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
	Иначе
		Возврат Новый ТабличныйДокумент;	
	КонецЕсли;
	
	Возврат ТабДокумент;	
КонецФункции

&НаСервере
Функция РасшифроватьСуммуОтчетаЗаДень(Расшифровка)
	
	Данные = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	//СтатьяДР_Код = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[1].Значение);
	//СтатьяДР_Наименование = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение);
	
	ПараметрПериод = Данные.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПериодОтчета"));
	
	НачалоПериода = ПараметрПериод.Значение.ДатаНачала;
	КонецПериода  = ПараметрПериод.Значение.ДатаОкончания;

	
	НоменклатураСсылка = Данные.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	Если НЕ ТипЗнч(НоменклатураСсылка) = Тип("СправочникСсылка.Номенклатура") Тогда
		Возврат Новый ТабличныйДокумент;	
	КонецЕсли;
	//ВидДанных = Данные.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;
	//СкладСсылка = Данные.Элементы[Данные.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	//ДатаРасшифровки = Данные.Элементы[Данные.Элементы[Данные.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	//ВыбранноеЗначение =  Данные.Элементы[Расшифровка].ПолучитьПоля()[0].Значение;
	
	ВидДанных = Данные.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;
	СкладСсылка = Данные.Элементы[Данные.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	ДатаРасшифровки = Данные.Элементы[Данные.Элементы[Данные.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	ВыбранноеЗначение =  Данные.Элементы[Расшифровка].ПолучитьПоля()[0].Значение;

	Если ВидДанных = "Инвентаризация" Тогда
		Запрос = Новый Запрос;
		//Запрос.Текст = "ВЫБРАТЬ
		//			   |	НАЧАЛОПЕРИОДА(ТоварыНаСкладахОстаткиИОбороты.Регистратор.Дата, ДЕНЬ) КАК Дата,
		//			   |	ТоварыНаСкладахОстаткиИОбороты.Регистратор КАК Документ
		//			   |ИЗ
		//			   |	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, Авто, , ) КАК ТоварыНаСкладахОстаткиИОбороты
		//			   |ГДЕ
		//			   |	ТоварыНаСкладахОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИнвентаризацияСклад
		//			   |	И ТоварыНаСкладахОстаткиИОбороты.Склад = &Склад
		//			   |	И ТоварыНаСкладахОстаткиИОбороты.Номенклатура = &Номенклатура
		//			   |	И НАЧАЛОПЕРИОДА(ТоварыНаСкладахОстаткиИОбороты.Регистратор.Дата, ДЕНЬ) = &ДатаРасшифровки
		//			   |
		//			   |СГРУППИРОВАТЬ ПО
		//			   |	ТоварыНаСкладахОстаткиИОбороты.Регистратор,
		//			   |	НАЧАЛОПЕРИОДА(ТоварыНаСкладахОстаткиИОбороты.Регистратор.Дата, ДЕНЬ)";		   
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТоварыНаСкладахОстаткиИОбороты.Склад,
		               |	ТоварыНаСкладахОстаткиИОбороты.Номенклатура,
		               |	НАЧАЛОПЕРИОДА(ТоварыНаСкладахОстаткиИОбороты.Регистратор.Дата, ДЕНЬ) КАК Дата,
		               |	ТоварыНаСкладахОстаткиИОбороты.КоличествоПриход,
		               |	ТоварыНаСкладахОстаткиИОбороты.КоличествоРасход,
		               |	ТоварыНаСкладахОстаткиИОбороты.Регистратор КАК Документ
		               |ПОМЕСТИТЬ ТабИнвентаризация
		               |ИЗ
		               |	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(
		               |			,
		               |			,
		               |			Авто,
		               |			,
		               |			Номенклатура = &Номенклатура
		               |				И Склад = &Склад) КАК ТоварыНаСкладахОстаткиИОбороты
		               |ГДЕ
		               |	ТоварыНаСкладахОстаткиИОбороты.Регистратор ССЫЛКА Документ.ИнвентаризацияСклад
		               |	И ТоварыНаСкладахОстаткиИОбороты.Регистратор.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТоварыНаСкладах.Склад,
		               |	ТоварыНаСкладах.Номенклатура,
		               |	СУММА(ВЫБОР
		               |			КОГДА ТоварыНаСкладах.ВидДвижения = &Расход
		               |				ТОГДА ТоварыНаСкладах.Количество * -1
		               |			ИНАЧЕ ТоварыНаСкладах.Количество
		               |		КОНЕЦ) КАК Количество,
		               |	ТоварыНаСкладах.ВидДвижения,
		               |	НАЧАЛОПЕРИОДА(ТоварыНаСкладах.КорректировкаПоИнвентаризации.Дата, ДЕНЬ) КАК Дата,
		               |	ТоварыНаСкладах.Регистратор КАК Документ
		               |ПОМЕСТИТЬ ТабКорректировок
		               |ИЗ
		               |	РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
		               |ГДЕ
		               |	ТоварыНаСкладах.КорректировкаПоИнвентаризации <> ЗНАЧЕНИЕ(Документ.ИнвентаризацияСклад.ПустаяСсылка)
		               |	И ТоварыНаСкладах.КорректировкаПоИнвентаризации.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ТоварыНаСкладах.Склад,
		               |	ТоварыНаСкладах.Номенклатура,
		               |	ТоварыНаСкладах.ВидДвижения,
		               |	НАЧАЛОПЕРИОДА(ТоварыНаСкладах.КорректировкаПоИнвентаризации.Дата, ДЕНЬ),
		               |	ТоварыНаСкладах.Регистратор
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТабКорректировок.Склад,
		               |	ТабКорректировок.Номенклатура,
		               |	СУММА(ВЫБОР
		               |			КОГДА ТабКорректировок.Количество < 0
		               |				ТОГДА -ТабКорректировок.Количество
		               |			ИНАЧЕ 0
		               |		КОНЕЦ) КАК КНедостаче,
		               |	СУММА(ВЫБОР
		               |			КОГДА ТабКорректировок.Количество > 0
		               |				ТОГДА ТабКорректировок.Количество
		               |			ИНАЧЕ 0
		               |		КОНЕЦ) КАК КИзлишкам,
		               |	ТабКорректировок.Дата,
		               |	ТабКорректировок.Документ
		               |ПОМЕСТИТЬ ТаблКорректировкиПодготовленная
		               |ИЗ
		               |	ТабКорректировок КАК ТабКорректировок
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ТабКорректировок.Склад,
		               |	ТабКорректировок.Номенклатура,
		               |	ТабКорректировок.Дата,
		               |	ТабКорректировок.Документ
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТабИнвентаризация.Склад КАК Склад,
		               |	ТабИнвентаризация.Номенклатура КАК Номенклатура,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ТабИнвентаризация.КоличествоРасход, 0) > ЕСТЬNULL(ТабИнвентаризация.КоличествоПриход, 0)
		               |			ТОГДА ЕСТЬNULL(ТабИнвентаризация.КоличествоРасход, 0) - ЕСТЬNULL(ТабИнвентаризация.КоличествоПриход, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Недостача,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ТабИнвентаризация.КоличествоРасход, 0) < ЕСТЬNULL(ТабИнвентаризация.КоличествоПриход, 0)
		               |			ТОГДА ЕСТЬNULL(ТабИнвентаризация.КоличествоПриход, 0) - ЕСТЬNULL(ТабИнвентаризация.КоличествоРасход, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Излишки,
		               |	""Инвентаризация"" КАК ВидДанных,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ТабИнвентаризация.КоличествоРасход, 0) > ЕСТЬNULL(ТабИнвентаризация.КоличествоПриход, 0)
		               |			ТОГДА ЕСТЬNULL(ТабИнвентаризация.КоличествоРасход, 0) - ЕСТЬNULL(ТабИнвентаризация.КоличествоПриход, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ * ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0) КАК СуммаНедостачи,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ТабИнвентаризация.КоличествоРасход, 0) < ЕСТЬNULL(ТабИнвентаризация.КоличествоПриход, 0)
		               |			ТОГДА ЕСТЬNULL(ТабИнвентаризация.КоличествоПриход, 0) - ЕСТЬNULL(ТабИнвентаризация.КоличествоРасход, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ * ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0) КАК СуммаИзлишки,
		               |	ТабИнвентаризация.Склад.Владелец.ТипСтруктурнойЕдиницы КАК ТипСклада,
		               |	ТабИнвентаризация.Дата КАК Дата,
		               |	ТабИнвентаризация.Документ
		               |ПОМЕСТИТЬ ТабИтог
		               |ИЗ
		               |	ТабИнвентаризация КАК ТабИнвентаризация
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьТоваров.СрезПоследних(&КонецПериода, ) КАК СебестоимостьТоваровСрезПоследних
		               |		ПО ТабИнвентаризация.Номенклатура = СебестоимостьТоваровСрезПоследних.Номенклатура
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	ТаблКорректировкиПодготовленная.Склад,
		               |	ТаблКорректировкиПодготовленная.Номенклатура,
		               |	ТаблКорректировкиПодготовленная.КНедостаче,
		               |	ТаблКорректировкиПодготовленная.КИзлишкам,
		               |	""Инвентаризация"",
		               |	ТаблКорректировкиПодготовленная.КНедостаче * ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0),
		               |	ТаблКорректировкиПодготовленная.КИзлишкам * ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0),
		               |	ТаблКорректировкиПодготовленная.Склад.Владелец.ТипСтруктурнойЕдиницы,
		               |	ТаблКорректировкиПодготовленная.Дата,
		               |	ТаблКорректировкиПодготовленная.Документ
		               |ИЗ
		               |	ТаблКорректировкиПодготовленная КАК ТаблКорректировкиПодготовленная
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьТоваров.СрезПоследних(&КонецПериода, ) КАК СебестоимостьТоваровСрезПоследних
		               |		ПО ТаблКорректировкиПодготовленная.Номенклатура = СебестоимостьТоваровСрезПоследних.Номенклатура
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТабИтог.Склад,
		               |	ТабИтог.Номенклатура,
		               |	СУММА(ТабИтог.Недостача) КАК Недостача,
		               |	СУММА(ТабИтог.Излишки) КАК Излишки,
		               |	ТабИтог.ВидДанных,
		               |	СУММА(ТабИтог.СуммаНедостачи) КАК СуммаНедостачи,
		               |	СУММА(ТабИтог.СуммаИзлишки) КАК СуммаИзлишки,
		               |	ТабИтог.ТипСклада,
		               |	ТабИтог.Дата,
		               |	ТабИтог.Документ
		               |ИЗ
		               |	ТабИтог КАК ТабИтог
		               |ГДЕ
		               |	ТабИтог.Склад = &Склад
		               |	И ТабИтог.Номенклатура = &Номенклатура
		               |	И НАЧАЛОПЕРИОДА(ТабИтог.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ТабИтог.Склад,
		               |	ТабИтог.Номенклатура,
		               |	ТабИтог.ВидДанных,
		               |	ТабИтог.ТипСклада,
		               |	ТабИтог.Дата,
		               |	ТабИтог.Документ";
		
		Запрос.УстановитьПараметр("ВидОперации", Перечисления.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку);			   
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));			   
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));			   
		//Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке);	
		Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка);
		Запрос.УстановитьПараметр("Склад", СкладСсылка);
		Запрос.УстановитьПараметр("Расход", ВидДвиженияНакопления.Расход);
		Запрос.УстановитьПараметр("Приход", ВидДвиженияНакопления.Приход);
		Запрос.УстановитьПараметр("Дата", НачалоДня(ДатаРасшифровки));
		
		Выгрузка = Запрос.Выполнить().Выгрузить();       
				
		ТабДокумент = Новый ТабличныйДокумент;
		Макет = Отчеты.ОтчетПоПотерямСклада.ПолучитьМакет("РасшифровкаИнвентаризация");
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
		//
		ОбластьШапка.Параметры.Номенклатура = НоменклатураСсылка;
		ОбластьШапка.Параметры.Дата = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
		
		ТабДокумент.Вывести(ОбластьШапка);

		Для Каждого Строка Из Выгрузка Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Строка);
			ОбластьСтрока.Параметры.Склад = Строка.Склад;
			ОбластьСтрока.Параметры.Дата = Формат(Строка.Дата, "ДФ=dd.MM.yyyy");
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;	
		
	ИначеЕсли ВидДанных = "Отгрузка в ТТ" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	РасходныйОрдерСкладТовары.Номенклатура КАК Номенклатура,
		               |	МАКСИМУМ(РасходныйОрдерСкладТовары.Ссылка.Склад) КАК Склад,
		               |	РасходныйОрдерСкладТовары.Ссылка.Получатель КАК ТТ,
		               |	НАЧАЛОПЕРИОДА(ВЫБОР
		               |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ, ДЕНЬ) КАК Дата
		               |ПОМЕСТИТЬ ТЗ_СкладыИзРасходников
		               |ИЗ
		               |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		               |ГДЕ
		               |	ВЫБОР
		               |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ МЕЖДУ ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, -5) И &КонецПериода
		               |	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		               |	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		               |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
		               |	И РасходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	РасходныйОрдерСкладТовары.Номенклатура,
		               |	РасходныйОрдерСкладТовары.Ссылка.Получатель,
		               |	НАЧАЛОПЕРИОДА(ВЫБОР
		               |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ, ДЕНЬ)
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	ПриходныйОрдерСкладТовары.Номенклатура,
		               |	МАКСИМУМ(ПриходныйОрдерСкладТовары.Ссылка.Склад),
		               |	ЕСТЬNULL(ПриходныйОрдерСкладТовары.Ссылка.Поставщик, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)),
		               |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ)
		               |ИЗ
		               |	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		               |ГДЕ
		               |	ПриходныйОрдерСкладТовары.Ссылка.Проведен
		               |	И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ИзТорговойТочки)
		               |	И ПриходныйОрдерСкладТовары.Ссылка.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, -5) И &КонецПериода
		               |	И ПриходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		               |	И ЛОЖЬ
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ПриходныйОрдерСкладТовары.Номенклатура,
		               |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ),
		               |	ЕСТЬNULL(ПриходныйОрдерСкладТовары.Ссылка.Поставщик, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_СкладыИзРасходников.Номенклатура,
		               |	ТЗ_СкладыИзРасходников.Склад,
		               |	ТЗ_СкладыИзРасходников.ТТ,
		               |	ТЗ_СкладыИзРасходников.Дата
		               |ПОМЕСТИТЬ ТЗ_СкладыСвернутые
		               |ИЗ
		               |	ТЗ_СкладыИзРасходников КАК ТЗ_СкладыИзРасходников
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ТЗ_СкладыИзРасходников.Номенклатура,
		               |	ТЗ_СкладыИзРасходников.ТТ,
		               |	ТЗ_СкладыИзРасходников.Дата,
		               |	ТЗ_СкладыИзРасходников.Склад
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.СтруктурнаяЕдиница КАК ТорговаяТочка,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот КАК Количество,
		               |	НАЧАЛОПЕРИОДА(ДвиженияТоваровПоЛистамУчетаОбороты.Период, ДЕНЬ) КАК День
		               |ПОМЕСТИТЬ ВТ_Полученные
		               |ИЗ
		               |	РегистрНакопления.ДвиженияТоваровПоЛистамУчета.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			День,
		               |			ВидДвиженияТовара = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.Поступление)
		               |				И НЕ Номенклатура В
		               |						(ВЫБРАТЬ
		               |							Номенклатура.Ссылка
		               |						ИЗ
		               |							Справочник.Номенклатура КАК Номенклатура
		               |						ГДЕ
		               |							Номенклатура.СлужебныйТовар = ИСТИНА)
		               |				И Номенклатура = &Номенклатура) КАК ДвиженияТоваровПоЛистамУчетаОбороты
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ_Полученные.ТорговаяТочка,
		               |	ВТ_Полученные.Номенклатура,
		               |	СУММА(ВТ_Полученные.Количество) КАК Количество,
		               |	ВТ_Полученные.День
		               |ПОМЕСТИТЬ ТЗ_ПолученныеСвернутые
		               |ИЗ
		               |	ВТ_Полученные КАК ВТ_Полученные
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВТ_Полученные.ТорговаяТочка,
		               |	ВТ_Полученные.Номенклатура,
		               |	ВТ_Полученные.День
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВЗ_Запрос.Номенклатура КАК Номенклатура,
		               |	СУММА(ВЗ_Запрос.Количество) КАК Количество,
		               |	ВЗ_Запрос.ТорговаяТочка КАК ТорговаяТочка,
		               |	ВЗ_Запрос.День
		               |ПОМЕСТИТЬ ВТ_Отправленные
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		РасходныйОрдерСкладТовары.Номенклатура КАК Номенклатура,
		               |		РасходныйОрдерСкладТовары.Количество КАК Количество,
		               |		РасходныйОрдерСкладТовары.Ссылка.Получатель КАК ТорговаяТочка,
		               |		НАЧАЛОПЕРИОДА(ВЫБОР
		               |				КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |					ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |				ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |			КОНЕЦ, ДЕНЬ) КАК День
		               |	ИЗ
		               |		Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		               |	ГДЕ
		               |		ВЫБОР
		               |				КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |					ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |				ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |			КОНЕЦ МЕЖДУ &НачалоПериода И &КонецПериода
		               |		И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		               |		И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		               |		И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
		               |		И РасходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		               |	
		               |	ОБЪЕДИНИТЬ ВСЕ
		               |	
		               |	ВЫБРАТЬ
		               |		ПриходныйОрдерСкладТовары.Номенклатура,
		               |		ПриходныйОрдерСкладТовары.Количество * -1,
		               |		ПриходныйОрдерСкладТовары.Ссылка.Поставщик,
		               |		НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ)
		               |	ИЗ
		               |		Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		               |	ГДЕ
		               |		ПриходныйОрдерСкладТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		               |		И ПриходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		               |		И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ИзТорговойТочки)
		               |		И ПриходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		               |		И ЛОЖЬ) КАК ВЗ_Запрос
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВЗ_Запрос.Номенклатура,
		               |	ВЗ_Запрос.ТорговаяТочка,
		               |	ВЗ_Запрос.День
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	ТорговаяТочка,
		               |	Номенклатура
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЕСТЬNULL(ВТ_Отправленные.ТорговаяТочка, ТЗ_ПолученныеСвернутые.ТорговаяТочка) КАК ТорговаяТочка,
		               |	ЕСТЬNULL(ВТ_Отправленные.Номенклатура, ТЗ_ПолученныеСвернутые.Номенклатура) КАК Номенклатура,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ВТ_Отправленные.Количество, 0) > ЕСТЬNULL(ТЗ_ПолученныеСвернутые.Количество, 0)
		               |			ТОГДА ЕСТЬNULL(ВТ_Отправленные.Количество, 0) - ЕСТЬNULL(ТЗ_ПолученныеСвернутые.Количество, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Недостача,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ВТ_Отправленные.Количество, 0) < ЕСТЬNULL(ТЗ_ПолученныеСвернутые.Количество, 0)
		               |			ТОГДА ЕСТЬNULL(ТЗ_ПолученныеСвернутые.Количество, 0) - ЕСТЬNULL(ВТ_Отправленные.Количество, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Излишки,
		               |	ЕСТЬNULL(ВТ_Отправленные.День, ТЗ_ПолученныеСвернутые.День) КАК Дата
		               |ПОМЕСТИТЬ ТЗ_ДанныеБезСумм
		               |ИЗ
		               |	ВТ_Отправленные КАК ВТ_Отправленные
		               |		ПОЛНОЕ СОЕДИНЕНИЕ ТЗ_ПолученныеСвернутые КАК ТЗ_ПолученныеСвернутые
		               |		ПО ВТ_Отправленные.ТорговаяТочка = ТЗ_ПолученныеСвернутые.ТорговаяТочка
		               |			И ВТ_Отправленные.День = ТЗ_ПолученныеСвернутые.День
		               |			И ВТ_Отправленные.Номенклатура = ТЗ_ПолученныеСвернутые.Номенклатура
		               |ГДЕ
		               |	ЕСТЬNULL(ВТ_Отправленные.Количество, 0) - ЕСТЬNULL(ТЗ_ПолученныеСвернутые.Количество, 0) <> 0
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_ДанныеБезСумм.ТорговаяТочка КАК ТТ,
		               |	ТЗ_ДанныеБезСумм.Номенклатура,
		               |	ТЗ_ДанныеБезСумм.Недостача,
		               |	ТЗ_ДанныеБезСумм.Излишки,
		               |	ТЗ_ДанныеБезСумм.Недостача КАК СуммаНедостачи,
		               |	ТЗ_ДанныеБезСумм.Излишки КАК СуммаИзлишки,
		               |	ТЗ_ДанныеБезСумм.Дата,
		               |	МАКСИМУМ(ТЗ_СкладыСвернутые.Дата) КАК ДатаПредыдущая
		               |ПОМЕСТИТЬ ТЗ_ДанныеБезСуммСПредыдущейДатой
		               |ИЗ
		               |	ТЗ_ДанныеБезСумм КАК ТЗ_ДанныеБезСумм
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_СкладыСвернутые КАК ТЗ_СкладыСвернутые
		               |		ПО ТЗ_ДанныеБезСумм.ТорговаяТочка = ТЗ_СкладыСвернутые.ТТ
		               |			И ТЗ_ДанныеБезСумм.Номенклатура = ТЗ_СкладыСвернутые.Номенклатура
		               |			И ТЗ_ДанныеБезСумм.Дата >= ТЗ_СкладыСвернутые.Дата
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ТЗ_ДанныеБезСумм.ТорговаяТочка,
		               |	ТЗ_ДанныеБезСумм.Номенклатура,
		               |	ТЗ_ДанныеБезСумм.Дата,
		               |	ТЗ_ДанныеБезСумм.Недостача,
		               |	ТЗ_ДанныеБезСумм.Излишки,
		               |	ТЗ_ДанныеБезСумм.Недостача,
		               |	ТЗ_ДанныеБезСумм.Излишки
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.ТТ,
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.Номенклатура,
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.Недостача,
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.Излишки,
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.СуммаНедостачи,
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.СуммаИзлишки,
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.Дата,
		               |	ЕСТЬNULL(ТЗ_СкладыСвернутые.Склад, ""!!!Склад неопределен"") КАК Склад
		               |ПОМЕСТИТЬ ТЗ_ДанныеБезСуммСоСкладом
		               |ИЗ
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой КАК ТЗ_ДанныеБезСуммСПредыдущейДатой
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_СкладыСвернутые КАК ТЗ_СкладыСвернутые
		               |		ПО ТЗ_ДанныеБезСуммСПредыдущейДатой.ТТ = ТЗ_СкладыСвернутые.ТТ
		               |			И ТЗ_ДанныеБезСуммСПредыдущейДатой.Номенклатура = ТЗ_СкладыСвернутые.Номенклатура
		               |			И ТЗ_ДанныеБезСуммСПредыдущейДатой.ДатаПредыдущая = ТЗ_СкладыСвернутые.Дата
		               |;

						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	ВЫРАЗИТЬ(РасходныйОрдерСкладТовары.Получатель КАК Справочник.СтруктурныеЕдиницы) КАК ТорговаяТочка,
						|	ВЫРАЗИТЬ(РасходныйОрдерСкладТовары.Получатель КАК Справочник.СтруктурныеЕдиницы).ТипРозничнойТочки КАК ТипРозничнойТочки,
						|	МАКСИМУМ(ВЫБОР
						|			КОГДА РасходныйОрдерСкладТовары.ПриемкаВМагазинеБезПересчета < 0
						|				ТОГДА -РасходныйОрдерСкладТовары.ПриемкаВМагазинеБезПересчета
						|			ИНАЧЕ РасходныйОрдерСкладТовары.ПриемкаВМагазинеБезПересчета
						|		КОНЕЦ) КАК ПриемкаВМагазинеБезПересчета,
						|	РасходныйОрдерСкладТовары.ДатаРаспределения,
						|	МАКСИМУМ(ВЫРАЗИТЬ(РасходныйОрдерСкладТовары.Получатель КАК Справочник.СтруктурныеЕдиницы).ПриемкаТовараБезПересчета) КАК ПриемкаТовараБезПересчета
						|ПОМЕСТИТЬ втТипыМагазинов
						|ИЗ
						|	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСкладТовары
						|ГДЕ
						|	ВЫБОР
						|			КОГДА РасходныйОрдерСкладТовары.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
						|				ТОГДА РасходныйОрдерСкладТовары.ДатаРаспределения
						|			ИНАЧЕ РасходныйОрдерСкладТовары.Дата
						|		КОНЕЦ МЕЖДУ ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, 0) И &КонецПериода
						|	И РасходныйОрдерСкладТовары.Проведен = ИСТИНА
						|	И РасходныйОрдерСкладТовары.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
						|	И РасходныйОрдерСкладТовары.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)

						|СГРУППИРОВАТЬ ПО
						|	ВЫРАЗИТЬ(РасходныйОрдерСкладТовары.Получатель КАК Справочник.СтруктурныеЕдиницы),
						|	ВЫРАЗИТЬ(РасходныйОрдерСкладТовары.Получатель КАК Справочник.СтруктурныеЕдиницы).ТипРозничнойТочки,
						|	РасходныйОрдерСкладТовары.ДатаРаспределения
						|;

						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	втТипыМагазинов.ТорговаяТочка,
						|	втТипыМагазинов.ДатаРаспределения
						|ПОМЕСТИТЬ втМагазиныОтбор
						|ИЗ
						|	втТипыМагазинов КАК втТипыМагазинов
						|ГДЕ
						|	ВЫБОР
						|			КОГДА &ОтборПоТипуМагазина = ""Магазины с пересчетом""
						|				ТОГДА втТипыМагазинов.ПриемкаТовараБезПересчета = ЛОЖЬ
						|			КОГДА &ОтборПоТипуМагазина = ""Магазины без пересчета (с контрольным пересчетом в магазине)""
						|				ТОГДА втТипыМагазинов.ПриемкаТовараБезПересчета = ИСТИНА
						|						И втТипыМагазинов.ПриемкаВМагазинеБезПересчета = 2
						|			КОГДА &ОтборПоТипуМагазина = ""Магазины без пересчета""
						|				ТОГДА втТипыМагазинов.ПриемкаТовараБезПересчета = ИСТИНА
						|						И втТипыМагазинов.ПриемкаВМагазинеБезПересчета <> 2 иначе истина
						|		КОНЕЦ
						|;
					   
					   
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_ДанныеБезСуммСоСкладом.ТТ,
		               |	ТЗ_ДанныеБезСуммСоСкладом.Номенклатура,
		               |	ТЗ_ДанныеБезСуммСоСкладом.Недостача,
		               |	ТЗ_ДанныеБезСуммСоСкладом.Излишки,
		               |	ТЗ_ДанныеБезСуммСоСкладом.СуммаНедостачи * ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0) КАК СуммаНедостачи,
		               |	ТЗ_ДанныеБезСуммСоСкладом.СуммаИзлишки * ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0) КАК СуммаИзлишки,
		               |	ТЗ_ДанныеБезСуммСоСкладом.Дата КАК Дата,
		               |	ВЫБОР
		               |		КОГДА ТЗ_ДанныеБезСуммСоСкладом.Склад = ""!!!Склад неопределен""
		               |			ТОГДА ЕСТЬNULL(СкладыНоменклатурыИТорговыхТочекСрезПоследних.Склад, ""!!!Склад неопределен"")
		               |		ИНАЧЕ ТЗ_ДанныеБезСуммСоСкладом.Склад
		               |	КОНЕЦ КАК Склад,
		               |	""Отгрузка в ТТ"" КАК ВидДанных,
		               |	ВЫБОР
		               |		КОГДА ТЗ_ДанныеБезСуммСоСкладом.Склад = ""!!!Склад неопределен""
		               |			ТОГДА &Тип
		               |		ИНАЧЕ ТЗ_ДанныеБезСуммСоСкладом.Склад.Владелец.ТипСтруктурнойЕдиницы
		               |	КОНЕЦ КАК ТипСклада
		               |ИЗ
		               |	ТЗ_ДанныеБезСуммСоСкладом КАК ТЗ_ДанныеБезСуммСоСкладом
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьТоваров.СрезПоследних(&КонецПериода, ) КАК СебестоимостьТоваровСрезПоследних
		               |		ПО ТЗ_ДанныеБезСуммСоСкладом.Номенклатура = СебестоимостьТоваровСрезПоследних.Номенклатура
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СкладыНоменклатурыИТорговыхТочек.СрезПоследних(&КонецПериода, Номенклатура = &Номенклатура) КАК СкладыНоменклатурыИТорговыхТочекСрезПоследних
		               |		ПО ТЗ_ДанныеБезСуммСоСкладом.ТТ = СкладыНоменклатурыИТорговыхТочекСрезПоследних.ТорговаяТочка
		               |			И ТЗ_ДанныеБезСуммСоСкладом.Номенклатура = СкладыНоменклатурыИТорговыхТочекСрезПоследних.Номенклатура
						|			   		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМагазиныОтбор КАК втМагазиныОтбор
						|ПО ТЗ_ДанныеБезСуммСоСкладом.Дата = втМагазиныОтбор.ДатаРаспределения
						|И ТЗ_ДанныеБезСуммСоСкладом.ТТ = втМагазиныОтбор.ТорговаяТочка
						|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствСтруктурныхЕдиниц КАК ЗначенияСвойствСтруктурныхЕдиниц
						|		ПО ТЗ_ДанныеБезСуммСоСкладом.ТТ = ЗначенияСвойствСтруктурныхЕдиниц.СтруктурнаяЕдиница
						|			И (ЗначенияСвойствСтруктурныхЕдиниц.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваСтруктурныхЕдиниц.ВыездноеМероприятие))
		                |
						|ГДЕ ВЫРАЗИТЬ(ТЗ_ДанныеБезСуммСоСкладом.ТТ КАК Справочник.СтруктурныеЕдиницы).ТипРозничнойТочки <> ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Вкусомат)
						|	И (ЗначенияСвойствСтруктурныхЕдиниц.Значение ЕСТЬ NULL
						|			ИЛИ НЕ ЗначенияСвойствСтруктурныхЕдиниц.Значение)
						
		               |И
		               |	ВЫБОР
		               |			КОГДА ТЗ_ДанныеБезСуммСоСкладом.Склад = ""!!!Склад неопределен""
		               |				ТОГДА ЕСТЬNULL(СкладыНоменклатурыИТорговыхТочекСрезПоследних.Склад, ""!!!Склад неопределен"")
		               |			ИНАЧЕ ТЗ_ДанныеБезСуммСоСкладом.Склад
		               |		КОНЕЦ = &Склад
		               |	И НАЧАЛОПЕРИОДА(ТЗ_ДанныеБезСуммСоСкладом.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ)
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Дата";
        		
		//Запрос.УстановитьПараметр("ТабПоступило", ТаблицаДанныхПоПоступлению);//Запрос.УстановитьПараметр("ДатаНач", НачалоДня(НачалоПериода));
        //АК БЕЛН 29.09.2017+
		ПараметрТипПересчета = Данные.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ОтборПоТипуМагазина")).Значение;
		Запрос.УстановитьПараметр("ОтборПоТипуМагазина", ПараметрТипПересчета);		
        //АК БЕЛН 29.09.2017-
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));			   
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));	
		Запрос.УстановитьПараметр("ДатаНач", НачалоДня(НачалоПериода));			   
		Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));			   
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка);
		Запрос.УстановитьПараметр("Склад", СкладСсылка);
		Запрос.УстановитьПараметр("Дата", НачалоДня(ДатаРасшифровки));
		Запрос.УстановитьПараметр("ВыбранноеЗначение", 10);
		Запрос.УстановитьПараметр("Тип", Перечисления.ТипыСтруктурныхЕдиниц.Склад);
		
		Выгрузка = Запрос.Выполнить().Выгрузить();    
		 Запрос.Текст = "ВЫБРАТЬ
		                |	РасходныйОрдерСкладТовары.Номенклатура КАК Номенклатура,
		                |	МАКСИМУМ(РасходныйОрдерСкладТовары.Ссылка.Склад) КАК Склад,
		                |	РасходныйОрдерСкладТовары.Ссылка.Получатель КАК ТТ,
		                |	НАЧАЛОПЕРИОДА(ВЫБОР
		                |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		                |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		                |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		                |		КОНЕЦ, ДЕНЬ) КАК Дата
		                |ПОМЕСТИТЬ ТЗ_СкладыИзРасходников
		                |ИЗ
		                |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		                |ГДЕ
		                |	ВЫБОР
		                |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		                |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		                |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		                |		КОНЕЦ МЕЖДУ ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, -5) И &КонецПериода
		                |	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		                |	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		                |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
		                |	И РасходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	РасходныйОрдерСкладТовары.Номенклатура,
		                |	РасходныйОрдерСкладТовары.Ссылка.Получатель,
		                |	НАЧАЛОПЕРИОДА(ВЫБОР
		                |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		                |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		                |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		                |		КОНЕЦ, ДЕНЬ)
		                |
		                |ОБЪЕДИНИТЬ ВСЕ
		                |
		                |ВЫБРАТЬ
		                |	ПриходныйОрдерСкладТовары.Номенклатура,
		                |	МАКСИМУМ(ПриходныйОрдерСкладТовары.Ссылка.Склад),
		                |	ЕСТЬNULL(ПриходныйОрдерСкладТовары.Ссылка.Поставщик, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)),
		                |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ)
		                |ИЗ
		                |	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		                |ГДЕ
		                |	ПриходныйОрдерСкладТовары.Ссылка.Проведен
		                |	И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ИзТорговойТочки)
		                |	И ПриходныйОрдерСкладТовары.Ссылка.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, -5) И &КонецПериода
		                |	И ПриходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ПриходныйОрдерСкладТовары.Номенклатура,
		                |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ),
		                |	ЕСТЬNULL(ПриходныйОрдерСкладТовары.Ссылка.Поставщик, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	РасходныйОрдерСкладТовары.Ссылка.Получатель КАК ТТ,
		                |	НАЧАЛОПЕРИОДА(ВЫБОР
		                |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		                |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		                |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		                |		КОНЕЦ, ДЕНЬ) КАК Дата,
		                |	РасходныйОрдерСкладТовары.Ссылка КАК Документ,
		                |	РасходныйОрдерСкладТовары.Номенклатура
		                |ПОМЕСТИТЬ ТЗ_ИсходныеДанные
		                |ИЗ
		                |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		                |ГДЕ
		                |	НАЧАЛОПЕРИОДА(ВЫБОР
		                |				КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		                |					ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		                |				ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		                |			КОНЕЦ, ДЕНЬ) В (&ПериодыДни)
		                |	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		                |	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		                |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
		                |	И РасходныйОрдерСкладТовары.Ссылка.Получатель В(&Получатели)
		                |	И РасходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	РасходныйОрдерСкладТовары.Ссылка,
		                |	РасходныйОрдерСкладТовары.Ссылка.Получатель,
		                |	НАЧАЛОПЕРИОДА(ВЫБОР
		                |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		                |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		                |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		                |		КОНЕЦ, ДЕНЬ),
		                |	РасходныйОрдерСкладТовары.Номенклатура
		                |
		                |ОБЪЕДИНИТЬ ВСЕ
		                |
		                |ВЫБРАТЬ
		                |	ПриходныйОрдерСкладТовары.Ссылка.Поставщик,
		                |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ),
		                |	ПриходныйОрдерСкладТовары.Ссылка,
		                |	ПриходныйОрдерСкладТовары.Номенклатура
		                |ИЗ
		                |	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		                |ГДЕ
		                |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ) В (&ПериодыДни)
		                |	И ПриходныйОрдерСкладТовары.Ссылка.Поставщик В(&Получатели)
		                |	И ПриходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		                |	И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ИзТорговойТочки)
		                |	И ПриходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ПриходныйОрдерСкладТовары.Ссылка.Поставщик,
		                |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ),
		                |	ПриходныйОрдерСкладТовары.Ссылка,
		                |	ПриходныйОрдерСкладТовары.Номенклатура
		                |
		                |ОБЪЕДИНИТЬ ВСЕ
		                |
		                |ВЫБРАТЬ
		                |	ДвиженияТоваровПоЛистамУчета.СтруктурнаяЕдиница,
		                |	НАЧАЛОПЕРИОДА(ДвиженияТоваровПоЛистамУчета.Период, ДЕНЬ),
		                |	ДвиженияТоваровПоЛистамУчета.Регистратор,
		                |	ДвиженияТоваровПоЛистамУчета.Номенклатура
		                |ИЗ
		                |	РегистрНакопления.ДвиженияТоваровПоЛистамУчета КАК ДвиженияТоваровПоЛистамУчета
		                |ГДЕ
		                |	ДвиженияТоваровПоЛистамУчета.Период В(&ПериодыДни)
		                |	И ДвиженияТоваровПоЛистамУчета.Номенклатура = &Номенклатура
		                |	И ДвиженияТоваровПоЛистамУчета.СтруктурнаяЕдиница В(&Получатели)
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ТЗ_СкладыИзРасходников.Дата КАК ДатаПредыдущая,
		                |	ТЗ_ИсходныеДанные.ТТ,
		                |	ТЗ_ИсходныеДанные.Дата КАК Дата,
		                |	ТЗ_ИсходныеДанные.Документ,
		                |	ТЗ_ИсходныеДанные.Номенклатура
		                |ПОМЕСТИТЬ ТЗ_ИсходныеДанныеПромежуточная
		                |ИЗ
		                |	ТЗ_ИсходныеДанные КАК ТЗ_ИсходныеДанные
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_СкладыИзРасходников КАК ТЗ_СкладыИзРасходников
		                |		ПО ТЗ_ИсходныеДанные.ТТ = ТЗ_СкладыИзРасходников.ТТ
		                |			И ТЗ_ИсходныеДанные.Дата >= ТЗ_СкладыИзРасходников.Дата
		                |			И ТЗ_ИсходныеДанные.Номенклатура >= ТЗ_СкладыИзРасходников.Номенклатура
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ТЗ_ИсходныеДанныеПромежуточная.ТТ,
		                |	ТЗ_ИсходныеДанныеПромежуточная.Дата КАК Дата,
		                |	ТЗ_ИсходныеДанныеПромежуточная.Документ,
		                |	ТЗ_ИсходныеДанныеПромежуточная.Номенклатура,
		                |	ВЫБОР
		                |		КОГДА ЕСТЬNULL(ТЗ_СкладыИзРасходников.Склад, ""!!!Склад неопределен"") = ""!!!Склад неопределен""
		                |			ТОГДА ЕСТЬNULL(СкладыНоменклатурыИТорговыхТочекСрезПоследних.Склад, ""!!!Склад неопределен"")
		                |		ИНАЧЕ ЕСТЬNULL(ТЗ_СкладыИзРасходников.Склад, ""!!!Склад неопределен"")
		                |	КОНЕЦ КАК Склад
		                |ИЗ
		                |	ТЗ_ИсходныеДанныеПромежуточная КАК ТЗ_ИсходныеДанныеПромежуточная
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_СкладыИзРасходников КАК ТЗ_СкладыИзРасходников
		                |		ПО ТЗ_ИсходныеДанныеПромежуточная.ДатаПредыдущая = ТЗ_СкладыИзРасходников.Дата
		                |			И ТЗ_ИсходныеДанныеПромежуточная.Номенклатура = ТЗ_СкладыИзРасходников.Номенклатура
		                |			И ТЗ_ИсходныеДанныеПромежуточная.ТТ = ТЗ_СкладыИзРасходников.ТТ
		                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СкладыНоменклатурыИТорговыхТочек.СрезПоследних(&КонецПериода, Номенклатура = &Номенклатура) КАК СкладыНоменклатурыИТорговыхТочекСрезПоследних
		                |		ПО ТЗ_ИсходныеДанныеПромежуточная.ТТ = СкладыНоменклатурыИТорговыхТочекСрезПоследних.ТорговаяТочка
		                |			И ТЗ_ИсходныеДанныеПромежуточная.Номенклатура = СкладыНоменклатурыИТорговыхТочекСрезПоследних.Номенклатура
						|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствСтруктурныхЕдиниц КАК ЗначенияСвойствСтруктурныхЕдиниц
						|		ПО ТЗ_ИсходныеДанныеПромежуточная.ТТ = ЗначенияСвойствСтруктурныхЕдиниц.СтруктурнаяЕдиница
						|			И (ЗначенияСвойствСтруктурныхЕдиниц.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваСтруктурныхЕдиниц.ВыездноеМероприятие))
		                |
						|ГДЕ ВЫРАЗИТЬ(ТЗ_ИсходныеДанныеПромежуточная.ТТ КАК Справочник.СтруктурныеЕдиницы).ТипРозничнойТочки <> ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Вкусомат)
						|	И (ЗначенияСвойствСтруктурныхЕдиниц.Значение ЕСТЬ NULL
						|			ИЛИ НЕ ЗначенияСвойствСтруктурныхЕдиниц.Значение)
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ТЗ_ИсходныеДанныеПромежуточная.ТТ,
		                |	ТЗ_ИсходныеДанныеПромежуточная.Дата,
		                |	ТЗ_ИсходныеДанныеПромежуточная.Документ,
		                |	ТЗ_ИсходныеДанныеПромежуточная.Номенклатура,
		                |	ВЫБОР
		                |		КОГДА ЕСТЬNULL(ТЗ_СкладыИзРасходников.Склад, ""!!!Склад неопределен"") = ""!!!Склад неопределен""
		                |			ТОГДА ЕСТЬNULL(СкладыНоменклатурыИТорговыхТочекСрезПоследних.Склад, ""!!!Склад неопределен"")
		                |		ИНАЧЕ ЕСТЬNULL(ТЗ_СкладыИзРасходников.Склад, ""!!!Склад неопределен"")
		                |	КОНЕЦ
		                |
		                |УПОРЯДОЧИТЬ ПО
		                |	Дата";
						
					
		Запрос.УстановитьПараметр("Получатели", Выгрузка.ВыгрузитьКолонку("ТТ"));
		Запрос.УстановитьПараметр("Склады", Выгрузка.ВыгрузитьКолонку("Склад"));
		
		МассивДаты = Выгрузка.ВыгрузитьКолонку("Дата");
		МаксДата = '00010101';
		МинДата = '39990101';
		Для Каждого ЭлементДата Из МассивДаты Цикл
			МаксДата = Макс(МаксДата, ЭлементДата);
			МинДата = Мин(МинДата, ЭлементДата);
		КонецЦикла;
		Запрос.УстановитьПараметр("ПериодыДни", МассивДаты);
		
		ВыгрузкаДокументов = Запрос.Выполнить().Выгрузить();
		
		ЗапросЛисты = Новый Запрос();
		ЗапросЛисты.УстановитьПараметр("ДатаНач", НачалоДня(МинДата));
		ЗапросЛисты.УстановитьПараметр("ДатаКон", КонецДня(МаксДата));
		ЗапросЛисты.Текст = "ВЫБРАТЬ
		                    |	ЛистУчета.Ссылка,
		                    |	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) КАК Дата,
		                    |	ЛистУчета.ТорговаяТочка
		                    |ИЗ
		                    |	Документ.ЛистУчета КАК ЛистУчета
		                    |ГДЕ
		                    |	ЛистУчета.Дата МЕЖДУ &ДатаНач И &ДатаКон";
							
		ТабЛУ = ЗапросЛисты.Выполнить().Выгрузить();
		
		ТабДокумент = Новый ТабличныйДокумент;
		Макет = Отчеты.ОтчетПоПотерямСклада.ПолучитьМакет("РасшифровкаОтгрузкаВТТ");
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьСтрокаДок = Макет.ПолучитьОбласть("СтрокаДок");
		ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
		//
		ОбластьШапка.Параметры.Номенклатура = НоменклатураСсылка;
		ОбластьШапка.Параметры.Дата = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
		
		ТабДокумент.Вывести(ОбластьШапка);

		Для Каждого Строка Из Выгрузка Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Строка);
			ОбластьСтрока.Параметры.Склад = Строка.Склад;
			ОбластьСтрока.Параметры.Дата = Формат(Строка.Дата, "ДФ=dd.MM.yyyy");
			//ОбластьСтрока.Параметры.Документ = "";
			ТабДокумент.Вывести(ОбластьСтрока);
			
			ОтборСтруктура = Новый Структура;
			ОтборСтруктура.Вставить("ТТ", Строка.ТТ);
			ОтборСтруктура.Вставить("Склад", Строка.Склад);
			ОтборСтруктура.Вставить("Дата", Строка.Дата);
			ОтборСтруктура.Вставить("Номенклатура", Строка.Номенклатура);

			//ОбластьСтрока.Параметры.Дата = "";	
			//ОбластьСтрока.Параметры.ТТ = "";	
			//ОбластьСтрока.Параметры.Документ = "";				
			//ОбластьСтрока.Параметры.Склад = "";	
			//ОбластьСтрока.Параметры.Недостача = "";	
			//ОбластьСтрока.Параметры.Излишки = "";	
			//ОбластьСтрока.Параметры.СуммаНедостачи = "";	
			//ОбластьСтрока.Параметры.СуммаИзлишки = "";
			
			НайденныеСтроки = ВыгрузкаДокументов.НайтиСтроки(ОтборСтруктура); 
			
			Если НайденныеСтроки.Количество() = 0 Тогда
				ОбластьСтрокаДок.Параметры.Документ = "Не определен";
				ТабДокумент.Вывести(ОбластьСтрокаДок);
			КонецЕсли;
			
			Для Каждого СтрокаДок Из НайденныеСтроки ЦИкл
				ОбластьСтрокаДок.Параметры.Документ = СтрокаДок.Документ;
				ТабДокумент.Вывести(ОбластьСтрокаДок);		
			КонецЦикла;
			
			СтрокиЛУ = ТабЛУ.НайтиСтроки(Новый Структура("Дата, ТорговаяТочка", НачалоДня(Строка.Дата), Строка.ТТ));
			Если СтрокиЛУ.Количество() > 0 Тогда
				ОбластьСтрокаЛУ = Макет.ПолучитьОбласть("СтрокаДокЛист");
				ОбластьСтрокаЛУ.Параметры.Документ = СтрокиЛУ[0].Ссылка;
				ТабДокумент.Вывести(ОбластьСтрокаЛУ);
			КонецЕсли;
		КонецЦикла;
		
		ОбластьИтоги.Параметры.НедостачаИ = Выгрузка.Итог("Недостача");
		ОбластьИтоги.Параметры.ИзлишкиИ = Выгрузка.Итог("Излишки");	
		ОбластьИтоги.Параметры.СуммаНедостачиИ = Выгрузка.Итог("СуммаНедостачи");	
		ОбластьИтоги.Параметры.СуммаИзлишкиИ = Выгрузка.Итог("СуммаИзлишки");
		ТабДокумент.Вывести(ОбластьИтоги);
	ИначеЕсли ВидДанных = "Перемещение на склад" Тогда
		Запрос = Новый Запрос;
		//Запрос.Текст = "ВЫБРАТЬ
		//			   |	РасходныйОрдерСкладТовары.Ссылка КАК РасходныйОрдер,
		//			   |	НАЧАЛОПЕРИОДА(РасходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ) КАК Дата
		//			   |ПОМЕСТИТЬ ВремТабРО
		//			   |ИЗ
		//			   |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		//			   |ГДЕ
		//			   |	НАЧАЛОПЕРИОДА(РасходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ) = &Датарасшифровки
		//			   |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = &ВидОперацииРОПеремещение
		//			   |	И РасходныйОрдерСкладТовары.Ссылка.Проведен
		//			   |	И РасходныйОрдерСкладТовары.Ссылка.ПровереноОператором
		//			   |	И РасходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		//			   |	И РасходныйОрдерСкладТовары.Ссылка.Склад = &Склад
		//			   |;
		//			   |
		//			   |////////////////////////////////////////////////////////////////////////////////
		//			   |ВЫБРАТЬ
		//			   |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ) КАК Дата,
		//			   |	ПриходныйОрдерСкладТовары.Ссылка КАК ПриходныйОрдер
		//			   |ПОМЕСТИТЬ ВремТабПО
		//			   |ИЗ
		//			   |	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		//			   |ГДЕ
		//			   |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ) = &Датарасшифровки
		//			   |	И ПриходныйОрдерСкладТовары.Ссылка.Проведен
		//			   |	И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = &ВидОперацииПОПеремещение
		//			   |	И ПриходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		//			   |;
		//			   |
		//			   |////////////////////////////////////////////////////////////////////////////////
		//			   |ВЫБРАТЬ
		//			   |	ВремТабПО.ПриходныйОрдер,
		//			   |	ВремТабРО.РасходныйОрдер
		//			   |ИЗ
		//			   |	ВремТабРО КАК ВремТабРО
		//			   |		ЛЕВОЕ СОЕДИНЕНИЕ ВремТабПО КАК ВремТабПО
		//			   |		ПО ВремТабРО.РасходныйОрдер = ВремТабПО.ПриходныйОрдер.Основание
		//			   |
		//			   |СГРУППИРОВАТЬ ПО
		//			   |	ВремТабПО.ПриходныйОрдер,
		//			   |	ВремТабРО.РасходныйОрдер";		   
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	РасходныйОрдерСкладТовары.Номенклатура КАК Номенклатура,
		               |	СУММА(РасходныйОрдерСкладТовары.Количество) КАК Количество,
		               |	РасходныйОрдерСкладТовары.Ссылка.Склад КАК Склад,
		               |	НАЧАЛОПЕРИОДА(ВЫБОР
		               |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ, ДЕНЬ) КАК Дата,
		               |	РасходныйОрдерСкладТовары.Ссылка
		               |ПОМЕСТИТЬ ВТ_Расход
		               |ИЗ
		               |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		               |ГДЕ
		               |	ВЫБОР
		               |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ МЕЖДУ &НачалоПериода И &КонецПериода
		               |	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		               |	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		               |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.Перемещение)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	РасходныйОрдерСкладТовары.Номенклатура,
		               |	РасходныйОрдерСкладТовары.Ссылка.Склад,
		               |	НАЧАЛОПЕРИОДА(ВЫБОР
		               |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ, ДЕНЬ),
		               |	РасходныйОрдерСкладТовары.Ссылка
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	Номенклатура
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ПриходныйОрдерСкладТовары.Номенклатура КАК Номенклатура,
		               |	СУММА(ПриходныйОрдерСкладТовары.Количество) КАК Количество,
		               |	ПриходныйОрдерСкладТовары.Ссылка.Склад КАК Склад,
		               |	НАЧАЛОПЕРИОДА(ВЫБОР
		               |			КОГДА ПриходныйОрдерСкладТовары.Ссылка.Дата < ДАТАВРЕМЯ(2014, 3, 1)
		               |				ТОГДА ПриходныйОрдерСкладТовары.Ссылка.Дата
		               |			КОГДА ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА ВЫБОР
		               |						КОГДА ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика < ДАТАВРЕМЯ(2014, 3, 1)
		               |								И ПриходныйОрдерСкладТовары.Ссылка.Дата >= ДАТАВРЕМЯ(2014, 3, 1)
		               |							ТОГДА ДАТАВРЕМЯ(2014, 3, 1)
		               |						ИНАЧЕ ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика
		               |					КОНЕЦ
		               |			ИНАЧЕ ПриходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ, ДЕНЬ) КАК Дата,
		               |	ПриходныйОрдерСкладТовары.Ссылка.Основание,
		               |	ПриходныйОрдерСкладТовары.Ссылка
		               |ПОМЕСТИТЬ ВТ_Приход
		               |ИЗ
		               |	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		               |ГДЕ
		               |	ВЫБОР
		               |			КОГДА ПриходныйОрдерСкладТовары.Ссылка.Дата < ДАТАВРЕМЯ(2014, 3, 1)
		               |				ТОГДА ПриходныйОрдерСкладТовары.Ссылка.Дата
		               |			КОГДА ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА ВЫБОР
		               |						КОГДА ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика < ДАТАВРЕМЯ(2014, 3, 1)
		               |								И ПриходныйОрдерСкладТовары.Ссылка.Дата >= ДАТАВРЕМЯ(2014, 3, 1)
		               |							ТОГДА ДАТАВРЕМЯ(2014, 3, 1)
		               |						ИНАЧЕ ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика
		               |					КОНЕЦ
		               |			ИНАЧЕ ПриходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ МЕЖДУ &НачалоПериода И &КонецПериода
		               |	И ПриходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		               |	И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.Перемещение)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ПриходныйОрдерСкладТовары.Номенклатура,
		               |	ПриходныйОрдерСкладТовары.Ссылка.Склад,
		               |	ПриходныйОрдерСкладТовары.Ссылка.Основание,
		               |	ПриходныйОрдерСкладТовары.Ссылка,
		               |	НАЧАЛОПЕРИОДА(ВЫБОР
		               |			КОГДА ПриходныйОрдерСкладТовары.Ссылка.Дата < ДАТАВРЕМЯ(2014, 3, 1)
		               |				ТОГДА ПриходныйОрдерСкладТовары.Ссылка.Дата
		               |			КОГДА ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА ВЫБОР
		               |						КОГДА ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика < ДАТАВРЕМЯ(2014, 3, 1)
		               |								И ПриходныйОрдерСкладТовары.Ссылка.Дата >= ДАТАВРЕМЯ(2014, 3, 1)
		               |							ТОГДА ДАТАВРЕМЯ(2014, 3, 1)
		               |						ИНАЧЕ ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика
		               |					КОНЕЦ
		               |			ИНАЧЕ ПриходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ, ДЕНЬ)
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	Номенклатура
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	РасходныйОрдерСкладТовары.Номенклатура КАК Номенклатура,
		               |	СУММА(РасходныйОрдерСкладТовары.Количество) КАК Количество,
		               |	РасходныйОрдерСкладТовары.Ссылка.Склад.Владелец КАК Склад
		               |ПОМЕСТИТЬ ВТ_РасходДоп
		               |ИЗ
		               |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		               |ГДЕ
		               |	ВЫБОР
		               |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ МЕЖДУ &НачалоПериода И &КонецПериода
		               |	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		               |	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		               |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.Перемещение)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	РасходныйОрдерСкладТовары.Номенклатура,
		               |	РасходныйОрдерСкладТовары.Ссылка.Склад.Владелец
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	Номенклатура
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ПриходныйОрдерСкладТовары.Номенклатура КАК Номенклатура,
		               |	СУММА(ПриходныйОрдерСкладТовары.Количество) КАК Количество,
		               |	ПриходныйОрдерСкладТовары.Ссылка.Склад.Владелец КАК Склад
		               |ПОМЕСТИТЬ ВТ_ПриходДоп
		               |ИЗ
		               |	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		               |ГДЕ
		               |	ВЫБОР
		               |			КОГДА ПриходныйОрдерСкладТовары.Ссылка.Дата < ДАТАВРЕМЯ(2014, 3, 1)
		               |				ТОГДА ПриходныйОрдерСкладТовары.Ссылка.Дата
		               |			КОГДА ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА ВЫБОР
		               |						КОГДА ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика < ДАТАВРЕМЯ(2014, 3, 1)
		               |								И ПриходныйОрдерСкладТовары.Ссылка.Дата >= ДАТАВРЕМЯ(2014, 3, 1)
		               |							ТОГДА ДАТАВРЕМЯ(2014, 3, 1)
		               |						ИНАЧЕ ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика
		               |					КОНЕЦ
		               |			ИНАЧЕ ПриходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ МЕЖДУ &НачалоПериода И &КонецПериода
		               |	И ПриходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		               |	И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.Перемещение)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ПриходныйОрдерСкладТовары.Номенклатура,
		               |	ПриходныйОрдерСкладТовары.Ссылка.Склад.Владелец
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	Номенклатура
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЕСТЬNULL(ВТ_РасходДоп.Номенклатура, ВТ_ПриходДоп.Номенклатура) КАК Номенклатура
		               |ПОМЕСТИТЬ ТабОграничениеПоНоменклатуре
		               |ИЗ
		               |	ВТ_РасходДоп КАК ВТ_РасходДоп
		               |		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ПриходДоп КАК ВТ_ПриходДоп
		               |		ПО ВТ_РасходДоп.Номенклатура = ВТ_ПриходДоп.Номенклатура
		               |			И ВТ_РасходДоп.Склад <> ВТ_ПриходДоп.Склад
		               |ГДЕ
		               |	ЕСТЬNULL(ВТ_РасходДоп.Количество, 0) - ЕСТЬNULL(ВТ_ПриходДоп.Количество, 0) <> 0
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ЕСТЬNULL(ВТ_РасходДоп.Номенклатура, ВТ_ПриходДоп.Номенклатура)
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЕСТЬNULL(ВТ_Расход.Номенклатура, ВТ_Приход.Номенклатура) КАК Номенклатура,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ВТ_Расход.Количество, 0) > ЕСТЬNULL(ВТ_Приход.Количество, 0)
		               |			ТОГДА ЕСТЬNULL(ВТ_Расход.Количество, 0) - ЕСТЬNULL(ВТ_Приход.Количество, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Недостача,
		               |	ЕСТЬNULL(ВТ_Расход.Склад, ВТ_Приход.Склад) КАК Склад,
		               |	ЕСТЬNULL(ВТ_Расход.Дата, ВТ_Приход.Дата) КАК Дата,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ВТ_Расход.Количество, 0) < ЕСТЬNULL(ВТ_Приход.Количество, 0)
		               |			ТОГДА ЕСТЬNULL(ВТ_Приход.Количество, 0) - ЕСТЬNULL(ВТ_Расход.Количество, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Излишки,
		               |	ЕСТЬNULL(ВТ_Расход.Ссылка, ВТ_Приход.Ссылка) КАК Расходник
		               |ПОМЕСТИТЬ ТабБезСумм
		               |ИЗ
		               |	ВТ_Расход КАК ВТ_Расход
		               |		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Приход КАК ВТ_Приход
		               |		ПО ВТ_Расход.Номенклатура = ВТ_Приход.Номенклатура
		               |			И ВТ_Расход.Ссылка = ВТ_Приход.Основание
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТабБезСумм.Склад.Владелец.ТипСтруктурнойЕдиницы КАК ТипСклада,
		               |	ТабБезСумм.Номенклатура,
		               |	ТабБезСумм.Склад,
		               |	ТабБезСумм.Дата,
		               |	ТабБезСумм.Излишки,
		               |	ТабБезСумм.Недостача,
		               |	ТабБезСумм.Излишки * СебестоимостьТоваровСрезПоследних.Себестоимость КАК СуммаИзлишки,
		               |	ТабБезСумм.Недостача * СебестоимостьТоваровСрезПоследних.Себестоимость КАК СуммаНедостачи,
		               |	""Перемещение на склад"" КАК ВидДанных,
		               |	ТабБезСумм.Расходник
		               |ИЗ
		               |	ТабБезСумм КАК ТабБезСумм
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьТоваров.СрезПоследних(&КонецПериода, ) КАК СебестоимостьТоваровСрезПоследних
		               |		ПО ТабБезСумм.Номенклатура = СебестоимостьТоваровСрезПоследних.Номенклатура
		               |ГДЕ
		               |	ТабБезСумм.Номенклатура В
		               |			(ВЫБРАТЬ
		               |				ТабОграничениеПоНоменклатуре.Номенклатура
		               |			ИЗ
		               |				ТабОграничениеПоНоменклатуре КАК ТабОграничениеПоНоменклатуре)
		               |	И ТабБезСумм.Номенклатура = &Номенклатура
		               |	И ТабБезСумм.Склад = &Склад
		               |	И (ТабБезСумм.Излишки <> 0
		               |			ИЛИ ТабБезСумм.Недостача <> 0)
		               |	И НАЧАЛОПЕРИОДА(ТабБезСумм.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ)";
		
		
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));			   
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));			   
		//Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке);	
		Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка);
		Запрос.УстановитьПараметр("Склад", СкладСсылка);
		Запрос.УстановитьПараметр("Дата", НачалоДня(ДатаРасшифровки));
		
		Запрос.УстановитьПараметр("ВидОперацииПОПеремещение", Перечисления.ВидыОперацийПриходСкладскойУчет.Перемещение);			   
		Запрос.УстановитьПараметр("ВидОперацииРОПеремещение", Перечисления.ВидыОперацийРасходСкладскойУчет.Перемещение);			   
		
		
		Выгрузка = Запрос.Выполнить().Выгрузить();       
				
		ТабДокумент = Новый ТабличныйДокумент;
		Макет = Отчеты.ОтчетПоПотерямСклада.ПолучитьМакет("РасшифровкаПеремещениеНаСклад");
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
		//
		ОбластьШапка.Параметры.Номенклатура = НоменклатураСсылка;
		ОбластьШапка.Параметры.Дата = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
		
		ТабДокумент.Вывести(ОбластьШапка);

		Для Каждого Строка Из Выгрузка Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Строка);
			ОбластьСтрока.Параметры.Склад = Строка.Склад;
			ОбластьСтрока.Параметры.Дата = Формат(Строка.Дата, "ДФ=dd.MM.yyyy");
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
	ИначеЕсли ВидДанных = "Поступление от поставщика" Тогда
		Запрос = Новый Запрос;
		//Запрос.Текст = "ВЫБРАТЬ
		//			   |	ПоступлениеТоваровУслугПриходныеОрдера.Ссылка КАК Поступление,
		//			   |	ПриходныйОрдерСкладТовары.Ссылка КАК Приходник
		//			   |ПОМЕСТИТЬ ВремТабПриходныйОрдер
		//			   |ИЗ
		//			   |	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		//			   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.ПриходныеОрдера КАК ПоступлениеТоваровУслугПриходныеОрдера
		//			   |		ПО ПриходныйОрдерСкладТовары.Ссылка = ПоступлениеТоваровУслугПриходныеОрдера.ПриходныйОрдер
		//			   |ГДЕ
		//			   |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ) = &ДатаРасшифровки
		//			   |	И ПриходныйОрдерСкладТовары.Ссылка.Проведен
		//			   |	И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = &ВидОперацииПО
		//			   |	И ПриходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		//			   |	И ПриходныйОрдерСкладТовары.Ссылка.Склад = &Склад
		//			   |	И ПоступлениеТоваровУслугПриходныеОрдера.Ссылка.Проведен
		//			   |
		//			   |СГРУППИРОВАТЬ ПО
		//			   |	ПоступлениеТоваровУслугПриходныеОрдера.Ссылка,
		//			   |	ПриходныйОрдерСкладТовары.Ссылка
		//			   |;
		//			   |
		//			   |////////////////////////////////////////////////////////////////////////////////
		//			   |ВЫБРАТЬ
		//			   |	ВремТабПриходныйОрдер.Приходник КАК ПриходныйОрдер,
		//			   |	ПоступлениеТоваровУслугТовары.Ссылка КАК Поступление
		//			   |ИЗ
		//			   |	ВремТабПриходныйОрдер КАК ВремТабПриходныйОрдер
		//			   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
		//			   |		ПО ВремТабПриходныйОрдер.Поступление = ПоступлениеТоваровУслугТовары.Ссылка
		//			   |ГДЕ
		//			   |	ПоступлениеТоваровУслугТовары.Номенклатура = &Номенклатура
		//			   |
		//			   |СГРУППИРОВАТЬ ПО
		//			   |	ВремТабПриходныйОрдер.Приходник,
		//			   |	ПоступлениеТоваровУслугТовары.Ссылка";		   
		
			Запрос.Текст = "ВЫБРАТЬ
			               |	МАКСИМУМ(ЕСТЬNULL(ПриходныйОрдерСклад.Склад, ""!!!Склад неопределен"")) КАК Склад,
			               |	ПоступлениеТоваровУслугПриходныеОрдера.Ссылка КАК Поступление
			               |ПОМЕСТИТЬ ТаблицаСкладов
			               |ИЗ
			               |	Документ.ПоступлениеТоваровУслуг.ПриходныеОрдера КАК ПоступлениеТоваровУслугПриходныеОрдера
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
			               |		ПО ПоступлениеТоваровУслугПриходныеОрдера.ПриходныйОрдер = ПриходныйОрдерСклад.Ссылка
			               |ГДЕ
			               |	ПриходныйОрдерСклад.Ссылка В
			               |			(ВЫБРАТЬ
			               |				ПоступлениеТоваровУслугПриходныеОрдера.ПриходныйОрдер
			               |			ИЗ
			               |				Документ.ПоступлениеТоваровУслуг.ПриходныеОрдера КАК ПоступлениеТоваровУслугПриходныеОрдера
			               |			ГДЕ
			               |				ПоступлениеТоваровУслугПриходныеОрдера.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
			               |				И ПоступлениеТоваровУслугПриходныеОрдера.Ссылка.Проведен
			               |				И ПоступлениеТоваровУслугПриходныеОрдера.Ссылка.ВидОперации = &ВидОперацииПоступления)
			               |	И ПриходныйОрдерСклад.Проведен
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	ПоступлениеТоваровУслугПриходныеОрдера.Ссылка
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугТовары.Ссылка.Дата, ДЕНЬ) КАК Дата,
			               |	ЕСТЬNULL(ТаблицаСкладов.Склад, ""!!!Склад неопределен"") КАК Склад,
			               |	""Поступление от поставщика"" КАК ВидДанных,
			               |	ЕСТЬNULL(ФинансовыйОборотыДтКтИзлишки.КоличествоОборотДт, 0) КАК Излишки,
			               |	ЕСТЬNULL(ФинансовыйОборотыДтКтИзлишки.СуммаОборот, 0) КАК СуммаИзлишки,
			               |	ЕСТЬNULL(ФинансовыйОборотыДтКтНедостача.СуммаОборот, 0) КАК СуммаНедостачи,
			               |	ЕСТЬNULL(ФинансовыйОборотыДтКтНедостача.КоличествоОборотКт, 0) КАК Недостача,
			               |	ПоступлениеТоваровУслугТовары.Номенклатура,
			               |	ПоступлениеТоваровУслугТовары.Ссылка КАК Поступление,
			               |	ВЫБОР
			               |		КОГДА ЕСТЬNULL(ТаблицаСкладов.Склад, ""!!!Склад неопределен"") = ""!!!Склад неопределен""
			               |			ТОГДА &Тип
			               |		ИНАЧЕ ТаблицаСкладов.Склад.Владелец.ТипСтруктурнойЕдиницы
			               |	КОНЕЦ КАК ТипСклада
			               |ПОМЕСТИТЬ ВремТабПриходныйОрдер
			               |ИЗ
			               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ОборотыДтКт(&НачалоПериода, &КонецПериода, Авто, СчетДт = &Счет411, , СчетКт = &Счет441, , СубконтоДт3 = &ОтклонениеВПоступленииТоваров) КАК ФинансовыйОборотыДтКтИзлишки
			               |		ПО ПоступлениеТоваровУслугТовары.Ссылка = ФинансовыйОборотыДтКтИзлишки.Регистратор
			               |			И ПоступлениеТоваровУслугТовары.Номенклатура = ФинансовыйОборотыДтКтИзлишки.СубконтоДт2
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ОборотыДтКт(&НачалоПериода, &КонецПериода, Авто, СчетДт = &Счет441, , СчетКт = &Счет411, , СубконтоКт3 = &ОтклонениеВПоступленииТоваров) КАК ФинансовыйОборотыДтКтНедостача
			               |		ПО ПоступлениеТоваровУслугТовары.Ссылка = ФинансовыйОборотыДтКтНедостача.Регистратор
			               |			И ПоступлениеТоваровУслугТовары.Номенклатура = ФинансовыйОборотыДтКтНедостача.СубконтоКт2
			               |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаСкладов КАК ТаблицаСкладов
			               |		ПО ПоступлениеТоваровУслугТовары.Ссылка = ТаблицаСкладов.Поступление
			               |ГДЕ
			               |	ПоступлениеТоваровУслугТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
			               |	И ПоступлениеТоваровУслугТовары.Ссылка.ВидОперации = &ВидОперацииПоступления
			               |	И ПоступлениеТоваровУслугТовары.Ссылка.Проведен
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ВремТабПриходныйОрдер.Дата,
			               |	ВремТабПриходныйОрдер.Склад,
			               |	ВремТабПриходныйОрдер.ВидДанных,
			               |	ВремТабПриходныйОрдер.Излишки,
			               |	ВремТабПриходныйОрдер.СуммаИзлишки,
			               |	ВремТабПриходныйОрдер.СуммаНедостачи,
			               |	ВремТабПриходныйОрдер.Недостача,
			               |	ВремТабПриходныйОрдер.Номенклатура,
			               |	ВремТабПриходныйОрдер.Поступление,
			               |	ВремТабПриходныйОрдер.ТипСклада
			               |ПОМЕСТИТЬ ТабБезСумм
			               |ИЗ
			               |	ВремТабПриходныйОрдер КАК ВремТабПриходныйОрдер
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ТабБезСумм.Дата,
			               |	ТабБезСумм.Склад,
			               |	ТабБезСумм.ВидДанных,
			               |	ТабБезСумм.Излишки,
			               |	ТабБезСумм.СуммаИзлишки,
			               |	ТабБезСумм.СуммаНедостачи,
			               |	ТабБезСумм.Недостача,
			               |	ТабБезСумм.Номенклатура,
			               |	ТабБезСумм.Поступление,
			               |	ТабБезСумм.ТипСклада
			               |ИЗ
			               |	ТабБезСумм КАК ТабБезСумм
			               |ГДЕ
			               |	(ТабБезСумм.Излишки <> 0
			               |			ИЛИ ТабБезСумм.Недостача <> 0
			               |			ИЛИ ТабБезСумм.СуммаИзлишки <> 0
			               |			ИЛИ ТабБезСумм.СуммаНедостачи <> 0)
			               |	И ТабБезСумм.Номенклатура = &Номенклатура
			               |	И ТабБезСумм.Склад = &Склад
			               |	И НАЧАЛОПЕРИОДА(ТабБезСумм.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ)";
						   
		
		Запрос.УстановитьПараметр("ВидОперацииПО", Перечисления.ВидыОперацийПриходСкладскойУчет.ОтПоставщика);			   
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));			   
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));			   
		//Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке);	
		Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка);
		Запрос.УстановитьПараметр("Склад", СкладСсылка);
		Запрос.УстановитьПараметр("ВидОперацииПоступления", Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Покупка);
		Запрос.УстановитьПараметр("Счет411", ПланыСчетов.Финансовый.Товары);
		Запрос.УстановитьПараметр("Счет441", ПланыСчетов.Финансовый.ЗатратыТоварныеДляРаспределения);
		Запрос.УстановитьПараметр("ОтклонениеВПоступленииТоваров", Справочники.СтатьиТовародвижения.НайтиПоНаименованию("Отклонение в поступлении товаров"));
		Запрос.УстановитьПараметр("Тип", Перечисления.ТипыСтруктурныхЕдиниц.Склад);
		Запрос.УстановитьПараметр("Дата", НачалоДня(ДатаРасшифровки));
		
		Выгрузка = Запрос.Выполнить().Выгрузить();       
				
		ТабДокумент = Новый ТабличныйДокумент;
		Макет = Отчеты.ОтчетПоПотерямСклада.ПолучитьМакет("РасшифровкаПоступлениеОтПоставщика");
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
		//
		ОбластьШапка.Параметры.Номенклатура = НоменклатураСсылка;
		ОбластьШапка.Параметры.Дата = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
		
		ТабДокумент.Вывести(ОбластьШапка);

		Для Каждого Строка Из Выгрузка Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Строка);
			ОбластьСтрока.Параметры.Склад = Строка.Склад;
			ОбластьСтрока.Параметры.Дата = Формат(Строка.Дата, "ДФ=dd.MM.yyyy");
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;	
	ИначеЕсли ВидДанных = "Возврат поставщику" Тогда
    	Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	РасходныйОрдерСкладТовары.Ссылка.Склад,
		               |	НАЧАЛОПЕРИОДА(РасходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ) КАК Дата,
		               |	РасходныйОрдерСкладТовары.Номенклатура,
		               |	СУММА(РасходныйОрдерСкладТовары.Количество) КАК Количество,
		               |	ВозвратТоваровПоставщикуРасходныеОрдера.Ссылка КАК Поступление,
		               |	РасходныйОрдерСкладТовары.Ссылка КАК Расходник
		               |ПОМЕСТИТЬ ВремТабПриходныйОрдер
		               |ИЗ
		               |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.РасходныеОрдера КАК ВозвратТоваровПоставщикуРасходныеОрдера
		               |		ПО РасходныйОрдерСкладТовары.Ссылка = ВозвратТоваровПоставщикуРасходныеОрдера.РасходныйОрдер
		               |ГДЕ
		               |	РасходныйОрдерСкладТовары.Ссылка.Проведен
		               |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = &ВидОперацииВозврат
		               |	И РасходныйОрдерСкладТовары.Ссылка В
		               |			(ВЫБРАТЬ
		               |				ВозвратТоваровПоставщикуРасходныеОрдера.РасходныйОрдер
		               |			ИЗ
		               |				Документ.ВозвратТоваровПоставщику.РасходныеОрдера КАК ВозвратТоваровПоставщикуРасходныеОрдера
		               |			ГДЕ
		               |				ВозвратТоваровПоставщикуРасходныеОрдера.Ссылка.Проведен
		               |				И ВозвратТоваровПоставщикуРасходныеОрдера.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	РасходныйОрдерСкладТовары.Ссылка.Склад,
		               |	НАЧАЛОПЕРИОДА(РасходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ),
		               |	РасходныйОрдерСкладТовары.Номенклатура,
		               |	ВозвратТоваровПоставщикуРасходныеОрдера.Ссылка,
		               |	РасходныйОрдерСкладТовары.Ссылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	""Возврат поставщику"" КАК ВидДанных,
		               |	ЕСТЬNULL(ВремТабПриходныйОрдер.Склад, ""!!!Склад неопределен"") КАК Склад,
		               |	ЕСТЬNULL(ВремТабПриходныйОрдер.Дата, НАЧАЛОПЕРИОДА(ВозвратТоваровПоставщикуТовары.Ссылка.Дата, ДЕНЬ)) КАК Дата,
		               |	ЕСТЬNULL(ВремТабПриходныйОрдер.Номенклатура, ВозвратТоваровПоставщикуТовары.Номенклатура) КАК Номенклатура,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ВремТабПриходныйОрдер.Количество, 0) > ЕСТЬNULL(ВозвратТоваровПоставщикуТовары.Количество, 0)
		               |			ТОГДА ЕСТЬNULL(ВремТабПриходныйОрдер.Количество, 0) - ЕСТЬNULL(ВозвратТоваровПоставщикуТовары.Количество, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Недостача,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ВремТабПриходныйОрдер.Количество, 0) < ЕСТЬNULL(ВозвратТоваровПоставщикуТовары.Количество, 0)
		               |			ТОГДА ЕСТЬNULL(ВозвратТоваровПоставщикуТовары.Количество, 0) - ЕСТЬNULL(ВремТабПриходныйОрдер.Количество, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Излишки,
		               |	ВремТабПриходныйОрдер.Расходник,
		               |	ВозвратТоваровПоставщикуТовары.Ссылка КАК Возврат
		               |ПОМЕСТИТЬ ТабБезСумм
		               |ИЗ
		               |	ВремТабПриходныйОрдер КАК ВремТабПриходныйОрдер
		               |		ПОЛНОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
		               |		ПО ВремТабПриходныйОрдер.Номенклатура = ВозвратТоваровПоставщикуТовары.Номенклатура
		               |			И ВремТабПриходныйОрдер.Поступление = ВозвратТоваровПоставщикуТовары.Ссылка
		               |ГДЕ
		               |	ВозвратТоваровПоставщикуТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		               |	И ВозвратТоваровПоставщикуТовары.Ссылка.Проведен
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТабБезСумм.ВидДанных,
		               |	ТабБезСумм.Недостача,
		               |	ТабБезСумм.Излишки,
		               |	ТабБезСумм.Недостача * ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0) КАК СуммаНедостачи,
		               |	ТабБезСумм.Излишки * ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0) КАК СуммаИзлишки,
		               |	ТабБезСумм.Склад,
		               |	ТабБезСумм.Дата,
		               |	ТабБезСумм.Номенклатура,
		               |	ТабБезСумм.Склад.Владелец.ТипСтруктурнойЕдиницы КАК ТипСклада,
		               |	ТабБезСумм.Расходник,
		               |	ТабБезСумм.Возврат
		               |ИЗ
		               |	ТабБезСумм КАК ТабБезСумм
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьТоваров.СрезПоследних(&КонецПериода, ) КАК СебестоимостьТоваровСрезПоследних
		               |		ПО ТабБезСумм.Номенклатура = СебестоимостьТоваровСрезПоследних.Номенклатура
		               |ГДЕ
		               |	(ТабБезСумм.Недостача <> 0
		               |			ИЛИ ТабБезСумм.Излишки <> 0)
		               |	И ТабБезСумм.Склад = &Склад
		               |	И ТабБезСумм.Номенклатура = &Номенклатура
		               |	И НАЧАЛОПЕРИОДА(ТабБезСумм.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ)";
		
		Запрос.УстановитьПараметр("ВидОперацииВозврат", Перечисления.ВидыОперацийРасходСкладскойУчет.ВозвратПоставщику);			   
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));			   
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));			   
		//Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке);	
		Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка);
		Запрос.УстановитьПараметр("Склад", СкладСсылка);
		Запрос.УстановитьПараметр("Дата", ДатаРасшифровки);
		
		Выгрузка = Запрос.Выполнить().Выгрузить();       
				
		ТабДокумент = Новый ТабличныйДокумент;
		Макет = Отчеты.ОтчетПоПотерямСклада.ПолучитьМакет("РасшифровкаВозвратПоставщику");
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
		//
		ОбластьШапка.Параметры.Номенклатура = НоменклатураСсылка;
		ОбластьШапка.Параметры.Дата = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
		
		ТабДокумент.Вывести(ОбластьШапка);

		Для Каждого Строка Из Выгрузка Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Строка);
			ОбластьСтрока.Параметры.Склад = Строка.Склад;
			ОбластьСтрока.Параметры.Дата = Формат(Строка.Дата, "ДФ=dd.MM.yyyy");
			ТабДокумент.Вывести(ОбластьСтрока);
		КонецЦикла;
	Иначе
		Возврат Новый ТабличныйДокумент;	
	КонецЕсли;
	
	Возврат ТабДокумент;	
КонецФункции

&НаСервере
Функция Расшифровать_ПоТТ(Расшифровка)
	
	Данные = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	//СтатьяДР_Код = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[1].Значение);
	//СтатьяДР_Наименование = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение);
	
	ПараметрПериод = Данные.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПериодОтчета"));
	
	НачалоПериода = ПараметрПериод.Значение.ДатаНачала;
	КонецПериода  = ПараметрПериод.Значение.ДатаОкончания;

	ПоляРасшифровки = ТиповыеОтчеты.ПолучитьМассивПолейРасшифровки(Расшифровка, Данные);
	
	Для Каждого ЭлементРасшифровка Из ПоляРасшифровки Цикл
		Если ТипЗнч(ЭлементРасшифровка) = Тип("ЗначениеПоляРасшифровкиКомпоновкиДанных") Тогда
			Если НРег(ЭлементРасшифровка.Поле) = "номенклатура" Тогда
				НоменклатураСсылка = ЭлементРасшифровка.Значение;
			ИначеЕсли НРег(ЭлементРасшифровка.Поле) = "видданных" Тогда
				ВидДанных = ЭлементРасшифровка.Значение;
			ИначеЕсли НРег(ЭлементРасшифровка.Поле) = "тт" Тогда
				ТтСсылка = ЭлементРасшифровка.Значение;	
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
	//НоменклатураСсылка = Данные.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	Если НЕ ТипЗнч(НоменклатураСсылка) = Тип("СправочникСсылка.Номенклатура") Тогда
		Возврат Новый ТабличныйДокумент;	
	КонецЕсли;
	//ВидДанных = Данные.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;
	//СкладСсылка = Данные.Элементы[Данные.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	//ДатаРасшифровки = Данные.Элементы[Данные.Элементы[Данные.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	//ВыбранноеЗначение =  Данные.Элементы[Расшифровка].ПолучитьПоля()[0].Значение;
	
	//ВидДанных = Данные.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;
	//СкладСсылка = Данные.Элементы[Данные.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	//ДатаРасшифровки = Данные.Элементы[Данные.Элементы[Данные.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	//ВыбранноеЗначение =  Данные.Элементы[Расшифровка].ПолучитьПоля()[0].Значение;

	Если ВидДанных = "Отгрузка в ТТ" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	РасходныйОрдерСкладТовары.Номенклатура КАК Номенклатура,
		               |	МАКСИМУМ(РасходныйОрдерСкладТовары.Ссылка.Склад) КАК Склад,
		               |	РасходныйОрдерСкладТовары.Ссылка.Получатель КАК ТТ,
		               |	НАЧАЛОПЕРИОДА(ВЫБОР
		               |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ, ДЕНЬ) КАК Дата
		               |ПОМЕСТИТЬ ТЗ_СкладыИзРасходников
		               |ИЗ
		               |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		               |ГДЕ
		               |	ВЫБОР
		               |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ МЕЖДУ ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, -5) И &КонецПериода
		               |	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		               |	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		               |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
		               |	И РасходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	РасходныйОрдерСкладТовары.Номенклатура,
		               |	РасходныйОрдерСкладТовары.Ссылка.Получатель,
		               |	НАЧАЛОПЕРИОДА(ВЫБОР
		               |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |		КОНЕЦ, ДЕНЬ)
		               |
		               |ОБЪЕДИНИТЬ ВСЕ
		               |
		               |ВЫБРАТЬ
		               |	ПриходныйОрдерСкладТовары.Номенклатура,
		               |	МАКСИМУМ(ПриходныйОрдерСкладТовары.Ссылка.Склад),
		               |	ЕСТЬNULL(ПриходныйОрдерСкладТовары.Ссылка.Поставщик, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)),
		               |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ)
		               |ИЗ
		               |	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		               |ГДЕ
		               |	ПриходныйОрдерСкладТовары.Ссылка.Проведен
		               |	И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ИзТорговойТочки)
		               |	И ПриходныйОрдерСкладТовары.Ссылка.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, -5) И &КонецПериода
		               |	И ПриходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		               |	И ЛОЖЬ
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ПриходныйОрдерСкладТовары.Номенклатура,
		               |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ),
		               |	ЕСТЬNULL(ПриходныйОрдерСкладТовары.Ссылка.Поставщик, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_СкладыИзРасходников.Номенклатура,
		               |	ТЗ_СкладыИзРасходников.Склад,
		               |	ТЗ_СкладыИзРасходников.ТТ,
		               |	ТЗ_СкладыИзРасходников.Дата
		               |ПОМЕСТИТЬ ТЗ_СкладыСвернутые
		               |ИЗ
		               |	ТЗ_СкладыИзРасходников КАК ТЗ_СкладыИзРасходников
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ТЗ_СкладыИзРасходников.Номенклатура,
		               |	ТЗ_СкладыИзРасходников.ТТ,
		               |	ТЗ_СкладыИзРасходников.Дата,
		               |	ТЗ_СкладыИзРасходников.Склад
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.СтруктурнаяЕдиница КАК ТорговаяТочка,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот КАК Количество,
		               |	НАЧАЛОПЕРИОДА(ДвиженияТоваровПоЛистамУчетаОбороты.Период, ДЕНЬ) КАК День
		               |ПОМЕСТИТЬ ВТ_Полученные
		               |ИЗ
		               |	РегистрНакопления.ДвиженияТоваровПоЛистамУчета.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			День,
		               |			ВидДвиженияТовара = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.Поступление)
		               |				И СтруктурнаяЕдиница = &ТТ
		               |				И НЕ Номенклатура В
		               |						(ВЫБРАТЬ
		               |							Номенклатура.Ссылка
		               |						ИЗ
		               |							Справочник.Номенклатура КАК Номенклатура
		               |						ГДЕ
		               |							Номенклатура.СлужебныйТовар = ИСТИНА)
		               |				И Номенклатура = &Номенклатура) КАК ДвиженияТоваровПоЛистамУчетаОбороты
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ_Полученные.ТорговаяТочка,
		               |	ВТ_Полученные.Номенклатура,
		               |	СУММА(ВТ_Полученные.Количество) КАК Количество,
		               |	ВТ_Полученные.День
		               |ПОМЕСТИТЬ ТЗ_ПолученныеСвернутые
		               |ИЗ
		               |	ВТ_Полученные КАК ВТ_Полученные
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВТ_Полученные.ТорговаяТочка,
		               |	ВТ_Полученные.Номенклатура,
		               |	ВТ_Полученные.День
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВЗ_Запрос.Номенклатура КАК Номенклатура,
		               |	СУММА(ВЗ_Запрос.Количество) КАК Количество,
		               |	ВЗ_Запрос.ТорговаяТочка КАК ТорговаяТочка,
		               |	ВЗ_Запрос.День
		               |ПОМЕСТИТЬ ВТ_Отправленные
		               |ИЗ
		               |	(ВЫБРАТЬ
		               |		РасходныйОрдерСкладТовары.Номенклатура КАК Номенклатура,
		               |		РасходныйОрдерСкладТовары.Количество КАК Количество,
		               |		РасходныйОрдерСкладТовары.Ссылка.Получатель КАК ТорговаяТочка,
		               |		НАЧАЛОПЕРИОДА(ВЫБОР
		               |				КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |					ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |				ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |			КОНЕЦ, ДЕНЬ) КАК День
		               |	ИЗ
		               |		Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		               |	ГДЕ
		               |		ВЫБОР
		               |				КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		               |					ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		               |				ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		               |			КОНЕЦ МЕЖДУ &НачалоПериода И &КонецПериода
		               |		И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		               |		И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		               |		И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
		               |		И РасходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		               |		И РасходныйОрдерСкладТовары.Ссылка.Получатель = &ТТ
		               |	
		               |	ОБЪЕДИНИТЬ ВСЕ
		               |	
		               |	ВЫБРАТЬ
		               |		ПриходныйОрдерСкладТовары.Номенклатура,
		               |		ПриходныйОрдерСкладТовары.Количество * -1,
		               |		ПриходныйОрдерСкладТовары.Ссылка.Поставщик,
		               |		НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ)
		               |	ИЗ
		               |		Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		               |	ГДЕ
		               |		ПриходныйОрдерСкладТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		               |		И ПриходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		               |		И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ИзТорговойТочки)
		               |		И ПриходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		               |		И ПриходныйОрдерСкладТовары.Ссылка.Поставщик = &ТТ
		               |		И ЛОЖЬ) КАК ВЗ_Запрос
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВЗ_Запрос.Номенклатура,
		               |	ВЗ_Запрос.ТорговаяТочка,
		               |	ВЗ_Запрос.День
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	ТорговаяТочка,
		               |	Номенклатура
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ЕСТЬNULL(ВТ_Отправленные.ТорговаяТочка, ТЗ_ПолученныеСвернутые.ТорговаяТочка) КАК ТорговаяТочка,
		               |	ЕСТЬNULL(ВТ_Отправленные.Номенклатура, ТЗ_ПолученныеСвернутые.Номенклатура) КАК Номенклатура,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ВТ_Отправленные.Количество, 0) > ЕСТЬNULL(ТЗ_ПолученныеСвернутые.Количество, 0)
		               |			ТОГДА ЕСТЬNULL(ВТ_Отправленные.Количество, 0) - ЕСТЬNULL(ТЗ_ПолученныеСвернутые.Количество, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Недостача,
		               |	ВЫБОР
		               |		КОГДА ЕСТЬNULL(ВТ_Отправленные.Количество, 0) < ЕСТЬNULL(ТЗ_ПолученныеСвернутые.Количество, 0)
		               |			ТОГДА ЕСТЬNULL(ТЗ_ПолученныеСвернутые.Количество, 0) - ЕСТЬNULL(ВТ_Отправленные.Количество, 0)
		               |		ИНАЧЕ 0
		               |	КОНЕЦ КАК Излишки,
		               |	ЕСТЬNULL(ВТ_Отправленные.День, ТЗ_ПолученныеСвернутые.День) КАК Дата
		               |ПОМЕСТИТЬ ТЗ_ДанныеБезСумм
		               |ИЗ
		               |	ВТ_Отправленные КАК ВТ_Отправленные
		               |		ПОЛНОЕ СОЕДИНЕНИЕ ТЗ_ПолученныеСвернутые КАК ТЗ_ПолученныеСвернутые
		               |		ПО ВТ_Отправленные.ТорговаяТочка = ТЗ_ПолученныеСвернутые.ТорговаяТочка
		               |			И ВТ_Отправленные.День = ТЗ_ПолученныеСвернутые.День
		               |			И ВТ_Отправленные.Номенклатура = ТЗ_ПолученныеСвернутые.Номенклатура
		               |ГДЕ
		               |	ЕСТЬNULL(ВТ_Отправленные.Количество, 0) - ЕСТЬNULL(ТЗ_ПолученныеСвернутые.Количество, 0) <> 0
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_ДанныеБезСумм.ТорговаяТочка КАК ТТ,
		               |	ТЗ_ДанныеБезСумм.Номенклатура,
		               |	ТЗ_ДанныеБезСумм.Недостача,
		               |	ТЗ_ДанныеБезСумм.Излишки,
		               |	ТЗ_ДанныеБезСумм.Недостача КАК СуммаНедостачи,
		               |	ТЗ_ДанныеБезСумм.Излишки КАК СуммаИзлишки,
		               |	ТЗ_ДанныеБезСумм.Дата,
		               |	МАКСИМУМ(ТЗ_СкладыСвернутые.Дата) КАК ДатаПредыдущая
		               |ПОМЕСТИТЬ ТЗ_ДанныеБезСуммСПредыдущейДатой
		               |ИЗ
		               |	ТЗ_ДанныеБезСумм КАК ТЗ_ДанныеБезСумм
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_СкладыСвернутые КАК ТЗ_СкладыСвернутые
		               |		ПО ТЗ_ДанныеБезСумм.ТорговаяТочка = ТЗ_СкладыСвернутые.ТТ
		               |			И ТЗ_ДанныеБезСумм.Номенклатура = ТЗ_СкладыСвернутые.Номенклатура
		               |			И ТЗ_ДанныеБезСумм.Дата >= ТЗ_СкладыСвернутые.Дата
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ТЗ_ДанныеБезСумм.ТорговаяТочка,
		               |	ТЗ_ДанныеБезСумм.Номенклатура,
		               |	ТЗ_ДанныеБезСумм.Дата,
		               |	ТЗ_ДанныеБезСумм.Недостача,
		               |	ТЗ_ДанныеБезСумм.Излишки,
		               |	ТЗ_ДанныеБезСумм.Недостача,
		               |	ТЗ_ДанныеБезСумм.Излишки
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.ТТ,
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.Номенклатура,
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.Недостача,
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.Излишки,
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.СуммаНедостачи,
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.СуммаИзлишки,
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой.Дата,
		               |	ЕСТЬNULL(ТЗ_СкладыСвернутые.Склад, ""!!!Склад неопределен"") КАК Склад
		               |ПОМЕСТИТЬ ТЗ_ДанныеБезСуммСоСкладом
		               |ИЗ
		               |	ТЗ_ДанныеБезСуммСПредыдущейДатой КАК ТЗ_ДанныеБезСуммСПредыдущейДатой
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_СкладыСвернутые КАК ТЗ_СкладыСвернутые
		               |		ПО ТЗ_ДанныеБезСуммСПредыдущейДатой.ТТ = ТЗ_СкладыСвернутые.ТТ
		               |			И ТЗ_ДанныеБезСуммСПредыдущейДатой.Номенклатура = ТЗ_СкладыСвернутые.Номенклатура
		               |			И ТЗ_ДанныеБезСуммСПредыдущейДатой.ДатаПредыдущая = ТЗ_СкладыСвернутые.Дата
		               |;
					   

						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	ВЫРАЗИТЬ(РасходныйОрдерСкладТовары.Получатель КАК Справочник.СтруктурныеЕдиницы) КАК ТорговаяТочка,
						|	ВЫРАЗИТЬ(РасходныйОрдерСкладТовары.Получатель КАК Справочник.СтруктурныеЕдиницы).ТипРозничнойТочки КАК ТипРозничнойТочки,
						|	МАКСИМУМ(ВЫБОР
						|			КОГДА РасходныйОрдерСкладТовары.ПриемкаВМагазинеБезПересчета < 0
						|				ТОГДА -РасходныйОрдерСкладТовары.ПриемкаВМагазинеБезПересчета
						|			ИНАЧЕ РасходныйОрдерСкладТовары.ПриемкаВМагазинеБезПересчета
						|		КОНЕЦ) КАК ПриемкаВМагазинеБезПересчета,
						|	РасходныйОрдерСкладТовары.ДатаРаспределения,
						|	МАКСИМУМ(ВЫРАЗИТЬ(РасходныйОрдерСкладТовары.Получатель КАК Справочник.СтруктурныеЕдиницы).ПриемкаТовараБезПересчета) КАК ПриемкаТовараБезПересчета
						|ПОМЕСТИТЬ втТипыМагазинов
						|ИЗ
						|	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСкладТовары
						|ГДЕ
						|	ВЫБОР
						|			КОГДА РасходныйОрдерСкладТовары.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
						|				ТОГДА РасходныйОрдерСкладТовары.ДатаРаспределения
						|			ИНАЧЕ РасходныйОрдерСкладТовары.Дата
						|		КОНЕЦ МЕЖДУ ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, 0) И &КонецПериода
						|	И РасходныйОрдерСкладТовары.Проведен = ИСТИНА
						|	И РасходныйОрдерСкладТовары.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
						|	И РасходныйОрдерСкладТовары.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)

						|СГРУППИРОВАТЬ ПО
						|	ВЫРАЗИТЬ(РасходныйОрдерСкладТовары.Получатель КАК Справочник.СтруктурныеЕдиницы),
						|	ВЫРАЗИТЬ(РасходныйОрдерСкладТовары.Получатель КАК Справочник.СтруктурныеЕдиницы).ТипРозничнойТочки,
						|	РасходныйОрдерСкладТовары.ДатаРаспределения
						|;

						|////////////////////////////////////////////////////////////////////////////////
						|ВЫБРАТЬ
						|	втТипыМагазинов.ТорговаяТочка,
						|	втТипыМагазинов.ДатаРаспределения
						|ПОМЕСТИТЬ втМагазиныОтбор
						|ИЗ
						|	втТипыМагазинов КАК втТипыМагазинов
						|ГДЕ
						|	ВЫБОР
						|			КОГДА &ОтборПоТипуМагазина = ""Магазины с пересчетом""
						|				ТОГДА втТипыМагазинов.ПриемкаТовараБезПересчета = ЛОЖЬ
						|			КОГДА &ОтборПоТипуМагазина = ""Магазины без пересчета (с контрольным пересчетом в магазине)""
						|				ТОГДА втТипыМагазинов.ПриемкаТовараБезПересчета = ИСТИНА
						|						И втТипыМагазинов.ПриемкаВМагазинеБезПересчета = 2
						|			КОГДА &ОтборПоТипуМагазина = ""Магазины без пересчета""
						|				ТОГДА втТипыМагазинов.ПриемкаТовараБезПересчета = ИСТИНА
						|						И втТипыМагазинов.ПриемкаВМагазинеБезПересчета <> 2 иначе истина
						|		КОНЕЦ
						|;
					   
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_ДанныеБезСуммСоСкладом.ТТ,
		               |	ТЗ_ДанныеБезСуммСоСкладом.Номенклатура,
		               |	ТЗ_ДанныеБезСуммСоСкладом.Недостача,
		               |	ТЗ_ДанныеБезСуммСоСкладом.Излишки,
		               |	ТЗ_ДанныеБезСуммСоСкладом.СуммаНедостачи * ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0) КАК СуммаНедостачи,
		               |	ТЗ_ДанныеБезСуммСоСкладом.СуммаИзлишки * ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0) КАК СуммаИзлишки,
		               |	ТЗ_ДанныеБезСуммСоСкладом.Дата КАК Дата,
		               |	ВЫБОР
		               |		КОГДА ТЗ_ДанныеБезСуммСоСкладом.Склад = ""!!!Склад неопределен""
		               |			ТОГДА ЕСТЬNULL(СкладыНоменклатурыИТорговыхТочекСрезПоследних.Склад, ""!!!Склад неопределен"")
		               |		ИНАЧЕ ТЗ_ДанныеБезСуммСоСкладом.Склад
		               |	КОНЕЦ КАК Склад,
		               |	""Отгрузка в ТТ"" КАК ВидДанных,
		               |	ВЫБОР
		               |		КОГДА ТЗ_ДанныеБезСуммСоСкладом.Склад = ""!!!Склад неопределен""
		               |			ТОГДА &Тип
		               |		ИНАЧЕ ТЗ_ДанныеБезСуммСоСкладом.Склад.Владелец.ТипСтруктурнойЕдиницы
		               |	КОНЕЦ КАК ТипСклада
		               |ИЗ
		               |	ТЗ_ДанныеБезСуммСоСкладом КАК ТЗ_ДанныеБезСуммСоСкладом
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьТоваров.СрезПоследних(&КонецПериода, ) КАК СебестоимостьТоваровСрезПоследних
		               |		ПО ТЗ_ДанныеБезСуммСоСкладом.Номенклатура = СебестоимостьТоваровСрезПоследних.Номенклатура
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СкладыНоменклатурыИТорговыхТочек.СрезПоследних(&КонецПериода, Номенклатура = &Номенклатура) КАК СкладыНоменклатурыИТорговыхТочекСрезПоследних
		               |		ПО ТЗ_ДанныеБезСуммСоСкладом.ТТ = СкладыНоменклатурыИТорговыхТочекСрезПоследних.ТорговаяТочка
		               |			И ТЗ_ДанныеБезСуммСоСкладом.Номенклатура = СкладыНоменклатурыИТорговыхТочекСрезПоследних.Номенклатура
						|			   		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМагазиныОтбор КАК втМагазиныОтбор
						|ПО ТЗ_ДанныеБезСуммСоСкладом.Дата = втМагазиныОтбор.ДатаРаспределения
						|И ТЗ_ДанныеБезСуммСоСкладом.ТТ = втМагазиныОтбор.ТорговаяТочка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Дата";
        //АК БЕЛН 29.09.2017+
		ПараметрТипПересчета = Данные.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ОтборПоТипуМагазина")).Значение;
		Запрос.УстановитьПараметр("ОтборПоТипуМагазина", ПараметрТипПересчета);		
        //АК БЕЛН 29.09.2017-
		//Запрос.УстановитьПараметр("ТабПоступило", ТаблицаДанныхПоПоступлению);//Запрос.УстановитьПараметр("ДатаНач", НачалоДня(НачалоПериода));	
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));			   
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));	
		Запрос.УстановитьПараметр("ДатаНач", НачалоДня(НачалоПериода));			   
		Запрос.УстановитьПараметр("ДатаКон", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));			   
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("Номенклатура", НоменклатураСсылка);
		//Запрос.УстановитьПараметр("Склад", СкладСсылка);
		Запрос.УстановитьПараметр("ТТ", ТтСсылка);
		//Запрос.УстановитьПараметр("Дата", НачалоДня(ДатаРасшифровки));
		Запрос.УстановитьПараметр("ВыбранноеЗначение", 10);
		Запрос.УстановитьПараметр("Тип", Перечисления.ТипыСтруктурныхЕдиниц.Склад);
		
		Выгрузка = Запрос.Выполнить().Выгрузить();    
		 Запрос.Текст = "ВЫБРАТЬ
		                |	РасходныйОрдерСкладТовары.Номенклатура КАК Номенклатура,
		                |	МАКСИМУМ(РасходныйОрдерСкладТовары.Ссылка.Склад) КАК Склад,
		                |	РасходныйОрдерСкладТовары.Ссылка.Получатель КАК ТТ,
		                |	НАЧАЛОПЕРИОДА(ВЫБОР
		                |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		                |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		                |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		                |		КОНЕЦ, ДЕНЬ) КАК Дата
		                |ПОМЕСТИТЬ ТЗ_СкладыИзРасходников
		                |ИЗ
		                |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		                |ГДЕ
		                |	ВЫБОР
		                |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		                |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		                |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		                |		КОНЕЦ МЕЖДУ ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, -5) И &КонецПериода
		                |	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		                |	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		                |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
		                |	И РасходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	РасходныйОрдерСкладТовары.Номенклатура,
		                |	РасходныйОрдерСкладТовары.Ссылка.Получатель,
		                |	НАЧАЛОПЕРИОДА(ВЫБОР
		                |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		                |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		                |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		                |		КОНЕЦ, ДЕНЬ)
		                |
		                |ОБЪЕДИНИТЬ ВСЕ
		                |
		                |ВЫБРАТЬ
		                |	ПриходныйОрдерСкладТовары.Номенклатура,
		                |	МАКСИМУМ(ПриходныйОрдерСкладТовары.Ссылка.Склад),
		                |	ЕСТЬNULL(ПриходныйОрдерСкладТовары.Ссылка.Поставщик, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)),
		                |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ)
		                |ИЗ
		                |	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		                |ГДЕ
		                |	ПриходныйОрдерСкладТовары.Ссылка.Проведен
		                |	И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ИзТорговойТочки)
		                |	И ПриходныйОрдерСкладТовары.Ссылка.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, -5) И &КонецПериода
		                |	И ПриходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ПриходныйОрдерСкладТовары.Номенклатура,
		                |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ),
		                |	ЕСТЬNULL(ПриходныйОрдерСкладТовары.Ссылка.Поставщик, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	РасходныйОрдерСкладТовары.Ссылка.Получатель КАК ТТ,
		                |	НАЧАЛОПЕРИОДА(ВЫБОР
		                |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		                |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		                |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		                |		КОНЕЦ, ДЕНЬ) КАК Дата,
		                |	РасходныйОрдерСкладТовары.Ссылка КАК Документ,
		                |	РасходныйОрдерСкладТовары.Номенклатура
		                |ПОМЕСТИТЬ ТЗ_ИсходныеДанные
		                |ИЗ
		                |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		                |ГДЕ
		                |	НАЧАЛОПЕРИОДА(ВЫБОР
		                |				КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		                |					ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		                |				ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		                |			КОНЕЦ, ДЕНЬ) В (&ПериодыДни)
		                |	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		                |	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		                |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
		                |	И РасходныйОрдерСкладТовары.Ссылка.Получатель В(&Получатели)
		                |	И РасходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	РасходныйОрдерСкладТовары.Ссылка,
		                |	РасходныйОрдерСкладТовары.Ссылка.Получатель,
		                |	НАЧАЛОПЕРИОДА(ВЫБОР
		                |			КОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения <> ДАТАВРЕМЯ(1, 1, 1)
		                |				ТОГДА РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения
		                |			ИНАЧЕ РасходныйОрдерСкладТовары.Ссылка.Дата
		                |		КОНЕЦ, ДЕНЬ),
		                |	РасходныйОрдерСкладТовары.Номенклатура
		                |
		                |ОБЪЕДИНИТЬ ВСЕ
		                |
		                |ВЫБРАТЬ
		                |	ПриходныйОрдерСкладТовары.Ссылка.Поставщик,
		                |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ),
		                |	ПриходныйОрдерСкладТовары.Ссылка,
		                |	ПриходныйОрдерСкладТовары.Номенклатура
		                |ИЗ
		                |	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		                |ГДЕ
		                |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ) В (&ПериодыДни)
		                |	И ПриходныйОрдерСкладТовары.Ссылка.Поставщик В(&Получатели)
		                |	И ПриходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		                |	И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ИзТорговойТочки)
		                |	И ПриходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ПриходныйОрдерСкладТовары.Ссылка.Поставщик,
		                |	НАЧАЛОПЕРИОДА(ПриходныйОрдерСкладТовары.Ссылка.Дата, ДЕНЬ),
		                |	ПриходныйОрдерСкладТовары.Ссылка,
		                |	ПриходныйОрдерСкладТовары.Номенклатура
		                |
		                |ОБЪЕДИНИТЬ ВСЕ
		                |
		                |ВЫБРАТЬ
		                |	ДвиженияТоваровПоЛистамУчета.СтруктурнаяЕдиница,
		                |	НАЧАЛОПЕРИОДА(ДвиженияТоваровПоЛистамУчета.Период, ДЕНЬ),
		                |	ДвиженияТоваровПоЛистамУчета.Регистратор,
		                |	ДвиженияТоваровПоЛистамУчета.Номенклатура
		                |ИЗ
		                |	РегистрНакопления.ДвиженияТоваровПоЛистамУчета КАК ДвиженияТоваровПоЛистамУчета
		                |ГДЕ
		                |	ДвиженияТоваровПоЛистамУчета.Период В(&ПериодыДни)
		                |	И ДвиженияТоваровПоЛистамУчета.Номенклатура = &Номенклатура
		                |	И ДвиженияТоваровПоЛистамУчета.СтруктурнаяЕдиница В(&Получатели)
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ТЗ_СкладыИзРасходников.Дата КАК ДатаПредыдущая,
		                |	ТЗ_ИсходныеДанные.ТТ,
		                |	ТЗ_ИсходныеДанные.Дата КАК Дата,
		                |	ТЗ_ИсходныеДанные.Документ,
		                |	ТЗ_ИсходныеДанные.Номенклатура
		                |ПОМЕСТИТЬ ТЗ_ИсходныеДанныеПромежуточная
		                |ИЗ
		                |	ТЗ_ИсходныеДанные КАК ТЗ_ИсходныеДанные
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_СкладыИзРасходников КАК ТЗ_СкладыИзРасходников
		                |		ПО ТЗ_ИсходныеДанные.ТТ = ТЗ_СкладыИзРасходников.ТТ
		                |			И ТЗ_ИсходныеДанные.Дата >= ТЗ_СкладыИзРасходников.Дата
		                |			И ТЗ_ИсходныеДанные.Номенклатура >= ТЗ_СкладыИзРасходников.Номенклатура
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ТЗ_ИсходныеДанныеПромежуточная.ТТ,
		                |	ТЗ_ИсходныеДанныеПромежуточная.Дата КАК Дата,
		                |	ТЗ_ИсходныеДанныеПромежуточная.Документ,
		                |	ТЗ_ИсходныеДанныеПромежуточная.Номенклатура,
		                |	ВЫБОР
		                |		КОГДА ЕСТЬNULL(ТЗ_СкладыИзРасходников.Склад, ""!!!Склад неопределен"") = ""!!!Склад неопределен""
		                |			ТОГДА ЕСТЬNULL(СкладыНоменклатурыИТорговыхТочекСрезПоследних.Склад, ""!!!Склад неопределен"")
		                |		ИНАЧЕ ЕСТЬNULL(ТЗ_СкладыИзРасходников.Склад, ""!!!Склад неопределен"")
		                |	КОНЕЦ КАК Склад
		                |ИЗ
		                |	ТЗ_ИсходныеДанныеПромежуточная КАК ТЗ_ИсходныеДанныеПромежуточная
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_СкладыИзРасходников КАК ТЗ_СкладыИзРасходников
		                |		ПО ТЗ_ИсходныеДанныеПромежуточная.ДатаПредыдущая = ТЗ_СкладыИзРасходников.Дата
		                |			И ТЗ_ИсходныеДанныеПромежуточная.Номенклатура = ТЗ_СкладыИзРасходников.Номенклатура
		                |			И ТЗ_ИсходныеДанныеПромежуточная.ТТ = ТЗ_СкладыИзРасходников.ТТ
		                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СкладыНоменклатурыИТорговыхТочек.СрезПоследних(&КонецПериода, Номенклатура = &Номенклатура) КАК СкладыНоменклатурыИТорговыхТочекСрезПоследних
		                |		ПО ТЗ_ИсходныеДанныеПромежуточная.ТТ = СкладыНоменклатурыИТорговыхТочекСрезПоследних.ТорговаяТочка
		                |			И ТЗ_ИсходныеДанныеПромежуточная.Номенклатура = СкладыНоменклатурыИТорговыхТочекСрезПоследних.Номенклатура
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ТЗ_ИсходныеДанныеПромежуточная.ТТ,
		                |	ТЗ_ИсходныеДанныеПромежуточная.Дата,
		                |	ТЗ_ИсходныеДанныеПромежуточная.Документ,
		                |	ТЗ_ИсходныеДанныеПромежуточная.Номенклатура,
		                |	ВЫБОР
		                |		КОГДА ЕСТЬNULL(ТЗ_СкладыИзРасходников.Склад, ""!!!Склад неопределен"") = ""!!!Склад неопределен""
		                |			ТОГДА ЕСТЬNULL(СкладыНоменклатурыИТорговыхТочекСрезПоследних.Склад, ""!!!Склад неопределен"")
		                |		ИНАЧЕ ЕСТЬNULL(ТЗ_СкладыИзРасходников.Склад, ""!!!Склад неопределен"")
		                |	КОНЕЦ
		                |
		                |УПОРЯДОЧИТЬ ПО
		                |	Дата";
						
					
		Запрос.УстановитьПараметр("Получатели", Выгрузка.ВыгрузитьКолонку("ТТ"));
		Запрос.УстановитьПараметр("Склады", Выгрузка.ВыгрузитьКолонку("Склад"));
		
		МассивДаты = Выгрузка.ВыгрузитьКолонку("Дата");
		МаксДата = '00010101';
		МинДата = '39990101';
		Для Каждого ЭлементДата Из МассивДаты Цикл
			МаксДата = Макс(МаксДата, ЭлементДата);
			МинДата = Мин(МинДата, ЭлементДата);
		КонецЦикла;
		Запрос.УстановитьПараметр("ПериодыДни", МассивДаты);
		
		ВыгрузкаДокументов = Запрос.Выполнить().Выгрузить();
		
		ЗапросЛисты = Новый Запрос();
		ЗапросЛисты.УстановитьПараметр("ДатаНач", НачалоДня(МинДата));
		ЗапросЛисты.УстановитьПараметр("ДатаКон", КонецДня(МаксДата));
		ЗапросЛисты.Текст = "ВЫБРАТЬ
		                    |	ЛистУчета.Ссылка,
		                    |	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) КАК Дата,
		                    |	ЛистУчета.ТорговаяТочка
		                    |ИЗ
		                    |	Документ.ЛистУчета КАК ЛистУчета
		                    |ГДЕ
		                    |	ЛистУчета.Дата МЕЖДУ &ДатаНач И &ДатаКон";
							
		ТабЛУ = ЗапросЛисты.Выполнить().Выгрузить();
		
		ТабДокумент = Новый ТабличныйДокумент;
		Макет = Отчеты.ОтчетПоПотерямСклада.ПолучитьМакет("РасшифровкаОтгрузкаВТТ");
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьСтрокаДок = Макет.ПолучитьОбласть("СтрокаДок");
		ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
		//
		ОбластьШапка.Параметры.Номенклатура = НоменклатураСсылка;
		ОбластьШапка.Параметры.Дата = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
		
		ТабДокумент.Вывести(ОбластьШапка);

		Для Каждого Строка Из Выгрузка Цикл
			ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры, Строка);
			ОбластьСтрока.Параметры.Склад = Строка.Склад;
			ОбластьСтрока.Параметры.Дата = Формат(Строка.Дата, "ДФ=dd.MM.yyyy");
			//ОбластьСтрока.Параметры.Документ = "";
			ТабДокумент.Вывести(ОбластьСтрока);
			
			ОтборСтруктура = Новый Структура;
			ОтборСтруктура.Вставить("ТТ", Строка.ТТ);
			ОтборСтруктура.Вставить("Склад", Строка.Склад);
			ОтборСтруктура.Вставить("Дата", Строка.Дата);
			ОтборСтруктура.Вставить("Номенклатура", Строка.Номенклатура);

			//ОбластьСтрока.Параметры.Дата = "";	
			//ОбластьСтрока.Параметры.ТТ = "";	
			//ОбластьСтрока.Параметры.Документ = "";				
			//ОбластьСтрока.Параметры.Склад = "";	
			//ОбластьСтрока.Параметры.Недостача = "";	
			//ОбластьСтрока.Параметры.Излишки = "";	
			//ОбластьСтрока.Параметры.СуммаНедостачи = "";	
			//ОбластьСтрока.Параметры.СуммаИзлишки = "";
			
			НайденныеСтроки = ВыгрузкаДокументов.НайтиСтроки(ОтборСтруктура); 
			
			Если НайденныеСтроки.Количество() = 0 Тогда
				ОбластьСтрокаДок.Параметры.Документ = "Не определен";
				ТабДокумент.Вывести(ОбластьСтрокаДок);
			КонецЕсли;
			
			Для Каждого СтрокаДок Из НайденныеСтроки ЦИкл
				ОбластьСтрокаДок.Параметры.Документ = СтрокаДок.Документ;
				ТабДокумент.Вывести(ОбластьСтрокаДок);		
			КонецЦикла;
			
			СтрокиЛУ = ТабЛУ.НайтиСтроки(Новый Структура("Дата, ТорговаяТочка", НачалоДня(Строка.Дата), Строка.ТТ));
			Если СтрокиЛУ.Количество() > 0 Тогда
				ОбластьСтрокаЛУ = Макет.ПолучитьОбласть("СтрокаДокЛист");
				ОбластьСтрокаЛУ.Параметры.Документ = СтрокиЛУ[0].Ссылка;
				ТабДокумент.Вывести(ОбластьСтрокаЛУ);
			КонецЕсли;
		КонецЦикла;
		
		ОбластьИтоги.Параметры.НедостачаИ = Выгрузка.Итог("Недостача");
		ОбластьИтоги.Параметры.ИзлишкиИ = Выгрузка.Итог("Излишки");	
		ОбластьИтоги.Параметры.СуммаНедостачиИ = Выгрузка.Итог("СуммаНедостачи");	
		ОбластьИтоги.Параметры.СуммаИзлишкиИ = Выгрузка.Итог("СуммаИзлишки");
		ТабДокумент.Вывести(ОбластьИтоги);
	
	Иначе
		Возврат Новый ТабличныйДокумент;	
	КонецЕсли;
	
	Возврат ТабДокумент;	
КонецФункции



&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//ПараметрДанных = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ОтклонениеВПоступленииТоваров");
	//ПараметрДанных.Значение = ЗначениеПараметраСтатьяСервер();
	//ПараметрДанных.Использование = Истина;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗначениеПараметраСтатьяСервер()  
	
    Возврат Справочники.СтатьиТовародвижения.НайтиПоНаименованию("Отклонение в поступлении товаров");
			
КонецФункции