Перем тзСоответствиеРольПеревозчик;

// Для корректного функционирования отчёта все роли для которых доступен данный отчёт
// должны иметь полный доступ к константе "ХранилищеОтчётПоВесуПоставокПоРейсам"!

//+++АК sole 2018.06.06 ИП-00018920
Процедура Конструктор()
	
	Хранилище = Константы.ХранилищеОтчётПоВесуПоставокПоРейсам.Получить();
	
	тзСоответствиеРольПеревозчик = Хранилище.Получить();	
	
	Если тзСоответствиеРольПеревозчик  = Неопределено Тогда
		ЗаполнитьХранилищеОтчётПоВесуПоставокПоРейсам();
	КонецЕсли;
	
КонецПроцедуры


//+++АК sole 2018.06.07 ИП-00018920
Функция ПолучитьТекстЗапросаДляФормированияОтчёта()
	
	Перем ТекстЗапроса;
	
	ТекстЗапроса =
"ВЫБРАТЬ
|	МаршрутныйЛистПриходныеОрдера.Ссылка КАК МаршрутныйЛист,
|	СУММА(ЕСТЬNULL(ПриходныйОрдерСкладТовары.ЕдиницаИзмерения.Вес, 0) * ЕСТЬNULL(ПриходныйОрдерСкладТовары.Количество, 0)) КАК Вес,
|	МаршрутныйЛистПриходныеОрдера.Ссылка.СвязанСМаршрутнымЛистом КАК СвязанСМаршрутнымЛистом
|		
|		ПОМЕСТИТЬ втСписокРейсовСВесами
|
|ИЗ Документ.МаршрутныйЛист.ПриходныеОрдера КАК МаршрутныйЛистПриходныеОрдера
|
|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары ПО
|		ПриходныйОрдерСкладТовары.Ссылка = МаршрутныйЛистПриходныеОрдера.ПриходныйОрдер
|
|ГДЕ
|		МаршрутныйЛистПриходныеОрдера.Ссылка.ВидПеревозки = ЗНАЧЕНИЕ(Справочник.АК_ВидыПеревозки.ДоставкаНаСклад)
|	И	МаршрутныйЛистПриходныеОрдера.Ссылка.Дата >= &ДатаНачала  
|	И	МаршрутныйЛистПриходныеОрдера.Ссылка.Дата < &ДатаОкончания
|	И	
|		(
|				МаршрутныйЛистПриходныеОрдера.Ссылка.Перевозчик = &Перевозчик
|			ИЛИ	ЕСТЬNULL(&Перевозчик, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
|		)
|	И	НЕ МаршрутныйЛистПриходныеОрдера.Ссылка.ПометкаУдаления
|
|СГРУППИРОВАТЬ ПО 
|	МаршрутныйЛистПриходныеОрдера.Ссылка
|	
|ИНДЕКСИРОВАТЬ ПО МаршрутныйЛистПриходныеОрдера.Ссылка
|;
|///////////////////////////////////////////////////////////
|ВЫБРАТЬ	
|	втСписокРейсовСВесами.МаршрутныйЛист,
|	втСписокРейсовСВесами.Вес,
|	втСписокРейсовСВесами.Вес + ЕСТЬNULL(СвязанныеРейсы1.Вес, 0) + ЕСТЬNULL(СвязанныеРейсы2.Вес, 0) КАК ОбщийВесРейса
|
|		ПОМЕСТИТЬ втСписокРейсовСОбщимиВесами
|
|ИЗ втСписокРейсовСВесами
|	ЛЕВОЕ СОЕДИНЕНИЕ втСписокРейсовСВесами КАК СвязанныеРейсы1 ПО
|			СвязанныеРейсы1.СвязанСМаршрутнымЛистом = втСписокРейсовСВесами.МаршрутныйЛист
|	
|	ЛЕВОЕ СОЕДИНЕНИЕ втСписокРейсовСВесами КАК СвязанныеРейсы2 ПО
|			СвязанныеРейсы2.МаршрутныйЛист = втСписокРейсовСВесами.СвязанСМаршрутнымЛистом
|		И	СвязанныеРейсы1.СвязанСМаршрутнымЛистом ЕСТЬ NULL
|
|ГДЕ
|		втСписокРейсовСВесами.МаршрутныйЛист.Проведен
|	И	втСписокРейсовСВесами.Вес <> 0
|
|ИНДЕКСИРОВАТЬ ПО втСписокРейсовСВесами.МаршрутныйЛист
|;
|///////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	втСписокРейсовСОбщимиВесами.МаршрутныйЛист,
|	втСписокРейсовСОбщимиВесами.МаршрутныйЛист.МаршрутТранспортныхКомпаний КАК Маршрут,
|	МАКСИМУМ(ТарифыНаДоставкуПоМаршрутуСрезПоследних.Период) КАК Период
|	
|		ПОМЕСТИТЬ втТарифыНаДоставкуПоМаршрутуСрезПоследних
|
|ИЗ втСписокРейсовСОбщимиВесами
|	
|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифыНаДоставкуПоМаршруту.СрезПоследних(&ДатаОкончания) КАК ТарифыНаДоставкуПоМаршрутуСрезПоследних ПО
|			ТарифыНаДоставкуПоМаршрутуСрезПоследних.Маршрут = втСписокРейсовСОбщимиВесами.МаршрутныйЛист.МаршрутТранспортныхКомпаний
|	
|СГРУППИРОВАТЬ ПО
|	втСписокРейсовСОбщимиВесами.МаршрутныйЛист
|		
|ИНДЕКСИРОВАТЬ ПО втСписокРейсовСОбщимиВесами.МаршрутныйЛист
|;
|///////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	втСписокРейсовСОбщимиВесами.МаршрутныйЛист,
|	втТарифыНаДоставкуПоМаршрутуСрезПоследних.Маршрут,
|	втТарифыНаДоставкуПоМаршрутуСрезПоследних.Период,
|	МИНИМУМ(втСписокРейсовСОбщимиВесами.ОбщийВесРейса - ТарифыНаДоставкуПоМаршруту.ВесОт) КАК МинРазницаВеса
|
|		ПОМЕСТИТЬ втСписокРейсовДляПодбораТарифаПоВесу
|			
|ИЗ втТарифыНаДоставкуПоМаршрутуСрезПоследних
|
|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСписокРейсовСОбщимиВесами ПО
|			втСписокРейсовСОбщимиВесами.МаршрутныйЛист = втТарифыНаДоставкуПоМаршрутуСрезПоследних.МаршрутныйЛист	
|
|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТарифыНаДоставкуПоМаршруту КАК ТарифыНаДоставкуПоМаршруту ПО
|			НЕ ТарифыНаДоставкуПоМаршруту.ЕдиныйТариф
|		И	ТарифыНаДоставкуПоМаршруту.Маршрут = втТарифыНаДоставкуПоМаршрутуСрезПоследних.Маршрут
|		И	ТарифыНаДоставкуПоМаршруту.Период = втТарифыНаДоставкуПоМаршрутуСрезПоследних.Период 
|		И	ТарифыНаДоставкуПоМаршруту.ВесОт <= втСписокРейсовСОбщимиВесами.ОбщийВесРейса
|
|СГРУППИРОВАТЬ ПО
|	втСписокРейсовСОбщимиВесами.МаршрутныйЛист,
|	втТарифыНаДоставкуПоМаршрутуСрезПоследних.Маршрут,
|	втТарифыНаДоставкуПоМаршрутуСрезПоследних.Период
|	
|ИНДЕКСИРОВАТЬ ПО втСписокРейсовСОбщимиВесами.МаршрутныйЛист
|;
|///////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	втСписокРейсовСОбщимиВесами.МаршрутныйЛист.Дата КАК Дата,
|	втСписокРейсовСОбщимиВесами.МаршрутныйЛист.Номер,
|	втСписокРейсовСОбщимиВесами.МаршрутныйЛист.Организация КАК Организация,
|	втСписокРейсовДляПодбораТарифаПоВесу.Маршрут,
|	МаршрутыТранспортныхКомпанийПоставщики.Поставщик КАК Поставщик,
|	втСписокРейсовСОбщимиВесами.МаршрутныйЛист.Перевозчик КАК Перевозчик,
|	втСписокРейсовСОбщимиВесами.МаршрутныйЛист,
|	втСписокРейсовСОбщимиВесами.Вес,
|	ТарифыНаДоставкуПоМаршруту.ВесОт,
|	втСписокРейсовСОбщимиВесами.МаршрутныйЛист.Сумма КАК Сумма,
|	ТарифыНаДоставкуПоМаршруту.ВариантРасчетаНДС,
|	ТарифыНаДоставкуПоМаршруту.СтавкаНДС,	
|	втСписокРейсовСОбщимиВесами.МаршрутныйЛист.СуммаНДС КАК СуммаНДС,
|	ТарифыНаДоставкуПоМаршруту.Сумма КАК ЦенаЗаКг,
|	0 КАК ЕдиныйТариф,
|	ТарифыНаДоставкуПоМаршруту.ЦенаЗаКг КАК ТарификацияПоВесу,
|	втСписокРейсовСОбщимиВесами.ОбщийВесРейса
|	
|ИЗ втСписокРейсовДляПодбораТарифаПоВесу
|	
|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСписокРейсовСОбщимиВесами ПО
|			втСписокРейсовСОбщимиВесами.МаршрутныйЛист = втСписокРейсовДляПодбораТарифаПоВесу.МаршрутныйЛист	
|	
|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТарифыНаДоставкуПоМаршруту КАК ТарифыНаДоставкуПоМаршруту ПО
|			НЕ ТарифыНаДоставкуПоМаршруту.ЕдиныйТариф
|		И	ТарифыНаДоставкуПоМаршруту.Маршрут = втСписокРейсовДляПодбораТарифаПоВесу.Маршрут								
|		И	ТарифыНаДоставкуПоМаршруту.Период = втСписокРейсовДляПодбораТарифаПоВесу.Период 
|		И	ТарифыНаДоставкуПоМаршруту.ВесОт <= втСписокРейсовСОбщимиВесами.ОбщийВесРейса
|		И	втСписокРейсовДляПодбораТарифаПоВесу.МинРазницаВеса = (втСписокРейсовСОбщимиВесами.ОбщийВесРейса - ТарифыНаДоставкуПоМаршруту.ВесОт)
|	
|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МаршрутыТранспортныхКомпаний.Поставщики КАК МаршрутыТранспортныхКомпанийПоставщики ПО
|			МаршрутыТранспортныхКомпанийПоставщики.Ссылка = втСписокРейсовДляПодбораТарифаПоВесу.Маршрут
|		И	МаршрутыТранспортныхКомпанийПоставщики.НомерСтроки = 1	
|
|ОБЪЕДИНИТЬ ВСЕ
|
|ВЫБРАТЬ
|	втСписокРейсовСОбщимиВесами.МаршрутныйЛист.Дата,
|	втСписокРейсовСОбщимиВесами.МаршрутныйЛист.Номер,
|	втСписокРейсовСОбщимиВесами.МаршрутныйЛист.Организация КАК Организация,
|	втТарифыНаДоставкуПоМаршрутуСрезПоследних.Маршрут,
|	МаршрутыТранспортныхКомпанийПоставщики.Поставщик КАК Поставщик,
|	втСписокРейсовСОбщимиВесами.МаршрутныйЛист.Перевозчик КАК Перевозчик,
|	втСписокРейсовСОбщимиВесами.МаршрутныйЛист,
|	втСписокРейсовСОбщимиВесами.Вес,
|	ТарифыНаДоставкуПоМаршруту.ВесОт,
|	втСписокРейсовСОбщимиВесами.МаршрутныйЛист.Сумма КАК Сумма,
|	ТарифыНаДоставкуПоМаршруту.ВариантРасчетаНДС,
|	ТарифыНаДоставкуПоМаршруту.СтавкаНДС,	
|	втСписокРейсовСОбщимиВесами.МаршрутныйЛист.СуммаНДС КАК СуммаНДС,
|	0 КАК ЦенаЗаКг,
|	ТарифыНаДоставкуПоМаршруту.Сумма КАК ЕдиныйТариф,
|	ТарифыНаДоставкуПоМаршруту.ЦенаЗаКг КАК ТарификацияПоВесу,
|	втСписокРейсовСОбщимиВесами.ОбщийВесРейса
|	
|
|ИЗ втТарифыНаДоставкуПоМаршрутуСрезПоследних
|
|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСписокРейсовСОбщимиВесами ПО
|			втСписокРейсовСОбщимиВесами.МаршрутныйЛист = втТарифыНаДоставкуПоМаршрутуСрезПоследних.МаршрутныйЛист	
|	
|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТарифыНаДоставкуПоМаршруту КАК ТарифыНаДоставкуПоМаршруту ПО
|			ТарифыНаДоставкуПоМаршруту.ЕдиныйТариф
|		И	ТарифыНаДоставкуПоМаршруту.Маршрут = втТарифыНаДоставкуПоМаршрутуСрезПоследних.Маршрут								
|		И	ТарифыНаДоставкуПоМаршруту.Период = втТарифыНаДоставкуПоМаршрутуСрезПоследних.Период
|	
|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МаршрутыТранспортныхКомпаний.Поставщики КАК МаршрутыТранспортныхКомпанийПоставщики ПО
|			МаршрутыТранспортныхКомпанийПоставщики.Ссылка = втТарифыНаДоставкуПоМаршрутуСрезПоследних.Маршрут
|		И	МаршрутыТранспортныхКомпанийПоставщики.НомерСтроки = 1
|";
	
	Возврат	ТекстЗапроса;
	
КонецФункции 


//+++АК sole 2018.06.06 ИП-00018920
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	Перем ВнешниеДанные;
	
	СтандартнаяОбработка = Ложь;
	
	СкорректироватьПараметрПеревозчик();
	
	УстановитьПривилегированныйРежим(Истина);
	
	тзРезультат = СформироватьТаблицуРезультата();	
	
	ВнешниеДанные = Новый Структура("тзРезультат", тзРезультат);
	
	Настройки = ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
      
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеДанные, ДанныеРасшифровки, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент();
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

//+++АК sole 2018.06.06 ИП-00018920
Процедура СкорректироватьПараметрПеревозчик()
	
	ПараметрПеревозчик = ПолучитьПараметрПользователя("Перевозчик");
	
	Если ПараметрПеревозчик.Использование = Ложь Тогда
		ПараметрПеревозчик.Значение = Справочники.Контрагенты.ПустаяСсылка();
		ПараметрПеревозчик.Использование = Истина;
	КонецЕсли;
	
	НетОграничений = ОпределитьНаличииеОграниченийДляПользователя();
	
	Если НетОграничений  Тогда
		Возврат;	
	КонецЕсли;

	Если ПараметрПеревозчик.Значение <> Справочники.Контрагенты.ПустаяСсылка() Тогда
		
		СтруктураОтбора = Новый Структура();
		СтруктураОтбора.Вставить("Перевозчик", ПараметрПеревозчик.Значение);
		мНайденныеСтроки = тзСоответствиеРольПеревозчик.НайтиСтроки(СтруктураОтбора);
		
		Для Каждого Стр Из мНайденныеСтроки Цикл
			Если РольДоступна(Стр["НаименованиеРоли"]) Тогда
				Возврат;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Для Каждого Стр Из тзСоответствиеРольПеревозчик Цикл
		Если РольДоступна(Стр["НаименованиеРоли"]) Тогда
			ПараметрПеревозчик.Значение = Стр["Перевозчик"];
			Сообщить("В связи с действующими ограничениями текущего пользователя, значение параметра ""перевозчик"" изменено на """ + Стр["Перевозчик"] + """.");
			Прервать;	
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

//+++АК sole 2018.06.06 ИП-00018920
Функция ОпределитьНаличииеОграниченийДляПользователя()
	
	НетОграничений = Истина;
	
	Для Каждого Стр Из тзСоответствиеРольПеревозчик Цикл
		Если РольДоступна(Стр["НаименованиеРоли"]) Тогда
			НетОграничений = Ложь;		
			Прервать;
		КонецЕсли; 
	КонецЦикла;
	
	Возврат НетОграничений;
	
КонецФункции

//+++АК sole 2018.06.07 ИП-00018920
Функция СформироватьТаблицуРезультата()
	
	Перем Запрос;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияОтчёта();
	
	ПараметрПользователя = ПолучитьПараметрПользователя("ДатаНачала");
	Запрос.Параметры.Вставить("ДатаНачала", ПараметрПользователя.Значение.Дата) ;
	
	ПараметрПользователя = ПолучитьПараметрПользователя("ДатаОкончания");
	Запрос.Параметры.Вставить("ДатаОкончания", ПараметрПользователя.Значение.Дата) ;
	
	ПараметрПользователя = ПолучитьПараметрПользователя("Перевозчик");
	Запрос.Параметры.Вставить("Перевозчик", ПараметрПользователя.Значение);
	
	тзРезультат = Запрос.Выполнить().Выгрузить();
	
	Возврат тзРезультат;
КонецФункции

//+++АК sole 2018.06.07 ИП-00018920
Функция ПолучитьПараметрПользователя(ИмяПараметра)
	
	Параметр = ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
	ПараметрПользователя = ЭтотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Параметр.ИдентификаторПользовательскойНастройки);
	
	Возврат ПараметрПользователя;
	
КонецФункции

//+++АК sole 2018.06.06 ИП-00018920
Процедура ЗаполнитьХранилищеОтчётПоВесуПоставокПоРейсам() Экспорт
	
	// Процедура объявлена экспортной, чтобы её можно было вызвать
	// в случае необходимости принудительного переформирования 
	// "тзСоответствиеРольПеревозчик" в константе
	// "ХранилищеОтчётПоВесуПоставокПоРейсам",
	// например, из произвольной внешней обработки.
	
	тзСоответствиеРольПеревозчик = СформироватьТаблицуСоответствиеРольПеревозчик();
	
	Хранилище = Новый ХранилищеЗначения(тзСоответствиеРольПеревозчик , Новый СжатиеДанных());
	Константы.ХранилищеОтчётПоВесуПоставокПоРейсам.Установить(Хранилище);
	
КонецПроцедуры

//+++АК sole 2018.06.06 ИП-00018920
Функция СформироватьТаблицуСоответствиеРольПеревозчик()
	
	тзРолейИИдентификаторовПеревозчиков = СформироватьТаблицуРолейИИдентификаторовПеревозчиков();
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.Текст =
"ВЫБРАТЬ
|	НаименованиеРоли,
|   ПеревозчикИД
|
|		ПОМЕСТИТЬ вт
|
|ИЗ &Таблица КАК т
|;
|///////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	вт.НаименованиеРоли,
|   ЕСТЬNULL(Контрагенты.Ссылка, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Перевозчик
|
|ИЗ вт
|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты ПО
|   		Контрагенты.ИД = вт.ПеревозчикИД
|
|";
	Запрос.Параметры.Вставить("Таблица", тзРолейИИдентификаторовПеревозчиков);
	
	тзСоответствиеРольПеревозчик = Запрос.Выполнить().Выгрузить();
	
	Запрос.МенеджерВременныхТаблиц.Закрыть();
	
	Возврат тзСоответствиеРольПеревозчик;
КонецФункции

//+++АК sole 2018.06.06 ИП-00018920
Функция СформироватьТаблицуРолейИИдентификаторовПеревозчиков()
	
	Перем тзРезультат;
	
	тзРезультат = Новый ТаблицаЗначений();
	тзРезультат.Колонки.Добавить("НаименованиеРоли", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(128)));
	тзРезультат.Колонки.Добавить("ПеревозчикИД", Новый ОписаниеТипов("Число"));
	
	НСтр = тзРезультат.Добавить();
	НСтр["НаименованиеРоли"] = "Поставщик_АТК_40";
	НСтр["ПеревозчикИД"] = 13851;
	
	НСтр = тзРезультат.Добавить();
	НСтр["НаименованиеРоли"] = "Поставщик_Сидоров";
	НСтр["ПеревозчикИД"] = 11177;
	
	НСтр = тзРезультат.Добавить();
	НСтр["НаименованиеРоли"] = "Поставщик_ООО_Лидер";
	НСтр["ПеревозчикИД"] = 14995;

	НСтр = тзРезультат.Добавить();
	НСтр["НаименованиеРоли"] = "Поставщик_ВкусТранс";
	НСтр["ПеревозчикИД"] = 13977;
	
	НСтр = тзРезультат.Добавить();
	НСтр["НаименованиеРоли"] = "Поставщик_А_ТермоТранс";
	НСтр["ПеревозчикИД"] = 14041;
	
	Возврат тзРезультат;
	
КонецФункции


Конструктор();
