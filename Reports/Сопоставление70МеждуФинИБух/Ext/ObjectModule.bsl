
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;	

	СтрокаПодключения = ПолныеПрава.ПолучитьСтрокуПодключения_Бух();
	
	v82COMОбъект = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Бух() + ".COMConnector");
	Попытка
		v82 = v82COMОбъект.Connect(СтрокаПодключения);
		ПодключениеУстановлено=Истина;
	Исключение
		ПодключениеУстановлено=Ложь;
		Сообщить("Не удалось подключитьс к базе финансов");
		Возврат;
	КонецПопытки;
	
	Запрос=v82.NewObject("Запрос");  
	
	
	КомпоновщикНастроек.ЗагрузитьНастройки(КомпоновщикНастроек.ПолучитьНастройки());
	Для каждого Параметр из КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы Цикл
		Если СокрЛП(Параметр.Параметр)="ПериодОтчета" Тогда
			Запрос.УстановитьПараметр("ДатаС",Параметр.Значение.ДатаНачала);
			Запрос.УстановитьПараметр("ДатаПо",Параметр.Значение.ДатаОкончания);
			Прервать;
		КонецЕсли;
	КонецЦикла;	
    	
	ТекстЗапроса="ВЫБРАТЬ
             |	ВЫБОР
             |		КОГДА ХозрасчетныйОборотыДтКт.СчетКт.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
             |			ТОГДА ХозрасчетныйОборотыДтКт.СчетКт
             |		ИНАЧЕ ХозрасчетныйОборотыДтКт.СчетКт.Родитель
             |	КОНЕЦ КАК КоррСчет,
             |	ХозрасчетныйОборотыДтКт.СуммаОборот КАК БухСуммаОборот,
             |	ХозрасчетныйОборотыДтКт.Организация КАК Организация,
             |	ХозрасчетныйОборотыДтКт.Регистратор,
             |	""В дебет"" КАК ВидКорреспонденции,
             |	0 КАК БухНачОст,
             |	0 КАК БухКонОст
             |ПОМЕСТИТЬ Выборка
             |ИЗ
             |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаС, &ДатаПо, Регистратор, СчетДт = &Счет70, , , , ) КАК ХозрасчетныйОборотыДтКт
             |
             |СГРУППИРОВАТЬ ПО
             |	ХозрасчетныйОборотыДтКт.СуммаОборот,
             |	ХозрасчетныйОборотыДтКт.Организация,
             |	ХозрасчетныйОборотыДтКт.Регистратор,
             |	ВЫБОР
             |		КОГДА ХозрасчетныйОборотыДтКт.СчетКт.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
             |			ТОГДА ХозрасчетныйОборотыДтКт.СчетКт
             |		ИНАЧЕ ХозрасчетныйОборотыДтКт.СчетКт.Родитель
             |	КОНЕЦ
             |
             |ОБЪЕДИНИТЬ ВСЕ
             |
             |ВЫБРАТЬ
             |	ВЫБОР
             |		КОГДА ХозрасчетныйОборотыДтКт.СчетДт.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
             |			ТОГДА ХозрасчетныйОборотыДтКт.СчетДт
             |		ИНАЧЕ ХозрасчетныйОборотыДтКт.СчетДт.Родитель
             |	КОНЕЦ,
             |	ХозрасчетныйОборотыДтКт.СуммаОборот,
             |	ХозрасчетныйОборотыДтКт.Организация,
             |	ХозрасчетныйОборотыДтКт.Регистратор,
             |	""В кредит"",
             |	0,
             |	0
             |ИЗ
             |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(&ДатаС, &ДатаПо, Регистратор, , , СчетКт = &Счет70, , ) КАК ХозрасчетныйОборотыДтКт
             |
             |СГРУППИРОВАТЬ ПО
             |	ХозрасчетныйОборотыДтКт.СуммаОборот,
             |	ХозрасчетныйОборотыДтКт.Регистратор,
             |	ВЫБОР
             |		КОГДА ХозрасчетныйОборотыДтКт.СчетДт.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
             |			ТОГДА ХозрасчетныйОборотыДтКт.СчетДт
             |		ИНАЧЕ ХозрасчетныйОборотыДтКт.СчетДт.Родитель
             |	КОНЕЦ,
             |	ХозрасчетныйОборотыДтКт.Организация
             |
             |ОБЪЕДИНИТЬ ВСЕ
             |
             |ВЫБРАТЬ
             |	NULL,
             |	0,
             |	ХозрасчетныйОстатки.Организация,
             |	NULL,
             |	""Остатки"",
             |	ХозрасчетныйОстатки.СуммаОстаток,
             |	0
             |ИЗ
             |	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаС, Счет = &Счет70, , ) КАК ХозрасчетныйОстатки
             |
             |ОБЪЕДИНИТЬ ВСЕ
             |
             |ВЫБРАТЬ
             |	NULL,
             |	0,
             |	ХозрасчетныйОстатки.Организация,
             |	NULL,
             |	""Остатки"",
             |	0,
             |	ХозрасчетныйОстатки.СуммаОстаток
             |ИЗ
             |	РегистрБухгалтерии.Хозрасчетный.Остатки(ДОБАВИТЬКДАТЕ(&ДатаПо, СЕКУНДА, 1), Счет = &Счет70, , ) КАК ХозрасчетныйОстатки
             |;
             |
             |////////////////////////////////////////////////////////////////////////////////
             |ВЫБРАТЬ
             |	Выборка.КоррСчет.Код КАК КоррСчет,
             |	СУММА(Выборка.БухСуммаОборот) КАК БухСуммаОборот,
             |	Выборка.Организация.ИНН КАК ИНН_Организации,
             |	Представление(Выборка.Регистратор) КАК Регистратор,
             |	Выборка.ВидКорреспонденции,
             |	СУММА(Выборка.БухНачОст) КАК БухНачОст,
             |	СУММА(Выборка.БухКонОст) КАК БухКонОст
             |ИЗ
             |	Выборка КАК Выборка
             |
             |СГРУППИРОВАТЬ ПО
             |	Выборка.КоррСчет,
             |	Выборка.Организация,
             |	Представление(Выборка.Регистратор),
             |	Выборка.ВидКорреспонденции";

	
	Запрос.Текст=ТекстЗапроса;

	Запрос.УстановитьПараметр("Счет70",v82.ПланыСчетов.Хозрасчетный.НайтиПоКоду("70"));
	
	
	
	Выборка=Запрос.Выполнить().Выбрать();
	
	ДанныеБух=Новый ТаблицаЗначений;
	ДанныеБух.Колонки.Добавить("КоррСчет");
	ДанныеБух.Колонки.Добавить("Организация");
	ДанныеБух.Колонки.Добавить("БухСуммаОборот");
	ДанныеБух.Колонки.Добавить("Регистратор");
	ДанныеБух.Колонки.Добавить("ВидКорреспонденции");
	ДанныеБух.Колонки.Добавить("БухНачОст");
	ДанныеБух.Колонки.Добавить("БухКонОст");
		
	ТекстЗапроса="ВЫБРАТЬ
	             |	Организации.ИНН,
	             |	Организации.Ссылка
	             |ИЗ
	             |	Справочник.Организации КАК Организации";
	ЗапросОрг=Новый Запрос(ТекстЗапроса);			 
	Результат=ЗапросОрг.ВыполнитьПакет();
	КэшОрганизаций=Результат[0].Выгрузить();
	//КэшКонтрагентов=Результат[1].Выгрузить();
	
	Пока Выборка.Следующий() Цикл
		НС=ДанныеБух.Добавить();
		ЗаполнитьЗначенияСвойств(НС, Выборка);
		Нашли=КэшОрганизаций.Найти(Выборка.ИНН_Организации);
		Если ЗначениеЗаполнено(Нашли) Тогда
			НС.Организация=Нашли.Ссылка;
		Иначе	
			Сообщить("Не нашёл в этой базе Организацию с ИНН "+Выборка.ИНН_Организации);
		КонецЕсли;	
		//Нашли=КэшКонтрагентов.Найти(Выборка.ИНН_Контрагента);
		//Если ЗначениеЗаполнено(Нашли) Тогда
		//	НС.Контрагент=Нашли.Ссылка;
		//Иначе
		//	Сообщить("Не нашёл в этой базе контрагента с ИНН "+Выборка.ИНН_Контрагента);
		//КонецЕсли;	
	КонецЦикла;	
    		
	//	//Получаем схему из макета
	//СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");

	//Из схемы возьмем настройки по умолчанию
	Настройки = КомпоновщикНастроек.Настройки;

	//Помещаем в переменную данные о расшифровке данных
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;

	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;

	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,
	                                        Настройки, ДанныеРасшифровки);

	ВнешниеНаборыДанных=Новый Структура;

	ВнешниеНаборыДанных.Вставить("ДанныеБух",ДанныеБух);										
											
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,
	                                                   ДанныеРасшифровки);

	//Очищаем поле табличного документа

	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);

	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

	

КонецПроцедуры
