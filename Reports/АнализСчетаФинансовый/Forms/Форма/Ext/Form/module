// Управляет пометками кнопок ком. панели
//
// Параметры:
//	Нет.
//
Процедура УправлениеПометкамиКнопокКоманднойПанели()
	
	Если ПоказыватьЗаголовок Тогда
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Истина;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Истина;

	Иначе
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Заголовок.Пометка = Ложь;
		ЭлементыФормы.КоманднаяПанельФормы.Кнопки.Подменю.Кнопки.Заголовок.Пометка = Ложь;

	КонецЕсли;
	
КонецПроцедуры // УправлениеПометкамиКнопокКоманднойПанели()

// Процедура формирует заголовок формы отчета с учетом настроек
//
// Параметры:
//  Нет.
//
Процедура СформироватьЗаголовокФормы()

	// Вывод заголовка, описателя периода и фильтров и заголовка
	Если ДатаНач = '00010101000000' И ДатаКон = '00010101000000' Тогда

		ОписаниеПериода     = "Период не установлен";

	Иначе

		Если ДатаНач = '00010101000000' ИЛИ ДатаКон = '00010101000000' Тогда

			ОписаниеПериода = "" + Формат(ДатаНач, "ДФ = ""дд.ММ.гггг""; ДП = ""...""") 
							+ " - "      + Формат(ДатаКон, "ДФ = ""дд.ММ.гггг""; ДП = ""...""");

		Иначе

			Если ДатаНач <= ДатаКон Тогда
				ОписаниеПериода = "" + ПредставлениеПериода(НачалоДня(ДатаНач), КонецДня(ДатаКон), "ФП = Истина");
			Иначе
				ОписаниеПериода = "Неправильно задан период!"
			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

	Заголовок = ЗаголовокОтчета()+" (" + ОписаниеПериода + ") " +  ?(ЗначениеЗаполнено(Организация.НаименованиеПолное), Организация.НаименованиеПолное, Организация);
	
КонецПроцедуры // СформироватьЗаголовокФормы()()

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт

	НеЗаполнятьНастройкиПриОткрытии = Не Открыта();
	
	СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;
	
КонецПроцедуры // ОбновитьОтчет()

Процедура ВыводЗаголовка()

	// Перезаполнять заголовок можно только у "чистого" отчета
	Если ЭлементыФормы.ДокументРезультат.ВысотаТаблицы = 0 Тогда

		ОбластьЗаголовка = СформироватьЗаголовок();
		ВысотаЗаголовка = ОбластьЗаголовка.ВысотаТаблицы;
		ЭлементыФормы.ДокументРезультат.Вывести(ОбластьЗаголовка);
		
	КонецЕсли;


	Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
		ЭлементыФормы.ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	КонецЕсли;
	
	УправлениеПометкамиКнопокКоманднойПанели();
	
КонецПроцедуры // ВыводЗаголовка()

Процедура СчетПриИзменении(Элемент)
	ОбработкаВыбораСчета();
КонецПроцедуры

Процедура Сформировать(Кнопка)
	ОбновитьОтчет();
КонецПроцедуры

Процедура Настройка(Кнопка)
	ФормаНастройка = ПолучитьФорму("ФормаНастройка");
	Если ФормаНастройка.ОткрытьМодально() = Истина Тогда
		ОбновитьОтчет();
	КонецЕсли;
КонецПроцедуры

Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	Если НП.Редактировать() Тогда
		
		ДатаНач = НП.ПолучитьДатуНачала();
		ДатаКон = НП.ПолучитьДатуОкончания();

	КонецЕсли;
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

Процедура ПередСохранениемЗначений(Отказ)
	
	СохраненныеНастройки = Новый Структура(
	"Счет, Организация, ПоВалютам, ПоКоличеству, ПоКорСубсчетамИСубконто, Период, ПоСубсчетамИСубконто, ПравилаВыводаИтогов, НастройкиПостроителя",
	Счет, 
	Организация, 
	ПоВалютам, 
	ПоКоличеству,
	ПоКорСубсчетамИСубконто,
	Период,
	ПоСубсчетамИСубконто,
	ПравилаВыводаИтогов.Скопировать(),
	ПостроительОтчета.ПолучитьНастройки());
	
КонецПроцедуры

Процедура ПослеВосстановленияЗначений()
	
	Перем ТабПравилаВыводаИтогов;
	Перем НастройкиПостроителя;
	
	// Если настройка восстанавливается, когда открывается форма сформированного отчета, игнорируем
	Если НеЗаполнятьНастройкиПриОткрытии Тогда
		Возврат;
	КонецЕсли;
	
	// Тип восстановленного значения должен быть Структура
	Если НЕ ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда 
		Возврат;
	КонецЕсли;
	
	СохраненныеНастройки.Свойство("Счет"                   , Счет);
	СохраненныеНастройки.Свойство("Организация"            , Организация);
	СохраненныеНастройки.Свойство("ПоВалютам"              , ПоВалютам);
	СохраненныеНастройки.Свойство("ПоКоличеству"           , ПоКоличеству);
	СохраненныеНастройки.Свойство("ПоКорСубсчетамИСубконто", ПоКорСубсчетамИСубконто);
	СохраненныеНастройки.Свойство("Период"                 , Период);
	СохраненныеНастройки.Свойство("ПоСубсчетамИСубконто"   , ПоСубсчетамИСубконто);
	СохраненныеНастройки.Свойство("ПравилаВыводаИтогов"    , ТабПравилаВыводаИтогов);
	Если ТипЗнч(ТабПравилаВыводаИтогов) = Тип("ТаблицаЗначений") Тогда
		ПравилаВыводаИтогов = ТабПравилаВыводаИтогов;
	КонецЕсли; 
	
	// После установки счета и флагов можно заполнять текст построителя
	ЗаполнитьНачальныеНастройки();
	
	СохраненныеНастройки.Свойство("НастройкиПостроителя", НастройкиПостроителя);
	Если ТипЗнч(НастройкиПостроителя) = Тип("НастройкиПостроителяОтчета") Тогда
		ПостроительОтчета.УстановитьНастройки(НастройкиПостроителя, Истина, Истина, Истина, Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельЗаголовок(Кнопка)
	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	ВыводЗаголовка();
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ТиповыеОтчеты.НазначитьФормеУникальныйКлючИдентификации(ЭтаФорма);
	
	Если РегламентированнаяОтчетность.ИДКонфигурации() <> "БП" Тогда
		// Проверка ведения однофирменности
		УчетПоВсемОрганизациям = Истина;
	КонецЕсли;

	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		
		ПоказыватьЗаголовок = Истина;
		
		СтруктураОбщихПараметров = ВосстановитьЗначение("ОбщиеПараметрыОтчетов"+ИмяРегистраБухгалтерии);
		Если ТипЗнч(СтруктураОбщихПараметров) = Тип("Структура") Тогда
			
			//СтруктураОбщихПараметров.Свойство("Организация", Организация);
			СтруктураОбщихПараметров.Свойство("Счет", Счет);
			СтруктураОбщихПараметров.Свойство("ДатаНач", ДатаНач);
			СтруктураОбщихПараметров.Свойство("ДатаКон", ДатаКон);
			ОбработкаВыбораСчета();
			
		КонецЕсли;
		
		ВысотаЗаголовка = 0;
		
	КонецЕсли; 

	НП.УстановитьПериод(НачалоДня(ДатаНач), ?(ДатаКон = '00010101', ДатаКон, КонецДня(ДатаКон)));
	
	БухгалтерскиеОтчеты.ПоддержкаОднофирменностиДляБухОтчетов(ЭтаФорма, Организация, УчетПоВсемОрганизациям, НЕ НеЗаполнятьНастройкиПриОткрытии);

КонецПроцедуры

Процедура ПриОткрытии()
	
	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		ВыводЗаголовка();
		СформироватьЗаголовокФормы();
	КонецЕсли;
	
	НеЗаполнятьНастройкиПриОткрытии=Ложь;
	
	УправлениеПометкамиКнопокКоманднойПанели();

КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтруктураОбщихПараметров = Новый Структура;
	СтруктураОбщихПараметров.Вставить("Организация", Организация);
	СтруктураОбщихПараметров.Вставить("ДатаНач", ДатаНач);
	СтруктураОбщихПараметров.Вставить("ДатаКон", ДатаКон);
	СтруктураОбщихПараметров.Вставить("Счет",    Счет);
	
	СохранитьЗначение("ОбщиеПараметрыОтчетов"+ИмяРегистраБухгалтерии, СтруктураОбщихПараметров);
	
КонецПроцедуры

Процедура ОбновлениеОтображения()

	СформироватьЗаголовокФормы();

КонецПроцедуры

Процедура ДокументРезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)

	Если ТипЗнч(Расшифровка) = Тип("СписокЗначений") Тогда
		Если Расшифровка.Количество() = 1 Тогда
			ВыбранноеЗначение = Расшифровка[0];
		Иначе
			ВыбранноеЗначение = Расшифровка.ВыбратьЭлемент("Выберите расшифровку",Расшифровка[0]);
		КонецЕсли;
		Если ВыбранноеЗначение <> Неопределено Тогда
			ВыбраннаяРасшифровка = ВыбранноеЗначение.Значение;
		Иначе
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
	ИначеЕсли ТипЗнч(Расшифровка) = Тип("Структура")
		ИЛИ ТипЗнч(Расшифровка) = Тип("Соответствие") Тогда
		
		ВыбраннаяРасшифровка = Расшифровка;
	КонецЕсли;

	Если ТипЗнч(ВыбраннаяРасшифровка) = Тип("Структура") 
		ИЛИ ТипЗнч(ВыбраннаяРасшифровка) = Тип("Соответствие") Тогда

		// Добавим общую расшифровку из левого верхнего угла
		ОбщаяРасшифровка = Элемент.Область(1,1).Расшифровка;
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = Элемент.Область(ВысотаЗаголовка+2, Элемент.ТекущаяОбласть.Лево).Расшифровка;
		
		Если ТипЗнч(ОбщаяРасшифровка) = Тип("Структура") 
			ИЛИ ТипЗнч(ОбщаяРасшифровка) = Тип("Соответствие") Тогда
			
			РезультирующаяРасшифровка = СделатьКопиюСоотв(ОбщаяРасшифровка);
			
			// Общая расшифровка дополняется расшифровкой ячейки, которая может содержать другие значения общих параметров
			Для Каждого Элемент Из ВыбраннаяРасшифровка Цикл
				РезультирующаяРасшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;
			
		КонецЕсли;
		
		РезультирующаяРасшифровка.Вставить("ВидОборота", РасшифровкаКолонки);

		РезультирующаяРасшифровка.Вставить("Период", Период);
		
		РезультирующаяРасшифровка.Вставить("ПоказыватьЗаголовок", ПоказыватьЗаголовок);
		
		ОбработкаРасшифровкиСтандартногоОтчета(РезультирующаяРасшифровка);
		
		СтандартнаяОбработка = Ложь;

	КонецЕсли;

КонецПроцедуры

Процедура ДатаНачПриИзменении(Элемент)
	НП.УстановитьПериод(НачалоДня(ДатаНач), ?(ДатаКон = '00010101', ДатаКон, КонецДня(ДатаКон)));
КонецПроцедуры

Процедура ДатаКонПриИзменении(Элемент)
	НП.УстановитьПериод(НачалоДня(ДатаНач), ?(ДатаКон = '00010101', ДатаКон, КонецДня(ДатаКон)));
КонецПроцедуры







