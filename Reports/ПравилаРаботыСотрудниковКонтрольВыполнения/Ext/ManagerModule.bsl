////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет заполнение структуры писем для рассылки информации о состоянии контролируемых правил
// Данные получат управляющие и помощники управляющих (каждый по своим торговым точкам)
//
// Параметры:
//  СправочникСсылка  - <Тип.СправочникСсылка.ПравилаРаботыСотруднико> - Ссылка на справочник (Всегда отправляется последняя версия)
//
Процедура ЗапуститьРассылкуОтчетаПравилРаботыСотрудниковКонтроль(СправочникСсылка = Неопределено) Экспорт

	СтруктураДанных = СформироватьСтруктуруДанныхДляРассылки();

КонецПроцедуры // ЗапуститьРассылкуОтчетаПравираРаботыСотрудниковКонтроль()

// Возвращает структуру данных (получателей, адресов, текстов писем)  для дальнейшего дополнения и рассылке почты
// (Письма отправляются Управляющим и Помощникам управляющих)
//
// Параметры:
//  СправочникСсылка  - <Тип.СправочникСсылка.ПравилаРаботыСотруднико> - Ссылка на справочник (Всегда отправляется последняя версия)
//
// Возвращаемое значение:
//  СтруктураДанных  <Тип.Структура> - Данные для отправки
//
Функция СформироватьСтруктуруДанныхДляРассылки(СправочникСсылка = Неопределено)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО КАК ЦФО,
		|	РолиПользователейСоставРолиТУ.Сотрудник КАК ТерриториальныйУправляющий,
		|	РолиПользователейСоставРоли.Сотрудник КАК ПомощникУправляющего,
		|	СтруктурныеЕдиницы.Ссылка КАК Магазин
		|ПОМЕСТИТЬ ВТ_ТаМагазиныФункРоли
		|ИЗ
		|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&Период, ) КАК ЦФОСтруктурныхЕдиницСрезПоследних
		|		ПО СтруктурныеЕдиницы.Ссылка = ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница
		//+++ AK suvv 2018.06.08 ИП-00018376.01
		//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&Период, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)) КАК СоответствиеОбъектРольСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&Период, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего) или ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы)) КАК СоответствиеОбъектРольСрезПоследних
		//--- AK suvv
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|			ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = РолиПользователейСоставРоли.Ссылка
		|		ПО СтруктурныеЕдиницы.Ссылка = СоответствиеОбъектРольСрезПоследних.Объект
		//+++ AK suvv 2018.06.08 ИП-00018376.01
		//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&Период, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)) КАК СоответствиеОбъектРольСрезПоследнихТУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&Период, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего) или ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы)) КАК СоответствиеОбъектРольСрезПоследнихТУ
		//--- AK suvv
		|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРолиТУ
		|			ПО СоответствиеОбъектРольСрезПоследнихТУ.РольПользователя.Родитель = РолиПользователейСоставРолиТУ.Ссылка
		|		ПО СтруктурныеЕдиницы.Ссылка = СоответствиеОбъектРольСрезПоследнихТУ.Объект
		|ГДЕ
		|	РолиПользователейСоставРолиТУ.Сотрудник ЕСТЬ НЕ NULL 
		|	И СтруктурныеЕдиницы.СтатусТорговойТочки <> ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Закрыт)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_ТаМагазиныФункРоли.ТерриториальныйУправляющий КАК ТерриториальныйУправляющий,
		|	ВТ_ТаМагазиныФункРоли.ПомощникУправляющего КАК ПомощникУправляющего,
		|	ПравилаРаботыСотрудниковКонтроль.ДатаКонтроля,
		|	ПравилаРаботыСотрудниковКонтроль.ПравилаСсылка КАК ПравилаСсылка,
		|	ПравилаРаботыСотрудниковКонтроль.СпособОтправки,
		|	ПравилаРаботыСотрудниковКонтроль.ОбъектКонтроля,
		|	ПравилаРаботыСотрудниковКонтроль.Версия,
		|	1 КАК ЕстьМагазин,
		|	ВЫБОР
		|		КОГДА ПравилаРаботыСотрудниковКонтроль.КонтролироватьПрочтение
		|					И НЕ ПравилаРаботыСотрудниковКонтроль.Прочитано
		|				ИЛИ ПравилаРаботыСотрудниковКонтроль.КонтролироватьПечать
		|					И НЕ ПравилаРаботыСотрудниковКонтроль.Распечатано
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОтправлятьДанные,
		|	ПравилаРаботыСотрудниковКонтроль.Прочитано,
		|	ПравилаРаботыСотрудниковКонтроль.Распечатано,
		|	ПравилаРаботыСотрудниковКонтроль.КонтролироватьПрочтение,
		|	ПравилаРаботыСотрудниковКонтроль.КонтролироватьПечать,
		|	ВЫРАЗИТЬ(КонтактнаяИнформацияУправляющий.Представление КАК СТРОКА(500)) КАК АдресУправляющего,
		|	ВЫРАЗИТЬ(КонтактнаяИнформацияПомощник.Представление КАК СТРОКА(500)) КАК АдресПомощника
		|ИЗ
		|	РегистрСведений.ПравилаРаботыСотрудниковКонтроль КАК ПравилаРаботыСотрудниковКонтроль
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ТаМагазиныФункРоли КАК ВТ_ТаМагазиныФункРоли
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформацияУправляющий
		|			ПО (ВТ_ТаМагазиныФункРоли.ТерриториальныйУправляющий = (ВЫРАЗИТЬ(КонтактнаяИнформацияУправляющий.Объект КАК Справочник.ФизическиеЛица)))
		|				И (КонтактнаяИнформацияУправляющий.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформацияПомощник
		|			ПО (ВТ_ТаМагазиныФункРоли.ПомощникУправляющего = (ВЫРАЗИТЬ(КонтактнаяИнформацияПомощник.Объект КАК Справочник.ФизическиеЛица)))
		|				И (КонтактнаяИнформацияПомощник.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
		|		ПО (ВТ_ТаМагазиныФункРоли.Магазин = ПравилаРаботыСотрудниковКонтроль.ОбъектКонтроля)
		|ГДЕ
		|	НЕ ПравилаРаботыСотрудниковКонтроль.Выполнено
		|	И ПравилаРаботыСотрудниковКонтроль.СпособОтправки = ЗНАЧЕНИЕ(Перечисление.СпособыОтправкиУведомлений.Магазины)
		|ИТОГИ
		|	МАКСИМУМ(ПравилаСсылка),
		|	МАКСИМУМ(ЕстьМагазин),
		|	МАКСИМУМ(ОтправлятьДанные),
		|	МАКСИМУМ(АдресУправляющего),
		|	МАКСИМУМ(АдресПомощника)
		|ПО
		|	ТерриториальныйУправляющий,
		|	ПомощникУправляющего";
	
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		ВыборкаТеррУправляющий = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаТеррУправляющий.Следующий() Цикл
			
			Выполнено = ВыборкаТеррУправляющий.ОтправлятьДанные = 0;
			
			СформироватьСтруктуруИОтправитьПисьмо("ТерриториальныйУправляющий",ВыборкаТеррУправляющий, ВыборкаТеррУправляющий.АдресУправляющего, Выполнено);
			
			ВыборкаПомощникУправляющего = ВыборкаТеррУправляющий.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			Пока ВыборкаПомощникУправляющего.Следующий() Цикл
				
				Выполнено = ВыборкаПомощникУправляющего.ОтправлятьДанные = 0; 
				
				СформироватьСтруктуруИОтправитьПисьмо("ПомощникУправляющего", ВыборкаПомощникУправляющего, ВыборкаПомощникУправляющего.АдресПомощника, Выполнено);

				ВыборкаДетальныеЗаписи = ВыборкаПомощникУправляющего.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл // Отмечать выполненными все "версии" файла на каждую дату контроля отдельно
					
					Если Выполнено Тогда
						РегистрыСведений.ПравилаРаботыСотрудниковКонтроль.УстановитьВыполнениеТребуемыхДействий(Новый Структура("ДатаКонтроля, ПравилаСсылка, СпособОтправки, ОбъектКонтроля", 
								ВыборкаДетальныеЗаписи.ДатаКонтроля, ВыборкаДетальныеЗаписи.ПравилаСсылка, ВыборкаДетальныеЗаписи.СпособОтправки, ВыборкаДетальныеЗаписи.ОбъектКонтроля), Истина);
					КонецЕсли;
							
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;

КонецФункции // СформироватьСтруктуруОбъектовДляРассылки()

// Формирует структуру письма и вызывает процедуру отправки
//
// Параметры:
//
//  Выборка  - Тип.ВыборкаЗапроса - Выборка 
//  ИмяПоля  - Тип.Строка  - Имя поля отбора для формировании текста письма
//  ЭлектронныйАдрес       - Тип.Строка - эл. адресы получателей
//  УведомлениеВыполнении  - Тип.Булево - Признак отправки итогового письма о выполнении требования
//
Процедура СформироватьСтруктуруИОтправитьПисьмо(ИмяПоля, Выборка, ЭлектронныйАдрес, УведомлениеВыполнении)

	Если НЕ ЗначениеЗаполнено(ЭлектронныйАдрес) Тогда
		Возврат;
	КонецЕсли;
	
	//Формирование структуры письма
	СтруктураПисьма = Новый Структура();
	
	СтруктураПисьма.Вставить("ПравилаСсылка", Выборка.ПравилаСсылка);
	СтруктураПисьма.Вставить("Отправитель", Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоРеквизиту("Логин", "no-reply@vkusvill.ru"));  
	СтруктураПисьма.Вставить("Получатели",  "" + ЭлектронныйАдрес + ";" + "mika@automacon.ru");
	СтруктураПисьма.Вставить("ОшибкаОтправки", Неопределено);
	СтруктураПисьма.Вставить("ОписаниеОшибки", Неопределено);
	
	СтруктураПисьма.Вставить("Тема", ?(УведомлениеВыполнении, "ВЫПОЛНЕНО! Пользователи успешно обработали(прочитали/распечатали) требования к правилам ", 
			"Состояние выполнения требований (прочтение/печать) к правилам ") + Выборка.ПравилаСсылка + " " + Выборка[ИмяПоля]); 
	
	СтруктураПисьма.Вставить("Текст", ПолучитьТекстПисьмаДляОтправки(ИмяПоля, Выборка));
	
	Документы.ИзменениеЗакупочныхЦен.ОтправитьПисьмо(СтруктураПисьма); //Откомментировать после утверждения структуры подчиненности рассылки
	
КонецПроцедуры // СформироватьСтруктуруИОтправитьПисьмо()

// Формирует и возвращает текст письма (содержит информацию о выполнении требований)
//
// Параметры:
//    ИмяПоля  - Тип.Строка - Имя поля отбора для формировании текста письма
//
// Возвращаемое значение:
//   <Тип.Строка> - Текст HTML
//
Функция ПолучитьТекстПисьмаДляОтправки(ИмяПоля, Выборка)

	//Формирование текста HTML письма 
	СхемаКомпоновкиДанных = Отчеты.ПравилаРаботыСотрудниковКонтрольВыполнения.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	НастройкиКомпоновкиДанных = СхемаКомпоновкиДанных.ВариантыНастроек.Найти("Рассылка").Настройки;
	
	//Установка отборов
	ЭлементОтбора = НастройкиКомпоновкиДанных.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ПравилаСсылка"); 
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно; 
	ЭлементОтбора.ПравоеЗначение = Выборка.ПравилаСсылка; 
	ЭлементОтбора.Использование  = Истина;
	
	ЭлементОтбора = НастройкиКомпоновкиДанных.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных(ИмяПоля); 
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно; 
	ЭлементОтбора.ПравоеЗначение = Выборка[ИмяПоля]; 
	ЭлементОтбора.Использование  = Истина;
	
	//Выполнение компоновки
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки   = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных,,,Тип("ГенераторМакетаКомпоновкиДанных")); 
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных; 
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки); 
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент; 
	ТабДок = ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	// Запись в HTML файл
	МассивДляУдаления = Новый Массив();
	
	ИмяФайла = ПолучитьИмяВременногоФайла();
	
	МассивДляУдаления.Добавить(ИмяФайла);
	
	ТабДок.Записать(ИмяФайла, ТипФайлаТабличногоДокумента.HTML);
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Прочитать(ИмяФайла);
	
	Возврат ТекстовыйДокумент.ПолучитьТекст();

КонецФункции // ПолучитьТекстПисьмаДляОтправки()

