/////////////////////////////////////////////////////////////////////////
// общие процедуры и функции
/////////////////////////////////////////////////////////////////////////

Процедура ВыводЗаголовка()

	БухгалтерскиеОтчеты.ОбработатьВыводЗаголовка(ЭтаФорма, ЭтотОбъект, ВысотаЗаголовка, ПоказыватьЗаголовок);
	
КонецПроцедуры // ВыводЗаголовка()

// Процедура формирует заголовок формы отчета с учетом настроек
//
// Параметры:
//  Нет.
//
Процедура СформироватьЗаголовокФормы()

	ОписаниеПериода = БухгалтерскиеОтчеты.СформироватьСтрокуОграниченийПоДатамДляФормы(ДатаНач, ДатаКон);

	Заголовок = ЗаголовокОтчета()+" (" + ОписаниеПериода + ") " +  ?(ЗначениеЗаполнено(Организация.НаименованиеПолное), Организация.НаименованиеПолное, Организация);
	
КонецПроцедуры // СформироватьЗаголовокФормы()()

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт

	НеЗаполнятьНастройкиПриОткрытии = Не Открыта();
	
	СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;
	
КонецПроцедуры // ОбновитьОтчет()


/////////////////////////////////////////////////////////////////////////
// обработчики событий элементов формы
/////////////////////////////////////////////////////////////////////////

Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	РаботаСДиалогами.ОбработчикНастройкаПериодаНажатие(ДатаНач, ДатаКон);
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

Процедура Сформировать(Кнопка)
	
	ОбновитьОтчет();
	
КонецПроцедуры

Процедура ДействияФормыНастройка(Кнопка)
	
	ФормаНастройка = ПолучитьФорму("ФормаНастройка");
	
	Если ФормаНастройка.ОткрытьМодально() = Истина Тогда
		
		ОбновитьОтчет();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыЗаголовок(Кнопка)
	
	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	ВыводЗаголовка();
	
КонецПроцедуры

Процедура ДокументРезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если (ТипЗнч(Расшифровка) <> Тип("Структура")) И (ТипЗнч(Расшифровка) <> Тип("Соответствие")) Тогда
		// это не наша расшифровка, выходим
		Возврат;
	КонецЕсли;
	
	Документ = Расшифровка["Регистратор"];
	НомерСтроки = Расшифровка["НомерСтроки"];
	
	ФормаДокумента = Документ.ПолучитьФорму(,,);
	ФормаДокумента.Открыть();
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.Операция") Тогда
		
		Стр = Неопределено;
		Для каждого Запись Из ФормаДокумента.ДокументОбъект.Движения.Финансовый Цикл
		
			Если Запись.НомерСтроки = НомерСтроки Тогда
			
				Стр = Запись;
				Прервать;
			
			КонецЕсли;
		
		КонецЦикла; 
		
		Если Стр <> Неопределено Тогда
		
			ФормаДокумента.ЭлементыФормы.ТабличноеПолеДвиженияБУ.ТекущаяСтрока = Стр;
		
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////
// обработчики событий формы
/////////////////////////////////////////////////////////////////////////

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ТиповыеОтчеты.НазначитьФормеУникальныйКлючИдентификации(ЭтаФорма);
	
	Если РегламентированнаяОтчетность.ИДКонфигурации() <> "БП" Тогда
		// Проверка ведения однофирменности
		УчетПоВсемОрганизациям = Истина;
	КонецЕсли;

	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		
		ПоказыватьЗаголовок = Истина;
		
		СтруктураОбщихПараметров = ВосстановитьЗначение("ОбщиеПараметрыОтчетов"+ИмяРегистраБухгалтерии);
		Если ТипЗнч(СтруктураОбщихПараметров) = Тип("Структура") Тогда
			
			СтруктураОбщихПараметров.Свойство("Организация", Организация);
			СтруктураОбщихПараметров.Свойство("ДатаНач", ДатаНач);
			СтруктураОбщихПараметров.Свойство("ДатаКон", ДатаКон);
			
			СтруктураОбщихПараметров.Свойство("ОтборПоВалюте", ОтборПоВалюте);
			СтруктураОбщихПараметров.Свойство("Валюта"  , Валюта );
			
			СтруктураОбщихПараметров.Свойство("НомерЖурнала",    НомерЖурнала);
			СтруктураОбщихПараметров.Свойство("ПоНомеруЖурнала", ПоНомеруЖурнала);
			
			СтруктураОбщихПараметров.Свойство("Регистратор",    Регистратор);
			СтруктураОбщихПараметров.Свойство("ПоРегистратору", ПоРегистратору);
			
			СтруктураОбщихПараметров.Свойство("Подстрока"                 , Подстрока);
			СтруктураОбщихПараметров.Свойство("ПоПодстрокеСубконто"       , ПоПодстрокеСубконто);
			СтруктураОбщихПараметров.Свойство("ПоПодстрокеСодержание"     , ПоПодстрокеСодержание);
			
			тзКорреспонденции = Неопределено;
			СтруктураОбщихПараметров.Свойство("Корреспонденции"     , тзКорреспонденции);
			Если тзКорреспонденции<>Неопределено Тогда
				Если ТипЗнч(тзКорреспонденции) = Тип("ТаблицаЗначений") Тогда
					Корреспонденции = тзКорреспонденции;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		ВысотаЗаголовка = 0;
		
	КонецЕсли;
	
	БухгалтерскиеОтчеты.ПоддержкаОднофирменностиДляБухОтчетов(ЭтаФорма, Организация, УчетПоВсемОрганизациям, НЕ НеЗаполнятьНастройкиПриОткрытии);
			
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		ВыводЗаголовка();
		СформироватьЗаголовокФормы();
	КонецЕсли;
	
	БухгалтерскиеОтчеты.УправлениеПометкамиКнопокЗаголовковКоманднойПанели(ЭтаФорма, ВысотаЗаголовка);
	
КонецПроцедуры

Процедура ПередСохранениемЗначений(Отказ)
	
	СохраненныеНастройки = Новый Структура(
	"Организация, ДатаНач, ДатаКон, Валюта, ОтборПоВалюте, НомерЖурнала, ПоНомеруЖурнала, Подстрока, ПоПодстрокеСубконто, ПоПодстрокеСодержание, ПоРегистратору, Регистратор, Корреспонденции",
	Организация,
	ДатаНач, ДатаКон,
	Валюта, ОтборПоВалюте,
	НомерЖурнала, ПоНомеруЖурнала,
	Подстрока, ПоПодстрокеСубконто, ПоПодстрокеСодержание,
	ПоРегистратору, Регистратор,
	Корреспонденции);
	
КонецПроцедуры

Процедура ПослеВосстановленияЗначений()
	
	// Если настройка восстанавливается, когда открывается форма сформированного отчета, игнорируем
	Если НеЗаполнятьНастройкиПриОткрытии Тогда
		Возврат;
	КонецЕсли;
	
	// Тип восстановленного значения должен быть Структура
	Если НЕ ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда 
		Возврат;
	КонецЕсли;
	
	СохраненныеНастройки.Свойство("Организация"               , Организация);
	
	СохраненныеНастройки.Свойство("ДатаНач"                   , ДатаНач);
	СохраненныеНастройки.Свойство("ДатаКон"                   , ДатаКон);
	
	СохраненныеНастройки.Свойство("Валюта"                    , Валюта);
	СохраненныеНастройки.Свойство("ОтборПоВалюте"             , ОтборПоВалюте);
	
	СохраненныеНастройки.Свойство("НомерЖурнала"              , НомерЖурнала);
	СохраненныеНастройки.Свойство("ПоНомеруЖурнала"           , ПоНомеруЖурнала);
	
	СохраненныеНастройки.Свойство("Регистратор"               , Регистратор);
	СохраненныеНастройки.Свойство("ПоРегистратору"            , ПоРегистратору);
	
	СохраненныеНастройки.Свойство("Подстрока"                 , Подстрока);
	СохраненныеНастройки.Свойство("ПоПодстрокеСубконто"       , ПоПодстрокеСубконто);
	СохраненныеНастройки.Свойство("ПоПодстрокеСодержание"     , ПоПодстрокеСодержание);
	
	тзКорреспонденции = Неопределено;
	СохраненныеНастройки.Свойство("Корреспонденции"     , тзКорреспонденции);
	Если тзКорреспонденции<>Неопределено Тогда
		Если ТипЗнч(тзКорреспонденции) = Тип("ТаблицаЗначений") Тогда
			Корреспонденции = тзКорреспонденции;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтруктураОбщихПараметров = Новый Структура;
	СтруктураОбщихПараметров.Вставить("Организация", Организация);
	СтруктураОбщихПараметров.Вставить("ДатаНач"    , ДатаНач);
	СтруктураОбщихПараметров.Вставить("ДатаКон"    , ДатаКон);
	
	СтруктураОбщихПараметров.Вставить("ОтборПоВалюте", ОтборПоВалюте);
	СтруктураОбщихПараметров.Вставить("Валюта"  , Валюта );
	
	СтруктураОбщихПараметров.Вставить("НомерЖурнала",    НомерЖурнала);
	СтруктураОбщихПараметров.Вставить("ПоНомеруЖурнала", ПоНомеруЖурнала);

	СтруктураОбщихПараметров.Вставить("Регистратор",    Регистратор);
	СтруктураОбщихПараметров.Вставить("ПоРегистратору", ПоРегистратору);
	
	СтруктураОбщихПараметров.Вставить("Подстрока"            , Подстрока);
	СтруктураОбщихПараметров.Вставить("ПоПодстрокеСубконто"  , ПоПодстрокеСубконто);
	СтруктураОбщихПараметров.Вставить("ПоПодстрокеСодержание", ПоПодстрокеСодержание);
	
	СтруктураОбщихПараметров.Вставить("Корреспонденции", Корреспонденции);
	
	СохранитьЗначение("ОбщиеПараметрыОтчетов"+ИмяРегистраБухгалтерии, СтруктураОбщихПараметров);
	
КонецПроцедуры

Процедура ОбновлениеОтображения()

	СформироватьЗаголовокФормы();

КонецПроцедуры