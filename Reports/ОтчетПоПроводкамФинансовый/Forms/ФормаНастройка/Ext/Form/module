/////////////////////////////////////////////////////////////////////////
// общие процедуры и функции
/////////////////////////////////////////////////////////////////////////

// Заполнение настроек построителя отчетов для указанных счетов
//
// Параметры
//  СчетДт  – ПланыСчетов.Хозрасчетный.Ссылка – Счет дебета
//  СчетКт  – ПланыСчетов.Хозрасчетный.Ссылка – Счет кредита
//  ОтборыПоСубконто  – ТаблицаЗначений       – Таблица отборов. Структура полностью повторяет таблицу отборов построителя отчетов
//
Процедура ЗаполнитьПостроительОтчета(СчетДт, СчетКт, ОтборыПоСубконто)

	ТекстОтбор = "";
	ТекстВыбораПолей = "";
	
	Если Не (НЕ ЗначениеЗаполнено(СчетДт) И НЕ ЗначениеЗаполнено(СчетКт)) Тогда
		
		Для н=1 По СчетДт.ВидыСубконто.Количество() Цикл
			ТекстОтбор = ТекстОтбор + ", СубконтоДт"+н+".* ";
			ТекстВыбораПолей = ТекстВыбораПолей + ", ОборотыДтКт.СубконтоДт"+н;
		КонецЦикла;
		Для н=1 По СчетКт.ВидыСубконто.Количество() Цикл
			ТекстОтбор = ТекстОтбор + ", СубконтоКт"+н+".* ";
			ТекстВыбораПолей = ТекстВыбораПолей + ", ОборотыДтКт.СубконтоДт"+н;
		КонецЦикла;
		
	Иначе
		
		Для н=1 По МаксКоличествоСубконто Цикл
			ТекстОтбор = ТекстОтбор + ", СубконтоДт"+н+".* ";
			ТекстВыбораПолей = ТекстВыбораПолей + ", ОборотыДтКт.СубконтоДт"+н;
		КонецЦикла;
		Для н=1 По МаксКоличествоСубконто Цикл
			ТекстОтбор = ТекстОтбор + ", СубконтоКт"+н+".* ";
			ТекстВыбораПолей = ТекстВыбораПолей + ", ОборотыДтКт.СубконтоДт"+н;
		КонецЦикла;
		
	КонецЕсли;
	
	ТекстОтбор = Сред(ТекстОтбор, 3);
	ТекстВыбораПолей = Сред(ТекстВыбораПолей, 3);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ОборотыДтКт.СуммаОборот
	|" + ?(ЗначениеЗаполнено(ТекстВыбораПолей), "{ВЫБРАТЬ "+ТекстВыбораПолей+"}", "") + "
	|ИЗ
	|	РегистрБухгалтерии."+ИмяРегистраБухгалтерии+".ОборотыДтКт(, , Запись, , &МассивСубконтоДт, , &МассивСубконтоКт, " + ?(ЗначениеЗаполнено(ТекстВыбораПолей), "{"+ТекстОтбор+"}", "") + ") КАК ОборотыДтКт";
	
	МассивСубконтоДт = СчетДт.ВидыСубконто.ВыгрузитьКолонку("ВидСубконто");
	МассивСубконтоКт = СчетКт.ВидыСубконто.ВыгрузитьКолонку("ВидСубконто");
	ПостроительОтчетаДляСубконто.Параметры.Вставить("МассивСубконтоДт", МассивСубконтоДт);
	ПостроительОтчетаДляСубконто.Параметры.Вставить("МассивСубконтоКт", МассивСубконтоКт);
	
	ПостроительОтчетаДляСубконто.Текст = ТекстЗапроса;
	
	// проставим понятные пользователю имена полей
	Сч = 0;
	Для каждого Элемент Из МассивСубконтоДт Цикл
		Сч = Сч+1;
		Поле = ПостроительОтчетаДляСубконто.ДоступныеПоля.Найти("СубконтоДт"+Сч);
		Поле.ТипЗначения = Элемент.ТипЗначения;
		Поле.Представление = "Дт "+Элемент.Наименование;
	КонецЦикла;
	
	Сч = 0;
	Для каждого Элемент Из МассивСубконтоКт Цикл
		Сч = Сч+1;
		Поле = ПостроительОтчетаДляСубконто.ДоступныеПоля.Найти("СубконтоКт"+Сч);
		Поле.ТипЗначения = Элемент.ТипЗначения;
		Поле.Представление = "Кт "+Элемент.Наименование;
	КонецЦикла;
	
	// добавим все субконто в поля отборов
	Сч = 0;
	Для каждого Элемент Из МассивСубконтоДт Цикл
		Сч = Сч+1;
		Поле = ПостроительОтчетаДляСубконто.Отбор.Добавить("СубконтоДт"+Сч);
		Поле.Использование = Ложь;
	КонецЦикла;
	
	Сч = 0;
	Для каждого Элемент Из МассивСубконтоКт Цикл
		Сч = Сч+1;
		Поле = ПостроительОтчетаДляСубконто.Отбор.Добавить("СубконтоКт"+Сч);
		Поле.Использование = Ложь;
	КонецЦикла;
	
	// заполним уже имеющиеся отборы
	Для каждого стр Из ОтборыПоСубконто Цикл
		
		Попытка
			
			ЭлементОтбора = Неопределено;
			
			Для каждого Элемент Из ПостроительОтчетаДляСубконто.Отбор Цикл
				Если Элемент.ПутьКДанным = стр.ПутьКДанным Тогда
					ЭлементОтбора = Элемент;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если ЭлементОтбора = Неопределено Тогда
				ЭлементОтбора = ПостроительОтчетаДляСубконто.Отбор.Добавить(стр.ПутьКДанным);
			КонецЕсли;
			
			ЭлементОтбора.Использование = Истина;
			ЭлементОтбора.ВидСравнения = стр.ВидСравнения;
			ЭлементОтбора.Значение   = стр.Значение;
			ЭлементОтбора.ЗначениеС  = стр.ЗначениеС;
			ЭлементОтбора.ЗначениеПо = стр.ЗначениеПо;
			
		Исключение
		КонецПопытки;
		
	КонецЦикла;

КонецПроцедуры // ЗаполнитьПостроительОтчета()


/////////////////////////////////////////////////////////////////////////
// обработчики событий элементов формы
/////////////////////////////////////////////////////////////////////////

Процедура ВалютаПриИзменении(Элемент)
	
	ОтборПоВалюте = ЗначениеЗаполнено(Валюта);
	
КонецПроцедуры

Процедура НомерЖурналаПриИзменении(Элемент)
	
	ПоНомеруЖурнала = ЗначениеЗаполнено(НомерЖурнала);
	
КонецПроцедуры

Процедура РегистраторПриИзменении(Элемент)
	
	ПоРегистратору = ЗначениеЗаполнено(Регистратор);
	
КонецПроцедуры

Процедура КнопкаОКНажатие(Элемент)
	
	ВыполнитьДействияПослеОкончанияРедактированияОграниченийПоКорреспонденции();
	
	Закрыть(Истина);
	
КонецПроцедуры

Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	РаботаСДиалогами.ОбработчикНастройкаПериодаНажатие(ДатаНач, ДатаКон);
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

Процедура КоманднаяПанельКорреспонденцийОчистить(Кнопка)
	
	Корреспонденции.Очистить();
	
КонецПроцедуры

Процедура КорреспонденцииПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
	
		ЭлементыФормы.Корреспонденции.ТекущаяСтрока.Субконто = БухгалтерскиеОтчеты.СоздатьТаблицуДляХраненияОтбора();
	
	КонецЕсли;
	
КонецПроцедуры

Процедура КорреспонденцииСчетДтПриИзменении(Элемент)
	
	ТекСтрока = ЭлементыФормы.Корреспонденции.ТекущаяСтрока;
	
	Колво = ТекСтрока.Субконто.Количество();
	Для Сч=1 По Колво Цикл
	
		Индекс = Колво - Сч;
		
		Если ВРег(Лев(ТекСтрока.Субконто[Индекс].ПутьКДанным, 10)) = ВРег("СубконтоДт") Тогда
		
			ТекСтрока.Субконто.Удалить(ТекСтрока.Субконто[Индекс]);
		
		КонецЕсли;
	
	КонецЦикла;
	
	ТекСтрока.ПредставлениеСубконто = БухгалтерскиеОтчеты.ПолучитьПредставлениеОтбораПоТаблице(ТекСтрока.Субконто);
	
КонецПроцедуры

Процедура КорреспонденцииСчетКтПриИзменении(Элемент)
	
	ТекСтрока = ЭлементыФормы.Корреспонденции.ТекущаяСтрока;
	
	Колво = ТекСтрока.Субконто.Количество();
	Для Сч=1 По Колво Цикл
	
		Индекс = Колво - Сч;
		
		Если ВРег(Лев(ТекСтрока.Субконто[Индекс].ПутьКДанным, 10)) = ВРег("СубконтоКт") Тогда
		
			ТекСтрока.Субконто.Удалить(ТекСтрока.Субконто[Индекс]);
		
		КонецЕсли;
	
	КонецЦикла;
	
	ТекСтрока.ПредставлениеСубконто = БухгалтерскиеОтчеты.ПолучитьПредставлениеОтбораПоТаблице(ТекСтрока.Субконто);
	
КонецПроцедуры

Процедура КорреспонденцииПриАктивизацииСтроки(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.Корреспонденции.ТекущаяСтрока;
	
	Если ТекущаяСтрока <> Неопределено Тогда
	
		ЗаполнитьПостроительОтчета(ТекущаяСтрока.СчетДт, ТекущаяСтрока.СчетКт, ТекущаяСтрока.Субконто);
	
	Иначе
	
		ПостроительОтчетаДляСубконто.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОборотыДтКт.СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт КАК ХозрасчетныйОборотыДтКт";
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ТабличноеПолеОтборПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ВыполнитьДействияПослеОкончанияРедактированияОграниченийПоКорреспонденции();
	
КонецПроцедуры

Процедура КорреспонденцииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	КорреспонденцииПриАктивизацииСтроки(Неопределено);
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////
// обработчики событий формы
/////////////////////////////////////////////////////////////////////////

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЭлементыФормы.Корреспонденции.Колонки.СчетДт.Данные = "СчетДт";
	ЭлементыФормы.Корреспонденции.Колонки.СчетКт.Данные = "СчетКт";
	
	ЭлементыФормы.Корреспонденции.Колонки.Субконто.Данные = "ПредставлениеСубконто";
	ЭлементыФормы.Корреспонденции.Колонки.Субконто.ЭлементУправления.КнопкаВыбора = Истина;
	ЭлементыФормы.Корреспонденции.Колонки.Субконто.ЭлементУправления.КнопкаОчистки = Истина;
	
КонецПроцедуры

Процедура ПриОткрытии()

	Если РегламентированнаяОтчетность.ИДКонфигурации() <> "БП" Тогда
		// Проверка ведения однофирменности
		УчетПоВсемОрганизациям = Истина;
	КонецЕсли;
	
    БухгалтерскиеОтчеты.ПоддержкаОднофирменностиДляФормыНастроекБухОтчетов(ЭтаФорма, УчетПоВсемОрганизациям);
	
КонецПроцедуры

Процедура НомерЖурналаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Если ЭлементыФормы.НомерЖурнала.СписокВыбора.Количество() = 0 Тогда
		ЭлементыФормы.НомерЖурнала.СписокВыбора = БухгалтерскиеОтчеты.ВернутьСписокНомеровЖурналов(ИмяРегистраБухгалтерии);
	КонецЕсли;
	
КонецПроцедуры

//Процедура выполняет действия после окончания редактирования
// ограничений по корреспонденции
Процедура ВыполнитьДействияПослеОкончанияРедактированияОграниченийПоКорреспонденции()
	
	ТекущаяСтрока = ЭлементыФормы.Корреспонденции.ТекущаяСтрока;
	
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока.Субконто = БухгалтерскиеОтчеты.СоздатьТаблицуДляХраненияОтбора();
	
	Для каждого Элемент Из ПостроительОтчетаДляСубконто.Отбор Цикл
	
		Если Элемент.Использование Тогда
		
			стр = ТекущаяСтрока.Субконто.Добавить();
			
			стр.Представление = Элемент.Представление;
			стр.ПутьКДанным   = Элемент.ПутьКДанным;
			стр.ВидСравнения  = Элемент.ВидСравнения;
			стр.Значение      = Элемент.Значение;
			стр.ЗначениеС     = Элемент.ЗначениеС;
			стр.ЗначениеПо    = Элемент.ЗначениеПо;
		
		КонецЕсли;
	
	КонецЦикла;
	
	ТекущаяСтрока.ПредставлениеСубконто = БухгалтерскиеОтчеты.ПолучитьПредставлениеОтбораПоТаблице(ТекущаяСтрока.Субконто);	
	
КонецПроцедуры

Процедура ТабличноеПолеОтборПослеУдаления(Элемент)
	
	ВыполнитьДействияПослеОкончанияРедактированияОграниченийПоКорреспонденции();
	
КонецПроцедуры

Процедура КоманднаяПанель1ВключитьВсе(Кнопка)
	
	Для Каждого ЭлементОтбора Из ПостроительОтчетаДляСубконто.Отбор Цикл
		
		ЭлементОтбора.Использование = Истина;
		
	КонецЦикла;
	
	ВыполнитьДействияПослеОкончанияРедактированияОграниченийПоКорреспонденции();
	
КонецПроцедуры

Процедура КоманднаяПанель1ВыключитьВсе(Кнопка)
	
	Для Каждого ЭлементОтбора Из ПостроительОтчетаДляСубконто.Отбор Цикл
		
		ЭлементОтбора.Использование = Ложь;
		
	КонецЦикла;
	
	ВыполнитьДействияПослеОкончанияРедактированияОграниченийПоКорреспонденции();
	
КонецПроцедуры

