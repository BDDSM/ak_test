&НаКлиенте
Процедура Сформировать(Команда)
	Если Не ЗначениеЗаполнено(Период) Тогда
		Сообщить("Не заполнена дата");
		Возврат;
	КонецЕсли; 
	Если Не ЗначениеЗаполнено(Отчет.Склад)  Тогда
		Сообщить("Не выбран склад");
		Возврат;
	КонецЕсли; 
	ПечатьВетСвидетельство4();	
КонецПроцедуры


&НаСервере
Процедура ПечатьВетСвидетельство4() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("НачалоПериода"			, Период.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода"			, КонецДня(Период.ДатаОкончания));
	Запрос.УстановитьПараметр("СкладОтбор"			, Отчет.Склад);
	//Запрос.УстановитьПараметр("СпНоменклатуры", СсылкаНаДокумент.Товары.Выгрузить(, "Номенклатура").ВыгрузитьКолонку("Номенклатура"));
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасходныйОрдерСкладТовары.Номенклатура
	|ПОМЕСТИТЬ втНоменклатура
	|ИЗ
	|	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
	|ГДЕ
	|	РасходныйОрдерСкладТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА И РасходныйОрдерСкладТовары.Ссылка.Склад.Владелец=&СкладОтбор
	|	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
	|	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходныйОрдерСкладТовары.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА втНоменклатура.Номенклатура = ВетеринарныеГруппыПереченьНоменклатуры.Номенклатура
	|			ТОГДА 1
	|		КОГДА втНоменклатура.Номенклатура.Родитель = ВетеринарныеГруппыПереченьНоменклатуры.Номенклатура
	|			ТОГДА 2
	|		КОГДА втНоменклатура.Номенклатура.Родитель.Родитель = ВетеринарныеГруппыПереченьНоменклатуры.Номенклатура
	|			ТОГДА 3
	|		КОГДА втНоменклатура.Номенклатура.Родитель.Родитель.Родитель = ВетеринарныеГруппыПереченьНоменклатуры.Номенклатура
	|			ТОГДА 4
	|		КОГДА втНоменклатура.Номенклатура.Родитель.Родитель.Родитель.Родитель = ВетеринарныеГруппыПереченьНоменклатуры.Номенклатура
	|			ТОГДА 5
	|	КОНЕЦ КАК Приоритет,
	|	втНоменклатура.Номенклатура,
	|	ВетеринарныеГруппыПереченьНоменклатуры.Ссылка КАК Группа
	|ПОМЕСТИТЬ втГруппы
	|ИЗ
	|	втНоменклатура КАК втНоменклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВетеринарныеГруппы.ПереченьНоменклатуры КАК ВетеринарныеГруппыПереченьНоменклатуры
	|		ПО (НЕ ВетеринарныеГруппыПереченьНоменклатуры.Ссылка.ПометкаУдаления)
	|			И (втНоменклатура.Номенклатура = ВетеринарныеГруппыПереченьНоменклатуры.Номенклатура
	|				ИЛИ втНоменклатура.Номенклатура.Родитель = ВетеринарныеГруппыПереченьНоменклатуры.Номенклатура
	|				ИЛИ втНоменклатура.Номенклатура.Родитель.Родитель = ВетеринарныеГруппыПереченьНоменклатуры.Номенклатура
	|				ИЛИ втНоменклатура.Номенклатура.Родитель.Родитель.Родитель = ВетеринарныеГруппыПереченьНоменклатуры.Номенклатура
	|				ИЛИ втНоменклатура.Номенклатура.Родитель.Родитель.Родитель.Родитель = ВетеринарныеГруппыПереченьНоменклатуры.Номенклатура)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втГруппы.Номенклатура,
	|	МИНИМУМ(втГруппы.Приоритет) КАК Приоритет
	|ПОМЕСТИТЬ втГруппыМакс
	|ИЗ
	|	втГруппы КАК втГруппы
	|
	|СГРУППИРОВАТЬ ПО
	|	втГруппы.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втГруппы.Номенклатура,
	|	втГруппы.Группа.НаименованиеПолное КАК Группа
	|ПОМЕСТИТЬ втВетГруппы
	|ИЗ
	|	втГруппы КАК втГруппы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втГруппыМакс КАК втГруппыМакс
	|		ПО втГруппы.Номенклатура = втГруппыМакс.Номенклатура
	|			И втГруппы.Приоритет = втГруппыМакс.Приоритет
	|
	|СГРУППИРОВАТЬ ПО
	|	втГруппы.Номенклатура,
	|	втГруппы.Группа,
	|	втГруппы.Группа.НаименованиеПолное";
	
	Результат = Запрос.Выполнить();
	
	
	
	Запрос.УстановитьПараметр("Корм"			, Справочники.Номенклатура.НайтиПоКоду("000623185"));
	Запрос.УстановитьПараметр("Москва"			, Справочники.Регионы.НайтиПоКоду(77));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходныйОрдер.Ссылка.Номер КАК Номер,
	|	РасходныйОрдер.Ссылка.Дата КАК ДатаДокумента,
	|	ВЫБОР
	|		КОГДА РасходныйОрдер.Ссылка.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА РасходныйОрдер.Ссылка.Организация
	|		ИНАЧЕ РасходныйОрдер.Ссылка.Склад.Владелец.Организация
	|	КОНЕЦ КАК Организация,
	|	ВЫБОР
	|		КОГДА РасходныйОрдер.Ссылка.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА РасходныйОрдер.Ссылка.Организация
	|		ИНАЧЕ РасходныйОрдер.Ссылка.Склад.Владелец.Организация
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА РасходныйОрдер.Ссылка.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА РасходныйОрдер.Ссылка.Организация
	|		ИНАЧЕ РасходныйОрдер.Ссылка.Склад.Владелец.Организация
	|	КОНЕЦ КАК Руководители,
	|	РасходныйОрдер.Ссылка.Получатель.Город КАК Город,
	|	РасходныйОрдер.Ссылка.Получатель.Улица КАК Улица,
	|	РасходныйОрдер.Ссылка.Получатель.Дом КАК Дом,
	|	РасходныйОрдер.Ссылка.Получатель.Организация КАК Покупатель,
	|	ВЫРАЗИТЬ(РасходныйОрдер.Ссылка.Получатель.Наименование КАК СТРОКА(200)) КАК Получатель,
	|	ЕСТЬNULL(МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.Наименование, """") КАК Маршрут,
	|	ВетеринарныеРазрешенияСрезПоследних.ВетеринарныйВрач,
	|	РасходныйОрдер.Ссылка.Получатель КАК ПолучательСсылка,
	|	РасходныйОрдер.Ссылка.Склад,
	|	РасходныйОрдер.Ссылка,
	|	РасходныйОрдер.Ссылка.Получатель.Город КАК ПолучательСсылкаГород,
	|	РасходныйОрдер.Ссылка.Получатель.Адрес КАК ПолучательСсылкаАдрес,
	|	РасходныйОрдер.Ссылка.Получатель.Регион КАК ПолучательРегион,
	|	ВЫБОР
	|		КОГДА РасходныйОрдер.Ссылка.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА РасходныйОрдер.Ссылка.Организация.НаименованиеСокращенное
	|		ИНАЧЕ РасходныйОрдер.Ссылка.Склад.Владелец.Организация.НаименованиеСокращенное
	|	КОНЕЦ КАК НаименованиеСокращенное,
	|	РасходныйОрдер.Ссылка.Получатель.НомерТочки КАК ПолучательСсылкаНомерТочки,
	|	РасходныйОрдер.Ссылка.Склад.Владелец.Адрес КАК СкладВладелецАдрес
	|ИЗ
	|	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдер
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛист.РасходныеОрдера КАК МаршрутныйЛистРасходныеОрдера
	|		ПО РасходныйОрдер.Ссылка = МаршрутныйЛистРасходныеОрдера.Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВетеринарныеРазрешения.СрезПоследних(&КонецПериода, ) КАК ВетеринарныеРазрешенияСрезПоследних
	|		ПО РасходныйОрдер.Ссылка.Склад.Владелец = ВетеринарныеРазрешенияСрезПоследних.Склад
	|ГДЕ
	|	РасходныйОрдер.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РасходныйОрдер.Ссылка.Проведен = ИСТИНА
	|	И РасходныйОрдер.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
	|	И РасходныйОрдер.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
	|	И РасходныйОрдер.Номенклатура.ТребуетсяВетеринарныйСертификат
	|	И РасходныйОрдер.Количество > 0
	|	И РасходныйОрдер.Ссылка.Склад.Владелец = &СкладОтбор
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходныйОрдер.Ссылка.Дата,
	|	ВЫБОР
	|		КОГДА РасходныйОрдер.Ссылка.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА РасходныйОрдер.Ссылка.Организация
	|		ИНАЧЕ РасходныйОрдер.Ссылка.Склад.Владелец.Организация
	|	КОНЕЦ,
	|	РасходныйОрдер.Ссылка.Номер,
	|	ЕСТЬNULL(МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.Наименование, """"),
	|	ВетеринарныеРазрешенияСрезПоследних.ВетеринарныйВрач,
	|	РасходныйОрдер.Ссылка.Получатель,
	|	РасходныйОрдер.Ссылка.Склад,
	|	РасходныйОрдер.Ссылка.Получатель.Город,
	|	РасходныйОрдер.Ссылка.Получатель.Улица,
	|	РасходныйОрдер.Ссылка.Получатель.Дом,
	|	РасходныйОрдер.Ссылка.Получатель.Организация,
	|	ВЫРАЗИТЬ(РасходныйОрдер.Ссылка.Получатель.Наименование КАК СТРОКА(200)),
	|	РасходныйОрдер.Ссылка,
	|	РасходныйОрдер.Ссылка.Получатель.Адрес,
	|	РасходныйОрдер.Ссылка.Получатель.Регион,
	|	РасходныйОрдер.Ссылка.Получатель.НомерТочки,
	|	РасходныйОрдер.Ссылка.Склад.Владелец.Адрес,
	|	ВЫБОР
	|		КОГДА РасходныйОрдер.Ссылка.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА РасходныйОрдер.Ссылка.Организация.НаименованиеСокращенное
	|		ИНАЧЕ РасходныйОрдер.Ссылка.Склад.Владелец.Организация.НаименованиеСокращенное
	|	КОНЕЦ,
	|	РасходныйОрдер.Ссылка.Получатель.Город,
	|	ВЫБОР
	|		КОГДА РасходныйОрдер.Ссылка.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА РасходныйОрдер.Ссылка.Организация
	|		ИНАЧЕ РасходныйОрдер.Ссылка.Склад.Владелец.Организация
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РасходныйОрдер.Ссылка.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА РасходныйОрдер.Ссылка.Организация
	|		ИНАЧЕ РасходныйОрдер.Ссылка.Склад.Владелец.Организация
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходныйОрдерСкладТовары.Ссылка КАК Ссылка,
	|	РасходныйОрдерСкладТовары.Номенклатура,
	|	РасходныйОрдерСкладТовары.Характеристика,
	|	""кг"" КАК ЕдиницаИзмерения,
	|	СУММА(РасходныйОрдерСкладТовары.Количество * РасходныйОрдерСкладТовары.ЕдиницаИзмерения.Вес) КАК Количество,
	|	СУММА(РасходныйОрдерСкладТовары.КоличествоУРЗ) КАК КоличествоУРЗ,
	|	СУММА(РасходныйОрдерСкладТовары.КоличествоТТ) КАК КоличествоТТ,
	|	СУММА(РасходныйОрдерСкладТовары.Отклонение) КАК Отклонение,
	|	РасходныйОрдерСкладТовары.ДатаПроизводства,
	|	ЗначенияСвойствОбъектов.Значение КАК Производитель,
	|	ЗначенияСвойствОбъектов1.Значение КАК СтранаПроисхождения,
	|	СУММА(ЕСТЬNULL(КоличествоВКоробкеСрезПоследних.Количество, 0)) КАК КолвоВКоробке,
	|	ЕСТЬNULL(втВетГруппы.Группа, РасходныйОрдерСкладТовары.Номенклатура.Родитель) КАК НоменклатураРодитель,
	|	РасходныйОрдерСкладТовары.Ссылка.Склад,
	|	РасходныйОрдерСкладТовары.Ссылка.Дата КАК Дата,
	|	МаршрутныйЛистРасходныеОрдера.Документ.Получатель.Наименование КАК СтруктурнаяЕдиница,
	|	ВЫБОР
	|		КОГДА МаршрутныйЛистРасходныеОрдера.Документ.Получатель.Регион = &Москва
	|			ТОГДА ""ф4""
	|		ИНАЧЕ ""ф2""
	|	КОНЕЦ КАК Форма,
	|	ВЫБОР
	|		КОГДА МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.ПланируемоеВремяВыездаПоМаршруту ССЫЛКА Справочник.ВремяВыездаПоМаршруту
	|			ТОГДА МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.ПланируемоеВремяВыездаПоМаршруту.ВремяВыезда
	|		ИНАЧЕ МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.ПланируемоеВремяВыездаПоМаршруту
	|	КОНЕЦ КАК ВремяВыходаВРейсДата,
	|	ЕСТЬNULL(НомераМаршрутовСрезПоследних.Номер, МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.Наименование) КАК МаршрутНаименование,
	|	ЕСТЬNULL(НомераМаршрутовСрезПоследних.НомерПоВремениВыезда, МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.НомерПоВремениВыезда) КАК НомерПоВремениВыезда
	|ИЗ
	|	Документ.МаршрутныйЛист.РасходныеОрдера КАК МаршрутныйЛистРасходныеОрдера
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Маршруты.ТорговыеТочки КАК МаршрутныйЛистТорговыеТочки
	|		ПО МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут = МаршрутныйЛистТорговыеТочки.Ссылка
	|			И МаршрутныйЛистРасходныеОрдера.Документ.Получатель = МаршрутныйЛистТорговыеТочки.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НомераМаршрутов.СрезПоследних(&КонецПериода, ) КАК НомераМаршрутовСрезПоследних
	|		ПО МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут = НомераМаршрутовСрезПоследних.Маршрут
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
	|			ЛЕВОЕ СОЕДИНЕНИЕ втВетГруппы КАК втВетГруппы
	|			ПО (втВетГруппы.Номенклатура = РасходныйОрдерСкладТовары.Номенклатура)
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|			ПО РасходныйОрдерСкладТовары.Характеристика = ЗначенияСвойствОбъектов.Объект
	|				И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов1
	|			ПО РасходныйОрдерСкладТовары.Характеристика = ЗначенияСвойствОбъектов1.Объект
	|				И (ЗначенияСвойствОбъектов1.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СтранаПроисхождения))
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КоличествоВКоробке.СрезПоследних(, ) КАК КоличествоВКоробкеСрезПоследних
	|			ПО РасходныйОрдерСкладТовары.Номенклатура = КоличествоВКоробкеСрезПоследних.Номенклатура
	|				И РасходныйОрдерСкладТовары.Характеристика = КоличествоВКоробкеСрезПоследних.Характеристика
	|				И РасходныйОрдерСкладТовары.Ссылка.Склад.Владелец = КоличествоВКоробкеСрезПоследних.СтруктурнаяЕдиница
	|		ПО (РасходныйОрдерСкладТовары.Ссылка = МаршрутныйЛистРасходныеОрдера.Документ)
	|ГДЕ
	|	РасходныйОрдерСкладТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
	|	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
	|	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
	|	И РасходныйОрдерСкладТовары.Номенклатура.ТребуетсяВетеринарныйСертификат
	|	И РасходныйОрдерСкладТовары.Количество > 0
	|	И РасходныйОрдерСкладТовары.Ссылка.Склад.Владелец = &СкладОтбор
	|	И МаршрутныйЛистРасходныеОрдера.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И МаршрутныйЛистРасходныеОрдера.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И МаршрутныйЛистРасходныеОрдера.Документ.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отменен)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходныйОрдерСкладТовары.Ссылка,
	|	РасходныйОрдерСкладТовары.Номенклатура,
	|	РасходныйОрдерСкладТовары.Характеристика,
	|	РасходныйОрдерСкладТовары.ДатаПроизводства,
	|	ЗначенияСвойствОбъектов.Значение,
	|	ЗначенияСвойствОбъектов1.Значение,
	|	ЕСТЬNULL(втВетГруппы.Группа, РасходныйОрдерСкладТовары.Номенклатура.Родитель),
	|	РасходныйОрдерСкладТовары.Ссылка.Склад,
	|	МаршрутныйЛистРасходныеОрдера.Документ.Получатель.Наименование,
	|	ВЫБОР
	|		КОГДА МаршрутныйЛистРасходныеОрдера.Документ.Получатель.Регион = &Москва
	|			ТОГДА ""ф4""
	|		ИНАЧЕ ""ф2""
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.ПланируемоеВремяВыездаПоМаршруту ССЫЛКА Справочник.ВремяВыездаПоМаршруту
	|			ТОГДА МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.ПланируемоеВремяВыездаПоМаршруту.ВремяВыезда
	|		ИНАЧЕ МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.ПланируемоеВремяВыездаПоМаршруту
	|	КОНЕЦ,
	|	ЕСТЬNULL(НомераМаршрутовСрезПоследних.НомерПоВремениВыезда, МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.НомерПоВремениВыезда),
	|	ЕСТЬNULL(НомераМаршрутовСрезПоследних.Номер, МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.Наименование),
	|	РасходныйОрдерСкладТовары.Ссылка.Дата
	|
	|УПОРЯДОЧИТЬ ПО Форма,
	|	ВремяВыходаВРейсДата,НомерПоВремениВыезда,
	|	МаршрутНаименование,
	|	СтруктурнаяЕдиница,
	|	Дата,
	|	Ссылка
	|ИТОГИ
	|	СУММА(Количество)
	|ПО
	|	Форма,ВремяВыходаВРейсДата,НомерПоВремениВыезда,
	|	МаршрутНаименование,
	|	СтруктурнаяЕдиница,Ссылка,
	|	НоменклатураРодитель,
	|	Производитель";
	
	Результаты = Запрос.ВыполнитьПакет();
	ТЗШапка = Результаты[0].Выгрузить();
	
	//Шапка.Следующий();
	
	//Запрос = Новый Запрос;
	//Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасходныйОрдерСкладТовары.Номенклатура,
	|	РасходныйОрдерСкладТовары.Характеристика,
	|	РасходныйОрдерСкладТовары.ДатаПроизводства,
	|	РасходныйОрдерСкладТовары.Ссылка,
	|	РасходныйОрдерСкладТовары.Ссылка.Склад.Владелец.Организация
	|ПОМЕСТИТЬ втНом
	|ИЗ
	|	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
	|ГДЕ
	|	РасходныйОрдерСкладТовары.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
	|	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
	|	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
	|	И РасходныйОрдерСкладТовары.Номенклатура.ТребуетсяВетеринарныйСертификат
	|	И РасходныйОрдерСкладТовары.Количество > 0
	|	И РасходныйОрдерСкладТовары.Ссылка.Склад.Владелец = &СкладОтбор
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходныйОрдерСкладТовары.Номенклатура,
	|	РасходныйОрдерСкладТовары.Характеристика,
	|	РасходныйОрдерСкладТовары.ДатаПроизводства,
	|	РасходныйОрдерСкладТовары.Ссылка,
	|	РасходныйОрдерСкладТовары.Ссылка.Склад.Владелец.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПриходныйОрдерСкладТовары.Ссылка,
	|	ПриходныйОрдерСкладТовары.Номенклатура,
	|	ПриходныйОрдерСкладТовары.Характеристика,
	|	ПриходныйОрдерСкладТовары.ДатаПроизводства,
	|	ПриходныйОрдерСкладТовары.Ссылка.Дата,
	|	втНом.Ссылка КАК Расходник
	|ПОМЕСТИТЬ втОрдера
	|ИЗ
	|	втНом КАК втНом
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
	|		ПО втНом.Номенклатура = ПриходныйОрдерСкладТовары.Номенклатура
	|			И втНом.Характеристика = ПриходныйОрдерСкладТовары.Характеристика
	|			И втНом.ДатаПроизводства = ПриходныйОрдерСкладТовары.ДатаПроизводства
	|			И втНом.Ссылка.Склад.Владелец = ПриходныйОрдерСкладТовары.Ссылка.Склад.Владелец
	|			И (ВЫБОР
	|				КОГДА втНом.Ссылка.Склад В (&МасСкл)
	|					ТОГДА ПриходныйОрдерСкладТовары.Ссылка.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(втНом.Ссылка.Дата, МЕСЯЦ, -3) И втНом.Ссылка.Дата
	|				ИНАЧЕ ПриходныйОрдерСкладТовары.Ссылка.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(втНом.Ссылка.Дата, МЕСЯЦ, -1) И втНом.Ссылка.Дата
	|			КОНЕЦ)
	|ГДЕ
	|	ПриходныйОрдерСкладТовары.Ссылка.Проведен
	|	И ПриходныйОрдерСкладТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
	|	И ПриходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.отпоставщика)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втНоменклатураСОрдерами.Ссылка КАК Приходник,
	|	втНоменклатураСОрдерами.Ссылка.Дата КАК ПриходникДата,
	|	втНоменклатураСОрдерами.Номенклатура КАК Номенклатура,
	|	втНоменклатураСОрдерами.Характеристика КАК Характеристика,
	|	втНоменклатураСОрдерами.ДатаПроизводства КАК ДатаПроизводства,
	//|	КонтактнаяИнформация.Представление КАК АдресПоставщика,
	//|	КонтактнаяИнформация.Поле4 КАК ГородПоставщика,
	//|	КонтактнаяИнформация.Поле2 КАК РегионПоставщика,
	//|	КонтактнаяИнформация.Поле5 КАК НасПунктПоставщика,
	|	КонтактнаяИнформацияОрг.Представление КАК АдресОрганизации,
	|	КонтактнаяИнформацияОрг.Поле4 КАК ГородОрганизации,
	|	КонтактнаяИнформацияОрг.Поле5 КАК НасПунктОрганизации,
	|	КонтактнаяИнформацияОрг.Поле2 КАК РегионОрганизации,
	|	втВетГруппы.Группа КАК Группа,
	|	втНоменклатураСОрдерами.Дата КАК Дата,
	|	втНоменклатураСОрдерами.Расходник 
	|ИЗ
	|	втОрдера КАК втНоменклатураСОрдерами
	|		ЛЕВОЕ СОЕДИНЕНИЕ втВетГруппы КАК втВетГруппы
	|		ПО (втВетГруппы.Номенклатура = втНоменклатураСОрдерами.Номенклатура)
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	//|		ПО втНоменклатураСОрдерами.Ссылка.Поставщик = КонтактнаяИнформация.Объект
	//|			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформацияОрг
	|		ПО (КонтактнаяИнформацияОрг.Объект = ВЫБОР
	|				КОГДА втНоменклатураСОрдерами.Расходник.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ТОГДА втНоменклатураСОрдерами.Расходник.Организация
	|				ИНАЧЕ втНоменклатураСОрдерами.Расходник.Склад.Владелец.Организация
	|			КОНЕЦ)
	|			И (КонтактнаяИнформацияОрг.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	втНоменклатураСОрдерами.Ссылка,
	|	Номенклатура,
	|	Характеристика,
	|	ДатаПроизводства";
	
	Запрос1 = Новый Запрос;
	Запрос1.Текст = 
	"ВЫБРАТЬ
	|	Склады.Ссылка
	|ИЗ
	|	Справочник.Склады КАК Склады
	|ГДЕ
	|	Склады.Наименование ПОДОБНО &Наименование";
	
	Запрос1.УстановитьПараметр("Наименование", "%мороз%");
	
	РезультатЗапроса = Запрос1.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	МасСкл=Новый Массив;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МасСкл.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("МасСкл"		, МасСкл);
	
	
	
	
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТЗОрдер = РезультатЗапроса.Выгрузить();
	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВетСвидетельстваПоступлений.ДанныеВетСвидетельствСерия,
	|	ВетСвидетельстваПоступлений.ДанныеВетСвидетельствНомер,
	|	ВетСвидетельстваПоступлений.ДанныеВетСвидетельствДата,
	|	ВетСвидетельстваПоступлений.АдресПроизводителя,
	|	ВетСвидетельстваПоступлений.ДокПоступления КАК Приходник,
	|	втОрдера.Расходник КАК Расходник,
	|	ВетСвидетельстваПоступлений.ИнформацияОбИсследовании
	|ИЗ
	|	втОрдера КАК втОрдера
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВетСвидетельстваПоступлений КАК ВетСвидетельстваПоступлений
	|		ПО втОрдера.Ссылка = ВетСвидетельстваПоступлений.ДокПоступления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВетСвидетельстваПоступлений.ДокПоступления.Дата,
	|	ВетСвидетельстваПоступлений.ДокПоступления.Ссылка";	
	
	ТЗПереченьВетСвВа = Запрос.Выполнить().Выгрузить();	
	ТЗПереченьВетСвВа.Индексы.Добавить("Приходник,Расходник");	
	ВыбФорма = Результаты[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыбФорма.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	///
	ТабДок	= Новый ТабличныйДокумент;
	Результат.Очистить();
	Макет = РеквизитФормыВЗначение("Отчет").ПолучитьМакет("Макет");
	
	ОбластьТаблица = Макет.ПолучитьОбласть("Шапка");
	Результат.Вывести(ОбластьТаблица);
	
	СоотРасх = Новый Соответствие;
	
	Пока ВыбФорма.Следующий() Цикл
		ВыбВремяВыходаВРейсДата= ВыбФорма.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыбВремяВыходаВРейсДата.Следующий() Цикл  
			ВыбНомер= ВыбВремяВыходаВРейсДата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыбНомер.Следующий() Цикл  
				
				ВыбМаршрутНаименование= ВыбНомер.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыбМаршрутНаименование.Следующий() Цикл  
					
					ВыбСтруктурнаяЕдиница= ВыбМаршрутНаименование.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыбСтруктурнаяЕдиница.Следующий() Цикл  
						
						ВыбРасходники = ВыбСтруктурнаяЕдиница.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыбРасходники.Следующий() Цикл
							КолвоПоз = 0;
							СоотНомРодИКол = Новый Соответствие;
							ВыбТовар = ВыбРасходники.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыбТовар.Следующий() Цикл
								КолПроизвод = 0;
								ВыбПроизвод = ВыбТовар.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ВыбПроизвод.Следующий() Цикл
									КолвоПоз	= КолвоПоз		+ 1;
									КолПроизвод	= КолПроизвод	+ 1;
								КонецЦикла;
								СоотНомРодИКол.Вставить(ВыбТовар.НоменклатураРодитель, КолПроизвод);
							КонецЦикла;
							СоотРасх.Вставить(ВыбРасходники.Ссылка,Новый Структура("СоотНомРодИКол,КолвоПоз",СоотНомРодИКол,КолвоПоз));
						КонецЦикла;
					КонецЦикла; 
				КонецЦикла; 
			КонецЦикла; 
		КонецЦикла; 
	КонецЦикла; 
	
	ВыбФорма.Сбросить();
	СчДок=0;
	Пока ВыбФорма.Следующий() Цикл
		ВыбВремяВыходаВРейсДата= ВыбФорма.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыбВремяВыходаВРейсДата.Следующий() Цикл
			
			ВыбНомер= ВыбВремяВыходаВРейсДата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыбНомер.Следующий() Цикл  
				
				ВыбМаршрутНаименование= ВыбНомер.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыбМаршрутНаименование.Следующий() Цикл  
					
					ВыбСтруктурнаяЕдиница= ВыбМаршрутНаименование.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыбСтруктурнаяЕдиница.Следующий() Цикл  
						ВыбРасходники = ВыбСтруктурнаяЕдиница.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыбРасходники.Следующий() Цикл
							КолНомРод=Новый Соответствие;
							КолКоробНомРод=0;
							ПредНомРодитель=Неопределено;
							ИтогКол=Новый Соответствие;
							ИтогКоробок=0;
							ЕдИзм="";
							СпИсследования = Новый СписокЗначений;
							
							
							ФлЗаморозка = ?(Найти(нрег(Строка(ВыбРасходники.Склад)), "мороз") = 0, Ложь, Истина);
							Счетчик			= 0;
							СчетчикПроизвод	= 0;
							
							ТоварСписок			= "";
							ТоварКоличество		= "";
							СтрокаДатыПрва		= "";
							СтрокаПроизводитель	= "";
							СтрокаПроизводитель1= "";
							ТоварВыработан		= "";
							ДатыПроизводста 	= "";
							СпВетСвид = Новый СписокЗначений;
							АдресПроизводителя="";
							СпОрдера = Новый СписокЗначений;
							ЕдИзм="";
							ТЗСтрок = Новый ТаблицаЗначений;
							ТЗСтрок.Колонки.Добавить("НоменклатураРодитель");
							ТЗСтрок.Колонки.Добавить("Производитель");
							ТЗСтрок.Колонки.Добавить("СпСтрок");
							ТЗСтрок.Колонки.Добавить("АдресПроизводителя");
							
							ТЗВетСвва = Новый ТаблицаЗначений;
							ТЗВетСвва.Колонки.Добавить("НоменклатураРодитель");
							ТЗВетСвва.Колонки.Добавить("Производитель");
							ТЗВетСвва.Колонки.Добавить("СпСтрок");
							ТЗВетСвва.Колонки.Добавить("АдресПроизводителя");
							СоотНомРодИКол=СоотРасх.Получить(ВыбРасходники.Ссылка).СоотНомРодИКол;	
							
							Шапка=ТЗШапка.НайтиСтроки(Новый Структура("Ссылка",ВыбРасходники.Ссылка))[0];
							ВыбТовар = ВыбРасходники.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыбТовар.Следующий() Цикл
								
								ВыбПроизвод = ВыбТовар.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								СчПроизвод=0;
								Пока ВыбПроизвод.Следующий() Цикл
									СтрокаТовар=ВыбПроизвод.Выбрать();
									КолКоробПоГруппе=0;
									СпТекСтр=Новый СписокЗначений;
									СпДП=Новый СписокЗначений;
									СпВетСвид=Новый СписокЗначений;
									АдресПроизводителя="";
									ПредНомРодитель=ВыбТовар.НоменклатураРодитель;
									СчПроизвод=СчПроизвод+1;
									Пока СтрокаТовар.Следующий() Цикл
										КолКороб=?(СтрокаТовар.КолвоВКоробке = 0, 0, ?(Окр(СтрокаТовар.Количество / СтрокаТовар.КолвоВКоробке)=0,1,Окр(СтрокаТовар.Количество / СтрокаТовар.КолвоВКоробке)));
										ЕдИзм=СтрокаТовар.ЕдиницаИзмерения;
										ЕдКолИтог=?(ИтогКол.Получить(ЕдИзм)=Неопределено,0,ИтогКол.Получить(ЕдИзм));
										
										ИтогКол.Вставить(ЕдИзм,ЕдКолИтог+СтрокаТовар.Количество);
										
										ЕдКолИтог=?(КолНомРод.Получить(ЕдИзм)=Неопределено,0,КолНомРод.Получить(ЕдИзм));
										
										КолНомРод.Вставить(ЕдИзм,ЕдКолИтог+СтрокаТовар.Количество);
										
										МасСтрОрдер=ТЗОрдер.НайтиСтроки(Новый Структура("Расходник",ВыбРасходники.Ссылка));
										Для каждого Стр Из МасСтрОрдер Цикл
											Если СтрокаТовар.Номенклатура=Стр.Номенклатура И СтрокаТовар.Характеристика=Стр.Характеристика  
												И ?(ФлЗаморозка,Истина,СтрокаТовар.ДатаПроизводства=Стр.ДатаПроизводства)Тогда                                                 
												МасСтрВет=ТЗПереченьВетСвВа.НайтиСтроки(Новый Структура("Приходник,Расходник",Стр.Приходник,ВыбРасходники.Ссылка));
												Для каждого СтрВет Из МасСтрВет Цикл
													Если ЗначениеЗаполнено(СтрВет.ДанныеВетСвидетельствСерия) Тогда
														ВетСвВо=""+СтрВет.ДанныеВетСвидетельствСерия+"№"+СтрВет.ДанныеВетСвидетельствНомер+" от "+Формат(СтрВет.ДанныеВетСвидетельствДата,"ДФ=dd.MM.yyyy");
														Если СпВетСвид.НайтиПоЗначению(ВетСвВо)=Неопределено Тогда
															СпВетСвид.Добавить(ВетСвВо);
														КонецЕсли; 
													КонецЕсли;
													Если ЗначениеЗаполнено(СокрЛП(СтрВет.АдресПроизводителя)) Тогда
														АдресПроизводителя=СтрВет.АдресПроизводителя;
													КонецЕсли; 
													Если ЗначениеЗаполнено(СокрЛП(СтрВет.ИнформацияОбИсследовании)) и СпИсследования.НайтиПоЗначению(СокрЛП(СтрВет.ИнформацияОбИсследовании))=Неопределено Тогда
														СпИсследования.Добавить(СокрЛП(СтрВет.ИнформацияОбИсследовании));
													КонецЕсли;
												КонецЦикла; 
												//Если СпОрдера.НайтиПоЗначению(Стр.Приходник)=Неопределено Тогда
												СпОрдера.Добавить(Стр);
												Если ФлЗаморозка Тогда
													ДатаПрЗаморозка=?(ЗначениеЗаполнено(Стр.ДатаПроизводства),Сред(Формат(Стр.ДатаПроизводства,"ДФ=dd.MM.yyyy"),4),Сред(Формат(Стр.ПриходникДата,"ДФ=dd.MM.yyyy"),4));
													Если ЗначениеЗаполнено(ДатаПрЗаморозка) Тогда
														Если СпДП.НайтиПоЗначению(ДатаПрЗаморозка)=Неопределено Тогда
															СпДП.Добавить(ДатаПрЗаморозка);
														КонецЕсли; 
													КонецЕсли;
												КонецЕсли; 
												//КонецЕсли; 
											КонецЕсли; 
										КонецЦикла; 
										
										//ИтогКол=ИтогКол+СтрокаТовар.Количество;
										ИтогКоробок=ИтогКоробок+КолКороб;
										КолКоробПоГруппе=КолКоробПоГруппе+КолКороб;
										
										ЕдИзм=СтрокаТовар.ЕдиницаИзмерения;
										СтрукТекСтр=Новый Структура;
										СтрукТекСтр.Вставить("Ссылка");
										СтрукТекСтр.Вставить("Номенклатура");
										СтрукТекСтр.Вставить("Характеристика");
										СтрукТекСтр.Вставить("ЕдиницаИзмерения");
										СтрукТекСтр.Вставить("Количество");
										СтрукТекСтр.Вставить("КоличествоУРЗ");
										СтрукТекСтр.Вставить("КоличествоТТ");
										СтрукТекСтр.Вставить("Отклонение");
										СтрукТекСтр.Вставить("ДатаПроизводства");
										СтрукТекСтр.Вставить("Производитель");
										СтрукТекСтр.Вставить("КолвоВКоробке");
										СтрукТекСтр.Вставить("НоменклатураРодитель");
										СтрукТекСтр.Вставить("СтранаПроисхождения");
										ЗаполнитьЗначенияСвойств(СтрукТекСтр,СтрокаТовар);
										СпТекСтр.Добавить(СтрукТекСтр);
										Если Не ФлЗаморозка Тогда
											Если ЗначениеЗаполнено(СтрокаТовар.ДатаПроизводства) Тогда
												Если СпДП.НайтиПоЗначению(СтрокаТовар.ДатаПроизводства)=Неопределено Тогда
													СпДП.Добавить(СтрокаТовар.ДатаПроизводства);
												КонецЕсли; 
											КонецЕсли;
										КонецЕсли;
										
									КонецЦикла;
									
									Счетчик			= Счетчик+1;
									СчетчикПроизвод			= ?(СчПроизвод<СоотНомРодИКол.Получить(ВыбТовар.НоменклатураРодитель) ,СчетчикПроизвод,СчетчикПроизвод+1);
									СчетчикПроизвод=?(СчетчикПроизвод=0,1,СчетчикПроизвод);
									
									
									//ТекДП="";
									//Для каждого Эл1 Из СпДП Цикл
									//	ТекДП=ТекДП+" "+Формат(Эл1.Значение,"ДФ=dd.MM.yyyy");
									//КонецЦикла; 
									
									ТекДП="";
									Если ФлЗаморозка и СпДП.Количество()>1 Тогда
										ТекДП=ТекДП+" "+Формат(СпДП[0].Значение,"ДФ=dd.MM.yy")+"-"+Формат(СпДП[СпДП.Количество()-1].Значение,"ДФ=dd.MM.yy");
									Иначе	
										Для каждого Эл1 Из СпДП Цикл
											ТекДП=ТекДП+" "+Формат(Эл1.Значение,"ДФ=dd.MM.yy");
										КонецЦикла; 
									КонецЕсли; 
									
									ДатыПроизводста = ДатыПроизводста+" "+Счетчик+") "+ТекДП;
									
									
									
									КолКоробНомРод=КолКоробНомРод+КолКороб;
									
									ИтогКолСтр="";
									Для каждого ЭлЕд Из КолНомРод Цикл
										ИтогКолСтр=ИтогКолСтр+" "+ЭлЕд.Значение+" "+Строка(ЭлЕд.Ключ);
									КонецЦикла;
									
									СтрокаДатыПрва=СтрокаДатыПрва+?(ТекДП="","",Строка(Счетчик)+") "+ТекДП+" ");
									СтрокаПроизводитель=СтрокаПроизводитель+Строка(Счетчик)+") "+ВыбПроизвод.Производитель+" "+СокрЛП(АдресПроизводителя)+" ";
									СтрокаПроизводитель1=СтрокаПроизводитель1+Строка(Счетчик)+") "+ВыбПроизвод.Производитель+" ";
									
									ТоварКоличество	=  ТоварКоличество+" "+Строка(Счетчик)+") "+?(СчПроизвод<СоотНомРодИКол.Получить(ВыбТовар.НоменклатураРодитель),"", Строка(ВыбПроизвод.НоменклатураРодитель));//+" "+ИтогКолСтр+" / "+КолКоробНомРод+" мест 
									Если СчПроизвод=СоотНомРодИКол.Получить(ВыбТовар.НоменклатураРодитель)   Тогда
										КолНомРод=Новый Соответствие;
										КолКоробНомРод=0;
									КонецЕсли; 
									
									
									НовСтр=ТЗСтрок.Добавить();
									НовСтр.НоменклатураРодитель=ВыбПроизвод.НоменклатураРодитель;
									НовСтр.Производитель=ВыбПроизвод.Производитель;
									НовСтр.СпСтрок=СпТекСтр;
									НовСтр.АдресПроизводителя=СокрЛП(АдресПроизводителя);
									
									НовСтр=ТЗВетСвва.Добавить();
									НовСтр.НоменклатураРодитель=ВыбПроизвод.НоменклатураРодитель;
									НовСтр.Производитель=ВыбПроизвод.Производитель;
									НовСтр.СпСтрок=СпВетСвид;
									НовСтр.АдресПроизводителя=СокрЛП(АдресПроизводителя);
								КонецЦикла; 
							КонецЦикла; 
							Кол=СпОрдера.Количество();
							
							
							НаименованиеПоставщика=Шапка.НаименованиеСокращенное;
							АдресОтправления=Шапка.СкладВладелецАдрес;
							
							
							//
							Если ТипЗнч(Шапка.ПолучательСсылка)=Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
								АдресПолучения=""+Шапка.ПолучательСсылкаГород+" "+Шапка.ПолучательСсылкаАдрес;
							Иначе	
								АдресПолучения="";
							КонецЕсли; 
							Организация	= НаименованиеПоставщика+" "+АдресОтправления;
							
							
							
							
							а	= ТоварКоличество+" "+СтрокаДатыПрва+" "+СтрокаПроизводитель;//?(КолвоПоз>2,"см. приложение",ТоварКоличество+" "+СтрокаДатыПрва+" "+СтрокаПроизводитель);
							ИтогКолСтр="";
							Для каждого ЭлЕд Из ИтогКол Цикл
								ИтогКолСтр=ИтогКолСтр+" "+ЭлЕд.Значение+" "+Строка(ЭлЕд.Ключ);
							КонецЦикла; 
							ИтогКоличество	= ""+ИтогКолСтр+"/"+ИтогКоробок;
							
							
							
							
							НаименованиеИАдресПолучателя	= Шапка.НаименованиеСокращенное + " (" + Строка(Шапка.ПолучательСсылкаНомерТочки) + "), " + АдресПолучения;
							
							СтрИсследования="";
							Для каждого ЭлИсл Из СпИсследования Цикл
								СтрИсследования=СтрИсследования+" "+ЭлИсл.Значение;	
							КонецЦикла;
							
							ОбластьТаблица = Макет.ПолучитьОбласть("Строка");
							СчДок=СчДок+1;
							ОбластьТаблица.Параметры.Номер=СчДок;
							ОбластьТаблица.Параметры.ТТ=Организация+" - "+НаименованиеИАдресПолучателя;
							ОбластьТаблица.Параметры.Наименование=ТоварКоличество;//+" "+СтрокаПроизводитель;
							ОбластьТаблица.Параметры.Вес=ИтогКоличество;
							Если ВРег(СокрЛП(Шапка.ПолучательРегион)) = "МОСКВА" Тогда
								Форма="Ф№4, ВСЭ";
							Иначе
								Форма="Ф№2, ВСЭ";
							КонецЕсли;	
							ОбластьТаблица.Параметры.ВидУслуг=Форма;
							ОбластьТаблица.Параметры.ДатаЗаписи=Шапка.ДатаДокумента;
							Результат.Вывести(ОбластьТаблица);
							
						КонецЦикла; 
					КонецЦикла; 
				КонецЦикла; 
			КонецЦикла; 
		КонецЦикла; 
	КонецЦикла; 
КонецПроцедуры //ПечатьВетСвидетельство4(СсылкаНаДокумент) Экспорт

&НаКлиенте
Процедура СохранитьВЭксель(Команда)
	ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	
	ВыборФайла.Фильтр                  = "XLS-таблица(*.xls)|*.xls";
	ВыборФайла.Заголовок               = "Выберите файл";
	ВыборФайла.ПредварительныйПросмотр = Ложь;
	ВыборФайла.Расширение              = ".xls";
	ВыборФайла.ИндексФильтра           = 0;
	//ВыборФайла.ПолноеИмяФайла          = Значение; 
	ВыборФайла.ПроверятьСуществованиеФайла = Ложь;
	
	Если ВыборФайла.Выбрать() Тогда
		Значение = ВыборФайла.ПолноеИмяФайла;
		Результат.Записать(Значение,ТипФайлаТабличногоДокумента.XLS);
	КонецЕсли;
КонецПроцедуры
