Функция ПолучитьОтчет(МассивСклад,ДатаОтчета) Экспорт
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакет("Макет");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЗначенияСвойствОбъектов.Значение КАК Поставщик,
	               |	ТоварыНаСкладахОстаткиИОбороты.Номенклатура КАК Номенклатура,
	               |	ТоварыНаСкладахОстаткиИОбороты.ЕдиницаИзмерения,
	               |	СУММА(ТоварыНаСкладахОстаткиИОбороты.КоличествоНачальныйОстаток) КАК КоличествоНачальныйОстаток,
	               |	СУММА(ТоварыНаСкладахОстаткиИОбороты.КоличествоКонечныйОстаток) КАК КоличествоКонечныйОстаток,
	               |	СУММА(ТоварыНаСкладахОстаткиИОбороты.КоличествоПриход) КАК КоличествоПриход,
	               |	СУММА(ТоварыНаСкладахОстаткиИОбороты.КоличествоРасход) КАК КоличествоРасход,
	               |	МАКСИМУМ(ЗапросПоДвижениям.ИзТорговойТочки) КАК ИзТорговойТочки,
	               |	МАКСИМУМ(ЗапросПоДвижениям.ОтПоставщика) КАК ОтПоставщика,
	               |	МАКСИМУМ(ЗапросПоДвижениям.ОтгрузкаВТорговуюТочку) КАК ОтгрузкаВТорговуюТочку,
	               |	МАКСИМУМ(ЗапросПоДвижениям.ОтгрузкаТехнологу) КАК ОтгрузкаТехнологу,
	               |	МАКСИМУМ(ЗапросПоДвижениям.ВозвратПоставщику) КАК ВозвратПоставщику,
	               |	МАКСИМУМ(ЗапросПоДвижениям.Перемещение) КАК Перемещение
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, , , Склад В (&Склад)) КАК ТоварыНаСкладахОстаткиИОбороты
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |		ПО ТоварыНаСкладахОстаткиИОбороты.Характеристика = ЗначенияСвойствОбъектов.Объект
	               |			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ТоварыНаСкладахОбороты.Номенклатура КАК Номенклатура,
	               |			СУММА(ВЫБОР
	               |					КОГДА ТоварыНаСкладахОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ИзТорговойТочки)
	               |						ТОГДА ТоварыНаСкладахОбороты.КоличествоПриход
	               |					ИНАЧЕ 0
	               |				КОНЕЦ) КАК ИзТорговойТочки,
	               |			СУММА(ВЫБОР
	               |					КОГДА ТоварыНаСкладахОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ОтПоставщика)
	               |						ТОГДА ТоварыНаСкладахОбороты.КоличествоПриход
	               |					ИНАЧЕ 0
	               |				КОНЕЦ) КАК ОтПоставщика,
	               |			СУММА(ВЫБОР
	               |					КОГДА ТоварыНаСкладахОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
	               |						ТОГДА ТоварыНаСкладахОбороты.КоличествоРасход
	               |					ИНАЧЕ 0
	               |				КОНЕЦ) КАК ОтгрузкаВТорговуюТочку,
	               |			СУММА(ВЫБОР
	               |					КОГДА ТоварыНаСкладахОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаТехнологу)
	               |						ТОГДА ТоварыНаСкладахОбороты.КоличествоРасход
	               |					ИНАЧЕ 0
	               |				КОНЕЦ) КАК ОтгрузкаТехнологу,
	               |			СУММА(ВЫБОР
	               |					КОГДА ТоварыНаСкладахОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ВозвратПоставщику)
	               |						ТОГДА ТоварыНаСкладахОбороты.КоличествоРасход
	               |					ИНАЧЕ 0
	               |				КОНЕЦ) КАК ВозвратПоставщику,
	               |			СУММА(ВЫБОР
	               |					КОГДА ТоварыНаСкладахОбороты.Регистратор.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.Перемещение)
	               |						ТОГДА ТоварыНаСкладахОбороты.КоличествоРасход
	               |					ИНАЧЕ 0
	               |				КОНЕЦ) КАК Перемещение,
	               |			ТоварыНаСкладахОбороты.Характеристика КАК Характеристика
	               |		ИЗ
	               |			РегистрНакопления.ТоварыНаСкладах.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Склад В (&Склад)) КАК ТоварыНаСкладахОбороты
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ТоварыНаСкладахОбороты.Номенклатура,
	               |			ТоварыНаСкладахОбороты.Характеристика) КАК ЗапросПоДвижениям
	               |		ПО ТоварыНаСкладахОстаткиИОбороты.Номенклатура = ЗапросПоДвижениям.Номенклатура
	               |			И ТоварыНаСкладахОстаткиИОбороты.Характеристика = ЗапросПоДвижениям.Характеристика
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТоварыНаСкладахОстаткиИОбороты.Номенклатура,
	               |	ТоварыНаСкладахОстаткиИОбороты.ЕдиницаИзмерения,
	               |	ЗначенияСвойствОбъектов.Значение
	               |ИТОГИ ПО
	               |	Поставщик,
	               |	Номенклатура";
	Запрос.УстановитьПараметр("Склад",МассивСклад);
	Запрос.УстановитьПараметр("НачалоПериода",НачалоДня(ДатаОтчета));
	Запрос.УстановитьПараметр("КонецПериода",КонецДня(ДатаОтчета));
	
	Область = Макет.ПолучитьОбласть("Заголовок");
	КоличествоМассива = МассивСклад.Количество();
	Счетчик = 1;
	Для Каждого ЭлМассива Из МассивСклад Цикл
		Если Не Счетчик = КоличествоМассива Тогда
			СимволЗапятая = "; ";
		Иначе
			СимволЗапятая = "";
		КонецЕсли;
		Область.Параметры.Склад = Строка(Область.Параметры.Склад) + Строка(ЭлМассива) + СимволЗапятая;	
		Счетчик = Счетчик + 1;
	КонецЦикла; 	
	Область.Параметры.ДатаОтчета 	= Формат(ДатаОтчета,"ДЛФ=DD");
	ТабДок.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДок.Вывести(Область);
	
	ВыборкаПоставщик = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Поставщик");
	Пока ВыборкаПоставщик.Следующий() Цикл
		Область = Макет.ПолучитьОбласть("Поставщик");
		Область.Параметры.Заполнить(ВыборкаПоставщик);
		ТабДок.Вывести(Область);
		
		ВыборкаНоменклатура = ВыборкаПоставщик.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Номенклатура");
		Пока ВыборкаНоменклатура.Следующий() Цикл
			Область = Макет.ПолучитьОбласть("Номенклатуа");
			Область.Параметры.Заполнить(ВыборкаНоменклатура);
			ТабДок.Вывести(Область);
	
		КонецЦикла;	
	КонецЦикла;	
	Область = Макет.ПолучитьОбласть("Подвал");
	Область.Параметры.ВремяПечати = "["+ТекущаяДата()+"] "+"Автор: "+ПараметрыСеанса.ТекущийПользователь;
		
	ТабДок.Вывести(Область);
	
	Возврат ТабДок;
КонецФункции
