
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрПериод = КомпоновщикНастроек.ПолучитьНастройки().ПараметрыДанных.Элементы.Найти("Период");
	Если Не ЗначениеЗаполнено(ПараметрПериод.Значение) Тогда
		Возврат;
	КонецЕсли;	
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ЛистУчетаZОтчеты.Касса КАК ККМ,
	               |	ЛистУчетаZОтчеты.Ссылка.ТорговаяТочка КАК Размещение,
	               |	НАЧАЛОПЕРИОДА(ЛистУчетаZОтчеты.Ссылка.Дата, ДЕНЬ) КАК Дата
	               |ИЗ
	               |	Документ.ЛистУчета.ZОтчеты КАК ЛистУчетаZОтчеты
	               |ГДЕ
	               |	ЛистУчетаZОтчеты.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	               |	И ЛистУчетаZОтчеты.Ссылка.Проведен = ИСТИНА
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(ФинансовыйОстатки.Субконто2 КАК Справочник.СтруктурныеЕдиницы) КАК Размещение,
	               |	ВЫРАЗИТЬ(ФинансовыйОстатки.Субконто3 КАК Справочник.ОсновныеСредства) КАК ККМ,
	               |	ФинансовыйОстатки.КоличествоОстаток,
	               |	&ДатаНач КАК Дата
	               |ИЗ
	               |	РегистрБухгалтерии.Финансовый.Остатки(
	               |			&ДатаНач,
	               |			Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ККМ),
	               |			,
	               |			Субконто3 В
	               |				(ВЫБРАТЬ
	               |					ОсновныеСредства.Ссылка
	               |				ИЗ
	               |					Справочник.ОсновныеСредства КАК ОсновныеСредства
	               |				ГДЕ
	               |					(ОсновныеСредства.Наименование ПОДОБНО &ККМ
	               |						ИЛИ ОсновныеСредства.Наименование ПОДОБНО &ЧПМ))) КАК ФинансовыйОстатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НАЧАЛОПЕРИОДА(ФинансовыйОбороты.Период, ДЕНЬ) КАК Дата,
	               |	ФинансовыйОбороты.КоличествоОборотДт,
	               |	ФинансовыйОбороты.КоличествоОборотКт,
	               |	ВЫРАЗИТЬ(ФинансовыйОбороты.Субконто2 КАК Справочник.СтруктурныеЕдиницы) КАК Размещение,
	               |	ВЫРАЗИТЬ(ФинансовыйОбороты.Субконто3 КАК Справочник.ОсновныеСредства) КАК ККМ
	               |ИЗ
	               |	РегистрБухгалтерии.Финансовый.Обороты(
	               |			&ДатаНач,
	               |			&ДатаКон,
	               |			День,
	               |			Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ККМ),
	               |			,
	               |			Субконто3 В
	               |				(ВЫБРАТЬ
	               |					ОсновныеСредства.Ссылка
	               |				ИЗ
	               |					Справочник.ОсновныеСредства КАК ОсновныеСредства
	               |				ГДЕ
	               |					(ОсновныеСредства.Наименование ПОДОБНО &ККМ
	               |						ИЛИ ОсновныеСредства.Наименование ПОДОБНО &ЧПМ)),
	               |			,
	               |			) КАК ФинансовыйОбороты";
				   
	Запрос.УстановитьПараметр("ДатаНач", ПараметрПериод.Значение.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКон", ПараметрПериод.Значение.ДатаОкончания);
	Запрос.УстановитьПараметр("ККМ", "%ККМ%");
	Запрос.УстановитьПараметр("ЧПМ", "%ЧПМ%");
	
	Результаты = Запрос.ВыполнитьПакет();
	ТабПоЛистам = Результаты[0].Выгрузить();
	ТабИтогиПоСчету = Результаты[1].Выгрузить();
	ТабИтогиПоСчету.Индексы.Добавить("ККМ, Размещение, Дата");
	ТабОбороты = Результаты[2].Выгрузить();
	ТабОбороты.Индексы.Добавить("Дата");
	
	ДатаОбработки = ПараметрПериод.Значение.ДатаНачала;
	Пока ДатаОбработки <= ПараметрПериод.Значение.ДатаОкончания Цикл
		
		СтрокиПредОстатки = ТабИтогиПоСчету.НайтиСтроки(Новый Структура("Дата", ДатаОбработки - 86400));
		Для Каждого СтрокаПредОстаток Из СтрокиПредОстатки Цикл
			СтрокаДоб = ТабИтогиПоСчету.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаДоб, СтрокаПредОстаток);
			СтрокаДоб.Дата = ДатаОбработки;
		КонецЦикла;	
		
		СтрокиОбороты = ТабОбороты.НайтиСтроки(Новый Структура("Дата", ДатаОбработки));
		Для Каждого СтрокаОборот Из СтрокиОбороты Цикл
			СтрокиОстаток = ТабИтогиПоСчету.НайтиСтроки(Новый Структура("ККМ, Размещение, Дата", СтрокаОборот.ККМ, СтрокаОборот.Размещение, ДатаОбработки));
			Если СтрокиОстаток.Количество() > 0 Тогда
				СтрокаОстаток = СтрокиОстаток[0];
			Иначе
				СтрокаОстаток = ТабИтогиПоСчету.Добавить();
				СтрокаОстаток.ККМ = СтрокаОборот.ККМ;
				СтрокаОстаток.Размещение = СтрокаОборот.Размещение;
				СтрокаОстаток.Дата = ДатаОбработки;
				СтрокаОстаток.КоличествоОстаток = 0;
			КонецЕсли;
			СтрокаОстаток.КоличествоОстаток = СтрокаОстаток.КоличествоОстаток + СтрокаОборот.КоличествоОборотДт - СтрокаОборот.КоличествоОборотКт;
		КонецЦикла;	
		ДатаОбработки = ДатаОбработки + 86400;
	КонецЦикла;	
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ЛистУчетаZОтчеты.Касса КАК ККМ,
	               |	ЛистУчетаZОтчеты.Ссылка.ТорговаяТочка КАК Размещение,
	               |	НАЧАЛОПЕРИОДА(ЛистУчетаZОтчеты.Ссылка.Дата, ДЕНЬ) КАК Дата
	               |ПОМЕСТИТЬ ВТ_ДанныеПоЛистамУчета
	               |ИЗ
	               |	Документ.ЛистУчета.ZОтчеты КАК ЛистУчетаZОтчеты
	               |ГДЕ
	               |	ЛистУчетаZОтчеты.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	               |	И ЛистУчетаZОтчеты.Ссылка.Проведен = ИСТИНА
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Таб.Дата,
	               |	Таб.Размещение,
	               |	Таб.ККМ,
	               |	Таб.КоличествоОстаток
	               |ПОМЕСТИТЬ ВТ_ДанныеПоСчету
	               |ИЗ
	               |	&ТабПоСчету КАК Таб
	               |ГДЕ
	               |	Таб.КоличествоОстаток > 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(ВТ_ДанныеПоЛистамУчета.ККМ, ВТ_ДанныеПоСчету.ККМ) КАК ККМ,
	               |	ЕСТЬNULL(ВТ_ДанныеПоЛистамУчета.Размещение, ВТ_ДанныеПоСчету.Размещение) КАК Размещение,
	               |	ЕСТЬNULL(ВТ_ДанныеПоЛистамУчета.Дата, ВТ_ДанныеПоСчету.Дата) КАК Дата,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(ВТ_ДанныеПоСчету.КоличествоОстаток, 0) > 0
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК УчтенаНаСчете02_1,
	               |	ВЫБОР
	               |		КОГДА ВТ_ДанныеПоЛистамУчета.ККМ ЕСТЬ NULL 
	               |			ТОГДА ЛОЖЬ
	               |		ИНАЧЕ ИСТИНА
	               |	КОНЕЦ КАК УчтенаВЛистеУчета
	               |ИЗ
	               |	ВТ_ДанныеПоЛистамУчета КАК ВТ_ДанныеПоЛистамУчета
	               |		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ДанныеПоСчету КАК ВТ_ДанныеПоСчету
	               |		ПО ВТ_ДанныеПоЛистамУчета.Дата = ВТ_ДанныеПоСчету.Дата
	               |			И ВТ_ДанныеПоЛистамУчета.Размещение = ВТ_ДанныеПоСчету.Размещение
	               |			И ВТ_ДанныеПоЛистамУчета.ККМ = ВТ_ДанныеПоСчету.ККМ
	               |ГДЕ
	               |	(ВТ_ДанныеПоЛистамУчета.ККМ ЕСТЬ NULL 
	               |			ИЛИ ВТ_ДанныеПоСчету.ККМ ЕСТЬ NULL )
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_ДанныеПоЛистамУчета
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_ДанныеПоСчету";
				   
	Запрос.УстановитьПараметр("ТабПоСчету", ТабИтогиПоСчету);
	
	
	ТабККМ = Запрос.Выполнить().Выгрузить();
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТабККМ", ТабККМ);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	
	//Компоновка данных
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	//Вывод результата
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры
