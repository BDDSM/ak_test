
#Область ПрограммныйИнтерфейс

//+++АК LATV 2018.08.07 ИП-00017712.02
Процедура СформироватьОтчетВФоне(Параметры, АдресХранилища) Экспорт

	ДокументРезультат = Новый ТабличныйДокумент;
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	
	КомпоновщикНастроек.ЗагрузитьНастройки(Параметры.Настройки);
	Если Параметры.Свойство("РасшифровкаПоТекущейПроверке") Тогда
		КомпоновщикНастроек.ФиксированныеНастройки.ДополнительныеСвойства.Вставить("РасшифровкаПоТекущейПроверке");
	КонецЕсли;
	
	СкомпоноватьРезультат(ДокументРезультат, ДанныеРасшифровки);
	
	Результат = Новый Структура();
	Результат.Вставить("ДокументРезультат", ДокументРезультат);
	Результат.Вставить("ДанныеРасшифровки", ДанныеРасшифровки);
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

//+++АК LATV 2018.06.08 ИП-00017712.01
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	ДокументРезультат.Очистить();
	
	ДополнительныеСвойства = КомпоновщикНастроек.ФиксированныеНастройки.ДополнительныеСвойства;
	Если Не ДополнительныеСвойства.Свойство("РасшифровкаПоТекущейПроверке") Тогда
		СформироватьОбщийОтчет(ДокументРезультат, ДанныеРасшифровки);
	Иначе
		СформироватьДетальныйОтчет(ДокументРезультат, ДанныеРасшифровки);
	КонецЕсли;

КонецПроцедуры

//+++АК LATV 2018.06.08 ИП-00017712.01
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	Если Не Справочники.Проверки.ВозможностьПроверки() Тогда
		ТекстСообщения = НСтр("ru = 'У пользователя отсутствуют права на выполнение проверок'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
	КонецЕсли;
	
	ВидыОтчета = Отчеты.СравнениеОборотовМеждуБазами.ВидыОтчета();
	Проверки = ЗначениеПараметраКД("Проверки", Новый СписокЗначений);
	Для Каждого ТекПроверка Из Проверки Цикл
		ПараметрыПроверки = Справочники.Проверки.СтруктураПараметров(ТекПроверка.Значение);
		Если ПустаяСтрока(ПараметрыПроверки.ВидОтчета)
		 Или ВидыОтчета.НайтиПоЗначению(ПараметрыПроверки.ВидОтчета) = Неопределено Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Не заполнен тип отчета у проверки %1'"), ТекПроверка.Значение);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ТекПроверка.Значение, "ВидОтчета",, Отказ);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбщийОтчет

//+++АК LATV 2018.06.08 ИП-00017712.01
Процедура СформироватьОбщийОтчет(ДокументРезультат, ДанныеРасшифровки)

	ДанныеСравнения = НоваяТаблицаРезультат_Общий();
	
	ВыполненныеПроверки = Новый Массив;
	
	Проверки = ЗначениеПараметраКД("Проверки", Новый СписокЗначений);
	Для Каждого ТекПроверка Из Проверки Цикл
		Если ВыполненныеПроверки.Найти(ТекПроверка.Значение) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыПроверки = ПараметрыПроверки(ТекПроверка.Значение);
		Различия = ПолучитьОбщиеДанныеПоТекущейПроверке(ТекПроверка.Значение, ПараметрыПроверки);
		
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(Различия, ДанныеСравнения);
		
		ВыполненныеПроверки.Добавить(ТекПроверка.Значение);
	КонецЦикла;
	
	ЗаполнитьТабличныйДокумент(ДокументРезультат, ДанныеРасшифровки, ДанныеСравнения, "ОсновнаяСхемаКомпоновкиДанных", Метаданные().Синоним);

КонецПроцедуры

//+++АК LATV 2018.06.08 ИП-00017712.01
Функция ПолучитьОбщиеДанныеПоТекущейПроверке(Проверка, ПараметрыПроверки)

	Соединение = Справочники.Проверки.ПолучитьСоединениеСбазойБух(ПараметрыПроверки);
	
	ОборотыБух	= ОборотыВБухБазе(Соединение, ПараметрыПроверки);
	Различия	= СравнитьСОборотамиФин(ОборотыБух, ПараметрыПроверки);
	
	Различия.Колонки.Добавить("Проверка");
	Различия.ЗаполнитьЗначения(Проверка, "Проверка");
	
	Возврат Различия;

КонецФункции

//+++АК LATV 2018.08.07 ИП-00017712.02
Функция ОборотыВБухБазе(Соединение, ПараметрыПроверки)

	Запрос = Соединение.NewObject("Запрос");
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СальдоНаНачало,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СальдоНаКонец
		|ПОМЕСТИТЬ ВТ_Сальдо
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			,
		|			Счет.Код В (&СписокКодовСчетовСумма),
		|			,
		|			Организация.Наименование = &НаименованиеОрганизации
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	-ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток,
		|	-ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			,
		|			Счет.Код В (&СписокКодовСчетовРазность),
		|			,
		|			Организация.Наименование = &НаименованиеОрганизации
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5) КАК ХозрасчетныйОстаткиИОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	0 КАК СальдоНаНачало,
		|	СУММА(БухОбороты.СуммаОборот) КАК Сумма,
		|	0 КАК СальдоНаКонец
		|ПОМЕСТИТЬ втОбщиеДанные
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Началопериода,
		|			&КонецПериода,
		|			,
		|			Счет.Код В (&СписокКодовСчетовСумма),
		|			,
		|			Организация.Наименование = &НаименованиеОрганизации
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5,
		|			,
		|			) КАК БухОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	0 КАК СальдоНаНачало,
		|	-СУММА(БухОбороты.СуммаОборот) КАК Сумма,
		|	0 КАК СальдоНаКонец
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Началопериода,
		|			&КонецПериода,
		|			,
		|			Счет.Код В (&СписокКодовСчетовРазность),
		|			,
		|			Организация.Наименование = &НаименованиеОрганизации
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5,
		|			,
		|			) КАК БухОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Сальдо.СальдоНаНачало,
		|	0,
		|	ВТ_Сальдо.СальдоНаКонец
		|ИЗ
		|	ВТ_Сальдо КАК ВТ_Сальдо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(втОбщиеДанные.СальдоНаНачало) КАК СальдоНаНачало,
		|	СУММА(втОбщиеДанные.Сумма) КАК Сумма,
		|	СУММА(втОбщиеДанные.СальдоНаКонец) КАК СальдоНаКонец
		|ИЗ
		|	втОбщиеДанные КАК втОбщиеДанные";
	
	Запрос.УстановитьПараметр("НачалоПериода",				ПараметрыПроверки.ПериодОтчета.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода",				ПараметрыПроверки.ПериодОтчета.ДатаОкончания);
	Запрос.УстановитьПараметр("НаименованиеОрганизации",	ПараметрыПроверки.Организация.Наименование);
	Запрос.УстановитьПараметр("СписокКодовСчетовСумма",		ЗначениеВКОМ(Соединение, ПараметрыПроверки.СписокСчетовБухСумма));
	Запрос.УстановитьПараметр("СписокКодовСчетовРазность",	ЗначениеВКОМ(Соединение, ПараметрыПроверки.СписокСчетовБухРазность));
	
	ЗаполнитьУсловияСубконто(Запрос, "Бух", Соединение, ПараметрыПроверки);
	УстановитьТипСравнения(Запрос, ПараметрыПроверки);
	
	Внешн_ТЗ = Запрос.Выполнить().Выгрузить();
	
	Результат = ЗначениеИзКОМ(Соединение, Внешн_ТЗ);
	
	Возврат Результат;

КонецФункции

//+++АК LATV 2018.08.07 ИП-00017712.02
Функция СравнитьСОборотамиФин(ТЗ_Бух, ПараметрыПроверки)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЗ.СальдоНаНачало КАК СальдоНаНачало,
		|	ТЗ.Сумма КАК Сумма,
		|	ТЗ.СальдоНаКонец КАК СальдоНаКонец
		|ПОМЕСТИТЬ ВТ_БухДанные
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФинансовыйОстаткиИОбороты.СуммаНачальныйОстаток КАК СальдоНаНачало,
		|	ФинансовыйОстаткиИОбороты.СуммаКонечныйОстаток КАК СальдоНаКонец
		|ПОМЕСТИТЬ ВТ_Сальдо
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			,
		|			Счет.Код В (&СписокСчетовСумма),
		|			,
		|			Организация = &Организация
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5) КАК ФинансовыйОстаткиИОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	-ФинансовыйОстаткиИОбороты.СуммаНачальныйОстаток,
		|	-ФинансовыйОстаткиИОбороты.СуммаКонечныйОстаток
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			,
		|			Счет.Код В (&СписокСчетовРазность),
		|			,
		|			Организация = &Организация
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5) КАК ФинансовыйОстаткиИОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	0 КАК СальдоНаНачало,
		|	СУММА(ФинансовыйОбороты.СуммаОборот) КАК Сумма,
		|	0 КАК СальдоНаКонец
		|ПОМЕСТИТЬ втОбщиеДанные
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			Счет.Код В (&СписокСчетовСумма),
		|			,
		|			Организация = &Организация
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5,
		|			,
		|			) КАК ФинансовыйОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	0,
		|	-СУММА(ФинансовыйОбороты.СуммаОборот),
		|	0
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			Счет.Код В (&СписокСчетовРазность),
		|			,
		|			Организация = &Организация
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5,
		|			,
		|			) КАК ФинансовыйОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Сальдо.СальдоНаНачало,
		|	0,
		|	ВТ_Сальдо.СальдоНаКонец
		|ИЗ
		|	ВТ_Сальдо КАК ВТ_Сальдо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(втОбщиеДанные.СальдоНаНачало) КАК СальдоНаНачало,
		|	СУММА(втОбщиеДанные.Сумма) КАК Сумма,
		|	СУММА(втОбщиеДанные.СальдоНаКонец) КАК СальдоНаКонец
		|ПОМЕСТИТЬ ВТ_ДанныеФин
		|ИЗ
		|	втОбщиеДанные КАК втОбщиеДанные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВТ_ДанныеФин.СальдоНаНачало, 0) КАК СальдоНаНачалоФин,
		|	ЕСТЬNULL(ВТ_БухДанные.СальдоНаНачало, 0) КАК СальдоНаНачалоБух,
		|	ЕСТЬNULL(ВТ_БухДанные.СальдоНаНачало, 0) - ЕСТЬNULL(ВТ_ДанныеФин.СальдоНаНачало, 0) КАК СальдоНаНачалоРазница,
		|	ЕСТЬNULL(ВТ_ДанныеФин.Сумма, 0) КАК СуммаФин,
		|	ЕСТЬNULL(ВТ_БухДанные.Сумма, 0) КАК СуммаБух,
		|	ЕСТЬNULL(ВТ_БухДанные.Сумма, 0) - ЕСТЬNULL(ВТ_ДанныеФин.Сумма, 0) КАК СуммаРазница,
		|	ЕСТЬNULL(ВТ_ДанныеФин.СальдоНаКонец, 0) КАК СальдоНаКонецФин,
		|	ЕСТЬNULL(ВТ_БухДанные.СальдоНаКонец, 0) КАК СальдоНаКонецБух,
		|	ЕСТЬNULL(ВТ_БухДанные.СальдоНаКонец, 0) - ЕСТЬNULL(ВТ_ДанныеФин.СальдоНаКонец, 0) КАК СальдоНаКонецРазница
		|ИЗ
		|	ВТ_БухДанные КАК ВТ_БухДанные
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ДанныеФин КАК ВТ_ДанныеФин
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &ТолькоРасхождения
		|				ТОГДА ЕСТЬNULL(ВТ_БухДанные.Сумма, 0) <> ЕСТЬNULL(ВТ_ДанныеФин.Сумма, 0)
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("НачалоПериода",	ПараметрыПроверки.ПериодОтчета.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода",	ПараметрыПроверки.ПериодОтчета.ДатаОкончания);
	Запрос.УстановитьПараметр("Организация",	ПараметрыПроверки.Организация);
	Запрос.УстановитьПараметр("СписокСчетовСумма",		ПараметрыПроверки.СписокСчетовФинСумма);
	Запрос.УстановитьПараметр("СписокСчетовРазность",	ПараметрыПроверки.СписокСчетовФинРазность);
	
	Запрос.УстановитьПараметр("ТЗ", ТЗ_Бух);
	
	Запрос.УстановитьПараметр("ТолькоРасхождения", ЗначениеПараметраКД("ТолькоРасхождения", Ложь));
	
	ЗаполнитьУсловияСубконто(Запрос, "Фин",, ПараметрыПроверки);
	УстановитьТипСравнения(Запрос, ПараметрыПроверки);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;

КонецФункции

//+++АК LATV 2018.06.13 ИП-00017712.01
Функция НоваяТаблицаРезультат_Общий()

	Результат = Новый ТаблицаЗначений();
	
	Результат.Колонки.Добавить("Проверка");
	Результат.Колонки.Добавить("СальдоНаНачалоБух");
	Результат.Колонки.Добавить("СальдоНаНачалоФин");
	Результат.Колонки.Добавить("СальдоНаНачалоРазница");
	Результат.Колонки.Добавить("СуммаБух");
	Результат.Колонки.Добавить("СуммаФин");
	Результат.Колонки.Добавить("СуммаРазница");
	Результат.Колонки.Добавить("СальдоНаКонецБух");
	Результат.Колонки.Добавить("СальдоНаКонецФин");
	Результат.Колонки.Добавить("СальдоНаКонецРазница");
	
	Возврат Результат;

КонецФункции

#КонецОбласти

#Область ДетальныйОтчет

//+++АК LATV 2018.06.08 ИП-00017712.01
Процедура СформироватьДетальныйОтчет(ДокументРезультат, ДанныеРасшифровки)

	Проверки = ЗначениеПараметраКД("Проверки", Новый СписокЗначений);
	ТекПроверка = Проверки[0];
	
	ПараметрыПроверки = ПараметрыПроверки(ТекПроверка.Значение);
	
	Соединение = Справочники.Проверки.ПолучитьСоединениеСбазойБух(ПараметрыПроверки);
	
	Если ПараметрыПроверки.ВидОтчета = "ПроверкаПоУсловию" Тогда
		ДанныеСравнения = НоваяТаблицаРезультат_ПроверкаПоУсловию();
		
		ОборотыБух	= ОборотыВБухБазе_ПроверкаПоУсловию(Соединение, ПараметрыПроверки);
		Различия	= СравнитьСОборотамиФин_ПроверкаПоУсловию(ОборотыБух, ПараметрыПроверки);
		Если ЕстьРазличия(Различия, ПараметрыПроверки) Тогда
			ТЗ_ДвиженияВБухБазе	= ДокументыВБухБазе_ПроверкаПоУсловию(Соединение, Различия, ПараметрыПроверки);
			ТЗ_ДвиженияВФинБазе	= ДокументыВФинБазе_ПроверкаПоУсловию(Различия, ПараметрыПроверки);
			
			ДанныеСравнения = ВывестиРазличия_ПроверкаПоУсловию(ТЗ_ДвиженияВбухБазе, ТЗ_ДвиженияВФинБазе, ПараметрыПроверки);
			
			ДополнительнаяОбработкаРезультата(ДанныеСравнения);
			ИсключитьИзВыдачиОдинаковоеСальдоНаНачало(ДанныеСравнения);
		КонецЕсли;
		
		ЗаполнитьТабличныйДокумент(ДокументРезультат, ДанныеРасшифровки, ДанныеСравнения, "Макет_ПроверкаПоУсловию", Строка(ТекПроверка));
		
	ИначеЕсли ПараметрыПроверки.ВидОтчета = "ПроверкаПоСубконто" Тогда
		ДанныеСравнения = НоваяТаблицаРезультат_ПроверкаПоСубконто();
		
		ОборотыБух	= ОборотыВБухБазе_ПроверкаПоСубконто(Соединение, ПараметрыПроверки);
		Различия	= СравнитьСОборотамиФин_ПроверкаПоСубконто(ОборотыБух, ПараметрыПроверки);
		Если Различия.Количество() > 0 Тогда 
			ТЗ_ДвиженияВБухБазе	= ДокументыВБухБазе_ПроверкаПоСубконто(Соединение, Различия, ПараметрыПроверки);
			ТЗ_ДвиженияВФинБазе	= ДокументыВФинБазе_ПроверкаПоСубконто(Различия, ПараметрыПроверки);
			
			ДанныеСравнения = ВывестиРазличия_ПроверкаПоСубконто(ТЗ_ДвиженияВбухБазе, ТЗ_ДвиженияВФинБазе, ПараметрыПроверки);
		КонецЕсли;
		
		ЗаполнитьТабличныйДокумент(ДокументРезультат, ДанныеРасшифровки, ДанныеСравнения, "Макет_ПроверкаПоСубконто", Строка(ТекПроверка));
		
	КонецЕсли;

КонецПроцедуры

#Область ПроверкаПоУсловию

//+++АК LATV 2018.08.08 ИП-00017712.02
Функция ОборотыВБухБазе_ПроверкаПоУсловию(Соединение, ПараметрыПроверки)
	Перем ПодключениеУстановлено;
	
	Запрос = Соединение.NewObject("Запрос");
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СальдоНаНачало,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СальдоНаКонец
		|ПОМЕСТИТЬ ВТ_Сальдо
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			,
		|			Счет.Код В (&СписокКодовСчетовСумма),
		|			,
		|			Организация.Наименование = &НаименованиеОрганизации
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	-ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток,
		|	-ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			,
		|			Счет.Код В (&СписокКодовСчетовРазность),
		|			,
		|			Организация.Наименование = &НаименованиеОрганизации
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5) КАК ХозрасчетныйОстаткиИОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Сальдо.СальдоНаНачало КАК Сумма,
		|	""Сальдо на начало"" КАК Субконто1,
		|	0 КАК ПорядокПолей
		|ПОМЕСТИТЬ втОбщиеДанные
		|ИЗ
		|	ВТ_Сальдо КАК ВТ_Сальдо
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БухОбороты.СуммаОборот,
		|	БухОбороты.Субконто1.Наименование,
		|	1
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Началопериода,
		|			&КонецПериода,
		|			,
		|			Счет.Код В (&СписокКодовСчетовСумма),
		|			,
		|			Организация.Наименование = &НаименованиеОрганизации
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5,
		|			,
		|			) КАК БухОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	-БухОбороты.СуммаОборот,
		|	БухОбороты.Субконто1.Наименование,
		|	1
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Началопериода,
		|			&КонецПериода,
		|			,
		|			Счет.Код В (&СписокКодовСчетовРазность),
		|			,
		|			Организация.Наименование = &НаименованиеОрганизации
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5,
		|			,
		|			) КАК БухОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Сальдо.СальдоНаКонец,
		|	""Сальдо на конец"",
		|	2
		|ИЗ
		|	ВТ_Сальдо КАК ВТ_Сальдо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОбщиеДанные.Субконто1 КАК Субконто1,
		|	СУММА(втОбщиеДанные.Сумма) КАК Сумма,
		|	втОбщиеДанные.ПорядокПолей КАК ПорядокПолей
		|ИЗ
		|	втОбщиеДанные КАК втОбщиеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	втОбщиеДанные.Субконто1,
		|	втОбщиеДанные.ПорядокПолей
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПорядокПолей";
	
	Запрос.УстановитьПараметр("НачалоПериода",				ПараметрыПроверки.ПериодОтчета.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода",				ПараметрыПроверки.ПериодОтчета.ДатаОкончания);
	Запрос.УстановитьПараметр("НаименованиеОрганизации",	ПараметрыПроверки.Организация.Наименование);
	Запрос.УстановитьПараметр("СписокКодовСчетовСумма",		ЗначениеВКОМ(Соединение, ПараметрыПроверки.СписокСчетовБухСумма));
	Запрос.УстановитьПараметр("СписокКодовСчетовРазность",	ЗначениеВКОМ(Соединение, ПараметрыПроверки.СписокСчетовБухРазность));
	
	ЗаполнитьУсловияСубконто(Запрос, "Бух", Соединение, ПараметрыПроверки);
	УстановитьТипСравнения(Запрос, ПараметрыПроверки);
	
	Внешн_ТЗ = Запрос.Выполнить().Выгрузить();
	
	Результат = ЗначениеИзКОМ(Соединение, Внешн_ТЗ);
	
	Возврат Результат;

КонецФункции

//+++АК LATV 2018.08.08 ИП-00017712.02
Функция СравнитьСОборотамиФин_ПроверкаПоУсловию(ТЗ, ПараметрыПроверки)

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТЗ.Сумма КАК Сумма,
		|	ТЗ.ПорядокПолей КАК ПорядокПолей,
		|	ТЗ.Субконто1 КАК Субконто1
		|ПОМЕСТИТЬ ВТ_БухДанные
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФинансовыйОстаткиИОбороты.СуммаНачальныйОстаток КАК СальдоНаНачало,
		|	ФинансовыйОстаткиИОбороты.СуммаКонечныйОстаток КАК СальдоНаКонец
		|ПОМЕСТИТЬ ВТ_Сальдо
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			,
		|			Счет.Код В (&СписокСчетовСумма),
		|			,
		|			Организация = &Организация
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5) КАК ФинансовыйОстаткиИОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	-ФинансовыйОстаткиИОбороты.СуммаНачальныйОстаток,
		|	-ФинансовыйОстаткиИОбороты.СуммаКонечныйОстаток
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			,
		|			Счет.Код В (&СписокСчетовРазность),
		|			,
		|			Организация = &Организация
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5) КАК ФинансовыйОстаткиИОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Сальдо.СальдоНаНачало КАК Сумма,
		|	""Сальдо на начало"" КАК Субконто1,
		|	0 КАК ПорядокПолей
		|ПОМЕСТИТЬ втОбщиеДанные
		|ИЗ
		|	ВТ_Сальдо КАК ВТ_Сальдо
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ФинансовыйОбороты.СуммаОборот,
		|	ФинансовыйОбороты.Субконто1.Наименование,
		|	1
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			Счет.Код В (&СписокСчетовСумма),
		|			,
		|			Организация = &Организация
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5,
		|			,
		|			) КАК ФинансовыйОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	-ФинансовыйОбороты.СуммаОборот,
		|	ФинансовыйОбороты.Субконто1.Наименование,
		|	1
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			Счет.Код В (&СписокСчетовРазность),
		|			,
		|			Организация = &Организация
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5,
		|			,
		|			) КАК ФинансовыйОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Сальдо.СальдоНаКонец,
		|	""Сальдо на конец"",
		|	2
		|ИЗ
		|	ВТ_Сальдо КАК ВТ_Сальдо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОбщиеДанные.Субконто1 КАК Субконто1,
		|	СУММА(втОбщиеДанные.Сумма) КАК Сумма,
		|	втОбщиеДанные.ПорядокПолей КАК ПорядокПолей
		|ПОМЕСТИТЬ ВТ_ДанныеФин
		|ИЗ
		|	втОбщиеДанные КАК втОбщиеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	втОбщиеДанные.Субконто1,
		|	втОбщиеДанные.ПорядокПолей
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПРЕДСТАВЛЕНИЕ(ЕСТЬNULL(ВТ_БухДанные.Субконто1, ВТ_ДанныеФин.Субконто1)) КАК Субконто1,
		|	ЕСТЬNULL(ВТ_БухДанные.ПорядокПолей, ВТ_ДанныеФин.ПорядокПолей) КАК ПорядокПолей,
		|	ЕСТЬNULL(ВТ_ДанныеФин.Субконто1, """") КАК Субконто1_Фин,
		|	ЕСТЬNULL(ВТ_БухДанные.Субконто1, """") КАК Субконто1_Бух,
		|	ЕСТЬNULL(ВТ_ДанныеФин.Сумма, 0) КАК СуммаФин,
		|	ЕСТЬNULL(ВТ_БухДанные.Сумма, 0) КАК СуммаБух,
		|	ЕСТЬNULL(ВТ_БухДанные.Сумма, 0) - ЕСТЬNULL(ВТ_ДанныеФин.Сумма, 0) КАК Разница
		|ИЗ
		|	ВТ_БухДанные КАК ВТ_БухДанные
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ДанныеФин КАК ВТ_ДанныеФин
		|		ПО ВТ_БухДанные.Субконто1 = ВТ_ДанныеФин.Субконто1
		|			И ВТ_БухДанные.ПорядокПолей = ВТ_ДанныеФин.ПорядокПолей
		|ГДЕ
		|	ЕСТЬNULL(ВТ_БухДанные.Сумма, 0) <> ЕСТЬNULL(ВТ_ДанныеФин.Сумма, 0)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПорядокПолей";
	
	Запрос.УстановитьПараметр("НачалоПериода",	ПараметрыПроверки.ПериодОтчета.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода",	ПараметрыПроверки.ПериодОтчета.ДатаОкончания);
	Запрос.УстановитьПараметр("Организация",	ПараметрыПроверки.Организация);
	Запрос.УстановитьПараметр("СписокСчетовСумма",		ПараметрыПроверки.СписокСчетовФинСумма);
	Запрос.УстановитьПараметр("СписокСчетовРазность",	ПараметрыПроверки.СписокСчетовФинРазность);
	
	Запрос.УстановитьПараметр("ТЗ", ТЗ);
	
	ЗаполнитьУсловияСубконто(Запрос, "Фин",, ПараметрыПроверки);
	УстановитьТипСравнения(Запрос, ПараметрыПроверки);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;

КонецФункции

//+++АК LATV 2018.08.08 ИП-00017712.02
Функция ДокументыВБухБазе_ПроверкаПоУсловию(Соединение, ТЗ_Различия, ПараметрыПроверки)

	Запрос = Соединение.NewObject("Запрос");
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПОДСТРОКА(ТЗ.Субконто1, 1, 250) КАК Субконто1
		|ПОМЕСТИТЬ ВТ_Различия
		|ИЗ
		|	&ТЗ КАК ТЗ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Субконто1
		|;
		|ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток КАК СальдоНаНачало,
		|	ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток КАК СальдоНаКонец
		|ПОМЕСТИТЬ ВТ_Сальдо
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			,
		|			Счет.Код В (&СписокКодовСчетовСумма),
		|			,
		|			Организация.Наименование = &НаименованиеОрганизации
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5) КАК ХозрасчетныйОстаткиИОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	-ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстаток,
		|	-ХозрасчетныйОстаткиИОбороты.СуммаКонечныйОстаток
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			,
		|			Счет.Код В (&СписокКодовСчетовРазность),
		|			,
		|			Организация.Наименование = &НаименованиеОрганизации
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5) КАК ХозрасчетныйОстаткиИОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Сальдо.СальдоНаНачало КАК Сумма,
		|	""Сальдо на начало"" КАК Регистратор,
		|	""Сальдо на начало"" КАК Субконто1,
		|	"""" КАК ГУИД,
		|	0 КАК ПорядокПолей
		|ПОМЕСТИТЬ втОбщиеДанные
		|ИЗ
		|	ВТ_Сальдо КАК ВТ_Сальдо
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БухОбороты.СуммаОборот,
		|	БухОбороты.Регистратор,
		|	ВТ_Различия.Субконто1,
		|	""123456789012345678901234567890123456"",
		|	1
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Началопериода,
		|			&КонецПериода,
		|			Регистратор,
		|			Счет.Код В (&СписокКодовСчетовСумма),
		|			,
		|			Организация.Наименование = &НаименованиеОрганизации
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5
		|				И Субконто1.Наименование В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТ_Различия.Субконто1
		|					ИЗ
		|						ВТ_Различия),
		|			,
		|			) КАК БухОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Различия КАК ВТ_Различия
		|			ПО БухОбороты.Субконто1.Наименование = ВТ_Различия.Субконто1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	-БухОбороты.СуммаОборот,
		|	БухОбороты.Регистратор,
		|	ВТ_Различия.Субконто1,
		|	""123456789012345678901234567890123456"",
		|	1
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Началопериода,
		|			&КонецПериода,
		|			Регистратор,
		|			Счет.Код В (&СписокКодовСчетовРазность),
		|			,
		|			Организация.Наименование = &НаименованиеОрганизации
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5
		|				И Субконто1.Наименование В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТ_Различия.Субконто1
		|					ИЗ
		|						ВТ_Различия),
		|			,
		|			) КАК БухОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Различия КАК ВТ_Различия
		|			ПО БухОбороты.Субконто1.Наименование = ВТ_Различия.Субконто1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Сальдо.СальдоНаКонец,
		|	""Сальдо на конец"",
		|	""Сальдо на конец"",
		|	"""",
		|	2
		|ИЗ
		|	ВТ_Сальдо КАК ВТ_Сальдо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(втОбщиеДанные.Сумма) КАК Сумма,
		|	ПРЕДСТАВЛЕНИЕ(втОбщиеДанные.Регистратор) КАК Регистратор,
		|	втОбщиеДанные.Регистратор КАК Рег,
		|	втОбщиеДанные.Субконто1 КАК Субконто1,
		|	втОбщиеДанные.ПорядокПолей КАК ПорядокПолей,
		|	втОбщиеДанные.ГУИД КАК ГУИД
		|ИЗ
		|	втОбщиеДанные КАК втОбщиеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	втОбщиеДанные.Регистратор,
		|	втОбщиеДанные.Субконто1,
		|	втОбщиеДанные.ГУИД,
		|	втОбщиеДанные.ПорядокПолей";
	
	Запрос.УстановитьПараметр("НачалоПериода",				ПараметрыПроверки.ПериодОтчета.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода",				ПараметрыПроверки.ПериодОтчета.ДатаОкончания);
	Запрос.УстановитьПараметр("НаименованиеОрганизации",	ПараметрыПроверки.Организация.Наименование);
	Запрос.УстановитьПараметр("СписокКодовСчетовСумма",		ЗначениеВКОМ(Соединение, ПараметрыПроверки.СписокСчетовБухСумма));
	Запрос.УстановитьПараметр("СписокКодовСчетовРазность",	ЗначениеВКОМ(Соединение, ПараметрыПроверки.СписокСчетовБухРазность));
	
	Запрос.УстановитьПараметр("ТЗ", ЗначениеВКОМ(Соединение, ТЗ_Различия));
	
	ЗаполнитьУсловияСубконто(Запрос, "Бух", Соединение, ПараметрыПроверки);
	УстановитьТипСравнения(Запрос, ПараметрыПроверки);
	
	Внешн_ТЗ = Запрос.Выполнить().Выгрузить();
	
	// Заполнить ГУИД
	Для Каждого СтрокаТЗ Из Внешн_ТЗ Цикл
		Если СтрокаТЗ.ПорядокПолей = 1 Тогда
			СтрокаТЗ.ГУИД = Соединение.String(СтрокаТЗ.Рег.УникальныйИдентификатор());
		КонецЕсли;
	КонецЦикла;
	Внешн_ТЗ.Колонки.Удалить("Рег");
	
	Результат = ЗначениеИзКОМ(Соединение, Внешн_ТЗ);
	
	Возврат Результат;

КонецФункции

//+++АК LATV 2018.08.08 ИП-00017712.02
Функция ДокументыВФинБазе_ПроверкаПоУсловию(ТЗ_Различия, ПараметрыПроверки)

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПОДСТРОКА(ТЗ.Субконто1, 1, 250) КАК Субконто1
		|ПОМЕСТИТЬ ВТ_Различия
		|ИЗ
		|	&ТЗ КАК ТЗ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ПОДСТРОКА(ТЗ.Субконто1, 1, 250)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФинансовыйОстаткиИОбороты.СуммаНачальныйОстаток КАК СальдоНаНачало,
		|	ФинансовыйОстаткиИОбороты.СуммаКонечныйОстаток КАК СальдоНаКонец
		|ПОМЕСТИТЬ ВТ_Сальдо
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			,
		|			Счет.Код В (&СписокСчетовСумма),
		|			,
		|			Организация = &Организация
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5) КАК ФинансовыйОстаткиИОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	-ФинансовыйОстаткиИОбороты.СуммаНачальныйОстаток,
		|	-ФинансовыйОстаткиИОбороты.СуммаКонечныйОстаток
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.ОстаткиИОбороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			,
		|			Счет.Код В (&СписокСчетовРазность),
		|			,
		|			Организация = &Организация
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5) КАК ФинансовыйОстаткиИОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Сальдо.СальдоНаНачало КАК Сумма,
		|	""Сальдо на начало"" КАК Регистратор,
		|	""Сальдо на начало"" КАК Субконто1,
		|	"""" КАК ГУИД,
		|	0 КАК ПорядокПолей
		|ПОМЕСТИТЬ втОбщиеДанные
		|ИЗ
		|	ВТ_Сальдо КАК ВТ_Сальдо
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ФинансовыйОбороты.СуммаОборот,
		|	ФинансовыйОбороты.Регистратор,
		|	ВТ_Различия.Субконто1,
		|	""123456789012345678901234567890123456"",
		|	1
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Регистратор,
		|			Счет.Код В (&СписокСчетовСумма),
		|			,
		|			Организация = &Организация
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5
		|				И Субконто1.Наименование В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТ_Различия.Субконто1
		|					ИЗ
		|						ВТ_Различия),
		|			,
		|			) КАК ФинансовыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Различия КАК ВТ_Различия
		|		ПО ФинансовыйОбороты.Субконто1.Наименование = ВТ_Различия.Субконто1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	-ФинансовыйОбороты.СуммаОборот,
		|	ФинансовыйОбороты.Регистратор,
		|	ВТ_Различия.Субконто1,
		|	""123456789012345678901234567890123456"",
		|	1
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Регистратор,
		|			Счет.Код В (&СписокСчетовРазность),
		|			,
		|			Организация = &Организация
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5
		|				И Субконто1.Наименование В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						ВТ_Различия.Субконто1
		|					ИЗ
		|						ВТ_Различия),
		|			,
		|			) КАК ФинансовыйОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Различия КАК ВТ_Различия
		|		ПО ФинансовыйОбороты.Субконто1.Наименование = ВТ_Различия.Субконто1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Сальдо.СальдоНаКонец,
		|	""Сальдо на конец"",
		|	""Сальдо на конец"",
		|	"""",
		|	2
		|ИЗ
		|	ВТ_Сальдо КАК ВТ_Сальдо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(втОбщиеДанные.Сумма) КАК Сумма,
		|	втОбщиеДанные.Регистратор КАК Регистратор,
		|	втОбщиеДанные.Субконто1 КАК Субконто1,
		|	втОбщиеДанные.ПорядокПолей КАК ПорядокПолей,
		|	втОбщиеДанные.ГУИД КАК ГУИД
		|ИЗ
		|	втОбщиеДанные КАК втОбщиеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	втОбщиеДанные.Регистратор,
		|	втОбщиеДанные.Субконто1,
		|	втОбщиеДанные.ГУИД,
		|	втОбщиеДанные.ПорядокПолей";
	
	Запрос.УстановитьПараметр("НачалоПериода",	ПараметрыПроверки.ПериодОтчета.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода",	ПараметрыПроверки.ПериодОтчета.ДатаОкончания);
	Запрос.УстановитьПараметр("Организация",	ПараметрыПроверки.Организация);
	Запрос.УстановитьПараметр("СписокСчетовСумма",		ПараметрыПроверки.СписокСчетовФинСумма);
	Запрос.УстановитьПараметр("СписокСчетовРазность",	ПараметрыПроверки.СписокСчетовФинРазность);
	
	Запрос.УстановитьПараметр("ТЗ", ТЗ_Различия);
	
	ЗаполнитьУсловияСубконто(Запрос, "Фин",, ПараметрыПроверки);
	УстановитьТипСравнения(Запрос, ПараметрыПроверки);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	// Заполнить ГУИД
	Для Каждого СтрокаТЗ Из Результат Цикл
		Если СтрокаТЗ.ПорядокПолей = 1 Тогда
			СтрокаТЗ.ГУИД = Строка(СтрокаТЗ.Регистратор.УникальныйИдентификатор());
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

//+++АК LATV 2018.06.13 ИП-00017712.01
Функция ВывестиРазличия_ПроверкаПоУсловию(ТЗ_ДвиженияВбухБазе, ТЗ_ДвиженияВФинБазе, ПараметрыПроверки)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЗ.Наименование КАК Наименование,
		|	ТЗ.ЗначениеЗамены КАК Замена
		|ПОМЕСТИТЬ ВТ_ЗаменаФин
		|ИЗ
		|	&ТЗ_ЗаменаФин КАК ТЗ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Наименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЗ.Наименование КАК Наименование,
		|	ТЗ.ЗначениеЗамены КАК Замена
		|ПОМЕСТИТЬ ВТ_ЗаменаБух
		|ИЗ
		|	&ТЗ_ЗаменаБух КАК ТЗ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Наименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЗ.Сумма КАК Сумма,
		|	ТЗ.Регистратор КАК Регистратор,
		|	ТЗ.Субконто1 КАК Субконто1,
		|	ТЗ.ПорядокПолей КАК ПорядокПолей,
		|	ТЗ.ГУИД КАК ГУИД
		|ПОМЕСТИТЬ ВТ_Фин
		|ИЗ
		|	&ТЗ_фин КАК ТЗ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТЗ.Субконто1,
		|	ТЗ.ГУИД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЗ.Сумма КАК Сумма,
		|	ТЗ.Регистратор КАК Регистратор,
		|	ТЗ.Субконто1 КАК Субконто1,
		|	ТЗ.ПорядокПолей КАК ПорядокПолей,
		|	ТЗ.ГУИД КАК ГУИД
		|ПОМЕСТИТЬ ВТ_Бух
		|ИЗ
		|	&ТЗ_бух КАК ТЗ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТЗ.Субконто1,
		|	ТЗ.ГУИД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ЕСТЬNULL(ВТ_ЗаменаБух.Замена, ВТ_Бух.Субконто1), ЕСТЬNULL(ВТ_ЗаменаФин.Замена, ВТ_Фин.Субконто1)) КАК Субконто,
		|	ЕСТЬNULL(ВТ_Бух.ПорядокПолей, ВТ_Фин.ПорядокПолей) КАК ПорядокПолей,
		|	ЕСТЬNULL(ВТ_Бух.Регистратор, """") КАК РегистраторБух,
		|	ЕСТЬNULL(ВТ_Фин.Регистратор, """") КАК РегистраторФин,
		|	ЕСТЬNULL(ВТ_Бух.Сумма, 0) КАК СуммаБух,
		|	ЕСТЬNULL(ВТ_Фин.Сумма, 0) КАК СуммаФин
		|ИЗ
		|	ВТ_Фин КАК ВТ_Фин
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Бух КАК ВТ_Бух
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаменаБух КАК ВТ_ЗаменаБух
		|			ПО ВТ_Бух.Субконто1 = ВТ_ЗаменаБух.Наименование
		|		ПО ВТ_Фин.Субконто1 = ВТ_Бух.Субконто1
		|			И ВТ_Фин.ГУИД = ВТ_Бух.ГУИД
		|			И ВТ_Фин.ПорядокПолей = ВТ_Бух.ПорядокПолей
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗаменаФин КАК ВТ_ЗаменаФин
		|		ПО ВТ_Фин.Субконто1 = ВТ_ЗаменаФин.Наименование";
	 
	Запрос.УстановитьПараметр("ТЗ_Бух", ТЗ_ДвиженияВбухБазе);
	Запрос.УстановитьПараметр("ТЗ_Фин", ТЗ_ДвиженияВФинБазе);
	
	ТаблицаСоответствийБух = ТаблицаСравненийДляСоответствия(ПараметрыПроверки.СоответствиеБух);
	ТаблицаСоответствийФин = ТаблицаСравненийДляСоответствия(ПараметрыПроверки.СоответствиеФин);
	Запрос.УстановитьПараметр("ТЗ_ЗаменаБух", ТаблицаСоответствийБух);
	Запрос.УстановитьПараметр("ТЗ_ЗаменаФин", ТаблицаСоответствийФин);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;

КонецФункции

//+++АК VERT 2018.03.02 ИП-00017712
Процедура ИсключитьИзВыдачиОдинаковоеСальдоНаНачало(Результат)

	Если Результат.Количество() = 1
	   И Результат[0].ПорядокПолей = 0
	   И Результат[0].СуммаБух = Результат[0].СуммаФин Тогда
		Результат.Очистить();
	КонецЕсли;

КонецПроцедуры

//+++АК VERT 2018.03.02 ИП-00017712
Процедура ДополнительнаяОбработкаРезультата(ТЗ)

	// Попытка свернуть по части наименования и одинаковой сумме.
	СвертываемыеСтроки = Новый Соответствие();
	Для Каждого СтрокаТЗ Из ТЗ Цикл 
		
		Если ЗначениеЗаполнено(СтрокаТЗ.СуммаФин) И Не ЗначениеЗаполнено(СтрокаТЗ.СуммаБух) Тогда 
			НайденныеСтрокиБух = ТЗ.НайтиСтроки(Новый  Структура("СуммаБух", СтрокаТЗ.СуммаФин));
			НайденныеСтрокиФин = ТЗ.НайтиСтроки(Новый  Структура("СуммаФин", СтрокаТЗ.СуммаФин));
			
			Если НайденныеСтрокиБух.Количество() = НайденныеСтрокиФин.Количество() Тогда 
				Для Счетчик = 0 по НайденныеСтрокиБух.Количество() - 1 Цикл 
					ДлинаСтроки = Цел(СтрДлина(НайденныеСтрокиФин[Счетчик].Субконто) / 4); // Сравнить начало 1/4 строки
					Если СвертываемыеСтроки[НайденныеСтрокиФин[Счетчик]] = Неопределено 
						И Не Значениезаполнено(НайденныеСтрокиФин[Счетчик].СуммаБух) 
						И Лев(НайденныеСтрокиФин[Счетчик].Субконто, ДлинаСтроки) = Лев(НайденныеСтрокиБух[Счетчик].Субконто, ДлинаСтроки) Тогда 
						СвертываемыеСтроки[НайденныеСтрокиФин[Счетчик]] = НайденныеСтрокиБух[Счетчик];
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	// Удалить свертываемые строки
	Для Каждого ЭлементСоответствия Из СвертываемыеСтроки Цикл 
		ТЗ.Удалить(ЭлементСоответствия.Ключ);
		ТЗ.Удалить(ЭлементСоответствия.Значение);
	КонецЦикла;

КонецПроцедуры

//+++АК VERT 2018.03.02 ИП-00017712
// В функции проверяется наличие различий с учетом замен из соответствия
//
// Параметры:
//  <ТЗ>  - <Таблица значений> - Таблица с различием оборотов
//  <ПараметрыПроверки>  - <Структура> - //
// Возвращаемое значение:
//   <булево>   
//
Функция ЕстьРазличия(ТЗ, ПараметрыПроверки)

	Если ТЗ.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СвертываемаяТЗ = ТЗ.Скопировать(,"Субконто1, Субконто1_Бух, Субконто1_Фин, Разница");
	
	Для Каждого ЭлементСоответствия Из ПараметрыПроверки.СоответствиеФин Цикл 
		ЗаменяемыеСтроки = СвертываемаяТЗ.НайтиСтроки(Новый Структура("Субконто1_фин", ЭлементСоответствия.Ключ));
		Для Каждого ЗаменяемаяСтрока Из ЗаменяемыеСтроки Цикл 
			ЗаменяемаяСтрока.Субконто1 = ЭлементСоответствия.Значение;
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого ЭлементСоответствия Из ПараметрыПроверки.СоответствиеБух Цикл 
		ЗаменяемыеСтроки = СвертываемаяТЗ.НайтиСтроки(Новый Структура("Субконто1_бух", ЭлементСоответствия.Ключ));
		Для Каждого ЗаменяемаяСтрока Из ЗаменяемыеСтроки Цикл 
			ЗаменяемаяСтрока.Субконто1 = ЭлементСоответствия.Значение;
		КонецЦикла;
	КонецЦикла;
	
	СвертываемаяТЗ.Свернуть("Субконто1", "Разница");
	Для Каждого СтрокаТЗ Из СвертываемаяТЗ Цикл
		// Есть различия, возврат
		Если СтрокаТЗ.Разница <> 0 Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;

КонецФункции // ЕстьРазличия()

//+++АК LATV 2018.06.13 ИП-00017712.01
Функция НоваяТаблицаРезультат_ПроверкаПоУсловию()

	Результат = Новый ТаблицаЗначений();
	
	Результат.Колонки.Добавить("Субконто");
	Результат.Колонки.Добавить("РегистраторБух");
	Результат.Колонки.Добавить("РегистраторФин");
	Результат.Колонки.Добавить("СуммаБух");
	Результат.Колонки.Добавить("СуммаФин");
	Результат.Колонки.Добавить("ПорядокПолей");
	
	Возврат Результат;

КонецФункции

#КонецОбласти

#Область ПроверкаПоСубконто

//+++АК LATV 2018.08.08 ИП-00017712.02
Функция ОборотыВБухБазе_ПроверкаПоСубконто(Соединение, ПараметрыПроверки)
	Перем ПодключениеУстановлено;
	
	Запрос = Соединение.NewObject("Запрос");
	Запрос.Текст =
		"ВЫБРАТЬ
		|	БухОбороты.СуммаОборот КАК Сумма
		|ПОМЕСТИТЬ втОбщиеДанные
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Началопериода,
		|			&КонецПериода,
		|			,
		|			Счет.Код В (&СписокКодовСчетовСумма),
		|			,
		|			Организация.Наименование = &НаименованиеОрганизации
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5,
		|			,
		|			) КАК БухОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	-БухОбороты.СуммаОборот
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Началопериода,
		|			&КонецПериода,
		|			,
		|			Счет.Код В (&СписокКодовСчетовРазность),
		|			,
		|			Организация.Наименование = &НаименованиеОрганизации
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5,
		|			,
		|			) КАК БухОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(втОбщиеДанные.Сумма) КАК Сумма
		|ИЗ
		|	втОбщиеДанные КАК втОбщиеДанные";
	
	Запрос.УстановитьПараметр("НачалоПериода",				ПараметрыПроверки.ПериодОтчета.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода",				ПараметрыПроверки.ПериодОтчета.ДатаОкончания);
	Запрос.УстановитьПараметр("НаименованиеОрганизации",	ПараметрыПроверки.Организация.Наименование);
	Запрос.УстановитьПараметр("СписокКодовСчетовСумма",		ЗначениеВКОМ(Соединение, ПараметрыПроверки.СписокСчетовБухСумма));
	Запрос.УстановитьПараметр("СписокКодовСчетовРазность",	ЗначениеВКОМ(Соединение, ПараметрыПроверки.СписокСчетовБухРазность));
	
	ЗаполнитьУсловияСубконто(Запрос, "Бух", Соединение, ПараметрыПроверки);
	УстановитьТипСравнения(Запрос, ПараметрыПроверки);
	
	Внешн_ТЗ = Запрос.Выполнить().Выгрузить();
	Результат = ЗначениеИзКОМ(Соединение, Внешн_ТЗ);
	
	Возврат Результат;

КонецФункции

//+++АК LATV 2018.08.08 ИП-00017712.02
Функция СравнитьСОборотамиФин_ПроверкаПоСубконто(ТЗ, ПараметрыПроверки)

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТЗ.Сумма КАК Сумма
		|ПОМЕСТИТЬ ВТ_БухДанные
		|ИЗ
		|	&ТЗ КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФинансовыйОбороты.СуммаОборот КАК Сумма
		|ПОМЕСТИТЬ втОбщиеДанные
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			Счет.Код В (&СписокСчетовСумма),
		|			,
		|			Организация = &Организация
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5,
		|			,
		|			) КАК ФинансовыйОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	-ФинансовыйОбороты.СуммаОборот
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			Счет.Код В (&СписокСчетовРазность),
		|			,
		|			Организация = &Организация
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5,
		|			,
		|			) КАК ФинансовыйОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(втОбщиеДанные.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТ_ДанныеФин
		|ИЗ
		|	втОбщиеДанные КАК втОбщиеДанные
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВТ_БухДанные.Сумма, 0) КАК СуммаБух,
		|	ЕСТЬNULL(ВТ_ДанныеФин.Сумма, 0) КАК СуммаФин,
		|	ЕСТЬNULL(ВТ_БухДанные.Сумма, 0) - ЕСТЬNULL(ВТ_ДанныеФин.Сумма, 0) КАК Разница
		|ИЗ
		|	ВТ_БухДанные КАК ВТ_БухДанные
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_ДанныеФин КАК ВТ_ДанныеФин
		|		ПО (ИСТИНА)
		|ГДЕ
		|	ЕСТЬNULL(ВТ_БухДанные.Сумма, 0) <> ЕСТЬNULL(ВТ_ДанныеФин.Сумма, 0)";
	
	Запрос.УстановитьПараметр("НачалоПериода",	ПараметрыПроверки.ПериодОтчета.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода",	ПараметрыПроверки.ПериодОтчета.ДатаОкончания);
	Запрос.УстановитьПараметр("Организация",	ПараметрыПроверки.Организация);
	Запрос.УстановитьПараметр("СписокСчетовСумма",		ПараметрыПроверки.СписокСчетовФинСумма);
	Запрос.УстановитьПараметр("СписокСчетовРазность",	ПараметрыПроверки.СписокСчетовФинРазность);
	
	Запрос.УстановитьПараметр("ТЗ", ТЗ);
	
	ЗаполнитьУсловияСубконто(Запрос, "Фин",, ПараметрыПроверки);
	УстановитьТипСравнения(Запрос, ПараметрыПроверки);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;

КонецФункции

//+++АК LATV 2018.08.08 ИП-00017712.02
Функция ДокументыВБухБазе_ПроверкаПоСубконто(Соединение, ТЗ_Различия, ПараметрыПроверки)

	Запрос = Соединение.NewObject("Запрос");
	Запрос.Текст =
		"ВЫБРАТЬ
		|	БухОбороты.СуммаОборот КАК Сумма,
		|	БухОбороты.Регистратор КАК Регистратор,
		|	""123456789012345678901234567890123456"" КАК ГУИД
		|ПОМЕСТИТЬ втОбщиеДанные
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Началопериода,
		|			&КонецПериода,
		|			Регистратор,
		|			Счет.Код В (&СписокКодовСчетовСумма),
		|			,
		|			Организация.Наименование = &НаименованиеОрганизации
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5,
		|			,
		|			) КАК БухОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	-БухОбороты.СуммаОборот,
		|	БухОбороты.Регистратор КАК Регистратор,
		|	""123456789012345678901234567890123456"" КАК ГУИД
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&Началопериода,
		|			&КонецПериода,
		|			Регистратор,
		|			Счет.Код В (&СписокКодовСчетовРазность),
		|			,
		|			Организация.Наименование = &НаименованиеОрганизации
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5,
		|			,
		|			) КАК БухОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(втОбщиеДанные.Сумма) КАК Сумма,
		|	ПРЕДСТАВЛЕНИЕ(втОбщиеДанные.Регистратор) КАК Регистратор,
		|	втОбщиеДанные.Регистратор КАК Рег,
		|	втОбщиеДанные.ГУИД КАК ГУИД
		|ИЗ
		|	втОбщиеДанные КАК втОбщиеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	втОбщиеДанные.Регистратор,
		|	втОбщиеДанные.ГУИД";
	
	Запрос.УстановитьПараметр("НачалоПериода",				ПараметрыПроверки.ПериодОтчета.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода",				ПараметрыПроверки.ПериодОтчета.ДатаОкончания);
	Запрос.УстановитьПараметр("НаименованиеОрганизации",	ПараметрыПроверки.Организация.Наименование);
	Запрос.УстановитьПараметр("СписокКодовСчетовСумма",		ЗначениеВКОМ(Соединение, ПараметрыПроверки.СписокСчетовБухСумма));
	Запрос.УстановитьПараметр("СписокКодовСчетовРазность",	ЗначениеВКОМ(Соединение, ПараметрыПроверки.СписокСчетовБухРазность));
	
	Запрос.УстановитьПараметр("ТЗ", ЗначениеВКОМ(Соединение, ТЗ_Различия));
	
	ЗаполнитьУсловияСубконто(Запрос, "Бух", Соединение, ПараметрыПроверки);
	УстановитьТипСравнения(Запрос, ПараметрыПроверки);
	
	Внешн_ТЗ = Запрос.Выполнить().Выгрузить();
	
	// Заполнить ГУИД
	Для Каждого СтрокаТЗ Из Внешн_ТЗ Цикл
		СтрокаТЗ.ГУИД = Соединение.String(СтрокаТЗ.Рег.УникальныйИдентификатор());
	КонецЦикла;
	Внешн_ТЗ.Колонки.Удалить("Рег");
	
	Результат = ЗначениеИзКОМ(Соединение, Внешн_ТЗ);
	
	Возврат Результат;

КонецФункции

//+++АК LATV 2018.08.08 ИП-00017712.02
Функция ДокументыВФинБазе_ПроверкаПоСубконто(ТЗ_Различия, ПараметрыПроверки)

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ФинансовыйОбороты.СуммаОборот КАК Сумма,
		|	ФинансовыйОбороты.Регистратор КАК Регистратор,
		|	""123456789012345678901234567890123456"" КАК ГУИД
		|ПОМЕСТИТЬ втОбщиеДанные
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Регистратор,
		|			Счет.Код В (&СписокСчетовСумма),
		|			,
		|			Организация = &Организация
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5,
		|			,
		|			) КАК ФинансовыйОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	-ФинансовыйОбороты.СуммаОборот,
		|	ФинансовыйОбороты.Регистратор,
		|	""123456789012345678901234567890123456""
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Регистратор,
		|			Счет.Код В (&СписокСчетовРазность),
		|			,
		|			Организация = &Организация
		|				И &Субконто1
		|				И &Субконто2
		|				И &Субконто3
		|				И &Субконто4
		|				И &Субконто5,
		|			,
		|			) КАК ФинансовыйОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(втОбщиеДанные.Сумма) КАК Сумма,
		|	втОбщиеДанные.Регистратор КАК Регистратор,
		|	втОбщиеДанные.ГУИД КАК ГУИД
		|ИЗ
		|	втОбщиеДанные КАК втОбщиеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	втОбщиеДанные.Регистратор,
		|	втОбщиеДанные.ГУИД";
	
	Запрос.УстановитьПараметр("НачалоПериода",	ПараметрыПроверки.ПериодОтчета.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода",	ПараметрыПроверки.ПериодОтчета.ДатаОкончания);
	Запрос.УстановитьПараметр("Организация",	ПараметрыПроверки.Организация);
	Запрос.УстановитьПараметр("СписокСчетовСумма",		ПараметрыПроверки.СписокСчетовФинСумма);
	Запрос.УстановитьПараметр("СписокСчетовРазность",	ПараметрыПроверки.СписокСчетовФинРазность);
	
	Запрос.УстановитьПараметр("ТЗ", ТЗ_Различия);
	
	ЗаполнитьУсловияСубконто(Запрос, "Фин",, ПараметрыПроверки);
	УстановитьТипСравнения(Запрос, ПараметрыПроверки);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	// Заполнить ГУИД
	Для Каждого СтрокаТЗ Из Результат Цикл
		СтрокаТЗ.ГУИД = Строка(СтрокаТЗ.Регистратор.УникальныйИдентификатор());
	КонецЦикла;
	
	Возврат Результат;

КонецФункции

//+++АК LATV 2018.06.13 ИП-00017712.01
Функция ВывестиРазличия_ПроверкаПоСубконто(ТЗ_ДвиженияВбухБазе, ТЗ_ДвиженияВФинБазе, ПараметрыПроверки)

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТЗ.Сумма КАК Сумма,
		|	ТЗ.Регистратор КАК Регистратор,
		|	ТЗ.ГУИД КАК ГУИД
		|ПОМЕСТИТЬ ВТ_Фин
		|ИЗ
		|	&ТЗ_фин КАК ТЗ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТЗ.ГУИД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЗ.Сумма КАК Сумма,
		|	ТЗ.Регистратор КАК Регистратор,
		|	ТЗ.ГУИД КАК ГУИД
		|ПОМЕСТИТЬ ВТ_Бух
		|ИЗ
		|	&ТЗ_бух КАК ТЗ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ТЗ.ГУИД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ВТ_Бух.Регистратор, """") КАК РегистраторБух,
		|	ЕСТЬNULL(ВТ_Фин.Регистратор, """") КАК РегистраторФин,
		|	ЕСТЬNULL(ВТ_Бух.Сумма, 0) КАК СуммаБух,
		|	ЕСТЬNULL(ВТ_Фин.Сумма, 0) КАК СуммаФин
		|ИЗ
		|	ВТ_Фин КАК ВТ_Фин
		|		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Бух КАК ВТ_Бух
		|		ПО ВТ_Фин.ГУИД = ВТ_Бух.ГУИД";
	 
	Запрос.УстановитьПараметр("ТЗ_Бух", ТЗ_ДвиженияВбухБазе);
	Запрос.УстановитьПараметр("ТЗ_Фин", ТЗ_ДвиженияВФинБазе);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;

КонецФункции

//+++АК LATV 2018.06.13 ИП-00017712.01
Функция НоваяТаблицаРезультат_ПроверкаПоСубконто()

	Результат = Новый ТаблицаЗначений();
	
	Результат.Колонки.Добавить("РегистраторБух");
	Результат.Колонки.Добавить("РегистраторФин");
	Результат.Колонки.Добавить("СуммаБух");
	Результат.Колонки.Добавить("СуммаФин");
	
	Возврат Результат;

КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//+++АК LATV 2018.06.15 ИП-00017712.01
Функция ЗначениеПараметраКД(ИмяПараметра, ЗначениеПоУмолчанию = Неопределено)

	ЗначениеПараметра = ЗначениеПоУмолчанию;
	
	ПараметрКД = КомпоновщикНастроек.ПолучитьНастройки().ПараметрыДанных.НайтиЗначениеПараметра(
		Новый ПараметрКомпоновкиДанных(ИмяПараметра));
	Если ПараметрКД <> Неопределено
	   И ПараметрКД.Использование Тогда
		ЗначениеПараметра = ПараметрКД.Значение;
	КонецЕсли;
	
	Возврат ЗначениеПараметра;

КонецФункции

//+++АК LATV 2018.06.08 ИП-00017712.01
Функция ПараметрыПроверки(Проверка)

	ПараметрыПроверки = Справочники.Проверки.СтруктураПараметров(Проверка);
	
	Организация = ЗначениеПараметраКД("Организация");
	Если ЗначениеЗаполнено(Организация) Тогда
		ПараметрыПроверки.Вставить("Организация", Организация);
	КонецЕсли;
	
	ПериодОтчета = ЗначениеПараметраКД("ПериодОтчета");
	Если ЗначениеЗаполнено(ПериодОтчета) Тогда
		ПараметрыПроверки.Вставить("ПериодОтчета", ПериодОтчета);
	КонецЕсли;
	
	Возврат ПараметрыПроверки;

КонецФункции

//+++АК LATV 2018.06.10 ИП-00017712.01
Процедура ЗаполнитьТабличныйДокумент(ТабличныйДокумент, ДанныеРасшифровки, ДанныеСравнения, ИмяМакета, Заголовок)

	Если ИмяМакета = "ОсновнаяСхемаКомпоновкиДанных" Тогда
		СхемаКД					= СхемаКомпоновкиДанных;
		КомпоновщикНастроекКД	= КомпоновщикНастроек;
	Иначе
		СхемаКД = ПолучитьМакет(ИмяМакета);
		
		КомпоновщикНастроекКД = Новый КомпоновщикНастроекКомпоновкиДанных();
		КомпоновщикНастроекКД.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКД));
		КомпоновщикНастроекКД.ЗагрузитьНастройки(СхемаКД.НастройкиПоУмолчанию);
		
		ПериодОтчета = ЗначениеПараметраКД("ПериодОтчета");
		КомпоновщикНастроекКД.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("ПериодОтчета", ПериодОтчета);
		
		Организация = ЗначениеПараметраКД("Организация");
		КомпоновщикНастроекКД.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Организация", Организация);
	КонецЕсли;
	
	Если Не ПустаяСтрока(Заголовок) Тогда
		КомпоновщикНастроекКД.Настройки.ПараметрыВывода.УстановитьЗначениеПараметра("Заголовок", Заголовок);
	КонецЕсли;
	
	ВнешниеНаборыДанных = Новый Структура("ДанныеСравнения", ДанныеСравнения);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКД, КомпоновщикНастроекКД.ПолучитьНастройки(), ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабличныйДокумент);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

КонецПроцедуры

//+++АК VERT 2018.03.12 ИП-00017712
// Возвращает таблицу значений по соответствию наименованию и его замены 
//
// Параметры:
//  <Соответствие>  - <Соответствие> - Соответствие(Ключ-название для замены, Значение = Значение замены)
//
// Возвращаемое значение:
//   <ТаблицаЗначений>   - Колонки - Наименование, ЗаменяемоеЗначение
//
Функция ТаблицаСравненийДляСоответствия(Соответствие)
	Перем ТЗ;
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Наименование",		ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(250),, 250);
	ТЗ.Колонки.Добавить("ЗначениеЗамены",	ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(250),, 250);
	
	Для Каждого ЭлементСоответствия Из Соответствие Цикл
		НоваяСтрокаТЗ = ТЗ.Добавить();
		НоваяСтрокаТЗ.Наименование   = ЭлементСоответствия.Ключ;
		НоваяСтрокаТЗ.ЗначениеЗамены = ЭлементСоответствия.Значение;
	КонецЦикла;
	
	Возврат ТЗ;

КонецФункции // ТаблицаСравненийДляСоответствия()

//+++АК VERT 2018.03.12 ИП-00017712
Процедура УстановитьТипСравнения(Запрос, ПараметрыПроверки)

	Если Не ПараметрыПроверки.Свойство("УсловиеСравнения") Тогда
		Возврат;
	КонецЕсли;
	
	УсловиеСравнения = ПараметрыПроверки.УсловиеСравнения;
	
	// Условие сравнение в виде Субконто1.Наименование=Субконто1.Наименование, которые подставляются в Запрос. Первая часть в фин, вторая в бух
	Если ЗначениеЗаполнено(УсловиеСравнения) И Найти(УсловиеСравнения, "=") > 0 Тогда
		МассивПодстрок = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(УсловиеСравнения,  "=");
		Если ТипЗнч(Запрос) = Тип("COMОбъект") Тогда // Ком соединение, значит внешняя база БУХ
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Субконто1.Наименование", МассивПодстрок[1]);
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Субконто1.Наименование", МассивПодстрок[0]);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

//+++АК VERT 2018.03.02 ИП-00017712
// Процедура - Заполнение для Запроса из реквизитов обработки параметров для отбора субконто
//
// Параметры:
//  Запрос	 - 	 - 
//
Процедура ЗаполнитьУсловияСубконто(Запрос, ТипРегистра = "Фин", Соединение = Неопределено, ПараметрыПроверки)

	Субконто = Новый Массив();
	
	Для СчетчикСубконто = 1 По 5 Цикл
		Если Соединение = Неопределено Тогда
			МассивЗначений = Новый Массив;
		Иначе
			МассивЗначений = Соединение.NewObject("Массив");
		КонецЕсли;
		
		Для Счетчик = 0 По 5 Цикл
			
			ИмяРеквизита = "Субконто" + СчетчикСубконто + ТипРегистра + ?(Счетчик = 0, "", Счетчик);
			Если ПараметрыПроверки.Свойство(ИмяРеквизита) Тогда
				ЗначениеСубконто = ПараметрыПроверки[ИмяРеквизита];
				Если ЗначениеЗаполнено(ЗначениеСубконто) Тогда
					
					Если Соединение = Неопределено Тогда 
						МассивЗначений.Добавить(ЗначениеСубконто);
					Иначе
						// Если внешняя база, тогда значение должно быть доступно для вычисления
						МассивЗначений.Добавить(Вычислить("Соединение." + ЗначениеСубконто));
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		Если МассивЗначений.Количество() > 0 Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст
				, "&Субконто" + СчетчикСубконто
				, "Субконто" + СчетчикСубконто + " В (&Субконто" + СчетчикСубконто +")"
				);
		Иначе
			МассивЗначений = Истина;
		КонецЕсли;
		Запрос.УстановитьПараметр("Субконто" + СчетчикСубконто, МассивЗначений);
		
	КонецЦикла;

КонецПроцедуры

//+++АК VERT 2018.03.02 ИП-00017712
Функция ЗначениеВКОМ(Соединение, Значение)
	Возврат Соединение.ЗначениеИзСтрокиВнутр(ЗначениеВСтрокуВнутр(Значение));
КонецФункции

//+++АК VERT 2018.03.02 ИП-00017712
Функция ЗначениеИзКОМ(Соединение, Значение)
	Возврат ЗначениеИзСтрокиВнутр(Соединение.ЗначениеВСтрокуВнутр(Значение));
КонецФункции

#КонецОбласти
