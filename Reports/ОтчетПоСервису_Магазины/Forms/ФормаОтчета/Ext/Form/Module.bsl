
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	Период.ДатаНачала = ТекущаяДата() - 7*86400;
	Период.ДатаОкончания = ТекущаяДата();
	
	Попытка
		Магазины.Добавить(ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	Исключение
	КонецПопытки;
	
	МассивМагазины = ПолныеПрава.ПолучитьМассивМагазинов();
	
	Для Каждого ЭлементМагазин Из МассивМагазины Цикл
		Магазины.Добавить(ЭлементМагазин);
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьНаСервере()
	
	ТабРезультат.Очистить();
	//Макет компоновки 
	СхемаКомпоновкиДанных = Отчеты.ОтчетПоСервису_Магазины.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных();
	ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных);
	КомпоновщикНастроек.Инициализировать(ИсточникНастроек);
	КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	//Для Каждого ЗначениеПараметр Из СхемаКомпоновкиДанных.Параметры Цикл
	//	Если ЗначениеПараметр.Имя = "ДатаКон" Тогда
	//		ЗначениеПараметр.Значение = КонецДня(КонПериода) + 1;
	//	КонецЕсли;
	//	Если ЗначениеПараметр.Имя = "ДатаКонДата" Тогда
	//		ЗначениеПараметр.Значение = КонецДня(КонПериода);
	//	КонецЕсли;
	//	Если ЗначениеПараметр.Имя = "ДатаНачДата" Тогда
	//		ЗначениеПараметр.Значение = НачалоДня(НачПериода);
	//	КонецЕсли;
	//	Если ЗначениеПараметр.Имя = "НачТекДня" Тогда
	//		ЗначениеПараметр.Значение = НачалоДня(ТекущаяДата());
	//	КонецЕсли;
	//	Если ЗначениеПараметр.Имя = "КонТекДня" Тогда
	//		ЗначениеПараметр.Значение = КонецДня(ТекущаяДата());
	//	КонецЕсли;
	//	Если ЗначениеПараметр.Имя = "НачПредДня" Тогда
	//		ЗначениеПараметр.Значение = НачалоДня(ТекущаяДата() - 86400);
	//	КонецЕсли;
	//	Если ЗначениеПараметр.Имя = "КонПредДня" Тогда
	//		ЗначениеПараметр.Значение = КонецДня(ТекущаяДата() - 86400);
	//	КонецЕсли;
	//	//Если ЗначениеПараметр.Имя = "Субконто" Тогда
	//	//	ЗначениеПараметр.Значение = ПланыВидовХарактеристик.ВидыСубконто.Контрагенты;
	//	//КонецЕсли;
	//	//Если ЗначениеПараметр.Имя = "Счета" Тогда
	//	//	ЗначениеПараметр.Значение.Добавить(ПланыСчетов.Финансовый.РасчетыСПоставщикамиИПодрядчиками);
	//	//	ЗначениеПараметр.Значение.Добавить(ПланыСчетов.Финансовый.РасчетыСПокупателями);
	//	//	//ЗначениеПараметр.Значение = ПланыВидовХарактеристик.ВидыСубконто.Контрагенты;
	//	//КонецЕсли;
	//КонецЦикла;
	////Настройки = СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	////КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных();
	////ИсточникНастроек = Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных);
	////КомпоновщикНастроек.Инициализировать(ИсточникНастроек);
	////КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);
	Для Каждого СтрокаПараметр Из КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы Цикл
		Если СтрокаПараметр.Параметр = Новый ПараметрКомпоновкиДанных("ДатаНач") Тогда
			СтрокаПараметр.Значение = Период.ДатаНачала;
			СтрокаПараметр.Использование = Истина;
		КонецЕсли;
		Если СтрокаПараметр.Параметр = Новый ПараметрКомпоновкиДанных("ДатаКон") Тогда
			СтрокаПараметр.Значение = КонецДня(Период.ДатаОкончания);
			СтрокаПараметр.Использование = Истина;
		КонецЕсли;
		Если СтрокаПараметр.Параметр = Новый ПараметрКомпоновкиДанных("Магазины") Тогда
			СтрокаПараметр.Значение = Магазины;
			СтрокаПараметр.Использование = Истина;
		КонецЕсли;
	КонецЦикла;	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.Настройки, ДанныеРасшифровки);
	
	//Компоновка данных
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,, ДанныеРасшифровки);
	
	//Вывод результата
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ТабРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьНаСервере();
	
КонецПроцедуры
