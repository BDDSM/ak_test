////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Формирует заголовок формы.
//
// Параметры:
//	Нет.
//
Процедура СформироватьЗаголовокФормы()

	ОписаниеПериода = СформироватьСтрокуОграниченийПоДатамДляФормы(НачалоПериода, КонецПериода);
	
	Заголовок = "Инвентарная книга ОС" + " (" + ОписаниеПериода + ") " +  ?(ЗначениеЗаполнено(Организация.НаименованиеПолное), Организация.НаименованиеПолное, Организация);

КонецПроцедуры // СформироватьЗаголовокФормы()

////////////////////////////////////////////////////////////////////////////////
// ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

// Процедура формирует обложку и остальные страницы инвентарной книги.
//
Процедура Сформировать()
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Предупреждение("Не выбрана организация!");
		ТекущийЭлемент = ЭлементыФормы.Организация;
		Возврат;
	КонецЕсли;
	
	СформироватьОбложкуИнвентарнойКнигиОС(ЭлементыФормы.Обложка);
	
	СформироватьСтраницыИнвентарнойКнигиОС(ЭлементыФормы.ВсеСтраницы);
	
КонецПроцедуры // Сформировать()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ФОРМЫ

// Обработчик события Нажатие кнопки ВыбПериод. Вызывает диалог выбора периода.
//
Процедура ВыбПериодНажатие(Элемент)
	
	РаботаСДиалогами.ОбработчикНастройкаПериодаНажатие(НачалоПериода, КонецПериода);
	
КонецПроцедуры // ВыбПериодНажатие()

// Обработчик события ПриИзменении поля ввода Организация.
//
Процедура ОрганизацияПриИзменении()
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		
		ЭлементыФормы.Подразделение.ТолькоПросмотр = Истина;
		
		Подразделение = Новый(ТипЗнч(Подразделение));
		
	Иначе
		
		ЭлементыФормы.Подразделение.ТолькоПросмотр = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры // ОрганизацияПриИзменении()

// Обработчик события НачалоВыбора поля ввода Подразделение.
//
Процедура ПодразделениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ?(НЕ ЗначениеЗаполнено(Организация), Ложь, Истина);
	
КонецПроцедуры // ПодразделениеНачалоВыбора()

// Обработчик события ПриИзменении поля ввода МОЛ.
//
Процедура МОЛПриИзменении()
	
	Если ЗначениеЗаполнено(МОЛ) Тогда
		
		Ответственный = МОЛ;
		
		ЭлементыФормы.Ответственный.Доступность = Ложь;
		
	Иначе
		
		ЭлементыФормы.Ответственный.Доступность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры // МОЛПриИзменении()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриОткрытии формы.
//
Процедура ПриОткрытии()
	
	//ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, глЗначениеПеременной("глТекущийПользователь"));
	ОрганизацияПриИзменении();	
	МОЛПриИзменении();
	
КонецПроцедуры // ПриОткрытии()

// Обработчик события ОбновлениеОтображения формы.
//
Процедура ОбновлениеОтображения()
	
	СформироватьЗаголовокФормы();
	
КонецПроцедуры // ОбновлениеОтображения()

Функция СформироватьСтрокуОграниченийПоДатамДляФормы(Знач ДатаНач, Знач ДатаКон)

	// Вывод заголовка, описателя периода и фильтров и заголовка
	Если ДатаНач = '00010101000000' И ДатаКон = '00010101000000' Тогда

		ОписаниеПериода     = "Период не установлен";

	Иначе

		Если ДатаНач = '00010101000000' ИЛИ ДатаКон = '00010101000000' Тогда

			ОписаниеПериода = "" + Формат(ДатаНач, "ДФ = ""дд.ММ.гггг""; ДП = ""...""") 
							+ " - "      + Формат(ДатаКон, "ДФ = ""дд.ММ.гггг""; ДП = ""...""");

		Иначе

			Если ДатаНач <= ДатаКон Тогда
				ОписаниеПериода = "" + ПредставлениеПериода(НачалоДня(ДатаНач), КонецДня(ДатаКон), "ФП = Истина");
			Иначе
				ОписаниеПериода = "Неправильно задан период!"
			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

	Возврат ОписаниеПериода;

КонецФункции






