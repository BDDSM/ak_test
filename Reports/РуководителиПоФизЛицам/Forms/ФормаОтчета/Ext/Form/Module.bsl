
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПроизвольныйОтбор = Параметры.Свойство("ПроизвольныйОтбор");
	
КонецПроцедуры

&НаСервере
Процедура ПередЗагрузкойПользовательскихНастроекНаСервере(Настройки)
	
	Если ПроизвольныйОтбор Тогда
		
		//Загрузка варианта отчета
		СистемаКомпоновкиДанных = Отчеты.РуководителиПоФизЛицам.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
		ВариантНастроек = СистемаКомпоновкиДанных.ВариантыНастроек[Параметры.ВариантОтчетаИмя];
		НаименованиеТекущегоВарианта = ВариантНастроек.Представление;
		
		Отчет.КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СистемаКомпоновкиДанных));
		Отчет.КомпоновщикНастроек.ЗагрузитьНастройки(ВариантНастроек.Настройки);

		//Обязательное отключение всех сохраненных(кэш) пользовательких настроек(без очистки)
		Для каждого ЭлементНастройки Из Настройки.Элементы Цикл
			ЭлементНастройки.Использование = Ложь;
		КонецЦикла;
		
		//Заполнение основных и пользовательских настроек
		Для каждого ПараметрОтбора Из Параметры.ПроизвольныйОтбор Цикл
			
			Для каждого ЭлементНастройки Из Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
				
				Если ТипЗнч(ЭлементНастройки) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
					Продолжить;
				КонецЕсли;
				
				Если СокрЛП(ЭлементНастройки.ЛевоеЗначение) = ПараметрОтбора.Ключ Тогда
					
					ЭлементНастройки.Использование = Истина;
					
					ЭлементНастройки.ПравоеЗначение = ПараметрОтбора.Значение;
					
					ЭлПользовательскойНастройки = Настройки.Элементы.Найти(ЭлементНастройки.ИдентификаторПользовательскойНастройки);
					
					Если ЭлПользовательскойНастройки <> Неопределено Тогда
						
						ЗаполнитьЗначенияСвойств(ЭлПользовательскойНастройки, ЭлементНастройки);
						
						Если НЕ ЗначениеЗаполнено(ПараметрОтбора.Значение) И ТипЗнч(ПараметрОтбора.Значение) = Тип("Строка") Тогда
							ЭлПользовательскойНастройки.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
						КонецЕсли;
						
					КонецЕсли;
						
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
		ПроизвольныйОтбор = Ложь;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
