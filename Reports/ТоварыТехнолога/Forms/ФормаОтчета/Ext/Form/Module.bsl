
&НаКлиенте
Процедура Сформировать(Команда)
	Если Не ЗначениеЗаполнено(Отчет.Технолог) Тогда
		Сообщить("Выберите технолога");
		Возврат;
	КонецЕсли; 
	СформироватьСервер();
КонецПроцедуры

Процедура СформироватьСервер()
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РолиПользователейТипыРолей.РольПользователя,
	|	РолиПользователейТипыРолей.Объект,
	|	РолиПользователейТипыРолей.Период КАК Период,
	|	РолиПользователейТипыРолей.ТипРоли
	|ПОМЕСТИТЬ втБезХар
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&Дата1, ТипРоли = &ТипРоли) КАК РолиПользователейТипыРолей
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	РолиПользователейТипыРолей.РольПользователя,
	|	РолиПользователейТипыРолей.Объект,
	|	РолиПользователейТипыРолей.Период,
	|	РолиПользователейТипыРолей.ТипРоли
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль КАК РолиПользователейТипыРолей
	|ГДЕ
	|	РолиПользователейТипыРолей.Период > &Дата1
	|	И РолиПользователейТипыРолей.Период <= &Дата2
	|	И РолиПользователейТипыРолей.ТипРоли = &ТипРоли
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РолиПользователейТипыРолей.РольПользователя,
	|	РолиПользователейТипыРолей.Объект,
	|	РолиПользователейТипыРолей.Период КАК Период,
	|	РолиПользователейТипыРолей.ТипРоли
	|ПОМЕСТИТЬ втЧужиеХар
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&Дата1, ТипРоли = &ТипРоли) КАК РолиПользователейТипыРолей
	|ГДЕ
	|	РолиПользователейТипыРолей.Объект ССЫЛКА Справочник.ХарактеристикиНоменклатуры
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	РолиПользователейТипыРолей.РольПользователя,
	|	РолиПользователейТипыРолей.Объект,
	|	РолиПользователейТипыРолей.Период,
	|	РолиПользователейТипыРолей.ТипРоли
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль КАК РолиПользователейТипыРолей
	|ГДЕ
	|	РолиПользователейТипыРолей.Объект ССЫЛКА Справочник.ХарактеристикиНоменклатуры
	|	И РолиПользователейТипыРолей.Период > &Дата1
	|	И РолиПользователейТипыРолей.Период <= &Дата2
	|	И РолиПользователейТипыРолей.ТипРоли = &ТипРоли
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втБезХар.РольПользователя,
	|	втБезХар.Период,
	|	ЗначенияСвойствОбъектов.Объект,
	|	втБезХар.ТипРоли
	|ПОМЕСТИТЬ втХар
	|ИЗ
	|	втБезХар КАК втБезХар
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО втБезХар.Объект = ЗначенияСвойствОбъектов.Значение
	|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовхарактеристик.СвойстваОбъектов.Производитель))
	|			И (втБезХар.Объект ССЫЛКА Справочник.Контрагенты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втБезХар.РольПользователя КАК Роль,
	|	втБезХар.Объект КАК Характеристика,
	|	втБезХар.Объект.Владелец КАК Номенклатура,
	|	втБезХар.Период КАК Период,
	|	втБезХар.Объект.ИДЭлемента КАК ИДЭлемента
	|ИЗ
	|	втБезХар КАК втБезХар
	|ГДЕ
	|	НЕ втБезХар.Объект ССЫЛКА Справочник.Контрагенты
	|	И втБезХар.Объект.Неактивная = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	втБезХар.РольПользователя,
	|	втБезХар.Объект,
	|	втБезХар.Объект.Владелец,
	|	втБезХар.Период,
	|	втБезХар.Объект.ИДЭлемента
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	втХар.РольПользователя,
	|	втХар.Объект,
	|	втХар.Объект.Владелец,
	|	втХар.Период,
	|	втХар.Объект.ИДЭлемента
	|ИЗ
	|	втХар КАК втХар
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЧужиеХар КАК втЧужиеХар
	|		ПО втХар.ТипРоли = втЧужиеХар.ТипРоли
	|			И втХар.Объект = втЧужиеХар.Объект
	//|			И (НЕ втХар.РольПользователя = втЧужиеХар.РольПользователя)
	|			И втХар.Период >= втЧужиеХар.Период
	|ГДЕ
	|	втЧужиеХар.РольПользователя ЕСТЬ NULL 
	|	И втХар.Объект.Неактивная = ЛОЖЬ
	|	И втХар.Объект.Владелец.ТипТовара В (ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.Продукция), ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.ПокупнойТовар))
	|
	|СГРУППИРОВАТЬ ПО
	|	втХар.РольПользователя,
	|	втХар.Объект,
	|	втХар.Объект.Владелец,
	|	втХар.Период,
	|	втХар.Объект.ИДЭлемента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Период";
	
	
	Запрос.УстановитьПараметр("ТипРоли", ПланыВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству);
	Запрос.УстановитьПараметр("Дата2",КонецДня(Отчет.ДатаОкончания));
	Запрос.УстановитьПараметр("Дата1",НачалоДня(Отчет.ДатаНачала));
	Мас=Новый Массив;
	Мас.Добавить(Отчет.Технолог);
	Запрос.УстановитьПараметр("Роли",Мас);
	
	Результат1 = Запрос.Выполнить();
	//
	Отчет.Характеристики.Очистить();
	Отчет.ХарактеристикиВсе.Очистить();
	ВыборкаДетальныеЗаписи = Результат1.Выбрать();
	ТЗКопия=Отчет.Характеристики.Выгрузить();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
 
		Стр=Отчет.ХарактеристикиВсе.Добавить();
		Стр.Период=?(ВыборкаДетальныеЗаписи.Период<Отчет.ДатаНачала,Отчет.ДатаНачала,ВыборкаДетальныеЗаписи.Период);
		Стр.Роль=ВыборкаДетальныеЗаписи.Роль;
		Стр.Номенклатура=ВыборкаДетальныеЗаписи.Номенклатура;
		Стр.Характеристика=ВыборкаДетальныеЗаписи.Характеристика;
		СТР.ИДЭлемента=ВыборкаДетальныеЗаписи.ИДЭлемента;
		Если Отчет.Технолог=ВыборкаДетальныеЗаписи.Роль Тогда
			Стр=Отчет.Характеристики.Добавить();
			Стр.Период=?(ВыборкаДетальныеЗаписи.Период<Отчет.ДатаНачала,Отчет.ДатаНачала,ВыборкаДетальныеЗаписи.Период);
			Стр.Роль=ВыборкаДетальныеЗаписи.Роль;
			Стр.Номенклатура=ВыборкаДетальныеЗаписи.Номенклатура;
			Стр.Характеристика=ВыборкаДетальныеЗаписи.Характеристика;
			СТР.ИДЭлемента=ВыборкаДетальныеЗаписи.ИДЭлемента;
		КонецЕсли; 
	КонецЦикла;
	
	Кол=Отчет.ХарактеристикиВсе.Количество();
	Для Сч=0 По Кол-1 Цикл
		
		Стр=Отчет.ХарактеристикиВсе[Сч];
		Если НЕ Отчет.Технолог=Стр.Роль Тогда
        	Продолжить;
		КонецЕсли; 
		Если Стр.Период>=Отчет.ДатаНачала Тогда
			ДатаОтсчета=Стр.Период;	
		Иначе	
			ДатаОтсчета=Отчет.ДатаНачала-24*60*60;	
		КонецЕсли; 
		Если Сч<Кол-1 Тогда
			Если Отчет.ХарактеристикиВсе[Сч+1].Характеристика=Стр.Характеристика  Тогда
				ДатаДо=Отчет.ХарактеристикиВсе[Сч+1].Период-24*60*60;
			Иначе	
				ДатаДо=Отчет.ДатаОкончания;
			КонецЕсли;
		Иначе
			ДатаДо=Отчет.ДатаОкончания;
		КонецЕсли; 
		
		Пока ДатаОтсчета<ДатаДо Цикл
			ДатаОтсчета=ДатаОтсчета+24*60*60;
			НовСтр=ТЗКопия.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр,Стр);
			НовСтр.Период=ДатаОтсчета;
			
		КонецЦикла;	
		
	КонецЦикла; 
	Для каждого Стр Из ТЗКопия Цикл
		НовСтр=Отчет.Характеристики.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,Стр);
	КонецЦикла; 
	Отчет.Характеристики.Сортировать("Роль,Номенклатура,Характеристика,Период");
	
	// Вставить содержимое обработчика.
	ADOСоединение = Новый COMОбъект("ADODB.Connection");
	ADOСоединение.ConnectionTimeOut = 0;
	ADOСоединение.CommandTimeOut    = 0;
	СтрПодкл=ОбменСAccess.ПолучитьСтрокуСоединения("M2");
	//СтрПодкл=СтрЗаменить(СтрПодкл,"sms_izbenka","m2");
	ADOСоединение.ConnectionString  = СтрПодкл;
	ADOСоединение.Open();
	Если ADOСоединение.State() = 0 Тогда
		Возврат;
	Иначе         
	КонецЕсли;
	//
	
	
	Дата1=Отчет.ДатаНачала;
	Дата2=КонецДня(Отчет.ДатаОкончания);
	
	
	
	СтрЗапрос =			"If OBJECT_ID('tempdb..#VTProizvoditeli') Is Not Null	Drop Table #VTProizvoditeli
	|If OBJECT_ID('tempdb..#Obrascheniya_Base') Is Not Null	Drop Table #Obrascheniya_Base
	|If OBJECT_ID('tempdb..#VT_PricePost_Predv') Is Not Null	Drop Table #VT_PricePost_Predv
	|If OBJECT_ID('tempdb..#VT_PricePost') Is Not Null		Drop Table #VT_PricePost
	|If OBJECT_ID('tempdb..#VT_Obrascheniya') Is Not Null	Drop Table #VT_Obrascheniya
	|If OBJECT_ID('tempdb..#dtt') Is Not Null				Drop Table #dtt
	|If OBJECT_ID('tempdb..#dtt_sokr') Is Not Null			Drop Table #dtt_sokr
	|If OBJECT_ID('tempdb..#tov_obr') Is Not Null			Drop Table #tov_obr
	|If OBJECT_ID('tempdb..#VT_obr_bezTT') Is Not Null		Drop Table #VT_obr_bezTT
	|If OBJECT_ID('tempdb..#TovAss_sokr') Is Not Null		Drop Table #TovAss_sokr
	|If OBJECT_ID('tempdb..#dtt_week') Is Not Null			Drop Table #dtt_week
	|if OBJECT_ID ('tempdb..#sebest_pr') is not null drop table #sebest_pr
	|if OBJECT_ID ('tempdb..#d') is not null drop table #d
	|declare @date1 as datetime , @date2 as datetime
	|set @date1="+ВнешниеДанные.ФорматПоля(Дата1)+"
	|set @date2 = "+ВнешниеДанные.ФорматПоля(Дата2)+"
	|create table #ls (Period datetime,  id_tov int, id_tt int, Summa numeric(15, 3), kol numeric(15, 3), post numeric(15, 3)
	|) 
	|
	|Insert into #ls
	|Select
	|	dtt.date_tt as Period,
	|	dtt.id_tov,
	|	dtt.id_tt,
	|	(dtt.quantity - dtt.discount50_qty - dtt.discount50_sms_qty)*dtt.price as Summa,
	|	dtt.quantity - dtt.discount50_qty - dtt.discount50_sms_qty as kol, dtt.post post
	|From Reports..dtt as dtt (nolock)
	|Where
	|	dtt.date_tt Between @Date1 And @Date2
	
	|-----------------------------------------------
	|Select
	|	TovAss._Fld3958RRef as TT,
	|	TovAss._Fld3959RRef as Tovar,
	|	TovAss._Fld3960RRef as har,
	|	TovAss._Fld3961 as vivedena,
	|	TovAss.id_tt_1C as id_tt,
	|	TovAss.id_tov_1C as id_tov,
	|	Convert(datetime, DateAdd(Year, -2000, TovAss._Period)) as _Period
	|Into #TovAss_sokr
	|From IzbenkaFin.._InfoRg3957 as TovAss (nolock)
	|Where 
	|   Year(TovAss._Period) > 4000  and TovAss.id_tov_1C in (Select ls.id_tov from #ls ls )  and Convert(Datetime, DateAdd(Year, -2000, TovAss._Period))<= @date2
	|-----------------------------------------------
	|create table #NomHarMax ( id_tt int,  id_tov int, Periodls datetime, Period datetime
	|) 
	|
	|Insert into #NomHarMax
	|Select
	|	TovAss_sokr.id_tt as id_tt,
	|	TovAss_sokr.id_tov as id_tov,ls.Period periodls,
	|	Max(TovAss_sokr._Period) as Period
	|	From #TovAss_sokr TovAss_sokr
	|	Inner join #ls ls on TovAss_sokr.id_tov=ls.id_tov and TovAss_sokr.id_tt=ls.id_tt and TovAss_sokr._Period<=ls.Period
	|GROUP BY TovAss_sokr.id_tt,
	|	TovAss_sokr.id_tov,ls.Period  	
	|-----------------------------------------------
	|Select
	|	
	|	TovAss_sokr.id_tov as id_tov
	|	,TovAss_sokr.har as har, TovAss_sokr.Tovar as Tovar,SprHar._fld6224 as idhar
	|	,ls.Period Periodls, Sum(ls.Summa) Summa, Sum(ls.Kol) Kol, Sum(ls.Post) Post
	|	From #ls ls
	|	Inner join #NomHarMax NomHarMax	
	|	Inner join  #TovAss_sokr TovAss_sokr  on TovAss_sokr.id_tov=NomHarMax.id_tov and TovAss_sokr.id_tt=NomHarMax.id_tt and TovAss_sokr._Period=NomHarMax.Period
	|     on ls.id_tov=NomHarMax.id_tov and ls.id_tt=NomHarMax.id_tt and ls.Period=NomHarMax.periodls
	|	inner join IzbenkaFin.._Reference2539 as SprHar on SprHar._idrref=TovAss_sokr.har
	
	|	group by TovAss_sokr.id_tov
	|	,TovAss_sokr.har, TovAss_sokr.Tovar,SprHar._fld6224,
	|	ls.Period  ";
	
   	МасИДХар=Отчет.Характеристики.Выгрузить().ВыгрузитьКолонку("ИДЭлемента");
	rs = ADOСоединение.Execute(СтрЗапрос);
	//ТЗ=Новый ТаблицаЗначений;
	//ТЗ.Колонки.Добавить("Место");
	//ТЗ.Колонки.Добавить("Сенсор");
	//ТЗ.Колонки.Добавить("Shop_name");
	//ТЗ.Колонки.Добавить("mest_name");
	//ТЗ.Колонки.Добавить("Ответ");
	//ТЗ.Колонки.Добавить("Дата");
	//ТЗ.Колонки.Добавить("is_made");                           
	//ТЗ.Колонки.Добавить("ShopNo");
	Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
		rs=rs.NextRecordSet();
	КонецЦикла;
	
	
	ТабДанныеСТТ = Новый ТаблицаЗначений();
	ТабДанныеСТТ.Колонки.Добавить("ХарИД"	, Новый ОписаниеТипов("Число"));
	ТабДанныеСТТ.Колонки.Добавить("Дата"		, Новый ОписаниеТипов("Дата"));
	//ТабДанные.Колонки.Добавить("ДатаОкончания"		, Новый ОписаниеТипов("Дата"));
	//

	//ТабДанные.Колонки.Добавить("Выручка"			, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ВыручкаОбщ"			, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("Оборот"			, Новый ОписаниеТипов("Число"));
	ТабДанныеСТТ.Колонки.Добавить("Выручка"			, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ПроцентПродажСоСкидкойКВыручке"			, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ПроцентСписанийПоСрокуКВыручке"			, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ПроцентСписанийПоКачествуКВыручке"	, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ПовторныеПокупки"				, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ПокупкиОбщие"				, Новый ОписаниеТипов("Число"));
	//
	//ТабДанные.Колонки.Добавить("Частота"				, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ПродажиСоСкидкой"				, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("СписанияПоСроку"				, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("СписанияПоКачеству"				, Новый ОписаниеТипов("Число"));
	                                                                                                 
	//Попытка
		rs.MoveFirst();
		//
		Сч=0;
		Пока НЕ rs.EOF() Цикл
			Сч=Сч+1;
			Если Сч=100 Тогда
			  //прервать;
		 	КонецЕсли; 
		    Если МасИДХар.Найти(Rs.Fields("idhar").Value)=Неопределено Тогда
				rs.MoveNext();
			    Продолжить;
			КонецЕсли; 
			СтрокаДоб = ТабДанныеСТТ.Добавить();
			//Если Rs.Fields("TovarUID").Value <> NULL Тогда
			//	СтрокаДоб.Номенклатура = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Rs.Fields("TovarUID").Value));
			//КонецЕсли;
			//Если Rs.Fields("TTUID").Value <> NULL Тогда
			//	СтрокаДоб.ТТ = Справочники.СтруктурныеЕдиницы.ПолучитьСсылку(Новый УникальныйИдентификатор(Rs.Fields("TTUID").Value));
			//КонецЕсли;
			//СтрокаДоб.Неделя=	(НачалоНедели(ТекущаяДата())-Rs.Fields("НачалоНедели").Value)/(7*24*60*60);
			СтрокаДоб.Дата=	(Rs.Fields("Periodls").Value);
			СтрокаДоб.ХарИД=	(Rs.Fields("idhar").Value);
			//СтрокаДоб.ДатаОкончания=	КонецНедели(Rs.Fields("НачалоНедели").Value);

			//
			//СтрокаДоб.Выручка = Rs.Fields("СредВыручка").Value;
			//СтрокаДоб.ВыручкаОбщ = Rs.Fields("Выручка").Value;
			//СтрокаДоб.Оборот = Rs.Fields("Оборот").Value;
			СтрокаДоб.Выручка = Rs.Fields("Summa").Value;
			//СтрокаДоб.ПроцентПродажСоСкидкойКВыручке = 100*?(Rs.Fields("Выручка").Value=0,0,(Rs.Fields("СуммаСкидки").Value)/Rs.Fields("Выручка").Value);
			//СтрокаДоб.ПроцентСписанийПоСрокуКВыручке = 100*?(Rs.Fields("Выручка").Value=0,0,Rs.Fields("СписаниеСрок").Value/Rs.Fields("Выручка").Value);
			//СтрокаДоб.ПроцентСписанийПоКачествуКВыручке = 100*?(Rs.Fields("Выручка").Value=0,0,Rs.Fields("СписаниеКачество").Value/Rs.Fields("Выручка").Value);
			//СтрокаДоб.ПовторныеПокупки = Rs.Fields("ПовтПокупки").Value;
			//СтрокаДоб.ПокупкиОбщие = Rs.Fields("ПокупкиОбщие").Value;
			//СтрокаДоб.ПродажиСоСкидкой = Rs.Fields("СуммаСкидки").Value;
			//СтрокаДоб.СписанияПоСроку = Rs.Fields("СписаниеСрок").Value;
			//СтрокаДоб.СписанияПоКачеству = Rs.Fields("СписаниеКачество").Value;
			//СтрокаДоб.id_tov = Rs.Fields("id_tov").Value;
			//СтрокаДоб.Частота = Rs.Fields("частота").Value;
                                                                       
			//Сообщить(Rs.Fields("id_tov").Value);
			rs.MoveNext();
		КонецЦикла;
	//Исключение
	//КонецПопытки;
	ТабДок.Очистить();	
	ТабДанныеСТТ.Индексы.Добавить("Дата,ХарИД");
	Итог=ТабДанныеСТТ.Итог("Выручка");
	Если Итог=0 Тогда
		Возврат;
	КонецЕсли; 
	
    Для каждого Стр Из Отчет.Характеристики Цикл
		МасСтр=ТабДанныеСТТ.НайтиСтроки(Новый Структура("Дата,ХарИД",Стр.Период,Стр.ИДЭлемента));
		Если МасСтр.Количество() Тогда
			Стр.Выручка=МасСтр[0].Выручка;
			Стр.Процент=Стр.Выручка/Итог*100;
		КонецЕсли; 
	КонецЦикла; 
	ТЗХар=Отчет.Характеристики.Выгрузить();
	ТЗХар.Свернуть("Номенклатура,Характеристика","Выручка,Процент");
	ТЗХар.Сортировать("Процент убыв");
	
	ТЗИтог=ТЗХар.СкопироватьКолонки();
	ИтогПроцент=0;
	Для каждого Стр Из ТЗХар Цикл
		НовСтр=ТЗИтог.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,Стр);
		ИтогПроцент=ИтогПроцент+Стр.Процент;
		Если ИтогПроцент>=Отчет.ПроцентТопа Тогда
			Прервать;
		КонецЕсли; 
	
	КонецЦикла; 
	
	Мак=Отчеты.ТоварыТехнолога.ПолучитьМакет("Макет");
	Шапка=Мак.ПолучитьОбласть("Шапка");
	ТабДок.Вывести(Шапка);
	Для каждого Стр Из ТЗИтог Цикл
		Строка=Мак.ПолучитьОбласть("Строка");
		ЗаполнитьЗначенияСвойств(Строка.Параметры,Стр);
		ТабДок.Вывести(Строка);
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Отчет.ПроцентТопа=50;
КонецПроцедуры
