
Функция ПолучитьПравоПодписиПоДоверенности()
	
	ПравоПодписи = "";
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтрагентыДоверенности.ФИО
	|ИЗ
	|	Справочник.Контрагенты.Доверенности КАК КонтрагентыДоверенности
	|ГДЕ
	|	КонтрагентыДоверенности.Ссылка = &ТекКонтрагент
	|	И КонтрагентыДоверенности.ФИО <> """"";
	Запрос.УстановитьПараметр("ТекКонтрагент", КонтрагентОтчета);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ПравоПодписи = ПравоПодписи + Выборка.ФИО + ", ";
	КонецЦикла;
	Если ПравоПодписи <> "" Тогда 
		ПравоПодписи = Лев(ПравоПодписи, СтрДлина(ПравоПодписи) - 2); 
	КонецЕсли;
	
	Возврат ПравоПодписи;
	
КонецФункции

Функция ПолучитьКонтактнуюИнформациюКонтрагента()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление,
	|	ВЫБОР
	|		КОГДА КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента)
	|			ТОГДА ""ЮрАдрес""
	|		КОГДА КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресКонтрагента)
	|			ТОГДА ""ФактАдрес""
	|		КОГДА КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента)
	|			ТОГДА ""Телефон""
	|		КОГДА КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресСкладаКонтрагента)
	|			ТОГДА ""АдресСклада""
	|		КОГДА КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ИнтернетСайтКонтрагента)
	|			ТОГДА ""ИнтернетСайт""
	|		КОГДА КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	|				И КонтактнаяИнформация.Вид.Код = ""00021""
	|			ТОГДА ""EmailДляИнтерфейсаПоставщика""
	|		ИНАЧЕ ""прочее""
	|	КОНЕЦ КАК ВидКИ
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресКонтрагента)
	|			ИЛИ КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресКонтрагента)
	|			ИЛИ КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента)
	|			ИЛИ КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресСкладаКонтрагента)
	|			ИЛИ КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ИнтернетСайтКонтрагента)
	|			ИЛИ КонтактнаяИнформация.Вид.Код = ""00021"")";
	Запрос.УстановитьПараметр("Объект", КонтрагентОтчета);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	Возврат ТЗ;
	
КонецФункции

Процедура ВывестиДанныеОтчета(Таб)
	
	Таб.Очистить();
	Макет = ПолучитьМакет("Макет");
	
	//Шапка отчета
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.ПечВыбКонтрагент = КонтрагентОтчета.Наименование;
	ОбластьШапка.Параметры.ДатаОтчета       = Формат(ДатаОтчета,"ДФ=dd.MM.yyyy");
	Таб.Вывести(ОбластьШапка);
	
	//Основная информация 
	ОбластьОсновнаяИнформация = Макет.ПолучитьОбласть("ОсновнаяИнформация");
	
	ОбластьОсновнаяИнформация.Параметры.ИНН       = КонтрагентОтчета.ИНН;
	ОбластьОсновнаяИнформация.Параметры.КПП       = КонтрагентОтчета.КПП;			
	ОбластьОсновнаяИнформация.Параметры.ОГРН      = КонтрагентОтчета.ОГРН;
	
	КонтактнаяИнформацияКонтрагента = ПолучитьКонтактнуюИнформациюКонтрагента();
	Для Каждого Стр из КонтактнаяИнформацияКонтрагента Цикл
		ВидКИ = Стр.ВидКИ;
		ОбластьОсновнаяИнформация.Параметры[ВидКИ] = СокрЛП(Стр.Представление);	
	КонецЦикла;
	
	ОбластьОсновнаяИнформация.Параметры.ВидДеятельности = КонтрагентОтчета.ВидДеятельности;
	ОбластьОсновнаяИнформация.Параметры.ГенеральныйДиректор = КонтрагентОтчета.ГенеральныйДиректор;
	ОбластьОсновнаяИнформация.Параметры.Учредители = КонтрагентОтчета.Учредители;  
	ОбластьОсновнаяИнформация.Параметры.СведенияОРуководителяхИУчредителях = КонтрагентОтчета.СведенияОРуководителяхИУчредителях;
	ОбластьОсновнаяИнформация.Параметры.МассовыеАдреса = КонтрагентОтчета.МассовыеАдреса;
	ОбластьОсновнаяИнформация.Параметры.МассовыеРуководителиИУчредители = КонтрагентОтчета.МассовыеРуководителиИУчредители;
	ОбластьОсновнаяИнформация.Параметры.БазаСудебныхСпоров = КонтрагентОтчета.БазаСудебныхСпоров;
	
	ПравоПодписи = ПолучитьПравоПодписиПоДоверенности();
	ОбластьОсновнаяИнформация.Параметры.ПравоПодписи = ?(ПравоПодписи <> "", ПравоПодписи, КонтрагентОтчета.ГенеральныйДиректор);
	
	Таб.Вывести(ОбластьОсновнаяИнформация);
	
	//Банковский счет
	Если ЗначениеЗаполнено(КонтрагентОтчета.ОсновнойБанковскийСчет) тогда
		
		ОбластьБанковскийСчет = Макет.ПолучитьОбласть("БанкКонтрагента");
		ОбластьБанковскийСчет.Параметры.НомерСчета = КонтрагентОтчета.ОсновнойБанковскийСчет.НомерСчета;
		
		Если ЗначениеЗаполнено(КонтрагентОтчета.ОсновнойБанковскийСчет.Банк) Тогда
			ОбластьБанковскийСчет.Параметры.Банк    = КонтрагентОтчета.ОсновнойБанковскийСчет.Банк.ПолноеНаименование() + " " + КонтрагентОтчета.ОсновнойБанковскийСчет.Банк.Город;
			ОбластьБанковскийСчет.Параметры.Бик     = КонтрагентОтчета.ОсновнойБанковскийСчет.Банк.Код;
			ОбластьБанковскийСчет.Параметры.КорСчет = КонтрагентОтчета.ОсновнойБанковскийСчет.Банк.КоррСчет;
		КонецЕсли; 
		
		Таб.Вывести(ОбластьБанковскийСчет);
		
	КонецЕсли;	
	
	//Договора 	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Наименование,
	|	ДоговорыКонтрагентов.Организация,
	|	ДоговорыКонтрагентов.Номер,
	|	ДоговорыКонтрагентов.Дата,
	|	ДоговорыКонтрагентов.ВидДоговора,
	|	ДоговорыКонтрагентов.ПометкаУдаления КАК Пометка,
	|	ДоговорыКонтрагентов.ТипДоговора
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ДоговорыКонтрагентовЕдинаяСтоимостьУслугиПоставщикаИстория.Ссылка КАК Ссылка,
	|			МАКСИМУМ(ДоговорыКонтрагентовЕдинаяСтоимостьУслугиПоставщикаИстория.Цена) КАК Цена
	|		ИЗ
	|			Справочник.ДоговорыКонтрагентов.ЕдинаяСтоимостьУслугиПоставщикаИстория КАК ДоговорыКонтрагентовЕдинаяСтоимостьУслугиПоставщикаИстория
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					МАКСИМУМ(ДоговорыКонтрагентовЕдинаяСтоимостьУслугиПоставщикаИстория.Период) КАК Период,
	|					ДоговорыКонтрагентовЕдинаяСтоимостьУслугиПоставщикаИстория.Ссылка КАК Ссылка
	|				ИЗ
	|					Справочник.ДоговорыКонтрагентов.ЕдинаяСтоимостьУслугиПоставщикаИстория КАК ДоговорыКонтрагентовЕдинаяСтоимостьУслугиПоставщикаИстория
	|				ГДЕ
	|					ДоговорыКонтрагентовЕдинаяСтоимостьУслугиПоставщикаИстория.Период <= &Период
	|					И ДоговорыКонтрагентовЕдинаяСтоимостьУслугиПоставщикаИстория.Ссылка.Владелец = &Ссылка
	|				
	|				СГРУППИРОВАТЬ ПО
	|					ДоговорыКонтрагентовЕдинаяСтоимостьУслугиПоставщикаИстория.Ссылка) КАК ВложенныйЗапрос
	|				ПО ДоговорыКонтрагентовЕдинаяСтоимостьУслугиПоставщикаИстория.Ссылка = ВложенныйЗапрос.Ссылка
	|					И ДоговорыКонтрагентовЕдинаяСтоимостьУслугиПоставщикаИстория.Период = ВложенныйЗапрос.Период
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ДоговорыКонтрагентовЕдинаяСтоимостьУслугиПоставщикаИстория.Ссылка) КАК ВложенныйЗапрос
	|		ПО ДоговорыКонтрагентов.Ссылка = ВложенныйЗапрос.Ссылка
	|ГДЕ
	|	ДоговорыКонтрагентов.Владелец = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", КонтрагентОтчета);
	Запрос.УстановитьПараметр("Период", ДатаОтчета);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой()  Тогда
		
		ОбластьШапкаТаблицыДоговоры = Макет.ПолучитьОбласть("ШапкаТаблицыДоговоры");
		Таб.Вывести(ОбластьШапкаТаблицыДоговоры);
		
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ОбластьСтрокаТаблицыДоговоры = Макет.ПолучитьОбласть("СтрокаТаблицыДоговоры");
		
		ОбластьСтрокаТаблицыДоговоры.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		Таб.Вывести(ОбластьСтрокаТаблицыДоговоры);
		
	КонецЦикла;
	
	//Дополнительная информация
	ОбластьДополнительнаяИнформация = Макет.ПолучитьОбласть("ДополнительнаяИнформация");
	ОбластьДополнительнаяИнформация.Параметры.ОтчетОтветственногоМенеджера = КонтрагентОтчета.ОтчетОтветственногоМенеджера;
	ОбластьДополнительнаяИнформация.Параметры.РешениеПоКонтрагенту = КонтрагентОтчета.РешениеПоКонтрагенту;
	Таб.Вывести(ОбластьДополнительнаяИнформация);
	
	Таб.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Таб.ТолькоПросмотр = Истина;
	
	Таб.Показать();
	
КонецПроцедуры

Процедура СформироватьОтчет(Таб) Экспорт
	
	Если НЕ ЗначениеЗаполнено(КонтрагентОтчета) Тогда
		Предупреждение("Выберите контрагента!");
		Возврат;
	КонецЕсли;
	
	Если КонтрагентОтчета.ЭтоГруппа Тогда
		Предупреждение("Отчет нельзя формировать по группе элементов!");
		Возврат;
	КонецЕсли;
	
	ВывестиДанныеОтчета(Таб);
	
КонецПроцедуры

