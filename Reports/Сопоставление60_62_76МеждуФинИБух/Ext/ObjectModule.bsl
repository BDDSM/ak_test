
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;	

	СтрокаПодключения = ПолныеПрава.ПолучитьСтрокуПодключения_Бух();
	
	v82COMОбъект = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Бух() + ".COMConnector");
	Попытка
		v82 = v82COMОбъект.Connect(СтрокаПодключения);
		ПодключениеУстановлено=Истина;
	Исключение
		ПодключениеУстановлено=Ложь;
		Сообщить("Не удалось подключитьс к базе бухгалтерии");
		Возврат;
	КонецПопытки;
	
	Запрос=v82.NewObject("Запрос");  
	
	
	КомпоновщикНастроек.ЗагрузитьНастройки(КомпоновщикНастроек.ПолучитьНастройки());
	Для каждого Параметр из КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы Цикл
		Если СокрЛП(Параметр.Параметр)="ПериодОтчета" Тогда
			Запрос.УстановитьПараметр("ДатаС",Параметр.Значение.ДатаНачала);
			Запрос.УстановитьПараметр("ДатаПо",Параметр.Значение.ДатаОкончания);
			Прервать;
		КонецЕсли;
	КонецЦикла;	

	
	УсловиеХозрасчетный="";
	РазделУчета="";
	Для каждого Параметр из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если СокрЛП(Параметр.ЛевоеЗначение)="ИНН_Контрагента" Тогда
			Если Параметр.Использование=Истина Тогда
				УсловиеХозрасчетный=УсловиеХозрасчетный+?(СокрЛП(УсловиеХозрасчетный)="",""," И ")+"
	 			  |		Субконто1.ИНН = """+Параметр.ПравоеЗначение+"""";
			КонецЕсли;	
			
		ИначеЕсли СокрЛП(Параметр.ЛевоеЗначение)="Наименование_Контрагента" Тогда
			Если Параметр.Использование=Истина Тогда
				УсловиеХозрасчетный=УсловиеХозрасчетный+?(СокрЛП(УсловиеХозрасчетный)="",""," И ")+"
	 			  |		Субконто1.Наименование = """+?(ЗначениеЗаполнено(Параметр.ПравоеЗначение),Параметр.ПравоеЗначение,"")+"""";
			  КонецЕсли;	
		ИначеЕсли СокрЛП(Параметр.ЛевоеЗначение)="Организация" ИЛИ СокрЛП(Параметр.ЛевоеЗначение)="Субконто1" Тогда
			Если Параметр.Использование=Истина Тогда
				УсловиеХозрасчетный=УсловиеХозрасчетный+?(СокрЛП(УсловиеХозрасчетный)="",""," И ")+?(ЗначениеЗаполнено(Параметр.ПравоеЗначение)," Организация.ИНН = "+""""+Параметр.ПравоеЗначение.ИНН+""" "," Организация =Значение(Справочник.Организации.Пустаяссылка) ");
			  КонецЕсли;	 
		ИначеЕсли СокрЛП(Параметр.ЛевоеЗначение)="Контрагент" Тогда
			Если Параметр.Использование=Истина Тогда
				Если Параметр.ВидСравнения=ВидСравненияКомпоновкиДанных.Равно Тогда
					УсловиеХозрасчетный=УсловиеХозрасчетный+?(СокрЛП(УсловиеХозрасчетный)="",""," И ")+?(ЗначениеЗаполнено(Параметр.ПравоеЗначение)," Субконто1.ИНН = "+""""+Параметр.ПравоеЗначение.ИНН+""" "," Субконто1 Есть NULL ");
				//ИначеЕсли Параметр.ВидСравнения=ВидСравненияКомпоновкиДанных.ВСписке Тогда
				//	УсловиеХозрасчетный=УсловиеХозрасчетный+?(СокрЛП(УсловиеХозрасчетный)="",""," И ")+?(ЗначениеЗаполнено(Параметр.ПравоеЗначение)," Субконто1.ИНН = "+""""+Параметр.ПравоеЗначение.ИНН+""" "," Субконто1 Есть NULL ");
				КонецЕсли;	
			  КонецЕсли;	 	  
		ИначеЕсли СокрЛП(Параметр.ЛевоеЗначение)="ИНН_Организации" Тогда
			Если Параметр.Использование=Истина Тогда
				УсловиеХозрасчетный=УсловиеХозрасчетный+?(СокрЛП(УсловиеХозрасчетный)="",""," И ")+"
	 			  |		Организация.ИНН = """+Параметр.ПравоеЗначение+"""";
			  КонецЕсли;		  
		ИначеЕсли СокрЛП(Параметр.ЛевоеЗначение)="РазделУчета" Тогда
			Если Параметр.Использование=Истина Тогда
				РазделУчета=Параметр.ПравоеЗначение;
			 КонецЕсли;		  
			  
		КонецЕсли;
	КонецЦикла;	
	
	ТекстЗапроса="ВЫБРАТЬ
             |	ХозрасчетныйОстаткиИОбороты.ПериодДень КАК ПериодДень,
             |	ХозрасчетныйОстаткиИОбороты.Регистратор КАК Регистратор,
             |	ВЫБОР
             |		КОГДА ХозрасчетныйОстаткиИОбороты.Счет В ИЕРАРХИИ (&Сч60)
             |			ТОГДА ""Поставщики""
             |		КОГДА ХозрасчетныйОстаткиИОбороты.Счет В ИЕРАРХИИ (&Сч62)
             
             |			ТОГДА ""Покупатели""
			 
             |		ИНАЧЕ ""Прочие расчеты""
             |	КОНЕЦ КАК РазделУчета,
             |	ВЫБОР
             |		КОГДА ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.АвансовыйОтчет
             |			ТОГДА ""Авансовый отчет""
             |		КОГДА ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровОтПокупателя
             |			ТОГДА ""Возврат от покупателя""
             |		КОГДА ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ВозвратТоваровПоставщику
             |			ТОГДА ""Возврат поставщику""
             |		КОГДА ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ОперацияБух
             |			ТОГДА ""Операция""
             |		КОГДА ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ОприходованиеТоваров
             |			ТОГДА ""Оприходование товаров""
             |		КОГДА ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПередачаТоваров
             |			ТОГДА ""Передача товаров""
             |		КОГДА ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ОтчетОРозничныхПродажах
             |			ТОГДА ""Отчет о розничных продажах""
             |		КОГДА ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеИзПереработки
             |			ТОГДА ""Поступление из переработки""
             |		КОГДА ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеДопРасходов
             |			ТОГДА ""Поступление доп.расходов""
             |		КОГДА ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг
             |			ТОГДА ""Поступление""
             |		КОГДА ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.РеализацияТоваровУслуг
             |			ТОГДА ""Реализация""
             |		КОГДА ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.СписаниеТоваров
             |			ТОГДА ""Списание товаров""
             |		КОГДА ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ТребованиеНакладная
             |			ТОГДА ""Требование-накладная""
             |		КОГДА ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.КорректировкаПоступления
             |			ТОГДА ""Корректировка поступления""
			 |		КОГДА ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.СписаниеСРасчетногоСчета
             |			ТОГДА ""Расход их банка""
			  |		КОГДА ХозрасчетныйОстаткиИОбороты.Регистратор ССЫЛКА Документ.ПоступлениеНаРасчетныйСчет
             |			ТОГДА ""Приход в банк""
             |		ИНАЧЕ ""Прочее""
             |	КОНЕЦ КАК ТипДокумента,
             |	ХозрасчетныйОстаткиИОбороты.Счет.Код КАК Счет,
             |	ХозрасчетныйОстаткиИОбороты.Субконто1 КАК Контрагент,
             |	ХозрасчетныйОстаткиИОбороты.Субконто1.ИНН КАК ИНН_Контрагента,
             |	ХозрасчетныйОстаткиИОбороты.Субконто1.Наименование КАК Наименование_Контрагента,
             |	NULL КАК БухСуммаНачало,
             |	NULL КАК БухСуммаКонец,
             |	NULL КАК БухКоличествоНачало,
             |	NULL КАК БухКоличествоКонец,
             |	ХозрасчетныйОстаткиИОбороты.СуммаОборот КАК БухСуммаОборот,
             |	ХозрасчетныйОстаткиИОбороты.КоличествоОборот КАК БухКоличествоОборот,
             |	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт КАК БухСуммаОборотДт,
             |	ХозрасчетныйОстаткиИОбороты.КоличествоОборотДт КАК БухКоличествоОборотДт,
             |	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт КАК БухСуммаОборотКт,
             |	ХозрасчетныйОстаткиИОбороты.КоличествоОборотКт КАК БухКоличествоОборотКт,
             |	ХозрасчетныйОстаткиИОбороты.Организация,
             |	ХозрасчетныйОстаткиИОбороты.Организация.ИНН КАК ИНН_Организации
             |ПОМЕСТИТЬ Выборка
             |ИЗ
             |	РегистрБухгалтерии.Хозрасчетный.Обороты(&ДатаС, &ДатаПо, Авто, Счет В ИЕРАРХИИ (&Счета) И НЕ Счет В (&ИсключитьСчета), , "+УсловиеХозрасчетный+", , ) КАК ХозрасчетныйОстаткиИОбороты
             |
             |ОБЪЕДИНИТЬ ВСЕ
             |
             |ВЫБРАТЬ
             |	NULL,
             |	NULL,
             |	ВЫБОР
             |		КОГДА ХозрасчетныйОстатки.Счет В ИЕРАРХИИ (&Сч60)
             |			ТОГДА ""Поставщики""
             |		КОГДА ХозрасчетныйОстатки.Счет В ИЕРАРХИИ (&Сч62)
             |			ТОГДА ""Покупатели""
             |		ИНАЧЕ ""Прочие расчеты""
             |	КОНЕЦ,
             |	NULL,
             |	ХозрасчетныйОстатки.Счет.Код,
             |	ХозрасчетныйОстатки.Субконто1,
             |	ХозрасчетныйОстатки.Субконто1.ИНН,
             |	ХозрасчетныйОстатки.Субконто1.Наименование,
             |	ХозрасчетныйОстатки.СуммаОстаток,
             |	NULL,
             |	ХозрасчетныйОстатки.КоличествоОстаток,
             |	NULL,
             |	NULL,
             |	NULL,
             |	NULL,
             |	NULL,
             |	NULL,
             |	NULL,
             |	ХозрасчетныйОстатки.Организация,
             |	ХозрасчетныйОстатки.Организация.ИНН
             |ИЗ
             |	РегистрБухгалтерии.Хозрасчетный.Остатки(&ДатаС, Счет В ИЕРАРХИИ (&Счета) И НЕ Счет В (&ИсключитьСчета), ,"+УсловиеХозрасчетный+" ) КАК ХозрасчетныйОстатки
             |
             |ОБЪЕДИНИТЬ ВСЕ
             |
             |ВЫБРАТЬ
             |	NULL,
             |	NULL,
             |	ВЫБОР
             |		КОГДА ХозрасчетныйОстатки.Счет В ИЕРАРХИИ (&Сч60)
             |			ТОГДА ""Поставщики""
             |		КОГДА ХозрасчетныйОстатки.Счет В ИЕРАРХИИ (&Сч62)
             |			ТОГДА ""Покупатели""
             |		ИНАЧЕ ""Прочие расчеты""
             |	КОНЕЦ,
             |	NULL,
             |	ХозрасчетныйОстатки.Счет.Код,
             |	ХозрасчетныйОстатки.Субконто1,
             |	ХозрасчетныйОстатки.Субконто1.ИНН,
             |	ХозрасчетныйОстатки.Субконто1.Наименование,
             |	NULL,
             |	ХозрасчетныйОстатки.СуммаОстаток,
             |	NULL,
             |	ХозрасчетныйОстатки.КоличествоОстаток,
             |	NULL,
             |	NULL,
             |	NULL,
             |	NULL,
             |	NULL,
             |	NULL,
             |	ХозрасчетныйОстатки.Организация,
             |	ХозрасчетныйОстатки.Организация.ИНН
             |ИЗ
             |	РегистрБухгалтерии.Хозрасчетный.Остатки(ДОБАВИТЬКДАТЕ(&ДатаПо, СЕКУНДА, 1), Счет В ИЕРАРХИИ (&Счета) И НЕ Счет В (&ИсключитьСчета), ,"+УсловиеХозрасчетный+" ) КАК ХозрасчетныйОстатки
             |;
             |
             |////////////////////////////////////////////////////////////////////////////////
             |ВЫБРАТЬ
             |	Выборка.ПериодДень,
             |	ПРЕДСТАВЛЕНИЕ(Выборка.Регистратор) КАК РегистраторПредставление,
			 |	Выборка.Регистратор.Номер КАК НомерДокумента,
             |	Выборка.РазделУчета,
             |	Выборка.ТипДокумента,
             |	Выборка.Счет,
             |	Выборка.Контрагент,
             |	Выборка.ИНН_Контрагента,
             |	Выборка.Наименование_Контрагента,
             |	СУММА(Выборка.БухСуммаНачало) КАК БухСуммаНачало,
             |	СУММА(Выборка.БухСуммаКонец) КАК БухСуммаКонец,
             |	СУММА(Выборка.БухКоличествоНачало) КАК БухКоличествоНачало,
             |	СУММА(Выборка.БухКоличествоКонец) КАК БухКоличествоКонец,
             |	СУММА(Выборка.БухСуммаОборот) КАК БухСуммаОборот,
             |	СУММА(Выборка.БухКоличествоОборот) КАК БухКоличествоОборот,
             |	СУММА(Выборка.БухСуммаОборотДт) КАК БухСуммаОборотДт,
             |	СУММА(Выборка.БухКоличествоОборотДт) КАК БухКоличествоОборотДт,
             |	СУММА(Выборка.БухСуммаОборотКт) КАК БухСуммаОборотКт,
             |	СУММА(Выборка.БухКоличествоОборотКт) КАК БухКоличествоОборотКт,
             |	Выборка.Организация,
             |	Выборка.ИНН_Организации,
             |	Выборка.Регистратор КАК Регистратор
             |ИЗ
             |	Выборка КАК Выборка
             |
             |СГРУППИРОВАТЬ ПО
             |	Выборка.ПериодДень,
             |	Выборка.РазделУчета,
             |	Выборка.ТипДокумента,
             |	Выборка.Счет,
             |	Выборка.Контрагент,
             |	Выборка.Наименование_Контрагента,
             |	Выборка.ИНН_Контрагента,
             |	Выборка.Организация,
             |	Выборка.ИНН_Организации,
             |	Выборка.Регистратор";

	
	Запрос.Текст=ТекстЗапроса;
	
	МассивСчетов=v82.NewObject("Массив");
	Если РазделУчета="Поставщики" Тогда
		МассивСчетов.Добавить(v82.ПланыСчетов.Хозрасчетный.НайтиПоКоду("60"));
		
	ИначеЕсли РазделУчета="Покупатели" Тогда
		МассивСчетов.Добавить(v82.ПланыСчетов.Хозрасчетный.НайтиПоКоду("62"));
		
	ИначеЕсли РазделУчета="Прочие расчеты" Тогда
		МассивСчетов.Добавить(v82.ПланыСчетов.Хозрасчетный.НайтиПоКоду("76"));
	Иначе
		МассивСчетов.Добавить(v82.ПланыСчетов.Хозрасчетный.НайтиПоКоду("60"));
		МассивСчетов.Добавить(v82.ПланыСчетов.Хозрасчетный.НайтиПоКоду("62"));
		МассивСчетов.Добавить(v82.ПланыСчетов.Хозрасчетный.НайтиПоКоду("76"));
	КонецЕсли;	

	МассивСчетовИсключить=v82.NewObject("Массив");
	МассивСчетовИсключить.Добавить(v82.ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.АВ"));
	МассивСчетовИсключить.Добавить(v82.ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.ВА"));
	//+++АК sils 08.02.2018 ИП-00017810
	МассивСчетовИсключить.Добавить(v82.ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.06"));
	//---АК	
	//+++АК VERT 2018.03.02 ИП-00018017
	МассивСчетовИсключить.Добавить(v82.ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.03"));
	//---АК
	//+++АК VERT 2018.03.02 ИП-00018017.01
	МассивСчетовИсключить.Добавить(v82.ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.41"));
	//---АК

	
	Запрос.УстановитьПараметр("Счета",МассивСчетов);
	Запрос.УстановитьПараметр("ИсключитьСчета",МассивСчетовИсключить);
	
	Запрос.УстановитьПараметр("Сч60",v82.ПланыСчетов.Хозрасчетный.НайтиПоКоду("60"));
	Запрос.УстановитьПараметр("Сч62",v82.ПланыСчетов.Хозрасчетный.НайтиПоКоду("62"));
	
	
	Выборка=Запрос.Выполнить().Выбрать();
	
	ДанныеБух=Новый ТаблицаЗначений;
	ДанныеБух.Колонки.Добавить("ПериодДень");
	ДанныеБух.Колонки.Добавить("НомерДокумента");
	ДанныеБух.Колонки.Добавить("Счет");
	ДанныеБух.Колонки.Добавить("ИНН_Контрагента");
	ДанныеБух.Колонки.Добавить("Наименование_Контрагента");
	ДанныеБух.Колонки.Добавить("БухСуммаНачало");
	ДанныеБух.Колонки.Добавить("БухСуммаКонец");
	ДанныеБух.Колонки.Добавить("БухКоличествоНачало");
	ДанныеБух.Колонки.Добавить("БухКоличествоКонец");
	ДанныеБух.Колонки.Добавить("РегистраторПредставление");
	//ДанныеБух.Колонки.Добавить("Регистратор");
	ДанныеБух.Колонки.Добавить("ТипДокумента");
	ДанныеБух.Колонки.Добавить("РазделУчета");
	ДанныеБух.Колонки.Добавить("БухСуммаОборот");
	ДанныеБух.Колонки.Добавить("БухКоличествоОборот");
	ДанныеБух.Колонки.Добавить("БухСуммаОборотДт");
	ДанныеБух.Колонки.Добавить("БухКоличествоОборотДт");
	ДанныеБух.Колонки.Добавить("БухСуммаОборотКт");
	ДанныеБух.Колонки.Добавить("БухКоличествоОборотКт");
	ДанныеБух.Колонки.Добавить("Организация");
	ДанныеБух.Колонки.Добавить("Контрагент");
	
	ТекстЗапроса="ВЫБРАТЬ
	             |	Организации.ИНН,
	             |	Организации.Ссылка
	             |ИЗ
	             |	Справочник.Организации КАК Организации
	             |;
	             |
	             |////////////////////////////////////////////////////////////////////////////////
	             |ВЫБРАТЬ
	             |	Контрагенты.ИНН,
	             |	Контрагенты.Ссылка,
	             |	Контрагенты.Наименование
	             |ИЗ
	             |	Справочник.Контрагенты КАК Контрагенты";
	ЗапросОрг=Новый Запрос(ТекстЗапроса);			 
	Результат=ЗапросОрг.ВыполнитьПакет();
	
	//+++АК VERT 2018.04.13 Оптимизация
	ВыборкаОрг= Результат[0].Выбрать();
	СоответствиеОргИНН = Новый Соответствие;
	Пока ВыборкаОрг.Следующий() Цикл 
		СоответствиеОргИНН[ВыборкаОрг.ИНН] = ВыборкаОрг.Ссылка
	КонецЦикла;
	
	ВыборкаКА = Результат[1].Выбрать();
	СоответствиеКАИНН = Новый Соответствие;
	Пока ВыборкаКА.Следующий() Цикл 
		СоответствиеКАИНН[ВыборкаКА.ИНН] = ВыборкаКА.Ссылка
	КонецЦикла;
	
	Пока Выборка.Следующий() Цикл
		НС = ДанныеБух.Добавить();
		ЗаполнитьЗначенияСвойств(НС, Выборка, , "Организация,Контрагент");
		Орг = СоответствиеОргИНН[Выборка.ИНН_Организации];
		Если Орг <> Неопределено Тогда
			НС.Организация = Орг;
		Иначе	
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В базе ФИН не найдена Организация с ИНН " + Выборка.ИНН_Организации);
		КонецЕсли;	
		КА = СоответствиеКАИНН[Выборка.ИНН_Контрагента];
		Если КА <> Неопределено Тогда
			НС.Контрагент = КА;
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В базе ФИН не найден контрагент с ИНН " + Выборка.ИНН_Контрагента);
		КонецЕсли;	
	КонецЦикла;	 

	//Из схемы возьмем настройки по умолчанию
	Настройки = КомпоновщикНастроек.Настройки;

	//Помещаем в переменную данные о расшифровке данных
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;

	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;

	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,
	                                        Настройки, ДанныеРасшифровки);

	ВнешниеНаборыДанных=Новый Структура;

	ВнешниеНаборыДанных.Вставить("ДанныеБух",ДанныеБух);										
											
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,
	                                                   ДанныеРасшифровки);

	//Очищаем поле табличного документа

	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);

	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

КонецПроцедуры
