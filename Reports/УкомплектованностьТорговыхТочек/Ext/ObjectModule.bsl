
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НачалоПериода 	= '00010101';
	КонецПериода 	= '00010101';
	Для Каждого ПользПоле Из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(ПользПоле) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
				И Строка(ПользПоле.Параметр) = "Период" Тогда
			НачалоПериода 		= ПользПоле.Значение.ДатаНачала;
			КонецПериода 	= КонецДня(ПользПоле.Значение.ДатаОкончания);
		КонецЕсли;	
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(НачалоДня(КонецПериода))Тогда
		Сообщить("Не заполнен период для формирования отчета!");
		Возврат;
	КонецЕсли;
	
	ЗапросДляПереработки = Новый Запрос(
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ЛистУчетаПродавцы.Ссылка.Дата, ДЕНЬ) КАК Дата,
	|	ЛистУчетаПродавцы.Ссылка.ТорговаяТочка КАК ТорговаяТочка,
	|	ЛистУчетаПродавцы.Продавец КАК Продавец
	|ИЗ
	|	Документ.ЛистУчета.Продавцы КАК ЛистУчетаПродавцы
	|ГДЕ
	|	ЛистУчетаПродавцы.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ЛистУчетаПродавцы.Пч В (0, 1, 2, 5, 6)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТорговаяТочка,
	|	Продавец,
	|	Дата");
	
	ЗапросДляПереработки.УстановитьПараметр("НачалоПериода", НачалоПериода);
	ЗапросДляПереработки.УстановитьПараметр("КонецПериода",  КонецПериода);
	
	ТаблицаПереработки = Новый ТаблицаЗначений;
	ТаблицаПереработки.Колонки.Добавить("Дата", 			Новый ОписаниеТипов("Дата"));
	ТаблицаПереработки.Колонки.Добавить("ТорговаяТочка", 	Новый ОписаниеТипов("СправочникСсылка.СтруктурныеЕдиницы"));
	//ТаблицаПереработки.Колонки.Добавить("Продавец", 		Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	ТаблицаПереработки.Колонки.Добавить("Количество", 		Новый ОписаниеТипов("Число"));
	
	Выборка = ЗапросДляПереработки.Выполнить().Выбрать();
	
	ТекПродавец = Неопределено;
	ТекТТ 		= Неопределено;
	ТекДата 	= Дата(1,1,1);
	Смены		= 1;
	
	Пока Выборка.Следующий()Цикл
		
		Если ТекТТ <> Выборка.ТорговаяТочка Тогда
			ТекТТ = Выборка.ТорговаяТочка;
			Смены = 1;
		КонецЕсли;
		
		Если ТекПродавец <> Выборка.Продавец Тогда
			ТекПродавец = Выборка.Продавец;
			Смены = 1;
		КонецЕсли;
		
		Если ТекДата = (Выборка.Дата - 86400) Тогда
			ТекДата = Выборка.Дата;
			Смены = Смены + 1;
		Иначе
			ТекДата = Выборка.Дата;
			Смены = 1;
		КонецЕсли;
		
		Если Смены > 5 Тогда
			НовСтр = ТаблицаПереработки.Добавить();
			НовСтр.Дата = ТекДата;
			НовСтр.ТорговаяТочка = ТекТТ;
			НовСтр.Количество = 1;
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаПереработки.Свернуть("Дата, ТорговаяТочка", "Количество");
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЛистУчетаПродавцы.Ссылка,
	|	СУММА(ВЫБОР
	|			КОГДА ЛистУчетаПродавцы.Пч = 0
	|					ИЛИ ЛистУчетаПродавцы.Пч = 2
	|				ТОГДА 1
	|			КОГДА ЛистУчетаПродавцы.Пч = 1
	|					ИЛИ ЛистУчетаПродавцы.Пч = 5
	|					ИЛИ ЛистУчетаПродавцы.Пч = 6
	|				ТОГДА 0.5
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК КоличествоОтработанныхСмен
	|ПОМЕСТИТЬ ТаблицаОтработанныхСмен
	|ИЗ
	|	Документ.ЛистУчета.Продавцы КАК ЛистУчетаПродавцы
	|ГДЕ
	|	ЛистУчетаПродавцы.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	ЛистУчетаПродавцы.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) КАК Дата,
	|	ЛистУчета.ТорговаяТочка,
	|	ЛистУчета.ЦФО,
	|	ВЫБОР
	|		КОГДА РегламентированныйПроизводственныйКалендарь.ВидДня В (ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий), ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный))
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Выходной,
	|	ЕСТЬNULL(ТаблицаОтработанныхСмен.КоличествоОтработанныхСмен, 0) КАК КоличествоОтработанныхСмен,
	|	ЛистУчета.ТорговаяТочка.ТипРозничнойТочки КАК ТипТочки
	|ИЗ
	|	Документ.ЛистУчета КАК ЛистУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|		ПО (НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) = РегламентированныйПроизводственныйКалендарь.ДатаКалендаря)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаОтработанныхСмен КАК ТаблицаОтработанныхСмен
	|		ПО ЛистУчета.Ссылка = ТаблицаОтработанныхСмен.Ссылка
	|ГДЕ
	|	ЛистУчета.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата");
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
	ТаблицаДанных.Колонки.Добавить("КоличествоСмен", 			Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("ИзлишекОтработанныхСмен", 	Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("НедостатокОтработанныхСмен",Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("КоличествоПереработок", 	Новый ОписаниеТипов("Число"));
	
	ДатаСреза 	 = Неопределено;
	ТаблицаСреза = Новый ТаблицаЗначений;
	
	Для Каждого Стр Из ТаблицаДанных Цикл
		
		Если Не ЗначениеЗаполнено(ДатаСреза) ИЛИ ДатаСреза <> НачалоДня(Стр.Дата) Тогда
			ДатаСреза = НачалоДня(Стр.Дата);
			ТаблицаСреза = РегистрыСведений.КоличествоПродавцовНаТочках.СрезПоследних(ДатаСреза);
		КонецЕсли;
		
		НайденнаяСтрока = ТаблицаСреза.Найти(Стр.ТорговаяТочка, "ТорговаяТочка");
		
		КоличествоСмен = 0;
		Если НайденнаяСтрока <> Неопределено Тогда
			Если Стр.Выходной Тогда
				КоличествоСмен = НайденнаяСтрока.ВВыходныеДни;
			Иначе
				КоличествоСмен = НайденнаяСтрока.ВРабочиеДни;
			КонецЕсли;
		КонецЕсли;
		
		Если КоличествоСмен > 0 Тогда
			
			КоличествоСмен = Цел(КоличествоСмен/10) + ((КоличествоСмен/10 - Цел(КоличествоСмен/10))*10)*0.5;	
			
			// Посчитаем излишки отработанных смен
			Если КоличествоСмен < Стр.КоличествоОтработанныхСмен Тогда
				Стр.ИзлишекОтработанныхСмен = Стр.КоличествоОтработанныхСмен - КоличествоСмен;
			КонецЕсли;
			
			// Посчитаем недостатки отработанных смен
			Если КоличествоСмен > Стр.КоличествоОтработанныхСмен Тогда
				Стр.НедостатокОтработанныхСмен = КоличествоСмен - Стр.КоличествоОтработанныхСмен;
			КонецЕсли;
			
		КонецЕсли;
		
		// По заданию нужно брать минимум из класса и КоличествоОтработанныхСмен
		//Стр.КоличествоОтработанныхСмен = Мин(КоличествоСмен, Стр.КоличествоОтработанныхСмен);
		
		Стр.КоличествоСмен = КоличествоСмен;
		
		// Переработка
		Если ТаблицаПереработки.Количество()Тогда
			НайденныеСтроки = ТаблицаПереработки.НайтиСтроки(Новый Структура("Дата, ТорговаяТочка", Стр.Дата, Стр.ТорговаяТочка));
			Если НайденныеСтроки.Количество()Тогда
				Стр.КоличествоПереработок = НайденныеСтроки[0].Количество;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ДанныеДляФормирования", ТаблицаДанных);
	
	//Макет компоновки 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	
	//Компоновка данных
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	//Вывод результата
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры
