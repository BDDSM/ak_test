
&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Сп=РасшифроватьОтчет(Расшифровка,СтандартнаяОбработка);
	Если НЕ Сп=Неопределено Тогда
		ОткрытьФорму("Отчет.ОтчетПоНеотгруженнымПаллетам.Форма.ФормаРасшифровки",сп);
	КонецЕсли; 
КонецПроцедуры



Процедура ПолучитьСтруктуруВозврата(ПолеИлиГруппировка,СтруктураПолей)
	МассивРодителей = ПолеИлиГруппировка.ПолучитьРодителей();
	Для Каждого Стр из МассивРодителей Цикл
		Если ТипЗнч(Стр) = Тип("ЭлементРасшифровкиКомпоновкиДанныхГруппировка") Тогда 
			ПолучитьСтруктуруВозврата(Стр,СтруктураПолей);
		ИначеЕсли ТипЗнч(Стр) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
			ПоляГруппировки = Стр.ПолучитьПоля();
			Для Каждого гСтр из ПоляГруппировки Цикл
				Если СтруктураПолей.Свойство(гСтр.Поле) Тогда
					Если Не ЗначениеЗаполнено(СтруктураПолей[гСтр.Поле]) Тогда
						СтруктураПолей[гСтр.Поле] = гСтр.Значение;
					КонецЕсли;
				КонецЕсли;
				ПолучитьСтруктуруВозврата(Стр,СтруктураПолей);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция РасшифроватьОтчет(Расшифровка,СтандартнаяОбработка)
	СтруктураВозврата = Новый Структура();
	СтруктураВозврата1 = Новый Структура("Кладовщик,Маршрут,СтруктурнаяЕдиница");
	Данные = ПолучитьИзВременногоХранилища(ДанныеРасшифровки); 
	ПолучитьСтруктуруВозврата(Данные.Элементы[Расшифровка],СтруктураВозврата1);
	
	ПолучитьРасшифровкуСтроки(Данные, Расшифровка, СтруктураВозврата);
	Фл=Ложь;
	Для каждого Эл Из СтруктураВозврата1 Цикл
		Если ЗначениеЗаполнено(Эл.Значение) Тогда
			Фл=Истина;
		КонецЕсли; 
	КонецЦикла; 
	
	
	Для каждого Эл Из СтруктураВозврата1 Цикл
		Если Фл Тогда
			СтруктураВозврата.Вставить(Эл.Ключ,Эл.Значение);	
		КонецЕсли; 
	КонецЦикла; 
	ДатаОтчета = ТекущаяДата();
	
	Д1=Дата(1,1,1);
	Д2=Дата(1,1,1);
	
	СкладВл=Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	Склад=Справочники.Склады.ПустаяСсылка();
	Орг=Справочники.Организации.ПустаяСсылка();
	ВсеПаллеты=Ложь;	
	Для каждого Эл Из Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Попытка
			Если Строка(Эл.Параметр)="Дата1" Тогда
				Д1=Эл.Значение.Дата;
			КонецЕсли;
			Если Строка(Эл.Параметр)="Дата2" Тогда
				Д2=Эл.Значение.Дата;
			КонецЕсли;
			
			Если Строка(Эл.Параметр)="Владелец" Тогда
				СкладВл=Эл.Значение;
			КонецЕсли;
			Если Строка(Эл.Параметр)="Организация" Тогда
				Орг=Эл.Значение;
			КонецЕсли;
			Если Строка(Эл.Параметр)="Склад" Тогда
				Склад=Эл.Значение;
			КонецЕсли;
			Если Строка(Эл.Параметр)="ВсеПаллеты" Тогда
				ВсеПаллеты=Эл.Значение;
			КонецЕсли;
			
		Исключение
		
		КонецПопытки;
	КонецЦикла; 
	
	

	
	СтандартнаяОбработка=Ложь;
	
	СтруктураВозврата.Вставить("Д1",Д1);
	СтруктураВозврата.Вставить("Д2",Д2);
	
	СтруктураВозврата.Вставить("СкладВл",СкладВл);
	СтруктураВозврата.Вставить("Орг",Орг);
	СтруктураВозврата.Вставить("Склад",Склад);
	СтруктураВозврата.Вставить("ВсеПаллеты",ВсеПаллеты);
	
	Возврат СтруктураВозврата;

	
КонецФункции


Функция ПолучитьИмяПервогоПоляВСтрокеОтчета(ДанныеРасшифровки, ИмяПоляВГруппировке)
	
	// Найдем индекс первого вхождения ИмяПоляВГруппировке в отчет
	Индекс = 0;
	Пока Истина Цикл
		Если Индекс >= ДанныеРасшифровки.Элементы.Количество() Тогда
			СообщениеОтладки("Не нашли элемент поле в отчете!");
			Возврат Неопределено;
		КонецЕсли;
		
		ТекущийЭл = ДанныеРасшифровки.Элементы[Индекс];
		
		Если ТипЗнч(ТекущийЭл) <> Тип("ЭлементРасшифровкиКомпоновкиДанныхГруппировка") И		
			ТекущийЭл.ПолучитьПоля()[0].Поле = ИмяПоляВГруппировке Тогда
			Прервать;
		КонецЕсли;
		Индекс = Индекс + 1;
	КонецЦикла;
	
	
	// Найдем имя первого поля
	Пока Истина Цикл
		
		// уперлись в начало отчета или группу
		Если Индекс < 0 ИЛИ 
			ТипЗнч(ДанныеРасшифровки.Элементы[Индекс]) = Тип("ЭлементРасшифровкиКомпоновкиДанныхГруппировка") Тогда
			Если Индекс < 0 Тогда
				СообщениеОтладки("Уперлись в начало отчета а не в группировку! (ПолучитьИмяПервогоПоляВСтрокеОтчета)");
			КонецЕсли;
			Возврат ДанныеРасшифровки.Элементы[Индекс + 1].ПолучитьПоля()[0].Поле;
		КонецЕсли;
		
		Индекс = Индекс - 1;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

// ЭлементРасшифровки - у которого ищем родителей
// Необходимые нам элементы заключены между (снизу) "элемент группировка" и (сверху) повторяющийся "элемент поля"
Процедура ПолучитьРасшифровкуВГруппировках(ДанныеРасшифровки, ЭлементРасшифровки, РасшифровкаСтроки)
		
	МассивРодителейЭлементаРасшифровки = ЭлементРасшифровки.ПолучитьРодителей();
	Если МассивРодителейЭлементаРасшифровки.Количество() = 0 Тогда
		СообщениеОтладки("Нет родителей у расшифровки!");
		Возврат;
	КонецЕсли;
	
	//МассивРодителейЭлементаРасшифровки[0] это "элемент группировка", раньше которой идут "элементы поля" нужные нам 
	Индекс = Число(МассивРодителейЭлементаРасшифровки[0].Идентификатор) - 1;
	Пока Истина Цикл
		Если Индекс <= 0 Тогда //пришли в начало отчета
			Возврат; 
		КонецЕсли;
		
		ТекущийЭл = ДанныеРасшифровки.Элементы[Индекс];
		
		Если ТипЗнч(ТекущийЭл) = Тип("ЭлементРасшифровкиКомпоновкиДанныхГруппировка") Тогда // "поле группировки"
			ПолучитьРасшифровкуВГруппировках(ДанныеРасшифровки, ТекущийЭл, РасшифровкаСтроки);
			СообщениеОтладки("В групперовке уперлись сверху в элемент группировки!");
			Возврат;
			
		ИначеЕсли РасшифровкаСтроки.Свойство(ИмяСв(ТекущийЭл.ПолучитьПоля()[0].Поле)) Тогда // повторяющийся "элемент поле"
			// рекурсивно ищем в группировках выше
			ПолучитьРасшифровкуВГруппировках(ДанныеРасшифровки, ТекущийЭл, РасшифровкаСтроки);
			
			Если ТекущийЭл.ПолучитьПоля().Количество() > 1 Тогда
				СообщениеОтладки("Количество полей в повторяющемся элементе больше 1!");
			КонецЕсли;
			Возврат;	
			
		//ИначеЕсли РодительскийЭлемент[0].Идентификатор <> ТекущийЭл.ПолучитьРодителей()[0].Идентификатор Тогда  // - текущий элемент не из др группы	
		КонецЕсли;
		
		
		Для каждого ПолеРасшифровки Из ТекущийЭл.ПолучитьПоля() Цикл
			Если РасшифровкаСтроки.Свойство(ИмяСв(ПолеРасшифровки.Поле)) = Ложь Тогда
				РасшифровкаСтроки.Вставить(ИмяСв(ПолеРасшифровки.Поле), ПолеРасшифровки.Значение);
			Иначе
				СообщениеОтладки("Добавлено повторяющееся поле (в группировках)!");
			КонецЕсли;
		КонецЦикла;
		
		Индекс = Индекс - 1;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьРасшифровкуСтроки(ДанныеРасшифровки, Расшифровка, РасшифровкаСтроки) Экспорт
	
	
	// Сначала получим данные расшифровки в группировках (т.к. это поможет при считывании данных к концу отчета)
	ПолучитьРасшифровкуВГруппировках(ДанныеРасшифровки, ДанныеРасшифровки.Элементы[Расшифровка], РасшифровкаСтроки);
	
	
	ИмяПервогоПоля = ПолучитьИмяПервогоПоляВСтрокеОтчета(ДанныеРасшифровки, ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля()[0].Поле);
	Если ИмяПервогоПоля = Неопределено Тогда
		Возврат РасшифровкаСтроки;
	КонецЕсли;
	
	// Считываем данные расшифровок к началу отчета пока не упремся в ИмяПервогоПоля
	// включая текущую расшифровку
	Смещение = 0;
	Индекс = Число(Расшифровка);
	Пока Истина Цикл
		Если Индекс < 0 Тогда
			СообщениеОтладки("Уперлись в начало отчета а не в группировку! (ПолучитьРасшифровкуСтроки)");
			Прервать;
		КонецЕсли;
		
		ТекущийЭл = ДанныеРасшифровки.Элементы[Индекс];
		Если ТипЗнч(ТекущийЭл) = Тип("ЭлементРасшифровкиКомпоновкиДанныхГруппировка") Тогда
			СообщениеОтладки("Считали все расшифровки вверх и не нашли первого поля!");
			Прервать; // все данные получены
		КонецЕсли;
		
		Для каждого ПолеРасшифровки Из ТекущийЭл.ПолучитьПоля() Цикл
			Если РасшифровкаСтроки.Свойство(ИмяСв(ПолеРасшифровки.Поле)) = Ложь Тогда
				РасшифровкаСтроки.Вставить(ИмяСв(ПолеРасшифровки.Поле), ПолеРасшифровки.Значение);
			Иначе
				СообщениеОтладки("Добавлено повторяющееся поле при ходе вверх!");
			КонецЕсли;
		КонецЦикла;
		
		Если ТекущийЭл.ПолучитьПоля()[0].Поле = ИмяПервогоПоля Тогда
			Прервать;
		КонецЕсли;
		Индекс = Индекс - 1;
	КонецЦикла;
	
	// Считываем данные расшифровок к концу отчета
	// исключая текущую расшифровку
	Индекс = Расшифровка + 1;
	Пока Истина Цикл
 
		// - до конца отчета или
		// - до группировки или
		// - до первого поля(начало след строки) или
		// - до полей группировки следующих строк (если такое поле уже есть)
		Если Индекс >= ДанныеРасшифровки.Элементы.Количество() ИЛИ
			ТипЗнч(ДанныеРасшифровки.Элементы[Индекс]) = Тип("ЭлементРасшифровкиКомпоновкиДанныхГруппировка") ИЛИ
			ДанныеРасшифровки.Элементы[Индекс].ПолучитьПоля()[0].Поле = ИмяПервогоПоля ИЛИ
			РасшифровкаСтроки.Свойство(ИмяСв(ДанныеРасшифровки.Элементы[Индекс].ПолучитьПоля()[0].Поле)) Тогда
			Прервать;
		КонецЕсли;
		
		Для каждого ПолеРасшифровки Из ДанныеРасшифровки.Элементы[Индекс].ПолучитьПоля() Цикл
			//Если РасшифровкаСтроки.Свойство(ИмяСв(ПолеРасшифровки.Поле)) = Ложь Тогда проверка выше
				РасшифровкаСтроки.Вставить(ИмяСв(ПолеРасшифровки.Поле), ПолеРасшифровки.Значение);
			//КонецЕсли;
		КонецЦикла;
		Индекс = Индекс + 1;
	КонецЦикла;
	
	Возврат РасшифровкаСтроки;
	
КонецФункции

Функция ИмяСв(Текст)
	Возврат СтрЗаменить(Текст, "." , "_");
КонецФункции

Процедура СообщениеОтладки(ТекстСообщения)
#Если Клиент Тогда
	ОтладкаВключена = Ложь;
	Если ОтладкаВключена Тогда
		Сообщить(ТекстСообщения);
	КонецЕсли;
#КонецЕсли
КонецПроцедуры