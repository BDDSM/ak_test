//+++АК sole 2018.08.14 ИП-00019363
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	тзРезультат = ПолучитьТаблицуРезультат();	
	
	ВнешниеНаборыДанных = Новый Структура("тзРезультат", тзРезультат);
	
	Настройки = ЭтотОбъект.КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(ЭтотОбъект.СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
      
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных();
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент();
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

//+++АК sole 2018.08.14 ИП-00019363
Функция ПолучитьТаблицуРезультат()
	
	СоединениеБазаЗУП = ПолучитьСоединениеСБазойЗУП();
	
	Если СоединениеБазаЗУП = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	ВнешнийЗапрос = СоединениеБазаЗУП.NewObject("Запрос");
	
	БПР = Новый Структура();
	
	БПР.Вставить("Запрос", Запрос);
	БПР.Вставить("ВнешнийЗапрос", ВнешнийЗапрос);
	БПР.Вставить("СоединениеБазаЗУП", СоединениеБазаЗУП);
	
	ПараметрОрганизация = ПолучитьПараметрПользователя("Организация");
	
	БПР.Вставить("Организация", ПараметрОрганизация.Значение);
	
	ПолучитьОрганизациюЗУП(БПР);
	СформироватьСписокПодразделений(БПР);
//СформироватьСписокПодразделений_(БПР);	
//СформироватьСписокФизЛицПодразделений(БПР);
	СформироватьСтажиРаботыФизЛиц(БПР);
	СформироватьЦФОСтруктурныхЕдиницСИнтерваламиДат(БПР);
	тзРезультат = СформироватьТаблицуРезультат(БПР);
	
	Возврат тзРезультат;
КонецФункции

//+++АК sole 2018.08.15 ИП-00019363
Процедура ПолучитьОрганизациюЗУП(БПР)
	
	Перем  ВнешнийЗапрос;
	
	ВнешнийЗапрос = БПР.ВнешнийЗапрос;
	
	ВнешнийЗапрос.Текст =
"ВЫБРАТЬ ПЕРВЫЕ 1
|	Организации.Ссылка
|	
|ИЗ Справочник.Организации КАК Организации
|ГДЕ 
|		НЕ Организации.ПометкаУдаления	
|	И	Организации.Наименование = &Наименование
|";
	ВнешнийЗапрос.УстановитьПараметр("Наименование", БПР.Организация.Наименование);
	
	Выборка = ВнешнийЗапрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		БПР.Вставить("ОрганизацияЗУП", Выборка.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

//+++АК sole 2018.08.14 ИП-00019363
Процедура СформироватьСписокПодразделений(БПР)
	
	Перем Запрос, ВнешнийЗапрос;
	
	Запрос = БПР.Запрос;
	
	Запрос.Текст =
"ВЫБРАТЬ
|	ЦФОСтруктурныхЕдиниц.СтруктурнаяЕдиница.Наименование КАК Наименование
|ИЗ РегистрСведений.ЦФОСтруктурныхЕдиниц КАК ЦФОСтруктурныхЕдиниц
|ГДЕ
|	    НЕ ЦФОСтруктурныхЕдиниц.СтруктурнаяЕдиница.ПометкаУдаления
//|	И	ЦФОСтруктурныхЕдиниц.ЦФО = &Группа
|	И	ЦФОСтруктурныхЕдиниц.Организация = &Организация
|
|СГРУППИРОВАТЬ ПО ЦФОСтруктурныхЕдиниц.СтруктурнаяЕдиница.Наименование
|";
	
	//Запрос.УстановитьПараметр("Группа", БПР.Группа);
	Запрос.УстановитьПараметр("Организация", БПР.Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СписокНаименованийПодразделений = БПР.СоединениеБазаЗУП.NewObject("СписокЗначений");
	
	Пока Выборка.Следующий() Цикл
		СписокНаименованийПодразделений.Добавить(Выборка.Наименование);	
	КонецЦикла;
	
	Запрос.Параметры.Очистить();
	
	СписокПодразделений = БПР.СоединениеБазаЗУП.NewObject("СписокЗначений");
	
	ВнешнийЗапрос = БПР.ВнешнийЗапрос;
	ВнешнийЗапрос.Текст =
"ВЫБРАТЬ
|	ПодразделенияОрганизаций.Ссылка
|
|ИЗ Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
|ГДЕ 
|		НЕ ПодразделенияОрганизаций.ПометкаУдаления
|	И	ПодразделенияОрганизаций.Наименование В (&СписокНаименованийПодразделений) 
|";
	ВнешнийЗапрос.УстановитьПараметр("СписокНаименованийПодразделений", СписокНаименованийПодразделений);
	
	Выборка = ВнешнийЗапрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокПодразделений.Добавить(Выборка.Ссылка);	
	КонецЦикла;
	
	БПР.Вставить("СписокПодразделений", СписокПодразделений);
	
КонецПроцедуры

//+++АК sole 2018.08.14 ИП-00019363
Процедура СформироватьСписокФизЛицПодразделений(БПР)
	
	Перем ВнешнийЗапрос;
	
	ВнешнийЗапрос = БПР.ВнешнийЗапрос;
	
	ВнешнийЗапрос.Текст =
"ВЫБРАТЬ
|	РаботникиОрганизацийСрезПоследних.Сотрудник.ФизЛицо КАК ФизЛицо
|
|ИЗ РегистрСведений.РаботникиОрганизаций.СрезПоследних КАК РаботникиОрганизацийСрезПоследних
|ГДЕ
|   	(
|				ТИПЗНАЧЕНИЯ(РаботникиОрганизацийСрезПоследних.Регистратор) <> ТИП(Документ.УвольнениеИзОрганизаций)
|			ИЛИ	&ВключаяяУволенных
|		)
|	И	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации В (&СписокПодразделений)
|";
	ВключаяяУволенных = ПолучитьПараметрПользователя("ВключаяяУволенных");	
	
	ВнешнийЗапрос.УстановитьПараметр("СписокПодразделений", БПР.СписокПодразделений);
	ВнешнийЗапрос.УстановитьПараметр("ВключаяяУволенных", ВключаяяУволенных.Значение);
	
	Выборка = ВнешнийЗапрос.Выполнить().Выбрать();
	
	СписокФизЛицПодразделений = БПР.СоединениеБазаЗУП.NewObject("СписокЗначений");
	
	Пока Выборка.Следующий() Цикл
		СписокФизЛицПодразделений.Добавить(Выборка.ФизЛицо);	
	КонецЦикла;
	
	БПР.Вставить("СписокФизЛицПодразделений", СписокФизЛицПодразделений);
	
КонецПроцедуры

//+++АК sole 2018.08.14 ИП-00019363
Процедура СформироватьСтажиРаботыФизЛиц(БПР)
	
	Перем ВнешнийЗапрос;
	
	ВнешнийЗапрос = БПР.ВнешнийЗапрос;
	
	ВнешнийЗапрос.Текст =	
"ВЫБРАТЬ
|	РаботникиОрганизаций.Период,
|	РаботникиОрганизаций.Сотрудник.Физлицо КАК Физлицо,
|	ВЫБОР
|		КОГДА ТИПЗНАЧЕНИЯ(РаботникиОрганизаций.Регистратор) = ТИП(Документ.ПриемНаРаботуВОрганизацию) ТОГДА 1
|		КОГДА ТИПЗНАЧЕНИЯ(РаботникиОрганизаций.Регистратор) = ТИП(Документ.УвольнениеИзОрганизаций) ТОГДА 2
|	КОНЕЦ КАК КодТипаРегистратора
|	
|		ПОМЕСТИТЬ втПриёмыУвольнения
|ИЗ
|	РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
|ГДЕ 
|		(
|				ТИПЗНАЧЕНИЯ(РаботникиОрганизаций.Регистратор) = ТИП(Документ.ПриемНаРаботуВОрганизацию)
|			ИЛИ	ТИПЗНАЧЕНИЯ(РаботникиОрганизаций.Регистратор) = ТИП(Документ.УвольнениеИзОрганизаций)
|		)
|	И	РаботникиОрганизаций.Организация = &Организация
|
|ИНДЕКСИРОВАТЬ ПО РаботникиОрганизаций.Сотрудник.Физлицо
|;
|
|///////////////////////////////////////////////////////////	
|ВЫБРАТЬ
|	втПриёмыУвольнения.Период,
|	втПриёмыУвольнения.Физлицо,
|	втПриёмыУвольнения.КодТипаРегистратора
|		
|		ПОМЕСТИТЬ втПриёмыУвольненияОтфильтрованные
|		
|ИЗ втПриёмыУвольнения
|	ЛЕВОЕ СОЕДИНЕНИЕ втПриёмыУвольнения КАК втПриёмыУвольнения1 ПО
|			втПриёмыУвольнения1.Период = втПриёмыУвольнения.Период 
|		И	втПриёмыУвольнения1.Физлицо = втПриёмыУвольнения.Физлицо
|		И	втПриёмыУвольнения1.КодТипаРегистратора <> втПриёмыУвольнения.КодТипаРегистратора
|
|ГДЕ втПриёмыУвольнения1.Период ЕСТЬ NULL
|;
|
|///////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	втПриёмыУвольненияОтфильтрованные.Физлицо,
|	МАКСИМУМ(втПриёмыУвольненияОтфильтрованные.Период) КАК ДатаПриёма
|	
|		ПОМЕСТИТЬ втПриёмы
|
|ИЗ втПриёмыУвольненияОтфильтрованные
|ГДЕ
|		втПриёмыУвольненияОтфильтрованные.КодТипаРегистратора = 1 //Приём на работу
|
|СГРУППИРОВАТЬ ПО втПриёмыУвольненияОтфильтрованные.Физлицо
|;
|
|///////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	втПриёмыУвольненияОтфильтрованные.Физлицо,
|	МАКСИМУМ(втПриёмыУвольненияОтфильтрованные.Период) КАК ДатаУвольнения
|	
|		ПОМЕСТИТЬ втУвольнения
|
|ИЗ втПриёмыУвольненияОтфильтрованные
|ГДЕ
|		втПриёмыУвольненияОтфильтрованные.КодТипаРегистратора = 2 // Увольнение
|
|СГРУППИРОВАТЬ ПО втПриёмыУвольненияОтфильтрованные.Физлицо
|
|ИНДЕКСИРОВАТЬ ПО втПриёмыУвольненияОтфильтрованные.Физлицо
|;
|
|///////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	втПриёмы.ФизЛицо,
|	РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации.Наименование КАК НаименованиеПодразделения,
|	втПриёмы.ДатаПриёма КАК СтажНачалоПериода,
|	ЕСТЬNULL(втУвольнения.ДатаУвольнения, &ТекущаяДата) КАК СтажОкончаниеПериода,
|
|	РАЗНОСТЬДАТ(втПриёмы.ДатаПриёма, ЕСТЬNULL(втУвольнения.ДатаУвольнения, &ТекущаяДата), ДЕНЬ) КАК СтажВДнях,
|
|	ВЫБОР
|		КОГДА втУвольнения.ДатаУвольнения ЕСТЬ NULL ТОГДА Ложь
|		ИНАЧЕ Истина
|	КОНЕЦ КАК Уволенный,
|
|	РаботникиОрганизацийСрезПоследних.Должность.Наименование КАК Должность
|	
|ИЗ втПриёмы
|	ЛЕВОЕ СОЕДИНЕНИЕ втУвольнения ПО
|			втУвольнения.ФизЛицо = втПриёмы.Физлицо
|		И   втУвольнения.ДатаУвольнения >= втПриёмы.ДатаПриёма
|
|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних КАК РаботникиОрганизацийСрезПоследних ПО
|   		РаботникиОрганизацийСрезПоследних.Сотрудник.ФизЛицо = втПриёмы.Физлицо
|      И	РаботникиОрганизацийСрезПоследних.Организация = &Организация 
|
|";
	ВнешнийЗапрос.УстановитьПараметр("Организация", БПР.ОрганизацияЗУП);
	ВнешнийЗапрос.УстановитьПараметр("ТекущаяДата", НачалоДня(ТекущаяДата()));
	
	Выборка = ВнешнийЗапрос.Выполнить().Выбрать();
	
	тзСтажиРаботыФизЛиц = СоздатьТаблицуСтажиРаботыФизЛиц(); 
	
	Пока Выборка.Следующий() Цикл
		НСтр = тзСтажиРаботыФизЛиц.Добавить();
		
		ЗаполнитьЗначенияСвойств(НСтр, Выборка);
		
		НСтр.ФизЛицоУИН = БПР.СоединениеБазаЗУП.string(Выборка.ФизЛицо.УникальныйИдентификатор());
		//НСтр.СтажЛет = Цел(Выборка.СтажВДнях / 360);
		//ОстатокСтаж = Выборка.СтажВДнях - НСтр.СтажЛет * 360;
		//НСтр.СтажМесяцев = Цел(ОстатокСтаж / 30);
		//НСтр.СтажДней = ОстатокСтаж - НСтр.СтажМесяцев * 30;
		Стаж = РассчитатьСтаж(Выборка.СтажНачалоПериода, Выборка.СтажОкончаниеПериода);
		ЗаполнитьЗначенияСвойств(НСтр, Стаж,"СтажЛет, СтажМесяцев, СтажДней");
		НСтр.СтажПрописью = ПолучитьСтажПрописью(НСтр.СтажЛет, НСтр.СтажМесяцев, НСтр.СтажДней);  
	КонецЦикла;
	
	БПР.Вставить("тзСтажиРаботыФизЛиц", тзСтажиРаботыФизЛиц);
	
КонецПроцедуры

//+++АК sole 2018.08.16 ИП-00019363
Функция РассчитатьСтаж(СтажНачалоПериода, СтажОкончаниеПериода)
	
	Перем Результат;
	
	Результат = Новый Структура();
	Результат.Вставить("СтажЛет", 0);	
	Результат.Вставить("СтажМесяцев", 0);	
	Результат.Вставить("СтажДней", 0);	
	
	ДатаНижнейГраницы = КонецМесяца(СтажНачалоПериода) + 1;
	ДатаВерхнейГраницы = НачалоМесяца(СтажОкончаниеПериода);
	
	Если ДатаВерхнейГраницы < ДатаНижнейГраницы Тогда
		Дни = Цел((СтажОкончаниеПериода - СтажНачалоПериода)/86400);
		Если Дни >= 30 Тогда
			Результат.СтажДней = Дни - 30;
			Результат.СтажМесяцев = 1;
		Иначе
			Результат.СтажДней = Дни;	
		КонецЕсли;
		
		Возврат Результат;	
	КонецЕсли;
	
	НижняяГраницаМесяцев = Год(ДатаНижнейГраницы)*12 + Месяц(ДатаНижнейГраницы);
	ВерхняяГраницаМесяцев = Год(ДатаВерхнейГраницы)*12 + Месяц(ДатаВерхнейГраницы);
	
	Дни = (ДатаНижнейГраницы - СтажНачалоПериода)/86400 + (СтажОкончаниеПериода - ДатаВерхнейГраницы)/86400;
	
	ПрибавкаКМесяцам = Цел(Дни / 30);
	
	РазницаМесяцев = ВерхняяГраницаМесяцев - НижняяГраницаМесяцев + ПрибавкаКМесяцам;
	
	Результат.СтажЛет = Цел(РазницаМесяцев/12);
	Результат.СтажМесяцев = РазницаМесяцев - Результат.СтажЛет*12;
	Результат.СтажДней = Дни - ПрибавкаКМесяцам * 30;
	
	Возврат Результат;
КонецФункции

//+++АК sole 2018.08.15 ИП-00019363
Функция ПолучитьСтажПрописью(СтажЛет, СтажМесяцев, СтажДней) 
	СтажПрописью = "";
	
	Если СтажЛет <> 0 Тогда
		Остаток = СтажЛет % 10;
		
		СтажПрописью = СтажПрописью + Формат(СтажЛет, "ЧГ=0") + " ";
		
		ЭтоНе11_19 = (СтажЛет < 11 ИЛИ СтажЛет > 19);
		
		Пока Истина Цикл
			
			Если Остаток = 1 И ЭтоНе11_19 Тогда
				СтажПрописью = СтажПрописью + "год";
				Прервать;
			КонецЕсли;
			
			Если Остаток >= 2 И Остаток <= 4 И ЭтоНе11_19 Тогда
				СтажПрописью = СтажПрописью + "года";
				Прервать;
			КонецЕсли;
			
			СтажПрописью = СтажПрописью + "лет";
			Прервать;
		КонецЦикла;
		
	КонецЕсли;
	
	Если СтажМесяцев <> 0 Тогда
		Если СтажПрописью <> "" Тогда
			СтажПрописью = СтажПрописью + ", ";	
		КонецЕсли;
		
		Остаток = СтажМесяцев % 10;
		
		СтажПрописью = СтажПрописью + Формат(СтажМесяцев, "ЧГ=0") + " ";
		
		ЭтоНе11_19 = (СтажМесяцев < 11 ИЛИ СтажМесяцев > 19);
		
		Пока Истина Цикл
			
			Если Остаток = 1 И ЭтоНе11_19 Тогда
				СтажПрописью = СтажПрописью + "месяц";
				Прервать;
			КонецЕсли;
			
			Если Остаток >= 2 И Остаток <= 4 И ЭтоНе11_19 Тогда
				СтажПрописью = СтажПрописью + "месяца";
				Прервать;
			КонецЕсли;
			
			СтажПрописью = СтажПрописью + "месяцев";
			Прервать;
		КонецЦикла;
		
	КонецЕсли;
	
	Если СтажДней <> 0 Тогда
		Если СтажПрописью <> "" Тогда
			СтажПрописью = СтажПрописью + ", ";	
		КонецЕсли;
		
		СтажПрописью = СтажПрописью + Формат(СтажДней, "ЧГ=0") + " ";
		
		Остаток = СтажДней % 10;
		
		ЭтоНе11_19 = (СтажДней < 11 ИЛИ СтажДней > 19);
		
		Пока Истина Цикл
			
			Если Остаток = 1 И ЭтоНе11_19 Тогда
				СтажПрописью = СтажПрописью + "день";
				Прервать;
			КонецЕсли;
			
			Если Остаток >= 2 И Остаток <= 4 И ЭтоНе11_19 Тогда
				СтажПрописью = СтажПрописью + "дня";
				Прервать;
			КонецЕсли;
			
			СтажПрописью = СтажПрописью + "дней";
			Прервать;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат СтажПрописью;
	
КонецФункции


//+++АК sole 2018.08.15 ИП-00019363
Функция СоздатьТаблицуСтажиРаботыФизЛиц()
	
	КД = Новый КвалификаторыДаты(ЧастиДаты.Дата);
	КЧ = Новый КвалификаторыЧисла(15,0, ДопустимыйЗнак.Неотрицательный);
	
	тзСтажиРаботыФизЛиц = Новый ТаблицаЗначений();
	тзСтажиРаботыФизЛиц.Колонки.Добавить("ФизЛицоУИН", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(36)));
	тзСтажиРаботыФизЛиц.Колонки.Добавить("НаименованиеПодразделения", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(128)));
	тзСтажиРаботыФизЛиц.Колонки.Добавить("СтажНачалоПериода", Новый ОписаниеТипов("Дата",,,,,КД));
	тзСтажиРаботыФизЛиц.Колонки.Добавить("СтажОкончаниеПериода", Новый ОписаниеТипов("Дата",,,,,КД));
	тзСтажиРаботыФизЛиц.Колонки.Добавить("Уволенный", Новый ОписаниеТипов("Булево"));
	тзСтажиРаботыФизЛиц.Колонки.Добавить("СтажВДнях", Новый ОписаниеТипов("Число",,,КЧ));
	тзСтажиРаботыФизЛиц.Колонки.Добавить("СтажЛет", Новый ОписаниеТипов("Число",,,КЧ));
	тзСтажиРаботыФизЛиц.Колонки.Добавить("СтажМесяцев", Новый ОписаниеТипов("Число",,,КЧ));
	тзСтажиРаботыФизЛиц.Колонки.Добавить("СтажДней", Новый ОписаниеТипов("Число",,,КЧ));
	тзСтажиРаботыФизЛиц.Колонки.Добавить("СтажПрописью", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(128)));
	тзСтажиРаботыФизЛиц.Колонки.Добавить("Должность", Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(128)));
	
	Возврат тзСтажиРаботыФизЛиц;
	
КонецФункции

//+++АК sole 2018.08.15 ИП-00019363
Процедура СформироватьЦФОСтруктурныхЕдиницСИнтерваламиДат(БПР)
	
	Перем Запрос;
	
	Запрос = БПР.Запрос;
	Запрос.Текст =
"ВЫБРАТЬ
|	ЦФОСтруктурныхЕдиниц.Период,
|	ЦФОСтруктурныхЕдиниц.СтруктурнаяЕдиница,
|	ЦФОСтруктурныхЕдиниц.ЦФО,
|	0 КАК ИД,
|	0 КАК СледИД
|	
|ИЗ РегистрСведений.ЦФОСтруктурныхЕдиниц КАК ЦФОСтруктурныхЕдиниц
|ГДЕ	
|		НЕ ЦФОСтруктурныхЕдиниц.СтруктурнаяЕдиница.ПометкаУдаления
|	И	ЦФОСтруктурныхЕдиниц.Организация = &Организация
|
|УПОРЯДОЧИТЬ ПО ЦФОСтруктурныхЕдиниц.СтруктурнаяЕдиница, ЦФОСтруктурныхЕдиниц.Период
|";	
	Запрос.УстановитьПараметр("Организация", БПР.Организация);
	тз = Запрос.Выполнить().Выгрузить();
	
	Ид = 1;
	
	Для Каждого Стр Из тз Цикл
		Стр.Ид = Ид;
		Ид = Ид + 1;
		Стр.СледИД = Ид;
	КонецЦикла;
	
	Запрос.Текст =
"ВЫБРАТЬ
|	т.Период,
|	т.СтруктурнаяЕдиница,
|	т.ЦФО,
|	т.ИД,
|	т.СледИД
|
|		ПОМЕСТИТЬ вт
|
|ИЗ &Таблица КАК т
|;
|
|///////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	вт.Период КАК ДатаС,
|	ЕСТЬNULL(вт1.Период, ДАТАВРЕМЯ(3099,12,31)) КАК ДатаДо,
|	вт.СтруктурнаяЕдиница,
|   вт.ЦФО
|
|		ПОМЕСТИТЬ втЦФОСтруктурныхЕдиницСИнтерваламиДат
|
|ИЗ вт
|	ЛЕВОЕ СОЕДИНЕНИЕ вт КАК вт1 ПО
|			вт1.ИД = вт.СледИД
|		И	вт1.СтруктурнаяЕдиница = вт.СтруктурнаяЕдиница
|;
|
|///////////////////////////////////////////////////////////
|УНИЧТОЖИТЬ вт
|";
	Запрос.УстановитьПараметр("Таблица", тз);
	Запрос.Выполнить();
	
	Запрос.Параметры.Очистить();
	
КонецПроцедуры

//+++АК sole 2018.08.15 ИП-00019363
Функция СформироватьТаблицуРезультат(БПР)
	
	Перем Запрос;
	
	Запрос = БПР.Запрос;
	Запрос.Текст =
"ВЫБРАТЬ
|   СтажиРаботыФизЛиц.ФизЛицоУИН,
|   СтажиРаботыФизЛиц.НаименованиеПодразделения,
|   СтажиРаботыФизЛиц.СтажНачалоПериода,
|   СтажиРаботыФизЛиц.СтажОкончаниеПериода,
|	СтажиРаботыФизЛиц.Уволенный,
|   СтажиРаботыФизЛиц.СтажВДнях,
|   СтажиРаботыФизЛиц.СтажЛет,
|   СтажиРаботыФизЛиц.СтажМесяцев,
|	СтажиРаботыФизЛиц.СтажДней,
|	СтажиРаботыФизЛиц.СтажПрописью,
|	СтажиРаботыФизЛиц.Должность
|
|		ПОМЕСТИТЬ втСтажиРаботыФизЛиц
|
|ИЗ &тзСтажиРаботыФизЛиц КАК СтажиРаботыФизЛиц
|;
|
|///////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	втЦФОСтруктурныхЕдиниц.ЦФО КАК Группа,
|	ФизическиеЛица.ПомощникТУ,
|	ФизическиеЛица.Ссылка КАК ФизЛицо,
|   СтруктурныеЕдиницы.Ссылка КАК СтруктурнаяЕдиница,
|   втСтажиРаботыФизЛиц.СтажНачалоПериода КАК ДатаПриёма,
|
|   ВЫБОР
|		КОГДА втСтажиРаботыФизЛиц.Уволенный ТОГДА втСтажиРаботыФизЛиц.СтажОкончаниеПериода
|		ИНАЧЕ ДАТАВРЕМЯ(1,1,1)			
| 	КОНЕЦ КАК ДатаУвольнения,
|
|   втСтажиРаботыФизЛиц.СтажЛет,
|   втСтажиРаботыФизЛиц.СтажМесяцев,
|	втСтажиРаботыФизЛиц.СтажДней,
|	втСтажиРаботыФизЛиц.СтажПрописью,
|	втСтажиРаботыФизЛиц.Должность
|
|ИЗ втСтажиРаботыФизЛиц
|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица ПО
|		   	ФизическиеЛица.УинВЗуп = втСтажиРаботыФизЛиц.ФизЛицоУИН
|
|   ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы ПО
|			НЕ СтруктурныеЕдиницы.ПометкаУдаления
|		И	СтруктурныеЕдиницы.Наименование = втСтажиРаботыФизЛиц.НаименованиеПодразделения
|
|    ЛЕВОЕ СОЕДИНЕНИЕ втЦФОСтруктурныхЕдиницСИнтерваламиДат КАК втЦФОСтруктурныхЕдиниц ПО
|		   	втЦФОСтруктурныхЕдиниц.СтруктурнаяЕдиница = СтруктурныеЕдиницы.Ссылка 
|		И	втЦФОСтруктурныхЕдиниц.ДатаС <= втСтажиРаботыФизЛиц.СтажОкончаниеПериода
|		И	втЦФОСтруктурныхЕдиниц.ДатаДо > втСтажиРаботыФизЛиц.СтажОкончаниеПериода
|
|";
	Запрос.УстановитьПараметр("тзСтажиРаботыФизЛиц", БПР.тзСтажиРаботыФизЛиц);

	
	тзРезультат = Запрос.Выполнить().Выгрузить();
	
	Возврат тзРезультат; 
КонецФункции


//+++АК sole 2018.08.14 ИП-00019363
Функция ПолучитьСоединениеСБазойЗУП()
	Попытка
		Коннектор = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Зуп() + ".COMConnector");
		СоединениеБазаЗУП = Коннектор.Connect(ПолныеПрава.ПолучитьСтрокуПодключения_Зуп());
		//СоединениеБазаЗУП = Коннектор.Connect("Srvr=""10.0.0.21""; Ref=""HRM""; Usr=""Обмен""; Pwd=""123321""");
	Исключение
		Сообщить("Ошибка подключения к базе ЗУП. " + ОписаниеОшибки());
		Возврат Неопределено;	
	КонецПопытки;
	
	Возврат СоединениеБазаЗУП;
КонецФункции

//+++АК sole 2018.08.14 ИП-00019363
Функция ПолучитьПараметрПользователя(ИмяПараметра)
	
	Параметр = ЭтотОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
	ПараметрПользователя = ЭтотОбъект.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(Параметр.ИдентификаторПользовательскойНастройки);
	
	Возврат ПараметрПользователя;
	
КонецФункции
