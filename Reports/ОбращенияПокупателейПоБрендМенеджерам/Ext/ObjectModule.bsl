
////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Формирует письма с обращениями по типу жалоб и запустает рассылку почты по брендменеджерам 
//
// Параметры:
//  СтруктураПараметров  - <Тип.Структура> - Структура параметров
//       Состав структуры:
//          Период    - Стандартный период
//          ТипЖалобы - <Тип.СправочникСсылка.ТипыЖалоб> - Тип жалобы 
//
Процедура ВыполнитьРассылкуОбращенийПоТипуЖалобыБрендМенеджерам(СтруктураПараметров) Экспорт

	//Получение массива бренд менеджеров для отборов
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	КомпоновщикНастроекВариант = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроекВариант.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	КомпоновщикНастроекВариант.ЗагрузитьНастройки(СхемаКомпоновкиДанных.ВариантыНастроек.БрендМенеджеры.Настройки);
	
	КомпоновщикНастроекВариант.Настройки.ПараметрыДанных.Элементы.Найти("Период").Значение     = СтруктураПараметров.Период;
	КомпоновщикНастроекВариант.Настройки.ПараметрыДанных.Элементы.Найти("ТипЖалобы").Значение  = СтруктураПараметров.ТипЖалобы;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки   = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроекВариант.Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений")); 
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных; 
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки); 
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений; 
	
	//Таблица бренд менеджеров 
	ТаблицаЗначений = ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	//Формирование структуры письма
	СтруктураПисьма = Новый Структура();
	
	СтруктураПисьма.Вставить("Отправитель",    Документы.ИзменениеЗакупочныхЦен.ПолучитьУчетнуюЗаписьДляРассылки("no-reply@vkusvill.ru")); 
	СтруктураПисьма.Вставить("Получатели",     Неопределено);
	СтруктураПисьма.Вставить("Тема", СтрЗаменить(СтрЗаменить("Обращения покупателей (ТипЖалобы) за Период", 
												"ТипЖалобы", СтруктураПараметров.ТипЖалобы),
												"Период", Формат(СтруктураПараметров.Период.ДатаНачала, "ДФ='ММММ гггг'"))); 
	СтруктураПисьма.Вставить("Текст", "");
	
	//Формирование текста писем для отправки  
	Для каждого Строка Из ТаблицаЗначений Цикл
		
		Если НЕ ЗначениеЗаполнено(Строка.email) Тогда
			Продолжить;
		КонецЕсли;
		
		//Получение тела письма по брендменеджерам
		СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
		
		КомпоновщикНастроекВариант = Новый КомпоновщикНастроекКомпоновкиДанных;
		КомпоновщикНастроекВариант.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
		КомпоновщикНастроекВариант.ЗагрузитьНастройки(СхемаКомпоновкиДанных.ВариантыНастроек.Основной.Настройки);
		
		КомпоновщикНастроекВариант.Настройки.ПараметрыДанных.Элементы.Найти("Период").Значение     = СтруктураПараметров.Период;
		КомпоновщикНастроекВариант.Настройки.ПараметрыДанных.Элементы.Найти("ТипЖалобы").Значение  = СтруктураПараметров.ТипЖалобы;
		
		ЭлементОтбора = КомпоновщикНастроекВариант.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ПродактМенеджер"); 
		ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно; 
		ЭлементОтбора.ПравоеЗначение = Строка.ПродактМенеджер; 
		ЭлементОтбора.Использование  = Истина; 
		
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		МакетКомпоновки   = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроекВариант.Настройки,,,Тип("ГенераторМакетаКомпоновкиДанных")); 
		
		ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных; 
		ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки); 
		
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент; 
		
		//Табличный документ для отправки
		ТабДокумент  = ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
		
		//Заполнение получателей
		СтруктураПисьма.Получатели = Строка.email + "; mika@automacon.ru";//••
		
		//Запись в HTML файл (заполнение тела письма)
		МассивДляУдаления = Новый Массив();
		ИмяФайла = ПолучитьИмяВременногоФайла();
		МассивДляУдаления.Добавить(ИмяФайла);
		
		ТабДокумент.Записать(ИмяФайла, ТипФайлаТабличногоДокумента.HTML);
		
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.Прочитать(ИмяФайла);
		
		ТекстHTML = ТекстовыйДокумент.ПолучитьТекст();
		////••
		//УдалитьТекстТаблицаВРазработке = "<BR>ВНИМАНИЕ, ЭТО СТАРТОВАЯ РАССЫЛКА!!! (ИП-00018996)
		//                                 | Регламент выполнения рассылки: Ежемесячно, 1 числа месяца в 15:11 (с данными за ""прошлый месяц"")<BR>";
		//ТекстHTML = СтрЗаменить(ТекстHTML, "</BODY>", УдалитьТекстТаблицаВРазработке + Символы.ПС + "</BODY>");  
		////••
		СтруктураПисьма.Текст = ТекстHTML; 	
		
		//Удаление временных файлов
		Попытка
			УдалитьФайлы(ИмяФайла);
		Исключение
		КонецПопытки;
		
		//Отправка письма
		Документы.ИзменениеЗакупочныхЦен.ОтправитьПисьмо(СтруктураПисьма);
		
	КонецЦикла;

КонецПроцедуры // ВыполнитьРассылкуОбращенийПоТипуЖалобыБрендМенеджерам()
