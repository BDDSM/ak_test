Функция ПолучитьСкладТекущегоПользователя()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ДоступностьСкладов.Склад.Владелец КАК Склад
	|ИЗ
	|	Справочник.ГруппыПользователей.ДоступностьСкладов КАК ДоступностьСкладов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыПользователей.ПользователиГруппы КАК ПользователиГруппы
	|		ПО (ПользователиГруппы.Ссылка = ДоступностьСкладов.Ссылка)
	|			И (ПользователиГруппы.Пользователь = &Пользователь)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Склад;
	КонецЕсли;
	
	Возврат Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Кавказский_1"); // Кавказский_1 - по умолчанию
	
КонецФункции

&НаСервере
Процедура СформироватьГрафикВодителейНаСервере()
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Макет = Обработки.РаспределениеТоваровПоТорговымТочкам.ПолучитьМакет("ГрафикВодителей");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВложенныйЗапрос.Склад,
		|	ВложенныйЗапрос.Номенклатура
		|ПОМЕСТИТЬ ТоварыНаСкладе
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТоварыНаСкладахОстатки.Склад КАК Склад,
		|		ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура
		|	ИЗ
		|		РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				&ДатаРаспределения,
		|				Склад.Владелец = &СкладВладелец
		|					И (&Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПУстаяСсылка)
		|						ИЛИ &Склад = Склад)) КАК ТоварыНаСкладахОстатки
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТоварыНаСкладахОстатки.Номенклатура,
		|		ТоварыНаСкладахОстатки.Склад
		|	
		|	ИМЕЮЩИЕ
		|		СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) > 0
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДоступностьТоваровНаСкладах.Склад,
		|		ДоступностьТоваровНаСкладах.Номенклатура
		|	ИЗ
		|		РегистрСведений.ДоступностьТоваровНаСкладах КАК ДоступностьТоваровНаСкладах
		|	ГДЕ
		|		ДоступностьТоваровНаСкладах.СтруктурнаяЕдиница = &СкладВладелец
		|		И (ДоступностьТоваровНаСкладах.Склад = &Склад
		|				ИЛИ &Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))) КАК ВложенныйЗапрос
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВЫБОР ЕСТЬNULL(КоличествоВКоробкеСрезПоследних.Количество, 0)
		|			КОГДА 0
		|				ТОГДА 0
		|			ИНАЧЕ ВЫРАЗИТЬ((Товары.КоличествоУРЗ - 0.5) / КоличествоВКоробкеСрезПоследних.Количество + 0.5 КАК ЧИСЛО(15, 0))
		|		КОНЕЦ) КАК КоличествоКоробок,
		|	Товары.Склад КАК Склад,
		|	Товары.Получатель,
		|	Маршруты.Ссылка КАК Маршрут,
		|	Маршруты.Ссылка.ПорядокСортировки КАК ПорядокСортировки,
		|	Маршруты.ТорговаяТочка.Адрес КАК Адрес,
		|	Маршруты.ТорговаяТочка.НомерТочки КАК НомерТочки,
		|	Маршруты.Ссылка.Представление КАК МаршрутПредставление
		|ИЗ
		|	(ВЫБРАТЬ
		|		ОстаткиРаспределенныеПоТТ.Номенклатура КАК Номенклатура,
		|		ОстаткиРаспределенныеПоТТ.Характеристика КАК Характеристика,
		|		ОстаткиРаспределенныеПоТТ.Количество КАК КоличествоУРЗ,
		|		ТоварыНаСкладе.Склад КАК Склад,
		|		ОстаткиРаспределенныеПоТТ.ТорговаяТочка КАК Получатель
		|	ИЗ
		|		РегистрСведений.ОстаткиРаспределенныеПоТТ КАК ОстаткиРаспределенныеПоТТ
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыНаСкладе КАК ТоварыНаСкладе
		|			ПО ОстаткиРаспределенныеПоТТ.Номенклатура = ТоварыНаСкладе.Номенклатура
		|	ГДЕ
		|		НАЧАЛОПЕРИОДА(ОстаткиРаспределенныеПоТТ.ДатаРаспределения, ДЕНЬ) = &ДатаРаспределения
		|		И ОстаткиРаспределенныеПоТТ.Количество > 0
		|		И &ВсеТТ
		|		И ОстаткиРаспределенныеПоТТ.Номенклатура В
		|				(ВЫБРАТЬ
		|					Т.Номенклатура
		|				ИЗ
		|					ТоварыНаСкладе КАК Т)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ОстаткиРаспределенныеПоТТ.Номенклатура,
		|		ОстаткиРаспределенныеПоТТ.Характеристика,
		|		ОстаткиРаспределенныеПоТТ.Количество,
		|		ТоварыНаСкладе.Склад,
		|		ОстаткиРаспределенныеПоТТ.ТорговаяТочка
		|	ИЗ
		|		РегистрСведений.ОстаткиРаспределенныеПоТТ КАК ОстаткиРаспределенныеПоТТ
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТоварыНаСкладе КАК ТоварыНаСкладе
		|			ПО ОстаткиРаспределенныеПоТТ.Номенклатура = ТоварыНаСкладе.Номенклатура
		|	ГДЕ
		|		НАЧАЛОПЕРИОДА(ОстаткиРаспределенныеПоТТ.ДатаРаспределения, ДЕНЬ) = &ДатаРаспределения
		|		И ОстаткиРаспределенныеПоТТ.Количество > 0
		|		И &ВсеТТ
		|		И ОстаткиРаспределенныеПоТТ.Номенклатура В
		|				(ВЫБРАТЬ
		|					Т.Номенклатура
		|				ИЗ
		|					ТоварыНаСкладе КАК Т)) КАК Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КоличествоВКоробке.СрезПоследних(&ДатаРаспределения, СтруктурнаяЕдиница = &СкладВладелец) КАК КоличествоВКоробкеСрезПоследних
		|		ПО Товары.Номенклатура = КоличествоВКоробкеСрезПоследних.Номенклатура
		|			И Товары.Характеристика = КоличествоВКоробкеСрезПоследних.Характеристика
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			МаршрутыСклады.Склад КАК Склад,
		|			МаршрутыТорговыеТочки.СтруктурнаяЕдиница КАК ТорговаяТочка,
		|			МаршрутыСклады.Ссылка КАК Ссылка
		|		ИЗ
		|			Справочник.Маршруты.ТорговыеТочки КАК МаршрутыТорговыеТочки
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Маршруты.Склады КАК МаршрутыСклады
		|				ПО МаршрутыТорговыеТочки.Ссылка = МаршрутыСклады.Ссылка
		|		ГДЕ
		|			(&Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|					ИЛИ МаршрутыСклады.Склад = &Склад)
		|			И МаршрутыСклады.Склад.Владелец = &СкладВладелец) КАК Маршруты
		|		ПО Товары.Получатель = Маршруты.ТорговаяТочка
		|
		|СГРУППИРОВАТЬ ПО
		|	Товары.Получатель,
		|	Маршруты.Ссылка.ПорядокСортировки,
		|	Маршруты.Ссылка,
		|	Товары.Склад,
		|	Маршруты.ТорговаяТочка.Адрес,
		|	Маршруты.ТорговаяТочка.НомерТочки,
		|	Маршруты.Ссылка.Представление
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПорядокСортировки
		|ИТОГИ
		|	СУММА(КоличествоКоробок)
		|ПО
		|	ОБЩИЕ,
		|	Склад,
		|	Маршрут";

	Запрос.УстановитьПараметр("ДатаРаспределения", НачалоДня(Отчет.ДатаРаспределения));
	Запрос.УстановитьПараметр("Склад", СкладХранения);
	Запрос.УстановитьПараметр("СкладВладелец",Отчет.Склад);
	Запрос.УстановитьПараметр("ВсеТТ",Истина);

	Результат = Запрос.Выполнить();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьСклад = Макет.ПолучитьОбласть("Склад");
	ОбластьМаршрут = Макет.ПолучитьОбласть("Маршрут");
	ОбластьДетальныхЗаписей = Макет.ПолучитьОбласть("Детали");
	ОбластьПодвал = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ОбластьПодвалИтоги = Макет.ПолучитьОбласть("Подвал");
	

	ГрафикВодителей.Очистить();

	ВыборкаИтоги = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаИтоги.Следующий();
	ОбластьПодвалИтоги.Параметры.Заполнить(ВыборкаИтоги);
	ВыборкаСклад = ВыборкаИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	Пока ВыборкаСклад.Следующий() Цикл
		ОбластьСклад.Параметры.Заполнить(ВыборкаСклад);
		ОбластьПодвал.Параметры.Заполнить(ВыборкаСклад);
		ГрафикВодителей.Вывести(ОбластьСклад);

		ВыборкаМаршрут = ВыборкаСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		НПП=0;

		Пока ВыборкаМаршрут.Следующий() Цикл
			ОбластьМаршрут.Параметры.Заполнить(ВыборкаМаршрут);
			ГрафикВодителей.Вывести(ОбластьМаршрут);

			ВыборкаДетальныеЗаписи = ВыборкаМаршрут.Выбрать();
			НПП=НПП+1;
			ВывестиНомер = Истина;
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ОбластьДетальныхЗаписей.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
				Если ВывестиНомер Тогда
					ОбластьДетальныхЗаписей.Параметры.НПП=НПП;
					ВывестиНомер = Ложь
				Иначе
					ОбластьДетальныхЗаписей.Параметры.НПП="";
				КонецЕсли;
					
				ГрафикВодителей.Вывести(ОбластьДетальныхЗаписей);
			КонецЦикла;
		КонецЦикла;
		ГрафикВодителей.Вывести(ОбластьПодвал);
	КонецЦикла;
	
	ГрафикВодителей.Вывести(ОбластьПодвалИтоги);


	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьГрафикВодителейНаСервере()
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Отчет.Склад = ПолучитьСкладТекущегоПользователя();
	Отчет.ДатаРаспределения = ТекущаяДата();
КонецПроцедуры
&НаСервере
Процедура ОтправитьПисьмаНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АК_ГруппыРассылки.ФизЛицо,
	|	АК_ГруппыРассылки.Емейл КАК АдресПочты
	|ИЗ
	|	РегистрСведений.АК_ГруппыРассылки КАК АК_ГруппыРассылки
	|ГДЕ
	|	АК_ГруппыРассылки.Группа = ЗНАЧЕНИЕ(Справочник.АК_ГРуппыРассылки.ГрафикВодителей)";
	
	Получатели = Запрос.Выполнить().Выбрать();
	
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
	Если УчетнаяЗапись = Неопределено Тогда
		УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоРеквизиту("АдресЭлектроннойПочты","no-reply@vkusvill.ru");
	КонецЕсли;
	
	Письмо = Новый ИнтернетПочтовоеСообщение;
	
	Письмо.Тема = "График развоза на "+Формат(Отчет.ДатаРаспределения, "ДФ=dd.MM.yyyy");
	
	Письмо.Отправитель 		= УчетнаяЗапись.Логин;
	Письмо.ИмяОтправителя 	= УчетнаяЗапись.Логин;
	
	СтрПолучатели = "";
	
	Пока Получатели.Следующий()Цикл
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес=Получатели.АдресПочты;
		Если СокрЛП(Получатель.Адрес)="" Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не заполнен адрес для "+Строка(Получатели.ФизЛицо)+". Уведомление не отправлено";
			Сообщение.Сообщить();
		Иначе
			СтрПолучатели = СтрПолучатели+Получатель.Адрес+"; "
		КонецЕсли;
	КонецЦикла;
	
	Если СтрПолучатели = "" Тогда
		Возврат
	КонецЕсли;
	
	ТекстПисьма = Письмо.Тексты.Добавить();
	ТекстПисьма.ТипТекста 	= ТипТекстаПочтовогоСообщения.HTML;
	
	ИмяВремФайла = ПолучитьИмяВременногоФайла("HTML");
	ГрафикВодителей.Записать(ИмяВремФайла,ТипФайлаТабличногоДокумента.HTML3);
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ИмяВремФайла);
	ТекстХТМЛ = Текст.ПолучитьТекст();
	ТекстПисьма.Текст = ТекстХТМЛ;
	
	Почта = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Почта.Подключиться(Профиль);	
	Почта.Послать(Письмо);
	Почта.Отключиться();
	
	
КонецПроцедуры // ОтправитьПисьмаНаСервере()

&НаКлиенте
Процедура ОтправитьГрафик(Команда)
	ГрафикВодителей.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	Если Вопрос("Отправить отчет на эл.почту?",РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да Тогда
		ОтправитьПисьмаНаСервере()
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокДляРассылки(Команда)
	Группы = Новый Массив;
	Группы.Добавить(ПредопределенноеЗначение("Справочник.АК_ГруппыРассылки.ГрафикВодителей"));
	П = Новый Структура("Группы",Группы);
	ОткрытьФорму("РегистрСведений.АК_ГруппыРассылки.Форма.ФормаСпискаУправляемая",П,ЭтаФорма);

КонецПроцедуры

