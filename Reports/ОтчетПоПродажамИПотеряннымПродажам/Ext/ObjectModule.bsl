
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	// служебные переменные
	
	ДатаНачала 		= '00010101';
	ДатаОкончания 	= '00010101';
	мРасчетчик 		= Справочники.Расчетчики.ПустаяСсылка();
	мОсновнойСклад	= Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	ТипСправочникТТ = Тип("СправочникСсылка.СтруктурныеЕдиницы");
	
	МассивТТВкл		= Новый Массив;
	МассивТТИскл 	= Новый Массив;
	мПолеТорговаяТочка = Новый ПолеКомпоновкиДанных("ТорговаяТочка");
	
	мЭлементыНастроек = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы;
	Для Каждого ПользПоле Из мЭлементыНастроек Цикл
		Если ТипЗнч(ПользПоле) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
			Если Строка(ПользПоле.Параметр) = "Период" Тогда
				ДатаНачала 		= ПользПоле.Значение.ДатаНачала;
				ДатаОкончания 	= КонецДня(ПользПоле.Значение.ДатаОкончания);
			ИначеЕсли Строка(ПользПоле.Параметр) = "Расчетчик" Тогда
				мРасчетчик		= ПользПоле.Значение;
			ИначеЕсли Строка(ПользПоле.Параметр) = "ОсновнойСклад" Тогда
				мОсновнойСклад	= ПользПоле.Значение;
			КонецЕсли;
		ИначеЕсли ТипЗнч(ПользПоле) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			НайденнаяНастройка = Неопределено;
			Для Каждого ЭлементОтбораНастройки Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
				Если ЭлементОтбораНастройки.ИдентификаторПользовательскойНастройки = ПользПоле.ИдентификаторПользовательскойНастройки Тогда
					НайденнаяНастройка = ЭлементОтбораНастройки;
					Прервать;
				КонецЕсли;	
			КонецЦикла;
			Если НайденнаяНастройка <> Неопределено Тогда
				Если Строка(НайденнаяНастройка.ЛевоеЗначение) = "ТорговаяТочка" Тогда
					Если ПользПоле.Использование = Истина Тогда
						Если ПользПоле.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
							МассивТТВкл.Добавить(ПользПоле.ПравоеЗначение);
						ИначеЕсли ПользПоле.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно Тогда
							МассивТТИскл.Добавить(ПользПоле.ПравоеЗначение);
						ИначеЕсли ПользПоле.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда
							Для Каждого ЭлементСписка Из ПользПоле.ПравоеЗначение Цикл
								МассивТТВкл.Добавить(ЭлементСписка.Значение);
							КонецЦикла;
						ИначеЕсли ПользПоле.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке Тогда
							Если ТипЗнч(ЭлементСписка.Значение) = ТипСправочникТТ Тогда
								МассивТТИскл.Добавить(ЭлементСписка.Значение);
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				ИначеЕсли Строка(НайденнаяНастройка.ЛевоеЗначение) = "ТорговаяТочка.ОсновнойСклад" Тогда
					Если ПользПоле.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
						мОсновнойСклад	= ПользПоле.ПравоеЗначение;
					КонецЕсли;	
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
	
	МассивПолей = Новый Массив;
	Если ВыводитьДегустациюОбеды Тогда
		МассивПолей.Добавить("Количество_пот");
		МассивПолей.Добавить("Количество_с");
	Иначе	
		МассивПолей.Добавить("Сумма");
		Если НЕ ЭтотОбъект.ВыводитьПродажиБезСкидок Тогда
			МассивПолей.Добавить("Количество_пр");
		КонецЕсли;
		Если НЕ ЭтотОбъект.ВыводитьПродажиСоСкидками Тогда
			МассивПолей.Добавить("Количество_с");
		КонецЕсли;
		Если НЕ ЭтотОбъект.ВыводитьПотерянныеПродажи Тогда
			МассивПолей.Добавить("Количество_пот");
		КонецЕсли;
	КонецЕсли;	
	
	Для Каждого ЭлементСтруктуры Из КомпоновщикНастроек.Настройки.Структура Цикл
		Если НЕ ТипЗнч(ЭлементСтруктуры) = Тип("ТаблицаКомпоновкиДанных") Тогда
			Продолжить;
		КонецЕсли;
		Для Каждого ТекГруппировкаКолонок Из ЭлементСтруктуры.Колонки Цикл
			ВыбранныеПоля = ТекГруппировкаКолонок.Выбор.Элементы;
			Для Каждого ВыбранноеПоле Из ВыбранныеПоля Цикл
				Если ТипЗнч(ВыбранноеПоле) = Тип("ВыбранноеПолеКомпоновкиДанных") Тогда
					ВыбранноеПоле.Использование = (МассивПолей.Найти(Строка(ВыбранноеПоле.Поле)) = Неопределено);
				КонецЕсли;        
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	
	//////////////////////////////
	// Получение данных и вывод //
	//////////////////////////////
	
	Если ВыводитьДегустациюОбеды Тогда
		ТаблицаДанных = Отчеты.ОтчетПоПродажамИПотеряннымПродажам.ПолучитьТаблицуДегустаций(ДатаНачала, ДатаОкончания, МассивТТВкл, МассивТТИскл);
	Иначе														
		ТаблицаДанных = Отчеты.ОтчетПоПродажамИПотеряннымПродажам.ПолучитьТаблицуПродаж(ДатаНачала, ДатаОкончания,
															мРасчетчик, мОсновнойСклад, МассивТТВкл, МассивТТИскл,
															ЭтотОбъект.ВыводитьТТМиниТТПусто, ЭтотОбъект.ВыводитьТолькоВВ, 
															ЭтотОбъект.ВыводитьТолькоПерекрестки, ЭтотОбъект.ВыводитьТолькоПятерочки);
	КонецЕсли;	
		
	СтандартнаяОбработка = Ложь;
	
	//+++АК MIND 2017.12.07 дорабатываем отчет для вывода сумм по дегустации
	Если ТаблицаДанных.Колонки.Найти("Сумма") = Неопределено Тогда
		ТаблицаДанных.Колонки.Добавить("Сумма");
	КонецЕсли;
	
	Если ТаблицаДанных.Колонки.Найти("Количество_пр") = Неопределено Тогда
		ТаблицаДанных.Колонки.Добавить("Количество_пр");
	КонецЕсли;
	
	Если ТаблицаДанных.Колонки.Найти("Количество_с") = Неопределено Тогда
		ТаблицаДанных.Колонки.Добавить("Количество_с");
	КонецЕсли;
	
	Если ТаблицаДанных.Колонки.Найти("Количество_пот") = Неопределено Тогда
		ТаблицаДанных.Колонки.Добавить("Количество_пот");
	КонецЕсли;
	//---АК MIND 
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ДанныеДляФормирования", ТаблицаДанных);
	
	//Макет компоновки 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	
	//Компоновка данных
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	//Вывод результата
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ВыводитьДегустациюОбеды Тогда
		Если НЕ ЭтотОбъект.ВыводитьПродажиБезСкидок
				И НЕ ЭтотОбъект.ВыводитьПродажиСоСкидками
				И НЕ ЭтотОбъект.ВыводитьПотерянныеПродажи Тогда			
			Сообщить("Не выбран ни один показатель отчета!");	
			Отказ = Истина;
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры
