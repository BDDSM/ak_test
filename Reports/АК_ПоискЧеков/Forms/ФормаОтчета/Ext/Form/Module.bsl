

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Перем ВыполненноеДействие;
	Перем ПараметрВыполненногоДействия;
	
	СтандартнаяОбработка = Ложь;
	ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемы));
	
	ИД = ПроверитьРасшифровкуНаСервере(Расшифровка);
	
	Если ЗначениеЗаполнено(ИД) Тогда
		ТабДок = ВернутьПечатьЧекаПрямойЗапрос(ИД);
		Если НЕ ТабДок = Неопределено Тогда
			ТабДок.Показать();
		КонецЕсли;
	Иначе
		//Отключм расшифровку типовую вообще - заказчику не нравится
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	СКД = ОтчетОбъект.СхемаКомпоновкиДанных;
	URLСхемы = ПоместитьВоВременноеХранилище(СКД, УникальныйИдентификатор);
КонецПроцедуры

&НаСервере
Функция ПроверитьРасшифровкуНаСервере(Расшифровка)
	
	РезРасшифровки = ПолучитьИзВременногоХранилища(ДанныеРасшифровки).Элементы.Получить(Расшифровка);
	
	Если ТипЗНЧ(РезРасшифровки) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
		Поля = РезРасшифровки.ПолучитьПоля();
		Для Каждого мПоле Из Поля Цикл
			Если мПоле.Поле = "Чек" Тогда
				Возврат мПоле.Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ВернутьПечатьЧека(ИДЧека)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	dbo_CheckLine.CashCheckLineNo КАК НомерСтроки,
	                      |	dbo_Tovari.Name_tov КАК Номенклатура,
	                      |	dbo_CheckLine.Quantity КАК Количество,
	                      |	ВЫБОР
	                      |		КОГДА dbo_CheckLine.Quantity = 0
	                      |			ТОГДА dbo_CheckLine.BaseSum
	                      |		ИНАЧЕ dbo_CheckLine.BaseSum / dbo_CheckLine.Quantity
	                      |	КОНЕЦ КАК Цена,
	                      |	dbo_CheckLine.BaseSum КАК Стоимость,
	                      |	dbo_Checks.CashCheckNo КАК Номер,
	                      |	dbo_Checks.CloseDate КАК Дата,
	                      |	dbo_Checks.BONUSCARD КАК Карта
	                      |ИЗ
	                      |	ВнешнийИсточникДанных.SMS_Union.Таблица.dbo_CheckLine КАК dbo_CheckLine
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВнешнийИсточникДанных.SMS_Union.Таблица.dbo_Tovari КАК dbo_Tovari
	                      |		ПО dbo_CheckLine.id_tov_cl = dbo_Tovari.id_tov
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВнешнийИсточникДанных.SMS_Union.Таблица.dbo_Checks КАК dbo_Checks
	                      |		ПО dbo_CheckLine.CheckUID = dbo_Checks.CheckUID
	                      |ГДЕ
	                      |	dbo_CheckLine.CheckUID = &ИдЧека
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	НомерСтроки
	                      |ИТОГИ
	                      |	СУММА(Стоимость),
	                      |	МАКСИМУМ(Номер),
	                      |	МАКСИМУМ(Дата),
	                      |	МАКСИМУМ(Карта)
	                      |ПО
	                      |	ОБЩИЕ");
	Запрос.УстановитьПараметр("ИДЧека", ИДЧека);
	
	ВыборкаШапка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаШапка.Следующий() Тогда
		
		ТабДок = Новый ТабличныйДокумент;
		Макет = РеквизитФормыВЗначение("Отчет").ПолучитьМакет("ДанныеЧека");
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заполнить(ВыборкаШапка);
		Область.Параметры.ДатаЧека = Формат(ВыборкаШапка.Дата, "ДФ=dd.MM.yyyy");
		Область.Параметры.СуммаЧека = Формат(ВыборкаШапка.Стоимость, "ЧЦ=15; ЧДЦ=2");
		ТабДок.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("Детали");
		
		Выб = ВыборкаШапка.Выбрать(ОбходРезультатаЗапроса.Прямой);
		Пока Выб.Следующий() Цикл
			Область.Параметры.Заполнить(Выб);
			ТабДок.Вывести(Область);
		КонецЦикла;
		
		ТабДок.ОтображатьГруппировки = Ложь;
		ТабДок.ОтображатьЗаголовки = Ложь;
		ТабДок.ОтображатьСетку = Ложь;
		ТабДок.ИмяПараметровПечати = "АиК_ПростоЧекХХХ";
		ТабДок.ТолькоПросмотр = Истина;
		
		Возврат ТабДок;
		
	КонецЕсли;
КонецФункции

&НаСервере
Функция ВернутьПечатьЧекаПрямойЗапрос(ИДЧека)
	//
	ADO = ВнешниеДанные.ПолучитьADOСоединение();
	ТекстЗапроса =
		"select CashCheckNo NCh
		|,C.BaseSum ,C.OpenDate
		|,L.BaseSum LSum
		|,L.CashCheckLineNo ln
		|,L.id_tov_cl
		|,BONUSCARD 
		|,N.Name_tov Tovar
		|,OpenDate
		|,CashId
		|,L.quantity qu, L.BasePrice price
		|from
		|	(select CashCheckNo, CheckUID,CloseDate,BaseSum,OpenDate,BONUSCARD,CashId
		|	from SMS_UNION..Checks (nolock)
		|	where CheckUID=&Check)C
		|	inner join Sms_Union..Checkline L (nolock)
		|	on C.CheckUID=L.CheckUID
		|	left join Sms_Union..Tovari N (nolock)
		|	on L.id_tov_cl = N.id_tov
		|order by L.CashCheckLineNo";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&Check", ВнешниеДанные.ФорматПоля(ИДЧека));
	
	rs = ADO.Execute(ТекстЗапроса);
	Попытка
		rs.MoveFirst();
		
		//-----------------------
		ТабДок = Новый ТабличныйДокумент;
		Макет = РеквизитФормыВЗначение("Отчет").ПолучитьМакет("ДанныеЧека");
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Номер = rs.Fields("NCh").Value;
		Область.Параметры.Карта = rs.Fields("BONUSCARD").Value;
		Область.Параметры.ДатаЧека = Формат(rs.Fields("OpenDate").Value, "ДФ=dd.MM.yyyy");
		Область.Параметры.СуммаЧека = Формат(rs.Fields("BaseSum").Value, "ЧЦ=15; ЧДЦ=2");
		ТабДок.Вывести(Область);
		
		Область = Макет.ПолучитьОбласть("Детали");
		
		Пока Не rs.EOF() Цикл
			Область.Параметры.НомерСтроки = rs.Fields("ln").Value;
			Область.Параметры.Номенклатура = rs.Fields("Tovar").Value;
			Область.Параметры.Количество = rs.Fields("qu").Value;
			Область.Параметры.Цена = rs.Fields("price").Value;
			Область.Параметры.Стоимость = rs.Fields("LSum").Value;
			ТабДок.Вывести(Область);
			rs.MoveNext();
		КонецЦикла;
		
		ТабДок.ОтображатьГруппировки = Ложь;
		ТабДок.ОтображатьЗаголовки = Ложь;
		ТабДок.ОтображатьСетку = Ложь;
		ТабДок.ИмяПараметровПечати = "АиК_ПростоЧекХХХ";
		ТабДок.ТолькоПросмотр = Истина;
		
		Возврат ТабДок;
	Исключение
		Сообщить("Не удалось прочитать данные о чеке");
		Возврат Неопределено
	КонецПопытки;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Для Каждого ЭлементПользовательскихНастроек Из Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ЭлементПользовательскихНастроек.Параметр = Новый ПараметрКомпоновкиДанных("Магазин") Тогда
			ЭлементПользовательскихНастроек.Использование = Истина;
			ЭлементПользовательскихНастроек.Значение = ПолныеПрава.ПолучитьТорговуюТочкуИзПараметровСеанса();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
