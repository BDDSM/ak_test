

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастрокаПоУмолчанию        = КомпоновщикНастроек.ПолучитьНастройки();
	
	// Получить настройки схемы компоновки данных
	
	Настройки = КомпоновщикНастроек.Настройки;
	ПарИнтервал = Новый ПараметрКомпоновкиДанных("Интервал");
	ПарМагазин =  Новый ПараметрКомпоновкиДанных("Магазин");
	ПарНоменклатура =  Новый ПараметрКомпоновкиДанных("Номенклатура");
	ПарКарта =  Новый ПараметрКомпоновкиДанных("Карта");
	Магазин = Неопределено;
	Номенклатура = Неопределено;
	Для Каждого ЭлементПользовательскихНастроек Из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ЭлементПользовательскихНастроек.Параметр = ПарИнтервал Тогда
			Если ЭлементПользовательскихНастроек.Использование Тогда 
				Интервал = ЭлементПользовательскихНастроек;
			КонецЕсли;
		ИначеЕсли ЭлементПользовательскихНастроек.Параметр = ПарМагазин И ЭлементПользовательскихНастроек.Использование Тогда
			Если ЭлементПользовательскихНастроек.Использование Тогда 
				Магазин = ЭлементПользовательскихНастроек.Значение;
			КонецЕсли;
		ИначеЕсли ЭлементПользовательскихНастроек.Параметр = ПарНоменклатура И ЭлементПользовательскихНастроек.Использование Тогда
			Если ЭлементПользовательскихНастроек.Использование Тогда 
				Номенклатура  = ЭлементПользовательскихНастроек.Значение;
			КонецЕсли;
		ИначеЕсли ЭлементПользовательскихНастроек.Параметр = ПарКарта Тогда
			Если ЭлементПользовательскихНастроек.Использование Тогда 
				Карта = ЭлементПользовательскихНастроек.Значение;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	
	ТаблицаЧеков = ВернутьДанныеПрямойЗапрос(Интервал.Значение.ДатаНачала, Интервал.Значение.ДатаОкончания, Номенклатура, Магазин, Карта);
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТаблицаЧеков", ТаблицаЧеков);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки   = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	// создадим и инициализируем процессор компоновки данных
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);

КонецПроцедуры

Функция ВернутьДанныеПрямойЗапрос(Начало, Окончание, Номенклатура = Неопределено, Магазин = Неопределено, Карта = Неопределено)
	//
	ADO = ВнешниеДанные.ПолучитьADOСоединение();
	ТекстЗапроса =
		"select 
		|C.CashCheckNo Number
		|,C.CheckUID UID
		|,C.CloseDate Date
		|,L.BaseSum Sum
		|,L.id_tov_cl
		|,L.id_tt_cl
		|,C.BONUSCARD 
		|,L.quantity QTY
		|,L.BasePrice Price
		|from
		|	(select CashCheckNo, CheckUID, CloseDate, BONUSCARD
		|	from SMS_UNION..Checks (nolock)
		|	where CloseDate >= &Begin and CloseDate <= &End)C
		|	inner join Sms_Union..Checkline L (nolock)
		|	on C.CheckUID=L.CheckUID
		|&AddCond
		|order by C.CloseDate, C.CashCheckNo, L.CashCheckLineNo";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&Begin", ВнешниеДанные.ФорматПоля(Начало));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&End", ВнешниеДанные.ФорматПоля(Окончание));
	
	Если ЗначениеЗаполнено(Номенклатура) ИЛИ ЗначениеЗаполнено(Магазин) ИЛИ ЗначениеЗаполнено(Карта) Тогда
		Усл = "WHERE ";
		Усл = Усл + ?(ЗначениеЗаполнено(Номенклатура), ?(Усл = "WHERE ", "", " AND ") + " L.id_tov_cl = " + ВнешниеДанные.ФорматПоля(Номенклатура.id_tov), "");
		Усл = Усл + ?(ЗначениеЗаполнено(Магазин), ?(Усл = "WHERE ", "", " AND ") + " L.id_tt_cl = " + ВнешниеДанные.ФорматПоля(Магазин.id_TT), "");
		Усл = Усл + ?(ЗначениеЗаполнено(Карта), ?(Усл = "WHERE ", "", " AND ") + " C.BONUSCARD = " + ВнешниеДанные.ФорматПоля(Карта), "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&AddCond", Усл);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&AddCond", "");
	КонецЕсли;
	
	rs = ADO.Execute(ТекстЗапроса);
	
	ТЗ = ВнешниеДанные.ПреобразоватьРезультатВТаблицуЗначений(rs);
	
	Если ТЗ.Колонки.Количество() = 0 Тогда
		//Запомни! Никогда не пользуйся чужими функциями! Пиши всё сам!
		
		МатчТип = Новый Соответствие;
		МатчТип.Вставить(3, Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(20,0)));
		МатчТип.Вставить(6, Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(20,5)));
		МатчТип.Вставить(131, Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(20,5)));
		МатчТип.Вставить(200, Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(255)));
		МатчТип.Вставить(202, Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(255)));
		МатчТип.Вставить(135, Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
		
		Для Инд = 1 По rs.Fields.Count() Цикл
			ТЗ.Колонки.Добавить(rs.Fields(Инд - 1).Name, МатчТип[rs.Fields(Инд - 1).Type]);
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТЗ;
	
КонецФункции