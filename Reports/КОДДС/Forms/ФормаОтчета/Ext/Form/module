Перем Макет;
Перем МассивЗапросов;
Перем СуммаОПУВыручка;
Перем мБухИтоги, мБухИтогиРС;
Перем мОрганизация Экспорт;
Перем мДатаНачала;
Перем мДатаОкончания;
Перем мРезультатСтроки;
Перем ТекущаяСтрока;
Перем НомерСтрокиОбласть;
Перем ТаблицаПроверка;
Перем НомерСтрокиОС;
Перем НомерСтрокиЧистыйДенежныйПоток;


Процедура КнопкаСформироватьНажатие(Кнопка)
	
	мДатаНачала = НачалоДня(ДатаНачала);
	мДатаОкончания = КонецДня(ДатаОкончания);
	
	
	ТаблицаПроверка = Новый ТаблицаЗначений;
	ТаблицаПроверка.Колонки.Добавить("ТекущаяСтрока",,"Номер строки");
	ТаблицаПроверка.Колонки.Добавить("СчетКод",,"Код счета");
	ТаблицаПроверка.Колонки.Добавить("СуммаНачало",,"Баланс на начало периода");
	ТаблицаПроверка.Колонки.Добавить("СуммаОкончание",,"Баланс на конец периода" );
	
	//мИтоговыйРезультатОДДС = Новый ТаблицаЗначений;
	//мИтоговыйРезультатОДДС.Колонки.Добавить("НомерСтроки");
	//мИтоговыйРезультатОДДС.Колонки.Добавить("Сумма");
	
	мРезультатСтроки = Новый Массив;
	
	//Для каждого Орг Из ОрганизацииКО Цикл
	//	
	//	мОрганизация = Орг.Значение;
	//	мБухИтоги = Обработки.БухгалтерскиеИтоги.Создать();
	//	мБухИтогиРС = Обработки.БухгалтерскиеИтоги.Создать();	
	//			
	//КонецЦикла;	
	
	НомерСтрокиОбласть = 0;
	Макет = ПолучитьМакет("КОДДС");
	МассивЗапросов = ОтчетностьМСФО.ПолучитьТекстыЗапросаОПУ();
	ЭлементыФормы.Результат.Очистить();
	
	ВывестиШапку();	
	ВывестиИмяРаздела("Операционная деятельность");
	ВывестиСтрокуПрибыль();
	ВывестиСтрокуКорректировки();
	ВывестиСтрокуАмортизация();
	ВывестиСтрокуРасходыПоНалогуНаПрибыль();
	ВывестиСтрокуПроцентыУплаченные();
	ВывестиСтрокуПроцентыПолученные();
	ВывестиСтрокуУбытокОтВыбытияОС();
	//+++ AK suvv 13.08.2018 ИП-00019490
	ВывестиСтрокуДисконтированиеГарантийныхДепозитов();
	//--- AK suvv
	ВывестиСтрокуСумма17();
	ВывестиИмяРаздела("Изменение");
	ВывестиСтрокуИзменениеЗапасов();
	//+++АК sils 11.10.2018 ИП-00019914
	//ВывестиСтрокуИзменениеДепозитовАренды();
	Если мДатаНачала < '20180101' Тогда
		ВывестиСтрокуИзменениеДепозитовАренды();
	КонецЕсли;
	//---АК
	ВывестиСтрокиИзменениеДЗиКЗ();
	ВывестиСтрокуИзменениеРезервы();
	ВывестиСтрокуДоходыБудущихПериодов();
	ВывестиСтрокуСумма814();
	ВывестиИмяРаздела("Налог на прибыль");
	ВывестиСтрокуНалогНаПрибыль();
	ВывестиСтрокуСуммаЧистыйПоток();
	ВывестиИмяРаздела("Инвестиционная деятельность");
	ВывестиСтрокуЗаймыВыданныеСвязаннымСторонам();
	ВывестиСтрокуПогашениеЗаймовВыданныхСвязаннымСторонам();
	ВывестиСтрокуЗаймыВыданныеТретьимЛицам();
	ВывестиСтрокуПогашениеЗаймовВыданныхТретьимЛицам();
	ВывестиСтрокуПроцентыПолученныеПлюс();
	ВывестиСтрокуПриобретениеОбъектовОсновныхСредств();
	ВывестиСтрокуПоступленияОтПродажиОбъектовОсновныхСредств();
	ВывестиСтрокуПриобретениеНематериальныхАктивов();
	ВывестиСтрокуСуммаИнвестиции();
	ВывестиИмяРаздела("Финсовая деятельность деятельность");	
	ВывестиСтрокуПоступленияЗаемныхСредствСвязанныСторон();
	ВывестиСтрокуВыплатаПоЗаемнымСредствамСвязанныхСторон();
	ВывестиСтрокуПроцентыУплаченныеМинус();
	ВывестиСтрокуСуммаФинансоваяДеятельность();
	ВывестиИмяРаздела("Денежные средства");
	ВывестиСтрокуДенежныеСредстваНаНачало();
	ВывестиСтрокуДенежныеСредстваНаКонец();
	ВывестиСтрокуДенежныеСредстваИзменение();
	ЗаполнитьЯчейкуСуммаОС();	
	ТаблицаПроверка.Свернуть("ТекущаяСтрока,СчетКод","СуммаНачало,СуммаОкончание");
	
КонецПроцедуры

Процедура ВывестиИмяРаздела(ИмяРаздела)
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Раздел");
	ОбластьСтрока.Параметры.ИмяРаздела = ИмяРаздела;
	ЭлементыФормы.Результат.Вывести(ОбластьСтрока);		
	НомерСтрокиОбласть = НомерСтрокиОбласть + 1;
	
КонецПроцедуры

Процедура ВывестиСтроку(ПараметрыОбласти,СтрокаСРасшифровкой = Ложь)
	
	Если СтрокаСРасшифровкой Тогда
		ОбластьСтрока = Макет.ПолучитьОбласть("СтрокаСРасшифровкой");
	Иначе	
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	КонецЕсли;	
	мРезультатСтроки.Добавить(ПараметрыОбласти);
	ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,ПараметрыОбласти);
	ЭлементыФормы.Результат.Вывести(ОбластьСтрока);		
	НомерСтрокиОбласть = НомерСтрокиОбласть + 1;
	
КонецПроцедуры

Процедура ВывестиШапку()
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ПараметрыОбласти = Новый Структура;
	ПараметрыОбласти.Вставить("ПредставлениеПериода",ПредставлениеПериода(НачалоДня(ДатаНачала),КонецДня(ДатаОкончания),"ФП = Истина"));
	ЗаполнитьЗначенияСвойств(ОбластьШапка.Параметры,ПараметрыОбласти);
	ЭлементыФормы.Результат.Вывести(ОбластьШапка);
	НомерСтрокиОбласть= 5;
	
КонецПроцедуры

Процедура ВывестиСтрокуПрибыль()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(1);
	ПараметрыОбласти.Наименование = "Прибыль за отчетный период";
	ПараметрыОбласти.Расшифровка = "Группа, строка ОПУ ""ПРИБЫЛЬ/УБЫТОК ОТ ПРОДОЛЖАЮЩЕЙСЯ ДЕЯТЕЛЬНОСТИ""";
	Сумма = ОтчетностьМСФО.ПолучитьСуммуРазделаОПУ(МассивЗапросов,"01_Выручка","СуммаМСФО",мДатаНачала,мДатаОкончания)
	+ОтчетностьМСФО.ПолучитьСуммуРазделаОПУ(МассивЗапросов,"02_Себестоимость","СуммаМСФО",мДатаНачала,мДатаОкончания)
	+ОтчетностьМСФО.ПолучитьСуммуРазделаОПУ(МассивЗапросов,"02_Себестоимость_ПоВидуДоходовРасходов","СуммаМСФО",мДатаНачала,мДатаОкончания)
	+ОтчетностьМСФО.ПолучитьСуммуРазделаОПУ(МассивЗапросов,"03_Доходы","СуммаМСФО",мДатаНачала,мДатаОкончания)
	+ОтчетностьМСФО.ПолучитьСуммуРазделаОПУ(МассивЗапросов,"04_Расходы","СуммаМСФО",мДатаНачала,мДатаОкончания)
	+ОтчетностьМСФО.ПолучитьСуммуРазделаОПУ(МассивЗапросов,"05_ДоходыФинансовые","СуммаМСФО",мДатаНачала,мДатаОкончания)
	+ОтчетностьМСФО.ПолучитьСуммуРазделаОПУ(МассивЗапросов,"06_РасходыФинансовые","СуммаМСФО",мДатаНачала,мДатаОкончания)
	+ОтчетностьМСФО.ПолучитьСуммуРазделаОПУ(МассивЗапросов,"07_РасходыПоНалогуНаПрибыль","СуммаМСФО",мДатаНачала,мДатаОкончания);
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);
		
КонецПроцедуры

Процедура ВывестиСтрокуКорректировки()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(2);
	ПараметрыОбласти.Наименование = "Корректировки";
	ПараметрыОбласти.Расшифровка = "";
	ПараметрыОбласти.Сумма = 0;
	ВывестиСтроку(ПараметрыОбласти);
		
КонецПроцедуры

Процедура ВывестиСтрокуАмортизация()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(3);
	ПараметрыОбласти.Наименование = "Амортизация";
	ПараметрыОбласти.Расшифровка = "Группа, ОСВ по счету 02, Амортизация ОС Кт счета 02 минус Дебет счета 02";
	//+++ AK suvv 2018.09.03 ИП-00019490
	//ПараметрыОбласти.Сумма = -ОтчетностьМСФО.ПолучитьАмортизацию("СуммаМСФО",мДатаНачала,мДатаОкончания);
	ПараметрыОбласти.Сумма = ОтчетностьМСФО.ПолучитьАмортизацию("СуммаМСФО",мДатаНачала,мДатаОкончания, Истина);
	//--- AK suvv
	ВывестиСтроку(ПараметрыОбласти);
	
КонецПроцедуры

Процедура ВывестиСтрокуРасходыПоНалогуНаПрибыль()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(4);
	ПараметрыОбласти.Наименование = "Расход по налогу на прибыль";
	ПараметрыОбласти.Расшифровка = "Группа, строка ОПУ ""ПРИБЫЛЬ/УБЫТОК ОТ ПРОДОЛЖАЮЩЕЙСЯ ДЕЯТЕЛЬНОСТИ""";
	Сумма = -ОтчетностьМСФО.ПолучитьСуммуРазделаОПУ(МассивЗапросов,"07_РасходыПоНалогуНаПрибыль","СуммаМСФО",мДатаНачала,мДатаОкончания);
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);
		
КонецПроцедуры

Процедура ВывестиСтрокуПроцентыУплаченные()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(5);
	ПараметрыОбласти.Наименование = "Процентные расходы";
	ПараметрыОбласти.Расшифровка = "Cтрока ОДДС раздела ""Финансовая деятельность"" ""Проценты уплаченные""  с обратным знаком";
	Сумма = -ОтчетностьМСФО.ПолучитьСуммуРазделаОПУ(МассивЗапросов,"06_РасходыФинансовые","СуммаМСФО",мДатаНачала,мДатаОкончания);
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);
		
КонецПроцедуры

Процедура ВывестиСтрокуПроцентыПолученные()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(6);
	ПараметрыОбласти.Наименование = "Процентные доходы";
	ПараметрыОбласти.Расшифровка = "Группа, Анализ счета 90.5 по статье Проценты полученные, сумма оборота по Кт минус сумма оборота по Дт";
	Сумма = ОтчетностьМСФО.ПолучитьПроцентыПолученные("СуммаМСФО",мДатаНачала,мДатаОкончания);
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);
		
КонецПроцедуры

Процедура ВывестиСтрокуУбытокОтВыбытияОС()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(7);
	ПараметрыОбласти.Наименование = "Убыток/(прибыль) от выбытия основных средств";
	ПараметрыОбласти.Расшифровка = "Взять в консолидированного ОПУ данные по строке Выбытие ОС со знаком плюс";
	МассивСтатей = Новый Массив;
	МассивСтатей.Добавить(Справочники.СтатьиДоходовРасходов.НайтиПоКоду("61014"));
	ПараметрыОбласти.Сумма = ОтчетностьМСФО.ПолучитьСуммуПоСтатьямРазделаОПУ(МассивЗапросов,"06_РасходыФинансовые",МассивСтатей,"СуммаМСФО",мДатаНачала,мДатаОкончания);;
	ВывестиСтроку(ПараметрыОбласти);
		
КонецПроцедуры

//+++ AK suvv 13.08.2018 ИП-00019490
Процедура ВывестиСтрокуДисконтированиеГарантийныхДепозитов()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(8);
	ПараметрыОбласти.Наименование = "Дисконтирование гарантийных депозитов";
	ПараметрыОбласти.Расшифровка = "Сумму строки ""Доходы от начисления % на дисконтирование депозитов (аренда свыше 12 мес)"" из раздела ОПУ ""Финансовые доходы""";
	МассивСтатей = Новый Массив;
	МассивСтатей.Добавить(Справочники.СтатьиДоходовРасходов.НайтиПоКоду("31017"));
	ПараметрыОбласти.Сумма = ОтчетностьМСФО.ПолучитьСуммуПоСтатьямРазделаОПУ(МассивЗапросов,"05_ДоходыФинансовые",МассивСтатей,"СуммаМСФО",мДатаНачала,мДатаОкончания);
	ВывестиСтроку(ПараметрыОбласти);
	
КонецПроцедуры //--- AK suvv

Процедура ВывестиСтрокуСумма17()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(9);
	ПараметрыОбласти.Наименование = "Потоки денежных средств от операционной деятельности без учета изменений оборотного капитала и резервов";
	ПараметрыОбласти.Расшифровка = "Сумма строк 1-8";
	Сумма = ПолучитьСуммуСтрок("1,2,3,4,5,6,8");
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);
		
КонецПроцедуры

Процедура ВывестиСтрокуИзменениеЗапасов()
	
	ТекущаяСтрока = 10;
	ПараметрыОбласти = ПолучитьПараметрыОбласти(ТекущаяСтрока);
	ПараметрыОбласти.Наименование = "Изменение запасов";
	ПараметрыОбласти.Расшифровка = "Разность строки ""Запасы"" баланса";
	Сумма = -ПолучитьИзменениеБалансаМСФО("Запасы");
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти,Истина);
		
КонецПроцедуры

Процедура ВывестиСтрокуИзменениеДепозитовАренды()
	
	ТекущаяСтрока = 11;
	ПараметрыОбласти = ПолучитьПараметрыОбласти(ТекущаяСтрока);
	ПараметрыОбласти.Наименование = "Изменение депозитов аренды";
	ПараметрыОбласти.Расшифровка = "Разность строки ""Гарантийные депозиты по договорам аренды"" баланса";
	//+++ AK suvv 13.08.2018 ИП-00019490
	Сумма1 = -ПолучитьИзменениеБалансаМСФО("Гарантийные депозиты по договорам аренды");
	Сумма2 = -ПолучитьИзменениеБалансаМСФО("Долгосрочные гарантийные депозиты по договорам аренды");
	Сумма = Сумма1 + Сумма2;
	//--- AK suvv
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти,Истина);
		
КонецПроцедуры

Процедура ВывестиСтрокиИзменениеДЗиКЗ()
	
	СтрокаДЗ = 13;
	СтрокаКЗ = 14;
	ТекущаяСтрока = СтрокаДЗ; 
	СуммаДз = -ПолучитьИзменениеБалансаМСФО("Торговая и прочая дебиторская задолженность",Истина);
	ТекущаяСтрока = СтрокаКЗ;
	СуммаКз = ПолучитьИзменениеБалансаМСФО("Торговая и прочая кредиторская задолженность",Истина);
	
	//+++ AK suvv 2018.09.03 ИП-00019490 
	//КорректировкаДЗКз = ПолучитьКорректировкуДзКз(СтрокаДЗ,СтрокаКЗ);
	//--- AK suvv
		
	СтруктураОтбора = Новый Структура("ТекущаяСтрока",СтрокаДЗ);
	Таблица = ТаблицаПроверка.Скопировать(СтруктураОтбора);
	СуммаДз = Таблица.Итог("СуммаОкончание")-Таблица.Итог("СуммаНачало");
	
	СтруктураОтбора = Новый Структура("ТекущаяСтрока",СтрокаКЗ);
	Таблица = ТаблицаПроверка.Скопировать(СтруктураОтбора);
	СуммаКз = Таблица.Итог("СуммаОкончание")-Таблица.Итог("СуммаНачало");
	
	
	//Обход обработчика ДЗ по номеру строки
	Для каждого Строка из ТаблицаПроверка Цикл
		Если Строка.ТекущаяСтрока = 13 Тогда
			Строка.ТекущаяСтрока = 12;	
		КонецЕсли;
		Если Строка.ТекущаяСтрока = 14 Тогда
			Строка.ТекущаяСтрока = 13;	
		КонецЕсли;		
	КонецЦикла;	
	СтрокаДЗ = 12;
	СтрокаКЗ = 13;	
	
	ТекущаяСтрока = СтрокаДЗ;
	ПараметрыОбласти = ПолучитьПараметрыОбласти(ТекущаяСтрока);
	ПараметрыОбласти.Наименование = "Изменение ДЗ";
	ПараметрыОбласти.Расшифровка = "Разность строки ""Торговая и прочая дебиторская задолженность"" баланса";
	ПараметрыОбласти.Сумма = -СуммаДз;
	ВывестиСтроку(ПараметрыОбласти,Истина);	
	
	ТекущаяСтрока = СтрокаКЗ;
	ПараметрыОбласти = ПолучитьПараметрыОбласти(ТекущаяСтрока);
	ПараметрыОбласти.Наименование = "Изменение КЗ";
	ПараметрыОбласти.Расшифровка = "Разность строки ""Торговая и прочая кредиторская задолженность"" баланса";	
	ПараметрыОбласти.Сумма = СуммаКз;
	ВывестиСтроку(ПараметрыОбласти,Истина);
	
	
КонецПроцедуры

Функция ПолучитьКорректировкуДзКз(НомерСтрокиДз,НомерСтрокиКз)
	
	СтруктураОтбора = Новый Структура("ТекущаяСтрока",НомерСтрокиДз);
	ТаблицаДЗ = ТаблицаПроверка.Скопировать(СтруктураОтбора);
	СтруктураОтбора = Новый Структура("ТекущаяСтрока",НомерСтрокиКз);
	ТаблицаКЗ = ТаблицаПроверка.Скопировать(СтруктураОтбора);
	
	СуммаКорректировкаНачало = 0;
	СуммаКорректировкаОкончание = 0;	
	СчетаРазделение = ОтчетностьМСФО.СчетаРазделениеВзаиморасчетов();
	Для каждого СтрокаДЗ из ТаблицаДЗ Цикл
		Если НЕ НеРазделятьДтКт(СтрокаДЗ.СчетКод,мДатаНачала) Тогда
			СчетПоиск = Лев(СтрокаДЗ.СчетКод,4);		
		    Для каждого СтрокаКЗ из ТаблицаКЗ Цикл
				Если Лев(СтрокаКЗ.СчетКод,4) = СчетПоиск Тогда
					Если  ЗначениеЗаполнено(СтрокаКЗ.СуммаНачало) И  ЗначениеЗаполнено(СтрокаДЗ.СуммаНачало) Тогда
						Если СтрокаДЗ.СуммаНачало > СтрокаКЗ.СуммаНачало И СтрокаДЗ.СуммаНачало > 0 И СтрокаКЗ.СуммаНачало > 0 Тогда
							СуммаКорректировкаНачало = СуммаКорректировкаНачало + СтрокаКЗ.СуммаНачало;
							ИсходнаяСтрока = ИсходнаяСтрока(СтрокаКЗ,"СуммаНачало");
							ИсходнаяСтрока.СуммаНачало = 0;
							ИсходнаяСтрока = ИсходнаяСтрока(СтрокаДЗ,"СуммаНачало");
							ИсходнаяСтрока.СуммаНачало = ИсходнаяСтрока.СуммаНачало - СтрокаКЗ.СуммаНачало;						
						КонецЕсли;	
						Если СтрокаКЗ.СуммаНачало > СтрокаДЗ.СуммаНачало И СтрокаКЗ.СуммаНачало > 0 И СтрокаДЗ.СуммаНачало > 0 Тогда
							СуммаКорректировкаНачало = СуммаКорректировкаНачало - СтрокаДЗ.СуммаНачало;
							ИсходнаяСтрока = ИсходнаяСтрока(СтрокаДЗ,"СуммаНачало");
							ИсходнаяСтрока.СуммаНачало = 0;
							ИсходнаяСтрока = ИсходнаяСтрока(СтрокаКЗ,"СуммаНачало");
							ИсходнаяСтрока.СуммаНачало = ИсходнаяСтрока.СуммаНачало - СтрокаДЗ.СуммаНачало;						
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
		Если НЕ НеРазделятьДтКт(СтрокаДЗ.СчетКод,мДатаОкончания) Тогда
			СчетПоиск = Лев(СтрокаДЗ.СчетКод,4);		
		    Для каждого СтрокаКЗ из ТаблицаКЗ Цикл
				Если Лев(СтрокаКЗ.СчетКод,4) = СчетПоиск Тогда	
					Если  ЗначениеЗаполнено(СтрокаКЗ.СуммаОкончание) И  ЗначениеЗаполнено(СтрокаДЗ.СуммаОкончание) Тогда
						Если СтрокаДЗ.СуммаОкончание > СтрокаКЗ.СуммаОкончание И СтрокаДЗ.СуммаОкончание > 0 И СтрокаКЗ.СуммаОкончание > 0 Тогда
							СуммаКорректировкаОкончание = СуммаКорректировкаОкончание + СтрокаКЗ.СуммаОкончание;
							ИсходнаяСтрока = ИсходнаяСтрока(СтрокаКЗ,"СуммаОкончание");
							ИсходнаяСтрока.СуммаОкончание = 0;
							ИсходнаяСтрока = ИсходнаяСтрока(СтрокаДЗ,"СуммаОкончание");
							ИсходнаяСтрока.СуммаОкончание = ИсходнаяСтрока.СуммаОкончание - СтрокаКЗ.СуммаОкончание;						
						КонецЕсли;	
						Если СтрокаКЗ.СуммаОкончание > СтрокаДЗ.СуммаОкончание И СтрокаКЗ.СуммаОкончание > 0 И СтрокаДЗ.СуммаОкончание > 0 Тогда
							СуммаКорректировкаОкончание = СуммаКорректировкаОкончание - СтрокаДЗ.СуммаОкончание;
							ИсходнаяСтрока = ИсходнаяСтрока(СтрокаДЗ,"СуммаОкончание");
							ИсходнаяСтрока.СуммаОкончание = 0;
							ИсходнаяСтрока = ИсходнаяСтрока(СтрокаКЗ,"СуммаОкончание");
							ИсходнаяСтрока.СуммаОкончание = ИсходнаяСтрока.СуммаОкончание - СтрокаДЗ.СуммаОкончание;						
						КонецЕсли;
					КонецЕсли;	
				КонецЕсли;
		    КонецЦикла;
		КонецЕсли;
	КонецЦикла;	
	
	СуммаНалогДтОкончание = ДебеторскаяЗадолженностьПоНалогам(мДатаОкончания+1,"СуммаМСФОДт");
	
	НоваяСтрока = ТаблицаПроверка.Добавить();
	НоваяСтрока.ТекущаяСтрока = НомерСтрокиДз;
	НоваяСтрока.СчетКод = "68.2 Налог";
	НоваяСтрока.СуммаОкончание = -СуммаНалогДтОкончание;
	
	СуммаНалогДтНачало = ДебеторскаяЗадолженностьПоНалогам(мДатаНачала-1,"СуммаМСФОДт");
	
	НоваяСтрока = ТаблицаПроверка.Добавить();
	НоваяСтрока.ТекущаяСтрока = НомерСтрокиДз;
	НоваяСтрока.СчетКод = "68.2 Налог";
	НоваяСтрока.СуммаНачало = -СуммаНалогДтНачало;

	СуммаНалогДт = СуммаНалогДтНачало-СуммаНалогДтОкончание;
	
	Возврат -СуммаКорректировкаОкончание + СуммаКорректировкаНачало-СуммаНалогДт;
	
КонецФункции

Функция ДебеторскаяЗадолженностьПоНалогам(Дата,Измерение)
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФинансовыйОстатки.СуммаОстатокДт КАК СуммаДт,
		|	ФинансовыйОстатки.СуммаМСФООстатокДт КАК СуммаКоррДт,
		|	ФинансовыйОстатки.СуммаОстатокДт + ФинансовыйОстатки.СуммаМСФООстатокДт КАК СуммаМСФОДт,
		|	ФинансовыйОстатки.Организация,
		|	ФинансовыйОстатки.Субконто2
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.Остатки(
		|			&Дата,
		|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.НалогиУН),
		|			,
		|			Организация В (&Организации)
		|				И Субконто2 В (&ВидыНалогов)) КАК ФинансовыйОстатки";
	
	
	//ГраницаДата = Новый Граница(Дата,ВидГраницы.Включая);;
	Запрос.УстановитьПараметр("Дата",Дата);
	Запрос.УстановитьПараметр("Организации",Список(ОтчетностьМСФО.ОрганизацииКонсолидированныйБаланс()));
	ВидыНалогов  = Новый СписокЗначений;	
	ВидыНалогов.Добавить(Справочники.ВидыНалогов.НайтиПоКоду("000000002"));
	ВидыНалогов.Добавить(Справочники.ВидыНалогов.НайтиПоКоду("000000003"));	
	Запрос.УстановитьПараметр("ВидыНалогов",ВидыНалогов);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат	РезультатЗапроса.Итог(Измерение);	
	
	
КонецФункции	


Функция НеРазделятьДтКт(КодСчета,Дата) Экспорт
	
	МассивРазделение = ОтчетностьМСФО.СчетаРазделениеВзаиморасчетов();
	МассивРазделение.Добавить("70 + 58.1 ФЛ");
	МассивРазделение.Добавить("58.1 ЮЛ");
	МассивРазделение.Добавить("68.2");
	МассивРазделение.Добавить("68.2 ВВ");
	МассивРазделение.Добавить("68.2 ЛП");
	МассивРазделение.Добавить("60.Р");
	МассивРазделение.Добавить("60.Р ВВ");
	МассивРазделение.Добавить("60.Р ЛП");
	Если Дата <= АК_УчетМСФОПривилегированный.ПолучитьДатуНачалаУчетаМСФО() Тогда	
		МассивРазделение.Добавить("60.3");
		МассивРазделение.Добавить("60.3 ВВ");
		МассивРазделение.Добавить("60.3 ЛП");
	КонецЕсли;	
	МассивРазделение.Добавить("68.1");
	МассивРазделение.Добавить("68.1 ВВ");
	МассивРазделение.Добавить("68.1 ЛП");
	МассивРазделение.Добавить("96.ДЗ");
	Если МассивРазделение.Найти(КодСчета) <> Неопределено Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции


Функция ИсходнаяСтрока(СтрокаТаблицы,КолонкаСумма)
	СтруктураОтбора = Новый Структура("ТекущаяСтрока,СчетКод,"+КолонкаСумма);
	ЗаполнитьЗначенияСвойств(СтруктураОтбора,СтрокаТаблицы);
	НайденныеСтроки = ТаблицаПроверка.НайтиСтроки(СтруктураОтбора);
	Если  НайденныеСтроки.Количество() > 0 Тогда
		Возврат НайденныеСтроки[0];
	Иначе 
		НоваяСтрока = ТаблицаПроверка.Добавить();
		НоваяСтрока.СуммаНачало = 0;
		НоваяСтрока.СуммаОкончание = 0;
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураОтбора);
		Возврат НоваяСтрока;
	КонецЕсли;	

КонецФункции

Процедура ВывестиСтрокуИзменениеРезервы()
	
	ТекущаяСтрока = 14;
	ПараметрыОбласти = ПолучитьПараметрыОбласти(ТекущаяСтрока);
	ПараметрыОбласти.Наименование = "Изменение Резервы";
	ПараметрыОбласти.Расшифровка = "Разность строки ""Резервы краткосрочные"" баланса";
	Сумма = ПолучитьИзменениеБалансаМСФО("Резервы краткосрочные");
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти,Истина);
		
КонецПроцедуры

Процедура ВывестиСтрокуДоходыБудущихПериодов()
	ТекущаяСтрока = 15;
	ПараметрыОбласти = ПолучитьПараметрыОбласти(ТекущаяСтрока);
	ПараметрыОбласти.Наименование = "Изменение Доходы будущих периодов";
	ПараметрыОбласти.Расшифровка = "Разность строки ""Доходы будущих периодов"" баланса";
	Сумма = ПолучитьИзменениеБалансаМСФО("Доходы будущих периодов");
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти,Истина);
		
КонецПроцедуры

Процедура ВывестиСтрокуСумма814()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(16);
	ПараметрыОбласти.Наименование = "Потоки денежных средств от операционной деятельности до уплаты налога на прибыль и процентов";
	ПараметрыОбласти.Расшифровка = "Сумма строк 9-15";
	Сумма = ПолучитьСуммуСтрок("9,10,11,12,13,14,15");
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);
		
КонецПроцедуры

Процедура ВывестиСтрокуНалогНаПрибыль()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(17);
	ПараметрыОбласти.Наименование = "Налог на прибыль уплаченный";
	ПараметрыОбласти.Расшифровка = "Группа, Анализ счета 68.2 с отбором по видам налогов: Налог на прибыль в БС РФ, Налог на прибыль в ФБ РФ. Нужна сумма с корреспонденцией счета 51";
	Сумма = -ОтчетностьМСФО.ПолучитьСуммуНалогНаПрибыль(мДатаНачала,мДатаОкончания);
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);
		
КонецПроцедуры

Процедура ВывестиСтрокуСуммаЧистыйПоток()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(18);
	ПараметрыОбласти.Наименование = "Чистый поток денежных средств от операционной деятельности";
	ПараметрыОбласти.Расшифровка = "Сумма строк 16-17";
	Сумма = ПолучитьСуммуСтрок("16,17");
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);
		
КонецПроцедуры

Процедура ВывестиСтрокуЗаймыВыданныеСвязаннымСторонам()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(19);
	ПараметрыОбласти.Наименование = "Займы выданные связанным сторонам";
	ПараметрыОбласти.Расшифровка = "Группа, Анализ субконто, вид субконто-Контрагенты и физ.лица в списке: указать все связанные стороны. Дт 58.2 оборот за период";
	Сумма = -ОтчетностьМСФО.ПолучитьСуммуЗаймыВыданныеСвязаннымСторонам(мДатаНачала,мДатаОкончания,"СуммаМСФОДт");
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);
		
КонецПроцедуры

Процедура ВывестиСтрокуПогашениеЗаймовВыданныхСвязаннымСторонам()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(20);
	ПараметрыОбласти.Наименование = "Погашение займов выданных связанным сторонам";
	ПараметрыОбласти.Расшифровка = "Группа, Анализ субконто, вид субконто-Контрагенты и физ.лица в списке: указать все связанные стороны. Кт 58.2 оборот за период";
	Сумма = ОтчетностьМСФО.ПолучитьСуммуЗаймыВыданныеСвязаннымСторонам(мДатаНачала,мДатаОкончания,"СуммаМСФОКт");
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);
		
КонецПроцедуры

Процедура ВывестиСтрокуЗаймыВыданныеТретьимЛицам()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(21);
	ПараметрыОбласти.Наименование = "Займы выданные третьим лицам";
	ПараметрыОбласти.Расшифровка = "Группа, Анализ субконто, вид субконто-Контрагенты и физ.лица в списке: указать все, кроме Связанные стороны. Дт 58.2 оборот за период(счет не равно 58.1 и контрагенты и физ лица не в группе Банки и кроме контрагента НЕФТЯНОЙ АЛЬЯНС (ПАО) КБ)";
	Сумма = -ОтчетностьМСФО.ПолучитьСуммуЗаймыВыданныеТретьимЛицам(мДатаНачала,мДатаОкончания,"СуммаДт");
	//+++ AK suvv 2018.09.03 ИП-00019490
	Если мДатаНачала <= Дата(2018,06,01) и мДатаОкончания >= Дата(2018,06,30) Тогда
		Сумма = Сумма - СуммаПогашенияЗаймаЛугДаПолеЗиИюнь();
	КонецЕсли;
	//--- AK suvv
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);
		
КонецПроцедуры

Процедура ВывестиСтрокуПогашениеЗаймовВыданныхТретьимЛицам()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(22);
	ПараметрыОбласти.Наименование = "Погашение займов выданных третьим лицам";
	ПараметрыОбласти.Расшифровка = "Группа, Анализ субконто, вид субконто-Контрагенты и физ.лица в списке: указать все, кроме Связанные стороны. Кт 58.2 оборот за период(счет не равно 58.1 и контрагенты и физ лица не в группе Банки и кроме контрагента НЕФТЯНОЙ АЛЬЯНС (ПАО) КБ)";
	Сумма = ОтчетностьМСФО.ПолучитьСуммуЗаймыВыданныеТретьимЛицам(мДатаНачала,мДатаОкончания,"СуммаКт");
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);
		
КонецПроцедуры

Процедура ВывестиСтрокуПроцентыПолученныеПлюс()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(23);
	ПараметрыОбласти.Наименование = "Проценты полученные";
	ПараметрыОбласти.Расшифровка = "Группа, Анализ счета 90.5 по статье Проценты полученные , сумма оборота по Кт минус сумма оборота по Дт";
	Сумма = -ОтчетностьМСФО.ПолучитьПроцентыПолученные("СуммаМСФО",мДатаНачала,мДатаОкончания);
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);
		
КонецПроцедуры

Процедура ВывестиСтрокуПриобретениеОбъектовОсновныхСредств()
	
	ТекущаяСтрока = 24;	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(ТекущаяСтрока);
	ПараметрыОбласти.Наименование = "Приобретение объектов основных средств";
	ПараметрыОбласти.Расшифровка = "";
	Сумма = 0;
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);
	НомерСтрокиОС = НомерСтрокиОбласть;
	
КонецПроцедуры

Процедура ЗаполнитьЯчейкуСуммаОС()
	
	ОбрабатываемаяОбласть = ЭлементыФормы.Результат.Область("R"+НомерСтрокиОС+"C4");
	СуммаОС = ПолучитьСуммуСтрок("34") - ПолучитьСуммуСтрок("31") - ПолучитьСуммуСтрок("27") - ПолучитьСуммуСтрок("18");
	Если ОбрабатываемаяОбласть.СодержитЗначение Тогда
     	ОбрабатываемаяОбласть.Значение = СуммаОС;
	Иначе
	     ОбрабатываемаяОбласть.Текст = СуммаОС;
	 КонецЕсли;
	ОбрабатываемаяОбласть = ЭлементыФормы.Результат.Область("R"+НомерСтрокиЧистыйДенежныйПоток+"C4");
	Если ОбрабатываемаяОбласть.СодержитЗначение Тогда
     	ОбрабатываемаяОбласть.Значение = СуммаОС+ПолучитьСуммуСтрок("19,20,21,22,23,24,25,26");
	Иначе
	     ОбрабатываемаяОбласть.Текст = СуммаОС+ПолучитьСуммуСтрок("19,20,21,22,23,24,25,26");	
 	КонецЕсли;
	 
	
КонецПроцедуры	

Процедура ВывестиСтрокуПоступленияОтПродажиОбъектовОсновныхСредств()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(25);
	ПараметрыОбласти.Наименование = "Поступления от продажи объектов основных средств";
	ПараметрыОбласти.Расшифровка = "Группа, анализ счета 90.5 по статье ДР 10110 Сумма Кт Выручка от продажи ОС(нужно учесть, чтобы попали только продажи сторонним контрагентам, а не внутригрупповые перепродажи ОС между Вкусвилл и Луг да Поле)";
	Сумма = ОтчетностьМСФО.ПолучитьПоступленияОтПродажиОС("СуммаМСФОКт",мДатаНачала,мДатаОкончания);
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);	
	
КонецПроцедуры

Процедура ВывестиСтрокуПриобретениеНематериальныхАктивов()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(26);
	ПараметрыОбласти.Наименование = "Приобретение нематериальных активов";
	ПараметрыОбласти.Расшифровка = "ОСВ Группа по счету 01.4 нужна сумма оборот по Дт";
	Сумма = ОтчетностьМСФО.ПолучитьПриобретениеНематериальныхАктивов(мДатаНачала,мДатаОкончания);
	ПараметрыОбласти.Сумма = -Сумма;
	ВывестиСтроку(ПараметрыОбласти);	
	
КонецПроцедуры 

Процедура ВывестиСтрокуСуммаИнвестиции()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(27);
	ПараметрыОбласти.Наименование = "Чистый поток денежных средств , использованных в инвестиционной деятельности";
	ПараметрыОбласти.Расшифровка = "Сумма строк 19-26";
	Сумма = ПолучитьСуммуСтрок("19,20,21,22,23,24,25,26");
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);	
	НомерСтрокиЧистыйДенежныйПоток = НомерСтрокиОбласть;
КонецПроцедуры 

Процедура ВывестиСтрокуПоступленияЗаемныхСредствСвязанныСторон()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(28);
	ПараметрыОбласти.Наименование = "Поступления заемных средств от связанных сторон";
	ПараметрыОбласти.Расшифровка = "Группа, анализ субконто, 1. вид субконто-Контрагенты и физ лица, в списке указать: связанные стороны. Кт 58.2 за период 2.вид субконто-Контрагенты, в списке указать: связанные стороны Кт 66 на начало периода + оборот по Кт за период";
	Сумма = ОтчетностьМСФО.ПолучитьИзменениеЗаемныхСредствСвязанныхСторон("СуммаКт",ДатаНачала,ДатаОкончания);
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);	
	
КонецПроцедуры 

Процедура ВывестиСтрокуВыплатаПоЗаемнымСредствамСвязанныхСторон()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(29);
	ПараметрыОбласти.Наименование = "Выплата по заемным средствам от связанных сторон";
	ПараметрыОбласти.Расшифровка = "Группа, анализ субконто, 1. вид субконто-Контрагенты и физ лица, в списке указать: связанные стороны. Дт 58.2 за период 2.вид субконто-Контрагенты, в списке указать: связанные стороны Дт 66 на начало периода + оборот по Дт за период";
	Сумма = -ОтчетностьМСФО.ПолучитьИзменениеЗаемныхСредствСвязанныхСторон("СуммаДт",ДатаНачала,ДатаОкончания);
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);	
	
КонецПроцедуры 

Процедура ВывестиСтрокуПроцентыУплаченныеМинус()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(30);
	ПараметрыОбласти.Наименование = "Проценты уплаченные";
	ПараметрыОбласти.Расшифровка = "ОСВ Группа по счету 01.4 нужна сумма оборот по Дт";
	Сумма = ОтчетностьМСФО.ПолучитьСуммуРазделаОПУ(МассивЗапросов,"06_РасходыФинансовые","СуммаМСФО",мДатаНачала,мДатаОкончания);
	
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);	
	
КонецПроцедуры 

Процедура ВывестиСтрокуСуммаФинансоваяДеятельность()
	
	ПараметрыОбласти = ПолучитьПараметрыОбласти(31);
	ПараметрыОбласти.Наименование = "Чистый поток денежных средств , использованных в финансовой  деятельности";
	ПараметрыОбласти.Расшифровка = "Сумма строк 28-30";
	Сумма = ПолучитьСуммуСтрок("28,29,30");
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти);	
	
КонецПроцедуры 

Процедура ВывестиСтрокуДенежныеСредстваНаНачало()
	
	ТекущаяСтрока = 32;
	ПараметрыОбласти = ПолучитьПараметрыОбласти(ТекущаяСтрока);
	ПараметрыОбласти.Наименование = "Денежные средства и их эквиваленты на начало отчетного года";
	ПараметрыОбласти.Расшифровка = "";
	Сумма = ПолучитьСуммуБалансаМСФО("Денежные средства и их эквиваленты",ТекущаяСтрока,мДатаНачала-1);
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти,Истина);
	
КонецПроцедуры	

Процедура ВывестиСтрокуДенежныеСредстваНаКонец()
	
	ТекущаяСтрока = 33;
	ПараметрыОбласти = ПолучитьПараметрыОбласти(ТекущаяСтрока);
	ПараметрыОбласти.Наименование = "Денежные средства и их эквиваленты на Конец отчетного года";
	ПараметрыОбласти.Расшифровка = "";
	Сумма = ПолучитьСуммуБалансаМСФО("Денежные средства и их эквиваленты",ТекущаяСтрока,мДатаОкончания);
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти,Истина);
	
КонецПроцедуры

Процедура ВывестиСтрокуДенежныеСредстваИзменение()
	
	ТекущаяСтрока = 34;
	ПараметрыОбласти = ПолучитьПараметрыОбласти(ТекущаяСтрока);
	ПараметрыОбласти.Наименование = "Нетто увеличение/ (уменьшение) денежных средств и их эквивалентов";
	ПараметрыОбласти.Расшифровка = "Строка 33 - Строка 32";
	Сумма = ПолучитьСуммуСтрок("33")-ПолучитьСуммуСтрок("32");
	ПараметрыОбласти.Сумма = Сумма;
	ВывестиСтроку(ПараметрыОбласти,Истина);
	
КонецПроцедуры	

Функция ПолучитьИзменениеБалансаМСФО(Раздел,ЭтоДзКз=Ложь)
	
	СуммаНачало = ПолучитьСуммуБалансаМСФО(Раздел,ТекущаяСтрока,мДатаНачала-1,ЭтоДзКз);
	СуммаОкончание = ПолучитьСуммуБалансаМСФО(Раздел,ТекущаяСтрока,мДатаОкончания,ЭтоДзКз);

	Возврат  СуммаОкончание-СуммаНачало;
		
КонецФункции

Функция  ПолучитьСуммуБалансаМСФО(Раздел,ТекущаяСтрока,Дата,ЭтоДзКз=Ложь)

	//+++ AK suvv 2018.09.03 ИП-00019490 
	//ТаблицаРаздела = ОтчетностьМСФО.ПолучитьТаблицуРазделБаланса(Раздел,ТекущаяСтрока,Дата,ЭтоДзКз);
	ТаблицаРаздела = ОтчетностьМСФО.ПолучитьТаблицуРазделБаланса(Раздел,ТекущаяСтрока,Дата,ЭтоДзКз,Истина);
	//--- AK suvv 
	Для каждого Строка из ТаблицаРаздела Цикл
		НоваяСтрока = ТаблицаПроверка.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Строка);
		НоваяСтрока.СуммаНачало = 0;
		НоваяСтрока.СуммаОкончание = 0;

		Если  Дата = мДатаОкончания Тогда
			НоваяСтрока.СуммаОкончание = Строка.Сумма;
		Иначе 
			НоваяСтрока.СуммаНачало = Строка.Сумма;
		КонецЕсли;	
	КонецЦикла;	
		
	Возврат ТаблицаРаздела.Итог("Сумма")
	
КонецФункции

Функция ПолучитьСуммуСтрок(ОбщаяСтрока)
	
	Сумма = 0;
	МассивСтрок = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ОбщаяСтрока);
	Для каждого НомерСтроки из МассивСтрок Цикл
		Номер = Число(НомерСтроки);
		Для каждого Строка из мРезультатСтроки Цикл	
			Если Строка.НомерСтроки = Номер Тогда
				Сумма = Сумма + Строка.Сумма;	
		    КонецЕсли;
		КонецЦикла;
	КонецЦикла;	
	
	Возврат Сумма;
КонецФункции	
			
Процедура ПриОткрытии()
	
	//ДатаНачала = НачалоГода(ТекущаяДата());
	//ДатаОкончания = КонецГода(ТекущаяДата());
	ДатаНачала = Дата(2017,1,1);
	ДатаОкончания = Дата(2017,9,30);
	
	//ОрганизацииКО = Новый СписокЗначений;
	//ОрганизацииКО.Добавить(Справочники.Организации.НайтиПоКоду("000000006"));
	//ОрганизацииКО.Добавить(Справочники.Организации.НайтиПоКоду("000000004"));
	

КонецПроцедуры

Функция ПолучитьПараметрыОбласти(НомерСтроки)

	ПараметрыОбласти = Новый Структура("НомерСтроки,Наименование,Расшифровка,Сумма");
	ПараметрыОбласти.НомерСтроки = НомерСтроки;
	
	Возврат  ПараметрыОбласти
	
КонецФункции

Функция Список(Массив)
	
	Результат = Новый СписокЗначений;	
	Для каждого Элемент из Массив Цикл
		
		Результат.Добавить(Элемент);	
		
	КонецЦикла;	
	
	Возврат Результат;
	
КонецФункции

Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Если ТипЗнч(Расшифровка) = Тип("Число") Тогда		
		СтандартнаяОбработка = Ложь;
		ВывестиТаблицуПроверка(Расшифровка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиТаблицуПроверка(НомерСтроки)
	
	Если НомерСтроки = 34 Тогда
		СтруктураОтбора = Новый Структура("ТекущаяСтрока",33);
		ТаблицаРасшифровка = ТаблицаПроверка.скопировать(СтруктураОтбора);
		Для каждого Строка из ТаблицаПроверка Цикл
			Если Строка.ТекущаяСтрока = 32 Тогда
				ЗаполнитьЗначенияСвойств(ТаблицаРасшифровка.Добавить(),Строка);
			КонецЕсли;	
		КонецЦикла;
		ТаблицаРасшифровка.Свернуть("СчетКод","СуммаНачало,СуммаОкончание");
		ТаблицаРасшифровка.Колонки.Добавить("Разность");
	Иначе	
		СтруктураОтбора = Новый Структура("ТекущаяСтрока",НомерСтроки);
		ТаблицаРасшифровка = ТаблицаПроверка.скопировать(СтруктураОтбора);
		ТаблицаРасшифровка.Свернуть("СчетКод","СуммаНачало,СуммаОкончание");
		ТаблицаРасшифровка.Колонки.Добавить("Разность");
	КонецЕсли;	
		
	СуммаНачало= 0;
	СуммаОкончание = 0;
	
	Результат = Новый ТабличныйДокумент;
	МакетРасшифровка = ПолучитьМакет("Расшифровка");
	ОбластьШапкаРасшифровка = МакетРасшифровка.ПолучитьОбласть("Шапка");
	ОбластьСтрокаИтогоРасшифровка = МакетРасшифровка.ПолучитьОбласть("СтрокаИтого");
	ОбластьСтрокаРасшифровка = МакетРасшифровка.ПолучитьОбласть("Строка");
	
	ОбластьШапкаРасшифровка.Параметры.БалансНачало = "Баланс на " + Формат(мДатаНачала-1,"ДФ=dd.MM.yy");
	ОбластьШапкаРасшифровка.Параметры.БалансОкончание = "Баланс на " + Формат(мДатаОкончания,"ДФ=dd.MM.yy");
	
	Результат.Вывести(ОбластьШапкаРасшифровка);
	
	Для каждого строка из ТаблицаРасшифровка Цикл
		СуммаНачало = СуммаНачало + строка.СуммаНачало;		
		СуммаОкончание = СуммаОкончание + строка.СуммаОкончание;
		строка.Разность = строка.СуммаОкончание-строка.СуммаНачало;
	КонецЦикла;	
	
	ОбластьСтрокаИтогоРасшифровка.Параметры.СуммаНачало = СуммаНачало;
	ОбластьСтрокаИтогоРасшифровка.Параметры.СуммаОкончание = СуммаОкончание;	
	ОбластьСтрокаИтогоРасшифровка.Параметры.Разность = СуммаОкончание-СуммаНачало;
	Результат.Вывести(ОбластьСтрокаИтогоРасшифровка);
	
	Для каждого строка из ТаблицаРасшифровка Цикл
		ЗаполнитьЗначенияСвойств(ОбластьСтрокаРасшифровка.Параметры,строка);	
		Результат.Вывести(ОбластьСтрокаРасшифровка);	
	КонецЦикла;	
	Результат.Показать("Расшифровка строки " + НомерСтроки);	
	
КонецПроцедуры

//+++ AK suvv 2018.09.03 ИП-00019490
Функция СуммаПогашенияЗаймаЛугДаПолеЗиИюнь()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ФинансовыйОбороты.СуммаОборотКт КАК СуммаКт
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Обороты(
	|			&ДатаНачала,
	|			&ДатаОкончания,
	|			,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ПрочиеЗаймыВыданные),
	|			,
	|			Субконто1 = &КонтрагентЛугДаПоле
	|				И Организация В (&Организации),
	|			,
	|			) КАК ФинансовыйОбороты";
	
	Запрос.УстановитьПараметр("ДатаНачала",          Дата(2018,06,01));
	Запрос.УстановитьПараметр("ДатаОкончания",       КонецДня(Дата(2018,06,30)));
	Запрос.УстановитьПараметр("Организации",         Список(ОтчетностьМСФО.ОрганизацииКонсолидированныйБаланс()));	
	Запрос.УстановитьПараметр("КонтрагентЛугДаПоле", Справочники.Контрагенты.НайтиПоКоду("000000155"));
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Возврат РезультатЗапроса.Итог("СуммаКт");
	
КонецФункции //--- AK suvv