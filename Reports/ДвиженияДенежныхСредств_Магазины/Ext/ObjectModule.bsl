
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДатаНачала = Дата(3999, 1, 1);
	ДатаКонца = Дата(3999, 1, 1);
	Для Каждого ПользПоле Из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(ПользПоле) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
				И Строка(ПользПоле.Параметр) = "Период" Тогда
			ДатаНачала = ПользПоле.Значение.ДатаНачала;
			ДатаКонца = ПользПоле.Значение.ДатаОкончания;
			Прервать;
		КонецЕсли;	
	КонецЦикла;
	
	ТаблицаДанных = Новый ТаблицаЗначений();
	ТаблицаДанных.Колонки.Добавить("Касса", Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(100)));
	ТаблицаДанных.Колонки.Добавить("КодОперации", Новый ОписаниеТипов("СправочникСсылка.ТипыОперацийМагазина"));
	ТаблицаДанных.Колонки.Добавить("ДатаОперации", Новый ОписаниеТипов("Дата",,,Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	ТаблицаДанных.Колонки.Добавить("НачальныйОстаток", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
	ТаблицаДанных.Колонки.Добавить("СуммаПриход", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
	ТаблицаДанных.Колонки.Добавить("СуммаРасход", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
	ТаблицаДанных.Колонки.Добавить("КонечныйОстаток", Новый ОписаниеТипов("Число",Новый КвалификаторыЧисла(15,2)));
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТипыОпераций.Ссылка,
	               |	ТипыОпераций.code_operation,
	               |	ТипыОпераций.znak
	               |ИЗ
	               |	Справочник.ТипыОперацийМагазина КАК ТипыОпераций
	               |ГДЕ
	               |	ТипыОпераций.table_operation = &table_operation
	               |	И ТипыОпераций.field_operation = &field_operation";
				   
	Запрос.УстановитьПараметр("table_operation", "Cash_move");
	Запрос.УстановитьПараметр("field_operation", "operation_type");
	ТабОперацииКеш = Запрос.Выполнить().Выгрузить();
	
	СтрокаКодыОтрцОпераций = "99999";
	Для Каждого СтрокаОперации Из ТабОперацииКеш Цикл
		Если СтрокаОперации.znak = -1 Тогда
			СтрокаКодыОтрцОпераций = СтрокаКодыОтрцОпераций + ", " + ВнешниеДанные.ФорматПоля(СтрокаОперации.code_operation);
		КонецЕсли;	
	КонецЦикла;	
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	
	ИмяБд = "SMS_Repl";
	НомерМагазина = ВнешниеДанные.ФорматПоля(ПараметрыСеанса.НомерТочкиПоАйпи);
	
	ЗапросСкуль = "SELECT 
				|      Cash_Move.closedate
				|      ,Cash_Move.cash_id as cash_id
				|      ,Cash_Move.operation_type
				|      , 0 as Nach_ost
				|      , 0 as Kon_ost
				|      , CASE WHEN Cash_Move.operation_type IN (" + СтрокаКодыОтрцОпераций + ") THEN 1 ELSE 0 END * Cash_Move.Cash_sum as Rashod
				|      , CASE WHEN Cash_Move.operation_type NOT IN (" + СтрокаКодыОтрцОпераций + ") THEN 1 ELSE 0 END * Cash_Move.Cash_sum as Prihod
				|  FROM " + ИмяБд + ".[dbo].[Cash_move] as Cash_Move (nolock)
				|  WHERE Cash_Move.closedate >= " + ВнешниеДанные.ФорматПоля(ДатаНачала) + " and Cash_Move.closedate <= " + ВнешниеДанные.ФорматПоля(ДатаКонца) + " and Confirm_type IN (1, -1) and Cash_Move.operation_type > 0
				|	and Cash_Move.ShopNo_rep = " + НомерМагазина + "
				|  
				|UNION ALL
				| 
				| SELECT 
				|      " + ВнешниеДанные.ФорматПоля(ДатаНачала) + "
				|      ,Cash_ost.cash_id as cash_id
				|      ,-1
				|      , isnull(Cash_ost.balance_ost, 0) as Nach_ost
				|      , 0 as Kon_ost
				|      , 0
				|      , 0
				|  FROM " + ИмяБд + ".[dbo].[Cash_Move] as Cash_ost (nolock)
				|INNER JOIN (SELECT 
				|      Cash_ost.closedate
				|      ,Cash_ost.cash_id as cash_id
				|      ,Cash_ost.id_doc as id_doc
				|      ,ROW_NUMBER() OVER (PARTITION BY Cash_ost.cash_id order by Cash_ost.closedate desc) as rn
				|      
				|  FROM " + ИмяБд + ".[dbo].[Cash_Move] as Cash_ost (nolock)
				|  WHERE CONVERT(date, Cash_ost.closedate) >= " + ВнешниеДанные.ФорматПоля(ДатаНачала - 86400 * 30, Истина) + " and CONVERT(date, Cash_ost.closedate) <= " + ВнешниеДанные.ФорматПоля(ДатаНачала - 1, Истина) + "
				|	and Cash_ost.ShopNo_rep = " + НомерМагазина + "
				|	and Cash_ost.Confirm_type IN (1, -1) and Cash_ost.operation_type > 0) as VZ_Max
				|	ON Cash_ost.cash_id = VZ_Max.cash_id and VZ_Max.rn = 1 and Cash_ost.id_doc = VZ_Max.id_doc
				|  WHERE CONVERT(date, Cash_ost.closedate) = " + ВнешниеДанные.ФорматПоля(ДатаНачала - 1, Истина) + "
				|	and Cash_ost.ShopNo_rep = " + НомерМагазина + "
				|  
				|UNION ALL
				| 
				| SELECT 
				|      " + ВнешниеДанные.ФорматПоля(ДатаКонца) + "
				|      ,Cash_ost.cash_id as cash_id
				|      ,-2
				|      , 0
				|      , isnull(Cash_ost.balance_ost, 0)
				|      , 0
				|      , 0
				|  FROM " + ИмяБд + ".[dbo].[Cash_Move] as Cash_ost (nolock)
				|INNER JOIN (SELECT 
				|      Cash_ost.closedate
				|      ,Cash_ost.cash_id as cash_id
				|      ,Cash_ost.id_doc as id_doc
				|      ,ROW_NUMBER() OVER (PARTITION BY Cash_ost.cash_id order by Cash_ost.closedate desc) as rn
				|      
				|  FROM " + ИмяБд + ".[dbo].[Cash_Move] as Cash_ost (nolock)
				|  WHERE CONVERT(date, Cash_ost.closedate) >= " + ВнешниеДанные.ФорматПоля(ДатаКонца - 86400 * 30, Истина) + " and CONVERT(date, Cash_ost.closedate) <= " + ВнешниеДанные.ФорматПоля(ДатаКонца, Истина) + "
				|	and Cash_ost.ShopNo_rep = " + НомерМагазина + "
				|	and Cash_ost.Confirm_type IN (1, -1) and Cash_ost.operation_type > 0) as VZ_Max
				|	ON Cash_ost.cash_id = VZ_Max.cash_id and VZ_Max.rn = 1 and Cash_ost.id_doc = VZ_Max.id_doc
				|  WHERE CONVERT(date, Cash_ost.closedate) >= " + ВнешниеДанные.ФорматПоля(ДатаКонца - 86400 * 30, Истина) + " and CONVERT(date, Cash_ost.closedate) <= " + ВнешниеДанные.ФорматПоля(ДатаКонца, Истина) + "
				|	and Cash_ost.ShopNo_rep = " + НомерМагазина;
								
	Попытка			
		Выборка = ADOСоединение.Execute(ЗапросСкуль);
		
		Если НЕ Выборка.EOF() Тогда
			Выборка.MoveFirst();
			Пока НЕ Выборка.EOF() Цикл
				СтрокаДоб = ТаблицаДанных.Добавить();
				СтрокаДоб.Касса = Выборка.Fields("cash_id").Value;
				СтрокаДоб.ДатаОперации = Выборка.Fields("closedate").Value;
				Если Выборка.Fields("operation_type").Value >= 0 Тогда
					СтрокаКеш = ТабОперацииКеш.Найти(Выборка.Fields("operation_type").Value, "code_operation");
					Если СтрокаКеш <> Неопределено Тогда
						СтрокаДоб.КодОперации = СтрокаКеш.Ссылка;
					КонецЕсли;	
				КонецЕсли;
				СтрокаДоб.НачальныйОстаток = Выборка.Fields("Nach_ost").Value;
				СтрокаДоб.КонечныйОстаток = Выборка.Fields("Kon_ost").Value;
				СтрокаДоб.СуммаПриход = Выборка.Fields("Prihod").Value;
				СтрокаДоб.СуммаРасход = Выборка.Fields("Rashod").Value;
				Выборка.MoveNext();
			КонецЦикла;	
		КонецЕсли;	
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		ЗаписьЖурналаРегистрации("Ошибка формирования отчета движения ден. средств", УровеньЖурналаРегистрации.Ошибка, ,, ОписаниеОшибки() + Символы.ПС + "Выполняемый запрос" + Символы.ПС + ЗапросСкуль);
	КонецПопытки;
	
	ADOСоединение.Close();	
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТабДанные", ТаблицаДанных);
	
	//
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();

	// Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;

	// Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);

	// Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);

	// Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры
