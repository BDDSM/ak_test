
Функция ПолучитьПользовательскуюНастройку(ИдентификаторПользовательскойНастройки)
	
	ЗначениеВозврата = Неопределено;
	Для Каждого ПользПоле Из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ПользПоле.ИдентификаторПользовательскойНастройки = ИдентификаторПользовательскойНастройки Тогда
			Возврат ПользПоле;
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат ЗначениеВозврата;
	
КонецФункции	

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	// служебные переменные
	
	ДатаНачала 		= '00010101';
	ДатаОкончания 	= '00010101';
	Для Каждого ПользПоле Из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(ПользПоле) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
				И Строка(ПользПоле.Параметр) = "Период" Тогда
			ДатаНачала 		= ПользПоле.Значение.ДатаНачала;
			ДатаОкончания 	= КонецДня(ПользПоле.Значение.ДатаОкончания);
		КонецЕсли;	
	КонецЦикла;
	
	МассивТТ 			= Новый Массив;
	МассивРасчетчиков 	= Новый Массив;
	МассивПродавцов 	= Новый Массив;
	ЕстьОтборТТ 		= Ложь;
	ЕстьОтборРасчетчик 	= Ложь;
	ЕстьОтборПродавец 	= Ложь;
	
	Для Каждого ЭлементОтбор Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		
		ОтборВНастройках = ПолучитьПользовательскуюНастройку(ЭлементОтбор.ИдентификаторПользовательскойНастройки);
		
		Если ЭлементОтбор.ПредставлениеПользовательскойНастройки = "Торговая точка" Тогда
			
			Если (НЕ ОтборВНастройках = Неопределено)
					И ОтборВНастройках.Использование = Истина Тогда
				Если ОтборВНастройках.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
					ЕстьОтборТТ = Истина;
					МассивТТ.Добавить(ОтборВНастройках.ПравоеЗначение);
				КонецЕсли;	
				Если ОтборВНастройках.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда
					ЕстьОтборТТ = Истина;
					Для Каждого ЭлементТТ Из ОтборВНастройках.ПравоеЗначение Цикл
						МассивТТ.Добавить(ЭлементТТ.Значение);
					КонецЦикла;	
				КонецЕсли;	
			КонецЕсли;
			
		ИначеЕсли ЭлементОтбор.ПредставлениеПользовательскойНастройки = "Расчетчик" Тогда
			
			Если (НЕ ОтборВНастройках = Неопределено)
					И ОтборВНастройках.Использование = Истина Тогда
				Если ОтборВНастройках.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
					ЕстьОтборРасчетчик = Истина;
					МассивРасчетчиков.Добавить(ОтборВНастройках.ПравоеЗначение);
				КонецЕсли;	
				Если ОтборВНастройках.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда
					ЕстьОтборРасчетчик = Истина;
					Для Каждого ЭлементРасчетчик Из ОтборВНастройках.ПравоеЗначение Цикл
						МассивРасчетчиков.Добавить(ЭлементРасчетчик.Значение);
					КонецЦикла;	
				КонецЕсли;	
			КонецЕсли;
			
		ИначеЕсли ЭлементОтбор.ПредставлениеПользовательскойНастройки = "Продавец" Тогда
			
			Если (НЕ ОтборВНастройках = Неопределено)
					И ОтборВНастройках.Использование = Истина Тогда
				Если ОтборВНастройках.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
					ЕстьОтборПродавец = Истина;
					МассивПродавцов.Добавить(ОтборВНастройках.ПравоеЗначение);
				КонецЕсли;	
				Если ОтборВНастройках.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда
					ЕстьОтборПродавец = Истина;
					Для Каждого ЭлементПродавец Из ОтборВНастройках.ПравоеЗначение Цикл
						МассивПродавцов.Добавить(ЭлементПродавец.Значение);
					КонецЦикла;	
				КонецЕсли;	
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;	
	
	
	//////////////////////////////
	// Получение данных и вывод //
	//////////////////////////////
	ТаблицаДанных = Отчеты.ОтчетПоИсправлениямЛистовУчета.ПолучитьТаблицуИсправлений(ДатаНачала, ДатаОкончания,
			ЕстьОтборТТ, МассивТТ, ЕстьОтборРасчетчик, МассивРасчетчиков, ЕстьОтборПродавец, МассивПродавцов);	
								
	СтандартнаяОбработка = Ложь;
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ДанныеДляФормирования", ТаблицаДанных);
	
	//Макет компоновки 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	
	//Компоновка данных
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	//Вывод результата
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

