
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	Перем ВыполненноеДействие;
	
	// Запретим стандартную обработку расшифровки
	СтандартнаяОбработка = Ложь;
	
	ИдентификаторОбъекта = ТиповыеОтчеты.ПолучитьИдентификаторОбъекта(ОтчетОбъект);
	
	ЕстьПодразделение = Ложь;

	МассивПолей = ТиповыеОтчеты.ПолучитьМассивПолейРасшифровки(Расшифровка, ДанныеРасшифровки, , истина);
		
	ЕстьПоказатель  = Ложь;
	ЕстьКорЗначение = Ложь;
	ЕстьСчет        = Ложь;
	ПервыйЭлемент   = Неопределено;
	Счет            = Неопределено;
	КорСчет         = Неопределено;
	Период          = Неопределено;
	БухТипРесурса   = Неопределено;
		
	ЕстьДиаграмма = Ложь;
	
	Контрагент = Неопределено;
	
	Для Каждого Элемент Из МассивПолей Цикл
		Если ТипЗнч(Элемент) = Тип("ЗначениеПоляРасшифровкиКомпоновкиДанных") Тогда
			Если ПервыйЭлемент = Неопределено И Элемент.Поле <> "Показатель" Тогда 
				ПервыйЭлемент = Элемент;
			КонецЕсли;
			Если Элемент.Поле = "Показатель" Тогда
				ЕстьПоказатель = Истина;
			КонецЕсли;
			Если Элемент.Поле = "Контрагент" Тогда
				Контрагент = Элемент.Значение;
			КонецЕсли;
			Если Элемент.Поле = "СчетФин" Тогда
				Счет = Элемент.Значение;
				ЕстьСчет = ЗначениеЗаполнено(Счет);
			КонецЕсли;			
		КонецЕсли;
	КонецЦикла;                                  
		
	ФормироватьОСВПоСчету            = Ложь;
	ФормироватьАнализСчета           = Ложь;
	ФормироватьОборотыСчетаПоМесяцам = Ложь;
	ФормироватьОборотыСчетаПоДням    = Ложь;
	ФормироватьКарточкуСчета         = Ложь;
	ФормироватьКарточкуСубконто      = Ложь;
	ФормироватьОтчетПоПроводкам      = Ложь;
		
	ПредставлениеДляОСВПоСчету            = "ОСВ по счету "   + Счет + " и контрагенту: " + Строка(Контрагент);
	ПредставлениеДляКарточкиСчета         = "Карточка счета " + Счет + " и контрагенту: " + Строка(Контрагент);
	ПредставлениеДляАнализаСчета          = "Анализ счета "   + Счет + " и контрагенту: " + Строка(Контрагент);
	ПредставлениеДляКарточкиСубконто      = "Карточка субконто";
	ПредставлениеДляОтчетаПоПроводкам     = "Отчет по проводкам";
	
	УстановитьВсеПоказатели = Ложь;
		
	ДобавитьОтборПоВидСубконто    = Истина;
	ДобавитьОтборПоВидКорСубконто = Истина;
		
	Если ПервыйЭлемент <> Неопределено Тогда
		
		// Создадим и инициализируем обработчик расшифровки
		ОбработкаРасшифровки = Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, Новый ИсточникДоступныхНастроекКомпоновкиДанных(ОтчетОбъект.СхемаКомпоновкиДанных));
				
		ДоступныеДействия = Новый Массив();
				
		СписокПунктовМеню = Новый СписокЗначений;
		
		Если Не ЕстьПоказатель И ЗначениеЗаполнено(ПервыйЭлемент.Значение)  И Не ПростойТип(ПервыйЭлемент.Значение) Тогда
			СписокПунктовМеню.Добавить("Открыть """ + ПервыйЭлемент.Значение + """");
		КонецЕсли;
		
		СписокПунктовМеню.Добавить(ПредставлениеДляОСВПоСчету);
		СписокПунктовМеню.Добавить(ПредставлениеДляКарточкиСчета);
		СписокПунктовМеню.Добавить(ПредставлениеДляАнализаСчета);
				
		// Осуществим выбор действия расшифровки пользователем
		Настройки = ОбработкаРасшифровки.Выполнить(Расшифровка, ВыполненноеДействие, ДоступныеДействия, СписокПунктовМеню);
				
		Если ВыполненноеДействие <> ДействиеОбработкиРасшифровкиКомпоновкиДанных.Нет Тогда 
			Если ВыполненноеДействие = ПредставлениеДляОСВПоСчету Тогда
				ФормироватьОСВПоСчету   = Истина;
				УстановитьВсеПоказатели = Истина;
			ИначеЕсли ВыполненноеДействие = ПредставлениеДляКарточкиСчета Тогда
				ФормироватьКарточкуСчета = Истина;
				УстановитьВсеПоказатели  = Истина;
			ИначеЕсли ВыполненноеДействие = ПредставлениеДляАнализаСчета Тогда
				ФормироватьАнализСчета  = Истина;
				УстановитьВсеПоказатели = Истина;					
			Иначе
				Если ЗначениеЗаполнено(ПервыйЭлемент.Значение) Тогда
					ОткрытьЗначение(ПервыйЭлемент.Значение);
					Возврат;
				КонецЕсли;       
			КонецЕсли;
		Иначе 
			Возврат;
		КонецЕсли;			
			
		Если ФормироватьКарточкуСчета Тогда 
			ФормаРасшифровка = Отчеты.АК_КарточкаСчета.ПолучитьФорму(,, Новый УникальныйИдентификатор);
		ИначеЕсли ФормироватьКарточкуСубконто Тогда
			ФормаРасшифровка = Отчеты.АК_КарточкаСубконто.ПолучитьФорму(,, Новый УникальныйИдентификатор);
			ФормаРасшифровка.СписокВидовСубконто = ОтчетОбъект.СписокВидовСубконто.Скопировать();
		ИначеЕсли ФормироватьАнализСчета Тогда
			ФормаРасшифровка = Отчеты.АК_АнализСчета.ПолучитьФорму(,, Новый УникальныйИдентификатор);
		ИначеЕсли ФормироватьОборотыСчетаПоДням Тогда
			ФормаРасшифровка = Отчеты.АК_ОборотыСчета.ПолучитьФорму(,, Новый УникальныйИдентификатор);
			ФормаРасшифровка.Периодичность = 6;
		ИначеЕсли ФормироватьОборотыСчетаПоМесяцам Тогда
			ФормаРасшифровка = Отчеты.АК_ОборотыСчета.ПолучитьФорму(,, Новый УникальныйИдентификатор);
			ФормаРасшифровка.Периодичность = 9;
		ИначеЕсли ФормироватьОСВПоСчету Тогда
			ФормаРасшифровка = Отчеты.АК_ОборотноСальдоваяВедомостьПоСчету.ПолучитьФорму(,, Новый УникальныйИдентификатор);
		ИначеЕсли ФормироватьОтчетПоПроводкам Тогда
			ФормаРасшифровка = Отчеты.АК_ОтчетПоПроводкам.ПолучитьФорму(,, Новый УникальныйИдентификатор);
		КонецЕсли;
		
		ФормаРасшифровка.РежимРасшифровки = Истина;
			
		Если ФормаРасшифровка.Метаданные().Реквизиты.Найти("ПоСубсчетам") <> Неопределено Тогда
			ФормаРасшифровка.ПоСубсчетам = Истина;
		КонецЕсли;
			
		Попытка
			ФормаРасшифровка.Счет = Счет;
		Исключение
			ЕстьСчет = Ложь;
		КонецПопытки;
			
		СписокПолейОтборов = Новый Массив;
		
		Для каждого Отбор из МассивПолей Цикл
			Если ТипЗнч(Отбор) = Тип("ЗначениеПоляРасшифровкиКомпоновкиДанных") тогда
				Если Отбор.Значение = NULL тогда
					Продолжить;
				КонецЕсли;
				Если Отбор.Поле = "Счет" И ЕстьСчет Тогда		
				ИначеЕсли Отбор.Поле = "Счет" И Не ЕстьСчет Тогда
					ТиповыеОтчеты.ДобавитьОтбор(ФормаРасшифровка.КомпоновщикНастроек, Отбор.Поле, Отбор.Значение, ВидСравненияКомпоновкиДанных.ВИерархии);		
				ИначеЕсли Найти(Отбор.Поле, "Контрагент") = 1 тогда
					ТиповыеОтчеты.ДобавитьОтбор(ФормаРасшифровка.КомпоновщикНастроек, "Субконто2", Отбор.Значение);						
					СписокПолейОтборов.Добавить(Отбор.Поле);
				ИначеЕсли Отбор.Поле = "Организация" Тогда
					ФормаРасшифровка.Организация = Отбор.Значение;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	
		
		//
		НачалоПериода = Дата(1,1,1);
		КонецПериода = Дата(1,1,1);
		
		Для каждого Параметр из КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы Цикл
			
			Если СокрЛП(Параметр.Параметр)="ПериодОтчета" Тогда
			
				НачалоПериода = Параметр.Значение.ДатаНачала;
				КонецПериода = КонецДня(Параметр.Значение.ДатаОкончания);			
		
			КонецЕсли;
			
		КонецЦикла;
        			
		ФормаРасшифровка.НачалоПериода = НачалоПериода;
		ФормаРасшифровка.КонецПериода  = КонецПериода;
			
		ФормаРасшифровка.Настроить();			
			
		// Настройка показателей
		Для Каждого ЭлементСтруктуры Из ФормаРасшифровка.ДанныеОтчета.ПоказателиОтчета Цикл
			ЭлементСтруктуры.Значение.Значение = Ложь;
		КонецЦикла;
		
		Если УстановитьВсеПоказатели Тогда
			Для Каждого ЭлементСтруктуры Из ФормаРасшифровка.ДанныеОтчета.ПоказателиОтчета Цикл
				Если Не ФормаРасшифровка.ДанныеОтчета.ПоказателиОтчета.МСФО.Использование Тогда 
					Если ЭлементСтруктуры.Значение.Использование Тогда
						ЭлементСтруктуры.Значение.Значение = Истина;
					КонецЕсли;
				Иначе
					Если ЭлементСтруктуры.Ключ = "Количество" И ЕстьСчет Тогда
						ЭлементСтруктуры.Значение.Значение = Счет.Количественный;
					ИначеЕсли ЭлементСтруктуры.Значение.Использование Тогда
						Если ЭлементСтруктуры.Ключ = "РазвернутоеСальдо" Тогда
							ЭлементСтруктуры.Значение.Значение = Ложь;
						Иначе
							ЭлементСтруктуры.Значение.Значение = Истина;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ФормаРасшифровка.Открыть();
		ФормаРасшифровка.ОбновитьОтчет();
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПростойТип(Значение) Экспорт
	
	ОписаниеПростыхТипов = Новый ОписаниеТипов("Дата, Строка, Булево, Число");
	
	Возврат ОписаниеПростыхТипов.СодержитТип(ТипЗнч(Значение));
	
КонецФункции
