
&НаКлиенте
Процедура Сформировать(Команда)
	Если Не ЗначениеЗаполнено(Отчет.Склад) ИЛИ Не ЗначениеЗаполнено(Отчет.ДатаНачала) ИЛИ Не ЗначениеЗаполнено(Отчет.ДатаОкончания) Тогда
		Сообщить("Не выбраны необходимые параметры отчета");
		Возврат;
	КонецЕсли; 
	СформироватьСервер();
КонецПроцедуры

&НаКлиенте
Функция СписокРассылки(Команда)
	ГруппаРассылкиНовыеПравилаРаботыСотрудников = ПредопределенноеЗначение("Справочник.АК_ГруппыРассылки.ОтчетПоПереданнымКоробкам");
	Сп=Новый Массив;
	Сп.Добавить(ГруппаРассылкиНовыеПравилаРаботыСотрудников);
	Если ЗначениеЗаполнено(ГруппаРассылкиНовыеПравилаРаботыСотрудников) Тогда
		СтруктураОтбора = Новый Структура("Группы", Сп);
		ОткрытьФорму("РегистрСведений.АК_ГруппыРассылки.ФормаСписка", СтруктураОтбора, ЭтаФорма);
	КонецЕсли;
КонецФункции

&НаСервере
Процедура СформироватьСервер()
    ТабДок.Очистить();
	Макет=ПолучитьОбщийМакет("МакетОтчетаПоПереданнымКоробкамВМагазин");
	
	ОблШапкаНачало=Макет.ПолучитьОбласть("Шапка|Начало");
	ОблШапкаКонец=Макет.ПолучитьОбласть("Шапка|Конец");
	ОблШапкаСклад1=Макет.ПолучитьОбласть("Шапка|Склад1");
	ОблШапкаСклад2=Макет.ПолучитьОбласть("Шапка|Склад2");
	ОблШапкаСклад3=Макет.ПолучитьОбласть("Шапка|Склад3");
	ОблШапкаСклад4=Макет.ПолучитьОбласть("Шапка|Склад4");
	
	ОблСтрокаНачало=Макет.ПолучитьОбласть("Строка|Начало");
	ОблСтрокаКонец=Макет.ПолучитьОбласть("Строка|Конец");
	ОблСтрокаСклад1=Макет.ПолучитьОбласть("Строка|Склад1");
	ОблСтрокаСклад2=Макет.ПолучитьОбласть("Строка|Склад2");
	ОблСтрокаСклад3=Макет.ПолучитьОбласть("Строка|Склад3");
	ОблСтрокаСклад4=Макет.ПолучитьОбласть("Строка|Склад4");
	//ТабДок=Новый ТабличныйДокумент;	
	//Дата=ТекущаяДата();//'20170215';
	СоотСборщиков=Новый Соответствие;	
	ТЗ=Отчеты.ОтчетКладовщикаНаОтгрузке.СформироватьОтчет(НачалоДня(Отчет.ДатаНачала),КонецДня(Отчет.ДатаОкончания),
	Справочники.СтруктурныеЕдиницы.НайтиПоКоду("P00000231"),"",СоотСборщиков);
	
	МасСкладов=Новый Массив;
	МасСкладов.Добавить("Долгосрок");
	МасСкладов.Добавить("Заморозка");
	МасСкладов.Добавить("Овощи");
	МасСкладов.Добавить("Охлажден");
	МасСкладов.Добавить("Хлеб");
	МасСкладов.Добавить("Молочка");
	МасСкладов.Добавить("Штучный");
	

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходныйОрдерСклад.Склад,
		|	РасходныйОрдерСклад.Ссылка,
		|	РасходныйОрдерСклад.Получатель.Наименование как Получатель
		|ИЗ
		|	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
		|ГДЕ
		|	РасходныйОрдерСклад.Проведен
		|	И РасходныйОрдерСклад.Склад.Владелец = &Владелец
		|	И РасходныйОрдерСклад.Дата МЕЖДУ &Дата1 И &Дата2";

	Запрос.УстановитьПараметр("Владелец", Справочники.СтруктурныеЕдиницы.НайтиПоКоду("P00000231"));
	Запрос.УстановитьПараметр("Дата1", НачалоДня(Отчет.ДатаНачала));
	Запрос.УстановитьПараметр("Дата2", КонецДня(Отчет.ДатаОкончания));

	Результат = Запрос.Выполнить();

	ТЗДок = Результат.Выгрузить();
 	
	ТЗДок.Колонки.Добавить("СкладНаименование");

	
	ТЗКат=Новый ТаблицаЗначений;
	ТЗКат.Колонки.Добавить("Группа");
	ТЗКат.Колонки.Добавить("Поиск");
	
	НовСтр=ТЗКат.Добавить();
	НовСтр.Группа="Долгосрок";
	НовСтр.Поиск="Долгосро";
	НовСтр=ТЗКат.Добавить();
	НовСтр.Группа="Заморозка";
	НовСтр.Поиск="Замороз";
	НовСтр=ТЗКат.Добавить();
	НовСтр.Группа="Овощи";
	НовСтр.Поиск="Овощи";
	НовСтр=ТЗКат.Добавить();
	НовСтр.Группа="Охлажден";
	НовСтр.Поиск="Охл";
	НовСтр=ТЗКат.Добавить();
	НовСтр.Группа="Хлеб";
	НовСтр.Поиск="Хлеб";
	НовСтр=ТЗКат.Добавить();
	НовСтр.Группа="Молочка";
	НовСтр.Поиск=?(Найти(Строка(Справочники.СтруктурныеЕдиницы.НайтиПоКоду("P00000231")),"Кавказский")>0,"Кавказский","Макарова");
	НовСтр=ТЗКат.Добавить();
	НовСтр.Группа="Штучный";
	НовСтр.Поиск="Штучн";
	
	Для каждого Стр Из ТЗДок Цикл
		Для каждого Стр1 Из ТЗКат Цикл
			Если Найти(Нрег(Строка(Стр.Склад)),Нрег(Стр1.Поиск))>0 Тогда
		    	Стр.СкладНаименование=Стр1.Группа;
				Прервать;
			КонецЕсли;
		КонецЦикла; 
	КонецЦикла; 
	
	
	
	
	ТабДок.Вывести(ОблШапкаНачало);
	Для каждого Эл Из МасСкладов Цикл
		ОблШапкаСклад1.Параметры.Склад=Эл;	
		ТабДок.Присоединить(ОблШапкаСклад1);
	
	КонецЦикла; 
	ТабДок.Присоединить(ОблШапкаКонец);
	
	Кол=ТЗ.Количество();
	Для Сч=0 По Кол-1 Цикл
		Если Не ЗначениеЗаполнено(ТЗ[Кол-1-Сч].Магазин) Тогда
			ТЗ.Удалить(Кол-1-Сч);
		КонецЕсли; 
	КонецЦикла; 
	
	
	Для каждого Стр Из ТЗ Цикл
		Если Не ЗначениеЗаполнено(Стр.Магазин) Тогда
			Продолжить;
		КонецЕсли; 
		
		ЗаполнитьЗначенияСвойств(ОблСтрокаНачало.параметры,Стр);
		ТабДок.Вывести(ОблСтрокаНачало);
		Для каждого Эл Из МасСкладов Цикл
			Если Стр[Эл+"Статус"]=1 Тогда
				ОблСтрокаСкладТек=ОблСтрокаСклад1;
			ИначеЕсли Стр[Эл+"Статус"]=2 Тогда
				ОблСтрокаСкладТек=ОблСтрокаСклад2;
			ИначеЕсли Стр[Эл+"Статус"]=3 Тогда
				ОблСтрокаСкладТек=ОблСтрокаСклад3;
			Иначе
				ОблСтрокаСкладТек=ОблСтрокаСклад4;
			КонецЕсли; 
			
			
			ОблСтрокаСкладТек.Параметры.СкладДанные=?(ЗначениеЗаполнено(Стр[Эл]),Стр[Эл],"-");
			МасСтр=ТЗДок.НайтиСтроки(Новый Структура("Получатель",Стр.Магазин));
			Если МасСтр.Количество()>0 Тогда
				ОблСтрокаСкладТек.Параметры.Расходник=МасСтр[0].Ссылка;
			Иначе
				ОблСтрокаСкладТек.Параметры.Расходник="";	
			КонецЕсли; 
			//ОблСтрокаСкладТек.Параметры.Комплектовщик=Стр["Комплектовщик"+Эл];	
			
			ТабДок.Присоединить(ОблСтрокаСкладТек);
		
		КонецЦикла; 
		ОблСтрокаКонец.Параметры.Сетки=Стр.Сетки;
		ТабДок.Присоединить(ОблСтрокаКонец);
		ТабДок.ФиксацияСверху=1;
		ТабДок.ФиксацияСлева=3;
	КонецЦикла; 
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Если ТипЗнч(Расшифровка)=Тип("ДокументСсылка.РасходныйОрдерСклад") Тогда
		СтандартнаяОбработка=Ложь;
		Парам=Новый Структура("ТекущаяСтрока",Расшифровка);
		ОткрытьФорму("Документ.РасходныйОрдерСклад.Форма.ФормаСпискаУправляемая",Парам);
	КонецЕсли; 
КонецПроцедуры
