
/////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

Процедура ОбработкаСменыВидаСубконто(ВидСубконто, ИмяПоля)

	// обновим настройки отборов
	ПолеОтбора = Неопределено;
	Для каждого Элемент Из ПостроительОтчета.Отбор Цикл
		Если ВРег(Элемент.ПутьКДанным) = ВРег(ИмяПоля) Тогда
			ПолеОтбора = Элемент;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ЗначениеЗаполнено(ВидСубконто) Тогда
		Если ПолеОтбора <> Неопределено Тогда
				ПостроительОтчета.Отбор.Удалить(ПостроительОтчета.Отбор.Индекс(ПолеОтбора));
		КонецЕсли;
	Иначе
		Если ПолеОтбора = Неопределено Тогда
			ПолеОтбора = ПостроительОтчета.Отбор.Добавить(ИмяПоля);
			ПолеОтбора.Использование = Ложь;
		Иначе
			Если ПолеОтбора.ТипЗначения <> ВидСубконто.ТипЗначения Тогда
				СтароеЗначение = ПолеОтбора.Значение;
				СтароеЗначениеС = ПолеОтбора.ЗначениеС;
				СтароеЗначениеПо = ПолеОтбора.ЗначениеПо;
				
				ПостроительОтчета.Отбор.Удалить(ПостроительОтчета.Отбор.Индекс(ПолеОтбора));
				
				ПолеОтбора = ПостроительОтчета.Отбор.Добавить(ИмяПоля);
				ПолеОтбора.Использование = Ложь;
				ПолеОтбора.Значение = ПолеОтбора.ТипЗначения.ПривестиЗначение(СтароеЗначение);
				ПолеОтбора.ЗначениеС = ПолеОтбора.ТипЗначения.ПривестиЗначение(СтароеЗначениеС);
				ПолеОтбора.ЗначениеПо = ПолеОтбора.ТипЗначения.ПривестиЗначение(СтароеЗначениеПо);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// обновим настройки детализации
	Поле = Неопределено;
	Для каждого Элемент Из ПостроительОтчета.ИзмеренияСтроки Цикл
		Если ВРег(Лев(Элемент.ПутьКДанным, СтрДлина(ИмяПоля))) = ВРег(ИмяПоля) Тогда
			Поле = Элемент;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Поле = Неопределено Тогда
		// в измерениях строки еще нет такого поля, его надо добавить
		ПостроительОтчета.ИзмеренияСтроки.Добавить(ИмяПоля);
	КонецЕсли;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЕ ЭЛЕМЕНТОВ ФОРМЫ
//

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Закрыть(Истина);
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)

	РаботаСДиалогами.ОбработчикНастройкаПериодаНажатие(ДатаНач, ДатаКон);

КонецПроцедуры

Процедура ВидыСубконтоВидСубконтоПриИзменении(Элемент)
	
	ТекСтрока = ЭлементыФормы.ВидыСубконто.ТекущиеДанные;
	НомерСтроки = ТекСтрока.НомерСтроки;
	ИскомоеПоле = "Субконто"+НомерСтроки;
	
	ПерезаполнитьНачальныеНастройки();
	
	ОбработкаСменыВидаСубконто(ТекСтрока.ВидСубконто, ИскомоеПоле);
	
КонецПроцедуры

Процедура КорВидыСубконтоВидСубконтоПриИзменении(Элемент)
	
	ТекСтрока = ЭлементыФормы.КорВидыСубконто.ТекущиеДанные;
	НомерСтроки = ТекСтрока.НомерСтроки;
	ИскомоеПоле = "КорСубконто"+НомерСтроки;
	
	ПерезаполнитьНачальныеНастройки();
	
	ОбработкаСменыВидаСубконто(ТекСтрока.ВидСубконто, ИскомоеПоле);
	
КонецПроцедуры

Процедура ВидыСубконтоПослеУдаления(Элемент)
	
	ПерезаполнитьНачальныеНастройки();
	
КонецПроцедуры

Процедура КорВидыСубконтоПослеУдаления(Элемент)
	
	ПерезаполнитьНачальныеНастройки();
	
КонецПроцедуры

Процедура КоманднаяПанельДетализацииДобавить(Кнопка)
	
	ТекСтрока = ЭлементыФормы.ДоступныеПоля.ТекущиеДанные;
	
	Поле = Неопределено;
	Для каждого Элемент Из ПостроительОтчета.ИзмеренияСтроки Цикл
		Если Элемент.ПутьКДанным = ТекСтрока.ПутьКДанным Тогда
			Поле = Элемент;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	// если такого поля еще нет, то добавляем его
	// и позиционируемся на нем
	Если Поле = Неопределено Тогда
		Поле = ПостроительОтчета.ИзмеренияСтроки.Добавить(ТекСтрока.ПутьКДанным);
	КонецЕсли;
	
	ЭлементыФормы.ИзмеренияСтроки.ТекущаяСтрока = Поле;
	
КонецПроцедуры

Процедура КоманднаяПанельДетализацииУдалить(Кнопка)
	
	ТекСтрока = ЭлементыФормы.ИзмеренияСтроки.ТекущаяСтрока;
	
	Если ТекСтрока <> Неопределено Тогда
		ПостроительОтчета.ИзмеренияСтроки.Удалить(ТекСтрока);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВидыСубконтоПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Если ВидыСубконто.Количество() >= МаксКоличествоСубконто Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура КорВидыСубконтоПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Если КорВидыСубконто.Количество() >= МаксКоличествоСубконто Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтборЗначениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	БухгалтерскиеОтчеты.ОбработатьВыборДляСтрокиОтбораБухОтчетов(ЭлементыФормы.Отбор.ТекущиеДанные, Элемент, СтандартнаяОбработка, ЭтотОбъект);
	
КонецПроцедуры

Процедура ДоступныеПоляПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("ИзмерениеПостроителяОтчета") Тогда
	
		СтандартнаяОбработка = Ложь;
		
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Перемещение;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзмеренияСтрокиПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("ПолеНастройки") Тогда
	
		СтандартнаяОбработка = Ложь;
		
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Копирование;
	
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("ИзмерениеПостроителяОтчета") Тогда
	
		СтандартнаяОбработка = Ложь;
		
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Перемещение;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзмеренияСтрокиПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("ПолеНастройки") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Поле = Неопределено;
		Для каждого Элемент Из ПостроительОтчета.ИзмеренияСтроки Цикл
			Если Элемент.ПутьКДанным = ПараметрыПеретаскивания.Значение.ПутьКДанным Тогда
				Поле = Элемент;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		// если такого поля еще нет, то добавляем его
		// и позиционируемся на нем
		Если Поле = Неопределено Тогда
			Если Строка <> Неопределено Тогда
				Поле = ПостроительОтчета.ИзмеренияСтроки.Вставить(ПараметрыПеретаскивания.Значение.ПутьКДанным,,,,,ПостроительОтчета.ИзмеренияСтроки.Индекс(Строка));
			Иначе
				Поле = ПостроительОтчета.ИзмеренияСтроки.Добавить(ПараметрыПеретаскивания.Значение.ПутьКДанным);
			КонецЕсли;
		КонецЕсли;
		
		ЭлементыФормы.ИзмеренияСтроки.ТекущаяСтрока = Поле;
		
	ИначеЕсли ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("ИзмерениеПостроителяОтчета") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		
		Если Строка <> Неопределено Тогда
		
			ВеличинаСдвига = ПостроительОтчета.ИзмеренияСтроки.Индекс(Строка) - ПостроительОтчета.ИзмеренияСтроки.Индекс(ПараметрыПеретаскивания.Значение);
			ПостроительОтчета.ИзмеренияСтроки.Сдвинуть(ПараметрыПеретаскивания.Значение, ВеличинаСдвига);
		
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзмеренияСтрокиОкончаниеПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	
	Если ПараметрыПеретаскивания.Действие <> ДействиеПеретаскивания.Отмена Тогда
	
		ПостроительОтчета.ИзмеренияСтроки.Удалить(ПараметрыПеретаскивания.Значение);
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ДоступныеПоляВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Поле = Неопределено;
	Для каждого Элемент Из ПостроительОтчета.ИзмеренияСтроки Цикл
		Если Элемент.ПутьКДанным = ВыбраннаяСтрока.ПутьКДанным Тогда
			Поле = Элемент;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	// если такого поля еще нет, то добавляем его
	// и позиционируемся на нем
	Если Поле = Неопределено Тогда
		Поле = ПостроительОтчета.ИзмеренияСтроки.Добавить(ВыбраннаяСтрока.ПутьКДанным);
	КонецЕсли;
	
	ЭлементыФормы.ИзмеренияСтроки.ТекущаяСтрока = Поле;
	
КонецПроцедуры

