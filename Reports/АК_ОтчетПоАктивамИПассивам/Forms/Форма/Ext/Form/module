
// Процедура формирует заголовок формы отчета с учетом настроек
//
// Параметры:
//  Нет.
//
Процедура СформироватьЗаголовокФормы()

	ОписаниеПериода = БухгалтерскиеОтчеты.СформироватьСтрокуОграниченийПоДатамДляФормы(ДатаНач, ДатаКон);

	Заголовок = ЗаголовокОтчета()+" (" + ОписаниеПериода + ") " +  ?(ЗначениеЗаполнено(Организация.НаименованиеПолное), Организация.НаименованиеПолное, Организация);
	
КонецПроцедуры // СформироватьЗаголовокФормы()()

// Обновляет таблицу отчета
//
// Параметры:
//	Нет.
//
Процедура ОбновитьОтчет() Экспорт

	НеЗаполнятьНастройкиПриОткрытии = Не Открыта();
	
	СформироватьОтчет(ЭлементыФормы.ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка);

	ЭтаФорма.ТекущийЭлемент = ЭлементыФормы.ДокументРезультат;
	
КонецПроцедуры // ОбновитьОтчет()

Процедура ВыводЗаголовка()

//	БухгалтерскиеОтчеты.ОбработатьВыводЗаголовка(ЭтаФорма, ЭтотОбъект, ВысотаЗаголовка, ПоказыватьЗаголовок);
	
КонецПроцедуры // ВыводЗаголовка()

Процедура СчетПриИзменении(Элемент)
	ОбработкаВыбораСчета();
КонецПроцедуры

Процедура Сформировать(Кнопка)
	ОбновитьОтчет();
КонецПроцедуры

Процедура Настройка(Кнопка)
	ФормаНастройка = ПолучитьФорму("ФормаНастройка");
	Если ФормаНастройка.ОткрытьМодально() = Истина Тогда
		ОбновитьОтчет();
	КонецЕсли;
КонецПроцедуры

Процедура КнопкаНастройкаПериодаНажатие(Элемент)

	РаботаСДиалогами.ОбработчикНастройкаПериодаНажатие(ДатаНач, ДатаКон);
	
КонецПроцедуры // КнопкаНастройкаПериодаНажатие()

Процедура ПередСохранениемЗначений(Отказ)
	//СохраненныеНастройки = Новый Структура(
	//"Счет, Организация, ПоСубсчетам, ПоВалютам, ПоКоличеству, НастройкиПостроителяОтчета",
	//Счет, Организация, ПоСубсчетам, ПоВалютам, ПоКоличеству, ПостроительОтчета.ПолучитьНастройки(Истина, Истина, Истина, Истина));
КонецПроцедуры

Процедура ПослеВосстановленияЗначений()
	
	// Если настройка восстанавливается, когда открывается форма сформированного отчета, игнорируем
	Если НеЗаполнятьНастройкиПриОткрытии Тогда
		Возврат;
	КонецЕсли;
	
	// Тип восстановленного значения должен быть Структура
	Если НЕ ТипЗнч(СохраненныеНастройки) = Тип("Структура") Тогда 
		Возврат;
	КонецЕсли;
	
	//СохраненныеНастройки.Свойство("Счет", Счет);
	СохраненныеНастройки.Свойство("Организация", Организация);
	СохраненныеНастройки.Свойство("ПоСубсчетам", ПоСубсчетам);
	СохраненныеНастройки.Свойство("ПоВалютам",   ПоВалютам);
	СохраненныеНастройки.Свойство("ПоКоличеству",ПоКоличеству);
	
	// После установки счета и флагов можно заполнять текст построителя
	ЗаполнитьНачальныеНастройки();
	
	НастройкиПостроителяОтчета = Неопределено;
	СохраненныеНастройки.Свойство("НастройкиПостроителяОтчета", НастройкиПостроителяОтчета);
	Если НастройкиПостроителяОтчета<> Неопределено Тогда
		ПостроительОтчета.УстановитьНастройки(НастройкиПостроителяОтчета, Истина, Истина, Истина, Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельЗаголовок(Кнопка)
	ПоказыватьЗаголовок = Не ПоказыватьЗаголовок;
	ВыводЗаголовка();
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ТиповыеОтчеты.НазначитьФормеУникальныйКлючИдентификации(ЭтаФорма);
	
	Если РегламентированнаяОтчетность.ИДКонфигурации() <> "БП" Тогда
			// Проверка ведения однофирменности
		УчетПоВсемОрганизациям = Истина;
	КонецЕсли;

	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		
		ПоказыватьЗаголовок = Истина;
		
		СтруктураОбщихПараметров = ВосстановитьЗначение("ОбщиеПараметрыОтчетов"+ИмяРегистраБухгалтерии);
		Если ТипЗнч(СтруктураОбщихПараметров) = Тип("Структура") Тогда
			
			СтруктураОбщихПараметров.Свойство("Организация", Организация);
			//СтруктураОбщихПараметров.Свойство("Счет", Счет);
			СтруктураОбщихПараметров.Свойство("ПоказыватьЗаголовок", ПоказыватьЗаголовок);
			СтруктураОбщихПараметров.Свойство("ДатаНач", ДатаНач);
			СтруктураОбщихПараметров.Свойство("ДатаКон", ДатаКон);
			ОбработкаВыбораСчета();
			
		КонецЕсли;
		
		ВысотаЗаголовка = 0;
		
	КонецЕсли; 
	
	БухгалтерскиеОтчеты.ПоддержкаОднофирменностиДляБухОтчетов(ЭтаФорма, Организация, УчетПоВсемОрганизациям, НЕ НеЗаполнятьНастройкиПриОткрытии);
    
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если НЕ НеЗаполнятьНастройкиПриОткрытии Тогда
		ВыводЗаголовка();
		СформироватьЗаголовокФормы();
	КонецЕсли;
	
	НеЗаполнятьНастройкиПриОткрытии=Ложь;
	
	БухгалтерскиеОтчеты.УправлениеПометкамиКнопокЗаголовковКоманднойПанели(ЭтаФорма, ПоказыватьЗаголовок);	

КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СтруктураОбщихПараметров = Новый Структура;
	СтруктураОбщихПараметров.Вставить("Организация", Организация);
	СтруктураОбщихПараметров.Вставить("ДатаНач", ДатаНач);
	СтруктураОбщихПараметров.Вставить("ДатаКон", ДатаКон);
	//СтруктураОбщихПараметров.Вставить("Счет",    Счет);
	
	СохранитьЗначение("ОбщиеПараметрыОтчетов"+ИмяРегистраБухгалтерии, СтруктураОбщихПараметров);
	
КонецПроцедуры

Процедура ОбновлениеОтображения()

	СформироватьЗаголовокФормы();

КонецПроцедуры

Процедура ДокументРезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)

	БухгалтерскиеОтчеты.ДокументРезультатОбработкаРасшифровкиОборотноСальдовойВедомости(Элемент, Расшифровка, СтандартнаяОбработка, ПоказыватьЗаголовок);

КонецПроцедуры

