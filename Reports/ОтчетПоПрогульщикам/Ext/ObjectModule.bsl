
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	СтрокаПодключения = ПолныеПрава.ПолучитьСтрокуПодключения_Зуп();
	
	v82COMОбъект = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Зуп() + ".COMConnector");
	Попытка
		v82 = v82COMОбъект.Connect(СтрокаПодключения);
		ПодключениеУстановлено=Истина;
	Исключение
		ПодключениеУстановлено=Ложь;
		Сообщить("Не удалось подключитьс к базе ЗУП");
		Возврат;
	КонецПопытки;
	
	//ТекстЗапроса =
	//"ВЫБРАТЬ
	//|	РаботникиОрганизацийСрезПоследних.Период КАК ДатаУвольнения,
	//|	РаботникиОрганизацийСрезПоследних.Регистратор.Номер КАК НомерПриказа,
	//|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо.Код КАК КодФизЛица
	//|ИЗ
	//|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Период, ) КАК РаботникиОрганизацийСрезПоследних
	//|ГДЕ
	//|	РаботникиОрганизацийСрезПоследних.Должность.Наименование = ""Продавец-консультант""
	//|	И РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	КодФизЛица";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МАКСИМУМ(РаботникиОрганизацийСрезПоследних.Период) КАК ДатаУвольнения,
	|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо
	|ПОМЕСТИТЬ МаксимальныеДатыУвольнений
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Период, ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)) КАК РаботникиОрганизацийСрезПоследних
	|ГДЕ
	|	РаботникиОрганизацийСрезПоследних.Должность.Наименование = ""Продавец-консультант""
	|
	|СГРУППИРОВАТЬ ПО
	|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(РаботникиОрганизацийСрезПоследних.Период) КАК ДатаПриема,
	|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо
	|ПОМЕСТИТЬ МаксимальныеДатыПриемов
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Период, ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)) КАК РаботникиОрганизацийСрезПоследних
	|ГДЕ
	|	РаботникиОрганизацийСрезПоследних.Должность.Наименование = ""Продавец-консультант""
	|
	|СГРУППИРОВАТЬ ПО
	|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыУвольнений.ДатаУвольнения,
	|	РаботникиОрганизацийСрезПоследних.Регистратор.Номер КАК НомерПриказа,
	|	МаксимальныеДатыУвольнений.СотрудникФизлицо.Код КАК КодФизЛица
	|ИЗ
	|	МаксимальныеДатыУвольнений КАК МаксимальныеДатыУвольнений
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Период, ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)) КАК РаботникиОрганизацийСрезПоследних
	|		ПО МаксимальныеДатыУвольнений.СотрудникФизлицо = РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо
	|			И МаксимальныеДатыУвольнений.ДатаУвольнения = РаботникиОрганизацийСрезПоследних.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ МаксимальныеДатыПриемов КАК МаксимальныеДатыПриемов
	|		ПО МаксимальныеДатыУвольнений.СотрудникФизлицо = МаксимальныеДатыПриемов.СотрудникФизлицо
	|ГДЕ
	|	ЕСТЬNULL(МаксимальныеДатыПриемов.ДатаПриема, ДАТАВРЕМЯ(1, 1, 1)) <= МаксимальныеДатыУвольнений.ДатаУвольнения
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодФизЛица";
	
	//
	Настройки=КомпоновщикНастроек.ПолучитьНастройки();
	Период = Настройки.ПараметрыДанных.Элементы.Найти("Период");
	
	//
	Запрос=v82.NewObject("Запрос");  
	Запрос.текст = ТекстЗапроса;			 
	Запрос.УстановитьПараметр("Период", Период.Значение.Дата);  
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТЗЗУП = Новый ТаблицаЗначений;
	ТЗЗУП.Колонки.Добавить("ДатаУвольнения", Новый ОписаниеТипов("Дата"));
	ТЗЗУП.Колонки.Добавить("НомерПриказа", Новый ОписаниеТипов("Строка"));
	ТЗЗУП.Колонки.Добавить("ФизЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	
	Пока Выборка.следующий() Цикл
		НС=ТЗЗУП.Добавить();
		ЗаполнитьЗначенияСвойств(НС,Выборка);
		НС.ФизЛицо=Справочники.ФизическиеЛица.НайтиПоКоду(Выборка.КодФизЛица);
	КонецЦикла;	
	
	ТЗЗУП.Сортировать("ФизЛицо, ДатаУвольнения");
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеЗУП.ДатаУвольнения,
	|	ДанныеЗУП.НомерПриказа,
	|	ДанныеЗУП.ФизЛицо
	|ПОМЕСТИТЬ ВсеУвольнения
	|ИЗ
	|	&ДанныеЗУП КАК ДанныеЗУП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабельРаботыПродавцов.Сотрудник,
	|	МАКСИМУМ(ТабельРаботыПродавцов.Период) КАК ПоследняяДатаВыхода,
	|	МАКСИМУМ(ТабельРаботыПродавцов.Сотрудник.Активный) КАК Активный
	|ПОМЕСТИТЬ ВсеВыходы
	|ИЗ
	|	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
	|ГДЕ
	|	ТабельРаботыПродавцов.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.ПустаяСсылка)
	|	И ТабельРаботыПродавцов.Сотрудник.Должность = ""Продавец-консультант""
	|	И НЕ ТабельРаботыПродавцов.Сотрудник.ПометкаУдаления
	|	И ТабельРаботыПродавцов.Период < &Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ТабельРаботыПродавцов.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВсеВыходы.Сотрудник,
	|	ВсеВыходы.ПоследняяДатаВыхода КАК ПоследняяДатаВыхода,
	|	ВсеВыходы.Активный,
	|	МИНИМУМ(ВсеУвольнения.ДатаУвольнения) КАК ДатаУвольнения
	|ПОМЕСТИТЬ Основная
	|ИЗ
	|	ВсеВыходы КАК ВсеВыходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеУвольнения КАК ВсеУвольнения
	|		ПО ВсеВыходы.Сотрудник = ВсеУвольнения.ФизЛицо
	|			И ВсеВыходы.ПоследняяДатаВыхода <= ВсеУвольнения.ДатаУвольнения
	|ГДЕ
	|	ВсеВыходы.ПоследняяДатаВыхода < ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, -1)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВсеВыходы.Сотрудник,
	|	ВсеВыходы.ПоследняяДатаВыхода,
	|	ВсеВыходы.Активный
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Основная.Сотрудник,
	|	Основная.ПоследняяДатаВыхода,
	|	Основная.Активный,
	|	Основная.ДатаУвольнения,
	|	ВсеУвольнения.НомерПриказа,
	|	ТабельРаботыПродавцов.Группа
	|ИЗ
	|	Основная КАК Основная
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВсеУвольнения КАК ВсеУвольнения
	|		ПО Основная.Сотрудник = ВсеУвольнения.ФизЛицо
	|			И Основная.ДатаУвольнения = ВсеУвольнения.ДатаУвольнения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
	|		ПО Основная.Сотрудник = ТабельРаботыПродавцов.Сотрудник
	|			И Основная.ПоследняяДатаВыхода = ТабельРаботыПродавцов.Период";
	
	//ТекстЗапроса =
	//"ВЫБРАТЬ
	//|	ТабельРаботыПродавцов.Сотрудник,
	//|	МАКСИМУМ(ТабельРаботыПродавцов.Период) КАК ПоследняяДатаВыхода,
	//|	МАКСИМУМ(ТабельРаботыПродавцов.Сотрудник.Активный) КАК Активный
	//|ПОМЕСТИТЬ ВсеВыходы
	//|ИЗ
	//|	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
	//|ГДЕ
	//|	ТабельРаботыПродавцов.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.ПустаяСсылка)
	//|	И ТабельРаботыПродавцов.Сотрудник.Должность = ""Продавец-консультант""
	//|	И НЕ ТабельРаботыПродавцов.Сотрудник.ПометкаУдаления
	//|{ГДЕ
	//|	(ТабельРаботыПродавцов.Период < &Период)}
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ТабельРаботыПродавцов.Сотрудник
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВсеВыходы.Сотрудник,
	//|	ВсеВыходы.ПоследняяДатаВыхода КАК ПоследняяДатаВыхода,
	//|	ВсеВыходы.Активный
	//|ИЗ
	//|	ВсеВыходы КАК ВсеВыходы";
	
	Запрос=Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Период",Период.Значение.Дата);
	Запрос.УстановитьПараметр("ДанныеЗУП",ТЗЗУП);
	
	ДанныеФинансов = Запрос.Выполнить().Выгрузить();
	//ДанныеФинансов.Колонки.Добавить("ДатаУвольнения", Новый ОписаниеТипов("Дата"));
	//ДанныеФинансов.Колонки.Добавить("НомерПриказа", Новый ОписаниеТипов("Строка"));
	//
	//Для Каждого Стр Из ДанныеФинансов Цикл
	//	
	//	СтруктураПоиска = Новый Структура();
	//	СтруктураПоиска.Вставить("ФизЛицо", Стр.Сотрудник);
	//	
	//	НайденныеСтроки = ТЗЗУП.НайтиСтроки(СтруктураПоиска);
	//	Если НайденныеСтроки.Количество()Тогда
	//		
	//		НомерПриказа = "";
	//		ДатаУвольнения = Дата(1,1,1);
	//		
	//		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
	//			
	//			Если Стр.ПоследняяДатаВыхода <= НайденнаяСтрока.ДатаУвольнения Тогда
	//				НомерПриказа = НайденнаяСтрока.НомерПриказа;
	//				ДатаУвольнения = НайденнаяСтрока.ДатаУвольнения;
	//				Прервать;	
	//			КонецЕсли; 
	//			
	//		КонецЦикла;
	//		
	//		Стр.НомерПриказа = НомерПриказа;
	//		Стр.ДатаУвольнения = ДатаУвольнения;
	//		
	//	КонецЕсли;
	//	
	//КонецЦикла;
	
	//
	ВнешниеНаборыДанных = Новый Структура; 
	ВнешниеНаборыДанных.Вставить("ДанныеФинансов", ДанныеФинансов); 
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных1");
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(),ДанныеРасшифровки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных);
	
	ДокументРезультат.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    ПроцессорВывода.УстановитьДокумент(ДокументРезультат);

	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры
