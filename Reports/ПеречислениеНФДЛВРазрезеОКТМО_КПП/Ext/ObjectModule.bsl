
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтрокаПодключения = ПолныеПрава.ПолучитьСтрокуПодключения_Бух();
	v82COMОбъект = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Бух() + ".COMConnector");
	Попытка
		v82 = v82COMОбъект.Connect(СтрокаПодключения);
		ПодключениеУстановлено=Истина;
	Исключение
		ПодключениеУстановлено=Ложь;
		Сообщить("Не удалось подключитьсz к базе финансов");
		Возврат;
	КонецПопытки;
	
	СтандартнаяОбработка = Ложь;
	
	ТекстЗапроса="ВЫБРАТЬ
		|ХозрасчетныйОбороты.СуммаОборотДт КАК Оплачено,
		|ХозрасчетныйОбороты.СуммаОборотКт КАК Начислено,
		|ХозрасчетныйОбороты.Период КАК Месяц,
		|ХозрасчетныйОбороты.Субконто2.Наименование КАК Налоговая,
		|ХозрасчетныйОбороты.Субконто2.КПП КАК КПП,
		|ХозрасчетныйОбороты.Субконто2.КодПоОКТМО КАК ОКТМО,
		|ХозрасчетныйОбороты.Организация.ИНН КАК ИНН
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачалоПериода, &КонецПериода, Месяц, Счет.Код = ""68.01"", , , , ) КАК ХозрасчетныйОбороты";
	запрос=v82.NewObject("Запрос");  
	запрос.текст = ТекстЗапроса;			 
	Запрос.УстановитьПараметр("НачалоПериода",КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода",КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение.ДатаОкончания);
	Выборка=Запрос.Выполнить().Выбрать();
	ТЗ=Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Организация");
	ТЗ.Колонки.Добавить("Начислено");
	ТЗ.Колонки.Добавить("Налоговая");
	ТЗ.Колонки.Добавить("Оплачено");
	ТЗ.Колонки.Добавить("Месяц");
	ТЗ.Колонки.Добавить("КПП");
	ТЗ.Колонки.Добавить("ОКТМО");
	
	ТЗНал=Новый ТаблицаЗначений;
	ТЗНал.Колонки.Добавить("Налоговая");
	ТЗНал.Колонки.Добавить("КПП");
	ТЗНал.Колонки.Добавить("ОКТМО");
	
	Пока Выборка.Следующий() Цикл
		Стр=ТЗ.Добавить();
		Стр.Организация=Справочники.Организации.НайтиПоРеквизиту("ИНН",Выборка.ИНН);
		ЗаполнитьЗначенияСвойств(Стр,Выборка);
		Стр=ТЗНал.Добавить();
		ЗаполнитьЗначенияСвойств(Стр,Выборка);
	КонецЦикла;	
	
	ТЗНал.Свернуть("Налоговая,КПП,ОКТМО");
	
	ТЗНалоговых=ТЗНал.Скопировать();
	ТЗНалоговых.Свернуть("КПП,ОКТМО");
	ТЗНалоговых.Колонки.Добавить("Налоговая");
	СтруктураПоиска=Новый Структура;
	СтруктураПоиска.Вставить("КПП");
	СтруктураПоиска.Вставить("ОКТМО");
	Для каждого стр из ТЗНалоговых Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПоиска,Стр);
		нашли=ТЗНал.НайтиСтроки(СтруктураПоиска);
		Стр.Налоговая=нашли[0].Налоговая;
	КонецЦикла;	
	
	ВнешниеНаборыДанных = Новый Структура; 
	ВнешниеНаборыДанных.Вставить("ДанныеБП",ТЗ); 
	ВнешниеНаборыДанных.Вставить("Налоговые",ТЗНалоговых); 
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы[0].Значение=КомпоновщикНастроек.ПользовательскиеНастройки.Элементы[0].Значение;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.Настройки,ДанныеРасшифровки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных);
	
	ДокументРезультат.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
    ПроцессорВывода.УстановитьДокумент(ДокументРезультат);

	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

	
	
КонецПроцедуры
