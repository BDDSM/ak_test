
Функция ПолучитьТекстУсловияПоДатам(мДатаНачала, мДатаОкончания, ТекстПоляДаты)
	
	ТекстУсловияПоДатам =
	" " + ТекстПоляДаты + " BETWEEN '" + Формат(мДатаНачала, "ДФ='yyyy-MM-ddTHH:mm:ss'") + "'
	| 	AND '" + Формат(мДатаОкончания, "ДФ='yyyy-MM-ddTHH:mm:ss'") + "'
	| 	AND";
	
	Возврат ТекстУсловияПоДатам;
	
КонецФункции 

Функция ПолучитьТаблицуПотерь(СтруктураПараметров) Экспорт//мДатаНачала, мДатаОкончания, мМаксОтношение) Экспорт
	
	мДатаНачала 	= СтруктураПараметров.ДатаНачала;
	мДатаОкончания 	= СтруктураПараметров.ДатаОкончания;
	мМаксЧастота 	= СтруктураПараметров.МаксЧастота;
	мВыводитьВсехПроизводителей = СтруктураПараметров.ВыводитьВсехПроизводителей;
	мСчитатьПоТенденции 		= СтруктураПараметров.СчитатьПоТенденции;
	
	// описание служебных переменных
	мТипЧисло = Новый ОписаниеТипов("Число");
	СпрНоменклатура 	= Справочники.Номенклатура;
	СпрТорговыеТочки 	= Справочники.СтруктурныеЕдиницы;
	
	ТекстУсловияПоДатам1 = ПолучитьТекстУсловияПоДатам(мДатаНачала				, КонецДня(мДатаОкончания), "LostSales.date_ls");
	ТекстУсловияПоДатам2 = ПолучитьТекстУсловияПоДатам(мДатаОкончания - 6*86400	, КонецДня(мДатаОкончания), "LostSales2.date_ls");
	
	МассивНедель = Новый Массив;
	мДата = мДатаНачала;
	Пока мДата < мДатаОкончания Цикл
		МассивНедель.Добавить(ДопМодульСервер.ПолучитьНомерНеделиПоДате(мДата));
		мДата = мДата + 7 * 86400;
	КонецЦикла;
	мКоличествоНедель = МассивНедель.Количество();
	
	
	// получение таблицы из SQL
	ADOСоединение = Новый COMОбъект("ADODB.Connection");
	ADOСоединение.ConnectionTimeOut = 0;
	ADOСоединение.CommandTimeOut    = 0;
	ADOСоединение.ConnectionString  = ОбменСAccess.ПолучитьСтрокуСоединения("SMS_Izbenka");
	ADOСоединение.Open();
	
	//ТекстЗапроса =
	//"IF OBJECT_ID('tempdb..#tabuidytov') IS NOT NULL
	//|DROP TABLE #tabuidytov
	//|;
	//|SELECT
	//|	[id_tov] as ID,
	//|	[UID] as UID
	//|INTO
	//|	#tabuidytov
	//|FROM [IzbenkaFin].[dbo].[ArticleBin2UID] (nolock)
	//|;
	//|SELECT
	//|	tabuidytov.UID as TovarUID,
	//|	_tovari.name_tov as name_tov,
	//|	_kontragenty.id_kontr as id_kontr,
	//|	_kontragenty.nova_kontr as nova_kontr,
	//|	_tovari.name_tov + ' [' + _kontragenty.nova_kontr + ']' as TovarProizv,
	//|	CAST(CAST(CONVERT(CHAR(8), LostSales.date_ls, 112) as DATETIME) as INTEGER)/7-5705 as NomerNedeli,
	//|	SUM(LostSales.sales_ls) / SUM(LostSales.checks_1 + CASE WHEN LostSales.konost_ls >= 0.1 THEN LostSales.checks_2 ELSE 0 END) * 10 as _Chastota
	//|FROM [M2].[dbo].[Lost_sales] as LostSales (nolock)
	//| INNER JOIN
	//|	 [M2].[dbo].[tovari] as _tovari (nolock)
	//| ON _tovari.id_tov = LostSales.id_tov_ls
	//| INNER JOIN
	//|	 [M2].[dbo].[kontr] as _kontragenty (nolock)
	//| ON _kontragenty.id_kontr = LostSales.id_kontr_ls
	//| INNER JOIN
	//|	 [M2].[dbo].[tt] as _tt (nolock)
	//| ON _tt.id_TT = LostSales.id_TT_ls
	//| LEFT OUTER JOIN
	//|	 #tabuidytov as tabuidytov (nolock)
	//| ON LostSales.id_tov_ls = tabuidytov.ID
	//|WHERE" + ТекстУсловияПоДатам1 +
	//" LostSales.Chastota > 0
	//| AND LostSales.sales_ls > 0
	//| AND _tt.tt_format <> 2
	//| AND LostSales.id_tov_ls IN (
	//|	 SELECT
	//|	 	VremTable.id_tov_ls
	//|	 FROM (
	//|	 	SELECT
	//|	 		LostSales2.id_tov_ls,
	//|	 		LostSales2.id_kontr_ls
	//|	 	FROM
	//|	 		[M2].[dbo].[Lost_sales] as LostSales2 (nolock)
	//| 		  INNER JOIN
	//|	 		 [M2].[dbo].[tt] as _tt2 (nolock)
	//| 		  ON _tt2.id_TT = LostSales2.id_TT_ls
	//|	 	WHERE" + ТекстУсловияПоДатам2 +
	//"           LostSales2.Chastota > 0
	//| 			AND LostSales2.sales_ls > 0
	//| 			AND _tt2.tt_format <> 2
	//|	 		AND LostSales2.id_kontr_ls IS NOT NULL
	//|	 	GROUP BY
	//|	 		LostSales2.id_tov_ls,
	//|	 		LostSales2.id_kontr_ls)	as VremTable
	//|	GROUP BY
	//|	 	VremTable.id_tov_ls
	//|	HAVING
	//|	 	COUNT(VremTable.id_kontr_ls) > 1)
	//|GROUP BY
	//|	tabuidytov.UID,
	//|	_tovari.name_tov,
	//|	_kontragenty.id_kontr,
	//|	_kontragenty.nova_kontr,
	//|	_tovari.name_tov + ' [' + _kontragenty.nova_kontr + ']',
	//|	CAST(CAST(CONVERT(CHAR(8), LostSales.date_ls, 112) as DATETIME) as INTEGER)/7-5705
	//|;
	//|DROP TABLE
	//|	#tabuidytov";
	
	ТекстЗапроса =
	"IF OBJECT_ID('tempdb..#tabuidytov') IS NOT NULL
			|DROP TABLE #tabuidytov
			|;
			|SELECT
			| [id_tov] as ID,
			| [UID] as UID
			|INTO
			| #tabuidytov
			|FROM [IzbenkaFin].[dbo].[ArticleBin2UID] (nolock)
            |
			|declare  @strТекстSQLЗапроса as nvarchar(4000)
			|create table #ls (id_tt_ls int ,id_tov_ls int, date_ls date, id_kontr_ls int, Chastota real,sales_ls real , checks_1  int, checks_2 int ,konost_ls real) 
            |
			|SET @strТекстSQLЗапроса = '
			|insert into #ls
			|exec ( ''
			|  SELECT
			|   id_tt_ls  ,id_tov_ls , date_ls , id_kontr_ls, Chastota ,sales_ls , checks_1, checks_2 ,konost_ls 
			|   FROM  vv03.[dbo].[Lost_sales] as LostSales2 (nolock)
			|  WHERE LostSales2.date_ls BETWEEN '''" + ВнешниеДанные.ФорматПоля(мДатаНачала) + "'''
			|  AND '''" + ВнешниеДанные.ФорматПоля(КонецДня(мДатаОкончания)) + "'''
			|  AND     LostSales2.Chastota > 0
			|  AND LostSales2.sales_ls > 0
			|  AND LostSales2.id_kontr_ls IS NOT NULL
			| '')  at [SRV-SQL03]
            |
			|'
			|exec sp_executeSQL @strТекстSQLЗапроса		 
            |
			|;
			|SELECT
			| tabuidytov.UID as TovarUID,
			| _tovari.name_tov as name_tov,
			| _kontragenty.id_kontr as id_kontr,
			| _kontragenty.nova_kontr as nova_kontr,
			| _tovari.name_tov + ' [' + _kontragenty.nova_kontr + ']' as TovarProizv,
			| CAST(CAST(CONVERT(CHAR(8), LostSales.date_ls, 112) as DATETIME) as INTEGER)/7-5705 as NomerNedeli,
			| SUM(LostSales.sales_ls) / SUM(LostSales.checks_1 + CASE WHEN LostSales.konost_ls >= 0.1 THEN LostSales.checks_2 ELSE 0 END) * 10 as _Chastota
			|FROM #ls as LostSales (nolock)
			| INNER JOIN
			|  [M2].[dbo].[tovari] as _tovari (nolock)
			| ON _tovari.id_tov = LostSales.id_tov_ls
			| INNER JOIN
			|  [M2].[dbo].[kontr] as _kontragenty (nolock)
			| ON _kontragenty.id_kontr = LostSales.id_kontr_ls
			| INNER JOIN
			|  [M2].[dbo].[tt] as _tt (nolock)
			| ON _tt.id_TT = LostSales.id_TT_ls
			| LEFT OUTER JOIN
			|  #tabuidytov as tabuidytov (nolock)
			| ON LostSales.id_tov_ls = tabuidytov.ID
			|WHERE " + ТекстУсловияПоДатам1 + "
			|  LostSales.Chastota > 0
			| AND LostSales.sales_ls > 0
			| AND _tt.tt_format <> 2
			| AND LostSales.id_tov_ls IN (
			|  SELECT
			|   VremTable.id_tov_ls
			|  FROM (
			|   SELECT
			|   LostSales2.id_tov_ls,
			|   LostSales2.id_kontr_ls
			|   FROM   #ls as LostSales2 (nolock)
			|	INNER JOIN
			|	[M2].[dbo].[tt] as _tt2 (nolock)
			|	ON _tt2.id_TT = LostSales2.id_TT_ls
			|   WHERE " + ТекстУсловияПоДатам2 + "
			|         LostSales2.Chastota > 0
			|  AND LostSales2.sales_ls > 0
			|  AND _tt2.tt_format <> 2
			|   AND LostSales2.id_kontr_ls IS NOT NULL
			|   GROUP BY
			|   LostSales2.id_tov_ls,
			|   LostSales2.id_kontr_ls) as VremTable
			| GROUP BY
			|   VremTable.id_tov_ls
			| HAVING
			|   COUNT(VremTable.id_kontr_ls) > 1)
			|GROUP BY
			| tabuidytov.UID,
			| _tovari.name_tov,
			| _kontragenty.id_kontr,
			| _kontragenty.nova_kontr,
			| _tovari.name_tov + ' [' + _kontragenty.nova_kontr + ']',
			| CAST(CAST(CONVERT(CHAR(8), LostSales.date_ls, 112) as DATETIME) as INTEGER)/7-5705
			|;
			|DROP TABLE
			| #tabuidytov
			|drop table #ls ";
	
	Выборка = ADOСоединение.Execute(ТекстЗапроса);
	
	ТабДанные = Новый ТаблицаЗначений;
	ТабДанные.Колонки.Добавить("Товар"			, Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТабДанные.Колонки.Добавить("Характеристика"	, Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ТабДанные.Колонки.Добавить("Производитель"	, Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТабДанные.Колонки.Добавить("ТоварПроизв"	, Новый ОписаниеТипов("Строка"));
	Для н = 1 По мКоличествоНедель Цикл
		ТабДанные.Колонки.Добавить("Частота" + Формат(н, "ЧГ="), мТипЧисло);
	КонецЦикла;
	
	МассивТоварПроизв 	= Новый Массив;
	МассивТовар 		= Новый Массив;
	
	Пока НЕ Выборка = Неопределено Цикл
		Если Выборка.Fields.Count > 0 Тогда
			Пока НЕ Выборка.EOF Цикл
				
				ТекТоварПроизв 		= Выборка.Fields("TovarProizv").Value;
				ТекПроизводитель 	= Справочники.Контрагенты.НайтиПоРеквизиту("ИД", Выборка.Fields("id_kontr").Value);
				
				НайденнаяСтрока = ТабДанные.Найти(ТекТоварПроизв, "ТоварПроизв");
				Если НЕ НайденнаяСтрока = Неопределено Тогда
					НоваяСтрока = НайденнаяСтрока;
				Иначе
					НоваяСтрока = ТабДанные.Добавить();
					НоваяСтрока.ТоварПроизв 	= ТекТоварПроизв;
					НоваяСтрока.Производитель 	= ТекПроизводитель;
					Если НЕ Выборка.Fields("TovarUID").Value = NULL Тогда
						мУникальныйИД = Новый УникальныйИдентификатор(Сред(Выборка.Fields("TovarUID").Value, 2, 36));
						НоваяСтрока.Товар	= СпрНоменклатура.ПолучитьСсылку(мУникальныйИД);
						
						НоваяСтрока.Характеристика = ДопМодульСервер.ПолучитьХарактеристикуНоменклатуры(ТекПроизводитель, НоваяСтрока.Товар);
					КонецЕсли;
				КонецЕсли;
				
				ТекНомерНедели = Выборка.Fields("NomerNedeli").Value;
				Попытка
					ИндексНедели = МассивНедель.Найти(ТекНомерНедели);
					Если НЕ ИндексНедели = Неопределено Тогда
						НоваяСтрока["Частота" + Формат(ИндексНедели + 1, "ЧГ=")] = Окр(Выборка.Fields("_Chastota").Value, 2);
					КонецЕсли;
				Исключение
				КонецПопытки;

				Если МассивТовар.Найти(НоваяСтрока.Товар) = Неопределено Тогда
					МассивТовар.Добавить(НоваяСтрока.Товар);
				КонецЕсли;
				
				Если НЕ Выборка.EOF Тогда
					Выборка.MoveNext();
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		Выборка = Выборка.NextRecordSet();
	КонецЦикла;
	
	ADOСоединение.Close();		
	
	
	// поступило на склад за период
	ТабДанные.Колонки.Добавить("Поступило", мТипЧисло);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТабДанные"		, ТабДанные);
	Запрос.УстановитьПараметр("ДатаНачала"		, мДатаОкончания - 6 * 86400);
	Запрос.УстановитьПараметр("ДатаОкончания"	, КонецДня(мДатаОкончания));
	мТекстЧастоты = "";
	Для н = 1 По мКоличествоНедель Цикл
		мТекстЧастоты = мТекстЧастоты + ",
	|	ТабДанные.Частота" + Формат(н, "ЧГ=");
	КонецЦикла;
	мПоследняяНеделя = Формат(мКоличествоНедель, "ЧГ=");
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТабДанные.Товар,
	|	ТабДанные.Характеристика,
	|	ТабДанные.Производитель,
	|	ТабДанные.ТоварПроизв" + мТекстЧастоты + "
	|ПОМЕСТИТЬ ВТТабДанные
	|ИЗ
	|	&ТабДанные КАК ТабДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыНаСкладах.Номенклатура,
	|	ТоварыНаСкладах.Характеристика,
	|	СУММА(ТоварыНаСкладах.Количество) КАК Количество
	|ПОМЕСТИТЬ ВТПоступило
	|ИЗ
	|	РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
	|ГДЕ
	|	ТоварыНаСкладах.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ТоварыНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ТоварыНаСкладах.Склад.ВидСклада = ЗНАЧЕНИЕ(Перечисление.ВидыСкладов.Оптовый)
	|	И ТоварыНаСкладах.Регистратор ССЫЛКА Документ.ПриходныйОрдерСклад
	|	И ВЫРАЗИТЬ(ТоварыНаСкладах.Регистратор КАК Документ.ПриходныйОрдерСклад).ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ОтПоставщика)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаСкладах.Номенклатура,
	|	ТоварыНаСкладах.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена
	|ПОМЕСТИТЬ ВТЦены
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, НЕ Номенклатура.Выведена) КАК ЦеныНоменклатурыСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЦеныНоменклатуры.Номенклатура КАК Номенклатура,
	|			МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
	|		ИЗ
	|			РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|		ГДЕ
	|			НЕ ЦеныНоменклатуры.Номенклатура.Выведена
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЦеныНоменклатуры.Номенклатура) КАК ВложенныйЗапрос
	|		ПО ЦеныНоменклатурыСрезПоследних.Номенклатура = ВложенныйЗапрос.Номенклатура
	|			И ЦеныНоменклатурыСрезПоследних.Период = ВложенныйЗапрос.Период
	|		
	|СГРУППИРОВАТЬ ПО
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабДанные.Товар,
	|	ТабДанные.Характеристика,
	|	ТабДанные.Производитель,
	|	ТабДанные.ТоварПроизв" + мТекстЧастоты + ",
	|	ЕСТЬNULL(ВТПоступило.Количество, 0) КАК Поступило,
	|	ЕСТЬNULL(ВТЦены.Цена, 0) КАК Цена
	|ПОМЕСТИТЬ ВТПромежуточная
	|ИЗ
	|	ВТТабДанные КАК ТабДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоступило КАК ВТПоступило
	|		ПО (ВТПоступило.Номенклатура = ТабДанные.Товар)
	|			И (ВТПоступило.Характеристика = ТабДанные.Характеристика)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЦены КАК ВТЦены
	|		ПО (ВТЦены.Номенклатура = ТабДанные.Товар)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабДанные.Товар,
	|	ТабДанные.Характеристика,
	|	ТабДанные.Производитель,
	|	ТабДанные.ТоварПроизв" + мТекстЧастоты + ",
	|	ТабДанные.Поступило,
	|	ТабДанные.Цена,
	|	ТабДанные.Частота" + мПоследняяНеделя + " КАК ЧастотаПоследняя
	|ИЗ
	|	ВТПромежуточная КАК ТабДанные
	|ГДЕ
	|	НЕ ТабДанные.Частота" + мПоследняяНеделя + " = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТТабДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПоступило
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТЦены
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПромежуточная";
	
	ТабДанные = Запрос.Выполнить().Выгрузить();
	
	
	
	// доп. обработка таблиц
	//
	ТабДанные.Колонки.Добавить("Тенденция"		, мТипЧисло);
	ТабДанные.Колонки.Добавить("Отношение"		, мТипЧисло);
	ТабДанные.Колонки.Добавить("ПотеряВыручки"	, мТипЧисло);
	
	СтруктураОтбора 	= Новый Структура("ТоварПроизв");
	СтруктураОтбораТов 	= Новый Структура("Товар");
	
	Если мСчитатьПоТенденции Тогда
		Для Каждого СтрокаТаблицы Из ТабДанные Цикл
			
			// расчет тенденции по методу наименьших квадратов
			Сумма_х  = 0;
			Сумма_у  = 0;
			Сумма_х2 = 0;
			Сумма_ху = 0;

			n = 0;
			Для Ном = 1 По мКоличествоНедель Цикл
				ТекЧастота = СтрокаТаблицы["Частота" + Формат(Ном, "ЧГ=")];
				Если ТекЧастота = 0 Тогда // продаж не было в эту неделю
					Продолжить;
				КонецЕсли;
				ТекНомерНедели 	= МассивНедель[Ном - 1];
				Сумма_х  = Сумма_х  + ТекНомерНедели;
				Сумма_у  = Сумма_у  + ТекЧастота;
				Сумма_х2 = Сумма_х2 + ТекНомерНедели * ТекЧастота;
				Сумма_ху = Сумма_ху + ТекНомерНедели * ТекЧастота;
				n = n + 1;
			КонецЦикла;

			а = ((n * Сумма_ху) - (Сумма_х * Сумма_у)) / ((n * Сумма_х2) - (Сумма_х * Сумма_х));
			б = (Сумма_у - (а * Сумма_х)) / n;
			
			мТенденция = Окр(а * (МассивНедель[n - 1] + 1) + б, 3);
			
			СтрокаТаблицы.Тенденция = мТенденция;
			                                      
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого ТекТовар Из МассивТовар Цикл
		
		СтруктураОтбораТов.Товар = ТекТовар;
		СтрокиТаблицы = ТабДанные.НайтиСтроки(СтруктураОтбораТов); // столько строк, сколько недель на вывод
		
		ПолеТенденция = ?(мСчитатьПоТенденции, "Тенденция", "ЧастотаПоследняя");
		
		МинТенденция 	= 0;
		МаксТенденция 	= 0;
		Для Каждого СтрокаТЗ Из СтрокиТаблицы Цикл
			Если СтрокаТЗ[ПолеТенденция] < МинТенденция
					ИЛИ МинТенденция = 0 Тогда
				МинТенденция = СтрокаТЗ[ПолеТенденция];
			КонецЕсли;
			Если СтрокаТЗ[ПолеТенденция] > МаксТенденция Тогда
				МаксТенденция = СтрокаТЗ[ПолеТенденция];
			КонецЕсли;
		КонецЦикла;
		МинОтношение = ?(МаксТенденция > 0, МинТенденция * 100 / МаксТенденция, 0);
		Если МинОтношение > (мМаксЧастота * 100) Тогда // удалить строки для вывода, в которых отношение больше максимального
			Для Каждого СтрокаТЗ Из СтрокиТаблицы Цикл
				ТабДанные.Удалить(СтрокаТЗ);
			КонецЦикла;
			Продолжить; // не обрабатывать дальше
		КонецЕсли;
		
		ПослЧастотаМакс = 0;
		МинОтношение = Окр(МинОтношение, 0);
		Для Каждого СтрокаТЗ Из СтрокиТаблицы Цикл
			Если СтрокаТЗ[ПолеТенденция] = МинТенденция Тогда
				СтрокаТЗ.Отношение = МинОтношение;
			ИначеЕсли СтрокаТЗ[ПолеТенденция] = МаксТенденция Тогда
				СтрокаТЗ.Отношение = 100;
				ПослЧастотаМакс = СтрокаТЗ.ЧастотаПоследняя;
			Иначе
				Если НЕ мВыводитьВсехПроизводителей Тогда
					ТабДанные.Удалить(СтрокаТЗ);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;		
		
		СтрокиТаблицы = ТабДанные.НайтиСтроки(СтруктураОтбораТов);
		Для Каждого СтрокаТЗ Из СтрокиТаблицы Цикл
			Если СтрокаТЗ.Отношение > 0
					И НЕ СтрокаТЗ.Отношение = 100 Тогда
				СтрокаТЗ.ПотеряВыручки = ?(НЕ СтрокаТЗ.ЧастотаПоследняя = 0,
					СтрокаТЗ.Цена * СтрокаТЗ.Поступило * (ПослЧастотаМакс - СтрокаТЗ.ЧастотаПоследняя) / СтрокаТЗ.ЧастотаПоследняя, 0);
			КонецЕсли;
		КонецЦикла;		
		
	КонецЦикла;
	
	Возврат ТабДанные;
	
КонецФункции
