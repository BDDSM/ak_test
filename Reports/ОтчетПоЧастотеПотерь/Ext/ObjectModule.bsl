
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	//
	МассивНедель = Новый Массив;
	мДата 			= ЭтотОбъект.ДатаНачала;
	мДатаОкончания 	= КонецДня(ЭтотОбъект.ДатаОкончания);
	Пока мДата < мДатаОкончания Цикл
		МассивНедель.Добавить(ДопМодульСервер.ПолучитьНомерНеделиПоДате(мДата));
		мДата = мДата + 7*86400;
	КонецЦикла;
	мКоличествоНедель = МассивНедель.Количество();
	
	ПолеКомпоновкиЧастотаПоследняя = Новый ПолеКомпоновкиДанных("ЧастотаПоследняя");
	
	ЭлементыПолейВыбора = КомпоновщикНастроек.Настройки.Выбор.Элементы;
	Для Каждого ПолеВыбора Из ЭлементыПолейВыбора Цикл
		Для н = 1 По мКоличествоНедель Цикл
			Если ПолеВыбора.Поле = Новый ПолеКомпоновкиДанных("Частота" + Формат(н, "ЧГ=")) Тогда
				ПолеВыбора.Заголовок = Формат(МассивНедель[н - 1], "ЧГ=");
			КонецЕсли;
		КонецЦикла;
		Если ПолеВыбора.Поле = ПолеКомпоновкиЧастотаПоследняя Тогда
			ПолеВыбора.Заголовок = "Неделя " + Формат(МассивНедель[мКоличествоНедель - 1], "ЧГ=");
		КонецЕсли;
	КонецЦикла;
	
	
	////////////////////////////////
	//// Получение данных и вывод //
	////////////////////////////////
    СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДатаНачала"	, ЭтотОбъект.ДатаНачала);
	СтруктураПараметров.Вставить("ДатаОкончания", ЭтотОбъект.ДатаОкончания);
	СтруктураПараметров.Вставить("МаксЧастота"	, ЭтотОбъект.МаксЧастота);
	СтруктураПараметров.Вставить("ВыводитьВсехПроизводителей"	, ЭтотОбъект.ВыводитьВсехПроизводителей);
	СтруктураПараметров.Вставить("СчитатьПоТенденции"			, ЭтотОбъект.СчитатьПоТенденции);
	ТаблицаДанных = Отчеты.ОтчетПоЧастотеПотерь.ПолучитьТаблицуПотерь(СтруктураПараметров);

	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ДанныеДляФормирования", ТаблицаДанных);
	
	//Макет компоновки 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	
	//Компоновка данных
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	//Вывод результата
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры
