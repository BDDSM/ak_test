
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ДатаНачала = '00010101';
	ДатаКонца = '00010101';
	НоменклатураОтбор = Неопределено;
	СкладОтбор = Неопределено;
	Для Каждого ПользПоле Из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(ПользПоле) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
			И Строка(ПользПоле.Параметр) = "Период" Тогда
			ДатаНачала = ПользПоле.Значение.ДатаНачала;
			ДатаКонца = ПользПоле.Значение.ДатаОкончания;
		КонецЕсли;
		Если ТипЗнч(ПользПоле) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			Если ТипЗнч(ПользПоле.ПравоеЗначение) = Тип("СправочникСсылка.Номенклатура")
				И ПользПоле.Использование = Истина
				И ПользПоле.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно
				И ЗначениеЗаполнено(ПользПоле.ПравоеЗначение)
				И НЕ ПользПоле.ПравоеЗначение.ЭтоГруппа Тогда
				НоменклатураОтбор = ПользПоле.ПравоеЗначение;
			КонецЕсли;	
			Если ТипЗнч(ПользПоле.ПравоеЗначение) = Тип("СправочникСсылка.СтруктурныеЕдиницы")
				И ПользПоле.Использование = Истина
				И ПользПоле.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно
				И ЗначениеЗаполнено(ПользПоле.ПравоеЗначение) Тогда
				СкладОтбор = ПользПоле.ПравоеЗначение;
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
	
	ПервыйПроход = Истина;
	Пока ДатаКонца >= ДатаНачала Цикл
		Если ПервыйПроход Тогда
			ТабДанные = Отчеты.НехваткаТовараПересорт.ПолучитьДанныеДляОтчета(ДатаНачала, НоменклатураОтбор, СкладОтбор, Истина);
		Иначе
			ТабВрем = Отчеты.НехваткаТовараПересорт.ПолучитьДанныеДляОтчета(ДатаНачала, НоменклатураОтбор, СкладОтбор, Истина);
			Для Каждого СтрокаТаб Из ТабВрем Цикл
				ЗаполнитьЗначенияСвойств(ТабДанные.Добавить(), СтрокаТаб);
			КонецЦикла;	
		КонецЕсли;	
		ПервыйПроход = Ложь;
		ДатаНачала = ДатаНачала + 86400;
	КонецЦикла;	
	
	СтандартнаяОбработка = Ложь;
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТабДанные", ТабДанные);
	
	//Макет компоновки 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	
	//Компоновка данных
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	//Вывод результата
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры
