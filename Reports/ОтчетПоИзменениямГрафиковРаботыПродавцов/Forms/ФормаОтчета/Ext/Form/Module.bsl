
&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	// Запретим стандартную обработку расшифровки
	СтандартнаяОбработка = Ложь;
	
	ФормаРасшифровка = ПолучитьФорму("Отчет.ОтчетПоИзменениямГрафиковРаботыПродавцов_Расшифровка.Форма.ФормаОтчета",, Новый УникальныйИдентификатор);
	
	ДатаВыходаИзОтбора = Дата(1,1,1);
	ЗаполнитьОтборыВКомпановке(Расшифровка, ДанныеРасшифровки, ФормаРасшифровка.Отчет.КомпоновщикНастроек, ДатаВыходаИзОтбора);
	
	// Заполним параметры
	ЗаполнитьПараметрыРасшифровки(ФормаРасшифровка.Отчет.КомпоновщикНастроек,ДанныеРасшифровки, ДатаВыходаИзОтбора); 
	
	ФормаРасшифровка.Открыть();
	
	ФормаРасшифровка.СкомпоноватьРезультат();
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьОтборыВКомпановке(Расшифровка, ДанныеРасшифровки, КомпоновщикНастроек, ДатаВыходаИзОтбора)
	
	МассивПолейРасшифровки = Новый Массив;
	
	Если ТипЗнч(Расшифровка) <> Тип("ИдентификаторРасшифровкиКомпоновкиДанных") 
		И ТипЗнч(Расшифровка) <> Тип("ДанныеРасшифровкиКомпоновкиДанных") Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийОтчет = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	
	// Добавим поля родительских группировок
	ДобавитьРодителей(ПолучитьИзВременногоХранилища(ДанныеРасшифровки).Элементы[Расшифровка], ТекущийОтчет, МассивПолейРасшифровки, Ложь);
	
	Количество = МассивПолейРасшифровки.Количество();
	Для Индекс = 1 По Количество Цикл
		ОбратныйИндекс = Количество - Индекс;
		Для ИндексВнутри = 0 По ОбратныйИндекс - 1 Цикл
			Если МассивПолейРасшифровки[ОбратныйИндекс].Поле = МассивПолейРасшифровки[ИндексВнутри].Поле Тогда
				МассивПолейРасшифровки.Удалить(ОбратныйИндекс);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Добавим отбор, установленный в отчете
	Для каждого ЭлементОтбора Из ТекущийОтчет.Настройки.Отбор.Элементы Цикл
		Если Не ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		МассивПолейРасшифровки.Добавить(ЭлементОтбора);
	КонецЦикла;
	
	СписокПолейОтборов = Новый Массив;
	Для каждого Отбор из МассивПолейРасшифровки Цикл
		Если ТипЗнч(Отбор) = Тип("ЗначениеПоляРасшифровкиКомпоновкиДанных") тогда
			
			Если Отбор.Значение = NULL тогда
				Продолжить;
			КонецЕсли;
			
			// Это передать в параметр
			Если Отбор.Поле = "Дата" Тогда
				ДатаВыходаИзОтбора = Отбор.Значение; 
				Продолжить;
			КонецЕсли;
			
			ДобавитьОтбор(КомпоновщикНастроек, Отбор.Поле, Отбор.Значение);
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивПолейРасшифровки(Расшифровка, ДанныеРасшифровки)
	
	МассивПолейРасшифровки = Новый Массив;
	
	Если ТипЗнч(Расшифровка) <> Тип("ИдентификаторРасшифровкиКомпоновкиДанных") 
		И ТипЗнч(Расшифровка) <> Тип("ДанныеРасшифровкиКомпоновкиДанных") Тогда
		Возврат МассивПолейРасшифровки;
	КонецЕсли;
	
	ТекущийОтчет = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	
	// Добавим поля родительских группировок
	ДобавитьРодителей(ПолучитьИзВременногоХранилища(ДанныеРасшифровки).Элементы[Расшифровка], ТекущийОтчет, МассивПолейРасшифровки, Ложь);
	
	Количество = МассивПолейРасшифровки.Количество();
	Для Индекс = 1 По Количество Цикл
		ОбратныйИндекс = Количество - Индекс;
		Для ИндексВнутри = 0 По ОбратныйИндекс - 1 Цикл
			Если МассивПолейРасшифровки[ОбратныйИндекс].Поле = МассивПолейРасшифровки[ИндексВнутри].Поле Тогда
				МассивПолейРасшифровки.Удалить(ОбратныйИндекс);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// Добавим отбор, установленный в отчете
	Для каждого ЭлементОтбора Из ТекущийОтчет.Настройки.Отбор.Элементы Цикл
		Если Не ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		МассивПолейРасшифровки.Добавить(ЭлементОтбора);
	КонецЦикла;
	
	Возврат МассивПолейРасшифровки;
	
КонецФункции

&НаСервере
Функция ДобавитьРодителей(ЭлементРасшифровки, ТекущийОтчет, МассивПолейРасшифровки, ВключатьРесурсы = Ложь)
	
	Если ТипЗнч(ЭлементРасшифровки) = Тип("ЭлементРасшифровкиКомпоновкиДанныхПоля") Тогда
		Для каждого Поле Из ЭлементРасшифровки.ПолучитьПоля() Цикл
			ДоступноеПоле = ПолучитьДоступноеПолеПоПолюКомпоновкиДанных(Новый ПолеКомпоновкиДанных(Поле.Поле), ТекущийОтчет);
			Если ДоступноеПоле = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Если Не ВключатьРесурсы И ДоступноеПоле.Ресурс Тогда
				Продолжить;
			КонецЕсли;
			МассивПолейРасшифровки.Добавить(Поле);
		КонецЦикла;
	КонецЕсли;
	Для каждого Родитель Из ЭлементРасшифровки.ПолучитьРодителей() Цикл
		ДобавитьРодителей(Родитель, ТекущийОтчет, МассивПолейРасшифровки, ВключатьРесурсы);
	КонецЦикла;
	
КонецФункции

&НаСервере
Функция ПолучитьДоступноеПолеПоПолюКомпоновкиДанных(ПолеКомпоновкиДанных, ОбластьПоиска)
	
	Если ТипЗнч(ПолеКомпоновкиДанных) = Тип("Строка") Тогда
		ПолеПоиска = Новый ПолеКомпоновкиДанных(ПолеКомпоновкиДанных);
	Иначе
		ПолеПоиска = ПолеКомпоновкиДанных;
	КонецЕсли;
	
	Если ТипЗнч(ОбластьПоиска) = Тип("КомпоновщикНастроекКомпоновкиДанных")
		ИЛИ ТипЗнч(ОбластьПоиска) = Тип("ДанныеРасшифровкиКомпоновкиДанных")
		ИЛИ ТипЗнч(ОбластьПоиска) = Тип("НастройкиВложенногоОбъектаКомпоновкиДанных") Тогда
		Возврат ОбластьПоиска.Настройки.ДоступныеПоляВыбора.НайтиПоле(ПолеПоиска);
	Иначе
		Возврат ОбластьПоиска.НайтиПоле(ПолеПоиска);
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ДобавитьОтбор(ЭлементСтруктуры, Знач Поле, Значение, ВидСравнения = Неопределено, Использование = Истина)
	
	Если ТипЗнч(Поле) = Тип("Строка") Тогда
		Поле = Новый ПолеКомпоновкиДанных(Поле);
	КонецЕсли;
	
	Если ТипЗнч(ЭлементСтруктуры) = Тип("КомпоновщикНастроекКомпоновкиДанных") Тогда
		Отбор = ЭлементСтруктуры.Настройки.Отбор;
	Иначе
		Отбор = ЭлементСтруктуры;
	КонецЕсли;
	
	Если ВидСравнения = Неопределено Тогда
		ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	КонецЕсли;
	
	Для Каждого ЭлементОтбора Из Отбор.Элементы Цикл
		
		Если ЭлементОтбора.ЛевоеЗначение = Поле Тогда
			ЭлементОтбора.Использование  = Использование;
			ЭлементОтбора.ВидСравнения   = ВидСравнения;
			ЭлементОтбора.ПравоеЗначение = Значение;
			
			// Пользовательские настройки
			ПараметрПользовательскойНастройки = ЭлементСтруктуры.ПользовательскиеНастройки.Элементы.Найти(ЭлементОтбора.ИдентификаторПользовательскойНастройки);
			Если ПараметрПользовательскойНастройки <> Неопределено Тогда
				ПараметрПользовательскойНастройки.Использование  = Истина;
				ПараметрПользовательскойНастройки.ВидСравнения   = ВидСравнения;
				ПараметрПользовательскойНастройки.ПравоеЗначение = Значение;
			КонецЕсли;
			
			Возврат ЭлементОтбора;
		КонецЕсли;
		
	КонецЦикла;
	
	НовыйЭлемент = Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	НовыйЭлемент.Использование  = Использование;
	НовыйЭлемент.ЛевоеЗначение  = Поле;
	НовыйЭлемент.ВидСравнения   = ВидСравнения;
	НовыйЭлемент.ПравоеЗначение = Значение;
	
	// Пользовательские настройки
	ПараметрПользовательскойНастройки = ЭлементСтруктуры.ПользовательскиеНастройки.Элементы.Найти(НовыйЭлемент.ИдентификаторПользовательскойНастройки);
	Если ПараметрПользовательскойНастройки <> Неопределено Тогда
		ПараметрПользовательскойНастройки.Использование  = Истина;
		ПараметрПользовательскойНастройки.ВидСравнения   = ВидСравнения;
		ПараметрПользовательскойНастройки.ПравоеЗначение = Значение;
	КонецЕсли;
	
	Возврат НовыйЭлемент;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПараметрыРасшифровки(ЭлементСтруктуры, ДанныеРасшифровки, ДатаВыходаИзОтбора)
	
	ТекущийОтчет = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	
	ПараметрыКомпановки = ТекущийОтчет.Настройки.ПараметрыДанных;
	
	Для Каждого ЗначениеПараметра Из ПараметрыКомпановки.Элементы Цикл
		
		ПараметрКД = ЭлементСтруктуры.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(ЗначениеПараметра.Параметр);
		Если ПараметрКД <> Неопределено Тогда
			
			ПараметрКД.Значение 	 = ЗначениеПараметра.Значение;
			ПараметрКД.Использование = ЗначениеПараметра.Использование;
			
			// Пользовательские настройки
			ПараметрПользовательскойНастройки = ЭлементСтруктуры.ПользовательскиеНастройки.Элементы.Найти(ПараметрКД.ИдентификаторПользовательскойНастройки);
			Если ПараметрПользовательскойНастройки <> Неопределено Тогда
				ПараметрПользовательскойНастройки.Использование = ПараметрКД.Использование;
				ПараметрПользовательскойНастройки.Значение 		= ПараметрКД.Значение;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// заполним параметр Дата
	ПараметрКД = ЭлементСтруктуры.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Дата"));
	Если ПараметрКД <> Неопределено Тогда
		
		ПараметрКД.Значение.Дата = ДатаВыходаИзОтбора;
		ПараметрКД.Использование = Истина;
		
		// Пользовательские настройки
		ПараметрПользовательскойНастройки = ЭлементСтруктуры.ПользовательскиеНастройки.Элементы.Найти(ПараметрКД.ИдентификаторПользовательскойНастройки);
		Если ПараметрПользовательскойНастройки <> Неопределено Тогда
			ПараметрПользовательскойНастройки.Использование = Истина;
			ПараметрПользовательскойНастройки.Значение.Дата	= ДатаВыходаИзОтбора;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

