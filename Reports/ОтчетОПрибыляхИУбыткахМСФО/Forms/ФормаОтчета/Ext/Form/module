////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ
//

Перем СоответствиеНастройкаРезультат Экспорт; // Соответствие, в котором хранятся все результаты при текущем открытии отчета
Перем ПредставлениеНастройки Экспорт;         // Представление настройки при редактировании отдельной настройки
Перем ПанельНастроекНарисована;               // Флаг, означающий что панель настроек после открытия нарисована
Перем ДействияЭлементовФормы Экспорт;         // Структура, содеражащая действия элементов формы, формируемых программно

// ДЕЙСТВИЯ С РЕЗУЛЬТАТОМ

Процедура ДействияСРезультатомПечатьНажатие(Элемент)
	
	ИнфокомТиповыеОтчеты.ПечатьТиповогоОтчета(ЭлементыФормы.Результат);
	
КонецПроцедуры

Процедура ДействияСРезультатомВывестиКопиюРезультатаВТабличныйДокумент(Кнопка)

	ИнфокомТиповыеОтчеты.ПоказатьКопиюРезультата(ЭлементыФормы.Результат);
	
КонецПроцедуры

Процедура ДействияСРезультатомСохранитьРезультатВНастройке(Кнопка)
	
	ИнфокомТиповыеОтчеты.СохранитьРезультатВНастройке(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ДействияСРезультатомСравнитьТекущийРезультатССохраненным(Кнопка)
	
	ИнфокомТиповыеОтчеты.СохранитьРезультатССохраненным(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ДействияСРезультатомЗаголовок(Кнопка)
	
	Кнопка.Пометка = Не Кнопка.Пометка;
	ИнфокомТиповыеОтчеты.УправлениеОтображениемЭлементовФормыТиповогоОтчета(ЭтотОбъект, ЭтаФорма);
	ИнфокомТиповыеОтчеты.УправлениеОтображениемЗаголовкаТиповогоОтчета(ЭтотОбъект, ЭтаФорма.ЭлементыФормы.Результат);
	
КонецПроцедуры

// ОБЩИЕ ПРОЦЕДУРЫ

Процедура ОбновитьОтчет() Экспорт
	
	СостояниеМодифицированности = Модифицированность;
	Если ПанельНастроекНарисована <> Истина Тогда
		ОбновлениеОтображения();
	КонецЕсли;
	ИнфокомТиповыеОтчеты.ЗагрузитьВРеквизитЗначенияНастроекПанелиПользователя(ЭтотОбъект, ЭтаФорма);
	ПараметрыПанели  = ИнфокомТиповыеОтчеты.ПолучитьПараметрыПанелиПользователяОбъекта(ОтчетОбъект);
	ЗначенияНастроек = ИнфокомТиповыеОтчеты.ПолучитьЗначенияНастроекПанелиПользователяОбъекта(ОтчетОбъект);
	// Установка Динамических отборов
	Отказ = ложь;
	Если ЗначенияНастроек.Свойство("ДинамическиеПараметры") И ПараметрыПанели.Свойство("Параметры") тогда
		Если ПараметрыПанели.Параметры.Колонки.Найти("Заполнено") <> Неопределено тогда
			СтрокиПарамтеровДляПроверки = ПараметрыПанели.Параметры.НайтиСтроки(Новый Структура("Заполнено", истина));
			Если СтрокиПарамтеровДляПроверки.Количество() > 0 тогда
				СтрокаПредупреждения = "Не заполнен(а)";
				Для каждого СтрокаПараметра Из СтрокиПарамтеровДляПроверки Цикл
					ЗначениеПараметра = ЗначенияНастроек.ДинамическиеПараметры[СтрокаПараметра.Параметр];
					Если ЗначениеПараметра = Неопределено или Не ЗначениеЗаполнено(ЗначениеПараметра.Значение) ИЛИ Не ЗначениеПараметра.Использование Тогда
						СтрокаПредупреждения = СтрокаПредупреждения + " " + СтрокаПараметра.Представление;
						Отказ = истина;
					КонецЕсли;
				КонецЦикла;
				Если Отказ тогда
					СтрокаПредупреждения = СтрокаПредупреждения + "!";
					Предупреждение(СтрокаПредупреждения);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Если Отказ тогда
		Возврат;
	КонецЕсли;
	СформироватьОтчет(ЭлементыФормы.Результат, ДанныеРасшифровки);
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ЭлементыФормы.Результат, Заголовок, Строка(ПараметрыСеанса.ТекущийПользователь));
	Модифицированность = СостояниеМодифицированности;
КонецПроцедуры

// ОБРАБОТЧИКИ КНОПОК ФОРМЫ

Процедура ДействияФормыСформировать(Кнопка)
	
	ОбновитьОтчет();
	
КонецПроцедуры

Процедура ДействияФормыСохранитьНастройку(Кнопка)
	
	ИнфокомТиповыеОтчеты.СохранитьТекущуюНастройку(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ДействияФормыСохранитьНастройкуКак(Кнопка)
	
	ИнфокомТиповыеОтчеты.СохранитьТекущуюНастройкуКак(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура КнопкаСписокВариантовНажатие(Кнопка)
	
	СохранениеНастроек.ВыбратьНастройкуФормы(СохраненнаяНастройка, ЭтаФорма, ИнфокомТиповыеОтчеты.ПолучитьИдентификаторОбъекта(ОтчетОбъект), Ложь);
	
	Если Не РежимРедактированияНастройки Тогда
		ИнфокомТиповыеОтчеты.ОбновитьТаблицуДоступныхНастроекПользователю(ЭтотОбъект);
		ИнфокомТиповыеОтчеты.ОбновитьКнопкиВыбораНастроек(ЭтаФорма, ЭтотОбъект, ПредставлениеНастройки, РежимРедактированияНастройки);
	КонецЕсли;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

Процедура ДействияФормыРедактироватьНастройкуСтруктуры(Кнопка)
	РезультатРедактирования = ИнфокомТиповыеОтчеты.РедактироватьСтруктуруОтчета(ЭтотОбъект, ЭтаФорма);
	Если РезультатРедактирования Тогда
		ОбновитьОтчет();
	КонецЕсли;
КонецПроцедуры

Процедура ДействияФормыРедактироватьПанельПользователя(Кнопка)
	
	ИнфокомТиповыеОтчеты.РедактироватьПанельПользователя(ЭтотОбъект, ЭтаФорма);
		
КонецПроцедуры

Процедура ДействияФормыРедактироватьОписаниеИПользователей(Кнопка)
	
	ИнфокомТиповыеОтчеты.ОткрытьФормуСохраненнойНастройки(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура КоманднаяПанельПанельВариантов(Кнопка)
	
	Кнопка.Пометка = Не Кнопка.Пометка;
	ИнфокомТиповыеОтчеты.УправлениеОтображениемПанелиВариантов(ЭтаФорма);
	
КонецПроцедуры

Процедура КоманднаяПанельПанельПользователя(Кнопка)
	
	Кнопка.Пометка = Не Кнопка.Пометка;
	ИнфокомТиповыеОтчеты.УправлениеОтображениемПанелиПользователя(ЭтаФорма);
	
КонецПроцедуры

// ОБРАБОТЧИКИ ФОРМЫ

Процедура ПриОткрытии()
	
	// Реквизит формы и компоновщик отчета ссылаются на один компоновщик
	КомпоновщикНастроек = ЭтотОбъект.КомпоновщикНастроек;
	
	ИнфокомТиповыеОтчеты.ОбновитьТаблицуДоступныхНастроекПользователю(ЭтотОбъект);
	ИнфокомТиповыеОтчеты.УстановитьВариантПоУмолчанию(ЭтотОбъект, ЭтаФорма);
	
	// Нарисуем кнопки выбора настроек на верхней панели
	ИнфокомТиповыеОтчеты.ОбновитьКнопкиВыбораНастроек(ЭтаФорма, ЭтотОбъект, ПредставлениеНастройки, РежимРедактированияНастройки);
	ИнфокомТиповыеОтчеты.ОбновитьФормуТиповогоОтчетаПоКомпоновщику(ЭтотОбъект, ЭтаФорма);
	ИнфокомТиповыеОтчеты.УстановитьВидимостьПанелиВариантовПоУмолчанию(ЭтотОбъект, ЭтаФорма);
	ИнфокомТиповыеОтчеты.УстановитьВидимостьПанелиПользователяПоУмолчанию(ЭтотОбъект, ЭтаФорма);
	ИнфокомТиповыеОтчеты.ВосстановитьНастройкиФормыОтчета(ЭтотОбъект, ЭтаФорма);
	ИнфокомТиповыеОтчеты.УправлениеОтображениемПанелиВариантов(ЭтаФорма);
	ИнфокомТиповыеОтчеты.УправлениеОтображениемПанелиПользователя(ЭтаФорма);
	
	//ПараметрДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Проект");
	//ПараметрДанных.Использование = Истина;
	//
	//Если ПараметрДанных.Значение = Перечисления.ТипыРозничныхТочек.Магазин Тогда
	//	Проект = 1;
	//ИначеЕсли ПараметрДанных.Значение = Перечисления.ТипыРозничныхТочек.Избенка Тогда
	//	Проект = 2;
	//КонецЕсли;
	
КонецПроцедуры

Процедура ОбновлениеОтображения() Экспорт
	
	Если ПанельНастроекНарисована <> Истина И Не Модифицированность Тогда
		
		// Инициализация компоновщиков настроек и, если необходимо, загрузка настроек по умолчанию
		ЗагружатьНастройкиПоУмолчанию = Не РежимРедактированияНастройки И Не ЭтоОтработкаРасшифровки И СохраненнаяНастройка.Пустая();
		Схема = ИнфокомТиповыеОтчеты.ИнициализироватьКомпоновщикНастроек(ЭтотОбъект, , ЗагружатьНастройкиПоУмолчанию);
		КомпоновщикНастроекПользователя.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Схема));
		
		Если Не ЭтоОтработкаРасшифровки И Не РежимРедактированияНастройки Тогда
			ПрименитьНастройку();
			ИнфокомТиповыеОтчеты.ПрименитьНастройкуПользователяНастройкиОтчета(ЭтотОбъект);
			ИнфокомТиповыеОтчеты.ОбработкаФормыПослеПримененияНастройки(ЭтотОбъект, ЭтаФорма);
		Иначе
			// Отработаем изменение отображение панели настроек
			ИнфокомТиповыеОтчеты.УправлениеОтображениемЭлементовФормыТиповогоОтчета(ЭтотОбъект, ЭтаФорма);
			ИнфокомТиповыеОтчеты.ПерерисоватьПанельНастроек(ЭтотОбъект, ЭтаФорма, );
			
		КонецЕсли;
		
		ПанельНастроекНарисована = Истина;
		
	КонецЕсли;
	ИнфокомТиповыеОтчеты.ОбновитьЗаголовокТиповогоОтчета(ЭтотОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	ИнфокомТиповыеОтчеты.ОбработкаВыбораФормыОтчета(ЭтотОбъект, ЭтаФорма, ЗначениеВыбора, Источник);
	
КонецПроцедуры

Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	//
	СтандартнаяОбработка = Истина;
	ИнфокомТиповыеОтчеты.ОбработкаРасшифровкиТиповогоОтчета(Расшифровка, СтандартнаяОбработка, ЭтотОбъект, ЭтаФорма);
		
КонецПроцедуры

//+++ZEZA

//
//
Функция ПолучитьСтруктуруЗначенийРасшифровки(ДанныеРасшифровки, Индекс)
	
	//
	Соответствие = Новый Соответствие;
		
	//
	Родители = ДанныеРасшифровки.Элементы[Индекс].ПолучитьРодителей();
	Для Каждого Родитель Из Родители Цикл
		
		//
		_Соответствие = ПолучитьСтруктуруЗначенийРасшифровки(ДанныеРасшифровки, Родитель.Идентификатор);
		Для Каждого ЭлементСоотвествия Из _Соответствие Цикл
			
			//
			Соответствие.Вставить(ЭлементСоотвествия.Ключ, ЭлементСоотвествия.Значение);
			
		КонецЦикла;	
		
		//
		Попытка
			
			//
			Поля = Родитель.ПолучитьПоля();
			Для Каждого Поле Из Поля Цикл
				
				//
				Соответствие.Вставить(Поле.Поле, Поле.Значение);
				
			КонецЦикла;
			
		Исключение
		КонецПопытки;	
		
	КонецЦикла;	
	
	//
	Возврат Соответствие;
	
КонецФункции	

//
//
Функция ПолучитьРесурс(ДанныеРасшифровки, Индекс) 

	Поля = ДанныеРасшифровки.Элементы[Индекс].ПолучитьПоля();
	Результат = "Сумма";
	
	Для каждого Элемент из Поля Цикл
		
		Если ВРЕГ(Элемент.Поле) = "СУММАКОРР" ИЛИ ВРЕГ(Элемент.Поле) = "ПРОЦЕНТКОРР" тогда	
			Возврат "СуммаКорр";	
		ИначеЕсли ВРЕГ(Элемент.Поле) = "СУММАМСФО" ИЛИ ВРЕГ(Элемент.Поле) = "ПРОЦЕНТМСФО" тогда
			Возврат "СуммаМСФО";
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат "Сумма";
	
КонецФункции

//---ZEZA

Процедура КорректироватьРесурсВЗапросе(ТекстЗапроса,Ресурс)
	
	Если Ресурс = "Сумма" Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ (Ресурс = "СуммаКорр" ИЛИ Ресурс = "СуммаМСФО") Тогда
		Возврат;			
	КонецЕсли;	
	
	Если Ресурс = "СуммаКорр" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ФинансовыйОбороты.СуммаОборот","ФинансовыйОбороты.СуммаМСФООборот");
	КонецЕсли;	
	
	Если  Ресурс = "СуммаМСФО" Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ФинансовыйОбороты.СуммаОборотДт","(ФинансовыйОбороты.СуммаМСФООборотДт + ФинансовыйОбороты.1СуммаОборотДт)");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ФинансовыйОбороты.СуммаОборотКт","(ФинансовыйОбороты.СуммаМСФООборотКт + ФинансовыйОбороты.1СуммаОборотКт)");		
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ФинансовыйОбороты.СуммаОборот","(ФинансовыйОбороты.СуммаМСФООборот + ФинансовыйОбороты.СуммаОборот)");
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ФинансовыйОбороты.1СуммаОборот","ФинансовыйОбороты.СуммаОборот");
    КонецЕсли;
		
		
КонецПроцедуры	

Процедура РасшифроватьПоДокументам_Общий(Расшифровка)
	
	//
	СтруктураЗначенийРасшифровки = ПолучитьСтруктуруЗначенийРасшифровки(ДанныеРасшифровки, Расшифровка);
	
	Ресурс = ПолучитьРесурс(ДанныеРасшифровки, Расшифровка);	
	
	//
	РасшифровкаПоНоменклатуре = Ложь;
	
	//
	пПараметрПериод = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	
	//
	пКонтрагент = СтруктураЗначенийРасшифровки.Получить("Контрагент");
	
	//
	СтатьяДР_Код = СтруктураЗначенийРасшифровки.Получить("Статья.Код");
	СтатьяДР_Наименование = СтруктураЗначенийРасшифровки.Получить("Статья");
	СтатьяГруппировка = СтруктураЗначенийРасшифровки.Получить("ГруппаУр2");
	
	////пКонтрагент = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля()[0].Значение;
	//СтатьяДР_Код = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[1].Значение);
	//СтатьяДР_Наименование = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение);
	//Попытка 
	//	СтатьяГруппировка = ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;	
	//Исключение
	//	СтатьяГруппировка = ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;	
	//КонецПопытки;
			
	//
	ПериодВыводаГод = СтруктураЗначенийРасшифровки.Получить("Год"); 
	ПериодВыводаМесяц = СтруктураЗначенийРасшифровки.Получить("Месяц"); 
	
	//ПериодВыводаГод   = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;
	//ПериодВыводаМесяц = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[1].Значение;
	ПериодВывода = ДатаРасшифровки(ПериодВыводаМесяц, ПериодВыводаГод); 

	Если ЗначениеЗаполнено(ПериодВывода) И НачалоМесяца(ПериодВывода) >= НачалоДня(ЭлементыФормы.ДинамическийОтборДатаНачала.Значение) Тогда
		НачалоПериода = НачалоМесяца(ПериодВывода);
	Иначе
		НачалоПериода = НачалоДня(ЭлементыФормы.ДинамическийОтборДатаНачала.Значение);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПериодВывода) И КонецМесяца(ПериодВывода) <= КонецДня(ЭлементыФормы.ДинамическийОтборДатаОкончания.Значение) Тогда
		КонецПериода = КонецМесяца(ПериодВывода);
	Иначе
		КонецПериода = КонецДня(ЭлементыФормы.ДинамическийОтборДатаОкончания.Значение);
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ФормаРасшифровки = ПолучитьФорму("ФормаРасшифровки");  
	ФормаРасшифровки.СтатьяДР_Код = СтатьяДР_Код;
	ФормаРасшифровки.КлючУникальности = Новый УникальныйИдентификатор;
	ФормаРасшифровки.Открыть();
	//ТабДокумент = ФормаРасшифровки.Результат;
	
	//
	Запрос = Новый Запрос;
	Если СтатьяДР_Код = "01" Тогда				   
		СтатьяДР_Код = "1";
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	""01"" КАК Код,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	СУММА(-ФинансовыйОбороты.СуммаОборот) КАК Сумма
		               |ПОМЕСТИТЬ ВремТаб
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Счет В ИЕРАРХИИ (&СчетПродажи),
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Выручка)
		               |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |					ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |			,
		               |			) КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.Регистратор
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВремТаб.Документ,
		               |	ВремТаб.Сумма,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)) КАК Комментарий,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный КАК Автор,
		               |	ВремТаб.Документ.Контрагент КАК Контрагент
		               |ИЗ
		               |	ВремТаб КАК ВремТаб
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
		               |				&НачалоПериода,
		               |				&КонецПериода,
		               |				Счет В ИЕРАРХИИ (&СчетПродажи)
		               |					И ВЫРАЗИТЬ(Субконто2 КАК Справочник.СтатьиДоходовРасходов) В ИЕРАРХИИ (&Выручка)
		               |					И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |						ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |				,
		               |				) КАК ФинансовыйДвиженияССубконто
		               |		ПО ВремТаб.Документ = ФинансовыйДвиженияССубконто.Регистратор
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВремТаб.Документ,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)),
		               |	ВремТаб.Сумма
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ВремТаб.Документ.Дата";
					   			   
					   
		Запрос.УстановитьПараметр("Выручка", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("СчетПродажи", ПланыСчетов.Финансовый.Продажи);	
		
		ИначеЕсли СтатьяДР_Код = "21201" ИЛИ СтатьяДР_Код = "21202" 
			  ИЛИ СтатьяДР_Код = "21203" ИЛИ СтатьяДР_Код = "21208" 
			  ИЛИ СтатьяДР_Код = "20216"  ИЛИ СтатьяДР_Код = "20217" ИЛИ СтатьяДР_Код = "21206"  Тогда		
			
						   
		Запрос.Текст = "ВЫБРАТЬ
		               |	ФинансовыйОбороты.Счет КАК Счет,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	ФинансовыйОбороты.СуммаОборот КАК СуммаОборот,
		               |	ФинансовыйОбороты.СуммаОборот КАК Сумма,
		               |	ФинансовыйОбороты.КорСчет,
		               |	ФинансовыйОбороты.СуммаОборотДт КАК Недостача,
		               |	ФинансовыйОбороты.СуммаОборотКт КАК Излишки,
		               |	ФинансовыйОбороты.КоличествоКорОборот КАК Количество,
		               |	ФинансовыйОбороты.КоличествоКорОборотДт КАК КоличествоНедостача,
		               |	ФинансовыйОбороты.КоличествоКорОборотКт КАК КоличествоИзлишки,
		               |	ФинансовыйОбороты.КоличествоКорОборот КАК КоличествоОборот,
		               |	ВЫБОР
		               |		КОГДА ФинансовыйОбороты.КорСубконто2 ССЫЛКА Справочник.Номенклатура
		               |			ТОГДА ФинансовыйОбороты.КорСубконто2
		               |		КОГДА ФинансовыйОбороты.КорСубконто1 ССЫЛКА Справочник.Номенклатура
		               |			ТОГДА ФинансовыйОбороты.КорСубконто1
		               |	КОНЕЦ КАК Номенклатура,
		               |	ВЫБОР
		               |		КОГДА ФинансовыйОбороты.КорСубконто2 ССЫЛКА Справочник.Склады
		               |			ТОГДА ФинансовыйОбороты.КорСубконто2
		               |		КОГДА ФинансовыйОбороты.КорСубконто1 ССЫЛКА Справочник.Склады
		               |			ТОГДА ФинансовыйОбороты.КорСубконто1
		               |	КОНЕЦ КАК СкладИзПроводки,
		               |	ФинансовыйОбороты.Регистратор.Контрагент КАК Контрагент
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет.Родитель = &Счет44, , Субконто2 = &Затраты, КорСчет.Родитель <> &Счет90, ) КАК ФинансовыйОбороты";			   
					   
		//Запрос.УстановитьПараметр("ЗатратыПостоянные", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("3"));
		Запрос.УстановитьПараметр("Затраты", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
		Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Финансовый.ЗатратыДляРаспределения);
        Запрос.УстановитьПараметр("Счет442", ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения);
        Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		Запрос.УстановитьПараметр("КорСубконто2", МассивСтатейАмортизация());	
		       			                   		
		
	ИначеЕсли СтатьяДР_Код = "_20217" ИЛИ СтатьяДР_Код = "_21206" Тогда			 		                          
				   
					   Запрос.Текст = "ВЫБРАТЬ
					                  |	ФинансовыйОбороты.Счет КАК Счет,
					                  |	ФинансовыйОбороты.Регистратор КАК Документ,
					                  |	ФинансовыйОбороты.СуммаОборот КАК СуммаОборот,
					                  |	ФинансовыйОбороты.СуммаОборот КАК Сумма,
					                  |	ФинансовыйОбороты.КорСчет,
					                  |	ФинансовыйОбороты.СуммаОборотДт КАК Недостача,
					                  |	ФинансовыйОбороты.СуммаОборотКт КАК Излишки,
					                  |	ВЫБОР
					                  |		КОГДА ФинансовыйОбороты.КорСубконто2 ССЫЛКА Справочник.Номенклатура
					                  |			ТОГДА ФинансовыйОбороты.КорСубконто2
					                  |		КОГДА ФинансовыйОбороты.КорСубконто1 ССЫЛКА Справочник.Номенклатура
					                  |			ТОГДА ФинансовыйОбороты.КорСубконто1
					                  |	КОНЕЦ КАК Номенклатура,
					                  |	ВЫБОР
					                  |		КОГДА (ФинансовыйОбороты.Субконто1 ССЫЛКА Справочник.СтруктурныеЕдиницы
					                  |				ИЛИ ФинансовыйОбороты.Субконто1 ССЫЛКА Справочник.Склады)
					                  |				И НЕ ФинансовыйОбороты.Субконто1 = &Все
					                  |			ТОГДА ФинансовыйОбороты.Субконто1
					                  |		КОГДА (ФинансовыйОбороты.Субконто2 ССЫЛКА Справочник.СтруктурныеЕдиницы
					                  |				ИЛИ ФинансовыйОбороты.Субконто2 ССЫЛКА Справочник.Склады)
					                  |				И НЕ ФинансовыйОбороты.Субконто2 = &Все
					                  |			ТОГДА ФинансовыйОбороты.Субконто2
					                  |		КОГДА (ФинансовыйОбороты.КорСубконто1 ССЫЛКА Справочник.СтруктурныеЕдиницы
					                  |				ИЛИ ФинансовыйОбороты.КорСубконто1 ССЫЛКА Справочник.Склады)
					                  |				И НЕ ФинансовыйОбороты.КорСубконто1 = &Все
					                  |			ТОГДА ФинансовыйОбороты.КорСубконто1
					                  |		КОГДА (ФинансовыйОбороты.КорСубконто2 ССЫЛКА Справочник.СтруктурныеЕдиницы
					                  |				ИЛИ ФинансовыйОбороты.КорСубконто2 ССЫЛКА Справочник.Склады)
					                  |				И НЕ ФинансовыйОбороты.КорСубконто2 = &Все
					                  |			ТОГДА ФинансовыйОбороты.КорСубконто2
					                  |	КОНЕЦ КАК Склад,
					                  |	ФинансовыйОбороты.КоличествоКорОборот КАК Количество,
					                  |	ФинансовыйОбороты.КоличествоКорОборотДт КАК КоличествоНедостача,
					                  |	ФинансовыйОбороты.КоличествоКорОборотКт КАК КоличествоИзлишки,
					                  |	ФинансовыйОбороты.КоличествоКорОборот КАК КоличествоОборот,
					                  |	ФинансовыйОбороты.Регистратор.Контрагент КАК Контрагент
					                  |ИЗ
					                  |	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет.Родитель = &Счет44, , Субконто2 = &Затраты, КорСчет.Родитель <> &Счет90, ) КАК ФинансовыйОбороты";			   
		
					   
					   
		//Запрос.УстановитьПараметр("ЗатратыПостоянные", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("3"));
		Запрос.УстановитьПараметр("Затраты", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
		Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Финансовый.ЗатратыДляРаспределения);
        Запрос.УстановитьПараметр("Счет442", ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения);
        Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		Запрос.УстановитьПараметр("КорСубконто2",МассивСтатейАмортизация());	              		
		
	ИначеЕсли СтатьяДР_Код = "21205" ИЛИ СтатьяДР_Код = "21204" ИЛИ СтатьяДР_Код = "21207" Тогда
			 		                          
		ТекстЗапроса = "ВЫБРАТЬ
		               |	ФинансовыйОбороты.КорСчет КАК Счет,
		               |	ФинансовыйОбороты.Субконто1 КАК ТТ,
		               |	ФинансовыйОбороты.Субконто2 КАК СтатьяЗатрат,
		               |	ФинансовыйОбороты.КорСубконто3 КАК ЦФО,
		               |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот
		               |ПОМЕСТИТЬ ТЗ_БАЗА
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, Авто, Счет В (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ЗатратыТоварные), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ЗатратыОбщие), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ЗатратыТорговыхТочек), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ВыручкаТорговыхТочек)), , Субконто2 = &Затраты, КорСчет В (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ЗатратыТоварныеДляРаспределения), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ЗатратыТочекДляРаспределения), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ЗатратыДляОтнесенияНаИнвестиции)), ) КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.КорСчет,
		               |	ФинансовыйОбороты.Субконто1,
		               |	ФинансовыйОбороты.Субконто2,
		               |	ФинансовыйОбороты.КорСубконто3
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	Счет,
		               |	СтатьяЗатрат,
		               |	ЦФО
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот,
		               |	ФинансовыйОбороты.СтатьяЗатрат КАК СтатьяЗатрат,
		               |	ФинансовыйОбороты.ЦФО КАК ЦФО,
		               |	ФинансовыйОбороты.Счет КАК Счет
		               |ПОМЕСТИТЬ ТЗ_БАЗА_ОБЩИЙИТОГ
		               |ИЗ
		               |	ТЗ_БАЗА КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.СтатьяЗатрат,
		               |	ФинансовыйОбороты.ЦФО,
		               |	ФинансовыйОбороты.Счет
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	Счет,
		               |	СтатьяЗатрат,
		               |	ЦФО
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_БАЗА.Счет КАК Счет,
		               |	ТЗ_БАЗА.ТТ,
		               |	ТЗ_БАЗА.СтатьяЗатрат КАК СтатьяЗатрат,
		               |	ТЗ_БАЗА.ЦФО КАК ЦФО,
		               |	ТЗ_БАЗА.СуммаОборот КАК Сумма,
		               |	ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот КАК СуммаИтог,
		               |	ВЫБОР
		               |		КОГДА ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот = 0
		               |			ТОГДА 0
		               |		ИНАЧЕ ТЗ_БАЗА.СуммаОборот / ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот
		               |	КОНЕЦ КАК Коэффициент
		               |ПОМЕСТИТЬ ТЗ_КОЭФФИЦИЕНТЫ
		               |ИЗ
		               |	ТЗ_БАЗА КАК ТЗ_БАЗА
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_БАЗА_ОБЩИЙИТОГ КАК ТЗ_БАЗА_ОБЩИЙИТОГ
		               |		ПО ТЗ_БАЗА.Счет = ТЗ_БАЗА_ОБЩИЙИТОГ.Счет
		               |			И ТЗ_БАЗА.СтатьяЗатрат = ТЗ_БАЗА_ОБЩИЙИТОГ.СтатьяЗатрат
		               |			И ТЗ_БАЗА.ЦФО = ТЗ_БАЗА_ОБЩИЙИТОГ.ЦФО
		               |ГДЕ
		               |	НЕ ТЗ_БАЗА_ОБЩИЙИТОГ.Счет ЕСТЬ NULL 
		               |
		               |ИНДЕКСИРОВАТЬ ПО
		               |	Счет,
		               |	СтатьяЗатрат,
		               |	ЦФО
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ФинансовыйОбороты.Счет КАК Счет,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	ФинансовыйОбороты.СуммаОборот КАК СуммаОборот,
		               |	ФинансовыйОбороты.СуммаОборот * ЕСТЬNULL(ТЗ_КОЭФФИЦИЕНТЫ.Коэффициент, 0) КАК Сумма,
		               |	ФинансовыйОбороты.КорСчет,
		               |	ФинансовыйОбороты.СуммаОборотДт * ЕСТЬNULL(ТЗ_КОЭФФИЦИЕНТЫ.Коэффициент, 0) КАК Недостача,
		               |	ФинансовыйОбороты.СуммаОборотКт * ЕСТЬNULL(ТЗ_КОЭФФИЦИЕНТЫ.Коэффициент, 0) КАК Излишки,
		               |	ФинансовыйОбороты.Субконто1 КАК ТТ,
		               |	ВЫБОР
		               |		КОГДА ФинансовыйОбороты.КорСубконто2 ССЫЛКА Справочник.Номенклатура
		               |			ТОГДА ФинансовыйОбороты.КорСубконто2
		               |		КОГДА ФинансовыйОбороты.КорСубконто1 ССЫЛКА Справочник.Номенклатура
		               |			ТОГДА ФинансовыйОбороты.КорСубконто1
		               |	КОНЕЦ КАК Номенклатура,
		               |	ФинансовыйОбороты.Регистратор.Контрагент КАК Контрагент
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет В (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ЗатратыТоварныеДляРаспределения), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ЗатратыТочекДляРаспределения), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ЗатратыДляОтнесенияНаИнвестиции)), , Субконто2 = &Затраты, НЕ КорСчет В (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ЗатратыТоварные), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ЗатратыОбщие), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ЗатратыТорговыхТочек), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ВыручкаТорговыхТочек)), ) КАК ФинансовыйОбороты
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_КОЭФФИЦИЕНТЫ КАК ТЗ_КОЭФФИЦИЕНТЫ
		               |		ПО ФинансовыйОбороты.Счет = ТЗ_КОЭФФИЦИЕНТЫ.Счет
		               |			И ФинансовыйОбороты.Субконто2 = ТЗ_КОЭФФИЦИЕНТЫ.СтатьяЗатрат
		               |			И ФинансовыйОбороты.Субконто3 = ТЗ_КОЭФФИЦИЕНТЫ.ЦФО";
					   
				   
		ЗатратаОтбор = Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код));
		Если НЕ ЗатратаОтбор.ЭтоГруппа Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, " В ИЕРАРХИИ (&Затраты)", " = &Затраты");
		КонецЕсли;	
		Запрос.Текст = ТекстЗапроса;
		Запрос.УстановитьПараметр("Затраты", ЗатратаОтбор);
		//Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		//Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
		//Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Финансовый.ЗатратыДляРаспределения);
		//Запрос.УстановитьПараметр("Счет442", ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения);
		//Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		//Запрос.УстановитьПараметр("КорСубконто2", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("61010"));			
		
	ИначеЕсли СтатьяДР_Код = "10" Тогда				   
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	""10"" КАК Код,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	СУММА(-ФинансовыйОбороты.СуммаОборот) КАК Сумма
		               |ПОМЕСТИТЬ ВремТаб
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Счет В ИЕРАРХИИ (&Счет01),
		               |			,
		               |			НЕ КорСубконто2 В (&КорСубконто2)
		               |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |					ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |			,
		               |			) КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.Регистратор
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВремТаб.Документ,
		               |	ВремТаб.Сумма,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)) КАК Комментарий,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный КАК Автор,
		               |	ВремТаб.Документ.Контрагент КАК Контрагент
		               |ИЗ
		               |	ВремТаб КАК ВремТаб
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
		               |				&НачалоПериода,
		               |				&КонецПериода,
		               |				Счет В ИЕРАРХИИ (&Счет01)
		               |					И НЕ КорСубконто2 В (&КорСубконто2)
		               |					И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |						ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |				,
		               |				) КАК ФинансовыйДвиженияССубконто
		               |		ПО ВремТаб.Документ = ФинансовыйДвиженияССубконто.Регистратор
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВремТаб.Документ,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)),
		               |	ВремТаб.Сумма
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ВремТаб.Документ.Дата";
				   
		Запрос.УстановитьПараметр("Выручка", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("Счет01", ПланыСчетов.Финансовый.Инвестиции);	
		Запрос.УстановитьПараметр("КорСубконто2", МассивСтатейАмортизация());		   	 	
		
	ИначеЕсли (СтатьяДР_Код = "330"  ИЛИ СтатьяДР_Код = "05"
		 ИЛИ СтатьяДР_Код = "340" Или СтатьяДР_Код = "350" 
		 ИЛИ СтатьяДР_Код = "351" Или СтатьяДР_Код = "361" 
		 ИЛИ СтатьяДР_Код = "371" Или СтатьяДР_Код = "392"  
		 ИЛИ СтатьяДР_Код = "393" Или СтатьяДР_Код = "410" 
		 Или СтатьяДР_Код = "810" ИЛИ СтатьяДР_Код = "33010" 
		 Или СтатьяДР_Код = "33011" ИЛИ СтатьяДР_Код = "35023"
		 ИЛИ СтатьяДР_Код = "34010" Или СтатьяДР_Код = "34011" 
		 ИЛИ СтатьяДР_Код = "35010" Или СтатьяДР_Код = "35011" 
		 ИЛИ СтатьяДР_Код = "35113" Или СтатьяДР_Код = "36110"  
		 ИЛИ СтатьяДР_Код = "36120" Или СтатьяДР_Код = "36190" 
		 ИЛИ СтатьяДР_Код = "36198" Или СтатьяДР_Код = "36201" 
		 ИЛИ СтатьяДР_Код = "37110" Или СтатьяДР_Код = "37115"   
		 ИЛИ СтатьяДР_Код = "37120" Или СтатьяДР_Код = "37190"  
		 ИЛИ СтатьяДР_Код = "37195" ИЛИ СтатьяДР_Код = "37196" 
		 Или СтатьяДР_Код = "39230" 
		 ИЛИ СтатьяДР_Код = "39314" Или СтатьяДР_Код = "39320" 
		 ИЛИ СтатьяДР_Код = "39391" Или СтатьяДР_Код = "39397"
		 ИЛИ СтатьяДР_Код = "39399" Или СтатьяДР_Код = "41010"  
		 ИЛИ СтатьяДР_Код = "41020" Или СтатьяДР_Код = "41021" 
		 ИЛИ СтатьяДР_Код = "41022" Или СтатьяДР_Код = "41029"
		 ИЛИ СтатьяДР_Код = "41026" Или СтатьяДР_Код = "41030"
		 ИЛИ СтатьяДР_Код = "81010" Или СтатьяДР_Код = "81011"
		 ИЛИ СтатьяДР_Код = "81012" Или СтатьяДР_Код = "81013") И СтатьяГруппировка = "Общие расходы" Тогда 
		 
		 Если СтатьяДР_Код = "05" Тогда
		 	СтатьяДР_Код = "5";
		 КонецЕсли; 
		 //Запрос.Текст = "ВЫБРАТЬ
		 //			   |	ФинансовыйОбороты.КорСчет КАК Счет,
		 //			   |	ФинансовыйОбороты.Субконто1 КАК ТТ,
		 //			   |	ФинансовыйОбороты.Субконто2 КАК СтатьяЗатрат,
		 //			   |	ФинансовыйОбороты.КорСубконто3 КАК ЦФО,
		 //			   |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот
		 //			   |ПОМЕСТИТЬ ТЗ_БАЗА
		 //			   |ИЗ
		 //			   |	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, Авто, Счет В ИЕРАРХИИ (&Счет90), , ВЫРАЗИТЬ(Субконто2 КАК Справочник.СтатьиДоходовРасходов) В ИЕРАРХИИ (&Затраты), КорСчет = &Счет442, ) КАК ФинансовыйОбороты
		 //			   |
		 //			   |СГРУППИРОВАТЬ ПО
		 //			   |	ФинансовыйОбороты.КорСчет,
		 //			   |	ФинансовыйОбороты.Субконто1,
		 //			   |	ФинансовыйОбороты.Субконто2,
		 //			   |	ФинансовыйОбороты.КорСубконто3
		 //			   |;
		 //			   |
		 //			   |////////////////////////////////////////////////////////////////////////////////
		 //			   |ВЫБРАТЬ
		 //			   |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот,
		 //			   |	ФинансовыйОбороты.СтатьяЗатрат,
		 //			   |	ФинансовыйОбороты.ЦФО,
		 //			   |	ФинансовыйОбороты.Счет
		 //			   |ПОМЕСТИТЬ ТЗ_БАЗА_ОБЩИЙИТОГ
		 //			   |ИЗ
		 //			   |	ТЗ_БАЗА КАК ФинансовыйОбороты
		 //			   |
		 //			   |СГРУППИРОВАТЬ ПО
		 //			   |	ФинансовыйОбороты.СтатьяЗатрат,
		 //			   |	ФинансовыйОбороты.ЦФО,
		 //			   |	ФинансовыйОбороты.Счет
		 //			   |;
		 //			   |
		 //			   |////////////////////////////////////////////////////////////////////////////////
		 //			   |ВЫБРАТЬ
		 //			   |	ТЗ_БАЗА.Счет,
		 //			   |	ТЗ_БАЗА.ТТ,
		 //			   |	ТЗ_БАЗА.СтатьяЗатрат,
		 //			   |	ТЗ_БАЗА.ЦФО,
		 //			   |	ТЗ_БАЗА.СуммаОборот КАК Сумма,
		 //			   |	ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот КАК СуммаИтог,
		 //			   |	ВЫБОР
		 //			   |		КОГДА ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот = 0
		 //			   |			ТОГДА 0
		 //			   |		ИНАЧЕ ТЗ_БАЗА.СуммаОборот / ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот
		 //			   |	КОНЕЦ КАК Коэффициент
		 //			   |ПОМЕСТИТЬ ТЗ_КОЭФФИЦИЕНТЫ
		 //			   |ИЗ
		 //			   |	ТЗ_БАЗА КАК ТЗ_БАЗА
		 //			   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТЗ_БАЗА_ОБЩИЙИТОГ КАК ТЗ_БАЗА_ОБЩИЙИТОГ
		 //			   |		ПО ТЗ_БАЗА.Счет = ТЗ_БАЗА_ОБЩИЙИТОГ.Счет
		 //			   |			И ТЗ_БАЗА.СтатьяЗатрат = ТЗ_БАЗА_ОБЩИЙИТОГ.СтатьяЗатрат
		 //			   |			И ТЗ_БАЗА.ЦФО = ТЗ_БАЗА_ОБЩИЙИТОГ.ЦФО
		 //			   |;
		 //			   |
		 //			   |////////////////////////////////////////////////////////////////////////////////
		 //			   |ВЫБРАТЬ
		 //			   |	ФинансовыйОбороты.Счет КАК Счет,
		 //			   |	ФинансовыйОбороты.Субконто2 КАК СтатьяЗатрат,
		 //			   |	ФинансовыйОбороты.Субконто3 КАК ЦФО,
		 //			   |	ТЗ_КОЭФФИЦИЕНТЫ.ТТ КАК ТТ,
		 //			   |	ФинансовыйОбороты.Регистратор КАК Документ,
		 //			   |	ФинансовыйОбороты.СуммаОборот КАК СуммаОборот,
		 //			   |	ФинансовыйОбороты.СуммаОборот * ЕСТЬNULL(ТЗ_КОЭФФИЦИЕНТЫ.Коэффициент, 0) КАК Сумма,
		 //			   |	ФинансовыйОбороты.Регистратор.Комментарий КАК Комментарий,
		 //			   |	ФинансовыйОбороты.Регистратор.Ответственный КАК Автор,
		 //			   |	ФинансовыйДвиженияССубконто.Содержание КАК Содержание
		 //			   |ИЗ
		 //			   |	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет В ИЕРАРХИИ (&Счет442), , ВЫРАЗИТЬ(Субконто2 КАК Справочник.СтатьиДоходовРасходов) В ИЕРАРХИИ (&Затраты), НЕ КорСчет В ИЕРАРХИИ (&Счет90), ) КАК ФинансовыйОбороты
		 //			   |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_КОЭФФИЦИЕНТЫ КАК ТЗ_КОЭФФИЦИЕНТЫ
		 //			   |		ПО ФинансовыйОбороты.Счет = ТЗ_КОЭФФИЦИЕНТЫ.Счет
		 //			   |			И ФинансовыйОбороты.Субконто2 = ТЗ_КОЭФФИЦИЕНТЫ.СтатьяЗатрат
		 //			   |			И ФинансовыйОбороты.Субконто3 = ТЗ_КОЭФФИЦИЕНТЫ.ЦФО
		 //			   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(&НачалоПериода, &КонецПериода, СубконтоДт2 В ИЕРАРХИИ (&Затраты), , ) КАК ФинансовыйДвиженияССубконто
		 //			   |		ПО ФинансовыйОбороты.Регистратор = ФинансовыйДвиженияССубконто.Регистратор
		 //			   |			И ФинансовыйОбороты.Субконто2 = ФинансовыйДвиженияССубконто.СубконтоДт2
		 //			   |			И ФинансовыйОбороты.Субконто3 = ФинансовыйДвиженияССубконто.СубконтоДт3
		 //			   |			И ФинансовыйОбороты.СуммаОборот = ФинансовыйДвиженияССубконто.Сумма
		 //			   |			И ФинансовыйОбороты.Счет = ФинансовыйДвиженияССубконто.СчетДт
		 //			   |ГДЕ
		 //			   |	ВЫРАЗИТЬ(ФинансовыйОбороты.Субконто2 КАК Справочник.СтатьиДоходовРасходов) В ИЕРАРХИИ (&Затраты)
		 //			   |	И ВЫБОР
		 //			   |			КОГДА ФинансовыйОбороты.Субконто2 = &Статья37110
		 //			   |					ИЛИ ФинансовыйОбороты.Субконто2 = &Статья81010
		 //			   |				ТОГДА ИСТИНА
		 //			   |			ИНАЧЕ НЕ ФинансовыйОбороты.КорСубконто2 В ИЕРАРХИИ (&Затраты)
		 //			   |		КОНЕЦ";
						
						
						Запрос.Текст = "ВЫБРАТЬ
						               |	ФинансовыйОбороты.Счет КАК Счет,
						               |	ФинансовыйОбороты.Регистратор КАК Документ,
						               |	ФинансовыйОбороты.СуммаОборот КАК СуммаОборот,
						               |	ФинансовыйОбороты.СуммаОборот КАК Сумма,
						               |	ФинансовыйОбороты.КорСчет,
						               |	ФинансовыйОбороты.СуммаОборотДт КАК Недостача,
						               |	ФинансовыйОбороты.СуммаОборотКт КАК Излишки,
						               |	ФинансовыйОбороты.КоличествоКорОборот КАК Количество,
						               |	ФинансовыйОбороты.КоличествоКорОборотДт КАК КоличествоНедостача,
						               |	ФинансовыйОбороты.КоличествоКорОборотКт КАК КоличествоИзлишки,
						               |	ФинансовыйОбороты.КоличествоКорОборот КАК КоличествоОборот,
						               |	"""" КАК Содержание,
						               |	ФинансовыйОбороты.Регистратор.Комментарий КАК Комментарий,
						               |	ФинансовыйОбороты.Регистратор.Ответственный КАК Автор,
						               |	ВЫБОР
						               |		КОГДА ФинансовыйОбороты.КорСубконто2 ССЫЛКА Справочник.Номенклатура
						               |			ТОГДА ФинансовыйОбороты.КорСубконто2
						               |		КОГДА ФинансовыйОбороты.КорСубконто1 ССЫЛКА Справочник.Номенклатура
						               |			ТОГДА ФинансовыйОбороты.КорСубконто1
						               |	КОНЕЦ КАК Номенклатура,
						               |	ФинансовыйОбороты.Регистратор.Контрагент КАК Контрагент
						               |ИЗ
						               |	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет = &Счет442, , Субконто2 = &Затраты, КорСчет.Родитель <> &Счет90, ) КАК ФинансовыйОбороты";			   
					   

	
				   
		//Запрос.УстановитьПараметр("ЗатратыПостоянные", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("3"));
		Запрос.УстановитьПараметр("Затраты", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Статья37110", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("37110"));
		Запрос.УстановитьПараметр("Статья81010", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("81010"));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
		Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Финансовый.ЗатратыДляРаспределения);
        Запрос.УстановитьПараметр("Счет442", ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения);
        Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		Запрос.УстановитьПараметр("КорСубконто2", МассивСтатейАмортизация());
		
		
	ИначеЕсли СтатьяДР_Код = "102" Тогда	
		//Запрос = Новый Запрос;
		//Запрос.Текст = "ВЫБРАТЬ
		//			  |	НАЧАЛОПЕРИОДА(ФинансовыйОборотыДтКт.Период, МЕСЯЦ) КАК Поле4,
		//			  |	МЕСЯЦ(ФинансовыйОборотыДтКт.Период) КАК Поле5,
		//			  |	ГОД(ФинансовыйОборотыДтКт.Период) КАК Поле6,
		//			  |	-ФинансовыйОборотыДтКт.СуммаОборот КАК Поле11,
		//			  |	ФинансовыйОборотыДтКт.СубконтоДт1,
		//			  |	ФинансовыйОборотыДтКт.СубконтоДт2,
		//			  |	ФинансовыйОборотыДтКт.СубконтоДт3
		//			  |ИЗ
		//			  |	РегистрБухгалтерии.Финансовый.ОборотыДтКт(&НачалоПериода, &КонецПериода, Регистратор, СчетДт = &Счет411, , , , СубконтоДт3 = &СтатьяТД) КАК ФинансовыйОборотыДтКт";
		//			  
		//Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
		//Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));			  
		//Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Финансовый.ЗатратыДляРаспределения);
		//Запрос.УстановитьПараметр("Счет442", ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения);	
		
				
		ПараметрыСтруктура = Новый Структура;
		ПараметрыСтруктура.Вставить("СразуСформироватьОтчет", Истина);
		ПараметрыСтруктура.Вставить("НачалоПериода", НачалоДня(НачалоПериода));
		ПараметрыСтруктура.Вставить("КонецПериода", КонецДня(КонецПериода));
		//ПараметрыСтруктура.Вставить("Отбор", ОтборСтруктура);

		ФормаОтчетаРасшифровки = ПолучитьФорму("Отчет.АК_РасшифровкаКБДРДоставкаТовараНаСклад.Форма.ФормаОтчета", ПараметрыСтруктура);

		//ФормаОтчетаРасшифровки = Отчеты.АК_РасшифровкаКБДРДоставкаТовараНаСклад.ПолучитьФорму("ФормаОтчета", ПараметрыСтруктура); 
		ФормаОтчетаРасшифровки.Открыть(); 
		Возврат;
	ИначеЕсли СтатьяДР_Код = "101" Тогда	
		ПараметрыСтруктура = Новый Структура;
		ПараметрыСтруктура.Вставить("СразуСформироватьОтчет", Истина);
		ПараметрыСтруктура.Вставить("НачалоПериода", НачалоДня(НачалоПериода));
		ПараметрыСтруктура.Вставить("КонецПериода", КонецДня(КонецПериода));
		//ПараметрыСтруктура.Вставить("Отбор", ОтборСтруктура);

		ФормаОтчетаРасшифровки = ПолучитьФорму("Отчет.АК_РасшифровкаКБДРПоСебестоимостиИспользованнойУпаковки.Форма.ФормаОтчета", ПараметрыСтруктура);

		ФормаОтчетаРасшифровки.Открыть(); 
		
		Возврат;	
	ИначеЕсли СтатьяДР_Код = "20410" ИЛИ СтатьяДР_Код = "20412" 
		ИЛИ СтатьяДР_Код = "21001"  ИЛИ СтатьяДР_Код = "20110" 
		ИЛИ СтатьяДР_Код = "20411" ИЛИ СтатьяДР_Код = "20413" ИЛИ СтатьяДР_Код = "20126" Тогда	
		
		МассивВидДвиженияОтбор = Новый Массив();
		Если СтатьяДР_Код = "20410" Тогда
			МассивВидДвиженияОтбор.Добавить(Перечисления.ВидДвиженияТовараПоЛистуУчета.Бой);
		ИначеЕсли СтатьяДР_Код = "20412" Тогда
			МассивВидДвиженияОтбор.Добавить(Перечисления.ВидДвиженияТовараПоЛистуУчета.Дегустация);	
		ИначеЕсли СтатьяДР_Код = "20411" Тогда
			МассивВидДвиженияОтбор.Добавить(Перечисления.ВидДвиженияТовараПоЛистуУчета.СписаниеПоКачеству);	
		ИначеЕсли СтатьяДР_Код = "20413" Тогда
			МассивВидДвиженияОтбор.Добавить(Перечисления.ВидДвиженияТовараПоЛистуУчета.Списание);
		ИначеЕсли СтатьяДР_Код = "20126" Тогда
			МассивВидДвиженияОтбор.Добавить(Перечисления.ВидДвиженияТовараПоЛистуУчета.ВозвратОтПокупателя);
		ИначеЕсли СтатьяДР_Код = "21001" Тогда
			МассивВидДвиженияОтбор.Добавить(Перечисления.ВидДвиженияТовараПоЛистуУчета.Акция);	
		КонецЕсли;	
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ЗатратыТоварныеДляРаспределения) КАК Счет,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.Регистратор КАК Документ,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот * СебестоимостьТоваровСрезПоследних.Себестоимость * (-1) КАК СуммаОборот,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот * СебестоимостьТоваровСрезПоследних.Себестоимость * (-1) КАК Сумма,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот * СебестоимостьТоваровСрезПоследних.Себестоимость * (-1) КАК Недостача,
		               |	0 КАК Излишки,
		               |	ЗНАЧЕНИЕ(ПланСчетов.Финансовый.Товары) КАК КорСчет,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот КАК КоличествоОборот,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот КАК Количество,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот КАК КоличествоНедостача,
		               |	0 КАК КоличествоИзлишки,
		               |	"""" КАК Содержание,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.Регистратор.Комментарий КАК Комментарий,
		               |	ДвиженияТоваровПоЛистамУчетаОбороты.Регистратор.Ответственный КАК Автор
		               |ИЗ
		               |	РегистрНакопления.ДвиженияТоваровПоЛистамУчета.Обороты(&НачалоПериода, &КонецПериода, Регистратор, ВидДвиженияТовара В (&ВидДвиженияТовара)) КАК ДвиженияТоваровПоЛистамУчетаОбороты
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьТоваров.СрезПоследних(&КонецПериода, ) КАК СебестоимостьТоваровСрезПоследних
		               |		ПО ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура = СебестоимостьТоваровСрезПоследних.Номенклатура";
					   
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("ВидДвиженияТовара", МассивВидДвиженияОтбор);
					   
		//Запрос.Текст = "ВЫБРАТЬ
		//	|	ФинансовыйОбороты.Счет КАК Счет,
		//	|	ФинансовыйОбороты.Регистратор КАК Документ,
		//	|	ФинансовыйОбороты.СуммаОборот КАК СуммаОборот,
		//	|	ФинансовыйОбороты.СуммаОборот КАК Сумма,
		//	|	ФинансовыйОбороты.КорСчет,
		//	|	ФинансовыйОбороты.СуммаОборотДт КАК Недостача,
		//	|	ФинансовыйОбороты.СуммаОборотКт КАК Излишки,
		//	|	ФинансовыйОбороты.КоличествоКорОборот КАК Количество,
		//	|	ФинансовыйОбороты.КоличествоКорОборотДт КАК КоличествоНедостача,
		//	|	ФинансовыйОбороты.КоличествоКорОборотКт КАК КоличествоИзлишки,
		//	|	ФинансовыйОбороты.КоличествоКорОборот КАК КоличествоОборот,
		//	|	"""" КАК Содержание, 
		//	|	ФинансовыйОбороты.Регистратор.Комментарий КАК Комментарий,
		//	|	ФинансовыйОбороты.Регистратор.Ответственный КАК Автор
		//	|ИЗ
		//	|	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет.Родитель = &Счет44, , Субконто2 = &Затраты, КорСчет.Родитель <> &Счет90, ) КАК ФинансовыйОбороты";			   
		//	
		//Запрос.УстановитьПараметр("Затраты", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		//Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
		//Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
		//Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		//Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
		//Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Финансовый.ЗатратыДляРаспределения);
		//Запрос.УстановитьПараметр("Счет442", ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения);
		//Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		//Запрос.УстановитьПараметр("КорСубконто2", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("61010")); 
		
	Иначе
						
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	ФинансовыйОбороты.Счет КАК Счет,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	ФинансовыйОбороты.СуммаОборот КАК СуммаОборот,
		               |	ФинансовыйОбороты.СуммаОборот КАК Сумма,
		               |	ФинансовыйОбороты.КорСчет,
		               |	ФинансовыйОбороты.СуммаОборотДт КАК Недостача,
		               |	ФинансовыйОбороты.СуммаОборотКт КАК Излишки,
		               |	ФинансовыйОбороты.КоличествоКорОборот КАК Количество,
		               |	ФинансовыйОбороты.КоличествоКорОборотДт КАК КоличествоНедостача,
		               |	ФинансовыйОбороты.КоличествоКорОборотКт КАК КоличествоИзлишки,
		               |	ФинансовыйОбороты.КоличествоКорОборот КАК КоличествоОборот,
		               |	"""" КАК Содержание,
		               |	ФинансовыйОбороты.Регистратор.Комментарий КАК Комментарий,
		               |	ФинансовыйОбороты.Регистратор.Ответственный КАК Автор,
		               |	ФинансовыйОбороты.Регистратор.Контрагент КАК Контрагент
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ЗатратыДляРаспределения))
		               |				ИЛИ Счет.Код = ""96.1"",
		               |			,
		               |			ИСТИНА
		               |				ИЛИ Субконто2 = &Затраты,
		               |			НЕ КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.Продажи))
		               |				И НЕ КорСчет В (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ПрибыльПрошлыхМесяцев), ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ПрибыльТекущегоПериода)),
		               |			) КАК ФинансовыйОбороты
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатьиДоходовРасходов КАК СтатьяКорректровка
		               |		ПО (ФинансовыйОбороты.Счет.Код = ""96.1"")
		               |			И (СтатьяКорректровка.Код = ""20120"")
		               |ГДЕ
		               |	ВЫРАЗИТЬ(ВЫБОР
		               |				КОГДА ФинансовыйОбороты.Счет.Код = ""96.1""
		               |					ТОГДА СтатьяКорректровка.Ссылка
		               |				ИНАЧЕ ФинансовыйОбороты.Субконто2
		               |			КОНЕЦ КАК Справочник.СтатьиДоходовРасходов) В ИЕРАРХИИ (&Затраты)";			   
		
					   
					   
		//Запрос.УстановитьПараметр("ЗатратыПостоянные", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("3"));
		Запрос.УстановитьПараметр("Затраты", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
		Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Финансовый.ЗатратыДляРаспределения);
        Запрос.УстановитьПараметр("Счет442", ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения);
        Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		Запрос.УстановитьПараметр("КорСубконто2", МассивСтатейАмортизация()); 
		//Запрос.УстановитьПараметр("Все",  Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Все"));   		        	
				
	        //Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
				
        //Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		//Запрос.УстановитьПараметр("КорСубконто2", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("61010"));
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
	Запрос.УстановитьПараметр("Все",  Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Все"));
	Если Запрос.Параметры.Свойство("Затраты") Тогда 
		Если Запрос.Параметры.Затраты.ЭтоГруппа Тогда
			//Запрос.Текст = СтрЗаменить(Запрос.Текст, "Субконто2 = &Затраты", "Субконто2 В Иерархии (&Затраты)");
		КонецЕсли;
	КонецЕсли;
	
	КорректироватьРесурсВЗапросе(Запрос.Текст,Ресурс);
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	Если Ресурс = "СуммаКорр" Тогда
		ИмяРесурса = "Корр";
	ИначеЕсли Ресурс = "СуммаМСФО" Тогда
		ИмяРесурса = "МСФО";
	Иначе 	
		ИмяРесурса = "";
	КонецЕсли;
	
	СтруктураЗаполненияШапка = Новый Структура;
	СтруктураЗаполненияШапка.Вставить("ИмяРесурса",ИмяРесурса);
	
		
	Если СтатьяДР_Код = "21201" ИЛИ СтатьяДР_Код = "21202" 
		ИЛИ СтатьяДР_Код = "21203" ИЛИ СтатьяДР_Код = "21208" Тогда 
			  
		Макет = ПолучитьМакет("РасшифровкаПоДокументамИНоменклатуре");       
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьСтрокаНом = Макет.ПолучитьОбласть("СтрокаНом");
		ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
		
	ИначеЕсли СтатьяДР_Код = "20216" ИЛИ СтатьяДР_Код = "20217" ИЛИ СтатьяДР_Код = "21206" Тогда	
		
		Макет = ПолучитьМакет("РасшифровкаПоСкладу_БезГруппировки1");       
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
		//ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
//		ОбластьСтрокаНом = Макет.ПолучитьОбласть("СтрокаНом");
		ОбластьСтрокаНомДок = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
	ИначеЕсли СтатьяДР_Код = "_21206" ИЛИ СтатьяДР_Код = "21205" Тогда	
		
		Макет = ПолучитьМакет("РасшифровкаПоСкладу_БезГруппировки");       
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
		//ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
//		ОбластьСтрокаНом = Макет.ПолучитьОбласть("СтрокаНом");
		ОбластьСтрокаНомДок = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");	
	ИначеЕсли СтатьяДР_Код = "21204" ИЛИ СтатьяДР_Код = "21207" Тогда
		                                                       
		Макет = ПолучитьМакет("РасшифровкаПоСкладу");       
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьСтрокаНом = Макет.ПолучитьОбласть("СтрокаНом");
		ОбластьСтрокаНомДок = Макет.ПолучитьОбласть("СтрокаНомДок");
		ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
		
	ИначеЕсли РасшифровкаПоНоменклатуре = Ложь Тогда
		
		Макет = ПолучитьМакет("РасшифровкаПоДокументам");
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");  
	Иначе 
		Макет = ПолучитьМакет("РасшифровкаПоДокументамИНоменклатуре");       
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		ОбластьСтрокаНом = Макет.ПолучитьОбласть("СтрокаНом");
		ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
	КонецЕсли;
	// 
	ОбластьШапка.Параметры.Заполнить(СтруктураЗаполненияШапка);	
	ОбластьШапка.Параметры.Код = СтатьяДР_Код;
	ОбластьШапка.Параметры.Статья = СтатьяДР_Наименование;
	ОбластьШапка.Параметры.ДатаНач = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	ОбластьШапка.Параметры.ДатаКон = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	
	ТабДокумент.Вывести(ОбластьШапка);
	
	Если Выгрузка.Колонки.Найти("КорСчет") = Неопределено Тогда
		Выгрузка.Колонки.Добавить("КорСчет");	
	КонецЕсли;
	
	Если Выгрузка.Колонки.Найти("КорСтатьяЗатрат") = Неопределено Тогда
		Выгрузка.Колонки.Добавить("КорСтатьяЗатрат");	
	КонецЕсли;
	
	Для Каждого Строка Из Выгрузка Цикл 
		Если ТипЗнч(Строка.Документ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") И Строка.Сумма = 0 Тогда
			Строка.Сумма = Строка.СуммаОборот;	
		КонецЕсли;
		Попытка
			Если Строка.Счет = Строка.КорСчет И Строка.СтатьяЗатрат = Строка.КорСтатьяЗатрат Тогда
				Строка.Сумма = 0; 	
			КонецЕсли;
		Исключение
		КонецПопытки;
	КонецЦикла;  	
	
	Если СтатьяДР_Код = "21201" ИЛИ СтатьяДР_Код = "21202" 
		ИЛИ СтатьяДР_Код = "21203" ИЛИ СтатьяДР_Код = "21208" Тогда
		
		Выгрузка.Свернуть("Документ, Номенклатура", "Сумма, Излишки, Недостача");
		Выгрузка.Колонки.Добавить("СуммаДоп");
		Для Каждого Строка Из Выгрузка Цикл
			Если Строка.Сумма < 0 Тогда
				Строка.СуммаДоп = -Строка.Сумма;
			Иначе 
				Строка.СуммаДоп = Строка.Сумма;
			КонецЕсли; 
		КонецЦикла;
		Выгрузка.Сортировать("СуммаДоп Убыв");
		
		ВыгрузкаКопия = Выгрузка.Скопировать();
		ВыгрузкаКопия.Свернуть("Документ", "Сумма");
		ВыгрузкаКопия.Сортировать("Сумма Возр");
		//Выборка = Запрос.Выполнить().Выбрать();
		Итог = 0;
		МассивДокументу = ВыгрузкаКопия.ВыгрузитьКолонку("Документ");
		
		Выгрузка.Индексы.Добавить("Документ");
		Для Каждого СтрокаДокумент Из ВыгрузкаКопия Цикл
			
			Отбор = Новый Структура;
			Отбор.Вставить("Документ", СтрокаДокумент.Документ);
			НайденныеСтроки = Выгрузка.НайтиСтроки(Отбор);
			
			//+++ZEZA
			ОбластьСтрока.Параметры.Заполнить(СтрокаДокумент);
			//+++ZEZA
			
			
			Сумма = 0; 			
			ОбластьСтрока.Параметры.Документ = СтрокаДокумент.Документ;
			ОбластьСтрока.Параметры.ДокументСтруктура = СтрокаДокумент.Документ;
			ОбластьСтрока.Параметры.Сумма = -СтрокаДокумент.Сумма;
			ТабДокумент.Вывести(ОбластьСтрока);
			
			Для Каждого Строка Из НайденныеСтроки Цикл
				
				//+++ZEZA
				ОбластьСтрока.Параметры.Заполнить(Строка);
				//+++ZEZA
				
				Сумма = Строка.Сумма;
				//Если Сумма = 0 Тогда
				//	Продолжить;
				//КонецЕсли;				
				
				ОбластьСтрокаНом.Параметры.Номенклатура = Строка.Номенклатура;
				ОбластьСтрокаНом.Параметры.СуммаИзлишки = Строка.Излишки;
				ОбластьСтрокаНом.Параметры.СуммаНедостачи = Строка.Недостача; 				
				//ОбластьСтрокаНом.Параметры.Сумма = Сумма;
				
				ТабДокумент.Вывести(ОбластьСтрокаНом);
				Итог = Итог + Сумма;
			КонецЦикла;	
			
		КонецЦикла;
		
		
	ИначеЕсли СтатьяДР_Код = "21204" ИЛИ СтатьяДР_Код = "21207" Тогда
		Выгрузка.Свернуть("Документ, ТТ, Номенклатура", "Сумма, Излишки, Недостача");
		Выгрузка.Колонки.Добавить("СуммаДоп");
		Для Каждого Строка Из Выгрузка Цикл
			Если Строка.Сумма < 0 Тогда
				Строка.СуммаДоп = -Строка.Сумма;
			Иначе 
				Строка.СуммаДоп = Строка.Сумма;
			КонецЕсли; 
		КонецЦикла;
		Выгрузка.Сортировать("СуммаДоп Убыв");
		//Выгрузка.Сортировать("Сумма Убыв");
		//Выгрузка.Колонки.Добавить("Склад");
		//Для Каждого Строка Из Выгрузка Цикл
		//	Попытка
		//		Строка.Склад = Строка.Документ.Склад;
		//	Исключение
		//		Строка.Склад = Неопределено;
		//	КонецПопытки;
		//КонецЦикла;
		
		ВыгрузкаКопия2 = Выгрузка.Скопировать();
		ВыгрузкаКопия2.Свернуть("ТТ, Номенклатура", "Сумма, СуммаДоп");
		ВыгрузкаКопия2.Сортировать("СуммаДоп Убыв");
		
		ВыгрузкаКопия = ВыгрузкаКопия2.Скопировать();
		ВыгрузкаКопия.Свернуть("ТТ", "Сумма, СуммаДоп");
		ВыгрузкаКопия.Сортировать("СуммаДоп Убыв");
		
		//Выборка = Запрос.Выполнить().Выбрать();
		Итог = 0;
		//МассивДокументу = ВыгрузкаКопия.ВыгрузитьКолонку("Документ");
		
		ВыгрузкаКопия2.Индексы.Добавить("ТТ");
		Выгрузка.Индексы.Добавить("ТТ, Номенклатура");
		Для Каждого СтрокаДокумент Из ВыгрузкаКопия Цикл
			
			//+++ZEZA
			ОбластьСтрока.Параметры.Заполнить(СтрокаДокумент);
			//---ZEZA
			
			
			Отбор = Новый Структура;
			Отбор.Вставить("ТТ", СтрокаДокумент.ТТ);
			НайденныеСтроки = ВыгрузкаКопия2.НайтиСтроки(Отбор);
			
			Сумма = 0; 			
			ОбластьСтрока.Параметры.Склад = СтрокаДокумент.ТТ;
			ОбластьСтрока.Параметры.Сумма = -СтрокаДокумент.Сумма;
			ТабДокумент.Вывести(ОбластьСтрока);
			
			Для Каждого Строка Из НайденныеСтроки Цикл
				
				//+++ZEZA
				ОбластьСтрока.Параметры.Заполнить(Строка);
				//---ZEZA
				
				Сумма = Строка.Сумма;
					
				ОбластьСтрокаНом.Параметры.Номенклатура = Строка.Номенклатура;
				ОбластьСтрокаНом.Параметры.Сумма = -Строка.Сумма;
				//ОбластьСтрокаНом.Параметры.СуммаИзлишки = Строка.Излишки;
				//ОбластьСтрокаНом.Параметры.СуммаНедостачи = Строка.Недостача; 				
								     			
				ТабДокумент.Вывести(ОбластьСтрокаНом);
				
				Отбор = Новый Структура;
				Отбор.Вставить("ТТ", СтрокаДокумент.ТТ);
				Отбор.Вставить("Номенклатура", Строка.Номенклатура);
				НайденныеСтроки2 = Выгрузка.НайтиСтроки(Отбор);
				
				Для Каждого Строка2 Из НайденныеСтроки2 Цикл 					
					ОбластьСтрокаНомДок.Параметры.Документ = Строка2.Документ;
					ОбластьСтрокаНомДок.Параметры.СуммаИзлишки = Строка2.Излишки;
					ОбластьСтрокаНомДок.Параметры.СуммаНедостачи = Строка2.Недостача;
					ТабДокумент.Вывести(ОбластьСтрокаНомДок);
				КонецЦикла;	
				
				Итог = Итог + Сумма;
			КонецЦикла;	
		КонецЦикла;	
		
	ИначеЕсли СтатьяДР_Код = "21205" Тогда
		Выгрузка.Свернуть("Документ, ТТ, Номенклатура", "Сумма, Излишки, Недостача");
		Выгрузка.Колонки.Добавить("СуммаДоп");
		Для Каждого Строка Из Выгрузка Цикл
			Если Строка.Сумма < 0 Тогда
				Строка.СуммаДоп = -Строка.Сумма;
			Иначе 
				Строка.СуммаДоп = Строка.Сумма;
			КонецЕсли; 
		КонецЦикла;
		Выгрузка.Сортировать("СуммаДоп Убыв");		
		
		//ВыгрузкаКопия2 = Выгрузка.Скопировать();
		//ВыгрузкаКопия2.Свернуть("ТТ, Номенклатура", "Сумма, СуммаДоп");
		//ВыгрузкаКопия2.Сортировать("СуммаДоп Убыв");
		//
		//ВыгрузкаКопия = ВыгрузкаКопия2.Скопировать();
		//ВыгрузкаКопия.Свернуть("ТТ", "Сумма, СуммаДоп");
		//ВыгрузкаКопия.Сортировать("СуммаДоп Убыв");
		
		//Выборка = Запрос.Выполнить().Выбрать();
		Итог = 0;
		//МассивДокументу = ВыгрузкаКопия.ВыгрузитьКолонку("Документ");
				
		Для Каждого Строка Из Выгрузка Цикл 
			
			//+++ZEZA
			ОбластьСтрокаНомДок.Параметры.Заполнить(Строка);
			//---ZEZA
			
			ОбластьСтрокаНомДок.Параметры.Документ = Строка.Документ;
			ОбластьСтрокаНомДок.Параметры.СуммаИзлишки = Строка.Излишки;
			ОбластьСтрокаНомДок.Параметры.СуммаНедостачи = Строка.Недостача;
			ОбластьСтрокаНомДок.Параметры.Номенклатура = Строка.Номенклатура;
			ОбластьСтрокаНомДок.Параметры.Склад = Строка.ТТ;
			ОбластьСтрокаНомДок.Параметры.Сумма = -Строка.Сумма;
			//ОбластьСтрокаНомДок.Параметры.КоличествоИзлишки = Строка.КоличествоИзлишки;
			//ОбластьСтрокаНомДок.Параметры.КоличествоНедостачи = Строка.КоличествоНедостача;
			//ОбластьСтрокаНомДок.Параметры.Количество = -Строка.Количество;
			
			ТабДокумент.Вывести(ОбластьСтрокаНомДок);
			
		КонецЦикла;
		
		Итог = Выгрузка.Итог("Сумма");
		
	ИначеЕсли СтатьяДР_Код = "20216" ИЛИ СтатьяДР_Код = "20217" ИЛИ СтатьяДР_Код = "21206"  Тогда
			  
		Выгрузка.Свернуть("Документ, Номенклатура, СкладИзПроводки", "Сумма, Излишки, Недостача, Количество, КоличествоИзлишки, КоличествоНедостача");
		Выгрузка.Колонки.Добавить("СуммаДоп");
		Для Каждого Строка Из Выгрузка Цикл
			Если Строка.Сумма < 0 Тогда
				Строка.СуммаДоп = -Строка.Сумма;
			Иначе 
				Строка.СуммаДоп = Строка.Сумма;
			КонецЕсли; 
		КонецЦикла;
				
		Выгрузка.Колонки.Добавить("Склад");
		Для Каждого Строка Из Выгрузка Цикл
			Попытка
				Строка.Склад = Строка.СкладИзПроводки;
				Если Не ЗначениеЗаполнено(Строка.Склад) Тогда
					Строка.Склад = Строка.Документ.Склад;
					
					НайденнаяСтрока = Строка.Документ.Товары.Найти(Строка.Номенклатура, "Номенклатура");
					Если НЕ НайденнаяСтрока = Неопределено Тогда
						Строка.Склад = НайденнаяСтрока.Склад;	
					Иначе
						Строка.Склад = Строка.Документ.Склад;	
					КонецЕсли; 
					Если НЕ ЗначениеЗаполнено(Строка.Склад) Тогда
						Строка.Склад = Строка.Документ.Склад;				
					КонецЕсли;
				КонецЕсли;	
			Исключение
				//Строка.Склад = Неопределено;
			КонецПопытки;
		КонецЦикла;
		
		Выгрузка.Сортировать("СуммаДоп Убыв");
		
		Для Каждого Строка Из Выгрузка Цикл 
			
			//+++ZEZA
			ОбластьСтрокаНомДок.Параметры.Заполнить(Строка);
			//---ZEZA
			
			ОбластьСтрокаНомДок.Параметры.Документ = Строка.Документ;
			ОбластьСтрокаНомДок.Параметры.СуммаИзлишки = Строка.Излишки;
			ОбластьСтрокаНомДок.Параметры.СуммаНедостачи = Строка.Недостача;
			ОбластьСтрокаНомДок.Параметры.Номенклатура = Строка.Номенклатура;
			ОбластьСтрокаНомДок.Параметры.Склад = Строка.Склад;
			ОбластьСтрокаНомДок.Параметры.Сумма = -Строка.Сумма;
			ОбластьСтрокаНомДок.Параметры.КоличествоИзлишки = Строка.КоличествоИзлишки;
			ОбластьСтрокаНомДок.Параметры.КоличествоНедостачи = Строка.КоличествоНедостача;
			ОбластьСтрокаНомДок.Параметры.Количество = -Строка.Количество;
			
			
			ТабДокумент.Вывести(ОбластьСтрокаНомДок);
			
		КонецЦикла;
		
		Итог = Выгрузка.Итог("Сумма");
		
	ИначеЕсли СтатьяДР_Код = "_21206" Тогда
		
		Выгрузка.Свернуть("Документ, Склад, Номенклатура", "Сумма, Излишки, Недостача, КоличествоИзлишки, КоличествоНедостача, Количество");
		Выгрузка.Колонки.Добавить("СуммаДоп");
		Для Каждого Строка Из Выгрузка Цикл
			Если Строка.Сумма < 0 Тогда
				Строка.СуммаДоп = -Строка.Сумма;
			Иначе 
				Строка.СуммаДоп = Строка.Сумма;
			КонецЕсли; 
		КонецЦикла;
		Выгрузка.Сортировать("СуммаДоп Убыв");
		
		Для Каждого Строка Из Выгрузка Цикл 
			
			//+++ZEZA
			ОбластьСтрокаНомДок.Параметры.Заполнить(Строка);
			//---ZEZA
			
			ОбластьСтрокаНомДок.Параметры.Документ = Строка.Документ;
			ОбластьСтрокаНомДок.Параметры.СуммаИзлишки = Строка.Излишки;
			ОбластьСтрокаНомДок.Параметры.СуммаНедостачи = Строка.Недостача;
			ОбластьСтрокаНомДок.Параметры.Номенклатура = Строка.Номенклатура;
			ОбластьСтрокаНомДок.Параметры.Склад = Строка.Склад;
			ОбластьСтрокаНомДок.Параметры.Сумма = -Строка.Сумма;
			Если СтатьяДР_Код = "20217" Тогда
				ОбластьСтрокаНомДок.Параметры.КоличествоИзлишки = Строка.КоличествоИзлишки;
				ОбластьСтрокаНомДок.Параметры.КоличествоНедостачи = Строка.КоличествоНедостача;
				ОбластьСтрокаНомДок.Параметры.Количество = -Строка.Количество;
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьСтрокаНомДок);
			
		КонецЦикла;
		
		Итог = Выгрузка.Итог("Сумма");
		
	ИначеЕсли СтатьяДР_Код = "20410" ИЛИ СтатьяДР_Код = "20412" 
		ИЛИ СтатьяДР_Код = "21001" ИЛИ СтатьяДР_Код = "20110"
		ИЛИ СтатьяДР_Код = "20411" ИЛИ СтатьяДР_Код = "20413" ИЛИ СтатьяДР_Код = "20126" Тогда
		
		Выгрузка.Свернуть("Документ, Содержание, Автор, Комментарий", "Сумма, КоличествоОборот");
		МассивСтрокУдаления = Новый Массив;
		
		ОбщаяСумма = 0;
		ОбщееКолво = 0;
		Для Каждого Строка Из Выгрузка Цикл
			Если ТипЗнч(Строка.Документ) = Тип("ДокументСсылка.ЗакрытиеМесяца") Тогда
				МассивСтрокУдаления.Добавить(Строка);	
				ОбщаяСумма = ОбщаяСумма + Строка.Сумма;
			ИначеЕсли ТипЗнч(Строка.Документ) = Тип("ДокументСсылка.ЛистУчета")Тогда 				
				ОбщееКолво = ОбщееКолво + Строка.КоличествоОборот;
			КонецЕсли;			 
		КонецЦикла;
		ОбщаяСуммаДоп = Выгрузка.Итог("Сумма");
		ОбщееКолвоДоп = Выгрузка.Итог("КоличествоОборот");
		
		КоэфициентСуммы = ОбщаяСумма / ОбщееКолво;		
		
		//Выгрузка.Свернуть("Документ, Автор, Комментарий", "Сумма");
		Выгрузка.Колонки.Добавить("СуммаДоп");
		
		Для Каждого СтрокаУдаления Из МассивСтрокУдаления Цикл
			Выгрузка.Удалить(СтрокаУдаления);	
		КонецЦикла;
		
		Для Каждого Строка Из Выгрузка Цикл	
			Если Строка.Сумма = 0 Тогда
				Строка.Сумма = Строка.КоличествоОборот * КоэфициентСуммы;
			КонецЕсли;
			
			Если Строка.Сумма < 0 Тогда
				Строка.СуммаДоп = -Строка.Сумма;
			Иначе 
				Строка.СуммаДоп = Строка.Сумма;
			КонецЕсли; 		
			 
		КонецЦикла;		
		
		Выгрузка.Сортировать("СуммаДоп Убыв");
		//Выгрузка.Сортировать("Сумма Убыв");
		ВыгрузкаКопия = Выгрузка.Скопировать();
		ВыгрузкаКопия.Свернуть("Документ");
		//Выборка = Запрос.Выполнить().Выбрать();
		Итог = 0;
		МассивДокументу = ВыгрузкаКопия.ВыгрузитьКолонку("Документ");
		
		Выгрузка.Индексы.Добавить("Документ");
		Для Каждого Документ Из МассивДокументу Цикл
			Отбор = Новый Структура;
			Отбор.Вставить("Документ", Документ);
			НайденныеСтроки = Выгрузка.НайтиСтроки(Отбор);
			Содержание = "";
			Автор = "";
			Комментарий = "";
			Сумма = 0;
			
			Для Каждого Строка Из НайденныеСтроки Цикл
				
				Содержание = Строка.Содержание;		
				Автор = Строка.Автор;
				Комментарий = Строка.Комментарий;
				Сумма = Строка.Сумма;
			    Если Сумма = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				//+++ZEZA
				ОбластьСтрока.Параметры.Заполнить(Строка);
				//---ZEZA
				
				Содержание = Лев(Содержание, СтрДлина(СокрЛП(Содержание)) - 1);
				ОбластьСтрока.Параметры.Документ = Документ;
				Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
					И ЗначениеЗаполнено(Документ.ДатаВходящегоДокумента) Тогда
					ОбластьСтрока.Параметры.Период = Формат(Документ.ДатаВходящегоДокумента, "ДФ='MMMM yyyy'");
					Если ЗначениеЗаполнено(Документ.ДокументОснование)
						И ТипЗнч(Документ.ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств") Тогда
						ОбластьСтрока.Параметры.Содержание = Документ.ДокументОснование.Пояснение;	
						ОбластьСтрока.Параметры.Автор = Документ.ДокументОснование.Ответственный;
					Иначе	
						ОбластьСтрока.Параметры.Содержание = Содержание;	
						ОбластьСтрока.Параметры.Автор = Автор;
					КонецЕсли;
				ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
						И ТипЗнч(Документ.ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств")
							И ЗначениеЗаполнено(Документ.ДокументОснование) Тогда
					ОбластьСтрока.Параметры.Содержание = Документ.ДокументОснование.Пояснение;	
					ОбластьСтрока.Параметры.Автор = Документ.ДокументОснование.Ответственный;
					ОбластьСтрока.Параметры.Период = Документ.ДокументОснование.ПериодыТорговыхТочекСтрока;
				ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.РасходИзКассы") 
						И ЗначениеЗаполнено(Документ.ЗаявкаНаРасходованиеСредств) Тогда	
					ОбластьСтрока.Параметры.Содержание = Документ.ЗаявкаНаРасходованиеСредств.Пояснение;	
					ОбластьСтрока.Параметры.Автор = Документ.ЗаявкаНаРасходованиеСредств.Ответственный;
					ОбластьСтрока.Параметры.Период = Документ.ЗаявкаНаРасходованиеСредств.ПериодыТорговыхТочекСтрока;
				Иначе	
					ОбластьСтрока.Параметры.Содержание = Содержание;	
					ОбластьСтрока.Параметры.Автор = Автор;
					ОбластьСтрока.Параметры.Период = Формат(Документ.Дата, "ДФ='MMMM yyyy'");
				КонецЕсли; 		
				Попытка 
					ОбластьСтрока.Параметры.Контрагент = Документ.Контрагент;	
				Исключение
					ОбластьСтрока.Параметры.Контрагент = "";
				КонецПопытки;
				ОбластьСтрока.Параметры.Комментарий = Комментарий;
				ОбластьСтрока.Параметры.Сумма = -Сумма;
				
				Если ТипЗнч(Документ) = Тип("ДокументСсылка.Операция") Тогда
					
					СтруктураРасшифровки = Новый Структура;
					СтруктураРасшифровки.Вставить("Документ", Документ);
					СтруктураРасшифровки.Вставить("Сумма", Сумма);
					
					ОбластьСтрока.Параметры.ДокументСтруктура = СтруктураРасшифровки;
					
					
				Иначе
					ОбластьСтрока.Параметры.ДокументСтруктура = Документ;
					 
				КонецЕсли;	
				
				ТабДокумент.Вывести(ОбластьСтрока);
				Итог = Итог + Сумма;
			КонецЦикла;
			
		КонецЦикла;
	ИначеЕсли РасшифровкаПоНоменклатуре = Ложь Тогда
		
	Выгрузка.Свернуть("Документ, Содержание, Автор, Комментарий", "Сумма");
		//Выгрузка.Свернуть("Документ, Автор, Комментарий", "Сумма");
		Выгрузка.Колонки.Добавить("СуммаДоп");
		Для Каждого Строка Из Выгрузка Цикл
			Если Строка.Сумма < 0 Тогда
				Строка.СуммаДоп = -Строка.Сумма;
			Иначе 
				Строка.СуммаДоп = Строка.Сумма;
			КонецЕсли; 
		КонецЦикла;
		Выгрузка.Сортировать("СуммаДоп Убыв");
		//Выгрузка.Сортировать("Сумма Убыв");
		ВыгрузкаКопия = Выгрузка.Скопировать();
		ВыгрузкаКопия.Свернуть("Документ");
		//Выборка = Запрос.Выполнить().Выбрать();
		Итог = 0;
		МассивДокументу = ВыгрузкаКопия.ВыгрузитьКолонку("Документ");
		
		Выгрузка.Индексы.Добавить("Документ");
		Для Каждого Документ Из МассивДокументу Цикл
			Отбор = Новый Структура;
			Отбор.Вставить("Документ", Документ);
			НайденныеСтроки = Выгрузка.НайтиСтроки(Отбор);
			Содержание = "";
			Автор = "";
			Комментарий = "";
			Сумма = 0;
			
			Для Каждого Строка Из НайденныеСтроки Цикл
				
				//+++ZEZA
				ОбластьСтрока.Параметры.Заполнить(Строка);
				//---ZEZA
				
				Содержание = Строка.Содержание;		
				Автор = Строка.Автор;
				Комментарий = Строка.Комментарий;
				Сумма = Строка.Сумма;
			    Если Сумма = 0 Тогда
					Продолжить;
				КонецЕсли;
			
				Содержание = Лев(Содержание, СтрДлина(СокрЛП(Содержание)) - 1);
				ОбластьСтрока.Параметры.Документ = Документ;
				Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг")
					И ЗначениеЗаполнено(Документ.ДатаВходящегоДокумента) Тогда
					ОбластьСтрока.Параметры.Период = Формат(Документ.ДатаВходящегоДокумента, "ДФ='MMMM yyyy'");
					Если ЗначениеЗаполнено(Документ.ДокументОснование)
						И ТипЗнч(Документ.ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств") Тогда
						ОбластьСтрока.Параметры.Содержание = Документ.ДокументОснование.Пояснение;	
						ОбластьСтрока.Параметры.Автор = Документ.ДокументОснование.Ответственный;
					Иначе	
						ОбластьСтрока.Параметры.Содержание = Содержание;	
						ОбластьСтрока.Параметры.Автор = Автор;
					КонецЕсли;	
				ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
						И ТипЗнч(Документ.ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств")
							И ЗначениеЗаполнено(Документ.ДокументОснование) Тогда
					ОбластьСтрока.Параметры.Содержание = Документ.ДокументОснование.Пояснение;	
					ОбластьСтрока.Параметры.Автор = Документ.ДокументОснование.Ответственный;
					ОбластьСтрока.Параметры.Период = Документ.ДокументОснование.ПериодыТорговыхТочекСтрока;
				ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.РасходИзКассы") 
						И ЗначениеЗаполнено(Документ.ЗаявкаНаРасходованиеСредств) Тогда	
					ОбластьСтрока.Параметры.Содержание = Документ.ЗаявкаНаРасходованиеСредств.Пояснение;	
					ОбластьСтрока.Параметры.Автор = Документ.ЗаявкаНаРасходованиеСредств.Ответственный;
					ОбластьСтрока.Параметры.Период = Документ.ЗаявкаНаРасходованиеСредств.ПериодыТорговыхТочекСтрока;
				Иначе	
					ОбластьСтрока.Параметры.Содержание = Содержание;	
					ОбластьСтрока.Параметры.Автор = Автор;
					ОбластьСтрока.Параметры.Период = Формат(Документ.Дата, "ДФ='MMMM yyyy'");
				КонецЕсли; 		
				Попытка 
					ОбластьСтрока.Параметры.Контрагент = Документ.Контрагент;	
				Исключение
					ОбластьСтрока.Параметры.Контрагент = "";
				КонецПопытки;
				ОбластьСтрока.Параметры.Комментарий = Комментарий;
				ОбластьСтрока.Параметры.Сумма = -Сумма;
				
				Если ТипЗнч(Документ) = Тип("ДокументСсылка.Операция") Тогда
					
					СтруктураРасшифровки = Новый Структура;
					СтруктураРасшифровки.Вставить("Документ", Документ);
					СтруктураРасшифровки.Вставить("Сумма", Сумма);
					
					ОбластьСтрока.Параметры.ДокументСтруктура = СтруктураРасшифровки;
					
				Иначе
					ОбластьСтрока.Параметры.ДокументСтруктура = Документ;
					 
				КонецЕсли;	
				
				ТабДокумент.Вывести(ОбластьСтрока);
				Итог = Итог + Сумма;
			КонецЦикла;
			
		КонецЦикла;
		
	Иначе           
		Выгрузка.Свернуть("Документ, Номенклатура", "Сумма, Излишки, Недостача");
		Выгрузка.Колонки.Добавить("СуммаДоп");
		Для Каждого Строка Из Выгрузка Цикл
			Если Строка.Сумма < 0 Тогда
				Строка.СуммаДоп = -Строка.Сумма;
			Иначе 
				Строка.СуммаДоп = Строка.Сумма;
			КонецЕсли; 
		КонецЦикла;
		Выгрузка.Сортировать("СуммаДоп Убыв");
		//Выгрузка.Сортировать("Сумма Убыв");
		ВыгрузкаКопия = Выгрузка.Скопировать();
		ВыгрузкаКопия.Свернуть("Документ");
		//Выборка = Запрос.Выполнить().Выбрать();
		Итог = 0;
		МассивДокументу = ВыгрузкаКопия.ВыгрузитьКолонку("Документ");
		
		Выгрузка.Индексы.Добавить("Документ");
		Для Каждого Документ Из МассивДокументу Цикл
			
			//+++ZEZA
			ОбластьСтрока.Параметры.Заполнить(Документ);
			//---ZEZA
			
			
			Отбор = Новый Структура;
			Отбор.Вставить("Документ", Документ);
			НайденныеСтроки = Выгрузка.НайтиСтроки(Отбор);
			
			Сумма = 0; 			
			ОбластьСтрока.Параметры.Документ = Документ;
			ОбластьСтрока.Параметры.ДокументСтруктура = Документ;
			ТабДокумент.Вывести(ОбластьСтрока);
			
			Для Каждого Строка Из НайденныеСтроки Цикл
				          			
				Сумма = Строка.Сумма;
				//Если Сумма = 0 Тогда
				//	Продолжить;
				//КонецЕсли;				
				
				ОбластьСтрокаНом.Параметры.Номенклатура = Строка.Номенклатура;
				ОбластьСтрокаНом.Параметры.СуммаИзлишки = Строка.Излишки;
				ОбластьСтрокаНом.Параметры.СуммаНедостачи = Строка.Недостача; 				
				ОбластьСтрокаНом.Параметры.Сумма = Сумма;
				     			
				ТабДокумент.Вывести(ОбластьСтрокаНом);
				Итог = Итог + Сумма;
			КонецЦикла;
			
		КонецЦикла;

	КонецЕсли;
	//
	ОбластьИтоги.Параметры.Сумма = -Итог;
	ТабДокумент.Вывести(ОбластьИтоги);
	
	ТабДокумент.ТолькоПросмотр = Истина;
		
	//Расшифровка по субконто
	Если Лев(СтатьяДР_Код,3) = "207" Тогда
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	-СУММА(ФинансовыйОбороты.СуммаОборот) КАК Сумма,
		               |	ФинансовыйОбороты.КорСубконто2
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет.Родитель = &Счет44, , Субконто2 В ИЕРАРХИИ (&Затраты), КорСчет.Родитель <> &Счет90, ) КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.КорСубконто2";			   
		
		Запрос.УстановитьПараметр("Затраты", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
		Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Финансовый.ЗатратыДляРаспределения);
        Запрос.УстановитьПараметр("Счет442", ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения);
        Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		Запрос.УстановитьПараметр("КорСубконто2",МассивСтатейАмортизация()); 
	
		Выгрузка = Запрос.Выполнить().Выгрузить();
		
		МакетРасшифровка = ПолучитьМакет("РасшифровкаПоСубконто");
		ОбластьШапка = МакетРасшифровка.ПолучитьОбласть("Шапка");
		ОбластьСтрока = МакетРасшифровка.ПолучитьОбласть("Строка");
		ОбластьИтоги = МакетРасшифровка.ПолучитьОбласть("Итоги");
		
		ОбластьШапка.Параметры.ВидСубконто = "Вид налога";
        ТабДокумент.Вывести(ОбластьШапка);
		
		Для каждого Строка из Выгрузка Цикл
			ОбластьСтрока.Параметры.Субконто = Строка.КорСубконто2;
			ОбластьСтрока.Параметры.Сумма =    Строка.Сумма;
			ТабДокумент.Вывести(ОбластьСтрока);
       	КонецЦикла;
		
		СуммаИтого = Выгрузка.Итог("Сумма");
		ОбластьИтоги.Параметры.Сумма = СуммаИтого;
		ТабДокумент.Вывести(ОбластьИтоги);
		
	КонецЕсли;	
		
	ФормаРасшифровки.ЭлементыФормы.Результат.Очистить();
	ФормаРасшифровки.ЭлементыФормы.Результат.Вывести(ТабДокумент);
	
	//ФормаРасшифровки.Открыть();
	//ТабДокумент.Показать("Расшифровка по документам");
	
КонецПроцедуры

Процедура РасшифроватьПоДокументам_ОбщийЦФО(Расшифровка)
	//пКонтрагент = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля()[0].Значение;
	Попытка
		ЦФО = ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].получитьродителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
		ЦФО = ?(ЦФО = "", Справочники.СтруктурныеЕдиницы.ПустаяСсылка(), ЦФО);
		СтатьяГруппировка = ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].получитьродителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;	
	Исключение
		ЦФО = ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
		ЦФО = ?(ЦФО = "", Справочники.СтруктурныеЕдиницы.ПустаяСсылка(), ЦФО);
		СтатьяГруппировка = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;	

	КонецПопытки;
	СтатьяДР_Код = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[1].Значение);
	СтатьяДР_Наименование = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение);
	
	пПараметрПериод = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	
	ПериодВыводаГод   = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;
	ПериодВыводаМесяц = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[1].Значение;
	ПериодВывода = ДатаРасшифровки(ПериодВыводаМесяц, ПериодВыводаГод); 

	Если НачалоМесяца(ПериодВывода) >= НачалоДня(ЭлементыФормы.ДинамическийОтборДатаНачала.Значение) Тогда
		НачалоПериода = НачалоМесяца(ПериодВывода);
	Иначе
		НачалоПериода = НачалоДня(ЭлементыФормы.ДинамическийОтборДатаНачала.Значение);
	КонецЕсли;
	
	Если КонецМесяца(ПериодВывода) <= КонецДня(ЭлементыФормы.ДинамическийОтборДатаОкончания.Значение) Тогда
		КонецПериода = КонецМесяца(ПериодВывода);
	Иначе
		КонецПериода = КонецДня(ЭлементыФормы.ДинамическийОтборДатаОкончания.Значение);
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ФормаРасшифровки = Отчеты.АК_ОтчетПоДоходамИРасходам.ПолучитьФорму("ФормаРасшифровки");
	//ТабДокумент = ФормаРасшифровки.ЭлементыФормы.ПолеРасшифровки;
	Макет = ПолучитьМакет("РасшифровкаПоДокументам");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
	//
	ОбластьШапка.Параметры.Код = СтатьяДР_Код;
	ОбластьШапка.Параметры.Статья = СтатьяДР_Наименование;
	ОбластьШапка.Параметры.ДатаНач = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	ОбластьШапка.Параметры.ДатаКон = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	
	ТабДокумент.Вывести(ОбластьШапка);
	//
	Запрос = Новый Запрос;
	Если СтатьяДР_Код = "01" Тогда				   
		СтатьяДР_Код = "1";
		Запрос.Текст = "ВЫБРАТЬ
		               |	""01"" КАК Код,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	СУММА(-ФинансовыйОбороты.СуммаОборот) КАК Сумма
		               |ПОМЕСТИТЬ ВремТаб
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Счет В ИЕРАРХИИ (&СчетПродажи),
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Выручка)
		               |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |					ИЛИ Субконто1.ТипРозничнойТочки = &Проект)
		               |				И Субконто3 = &ЦФО,
		               |			,
		               |			) КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.Регистратор
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВремТаб.Документ,
		               |	ВремТаб.Сумма,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)) КАК Комментарий,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный КАК Автор
		               |ИЗ
		               |	ВремТаб КАК ВремТаб
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
		               |				&НачалоПериода,
		               |				&КонецПериода,
		               |				Счет В ИЕРАРХИИ (&СчетПродажи)
		               |					И Субконто2 В ИЕРАРХИИ (&Выручка)
		               |					И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |						ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |				,
		               |				) КАК ФинансовыйДвиженияССубконто
		               |		ПО ВремТаб.Документ = ФинансовыйДвиженияССубконто.Регистратор
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВремТаб.Документ,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)),
		               |	ВремТаб.Сумма
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ВремТаб.Документ.Дата";
				   
		Запрос.УстановитьПараметр("Выручка", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("СчетПродажи", ПланыСчетов.Финансовый.Продажи);	
			
	ИначеЕсли СтатьяДР_Код = "10" Тогда				   
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	""10"" КАК Код,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	СУММА(-ФинансовыйОбороты.СуммаОборот) КАК Сумма
		               |ПОМЕСТИТЬ ВремТаб
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Счет В ИЕРАРХИИ (&Счет01),
		               |			,
		               |			(КорСубконто2 В (&КорСубконто2))
		               |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |					ИЛИ Субконто1.ТипРозничнойТочки = &Проект)
		               |				И Субконто3 = &ЦФО,
		               |			,
		               |			) КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.Регистратор
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВремТаб.Документ,
		               |	ВремТаб.Сумма,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)) КАК Комментарий,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный КАК Автор
		               |ИЗ
		               |	ВремТаб КАК ВремТаб
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
		               |				&НачалоПериода,
		               |				&КонецПериода,
		               |				Счет В ИЕРАРХИИ (&Счет01)
		               |					И НЕ (КорСубконто2 В (&КорСубконто2))
		               |					И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |						ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |				,
		               |				) КАК ФинансовыйДвиженияССубконто
		               |		ПО ВремТаб.Документ = ФинансовыйДвиженияССубконто.Регистратор
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВремТаб.Документ,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)),
		               |	ВремТаб.Сумма
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ВремТаб.Документ.Дата";
				   
		Запрос.УстановитьПараметр("Выручка", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("Счет01", ПланыСчетов.Финансовый.Инвестиции);	
		Запрос.УстановитьПараметр("КорСубконто2", МассивСтатейАмортизация());		   	 	
		
	ИначеЕсли (СтатьяДР_Код = "330"  ИЛИ СтатьяДР_Код = "05"
		 ИЛИ СтатьяДР_Код = "340" Или СтатьяДР_Код = "350" 
		 ИЛИ СтатьяДР_Код = "351" Или СтатьяДР_Код = "361" 
		 ИЛИ СтатьяДР_Код = "371" Или СтатьяДР_Код = "392"  
		 ИЛИ СтатьяДР_Код = "393" Или СтатьяДР_Код = "410" 
		 Или СтатьяДР_Код = "810" ИЛИ СтатьяДР_Код = "33010" 
		 Или СтатьяДР_Код = "33011"
		 ИЛИ СтатьяДР_Код = "34010" Или СтатьяДР_Код = "34011" 
		 ИЛИ СтатьяДР_Код = "35010" Или СтатьяДР_Код = "35011" 
		 ИЛИ СтатьяДР_Код = "35113" Или СтатьяДР_Код = "36110"  
		 ИЛИ СтатьяДР_Код = "36120" Или СтатьяДР_Код = "36190" 
		 ИЛИ СтатьяДР_Код = "36198" Или СтатьяДР_Код = "36201" 
		 ИЛИ СтатьяДР_Код = "37110" Или СтатьяДР_Код = "37115"   
		 ИЛИ СтатьяДР_Код = "37120" Или СтатьяДР_Код = "37190"  
		 ИЛИ СтатьяДР_Код = "37195" Или СтатьяДР_Код = "39230" 
		 ИЛИ СтатьяДР_Код = "39314" Или СтатьяДР_Код = "39320" 
		 ИЛИ СтатьяДР_Код = "39391" Или СтатьяДР_Код = "39397"
		 ИЛИ СтатьяДР_Код = "39399" Или СтатьяДР_Код = "41010"  
		 ИЛИ СтатьяДР_Код = "41020" Или СтатьяДР_Код = "41021" 
		 ИЛИ СтатьяДР_Код = "41022" Или СтатьяДР_Код = "41029" 
		 ИЛИ СтатьяДР_Код = "81010" Или СтатьяДР_Код = "81011"
		 ИЛИ СтатьяДР_Код = "81012" Или СтатьяДР_Код = "81013") И СтатьяГруппировка =  "Общие расходы" Тогда 
		 
		  Если СтатьяДР_Код = "05" Тогда
		 	СтатьяДР_Код = "5";
		КонецЕсли;
		
		 Запрос.Текст = "ВЫБРАТЬ
		                |	ФинансовыйОбороты.КорСчет КАК Счет,
		                |	ФинансовыйОбороты.Субконто1 КАК ТТ,
		                |	ФинансовыйОбороты.Субконто2 КАК СтатьяЗатрат,
		                |	ФинансовыйОбороты.КорСубконто3 КАК ЦФО,
		                |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот
		                |ПОМЕСТИТЬ ТЗ_БАЗА
		                |ИЗ
		                |	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, , Счет В ИЕРАРХИИ (&Счет90), , Субконто2 В ИЕРАРХИИ (&Затраты), КорСчет = &Счет442, ) КАК ФинансовыйОбороты
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ФинансовыйОбороты.КорСчет,
		                |	ФинансовыйОбороты.Субконто1,
		                |	ФинансовыйОбороты.Субконто2,
		                |	ФинансовыйОбороты.КорСубконто3
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот,
		                |	ФинансовыйОбороты.СтатьяЗатрат,
		                |	ФинансовыйОбороты.ЦФО,
		                |	ФинансовыйОбороты.Счет
		                |ПОМЕСТИТЬ ТЗ_БАЗА_ОБЩИЙИТОГ
		                |ИЗ
		                |	ТЗ_БАЗА КАК ФинансовыйОбороты
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ФинансовыйОбороты.СтатьяЗатрат,
		                |	ФинансовыйОбороты.ЦФО,
		                |	ФинансовыйОбороты.Счет
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ТЗ_БАЗА.Счет,
		                |	ТЗ_БАЗА.ТТ,
		                |	ТЗ_БАЗА.СтатьяЗатрат,
		                |	ТЗ_БАЗА.ЦФО,
		                |	ТЗ_БАЗА.СуммаОборот КАК Сумма,
		                |	ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот КАК СуммаИтог,
		                |	ВЫБОР
		                |		КОГДА ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот = 0
		                |			ТОГДА 0
		                |		ИНАЧЕ ТЗ_БАЗА.СуммаОборот / ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот
		                |	КОНЕЦ КАК Коэффициент
		                |ПОМЕСТИТЬ ТЗ_КОЭФФИЦИЕНТЫ
		                |ИЗ
		                |	ТЗ_БАЗА КАК ТЗ_БАЗА
		                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТЗ_БАЗА_ОБЩИЙИТОГ КАК ТЗ_БАЗА_ОБЩИЙИТОГ
		                |		ПО ТЗ_БАЗА.Счет = ТЗ_БАЗА_ОБЩИЙИТОГ.Счет
		                |			И ТЗ_БАЗА.СтатьяЗатрат = ТЗ_БАЗА_ОБЩИЙИТОГ.СтатьяЗатрат
		                |			И ТЗ_БАЗА.ЦФО = ТЗ_БАЗА_ОБЩИЙИТОГ.ЦФО
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ФинансовыйОбороты.Счет КАК Счет,
		                |	ФинансовыйОбороты.Субконто2 КАК СтатьяЗатрат,
		                |	ФинансовыйОбороты.Субконто3 КАК ЦФО,
		                |	ТЗ_КОЭФФИЦИЕНТЫ.ТТ КАК ТТ,
		                |	ФинансовыйОбороты.Регистратор КАК Документ,
		                |	ФинансовыйОбороты.СуммаОборот КАК СуммаОборот,
		                |	ФинансовыйОбороты.СуммаОборот * ЕСТЬNULL(ТЗ_КОЭФФИЦИЕНТЫ.Коэффициент, 0) КАК Сумма,
		                |	ФинансовыйОбороты.Регистратор.Комментарий КАК Комментарий,
		                |	ФинансовыйОбороты.Регистратор.Ответственный КАК Автор,
		                |	ФинансовыйДвиженияССубконто.Содержание КАК Содержание
		                |ИЗ
		                |	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет В ИЕРАРХИИ (&Счет442), , Субконто2 В ИЕРАРХИИ (&Затраты), НЕ КорСчет В ИЕРАРХИИ (&Счет90), ) КАК ФинансовыйОбороты
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_КОЭФФИЦИЕНТЫ КАК ТЗ_КОЭФФИЦИЕНТЫ
		                |		ПО ФинансовыйОбороты.Счет = ТЗ_КОЭФФИЦИЕНТЫ.Счет
		                |			И ФинансовыйОбороты.Субконто2 = ТЗ_КОЭФФИЦИЕНТЫ.СтатьяЗатрат
		                |			И ФинансовыйОбороты.Субконто3 = ТЗ_КОЭФФИЦИЕНТЫ.ЦФО
		                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(&НачалоПериода, &КонецПериода, СубконтоДт2 В ИЕРАРХИИ (&Затраты), , ) КАК ФинансовыйДвиженияССубконто
		                |		ПО ФинансовыйОбороты.Регистратор = ФинансовыйДвиженияССубконто.Регистратор
		                |			И ФинансовыйОбороты.Субконто2 = ФинансовыйДвиженияССубконто.СубконтоДт2
		                |			И ФинансовыйОбороты.Субконто3 = ФинансовыйДвиженияССубконто.СубконтоДт3
		                |			И ФинансовыйОбороты.СуммаОборот = ФинансовыйДвиженияССубконто.Сумма
		                |			И ФинансовыйОбороты.Счет = ФинансовыйДвиженияССубконто.СчетДт
		                |ГДЕ
		                |	ФинансовыйОбороты.Субконто2 В ИЕРАРХИИ(&Затраты)
		                |	И ФинансовыйОбороты.Субконто3 = &ЦФО";
	
				   
		//Запрос.УстановитьПараметр("ЗатратыПостоянные", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("3"));
		Запрос.УстановитьПараметр("Затраты", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
		Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Финансовый.ЗатратыДляРаспределения);
        Запрос.УстановитьПараметр("Счет442", ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения);
        Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		Запрос.УстановитьПараметр("КорСубконто2", МассивСтатейАмортизация());
	Иначе
						
		Запрос.Текст = "ВЫБРАТЬ
		               |	ФинансовыйОбороты.КорСчет КАК Счет,
		               |	ФинансовыйОбороты.Субконто1 КАК ТТ,
		               |	ФинансовыйОбороты.Субконто2 КАК СтатьяЗатрат,
		               |	ФинансовыйОбороты.КорСубконто3 КАК ЦФО,
		               |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот
		               |ПОМЕСТИТЬ ТЗ_БАЗА
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			,
		               |			Счет В ИЕРАРХИИ (&Счет90),
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Затраты),
		               |			КорСчет В ИЕРАРХИИ (&Счет44)
		               |				И НЕ КорСчет = &Счет442,
		               |			) КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.КорСчет,
		               |	ФинансовыйОбороты.Субконто1,
		               |	ФинансовыйОбороты.Субконто2,
		               |	ФинансовыйОбороты.КорСубконто3
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот,
		               |	ФинансовыйОбороты.СтатьяЗатрат,
		               |	ФинансовыйОбороты.ЦФО,
		               |	ФинансовыйОбороты.Счет
		               |ПОМЕСТИТЬ ТЗ_БАЗА_ОБЩИЙИТОГ
		               |ИЗ
		               |	ТЗ_БАЗА КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.СтатьяЗатрат,
		               |	ФинансовыйОбороты.ЦФО,
		               |	ФинансовыйОбороты.Счет
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_БАЗА.Счет,
		               |	ТЗ_БАЗА.ТТ,
		               |	ТЗ_БАЗА.СтатьяЗатрат,
		               |	ТЗ_БАЗА.ЦФО,
		               |	ТЗ_БАЗА.СуммаОборот КАК Сумма,
		               |	ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот КАК СуммаИтог,
		               |	ВЫБОР
		               |		КОГДА ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот = 0
		               |			ТОГДА 0
		               |		ИНАЧЕ ТЗ_БАЗА.СуммаОборот / ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот
		               |	КОНЕЦ КАК Коэффициент
		               |ПОМЕСТИТЬ ТЗ_КОЭФФИЦИЕНТЫ
		               |ИЗ
		               |	ТЗ_БАЗА КАК ТЗ_БАЗА
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТЗ_БАЗА_ОБЩИЙИТОГ КАК ТЗ_БАЗА_ОБЩИЙИТОГ
		               |		ПО ТЗ_БАЗА.Счет = ТЗ_БАЗА_ОБЩИЙИТОГ.Счет
		               |			И ТЗ_БАЗА.СтатьяЗатрат = ТЗ_БАЗА_ОБЩИЙИТОГ.СтатьяЗатрат
		               |			И ТЗ_БАЗА.ЦФО = ТЗ_БАЗА_ОБЩИЙИТОГ.ЦФО
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ФинансовыйОбороты.Счет КАК Счет,
		               |	ФинансовыйОбороты.Субконто2 КАК СтатьяЗатрат,
		               |	ФинансовыйОбороты.Субконто3 КАК ЦФО,
		               |	ТЗ_КОЭФФИЦИЕНТЫ.ТТ КАК ТТ,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	ФинансовыйОбороты.СуммаОборот КАК СуммаОборот,
		               |	ФинансовыйОбороты.СуммаОборот * ЕСТЬNULL(ТЗ_КОЭФФИЦИЕНТЫ.Коэффициент, 0) КАК Сумма,
		               |	ФинансовыйОбороты.Регистратор.Комментарий КАК Комментарий,
		               |	ФинансовыйОбороты.Регистратор.Ответственный КАК Автор,
		               |	ФинансовыйДвиженияССубконто.Содержание КАК Содержание
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Счет В ИЕРАРХИИ (&Счет44)
		               |				И НЕ Счет = &Счет442,
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Затраты),
		               |			НЕ КорСчет В ИЕРАРХИИ (&Счет90),
		               |			) КАК ФинансовыйОбороты
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_КОЭФФИЦИЕНТЫ КАК ТЗ_КОЭФФИЦИЕНТЫ
		               |		ПО ФинансовыйОбороты.Счет = ТЗ_КОЭФФИЦИЕНТЫ.Счет
		               |			И ФинансовыйОбороты.Субконто2 = ТЗ_КОЭФФИЦИЕНТЫ.СтатьяЗатрат
		               |			И ФинансовыйОбороты.Субконто3 = ТЗ_КОЭФФИЦИЕНТЫ.ЦФО
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(&НачалоПериода, &КонецПериода, СубконтоДт2 В ИЕРАРХИИ (&Затраты), , ) КАК ФинансовыйДвиженияССубконто
		               |		ПО ФинансовыйОбороты.Регистратор = ФинансовыйДвиженияССубконто.Регистратор
		               |			И ФинансовыйОбороты.Субконто2 = ФинансовыйДвиженияССубконто.СубконтоДт2
		               |			И ФинансовыйОбороты.Субконто3 = ФинансовыйДвиженияССубконто.СубконтоДт3
		               |			И ФинансовыйОбороты.СуммаОборот = ФинансовыйДвиженияССубконто.Сумма
		               |			И ФинансовыйОбороты.Счет = ФинансовыйДвиженияССубконто.СчетДт
		               |ГДЕ
		               |	ФинансовыйОбороты.Субконто2 В ИЕРАРХИИ(&Затраты)
		               |	И ФинансовыйОбороты.Субконто3 = &ЦФО";
					   
					   
		//Запрос.УстановитьПараметр("ЗатратыПостоянные", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("3"));
		Запрос.УстановитьПараметр("Затраты", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
		Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Финансовый.ЗатратыДляРаспределения);
        Запрос.УстановитьПараметр("Счет442", ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения);
        Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		Запрос.УстановитьПараметр("КорСубконто2", МассивСтатейАмортизация()); 
				
	КонецЕсли;  	
	
	Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
	Запрос.УстановитьПараметр("Все",  Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Все"));
	Запрос.УстановитьПараметр("ЦФО", ЦФО);
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	Выгрузка.Сортировать("Сумма Убыв");
	Выгрузка.Свернуть("Документ, Содержание, Автор, Комментарий", "Сумма");
	ВыгрузкаКопия = Выгрузка.Скопировать();
	ВыгрузкаКопия.Свернуть("Документ");
	//Выборка = Запрос.Выполнить().Выбрать();
	Итог = 0;
	МассивДокументу = ВыгрузкаКопия.ВыгрузитьКолонку("Документ");
	Для Каждого Документ Из МассивДокументу Цикл
		Отбор = Новый Структура;
		Отбор.Вставить("Документ", Документ);
		НайденныеСтроки = Выгрузка.НайтиСтроки(Отбор);
		Содержание = "";
		Автор = "";
		Комментарий = "";
		Сумма = 0;
		
		Для Каждого Строка Из НайденныеСтроки Цикл
			
			Содержание = Строка.Содержание;		
			Автор = Строка.Автор;
			Комментарий = Строка.Комментарий;
			Сумма = Строка.Сумма;
		    Если Сумма = 0 Тогда
				Продолжить;
			КонецЕсли;
		
			Содержание = Лев(Содержание, СтрДлина(СокрЛП(Содержание)) - 1);
			ОбластьСтрока.Параметры.Документ = Документ;
			Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
					И ТипЗнч(Документ.ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств")
						И ЗначениеЗаполнено(Документ.ДокументОснование) Тогда
				ОбластьСтрока.Параметры.Содержание = Документ.ДокументОснование.Пояснение;	
				ОбластьСтрока.Параметры.Автор = Документ.ДокументОснование.Ответственный;
				ОбластьСтрока.Параметры.Период = Документ.ДокументОснование.ПериодыТорговыхТочекСтрока;
			ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.РасходИзКассы") 
					И ЗначениеЗаполнено(Документ.ЗаявкаНаРасходованиеСредств) Тогда	
				ОбластьСтрока.Параметры.Содержание = Документ.ЗаявкаНаРасходованиеСредств.Пояснение;	
				ОбластьСтрока.Параметры.Автор = Документ.ЗаявкаНаРасходованиеСредств.Ответственный;
				ОбластьСтрока.Параметры.Период = Документ.ЗаявкаНаРасходованиеСредств.ПериодыТорговыхТочекСтрока;
			Иначе	
				ОбластьСтрока.Параметры.Содержание = Содержание;	
				ОбластьСтрока.Параметры.Автор = Автор;
			КонецЕсли;
			ОбластьСтрока.Параметры.Комментарий = Комментарий;
			ОбластьСтрока.Параметры.Сумма = Сумма;
			
	        ТабДокумент.Вывести(ОбластьСтрока);
			Итог = Итог + Сумма;
		КонецЦикла;
		
	КонецЦикла;
	//
	ОбластьИтоги.Параметры.Сумма = Итог;
	ТабДокумент.Вывести(ОбластьИтоги);
	
	ТабДокумент.ТолькоПросмотр = Истина;
	//ТабДокумент.Показать("Расшифровка по документам");  			
	
	ФормаРасшифровки = ПолучитьФорму("ФормаРасшифровки");
	ФормаРасшифровки.ЭлементыФормы.Результат.Очистить();
	ФормаРасшифровки.ЭлементыФормы.Результат.Вывести(ТабДокумент);
	ФормаРасшифровки.КлючУникальности = Новый УникальныйИдентификатор;
	ФормаРасшифровки.Открыть();
	
КонецПроцедуры

Процедура РасшифроватьПоДокументам_ОбщийСтатьиЦФО(Расшифровка)
	//пКонтрагент = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля()[0].Значение;
	Попытка
		ЦФО = ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
		ЦФО = ?(ЦФО = "", Справочники.СтруктурныеЕдиницы.ПустаяСсылка(), ЦФО);
		СтатьяГруппировка = ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;	
	Исключение
		Попытка
			ЦФО = ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].получитьродителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
			ЦФО = ?(ЦФО = "", Справочники.СтруктурныеЕдиницы.ПустаяСсылка(), ЦФО);
			СтатьяГруппировка = ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].получитьродителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;	
		Исключение
			ЦФО = ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
			ЦФО = ?(ЦФО = "", Справочники.СтруктурныеЕдиницы.ПустаяСсылка(), ЦФО);
			СтатьяГруппировка = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;	
		
		КонецПопытки;
	КонецПопытки;
	
	СтатьяДР_Код = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[1].Значение);
	СтатьяДР_Наименование = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение);
	
	пПараметрПериод = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	
	ПериодВыводаГод   = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;
	ПериодВыводаМесяц = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[1].Значение;
	ПериодВывода = ДатаРасшифровки(ПериодВыводаМесяц, ПериодВыводаГод); 

	Если НачалоМесяца(ПериодВывода) >= НачалоДня(ЭлементыФормы.ДинамическийОтборДатаНачала.Значение) Тогда
		НачалоПериода = НачалоМесяца(ПериодВывода);
	Иначе
		НачалоПериода = НачалоДня(ЭлементыФормы.ДинамическийОтборДатаНачала.Значение);
	КонецЕсли;
	
	Если КонецМесяца(ПериодВывода) <= КонецДня(ЭлементыФормы.ДинамическийОтборДатаОкончания.Значение) Тогда
		КонецПериода = КонецМесяца(ПериодВывода);
	Иначе
		КонецПериода = КонецДня(ЭлементыФормы.ДинамическийОтборДатаОкончания.Значение);
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("РасшифровкаПоДокументам");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
	//
	ОбластьШапка.Параметры.Код = СтатьяДР_Код;
	ОбластьШапка.Параметры.Статья = СтатьяДР_Наименование;
	ОбластьШапка.Параметры.ДатаНач = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	ОбластьШапка.Параметры.ДатаКон = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	
	ТабДокумент.Вывести(ОбластьШапка);
	//
	Запрос = Новый Запрос;
	Если СтатьяДР_Код = "01" Тогда				   
		СтатьяДР_Код = "1";
		Запрос.Текст = "ВЫБРАТЬ
		               |	""01"" КАК Код,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	СУММА(-ФинансовыйОбороты.СуммаОборот) КАК Сумма
		               |ПОМЕСТИТЬ ВремТаб
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Счет В ИЕРАРХИИ (&СчетПродажи),
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Выручка)
		               |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |					ИЛИ Субконто1.ТипРозничнойТочки = &Проект)
		               |				И Субконто3 = &ЦФО,
		               |			,
		               |			) КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.Регистратор
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВремТаб.Документ,
		               |	ВремТаб.Сумма,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)) КАК Комментарий,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный КАК Автор
		               |ИЗ
		               |	ВремТаб КАК ВремТаб
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
		               |				&НачалоПериода,
		               |				&КонецПериода,
		               |				Счет В ИЕРАРХИИ (&СчетПродажи)
		               |					И Субконто2 В ИЕРАРХИИ (&Выручка)
		               |					И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |						ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |				,
		               |				) КАК ФинансовыйДвиженияССубконто
		               |		ПО ВремТаб.Документ = ФинансовыйДвиженияССубконто.Регистратор
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВремТаб.Документ,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)),
		               |	ВремТаб.Сумма
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ВремТаб.Документ.Дата";
				   
		Запрос.УстановитьПараметр("Выручка", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("СчетПродажи", ПланыСчетов.Финансовый.Продажи);	
			
	ИначеЕсли СтатьяДР_Код = "10" Тогда				   
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	""10"" КАК Код,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	СУММА(-ФинансовыйОбороты.СуммаОборот) КАК Сумма
		               |ПОМЕСТИТЬ ВремТаб
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Счет В ИЕРАРХИИ (&Счет01),
		               |			,
		               |			НЕ (КорСубконто2 В (&КорСубконто2))
		               |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |					ИЛИ Субконто1.ТипРозничнойТочки = &Проект)
		               |				И Субконто3 = &ЦФО,
		               |			,
		               |			) КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.Регистратор
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВремТаб.Документ,
		               |	ВремТаб.Сумма,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)) КАК Комментарий,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный КАК Автор
		               |ИЗ
		               |	ВремТаб КАК ВремТаб
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
		               |				&НачалоПериода,
		               |				&КонецПериода,
		               |				Счет В ИЕРАРХИИ (&Счет01)
		               |					И (ТИПЗНАЧЕНИЯ(КорСубконто2) = ТИПЗНАЧЕНИЯ(&КорСубконто2)
		               |							И КорСубконто2 <> &КорСубконто2
		               |						ИЛИ ТИПЗНАЧЕНИЯ(КорСубконто2) <> ТИПЗНАЧЕНИЯ(&КорСубконто2))
		               |					И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |						ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |				,
		               |				) КАК ФинансовыйДвиженияССубконто
		               |		ПО ВремТаб.Документ = ФинансовыйДвиженияССубконто.Регистратор
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВремТаб.Документ,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)),
		               |	ВремТаб.Сумма
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ВремТаб.Документ.Дата";
				   
		Запрос.УстановитьПараметр("Выручка", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("Счет01", ПланыСчетов.Финансовый.Инвестиции);	
		Запрос.УстановитьПараметр("КорСубконто2", МассивСтатейАмортизация());		   	 	
		
	ИначеЕсли (СтатьяДР_Код = "330"  ИЛИ СтатьяДР_Код = "05"
		 ИЛИ СтатьяДР_Код = "340" Или СтатьяДР_Код = "350" 
		 ИЛИ СтатьяДР_Код = "351" Или СтатьяДР_Код = "361" 
		 ИЛИ СтатьяДР_Код = "371" Или СтатьяДР_Код = "392"  
		 ИЛИ СтатьяДР_Код = "393" Или СтатьяДР_Код = "410" 
		 Или СтатьяДР_Код = "810" ИЛИ СтатьяДР_Код = "33010" 
		 Или СтатьяДР_Код = "33011"
		 ИЛИ СтатьяДР_Код = "34010" Или СтатьяДР_Код = "34011" 
		 ИЛИ СтатьяДР_Код = "35010" Или СтатьяДР_Код = "35011" 
		 ИЛИ СтатьяДР_Код = "35113" Или СтатьяДР_Код = "36110"  
		 ИЛИ СтатьяДР_Код = "36120" Или СтатьяДР_Код = "36190" 
		 ИЛИ СтатьяДР_Код = "36198" Или СтатьяДР_Код = "36201" 
		 ИЛИ СтатьяДР_Код = "37110" Или СтатьяДР_Код = "37115"   
		 ИЛИ СтатьяДР_Код = "37120" Или СтатьяДР_Код = "37190"  
		 ИЛИ СтатьяДР_Код = "37195" Или СтатьяДР_Код = "39230" 
		 ИЛИ СтатьяДР_Код = "39314" Или СтатьяДР_Код = "39320" 
		 ИЛИ СтатьяДР_Код = "39391" Или СтатьяДР_Код = "39397"
		 ИЛИ СтатьяДР_Код = "39399" Или СтатьяДР_Код = "41010"  
		 ИЛИ СтатьяДР_Код = "41020" Или СтатьяДР_Код = "41021" 
		 ИЛИ СтатьяДР_Код = "41022" Или СтатьяДР_Код = "41029" 
		 ИЛИ СтатьяДР_Код = "81010" Или СтатьяДР_Код = "81011"
		 ИЛИ СтатьяДР_Код = "81012" Или СтатьяДР_Код = "81013") И СтатьяГруппировка =  "Общие расходы" Тогда 
		 
		 Если СтатьяДР_Код = "05" Тогда
		 	СтатьяДР_Код = "5";
		 КонецЕсли;
		 Запрос.Текст = "ВЫБРАТЬ
		                |	ФинансовыйОбороты.КорСчет КАК Счет,
		                |	ФинансовыйОбороты.Субконто1 КАК ТТ,
		                |	ФинансовыйОбороты.Субконто2 КАК СтатьяЗатрат,
		                |	ФинансовыйОбороты.КорСубконто3 КАК ЦФО,
		                |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот
		                |ПОМЕСТИТЬ ТЗ_БАЗА
		                |ИЗ
		                |	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, , Счет В ИЕРАРХИИ (&Счет90), , Субконто2 В ИЕРАРХИИ (&Затраты), КорСчет = &Счет442, ) КАК ФинансовыйОбороты
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ФинансовыйОбороты.КорСчет,
		                |	ФинансовыйОбороты.Субконто1,
		                |	ФинансовыйОбороты.Субконто2,
		                |	ФинансовыйОбороты.КорСубконто3
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот,
		                |	ФинансовыйОбороты.СтатьяЗатрат,
		                |	ФинансовыйОбороты.ЦФО,
		                |	ФинансовыйОбороты.Счет
		                |ПОМЕСТИТЬ ТЗ_БАЗА_ОБЩИЙИТОГ
		                |ИЗ
		                |	ТЗ_БАЗА КАК ФинансовыйОбороты
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ФинансовыйОбороты.СтатьяЗатрат,
		                |	ФинансовыйОбороты.ЦФО,
		                |	ФинансовыйОбороты.Счет
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ТЗ_БАЗА.Счет,
		                |	ТЗ_БАЗА.ТТ,
		                |	ТЗ_БАЗА.СтатьяЗатрат,
		                |	ТЗ_БАЗА.ЦФО,
		                |	ТЗ_БАЗА.СуммаОборот КАК Сумма,
		                |	ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот КАК СуммаИтог,
		                |	ВЫБОР
		                |		КОГДА ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот = 0
		                |			ТОГДА 0
		                |		ИНАЧЕ ТЗ_БАЗА.СуммаОборот / ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот
		                |	КОНЕЦ КАК Коэффициент
		                |ПОМЕСТИТЬ ТЗ_КОЭФФИЦИЕНТЫ
		                |ИЗ
		                |	ТЗ_БАЗА КАК ТЗ_БАЗА
		                |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТЗ_БАЗА_ОБЩИЙИТОГ КАК ТЗ_БАЗА_ОБЩИЙИТОГ
		                |		ПО ТЗ_БАЗА.Счет = ТЗ_БАЗА_ОБЩИЙИТОГ.Счет
		                |			И ТЗ_БАЗА.СтатьяЗатрат = ТЗ_БАЗА_ОБЩИЙИТОГ.СтатьяЗатрат
		                |			И ТЗ_БАЗА.ЦФО = ТЗ_БАЗА_ОБЩИЙИТОГ.ЦФО
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ФинансовыйОбороты.Счет КАК Счет,
		                |	ФинансовыйОбороты.Субконто2 КАК СтатьяЗатрат,
		                |	ФинансовыйОбороты.Субконто3 КАК ЦФО,
		                |	ТЗ_КОЭФФИЦИЕНТЫ.ТТ КАК ТТ,
		                |	ФинансовыйОбороты.Регистратор КАК Документ,
		                |	ФинансовыйОбороты.СуммаОборот КАК СуммаОборот,
		                |	ФинансовыйОбороты.СуммаОборот * ЕСТЬNULL(ТЗ_КОЭФФИЦИЕНТЫ.Коэффициент, 0) КАК Сумма,
		                |	ФинансовыйОбороты.Регистратор.Комментарий КАК Комментарий,
		                |	ФинансовыйОбороты.Регистратор.Ответственный КАК Автор,
		                |	ФинансовыйДвиженияССубконто.Содержание КАК Содержание
		                |ИЗ
		                |	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет В ИЕРАРХИИ (&Счет442), , Субконто2 В ИЕРАРХИИ (&Затраты), НЕ КорСчет В ИЕРАРХИИ (&Счет90), ) КАК ФинансовыйОбороты
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_КОЭФФИЦИЕНТЫ КАК ТЗ_КОЭФФИЦИЕНТЫ
		                |		ПО ФинансовыйОбороты.Счет = ТЗ_КОЭФФИЦИЕНТЫ.Счет
		                |			И ФинансовыйОбороты.Субконто2 = ТЗ_КОЭФФИЦИЕНТЫ.СтатьяЗатрат
		                |			И ФинансовыйОбороты.Субконто3 = ТЗ_КОЭФФИЦИЕНТЫ.ЦФО
		                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(&НачалоПериода, &КонецПериода, СубконтоДт2 В ИЕРАРХИИ (&Затраты), , ) КАК ФинансовыйДвиженияССубконто
		                |		ПО ФинансовыйОбороты.Регистратор = ФинансовыйДвиженияССубконто.Регистратор
		                |			И ФинансовыйОбороты.Субконто2 = ФинансовыйДвиженияССубконто.СубконтоДт2
		                |			И ФинансовыйОбороты.Субконто3 = ФинансовыйДвиженияССубконто.СубконтоДт3
		                |			И ФинансовыйОбороты.СуммаОборот = ФинансовыйДвиженияССубконто.Сумма
		                |			И ФинансовыйОбороты.Счет = ФинансовыйДвиженияССубконто.СчетДт
		                |ГДЕ
		                |	ФинансовыйОбороты.Субконто2 В ИЕРАРХИИ(&Затраты)
		                |	И ФинансовыйОбороты.Субконто3 = &ЦФО";
	
				   
		//Запрос.УстановитьПараметр("ЗатратыПостоянные", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("3"));
		Запрос.УстановитьПараметр("Затраты", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
		Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Финансовый.ЗатратыДляРаспределения);
        Запрос.УстановитьПараметр("Счет442", ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения);
        Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		Запрос.УстановитьПараметр("КорСубконто2", МассивСтатейАмортизация());
	Иначе
						
		Запрос.Текст = "ВЫБРАТЬ
		               |	ФинансовыйОбороты.КорСчет КАК Счет,
		               |	ФинансовыйОбороты.Субконто1 КАК ТТ,
		               |	ФинансовыйОбороты.Субконто2 КАК СтатьяЗатрат,
		               |	ФинансовыйОбороты.КорСубконто3 КАК ЦФО,
		               |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот
		               |ПОМЕСТИТЬ ТЗ_БАЗА
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			,
		               |			Счет В ИЕРАРХИИ (&Счет90),
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Затраты),
		               |			КорСчет В ИЕРАРХИИ (&Счет44)
		               |				И НЕ КорСчет = &Счет442,
		               |			) КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.КорСчет,
		               |	ФинансовыйОбороты.Субконто1,
		               |	ФинансовыйОбороты.Субконто2,
		               |	ФинансовыйОбороты.КорСубконто3
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот,
		               |	ФинансовыйОбороты.СтатьяЗатрат,
		               |	ФинансовыйОбороты.ЦФО,
		               |	ФинансовыйОбороты.Счет
		               |ПОМЕСТИТЬ ТЗ_БАЗА_ОБЩИЙИТОГ
		               |ИЗ
		               |	ТЗ_БАЗА КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.СтатьяЗатрат,
		               |	ФинансовыйОбороты.ЦФО,
		               |	ФинансовыйОбороты.Счет
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_БАЗА.Счет,
		               |	ТЗ_БАЗА.ТТ,
		               |	ТЗ_БАЗА.СтатьяЗатрат,
		               |	ТЗ_БАЗА.ЦФО,
		               |	ТЗ_БАЗА.СуммаОборот КАК Сумма,
		               |	ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот КАК СуммаИтог,
		               |	ВЫБОР
		               |		КОГДА ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот = 0
		               |			ТОГДА 0
		               |		ИНАЧЕ ТЗ_БАЗА.СуммаОборот / ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот
		               |	КОНЕЦ КАК Коэффициент
		               |ПОМЕСТИТЬ ТЗ_КОЭФФИЦИЕНТЫ
		               |ИЗ
		               |	ТЗ_БАЗА КАК ТЗ_БАЗА
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТЗ_БАЗА_ОБЩИЙИТОГ КАК ТЗ_БАЗА_ОБЩИЙИТОГ
		               |		ПО ТЗ_БАЗА.Счет = ТЗ_БАЗА_ОБЩИЙИТОГ.Счет
		               |			И ТЗ_БАЗА.СтатьяЗатрат = ТЗ_БАЗА_ОБЩИЙИТОГ.СтатьяЗатрат
		               |			И ТЗ_БАЗА.ЦФО = ТЗ_БАЗА_ОБЩИЙИТОГ.ЦФО
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ФинансовыйОбороты.Счет КАК Счет,
		               |	ФинансовыйОбороты.Субконто2 КАК СтатьяЗатрат,
		               |	ФинансовыйОбороты.Субконто3 КАК ЦФО,
		               |	ТЗ_КОЭФФИЦИЕНТЫ.ТТ КАК ТТ,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	ФинансовыйОбороты.СуммаОборот КАК СуммаОборот,
		               |	ФинансовыйОбороты.СуммаОборот * ЕСТЬNULL(ТЗ_КОЭФФИЦИЕНТЫ.Коэффициент, 0) КАК Сумма,
		               |	ФинансовыйОбороты.Регистратор.Комментарий КАК Комментарий,
		               |	ФинансовыйОбороты.Регистратор.Ответственный КАК Автор,
		               |	ФинансовыйДвиженияССубконто.Содержание КАК Содержание
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Счет В ИЕРАРХИИ (&Счет44)
		               |				И НЕ Счет = &Счет442,
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Затраты),
		               |			НЕ КорСчет В ИЕРАРХИИ (&Счет90),
		               |			) КАК ФинансовыйОбороты
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_КОЭФФИЦИЕНТЫ КАК ТЗ_КОЭФФИЦИЕНТЫ
		               |		ПО ФинансовыйОбороты.Счет = ТЗ_КОЭФФИЦИЕНТЫ.Счет
		               |			И ФинансовыйОбороты.Субконто2 = ТЗ_КОЭФФИЦИЕНТЫ.СтатьяЗатрат
		               |			И ФинансовыйОбороты.Субконто3 = ТЗ_КОЭФФИЦИЕНТЫ.ЦФО
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(&НачалоПериода, &КонецПериода, СубконтоДт2 В ИЕРАРХИИ (&Затраты), , ) КАК ФинансовыйДвиженияССубконто
		               |		ПО ФинансовыйОбороты.Регистратор = ФинансовыйДвиженияССубконто.Регистратор
		               |			И ФинансовыйОбороты.Субконто2 = ФинансовыйДвиженияССубконто.СубконтоДт2
		               |			И ФинансовыйОбороты.Субконто3 = ФинансовыйДвиженияССубконто.СубконтоДт3
		               |			И ФинансовыйОбороты.СуммаОборот = ФинансовыйДвиженияССубконто.Сумма
		               |			И ФинансовыйОбороты.Счет = ФинансовыйДвиженияССубконто.СчетДт
		               |ГДЕ
		               |	ФинансовыйОбороты.Субконто2 В ИЕРАРХИИ(&Затраты)
		               |	И ФинансовыйОбороты.Субконто3 = &ЦФО";
					   
					   
		//Запрос.УстановитьПараметр("ЗатратыПостоянные", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("3"));
		Запрос.УстановитьПараметр("Затраты", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
		Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Финансовый.ЗатратыДляРаспределения);
        Запрос.УстановитьПараметр("Счет442", ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения);
        Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		Запрос.УстановитьПараметр("КорСубконто2", МассивСтатейАмортизация()); 
				
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
	Запрос.УстановитьПараметр("Все",  Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Все"));
	Запрос.УстановитьПараметр("ЦФО", ЦФО);
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	Выгрузка.Сортировать("Сумма Убыв");
	Выгрузка.Свернуть("Документ, Содержание, Автор, Комментарий", "Сумма");
	ВыгрузкаКопия = Выгрузка.Скопировать();
	ВыгрузкаКопия.Свернуть("Документ");
	//Выборка = Запрос.Выполнить().Выбрать();
	Итог = 0;
	МассивДокументу = ВыгрузкаКопия.ВыгрузитьКолонку("Документ");
	Для Каждого Документ Из МассивДокументу Цикл
		Отбор = Новый Структура;
		Отбор.Вставить("Документ", Документ);
		НайденныеСтроки = Выгрузка.НайтиСтроки(Отбор);
		Содержание = "";
		Автор = "";
		Комментарий = "";
		Сумма = 0;
		
		Для Каждого Строка Из НайденныеСтроки Цикл
			
			Содержание = Строка.Содержание;		
			Автор = Строка.Автор;
			Комментарий = Строка.Комментарий;
			Сумма = Строка.Сумма;
		    Если Сумма = 0 Тогда
				Продолжить;
			КонецЕсли;
		
			Содержание = Лев(Содержание, СтрДлина(СокрЛП(Содержание)) - 1);
			
			ОбластьСтрока.Параметры.Документ = Документ;
			
			//
			Если ТипЗнч(Документ) = Тип("ДокументСсылка.Операция") Тогда
				
				СтруктураРасшифровки = Новый Структура;
				СтруктураРасшифровки.Вставить("Документ", Строка.Документ);
				СтруктураРасшифровки.Вставить("Сумма", Сумма);
				
				ОбластьСтрока.Параметры.ДокументСтруктура = СтруктураРасшифровки;
				
				
			Иначе
				
				ОбластьСтрока.Параметры.ДокументСтруктура = Документ;
				
			КонецЕсли;
			
			//
			Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
					И ТипЗнч(Документ.ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств")
						И ЗначениеЗаполнено(Документ.ДокументОснование) Тогда
				ОбластьСтрока.Параметры.Содержание = Документ.ДокументОснование.Пояснение;	
				ОбластьСтрока.Параметры.Автор = Документ.ДокументОснование.Ответственный;
				ОбластьСтрока.Параметры.Период = Документ.ДокументОснование.ПериодыТорговыхТочекСтрока;
			ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.РасходИзКассы") 
					И ЗначениеЗаполнено(Документ.ЗаявкаНаРасходованиеСредств) Тогда	
				ОбластьСтрока.Параметры.Содержание = Документ.ЗаявкаНаРасходованиеСредств.Пояснение;	
				ОбластьСтрока.Параметры.Автор = Документ.ЗаявкаНаРасходованиеСредств.Ответственный;
				ОбластьСтрока.Параметры.Период = Документ.ЗаявкаНаРасходованиеСредств.ПериодыТорговыхТочекСтрока;
			Иначе	
				ОбластьСтрока.Параметры.Содержание = Содержание;	
				ОбластьСтрока.Параметры.Автор = Автор;
			КонецЕсли;
			ОбластьСтрока.Параметры.Комментарий = Комментарий;
			ОбластьСтрока.Параметры.Сумма = Сумма;
			
	        ТабДокумент.Вывести(ОбластьСтрока);
			Итог = Итог + Сумма;
		КонецЦикла;
		
	КонецЦикла;
	//
	ОбластьИтоги.Параметры.Сумма = Итог;
	ТабДокумент.Вывести(ОбластьИтоги);
	
	ТабДокумент.ТолькоПросмотр = Истина;
	//ТабДокумент.Показать("Расшифровка по документам");
	
	ФормаРасшифровки = ПолучитьФорму("ФормаРасшифровки");
	ФормаРасшифровки.ЭлементыФормы.Результат.Очистить();
	ФормаРасшифровки.ЭлементыФормы.Результат.Вывести(ТабДокумент);
	ФормаРасшифровки.КлючУникальности = Новый УникальныйИдентификатор;
	ФормаРасшифровки.Открыть();
	
	
КонецПроцедуры

Процедура РасшифроватьПоДокументам_ВкусВилл(Расшифровка)
	//пКонтрагент = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля()[0].Значение;
	ГруппаУр1 = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;
	СтруктурнаяЕдиница = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	Если ГруппаУр1 = "Выручка" Тогда
		СтатьяДР_Код = "1";
	ИначеЕсли ГруппаУр1 = "Переменные затраты" Тогда
		СтатьяДР_Код = "2";
	ИначеЕсли ГруппаУр1 = "Постоянные затраты" Тогда
		СтатьяДР_Код = "3";
	Иначе
		Возврат;
	КонецЕсли;
	
	//СтатьяДР_Код = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[1].Значение);
	//СтатьяДР_Наименование = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение);
	
	//пПараметрПериод = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	ПериодВыводаГод   = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;
	ПериодВыводаМесяц = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[1].Значение;
	ПериодВывода = ДатаРасшифровки(ПериодВыводаМесяц, ПериодВыводаГод); 

	Если НачалоМесяца(ПериодВывода) >= НачалоДня(ЭлементыФормы.ДинамическийОтборДатаНачала.Значение) Тогда
		НачалоПериода = НачалоМесяца(ПериодВывода);
	Иначе
		НачалоПериода = НачалоДня(ЭлементыФормы.ДинамическийОтборДатаНачала.Значение);
	КонецЕсли;
	
	Если КонецМесяца(ПериодВывода) <= КонецДня(ЭлементыФормы.ДинамическийОтборДатаОкончания.Значение) Тогда
		КонецПериода = КонецМесяца(ПериодВывода);
	Иначе
		КонецПериода = КонецДня(ЭлементыФормы.ДинамическийОтборДатаОкончания.Значение);
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("РасшифровкаПоДокументам");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
	//
	ОбластьШапка.Параметры.Код = СтатьяДР_Код;
	ОбластьШапка.Параметры.Статья = ГруппаУр1 + " - " + Строка(СтруктурнаяЕдиница);
	ОбластьШапка.Параметры.ДатаНач = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	ОбластьШапка.Параметры.ДатаКон = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	
	ТабДокумент.Вывести(ОбластьШапка);
	//
	Запрос = Новый Запрос;
	Если СтатьяДР_Код = "1" Тогда				   
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	""01"" КАК Код,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	СУММА(-ФинансовыйОбороты.СуммаОборот) КАК Сумма
		               |ПОМЕСТИТЬ ВремТаб
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Счет В ИЕРАРХИИ (&СчетПродажи),
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Выручка)
		               |				И Субконто1 = &СтруктурнаяЕдиница
		               |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |					ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |			,
		               |			) КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.Регистратор
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВремТаб.Документ,
		               |	ВремТаб.Сумма,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)) КАК Комментарий,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный КАК Автор
		               |ИЗ
		               |	ВремТаб КАК ВремТаб
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
		               |				&НачалоПериода,
		               |				&КонецПериода,
		               |				Счет В ИЕРАРХИИ (&СчетПродажи)
		               |					И Субконто2 В ИЕРАРХИИ (&Выручка)
		               |					И Субконто1 = &СтруктурнаяЕдиница
		               |					И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |						ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |				,
		               |				) КАК ФинансовыйДвиженияССубконто
		               |		ПО ВремТаб.Документ = ФинансовыйДвиженияССубконто.Регистратор
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВремТаб.Документ,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)),
		               |	ВремТаб.Сумма
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ВремТаб.Документ.Дата";
				   
		Запрос.УстановитьПараметр("Выручка", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(Число(СтатьяДР_Код))));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.Магазин);
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("СчетПродажи", ПланыСчетов.Финансовый.Продажи);
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
				   
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		               |	ФинансовыйОбороты.КорСчет КАК Счет,
		               |	ФинансовыйОбороты.Субконто1 КАК ТТ,
		               |	ФинансовыйОбороты.Субконто2 КАК СтатьяЗатрат,
		               |	ФинансовыйОбороты.КорСубконто3 КАК ЦФО,
		               |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот
		               |ПОМЕСТИТЬ ТЗ_БАЗА
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			,
		               |			Счет В ИЕРАРХИИ (&Счет90),
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Затраты)
		               |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |					ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |			КорСчет В ИЕРАРХИИ (&Счет44)
		               |				И НЕ КорСчет = &Счет442,
		               |			) КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.КорСчет,
		               |	ФинансовыйОбороты.Субконто1,
		               |	ФинансовыйОбороты.Субконто2,
		               |	ФинансовыйОбороты.КорСубконто3
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот,
		               |	ФинансовыйОбороты.СтатьяЗатрат,
		               |	ФинансовыйОбороты.ЦФО,
		               |	ФинансовыйОбороты.Счет
		               |ПОМЕСТИТЬ ТЗ_БАЗА_ОБЩИЙИТОГ
		               |ИЗ
		               |	ТЗ_БАЗА КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.СтатьяЗатрат,
		               |	ФинансовыйОбороты.ЦФО,
		               |	ФинансовыйОбороты.Счет
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_БАЗА.Счет,
		               |	ТЗ_БАЗА.ТТ,
		               |	ТЗ_БАЗА.СтатьяЗатрат,
		               |	ТЗ_БАЗА.ЦФО,
		               |	ТЗ_БАЗА.СуммаОборот КАК Сумма,
		               |	ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот КАК СуммаИтог,
		               |	ВЫБОР
		               |		КОГДА ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот = 0
		               |			ТОГДА 0
		               |		ИНАЧЕ ТЗ_БАЗА.СуммаОборот / ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот
		               |	КОНЕЦ КАК Коэффициент
		               |ПОМЕСТИТЬ ТЗ_КОЭФФИЦИЕНТЫ
		               |ИЗ
		               |	ТЗ_БАЗА КАК ТЗ_БАЗА
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТЗ_БАЗА_ОБЩИЙИТОГ КАК ТЗ_БАЗА_ОБЩИЙИТОГ
		               |		ПО ТЗ_БАЗА.Счет = ТЗ_БАЗА_ОБЩИЙИТОГ.Счет
		               |			И ТЗ_БАЗА.СтатьяЗатрат = ТЗ_БАЗА_ОБЩИЙИТОГ.СтатьяЗатрат
		               |			И ТЗ_БАЗА.ЦФО = ТЗ_БАЗА_ОБЩИЙИТОГ.ЦФО
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ФинансовыйОбороты.Счет КАК Счет,
		               |	ФинансовыйОбороты.Субконто2 КАК СтатьяЗатрат,
		               |	ФинансовыйОбороты.Субконто3 КАК ЦФО,
		               |	ТЗ_КОЭФФИЦИЕНТЫ.ТТ КАК ТТ,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	ФинансовыйОбороты.СуммаОборот КАК СуммаОборот,
		               |	ФинансовыйОбороты.СуммаОборот * ЕСТЬNULL(ТЗ_КОЭФФИЦИЕНТЫ.Коэффициент, 0) КАК Сумма,
		               |	ФинансовыйОбороты.Регистратор.Комментарий КАК Комментарий,
		               |	ФинансовыйОбороты.Регистратор.Ответственный КАК Автор,
		               |	ФинансовыйДвиженияССубконто.Содержание КАК Содержание
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Счет В ИЕРАРХИИ (&Счет44)
		               |				И НЕ Счет = &Счет442,
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Затраты),
		               |			НЕ КорСчет В ИЕРАРХИИ (&Счет90),
		               |			) КАК ФинансовыйОбороты
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_КОЭФФИЦИЕНТЫ КАК ТЗ_КОЭФФИЦИЕНТЫ
		               |		ПО ФинансовыйОбороты.Счет = ТЗ_КОЭФФИЦИЕНТЫ.Счет
		               |			И ФинансовыйОбороты.Субконто2 = ТЗ_КОЭФФИЦИЕНТЫ.СтатьяЗатрат
		               |			И ФинансовыйОбороты.Субконто3 = ТЗ_КОЭФФИЦИЕНТЫ.ЦФО
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(&НачалоПериода, &КонецПериода, СубконтоДт2 В ИЕРАРХИИ (&Затраты), , ) КАК ФинансовыйДвиженияССубконто
		               |		ПО ФинансовыйОбороты.Регистратор = ФинансовыйДвиженияССубконто.Регистратор
		               |			И ФинансовыйОбороты.Субконто2 = ФинансовыйДвиженияССубконто.СубконтоДт2
		               |			И ФинансовыйОбороты.Субконто3 = ФинансовыйДвиженияССубконто.СубконтоДт3
		               |			И ФинансовыйОбороты.СуммаОборот = ФинансовыйДвиженияССубконто.Сумма
		               |			И ФинансовыйОбороты.Счет = ФинансовыйДвиженияССубконто.СчетДт
		               |ГДЕ
		               |	ФинансовыйОбороты.Субконто2 В ИЕРАРХИИ(&Затраты)
		               |	И ТЗ_КОЭФФИЦИЕНТЫ.ТТ = &ТТ
		               |	И ТЗ_КОЭФФИЦИЕНТЫ.ТТ.ТипРозничнойТочки = &Проект";
					   
					   
		//Запрос.УстановитьПараметр("ЗатратыПостоянные", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("3"));
		Запрос.УстановитьПараметр("Затраты", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.Магазин);
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
		Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Финансовый.ЗатратыДляРаспределения);
        Запрос.УстановитьПараметр("Счет442", ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения);
        Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		Запрос.УстановитьПараметр("КорСубконто2", МассивСтатейАмортизация()); 
		//Запрос.УстановитьПараметр("Все",  Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Все"));   		        	
				
	        //Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
				
        //Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		//Запрос.УстановитьПараметр("КорСубконто2", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("61010"));
		
	КонецЕсли;		  
	
	Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
	Запрос.УстановитьПараметр("Все",  Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Все"));
	Запрос.УстановитьПараметр("ТТ", СтруктурнаяЕдиница);

	Выгрузка = Запрос.Выполнить().Выгрузить();
	Выгрузка.Сортировать("Сумма Убыв");
	Выгрузка.Свернуть("Документ, Содержание, Автор, Комментарий", "Сумма");
	ВыгрузкаКопия = Выгрузка.Скопировать();
	ВыгрузкаКопия.Свернуть("Документ");
	//Выборка = Запрос.Выполнить().Выбрать();
	Итог = 0;
	МассивДокументу = ВыгрузкаКопия.ВыгрузитьКолонку("Документ");
	Для Каждого Документ Из МассивДокументу Цикл
		Отбор = Новый Структура;
		Отбор.Вставить("Документ", Документ);
		НайденныеСтроки = Выгрузка.НайтиСтроки(Отбор);
		Содержание = "";
		Автор = "";
		Комментарий = "";
		Сумма = 0;
		
		Для Каждого Строка Из НайденныеСтроки Цикл
			
			Содержание = Строка.Содержание;		
			Автор = Строка.Автор;
			Комментарий = Строка.Комментарий;
			Сумма = Строка.Сумма;
		    Если Сумма = 0 Тогда
				Продолжить;
			КонецЕсли;
		
			Содержание = Лев(Содержание, СтрДлина(СокрЛП(Содержание)) - 1);
			ОбластьСтрока.Параметры.Документ = Документ;
			Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
					И ТипЗнч(Документ.ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств")
						И ЗначениеЗаполнено(Документ.ДокументОснование) Тогда
				ОбластьСтрока.Параметры.Содержание = Документ.ДокументОснование.Пояснение;	
				ОбластьСтрока.Параметры.Автор = Документ.ДокументОснование.Ответственный;
				ОбластьСтрока.Параметры.Период = Документ.ДокументОснование.ПериодыТорговыхТочекСтрока;
			ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.РасходИзКассы") 
					И ЗначениеЗаполнено(Документ.ЗаявкаНаРасходованиеСредств) Тогда	
				ОбластьСтрока.Параметры.Содержание = Документ.ЗаявкаНаРасходованиеСредств.Пояснение;	
				ОбластьСтрока.Параметры.Автор = Документ.ЗаявкаНаРасходованиеСредств.Ответственный;
				ОбластьСтрока.Параметры.Период = Документ.ЗаявкаНаРасходованиеСредств.ПериодыТорговыхТочекСтрока;
			Иначе	
				ОбластьСтрока.Параметры.Содержание = Содержание;	
				ОбластьСтрока.Параметры.Автор = Автор;
			КонецЕсли;
			ОбластьСтрока.Параметры.Комментарий = Комментарий;
			ОбластьСтрока.Параметры.Сумма = Сумма;
			
	        ТабДокумент.Вывести(ОбластьСтрока);
			Итог = Итог + Сумма;
		КонецЦикла;
		
	КонецЦикла;
	//
	ОбластьИтоги.Параметры.Сумма = Итог;
	ТабДокумент.Вывести(ОбластьИтоги);
	
	ТабДокумент.ТолькоПросмотр = Истина;
	//ТабДокумент.Показать("Расшифровка по документам");
	
	ФормаРасшифровки = ПолучитьФорму("ФормаРасшифровки");
	ФормаРасшифровки.ЭлементыФормы.Результат.Очистить();
	ФормаРасшифровки.ЭлементыФормы.Результат.Вывести(ТабДокумент);
	ФормаРасшифровки.КлючУникальности = Новый УникальныйИдентификатор;
	ФормаРасшифровки.Открыть();
	
КонецПроцедуры
Процедура РасшифроватьПоДокументам_Избенка(Расшифровка)
	//пКонтрагент = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля()[0].Значение;
	ГруппаУр1 = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;
	СтруктурнаяЕдиница = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	Если ГруппаУр1 = "Выручка" Тогда
		СтатьяДР_Код = "1";
	ИначеЕсли ГруппаУр1 = "Переменные затраты" Тогда
		СтатьяДР_Код = "2";
	ИначеЕсли ГруппаУр1 = "Постоянные затраты" Тогда
		СтатьяДР_Код = "3";
	Иначе
		Возврат;
	КонецЕсли;
	
	//СтатьяДР_Код = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[1].Значение);
	//СтатьяДР_Наименование = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение);
	
	//пПараметрПериод = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	ПериодВыводаГод   = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;
	ПериодВыводаМесяц = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[1].Значение;
	ПериодВывода = ДатаРасшифровки(ПериодВыводаМесяц, ПериодВыводаГод); 

	Если НачалоМесяца(ПериодВывода) >= НачалоДня(ЭлементыФормы.ДинамическийОтборДатаНачала.Значение) Тогда
		НачалоПериода = НачалоМесяца(ПериодВывода);
	Иначе
		НачалоПериода = НачалоДня(ЭлементыФормы.ДинамическийОтборДатаНачала.Значение);
	КонецЕсли;
	
	Если КонецМесяца(ПериодВывода) <= КонецДня(ЭлементыФормы.ДинамическийОтборДатаОкончания.Значение) Тогда
		КонецПериода = КонецМесяца(ПериодВывода);
	Иначе
		КонецПериода = КонецДня(ЭлементыФормы.ДинамическийОтборДатаОкончания.Значение);
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("РасшифровкаПоДокументам");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
	//
	ОбластьШапка.Параметры.Код = СтатьяДР_Код;
	ОбластьШапка.Параметры.Статья = ГруппаУр1 + " - " + Строка(СтруктурнаяЕдиница);
	ОбластьШапка.Параметры.ДатаНач = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	ОбластьШапка.Параметры.ДатаКон = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	
	ТабДокумент.Вывести(ОбластьШапка);
	//
	Запрос = Новый Запрос;
	Если СтатьяДР_Код = "1" Тогда				   
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	""01"" КАК Код,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	СУММА(-ФинансовыйОбороты.СуммаОборот) КАК Сумма
		               |ПОМЕСТИТЬ ВремТаб
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Счет В ИЕРАРХИИ (&СчетПродажи),
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Выручка)
		               |				И Субконто1 = &СтруктурнаяЕдиница
		               |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |					ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |			,
		               |			) КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.Регистратор
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВремТаб.Документ,
		               |	ВремТаб.Сумма,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)) КАК Комментарий,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный КАК Автор
		               |ИЗ
		               |	ВремТаб КАК ВремТаб
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
		               |				&НачалоПериода,
		               |				&КонецПериода,
		               |				Счет В ИЕРАРХИИ (&СчетПродажи)
		               |					И Субконто2 В ИЕРАРХИИ (&Выручка)
		               |					И Субконто1 = &СтруктурнаяЕдиница
		               |					И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |						ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |				,
		               |				) КАК ФинансовыйДвиженияССубконто
		               |		ПО ВремТаб.Документ = ФинансовыйДвиженияССубконто.Регистратор
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВремТаб.Документ,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)),
		               |	ВремТаб.Сумма
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ВремТаб.Документ.Дата";
				   
		Запрос.УстановитьПараметр("Выручка", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(Число(СтатьяДР_Код))));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.Избенка);
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("СчетПродажи", ПланыСчетов.Финансовый.Продажи);
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
		
	Иначе
				   
		Запрос.Текст = "ВЫБРАТЬ
		               |	ФинансовыйОбороты.КорСчет КАК Счет,
		               |	ФинансовыйОбороты.Субконто1 КАК ТТ,
		               |	ФинансовыйОбороты.Субконто2 КАК СтатьяЗатрат,
		               |	ФинансовыйОбороты.КорСубконто3 КАК ЦФО,
		               |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот
		               |ПОМЕСТИТЬ ТЗ_БАЗА
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			,
		               |			Счет В ИЕРАРХИИ (&Счет90),
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Затраты)
		               |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |					ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |			КорСчет В ИЕРАРХИИ (&Счет44)
		               |				И НЕ КорСчет = &Счет442,
		               |			) КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.КорСчет,
		               |	ФинансовыйОбороты.Субконто1,
		               |	ФинансовыйОбороты.Субконто2,
		               |	ФинансовыйОбороты.КорСубконто3
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот,
		               |	ФинансовыйОбороты.СтатьяЗатрат,
		               |	ФинансовыйОбороты.ЦФО,
		               |	ФинансовыйОбороты.Счет
		               |ПОМЕСТИТЬ ТЗ_БАЗА_ОБЩИЙИТОГ
		               |ИЗ
		               |	ТЗ_БАЗА КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.СтатьяЗатрат,
		               |	ФинансовыйОбороты.ЦФО,
		               |	ФинансовыйОбороты.Счет
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_БАЗА.Счет,
		               |	ТЗ_БАЗА.ТТ,
		               |	ТЗ_БАЗА.СтатьяЗатрат,
		               |	ТЗ_БАЗА.ЦФО,
		               |	ТЗ_БАЗА.СуммаОборот КАК Сумма,
		               |	ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот КАК СуммаИтог,
		               |	ВЫБОР
		               |		КОГДА ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот = 0
		               |			ТОГДА 0
		               |		ИНАЧЕ ТЗ_БАЗА.СуммаОборот / ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот
		               |	КОНЕЦ КАК Коэффициент
		               |ПОМЕСТИТЬ ТЗ_КОЭФФИЦИЕНТЫ
		               |ИЗ
		               |	ТЗ_БАЗА КАК ТЗ_БАЗА
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТЗ_БАЗА_ОБЩИЙИТОГ КАК ТЗ_БАЗА_ОБЩИЙИТОГ
		               |		ПО ТЗ_БАЗА.Счет = ТЗ_БАЗА_ОБЩИЙИТОГ.Счет
		               |			И ТЗ_БАЗА.СтатьяЗатрат = ТЗ_БАЗА_ОБЩИЙИТОГ.СтатьяЗатрат
		               |			И ТЗ_БАЗА.ЦФО = ТЗ_БАЗА_ОБЩИЙИТОГ.ЦФО
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ФинансовыйОбороты.Счет КАК Счет,
		               |	ФинансовыйОбороты.Субконто2 КАК СтатьяЗатрат,
		               |	ФинансовыйОбороты.Субконто3 КАК ЦФО,
		               |	ТЗ_КОЭФФИЦИЕНТЫ.ТТ КАК ТТ,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	ФинансовыйОбороты.СуммаОборот КАК СуммаОборот,
		               |	ФинансовыйОбороты.СуммаОборот * ЕСТЬNULL(ТЗ_КОЭФФИЦИЕНТЫ.Коэффициент, 0) КАК Сумма,
		               |	ФинансовыйОбороты.Регистратор.Комментарий КАК Комментарий,
		               |	ФинансовыйОбороты.Регистратор.Ответственный КАК Автор,
		               |	ФинансовыйДвиженияССубконто.Содержание КАК Содержание
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Счет В ИЕРАРХИИ (&Счет44)
		               |				И НЕ Счет = &Счет442,
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Затраты),
		               |			НЕ КорСчет В ИЕРАРХИИ (&Счет90),
		               |			) КАК ФинансовыйОбороты
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_КОЭФФИЦИЕНТЫ КАК ТЗ_КОЭФФИЦИЕНТЫ
		               |		ПО ФинансовыйОбороты.Счет = ТЗ_КОЭФФИЦИЕНТЫ.Счет
		               |			И ФинансовыйОбороты.Субконто2 = ТЗ_КОЭФФИЦИЕНТЫ.СтатьяЗатрат
		               |			И ФинансовыйОбороты.Субконто3 = ТЗ_КОЭФФИЦИЕНТЫ.ЦФО
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(&НачалоПериода, &КонецПериода, СубконтоДт2 В ИЕРАРХИИ (&Затраты), , ) КАК ФинансовыйДвиженияССубконто
		               |		ПО ФинансовыйОбороты.Регистратор = ФинансовыйДвиженияССубконто.Регистратор
		               |			И ФинансовыйОбороты.Субконто2 = ФинансовыйДвиженияССубконто.СубконтоДт2
		               |			И ФинансовыйОбороты.Субконто3 = ФинансовыйДвиженияССубконто.СубконтоДт3
		               |			И ФинансовыйОбороты.СуммаОборот = ФинансовыйДвиженияССубконто.Сумма
		               |			И ФинансовыйОбороты.Счет = ФинансовыйДвиженияССубконто.СчетДт
		               |ГДЕ
		               |	ФинансовыйОбороты.Субконто2 В ИЕРАРХИИ(&Затраты)
		               |	И ТЗ_КОЭФФИЦИЕНТЫ.ТТ = &ТТ
		               |	И ТЗ_КОЭФФИЦИЕНТЫ.ТТ.ТипРозничнойТочки = &Проект";
				   
		Запрос.УстановитьПараметр("ЗатратыПеременные", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("2"));
		Запрос.УстановитьПараметр("Затраты", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(Число(СтатьяДР_Код))));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.Избенка);
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("СчетПродажи", ПланыСчетов.Финансовый.Продажи);
		Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Финансовый.ЗатратыДляРаспределения);
        Запрос.УстановитьПараметр("Счет442", ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения);
        Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);

		Запрос.УстановитьПараметр("КорСубконто2", МассивСтатейАмортизация());	
		
	КонецЕсли;		  
	
	Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
	Запрос.УстановитьПараметр("Все",  Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Все"));
	Запрос.УстановитьПараметр("ТТ", СтруктурнаяЕдиница);

	Выгрузка = Запрос.Выполнить().Выгрузить();
	Выгрузка.Сортировать("Сумма Убыв");
	Выгрузка.Свернуть("Документ, Содержание, Автор, Комментарий", "Сумма");
	ВыгрузкаКопия = Выгрузка.Скопировать();
	ВыгрузкаКопия.Свернуть("Документ");
	//Выборка = Запрос.Выполнить().Выбрать();
	Итог = 0;
	МассивДокументу = ВыгрузкаКопия.ВыгрузитьКолонку("Документ");
	Для Каждого Документ Из МассивДокументу Цикл
		Отбор = Новый Структура;
		Отбор.Вставить("Документ", Документ);
		НайденныеСтроки = Выгрузка.НайтиСтроки(Отбор);
		Содержание = "";
		Автор = "";
		Комментарий = "";
		Сумма = 0;
		
		Для Каждого Строка Из НайденныеСтроки Цикл
			
			Содержание = Строка.Содержание;		
			Автор = Строка.Автор;
			Комментарий = Строка.Комментарий;
			Сумма = Строка.Сумма;
		    Если Сумма = 0 Тогда
				Продолжить;
			КонецЕсли;
		
			Содержание = Лев(Содержание, СтрДлина(СокрЛП(Содержание)) - 1);
			ОбластьСтрока.Параметры.Документ = Документ;
			Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
					И ТипЗнч(Документ.ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств")
						И ЗначениеЗаполнено(Документ.ДокументОснование) Тогда
				ОбластьСтрока.Параметры.Содержание = Документ.ДокументОснование.Пояснение;	
				ОбластьСтрока.Параметры.Автор = Документ.ДокументОснование.Ответственный;
				ОбластьСтрока.Параметры.Период = Документ.ДокументОснование.ПериодыТорговыхТочекСтрока;
			ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.РасходИзКассы") 
					И ЗначениеЗаполнено(Документ.ЗаявкаНаРасходованиеСредств) Тогда	
				ОбластьСтрока.Параметры.Содержание = Документ.ЗаявкаНаРасходованиеСредств.Пояснение;	
				ОбластьСтрока.Параметры.Автор = Документ.ЗаявкаНаРасходованиеСредств.Ответственный;
				ОбластьСтрока.Параметры.Период = Документ.ЗаявкаНаРасходованиеСредств.ПериодыТорговыхТочекСтрока;
			Иначе	
				ОбластьСтрока.Параметры.Содержание = Содержание;	
				ОбластьСтрока.Параметры.Автор = Автор;
			КонецЕсли;
			ОбластьСтрока.Параметры.Комментарий = Комментарий;
			ОбластьСтрока.Параметры.Сумма = Сумма;
			
	        ТабДокумент.Вывести(ОбластьСтрока);
			Итог = Итог + Сумма;
		КонецЦикла;
		
	КонецЦикла;
	//
	ОбластьИтоги.Параметры.Сумма = Итог;
	ТабДокумент.Вывести(ОбластьИтоги);
	
	ТабДокумент.ТолькоПросмотр = Истина;
	//ТабДокумент.Показать("Расшифровка по документам");

	ФормаРасшифровки = ПолучитьФорму("ФормаРасшифровки");
	ФормаРасшифровки.ЭлементыФормы.Результат.Очистить();
	ФормаРасшифровки.ЭлементыФормы.Результат.Вывести(ТабДокумент);
	ФормаРасшифровки.КлючУникальности = Новый УникальныйИдентификатор;
	ФормаРасшифровки.Открыть();
	
КонецПроцедуры

Процедура РасшифроватьПоДокументам_ВкусВиллЦФО(Расшифровка)
	//пКонтрагент = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля()[0].Значение;
	
	Попытка
		ЦФО = ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].получитьродителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
		ЦФО = ?(ЦФО = "", Справочники.СтруктурныеЕдиницы.ПустаяСсылка(), ЦФО);
		СтатьяГруппировка = ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].получитьродителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;	
	Исключение
		ЦФО = ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
		ЦФО = ?(ЦФО = "", Справочники.СтруктурныеЕдиницы.ПустаяСсылка(), ЦФО);
		СтатьяГруппировка = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;	

	КонецПопытки;
	
	ГруппаУр1 = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;
	СтруктурнаяЕдиница = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	Если ГруппаУр1 = "Выручка" Тогда
		СтатьяДР_Код = "1";
	ИначеЕсли ГруппаУр1 = "Переменные затраты" Тогда
		СтатьяДР_Код = "2";
	ИначеЕсли ГруппаУр1 = "Постоянные затраты" Тогда
		СтатьяДР_Код = "3";
	Иначе
		Возврат;
	КонецЕсли;
	
	//СтатьяДР_Код = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[1].Значение);
	//СтатьяДР_Наименование = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение);
	
	//пПараметрПериод = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	
	ПериодВыводаГод   = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;
	ПериодВыводаМесяц = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[1].Значение;
	ПериодВывода = ДатаРасшифровки(ПериодВыводаМесяц, ПериодВыводаГод); 

	Если НачалоМесяца(ПериодВывода) >= НачалоДня(ЭлементыФормы.ДинамическийОтборДатаНачала.Значение) Тогда
		НачалоПериода = НачалоМесяца(ПериодВывода);
	Иначе
		НачалоПериода = НачалоДня(ЭлементыФормы.ДинамическийОтборДатаНачала.Значение);
	КонецЕсли;
	
	Если КонецМесяца(ПериодВывода) <= КонецДня(ЭлементыФормы.ДинамическийОтборДатаОкончания.Значение) Тогда
		КонецПериода = КонецМесяца(ПериодВывода);
	Иначе
		КонецПериода = КонецДня(ЭлементыФормы.ДинамическийОтборДатаОкончания.Значение);
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("РасшифровкаПоДокументам");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
	//
	ОбластьШапка.Параметры.Код = СтатьяДР_Код;
	ОбластьШапка.Параметры.Статья = ГруппаУр1 + " - " + Строка(СтруктурнаяЕдиница);
	ОбластьШапка.Параметры.ДатаНач = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	ОбластьШапка.Параметры.ДатаКон = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	
	ТабДокумент.Вывести(ОбластьШапка);
	//
	Запрос = Новый Запрос;
	Если СтатьяДР_Код = "1" Тогда				   
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	""01"" КАК Код,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	СУММА(-ФинансовыйОбороты.СуммаОборот) КАК Сумма
		               |ПОМЕСТИТЬ ВремТаб
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Счет В ИЕРАРХИИ (&СчетПродажи),
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Выручка)
		               |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |					ИЛИ Субконто1.ТипРозничнойТочки = &Проект)
		               |				И Субконто3 = &ЦФО,
		               |			,
		               |			) КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.Регистратор
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВремТаб.Документ,
		               |	ВремТаб.Сумма,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)) КАК Комментарий,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный КАК Автор
		               |ИЗ
		               |	ВремТаб КАК ВремТаб
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
		               |				&НачалоПериода,
		               |				&КонецПериода,
		               |				Счет В ИЕРАРХИИ (&СчетПродажи)
		               |					И Субконто2 В ИЕРАРХИИ (&Выручка)
		               |					И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |						ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |				,
		               |				) КАК ФинансовыйДвиженияССубконто
		               |		ПО ВремТаб.Документ = ФинансовыйДвиженияССубконто.Регистратор
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВремТаб.Документ,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)),
		               |	ВремТаб.Сумма
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ВремТаб.Документ.Дата";
				   
		Запрос.УстановитьПараметр("Выручка", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.Магазин);
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("СчетПродажи", ПланыСчетов.Финансовый.Продажи);	
				     		
	Иначе   	
						   
		Запрос.Текст = "ВЫБРАТЬ
		               |	ФинансовыйОбороты.КорСчет КАК Счет,
		               |	ФинансовыйОбороты.Субконто1 КАК ТТ,
		               |	ФинансовыйОбороты.Субконто2 КАК СтатьяЗатрат,
		               |	ФинансовыйОбороты.КорСубконто3 КАК ЦФО,
		               |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот
		               |ПОМЕСТИТЬ ТЗ_БАЗА
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			,
		               |			Счет В ИЕРАРХИИ (&Счет90),
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Затраты)
		               |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |					ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |			КорСчет В ИЕРАРХИИ (&Счет44)
		               |				И НЕ КорСчет = &Счет442,
		               |			) КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.КорСчет,
		               |	ФинансовыйОбороты.Субконто1,
		               |	ФинансовыйОбороты.Субконто2,
		               |	ФинансовыйОбороты.КорСубконто3
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот,
		               |	ФинансовыйОбороты.СтатьяЗатрат,
		               |	ФинансовыйОбороты.ЦФО,
		               |	ФинансовыйОбороты.Счет
		               |ПОМЕСТИТЬ ТЗ_БАЗА_ОБЩИЙИТОГ
		               |ИЗ
		               |	ТЗ_БАЗА КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.СтатьяЗатрат,
		               |	ФинансовыйОбороты.ЦФО,
		               |	ФинансовыйОбороты.Счет
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_БАЗА.Счет,
		               |	ТЗ_БАЗА.ТТ,
		               |	ТЗ_БАЗА.СтатьяЗатрат,
		               |	ТЗ_БАЗА.ЦФО,
		               |	ТЗ_БАЗА.СуммаОборот КАК Сумма,
		               |	ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот КАК СуммаИтог,
		               |	ВЫБОР
		               |		КОГДА ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот = 0
		               |			ТОГДА 0
		               |		ИНАЧЕ ТЗ_БАЗА.СуммаОборот / ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот
		               |	КОНЕЦ КАК Коэффициент
		               |ПОМЕСТИТЬ ТЗ_КОЭФФИЦИЕНТЫ
		               |ИЗ
		               |	ТЗ_БАЗА КАК ТЗ_БАЗА
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТЗ_БАЗА_ОБЩИЙИТОГ КАК ТЗ_БАЗА_ОБЩИЙИТОГ
		               |		ПО ТЗ_БАЗА.Счет = ТЗ_БАЗА_ОБЩИЙИТОГ.Счет
		               |			И ТЗ_БАЗА.СтатьяЗатрат = ТЗ_БАЗА_ОБЩИЙИТОГ.СтатьяЗатрат
		               |			И ТЗ_БАЗА.ЦФО = ТЗ_БАЗА_ОБЩИЙИТОГ.ЦФО
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ФинансовыйОбороты.Счет КАК Счет,
		               |	ФинансовыйОбороты.Субконто2 КАК СтатьяЗатрат,
		               |	ФинансовыйОбороты.Субконто3 КАК ЦФО,
		               |	ТЗ_КОЭФФИЦИЕНТЫ.ТТ КАК ТТ,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	ФинансовыйОбороты.СуммаОборот КАК СуммаОборот,
		               |	ФинансовыйОбороты.СуммаОборот * ЕСТЬNULL(ТЗ_КОЭФФИЦИЕНТЫ.Коэффициент, 0) КАК Сумма,
		               |	ФинансовыйОбороты.Регистратор.Комментарий КАК Комментарий,
		               |	ФинансовыйОбороты.Регистратор.Ответственный КАК Автор,
		               |	ФинансовыйДвиженияССубконто.Содержание КАК Содержание
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Счет В ИЕРАРХИИ (&Счет44)
		               |				И НЕ Счет = &Счет442,
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Затраты),
		               |			НЕ КорСчет В ИЕРАРХИИ (&Счет90),
		               |			) КАК ФинансовыйОбороты
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_КОЭФФИЦИЕНТЫ КАК ТЗ_КОЭФФИЦИЕНТЫ
		               |		ПО ФинансовыйОбороты.Счет = ТЗ_КОЭФФИЦИЕНТЫ.Счет
		               |			И ФинансовыйОбороты.Субконто2 = ТЗ_КОЭФФИЦИЕНТЫ.СтатьяЗатрат
		               |			И ФинансовыйОбороты.Субконто3 = ТЗ_КОЭФФИЦИЕНТЫ.ЦФО
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(&НачалоПериода, &КонецПериода, СубконтоДт2 В ИЕРАРХИИ (&Затраты), , ) КАК ФинансовыйДвиженияССубконто
		               |		ПО ФинансовыйОбороты.Регистратор = ФинансовыйДвиженияССубконто.Регистратор
		               |			И ФинансовыйОбороты.Субконто2 = ФинансовыйДвиженияССубконто.СубконтоДт2
		               |			И ФинансовыйОбороты.Субконто3 = ФинансовыйДвиженияССубконто.СубконтоДт3
		               |			И ФинансовыйОбороты.СуммаОборот = ФинансовыйДвиженияССубконто.Сумма
		               |			И ФинансовыйОбороты.Счет = ФинансовыйДвиженияССубконто.СчетДт
		               |ГДЕ
		               |	ФинансовыйОбороты.Субконто2 В ИЕРАРХИИ(&Затраты)
		               |	И ТЗ_КОЭФФИЦИЕНТЫ.ТТ = &ТТ
		               |	И ТЗ_КОЭФФИЦИЕНТЫ.ТТ.ТипРозничнойТочки = &Проект
		               |	И ФинансовыйОбороты.Субконто3 = &ЦФО";	
				   
		//Запрос.УстановитьПараметр("ЗатратыПостоянные", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("3"));
		Запрос.УстановитьПараметр("Затраты", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.Магазин);
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
		Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Финансовый.ЗатратыДляРаспределения);
        Запрос.УстановитьПараметр("Счет442", ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения);
        Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		Запрос.УстановитьПараметр("КорСубконто2", МассивСтатейАмортизация()); 
		//Запрос.УстановитьПараметр("Все",  Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Все"));   		        	
				
	        //Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
				
        //Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		//Запрос.УстановитьПараметр("КорСубконто2", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("61010"));
		
	КонецЕсли;		  
	
	Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
	Запрос.УстановитьПараметр("Все",  Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Все"));
	Запрос.УстановитьПараметр("ЦФО", ЦФО);
    Запрос.УстановитьПараметр("ТТ", СтруктурнаяЕдиница);

	Выгрузка = Запрос.Выполнить().Выгрузить();
	Выгрузка.Сортировать("Сумма Убыв");
	Выгрузка.Свернуть("Документ, Содержание, Автор, Комментарий", "Сумма");
	ВыгрузкаКопия = Выгрузка.Скопировать();
	ВыгрузкаКопия.Свернуть("Документ");
	//Выборка = Запрос.Выполнить().Выбрать();
	Итог = 0;
	МассивДокументу = ВыгрузкаКопия.ВыгрузитьКолонку("Документ");
	Для Каждого Документ Из МассивДокументу Цикл
		Отбор = Новый Структура;
		Отбор.Вставить("Документ", Документ);
		НайденныеСтроки = Выгрузка.НайтиСтроки(Отбор);
		Содержание = "";
		Автор = "";
		Комментарий = "";
		Сумма = 0;
		
		Для Каждого Строка Из НайденныеСтроки Цикл
			
			Содержание = Строка.Содержание;		
			Автор = Строка.Автор;
			Комментарий = Строка.Комментарий;
			Сумма = Строка.Сумма;
		    Если Сумма = 0 Тогда
				Продолжить;
			КонецЕсли;
		
			Содержание = Лев(Содержание, СтрДлина(СокрЛП(Содержание)) - 1);
			ОбластьСтрока.Параметры.Документ = Документ;
			Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
					И ТипЗнч(Документ.ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств")
						И ЗначениеЗаполнено(Документ.ДокументОснование) Тогда
				ОбластьСтрока.Параметры.Содержание = Документ.ДокументОснование.Пояснение;	
				ОбластьСтрока.Параметры.Автор = Документ.ДокументОснование.Ответственный;
				ОбластьСтрока.Параметры.Период = Документ.ДокументОснование.ПериодыТорговыхТочекСтрока;
			ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.РасходИзКассы") 
					И ЗначениеЗаполнено(Документ.ЗаявкаНаРасходованиеСредств) Тогда	
				ОбластьСтрока.Параметры.Содержание = Документ.ЗаявкаНаРасходованиеСредств.Пояснение;	
				ОбластьСтрока.Параметры.Автор = Документ.ЗаявкаНаРасходованиеСредств.Ответственный;
				ОбластьСтрока.Параметры.Период = Документ.ЗаявкаНаРасходованиеСредств.ПериодыТорговыхТочекСтрока;
			Иначе	
				ОбластьСтрока.Параметры.Содержание = Содержание;	
				ОбластьСтрока.Параметры.Автор = Автор;
			КонецЕсли;
			ОбластьСтрока.Параметры.Комментарий = Комментарий;
			ОбластьСтрока.Параметры.Сумма = Сумма;
			
	        ТабДокумент.Вывести(ОбластьСтрока);
			Итог = Итог + Сумма;
		КонецЦикла;
		
	КонецЦикла;
	//
	ОбластьИтоги.Параметры.Сумма = Итог;
	ТабДокумент.Вывести(ОбластьИтоги);
	
	ТабДокумент.ТолькоПросмотр = Истина;
	//ТабДокумент.Показать("Расшифровка по документам");
	
	ФормаРасшифровки = ПолучитьФорму("ФормаРасшифровки");
	ФормаРасшифровки.ЭлементыФормы.Результат.Очистить();
	ФормаРасшифровки.ЭлементыФормы.Результат.Вывести(ТабДокумент);
	ФормаРасшифровки.КлючУникальности = Новый УникальныйИдентификатор;
	ФормаРасшифровки.Открыть();
	
КонецПроцедуры
Процедура РасшифроватьПоДокументам_ИзбенкаЦФО(Расшифровка)
	//пКонтрагент = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля()[0].Значение;
	
	Попытка
		ЦФО = ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].получитьродителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
		ЦФО = ?(ЦФО = "", Справочники.СтруктурныеЕдиницы.ПустаяСсылка(), ЦФО);
		СтатьяГруппировка = ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].получитьродителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;	
	Исключение
		ЦФО = ДанныеРасшифровки.Элементы[ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьРодителей()[0].Идентификатор].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
		ЦФО = ?(ЦФО = "", Справочники.СтруктурныеЕдиницы.ПустаяСсылка(), ЦФО);
		СтатьяГруппировка = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;	

	КонецПопытки;
	
	ГруппаУр1 = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;
	СтруктурнаяЕдиница = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	Если ГруппаУр1 = "Выручка" Тогда
		СтатьяДР_Код = "1";
	ИначеЕсли ГруппаУр1 = "Переменные затраты" Тогда
		СтатьяДР_Код = "2";
	ИначеЕсли ГруппаУр1 = "Постоянные затраты" Тогда
		СтатьяДР_Код = "3";
	Иначе
		Возврат;
	КонецЕсли;
	
	//СтатьяДР_Код = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[1].Значение);
	//СтатьяДР_Наименование = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение);
	
	//пПараметрПериод = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	
	ПериодВыводаГод   = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;
	ПериодВыводаМесяц = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[1].Значение;
	ПериодВывода = ДатаРасшифровки(ПериодВыводаМесяц, ПериодВыводаГод); 

	Если НачалоМесяца(ПериодВывода) >= НачалоДня(ЭлементыФормы.ДинамическийОтборДатаНачала.Значение) Тогда
		НачалоПериода = НачалоМесяца(ПериодВывода);
	Иначе
		НачалоПериода = НачалоДня(ЭлементыФормы.ДинамическийОтборДатаНачала.Значение);
	КонецЕсли;
	
	Если КонецМесяца(ПериодВывода) <= КонецДня(ЭлементыФормы.ДинамическийОтборДатаОкончания.Значение) Тогда
		КонецПериода = КонецМесяца(ПериодВывода);
	Иначе
		КонецПериода = КонецДня(ЭлементыФормы.ДинамическийОтборДатаОкончания.Значение);
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("РасшифровкаПоДокументам");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
	//
	ОбластьШапка.Параметры.Код = СтатьяДР_Код;
	ОбластьШапка.Параметры.Статья = ГруппаУр1 + " - " + Строка(СтруктурнаяЕдиница);
	ОбластьШапка.Параметры.ДатаНач = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	ОбластьШапка.Параметры.ДатаКон = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	
	ТабДокумент.Вывести(ОбластьШапка);
	//
	Запрос = Новый Запрос;
	Если СтатьяДР_Код = "1" Тогда				   
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	""01"" КАК Код,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	СУММА(-ФинансовыйОбороты.СуммаОборот) КАК Сумма
		               |ПОМЕСТИТЬ ВремТаб
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Счет В ИЕРАРХИИ (&СчетПродажи),
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Выручка)
		               |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |					ИЛИ Субконто1.ТипРозничнойТочки = &Проект)
		               |				И Субконто3 = &ЦФО,
		               |			,
		               |			) КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.Регистратор
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВремТаб.Документ,
		               |	ВремТаб.Сумма,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)) КАК Комментарий,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный КАК Автор
		               |ИЗ
		               |	ВремТаб КАК ВремТаб
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
		               |				&НачалоПериода,
		               |				&КонецПериода,
		               |				Счет В ИЕРАРХИИ (&СчетПродажи)
		               |					И Субконто2 В ИЕРАРХИИ (&Выручка)
		               |					И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |						ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |				,
		               |				) КАК ФинансовыйДвиженияССубконто
		               |		ПО ВремТаб.Документ = ФинансовыйДвиженияССубконто.Регистратор
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВремТаб.Документ,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)),
		               |	ВремТаб.Сумма
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ВремТаб.Документ.Дата";
				   
		Запрос.УстановитьПараметр("Выручка", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.Избенка);
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("СчетПродажи", ПланыСчетов.Финансовый.Продажи);	
				     		
	Иначе
		
						   
		Запрос.Текст = "ВЫБРАТЬ
		               |	ФинансовыйОбороты.КорСчет КАК Счет,
		               |	ФинансовыйОбороты.Субконто1 КАК ТТ,
		               |	ФинансовыйОбороты.Субконто2 КАК СтатьяЗатрат,
		               |	ФинансовыйОбороты.КорСубконто3 КАК ЦФО,
		               |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот
		               |ПОМЕСТИТЬ ТЗ_БАЗА
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			,
		               |			Счет В ИЕРАРХИИ (&Счет90),
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Затраты)
		               |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |					ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |			КорСчет В ИЕРАРХИИ (&Счет44)
		               |				И НЕ КорСчет = &Счет442,
		               |			) КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.КорСчет,
		               |	ФинансовыйОбороты.Субконто1,
		               |	ФинансовыйОбороты.Субконто2,
		               |	ФинансовыйОбороты.КорСубконто3
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	СУММА(ФинансовыйОбороты.СуммаОборот) КАК СуммаОборот,
		               |	ФинансовыйОбороты.СтатьяЗатрат,
		               |	ФинансовыйОбороты.ЦФО,
		               |	ФинансовыйОбороты.Счет
		               |ПОМЕСТИТЬ ТЗ_БАЗА_ОБЩИЙИТОГ
		               |ИЗ
		               |	ТЗ_БАЗА КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.СтатьяЗатрат,
		               |	ФинансовыйОбороты.ЦФО,
		               |	ФинансовыйОбороты.Счет
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ТЗ_БАЗА.Счет,
		               |	ТЗ_БАЗА.ТТ,
		               |	ТЗ_БАЗА.СтатьяЗатрат,
		               |	ТЗ_БАЗА.ЦФО,
		               |	ТЗ_БАЗА.СуммаОборот КАК Сумма,
		               |	ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот КАК СуммаИтог,
		               |	ВЫБОР
		               |		КОГДА ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот = 0
		               |			ТОГДА 0
		               |		ИНАЧЕ ТЗ_БАЗА.СуммаОборот / ТЗ_БАЗА_ОБЩИЙИТОГ.СуммаОборот
		               |	КОНЕЦ КАК Коэффициент
		               |ПОМЕСТИТЬ ТЗ_КОЭФФИЦИЕНТЫ
		               |ИЗ
		               |	ТЗ_БАЗА КАК ТЗ_БАЗА
		               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТЗ_БАЗА_ОБЩИЙИТОГ КАК ТЗ_БАЗА_ОБЩИЙИТОГ
		               |		ПО ТЗ_БАЗА.Счет = ТЗ_БАЗА_ОБЩИЙИТОГ.Счет
		               |			И ТЗ_БАЗА.СтатьяЗатрат = ТЗ_БАЗА_ОБЩИЙИТОГ.СтатьяЗатрат
		               |			И ТЗ_БАЗА.ЦФО = ТЗ_БАЗА_ОБЩИЙИТОГ.ЦФО
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ФинансовыйОбороты.Счет КАК Счет,
		               |	ФинансовыйОбороты.Субконто2 КАК СтатьяЗатрат,
		               |	ФинансовыйОбороты.Субконто3 КАК ЦФО,
		               |	ТЗ_КОЭФФИЦИЕНТЫ.ТТ КАК ТТ,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	ФинансовыйОбороты.СуммаОборот КАК СуммаОборот,
		               |	ФинансовыйОбороты.СуммаОборот * ЕСТЬNULL(ТЗ_КОЭФФИЦИЕНТЫ.Коэффициент, 0) КАК Сумма,
		               |	ФинансовыйОбороты.Регистратор.Комментарий КАК Комментарий,
		               |	ФинансовыйОбороты.Регистратор.Ответственный КАК Автор,
		               |	ФинансовыйДвиженияССубконто.Содержание КАК Содержание
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Счет В ИЕРАРХИИ (&Счет44)
		               |				И НЕ Счет = &Счет442,
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Затраты),
		               |			НЕ КорСчет В ИЕРАРХИИ (&Счет90),
		               |			) КАК ФинансовыйОбороты
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_КОЭФФИЦИЕНТЫ КАК ТЗ_КОЭФФИЦИЕНТЫ
		               |		ПО ФинансовыйОбороты.Счет = ТЗ_КОЭФФИЦИЕНТЫ.Счет
		               |			И ФинансовыйОбороты.Субконто2 = ТЗ_КОЭФФИЦИЕНТЫ.СтатьяЗатрат
		               |			И ФинансовыйОбороты.Субконто3 = ТЗ_КОЭФФИЦИЕНТЫ.ЦФО
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(&НачалоПериода, &КонецПериода, СубконтоДт2 В ИЕРАРХИИ (&Затраты), , ) КАК ФинансовыйДвиженияССубконто
		               |		ПО ФинансовыйОбороты.Регистратор = ФинансовыйДвиженияССубконто.Регистратор
		               |			И ФинансовыйОбороты.Субконто2 = ФинансовыйДвиженияССубконто.СубконтоДт2
		               |			И ФинансовыйОбороты.Субконто3 = ФинансовыйДвиженияССубконто.СубконтоДт3
		               |			И ФинансовыйОбороты.СуммаОборот = ФинансовыйДвиженияССубконто.Сумма
		               |			И ФинансовыйОбороты.Счет = ФинансовыйДвиженияССубконто.СчетДт
		               |ГДЕ
		               |	ФинансовыйОбороты.Субконто2 В ИЕРАРХИИ(&Затраты)
		               |	И ТЗ_КОЭФФИЦИЕНТЫ.ТТ = &ТТ
		               |	И ТЗ_КОЭФФИЦИЕНТЫ.ТТ.ТипРозничнойТочки = &Проект
		               |	И ФинансовыйОбороты.Субконто3 = &ЦФО";	
				   
		//Запрос.УстановитьПараметр("ЗатратыПостоянные", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("3"));
		Запрос.УстановитьПараметр("Затраты", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(СтатьяДР_Код)));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.Избенка);
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
		Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Финансовый.ЗатратыДляРаспределения);
        Запрос.УстановитьПараметр("Счет442", ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения);
        Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		Запрос.УстановитьПараметр("КорСубконто2",МассивСтатейАмортизация()); 
		//Запрос.УстановитьПараметр("Все",  Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Все"));   		        	
				
	        //Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
				
        //Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		//Запрос.УстановитьПараметр("КорСубконто2", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("61010"));
		
	КонецЕсли;		  
	
	Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
	Запрос.УстановитьПараметр("Все",  Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Все"));
	Запрос.УстановитьПараметр("ЦФО", ЦФО);
    Запрос.УстановитьПараметр("ТТ", СтруктурнаяЕдиница);
	
	Выгрузка = Запрос.Выполнить().Выгрузить();
	Выгрузка.Сортировать("Сумма Убыв");
	Выгрузка.Свернуть("Документ, Содержание, Автор, Комментарий", "Сумма");
	ВыгрузкаКопия = Выгрузка.Скопировать();
	ВыгрузкаКопия.Свернуть("Документ");
	//Выборка = Запрос.Выполнить().Выбрать();
	Итог = 0;
	МассивДокументу = ВыгрузкаКопия.ВыгрузитьКолонку("Документ");
	Для Каждого Документ Из МассивДокументу Цикл
		Отбор = Новый Структура;
		Отбор.Вставить("Документ", Документ);
		НайденныеСтроки = Выгрузка.НайтиСтроки(Отбор);
		Содержание = "";
		Автор = "";
		Комментарий = "";
		Сумма = 0;
		
		Для Каждого Строка Из НайденныеСтроки Цикл
			
			Содержание = Строка.Содержание;		
			Автор = Строка.Автор;
			Комментарий = Строка.Комментарий;
			Сумма = Строка.Сумма;
		    Если Сумма = 0 Тогда
				Продолжить;
			КонецЕсли;
		
			Содержание = Лев(Содержание, СтрДлина(СокрЛП(Содержание)) - 1);
			ОбластьСтрока.Параметры.Документ = Документ;
			Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
					И ТипЗнч(Документ.ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств")
						И ЗначениеЗаполнено(Документ.ДокументОснование) Тогда
				ОбластьСтрока.Параметры.Содержание = Документ.ДокументОснование.Пояснение;	
				ОбластьСтрока.Параметры.Автор = Документ.ДокументОснование.Ответственный;
				ОбластьСтрока.Параметры.Период = Документ.ДокументОснование.ПериодыТорговыхТочекСтрока;
			ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.РасходИзКассы") 
					И ЗначениеЗаполнено(Документ.ЗаявкаНаРасходованиеСредств) Тогда	
				ОбластьСтрока.Параметры.Содержание = Документ.ЗаявкаНаРасходованиеСредств.Пояснение;	
				ОбластьСтрока.Параметры.Автор = Документ.ЗаявкаНаРасходованиеСредств.Ответственный;
				ОбластьСтрока.Параметры.Период = Документ.ЗаявкаНаРасходованиеСредств.ПериодыТорговыхТочекСтрока;
			Иначе	
				ОбластьСтрока.Параметры.Содержание = Содержание;	
				ОбластьСтрока.Параметры.Автор = Автор;
			КонецЕсли;
			ОбластьСтрока.Параметры.Комментарий = Комментарий;
			ОбластьСтрока.Параметры.Сумма = Сумма;
			
	        ТабДокумент.Вывести(ОбластьСтрока);
			Итог = Итог + Сумма;
		КонецЦикла;
		
	КонецЦикла;
	//
	ОбластьИтоги.Параметры.Сумма = Итог;
	ТабДокумент.Вывести(ОбластьИтоги);
	
	ТабДокумент.ТолькоПросмотр = Истина;
	//ТабДокумент.Показать("Расшифровка по документам");
	
	ФормаРасшифровки = ПолучитьФорму("ФормаРасшифровки");
	ФормаРасшифровки.ЭлементыФормы.Результат.Очистить();
	ФормаРасшифровки.ЭлементыФормы.Результат.Вывести(ТабДокумент);
	ФормаРасшифровки.КлючУникальности = Новый УникальныйИдентификатор;
	ФормаРасшифровки.Открыть();
	
КонецПроцедуры

Процедура РасшифроватьПоДокументам_ТТ(Расшифровка)
	//пКонтрагент = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьПоля()[0].Значение;
	ГруппаУр1 = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;
	СтруктурнаяЕдиница = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение;
	Если ГруппаУр1 = "Выручка" Тогда
		СтатьяДР_Код = "01";
	ИначеЕсли ГруппаУр1 = "Переменные затраты" Тогда
		СтатьяДР_Код = "02";
	ИначеЕсли ГруппаУр1 = "Постоянные затраты" Тогда
		СтатьяДР_Код = "03";
	Иначе
		Возврат;
	КонецЕсли;
	
	//СтатьяДР_Код = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[1].Значение);
	//СтатьяДР_Наименование = СокрЛП(ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[0].ПолучитьПоля()[0].Значение);
	
	//пПараметрПериод = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	
	ПериодВыводаГод   = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[0].Значение;
	ПериодВыводаМесяц = ДанныеРасшифровки.Элементы[Расшифровка].ПолучитьРодителей()[1].ПолучитьПоля()[1].Значение;
	ПериодВывода = ДатаРасшифровки(ПериодВыводаМесяц, ПериодВыводаГод); 

	Если НачалоМесяца(ПериодВывода) >= НачалоДня(ЭлементыФормы.ДинамическийОтборДатаНачала.Значение) Тогда
		НачалоПериода = НачалоМесяца(ПериодВывода);
	Иначе
		НачалоПериода = НачалоДня(ЭлементыФормы.ДинамическийОтборДатаНачала.Значение);
	КонецЕсли;
	
	Если КонецМесяца(ПериодВывода) <= КонецДня(ЭлементыФормы.ДинамическийОтборДатаОкончания.Значение) Тогда
		КонецПериода = КонецМесяца(ПериодВывода);
	Иначе
		КонецПериода = КонецДня(ЭлементыФормы.ДинамическийОтборДатаОкончания.Значение);
	КонецЕсли;
	
	ТабДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("РасшифровкаПоДокументам");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
//	ОбластьОрганизация = Макет.ПолучитьОбласть("СтрокаОрганизация");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
	//
	ОбластьШапка.Параметры.Код = СтатьяДР_Код;
	ОбластьШапка.Параметры.Статья = ГруппаУр1 + " - " + Строка(СтруктурнаяЕдиница);
	ОбластьШапка.Параметры.ДатаНач = Формат(НачалоПериода, "ДФ=dd.MM.yyyy");
	ОбластьШапка.Параметры.ДатаКон = Формат(КонецПериода, "ДФ=dd.MM.yyyy");
	
	ТабДокумент.Вывести(ОбластьШапка);
	//
	Запрос = Новый Запрос;
	Если СтатьяДР_Код = "01" Тогда				   
		
		Запрос.Текст = "ВЫБРАТЬ
		               |	""01"" КАК Код,
		               |	ФинансовыйОбороты.Регистратор КАК Документ,
		               |	СУММА(-ФинансовыйОбороты.СуммаОборот) КАК Сумма
		               |ПОМЕСТИТЬ ВремТаб
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Обороты(
		               |			&НачалоПериода,
		               |			&КонецПериода,
		               |			Регистратор,
		               |			Счет В ИЕРАРХИИ (&СчетПродажи),
		               |			,
		               |			Субконто2 В ИЕРАРХИИ (&Выручка)
		               |				И Субконто1 = &СтруктурнаяЕдиница
		               |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |					ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |			,
		               |			) КАК ФинансовыйОбороты
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОбороты.Регистратор
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВремТаб.Документ,
		               |	ВремТаб.Сумма,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)) КАК Комментарий,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный КАК Автор
		               |ИЗ
		               |	ВремТаб КАК ВремТаб
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
		               |				&НачалоПериода,
		               |				&КонецПериода,
		               |				Счет В ИЕРАРХИИ (&СчетПродажи)
		               |					И Субконто2 В ИЕРАРХИИ (&Выручка)
		               |					И Субконто1 = &СтруктурнаяЕдиница
		               |					И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		               |						ИЛИ Субконто1.ТипРозничнойТочки = &Проект),
		               |				,
		               |				) КАК ФинансовыйДвиженияССубконто
		               |		ПО ВремТаб.Документ = ФинансовыйДвиженияССубконто.Регистратор
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВремТаб.Документ,
		               |	ФинансовыйДвиженияССубконто.Содержание,
		               |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный,
		               |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)),
		               |	ВремТаб.Сумма
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ВремТаб.Документ.Дата";
				   
		Запрос.УстановитьПараметр("Выручка", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(Число(СтатьяДР_Код))));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("СчетПродажи", ПланыСчетов.Финансовый.Продажи);
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
				   
	ИначеЕсли СтатьяДР_Код = "02" Тогда
		 
		 Запрос.Текст = "ВЫБРАТЬ
		                |	ФинансовыйОборотыДтКт.СчетКт КАК Счет,
		                |	ФинансовыйОборотыДтКт.СубконтоКт1 КАК ТТ,
		                |	ФинансовыйОборотыДтКт.СубконтоКт2 КАК СтатьяЗатрат,
		                |	ФинансовыйОборотыДтКт.СубконтоКт3 КАК ЦФО,
		                |	СУММА(ФинансовыйОборотыДтКт.СуммаОборот) КАК СуммаОборот,
		                |	ФинансовыйОборотыДтКт.СубконтоДт1 КАК ТТ90
		                |ПОМЕСТИТЬ ТЗ_База
		                |ИЗ
		                |	РегистрБухгалтерии.Финансовый.ОборотыДтКт(
		                |			&НачалоПериода,
		                |			&КонецПериода,
		                |			Месяц,
		                |			СчетДт В ИЕРАРХИИ (&Счет90),
		                |			,
		                |			СчетКт В ИЕРАРХИИ (&Счет44)
		                |				И НЕ СчетКт = &Счет442,
		                |			,
		                |			СубконтоКт1 = &Все
		                |				И НЕ СубконтоКт2 В ИЕРАРХИИ (&ЗатратыПостоянные)
		                |				И СубконтоКт2 В ИЕРАРХИИ (&ЗатратыПеременные)
		                |				И НЕ СубконтоКт2 В ИЕРАРХИИ (&УЕК)
		                |				И НЕ (КорСубконто2 В (&КорСубконто2))
		                |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		                |					ИЛИ СубконтоДт1.ТипРозничнойТочки = &Проект)) КАК ФинансовыйОборотыДтКт
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ФинансовыйОборотыДтКт.СубконтоКт3,
		                |	ФинансовыйОборотыДтКт.СубконтоКт2,
		                |	ФинансовыйОборотыДтКт.СчетКт,
		                |	ФинансовыйОборотыДтКт.СубконтоКт1,
		                |	ФинансовыйОборотыДтКт.СубконтоДт1
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	СУММА(ТЗ_База.СуммаОборот) КАК СуммаОборот
		                |ПОМЕСТИТЬ ТЗ_БазаОбщийИтог
		                |ИЗ
		                |	ТЗ_База КАК ТЗ_База
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ТЗ_База.Счет,
		                |	ТЗ_База.ТТ,
		                |	ТЗ_База.СтатьяЗатрат,
		                |	ТЗ_База.ЦФО,
		                |	ТЗ_База.СуммаОборот КАК Сумма,
		                |	ТЗ_БазаОбщийИтог.СуммаОборот КАК СуммаИтог,
		                |	ТЗ_База.СуммаОборот / ТЗ_БазаОбщийИтог.СуммаОборот КАК Коэффициент,
		                |	ТЗ_База.ТТ90
		                |ПОМЕСТИТЬ ТЗ_Коэффициенты
		                |ИЗ
		                |	ТЗ_База КАК ТЗ_База
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_БазаОбщийИтог КАК ТЗ_БазаОбщийИтог
		                |		ПО (ИСТИНА)
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ФинансовыйДвиженияССубконто.СчетДт КАК Счет,
		                |	ФинансовыйДвиженияССубконто.СубконтоДт1 КАК ТТ,
		                |	ФинансовыйДвиженияССубконто.СубконтоДт2 КАК СтатьяЗатрат,
		                |	ФинансовыйДвиженияССубконто.СубконтоДт3 КАК ЦФО,
		                |	ФинансовыйДвиженияССубконто.Регистратор,
		                |	ФинансовыйДвиженияССубконто.Сумма КАК Сумма,
		                |	ФинансовыйДвиженияССубконто.Содержание,
		                |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)) КАК Комментарий,
		                |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный КАК Автор
		                |ПОМЕСТИТЬ ТЗ_Расшифровка
		                |ИЗ
		                |	РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
		                |			&НачалоПериода,
		                |			&КонецПериода,
		                |			НЕ СубконтоДт2 В ИЕРАРХИИ (&ЗатратыПостоянные)
		                |				И СубконтоДт2 В ИЕРАРХИИ (&ЗатратыПеременные)
		                |				И НЕ СубконтоДт2 В ИЕРАРХИИ (&УЕК)
		                |				И НЕ (КорСубконто2 В (&КорСубконто2))
		                |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		                |					ИЛИ СубконтоДт1.ТипРозничнойТочки = &Проект),
		                |			,
		                |			) КАК ФинансовыйДвиженияССубконто
		                |ГДЕ
		                |	ФинансовыйДвиженияССубконто.СчетДт В ИЕРАРХИИ(&Счет44)
		                |	И НЕ ФинансовыйДвиженияССубконто.СчетДт = &Счет442
		                |
		                |ОБЪЕДИНИТЬ ВСЕ
		                |
		                |ВЫБРАТЬ
		                |	ФинансовыйДвиженияССубконто.СчетКт,
		                |	ФинансовыйДвиженияССубконто.СубконтоКт1,
		                |	ФинансовыйДвиженияССубконто.СубконтоКт2,
		                |	ФинансовыйДвиженияССубконто.СубконтоКт3,
		                |	ФинансовыйДвиженияССубконто.Регистратор,
		                |	-ФинансовыйДвиженияССубконто.Сумма,
		                |	ФинансовыйДвиженияССубконто.Содержание,
		                |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)),
		                |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный
		                |ИЗ
		                |	РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
		                |			&НачалоПериода,
		                |			&КонецПериода,
		                |			НЕ СубконтоКт2 В ИЕРАРХИИ (&ЗатратыПостоянные)
		                |				И СубконтоКт2 В ИЕРАРХИИ (&ЗатратыПеременные)
		                |				И НЕ СубконтоКт2 В ИЕРАРХИИ (&УЕК)
		                |				И НЕ (КорСубконто2 В (&КорСубконто2))
		                |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		                |					ИЛИ СубконтоКт1.ТипРозничнойТочки = &Проект),
		                |			,
		                |			) КАК ФинансовыйДвиженияССубконто
		                |ГДЕ
		                |	ФинансовыйДвиженияССубконто.СчетКт В ИЕРАРХИИ(&Счет44)
		                |	И НЕ ФинансовыйДвиженияССубконто.СчетКт = &Счет442
		                |	И НЕ ФинансовыйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&Счет90)
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ТЗ_Расшифровка.Счет,
		                |	ТЗ_Расшифровка.ТТ,
		                |	ТЗ_Расшифровка.СтатьяЗатрат,
		                |	ТЗ_Расшифровка.ЦФО,
		                |	ТЗ_Расшифровка.Регистратор КАК Документ,
		                |	ТЗ_Коэффициенты.Коэффициент,
		                |	ТЗ_Коэффициенты.ТТ90,
		                |	ТЗ_Расшифровка.Сумма * ЕСТЬNULL(ТЗ_Коэффициенты.Коэффициент, 1) КАК Сумма,
		                |	ТЗ_Расшифровка.Содержание,
		                |	ТЗ_Расшифровка.Комментарий,
		                |	ТЗ_Расшифровка.Автор
		                |ИЗ
		                |	ТЗ_Расшифровка КАК ТЗ_Расшифровка
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_Коэффициенты КАК ТЗ_Коэффициенты
		                |		ПО ТЗ_Расшифровка.Счет = ТЗ_Коэффициенты.Счет
		                |			И ТЗ_Расшифровка.СтатьяЗатрат = ТЗ_Коэффициенты.СтатьяЗатрат
		                |			И ТЗ_Расшифровка.ЦФО = ТЗ_Коэффициенты.ЦФО
		                |			И ТЗ_Расшифровка.ТТ = ТЗ_Коэффициенты.ТТ
		                |ГДЕ
		                |	ТЗ_Расшифровка.ТТ = &СтруктурнаяЕдиница";
				   
		Запрос.УстановитьПараметр("ЗатратыПостоянные", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("3"));
		Запрос.УстановитьПараметр("ЗатратыПеременные", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(Число(СтатьяДР_Код))));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("СчетПродажи", ПланыСчетов.Финансовый.Продажи);
		Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Финансовый.ЗатратыДляРаспределения);
        Запрос.УстановитьПараметр("Счет442", ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения);
        Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		Запрос.УстановитьПараметр("КорСубконто2",МассивСтатейАмортизация()); 		
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);  
		
	ИначеЕсли СтатьяДР_Код = "03" Тогда 
		
		 Запрос.Текст = "ВЫБРАТЬ
		                |	ФинансовыйОборотыДтКт.СчетКт КАК Счет,
		                |	ФинансовыйОборотыДтКт.СубконтоКт1 КАК ТТ,
		                |	ФинансовыйОборотыДтКт.СубконтоКт2 КАК СтатьяЗатрат,
		                |	ФинансовыйОборотыДтКт.СубконтоКт3 КАК ЦФО,
		                |	СУММА(ФинансовыйОборотыДтКт.СуммаОборот) КАК СуммаОборот,
		                |	ФинансовыйОборотыДтКт.СубконтоДт1 КАК ТТ90
		                |ПОМЕСТИТЬ ТЗ_База
		                |ИЗ
		                |	РегистрБухгалтерии.Финансовый.ОборотыДтКт(
		                |			&НачалоПериода,
		                |			&КонецПериода,
		                |			Месяц,
		                |			СчетДт В ИЕРАРХИИ (&Счет90),
		                |			,
		                |			СчетКт В ИЕРАРХИИ (&Счет44)
		                |				И НЕ СчетКт = &Счет442,
		                |			,
		                |			СубконтоКт1 = &Все
		                |				И НЕ СубконтоКт2 В ИЕРАРХИИ (&ЗатратыПостоянные)
		                |				И СубконтоКт2 В ИЕРАРХИИ (&ЗатратыПеременные)
		                |				И НЕ СубконтоКт2 В ИЕРАРХИИ (&УЕК)
		                |				И НЕ (КорСубконто2 В (&КорСубконто2))
		                |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		                |					ИЛИ СубконтоДт1.ТипРозничнойТочки = &Проект)) КАК ФинансовыйОборотыДтКт
		                |
		                |СГРУППИРОВАТЬ ПО
		                |	ФинансовыйОборотыДтКт.СубконтоКт3,
		                |	ФинансовыйОборотыДтКт.СубконтоКт2,
		                |	ФинансовыйОборотыДтКт.СчетКт,
		                |	ФинансовыйОборотыДтКт.СубконтоКт1,
		                |	ФинансовыйОборотыДтКт.СубконтоДт1
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	СУММА(ТЗ_База.СуммаОборот) КАК СуммаОборот
		                |ПОМЕСТИТЬ ТЗ_БазаОбщийИтог
		                |ИЗ
		                |	ТЗ_База КАК ТЗ_База
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ТЗ_База.Счет,
		                |	ТЗ_База.ТТ,
		                |	ТЗ_База.СтатьяЗатрат,
		                |	ТЗ_База.ЦФО,
		                |	ТЗ_База.СуммаОборот КАК Сумма,
		                |	ТЗ_БазаОбщийИтог.СуммаОборот КАК СуммаИтог,
		                |	ТЗ_База.СуммаОборот / ТЗ_БазаОбщийИтог.СуммаОборот КАК Коэффициент,
		                |	ТЗ_База.ТТ90
		                |ПОМЕСТИТЬ ТЗ_Коэффициенты
		                |ИЗ
		                |	ТЗ_База КАК ТЗ_База
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_БазаОбщийИтог КАК ТЗ_БазаОбщийИтог
		                |		ПО (ИСТИНА)
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ФинансовыйДвиженияССубконто.СчетДт КАК Счет,
		                |	ФинансовыйДвиженияССубконто.СубконтоДт1 КАК ТТ,
		                |	ФинансовыйДвиженияССубконто.СубконтоДт2 КАК СтатьяЗатрат,
		                |	ФинансовыйДвиженияССубконто.СубконтоДт3 КАК ЦФО,
		                |	ФинансовыйДвиженияССубконто.Регистратор,
		                |	ФинансовыйДвиженияССубконто.Сумма КАК Сумма,
		                |	ФинансовыйДвиженияССубконто.Содержание,
		                |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)) КАК Комментарий,
		                |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный КАК Автор
		                |ПОМЕСТИТЬ ТЗ_Расшифровка
		                |ИЗ
		                |	РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
		                |			&НачалоПериода,
		                |			&КонецПериода,
		                |			НЕ СубконтоДт2 В ИЕРАРХИИ (&ЗатратыПостоянные)
		                |				И СубконтоДт2 В ИЕРАРХИИ (&ЗатратыПеременные)
		                |				И НЕ СубконтоДт2 В ИЕРАРХИИ (&УЕК)
		                |				И НЕ (КорСубконто2 В (&КорСубконто2))
		                |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		                |					ИЛИ СубконтоДт1.ТипРозничнойТочки = &Проект),
		                |			,
		                |			) КАК ФинансовыйДвиженияССубконто
		                |ГДЕ
		                |	ФинансовыйДвиженияССубконто.СчетДт В ИЕРАРХИИ(&Счет44)
		                |	И НЕ ФинансовыйДвиженияССубконто.СчетДт = &Счет442
		                |
		                |ОБЪЕДИНИТЬ ВСЕ
		                |
		                |ВЫБРАТЬ
		                |	ФинансовыйДвиженияССубконто.СчетКт,
		                |	ФинансовыйДвиженияССубконто.СубконтоКт1,
		                |	ФинансовыйДвиженияССубконто.СубконтоКт2,
		                |	ФинансовыйДвиженияССубконто.СубконтоКт3,
		                |	ФинансовыйДвиженияССубконто.Регистратор,
		                |	-ФинансовыйДвиженияССубконто.Сумма,
		                |	ФинансовыйДвиженияССубконто.Содержание,
		                |	ВЫРАЗИТЬ(ФинансовыйДвиженияССубконто.Регистратор.Комментарий КАК СТРОКА(500)),
		                |	ФинансовыйДвиженияССубконто.Регистратор.Ответственный
		                |ИЗ
		                |	РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
		                |			&НачалоПериода,
		                |			&КонецПериода,
		                |			НЕ СубконтоКт2 В ИЕРАРХИИ (&ЗатратыПостоянные)
		                |				И СубконтоКт2 В ИЕРАРХИИ (&ЗатратыПеременные)
		                |				И НЕ СубконтоКт2 В ИЕРАРХИИ (&УЕК)
		                |				И НЕ (КорСубконто2 В (&КорСубконто2))
		                |				И (&Проект = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПустаяСсылка)
		                |					ИЛИ СубконтоКт1.ТипРозничнойТочки = &Проект),
		                |			,
		                |			) КАК ФинансовыйДвиженияССубконто
		                |ГДЕ
		                |	ФинансовыйДвиженияССубконто.СчетКт В ИЕРАРХИИ(&Счет44)
		                |	И НЕ ФинансовыйДвиженияССубконто.СчетКт = &Счет442
		                |	И НЕ ФинансовыйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&Счет90)
		                |;
		                |
		                |////////////////////////////////////////////////////////////////////////////////
		                |ВЫБРАТЬ
		                |	ТЗ_Расшифровка.Счет,
		                |	ТЗ_Расшифровка.ТТ,
		                |	ТЗ_Расшифровка.СтатьяЗатрат,
		                |	ТЗ_Расшифровка.ЦФО,
		                |	ТЗ_Расшифровка.Регистратор КАК Документ,
		                |	ТЗ_Коэффициенты.Коэффициент,
		                |	ТЗ_Коэффициенты.ТТ90,
		                |	ТЗ_Расшифровка.Сумма * ЕСТЬNULL(ТЗ_Коэффициенты.Коэффициент, 1) КАК Сумма,
		                |	ТЗ_Расшифровка.Содержание,
		                |	ТЗ_Расшифровка.Комментарий,
		                |	ТЗ_Расшифровка.Автор
		                |ИЗ
		                |	ТЗ_Расшифровка КАК ТЗ_Расшифровка
		                |		ЛЕВОЕ СОЕДИНЕНИЕ ТЗ_Коэффициенты КАК ТЗ_Коэффициенты
		                |		ПО ТЗ_Расшифровка.Счет = ТЗ_Коэффициенты.Счет
		                |			И ТЗ_Расшифровка.СтатьяЗатрат = ТЗ_Коэффициенты.СтатьяЗатрат
		                |			И ТЗ_Расшифровка.ЦФО = ТЗ_Коэффициенты.ЦФО
		                |			И ТЗ_Расшифровка.ТТ = ТЗ_Коэффициенты.ТТ
		                |ГДЕ
		                |	ТЗ_Расшифровка.ТТ = &СтруктурнаяЕдиница";
				   
		Запрос.УстановитьПараметр("ЗатратыПеременные", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("2"));
		Запрос.УстановитьПараметр("ЗатратыПостоянные", Справочники.СтатьиДоходовРасходов.НайтиПоКоду(Строка(Число(СтатьяДР_Код))));
		Запрос.УстановитьПараметр("Проект", Перечисления.ТипыРозничныхТочек.ПустаяСсылка());
	    Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(НачалоПериода));
	    Запрос.УстановитьПараметр("КонецПериода", КонецДня(КонецПериода));
		Запрос.УстановитьПараметр("СчетПродажи", ПланыСчетов.Финансовый.Продажи);
		Запрос.УстановитьПараметр("Счет44", ПланыСчетов.Финансовый.ЗатратыДляРаспределения);
        Запрос.УстановитьПараметр("Счет442", ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения);
        Запрос.УстановитьПараметр("УЕК", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("4"));
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);

		//Запрос.УстановитьПараметр("КорСубконто2", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("61010"));	
		
	Иначе
		Возврат;
	КонецЕсли;		  
	
	Запрос.УстановитьПараметр("Счет90", ПланыСчетов.Финансовый.Продажи);
	Запрос.УстановитьПараметр("Все",  Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Все"));
	//Запрос.УстановитьПараметр("ЦФО", ЦФО);

	Выгрузка = Запрос.Выполнить().Выгрузить();
	ВыгрузкаКопия = Выгрузка.Скопировать();
	ВыгрузкаКопия.Свернуть("Документ");
	//Выборка = Запрос.Выполнить().Выбрать();
	Итог = 0;
	МассивДокументу = ВыгрузкаКопия.ВыгрузитьКолонку("Документ");
	Для Каждого Документ Из МассивДокументу Цикл
		Отбор = Новый Структура;
		Отбор.Вставить("Документ", Документ);
		НайденныеСтроки = Выгрузка.НайтиСтроки(Отбор);
		Содержание = "";
		Автор = "";
		Комментарий = "";
		Сумма = 0;
		
		Для Каждого Строка Из НайденныеСтроки Цикл
			Содержание = Строка.Содержание;		
			Автор = Строка.Автор;
			Комментарий = Строка.Комментарий;
			Сумма = Строка.Сумма;
		КонецЦикла;
		
		Содержание = Лев(Содержание, СтрДлина(СокрЛП(Содержание)) - 1);
		ОбластьСтрока.Параметры.Документ = Документ;
		Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
					И ТипЗнч(Документ.ДокументОснование) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств")
						И ЗначениеЗаполнено(Документ.ДокументОснование) Тогда
				ОбластьСтрока.Параметры.Содержание = Документ.ДокументОснование.Пояснение;	
				ОбластьСтрока.Параметры.Автор = Документ.ДокументОснование.Ответственный;
				ОбластьСтрока.Параметры.Период = Документ.ДокументОснование.ПериодыТорговыхТочекСтрока;
			ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.РасходИзКассы") 
					И ЗначениеЗаполнено(Документ.ЗаявкаНаРасходованиеСредств) Тогда	
				ОбластьСтрока.Параметры.Содержание = Документ.ЗаявкаНаРасходованиеСредств.Пояснение;	
				ОбластьСтрока.Параметры.Автор = Документ.ЗаявкаНаРасходованиеСредств.Ответственный;
				ОбластьСтрока.Параметры.Период = Документ.ЗаявкаНаРасходованиеСредств.ПериодыТорговыхТочекСтрока;
			Иначе	
				ОбластьСтрока.Параметры.Содержание = Содержание;	
				ОбластьСтрока.Параметры.Автор = Автор;
			КонецЕсли;
		ОбластьСтрока.Параметры.Комментарий = Комментарий;
		ОбластьСтрока.Параметры.Сумма = Сумма;
		
        ТабДокумент.Вывести(ОбластьСтрока);
		Итог = Итог + Сумма;
		
	КонецЦикла;
	//
	ОбластьИтоги.Параметры.Сумма = Итог;
	ТабДокумент.Вывести(ОбластьИтоги);
	
	ТабДокумент.ТолькоПросмотр = Истина;
	//ТабДокумент.Показать("Расшифровка по документам");
	
	ФормаРасшифровки = ПолучитьФорму("ФормаРасшифровки");
	ФормаРасшифровки.ЭлементыФормы.Результат.Очистить();
	ФормаРасшифровки.ЭлементыФормы.Результат.Вывести(ТабДокумент);
	ФормаРасшифровки.КлючУникальности = Новый УникальныйИдентификатор;
	ФормаРасшифровки.Открыть();
	
КонецПроцедуры

Функция ДатаРасшифровки(НомерМесяца, НомерГода)
	Если НомерМесяца = 1 Тогда
		Возврат Дата(Формат(НомерГода, "ЧГ=0") + "0101");
	ИначеЕсли НомерМесяца = 2 Тогда
		Возврат Дата(Формат(НомерГода, "ЧГ=0") + "0201");
	ИначеЕсли НомерМесяца = 3 Тогда
		Возврат Дата(Формат(НомерГода, "ЧГ=0") + "0301");
	ИначеЕсли НомерМесяца = 4 Тогда
		Возврат Дата(Формат(НомерГода, "ЧГ=0") + "0401");
	ИначеЕсли НомерМесяца = 5 Тогда
		Возврат Дата(Формат(НомерГода, "ЧГ=0") + "0501");
	ИначеЕсли НомерМесяца = 6 Тогда
		Возврат Дата(Формат(НомерГода, "ЧГ=0") + "0601");
	ИначеЕсли НомерМесяца = 7 Тогда
		Возврат Дата(Формат(НомерГода, "ЧГ=0") + "0701");
	ИначеЕсли НомерМесяца = 8 Тогда
		Возврат Дата(Формат(НомерГода, "ЧГ=0") + "0801");
	ИначеЕсли НомерМесяца = 9 Тогда 
		Возврат Дата(Формат(НомерГода, "ЧГ=0") + "0901");
	ИначеЕсли НомерМесяца = 10 Тогда
		Возврат Дата(Формат(НомерГода, "ЧГ=0") + "1001");
	ИначеЕсли НомерМесяца = 11 Тогда
		Возврат Дата(Формат(НомерГода, "ЧГ=0") + "1101");
	ИначеЕсли НомерМесяца = 12 Тогда 
		Возврат Дата(Формат(НомерГода, "ЧГ=0") + "1201");
	КонецЕсли;

КонецФункции

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если РежимРедактированияНастройки Тогда
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	ИнфокомТиповыеОтчеты.ОбработкаЗакрытияНастройкиОтчета(ЭтотОбъект, ЭтаФорма, Отказ, СтандартнаяОбработка);
	Если Не ЭтоОтработкаРасшифровки И Не РежимРедактированияНастройки Тогда
		ИнфокомТиповыеОтчеты.СохранитьПоследнююИспользуемуюНастройку(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

// ОБРАБОТЧИКИ ЭЛЕМЕНТОВ ФОРМЫ НА ПАНЕЛИ

Процедура ОтборПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформлениеСтроки.Ячейки.ЛевоеЗначениеДляКраткогоОтображенияЭлемента.ОтображатьКартинку = Ложь;
	
КонецПроцедуры

Процедура ОбработкаНажатияКнопкиСохраненнойНастройки(Элемент)
	
	ИнфокомТиповыеОтчеты.ВыборВариантаОтчетаНаПанелиВариантов(ЭтотОбъект, ЭтаФорма, Элемент);
		
КонецПроцедуры

Процедура ДействияПанелиСохранитьСписок(Элемент)
	
	ИнфокомТиповыеОтчеты.СохранитьСписокВТабличномПоле(ЭтотОбъект, ЭлементыФормы, Элемент);
		
КонецПроцедуры

Процедура ДействияПанелиЗагрузитьСписок(Элемент)
	
	ИнфокомТиповыеОтчеты.ЗагрузитьСписокВТабличноеПоле(ЭтотОбъект, ЭлементыФормы, Элемент);
		
КонецПроцедуры

Процедура ДействияПанелиСтандартныйПериодПользователяПриИзменении(Элемент)
	
	СтандартныйПериод.Вариант = Элемент.Значение;
	
КонецПроцедуры

Процедура ДействияПанелиСтандартнаяДатаНачалаПользователяПриИзменении(Элемент)
	
	СтандартнаяДатаНачала.Вариант = Элемент.Значение;
	
КонецПроцедуры

Процедура ДействияПанелиДатаСтандартногоПериодаПриИзменении(Элемент)
	
	ЭлементыФормы.ДинамическийОтборСтандартныйПериодПользователя.Значение = ВариантСтандартногоПериода.ПроизвольныйПериод;
	
КонецПроцедуры

Процедура ДействияПанелиДатаСтандартнойДатыНачалаПриИзменении(Элемент)
	
	ЭлементыФормы.ДинамическийОтборСтандартнаяДатаНачалаПользователя.Значение = ВариантСтандартнойДатыНачала.ПроизвольнаяДата;
	
КонецПроцедуры

Процедура ДействияПанелиИзменениеЗначенияДинамическогоОтбора(Элемент)
	
	ИнфокомТиповыеОтчеты.ОбработкаИзмененияЗначенияДинамическогоОтбора(ЭлементыФормы, Элемент);
	
КонецПроцедуры

Процедура ДействияПанелиОкончаниеРедактированиеТабличногоПоля(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ИнфокомТиповыеОтчеты.ОбновитьИзмененияТабличногоПоля(ЭлементыФормы, Элемент);
	
КонецПроцедуры

Процедура ДействияПанелиУдалениеСтрокиТабличногоПоля(Элемент)
	
	ИнфокомТиповыеОтчеты.ОбновитьИзмененияТабличногоПоля(ЭлементыФормы, Элемент);
	
КонецПроцедуры
                                                              
Процедура ДействияПанелиКнопкаПодборНажатие(Элемент)
	Отбор = ИнфокомТиповыеОтчеты.ПолучитьОтборИзФормы(ОтчетОбъект, ЭтаФорма, Элемент);
	Если Отбор.СтрокаОтбора.Поле = "ДанныеОРаботнике.ПодразделениеОрганизации" тогда
		Отбор = ИнфокомТиповыеОтчеты.ПолучитьОтборИзФормы(ОтчетОбъект, ЭтаФорма, "ДанныеОРаботнике.ОбособленноеПодразделение");
		//Параметр = ИнфокомТиповыеОтчеты.ПолучитьПараметрИзФормы(ОтчетОбъект, ЭтаФорма, "РежимОтчета");
		ЗначениеВладельца = Отбор.Значение;
	КонецЕсли;
	ИнфокомТиповыеОтчеты.ОбработкаНажатияКнопкиПодбор(ЭтотОбъект, ЭтаФорма, Элемент, ЗначениеВладельца);
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////////////////////

Процедура ПослеВыводаПанелиПользователя(ЗначениеНастроек) Экспорт
	
КонецПроцедуры

Процедура ПриПолучениеНастроекПользователя(ЗначенияНастроек) Экспорт
	
КонецПроцедуры

Процедура ПослеВыводаПериода(СтруктураЭлементовУправления) Экспорт
	
КонецПроцедуры

Процедура ПослеВыводаПараметра(СтруктураЭлементовУправления) Экспорт
	
КонецПроцедуры

Процедура ПослеВыводаГруппировки(СтруктураЭлементовУправления) Экспорт
	
КонецПроцедуры

Процедура ПослеВыводаОтбора(СтруктураЭлементовУправления) Экспорт
	
КонецПроцедуры

Процедура ПриНажатииНаКнопкуВверх(Кнопка)
	ИнфокомТиповыеОтчеты.ПриНажатииКнопкиВверхВниз(ЭтаФорма, ОтчетОбъект, Кнопка);
КонецПроцедуры

Процедура ПриНажатииНаКнопкуВниз(Кнопка)
	ИнфокомТиповыеОтчеты.ПриНажатииКнопкиВверхВниз(ЭтаФорма, ОтчетОбъект, Кнопка);
КонецПроцедуры

Процедура ПриЗакрытии()
	
	ИнфокомТиповыеОтчеты.СохранитьНастройкиФормыОтчета(ОтчетОбъект, ЭтаФорма);
	
КонецПроцедуры

Процедура ГруппировкиПриПолученииДанных(Элемент, ОформленияСтрок)
	ИнфокомТиповыеОтчеты.ГруппировкаПриПолученииДанных(Элемент, ОформленияСтрок);
КонецПроцедуры

Процедура ДействияПанелиДинамическийОтборПериодВыборПриИзменении(Элемент)
	
	ИнфокомТиповыеОтчеты.ДействияПанелиДинамическийОтборПериодВыборПриИзменении(ЭтаФорма, Элемент)
	
КонецПроцедуры	
	
Процедура ДействияПанелиДинамическийОтборПериодВыборПриНачалеВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ИнфокомТиповыеОтчеты.ДействияПанелиДинамическийОтборПериодВыборПриНачалеВыбораИзСписка(ЭтаФорма, Элемент, СтандартнаяОбработка)
	
КонецПроцедуры	
	
Процедура ДействияПанелиДинамическийОтборПериодВыборАвтоПодборТекста(Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка) 
	
	ИнфокомТиповыеОтчеты.ДействияПанелиДинамическийОтборПериодВыборАвтоПодборТекста(ЭтаФорма, Элемент, Текст, ТекстАвтоПодбора, СтандартнаяОбработка)
	
КонецПроцедуры	
	
Процедура ДействияПанелиДинамическийОтборПериодВыборОчистка(Элемент, СтандартнаяОбработка) 
	
	ИнфокомТиповыеОтчеты.ДействияПанелиДинамическийОтборПериодВыборОчистка(ЭтаФорма, Элемент, СтандартнаяОбработка)
	
КонецПроцедуры	
	
Процедура ДействияПанелиДинамическийОтборПериодВыборОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка) 
	
	ИнфокомТиповыеОтчеты.ДействияПанелиДинамическийОтборПериодВыборОкончаниеВводаТекстаОкончаниеВводаТекста(ЭтаФорма, Элемент, Текст, Значение, СтандартнаяОбработка)
	
КонецПроцедуры	

Процедура НадписьПредупреждениеНажатие(Элемент)
	
	
КонецПроцедуры

Функция МассивСтатейАмортизация()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиДоходовРасходов.Ссылка
		|ИЗ
		|	Справочник.СтатьиДоходовРасходов КАК СтатьиДоходовРасходов
		|ГДЕ
		|	СтатьиДоходовРасходов.Ссылка В ИЕРАРХИИ (&Ссылка)";

	Запрос.УстановитьПараметр("Ссылка", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("610"));

	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат Результат;

КонецФункции	
	
	
                                                                                           
СоответствиеНастройкаРезультат = Новый Соответствие;

ДействияЭлементовФормы = Новый Структура;
ДействияЭлементовФормы.Вставить("ДействияПанелиДинамическийОтборПериодВыборПриИзменении", Новый Действие("ДействияПанелиДинамическийОтборПериодВыборПриИзменении"));
ДействияЭлементовФормы.Вставить("ДействияПанелиДинамическийОтборПериодВыборПриНачалеВыбораИзСписка", Новый Действие("ДействияПанелиДинамическийОтборПериодВыборПриНачалеВыбораИзСписка"));
ДействияЭлементовФормы.Вставить("ДействияПанелиДинамическийОтборПериодВыборАвтоПодборТекста", Новый Действие("ДействияПанелиДинамическийОтборПериодВыборАвтоПодборТекста"));
ДействияЭлементовФормы.Вставить("ДействияПанелиДинамическийОтборПериодВыборОчистка", Новый Действие("ДействияПанелиДинамическийОтборПериодВыборОчистка"));
ДействияЭлементовФормы.Вставить("ДействияПанелиДинамическийОтборПериодВыборОкончаниеВводаТекста", Новый Действие("ДействияПанелиДинамическийОтборПериодВыборОкончаниеВводаТекста"));

ДействияЭлементовФормы.Вставить("ОбработкаНажатияКнопкиСохраненнойНастройки", Новый Действие("ОбработкаНажатияКнопкиСохраненнойНастройки"));
ДействияЭлементовФормы.Вставить("ДействияПанелиСохранитьСписок", Новый Действие("ДействияПанелиСохранитьСписок"));
ДействияЭлементовФормы.Вставить("ДействияПанелиЗагрузитьСписок", Новый Действие("ДействияПанелиЗагрузитьСписок"));
ДействияЭлементовФормы.Вставить("ДействияПанелиСтандартныйПериодПользователяПриИзменении", Новый Действие("ДействияПанелиСтандартныйПериодПользователяПриИзменении"));
ДействияЭлементовФормы.Вставить("ДействияПанелиСтандартнаяДатаНачалаПользователяПриИзменении", Новый Действие("ДействияПанелиСтандартнаяДатаНачалаПользователяПриИзменении"));
ДействияЭлементовФормы.Вставить("ДействияПанелиДатаСтандартногоПериодаПриИзменении", Новый Действие("ДействияПанелиДатаСтандартногоПериодаПриИзменении"));
ДействияЭлементовФормы.Вставить("ДействияПанелиДатаСтандартнойДатыНачалаПриИзменении", Новый Действие("ДействияПанелиДатаСтандартнойДатыНачалаПриИзменении"));
ДействияЭлементовФормы.Вставить("ДействияПанелиИзменениеЗначенияДинамическогоОтбора", Новый Действие("ДействияПанелиИзменениеЗначенияДинамическогоОтбора"));
ДействияЭлементовФормы.Вставить("ДействияПанелиОкончаниеРедактированиеТабличногоПоля", Новый Действие("ДействияПанелиОкончаниеРедактированиеТабличногоПоля"));
ДействияЭлементовФормы.Вставить("ДействияПанелиУдалениеСтрокиТабличногоПоля", Новый Действие("ДействияПанелиУдалениеСтрокиТабличногоПоля"));
ДействияЭлементовФормы.Вставить("ДействияПанелиКнопкаПодборНажатие", Новый Действие("ДействияПанелиКнопкаПодборНажатие"));
ДействияЭлементовФормы.Вставить("ПриНажатииНаКнопкуВверх", Новый Действие("ПриНажатииНаКнопкуВверх"));
ДействияЭлементовФормы.Вставить("ПриНажатииНаКнопкуВниз", Новый Действие("ПриНажатииНаКнопкуВниз"));
ДействияЭлементовФормы.Вставить("ГруппировкиПриПолученииДанных", Новый Действие("ГруппировкиПриПолученииДанных"));
