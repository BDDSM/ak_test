
#Область ДополнительныеПроцедурыИФункции

&НаСервере
Функция ЕстьКолонка(НазваниеКолонки)
	
	Возврат ?(РеквизитФормыВЗначение("Результат").Колонки.Найти(НазваниеКолонки) <> Неопределено, Истина, Ложь);

КонецФункции

&НаСервере
Процедура СохранитьРезультатПроверки(ТекСЕ, ТекПользователь, ПровереноНаДатуПередачиПомещения, ПровереноНаРазницуПлощадей)
	
	НЗ = РегистрыСведений.РезультатыПроверкиСтруктурныхЕдиниц.СоздатьНаборЗаписей();
	НЗ.Отбор.СтруктурнаяЕдиница.Установить(ТекСЕ);
	НЗ.Прочитать();
	Если НЗ.Количество() = 0 Тогда 
		ТекЗапись = НЗ.Добавить();
	Иначе
		ТекЗапись = НЗ[0];
	КонецЕсли;
	
	ТекЗапись.СтруктурнаяЕдиница = ТекСЕ;
	Если ПровереноНаДатуПередачиПомещения <> Неопределено Тогда  
		ТекЗапись.ПровереноНаДатуПередачиПомещения = ПровереноНаДатуПередачиПомещения;
		//+++ AK suvv 15.06.2018 ИП-00018779
		ТекЗапись.АвторПровереноНаДатуПередачиПомещения = ТекПользователь;
		//--- AK suvv
	КонецЕсли; 
	Если ПровереноНаРазницуПлощадей <> Неопределено Тогда 
		ТекЗапись.ПровереноНаРазницуПлощадей = ПровереноНаРазницуПлощадей;
		//+++ AK suvv 15.06.2018 ИП-00018779
		ТекЗапись.АвторПровереноНаРазницуПлощадей = ТекПользователь;
		//--- AK suvv
	КонецЕсли; 
	
	НЗ.Записать();
	
КонецПроцедуры

//+++ AK suvv 15.06.2018 ИП-00018779
&НаСервере
Функция ПолучитьТекущегоПользователя()
	
	Возврат ПараметрыСеанса.ТекущийПользователь;
	
КонецФункции //--- AK suvv

&НаКлиенте 
Процедура ВыполнитьДействиеПриИзмененииДанных(Элемент) Экспорт
	//+++ AK suvv 15.06.2018 ИП-00018779
	ТекущийПользователь = ПолучитьТекущегоПользователя();
	//--- AK suvv 
	
	ТекСЕ = Элементы.Результат.ТекущиеДанные.Ссылка;
	Если ЕстьКолонка("ПровереноНаРазницуДатыПередачи") Тогда  
		ПровереноНаДатуПередачиПомещения = Элементы.Результат.ТекущиеДанные.ПровереноНаРазницуДатыПередачи;
		//+++ AK suvv 15.06.2018 ИП-00018779
		Элементы.Результат.ТекущиеДанные.АвторПровереноНаДатуПередачиПомещения = ТекущийПользователь;
		//--- AK suvv
	Иначе
		ПровереноНаДатуПередачиПомещения = неопределено;
	КонецЕсли;
	Если ЕстьКолонка("ПровереноНаРазницуПлощадей") Тогда 
		ПровереноНаРазницуПлощадей = Элементы.Результат.ТекущиеДанные.ПровереноНаРазницуПлощадей;
		//+++ AK suvv 15.06.2018 ИП-00018779
		Элементы.Результат.ТекущиеДанные.АвторПровереноНаРазницуПлощадей = ТекущийПользователь;
		//--- AK suvv
	Иначе
		ПровереноНаРазницуПлощадей = неопределено;
	КонецЕсли;
	
	СохранитьРезультатПроверки(ТекСЕ, ТекущийПользователь, ПровереноНаДатуПередачиПомещения, ПровереноНаРазницуПлощадей);

КонецПроцедуры  

&НаСервере
Процедура ЗаполнитьТаблицуРезультат(ТаблицаЗначений)
      
    УдаляемыеРеквизиты = Новый Массив;
    РеквизитыДляУдаления = ПолучитьРеквизиты("Результат");
    Для Каждого РеквизитУдаления Из РеквизитыДляУдаления Цикл
        УдаляемыеРеквизиты.Добавить("Результат." + РеквизитУдаления.Имя);
        Элементы.Удалить(Элементы["Результат" + РеквизитУдаления.Имя]);
    КонецЦикла;
    
    ДобавляемыеРеквизиты = Новый Массив;
    Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
		Если Колонка.ТипЗначения.СодержитТип(Тип("Булево")) Тогда  
			ТипЗначенияКолонки = Новый ОписаниеТипов("Булево");
		ИначеЕсли Колонка.ТипЗначения.СодержитТип(Тип("Число")) и Колонка.Имя = "РазницаПлощадей" Тогда
			ТипЗначенияКолонки = Новый ОписаниеТипов("Число",,,Новый КвалификаторыЧисла(15,1));
		Иначе
			ТипЗначенияКолонки = Колонка.ТипЗначения;
		КонецЕсли;
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(Колонка.Имя, ТипЗначенияКолонки, "Результат", Колонка.Заголовок));
	КонецЦикла;
    ИзменитьРеквизиты(ДобавляемыеРеквизиты,УдаляемыеРеквизиты);
      
    // Добавление элементов форму
	Для Каждого Колонка Из ТаблицаЗначений.Колонки Цикл
		ЭлементРеквизита = Элементы.Добавить("Результат" + Колонка.Имя, Тип("ПолеФормы"), Элементы.Результат);
		ЭлементРеквизита.ПутьКДанным = "Результат." + Колонка.Имя;
		Если Колонка.ТипЗначения.СодержитТип(Тип("Булево")) Тогда 
			ЭлементРеквизита.Вид = ВидПоляФормы.ПолеФлажка; 
			ЭлементРеквизита.ТолькоПросмотр = Ложь;
			ЭлементРеквизита.УстановитьДействие("ПриИзменении", "ВыполнитьДействиеПриИзмененииДанных"); 
			ЭлементРеквизита.РежимРедактирования = РежимРедактированияКолонки.Непосредственно;
		Иначе	
			ЭлементРеквизита.Вид = ВидПоляФормы.ПолеВвода;
			ЭлементРеквизита.ТолькоПросмотр = Истина;
		КонецЕсли;
	КонецЦикла;
    
    ЗначениеВРеквизитФормы(ТаблицаЗначений, "Результат"); 
	
КонецПроцедуры

&НаСервере
Процедура СформироватьНаСервере()
	
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	
	СКД = ОтчетОбъект.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	ТЗ = ОтчетОбъект.РезультатКомпоновкиВТЗ(СКД);	
		
	ЗаполнитьТаблицуРезультат(ТЗ);

КонецПроцедуры

#Конецобласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаСформировать(Команда)
		
	СформироватьНаСервере();
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СформироватьНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицФормы

&НаКлиенте
Процедура РезультатПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура РезультатПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

//+++ AK suvv 15.06.2018 ИП-00018779 
&НаСервере
Процедура ПриОбновленииСоставаПользовательскихНастроекНаСервере(СтандартнаяОбработка)
	
	Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("КлючВарианта", ЭтаФорма.КлючТекущегоВарианта);
	
КонецПроцедуры //--- AK suvv

#КонецОбласти
