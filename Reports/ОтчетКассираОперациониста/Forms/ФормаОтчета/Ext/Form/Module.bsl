
&НаКлиенте
Процедура Сформировать(Команда)
	
	
	Если Не ЗначениеЗаполнено(Период.ДатаНачала) 
		Или Не ЗначениеЗаполнено(Период.ДатаОкончания)
		Или Период.ДатаНачала > Период.ДатаОкончания
		Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Заполните период!";
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;
	
	СписокКасс = ПроверитьКассу();	
	
	Если СписокКасс.Количество() > 1 Тогда
		
		Касса = СписокКасс.ВыбратьЭлемент("Выберите кассу!");
		
		Если Касса = Неопределено Тогда
		
			Возврат;
		
		КонецЕсли;
		
		Касса = Касса.Значение;
	
	ИначеЕсли СписокКасс.Количество() = 0 Тогда
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "По Структурной еденице нет оборотов!";
		Сообщение.Сообщить();
		
		Возврат;
		
	Иначе
		
		Касса = СписокКасс[0].Значение;
	
	КонецЕсли;
	
	Если ПроверитьРВ(Касса) Тогда
	
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "По кассе "+ Касса + " есть разница!" ;
		Сообщение.Сообщить();
		
		Возврат;
	
	КонецЕсли;
	
	СофрмироватьНаСервере(Касса);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьКассу()

    СписокЗначений = Новый СписокЗначений;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЛистУчетаZОтчеты.Касса
		|ИЗ
		|	Документ.ЛистУчета.ZОтчеты КАК ЛистУчетаZОтчеты
		|ГДЕ
		|	ЛистУчетаZОтчеты.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ЛистУчетаZОтчеты.Ссылка.Проведен
		|	И ЛистУчетаZОтчеты.Ссылка.ТорговаяТочка = &ТорговаяТочка
		|
		|СГРУППИРОВАТЬ ПО
		|	ЛистУчетаZОтчеты.Касса";

	Запрос.УстановитьПараметр("КонецПериода", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	//Запрос.УстановитьПараметр("РВ1", ПланыСчетов.Хозрасчетный.НераспределеннаяРозничнаяВыручка);
	Запрос.УстановитьПараметр("ТорговаяТочка", СтруктурнаяЕденица);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокЗначений.Добавить(ВыборкаДетальныеЗаписи.Касса);   		
	КонецЦикла;
	
	Возврат СписокЗначений;

	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	

КонецФункции // ПроверитьКассу()

&НаСервере
Функция ПроверитьРВ(Касса)

	Отказ = Ложь;
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЛистУчета.Ссылка КАК Ссылка,
		|	ЛистУчета.Дата КАК Дата
		|ПОМЕСТИТЬ ВТЛистыУчета
		|ИЗ
		|	Документ.ЛистУчета КАК ЛистУчета
		|ГДЕ
		|	ЛистУчета.Дата МЕЖДУ &ДатаНач И КОНЕЦПЕРИОДА(&ДатаКон, ДЕНЬ)
		|	И ЛистУчета.Ссылка В
		|			(ВЫБРАТЬ
		|				ЛистУчетаZОтчеты.Касса
		|			ИЗ
		|				Документ.ЛистУчета.ZОтчеты КАК ЛистУчетаZОтчеты
		|			ГДЕ
		|				ЛистУчетаZОтчеты.Касса = &Касса)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЛистУчетаZОтчеты.Касса КАК Касса,
		|	МАКСИМУМ(ВТЛистыУчета.Дата) КАК ДатаДокумента
		|ПОМЕСТИТЬ ВТПоследниеДаты
		|ИЗ
		|	Документ.ЛистУчета.ZОтчеты КАК ЛистУчетаZОтчеты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТЛистыУчета КАК ВТЛистыУчета
		|		ПО (ВТЛистыУчета.Ссылка = ЛистУчетаZОтчеты.Ссылка)
		|ГДЕ
		|	ЛистУчетаZОтчеты.Ссылка.Дата МЕЖДУ &ДатаНач И КОНЕЦПЕРИОДА(&ДатаКон, ДЕНЬ)
		|	И ЛистУчетаZОтчеты.Касса = &Касса
		|
		|СГРУППИРОВАТЬ ПО
		|	ЛистУчетаZОтчеты.Касса
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Касса,
		|	ДатаДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЛистУчетаZОтчеты.Ссылка.Организация КАК ОрганизацияЛиста,
		|	ВЫБОР
		|		КОГДА НЕ КОНЕЦПЕРИОДА(ВТПоследниеДаты.ДатаДокумента, ДЕНЬ) = КОНЕЦПЕРИОДА(&ДатаКон, ДЕНЬ)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ВПоследнийДень,
		|	ЛистУчетаZОтчеты.Ссылка.ТорговаяТочка КАК СтруктурнаяЕдиницаЛиста,
		|	ЛистУчетаZОтчеты.Касса КАК Касса,
		|	МАКСИМУМ(ЛистУчетаZОтчеты.Ссылка) КАК ЛистУчета,
		|	МАКСИМУМ(ЛистУчетаZОтчеты.ВведенныйОстаток) КАК Сумма
		|ПОМЕСТИТЬ ВТРучныеСуммы
		|ИЗ
		|	Документ.ЛистУчета.ZОтчеты КАК ЛистУчетаZОтчеты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПоследниеДаты КАК ВТПоследниеДаты
		|		ПО (ВТПоследниеДаты.ДатаДокумента = ЛистУчетаZОтчеты.Ссылка.Дата)
		|			И (ВТПоследниеДаты.Касса = ЛистУчетаZОтчеты.Касса)
		|ГДЕ
		|	ЛистУчетаZОтчеты.Ссылка.Дата МЕЖДУ &ДатаНач И КОНЕЦПЕРИОДА(&ДатаКон, ДЕНЬ)
		|	И ЛистУчетаZОтчеты.Касса = &Касса
		|
		|СГРУППИРОВАТЬ ПО
		|	ЛистУчетаZОтчеты.Ссылка.Организация,
		|	ВЫБОР
		|		КОГДА НЕ КОНЕЦПЕРИОДА(ВТПоследниеДаты.ДатаДокумента, ДЕНЬ) = КОНЕЦПЕРИОДА(&ДатаКон, ДЕНЬ)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	ЛистУчетаZОтчеты.Ссылка.ТорговаяТочка,
		|	ЛистУчетаZОтчеты.Касса,
		|	ЛистУчетаZОтчеты.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФинансовыйОстатки.Субконто1 КАК Касса,
		|	ФинансовыйОстатки.СуммаОстаток КАК Сумма
		|ПОМЕСТИТЬ ВТОстаткиРВ
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.Остатки(ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(&ДатаКон, ДЕНЬ), СЕКУНДА, 1), Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.НераспределеннаяРозничнаяВыручка), , Субконто1 = &Касса) КАК ФинансовыйОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Касса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТРучныеСуммы.СтруктурнаяЕдиницаЛиста КАК СтруктурнаяЕдиницаЛиста,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ВТОстаткиРВ.Сумма, 0) - ВТРучныеСуммы.Сумма < 0
		|				ТОГДА -1 * (ЕСТЬNULL(ВТОстаткиРВ.Сумма, 0) - ВТРучныеСуммы.Сумма)
		|			ИНАЧЕ ЕСТЬNULL(ВТОстаткиРВ.Сумма, 0) - ВТРучныеСуммы.Сумма
		|		КОНЕЦ) КАК Разница
		|ПОМЕСТИТЬ ВТРазницы
		|ИЗ
		|	ВТРучныеСуммы КАК ВТРучныеСуммы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиРВ КАК ВТОстаткиРВ
		|		ПО (ВТОстаткиРВ.Касса = ВТРучныеСуммы.Касса)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТРучныеСуммы.СтруктурнаяЕдиницаЛиста
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтруктурнаяЕдиницаЛиста
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТРучныеСуммы.ОрганизацияЛиста КАК ОрганизацияЛиста,
		|	ВТРучныеСуммы.СтруктурнаяЕдиницаЛиста КАК СтруктурнаяЕдиницаЛиста,
		|	ВТРучныеСуммы.Касса КАК Касса,
		|	ВТРучныеСуммы.ЛистУчета КАК ЛистУчета,
		|	ЕСТЬNULL(ВТОстаткиРВ.Сумма, 0) КАК СуммаРВ,
		|	ВЫБОР
		|		КОГДА ВТРучныеСуммы.ВПоследнийДень = ИСТИНА
		|			ТОГДА ВТРучныеСуммы.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаВручную,
		|	ВЫБОР
		|		КОГДА ВТРучныеСуммы.ВПоследнийДень = ИСТИНА
		|			ТОГДА ВТРучныеСуммы.Сумма - ЕСТЬNULL(ВТОстаткиРВ.Сумма, 0)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Разница
		|ИЗ
		|	ВТРучныеСуммы КАК ВТРучныеСуммы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиРВ КАК ВТОстаткиРВ
		|		ПО (ВТОстаткиРВ.Касса = ВТРучныеСуммы.Касса)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазницы КАК ВТРазницы
		|		ПО (ВТРазницы.СтруктурнаяЕдиницаЛиста = ВТРучныеСуммы.СтруктурнаяЕдиницаЛиста)
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ВТРучныеСуммы.ВПоследнийДень = ИСТИНА
		|				ТОГДА ВТРучныеСуммы.Сумма - ЕСТЬNULL(ВТОстаткиРВ.Сумма, 0)
		|			ИНАЧЕ 0
		|		КОНЕЦ <> 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЕСТЬNULL(ВТРазницы.Разница, 0),
		|	ВТРучныеСуммы.ВПоследнийДень УБЫВ,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ВТОстаткиРВ.Сумма, 0) - ВТРучныеСуммы.Сумма < 0
		|			ТОГДА -1 * (ЕСТЬNULL(ВТОстаткиРВ.Сумма, 0) - ВТРучныеСуммы.Сумма)
		|		ИНАЧЕ ЕСТЬNULL(ВТОстаткиРВ.Сумма, 0) - ВТРучныеСуммы.Сумма
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТЛистыУчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТПоследниеДаты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТРучныеСуммы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТОстаткиРВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТРазницы";
		
		Запрос.УстановитьПараметр("ДатаКон", КонецНедели(Период.ДатаОкончания));
		Запрос.УстановитьПараметр("ДатаНач", НачалоНедели(Период.ДатаНачала));
		Запрос.УстановитьПараметр("Касса", Касса);
		
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;

	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


КонецФункции // ПроверитьРВ()

&НаСервере
Функция СофрмироватьНаСервере(Касса)

	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");

	ТабличныйДокумент.Очистить();
	
	Макет = ОтчетОбъект.ПолучитьМакет("ЖурналКассира");
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	
	Шапка.Параметры.НомерККМ = Касса.ИнвентарныйНомер;
	
	ТабличныйДокумент.Вывести(Шапка);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ФинансовыйОбороты.Период, ДЕНЬ) КАК Дата,
		|	ФинансовыйОбороты.Субконто3 КАК Магазин,
		|	ФинансовыйОбороты.Субконто1 КАК Касса,
		|	ФинансовыйОбороты.СуммаОборотДт КАК Оборот,
		|	ЕСТЬNULL(НалБезнал.СуммаПоНал, 0) - ЕСТЬNULL(АктКм3.Нал, 0) КАК Нал,
		|	ЕСТЬNULL(НалБезнал.СуммаПоБезнал, 0) - ЕСТЬNULL(АктКм3.Безнал, 0) КАК Безнал,
		|	ЕСТЬNULL(АктКм3.Нал, 0) + ЕСТЬNULL(АктКм3.Безнал, 0) КАК КМ3,
		|	ЕСТЬNULL(НалБезнал.СуммаПоНал, 0) - ЕСТЬNULL(АктКм3.Нал, 0) + ЕСТЬNULL(НалБезнал.СуммаПоБезнал, 0) - ЕСТЬNULL(АктКм3.Безнал, 0) КАК Выручка,
		|	НалБезнал.ZОтчет,
		|	ФинансовыйОстаткиИОбороты.СуммаНачальныйОстатокДт,
		|	ФинансовыйОстаткиИОбороты.СуммаКонечныйОстатокДт,
		|	ФинансовыйОбороты.Регистратор
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Счет = &РВ1, , Субконто1 = &Касса, , ) КАК ФинансовыйОбороты
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ЛистУчетаZОтчеты.Касса КАК Касса,
		|			СУММА(ЛистУчетаZОтчеты.СуммаПоНал) КАК СуммаПоНал,
		|			СУММА(ЛистУчетаZОтчеты.СуммаПоБезнал) КАК СуммаПоБезнал,
		|			ЛистУчетаZОтчеты.Ссылка КАК Ссылка,
		|			ЛистУчетаZОтчеты.ZОтчет КАК ZОтчет
		|		ИЗ
		|			Документ.ЛистУчета.ZОтчеты КАК ЛистУчетаZОтчеты
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ЛистУчетаZОтчеты.Касса,
		|			ЛистУчетаZОтчеты.Ссылка,
		|			ЛистУчетаZОтчеты.ZОтчет) КАК НалБезнал
		|		ПО ФинансовыйОбороты.Регистратор = НалБезнал.Ссылка
		|			И ФинансовыйОбороты.Субконто1 = НалБезнал.Касса
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ЛистУчетаАктыКМ3.ОсновноеСредство КАК Касса,
		|			ЛистУчетаАктыКМ3.Ссылка КАК Ссылка,
		|			СУММА(ВЫБОР
		|					КОГДА ЛистУчетаАктыКМ3.ЭтоВозвратБезнал
		|						ТОГДА ЛистУчетаАктыКМ3.Сумма
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК Безнал,
		|			СУММА(ВЫБОР
		|					КОГДА НЕ ЛистУчетаАктыКМ3.ЭтоВозвратБезнал
		|						ТОГДА ЛистУчетаАктыКМ3.Сумма
		|					ИНАЧЕ 0
		|				КОНЕЦ) КАК Нал
		|		ИЗ
		|			Документ.ЛистУчета.АктыКМ3 КАК ЛистУчетаАктыКМ3
		|		ГДЕ
		|			ЛистУчетаАктыКМ3.АктПолучен = ИСТИНА
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ЛистУчетаАктыКМ3.Ссылка,
		|			ЛистУчетаАктыКМ3.ОсновноеСредство) КАК АктКм3
		|		ПО ФинансовыйОбороты.Регистратор = АктКм3.Ссылка
		|			И ФинансовыйОбороты.Субконто1 = АктКм3.Касса
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ОстаткиИОбороты(&НачалоПериода, &КонецПериода, День, , Счет = &РВ1, , Субконто1 = &Касса) КАК ФинансовыйОстаткиИОбороты
		|		ПО ФинансовыйОбороты.Субконто1 = ФинансовыйОстаткиИОбороты.Субконто1
		|			И (НАЧАЛОПЕРИОДА(ФинансовыйОбороты.Период, ДЕНЬ) = ФинансовыйОстаткиИОбороты.Период)
		|ГДЕ
		|	ФинансовыйОбороты.Регистратор ССЫЛКА Документ.ЛистУчета
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";

	Запрос.УстановитьПараметр("Касса", Касса);
	Запрос.УстановитьПараметр("КонецПериода", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	Запрос.УстановитьПараметр("РВ1", ПланыСчетов.Финансовый.НераспределеннаяРозничнаяВыручка);


	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	ПрошлоеФизЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		СтрокаТЧ = Макет.ПолучитьОбласть("СтрокаТЧ");
		
		СтрокаТЧ.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		
		ФизЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
		
		Для каждого ТекСтрока Из ВыборкаДетальныеЗаписи.Регистратор.Продавцы Цикл
			
			Если ТекСтрока.Пч = 2 Тогда
				
				ФизЛицо = ТекСтрока.Продавец;	
				
			КонецЕсли;	
			
		КонецЦикла;
		
		Если ФизЛицо.Пустая() И ВыборкаДетальныеЗаписи.Регистратор.Продавцы.Количество() Тогда
			
			ФизЛицо = ВыборкаДетальныеЗаписи.Регистратор.Продавцы[0].Продавец;
			
		КонецЕсли;
		
		Если ФизЛицо = ПрошлоеФизЛицо Тогда
		
			СтрокаТЧ.Параметры.Кассир = "----//----";
		
		Иначе
		
			СтрокаТЧ.Параметры.Кассир = ФизЛицо;
			
			ПрошлоеФизЛицо = ФизЛицо;
			
		КонецЕсли;            
		
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
		ТабличныйДокумент.Вывести(СтрокаТЧ);
		//СтрокаТЧ.Параметры.Кассир = ФизЛицо;
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;

	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА


КонецФункции // СофрмироватьНаСервере();()


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Отказ = НЕ (РольДоступна("Кассир")
				ИЛИ РольДоступна("Финансист")
				ИЛИ РольДоступна("ФинансистТолькоПросмотр")
				ИЛИ РольДоступна("Помощник")
				ИЛИ УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.ПоказыватьОтчетКассираОперациониста, Ложь));
	
КонецПроцедуры

