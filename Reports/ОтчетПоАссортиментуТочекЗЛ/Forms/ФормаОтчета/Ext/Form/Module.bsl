
&НаКлиенте
Процедура РезультатОбработкаДополнительнойРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Перем ВыполненноеДействие;
	Перем ВыбранноеДействие;
	Перем ПараметрыВыбранногоДействия;
	
	
	СтандартнаяОбработка = Ложь;
	ОбработкаРасшифровки =  Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, Новый ИсточникДоступныхНастроекКомпоновкиДанных(Отчет));
	
	ДоступныеДействия = Новый Массив();
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	
	ДополнительныеДействия = Новый СписокЗначений;
	ДополнительныеДействия.Добавить("Перенести в обработку");
	
	ТекущееЗначение = ПолучитьРезултатРасшифровки(Расшифровка);
	
	ОбработкаРасшифровки.ВыбратьДействие(Расшифровка, ВыбранноеДействие, ПараметрыВыбранногоДействия, ДоступныеДействия, ДополнительныеДействия);
	
	
	Если ВыбранноеДействие = "Перенести в обработку" Тогда
		МассивРасшифровок = Новый Массив;	
		Если ТипЗнч(ТекущееЗначение) = Тип("Структура") Тогда
			Колонка =  Результат.ТекущаяОбласть.Лево;
			Пока Колонка <= Результат.ТекущаяОбласть.Право Цикл
				Ряд  = Результат.ТекущаяОбласть.Верх;
				Пока Ряд <= Результат.ТекущаяОбласть.Низ Цикл
					Расш = Результат.Область(Ряд, Колонка).Расшифровка;
					Если Расш <> Неопределено Тогда
						МассивРасшифровок.Добавить(Расш);
					КонецЕсли;					 
					Ряд = Ряд + 1;
				КонецЦикла;	
				Колонка = Колонка + 1;
			КонецЦикла;				
			
		ИначеЕсли ТипЗнч(ТекущееЗначение) = Тип("СправочникСсылка.Номенклатура") Тогда	
			Колонка =  Результат.ТекущаяОбласть.Лево;			
			Пока Колонка <= Результат.ТекущаяОбласть.Право Цикл				 
				Ряд = Результат.ТекущаяОбласть.Верх + 2;				
				Пока Истина Цикл
					Расш = Результат.Область(Ряд, Колонка).Расшифровка;
					Если Расш <> Неопределено Тогда
						МассивРасшифровок.Добавить(Расш);
					Иначе
						Прервать;
					КонецЕсли;				
					Ряд = Ряд + 1;
				КонецЦикла; 
				Колонка = Колонка + 1;
			КонецЦикла; 
		ИначеЕсли ТипЗнч(ТекущееЗначение) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда		
			Ряд  = Результат.ТекущаяОбласть.Верх;
			Пока Ряд <= Результат.ТекущаяОбласть.Низ Цикл
				а = 5;
				Пока Истина Цикл
					Расш = Результат.Область(Ряд, а).Расшифровка;
					Если Расш <> Неопределено Тогда
						МассивРасшифровок.Добавить(Расш);
					Иначе
						Прервать;
					КонецЕсли;
					а = а + 1;					
				КонецЦикла;			
				Ряд = Ряд + 1;
			КонецЦикла;			
		КонецЕсли;
		
		СтруктураТаблиц = ПолучитьСтрукутруТаблицПоМассивуРасшифровки(МассивРасшифровок);
		
		Если ЭтаФорма.ВладелецФормы = Неопределено Тогда
			П = Новый Структура("СтруктураТаблиц", СтруктураТаблиц);		
			ОткрытьФорму("Обработка.УправлениеАссортиментомЗЛ.Форма.Форма",П);				
		Иначе	
			Если ЭтаФорма.ВладелецФормы.Открыта() Тогда				
				ОповеститьОВыборе(СтруктураТаблиц);
				ЭтаФорма.ВладелецФормы.Активизировать(); 
			Иначе
				П = Новый Структура("СтруктураТаблиц", СтруктураТаблиц);		
				ОткрытьФорму("Обработка.УправлениеАссортиментомЗЛ.Форма.Форма",П);				
			КонецЕсли;	
		КонецЕсли;			
	ИначеЕсли ВыбранноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение Тогда			
		ОткрытьЗначение(ПараметрыВыбранногоДействия);
	КонецЕсли;	
	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтрукутруТаблицПоМассивуРасшифровки(МассивРасшифровок)
	
	КоллекцияРасшифровки = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	ТЗНоменклатуры = Новый ТаблицаЗначений;
	ТЗНоменклатуры.Колонки.Добавить("Номенклатура");
	
	ТЗМагазинов = Новый ТаблицаЗначений;
	ТЗМагазинов.Колонки.Добавить("Магазин");
	
	
	Для каждого ЗначМасс Из МассивРасшифровок Цикл
		ЗначенияРасшифровки = КоллекцияРасшифровки.Элементы[ЗначМасс].ПолучитьПоля();			
		Если ЗначенияРасшифровки.Количество() > 1 Тогда	
			СтрН = ТЗНоменклатуры.Добавить();
			СтрН.Номенклатура = ЗначенияРасшифровки[1].Значение;
			
			СтрМ = ТЗМагазинов.Добавить();
			СтрМ.Магазин = ЗначенияРасшифровки[0].Значение;
		КонецЕсли;
	КонецЦикла;	
	
	ТЗНоменклатуры.Свернуть("Номенклатура");
	ТЗНоменклатуры.Колонки.Добавить("Характеристика");
	Для каждого Стр Из ТЗНоменклатуры Цикл
		Стр.Характеристика = ЗаполнитьХарактеристику(Стр.Номенклатура);
	КонецЦикла;	
	
	ТЗМагазинов.Свернуть("Магазин");
	ТЗМагазинов.Колонки.Добавить("Тип");
	ТЗМагазинов.Колонки.Добавить("Статус");
	ТЗМагазинов.Колонки.Добавить("Формат");
	Для каждого СтрМ Из ТЗМагазинов Цикл
		СтрМ.Тип = СтрМ.Магазин.ТипРозничнойТочки;
		СтрМ.Статус = СтрМ.Магазин.СтатусТорговойТочки;
		СтрМ.Формат = СтрМ.Магазин.ФорматРозничнойТочки;		
	КонецЦикла;	
	
	СтрукутраВозврата = Новый Структура("ТЗНоменклатуры, ТЗМагазинов",ТЗНоменклатуры, ТЗМагазинов);
	
	Возврат СтрукутраВозврата;
	
КонецФункции

&НаСервере
Функция ПолучитьРезултатРасшифровки(Расшифровка)
	
	КоллекцияРасшифровки = ПолучитьИзВременногоХранилища(ДанныеРасшифровки);
	
	ЗначенияРасшифровки = КоллекцияРасшифровки.Элементы[Расшифровка].ПолучитьПоля();
	
	Если ЗначенияРасшифровки.Количество() = 1 Тогда
		
		Возврат ЗначенияРасшифровки[0].Значение;
	ИначеЕсли ЗначенияРасшифровки.Количество() > 1 Тогда	
		Возврат Новый Структура("Номенклатура, Магазин",  ЗначенияРасшифровки[1].Значение, ЗначенияРасшифровки[0].Значение);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура РезультатОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	Перем ВыполненноеДействие;
	Перем ВыбранноеДействие;
	Перем ПараметрыВыбранногоДействия;
	
	
	СтандартнаяОбработка = Ложь;
	ОбработкаРасшифровки =  Новый ОбработкаРасшифровкиКомпоновкиДанных(ДанныеРасшифровки, Новый ИсточникДоступныхНастроекКомпоновкиДанных(Отчет));
	
	ДоступныеДействия = Новый Массив();	
	ДоступныеДействия.Добавить(ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение);
	
	ТекущееЗначение = ПолучитьРезултатРасшифровки(Расшифровка);
	
	ДополнительныеДействия = Новый СписокЗначений;
	//
	//Если ТипЗнч(ТекущееЗначение) = Тип("Структура") Тогда  		
	//	ДополнительныеДействия.Добавить("Ввести в ассортимент");
	//	ДополнительныеДействия.Добавить("Вывести из ассортимента");
	//	ДополнительныеДействия.Добавить("Запретить");
	//КонецЕсли;
	
	ОбработкаРасшифровки.ВыбратьДействие(Расшифровка, ВыбранноеДействие, ПараметрыВыбранногоДействия, ДоступныеДействия, ДополнительныеДействия);
	
	Если ВыбранноеДействие = ДействиеОбработкиРасшифровкиКомпоновкиДанных.ОткрытьЗначение Тогда			
		ОткрытьЗначение(ПараметрыВыбранногоДействия);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗакрыватьПриВыборе = Ложь;
КонецПроцедуры

&НаСервере
Функция ЗаполнитьХарактеристику(Номенклатура)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец = &Владелец
	|	И ХарактеристикиНоменклатуры.ПометкаУдаления = ЛОЖЬ
	|	И ХарактеристикиНоменклатуры.Неактивная = ЛОЖЬ";
	Запрос.УстановитьПараметр("Владелец", Номенклатура);
	ТЗ = Запрос.Выполнить().Выгрузить();
	Если ТЗ.Количество() = 1 Тогда
		Возврат Тз[0].Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

