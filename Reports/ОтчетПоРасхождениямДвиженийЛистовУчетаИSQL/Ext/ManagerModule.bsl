
Функция ПолучитьТаблицуРасхождений(ДатаНачала, ДатаОкончания, ЕстьОтборТТ, МассивТТ) Экспорт
	
	ТаблицаДанных = Новый ТаблицаЗначений();
	ТаблицаДанных.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	ТаблицаДанных.Колонки.Добавить("ТорговаяТочка", Новый ОписаниеТипов("СправочникСсылка.СтруктурныеЕдиницы"));
	ТаблицаДанных.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоЛисту_Поступление", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоСКЛ_ПоступлениеБезВозврата", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоЛисту_ПоступлениеБезВозврата", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоСКЛ_Поступление", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоЛисту_Продажа", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоСКЛ_Продажа", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоЛисту_Списание", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоСКЛ_Списание", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоЛисту_СписаниеПоКачеству", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоСКЛ_СписаниеПоКачеству", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоЛисту_Дегустация", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоСКЛ_Дегустация", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоЛисту_Акция", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоСКЛ_Акция", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоЛисту_Разница", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоСКЛ_Разница", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоЛисту_Бой", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоСКЛ_Бой", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоЛисту_ПолученоСДругойТТ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоСКЛ_ПолученоСДругойТТ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоЛисту_ОтправленоНаДругуюТТ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоСКЛ_ОтправленоНаДругуюТТ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоЛисту_ВозвратПокупателя", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоСКЛ_ВозвратПокупателя", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоЛисту_Комплектация", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	ТаблицаДанных.Колонки.Добавить("КоличествоПоСКЛ_Комплектация", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	
	
	
	ЗапросПоЛистам = Новый Запрос();
	ЗапросПоЛистам.УстановитьПараметр("НачПериода", Новый Граница(ДатаНачала, ВидГраницы.Включая));
	ЗапросПоЛистам.УстановитьПараметр("КонПериода", Новый Граница(КонецДня(ДатаОкончания), ВидГраницы.Включая));
	ЗапросПоЛистам.УстановитьПараметр("ЕстьОтборТТ", ЕстьОтборТТ);
	ЗапросПоЛистам.УстановитьПараметр("МассивТТ", МассивТТ);
	ЗапросПоЛистам.Текст = "ВЫБРАТЬ
	                       |	НАЧАЛОПЕРИОДА(ДвиженияТоваровПоЛистамУчетаОбороты.Период, ДЕНЬ) КАК Дата,
	                       |	ДвиженияТоваровПоЛистамУчетаОбороты.СтруктурнаяЕдиница КАК ТорговаяТочка,
	                       |	ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура,
	                       |	СУММА(ВЫБОР
	                       |			КОГДА ДвиженияТоваровПоЛистамУчетаОбороты.ВидДвиженияТовара = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.Поступление)
	                       |				ТОГДА ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот
	                       |			ИНАЧЕ 0
	                       |		КОНЕЦ) КАК КоличествоПоЛисту_Поступление,
	                       |	СУММА(ВЫБОР
	                       |			КОГДА ДвиженияТоваровПоЛистамУчетаОбороты.ВидДвиженияТовара = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.ПоступлениеБезВозвратаНаСклад)
	                       |				ТОГДА ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот
	                       |			ИНАЧЕ 0
	                       |		КОНЕЦ) КАК КоличествоПоЛисту_ПоступлениеБезВозврата,
	                       |	СУММА(ВЫБОР
	                       |			КОГДА ДвиженияТоваровПоЛистамУчетаОбороты.ВидДвиженияТовара = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.Продажа)
	                       |				ТОГДА ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот * -1
	                       |			ИНАЧЕ 0
	                       |		КОНЕЦ) КАК КоличествоПоЛисту_Продажа,
	                       |	СУММА(ВЫБОР
	                       |			КОГДА ДвиженияТоваровПоЛистамУчетаОбороты.ВидДвиженияТовара = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.Списание)
	                       |				ТОГДА ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот * -1
	                       |			ИНАЧЕ 0
	                       |		КОНЕЦ) КАК КоличествоПоЛисту_Списание,
	                       |	СУММА(ВЫБОР
	                       |			КОГДА ДвиженияТоваровПоЛистамУчетаОбороты.ВидДвиженияТовара = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.СписаниеПоКачеству)
	                       |				ТОГДА ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот * -1
	                       |			ИНАЧЕ 0
	                       |		КОНЕЦ) КАК КоличествоПоЛисту_СписаниеПоКачеству,
	                       |	СУММА(ВЫБОР
	                       |			КОГДА ДвиженияТоваровПоЛистамУчетаОбороты.ВидДвиженияТовара = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.Дегустация)
	                       |				ТОГДА ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот * -1
	                       |			ИНАЧЕ 0
	                       |		КОНЕЦ) КАК КоличествоПоЛисту_Дегустация,
	                       |	СУММА(ВЫБОР
	                       |			КОГДА ДвиженияТоваровПоЛистамУчетаОбороты.ВидДвиженияТовара = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.Акция)
	                       |				ТОГДА ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот * -1
	                       |			ИНАЧЕ 0
	                       |		КОНЕЦ) КАК КоличествоПоЛисту_Акция,
	                       |	СУММА(ВЫБОР
	                       |			КОГДА ДвиженияТоваровПоЛистамУчетаОбороты.ВидДвиженияТовара = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.Разница)
	                       |				ТОГДА ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот
	                       |			ИНАЧЕ 0
	                       |		КОНЕЦ) КАК КоличествоПоЛисту_Разница,
	                       |	СУММА(ВЫБОР
	                       |			КОГДА ДвиженияТоваровПоЛистамУчетаОбороты.ВидДвиженияТовара = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.Бой)
	                       |				ТОГДА ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот * -1
	                       |			ИНАЧЕ 0
	                       |		КОНЕЦ) КАК КоличествоПоЛисту_Бой,
	                       |	СУММА(ВЫБОР
	                       |			КОГДА ДвиженияТоваровПоЛистамУчетаОбороты.ВидДвиженияТовара = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.ПолученоСДругойТТ)
	                       |				ТОГДА ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот
	                       |			ИНАЧЕ 0
	                       |		КОНЕЦ) КАК КоличествоПоЛисту_ПолученоСДругойТТ,
	                       |	СУММА(ВЫБОР
	                       |			КОГДА ДвиженияТоваровПоЛистамУчетаОбороты.ВидДвиженияТовара = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.ОтправленоНаДругуюТТ)
	                       |				ТОГДА ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот * -1
	                       |			ИНАЧЕ 0
	                       |		КОНЕЦ) КАК КоличествоПоЛисту_ОтправленоНаДругуюТТ,
	                       |	СУММА(ВЫБОР
	                       |			КОГДА ДвиженияТоваровПоЛистамУчетаОбороты.ВидДвиженияТовара = ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.ВозвратОтПокупателя)
	                       |				ТОГДА ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот
	                       |			ИНАЧЕ 0
	                       |		КОНЕЦ) КАК КоличествоПоЛисту_ВозвратПокупателя,
	                       |	СУММА(ВЫБОР
	                       |			КОГДА ДвиженияТоваровПоЛистамУчетаОбороты.ВидДвиженияТовара В (ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.Комплектация),ЗНАЧЕНИЕ(Перечисление.ВидДвиженияТовараПоЛистуУчета.Производство))
	                       |				ТОГДА ДвиженияТоваровПоЛистамУчетаОбороты.КоличествоОборот
	                       |			ИНАЧЕ 0
	                       |		КОНЕЦ) КАК КоличествоПоЛисту_Комплектация
	                       |ИЗ
	                       |	РегистрНакопления.ДвиженияТоваровПоЛистамУчета.Обороты(
	                       |			&НачПериода,
	                       |			&КонПериода,
	                       |			День,
	                       |			&ЕстьОтборТТ = ЛОЖЬ
	                       |				ИЛИ СтруктурнаяЕдиница В (&МассивТТ)) КАК ДвиженияТоваровПоЛистамУчетаОбороты
	                       |
	                       |СГРУППИРОВАТЬ ПО
	                       |	НАЧАЛОПЕРИОДА(ДвиженияТоваровПоЛистамУчетаОбороты.Период, ДЕНЬ),
	                       |	ДвиженияТоваровПоЛистамУчетаОбороты.СтруктурнаяЕдиница,
	                       |	ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура";
						   
	ТабПоЛистам = ЗапросПоЛистам.Выполнить().Выгрузить();
	Для Каждого СтрокаПоЛисту Из ТабПоЛистам Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаДанных.Добавить(), СтрокаПоЛисту);
	КонецЦикла;	
	
	ЗапросТочки = Новый Запрос();
	ЗапросТочки.УстановитьПараметр("ЕстьОтборТТ", ЕстьОтборТТ);
	ЗапросТочки.УстановитьПараметр("МассивТТ", МассивТТ);
	ЗапросТочки.Текст = "ВЫБРАТЬ
	                    |	СтруктурныеЕдиницы.Ссылка
	                    |ИЗ
	                    |	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	                    |ГДЕ
	                    |	СтруктурныеЕдиницы.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Избенка)
	                    |	И СтруктурныеЕдиницы.id_TT > 0
	                    |	И (&ЕстьОтборТТ = ЛОЖЬ
	                    |			ИЛИ СтруктурныеЕдиницы.Ссылка В (&МассивТТ))
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	СтруктурныеЕдиницы.Ссылка
	                    |ИЗ
	                    |	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	                    |ГДЕ
	                    |	СтруктурныеЕдиницы.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	                    |	И СтруктурныеЕдиницы.id_TT > 0
	                    |	И (&ЕстьОтборТТ = ЛОЖЬ
	                    |			ИЛИ СтруктурныеЕдиницы.Ссылка В (&МассивТТ))
	                    |;
	                    |
	                    |////////////////////////////////////////////////////////////////////////////////
	                    |ВЫБРАТЬ
	                    |	Номенклатура.Ссылка
	                    |ИЗ
	                    |	Справочник.Номенклатура КАК Номенклатура
	                    |ГДЕ
	                    |	Номенклатура.СлужебныйТовар = ИСТИНА";
						
	Результаты = ЗапросТочки.ВыполнитьПакет();
	МассивИзбенка = Результаты[0].Выгрузить().ВыгрузитьКолонку("Ссылка");
	МассивВкусвилл = Результаты[1].Выгрузить().ВыгрузитьКолонку("Ссылка");
	ТабСлужебные = Результаты[2].Выгрузить();
	
	Если МассивИзбенка.Количество() > 0 Тогда
		ТабПоИзбенке = ВнешниеДанные.ПолучитьДвиженияТоваровПолная(ДатаНачала, ДатаОкончания, МассивИзбенка);
		Для Каждого СтрокаТаб Из ТабПоИзбенке Цикл
			СтрокаДоб = ТаблицаДанных.Добавить();
			СтрокаДоб.Дата = СтрокаТаб.День;
			СтрокаДоб.ТорговаяТочка = СтрокаТаб.ТТ;
			СтрокаДоб.Номенклатура = СтрокаТаб.Номенклатура;
			СтрокаДоб.КоличествоПоСКЛ_Поступление = СтрокаТаб.Поступило;
			СтрокаДоб.КоличествоПоСКЛ_ПоступлениеБезВозврата = СтрокаТаб.ПоступилоБезВозврата;
			СтрокаДоб.КоличествоПоСКЛ_Продажа = СтрокаТаб.Продано;
			СтрокаДоб.КоличествоПоСКЛ_Списание = СтрокаТаб.Списание;
			СтрокаДоб.КоличествоПоСКЛ_СписаниеПоКачеству = СтрокаТаб.СписаниеПоКачеству;
			СтрокаДоб.КоличествоПоСКЛ_Дегустация = СтрокаТаб.Дегустация;
			СтрокаДоб.КоличествоПоСКЛ_Акция = СтрокаТаб.Акция;
			СтрокаДоб.КоличествоПоСКЛ_Разница = СтрокаТаб.Разница;
			СтрокаДоб.КоличествоПоСКЛ_Бой = СтрокаТаб.Бой;
			СтрокаДоб.КоличествоПоСКЛ_ВозвратПокупателя = СтрокаТаб.ВозвратПокупателя;
			СтрокаДоб.КоличествоПоСКЛ_ПолученоСДругойТТ = СтрокаТаб.ПолученоСДругихТТ;
			СтрокаДоб.КоличествоПоСКЛ_ОтправленоНаДругуюТТ = СтрокаТаб.ОтправленоНаДругиеТТ;
			СтрокаДоб.КоличествоПоСКЛ_Комплектация = СтрокаТаб.Комплектация;
			Если СтрокаДоб.Дата < '20140401' Тогда
				СтрокаДоб.КоличествоПоСКЛ_Поступление = СтрокаДоб.КоличествоПоСКЛ_Поступление + СтрокаТаб.ПолученоСДругихТТ - СтрокаТаб.ОтправленоНаДругиеТТ;
				СтрокаДоб.КоличествоПоСКЛ_ПолученоСДругойТТ = 0;
				СтрокаДоб.КоличествоПоСКЛ_ОтправленоНаДругуюТТ = 0;
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;
	Если МассивВкусвилл.Количество() > 0 Тогда
		ДатаОбработки = ДатаНачала;
		Пока ДатаОбработки <= ДатаОкончания Цикл
			ТабПоВкусвиллу = ВнешниеДанные.ПолучитьДвиженияТоваровПолная(ДатаОбработки, ДатаОбработки, МассивВкусвилл);
			Для Каждого СтрокаТаб Из ТабПоВкусвиллу Цикл
				СтрокаДоб = ТаблицаДанных.Добавить();
				СтрокаДоб.Дата = ДатаОбработки;
				СтрокаДоб.ТорговаяТочка = СтрокаТаб.ТТ;
				СтрокаДоб.Номенклатура = СтрокаТаб.Номенклатура;
				СтрокаДоб.КоличествоПоСКЛ_Поступление = СтрокаТаб.Поступило;
				СтрокаДоб.КоличествоПоСКЛ_ПоступлениеБезВозврата = СтрокаТаб.ПоступилоБезВозврата;
				СтрокаДоб.КоличествоПоСКЛ_Продажа = СтрокаТаб.Продано;
				СтрокаДоб.КоличествоПоСКЛ_Списание = СтрокаТаб.Списание;
				СтрокаДоб.КоличествоПоСКЛ_СписаниеПоКачеству = СтрокаТаб.СписаниеПоКачеству;
				СтрокаДоб.КоличествоПоСКЛ_Дегустация = СтрокаТаб.Дегустация;
				СтрокаДоб.КоличествоПоСКЛ_Акция = СтрокаТаб.Акция;
				СтрокаДоб.КоличествоПоСКЛ_Разница = СтрокаТаб.Разница;
				СтрокаДоб.КоличествоПоСКЛ_Бой = СтрокаТаб.Бой;
				СтрокаДоб.КоличествоПоСКЛ_ВозвратПокупателя = СтрокаТаб.ВозвратПокупателя;
				СтрокаДоб.КоличествоПоСКЛ_ПолученоСДругойТТ = СтрокаТаб.ПолученоСДругихТТ;
				СтрокаДоб.КоличествоПоСКЛ_ОтправленоНаДругуюТТ = СтрокаТаб.ОтправленоНаДругиеТТ;
				СтрокаДоб.КоличествоПоСКЛ_Комплектация = СтрокаТаб.Комплектация;
				Если СтрокаДоб.Дата < '20140401' Тогда
					СтрокаДоб.КоличествоПоСКЛ_Поступление = СтрокаДоб.КоличествоПоСКЛ_Поступление + СтрокаТаб.ПолученоСДругихТТ - СтрокаТаб.ОтправленоНаДругиеТТ;
					СтрокаДоб.КоличествоПоСКЛ_ПолученоСДругойТТ = 0;
					СтрокаДоб.КоличествоПоСКЛ_ОтправленоНаДругуюТТ = 0;
				КонецЕсли;
			КонецЦикла;
			ДатаОбработки = ДатаОбработки + 86400;
		КонецЦикла;	
	КонецЕсли;	
	
	ТаблицаДанных.Свернуть("Дата, ТорговаяТочка, Номенклатура", "КоличествоПоЛисту_Поступление, КоличествоПоСКЛ_ПоступлениеБезВозврата, КоличествоПоЛисту_ПоступлениеБезВозврата
								|, КоличествоПоСКЛ_Поступление, КоличествоПоЛисту_Продажа, КоличествоПоСКЛ_Продажа
								|, КоличествоПоЛисту_Списание, КоличествоПоСКЛ_Списание, КоличествоПоЛисту_СписаниеПоКачеству, КоличествоПоСКЛ_СписаниеПоКачеству
								|, КоличествоПоЛисту_Дегустация, КоличествоПоСКЛ_Дегустация, КоличествоПоЛисту_Акция, КоличествоПоСКЛ_Акция
								|, КоличествоПоЛисту_Разница, КоличествоПоСКЛ_Разница, КоличествоПоЛисту_Бой, КоличествоПоСКЛ_Бой
								|, КоличествоПоЛисту_ПолученоСДругойТТ, КоличествоПоСКЛ_ПолученоСДругойТТ, КоличествоПоЛисту_ОтправленоНаДругуюТТ, КоличествоПоСКЛ_ОтправленоНаДругуюТТ
								|, КоличествоПоСКЛ_ВозвратПокупателя, КоличествоПоЛисту_ВозвратПокупателя, КоличествоПоСКЛ_Комплектация, КоличествоПоЛисту_Комплектация");
								
	КолвоСтрок = ТаблицаДанных.Количество();
	Для н = 1 По КолвоСтрок Цикл
		СтрокаТаб = ТаблицаДанных[КолвоСтрок - н];
		СтрокаТовар = ТабСлужебные.Найти(СтрокаТаб.Номенклатура, "Ссылка");
		Если СтрокаТовар <> Неопределено Тогда
			ТаблицаДанных.Удалить(КолвоСтрок - н);
			Продолжить;
		КонецЕсли;	
		Если СтрокаТаб.КоличествоПоЛисту_Поступление = СтрокаТаб.КоличествоПоСКЛ_Поступление
			И СтрокаТаб.КоличествоПоЛисту_ПоступлениеБезВозврата = СтрокаТаб.КоличествоПоСКЛ_ПоступлениеБезВозврата
			И СтрокаТаб.КоличествоПоЛисту_Продажа = СтрокаТаб.КоличествоПоСКЛ_Продажа
			И СтрокаТаб.КоличествоПоЛисту_Списание = СтрокаТаб.КоличествоПоСКЛ_Списание
			И СтрокаТаб.КоличествоПоЛисту_СписаниеПоКачеству = СтрокаТаб.КоличествоПоСКЛ_СписаниеПоКачеству
			И СтрокаТаб.КоличествоПоЛисту_Дегустация = СтрокаТаб.КоличествоПоСКЛ_Дегустация
			И СтрокаТаб.КоличествоПоЛисту_Акция = СтрокаТаб.КоличествоПоСКЛ_Акция
			И СтрокаТаб.КоличествоПоЛисту_Разница = СтрокаТаб.КоличествоПоСКЛ_Разница
			И СтрокаТаб.КоличествоПоЛисту_Бой = СтрокаТаб.КоличествоПоСКЛ_Бой
			И СтрокаТаб.КоличествоПоЛисту_ПолученоСДругойТТ = СтрокаТаб.КоличествоПоСКЛ_ПолученоСДругойТТ
			И СтрокаТаб.КоличествоПоЛисту_ОтправленоНаДругуюТТ = СтрокаТаб.КоличествоПоСКЛ_ОтправленоНаДругуюТТ
			И СтрокаТаб.КоличествоПоЛисту_ВозвратПокупателя = СтрокаТаб.КоличествоПоСКЛ_ВозвратПокупателя
			И СтрокаТаб.КоличествоПоЛисту_Комплектация = СтрокаТаб.КоличествоПоСКЛ_Комплектация Тогда
			ТаблицаДанных.Удалить(КолвоСтрок - н);
		КонецЕсли;	
	КонецЦикла;
	
	Возврат ТаблицаДанных;
	
КонецФункции	