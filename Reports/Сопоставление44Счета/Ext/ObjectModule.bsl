
Функция ВернутьСчетаПродажи()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Финансовый.Ссылка
	               |ИЗ
	               |	ПланСчетов.Финансовый КАК Финансовый
	               |ГДЕ
	               |	Финансовый.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.Продажи)
	               |	И Финансовый.Код <> ""90.5""";
	
	СписокСчетов = Новый СписокЗначений;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокСчетов.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат СписокСчетов;	
	
КонецФункции

Функция ПолучитьСоответствиеСтатейЗатрат()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СоответствиеСтатейДРСтатьямБУ.Статья,
	               |	ВЫБОР
	               |		КОГДА СоответствиеСтатейДРСтатьямБУ.Статья = &СтатьяПромо
	               |				ИЛИ СоответствиеСтатейДРСтатьямБУ.Статья = &СтатьяКомандировочные
	               |			ТОГДА &СтатьяСтраховые
	               |		ИНАЧЕ СоответствиеСтатейДРСтатьямБУ.СтатьяБУ
	               |	КОНЕЦ КАК СтатьяБУ,
	               |	СоответствиеСтатейДРСтатьямБУ.КорСчет
	               |ИЗ
	               |	РегистрСведений.СоответствиеСтатейДРСтатьямБУ КАК СоответствиеСтатейДРСтатьямБУ
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СоответствиеСтатейДРСтатьямБУ.Статья,
	               |	ВЫБОР
	               |		КОГДА СоответствиеСтатейДРСтатьямБУ.Статья = &СтатьяПромо
	               |				ИЛИ СоответствиеСтатейДРСтатьямБУ.Статья = &СтатьяКомандировочные
	               |			ТОГДА &СтатьяСтраховые
	               |		ИНАЧЕ СоответствиеСтатейДРСтатьямБУ.СтатьяБУ
	               |	КОНЕЦ,
	               |	СоответствиеСтатейДРСтатьямБУ.КорСчет";
	
	Запрос.УстановитьПараметр("СтатьяПромо", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("20610")); //Промо на точке (в магазине)
	Запрос.УстановитьПараметр("СтатьяКомандировочные", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("36198")); //Комадировочные расходы
	Запрос.УстановитьПараметр("СтатьяСтраховые", Справочники.СтатьиЗатратБУ.НайтиПоКоду("000000023")); //страховые взносы
	
	Возврат Запрос.Выполнить().Выгрузить();	
	
КонецФункции

Функция ПолучитьСтатьюЗатратБухИзСоответствия(СтатьяЗатратФин, ТаблицаСоответствия, КорСчет)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Статья", СтатьяЗатратФин);
	СтруктураПоиска.Вставить("КорСчет", КорСчет);
	
	НайдСтроки = ТаблицаСоответствия.НайтиСтроки(СтруктураПоиска);
	
	Если НайдСтроки.Количество() Тогда
		НайдСтр = НайдСтроки[0];
	Иначе
		СтруктураПоиска.Вставить("КорСчет", ПланыСчетов.Финансовый.ПустаяСсылка());
		
		НайдСтроки = ТаблицаСоответствия.НайтиСтроки(СтруктураПоиска);
		
		Если НайдСтроки.Количество() Тогда
			НайдСтр = НайдСтроки[0];
		Иначе
			НайдСтр = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ НайдСтр = Неопределено Тогда
		Возврат Строка(НайдСтр.СтатьяБУ);
	КонецЕсли;
	
	Возврат "";	
	
КонецФункции

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	СтрокаПодключения = ПолныеПрава.ПолучитьСтрокуПодключения_Бух();
	
	v82COMОбъект = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Бух() + ".COMConnector");
	Попытка
		v82 = v82COMОбъект.Connect(СтрокаПодключения);
		ПодключениеУстановлено=Истина;
	Исключение
		ПодключениеУстановлено=Ложь;
		Сообщить("Не удалось подключиться к базе бухгалтерии!");
		Возврат;
	КонецПопытки;
	
	Запрос=v82.NewObject("Запрос");
	
	ЗапросДанныеФинансов = Новый Запрос;
	
	КомпоновщикНастроек.ЗагрузитьНастройки(КомпоновщикНастроек.ПолучитьНастройки());
	
	СписокОрг = Новый СписокЗначений;
	ВыборкаОРг = Справочники.Организации.Выбрать();
	
	Пока ВыборкаОРг.Следующий() Цикл
		СписокОрг.Добавить(ВыборкаОРг.Ссылка);
	КонецЦикла;
	
	Для каждого Параметр из КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы Цикл		
		Если СокрЛП(Параметр.Параметр)="ПериодОтчета" Тогда
			Запрос.УстановитьПараметр("НачалоПериода",Параметр.Значение.ДатаНачала);
			Запрос.УстановитьПараметр("КонецПериода",КонецДня(Параметр.Значение.ДатаОкончания));
			
			ЗапросДанныеФинансов.УстановитьПараметр("НачалоПериода",Параметр.Значение.ДатаНачала);			
			Граница = Новый Граница(КонецДня(Параметр.Значение.ДатаОкончания),ВидГраницы.Включая);			
			ЗапросДанныеФинансов.УстановитьПараметр("КонецПериода",Граница);				
		ИначеЕсли СокрЛП(Параметр.Параметр) = "Организация" И Параметр.Использование Тогда
			СписокОрг = Параметр.Значение;			
		КонецЕсли;		
	КонецЦикла;
	
	ТаблицаФинансы.Очистить();
	ДанныеБух.Очистить();
	
	СоответствиеОрганизаций = Новый Соответствие;
	
	ЗапросОрг = Новый Запрос;
	ЗапросОрг.Текст = "ВЫБРАТЬ
	               |	Организации.Ссылка,
	               |	Организации.ИНН
	               |ИЗ
	               |	Справочник.Организации КАК Организации";
				   
	ВыборкаОрг = ЗапросОрг.Выполнить().Выбрать();
	
	Пока ВыборкаОрг.Следующий() Цикл
		СоответствиеОрганизаций.Вставить(ВыборкаОрг.ИНН, ВыборкаОрг.Ссылка);
	КонецЦикла;
	
	ЗапросДанныеФинансов.Текст = "ВЫБРАТЬ
	                             |	ВЫБОР
	                             |		КОГДА ФинансовыйОстаткиИОбороты.Счет.Код = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ЗатратыДляОтнесенияНаИнвестиции)
	                             |			ТОГДА ФинансовыйОстаткиИОбороты.Субконто1
	                             |		ИНАЧЕ ФинансовыйОстаткиИОбороты.Субконто2
	                             |	КОНЕЦ КАК СтатьяДРФин,
	                             |	0 КАК НачальныйОстатокДт,
	                             |	0 КАК НачальныйОстатокКт,
	                             |	0 КАК КонечныйОстатокДт,
	                             |	0 КАК КонечныйОстатокКт,
	                             |	ФинансовыйОстаткиИОбороты.Регистратор,
	                             |	ФинансовыйОстаткиИОбороты.СуммаОборотДт КАК ФинСуммаОборотДт,
	                             |	ФинансовыйОстаткиИОбороты.СуммаОборотКт КАК ФинСуммаОборотКт,
	                             |	ФинансовыйОстаткиИОбороты.Счет,
	                             |	ФинансовыйОстаткиИОбороты.Организация.ИНН,
	                             |	ФинансовыйОстаткиИОбороты.КорСчет
	                             |ПОМЕСТИТЬ Выборка
	                             |ИЗ
	                             //|	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, Авто, Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПЛАНСчетов.Финансовый.ЗатратыДляРаспределения)) ИЛИ Счет.Код = ""90.5"", , Организация В (&СписокОрг), НЕ КорСчет В ИЕРАРХИИ (&СписокИсключаемыхСчетов), ) КАК ФинансовыйОстаткиИОбороты
								 |	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, Авто, Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПЛАНСчетов.Финансовый.ЗатратыДляРаспределения)), , Организация В (&СписокОрг), НЕ КорСчет В ИЕРАРХИИ (&СписокИсключаемыхСчетов), ) КАК ФинансовыйОстаткиИОбороты
	                             |
	                             |ОБЪЕДИНИТЬ ВСЕ
	                             |
	                             |ВЫБРАТЬ
	                             |	ФинансовыйОстаткиИОбороты.Субконто3,
	                             |	0,
	                             |	0,
	                             |	0,
	                             |	0,
	                             |	ФинансовыйОстаткиИОбороты.Регистратор,
	                             |	ФинансовыйОстаткиИОбороты.СуммаОборотДт,
	                             |	ФинансовыйОстаткиИОбороты.СуммаОборотКт,
	                             |	ФинансовыйОстаткиИОбороты.Счет,
	                             |	ФинансовыйОстаткиИОбороты.Организация.ИНН,
	                             |	ФинансовыйОстаткиИОбороты.КорСчет
	                             |ИЗ
	                             |	РегистрБухгалтерии.Финансовый.Обороты(
	                             |			&НачалоПериода,
	                             |			&КонецПериода,
	                             |			Авто,
	                             |			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПЛАНСчетов.Финансовый.Товары)),
	                             |			,
	                             |			Субконто3 = &СтатьяДоставкаТоваровНаСклад
	                             |				И Организация В (&СписокОрг),
	                             |			,
	                             |			) КАК ФинансовыйОстаткиИОбороты
	                             |;
	                             |
	                             |////////////////////////////////////////////////////////////////////////////////
	                             |ВЫБРАТЬ
	                             |	Выборка.СтатьяДРФин,
	                             |	Выборка.Регистратор,
	                             |	СУММА(Выборка.НачальныйОстатокДт) КАК НачальныйОстатокДт,
	                             |	СУММА(Выборка.НачальныйОстатокКт) КАК НачальныйОстатокКт,
	                             |	СУММА(Выборка.ФинСуммаОборотДт) КАК СуммаОборотДт,
	                             |	СУММА(Выборка.ФинСуммаОборотКт) КАК СуммаОборотКт,
	                             |	СУММА(Выборка.КонечныйОстатокДт) КАК КонечныйОстатокДт,
	                             |	СУММА(Выборка.КонечныйОстатокКт) КАК КонечныйОстатокКт,
	                             |	Выборка.Счет,
	                             |	Выборка.ОрганизацияИНН,
	                             |	Выборка.КорСчет
	                             |ПОМЕСТИТЬ СводнаяДанныеФин
	                             |ИЗ
	                             |	Выборка КАК Выборка
	                             |
	                             |СГРУППИРОВАТЬ ПО
	                             |	Выборка.СтатьяДРФин,
	                             |	Выборка.Регистратор,
	                             |	Выборка.Счет,
	                             |	Выборка.ОрганизацияИНН,
	                             |	Выборка.КорСчет
	                             |;
	                             |
	                             |////////////////////////////////////////////////////////////////////////////////
	                             |УНИЧТОЖИТЬ Выборка
	                             |;
	                             |
	                             |////////////////////////////////////////////////////////////////////////////////
	                             |ВЫБРАТЬ
	                             |	СоответствиеСтатейДРСтатьямБУ.Статья,
	                             |	СоответствиеСтатейДРСтатьямБУ.СтатьяБУ,
	                             |	СоответствиеСтатейДРСтатьямБУ.Счет,
	                             |	СоответствиеСтатейДРСтатьямБУ.Основное,
	                             |	СоответствиеСтатейДРСтатьямБУ.КорСчет
	                             |ПОМЕСТИТЬ ВремСоответствиеСтатейДРСтатьямБУ
	                             |ИЗ
	                             |	РегистрСведений.СоответствиеСтатейДРСтатьямБУ КАК СоответствиеСтатейДРСтатьямБУ
	                             |
	                             |СГРУППИРОВАТЬ ПО
	                             |	СоответствиеСтатейДРСтатьямБУ.Статья,
	                             |	СоответствиеСтатейДРСтатьямБУ.СтатьяБУ,
	                             |	СоответствиеСтатейДРСтатьямБУ.Счет,
	                             |	СоответствиеСтатейДРСтатьямБУ.Основное,
	                             |	СоответствиеСтатейДРСтатьямБУ.КорСчет
	                             |;
	                             |
	                             |////////////////////////////////////////////////////////////////////////////////
	                             |ВЫБРАТЬ
	                             |	СоответствиеСтатейДРСтатьямБУ.Статья,
	                             |	СоответствиеСтатейДРСтатьямБУ.СтатьяБУ,
	                             |	СоответствиеСтатейДРСтатьямБУ.Счет,
	                             |	СоответствиеСтатейДРСтатьямБУ.Основное
	                             |ПОМЕСТИТЬ ВремСоответствиеСтатейДРСтатьямБУБезКорСчета
	                             |ИЗ
	                             |	РегистрСведений.СоответствиеСтатейДРСтатьямБУ КАК СоответствиеСтатейДРСтатьямБУ
	                             |ГДЕ
	                             |	СоответствиеСтатейДРСтатьямБУ.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ПустаяСсылка)
	                             |
	                             |СГРУППИРОВАТЬ ПО
	                             |	СоответствиеСтатейДРСтатьямБУ.Статья,
	                             |	СоответствиеСтатейДРСтатьямБУ.СтатьяБУ,
	                             |	СоответствиеСтатейДРСтатьямБУ.Счет,
	                             |	СоответствиеСтатейДРСтатьямБУ.Основное
	                             |;
	                             |
	                             |////////////////////////////////////////////////////////////////////////////////
	                             |ВЫБРАТЬ
	                             |	ВремСоответствиеСтатейДРСтатьямБУ.Статья,
	                             |	МАКСИМУМ(ВремСоответствиеСтатейДРСтатьямБУ.СтатьяБУ) КАК СтатьяБУ
	                             |ПОМЕСТИТЬ СтатьиФинИзСоответствияСмаксимумомПоСтатье
	                             |ИЗ
	                             |	ВремСоответствиеСтатейДРСтатьямБУБезКорСчета КАК ВремСоответствиеСтатейДРСтатьямБУ
	                             |
	                             |СГРУППИРОВАТЬ ПО
	                             |	ВремСоответствиеСтатейДРСтатьямБУ.Статья
	                             |;
	                             |
	                             |////////////////////////////////////////////////////////////////////////////////
	                             |ВЫБРАТЬ
	                             |	ВремСоответствиеСтатейДРСтатьямБУ.Статья,
	                             |	ВремСоответствиеСтатейДРСтатьямБУ.СтатьяБУ КАК СтатьяБУ,
	                             |	ВремСоответствиеСтатейДРСтатьямБУ.Счет КАК Счет,
	                             |	ВремСоответствиеСтатейДРСтатьямБУ.КорСчет КАК КорСчет
	                             |ПОМЕСТИТЬ СтатьиФинИзСоответствияСКорСчетом
	                             |ИЗ
	                             |	ВремСоответствиеСтатейДРСтатьямБУ КАК ВремСоответствиеСтатейДРСтатьямБУ
	                             |ГДЕ
	                             |	ВремСоответствиеСтатейДРСтатьямБУ.КорСчет <> ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ПустаяСсылка)
	                             |
	                             |СГРУППИРОВАТЬ ПО
	                             |	ВремСоответствиеСтатейДРСтатьямБУ.КорСчет,
	                             |	ВремСоответствиеСтатейДРСтатьямБУ.Статья,
	                             |	ВремСоответствиеСтатейДРСтатьямБУ.Счет,
	                             |	ВремСоответствиеСтатейДРСтатьямБУ.СтатьяБУ
	                             |;
	                             |
	                             |////////////////////////////////////////////////////////////////////////////////
	                             |ВЫБРАТЬ
	                             |	СтатьиФинИзСоответствияСмаксимумомПоСтатье.Статья,
	                             |	СтатьиФинИзСоответствияСмаксимумомПоСтатье.СтатьяБУ
	                             |ПОМЕСТИТЬ СоответствиеСтатейФинБух
	                             |ИЗ
	                             |	СтатьиФинИзСоответствияСмаксимумомПоСтатье КАК СтатьиФинИзСоответствияСмаксимумомПоСтатье
	                             |;
	                             |
	                             |////////////////////////////////////////////////////////////////////////////////
	                             |ВЫБРАТЬ
	                             |	СводнаяДанныеФин.Счет,
	                             |	СводнаяДанныеФин.СтатьяДРФин,
	                             |	ВЫБОР
	                             |		КОГДА СводнаяДанныеФин.СтатьяДРФин = &СтатьяДоставкаТоваровНаСклад
	                             |			ТОГДА &СтатьяБУТранспортныеРасходы
	                             |		КОГДА СводнаяДанныеФин.Счет = &Счет445
	                             |				И СводнаяДанныеФин.СтатьяДРФин <> &СтатьяВыбытиеОС
	                             |			ТОГДА &СтатьяБУАмортизация
	                             |		ИНАЧЕ ЕСТЬNULL(СтатьиФинИзСоответствияСКорСчетом.СтатьяБУ, ЕСТЬNULL(ВремСоответствиеСтатейДРСтатьямБУ.СтатьяБУ, ЕСТЬNULL(СоответствиеСтатейДРСтатьямБУ.СтатьяБУ, ЗНАЧЕНИЕ(Справочник.СтатьиЗатратБУ.ПустаяСсылка))))
	                             |	КОНЕЦ КАК СтатьяБУ,
	                             |	СводнаяДанныеФин.Регистратор,
	                             |	СводнаяДанныеФин.НачальныйОстатокДт,
	                             |	СводнаяДанныеФин.НачальныйОстатокКт,
	                             |	СводнаяДанныеФин.СуммаОборотДт,
	                             |	СводнаяДанныеФин.СуммаОборотКт,
	                             |	СводнаяДанныеФин.КонечныйОстатокДт,
	                             |	СводнаяДанныеФин.КонечныйОстатокКт,
	                             |	СводнаяДанныеФин.ОрганизацияИНН,
	                             |	СводнаяДанныеФин.КорСчет
	                             |ПОМЕСТИТЬ Итоговая
	                             |ИЗ
	                             |	СводнаяДанныеФин КАК СводнаяДанныеФин
	                             |		ЛЕВОЕ СОЕДИНЕНИЕ СоответствиеСтатейФинБух КАК СоответствиеСтатейДРСтатьямБУ
	                             |		ПО СводнаяДанныеФин.СтатьяДРФин = СоответствиеСтатейДРСтатьямБУ.Статья
	                             |		ЛЕВОЕ СОЕДИНЕНИЕ ВремСоответствиеСтатейДРСтатьямБУБезКорСчета КАК ВремСоответствиеСтатейДРСтатьямБУ
	                             |		ПО СводнаяДанныеФин.СтатьяДРФин = ВремСоответствиеСтатейДРСтатьямБУ.Статья
	                             |			И СводнаяДанныеФин.Счет = ВремСоответствиеСтатейДРСтатьямБУ.Счет
	                             |		ЛЕВОЕ СОЕДИНЕНИЕ СтатьиФинИзСоответствияСКорСчетом КАК СтатьиФинИзСоответствияСКорСчетом
	                             |		ПО СводнаяДанныеФин.СтатьяДРФин = СтатьиФинИзСоответствияСКорСчетом.Статья
	                             |			И СводнаяДанныеФин.Счет = СтатьиФинИзСоответствияСКорСчетом.Счет
	                             |			И СводнаяДанныеФин.КорСчет = СтатьиФинИзСоответствияСКорСчетом.КорСчет
	                             |;
	                             |
	                             |////////////////////////////////////////////////////////////////////////////////
	                             |УНИЧТОЖИТЬ СводнаяДанныеФин
	                             |;
	                             |
	                             |////////////////////////////////////////////////////////////////////////////////
	                             |ВЫБРАТЬ
	                             |	Итоговая.СтатьяДРФин КАК СтатьяЗатратФин,
	                             |	Итоговая.СтатьяБУ КАК СтатьяЗатрат,
	                             |	Итоговая.Регистратор,
	                             |	СУММА(Итоговая.НачальныйОстатокДт) КАК ФинНачальныйОстатокДт,
	                             |	СУММА(Итоговая.НачальныйОстатокКт) КАК ФинНачальныйОстатокКт,
	                             |	СУММА(Итоговая.СуммаОборотДт) КАК ФинСуммаОборотДт,
	                             |	СУММА(Итоговая.СуммаОборотКт) КАК ФинСуммаОборотКт,
	                             |	СУММА(Итоговая.КонечныйОстатокДт) КАК ФинКонечныйОстатокДт,
	                             |	СУММА(Итоговая.КонечныйОстатокКт) КАК ФинКонечныйОстатокКт,
	                             |	Итоговая.Счет КАК СчетФин,
	                             |	Итоговая.ОрганизацияИНН,
	                             |	Итоговая.КорСчет КАК КорСчетФин
	                             |ИЗ
	                             |	Итоговая КАК Итоговая
	                             |
	                             |СГРУППИРОВАТЬ ПО
	                             |	Итоговая.СтатьяДРФин,
	                             |	Итоговая.СтатьяБУ,
	                             |	Итоговая.Регистратор,
	                             |	Итоговая.Счет,
	                             |	Итоговая.ОрганизацияИНН,
	                             |	Итоговая.КорСчет";
								 
	ЗапросДанныеФинансов.УстановитьПараметр("СтатьяДоставкаТоваровНаСклад", Справочники.СтатьиТовародвижения.НайтиПоКоду("00000023"));
	ЗапросДанныеФинансов.УстановитьПараметр("СтатьяБУТранспортныеРасходы", Справочники.СтатьиЗатратБУ.НайтиПоКоду("000000024"));
	ЗапросДанныеФинансов.УстановитьПараметр("Счет445", ПланыСчетов.Финансовый.НайтиПоКоду("44.5"));
	ЗапросДанныеФинансов.УстановитьПараметр("СтатьяВыбытиеОС", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("61014"));
	ЗапросДанныеФинансов.УстановитьПараметр("СтатьяБУАмортизация", Справочники.СтатьиЗатратБУ.НайтиПоКоду("000000004"));
	ЗапросДанныеФинансов.УстановитьПараметр("СписокОрг", СписокОрг);
	
	СписокИсключаемыхСчетов = Новый СписокЗначений;
	СписокИсключаемыхСчетов.Добавить(ПланыСчетов.Финансовый.НайтиПоКоду("02.10"));
	СписокИсключаемыхСчетов.Добавить(ПланыСчетов.Финансовый.НайтиПоКоду("02.5"));	
	Список90 = ВернутьСчетаПродажи();	
	//СписокИсключаемыхСчетов.Добавить(ПланыСчетов.Финансовый.Продажи); //90-е
	СписокИсключаемыхСчетов.Добавить(Список90); //90-е
	
	ЗапросДанныеФинансов.УстановитьПараметр("СписокИсключаемыхСчетов", СписокИсключаемыхСчетов);
								 	
	ТаблицаФинансы.Загрузить(ЗапросДанныеФинансов.Выполнить().Выгрузить());
			
	ТекстЗапроса="ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Счет.Код КАК СчетБух,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОбороты.Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
		|		ИНАЧЕ ВЫБОР КОГДА ХозрасчетныйОбороты.КорСчет.Код = ""02.01"" ТОГДА &СтатьяЗатратАмортизация ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОбороты.Субконто1, ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)) КОНЕЦ
		|	КОНЕЦ КАК СтатьяЗатратСсылка,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОбороты.Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД)
		|			ТОГДА ВЫБОР КОГДА ХозрасчетныйОбороты.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладах) ТОГДА ""Себестоимость"" ИНАЧЕ """" КОНЕЦ
		|		ИНАЧЕ ВЫБОР КОГДА ХозрасчетныйОбороты.КорСчет.Код = ""02.01"" ТОГДА ""Амортизация"" ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОбороты.Субконто1.Наименование, """") КОНЕЦ
		|	КОНЕЦ КАК СтатьяЗатрат,
		|	СУММА(0) КАК БухНачальныйОстатокДт,
		|	СУММА(0) КАК БухНачальныйОстатокКт,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотДт) КАК БухСуммаОборотДт,
		|	СУММА(ХозрасчетныйОбороты.СуммаОборотКт) КАК БухСуммаОборотКт,
		|	СУММА(0) КАК БухКонечныйОстатокДт,
		|	СУММА(0) КАК БухКонечныйОстатокКт,
		|	ХозрасчетныйОбороты.Организация.ИНН КАК ОрганизацияИНН,
		|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.Регистратор) КАК РегистраторБух,
		|	ХозрасчетныйОбороты.Регистратор КАК РегистраторСсылка,
		|	ХозрасчетныйОбороты.КорСчет
		|ПОМЕСТИТЬ Сводная
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			Регистратор,
		|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаПродажу))
		|				ИЛИ Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПрочиеРасходы)
		|				ИЛИ Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД),
		|			,
		|			Организация В (&СписокОрг),
		|			НЕ КорСчет В ИЕРАРХИИ (&СписокИсключаемыхСчетов),
		|			) КАК ХозрасчетныйОбороты

		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйОбороты.Счет.Код,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОбороты.Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД)
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
		|		ИНАЧЕ ВЫБОР КОГДА ХозрасчетныйОбороты.КорСчет.Код = ""02.01"" ТОГДА &СтатьяЗатратАмортизация ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОбороты.Субконто1, ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)) КОНЕЦ
		|	КОНЕЦ ,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОбороты.Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД)
		|			ТОГДА ВЫБОР КОГДА ХозрасчетныйОбороты.КорСчет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладах) ТОГДА ""Себестоимость"" ИНАЧЕ """" КОНЕЦ
		|		ИНАЧЕ ВЫБОР КОГДА ХозрасчетныйОбороты.КорСчет.Код = ""02.01"" ТОГДА ""Амортизация"" ИНАЧЕ ЕСТЬNULL(ХозрасчетныйОбороты.Субконто1.Наименование, """") КОНЕЦ
		|	КОНЕЦ,
		|	ХозрасчетныйОбороты.Организация.ИНН,
		|	ХозрасчетныйОбороты.КорСчет,
		|	ПРЕДСТАВЛЕНИЕ(ХозрасчетныйОбороты.Регистратор), ХозрасчетныйОбороты.Регистратор
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Сводная.СчетБух,
		|	Сводная.СтатьяЗатратСсылка,
		|	Сводная.СтатьяЗатрат,
		|	СУММА(Сводная.БухНачальныйОстатокДт) КАК БухНачальныйОстатокДт,
		|	СУММА(Сводная.БухНачальныйОстатокКт) КАК БухНачальныйОстатокКт,
		|	СУММА(Сводная.БухСуммаОборотДт) КАК БухСуммаОборотДт,
		|	СУММА(Сводная.БухСуммаОборотКт) КАК БухСуммаОборотКт,
		|	СУММА(Сводная.БухКонечныйОстатокДт) КАК БухКонечныйОстатокДт,
		|	СУММА(Сводная.БухКонечныйОстатокКт) КАК БухКонечныйОстатокКт,
		|	Сводная.ОрганизацияИНН,
		|	Сводная.РегистраторБух,
		|	Сводная.РегистраторСсылка,
		|	ПРЕДСТАВЛЕНИЕ(Сводная.КорСчет) КАК КорСчетБух
		|ИЗ
		|	Сводная КАК Сводная

		|СГРУППИРОВАТЬ ПО
		|	Сводная.СчетБух,
		|	Сводная.СтатьяЗатратСсылка,
		|	Сводная.СтатьяЗатрат,
		|	Сводная.ОрганизацияИНН,
		|	Сводная.РегистраторБух,
		|	Сводная.РегистраторСсылка,
		|	ПРЕДСТАВЛЕНИЕ(Сводная.КорСчет)";
	
	Запрос.Текст=ТекстЗапроса;
	
	МассивИсключаемыхСчетов = v82.NewObject("Массив");
	//МассивИсключаемыхСчетов.Добавить(v82.ПланыСчетов.Хозрасчетный.АмортизацияНематериальныхАктивов);
	МассивИсключаемыхСчетов.Добавить(v82.ПланыСчетов.Хозрасчетный.Продажи);
	
	Запрос.УстановитьПараметр("СписокИсключаемыхСчетов", МассивИсключаемыхСчетов);	
	Запрос.УстановитьПараметр("СтатьяЗатратАмортизация", v82.Справочники.СтатьиЗатрат.НайтиПоКоду("000000004"));
	
	ЗапросОргБух = v82.NewObject("Запрос");
	ЗапросОргБух.Текст = "ВЫБРАТЬ
	                     |	Организации.Ссылка,
	                     |	Организации.ИНН
	                     |ИЗ
	                     |	Справочник.Организации КАК Организации
	                     |ГДЕ
	                     |	Организации.ИНН В(&СписокИНН)";
			
	СписокОРгБух = v82.NewObject("СписокЗначений");
	СписокИННДЛяБП = v82.NewObject("СписокЗначений");
	
	Для Каждого ЭлСписка Из СписокОРг Цикл
		СписокИННДЛяБП.Добавить(СокрЛП(ЭлСписка.Значение.ИНН));
	КонецЦикла;
	
	ЗапросОргБух.УстановитьПараметр("СписокИНН", СписокИННДляБП);
	
	ВыборкаОРгБух = ЗапросОРгБух.Выполнить().Выбрать();
	
	Пока ВыборкаОргБух.Следующий() Цикл
		СписокОРгБух.Добавить(ВыборкаОргБух.Ссылка);		
	КонецЦикла;
	
	Запрос.УстановитьПараметр("СписокОрг", СписокОРгБух);
	
	Выборка=Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		НС=ДанныеБух.Добавить();
		ЗаполнитьЗначенияСвойств(НС, Выборка);		
		
		НС.ГУИД = v82.XMLСтрока(Выборка.СтатьяЗатратСсылка);		
		Нс.ГуидРег = ?(Выборка.РегистраторСсылка = v82.Документы.ПоступлениеТоваровУслуг.ПустаяСсылка(), "", v82.XMLСтрока(Выборка.РегистраторСсылка));	
		
		НС.СтатьяЗатрат = СокрЛП(НС.СтатьяЗатрат);		
		
		НС.СчетБух = ПланыСчетов.Хозрасчетный.НайтиПоКоду(Выборка.СчетБух);

	КонецЦикла;
	
	СводнаяТаблица = Новый ТаблицаЗначений;	
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.СтатьиДоходовРасходов"));
	МассивТипов.Добавить(Тип("СправочникСсылка.СтатьиТовародвижения"));
	ТипыСЗ = Новый ОписаниеТипов(МассивТипов);
	
	СводнаяТаблица.Колонки.Добавить("СтатьяЗатратФин", ТипыСЗ);
	СводнаяТаблица.Колонки.Добавить("СтатьяЗатратБухПоДаннымФин");
	СводнаяТаблица.Колонки.Добавить("СопоставимыеНесопоставимыеРасходы");
	СводнаяТаблица.Колонки.Добавить("СтатьяЗатрат");
	СводнаяТаблица.Колонки.Добавить("СчетФин");
	СводнаяТаблица.Колонки.Добавить("КорСчетФин");
	СводнаяТаблица.Колонки.Добавить("Регистратор");
	СводнаяТаблица.Колонки.Добавить("РегистраторБух");
	СводнаяТаблица.Колонки.Добавить("БухНачальныйОстатокДт");
	СводнаяТаблица.Колонки.Добавить("БухНачальныйОстатокКт");
	СводнаяТаблица.Колонки.Добавить("БухСуммаОборотДт");	
	СводнаяТаблица.Колонки.Добавить("БухСуммаОборотКт");	
	СводнаяТаблица.Колонки.Добавить("БухКонечныйОстатокДт");	
	СводнаяТаблица.Колонки.Добавить("БухКонечныйОстатокКт");
	СводнаяТаблица.Колонки.Добавить("СчетБух");
	СводнаяТаблица.Колонки.Добавить("КорСчетБух");
	СводнаяТаблица.Колонки.Добавить("Организация");
	//
	СводнаяТаблица.Колонки.Добавить("ФинНачальныйОстатокДт");
	СводнаяТаблица.Колонки.Добавить("ФинНачальныйОстатокКт");
	СводнаяТаблица.Колонки.Добавить("ФинСуммаОборотДт");	
	СводнаяТаблица.Колонки.Добавить("ФинСуммаОборотКт");	
	СводнаяТаблица.Колонки.Добавить("ФинКонечныйОстатокДт");	
	СводнаяТаблица.Колонки.Добавить("ФинКонечныйОстатокКт");
	
	ТЗСоот = Новый ТаблицаЗначений;
	ТзСоот.Колонки.Добавить("СтатьяЗатрат");
	ТзСоот.Колонки.Добавить("ОрганизацияИНН");
	ТзСоот.Колонки.Добавить("ГуидРег");
	ТЗСоот.Колонки.Добавить("НайдСтр");
	
	ТзСоот900201 = Новый ТаблицаЗначений;
	ТзСоот900201.Колонки.Добавить("НайдСтр");
	ТзСоот900201.Колонки.Добавить("ОрганизацияИНН");
	ТзСоот900201.Колонки.Добавить("ГуидРег");
	
	СтатСебест = Справочники.СтатьиДоходовРасходов.ПолучитьСсылку(Новый УникальныйИдентификатор("afe53011-e939-11e0-b470-001517297ae2")); //Себестоимость проданного товара
	СтатВП = Справочники.СтатьиДоходовРасходов.ПолучитьСсылку(Новый УникальныйИдентификатор("299da103-ac75-11e4-b92d-005056a00106")); //Себестоимость возвратов от покупателей
	
	
	Для Каждого Стр Из ТаблицаФинансы Цикл		
		
		Попытка
			Стр.ГуидРег = ?(Стр.Регистратор.Ссылка.Пустая(), "", Строка(Стр.Регистратор.УникальныйИдентификатор()));			
		Исключение
			//Сообщить(Стр.Регистратор);
			Стр.ГуидРег = "";
		КонецПопытки;
		
		НовСтр = СводнаяТаблица.Добавить();
		НовСтр.БухНачальныйОстатокДт = 0;
		НовСтр.БухНачальныйОстатокКт = 0;
		НовСтр.БухСуммаОборотДТ = 0;
		НовСтр.БухСуммаОборотКт = 0;
		НовСтр.БухКонечныйОстатокДт = 0;
		НовСтр.БухКонечныйОстатокКт = 0;		
		
		НовСтр.Организация = СоответствиеОрганизаций.Получить(Стр.ОрганизацияИНН);
			
		ЗаполнитьЗначенияСвойств(НовСтр, Стр);
			
		НовСтр.СтатьяЗатратБухПоДаннымФин = Стр.СтатьяЗатрат;
			
		НовСтр.СтатьяЗатрат = "";
		НайдСтр = Неопределено;
		
		// Статьи:
		// себестоимость проданного товара; себестоимость возвратов от покупателей
		Если Стр.СтатьяЗатратФин = СтатСебест
			ИЛИ Стр.СтатьяЗатратФин = СтатВП Тогда
			
			НовСтр.СтатьяЗатратБухПоДаннымФин = Справочники.СтатьиЗатратБУ.ПустаяСсылка();			
			
			//поиск статьи из бух		
			//НайдСтрСоответствие = ТзСоот900201.Найти(Стр.ОрганизацияИНН, "ОрганизацияИНН");
			
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("ОрганизацияИНН", Стр.ОрганизацияИНН);
			СтруктураПоиска.Вставить("ГуидРег", Стр.ГуидРег);
			
			НайдСтрокиСоответствие = ТзСоот900201.НайтиСтроки(СтруктураПоиска);
			
			Если НайдСтрокиСоответствие.Количество() Тогда
				НайдСтрСоответствие = НайдСтрокиСоответствие[0];
			Иначе
				НайдСтрСоответствие = Неопределено;
			КонецЕсли;
			
			Если НайдСтрСоответствие = Неопределено Тогда
				
				СтруктураПоиска = Новый Структура;
				СтруктураПоиска.Вставить("СчетБух", ПланыСчетов.Хозрасчетный.СебестоимостьПродажНеЕНВД); //90.02.1
				СтруктураПоиска.Вставить("ОрганизацияИНН", Стр.ОрганизацияИНН);
				СтруктураПоиска.Вставить("ГуидРег", Стр.ГуидРег);
				
				НайдСтроки = ДанныеБух.НайтиСтроки(СтруктураПоиска);
				
				Если НайдСтроки.Количество() <> 0 Тогда
					
					НайдСтр = НайдСтроки[0];
										
				Иначе
					
					НайдСтр = Неопределено;
					
				КонецЕсли;				
				
				Если НЕ НайдСтр = Неопределено Тогда
					НовСтрСоот = ТзСоот900201.Добавить();
					НовСтрСоот.ОрганизацияИНН = Стр.ОрганизацияИНН;
					НовСтрСоот.ГуидРег = Стр.ГуидРег;
					НовСтрСоот.НайдСтр = НайдСтр;					
				КонецЕсли;
				
				ПолученоИзТаблицы = Ложь;
				
			Иначе
				
				НайдСтр = НайдСтрСоответствие.НайдСтр;				
				ПолученоИзТаблицы = Истина;				
				
			КонецЕсли;		
			
			Если НайдСтр <> Неопределено Тогда
				
				ЗаполнитьЗначенияСвойств(НовСтр, НайдСтр);
				НайдСтр.Обработан = Истина;
				
				Если ПолученоИзТаблицы Тогда
					НовСтр.БухНачальныйОстатокДт = 0;
					НовСтр.БухНачальныйОстатокКт = 0;
					НовСтр.БухСуммаОборотДт = 0;
					НовСтр.БухСуммаОборотКт = 0;
					НовСтр.БухКонечныйОстатокДт = 0;
					НовСтр.БухКонечныйОстатокДт = 0;
					НовСтр.СчетБух = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
				КонецЕсли;	
				
			КонецЕсли;			

		Иначе		
			
			НайдСтрСоответствие = Неопределено;
			
			//поиск статьи из бух		
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("СтатьяЗатрат", Стр.СтатьяЗатрат);
			СтруктураПоиска.Вставить("ОрганизацияИНН", Стр.ОрганизацияИНН);
			СтруктураПоиска.Вставить("ГуидРег", Стр.ГуидРег);
			
			НайдСтрокиСоответствие = ТзСоот.НайтиСтроки(СтруктураПоиска);
			
			Если НайдСтрокиСоответствие.Количество() Тогда			
				НайдСтрСоответствие = НайдСтрокиСоответствие[0];				
			КонецЕсли;
			
			Если НайдСтрСоответствие = Неопределено Тогда
			
				Если ЗначениеЗаполнено(Стр.СтатьяЗатрат) Тогда
					
					НайдСтр = Неопределено;
					
					СтруктураПоиска = Новый Структура;
					СтруктураПоиска.Вставить("ОрганизацияИНН", Стр.ОрганизацияИНН);
					СтруктураПоиска.Вставить("ГУИД", Строка(Стр.СтатьяЗатрат.УникальныйИдентификатор()));
					СтруктураПоиска.Вставить("ГуидРег", Стр.ГуидРег);
					
					НайдСтроки = ДанныеБух.НайтиСтроки(СтруктураПоиска);
					
					Если НАйдСтроки.Количество() Тогда					
						НайдСтр = НайдСтроки[0];						
					КонецЕсли;
			
					// гуид
					Если НайдСтр = Неопределено Тогда
						
						СтруктураПоиска.Удалить("ГУИД");
						СтруктураПоиска.Вставить("СтатьяЗатрат", СокрЛП(Стр.СтатьяЗатрат));
						
						НайдСтроки = ДанныеБух.НайтиСтроки(СтруктураПоиска);
						
						Если НайдСтроки.Количество() Тогда
							НайдСтр = НайдСтроки[0];							
						КонецЕсли;						
						
					КонецЕсли;
				
				Иначе
					
					СтруктураПоиска = Новый Структура;
					СтруктураПоиска.Вставить("СтатьяЗатрат", "");
					СтруктураПоиска.Вставить("ОрганизацияИНН", Стр.ОрганизацияИНН);
					СтруктураПоиска.Вставить("ГуидРег", Стр.ГуидРег);
					
					НайдСтроки = ДанныеБух.НайтиСтроки(СтруктураПоиска);
					
					Для Каждого НСтр Из НайдСтроки Цикл
						Если НСтр.СчетБух <> ПланыСчетов.Хозрасчетный.НайтиПоКоду("90.02.1") Тогда
							НайдСтр = НСтр;							
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
				КонецЕсли;
				
				Если НЕ НайдСтр = Неопределено Тогда
					НовСтрСоот = ТЗСоот.Добавить();
					НовСтрСоот.СтатьяЗатрат = Стр.СтатьяЗатрат;
					НовСтрСоот.НайдСтр = НайдСтр;
					НовСтрСоот.ОрганизацияИНН = Стр.ОрганизацияИНН;
					НовСтрСоот.ГуидРег = Стр.ГуидРег;					
				КонецЕсли;
				
				ПолученоИзТаблицы = Ложь;
				
			Иначе
				
				НайдСтр = НайдСтрСоответствие.НайдСтр;
				ПолученоИзТаблицы = Истина;				
				
			КонецЕсли;		
			
			Если НайдСтр <> Неопределено Тогда
				
				ЗаполнитьЗначенияСвойств(НовСтр, НайдСтр);
				НайдСтр.Обработан = Истина;
					
				Если ПолученоИзТаблицы Тогда
					НовСтр.БухНачальныйОстатокДт = 0;
					НовСтр.БухНачальныйОстатокКт = 0;
					НовСтр.БухСуммаОборотДт = 0;
					НовСтр.БухСуммаОборотКт = 0;
					НовСтр.БухКонечныйОстатокДт = 0;
					НовСтр.БухКонечныйОстатокДт = 0;
					НовСтр.СчетБух = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
					НовСтр.РегистраторБух = "";
				КонецЕсли;	
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Стр Из ДанныеБух Цикл
		
		Если НЕ Стр.Обработан Тогда
			НовСтр = СводнаяТаблица.Добавить();
			ЗаполнитьЗначениясвойств(НовСтр, Стр);
			//
			НовСтр.СчетФин = ПланыСчетов.Финансовый.ПустаяСсылка();
			НовСтр.СтатьяЗатратФин = Справочники.СтатьиДоходовРасходов.ПустаяСсылка();
			НовСтр.ФинНачальныйОстатокДт = 0;
			НовСтр.ФинНачальныйОстатокКт = 0;
			НовСтр.ФинСуммаОборотДт = 0;
			НовСтр.ФинСуммаОборотКт = 0;
			НовСтр.ФинКонечныйОстатокДт = 0;
			НовСтр.ФинКонечныйОстатокКт = 0;
			
			НовСтр.Организация = СоответствиеОрганизаций.Получить(Стр.ОрганизацияИНН);
			
		КонецЕсли;
	КонецЦикла;
	
	СоответствиеСтатьейЗатрат = ПолучитьСоответствиеСтатейЗатрат();
	
	ДЛя Каждого Стр Из СводнаяТаблица Цикл
		Если ЗначениеЗаполнено(Стр.СтатьяЗатратФин) И ЗначениеЗаполнено(Стр.СчетБух) Тогда
			
			НайдСтроки = СводнаяТаблица.НайтиСтроки(Новый Структура("СтатьяЗатратФин", Стр.СтатьяЗатратФин));
		
			Для Каждого НСтр Из НайдСтроки Цикл
				Если НЕ ЗначениеЗаполнено(НСтр.СчетБух) Тогда
					НСтр.СчетБух = Стр.СчетБух;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если Стр.СчетФин = ПланыСчетов.Финансовый.ЗатратыТоварныеДляРаспределения Тогда
			Если Стр.СтатьяЗатратФин = СтатСебест // Себестоимость Возвратов от покупателей
				ИЛИ Стр.СтатьяЗатратФин = СтатВП Тогда //Себестоимость проданного товара
				Стр.СтатьяЗатрат = "Себестоимость";
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Стр.СтатьяЗатрат) Тогда
			Стр.СтатьяЗатрат = ПолучитьСтатьюЗатратБухИзСоответствия(Стр.СтатьяЗатратФин, СоответствиеСтатьейЗатрат, Стр.КорСчетФин);
		ИначеЕсли Стр.СтатьяЗатратФин.Код = "20610" ИЛИ Стр.СтатьяЗатратФин.Код = "36198"  Тогда //Промо на точке (в магазине), Командировочные расходы
			Стр.СтатьяЗатрат = ПолучитьСтатьюЗатратБухИзСоответствия(Стр.СтатьяЗатратФин, СоответствиеСтатьейЗатрат, Стр.КорСчетФин);
		КонецЕсли;
						
		Если Стр.СтатьяЗатрат = "Амортизация" И ?(Стр.СчетФин <> Неопределено И ТипЗнч(Стр.СчетФин) = Тип("ПланСчетовСсылка.Финансовый") И Стр.СчетФин <> ПланыСчетов.Финансовый.ПустаяСсылка(), Стр.СчетФин.ПринадлежитЭлементу(ПланыСчетов.Финансовый.ЗатратыДляРаспределения), Ложь) И ?(Стр.КорСчетФин <> Неопределено И ТипЗнч(Стр.КорСчетФин) = Тип("ПланСчетовСсылка.Финансовый") И Стр.КорСчетФин <> ПланыСчетов.Финансовый.ПустаяСсылка(), Стр.КорСчетФин.ПринадлежитЭлементу(ПланыСчетов.Финансовый.Материалы), Ложь) Тогда
			Стр.СтатьяЗатрат = "Материальные расходы";
		КонецЕсли;
		
	КонецЦикла;		
		
	Для Каждого Стр Из СводнаяТаблица Цикл
		Если Стр.КорСчетБух = "05" Тогда
			Стр.СопоставимыеНесопоставимыеРасходы = "2. Не сопоставимые";
		ИначеЕсли Стр.СтатьяЗатрат = "Оплата труда" И Стр.КорСчетФин = ПланыСчетов.Финансовый.ЗаймыФизЛиц Тогда //58.1
			Стр.СопоставимыеНесопоставимыеРасходы = "2. Не сопоставимые";
		ИначеЕсли Стр.СтатьяЗатрат = "Амортизация" И ?(Стр.СчетФин <> Неопределено И ТипЗнч(Стр.СчетФин) = Тип("ПланСчетовСсылка.Финансовый") И Стр.СчетФин <> ПланыСчетов.Финансовый.ПустаяСсылка(), Стр.СчетФин.ПринадлежитЭлементу(ПланыСчетов.Финансовый.ЗатратыДляРаспределения), Ложь) И ?(Стр.КорСчетФин <> Неопределено И ТипЗнч(Стр.КорСчетФин) = Тип("ПланСчетовСсылка.Финансовый") И Стр.КорСчетФин <> ПланыСчетов.Финансовый.ПустаяСсылка(), НЕ Стр.КорСчетФин.ПринадлежитЭлементу(ПланыСчетов.Финансовый.НайтиПоКоду("02")), Ложь) Тогда			
			Стр.СопоставимыеНесопоставимыеРасходы = "2. Не сопоставимые";
		ИначеЕсли Стр.СтатьяЗатрат = "Амортизационная премия" И ?(Стр.СчетФин <> Неопределено И ТипЗнч(Стр.СчетФин) = Тип("ПланСчетовСсылка.Финансовый") И Стр.СчетФин <> ПланыСчетов.Финансовый.ПустаяСсылка(), Стр.СчетФин.ПринадлежитЭлементу(ПланыСчетов.Финансовый.ЗатратыДляРаспределения), Ложь) И ?(Стр.КорСчетФин <> Неопределено И ТипЗнч(Стр.КорСчетФин) = Тип("ПланСчетовСсылка.Финансовый") И Стр.КорСчетФин <> ПланыСчетов.Финансовый.ПустаяСсылка(), Стр.КорСчетФин.Код = "60.ВГ", Ложь) Тогда
			Стр.СопоставимыеНесопоставимыеРасходы = "2. Не сопоставимые";
		Иначе
			Стр.СопоставимыеНесопоставимыеРасходы = "1. Сопоставимые";
		КонецЕсли;		
	КонецЦикла;
			
	//Из схемы возьмем настройки по умолчанию
	Настройки = КомпоновщикНастроек.Настройки;

	//Помещаем в переменную данные о расшифровке данных
	ДанныеРасшифровки = Новый ДанныеРасшифровкиКомпоновкиДанных;

	//Формируем макет, с помощью компоновщика макета
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;

	//Передаем в макет компоновки схему, настройки и данные расшифровки
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,
											Настройки, ДанныеРасшифровки);

	ВнешниеНаборыДанных=Новый Структура;

	ВнешниеНаборыДанных.Вставить("СводнаяТаблица",СводнаяТаблица);										
											
	//Выполним компоновку с помощью процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,
													   ДанныеРасшифровки);

	//Очищаем поле табличного документа

	//Выводим результат в табличный документ
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);

	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);

КонецПроцедуры

