
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	//Возврат;
	
	СтандартнаяОбработка = Ложь;
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	Период = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период")).Значение;
	ДатаНачала = Период.ДатаНачала; ДатаОкончания = Период.ДатаОкончания;
	Если НЕ ЗначениеЗаполнено(ДатаНачала) ИЛИ НЕ ЗначениеЗаполнено(ДатаОкончания) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрКД = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВремяС"));
	ВремяС = ?(ПараметрКД.Использование, ПараметрКД.Значение, Неопределено);
	
	ПараметрКД = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВремяПо"));
	ВремяПо = ?(ПараметрКД.Использование, ПараметрКД.Значение, Неопределено);
	
	СписокНомеров = Новый СписокЗначений;
	СтруктураНомеров = Новый Структура("НомераГорячейЛинии", "Горячая линия");
	Для Каждого КлючИЗначение Из СтруктураНомеров Цикл
		
		ПараметрКД = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных(КлючИЗначение.Ключ));
		Если НЕ ПараметрКД.Использование ИЛИ НЕ ЗначениеЗаполнено(ПараметрКД.Значение) Тогда Продолжить; КонецЕсли;
		
		МассивНомеров = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ПараметрКД.Значение, ",");
		Для Каждого Номер Из МассивНомеров Цикл
			НомерТелефона = АК_ТелефонияСервер.ОчиститьНомерТелефона(Номер);
			Если СписокНомеров.НайтиПоЗначению(НомерТелефона) = Неопределено Тогда
				СписокНомеров.Добавить(НомерТелефона, КлючИЗначение.Значение);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Если СписокНомеров.Количество() = 0 Тогда Возврат; КонецЕсли;
	
	ТЗнЗвонков = ЗаполнитьТЗнЗвонков(ДатаНачала, ДатаОкончания, СписокНомеров, ВремяС, ВремяПо);
	ТЗнЗвонков.Сортировать("Дата");	
	//АК БЕЛН 08.03.2017+
	ТЗнЗвонковИсх = ЗаполнитьТЗнЗвонков(ДатаНачала, ДатаОкончания+24*60*60, СписокНомеров,Неопределено,Неопределено,Истина);
    Кол=ТЗнЗвонков.Количество();
	Для Сч=0 По Кол-1 Цикл
		ТекСтр=ТЗнЗвонков[Сч];
		Если ТекСтр.КвоПропущенныхЗвонков>0 Тогда
			Фл=Истина;
			Для каждого Стр Из ТЗнЗвонков Цикл
				Если Стр.Дата>ТекСтр.Дата И ТекСтр.Исходящий=Стр.Исходящий И Стр.ВидНедозвона="ANSWERED"  Тогда
					ТекСтр.КвоПропущенныхЗвонков=0;
					Прервать;
				КонецЕсли; 
				//Если Стр.Дата>ТекСтр.Дата И ТекСтр.Исходящий=Стр.Исходящий И Стр.ВидНедозвона<>"ANSWERED"  Тогда
				//	ФЛ=Ложь;
				//КонецЕсли;
			КонецЦикла;
			Если ТекСтр.КвоПропущенныхЗвонков>0 Тогда
				Для каждого Стр Из ТЗнЗвонковИсх Цикл
					Если Стр.Дата>ТекСтр.Дата И ТекСтр.Исходящий=Стр.НомерТелефона И Стр.ВидНедозвона="ANSWERED"  Тогда
						ТекСтр.КвоПропущенныхЗвонков=0;
						//Если Не Фл Тогда
						//	ТекСтр.КвоПринятыхЗвонков=0;
						//Иначе	
						//	ТекСтр.КвоПринятыхЗвонков=1;
						//КонецЕсли; 
						Прервать;
					КонецЕсли; 
				КонецЦикла;
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла; 
	
	
	
	ТаблицаДанных=ПоместитьВоВременноеХранилище(Новый ХранилищеЗначения(ТЗнЗвонков),Новый УникальныйИдентификатор);
	
	//АК БЕЛН 08.03.2017-
	
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	// Сформируем структуру внешних данных
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТЗнЗвонков", ТЗнЗвонков); //ТаблицаЗвонков.Выгрузить());
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки, ДанныеРасшифровки);
	
	// Инициализируем процессор СКД
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки, Истина);
	
	// Инициализируем процессор вывода
	ДокументРезультат.Очистить();
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	//АК БЕЛН 08.03.2017+
	ДанРасшифровки=ПоместитьВоВременноеХранилище(ДанныеРасшифровки,Новый УникальныйИдентификатор);
	СхКомпоновки=ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных,Новый УникальныйИдентификатор);
	//АК БЕЛН 08.03.2017-
КонецПроцедуры

Функция ЗаполнитьТЗнЗвонков(ДатаНачала, ДатаОкончания, СписокНомеров, ВремяС, ВремяПо,Фл=Ложь) Экспорт
	
	ТЗнЗвонков = Новый ТаблицаЗначений;
	ТЗнЗвонков.Колонки.Добавить("Дата");
	ТЗнЗвонков.Колонки.Добавить("ПериодДень");
	ТЗнЗвонков.Колонки.Добавить("ПериодЧас");
	ТЗнЗвонков.Колонки.Добавить("КатегорияТелефона");
	ТЗнЗвонков.Колонки.Добавить("НомерТелефона");
	ТЗнЗвонков.Колонки.Добавить("ИсходящийПредставление");
	ТЗнЗвонков.Колонки.Добавить("Исходящий");
	ТЗнЗвонков.Колонки.Добавить("ВидНедозвона");
	ТЗнЗвонков.Колонки.Добавить("КвоПринятыхЗвонков");
	ТЗнЗвонков.Колонки.Добавить("КвоПропущенныхЗвонков");
	ТЗнЗвонков.Колонки.Добавить("Неотвеченный");
	ТЗнЗвонков.Колонки.Добавить("СтатусЗвонка");
	ТЗнЗвонков.Колонки.Добавить("ВремяОжидания");
	
	ОтборНомераТелефона = "";
	Для Каждого НомерТелефона Из СписокНомеров Цикл
		ОтборНомераТелефона = ОтборНомераТелефона + НомерТелефона.Значение + ",";
	КонецЦикла;
	Если СтрДлина(ОтборНомераТелефона) > 0 Тогда ОтборНомераТелефона = Лев(ОтборНомераТелефона, СтрДлина(ОтборНомераТелефона) - 1); КонецЕсли;
	
	Если Фл Тогда
		ТЗн = ПрочитатьЛогAsteriskИсх(ДатаНачала, ДатаОкончания+120*60, ОтборНомераТелефона);
	Иначе	
		ТЗн = ПрочитатьЛогAsterisk(ДатаНачала, ДатаОкончания, ОтборНомераТелефона,, ВремяС, ВремяПо);
	КонецЕсли; 
	
	//ТЗнИсх = ПрочитатьЛогAsteriskИсх1(ДатаНачала, ДатаОкончания, ОтборНомераТелефона,, , );
	//МассивПолейДляПоиска = Новый Массив;
	//МассивПолейДляПоиска.Добавить("src");
	//МассивПолейДляПоиска.Добавить("did");
	
	Для Каждого СтрокаТЗн Из ТЗн Цикл
		
		//Для Каждого ПолеДляПоиска Из МассивПолейДляПоиска Цикл
			//НомерТелефона = СокрЛП(СтрокаТЗн[ПолеДляПоиска]);
			
			//ЭлементСписка = СписокНомеров.НайтиПоЗначению(НомерТелефона);
			ЭлементСписка = СписокНомеров.Получить(0);
			Если ЭлементСписка = Неопределено Тогда Продолжить; КонецЕсли;
			
			НоваяСтрокаТЗнЗвонков = ТЗнЗвонков.Добавить();
			НоваяСтрокаТЗнЗвонков.Дата = СтрокаТЗн.calldate;
			НоваяСтрокаТЗнЗвонков.ПериодДень = НачалоДня(СтрокаТЗн.calldate);
			НоваяСтрокаТЗнЗвонков.ПериодЧас = НачалоЧаса(СтрокаТЗн.calldate);
			НоваяСтрокаТЗнЗвонков.КатегорияТелефона = ЭлементСписка.Представление;
			НоваяСтрокаТЗнЗвонков.НомерТелефона = СокрЛП(СтрокаТЗн.dst);
			НоваяСтрокаТЗнЗвонков.ИсходящийПредставление = СтрокаТЗн.ИсходящийПредставление;
			НоваяСтрокаТЗнЗвонков.Исходящий = СокрЛП(СтрокаТЗн.src);

			НоваяСтрокаТЗнЗвонков.ВидНедозвона = СтрокаТЗн.disposition;
			НоваяСтрокаТЗнЗвонков.Неотвеченный = (СтрокаТЗн.NotAnswered = 1);
			НоваяСтрокаТЗнЗвонков.КвоПринятыхЗвонков = ?(НоваяСтрокаТЗнЗвонков.ВидНедозвона = "ANSWERED", 1, 0);
			НоваяСтрокаТЗнЗвонков.КвоПропущенныхЗвонков = СтрокаТЗн.NotAnswered; //1 - НоваяСтрокаТЗнЗвонков.КвоПринятыхЗвонков;
			НоваяСтрокаТЗнЗвонков.СтатусЗвонка = ?(НоваяСтрокаТЗнЗвонков.Неотвеченный, "Недозвонившиеся", "Дозвонившиеся с " + (СтрокаТЗн.CallsQty + 1) + "-й попытки");
			НоваяСтрокаТЗнЗвонков.ВремяОжидания = СтрокаТЗн.WaitDuration;
		//КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТЗнЗвонков;
	
КонецФункции

Функция ПолучитьУсловиеМежду(Поле, НачальноеЗначение, КонечноеЗначение)
	Если Не ЗначениеЗаполнено(Поле) Тогда
		ВызватьИсключение "Поле для условия не указано";
	КонецЕсли;
	Возврат Поле + " BETWEEN " + ВнешниеДанные.ФорматПоля(НачальноеЗначение) + " AND " + ВнешниеДанные.ФорматПоля(КонечноеЗначение);
КонецФункции

Функция ПрочитатьЛогAsterisk(НачалоПериода = Неопределено, КонецПериода = Неопределено, ОтборНомераТелефона = Неопределено, ТолькоНеотвеченые = Ложь, ВремяС = Неопределено, ВремяПо = Неопределено)
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("10.0.0.40");
	
	ТекстЗапросаSQL =
		"IF OBJECT_ID('tempdb..#CallsHistory') IS NOT NULL DROP Table #CallsHistory
		|
		|IF OBJECT_ID('tempdb..#LastCalls') IS NOT NULL DROP Table #LastCalls
		|
		|SELECT
		|	CAST(calldate AS datetime) AS calldate,
		|	CAST(calldate AS date) AS callday,
		|	CASE WHEN LEN(src) < 10 THEN src ELSE '8' + RIGHT(src, 10) END AS src,
		|	CASE WHEN disposition = 'ANSWERED' THEN dst ELSE '84956638602' END AS dst,
		|	disposition,
		|	SUM(CASE WHEN disposition = 'ANSWERED' THEN 0 ELSE duration END) AS WaitDuration
		|INTO #CallsHistory
		|FROM OPENROWSET('MSDASQL','DSN=ASTERISK', 'SELECT * FROM asteriskcdrdb.cdr%УсловиеПериод%')
		|
		|-%WHERE%-
		|
		|GROUP BY
		|	calldate, CAST(calldate AS date), src, CASE WHEN disposition = 'ANSWERED' THEN dst ELSE '84956638602' END, disposition
		|
		|
		|CREATE INDEX index_calldate
		|ON #CallsHistory(calldate)
		|
		|CREATE INDEX index_callday
		|ON #CallsHistory(callday)
		|
		|CREATE INDEX index_src
		|ON #CallsHistory(src)
		|
		|SELECT
		|	calldate,
		|	CallsHistory.callday,
		|	CallsHistory.src,
		|	dst,
		|	1 AS CallsQty,
		|	disposition,
		|	WaitDuration,
		|	CASE WHEN AnsweredCalls.NotAnswered IS NOT NULL AND calldate <= AnsweredCalls.LastCall THEN 0
		|		ELSE CASE WHEN calldate = NotAnsweredCalls.LastCall THEN 1
		|		ELSE 0 END
		|	END AS NotAnswered
		|	
		|FROM
		|	#CallsHistory AS CallsHistory
		|
		|	LEFT JOIN
		|		(SELECT
		|			callday,
		|			src, 
		|			MIN(0) AS NotAnswered,
		|			MAX(calldate) AS LastCall
		|		FROM #CallsHistory
		|		WHERE disposition = 'ANSWERED'
		|		GROUP BY callday, src
		|		) AS AnsweredCalls
		|	ON CallsHistory.callday = AnsweredCalls.callday AND CallsHistory.src = AnsweredCalls.src
		|
		|	LEFT JOIN
		|		(SELECT
		|			callday,
		|			src, 
		|			MIN(1) AS NotAnswered,
		|			MAX(calldate) AS LastCall
		|		FROM #CallsHistory
		|		WHERE disposition != 'ANSWERED'
		|		GROUP BY callday, src
		|		) AS NotAnsweredCalls
		|	ON CallsHistory.callday = NotAnsweredCalls.callday AND CallsHistory.src = NotAnsweredCalls.src
		|";
	
	УсловиеПериод = "";
	//Отбор по датам
	Если ЗначениеЗаполнено(НачалоПериода) И ЗначениеЗаполнено(КонецПериода) Тогда
		УсловиеПериод = ПолучитьУсловиеМежду("calldate", НачалоПериода, КонецПериода);
	ИначеЕсли ЗначениеЗаполнено(НачалоПериода) Тогда
		УсловиеПериод = "calldate >= " + ВнешниеДанные.ФорматПоля(НачалоПериода, Истина);
	ИначеЕсли ЗначениеЗаполнено(КонецПериода) Тогда
		УсловиеПериод = "calldate <= " + ВнешниеДанные.ФорматПоля(КонецПериода, Истина); 
	КонецЕсли;
	УсловиеПериод = ?(ЗначениеЗаполнено(УсловиеПериод), УсловиеПериод + " AND ", "") + "(dst LIKE '23__' OR dst LIKE '24__')";
	ТекстЗапросаSQL = СтрЗаменить(ТекстЗапросаSQL, "%УсловиеПериод%", ?(ПустаяСтрока(УсловиеПериод), "", " WHERE " + СтрЗаменить(УсловиеПериод, "'", "''")));
	ТекстЗапросаSQL = СтрЗаменить(ТекстЗапросаSQL, "84956638602", ОтборНомераТелефона);
	
	//отбор по номеру
	Условие = "";
	Если 1 = 0 И ЗначениеЗаполнено(ОтборНомераТелефона) Тогда
		//+++АК SHEP 20160512: отбор по списку телефонов
		Если Найти(ОтборНомераТелефона, ",") > 0 Тогда
			ОтборНомераТелефонаSQL = "'" + СтрЗаменить(ОтборНомераТелефона, ",", "','") + "'";
			Условие = ?(ЗначениеЗаполнено(Условие), Условие + " AND ", "") +
				//"(CASE WHEN LEN(src) < 10 THEN src ELSE '8' + RIGHT(src, 10) END IN (" + ОтборНомераТелефонаSQL + ")
				//|	OR CASE WHEN LEN(did) < 10 THEN did ELSE '8' + RIGHT(did, 10) END IN(" + ОтборНомераТелефонаSQL + "))";
				"CASE WHEN LEN(did) < 10 THEN did ELSE '8' + RIGHT(did, 10) END IN(" + ОтборНомераТелефонаSQL + ")";
		Иначе
			Условие = ?(ЗначениеЗаполнено(Условие), Условие + " AND ", "") +
				//"(CASE WHEN LEN(src) < 10 THEN src ELSE '8' + RIGHT(src, 10) END LIKE '" + ОтборНомераТелефона + "' 
				//|	OR CASE WHEN LEN(did) < 10 THEN did ELSE '8' + RIGHT(did, 10) END LIKE '" + ОтборНомераТелефона + "')";
				"CASE WHEN LEN(did) < 10 THEN did ELSE '8' + RIGHT(did, 10) END LIKE '" + ОтборНомераТелефона + "'";
		КонецЕсли;
	КонецЕсли;
	//
	////отбор по неотвеченным
	//Если ТолькоНеотвеченые = Истина Тогда
	//	Условие = ?(ЗначениеЗаполнено(Условие), Условие + " AND ", "") + "ISNULL(HistoryPhoneBookSrc.LastState,'ANSWERED') <> 'ANSWERED'";
	//КонецЕсли;
	
	//Отбор по времени
	Если ВремяС <> Неопределено ИЛИ ВремяПо <> Неопределено Тогда
		Условие = ?(ЗначениеЗаполнено(Условие), Условие + " AND ", "") +
			"DATEPART(HOUR, calldate) BETWEEN '" + ?(ЗначениеЗаполнено(ВремяС), ВремяС, 0) + "' AND '" + ?(ЗначениеЗаполнено(ВремяПо), ВремяПо - 1, 23) + "'";
	КонецЕсли;
	
	Условие = ?(ЗначениеЗаполнено(Условие), "WHERE ", "") + Условие;
	rs = ADOСоединение.Execute(СтрЗаменить(ТекстЗапросаSQL, "-%WHERE%-", Условие));
	
	ТаблицаНомеровИОбъектов = АК_ТелефонияСервер.ПолучитьТелефоныИОбъекты();
	
	ТабКешПродажи = Новый ТаблицаЗначений();
	ТабКешПродажи.Колонки.Добавить("Картинка");
	ТабКешПродажи.Колонки.Добавить("ВходящийПредставление");
	ТабКешПродажи.Колонки.Добавить("ВходящийОбъект");
	ТабКешПродажи.Колонки.Добавить("ИсходящийПредставление");
	ТабКешПродажи.Колонки.Добавить("ИсходящийОбъект");
	
	Попытка
		Пока НЕ rs = Неопределено Цикл
			Если rs.Fields.Count > 0 Тогда
				Для Каждого Field Из rs.Fields Цикл
					МассивТипов = Новый Массив;
					Если Field.Value = Null Тогда
						ТипValue = Тип("Строка");
					Иначе
						ТипValue = ТипЗнч(Field.Value);
					КонецЕсли;
					МассивТипов.Добавить(ТипValue);
					ТабКешПродажи.Колонки.Добавить(Field.Name, Новый ОписаниеТипов(МассивТипов));
				КонецЦикла;
				Прервать;
			КонецЕсли;
			rs = rs.NextRecordSet();
		КонецЦикла;
		
		Пока НЕ rs.EOF() Цикл
			СтруктураСтроки = Новый Структура();
			Для Каждого Field Из rs.Fields Цикл
				СтруктураСтроки.Вставить(Field.Name,Field.Value);
			КонецЦикла;
			
			//СтруктураСтроки.src = ОчиститьНомерТелефона(СтруктураСтроки.src);
			//СтруктураСтроки.dst = ОчиститьНомерТелефона(СтруктураСтроки.dst);
			
			//Если Не ЗначениеЗаполнено(СтруктураСтроки.src)
			//	Или Не ЗначениеЗаполнено(СтруктураСтроки.did) Тогда
			//	rs.MoveNext();
			//	Продолжить;
			//КонецЕсли;
			
			СтрокаДоб = ТабКешПродажи.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаДоб,СтруктураСтроки);
			
			//СтрокаДоб.Картинка = ?(СтрДлина(СтрокаДоб.src)>5,0, ?(СтрДлина(СтрокаДоб.dst)>5,1,0));
			
			//Если ЗначениеЗаполнено(СтрокаДоб.CustomerUIDsrc) Тогда
			//	СтрокаДоб.ВходящийОбъект = СтрокаДоб.CustomerUIDsrc;
			//	СтрокаДоб.ВходящийПредставление = СтрокаДоб.FullNamesrc + " (" + СтрокаДоб.src + ")";
			//Иначе
				СтрокаТелефон = ТаблицаНомеровИОбъектов.Найти(СтрокаДоб.src, "НомерТелефона");
				Если СтрокаТелефон <> Неопределено Тогда
					СтрокаДоб.ИсходящийОбъект = СтрокаТелефон.ОбъектТелефона;
					СтрокаДоб.ИсходящийПредставление = Строка(СтрокаТелефон.ОбъектТелефона) + " (" + СтрокаДоб.src + ")";
				Иначе
					СтрокаДоб.ИсходящийОбъект = "";
					СтрокаДоб.ИсходящийПредставление = СтрокаДоб.src;
				КонецЕсли;
			//КонецЕсли;			
			
			//Если ЗначениеЗаполнено(СтрокаДоб.CustomerUIDdst) Тогда
			//	СтрокаДоб.ИсходящийОбъект = СтрокаДоб.CustomerUIDdst;
			//	СтрокаДоб.ИсходящийПредставление = СтрокаДоб.FullNamedst + " (" + СтрокаДоб.dst + ")";
			//Иначе
				//СтрокаТелефон = ТаблицаНомеровИОбъектов.Найти(СтрокаДоб.did, "НомерТелефона");
				//Если СтрокаТелефон <> Неопределено Тогда
				//	СтрокаДоб.ВходящийОбъект = СтрокаТелефон.ОбъектТелефона;
				//	СтрокаДоб.ВходящийПредставление = Строка(СтрокаТелефон.ОбъектТелефона) + " (" + СтрокаДоб.did + ")";
				//Иначе
				//	СтрокаДоб.ВходящийОбъект = "";
				//	СтрокаДоб.ВходящийПредставление = СтрокаДоб.did;
				//КонецЕсли;			
			//КонецЕсли;			
			rs.MoveNext();
		КонецЦикла;
	Исключение
		ТекстОшибки = ОписаниеОшибки();
		Сообщить(ТекстОшибки);
	КонецПопытки;

	ADOСоединение.Close();
	
	Если ТабКешПродажи.Колонки.Найти("calldate") <> Неопределено Тогда
		ТабКешПродажи.Сортировать("calldate Убыв");
	КонецЕсли;
	
	Возврат ТабКешПродажи;
	
КонецФункции



Функция ПрочитатьЛогAsteriskИсх(НачалоПериода = Неопределено, КонецПериода = Неопределено, ОтборНомераТелефона = Неопределено, ТолькоНеотвеченые = Ложь, ВремяС = Неопределено, ВремяПо = Неопределено)
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("10.0.0.40");
	
	ТекстЗапросаSQL =
		"IF OBJECT_ID('tempdb..#CallsHistory') IS NOT NULL DROP Table #CallsHistory
		|
		|IF OBJECT_ID('tempdb..#LastCalls') IS NOT NULL DROP Table #LastCalls
		|
		|SELECT
		|	CAST(calldate AS datetime) AS calldate,
		|	CAST(calldate AS date) AS callday,
		|	CASE WHEN LEN(dst) < 10 THEN dst ELSE '8' + RIGHT(dst, 10) END AS dst,
		|	CASE WHEN disposition = 'ANSWERED' THEN src ELSE '84956638602' END AS src,
		|	disposition,
		|	SUM(CASE WHEN disposition = 'ANSWERED' THEN 0 ELSE duration END) AS WaitDuration
		|INTO #CallsHistory
		|FROM OPENROWSET('MSDASQL','DSN=ASTERISK', 'SELECT * FROM asteriskcdrdb.cdr%УсловиеПериод%')
		|
		|-%WHERE%-
		|
		|GROUP BY
		|	calldate, CAST(calldate AS date), CASE WHEN disposition = 'ANSWERED' THEN src ELSE '84956638602' END, dst, disposition
		|
		|
		|CREATE INDEX index_calldate
		|ON #CallsHistory(calldate)
		|
		|CREATE INDEX index_callday
		|ON #CallsHistory(callday)
		|
		|CREATE INDEX index_src
		|ON #CallsHistory(src)
		|
		|SELECT
		|	calldate,
		|	CallsHistory.callday,
		|	CallsHistory.src,
		|	dst,
		|	1 AS CallsQty,
		|	disposition,
		|	WaitDuration,
		|	CASE WHEN AnsweredCalls.NotAnswered IS NOT NULL AND calldate <= AnsweredCalls.LastCall THEN 0
		|		ELSE CASE WHEN calldate = NotAnsweredCalls.LastCall THEN 1
		|		ELSE 0 END
		|	END AS NotAnswered
		|	
		|FROM
		|	#CallsHistory AS CallsHistory
		|
		|	LEFT JOIN
		|		(SELECT
		|			callday,
		|			src, 
		|			MIN(0) AS NotAnswered,
		|			MAX(calldate) AS LastCall
		|		FROM #CallsHistory
		|		WHERE disposition = 'ANSWERED'
		|		GROUP BY callday, src
		|		) AS AnsweredCalls
		|	ON CallsHistory.callday = AnsweredCalls.callday AND CallsHistory.src = AnsweredCalls.src
		|
		|	LEFT JOIN
		|		(SELECT
		|			callday,
		|			src, 
		|			MIN(1) AS NotAnswered,
		|			MAX(calldate) AS LastCall
		|		FROM #CallsHistory
		|		WHERE disposition != 'ANSWERED'
		|		GROUP BY callday, src
		|		) AS NotAnsweredCalls
		|	ON CallsHistory.callday = NotAnsweredCalls.callday AND CallsHistory.src = NotAnsweredCalls.src
		|";
	
	УсловиеПериод = "";
	//Отбор по датам
	Если ЗначениеЗаполнено(НачалоПериода) И ЗначениеЗаполнено(КонецПериода) Тогда
		УсловиеПериод = ПолучитьУсловиеМежду("calldate", НачалоПериода, КонецПериода);
	ИначеЕсли ЗначениеЗаполнено(НачалоПериода) Тогда
		УсловиеПериод = "calldate >= " + ВнешниеДанные.ФорматПоля(НачалоПериода, Истина);
	ИначеЕсли ЗначениеЗаполнено(КонецПериода) Тогда
		УсловиеПериод = "calldate <= " + ВнешниеДанные.ФорматПоля(КонецПериода, Истина); 
	КонецЕсли;
	УсловиеПериод = ?(ЗначениеЗаполнено(УсловиеПериод), УсловиеПериод + " AND ", "") + "(src LIKE '23__' OR src LIKE '24__')";
	ТекстЗапросаSQL = СтрЗаменить(ТекстЗапросаSQL, "%УсловиеПериод%", ?(ПустаяСтрока(УсловиеПериод), "", " WHERE " + СтрЗаменить(УсловиеПериод, "'", "''")));
	ТекстЗапросаSQL = СтрЗаменить(ТекстЗапросаSQL, "84956638602", ОтборНомераТелефона);
	
	//отбор по номеру
	Условие = "";
	Если 1 = 0 И ЗначениеЗаполнено(ОтборНомераТелефона) Тогда
		//+++АК SHEP 20160512: отбор по списку телефонов
		Если Найти(ОтборНомераТелефона, ",") > 0 Тогда
			ОтборНомераТелефонаSQL = "'" + СтрЗаменить(ОтборНомераТелефона, ",", "','") + "'";
			Условие = ?(ЗначениеЗаполнено(Условие), Условие + " AND ", "") +
				//"(CASE WHEN LEN(src) < 10 THEN src ELSE '8' + RIGHT(src, 10) END IN (" + ОтборНомераТелефонаSQL + ")
				//|	OR CASE WHEN LEN(did) < 10 THEN did ELSE '8' + RIGHT(did, 10) END IN(" + ОтборНомераТелефонаSQL + "))";
				"CASE WHEN LEN(did) < 10 THEN did ELSE '8' + RIGHT(did, 10) END IN(" + ОтборНомераТелефонаSQL + ")";
		Иначе
			Условие = ?(ЗначениеЗаполнено(Условие), Условие + " AND ", "") +
				//"(CASE WHEN LEN(src) < 10 THEN src ELSE '8' + RIGHT(src, 10) END LIKE '" + ОтборНомераТелефона + "' 
				//|	OR CASE WHEN LEN(did) < 10 THEN did ELSE '8' + RIGHT(did, 10) END LIKE '" + ОтборНомераТелефона + "')";
				"CASE WHEN LEN(did) < 10 THEN did ELSE '8' + RIGHT(did, 10) END LIKE '" + ОтборНомераТелефона + "'";
		КонецЕсли;
	КонецЕсли;
	//
	////отбор по неотвеченным
	//Если ТолькоНеотвеченые = Истина Тогда
	//	Условие = ?(ЗначениеЗаполнено(Условие), Условие + " AND ", "") + "ISNULL(HistoryPhoneBookSrc.LastState,'ANSWERED') <> 'ANSWERED'";
	//КонецЕсли;
	
	//Отбор по времени
	Если ВремяС <> Неопределено ИЛИ ВремяПо <> Неопределено Тогда
		Условие = ?(ЗначениеЗаполнено(Условие), Условие + " AND ", "") +
			"DATEPART(HOUR, calldate) BETWEEN '" + ?(ЗначениеЗаполнено(ВремяС), ВремяС, 0) + "' AND '" + ?(ЗначениеЗаполнено(ВремяПо), ВремяПо - 1, 23) + "'";
	КонецЕсли;
	
	Условие = ?(ЗначениеЗаполнено(Условие), "WHERE ", "") + Условие;
	rs = ADOСоединение.Execute(СтрЗаменить(ТекстЗапросаSQL, "-%WHERE%-", Условие));
	
	ТаблицаНомеровИОбъектов = АК_ТелефонияСервер.ПолучитьТелефоныИОбъекты();
	
	ТабКешПродажи = Новый ТаблицаЗначений();
	ТабКешПродажи.Колонки.Добавить("Картинка");
	ТабКешПродажи.Колонки.Добавить("ВходящийПредставление");
	ТабКешПродажи.Колонки.Добавить("ВходящийОбъект");
	ТабКешПродажи.Колонки.Добавить("ИсходящийПредставление");
	ТабКешПродажи.Колонки.Добавить("ИсходящийОбъект");
	
	Попытка
		Пока НЕ rs = Неопределено Цикл
			Если rs.Fields.Count > 0 Тогда
				Для Каждого Field Из rs.Fields Цикл
					МассивТипов = Новый Массив;
					Если Field.Value = Null Тогда
						ТипValue = Тип("Строка");
					Иначе
						ТипValue = ТипЗнч(Field.Value);
					КонецЕсли;
					МассивТипов.Добавить(ТипValue);
					ТабКешПродажи.Колонки.Добавить(Field.Name, Новый ОписаниеТипов(МассивТипов));
				КонецЦикла;
				Прервать;
			КонецЕсли;
			rs = rs.NextRecordSet();
		КонецЦикла;
		
		Пока НЕ rs.EOF() Цикл
			СтруктураСтроки = Новый Структура();
			Для Каждого Field Из rs.Fields Цикл
				СтруктураСтроки.Вставить(Field.Name,Field.Value);
			КонецЦикла;
			
			//СтруктураСтроки.src = ОчиститьНомерТелефона(СтруктураСтроки.src);
			//СтруктураСтроки.dst = ОчиститьНомерТелефона(СтруктураСтроки.dst);
			
			//Если Не ЗначениеЗаполнено(СтруктураСтроки.src)
			//	Или Не ЗначениеЗаполнено(СтруктураСтроки.did) Тогда
			//	rs.MoveNext();
			//	Продолжить;
			//КонецЕсли;
			
			СтрокаДоб = ТабКешПродажи.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаДоб,СтруктураСтроки);
			
			//СтрокаДоб.Картинка = ?(СтрДлина(СтрокаДоб.src)>5,0, ?(СтрДлина(СтрокаДоб.dst)>5,1,0));
			
			//Если ЗначениеЗаполнено(СтрокаДоб.CustomerUIDsrc) Тогда
			//	СтрокаДоб.ВходящийОбъект = СтрокаДоб.CustomerUIDsrc;
			//	СтрокаДоб.ВходящийПредставление = СтрокаДоб.FullNamesrc + " (" + СтрокаДоб.src + ")";
			//Иначе
				СтрокаТелефон = ТаблицаНомеровИОбъектов.Найти(СтрокаДоб.src, "НомерТелефона");
				Если СтрокаТелефон <> Неопределено Тогда
					СтрокаДоб.ИсходящийОбъект = СтрокаТелефон.ОбъектТелефона;
					СтрокаДоб.ИсходящийПредставление = Строка(СтрокаТелефон.ОбъектТелефона) + " (" + СтрокаДоб.src + ")";
				Иначе
					СтрокаДоб.ИсходящийОбъект = "";
					СтрокаДоб.ИсходящийПредставление = СтрокаДоб.src;
				КонецЕсли;
			//КонецЕсли;			
			
			//Если ЗначениеЗаполнено(СтрокаДоб.CustomerUIDdst) Тогда
			//	СтрокаДоб.ИсходящийОбъект = СтрокаДоб.CustomerUIDdst;
			//	СтрокаДоб.ИсходящийПредставление = СтрокаДоб.FullNamedst + " (" + СтрокаДоб.dst + ")";
			//Иначе
				//СтрокаТелефон = ТаблицаНомеровИОбъектов.Найти(СтрокаДоб.did, "НомерТелефона");
				//Если СтрокаТелефон <> Неопределено Тогда
				//	СтрокаДоб.ВходящийОбъект = СтрокаТелефон.ОбъектТелефона;
				//	СтрокаДоб.ВходящийПредставление = Строка(СтрокаТелефон.ОбъектТелефона) + " (" + СтрокаДоб.did + ")";
				//Иначе
				//	СтрокаДоб.ВходящийОбъект = "";
				//	СтрокаДоб.ВходящийПредставление = СтрокаДоб.did;
				//КонецЕсли;			
			//КонецЕсли;			
			rs.MoveNext();
		КонецЦикла;
	Исключение
		//ТекстОшибки = ОписаниеОшибки();
		//Сообщить(ТекстОшибки);
	КонецПопытки;

	ADOСоединение.Close();
	
	Если ТабКешПродажи.Колонки.Найти("calldate") <> Неопределено Тогда
		ТабКешПродажи.Сортировать("calldate");
	КонецЕсли;
	
	Возврат ТабКешПродажи;
	
КонецФункции



