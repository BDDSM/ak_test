
Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	НаДату = '00010101';
	
	Для Каждого ПользПоле Из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(ПользПоле) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
			И Строка(ПользПоле.Параметр) = "Период" Тогда
			НаДату = ПользПоле.Значение.Дата;
//			ДатаОкончания = КонецДня(ПользПоле.Значение.ДатаОкончания);
		КонецЕсли;	
		Если ТипЗнч(ПользПоле) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных")
			И Строка(ПользПоле.Параметр) = "Номенклатура" Тогда
			Товар = ПользПоле.Значение;
			ИдТовара = Товар.id_tov;
		КонецЕсли;	
	КонецЦикла;
	
 	ТаблицаДанных = Новый ТаблицаЗначений();
	ТаблицаДанных.Колонки.Добавить("Период", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100, ДопустимаяДлина.Переменная)));
	ТаблицаДанных.Колонки.Добавить("НачалоПериода", Новый ОписаниеТипов("Дата"));
	ТаблицаДанных.Колонки.Добавить("Товар", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаДанных.Колонки.Добавить("Поставщик", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаДанных.Колонки.Добавить("Возврат", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("Поставки", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("Списание", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("Жалобы", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("Возврат0", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("Поставки0", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("Списание0", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("Жалобы0", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("НомерПериода", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("Кпост", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("Кпост0", Новый ОписаниеТипов("Число"));
								
	СтандартнаяОбработка = Ложь;
	
	ADOСоединение = Новый COMОбъект("ADODB.Connection");
	ADOСоединение.ConnectionTimeOut = 0;
	ADOСоединение.CommandTimeOut    = 0;
	ADOСоединение.ConnectionString  = ВнешниеДанные.ПолучитьСтрокуСоединенияSQL();
	ADOСоединение.Open();
	
	//ТекстЗапроса = "exec sms_repl..Get_Sale_Vozvrat_Tov_Harakt_Data " + ВнешниеДанные.ФорматПоля(ДатаНачала, Истина) + ", " + ВнешниеДанные.ФорматПоля(ДатаОкончания, Истина);
	
	ТекстЗапроса = "exec Reports..GetLossAnalysis " + ВнешниеДанные.ФорматПоля(НаДату-24*3600, Истина) + ", " + ВнешниеДанные.ФорматПоля(ИдТовара, Истина);
	

	rs = ADOСоединение.Execute(ТекстЗапроса);
	Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
		rs=rs.NextRecordSet();
	КонецЦикла;
	
	Попытка
		rs.MoveFirst();
		
		Пока НЕ rs.EOF() Цикл
			Контрагент = Справочники.Контрагенты.НайтиПоРеквизиту("ИД",Rs.Fields("id_kontr").Value);
			
			СтрокаДоб = ТаблицаДанных.Добавить();
			СтрокаДоб.Товар = Товар;
			СтрокаДоб.Поставщик = Контрагент;
			СтрокаДоб.Поставки = Rs.Fields("QtySup").Value;
			СтрокаДоб.Возврат = Rs.Fields("QtyRet").Value;
			СтрокаДоб.Списание = Rs.Fields("QtyOff").Value;
			СтрокаДоб.Жалобы = Rs.Fields("QtyCom").Value;
			СтрокаДоб.Поставки0 = Rs.Fields("QtySup0").Value;
			СтрокаДоб.Возврат0 = Rs.Fields("QtyRet0").Value;
			СтрокаДоб.Списание0 = Rs.Fields("QtyOff0").Value;
			СтрокаДоб.Жалобы0 = Rs.Fields("QtyCom0").Value;
			СтрокаДоб.НомерПериода = Rs.Fields("mn").Value;
			СтрокаДоб.Период = ПредставлениеПериода(НачалоДня(НаДату-((7-Rs.Fields("mn").Value)*30*24*3600)),НачалоДня(НаДату-(6-Rs.Fields("mn").Value)*30*24*3600)-1);
			СтрокаДоб.КПост = Rs.Fields("Ksup").Value;
			СтрокаДоб.КПост0 = Rs.Fields("Ksup0").Value;
			rs.MoveNext();
		КонецЦикла;
	Исключение
		Сообщить("Ошибка при получении данных SQL");
	КонецПопытки;
	
//	ТаблицаДанных.Индексы.Добавить("Дата, Товар");
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ДанныеДляФормирования", ТаблицаДанных);
	
	//Макет компоновки 
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	
	//Компоновка данных
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	//Вывод результата
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры
