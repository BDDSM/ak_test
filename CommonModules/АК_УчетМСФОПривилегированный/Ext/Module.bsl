Процедура ЗаполнитьОрганизациюРегистратора(ДатаНачала,ДатаОкончания,ОшибкиБлокировки) Экспорт	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Финансовый.Регистратор,
		|	Финансовый.Регистратор.Дата КАК РегистраторДата,
		|	Финансовый.Регистратор.Организация КАК Организация
		|ИЗ
		|	РегистрБухгалтерии.Финансовый КАК Финансовый
		|ГДЕ
		|	Финансовый.Период <= &ДатаОкончания
		|	И Финансовый.Период >= &ДатаНачала
		|	И НЕ Финансовый.Регистратор.Организация ЕСТЬ NULL 
		|	И ЕСТЬNULL(Финансовый.Организация, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	РегистраторДата";

	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ДатаОкончания));

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Организация) Тогда
		
			НаборДвижения = РегистрыБухгалтерии.Финансовый.СоздатьНаборЗаписей();
			НаборДвижения.Отбор.Регистратор.Установить(ВыборкаДетальныеЗаписи.Регистратор);
			НаборДвижения.Прочитать();
			НаборДвижения.РазрешитьЗаписьБезПроверки = Истина;
			НаборДвижения.ОбменДанными.Загрузка = Истина;
		
			Для каждого Движение из НаборДвижения Цикл
				Движение.Организация = ВыборкаДетальныеЗаписи.Организация; 	
		   	КонецЦикла;
			
			Попытка
		    	НаборДвижения.Записать();
			Исключение
				ОшибкиБлокировки = ОшибкиБлокировки + 1; 
			КонецПопытки;	
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры	

Функция ПолучитьПараметрыУчетаОС() Экспорт
	
	Результат = Новый Структура();   
	ДатаНачалаМСФО = Константы.АК_НачалоВеденияУчетаОС_МСФО.Получить();
	ДатаНачалаМСФО = ?(ЗначениеЗаполнено(ДатаНачалаМСФО),ДатаНачалаМСФО,Дата(3999,1,1));
	Результат.Вставить("НачалоВеденияУчета",ДатаНачалаМСФО);
	Результат.Вставить("СтоимостьСписания",Константы.АК_МаксимальнаяСтоимостьСписанияОСНаРасходы.Получить());
	
	Возврат Результат;
	
КонецФункции	

Функция ПолучитьДатуЗапретаБух() Экспорт
	
	Возврат Константы.АК_ДатаЗапретаРедактированияБух.Получить();
	
КонецФункции

Функция ПолучитьДатуНачалаУчетаМСФО() Экспорт
	
	//+++АК ZICD 20.01.2016
	//Возврат Константы.АК_НачалоВеденияУчетаМСФО.Получить();
	Возврат Дата("20170101000000");
	//---АК
	
КонецФункции

Функция ПолучитьДатуЗапретаМСФО() Экспорт
	
	Возврат Константы.АК_ДатаЗапретаРедактированияМСФО.Получить();
	
КонецФункции

//+++АК SUVV 2018.02.28 ИП-00017941
//Функция ПолучитьСтатьюСоответствия(СтатьяДДС) Экспорт
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ ПЕРВЫЕ 1
//		|	СоответствияСтатейСчетов.СтатьяДР
//		|ИЗ
//		|	РегистрСведений.СоответствияСтатейСчетов КАК СоответствияСтатейСчетов
//		|ГДЕ
//		|	СоответствияСтатейСчетов.СтатьяДДС = &СтатьяДДС";
//	Запрос.УстановитьПараметр("СтатьяДДС", СтатьяДДС);
//	Результат = Запрос.Выполнить();
//	ВыборкаДетальныеЗаписи = Результат.Выбрать();
//	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
//		Возврат ВыборкаДетальныеЗаписи.СтатьяДР;
//	КонецЦикла;
//	Возврат Справочники.СтатьиДоходовРасходов.ПустаяСсылка();		
//	
//КонецФункции
Функция ПолучитьСтатьюСоответствия(ВыбДата, СтатьяДДС) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоответствияСтатейСчетовСрезПоследних.СтатьяДДС,
	|	МАКСИМУМ(СоответствияСтатейСчетовСрезПоследних.Период) КАК МаксПериод
	|ПОМЕСТИТЬ ВТ_МаксПериодПоСтатьеДДС
	|ИЗ
	|	РегистрСведений.СоответствияСтатейСчетов.СрезПоследних(&ВыбДата, СтатьяДДС = &СтатьяДДС) КАК СоответствияСтатейСчетовСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствияСтатейСчетовСрезПоследних.СтатьяДДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствияСтатейСчетов.СтатьяДР
	|ИЗ
	|	ВТ_МаксПериодПоСтатьеДДС КАК ВТ_МаксПериодПоСтатьеДДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствияСтатейСчетов КАК СоответствияСтатейСчетов
	|		ПО ВТ_МаксПериодПоСтатьеДДС.СтатьяДДС = СоответствияСтатейСчетов.СтатьяДДС
	|			И ВТ_МаксПериодПоСтатьеДДС.МаксПериод = СоответствияСтатейСчетов.Период";
	Запрос.УстановитьПараметр("ВыбДата", ВыбДата);
	Запрос.УстановитьПараметр("СтатьяДДС", СтатьяДДС);

	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда 
		Возврат Выборка.СтатьяДР;
	Иначе
		Возврат Справочники.СтатьиДоходовРасходов.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции
//---АК SUVV

//+++АК ZICD 12.01.2017 ИП-00014363
// Функция проверяет действие настройки включения учёта по МСФО для даты.
// Удобно использовать в документах для проверок и прочее.
Функция УчётВключён(Период) Экспорт
	НачалоУчёта = ПолучитьДатуНачалаУчетаМСФО();
	Возврат НачалоУчёта > Дата("00010101") И НачалоУчёта <= Период;
КонецФункции
//---АК
//+++АК ZICD 25.01.2017 ИП-00014365
// ПериодПроведения - дата проводок
// СчётЗатрат - субсчёт списания остатков на 90-ый счёт (44.1, 44.2 или 44.3)
// НаборЗаписей - таблица значений набора записей РБ "Финансовый" для формирования проводок
// РазделУчёта - стратегия распределения (МСФО, Основной)
// Комментарий - пользовательский комментарий для сохранения в проводках
Процедура Распределить44Счёт(ПериодПроведения, Регистратор, СчётЗатрат, НаборЗаписей, РазделУчёта, Комментарий) Экспорт
	
	Если РазделУчёта = "Основной" Тогда
		ИмяРесурса = "Сумма";
		ИмяОстатка = "СуммаРаспределения";
	ИначеЕсли РазделУчёта = "МСФО" Тогда
		ИмяРесурса = "СуммаМСФО";
		ИмяОстатка = "СуммаРаспределенияМСФО";
	Иначе
		ВызватьИсключение("Неизвестный раздел учёта: """ + РазделУчёта + """!");
	КонецЕсли;
	КодСубСчёта = Сред(СчётЗатрат.Код, Найти(СчётЗатрат.Код, ".") + 1);
	
	//+++AK susk
	//СчётСписанияЗатрат = ПланыСчетов.Финансовый.НайтиПоКоду("90." + КодСубСчёта);
	
	//44.5 должен распределяться на 90.3	
	Если СокрЛП(СчётЗатрат.Код) = "44.5" Тогда
		СчётСписанияЗатрат = ПланыСчетов.Финансовый.НайтиПоКоду("90.3");
	//+++АК sils 12.03.2018 ИП-00017960
	ИначеЕсли СокрЛП(СчётЗатрат.Код) = "X44" Тогда
		СчётСписанияЗатрат = ПланыСчетов.Финансовый.НайтиПоКоду("X90");
	//---АК
	Иначе
		СчётСписанияЗатрат = ПланыСчетов.Финансовый.НайтиПоКоду("90." + КодСубСчёта);
	КонецЕсли;
	//---AK susk
	
	СодержаниеПроводки = "Распределены затраты" + ?(ПустаяСтрока(Комментарий), ".", ": ") + Комментарий;
	
	СписокСчетов90 = Новый СписокЗначений();
	СписокСчетов90.Добавить(ПланыСчетов.Финансовый.ЗатратыТорговыхТочек); // 90.3
	СписокСчетов90.Добавить(ПланыСчетов.Финансовый.ВыручкаТорговыхТочек); // 90.4
	
	ИзбенкаОбщий   = Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_ЦФО", 10032);
	ВкусвиллОбщий  = Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_ЦФО", 10030);
	ВсеОрганизации = Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_ЦФО", 10031);
	ГоловныеПодразделения = Новый СписокЗначений();
	ГоловныеПодразделения.Добавить(ВсеОрганизации);
	ГоловныеПодразделения.Добавить(ИзбенкаОбщий);
	ГоловныеПодразделения.Добавить(ВкусвиллОбщий);
	
	ТаблицаЭффективности = ВнешниеДанные.ПолучитьЭффективностьТорговыхТочек(ПериодПроведения);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач"		, НачалоМесяца(ПериодПроведения));
	Запрос.УстановитьПараметр("ДатаКон"		, КонецМесяца(ПериодПроведения));
	Запрос.УстановитьПараметр("ДатаНачала"		, Новый Граница(НачалоМесяца(ПериодПроведения), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаОкончания"	, Новый Граница(КонецМесяца(ПериодПроведения), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаОкончанияГр"	, Новый Граница(КонецМесяца(ПериодПроведения), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ИзбенкаОбщий"	, ИзбенкаОбщий);
	Запрос.УстановитьПараметр("ВкусвиллОбщий"	, ВкусвиллОбщий);
	Запрос.УстановитьПараметр("Все"				, ВсеОрганизации);
	Запрос.УстановитьПараметр("СчетЗатрат"		, СчётЗатрат);
	Запрос.УстановитьПараметр("СписокСчетов"	, СписокСчетов90);
	Запрос.УстановитьПараметр("ТаблицаЭффективности", ТаблицаЭффективности);
	Запрос.УстановитьПараметр("ГоловныеПодразделения", ГоловныеПодразделения);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Т.ТорговаяТочка,
	|	Т.Дата,
	|	Т.Эффективность
	|ПОМЕСТИТЬ
	|	ТаблицаЭффективности
	|ИЗ
	|	&ТаблицаЭффективности КАК Т
	|ИНДЕКСИРОВАТЬ ПО
	|	Т.ТорговаяТочка;
	// ***************************************************
	// * Формирование базы распределения по листам учёта *
	// ***************************************************
	|ВЫБРАТЬ
	|	ЛУ.ТорговаяТочка,
	|	ЛУ.ЦФО,
	|	ВЫБОР
	|		КОГДА ЛУ.ЦФО.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат = 0
	|		  ИЛИ ЛУ.ЦФО.ГоловноеПодразделение ЕСТЬ NULL 
	|		ТОГДА 1
	|		ИНАЧЕ ЛУ.ЦФО.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат
	|	КОНЕЦ КАК КоэффициентРаспределенияЗатрат,
	|	ВЫБОР
	|		КОГДА ЛУ.ТорговаяТочка.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	|		ТОГДА &ВкусвиллОбщий
	|		ИНАЧЕ &ИзбенкаОбщий
	|	КОНЕЦ КАК ГоловноеПодразделение,
	|	СУММА(ЕСТЬNULL(ЭФ.Эффективность, 0)) КАК Эффективность,
	|	КОЛИЧЕСТВО(ЛУ.Дата) КАК КоличествоСмен
	|ПОМЕСТИТЬ
	|	ТаблицаТорговыеТочки
	|ИЗ
	|	Документ.ЛистУчета КАК ЛУ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаЭффективности КАК ЭФ
	|	ПО ЛУ.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	 И ЛУ.Проведен
	|	 И ЛУ.ТорговаяТочка = ЭФ.ТорговаяТочка
	|	 И НАЧАЛОПЕРИОДА(ЛУ.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(ЭФ.Дата, ДЕНЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЛУ.ТорговаяТочка,
	|	ЛУ.ЦФО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЛУ.ТорговаяТочка,
	|	ЛУ.ЦФО
	|;
	// *******************************
	// * Получение данных по выручке *
	// *******************************
	|ВЫБРАТЬ
	|	Субконто1 КАК ТорговаяТочка,
	|	Субконто3 КАК ЦФО,
	|	СУММА(СуммаОборотКт) - СУММА(СуммаОборотДт) КАК Выручка
	|ПОМЕСТИТЬ
	|	ТаблицаВыручка
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор,
	|		Счет В (&СписокСчетов),,
	|		ВЫРАЗИТЬ(Субконто2 КАК Справочник.СтатьиДоходовРасходов) = ЗНАЧЕНИЕ(Справочник.СтатьиДоходовРасходов.РозничнаяВыручка),,)
	|ГДЕ
	|	Регистратор ССЫЛКА Документ.ЛистУчета
	|
	|СГРУППИРОВАТЬ ПО
	|	Субконто1,
	|	Субконто3
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1,
	|	Субконто3
	|;
	// *****************************************************
	// * Дополнение базы распределения драйвером "Выручка" *
	// *****************************************************
	|ВЫБРАТЬ
	|	Т0.ТорговаяТочка,
	|	Т0.ЦФО,
	|	Т0.ГоловноеПодразделение,
	|	Т0.КоэффициентРаспределенияЗатрат,
	|	Т0.Эффективность,
	|	Т0.КоличествоСмен,
	|	ЕСТЬNULL(Т1.Выручка, 0) КАК Выручка
	|ПОМЕСТИТЬ
	|	БазаРаспределения
	|ИЗ
	|	ТаблицаТорговыеТочки КАК Т0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаВыручка КАК Т1
	|	ПО Т0.ТорговаяТочка = Т1.ТорговаяТочка
	|	 И Т0.ЦФО = Т1.ЦФО
	|;
	|
	|УНИЧТОЖИТЬ ТаблицаЭффективности;
	|УНИЧТОЖИТЬ ТаблицаТорговыеТочки;
	|УНИЧТОЖИТЬ ТаблицаВыручка;
	|
	// *********************************************
	// * Вычисление итогов драйверов распределения *
	// *********************************************
	|ВЫБРАТЬ
	|	Т0.ТорговаяТочка,
	|	Т0.ЦФО,
	|	Т0.ГоловноеПодразделение,
	|	Т0.Эффективность * Т0.КоэффициентРаспределенияЗатрат КАК Эффективность,
	|	Т1.ЭффективностьИтог,
	|	Т2.ЭффективностьИтогПоГП,
	|	Т0.КоличествоСмен,
	|	Т1.КоличествоСменИтог,
	|	Т2.КоличествоСменИтогПоГП,
	|	Т0.Выручка,
	|	Т1.ВыручкаИтог,
	|	Т2.ВыручкаИтогПоГП
	|ПОМЕСТИТЬ
	|	БазаРаспределенияПлюсИтоги
	|ИЗ
	|	БазаРаспределения КАК Т0,
	|	(ВЫБРАТЬ
	|		СУММА(Эффективность  * КоэффициентРаспределенияЗатрат) КАК ЭффективностьИтог,
	|		СУММА(КоличествоСмен * КоэффициентРаспределенияЗатрат) КАК КоличествоСменИтог,
	|		СУММА(Выручка) КАК ВыручкаИтог
	|	ИЗ
	|		БазаРаспределения) КАК Т1, // Итоги по драйверам распределения (все)
	|	(ВЫБРАТЬ
	|		ГоловноеПодразделение,
	|		СУММА(Эффективность  * КоэффициентРаспределенияЗатрат) КАК ЭффективностьИтогПоГП,
	|		СУММА(КоличествоСмен * КоэффициентРаспределенияЗатрат) КАК КоличествоСменИтогПоГП,
	|		СУММА(Выручка) КАК ВыручкаИтогПоГП
	|	ИЗ
	|		БазаРаспределения
	|	СГРУППИРОВАТЬ ПО
	|		ГоловноеПодразделение) КАК Т2 // Итоги по драйверам распределения в разрезе головных подразделений
	|ГДЕ
	|	Т0.ГоловноеПодразделение = Т2.ГоловноеПодразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Т0.ГоловноеПодразделение
	|;
	|
	|УНИЧТОЖИТЬ БазаРаспределения;
	|
	// ************************************
	// * Получение сумм для распределения *
	// ************************************
	|ВЫБРАТЬ
	|	Организация                         КАК Организация,
	|	Субконто1                           КАК ГоловноеПодразделение,
	|	Субконто2                           КАК СтатьяДоходаРасхода,
	|	Субконто3                           КАК ЦФО,
	|	Субконто2.СпособРаспределенияЗатрат КАК СпособРаспределения,
	|	Субконто2.БазаРаспределенияЗатрат   КАК БазаРаспределения,
	|	СУММА(СуммаОстаток)                 КАК СуммаРаспределения,
	|	СУММА(СуммаМСФООстаток)             КАК СуммаРаспределенияМСФО
	|ПОМЕСТИТЬ
	|	ТаблицаРаспределения
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(&ДатаОкончанияГр, Счет = &СчетЗатрат,,
	|		ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы).Ссылка В (&ГоловныеПодразделения))
	|ГДЕ
	|	НЕ Субконто1 ЕСТЬ NULL 
	|	И ВЫРАЗИТЬ(Субконто2 КАК Справочник.СтатьиДоходовРасходов) <> ЗНАЧЕНИЕ(Справочник.СтатьиДоходовРасходов.ПустаяСсылка)
	|СГРУППИРОВАТЬ ПО
	|	Организация,
	|	Субконто1,
	|	Субконто2,
	|	Субконто3
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	// *************************************************************************
	// * Соединение базы и сумм распределения (основной результирующий запрос) *
	// *************************************************************************
	|ВЫБРАТЬ
	|	Т.Организация, // Измерение РБ Финансовый
	|	Т.ГП_90,
	|	Т.ГП_44, // 44 Субконто1
	|	Т.ЦФО_90, // 90 Субконто3
	|	Т.ЦФО_44, // 44 Субконто3
	|	Т.ТорговаяТочка, // 90 Субконто1
	|	Т.СтатьяДоходаРасхода, // 44 и 90 Субконто2
	|   Т.БазаРаспределения,
	|	Т.СпособРаспределения,
	|	Т.Эффективность, // Драйвер распределения по эффективности торговой точки
	|	Т.ЭффективностьИтог,
	|	Т.ЭффективностьИтогПоГП,
	|	Т.КоличествоСмен, // Драйвер распределения по количеству смен
	|	Т.КоличествоСменИтог,
	|	Т.КоличествоСменИтогПоГП,
	|	Т.Выручка, // Драйвер распределения по выручке торговой точки
	|	Т.ВыручкаИтог,
	|	Т.ВыручкаИтогПоГП,
	|	Т.СуммаРаспределения, // Сумма для распределения по основному виду учёта
	|	Т.СуммаРаспределенияМСФО // Сумма для распределения по МСФО
	|ИЗ
	|(ВЫБРАТЬ
	|	Т1.Организация, // Измерение РБ Финансовый
	|	Т0.ГоловноеПодразделение КАК ГП_90,
	|	Т1.ГоловноеПодразделение КАК ГП_44, // 44 Субконто1
	|	Т0.ЦФО КАК ЦФО_90, // 90 Субконто3
	|	Т1.ЦФО КАК ЦФО_44, // 44 Субконто3
	|	Т0.ТорговаяТочка, // 90 Субконто1
	|	Т1.СтатьяДоходаРасхода, // 44 и 90 Субконто2
	|   Т1.БазаРаспределения,
	|	Т1.СпособРаспределения,
	|	Т0.Эффективность, // Драйвер распределения по эффективности торговой точки
	|	Т0.ЭффективностьИтог,
	|	Т0.ЭффективностьИтогПоГП,
	|	Т0.КоличествоСмен, // Драйвер распределения по количеству смен
	|	Т0.КоличествоСменИтог,
	|	Т0.КоличествоСменИтогПоГП,
	|	Т0.Выручка, // Драйвер распределения по выручке торговой точки
	|	Т0.ВыручкаИтог,
	|	Т0.ВыручкаИтогПоГП,
	|	Т1.СуммаРаспределения, // Сумма для распределения по основному виду учёта
	|	Т1.СуммаРаспределенияМСФО // Сумма для распределения по МСФО
	|ИЗ
	|	БазаРаспределенияПлюсИтоги КАК Т0,
	|	ТаблицаРаспределения       КАК Т1
	|ГДЕ
	|	Т1.ГоловноеПодразделение = &Все
	|
	|ОБЪЕДИНИТЬ ВСЕ // Типичная оптимизация ИЛИ (SCAN). Теперь оба объединяемых запроса будут использовать индексы (SEEK).
	|
	|ВЫБРАТЬ
	|	Т1.Организация, // Измерение РБ Финансовый
	|	Т0.ГоловноеПодразделение КАК ГП_90,
	|	Т1.ГоловноеПодразделение КАК ГП_44, // 44 Субконто1
	|	Т0.ЦФО КАК ЦФО_90, // 90 Субконто3
	|	Т1.ЦФО КАК ЦФО_44, // 44 Субконто3
	|	Т0.ТорговаяТочка, // 90 Субконто1
	|	Т1.СтатьяДоходаРасхода, // 44 и 90 Субконто2
	|   Т1.БазаРаспределения,
	|	Т1.СпособРаспределения,
	|	Т0.Эффективность, // Драйвер распределения по эффективности торговой точки
	|	Т0.ЭффективностьИтог,
	|	Т0.ЭффективностьИтогПоГП,
	|	Т0.КоличествоСмен, // Драйвер распределения по количеству смен
	|	Т0.КоличествоСменИтог,
	|	Т0.КоличествоСменИтогПоГП,
	|	Т0.Выручка, // Драйвер распределения по выручке торговой точки
	|	Т0.ВыручкаИтог,
	|	Т0.ВыручкаИтогПоГП,
	|	Т1.СуммаРаспределения, // Сумма для распределения по основному виду учёта
	|	Т1.СуммаРаспределенияМСФО // Сумма для распределения по МСФО
	|ИЗ
	|	БазаРаспределенияПлюсИтоги КАК Т0,
	|	ТаблицаРаспределения       КАК Т1
	|ГДЕ
	|	Т0.ГоловноеПодразделение = Т1.ГоловноеПодразделение) КАК Т
	|
	|ИТОГИ
	|	МАКСИМУМ(Т.СуммаРаспределения),    // Суммы распределения, в том числе для контроля и распределения копеек
	|	МАКСИМУМ(Т.СуммаРаспределенияМСФО) // в разрезах остатков 44 счёта для распределения на 90 счёт
	|ПО
	|	Т.Организация,
	|	Т.ГП_44,
	|	Т.СтатьяДоходаРасхода,
	|	Т.ЦФО_44
	|;";
	РезультатЗапроса = Запрос.Выполнить(); // Нужно для анализа производительности
	ВыборкаОрганизация = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаОрганизация.Следующий() Цикл // Группировка "Организация"
		ВыборкаСубконто1 = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСубконто1.Следующий() Цикл // Группировка "ГоловноеПодразделение"
			ВыборкаСубконто2 = ВыборкаСубконто1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСубконто2.Следующий() Цикл // Группировка "СтатьяДоходаРасхода"
				ВыборкаСубконто3 = ВыборкаСубконто2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаСубконто3.Следующий() Цикл // Группировка "ЦФО"
					
					СуммаРаспределения = ВыборкаСубконто3[ИмяОстатка];
					Если СуммаРаспределения = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					СуммаРаспределено = 0;
					
					ДетальныеЗаписи = ВыборкаСубконто3.Выбрать();
					Пока ДетальныеЗаписи.Следующий() Цикл
						
						Распределено = 0;
						
						Если ДетальныеЗаписи.СпособРаспределения = Перечисления.СпособыРаспределенияЗатрат.ПоВыручке Тогда
							Если ВыборкаСубконто3.ГП_44 = ВсеОрганизации Тогда
								Распределено = ?(ДетальныеЗаписи.ВыручкаИтог = 0, 0,
									ДетальныеЗаписи.Выручка / ДетальныеЗаписи.ВыручкаИтог * СуммаРаспределения);
							Иначе
								Распределено = ?(ДетальныеЗаписи.ВыручкаИтогПоГП = 0, 0,
									ДетальныеЗаписи.Выручка / ДетальныеЗаписи.ВыручкаИтогПоГП * СуммаРаспределения);
							КонецЕсли;
							
						ИначеЕсли ДетальныеЗаписи.СпособРаспределения = Перечисления.СпособыРаспределенияЗатрат.ПоЭффективности Тогда
							Если ДетальныеЗаписи.ГП_44 = ВсеОрганизации Тогда
								Распределено = ?(ДетальныеЗаписи.ЭффективностьИтог = 0, 0,
									ДетальныеЗаписи.Эффективность / ДетальныеЗаписи.ЭффективностьИтог * СуммаРаспределения);
							Иначе
								Распределено = ?(ДетальныеЗаписи.ЭффективностьИтогПоГП = 0, 0,
									ДетальныеЗаписи.Эффективность / ДетальныеЗаписи.ЭффективностьИтогПоГП * СуммаРаспределения);
							КонецЕсли;
							
						ИначеЕсли ДетальныеЗаписи.СпособРаспределения = Перечисления.СпособыРаспределенияЗатрат.ПоКоличествуСмен Тогда
							Если ДетальныеЗаписи.ГП_44 = ВсеОрганизации Тогда
								Распределено = ?(ДетальныеЗаписи.КоличествоСменИтог = 0, 0,
									ДетальныеЗаписи.КоличествоСмен / ДетальныеЗаписи.КоличествоСменИтог * СуммаРаспределения);
							Иначе
								Распределено = ?(ДетальныеЗаписи.КоличествоСменИтогПоГП = 0, 0,
									ДетальныеЗаписи.КоличествоСмен / ДетальныеЗаписи.КоличествоСменИтогПоГП * СуммаРаспределения);
							КонецЕсли;
							
						Иначе // По умолчанию распределяем по выручке
							Если ВыборкаСубконто3.ГП_44 = ВсеОрганизации Тогда
								Распределено = ?(ДетальныеЗаписи.ВыручкаИтог = 0, 0,
									ДетальныеЗаписи.Выручка / ДетальныеЗаписи.ВыручкаИтог * СуммаРаспределения);
							Иначе
								Распределено = ?(ДетальныеЗаписи.ВыручкаИтогПоГП = 0, 0,
									ДетальныеЗаписи.Выручка / ДетальныеЗаписи.ВыручкаИтогПоГП * СуммаРаспределения);
							КонецЕсли;
							
						КонецЕсли;
						
						Распределено = Окр(Распределено, 2);
						Если Распределено = 0.00 Тогда
							Продолжить;
						КонецЕсли;
						СуммаРаспределено = СуммаРаспределено + Распределено;
						
						Движение = НаборЗаписей.Добавить();
						Движение.Период = ПериодПроведения;
						Движение.Регистратор = Регистратор;
						Движение.Активность  = Истина;
						Движение.Организация = ДетальныеЗаписи.Организация;
						Движение.СчетКт = СчётЗатрат;
						Движение.ВидСубконтоДт1 = ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки;
						Движение.ВидСубконтоДт2 = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДоходовРасходов;
						Движение.ВидСубконтоДт3 = ПланыВидовХарактеристик.ВидыСубконто.ЦФО;
						Движение.ВидСубконтоКт1 = ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки;
						Движение.ВидСубконтоКт2 = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДоходовРасходов;
						Движение.ВидСубконтоКт3 = ПланыВидовХарактеристик.ВидыСубконто.ЦФО;
						Движение.СубконтоКт1 = ДетальныеЗаписи.ГП_44;
						Движение.СубконтоКт2 = ДетальныеЗаписи.СтатьяДоходаРасхода;
						Движение.СубконтоКт3 = ДетальныеЗаписи.ЦФО_44;
						Движение.СчетДт = СчётСписанияЗатрат; 
						Движение.СубконтоДт1 = ДетальныеЗаписи.ТорговаяТочка;
						Движение.СубконтоДт2 = ДетальныеЗаписи.СтатьяДоходаРасхода;
						Движение.СубконтоДт3 = ДетальныеЗаписи.ЦФО_90;
						Движение.НомерЖурнала = "ТТ";
						Движение.Содержание = СодержаниеПроводки;
						Движение[ИмяРесурса] = Распределено;
						
					КонецЦикла; // Детальные записи
					
					// Распределение оставшихся копеек в последнюю строку
					КоличествоСтрок = НаборЗаписей.Количество();
					Если КоличествоСтрок > 0 Тогда
						ПоследняяСтрока = КоличествоСтрок - 1;
						НаборЗаписей[ПоследняяСтрока][ИмяРесурса] = НаборЗаписей[ПоследняяСтрока][ИмяРесурса] + (СуммаРаспределения - СуммаРаспределено);
					КонецЕсли;
					
				КонецЦикла; // Группировка "ЦФО"
			КонецЦикла; // Группировка "СтатьяДоходаРасхода"
		КонецЦикла; // Группировка "ГоловноеПодразделение"
	КонецЦикла;
	
	//+++АК sils 12.03.2018 ИП-00017960
	Если СокрЛП(СчётЗатрат.Код) = "X44" Тогда
		Возврат;
	КонецЕсли;
	//---АК
	
	//
	Счет445 = ПланыСчетов.Финансовый.НайтиПоКоду("44.5");
	Если СчётЗатрат = Счет445 Тогда
		СчётСписанияЗатрат = ПланыСчетов.Финансовый.ЗатратыТорговыхТочек;
	КонецЕсли;	
	
	// "Прямой" перенос затрат по торговым точкам без распределения
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Организация,
	|	Субконто1 КАК ТорговаяТочка,
	|	Субконто2 КАК СДР,
	|	Субконто3 КАК ЦФО,
	|	СУММА(СуммаОстаток)     КАК Сумма,
	|	СУММА(СуммаМСФООстаток) КАК СуммаМСФО
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(&ДатаОкончанияГр, Счет = &СчетЗатрат, , ) КАК ФинансовыйОбороты
	|ГДЕ
	|	ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы).Ссылка <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	И
	|	(ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы).ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|	ИЛИ
	|	ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы).БратьВРаспределениеЗатрат = ИСТИНА)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Организация,
	|	Субконто1,
	|	Субконто2,
	|	Субконто3
	|";
	Выборка = Запрос.Выполнить().Выбрать();				   
	Пока Выборка.Следующий() Цикл
		Если Выборка[ИмяРесурса] = 0 Тогда
			Продолжить;
		КонецЕсли;
		Движение = НаборЗаписей.Добавить();
		Движение.Период = ПериодПроведения;
		Движение.Регистратор = Регистратор;
		Движение.Активность  = Истина;
		Движение.Организация = Выборка.Организация;
		Движение.ВидСубконтоДт1 = ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки;
		Движение.ВидСубконтоДт2 = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДоходовРасходов;
		Движение.ВидСубконтоДт3 = ПланыВидовХарактеристик.ВидыСубконто.ЦФО;
		Движение.ВидСубконтоКт1 = ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки;
		Движение.ВидСубконтоКт2 = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДоходовРасходов;
		Движение.ВидСубконтоКт3 = ПланыВидовХарактеристик.ВидыСубконто.ЦФО;
		Движение.СчетКт = СчётЗатрат;
		Движение.СубконтоКт1 = Выборка.ТорговаяТочка;
		Движение.СубконтоКт2 = Выборка.СДР;
		Движение.СубконтоКт3 = Выборка.ЦФО;
		Движение.СчетДт = СчётСписанияЗатрат; 
		Движение.СубконтоДт1 = Выборка.ТорговаяТочка;
		Движение.СубконтоДт2 = Выборка.СДР;
		Движение.СубконтоДт3 = Выборка.ЦФО;
		Движение[ИмяРесурса] = Выборка[ИмяРесурса];
		Движение.НомерЖурнала = "ТТ";
		Движение.Содержание = СодержаниеПроводки;
	КонецЦикла;
	
КонецПроцедуры
//---АК

//+++ ZICD 26.01.2017 ИП-00014365
Процедура ВыполнитьРаспределение44Счёта(НачалоПересчёта) Экспорт
	
	НачалоПериода = НачалоМесяца(НачалоПересчёта);
	Если НачалоПериода < Дата("20170101000000") Тогда
		Возврат;
	КонецЕсли;
	ТекущаяДатаСервера = НачалоМесяца(ПолныеПрава.ТекущаяДатаСервера());
	Если НачалоПериода >= ТекущаяДатаСервера Тогда
		Возврат;
	КонецЕсли;
	КонецПериода = КонецМесяца(ДобавитьМесяц(ТекущаяДатаСервера, -1));
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",  КонецПериода);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(Дата, МЕСЯЦ) КАК Период,
	|	Ссылка
	|ИЗ
	|	Документ.РаспределениеЗатрат
	|ГДЕ
	|	Проведен
	|	И
	|	МСФО
	|	И
	|	Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|;";
	Выборка = Запрос.Выполнить().Выгрузить();
	
	КонецПериода = НачалоМесяца(КонецПериода);
	Пока НачалоПериода < КонецПериода Цикл
		Отбор = Новый Структура();
		Отбор.Вставить("Период", НачалоПериода);
		МассивДокументов = Выборка.НайтиСтроки(Отбор);
		Если МассивДокументов.Количество() = 0 Тогда
			// Создаём документы
			СоздатьДокументыРаспределения44Счёта(НачалоПериода);
		Иначе
			// Перепроводим документы
			ПерепровестиДокументыРаспределения44Счёта(МассивДокументов);
		КонецЕсли;
		НачалоПериода = ДобавитьМесяц(НачалоПериода, 1);
	КонецЦикла;
	
КонецПроцедуры
Процедура СоздатьДокументыРаспределения44Счёта(ПериодПроведения)
	
	СписокСчетов = Новый Массив();
	СписокСчетов.Добавить(ПланыСчетов.Финансовый.ЗатратыТоварныеДляРаспределения); // 44.1
	СписокСчетов.Добавить(ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения); // 44.2
	СписокСчетов.Добавить(ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения); // 44.3
	
	Для Каждого СчётЗатрат Из СписокСчетов Цикл
		ДокументОбъект = Документы.РаспределениеЗатрат.СоздатьДокумент();
		ДокументОбъект.Дата = КонецМесяца(ПериодПроведения);
		ДокументОбъект.МСФО = Истина;
		ДокументОбъект.СчетЗатрат = СчётЗатрат;
		ДокументОбъект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		ПровестиДокументПопыткаИсключение(ДокументОбъект, СчётЗатрат.Код);
	КонецЦикла;
	
КонецПроцедуры
Процедура ПерепровестиДокументыРаспределения44Счёта(МассивДокументов)
	
	Для Каждого Документ Из МассивДокументов Цикл
		ДокументОбъект = Документ.ПолучитьОбъект();
		КодСчёта = ?(ДокументОбъект = Неопределено, "44.0", ДокументОбъект.СчетЗатрат.Код);
		ПровестиДокументПопыткаИсключение(ДокументОбъект, КодСчёта);
	КонецЦикла;
	
КонецПроцедуры
Процедура ПровестиДокументПопыткаИсключение(ДокументОбъект, КодСчёта)
	
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		ЗаписьЖурналаРегистрации("Распределение 44 счёта по МСФО",
			УровеньЖурналаРегистрации.Информация,,,
			"Субсчёт " + КодСчёта + " распределён.");
	Исключение
		ЗаписьЖурналаРегистрации("Распределение 44 счёта по МСФО",
			УровеньЖурналаРегистрации.Ошибка,,,
			"Субсчёт " + КодСчёта + ": " + ОписаниеОшибки());
	КонецПопытки;
		
КонецПроцедуры
//--- ZICD