#Если Клиент Тогда
	Функция ПогаситьВСД(ПараметрыПривязки) Экспорт
		
		ПричинаАктаНесоответствия = "";
		
		ПараметрыНесоответствий = Новый Структура;
		
		ПараметрыНесоответствий.Вставить("НомерТТН", "Номер ТТН");
		ПараметрыНесоответствий.Вставить("ДатаТТН", "Дата ТТН");
		ПараметрыНесоответствий.Вставить("Количество", "Объем продукции");
		ПараметрыНесоответствий.Вставить("КоличествоУпаковок", "Количество упаковок");
		
		ОписаниеНесоответствий = Новый Структура();
		
		Для Каждого КлючЗначение Из ПараметрыНесоответствий Цикл
			Параметр = КлючЗначение.Ключ;
			Представление = КлючЗначение.Значение;
			
			Если ПараметрыПривязки[Параметр] <> ПараметрыПривязки[Параметр + "ВСД"] Тогда
				Описание = Новый Структура("Представление, Документ, ВСД", Представление, ПараметрыПривязки[Параметр], ПараметрыПривязки[Параметр + "ВСД"]);
				ОписаниеНесоответствий.Вставить(Параметр, Описание);
			КонецЕсли; 
		КонецЦикла;  
		
		Если ОписаниеНесоответствий.Количество() > 0 Тогда
			ПричинаАктаНесоответствия = ОткрытьФормуМодально("РегистрСведений.МЙ_ВетеринарныеДокументы.Форма.ФормаПодтвержденияНесоответствий", Новый Структура("Продукция, ОписаниеНесоответствий", ПараметрыПривязки.Продукция, ОписаниеНесоответствий));
			
			Если ТипЗнч(ПричинаАктаНесоответствия) <> Тип("Строка") ИЛИ ПустаяСтрока(ПричинаАктаНесоответствия) Тогда
				Возврат Ложь;
			КонецЕсли; 
		КонецЕсли; 
		
		НастройкаАПИ = Неопределено;
		
		Если ПараметрыПривязки.Свойство("Организация") = Истина Тогда
			Если ЗначениеЗаполнено(ПараметрыПривязки.Организация) = Истина Тогда
				НастройкаАПИ = ОбменССистемойВетис.НастройкаАпиПоОрганизации(ПараметрыПривязки.Организация);
			КонецЕсли;		
		КонецЕсли;	
		
		Результат = ОбменССистемойВетис.ПогаситьВСД(НастройкаАПИ, ПараметрыПривязки, ПричинаАктаНесоответствия);
		
		Если Результат = Истина Тогда
			Оповестить("ИзменилисьПривязкиВСД");		
		КонецЕсли; 
		
		Возврат Результат;
		
	КонецФункции
	
	Процедура ОбновитьВСД(ТЗ_ВСД) Экспорт
		ОбменССистемойВетис.ОбновитьВСД(ТЗ_ВСД);		
	КонецПроцедуры	
	
	Процедура АннулироватьВСД(МассивВСД) Экспорт
		
		Оп = Новый ОписаниеОповещения("ПослеЗакрытияФормыПодтвержденияАннуляции", ОбменССистемойВетисКлиентСервер, МассивВСД);		
		ОткрытьФорму("РегистрСведений.МЙ_ВетеринарныеДокументы.Форма.ФормаПодтвержденияАннуляции",,,,,,Оп);
		
	КонецПроцедуры
	
	Процедура  ПослеЗакрытияФормыПодтвержденияАннуляции(ПараметрыЗакрытия, МассивВСД) Экспорт
		
		Если ПараметрыЗакрытия = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		
		Если ТипЗнч(ПараметрыЗакрытия) = Тип("Структура") Тогда
			ВетВрач = ПараметрыЗакрытия.ВетВрач;
			ПричинаАннуляции = ПараметрыЗакрытия.ПричинаАннуляции;
		Иначе
			Возврат;
		КонецЕсли;	
		
		ОбменССистемойВетис.АннулироватьВСД_Списком(МассивВСД,ПричинаАннуляции,ВетВрач);		
		
	КонецПроцедуры
	
	
	
#КонецЕсли

#Если ТолстыйКлиентОбычноеПриложение Тогда
	Процедура ОткрытьГрупповоеФормированиеВСД() Экспорт
		
		РегистрыСведений.МЙ_ЖурналПродукции.ПолучитьФорму("ФормаПодбораПродукции").Открыть();
		
	КонецПроцедуры 
#КонецЕсли

Процедура ДобавитьПараметрОтбора(ПараметрыОтбора, ПутьКДанным, ВидСравнения, Значение) Экспорт
	
	ЭлементОтбора = Новый Структура("ПутьКДанным, ВидСравнения, Значение", ПутьКДанным, ВидСравнения, Значение);
	ПараметрыОтбора.Добавить(ЭлементОтбора);
	
КонецПроцедуры 



