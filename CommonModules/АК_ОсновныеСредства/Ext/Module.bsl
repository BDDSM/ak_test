Процедура ВыполнитьКонтрольДублейНомеров(ДокументОбъект, Отказ) Экспорт 
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ВводВЭксплуатацию") Тогда 
		ТаблицаОС = ДокументОбъект.Оборудование.Выгрузить().ВыгрузитьКолонку("ОсновноеСредство");
	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ОприходованиеОС") Тогда
		ТаблицаОС = ДокументОбъект.Номенклатура.Выгрузить().ВыгрузитьКолонку("ОсновноеСредство");
	КонецЕсли;	
		
	//Проверяем, что нет других поступления на это ОС 
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда
	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка"	, ДокументОбъект.Ссылка);	
		Запрос.УстановитьПараметр("Дата"	, ДокументОбъект.Дата);
		Запрос.УстановитьПараметр("СписокОС", ТаблицаОС);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СостояниеОС.ОсновноеСредство,
		|	СостояниеОС.Регистратор
		|ИЗ
		|	РегистрСведений.СостояниеОС КАК СостояниеОС
		|ГДЕ
		|	(СостояниеОС.Регистратор ССЫЛКА Документ.ПоступлениеТоваровУслуг ИЛИ СостояниеОС.Регистратор ССЫЛКА Документ.ОприходованиеОС) 
		|	И СостояниеОС.Регистратор.Проведен = ИСТИНА
		|	И СостояниеОС.Регистратор.Ссылка <> &Ссылка
		|	И СостояниеОС.ОсновноеСредство В(&СписокОС)";
		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий() Цикл
			Сообщить("Для основного средства " + Выборка.ОсновноеСредство + " уже существует документ поступления: " + Выборка.Регистратор);
			Отказ = Истина;
		КонецЦикла;

	ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.ПриходныйОрдерСклад") Тогда
		
		Если ДокументОбъект.ВидОперации <>  Перечисления.ВидыОперацийПриходСкладскойУчет.ПоступлениеОборудованияОтПоставщика Тогда
			Возврат;
		КонецЕсли;	
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка"	, ДокументОбъект.Ссылка);
		Запрос.УстановитьПараметр("Дата"	, ДокументОбъект.Дата);
		Запрос.УстановитьПараметр("СписокОС", ТаблицаОС);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СостояниеОС.ОсновноеСредство,
		|	СостояниеОС.Регистратор
		|ИЗ
		|	РегистрСведений.СостояниеОС КАК СостояниеОС
		|ГДЕ
		|	СостояниеОС.Регистратор ССЫЛКА Документ.ПриходныйОрдерСклад
		|	И СостояниеОС.Регистратор.Проведен = ИСТИНА
		|	И СостояниеОС.Регистратор.Ссылка <> &Ссылка
		|	И СостояниеОС.ОсновноеСредство В(&СписокОС)";
		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий() Цикл
			Сообщить("Для основного средства " + Выборка.ОсновноеСредство + " уже существует приходный ордер (поступление оборудования): " + Выборка.Регистратор);
			Отказ = Истина;
		КонецЦикла;

	КонецЕсли;
	
КонецПроцедуры	

Процедура ВыполнитьКонтрольВводаВЭксплуатацию(ДокументОбъект, Отказ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	//+++AK susk
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	//---AK susk

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОприходованиеОСНоменклатура.ОсновноеСредство
	|ПОМЕСТИТЬ втОсновныеСредства
	|ИЗ
	|	Документ.ОприходованиеОС.Номенклатура КАК ОприходованиеОСНоменклатура
	|ГДЕ
	|	ОприходованиеОСНоменклатура.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВводВЭксплуатациюОборудование.ОсновноеСредство
	|ИЗ
	|	Документ.ВводВЭксплуатацию.Оборудование КАК ВводВЭксплуатациюОборудование
	|ГДЕ
	|	ВводВЭксплуатациюОборудование.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПринятыеКУчетуОС.ОсновноеСредство,
	|	ПринятыеКУчетуОС.Регистратор
	|ИЗ
	|	РегистрСведений.ПринятыеКУчетуОС КАК ПринятыеКУчетуОС
	|ГДЕ
	|	ПринятыеКУчетуОС.ОсновноеСредство В
	|			(ВЫБРАТЬ
	|				втОсновныеСредства.ОсновноеСредство
	|			ИЗ
	|				втОсновныеСредства)
	|	И ПринятыеКУчетуОС.Регистратор <> &Ссылка
	//+++AK susk
	|	И ПринятыеКУчетуОС.Организация = &Организация";
	//---AK susk
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		Сообщить("Основное средство: " + Выборка.ОсновноеСредство + " уже принято к учету документом: " + Выборка.Регистратор);
		Отказ = Истина;
	КонецЦикла;
	
КонецПроцедуры	

Функция УчетМСФО(ДатаДокумента) Экспорт 

	Если ЗначениеЗаполнено(ДатаДокумента) Тогда
		
		Возврат (ДатаДокумента >= АК_УчетМСФОПривилегированный.ПолучитьПараметрыУчетаОС().НачалоВеденияУчета); 
		
	Иначе 
		
		ВОзврат Истина;
		
	КонецЕсли;	

КонецФункции

Функция НовыйНомерОС() Экспорт

	
	
КонецФункции
	
Функция СформироватьТаблицуДанных(ТаблицаОС) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаОС", ТаблицаОС);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.Инвентарь КАК Инвентарь
	|ПОМЕСТИТЬ втОсновныеСредства
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФинансовыйОстатки.Субконто1 КАК ОсновноеСредство,
	|	ФинансовыйОстатки.СуммаОстаток КАК Сумма,
	|	ФинансовыйОстатки.Счет КАК СчетУчета
	|ПОМЕСТИТЬ втСтоимостьОС
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(
	|			,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВорганизации)
	|				ИЛИ Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000),
	|			,
	|			Субконто1 В
	|				(ВЫБРАТЬ
	|					втОсновныеСредства.ОсновноеСредство
	|				ИЗ
	|					втОсновныеСредства)) КАК ФинансовыйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФинансовыйОстатки.Субконто1 КАК ОсновноеСредство,
	|	СУММА(-ФинансовыйОстатки.СуммаОстаток) КАК Сумма
	|ПОМЕСТИТЬ втАмортизацияОС
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(
	|			,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредств)
	|				ИЛИ Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредствДо100000),
	|			,
	|			Субконто1 В
	|				(ВЫБРАТЬ
	|					втОсновныеСредства.ОсновноеСредство
	|				ИЗ
	|					втОсновныеСредства)) КАК ФинансовыйОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ФинансовыйОстатки.Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОсновныеСредства.ОсновноеСредство,
	|	втСтоимостьОС.Сумма КАК Сумма,
	|	СостояниеОССрезПоследних.Местоположение,
	|	втАмортизацияОС.Сумма КАК СуммаАмортизация,
	|	втОсновныеСредства.Инвентарь,
	|	втСтоимостьОС.СчетУчета,
	|	втСтоимостьОС.СчетУчета КАК СчетУчетаЗабалансовый
	|ИЗ
	|	втОсновныеСредства КАК втОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостьОС КАК втСтоимостьОС
	|		ПО втОсновныеСредства.ОсновноеСредство = втСтоимостьОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеОС.СрезПоследних(
	|				,
	|				ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						втОсновныеСредства.ОсновноеСредство
	|					ИЗ
	|						втОсновныеСредства)) КАК СостояниеОССрезПоследних
	|		ПО втОсновныеСредства.ОсновноеСредство = СостояниеОССрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияОС КАК втАмортизацияОС
	|		ПО втОсновныеСредства.ОсновноеСредство = втАмортизацияОС.ОсновноеСредство";

	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции

Функция ТекущаяТорговаяТочка(ОсновноеСредство, Дата) Экспорт
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата"			, Дата);
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СостояниеОССрезПоследних.Местоположение ССЫЛКА Справочник.Склады
	|			ТОГДА СостояниеОССрезПоследних.Местоположение.Владелец
	|		ИНАЧЕ СостояниеОССрезПоследних.Местоположение
	|	КОНЕЦ КАК ТорговаяТочка
	|ИЗ
	|	РегистрСведений.СостояниеОС.СрезПоследних(&Дата, ОсновноеСредство = &ОсновноеСредство) КАК СостояниеОССрезПоследних";
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		Возврат Выборка.ТорговаяТочка; 
	КонецЦикла;
	
КонецФункции	

Функция СчетаУчетаОС() Экспорт
	
	ДоступныеСчета = Новый Массив;         
	ДоступныеСчета.Добавить(ПланыСчетов.Финансовый.ОборудованиеДляМонтажа);
	ДоступныеСчета.Добавить(ПланыСчетов.Финансовый.ПриобретениеОсновныхСредств);
	//+++AK susk
	ДоступныеСчета.Добавить(ПланыСчетов.Финансовый.ПриобретениеОсновныхСредствДо100000);
	//---AK susk
	ДоступныеСчета.Добавить(ПланыСчетов.Финансовый.Инвентарь);
	
	Возврат ДоступныеСчета;
	
КонецФункции

Функция ЭтоСчетУчетаОС(Счет) Экспорт
	
	Если Счет = ПланыСчетов.Финансовый.ОборудованиеДляМонтажа
			ИЛИ Счет = ПланыСчетов.Финансовый.ПриобретениеОсновныхСредств
			//+++AK susk
			ИЛИ Счет = ПланыСчетов.Финансовый.ПриобретениеОсновныхСредствДо100000
			//---AK susk
			ИЛИ Счет = ПланыСчетов.Финансовый.Инвентарь Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция ПолучитьОсновнойСчетУчета(Номенклатура) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровУслугОборудование.СчетУчета,
		|	ПоступлениеТоваровУслугОборудование.ОсновноеСредство КАК ОсновноеСредство
		|ПОМЕСТИТЬ втДокументыПоступления
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПоступлениеТоваровУслугОборудование
		|ГДЕ
		|	ПоступлениеТоваровУслугОборудование.Ссылка.Проведен = ИСТИНА
		|	И ПоступлениеТоваровУслугОборудование.Ссылка.Дата > &ДатаМСФО
		|	И ПоступлениеТоваровУслугОборудование.ОсновноеСредство.Номенклатура = &Номенклатура
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОприходованиеОСНоменклатура.СчетУчетаЗабалансовый,
		|	ОприходованиеОСНоменклатура.ОсновноеСредство
		|ИЗ
		|	Документ.ОприходованиеОС.Номенклатура КАК ОприходованиеОСНоменклатура
		|ГДЕ
		|	ОприходованиеОСНоменклатура.Ссылка.Проведен = ИСТИНА
		|	И ОприходованиеОСНоменклатура.Ссылка.Дата > &ДатаМСФО
		|	И ОприходованиеОСНоменклатура.ОсновноеСредство.Номенклатура = &Номенклатура
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	АвансовыйОтчетТовары.СчетУчета,
		|	АвансовыйОтчетТовары.ОсновноеСредство
		|ИЗ
		|	Документ.АвансовыйОтчет.Товары КАК АвансовыйОтчетТовары
		|ГДЕ
		|	АвансовыйОтчетТовары.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.Инвентарь)
		|	И АвансовыйОтчетТовары.Ссылка.Проведен = ИСТИНА
		|	И АвансовыйОтчетТовары.Ссылка.Дата > &ДатаМСФО
		|	И АвансовыйОтчетТовары.ОсновноеСредство.Номенклатура = &Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втДокументыПоступления.СчетУчета,
		|	КОЛИЧЕСТВО(втДокументыПоступления.ОсновноеСредство) КАК ОсновноеСредство
		|ИЗ
		|	втДокументыПоступления КАК втДокументыПоступления
		|
		|СГРУППИРОВАТЬ ПО
		|	втДокументыПоступления.СчетУчета
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОсновноеСредство УБЫВ";
	
	//+++АК MIND 2018.01.31 оптимизация, ограничим 6-ью месяцами
	//Запрос.УстановитьПараметр("ДатаМСФО",АК_УчетМСФОПривилегированный.ПолучитьПараметрыУчетаОС().НачалоВеденияУчета);
	Запрос.УстановитьПараметр("ДатаМСФО",Макс(ДобавитьМесяц(ТекущаяДата(), -6), АК_УчетМСФОПривилегированный.ПолучитьПараметрыУчетаОС().НачалоВеденияУчета));
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);	
		
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.СчетУчета;
	КонецЦикла;

	Возврат ПланыСчетов.Финансовый.ПустаяСсылка();
	
КонецФункции

Функция ПолучитьСтатьюДР(ОсновноеСредство,Дата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПринятыеКУчетуОССрезПоследних.СтатьяДР
		|ИЗ
		|	РегистрСведений.ПринятыеКУчетуОС.СрезПоследних(&ДатаСреза, ОсновноеСредство = &ОсновноеСредство) КАК ПринятыеКУчетуОССрезПоследних";

	Запрос.УстановитьПараметр("ДатаСреза", Дата);
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.СтатьяДР;
	КонецЦикла;
	
КонецФункции	

Процедура ПроверитьСчетаУчетаВДокументе(ДокументОбъект) Экспорт
	
	ТабличнаяЧасть = ДокументОбъект.Оборудование; 	
	
	Для каждого строка из ТабличнаяЧасть Цикл
		
		ОсновнойСчетУчета = ПолучитьОсновнойСчетУчета(строка.ОсновноеСредство.Номенклатура);
		Если ЗначениеЗаполнено(Строка.СчетУчета) И ЗначениеЗаполнено(ОсновнойСчетУчета)
			И Строка.СчетУчета <> ОсновнойСчетУчета Тогда
			
			Сообщить("Основной счет учета для основного средства: " + строка.ОсновноеСредство + ": " + ОсновнойСчетУчета + ". рекомендуется изменить счет учета");  				
			
		КонецЕсли;
	КонецЦикла;			
	
КонецПроцедуры	

Функция ЭтоСчетУчетаПринятогоОС(Счет) Экспорт
	
	Если Счет = ПланыСчетов.Финансовый.ОсновныеСредстваВОрганизации
			ИЛИ Счет = ПланыСчетов.Финансовый.ОсновныеСредстваДо100000 Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат	Ложь;
	
КонецФункции

Функция МассивСтатейДРАмортизация(Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НастройкаОтраженияОперацийВУчетеСрезПоследних.СтатьяДоходовРасходов
		|ИЗ
		|	РегистрСведений.НастройкаОтраженияОперацийВУчете.СрезПоследних(&ДатаСреза, ВидОперации В (&ВидыОперации)) КАК НастройкаОтраженияОперацийВУчетеСрезПоследних";

	ВидыОперации = Новый Массив;
	ВидыОперации.Добавить(Перечисления.ВидыОперацийВУчете.ОсновныеСредства_НачислениеАмортизации);
	ВидыОперации.Добавить(Перечисления.ВидыОперацийВУчете.ОсновныеСредства_НачислениеАмортизацииВПодразделении);
	ВидыОперации.Добавить(Перечисления.ВидыОперацийВУчете.ОсновныеСредства_НачислениеАмортизацииДо100000);
	ВидыОперации.Добавить(Перечисления.ВидыОперацийВУчете.ОсновныеСредства_НачислениеАмортизацииНаСкладе);
	ВидыОперации.Добавить(Перечисления.ВидыОперацийВУчете.ОсновныеСредства_НачислениеАмортизацииНМА);
	ВидыОперации.Добавить(Перечисления.ВидыОперацийВУчете.ОсновныеСредства_НачислениеАмортизацииНовыеТочки);
	ВидыОперации.Добавить(Перечисления.ВидыОперацийВУчете.ОсновныеСредства_НачислениеАмортизацииХранениеНаСкладе);

	
	Запрос.УстановитьПараметр("ВидыОперации", ВидыОперации);
	Запрос.УстановитьПараметр("ДатаСреза", Дата);

	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("СтатьяДоходовРасходов");;

	Возврат Результат;	
	
КонецФункции	

Функция СформироватьТаблицуДвижений(Регистратор) Экспорт

	Если НЕ ЗначениеЗаполнено(Регистратор) Тогда
		
		Результат = Новый ТаблицаЗначений;		
		Результат.Колонки.Добавить("Регистратор");
        Результат.Колонки.Добавить("СчетДт");
		Результат.Колонки.Добавить("СубконтоДт1");
		Результат.Колонки.Добавить("СчетКт");
		Результат.Колонки.Добавить("СубконтоКт1");
		Результат.Колонки.Добавить("Сумма");
        Результат.Колонки.Добавить("СуммаМСФО");
		
	Иначе 
		
		РегистраторОбъект = Регистратор.ПолучитьОбъект();
		Результат = РегистраторОбъект.Движения.Финансовый.Выгрузить();
		
	КонецЕсли;	
	
	Возврат Результат; 
	
КонецФункции	

Функция СтатистикаРеквизитов(Номенклатура) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеСредства.Ссылка,
	|	ОсновныеСредства.ГруппаОС,
	|	ОсновныеСредства.КодПоОКОФ,
	|	ОсновныеСредства.АмортизационнаяГруппа
	|ПОМЕСТИТЬ втОсновныеСредства
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОсновныеСредства
	|ГДЕ
	|	ОсновныеСредства.Номенклатура = &Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОсновныеСредства.ГруппаОС КАК Ссылка,
	|	СУММА(1) КАК Количество
	|ИЗ
	|	втОсновныеСредства КАК втОсновныеСредства
	|ГДЕ
	|	НЕ втОсновныеСредства.ГруппаОС ЕСТЬ NULL 
	|	И втОсновныеСредства.ГруппаОС <> ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	втОсновныеСредства.ГруппаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	Количество УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОсновныеСредства.КодПоОКОФ КАК Ссылка,
	|	СУММА(1) КАК Количество
	|ИЗ
	|	втОсновныеСредства КАК втОсновныеСредства
	|ГДЕ
	|	НЕ втОсновныеСредства.КодПоОКОФ ЕСТЬ NULL 
	|			И втОсновныеСредства.КодПоОКОФ <> ЗНАЧЕНИЕ(Справочник.ОбщероссийскийКлассификаторОсновныхФондов.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	втОсновныеСредства.КодПоОКОФ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Количество УБЫВ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОсновныеСредства.АмортизационнаяГруппа КАК Ссылка,
	|	СУММА(1) КАК Количество
	|ИЗ
	|	втОсновныеСредства КАК втОсновныеСредства
	|ГДЕ
	|	втОсновныеСредства.АмортизационнаяГруппа <> ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПустаяСсылка)
	|	И НЕ втОсновныеСредства.АмортизационнаяГруппа ЕСТЬ NULL 
	|
	|СГРУППИРОВАТЬ ПО
	|	втОсновныеСредства.АмортизационнаяГруппа
	|
	|УПОРЯДОЧИТЬ ПО
	|	Количество УБЫВ";

	Результат = Запрос.ВыполнитьПакет();
    РезультатГруппаОС 				= Результат[1].Выгрузить();
	РезультатКодПоОКОФ 				= Результат[2].Выгрузить();	
	РезультатАмортизационнаяГруппа 	= Результат[3].Выгрузить();

	Результат = Новый Структура;
	
	Если РезультатГруппаОС.Количество() > 0 Тогда			
		Результат.Вставить("ГруппаОС", РезультатГруппаОС[0].Ссылка);
	Иначе 	
		Результат.Вставить("ГруппаОС", Перечисления.ГруппыОС.ПустаяСсылка());
	КонецЕсли;	
	
	Если РезультатКодПоОКОФ.Количество() > 0 Тогда	
		Результат.Вставить("КодПоОКОФ", РезультатКодПоОКОФ[0].Ссылка);
	иначе	
		Результат.Вставить("КодПоОКОФ", Справочники.ОбщероссийскийКлассификаторОсновныхФондов.ПустаяСсылка());
	КонецЕсли;
	
	Если РезультатАмортизационнаяГруппа.Количество() > 0 Тогда	
		Результат.Вставить("АмортизационнаяГруппа", РезультатАмортизационнаяГруппа[0].Ссылка);	
	иначе	
		Результат.Вставить("АмортизационнаяГруппа", Перечисления.АмортизационныеГруппы.ПустаяСсылка());
	КонецЕсли;	

	Возврат Результат;	
	
КонецФункции	
	
Процедура ЗаполнитьРеквизитыОСПоСтатистике(ЭлементСправочникаОбъект) Экспорт 
	
	Если ЗначениеЗаполнено(ЭлементСправочникаОбъект.Номенклатура) Тогда
		
		Статистика = СтатистикаРеквизитов(ЭлементСправочникаОбъект.Номенклатура);
		ЗаполнитьЗначенияСвойств(ЭлементСправочникаОбъект, Статистика);
		
		Если ЗначениеЗаполнено(ЭлементСправочникаОбъект.Номенклатура.ГруппаОС) Тогда
			ЭлементСправочникаОбъект.ГруппаОС = ЭлементСправочникаОбъект.Номенклатура.ГруппаОС;	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЭлементСправочникаОбъект.Номенклатура.АмортизационнаяГруппа) Тогда
			ЭлементСправочникаОбъект.АмортизационнаяГруппа = ЭлементСправочникаОбъект.Номенклатура.АмортизационнаяГруппа;	
		КонецЕсли;

		Если ЗначениеЗаполнено(ЭлементСправочникаОбъект.Номенклатура.КодПоОКОФ) Тогда
			ЭлементСправочникаОбъект.КодПоОКОФ = ЭлементСправочникаОбъект.Номенклатура.КодПоОКОФ;	
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры	

Процедура УстановитьРеквизитыОС(ЭлементСправочникаСсылка, Реквизиты, Заменять = Истина) Экспорт

	Если НЕ ЗначениеЗаполнено(ЭлементСправочникаСсылка) Тогда
		Возврат;
	КонецЕсли;			
	
	ЭлементСправочникаОбъект = ЭлементСправочникаСсылка.ПолучитьОбъект();
	Записывать = Ложь;
	
	Если Реквизиты.Свойство("КодПоОКОФ") Тогда
		Если Заменять
				ИЛИ НЕ ЗначениеЗаполнено(ЭлементСправочникаОбъект.КодПоОКОФ) Тогда	
	    	ЭлементСправочникаОбъект.КодПоОКОФ = Реквизиты.КодПоОКОФ;
			Записывать = Истина;
		КонецЕсли;
	КонецЕсли;	
	
	Если Реквизиты.Свойство("АмортизационнаяГруппа") Тогда
		Если Заменять
				ИЛИ НЕ ЗначениеЗаполнено(ЭлементСправочникаОбъект.АмортизационнаяГруппа) Тогда	
	    	ЭлементСправочникаОбъект.АмортизационнаяГруппа = Реквизиты.АмортизационнаяГруппа;
			Записывать = Истина;
		КонецЕсли;
	КонецЕсли;	
	
	Если Реквизиты.Свойство("ГруппаОС") Тогда
		Если Заменять
				ИЛИ НЕ ЗначениеЗаполнено(ЭлементСправочникаОбъект.ГруппаОС) Тогда	
	    	ЭлементСправочникаОбъект.ГруппаОС = Реквизиты.ГруппаОС;
			Записывать = Истина;
		КонецЕсли;
	КонецЕсли;	
	
	//+++АК Susk (Суслин К.В.) 2018.10.08 ИП-00020055	 
	Если Реквизиты.Свойство("ВидНМА") Тогда
		Если Заменять
				ИЛИ НЕ ЗначениеЗаполнено(ЭлементСправочникаОбъект.ВидНМА) Тогда	
	    	ЭлементСправочникаОбъект.ВидНМА = Реквизиты.ВидНМА;
			Записывать = Истина;
		КонецЕсли;
	КонецЕсли;
	//---АК Susk (Суслин К.В.) 
	
	//		
	//
	//
	//Если Заменять Тогда
	//	ЭлементСправочникаОбъект.КодПоОКОФ = Реквизиты.КодПоОКОФ;
	//	ЭлементСправочникаОбъект.АмортизационнаяГруппа = Реквизиты.АмортизационнаяГруппа;
	//	ЭлементСправочникаОбъект.ГруппаОС = Реквизиты.ГруппаОС;
	//Иначе
	//	Если не ЗначениеЗаполнено(ЭлементСправочникаОбъект.КодПоОКОФ) Тогда
	//		ЭлементСправочникаОбъект.КодПоОКОФ = Реквизиты.КодПоОКОФ;
	//	КонецЕсли;	
	//	Если не ЗначениеЗаполнено(ЭлементСправочникаОбъект.АмортизационнаяГруппа) Тогда
	//		ЭлементСправочникаОбъект.АмортизационнаяГруппа = Реквизиты.АмортизационнаяГруппа;
	//	КонецЕсли;	
	//	Если не ЗначениеЗаполнено(ЭлементСправочникаОбъект.ГруппаОС) Тогда
	//		ЭлементСправочникаОбъект.ГруппаОС = Реквизиты.ГруппаОС;
	//	КонецЕсли;	
	//КонецЕсли;	
	
	Если Записывать Тогда
		ЭлементСправочникаОбъект.Записать();	
	КонецЕсли;
	
КонецПроцедуры	

Функция ПолучитьДанныеОС(ОсновноеСредство, Регистратор = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
	Запрос.УстановитьПараметр("Регистратор"		, Регистратор);
	
	// через таблицу, тк отбор движений запросом - очень долго
	ТаблицаДвиженийРегистратор = СформироватьТаблицуДвижений(Регистратор);
	Запрос.УстановитьПараметр("ТаблицаДвиженийРегистратор"	, ТаблицаДвиженийРегистратор);
   	Запрос.УстановитьПараметр("Ссылка"						, Регистратор);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеСредства.Ссылка КАК ОсновноеСредство
	|ПОМЕСТИТЬ втОсновныеСредства
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОсновныеСредства
	|ГДЕ
	|	ОсновныеСредства.Ссылка = &ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФинансовыйДвиженияССубконто.Регистратор,
	|	ФинансовыйДвиженияССубконто.СчетДт,
	|	ФинансовыйДвиженияССубконто.СубконтоДт1,
	|	ФинансовыйДвиженияССубконто.СчетКт,
	|	ФинансовыйДвиженияССубконто.СубконтоКт1,
	|	ФинансовыйДвиженияССубконто.Сумма КАК Сумма
	|ПОМЕСТИТЬ втДвиженияРегистратора
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.ДвиженияССубконто(, , Регистратор = &Регистратор, , ) КАК ФинансовыйДвиженияССубконто
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ФинансовыйОстатки.Субконто1 КАК ОсновноеСредство,
	|	ФинансовыйОстатки.СуммаОстаток КАК Сумма,
	|	ФинансовыйОстатки.Счет
	|ПОМЕСТИТЬ втСтоимостьОС
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(
	|			,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВорганизации)
	|				ИЛИ Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000),
	|			,
	|			Субконто1 В
	|				(ВЫБРАТЬ
	|					втОсновныеСредства.ОсновноеСредство
	|				ИЗ
	|					втОсновныеСредства)) КАК ФинансовыйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФинансовыйОстатки.Субконто1 КАК ОсновноеСредство,
	|	СУММА(-ФинансовыйОстатки.СуммаОстаток) КАК Сумма
	|ПОМЕСТИТЬ втАмортизацияОС
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(
	|			,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредств)
	|				ИЛИ Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредствДо100000),
	|			,
	|			Субконто1 В
	|				(ВЫБРАТЬ
	|					втОсновныеСредства.ОсновноеСредство
	|				ИЗ
	|					втОсновныеСредства)) КАК ФинансовыйОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	ФинансовыйОстатки.Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА втДвиженияРегистратора.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации)
	|				ИЛИ втДвиженияРегистратора.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000)
	|				ИЛИ втДвиженияРегистратора.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредств)
	|				ИЛИ втДвиженияРегистратора.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредствДо100000)
	|			ТОГДА втДвиженияРегистратора.СубконтоДт1
	|		ИНАЧЕ ВЫБОР
	|				КОГДА втДвиженияРегистратора.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации)
	|						ИЛИ втДвиженияРегистратора.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000)
	|						ИЛИ втДвиженияРегистратора.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредств)
	|						ИЛИ втДвиженияРегистратора.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредствДо100000)
	|					ТОГДА втДвиженияРегистратора.СубконтоКт1
	|			КОНЕЦ
	|	КОНЕЦ КАК ОсновноеСредство,
	|	СУММА(ВЫБОР
	|			КОГДА втДвиженияРегистратора.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации)
	|					ИЛИ втДвиженияРегистратора.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000)
	|				ТОГДА -втДвиженияРегистратора.Сумма
	|			ИНАЧЕ ВЫБОР
	|					КОГДА втДвиженияРегистратора.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации)
	|							ИЛИ втДвиженияРегистратора.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000)
	|						ТОГДА втДвиженияРегистратора.Сумма
	|				КОНЕЦ
	|		КОНЕЦ) КАК Сумма,
	|	СУММА(ВЫБОР
	|			КОГДА втДвиженияРегистратора.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредств)
	|					ИЛИ втДвиженияРегистратора.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредствДо100000)
	|				ТОГДА втДвиженияРегистратора.Сумма
	|			ИНАЧЕ ВЫБОР
	|					КОГДА втДвиженияРегистратора.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредств)
	|							ИЛИ втДвиженияРегистратора.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредствДо100000)
	|						ТОГДА -втДвиженияРегистратора.Сумма
	|				КОНЕЦ
	|		КОНЕЦ) КАК СуммаАмортизация
	|ПОМЕСТИТЬ втСуммаРегистратора
	|ИЗ
	|	втДвиженияРегистратора КАК втДвиженияРегистратора
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА втДвиженияРегистратора.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации)
	|				ИЛИ втДвиженияРегистратора.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000)
	|				ИЛИ втДвиженияРегистратора.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредств)
	|				ИЛИ втДвиженияРегистратора.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредствДо100000)
	|			ТОГДА втДвиженияРегистратора.СубконтоДт1
	|		ИНАЧЕ ВЫБОР
	|				КОГДА втДвиженияРегистратора.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации)
	|						ИЛИ втДвиженияРегистратора.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000)
	|						ИЛИ втДвиженияРегистратора.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредств)
	|						ИЛИ втДвиженияРегистратора.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредствДо100000)
	|					ТОГДА втДвиженияРегистратора.СубконтоКт1
	|			КОНЕЦ
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(втСтоимостьОС.Сумма, 0) + ЕСТЬNULL(втСуммаРегистратора.Сумма, 0) КАК Сумма,
	|	СостояниеОССрезПоследних.Местоположение,
	|	ЕСТЬNULL(втАмортизацияОС.Сумма, 0) + ЕСТЬNULL(втСуммаРегистратора.СуммаАмортизация, 0) КАК СуммаАмортизация,
	|	втОсновныеСредства.ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА ПринятыеКУчетуОССрезПоследних.НачислятьАмортизацию ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ПринятыеКУчетуОССрезПоследних.НачислятьАмортизацию = ИСТИНА
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|	КОНЕЦ КАК Инвентарь,
	|	втОсновныеСредства.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	втОсновныеСредства.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
	|	ВЫБОР
	|		КОГДА СостояниеОССрезПоследних.Списано
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КоличествоУчет,
	|	втСтоимостьОС.Счет КАК СчетУчета,
	|	втСтоимостьОС.Счет КАК СчетУчетаЗабалансовый
	|ИЗ
	|	втОсновныеСредства КАК втОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостьОС КАК втСтоимостьОС
	|		ПО втОсновныеСредства.ОсновноеСредство = втСтоимостьОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияОС КАК втАмортизацияОС
	|		ПО втОсновныеСредства.ОсновноеСредство = втАмортизацияОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеОС.СрезПоследних(
	|				,
	|				ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						втОсновныеСредства.ОсновноеСредство
	|					ИЗ
	|						втОсновныеСредства)) КАК СостояниеОССрезПоследних
	|		ПО втОсновныеСредства.ОсновноеСредство = СостояниеОССрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСуммаРегистратора КАК втСуммаРегистратора
	|		ПО втОсновныеСредства.ОсновноеСредство = втСуммаРегистратора.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПринятыеКУчетуОС.СрезПоследних КАК ПринятыеКУчетуОССрезПоследних
	|		ПО втОсновныеСредства.ОсновноеСредство = ПринятыеКУчетуОССрезПоследних.ОсновноеСредство";

	//
	Возврат Запрос.Выполнить().Выгрузить()[0];

КонецФункции

Процедура УстановитьСрокПолезногоИспользования(НоменклатураСсылка, СрокПолезногоИспользования, Заменять = Истина) Экспорт
	
	Если НЕ ЗначениеЗаполнено(НоменклатураСсылка) Тогда
		Возврат;
	КонецЕсли;			
	
	Если Заменять
			ИЛИ НЕ ЗначениеЗаполнено(НоменклатураСсылка.СрокПолезногоИспользования) Тогда	
		НоменклатураОбъект = НоменклатураСсылка.ПолучитьОбъект();
		НоменклатураОбъект.СрокПолезногоИспользования = СрокПолезногоИспользования;
		НоменклатураОбъект.Записать();
	КонецЕсли;			
	
КонецПроцедуры

Функция СчетУчета(ОсновноеСредство,Дата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПринятыеКУчетуОССрезПоследних.СчетУчета
		|ИЗ
		|	РегистрСведений.ПринятыеКУчетуОС.СрезПоследних(&ДатаСреза, ОсновноеСредство = &ОсновноеСредство) КАК ПринятыеКУчетуОССрезПоследних";

	Запрос.УстановитьПараметр("ДатаСреза", Дата);
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.СчетУчета;
	КонецЦикла;

	Возврат Ложь;
	
КонецФункции

Процедура ПроисвоитьИнвентарныеНомераВДокументе(ДокументОбъект) Экспорт
	
	Если Типзнч(ДокументОбъект) = Тип("ДокументОбъект.ОприходованиеОС") Тогда		
		МассивОборудования = ДокументОбъект.Номенклатура.Выгрузить().ВыгрузитьКолонку("ОсновноеСредство");			
	Иначе 
		МассивОборудования = ДокументОбъект.Оборудование.Выгрузить().ВыгрузитьКолонку("ОсновноеСредство");
	КонецЕсли;	
		
	Для каждого ОсновноеСредство из МассивОборудования Цикл
		
		Если НЕ значениеЗаполнено(ОсновноеСредство.ИнвентарныйНомер) Тогда	
			ОсновноеСредствоОбъект = ОсновноеСредство.ПолучитьОбъект();
			ОсновноеСредствоОбъект.ИнвентарныйНомер = Справочники.ОсновныеСредства.ПолучитьНовыйИнвентарныйНомер();
			ОсновноеСредствоОбъект.Записать();
		КонецЕсли;
		
	КонецЦикла;	
	
КонецПроцедуры	

Функция ПолучитьДанныеПоступления(ОсновноеСредство) Экспорт
	
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Номенклатура",Справочники.Номенклатура.ПустаяСсылка());
	СтруктураРезультат.Вставить("ОсновноеСредство",ОсновноеСредство);
	СтруктураРезультат.Вставить("СчетУчета",ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	СтруктураРезультат.Вставить("СчетУчетаНУ",ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	СтруктураРезультат.Вставить("Количество",0);
	СтруктураРезультат.Вставить("Сумма",0);
	СтруктураРезультат.Вставить("СчетЗатрат",ПланыСчетов.Финансовый.ПустаяСсылка());
	СтруктураРезультат.Вставить("ТорговаяТочка",Справочники.СтруктурныеЕдиницы.ПустаяСсылка());
	СтруктураРезультат.Вставить("Партия",Документы.ПоступлениеТоваровУслуг.ПустаяСсылка());
	СтруктураРезультат.Вставить("СтоимостьПартии",0);
	СтруктураРезультат.Вставить("СуммаРаспределено",0);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровУслугОборудование.Номенклатура,
		|	ПоступлениеТоваровУслугОборудование.ОсновноеСредство,
		|	ПоступлениеТоваровУслугОборудование.СчетУчетаБУ КАК СчетУчета,
		|	ПоступлениеТоваровУслугОборудование.СчетУчетаБУ КАК СчетУчетаНУ,
		|	1 КАК Количество,
		|	ПоступлениеТоваровУслугОборудование.СчетУчета КАК СчетЗатрат,
		|	ПоступлениеТоваровУслугОборудование.ТорговаяТочка,
		|	ПоступлениеТоваровУслугОборудование.Ссылка КАК Партия,
		|	ПоступлениеТоваровУслугОборудование.Сумма КАК СтоимостьПартии,
		|	0 КАК СуммаРаспределено,
		|	0 КАК Сумма
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПоступлениеТоваровУслугОборудование
		|ГДЕ
		|	ПоступлениеТоваровУслугОборудование.Ссылка.Проведен = ИСТИНА
		|	И ПоступлениеТоваровУслугОборудование.ОсновноеСредство = &ОсновноеСредство";

	Запрос.УстановитьПараметр("ОсновноеСредство",ОсновноеСредство);	
	Результат = Запрос.Выполнить().Выгрузить();

	Если Результат.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(СтруктураРезультат,Результат[0]);
		Возврат СтруктураРезультат;
	Иначе 
		Возврат СтруктураРезультат;
	КонецЕсли;	
		
		
КонецФункции	

Функция МассивСтатейДРДляОтнесенияНаРасходыОфис() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить(Справочники.СтатьиДоходовРасходов.НайтиПоКоду("90010"));
	Результат.Добавить(Справочники.СтатьиДоходовРасходов.НайтиПоКоду("81014"));
	Результат.Добавить(Справочники.СтатьиДоходовРасходов.НайтиПоКоду("39230"));
	Результат.Добавить(Справочники.СтатьиДоходовРасходов.НайтиПоКоду("41024"));
	Результат.Добавить(Справочники.СтатьиДоходовРасходов.НайтиПоКоду("35113"));
	Результат.Добавить(Справочники.СтатьиДоходовРасходов.НайтиПоКоду("39250"));
	
	ДобавитьСтатьиПоИерархии(Результат,Справочники.СтатьиДоходовРасходов.НайтиПоКоду("371"));	
	
	Возврат Результат;
	
КонецФункции	

Процедура ДобавитьСтатьиПоИерархии(Массив,СтатьяДР)


	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатьиДоходовРасходов.Ссылка
		|ИЗ
		|	Справочник.СтатьиДоходовРасходов КАК СтатьиДоходовРасходов
		|ГДЕ
		|	СтатьиДоходовРасходов.Ссылка В ИЕРАРХИИ (&Ссылка)";

	Запрос.УстановитьПараметр("Ссылка", СтатьяДР);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Массив.Добавить(ВыборкаДетальныеЗаписи.Ссылка)
	КонецЦикла;

КонецПроцедуры

Функция СоздатьНовоеОС(Номенклатура,ПрисвоитьИнвентарныйНомер) Экспорт
	
	НовоеОС = Справочники.ОсновныеСредства.СоздатьЭлемент();
	НовоеОС.Наименование = Номенклатура.Наименование;
	НовоеОС.Номенклатура = Номенклатура;
	НовоеОС.Записать();	
	
	НовоеОС.ЗаводскойНомер 	= НовоеОС.Код;
	Если  ПрисвоитьИнвентарныйНомер Тогда		
		НовоеОС.ИнвентарныйНомер = Справочники.ОсновныеСредства.ПолучитьНовыйИнвентарныйНомер();			
	КонецЕсли;		
	НовоеОС.Записать();
	
	Возврат НовоеОС.Ссылка;
	
КонецФункции

//+++АК Susk (Суслин К.В.) 2018.05.21 ИП-00018522
Функция РассчитатьАмортизациюНаЛету(СписокОС, Организация, Дата) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ФинансовыйОбороты.Субконто1 КАК ОсновноеСредство,
	               |	ФинансовыйОбороты.СуммаОстаток КАК СуммаОборотПо01,
	               |	ПринятыеКУчетуОССрезПоследних.НачислятьАмортизацию,
	               |	ПринятыеКУчетуОССрезПоследних.СрокАмортизации,
	               |	ПринятыеКУчетуОССрезПоследних.ЭтоОприходование
	               |ПОМЕСТИТЬ Сводная
	               |ИЗ
	               |	РегистрБухгалтерии.Финансовый.Остатки(
	               |			&КонецПериода,
	               |			Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации)
	               |				ИЛИ Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000),
	               |			,
	               |			Организация = &Организация
	               |				И Субконто1 В (&СписокОС)) КАК ФинансовыйОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПринятыеКУчетуОС.СрезПоследних(&КонецПериода, ) КАК ПринятыеКУчетуОССрезПоследних
	               |		ПО ФинансовыйОбороты.Субконто1 = ПринятыеКУчетуОССрезПоследних.ОсновноеСредство
	               |			И ФинансовыйОбороты.Организация = ПринятыеКУчетуОССрезПоследних.Организация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Сводная.ОсновноеСредство,
	               |	Сводная.СуммаОборотПо01 КАК НачальнаяСтоимость,
	               |	Сводная.НачислятьАмортизацию,
	               |	Сводная.СрокАмортизации,
	               |	Сводная.ЭтоОприходование
	               |ПОМЕСТИТЬ ПринятыеКУчетуОССрассчитаннойСтоимостью
	               |ИЗ
	               |	Сводная КАК Сводная
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПринятыеКУчетуОССрезПоследних.ОсновноеСредство,
	               |	ПринятыеКУчетуОССрезПоследних.НачальнаяСтоимость / ПринятыеКУчетуОССрезПоследних.СрокАмортизации КАК СуммаСписанияЗаМесяц,
	               |	ЕСТЬNULL(ПринятыеКУчетуОССрезПоследних.НачальнаяСтоимость, 0) КАК НачальнаяСтоимость,
	               |	ПринятыеКУчетуОССрезПоследних.СрокАмортизации,
	               |	ПринятыеКУчетуОССрезПоследних.ЭтоОприходование
	               |ПОМЕСТИТЬ втПринятыеКУчету
	               |ИЗ
	               |	ПринятыеКУчетуОССрассчитаннойСтоимостью КАК ПринятыеКУчетуОССрезПоследних
	               |ГДЕ
	               |	ПринятыеКУчетуОССрезПоследних.НачислятьАмортизацию
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ФинансовыйОстатки.Субконто1 КАК ОсновноеСредство,
	               |	ФинансовыйОстатки.СуммаОстаток КАК Сумма,
	               |	ФинансовыйОстатки.Счет
	               |ПОМЕСТИТЬ втСтоимостьОС
	               |ИЗ
	               |	РегистрБухгалтерии.Финансовый.Остатки(
	               |			&ГраницаНачала,
	               |			Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваВОрганизации)
	               |				ИЛИ Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ОсновныеСредстваДо100000),
	               |			,
	               |			Субконто1 В
	               |				(ВЫБРАТЬ
	               |					втПринятыеКУчету.ОсновноеСредство
	               |				ИЗ
	               |					втПринятыеКУчету)) КАК ФинансовыйОстатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втПринятыеКУчету.ОсновноеСредство,
	               |	СУММА(ЕСТЬNULL(ВЫБОР
	               |				КОГДА ВЫБОР
	               |						КОГДА втСтоимостьОС.Сумма > 0
	               |							ТОГДА втСтоимостьОС.Сумма / втПринятыеКУчету.СрокАмортизации
	               |						ИНАЧЕ втПринятыеКУчету.СуммаСписанияЗаМесяц
	               |					КОНЕЦ + НачисленноАмортизации.Сумма > втСтоимостьОС.Сумма
	               |					ТОГДА втСтоимостьОС.Сумма - НачисленноАмортизации.Сумма
	               |				ИНАЧЕ ВЫБОР
	               |						КОГДА втСтоимостьОС.Сумма > 0
	               |							ТОГДА втСтоимостьОС.Сумма / втПринятыеКУчету.СрокАмортизации
	               |						ИНАЧЕ втПринятыеКУчету.СуммаСписанияЗаМесяц
	               |					КОНЕЦ
	               |			КОНЕЦ, 0)) КАК Сумма,
	               |	втСтоимостьОС.Счет,
	               |	втПринятыеКУчету.ЭтоОприходование
	               |ИЗ
	               |	втПринятыеКУчету КАК втПринятыеКУчету
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ФинансовыйДвиженияССубконто.СубконтоКт1 КАК ОсновноеСредство,
	               |			СУММА(ЕСТЬNULL(ФинансовыйДвиженияССубконто.Сумма, 0)) КАК Сумма
	               |		ИЗ
	               |			РегистрБухгалтерии.Финансовый.ДвиженияССубконто(
	               |					,
	               |					&ДатаНачала,
	               |					СубконтоКт1 В
	               |							(ВЫБРАТЬ
	               |								втПринятыеКУчету.ОсновноеСредство
	               |							ИЗ
	               |								втПринятыеКУчету)
	               |						И (СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредств)
	               |							ИЛИ СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.АмортизацияОсновныхСредствДо100000)),
	               |					,
	               |					) КАК ФинансовыйДвиженияССубконто
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ФинансовыйДвиженияССубконто.СубконтоКт1) КАК НачисленноАмортизации
	               |		ПО втПринятыеКУчету.ОсновноеСредство = НачисленноАмортизации.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостьОС КАК втСтоимостьОС
	               |		ПО втПринятыеКУчету.ОсновноеСредство = втСтоимостьОС.ОсновноеСредство
	               |ГДЕ
	               |	ЕСТЬNULL(втПринятыеКУчету.НачальнаяСтоимость, 0) > ЕСТЬNULL(НачисленноАмортизации.Сумма, 0)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втПринятыеКУчету.ОсновноеСредство,
	               |	втСтоимостьОС.Счет,
	               |	втПринятыеКУчету.ЭтоОприходование";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	
	ГраницаНачала = Новый Граница(НачалоМесяца(Дата),ВидГраницы.Включая);
	Запрос.УстановитьПараметр("ГраницаНачала", ГраницаНачала);

	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	
	Граница = Новый Граница(НачалоМесяца(Дата),ВидГраницы.Исключая);	
	Запрос.УстановитьПараметр("КонецПериода", Граница); 
	
	Возврат Запрос.Выполнить().Выгрузить();	
	
КонецФункции

 