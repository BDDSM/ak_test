//Pans 2017.08.18 ИП-00015757
// Описание:
// Функция формирует в привилигированном режиме новый элемент справочника "Банковские счета"
//
// Параметры:
// Параметры
// Тип - Структура
// Необходимые для заполнения элемента справочника значения
// 
// Возвращаемое значение:
// Тип - СправочникСсылка.БанковскиеСчета
// Ссылка на созданный банковский счет
Функция ЗаполнитьБанкСчетНаСервере(Параметры) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	СпрОбъект = Справочники.БанковскиеСчета.СоздатьЭлемент();
	СпрОбъект.УстановитьНовыйКод();
	СпрОбъект.Владелец = Параметры.ФизЛицо;
	СпрОбъект.НомерСчета = Параметры.НомерЛицевогоСчета;
	СпрОбъект.Банк = Параметры.Банк;
	//СпрОбъект.Наименование = Параметры.НаименованиеБанка + " (" + Параметры.НомерЛицевогоСчета + ")";
	СпрОбъект.Наименование = СокрЛП(СпрОбъект.НомерСчета) + ", " + СокрЛП(СпрОбъект.Банк.Наименование);
	СпрОбъект.ВидСчета = "Лицевой";
	СпрОбъект.СчетУчета = ПланыСчетов.Финансовый.Банк;
	СпрОбъект.ВалютаДенежныхСредств = Параметры.Валюта;
	СпрОбъект.ДопИнформация = "Загружено из ЗУП-а " + ТекущаяДатаСеанса();
	СпрОбъект.ОбменДанными.Загрузка = Истина;	
	СпрОбъект.Записать();
	УстановитьПривилегированныйРежим(Ложь);
	Возврат СпрОбъект.Ссылка;
	

КонецФункции // ()

//+++АК ILIK 2018.11.26 ИП-00017956.10
Функция ВыполнитьЗапрос(ТекстЗапроса, ЗначенияПараметров) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	СтруктураВозврата = Новый Структура("Результат, ОписаниеОшибки");
	Попытка
		Запрос = Новый Запрос(ТекстЗапроса);
		
		Параметры = ЗначенияПараметров.Получить();
		Для Каждого Параметр Из Параметры Цикл
			Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
		КонецЦикла;
		
		СтруктураВозврата.Результат = Запрос.Выполнить().Выгрузить();
	Исключение
		СтруктураВозврата.ОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;
	
	Возврат Новый ХранилищеЗначения(СтруктураВозврата, Новый СжатиеДанных(9));
КонецФункции
