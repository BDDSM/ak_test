///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПОЛУЧЕНИЯ СВЕДЕНИЙ ОБ ОРГАНИЗАЦИИ

// Возвращает головную организацию для заданной организации
// Если для организации реквизит ГоловнаяОрганизация не заполнен 
// это значит, что сама организация является головной
//
// Параметры
//  Организация – СправочникСсылка.Организации
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   СправочникСсылка.Организации
//
Функция ГоловнаяОрганизация(Организация) Экспорт

	ГоловнаяОрганизация = БухгалтерскийУчетПереопределяемый.ГоловнаяОрганизация(Организация);
	Если Не ЗначениеЗаполнено(Организация) ИЛИ Не ЗначениеЗаполнено(ГоловнаяОрганизация) Тогда
		Возврат Организация;
	Иначе
		Возврат ГоловнаяОрганизация; 
	КонецЕсли;

КонецФункции 

Функция ЭтоЮрЛицо(Организация) Экспорт
	
	ЮридическоеФизическоеЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "ЮридическоеФизическоеЛицо");
	
	Возврат (ЮридическоеФизическоеЛицо <> Перечисления.ЮридическоеФизическоеЛицо.ФизическоеЛицо);

КонецФункции 

Функция ЭтоОбособленноеПодразделение(Организация) Экспорт
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Возврат БухгалтерскийУчетПереопределяемый.ОбособленноеПодразделение(Организация);
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// Возвращает список организаций, которые являются обособленными подразделениями
// того же юр.лица, к которому относится переданная организация
//
Функция ПолучитьСписокОбособленныхПодразделений(Организация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|ПОМЕСТИТЬ ТаблицаГоловнойОрганизации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Организации.Ссылка,
	|	Организации.Наименование КАК Наименование
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаГоловнойОрганизации КАК ТаблицаГоловнойОрганизации
	|		ПО Организации.ГоловнаяОрганизация = ТаблицаГоловнойОрганизации.ГоловнаяОрганизация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Наименование";
	
	СписокОП = Новый СписокЗначений;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СписокОП.Добавить(Выборка.Ссылка, Выборка.Наименование);
	КонецЦикла;
	
	Возврат СписокОП;
	
КонецФункции

// Формирует список обособленных структурных подразделений организации
//
Функция ПолучитьСписокОбособленныхПодразделенийОрганизации(Организация) Экспорт

	// Оставлена для совместимости. Следует использовать ВсяОрганизация()
	
	Возврат БухгалтерскийУчетПереопределяемый.ПолучитьСписокОбособленныхПодразделенийОрганизации(Организация);

КонецФункции 

// Возвращает перечень (фиксированный массив) всех структурных частей переданной головной организации, имеющих отдельный баланс.
// В перечень входит головная организация и все ее обособленные подразделения на выделенном балансе.
//
Функция ВсяОрганизация(Организация) Экспорт
	
	Возврат Новый ФиксированныйМассив(БухгалтерскийУчетПереопределяемый.ВсяОрганизация(Организация));
	
КонецФункции

// Функция возвращает массив с префиксами организаций в формате БП 2.0
//
Функция ПрефиксыОрганизацийБП20() Экспорт

	Возврат ОбщегоНазначенияБПВызовСервера.ПрефиксыОрганизацийБП20();

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ФУНКЦИИ ПОЛУЧЕНИЯ НАСТРОЕК

// Возвращает валюту регламентированного учета
// Если переданная в качестве параметра валюта уже заполнена - возвращает ее.
// Если валюта не передана в качестве параметра или передан пустой,
// валюту рег. учета. Если валюта рег. учета не заполнена - возвращает пустую ссылку на валюту
//
// Параметры:
// Валюта - СправочникСсылка.Валюты - Валюта, которую нужно заполнить
//
// Возвращаемое значение:
// СправочникСсылка.Валюты
//
Функция ПолучитьВалютуРегламентированногоУчета(Знач Валюта = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(Валюта) Тогда
		Возврат Константы.ВалютаРегламентированногоУчета.Получить();
	Иначе
		Возврат Валюта;
	КонецЕсли;
	
КонецФункции 

Функция ИспользоватьУправляемыеБлокировки() Экспорт

	Результат = Метаданные.РежимУправленияБлокировкойДанных <> Метаданные.СвойстваОбъектов.РежимУправленияБлокировкойДанныхПоУмолчанию.Автоматический
		И Найти(СтрокаСоединенияИнформационнойБазы(), "Srvr=") = 1;
		
	Возврат Результат;

КонецФункции 

Функция ВедетсяУчетЗарплаты() Экспорт
	
	Возврат Константы.УчетЗарплатыИКадровСредствамиБухгалтерии.Получить();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ЗНАЧЕНИЯ ДЛЯ ИНИЦИАЛИЗАЦИИ ДОКУМЕНТОВ

Функция ПодразделениеПоУмолчанию(Организация) Экспорт
	
	// Проверим, есть ли выбор: возможно, подразделение у этой организации всего одно 
	// либо пользователю доступно всего одно подразделение
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 2
	|	ПодразделенияОрганизаций.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	|ГДЕ
	|	ПодразделенияОрганизаций.Владелец = &Организация
	|	И НЕ ПодразделенияОрганизаций.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	// Проверим, не выполнил ли пользователь корректную настройку
	
	ПодразделениеЗатрат = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновноеПодразделениеОрганизации");
	
	Если ЗначениеЗаполнено(ПодразделениеЗатрат) И ПодразделениеЗатрат.Владелец = Организация Тогда
		Возврат ПодразделениеЗатрат;
	КонецЕсли;
	
	// Нельзя определить подразделение
	
	Возврат БухгалтерскийУчетПереопределяемый.ПустоеПодразделение();
	
КонецФункции

// Функция возврашает либо текущее переданное подразделение,
// если его владельцем является указанная организация, либо
// подразделение по умолчанию.
//
Функция ПолучитьПодразделениеПриИзмененииСчета(Подразделение, Организация, ПодразделениеПоУмолчанию = Неопределено) Экспорт

	Возврат ОбщегоНазначенияБПВызовСервера.ПолучитьПодразделениеПриИзмененииСчета(Подразделение, Организация, ПодразделениеПоУмолчанию);

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ФУНКЦИИ ПОЛУЧЕНИЯ СВОЙСТВ ВИДА ДЕЯТЕЛЬНОСТИ

Функция ПолучитьХарактерДеятельности(ВидаДеятельности) Экспорт

	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидаДеятельности, "ХарактерДеятельности");

КонецФункции

Функция ПолучитьНоменклатурнуюГруппу(ВидаДеятельности) Экспорт

	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидаДеятельности, "НоменклатурнаяГруппа");

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ФУНКЦИИ ПРОВЕРКИ УСТАРЕВШЕЙ ВЕРСИИ КОНФИГУРАЦИИ

Функция ВерсияПрограммыУстарела() Экспорт
	
	ДатаТекущейВерсии = Константы.ДатаТекущейВерсии.Получить();
	
	Если ЗначениеЗаполнено(ДатаТекущейВерсии) Тогда
		
		Возврат ТекущаяДата() > ДобавитьМесяц(ДатаТекущейВерсии, 2);
		
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ЭтоПодчиненныйУзелРИБ() Экспорт
	
	Возврат	ОбменДаннымиСервер.ЭтоПодчиненныйУзелРИБ()
	
КонецФункции
