// Добавляет в параметры построителя отчета использованные в отборах категории
//
// Параметры:
//	ПостроительОтчета              - Построитель, отбор которого обрабатывается, и в Параметры 
//                                    которого добавляются категории
//	СтруктураДляОтбораПоКатегориям - структура, связывающая пути к данным Отборов Построителя и 
//                                    идентицфикаторы параметров
//
// Возвращаемое значение:
//	Истина, если добавление параметров произошло успешно
//	Ложь, если есть повторный отбор по одной и той же категории.
//
// Вообще-то, повторный отбор по одной и той же категории невозможен не всегда - 
//  можно отобрать два раза с видом сравнения "не равно". Контроль возвращаемого
//  этой функцией значения отключить можно, но нужно после этого понимать,
//  что два отбора по одной категории с видом сравнения "Равно" приведут к тому,
//  что отчет окажется пустым.
//
Функция ЗадатьПараметрыОтбораПоКатегориям(ПостроительОтчета, СтруктураДляОтбораПоКатегориям) Экспорт

	Если ТипЗнч(СтруктураДляОтбораПоКатегориям) = ТипЗнч(Новый Структура) Тогда

		Для Каждого ЭлементОтбора Из ПостроительОтчета.Отбор Цикл
			//Прочищаем все, независимо от использования элемента отбора
			НазваниеПараметра = "";
			Если Найти(ЭлементОтбора.ПутьКДанным, ".") = 0 Тогда
				Если СтруктураДляОтбораПоКатегориям.Свойство(ЭлементОтбора.ПутьКДанным, НазваниеПараметра) Тогда
					Если ПостроительОтчета.Параметры.Свойство(НазваниеПараметра) Тогда
						ПостроительОтчета.Параметры.Удалить(НазваниеПараметра);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;

		Для Каждого ЭлементОтбора Из ПостроительОтчета.Отбор Цикл
			
			Если Найти(ЭлементОтбора.ПутьКДанным, ".") > 0 Тогда
				Продолжить;
			КонецЕсли;

			Если ЭлементОтбора.Использование Тогда

				ИдентификаторПараметра = "";

				Если СтруктураДляОтбораПоКатегориям.Свойство(ЭлементОтбора.ПутьКДанным, ИдентификаторПараметра) Тогда

					МассивЗначенийКатегорий = НеОпределено;

					Если НЕ ПостроительОтчета.Параметры.Свойство(ИдентификаторПараметра, МассивЗначенийКатегорий) Тогда
						МассивЗначенийКатегорий = Новый Массив;
					Иначе
						Предупреждение("Нельзя использовать несколько отборов по одной и той же категории!");
						Возврат Ложь;
					КонецЕсли;

					Если ТипЗнч(ЭлементОтбора.Значение) = ТипЗнч(Новый СписокЗначений) Тогда
						Для Каждого ЗначениеКатегории Из ЭлементОтбора.Значение Цикл
							МассивЗначенийКатегорий.Добавить(ЗначениеКатегории.Значение);
						КонецЦикла;
					Иначе
						МассивЗначенийКатегорий.Добавить(ЭлементОтбора.Значение);
					КонецЕсли;

					ПостроительОтчета.Параметры.Вставить(ИдентификаторПараметра, МассивЗначенийКатегорий);

				КонецЕсли;
				
			КонецЕсли;
				
		КонецЦикла;
	КонецЕсли;

	Возврат Истина;

КонецФункции // ЗадатьПараметрыОтбораПоКатегориям()

// Процедура выполняет открытие формы работы с категориями документа
//
// Параметры:
//  ДокументОбъект - объект редактируемого документа,
//  ФормаДокумента - форма редактируемого документа
//
Процедура ОткрытьКатегорииДокумента(ДокументОбъект, ФормаДокумента) Экспорт

	Если ДокументОбъект.ЭтоНовый() Тогда
		Вопрос = "Перед началом работы с категориями необходимо записать документ. Записать?";
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ОКОтмена);

		Если Ответ = КодВозвратаДиалога.ОК Тогда
			ФормаДокумента.ЗаписатьВФорме();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Форма = Обработки.КатегорииОбъекта.ПолучитьФорму("КатегорииОбъекта", ФормаДокумента, ДокументОбъект.Ссылка);

	Форма.НазначениеКатегорий   = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы;
	Форма.ОбъектОтбораКатегорий = ФормаДокумента.Ссылка;

	Форма.ПрочитатьЗаполнитьКатегорииОбъекта();
	Форма.Открыть();

КонецПроцедуры // ОткрытьКатегорииДокумента()

// Процедура выполняет открытие формы работы со свойствами документа
//
// Параметры:
//  ДокументОбъект - объект редактируемого документа,
//  ФормаДокумента - форма редактируемого документа
//
Процедура ОткрытьСвойстваДокумента(ДокументОбъект, ФормаДокумента) Экспорт

	Если ДокументОбъект.ЭтоНовый() Тогда
		Вопрос = "Перед началом работы со свойствами необходимо записать документ. Записать?";
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ОКОтмена);

		Если Ответ = КодВозвратаДиалога.ОК Тогда
			ФормаДокумента.ЗаписатьВФорме();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Форма = Обработки.ЗначенияСвойствОбъекта.ПолучитьФорму("ЗначенияСвойствОбъекта", ФормаДокумента, ДокументОбъект.Ссылка);

	Форма.НазначениеСвойств      = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы;
	Форма.ОбъектОтбораЗначений   = ДокументОбъект.Ссылка;
	Форма.ОбъектОтбораНазначений = ДокументОбъект.Ссылка;

	Форма.ПрочитатьЗаполнитьСвойстваИЗначения();
	Форма.Открыть();

КонецПроцедуры // ОткрытьСвойстваДокумента()

// Открывает форму основного изображения объекта.
//
// Параметры:
//
//  ФормаВладелец       – Форма – определяет форму владельца открываемой формы.
//  ОсновноеИзображение – СправочникСсылка.ХранилищеДополнительнойИнформации 
//                        – содержит ссылку на основное изображение объекта.
//  ОбъектВладелец      - СправочникСсылка.<...> - определяет владельца 
//                        открываемой формы.
//
Процедура ОткрытьФормуИзображения(ФормаВладелец, ОсновноеИзображение, ОбъектВладелец) Экспорт
	
	Если ОсновноеИзображение = Неопределено ИЛИ ОсновноеИзображение.Пустая() Тогда
			
		ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
		ДиалогОткрытияФайла.Заголовок = "Выберите файл с изображением";
		ДиалогОткрытияФайла.ПолноеИмяФайла = "";
		ДиалогОткрытияФайла.ПредварительныйПросмотр = Истина;
		ДиалогОткрытияФайла.Фильтр = РаботаСФайлами.ПолучитьФильтрИзображений();

		Если ДиалогОткрытияФайла.Выбрать() Тогда
			ВыбранноеИзображение = Новый Картинка(ДиалогОткрытияФайла.ПолноеИмяФайла, Ложь);
		Иначе
			Возврат;
		КонецЕсли;
		
		НовыйОбъект = Справочники.ХранилищеДополнительнойИнформации.СоздатьЭлемент();
		НовыйОбъект.ВидДанных = Перечисления.ВидыДополнительнойИнформацииОбъектов.Изображение;
		НовыйОбъект.Хранилище = Новый ХранилищеЗначения(ВыбранноеИзображение, Новый СжатиеДанных);
		НовыйОбъект.Объект = ОбъектВладелец;
		
		ФормаИзображения = НовыйОбъект.ПолучитьФорму("ФормаИзображенияРасширенная");
		
	Иначе
		
		ФормаИзображения = ОсновноеИзображение.ПолучитьФорму("ФормаИзображенияРасширенная");
		
	КонецЕсли;
	
	ФормаИзображения.ВладелецФормы      = ФормаВладелец;
	ФормаИзображения.РежимВыбора        = Истина;
	ФормаИзображения.ЗакрыватьПриВыборе = Ложь;
	ФормаИзображения.Открыть();
	
КонецПроцедуры // ОткрытьФормуИзображения()

// Процедура выполняет открытие формы работы с категориями справочника.
//
// Параметры:
//  СправочникОбъект - СправочникОбъект - объект редактируемого справочника.
//  ФормаСправочника - Форма - форма редактируемого справочника.
//
Процедура ОткрытьКатегорииСправочника(СправочникОбъект, ФормаСправочника) Экспорт

	Если СправочникОбъект.ЭтоНовый() Тогда
		Вопрос = "Перед началом работы с категориями необходимо записать элемент справочника. Записать?";
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ОКОтмена);

		Если Ответ = КодВозвратаДиалога.ОК Тогда
			ФормаСправочника.ЗаписатьВФорме();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Форма = Обработки.КатегорииОбъекта.ПолучитьФорму("КатегорииОбъекта", ФормаСправочника, СправочникОбъект.Ссылка);

	Форма.НазначениеКатегорий   = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочники;
	
	//Форма.ОбъектОтбораКатегорий = ФормаСправочника.Ссылка;
	Форма.ОбъектОтбораКатегорий = СправочникОбъект.Ссылка;

	Форма.ПрочитатьЗаполнитьКатегорииОбъекта();
	Форма.Открыть();

КонецПроцедуры // ОткрытьКатегорииСправочника()

// Процедура выполняет открытие формы работы со свойствами справочника.
//
// Параметры:
//  СправочникОбъект - СправочникОбъект - объект редактируемого справочника.
//  ФормаСправочника - Форма - форма редактируемого справочника.
//
Процедура ОткрытьСвойстваСправочника(СправочникОбъект, ФормаСправочника) Экспорт

	Если СправочникОбъект.ЭтоНовый() Тогда
		Вопрос = "Перед началом работы со свойствами необходимо записать элемент справочника. Записать?";
		Ответ  = Вопрос(Вопрос, РежимДиалогаВопрос.ОКОтмена);

		Если Ответ = КодВозвратаДиалога.ОК Тогда
			ФормаСправочника.ЗаписатьВФорме();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Форма = Обработки.ЗначенияСвойствОбъекта.ПолучитьФорму("ЗначенияСвойствОбъекта", ФормаСправочника, СправочникОбъект.Ссылка);

	//Форма.НазначениеСвойств      = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы;
	Форма.ОбъектОтбораЗначений   = СправочникОбъект.Ссылка;
	Форма.ОбъектОтбораНазначений = СправочникОбъект.Ссылка;

	Форма.ПрочитатьЗаполнитьСвойстваИЗначения();
	Форма.Открыть();

КонецПроцедуры // ОткрытьСвойстваДокумента()
