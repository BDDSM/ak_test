//+++АК ZHAS 10-11-17 ИП-00016978.010.00000001
Функция ПолучитьСообщенияСПочтовогоЯщика(ДатаПолучения = Неопределено, ПоДню = Ложь, НеПолучатьПочту = Ложь) Экспорт
	Если ДатаПолучения = Неопределено Тогда
		ДатаПолучения = НачалоДня(ТекущаяДата());
	КонецЕсли;
	Если НЕ НеПолучатьПочту Тогда
		УчетнаяЗаписьЭлектроннойПочты = ПолучитьУчетнуюЗаписьПоАдресу("vkusvill@it-stuff.ru");
		Почта 						= Новый ИнтернетПочта;
		Профиль 					= Новый ИнтернетПочтовыйПрофиль;
		Профиль.Пользователь 		= УчетнаяЗаписьЭлектроннойПочты.Логин;
		Профиль.ПользовательSMTP 	= УчетнаяЗаписьЭлектроннойПочты.Логин;
		Профиль.ПользовательIMAP 	= УчетнаяЗаписьЭлектроннойПочты.Логин;
		Профиль.Пароль 				= УчетнаяЗаписьЭлектроннойПочты.Пароль;
		Профиль.ПарольSMTP 			= УчетнаяЗаписьЭлектроннойПочты.Пароль;
		Профиль.ПарольIMAP 			= УчетнаяЗаписьЭлектроннойПочты.Пароль;
		Профиль.ПарольIMAP 			= УчетнаяЗаписьЭлектроннойПочты.Пароль;
		Профиль.ПортIMAP 			= УчетнаяЗаписьЭлектроннойПочты.ПортPOP3;
		Профиль.ПортPOP3 			= УчетнаяЗаписьЭлектроннойПочты.ПортPOP3;
		Профиль.АутентификацияSMTP = СпособSMTPАутентификации.БезАутентификации;
		ФорматированныйДокумент 	= Новый ФорматированныйДокумент;
		КартинкиФорматДок 			= Новый Структура();
		//------------------------------------------------------------------------
		Профиль.Пользователь 		= "vkusvill@it-stuff.ru";
		Профиль.ПользовательSMTP 	= "vkusvill@it-stuff.ru";
		Профиль.ПользовательIMAP 	= "vkusvill@it-stuff.ru";
		Профиль.Пароль 				= "s539Ti11";
		Профиль.ПарольSMTP 			= "s539Ti11";
		Профиль.ПарольIMAP 			= "s539Ti11";
		Профиль.ПортIMAP 			= 993;
		Профиль.ИспользоватьSSLIMAP = Истина;
		Профиль.Таймаут 			= 1000;
		Профиль.АдресСервераIMAP 	= "imap.gmail.com";
		Почта.Подключиться(Профиль, ПротоколИнтернетПочты.IMAP);
		Попытка
			//НужныйЗаголовок 		= "RVV823_";
			
			//ТемаОтбора = "#RVV800_22259aa8-3cba-4eb7-bf53-35a83a7488bf#";
			//МассивЗаголовковПисем = Почта.ПолучитьЗаголовки(Новый Структура("Тема", ТемаОтбора));
			//Сообщить(МассивЗаголовковПисем.Количество());
			//Возврат Неопределено;
			
			Если НЕ ПоДню Тогда
				ДатаПоследнегоПисьма = ДатаПолучения - 60*60*24;
				МассивЗаголовковПисем = Почта.ПолучитьЗаголовки(Новый Структура("ПослеДатыОтправления", ДатаПоследнегоПисьма));
			Иначе
				ДатаПоследнегоПисьма = ДатаПолучения;
				МассивЗаголовковПисем = Почта.ПолучитьЗаголовки(Новый Структура("ДатаОтправления", ДатаПоследнегоПисьма));
			КонецЕсли;
			//МассивЗаголовковПисем = Почта.ПолучитьЗаголовки();
			//МассивЗаголовковДляЗагрузки = Новый Массив;
			Если МассивЗаголовковПисем.Количество() = 0 Тогда
				Почта.Отключиться();
				Возврат 0;
			КонецЕсли;
			//Для Каждого Строка ИЗ МассивЗаголовковПисем Цикл
			//	Если СтрЧислоВхождений(Строка.Тема, НужныйЗаголовок) > 0 Тогда
			//		МассивЗаголовковДляЗагрузки.Добавить(Строка);
			//	КонецЕсли;
			//КонецЦикла;
			Письма = Почта.Выбрать(Ложь, МассивЗаголовковПисем, Истина);
			
			КвоЗаписей = Письма.ВГраница();                          
			Если КвоЗаписей = -1 Тогда 
				Возврат 0; 
			КонецЕсли;
			
			Для Сч = 0 По КвоЗаписей Цикл
				Письмо 								= Письма[КвоЗаписей - Сч];
				ТемаПисьма 							= Письмо.Тема;
				
				REF_ = "";
				MID = "";
				IRT = "";
				
				Если Найти(Письмо.Заголовок, "References") > 0 Тогда
					REF_ = Сред(Письмо.Заголовок, Найти(Письмо.Заголовок, "References") + 13, 36);
				Иначе
					REF_ = "";
				КонецЕсли;
				Если Найти(Письмо.Заголовок, "Message-Id") > 0 Тогда
					MID = Сред(Письмо.Заголовок, Найти(Письмо.Заголовок, "Message-Id") + 13, 36);
				Иначе
					MID = "";
				КонецЕсли;
				Если Найти(Письмо.Заголовок, "In-Reply-To") > 0 Тогда	
					IRT = Сред(Письмо.Заголовок, Найти(Письмо.Заголовок, "In-Reply-To") + 14, 36);
				Иначе
					IRT = "";
				КонецЕсли;
				
				ТекстПисьмаПростой 					= "";
				Текст_ХТМЛ = "";
				//Сообщить("Письмо №" + (Сч + 1));
				Для Каждого ТекстПисьма Из Письмо.Тексты Цикл
					Если ТекстПисьма.ТипТекста 		= ТипТекстаПочтовогоСообщения.ПростойТекст Тогда
						ТекстПисьмаПростой 			= СокрЛП(ТекстПисьма.Текст);
						//Сообщить("Простой");
						//Прервать;
					ИначеЕсли ТекстПисьма.ТипТекста = ТипТекстаПочтовогоСообщения.HTML Тогда
						Текст_ХТМЛ = ТекстПисьма.Текст;
						ФорматированныйДокумент.УстановитьHTML(ТекстПисьма.Текст, КартинкиФорматДок);
						ТекстПисьмаПростой 			= СокрЛП(ФорматированныйДокумент.ПолучитьТекст());
						//Сообщить("ХТМЛ");
						Прервать;
					КонецЕсли;
				КонецЦикла;  
				
				//Продолжить;
				
				Отправка = Ложь;
				Отправка = Истина;
				Если Отправка Тогда

					НужныйЗаголовок_1 		= "RVV823_";
					НужныйЗаголовок_2 		= "RVV829_";
					
					Поз_823 = Найти(Письмо.Тема, "#RVV823_");
					Поз_829 = Найти(Письмо.Тема, "#RVV829_");
					
					НужныйЗаголовок_1 		= "RVV823_";
					НужныйЗаголовок_2 		= "RVV829_";
					НужныйЗаголовок_3 		= "RVV800_";
					
					Поз_823 = Найти(Письмо.Тема, "#RVV823_");
					Поз_829 = Найти(Письмо.Тема, "#RVV829_");
					Поз_800 = Найти(Письмо.Тема, "#RVV800_");
					
					Попытка
						МенеджерЗаписи 							= РегистрыСведений.ЛогиПисемGMAIL.СоздатьМенеджерЗаписи();
						МенеджерЗаписи.GUID_Загрузки 			= MID;
						МенеджерЗаписи.IRT 						= IRT;
						МенеджерЗаписи.MID 						= MID;
						МенеджерЗаписи.ДатаОтправки 			= Письмо.ДатаОтправления;
						МенеджерЗаписи.ИдентификаторСообщения 	= Письмо.ИдентификаторСообщения;
						МенеджерЗаписи.ДатаПолучения 			= ТекущаяДата();
						МенеджерЗаписи.email 					= Письмо.Отправитель.Адрес;
						МенеджерЗаписи.text_email	 			= ТекстПисьмаПростой;
						МенеджерЗаписи.ТемаПисьма				= Письмо.Тема;
						МенеджерЗаписи.Заархивировано			= Ложь;
						
						//МенеджерЗаписи.Параметр_1				= Текст_ХТМЛ;
						МенеджерЗаписи.Параметр_2				= Текст_ХТМЛ;
						//МенеджерЗаписи.Параметр_2				= Текст_ХТМЛ;
						//МенеджерЗаписи.Параметр_3				= Новый ХранилищеЗначения(Текст_ХТМЛ);

						
						Если СтрЧислоВхождений(Письмо.Тема, НужныйЗаголовок_1) <> 0 Тогда
							Отчет_823 = Истина;
							МенеджерЗаписи.ID_Отчета = 823;
							МенеджерЗаписи.UID = Сред(Письмо.Тема, Поз_823 + 8, 36);
						ИначеЕсли СтрЧислоВхождений(Письмо.Тема, НужныйЗаголовок_2) <> 0 Тогда
							Отчет_829 = Истина;
							МенеджерЗаписи.ID_Отчета = 829;
							МенеджерЗаписи.UID = Сред(Письмо.Тема, Поз_829 + 8, 36);
							
							
						ИначеЕсли СтрЧислоВхождений(Письмо.Тема, НужныйЗаголовок_3) <> 0 Тогда
							Отчет_800 = Истина;
							МенеджерЗаписи.ID_Отчета = 800;
							МенеджерЗаписи.UID = Сред(Письмо.Тема, Поз_800 + 8, 36);
							
							
							
						Иначе
							МенеджерЗаписи.ID_Отчета = 0;
						КонецЕсли;
						
						МенеджерЗаписи.Записать();
					Исключение
						Сообщить(ОписаниеОшибки());
					КонецПопытки;
					
				КонецЕсли;
			КонецЦикла;
		Исключение
			Сообщить(ОписаниеОшибки());
			ТекстОшибки = "Не удалось прочитать заголовки писем. Ошибка: " + ОписаниеОшибки();
			Сообщить(ТекстОшибки);
		КонецПопытки;
		Почта.Отключиться();
	КонецЕсли;
	Insert_or_UpdateНажатие(Неопределено);
КонецФункции // ()

Процедура Insert_or_UpdateНажатие(Чтото) Экспорт 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЛогиПисемGMAIL.ИдентификаторСообщения,
	|	ЛогиПисемGMAIL.email,
	|	ЛогиПисемGMAIL.ДатаОтвета,
	|	ЛогиПисемGMAIL.GUID_Связи,
	|	ЛогиПисемGMAIL.UIDTelegram,
	|	ЛогиПисемGMAIL.REF,
	|	ЛогиПисемGMAIL.MID,
	|	ЛогиПисемGMAIL.IRT,
	|	ЛогиПисемGMAIL.Отработано,
	|	ЛогиПисемGMAIL.Акцептировано,
	|	ЛогиПисемGMAIL.Отклонено,
	|	ЛогиПисемGMAIL.ИдентификаторЗаявки,
	|	ЛогиПисемGMAIL.ОтправленаНаАкцепт,
	|	ЛогиПисемGMAIL.ТипЗаявки,
	|	ЛогиПисемGMAIL.UID,
	|	ЛогиПисемGMAIL.text_email,
	|	ЛогиПисемGMAIL.ТемаПисьма,
	|	ЛогиПисемGMAIL.ДатаПолучения,
	|	ЛогиПисемGMAIL.GUID_Заявки,
	|	ЛогиПисемGMAIL.Акцептант,
	|	ЛогиПисемGMAIL.ЗаявкаНаУслугиМатериалы,
	|	ЛогиПисемGMAIL.ДатаОтправки,
	|	ЛогиПисемGMAIL.GUID_Загрузки,
	|	ЛогиПисемGMAIL.id_OK,
	|	ЛогиПисемGMAIL.ID_Отчета,
	|	ЛогиПисемGMAIL.Параметр_2
	|ИЗ
	|	РегистрСведений.ЛогиПисемGMAIL КАК ЛогиПисемGMAIL
	|ГДЕ
	|	НЕ ЛогиПисемGMAIL.Заархивировано
	|	И 
	|	(ЛогиПисемGMAIL.ID_Отчета = 823
	|			ИЛИ ЛогиПисемGMAIL.ID_Отчета = 829
	|			ИЛИ ЛогиПисемGMAIL.ID_Отчета = 800)";
	
	Запрос.УстановитьПараметр("ДатаПолучения", НачалоДня(ТекущаяДата()) - 60 * 60 * 24 * 10);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	мСоединение = АДОКоннекшн_СоздатьОбъект();
	Если 0 = АДОДБ_УстановитьСоединение(мСоединение) Тогда
		Сообщить("Не удалось подключиться...", 30);
		Возврат;
	КонецЕсли; 
	
	Кол = ВыборкаДетальныеЗаписи.Количество();
	
	
	
	ТаблицаОтветаТехнолога = Новый ТаблицаЗначений;
	ТаблицаОтветаТехнолога.Колонки.Добавить("Поз");
	ТаблицаОтветаТехнолога.Колонки.Добавить("Магазин");
	ТаблицаОтветаТехнолога.Колонки.Добавить("ДатаПартии");
	ТаблицаОтветаТехнолога.Колонки.Добавить("ПлохойРезультат");
	ТаблицаОтветаТехнолога.Колонки.Добавить("ХорошоийРезультат");
	ТаблицаОтветаТехнолога.Колонки.Добавить("РольТехнолога");
	ТаблицаОтветаТехнолога.Колонки.Добавить("Время");
	ТаблицаОтветаТехнолога.Колонки.Добавить("Сотрудник");
	ТаблицаОтветаТехнолога.Колонки.Добавить("Параметр_2");
	ТаблицаОтветаТехнолога.Колонки.Добавить("ИдентификаторСообщения");
	ТаблицаОтветаТехнолога.Колонки.Добавить("ДатаОтвета");
	ТаблицаОтветаТехнолога.Колонки.Добавить("ТемаПисьма");
	
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		
		
		#Если Клиент Тогда
			Состояние(Кол);
			
			Кол = Кол - 1;
			ОбработкаПрерыванияПользователя();
		#КонецЕсли
		
		
		
		Кол 		= Кол -1;
		email_uid 	= ВыборкаДетальныеЗаписи.UID;
		date_email	= ВыборкаДетальныеЗаписи.ДатаОтправки;
		email_from	= ВыборкаДетальныеЗаписи.email;
		text_email	= ВыборкаДетальныеЗаписи.text_email;
		text_email 	= СтрЗаменить(text_email, "'", "");
		
		subject		= ВыборкаДетальныеЗаписи.ТемаПисьма;
		subject 	= СтрЗаменить(subject, "'", "");
		guid_gmail	= ВыборкаДетальныеЗаписи.ИдентификаторСообщения; //"MID";
		
		
		Поз = 1;
		
		
		Если ВыборкаДетальныеЗаписи.ID_Отчета = 800 Тогда
			
			//+++АК malv перенёс внутрь условия
			text_email 	= СтрЗаменить(text_email, "<", "");
			text_email 	= СтрЗаменить(text_email, ">", "");
			
			
			text_email 	= СтрЗаменить(text_email, "С уважением", "С ув-м");
			text_email 	= СтрЗаменить(text_email, "Отправлено", "От-но");
			text_email 	= СтрЗаменить(text_email, "--", "__");
			
			ТаблицаОтветаТехнолога.Очистить();
			
			///////////////////////////////////////////
			
			Текст 	= ВыборкаДетальныеЗаписи.Параметр_2;
			Тема	= ВыборкаДетальныеЗаписи.ТемаПисьма;
			ПозТехнолог 	= Найти(Тема, "RVVTYPE_1");
			ПозВремя		= Найти(Тема, "RVVTYPE_2");
			ПозТип			= Найти(Тема, "RVVTYPE_3");
			ПозТехнолог_	= Сред(Тема, ПозТехнолог, ПозВремя - ПозТехнолог);
			ПозВремя_		= Сред(Тема, ПозВремя, ПозТип - ПозВремя);
			ПозТип_			= Сред(Тема, ПозТип, СтрДлина(Тема) - ПозВремя);
			Поз 	= Найти(Текст, "<td>№ п/п</td><td>Магазин ТТ</td><td>Дата партии</td><td>Плохой результат</td><td>Хороший результат</td>");
			Длина 	= СтрДлина(Текст);
			ТаблицаОтвета = Прав(Текст, Длина - Поз);
			ПозКонец = Найти(ТаблицаОтвета, "</table>");
			ТаблицаОтвета = Лев(ТаблицаОтвета, ПозКонец - 1);
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, "td>№ п/п</td><td>Магазин ТТ</td><td>Дата партии</td><td>Плохой результат</td><td>Хороший результат</td></tr>", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, "</tbody>", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, "</td>", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, "</tr>", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, "<tr>", Символы.ПС);
			
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC11#1""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC12#1""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC13#1""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC14#1""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC15#1""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC21#2""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC22#2""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC23#2""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC24#2""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC25#2""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC31#2""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC32#2""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC33#2""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC34#2""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC35#2""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC41#2""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC42#2""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC43#2""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC44#2""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC45#2""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC51#2""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC52#2""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC53#2""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC54#2""", "");
			ТаблицаОтвета = СтрЗаменить(ТаблицаОтвета, " id=""ABC55#2""", "");
			
			МассивСтрок = Новый Массив;
			Для Инд = 2 По 7 Цикл
				Строка = СтрПолучитьСтроку(ТаблицаОтвета, Инд);
				Строка = СтрЗаменить(Строка, "<td>", Символы.ПС);
				Стр = ТаблицаОтветаТехнолога.Добавить();
				Для Инд1 = 2 По 6 Цикл
					Стр[Инд1 - 2] 			= СтрПолучитьСтроку(Строка, Инд1);;
				КонецЦикла;
				Стр.РольТехнолога 			= ПозТехнолог_;
				Стр.Время 					= ПозВремя_;
				Стр.Сотрудник       		= ПозТип_;
				Стр.Параметр_2				= Текст;
				Стр.ИдентификаторСообщения 	= ВыборкаДетальныеЗаписи.ИдентификаторСообщения;
				Стр.ДатаОтвета 				= ВыборкаДетальныеЗаписи.ДатаОтвета;
				Стр.ТемаПисьма				= ВыборкаДетальныеЗаписи.ТемаПисьма;
				
				Стр_ДатаПартии 				= Стр.ДатаПартии;
				Стр_ДатаПартии				= СтрЗаменить(Стр_ДатаПартии, "&nbsp;", "");
				
				
				Дата = Дата(2013, 07, 24); // 24.07.2013
				
				Поз 						= Стр.Поз;
				
				Если НЕ ЗначениеЗаполнено(Стр.Магазин) Тогда
					Продолжить;
				КонецЕсли;
				
				
				
				Попытка
					rs = мСоединение.Execute("exec SMS_REPL..List_answer_emails_insert_or_update @email_uid ="
					+ ФорматПоля(email_uid) 
					
					
					+ ", @Poz = "
					+ ФорматПоля(Поз)
					
					+ ", @date_email = " 
					+ ФорматПоля(date_email)
					
					
					+ ", @email_from = " 
					+ ФорматПоля(email_from)
					+ ", @text_email = " 
					+ ФорматПоля(text_email)
					+ ", @subject = " 
					+ ФорматПоля(subject)
					+ ", @gui_gmail = " 
					+ ФорматПоля(guid_gmail)
					
					
					
					
					+ ", @magazin = "
					+ ФорматПоля(Стр.Магазин)
					
					+ ", @data_partii = "
					+ ФорматПоля(Стр_ДатаПартии)
					
					+ ", @bad_result = "
					+ ФорматПоля(Стр.ПлохойРезультат)
					+ ", @good_result = "
					+ ФорматПоля(Стр.ХорошоийРезультат)
					
					
					
					
					);
					МенеджерЗаписи = РегистрыСведений.ЛогиПисемGMAIL.СоздатьМенеджерЗаписи();
					МенеджерЗаписи.ИдентификаторСообщения = ВыборкаДетальныеЗаписи.ИдентификаторСообщения;
					МенеджерЗаписи.Прочитать();
					МенеджерЗаписи.Заархивировано = Истина;
					//МенеджерЗаписи.ТекстПисьма = Новый ХранилищеЗначения(МенеджерЗаписи.text_email, Новый СжатиеДанных(9));
					//МенеджерЗаписи.text_email = "";
					МенеджерЗаписи.Записать();
					МенеджерЗаписи = Неопределено;
				Исключение
					Сообщить("exec SMS_REPL..List_answer_emails_insert_or_update @email_uid ="
					+ ФорматПоля(email_uid) 
					+ ", @date_email = " 
					+ ФорматПоля(date_email)
					+ ", @email_from = " 
					+ ФорматПоля(email_from)
					+ ", @text_email = " 
					+ ФорматПоля(text_email)
					+ ", @subject = " 
					+ ФорматПоля(subject)
					+ ", @gui_gmail = " 
					+ ФорматПоля(guid_gmail)
					);
					Сообщить(ОписаниеОшибки());
					//мСоединение.Close();
				КонецПопытки;
				
				
				
				
			КонецЦикла;
			
			
			
			///////////////////////////////////////////
			//КонецЕсли;
			
			
			
		Иначе
			
			Попытка
				rs = мСоединение.Execute("exec SMS_REPL..List_answer_emails_insert_or_update @email_uid ="
				+ ФорматПоля(email_uid) 
				+ ", @date_email = " 
				+ ФорматПоля(date_email)
				+ ", @email_from = " 
				+ ФорматПоля(email_from)
				+ ", @text_email = " 
				+ ФорматПоля(text_email)
				+ ", @subject = " 
				+ ФорматПоля(subject)
				+ ", @gui_gmail = " 
				+ ФорматПоля(guid_gmail)
				);
				МенеджерЗаписи = РегистрыСведений.ЛогиПисемGMAIL.СоздатьМенеджерЗаписи();
				МенеджерЗаписи.ИдентификаторСообщения = ВыборкаДетальныеЗаписи.ИдентификаторСообщения;
				МенеджерЗаписи.Прочитать();
				МенеджерЗаписи.Заархивировано = Истина;
				//МенеджерЗаписи.ТекстПисьма = Новый ХранилищеЗначения(МенеджерЗаписи.text_email, Новый СжатиеДанных(9));
				//МенеджерЗаписи.text_email = "";
				МенеджерЗаписи.Записать();
				МенеджерЗаписи = Неопределено;
			Исключение
				Сообщить("exec SMS_REPL..List_answer_emails_insert_or_update @email_uid ="
				+ ФорматПоля(email_uid) 
				+ ", @date_email = " 
				+ ФорматПоля(date_email)
				+ ", @email_from = " 
				+ ФорматПоля(email_from)
				+ ", @text_email = " 
				+ ФорматПоля(text_email)
				+ ", @subject = " 
				+ ФорматПоля(subject)
				+ ", @gui_gmail = " 
				+ ФорматПоля(guid_gmail)
				);
				Сообщить(ОписаниеОшибки());
				//мСоединение.Close();
			КонецПопытки;
			
		КонецЕсли;
	КонецЦикла;
	ОБщегоНазначения.СообщитьОбОшибке("Операция завершена успешно.", , , СтатусСообщения.Информация);
	мСоединение.Close();
КонецПроцедуры

Процедура Insert_or_UpdateНажатие_(Чтото) Экспорт 
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЛогиПисемGMAIL.ИдентификаторСообщения,
	|	ЛогиПисемGMAIL.email,
	|	ЛогиПисемGMAIL.ДатаОтвета,
	|	ЛогиПисемGMAIL.GUID_Связи,
	|	ЛогиПисемGMAIL.UIDTelegram,
	|	ЛогиПисемGMAIL.REF,
	|	ЛогиПисемGMAIL.MID,
	|	ЛогиПисемGMAIL.IRT,
	|	ЛогиПисемGMAIL.Отработано,
	|	ЛогиПисемGMAIL.Акцептировано,
	|	ЛогиПисемGMAIL.Отклонено,
	|	ЛогиПисемGMAIL.ИдентификаторЗаявки,
	|	ЛогиПисемGMAIL.ОтправленаНаАкцепт,
	|	ЛогиПисемGMAIL.ТипЗаявки,
	|	ЛогиПисемGMAIL.UID,
	|	ЛогиПисемGMAIL.text_email,
	|	ЛогиПисемGMAIL.ТемаПисьма,
	|	ЛогиПисемGMAIL.ДатаПолучения,
	|	ЛогиПисемGMAIL.GUID_Заявки,
	|	ЛогиПисемGMAIL.Акцептант,
	|	ЛогиПисемGMAIL.ЗаявкаНаУслугиМатериалы,
	|	ЛогиПисемGMAIL.ДатаОтправки,
	|	ЛогиПисемGMAIL.GUID_Загрузки,
	|	ЛогиПисемGMAIL.id_OK,
	|	ЛогиПисемGMAIL.ID_Отчета
	|ИЗ
	|	РегистрСведений.ЛогиПисемGMAIL КАК ЛогиПисемGMAIL
	|ГДЕ
	|	НЕ ЛогиПисемGMAIL.Заархивировано
	|	И (ЛогиПисемGMAIL.ID_Отчета = 823 ИЛИ ЛогиПисемGMAIL.ID_Отчета = 829 ИЛИ ЛогиПисемGMAIL.ID_Отчета = 800)";
	
	Запрос.УстановитьПараметр("ДатаПолучения", НачалоДня(ТекущаяДата()) - 60 * 60 * 24 * 10);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	мСоединение = АДОКоннекшн_СоздатьОбъект();
	Если 0 = АДОДБ_УстановитьСоединение(мСоединение) Тогда
		Сообщить("Не удалось подключиться...", 30);
		Возврат;
	КонецЕсли; 
	
	Кол = ВыборкаДетальныеЗаписи.Количество();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Кол 		= Кол -1;
		email_uid 	= ВыборкаДетальныеЗаписи.UID;
		date_email	= ВыборкаДетальныеЗаписи.ДатаОтправки;
		email_from	= ВыборкаДетальныеЗаписи.email;
		text_email	= ВыборкаДетальныеЗаписи.text_email;
		text_email 	= СтрЗаменить(text_email, "'", "");
		
		text_email 	= СтрЗаменить(text_email, "<", "");
		text_email 	= СтрЗаменить(text_email, ">", "");
		
		
		text_email 	= СтрЗаменить(text_email, "С уважением", "С ув-м");
		text_email 	= СтрЗаменить(text_email, "Отправлено", "От-но");
		text_email 	= СтрЗаменить(text_email, "--", "__");

		
		
		subject		= ВыборкаДетальныеЗаписи.ТемаПисьма;
		subject 	= СтрЗаменить(subject, "'", "");
		guid_gmail	= ВыборкаДетальныеЗаписи.ИдентификаторСообщения; //"MID";
		
		Попытка
			rs = мСоединение.Execute("exec SMS_REPL..List_answer_emails_insert_or_update @email_uid ="
			+ ФорматПоля(email_uid) 
			+ ", @date_email = " 
			+ ФорматПоля(date_email)
			+ ", @email_from = " 
			+ ФорматПоля(email_from)
			+ ", @text_email = " 
			+ ФорматПоля(text_email)
			+ ", @subject = " 
			+ ФорматПоля(subject)
			+ ", @gui_gmail = " 
			+ ФорматПоля(guid_gmail)
			);
			МенеджерЗаписи = РегистрыСведений.ЛогиПисемGMAIL.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.ИдентификаторСообщения = ВыборкаДетальныеЗаписи.ИдентификаторСообщения;
			МенеджерЗаписи.Прочитать();
			МенеджерЗаписи.Заархивировано = Истина;
			//МенеджерЗаписи.ТекстПисьма = Новый ХранилищеЗначения(МенеджерЗаписи.text_email, Новый СжатиеДанных(9));
			//МенеджерЗаписи.text_email = "";
			МенеджерЗаписи.Записать();
			МенеджерЗаписи = Неопределено;
		Исключение
			Сообщить("exec SMS_REPL..List_answer_emails_insert_or_update @email_uid ="
			+ ФорматПоля(email_uid) 
			+ ", @date_email = " 
			+ ФорматПоля(date_email)
			+ ", @email_from = " 
			+ ФорматПоля(email_from)
			+ ", @text_email = " 
			+ ФорматПоля(text_email)
			+ ", @subject = " 
			+ ФорматПоля(subject)
			+ ", @gui_gmail = " 
			+ ФорматПоля(guid_gmail)
			);
			Сообщить(ОписаниеОшибки());
			//мСоединение.Close();
		КонецПопытки;
	КонецЦикла;
	ОБщегоНазначения.СообщитьОбОшибке("Операция завершена успешно.", , , СтатусСообщения.Информация);
	мСоединение.Close();
КонецПроцедуры

Функция ФорматПоля(Поле)
	
	Если ТипЗнч(Поле) = Тип("Дата") Тогда
		Возврат "'" + Формат(Поле, "ДФ=yyyy-MM-ddTHH:mm:ss") + "'";
	ИначеЕсли ТипЗнч(Поле) = Тип("Строка") Тогда
		мПоле = ОткуситьОпределения(Поле);
		Если Лев(мПоле,2)="$$" Тогда
			Возврат Сред(ОткуситьОпределения(мПоле),3)
		Иначе
			Возврат "'" + ОткуситьОпределения(мПоле) + "'";
		КонецЕсли
	ИначеЕсли ТипЗнч(Поле) = Тип("Число") Тогда
		Возврат Формат(Поле, "ЧРД=.; ЧН=; ЧГ=0");
	ИначеЕсли ТипЗнч(Поле) = Тип("Булево") Тогда
		Возврат ?(Поле = Истина, 1, 0);
	КонецЕсли;
	
КонецФункции

Функция АДОДБ_УстановитьСоединение(Соединение, БД = "SMS_IZBENKA") Экспорт
	
	Строка = ВнешниеДанные.ПолучитьСтрокуСоединенияSQL(,,БД,,,"LANGUAGE=русский");
	
	Возврат Соединение.Open(Строка);
	
КонецФункции // АДОДБ_УстановитьСоединение()

Функция АДОКоннекшн_СоздатьОбъект() Экспорт
	
	ADOСоединение = New ComObject("ADODB.Connection"); 
	ADOСоединение.CommandTimeOut    = 0;
	ADOСоединение.ConnectionTimeOut = 0;
	
	Возврат ADOСоединение;
	
КонецФункции    // АДОКоннекшн_СоздатьОбъект

Функция ПолучитьУчетнуюЗаписьПоАдресу(АдресЭлектроннойПочты) Экспорт      
	Запрос1 = Новый Запрос;
	Запрос1.Текст = 
	"ВЫБРАТЬ
	|	УчетныеЗаписиЭлектроннойПочты.Ссылка
	|ИЗ
	|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
	|ГДЕ
	|	УчетныеЗаписиЭлектроннойПочты.ПометкаУдаления = ЛОЖЬ
	|	И УчетныеЗаписиЭлектроннойПочты.АдресЭлектроннойПочты = &АдресЭлектроннойПочты
	|
	|УПОРЯДОЧИТЬ ПО
	|	УчетныеЗаписиЭлектроннойПочты.Код УБЫВ";
	
	Запрос1.УстановитьПараметр("АдресЭлектроннойПочты", СокрЛП(АдресЭлектроннойПочты));
	
	Рез1 = Запрос1.Выполнить();
	Если Рез1.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выб1 = Рез1.Выбрать();
		Выб1.Следующий();
		Возврат Выб1.Ссылка;
	КонецЕсли;
КонецФункции // ()

//+++АК malv 20180120 продолжаем вводить в пром чудо-переписку
//
Функция ОткуситьОпределения(Знач Поле) Экспорт
	//Приведем строку вида "<Style ...>Наш текст </Style>" к виду "Нач текст"
	//Учтем, что часть определений могли потерять-забыть при обработке ранее, поэтому ХТМЛ не рулит
	
	Поле = СтрЗаменить(Поле, "&nbsp;", ""); //НПП
	
	Если НЕ СтрЧислоВхождений(Поле, "<") = СтрЧислоВхождений(Поле, ">") Тогда
		//Количество открывающих-закрывающих скобок разное - можем нарубить лапши
		Возврат Поле;
	КонецЕсли;
	
	Пока Истина Цикл
		НачалоОпределения = Найти(Поле, "<");
		КонецОпределения = Найти(Поле, ">");
		ДлинаОпределения = КонецОпределения - НачалоОпределения;
		Если ДлинаОпределения <= 0 Тогда
			Возврат Поле;
		КонецЕсли;
		
		Поле = 
			Лев(Поле, НачалоОпределения - 1) + //часть до определения
			Прав(Поле, СтрДлина(Поле) - КонецОпределения); //часть после определения
		
	КонецЦикла; 
КонецФункции

//+++АК ZHAS 10-11-17 ИП-00016978.010.00000001
