
Процедура НачатьЗамерSQLЗапроса(ДатаНачала, Шаг, ТекстЗапроса = "", ТочкаВызова = "", ОбъектВызвавший = "", Событие = "", ДопКлюч = 0) Экспорт
	
	Попытка
		Запись = РегистрыСведений.ЗамерыSqlЗапросов.СоздатьМенеджерЗаписи();
		Если Не ЗначениеЗаполнено(Событие) Тогда
			Запись.Событие = ПараметрыСеанса.ЗамерПроизводительности_ИмяСобытия;
		Иначе
			Запись.Событие = Событие;
		КонецЕсли;	
		Запись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
		Запись.ДатаНачала = ДатаНачала;
		Запись.ДатаНачалаДень = ДатаНачала;
		Запись.Шаг = Шаг;
		Если Не ЗначениеЗаполнено(ДопКлюч) Тогда
			Запись.ДополнительныйКлюч = ПараметрыСеанса.ЗамерПроизводительности_ДопКлюч;
		Иначе
			Запись.ДополнительныйКлюч = ДопКлюч;
		КонецЕсли;	
		Запись.ТекстЗапроса = ТекстЗапроса;
		Запись.ТочкаВызова = ТочкаВызова;
		Запись.ОбъектВызвавший = ОбъектВызвавший;
		Если ЗначениеЗаполнено(ПараметрыСеанса.ТорговаяТочкаПоАйпи) Тогда
			Запись.НомерМагазина = ПараметрыСеанса.НомерТочкиПоАйпи;
		КонецЕсли;	
		Запись.Записать();
	Исключение
	КонецПопытки;	
	
КонецПроцедуры

Процедура ЗакончитьЗамерSQLЗапроса(Шаг, Событие = "", ДопКлюч = 0, ВремяОкончания = '00010101') Экспорт
	
	Попытка
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
		Если Не ЗначениеЗаполнено(ДопКлюч) Тогда
			Запрос.УстановитьПараметр("ДополнительныйКлюч", ПараметрыСеанса.ЗамерПроизводительности_ДопКлюч);
		Иначе
			Запрос.УстановитьПараметр("ДополнительныйКлюч", ДопКлюч);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Событие) Тогда
			Запрос.УстановитьПараметр("Событие", ПараметрыСеанса.ЗамерПроизводительности_ИмяСобытия);
		Иначе
			Запрос.УстановитьПараметр("Событие", Событие);
		КонецЕсли;
		Запрос.УстановитьПараметр("Шаг", Шаг);
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЗамерыSqlЗапросов.Пользователь,
		               |	ЗамерыSqlЗапросов.ДатаНачала,
		               |	ЗамерыSqlЗапросов.ДополнительныйКлюч,
		               |	ЗамерыSqlЗапросов.ДатаНачалаДень,
		               |	ЗамерыSqlЗапросов.Событие,
		               |	ЗамерыSqlЗапросов.Шаг,
		               |	ЗамерыSqlЗапросов.ДатаОкончания,
		               |	ЗамерыSqlЗапросов.ТекстЗапроса,
		               |	ЗамерыSqlЗапросов.ТочкаВызова,
		               |	ЗамерыSqlЗапросов.ВремяВыполнения,
		               |	ЗамерыSqlЗапросов.ОбъектВызвавший,
		               |	ЗамерыSqlЗапросов.НомерМагазина
		               |ИЗ
		               |	РегистрСведений.ЗамерыSqlЗапросов КАК ЗамерыSqlЗапросов
		               |ГДЕ
		               |	ЗамерыSqlЗапросов.Пользователь = &Пользователь
		               |	И ЗамерыSqlЗапросов.ДополнительныйКлюч = &ДополнительныйКлюч
		               |	И ЗамерыSqlЗапросов.Событие = &Событие
		               |	И ЗамерыSqlЗапросов.Шаг = &Шаг";
					   
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			Запись = РегистрыСведений.ЗамерыSqlЗапросов.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			Если ЗначениеЗаполнено(Запись.ДатаОкончания) Тогда
				Возврат;
			КонецЕсли;	
			Если ЗначениеЗаполнено(ВремяОкончания) Тогда
				Запись.ДатаОкончания = ВремяОкончания;
			Иначе	
				Запись.ДатаОкончания = ТекущаяДата();
			КонецЕсли;	
			Запись.ВремяВыполнения = Запись.ДатаОкончания - Запись.ДатаНачала;
			Запись.Записать();
		КонецЕсли;	
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗаписатьДанныеЗамераВРегистр(СтруктураЗаписи) Экспорт
	
	Попытка
		Если СтруктураЗаписи.ДатаОкончания - СтруктураЗаписи.ДатаНачала = 0 Тогда
			Возврат;
		КонецЕсли;	
		Запись = РегистрыСведений.ЗамерыSqlЗапросов.СоздатьМенеджерЗаписи();
		Если СтруктураЗаписи.Свойство("Событие") Тогда
			Запись.Событие = СтруктураЗаписи.Событие;
		Иначе
			Запись.Событие = ПараметрыСеанса.ЗамерПроизводительности_ИмяСобытия;
		КонецЕсли;	
		Запись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
		Запись.ДатаНачала = СтруктураЗаписи.ДатаНачала;
		Запись.ДатаНачалаДень = СтруктураЗаписи.ДатаНачала;
		Запись.ДатаОкончания = СтруктураЗаписи.ДатаОкончания;
		Запись.ВремяВыполнения = СтруктураЗаписи.ДатаОкончания - СтруктураЗаписи.ДатаНачала;
		Запись.Шаг = СтруктураЗаписи.Шаг;
		Если СтруктураЗаписи.Свойство("ДополнительныйКлюч") Тогда
			Запись.ДополнительныйКлюч = СтруктураЗаписи.ДополнительныйКлюч;
		Иначе
			Запись.ДополнительныйКлюч = ПараметрыСеанса.ЗамерПроизводительности_ДопКлюч;
		КонецЕсли;	
		Если СтруктураЗаписи.Свойство("ТекстЗапроса") Тогда
			Запись.ТекстЗапроса = СтруктураЗаписи.ТекстЗапроса;
		КонецЕсли;	
		Если СтруктураЗаписи.Свойство("ТочкаВызова") Тогда
			Запись.ТочкаВызова = СтруктураЗаписи.ТочкаВызова;
		КонецЕсли;	
		Если СтруктураЗаписи.Свойство("ОбъектВызвавший") Тогда
			Запись.ОбъектВызвавший = СтруктураЗаписи.ОбъектВызвавший;
		КонецЕсли;	
		Если ЗначениеЗаполнено(ПараметрыСеанса.ТорговаяТочкаПоАйпи) Тогда
			Запись.НомерМагазина = ПараметрыСеанса.НомерТочкиПоАйпи;
		КонецЕсли;	
		Запись.Записать();
	Исключение
	КонецПопытки;
	
КонецПроцедуры	