Функция ПолучитьЗначениеПеременной(ИмяПараметраВР, НайденноеЗначение, Кэш, ПоместитьВКэш) Экспорт
	
	Если ИмяПараметраВР = ВРег("глУчетнаяПолитикаПоПерсоналу") Тогда
		Если НЕ РаботаСОбщимиПеременными.ПолучитьИзКэшаКонфигурации(ИмяПараметраВР, НайденноеЗначение, Кэш, ПоместитьВКэш) Тогда
			НайденноеЗначение = РаботаСОбщимиПеременными.ЗаполнениеУчетнойПолитикиПоПерсоналу();
		КонецЕсли; 
		
	ИначеЕсли ИмяПараметраВР = ВРег("глИспользоватьУправленческийУчетЗарплаты") Тогда
		НайденноеЗначение = Истина;
		
	ИначеЕсли ИмяПараметраВР = ВРег("глЕстьВалютныеПоказатели") Тогда
		Если НЕ РаботаСОбщимиПеременными.ПолучитьИзКэшаКонфигурации(ИмяПараметраВР, НайденноеЗначение, Кэш, ПоместитьВКэш) Тогда
			НайденноеЗначение = ОпределитьНаличиеВалютныхПоказателей();
		КонецЕсли; 
		
	ИначеЕсли ИмяПараметраВР = ВРег("глВалютаУправленческогоУчета") Тогда
		Если НЕ РаботаСОбщимиПеременными.ПолучитьИзКэшаКонфигурации(ИмяПараметраВР, НайденноеЗначение, Кэш, ПоместитьВКэш) Тогда
			НайденноеЗначение = Константы.ВалютаУправленческогоУчета.Получить();
		КонецЕсли; 
		
	КонецЕсли;
	
	Возврат НайденноеЗначение;
	
КонецФункции

// ПРОЧИЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

// Определяет есть ли денежные показатели с незаполненной валютой
//
Функция ОпределитьНаличиеВалютныхПоказателей()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ПоказателиСхемМотивации.Ссылка
	|ИЗ
	|	Справочник.ПоказателиСхемМотивации КАК ПоказателиСхемМотивации
	|ГДЕ
	|	ПоказателиСхемМотивации.ТипПоказателя = Значение(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
	|	И ПоказателиСхемМотивации.Валюта = Значение(Справочник.Валюты.ПустаяСсылка)");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Возврат Выборка.Следующий();
	
КонецФункции

Функция ЭтоЮрЛицо(Организация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.ЮрФизЛицо
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка = &Организация";
	Выборка = Запрос.Выполнить().Выбрать();
	Возврат Не Выборка.Следующий() Или Выборка.ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ФизЛицо;
	
КонецФункции // ЭтоЮрЛицо()

// Проверяет правильность заполнения ОГРН
// Возвращаемое значение:
//   Булево
//
Функция ОГРНСоответствуетТребованиям(ОГРН, ЮрФизЛицо, ТекстСообщенияОшибки) Экспорт
	
	Если ЮрФизЛицо = Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		Если СтрДлина(СокрЛП(ОГРН)) <> 15 Тогда
			ТекстСообщенияОшибки = ТекстСообщенияОшибки + "ОГРНИП указан неверно! ОГРНИП должен состоять из 15 цифр!" + Символы.ПС;
			Возврат Ложь;
		КонецЕсли;
		Если НЕ ОбщегоНазначения.ТолькоЦифрыВСтроке(ОГРН) Тогда
			ТекстСообщенияОшибки = ТекстСообщенияОшибки + "ОГРНИП указан неверно! ОГРН должен состоять только из цифр!" + Символы.ПС;
			Возврат Ложь;
		КонецЕсли;
		ОГРН14 = Число(Лев(Строка(ОГРН), 14));
		Если Прав(Формат(ОГРН14 % 13, "ЧН=0; ЧГ=0"), 1) <> Прав(ОГРН, 1) Тогда
			ТекстСообщенияОшибки = ТекстСообщенияОшибки + "Возможно, ОГРНИП указан неверно (контрольный разряд не совпадает с вычисленным)!" + Символы.ПС;
		КонецЕсли;
	Иначе
		Если СтрДлина(ОГРН) <> 13 Тогда
			ТекстСообщенияОшибки = ТекстСообщенияОшибки + "ОГРН " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации") + " указан неверно! ОГРН должен состоять из 13 цифр!" + Символы.ПС;
			Возврат Ложь;
		КонецЕсли;
		Если НЕ ОбщегоНазначения.ТолькоЦифрыВСтроке(ОГРН) Тогда
			ТекстСообщенияОшибки = ТекстСообщенияОшибки + "ОГРН " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации") + " указан неверно! ОГРН должен состоять только из цифр!" + Символы.ПС;
			Возврат Ложь;
		КонецЕсли;
		ОГРН12 = Число(Лев(Строка(ОГРН), 12));
		Если Прав(Формат(ОГРН12 % 11, "ЧН=0; ЧГ=0"), 1) <> Прав(ОГРН, 1) Тогда
			ТекстСообщенияОшибки = ТекстСообщенияОшибки + "Возможно, ОГРН " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации") + " указан неверно (контрольный разряд не совпадает с вычисленным)!" + Символы.ПС;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции // ОГРНСоответствуетТребованиям()

// Проверяет правильность заполнения КПП
//
// Возвращаемое значение:
//   Булево
//
Функция КППОрганизацииСоответствуетТребованиям(КПП, ТекстСообщенияОшибки) Экспорт
	
	Если НЕ ПустаяСтрока(КПП) И СтрДлина(КПП) <> 9 Тогда
		ТекстСообщенияОшибки = ТекстСообщенияОшибки +  "КПП " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("организации") + " задан неверно!" + Символы.ПС;
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции // КППОрганизацииСоответствуетТребованиям()

Функция ВернутьСписокТиповСсылокДляФормированияФИО() Экспорт
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
	МассивТипов.Добавить(Тип("СправочникСсылка.СотрудникиОрганизаций"));
	МассивТипов.Добавить(Тип("СправочникСсылка.СотрудникиАутсорсинг"));
	Возврат Новый ОписаниеТипов(МассивТипов);
	
КонецФункции

Функция ВернутьСписокТиповОбъектовДляФормированияФИО() Экспорт
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникОбъект.ФизическиеЛица"));
	МассивТипов.Добавить(Тип("СправочникОбъект.СотрудникиОрганизаций"));
	МассивТипов.Добавить(Тип("СправочникОбъект.СотрудникиАутсорсинг"));
	Возврат Новый ОписаниеТипов(МассивТипов);
	
КонецФункции

