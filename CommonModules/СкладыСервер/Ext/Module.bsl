
//shae 2018.08.07 ИП-00019236
Процедура ПроверитьНаСоответствиеОрганизацииЗакупки(Организация, Товары, Отказ) Экспорт 
	
	Если Товары.Количество() = 0 Тогда 
		Возврат;	
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура
	|ПОМЕСТИТЬ ТЧ
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧ.НомерСтроки,
	|	ТЧ.Номенклатура,
	|	ЕСТЬNULL(ТЧ.Номенклатура.ТорговаяМарка.ОрганизацияЗакупки, &ВкусВилл) КАК ОрганизацияЗакупки
	|ПОМЕСТИТЬ ТЧ_ОрганизацияЗакупки
	|ИЗ
	|	ТЧ КАК ТЧ
	|ГДЕ
	|	ТЧ.Номенклатура.ВидНоменклатуры = &ВидНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ТЧ_ОрганизацияЗакупки.ОрганизацияЗакупки) КАК ОрганизацияЗакупки
	|ПОМЕСТИТЬ ДокОрганизацияПодставить
	|ИЗ
	|	ТЧ_ОрганизацияЗакупки КАК ТЧ_ОрганизацияЗакупки
	|
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТЧ_ОрганизацияЗакупки.ОрганизацияЗакупки) = 1 И
	|	&ОрганизацияНеЗаполнена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧ_ОрганизацияЗакупки.НомерСтроки,
	|	ТЧ_ОрганизацияЗакупки.Номенклатура.Представление КАК НоменклатураПредставление,
	|	ТЧ_ОрганизацияЗакупки.ОрганизацияЗакупки,
	|	ДокОрганизацияПодставить.ОрганизацияЗакупки КАК ОрганизацияЗакупкиПодставить
	|ИЗ
	|	ТЧ_ОрганизацияЗакупки КАК ТЧ_ОрганизацияЗакупки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДокОрганизацияПодставить КАК ДокОрганизацияПодставить
	|		ПО (ИСТИНА)
	|ГДЕ
	|	ТЧ_ОрганизацияЗакупки.ОрганизацияЗакупки <> &Организация";
	
	ОрганизацияНеЗаполнена = НЕ ЗначениеЗаполнено(Организация);
	Запрос.УстановитьПараметр("Товары", 	 			Товары);
	Запрос.УстановитьПараметр("Организация", 			Организация);
	Запрос.УстановитьПараметр("ОрганизацияНеЗаполнена", ОрганизацияНеЗаполнена);
	Запрос.УстановитьПараметр("ВкусВилл", 	 			Справочники.ТорговыеМарки.ВкусВилл.ОрганизацияЗакупки);
	Запрос.УстановитьПараметр("ВидНоменклатуры", 	 	Перечисления.ВидыНоменклатуры.Товар);
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Если ОрганизацияНеЗаполнена Тогда 
			Если Выборка.Следующий() Тогда 
				Организация = Выборка.ОрганизацияЗакупкиПодставить;	
			КонецЕсли;
		Иначе	
			Пока Выборка.Следующий() Цикл
				ОбщегоНазначения.СообщитьОбОшибке("В строке №" + Формат(Выборка.НомерСтроки, "ЧГ=") + " табличной части ""Товары"" по номенклатуре """+ Выборка.НоменклатураПредставление+""" организация торговой марки не совпадает с организацией документа!", Отказ);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры	

//+++АК KIRN 2018.08.23 
Функция ПолучитьРейсПоМаршруту(Выборка, тзТарифы, ДатаРаспределения) Экспорт
	НачатьТранзакцию();
	ТекМаршрут = Выборка.Маршрут;
	Запрос = Новый Запрос;
	Запрос.Текст = "Выбрать ДокРейсы.Ссылка КАК Рейс из Документ.МаршрутныйЛист КАК ДокРейсы ГДЕ ДокРейсы.Маршрут = &Маршрут и ДокРейсы.ПометкаУдаления = Ложь и НАЧАЛОПЕРИОДА(ДокРейсы.Дата) = &Дата";
	Запрос.УстановитьПараметр("Маршрут",ТекМаршрут);
	Запрос.УстановитьПараметр("Дата",ДатаРаспределения);
	ВыборкаРейса = Запрос.Выполнить().Выбрать();
	Если ВыборкаРейса.Следующий() Тогда
		МаршЛистОбъект = ВыборкаРейса.Рейс.ПолучитьОбъект();
	Иначе
		МаршЛистОбъект = Документы.МаршрутныйЛист.СоздатьДокумент();
		МаршЛистОбъект.УстановитьНовыйНомер();
		МаршЛистОбъект.Дата 					= ДатаРаспределения;
		МаршЛистОбъект.Организация				= Выборка.Организация;
		МаршЛистОбъект.СтруктурноеПодразделение = Выборка.ТорговаяТочка;
		МаршЛистОбъект.Автомобиль 				= Выборка.Автомобиль;
		МаршЛистОбъект.Маршрут 					= ТекМаршрут;
		МаршЛистОбъект.ВидПеревозки				= Справочники.АК_ВидыПеревозки.ДоставкаНаТТ;
		СтруктураОтбора = Новый Структура;
		СтруктураОтбора.Вставить("Маршрут", ТекМаршрут);
		мТариф = тзТарифы.НайтиСтроки(СтруктураОтбора);
		
		Если мТариф.Количество() <> 0 Тогда
			СтрТариф = мТариф[0];
			МаршЛистОбъект.ВариантРасчетаНДС = СтрТариф["ВариантРасчетаНДС"];
			МаршЛистОбъект.СтавкаНДС = СтрТариф["СтавкаНДС"]; 
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(МаршЛистОбъект, ТекМаршрут,
		"СтруктурноеПодразделение, Перевозчик");
		МаршЛистОбъект.ТорговыеТочки.Загрузить(ТекМаршрут.ТорговыеТочки.Выгрузить());
		МаршЛистОбъект.ОбменДанными.Загрузка = Истина;
		МаршЛистОбъект.Проведен = Истина;
		МаршЛистОбъект.Записать(РежимЗаписиДокумента.Запись);
	КонецЕСли;
	ЗафиксироватьТранзакцию();
	Возврат МаршЛистОбъект;		
КонецФункции

//+++АК KIRN 2018.08.27  
функция ЗаписатьЛогЗагрузкиДокументовПоРаспределению(пСклад, пДокумент, пРезультат, пОписаниеОшибки, пЭтоЗаполнение = ЛОжь) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	Запись = РегистрыСведений.ЛогиСозданияДокументовПоЗагрузкеРаспределения.СоздатьМенеджерЗаписи();
	Запись.Дата = ТекущаяДата();
	Запись.Пользователь = глЗначениеПеременной("глТекущийПользователь");
	Запись.Склад = пСклад;
	Если пДокумент <> Неопределено Тогда
		Запись.Документ = пДокумент;
	КонецЕСли;
	Запись.Результат = пРезультат;
	Запись.ОписаниеОшибки = пОписаниеОшибки;
	Запись.ЭтоЗаполнение = пЭтоЗаполнение;
	Запись.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
КонецФункции

//+++АК KIRN 2018.09.04 
Функция ПолучитьСкладТекущегоПользователя() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ДоступностьСкладов.Склад.Владелец КАК Склад
	|ИЗ
	|	Справочник.ГруппыПользователей.ДоступностьСкладов КАК ДоступностьСкладов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыПользователей.ПользователиГруппы КАК ПользователиГруппы
	|		ПО (ПользователиГруппы.Ссылка = ДоступностьСкладов.Ссылка)
	|			И (ПользователиГруппы.Пользователь = &Пользователь)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Склад;
	КонецЕсли;
	
	Возврат Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Кавказский_1"); // Кавказский_1 - по умолчанию
	
КонецФункции
