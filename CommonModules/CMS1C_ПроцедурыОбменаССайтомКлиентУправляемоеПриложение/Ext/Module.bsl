
&НаКлиенте
Процедура УстановитьФормуДляНужнойCMS(Форма,СистемаУправленияСайтомИлиНастройкаСайта,ЗаписатьОбъект = Ложь) Экспорт
	Если ТипЗнч(СистемаУправленияСайтомИлиНастройкаСайта) = Тип("СправочникСсылка.CMS1C_НастройкиСайтов") Тогда
		СистемаУправленияСайтом = CMS1C_ПроцедурыОбменаССайтом.ПолучитьЗначениеРЕквизитаОБъекта(СистемаУправленияСайтомИлиНастройкаСайта,"СистемаУправленияСайтом");
	ИначеЕсли ТИпЗнч(СистемаУправленияСайтомИлиНастройкаСайта) = Тип("ПеречислениеСсылка.CMS1C_СистемыУправленияСайтами") Тогда
		СистемаУправленияСайтом = СистемаУправленияСайтомИлиНастройкаСайта;
	ИначеЕсли ТипЗнч(СистемаУправленияСайтомИлиНастройкаСайта) = Тип("ПланВидовХарактеристикСсылка.CMS1C_АттрибутыОбъектов") Тогда
		СистемаУправленияСайтом = CMS1C_ПроцедурыОбменаССайтом.ПолучитьЗначениеРЕквизитаОБъекта(СистемаУправленияСайтомИлиНастройкаСайта,"НастройкаСайта","СистемаУправленияСайтом");
	ИначеЕсли ТипЗнч(СистемаУправленияСайтомИлиНастройкаСайта) = Тип("ПланВидовХарактеристикСсылка.CMS1C_СвойстваОбъектов") Тогда
		СистемаУправленияСайтом = CMS1C_ПроцедурыОбменаССайтом.ПолучитьЗначениеРЕквизитаОБъекта(СистемаУправленияСайтомИлиНастройкаСайта,"НастройкаСайта","СистемаУправленияСайтом");
	ИначеЕсли ТипЗнч(СистемаУправленияСайтомИлиНастройкаСайта.Владелец) = Тип("СправочникСсылка.CMS1C_НастройкиСайтов") Тогда
		СистемаУправленияСайтом = CMS1C_ПроцедурыОбменаССайтом.ПолучитьЗначениеРЕквизитаОБъекта(СистемаУправленияСайтомИлиНастройкаСайта,"Владелец","СистемаУправленияСайтом");
	КонецЕсли;

	
	Если ЗаписатьОбъект Тогда
		Форма.Записать();
	Конецесли;
	
	Ключ = Форма.Параметры.Ключ;
	Если Не ЗначениеЗаполнено(СистемаУправленияСайтом) Тогда
		Возврат;
	КОнецЕсли;
	
	ИмяТипа = Неопределено;
	ИмяОбъектаМетаданных = CMS1C_ПроцедурыОбменаССайтомСервер.ПолучитьИмяОбъектаМетаданных(Ключ,ИмяТипа);
	
	ТекущееПолноеИмяФормы = Форма.ИмяФормы;
	
	Если Лев(ТекущееПолноеИмяФормы,9) ="Обработка" Тогда
		СтрокаПоиска = ИмяОбъектаМетаданных+"_";
	ИНаче
		СтрокаПоиска = "Форма.";
	КонецЕсли;
	Найд = Найти(ТекущееПолноеИмяФормы,СтрокаПоиска);
	ИмяФормы = Сред(ТекущееПолноеИмяФормы,Найд + СтрДлина(СтрокаПоиска));
	
	НовоеИмяФормы = "Обработка.CMS1C_"+СокрЛП(СистемаУправленияСайтом)+"_ОбработкаОбмена.Форма."+ИмяОбъектаМетаданных+"_"+ИмяФормы;
	
	Если ТекущееПолноеИмяФормы = НовоеИмяФормы Тогда
		Возврат;
	КОнецЕсли;
	
	УОбработкиЕстьФормаНастройкиСайта = CMS1C_ПроцедурыОбменаССайтомСервер.УОбработкиЕстьНужнаяФорма("CMS1C_"+СокрЛП(СистемаУправленияСайтом)+"_ОбработкаОбмена",ИмяОбъектаМетаданных+"_"+ИмяФормы);
	Если Не УОбработкиЕстьФормаНастройкиСайта Тогда
		Если Форма.ИмяФормы = ИмяТипа+"."+ИмяОбъектаМетаданных+".Форма."+ИмяФормы Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Форма.Модифицированность = Ложь;
	Форма.Закрыть();
	
	Структ = Новый Структура("Ключ",Ключ);
	Если УОбработкиЕстьФормаНастройкиСайта Тогда
		Ф = ПолучитьФорму("Обработка.CMS1C_"+СокрЛП(СистемаУправленияСайтом)+"_ОбработкаОбмена.Форма."+ИмяОбъектаМетаданных+"_"+ИмяФормы,Структ);
		//Ф.Объект.СистемаУправленияСайтом = ТекСистемаУправленияСайтом;
	Иначе
		Ф = ПолучитьФорму("Справочник."+ИмяОбъектаМетаданных+".Форма."+ИмяФормы,Структ);
		//Ф.Объект.СистемаУправленияСайтом = ТекСистемаУправленияСайтом;
	Конецесли;
	Ф.Открыть();

КонецПроцедуры


//Функция УОбработкиЕстьНужнаяФорма(ИмяОбработки,ТекИмяФормы) ЭКспорт
//	Возврат Метаданные.Обработки[ИмяОбработки].Формы.Найти(ТекИмяФормы)<> Неопределено;
//КонецФункции


//Функция ПолучитьИмяОбъектаМетаданных(Ссылка,ИмяТипа) ЭКспорт
//	ТекМетаданные = Ссылка.Метаданные();
//	ИМяМетаданных = ТекМетаданные.Имя;
//	
//	НайдМетаданныеСправочника = Метаданные.Справочники.Найти(ИмяМетаданных);
//	Если НайдМетаданныеСправочника<> Неопределено Тогда
//		ИмяТипа = "Справочник";
//		Возврат НайдМетаданныеСправочника.ИМя;
//	КонецЕсли;
//	
//	НайдМетаданныеПВХ = Метаданные.ПланыВидовХарактеристик.Найти(ИМяМетаданных);
//	Если НайдМетаданныеПВХ <> Неопределено Тогда
//		ИмяТипа = "ПланВидовХарактеристик";
//		Возврат НайдМетаданныеПВХ.Имя;
//	КонецЕсли;
//КонецФункции

Процедура ИзображенияПриНачалеРедактирования(Элемент,НоваяСтрока,Копирование,Форма,НастройкаСайта,СсылкаНаОбъект) Экспорт
	Перем АдресВременногоХранилища,ВыбранноеИмя;
	
	//ИндексСтроки = Элемент.ТекущиеДанные.ПолучитьИдентификатор();
	
	Элементы = Форма.Элементы;
	УникальныйИдентификатор = Форма.УникальныйИдентификатор;
	Если Копирование ИЛИ НЕ НоваяСтрока Тогда
		Форма.ТЧИЗображения.Удалить(Элемент);
		Возврат;
	Конецесли;
	
	Если Не ПоместитьФайл(АдресВременногоХранилища, "", ВыбранноеИмя, Истина, УникальныйИдентификатор) Тогда
		Форма.ТЧИЗображения.Удалить(Элемент);
		Возврат;
	КонецЕсли;
	
	ДлинаНаименования = СтрДлина(ВыбранноеИмя);
	ТекФайл = новый Файл(ВыбранноеИмя);
	ИмяФайла = ТекФайл.Имя;
	ИмяФайлаБезРасширения = ТекФайл.ИмяБезРасширения;
	ТекРасширение = СтрЗаменить(ТекФайл.Расширение,".","");
	
	ФорматКартинкиРазрешен = ПолучитьКартинкуИзВременногоХранилища(АдресВременногоХранилища);
	
	Если НЕ ФорматКартинкиРазрешен Тогда
		Сообщить("Неверный формат картинки (только GIF, JPEG, PNG)");
		Возврат;
	КонецЕсли;
	
	Элемент.Наименование = ИмяФайлаБезРасширения;
	Элемент.Размер = ТекФайл.Размер();
	Элемент.Расширение = ТекРасширение;
	
	СтрокаТаблицыЗначений = Новый Структура();
	СтрокаТаблицыЗначений.Вставить("Описание");
	СтрокаТаблицыЗначений.Вставить("Наименование");
	СтрокаТаблицыЗначений.Вставить("НаименованиеСред");
	СтрокаТаблицыЗначений.Вставить("НаименованиеМал");
	СтрокаТаблицыЗначений.Вставить("Картинка");
	СтрокаТаблицыЗначений.Вставить("КартинкаСред");
	СтрокаТаблицыЗначений.Вставить("КартинкаМал");
	СтрокаТаблицыЗначений.Вставить("Сортировка");
	СтрокаТаблицыЗначений.Вставить("Размер");
	СтрокаТаблицыЗначений.Вставить("Ширина");
	СтрокаТаблицыЗначений.Вставить("Высота");
	СтрокаТаблицыЗначений.Вставить("Расширение");
	СтрокаТаблицыЗначений.Вставить("ID");
	СтрокаТаблицыЗначений.Вставить("СсылкаНаИзображение");
	ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗначений,Элемент);
	
	СтруктураВозвратаШириныИВысоты = CMS1C_ПроцедурыОбменаССайтомСервер.ПоместитьКартинкуВСтроку(АдресВременногоХранилища,СтрокаТаблицыЗначений,Форма.ТЧИзображения,НастройкаСайта,СсылкаНаОбъект);
	
	ЗаполнитьЗначенияСвойств(Элемент,СтрокаТаблицыЗначений);
	ШирБол = СтруктураВозвратаШириныИВысоты.Ширина;
	ВысБол = СтруктураВозвратаШириныИВысоты.ВЫсота;
	
	Элемент.Ширина = ШирБол;
	Элемент.Высота = ВысБол;
	
	КоличествоСтрок = Форма.ТЧИзображения.Количество()-1;
	КопияИзбр = ПоместитьТабличнуюЧастьВТаблицуЗначений(КоличествоСтрок,Форма.ТЧИзображения);
	
	Элементы.Изображения.ТекущаяСтрока = Элемент.ПолучитьИдентификатор();
	
	
КонецПроцедуры


Функция ПолучитьКартинкуИзВременногоХранилища(АдресВременногоХранилища)
	
	ДвоичныеДанныеЗагружаемойКартинки = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	
	ВыбранноеИзображение = Новый Картинка(ДвоичныеДанныеЗагружаемойКартинки, Ложь);	
	
	ФорматКартинкиРазрешен = Истина;
	ФорматКартинкиОбъекта = ВыбранноеИзображение.Формат();
	
	Если ФорматКартинкиОбъекта = ФорматКартинки.НеизвестныйФормат Тогда
		ФорматКартинкиРазрешен = Ложь;
	Иначе
		Если НЕ (ФорматКартинкиОбъекта = ФорматКартинки.GIF
			ИЛИ ФорматКартинкиОбъекта = ФорматКартинки.JPEG
			ИЛИ ФорматКартинкиОбъекта = ФорматКартинки.PNG) Тогда
			Попытка
				ФорматКартинкиОбъекта   = ВыбранноеИзображение.Преобразовать(ФорматКартинки.JPEG);
			Исключение
				Сообщить("Не удалось преобразовать формат картинки в JPEG. Добавляйте только .GIF,.JPEG и .PNG",СтатусСообщения.ОченьВажное);		
				ФорматКартинкиРазрешен = Ложь;
			КонецПопытки;
		КонецЕсли;				
	КонецЕсли;	
	Возврат ФорматКартинкиРазрешен;
КонецФункции


Функция ПоместитьТабличнуюЧастьВТаблицуЗначений(ИндексСтроки,ТЧИзображения)
	НС = 0;
	Для Каждого Стртз из ТЧИзображения Цикл
		СтрТз.сортировка = НС;
		НС = НС + 1;
	КонецЦикла;
КонецФункции


//Функция ПоместитьКартинкуВСтроку(ПутьКИсходнику,ИндексСтроки,ТЧИзображения,НастройкаСайта,СсылкаНаОбъект) Экспорт
//	ЕстьОбъект = Ложь;
//	Ответ=Неопределено; 
//	Попытка
//		img =  Новый COMОбъект("ImageMagickObject.MagickImage.1"); 
//		ЕстьОбъект = Истина;   		
//	Исключение 
//		Сообщить(ОписаниеОшибки());
//	КонецПопытки;
//	
//	Если НЕ ЕстьОбъект ТОгда
//		Конверт = ПолучитьИмяВременногоФайла("zip");//КаталогПрограммы();
//		ПрогаИзПамяти = ПолучитьОбщийМакет("CMS1C_Magic");
//		ПрогаИзПамяти.Записать(Конверт);
//		ФайлАрхива = Новый ЧтениеZIPФайла(Конверт); 
//		ФайлАрхива.ИзвлечьВсе(КаталогПрограммы(), РежимВосстановленияПутейФайловZIP.Восстанавливать); 
//		ФайлАрхива.Закрыть();
//		ЗапуститьПриложение("regsvr32 /c /s """+КаталогПрограммы()+"ImageMagickObject\ImageMagickObject.dll""",,Истина);
//		
//		Попытка
//			img = Новый COMОбъект("ImageMagickObject.MagickImage.1"); 
//			ЕстьОбъект = Истина;
//		Исключение	
//			возврат Неопределено;	
//		КонецПопытки;
//	КонецЕсли;
//	Высота = 0;
//	Ширина = 0;
//	
//	Имя = ПолучитьИмяВременногоФайла();
//	Файл =  ПолучитьИзВременногоХранилища(ПутьКИсходнику);
//	Файл.Записать(Имя);
//	
//	
//	Если ЕстьОбъект Тогда
//		ПОпытка
//			Высота = Число(img.identify("-format","%h",Имя));
//			Ширина = Число(img.identify("-format","%w",Имя));
//		Исключение
//			Высота = 0;
//			Ширина = 0;
//		КонецПопытки;
//	КонецЕсли;
//	
//	СтруктураВозврата = Новый Структура();
//	СтруктураВозврата.Вставить("ВЫсота",ВЫсота);
//	СтруктураВозврата.Вставить("Ширина",Ширина);
//	//Возврат СтруктураВозврата;
//	
//	//НашОбъект = РеквизитФормыВЗначение("Объект");
//	КартинкаИзВременногоХранилища = Новый ДвоичныеДанные(Имя);
//	
//	СтрокаТЗ = ТЧИзображения.НайтиПоИдентификатору(ИндексСтроки);
//	ТекИндекс = ТЧИзображения.Индекс(СтрокаТЗ);
//	
//	СтрокаТЗ.Картинка = Новый Картинка(КартинкаИзВременногоХранилища);
//	СтрокаТз.Ширина = Ширина;
//	СтрокаТз.Высота = Высота;
//	
//	//НашОбъект.Записать();
//	//ЗначениеВДанныеФормы(НашОбъект,Объект);
//	Модифицированность = Истина;
//	
//	тз = ДанныеФормыВЗначение(ТЧИзображения,Тип("ТаблицаЗначений"));
//	Стртз = тз[ТекИндекс];
//	
//	Об = CMS1C_ПроцедурыОбменаССайтомСервер.ПолучитьОбработкуПоСистемеУправленияСайтом(НастройкаСайта);
//	Об.ОтредактироватьИзображенияПриДобавленииИнтерактивно(СтрТз,img,Имя,СсылкаНаОбъект);
//	ЗаполнитьЗначенияСвойств(СтрокаТз,СтрТз);
//	Возврат СтруктураВозврата;
//КонецФункции


//Процедура ЗаписатьИзображения(Объект,Форма) Экспорт
//	ТЧИзображения = Форма.ТЧИзображения;
//	НС = -1;
//	Для Каждого СтрТз из ТЧИзображения Цикл
//		НС = НС + 1;
//		СтрТз.Сортировка = НС;
//		
//		НадоСохранять = Ложь;
//		
//		Если НЕ ЗначениеЗаполнено(СтрТз.СсылкаНаИзображение) Тогда
//			НадоСохранять = Истина;
//		КонецЕсли;
//		
//		Если СтРТз.Сортировка <> СтрТз.СсылкаНаИзображение.Сортировка Тогда
//			НадоСохранять = Истина;
//		КонецЕсли;
//		
//		Если СтРТз.ID <> СтрТз.СсылкаНаИзображение.ID Тогда
//			НадоСохранять = Истина;
//		КонецЕсли;
//		
//		Если Не НадоСохранять Тогда
//			Если СтрТз.СсылкаНаИзображение.Хранилище.Получить() <> Неопределено Тогда
//				НадоСохранять = истина;
//			КонецЕсли;
//		КонецЕсли;
//		
//		Если Не НадоСохранять Тогда
//			Продолжить;
//		КонецЕсли;
//		
//		Если Не ЗначениеЗаполнено(СтрТз.СсылкаНаИзображение) Тогда
//			Об = Справочники.CMS1C_Изображения.СоздатьЭлемент();
//			Об.Владелец = Объект.Ссылка;
//		Иначе
//			Об = СтрТз.СсылкаНаИзображение.ПолучитьОБъект();
//			Об.Владелец = Объект.Ссылка;
//		КонецЕсли;
//		
//		Об.ID = СтрТз.ID;
//		Об.Высота = СтрТз.Высота;
//		об.Ширина = СтрТз.Ширина;
//		Об.Наименование = СтрТз.Наименование;
//		Об.НаименованиеСред = СтрТз.НаименованиеСред;
//		Об.НаименованиеМал = СтрТз.НаименованиеМал;
//		Об.Описание = СтрТз.Описание;
//		Об.Размер = СтрТз.Размер;
//		Об.Расширение = СтрТз.Расширение;
//		Об.Хранилище = Новый ХранилищеЗначения(СтрТз.Картинка.ПолучитьДвоичныеДанные());
//		ДвоичныеСред = СтрТз.КартинкаСред.ПолучитьДвоичныеДанные();
//		Если ДвоичныеСред.Размер() <> 0 Тогда
//			Об.ХранилищеСред = Новый ХранилищеЗначения(ДвоичныеСред);
//		Иначе
//			Об.ХранилищеСред = Новый ХранилищеЗначения(Неопределено);
//		КонецЕсли;
//		
//		ДвоичныеМал = СтрТз.КартинкаМал.ПолучитьДвоичныеДанные();
//		Если ДвоичныеМал.Размер() <> 0 Тогда
//			Об.ХранилищеМал = Новый ХранилищеЗначения(ДвоичныеМал);
//		Иначе
//			Об.ХранилищеМал = Новый ХранилищеЗначения(Неопределено);
//		КонецЕсли;
//		
//		об.сортировка = СтрТз.Сортировка;
//		Об.Записать();
//		СтрТз.СсылкаНаИзображение = Об.Ссылка;
//	КонецЦикла;
//	
//	Запрос = новый Запрос();
//	Запрос.Текст= "ВЫБРАТЬ
//	|	CMS1C_Изображения.Ссылка
//	|ИЗ
//	|	Справочник.CMS1C_Изображения КАК CMS1C_Изображения
//	|ГДЕ
//	|	CMS1C_Изображения.Владелец = &Владелец
//	|	И НЕ CMS1C_Изображения.Ссылка В (&СписокСсылок)";
//	Запрос.УстановитьПараметр("Владелец",Объект.Ссылка);
//	тз = ДанныеФормыВЗначение(ТЧИзображения,Тип("ТаблицаЗначений"));
//	Запрос.УстановитьПараметр("СписокСсылок",тз.Скопировать(,"СсылкаНаИзображение").ВыгрузитьКолонку("СсылкаНаИзображение"));
//	Выб = Запрос.Выполнить().Выбрать();
//	пока Выб.Следующий() Цикл
//		Об = ВЫб.Ссылка.ПолучитьОБъект();
//		Об.ДополнительныеСвойства.Вставить("НадоЗаписать");
//		Об.Удалить();
//	КонецЦикла;
//	
//	Если ТЧИзображения.Количество() = 0 Тогда
//		Если Объект.ОсновноеИзображение <> ПредопределенноеЗначение("Справочник.CMS1C_Изображения.ПустаяСсылка") Тогда
//			Объект.ОсновноеИзображение = ПредопределенноеЗначение("Справочник.CMS1C_Изображения.ПустаяСсылка");
//		Конецесли;
//	Иначе
//		Если Объект.ОсновноеИзображение <> ТЧИзображения[0].СсылкаНаИзображение Тогда
//			Объект.ОсновноеИзображение = ТЧИзображения[0].СсылкаНаИзображение;
//		КОнецесли;
//	КонецЕсли;
//КонецПроцедуры

Процедура ИзображенияПриАктивизацииСтроки(Элемент,Форма) Экспорт
	Если Элемент = Неопределено Тогда
		АдресКартинки = "";
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Форма.АдресКартинки = "";
		Возврат;
	КонецЕсли;
	ИндексСтроки = Элемент.ТекущиеДанные.ПолучитьИдентификатор();
	Попытка
		CMS1C_ПроцедурыОбменаССайтомКлиентУправляемоеПриложение.УстановитьКартинкуВПолеИзображения(ИндексСтроки,Форма);
	Исключение 
		Сообщить(ОписаниеОшибки());	
	КонецПопытки;
КонецПроцедуры

Процедура УстановитьКартинкуВПолеИзображения(ИндексСтроки,Форма) Экспорт
	Текстрока = Форма.ТЧИзображения.НайтиПоИдентификатору(ИндексСтроки);
	ПереключательКартинок = Форма.переключательКартинок;
	
	Если ПереключательКартинок = 0 Тогда
		Картинка = ТекСтрока.Картинка;
	ИначеЕсли ПереключательКартинок = 1 Тогда
		Картинка = ТекСтрока.КартинкаСред;
	Иначе
		Картинка = Текстрока.КартинкаМал;
	Конецесли;
	
	Форма.АдресКартинки = ПоместитьВоВременноеХранилище(Картинка);
	//Попытка
	//	АдресКартинки = ПолучитьНавигационнуюСсылку(Объект.Ссылка,"Изображения.ХранилищеБол",ИндексСтроки);
	//Исключение 
	//	Сообщить(ОписаниеОшибки());
	//КонецПопытки;
КонецПроцедуры
