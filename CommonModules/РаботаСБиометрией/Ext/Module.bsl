Процедура ПолучитьДанныеСКУДЗаВчера() Экспорт
	//особенности выгрузки: каждый день никто информацию не обновляет в базе, 
	//поэтому грузим за последние 30 дней и до самого последнего момента
	ДатаКонца=ТекущаяДата();
	ДатаНачала=ТекущаяДата()-30*24*3600;
	ТаблицаСКУД=ПолучитьДанныеСКУД(НачалоДня(ДатаНачала),КонецДня(ДатаКонца));
	ЗаполнитьРегистрБиометрии(ТаблицаСКУД); 
КонецПроцедуры

Процедура ЗаполнитьРегистрБиометрии(ТаблицаСКУД) Экспорт
	МассивНенайденных=Новый Массив;
	Для каждого СтрСКУД Из ТаблицаСКУД Цикл
		Если ЗначениеЗаполнено(СтрСКУД.Сотрудник) тогда
			Запись=РегистрыСведений.АК_ОтработанноеВремяПоДаннымБиометрии.СоздатьМенеджерЗаписи();
			Запись.Период=СтрСКУД.Дата;
			Запись.Сотрудник=СтрСКУД.Сотрудник;
			Запись.ВремяПрихода=СтрСКУД.ВремяПрихода;
			Запись.ВремяУхода=СтрСКУД.ВремяУхода;
			Запись.Длительность=СтрСКУД.Длительность;
			Запись.ЧистаяДлительность=СтрСКУД.ЧистаяДлительность;
			Запись.РучнаяКорректировка=ложь;
			Запись.Записать();
		Иначе
			Если МассивНенайденных.Найти(СтрСКУД.КодСотрудника)= Неопределено тогда
				МассивНенайденных.Добавить(СтрСКУД.КодСотрудника);
				Сообщить("В базе не найден сотрудник с кодом "+Сред(СтрСКУД.КодСотрудника,2),СтатусСообщения.ОченьВажное);
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	Если МассивНенайденных.Количество()>0 тогда
		Сообщить("Для загрузки информации по ненайденным сотрудникам приведите в соответствие код сотрудников в 1С и системе биометрии и повторите загрузку.",СтатусСообщения.Важное);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьДанныеСКУД(ДатаНачала,ДатаКонца) Экспорт
	ADOСоединение = ПолучитьСоединение(); //не используем обычную функцию, т.к. другой сервер
	ТаблицаСКУД=Новый ТаблицаЗначений;
	ТаблицаСКУД.Колонки.Добавить("Дата");
	ТаблицаСКУД.Колонки.Добавить("ФИО");
	ТаблицаСКУД.Колонки.Добавить("Сотрудник");
	ТаблицаСКУД.Колонки.Добавить("КодСотрудника");
	ТаблицаСКУД.Колонки.Добавить("ВремяПрихода");
	ТаблицаСКУД.Колонки.Добавить("ВремяУхода");
	ТаблицаСКУД.Колонки.Добавить("Длительность");
	ТаблицаСКУД.Колонки.Добавить("ЧистаяДлительность");
	ТаблицаСКУД.Колонки.Добавить("ДлительностьОтлучек");
	ТаблицаСКУД.Колонки.Добавить("ТаблицаОтметок");
	ТекстЗАпроса=
	"SELECT        Userinfo.Name as Name, Checkinout.Userid as Userid, Checkinout.CheckTime as Time, Checkinout.CheckType as Type
	|FROM            anviz2.dbo.Checkinout (nolock) as Checkinout INNER JOIN
	|                     anviz2.dbo.Userinfo (nolock) as Userinfo ON Checkinout.Userid = Userinfo.Userid
	|WHERE Checkinout.CheckTime >= "+ВнешниеДанные.ФорматПоля(ДатаНачала) +" AND Checkinout.CheckTime <= "+ВнешниеДанные.ФорматПоля(ДатаКонца) +"
	|ORDER BY Checkinout.Userid, Checkinout.CheckTime";
	rs = ADOСоединение.Execute(ТекстЗапроса);
	Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
		rs=rs.NextRecordSet();
	КонецЦикла;
	
	Попытка
		rs.MoveFirst();
		
		Пока НЕ rs.EOF() Цикл
			ТипОтметки=СокрЛП(rs.Fields("Type").Value);
			Время=ПолучитьДатуВремяСКУД(СокрЛП(rs.Fields("Time").Value));
			Дата=НачалоДня(Время);
			ФИО = СокрЛП(rs.Fields("Name").Value);
			КодСотрудника="0"+СтрЗаменить(СтрЗаменить(СокрЛП(rs.Fields("Userid").Value)," ",""),Символы.НПП,"");
			МассивСтрок=НайтиСтрокиПоСотрудникуИДате(КодСотрудника,Дата,ТаблицаСКУД,ТипОтметки);
			Если МассивСтрок.Количество() тогда
				СтрокаСКУД=ТаблицаСКУД[ТаблицаСКУД.Индекс(МассивСтрок[0])];
			Иначе
				СтрокаСКУД = ТаблицаСКУД.Добавить();
				СтрокаСКУД.ФИО = ФИО;
				СтрокаСКУД.Дата=Дата;
				СтрокаСКУД.КодСотрудника=КодСотрудника;
				СтрокаСКУД.ТаблицаОтметок=Новый ТаблицаЗначений;
				СтрокаСКУД.ТаблицаОтметок.Колонки.Добавить("Тип");
				СтрокаСКУД.ТаблицаОтметок.Колонки.Добавить("Время");
				СтрокаСКУД.ЧистаяДлительность=0;
			КонецЕсли;
			Если ТипОтметки="0" тогда
				Если ЗначениеЗаполнено(СтрокаСКУД.ВремяПрихода) тогда
					СтрокаСКУД.ВремяПрихода=Мин(Время,СтрокаСКУД.ВремяПрихода);
				Иначе
					СтрокаСКУД.ВремяПрихода = Время;
				КонецЕсли;
			Иначе
				Если ЗначениеЗаполнено(СтрокаСКУД.ВремяУхода) тогда
					СтрокаСКУД.ВремяУхода=Макс(Время,СтрокаСКУД.ВремяУхода);
				Иначе
					СтрокаСКУД.ВремяУхода = Время;
				КонецЕсли;
			КонецЕсли;
			НовСтрокаОтметок=СтрокаСКУД.ТаблицаОтметок.Добавить();
			НовСтрокаОтметок.Тип=ТипОтметки;
			НовСтрокаОтметок.Время=Время;
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	ADOСоединение.Close();
	ТаблицаСотрудников=ПоискСотрудниковВСправочнике(ТаблицаСКУД.ВыгрузитьКолонку("КодСотрудника"));
	
	//Получим таблицу скорректированных записей за этот период
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	АК_ОтработанноеВремяПоДаннымБиометрии.Период,
	             |	АК_ОтработанноеВремяПоДаннымБиометрии.Сотрудник,
	             |	АК_ОтработанноеВремяПоДаннымБиометрии.ВремяПрихода,
	             |	АК_ОтработанноеВремяПоДаннымБиометрии.ВремяУхода,
	             |	АК_ОтработанноеВремяПоДаннымБиометрии.Длительность,
	             |	АК_ОтработанноеВремяПоДаннымБиометрии.ЧистаяДлительность,
	             |	АК_ОтработанноеВремяПоДаннымБиометрии.РучнаяКорректировка
	             |ИЗ
	             |	РегистрСведений.АК_ОтработанноеВремяПоДаннымБиометрии КАК АК_ОтработанноеВремяПоДаннымБиометрии
	             |ГДЕ
	             |	АК_ОтработанноеВремяПоДаннымБиометрии.Период МЕЖДУ &ДатаНач И &ДатаКон
	             |	И АК_ОтработанноеВремяПоДаннымБиометрии.РучнаяКорректировка = ИСТИНА";
	Запрос.УстановитьПараметр("ДатаНач",ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКон",ДатаКонца);
	ТаблицаОтредактированных=Запрос.Выполнить().Выгрузить();
	МассивУдалений=Новый Массив;
	Для каждого СтрокаСКУД Из ТаблицаСКУД Цикл
		//подбираем сотрудника из справочника 
		Отбор=Новый Структура;
		Отбор.Вставить("КодСотрудника",СтрокаСКУД.КодСотрудника);
		ПодходящиеСотрудники=ТаблицаСотрудников.НайтиСтроки(Отбор);
		Для каждого СтрСотрудника из ПодходящиеСотрудники цикл
			//Если СтрокаСКУД.Дата>=СтрСотрудника.ДатаПриема и СтрокаСКУД.Дата<=СтрСотрудника.ДатаУвольнения тогда
				СтрокаСКУД.Сотрудник=СтрСотрудника.Сотрудник;
				Прервать;
			//КонецЕсли;
		КонецЦикла;
		//Смотрим, нет ли отредактированной записи в регистре, которую нельзя править
		Отбор=Новый Структура;
		Отбор.Вставить("Период",СтрокаСКУД.Дата);
		Отбор.Вставить("Сотрудник",СтрокаСКУД.Сотрудник);
		МассивОтредактированных=ТаблицаОтредактированных.НайтиСтроки(Отбор);
		Если МассивОтредактированных.Количество() тогда
			МассивУдалений.Добавить(СтрокаСКУД);
			Продолжить;
		КонецЕсли;
		//Расчитываем показатели времени
		Если ЗначениеЗАполнено(СтрокаСКУД.ВремяПрихода) и ЗначениеЗаполнено(СтрокаСКУД.ВремяУхода) тогда
			СтрокаСКУД.Длительность=Окр((СтрокаСКУД.ВремяУхода-СтрокаСКУД.ВремяПрихода)/3600,2);
			ТекущееВремя=Дата(1,1,1);
			ТекущаяОтметка="O";
			Для каждого СтрокаОтметок из СтрокаСКУД.ТаблицаОтметок цикл
				Если СтрокаОтметок.Тип<>ТекущаяОтметка тогда
					ТекущаяОтметка=СтрокаОтметок.Тип;
					Если ТекущаяОтметка="O" тогда
						СтрокаСКУД.ЧистаяДлительность=СтрокаСКУД.ЧистаяДлительность+(СтрокаОтметок.Время-ТекущееВремя)/3600;
					КонецЕсли;
				Иначе
					Если ТекущаяОтметка="I" тогда
						СтрокаСКУД.ЧистаяДлительность=СтрокаСКУД.ЧистаяДлительность+(СтрокаОтметок.Время-ТекущееВремя)/3600;
					КонецЕсли;
				КонецЕсли;
				ТекущееВремя=СтрокаОтметок.Время;
			КонецЦикла; 	
			СтрокаСКУД.ЧистаяДлительность=Окр(СтрокаСКУД.ЧистаяДлительность,2);
			СтрокаСКУД.ДлительностьОтлучек=СтрокаСКУД.Длительность-СтрокаСКУД.ЧистаяДлительность;
		Иначе
			СтрокаСКУД.Длительность=0;
			СтрокаСКУД.ЧистаяДлительность=0;
			СтрокаСКУД.ДлительностьОтлучек=0;
		КонецЕсли;
	КонецЦикла;
	//Удалим строки, которые могли бы затереть отредактированные строки
	Для каждого СтрМ из МассивУдалений цикл
		ТаблицаСКУД.Удалить(СтрМ);
	КонецЦикла;
	ТаблицаСКУД.Колонки.Удалить("ТаблицаОтметок");
	//ТаблицаСКУД.Колонки.Удалить("ФИО");
	Возврат ТаблицаСКУД;
КонецФункции

Функция ПолучитьСоединение()
	парСервер="10.1.27.223\SQLEXPRESS";
	парLogin="anviz";
	парПароль="vkusvillsql2016";
	//Лобачев - изменение параметров базы по письму Литвинова от 24.11.16. Ниже старые параметры
	//парLogin="anviz";
	//парПароль="VKUSVILLSQL";
	
	ADOСоединение = Новый COMОбъект("ADODB.Connection");
	ADOСоединение.ConnectionTimeOut = 0;
	ADOСоединение.CommandTimeOut    = 0;
	ADOСоединение.ConnectionString  = "SERVER=" + парСервер + "; DRIVER=SQL Server; UID=" + парLogin + "; PWD=" + парПароль + "; OLE DB Services=-2;";
	
	Попытка
		ADOСоединение.Open();
		Если ADOСоединение.State() = 0 Тогда
			Возврат Неопределено;
		Иначе
			Возврат ADOСоединение;
		КонецЕсли;
		
	Исключение
		Возврат Неопределено;
	КонецПопытки;           
КонецФункции // ПолучитьСоединение()

Функция НайтиСтрокиПоСотрудникуИДате(КодСотрудника,Дата,ТаблицаСКУД,ТипОтметки)
	Отбор=Новый Структура;
	Отбор.Вставить("КодСотрудника",КодСотрудника);
	Отбор.Вставить("Дата",Дата);
	МассивСтрок=ТаблицаСКУД.НайтиСтроки(Отбор);
	//тут же делаем обработку для ночных смен!!!
	НочнаяСмена=ложь;
	МассивВчера=Новый Массив;
	Если МассивСтрок.Количество()=0 и ТипОтметки="O" тогда
		Отбор=Новый Структура;
		Отбор.Вставить("КодСотрудника",КодСотрудника);
		Отбор.Вставить("Дата",Дата-24*3600);
		МассивВчера=ТаблицаСКУД.НайтиСтроки(Отбор);
		Если МассивВчера.Количество() тогда
			Если МассивВчера[0].ТаблицаОтметок[МассивВчера[0].ТаблицаОтметок.Количество()-1].Тип="I" тогда
				НочнаяСмена=Истина;
			КонецЕсли;
		КонецЕсли
	КонецЕсли;
	Возврат ?(НочнаяСмена,МассивВчера,МассивСтрок);
	
КонецФункции

Функция ПолучитьДатуВремяСКУД(ДатаСКУД)
	Попытка
		ДлинаЧаса=?(Сред(ДатаСКУД,13,1)=":",1,2); //час может быть одной или двумя цифрами
		Дата=Число(Лев(ДатаСКУД,2));
		Месяц=Число(Сред(ДатаСКУД,4,2));
		Год=Число(Сред(ДатаСКУД,7,4));
		Час=Число(Сред(ДатаСКУД,12,ДлинаЧаса));
		Минута=Число(Сред(ДатаСКУД,15-(2-ДлинаЧаса),2));
		Секунда=Число(Сред(ДатаСКУД,18-(2-ДлинаЧаса),2));
		ДатаФ=Дата(Год,Месяц,Дата,Час,Минута,Секунда);	
	Исключение
		ДатаФ=Дата(1,1,1);
	КонецПопытки;
	Возврат ДатаФ;
КонецФункции

Функция ПоискСотрудниковВСправочнике(МассивКодов)
	Запрос=Новый Запрос;
	//Запрос.Текст="ВЫБРАТЬ
	//|	СотрудникиОрганизаций.Ссылка КАК Сотрудник,
	//|	СотрудникиОрганизаций.Наименование КАК ФИО,
	//|	ВЫБОР
	//|		КОГДА ЕСТЬNULL(СотрудникиОрганизаций.ДатаПриемаНаРаботу, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	//|			ТОГДА СотрудникиОрганизаций.ДатаПриемаНаРаботу
	//|		ИНАЧЕ ДАТАВРЕМЯ(1900, 1, 1)
	//|	КОНЕЦ КАК ДатаПриема,
	//|	ВЫБОР
	//|		КОГДА ЕСТЬNULL(СотрудникиОрганизаций.ДатаУвольнения, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1)
	//|			ТОГДА СотрудникиОрганизаций.ДатаУвольнения
	//|		ИНАЧЕ ДАТАВРЕМЯ(2100, 1, 1)
	//|	КОНЕЦ КАК ДатаУвольнения
	//|ИЗ
	//|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	//|ГДЕ
	//|	СотрудникиОрганизаций.Наименование В(&МассивФамилий)";
	ЗАпрос.Текст="ВЫБРАТЬ
	             |	ФизическиеЛица.Ссылка КАК Сотрудник,
	             |	ФизическиеЛица.Код КАК КодСотрудника
	             |ИЗ
	             |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	             |ГДЕ
	             |	ФизическиеЛица.ЭтоГруппа = ЛОЖЬ";
	ТаблицаДляСопоставления=ЗАпрос.Выполнить().Выгрузить();
	ТаблицаСотрудников=ТаблицаДляСопоставления.СкопироватьКолонки();
	МассивРазличныхКодов=Новый Массив;
	//отбираем уникальные и отбрасываем явно лишние (1 символ в коде)
	Для каждого СледующийКод из МассивКодов цикл
		Если МассивРазличныхКодов.Найти(СледующийКод)=Неопределено и СтрДлина(СледующийКод)>2 тогда
			МассивРазличныхКодов.Добавить(СледующийКод);
		КонецЕсли;
	КонецЦикла;
	Для Каждого СледующийКод из МассивРазличныхКодов цикл
		Для каждого ЭлементСправочника из ТаблицаДляСопоставления цикл
			Если Прав(ЭлементСправочника.КодСотрудника,СтрДлина(СледующийКод))=СледующийКод тогда
				НайденныйСотрудник=ТаблицаСотрудников.Добавить();
				НайденныйСотрудник.Сотрудник=ЭлементСправочника.Сотрудник;
				НайденныйСотрудник.КодСотрудника=СледующийКод;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Возврат ТаблицаСотрудников;	
КонецФункции


