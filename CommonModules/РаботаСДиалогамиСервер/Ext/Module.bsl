////////////////////////////////////////////////////////////////////////////////
// ПОЛУЧЕНИЕ ЗНАЧЕНИЙ ДЛЯ ЗАПОЛНЕНИЯ ДОКУМЕНТОВ

// ПОДРАЗДЕЛЕНИЯ ОРГАНИЗАЦИЙ

Функция ПодразделениеОрганизации(Подразделение, Организация) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Подразделение) ИЛИ НЕ ЗначениеЗаполнено(Организация) Тогда
		// Подразделение организации определить не сможем
		Возврат Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 2
	|	СоответствиеПодразделенийИПодразделенийОрганизаций.ПодразделениеОрганизации
	|ИЗ
	|	РегистрСведений.СоответствиеПодразделенийИПодразделенийОрганизаций КАК СоответствиеПодразделенийИПодразделенийОрганизаций
	|ГДЕ
	|	СоответствиеПодразделенийИПодразделенийОрганизаций.Подразделение = &Подразделение
	|	И СоответствиеПодразделенийИПодразделенийОрганизаций.Организация = &Организация
	|	И СоответствиеПодразделенийИПодразделенийОрганизаций.ПодразделениеОрганизации <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)"
	);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Организация",   Организация);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		Выборка.Следующий();
		Возврат Выборка.ПодразделениеОрганизации;
	Иначе
		Возврат Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

// НОМЕНКЛАТУРА

//Функция вызывается при изменении номенклатуры в табличной части документа
//	Готовит данные для заполнения связанных с номенклатурой реквизитов табличной части
//Параметры: ДанныеДляЗаполнения - структура, должна содержать выбранную в табличной части Номенклатуру (ключ - Номенклатура)
//ВозвращаемыеЗначения: Структура, содержит данные для заполнения реквизитов ЕдиницаИзмерения, Коэффициент, Качество, ЕдиницаИзмеренияМест
Функция ИзменениеНоменклатуры(ДанныеДляЗаполнения) Экспорт
	ЗначенияДляЗаполнения = Новый Структура();
	
	// Основные реквизиты
	ЗначенияДляЗаполнения.Вставить("ЕдиницаИзмерения",	ДанныеДляЗаполнения.Номенклатура.ЕдиницаХраненияОстатков);
	ЗначенияДляЗаполнения.Вставить("Коэффициент",		ДанныеДляЗаполнения.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент);
	ЗначенияДляЗаполнения.Вставить("Качество", 			Справочники.Качество.Новый);
	
	// ЕдиницаИзмеренияМест
	ЕдиницаИзмеренияМест = ДанныеДляЗаполнения.Номенклатура.ЕдиницаИзмеренияМест;
	ДанныеДляЗаполнения.Вставить("СведенияЕдиницаИзмеренияМест", РаботаСДиалогамиСервер.СведенияЕдиницаИзмеренияМест(ЕдиницаИзмеренияМест)); // Могут потребоваться на клиенте
	ЗначенияДляЗаполнения.Вставить("ЕдиницаИзмеренияМест", ЕдиницаИзмеренияМест);
	Возврат ЗначенияДляЗаполнения;
КонецФункции


// ЕДИНИЦЫ ИЗМЕРЕНИЯ 

//Функция вызывается при изменении единицы измерения в табличной части документа
//	Готовит данные для заполнения связанных с единицей реквизитов табличной части
//Параметры: ДанныеДляЗаполнения - структура, должна содержать выбранные в табличной части ЕдиницуИзмерения и ЕдиницуИзмеренияМест
//		Ключи: ЕдиницаИзмерения, ЕдиницаИзмеренияМест
//ВозвращаемыеЗначения: Структура, содержит данные для заполнения реквизита Коэффициент и сведения для пересчета количества мест
Функция ИзменениеЕдиницыИзмерения(ДанныеДляЗаполнения) Экспорт
	ЗначенияДляЗаполнения = Новый Структура();
	ЗначенияДляЗаполнения.Вставить("Коэффициент", ДанныеДляЗаполнения.ЕдиницаИзмерения.Коэффициент);

	ДанныеДляЗаполнения.Вставить("СведенияЕдиницаИзмеренияМест", РаботаСДиалогамиСервер.СведенияЕдиницаИзмеренияМест(ДанныеДляЗаполнения.ЕдиницаИзмеренияМест));
	
	Возврат ЗначенияДляЗаполнения;
КонецФункции

Функция СведенияЕдиницаИзмеренияМест(ЕдиницаИзмерения) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура("Коэффициент, ПорогОкругления, ПредупреждатьОНецелыхМестах");
	ЗаполнитьЗначенияСвойств(ВозвращаемоеЗначение, ЕдиницаИзмерения);
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// КОНТРАГЕНТЫ И ДОГОВОРЫ



Функция ПолучитьКурсВалюты(ДанныеДляЗаполнения) Экспорт
	СтруктураКурсаДокумента = МодульВалютногоУчета.ПолучитьКурсВалюты(ДанныеДляЗаполнения.ВалютаДокумента, ДанныеДляЗаполнения.Дата);
	ЗначенияДляЗаполнения = Новый Структура("КурсВзаиморасчетов, КратностьВзаиморасчетов",
		СтруктураКурсаДокумента.Курс, СтруктураКурсаДокумента.Кратность);
	Возврат ЗначенияДляЗаполнения;
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПОДГОТОВКА ДАННЫХ УПРАВЛЯЕМЫХ ФОРМ

// Устанавливает отборы в динамическом списке
//
// Параметры
//  Список – динамический список
//	СтруктураПараметров - структура, содержащая отборы
//
Процедура УстановитьОтборыВДинамическомСписке(Список, СтруктураПараметров) Экспорт
	Если СтруктураПараметров.Свойство("ОтборПоСпискуСсылок") Тогда
		//Поле ОтборПоСпискуСсылок - это структура которая может содержать следующие поля:
		//	МассивСсылок - обязательное, массив ссылок на документы,
		//	Представление - не обязательное, - представление отбора,
		//	Использование - не обязательное, - признак использования отбора, по умолчанию Истина
		
		СписокСсылок = Новый СписокЗначений();
		СписокСсылок.ЗагрузитьЗначения(СтруктураПараметров.ОтборПоСпискуСсылок.МассивСсылок);
		ОтборПоСсылке = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборПоСсылке.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		ОтборПоСсылке.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ОтборПоСсылке.ПравоеЗначение = СписокСсылок;
		
		Если СтруктураПараметров.ОтборПоСпискуСсылок.Свойство("Представление") Тогда
			ОтборПоСсылке.Представление = СтруктураПараметров.ОтборПоСпискуСсылок.Представление;
		КонецЕсли;	
		
		Если СтруктураПараметров.ОтборПоСпискуСсылок.Свойство("Использование") Тогда
			ОтборПоСсылке.Использование = СтруктураПараметров.ОтборПоСпискуСсылок.Использование;
		Иначе
			ОтборПоСсылке.Использование = Истина;
		КонецЕсли;	
		
	КонецЕсли;	
КонецПроцедуры // УстановитьОтборыВДинамическомСписке()	

//Подготавливает соответствие между значениями перечисления СтавкиНДС и числовыми значениями этих ставок
//	Используется в управляемых формах документов, которые содержат в табличных частях ставку НДС
//Возвращаемое значение: фиксированное соответствие, ключ - значение перечисления СтавкиНДС, значение - число (% НДС)
Функция ПолучитьПроцентыСтавокНДС() Экспорт
	СоответствиеСтавокНДС = Новый Соответствие();
	Для Каждого ЗначениеПеречисления ИЗ Метаданные.Перечисления.СтавкиНДС.ЗначенияПеречисления Цикл
		ТекСтавкаНДС = Перечисления.СтавкиНДС[ЗначениеПеречисления.Имя];
		СоответствиеСтавокНДС.Вставить(ТекСтавкаНДС, УчетНДС.ПолучитьСтавкуНДС(ТекСтавкаНДС));
	КонецЦикла;
	//возвращается именно фиксированное соответствие, 
	//	т.к. результат используется в качестве переменной управляемой формы
	Возврат Новый ФиксированноеСоответствие(СоответствиеСтавокНДС);
КонецФункции

Процедура ПроверкаРеквизитовПомеченныхНаУдаление(ДокументОбъект) Экспорт
	
	МассивПоиска = Новый Массив;
	
	МассивПоиска.Добавить(Тип("СправочникСсылка.СтатьиДвиженияДенежныхСредств"));
	МассивПоиска.Добавить(Тип("СправочникСсылка.СтатьиДоходовРасходов"));
	
	Реквизиты = ДокументОбъект.Метаданные().Реквизиты;	
	Для каждого Реквизит из Реквизиты Цикл
		
		ТипРеквизита = ТипЗнч(ДокументОбъект[Реквизит.Имя]);
		ТипПроверка = МассивПоиска.Найти(ТипРеквизита) <> Неопределено;	
		Если ТипПроверка тогда
			Если ДокументОбъект[Реквизит.Имя].ПометкаУдаления Тогда
				ДокументОбъект[Реквизит.Имя]=Неопределено;
				Сообщить("Очищены реквизиты, помеченные на удаление");
			КонецЕсли;	
		КонецЕсли;	
		
	КонецЦикла;
	
	ТабличныеЧасти = ДокументОбъект.Метаданные().ТабличныеЧасти;	
	Для каждого ТабличнаяЧасть Из ТабличныеЧасти Цикл
		
		Реквизиты = ТабличнаяЧасть.Реквизиты;
		Для каждого СтрокаТЧ из ДокументОбъект[ТабличнаяЧасть.Имя] Цикл	
			Для каждого Реквизит из Реквизиты Цикл	
				ТипРеквизита = ТипЗнч(СтрокаТЧ[Реквизит.Имя]);
				ТипПроверка = МассивПоиска.Найти(ТипРеквизита) <> Неопределено;	
				Если ТипПроверка тогда
					Если СтрокаТЧ[Реквизит.Имя].ПометкаУдаления Тогда
						СтрокаТЧ[Реквизит.Имя]=Неопределено;
						Сообщить("Очищены реквизиты в табличной части, помеченные на удаление");
					КонецЕсли;	
				КонецЕсли;	
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;	
	
	
	
	
	
КонецПроцедуры	