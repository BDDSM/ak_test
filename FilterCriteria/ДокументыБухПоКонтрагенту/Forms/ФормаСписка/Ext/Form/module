
Перем мКэшРеквизитовДокумента;
//Перем мСоответствиеИмен;


Функция ПолучитьСоответствиеИменИСинонимовДокументов()
	
	//МетДокументы = Метаданные.Документы;
	//ТекСостав = Метаданные.КритерииОтбора.ДокументыБухПоКонтрагенту.Состав;
	//
	////
	//СоответствиеИмен = Новый Соответствие;
	//Для Каждого ЭлементСостава Из ТекСостав Цикл
	//	
	//	ПолноеИмяЭлементаСостава = ЭлементСостава.ПолноеИмя();
	//	ПолноеИмяЭлементаСостава = Сред(ПолноеИмяЭлементаСостава, 10);
	//	ПозТочки = Найти(ПолноеИмяЭлементаСостава, ".");
	//	ТекИмя = Лев(ПолноеИмяЭлементаСостава, ПозТочки - 1);
	//	
	//	СоответствиеИмен.Вставить(МетДокументы[ТекИмя].Синоним, ТекИмя);
	//	
	//КонецЦикла;
	//
	//Возврат СоответствиеИмен;
	
КонецФункции

Процедура ДополнитьКэшМетаданных(МетаданныеДокумента, ИмяДокумента)
	
	РеквизитыДокумента = мКэшРеквизитовДокумента[ИмяДокумента];
	Если РеквизитыДокумента = Неопределено Тогда
		РеквизитыДокумента = Новый Соответствие;
		
		РеквизитыДокумента.Вставить("ВидОперации"		, МетаданныеДокумента.Реквизиты.Найти("ВидОперации") <> Неопределено);
		РеквизитыДокумента.Вставить("Сумма"				, МетаданныеДокумента.Реквизиты.Найти("Сумма") <> Неопределено);
		РеквизитыДокумента.Вставить("СуммаДокумента"	, МетаданныеДокумента.Реквизиты.Найти("СуммаДокумента") <> Неопределено);
		РеквизитыДокумента.Вставить("ВалютаДокумента"	, МетаданныеДокумента.Реквизиты.Найти("ВалютаДокумента") <> Неопределено);
		РеквизитыДокумента.Вставить("Организация"		, МетаданныеДокумента.Реквизиты.Найти("Организация") <> Неопределено);
		РеквизитыДокумента.Вставить("Ответственный"		, МетаданныеДокумента.Реквизиты.Найти("Ответственный") <> Неопределено);	
		
		мКэшРеквизитовДокумента.Вставить(ИмяДокумента, РеквизитыДокумента);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧасть(ИмяКолонки = "", ТекДанные = Неопределено)

	ЭтаФорма.Список.Очистить();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Параметр", ЭтаФорма.Контрагент);
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Доки.Ссылка КАК Ссылка,
	|	Доки.Ссылка.Дата КАК Дата,
	|	Доки.Ссылка.Номер КАК Номер
	|ИЗ
	|	КритерийОтбора.ДокументыБухПоКонтрагенту(&Параметр) КАК Доки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Доки.Ссылка.Дата";

	//Если ИмяКолонки = "Вид" Тогда
	//	ТекстЗамены = "Доки.Ссылка ССЫЛКА Документ." + мСоответствиеИмен[ТекДанные.Вид];
	//ИначеЕсли ИмяКолонки = "ВидОперации" Тогда
	//	Запрос.УстановитьПараметр("ВидОперации", ТекДанные.ВидОперации);
	//	ТекстЗамены = "Доки.Ссылка.ВидОперации = &ВидОперации";
	//ИначеЕсли ИмяКолонки = "Организация" Тогда
	//	Запрос.УстановитьПараметр("Организация", ТекДанные.Организация);
	//	ТекстЗамены = "Доки.Ссылка.Организация = &Организация";
	//ИначеЕсли ИмяКолонки = "Сумма" Тогда
	//	Запрос.УстановитьПараметр("Сумма", ТекДанные.Сумма);
	//	ТекстЗамены = "Доки.Ссылка.СуммаДокумента = &Сумма ИЛИ Доки.Ссылка.Сумма = &Сумма";
	//ИначеЕсли ИмяКолонки = "Валюта" Тогда
	//	Запрос.УстановитьПараметр("Валюта", ТекДанные.Валюта);
	//	ТекстЗамены = "Доки.Ссылка.ВалютаДокумента = &Валюта";
	//Иначе
	//	ТекстЗамены = "ИСТИНА";
	//КонецЕсли;
	//ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбора", ТекстЗамены);
	
	Запрос.Текст = ТекстЗапроса;
	
	ЭтаФорма.Список = Запрос.Выполнить().Выгрузить();

КонецПроцедуры


Процедура ПриОткрытии()

	ЭтаФорма.Контрагент = ПараметрОтборПоЗначению;
	ЗаполнитьТабличнуюЧасть();
	
КонецПроцедуры


Процедура КоманднаяПанельФормыОткрытьФорму(Кнопка)
	
	ТекДанные = ЭлементыФормы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные.Ссылка.ПолучитьФорму().Открыть();
	
КонецПроцедуры

Процедура КоманднаяПанельФормыПометитьНаУдаление(Кнопка)
	
	ТекДанные = ЭлементыФормы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТекДанные.Ссылка = Неопределено тогда
		Возврат
	КонецЕсли;

	ТекущаяПометка = ТекДанные.Ссылка.ПометкаУдаления;
	Если ТекущаяПометка Тогда
		ТекстВопроса 	= "Снять с объекта пометку на удаление?";
		ТекстДействие 	= "снять с объекта пометку на удаление"
	Иначе
		ТекстВопроса 	= "Пометить объект на удаление?";
		ТекстДействие 	= "пометить объект на удаление";
	КонецЕсли;
	
	Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		Попытка
			ДокОбъект = ТекДанные.Ссылка.ПолучитьОбъект();
			ДокОбъект.УстановитьПометкуУдаления(НЕ ТекущаяПометка);
		Исключение
			ОбщегоНазначения.СообщитьОбОшибке("Не удалось " + ТекстДействие + ": " + ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;

	ЭлементыФормы.Список.ОбновитьСтроки();
	
КонецПроцедуры

Процедура КоманднаяПанельФормыПровести(Кнопка)

	ТекДанные = ЭлементыФормы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТекСсылка = ТекДанные.Ссылка;
	Если ТекСсылка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекСсылка.ПометкаУдаления Тогда
		Предупреждение("Помеченный на удаление документ не может быть проведен!");
		Возврат;
	ИначеЕсли ТекСсылка.Дата > КонецДня(ТекущаяДата()) Тогда
		Предупреждение("Нельзя проводить документы будущей датой!");
		Возврат;
	КонецЕсли;
	
	Попытка
		ДокОбъект = ТекСсылка.ПолучитьОбъект();
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
		
		ЭлементыФормы.Список.ОбновитьСтроки();
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке("Не удалось провести документ: " + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

Процедура КоманднаяПанельФормыОтменаПроведения(Кнопка)

	ТекДанные = ЭлементыФормы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТекСсылка = ТекДанные.Ссылка;
	Если ТекСсылка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ТекСсылка.Проведен Тогда
		Предупреждение("Документ не проведен");
		Возврат;
	КонецЕсли;
	
	Попытка
		ДокОбъект = ТекСсылка.ПолучитьОбъект();
		ДокОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		
		ЭлементыФормы.Список.ОбновитьСтроки();
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке("Не удалось отменить проведение документа: " + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

Процедура КоманднаяПанельФормыОтборПоТекущемуЗначению(Кнопка)

	ТекДанные = ЭлементыФормы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//ИмяКолонки = ЭлементыФормы.Список.ТекущаяКолонка.Имя;
	//Если НЕ (ИмяКолонки = "Вид"
	//			ИЛИ ИмяКолонки = "ВидОперации"
	//			ИЛИ ИмяКолонки = "Организация"
	//			ИЛИ ИмяКолонки = "Сумма"
	//			ИЛИ ИмяКолонки = "Валюта") Тогда
	//	Возврат;
	//КонецЕсли;

	//ЗаполнитьТабличнуюЧасть(ИмяКолонки, ТекДанные);
	
КонецПроцедуры

Процедура КоманднаяПанельФормыОтключитьОтбор(Кнопка)

	//ЗаполнитьТабличнуюЧасть();

КонецПроцедуры

Процедура КоманднаяПанельФормыНайтиВЖурнале(Кнопка)
	
	ТекДанные = ЭлементыФормы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ФормаСписка = Документы[ТекДанные.Ссылка.Метаданные().Имя].ПолучитьФормуСписка();
	ФормаСписка.ПараметрТекущаяСтрока = ТекДанные.Ссылка;
	ФормаСписка.Открыть();
	
КонецПроцедуры

Процедура КоманднаяПанельФормыОбновить(Кнопка)

	ЗаполнитьТабличнуюЧасть();

КонецПроцедуры

Процедура КоманднаяПанельФормыДвиженияДокументаПоРегистрам(Кнопка)

	ТекДанные = ЭлементыФормы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	РаботаСДиалогами.НапечататьДвиженияДокумента(ТекДанные.Ссылка);

КонецПроцедуры

Процедура КоманднаяПанельФормыПроводкиДтКт(Кнопка)

	ТекДанные = ЭлементыФормы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	БухгалтерскийУчет.ОткрытьЖурналПроводок(ТекДанные.Ссылка);

КонецПроцедуры

Процедура КоманднаяПанельФормыДействиеПечать(Кнопка)

	ТекДанные = ЭлементыФормы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ТекДанные.Ссылка = Неопределено тогда
		Возврат
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокументИзФормыСписка(ТекДанные.Ссылка.ПолучитьОбъект());

КонецПроцедуры


Процедура КонтрагентПриИзменении(Элемент)

	ЗаполнитьТабличнуюЧасть();

КонецПроцедуры

Процедура КонтрагентОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

КонецПроцедуры


Процедура ОтборЗначениеОтбораПриИзменении(Элемент)

	ЗаполнитьТабличнуюЧасть();

КонецПроцедуры

Процедура ОтборЗначениеОтбораОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

КонецПроцедуры

Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	Если ВыбраннаяСтрока.Ссылка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВыбраннаяСтрока.Ссылка.ПолучитьФорму().Открыть();

КонецПроцедуры

Процедура СписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	КэшОформленияСтрок = Новый Соответствие;
	КэшПоТипамДокументов = Новый Соответствие;
	
	Для Каждого ОформлениеСтроки ИЗ ОформленияСтрок Цикл
		КэшОформленияСтрок.Вставить(ОформлениеСтроки.ДанныеСтроки.Ссылка, ОформлениеСтроки);		
		МетаданныеДокумента = ОформлениеСтроки.ДанныеСтроки.Ссылка.Метаданные();
		ИмяДокумента = МетаданныеДокумента.Имя;
		СинонимДокумента = МетаданныеДокумента.Синоним;
		
		ДополнитьКэшМетаданных(МетаданныеДокумента, ИмяДокумента);
		
		СтруктураТипа = КэшПоТипамДокументов[ИмяДокумента];
		Если СтруктураТипа = Неопределено Тогда
			СтруктураТипа = Новый Структура("Синоним, МассивСсылок", СинонимДокумента, Новый Массив);
			КэшПоТипамДокументов.Вставить(ИмяДокумента, СтруктураТипа);
		КонецЕсли;
		СтруктураТипа.МассивСсылок.Добавить(ОформлениеСтроки.ДанныеСтроки);		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Для Каждого КлючИЗначение ИЗ КэшПоТипамДокументов Цикл
		ТекИмяДокумента = КлючИЗначение.Ключ;
		
		Запрос.Текст = Запрос.Текст +
			?(Запрос.Текст = "", "", "
		|ОБЪЕДИНИТЬ ВСЕ 
		|") + "ВЫБРАТЬ
		|Ссылка,Проведен,ПометкаУдаления,
		|" + ?(мКэшРеквизитовДокумента[КлючИЗначение.Ключ]["ВидОперации"]		, "ВидОперации"						, "NULL") + " КАК ВидОперации,
		|" + ?(мКэшРеквизитовДокумента[КлючИЗначение.Ключ]["СуммаДокумента"]	, "СуммаДокумента"					, 
				?(мКэшРеквизитовДокумента[КлючИЗначение.Ключ]["Сумма"]			, "Сумма"							, "NULL")) + " КАК СуммаДокумента,
		|" + ?(мКэшРеквизитовДокумента[КлючИЗначение.Ключ]["ВалютаДокумента"]	, "ВалютаДокумента.Представление"	, "NULL") + " КАК Валюта,
		|" + ?(мКэшРеквизитовДокумента[КлючИЗначение.Ключ]["Организация"]		, "Организация.Представление"		, "NULL") + " КАК Организация,
		|" + ?(мКэшРеквизитовДокумента[КлючИЗначение.Ключ]["Ответственный"]		, "Ответственный.Представление"		, "NULL") + " КАК Ответственный,
		|""" + КлючИЗначение.Значение.Синоним + """ КАК Синоним 
		|ИЗ Документ." + КлючИЗначение.Ключ + "
		|ГДЕ Ссылка В (&" + КлючИЗначение.Ключ + ")";
					
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение.МассивСсылок);		
	КонецЦикла;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ОформлениеСтроки = КэшОформленияСтрок[Выборка.Ссылка];
		ОформлениеСтроки.Ячейки.Вид.УстановитьТекст(Выборка.Синоним);			
		ОформлениеСтроки.Ячейки.ВидОперации.УстановитьТекст(Выборка.ВидОперации);
		ОформлениеСтроки.Ячейки.Сумма.УстановитьТекст(Формат(Выборка.СуммаДокумента, "ЧДЦ=2"));
		ОформлениеСтроки.Ячейки.Валюта.УстановитьТекст(Выборка.Валюта);
		ОформлениеСтроки.Ячейки.Организация.УстановитьТекст(Выборка.Организация);
		ОформлениеСтроки.Ячейки.Ответственный.УстановитьТекст(Выборка.Ответственный);
		ОформлениеСтроки.Ячейки.Картинка.ОтображатьКартинку = Истина;
		Если Выборка.Проведен Тогда	
			ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки = 0;
		Иначе 
			ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки = 2;
		КонецЕсли; 
		
		Если Выборка.ПометкаУдаления Тогда
			ОформлениеСтроки.Ячейки.Картинка.ИндексКартинки = 1;
		КонецЕсли; 
		
	КонецЦикла;
	
КонецПроцедуры


мКэшРеквизитовДокумента = Новый Соответствие;
//мСоответствиеИмен = ПолучитьСоответствиеИменИСинонимовДокументов();
	