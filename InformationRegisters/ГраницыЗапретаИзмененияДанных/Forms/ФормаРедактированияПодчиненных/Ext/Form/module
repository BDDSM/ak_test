
Процедура ТабПользователиПередУдалением(Элемент, Отказ)
	
	//Отказ = Истина;
	
КонецПроцедуры

Процедура ТабПользователиПользовательОчистка(Элемент, СтандартнаяОбработка)
	
	Отказ = Истина;
	
КонецПроцедуры

Процедура ТабПользователиПользовательНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элемент.СписокВыбора.Очистить();
	ЗапросПодчиненных = Новый Запрос();
	ЗапросПодчиненных.УстановитьПараметр("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
	ЗапросПодчиненных.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	                          |	ВЗ_Запрос.Пользователь
	                          |ИЗ
	                          |	(ВЫБРАТЬ
	                          |		ПользователиПодчиненныеПользователи.Пользователь КАК Пользователь
	                          |	ИЗ
	                          |		Справочник.Пользователи.ПодчиненныеПользователи КАК ПользователиПодчиненныеПользователи
	                          |	ГДЕ
	                          |		ПользователиПодчиненныеПользователи.Ссылка = &ТекущийПользователь) КАК ВЗ_Запрос
	                          |
	                          |УПОРЯДОЧИТЬ ПО
	                          |	ВЗ_Запрос.Пользователь.Наименование";
							  
	Выборка = ЗапросПодчиненных.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Элемент.СписокВыбора.Добавить(Выборка.Пользователь);
	КонецЦикла;	
	
КонецПроцедуры

Процедура ПриОткрытии()
	
		
	
КонецПроцедуры

Процедура ТабПользователиПользовательПриИзменении(Элемент)
	
	Если ТабПользователи.НайтиСтроки(Новый Структура("Пользователь", ЭлементыФормы.ТабПользователи.ТекущиеДанные.Пользователь)).Количество() > 1 Тогда
		Сообщить("В табличной части уже есть выбранный пользователь");
		ЭлементыФормы.ТабПользователи.ТекущиеДанные.Пользователь = Неопределено;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОсновныеДействияФормыСохранить(Кнопка)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ГраницыЗапретаИзмененияДанных.Пользователь
	               |ИЗ
	               |	РегистрСведений.ГраницыЗапретаИзмененияДанных КАК ГраницыЗапретаИзмененияДанных
	               |ГДЕ
	               |	ГраницыЗапретаИзмененияДанных.Пользователь В
	               |			(ВЫБРАТЬ
	               |				ПользователиПодчиненныеПользователи.Пользователь КАК Пользователь
	               |			ИЗ
	               |				Справочник.Пользователи.ПодчиненныеПользователи КАК ПользователиПодчиненныеПользователи
	               |			ГДЕ
	               |				ПользователиПодчиненныеПользователи.Ссылка = &ТекущийПользователь)";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Набор = РегистрыСведений.ГраницыЗапретаИзмененияДанных.СоздатьНаборЗаписей();
		Набор.Отбор.Пользователь.Установить(Выборка.Пользователь);
		Набор.Записать();
	КонецЦикла;	
	
	Для Каждого СтрокаТаб Из ТабПользователи Цикл
		Если ЗначениеЗаполнено(СтрокаТаб.Пользователь)
			И ЗначениеЗаполнено(СтрокаТаб.ГраницаЗапрета) Тогда
			Запись = РегистрыСведений.ГраницыЗапретаИзмененияДанных.СоздатьМенеджерЗаписи();
			Запись.Организация = Справочники.Организации.ПустаяСсылка();
			Запись.Пользователь = СтрокаТаб.Пользователь;
			Запись.ГраницаЗапретаИзменений = СтрокаТаб.ГраницаЗапрета;
			Запись.ГраницаЗапретаИзмененийНДС = СтрокаТаб.ГраницаЗапретаНДС;
			Запись.Записать();
		КонецЕсли;	
	КонецЦикла;
	Закрыть();
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.Текст = "ВЫБРАТЬ
	               |	МАКСИМУМ(ГраницыЗапретаИзмененияДанных.ГраницаЗапретаИзменений) КАК ГраницаЗапретаИзменений,
				   |	МАКСИМУМ(ГраницыЗапретаИзмененияДанных.ГраницаЗапретаИзмененийНДС) КАК ГраницаЗапретаИзмененийНДС
	               |ИЗ
	               |	РегистрСведений.ГраницыЗапретаИзмененияДанных КАК ГраницыЗапретаИзмененияДанных
	               |ГДЕ
	               |	ГраницыЗапретаИзмененияДанных.Пользователь = &ТекущийПользователь
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ГраницыЗапретаИзмененияДанных.Пользователь,
	               |	ГраницыЗапретаИзмененияДанных.ГраницаЗапретаИзменений,
				   |	ГраницыЗапретаИзмененияДанных.ГраницаЗапретаИзмененийНДС
	               |ИЗ
	               |	РегистрСведений.ГраницыЗапретаИзмененияДанных КАК ГраницыЗапретаИзмененияДанных
	               |ГДЕ
	               |	ГраницыЗапретаИзмененияДанных.Пользователь В
	               |			(ВЫБРАТЬ
	               |				ПользователиПодчиненныеПользователи.Пользователь КАК Пользователь
	               |			ИЗ
	               |				Справочник.Пользователи.ПодчиненныеПользователи КАК ПользователиПодчиненныеПользователи
	               |			ГДЕ
	               |				ПользователиПодчиненныеПользователи.Ссылка = &ТекущийПользователь)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ГраницыЗапретаИзмененияДанных.Пользователь.Наименование";
				   
	Результаты = Запрос.ВыполнитьПакет();
	
	СобственнаяГраницаВыборка = Результаты[0].Выбрать();
	Если СобственнаяГраницаВыборка.Следующий() Тогда
		СобственнаяГраница = СобственнаяГраницаВыборка.ГраницаЗапретаИзменений;
		СобственнаяГраницаНДС = СобственнаяГраницаВыборка.ГраницаЗапретаИзмененийНДС;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(СобственнаяГраница) Тогда
		Предупреждение("Вам не назначена собсвенная граница запрета, редактирование запрещено");
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	
	Выборка = Результаты[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДоб = ТабПользователи.Добавить();
		СтрокаДоб.Пользователь = Выборка.Пользователь;
		СтрокаДоб.ГраницаЗапрета = Выборка.ГраницаЗапретаИзменений;
		СтрокаДоб.ГраницаЗапретаНДС = Выборка.ГраницаЗапретаИзмененийНДС;
	КонецЦикла;
	
КонецПроцедуры

Процедура ТабПользователиГраницаЗапретаПриИзменении(Элемент)
	
	Если ЭлементыФормы.ТабПользователи.ТекущиеДанные.ГраницаЗапрета < СобственнаяГраница Тогда
		Сообщить("Нельзя установить границу меньшую, чем установлена у вас");
		ЭлементыФормы.ТабПользователи.ТекущиеДанные.ГраницаЗапрета = СобственнаяГраница;
	КонецЕсли;
	
	ГраницаЗапрета = ЭлементыФормы.ТабПользователи.ТекущиеДанные.ГраницаЗапрета;
	ГраницаЗапретаНДС = ЭлементыФормы.ТабПользователи.ТекущиеДанные.ГраницаЗапретаНДС;
	
	Если ЗначениеЗаполнено(ГраницаЗапрета) 
		И ЗначениеЗаполнено(ГраницаЗапретаНДС) 
		И ГраницаЗапрета < ГраницаЗапретаНДС Тогда
		#Если Клиент Тогда
			Сообщить("Граница запрета изменений НДС не может быть больше границы запрета изменений");			
		#КонецЕсли		 
		
		ЭлементыФормы.ТабПользователи.ТекущиеДанные.ГраницаЗапрета = Макс(ГраницаЗапрета, ГраницаЗапретаНДС);
		ЭлементыФормы.ТабПользователи.ТекущиеДанные.ГраницаЗапретаНДС = Макс(ГраницаЗапрета, ГраницаЗапретаНДС);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанель1ЗаполнитьВсех(Кнопка)
	
	Если ЭтаФорма.ТабПользователи.Количество() > 0 Тогда		
		Ответ = Вопрос("Текущий список пользователей будет очищен. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		
		ЭтаФорма.ТабПользователи.Очистить();
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.Текст = "ВЫБРАТЬ
	|	МАКСИМУМ(ГраницыЗапретаИзмененияДанных.ГраницаЗапретаИзменений) КАК ГраницаЗапретаИзменений,
	|	МАКСИМУМ(ГраницыЗапретаИзмененияДанных.ГраницаЗапретаИзмененийНДС) КАК ГраницаЗапретаИзмененийНДС
	|ПОМЕСТИТЬ ВТ_ТекущиеДанные
	|ИЗ
	|	РегистрСведений.ГраницыЗапретаИзмененияДанных КАК ГраницыЗапретаИзмененияДанных
	|ГДЕ
	|	ГраницыЗапретаИзмененияДанных.Пользователь = &ТекущийПользователь
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПользователиПодчиненныеПользователи.Пользователь КАК Пользователь,
	|	ЕСТЬNULL(ГраницыЗапретаИзмененияДанных.ГраницаЗапретаИзменений, ВТ_ТекущиеДанные.ГраницаЗапретаИзменений) КАК ГраницаЗапретаИзменений,
	|	ЕСТЬNULL(ГраницыЗапретаИзмененияДанных.ГраницаЗапретаИзмененийНДС, ВТ_ТекущиеДанные.ГраницаЗапретаИзмененийНДС) КАК ГраницаЗапретаИзмененийНДС
	|ИЗ
	|	Справочник.Пользователи.ПодчиненныеПользователи КАК ПользователиПодчиненныеПользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГраницыЗапретаИзмененияДанных КАК ГраницыЗапретаИзмененияДанных
	|		ПО ПользователиПодчиненныеПользователи.Пользователь = ГраницыЗапретаИзмененияДанных.Пользователь,
	|	ВТ_ТекущиеДанные КАК ВТ_ТекущиеДанные
	|ГДЕ
	|	ПользователиПодчиненныеПользователи.Ссылка = &ТекущийПользователь";				   
		
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДоб = ТабПользователи.Добавить();
		СтрокаДоб.Пользователь = Выборка.Пользователь;
		СтрокаДоб.ГраницаЗапрета = Выборка.ГраницаЗапретаИзменений;
		СтрокаДоб.ГраницаЗапретаНДС = Выборка.ГраницаЗапретаИзмененийНДС;
	КонецЦикла;

КонецПроцедуры
