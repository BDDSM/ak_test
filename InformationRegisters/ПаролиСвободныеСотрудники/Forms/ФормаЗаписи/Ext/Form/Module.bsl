
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	Запись.Логин  = "";
	Запись.Пароль = "";
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаСгенерироватьПароль(Команда)
	
	Если ЗначениеЗаполнено(Запись.Пароль) Тогда
		ПоказатьВопрос(Новый ОписаниеОповещения("СгенерироватьНовыйПарольВопросЗавершение", ЭтаФорма) , НСтр("ru = 'Сгенероровать новый пароль?'", "ru"), РежимДиалогаВопрос.ДаНет, 15 );
	Иначе
		СгенерироватьПарольКлиент(Запись.Сотрудник);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СгенерироватьНовыйПарольВопросЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СгенерироватьПарольКлиент(Запись.Сотрудник);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СгенерироватьПарольКлиент(Сотрудник);
	
	СтруктураПараметров = СгенерироватьПарольСерверБезКонтекста(Сотрудник);
	
	Если СтруктураПараметров <> Неопределено Тогда
		
		СтруктураПараметров.Свойство("Логин", Запись.Логин);
		СтруктураПараметров.Свойство("Пароль", Запись.Пароль);
		
		ЭтаФорма.Модифицированность = Истина;
		
	КонецЕсли;

КонецПроцедуры

&Насервере
Функция СгенерироватьПарольСерверБезКонтекста(Сотрудник);
	
	//Дополнительная проверка на заполненность помощника торгового управляющего 
	Если НЕ ЗначениеЗаполнено(Сотрудник.ПомощникТУ) Тогда
		Сообщить("У сотрудника не указан Помощник ТУ (генерация пароля невозможна)!");
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат РегистрыСведений.ПаролиСвободныеСотрудники.СгенерироватьПарольСвободноЗанятогоСотрудника(Сотрудник);
	
КонецФункции

#КонецОбласти





