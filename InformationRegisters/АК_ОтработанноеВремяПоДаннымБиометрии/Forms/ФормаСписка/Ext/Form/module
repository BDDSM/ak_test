
Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
		УстановитьФильтрПериода();
	КонецЕсли;
КонецПроцедуры

Процедура РегистрСведенийСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	//тут раскраска
	Если ДанныеСтроки.РучнаяКорректировка тогда
		ОформлениеСтроки.ЦветФона=WebЦвета.Желтый;
	ИначеЕсли Не ЗначениеЗаполнено(ДанныеСтроки.Длительность) тогда
		ОформлениеСтроки.ЦветФона=WebЦвета.Красный;
	Иначе
		ОформлениеСтроки.ЦветФона=ЭтаФорма.ЭлементыФормы.РегистрСведенийСписок.ЦветФона;
	КонецЕсли;
КонецПроцедуры

Процедура ПечатьТабеляНажатие(Элемент)
	ТабДок=Новый ТабличныйДокумент;
	Макет=РегистрыСведений.АК_ОтработанноеВремяПоДаннымБиометрии.ПолучитьМакет("Табель");
	ОбластьШапки=Макет.ПолучитьОбласть("Шапка");
	ОбластьШапки.Параметры.НачДата=Формат(ЭтаФорма.НачПериода,"ДЛФ=Д");
	ОбластьШапки.Параметры.КонДата=Формат(ЭтаФорма.КонПериода,"ДЛФ=Д");
	ТабДок.Вывести(ОбластьШапки);
	//формируем список сотрудников
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗЛИЧНЫЕ
	             |	АК_ОтработанноеВремяПоДаннымБиометрии.Сотрудник КАК Сотрудник
	             |ИЗ
	             |	РегистрСведений.АК_ОтработанноеВремяПоДаннымБиометрии КАК АК_ОтработанноеВремяПоДаннымБиометрии
	             |ГДЕ
	             |	АК_ОтработанноеВремяПоДаннымБиометрии.Период МЕЖДУ &ДатаНач И &ДатаКон
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	АК_ОтработанноеВремяПоДаннымБиометрии.Сотрудник
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	Сотрудник";
	Запрос.УстановитьПараметр("ДатаНач",ЭтаФорма.НачПериода);
	Запрос.УстановитьПараметр("ДатаКон",ЭтаФорма.КонПериода);
	ТаблицаСотрудников=Запрос.Выполнить().Выгрузить();
	//формируем данные
	Запрос.Текст="ВЫБРАТЬ
	             |	АК_ОтработанноеВремяПоДаннымБиометрии.Период,
	             |	АК_ОтработанноеВремяПоДаннымБиометрии.Сотрудник,
	             |	ВЫРАЗИТЬ(АК_ОтработанноеВремяПоДаннымБиометрии.Длительность КАК ЧИСЛО(10, 1)) КАК Длительность
	             |ИЗ
	             |	РегистрСведений.АК_ОтработанноеВремяПоДаннымБиометрии КАК АК_ОтработанноеВремяПоДаннымБиометрии
	             |ГДЕ
	             |	АК_ОтработанноеВремяПоДаннымБиометрии.Период МЕЖДУ &ДатаНач И &ДатаКон";
	Запрос.УстановитьПараметр("ДатаНач",ЭтаФорма.НачПериода);
	Запрос.УстановитьПараметр("ДатаКон",ЭтаФорма.КонПериода);
	ТаблицаДанных=Запрос.Выполнить().Выгрузить();
	//формируем шапку таблицы
	ОбластьЗаголовка=Макет.ПолучитьОбласть("ШапкаСотрудник");
	ТабДок.Вывести(ОбластьЗаголовка);
	ДатаЗаг=ЭтаФорма.НачПериода;
	Пока ДатаЗаг<=ЭтаФорма.КонПериода цикл
		ОбластьЗаголовкаДаты=Макет.ПолучитьОбласть("ДеньШапки");
		ОбластьЗАголовкаДаты.Параметры.ДеньШапки=Строка(Формат(ДатаЗаг,"ДФ=""дд"""));
		ТабДок.Присоединить(ОбластьЗаголовкаДаты);
		ДатаЗаг=ДатаЗаг+24*3600;
	КонецЦикла;
	ОбластьЗаголовкаДаты=Макет.ПолучитьОбласть("ШапкаИтого");
	ТабДок.Присоединить(ОбластьЗаголовкаДаты);
	//проходим для каждого сотрудника цикл по всем датам
	Для каждого Сотрудник Из ТаблицаСотрудников Цикл
		ОбластьЗаголовка=Макет.ПолучитьОбласть("ФИОСотрудника");
		ОбластьЗаголовка.Параметры.ФИОСотрудника=Сотрудник.Сотрудник;
		ТабДок.Вывести(ОбластьЗаголовка);
		ДатаЗаг=ЭтаФорма.НачПериода;
		ИтогПоСотруднику=0;
		Пока ДатаЗаг<=ЭтаФорма.КонПериода цикл
			ОбластьКолваЧасов=Макет.ПолучитьОбласть("КолвоЧасов");
			Отбор1=Новый Структура;
			Отбор1.Вставить("Период",ДатаЗаг);
			Отбор1.Вставить("Сотрудник",Сотрудник.Сотрудник);
			МассивДанных=ТаблицаДанных.НайтиСтроки(Отбор1);
			Если МассивДанных.Количество() тогда
				ОбластьКолваЧасов.Параметры.КолвоЧасов=МассивДанных[0].Длительность;
				ИтогПоСотруднику=ИтогПоСотруднику+МассивДанных[0].Длительность;
			КонецЕсли;
			ТабДок.Присоединить(ОбластьКолваЧасов);
			ДатаЗаг=ДатаЗаг+24*3600;
		КонецЦикла;
		ОбластьКолваЧасов=Макет.ПолучитьОбласть("ИтогоСотрудник");
		ОбластьКолваЧасов.Параметры.ИтогСотрудник=ИтогПоСотруднику;
		ТабДок.Присоединить(ОбластьКолваЧасов);	
	КонецЦикла; 
	//выводим подвал
	ТаблицаДанных.Свернуть("Период","Длительность");
	ОбластьЗаголовка=Макет.ПолучитьОбласть("ПодвалИтого");
	//ОбластьЗаголовка.
	ТабДок.Вывести(ОбластьЗаголовка);
	ДатаЗаг=ЭтаФорма.НачПериода;
	Пока ДатаЗаг<=ЭтаФорма.КонПериода цикл
		ОбластьКолваЧасов=Макет.ПолучитьОбласть("ПодвалДень");
		Отбор1=Новый Структура;
		Отбор1.Вставить("Период",ДатаЗаг);
		МассивДанных=ТаблицаДанных.НайтиСтроки(Отбор1);
		Если МассивДанных.Количество() тогда
			ОбластьКолваЧасов.Параметры.ИтогДень=МассивДанных[0].Длительность;
		КонецЕсли;
		ТабДок.Присоединить(ОбластьКолваЧасов);
		ДатаЗаг=ДатаЗаг+24*3600;
	КонецЦикла;
	ОбластьКолваЧасов=Макет.ПолучитьОбласть("ОбщийИтог");
	ОбластьКолваЧасов.Параметры.ОбщийИтог=ТаблицаДанных.Итог("Длительность");
	ТабДок.Присоединить(ОбластьКолваЧасов);
	ТабДок.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;	
	ТабДок.Показать("Табель отработанного времени");
КонецПроцедуры

Процедура ЗагрузитьДанныеНажатие(Элемент)
	ТаблицаСКУД=РаботаСБиометрией.ПолучитьДанныеСКУД(НачалоДня(ЭтаФорма.НачПериода),КонецДня(ЭтаФорма.КонПериода));
	РаботаСБиометрией.ЗаполнитьРегистрБиометрии(ТаблицаСКУД);
	Сообщить("Загружено "+Строка(ТаблицаСКУД.Количество())+" записей.");
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	ЭтаФорма.НачПериода=?(День(ТекущаяДата())>15,НачалоМесяца(ТекущаяДата()),НачалоМесяца(НачалоМесяца(ТекущаяДата())-1));
	ЭтаФорма.КонПериода=?(День(ТекущаяДата())>15,КонецМесяца(ТекущаяДата()),КонецМесяца(НачалоМесяца(ТекущаяДата())-1));
	УстановитьФильтрПериода();
КонецПроцедуры

Процедура УстановитьФильтрПериода()
	ЭтаФорма.РегистрСведенийСписок.Отбор.Период.ЗначениеС=ЭтаФорма.НачПериода;
	ЭтаФорма.РегистрСведенийСписок.Отбор.Период.ЗначениеПо=ЭтаФорма.КонПериода;
	ЭтаФорма.РегистрСведенийСписок.Отбор.Период.Использование=Истина;
КонецПроцедуры

Процедура НачПериодаПриИзменении(Элемент)
	УстановитьФильтрПериода();
КонецПроцедуры

Процедура КонПериодаПриИзменении(Элемент)
	УстановитьФильтрПериода();
КонецПроцедуры

