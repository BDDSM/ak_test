
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ПроверкаОткрытия") Тогда
		
		МассивПараметров = РегистрыСведений.ПравилаРаботыСотрудниковКонтроль.ПолучитьПараметрыОтображенияФормыКонтроля();
		
		Если МассивПараметров <> Неопределено Тогда
			СтруктураПараметров = МассивПараметров[0];
		Иначе
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
	Иначе
		
		СтруктураПараметров = Параметры;
		
	КонецЕсли;
	
	Если СтруктураПараметров = Неопределено Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	//Заполнение параметров формы
	СтруктураПараметров.Свойство("ДатаКонтроля", ДатаКонтроля);
	СтруктураПараметров.Свойство("ПравилаСсылка", СправочникСсылка);
	СтруктураПараметров.Свойство("СпособОтправки", СпособОтправки);
	СтруктураПараметров.Свойство("ОбъектКонтроля", ОбъектКонтроля);
	
	СтруктураПараметров.Свойство("Прочитано", Прочитано);
	СтруктураПараметров.Свойство("Распечатано", Распечатано);
	СтруктураПараметров.Свойство("КонтролироватьПечать", КонтролироватьПечать);
	СтруктураПараметров.Свойство("КонтролироватьПрочтение", КонтролироватьПрочтение);
	
	СтруктураПараметров.Свойство("ТекстСообщения", СообщениеПользователям);
	СтруктураПараметров.Свойство("Версия", ТекущаяВерсия);
	
	СтруктураПараметров.Свойство("ТекущийПродавец", ТекущийПродавец);
	
	Если НЕ ЗначениеЗаполнено(СправочникСсылка) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	//Воссстановление текста HTML
	ВременныйКаталог = Справочники.ПравилаРаботыСотрудников.ПолучитьКаталогХраненияФайловКартинок(ТекущаяВерсия, ЭтаФорма.УникальныйИдентификатор);
	
	Попытка
		Справочники.ПравилаРаботыСотрудников.ВосстановитьКартинкиHTMLТекущейВерсии(СправочникСсылка, ТекущаяВерсия, ТекстHTML, ВременныйКаталог);
	Исключение //Если возникнет проблема с доступом к временному каталогу с кэшем HTML страницы (ограничение прав, проблемы сети и пр.)
		Отказ = Истина;
		Возврат;
	КонецПопытки;
	
	УстановитьЗаголовокФормы();
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаПодтвердить(Команда)
	
	Если ПроверитьВыполнениеДействий() Тогда
		
		ПодтвердитьДействиеСервер();
		
		Этаформа.Закрыть();
		
	Иначе
		
		Сообщить(НСтр("ru = 'Выполните требуемые действия, и установите соответствующие отметки (рядом с кнопкой ""Подтвердить"")!';"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПредпросмотр(Команда)
	
	ПредпросмотрHTML();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПечать(Команда)
	
	ПечатьHTML();	
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьВБраузере(Команда)
		
	Если НЕ ПустаяСтрока(ТекстHTML) Тогда 
		
		ИмяФайлаТекстHTML = ПолучитьИмяВременногоФайла(".html");
		
		ТекстовыйДокумент = Новый ТекстовыйДокумент;
		ТекстовыйДокумент.УстановитьТекст(ТекстHTML);
		
		ТекстовыйДокумент.Записать(ИмяФайлаТекстHTML);
		
		ЗапуститьПриложение(ИмяФайлаТекстHTML);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьЗаголовокФормы()
	
	ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + " (Версия: " + ТекущаяВерсия + ")";
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТипДанныхСтроки()
	
	ТекущиеДанные = Элементы.СписокПолучателей.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		Если ТипЗнч(ТекущиеДанные.Ссылка) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
			ТекущиеДанные.Тип = ПредопределенноеЗначение("Перечисление.СпособыОтправкиУведомлений.Магазины");
			ТекущиеДанные.ФункциональнаяРоль = "Магазины";
		ИначеЕсли ТипЗнч(ТекущиеДанные.Ссылка) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			ТекущиеДанные.Тип = ПредопределенноеЗначение("Перечисление.СпособыОтправкиУведомлений.Пользователи");
			ТекущиеДанные.ФункциональнаяРоль = ПолучитьФункциональнуюРольСотрудника(ТекущиеДанные.Ссылка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьФункциональнуюРольСотрудника(Сотрудник)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	РолиПользователейСоставРоли.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|ГДЕ
		|	РолиПользователейСоставРоли.Сотрудник = &Сотрудник
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Выборка.Следующий();
		
		Возврат Выборка.Ссылка;
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПредпросмотрHTML()
	
	Перем Документ;
	
	Документ = Элементы.ТекстHTML.Документ;
	
	sExpression = "
	|printPreview();
	|
	|function printPreview() {
	|	var yourDOCTYPE = ""<!DOCTYPE html>""; // your doctype declaration
	|	var printPreview = window.open('about:blank', 'print_preview', ""resizable=yes,scrollbars=yes,status=yes"");
	|	var printDocument = printPreview.document;
	|	printDocument.open();
	|	printDocument.write(yourDOCTYPE+
	|			   ""<html>""+
	|				   document.documentElement.innerHTML+
	|			   ""</html>"");
	|	printDocument.close();
	|}";
	
	Документ.parentWindow.execScript(sExpression);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьHTML()
	
	Перем Документ;
	
	Документ = Элементы.ТекстHTML.Документ;
	
	sExpression = "
	|CallPrint();
	|
	|function CallPrint() {
	|	var yourDOCTYPE = ""<!DOCTYPE html>""; // your doctype declaration
	|	var printDocument = window.open('', '', 'width=200,height=100');
	|	var printPreview = printDocument.document;
	|	printPreview.write(yourDOCTYPE+
	|			   ""<html>""+
	|				   document.documentElement.innerHTML+
	|			   ""</html>"");
	|	printPreview.close();
	|	printDocument.focus();
	|	printDocument.print();
	|	printDocument.close();
	|}";
	
	Документ.parentWindow.execScript(sExpression);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов();
	
	Элементы.Прочитано.Видимость   = КонтролироватьПрочтение;
	Элементы.Распечатано.Видимость = КонтролироватьПечать;
	
	Элементы.ДекорацияНадписьПодтверждение.Заголовок = "" + ПараметрыСеанса.ТекущийПользователь + ?(ЗначениеЗаполнено(ТекущийПродавец), " (" + ТекущийПродавец + ")", "");
	
КонецПроцедуры

&НаСервере
Процедура ПодтвердитьДействиеСервер();
		
	РегистрыСведений.ПравилаРаботыСотрудниковКонтроль.ПодтвердитьЗаписьКонтроляПравилРаботы(Новый Структура("ДатаКонтроля, ПравилаСсылка, СпособОтправки, ОбъектКонтроля, Прочитано, Распечатано, ОтветственныйККМ", 
	           ДатаКонтроля, СправочникСсылка, СпособОтправки, ОбъектКонтроля, Прочитано, Распечатано, ТекущийПродавец));
			   
КонецПроцедуры

&НаКлиенте
Функция ПроверитьВыполнениеДействий()
	
	//+++АК mika 2018.01.31 Без задачи. Замечено что некоторые магазины не отмечают флагами выполненное действие, а просто нажимают кнопку "подтвердить".
	Возврат (Элементы.Прочитано.Видимость И КонтролироватьПрочтение И Прочитано) 
		ИЛИ (Элементы.Распечатано.Видимость И КонтролироватьПечать И Распечатано);
	
КонецФункции

#КонецОбласти

