
Функция ПолучитьПочтуПолучателя(Получатель)
	
	Если ТипЗнч(Получатель) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ФизЛицо", Получатель);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Представление
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &ФизЛицо
		|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
		|	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица)";
					   
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Возврат Выборка.Представление;
		КонецЕсли;
		
		Возврат "";
		
	ИначеЕсли ТипЗнч(Получатель) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		
		Возврат Получатель.АдресЭлектроннойПочты;
		
	КонецЕсли;	
	
КонецФункции	

&НаКлиенте
Процедура ПолучателиСотрудникПриИзменении(Элемент)
	
	Элементы.Получатели.ТекущиеДанные.Почта = ПолучитьПочтуПолучателя(Элементы.Получатели.ТекущиеДанные.Получатель);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//
	Если ЗначениеЗаполнено(Параметры.ТабФайлов) Тогда
		
		ТабДанные = ЗначениеИзСтрокиВнутр(Параметры.ТабФайлов);
		Для Каждого СтрокаТаб Из ТабДанные Цикл
			СтрокаДоб = ЭтаФорма.ПрикрепитьФайлы.Добавить();
			СтрокаДоб.Прикрепить 		= Истина;
			СтрокаДоб.ИмяФайла 			= СтрокаТаб.ИмяФайла;
			СтрокаДоб.Идентификатор 	= СтрокаТаб.Идентификатор;
			СтрокаДоб.ДатаДобавления 	= СтрокаТаб.ДатаДобавления;
			СтрокаДоб.Расширение 		= СтрокаТаб.Расширение;
		КонецЦикла;
		
	КонецЕсли;
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекДата"	, ТекущаяДата());
	Запрос.УстановитьПараметр("Объект"	, Параметры.ТипОбращения);
	Запрос.УстановитьПараметр("Владелец", Параметры.Номенклатура);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РолиПользователейСоставРоли.Сотрудник
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
	|			&ТекДата,
	|			ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ОтветственныйЗаТипОбращенияПокупателя)
	|				И Объект = &Объект) КАК СоответствиеОбъектРольСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = РолиПользователейСоставРоли.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Ссылка,
	|	ЗначенияСвойствОбъектов.Значение КАК Производитель
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов.Объект
	|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец = &Владелец";
				   
	Результаты = Запрос.ВыполнитьПакет();
	
	Выборка = Результаты[0].Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДоб = ЭтаФорма.Получатели.Добавить();
		СтрокаДоб.Получатель 	= Выборка.Сотрудник;
		СтрокаДоб.Почта 		= ПолучитьПочтуПолучателя(СтрокаДоб.Получатель);
	КонецЦикла;
	
	Выборка = Результаты[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Параметры.Производитель = Выборка.Производитель Тогда
			Параметры.Характеристика = Выборка.Ссылка;
			Прервать;
		КонецЕсли;	
	КонецЦикла;	
	
	//
	Если Параметры.ТипОбращения.УведомлятьПродактМенеджера Тогда
		
		Запрос.УстановитьПараметр("Характеристика", Параметры.Характеристика);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоответствиеОбъектРольСрезПоследнихХар.РольПользователя, ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
		|			ТОГДА СоответствиеОбъектРольСрезПоследнихКонтр.РольПользователя
		|		ИНАЧЕ СоответствиеОбъектРольСрезПоследнихХар.РольПользователя
		|	КОНЕЦ КАК РольТехнолог
		|ПОМЕСТИТЬ ВТ_ТехнологРоли
		|ИЗ
		|	(ВЫБРАТЬ
		|		ХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
		|		ЗначенияСвойствОбъектов.Значение КАК Производитель
		|	ИЗ
		|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|			ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов.Объект
		|				И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
		|	ГДЕ
		|		ХарактеристикиНоменклатуры.Ссылка = &Характеристика) КАК ВЗ_Характеристики
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ТекДата, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)) КАК СоответствиеОбъектРольСрезПоследнихХар
		|		ПО ВЗ_Характеристики.Характеристика = СоответствиеОбъектРольСрезПоследнихХар.Объект
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ТекДата, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)) КАК СоответствиеОбъектРольСрезПоследнихКонтр
		|		ПО ВЗ_Характеристики.Производитель = СоответствиеОбъектРольСрезПоследнихКонтр.Объект
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ЕСТЬNULL(СоответствиеОбъектРольСрезПоследнихХар.РольПользователя, ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
		|				ТОГДА СоответствиеОбъектРольСрезПоследнихКонтр.РольПользователя
		|			ИНАЧЕ СоответствиеОбъектРольСрезПоследнихХар.РольПользователя
		|		КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЗ_Запрос.РольТехнолог
		|ПОМЕСТИТЬ ВТ_ВсеТехнологи
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ТехнологРоли.РольТехнолог.Родитель КАК РольТехнолог
		|	ИЗ
		|		ВТ_ТехнологРоли КАК ВТ_ТехнологРоли
		|	ГДЕ
		|		ЕСТЬNULL(ВТ_ТехнологРоли.РольТехнолог.Родитель, ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		РолиПользователей.Ссылка
		|	ИЗ
		|		Справочник.РолиПользователей КАК РолиПользователей
		|	ГДЕ
		|		РолиПользователей.Родитель В
		|				(ВЫБРАТЬ
		|					ВТ_ТехнологРоли.РольТехнолог
		|				ИЗ
		|					ВТ_ТехнологРоли КАК ВТ_ТехнологРоли)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ТехнологРоли.РольТехнолог
		|	ИЗ
		|		ВТ_ТехнологРоли КАК ВТ_ТехнологРоли) КАК ВЗ_Запрос
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РолиПользователейСоставРоли.Сотрудник
		|ИЗ
		|	(ВЫБРАТЬ
		|		СоответствиеОбъектРольСрезПоследних.РольПользователя КАК РольПользователя
		|	ИЗ
		|		ВТ_ВсеТехнологи КАК ВТ_ВсеТехнологи
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ТекДата, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.БрендМенеджер)) КАК СоответствиеОбъектРольСрезПоследних
		|			ПО ВТ_ВсеТехнологи.РольТехнолог = СоответствиеОбъектРольСрезПоследних.Объект) КАК ВЗ_Запрос
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|		ПО ВЗ_Запрос.РольПользователя = РолиПользователейСоставРоли.Ссылка";
					   
		Выборка = Запрос.Выполнить().Выбрать();
		
		СтруктураОтбора = Новый Структура("Получатель");
		Пока Выборка.Следующий() Цикл
			СтруктураОтбора.Получатель = Выборка.Сотрудник;
			Если ЭтаФорма.Получатели.НайтиСтроки(СтруктураОтбора).Количество() = 0 Тогда
				СтрокаДоб = ЭтаФорма.Получатели.Добавить();
				СтрокаДоб.Получатель 	= Выборка.Сотрудник;
				СтрокаДоб.Почта 		= ПолучитьПочтуПолучателя(СтрокаДоб.Получатель);
			КонецЕсли;	
		КонецЦикла;
		
	КонецЕсли;
	
	//
	Если Параметры.ТипОбращения.УведомлятьТехнолога Тогда
		
		Запрос.УстановитьПараметр("Характеристика", Параметры.Характеристика);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(СоответствиеОбъектРольСрезПоследнихХар.РольПользователя, ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
		|			ТОГДА СоответствиеОбъектРольСрезПоследнихКонтр.РольПользователя
		|		ИНАЧЕ СоответствиеОбъектРольСрезПоследнихХар.РольПользователя
		|	КОНЕЦ КАК РольТехнолог
		|ПОМЕСТИТЬ ВТ_ТехнологРоли
		|ИЗ
		|	(ВЫБРАТЬ
		|		ХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
		|		ЗначенияСвойствОбъектов.Значение КАК Производитель
		|	ИЗ
		|		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|			ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов.Объект
		|				И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
		|	ГДЕ
		|		ХарактеристикиНоменклатуры.Ссылка = &Характеристика) КАК ВЗ_Характеристики
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ТекДата, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)) КАК СоответствиеОбъектРольСрезПоследнихХар
		|		ПО ВЗ_Характеристики.Характеристика = СоответствиеОбъектРольСрезПоследнихХар.Объект
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ТекДата, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)) КАК СоответствиеОбъектРольСрезПоследнихКонтр
		|		ПО ВЗ_Характеристики.Производитель = СоответствиеОбъектРольСрезПоследнихКонтр.Объект
		|ГДЕ
		|	ВЫБОР
		|			КОГДА ЕСТЬNULL(СоответствиеОбъектРольСрезПоследнихХар.РольПользователя, ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
		|				ТОГДА СоответствиеОбъектРольСрезПоследнихКонтр.РольПользователя
		|			ИНАЧЕ СоответствиеОбъектРольСрезПоследнихХар.РольПользователя
		|		КОНЕЦ <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЗ_Запрос.РольТехнолог
		|ПОМЕСТИТЬ ВТ_ВсеТехнологи
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТ_ТехнологРоли.РольТехнолог.Родитель КАК РольТехнолог
		|	ИЗ
		|		ВТ_ТехнологРоли КАК ВТ_ТехнологРоли
		|	ГДЕ
		|		ЕСТЬNULL(ВТ_ТехнологРоли.РольТехнолог.Родитель, ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.РолиПользователей.ПустаяСсылка)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		РолиПользователей.Ссылка
		|	ИЗ
		|		Справочник.РолиПользователей КАК РолиПользователей
		|	ГДЕ
		|		РолиПользователей.Родитель В
		|				(ВЫБРАТЬ
		|					ВТ_ТехнологРоли.РольТехнолог
		|				ИЗ
		|					ВТ_ТехнологРоли КАК ВТ_ТехнологРоли)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТ_ТехнологРоли.РольТехнолог
		|	ИЗ
		|		ВТ_ТехнологРоли КАК ВТ_ТехнологРоли) КАК ВЗ_Запрос
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РолиПользователейСоставРоли.Сотрудник
		|ИЗ
		|	ВТ_ВсеТехнологи КАК ВТ_ВсеТехнологи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|		ПО ВТ_ВсеТехнологи.РольТехнолог = РолиПользователейСоставРоли.Ссылка";
					   
		Выборка = Запрос.Выполнить().Выбрать();
		
		СтруктураОтбора = Новый Структура("Получатель");
		Пока Выборка.Следующий() Цикл
			СтруктураОтбора.Получатель = Выборка.Сотрудник;
			Если ЭтаФорма.Получатели.НайтиСтроки(СтруктураОтбора).Количество() = 0 Тогда
				СтрокаДоб = ЭтаФорма.Получатели.Добавить();
				СтрокаДоб.Получатель 	= Выборка.Сотрудник;
				СтрокаДоб.Почта 		= ПолучитьПочтуПолучателя(СтрокаДоб.Получатель);
			КонецЕсли;	
		КонецЦикла;
		
	КонецЕсли;
	
	//
	Если Параметры.ТипОбращения.УведомлятьМагазин
			И ЗначениеЗаполнено(Параметры.ТТ) Тогда
		СтрокаДоб = Получатели.Добавить();
		СтрокаДоб.Получатель 	= Параметры.ТТ;
		СтрокаДоб.Почта 		= ПолучитьПочтуПолучателя(СтрокаДоб.Получатель);
	КонецЕсли;
	
	//
	Если Параметры.ТипОбращения.УведомлятьТерриториальногоУправляющего Тогда
		
		Запрос.УстановитьПараметр("ТТ", Параметры.ТТ);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РолиПользователейСоставРоли.Сотрудник
		|ИЗ
		|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
		|			&ТекДата,
		//+++ AK suvv 2018.06.08 ИП-00018376.01
		//|			ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
		|			(ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
		|           ИЛИ ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы))
		//--- AK suvv
		|				И Объект = &ТТ) КАК СоответствиеОбъектРольСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя.Родитель = РолиПользователейСоставРоли.Ссылка";
					   
		Выборка = Запрос.Выполнить().Выбрать();
		
		СтруктураОтбора = Новый Структура("Получатель");
		Пока Выборка.Следующий() Цикл
			СтруктураОтбора.Получатель = Выборка.Сотрудник;
			Если ЭтаФорма.Получатели.НайтиСтроки(СтруктураОтбора).Количество() = 0 Тогда
				СтрокаДоб = ЭтаФорма.Получатели.Добавить();
				СтрокаДоб.Получатель 	= Выборка.Сотрудник;
				СтрокаДоб.Почта 		= ПолучитьПочтуПолучателя(СтрокаДоб.Получатель);
			КонецЕсли;	
		КонецЦикла;
		
	КонецЕсли;
	
	//
	Если Параметры.ТипОбращения.УведомлятьПомощникаТерриториальногоУправляющего Тогда
		
		Запрос.УстановитьПараметр("ТТ", Параметры.ТТ);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РолиПользователейСоставРоли.Сотрудник
		|ИЗ
		|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
		|			&ТекДата,
		//+++ AK suvv 2018.06.08 ИП-00018376.01
		//|			ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
		|			(ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
		|            ИЛИ ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы)) 
		//--- AK suvv
		|				И Объект = &ТТ) КАК СоответствиеОбъектРольСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = РолиПользователейСоставРоли.Ссылка";
		Выборка = Запрос.Выполнить().Выбрать();
					   
		СтруктураОтбора = Новый Структура("Получатель");
		Пока Выборка.Следующий() Цикл
			СтруктураОтбора.Получатель = Выборка.Сотрудник;
			Если ЭтаФорма.Получатели.НайтиСтроки(СтруктураОтбора).Количество() = 0 Тогда
				СтрокаДоб = ЭтаФорма.Получатели.Добавить();
				СтрокаДоб.Получатель 	= Выборка.Сотрудник;
				СтрокаДоб.Почта 		= ПолучитьПочтуПолучателя(СтрокаДоб.Получатель);
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.Ответственный.ФизЛицо) Тогда
		СтрокаДоб = ЭтаФорма.Получатели.Добавить();
		СтрокаДоб.Получатель 	= Параметры.Ответственный.ФизЛицо;
		СтрокаДоб.Почта 		= ПолучитьПочтуПолучателя(СтрокаДоб.Получатель);
	КонецЕсли;	
	
	Для Каждого СтрокаПолучатель Из Параметры.ТипОбращения.ФизЛицаПолучатели Цикл
		СтрокаДоб = ЭтаФорма.Получатели.Добавить();
		СтрокаДоб.Получатель 	= СтрокаПолучатель.Сотрудник;
		СтрокаДоб.Почта 		= ПолучитьПочтуПолучателя(СтрокаДоб.Получатель);
	КонецЦикла;	
	
	ТемаПисьма 	= Параметры.ТемаПисьма;
	ТекстПисьма = Параметры.ТекстПисьма;
	//+++AK GREK 05.09.2017 ИП-00015679
	НомерКассы = Параметры.НомерКассы;
	Номер_Бланка = Параметры.Номер_Бланка;
	Производитель = Параметры.Производитель;
	ТипЖалобы = Параметры.ТипЖалобы;
	//---
	
	ПочтаОтветственного = ПолучитьПочтуПолучателя(Параметры.Ответственный.ФизЛицо);
	ТекстПисьма = ТекстПисьма + Символы.ПС + Символы.ПС + "Ответственный: " + Параметры.Ответственный + Символы.ПС +
					"Ответ просьба прислать в течении 24 часов.";
	                //+++АК CISA 2018.10.05 ИП-00020023 закомментировал лишнее
					// на почты:" +
					//?(ЗначениеЗаполнено(ПочтаОтветственного), Символы.ПС + ПочтаОтветственного, "")	+ Символы.ПС + "hotline@vkusvill.ru";
					//---АК CISA
	ЗаполнитьТаблицуСтатистики(Параметры.Производитель);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуСтатистики(Поставщик)
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОбращенияПокупателей.ДатаДок КАК ДатаОбращения,
	|	ОбращенияПокупателей.Номенклатура КАК Продукт,
	|	ОбращенияПокупателей.ТипЖалобы,
	|	ОбращенияПокупателей.СтатусЖалобы
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	ОбращенияПокупателей.ДатаДок > ДОБАВИТЬКДАТЕ(&ТекущаяДата, МЕСЯЦ, -6)
	|	И ОбращенияПокупателей.Производитель = &Производитель
	|	И ПОДСТРОКА(ОбращенияПокупателей.ТипЖалобы.Наименование, 1, 2) В (""01"", ""02"", ""03"",""04"",""07"",""09"")
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаОбращения";
	Запрос.УстановитьПараметр("ТекущаяДата",ТекущаяДата());
	Запрос.УстановитьПараметр("Производитель",Поставщик);
	ТаблицаСтатистики.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры
				

Процедура ОтправитьНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
	
	Почта = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Письмо = Новый ИнтернетПочтовоеСообщение;
	Почта.Подключиться(Профиль);
	
	Письмо.Тема = ЭтаФорма.ТемаПисьма;
	
	Письмо.ИмяОтправителя 	= "" + УчетнаяЗапись + "";
	Письмо.ИмяОтправителя  	= "" + СокрЛП(УчетнаяЗапись) + "";
	Письмо.Отправитель     	= "" + СокрЛП(УчетнаяЗапись) + "";
	Для Каждого СтрокаПолучатель Из Получатели Цикл
		Если ЗначениеЗаполнено(СтрокаПолучатель.Почта) Тогда
			Получатель = Письмо.Получатели.Добавить();
			Получатель.Адрес           = СтрокаПолучатель.Почта;
			Получатель.ОтображаемоеИмя = СокрЛП(СтрокаПолучатель.Получатель);
		КонецЕсли;	
	КонецЦикла;
	
	ТекстСообщения = Письмо.Тексты.Добавить();
	
	ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;
	
	Текст     = "<p>"+СтрЗаменить(ЭтаФорма.ТекстПисьма,Символы.ПС,"<br>")+"</p>";

	//+++AK GREK 05.09.2017 ИП-00016325
	//Отправка таблицы осуществляется только для случаев с указаным производителем
	ТЖ = Лев(ТипЖалобы.Наименование,2);
	Если ЗначениеЗаполнено(Производитель) И (ТЖ="01" ИЛИ ТЖ="02" ИЛИ ТЖ="03" ИЛИ ТЖ="04" ИЛИ ТЖ="07" ИЛИ ТЖ="09")  Тогда
		Текст = Текст+"<h6>Статистика по обращениям по производителю</h6>";
		Текст = Текст+ТекстХТМЛТаблицаСтатистики(ЭтаФорма.ТаблицаСтатистики);
	КонецЕсли;
	//---AK
	
	ТекстСообщения.Текст=Текст;
	
	КаталогФайлов = Константы.КаталогХраненияФайловКартинок.Получить();
	Если Прав(КаталогФайлов, 1) <> "\" Тогда
		КаталогФайлов = КаталогФайлов + "\";
	КонецЕсли;	
	
	КаталогФайлов = КаталогФайлов + "ОбращенияПокупателей\";
	
	Для Каждого СтрокаФайл Из ПрикрепитьФайлы Цикл
		Если НЕ СтрокаФайл.Прикрепить Тогда
			Продолжить;
		КонецЕсли;	
		Письмо.Вложения.Добавить(КаталогФайлов + Формат(СтрокаФайл.ДатаДобавления, "ДФ=yyyyMM") + "\" + СтрокаФайл.Идентификатор + СтрокаФайл.Расширение);
	КонецЦикла;	
	
	Почта.Послать(Письмо); 
	Почта.Отключиться();
	
КонецПроцедуры	

&НаСервере
Функция ТекстХТМЛТаблицаСтатистики(ТаблицаДанных)
	
	ТекстХТМЛ = "<table border><tr align='center'><td>Дата обращения<d><td>Продукт</td><td>Тип жалобы</td><td>Статус жалобы</td></tr>";

	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		ТекстХТМЛ = ТекстХТМЛ + "<tr>";
		ТекстХТМЛ = ТекстХТМЛ + "<td>" + Формат(СтрокаТаблицы.ДатаОбращения,"ДФ=dd.MM.yyyy") + "</td>";
		ТекстХТМЛ = ТекстХТМЛ + "<td>" + СокрЛП(СтрокаТаблицы.Продукт) + "</td>";
		ТекстХТМЛ = ТекстХТМЛ + "<td>" + СокрЛП(СтрокаТаблицы.ТипЖалобы) + "</td>";
		ТекстХТМЛ = ТекстХТМЛ + "<td>" + Формат(СтрокаТаблицы.СтатусЖалобы, "ЧГ=") + "</td>";
		ТекстХТМЛ = ТекстХТМЛ + "</tr>";
	КонецЦикла;
	ТекстХТМЛ = ТекстХТМЛ + "</table>";
	
	Возврат ТекстХТМЛ;
	
КонецФункции



&НаКлиенте
Процедура Отправить(Команда)
	
	ОтправитьНаСервере();
	
	Оповестить("ОбращенияПокупателей.СообщениеОтправлено",, ЭтаФорма.ВладелецФормы);
	Сообщить("Сообщение отправлено");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьАдресФайлаССервера(ИмяФайла)
	
	УстановитьПривилегированныйРежим(Истина);
	КаталогФайлов = Константы.КаталогХраненияФайловКартинок.Получить();
	
	Если Прав(КаталогФайлов, 1) <> "\" Тогда
		КаталогФайлов = КаталогФайлов + "\";
	КонецЕсли;	
	
	КаталогФайлов = КаталогФайлов + "ОбращенияПокупателей\";
	
	Возврат ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(КаталогФайлов + ИмяФайла));
	
КонецФункции

&НаКлиенте
Процедура ПрикрепитьФайлыИмяФайлаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекДанные = Элементы.ПрикрепитьФайлы.ТекущиеДанные;
	ДвДанные = ПолучитьИзВременногоХранилища(ПолучитьАдресФайлаССервера(Формат(ТекДанные.ДатаДобавления, "ДФ=yyyyMM") + "\" + ТекДанные.Идентификатор + ТекДанные.Расширение));
	ИмяВрФайла = ПолучитьИмяВременногоФайла(ТекДанные.Расширение);
	ДвДанные.Записать(ИмяВрФайла);
	ЗапуститьПриложение(ИмяВрФайла);
	
КонецПроцедуры

//AK GREK 05.09.2017 ИП-00015679
//Процедура для создания запроса на видео, передаются адреса получателй из формы и тема письма
Процедура ЗапроситьВидеоНаСервере()
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	ТекстЗапроса = 
	"Insert into sms_repl..times_for_video 
	|	(ShopNo,
	|	CashID,
	|	CashCheckNo,
	|	time_st,
	|	Time_fin,
	|	user_add,
	|	type_video,
	|	Email,
	|	text_video)
	|Select
	|	a.ShopNo_rep,
	|	a.CashID,
	|	a.CashCheckNo,
	|	a.OpenDate,
	|	a.CloseDate,
	|	'1С',
	|	10,
	|	'&Email',
	|	'&ТемаПисьма'
	|	
	|From Sms_repl..Checks as a(nolock)
	|Where
	|	CashId = " + Формат(ЭтаФорма.НомерКассы, "ЧГ=0") + "
	|	and CashCheckNo = " + Формат(ЭтаФорма.Номер_Бланка, "ЧГ=0") +"
	|select Cast(Link_Download as CHAR(150)) st_download,*
	|from sms_repl..times_for_video
	|Where CashId = " + Формат(ЭтаФорма.НомерКассы, "ЧГ=0") + " and CashCheckNo = " + Формат(ЭтаФорма.Номер_Бланка, "ЧГ=0");
	
	АдресаРассылки = "";
	Для Каждого СтрокаПолучатель Из Получатели Цикл
		Если ЗначениеЗаполнено(СтрокаПолучатель.Почта) Тогда
			АдресаРассылки = АдресаРассылки + " " + СтрокаПолучатель.Почта;
		КонецЕсли;	
	КонецЦикла;
		
	//ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Email", СтрЗаменить(СокрЛП(АдресаРассылки)," ",",")); не влазят иногда адреса рассылки в таблицу, не будем их передавать
	
	Если ЗначениеЗаполнено(ЭтаФорма.ТемаПисьма) Тогда
		text_video = "Тема письма: " + ЭтаФорма.ТемаПисьма;
	Иначе
		text_video = "";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТемаПисьма", text_video);
	rs = ADOСоединение.Execute(ТекстЗапроса);
	
	Пока НЕ rs = Неопределено Цикл
		Если rs.Fields.Count > 0 Тогда
			Прервать;
		КонецЕсли;
			rs = rs.NextRecordSet();
		КонецЦикла;
		
	НаборЗаписей = РегистрыСведений.ВидеоПоЗапросу.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.НомерЧека.Установить(Формат(ЭтаФорма.Номер_Бланка, "ЧГ=0"));
	НаборЗаписей.Отбор.НомерКассы.Установить(Формат(ЭтаФорма.НомерКассы, "ЧГ=0"));
	
	Попытка
		rs.MoveFirst();	
		Пока НЕ rs.EOF() Цикл
			СтрокаДоб = НаборЗаписей.Добавить();
			СтрокаДоб.Период = ТекущаяДата();
			СтрокаДоб.НомерЧека = Формат(ЭтаФорма.Номер_Бланка, "ЧГ=0");
			СтрокаДоб.НомерКассы = Формат(ЭтаФорма.НомерКассы, "ЧГ=0");
			СтрокаДоб.СсылкаДляПросмотра = СокрЛП(rs.Fields("Link_View").Value);
			СтрокаДоб.СсылкаДляСкачивания = СокрЛП(rs.Fields("Link_Download").Value);
			СтрокаДоб.ID = СокрЛП(rs.Fields("id").Value);
			СтрокаДоб.Просмотрено 		= Ложь; 
			СтрокаДоб.ОтправленоНаПочту = Ложь;
			СтрокаДоб.Email = СокрЛП(СтрЗаменить(СокрЛП(АдресаРассылки)," ",","));
			СтрокаДоб.Комментарий = СокрЛП(text_video);
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	ADOСоединение.Close();
	
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры


&НаКлиенте
Процедура ЗапроситьВидео(Команда)
	ЗапроситьВидеоНаСервере();
	
	Оповестить("ОбращенияПокупателей.ЗапросНаВидеоОтправлен",, ЭтаФорма.ВладелецФормы);
	Сообщить("Сообщение отправлено");
КонецПроцедуры
