
&НаСервереБезКонтекста
Функция ФорматироватьДату(ТДата)
	
	Результат = Формат(Год(ТДата)	, "ЧН=;ЧГ=0") + "-" +
				Формат(Месяц(ТДата)	, "ЧЦ=2; ЧН=; ЧВН=; ЧГ=0") + "-" +
				Формат(День(ТДата)	, "ЧЦ=2; ЧН=; ЧВН=; ЧГ=0");
	
	Возврат "{d'" + Результат + "'}";
	
КонецФункции

Процедура ПодобратьЧекиНаСервере()
	
	АДО = ВнешниеДанные.ПолучитьADOСоединение();
	Если АДО = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//
	Если ЭтаФорма.Номенклатура.Пустая() Тогда
		ТекстЗапроса =
		"select CashCheckNo NCh,C.BaseSum,L.BaseSum LSum,L.id_tov_cl,BONUSCARD,N._Description Tovar
		|,OpenDate,CashId,CashierId
		|from
		|	(select CashCheckNo, CheckUID,CloseDate,BaseSum,OpenDate,BONUSCARD,CashId, CashierId
		|	from SMS_UNION..Checks (nolock)
		|	where cast(CloseDate as DATE)=@date&Condition)C
		|	inner join Sms_Union..Checkline L (nolock)
		|	on C.CheckUID=L.CheckUID
		|	left join IzbenkaFin.._Reference29 N (nolock)
		|	on L.id_tov_cl=N._Fld760
		|order by OpenDate,LSum desc";
	Иначе
		ТекстЗапроса =
		"select * from
		|(
		|select CashCheckNo NCh,C.BaseSum,L.BaseSum LSum,L.id_tov_cl,BONUSCARD,N._Description Tovar
		|,OpenDate,CashId,CashierId
		|,Sum(Case L.id_tov_cl when @idtov then 1 else 0 end) Over (partition by CashCheckNo)CnId
		|from
		|	(select CashCheckNo, CheckUID,CloseDate,BaseSum,OpenDate,BONUSCARD,CashId,CashierId
		|	from SMS_UNION..Checks (nolock)
		|	where cast(CloseDate as DATE)=@date&Condition)C
		|	inner join Sms_Union..Checkline L (nolock)
		|	on C.CheckUID=L.CheckUID
		|	left join IzbenkaFin.._Reference29 N (nolock) 
		|	on L.id_tov_cl=N._Fld760
		|)t
		|where CnId>0
		|order by OpenDate,LSum desc";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "@idtov", Формат(ЭтаФорма.Номенклатура.id_tov, "ЧН=;ЧГ=0"));
	КонецЕсли;
	
	ТекстУсловия = "";
	Если НЕ ЭтаФорма.Магазин.Пустая() Тогда
		ТекстУсловия = ТекстУсловия + " and ShopNo = " + Формат(ЭтаФорма.Магазин.НомерТочки, "ЧН=; ЧГ=0");
	КонецЕсли;
	Если СокрЛП(ЭтаФорма.НомерКарты)<>"" Тогда
		ТекстУсловия = ТекстУсловия + " and BonusCard = '" + СокрЛП(ЭтаФорма.НомерКарты) + "'";
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Condition"	, ТекстУсловия);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "@date"		, ФорматироватьДату(ЭтаФорма.ДатаПокупки));
	
	rs = АДО.Execute(ТекстЗапроса);
	
	ЭтаФорма.Чеки.Очистить();
	
	ЗапросКеш = Новый Запрос();
	ЗапросКеш.Текст = "ВЫБРАТЬ
	                  |	ФизическиеЛица.Ссылка,
	                  |	ФизическиеЛица.Код
	                  |ИЗ
	                  |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	                  |ГДЕ
	                  |	ФизическиеЛица.ЭтоГруппа = ЛОЖЬ";
					  
	ТабКеш = ЗапросКеш.Выполнить().Выгрузить();
	ТабКеш.Индексы.Добавить("Код");
	
	НомерЧека = 0;
	Попытка
		rs.MoveFirst();
		Пока НЕ rs.EOF() Цикл
			Если rs.Fields("NCh").Value <> НомерЧека Тогда
				НоваяСтрока = ЭтаФорма.Чеки.Добавить();
				НоваяСтрока.Номер = rs.Fields("NCh").Value;
				НоваяСтрока.Время = rs.Fields("OpenDate").Value;
				НоваяСтрока.Касса = rs.Fields("CashId").Value;
				НоваяСтрока.Сумма = rs.Fields("BaseSum").Value;
				НомерЧека = НоваяСтрока.Номер;
				СтрокаКешПродавец = ТабКеш.Найти(Формат(rs.Fields("CashierId").Value, "ЧЦ=10; ЧВН=; ЧГ=0"), "Код");
				Если СтрокаКешПродавец <> Неопределено Тогда
					НоваяСтрока.Кассир = СтрокаКешПродавец.Ссылка;
				КонецЕсли;	
			КонецЕсли;
			НоваяСтрока.Товары = НоваяСтрока.Товары + rs.Fields("Tovar").Value + "; ";
			rs.MoveNext();
		КонецЦикла;
	Исключение
		Сообщить("Не удалось найти чеки");
	КонецПопытки;
	
КонецПроцедуры
	
&НаКлиенте
Процедура ПодобратьЧеки(Команда)
	
	Если ЭтаФорма.Магазин.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Поле 	= "Магазин";
		Сообщение.УстановитьДанные(Магазин);
		Сообщение.Текст = "Не выбран магазин";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если СокрЛП(ЭтаФорма.НомерКарты) = ""
			И ЭтаФорма.Номенклатура.Пустая() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Поле	= "Номенклатура";
		Сообщение.УстановитьДанные(Номенклатура);
		Сообщение.Текст = "Для поиска чека нужно выбрать товар или номер карты";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	Если НЕ ЗНачениеЗаполнено(ЭтаФорма.ДатаПокупки) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Поле	= "ДатаПокупки";
		Сообщение.УстановитьДанные(ЭтаФорма);
		Сообщение.Текст = "Не выбран магазин";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	//
	ПодобратьЧекиНаСервере()
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.Магазин 		= Параметры.Магазин;
	ЭтаФорма.ДатаПокупки 	= Параметры.ДатаПокупки;
	ЭтаФорма.Номенклатура 	= Параметры.Номенклатура;
	ЭтаФорма.НомерКарты 	= Параметры.НомерКарты;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодобратьЧеки(Неопределено)
	
КонецПроцедуры


&НаКлиенте
Функция ДанныеЧека(СтрокаТаблицы)
	
	Результат = Новый Структура("НомерКассы, НомерЧека, Кассир");
	Результат.НомерКассы 	= СтрокаТаблицы.Касса;
	Результат.НомерЧека 	= СтрокаТаблицы.Номер;
	Результат.Кассир 	= СтрокаТаблицы.Кассир;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ЧекиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекСтрока = Чеки.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	ОповеститьОВыборе(ДанныеЧека(ТекСтрока))
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	ОповеститьОВыборе(Неопределено)
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	ТекущиеДанные = Элементы.Чеки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	//
	ОповеститьОВыборе(ДанныеЧека(ТекущиеДанные))
	
КонецПроцедуры
