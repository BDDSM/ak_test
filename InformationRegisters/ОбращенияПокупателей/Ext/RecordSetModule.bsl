Перем ОптимизированнаяЗапись Экспорт; //+++АК MIND 2017.10.31 для массовой записи обращений по возвратам 
//нужно отключить некоторые моменты для оптимизации блокировок

Функция ПолучитьТехнолога(Запись)
	
	ХаркаПоТовару = Неопределено;
	Если ЗначениеЗаполнено(Запись.Производитель) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Значение", Запись.Производитель);
		Запрос.УстановитьПараметр("Владелец", Запись.Номенклатура);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Объект
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель)
		|	И ЗначенияСвойствОбъектов.Значение = &Значение
		|	И ВЫРАЗИТЬ(ЗначенияСвойствОбъектов.Объект КАК Справочник.ХарактеристикиНоменклатуры).Владелец = &Владелец";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ХаркаПоТовару = Выборка.Объект;
		КонецЕсли;
		
	Иначе
		
		Если ЗначениеЗаполнено(Запись.СтруктурнаяЕдиница) Тогда
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ТорговаяТочка"	, Запись.СтруктурнаяЕдиница);
			Запрос.УстановитьПараметр("Номенклатура"	, Запись.Номенклатура);
			Запрос.УстановитьПараметр("ДатаДок"			, Запись.ДатаДок);
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ТоварныйАссортиментТочекСрезПоследних.Характеристика
			|ИЗ
			|	РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(
			|			&ДатаДок,
			|			ТорговаяТочка = &ТорговаяТочка
			|				И Номенклатура = &Номенклатура) КАК ТоварныйАссортиментТочекСрезПоследних";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				ХаркаПоТовару = Выборка.Характеристика;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
	РольТехнолога = Неопределено;
	Если ЗначениеЗаполнено(ХаркаПоТовару) Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДатаДок"	, Запись.ДатаДок);
		Запрос.УстановитьПараметр("Харка"	, ХаркаПоТовару);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СоответствиеОбъектРольСрезПоследних.РольПользователя
		|ИЗ
		|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
		|			&ДатаДок,
		|			Объект = &Харка
		|				И ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)) КАК СоответствиеОбъектРольСрезПоследних";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			РольТехнолога = Выборка.РольПользователя;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(РольТехнолога) Тогда
			Произв = Запись.Производитель;
			Если НЕ ЗначениеЗаполнено(Произв) Тогда
				Запрос.УстановитьПараметр("Харка", ХаркаПоТовару);
				Запрос.Текст =
				"ВЫБРАТЬ
				|	ЗначенияСвойствОбъектов.Значение
				|ИЗ
				|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
				|ГДЕ
				|	ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель)
				|	И ВЫРАЗИТЬ(ЗначенияСвойствОбъектов.Объект КАК Справочник.ХарактеристикиНоменклатуры) = &Харка";
				
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Следующий() Тогда
					Произв = Выборка.Значение;
				КонецЕсли;
			КонецЕсли;	
			Запрос.УстановитьПараметр("Производитель", Произв);
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СоответствиеОбъектРольСрезПоследних.РольПользователя
			|ИЗ
			|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
			|			&ДатаДок,
			|			Объект = &Производитель
			|				И ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)) КАК СоответствиеОбъектРольСрезПоследних";
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				РольТехнолога = Выборка.РольПользователя;
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(РольТехнолога)
		И РольТехнолога.СоставРоли.Количество() > 0 Тогда
		Возврат РольТехнолога.СоставРоли[0].Сотрудник;
	Иначе
		Возврат Справочники.ФизическиеЛица.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции


Процедура ПередЗаписью(Отказ, Замещение)
	
//+++АК KOPA 2018.05.29 ИП-00018018
	Если ОбменДанными.Загрузка Тогда
		Возврат;	
	КонецЕсли;
	
	//Запись может делаться при получении данных из классифицирующей системы, поэтому нужна только запись 
	Если ДополнительныеСвойства.Свойство("ТолькоЗапись") Тогда
		Возврат;	
	КонецЕсли;
	
	ОбработатьИзмененияДляКлассифицирующейСистемы();
	
	Если ДополнительныеСвойства.Свойство("Отладка") Тогда
		Возврат;	
	КонецЕсли;	
//---АК KOPA

	//+++АК SHEP 2018.08.24 ИП-00018753.03
	Если Замещение И ЭтотОбъект.Количество() = 0 Тогда
		
		МенеджерЗаписиПредЗначения = РегистрыСведений.ОбращенияПокупателей.СоздатьМенеджерЗаписи();
		Для Каждого ЭлементОтбора Из ЭтотОбъект.Отбор Цикл
			МенеджерЗаписиПредЗначения[ЭлементОтбора.Имя] = ЭлементОтбора.Значение;
		КонецЦикла;
		МенеджерЗаписиПредЗначения.Прочитать();
		СтруктураОтбор = Новый Структура("id_OK,GUID_Загрузки,ДатаДок");
		ЗаполнитьЗначенияСвойств(СтруктураОтбор, МенеджерЗаписиПредЗначения);
		СтруктураПредЗначения = Новый Структура("ПерепискаСПроизводителем,ТребуетОбязательногоОтветаПроизводителя");
		ЗаполнитьЗначенияСвойств(СтруктураПредЗначения, МенеджерЗаписиПредЗначения);
		ХранилищеОбщихНастроек.Сохранить("РегистрыСведений.ОбращенияПокупателей.ПредыдущиеЗначения", КлючЗаписиВJSON(СтруктураОтбор), СтруктураПредЗначения);
		
	КонецЕсли;
	//---АК SHEP 2018.08.24
	
	Для Каждого Запись Из ЭтотОбъект Цикл
		
		Если НЕ ЗначениеЗаполнено(Запись.GUID_Связи) Тогда
			Если ТипЗнч(Запись.GUID_Загрузки) = Тип("Строка") Тогда
				Запись.GUID_Связи = Запись.GUID_Загрузки;
			Иначе
				Запись.GUID_Связи = Строка(Новый УникальныйИдентификатор);
			КонецЕсли;
			//+++АК БЕЛН 2017.08.18
			Если ЗначениеЗаполнено(Запись.Номенклатура) И ЗначениеЗаполнено(Запись.Производитель) Тогда
				ЗаполнитьХарактеристикуПоПроизводителю(Запись);
			КонецЕсли; 
			//---АК БЕЛН 2017.08.18          			
		КонецЕсли;
		Если ЗначениеЗаполнено(Запись.ПрикрепленныеФайлы) Тогда
			Таб = ЗначениеИзСтрокиВнутр(Запись.ПрикрепленныеФайлы);
			Запись.КоличествоПрикрепленныхФайлов = Таб.Количество();
		Иначе	
			Запись.КоличествоПрикрепленныхФайлов = 0;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Запись.Технолог) Тогда
			Запись.Технолог = ПолучитьТехнолога(Запись);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Запись.ПродактМенеджер) Тогда
			Мас = РегистрыСведений.ОбращенияПокупателей.ПолучитьПродактМенеджера(Запись.Номенклатура, Запись.Производитель);
			ПМ = ?(Мас.Количество() = 0, Неопределено, Мас[0]);
			Запись.ПродактМенеджер = ПМ;
		КонецЕсли;
		
		//+++AK VERN 2016-09-30 ИП-00013755.001.00000001 Отмена уведомлений для обращений из сети
		Если ЗначениеЗаполнено(Запись.ИсточникОбращения)
			И Запись.ИсточникОбращения.ОтменаУведомления Тогда
			Запись.ОтменаУведомления = Запись.ИсточникОбращения.ОтменаУведомления;
		КонецЕсли;
		//---AK VERN 2016-09-06 ИП-00013755.001.00000001 Отмена уведомлений для обращений из сети
		
		//Mind
		Если ЗначениеЗаполнено(Запись.СтруктурнаяЕдиница)
			И НЕ ЗначениеЗаполнено(Запись.ТерриториальныйУправляющий) Тогда
			Запрос = Новый Запрос();
			Запрос.УстановитьПараметр("ДатаСреза", Запись.ДатаДок);
			Запрос.УстановитьПараметр("Ссылка", Запись.СтруктурнаяЕдиница);
			Запрос.Текст = "ВЫБРАТЬ
			|	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО,
			|	РолиПользователейСоставРоли.Сотрудник КАК ПомощникУправляющего,
			|	РолиПользователейСоставРолиТУ.Сотрудник КАК ТерриториальныйУправляющий
			|ИЗ
			|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&ДатаСреза, ) КАК ЦФОСтруктурныхЕдиницСрезПоследних
			|		ПО СтруктурныеЕдиницы.Ссылка = ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница
			//+++ AK suvv 2018.06.08 ИП-00018376.01
			//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаСреза, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)) КАК СоответствиеОбъектРольСрезПоследних
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаСреза, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего) ИЛИ ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы)) КАК СоответствиеОбъектРольСрезПоследних
			//--- AK suvv
			|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
			|			ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = РолиПользователейСоставРоли.Ссылка
			|		ПО СтруктурныеЕдиницы.Ссылка = СоответствиеОбъектРольСрезПоследних.Объект
			//+++ AK suvv 2018.06.08 ИП-00018376.01
			//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаСреза, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)) КАК СоответствиеОбъектРольСрезПоследнихТУ
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаСреза, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего) или ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы)) КАК СоответствиеОбъектРольСрезПоследнихТУ
			//--- AK suvv
			|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРолиТУ
			|			ПО СоответствиеОбъектРольСрезПоследнихТУ.РольПользователя.Родитель = РолиПользователейСоставРолиТУ.Ссылка
			|		ПО СтруктурныеЕдиницы.Ссылка = СоответствиеОбъектРольСрезПоследнихТУ.Объект
			|ГДЕ
			|	СтруктурныеЕдиницы.Ссылка = &Ссылка";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				ЗаполнитьЗначенияСвойств(Запись, Выборка);
			КонецЕсли;	
		КонецЕсли;
		
		//zhas --  13-10-17 ИП-00016956.000.00000001
		Попытка
			Если НЕ ЗначениеЗаполнено(Запись.Оценка) И ЗначениеЗаполнено(Запись.ТипЖалобы) И Запись.ТипЖалобы.Оценка > 0 Тогда
				Запись.Оценка = Запись.ТипЖалобы.Оценка;
				Попытка
					ДобавитьДанныеВSQLТаблицу(Запись);
				Исключение
				КонецПопытки;
			КонецЕсли;
		Исключение
		КонецПопытки;
		//zhas --  13-10-17 ИП-00016956.000.00000001
		
	КонецЦикла;
	
КонецПроцедуры

//+++АК БЕЛН 2017.08.18
Процедура ЗаполнитьХарактеристикуПоПроизводителю(Запись)
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Владелец", Запись.Номенклатура);
	Запрос.УстановитьПараметр("Значение", Запись.Производитель);
	Запрос.Текст = "ВЫБРАТЬ
	|	ХарактеристикиНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов.Объект
	|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец = &Владелец
	|	И ЗначенияСвойствОбъектов.Значение = &Значение";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Характеристика = Выборка.Ссылка;
	Иначе	
		Характеристика = Неопределено;
	КонецЕсли;
	
	//+++АК MIND 2017.10.31 оптимизацию массовой записи, иначе мощные блокировки
	Если НЕ ЗначениеЗаполнено(ОптимизированнаяЗапись) Тогда
		Если ЗначениеЗаполнено(Характеристика)  Тогда
			УстановитьПривилегированныйРежим(Истина);
			
			ДатаОтсечки=Запись.ДатаДок;
			Запрос=Новый Запрос;
			Запрос.Текст="ВЫБРАТЬ
			|	РасходныйОрдерСкладТовары.Характеристика,
			|	МИНИМУМ(РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения) КАК ДатаРаспределения
			|ПОМЕСТИТЬ вт
			|ИЗ
			|	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
			|ГДЕ
			|	РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
			|	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
			|	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
			|	И РасходныйОрдерСкладТовары.Характеристика = &Характеристика
			|	И РасходныйОрдерСкладТовары.Количество > 0
			|
			|СГРУППИРОВАТЬ ПО
			|	РасходныйОрдерСкладТовары.Характеристика
			|
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	вт.ДатаРаспределения,
			|	ВЫБОР
			|		КОГДА вт.ДатаРаспределения >= &Дата
			|				И вт.ДатаРаспределения <= &Дата1
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК Новинка
			|ИЗ
			|	вт КАК вт";	
			Запрос.УстановитьПараметр("Характеристика",Характеристика);	
			Запрос.УстановитьПараметр("Дата",ДобавитьМесяц(ДатаОтсечки,-1));
			Запрос.УстановитьПараметр("Дата1",ДобавитьМесяц(ДатаОтсечки,0));
			
			Результат = Запрос.Выполнить();
			Если Результат.Пустой() Тогда
				Запись.Новинка=Ложь;
				Запись.ДатаПервойПродажи=Дата(1,1,1);
			Иначе
				Выборка=Результат.Выбрать();
				Если Выборка.Следующий() Тогда
					Запись.Новинка=Выборка.Новинка;
					Запись.ДатаПервойПродажи=Выборка.ДатаРаспределения;
				КонецЕсли; 
			КонецЕсли; 
		Иначе
		КонецЕсли;
	КонецЕсли;	
	
	
КонецПроцедуры	
//---АК БЕЛН 2017.08.18

//zhas ++  13-10-17 ИП-00016956.000.00000001
Процедура ДобавитьДанныеВSQLТаблицу(Запись) Экспорт 
	
	Если ЗначениеЗаполнено(Запись.ТипЖалобы) 
		И Запись.Оценка > 0 
		И ЗначениеЗаполнено(Запись.Номенклатура)
		И ЗначениеЗаполнено(Запись.Производитель)
		Тогда
		id_OK 		= Запись.id_OK; 
		Mark		= Запись.Оценка; 
		id_tov		= Запись.Номенклатура.id_tov; 
		date_ch		= Запись.ДатаДок; 
		id_kontr	= Запись.Производитель.ИД; 
		zhalo_type 	= Запись.ТипЖалобы.id;
		number		= 100; 
	Иначе
		Возврат;
	КонецЕсли;
	мСоединение = АДОКоннекшн_СоздатьОбъект();
	Если 0 = АДОДБ_УстановитьСоединениеТелеграмм(мСоединение) Тогда
		Сообщить("Не удалось подключиться...", 30);
		Возврат;
	КонецЕсли; 
	Попытка
		rs = мСоединение.Execute("exec Telegram..BOT_Save_Tovar_Reiting_insert_or_update_from_1C @id_OK ="
		+ ФорматПоля(id_OK) 
		+ ", @Mark = " 
		+ ФорматПоля(Mark)
		+ ", @id_tov = " 
		+ ФорматПоля(id_tov)
		+ ", @date_ch = " 
		+ ФорматПоля(date_ch)
		+ ", @id_kontr = " 
		+ ФорматПоля(id_kontr)
		+ ", @zhalo_type = " 
		+ ФорматПоля(zhalo_type)
		+ ", @number = " 
		+ ФорматПоля(number));
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	мСоединение.Close();
КонецПроцедуры

//Функции стандартные, пока оставляем для теста. Потом надо заменть на имеющиеся в конфе
Функция АДОКоннекшн_СоздатьОбъект() Экспорт
	ADOСоединение = New ComObject("ADODB.Connection"); 
	ADOСоединение.CommandTimeOut    = 0;
	ADOСоединение.ConnectionTimeOut = 0;
	Возврат ADOСоединение;
КонецФункции    // АДОКоннекшн_СоздатьОбъект

Функция АДОДБ_УстановитьСоединениеТелеграмм(Соединение, БД = "Telegram") Экспорт
	Строка = ВнешниеДанные.ПолучитьСтрокуСоединенияSQL(, "10.0.0.42",БД,,,"LANGUAGE=русский");
	Возврат Соединение.Open(Строка);
КонецФункции // АДОДБ_УстановитьСоединение()

Функция ФорматПоля(Поле)
	Если ТипЗнч(Поле) = Тип("Дата") Тогда
		Возврат "'" + Формат(Поле, "ДФ=yyyy-MM-ddTHH:mm:ss") + "'";
	ИначеЕсли ТипЗнч(Поле) = Тип("Строка") Тогда
		Если Лев(Поле,2)="$$" Тогда
			Возврат Сред(Поле,3)
		Иначе
			Возврат "'" + Поле + "'";
		КонецЕсли
	ИначеЕсли ТипЗнч(Поле) = Тип("Число") Тогда
		Возврат Формат(Поле, "ЧРД=.; ЧН=; ЧГ=0");
	ИначеЕсли ТипЗнч(Поле) = Тип("Булево") Тогда
		Возврат ?(Поле = Истина, 1, 0);
	КонецЕсли;
КонецФункции
//zhas --  13-10-17 ИП-00016956.000.00000001

//+++АК KOPA 2018.05.29 ИП-00018018
#Область КлассифицирующаяСистема

//+++АК KOPA 2018.05.29 ИП-00018018
Процедура ОбработатьИзмененияДляКлассифицирующейСистемы() Экспорт 
	УстановитьПривилегированныйРежим(Истина);
	
	Для каждого Строка Из ЭтотОбъект Цикл
		РегистрыСведений.ОбращенияПокупателейКлассифицирующаяСистема.ОпределитьСтатусКлассифицирующейСистемы(Строка);	
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры//---АК KOPA

#КонецОбласти//---АК KOPA

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ЭтотОбъект.Количество() > 0 Тогда //НЕ Замещение
		
		НаборЗаписейОбращенияПокупателейЛентаСообщений = РегистрыСведений.ОбращенияПокупателейЛентаСообщений.СоздатьНаборЗаписей(); //+++АК SHEP 2018.10.15 ИП-00018753.03
		
		Для Каждого Запись Из ЭтотОбъект Цикл
			
			СтруктураОтбор = Новый Структура("id_OK,GUID_Загрузки,ДатаДок");
			ЗаполнитьЗначенияСвойств(СтруктураОтбор, Запись);
			
			//+++АК SHEP 2018.10.15 ИП-00018753.03
			ЗаполнитьЗначенияСвойств(НаборЗаписейОбращенияПокупателейЛентаСообщений, СтруктураОтбор);
			НаборЗаписейОбращенияПокупателейЛентаСообщений.Прочитать();
			
			Если НаборЗаписейОбращенияПокупателейЛентаСообщений.Количество() > 0 Тогда
				
				флЗаписывать = Ложь;
				
				Для Каждого ЗаписьЛентаСообщений Из НаборЗаписейОбращенияПокупателейЛентаСообщений Цикл
					Если ЗаписьЛентаСообщений.Производитель <> Запись.Производитель Тогда
						флЗаписывать = Истина;
						ЗаписьЛентаСообщений.Производитель = Запись.Производитель;
					КонецЕсли;
				КонецЦикла;
				
				Если флЗаписывать Тогда
					НаборЗаписейОбращенияПокупателейЛентаСообщений.ОбменДанными.Загрузка = Истина;
					НаборЗаписейОбращенияПокупателейЛентаСообщений.Записать();
				КонецЕсли;
				
			КонецЕсли;
			//---АК SHEP 2018.10.15
			
			КлючЗаписиJSON = КлючЗаписиВJSON(СтруктураОтбор);
			СтруктураПредЗначения = ХранилищеОбщихНастроек.Загрузить("РегистрыСведений.ОбращенияПокупателей.ПредыдущиеЗначения", КлючЗаписиJSON);
			Если СтруктураПредЗначения = Неопределено Тогда Продолжить; КонецЕсли;
			
			//+++АК SHEP 2018.04.02 ИП-00018259: отправляем уведомление, если получен ответ производителя
			Если ЗначениеЗаполнено(Запись.ПерепискаСПроизводителем) Тогда
				
				ФлОтправлятьУведомлениеПоОтветуПроизводителя = (Запись.ПерепискаСПроизводителем <> СтруктураПредЗначения.ПерепискаСПроизводителем);
				
				Если ФлОтправлятьУведомлениеПоОтветуПроизводителя Тогда
					МассивЭлАдресов = РегистрыСведений.АК_ГруппыРассылки.ПолучитьМассивЭлАдресовПоГруппеРассылки(ПредопределенноеЗначение("Справочник.АК_ГруппыРассылки.ПолученОтветПроизводителя"));
					ТекОтветственный = Запись.Ответственный;
					Если ЗначениеЗаполнено(ТекОтветственный) Тогда
						ТекФизЛицо = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекОтветственный, "ФизЛицо");
						ТекАдресФизЛица = РегистрыСведений.КонтактнаяИнформация.КонтактнаяИнформацияОбъекта(ТекФизЛицо, ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.EmailФизЛица"));
						Если ЗначениеЗаполнено(ТекАдресФизЛица) Тогда
							МассивЭлАдресов.Добавить(ТекАдресФизЛица);
						КонецЕсли;
					КонецЕсли;
					
					СтруктураПолей = Новый Структура("id_OK,GUID_Загрузки,ДатаДок,Примечание,ТипОбращения,Номенклатура,Производитель,ПерепискаСПроизводителем,ОтветПроизводителя",
					"id_OK", "GUID_Загрузки", "ДатаДок", "Суть обращения", "Тип обращения", "Номенклатура", "Производитель", "ПерепискаСПроизводителем", "ОтветПроизводителя");
					
					ТекстХТМЛ = СтроковыеФункцииКлиентСервер.ТекстХТМЛ_НачалоХТМЛ();
					ТекстХТМЛ = ТекстХТМЛ + СтроковыеФункцииКлиентСервер.ТекстХТМЛ_ТаблицаЗаголовок(СтруктураПолей, Истина);
					ЗаполнитьЗначенияСвойств(СтруктураПолей, Запись);
					ТекстХТМЛ = ТекстХТМЛ + СтроковыеФункцииКлиентСервер.ТекстХТМЛ_ТаблицаТело(СтруктураПолей,,, Истина);
					ТекстПисьмаПерепискаСПроизводителем = ТекстХТМЛ + СтроковыеФункцииКлиентСервер.ТекстХТМЛ_КонецХТМЛ();
					
					Документы.ЗаданиеТехнологаМагазинам.ОтправитьСообщение("Переписка с производителем", ТекстПисьмаПерепискаСПроизводителем, МассивЭлАдресов, "Переписка с производителем");
				КонецЕсли;
				
			КонецЕсли;
			//---АК SHEP 2018.04.02
			
			//+++АК SHEP 2018.08.24 ИП-00018753.03
			Если Запись.ТребуетОбязательногоОтветаПроизводителя И СтруктураПредЗначения.ТребуетОбязательногоОтветаПроизводителя = Ложь Тогда
				
				ВнешОбработка = ПолныеПрава.ПолучитьИПодключитьВнешнююОбработку("Требует обязательного ответа производителя (рассылка)");
				Если ВнешОбработка <> Неопределено Тогда
					ВнешОбработка.ВыполнитьРассылку(СтруктураОтбор);
				КонецЕсли;
				
			КонецЕсли;
			//---АК SHEP 2018.08.24
			
			ХранилищеОбщихНастроек.Удалить("РегистрыСведений.ОбращенияПокупателей.ПредыдущиеЗначения", КлючЗаписиJSON, СокрЛП(ОбщегоНазначенияПовтИсп.ТекущийПользовательСеанса()));
			
		КонецЦикла;
		
	КонецЕсли; // НЕ Замещение
	
КонецПроцедуры

//+++АК SHEP 2018.08.24 ИП-00018753.03
Функция КлючЗаписиВJSON(СтруктураОтбор)
	
	СтрокаJSON = РаботаСВнешнимВебСервером.СтруктураДанныхВJSON(СтруктураОтбор);
	СтрокаJSON = СтрЗаменить(СтрокаJSON, Символы.ПС, "");
	СтрокаJSON = СтрЗаменить(СтрокаJSON, Символы.ВК, "");
	Возврат СтрокаJSON;
	
КонецФункции
