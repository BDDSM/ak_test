
Функция ВернутьСклад(ТипЗадания) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СоответствиеТиповЗаданийТехнологаМагазинамИСкладов.Склад
		|ИЗ
		|	РегистрСведений.СоответствиеТиповЗаданийТехнологаМагазинамИСкладов КАК СоответствиеТиповЗаданийТехнологаМагазинамИСкладов
		|ГДЕ
		|	СоответствиеТиповЗаданийТехнологаМагазинамИСкладов.ТипЗадания = &ТипЗадания");
	Запрос.УстановитьПараметр("ТипЗадания", ТипЗадания);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда Возврат ПредопределенноеЗначение("Справочник.СтруктурныеЕдиницы.ПустаяСсылка"); КонецЕсли;
	
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаЗапроса.Следующий();
	
	Возврат ВыборкаЗапроса.Склад;
	
КонецФункции

Функция ВернутьСкладПеремещения(ТипЗадания) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СоответствиеТиповЗаданийТехнологаМагазинамИСкладов.СкладПеремещения
		|ИЗ
		|	РегистрСведений.СоответствиеТиповЗаданийТехнологаМагазинамИСкладов КАК СоответствиеТиповЗаданийТехнологаМагазинамИСкладов
		|ГДЕ
		|	СоответствиеТиповЗаданийТехнологаМагазинамИСкладов.ТипЗадания = &ТипЗадания");
	Запрос.УстановитьПараметр("ТипЗадания", ТипЗадания);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда Возврат ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка"); КонецЕсли;
	
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаЗапроса.Следующий();
	
	Возврат ВыборкаЗапроса.СкладПеремещения;
	
КонецФункции

Функция ПолучитьСкладПеремещенияПоСкладу(Склад) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СоответствиеТиповЗаданийТехнологаМагазинамИСкладов.СкладПеремещения
		|ИЗ
		|	РегистрСведений.СоответствиеТиповЗаданийТехнологаМагазинамИСкладов КАК СоответствиеТиповЗаданийТехнологаМагазинамИСкладов
		|ГДЕ
		|	СоответствиеТиповЗаданийТехнологаМагазинамИСкладов.Склад = &Склад");
	Запрос.УстановитьПараметр("Склад", Склад);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда Возврат ПредопределенноеЗначение("Справочник.Склады.ПустаяСсылка"); КонецЕсли;
	
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаЗапроса.Следующий();
	
	Возврат ВыборкаЗапроса.СкладПеремещения;
	
КонецФункции

Функция ПолучитьКодОперацииИТочкуПолучателя(ТипЗадания, КодОперации, ТочкаПолучатель) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СоответствиеТиповЗаданийТехнологаМагазинамИСкладов.КодОперации,
		|	СоответствиеТиповЗаданийТехнологаМагазинамИСкладов.ТочкаПолучатель
		|ИЗ
		|	РегистрСведений.СоответствиеТиповЗаданийТехнологаМагазинамИСкладов КАК СоответствиеТиповЗаданийТехнологаМагазинамИСкладов
		|ГДЕ
		|	СоответствиеТиповЗаданийТехнологаМагазинамИСкладов.ТипЗадания = &ТипЗадания");
	Запрос.УстановитьПараметр("ТипЗадания", ТипЗадания);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		КодОперации = 0;
		ТочкаПолучатель = 0;
		Возврат Ложь;
	КонецЕсли;
	
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаЗапроса.Следующий();
	КодОперации = ВыборкаЗапроса.КодОперации;
	ТочкаПолучатель = ВыборкаЗапроса.ТочкаПолучатель;
	
	Возврат Истина;
	
КонецФункции

Функция ПолучитьТочкуПолучателяИКодыОпераций(ТипЗадания, ТочкаПолучатель, КодОперации, КодОбратнойОперации) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СоответствиеТиповЗаданийТехнологаМагазинамИСкладов.КодОперации,
		|	СоответствиеТиповЗаданийТехнологаМагазинамИСкладов.ТочкаПолучатель,
		|	СоответствиеТиповЗаданийТехнологаМагазинамИСкладов.КодОбратнойОперации
		|ИЗ
		|	РегистрСведений.СоответствиеТиповЗаданийТехнологаМагазинамИСкладов КАК СоответствиеТиповЗаданийТехнологаМагазинамИСкладов
		|ГДЕ
		|	СоответствиеТиповЗаданийТехнологаМагазинамИСкладов.ТипЗадания = &ТипЗадания");
	Запрос.УстановитьПараметр("ТипЗадания", ТипЗадания);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		КодОперации = 0;
		ТочкаПолучатель = 0;
		КодОбратнойОперации = 0;
		Возврат Ложь;
	КонецЕсли;
	
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаЗапроса.Следующий();
	КодОперации = ВыборкаЗапроса.КодОперации;
	ТочкаПолучатель = ВыборкаЗапроса.ТочкаПолучатель;
	КодОбратнойОперации = ВыборкаЗапроса.КодОбратнойОперации;
	
	Возврат Истина;
	
КонецФункции
