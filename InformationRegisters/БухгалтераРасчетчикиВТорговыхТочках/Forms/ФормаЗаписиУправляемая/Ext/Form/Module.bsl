
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПравоРедактироватьРасчетчиков = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.РедактированиеПривязокТорговыхТочекКБухгалтерамРасчетчикам, Ложь);
	ЭтаФорма.ТолькоПросмотр = Не ПравоРедактироватьРасчетчиков;
	
	ГоловноеПодразделение = Параметры.ГоловноеПодразделение;
	
	Если ЗначениеЗаполнено(Параметры.Период)Тогда
		Запись.Период = Параметры.Период;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ТорговаяТочка)Тогда
		Запись.СтруктурнаяЕдиница = Параметры.ТорговаяТочка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ФизЛицо = ПроверитьНаличиеЗаписиСИдентичнымиКлючевымиПолями();
	Если ФизЛицо <> Неопределено Тогда
		
		Ответ = Вопрос("Данная торговая точка уже привязана к " + ФизЛицо + "! Отвязать?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		УдалитьЗаписьСИдентичнымиКлючевымиПолями();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьНаличиеЗаписиСИдентичнымиКлючевымиПолями()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	БухгалтераРасчетчикиВТорговыхТочках.ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.БухгалтераРасчетчикиВТорговыхТочках КАК БухгалтераРасчетчикиВТорговыхТочках
	|ГДЕ
	|	БухгалтераРасчетчикиВТорговыхТочках.Период = &Период
	|	И БухгалтераРасчетчикиВТорговыхТочках.СтруктурнаяЕдиница = &СтруктурнаяЕдиница");
	
	Запрос.УстановитьПараметр("Период", Запись.Период);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Запись.СтруктурнаяЕдиница);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()Тогда
		Возврат Выборка.ФизическоеЛицо;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Процедура УдалитьЗаписьСИдентичнымиКлючевымиПолями()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	БухгалтераРасчетчикиВТорговыхТочках.ФизическоеЛицо
	|ИЗ
	|	РегистрСведений.БухгалтераРасчетчикиВТорговыхТочках КАК БухгалтераРасчетчикиВТорговыхТочках
	|ГДЕ
	|	БухгалтераРасчетчикиВТорговыхТочках.Период = &Период
	|	И БухгалтераРасчетчикиВТорговыхТочках.СтруктурнаяЕдиница = &СтруктурнаяЕдиница");
	
	Запрос.УстановитьПараметр("Период", Запись.Период);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Запись.СтруктурнаяЕдиница);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий()Тогда
		
		ЗаписьРегистра = РегистрыСведений.БухгалтераРасчетчикиВТорговыхТочках.СоздатьМенеджерЗаписи();
		ЗаписьРегистра.Период = Запись.Период;
		ЗаписьРегистра.СтруктурнаяЕдиница = Запись.СтруктурнаяЕдиница;
		ЗаписьРегистра.Удалить();
		
		// Добавим запись в Журнал изменений
		ЗаписьЖурнала = РегистрыСведений.ЖурналИзмененийБухгалтеровРасчетчиков.СоздатьМенеджерЗаписи();
		ЗаписьЖурнала.Дата 					= Запись.Период;
		ЗаписьЖурнала.СтруктурнаяЕдиница 	= Запись.СтруктурнаяЕдиница;
		ЗаписьЖурнала.Пользователь			= ПараметрыСеанса.ТекущийПользователь;
		ЗаписьЖурнала.ДатаИзменения			= ТекущаяДата();
		ЗаписьЖурнала.ФизическоеЛицо 		= Выборка.ФизическоеЛицо;
		
		ЗаписьЖурнала.ВидОперации           = "Удаление привязки бухгалтера-расчетчика";
		
		ЗаписьЖурнала.Записать()
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не Отказ Тогда
		
		// Добавим запись в Журнал изменений
		ЗаписьЖурнала = РегистрыСведений.ЖурналИзмененийБухгалтеровРасчетчиков.СоздатьМенеджерЗаписи();
		ЗаписьЖурнала.Дата 					= Запись.Период;
		ЗаписьЖурнала.СтруктурнаяЕдиница 	= Запись.СтруктурнаяЕдиница;
		ЗаписьЖурнала.Пользователь			= ПараметрыСеанса.ТекущийПользователь;
		ЗаписьЖурнала.ДатаИзменения			= ТекущаяДата();
		ЗаписьЖурнала.ФизическоеЛицо 		= Запись.ФизическоеЛицо;
		
		ЗаписьЖурнала.ВидОперации           = "Привязка бухгалтера-расчетчика";
		
		ЗаписьЖурнала.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтруктурнаяЕдиницаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОткрытия = Новый Структура("ТекущаяДата, ГоловноеПодразделение", Запись.Период, ГоловноеПодразделение);
	Запись.СтруктурнаяЕдиница = ОткрытьФормуМодально("Обработка.ГрафикРаботыПродавцов_ТЗ.Форма.ФормаВыбораСтруктурнойЕдиницы", ПараметрыОткрытия, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ФизическоеЛицоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Запись.ФизическоеЛицо = ОткрытьФормуМодально("Обработка.ГрафикРаботыПродавцов_ТЗ.Форма.ФормаВыбораФизическогоЛица",, ЭтаФорма);
	
КонецПроцедуры
