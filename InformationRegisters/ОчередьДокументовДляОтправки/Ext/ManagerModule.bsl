
// Процедура добавляет запись для возможности повторной отправки
//
// Параметры:
//  <СтруктураПараметров>  - <Тип.Структура> - Структура параметров для алгоритмов отправки писем 
//
Процедура ДобавитьЗаписьДокументыДляОтправки(СтруктураПараметров) Экспорт
	
	
	МенеджерЗаписи = РегистрыСведений.ОчередьДокументовДляОтправки.СоздатьМенеджерЗаписи();
	
	МенеджерЗаписи.Документ       = СтруктураПараметров.ДокументСсылка;
	
	МенеджерЗаписи.ОписаниеОшибки = СтруктураПараметров.ОписаниеОшибки;
	
	МенеджерЗаписи.СтруктураПараметровСтрока = ЗначениеВСтрокуВнутр(СтруктураПараметров);	
	
	МенеджерЗаписи.Записать();
	
КонецПроцедуры // ОчиститьОтчередьДокументовДляОтправки()

// Процедура удаляет запись, если документ успешно отправлен 
//
// Параметры:
//  <ДокументСсылка>  - <Тип.ДокументСсылка - Ссылка на удаляемый документ
//
Процедура УдалитьЗаписьИзДокументыДляОтправки(ДокументСсылка) Экспорт

	  МенеджерЗаписи = РегистрыСведений.ОчередьДокументовДляОтправки.СоздатьМенеджерЗаписи();
	  
	  МенеджерЗаписи.Документ = ДокументСсылка;
	  
	  МенеджерЗаписи.Удалить();

КонецПроцедуры // ОчиститьОтчередьДокументовДляОтправки()

// Непосредственный запуск отправки письма
//
// Параметры:
//  <СтруктураПараметров>  - <Тип.Составной> - Структура параметров для алгоритмов отправки писем 
//                                          
Процедура ВыполнитьОтправкуПисьма(СтруктураПараметров) Экспорт

	Если ТипЗнч(СтруктураПараметров.ДокументСсылка) = Тип("ДокументСсылка.ИзменениеЗакупочныхЦен") Тогда
		
		Документы.ИзменениеЗакупочныхЦен.ОтправитьЗапросРуководителюНаИзменениеЦен(СтруктураПараметров);
		
		Если СтруктураПараметров.ОшибкаОтправки Тогда
			ДобавитьЗаписьДокументыДляОтправки(СтруктураПараметров);
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры //ВыполнитьОтправкуПисьма
