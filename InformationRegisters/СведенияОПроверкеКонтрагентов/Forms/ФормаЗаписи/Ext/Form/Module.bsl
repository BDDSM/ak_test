Перем пТипСведений;


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьЗначенияСвойств(Запись,Параметры);
	УстановитьВидимость();
	Если не ЗначениеЗаполнено(Запись.Ответственный) Тогда
		Запись.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;	
	пТипСведений = Запись.ТипСведений;
	ОбновитьПрикрепленныеФайлы();
КонецПроцедуры


Процедура  УстановитьВидимость()
	
	РедактированиеРекомендаций = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПредопределенноеЗначение("ПланВидовХарактеристик.ПраваПользователей.РедактированиеРекомендацийКонтрагентов"), Ложь);	
	
	Видимость1Cont = (Запись.ТипСведений = Перечисления.СведенияОПроверке.Сведения1Cont) ИЛИ  
	                 (Запись.ТипСведений = Перечисления.СведенияОПроверке.СведенияОбщие);
	
	ВидимостьУФК = (Запись.ТипСведений = Перечисления.СведенияОПроверке.СведенияУФК) ИЛИ  
	                 (Запись.ТипСведений = Перечисления.СведенияОПроверке.СведенияОбщие);
					 
	Элементы.Группа1cont.Видимость = Видимость1Cont;
	Элементы.ГруппаУФК.Видимость   = ВидимостьУФК;
	
	Элементы.ОтветПолучен.Доступность = РедактированиеРекомендаций;
	
	ВидимостьДадаЗавершения = Запись.РекомендацияВВ.ЗавершениеСотрудничества;
	Элементы.ЗавершениеСотрудничества.Видимость = ВидимостьДадаЗавершения;
	
	//ВидимостьФайл = Запись.РекомендацияВВ.Проверка;
	//Элементы.ГруппаФайл.Видимость = ВидимостьФайл;
	
	//ЕстьФайл = (Запись.ИмяФайла <> "");
	//
	//Элементы.УдалитьФайл.Доступность = ЕстьФайл;
	//Элементы.ОткрытьФайл.Доступность = ЕстьФайл;
	
	ЭтоРазработчик = (ПараметрыСеанса.ТекущийПользователь.Наименование = "Королев Андрей") ИЛИ
					 (ПараметрыСеанса.ТекущийПользователь.Наименование = "Королёв Андрей");
	Элементы.ГруппаФайл.Видимость = ЭтоРазработчик;
	
КонецПроцедуры	

&НаКлиенте
Процедура ТипСведенийПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
КонецПроцедуры

Процедура ПроверкаЗаписи(Отказ)
	
	Если  Запись.РекомендацияВВ.ЗавершениеСотрудничества Тогда
		если Не ЗначениеЗаполнено(Запись.ЗавершениеСотрудничества) Тогда
			Отказ = Истина;	
			Сообщить("Необходимо указать дату завершения сотрудничества");			
		КонецЕсли;
	КонецЕсли;	
	
	Если  Запись.ТипСведений = Перечисления.СведенияОПроверке.СведенияУФК Тогда
		если Не ЗначениеЗаполнено(Запись.РекомендацияВВ) Тогда
			Отказ = Истина;	
			Сообщить("Необходимо заполнить рекомендацию УФК");			
		КонецЕсли;
		если Не ЗначениеЗаполнено(СокрЛП(Запись.ПоясненияВВ)) Тогда
			Отказ = Истина;	
			Сообщить("Необходимо заполнить пояснение УФК");			
		КонецЕсли;				
	КонецЕсли;	
	Если  Запись.ТипСведений = Перечисления.СведенияОПроверке.Сведения1Cont Тогда
		если Не ЗначениеЗаполнено(Запись.Рекомендация) Тогда
			Отказ = Истина;	
			Сообщить("Необходимо заполнить рекомендацию");			
		КонецЕсли;
		если Не ЗначениеЗаполнено(СокрЛП(Запись.Пояснения)) Тогда
			Отказ = Истина;	
			Сообщить("Необходимо заполнить пояснение");			
		КонецЕсли;				
	КонецЕсли;
	Если  Запись.ТипСведений = Перечисления.СведенияОПроверке.СведенияОбщие Тогда		
		если Не ЗначениеЗаполнено(Запись.Рекомендация) Тогда
			Отказ = Истина;	
			Сообщить("Необходимо заполнить рекомендацию");			
		КонецЕсли;
		если Не ЗначениеЗаполнено(СокрЛП(Запись.Пояснения)) Тогда
			Отказ = Истина;	
			Сообщить("Необходимо заполнить пояснение");			
		КонецЕсли;
				если Не ЗначениеЗаполнено(Запись.РекомендацияВВ) Тогда
			Отказ = Истина;	
			Сообщить("Необходимо заполнить рекомендацию УФК");			
		КонецЕсли;
		если Не ЗначениеЗаполнено(СокрЛП(Запись.ПоясненияВВ)) Тогда
			Отказ = Истина;	
			Сообщить("Необходимо заполнить пояснение УФК");			
		КонецЕсли;	
	КонецЕсли;
	
	Если  Запись.ТипСведений = Перечисления.СведенияОПроверке.СведенияОбщие ИЛИ 
		Запись.ТипСведений = Перечисления.СведенияОПроверке.СведенияУФК	Тогда
		
		Если Запись.РекомендацияВВ.Проверка Тогда			
			Если КоличествоПрикрепленныхФайлов = 0 тогда
				Отказ = Истина;	
				Сообщить("Необходимо вставить файл");			
			КонецЕсли;	
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РекомендацияУФКПриИзменении(Элемент)
	 УстановитьВидимость();
КонецПроцедуры

&НаСервере
Процедура УдалитьФайлНаСервере()
	ЗаписьОбъект = РеквизитФормыВЗначение("Запись");
	МенеджерЗаписи = РегистрыСведений.СведенияОПроверкеКонтрагентов.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи,ЗаписьОбъект,"Период,Контрагент,ТипСведений");
	МенеджерЗаписи.Прочитать();
	МенеджерЗаписи.ПрикрепленныйФайл =новый ХранилищеЗначения(Неопределено);
	МенеджерЗаписи.ИмяФайла = "";
	МенеджерЗаписи.Записать();
	Запись.ИмяФайла = "";
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайл(Команда);
	Записать();
	УдалитьФайлНаСервере();
	УстановитьВидимость();
	Записать();
КонецПроцедуры



&НаКлиенте
Процедура ДобавитьФайл(Команда)
	
	ЗначениеВозврата = ВыбратьФайл();
	Если ЗначениеВозврата = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	пИмяФайла = ЗначениеВозврата.ПолноеИмяФайла;
	
	Записать();
	Адрес = ПоместитьВоВременноеХранилище(Новый ХранилищеЗначения(Новый ДвоичныеДанные(пИмяФайла)));
	Запись.ИмяФайла 					= пИмяФайла;
	ЗаписатьФайлНАСервере(Адрес,пИмяФайла);	
	Записать();
	УстановитьВидимость();
КонецПроцедуры

&НаСервере
Процедура  ЗаписатьФайлНаСервере(Адрес,ИмяФайла)
	
	ЗаписьОбъект = РеквизитФормыВЗначение("Запись");
	МенеджерЗаписи = РегистрыСведений.СведенияОПроверкеКонтрагентов.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи,ЗаписьОбъект,"Период,Контрагент,ТипСведений");
	МенеджерЗаписи.Прочитать();
	МенеджерЗаписи.ПрикрепленныйФайл = ПолучитьИзВременногоХранилища(Адрес);
	МенеджерЗаписи.ИмяФайла = ИмяФайла;
	МенеджерЗаписи.Записать();
	

	
КонецПроцедуры	

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	
	Адрес = ПолучитьФайлНаСервере();
 
	Если Адрес = Неопределено Тогда
		Сообщить("Файл не найден");
		Возврат;
	КонецЕсли;	
	ПрикрепленныйФайл = ПолучитьИзВременногоХранилища(адрес);
	Расширение = ПолучитьРасширениеФайла(Запись.ИмяФайла);
	ИмяФайла = ПолучитьИмяВременногоФайла(Расширение);
	ПрикрепленныйФайл.Записать(ИмяФайла);
	ЗапуститьПриложение(ИмяФайла);
	УстановитьВидимость();
КонецПроцедуры

Функция ПолучитьРасширениеФайла(ИмяФайла) Экспорт

	ПозицияПоследнейТочки = 0;
	РасширениеФайла = ИмяФайла;

	Пока 1 = 1 Цикл	
		ПозицияПоследнейТочки = Найти(РасширениеФайла, ".");
		Если ПозицияПоследнейТочки = 0 Тогда
			Прервать;
		Иначе
			РасширениеФайла = Сред(РасширениеФайла, ПозицияПоследнейТочки + 1)
		КонецЕсли;
	КонецЦикла;
	Возврат ?(РасширениеФайла = ИмяФайла, "", РасширениеФайла);

КонецФункции 

&НаСервере
Функция ПолучитьФайлНаСервере()
	
	ЗаписьОбъект = РеквизитФормыВЗначение("Запись");
	Файл = ЗаписьОбъект.ПрикрепленныйФайл.Получить();
	Если Файл <> Неопределено Тогда
		Возврат ПоместитьВоВременноеХранилище(Файл);
	Иначе 
		Возврат Неопределено;
	КонецЕсли;	
КонецФункции	
	

&НаКлиенте
Функция ВыбратьФайл()
		
	ДиалогФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогФайла.Фильтр = "Все файлы (*.*)|*.*";
		
	Если ДиалогФайла.Выбрать() Тогда
		
		ПолноеИмяФайла = ДиалогФайла.ПолноеИмяФайла;
				
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Файл = Новый Файл(ДиалогФайла.ПолноеИмяФайла);
	КомментарийКФайлу = Файл.Имя + Символы.ПС + "размер:" + Файл.Размер() + " байт; изменен:" + Файл.ПолучитьВремяИзменения() +
						"; сохранен в ИБ:" + ТекущаяДата();	
	СтруктураВозврата = Новый Структура("КомментарийКФайлу,ПолноеИмяФайла,ИмяФайла", КомментарийКФайлу, ПолноеИмяФайла, Файл.Имя);	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	Отказ = Ложь;
	ПроверкаЗаписи(Отказ);
	Если Не Отказ Тогда
		Записать();
		Закрыть();
	КонецЕсли;	
		
КонецПроцедуры

Процедура ОбновитьПрикрепленныеФайлы()
	
	Попытка	
		КоличествоПрикрепленныхФайлов = РегистрыСведений.ФайлыРекомендаций.КоличествоПрикрепленныхФайлов(Запись.Контрагент);
		Если КоличествоПрикрепленныхФайлов = 0 Тогда
			Элементы.ПрикрепленныеФайлы.Заголовок = "Нет прикрепленных файлов";
		Иначе
			Элементы.ПрикрепленныеФайлы.Заголовок = "Прикрепленные файлы ("+КоличествоПрикрепленныхФайлов+")"; 
		КонецЕсли;
	Исключение
		Элементы.ПрикрепленныеФайлы.Видимость = ложь;
	КонецПопытки;	
				
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ПрикрепленныеФайлы" Тогда
		ОбновитьПрикрепленныеФайлы();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепленныеФайлыНажатие(Элемент)
	
	Если Запись.Контрагент = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	ПараметрыОткрытия = Новый Структура("Контрагент",Запись.Контрагент);
	ОткрытьФорму("РегистрСведений.ФайлыРекомендаций.Форма.СписокФайловКонтрагента",ПараметрыОткрытия);

КонецПроцедуры
