
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//+++АК SHEP 2018.07.02 ИП-00018753.04
	//ТолькоПросмотр = Истина;
	СтруктураПараметры = Новый Структура("Номенклатура,Производитель,ТипОбращения,ТипЖалобы,ТипВключения");
	ЗаполнитьЗначенияСвойств(СтруктураПараметры, Параметры);
	ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураПараметры);
	//---АК SHEP 2018.07.02
	
	Элементы.ФормаПрикреплённыеФайлы.Заголовок = ЗаголовокПрикреплённыхФайлов(Запись.ПрикреплённыеФайлы);
	
	//+++АК SHEP 2018.07.30
	Если НЕ ПустаяСтрока(Запись.ИсторияЗамечанийНаДоработку) Тогда
		ИсторияЗамечанийНаДоработку.Загрузить(ЗначениеИзСтрокиВнутр(Запись.ИсторияЗамечанийНаДоработку));
	КонецЕсли;
	//---АК SHEP 2018.07.30

КонецПроцедуры

//+++АК SHEP 2018.07.02 ИП-00018753.04
&НаКлиенте
Процедура ПрикреплённыеФайлы(Команда)
	
	ОповещениеЗавершения = Новый ОписаниеОповещения("ПрикреплённыеФайлыЗавершение", ЭтаФорма);
	ПараметрыОткрываемойФормы = Новый Структура("ТабФайлов,ТолькоПросмотр,ЭтоОтветПроизводителя", Запись.ПрикреплённыеФайлы, ТолькоПросмотр, Истина);
	ОткрытьФорму("РегистрСведений.ОбращенияПокупателей.Форма.ФормаПрикрепленныхФайлов", ПараметрыОткрываемойФормы, ЭтаФорма, УникальныйИдентификатор,,, ОповещениеЗавершения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрикреплённыеФайлыЗавершение(ЗначениеВозврат, ДопПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ЗначениеВозврат) Тогда
		Запись.ПрикреплённыеФайлы = ЗначениеВозврат;
		Элементы.ФормаПрикреплённыеФайлы.Заголовок = ЗаголовокПрикреплённыхФайлов(ЗначениеВозврат);
	КонецЕсли;
	
КонецПроцедуры

//+++АК SHEP 2018.07.26 ИП-00018753.03
&НаКлиентеНаСервереБезКонтекста
Функция ЗаголовокПрикреплённыхФайлов(ТабФайлов)
	
	Если ПустаяСтрока(ТабФайлов) Тогда
		КвоФайлов = 0;
	Иначе
		КвоФайлов = КвоСтрокТЗнИзСтрокиВнутр(ТабФайлов);
	КонецЕсли;
	
	Возврат "Прикреплённые файлы (" + Формат(КвоФайлов, "ЧН=нет; ЧГ=") + ")";
	
КонецФункции

//+++АК SHEP 2018.07.26 ИП-00018753.03
&НаСервереБезКонтекста
Функция КвоСтрокТЗнИзСтрокиВнутр(ТабФайлов)
	
	ТабДанные = ЗначениеИзСтрокиВнутр(ТабФайлов);
	Возврат ТабДанные.Количество();
	
КонецФункции

//+++АК SHEP 2018.07.30 ИП-00018753.03
&НаКлиенте
Процедура ОтправитьНаДоработку(Команда)
	
	ОповещениеЗавершения = Новый ОписаниеОповещения("ОтправитьНаДоработкуЗавершение", ЭтаФорма);
	ПоказатьВводСтроки(ОповещениеЗавершения, Запись.ЗамечаниеНаДоработку, "Введите текст замечания", 200, Истина);
	
КонецПроцедуры

//+++АК SHEP 2018.07.30 ИП-00018753.03
&НаКлиенте
Процедура ОтправитьНаДоработкуЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = Неопределено Тогда Возврат; КонецЕсли;
	
	Запись.ЗамечаниеНаДоработку = Результат;
	
	Если ОтправитьНаДоработкуНаСервере() Тогда
		Закрыть();
	Иначе
		ПоказатьПредупреждение(, "Не существует аналогичного обращения покупателя!");
	КонецЕсли;
	
КонецПроцедуры

//+++АК SHEP 2018.07.30 ИП-00018753.03
&НаСервереБезКонтекста
Функция ДобавитьВИсториюЗамечанийНаДоработку(ТЗнЗамечанияНаДоработку, ЗамечаниеНаДоработку)
	
	НоваяСтрокаТЗн = ТЗнЗамечанияНаДоработку.Добавить();
	НоваяСтрокаТЗн.ДатаДобавления = ТекущаяДата();
	НоваяСтрокаТЗн.Пользователь = ОбщегоНазначенияПовтИсп.ТекущийПользовательСеанса();
	НоваяСтрокаТЗн.Замечание = ЗамечаниеНаДоработку;
	
	Возврат ЗначениеВСтрокуВнутр(ТЗнЗамечанияНаДоработку);
	
КонецФункции

//+++АК SHEP 2018.07.30 ИП-00018753.03
&НаСервере
Функция ОтправитьНаДоработкуНаСервере()
	
	СтруктураДанныеОтбор = Новый Структура("id_OK,GUID_Загрузки,ДатаДок");
	ЗаполнитьЗначенияСвойств(СтруктураДанныеОтбор, Запись);
	
	МенеджерЗаписиОбращенияПокупателей = РегистрыСведений.ОбращенияПокупателей.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписиОбращенияПокупателей, СтруктураДанныеОтбор);
	МенеджерЗаписиОбращенияПокупателей.Прочитать();
	
	Если НЕ МенеджерЗаписиОбращенияПокупателей.Выбран() Тогда Возврат Ложь; КонецЕсли;
	
	Запись.ИсторияЗамечанийНаДоработку = ДобавитьВИсториюЗамечанийНаДоработку(РеквизитФормыВЗначение("ИсторияЗамечанийНаДоработку"), Запись.ЗамечаниеНаДоработку);
	Записать();
	МенеджерЗаписиОбращенияПокупателей.ОтветПроизводителя = "";
	МенеджерЗаписиОбращенияПокупателей.Записать();
	
	Возврат Истина;
	
КонецФункции
