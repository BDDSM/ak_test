
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтрЕдиница = Параметры.СтрЕдиница;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Магазин", СтрЕдиница);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ГрафикиРаботыМагазина.Период КАК Период,
	               |	ГрафикиРаботыМагазина.График,
	               |	ГрафикиРаботыМагазина.АвторИзменений,
	               |	ГрафикиРаботыМагазина.ДатаИзменения
	               |ИЗ
	               |	РегистрСведений.ГрафикиРаботыМагазина КАК ГрафикиРаботыМагазина
	               |ГДЕ
	               |	ГрафикиРаботыМагазина.Магазин = &Магазин
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Период УБЫВ";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДоб = ТабДанные.Добавить();
		СтрокаДоб.ДействуетС = Выборка.Период;
		СтрокаДоб.График = Выборка.График;
		СтрокаДоб.Автор = Выборка.АвторИзменений;
		СтрокаДоб.ДатаИзменения = Выборка.ДатаИзменения;
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеСервер()
	
	Набор = РегистрыСведений.ГрафикиРаботыМагазина.СоздатьНаборЗаписей();
	Набор.Отбор.Магазин.Установить(СтрЕдиница);
	Для Каждого СтрокаТаб Из ТабДанные Цикл
		Движение = Набор.Добавить();
		Движение.Период = СтрокаТаб.ДействуетС;
		Движение.Магазин = СтрЕдиница;
		Движение.График = СтрокаТаб.График;
		Движение.АвторИзменений = СтрокаТаб.Автор;
		Движение.ДатаИзменения = СтрокаТаб.ДатаИзменения;
		Если НЕ ЗначениеЗаполнено(Движение.АвторИзменений) Тогда
			Движение.АвторИзменений = ПараметрыСеанса.ТекущийПользователь;
			Движение.ДатаИзменения = ТекущаяДата();
		КонецЕсли;	
	КонецЦикла;
	Набор.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДанные(Команда)
	
	Для Каждого СтрокаТаб Из ТабДанные Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТаб.ДействуетС) Тогда
			Сообщить("В строке " + СтрокаТаб.НомерСтроки + " не заполнена дата действия");
			Возврат;
		КонецЕсли;	
	КонецЦикла;	
	
	ЗаписатьДанныеСервер();
	Закрыть();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДатуЗапретаРедактирования()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Возврат Константы.ГраницаЗапретаРасчетаЗППродавцов.Получить();
	
КонецФункции	

&НаКлиенте
Процедура ТабДанныеПередУдалением(Элемент, Отказ)
	
	ДатаЗапрета = ПолучитьДатуЗапретаРедактирования();
	Если Элементы.ТабДанные.ТекущиеДанные.ДействуетС <= ДатаЗапрета Тогда
		Сообщить("Период, в который вы хотите внести изменения закрыт. Дата запрета: " + Формат(ДатаЗапрета, "ДФ=dd.MM.yyyy"));
		Отказ = Истина;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТабДанныеПередНачаломИзменения(Элемент, Отказ)
	
	ДатаЗапрета = ПолучитьДатуЗапретаРедактирования();
	Если Элементы.ТабДанные.ТекущиеДанные.ДействуетС <= ДатаЗапрета Тогда
		Сообщить("Период, в который вы хотите внести изменения закрыт. Дата запрета: " + Формат(ДатаЗапрета, "ДФ=dd.MM.yyyy"));
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабДанныеДействуетСПриИзменении(Элемент)
	
	ДатаЗапрета = ПолучитьДатуЗапретаРедактирования();
	Если Элементы.ТабДанные.ТекущиеДанные.ДействуетС <= ДатаЗапрета Тогда
		Сообщить("Период, в который вы хотите внести изменения закрыт. Дата запрета: " + Формат(ДатаЗапрета, "ДФ=dd.MM.yyyy"));
		Элементы.ТабДанные.ТекущиеДанные.ДействуетС = ТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабДанныеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока
		И Копирование Тогда
		Элементы.ТабДанные.ТекущиеДанные.ДействуетС = '00010101';
		Элементы.ТабДанные.ТекущиеДанные.Автор = Неопределено;
		Элементы.ТабДанные.ТекущиеДанные.ДатаИзменения = '00010101';
	КонецЕсли;	
	
КонецПроцедуры
