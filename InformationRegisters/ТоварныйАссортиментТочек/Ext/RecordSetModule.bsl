
Процедура ПроверитьЗапрещена(Отказ)
	
	//Если ЭтотОбъект.Количество() = 0 Тогда // на всякий случай )))
	//	Возврат;
	//КонецЕсли;
	////АК БЕЛН 21.02.2017+
	//Если ЭтотОбъект[0].ИзПотерянных Тогда // 
	//	Возврат;
	//КонецЕсли;
	////АК БЕЛН 21.02.2017-
	ТаблицаТоваров = ЭтотОбъект.ВыгрузитьКолонки("ТорговаяТочка, Номенклатура");
	Для Каждого ТекЗапись Из ЭтотОбъект Цикл
		Если ТекЗапись.ИзПотерянных Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = ТаблицаТоваров.Добавить();
		НоваяСтрока.ТорговаяТочка 	= ТекЗапись.ТорговаяТочка;
		НоваяСтрока.Номенклатура 	= ТекЗапись.Номенклатура;
	КонецЦикла;
	Если ТаблицаТоваров.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекДатаЗаписей = ЭтотОбъект[0].Период; 
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекНаборЗаписей"	, ТаблицаТоваров);//ЭтотОбъект.Выгрузить());
	Запрос.УстановитьПараметр("ДатаСреза"		, ТекДатаЗаписей);
	Запрос.Текст =
	"ВЫБРАТЬ                                                                  
	|	ТекНаборЗаписей.ТорговаяТочка,
	|	ТекНаборЗаписей.Номенклатура
	|ПОМЕСТИТЬ ВТНаборЗаписей
	|ИЗ
	|	&ТекНаборЗаписей КАК ТекНаборЗаписей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТНаборЗаписей.ТорговаяТочка,
	|	ВТНаборЗаписей.Номенклатура
	|ИЗ
	|	ВТНаборЗаписей КАК ВТНаборЗаписей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(&ДатаСреза, ) КАК ТоварныйАссортиментТочекСрезПоследних
	|		ПО (ТоварныйАссортиментТочекСрезПоследних.Запрещена)
	|			И (ТоварныйАссортиментТочекСрезПоследних.ТорговаяТочка = ВТНаборЗаписей.ТорговаяТочка)
	|			И (ТоварныйАссортиментТочекСрезПоследних.Номенклатура = ВТНаборЗаписей.Номенклатура)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Сообщить("На дату " + Формат(ТекДатаЗаписей, "ДФ=dd.MM.yy") + " для торговой точки """ + СокрЛП(Выборка.ТорговаяТочка) +
					""" товарная позиция """ + СокрЛП(Выборка.Номенклатура) + """  запрещена!");
		Отказ = Истина;
	КонецЦикла;
	//+++AK ziga ИП-00017475 20171218

	Если Не РольДоступнаСервер() Тогда
		ДЛя каждого Товар из ТаблицаТоваров Цикл
			Если Товар.Номенклатура.КатегорияАссортимента=Перечисления.КатегорииАссортимента.ОсобыеТовары Тогда
				Отказ=Истина;
				Сообщить("Товар из категории ассортимента ""Особые товары"" могут добавлять только сотрудники управления расчета товаров");
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
//---AK ziga ИП-00017475 20171218
	
КонецПроцедуры
//+++AK ziga ИП-00017475 20171218

Функция РольДоступнаСервер()
		//НаименованиеДопПрава="Возможность выбирать статус рабочая";
	Если Не  РольДоступна("ПолныеПрава") Тогда
		МассивПрава=УправлениеДопПравамиПользователей.ПрочитатьЗначениеПраваПользователя(ПланыВидовХарактеристик.ПраваПользователей.МожетДобавлятьАссортиментДляОсобыхТоваров,Ложь,ПараметрыСеанса.ТекущийПользователь);	
		ПравоИзм=МассивПрава[0];
		Возврат ПравоИзм;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции
//---AK ziga ИП-00017475.01 20171218

//+++АК KIRN 2018.03.02 ИП-00018034 
Процедура ПроверитьПолныеАналогиИТМ(Отказ)
	
	Если ЭтотОбъект.Количество() = 0 Тогда // на всякий случай )))
		Возврат;
	КонецЕсли;

	//
	ТекДатаЗаписей = ЭтотОбъект[0].Период; 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекНаборЗаписей"	, ЭтотОбъект.Выгрузить());
	Запрос.УстановитьПараметр("ДатаСреза"		, ТекДатаЗаписей);
	Запрос.УстановитьПараметр("ПустаяТМ"		, Справочники.ТорговыеМарки.ПустаяСсылка());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТекНаборЗаписей.ТорговаяТочка КАК Справочник.СтруктурныеЕдиницы) КАК ТорговаяТочка,
	|	ВЫРАЗИТЬ(ТекНаборЗаписей.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
	|	ТекНаборЗаписей.Выведена,
	|	ТекНаборЗаписей.Запрещена
	|ПОМЕСТИТЬ ВТНаборЗаписей
	|ИЗ
	|	&ТекНаборЗаписей КАК ТекНаборЗаписей
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыАналогов.Ссылка КАК Аналог,
	|	ТоварыАналогов.Номенклатура
	|ПОМЕСТИТЬ ВТПолныеАналоги
	|ИЗ
	|	Справочник.АналогиНоменклатуры.Товары КАК ТоварыАналогов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АналогиНоменклатуры КАК АналогиНоменклатуры
	|		ПО (АналогиНоменклатуры.Ссылка = ТоварыАналогов.Ссылка)
	|			И (АналогиНоменклатуры.ПолностьюЗаменяемыйТовар)
	|			И (НЕ АналогиНоменклатуры.ПометкаУдаления)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварныйАссортиментТочекСрезПоследних.ТорговаяТочка,
	|	ТоварыАналогов.Аналог,
	|	ТоварныйАссортиментТочекСрезПоследних.Номенклатура
	|ПОМЕСТИТЬ ВТАссортиментАналоги
	|ИЗ
	|	РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(&ДатаСреза, ) КАК ТоварныйАссортиментТочекСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПолныеАналоги КАК ТоварыАналогов
	|		ПО (ТоварыАналогов.Номенклатура = ТоварныйАссортиментТочекСрезПоследних.Номенклатура)
	|ГДЕ
	|	НЕ ТоварыАналогов.Аналог ЕСТЬ NULL
	|	И НЕ ТоварныйАссортиментТочекСрезПоследних.Выведена
	|	И НЕ ТоварныйАссортиментТочекСрезПоследних.Запрещена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТНаборЗаписей.ТорговаяТочка,
	|	ВТНаборЗаписей.Номенклатура,
	|	ВТАссортиментАналоги.Номенклатура КАК ПолныйАналог
	|ИЗ
	|	ВТНаборЗаписей КАК ВТНаборЗаписей
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПолныеАналоги КАК ТоварыАналогов
	|		ПО (ТоварыАналогов.Номенклатура = ВТНаборЗаписей.Номенклатура)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТАссортиментАналоги КАК ВТАссортиментАналоги
	|		ПО (ВТАссортиментАналоги.ТорговаяТочка = ВТНаборЗаписей.ТорговаяТочка)
	|			И (ВТАссортиментАналоги.Аналог = ТоварыАналогов.Аналог)
	|			И (НЕ ВТАссортиментАналоги.Номенклатура = ВТНаборЗаписей.Номенклатура)
	|ГДЕ
	|	НЕ ВТНаборЗаписей.Выведена
	|	И НЕ ВТНаборЗаписей.Запрещена
	|	И НЕ ТоварыАналогов.Номенклатура ЕСТЬ NULL
	|	И НЕ ВТАссортиментАналоги.Номенклатура ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТНаборЗаписей.ТорговаяТочка,
	|	ВТНаборЗаписей.Номенклатура,
	|	isNULL(СоответствиеТиповРозничныхТочекИТорговыхМарок.ТорговаяМарка,&ПустаяТМ) КАК ТорговаяМарка
	|ИЗ
	|	ВТНаборЗаписей КАК ВТНаборЗаписей
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеТиповРозничныхТочекИТорговыхМарок КАК СоответствиеТиповРозничныхТочекИТорговыхМарок
	|		ПО ВТНаборЗаписей.ТорговаяТочка.ТипРозничнойТочки = СоответствиеТиповРозничныхТочекИТорговыхМарок.ТипРозничнойТочки
	|			И ВТНаборЗаписей.Номенклатура.ТорговаяМарка = СоответствиеТиповРозничныхТочекИТорговыхМарок.ТорговаяМарка
	|ГДЕ
	|	isNULL(СоответствиеТиповРозничныхТочекИТорговыхМарок.ТорговаяМарка,&ПустаяТМ) <> ВТНаборЗаписей.Номенклатура.ТорговаяМарка";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	Выборка2 = РезультатыЗапроса[РезультатыЗапроса.Количество()-1].Выбрать();
	Выборка = РезультатыЗапроса[РезультатыЗапроса.Количество()-2].Выбрать();
	//Выборка = Запрос.Выполнить().Выбрать();
	
	ТекстОшибки = "";
	Пока Выборка.Следующий() Цикл
		ТекстОшибки = ТекстОшибки + "
		|На дату " + Формат(ТекДатаЗаписей, "ДФ=dd.MM.yy") + " в товарном ассортименте торговой точки """ + СокрЛП(Выборка.ТорговаяТочка) +
				""" для """ + СокрЛП(Выборка.Номенклатура) + """  уже имеется полный аналог! (""" + СокрЛП(Выборка.ПолныйАналог) + """)";
		//Сообщить("На дату " + Формат(ТекДатаЗаписей, "ДФ=dd.MM.yy") + " в товарном ассортименте торговой точки """ + СокрЛП(Выборка.ТорговаяТочка) +
		//		""" для """ + СокрЛП(Выборка.Номенклатура) + """  уже имеется полный аналог! (""" + СокрЛП(Выборка.ПолныйАналог) + """)");
		Отказ = Истина;
	КонецЦикла;
	
	Пока Выборка2.Следующий() Цикл
		ТекстОшибки = ТекстОшибки + "
		|Невомзожно для трговой точки <"+Выборка2.ТОрговаяТочка+"> установить номенклатуру <"+Выборка2.Номенклатура+"> с ТМ <"+Выборка2.ТорговаяМарка+">";
		Отказ = Истина;
	КонецЦикла;

	Если Отказ Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ТекстОшибки;
		Сообщение.Сообщить();
	КонецЕСли;
	
КонецПроцедуры
//---АК KIRN 

Процедура ПередЗаписью(Отказ, Замещение)
	
	//+++АК MIND 2017.12.17 чтобы можно было выполнить безусловную запись в некоторых обязательных случаях
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	
	
	//+++АК mika 2018.10.17 ИП-00020152	
	ПроверитьВозможностьВыводаПозицииИзАссортимента(Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	//---АК mika

	ПроверитьЗапрещена(Отказ);
	//+++АК KIRN 2018.03.02  ИП-00018034
	ПроверитьПолныеАналогиИТМ(Отказ);
	//---АК KIRN 
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТТ", ЭтотОбъект.Выгрузить().ВыгрузитьКолонку("ТорговаяТочка"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтруктурныеЕдиницы.Ссылка,
	|	СтруктурныеЕдиницы.id_TT
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	СтруктурныеЕдиницы.Ссылка В(&ТТ)";
				   
	ТабКеш = Запрос.Выполнить().Выгрузить();
	
	ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	Для Каждого Запись Из ЭтотОбъект Цикл
		Если Запись.id_TT = 0 Тогда
			СтрокаКеш = ТабКеш.Найти(Запись.ТорговаяТочка, "Ссылка");
			Если НЕ СтрокаКеш = Неопределено Тогда
				Запись.id_TT 		= СтрокаКеш.id_TT;
			КонецЕсли;
		КонецЕсли;
		//Если НЕ ЗначениеЗаполнено(Запись.ДатаСозданияЗаписи) Тогда
		Запись.ДатаСозданияЗаписи 	= ТекущаяДата();
		//КонецЕсли;
		//Если Запись.Автор.Пустая() Тогда
		Запись.Автор 				= ТекПользователь;
		//КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ПроверитьВозможностьВыводаПозицииИзАссортимента(Отказ, Истина); //+++АК mika 2018.10.17 ИП-00020152

КонецПроцедуры

// Проверка возможности вывода из ассортимента позиций, которые были сформированы автоматически
//
// Параметры:
//  Отказ  - <Тип.Будево> - Отказ
//  Интерактивно - <Тип.Будево> - Признак того, что данные модифицируются пользователем в Форме записи объекта
//
// Возвращаемое значение:
//   Отказ  - <Тип.Будево> - Отказ
//
Процедура ПроверитьВозможностьВыводаПозицииИзАссортимента(Отказ, Интерактивно = Ложь) Экспорт //+++АК mika 2018.10.17 ИП-00020152 (2018.10.17 Чирков Н. попросил жестко заблокировать любые попытки вывести товар)

	//ВАЖНО: При програмном изменении через Менеджер или Набор записей, невозможно определенить текущее состояние позиции (до попытки "Вывода"),
	//       поэтому контроль/блокировка будет производится при любых изменениях для записей с признаком "Выведена",
	//       т.е. если какой либо алгоритм(регламент или фоновое) программно попытается изменить любой ресурс у записи с признаком "выведена" он попадет на отказ записи. 
	
	//Формирование списка выводимых позиций
	
	ТекущиеЗаписи = ЭтотОбъект.Выгрузить();
	//Проверка на удаление записи, или предварительную (платформенную) очистку записи или набора
	Если ТекущиеЗаписи.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
    Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекНаборЗаписей"	, ТекущиеЗаписи);
	Если Интерактивно Тогда // Контроль возможности вывода при интерактивной работе пользователя (напрямую через "Форму записи" РС Товарный ассортимент)
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТекНаборЗаписей.Период,
		|	ВЫРАЗИТЬ(ТекНаборЗаписей.ТорговаяТочка КАК Справочник.СтруктурныеЕдиницы) КАК ТорговаяТочка,
		|	ВЫРАЗИТЬ(ТекНаборЗаписей.Номенклатура КАК Справочник.Номенклатура) КАК Номенклатура,
		|	ТекНаборЗаписей.Выведена
		|ПОМЕСТИТЬ ВТНаборЗаписей
		|ИЗ
		|	&ТекНаборЗаписей КАК ТекНаборЗаписей
		|ГДЕ
		|	ТекНаборЗаписей.Выведена
		|	И НЕ ТекНаборЗаписей.Комментарий ПОДОБНО ""%#БезАвто%""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТНаборЗаписей.Период,
		|	ВТНаборЗаписей.ТорговаяТочка,
		|	ВТНаборЗаписей.Номенклатура,
		|	ВТНаборЗаписей.Выведена,
		|	ТоварныйАссортиментТочек.ТорговаяТочка.id_TT КАК id_TT,
		|	ТоварныйАссортиментТочек.Номенклатура.id_tov КАК id_tov
		|ИЗ
		|	ВТНаборЗаписей КАК ВТНаборЗаписей
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныйАссортиментТочек КАК ТоварныйАссортиментТочек
		|		ПО ВТНаборЗаписей.Период = ТоварныйАссортиментТочек.Период
		|			И ВТНаборЗаписей.ТорговаяТочка = ТоварныйАссортиментТочек.ТорговаяТочка
		|			И ВТНаборЗаписей.Номенклатура = ТоварныйАссортиментТочек.Номенклатура
		|			И ВТНаборЗаписей.Выведена <> ТоварныйАссортиментТочек.Выведена
		|ГДЕ
		|	НЕ ТоварныйАссортиментТочек.Период ЕСТЬ NULL";
	Иначе  //Контроль возможности вывода при программной попытке вывода позиции
		Запрос.Текст = "ВЫБРАТЬ
		|	ТекНаборЗаписей.Период,
		|	ТекНаборЗаписей.ТорговаяТочка КАК ТорговаяТочка,
		|	ТекНаборЗаписей.Номенклатура КАК Номенклатура,
		|	ТекНаборЗаписей.Выведена
		|ПОМЕСТИТЬ ВТНаборЗаписей
		|ИЗ
		|	&ТекНаборЗаписей КАК ТекНаборЗаписей
		|ГДЕ
		|	ТекНаборЗаписей.Выведена
		|   И НЕ ТекНаборЗаписей.Комментарий ПОДОБНО ""%#БезАвто%""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТНаборЗаписей.Период,
		|	ВТНаборЗаписей.ТорговаяТочка,
		|	ВТНаборЗаписей.ТорговаяТочка.id_TT КАК id_TT,
		|	ВТНаборЗаписей.Номенклатура,
		|	ВТНаборЗаписей.Номенклатура.id_tov КАК id_tov,
		|	ВТНаборЗаписей.Выведена
		|ИЗ
		|	ВТНаборЗаписей КАК ВТНаборЗаписей";
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		
		СоответствиеТТ = Новый Соответствие();
		СоответствиеТоваров  = Новый Соответствие(); 
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СоответствиеТТ.Вставить(Формат(Выборка.id_TT,"ЧГ=0"));	
			СоответствиеТоваров.Вставить(Формат(Выборка.id_tov,"ЧГ=0"));	
		КонецЦикла;
		
		НомерТТСтрока = "";
		ID_tovСтрока  = ""; 

		//Заполнение строки магазинов
		Для каждого СтрокаСоответствия Из СоответствиеТТ Цикл
			НомерТТСтрока = НомерТТСтрока + СтрокаСоответствия.Ключ + ",";
		КонецЦикла;
		НомерТТСтрока = Лев(НомерТТСтрока, СтрДлина(НомерТТСтрока)-1);
		
		//Заполнение строки товаров
		Для каждого СтрокаСоответствия Из СоответствиеТоваров Цикл
			ID_tovСтрока = ID_tovСтрока + СтрокаСоответствия.Ключ + ",";
		КонецЦикла;
		ID_tovСтрока = Лев(ID_tovСтрока, СтрДлина(ID_tovСтрока)-1);
		
		ТаблицаАссортимента = Обработки.УстановкаТоварныхОграничений_Магазины.ПолучитьТаблицуЗапрещенныхКВыводуИзАссортиментаПозиций(НомерТТСтрока, ID_tovСтрока);		
		
		СтрокаУведомления = "";
		
		Для каждого Строка ИЗ ТаблицаАссортимента Цикл
			СтрокаУведомления = СтрокаУведомления + СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("ID магазина: %1 Номенклатура: %2 Статус: %3", Строка.id_TT, Строка.Номенклатура, Строка.СтатусСтрока)  + Символы.ПС;
		КонецЦикла;
		
		Если ЗначениеЗаполнено(СтрокаУведомления) Тогда
			СтрокаУведомления = "Запрещено выводить товары по которым ассортимент управляется автоматически:" + Символы.ПС + СтрокаУведомления;
			Если Интерактивно Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаУведомления, Отказ);
			Иначе
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаУведомления, Отказ);
				//••Удалить после анализа частоты попыток программных выводов номенклатуры из ассортимента 
				ЗаписьЖурналаРегистрации("АссортиментТоваров.ПопыткаПрограммногоВыводаТовараИзАссортимента", УровеньЖурналаРегистрации.Ошибка, , , СтрокаУведомления);
			КонецЕсли;
		КонецЕсли;
			
	КонецЕсли;

КонецПроцедуры // ПроверитьВозможностьВыводаПозицииИзАссортимента()

