
Процедура ОбновитьСостояния(НачалоПериода = Неопределено, НомераРаспределений = "") Экспорт
	
	Если НачалоПериода = Неопределено Тогда НачалоПериода = ТекущаяДата() - 6 * 60*60; КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапросаSQL = "
		|DECLARE @date_start date = " + ВнешниеДанные.ФорматПоля(НачалоПериода) + "
		|
		|IF OBJECT_ID('tempdb..#ers') is not null Drop Table #ers
		|
		|SELECT
		|	j.prefix_job,
		|	er.id_job,
		|	er.message,
		|	er.date_add,
		|	MAX(er.date_add) OVER (PARTITION BY er.id_job) AS maxdate
		|INTO #ers
		|  FROM [jobs].[dbo].[error_jobs] as er with(nolock)
		|   inner join jobs..jobs_union as j with(nolock)
		|     on j.id_job=er.id_job
		|where j.job_name='m2..make_rasp_new';
		|
		|SELECT
		|	CAST(raspr_zadanie.Number_r AS VARCHAR(10)) AS Number_str,
		|	ISNULL(er.message, '') AS Комментарий,
		|	CASE
		|		WHEN date_reg_1C IS NOT NULL
		|			THEN 'РаспределениеЗавершено'
		|		WHEN er.message IS NOT NULL
		|			THEN 'ОшибкаРаспределения'
		|		WHEN date_end IS NOT NULL
		|			THEN 'ПолучениеДанныхИзSQL'
		|		WHEN date_st_make IS NOT NULL
		|			THEN 'РаспределениеНаSQL'
		//|		WHEN Status = 2
		//|			THEN 'НачатоРаспределение'
		|	END AS StatusName
		|
		|FROM
		|	M2..raspr_zadanie As raspr_zadanie (nolock)
		|	left join #ers as er with(nolock)
		|		on raspr_zadanie.id_job = er.id_job
		|		AND er.date_add = er.maxdate
		|
		|WHERE
		|	raspr_zadanie.time_add >= @date_start
		|";
	
	Если ЗначениеЗаполнено(НомераРаспределений) Тогда
		ТекстЗапросаSQL = ТекстЗапросаSQL + "
		|	AND raspr_zadanie.Number_r IN (" + НомераРаспределений + ")";
	КонецЕсли;
	
	ТекстЗапросаSQL = ТекстЗапросаSQL + "
		|IF OBJECT_ID('tempdb..#ers') is not null Drop Table #ers
		|";
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	rs = ADOСоединение.Execute(ТекстЗапросаSQL);
	Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
		rs=rs.NextRecordSet();
	КонецЦикла;
	ТЗнСостоянийSQL = ВнешниеДанные.ПреобразоватьРезультатВТаблицуЗначений(rs);
	ADOСоединение.Close();
	
	// Так как колонки имеют тип "Строка" с неограниченной длиной, ограничиваем длину строки, чтобы не было ошибки:
	// «Неверные параметры в операции сравнения. Нельзя сравнивать поля неограниченной длины и поля несовместимых типов»
	ТЗнСостоянийSQL.Колонки.Добавить("Статус", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(32)));
	МассЗнач = ТЗнСостоянийSQL.ВыгрузитьКолонку("StatusName");
	ТЗнСостоянийSQL.ЗагрузитьКолонку(МассЗнач, "Статус");
	
	ТЗнСостоянийSQL.Колонки.Добавить("НомерРаспределения", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(10)));
	МассЗнач = ТЗнСостоянийSQL.ВыгрузитьКолонку("Number_str");
	ТЗнСостоянийSQL.ЗагрузитьКолонку(МассЗнач, "НомерРаспределения");
	
	Если ТЗнСостоянийSQL.Количество() > 0 Тогда
		
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	ТЗнСостоянийSQL.НомерРаспределения,
			|	ТЗнСостоянийSQL.Комментарий КАК Комментарий,
			|	ВЫБОР
			|		КОГДА ТЗнСостоянийSQL.Статус = ""РаспределениеЗавершено""
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияРаспределенияТоваров.РаспределениеЗавершено)
			|		КОГДА ТЗнСостоянийSQL.Статус = ""ПолучениеДанныхИзSQL""
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияРаспределенияТоваров.ПолучениеДанныхИзSQL)
			|		КОГДА ТЗнСостоянийSQL.Статус = ""РаспределениеНаSQL""
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияРаспределенияТоваров.РаспределениеНаSQL)
			|		КОГДА ТЗнСостоянийSQL.Статус = ""ОшибкаРаспределения""
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияРаспределенияТоваров.ОшибкаРаспределения)
			|		КОГДА ТЗнСостоянийSQL.Статус = ""НачатоРаспределение""
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СостоянияРаспределенияТоваров.НачатоРаспределение)
			|	КОНЕЦ КАК Состояние
			|ПОМЕСТИТЬ ТаблицаСостоянийSQL
			|ИЗ
			|	&ТЗнСостоянийSQL КАК ТЗнСостоянийSQL
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РаспределенияТоваров.УИД,
			|	ТаблицаСостоянийSQL.Комментарий,
			|	ТаблицаСостоянийSQL.Состояние
			|ИЗ
			|	ТаблицаСостоянийSQL КАК ТаблицаСостоянийSQL
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаспределенияТоваров КАК РаспределенияТоваров
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияРаспределенийТоваров.СрезПоследних КАК СостоянияРаспределенийТоваровСрезПоследних
			|			ПО РаспределенияТоваров.УИД = СостоянияРаспределенийТоваровСрезПоследних.УИД
			|		ПО ТаблицаСостоянийSQL.НомерРаспределения = РаспределенияТоваров.Номер
			|ГДЕ
			|	НЕ ТаблицаСостоянийSQL.Состояние = ЕСТЬNULL(СостоянияРаспределенийТоваровСрезПоследних.Состояние, """")
			|	И НЕ ЕСТЬNULL(СостоянияРаспределенийТоваровСрезПоследних.Состояние, """") В (&МассивНеобновляемыхСостояний)");
		Запрос.УстановитьПараметр("ТЗнСостоянийSQL", ТЗнСостоянийSQL);
		МассивНеобновляемыхСостояний = Новый Массив;
		МассивНеобновляемыхСостояний.Добавить(ПредопределенноеЗначение("Перечисление.СостоянияРаспределенияТоваров.ЗагрузкаРасходников"));
		МассивНеобновляемыхСостояний.Добавить(ПредопределенноеЗначение("Перечисление.СостоянияРаспределенияТоваров.РасходникиЗагружены"));
		МассивНеобновляемыхСостояний.Добавить(ПредопределенноеЗначение("Перечисление.СостоянияРаспределенияТоваров.ОшибкаРаспределения"));
		Запрос.УстановитьПараметр("МассивНеобновляемыхСостояний", МассивНеобновляемыхСостояний);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			
			ВыборкаЗапроса = РезультатЗапроса.Выбрать();
			Пока ВыборкаЗапроса.Следующий() Цикл
				РегистрыСведений.СостоянияРаспределенийТоваров.ИзменитьСостояние(ВыборкаЗапроса.УИД, ВыборкаЗапроса.Состояние, ВыборкаЗапроса.Комментарий);
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ДобавитьРаспределение(СтруктураПараметры) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	УИДРаспределения = Строка(Новый УникальныйИдентификатор);
	МенеджерЗаписи = РегистрыСведений.РаспределенияТоваров.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтруктураПараметры);
	МенеджерЗаписи.УИД = УИДРаспределения;
	ТекстИДТоваров = СтруктураПараметры.ИдентификаторыТоваров;
	МенеджерЗаписи.ПоВсемТоварам = ПустаяСтрока(ТекстИДТоваров) ИЛИ ВРег(СокрЛП(ТекстИДТоваров)) = "NULL";
	МенеджерЗаписи.Автор = ПараметрыСеанса.ТекущийПользователь;
	МенеджерЗаписи.Записать();
	
	Возврат УИДРаспределения;
	
КонецФункции

//+++АК SHEP 2018.10.15 ИП-00019616
Функция СуществуетРаспределениеПоДокументу(ДокументСсылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	РаспределенияТоваров.УИД,
		|	РаспределенияТоваров.Номер
		|ПОМЕСТИТЬ РаспределенияТоваров
		|ИЗ
		|	РегистрСведений.РаспределенияТоваров КАК РаспределенияТоваров
		|ГДЕ
		|	РаспределенияТоваров.Документ = &ДокументСсылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РаспределенияТоваров.УИД,
		|	РаспределенияТоваров.Номер
		|ИЗ
		|	РаспределенияТоваров КАК РаспределенияТоваров
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияРаспределенийТоваров.СрезПоследних(
		|				,
		|				УИД В
		|					(ВЫБРАТЬ
		|						РаспределенияТоваров.УИД
		|					ИЗ
		|						РаспределенияТоваров КАК РаспределенияТоваров)) КАК СостоянияРаспределенийТоваровСрезПоследних
		|		ПО РаспределенияТоваров.УИД = СостоянияРаспределенийТоваровСрезПоследних.УИД
		|ГДЕ
		|	НЕ ЕСТЬNULL(СостоянияРаспределенийТоваровСрезПоследних.Состояние, """""""") = ЗНАЧЕНИЕ(Перечисление.СостоянияРаспределенияТоваров.ОшибкаРаспределения)");
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат НЕ РезультатЗапроса.Пустой();
	
КонецФункции

//+++АК SHEP 2018.10.30 ИП-00020026.01
Функция УИДПоНомеруРаспределения(Знач НомерРаспределения) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипЗнч(НомерРаспределения) = Тип("Число") Тогда
		НомерРаспределения = Формат(НомерРаспределения, "ЧГ=");
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РаспределенияТоваров.УИД,
		|	РаспределенияТоваров.Номер
		|ИЗ
		|	РегистрСведений.РаспределенияТоваров КАК РаспределенияТоваров
		|ГДЕ
		|	РаспределенияТоваров.Номер = &НомерРаспределения");
	Запрос.УстановитьПараметр("НомерРаспределения", НомерРаспределения);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда Возврат ""; КонецЕсли;
	
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	ВыборкаЗапроса.Следующий();
	Возврат ВыборкаЗапроса.УИД;
	
КонецФункции
 