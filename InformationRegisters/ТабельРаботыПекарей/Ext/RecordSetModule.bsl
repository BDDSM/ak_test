
Процедура ПередЗаписью(Отказ, Замещение)
	//+++АК mika 2018.10.19 ИП-00019964 
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;	
	//---АК mika
	//mind 2017-09-12 запишем изменения в лог
	СтруктураОтбор = Новый Структура();
	Для Каждого ЭлементОтбор Из ЭтотОбъект.Отбор Цикл
		Если ЭлементОтбор.Использование Тогда
			СтруктураОтбор.Вставить(ЭлементОтбор.Имя, ЭлементОтбор.Значение);
		КонецЕсли;	
	КонецЦикла;
	
	Если СтруктураОтбор.Количество() > 0 Тогда
		Запрос = Новый Запрос;
		ТекстЗапроса =
		"ВЫБРАТЬ * ИЗ РегистрСведений." + ЭтотОбъект.Метаданные().Имя + " КАК Таб
		|ГДЕ
		|	ИСТИНА";
		
		Для Каждого ЭлементОтбор Из СтруктураОтбор Цикл
			ТекстЗапроса = ТекстЗапроса + Символы.ПС + "И " + ЭлементОтбор.Ключ + " = &Параметр" + ЭлементОтбор.Ключ;
			Запрос.УстановитьПараметр("Параметр" + ЭлементОтбор.Ключ, ЭлементОтбор.Значение);
		КонецЦикла;	
		Запрос.Текст = ТекстЗапроса;
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Запись = РегистрыСведений.ЖурналИзмененияТабелей.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись, Выборка);
			Запись.Период 			= ТекущаяДата();
			Запись.ДатаТабеля 		= Выборка.Период;
			Запись.АвторИзменений 	= ПараметрыСеанса.ТекущийПользователь;
			Запись.ТипДействия 		= "Удаление";
			Запись.ТипТабеля 		= "Пекари";
			Попытка
				Если ЗначениеЗаполнено(ПараметрыСеанса.ТекущийПродавец) Тогда
					Запись.ИзмененияСделаныСМагазина = ПараметрыСеанса.ТорговаяТочкаПоАйпи;
				КонецЕсли;	
			Исключение
			КонецПопытки;
			Запись.Записать();
		КонецЦикла;	
	КонецЕсли;	
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтруктурныеЕдиницы.Ссылка
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	СтруктурныеЕдиницы.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)";
				   
	ТабПодр = Запрос.Выполнить().Выгрузить();
	
	//проверим группы в записях
	МассивГруппы = Новый Массив();
	Для Каждого Запись Из ЭтотОбъект Цикл
				
		//+++АК mika 2018.07.29 БезЗадачи. Запрет записи с незаполненной групой сотрудника (переписка со Скворцовы от 28.07.2018)
		Если НЕ ЗначениеЗаполнено(Запись.ГруппаСотрудника) Тогда
			Сообщить(СтрЗаменить(СтрЗаменить("По записи с сотрудником ТекущийСотрудник от ТекущийПериод не указана Группа сотрудника!
								  |(Проверьте корректность привязки: Сотрудник → Помощник ТУ  → РольПомощника  → РольУправляющего (для группы развития + Родитель)  → Управляющий  → Пользователи по ЦФО → ЦФО)
								  |", 
			                      "ТекущийСотрудник", Запись.Сотрудник), "ТекущийПериод", Формат(Запись.Период, "ДФ=dd.MM.yyyy")));
			Отказ = Истина;
		КонецЕсли;
		//---АК mika 

		Если НЕ ЗначениеЗаполнено(Запись.Группа) Тогда
			Сообщить("По записи с сотрудником " + Запись.Сотрудник + " от " + Формат(Запись.Период, "ДФ=dd.MM.yyyy") + " не указана группа");
			Отказ = Истина;
		Иначе
			СтрокаВПодр = ТабПодр.Найти(Запись.Группа, "Ссылка");
			Если СтрокаВПодр = Неопределено Тогда
				Сообщить("По записи с сотрудником " + Запись.Сотрудник + " от " + Формат(Запись.Период, "ДФ=dd.MM.yyyy") + " указанная группа не является подразделением");
				Отказ = Истина;
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	//+++АК mika 2018.10.19 ИП-00019964 
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;	
	//---АК mika
	//mind 2017-09-17 сквозная проверка в графиках
	ТабДвижения = ЭтотОбъект.Выгрузить();
	Если ТабДвижения.Количество() > 0 Тогда
		Запрос = Новый Запрос;   
		Запрос.УстановитьПараметр("Таб"				, ТабДвижения);
		МассивОтсутствий = Новый Массив;
		МассивОтсутствий.Добавить(Перечисления.ВидыОтсутствия.ПереводВКассиры);
		МассивОтсутствий.Добавить(Перечисления.ВидыОтсутствия.ПереводВПродавцы);
		МассивОтсутствий.Добавить(Перечисления.ВидыОтсутствия.Уволен);
		Запрос.УстановитьПараметр("ВидыОтсутствия"	, МассивОтсутствий);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Таб.Период КАК Период,
		|	Таб.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТ_Данные
		|ИЗ
		|	&Таб КАК Таб
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Период,
		|	Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабельРаботыГрузчиков.Период,
		|	ТабельРаботыГрузчиков.Сотрудник,
		|	""Грузчики"" КАК Вид
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТабельРаботыГрузчиков КАК ТабельРаботыГрузчиков
		|		ПО ВТ_Данные.Период = ТабельРаботыГрузчиков.Период
		|			И ВТ_Данные.Сотрудник = ТабельРаботыГрузчиков.Сотрудник
		|			И (НЕ ТабельРаботыГрузчиков.Отсутствие В (&ВидыОтсутствия))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТабельРаботыПродавцов.Период,
		|	ТабельРаботыПродавцов.Сотрудник,
		|	""Продавцы""
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
		|		ПО ВТ_Данные.Период = ТабельРаботыПродавцов.Период
		|			И ВТ_Данные.Сотрудник = ТабельРаботыПродавцов.Сотрудник
		|			И (НЕ ТабельРаботыПродавцов.Отсутствие В (&ВидыОтсутствия))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		//+++АК mika 2018.04.02 ИП-00018000
		|ВЫБРАТЬ
		|	ТабельРаботыКассиров.Период,
		|	ТабельРаботыКассиров.Сотрудник,
		|	""Кассиры""
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТабельРаботыКассиров КАК ТабельРаботыКассиров
		|		ПО ВТ_Данные.Период = ТабельРаботыКассиров.Период
		|			И ВТ_Данные.Сотрудник = ТабельРаботыКассиров.Сотрудник
		|			И (НЕ ТабельРаботыКассиров.Отсутствие В (&ВидыОтсутствия))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		//---АК mika ИП-00018000
		|
		|ВЫБРАТЬ
		|	ТабельРаботыПромоутеров.Период,
		|	ТабельРаботыПромоутеров.Сотрудник,
		|	""Промоутеры""
		|ИЗ
		|	ВТ_Данные КАК ВТ_Данные
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТабельРаботыПромоутеров КАК ТабельРаботыПромоутеров
		|		ПО ВТ_Данные.Период = ТабельРаботыПромоутеров.Период
		|			И ВТ_Данные.Сотрудник = ТабельРаботыПромоутеров.Сотрудник";
		
		Результаты = Запрос.ВыполнитьПакет();
		Если НЕ Результаты[1].Пустой() Тогда
			Выборка = Результаты[1].Выбрать();
			Если Выборка.Следующий() Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Сотрудник: " + Выборка.Сотрудник + " уже указан в графике: " + Выборка.Вид + " на дату: " + Формат(Выборка.Период, "ДФ=dd.MM.yyyy"),,,, Отказ);
			КонецЕсли;	
		КонецЕсли;		
	КонецЕсли;	
	
	//mind 2017-09-12 запишем изменения в лог
	Для Каждого ЗаписьНабора Из ЭтотОбъект Цикл
		Запись = РегистрыСведений.ЖурналИзмененияТабелей.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(Запись, ЗаписьНабора);
		Запись.Период 			= ТекущаяДата() + 1;
		Запись.ДатаТабеля 		= ЗаписьНабора.Период;
		Запись.АвторИзменений 	= ПараметрыСеанса.ТекущийПользователь;
		Запись.ТипДействия 		= "Добавление";
		Запись.ТипТабеля 		= "Пекари";
		Попытка
			Если ЗначениеЗаполнено(ПараметрыСеанса.ТекущийПродавец) Тогда
				Запись.ИзмененияСделаныСМагазина = ПараметрыСеанса.ТорговаяТочкаПоАйпи;
			КонецЕсли;	
		Исключение
		КонецПопытки;
		Запись.Записать();
	КонецЦикла;
	
КонецПроцедуры
