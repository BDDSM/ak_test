
&НаСервере
Процедура ЗаполнитьСписокТоваров()
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВетСвидетельстваПоступлений.Номенклатура,
	                      |	СУММА(ВетСвидетельстваПоступлений.Количество) КАК Количество,
	                      |	СУММА(ВетСвидетельстваПоступлений.КоличествоУпаковок) КАК КоличествоУпаковок
	                      |ПОМЕСТИТЬ ВТ_Привязано
	                      |ИЗ
	                      |	РегистрСведений.ВетСвидетельстваПоступлений КАК ВетСвидетельстваПоступлений
	                      |ГДЕ
	                      |	ВетСвидетельстваПоступлений.ДокПоступления = &Ссылка
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВетСвидетельстваПоступлений.Номенклатура
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ПриходныйОрдерСкладТовары.Ссылка КАК ДокументПоступления,
						  //+++АК KIRN 2018.07.31 ИП-00019315
						  |	Выбор когда ПриходныйОрдерСкладТовары.Ссылка.НомерДокументаТТН = """" тогда ПриходныйОрдерСкладТовары.Ссылка.НомерДокументаПоставщика Иначе ПриходныйОрдерСкладТовары.Ссылка.НомерДокументаТТН Конец КАК НомерДокументаПоставщика,
						  |	Выбор когда ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаТТН = ДатаВремя(1,1,1,0,0,0) тогда ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика Иначе ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаТТН Конец КАК ДатаДокументаПоставщика,
						  //|	ПриходныйОрдерСкладТовары.Ссылка.НомерДокументаПоставщика,
						  //|	ПриходныйОрдерСкладТовары.Ссылка.ДатаДокументаПоставщика,
	                      |	ВЫБОР
	                      |		КОГДА ПриходныйОрдерСкладТовары.Ссылка.Поставщик ССЫЛКА Справочник.Склады
	                      |			ТОГДА ПриходныйОрдерСкладТовары.Ссылка.Поставщик.Владелец
	                      |		ИНАЧЕ ПриходныйОрдерСкладТовары.Ссылка.Поставщик
	                      |	КОНЕЦ КАК Отправитель,
	                      |	ПриходныйОрдерСкладТовары.Ссылка.Склад.Владелец КАК Получатель,
	                      |	ПриходныйОрдерСкладТовары.Номенклатура,
	                      |	ПриходныйОрдерСкладТовары.Номенклатура.Весовой КАК Весовой,
	                      |	ПриходныйОрдерСкладТовары.ДатаПроизводства,
	                      |	ПриходныйОрдерСкладТовары.Количество,
	                      |	ПриходныйОрдерСкладТовары.Количество * ПриходныйОрдерСкладТовары.ЕдиницаИзмерения.Вес КАК Вес,
	                      |	ПриходныйОрдерСкладТовары.КоличествоКоробок,
	                      |	ПриходныйОрдерСкладТовары.НомерСтроки КАК НомерСтрокиДокумента,
	                      |	ВТ_Привязано.Количество КАК КоличествоПривязано,
	                      |	ВТ_Привязано.КоличествоУпаковок КАК КоличествоКоробокПривязано,
	                      |	ЕСТЬNULL(МЙ_СоответствиеНоменклатурыХарактеристики.ПродукцияВетис, МЙ_СоответствиеНоменклатуры.ПродукцияВетис) КАК ПродукцияВетис,
						  //++ХЖК 08.08.2018 ИП-00019497
						  |	ПриходныйОрдерСкладТовары.ЕдиницаИзмерения
						  //--ХЖК
	                      |ИЗ
	                      |	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Привязано КАК ВТ_Привязано
	                      |		ПО ПриходныйОрдерСкладТовары.Номенклатура = ВТ_Привязано.Номенклатура
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МЙ_СоответствиеНоменклатуры КАК МЙ_СоответствиеНоменклатурыХарактеристики
	                      |		ПО ПриходныйОрдерСкладТовары.Номенклатура = МЙ_СоответствиеНоменклатурыХарактеристики.Номенклатура
	                      |			И ПриходныйОрдерСкладТовары.Характеристика = МЙ_СоответствиеНоменклатурыХарактеристики.Характеристика
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МЙ_СоответствиеНоменклатуры КАК МЙ_СоответствиеНоменклатуры
	                      |		ПО ПриходныйОрдерСкладТовары.Номенклатура = МЙ_СоответствиеНоменклатуры.Номенклатура
	                      |			И (МЙ_СоответствиеНоменклатуры.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка))
	                      |ГДЕ
	                      |	ПриходныйОрдерСкладТовары.Ссылка = &Ссылка
	                      |	И ПриходныйОрдерСкладТовары.Номенклатура.ТребуетсяВетеринарныйСертификат
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	ПриходныйОрдерСкладТовары.НомерСтроки");
	
	Запрос.УстановитьПараметр("Ссылка", Документ);
	
	Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры	

&НаСервере
Процедура ПересчитатьКоличествоПривязаноОбщее()
	
	ВСД_Итого = ВСДПодобранные.Выгрузить(, "UUID_ВСД, Количество, КоличествоУпаковок");
	ВСД_Итого.Свернуть("UUID_ВСД", "Количество, КоличествоУпаковок");

	
	Для Каждого Строка ИЗ ВСД Цикл
		СтрокаИтого = ВСД_Итого.Найти(Строка.UUID_ВСД);
		
		Если СтрокаИтого = Неопределено Тогда
			Строка.КоличествоПривязаноОбщее = 0;
			Строка.КоличествоУпаковокПривязаноОбщее = 0;
		Иначе
			Строка.КоличествоПривязаноОбщее = СтрокаИтого.Количество;
			Строка.КоличествоУпаковокПривязаноОбщее = СтрокаИтого.КоличествоУпаковок;
		КонецЕсли; 
	КонецЦикла;  
	
	//
	Документ_Итого = ВСДПодобранные.Выгрузить(, "Номенклатура, Количество, КоличествоУпаковок");
	Документ_Итого.Свернуть("Номенклатура", "Количество, КоличествоУпаковок");
	
	Для Каждого Строка ИЗ Товары Цикл
		СтрокаИтого = Документ_Итого.Найти(Строка.Номенклатура);
		
		Если СтрокаИтого = Неопределено Тогда
			Строка.КоличествоПривязано = 0;
			Строка.КоличествоКоробокПривязано = 0;
		Иначе
			Строка.КоличествоПривязано  = СтрокаИтого.Количество;
			Строка.КоличествоКоробокПривязано = СтрокаИтого.КоличествоУпаковок;
		КонецЕсли; 
	КонецЦикла;  
	
КонецПроцедуры 

&НаСервере
Функция ОбновитьТаблицуВСД()
	
	НастройкиСопоставления = Новый Структура();
	
	НастройкиСопоставления.Вставить("СопоставлениеОтправитель", СопоставлениеОтправитель);
	НастройкиСопоставления.Вставить("СопоставлениеПолучатель", СопоставлениеПолучатель);
	НастройкиСопоставления.Вставить("СопоставлениеПродукция", СопоставлениеПродукция);
	НастройкиСопоставления.Вставить("СопоставлениеВидПродукции", СопоставлениеВидПродукции);
	НастройкиСопоставления.Вставить("СопоставлениеДатаПроизводства", СопоставлениеДатаПроизводства);
	НастройкиСопоставления.Вставить("СопоставлениеКоличество", СопоставлениеКоличество);
	НастройкиСопоставления.Вставить("СопоставлениеКоличествоУпаковок", СопоставлениеКоличествоУпаковок);	
	НастройкиСопоставления.Вставить("СопоставлениеНомерТТН", СопоставлениеНомерТТН);
	НастройкиСопоставления.Вставить("СопоставлениеДатаТТН", СопоставлениеДатаТТН);
	НастройкиСопоставления.Вставить("СопоставлениеСтатусВСД", НЕ СопоставлениеВключатьНеактуальныеСтатусы);
	НастройкиСопоставления.Вставить("СопоставлениеВключатьПривязанные", Истина);
	//+++АК KIRN 2018.08.04 
	НастройкиСопоставления.Вставить("СопоставлениеНаименованияНоменклатуры", СопоставлениеНаименованияНоменклатуры);
	//---АК KIRN 
	
	ПараметрыОтбора = Новый Массив;
	
	ОбменССистемойВетисКлиентСервер.ДобавитьПараметрОтбора(ПараметрыОтбора, "ДокументПоступления", ВидСравнения.Равно, Документ);
	ОбменССистемойВетисКлиентСервер.ДобавитьПараметрОтбора(ПараметрыОтбора, "Организация", ВидСравнения.Равно, Документ.Организация);
	
	ВСД.Загрузить(ОбменССистемойВетис.ПолучитьСопоставленныеДокументыПоступленияИВСД(ПараметрыОтбора, НастройкиСопоставления));
	
	ПересчитатьКоличествоПривязаноОбщее();	
	
КонецФункции

&НаСервере
Функция ПолучитьКлючЗаписиВСД(UUID_ВСД)
	
	Возврат РегистрыСведений.МЙ_ВетеринарныеДокументы.СоздатьКлючЗаписи(Новый Структура("UUID", UUID_ВСД));
	
КонецФункции 


&НаКлиенте
Процедура СписокСертификатыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ВСД.НайтиПоИдентификатору(ВыбраннаяСтрока).ВСДПривязан И (Поле.Имя =  "ВСДКоличествоПривязано" ИЛИ Поле.Имя =  "ВСДКоличествоУпаковокПривязано") Тогда
		Возврат;
	КонецЕсли; 
	
	СтандартнаяОбработка = Ложь;
		
	ПараметрыФормы = Новый Структура("Ключ", ПолучитьКлючЗаписиВСД(ВСД.НайтиПоИдентификатору(ВыбраннаяСтрока).UUID_ВСД));
		
	ОткрытьФорму("РегистрСведений.МЙ_ВетеринарныеДокументы.ФормаЗаписи", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПриИзменении(Элемент)
	
	Если Элемент.Имя = "СопоставлениеПродукция" И СопоставлениеПродукция Тогда
		СопоставлениеВидПродукции = Ложь;		
	КонецЕсли; 
	
	Если Элемент.Имя = "СопоставлениеВидПродукции" И СопоставлениеВидПродукции Тогда
		СопоставлениеПродукция = Ложь;		
	КонецЕсли; 
	
	ОбновитьТаблицуВСД();

	Элементы.ВСД.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Элементы.ВСД.ОтборСтрок = Неопределено;
	Иначе
		Элементы.ВСД.ОтборСтрок = Неопределено;
		Элементы.ВСД.ОтборСтрок = Новый ФиксированнаяСтруктура("НомерСтрокиДокумента", ТекущиеДанные.НомерСтрокиДокумента);
	КонецЕсли; 
	
	Элементы.ВСД.Обновить();	
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПривязкуСертификата(КорректировкаКоличества = Ложь)
	
	ТекущиеДанныеТовары = Элементы.Товары.ТекущиеДанные;
	ТекущиеДанныеВСД = Элементы.ВСД.ТекущиеДанные;
	
	//Если НЕ КорректировкаКоличества И ТекущиеДанныеВСД.ВСДПривязан  И ТекущиеДанныеТовары.КоличествоКоробок <> ТекущиеДанныеВСД.packingAmount Тогда
	//	Предупреждение("Внимание! Количество упаковок в документе и ВСД не совпадает! Проверьте количество для привязки!");
	//КонецЕсли; 
	
	//ИзменитьПривязкуСертификатаНаСервере(Элементы.Товары.ТекущаяСтрока, Элементы.ВСД.ТекущаяСтрока, КорректировкаКоличества);
	
	Если ТекущиеДанныеВСД.ВСДПривязан Тогда
		
		Если НЕ КорректировкаКоличества Тогда
			Если ТекущиеДанныеВСД.УказанВес Тогда
				ТекущиеДанныеВСД.КоличествоПривязано = Мин(ТекущиеДанныеТовары.Вес, ТекущиеДанныеВСД.volume - ТекущиеДанныеВСД.КоличествоПривязаноОбщее);
				ОбъемСовпадает = (ТекущиеДанныеТовары.Вес = ТекущиеДанныеВСД.volume);
			Иначе
				 //++ХЖК 08.08.2018 ИП-00019497
				Коэффициент = ПолучитьКоэффициент(ТекущиеДанныеВСД.ЕдиницаИзмерения, ТекущиеДанныеТовары.Номенклатура);
				Количество = Коэффициент*ТекущиеДанныеТовары.Количество;
				ТекущиеДанныеВСД.КоличествоПривязано = Мин(Количество, ТекущиеДанныеВСД.volume - ТекущиеДанныеВСД.КоличествоПривязаноОбщее);
				ОбъемСовпадает = (Количество = ТекущиеДанныеВСД.volume);
				//--ХЖК
			КонецЕсли; 
			
			Если ОбъемСовпадает Тогда
				ТекущиеДанныеВСД.КоличествоУпаковокПривязано = ТекущиеДанныеВСД.packingAmount;
			Иначе
				ТекущиеДанныеВСД.КоличествоУпаковокПривязано = Мин(ТекущиеДанныеТовары.КоличествоКоробок, ТекущиеДанныеВСД.packingAmount - ТекущиеДанныеВСД.КоличествоУпаковокПривязаноОбщее);
			КонецЕсли;
		КонецЕсли; 
		
	Иначе	
		
		ТекущиеДанныеВСД.КоличествоУпаковокПривязано = 0;
		ТекущиеДанныеВСД.КоличествоПривязано = 0;
		
	КонецЕсли;	
	
	// Перезаписываем в таблице подобранных
	НайденныеСтроки = ВСДПодобранные.НайтиСтроки(Новый Структура("Номенклатура, UUID_ВСД", ТекущиеДанныеТовары.Номенклатура, ТекущиеДанныеВСД.UUID_ВСД));
	
	Для Каждого Строка ИЗ НайденныеСтроки Цикл
		ВСДПодобранные.Удалить(Строка);
	КонецЦикла;  
	
	Если ТекущиеДанныеВСД.ВСДПривязан Тогда
		СтрокаПодобрано = ВСДПодобранные.Добавить();
		
		СтрокаПодобрано.Номенклатура = ТекущиеДанныеВСД.Номенклатура;
		СтрокаПодобрано.UUID_ВСД = ТекущиеДанныеВСД.UUID_ВСД;
		
		СтрокаПодобрано.ДанныеВетСвидетельствСерия = ТекущиеДанныеВСД.issueSeries;
		СтрокаПодобрано.ДанныеВетСвидетельствНомер = ТекущиеДанныеВСД.issueNumber;
		СтрокаПодобрано.ДанныеВетСвидетельствДата = ТекущиеДанныеВСД.issueDate;
		
		СтрокаПодобрано.КоличествоУпаковок = ТекущиеДанныеВСД.КоличествоУпаковокПривязано;
		СтрокаПодобрано.Количество = ТекущиеДанныеВСД.КоличествоПривязано;
		
		СтрокаПодобрано.КемВыдан = ТекущиеДанныеВСД.confirmedBy;
		СтрокаПодобрано.ИнформацияОбИсследовании = СтрЗаменить(ТекущиеДанныеВСД.specialMarks, Символы.ПС, "; ");
	КонецЕсли; 
	
	// Пересчитываем итоги по товару и ВСД
	ПересчитатьКоличествоПривязаноОбщее();
	
	Элементы.ВСД.Обновить();
	Модифицированность = Истина;
	
КонецПроцедуры 

//++ХЖК 08.08.2018 ИП-00019497
&НаСервереБезКонтекста
Функция ПолучитьКоэффициент(ЕдИзм, Номенклатура)
	Если ЕдИзм.Номенклатура = Номенклатура Тогда
		Возврат ?(ЕдИзм.Коэффициент = 0 , 1 , ЕдИзм.Коэффициент);
	Иначе 
		Возврат 1;
	КонецЕсли;
КонецФункции // ()
//--ХЖК 08.08.2018 ИП-00019497

&НаКлиенте
Процедура ВСДВСДПривязанПриИзменении(Элемент)

	ИзменитьПривязкуСертификата(Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ВСДКоличествоПривязаноПриИзменении(Элемент)
	
	ИзменитьПривязкуСертификата(Истина);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРезультатПроверкиПривязок()
	
	ТаблицаПривязок = ВСДПодобранные.Выгрузить(, "UUID_ВСД, Количество, КоличествоУпаковок");
	ТаблицаПривязок.Свернуть("UUID_ВСД", "Количество, КоличествоУпаковок");
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТаблицаПривязок.UUID_ВСД,
	                      |	ТаблицаПривязок.Количество,
	                      |	ТаблицаПривязок.КоличествоУпаковок
	                      |ПОМЕСТИТЬ ВТ_Привязано
	                      |ИЗ
	                      |	&ТаблицаПривязок КАК ТаблицаПривязок
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_Привязано.UUID_ВСД,
	                      |	ВТ_Привязано.Количество,
	                      |	ВТ_Привязано.КоличествоУпаковок,
	                      |	МЙ_ВетеринарныеДокументы.volume,
	                      |	МЙ_ВетеринарныеДокументы.unit,
	                      |	МЙ_ВетеринарныеДокументы.packingAmount,
	                      |	МЙ_ВетеринарныеДокументы.productItem,
	                      |	МЙ_ВетеринарныеДокументы.issueDate,
	                      |	МЙ_ВетеринарныеДокументы.subProduct,
	                      |	МЙ_ВетеринарныеДокументы.packingList,
	                      |	МЙ_ВетеринарныеДокументы.issueSeries,
	                      |	МЙ_ВетеринарныеДокументы.waybillType,
	                      |	МЙ_ВетеринарныеДокументы.waybillSeries
	                      |ИЗ
	                      |	ВТ_Привязано КАК ВТ_Привязано
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МЙ_ВетеринарныеДокументы КАК МЙ_ВетеринарныеДокументы
	                      |		ПО ВТ_Привязано.UUID_ВСД = МЙ_ВетеринарныеДокументы.UUID");
	
	Запрос.УстановитьПараметр("ТаблицаПривязок", ТаблицаПривязок);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Результат = "";
	
	Пока Выборка.Следующий() Цикл
		Если Не ЗначениеЗаполнено(Выборка.packingList) Тогда
			Результат = Результат + "ВСД от " + Формат(Выборка.issueDate, "ДФ=dd.MM.yyyy") + " (" + Выборка.subProduct + ": "  + Формат(Выборка.volume, "ЧДЦ=3; ЧН=") + " " + Выборка.unit + ")." + " Не указан вид упаковки! Погасить ВСД будет невозможно!" + Символы.ПС;			
		КонецЕсли; 
		
		Если Выборка.Количество <> Выборка.volume Тогда
			Результат = Результат + "ВСД от " + Формат(Выборка.issueDate, "ДФ=dd.MM.yyyy") + " (" + Выборка.subProduct + ": "  + Формат(Выборка.volume, "ЧДЦ=3; ЧН=") + " " + Выборка.unit + ")." + " Не совпадает объем привязанной продукции. Привязано: " + Формат(Выборка.Количество, "ЧДЦ=3; ЧН=") + " "  + Выборка.unit + "." + Символы.ПС;
		КонецЕсли; 		
		
		Если Выборка.packingAmount = 0 Тогда
			Результат = Результат + "ВСД от " + Формат(Выборка.issueDate, "ДФ=dd.MM.yyyy") + " (" + Выборка.subProduct + ": "  + Формат(Выборка.volume, "ЧДЦ=3; ЧН=") + " " + Выборка.unit + ")." + " В ВСД не указано количество упаковок!";			
		ИначеЕсли Выборка.packingAmount <> Выборка.КоличествоУпаковок Тогда
			Результат = Результат + "ВСД от " + Формат(Выборка.issueDate, "ДФ=dd.MM.yyyy") + " (" + Выборка.subProduct + ": "  + Формат(Выборка.volume, "ЧДЦ=3; ЧН=") + " " + Выборка.unit + ")." + " Не совпадает количество  привязаннык упаковок. Привязано: " + Формат(Выборка.КоличествоУпаковок, "ЧДЦ=0; ЧН=") + " (в ВСД: " + Формат(Выборка.packingAmount, "ЧДЦ=0; ЧН=") + ")." +  Символы.ПС;			
		КонецЕсли; 
		
		Если Выборка.waybillType <> 0 Тогда
			Если Выборка.waybillType <> 1 Тогда 
				Результат = Результат +  "После привязки не сможете погасить ВСД из 1С (ошибка - тип ТТН не равен ""Товарно-транспортная накладная"")!. "+ Символы.ПС; 
			Иначе
				Если СокрЛП(Выборка.waybillSeries) <> "" Тогда
					Результат = Результат +  "После привязки не сможете погасить ВСД из 1С (ошибка - заполнена серия ТТН)!. "+ Символы.ПС; 
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;   
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура СохранитьПривязкиСервер()
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВетСвидетельстваПоступлений.UUID_ВСД
	|ИЗ
	|	РегистрСведений.ВетСвидетельстваПоступлений КАК ВетСвидетельстваПоступлений
	|ГДЕ
	|	ВетСвидетельстваПоступлений.ДокПоступления = &ДокПоступления
	|	И ВетСвидетельстваПоступлений.UUID_ВСД <> """"");
	
	Запрос.УстановитьПараметр("ДокПоступления", Документ);
	
	НЗ = РегистрыСведений.ВетСвидетельстваПоступлений.СоздатьНаборЗаписей();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НЗ.Отбор.ДокПоступления.Установить(Документ);		
		НЗ.Отбор.UUID_ВСД.Установить(Выборка.UUID_ВСД);
		НЗ.Записать();
	КонецЦикла;   
	
	Для Каждого Строка Из ВСДПодобранные Цикл
		МЗ = РегистрыСведений.ВетСвидетельстваПоступлений.СоздатьМенеджерЗаписи();
		
		ЗаполнитьЗначенияСвойств(МЗ, Строка);
		МЗ.ДокПоступления = Документ;		
		
		МЗ.Записать();
	КонецЦикла;  
	
КонецПроцедуры 

&НаКлиенте
Процедура СохранитьПривязки()
	
	Результат = ПолучитьРезультатПроверкиПривязок();
	
	Если Не ПустаяСтрока(Результат) Тогда
		Если Вопрос(Результат + Символы.ПС +  "Сохранить привязки?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			СохранитьПривязкиСервер();		
		КонецЕсли; 
	Иначе
		СохранитьПривязкиСервер();	
	КонецЕсли; 
	
	Модифицированность = Ложь;
	
КонецПроцедуры
	
&НаКлиенте
Процедура ОК(Команда)
	
	СохранитьПривязки();
	
	Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("Документ", Документ);
	
	ЗакрыватьПриВыборе = Ложь;
	
	ЗаполнитьСписокТоваров();
	
	// Заполняем таблицу подобранных
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВетСвидетельстваПоступлений.Номенклатура,
	                      |	ВетСвидетельстваПоступлений.UUID_ВСД,
	                      |	ВетСвидетельстваПоступлений.Количество,
	                      |	ВетСвидетельстваПоступлений.КоличествоУпаковок,
	                      |	ВетСвидетельстваПоступлений.ДанныеВетСвидетельствСерия,
	                      |	ВетСвидетельстваПоступлений.ДанныеВетСвидетельствНомер,
	                      |	ВетСвидетельстваПоступлений.ДанныеВетСвидетельствДата,
	                      |	ВетСвидетельстваПоступлений.КемВыдан,
	                      |	ВетСвидетельстваПоступлений.ИнформацияОбИсследовании,
	                      |	ВетСвидетельстваПоступлений.АдресПроизводителя
	                      |ИЗ
	                      |	РегистрСведений.ВетСвидетельстваПоступлений КАК ВетСвидетельстваПоступлений
	                      |ГДЕ
	                      |	ВетСвидетельстваПоступлений.ДокПоступления = &ДокПоступления
	                      |	И ВетСвидетельстваПоступлений.UUID_ВСД <> """"");
	
	Запрос.УстановитьПараметр("ДокПоступления", Документ);
	
	ВСДПодобранные.Загрузить(Запрос.Выполнить().Выгрузить());;
	
	// Настройки сопоставления по умолчанию
	СопоставлениеОтправитель = Истина;
	СопоставлениеПолучатель = Истина;
	СопоставлениеПродукция = Истина;
	
	Если Параметры.ПодобратьВСДАвтоматически Тогда
		СопоставлениеНомерТТН = Истина;
		СопоставлениеДатаТТН = Истина;
	Иначе
		СопоставлениеДатаПроизводства = Истина;
	КонецЕсли; 
	
	ОбновитьТаблицуВСД();
	
	Если Параметры.ПодобратьВСДАвтоматически Тогда
		// Сначала привязываем те позиции, по которым у нас внесенено наименование номенклатуры поставщика и те, по которым совпадает количество.		
		ВСД.Сортировать("СовпадаетНоменклатураПоставщика Убыв, СовпадаетКоличество Убыв, НомерСтрокиДокумента");	
		
		ТаблицаОстатковПоВСД = ВСД.Выгрузить();
		ТаблицаОстатковПоВСД.Свернуть("UUID_ВСД, volume, packingAmount");
		
		Для Каждого Строка Из ТаблицаОстатковПоВСД Цикл
			СтрокиПодобрано = ВСДПодобранные.НайтиСтроки(Новый Структура("UUID_ВСД", Строка.UUID_ВСД));  
			
			Для Каждого НС Из СтрокиПодобрано Цикл
				Строка.volume = Строка.volume - НС.Количество;
				Строка.packingAmount = Строка.packingAmount - НС.КоличествоУпаковок;
			КонецЦикла;  
		КонецЦикла;  
		
		ТаблицаОстатковПоДокументу = ВСД.Выгрузить();
		ТаблицаОстатковПоДокументу.Свернуть("Номенклатура, КоличествоДокумент, КоличествоКоробокДокумент");
		
		Для Каждого Строка Из ТаблицаОстатковПоДокументу Цикл
			СтрокиПодобрано = ВСДПодобранные.НайтиСтроки(Новый Структура("Номенклатура", Строка.Номенклатура));  
			
			Для Каждого НС Из СтрокиПодобрано Цикл
				Строка.КоличествоДокумент = Строка.КоличествоДокумент - НС.Количество;
				Строка.КоличествоКоробокДокумент = Строка.КоличествоКоробокДокумент- НС.КоличествоУпаковок;
			КонецЦикла;  
		КонецЦикла;  
		
		Для Каждого Строка Из ВСД Цикл
			
			Если Строка.ВСДПривязан  Тогда
				Продолжить;
			КонецЕсли; 
			
			СтрокаОстаткаВСД = ТаблицаОстатковПоВСД.Найти(Строка.UUID_ВСД, "UUID_ВСД");
			СтрокаОстаткаДокумент = ТаблицаОстатковПоДокументу.Найти(Строка.Номенклатура, "Номенклатура");
			
			Если СтрокаОстаткаВСД.volume <= 0 ИЛИ СтрокаОстаткаДокумент.КоличествоДокумент <= 0 Тогда
				Продолжить;
			КонецЕсли; 
			
			Модифицированность = Истина;
			
			Строка.ВСДПривязан = Истина;
			
			Строка.КоличествоПривязано = Мин(СтрокаОстаткаДокумент.КоличествоДокумент, СтрокаОстаткаВСД.volume);
			
			СтрокаОстаткаВСД.volume = СтрокаОстаткаВСД.volume - Строка.КоличествоПривязано ;
			СтрокаОстаткаДокумент.КоличествоДокумент = СтрокаОстаткаДокумент.КоличествоДокумент - Строка.КоличествоПривязано;
			
			Если Строка.volume = Строка.КоличествоДокумент Тогда
				Строка.КоличествоУпаковокПривязано = Строка.packingAmount;			
			Иначе 
				Строка.КоличествоУпаковокПривязано = Мин(СтрокаОстаткаДокумент.КоличествоКоробокДокумент, СтрокаОстаткаВСД.packingAmount);			
			КонецЕсли; 
			
			СтрокаОстаткаВСД.packingAmount = СтрокаОстаткаВСД.packingAmount - Строка.КоличествоУпаковокПривязано;
			СтрокаОстаткаДокумент.КоличествоКоробокДокумент = СтрокаОстаткаДокумент.КоличествоКоробокДокумент - Строка.КоличествоУпаковокПривязано;
			
			// 
			СтрокаПодобрано = ВСДПодобранные.Добавить();
			
			СтрокаПодобрано.Номенклатура = Строка.Номенклатура;
			СтрокаПодобрано.UUID_ВСД = Строка.UUID_ВСД;
			
			СтрокаПодобрано.ДанныеВетСвидетельствСерия = Строка.issueSeries;
			СтрокаПодобрано.ДанныеВетСвидетельствНомер = Строка.issueNumber;
			СтрокаПодобрано.ДанныеВетСвидетельствДата = Строка.issueDate;
			
			СтрокаПодобрано.КоличествоУпаковок = Строка.КоличествоУпаковокПривязано;
			СтрокаПодобрано.Количество = Строка.КоличествоПривязано;
			
			СтрокаПодобрано.КемВыдан = Строка.confirmedBy;
			СтрокаПодобрано.ИнформацияОбИсследовании = СтрЗаменить(Строка.specialMarks, Символы.ПС, "; ");
			
		КонецЦикла;  
		
		Если НЕ Модифицированность Тогда
			Сообщить("Сертификаты для добавления не найдены!");			
		Иначе
			ПересчитатьКоличествоПривязаноОбщее();
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Ответ = Вопрос("Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			СохранитьПривязки();
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		КонецЕсли; 	
	КонецЕсли; 
	
	ОповеститьОВыборе("ПОДБОР_ВСД");		
	Оповестить("ИзменилисьПривязкиВСД");
	
КонецПроцедуры






