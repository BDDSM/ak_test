
&НаКлиенте
Процедура ПолучательФильтрПриИзменении(Элемент)
	
	ИзменилсяФильтр("Получатель", Получатель);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительКонтрагентФильтрПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ОтправительКонтрагент) Тогда
		ОтправительСклад = Неопределено;
	КонецЕсли; 
	
	ИзменилсяФильтр("Отправитель", ОтправительКонтрагент);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправительСкладФильтрПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(ОтправительСклад) Тогда
		ОтправительКонтрагент = Неопределено;
	КонецЕсли; 
	
	ИзменилсяФильтр("Отправитель", ОтправительСклад);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменилсяФильтр(ИмяПоля, Значение)
	
	ЭлементОтбора = Неопределено;;
	
	ПолеОтбора = Новый ПолеКомпоновкиДанных(ИмяПоля);
	
	Для Каждого ТекущийЭлементОтбора Из Список.Отбор.Элементы Цикл
		Если ТекущийЭлементОтбора.ЛевоеЗначение = ПолеОтбора Тогда
			Если НЕ ЗначениеЗаполнено(Значение) ИЛИ ЭлементОтбора <> Неопределено Тогда
				ТекущийЭлементОтбора.Использование = Ложь;
			Иначе
				ЭлементОтбора = ТекущийЭлементОтбора;	
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;  
	
	Если ЗначениеЗаполнено(Значение) Тогда 
		Если ЭлементОтбора = Неопределено  Тогда
			ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение = ПолеОтбора;
		КонецЕсли; 
		
		ЭлементОтбора.Использование = Истина;	
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Значение;;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПогаситьВСД(Команда)
	
	Если Элементы.Список.ВыделенныеСтроки.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;		
	
	Если Вопрос("Выполнить гашение ВСД?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда		
		Возврат;
	КонецЕсли;
	
	СписокВСД = Новый СписокЗначений;
	
	Для Каждого Строка ИЗ Элементы.Список.ВыделенныеСтроки Цикл
		СписокВСД.Добавить(ПолучитьUUIDПоКлючу(Строка));
	КонецЦикла;  	
	
	ПараметрыОтбора = Новый Массив;
	ОбменССистемойВетисКлиентСервер.ДобавитьПараметрОтбора(ПараметрыОтбора, "UUID_ВСД", ВидСравнения.ВСписке, СписокВСД);
	
	МассивПривязок = ОбменССистемойВетис.ПолучитьМассивПривязокВСД(ПараметрыОтбора);
	
	Погашено = 0;
	
	Для Каждого ПараметрыПривязки ИЗ МассивПривязок Цикл
		Если ОбменССистемойВетисКлиентСервер.ПогаситьВСД(ПараметрыПривязки) Тогда
			Погашено = Погашено + 1;			
		КонецЕсли;
	КонецЦикла;  
	
	Если МассивПривязок.Количество() > 0 Тогда
		Предупреждение("Погашено " + Погашено + " из "+ Элементы.Список.ВыделенныеСтроки.Количество() + " ВСД.");
		Элементы.Список.Обновить();
	Иначе
		Предупреждение("Не найдено подходящих ВСД для гашения!");
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция ПолучитьКлючЗаписиВСД(UUID_ВСД)
	
	Возврат РегистрыСведений.МЙ_ВетеринарныеДокументы.СоздатьКлючЗаписи(Новый Структура("UUID", UUID_ВСД));
	
КонецФункции 

&НаСервере
Функция ПолучитьUUIDПоКлючу(Знач КлючЗаписи)
	
	Возврат КлючЗаписи.UUID;
	
КонецФункции

&НаСервере
Функция ПолучитьДанныеПоСтрокеСписка(Знач КлючЗаписи)
	
	СтрукутраВозврата = Новый Структура("Организация, consigneeGuid");
	Запись = РегистрыСведений.МЙ_ВетеринарныеДокументы.СоздатьМенеджерЗаписи();
	Запись.UUID = КлючЗаписи;
	Запись.Прочитать();
	
	ЗаполнитьЗначенияСвойств(СтрукутраВозврата, Запись);
	
	Возврат СтрукутраВозврата;
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьПоGUID(Команда)
	
	Результат = ОткрытьФормуМодально("РегистрСведений.МЙ_ВетеринарныеДокументы.Форма.ФормаЗагрузкиВСДПоGUID");
	
	Если ЗначениеЗаполнено(Результат) Тогда
		Элементы.Список.Обновить();
		
		КлючЗаписи = ПолучитьКлючЗаписиВСД(Результат);
		
		ОткрытьФорму("РегистрСведений.МЙ_ВетеринарныеДокументы.Форма.ФормаЗаписи", Новый Структура("Ключ", КлючЗаписи));
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ДокументПривязки" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.ДокументПривязки) Тогда
		СтандартнаяОбработка = Ложь;
		
		Если ТипЗнч(Элемент.ТекущиеДанные.ДокументПривязки) = Тип("ДокументСсылка.ПриходныйОрдерСклад") Тогда
			ОткрытьФорму("Документ.ПриходныйОрдерСклад.ФормаОбъекта", Новый Структура("Ключ", Элемент.ТекущиеДанные.ДокументПривязки));
		ИначеЕсли ТипЗнч(Элемент.ТекущиеДанные.ДокументПривязки) = Тип("ДокументСсылка.РасходныйОрдерСклад") Тогда
			ОткрытьФорму("Документ.РасходныйОрдерСклад.ФормаОбъекта", Новый Структура("Ключ", Элемент.ТекущиеДанные.ДокументПривязки));
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ОбщегоНазначения.ЭтоКопияБазы() Тогда
		Элементы.Список.ИзменятьСоставСтрок = Истина;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияФильтрПриИзменении(Элемент)
	ИзменилсяФильтр("Организация", Организация);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьВСДНаСервере(ПараметрыЗагрузки)
	//ОбменССистемойВетис.ВыполнитьЗагрузкуИСопоставлениеВСД();
	
	Результат = ОбменССистемойВетис.ЗагрузитьДокументыФоновымЗаданием(ПараметрыЗагрузки.НастройкаАпи, ПараметрыЗагрузки.ДатаНачала, ПараметрыЗагрузки.ДатаОкончания);
	
	Если ТипЗнч(Результат) = Тип("ФоновоеЗадание") Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Запущена процедура загрузки документов, время начала:" + Строка(Результат.Начало);
		Сообщение.Сообщить();
	КонецЕсли;	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьВСД(Команда)
	Оп = Новый ОписаниеОповещения("ПослеЗакрытияФормыПарамтеровЗагрузкиВСД", ЭтаФорма);		
	ОткрытьФорму("РегистрСведений.МЙ_ВетеринарныеДокументы.Форма.ФормаЗагрузкиВСД",,,,,,Оп);	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияФормыПарамтеровЗагрузкиВСД(ПараметрыЗагрузки, ВходнойПараметр) Экспорт
	Если ЗначениеЗаполнено(ПараметрыЗагрузки) = Истина Тогда
		ЗагрузитьВСДНаСервере(ПараметрыЗагрузки);
	КонецЕсли;	
КонецПроцедуры	

&НаСервере
Процедура ОбновитьДанныеВСДНаСервере(СписокВСД)
	
	ТЗ_ВСД = Новый ТаблицаЗначений;
	ТЗ_ВСД.Колонки.Добавить("Организация");
	ТЗ_ВСД.Колонки.Добавить("GUID");
	ТЗ_ВСД.Колонки.Добавить("consigneeGuid");
	
	Для Каждого ЗначСписка ИЗ СписокВСД Цикл
		НСтр = ТЗ_ВСД.Добавить();
		НСтр.GUID = ЗначСписка.Значение;
		
		СтруктураДанных = ПолучитьДанныеПоСтрокеСписка(ЗначСписка.Значение);
		
		НСтр.Организация = СтруктураДанных.Организация;
		НСтр.consigneeGuid = СтруктураДанных.consigneeGuid;		
	КонецЦикла;  	
	
	
	ОбменССистемойВетис.ОбновитьВСД(ТЗ_ВСД);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанныеВСД(Команда)
	СписокВСД = Новый СписокЗначений;
	
	Для Каждого Строка ИЗ Элементы.Список.ВыделенныеСтроки Цикл
		СписокВСД.Добавить(ПолучитьUUIDПоКлючу(Строка));
	КонецЦикла; 
	
	ОбновитьДанныеВСДНаСервере(СписокВСД);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьВСДСписком(Команда)
	ОткрытьФорму("Обработка.МЙ_ЗагрузкаВСДСписком.Форма.Форма");
КонецПроцедуры


&НаКлиенте
Процедура АннулироватьВСД(Команда)
	
	Если Элементы.Список.ВыделенныеСтроки.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;		
	
	Если Вопрос("Аннулировать выделенные ВСД?", РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда		
		Возврат;
	КонецЕсли;
	
	СписокВСД = Новый Массив;
	
	Для Каждого Строка ИЗ Элементы.Список.ВыделенныеСтроки Цикл
		СписокВСД.Добавить(ПолучитьUUIDПоКлючу(Строка));
	КонецЦикла;  
	
	
	ОбменССистемойВетисКлиентСервер.АннулироватьВСД(СписокВСД);
	
	//Погашено = 0;
	//
	//Для Каждого ПараметрыПривязки ИЗ МассивПривязок Цикл
	//	Если ОбменССистемойВетисКлиентСервер.ПогаситьВСД(ПараметрыПривязки) Тогда
	//		Погашено = Погашено + 1;			
	//	КонецЕсли;
	//КонецЦикла;  	
	
КонецПроцедуры



