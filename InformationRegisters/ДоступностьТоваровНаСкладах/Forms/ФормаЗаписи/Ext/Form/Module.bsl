//+++АК ERMK 2018.12.05 00020560
&НаКлиенте
Перем мСтруктураКэшДанных;
//---АК ERMK
#Область ОбработчикиСобытийФормы

//+++АК ERMK 2018.12.04 ИП-00020560
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	// Определяем есть ли связанная номенклатура. Если есть спросим надо ли ее переносить
	СвязанныеТовары.Очистить();
	СвязанныеТоварыМассивСтруктур = НайтиСвязанныеТоварыНаСервере(Запись.СтруктурнаяЕдиница, Запись.Номенклатура, Запись.Склад, ТипыСвязаннойНоменклатуры());
	Если СвязанныеТоварыМассивСтруктур.Количество() > 0 Тогда
		
		ТекстВопроса = ПолучитьТекстВопросаПереносаНоменклатуры(СвязанныеТоварыМассивСтруктур);
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		
		// В случае утвердительного ответа сохраним список в таблице формы СвязанныеТовары
		ПеренестиСвязанныеТовары = Ответ = КодВозвратаДиалога.Да;
		Если ПеренестиСвязанныеТовары Тогда
			Для Каждого Стр Из СвязанныеТоварыМассивСтруктур Цикл
				НовСтр = СвязанныеТовары.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, Стр);
			КонецЦикла;
		КонецЕсли;
		
	Иначе
		ПеренестиСвязанныеТовары = Ложь;
	КонецЕсли;
	
КонецПроцедуры
//---АК ERMK

//+++АК ERMK 2018.12.04 ИП-00020560
&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// Переносим связанные товары на тот же склад, что и записываемый товар
	Если ПеренестиСвязанныеТовары  И НЕ Отказ Тогда
		
		Для Каждого Стр Из СвязанныеТовары Цикл
			
			НоваяЗапись = РегистрыСведений.ДоступностьТоваровНаСкладах.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, ТекущийОбъект);
			НоваяЗапись.Номенклатура = Стр.Номенклатура;
			Попытка
				НоваяЗапись.Записать();
			Исключение
				ТекстОшибки = ОписаниеОшибки();
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
				ТекстСообщения = НСтр("ru = 'Не удалось перенести номенклатуру %Номенклатура%'");
				ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Номенклатура%", Стр.НоменклатураПредставление);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				Отказ = Истина;
				Прервать;
			КонецПопытки;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры
//---АК ERMK

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//+++АК ERMK 2018.12.04 ИП-00020560
// Формирует список из:
// всех аналогов номенклатуры из справочника АналогиНоменклатуры
// всех комплектующих, из которых состоит Номенклатура
// всех комплеков, в которых Номенклатура товар комплекта
// Возвращает массив структур (Номенклатура, НоменклатураПредставление, НоменклатураТип, НоменклатураСклад)
&НаСервереБезКонтекста
Функция НайтиСвязанныеТоварыНаСервере(СтруктурнаяЕдиница, Номенклатура, Склад, ТипыСвязаннойНоменклатуры) 
	
	МассивСтруктур = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	#Область ТекстЗапроса
	"ВЫБРАТЬ
	|	АналогиНоменклатуры.Ссылка КАК АналогНоменклатуры
	|ПОМЕСТИТЬ ВТ_ГруппыАналогов
	|ИЗ
	|	Справочник.АналогиНоменклатуры КАК АналогиНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АналогиНоменклатуры.Товары КАК АналогиНоменклатурыТовары
	|		ПО АналогиНоменклатуры.Ссылка = АналогиНоменклатурыТовары.Ссылка
	|ГДЕ
	|	АналогиНоменклатуры.ПолностьюЗаменяемыйТовар
	|	И АналогиНоменклатуры.Товары.Номенклатура = &Номенклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	АналогиНоменклатуры.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналогиНоменклатурыТовары.Номенклатура,
	|	&НоменклатураТипАналог КАК НоменклатураТип
	|ПОМЕСТИТЬ ВТ_Аналоги
	|ИЗ
	|	ВТ_ГруппыАналогов КАК ВТ_ГруппыАналогов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.АналогиНоменклатуры.Товары КАК АналогиНоменклатурыТовары
	|		ПО ВТ_ГруппыАналогов.АналогНоменклатуры = АналогиНоменклатурыТовары.Ссылка
	|			И (АналогиНоменклатурыТовары.Номенклатура <> &Номенклатура)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставКомплектаСрезПоследних.Комплект
	|ПОМЕСТИТЬ ВТ_КомплектыНоменклатуры
	|ИЗ
	|	РегистрСведений.СоставКомплекта.СрезПоследних(, ТоварКомплекта = &Номенклатура) КАК СоставКомплектаСрезПоследних
	|ГДЕ
	|	СоставКомплектаСрезПоследних.Комплект.ЭтоКомплект
	|	И НЕ СоставКомплектаСрезПоследних.Комплект.ПроизводитсяВМагазине
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Набор.Номенклатура,
	|	Набор.НоменклатураТип
	|ПОМЕСТИТЬ ВТ_КомплектыИКомплектующие
	|ИЗ
	|	(ВЫБРАТЬ
	|		СоставКомплектаСрезПоследних.ТоварКомплекта КАК Номенклатура,
	|		&НоменклатураТипКомплектующее КАК НоменклатураТип
	|	ИЗ
	|		РегистрСведений.СоставКомплекта.СрезПоследних(, Комплект = &Номенклатура) КАК СоставКомплектаСрезПоследних
	|	ГДЕ
	|		СоставКомплектаСрезПоследних.Комплект.ЭтоКомплект
	|		И НЕ СоставКомплектаСрезПоследних.Комплект.ПроизводитсяВМагазине
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СоставКомплектаСрезПоследних.ТоварКомплекта,
	|		&НоменклатураТипКомплектующее
	|	ИЗ
	|		РегистрСведений.СоставКомплекта.СрезПоследних(
	|				,
	|				Комплект В
	|					(ВЫБРАТЬ
	|						ВТ_КомплектыНоменклатуры.Комплект
	|					ИЗ
	|						ВТ_КомплектыНоменклатуры КАК ВТ_КомплектыНоменклатуры)) КАК СоставКомплектаСрезПоследних
	|	ГДЕ
	|		СоставКомплектаСрезПоследних.ТоварКомплекта <> &Номенклатура
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ВТ_КомплектыНоменклатуры.Комплект,
	|		&НоменклатураТипКомплект
	|	ИЗ
	|		ВТ_КомплектыНоменклатуры КАК ВТ_КомплектыНоменклатуры) КАК Набор
	|
	|СГРУППИРОВАТЬ ПО
	|	Набор.Номенклатура,
	|	Набор.НоменклатураТип
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Набор.СтруктурнаяЕдиница,
	|	Набор.Номенклатура,
	|	Набор.НоменклатураТип
	|ПОМЕСТИТЬ ВТ_КПереносу
	|ИЗ
	|	(ВЫБРАТЬ
	|		&СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|		ВТ_Аналоги.Номенклатура КАК Номенклатура,
	|		ВТ_Аналоги.НоменклатураТип КАК НоменклатураТип
	|	ИЗ
	|		ВТ_Аналоги КАК ВТ_Аналоги
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		&СтруктурнаяЕдиница,
	|		ВТ_КомплектыИКомплектующие.Номенклатура,
	|		ВТ_КомплектыИКомплектующие.НоменклатураТип
	|	ИЗ
	|		ВТ_КомплектыИКомплектующие КАК ВТ_КомплектыИКомплектующие) КАК Набор
	|
	|СГРУППИРОВАТЬ ПО
	|	Набор.СтруктурнаяЕдиница,
	|	Набор.Номенклатура,
	|	Набор.НоменклатураТип
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Набор.СтруктурнаяЕдиница,
	|	Набор.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_КПереносу.Номенклатура,
	|	ВТ_КПереносу.Номенклатура.Представление,
	|	ВТ_КПереносу.НоменклатураТип,
	|	ДоступностьТоваровНаСкладах.Склад.Представление КАК НоменклатураСклад,
	|	ВЫБОР ВТ_КПереносу.НоменклатураТип
	|		КОГДА &НоменклатураТипАналог
	|			ТОГДА 0
	|		КОГДА &НоменклатураТипКомплект
	|			ТОГДА 1
	|		КОГДА &НоменклатураТипКомплектующее
	|			ТОГДА 2
	|		ИНАЧЕ 3
	|	КОНЕЦ КАК ПолеПорядка
	|ИЗ
	|	ВТ_КПереносу КАК ВТ_КПереносу
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоступностьТоваровНаСкладах КАК ДоступностьТоваровНаСкладах
	|		ПО ВТ_КПереносу.СтруктурнаяЕдиница = ДоступностьТоваровНаСкладах.СтруктурнаяЕдиница
	|			И ВТ_КПереносу.Номенклатура = ДоступностьТоваровНаСкладах.Номенклатура
	|ГДЕ
	|	ЕСТЬNULL(ДоступностьТоваровНаСкладах.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) <> &Склад
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПолеПорядка,
	|	НоменклатураСклад
	|АВТОУПОРЯДОЧИВАНИЕ";
	#КонецОбласти
	Запрос.Параметры.Вставить("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	Запрос.Параметры.Вставить("Номенклатура", Номенклатура);
	Запрос.Параметры.Вставить("Склад", Склад);
	Запрос.Параметры.Вставить("НоменклатураТипАналог", ТипыСвязаннойНоменклатуры.Аналог);
	Запрос.Параметры.Вставить("НоменклатураТипКомплект", ТипыСвязаннойНоменклатуры.Комплект);
	Запрос.Параметры.Вставить("НоменклатураТипКомплектующее", ТипыСвязаннойНоменклатуры.Комплектующее);
	
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ДанныеСтроки = Новый Структура("Номенклатура, НоменклатураПредставление, НоменклатураТип, НоменклатураСклад");
			ЗаполнитьЗначенияСвойств(ДанныеСтроки, Выборка);
			МассивСтруктур.Добавить(ДанныеСтроки);		
		КонецЦикла;
			
	КонецЕсли;
	
	Возврат МассивСтруктур;

КонецФункции
//---АК ERMK

//+++АК ERMK 2018.12.05 
// Формируем текст вопроса пользователю о переносе связанной номенклатуры
// Списоки номенклатуры деляться на категории (Аналог, Комплект и Комплектующее)
// с указанием склада, к которому сейчас привязан товар
&НаКлиенте
Функция ПолучитьТекстВопросаПереносаНоменклатуры(СвязанныеТоварыМассивСтруктур) 
	
	СтрокаАналоги = "Аналоги:" + Символы.ПС;
	СтрокаКомплектующие = "Комплектующие:" + Символы.ПС;
	СтрокаКомплекты = "Комплекты:" + Символы.ПС;
	ЕстьАналоги = Ложь;
	ЕстьКомплекты = Ложь;
	ЕстьКомплектующие = Ложь;
	Для Каждого Стр Из СвязанныеТоварыМассивСтруктур Цикл
		
		Если Стр.НоменклатураТип = ТипыСвязаннойНоменклатуры().Аналог Тогда
			ЕстьАналоги = Истина;
			СтрокаАналоги = СтрокаАналоги + Символы.Таб + Стр.НоменклатураПредставление + " (" + Стр.НоменклатураСклад +")" + Символы.ПС;
		ИначеЕсли Стр.НоменклатураТип = ТипыСвязаннойНоменклатуры().Комплект Тогда
			ЕстьКомплекты = Истина;
			СтрокаКомплекты = СтрокаКомплекты + Символы.Таб + Стр.НоменклатураПредставление + " (" + Стр.НоменклатураСклад +")" + Символы.ПС;
		ИначеЕсли Стр.НоменклатураТип = ТипыСвязаннойНоменклатуры().Комплектующее Тогда
			ЕстьКомплектующие = Истина;
			СтрокаКомплектующие = СтрокаКомплектующие + Символы.Таб + Стр.НоменклатураПредставление + " (" + Стр.НоменклатураСклад +")" + Символы.ПС;
		КонецЕсли;
		
	КонецЦикла;
	
	СписокТоваровСтрока = ?(ЕстьАналоги, СтрокаАналоги + Символы.ПС, "") + ?(ЕстьКомплекты, СтрокаКомплекты+ Символы.ПС, "") + ?(ЕстьКомплектующие, СтрокаКомплектующие+ Символы.ПС, "");
	
	Если НЕ ЗначениеЗаполнено(СписокТоваровСтрока) Тогда
		ТекстВопроса = "";
	Иначе
		ТекстВопроса = "По позиции есть следующие
		|%СписокТоваров%
		|Перенести их на склад %Склад%?";
		ТекстВопроса = СтрЗаменить(ТекстВопроса, "%СписокТоваров%", СписокТоваровСтрока);
		ТекстВопроса = СтрЗаменить(ТекстВопроса, "%Склад%", Строка(Запись.Склад));
	КонецЕсли;

	Возврат ТекстВопроса;
	
КонецФункции
//---АК ERMK

//+++АК ERMK 2018.12.05 ИП-00020560
#Область ПрограммныеПеречисления

&НаКлиенте
Функция ТипыСвязаннойНоменклатуры()
	
	Если НЕ мСтруктураКэшДанных.Свойство("ТипыСвязаннойНоменклатуры") Тогда	
		
		Структура = Новый Структура;
		Структура.Вставить("Аналог"			, "Аналог");
		Структура.Вставить("Комплект"	  	, "Комплект");
		Структура.Вставить("Комплектующее"	, "Комплектующее");
		
		мСтруктураКэшДанных.Вставить("ТипыСвязаннойНоменклатуры", Новый ФиксированнаяСтруктура(Структура));
		
	КонецЕсли; 
	
	Возврат мСтруктураКэшДанных.ТипыСвязаннойНоменклатуры;
		
КонецФункции
 
#КонецОбласти 
//---АК ERMK

#КонецОбласти

//+++АК ERMK 2018.12.05 ИП-00020560
мСтруктураКэшДанных = Новый Структура;
//---АК ERMK
