
Процедура ПриЗаписи(Отказ, Замещение)
	Для Каждого Запись из ЭтотОбъект Цикл
		Если Запись.Просмотрено Тогда
			Возврат
		КонецЕсли;
		Если Запись.ОтправленоНаПочту Тогда
			Возврат
		КонецЕсли;
		Если ЗначениеЗаполнено(Запись.Email)Тогда
			ПараметрыФЗ = Новый Массив;
			ПараметрыФЗ.Добавить(Запись.СсылкаДляСкачивания);
			ПараметрыФЗ.Добавить(Неопределено);
			ПараметрыФЗ.Добавить(Неопределено);
			ПараметрыФЗ.Добавить("Получено видео по запросу: № кассы: "+Запись.НомерКассы+"; № чека: "+Запись.НомерЧека+"; Комментарий: "+Запись.Комментарий);
			ДанныеЗаписи = Новый Структура("НомерЧека,НомерКассы,Период,Email,Комментарий");
			ЗаполнитьЗначенияСвойств(ДанныеЗаписи,Запись);
			ПараметрыФЗ.Добавить(ДанныеЗаписи);
			ФоновыеЗадания.Выполнить("РегламентныеЗаданияСервер.ОтправитьВидеоНаПочту",ПараметрыФЗ,Новый УникальныйИдентификатор, "Отправка видео на почту");
			Возврат;
		КонецЕсли;
		НоваяЗадача = Задачи.ЗадачаИсполнителя.СоздатьЗадачу();
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбращенияПокупателей.Ответственный,
		|	ОбращенияПокупателей.ПолучателиУведомления,
		|	ОбращенияПокупателей.id_OK
		|ИЗ
		|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
		|ГДЕ
		|	ОбращенияПокупателей.Номер_Бланка = &НомерЧека
		|	И ОбращенияПокупателей.НомерКассы = &НомерКассы
		|	И ОбращенияПокупателей.ЗапросВидео
		|	И НЕ ОбращенияПокупателей.Закрыт
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбращенияПокупателей.Ответственный,
		|	ОбращенияПокупателей.ПолучателиУведомления,
		|	ОбращенияПокупателей.id_OK";
		Запрос.УстановитьПараметр("НомерЧека",Запись.НомерЧека);
		Запрос.УстановитьПараметр("НомерКассы",Запись.НомерКассы);
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			Продолжить
		КонецЕсли;
		Жалобы = РезультатЗапроса.Выбрать();
		Пока Жалобы.Следующий()Цикл
			НоваяЗадача.Наименование = "Получено видео по запросу: № кассы: "+Запись.НомерКассы+"; № чека: "+Запись.НомерЧека+"; Id обращения: "+Жалобы.Id_Ok;
			НоваяЗадача.ВидЗадачи = Справочники.ВидыЗадачПользователей.ПолученоВидеоПоЗапросу;
			НоваяЗадача.Исполнитель = Жалобы.Ответственный;
			НоваяЗадача.Дата= ТекущаяДата();
			НоваяЗадача.ДатаОбъектаЗадачи = Запись.Период;
			НоваяЗадача.Оповещение = Истина;
			НоваяЗадача.СрокОповещения = ТекущаяДата()+10;
			НоваяЗадача.СрокИсполнения = КонецДня(ТекущаяДата())+1;
			НоваяЗадача.Записать();
			
			//Если НЕ Запись.ОтправленоНаПочту Тогда
			
				ПараметрыФЗ = Новый Массив;
				ПараметрыФЗ.Добавить(Запись.СсылкаДляСкачивания);
				ПараметрыФЗ.Добавить(Жалобы.Ответственный);
				Если ЗначениеЗаполнено(Жалобы.ПолучателиУведомления) Тогда
					СписокПолучателей = Жалобы.ПолучателиУведомления.Получатели.ВыгрузитьКолонку("ЭлектроннаяПочта");
				Иначе
					СписокПолучателей = Новый Массив;
				КонецЕсли;
				ПараметрыФЗ.Добавить(СписокПолучателей);
				ПараметрыФЗ.Добавить(НоваяЗадача.Наименование);
				ДанныеЗаписи = Новый Структура("НомерЧека,НомерКассы,Период,Email,Комментарий");
				ЗаполнитьЗначенияСвойств(ДанныеЗаписи,Запись);
				ПараметрыФЗ.Добавить(ДанныеЗаписи);
				ФоновыеЗадания.Выполнить("РегламентныеЗаданияСервер.ОтправитьВидеоНаПочту",ПараметрыФЗ,Новый УникальныйИдентификатор, "Отправка видео на почту");
			//КонецЕсли;
			
		КонецЦикла;
		//Запись.ОтправленоНаПочту=Истина;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры
