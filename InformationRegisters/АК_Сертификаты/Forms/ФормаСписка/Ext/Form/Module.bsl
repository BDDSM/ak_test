
&НаКлиенте
Процедура ОбновитьСозданныеСертификаты(Команда)
	
	ОбновитьСертификаты();
	ЭтаФорма.ОбновитьОтображениеДанных();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСертификаты()

	 	
	//СтрСоединенияДанныеТовародвижение = ОбменСAccess.ПолучитьСтрокуСоединения("loyalty");
	//пСоед = Новый ПараметрыСоединенияВнешнегоИсточникаДанных;
	//пСоед.СтрокаСоединения= СтрСоединенияДанныеТовародвижение;
	//ВнешниеИсточникиДанных.Loyality.УстановитьОбщиеПараметрыСоединения(пСоед);
	//ВнешниеИсточникиДанных.Loyality.УстановитьСоединение();
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ТипыКупонов.ДатаНачалаДействия,
	//	|	ТипыКупонов.ДатаОкончанияДействия,
	//	|	ТипыКупонов.СуммаСкидки КАК СуммаСертификата,
	//	|	МИНИМУМ(ВыданныеКупоны.number_cert) КАК МинимальныйНомерСертификата,
	//	|	МАКСИМУМ(ВыданныеКупоны.number_cert) КАК МаксимальныйНомерСертификата,
	//	|	СУММА(ВыданныеКупоны.КличествоКупонов) КАК Количество,
	//	|	ТипыКупонов.Наименование,
	//	|	ТипыКупонов.Инентификатор
	//	|ИЗ
	//	|	ВнешнийИсточникДанных.Loyality.Таблица.ВыданныеКупоны КАК ВыданныеКупоны
	//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВнешнийИсточникДанных.Loyality.Таблица.ТипыКупонов КАК ТипыКупонов
	//	|		ПО ВыданныеКупоны.ТипКупона = ТипыКупонов.Инентификатор
	//	|ГДЕ
	//	|	ЕСТЬNULL(ВыданныеКупоны.number_cert, 0) <> 0
	//	|	И ТипыКупонов.Kind = 1
	//	|	И ВыданныеКупоны.КличествоКупонов > 0
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ТипыКупонов.СуммаСкидки,
	//	|	ТипыКупонов.ДатаНачалаДействия,
	//	|	ТипыКупонов.ДатаОкончанияДействия,
	//	|	ТипыКупонов.Наименование,
	//	|	ТипыКупонов.Инентификатор";

	//Результат = Запрос.Выполнить();

	//ВыборкаДетальныеЗаписи = Результат.Выбрать();
	//
	//нзСертификаты = РегистрыСведений.АК_Сертификаты.СоздатьНаборЗаписей();
	//нзСертификаты.Отбор.ВидОперации.Установить(Перечисления.АК_ВидыОперацийСертификат.Создание);//Значение= Перечисления.АК_ВидыОперацийСертификат.Создание;
	//нзСертификаты.Прочитать();
	//нзСертификаты.Очистить();
	//ТекДата = ТекущаяДата();
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	
	//	АК_Сертификат = Справочники.АК_Сертификат.НайтиПоРеквизиту("ID",ВыборкаДетальныеЗаписи.Инентификатор);
	//	Если АК_Сертификат.Пустая() Тогда
	//		
	//		НовСерт = Справочники.АК_Сертификат.СоздатьЭлемент();
	//		НовСерт.Наименование = ВыборкаДетальныеЗаписи.Наименование;
	//		НовСерт.ДатаНачала = ВыборкаДетальныеЗаписи.ДатаНачалаДействия;
	//		НовСерт.ДатаОкончания = ВыборкаДетальныеЗаписи.ДатаОкончанияДействия;
	//		НовСерт.Сумма = ВыборкаДетальныеЗаписи.СуммаСертификата;
	//		НовСерт.ДатаОкончания = ВыборкаДетальныеЗаписи.ДатаОкончанияДействия;	
	//		НовСерт.ID = ВыборкаДетальныеЗаписи.Инентификатор;
	//		НовСерт.Записать();
	//		АК_Сертификат = НовСерт.Ссылка;
	//		
	//	КонецЕсли;
	//	
	//	НовЗапись = нзСертификаты.Добавить();
	//	НовЗапись.ДатаЗаписи = ТекДата;
	//	НовЗапись.ВидОперации = Перечисления.АК_ВидыОперацийСертификат.Создание;
	//	НовЗапись.Сертификат = АК_Сертификат;
	//	НовЗапись.Количество = ВыборкаДетальныеЗаписи.Количество;
	//	НовЗапись.МинНомер = ВыборкаДетальныеЗаписи.МинимальныйНомерСертификата;
	//	НовЗапись.МаксНомер = ВыборкаДетальныеЗаписи.МаксимальныйНомерСертификата;
	//			
	//КонецЦикла;
	//
	//   нзСертификаты.Записать();
	//ВнешниеИсточникиДанных.Loyality.РазорватьСоединение();	

	//////////////////////////////	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	ТекстЗапроса = "SELECT  CONVERT(varchar(8),cc.time_add,112) as date_add
	|,tt.date_st as ДатаНачалаДействия
	|, tt.date_fi as ДатаОкончанияДействия
	|, tt.Sum_coupon as СуммаСертификата
	|, tt.name_coupon as Наименование
	|, tt.id_type_coupon as Инентификатор
	|, MIN(CC.number_cert) AS МинимальныйНомерСертификата
	|, max(cc.number_cert) as МаксимальныйНомерСертификата
	|, sum(cc.kolvo) as Количество
	|, tt.BirthDayCoupon as BirthDayCoupon
	|  FROM [Loyalty].[dbo].[Coupon_move] cc
	|  inner join Loyalty.dbo.Types_coupon tt
	|  on cc.id_type_coupon = tt.id_type_coupon
	|  WHERE tt.kind = 1 AND cc.kolvo >0
	|  GROUP BY
	|  CONVERT(varchar(8),cc.time_add,112)
	|  ,tt.date_fi
	|  ,tt.date_st
	|  ,tt.Sum_coupon
	|  ,tt.id_type_coupon
	|  ,tt.name_coupon
	|  ,tt.BirthDayCoupon";
	//+++АК BARA 17752.02 2017.12.21
	//	 Добавил в запрос поле |, tt.BirthDayCoupon as BirthDayCoupon
	//и в конце запроса группировка |  ,tt.BirthDayCoupon
	//---АК bara 17752.02 2017.12.21
	//+++АК BARA  2017.12.28  Решили по дате добавления, вместо даты создания
	//	 Добавил в запрос поле CONVERT(varchar(8),cc.time_add,112)  as date_add
	//и в конце запроса группировка |  CONVERT(varchar(8),cc.time_add,112)
	//---АК BARA  2017.12.28
	
	
	rs = ADOСоединение.Execute(ТекстЗапроса);
	
	////////////////////////////////////////

	нзСертификаты = РегистрыСведений.АК_Сертификаты.СоздатьНаборЗаписей();
	нзСертификаты.Отбор.ВидОперации.Установить(Перечисления.АК_ВидыОперацийСертификат.Создание);//Значение= Перечисления.АК_ВидыОперацийСертификат.Создание;
	нзСертификаты.Прочитать();
	нзСертификаты.Очистить();
	ТекДата = ТекущаяДата();	
	
	Попытка
		rs.MoveFirst();
		
		Пока НЕ rs.EOF() Цикл
			
			АК_Сертификат = Справочники.АК_Сертификат.НайтиПоРеквизиту("ID",Сред(rs.Fields("Инентификатор").Value,2,36));
			Если АК_Сертификат.Пустая() Тогда
				
				НовСерт = Справочники.АК_Сертификат.СоздатьЭлемент();
				НовСерт.Наименование = СокрЛП(rs.Fields("Наименование").Value);
				НовСерт.ДатаНачала = rs.Fields("ДатаНачалаДействия").Value;
				НовСерт.ДатаОкончания = rs.Fields("ДатаОкончанияДействия").Value;
				НовСерт.Сумма = rs.Fields("СуммаСертификата").Value;
				
				НовСерт.ID = Сред(rs.Fields("Инентификатор").Value,2,36);
				НовСерт.Записать();
				АК_Сертификат = НовСерт.Ссылка;
				
			КонецЕсли;
			
			НовЗапись = нзСертификаты.Добавить();
			//+++АК BARA  2017.12.28  Решили по дате добавления, вместо даты создания
			//НовЗапись.ДатаЗаписи = rs.Fields("ДатаНачалаДействия").Value;//ТекДата;  //AK BARA
			НовЗапись.ДатаЗаписи = Дата(rs.Fields("date_add").Value);//ТекДата; 
			//---АК BARA  2017.12.28 
			
			НовЗапись.ВидОперации = Перечисления.АК_ВидыОперацийСертификат.Создание;
			//+++АК bara 17752.02 2017.12.21
			НовЗапись.BirthDayCoupon = ?(rs.Fields("BirthDayCoupon").Value = 1, Истина,Ложь);
			//+++АК bara 17752.02 2017.12.21
			НовЗапись.Сертификат = АК_Сертификат;
			НовЗапись.Количество = rs.Fields("Количество").Value;
			НовЗапись.МинНомер = rs.Fields("МинимальныйНомерСертификата").Value;
			НовЗапись.МаксНомер = rs.Fields("МаксимальныйНомерСертификата").Value;

			rs.MoveNext();
		КонецЦикла;
		
	Исключение
		Сообщить("Нет записей по кассе за период");
		ADOСоединение.Close();
		Возврат
	КонецПопытки;
	ADOСоединение.Close();
	нзСертификаты.Записать();
	
	//////////////////////////////////
	//+++АК bara 17752.02 2017.12.21
	
	нзСертификаты = РегистрыСведений.АК_Сертификаты.СоздатьНаборЗаписей();
	нзСертификаты.Отбор.BirthDayCoupon.Установить(Истина);
	нзСертификаты.Отбор.ВидОперации.Установить(Перечисления.АК_ВидыОперацийСертификат.Выдача);
	нзСертификаты.Очистить();
	нзСертификаты.Записать(Истина);

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АК_Сертификаты.Сертификат КАК Сертификат,
	|	АК_Сертификаты.ДатаЗаписи КАК ДатаЗаписи,
	|	ВЫБОР
	|		КОГДА АК_Сертификаты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.АК_ВидыОперацийСертификат.Выдача)
	|			ТОГДА АК_Сертификаты.Количество * -1
	|		КОГДА АК_Сертификаты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.АК_ВидыОперацийСертификат.Создание)
	|			ТОГДА АК_Сертификаты.Количество
	|		КОГДА АК_Сертификаты.ВидОперации = ЗНАЧЕНИЕ(Перечисление.АК_ВидыОперацийСертификат.Возврат)
	|			ТОГДА АК_Сертификаты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	РегистрСведений.АК_Сертификаты КАК АК_Сертификаты
	|ГДЕ
	|	АК_Сертификаты.BirthDayCoupon = Истина
	|ИТОГИ
	|	МИНИМУМ(ДатаЗаписи),
	|	СУММА(Количество)
	|ПО
	|	Сертификат";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаСертификат = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	нзСертификаты = РегистрыСведений.АК_Сертификаты.СоздатьНаборЗаписей();
	нзСертификаты.Отбор.BirthDayCoupon.Установить(Истина);
	нзСертификаты.Прочитать();
	
	СтруктурнаяЕдиница = Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Все");
	Пока ВыборкаСертификат.Следующий() Цикл
		Если ВыборкаСертификат.Количество > 0 Тогда 
			//+++АК BARA  2017.12.28  Решили по дате добавления, вместо даты создания
			ВыборкаДетали = ВыборкаСертификат.Выбрать();
			Пока ВыборкаДетали.Следующий() Цикл 
				НовЗапись = нзСертификаты.Добавить();
				
				НовЗапись.ДатаЗаписи = ВыборкаДетали.ДатаЗаписи;
				НовЗапись.ВидОперации = Перечисления.АК_ВидыОперацийСертификат.Выдача;
				НовЗапись.BirthDayCoupon = Истина;
				НовЗапись.Сертификат = ВыборкаДетали.Сертификат;
				НовЗапись.Количество = ВыборкаДетали.Количество;
				//НовЗапись.СтруктурнаяЕдиница = СтруктурнаяЕдиница;
			КонецЦикла;
			//---АК BARA  2017.12.28  
		КонецЕсли;
	КонецЦикла;
	нзСертификаты.Записать(Истина);	
	//---АК bara 17752.02 2017.12.21
	
КонецПроцедуры
