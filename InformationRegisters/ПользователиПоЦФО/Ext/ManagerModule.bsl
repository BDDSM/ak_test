
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция возввращает "Структурную единицу(ЦФО)" к которой привязан Помощник Управляющего  
// через привязку Помощник - РольПомощника - РольУправляющего - Управляющий - Пользователь ЦФО - ЦФО
//
// Параметры:
//  Сотрудник  - <Тип.СправочникСсылка.ФизическиеЛица> - Продавец или Помощник управляющего
//  ПолучитьПомощника  - <Тип.Будево> - Если признак установлен, то по переданному сотруднику(Продавцу) будет выбираться "Помощник ТУ"
//                                      Если не установлен, то переданный Сотрудник является Помощником управляющего
//
// Возвращаемое значение:
//   <Тип.СправочникСсылка.СтруктурныеЕдиницы>   - Структурная единица (ЦФО)
//
Функция ПолучитьЦФОПомощникаУправляющего(Сотрудник, ПолучитьПомощника = Истина) Экспорт

	Если НЕ ЗначениеЗаполнено(Сотрудник) Тогда
		Возврат Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ПолучитьПомощника
	|			ТОГДА ФизическиеЛица.ПомощникТУ
	|		ИНАЧЕ ФизическиеЛица.Ссылка
	|	КОНЕЦ КАК ПомощникУправляющего
	|ПОМЕСТИТЬ ВТ_Помощники
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПользователиПоЦФОСрезПоследних.Сотрудник,
	|	МАКСИМУМ(ПользователиПоЦФОСрезПоследних.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_ПользователиПоЦФОДаты
	|ИЗ
	|	РегистрСведений.ПользователиПоЦФО.СрезПоследних(&ДатаСреза, ) КАК ПользователиПоЦФОСрезПоследних
	|ГДЕ
	|	ПользователиПоЦФОСрезПоследних.РуководительОтдела
	|
	|СГРУППИРОВАТЬ ПО
	|	ПользователиПоЦФОСрезПоследних.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПользователиПоЦФО.ЦФО,
	|	ПользователиПоЦФО.Сотрудник
	|ПОМЕСТИТЬ ВТ_ПользователиПоЦФО
	|ИЗ
	|	ВТ_ПользователиПоЦФОДаты КАК ВТ_ПользователиПоЦФОДаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиПоЦФО КАК ПользователиПоЦФО
	|		ПО ВТ_ПользователиПоЦФОДаты.Сотрудник = ПользователиПоЦФО.Сотрудник
	|			И ВТ_ПользователиПоЦФОДаты.Период = ПользователиПоЦФО.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ЕСТЬNULL(ВТ_ПользователиПоЦФО.ЦФО, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПУстаяСсылка)) КАК ЦФО,
	|	РолиПользователейСоставРолиТУ.Сотрудник КАК Управляющий,
	|	ВТ_ПользователиПоЦФО.Сотрудник КАК УправляющийПользователь,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя.Родитель КАК РольУправляющего,
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя КАК РольПомощника,
	|	РолиПользователейСоставРоли.Сотрудник КАК ПомощникУправляющего
	|ИЗ
	//+++ AK suvv 2018.06.08 ИП-00018376.01
	//|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаСреза, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)) КАК СоответствиеОбъектРольСрезПоследних
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ДатаСреза, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
	|   ИЛИ ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы)) КАК СоответствиеОбъектРольСрезПоследних
	//--- AK suvv
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = РолиПользователейСоставРоли.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРолиТУ
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПользователиПоЦФО КАК ВТ_ПользователиПоЦФО
	|			ПО РолиПользователейСоставРолиТУ.Сотрудник = ВТ_ПользователиПоЦФО.Сотрудник.ФизЛицо
	|		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя.Родитель = РолиПользователейСоставРолиТУ.Ссылка
	|ГДЕ
	|	РолиПользователейСоставРоли.Сотрудник В
	|			(ВЫБРАТЬ
	|				ВТ_Помощники.ПомощникУправляющего
	|			ИЗ
	|				ВТ_Помощники КАК ВТ_Помощники)";
	
	Запрос.УстановитьПараметр("ДатаСреза", ТекущаяДата());
	Запрос.УстановитьПараметр("ПолучитьПомощника", ПолучитьПомощника);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Выборка.Следующий(); 
		
		Возврат Выборка.ЦФО;
		
	КонецЕсли;
	
	Возврат Справочники.СтруктурныеЕдиницы.ПустаяСсылка();                                    

КонецФункции // ПолучитьЦФОПомощникаУправляющего()

// Функция возввращает структуру подчинения текущего сотрудника //+++АК mika 2018.04.12 ИП-00018000  
// через привязку Помощник → РольПомощника → РольУправляющего(для группы развития + Родитель) → Управляющий → Пользователь ЦФО → ЦФО
//
// Параметры:
//  Сотрудник - <Тип.СправочникСсылка.ФизическиеЛица, Тип.СправочникСсылка.Пользователи> - Пользователь, Продавец, или Помощник управляющего
//  ПолучитьПомощника  - <Тип.Будево>  - Если признак установлен, то по переданному сотруднику(Продавцу)/пользователю будет выбираться "Помощник ТУ"
//                                       Если не установлен, то переданный Сотрудник является как минимум "Помощником управляющего"
//  ПолучитьЦФО  - <Тип.Будево>        - Если признак установлен, то функция вернет только ЦФО
//                                       Если признак не установлен, то функция вернет Структуру параметров
//  ПолучитьПомощников  - <Тип.Будево> - Если признак установлен, то функция в структуру параметров добавит список подчиненных Управляющему(если переданный на вход сотрудник Управляющий) помощников
//                                       Если не установлен, то анализ подчиненности помощников проводится не будет
//
// Возвращаемое значение:
//   <Структра параметров>   - Сотрудник, ФункциональнаяРоль, ТипРоли, ТипРолиКод, ЭтоПомощник, ЭтоУправляющий, УправляющийПользователь, ЦФО
//   <ЦФО>                   - Структурная единица
//   <Неопределено> - Не пользователь не отвечает ни одному условию при определении структуры (пользователь не является 
//                    ни помощником ни управляющим, или в регистре Пользователи по ЦФО неверно установлены привязки к пользователю с признаком Руководитель отдела) 
Функция ПолучитьСтрукрутуПодчиненияТекущегоСотрудника(Сотрудник, ПолучитьПомощника = Истина, ПолучитьЦФО = Ложь, ПолучитьПомощников = Ложь) Экспорт  

	Если НЕ ЗначениеЗаполнено(Сотрудник) Тогда
		Возврат Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	КонецЕсли;

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПользователиПоЦФОСрезПоследних.Сотрудник,
	|	МАКСИМУМ(ПользователиПоЦФОСрезПоследних.Период) КАК Период
	|ПОМЕСТИТЬ ВТ_ПользователиПоЦФОДаты
	|ИЗ
	|	РегистрСведений.ПользователиПоЦФО.СрезПоследних(&ДатаСреза, ) КАК ПользователиПоЦФОСрезПоследних
	|ГДЕ
	|	ПользователиПоЦФОСрезПоследних.РуководительОтдела
	|
	|СГРУППИРОВАТЬ ПО
	|	ПользователиПоЦФОСрезПоследних.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПользователиПоЦФО.Сотрудник,
	|	ПользователиПоЦФО.ЦФО
	|ПОМЕСТИТЬ ВТ_РуководителиПоЦФО
	|ИЗ
	|	ВТ_ПользователиПоЦФОДаты КАК ВТ_ПользователиПоЦФОДаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПользователиПоЦФО КАК ПользователиПоЦФО
	|		ПО ВТ_ПользователиПоЦФОДаты.Сотрудник = ПользователиПоЦФО.Сотрудник
	|			И ВТ_ПользователиПоЦФОДаты.Период = ПользователиПоЦФО.Период
	|			И (ПользователиПоЦФО.РуководительОтдела)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ПолучитьПомощника
	|			ТОГДА ФизическиеЛица.ПомощникТУ
	|		ИНАЧЕ ФизическиеЛица.Ссылка
	|	КОНЕЦ КАК Сотрудник
	|ПОМЕСТИТЬ ВТ_ТекущийСотрудник
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &Сотрудник
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &ПолучитьПомощника
	|			ТОГДА Пользователи.ФизЛицо.ПомощникТУ
	|		ИНАЧЕ Пользователи.ФизЛицо
	|	КОНЕЦ
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.Ссылка = &Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТекущийСотрудник.Сотрудник,
	|	РолиПользователейТипыРолей.Ссылка КАК ФункциональнаяРоль,
	|	РолиПользователейТипыРолей.ТипРоли,
	|	РолиПользователейТипыРолей.ТипРоли.Код КАК ТипРолиКод,
	|	ВЫБОР
	|		КОГДА РолиПользователейТипыРолей.ТипРоли.Код = ""PomoshnikTerrUpravlyushego""
	//+++ AK suvv 2018.06.08 ИП-00018376.01
	|				ИЛИ РолиПользователейТипыРолей.ТипРоли.Код = ""PomoshnikStorRozn""
	//--- AK suvv
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоПомощник,
	|	ВЫБОР
	|		КОГДА РолиПользователейТипыРолей.ТипРоли.Код = ""UpravlyayushchiiPoRoznice""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоУправляющий
	|ПОМЕСТИТЬ ВТ_ФункциональныеРоли
	|ИЗ
	|	ВТ_ТекущийСотрудник КАК ВТ_ТекущийСотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.ТипыРолей КАК РолиПользователейТипыРолей
	|			ПО РолиПользователейСоставРоли.Ссылка = РолиПользователейТипыРолей.Ссылка
	|				И (РолиПользователейТипыРолей.ТипРоли.Код = ""PomoshnikTerrUpravlyushego""
	//+++ AK suvv 2018.06.08 ИП-00018376.01
	|					ИЛИ РолиПользователейТипыРолей.ТипРоли.Код = ""PomoshnikStorRozn""
	//+++ AK suvv 2018.06.08 ИП-00018376.01
	|					ИЛИ РолиПользователейТипыРолей.ТипРоли.Код = ""UpravlyayushchiiPoRoznice"")
	|		ПО ВТ_ТекущийСотрудник.Сотрудник = РолиПользователейСоставРоли.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ФункциональныеРоли.Сотрудник,
	|	ВТ_ФункциональныеРоли.ФункциональнаяРоль,
	|	ВТ_ФункциональныеРоли.ТипРоли,
	|	ВТ_ФункциональныеРоли.ТипРолиКод,
	|	ВТ_ФункциональныеРоли.ЭтоПомощник,
	|	ВТ_ФункциональныеРоли.ЭтоУправляющий
	|ПОМЕСТИТЬ ВТ_ФункциональныеРолиИтог
	|ИЗ
	|	ВТ_ФункциональныеРоли КАК ВТ_ФункциональныеРоли
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ФункциональныеРоли.ЭтоУправляющий,
	|	ВТ_ФункциональныеРоли.Сотрудник,
	|	ВТ_ФункциональныеРоли.ФункциональнаяРоль,
	|	ВТ_ФункциональныеРоли.ТипРолиКод,
	|	ВТ_ФункциональныеРоли.ЭтоПомощник,
	|	ВТ_ФункциональныеРоли.ТипРоли
	|;
	|
	//+++АК mika 2018.07.24 ИП-00019184.01 Добавление возможности получения всех подчиненных сотрудников по управляющему
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таб_СтруктураПользователя.Сотрудник,
	|	Таб_СтруктураПользователя.ФункциональнаяРоль,
	|	Таб_СтруктураПользователя.ТипРоли,
	|	Таб_СтруктураПользователя.ТипРолиКод,
	|	Таб_СтруктураПользователя.ЭтоПомощник КАК ЭтоПомощник,
	|	Таб_СтруктураПользователя.ЭтоУправляющий КАК ЭтоУправляющий,
	|	Таб_СтруктураПользователя.УправляющийПользователь,
	|	Таб_СтруктураПользователя.ЦФО,
	|	РолиПользователейСоставРоли.Сотрудник КАК ПодчиненныйПомощник
	|ИЗ
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		Таб_Итоговая.Сотрудник КАК Сотрудник,
	|		Таб_Итоговая.ФункциональнаяРоль КАК ФункциональнаяРоль,
	|		Таб_Итоговая.ТипРоли КАК ТипРоли,
	|		Таб_Итоговая.ТипРолиКод КАК ТипРолиКод,
	|		Таб_Итоговая.ЭтоПомощник КАК ЭтоПомощник,
	|		Таб_Итоговая.ЭтоУправляющий КАК ЭтоУправляющий,
	|		Таб_Итоговая.УправляющийПользователь КАК УправляющийПользователь,
	|		ВТ_РуководителиПоЦФО.ЦФО КАК ЦФО
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ВТ_ФункциональныеРолиИтог.Сотрудник КАК Сотрудник,
	|			ВТ_ФункциональныеРолиИтог.ФункциональнаяРоль КАК ФункциональнаяРоль,
	|			ВТ_ФункциональныеРолиИтог.ТипРоли КАК ТипРоли,
	|			ВТ_ФункциональныеРолиИтог.ТипРолиКод КАК ТипРолиКод,
	|			ВТ_ФункциональныеРолиИтог.ЭтоПомощник КАК ЭтоПомощник,
	|			ВТ_ФункциональныеРолиИтог.ЭтоУправляющий КАК ЭтоУправляющий,
	|			ВЫБОР
	|				КОГДА НЕ ПользователиРодительРодитель.Ссылка ЕСТЬ NULL
	|					ТОГДА ПользователиРодительРодитель.Ссылка
	|				КОГДА НЕ ПользователиРодитель.Ссылка ЕСТЬ NULL
	|					ТОГДА ПользователиРодитель.Ссылка
	|				ИНАЧЕ Пользователи.Ссылка
	|			КОНЕЦ КАК УправляющийПользователь
	|		ИЗ
	|			ВТ_ФункциональныеРолиИтог КАК ВТ_ФункциональныеРолиИтог
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	|					ПО РолиПользователейСоставРоли.Сотрудник = Пользователи.ФизЛицо
	|				ПО ВТ_ФункциональныеРолиИтог.ФункциональнаяРоль = РолиПользователейСоставРоли.Ссылка
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРолиРодитель
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК ПользователиРодитель
	|					ПО РолиПользователейСоставРолиРодитель.Сотрудник = ПользователиРодитель.ФизЛицо
	|					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРолиРодительРодитель
	|						ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК ПользователиРодительРодитель
	|						ПО РолиПользователейСоставРолиРодительРодитель.Сотрудник = ПользователиРодительРодитель.ФизЛицо
	|					ПО РолиПользователейСоставРолиРодитель.Ссылка.Родитель = РолиПользователейСоставРолиРодительРодитель.Ссылка
	|				ПО ВТ_ФункциональныеРолиИтог.ФункциональнаяРоль.Родитель = РолиПользователейСоставРолиРодитель.Ссылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВТ_ФункциональныеРолиИтог.ТипРоли,
	|			ВТ_ФункциональныеРолиИтог.ТипРолиКод,
	|			ВТ_ФункциональныеРолиИтог.ЭтоПомощник,
	|			ВТ_ФункциональныеРолиИтог.ЭтоУправляющий,
	|			ВТ_ФункциональныеРолиИтог.Сотрудник,
	|			ВТ_ФункциональныеРолиИтог.ФункциональнаяРоль,
	|			ВЫБОР
	|				КОГДА НЕ ПользователиРодительРодитель.Ссылка ЕСТЬ NULL
	|					ТОГДА ПользователиРодительРодитель.Ссылка
	|				КОГДА НЕ ПользователиРодитель.Ссылка ЕСТЬ NULL
	|					ТОГДА ПользователиРодитель.Ссылка
	|				ИНАЧЕ Пользователи.Ссылка
	|			КОНЕЦ) КАК Таб_Итоговая
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РуководителиПоЦФО КАК ВТ_РуководителиПоЦФО
	|			ПО Таб_Итоговая.УправляющийПользователь = ВТ_РуководителиПоЦФО.Сотрудник
	|	ГДЕ
	|		НЕ ВТ_РуководителиПоЦФО.ЦФО ЕСТЬ NULL) КАК Таб_СтруктураПользователя
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.ТипыРолей КАК РолиПользователейТипыРолей
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|			ПО РолиПользователейТипыРолей.Ссылка = РолиПользователейСоставРоли.Ссылка
	|		ПО (&ПолучитьПомощников)
	|			И (Таб_СтруктураПользователя.ЭтоУправляющий)
	|			И Таб_СтруктураПользователя.ФункциональнаяРоль = РолиПользователейТипыРолей.Ссылка.Родитель
	|			И (РолиПользователейТипыРолей.ТипРоли.Код = ""PomoshnikTerrUpravlyushego""
	|				ИЛИ РолиПользователейТипыРолей.ТипРоли.Код = ""PomoshnikStorRozn"")
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтоУправляющий УБЫВ,
	|	ЭтоПомощник УБЫВ,
	|	ПодчиненныйПомощник
	|АВТОУПОРЯДОЧИВАНИЕ";
	//---АК mika
	
	Запрос.УстановитьПараметр("ДатаСреза", ТекущаяДата());
	Запрос.УстановитьПараметр("ПолучитьПомощника", ПолучитьПомощника);
	Запрос.УстановитьПараметр("ПолучитьПомощников", ПолучитьПомощников);
	Запрос.УстановитьПараметр("ДатаСреза", ТекущаяДата());
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		СтруктураПараметров = Новый Структура();

		Если Не ПолучитьПомощников Тогда
			
			Пока Выборка.Следующий() Цикл		
				Для каждого Колонка Из РезультатЗапроса.Колонки Цикл
					СтруктураПараметров.Вставить(Колонка.Имя, Выборка[Колонка.Имя]);      
				КонецЦикла;
			КонецЦикла;
			
		Иначе
			
			СписокПомощников   = Новый СписокЗначений();
			СтруктураЗаполнена = Ложь;
			
			Пока Выборка.Следующий() Цикл
				
				Если Не СтруктураЗаполнена Тогда
					Для каждого Колонка Из РезультатЗапроса.Колонки Цикл
						СтруктураПараметров.Вставить(Колонка.Имя, Выборка[Колонка.Имя]);      
					КонецЦикла;
					Если ЗначениеЗаполнено(Выборка.ПодчиненныйПомощник) Тогда
						СписокПомощников.Добавить(Выборка.ПодчиненныйПомощник);
					КонецЕсли;
					СтруктураЗаполнена = Истина;
				Иначе
					Если ЗначениеЗаполнено(Выборка.ПодчиненныйПомощник) Тогда
						СписокПомощников.Добавить(Выборка.ПодчиненныйПомощник);
					КонецЕсли;
				КонецЕсли;
				
			КонецЦикла;

			Если СписокПомощников.Количество() > 0 Тогда
				СтруктураПараметров.Вставить("ПодчиненныеПомощники", СписокПомощников);
			КонецЕсли;
			
		КонецЕсли;	
		
		Если ПолучитьЦФО Тогда
			Возврат СтруктураПараметров.ЦФО;
		Иначе
			Возврат СтруктураПараметров;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Неопределено;

КонецФункции // ПолучитьЦФОПомощникаУправляющего()

// Процедура заполняет отборы (и пользовательские отборы) данными о подчиненных сотрудниках //+++АК mika 2018.07.24 ИП-00019184.01 
// (используется во всех "Отчетах об отклонениях" штатных сотрудников)
//
// Параметры:
//  <КомпоновщикНастроек>  - <Тип.КомпоновщикНастроек> - Компоновщик настроек текущей системы компоновки данных
//  <Заголовок>            - <Тип.Строка> - Заголовок формы
//
Процедура ЗаполнитьПользовательскиеОтборыПоСтруктуреПодчинения(КомпоновщикНастроек, Заголовок) Экспорт 
	
	//Получение структуры параметров для определения структуры подчинения 
	СтрукрураПараметров = РегистрыСведений.ПользователиПоЦФО.ПолучитьСтрукрутуПодчиненияТекущегоСотрудника(ПараметрыСеанса.ТекущийПользователь, Ложь,,Истина);
	
	Если СтрукрураПараметров <> Неопределено Тогда
		
		Если СтрукрураПараметров.ЭтоУправляющий Тогда
			ТекущийУправляющий = СтрукрураПараметров.Сотрудник;
			Заголовок = СокрЛП(ТекущийУправляющий) + " (Управляющий)";
		ИначеЕсли СтрукрураПараметров.ЭтоПомощник Тогда
			ТекущийПомощник = СтрукрураПараметров.Сотрудник;
			Заголовок = СокрЛП(ТекущийПомощник) + " (Помощник)" + Заголовок;
		Иначе 			
			ТекущийУправляющий = Неопределено;
			ТекущийПомощник    = Неопределено;
			Заголовок = СокрЛП(ПараметрыСеанса.ТекущийПользователь) + " (Пользователь)" + Заголовок;
		КонецЕсли;
	
		//Заполнение отборов и пользовательских отборов
		Если ЗначениеЗаполнено(ТекущийУправляющий) Тогда
			Для каждого ТекущийОтбор Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
				Если СокрЛП(ТекущийОтбор.ЛевоеЗначение) = "ПомощникТУ" Тогда
					ТекущийОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
					СтрукрураПараметров.Свойство("ПодчиненныеПомощники", ТекущийОтбор.ПравоеЗначение);
					ТекущийОтбор.Использование = Истина;
					Для каждого ПользовательскийОтбор из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл 
						Если ТекущийОтбор.ИдентификаторПользовательскойНастройки = ПользовательскийОтбор.ИдентификаторПользовательскойНастройки Тогда
							ЗаполнитьЗначенияСвойств(ПользовательскийОтбор,ТекущийОтбор);
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
				//+++АК mika 2018.07.24 ИП-00019184.01 Скворцов попросил отключить, но пока не удалаять!
				//ИначеЕсли СокрЛП(ТекущийОтбор.ЛевоеЗначение) = "ГруппаСотрудников" Тогда 
				//	ТекущийОтбор.ПравоеЗначение = СтрукрураПараметров.ЦФО;
				//	ТекущийОтбор.Использование = Истина;
				//	Для каждого ПользовательскийОтбор из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл 
				//		Если ТекущийОтбор.ИдентификаторПользовательскойНастройки = ПользовательскийОтбор.ИдентификаторПользовательскойНастройки Тогда
				//			ЗаполнитьЗначенияСвойств(ПользовательскийОтбор,ТекущийОтбор);
				//			Прервать;
				//		КонецЕсли;
				//	КонецЦикла;
				//---АК mika

				КонецЕсли;
			КонецЦикла;
		ИначеЕсли ЗначениеЗаполнено(ТекущийПомощник) Тогда
			Для каждого ТекущийОтбор Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
				Если СокрЛП(ТекущийОтбор.ЛевоеЗначение) = "ПомощникТУ" Тогда
					ТекущийОтбор.ПравоеЗначение = ТекущийПомощник;
					ТекущийОтбор.Использование = Истина;
					Для каждого ПользовательскийОтбор из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл 
						Если ТекущийОтбор.ИдентификаторПользовательскойНастройки = ПользовательскийОтбор.ИдентификаторПользовательскойНастройки Тогда
							ЗаполнитьЗначенияСвойств(ПользовательскийОтбор,ТекущийОтбор);
							Прервать;
						КонецЕсли;
					КонецЦикла;
				ИначеЕсли СокрЛП(ТекущийОтбор.ЛевоеЗначение) = "ГруппаСотрудников" Тогда
					ТекущийОтбор.ПравоеЗначение = СтрукрураПараметров.ЦФО;
					ТекущийОтбор.Использование = Истина;
					Для каждого ПользовательскийОтбор из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл 
						Если ТекущийОтбор.ИдентификаторПользовательскойНастройки = ПользовательскийОтбор.ИдентификаторПользовательскойНастройки Тогда
							ЗаполнитьЗначенияСвойств(ПользовательскийОтбор,ТекущийОтбор);
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;	

КонецПроцедуры // ЗаполнитьПользовательскиеОтборыПоСтруктуреПодчинения()
 