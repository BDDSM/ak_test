
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ФизЛицоПриИзменении(Элемент)
	
	ОбновитьСреднююСтавкуЗаПредыдущийМесяц();
	
	ЗаполнитьИнтервалыЗаморозки();	
	
КонецПроцедуры

&НаКлиенте
Процедура РежимПриИзменении(Элемент)
	
	ОбновитьСреднююСтавкуЗаПредыдущийМесяц();
	
	ЗаполнитьИнтервалыЗаморозки();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаСПриИзменении(Элемент)
	
	ОбновитьСреднююСтавкуЗаПредыдущийМесяц();
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура Разморозить(Команда)
	
	ОчиститьСообщения();
	
	ОшибкаЗаполненияПериода = Ложь;
	Если ПериодС > ПериодПо Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректно заполнен период разморозки.");
		ОшибкаЗаполненияПериода = Истина;
		
	КонецЕсли;
	
	Если Не ПроверитьЗаполнение() ИЛИ ОшибкаЗаполненияПериода Тогда
		Возврат;	
	КонецЕсли; 
	
	НачалоПериода = ПериодС;
	КонецПериода  = ПериодПо;
	
	ЗаморозитьРазморозитьНаСервере(НачалоПериода, КонецПериода);	
	
КонецПроцедуры

&НаКлиенте
Процедура Заморозить(Команда)
	
	ОчиститьСообщения();
	
	ОшибкаЗаполненияСуммы = Ложь;
	Если Сумма = 0 Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена ставка для заморозки.");
		ОшибкаЗаполненияСуммы = Истина;
		
	КонецЕсли;
	
	ОшибкаЗаполненияПериода = Ложь;
	Если ПериодС > ПериодПо Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не корректно заполнен период заморозки.");
		ОшибкаЗаполненияПериода = Истина;
		
	КонецЕсли;
	
	Если Не ПроверитьЗаполнение() ИЛИ ОшибкаЗаполненияСуммы ИЛИ ОшибкаЗаполненияПериода Тогда
		Возврат;	
	КонецЕсли;
	
	НачалоПериода = ПериодС;
	КонецПериода  = ПериодПо;
	
	ЗаморозитьРазморозитьНаСервере(НачалоПериода, КонецПериода);
	
КонецПроцедуры

&НаСервере
Процедура ЗаморозитьРазморозитьНаСервере(НачалоПериода, КонецПериода)
	
	Ответственный = ПараметрыСеанса.ТекущийПользователь;
	
	Пока НачалоПериода <= КонецПериода Цикл
		
		МЗ = РегистрыСведений.ЗамороженнаяЗарплатаПродавцов.СоздатьМенеджерЗаписи();
		
		МЗ.ФизЛицо 			= ФизЛицо;
		МЗ.ПериодДействия 	= НачалоПериода;
		МЗ.Ответственный 	= Ответственный;
		
		Если Режим = 0 Тогда
			
			МЗ.Сумма		= Сумма;
			МЗ.Заморожена 	= Истина;
			
		Иначе
			
			МЗ.Заморожена 	= Ложь;
			
		КонецЕсли; 
		
		МЗ.Записать();
		
		НачалоПериода = НачалоПериода + 86400;
		
	КонецЦикла;
	
	ЗаполнитьИнтервалыЗаморозки();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИнтервалыЗаморозки()
	
	ИнтервалыЗаморозки.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗамороженнаяЗарплатаПродавцов.ПериодДействия КАК ПериодДействия,
	|	ЗамороженнаяЗарплатаПродавцов.Сумма
	|ИЗ
	|	РегистрСведений.ЗамороженнаяЗарплатаПродавцов КАК ЗамороженнаяЗарплатаПродавцов
	|ГДЕ
	|	ЗамороженнаяЗарплатаПродавцов.ФизЛицо = &ФизЛицо
	|	И ЗамороженнаяЗарплатаПродавцов.Заморожена
	|	И ЗамороженнаяЗарплатаПродавцов.ПериодДействия МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодДействия";
	
	Запрос.УстановитьПараметр("ФизЛицо"		 , ФизЛицо);
	Запрос.УстановитьПараметр("НачалоПериода", ДобавитьМесяц(ТекущаяДата(), -12));
	Запрос.УстановитьПараметр("КонецПериода" , ДобавитьМесяц(ТекущаяДата(), 12));
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НачалоПериодаЗаморозки = Дата(1,1,1);
	ПредыдущийДень = Дата(1,1,1);
	ПредыдущаяСтавка = 0;
	
	Пока Выборка.Следующий() Цикл
		
		Если НачалоПериодаЗаморозки = Дата(1,1,1) Тогда
			
			НачалоПериодаЗаморозки = Выборка.ПериодДействия;
			ПредыдущийДень = Выборка.ПериодДействия;
			ПредыдущаяСтавка = Выборка.Сумма;
			
			Продолжить;
			
		КонецЕсли; 
		
		ТекущийДень = Выборка.ПериодДействия;
		ТекущаяСтавка = Выборка.Сумма;
		
		Если ТекущийДень - 86400 = ПредыдущийДень 
			И ТекущаяСтавка = ПредыдущаяСтавка Тогда
			
			ПредыдущийДень = ТекущийДень;
			ПредыдущаяСтавка = ТекущаяСтавка;
			
			Продолжить;
			
		КонецЕсли; 
		
		НоваяСтрока = ИнтервалыЗаморозки.Добавить();
		НоваяСтрока.ЗамороженоС = НачалоПериодаЗаморозки;
		НоваяСтрока.ЗамороженоПо = ПредыдущийДень;
		НоваяСтрока.Ставка = ПредыдущаяСтавка;
		
		НачалоПериодаЗаморозки = ТекущийДень;
		ПредыдущийДень = ТекущийДень;
		ПредыдущаяСтавка = ТекущаяСтавка;
		
	КонецЦикла; 
	
	Если ЗначениеЗаполнено(НачалоПериодаЗаморозки) Тогда
		
		НоваяСтрока = ИнтервалыЗаморозки.Добавить();
		НоваяСтрока.ЗамороженоС  = НачалоПериодаЗаморозки;
		НоваяСтрока.ЗамороженоПо = ПредыдущийДень;
		НоваяСтрока.Ставка = ПредыдущаяСтавка;
		
	КонецЕсли; 
	
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()
	
	Элементы.ДекорацияИнформацияПоСтавкам.Видимость = (ИнтервалыЗаморозки.Количество() > 0);
	Элементы.ДекорацияНетЗаморозки.Видимость = (ИнтервалыЗаморозки.Количество() = 0) И ЗначениеЗаполнено(ФизЛицо);
	Элементы.ДекорацияСредняяСтавка.Видимость = (Режим = 0) И ЗначениеЗаполнено(ПериодС) И ЗначениеЗаполнено(ФизЛицо);
	
	Элементы.КнопкаЗаморозить.Видимость = (Режим = 0);
	Элементы.Сумма.Видимость = (Режим = 0);
	Элементы.КнопкаРазморозить.Видимость = (Режим = 1);
	
	Если ИнтервалыЗаморозки.Количество() Тогда
		
		ТекстЗаголовка = "Информация  по замороженным ставкам:";
		
		Для каждого Стр Из ИнтервалыЗаморозки Цикл
			ТекстЗаголовка = ТекстЗаголовка + Символы.ПС + "	- с " + Формат(Стр.ЗамороженоС, "ДЛФ=D") + " по " + Формат(Стр.ЗамороженоПо, "ДЛФ=D") + ", ставка: " + Строка(Стр.Ставка);	
		КонецЦикла; 
		
		Элементы.ДекорацияИнформацияПоСтавкам.Заголовок = ТекстЗаголовка;
		
	КонецЕсли; 
	
	Если (Режим = 0) И ЗначениеЗаполнено(ПериодС) И ЗначениеЗаполнено(ФизЛицо) Тогда
		
		Элементы.ДекорацияСредняяСтавка.Заголовок = "Средняя ставка в день за период с " + Формат(ДобавитьМесяц(ПериодС - 86400, -1), "ДЛФ=D") + " по " + Формат(ПериодС - 86400, "ДЛФ=D") + ", составляет: " + Строка(СредняяСтавка);	
		
	КонецЕсли; 
		
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияСредняяСтавкаНажатие(Элемент)
	
	// Расшифровка
	ДанныеДляРасшифровки = ПолучитьДанныеДляРасшифровкиЗаПредыдущийМесяц();
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	Макет = ПолучитьМакетРасшифровки();
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Продавец = ФизЛицо;
	ТабДокумент.Вывести(ОбластьМакета);
	
	Для каждого Стр Из ДанныеДляРасшифровки Цикл
		
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		ОбластьМакета.Параметры.Заполнить(Стр);
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла; 
	
	ТабДокумент.Показать();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСреднююСтавкуЗаПредыдущийМесяц()
	
	Если Режим = 1 Тогда
		
		СредняяСтавка = 0;
		Возврат;
		
	КонецЕсли; 
	
	Если Не (ЗначениеЗаполнено(ПериодС) И ЗначениеЗаполнено(ФизЛицо)) Тогда
		
		СредняяСтавка = 0;
		Возврат;
		
	КонецЕсли; 
	
	МассивТиповРабот = Новый Массив;
	МассивТиповРабот.Добавить(Перечисления.ТипыРаботДляРасчетаЗП.ПолныйДень);
	МассивТиповРабот.Добавить(Перечисления.ТипыРаботДляРасчетаЗП.ПолныйДеньУР);
	МассивТиповРабот.Добавить(Перечисления.ТипыРаботДляРасчетаЗП.ПолнаяНочь);
	МассивТиповРабот.Добавить(Перечисления.ТипыРаботДляРасчетаЗП.Практикант);
	МассивТиповРабот.Добавить(Перечисления.ТипыРаботДляРасчетаЗП.ПрактикантУР);
	МассивТиповРабот.Добавить(Перечисления.ТипыРаботДляРасчетаЗП.Стажер);
	МассивТиповРабот.Добавить(Перечисления.ТипыРаботДляРасчетаЗП.ПолСтавки);
	МассивТиповРабот.Добавить(Перечисления.ТипыРаботДляРасчетаЗП.ПолСтавкиУР);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗарплатаПродавцов.ФизЛицо,
	|	СРЕДНЕЕ(ЗарплатаПродавцов.Бонус) КАК Ставка
	|ИЗ
	|	РегистрСведений.ЗарплатаПродавцов КАК ЗарплатаПродавцов
	|ГДЕ
	|	ЗарплатаПродавцов.ТипРабот В(&ТипыРабот)
	|	И ЗарплатаПродавцов.ДатаНачисления МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ЗарплатаПродавцов.ФизЛицо = &ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗарплатаПродавцов.ФизЛицо";
	
	Запрос.УстановитьПараметр("ФизЛицо"		 , ФизЛицо);
	Запрос.УстановитьПараметр("ТипыРабот"	 , МассивТиповРабот);
	Запрос.УстановитьПараметр("ДатаНачала"	 , ДобавитьМесяц(ПериодС - 86400, -1));
	Запрос.УстановитьПараметр("ДатаОкончания", ПериодС - 86400);
	
	СредняяСтавка = Запрос.Выполнить().Выгрузить().Итог("Ставка");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеДляРасшифровкиЗаПредыдущийМесяц()
	
	МассивТиповРабот = Новый Массив;
	МассивТиповРабот.Добавить(Перечисления.ТипыРаботДляРасчетаЗП.ПолныйДень);
	МассивТиповРабот.Добавить(Перечисления.ТипыРаботДляРасчетаЗП.ПолныйДеньУР);
	МассивТиповРабот.Добавить(Перечисления.ТипыРаботДляРасчетаЗП.ПолнаяНочь);
	МассивТиповРабот.Добавить(Перечисления.ТипыРаботДляРасчетаЗП.Практикант);
	МассивТиповРабот.Добавить(Перечисления.ТипыРаботДляРасчетаЗП.ПрактикантУР);
	МассивТиповРабот.Добавить(Перечисления.ТипыРаботДляРасчетаЗП.Стажер);
	МассивТиповРабот.Добавить(Перечисления.ТипыРаботДляРасчетаЗП.ПолСтавки);
	МассивТиповРабот.Добавить(Перечисления.ТипыРаботДляРасчетаЗП.ПолСтавкиУР);
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗарплатаПродавцов.ДатаНачисления КАК Дата,
	|	ЗарплатаПродавцов.ТорговаяТочка КАК ТТ,
	|	ЗарплатаПродавцов.Бонус КАК Бонус,
	|	ЗарплатаПродавцов.БонусСНДФЛ
	|ИЗ
	|	РегистрСведений.ЗарплатаПродавцов КАК ЗарплатаПродавцов
	|ГДЕ
	|	ЗарплатаПродавцов.ТипРабот В(&ТипыРабот)
	|	И ЗарплатаПродавцов.ДатаНачисления МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ЗарплатаПродавцов.ФизЛицо = &ФизЛицо";
	
	Запрос.УстановитьПараметр("ФизЛицо"		 , ФизЛицо);
	Запрос.УстановитьПараметр("ТипыРабот"	 , МассивТиповРабот);
	Запрос.УстановитьПараметр("ДатаНачала"	 , ДобавитьМесяц(ПериодС - 86400, -1));
	Запрос.УстановитьПараметр("ДатаОкончания", ПериодС - 86400);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаСервере
Функция ПолучитьМакетРасшифровки()
	
	Возврат Отчеты.ОтчетПоЗаработнойПлатеПродавцов.ПолучитьМакет("РасшифровкаДляСреднейСтавки");
	
КонецФункции

