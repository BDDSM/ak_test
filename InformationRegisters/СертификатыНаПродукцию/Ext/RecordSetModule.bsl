
Процедура ПередЗаписью(Отказ, Замещение)
	
	//Если ЭтотОбъект.ДополнительныеСвойства.Свойство("БылаОчистка") = Ложь Тогда
	//	ЭтотОбъект.ДополнительныеСвойства.Вставить("БылаОчистка", Истина);
	//	Запрос = Новый Запрос();
	//	Запрос.УстановитьПараметр("Номенклатура", ЭтотОбъект.Отбор.Номенклатура.Значение);
	//	Запрос.УстановитьПараметр("Характеристика", ЭтотОбъект.Отбор.Характеристика.Значение);
	//	Запрос.Текст = "ВЫБРАТЬ
	//				   |	СертификатыНаПродукцию.РегистрационныйНомер
	//				   |ИЗ
	//				   |	РегистрСведений.СертификатыНаПродукцию КАК СертификатыНаПродукцию
	//				   |ГДЕ
	//				   |	СертификатыНаПродукцию.Номенклатура = &Номенклатура
	//				   |	И СертификатыНаПродукцию.Характеристика = &Характеристика";
	//				   
	//	Таб = Запрос.Выполнить().Выгрузить();
	//	ЭтотОбъект.ДополнительныеСвойства.Вставить("КолвоЗаписей", Таб.Количество());
	//Иначе
	//	Если ЭтотОбъект.ДополнительныеСвойства.КолвоЗаписей < ЭтотОбъект.Количество() Тогда
	//		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Зафиксировано удаление сертификата для записи (" + ЭтотОбъект.Отбор.Номенклатура.Значение + ", " + ЭтотОбъект.Отбор.Характеристика.Значение + "). Удаление запрещено",,,, Отказ);
	//	КонецЕсли;	
	//КонецЕсли;	
	
	Для Каждого Запись Из ЭтотОбъект Цикл
		Если Запись.Бессрочный Тогда
			Запись.ДействуетДо = '39990101';
		КонецЕсли;	
		Если Запись.Период > Запись.ДействуетДо
			И ЗначениеЗаполнено(Запись.ДействуетДо) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя установить дату начала действия сертификата больше, чем дата окончания (" + Запись.Номенклатура + ", " + Запись.Характеристика + ")",,,, Отказ);
		КонецЕсли;
		//Если Не ЗначениеЗаполнено(Запись.ДействуетДо) Тогда
		//	ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя установить сертификат без окончания даты действия (" + Запись.Номенклатура + ", " + Запись.Характеристика + ")",,,, Отказ);
		//КонецЕсли;	
	КонецЦикла;	
	//+++ АК obue 20160325 00012021
	АК_ИзменениеРегистраСверкиДекларацииИЭтикеток();
	//--- АК
	
	//запишем в лог
	Если ЭтотОбъект.ДополнительныеСвойства.Свойство("БылаОчистка") = Ложь
		И ЭтотОбъект.Количество() = 0 Тогда
		УстановитьПривилегированныйРежим(Истина);
		Набор = РегистрыСведений.СертификатыНаПродукцию.СоздатьНаборЗаписей();
		ОтборТовар = ЭтотОбъект.Отбор.Найти("Номенклатура");
		ОтборХарактеристика = ЭтотОбъект.Отбор.Найти("Характеристика");
		ОтборРегистрационныйНомер = ЭтотОбъект.Отбор.Найти("РегистрационныйНомер");
		Если ОтборТовар <> Неопределено
			ИЛИ ОтборХарактеристика <> Неопределено
			ИЛИ ОтборРегистрационныйНомер <> Неопределено Тогда
			Если ОтборТовар <> Неопределено Тогда
				Набор.Отбор.Номенклатура.Установить(ОтборТовар.Значение);
			КонецЕсли;
			Если ОтборХарактеристика <> Неопределено Тогда
				Набор.Отбор.Характеристика.Установить(ОтборХарактеристика.Значение);
			КонецЕсли;
			Если ОтборРегистрационныйНомер <> Неопределено Тогда
				Набор.Отбор.РегистрационныйНомер.Установить(ОтборРегистрационныйНомер.Значение);
			КонецЕсли;
			Набор.Прочитать();
			Для Каждого ЗаписьСерт Из Набор Цикл
				Запись = РегистрыСведений.ЛогированиеИзмененийРегистраСертификатов.СоздатьМенеджерЗаписи();
				ЗаполнитьЗначенияСвойств(Запись, ЗаписьСерт);
				Запись.Период = ТекущаяДата();
				Запись.Тип = 0;
				Запись.Действие = "Удалена запись сертификата";
				Запись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
				Запись.Записать();
			КонецЦикла;	
			ЭтотОбъект.ДополнительныеСвойства.Вставить("БылаОчистка", Истина);
		КонецЕсли;
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;	
	
КонецПроцедуры


Процедура АК_ИзменениеРегистраСверкиДекларацииИЭтикеток()
	Если не ЭтотОбъект.Количество() = 0 Тогда		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТаблицаХарактеристик",ЭтотОбъект.Выгрузить());
		Запрос.Текст = "ВЫБРАТЬ
		|	ТаблицаХарактеристик.Характеристика
		|ПОМЕСТИТЬ ВТ_НаборЗаписей
		|ИЗ
		|	&ТаблицаХарактеристик КАК ТаблицаХарактеристик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АК_РезультатСверкиДанныхДекларацийСрезПоследних.Номенклатура,
		|	АК_РезультатСверкиДанныхДекларацийСрезПоследних.Характеристика
		|ИЗ
		|	РегистрСведений.АК_РезультатСверкиДанныхДеклараций.СрезПоследних КАК АК_РезультатСверкиДанныхДекларацийСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_НаборЗаписей КАК ВТ_НаборЗаписей
		|		ПО АК_РезультатСверкиДанныхДекларацийСрезПоследних.Характеристика = ВТ_НаборЗаписей.Характеристика
		|ГДЕ
		|	НЕ АК_РезультатСверкиДанныхДекларацийСрезПоследних.Декларация = ЗНАЧЕНИЕ(перечисление.АК_ВидыСтатусовПроверкиИзображений.Проверено)
		|	И НЕ АК_РезультатСверкиДанныхДекларацийСрезПоследних.Декларация = ЗНАЧЕНИЕ(перечисление.АК_ВидыСтатусовПроверкиИзображений.Пустаяссылка)";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Запись = РегистрыСведений.АК_РезультатСверкиДанныхДеклараций.СоздатьМенеджерЗаписи();
			Запись.Период = ТекущаяДата();
			Запись.Номенклатура = Выборка.Номенклатура;
			Запись.Характеристика = Выборка.Характеристика;
			Запись.Ответственный = ПараметрыСеанса.ТекущийПользователь;
			Запись.Записать();
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ЭтотОбъект.ДополнительныеСвойства.Свойство("БылаОчистка") = Ложь Тогда
		УстановитьПривилегированныйРежим(Истина);
		Для Каждого ЗаписьСерт Из ЭтотОбъект Цикл
			Запись = РегистрыСведений.ЛогированиеИзмененийРегистраСертификатов.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись, ЗаписьСерт);
			Запись.Период = ТекущаяДата();
			Запись.Тип = 1;
			Запись.Действие = "Добавлена запись сертификата";
			Запись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
			Запись.Записать();
		КонецЦикла;
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли;	
	
КонецПроцедуры
