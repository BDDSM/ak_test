
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ЗначенияЗаполнения") Тогда
		Для каждого ЗначениеЗаполнения Из Параметры.ЗначенияЗаполнения Цикл
			Запись[ЗначениеЗаполнения.Ключ] = ЗначениеЗаполнения.Значение;     
		КонецЦикла;
	КонецЕсли;
	
	Параметры.Свойство("ВернутьСтруктуруКлюча", ВернутьСтруктуруКлюча);
	Параметры.Свойство("ИнтерактивноеДобавление", ИнтерактивноеДобавление);
	
	ОбновитьДоступностьЭлементовФормы();
	
	ОбновитьПараметрыФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ИнтерактивноеДобавление Тогда
		ТекущаяДата = НачалоДня(ТекущаяДата());
		Если НачалоДня(Запись.ДатаПрихода) = ТекущаяДата И НачалоДня(Запись.ДатаУхода) = ТекущаяДата Тогда
			ТекстПредупреждения = "Уважаемый пользователь, согласно регламенту:
			                      |1. Внештатные сотрудники должны отмечаться ""на приход"" через Фронтол (или через 1С: График сотрудников магазина → Доп. функции → Приход/уход сотрудников).
			                      |2. В конце рабочего дня / после того как сотрудники ""отметились на уход"", необходимо импортировать все отметки за день из Фронтол в 1С(кнопка ""Импорт отметок (Фронтол)"").
								  |3. Проставить в Журнале учета фактическое количество часов ""По магазину"".";
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Отказ = ПроверитьСоответствиеПериодов(Ложь);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Отказ = РегистрыСведений.ЖурналУчетаСотрудниковПоДнямАутсорсинг.ПроверитьВозможностьРедактированияПеродаПоСотруднику(ТекущийОбъект.ДатаПрихода, ТекущийОбъект.Сотрудник);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	//В #ТолстыйКлиентОбычноеПриложение зацикливание (версия платформы 8.3.10.2561)
	//"Закрытие" выведено в отделюные кнопки
	
	//Если НЕ ЭтаФорма.Модифицированность И ВернутьСтруктуруКлюча Тогда
	//	
	//	СтандартнаяОбработка  = Ложь;
	//	ВернутьСтруктуруКлюча = Ложь;
	//	
	//	ЭтаФорма.Закрыть(Новый Структура("ДатаПрихода, Сотрудник", Запись.ДатаПрихода, Запись.Сотрудник));
	//	
	//КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриходаПриИзменении(Элемент)
	
	ПроверитьСоответствиеПериодов();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаУходаПриИзменении(Элемент)
	
	ПроверитьСоответствиеПериодов();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриходаДеньПриИзменении(Элемент)
	
	ПроверитьСоответствиеПериодов();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	Запись.Сотрудник = ПредопределенноеЗначение("Справочник.СотрудникиАутсорсинг.ПустаяСсылка");
	Запись.Должность = ПредопределенноеЗначение("Справочник.ДолжностиВнештатныхСотрудников.ПустаяСсылка");
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	Запись.Должность = ПолучитьДолжностьСотрудника(Запись.Сотрудник);
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФорму("Справочник.СотрудникиАутсорсинг.Форма.ФормаВыбора", Новый Структура("ТекущийКонтрагент", Запись.Контрагент),Элемент,,ВариантОткрытияОкна.ОтдельноеОкно,,,РежимОткрытияОкнаФормы.БлокироватьВесьИнтерфейс);

КонецПроцедуры

&НаКлиенте
Процедура СотрудникАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = ПолучитьСотрудникаПоЧастиТекста(Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоМагазинуПриИзменении(Элемент)
	
	Запись.ПодтвержденоМагазином = ЗначениеЗаполнено(Запись.ПоМагазину);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаМенеджерПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Запись.ПоМагазину) Тогда
		Запись.ПодтвержденоМагазином = Запись.ПодтвержденоПомощником;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	
	ОтказЗаписи = Ложь;
	
	Записать();
	
	Если НЕ ОтказЗаписи Тогда
		Если ВернутьСтруктуруКлюча Тогда
			Закрыть(Новый Структура("ДатаПрихода, Сотрудник", Запись.ДатаПрихода, Запись.Сотрудник));
		Иначе
			Закрыть();
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаЗакрыть(Команда)
	
	Если НЕ ЭтаФорма.Модифицированность И ВернутьСтруктуруКлюча Тогда
		
		СтандартнаяОбработка  = Ложь;
		ВернутьСтруктуруКлюча = Ложь;
		
		Закрыть(Новый Структура("ДатаПрихода, Сотрудник", Запись.ДатаПрихода, Запись.Сотрудник));
		
	Иначе
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьДоступностьЭлементовФормы()
	
	РольПолныеПрава = РольДоступна("ПолныеПрава");
	
	Элементы.ОтметкаСотрудник.ТолькоПросмотр = НЕ РольПолныеПрава;
	Элементы.Продавец.ТолькоПросмотр = НЕ РольПолныеПрава;
	Элементы.Помощник.ТолькоПросмотр = НЕ РольПолныеПрава;
	Элементы.Тип.ТолькоПросмотр = НЕ РольПолныеПрава;
	
	Если НЕ РольПолныеПрава И (ЗначениеЗаполнено(Запись.idЗаписиПриход) ИЛИ 
			ЗначениеЗаполнено(Запись.idЗаписиУход) ИЛИ Запись.Тип = Перечисления.ТипыОтраженияПриходаУходаПродавцов.Бэйдж) Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьПараметрыФормы()
	
	Если НЕ ЗначениеЗаполнено(Запись.Тип) Тогда
		Запись.Тип = Перечисления.ТипыОтраженияПриходаУходаПродавцов.Интерактивно;
	КонецЕсли;

	ЗапретРедактирования = Ложь;
	
	//Заполнение списка выбора контрагентов
	ДоступныеКонтрагенты = Справочники.СотрудникиАутсорсинг.ПолучитьКонтрагентовПредоставляющихАутсорсУслуги(ЗапретРедактирования);
	
	Для каждого Элемент Из ДоступныеКонтрагенты Цикл
		Элементы.Контрагент.СписокВыбора.Добавить(Элемент);
	КонецЦикла;
	
	Если ЗапретРедактирования И Элементы.Контрагент.СписокВыбора.Количество() > 0 Тогда
		Элементы.Контрагент = Элементы.Контрагент.СписокВыбора[0].Значение;     
	КонецЕсли;
	
	Попытка
		ТекущийПродавец = ПараметрыСеанса.ТекущийПродавец;
	Исключение
	КонецПопытки;

	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;

КонецПроцедуры

&НаКлиенте
Функция ПолучитьСотрудникаПоЧастиТекста(Текст)
	
	Возврат ПолучитьДанныеВыбора(Тип("СправочникСсылка.СотрудникиАутсорсинг"), 
		Новый Структура("ДополнительныеПараметры, ТекстПоиска, Контрагент", "Контрагент", Текст, Запись.Контрагент));
	
КонецФункции // ПолучитьСотрудникаЧастиТекста()

&НаСервереБезКонтекста
Функция ПолучитьДолжностьСотрудника(Сотудник)
	
	Если ЗначениеЗаполнено(Сотудник) Тогда
		Возврат Сотудник.Должность;
	Иначе
		Возврат Справочники.ДолжностиВнештатныхСотрудников.ПустаяСсылка();
	КонецЕсли;

КонецФункции

&НаКлиенте
Функция ПроверитьСоответствиеПериодов(ОтображатьУведомления = Истина)
	
	Отказ = Ложь;
	
	ТекстПредупреждения = "";
	
	ТекущаяДата = ТекущаяДата();
	Если ЗначениеЗаполнено(Запись.ДатаПрихода) И Запись.ДатаПрихода > ТекущаяДата Тогда
		ТекстПредупреждения = СтрЗаменить("Дата прихода 'ДатаПрихода' не может превышать текущую дату/время!", "ДатаПрихода", Запись.ДатаПрихода) + Символы.ПС;
		Запись.ДатаПрихода = ТекущаяДата;
		Если Запись.ДатаУхода < Запись.ДатаПрихода Тогда
			Запись.ДатаУхода = Запись.ДатаПрихода;
		КонецЕсли;
		Отказ = Истина;
	ИначеЕсли (ЗначениеЗаполнено(Запись.ДатаУхода) И Запись.ДатаУхода > ТекущаяДата) Тогда
		ТекстПредупреждения = СтрЗаменить("Дата ухода 'ДатаУхода' не может превышать текущую дату/время!", "ДатаУхода", Запись.ДатаУхода) + Символы.ПС;
		Запись.ДатаУхода = ТекущаяДата;
		Отказ = Истина;
	ИначеЕсли Запись.ДатаУхода < Запись.ДатаПрихода Тогда
		Запись.ДатаУхода = Запись.ДатаПрихода;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запись.ДатаУхода) И ЗначениеЗаполнено(Запись.ДатаПрихода) И (Запись.ДатаУхода-Запись.ДатаПрихода)/3600 > 24 Тогда
		ТекстПредупреждения = ТекстПредупреждения + "Смена не может длиться более 24-х часов. Проверьте время прихода и ухода!" + Символы.ПС;
		Отказ = Истина;
	КонецЕсли;
	
	//Для "шутников", т.к. отмечено регулярное появление записей разных 900-х, 60-х и пр. годов (фактическая блокировка не нужна)
	Если ОтображатьУведомления Тогда	
		Если (ЗначениеЗаполнено(Запись.ДатаПрихода) И (-(НачалоДня(Запись.ДатаПрихода) - НачалоДня(ТекущаяДата))/86400 > 35))
			ИЛИ (ЗначениеЗаполнено(Запись.ДатаУхода) И (-(НачалоДня(Запись.ДатаУхода) - НачалоДня(ТекущаяДата))/86400 > 35)) Тогда
			
			ТекстПредупреждения = ТекстПредупреждения + "Под пользователем '&Пользователь' зафиксирована попытка редактирования данных в периоде превышающем 35 дней от текущей даты!"; 
			ТекстПредупреждения = СтрЗаменить(ТекстПредупреждения, "&Пользователь", ?(ЗначениеЗаполнено(ТекущийПродавец), ТекущийПродавец, ТекущийПользователь));
			
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстПредупреждения) Тогда
		ПоказатьПредупреждение(,ТекстПредупреждения, 15);
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

#КонецОбласти


