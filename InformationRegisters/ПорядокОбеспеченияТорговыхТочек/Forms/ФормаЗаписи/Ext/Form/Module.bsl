
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ТекТТ = ТекущийОбъект.ТорговаяТочка;
	
	
	// дозапись порядка обеспечения по всем остальным верхним группам УРЗ, кроме текущей (если необходимо)
	мПорядокОбеспеченияТорговыхТочек = РегистрыСведений.ПорядокОбеспеченияТорговыхТочек;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата"			, ТекущийОбъект.Период);
	Запрос.УстановитьПараметр("Склад"			, ТекущийОбъект.Расчетчик);
	Запрос.УстановитьПараметр("ТорговаяТочка"	, ТекТТ);
	Запрос.УстановитьПараметр("ГруппаУРЗ"		, ТекущийОбъект.ГруппаУРЗ);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпрГруппыНоменклатурыУРЗ.Ссылка КАК ГруппаУРЗ
	|ИЗ
	|	Справочник.ГруппыНоменклатурыУРЗ КАК СпрГруппыНоменклатурыУРЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОбеспеченияТорговыхТочек.СрезПоследних(
	|				&Дата,
	|				ТорговаяТочка = &ТорговаяТочка
	|					И НЕ ГруппаУРЗ = &ГруппаУРЗ) КАК ПорядокОбеспеченияТорговыхТочек
	|		ПО (ПорядокОбеспеченияТорговыхТочек.ГруппаУРЗ = СпрГруппыНоменклатурыУРЗ.Ссылка)
	|			И (ПорядокОбеспеченияТорговыхТочек.Расчетчик = &Склад)
	|ГДЕ
	|	СпрГруппыНоменклатурыУРЗ.Родитель = ЗНАЧЕНИЕ(Справочник.ГруппыНоменклатурыУРЗ.ПустаяСсылка)
	|	И НЕ СпрГруппыНоменклатурыУРЗ.Ссылка = &ГруппаУРЗ
	|	И НЕ СпрГруппыНоменклатурыУРЗ.ПометкаУдаления
	|	И ПорядокОбеспеченияТорговыхТочек.ГруппаУРЗ ЕСТЬ NULL ";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Дозапись порядка обеспечения по другим группам УРЗ [начало]...";
		СообщениеПользователю.Сообщить();
		
		Выборка = РезультатЗапроса.Выбрать(); 
		Пока Выборка.Следующий() Цикл

			МенеджерЗаписи = мПорядокОбеспеченияТорговыхТочек.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Период 			= ТекущийОбъект.Период;
			МенеджерЗаписи.ТорговаяТочка 	= ТекТТ;
			МенеджерЗаписи.ГруппаУРЗ 		= Выборка.ГруппаУРЗ;
			МенеджерЗаписи.Расчетчик 		= ТекущийОбъект.Расчетчик;
			Попытка
				МенеджерЗаписи.Записать();
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
			
		КонецЦикла;
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Окончание записи порядка обеспечения";
		СообщениеПользователю.Сообщить();
		
	КонецЕсли;
	
	
	// удаление лишних планов продаж, если необходимо
	мПланыПродажПоДнямНедели = РегистрыСведений.ПланыПродажПоДнямНедели;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата"			, ТекущийОбъект.Период);
	Запрос.УстановитьПараметр("Склад"			, ТекущийОбъект.Расчетчик);
	Запрос.УстановитьПараметр("ТорговаяТочка"	, ТекТТ);
	Запрос.УстановитьПараметр("ГруппаУРЗ"		, ТекущийОбъект.ГруппаУРЗ);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПланыПродажПоДнямНедели.Дата КАК Дата,
	|	ПланыПродажПоДнямНедели.Номенклатура КАК Номенклатура,
	|	ПланыПродажПоДнямНедели.Расчетчик КАК Расчетчик
	|ИЗ
	|	РегистрСведений.ПланыПродажПоДнямНедели КАК ПланыПродажПоДнямНедели
	|ГДЕ
	|	ПланыПродажПоДнямНедели.ТорговаяТочка = &ТорговаяТочка
	|	И ПланыПродажПоДнямНедели.Номенклатура.ГруппаНоменклатурыУРЗ = &ГруппаУРЗ
	|	И НЕ ПланыПродажПоДнямНедели.Дата < &Дата
	|	И (ПланыПродажПоДнямНедели.Расчетчик = ЗНАЧЕНИЕ(Справочник.Расчетчики.ПустаяСсылка)
	|			ИЛИ НЕ ПланыПродажПоДнямНедели.Склад = &Склад)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПланыПродажПоДнямНедели.Дата,
	|	ПланыПродажПоДнямНедели.Номенклатура,
	|	ПланыПродажПоДнямНедели.Расчетчик";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Удаляются планы продаж [начало]...";
		СообщениеПользователю.Сообщить();
		
		Выборка = РезультатЗапроса.Выбрать(); 
		Пока Выборка.Следующий() Цикл

			МенеджерЗаписи = мПланыПродажПоДнямНедели.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Дата 			= Выборка.Дата;
			МенеджерЗаписи.ТорговаяТочка 	= ТекТТ;
			МенеджерЗаписи.Номенклатура 	= Выборка.Номенклатура;
			МенеджерЗаписи.Расчетчик 		= Выборка.Расчетчик;
			МенеджерЗаписи.Прочитать();
			Попытка
				МенеджерЗаписи.Удалить();
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
			
		КонецЦикла;
		
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Окончание удаления планов продаж";
		СообщениеПользователю.Сообщить();
		
	КонецЕсли;

КонецПроцедуры
