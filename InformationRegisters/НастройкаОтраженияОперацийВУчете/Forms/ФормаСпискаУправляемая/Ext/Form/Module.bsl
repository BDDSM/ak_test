
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ТаблицаТекущихНастроек.Загрузить(ПолучитьСрезНастроек());
		
КонецПроцедуры

&НаСервере
Функция ПолучитьСрезНастроек(ВидОперации=Неопределено)

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВидыОперацийВУчете.Ссылка КАК ВидОперации,
	                      |	МАКСИМУМ(Срез.Период) КАК Период,
	                      |	МАКСИМУМ(Срез.Счет) КАК Счет,
	                      |	МАКСИМУМ(Срез.ЦФО) КАК ЦФО,
	                      |	МАКСИМУМ(Срез.СтатьяДоходовРасходов) КАК СтатьяДоходовРасходов,
	                      |	МАКСИМУМ(Срез.СтруктурнаяЕдиница) КАК СтруктурнаяЕдиница,
	                      |	МАКСИМУМ(Срез.СтатьяДвиженияТоваров) КАК СтатьяДвиженияТоваров,
	                      |	МАКСИМУМ(Срез.СтатьяДвиженияТоваров41) КАК СтатьяДвиженияТоваров41,
	                      |	МАКСИМУМ(Срез.ДопРеквизит) КАК ДопРеквизит,
	                      |	МАКСИМУМ(Срез.ДопРеквизит1) КАК ДопРеквизит1,
	                      |	МАКСИМУМ(Срез.ДопСтатьяДвиженияТоваров) КАК ДопСтатьяДвиженияТоваров,
	                      |	МАКСИМУМ(Срез.Организация) КАК Организация
	                      |ИЗ
	                      |	Перечисление.ВидыОперацийВУчете КАК ВидыОперацийВУчете
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НастройкаОтраженияОперацийВУчете.СрезПоследних КАК Срез
	                      |		ПО (Срез.ВидОперации = ВидыОперацийВУчете.Ссылка)
	                      |ГДЕ
	                      |	1 = 1
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВидыОперацийВУчете.Ссылка");
							
	Если ЗначениеЗаполнено(ВидОперации) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "1 = 1", "ВидыОперацийВУчете.Ссылка=&ВидОперации");
		Запрос.Параметры.Вставить("ВидОперации", ВидОперации);
	КонецЕсли;	
	
	Таблица = Запрос.Выполнить().Выгрузить();
	Таблица.Сортировать("ВидОперации");	
		
	Возврат Таблица;
	
КонецФункции

&НаКлиенте
Процедура ТаблицаТекущихНастроекПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаТекущихНастроек.ТекущиеДанные;

	ТаблицаИстории.Отбор.Элементы.Очистить();
	ЭлементОтбора					= ТаблицаИстории.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ВидОперации"); 
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно; 
	ЭлементОтбора.Использование		= Истина; 
	ЭлементОтбора.РежимОтображения	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный; 
	ЭлементОтбора.ПравоеЗначение	= ТекущиеДанные.ВидОперации;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНастройку(Команда)

	ТекущиеДанные = Элементы.ТаблицаТекущихНастроек.ТекущиеДанные;
	
	Форма = РегистрыСведений.НастройкаОтраженияОперацийВУчете.ПолучитьФорму("ФормаЗаписиУправляемая");
	Форма.Запись.ВидОперации = ТекущиеДанные.ВидОперации;
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсторииПриИзменении(Элемент)

	//+++АК Susk (Суслин К.В.) 2018.12.06 ИП-00020497
	//это тут лишнее.	 
	
	//Обновляем строку текущих настроек
	//ТекущиеДанные = Элементы.ТаблицаТекущихНастроек.ТекущиеДанные;
	//
	//Таблица = ПолучитьСрезНастроек(ТекущиеДанные.ВидОперации);
	//
	//ТекущиеДанные.Период					= Таблица[0].Период;
	//ТекущиеДанные.Счет						= Таблица[0].Счет;
	//ТекущиеДанные.ЦФО						= Таблица[0].ЦФО;
	//ТекущиеДанные.СтатьяДоходовРасходов		= Таблица[0].СтатьяДоходовРасходов;
	//ТекущиеДанные.СтруктурнаяЕдиница		= Таблица[0].СтруктурнаяЕдиница;
	//ТекущиеДанные.СтатьяДвиженияТоваров		= Таблица[0].СтатьяДвиженияТоваров;
	//ТекущиеДанные.СтатьяДвиженияТоваров41	= Таблица[0].СтатьяДвиженияТоваров41;
	//ТекущиеДанные.ДопРеквизит				= Таблица[0].ДопРеквизит;
	//ТекущиеДанные.ДопРеквизит1				= Таблица[0].ДопРеквизит1;
	//ТекущиеДанные.ДопСтатьяДвиженияТоваров				= Таблица[0].ДопСтатьяДвиженияТоваров;
	//ТекущиеДанные.Организация				= Таблица[0].Организация;
	
	//---АК Susk (Суслин К.В.) 
	
КонецПроцедуры

