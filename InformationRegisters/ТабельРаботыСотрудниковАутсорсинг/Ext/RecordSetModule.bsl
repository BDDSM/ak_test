
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ТекДатаЗапрета = Константы.ГраницаЗапретаРасчетаСотрудниковАутсорсинг.Получить();
	Если ЗначениеЗаполнено(ТекДатаЗапрета) Тогда	
		Для каждого Запись Из ЭтотОбъект Цикл
			Если Запись.Период > ТекДатаЗапрета Тогда
				ДобавитьЗаписьЖурналИзмененияТабелей(Запись);
				Продолжить;
			КонецЕсли;
			Сообщить(СтрЗаменить(НСтр("ru = 'Редактирование данных запрещено! Период ТекущийПериод закрыт для редактирования!';"),"ТекущийПериод", Формат(Запись.Период,"ДФ=dd.MM.yyyy")));;
			Отказ = Истина;
			Возврат;
		КонецЦикла;
	КонецЕсли;  
	
	ПроверкаЗаполненияЗаписи(Отказ);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Предназначена для выявления Помощников, которые правят графики "Задним числом"
// ТекущаяЗапись  - Текущая запись регистра
//
Процедура ДобавитьЗаписьЖурналИзмененияТабелей(ТекущаяЗапись)
	
	Попытка
		
		УстановитьПривилегированныйРежим(Истина);
		
		Отказ = Ложь;
		
		ПостроениеГрафиковСервер.ПроверитьВозможностьИзмененияТабеляРабот(ТекущаяЗапись.Период, Отказ, Новый Структура("Уведомление, БезУведомлений",""));
		
		Если Отказ Тогда
			
			Запись = РегистрыСведений.ЖурналИзмененияТабелей.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(Запись, ТекущаяЗапись);
			Запись.Период = ТекущаяДата() + 1;
			Запись.ДатаТабеля = ТекущаяЗапись.Период;
			Запись.АвторИзменений = ПараметрыСеанса.ТекущийПользователь;
			Запись.ТипДействия = "Добавление(зад.числ.)";
			Запись.ТипТабеля = "Аутсорс";
			
			Попытка
				Если ЗначениеЗаполнено(ПараметрыСеанса.ТекущийПродавец) Тогда
					Запись.ИзмененияСделаныСМагазина = ПараметрыСеанса.ТорговаяТочкаПоАйпи;
				КонецЕсли;	
			Исключение
			КонецПопытки;
			
			Запись.Записать();
			
		КонецЕсли;
	Исключение
	КонецПопытки;

КонецПроцедуры // ДобавитьЗаписьИсторияИзменения()

// Проверяет корректность определения Контрагента при добалении записи акк //+++АК mika 2018.07.09 //+++АК mika 2018.07.09 ИП-00019215
//(Запрет добаления записей, если не определена группа сотрудников и/или контрагент)
//
//Параметры:
//   Отказ <Тип.Булево>   - Отказ от записи
//
Процедура ПроверкаЗаполненияЗаписи(Отказ)
	
	ТекстУведомления = "";
	Для каждого Запись Из ЭтотОбъект Цикл
		Если НЕ ЗначениеЗаполнено(Запись.Контрагент) Тогда
			ТекстУведомления = ТекстУведомления + СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить("ТекущаяДата Попытка модификации записи без контрагента: 
			      |Сотрудник ТекущийСотрудник, Период: ТекущаяДата, Пользователь: ТекущийПользователь", "ТекущаяДата", ТекущаяДата()),"ТекущийСотрудник", Запись.Сотрудник),"ТекущийПериод", Формат(НачалоДня(Запись.Период),"ДФ=dd.MM.yyyy")), "ТекущийПользователь", ПараметрыСеанса.ТекущийПользователь);
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ТекстУведомления) Тогда
		Сообщить(ТекстУведомления + Символы.ПС + "При необходимости отправьте весь текст сообщения в службу поддержки!");
	КонецЕсли;
	
КонецПроцедуры // ПроверкаЗаполненияЗаписи()

