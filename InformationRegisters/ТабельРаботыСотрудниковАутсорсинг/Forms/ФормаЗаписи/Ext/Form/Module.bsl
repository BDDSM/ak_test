
&НаСервереБезКонтекста
Функция ПолучитьКоличествоЧасов(мВремяНачала, мВремяОкончания)
	
	Если ЗначениеЗаполнено(мВремяНачала)
			И ЗначениеЗаполнено(мВремяОкончания)
			И мВремяОкончания > мВремяНачала Тогда
		Возврат Час(мВремяОкончания) - Час(мВремяНачала);
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКонтрагентСотрудника(мСотрудник)
	
	Возврат мСотрудник.Контрагент;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДолжностьСотрудника(мСотрудник)
	
	Возврат мСотрудник.Должность;
	
КонецФункции

Процедура ЗаписатьИзмененияТабеля(мДата, мСотрудник, мТорговаяТочка, ИмяРеквизита, ПредставлениеРеквизита)
	
	//
	МенеджерЗаписи = РегистрыСведений.ИсторияИзмененийТабеляРаботыСотрудниковАутсорсинг.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ДатаИзменения 		= ТекущаяДата();
	МенеджерЗаписи.Дата					= мДата;
	МенеджерЗаписи.Сотрудник			= мСотрудник;
	МенеджерЗаписи.ТорговаяТочка		= мТорговаяТочка;
	МенеджерЗаписи.Реквизит				= ПредставлениеРеквизита;
	МенеджерЗаписи.ЗначениеРеквизита	= Запись[ИмяРеквизита];
	МенеджерЗаписи.Автор				= ПараметрыСеанса.ТекущийПользователь;
	
	Попытка
		МенеджерЗаписи.Записать();
	Исключение
		Сообщить(ОписаниеОшибки())
	КонецПопытки;
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЭтаФорма.Период_ПриОткрытии 		= Запись.Период;
	ЭтаФорма.ВремяНачала_ПриОткрытии 	= Запись.ВремяНачала;
	ЭтаФорма.ВремяОкончания_ПриОткрытии	= Запись.ВремяОкончания;
	ЭтаФорма.ТорговаяТочка_ПриОткрытии	= Запись.ТорговаяТочка;
	ЭтаФорма.Сотрудник_ПриОткрытии		= Запись.Сотрудник;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если НЕ Запись.Период = ЭтаФорма.Период_ПриОткрытии Тогда
		ЗаписатьИзмененияТабеля(ЭтаФорма.Период_ПриОткрытии, ЭтаФорма.Сотрудник_ПриОткрытии, ЭтаФорма.ТорговаяТочка_ПриОткрытии, "Период", "Период");
	КонецЕсли;
	
	Если НЕ Запись.Сотрудник = ЭтаФорма.Сотрудник_ПриОткрытии Тогда
		ЗаписатьИзмененияТабеля(ЭтаФорма.Период_ПриОткрытии, ЭтаФорма.Сотрудник_ПриОткрытии, ЭтаФорма.ТорговаяТочка_ПриОткрытии, "Сотрудник", "Сотрудник");
	КонецЕсли;
	
	Если НЕ Запись.ТорговаяТочка = ЭтаФорма.ТорговаяТочка_ПриОткрытии Тогда
		ЗаписатьИзмененияТабеля(ЭтаФорма.Период_ПриОткрытии, ЭтаФорма.Сотрудник_ПриОткрытии, ЭтаФорма.ТорговаяТочка_ПриОткрытии, "ТорговаяТочка", "Торговая точка");
	КонецЕсли;
	
	Если НЕ Запись.ВремяНачала = ЭтаФорма.ВремяНачала_ПриОткрытии Тогда
		ЗаписатьИзмененияТабеля(ЭтаФорма.Период_ПриОткрытии, ЭтаФорма.Сотрудник_ПриОткрытии, ЭтаФорма.ТорговаяТочка_ПриОткрытии, "ВремяНачала", "Начало работы");
	КонецЕсли;
	
	Если НЕ Запись.ВремяОкончания = ЭтаФорма.ВремяОкончания_ПриОткрытии Тогда
		ЗаписатьИзмененияТабеля(ЭтаФорма.Период_ПриОткрытии, ЭтаФорма.Сотрудник_ПриОткрытии, ЭтаФорма.ТорговаяТочка_ПриОткрытии, "ВремяОкончания", "Окончание работы");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ Запись.Контрагент = Запись.Сотрудник.Контрагент Тогда
		Запись.Контрагент = Запись.Сотрудник.Контрагент;
	КонецЕсли;
	Если НЕ Запись.Должность = Запись.Сотрудник.Должность Тогда
		Запись.Должность = Запись.Сотрудник.Должность;
	КонецЕсли;
		
КонецПроцедуры


&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	Запись.Контрагент 	= ПолучитьКонтрагентСотрудника(Запись.Сотрудник);
	Запись.Должность 	= ПолучитьДолжностьСотрудника(Запись.Сотрудник);
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяНачалаПриИзменении(Элемент)
	
	Запись.КоличествоЧасов = ПолучитьКоличествоЧасов(Запись.ВремяНачала, Запись.ВремяОкончания);
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяОкончанияПриИзменении(Элемент)
	
	Запись.КоличествоЧасов = ПолучитьКоличествоЧасов(Запись.ВремяНачала, Запись.ВремяОкончания);
	
КонецПроцедуры
