

&НаКлиенте
Процедура ОбновитьВыборку(Команда) Экспорт
	
	ОбновитьВыборкуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьВыборкуНаСервере()
	
	Если НЕ НЕОбновлятьВыборкуПриОткрытии Тогда
		
		Список.Отбор.Элементы.Очистить();
		
		Если НЕ ВесьПериод Тогда
			
			Если НЕ ЗначениеЗаполнено(ДатаНачала) Тогда
				ДатаНачала = ДобавитьМесяц(ТекущаяДата(), -1);
			КонецЕсли;	
			
			Если НЕ ЗначениеЗаполнено(ДатаОкончания) Тогда
				ДатаОкончания = ТекущаяДата();
			КонецЕсли;	
			
			НовыйЭл = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
			НовыйЭл.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
			НовыйЭл.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДатаДобавления");
			НовыйЭл.ПравоеЗначение = ДатаНачала;
			
			НовыйЭл = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
			НовыйЭл.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
			НовыйЭл.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДатаДобавления");
			НовыйЭл.ПравоеЗначение = ДатаОкончания;
			
		КонецЕсли;
		
		Если Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя = "ГруппаЗП" Тогда
			
			НовыйЭл = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
			НовыйЭл.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			НовыйЭл.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипОбращения");
			НовыйЭл.ПравоеЗначение = Справочники.ТипыОбращенийКПокупателю.НайтиПоКоду(1); // ЗП
			
			Если ЗначениеЗаполнено(ВыборкаЗП) Тогда
				НовыйЭл = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
				НовыйЭл.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				НовыйЭл.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Выборка");
				НовыйЭл.ПравоеЗначение = ВыборкаЗП;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ПолеВопрос) Тогда
				НовыйЭл = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
				НовыйЭл.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				НовыйЭл.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Вопрос");
				НовыйЭл.ПравоеЗначение = ПолеВопрос;
			КонецЕсли;
			
			// +++ АК CHUM 20.09.2017 0-00017062
			Если АК_ОтобразитьКартыДляЗвонков Тогда
				
				ГруппаОтборов = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
				Группаотборов.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
				
				НовыйЭл = ГруппаОтборов.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
				НовыйЭл.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
				НовыйЭл.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("АК_ВзялЛиТрубкуПокупатель");
				НовыйЭл.ПравоеЗначение = Перечисления.ОтветыКлиентов.Да;
				
				НовыйЭл = ГруппаОтборов.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
				НовыйЭл.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
				НовыйЭл.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДатаДобавления");
				НовыйЭл.ПравоеЗначение = ДобавитьМесяц(ДатаОкончания, -1);
				
			КонецЕсли;
			// --- АК
			
		ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя = "ГруппаРассылки" Тогда
			
			НовыйЭл = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
			НовыйЭл.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			НовыйЭл.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипОбращения");
			НовыйЭл.ПравоеЗначение = Справочники.ТипыОбращенийКПокупателю.НайтиПоКоду(2); // ИнформерО_ТТ
			
			Если ЗначениеЗаполнено(ВыборкаЗП) Тогда
				НовыйЭл = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
				НовыйЭл.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				НовыйЭл.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Выборка");
				НовыйЭл.ПравоеЗначение = ВыборкаЗП;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(лкТипСвязи) Тогда
				НовыйЭл = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
				НовыйЭл.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				НовыйЭл.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипСвязи");
				НовыйЭл.ПравоеЗначение = лкТипСвязи;
			КонецЕсли;
		ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя = "ГруппаВсе" Тогда
			
			Если ЗначениеЗаполнено(ВыборкаЗП) Тогда
				НовыйЭл = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
				НовыйЭл.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				НовыйЭл.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Выборка");
				НовыйЭл.ПравоеЗначение = ВыборкаЗП;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(лкТипСвязи) Тогда
				НовыйЭл = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
				НовыйЭл.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				НовыйЭл.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипСвязи");
				НовыйЭл.ПравоеЗначение = лкТипСвязи;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ПолеВопрос) Тогда
				НовыйЭл = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
				НовыйЭл.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				НовыйЭл.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Вопрос");
				НовыйЭл.ПравоеЗначение = ПолеВопрос;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(лкТипВзаимоотношений) Тогда
				НовыйЭл = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
				НовыйЭл.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				НовыйЭл.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТипОбращения");
				НовыйЭл.ПравоеЗначение = лкТипВзаимоотношений;
			КонецЕсли;
			
			
		КонецЕсли;
				
		Если ЗначениеЗаполнено(лкПроект) Тогда
			НовыйЭл = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
			НовыйЭл.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			НовыйЭл.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Проект");
			НовыйЭл.ПравоеЗначение = лкПроект;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьДанныеВ3p(Команда)
	ДобавитьДанныеВ3pНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДобавитьДанныеВ3pНаСервере()
	
	ОбновитьВыборкуНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура ПолеПроектПриИзменении(Элемент)
	
	ОбновитьВыборкуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	ОбновитьВыборкуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	ОбновитьВыборкуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВесьПериодПриИзменении(Элемент)
	
	ОбновитьВыборкуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборкаЗППриИзменении(Элемент)
	
	ОбновитьВыборкуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеВопросПриИзменении(Элемент)
	
	ОбновитьВыборкуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьВыборкуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
		
	Если Поле.Имя = "НомерКарты_3p" Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.КтоЗвонил) И Элемент.ТекущиеДанные.КтоЗвонил <> ПолучитьТекпользователя() Тогда
			
			Предупреждение("Этот покупатель уже обрабатывается другим оператором.");
			
		Иначе
			
			УстановитьОтветственногоНаСервере(Элемент.ТекущиеДанные.id_3p);			
			
		КонецЕсли;
		
		Если СокрЛП(Элемент.ТекущиеДанные.НомерКарты_3p) = "" Тогда
			Предупреждение("Не указан номер карты!");
			Возврат;
		КонецЕсли;	
		
		СтруктураПараметровФормы = Новый Структура;
		СтруктураПараметровФормы.Вставить("Email", Элемент.ТекущиеДанные.НомерКарты_3p);	
		ОткрытьФорму("Обработка.ОтчетыПоКартам.Форма.КарточкаКлиента", СтруктураПараметровФормы);
		
		Элемент.Обновить();
				
		//ОбновитьВыборкуНаСервере();
		
	ИначеЕсли Поле.Имя = "НомерКарты_3p1"	Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.КтоЗвонил1) И Элемент.ТекущиеДанные.КтоЗвонил1 <> ПолучитьТекпользователя() Тогда
			
			Предупреждение("Этот покупатель уже обрабатывается другим оператором.");
			
		Иначе
			
			УстановитьОтветственногоНаСервере(Элемент.ТекущиеДанные.id_3p1);			
			
		КонецЕсли;
		
		Если СокрЛП(Элемент.ТекущиеДанные.НомерКарты_3p1) = "" Тогда
			Предупреждение("Не указан номер карты!");
			Возврат;
		КонецЕсли;	
		
		СтруктураПараметровФормы = Новый Структура;
		СтруктураПараметровФормы.Вставить("Email", Элемент.ТекущиеДанные.НомерКарты_3p1);	
		ОткрытьФорму("Обработка.ОтчетыПоКартам.Форма.КарточкаКлиента", СтруктураПараметровФормы);
		
		Элемент.Обновить();
		
	ИначеЕсли Поле.Имя = "НомерКарты_3p2"	Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.КтоЗвонил2) И Элемент.ТекущиеДанные.КтоЗвонил2 <> ПолучитьТекпользователя() Тогда
			
			Предупреждение("Этот покупатель уже обрабатывается другим оператором.");
			
		Иначе
			
			УстановитьОтветственногоНаСервере(Элемент.ТекущиеДанные.id_3p2);			
			
		КонецЕсли;
		
		Если СокрЛП(Элемент.ТекущиеДанные.НомерКарты_3p2) = "" Тогда
			Предупреждение("Не указан номер карты!");
			Возврат;
		КонецЕсли;	
		
		СтруктураПараметровФормы = Новый Структура;
		СтруктураПараметровФормы.Вставить("Email", Элемент.ТекущиеДанные.НомерКарты_3p2);	
		ОткрытьФорму("Обработка.ОтчетыПоКартам.Форма.КарточкаКлиента", СтруктураПараметровФормы);
		
		Элемент.Обновить();
			
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТекпользователя()
	
	Возврат СокрЛП(ПараметрыСеанса.ТекущийПользователь);	
	
КонецФункции


Процедура УстановитьОтветственногоНаСервере(лкid_3p)
	
	НаборЗап = РегистрыСведений.ОбращенияКПокупателям.СоздатьНаборЗаписей();
	НаборЗап.Отбор.id_3p.Установить(лкid_3p);
	НаборЗап.Прочитать();
	НаборЗап[0].ДатаЗвонка = ТекущаяДата();
	НаборЗап[0].КтоЗвонил = СокрЛП(ПараметрыСеанса.ТекущийПользователь);
	НаборЗап.Записать();
	
КонецПроцедуры


&НаКлиенте
Процедура СписокПередНачаломИзменения(Элемент, Отказ)
	
	//Отказ = Истина;
	//Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.КтоЗвонил) И Элемент.ТекущиеДанные.КтоЗвонил <> ПолучитьТекпользователя() Тогда
	////	
	//	Предупреждение("Этот покупатель уже обрабатывается другим оператором.");
	////	
	//Иначе
	//УстановитьОтветственногоНаСервере(Элемент.ТекущиеДанные.id_3p);
	////	
	////	//Элемент.Обновить();
	////	
	////	//лкТекстр = Элемент.ТекущаяСтрока;
	////	//
	////	ОбновитьВыборкуНаСервере();
	////	//
	////	//Элемент.ТекущаяСтрока = лкТекстр;
	////	
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ОбновитьВыборкуНаСервере();
		
КонецПроцедуры


&НаКлиенте
Процедура ПолучитьОтчетС_ФИО(Команда)
	
	ОбновитьВыборкуНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьРассылки(Команда)

	ОбновитьВыборкуНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура ВыборкаЗП1ПриИзменении(Элемент)
	
	ОбновитьВыборкуНаСервере();
		
КонецПроцедуры


&НаКлиенте
Процедура лкТипСвязиПриИзменении(Элемент)
	
	ОбновитьВыборкуНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура ВыборкаЗП2ПриИзменении(Элемент)
		
	ОбновитьВыборкуНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура ПолеВопрос1ПриИзменении(Элемент)
	
	ОбновитьВыборкуНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура лкТипСвязи1ПриИзменении(Элемент)
	
	ОбновитьВыборкуНаСервере();
	
КонецПроцедуры


&НаКлиенте
Процедура ОчиститьПустышки(Команда)
	
	Если Вопрос("Будут удалены все записи регистра с пустым полем ""Кто звонил"". Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		ОчиститьПустышкиНаСервере();	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьПустышкиНаСервере()
	
	лкОтбор = Новый Структура;
	лкОтбор.Вставить("КтоЗвонил", "");
	
	Выборка = РегистрыСведений.ОбращенияКПокупателям.Выбрать(лкОтбор);
	Пока Выборка.Следующий() Цикл 
		Если Выборка.КтоЗвонил = "" Тогда
			Выборка.ПолучитьМенеджерЗаписи().Удалить();	
		КонецЕсли;	
	КонецЦикла;	
	
	
КонецПроцедуры

&НаКлиенте
Процедура РассылкаПриИзменении(Элемент)
	
	УстановитьТекстРассылкиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекстРассылкиНаСервере()
	
	Если ЗначениеЗаполнено(ЭтаФорма.Рассылка) Тогда
		СообщениеДляРассылки = ЭтаФорма.Рассылка.ТекстСообщения;
	Иначе
		СообщениеДляРассылки = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоЖалобе(Команда)
	
	ТекФорма = ПолучитьФорму("РегистрСведений.ОбращенияПокупателей.Форма.ФормаВыбораЖалоб");
	
	ТекФорма.Список.Отбор.Элементы.Очистить();
	ЭлементОтбора = ТекФорма.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НужноОбзвонить");
	ЭлементОтбора.ПравоеЗначение = Истина;
	ЭлементОтбора.Использование = Истина;
	
	ТекФорма.лкПроект = лкПроект;
	
	ТекФорма.Открыть();
	
КонецПроцедуры

// +++ АК CHUM 20.09.2017 0-00017062
&НаКлиенте
Процедура АК_ОтобразитьКартыДляЗвонковПриИзменении(Элемент)
	
	ОбновитьВыборкуНаСервере();
	
КонецПроцедуры
// --- АК

//+++ АК bara 11.11.2017 17217
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "фсОбращенийПокупателейОбновить" Тогда
	  	ОбновитьВыборкуНаСервере();
	КонецЕсли;
КонецПроцедуры
