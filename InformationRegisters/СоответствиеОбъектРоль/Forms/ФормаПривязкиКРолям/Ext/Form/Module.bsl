//////////////////////////////////

&НаСервере
Функция ПроверитьИЗаписатьДанныеНаСервере()

	//
	ВсеОК = Истина;
	
	//
	_тзРоли = тзРоли.Выгрузить();
	_тзРоли.Сортировать("Пометка ВОЗР");
	
	//
	Для каждого СтрокаТЗ Из _тзРоли Цикл
		
		//
		Если СтрокаТЗ.Пометка Тогда
			
			//
			МЗ = РегистрыСведений.СоответствиеОбъектРоль.СоздатьМенеджерЗаписи();
			
			//
			МЗ.Период = ТекущаяДата();
			
			//
			МЗ.ТипРоли = СтрокаТЗ.ТипРоли;
			МЗ.Объект = ТекущийОбъект;
			
			//
			МЗ.РольПользователя = СтрокаТЗ.Роль;
			
			//
			МЗ.ТипРолиID = СтрокаТЗ.ТипРоли.Код;
			
			//
			Попытка
				МЗ.Записать();
			Исключение
				ВсеОК = Ложь;
			КонецПопытки;	
			
		Иначе
			
			//
			СП = Новый Структура;
			СП.Вставить("ТипРоли", СтрокаТЗ.ТипРоли);
			СП.Вставить("Объект", ТекущийОбъект);
			
			//
			СрезПоследних = РегистрыСведений.СоответствиеОбъектРоль.ПолучитьПоследнее(, СП);
			Если ЗначениеЗаполнено(СрезПоследних.РольПользователя) Тогда
				
				//
				МЗ = РегистрыСведений.СоответствиеОбъектРоль.СоздатьМенеджерЗаписи();
				
				//
				МЗ.Период = ТекущаяДата();
			
				//
				МЗ.ТипРоли = СтрокаТЗ.ТипРоли;
				МЗ.Объект = ТекущийОбъект;
				
				//
				МЗ.РольПользователя = Неопределено;
				
				//
				МЗ.ТипРолиID = СтрокаТЗ.ТипРоли.Код;
				
				//
				Попытка
					МЗ.Записать();
				Исключение
					ВсеОК = Ложь;
				КонецПопытки;
			
			КонецЕсли; 
			
		КонецЕсли; 
	
	КонецЦикла; 

	//
	Возврат ВсеОК;
	
КонецФункции
 
&НаКлиенте
Функция ПроверитьИЗаписатьДанные()

	//
	ВсеОК = Истина;
	
	//
	СП = Новый Структура;
	СП.Вставить("Пометка", Истина);
	
	//
	НайденныеСтроки = тзРоли.НайтиСтроки(СП);
	Если НайденныеСтроки.Количество() = 0 Тогда
		
		//
		Предупреждение("Объект должен быть привязан хотя бы к одной Роли");
		Возврат Ложь;		
	
	КонецЕсли; 
	
	//
	Возврат ПроверитьИЗаписатьДанныеНаСервере();

КонецФункции

//////////////////////////////////

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//
	Параметры.Свойство("Объект", ТекущийОбъект);
	
	//
	Если ЗначениеЗаполнено(ТекущийОбъект) Тогда
		
		//
		МассивДоступныхРолей = Новый Массив;
		МассивДоступныхТиповРолей = Новый Массив;
		
		//
		ТЗ = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		     |	РолиПользователейТипыРолей.Ссылка,
		     |	РолиПользователейТипыРолей.ТипРоли,
		     |	РолиПользователейТипыРолей.ТипРоли.ТипСтруктурнойЕдиницы КАК ТипСтруктурнойЕдиницы
		     |ИЗ
		     |	Справочник.РолиПользователей.ТипыРолей КАК РолиПользователейТипыРолей
		     |{ГДЕ
		     |	РолиПользователейТипыРолей.Ссылка.* КАК Роль,
		     |	РолиПользователейТипыРолей.ТипРоли.* КАК ТипРоли,
		     |	РолиПользователейТипыРолей.ТипРоли.ТипСтруктурнойЕдиницы.* КАК ТипСтруктурнойЕдиницы}";
			 
		//
		ПЗ = Новый ПостроительЗапроса;
		ПЗ.Текст = ТЗ;
		
		//
		Если ТипЗнч(ТекущийОбъект) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
			
			//
			ЭлементОтбора = ПЗ.Отбор.Добавить("ТипСтруктурнойЕдиницы");
			ЭлементОтбора.Установить(ТекущийОбъект.ТипСтруктурнойединицы);
			
		КонецЕсли; 
		
		//
		ПЗ.Выполнить();
		
		//
		Выборка = ПЗ.Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			//
			Если Выборка.ТипРоли.ТипЗначения.СодержитТип(ТипЗнч(ТекущийОбъект)) Тогда
				
				//
				МассивДоступныхРолей.Добавить(Выборка.Ссылка);
				МассивДоступныхТиповРолей.Добавить(Выборка.ТипРоли);
				
			КонецЕсли; 
		
		КонецЦикла; 
		
		//
		ТЗ = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		     |	РолиПользователей.Ссылка КАК Роль,
		     |	РолиПользователей.ТипРоли КАК ТипРоли,
		     |	РолиПользователей.Ссылка.Наименование КАК Наименование,
		     |	ВЫБОР
		     |		КОГДА НЕ СоответствиеОбъектРольСрезПоследних.Объект ЕСТЬ NULL 
		     |			ТОГДА ИСТИНА
		     |		ИНАЧЕ ЛОЖЬ
		     |	КОНЕЦ КАК Пометка,
		     |	РолиПользователей.Ссылка.ПометкаУдаления
		     |ИЗ
		     |	Справочник.РолиПользователей.ТипыРолей КАК РолиПользователей
		     |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних КАК СоответствиеОбъектРольСрезПоследних
		     |		ПО РолиПользователей.Ссылка = СоответствиеОбъектРольСрезПоследних.РольПользователя
		     |			И (СоответствиеОбъектРольСрезПоследних.Объект = &Объект)
		     |ГДЕ
		     |	РолиПользователей.Ссылка В(&ДоступныеРоли)
		     |	И РолиПользователей.ТипРоли В(&ДоступныеТипы)
		     |
		     |УПОРЯДОЧИТЬ ПО
		     |	Наименование";
			 
		//
		ПЗ = Новый ПостроительЗапроса;
		ПЗ.Текст = ТЗ;
		
		//
		ПЗ.Параметры.Вставить("Объект", ТекущийОбъект);
		ПЗ.Параметры.Вставить("ДоступныеРоли", МассивДоступныхРолей);
		ПЗ.Параметры.Вставить("ДоступныеТипы", МассивДоступныхТиповРолей);
		
		//
		Выборка = ПЗ.Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			//
			НоваяСтрока = тзРоли.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
		КонецЦикла; 
	
	КонецЕсли; 
	
КонецПроцедуры

/////////////////////////////////////

&НаКлиенте
Процедура КомандаЗаписать(Команда)
	
	//
	ВсеОК = ПроверитьИЗаписатьДанные();
	
	//
	Если ВсеОК Тогда
		Модифицированность = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

/////////////////////////////////////

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	
	//
	ВсеОК = ПроверитьИЗаписатьДанные();
	
	//
	Если ВсеОК Тогда
		
		//
		Модифицированность = Ложь;
		
		//
		Закрыть();
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура тзРолиПометкаПриИзменении(Элемент)
	
	//
	ТекущиеДанные = Элементы.тзРоли.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//
	Пометка = ТекущиеДанные.Пометка;
	Если Пометка Тогда
		
		//
		Для каждого СтрокаТЗ Из тзРоли Цикл
			
			//
			Если СтрокаТЗ.Роль = ТекущиеДанные.Роль Тогда
				Продолжить;
			КонецЕсли; 
			
			//
			Если СтрокаТЗ.ТипРоли <> ТекущиеДанные.ТипРоли Тогда
				Продолжить;
			КонецЕсли; 
			
			//
			СтрокаТЗ.Пометка = НЕ (СтрокаТЗ.ТипРоли = ТекущиеДанные.ТипРоли);
		
		КонецЦикла; 
	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//
	Заголовок = "Роли для " + ТекущийОбъект;
	
КонецПроцедуры
