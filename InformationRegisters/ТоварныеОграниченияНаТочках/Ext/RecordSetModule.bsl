
Процедура ПередЗаписью(Отказ, Замещение)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТТ", ЭтотОбъект.Выгрузить().ВыгрузитьКолонку("ТорговаяТочка"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтруктурныеЕдиницы.Ссылка,
	|	СтруктурныеЕдиницы.id_TT
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	СтруктурныеЕдиницы.Ссылка В(&ТТ)";
				   
	ТабКеш = Запрос.Выполнить().Выгрузить();
	
	ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	Для Каждого Запись Из ЭтотОбъект Цикл
		Если Запись.id_TT = 0 Тогда
			СтрокаКеш = ТабКеш.Найти(Запись.ТорговаяТочка, "Ссылка");
			Если НЕ СтрокаКеш = Неопределено Тогда
				Запись.id_TT = СтрокаКеш.id_TT;
			КонецЕсли;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Запись.ДатаСозданияЗаписи) Тогда
			Запись.ДатаСозданияЗаписи = ТекущаяДата();
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Запись.Автор) Тогда
			Запись.Автор = ТекПользователь;
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры


//+++АК KIRN 2018.03.14 ИП-00018083      
Процедура ПриЗаписи(Отказ, Замещение)
	//ЭтотОбъект.ДополнительныеСвойства.Вставить("РезультатПроверки","Ок");
	Если ЭтотОбъект.Количество()=0 Тогда
		Возврат;
	Конецесли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(т.ГруппаНоменклатуры КАК Справочник.Номенклатура) КАК Номенклатура,
	               |	ВЫРАЗИТЬ(т.ТорговаяТочка КАК Справочник.СтруктурныеЕдиницы) КАК ТорговаяТочка
	               |ПОМЕСТИТЬ вт_Набор0
	               |ИЗ
	               |	&Набор КАК т
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	т.Номенклатура КАК Номенклатура,
	               |	т.ТорговаяТочка КАК ТорговаяТочка,
	               |	т.Номенклатура.ТорговаяМарка КАК ТорговаяМарка,
	               |	т.ТорговаяТочка.ТипРозничнойТочки КАК ТипТТ
	               |ПОМЕСТИТЬ вт_Набор
	               |ИЗ
	               |	вт_Набор0 КАК т
				   |ГДЕ 
				   |	т.ТорговаяТочка <> &ПустаяТТ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	вт.Номенклатура,
	               |	вт.ТорговаяМарка,
	               |	вт.ТорговаяТочка,
	               |	вт.ТипТТ,
	               |	рс.ТорговаяМарка КАК ТорговаяМаркаС
	               |ИЗ
	               |	вт_Набор КАК вт
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеТиповРозничныхТочекИТорговыхМарок КАК рс
	               |		ПО вт.ТорговаяМарка = рс.ТорговаяМарка
	               |			И вт.ТипТТ = рс.ТипРозничнойТочки
	               |ГДЕ
	               |	(рс.ТорговаяМарка ЕСТЬ NULL)";
	тз_Набор = ЭтотОбъект.Выгрузить();
	Запрос.УстановитьПараметр("Набор",тз_Набор);
	Запрос.УстановитьПараметр("ПустаяТТ",Справочники.СтруктурныеЕдиницы.ПустаяСсылка());
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕСли;
	Выборка = РезультатЗапроса.Выбрать();
	ТекстОшибки = "";
	Пока Выборка.Следующий() Цикл
		Отказ = Истина;
		ТекстОшибки = ТекстОшибки+"
			|Для номенклатуры <"+Выборка.Номенклатура+"> торговая марка <"+Выборка.ТорговаяМарка+"> не соответствует типу розничной точки <"+Выборка.ТипТТ+">";
	КонецЦикла;
	
	Если Отказ Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ТекстОшибки;
		//Сообщение.УстановитьДанные(тз_Набор[0].Регистратор);
		Сообщение.Сообщить();
	КонецЕСли;
	
КонецПроцедуры
//---АК KIRN 
