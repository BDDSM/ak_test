
&НаСервереБезКонтекста
Функция ПолучитьСтатус(СтрокаСтатуса)
	
	Если СтрокаСтатуса = "НуженКурьер" Тогда
 		Возврат Перечисления.АК_СтатусыЗаказаКурьера.НуженКурьер;
	ИначеЕсли СтрокаСтатуса = "Доставлено" Тогда
		Возврат Перечисления.АК_СтатусыЗаказаКурьера.Доставлено;
	ИначеЕсли СтрокаСтатуса = "КурьерОтправлен" Тогда
		Возврат Перечисления.АК_СтатусыЗаказаКурьера.КурьерОтправлен;
	ИначеЕсли СтрокаСтатуса = "ПолученОтвет" Тогда
		Возврат Перечисления.АК_СтатусыЗаказаКурьера.ПолученОтвет;
	ИначеЕсли СтрокаСтатуса = "КурьерОтменен" Тогда
		Возврат Перечисления.АК_СтатусыЗаказаКурьера.КурьерОтменен;
	КонецЕсли;
	
КонецФункции

Функция НайтиЖалобуСервер(НомерЖалобы, ВозвратКлюча)
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("id_OK", НомерЖалобы);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ОбращенияПокупателей.Телефон,
	|	ОбращенияПокупателей.id_OK,
	|	ОбращенияПокупателей.GUID_Загрузки,
	|	ОбращенияПокупателей.ДатаДок
	|ИЗ
	|	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	|ГДЕ
	|	ОбращенияПокупателей.id_OK = &id_OK";
	ВыборкаЖалоб = Запрос.Выполнить().Выбрать();
	
	//
	//ЖалобаНайдена = Ложь;
	Если ВозвратКлюча Тогда
		СтрокаКлючей = "id_OK, GUID_Загрузки, ДатаДок";
		СтруктураЗначенийКлюча = Новый Структура(СтрокаКлючей);
	Иначе
		СтрокаКлючей = "";
		СтруктураЗначенийКлюча = Неопределено;
	КонецЕсли;
	
	Если ВыборкаЖалоб.Следующий() Тогда
		//ЖалобаНайдена = Истина;
		Если ВозвратКлюча Тогда
			ЗаполнитьЗначенияСвойств(СтруктураЗначенийКлюча, ВыборкаЖалоб, СтрокаКлючей);
			Возврат РегистрыСведений.ОбращенияПокупателей.СоздатьКлючЗаписи(СтруктураЗначенийКлюча); 
		Иначе
			Возврат ВыборкаЖалоб.Телефон;
		КонецЕсли;
		//Прервать;
	КонецЕсли;;
	
	//Если НЕ ЖалобаНайдена Тогда
	Возврат Неопределено;
	//КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура GUID_ЖалобыОткрытие(Элемент, СтандартнаяОбработка)
	
	// открытие жалобы по ГУИДу из регистра сведений ОбращенияПокупателей
	ТекЖалоба = НайтиЖалобуСервер(Запись.ID_ok_Жалобы, Истина);
	Если ТекЖалоба = Неопределено тогда
		Предупреждение("В базе не найдена жалоба с номером " + Запись.ID_ok_Жалобы);
		Возврат;
	КонецЕсли;

	//
	СтруктураПараметров = Новый Структура("Ключ", ТекЖалоба);
	ОткрытьФорму("РегистрСведений.ОбращенияПокупателей.ФормаЗаписи", СтруктураПараметров);
	
КонецПроцедуры

Процедура УстановитьТехнолога()
	
	Запись.Технолог = Запись.Номенклатура.Технолог;
	
КонецПроцедуры

Функция ПолучитьАдресТТ()
	
	Возврат Запись.СтруктурнаяЕдиница.Адрес;
	
КонецФункции

Функция ПолучитьТелефонТТ()
	
	Возврат Строка(Запись.СтруктурнаяЕдиница.ТелефонныйНомер1) +
					?(ЗначениеЗаполнено(Запись.СтруктурнаяЕдиница.ТелефонныйНомер2), ", " + Строка(Запись.СтруктурнаяЕдиница.ТелефонныйНомер2), "");
КонецФункции


&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.ФИО_Передающего.Видимость		= НЕ Запись.ЗабратьИзМагазина;
	Элементы.НомерКарты.Видимость			= НЕ Запись.ЗабратьИзМагазина;
	Элементы.СтруктурнаяЕдиница.Видимость 	= Запись.ЗабратьИзМагазина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьАдресИТелефон()
	
	Заявка = НайтиЖалобуСервер(Запись.ID_ok_Жалобы, Ложь);
	Если Заявка = Неопределено
			И Запись.ЗабратьИзМагазина Тогда
		Запись.АдресПередающего	= "";
		запись.ТелефонПередающего	= "";
	Иначе
		Запись.АдресПередающего	= ?(Запись.ЗабратьИзМагазина
										И ЗначениеЗаполнено(Запись.СтруктурнаяЕдиница),	ПолучитьАдресТТ(), "");
		Запись.ТелефонПередающего	= ?(Запись.ЗабратьИзМагазина, ПолучитьТелефонТТ(), Строка(Заявка));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗабратьИзМагазинаПриИзменении(Элемент)
	
	ОпределитьАдресИТелефон();
	УстановитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусЗаказаКурьераПриИзменении(Элемент)
	
	Если Запись.СтатусЗаказаКурьера = ПолучитьСтатус("КурьерОтменен") Тогда
		
		Если Вопрос("Отменить заказ курьера?", РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет, "Подтвердите отмену") = КодВозвратаДиалога.Нет Тогда
			Запись.СтатусЗаказаКурьера = ЭтаФорма.ТекСтатус;
			Возврат;
		КонецЕсли;
		
	ИначеЕсли Запись.СтатусЗаказаКурьера = ПолучитьСтатус("ПолученОтвет") Тогда
		
		Запись.ДатаОтвета = ТекущаяДата();
		Элементы.ДатаОтвета.ЦветТекста = Новый Цвет(0, 0, 0);
		
	ИначеЕсли Запись.СтатусЗаказаКурьера = ПолучитьСтатус("Доставлено") Тогда
		
		Запись.ДатаДоставки = ТекущаяДата();
		Элементы.ДатаДоставки.ЦветТекста = Новый Цвет(0, 0, 0);
		
	КонецЕсли;
	
	РасчитатьДатуОтвета();
	ЭтаФорма.ТекСтатус = Запись.СтатусЗаказаКурьера;
	
КонецПроцедуры

Функция НайтиЖалобу(Идентификатор, Заполнить)
	
	Отбор = Новый Структура("ID_ok_Жалобы", Идентификатор);
	
	Запрос = Новый Запрос;
	ВыборкаЖалоб = РегистрыСведений.АК_ЖалобыСКурьерскойДоставкой.Выбрать(Отбор);
	ЗаявкаНайдена = Ложь;
	Пока ВыборкаЖалоб.Следующий() Цикл
		ЗаявкаНайдена = Истина;
		Если Заполнить Тогда
			ЗаполнитьЗначенияСвойств(ЭтаФорма.Запись, ВыборкаЖалоб.ПолучитьМенеджерЗаписи());
		КонецЕсли;
		Возврат Строка(ВыборкаЖалоб.ПолучитьМенеджерЗаписи().СтатусЗаказаКурьера);
		Прервать;
	КонецЦикла;
	
	Если НЕ ЗаявкаНайдена Тогда
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ТипЗнч(ЭтаФорма.ВладелецФормы) = Тип("УправляемаяФорма") Тогда
		
		Жалоба = НайтиЖалобу(ЭтаФорма.ВладелецФормы.Запись.id_OK, Истина);
		Если Жалоба = Неопределено тогда
			Запись.ID_ok_Жалобы = ЭтаФорма.ВладелецФормы.Запись.id_OK;
			Заявка = ЭтаФорма.ВладелецФормы.Запись;
			Запись.ID_ok_Жалобы			= Заявка.id_OK;
			Запись.ЗабратьИзМагазина	= Истина;
			Запись.ДатаОбращения		= Заявка.ДатаДок;
			Запись.Номенклатура			= Заявка.Номенклатура;
			Запись.Производитель		= Заявка.Производитель;
			Запись.НомерКарты			= Заявка.Номер_Карты_ОК;
			Запись.СтатусЗаказаКурьера	= ПолучитьСтатус("НуженКурьер");
			Запись.СтруктурнаяЕдиница	= Заявка.СтруктурнаяЕдиница;
			//ЭтаФорма.запись.Технолог=Запись.Номенклатура.Технолог;
			УстановитьТехнолога();
			Запись.ФИО_Передающего 		= Заявка.ФИО_Покупателя;
			ОпределитьАдресИТелефон();
		КонецЕсли;
		
	КонецЕсли;
	ЭтаФорма.ТекСтатус = Запись.СтатусЗаказаКурьера;
	
	УстановитьВидимость();
	ОтметитьПросрочки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ТипЗнч(ЭтаФорма.ВладелецФормы) = Тип("УправляемаяФорма") Тогда
		ЗаписанныйЗаказКурьера = НайтиЖалобу(Запись.ID_ok_Жалобы, Ложь);
		Если ЗаписанныйЗаказКурьера <> Неопределено Тогда
			ЭтаФорма.ВладелецФормы.Элементы.ФормаЗаказКурьера.Заголовок = "Заказ курьера. Текущий статус - " + Строка(ЗаписанныйЗаказКурьера);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ДатаДоставкиПриИзменении(Элемент)
	
	РасчитатьДатуОтвета();
	
КонецПроцедуры

&НаКлиенте
Процедура РасчитатьДатуОтвета()
	
	Если ЗначениеЗаполнено(Запись.ДатаДоставки)
			И Запись.СтатусЗаказаКурьера = ПолучитьСтатус("Доставлено")
			И НЕ ЗначениеЗаполнено(Запись.ДатаОтвета) Тогда
		Запись.ДатаОтвета = Запись.ДатаДоставки + 7*24*3600;
	КонецЕсли;
	
	ОтметитьПросрочки();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьПросрочки()
	
	Если Запись.СтатусЗаказаКурьера = ПолучитьСтатус("НуженКурьер")
			ИЛИ Запись.СтатусЗаказаКурьера = ПолучитьСтатус("КурьерОтправлен") Тогда
		
		Если ЗначениеЗаполнено(Запись.ДатаДоставки)
				И ТекущаяДата() > КонецДня(Запись.ДатаДоставки) Тогда
			Элементы.ДатаДоставки.ЦветТекста = Новый Цвет(255, 0, 0);
		Иначе
			Элементы.ДатаДоставки.ЦветТекста = Новый Цвет(0, 0, 0);
		КонецЕсли;
		
	ИначеЕсли Запись.СтатусЗаказаКурьера = ПолучитьСтатус("Доставлено") Тогда
		
		Если ЗначениеЗаполнено(Запись.ДатаОтвета)
				И ТекущаяДата() > КонецДня(Запись.ДатаОтвета) Тогда
			Элементы.ДатаОтвета.ЦветТекста = Новый Цвет(255, 0, 0);
		Иначе
			Элементы.ДатаОтвета.ЦветТекста = Новый Цвет(0, 0, 0);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОтветаПриИзменении(Элемент)
	
	ОтметитьПросрочки();
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	ТабДок = ЗаполнитьТабличныйДокумент();
	ТабДок.Показать("Жалоба с заказом курьера " + Строка(Запись.ID_ok_Жалобы));
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьТабличныйДокумент()
	
	ТабДок = Новый ТабличныйДокумент;
	
	Макет = РегистрыСведений.АК_ЖалобыСКурьерскойДоставкой.ПолучитьМакет("Макет");;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Статус			= Запись.СтатусЗаказаКурьера;
	ОбластьМакета.Параметры.ДатаДоставки	= Запись.ДатаДоставки;
	ОбластьМакета.Параметры.ФИОТТ			= ?(Запись.ЗабратьИзМагазина, Запись.СтруктурнаяЕдиница, Запись.ФИО_Передающего);
	ОбластьМакета.Параметры.Телефон			= Запись.ТелефонПередающего;
	ОбластьМакета.Параметры.Адрес			= Запись.АдресПередающего;
	ОбластьМакета.Параметры.Номенклатура	= Запись.Номенклатура;
	ОбластьМакета.Параметры.ДатаОбращения	= Запись.ДатаОбращения;
	ОбластьМакета.Параметры.ДатаОтвета		= Запись.ДатаОтвета;
	ОбластьМакета.Параметры.Производитель	= Запись.Производитель;
    ОбластьМакета.Параметры.Технолог		= Запись.Технолог;
	ТабДок.Вывести(ОбластьМакета);
	
	Возврат ТабДок;
	
КонецФункции

&НаКлиенте
Процедура СтруктурнаяЕдиницаПриИзменении(Элемент)
	
	ОпределитьАдресИТелефон();
	
КонецПроцедуры
