
Процедура ПриЗаписи(Отказ, Замещение)
	
	Характеристики = Новый Массив;
	
	Для Каждого Строка Из ЭтотОбъект Цикл
		Если Характеристики.Найти(Строка.Характеристика)=Неопределено Тогда
			
			Характеристики.Добавить(Строка.Характеристика);
		КонецЕсли; 
	КонецЦикла;  
	
	Для Каждого ЭлементОтбора Из ЭтотОбъект.Отбор Цикл
		Если ЭлементОтбора.ПутьКДанным="Характеристика" И ЗначениеЗаполнено(ЭлементОтбора.Значение) Тогда
			Если Характеристики.Найти(ЭлементОтбора.Значение)=Неопределено Тогда
				Характеристики.Добавить(ЭлементОтбора.Значение);
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;  
	
	МассивУзлов = Новый Массив;
	
	//+++АК SHEP 20160810: исключаем ненужные узлы
	ПрофилиИспользования = Новый Массив;
	ПрофилиИспользования.Добавить(ПредопределенноеЗначение("Справочник.МП_ПрофилиИспользования.Строитель"));
	ПрофилиИспользования.Добавить(ПредопределенноеЗначение("Справочник.МП_ПрофилиИспользования.ПлановыйАссортимент"));
	ПрофилиИспользования.Добавить(ПредопределенноеЗначение("Справочник.МП_ПрофилиИспользования.НовыеТоварыТехнолог"));
	ПрофилиИспользования.Добавить(ПредопределенноеЗначение("Справочник.МП_ПрофилиИспользования.НовыеТоварПостановщикЗадач"));
	//---АК SHEP 20160810
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МобильноеПриложение.Ссылка
	|ИЗ
	|	ПланОбмена.МобильноеПриложение КАК МобильноеПриложение
	|ГДЕ
	|	МобильноеПриложение.Ссылка <> &ЭтотУзел
	|	И МобильноеПриложение.Магазин = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	И НЕ МобильноеПриложение.Профиль В (&ПрофилиИспользования)";
	Запрос.УстановитьПараметр("ПрофилиИспользования", ПрофилиИспользования);
	Запрос.УстановитьПараметр("ЭтотУзел", ПланыОбмена.МобильноеПриложение.ЭтотУзел());
	
	МассивУзлов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Для Каждого Характеристика Из Характеристики Цикл
		ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов, Характеристика);
	КонецЦикла;  
	
	//+++АК POZM 2018.08.20 ИП-00018918.02
	Попытка
		ОтправитьИзвещенияОбИзмененииКванта(Характеристики);
	Исключение
		
	КонецПопытки;	
	//---АК POZM 
КонецПроцедуры
//+++АК POZM 2018.08.20 ИП-00018918.02
Процедура ОтправитьИзвещенияОбИзмененииКванта(Характеристики)
		ТекстЗапроса="ВЫБРАТЬ
		             |	РасчетчикиГруппыНоменклатуры.Ссылка.УчетнаяЗаписьЭлектроннойПочты КАК Почта,
		             |	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
		             |	РасчетчикиГруппыНоменклатуры.Ссылка.УчетнаяЗаписьЭлектроннойПочты.АдресЭлектроннойПочты КАК АдресЭлектроннойПочты
		             |ИЗ
		             |	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Расчетчики.ГруппыНоменклатуры КАК РасчетчикиГруппыНоменклатуры
		             |		ПО ХарактеристикиНоменклатуры.Владелец = РасчетчикиГруппыНоменклатуры.ГруппаНоменклатуры
		             |ГДЕ
		             |	ХарактеристикиНоменклатуры.Ссылка В(&СписокХарактеристик)
		             |
		             |СГРУППИРОВАТЬ ПО
		             |	РасчетчикиГруппыНоменклатуры.Ссылка.УчетнаяЗаписьЭлектроннойПочты,
		             |	ХарактеристикиНоменклатуры.Ссылка,
		             |	РасчетчикиГруппыНоменклатуры.Ссылка.УчетнаяЗаписьЭлектроннойПочты.АдресЭлектроннойПочты
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ
		             |	НормативныйКвантУпаковкиСрезПоследних.Период КАК Период,
		             |	НормативныйКвантУпаковкиСрезПоследних.Склад КАК Склад,
		             |	НормативныйКвантУпаковкиСрезПоследних.Характеристика КАК Характеристика,
					 |	НормативныйКвантУпаковкиСрезПоследних.Характеристика.Владелец КАК Номенклатура,
		             |	НормативныйКвантУпаковкиСрезПоследних.Квант КАК Квант
		             |ИЗ
		             |	РегистрСведений.НормативныйКвантУпаковки.СрезПоследних(&ДатаСреза, Характеристика В (&СписокХарактеристик)) КАК НормативныйКвантУпаковкиСрезПоследних";

	Запрос = Новый Запрос(ТекстЗапроса);
	ДатаСреза = ТекущаяДата();
	Попытка
	
		ДатаСреза = ЭтотОбъект.Отбор.Период.Значение;
	
	Исключение
	
	КонецПопытки; 
	Запрос.УстановитьПараметр("ДатаСреза",НачалоДня(ДатаСреза)-24*60*60);	
	Запрос.УстановитьПараметр("СписокХарактеристик",Характеристики);
	Результат = Запрос.ВыполнитьПакет();
	ХарактеристикиРасчетчиков = Результат[0].Выгрузить();
	Расчетчики = ХарактеристикиРасчетчиков.Скопировать();
	Расчетчики.Свернуть("Почта");
	ТЗДляРассылки = Результат[1].Выгрузить();
	
	ТЗДляРассылки.Колонки.Добавить("Почта");
	ТЗДляРассылки.Колонки.Добавить("АдресЭлектроннойПочты");
	ТЗДляРассылки.Колонки.Добавить("ТекКвант");
	
	Для каждого Запись Из ЭтотОбъект Цикл
	
		СтрокиТЗ = ТЗДляРассылки.НайтиСтроки(Новый Структура("Характеристика,Склад",Запись.Характеристика,Запись.Склад));
		Если СтрокиТЗ.Количество() > 0 Тогда
			Для каждого СтрокаТЗ Из СтрокиТЗ Цикл
			
				СтрокаТЗ.ТекКвант = Запись.Квант;
				СтрокиХарактеристикиРасчетчиков = ХарактеристикиРасчетчиков.НайтиСтроки(Новый Структура("Характеристика",Запись.Характеристика));
				Если СтрокиХарактеристикиРасчетчиков.Количество() > 0 Тогда
					СтрокаТЗ.Почта = СтрокиХарактеристикиРасчетчиков[0].Почта;
					СтрокаТЗ.АдресЭлектроннойПочты = СтрокиХарактеристикиРасчетчиков[0].АдресЭлектроннойПочты;
				КонецЕсли;	
			КонецЦикла; 
		Иначе
			НС = ТЗДляРассылки.Добавить();
			НС.Склад = Запись.Склад;
			НС.Характеристика = Запись.Характеристика;
			НС.Номенклатура = ОбщегоНазначения.ПолучитьЗначениеРеквизита(НС.Характеристика,"Владелец");
			СтрокаТЗ.ТекКвант = Запись.Квант;
			СтрокиХарактеристикиРасчетчиков = ХарактеристикиРасчетчиков.НайтиСтроки(Новый Структура("Характеристика",Запись.Характеристика));
			Если СтрокиХарактеристикиРасчетчиков.Количество() > 0 Тогда
				СтрокиТЗ.Почта = СтрокиХарактеристикиРасчетчиков[0].Почта;
				СтрокиТЗ.АдресЭлектроннойПочты = СтрокиХарактеристикиРасчетчиков[0].АдресЭлектроннойПочты;
			КонецЕсли;	
		КонецЕсли;	
	
	КонецЦикла; 
	
	Для каждого Расчетчик Из Расчетчики Цикл
	
		ВыборкаСтрок = ХарактеристикиРасчетчиков.НайтиСтроки(Новый Структура("Почта",Расчетчик.Почта));
		Если ВыборкаСтрок.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		Выборка = ВыборкаСтрок[0];
	    Если Не ЗначениеЗаполнено(Выборка.Почта) Тогда
			Продолжить;
		КонецЕсли;	
		
		//Отправка письма
		Адрес = СокрЛП(Выборка.АдресЭлектроннойПочты);
		СписокКому = Новый СписокЗначений;
		Если Адрес<>"" Тогда
			СпАдресов=Новый СписокЗначений;
			МассивАдресов=Справочники.Контрагенты.РазложитьСтрокуВМассивПодстрок(Адрес,";");	
			Для каждого Эл Из МассивАдресов Цикл
				Если ЗначениеЗаполнено(Эл) Тогда
					СписокКому.Добавить(СокрЛП(Эл));
				КонецЕсли; 
			КонецЦикла; 
		КонецЕсли;
		
			
		//СписокКому.Добавить(ВыборкаДетальныеЗаписи.Представление);
		
		СписокКому.Добавить("pozm@automacon.ru");
		//СписокКому.Добавить("sora@automacon.ru");
		
		
		УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
		
		Почта = Новый ИнтернетПочта;
		Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
		Письмо = Новый ИнтернетПочтовоеСообщение;
		
		Почта.Подключиться(Профиль);
		Письмо.Тема = "Измененные нормативные кванты характеристики номенклатуры, на: "+Формат(ТекущаяДата(),"ДЛФ=DDT");
		Письмо.ИмяОтправителя 	= "" + УчетнаяЗапись + "";
		Письмо.ИмяОтправителя  	= "" + СокрЛП(УчетнаяЗапись) + "";
		Письмо.Отправитель     	= "" + СокрЛП(УчетнаяЗапись) + "";
		Для Каждого ПолучательЭлемент Из СписокКому Цикл
			Получатель = Письмо.Получатели.Добавить();
			Получатель.Адрес = ПолучательЭлемент.Значение;
		КонецЦикла;	
		
		
		ТЗХарактеристик = ТЗДляРассылки.Скопировать(Новый Структура("Почта",Выборка.Почта));
		Если ТЗХарактеристик.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;	
		
		ТекстПисьма="";
		ЕстьЧтоОтправить = Ложь;
		Для каждого СтрХарактеристик Из ТЗХарактеристик Цикл
			Если СтрХарактеристик.ТекКвант = СтрХарактеристик.Квант Тогда
				Продолжить;
			КонецЕсли;	
			ТТекстПисьма="";
			ТТекстПисьма = ТТекстПисьма + Символы.ПС + СтрХарактеристик.Номенклатура + ", " + СтрХарактеристик.Характеристика;
			ЕстьИзменения = Ложь;
		    
			
			ТТекстПисьма = ТТекстПисьма + Символы.ПС;
			ТТекстПисьма = ТТекстПисьма + Символы.ПС + "          " + "Измененен реквизит: Нормативный квант";
			ТТекстПисьма = ТТекстПисьма + Символы.ПС + "          " + "Предыдущее значение: " + СтрХарактеристик.Квант;
			ТТекстПисьма = ТТекстПисьма + Символы.ПС + "          " + "Новое значение: " + СтрХарактеристик.ТекКвант;
			ТТекстПисьма = ТТекстПисьма + Символы.ПС + "          " + "Автор изменений: " + ПараметрыСеанса.ТекущийПользователь;
			ТТекстПисьма = ТТекстПисьма + Символы.ПС + "          " + "Изменения вступают в силу с: "+Формат(НачалоДня(ДатаСреза),"ДФ=dd.MM.yyyy");
			ТТекстПисьма = ТТекстПисьма + Символы.ПС;
			ЕстьЧтоОтправить = Истина;
						
			ТекстПисьма = ТекстПисьма + ТТекстПисьма + Символы.ПС;
		КонецЦикла; 
		Если Не ЕстьЧтоОтправить Тогда
			Продолжить;
		КонецЕсли;	
		//---АК POZM 
		
		ТекстСообщения = Письмо.Тексты.Добавить();
		ТекстСообщения.Текст     = "";
		ТекстСообщения.Текст 	 = ТекстСообщения.Текст + Символы.ПС + Символы.ПС;
		ТекстСообщения.Текст	 = ТекстСообщения.Текст + ТекстПисьма;
		ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
						
		Почта.Послать(Письмо);
		
		Почта.Отключиться();
		
		Сообщить("Отправлено письмо "+Выборка.Почта);
	КонецЦикла;	
КонецПроцедуры	
//---АК POZM 
