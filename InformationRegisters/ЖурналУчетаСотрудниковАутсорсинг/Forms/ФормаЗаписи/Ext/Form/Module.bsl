
&НаСервереБезКонтекста
Функция ПолучитьКонтрагентСотрудника(мДатаОтметки, мСотрудник)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза"			, ?(ЗначениеЗаполнено(мДатаОтметки), мДатаОтметки, ТекущаяДата()));
	Запрос.УстановитьПараметр("ГруппаСотрудников"	, мСотрудник.ГруппаСотрудников);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КонтрагентыСотрудников.Контрагент
	|ИЗ
	|	РегистрСведений.КонтрагентыСотрудниковАутсорсинг.СрезПоследних(&ДатаСреза, ГруппаСотрудников = &ГруппаСотрудников) КАК КонтрагентыСотрудников";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Контрагент;
	КонецЕсли;
	
	Возврат Справочники.Контрагенты.ПустаяСсылка();
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДолжностьСотрудника(мСотрудник)
	
	Возврат мСотрудник.Должность;
	
КонецФункции


&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекДатаЗапрета = Константы.ГраницаЗапретаРасчетаСотрудниковАутсорсинг.Получить();
	Если ЗначениеЗаполнено(ТекДатаЗапрета) Тогда
		Для каждого Запись Из ТекущийОбъект Цикл
			Если Запись.Период > ТекДатаЗапрета Тогда
				Продолжить;
			КонецЕсли;
			Сообщить("Период записи должен быть больше даты запрета редактирования данных по сотрудникам (аутсорсннг)! Запись невозможна.");
			Отказ = Истина;
			Возврат;
		КонецЦикла;
	КонецЕсли;  
	
	Если НЕ Запись.Контрагент = Запись.Сотрудник.Контрагент Тогда
		Запись.Контрагент = Запись.Сотрудник.Контрагент;
	КонецЕсли;
	Если НЕ Запись.Должность = Запись.Сотрудник.Должность Тогда
		Запись.Должность = Запись.Сотрудник.Должность;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	Запись.Контрагент 	= ПолучитьКонтрагентСотрудника(Запись.ДатаОтметки, Запись.Сотрудник);
	Запись.Должность 	= ПолучитьДолжностьСотрудника(Запись.Сотрудник);
	
КонецПроцедуры
