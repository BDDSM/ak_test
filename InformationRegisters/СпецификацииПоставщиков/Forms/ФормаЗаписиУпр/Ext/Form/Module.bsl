
Процедура ХарактеристикаПриИзмененииСервер()
	
	Запись.Поставщик = Неопределено;
    Если ЗначениеЗаполнено(Запись.Характеристика) Тогда
		
		Запрос = Новый Запрос;
	    Запрос.УстановитьПараметр("Дата"			, Запись.Период);
	    Запрос.УстановитьПараметр("Характеристика"	, Запись.Характеристика);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныПоставщиковСрезПоследних.Поставщик,
		|	1 КАК Приоритет
		|ИЗ
		|	РегистрСведений.ЦеныПоставщиков.СрезПоследних(
		|			&Дата,
		|			Характеристика = &Характеристика
		|				) КАК ЦеныПоставщиковСрезПоследних
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Значение,
		|	2
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Объект = &Характеристика
		|	И ЗначенияСвойствОбъектов.Объект.Неактивная = ЛОЖЬ
		|	И ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет";
		Результат = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = Результат.Выбрать();

		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Запись.Поставщик = ВыборкаДетальныеЗаписи.Поставщик;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Запись.Номенклатура) Тогда
			Запись.Номенклатура = Запись.Характеристика.Владелец;
		КонецЕсли; 
		
	КонецЕсли; 

КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикаПриИзменении(Элемент)
	
	ХарактеристикаПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Запись.Поставщик) Тогда
		ХарактеристикаПриИзменении(Неопределено);
	КонецЕсли; 
	
	ДатаПриОткрытии = Запись.Период;
	
КонецПроцедуры

Функция ПолучитьДатуЗапрета()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ГраницыЗапретаИзмененияДанных.ГраницаЗапретаИзменений) КАК ГраницаЗапретаИзменений
	|ИЗ
	|	РегистрСведений.ГраницыЗапретаИзмененияДанных КАК ГраницыЗапретаИзмененияДанных
	|ГДЕ
	|	(ГраницыЗапретаИзмененияДанных.Пользователь = &Пользователь
	|			ИЛИ ГраницыЗапретаИзмененияДанных.Пользователь = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|			ИЛИ ГраницыЗапретаИзмененияДанных.Пользователь = НЕОПРЕДЕЛЕНО)
	|	И ГраницыЗапретаИзмененияДанных.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат ?(Выборка.ГраницаЗапретаИзменений = Null, '00010101', Выборка.ГраницаЗапретаИзменений);
	Иначе
		Возврат '00010101';
	КонецЕсли;	
	
КонецФункции

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(Запись.ДатаКонца)
			И Запись.ДатаКонца <= Запись.Период Тогда
		Сообщить("Неверная дата окончания");
		Отказ = Истина;
	КонецЕсли; 
	
	ДатаЗапрета = ПолучитьДатуЗапрета();
	
	Если ЗначениеЗаполнено(ДатаЗапрета) Тогда
		Если ЗначениеЗаполнено(ДатаПриОткрытии) Тогда
			Если ДатаЗапрета >= ДатаПриОткрытии Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Запись с составом спецификации находится или переносится в закрытый период",,,, Отказ);
			КонецЕсли;	
		КонецЕсли;
		
		Если НЕ Отказ Тогда
			Если ДатаЗапрета >= Запись.Период Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Запись с составом спецификации находится или переносится в закрытый период",,,, Отказ);
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры
