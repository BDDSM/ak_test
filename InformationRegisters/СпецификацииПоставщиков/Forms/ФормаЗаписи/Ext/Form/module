
Процедура ХарактеристикаПриИзменении(Элемент)
	
	Поставщик = Неопределено;
    Если ЗначениеЗаполнено(Характеристика) Тогда
		
		Запрос = Новый Запрос;
	    Запрос.УстановитьПараметр("Характеристика"	, Характеристика);
	    Запрос.УстановитьПараметр("Дата"			, Период);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦеныПоставщиковСрезПоследних.Поставщик,
		|	1 КАК Приоритет
		|ИЗ
		|	РегистрСведений.ЦеныПоставщиков.СрезПоследних(
		|			&Дата,
		|			Характеристика = &Характеристика) КАК ЦеныПоставщиковСрезПоследних
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Значение,
		|	2
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Объект = &Характеристика
		|	И ЗначенияСвойствОбъектов.Объект.Неактивная = ЛОЖЬ
		|	И ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет";
		Результат = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = Результат.Выбрать();

		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Поставщик = ВыборкаДетальныеЗаписи.Поставщик;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Номенклатура) Тогда
			Номенклатура = Характеристика.Владелец;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура НоменклатураСырьеПриИзменении(Элемент)
	
	ЕдиницаИзмерения = Неопределено;
	НоменклатураСыр = Элемент.Значение;
	Если ЗначениеЗаполнено(НоменклатураСыр) Тогда
		ЕдиницаИзмерения = ПолучитьБазовуюЕдиницуИзмерения(НоменклатураСыр);
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьБазовуюЕдиницуИзмерения(Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура"			, Номенклатура);
	Запрос.УстановитьПараметр("ЕдиницаПоКлассификатору"	, Номенклатура.БазоваяЕдиницаИзмерения);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕдиницыИзмерения.Ссылка КАК ЕдиницаИзмерения
	|ИЗ
	|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|ГДЕ
	|	ЕдиницыИзмерения.Владелец = &Номенклатура
	|	И ЕдиницыИзмерения.ЕдиницаПоКлассификатору = &ЕдиницаПоКлассификатору
	|	И НЕ ЕдиницыИзмерения.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ЕдиницаИзмерения;
	КонецЕсли;
	
	Возврат Справочники.ЕдиницыИзмерения.ПустаяСсылка();
	
	Возврат Номенклатура.БазоваяЕдиницаИзмерения;
	
КонецФункции

Функция ПолучитьДатуЗапрета()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МИНИМУМ(ГраницыЗапретаИзмененияДанных.ГраницаЗапретаИзменений) КАК ГраницаЗапретаИзменений
	|ИЗ
	|	РегистрСведений.ГраницыЗапретаИзмененияДанных КАК ГраницыЗапретаИзмененияДанных
	|ГДЕ
	|	(ГраницыЗапретаИзмененияДанных.Пользователь = &Пользователь
	|			ИЛИ ГраницыЗапретаИзмененияДанных.Пользователь = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|			ИЛИ ГраницыЗапретаИзмененияДанных.Пользователь = НЕОПРЕДЕЛЕНО)
	|	И ГраницыЗапретаИзмененияДанных.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат ?(Выборка.ГраницаЗапретаИзменений = Null, '00010101', Выборка.ГраницаЗапретаИзменений);
	КонецЕсли;	
	
	Возврат '00010101';
	
КонецФункции


Процедура ПриОткрытии()
	                                 
	Если ПараметрОбъектКопирования <> Неопределено Тогда
		
		СоответствиеГраницЗапрета = ПолныеПрава.ПолучитьГраницыЗапретаИзмененияДанных().Получить();
		
		Если СоответствиеГраницЗапрета <> Неопределено Тогда
			
			ДатаЗапрета = СоответствиеГраницЗапрета.Получить(Справочники.Организации.ПустаяСсылка());
			
			Если ДатаЗапрета <> Неопределено Тогда
				
				Если ДатаЗапрета >= Период Тогда
					Период = '00010101';	
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Поставщик) Тогда
		ХарактеристикаПриИзменении(Неопределено);
	КонецЕсли;
	
	ДатаПриОткрытии = Период;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	СоответствиеГраницЗапрета = ПолныеПрава.ПолучитьГраницыЗапретаИзмененияДанных().Получить();
	
	Если СоответствиеГраницЗапрета <> Неопределено Тогда
		
		ДатаЗапрета = СоответствиеГраницЗапрета.Получить(Справочники.Организации.ПустаяСсылка());
		
		Если ДатаЗапрета <> Неопределено Тогда
			
			Если ДатаЗапрета >= Период Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя вносить изменения в закрытый период! Запись не выполнена!",,,,Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаКонца)
			И ДатаКонца <= Период Тогда
		Сообщить("Неверная дата окончания");
		Отказ = Истина;
	КонецЕсли;
	
	ДатаЗапрета = ПолучитьДатуЗапрета();
	
	Если ЗначениеЗаполнено(ДатаЗапрета) Тогда
		
		Если ЗначениеЗаполнено(ДатаПриОткрытии) Тогда
			Если ДатаЗапрета >= ДатаПриОткрытии Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Запись с составом спецификации находится или переносится в закрытый период",,,, Отказ);
			КонецЕсли;	
		КонецЕсли;
		
		Если НЕ Отказ Тогда
			Если ДатаЗапрета >= Период Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Запись с составом спецификации находится или переносится в закрытый период",,,, Отказ);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


Процедура ОсновныеДействияФормыДействие(Кнопка)
	
	Если Модифицированность() Тогда
		Сообщить("Необходимо сохранить данные");
		Возврат;
	КонецЕсли; 
	
	Мен = РегистрыСведений.СпецификацииПоставщиков.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Мен, ЭтаФорма.РегистрСведенийМенеджерЗаписи);
	ФормаЗап = Мен.ПолучитьФорму("ФормаЗаписиДоп", ЭтаФорма);
	ФормаЗап.Открыть();
	
КонецПроцедуры

//+++АК БЕЛН 2017.01.17
Процедура ЗаполнитьХарактеристикуПоПроизводителю()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Владелец", Номенклатура);
	Запрос.УстановитьПараметр("Значение", Поставщик);
	//Запрос.Текст = "ВЫБРАТЬ
	//|	ХарактеристикиНоменклатуры.Ссылка
	//|ИЗ
	//|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	//|		ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов.Объект
	//|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
	//|ГДЕ
	//|	ХарактеристикиНоменклатуры.Владелец = &Владелец
	//|	И ЗначенияСвойствОбъектов.Значение = &Значение";
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЦеныПоставщиковСрезПоследних.Характеристика
	|ИЗ
	|	РегистрСведений.ЦеныПоставщиков.СрезПоследних(, Номенклатура = &Владелец) КАК ЦеныПоставщиковСрезПоследних
	|ГДЕ
	|	ЦеныПоставщиковСрезПоследних.Поставщик = &Значение";			   
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Характеристика = Выборка.Характеристика;
	Иначе	
		Характеристика = Неопределено;
	КонецЕсли;
	
КонецПроцедуры	

Процедура НоменклатураПриИзменении(Элемент)
	
	ЗаполнитьХарактеристикуПоПроизводителю();
	
КонецПроцедуры
//---АК БЕЛН 2017.01.17
