
Процедура ПередЗаписью(Отказ)
	
	//СоответствиеГраницЗапрета = ПолныеПрава.ПолучитьГраницыЗапретаИзмененияДанных().Получить();
	//
	//Если СоответствиеГраницЗапрета <> Неопределено Тогда
	//	
	//	ДатаЗапрета = СоответствиеГраницЗапрета.Получить(Справочники.Организации.ПустаяСсылка());
	//	
	//	Если ДатаЗапрета <> Неопределено Тогда
	//		
	//		Если ДатаЗапрета >= Период Тогда
	//			
	//			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя вносить изменения в закрытый период! Запись не выполнена!",,,,Отказ);
	//			
	//		КонецЕсли;
	//		
	//	КонецЕсли;
	//	
	//КонецЕсли;
	
КонецПроцедуры

Процедура ХарактеристикаПриИзменении(Элемент)
	Поставщик=Неопределено;
    Если ЗначениеЗаполнено(Характеристика) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ЦеныПоставщиковСрезПоследних.Поставщик,
			|	1 КАК Приоритет
			|ИЗ
			|	РегистрСведений.ЦеныПоставщиков.СрезПоследних(
			|			&Дата,
			|			Характеристика = &Характеристика
			|				И Характеристика.Неактивная = ЛОЖЬ) КАК ЦеныПоставщиковСрезПоследних
			|
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	ЗначенияСвойствОбъектов.Значение,
			|	2
			|ИЗ
			|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
			|ГДЕ
			|	ЗначенияСвойствОбъектов.Объект = &Характеристика
			|	И ЗначенияСвойствОбъектов.Объект.Неактивная = ЛОЖЬ
			|	И ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель)
			|
			|УПОРЯДОЧИТЬ ПО
			|	Приоритет";
	    Запрос.УстановитьПараметр("Характеристика",Характеристика);
	    Запрос.УстановитьПараметр("Дата",Период);
		Результат = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = Результат.Выбрать();

		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Поставщик=ВыборкаДетальныеЗаписи.Поставщик;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Номенклатура) Тогда
			Номенклатура=Характеристика.Владелец;
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

Процедура НоменклатураСырьеПриИзменении(Элемент)
	ЕдиницаИзмерения=Неопределено;
	НоменклатураСыр = Элемент.Значение;
	Если ЗначениеЗаполнено(НоменклатураСыр) Тогда
		ЕдиницаИзмерения	= ПолучитьБазовуюЕдиницуИзмерения(НоменклатураСыр);
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьБазовуюЕдиницуИзмерения(Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЕдиницаПоКлассификатору",Номенклатура.БазоваяЕдиницаИзмерения);
	Запрос.УстановитьПараметр("Номенклатура",			Номенклатура);
	
	Запрос.Текст= 	"ВЫБРАТЬ
	              	|	ЕдиницыИзмерения.Ссылка КАК ЕдиницаИзмерения
	              	|ИЗ
	              	|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	              	|ГДЕ
	              	|	ЕдиницыИзмерения.Владелец = &Номенклатура
	              	|	И ЕдиницыИзмерения.ЕдиницаПоКлассификатору = &ЕдиницаПоКлассификатору
	              	|	И НЕ ЕдиницыИзмерения.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ЕдиницаИзмерения;
	КонецЕсли;
	
	Возврат Справочники.ЕдиницыИзмерения.ПустаяСсылка();
	
	Возврат Номенклатура.БазоваяЕдиницаИзмерения;
	
КонецФункции

Процедура ПриОткрытии()
	Если Не ЗначениеЗаполнено(Поставщик) Тогда
		ХарактеристикаПриИзменении(Неопределено);
	КонецЕсли; 
КонецПроцедуры

Процедура ОсновныеДействияФормыЗаписатьЗапись(Кнопка)
	//ЗаполнитьЗначенияСвойств(ВладелецФормы.РегистрСведенийМенеджерЗаписи,РегистрСведенийМенеджерЗаписи);
	//ВладелецФормы.Модифицированность=Ложь;
	Если ЗначениеЗаполнено(ДатаКонца) и ДатаКонца<=Период Тогда
		Сообщить("Неверная дата окончания");
		Возврат;
	КонецЕсли; 
	РегистрСведенийМенеджерЗаписи.Записать(Истина);
	ВладелецФормы.Прочитать();
КонецПроцедуры
