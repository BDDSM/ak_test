Процедура ДействияФормыПроводкиДтКт(Кнопка)

	Если ЭлементыФормы.ЖурналДокументовСписок.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	БухгалтерскийУчет.ОткрытьЖурналПроводок(ЭлементыФормы.ЖурналДокументовСписок.ТекущиеДанные.Ссылка);

КонецПроцедуры

Процедура ДействияФормыВыгрузитьВБухгалтерию(Кнопка)
	
	Обр = Обработки.НастройкаВыгрузкиПлатёжныхДокументовВБП.Создать();
	Обр.ПолучитьФорму().Открыть();
	
КонецПроцедуры

Процедура ДатаПриИзменении(Элемент)

	УстановитьОтборПоДате();

	ОбновитьИтогиПриИзмененииОтбора();

	УстановитьВидимость();
	
КонецПроцедуры

Процедура УстановитьОтборПоДате()

	ОтключитьОбработчикИзмененияДанных("ЖурналДокументовСписок.Отбор");
	
	Если Дата = '00010101' Тогда
		Отбор.Дата.Использование = Ложь;
	Иначе
		Отбор.Дата.ВидСравнения = ВидСравнения.ИнтервалВключаяГраницы;
		Отбор.Дата.ЗначениеС = НачалоДня(Дата);
		Отбор.Дата.ЗначениеПо = КонецДня(Дата);
		Отбор.Дата.Использование = Истина;
	КонецЕсли;
	
	ПодключитьОбработчикИзмененияДанных("ЖурналДокументовСписок.Отбор", "ЖурналДокументовСписокПриИзмененииОтбора", Истина);

КонецПроцедуры // УстановитьОтборПоДате()	

Процедура ЖурналДокументовСписокПриИзмененииОтбора(ПутьКДанным = "")
	
	Если ЖурналДокументовСписок.Отбор.СтруктурнаяЕдиница.Использование
		И ЖурналДокументовСписок.Отбор.СтруктурнаяЕдиница.ВидСравнения = ВидСравнения.Равно Тогда
		СтруктурнаяЕдиница = ЖурналДокументовСписок.Отбор.СтруктурнаяЕдиница.Значение;
	Иначе
		СтруктурнаяЕдиница = Неопределено;
	КонецЕсли;
	
	Если ЖурналДокументовСписок.Отбор.СтатьяДвиженияДенежныхСредств.Использование
		И ЖурналДокументовСписок.Отбор.СтатьяДвиженияДенежныхСредств.ВидСравнения = ВидСравнения.Равно Тогда
		СтатьяДвиженияДенежныхСредств = ЖурналДокументовСписок.Отбор.СтатьяДвиженияДенежныхСредств.Значение;
	Иначе
		СтатьяДвиженияДенежныхСредств = Неопределено;
	КонецЕсли;
	
	Если ЖурналДокументовСписок.Отбор.Дата.Использование
		И ЖурналДокументовСписок.Отбор.Дата.ВидСравнения = ВидСравнения.ИнтервалВключаяГраницы Тогда
		Дата = ЖурналДокументовСписок.Отбор.Дата.ЗначениеС;
	Иначе
		Дата = Неопределено;
	КонецЕсли;
	
	Если ЖурналДокументовСписок.Отбор.Комментарий.Использование
		И ЖурналДокументовСписок.Отбор.Комментарий.ВидСравнения = ВидСравнения.Содержит Тогда
		Комментарий = ЖурналДокументовСписок.Отбор.Комментарий.Значение;
	Иначе
		Комментарий = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьВидимость()
	
	//ВидимостьОрганизации = НЕ (ЖурналДокументовСписок.Отбор.Организация.Использование
	//	И ЖурналДокументовСписок.Отбор.Организация.ВидСравнения = ВидСравнения.Равно);
	//ЭлементыФормы.ЖурналДокументовСписок.Колонки.Организация.Видимость = ВидимостьОрганизации;
	//
	//ВидимостьБанковскогоСчета = НЕ (ЖурналДокументовСписок.Отбор.БанковскийСчет.Использование
	//	И ЖурналДокументовСписок.Отбор.БанковскийСчет.ВидСравнения = ВидСравнения.Равно);
	//ЭлементыФормы.ЖурналДокументовСписок.Колонки.БанковскийСчет.Видимость = ВидимостьБанковскогоСчета;
	//
	ВидимостьДаты = НЕ (ЖурналДокументовСписок.Отбор.Дата.Использование
		И ЖурналДокументовСписок.Отбор.Дата.ВидСравнения = ВидСравнения.ИнтервалВключаяГраницы
		И КонецДня(ЖурналДокументовСписок.Отбор.Дата.ЗначениеС) = КонецДня(ЖурналДокументовСписок.Отбор.Дата.ЗначениеПо));
	ЭлементыФормы.ЖурналДокументовСписок.Колонки.Дата.Видимость = ВидимостьДаты;
	
КонецПроцедуры

Процедура ОбновитьИтогиПриИзмененииОтбора()

	ТекБанковскийСчет = СтруктурнаяЕдиница;
	Если ЗначениеЗаполнено(СтруктурнаяЕдиница) И Дата = '00010101' Тогда
		ТекДата = ОбщегоНазначения.ПолучитьРабочуюДату();
	Иначе
		ТекДата = Дата;
	КонецЕсли;
	
	ОбновитьИтоги(ТекДата, СтруктурнаяЕдиница, Истина);

КонецПроцедуры

// Обновление сумм остатков и оборотов за день в форме журнала
//
Процедура ОбновитьИтоги(ТекДата, ТекСтруктурнаяЕдиница, ВсегдаОбновлять = Ложь)

	Если ВсегдаОбновлять ИЛИ (ДатаИтогов <> ТекДата) ИЛИ (СтруктурнаяЕдиницаИтогов <> ТекСтруктурнаяЕдиница) Тогда
		
		ТаблицаИтогов = ПолучитьИтоги(ТекДата, СтруктурнаяЕдиница);
		
		СтруктурнаяЕдиницаИтогов = ТекСтруктурнаяЕдиница;
		ДатаИтогов           = ТекДата;
		
		НачальныйОстаток = ТаблицаИтогов.Итог("НачальныйОстаток");
		ВсегоИнкассация   = ТаблицаИтогов.Итог("ВсегоИнкассация");
		ВсегоПоступило   = ТаблицаИтогов.Итог("ВсегоПоступило");
		ВсегоСписано     = ТаблицаИтогов.Итог("ВсегоСписано");
		КонечныйОстаток  = ТаблицаИтогов.Итог("КонечныйОстаток");
		
		//ТаблицаИтоговПеремещения 	= ПолучитьИтогиПеремещения(ТекДата, ТекБанковскийСчет);
		//ВсегоПоступилоПеремещения   = ТаблицаИтоговПеремещения.Итог("ВсегоПоступило");
		//ВсегоСписаноПеремещения     = ТаблицаИтоговПеремещения.Итог("ВсегоСписано");
		
	КонецЕсли;
	
КонецПроцедуры


Функция ПолучитьИтоги(ТекДата, ТекСтруктурнаяЕдиница)

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФинансовыйОстаткиИОбороты.СуммаНачальныйОстаток КАК НачальныйОстаток,
	|	0 КАК ВсегоИнкассация,
	|	0 КАК ВсегоПоступило,
	|	ФинансовыйОстаткиИОбороты.СуммаОборотКт КАК ВсегоСписано,
	|	ФинансовыйОстаткиИОбороты.СуммаКонечныйОстаток КАК КонечныйОстаток
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.ОстаткиИОбороты(НАЧАЛОПЕРИОДА(&ДатаИтогов, ДЕНЬ), КОНЕЦПЕРИОДА(&ДатаИтогов, ДЕНЬ), , ДвиженияИГраницыПериода, , ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконто.СтруктурныеЕдиницы), Субконто1 = &СтруктурнаяЕдиницаИтогов) КАК ФинансовыйОстаткиИОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|		ПО ФинансовыйОстаткиИОбороты.Субконто1 = СтруктурныеЕдиницы.Ссылка
	|ГДЕ
	|	СтруктурныеЕдиницы.Ссылка = &СтруктурнаяЕдиницаИтогов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	NULL,
	|	СУММА(ВЫБОР
	|			КОГДА ФинансовыйДвиженияССубконто.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ДенежныеСредстваВПути)
	|				ТОГДА ФинансовыйДвиженияССубконто.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ),
	|	СУММА(ВЫБОР
	|			КОГДА (НЕ ФинансовыйДвиженияССубконто.СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ДенежныеСредстваВПути))
	|				ТОГДА ФинансовыйДвиженияССубконто.Сумма
	|			ИНАЧЕ 0
	|		КОНЕЦ),
	|	NULL,
	|	NULL
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.ДвиженияССубконто(НАЧАЛОПЕРИОДА(&ДатаИтогов, ДЕНЬ), КОНЕЦПЕРИОДА(&ДатаИтогов, ДЕНЬ), СубконтоДт1 = &СтруктурнаяЕдиницаИтогов, , ) КАК ФинансовыйДвиженияССубконто,
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	СтруктурныеЕдиницы.Ссылка = &СтруктурнаяЕдиницаИтогов И ФинансовыйДвиженияССубконто.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.Касса)
	|
	|СГРУППИРОВАТЬ ПО
	|	СтруктурныеЕдиницы.Ссылка";
	
	Запрос.УстановитьПараметр("ДатаИтогов", ТекДата);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиницаИтогов", ТекСтруктурнаяЕдиница);
	
	ТаблицаИтогов = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаИтогов;

КонецФункции

Процедура СтруктурнаяЕдиницаПриИзменении(Элемент)
	
	УстановитьОтборПоСтруктурнойЕдинице();
	
	ОбновитьИтогиПриИзмененииОтбора();

	УстановитьВидимость();
	
КонецПроцедуры

Процедура СтатьяДвиженияДенежныхСредствПриИзменении(Элемент)
	
	УстановитьОтборПоСтатьеДвиженияДенежныхСредств();
	
	ОбновитьИтогиПриИзмененииОтбора();

	УстановитьВидимость();
	
КонецПроцедуры

Процедура КомментарийПриИзменении(Элемент)

	УстановитьОтборПоКомментарию();

КонецПроцедуры

Процедура УстановитьОтборПоСтруктурнойЕдинице()

	ОтключитьОбработчикИзмененияДанных("ЖурналДокументовСписок.Отбор");

	Отбор.СтруктурнаяЕдиница.Установить(СтруктурнаяЕдиница, Не СтруктурнаяЕдиница.Пустая());
	
	ПодключитьОбработчикИзмененияДанных("ЖурналДокументовСписок.Отбор", "ЖурналДокументовСписокПриИзмененииОтбора", Истина);

КонецПроцедуры // УстановитьОтборПоСтруктурнойЕдинице()	

Процедура УстановитьОтборПоСтатьеДвиженияДенежныхСредств()
	
	ОтключитьОбработчикИзмененияДанных("ЖурналДокументовСписок.Отбор");

	Отбор.СтатьяДвиженияДенежныхСредств.Установить(СтатьяДвиженияДенежныхСредств, Не СтатьяДвиженияДенежныхСредств.Пустая());
	
	ПодключитьОбработчикИзмененияДанных("ЖурналДокументовСписок.Отбор", "ЖурналДокументовСписокПриИзмененииОтбора", Истина);
	
КонецПроцедуры //УстановитьОтборПоСтатьеДвиженияДенежныхСредств()

Процедура УстановитьОтборПоКомментарию()

	ОтключитьОбработчикИзмененияДанных("ЖурналДокументовСписок.Отбор");
	
	Если ПустаяСтрока(Комментарий) Тогда
		Отбор.Комментарий.Использование = Ложь;
	Иначе
		Отбор.Комментарий.ВидСравнения = ВидСравнения.Содержит;
		Отбор.Комментарий.Значение = Комментарий;
		Отбор.Комментарий.Использование = Истина;
	КонецЕсли;
	
	ПодключитьОбработчикИзмененияДанных("ЖурналДокументовСписок.Отбор", "ЖурналДокументовСписокПриИзмененииОтбора", Истина);
	
КонецПроцедуры //УстановитьОтборПоКомментарию()

Процедура ПриОткрытии()
	
	ПодключитьОбработчикИзмененияДанных("ЖурналДокументовСписок.Отбор", "ЖурналДокументовСписокПриИзмененииОтбора", Истина);
	
	УстановитьВидимость();
	
КонецПроцедуры

Процедура ЖурналДокументовСписокПередНачаломДобавления(Элемент, Отказ, Копирование)
	Если Копирование 
		ИЛИ (НЕ Отбор.ВидДокумента.Использование) Тогда
		Возврат;
	КонецЕсли;
	
	Отказ = Истина;
	
	ИмяДокумента = Отбор.ВидДокумента.Значение.Имя;
	Если ИмяДокумента  = "ЛистУчета" Тогда
		Возврат;
	КонецЕсли;
		
	НовыйДокумент = Документы[ИмяДокумента].СоздатьДокумент();
	
	Если ЗначениеЗаполнено(СтруктурнаяЕдиница) Тогда
		НовыйДокумент.СтруктурнаяЕдиница = СтруктурнаяЕдиница;
	КонецЕсли;
	Если ЗначениеЗаполнено(СтатьяДвиженияДенежныхСредств) Тогда
		НовыйДокумент.СтатьяДвиженияДенежныхСредств = СтатьяДвиженияДенежныхСредств;
	КонецЕсли;
	Если ЗначениеЗаполнено(Дата) Тогда
		НовыйДокумент.Дата = Дата;
	КонецЕсли;
	
	ФормаНового = НовыйДокумент.ПолучитьФорму();
	ФормаНового.Открыть();
КонецПроцедуры

Процедура ДействияФормыЗагрузитьЛУ(Кнопка)
	ЗагрузкаКассовыхОперацийПоЛистамУчета = Обработки.ЗагрузкаКассовыхОперацийПоЛистамУчета.Создать();
	ЗагрузкаКассовыхОперацийПоЛистамУчета.ВыполнитьЗагрузкуНаСервере();
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ОбновитьФорму" Тогда
		ОбновитьИтоги(ДатаИтогов, СтруктурнаяЕдиница, Истина);
	КонецЕсли;
КонецПроцедуры

Процедура ЖурналДокументовСписокПриАктивизацииСтроки(Элемент)
	
	ТекДанные = ЭлементыФормы.ЖурналДокументовСписок.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда
		ТекСтруктурнаяЕдиница = СтруктурнаяЕдиница;
		Если ЗначениеЗаполнено(СтруктурнаяЕдиница) И Дата = '00010101' Тогда
			ТекДата = ОбщегоНазначения.ПолучитьРабочуюДату();
		Иначе
			ТекДата = Дата;
		КонецЕсли;
	Иначе
		ТекДата = ТекДанные.Дата;
		ТекСтруктурнаяЕдиница = ТекДанные.СтруктурнаяЕдиница;
	КонецЕсли;
	
	ОбновитьИтоги(ТекДата, ТекСтруктурнаяЕдиница, Истина);
	
КонецПроцедуры
