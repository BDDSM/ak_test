
Функция ОбновитьМоделиИзSQL(ТаблицаМоделей) Экспорт
	
	НовыеМодели = Новый Массив;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТаблицаМоделей.id,
	                      |	ВЫРАЗИТЬ(ТаблицаМоделей.name КАК СТРОКА(100)) КАК name,
	                      |	ВЫРАЗИТЬ(ТаблицаМоделей.brand КАК СТРОКА(100)) КАК brand
	                      |ПОМЕСТИТЬ ВТ_Данные
	                      |ИЗ
	                      |	&ТаблицаМоделей КАК ТаблицаМоделей
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_Данные.id,
	                      |	ВТ_Данные.name,
	                      |	ВТ_Данные.brand,
	                      |	МоделиХолодильников.Ссылка
	                      |ИЗ
	                      |	ВТ_Данные КАК ВТ_Данные
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МоделиХолодильников КАК МоделиХолодильников
	                      |		ПО ВТ_Данные.id = МоделиХолодильников.Код
	                      |ГДЕ
	                      |	(МоделиХолодильников.Ссылка ЕСТЬ NULL
	                      |			ИЛИ ВТ_Данные.name <> МоделиХолодильников.Наименование
	                      |			ИЛИ ВТ_Данные.brand <> МоделиХолодильников.Производитель)");
	
	Запрос.УстановитьПараметр("ТаблицаМоделей", ТаблицаМоделей);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЭтоНоваяМодель = Ложь;
		
		Если Выборка.Ссылка = NULL Тогда
			МодельОбъект = Справочники.МоделиХолодильников.СоздатьЭлемент();
			МодельОбъект.Код = Выборка.id;
			ЭтоНоваяМодель = Истина;
		Иначе
			МодельОбъект = Выборка.Ссылка.ПолучитьОбъект();
		КонецЕсли; 

		МодельОбъект.Наименование = СокрЛП(Выборка.name);
		МодельОбъект.Производитель = СокрЛП(Выборка.brand);
		
		Попытка 
			МодельОбъект.Записать();
			
			Если ЭтоНоваяМодель Тогда
				НовыеМодели.Добавить(МодельОбъект.Наименование);				
			КонецЕсли; 
			
		Исключение
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Не удалось записать модель <%1> по причине: %2", МодельОбъект, ОписаниеОшибки());
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);			
		КонецПопытки; 
	КонецЦикла;   
	
	Возврат НовыеМодели;
	
КонецФункции


Процедура ОбновитьДатчикиИзSQL(ТаблицаДатчиков) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТаблицаДатчиков.id,
	                      |	ВЫРАЗИТЬ(ТаблицаДатчиков.name КАК СТРОКА(100)) КАК name,
	                      |	ТаблицаДатчиков.type,
	                      |	ТаблицаДатчиков.notActive
	                      |ПОМЕСТИТЬ ВТ_Данные
	                      |ИЗ
	                      |	&ТаблицаДатчиков КАК ТаблицаДатчиков
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_Данные.id,
	                      |	ВТ_Данные.name,
	                      |	ВЫБОР
	                      |		КОГДА ВТ_Данные.type = 0
	                      |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ИзмеряемыеПараметрыДатчиков.Температура)
	                      |		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ИзмеряемыеПараметрыДатчиков.Влажность)
	                      |	КОНЕЦ КАК ТипДатчика,
	                      |	ВЫБОР
	                      |		КОГДА ВТ_Данные.notActive = 0
	                      |			ТОГДА ЛОЖЬ
	                      |		ИНАЧЕ ИСТИНА
	                      |	КОНЕЦ КАК Неактивный,
	                      |	Датчики.Ссылка
	                      |ИЗ
	                      |	ВТ_Данные КАК ВТ_Данные
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Датчики КАК Датчики
	                      |		ПО ВТ_Данные.id = Датчики.ИД
	                      |ГДЕ
	                      |	(Датчики.Ссылка ЕСТЬ NULL
	                      |			ИЛИ ВТ_Данные.name <> Датчики.Наименование
	                      |			ИЛИ ВЫБОР
	                      |				КОГДА ВТ_Данные.notActive = 0
	                      |					ТОГДА ЛОЖЬ
	                      |				ИНАЧЕ ИСТИНА
	                      |			КОНЕЦ <> Датчики.ПометкаУдаления
	                      |			ИЛИ ВЫБОР
	                      |				КОГДА ВТ_Данные.type = 0
	                      |					ТОГДА ЗНАЧЕНИЕ(Перечисление.ИзмеряемыеПараметрыДатчиков.Температура)
	                      |				ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ИзмеряемыеПараметрыДатчиков.Влажность)
	                      |			КОНЕЦ <> Датчики.ИзмеряемыйПараметр)");
	
	Запрос.УстановитьПараметр("ТаблицаДатчиков", ТаблицаДатчиков);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	СтруктурнаяЕдиница = Константы.ЦФОДляУчетаОсновныхСредств.Получить();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Ссылка = NULL Тогда
			ДатчикОбъект = Справочники.Датчики.СоздатьЭлемент();
			ДатчикОбъект.ИД = Выборка.id;
		Иначе
			ДатчикОбъект = Выборка.Ссылка.ПолучитьОбъект();
		КонецЕсли; 

		ДатчикОбъект.Владелец = СтруктурнаяЕдиница;
		ДатчикОбъект.Наименование = СокрЛП(Выборка.name);
		ДатчикОбъект.ИзмеряемыйПараметр = Выборка.ТипДатчика;
		ДатчикОбъект.ПометкаУдаления = Выборка.Неактивный;		
		
		Попытка 
			ДатчикОбъект.Записать();
		Исключение
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Не удалось записать датчик <%1> по причине: %2", ДатчикОбъект, ОписаниеОшибки());
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);			
		КонецПопытки; 
	КонецЦикла;   
	
КонецПроцедуры 

