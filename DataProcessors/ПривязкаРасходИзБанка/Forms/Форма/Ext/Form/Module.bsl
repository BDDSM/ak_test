
&НаКлиенте
Процедура ПоступлениеВБанкПриИзменении(Элемент)

	ПоступлениеПОТекБухгалтеру(Объект.ПоступлениеВБанк);	
	
	УстановитьПривилегированныйРежим(Истина);
	Объект.ДокументыРасходИзБанка.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеВБанкРасходБанка.ДокументРасходИзБанка КАК ДокументРасходИзБанка,
	|	ПоступлениеВБанкРасходБанка.Сумма КАК Сумма
	|ИЗ
	|	Документ.ПоступлениеВБанк.РасходБанка КАК ПоступлениеВБанкРасходБанка
	|ГДЕ
	|	ПоступлениеВБанкРасходБанка.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.ПоступлениеВБанк);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НовСтр = Объект.ДокументыРасходИзБанка.Добавить();
		НовСтр.РасходИзБанка = ВыборкаДетальныеЗаписи.ДокументРасходИзБанка;
		НовСтр.Сумма = ВыборкаДетальныеЗаписи.Сумма;		
		
	КонецЦикла;
	
	Объект.Организация = Объект.ПоступлениеВБанк.Организация;
	Объект.СтатьяДвиженияДенежныхСредств = Объект.ПоступлениеВБанк.СтатьяДвиженияДенежныхСредств;
	Объект.Контрагент = Объект.ПоступлениеВБанк.Контрагент;
	Объект.ДоговорКонтрагента = Объект.ПоступлениеВБанк.ДоговорКонтрагента;
	Объект.СуммаДокумента = Объект.ПоступлениеВБанк.СуммаДокумента;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ПоступлениеПОТекБухгалтеру(ПоступлениеВБанк)
	Если РольДоступна("ПолныеПрава") Тогда 
		
	Иначе
		ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;	
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеВБанк.Ссылка
		|ИЗ
		|	Документ.ПоступлениеВБанк КАК ПоступлениеВБанк
		|ГДЕ
		|	ПоступлениеВБанк.Ссылка = &Ссылка
		|	И ПоступлениеВБанк.Контрагент.ОсновнойБухгалтерПокупателя = &ОсновнойБухгалтерПокупателя";
		
		Запрос.УстановитьПараметр("ОсновнойБухгалтерПокупателя", ТекущийПользователь);
		Запрос.УстановитьПараметр("Ссылка", ПоступлениеВБанк);
		
		Если Запрос.Выполнить().Пустой() Тогда 			
			Объект.ПоступлениеВБанк = Документы.ПоступлениеВБанк.ПустаяСсылка();
			Сообщить("Можно выбирать документ только по ответсвенному бухгалтеру.");			
		КонецЕсли;	
		
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура СохранитьИзменения(Команда)
	
	СохранитьИзмененияСервер();	
	
КонецПроцедуры

&НаСервере
Процедура СохранитьИзмененияСервер()
	 Отказ = Ложь;
	ИтогСумма = Объект.ДокументыРасходИзБанка.Итог("Сумма");
	Если ИтогСумма<>Объект.ПоступлениеВБанк.СуммаДокумента Тогда 
		Отказ = Истина;
		Сообщить("Суммы отличаются, запись не возможна.");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоступлениеВБанкРасходБанка.РасходИзБанка КАК ДокументРасходИзБанка,
	|	ПоступлениеВБанкРасходБанка.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	&РасходБанка КАК ПоступлениеВБанкРасходБанка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ.ДокументРасходИзБанка,
	|	СУММА(ВТ.Сумма) КАК Сумма,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ВТ.ДокументРасходИзБанка.Ссылка) КАК ДокументРасходИзБанкаСсылка
	|ИЗ
	|	ВТ КАК ВТ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ.ДокументРасходИзБанка";
	
	Запрос.УстановитьПараметр("РасходБанка",Объект.ДокументыРасходИзБанка.Выгрузить());
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.ДокументРасходИзБанкаСсылка>1 Тогда
			Отказ = Истина;
			Сообщить("Документ выбран несколько раз. "+ВыборкаДетальныеЗаписи.ДокументРасходИзБанка);
		Иначе
			Остаток =  ПолучитьОстатокПоРасходБанку(ВыборкаДетальныеЗаписи.ДокументРасходИзБанка,Объект.ПоступлениеВБанк);
			Если ВыборкаДетальныеЗаписи.Сумма > Остаток Тогда
				
				Отказ = Истина;
				Сообщить("По документу "+ВыборкаДетальныеЗаписи.ДокументРасходИзБанка+" превышен остаток.");	
			КонецЕсли;				
		КонецЕсли;			
	КонецЦикла;
	
	
	
	Если Отказ = Ложь Тогда 
		УстановитьПривилегированныйРежим(Истина);
		
		ОбПоступлениеВБанк = Объект.ПоступлениеВБанк.ПолучитьОбъект();
		ОбПоступлениеВБанк.ДокументыРасходИзБанкаУказаны = Истина;
		ОбПоступлениеВБанк.РасходБанка.Очистить();
		Для каждого Стр Из  Объект.ДокументыРасходИзБанка Цикл
			
			НовСтр = ОбПоступлениеВБанк.РасходБанка.Добавить();
			НовСтр.ДокументРасходИзБанка = Стр.РасходИзБанка;
			НовСтр.Сумма = Стр.Сумма;
			
		КонецЦикла;
		
		Если ОбПоступлениеВБанк.Проведен Тогда
			ОбПоступлениеВБанк.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			ОбПоступлениеВБанк.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
		Сообщить("Данные успешно записаны.");
		УстановитьПривилегированныйРежим(Истина);
		
	Иначе
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДокументыРасходИзБанкаСуммаПриИзменении(Элемент)
	
	СуммаОстаток = ПолучитьОстатокПоРасходБанку(Элементы.ДокументыРасходИзБанка.ТекущиеДанные.РасходИзБанка,Объект.ПоступлениеВБанк);		
	Если Элементы.ДокументыРасходИзБанка.ТекущиеДанные.Сумма > СуммаОстаток Тогда
		
		Элементы.ДокументыРасходИзБанка.ТекущиеДанные.Сумма = СуммаОстаток;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция  ПолучитьОстатокПоРасходБанку(РасходИзБанка,ТекДок )
	
	Запрос = Новый Запрос;
	Запрос.Текст = 	"ВЫБРАТЬ
	|	СУММА(ПоступлениеВБанкРасходБанка.Сумма) КАК Сумма,
	|	МАКСИМУМ(ПоступлениеВБанкРасходБанка.ДокументРасходИзБанка.СуммаДокумента) КАК ДокументРасходИзБанкаСуммаДокумента
	|ИЗ
	|	Документ.ПоступлениеВБанк.РасходБанка КАК ПоступлениеВБанкРасходБанка
	|ГДЕ
	|	ПоступлениеВБанкРасходБанка.ДокументРасходИзБанка = &ДокументРасходИзБанка
	|	И ПоступлениеВБанкРасходБанка.Ссылка.Проведен = ИСТИНА
	|	И ПоступлениеВБанкРасходБанка.Ссылка <> &ТекДок";
	
	Запрос.УстановитьПараметр("ДокументРасходИзБанка", РасходИзБанка);
	Запрос.УстановитьПараметр("ТекДок", ТекДок);
	
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		Если ВыборкаДетальныеЗаписи.Сумма <> Null ТОгда
			СуммаОстаток = РасходИзБанка.СуммаДокумента - ВыборкаДетальныеЗаписи.Сумма;
		Иначе
			СуммаОстаток = РасходИзБанка.СуммаДокумента ;
		КонецЕсли;
	Иначе
		СуммаОстаток =  РасходИзБанка.СуммаДокумента;
	КонецЕсли;;
	
	
	Возврат СуммаОстаток;
КонецФункции

&НаКлиенте
Процедура ДокументыРасходИзБанкаРассходИзБанкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ФормаВыбора = Документы.РасходИзБанка.ПолучитьФормуВыбора(,Элемент);	
	ФормаВыбора.Отбор.Организация.Установить(Объект.Организация);
	ФормаВыбора.Отбор.СтатьяДвиженияДенежныхСредств.Установить(Объект.СтатьяДвиженияДенежныхСредств);
	ФормаВыбора.Отбор.ДоговорКонтрагента.Установить(Объект.ДоговорКонтрагента);
	ФормаВыбора.Открыть();
	
	СтандартнаяОбработка = Ложь;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыРасходИзБанкаПриИзменении(Элемент)
	
	ДокументыРасходИзБанкаПриИзмененииНаСервере();	
	
КонецПроцедуры

&НаСервере
Процедура  ДокументыРасходИзБанкаПриИзмененииНаСервере()
	
	//Элементы.ДокументыРасходИзБанка.Подвал.СуммаДокумента = Объект.ДокументыРасходИзБанка.Итог("СуммаДокумента");
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыРасходИзБанкаРассходИзБанкаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура СписокРассылки(Команда)
	
	ОткрытьФорму("Обработка.ПривязкаРасходИзБанка.Форма.ДопСписокРассылок");	
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Рез =	ПриОткрытииНаСервере();
	Если Рез Тогда 
		Элементы.ФормаСписокРассылки.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция  ПриОткрытииНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗначенияДополнительныхПравПользователя.Пользователь,
	|	ЗначенияДополнительныхПравПользователя.Право,
	|	ЗначенияДополнительныхПравПользователя.Значение
	|ИЗ
	|	РегистрСведений.ЗначенияДополнительныхПравПользователя КАК ЗначенияДополнительныхПравПользователя
	|ГДЕ
	|	ЗначенияДополнительныхПравПользователя.Пользователь = &Пользователь
	|	И ЗначенияДополнительныхПравПользователя.Право = &Право";
	
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("Право", ПланыВидовХарактеристик.ПраваПользователей.РассылкиПривязокВозвратовБанка);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	ЕСли ВыборкаДетальныеЗаписи.Следующий() Тогда 
		Если ВыборкаДетальныеЗаписи.Значение = Истина Тогда
			Рез = Истина;
		Иначе
			Рез = Ложь;
		КонецЕсли;
	Иначе
		Рез = Ложь;
	КонецЕсли;;
	
	УстановитьПривилегированныйРежим(Ложь);
	  Возврат Рез;
КонецФункции

&НаКлиенте
Процедура УдалитьПривязки(Команда)
	
	УдалитьПривязкиСервер();
	
КонецПроцедуры

&НаСервере
Процедура  УдалитьПривязкиСервер()
	
		УстановитьПривилегированныйРежим(Истина);
		
		ОбПоступлениеВБанк = Объект.ПоступлениеВБанк.ПолучитьОбъект();
		ОбПоступлениеВБанк.ДокументыРасходИзБанкаУказаны = Ложь;
		ОбПоступлениеВБанк.РасходБанка.Очистить();
		
		Если ОбПоступлениеВБанк.Проведен Тогда
			ОбПоступлениеВБанк.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			ОбПоступлениеВБанк.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
		Сообщить("Данные успешно записаны.");
		
		УстановитьПривилегированныйРежим(Истина);	
	
КонецПроцедуры

