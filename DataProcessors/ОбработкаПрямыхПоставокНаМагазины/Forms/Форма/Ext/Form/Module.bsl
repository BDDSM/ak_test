
&НаСервере
Процедура ЗаполнитьДанныеЗаДатуСервер()
	
	ДеревоТовары.ПолучитьЭлементы().Очистить();
	ТабПоступления.Очистить();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаНач", ДобавитьМесяц(Объект.ДатаОбработки, -1));
	Запрос.УстановитьПараметр("Склад", Справочники.Склады.НайтиПоКоду("000001835"));
	Запрос.УстановитьПараметр("ДатаПрямойПоставкиНаМагазины", Объект.ДатаОбработки);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПриходныйОрдерСклад.Ссылка КАК Ссылка
	               |ПОМЕСТИТЬ ВТ_Приходники
	               |ИЗ
	               |	Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
	               |ГДЕ
	               |	ПриходныйОрдерСклад.Дата >= &ДатаНач
	               |	И ПриходныйОрдерСклад.Склад = &Склад
	               |	И ПриходныйОрдерСклад.ДатаПрямойПоставкиНаМагазины = &ДатаПрямойПоставкиНаМагазины
	               |	И ПриходныйОрдерСклад.Проведен = ИСТИНА
	               |	И ПриходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ОтПоставщика)
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПриходныйОрдерСкладТовары.Номенклатура,
	               |	СУММА(ПриходныйОрдерСкладТовары.Количество) КАК Количество
	               |ПОМЕСТИТЬ ВТ_Товары
	               |ИЗ
	               |	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
	               |ГДЕ
	               |	ПриходныйОрдерСкладТовары.Ссылка В
	               |			(ВЫБРАТЬ
	               |				ВТ_Приходники.Ссылка
	               |			ИЗ
	               |				ВТ_Приходники КАК ВТ_Приходники)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПриходныйОрдерСкладТовары.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Приходники.Ссылка КАК Приходник,
	               |	ВЗ_Поступления.Ссылка КАК Поступление
	               |ПОМЕСТИТЬ ВТ_ПоступленияТоваров
	               |ИЗ
	               |	ВТ_Приходники КАК ВТ_Приходники
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			МАКСИМУМ(ПоступлениеТоваровУслугПриходныеОрдера.Ссылка) КАК Ссылка,
	               |			ПоступлениеТоваровУслугПриходныеОрдера.ПриходныйОрдер КАК ПриходныйОрдер
	               |		ИЗ
	               |			Документ.ПоступлениеТоваровУслуг.ПриходныеОрдера КАК ПоступлениеТоваровУслугПриходныеОрдера
	               |		ГДЕ
	               |			ПоступлениеТоваровУслугПриходныеОрдера.ПриходныйОрдер В
	               |					(ВЫБРАТЬ
	               |						ВТ_Приходники.Ссылка
	               |					ИЗ
	               |						ВТ_Приходники КАК ВТ_Приходники)
	               |			И ПоступлениеТоваровУслугПриходныеОрдера.Ссылка.Проведен = ИСТИНА
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ПоступлениеТоваровУслугПриходныеОрдера.ПриходныйОрдер) КАК ВЗ_Поступления
	               |		ПО ВТ_Приходники.Ссылка = ВЗ_Поступления.ПриходныйОрдер
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Поступление
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Товары.Номенклатура,
	               |	ВТ_Товары.Количество
	               |ИЗ
	               |	ВТ_Товары КАК ВТ_Товары
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПоступлениеТоваровУслугТовары.Номенклатура,
	               |	СУММА(ПоступлениеТоваровУслугТовары.Количество) КАК Количество
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	               |ГДЕ
	               |	ПоступлениеТоваровУслугТовары.Ссылка В
	               |			(ВЫБРАТЬ
	               |				ВТ_ПоступленияТоваров.Поступление
	               |			ИЗ
	               |				ВТ_ПоступленияТоваров КАК ВТ_ПоступленияТоваров)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПоступлениеТоваровУслугТовары.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РасходныйОрдерСкладТовары.Номенклатура КАК Номенклатура,
	               |	СУММА(РасходныйОрдерСкладТовары.Количество) КАК Количество,
	               |	РасходныйОрдерСкладТовары.Ссылка.Получатель
	               |ИЗ
	               |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
	               |ГДЕ
	               |	РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения = &ДатаПрямойПоставкиНаМагазины
	               |	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
	               |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
	               |	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РасходныйОрдерСкладТовары.Номенклатура,
	               |	РасходныйОрдерСкладТовары.Ссылка.Получатель
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ПоступленияТоваров.Приходник,
	               |	ВТ_ПоступленияТоваров.Поступление
	               |ИЗ
	               |	ВТ_ПоступленияТоваров КАК ВТ_ПоступленияТоваров";
				   
	ДеревоДанных = Новый ДеревоЗначений();
	ДеревоДанных.Колонки.Добавить("Группировка");
	ДеревоДанных.Колонки.Добавить("ПоПриходникам");
	ДеревоДанных.Колонки.Добавить("Распределено");
	ДеревоДанных.Колонки.Добавить("ФактическиПоступило");
	ДеревоДанных.Колонки.Добавить("ПоБухПоступлениям");
	
	Результаты = Запрос.ВыполнитьПакет();
	Выборка = Результаты[3].Выбрать();
	МассивТовары = Новый Массив();
	Пока Выборка.Следующий() Цикл
		СтрокаДерева = ДеревоДанных.Строки.Добавить();
		СтрокаДерева.Группировка = Выборка.Номенклатура;
		СтрокаДерева.ПоПриходникам = Выборка.Количество;
		СтрокаДерева.ФактическиПоступило = 0;
		СтрокаДерева.Распределено = 0;
		СтрокаДерева.ПоБухПоступлениям = 0;
		МассивТовары.Добавить(Выборка.Номенклатура);
	КонецЦикла;
	
	Выборка = Результаты[4].Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДерева = ДеревоДанных.Строки.Найти(Выборка.Номенклатура, "Группировка");
		Если СтрокаДерева <> Неопределено Тогда
			СтрокаДерева.Группировка = Выборка.Номенклатура;
			СтрокаДерева.ПоБухПоступлениям = Выборка.Количество;
		КонецЕсли;	
	КонецЦикла;
	
	Выборка = Результаты[5].Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Номенклатура") Цикл
		СтрокаДерева = ДеревоДанных.Строки.Найти(Выборка.Номенклатура, "Группировка");
		Если СтрокаДерева <> Неопределено Тогда
			Пока Выборка.Следующий() Цикл
				СтрокаВложенная = СтрокаДерева.Строки.Добавить();
				СтрокаВложенная.Группировка = Выборка.Получатель;
				СтрокаВложенная.Распределено = Выборка.Количество;
				СтрокаДерева.Распределено = СтрокаДерева.Распределено + Выборка.Количество;
			КонецЦикла;	
		КонецЕсли;	
	КонецЦикла;
	
	Выборка = Результаты[6].Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДоб = ТабПоступления.Добавить();
		СтрокаДоб.СкладскойПриход = Выборка.Приходник;
		СтрокаДоб.ПоступлениеТоваровИУслуг = Выборка.Поступление;
	КонецЦикла;
	
	Если МассивТовары.Количество() > 0 Тогда
		ТабДТТ = ВнешниеДанные.ПолучитьДвиженияТоваровПолная(Объект.ДатаОбработки, Объект.ДатаОбработки,, МассивТовары, Ложь);
		ТабДТТ.Свернуть("Номенклатура, ТТ", "Поступило");
		Для Каждого СтрокаТаб Из ТабДТТ Цикл
			Если СтрокаТаб.Поступило = 0 Тогда
				Продолжить;
			КонецЕсли;	
			СтрокаДерева = ДеревоДанных.Строки.Найти(СтрокаТаб.Номенклатура, "Группировка");
			Если СтрокаДерева <> Неопределено Тогда
				СтрокаВложенная = СтрокаДерева.Строки.Найти(СтрокаТаб.ТТ, "Группировка");
				Если СтрокаВложенная = Неопределено Тогда
					СтрокаВложенная = СтрокаДерева.Строки.Добавить();
					СтрокаВложенная.Группировка = СтрокаТаб.ТТ;
				КонецЕсли;	
				СтрокаВложенная.ФактическиПоступило = СтрокаТаб.Поступило;
				СтрокаДерева.ФактическиПоступило = СтрокаДерева.ФактическиПоступило + СтрокаВложенная.ФактическиПоступило;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;	
	
	Для Каждого СтрокаДерево Из ДеревоДанных.Строки Цикл
		СтрокаРодитель = ДеревоТовары.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаРодитель, СтрокаДерево);
		Для Каждого СтрокаВложенная Из СтрокаДерево.Строки Цикл
			СтрокаДоб = СтрокаРодитель.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаДоб, СтрокаВложенная);
		КонецЦикла;	
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаполнитьДанныеЗаДату(Команда)
	
	ЗаполнитьДанныеЗаДатуСервер();
	
КонецПроцедуры

Процедура ПривестиДанные()
	
	ТекДанные = ДеревоТовары.НайтиПоИдентификатору(Элементы.ДеревоТовары.ТекущаяСтрока);
	
	Если ТекДанные.ПолучитьРодителя() <> Неопределено Тогда
		ТекДанные = ТекДанные.ПолучитьРодителя();
	КонецЕсли;	
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаНач", ДобавитьМесяц(Объект.ДатаОбработки, -1));
	Запрос.УстановитьПараметр("Склад", Справочники.Склады.НайтиПоКоду("000001835"));
	Запрос.УстановитьПараметр("ДатаПрямойПоставкиНаМагазины", Объект.ДатаОбработки);
	Запрос.УстановитьПараметр("Номенклатура", ТекДанные.Группировка);
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ПриходныйОрдерСклад.Ссылка КАК Ссылка
	               |ИЗ
	               |	Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
	               |		ПО ПриходныйОрдерСклад.Ссылка = ПриходныйОрдерСкладТовары.Ссылка
	               |ГДЕ
	               |	ПриходныйОрдерСклад.Дата >= &ДатаНач
	               |	И ПриходныйОрдерСклад.Склад = &Склад
	               |	И ПриходныйОрдерСклад.ДатаПрямойПоставкиНаМагазины = &ДатаПрямойПоставкиНаМагазины
	               |	И ПриходныйОрдерСклад.Проведен = ИСТИНА
	               |	И ПриходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ОтПоставщика)
	               |	И ПриходныйОрдерСкладТовары.Номенклатура = &Номенклатура
	               |	И ПриходныйОрдерСкладТовары.Количество > 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	РасходныйОрдерСклад.Ссылка
	               |ИЗ
	               |	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
	               |		ПО РасходныйОрдерСклад.Ссылка = РасходныйОрдерСкладТовары.Ссылка
	               |ГДЕ
	               |	РасходныйОрдерСклад.ДатаРаспределения = &ДатаПрямойПоставкиНаМагазины
	               |	И РасходныйОрдерСклад.Проведен = ИСТИНА
	               |	И РасходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
	               |	И РасходныйОрдерСклад.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
	               |	И РасходныйОрдерСкладТовары.Номенклатура = &Номенклатура
	               |	И РасходныйОрдерСкладТовары.Количество > 0";
				   
				   
	Результаты = Запрос.ВыполнитьПакет();
	
	РазницаПриход = ТекДанные.ФактическиПоступило - ТекДанные.ПоПриходникам;
	РазницаРасход = ТекДанные.ФактическиПоступило - ТекДанные.Распределено;
	
	Выборка = Результаты[0].Выбрать();
	Пока Выборка.Следующий() Цикл
		Если РазницаПриход = 0 Тогда
			Прервать;
		КонецЕсли;	
		ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Для Каждого СтрокаТаб Из ДокОбъект.Товары Цикл
			Если СтрокаТаб.Номенклатура = ТекДанные.Группировка Тогда
				Если РазницаПриход < 0 Тогда
					МинКолво = Мин(СтрокаТаб.Количество, РазницаПриход * -1);
				Иначе
					МинКолво = РазницаПриход;
				КонецЕсли;	
				Если РазницаПриход < 0 Тогда
					СтрокаТаб.Количество = СтрокаТаб.Количество - МинКолво;
					РазницаПриход = РазницаПриход + МинКолво;
				Иначе	
					СтрокаТаб.Количество = СтрокаТаб.Количество + МинКолво;
					РазницаПриход = РазницаПриход - МинКолво;
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	
	Выборка = Результаты[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		Если РазницаРасход = 0 Тогда
			Прервать;
		КонецЕсли;	
		ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Для Каждого СтрокаТаб Из ДокОбъект.Товары Цикл
			Если СтрокаТаб.Номенклатура = ТекДанные.Группировка Тогда
				Если РазницаРасход < 0 Тогда
					МинКолво = Мин(СтрокаТаб.Количество, РазницаРасход * -1);
				Иначе
					МинКолво = РазницаРасход;
				КонецЕсли;	
				Если РазницаРасход < 0 Тогда
					СтрокаТаб.Количество = СтрокаТаб.Количество - МинКолво;
					РазницаРасход = РазницаРасход + МинКолво;
				Иначе	
					СтрокаТаб.Количество = СтрокаТаб.Количество + МинКолво;
					РазницаРасход = РазницаРасход - МинКолво;
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;
		ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла;
	
КонецПроцедуры	

&НаКлиенте
Процедура ПривестиПриходникиИРасходникиКФактуМагазинов(Команда)
	
	ТекДанные = Элементы.ДеревоТовары.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПривестиДанные();
	ЗаполнитьДанныеЗаДатуСервер();
	
КонецПроцедуры
