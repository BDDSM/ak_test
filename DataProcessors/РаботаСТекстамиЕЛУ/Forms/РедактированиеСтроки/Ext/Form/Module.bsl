
////////////////////////////////////////////////////////////////
// ФОРМА, ЗАГРУЗКА ПАРАМЕТРОВ ФОРМЫ
////////////////////////////////////////////////////////////////

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	id_text_kkm_main = Параметры.id_text_kkm_main;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗагрузитьДанныеТЧСервер(АдресХранилищаtext_kkm_main, "text_kkm_main");
	ЗагрузитьДанныеТЧСервер(АдресХранилищаtext_kkm_main, "text_kkm_main_копия");
		
	ОбновитьДанныеКлиент();
		
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанныеТЧСервер(АдресХранилища, ИмяТЧ)
	
	Если ИмяТч = "text_kkm_main" Тогда
		Объект.text_kkm_main.Загрузить(ПолучитьИзВременногоХранилища(АдресХранилища));
	ИначеЕсли ИмяТч = "text_kkm_main_копия" Тогда
		Объект.text_kkm_main_копия.Загрузить(ПолучитьИзВременногоХранилища(АдресХранилища));	
	КонецЕсли;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////
// ОБНОВЛЯЛКИ
////////////////////////////////////////////////////////////////

&НаКлиенте
Процедура ОбновитьДанныеКлиент()
	      	
	ОбновитьПараметрыСервер();
	ОбновитьТорговыеТочкиСервер();
	ОбновитьeLUСервер();

КонецПроцедуры

/////////////////////////////////////////////////////////////////
// ПРОЧЕЕ
////////////////////////////////////////////////////////////////
	
&НаСервере
Процедура ОбновитьПараметрыСервер()
	
	НайдСтр = Объект.text_kkm_main.Выгрузить().Найти(id_text_kkm_main, "id_text_kkm_main");
	
	Если НЕ НайдСтр = Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, НайдСтр);
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьТорговыеТочкиСервер()
	
	СтруктураПолей = "*";
	ИмяТаблицы = "text_kkm_tt";
	
	РеквизитыТЧ = Новый Массив;
	РеквизитыТч.Добавить("id_text_kkm_main");
	РеквизитыТч.Добавить("id_tt");
	
	СоответствиеУсловий = Новый Соответствие;
	СоответствиеУсловий.Вставить("id_text_kkm_main", id_text_kkm_main);
	
	Об = РеквизитФормыВЗначение("Объект");	
	
	Об.ЗаполнитьТаблицу(Объект.text_kkm_tt, СтруктураПолей, ИмяТаблицы, РеквизитыТЧ, СоответствиеУсловий);

	ЗначениеВРеквизитФормы(Об, "Объект");	
	
	Объект.text_kkm_tt_Копия.Загрузить(Объект.text_kkm_tt.Выгрузить());

КонецПроцедуры

&НаСервере
Процедура ОбновитьeLUСервер()
	
	СтруктураПолей = "*";
	ИмяТаблицы = "text_kkm";
	
	РеквизитыТЧ = Новый Массив;
	РеквизитыТч.Добавить("id_text_kkm_main");
	РеквизитыТч.Добавить("n");
	РеквизитыТч.Добавить("text");
			
	СоответствиеУсловий = Новый Соответствие;
	СоответствиеУсловий.Вставить("id_text_kkm_main", id_text_kkm_main);
	
	Об = РеквизитФормыВЗначение("Объект");
	Об.ЗаполнитьТаблицу(Объект.text_kkm, СтруктураПолей, ИмяТаблицы, РеквизитыТЧ, СоответствиеУсловий);	
	ЗначениеВРеквизитФормы(Об, "Объект");
	
	ТЗЕлуВременная = ОБъект.text_kkm.Выгрузить();
	
	//СменилосьПоказыватьВЧеке = Ложь;
	К = 0;
	//ПоказыватьВЧеке = 0;
	
	Если ТзЕлуВременная.Количество() <> 0 Тогда
		НовСтр = ТЗЕлу.Добавить();
	КонецЕсли; 
	
	Для Каждого Стр Из ТзЕлуВременная Цикл
		
		К = К + 1;
		
		//Если ПоказыватьВЧеке <> Стр.shapka_elu Тогда
				
		//	ПоказыватьВЧеке = Стр.shapka_elu;
		//Иначе
		//	Если К = 1 Тогда
		//		НовСтр = ТзЕлу.Добавить();
		//	КонецЕсли;
		//КонецЕсли;
		
		НовСтр.ТекстЕлу = НовСтр.ТекстЕлу + Стр.text + Символы.ПС;
		
		Если К = 1 Тогда
			НовСтр.N = Стр.N;
		КонецЕсли;
				
	КонецЦикла;		
	
	Объект.text_kkm_Копия.Загрузить(Объект.text_kkm.Выгрузить());
	
	ТзЕлуКопия.Загрузить(ТзЕлу.Выгрузить());
	
КонецПроцедуры


&НаКлиенте
Процедура ТзЕлуПриАктивизацииСтроки(Элемент)
	
	Если НЕ Элементы.ТзЕлу.ТекущиеДанные = Неопределено Тогда	
		ЭтаФорма.ПодробныйТекстЕЛУ = Элементы.ТзЕлу.ТекущиеДанные.ТекстЕлу;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанные(Команда)
	
	Ответ = Вопрос("Сохранить измененные\добавленные данные?", РежимДиалогаВопрос.ДаНет);
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
	СравнитьТаблицыСервер();
	
	НеЗадаватьВопросПриЗакрытии = Истина;
	
	ЭтаФорма.Закрыть();
		
КонецПроцедуры

&НаСервере
Процедура ОбновитьИндексныеПоляВТаблицах()
	
	ОбновитьИндексноеПоле("text_kkm");
	ОбновитьИндексноеПоле("text_kkm_tt");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИндексноеПоле(Таблица)
	
	НовыйИндекс = ПолучитьИндексноеПоле(Таблица);
	
	Для Каждого Стр ИЗ ОБъект[Таблица] Цикл
		Если Стр.ИндексноеПоле = 0 Тогда
			Стр.ИндексноеПоле = НовыйИндекс;
			НовыйИндекс = НовыйИндекс + 1;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры	
	
&НаСервере
Процедура СравнитьТаблицыСервер()
	
	МассивУсловийГде = Новый Массив;
	НеучитываемыеПоля = Новый Массив;
	
	СохранитьСтрокуТаблицыОсновныхПараметров();
	
	ДобавитьИДВТаблицы();
	
	ОБновитьИндексныеПоляВТаблицах();
	
	//1 основная         	
		
	МассивУсловийГде.Добавить("id_text_kkm_main");	
	Сравнить2Таблицы(Объект.text_kkm_main_Копия.Выгрузить(), Объект.text_kkm_main.Выгрузить(), "text_kkm_main", МассивУсловийГде, НеучитываемыеПоля);
	
	МассивУсловийГде.Очистить();
		
	//2 text_kkm_tt		
	МассивУсловийГде.Добавить("id_text_kkm_main");	
	
	Сравнить2Таблицы(Объект.text_kkm_tt_Копия.Выгрузить(), Объект.text_kkm_tt.Выгрузить(), "text_kkm_tt", МассивУсловийГде, НеучитываемыеПоля);
	
	МассивУсловийГде.Очистить();
	
	//6 text_kkm
	
	флСохраняемЕЛУ = Ложь;

	Для Каждого Стр Из ТзЕлу Цикл
		
		ИдСтроки = Стр.ПолучитьИдентификатор();  
		ДанныеСтроки = ТзЕлуКопия.НайтиПоИдентификатору(ИдСтроки);
		
		Если ДанныеСтроки = Неопределено ИЛИ Стр.ТекстЕлу <> ДанныеСтроки.ТекстЕлу Тогда
			флСохраняемЕЛУ = Истина;
		КонецЕсли;
		
	КонецЦикла;

	Если флСохраняемЕЛУ Тогда
	
		СохранитьТаблицуЕЛУ();	
		МассивУсловийГде.Добавить("id_text_kkm_main");
		МассивУсловийГде.Добавить("n");
		Сравнить2Таблицы(Объект.text_kkm_Копия.Выгрузить(), Объект.text_kkm.Выгрузить(), "text_kkm", МассивУсловийГде, НеучитываемыеПоля);		
		
	КонецЕсли;
	
КонецПроцедуры                            

&НаСервере
Процедура ДобавитьИДВТаблицы()
	
	ДобавитьИДВТаблицу("text_kkm");
	ДобавитьИДВТаблицу("text_kkm_tt");
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьИдВТаблицу(ИмяТаблицы)
	
	Для Каждого Стр Из Объект[ИмяТаблицы] Цикл
		Стр.id_text_kkm_main = id_text_kkm_main;
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Процедура Сравнить2Таблицы(НачТаблица, КонТаблица, ИмяТаблицы, МассивУсловийГде, НеучитываемыеПоля)
	
	Об = РеквизитФормыВЗначение("Объект");
	
	МассивКлючей = Новый Массив;
	МассивКлючей.Добавить("ИндексноеПоле");
	
	Об.СравнитьПоКлючамТЗ(НачТаблица, КонТаблица, МассивКлючей, ИмяТаблицы, МассивУсловийГде, id_text_kkm_main, НеучитываемыеПоля);	
	
	ЗначениеВРеквизитФормы(Об, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура СохранитьСтрокуТаблицыОсновныхПараметров()
	
	Если id_text_kkm_main = 0 Тогда
		Об = РеквизитФормыВЗначение("Объект");
		id_text_kkm_main = Об.СоздатьНовуюЗапись();
		ЭтоНоваяЗапись = Истина;
		ЗначениеВРеквизитФормы(Об, "Объект");
		
		НайдСтр = Объект.text_kkm_main.Добавить();
		
	Иначе
		
		НайдСтроки = Объект.text_kkm_main.НайтиСтроки(Новый Структура("id_text_kkm_main", id_text_kkm_main));
		
		Если НайдСтроки.Количество() > 0 Тогда
			НайдСтр = НайдСтроки[0];
		Иначе
			НайдСтр = Объект.text_kkm_main.Добавить();
		КонецЕсли;
		
	КонецЕсли;	                                                                        
	
	ЗаполнитьЗначенияСвойств(НайдСтр, ЭтаФорма);	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИндексноеПоле(Таблица)
	
	Тз = Объект[Таблица].Выгрузить();
	
	Тз.Сортировать("ИндексноеПоле Убыв");
	
	Если Тз.Количество() > 0 Тогда
		Возврат Тз[0].ИндексноеПоле + 1;
	Иначе	
		Возврат 1;
	КонецЕсли;
	
КонецФункции

/////////////////////////////////////////////////////////////////////
// ЕЛУ

&НаСервере
Процедура СохранитьТаблицуЕЛУ()
	
	НомерСтр = 0;
	
	Объект.text_kkm.Очистить();
	
	Об = РеквизитФормыВЗначение("Объект");
	МаксиНомерN = Об.ПолучитьМаксиНомерN(id_text_kkm_main, ЭтоНоваяЗапись);
	ЗначениеВРеквизитФормы(Об, "Объект");
	
	Для Каждого Стр Из ТзЕлу Цикл
		
		NНомер = Стр.N;
		
		Если NНомер = 0 Тогда
			NНомер = МаксиНомерN;
		КонецЕсли;
		
		МассивСтрокЕЛУ = ОтформатироватьТекстЕЛУ(Стр.ТекстЕлу);
		
		флОтказ = Ложь;
		
		Для Каждого Эл Из МассивСтрокЕлу Цикл
			Если СтрДлина(Эл) > 40 Тогда
				флОтказ = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НЕ флОтказ Тогда
			
			Для Каждого Эл Из МассивСтрокЕлу Цикл
				
				НомерСтр = НомерСтр + 1;
				NНомер = NНомер + 1;
				
				НовСтр = Объект.text_kkm.Добавить();
				НовСтр.id_text_kkm_main = id_text_kkm_main;
				НовСтр.text = Эл;
				//НовСтр.n = NНомер;
				НовСтр.ИндексноеПоле = НомерСтр;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ОБъект.text_kkm_Копия.Количество() > 0 Тогда
		ПервыйНомер = ОБъект.text_kkm_Копия[0].n;
	Иначе
		ПервыйНомер = МаксиНомерN;
	КонецЕсли;
	
	Для Каждого Стр Из Объект.text_kkm Цикл
		Стр.n = ПервыйНомер;
		
		ПервыйНомер = ПервыйНомер + 1;
		
	КонецЦикла;
	
КонецПроцедуры  

&НаКлиенте
Процедура ОткрытьФормуДобавленияТекстаЕЛУ(ТекущийТекст, РежимДобавления, N = 0)
	
	фрм = ПолучитьФорму("Обработка.РаботаСТекстамиЕЛУ.Форма.ФормаДобавленияТекстаЕЛУ", , ЭтаФорма);
	фрм.ТекстЕЛУ = ТекущийТекст;
	
	Результ = фрм.ОткрытьМодально();
	
	РежимДобавленияТекстаЕЛУ = РежимДобавления;
	
	Если НЕ ДобавлениеТекстаЕЛУ = "" Тогда	
		СохранитьСтрокуЕЛУ(N);
	КонецЕсли;
	
	Если НЕ Элементы.ТзЕлу.ТекущиеДанные = Неопределено Тогда	
		ЭтаФорма.ПодробныйТекстЕЛУ = Элементы.ТзЕлу.ТекущиеДанные.ТекстЕлу;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтрокуЕЛу(Команда)
	
	ОткрытьФормуДобавленияТекстаЕЛУ("", 1);	
	
КонецПроцедуры 

&НаКлиенте
Процедура РедактироватьСтрокуЕЛУ(Команда)
	
	Если Элементы.ТзЕлу.ТекущиеДанные = Неопределено Тогда
		Сообщить("Необходимо выделить строку с текстом, который следует отредактировать");
		Возврат;
	КонецЕсли;
	
	ОткрытьФормуДобавленияТекстаЕЛУ(Элементы.ТзЕлу.ТекущиеДанные.ТекстЕлу, 0, Элементы.ТзЕлу.ТекущиеДанные.N);
		
КонецПроцедуры

&НаКлиенте
Процедура СохранитьСтрокуЕЛУ(N)
	
	ОтформатироватьТекстЕЛУ(ДобавлениеТекстаЕЛУ);
	
	Если РежимДобавленияТекстаЕЛУ = 1 Тогда
		НовСтр = ТзЕлу.Добавить();
		НовСтр.ТекстЕЛу = ИтоговыйСтр; //ДобавлениеТекстаЕЛУ;		
		НовСтр.N = N;
	Иначе
		ИдСтроки = Элементы.ТзЕлу.ТекущаяСтрока;  
		ДанныеСтроки = ТзЕлу.НайтиПоИдентификатору(ИдСтроки);
		
		Если НЕ ДанныеСтроки = Неопределено Тогда
			ДанныеСтроки.ТекстЕлу = ИтоговыйСтр; //ДобавлениеТекстаЕЛУ;
			ДанныеСтроки.N = N;
		КонецЕсли;
	КонецЕсли;
	
	//Элементы.ГруппаЕЛУОсновное.Видимость = Истина;
	//Элементы.ГруппаЕлуДобавлениеТекста.Видимость = Ложь;
	ДобавлениеТекстаЕЛУ = "";
	
КонецПроцедуры


/////////////////////////////////////////////////

&НаСервере
Процедура УбратьЛишниеПробелыИзТекста(ТекстЕЛУ)
	
	Пока Найти(ТекстЕлу, "  ") <> 0 Цикл
		ТекстЕлу = СтрЗаменить(ТекстЕлу, "  ", " ");
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ОтформатироватьТекстЕЛУ(ТекстЕЛУ)
	
	МассивСтрок = Новый Массив;
	КолВоСимволов = 40;
	ИтоговыйСтр = "";
	
	УбратьЛишниеПробелыИзТекста(ТекстЕлу);
	
	РазбитьСтрокуДляЕлу(МассивСтрок, ТекстЕЛУ, КолВоСимволов);	
	
	флОшибка = Ложь;
	
	ДЛя Каждого ЭЛ Из МассивСтрок Цикл
		
		Если СтрДлина(ЭЛ) <> КолВоСимволов Тогда
			Сообщить("Не удалось разбить на нужное количество символов строку: """ + Эл + """");
			флОшибка = Истина;
		КонецЕсли;
		
		//Сообщить(Эл + " " + Строка(СтрДлина(Эл)));
		ИтоговыйСтр = ИтоговыйСтр + Эл + Символы.ПС;
		
	КонецЦикла;
	
	Если НЕ флОшибка Тогда
		ДобавлениеТекстаЕЛУ = ИтоговыйСтр;
	КонецЕсли;
	
	Возврат МассивСтрок;
	
КонецФункции

Процедура РазбитьСтрокуДляЕлу(МассивСтрок, Строка, КолВоСимволов)
	
	Слово = "";
	СловоКопия = "";
	ИтоговаяСтрока = "";
	ВнутреннийСчетчик = 0;
	СтрокаКопия = "";
	
	Для к = 1 По СтрДлина(Строка) Цикл
		
		Символ = Сред(Строка, к, 1);
		
		ВнутреннийСчетчик = ВнутреннийСчетчик + 1;
		
		Если Символ = Символы.НПП ИЛИ Символ = Символы.ВТаб ИЛИ Символ = Символы.ПФ ИЛИ Символ = Символы.Таб ИЛИ Символ = " " ИЛИ Символ = Символы.ПС Тогда
			
			Если ВнутреннийСчетчик > КолВоСимволов ИЛИ Символ = Символы.ПС Тогда
				
				Если Символ = Символы.ПС Тогда
					Если СтрДлина(ИтоговаяСтрока + Слово) <= КолВоСимволов Тогда
						ИтоговаяСтрока = ИтоговаяСтрока + Слово;						
						Слово = "";						
					КонецЕсли;
				КонецЕсли;
				
				РаспределитьПробелыВСтроке(ИтоговаяСтрока, КолВоСимволов, (СтрокаКопия = Строка ИЛИ Символ = Символы.ПС));
				
				Если Символ = Символы.ПС Тогда
					СловоКопия = СловоКопия + Символ;
					Символ = "";
				Иначе
					СловоКопия = Слово;
				КонецЕсли;					
				
				МассивСтрок.Добавить(ИтоговаяСтрока);
				ИтоговаяСтрока = "";
				ВнутреннийСчетчик = 0;				
				Слово = СокрЛ(Слово);
				ВнутреннийСчетчик = СтрДлина(Слово);				
			Иначе
				ИтоговаяСтрока = ИтоговаяСтрока + Слово;
				СтрокаКопия = СтрокаКопия + СловоКопия;
				СловоКопия = "";
				Слово = "";
			КонецЕсли;

		КонецЕсли;
	
		Слово = Слово + Символ;
		СловоКопия = СловоКопия + Символ;
		
	КонецЦикла;
	
	Если СтрДлина(ИтоговаяСтрока + Слово) > КолВоСимволов Тогда
		Если СтрДлина(ИтоговаяСтрока) <= КолвоСимволов Тогда
			РаспределитьПробелыВСтроке(ИтоговаяСтрока, КолВоСимволов, СтрокаКопия = Строка);
		КонецЕсли;
		
		МассивСтрок.Добавить(ИтоговаяСтрока);
		
		ИтоговаяСтрока = Слово;
		
	Иначе		
			
		ИтоговаяСтрока = ИтоговаяСтрока + Слово;
		
	КонецЕсли;
	
	СтрокаКопия = СтрокаКопия + СловоКопия;
		
	Если ЗначениеЗаполнено(ИтоговаяСтрока) Тогда
		
		Если СтрДлина(ИтоговаяСтрока) <= КолВоСимволов Тогда		
			РаспределитьПробелыВСтроке(ИтоговаяСтрока, КолВоСимволов, СтрокаКопия = Строка);
			МассивСтрок.Добавить(ИтоговаяСтрока);
		Иначе
            РазбитьСтрокуДляЕлу(МассивСтрок, ИтоговаяСтрока, КолВоСимволов);
		КонецЕсли;
		
	КонецЕсли;
		
КонецПроцедуры

Функция СтопЦикла(Строка, КолВоСимволов)
	
	Возврат СтрДлина(Строка) >= КолВоСимволов;

КонецФункции

Процедура РаспределитьПробелыВСтроке(Строка, КолВоСимволов, ЭтоПоследняяСтрока)
	
	Если ЭтоПоследняяСтрока Тогда
		
		Если СтопЦикла(Строка,КолВоСимволов) Тогда
			Возврат;
		КонецЕсли;
		
		Пока Истина Цикл
			Строка = Строка + " ";
			Если СтопЦикла(Строка, КолВоСимволов) Тогда
				Прервать;
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если СтопЦикла(Строка, КолВоСимволов) Тогда
		Возврат;
	КонецЕсли;
	
	Пока Истина Цикл
		
		ИтоговаяСтрока = "";
		
		Для к = 1 По СтрДлина(Строка) Цикл
		
			Символ = Сред(Строка, к, 1);
			
			ИтоговаяСтрока = ИтоговаяСтрока + Символ;
			
			Если Символ = Символы.НПП ИЛИ Символ = Символы.ВТаб ИЛИ Символ = Символы.ПФ ИЛИ Символ = Символы.Таб ИЛИ Символ = " " Тогда
				
				 ИтоговаяСтрока = ИтоговаяСтрока + " ";
				 
				 Если СтопЦикла(ИтоговаяСтрока + Сред(Строка, к+1, СтрДлина(Строка) - (к-1)), КолВоСимволов) Тогда
					 ИтоговаяСтрока = ИтоговаяСтрока + Сред(Строка, к+1, СтрДлина(Строка) - (к-1));
					 Прервать;
				 КонецЕсли;				 
				 
			КонецЕсли;
		
		КонецЦикла;
	
		Прервать;
		
	КонецЦикла;
	
	Строка = ИтоговаяСтрока;
	
	Если СтрДлина(Строка) < КолВоСимволов Тогда
		РаспределитьПробелыВСтроке(Строка, КолВоСимволов, ЭтоПоследняяСтрока);
	КонецЕсли;
	
КонецПроцедуры              

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ НеЗадаватьВопросПриЗакрытии Тогда
	
		СтандартнаяОбработка = Ложь;
	
		Ответ = Вопрос("Закрыть форму? Все несохраненные данные будут потеряны.", РежимДиалогаВопрос.ДаНет);
	
		Отказ = Ответ = КодВозвратаДиалога.Нет;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ОповеститьОЗаписиНового("123");
	
КонецПроцедуры

&НаКлиенте
Процедура text_kkm_ttПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.id_text_kkm_main = id_text_kkm_main;
	КонецЕсли;
	
КонецПроцедуры


