
&НаСервере
Функция ПолучитьТекстМакета()
	Макет = Обработки.РазвозНаТорговыеТочки.ПолучитьМакет("МакетЯндекс");
	Возврат Макет.ПолучитьТекст();
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Эксплорер = ПолучитьТекстМакета();
	Объект.ДатаНачала = ТекущаяДата();
	Объект.ДатаОкончания = ТекущаяДата();
	ПериодОбработки.ДатаНачала = Объект.ДатаНачала;
	ПериодОбработки.ДатаОкончания = Объект.ДатаОкончания;
	ОбновитьТаблицуМаршрутов();
	
КонецПроцедуры

Процедура ОбновитьТаблицуМаршрутов()
	
	ТаблицаМаршрутов.Очистить();
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаНач", Объект.ДатаНачала - 86400*3);
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.ДатаОкончания) + 86400*3);
	Запрос.УстановитьПараметр("Водители", ВодителиОтбор.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("ЕстьОтборПоВодителям", ВодителиОтбор.Количество() > 0);
	Запрос.УстановитьПараметр("Маршруты", МаршрутыОтбор.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("ЕстьОтборПоМаршрутам", МаршрутыОтбор.Количество() > 0);
	Запрос.Текст = "ВЫБРАТЬ
	               |	СобытияТранспортнойСистемы.Период КАК Период,
	               |	СобытияТранспортнойСистемы.Водитель КАК Водитель,
	               |	СобытияТранспортнойСистемы.МаршрутныйЛист,
	               |	СобытияТранспортнойСистемы.МаршрутныйЛист.Маршрут КАК Маршрут
	               |ИЗ
	               |	РегистрСведений.СобытияТранспортнойСистемы КАК СобытияТранспортнойСистемы
	               |ГДЕ
	               |	СобытияТранспортнойСистемы.Период МЕЖДУ &ДатаНач И &ДатаКон
	               |	И (&ЕстьОтборПоВодителям = ЛОЖЬ
	               |			ИЛИ СобытияТранспортнойСистемы.Водитель В (&Водители))
	               |	И (&ЕстьОтборПоМаршрутам = ЛОЖЬ
	               |			ИЛИ ЕСТЬNULL(СобытияТранспортнойСистемы.МаршрутныйЛист.Маршрут, ЗНАЧЕНИЕ(Справочник.Маршруты.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Маршруты.ПустаяСсылка)
	               |			ИЛИ ЕСТЬNULL(СобытияТранспортнойСистемы.МаршрутныйЛист.Маршрут, ЗНАЧЕНИЕ(Справочник.Маршруты.ПустаяСсылка)) В (&Маршруты))
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Водитель,
	               |	Период";
				   
	ТабМаршруты = Новый ТаблицаЗначений();
	ТабМаршруты.Колонки.Добавить("Водитель");
	ТабМаршруты.Колонки.Добавить("ДатаНачала");
	ТабМаршруты.Колонки.Добавить("ДатаОкончания");
	ТабМаршруты.Колонки.Добавить("Маршрут");
	ТабМаршруты.Колонки.Добавить("МаршрутныйЛист");
	Выборка = Запрос.Выполнить().Выбрать();
	ТекСтрока = Неопределено;
	Пока Выборка.СледующийПоЗначениюПоля("Водитель") Цикл
		Пока Выборка.Следующий() Цикл
			Если ТекСтрока = Неопределено Тогда
				ТекСтрока = ТабМаршруты.Добавить();
				ТекСтрока.Водитель = Выборка.Водитель;
				ТекСтрока.ДатаНачала = Выборка.Период;
				ТекСтрока.ДатаОкончания = Выборка.Период;
				ТекСтрока.МаршрутныйЛист = Выборка.МаршрутныйЛист;
				ТекСтрока.Маршрут = Выборка.Маршрут;
			Иначе
				Если (Выборка.Период - ТекСтрока.ДатаОкончания) > 3600 Тогда // если больше часа, то считаем, что маршрут разорвали
					ТекСтрока = ТабМаршруты.Добавить();
					ТекСтрока.Водитель = Выборка.Водитель;
					ТекСтрока.ДатаНачала = Выборка.Период;
					ТекСтрока.ДатаОкончания = Выборка.Период;
					ТекСтрока.МаршрутныйЛист = Выборка.МаршрутныйЛист;
					ТекСтрока.Маршрут = Выборка.Маршрут;
				Иначе
					ТекСтрока.ДатаОкончания = Выборка.Период;
					Если НЕ ЗначениеЗаполнено(ТекСтрока.МаршрутныйЛист) Тогда
						ТекСтрока.МаршрутныйЛист = Выборка.МаршрутныйЛист;
					КонецЕсли;
					Если НЕ ЗначениеЗаполнено(ТекСтрока.Маршрут) Тогда
						ТекСтрока.Маршрут = Выборка.Маршрут;
					КонецЕсли;
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;
		ТекСтрока = Неопределено;
	КонецЦикла;	
	
	КолвоСтрок = ТабМаршруты.Количество();
	Для н = 1 По КолвоСтрок Цикл
		Если ТабМаршруты[КолвоСтрок - н].ДатаОкончания < Объект.ДатаНачала Тогда
			ТабМаршруты.Удалить(КолвоСтрок - н);
		ИначеЕсли ТабМаршруты[КолвоСтрок - н].ДатаНачала > КонецДня(Объект.ДатаОкончания) Тогда
			ТабМаршруты.Удалить(КолвоСтрок - н);
		ИначеЕсли МаршрутыОтбор.Количество() > 0 Тогда
			Если МаршрутыОтбор.НайтиПоЗначению(ТабМаршруты[КолвоСтрок - н].Маршрут) = Неопределено Тогда
				ТабМаршруты.Удалить(КолвоСтрок - н);
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
	
	Для Каждого СтрокаМаршрут Из ТабМаршруты Цикл
		СтрокаДоб = ТаблицаМаршрутов.Добавить();
		СтрокаДоб.Водитель = СтрокаМаршрут.Водитель;
		СтрокаДоб.ДатаНачалаДвижения = СтрокаМаршрут.ДатаНачала;
		СтрокаДоб.ДатаОкончанияДвижения = СтрокаМаршрут.ДатаОкончания;
		СтрокаДоб.Маршрут = СтрокаМаршрут.Маршрут;
		СтрокаДоб.МаршрутныйЛист = СтрокаМаршрут.МаршрутныйЛист;
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ЭксплорерПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодОбработкиПриИзменении(Элемент)
	
	Объект.ДатаНачала = ПериодОбработки.ДатаНачала;
	Объект.ДатаОкончания = ПериодОбработки.ДатаОкончания;
	
	ОбновитьТаблицуМаршрутов();
	
КонецПроцедуры

&НаКлиенте
Процедура ВодителиОтборПриИзменении(Элемент)
	
	ОбновитьТаблицуМаршрутов();
	
КонецПроцедуры

&НаКлиенте
Процедура МаршрутыОтборПриИзменении(Элемент)
	
	ОбновитьТаблицуМаршрутов();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция РасчитатьРасстояниеМеждуТочками(Широта1, Долгота1, Широта2, Долгота2)
	
	ДляРасчета = SIN(Широта1*3.14159/180)*SIN(Широта2*3.14159/180) + COS(Широта1*3.14159/180)*COS(Широта2*3.14159/180)*COS(Долгота2*3.14159/180-Долгота1*3.14159/180);
	Если ДляРасчета > 1 Тогда
		Возврат ACOS( 1 ) * 6372797;
	ИначеЕсли ДляРасчета < -1 Тогда
		Возврат ACOS( -1 ) * 6372797;
	Иначе
		Возврат ACOS( ДляРасчета ) * 6372797;
	КонецЕсли;
	
КонецФункции

Процедура ЗаполнитьТаблицуТочекПоМаршруту(ВыделеннаяСтрока)
	
	ТекДанные = ТаблицаМаршрутов.НайтиПоИдентификатору(ВыделеннаяСтрока);
	
	ТаблицаТочек.Очистить();
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	СобытияТранспортнойСистемы.Широта,
	               |	СобытияТранспортнойСистемы.Долгота,
	               |	СобытияТранспортнойСистемы.Объект,
	               |	СобытияТранспортнойСистемы.Событие,
	               |	СобытияТранспортнойСистемы.Период КАК Период
	               |ИЗ
	               |	РегистрСведений.СобытияТранспортнойСистемы КАК СобытияТранспортнойСистемы
	               |ГДЕ
	               |	СобытияТранспортнойСистемы.Период МЕЖДУ &ДатаНач И &ДатаКон
	               |	И СобытияТранспортнойСистемы.Водитель = &Водитель
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Период";
				   
	Запрос.УстановитьПараметр("ДатаНач", ТекДанные.ДатаНачалаДвижения);
	Запрос.УстановитьПараметр("ДатаКон", ТекДанные.ДатаОкончанияДвижения);
	Запрос.УстановитьПараметр("Водитель", ТекДанные.Водитель);
	Выборка = Запрос.Выполнить().Выбрать();
	Счетчик = 1;
	ПредСобытие = Неопределено;
	ПредШирота = 0;
	ПредДолгота = 0;
	Пока Выборка.Следующий() Цикл
		Если РасчитатьРасстояниеМеждуТочками(ПредШирота, ПредДолгота, Выборка.Широта, Выборка.Долгота) < 50 Тогда
			Продолжить;
		КонецЕсли;	
		СтрокаДоб = ТаблицаТочек.Добавить();
		СтрокаДоб.Дата = Выборка.Период;
		СтрокаДоб.Широта = Выборка.Широта;
		СтрокаДоб.Долгота = Выборка.Долгота;
		Если ТаблицаТочек.Количество() = 1 Тогда
			СтрокаДоб.СопутствующийТекст = "Начало маршрута в " + Формат(СтрокаДоб.Дата, "ДФ='dd.MM HH:mm'");
			СтрокаДоб.ВажноеСобытие = Истина;
		КонецЕсли;	
		Если Счетчик % 10 = 0 Тогда
			СтрокаДоб.СопутствующийТекст = "" + Формат(СтрокаДоб.Дата, "ДФ='dd.MM HH:mm'");
		КонецЕсли;
		Если Выборка.Событие = Перечисления.СобытияТранспортнойСистемы.НаСкладе
			И ПредСобытие <> Выборка.Событие Тогда
			СтрокаДоб.СопутствующийТекст = "Заехал на склад " + Выборка.Объект + " в " + Формат(СтрокаДоб.Дата, "ДФ='dd.MM HH:mm'");
			СтрокаДоб.ВажноеСобытие = Истина;
		КонецЕсли;	
		ПредСобытие = Выборка.Событие;
		Счетчик = Счетчик + 1;
		ПредДолгота = Выборка.Долгота;
		ПредШирота = Выборка.Широта;
	КонецЦикла;
	
	Если ТаблицаТочек.Количество() > 0 Тогда
		ТаблицаТочек[ТаблицаТочек.Количество() - 1].СопутствующийТекст = "Конец маршрута в " + Формат(СтрокаДоб.Дата, "ДФ='dd.MM HH:mm'");
		СтрокаДоб.ВажноеСобытие = Истина;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ОтобразитьМаршрутНаКарте(Команда)
	
	ОчисткаКарты();
	Для Каждого СтрокаВыделенная Из Элементы.ТаблицаМаршрутов.ВыделенныеСтроки Цикл
		ЗаполнитьТаблицуТочекПоМаршруту(СтрокаВыделенная);
		Для Каждого СтрокаТочка Из ТаблицаТочек Цикл
			Если ЗначениеЗаполнено(СтрокаТочка.СопутствующийТекст) Тогда
				Если СтрокаТочка.ВажноеСобытие Тогда
					Элементы.Эксплорер.document.getElementById("WebClientOperation").value = "addRedMarker(" + Формат(СтрокаТочка.Широта, "ЧРД=.; ЧГ=0") + "," + Формат(СтрокаТочка.Долгота, "ЧРД=.; ЧГ=0") + "
						|, '" + СтрокаТочка.СопутствующийТекст + "')";
				Иначе	
					Элементы.Эксплорер.document.getElementById("WebClientOperation").value = "addMarker(" + Формат(СтрокаТочка.Широта, "ЧРД=.; ЧГ=0") + "," + Формат(СтрокаТочка.Долгота, "ЧРД=.; ЧГ=0") + "
						|, '" + СтрокаТочка.СопутствующийТекст + "')";
				КонецЕсли;		
				Элементы.Эксплорер.document.getElementById("WebClient").click();
			КонецЕсли;
		КонецЦикла;
		ПостроитьМаршрут();
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОчисткаКарты()
	
	Элементы.Эксплорер.document.getElementById("WebClientOperation").value = "Reset()";
	Элементы.Эксплорер.document.getElementById("WebClient").click();
	
КонецПроцедуры	

&НаКлиенте
Функция ПолучитьПараметрыМаршрута()
	Результат = "";
	
	Результат = Результат + "[[" + СтрЗаменить(Строка(ТаблицаТочек[0].Широта), ",", ".") + "," + СтрЗаменить(Строка(ТаблицаТочек[0].Долгота), ",", ".") + "],";
		
	Для Ин = 1 По ТаблицаТочек.Количество() - 2 Цикл
		Результат = Результат + "[" + СтрЗаменить(Строка(ТаблицаТочек[ин].Широта), ",", ".") + "," + СтрЗаменить(Строка(ТаблицаТочек[ин].Долгота), ",", ".") + "],";
	КонецЦикла;
		
	Результат = Результат + "[" + СтрЗаменить(Строка(ТаблицаТочек[ТаблицаТочек.Количество() - 1].Широта), ",", ".") + "," + СтрЗаменить(Строка(ТаблицаТочек[ТаблицаТочек.Количество() - 1].Долгота), ",", ".") + "]]";
		
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ПостроитьМаршрут()
	
	Элементы.Эксплорер.document.getElementById("WebClientOperation").value = "calcRoute(" + ПолучитьПараметрыМаршрута() + ")";
	Элементы.Эксплорер.document.getElementById("WebClient").click();
	
КонецПроцедуры	


&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьТаблицуМаршрутов();
	
КонецПроцедуры

