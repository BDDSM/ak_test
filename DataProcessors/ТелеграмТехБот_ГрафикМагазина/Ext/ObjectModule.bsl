//+++АК KOPA +Модуль 2018.03.02 ИП-00018046
//Модуль предназначен для методов телеграм тех бота
//Обработка графиков магазинов

#Область ___Тесты

Функция ___Переходы()
	Массив = Новый Массив;
	Массив.Добавить(Справочники.ФизическиеЛица);
	Массив.Добавить(Справочники.Пользователи);
	Массив.Добавить(Справочники.СтруктурныеЕдиницы);
	Массив.Добавить(Справочники.РолиПользователей);
	Массив.Добавить(РегистрыСведений.ПользователиПоЦФО);
	Массив.Добавить(РегистрыСведений.СоответствиеОбъектРоль);
	Массив.Добавить(ПланыВидовХарактеристик.ТипыРолейПользователя);
	Массив.Добавить(Справочники.ГрафикиРаботы);
	Массив.Добавить(РегистрыСведений.ГрафикиРаботыМагазина);

	Возврат Массив;
КонецФункции

Функция ___ДобавитьТестВТаблицу(Таблица, Ключ, Значение)
	Строка = Таблица.Добавить();
	Строка.Ключ = Ключ;
	Строка.Значение = ЗначениеВСтрокуВнутр(Значение);
КонецФункции

Функция ___ПолучитьТесты()
	Таблица = Новый ТаблицаЗначений;
	ТипСтрока = Новый ОписаниеТипов("Строка", ,Новый КвалификаторыСтроки(0, ДопустимаяДлина.Переменная));
	Таблица.Колонки.Добавить("Ключ", ТипСтрока);
	Таблица.Колонки.Добавить("Значение", ТипСтрока);
	
	ФИО = "Абляева Гольфия Идрисовна";
	ФизЛицоАбляева = ПолучитьУИДАктивноеФизЛицо(ФИО);
	Магазин1234 = "" + Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("1234М_Красн_Космонавтов1").УникальныйИдентификатор();
	
	Данные = Новый Структура; 
	Данные.Вставить("Физлицо", ФизЛицоАбляева);
	Данные.Вставить("ИмяКоманды", "ПодразделенияПомощникаПоРознице");
	
	___ДобавитьТестВТаблицу(Таблица, "Подразделения помощника по рознице Абляевой", Данные);
//	
	Данные = Новый Структура("ИмяКоманды", "СписокГрафикиРаботыМагазинов"); 
	Данные.Вставить("Магазин", "" + Магазин1234);
	
	___ДобавитьТестВТаблицу(Таблица, "Список графиков", Данные);
//
	
	График = "" + Справочники.ГрафикиРаботы.НайтиПоКоду("00007").УникальныйИдентификатор();
	Данные = Новый Структура("ИмяКоманды", "УстановитьГрафикМагазина"); 
	Данные.Вставить("ФизЛицо", ФизЛицоАбляева);
	Данные.Вставить("График", График);
	Данные.Вставить("Дата", '20180401');
	Данные.Вставить("Магазин", Магазин1234);
	
	___ДобавитьТестВТаблицу(Таблица, "Изменить график работы магазина. Физлицо - Магазин. График = 00007", Данные);
//	
	График = "" + Справочники.ГрафикиРаботы.НайтиПоКоду("00001").УникальныйИдентификатор();
	Данные = Новый Структура("ИмяКоманды", "УстановитьГрафикМагазина"); 
	Данные.Вставить("График", График);
	Данные.Вставить("Дата", '20180402');
	Данные.Вставить("Магазин", Магазин1234);
	
	___ДобавитьТестВТаблицу(Таблица, "Изменить график работы магазина. Магазин - Магазин. График = 00001", Данные);
	
	Возврат Таблица;
КонецФункции

Функция ___ПолучитьОписание() Экспорт 
	Структура = Новый Структура;
	Структура.Вставить("ИдЗадача", "ИП-00018046");
	Структура.Вставить("НаименованиеВнешнейОбработки", "___ПолучитьГрафик");
	Структура.Вставить("Переходы", ___Переходы());
	Структура.Вставить("ТаблицаТесты", ___ПолучитьТесты());
	
	Возврат Структура;
КонецФункции

Функция ПолучитьУИДАктивноеФизЛицо(ФИО)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФизическиеЛица.Ссылка
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	НЕ ФизическиеЛица.ПометкаУдаления
		|	И ФизическиеЛица.Активный
		|	И ФизическиеЛица.Наименование = &ФИО";
	Запрос.УстановитьПараметр("ФИО", ФИО);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Выборка.Следующий();
	
	Возврат "" + Выборка.Ссылка.УникальныйИдентификатор();
КонецФункции

#КонецОбласти

///////////////////////////////////////////////////////////////////////////////////////////////////////
//Описание формата данных
//Данные: Структура 


Функция ВыполнитьДействие(Данные) Экспорт 
	Если Данные.ИмяКоманды = "МагазиныПомощникаПоРознице" Тогда
		Возврат ПолучитьМагазиныПомощникаПоРозницеСтарт(Данные);	
	ИначеЕсли Данные.ИмяКоманды = "СписокГрафикиРаботыМагазинов" Тогда
		Возврат СписокГрафикиРаботыМагазинов(Данные);		
	ИначеЕсли Данные.ИмяКоманды = "УстановитьГрафикМагазина" Тогда
		Возврат УстановитьГрафикМагазина(Данные);		
	Иначе
		Возврат Новый Структура("Ошибка", "Не зашли");	
	КонецЕсли;
КонецФункции

#Область ПодразделенияПомощникаПоРознице

Функция ПолучитьМагазиныПомощникаПоРозницеСтарт(Данные)
	ФизЛицо = ТелеграмТехБот.ПолучитьФизЛицоПоУИД(Данные.ФизЛицо);

	Результат = Новый Структура;
	Результат.Вставить("Список", ПолучитьМагазиныПомощникаПоРознице(ФизЛицо));
	
	Возврат Результат;
КонецФункции

Функция ПолучитьМагазиныПомощникаПоРознице(ФизЛицо)	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РолиПользователейСоставРоли.Ссылка,
		|	РолиПользователейТипыРолей.ТипРоли
		|ПОМЕСТИТЬ тРоли
		|ИЗ
		|	Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.ТипыРолей КАК РолиПользователейТипыРолей
		|		ПО РолиПользователейСоставРоли.Ссылка = РолиПользователейТипыРолей.Ссылка
		|			И (НЕ РолиПользователейСоставРоли.Ссылка.ПометкаУдаления)
		|			И (РолиПользователейСоставРоли.Сотрудник = &ФизЛицо)
		//+++ AK suvv 2018.06.08 ИП-00018376.01
		//|			И (РолиПользователейТипыРолей.ТипРоли = &ТипРолиПомощникПоРознице)
		|			И (РолиПользователейТипыРолей.ТипРоли = &ТипРолиПомощникПоРознице ИЛИ РолиПользователейТипыРолей.ТипРоли = &ТипРолиПомощникСтороннейРозницы)
		//--- AK suvv
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(СоответствиеОбъектРольСрезПоследних.Объект КАК Справочник.СтруктурныеЕдиницы).Наименование КАК Наименование,
		|	СоответствиеОбъектРольСрезПоследних.Объект,
		|	ВЫРАЗИТЬ(СоответствиеОбъектРольСрезПоследних.Объект КАК Справочник.СтруктурныеЕдиницы).НомерТочки КАК НомерТочки
		|ИЗ
		|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&Период, ) КАК СоответствиеОбъектРольСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ тРоли КАК тРоли
		|		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = тРоли.Ссылка
		|			И (СоответствиеОбъектРольСрезПоследних.Объект ССЫЛКА Справочник.СтруктурныеЕдиницы)
		|			И СоответствиеОбъектРольСрезПоследних.ТипРоли = тРоли.ТипРоли
		|			И СоответствиеОбъектРольСрезПоследних.РольПользователя = тРоли.Ссылка
		|			И (ВЫРАЗИТЬ(СоответствиеОбъектРольСрезПоследних.Объект КАК Справочник.СтруктурныеЕдиницы).Активное)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование";
	
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	Запрос.УстановитьПараметр("ТипРолиПомощникПоРознице", ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего);
	//+++ AK suvv 2018.06.08 ИП-00018376.01
	Запрос.УстановитьПараметр("ТипРолиПомощникСтороннейРозницы", ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы);
	//---AK suvv
	
	Результат = Новый Массив;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	е = 0;
	Пока Выборка.Следующий() Цикл
		Магазин = Новый Структура;
		Магазин.Вставить("Представление", Выборка.Наименование);
				
		Магазин.Вставить("НомерТочки", Выборка.НомерТочки);
		Магазин.Вставить("УИД", "" + Выборка.Объект.УникальныйИдентификатор());
		Магазин.Вставить("ИД", е);
		
		е = е + 1;
		
		Результат.Добавить(Магазин);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область СписокГрафикиРаботыМагазинов

Функция СписокГрафикиРаботыМагазинов(Данные)
	Результат = Новый Структура;
	Магазин = ТелеграмТехБот.ПолучитьМагазинПоУИД(Данные.Магазин);
	Результат.Вставить("Список", ПолучитьСписокГрафикиРаботыМагазинов(ТекущаяДата(), Магазин));
	
	Возврат Результат;	

КонецФункции 

Функция ПолучитьСписокГрафикиРаботыМагазинов(Период, Магазин)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ГрафикиРаботыМагазинаСрезПоследних.График
		|ПОМЕСТИТЬ втГрафикМагазина
		|ИЗ
		|	РегистрСведений.ГрафикиРаботыМагазина.СрезПоследних(
		|			&Период,
		|			Магазин = &Магазин) КАК ГрафикиРаботыМагазинаСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ГрафикиРаботыМагазинаСрезПоследних.Магазин) КАК Количество,
		|	ГрафикиРаботыМагазинаСрезПоследних.График,
		|	ГрафикиРаботыМагазинаСрезПоследних.График.Наименование КАК Наименование
		|ПОМЕСТИТЬ втГрафики
		|ИЗ
		|	РегистрСведений.ГрафикиРаботыМагазина.СрезПоследних(&Период, ) КАК ГрафикиРаботыМагазинаСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	ГрафикиРаботыМагазинаСрезПоследних.График,
		|	ГрафикиРаботыМагазинаСрезПоследних.График.Наименование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втГрафики.График,
		|	втГрафики.Наименование,
		|	втГрафики.Количество КАК Количество,
		|	НЕ втГрафикМагазина.График ЕСТЬ NULL КАК Пометка
		|ИЗ
		|	втГрафики КАК втГрафики
		|		ЛЕВОЕ СОЕДИНЕНИЕ втГрафикМагазина КАК втГрафикМагазина
		|		ПО втГрафики.График = втГрафикМагазина.График
		|
		|УПОРЯДОЧИТЬ ПО
		|	Количество УБЫВ";
	
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Магазин", Магазин);
	
	Результат = Новый Массив;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	е = 0;
	Пока Выборка.Следующий() Цикл
//Регистр был пуст, при переносе данных появились несуществующие ссылки
		Если Выборка.Наименование = null Тогда
			Продолжить;
		КонецЕсли;
		
		График = Новый Структура;
		График.Вставить("Представление", Выборка.Наименование);
				
		График.Вставить("УИД", "" + Выборка.График.УникальныйИдентификатор());
		График.Вставить("ИД", е);
		График.Вставить("Пометка", Выборка.Пометка);
		
		е = е + 1;
		
		Результат.Добавить(График);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции 

#КонецОбласти

#Область УстановитьГрафикМагазина

Функция УстановитьГрафикМагазина(Данные)
	Результат = Новый Структура;
		
	Попытка	
		Ответ = УстановитьГрафикМагазинаСтарт(Данные);
		Результат.Вставить("ОК", Истина);
		Результат.Вставить("НомерМагазина", Ответ.НомерМагазина);
		Результат.Вставить("МагазинНаименование", Ответ.МагазинНаименование);
	Исключение
		Результат.Вставить("ОК", Ложь);
		Результат.Вставить("Ошибка", ОписаниеОшибки());
	КонецПопытки;
	
	Возврат Результат;
КонецФункции

Функция УстановитьГрафикМагазинаСтарт(Данные)
	АвторИзменений = Неопределено;
	
	Магазин = ТелеграмТехБот.ПолучитьМагазинПоУИД(Данные.Магазин);
	
	Если Данные.Свойство("ФизЛицо") Тогда
		ФизЛицо = ТелеграмТехБот.ПолучитьФизЛицоПоУИД(Данные.ФизЛицо);
		
		Пользователь = ТелеграмТехБот.ПолучитьПользователяПоФизЛицу(ФизЛицо);
		
		Если Не ЗначениеЗаполнено(Пользователь) Тогда
			ВызватьИсключение "Пользователь не найден. ФизЛицо: " + ФизЛицо;	
		КонецЕсли;
		
		АвторИзменений = Пользователь;
	Иначе 
		АвторИзменений = Магазин;
	КонецЕсли;
	
	Период = Данные.Дата;
	График = ТелеграмТехБот.ПолучитьСсылкуПоГУИД_Строка(Данные.График, Справочники.ГрафикиРаботы);
	
	ЗаписатьГрафикМагазина(Период, Магазин, График, АвторИзменений);
	
	Результат = Новый Структура;
	Результат.Вставить("НомерМагазина", Магазин.НомерТочки);
	Результат.Вставить("МагазинНаименование", Магазин.Наименование);
	
	Возврат Результат;
КонецФункции

Функция ЗаписатьГрафикМагазина(Период, Магазин, График, АвторИзменений)
	запись = РегистрыСведений.ГрафикиРаботыМагазина.СоздатьМенеджерЗаписи();
	запись.Период = Период;
	запись.Магазин = Магазин;
	запись.График = График;
	запись.АвторИзменений = АвторИзменений;
	запись.ДатаИзменения = ТекущаяДата();
	
	запись.Записать();
КонецФункции

#КонецОбласти














