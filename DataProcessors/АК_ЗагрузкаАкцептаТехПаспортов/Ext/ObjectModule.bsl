
Процедура Загрузить() Экспорт 
	
	ТаблицаПисем = Новый ТаблицаЗначений;
	ТаблицаПисем.Колонки.Добавить("ИДПаспорта");
	ТаблицаПисем.Колонки.Добавить("ИДПисьма");
	ТаблицаПисем.Колонки.Добавить("СтатусАкцепта");
	ТаблицаПисем.Колонки.Добавить("ДатаОтвета");  

	ПолучитьТаблицуИзПисем(ТаблицаПисем); 
	
	НаборЗаписей = РегистрыСведений.АК_АкцептТехПаспортов.СоздатьНаборЗаписей();  
	
	Для Каждого стр Из ТаблицаПисем Цикл
		
		ТехПаспорт = Справочники.АК_ТехническиеПаспорта.ПолучитьСсылку(Новый УникальныйИдентификатор(стр.ИДПаспорта));
		НаборЗаписей.Отбор.ТехПаспорт.Установить(ТехПаспорт);
		НаборЗаписей.Отбор.ИДТехПаспорта.Установить(стр.ИДПаспорта); 
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() = 0 Тогда
			Продолжить;	
		КонецЕсли; 
		
		мЗапись = НаборЗаписей[0];
		
		Если мЗапись.СтатусАкцепта <> Перечисления.АК_СтатусыАкцептаТехПаспортов.ВПроцессеПринятия Тогда
		
			ПредупредитьОНевозможностиИзмененияСтатуса(мЗапись);
			Продолжить;;
		
		КонецЕсли; 
		ЗаполнитьЗначенияСвойств(мЗапись, стр, "ДатаОтвета, СтатусАкцепта");
	    НаборЗаписей.Записать();
		
	КонецЦикла; 
	
	РассылкаОтветсвеннымПоНеПринятымПаспортам(ТаблицаПисем);
	
КонецПроцедуры

Процедура ПредупредитьОНевозможностиИзмененияСтатуса(мЗапись)
	
	ПредставлениеАдреса = мЗапись.ЭлектронныеАдресаРассылки;
	МассивАдресов = Справочники.Контрагенты.РазложитьСтрокуВМассивПодстрок(ПредставлениеАдреса,";");
	
	ТемаПисьма = НСтр("ru = 'Попытка повторного акцепта тех. паспорта'"); 
	ТекстПисьма = НСтр("ru = 'Вы пытаетесь повторно изменить статус акцепта тех.паспорта %ТехПаспорт%:'") + Символы.ПС;
	
	Если мЗапись.СтатусАкцепта = Перечисления.АК_СтатусыАкцептаТехПаспортов.Отклонен Тогда
		ТекстПисьма = ТекстПисьма + НСтр("ru = 'Вами уже было отклонено получение данного тех. паспорта'") + Символы.ПС;	
	Иначе
		ТекстПисьма = ТекстПисьма + НСтр("ru = 'Вы уже подтвердили получение данного техпаспорта'") + Символы.ПС;
	КонецЕсли; 
	
	ТекстПисьма = СтрЗаменить(ТекстПисьма, "%ТехПаспорт%", "'" + мЗапись.ТехПаспорт + "'");
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Получатели", МассивАдресов);
	СтруктураДанных.Вставить("ТемаПисьма", ТемаПисьма);
	СтруктураДанных.Вставить("ТекстПисьма", ТекстПисьма);
	
	ОсуществтьРассылкуНаЭлПочту(СтруктураДанных);
	
КонецПроцедуры

Процедура ПолучитьТаблицуИзПисем(ТаблицаПисем)
	
	АдресЭПОтправителя = "accept@izbenka.msk.ru";
	УчёткаЭлектроннойПочты = МеханизмОбменаСообщениями.ПолучитьУчеткуДляНастройкиОтправкиЭП(АдресЭПОтправителя);
			
	Если НЕ ЗначениеЗаполнено(УчёткаЭлектроннойПочты) Тогда
		УчёткаЭлектроннойПочты = МеханизмОбменаСообщениями.ПолучитьУчетнуюЗаписьПоАдресу("m@gmail.com");
		Если НЕ ЗначениеЗаполнено(УчёткаЭлектроннойПочты) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ФорматированныйДокумент 	= Новый ФорматированныйДокумент;
	Почта 						= Новый ИнтернетПочта;
	Профиль 					= УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчёткаЭлектроннойПочты);
	ДополнитьНастройкиПрофиля(Профиль);
			
	Попытка
		Почта.Подключиться(Профиль, ПротоколИнтернетПочты.IMAP);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	ДатаПослПроверки = ПолучитьДатуПолседнейПроверкиПисем();	
	СтруктураПоиска = Новый Структура("ПослеДатыОтправления", ДатаПослПроверки);
	
	Заголовки = Почта.ПолучитьЗаголовки(СтруктураПоиска);
	Письма = Почта.Выбрать(Истина, Заголовки);   
	
	Для каждого Письмо Из Письма Цикл
		
		Если Найти(Письмо.Тема, "Принятие тех. пасорта №") = 0 Тогда
			Продолжить;
		КонецЕсли; 
		
		Для каждого стр Из Письмо.Тексты Цикл
			Если стр.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст Тогда
				ТекстПисьма = стр.Текст;
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
		
		СтруктураДанных = Новый Структура("ТекстПисьма", ТекстПисьма);
		РазложитьТекстПисьма(СтруктураДанных);	
		
		СтруктураОтбора = Новый Структура("ИДПаспорта, ИДПисьма", СтруктураДанных.ИДПаспорта, СтруктураДанных.ИДПисьма);
		
		НайденныеСтроки = ТаблицаПисем.НайтиСтроки(СтруктураОтбора);
		
		Если НайденныеСтроки.Количество() > 0  Тогда
			НайденныеСтроки[0].СтатусАкцепта = СтруктураДанных.СтатусАкцепта;
		Иначе
			НовСтр = ТаблицаПисем.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, СтруктураДанных);
			НовСтр.ДатаОтвета = Письмо.ДатаПолучения;
		КонецЕсли; 
	
	КонецЦикла; 	
	
КонецПроцедуры

Процедура РазложитьТекстПисьма(Данные);
	
	ТекстПисьма =  Данные.ТекстПисьма;
	
	ПоложениеИДСпр = Найти(ТекстПисьма, "GUID") + 5;
	ПоложениеИДПисьма = Найти(ТекстПисьма, "ID_MESSAGE") + 11;	
	
	Данные.Вставить("ИДПаспорта", Сред(Данные.ТекстПисьма, ПоложениеИДСпр, 36));
	Данные.Вставить("ИДПисьма", Сред(Данные.ТекстПисьма, ПоложениеИДПисьма, 36));	
	Данные.Вставить("СтатусАкцепта", ?(Найти(ТекстПисьма, "Акцептировано") > 0, 
									   Перечисления.АК_СтатусыАкцептаТехПаспортов.Принят, Перечисления.АК_СтатусыАкцептаТехПаспортов.Отклонен));	
	
КонецПроцедуры

Процедура ДополнитьНастройкиПрофиля(Профиль)
	
	Профиль.Пользователь 		= "vkusvill.444@gmail.com";
	Профиль.ПользовательSMTP 	= "vkusvill.444@gmail.com"; 
	Профиль.ПользовательIMAP 	= "vkusvill.444@gmail.com"; 
	Профиль.Пароль 				= "v352aa44v352aa44";
	Профиль.ПарольSMTP 			= Профиль.Пароль;
	Профиль.ПарольIMAP 			= Профиль.Пароль;
	Профиль.ПортIMAP 			= 993;
	Профиль.ИспользоватьSSLIMAP = Истина;
	Профиль.АдресСервераIMAP 	= "imap.gmail.com";
	Профиль.АдресСервераSMTP    = "smtp.gmail.com";
	Профиль.ПортSMTP = 465;
	Профиль.ИспользоватьSSLSMTP	        = Истина;
	Профиль.АутентификацияSMTP = СпособSMTPАутентификации.Login;
	
КонецПроцедуры

Функция ПолучитьДатуПолседнейПроверкиПисем()
	
	ИсточникОбращения = Справочники.ИсточникиОбращений.ДатаПоследнегоПисьмаТехПаспорта;
	РегСведПараметрыРаботыССоцСетями = РегистрыСведений.ПараметрыРаботыССоцСетями;
	
	Возврат РегСведПараметрыРаботыССоцСетями.ПолучитьЗначениеПараметра(ИсточникОбращения, "АкцептТехПаспортов");
																																			  
КонецФункции

Процедура РассылкаОтветсвеннымПоНеПринятымПаспортам(Письма)
			
	СтруктураДнных = Новый Структура;
	МассивАдресов = Новый Массив;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	КонтактнаяИнформация.Объект,
		                      |	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(250)) КАК ЭлАдрес
		                      |ИЗ
		                      |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		                      |ГДЕ
		                      |	КонтактнаяИнформация.Объект В
		                      |			(ВЫБРАТЬ
		                      |				т.Ответственный
		                      |			ИЗ
		                      |				РегистрСведений.АК_ОтветственныеЗаТехПаспорта КАК т)
		                      |	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)");
	
	Запрос.УстановитьПараметр("текДата", ТекущаяДата());
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда	
		Возврат;
	КонецЕсли;        
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		МассивАдресов.Добавить(Выборка.ЭлАдрес);	
	КонецЦикла;
	
	СтруктураДнных.Вставить("Получатели", МассивАдресов);
	
	
	СтруктураДнных.Вставить("ТемаПисьма", НСтр("ru = 'Тех. поспорт не был принят магазином'"));
	ТекстПисьма = НСтр("ru = 'Подробно:'") + Символы.ПС;   
	
	сч = 0;
		
	Для Каждого стр Из Письма Цикл
		
		Если стр.СтатусАкцепта = Перечисления.АК_СтатусыАкцептаТехПаспортов.Отклонен Тогда 
			ТехПаспорт = Справочники.АК_ТехническиеПаспорта.ПолучитьСсылку(Новый УникальныйИдентификатор(стр.ИДПаспорта));
			ТекстПисьма = ТекстПисьма + НСтр("ru = '%СтрукЕд% (тех. паспорт: %ТП%), принимающее лицо: %Принимающий%'") + Символы.ПС;	
			ТекстПисьма = СтрЗаменить(ТекстПисьма, "%СтрукЕд%", Строка(ТехПаспорт.Владелец));
			ТекстПисьма = СтрЗаменить(ТекстПисьма, "%ТП%", Строка(ТехПаспорт));
			ТекстПисьма = СтрЗаменить(ТекстПисьма, "%Принимающий%", Строка(ТехПаспорт.Принял));
			сч = сч + 1;
		КонецЕсли;
		
	КонецЦикла; 
	
	Если сч = 0 Тогда	
		Возврат;	
	КонецЕсли; 
	
	СтруктураДнных.Вставить("ТекстПисьма", ТекстПисьма);
	
	ОсуществтьРассылкуНаЭлПочту(СтруктураДнных)
	
КонецПроцедуры

Процедура ОсуществтьРассылкуНаЭлПочту(Данные)
	
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(Справочники.УчетныеЗаписиЭлектроннойПочты.ОтветсвенныйЗаЗаявки);
	Профиль.ИспользоватьSSLSMTP = Истина;
	Профиль.ИспользоватьSSLPOP3 = Истина;
	
	Почта = Новый ИнтернетПочта;
	
	Попытка
		Почта.Подключиться(Профиль, ПротоколИнтернетПочты.POP3);
	Исключение 
		ЗаписьЖурналаРегистрации("РеглЗадание_РассылкаАкцептТехПаспортов",,,,ОписаниеОшибки());
	КонецПопытки;
	
	
	Получатели = Данные.Получатели;
	
	ПочтСообщение = Новый  ИнтернетПочтовоеСообщение;
	ПочтСообщение.Тема = Данные.ТемаПисьма;
	   
	ПочтСообщение.Отправитель = Профиль.Пользователь;
	
	Для Каждого стр Из Данные.Получатели Цикл 
		ПочтСообщение.Получатели.Добавить(стр);	
	КонецЦикла;
	 
	
	ПочтСообщение.Тексты.Добавить(Данные.ТекстПисьма);
	
	Попытка
		Почта.Послать(ПочтСообщение,, ПротоколИнтернетПочты.SMTP);
	Исключение 
		ЗаписьЖурналаРегистрации("РеглЗадание_АкцептТехПасопртов_РассылкаПоНеПринятым",,,,ОписаниеОшибки());
	КонецПопытки;
	
	Попытка
		Почта.Отключиться();
	Исключение
	КонецПопытки;

	
КонецПроцедуры

