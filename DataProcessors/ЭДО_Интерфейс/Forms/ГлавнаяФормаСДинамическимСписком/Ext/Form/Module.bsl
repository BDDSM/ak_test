&НаКлиенте
Перем мКэшЭДО Экспорт;

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ДоступПолный = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.ДоступКСБИС, Ложь);
	
	ДоступТолькоПросмотр = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.ДоступКСБИСТолькоПросмотр, Ложь);
	
	Отказ = Не ДоступПолный И НЕ ДоступТолькоПросмотр;
	
	Если Отказ Тогда
		Предупреждение("Недостаточно прав доступа!");
		Возврат;
	КонецЕсли;
	
	мКэшЭДО = ЭДО_ОбщегоНазначения.ПолучитьКэш();
КонецПроцедуры


&НаКлиенте
Процедура Сопоставить(Команда)
	МассивСтрок = Элементы.ТаблицаПакетов_ДС.ВыделенныеСтроки;
	
	МассивПакетов = Новый Массив;
	Для каждого Зн Из МассивСтрок Цикл
		МассивПакетов.Добавить(Элементы.ТаблицаПакетов_ДС.ДанныеСтроки(Зн).ИдентификаторПакета);
	КонецЦикла;	
	МассовоСопоставить(МассивПакетов);	
	Элементы.ТаблицаПакетов_ДС.Обновить();
КонецПроцедуры

&НаСервере
Процедура МассовоСопоставить(МассивПакетов)
	Для каждого Зн Из МассивПакетов Цикл
		Обработки.ЭДО_Интерфейс.ПоискИПрикрепленияЗаявокИПрикрепленныхДокументовПоИДПакета(Зн);
	КонецЦикла;	
КонецПроцедуры	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ФормаСворачиватьПоНоменклатуре.Пометка = Ложь; //shae 2018.07.14 ИП-00019085
	
	//КэшЭДО = Новый ФиксированнаяСтруктура(мКэшЭДО);
КонецПроцедуры

&НаСервереБезКонтекста 
Процедура ОбновитьЗаявкуВЗаписиЭДОПакеты(Структура)
	Запись = РегистрыСведений.ЭДО_Пакеты.СоздатьМенеджерЗаписи();
	Запись.ИдентификаторПакета = Структура.ИдентификаторПакета;
	Запись.Прочитать();
	Если Запись.Выбран() = Истина Тогда
		Запись.Заявка = Структура.Заявка;
		Запись.Записать();
	КонецЕсли;	
КонецПроцедуры	

&НаКлиенте
Процедура Утвердить(Команда)
	
	МассивСтрок = Элементы.ТаблицаПакетов_ДС.ВыделенныеСтроки;
	
	МассивПакетов = Новый Массив;
	Для каждого Зн Из МассивСтрок Цикл
		МассивПакетов.Добавить(Элементы.ТаблицаПакетов_ДС.ДанныеСтроки(Зн).ИдентификаторПакета);
	КонецЦикла;	
	
	Ответ = Вопрос("Вы действительно хотите утвердить документы?", РежимДиалогаВопрос.ДаНет);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		
		Комментарий = "";
		//Если ВвестиЗначение(Комментарий, "Коментарий к согласованию (необязательно):") Тогда
		//ОтклонитьУтвердитьНаСервереМассово(МассивПакетов, Истина, Комментарий, мКэшЭДО); 
		ОтклонитьУтвердитьНаКлиенте(МассивПакетов, Истина, Комментарий, мКэшЭДО);
		//КонецЕсли;
	КонецЕсли;
	Элементы.ТаблицаПакетов_ДС.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура Отклонить(Команда)
	МассивСтрок = Элементы.ТаблицаПакетов_ДС.ВыделенныеСтроки;
	
	МассивПакетов = Новый Массив;
	Для каждого Зн Из МассивСтрок Цикл
		МассивПакетов.Добавить(Элементы.ТаблицаПакетов_ДС.ДанныеСтроки(Зн).ИдентификаторПакета);
	КонецЦикла;	
	
	Комментарий = "";
	Если ВвестиЗначение(Комментарий, "Комментарий к отклонению (обязательно):") Тогда
		Если ЗначениеЗаполнено(Комментарий) = Истина Тогда
			//ОтклонитьУтвердитьНаСервереМассово(МассивПакетов, Ложь, Комментарий, мКэшЭДО);
			ОтклонитьУтвердитьНаКлиенте(МассивПакетов, Ложь, Комментарий, мКэшЭДО);
		КонецЕсли;	
	КонецЕсли;
	Элементы.ТаблицаПакетов_ДС.Обновить();
КонецПроцедуры

&НаКлиенте
Процедура ОтклонитьУтвердитьНаКлиенте(МассивПакетов, Утвердить, Комментарий, КэшЭДО)	

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЭДО_ВходящийДокумент.Ссылка,
	|	ЭДО_ВходящийДокумент.ИдентификаторДокумента,
	|	ЭДО_ВходящийДокумент.ИдентификаторПакета КАК ИдентификаторПакета,
	|	ЭДО_ВходящийДокумент.КаналОбмена КАК КаналОбмена
	|ИЗ
	|	Документ.ЭДО_ВходящийДокумент КАК ЭДО_ВходящийДокумент
	|ГДЕ
	|	ЭДО_ВходящийДокумент.ИдентификаторПакета В(&ИдентификаторПакета)
	|ИТОГИ ПО
	|	КаналОбмена,
	|	ИдентификаторПакета";
	
	Запрос.УстановитьПараметр("ИдентификаторПакета", МассивПакетов);
	
	ВыборкаКаналОбмена = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаКаналОбмена.Следующий() Цикл		
		Если ВыборкаКаналОбмена.КаналОбмена = Справочники.ЭДО_КаналыОбмена.СБИС Тогда
			ВыборкаПакет = ВыборкаКаналОбмена.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПакет.Следующий() Цикл
				ЭДО_ОбщегоНазначения.УтвердитьОтклонитьДокумент(КэшЭДО, ВыборкаПакет.ИдентификаторПакета, Справочники.ЭДО_КаналыОбмена.СБИС, Утвердить, Комментарий);
				//Сообщить("СБИС Пакет" + ВыборкаПакет.ИдентификаторПакета);
			КонецЦикла;	
		ИначеЕсли ВыборкаКаналОбмена.КаналОбмена = Справочники.ЭДО_КаналыОбмена.Диадок Тогда			
			ВыборкаПакет = ВыборкаКаналОбмена.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПакет.Следующий() Цикл
				ВыборкаДокумент = ВыборкаПакет.Выбрать();
				Пока ВыборкаДокумент.Следующий() Цикл
					ЭДО_ОбщегоНазначения.УтвердитьОтклонитьДокумент(КэшЭДО, ВыборкаДокумент.ИдентификаторДокумента, Справочники.ЭДО_КаналыОбмена.Диадок, Утвердить, Комментарий);
					//Сообщить("Диадок Документ" + ВыборкаДокумент.ИдентификаторДокумента);
				КонецЦикла; 
			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура ОтклонитьУтвердитьНаСервереМассово(МассивПакетов, Утвердить, Комментарий, КэшЭДО)	

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЭДО_ВходящийДокумент.Ссылка,
	|	ЭДО_ВходящийДокумент.ИдентификаторДокумента,
	|	ЭДО_ВходящийДокумент.ИдентификаторПакета КАК ИдентификаторПакета,
	|	ЭДО_ВходящийДокумент.КаналОбмена КАК КаналОбмена
	|ИЗ
	|	Документ.ЭДО_ВходящийДокумент КАК ЭДО_ВходящийДокумент
	|ГДЕ
	|	ЭДО_ВходящийДокумент.ИдентификаторПакета В(&ИдентификаторПакета)
	|ИТОГИ ПО
	|	КаналОбмена,
	|	ИдентификаторПакета";
	
	Запрос.УстановитьПараметр("ИдентификаторПакета", МассивПакетов);
	
	ВыборкаКаналОбмена = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаКаналОбмена.Следующий() Цикл		
		Если ВыборкаКаналОбмена.КаналОбмена = Справочники.ЭДО_КаналыОбмена.СБИС Тогда
			ВыборкаПакет = ВыборкаКаналОбмена.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПакет.Следующий() Цикл
				ЭДО_ОбщегоНазначения.УтвердитьОтклонитьДокумент(КэшЭДО, ВыборкаПакет.ИдентификаторПакета, Справочники.ЭДО_КаналыОбмена.СБИС, Утвердить, Комментарий);
				//Сообщить("СБИС Пакет" + ВыборкаПакет.ИдентификаторПакета);
			КонецЦикла;	
		ИначеЕсли ВыборкаКаналОбмена.КаналОбмена = Справочники.ЭДО_КаналыОбмена.Диадок Тогда			
			ВыборкаПакет = ВыборкаКаналОбмена.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПакет.Следующий() Цикл
				ВыборкаДокумент = ВыборкаПакет.Выбрать();
				Пока ВыборкаДокумент.Следующий() Цикл
					ЭДО_ОбщегоНазначения.УтвердитьОтклонитьДокумент(КэшЭДО, ВыборкаДокумент.ИдентификаторДокумента, Справочники.ЭДО_КаналыОбмена.Диадок, Утвердить, Комментарий);
					//Сообщить("Диадок Документ" + ВыборкаДокумент.ИдентификаторДокумента);
				КонецЦикла; 
			КонецЦикла;	
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры


&НаСервере
Функция ПечатьНаСервере(МассивПакетов, ЭтоИсходящий = Ложь)
	
	
	СписокПакетов = Новый СписокЗначений;
	СписокПакетов.ЗагрузитьЗначения(МассивПакетов);
	
	Запрос = Новый Запрос;
	
	//печатать последний по типу документ ЭДО
	Если ЭтоИсходящий = Ложь Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	ЭДО_ВходящийДокумент.ИдентификаторПакета,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЭДО_ВходящийДокумент.Ссылка) КАК Ссылка,
		|	ЭДО_ВходящийДокумент.ТипДокумента.ТипДокумента,
		|	МАКСИМУМ(ЭДО_ВходящийДокумент.ДатаЗагрузки) КАК ДатаЗагрузки
		|ПОМЕСТИТЬ ВТ_ПредвДанные
		|ИЗ
		|	Документ.ЭДО_ВходящийДокумент КАК ЭДО_ВходящийДокумент
		|ГДЕ
		|	ЭДО_ВходящийДокумент.ТипДокумента.ТипДокумента.Ссылка ЕСТЬ НЕ NULL 
		|	И ЭДО_ВходящийДокумент.ТипДокумента.ТипДокумента <> ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.Прочее)
		|	И ЭДО_ВходящийДокумент.ИдентификаторПакета В(&СписокПакетов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЭДО_ВходящийДокумент.ИдентификаторПакета,
		|	ЭДО_ВходящийДокумент.ТипДокумента.ТипДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭДО_ВходящийДокумент.Ссылка,
		|	ЭДО_ВходящийДокумент.ФайлPDF
		|ИЗ
		|	Документ.ЭДО_ВходящийДокумент КАК ЭДО_ВходящийДокумент
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПредвДанные КАК ВТ_ПредвДанные
		|		ПО ЭДО_ВходящийДокумент.ИдентификаторПакета = ВТ_ПредвДанные.ИдентификаторПакета
		|			И ЭДО_ВходящийДокумент.ТипДокумента.ТипДокумента = ВТ_ПредвДанные.ТипДокументаТипДокумента
		|			И ЭДО_ВходящийДокумент.ДатаЗагрузки = ВТ_ПредвДанные.ДатаЗагрузки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДО_ВходящийДокумент.Ссылка,
		|	ЭДО_ВходящийДокумент.ФайлPDF
		|ИЗ
		|	Документ.ЭДО_ВходящийДокумент КАК ЭДО_ВходящийДокумент
		|ГДЕ
		|	ЭДО_ВходящийДокумент.ТипДокумента.ТипДокумента.Ссылка ЕСТЬ NULL
		|	И ЭДО_ВходящийДокумент.ТипДокумента.ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.Прочее)
		|	И ЭДО_ВходящийДокумент.ИдентификаторПакета В(&СписокПакетов)";
		
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		|	ЭДО_ИсходящийДокумент.Ссылка,
		|	ЭДО_ИсходящийДокумент.ФайлPDF
		|ИЗ
		|	Документ.ЭДО_ИсходящийДокумент КАК ЭДО_ИсходящийДокумент
		|ГДЕ
		|	ЭДО_ИсходящийДокумент.ИдентификаторПакета В(&СписокПакетов)";

	КонецЕсли;	
	
	Запрос.УстановитьПараметр("СписокПакетов", СписокПакетов);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	МассивФайлов = Новый Массив;
	
	Для каждого Стр Из ТЗ Цикл
		МассивФайлов.Добавить(Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(Стр.ФайлPDF));
	КонецЦИкла;	
	
	Возврат МассивФайлов;
	
КонецФункции

&НаКлиенте
Процедура Печать(Команда)
	
	МассивСтрок = Элементы.ТаблицаПакетов_ДС.ВыделенныеСтроки;
	
	МассивПакетов = Новый Массив;
	Для каждого Зн Из МассивСтрок Цикл
		МассивПакетов.Добавить(Элементы.ТаблицаПакетов_ДС.ДанныеСтроки(Зн).ИдентификаторПакета);
	КонецЦикла;	
	
	
	МассивФайлов = ПечатьНаСервере(МассивПакетов); 	
	Для каждого ЗначМассива Из МассивФайлов Цикл
		ЗапуститьПриложение(ЗначМассива);
	КонецЦикла;	
		
КонецПроцедуры

&НаКлиенте
Процедура ПечатьИсх(Команда)
	
	МассивСтрок = Элементы.ТаблицаИсходящихПакетов.ВыделенныеСтроки;
	
	МассивПакетов = Новый Массив;
	Для каждого Зн Из МассивСтрок Цикл
		МассивПакетов.Добавить(Элементы.ТаблицаИсходящихПакетов.ДанныеСтроки(Зн).ИдентификаторПакета);
	КонецЦикла;	
	
	
	МассивФайлов = ПечатьНаСервере(МассивПакетов, Истина); 	
	Для каждого ЗначМассива Из МассивФайлов Цикл
		ЗапуститьПриложение(ЗначМассива);
	КонецЦикла;	
		
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПакетов_ДСВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТД = Элемент.ТекущиеДанные;
	Если ТД = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;		
	Если Поле.Имя = "ТаблицаПакетов_ДСКонтрагент" Тогда
		Если ЗначениеЗаполнено(ТД.Контрагент) = Истина Тогда
			ОткрытьЗначение(ТД.Контрагент);
		КонецЕсли;	
	ИначеЕсли Поле.Имя = "ТаблицаПакетов_ДСЗаявка" Тогда	
		
		Если ЗначениеЗаполнено(ТД.Контрагент) = Ложь ИЛИ ТипЗнч(ТД.Контрагент) <> Тип("СправочникСсылка.Контрагенты") Тогда
			Сообщить("Для выбора заявки необходимо сперва сопоставить контрагента");
			Возврат;
		КонецЕсли;	
					
		СписокЗаявок =  Обработки.ЭДО_Интерфейс.ПолучитьСписокПодходящихЗаявок(Новый Структура("Контрагент, СуммаПакета, ИдентификаторПакета", ТД.Контрагент, ТД.СуммаПакета, ТД.ИдентификаторПакета), Истина);
		
		Если ЗначениеЗаполнено(ТД.Заявка) = Истина Тогда
			СписокЗаявок.Добавить(ТД.Заявка);
		КонецЕсли;	
		
		СписокНомеровПакета = Обработки.ЭДО_Интерфейс.ПолучитьСписокНомеровПакета(ТД.ИдентификаторПакета);
			       	
		ПараметрыОткрытия = Новый Структура("СписокДокументов, Контрагент, ТекЗаявка, ОснованиеВДокументеЭДО, ТекСумма, СписокНомеров", СписокЗаявок, ТД.Контрагент, ТД.Заявка, ТД.Основание, ТД.СуммаПакета, СписокНомеровПакета);
		
		Заявка = ОткрытьФормуМодально("РегистрСведений.СБИС_Заявки.Форма.ФормаВыбораЗаявки", ПараметрыОткрытия, ЭтаФорма);
		
		Если Заявка = Неопределено Тогда
			Возврат;
		ИначеЕсли Заявка = КодВозвратаДиалога.Отмена Тогда
			//ВыбраннаяСтрока.Заявка  = Неопределено;	
			ТД.Заявка = Неопределено;
		Иначе
			//ВыбраннаяСтрока.Заявка  = Заявка;
			ТД.Заявка = Заявка;
		КонецЕсли;  
		
		ОбновитьЗаявкуВЗаписиЭДОПакеты(Новый Структура("Заявка, ИдентификаторПакета", ТД.Заявка, ТД.ИдентификаторПакета));
		
		Элементы.ТаблицаПакетов_ДС.Обновить();		
	Иначе		
		//shae 2018.07.14 ИП-00019085 добавила СворачиватьПоНоменклатуре
		ОткрытьФорму("Обработка.ЭДО_Интерфейс.Форма.ФормаРаботыСДокументом", Новый Структура("ИД_Пакета, Контрагент, Организация, СворачиватьПоНоменклатуре, Исходящий", ТД.ИдентификаторПакета, ТД.Контрагент, ТД.Организация, Элементы.ФормаСворачиватьПоНоменклатуре.Пометка, Ложь), ЭтаФорма, ТД.ИдентификаторПакета);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДокументы(Команда)
	ЗагрузитьДокументыФоновымЗаданием();	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДокументыФоновымЗаданием()
	
	Результат = ЭДО_ОбщегоНазначения.ЗагрузитьДокументыФоновымЗаданием(30);
	
	Если ТипЗнч(Результат) = Тип("ФоновоеЗадание") Тогда
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = "Запущена процедура загрузки документов, время начала:" + Строка(Результат.Начало);
		Сообщение.Сообщить();
	КонецЕсли;	
	//ИдентификаторЗадания = Неопределено;
	//
	//ПараметрыПроцедурыСБИС = Новый Массив;
	//ПараметрыПроцедурыСБИС.Добавить(Справочники.ЭДО_КаналыОбмена.СБИС);
	//ПараметрыПроцедурыСБИС.Добавить(15);
	//
	//ПараметрыПроцедурыДиадок = Новый Массив;
	//ПараметрыПроцедурыДиадок.Добавить(Справочники.ЭДО_КаналыОбмена.Диадок);
	//ПараметрыПроцедурыДиадок.Добавить(15);
	//
	//ПараметрыЗадания = Новый Массив;
	//ПараметрыЗадания.Добавить("ЭДО_ОбщегоНазначения.ЗагрузитьНовыеДокументы");
	//ПараметрыЗадания.Добавить(ПараметрыПроцедурыСБИС);
	//
	//МассивЗаданий = Новый Массив;
	//
	//Фильтр = Новый Структура("ИмяМетода, Состояние", "ЭДО_ОбщегоНазначения.ЗагрузитьНовыеДокументы", СостояниеФоновогоЗадания.Активно);
	//МассивЗаданий =  ФоновыеЗадания.ПолучитьФоновыеЗадания(Фильтр);
	//Если МассивЗаданий.Количество() > 0 Тогда
	//	Сообщение = Новый СообщениеПользователю();
	//	Сообщение.Текст = "Уже запущена процедура загрузки документов, время начала:" + Строка(МассивЗаданий.Получить(0).Начало);
	//	Сообщение.Сообщить();
	//	Возврат;
	//Иначе
	//	ФЗСБИС  = ФоновыеЗадания.Выполнить("ЭДО_ОбщегоНазначения.ЗагрузитьНовыеДокументы", ПараметрыПроцедурыСБИС, "Загрузка ЭДО Сбис");
	//	ФЗДиадок  = ФоновыеЗадания.Выполнить("ЭДО_ОбщегоНазначения.ЗагрузитьНовыеДокументы", ПараметрыПроцедурыДиадок, "Загрузка ЭДО Диадок");		
	//	Сообщение = Новый СообщениеПользователю();
	//	Сообщение.Текст = "Начата загрузка документов: " + Строка(ТекущаяДата());
	//	Сообщение.Сообщить();
	//	
	//	УИДЗаданияСбис = ФЗСБИС.УникальныйИдентификатор;
	//	УИДЗаданияДиадок = ФЗДиадок.УникальныйИдентификатор; 
	//	
	//КонецЕсли;	
	
	
КонецПроцедуры	

&НаКлиенте
Процедура ПериодОтбораПриИзменении(Элемент)
	//Элементы.ТаблицаПакетов_ДС.Период = ПериодОтбора;
	
	ГруппаОтбор=ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ТаблицаПакетов_ДС.Отбор.Элементы,"ДатаДокумента",ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
		
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбор,
		"ДатаДокумента", ВидСравненияКомпоновкиДанных.БольшеИлиРавно, ПериодОтбора.ДатаНачала,, ЗначениеЗаполнено(ПериодОтбора.ДатаНачала));	
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбор,
		"ДатаДокумента", ВидСравненияКомпоновкиДанных.МеньшеИлиРавно, ПериодОтбора.ДатаОкончания,, ЗначениеЗаполнено(ПериодОтбора.ДатаОкончания));	
		
КонецПроцедуры

&НаКлиенте
Процедура Отбор(Команда)
	Элементы.ФормаОтбор.Пометка = НЕ Элементы.ФормаОтбор.Пометка;
	Элементы.ГруппаОтбор.Видимость = Элементы.ФормаОтбор.Пометка;
КонецПроцедуры

&НаКлиенте
Процедура ПечатьТест(Команда)
	
		
	МассивСтрок = Элементы.ТаблицаПакетов_ДС.ВыделенныеСтроки;
	
	МассивПакетов = Новый Массив;
	Для каждого Зн Из МассивСтрок Цикл
		МассивПакетов.Добавить(Элементы.ТаблицаПакетов_ДС.ДанныеСтроки(Зн).ИдентификаторПакета);
	КонецЦикла;	
	
	
	
	ОбъедФайл = ПечатьНаСервереТест(МассивПакетов); 	
	Если ЗначениеЗАполнено(ОбъедФайл) = Истина Тогда
		ФайлРез = ПолучитьИмяВременногоФайла("pdf");
		ПолучитьФайл(ОбъедФайл, ФайлРез, Ложь);
		ЗапуститьПриложение(ФайлРез);
	Иначе
		Сообщить("Не удалось сформировать объединенный документ. Возможно выбрано слишком большое количество пакетов");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПечатьНаСервереТест(МассивПакетов, ЭтоИсходящий = Ложь)
	
	//Фильтр = Новый Структура("Пометка", Истина);
	//МассивПакетов = ТаблицаПакетов.Выгрузить(Фильтр).ВыгрузитьКолонку("ИдентификаторПакета");   
	//
	СписокПакетов = Новый СписокЗначений;
	СписокПакетов.ЗагрузитьЗначения(МассивПакетов);
	
	Запрос = Новый Запрос;
	Если  ЭтоИсходящий = Ложь Тогда
		Запрос.Текст = "ВЫБРАТЬ
		|	ЭДО_ВходящийДокумент.ИдентификаторПакета,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ЭДО_ВходящийДокумент.Ссылка) КАК Ссылка,
		|	ЭДО_ВходящийДокумент.ТипДокумента.ТипДокумента,
		|	МАКСИМУМ(ЭДО_ВходящийДокумент.ДатаЗагрузки) КАК ДатаЗагрузки
		|ПОМЕСТИТЬ ВТ_ПредвДанные
		|ИЗ
		|	Документ.ЭДО_ВходящийДокумент КАК ЭДО_ВходящийДокумент
		|ГДЕ
		|	ЭДО_ВходящийДокумент.ТипДокумента.ТипДокумента.Ссылка ЕСТЬ НЕ NULL 
		|	И ЭДО_ВходящийДокумент.ТипДокумента.ТипДокумента <> ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.Прочее)
		|	И ЭДО_ВходящийДокумент.ИдентификаторПакета В(&СписокПакетов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЭДО_ВходящийДокумент.ИдентификаторПакета,
		|	ЭДО_ВходящийДокумент.ТипДокумента.ТипДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭДО_ВходящийДокумент.Ссылка,
		|	ЭДО_ВходящийДокумент.ФайлPDF
		|ИЗ
		|	Документ.ЭДО_ВходящийДокумент КАК ЭДО_ВходящийДокумент
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПредвДанные КАК ВТ_ПредвДанные
		|		ПО ЭДО_ВходящийДокумент.ИдентификаторПакета = ВТ_ПредвДанные.ИдентификаторПакета
		|			И ЭДО_ВходящийДокумент.ТипДокумента.ТипДокумента = ВТ_ПредвДанные.ТипДокументаТипДокумента
		|			И ЭДО_ВходящийДокумент.ДатаЗагрузки = ВТ_ПредвДанные.ДатаЗагрузки
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЭДО_ВходящийДокумент.Ссылка,
		|	ЭДО_ВходящийДокумент.ФайлPDF
		|ИЗ
		|	Документ.ЭДО_ВходящийДокумент КАК ЭДО_ВходящийДокумент
		|ГДЕ
		|	ЭДО_ВходящийДокумент.ТипДокумента.ТипДокумента.Ссылка ЕСТЬ NULL
		|	И ЭДО_ВходящийДокумент.ТипДокумента.ТипДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.Прочее)
		|	И ЭДО_ВходящийДокумент.ИдентификаторПакета В(&СписокПакетов)";
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		|	ЭДО_ИсходящийДокумент.Ссылка,
		|	ЭДО_ИсходящийДокумент.ФайлPDF
		|ИЗ
		|	Документ.ЭДО_ИсходящийДокумент КАК ЭДО_ИсходящийДокумент
		|ГДЕ
		|	ЭДО_ИсходящийДокумент.ИдентификаторПакета В(&СписокПакетов)";

	КонецЕсли;
	
	
	
	Запрос.УстановитьПараметр("СписокПакетов", СписокПакетов);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	МассивФайлов = Новый Массив;
	
	Для каждого Стр Из ТЗ Цикл
		МассивФайлов.Добавить(Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(Стр.ФайлPDF));
	КонецЦИкла;	
	
	ФайлРезультат = Справочники.АК_АлгоритмыРаспознаванияФайлов.РазбитьPDFФайл(МассивФайлов);
	
	ФайлНаДиске = Новый Файл(ФайлРезультат);
	Если ФайлНаДиске.Существует() Тогда
		Возврат ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ФайлНаДиске.ПолноеИмя));
	Иначе
		Возврат Неопределено;
	КонецЕсли;	
	
КонецФункции

&НаКлиенте
Процедура ПерезагрузитьПакет(Команда)
	
	ТекущиеДанные = Элементы.ТаблицаПакетов_ДС.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ЭДО_ОбщегоНазначения.ПерезагрузитьПакет(мКэшЭДО, ТекущиеДанные.ИдентификаторПакета, ТекущиеДанные.КаналОбмена);
	
	Элементы.ТаблицаПакетов_ДС.Обновить();
	
КонецПроцедуры

//shae 2018.07.14 ИП-00019085
&НаКлиенте
Процедура СворачиватьПоНоменклатуре(Команда)
	Элементы.ФормаСворачиватьПоНоменклатуре.Пометка = НЕ Элементы.ФормаСворачиватьПоНоменклатуре.Пометка;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаИсходящихПакетовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТД = Элемент.ТекущиеДанные;
	Если ТД = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;		
	Если Поле.Имя = "ТаблицаИсходящихПакетовКонтрагент" Тогда
		Если ЗначениеЗаполнено(ТД.Контрагент) = Истина Тогда
			ОткрытьЗначение(ТД.Контрагент);
		КонецЕсли;
	Иначе		
		ОткрытьФорму("Обработка.ЭДО_Интерфейс.Форма.ФормаРаботыСДокументом", Новый Структура("ИД_Пакета, Контрагент, Организация, СворачиватьПоНоменклатуре, Исходящий, ДокументОсонование", ТД.ИдентификаторПакета, ТД.Контрагент, ТД.Организация, Элементы.ФормаСворачиватьПоНоменклатуре.Пометка, Истина, ТД.ДокументОснование), ЭтаФорма, ТД.ИдентификаторПакета);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьТестИсх(Команда)
		
	МассивСтрок = Элементы.ТаблицаИсходящихПакетов.ВыделенныеСтроки;
	
	МассивПакетов = Новый Массив;
	Для каждого Зн Из МассивСтрок Цикл
		МассивПакетов.Добавить(Элементы.ТаблицаИсходящихПакетов.ДанныеСтроки(Зн).ИдентификаторПакета);
	КонецЦикла;	
	  	    	
	ОбъедФайл = ПечатьНаСервереТест(МассивПакетов, Истина); 	
	Если ЗначениеЗАполнено(ОбъедФайл) = Истина Тогда
		ФайлРез = ПолучитьИмяВременногоФайла("pdf");
		ПолучитьФайл(ОбъедФайл, ФайлРез, Ложь);
		ЗапуститьПриложение(ФайлРез);
	Иначе
		Сообщить("Не удалось сформировать объединенный документ. Возможно выбрано слишком большое количество пакетов");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ГрупповаяОтправкаЭДО(Команда)
	ОткрытьФорму("Обработка.ЭДО_Интерфейс.Форма.ГрупповаяОтправкаЭДО",,ЭтаФорма);
КонецПроцедуры



