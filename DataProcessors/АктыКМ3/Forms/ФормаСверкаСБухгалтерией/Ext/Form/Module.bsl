
Функция ВыполнитьПодключениеКБазе(СоединениеСБазой)
	
	Попытка
		
		Коннектор = Новый COMObject(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Бух() + ".COMConnector");
		// создается объект COM-соединение
		
		Строка = ПолныеПрава.ПолучитьСтрокуПодключения_Бух();
		СоединениеСБазой = Коннектор.Connect(Строка);
	Исключение
		СоединениеСБазой = Неопределено;
		Сообщить("Подключится к базе невозможно! " + Символы.ПС+Строка(ОписаниеОшибки()));
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура СверитьНаСервере()
	
	ТабСверка.Очистить();
	
	СоединениеСБазой = Неопределено;
	
	Если НЕ ВыполнитьПодключениеКБазе(СоединениеСБазой) Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросКеш = Новый Запрос();
	ЗапросКеш.Текст = "ВЫБРАТЬ
	                  |	СтруктурныеЕдиницы.Ссылка,
	                  |	СтруктурныеЕдиницы.НомерТочки
	                  |ИЗ
	                  |	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	                  |ГДЕ
	                  |	СтруктурныеЕдиницы.НомерТочки >= 0";
					  
	ТабКеш = ЗапросКеш.Выполнить().Выгрузить();
	
	ЗапросПодкл = СоединениеСБазой.NewObject("Запрос");
	ЗапросПодкл.УстановитьПараметр("ДатаНач", НачалоДня(Объект.ДатаНачала));
	ЗапросПодкл.УстановитьПараметр("ДатаКон", КонецДня(Объект.ДатаОкончания));
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ЗапросПодкл.УстановитьПараметр("Организация", СоединениеСБазой.Справочники.Организации.НайтиПоРеквизиту("ИНН", Объект.Организация.ИНН));
	Иначе
		ЗапросПодкл.УстановитьПараметр("Организация", СоединениеСБазой.Справочники.Организации.ПустаяСсылка());
	КонецЕсли;	
	ЗапросПодкл.УстановитьПараметр("Коммент", "КМ-3%");
	ЗапросПодкл.УстановитьПараметр("СУчетомУдаленных", СУчетомУдаленных);
	ЗапросПодкл.УстановитьПараметр("Свойство", СоединениеСБазой.ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Возврат удален обработкой переноса"));
	ЗапросПодкл.Текст = "ВЫБРАТЬ
						|	ВозвратТоваровОтПокупателя.ПодразделениеОрганизации.Префикс КАК Префикс,
						|	СУММА(ВозвратТоваровОтПокупателя.СуммаДокумента) КАК СуммаДокумента,
						|	НАЧАЛОПЕРИОДА(ВозвратТоваровОтПокупателя.Дата, ДЕНЬ) КАК Дата
						|ИЗ
						|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
						|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
						|		ПО (ВозвратТоваровОтПокупателя.Ссылка = ЗначенияСвойствОбъектов.Объект
						|				И ЗначенияСвойствОбъектов.Свойство = &Свойство)
						|ГДЕ
						|	ВозвратТоваровОтПокупателя.Дата МЕЖДУ &ДатаНач И &ДатаКон
						|	И (ВозвратТоваровОтПокупателя.Проведен = ИСТИНА ИЛИ &СУчетомУдаленных = Истина И ЕстьNULL(ЗначенияСвойствОбъектов.Значение, Ложь) = Истина)
						|	И (ВозвратТоваровОтПокупателя.Организация = &Организация
						|			ИЛИ &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
						|	И ВозвратТоваровОтПокупателя.Комментарий Подобно &Коммент
                        |
						|СГРУППИРОВАТЬ ПО
						|	ВозвратТоваровОтПокупателя.ПодразделениеОрганизации.Префикс,
						|	НАЧАЛОПЕРИОДА(ВозвратТоваровОтПокупателя.Дата, ДЕНЬ)";
						
						
	ТабБух = Новый ТаблицаЗначений();
	ТабБух.Колонки.Добавить("ТТ", Новый ОписаниеТипов("СправочникСсылка.СтруктурныеЕдиницы"));
	ТабБух.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	ТабБух.Колонки.Добавить("СуммаДокумента", Новый ОписаниеТипов("Число"));
	
	Выборка = ЗапросПодкл.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДоб = ТабБух.Добавить();
		Попытка
			СтрокаКешТТ = ТабКеш.Найти(Число(Выборка.Префикс), "НомерТочки");
		Исключение
			СтрокаКешТТ = Неопределено;
		КонецПопытки;	
		СтрокаДоб.ТТ = ?(СтрокаКешТТ <> Неопределено, СтрокаКешТТ.Ссылка, Неопределено);
		СтрокаДоб.Дата = Выборка.Дата;
		СтрокаДоб.СуммаДокумента = Выборка.СуммаДокумента;
	КонецЦикла;	
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.ДатаОкончания));
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("НетОтбораПоОрг", НЕ ЗначениеЗаполнено(Объект.Организация));
	Запрос.УстановитьПараметр("Таб", ТабБух);
	Запрос.Текст = "ВЫБРАТЬ
	               |	Таб.ТТ,
	               |	Таб.Дата,
	               |	Таб.СуммаДокумента
	               |ПОМЕСТИТЬ ВТ_Таб
	               |ИЗ
	               |	&Таб КАК Таб
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЕСТЬNULL(ВЗ_Запрос.Дата, ВТ_Таб.Дата) КАК Дата,
	               |	ВЗ_Запрос.ТорговаяТочка КАК ТТФинансы,
	               |	ЕСТЬNULL(ВЗ_Запрос.Сумма, 0) КАК СуммаФинансы,
	               |	ВТ_Таб.ТТ КАК ТТБух,
	               |	ЕСТЬNULL(ВТ_Таб.СуммаДокумента, 0) КАК СуммаБух
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		НАЧАЛОПЕРИОДА(ЛистУчетаВозвратыИзСейфа.Ссылка.Дата, ДЕНЬ) КАК Дата,
	               |		ЛистУчетаВозвратыИзСейфа.Ссылка.ТорговаяТочка КАК ТорговаяТочка,
	               |		СУММА(ВЫБОР
	               |				КОГДА ЛистУчетаВозвратыИзСейфа.ПолученаСумма <> 0
	               |					ТОГДА ЛистУчетаВозвратыИзСейфа.ПолученаСумма
	               |				ИНАЧЕ ЛистУчетаВозвратыИзСейфа.Сумма
	               |			КОНЕЦ) КАК Сумма
	               |	ИЗ
	               |		Документ.ЛистУчета.АктыКМ3 КАК ЛистУчетаВозвратыИзСейфа
	               |	ГДЕ
	               |		ЛистУчетаВозвратыИзСейфа.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	               |		И ЛистУчетаВозвратыИзСейфа.Ссылка.Проведен = ИСТИНА
	               |		И (ЛистУчетаВозвратыИзСейфа.Ссылка.Организация = &Организация
	               |				ИЛИ &НетОтбораПоОрг = ИСТИНА)
	               |		И ЛистУчетаВозвратыИзСейфа.АктПолучен = ИСТИНА
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		НАЧАЛОПЕРИОДА(ЛистУчетаВозвратыИзСейфа.Ссылка.Дата, ДЕНЬ),
	               |		ЛистУчетаВозвратыИзСейфа.Ссылка.ТорговаяТочка) КАК ВЗ_Запрос
	               |		ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Таб КАК ВТ_Таб
	               |		ПО ВЗ_Запрос.Дата = ВТ_Таб.Дата
	               |			И ВЗ_Запрос.ТорговаяТочка = ВТ_Таб.ТТ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ТолькоРасхождения
			И Выборка.СуммаФинансы = Выборка.СуммаБух Тогда
			Продолжить;
		КонецЕсли;	
		СтрокаТаб = ТабСверка.Добавить();
		СтрокаТаб.Дата = Выборка.Дата;
		СтрокаТаб.ТТБухгалтерия = Выборка.ТТБух;
		СтрокаТаб.ТТФинансы = Выборка.ТТФинансы;
		СтрокаТаб.СуммаФинансы = Выборка.СуммаФинансы;
		СтрокаТаб.СуммаБух = Выборка.СуммаБух;
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура Сверить(Команда)
	
	СверитьНаСервере();
	
КонецПроцедуры
