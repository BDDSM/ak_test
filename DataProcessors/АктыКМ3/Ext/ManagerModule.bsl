
Функция ПолучитьТабДокКМ3(ЛистУчета, Сумма, СуммаПолучено, ЭтоЭквайринг, ОсновноеСредство, КлючСтроки, ТабЧекиПоАктам = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	//ИмяСервераИнформационнойБазыДляПодключения = "10.0.0.15";
	//ИмяИнформационнойБазыНаСервереДляПодключения 	= "BP_CORP";
	//ПользовательИнформационнойБазыДляПодключения 	= "Обмен";
	//ПарольИнформационнойБазыДляПодключения			= "123321";
	
	ТабПодр = Новый ТаблицаЗначений();
	ТабПодр.Колонки.Добавить("ИНН");
	ТабПодр.Колонки.Добавить("Наименование");
	ТабПодр.Колонки.Добавить("Код");
	
	Попытка
		Коннектор = Новый COMObject(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Бух() + ".COMConnector");
		Строка = ПолныеПрава.ПолучитьСтрокуПодключения_Бух();
		СоединениеСБазой = Коннектор.Connect(Строка);
		ЗапросПодкл = СоединениеСБазой.NewObject("Запрос");
		ЗапросПодкл.Текст = "ВЫБРАТЬ
							|	ПодразделенияОрганизаций.Владелец.ИНН КАК ИНН,
							|	ПодразделенияОрганизаций.Наименование,
							|	ПодразделенияОрганизаций.Код
							|ИЗ
							|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций";
							
		ТабПодрБух = ЗапросПодкл.Выполнить().Выгрузить();
		Для Каждого СтрокаТаб Из ТабПодрБух Цикл
			СтрокаДоб = ТабПодр.Добавить();
			СтрокаДоб.ИНН = СтрокаТаб.ИНН;
			СтрокаДоб.Наименование = СтрокаТаб.Наименование;
			СтрокаДоб.Код = СтрокаТаб.Код;
		КонецЦикла;	
	Исключение
		ТабПодрБух = Неопределено;
	КонецПопытки;
	
	СоединениеСБазой = Неопределено;
	
	ТабДок = Новый ТабличныйДокумент();
	
	ОргВкусвилл = Справочники.Организации.НайтиПоКоду("000000006");
	
	НомерЗаводской = "";
	//Если НЕ ЭтоЭквайринг Тогда
		Если ТипЗнч(ОсновноеСредство) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
			НомерЗаводской = ОсновноеСредство.ЗаводскойНомер;
		Иначе
			Запрос = Новый Запрос();
			Запрос.Текст = "ВЫБРАТЬ
			               |	СоответствиеОсновныхСредствТерминаламСрезПоследних.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер
			               |ИЗ
			               |	РегистрСведений.СоответствиеОсновныхСредствТерминалам.СрезПоследних(&Дата, Терминал = &Терминал) КАК СоответствиеОсновныхСредствТерминаламСрезПоследних";
						   
			Запрос.УстановитьПараметр("Дата", ЛистУчета.Дата);
			Запрос.УстановитьПараметр("Терминал", ОсновноеСредство);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий()
				И ЗначениеЗаполнено(Выборка.ЗаводскойНомер) Тогда
				НомерЗаводской = Выборка.ЗаводскойНомер;
			КонецЕсли;	
		КонецЕсли;	
	//КонецЕсли;		
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЛистУчета.Дата,
	               |	ЛистУчета.Организация.НаименованиеСокращенное КАК Организация,
	               |	ЛистУчета.ТорговаяТочка,
	               |	ЛистУчета.Организация.КодПоОКПО КАК ОКПО,
	               |	ЕСТЬNULL(КонтактнаяИнформация.Представление, """") КАК Телефон,
	               |	ЛистУчета.Организация КАК ОрганизацияСсылка
	               |ИЗ
	               |	Документ.ЛистУчета КАК ЛистУчета
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |		ПО ЛистУчета.Организация = КонтактнаяИнформация.Объект
	               |			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
	               |			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонОрганизации))
	               |ГДЕ
	               |	ЛистУчета.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ЛистУчетаПродавцы.Продавец,
	               |	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия, """") КАК Фамилия,
	               |	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Имя, """") КАК Имя,
	               |	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Отчество, """") КАК Отчество
	               |ИЗ
	               |	Документ.ЛистУчета.Продавцы КАК ЛистУчетаПродавцы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОФизЛицСрезПоследних
	               |		ПО ЛистУчетаПродавцы.Продавец = ФИОФизЛицСрезПоследних.ФизЛицо
	               |ГДЕ
	               |	ЛистУчетаПродавцы.Ссылка = &Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ЛистУчетаПродавцы.Пч
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЛистУчетаЧекиПоАктамКМ3.НомерСтроки КАК НомерСтроки,
	               |	ЛистУчетаЧекиПоАктамКМ3.КлючСтрокиАкта,
	               |	ЛистУчетаЧекиПоАктамКМ3.УИНЧека,
	               |	ЛистУчетаЧекиПоАктамКМ3.СуммаЧека
	               |ИЗ
	               |	Документ.ЛистУчета.ЧекиПоАктамКМ3 КАК ЛистУчетаЧекиПоАктамКМ3
	               |ГДЕ
	               |	ЛистУчетаЧекиПоАктамКМ3.Ссылка = &Ссылка
	               |	И ЛистУчетаЧекиПоАктамКМ3.КлючСтрокиАкта = &КлючСтроки
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерСтроки";
				   
	Запрос.УстановитьПараметр("Ссылка", ЛистУчета);
	Запрос.УстановитьПараметр("КлючСтроки", КлючСтроки);
	Результаты = Запрос.ВыполнитьПакет();
	
	ВыборкаШапка = Результаты[0].Выбрать();
	ВыборкаШапка.Следующий();
	ТабПродавцы = Результаты[1].Выгрузить();
	ТабЧеки = Результаты[2].Выгрузить();
	Если ТабЧекиПоАктам <> Неопределено Тогда
		ТабЧеки.Очистить();
		СтрокиЧеков = ТабЧекиПоАктам.НайтиСтроки(Новый Структура("КлючСтрокиАкта", КлючСтроки));
		Для Каждого СтрокаЧек Из СтрокиЧеков Цикл
			ЗаполнитьЗначенияСвойств(ТабЧеки.Добавить(), СтрокаЧек);
		КонецЦикла;	
	КонецЕсли;	
	
	Если ВыборкаШапка.ОрганизацияСсылка = ОргВкусвилл Тогда
		Макет = Обработки.АктыКМ3.ПолучитьМакет("КМ3_Вкусвилл");
	Иначе
		Макет = Обработки.АктыКМ3.ПолучитьМакет("КМ3_ПрочиеОрганизации");
	КонецЕсли;
	
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Эквайринг = ?(ЭтоЭквайринг, "Э", "");
	Область.Параметры.ПредставлениеОрганизации = ВыборкаШапка.Организация + "   " + ВыборкаШапка.Телефон;
	Область.Параметры.ОрганизацияПоОКПО = СокрЛП(ВыборкаШапка.ОКПО);
	Область.Параметры.НомерПроизв = СокрЛП(НомерЗаводской);
	
	Если ВыборкаШапка.ОрганизацияСсылка = ОргВкусвилл Тогда
		Область.Параметры.ПредставлениеПодразделения = ВыборкаШапка.ТорговаяТочка;
	Иначе
		Если ЗначениеЗаполнено(ВыборкаШапка.ТорговаяТочка.ДатаПереходаНаУчетПоОбособленномуПодразделению)
			И ВыборкаШапка.ТорговаяТочка.ДатаПереходаНаУчетПоОбособленномуПодразделению <= ВыборкаШапка.Дата Тогда
			Если ЗначениеЗаполнено(ВыборкаШапка.ТорговаяТочка.КодОПБух) Тогда
				СтрокиПодр = ТабПодр.НайтиСтроки(Новый Структура("ИНН, Код", СокрЛП(ВыборкаШапка.ОрганизацияСсылка.ИНН), ВыборкаШапка.ТорговаяТочка.КодОПБух));
				Если СтрокиПодр.Количество() = 0 Тогда
					Область.Параметры.ПредставлениеПодразделения = "";
				Иначе
					Область.Параметры.ПредставлениеПодразделения = СтрокиПодр[0].Наименование;
				КонецЕсли;	
			Иначе	
				Область.Параметры.ПредставлениеПодразделения = "";
			КонецЕсли;
		Иначе
			Область.Параметры.ПредставлениеПодразделения = "Управление розницей";
		КонецЕсли;		
	КонецЕсли;	
	
	ФИОКассира = "";
	Если ТабПродавцы.Количество() > 0 Тогда
		Если НЕ ЗначениеЗаполнено(ТабПродавцы[0].Фамилия) Тогда
			ФИОКассира = ТабПродавцы[0].Продавец;
		Иначе
			ФИОКассира = ТабПродавцы[0].Фамилия + " " + Лев(ТабПродавцы[0].Имя, 1) + "." + Лев(ТабПродавцы[0].Отчество, 1) + ".";
		КонецЕсли;	
	КонецЕсли;
	Область.Параметры.ФИОКассира = ФИОКассира;
	Область.Параметры.ДатаДокумента = ВыборкаШапка.Дата;
	Область.Параметры.ДатаДокументаПрописью = Формат(ВыборкаШапка.Дата, "ДФ='dd MMMM yyyy ""г.""'");
	
	Валюта = Справочники.Валюты.НайтиПоКоду("643");
	Если ЗначениеЗаполнено(КлючСтроки) Тогда
		Для н = 1 По Мин(4, ТабЧеки.Количество()) Цикл
			Область.Параметры["СуммаСтр" + н] = ТабЧеки[н - 1].СуммаЧека;
			Если ВыборкаШапка.ОрганизацияСсылка = ОргВкусвилл Тогда
				Область.Параметры["ГенДиректор" + н] = "Генеральный директор,
												|Фарафонов А.В.";
			Иначе
				Область.Параметры["ГенДиректор" + н] = "Генеральный директор,
												|Кривенко А.А.";								
			КонецЕсли;
		КонецЦикла;	
	Иначе
		Если ЗначениеЗаполнено(СуммаПолучено)
			И Сумма <> СуммаПолучено Тогда
		Иначе
			Область.Параметры.СуммаСтр1 = Сумма;
		КонецЕсли;
		Если ВыборкаШапка.ОрганизацияСсылка = ОргВкусвилл Тогда
			Область.Параметры.ГенДиректор1 = "Генеральный директор,
											|Фарафонов А.В.";
		Иначе
			Область.Параметры.ГенДиректор1 = "Генеральный директор,
											|Кривенко А.А.";								
		КонецЕсли;									
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(СуммаПолучено)
		И Сумма <> СуммаПолучено Тогда
		Область.Параметры.Сумма = СуммаПолучено;
		СуммаПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(СуммаПолучено, Валюта);
	Иначе
		Область.Параметры.Сумма = Сумма;
		СуммаПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(Сумма, Валюта);
	КонецЕсли;
	Область.Параметры.СуммаПрописью = СуммаПрописью;
	
	ТабДок.Вывести(Область);
	
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	Возврат ТабДок;
	
КонецФункции	

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АктКМ3") Тогда
		БылВывод = Ложь;
		ТабДок = Новый ТабличныйДокумент();
		Для Каждого Объект Из МассивОбъектов Цикл
			ТабАкт = Обработки.АктыКМ3.ПолучитьТабДокКМ3(Объект.ЛистУчета, Объект.Сумма
				, Объект.ПолученаСумма, Объект.ЭтоВозвратБезнал, ?(ЗначениеЗаполнено(Объект.ОсновноеСредство), Объект.ОсновноеСредство, Объект.ККМ), Объект.КлючСтроки, ?(Объект.Свойство("ЧекиПоАктам"), Объект.ЧекиПоАктам, Неопределено));
			Если БылВывод Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			ТабДок.Вывести(ТабАкт);
			БылВывод = Истина;
		КонецЦикла;	
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "АктКМ3", "Акты КМ-3",
																ТабДок);
	КонецЕсли;
	
КонецПроцедуры