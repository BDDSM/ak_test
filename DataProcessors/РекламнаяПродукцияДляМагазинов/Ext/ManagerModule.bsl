
//+++АК MIND 2017.10.24 ИП-00016555
Функция СформироватьНаклейкиДляМассовойОтгрузки(ЗаявкаНаОтгрузку) Экспорт
	
	//основную логику взял из печати Беляка в расходном ордере
	ТабДок = Новый ТабличныйДокумент();
	ТабДок.ОриентацияСтраницы		= ОриентацияСтраницы.Портрет;
	ТабДок.РазмерКолонтитулаСнизу	= 0;
	ТабДок.РазмерКолонтитулаСверху 	= 0;
	ТабДок.ПолеСверху 	= 5;
	ТабДок.ПолеСнизу 	= 5;
	ТабДок.ПолеСлева 	= 5;
	ТабДок.ПолеСправа 	= 5;
	ТабДок.АвтоМасштаб	= Истина;
	
	Если ЗаявкаНаОтгрузку.ТорговыеТочки.Количество() = 0 Тогда
		Сообщить("Документ " + ЗаявкаНаОтгрузку + " не является массовой отгрузкой");
		Возврат ТабДок;
	КонецЕсли;
	
	Макет = Обработки.РекламнаяПродукцияДляМагазинов.ПолучитьМакет("МакетНаклейкиМассовойРассылки");
	
	ЗапросРасходники = Новый Запрос();
	ЗапросРасходники.УстановитьПараметр("Основание", ЗаявкаНаОтгрузку);
	ЗапросРасходники.Текст = "ВЫБРАТЬ
	                         |	РасходныйОрдерСклад.Ссылка,
	                         |	РасходныйОрдерСклад.Получатель,
	                         |	ВЫРАЗИТЬ(РасходныйОрдерСклад.Получатель КАК Справочник.СтруктурныеЕдиницы).Наименование КАК Наименование
	                         |ИЗ
	                         |	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
	                         |ГДЕ
	                         |	РасходныйОрдерСклад.Основание = &Основание
	                         |	И РасходныйОрдерСклад.Проведен = ИСТИНА
	                         |	И РасходныйОрдерСклад.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
	                         |
	                         |УПОРЯДОЧИТЬ ПО
	                         |	ВЫРАЗИТЬ(РасходныйОрдерСклад.Получатель КАК Справочник.СтруктурныеЕдиницы).НомерТочки";
	
	ТабРасходники = ЗапросРасходники.Выполнить().Выгрузить();
	ТабРасходники.Колонки.Добавить("ДанныеQRКода");
	Для Каждого СтрокаРасходник Из ТабРасходники Цикл
		ШтрихКод = ОбщегоНазначенияКлиентСервер.ПолучитьШтрихкодПоУИНу(СтрокаРасходник.Ссылка);
		СтрокаРасходник.ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(Штрихкод, 0, 190);
	КонецЦикла;
	
	Если ТабРасходники.Количество() = 0 Тогда
		Сообщить("По документу " + ЗаявкаНаОтгрузку + " не создано ни одного расходного ордера");
		Возврат ТабДок;
	КонецЕсли;
	
	НаименованиеРассылки = ВРег(СокрЛП(ЗаявкаНаОтгрузку.Рассылка));
	
	//закладываюсь на 3 расходника, допуская что они могут их случайно наформировать, если меньше или равно, значит старая схема
	//при которой все наклейки идут одинаковые
	Если ТабРасходники.Количество() <= 3 Тогда //старая схема
		ОбластьЗаголовокВысокая 		= Макет.ПолучитьОбласть("Заголовок1");
		ОбластьЗаголовокУзкая 		= Макет.ПолучитьОбласть("Заголовок2");
		Для н = 1 По 6 Цикл
			Если н <= 3 Тогда
				ОбластьЗаголовокВысокая.Рисунки["qr" + н].Картинка = Новый Картинка(ТабРасходники[0].ДанныеQRКода);
				ОбластьЗаголовокВысокая.Параметры["Рассылка" + н] = НаименованиеРассылки;
			Иначе	
				ОбластьЗаголовокУзкая.Рисунки["qr" + н].Картинка = Новый Картинка(ТабРасходники[0].ДанныеQRКода);
				ОбластьЗаголовокУзкая.Параметры["Рассылка" + н] = НаименованиеРассылки;
			КонецЕсли;	
		КонецЦикла;
		//ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		Сч = 0;
		КолвоМагазов = ЗаявкаНаОтгрузку.ТорговыеТочки.Количество();
		КолвоСтрок = Цел(КолвоМагазов/3) + ?(КолвоМагазов % 3 <> 0, 0, 1);
		Для Ит = 1 По КолвоСтрок Цикл
			Сч = Сч + 1;
			Если Сч = 6 Тогда
				ТабДок.Вывести(ОбластьЗаголовокУзкая);
				
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			    Сч = 0;
			Иначе
				ТабДок.Вывести(ОбластьЗаголовокВысокая);
			КонецЕсли; 
		КонецЦикла; 
	Иначе
		Область = Неопределено;
		Для СчетчикРасходников = 0 По ТабРасходники.Количество() - 1 Цикл
			Если ТабДок.ВысотаТаблицы > 0
				И СчетчикРасходников % 18 = 0 Тогда
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;	
			Если СчетчикРасходников % 3 = 0 Тогда
				Если СчетчикРасходников % 18 = 15 Тогда
					Область = Макет.ПолучитьОбласть("Заголовок2");
				Иначе
					Область = Макет.ПолучитьОбласть("Заголовок1");
				КонецЕсли;	
			КонецЕсли;
			
			Если СчетчикРасходников % 18 >= 15 Тогда
				Область.Параметры["Рассылка" + (СчетчикРасходников % 6 + 1)] = НаименованиеРассылки;
				Область.Параметры["Магазин" + (СчетчикРасходников % 6 + 1)] = ТабРасходники[СчетчикРасходников].Наименование;
				Область.Рисунки["qr" + (СчетчикРасходников % 6 + 1)].Картинка = Новый Картинка(ТабРасходники[СчетчикРасходников].ДанныеQRКода);
			Иначе
				Область.Параметры["Рассылка" + (СчетчикРасходников % 3 + 1)] = НаименованиеРассылки;
				Область.Параметры["Магазин" + (СчетчикРасходников % 3 + 1)] = ТабРасходники[СчетчикРасходников].Наименование;
				Область.Рисунки["qr" + (СчетчикРасходников % 3 + 1)].Картинка = Новый Картинка(ТабРасходники[СчетчикРасходников].ДанныеQRКода);
			КонецЕсли;	
			
			Если СчетчикРасходников > 0 Тогда
				Если СчетчикРасходников % 3 = 2 Тогда
					ТабДок.Вывести(Область);
					Область = Неопределено;
				КонецЕсли;
			КонецЕсли;	
			
		КонецЦикла;	
		Если Область <> Неопределено Тогда
			ТабДок.Вывести(Область);
		КонецЕсли;	
	КонецЕсли;	
	
	Возврат ТабДок;
	
КонецФункции
//---АК MIND 