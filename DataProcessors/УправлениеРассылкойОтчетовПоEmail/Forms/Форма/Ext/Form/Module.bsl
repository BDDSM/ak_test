
&НаСервере
Процедура ВыполнитьЗапросСервер()
	
	ЗаполнитьТаблицуСОтчетами();
	
КонецПроцедуры


///////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//////////////////////////////////////////////////////

&НаСервере
Процедура ЗаполнитьТаблицуСОтчетами()
	
	Если НЕ ЗначениеЗаполнено(ПочтовыйАдресПользователя) И НЕ ПоказыватьВсеОтчеты Тогда
		Объект.ОтчетыПользователя.Очистить();
		Возврат;
	КонецЕсли;
	
	Объект.ОтчетыПользователя.Загрузить(Обработки.УправлениеРассылкойОтчетовПоEmail.ВернутьТаблицуОтчетов(?(ПоказыватьВсеОтчеты, "", ПочтовыйАдресПользователя)));
	
КонецПроцедуры

&НаСервере
Процедура ПодставитьПочтовыйАдресПользователяСервер()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КонтактнаяИнформация.Представление
	               |ПОМЕСТИТЬ Сводная
	               |ИЗ
	               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |ГДЕ
	               |	КонтактнаяИнформация.Объект = &Пользователь
	               |	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.СлужебныйАдресЭлектроннойПочтыПользователя)
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	КонтактнаяИнформация.Представление
	               |ИЗ
	               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |ГДЕ
	               |	КонтактнаяИнформация.Объект = &ФизЛицо
	               |	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВЫРАЗИТЬ(Сводная.Представление КАК СТРОКА(200)) КАК Адрес
	               |ИЗ
	               |	Сводная КАК Сводная";
				   
	Запрос.УстановитьПараметр("Пользователь", Объект.Пользователь);
	Запрос.УстановитьПараметр("ФизЛицо", Объект.Пользователь.ФизЛицо);
	
	ВыборкаАдреса = Запрос.Выполнить().Выбрать();
	
	Элементы.ПочтовыйАдресПользователя.СписокВыбора.Очистить();
	
	Пока ВыборкаАдреса.Следующий() Цикл
		
		Элементы.ПочтовыйАдресПользователя.СписокВыбора.Добавить(ВыборкаАдреса.Адрес, ВыборкаАдреса.Адрес);
		
	КонецЦикла;
	
	Если ВыборкаАдреса.Количество() <> 0 Тогда	
		ПочтовыйАдресПользователя = Элементы.ПочтовыйАдресПользователя.СписокВыбора[0];
	КонецЕсли;
	
	ЗаполнитьТаблицуСОтчетами();
	
КонецПроцедуры

&НаСервере
Процедура ОтправитьОтчетСервер(НомерОтч)
	
	Если Не ЗначениеЗаполнено(ПочтовыйАдресПользователя) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не заполнен электронный адрес пользователя. Отчет отправлен не будет!");
		Возврат;
	КонецЕсли;
	
	Если Обработки.УправлениеРассылкойОтчетовПоEmail.ОтправитьОтчетПользователю(ПочтовыйАдресПользователя, НомерОтч) Тогда
		ЗаполнитьТаблицуСОтчетами();
	КонецЕсли;
	
КонецПроцедуры	
	
////////////////////////////////////////////////////////
// ОБРАБОТКА СОБЫТИЙ ФОРМЫ
//////////////////////////////////////////////////////

&НаКлиенте
Процедура УправлениеДоступностьюЭлементовФормы()
	
	Элементы.Пользователь.ТолькоПросмотр = НЕ АдминистраторEmail;	
	Элементы.ПоказыватьВсеОтчеты.Видимость = АдминистраторEmail;
	Элементы.РедактироватьТекущийОтчет.Видимость = АдминистраторEmail;
	Элементы.НовыйОтчет.Видимость = АдминистраторEmail;
	Элементы.УдалитьОтчет.Видимость = АдминистраторEmail;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПользователя()
	
	ПодставитьПочтовыйАдресПользователяСервер();
	
КонецПроцедуры

///////////////////////////////////////////////////////////
// СОБЫТИЯ ФОРМЫ
//////////////////////////////////////////////////////////

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПриОткрытииНаСервере();
	//ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	//Объект.Пользователь = ТекПользователь;
	//АдминистраторEmail = ТекПользователь.АдминистраторEmail;
	
	УправлениеДоступностьюЭлементовФормы();
	
	ПриИзмененииПользователя();
	
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	
	ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Объект.Пользователь = ТекПользователь;
	АдминистраторEmail = ТекПользователь.АдминистраторEmail;
	
КонецПроцедуры


&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	
	ПриИзмененииПользователя();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьЗапрос(Команда)
	
	ВыполнитьЗапросСервер();
	
КонецПроцедуры 

&НаКлиенте
Процедура ПочтовыйАдресПользователяПриИзменении(Элемент)
	
	ЗаполнитьТаблицуСОтчетами();	
	
КонецПроцедуры 

&НаКлиенте
Процедура ОтчетыПользователяВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если АдминистраторEmail Тогда
		
		НомерОтч = Элементы.ОтчетыПользователя.ТекущиеДанные.Номер_Отчета;
		
		фрм = ПолучитьФорму("Обработка.УправлениеРассылкойОтчетовПоEmail.Форма.ФормаРедактированияОтчета", Новый Структура("НомерОтчета", НомерОтч), ЭтаФорма);
		фрм.НомерОтчета = НомерОтч;
		фрм.Открыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьОтчет(Команда)
	
	НомерОтч = Элементы.ОтчетыПользователя.ТекущиеДанные.Номер_Отчета;
		
	фрм = ПолучитьФорму("Обработка.УправлениеРассылкойОтчетовПоEmail.Форма.ФормаРедактированияОтчета", Новый Структура("НомерОтчета", НомерОтч), ЭтаФорма);
	фрм.НомерОтчета = НомерОтч;
	фрм.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовыйОтчет(Команда)
	
	НомерОтч = 0;
		
	фрм = ПолучитьФорму("Обработка.УправлениеРассылкойОтчетовПоEmail.Форма.ФормаРедактированияОтчета", Новый Структура("НомерОтчета", НомерОтч), ЭтаФорма);
	фрм.НомерОтчета = НомерОтч;
	фрм.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетыПользователяПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьОтчет(Команда)
	
	Если Элементы.ОтчетыПользователя.ТекущиеДанные = Неопределено Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Выберите строку с отчетом для отправки");
		Возврат;
	КонецЕсли;
	
	ОтправитьОтчетСервер(Элементы.ОтчетыПользователя.ТекущиеДанные.Номер_Отчета);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОтчет(Команда)
	
	НомерОтчета = Элементы.ОтчетыПользователя.ТекущиеДанные.Номер_Отчета;
	
	Ответ = Вопрос("Удалить отчет за номером: " + Строка(НомерОтчета) + "?", РежимДиалогаВопрос.ДаНет);
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьОтчетНаСервере(НомерОтчета);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьОтчетНаСервере(НомерОтчета)
	
	Если Обработки.УправлениеРассылкойОтчетовПоEmail.УдалитьОтчет(НомерОтчета) Тогда
		ВыполнитьЗапросСервер();
	КонецЕсли;	
	
КонецПроцедуры




&НаКлиенте
Процедура ПоказатьИсториюОтправки(Команда)
	
	НомерОтч = Элементы.ОтчетыПользователя.ТекущиеДанные.Номер_Отчета;
		
	фрм = ПолучитьФорму("Обработка.УправлениеРассылкойОтчетовПоEmail.Форма.ФормаИсторияОтправки", Новый Структура("НомерОтчета", НомерОтч), ЭтаФорма);
	фрм.НомерОтчета = НомерОтч;
	фрм.email = ?(АдминистраторEmail, "", ПочтовыйАдресПользователя);
	фрм.Открыть();	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьВсеОтчетыПриИзменении(Элемент)
	
	ВыполнитьЗапросСервер();
	
КонецПроцедуры

Процедура ОбновитьТаблицуОтчетов()
	
	СохраненныеОтчеты.Очистить();
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	
	ТекстЗапроса = "select id_report Номер, CONVERT(datetime, date_add) [Дата], Name_r_z [Название] 
					|from Reports..Universal_Reports1C_List (" + ВнешниеДанные.ФорматПоля(ПочтовыйАдресПользователя) + ")
					|order by date_add desc";
	
	rs = ADOСоединение.Execute(ТекстЗапроса);
	Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
		rs = rs.NextRecordSet();
	КонецЦикла;
	
	Попытка
		rs.MoveFirst();
		
		Пока НЕ rs.EOF() Цикл
			СтрокаДоб = СохраненныеОтчеты.Добавить();
			
			СтрокаДоб.id = Rs.Fields("Номер").Value;
			СтрокаДоб.Дата = Rs.Fields("Дата").Value;   
			СтрокаДоб.НазваниеОтчета = Rs.Fields("Название").Value;
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	ADOСоединение.Close();
	ADOСоединение = Неопределено;
	
КонецПроцедуры	

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьТаблицуОтчетов();
	
КонецПроцедуры

&НаКлиенте
Процедура Группа1ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	//Если ТекущаяСтраница = Элементы.ГруппаСохраненныеОтчеты Тогда
	//	ОбновитьТаблицуОтчетов();
	//КонецЕсли;	
	
КонецПроцедуры

Процедура СформироватьОтчет(id, Дата)
	
	ТабДанныеОтчета.Очистить();
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	
	СтрокаЗапроса = "declare @tmp_table as varchar(38)
					|, @email as varchar(500), @in_report as int, @date as date
					|exec reports..[Get_Universal_Report1C_data] " + ВнешниеДанные.ФорматПоля(ПочтовыйАдресПользователя) + ", " + ВнешниеДанные.ФорматПоля(id) + "," + ВнешниеДанные.ФорматПоля(Дата) + ",@tmp_table output
					|
					|declare @nvasql as nvarchar(4000)
					|
					|select @nvasql='select * from temp_tables..[' +@tmp_table +']'
					|exec sp_executesql @nvasql
					|
					|select @nvasql='drop table temp_tables..[' +@tmp_table +']'
					|exec sp_executesql @nvasql";
					
	rs = ADOСоединение.Execute(СтрокаЗапроса);
	Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
		rs = rs.NextRecordSet();
	КонецЦикла;
	
	Таб = ТабДанныеОтчета.Выгрузить();
	Для н = 1 По Таб.Колонки.Количество() - 1 Цикл
		Элементы["ТабДанныеОтчетаКолонка" + н].Видимость = Ложь;
	КонецЦикла;
	
	Попытка
		rs.MoveFirst();
		
		Пока НЕ rs.EOF() Цикл
			СтрокаДоб = ТабДанныеОтчета.Добавить();
			СчетчикИспользованных = 1;
			Для н = 0 По rs.Fields.Count() - 1 Цикл
				СтрокаДоб["Колонка" + СчетчикИспользованных] = rs.Fields(н).Value;
				Элементы["ТабДанныеОтчетаКолонка" + СчетчикИспользованных].Заголовок = rs.Fields(н).Name;
				Элементы["ТабДанныеОтчетаКолонка" + СчетчикИспользованных].Видимость = Истина;
				СчетчикИспользованных = СчетчикИспользованных + 1;
			КонецЦикла;	
			
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	ADOСоединение.Close();
	
КонецПроцедуры	

&НаКлиенте
Процедура ПосмотретьОтчет(Команда)
	
	ТекДанные = Элементы.СохраненныеОтчеты.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Тогда
		Сообщить("Не выбрана строка с отчетом");
		Возврат;
	КонецЕсли;
	
	СформироватьОтчет(ТекДанные.id, ТекДанные.Дата);
	
КонецПроцедуры


