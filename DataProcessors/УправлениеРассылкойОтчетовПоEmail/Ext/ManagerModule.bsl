////////////////////////////////////////////
// ADO
////////////////////////////////////////////

Функция АДОКоннекшн_СоздатьОбъект() Экспорт
    
    ADOСоединение = New ComObject("ADODB.Connection"); 
	ADOСоединение.CommandTimeOut    = 0;
	ADOСоединение.ConnectionTimeOut = 0;
	
	Возврат ADOСоединение;
    
КонецФункции    // АДОКоннекшн_СоздатьОбъект

Функция АДОДБ_УстановитьСоединение(Соединение, БД = "SMS_IZBENKA") Экспорт
	
	Строка = ВнешниеДанные.ПолучитьСтрокуСоединенияSQL(, , БД, , , "LANGUAGE=русский");

    Возврат Соединение.Open(Строка);
    
КонецФункции // АДОДБ_УстановитьСоединение()

///////////////////////////////////////////////
// ЗАПОЛНЕНИЕ
//////////////////////////////////////////////

Функция ПреобразоватьРезультатВТаблицуЗначений(rsTABLE) Экспорт
	КоличествоПолейТаблица=rsTABLE.fields.Count-1;
    ТаблицаПоискаТаблица = Новый массив;
    Если (НЕ rsTABLE.EOF) Тогда
        ТаблицаПоискаТаблица = rsTABLE.GetRows().Выгрузить();
	КонецЕсли;
	
	тзРезультат = Новый ТаблицаЗначений;
	
	Если ТаблицаПоискаТаблица.Количество() = 0 Тогда
		Возврат ТзРезультат;
	КонецЕсли;
	
	Для сч = 0 По КоличествоПолейТаблица Цикл
		массив = Новый Массив;
		
		флНайденТип = Ложь;
		
		Для к = 0 По ТаблицаПоискаТаблица.Количество() - 1 Цикл
			Если ТипЗнч(ТаблицаПоискаТаблица[к][сч]) <> Тип("Null") Тогда
				массив.Добавить(ТипЗнч(ТаблицаПоискаТаблица[к][сч]));
				флНайденТип = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НЕ флНайденТип Тогда
			массив.Добавить(ТипЗнч(ТаблицаПоискаТаблица[0][сч]));
		КонецЕсли;
		
        тзРезультат.Колонки.Добавить(rsTABLE.fields.item(сч).name,Новый ОписаниеТипов(массив));
    КонецЦикла;

    Для Каждого стрТаблица Из ТаблицаПоискаТаблица Цикл
        стр=тзРезультат.Добавить();
        Для сч = 0 По КоличествоПолейТаблица Цикл
			попытка
				стр[сч] = СокрЛП(стрТаблица[сч]);				
            исключение
               	сообщить(ОписаниеОшибки());
			конецпопытки;			
        КонецЦикла;
	КонецЦикла;
	Возврат тзРезультат;
КонецФункции

Функция ВернутьТаблицуОтчетов(АдресПользователя) Экспорт
	
	ТЗВозврат = Новый ТаблицаЗначений;
	ТзВозврат.Колонки.Добавить("Номер_Отчета");
	ТзВозврат.Колонки.Добавить("Название_Отчета");
	ТЗВозврат.Колонки.Добавить("was_sent");
	
	мСоединение = АДОКоннекшн_СоздатьОбъект();
	
	Если 0 = АДОДБ_УстановитьСоединение(мСоединение) Тогда
       	Сообщить("Не удалось подключиться...", 30);
       	Возврат ТзВозврат;
    КонецЕсли;                                        
    
   Попытка
		rs = мСоединение.Execute("exec Reports..Report_List_For1CUser @email ='" + СокрЛП(АдресПользователя) + "' ");
	Исключение
		Сообщить(ОписаниеОшибки());
		мСоединение.Close();
		Возврат ТзВозврат;
	КонецПопытки;
	
	rs.MoveFirst();
	Результат = ПреобразоватьРезультатВТаблицуЗначений(rs);
	
	мСоединение.Close();
	
	Результат.Сортировать("Номер_Отчета");
	
	Возврат Результат;
		
КонецФункции

////////////////////////////////////////////////////
// ЗАПОЛНЯЛКА ФОРМЫ ОТЧЕТА
////////////////////////////////////////////////////

Функция ВернутьНастройкиОтчета(НомерОтчета, ТаблицаИсключений=Неопределено) Экспорт
	
	ТзВозврат = Новый ТаблицаЗначений;
	
	мСоединение = АДОКоннекшн_СоздатьОбъект();
	
	Если 0 = АДОДБ_УстановитьСоединение(мСоединение) Тогда
		Сообщить("Не удалось подключиться...", 30);
		Возврат ТзВозврат;
	КонецЕсли;                                        
	
	ТекстЗапросаSQL = "SELECT [N_r_z]
					|,[is_active]          
					|,[Name_r_z]        
					|,[Gruppa_z]  
					|,[transform]           
					|,[Add_time]          
					|,[Views_r_z]         
					|,CONVERT(datetime, [time_r_z]) time_r_z
					|,[email_add]        
					|,[add_gr]           
					|,[add_email]        
					|,[r_period_minute]
					|,CONVERT(datetime, [time_r_z_finish]) time_r_z_finish
					|,[weekdays]       
					|,[monthdays]      
					|,[where_sql]      
					|,[send_all_email]
					|,[not_send_email]					
					|,[add_all_email_vv]					
					|,[add_all_email_Pom]					
					|,[add_all_email_TU]					
					|,CAST(master.dbo.Binary2UID(add_group_distribution) as nvarchar(36)) as add_group_distribution
					|,CAST(ISNULL(Descr, '') as nvarchar(4000)) Descr
					//+++ AK suvv 19.04.2018 ИП-00018360
					|,CAST(ISNULL(Comment, '') as nvarchar(4000)) Comment
					|,[Long_exec]
					|,[Save_in_Universal_Report_tbl]
					//--- AK suvv
					//+++АК CISA 2018.10.02 ИП-00019966
					|,CAST(master.dbo.Binary2UID(Ref_SotrOtvetstv) as nvarchar(36)) as Ref_SotrOtvetstv
					//---АК CISA
					|FROM [Reports].[dbo].[r_zadanie] (NOLOCK)
					|
					|WHERE N_r_z = '" + Формат(НомерОтчета, "ЧГ=0") + "'";
	
	Попытка
		rs = мСоединение.Execute(ТекстЗапросаSQL);
	Исключение
		Сообщить(ОписаниеОшибки());
		мСоединение.Close();
		Возврат ТзВозврат;
	КонецПопытки;
	
	rs.MoveFirst();
	Результат = ПреобразоватьРезультатВТаблицуЗначений(rs);
	
	ТекстЗапросаSQL = "SELECT email, Descr
						|FROM         Reports.dbo.Report_Unsubscribe_Reason
						|WHERE id_report = '" + Формат(НомерОтчета, "ЧГ=0") + "'
						|ORDER BY email";	
	Попытка
		rs = мСоединение.Execute(ТекстЗапросаSQL);
	Исключение
		Сообщить(ОписаниеОшибки());
		мСоединение.Close();
		Возврат ТзВозврат;
	КонецПопытки;
	
	Если не rs.EOF Тогда 
		rs.MoveFirst();
		ТаблицаИсключений = ПреобразоватьРезультатВТаблицуЗначений(rs);
	КонецЕсли;
		
	мСоединение.Close();
	
	Возврат Результат;	
	
КонецФункции

//////////////////////////////////////////////////
// СОХРАНЕНИЕ
/////////////////////////////////////////////////

Функция МаксИД()
  
	мСоединение = АДОКоннекшн_СоздатьОбъект();
	
	Если 0 = АДОДБ_УстановитьСоединение(мСоединение) Тогда
		Сообщить("Не удалось подключиться...", 30);
		Возврат 0;
	КонецЕсли;                                        
    
   ТекстЗапросаSQL = "SELECT Max([N_r_z]) Id
					|FROM [Reports].[dbo].[r_zadanie] NOLOCK";
					                                          	
	Попытка
		rs = мСоединение.Execute(ТекстЗапросаSQL);
	Исключение
		Сообщить(ОписаниеОшибки());
		мСоединение.Close();
		Возврат 0;
	КонецПопытки;
	
	rs.MoveFirst();
	Результат = ПреобразоватьРезультатВТаблицуЗначений(rs);
	
	мСоединение.Close();
	
	Для Каждого Стр Из Результат Цикл
		Возврат Стр.Id + 1;
	КонецЦикла;
	
	Возврат 1;
	
 КонецФункции

// +++ АК mirv 30.11.2017 [ИП-00017198]
// Функция СохранитьДанные(НомерОтчета, СписокСохранения, АдресаИсключения = Неопределено) Экспорт
Функция СохранитьДанные(НомерОтчета, СписокСохранения, АдресаИсключения = Неопределено, ГруппаРассылки = Неопределено) Экспорт
// --- АК mirv  

	
	Если СписокСохранения.Количество() = 0 Тогда
		Возврат Истина;
	КонецЕсли;
	
	мСоединение = АДОКоннекшн_СоздатьОбъект();
	
	Если 0 = АДОДБ_УстановитьСоединение(мСоединение) Тогда
       	Сообщить("Не удалось подключиться...", 30);
       	Возврат Ложь;
    КонецЕсли;      
	
	Если НомерОтчета = 0 Тогда
		ТекстЗапроса = СоставитьЗапросНаДобавление();
		
		//СписокПолей = "N_r_z,";
		//СписокЗначений = ФорматПоля(МаксИД()) + ",";
		СписокПолей = "";
		СписокЗначений = "";
		
		Для Каждого Эл Из СписокСохранения Цикл
			СписокПолей = СписокПолей + Эл.Ключ + ",";
			СписокЗначений = СписокЗначений + ФорматПоля(Эл.Значение) + ",";			
		КонецЦикла;
		
		Если ЗначениеЗаполнено(СписокПолей) Тогда
			СписокПолей = Лев(СписокПолей, СтрДлина(СписокПолей) - 1);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СписокЗначений) Тогда
			СписокЗначений = Лев(СписокЗначений, СтрДлина(СписокЗначений) - 1);
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Поля", СписокПолей);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Значения", СписокЗначений);
		
	Иначе
		ТекстЗапроса = СоставитьЗапросНаИзменение();
		
		СписокПолей = "";
		
		Для Каждого Эл Из СписокСохранения Цикл
			СписокПолей = СписокПолей + Эл.Ключ + "=" + ФорматПоля(Эл.Значение) + ",";
		КонецЦикла;
		
		Если ЗначениеЗаполнено(СписокПолей) Тогда
			СписокПолей = Лев(СписокПолей, СтрДлина(СписокПолей) - 1);
		КонецЕсли;
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СписокПолейSET", СписокПолей);
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СписокПолейWhere", "N_r_z = " + ФорматПоля(НомерОтчета));
		
	КонецЕсли;
	
	Если СписокСохранения.Свойство("not_send_email") Тогда
		ЗапросПоИсключениям = Символы.ПС + "delete from Reports.dbo.Report_Unsubscribe_Reason WHERE id_report = " + ФорматПоля(НомерОтчета) + Символы.ПС;
		Если ЗначениеЗаполнено(АдресаИсключения) Тогда
			Для каждого Стр ИЗ АдресаИсключения Цикл
				ЗапросПоИсключениям = ЗапросПоИсключениям + Символы.ПС +
					"INSERT INTO Reports.dbo.Report_Unsubscribe_Reason (id_report, email, descr) VALUES ("
					+ ФорматПоля(НомерОтчета) + "," + ФорматПоля(Стр.ЭлектронныйАдрес) + ", " + ФорматПоля(СтрЗаменить(Стр.Причина, "'", "")) + ")";
			КонецЦикла;
		КонецЕсли;
	Иначе
		ЗапросПоИсключениям = ""
	КонецЕсли;
	
	// +++ АК mirv 30.11.2017 [ИП-00017198]
	// Адреса уволенных - добавим принудительно в исключения
	Если ЗначениеЗаполнено(ГруппаРассылки) Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СотрудникиОрганизаций.Физлицо КАК Физлицо,
			|	СотрудникиОрганизаций.ДатаУвольнения
			|ПОМЕСТИТЬ ВсеСотрудники
			|ИЗ
			|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВсеСотрудники.Физлицо КАК Физлицо,
			|	МИНИМУМ(ВсеСотрудники.ДатаУвольнения) КАК ДатаУвольнения
			|ПОМЕСТИТЬ СотрудникиОтбор
			|ИЗ
			|	ВсеСотрудники КАК ВсеСотрудники
			|
			|СГРУППИРОВАТЬ ПО
			|	ВсеСотрудники.Физлицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СотрудникиОтбор.Физлицо,
			|	СотрудникиОтбор.ДатаУвольнения
			|ПОМЕСТИТЬ УволенныеСотрудники
			|ИЗ
			|	СотрудникиОтбор КАК СотрудникиОтбор
			|ГДЕ
			|	СотрудникиОтбор.ДатаУвольнения <> ДАТАВРЕМЯ(1, 1, 1)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	АК_ГруппыРассылки.Емейл КАК ЭлектронныйАдрес
			|ИЗ
			|	УволенныеСотрудники КАК УволенныеСотрудники
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АК_ГруппыРассылки КАК АК_ГруппыРассылки
			|		ПО УволенныеСотрудники.Физлицо = АК_ГруппыРассылки.ФизЛицо
			|ГДЕ
			|	АК_ГруппыРассылки.Группа = &Группа
			|	И АК_ГруппыРассылки.Емейл <> """"
			|	И АК_ГруппыРассылки.ФизЛицо ССЫЛКА Справочник.ФизическиеЛица";
		
		Запрос.УстановитьПараметр("Группа", ГруппаРассылки);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если Не ЗначениеЗаполнено(ЗапросПоИсключениям) Тогда
			ЗапросПоИсключениям = Символы.ПС + "delete from Reports.dbo.Report_Unsubscribe_Reason WHERE id_report = " + ФорматПоля(НомерОтчета) + Символы.ПС;
		КонецЕсли; 
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ЗапросПоИсключениям = ЗапросПоИсключениям + Символы.ПС +
				"INSERT INTO Reports.dbo.Report_Unsubscribe_Reason (id_report, email, descr) VALUES ("
				+ ФорматПоля(НомерОтчета) + "," + ФорматПоля(ВыборкаДетальныеЗаписи.ЭлектронныйАдрес) + ", " + ФорматПоля("Уволен") + ")";
		КонецЦикла;
	
	КонецЕсли; 
	// --- АК mirv  
	
	Попытка
		мСоединение.Execute("Begin Transaction" + Символы.ПС + текстЗапроса + ЗапросПоИсключениям + Символы.ПС + "Commit");
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

//////////////////////////////////////////////////
// ОТПРАВКА ОТЧЕТА
/////////////////////////////////////////////////

Функция ОтправитьОтчетПользователю(АдресПользователя, НомерОтчета) Экспорт
	
	// exec Reports..send_email_result_1C @email ='digovtsova@mail.ru' (varchar(100)) ,@N_r_z_d=27 (int) номер отчета.
	
	мСоединение = АДОКоннекшн_СоздатьОбъект();
	
	Если 0 = АДОДБ_УстановитьСоединение(мСоединение) Тогда
       	Сообщить("Не удалось подключиться...", 30);
       	Возврат Ложь;
    КонецЕсли;                                        
    
   Попытка
		rs = мСоединение.Execute("exec Reports..send_email_result_1C @email ='" + СокрЛП(АдресПользователя) + "', @N_r_z = " + ФорматПоля(НомерОтчета));
	Исключение
		Сообщить(ОписаниеОшибки());
		мСоединение.Close();
		Возврат Ложь;
	КонецПопытки;
	
	ОБщегоНазначения.СообщитьОбОшибке("Операция завершена успешно.", , , СтатусСообщения.Информация);
	
	мСоединение.Close();
	
	Возврат Истина;
	
КонецФункции

//////////////////////////////////////////////////
// СПИСОК ОТПРАВЛЕННЫХ
/////////////////////////////////////////////////

Функция ВернутьСписокОтправленных(НомерОтчета, ДатаНачала, ДатаКонца, email) Экспорт
	
	мСоединение = АДОКоннекшн_СоздатьОбъект();
	
	ТзВозврат = Новый ТаблицаЗначений;
	
	Если 0 = АДОДБ_УстановитьСоединение(мСоединение) Тогда
		Сообщить("Не удалось подключиться...", 30);
		Возврат ТзВозврат;
	КонецЕсли;      
	
	Попытка
		rs = мСоединение.Execute("exec Reports..Get_sent_report_list_1C @id_rep = " + ФорматПоля(НомерОтчета) + ",@date_start = " + ФорматПоля(ДатаНачала) + ",@date_end = " + ФорматПоля(ДатаКонца) + ?(ЗначениеЗаполнено(email), ",@email = " + ФорматПоля(email), ""));
	Исключение
		Сообщить(ОписаниеОшибки());
		мСоединение.Close();
		Возврат ТзВозврат;
	КонецПопытки;
	
	ТзВозврат = ПреобразоватьРезультатВТаблицуЗначений(rs);
	
	мСоединение.Close();
	
	Попытка
		ТзВозврат.Сортировать("date_add Возр");
	Исключение
	КонецПопытки;
	
	Возврат ТзВозврат;
	
КонецФункции

///////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ И ФУНКЦИИ
///////////////////////////////////////////////////

Функция СоставитьЗапросНаДобавление()
	
	Возврат "INSERT INTO [Reports].[dbo].[r_zadanie]
		|	(Поля)
		|VALUES (Значения)";			
		
КонецФункции

Функция СоставитьЗапросНаИзменение()
	
	Возврат "UPDATE [Reports].[dbo].[r_zadanie]
   				|SET СписокПолейSET
				|WHERE СписокПолейWhere";	
	
КонецФункции

Функция СоставитьЗапросНаУдаление()
	
	Возврат "DELETE FROM [Reports].[dbo].[r_zadanie] WHERE N_r_z = НомерОтчета";
	
КонецФункции

Функция ФорматПоля(Поле)
	
	Если ТипЗнч(Поле) = Тип("Дата") Тогда
		Возврат "'" + Формат(Поле, "ДФ=yyyy-MM-ddTHH:mm:ss") + "'";
	ИначеЕсли ТипЗнч(Поле) = Тип("Строка") Тогда
		Если Лев(Поле,2)="$$" Тогда
			Возврат Сред(Поле,3)
		Иначе
			Возврат "'" + Поле + "'";
		КонецЕсли
	ИначеЕсли ТипЗнч(Поле) = Тип("Число") Тогда
		Возврат Формат(Поле, "ЧРД=.; ЧН=; ЧГ=0");
	ИначеЕсли ТипЗнч(Поле) = Тип("Булево") Тогда
		Возврат ?(Поле = Истина, 1, 0);
	КонецЕсли;
	
КонецФункции

Функция ПолучитьЭлектронныйАдресПользователя(СпрПользовательСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(200)) КАК Адрес
	               |ИЗ
	               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |ГДЕ
	               |	КонтактнаяИнформация.Объект = &Пользователь
	               |	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.СлужебныйАдресЭлектроннойПочтыПользователя)";
				   
	Запрос.УстановитьПараметр("Пользователь", СпрПользовательСсылка);
		
	ВыборкаАдреса = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаАдреса.Следующий() Тогда
		
		Возврат ВыборкаАдреса.Адрес;
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

Функция УдалитьОтчет(НомерОтчета) Экспорт
	
	ТекстЗапроса = СоставитьЗапросНаУдаление();
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НомерОтчета", ФорматПоля(НомерОтчета));
	
	мСоединение = АДОКоннекшн_СоздатьОбъект();
	
	Если 0 = АДОДБ_УстановитьСоединение(мСоединение) Тогда
       	Сообщить("Не удалось подключиться...", 30);
       	Возврат Ложь;
    КонецЕсли;                                        
    
   Попытка
		rs = мСоединение.Execute(ТекстЗапроса);
	Исключение
		Сообщить(ОписаниеОшибки());
		мСоединение.Close();
		Возврат Ложь;
	КонецПопытки;
	
	ОБщегоНазначения.СообщитьОбОшибке("Операция завершена успешно.", , , СтатусСообщения.Информация);
	
	мСоединение.Close();
	
	Возврат Истина;
		
КонецФункции