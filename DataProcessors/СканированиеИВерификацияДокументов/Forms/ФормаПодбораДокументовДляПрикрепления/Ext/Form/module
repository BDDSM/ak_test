Перем ТекСтрокаСканирование Экспорт;
Перем ТекСумма Экспорт;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ЗаполнитьТаблицу() Экспорт
	//Сообщить(ТекСтрокаСканирование.Контрагент);
	Если ВидДокументов = "ПТУ" Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ПоступлениеТоваровУслуг.Ссылка,
		|	ПоступлениеТоваровУслуг.Номер,
		|	ПоступлениеТоваровУслуг.Дата КАК Дата,
		|	ПоступлениеТоваровУслуг.Контрагент,
		|	ПоступлениеТоваровУслуг.Организация,
		|	ПоступлениеТоваровУслуг.СуммаДокумента КАК Сумма,
		|	ВЫБОР
		|		КОГДА &Тип = ""Счет-фактура""
		|			ТОГДА ПоступлениеТоваровУслуг.НомерВходящегоСчетаФактуры
		|		ИНАЧЕ ПоступлениеТоваровУслуг.НомерВходящегоДокумента
		|	КОНЕЦ КАК НомерВх,
		|	ВЫБОР
		|		КОГДА &Тип = ""Счет-фактура""
		|			ТОГДА ПоступлениеТоваровУслуг.ДатаВходящегоСчетаФактуры
		|		ИНАЧЕ ПоступлениеТоваровУслуг.ДатаВходящегоДокумента
		|	КОНЕЦ КАК ДатаВх
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
		|ГДЕ
		|	ПоступлениеТоваровУслуг.Контрагент = &Контрагент
		|	И ПоступлениеТоваровУслуг.Организация = &Организация
		|	И ПоступлениеТоваровУслуг.ПометкаУдаления = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";
		
		Запрос.УстановитьПараметр("Контрагент", ЭтаФорма.Контрагент);
		Запрос.УстановитьПараметр("Организация", ЭтаФорма.Организация);
		
		Если ЗначениеЗаполнено(ЭтаФорма.Контрагент) = Ложь Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПоступлениеТоваровУслуг.Контрагент = &Контрагент", "ИСТИНА");
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(ЭтаФорма.Организация) = Ложь Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ПоступлениеТоваровУслуг.Организация = &Организация", "И ИСТИНА");
		КонецЕсли;	
		
		Запрос.УстановитьПараметр("Тип", ТекСтрокаСканирование.ТипДокумента);
		
	ИначеЕсли ВидДокументов = "ПДР" Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ПоступлениеТоваровУслуг.Ссылка,
		|	ПоступлениеТоваровУслуг.Номер,
		|	ПоступлениеТоваровУслуг.Дата КАК Дата,
		|	ПоступлениеТоваровУслуг.Контрагент,
		|	ПоступлениеТоваровУслуг.Организация,
		|	ПоступлениеТоваровУслуг.СуммаДокумента КАК Сумма,
		|	ВЫБОР
		|		КОГДА &Тип = ""Счет-фактура""
		|			ТОГДА ПоступлениеТоваровУслуг.НомерВходящегоСчетаФактуры
		|		ИНАЧЕ ПоступлениеТоваровУслуг.НомерВходящегоДокумента
		|	КОНЕЦ КАК НомерВх,
		|	ВЫБОР
		|		КОГДА &Тип = ""Счет-фактура""
		|			ТОГДА ПоступлениеТоваровУслуг.ДатаВходящегоСчетаФактуры
		|		ИНАЧЕ ПоступлениеТоваровУслуг.ДатаВходящегоДокумента
		|	КОНЕЦ КАК ДатаВх
		|ИЗ
		|	Документ.ПоступлениеДопРасходов КАК ПоступлениеТоваровУслуг
		|ГДЕ
		|	ПоступлениеТоваровУслуг.Контрагент = &Контрагент
		|	И ПоступлениеТоваровУслуг.Организация = &Организация
		|	И ПоступлениеТоваровУслуг.ПометкаУдаления = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ"; 
		
		Запрос.УстановитьПараметр("Контрагент", ЭтаФорма.Контрагент);
		Запрос.УстановитьПараметр("Организация", ЭтаФорма.Организация);   		
		
		Если ЗначениеЗаполнено(ЭтаФорма.Контрагент) = Ложь Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПоступлениеТоваровУслуг.Контрагент = &Контрагент", "ИСТИНА");
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(ЭтаФорма.Организация) = Ложь Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ПоступлениеТоваровУслуг.Организация = &Организация", "И ИСТИНА");
		КонецЕсли;	
		
		Запрос.УстановитьПараметр("Тип", ТекСтрокаСканирование.ТипДокумента);		
		
	КонецЕсли;	
	
	ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
	ЭлементыФормы.ТаблицаДокументов.СоздатьКолонки();
	
	//Фильтр = Новый Структура("НомерВходящий", ТекСтрокаСканирование.НомерДокумента);
	
	МассивФильтров = Новый Массив;
	МассивФильтров.Добавить(Новый Структура("НомерВх, ДатаВх, Сумма", ТекСтрокаСканирование.НомерДокумента, ТекСтрокаСканирование.ДатаДокумента, ТекСумма));
	МассивФильтров.Добавить(Новый Структура("НомерВх, ДатаВх", ТекСтрокаСканирование.НомерДокумента, ТекСтрокаСканирование.ДатаДокумента));
	МассивФильтров.Добавить(Новый Структура("Сумма", ТекСумма));
			
	Если ТаблицаДокументов.Количество() > 0  Тогда
		Для каждого Фильтр Из МассивФильтров Цикл
			МассивСтрокДокументов = ТаблицаДокументов.НайтиСтроки(Фильтр);
			Если МассивСтрокДокументов.Количество() > 0 Тогда
				ЭлементыФормы.ТаблицаДокументов.ТекущаяСтрока = МассивСтрокДокументов[0];		
				Прервать;
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;		
КонецПроцедуры	

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	ЭтаФорма.Контрагент = ТекСтрокаСканирование.Контрагент;
	ЭтаФорма.Организация = ТекСтрокаСканирование.Организация;
	ЗаполнитьТаблицу();
КонецПроцедуры

Процедура ТаблицаДокументовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	ТС = ЭлементыФормы.ТаблицаДокументов.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекСтрокаСканирование) = Истина И ЗначениеЗаполнено(ТС) = Истина Тогда
		Если ЗначениеЗаполнено(ТекСтрокаСканирование.ФайлXMLВерификация) = Истина Тогда						
			
			ЭтоСФ = Ложь;
			ТипФайла = Справочники.АК_АлгоритмыРаспознаванияФайлов.ПолучитьТипФайла(ТекСтрокаСканирование.ФайлXMLВерификация);
			Если НРег(ТипФайла) = НРег("Счет_фактура") Или НРег(ТипФайла) = НРег("Счет-фактура") Или НРег(ТипФайла) = НРег("Универсальный передаточный документ") Тогда
				ЭтоСФ = Истина;
			КонецЕсли;	
			
			Запись = РегистрыСведений.ПрикрепленныеСканыКДокументам.СоздатьМенеджерЗаписи();
			Запись.Документ = ТС.Ссылка;
			Запись.Прочитать();
			
			Ответ = Неопределено;
			Если ЭтоСФ = Истина Тогда
				Если ЗначениеЗаполнено(Запись.Документ) = Истина И ЗначениеЗаполнено(Запись.ФайлСФ) = Истина Тогда					
					Ответ = Вопрос("К документу уже прикреплена Счет-фактура. Заменить?", РежимДиалогаВопрос.ДаНет);					
					Если Ответ = КодВозвратаДиалога.Нет Тогда
						Возврат;
					КонецЕсли;	
				КонецЕсли;
			Иначе
				Если ЗначениеЗаполнено(Запись.Документ) = Истина И ЗначениеЗаполнено(Запись.ФайлТОРГ12) = Истина Тогда					
					Ответ = Вопрос("К документу уже прикреплена накладная. Заменить?", РежимДиалогаВопрос.ДаНет);					
					Если Ответ = КодВозвратаДиалога.Нет Тогда
						Возврат;
					КонецЕсли;	
				КонецЕсли;
			КонецЕсли;	
			
			Справочники.АК_АлгоритмыРаспознаванияФайлов.СравнитьОбъектИФайл(ТекСтрокаСканирование.ФайлXMLВерификация, ТекСтрокаСканирование.ФайлXML);				
			
			ПутьКФайлу = Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(ТекСтрокаСканирование.ФайлXMLВерификация);			
			ФайлНаДиске = Новый Файл(ПутьКФайлу);
			СтруктураФайла = Справочники.АК_АлгоритмыРаспознаванияФайлов.ПолучитьСтруктуруXMLВерификации(ФайлНаДиске);			
			
			Справочники.АК_АлгоритмыРаспознаванияФайлов.ПрикрепитьОбъектКФайлу(ТекСтрокаСканирование.ФайлXMLВерификация, ТС.Ссылка, СтруктураФайла.Fields);
			
			Справочники.АК_АлгоритмыРаспознаванияФайлов.СравнитьОбъектИФайл(ТекСтрокаСканирование.ФайлXMLВерификация, ТС.Ссылка);
			
			ТекСтрокаСканирование.Статус = "Прикреплен к файлу";
			ТекСтрокаСканирование.ПрикрепленныйДокумент = ТС.Ссылка;			
			
			ЭтаФорма.ВладелецФормы.ТекДокумент = ТС.Ссылка;

			ЭтаФорма.Закрыть();
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

Процедура ДействияФормыОбновить(Кнопка)
	ЗаполнитьТаблицу();
КонецПроцедуры
