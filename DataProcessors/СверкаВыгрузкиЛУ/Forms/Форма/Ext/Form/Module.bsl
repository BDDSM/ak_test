
&НаСервере
Функция ВыполнитьПодключениеКБазе(СоединениеСБазой)
	
	Попытка		
		Коннектор = Новый COMObject(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Бух() + ".COMConnector");		
		Строка = ПолныеПрава.ПолучитьСтрокуПодключения_Бух();			
		СоединениеСБазой = Коннектор.Connect(Строка);
	Исключение
		СоединениеСБазой = Неопределено;
		Сообщить("Подключится к базе невозможно! " + Символы.ПС+Строка(ОписаниеОшибки()));
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура РедактироватьПериод(Команда)
	
	СтандартныйПериод = Новый СтандартныйПериод(Объект.ДатаНачала, Объект.ДатаОкончания);
	ДиалогРедактирования = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогРедактирования.Период = СтандартныйПериод;
	Если ДиалогРедактирования.Редактировать() Тогда
		СтандартныйПериод = ДиалогРедактирования.Период;
		Объект.ДатаНачала = СтандартныйПериод.ДатаНачала;
		Объект.ДатаОкончания = СтандартныйПериод.ДатаОкончания;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИтогоСумма=0;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		Объект.ДатаНачала = НачалоМесяца(ТекущаяДата());
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		Объект.ДатаОкончания = КонецМесяца(ТекущаяДата());
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОтображатьТолькоРазницу = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ПерестроитьДеревоДанных()
	
	СоединениеСБазой = Неопределено;
	
	Если НЕ ВыполнитьПодключениеКБазе(СоединениеСБазой) Тогда
		Возврат;
	КонецЕсли;
	
	ДеревоДанных.ПолучитьЭлементы().Очистить();	
	
	//***
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.ДатаНачала));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.ДатаОкончания));
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("СписокТТ", СтруктурныеЕдиницы);	
	Запрос.УстановитьПараметр("ЕстьОтборПоТТ", СтруктурныеЕдиницы.Количество() > 0);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтруктурныеЕдиницы.НомерТочки КАК НомерТочки,
	               |	СтруктурныеЕдиницы.Ссылка КАК ТТ
	               |ИЗ
	               |	Документ.ЛистУчета КАК ЛистУчета
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	               |		ПО ЛистУчета.ТорговаяТочка = СтруктурныеЕдиницы.Ссылка
	               |ГДЕ
	               |	ЛистУчета.Дата МЕЖДУ &ДатаНач И &ДатаКон
	               |	И (ЛистУчета.Организация = &Организация
	               |			ИЛИ &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	               |	И (ЛистУчета.ТорговаяТочка В (&СписокТТ)
	               |			ИЛИ НЕ &ЕстьОтборПоТТ)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СтруктурныеЕдиницы.НомерТочки,
	               |	СтруктурныеЕдиницы.Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерТочки
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	ТаблицаСоответствиеТТПоНомеру = Запрос.Выполнить().Выгрузить();
	
	ДатаНач = НачалоДня(Объект.ДатаНачала);
	ДатаКон = КонецДня(Объект.ДатаОкончания);	
	
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
				   
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЛистУчета.Ссылка КАК ЛУ,
	               |	ЛистУчета.ТорговаяТочка,
	               |	ЛистУчета.Терминал,
	               |	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) КАК Дата,
	               |	ЛистУчета.Организация,
	               |	СтруктурныеЕдиницы.ТипРозничнойТочки,
	               |	ЛистУчета.Проведен
	               |ПОМЕСТИТЬ МассивЛУ
	               |ИЗ
	               |	Документ.ЛистУчета КАК ЛистУчета
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	               |		ПО ЛистУчета.ТорговаяТочка = СтруктурныеЕдиницы.Ссылка
	               |ГДЕ
	               |	ЛистУчета.Проведен
	               |	И ЛистУчета.Дата МЕЖДУ &ДатаНач И &ДатаКон
	               |	И (ЛистУчета.Организация = &Организация
	               |			ИЛИ &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	               |	И (ЛистУчета.ТорговаяТочка В (&СписокТТ)
	               |			ИЛИ НЕ &ЕстьОтборПоТТ)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МассивЛУ.ЛУ,
	               |	МассивЛУ.ТорговаяТочка,
	               |	МассивЛУ.Терминал,
	               |	МассивЛУ.Дата,
	               |	МассивЛУ.Организация,
	               |	МассивЛУ.Проведен
	               |ПОМЕСТИТЬ МассивЛУИзбенка
	               |ИЗ
	               |	МассивЛУ КАК МассивЛУ
	               |ГДЕ
	               |	МассивЛУ.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Избенка)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	МассивЛУ.ЛУ,
	               |	МассивЛУ.ТорговаяТочка,
	               |	МассивЛУ.Терминал,
	               |	МассивЛУ.Дата,
	               |	МассивЛУ.Организация,
	               |	МассивЛУ.Проведен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МассивЛУ.ЛУ,
	               |	МассивЛУ.ТорговаяТочка,
	               |	МассивЛУ.Терминал,
	               |	МассивЛУ.Дата,
	               |	МассивЛУ.Организация,
	               |	МассивЛУ.Проведен
	               |ПОМЕСТИТЬ МассивЛУМагазин
	               |ИЗ
	               |	МассивЛУ КАК МассивЛУ
	               |ГДЕ
	               |	МассивЛУ.ТипРозничнойТочки <> ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Избенка)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	МассивЛУ.ЛУ,
	               |	МассивЛУ.ТорговаяТочка,
	               |	МассивЛУ.Терминал,
	               |	МассивЛУ.Дата,
	               |	МассивЛУ.Организация,
	               |	МассивЛУ.Проведен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЛистУчета.ЛУ КАК ЛУ,
	               |	ЛистУчета.ТорговаяТочка КАК Подразделение,
	               |	МИНИМУМ(ОсновныеСредства.ЗаводскойНомер) КАК ИмяККМ,
	               |	ЛистУчета.Терминал КАК Терминал,
	               |	СУММА(ЛистУчетаZОтчеты.СуммаПоНал) КАК Сумма,
	               |	СУММА(ЛистУчетаZОтчеты.СуммаПоБезнал) КАК СуммаПоБезнал,
	               |	ЛистУчета.Дата КАК Дата,
	               |	ЛистУчета.Организация КАК Организация,
	               |	ИСТИНА КАК ЭтоИзбенка,
	               |	ЛистУчета.Проведен
	               |ПОМЕСТИТЬ ЛУ_ВыручкаИзбенка
	               |ИЗ
	               |	Документ.ЛистУчета.ZОтчеты КАК ЛистУчетаZОтчеты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ МассивЛУИзбенка КАК ЛистУчета
	               |		ПО ЛистУчетаZОтчеты.Ссылка = ЛистУчета.ЛУ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
	               |		ПО ЛистУчетаZОтчеты.Касса = ОсновныеСредства.Ссылка
	               |ГДЕ
	               |	ЛистУчетаZОтчеты.Ссылка В
	               |			(ВЫБРАТЬ
	               |				МассивЛУИзбенка.ЛУ
	               |			ИЗ
	               |				МассивЛУИзбенка КАК МассивЛУИзбенка)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЛистУчета.ТорговаяТочка,
	               |	ЛистУчета.Дата,
	               |	ЛистУчета.Организация,
	               |	ЛистУчета.ЛУ,
	               |	ЛистУчета.Терминал,
	               |	ЛистУчета.Проведен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               //|	СУММА(ЛистУчетаОплатыПоБанковскимКартам.СуммаДоставка + ЛистУчетаОплатыПоБанковскимКартам.СуммаВозврата) КАК Сумма,
				   |	СУММА(ЛистУчетаОплатыПоБанковскимКартам.СуммаДоставка) КАК Сумма,
	               |	ЛистУчетаОплатыПоБанковскимКартам.Ссылка КАК ЛУ
	               |ПОМЕСТИТЬ ЛУ_ИзбенкаМинусыПоБезналу
	               |ИЗ
	               |	Документ.ЛистУчета.ОплатыПоБанковскимКартам КАК ЛистУчетаОплатыПоБанковскимКартам
	               |ГДЕ
	               |	ЛистУчетаОплатыПоБанковскимКартам.Ссылка В
	               |			(ВЫБРАТЬ
	               |				МассивЛУИзбенка.ЛУ
	               |			ИЗ
	               |				МассивЛУИзбенка КАК МассивЛУИзбенка)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЛистУчетаОплатыПоБанковскимКартам.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЛистУчета.Дата КАК Дата,
	               |	ЛистУчета.ТорговаяТочка КАК Подразделение,
	               //|	СУММА(ЛистУчетаОплатыПоБанковскимКартам.Сумма + ЛистУчетаОплатыПоБанковскимКартам.СуммаДоставка - ЛистУчетаОплатыПоБанковскимКартам.СуммаВозврата) КАК Сумма,
				   |	СУММА(ЛистУчетаОплатыПоБанковскимКартам.Сумма + ЛистУчетаОплатыПоБанковскимКартам.СуммаДоставка) КАК Сумма,
	               |	ЛистУчетаОплатыПоБанковскимКартам.Терминал,
	               |	ЛистУчетаОплатыПоБанковскимКартам.Ссылка КАК ЛУ,
	               |	ЛистУчетаОплатыПоБанковскимКартам.РабочееМестоВСкл КАК ИмяККМ,
	               |	ЛОЖЬ КАК ЭтоИзбенка,
	               |	ЛистУчета.Проведен
	               |ПОМЕСТИТЬ ЛУ_ОплатыПоБанковскимКартам
	               |ИЗ
	               |	Документ.ЛистУчета.ОплатыПоБанковскимКартам КАК ЛистУчетаОплатыПоБанковскимКартам
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Терминалы КАК Терминалы
	               |		ПО ЛистУчетаОплатыПоБанковскимКартам.Терминал = Терминалы.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ МассивЛУМагазин КАК ЛистУчета
	               |		ПО ЛистУчетаОплатыПоБанковскимКартам.Ссылка = ЛистУчета.ЛУ
	               |ГДЕ
	               |	ЛистУчетаОплатыПоБанковскимКартам.Ссылка В
	               |			(ВЫБРАТЬ
	               |				МассивЛУМагазин.ЛУ
	               |			ИЗ
	               |				МассивЛУМагазин КАК МассивЛУМагазин)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЛистУчета.Дата,
	               |	ЛистУчета.ТорговаяТочка,
	               |	ЛистУчетаОплатыПоБанковскимКартам.Терминал,
	               |	ЛистУчетаОплатыПоБанковскимКартам.Ссылка,
	               |	ЛистУчетаОплатыПоБанковскимКартам.РабочееМестоВСкл,
	               |	ЛистУчета.Проведен
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЛУ_ВыручкаИзбенка.Дата,
	               |	ЛУ_ВыручкаИзбенка.Подразделение,
	               |	ЛУ_ВыручкаИзбенка.СуммаПоБезнал - ЕСТЬNULL(ЛУ_ИзбенкаМинусыПоБезналу.Сумма, 0),
	               |	ЛУ_ВыручкаИзбенка.Терминал,
	               |	ЛУ_ВыручкаИзбенка.ЛУ,
	               |	ЛУ_ВыручкаИзбенка.ИмяККМ,
	               |	ЛУ_ВыручкаИзбенка.ЭтоИзбенка,
	               |	ЛУ_ВыручкаИзбенка.Проведен
	               |ИЗ
	               |	ЛУ_ВыручкаИзбенка КАК ЛУ_ВыручкаИзбенка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ЛУ_ИзбенкаМинусыПоБезналу КАК ЛУ_ИзбенкаМинусыПоБезналу
	               |		ПО ЛУ_ВыручкаИзбенка.ЛУ = ЛУ_ИзбенкаМинусыПоБезналу.ЛУ
	               |ГДЕ
	               |	ЛУ_ВыручкаИзбенка.СуммаПоБезнал > 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЛистУчета.Дата КАК Дата,
	               |	ЛистУчета.ТорговаяТочка КАК Подразделение,
	               |	СУММА(ЛистУчетаВыручка.Сумма) КАК Сумма,
	               |	ЛистУчетаВыручка.Ссылка КАК ЛУ,
	               |	МИНИМУМ(ЛистУчетаВыручка.РабочееМестоВСкл) КАК ИмяККМ,
	               |	ЛОЖЬ КАК ЭтоИзбенка,
	               |	ЛистУчета.Проведен
	               |ПОМЕСТИТЬ ЛУ_Выручка
	               |ИЗ
	               |	Документ.ЛистУчета.Выручка КАК ЛистУчетаВыручка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ МассивЛУМагазин КАК ЛистУчета
	               |		ПО ЛистУчетаВыручка.Ссылка = ЛистУчета.ЛУ
	               |ГДЕ
	               |	ЛистУчетаВыручка.Ссылка В
	               |			(ВЫБРАТЬ
	               |				МассивЛУМагазин.ЛУ
	               |			ИЗ
	               |				МассивЛУМагазин КАК МассивЛУМагазин)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЛистУчета.ТорговаяТочка,
	               |	ЛистУчета.Дата,
	               |	ЛистУчетаВыручка.Ссылка,
	               |	ЛистУчета.Проведен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЛУ_Выручка.Дата,
	               |	ЛУ_Выручка.Подразделение,
	               |	СУММА(ЛУ_Выручка.Сумма) КАК СуммаНал,
	               |	0 КАК СуммаБезНал,
	               |	ЛУ_Выручка.ЛУ,
	               |	ЛУ_Выручка.ИмяККМ КАК ИмяККМ,
	               |	ЛУ_Выручка.ЭтоИзбенка,
	               |	ЛУ_Выручка.Проведен
	               |ПОМЕСТИТЬ СводнаяЛУ
	               |ИЗ
	               |	ЛУ_Выручка КАК ЛУ_Выручка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЛУ_Выручка.Дата,
	               |	ЛУ_Выручка.Подразделение,
	               |	ЛУ_Выручка.ЛУ,
	               |	ЛУ_Выручка.ЭтоИзбенка,
	               |	ЛУ_Выручка.ИмяККМ,
	               |	ЛУ_Выручка.Проведен
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЛУ_ОплатыПоБанковскимКартам.Дата,
	               |	ЛУ_ОплатыПоБанковскимКартам.Подразделение,
	               |	0,
	               |	СУММА(ЛУ_ОплатыПоБанковскимКартам.Сумма),
	               |	ЛУ_ОплатыПоБанковскимКартам.ЛУ,
	               |	МИНИМУМ(ЛУ_ОплатыПоБанковскимКартам.ИмяККМ),
	               |	ЛУ_ОплатыПоБанковскимКартам.ЭтоИзбенка,
	               |	ЛУ_ОплатыПоБанковскимКартам.Проведен
	               |ИЗ
	               |	ЛУ_ОплатыПоБанковскимКартам КАК ЛУ_ОплатыПоБанковскимКартам
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЛУ_ОплатыПоБанковскимКартам.Дата,
	               |	ЛУ_ОплатыПоБанковскимКартам.Подразделение,
	               |	ЛУ_ОплатыПоБанковскимКартам.ЛУ,
	               |	ЛУ_ОплатыПоБанковскимКартам.ЭтоИзбенка,
	               |	ЛУ_ОплатыПоБанковскимКартам.Проведен
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ЛУ_ВыручкаИзбенка.Дата,
	               |	ЛУ_ВыручкаИзбенка.Подразделение,
	               |	ЛУ_ВыручкаИзбенка.Сумма,
	               |	0,
	               |	ЛУ_ВыручкаИзбенка.ЛУ,
	               |	ЛУ_ВыручкаИзбенка.ИмяККМ,
	               |	ЛУ_ВыручкаИзбенка.ЭтоИзбенка,
	               |	ЛУ_ВыручкаИзбенка.Проведен
	               |ИЗ
	               |	ЛУ_ВыручкаИзбенка КАК ЛУ_ВыручкаИзбенка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЛУ_ОплатыПоБанковскимКартам.Дата,
	               |	СУММА(ЛУ_ОплатыПоБанковскимКартам.Сумма) КАК Сумма,
	               |	ЛУ_ОплатыПоБанковскимКартам.Подразделение,
	               |	ЛУ_ОплатыПоБанковскимКартам.Терминал,
	               |	ЛУ_ОплатыПоБанковскимКартам.ЛУ,
	               |	ЛУ_ОплатыПоБанковскимКартам.ЭтоИзбенка,
	               |	ЛУ_ОплатыПоБанковскимКартам.Проведен
	               |ПОМЕСТИТЬ ТабДетализацияОплатБезналПоБанкам
	               |ИЗ
	               |	ЛУ_ОплатыПоБанковскимКартам КАК ЛУ_ОплатыПоБанковскимКартам
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЛУ_ОплатыПоБанковскимКартам.Дата,
	               |	ЛУ_ОплатыПоБанковскимКартам.Подразделение,
	               |	ЛУ_ОплатыПоБанковскимКартам.Терминал,
	               |	ЛУ_ОплатыПоБанковскимКартам.ЛУ,
	               |	ЛУ_ОплатыПоБанковскимКартам.ЭтоИзбенка,
	               |	ЛУ_ОплатыПоБанковскимКартам.Проведен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ЛУ_ОплатыПоБанковскимКартам
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ЛУ_Выручка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СводнаяЛУ.Дата,
	               |	СводнаяЛУ.Подразделение,
	               |	СУММА(СводнаяЛУ.СуммаНал) КАК СуммаНал,
	               |	СУММА(СводнаяЛУ.СуммаБезНал) КАК СуммаБезНал,
	               |	СводнаяЛУ.ЛУ,
	               |	МИНИМУМ(СводнаяЛУ.ИмяККМ) КАК ИмяККМ,
	               |	СводнаяЛУ.ЭтоИзбенка,
	               |	СводнаяЛУ.Проведен
	               |ПОМЕСТИТЬ СвернутаяЛУ
	               |ИЗ
	               |	СводнаяЛУ КАК СводнаяЛУ
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СводнаяЛУ.Дата,
	               |	СводнаяЛУ.Подразделение,
	               |	СводнаяЛУ.ЛУ,
	               |	СводнаяЛУ.ЭтоИзбенка,
	               |	СводнаяЛУ.Проведен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ СводнаяЛУ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СводнаяЛУ.ЛУ.Организация КАК Организация,
	               |	СводнаяЛУ.ЛУ.СуммаИнкассации КАК СуммаИнкассации,
	               |	СводнаяЛУ.ЛУ,
	               |	СводнаяЛУ.Дата,
	               |	СводнаяЛУ.ИмяККМ,
	               |	СводнаяЛУ.Подразделение,
	               |	СводнаяЛУ.СуммаНал,
	               |	СводнаяЛУ.СуммаБезНал,
	               |	ЕСТЬNULL(СтруктурныеЕдиницы.СовместнаяДеятельность, ЛОЖЬ) КАК ТТ_СовместнаяДеятельность,
	               |	ЕСТЬNULL(СтруктурныеЕдиницы.НомерТочки, 0) КАК НомерТочки,
	               |	СводнаяЛУ.ЭтоИзбенка,
	               |	СтруктурныеЕдиницы.ДатаПереходаНаУчетПоОбособленномуПодразделению КАК ДатаПерехода,
	               |	СтруктурныеЕдиницы.КодОПБух,
	               |	СводнаяЛУ.Проведен
	               |ИЗ
	               |	СвернутаяЛУ КАК СводнаяЛУ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	               |		ПО СводнаяЛУ.Подразделение = СтруктурныеЕдиницы.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТабДетализацияОплатБезналПоБанкам.Дата,
	               |	СУММА(ТабДетализацияОплатБезналПоБанкам.Сумма) КАК Сумма,
	               |	ТабДетализацияОплатБезналПоБанкам.Подразделение,
	               |	ТабДетализацияОплатБезналПоБанкам.Терминал,
	               |	ТабДетализацияОплатБезналПоБанкам.ЛУ,
	               |	ТабДетализацияОплатБезналПоБанкам.ЭтоИзбенка,
	               |	ТабДетализацияОплатБезналПоБанкам.Проведен
	               |ИЗ
	               |	ТабДетализацияОплатБезналПоБанкам КАК ТабДетализацияОплатБезналПоБанкам
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТабДетализацияОплатБезналПоБанкам.Дата,
	               |	ТабДетализацияОплатБезналПоБанкам.Подразделение,
	               |	ТабДетализацияОплатБезналПоБанкам.Терминал,
	               |	ТабДетализацияОплатБезналПоБанкам.ЛУ,
	               |	ТабДетализацияОплатБезналПоБанкам.ЭтоИзбенка,
	               |	ТабДетализацияОплатБезналПоБанкам.Проведен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЛистУчетаАктыКМ3.Ссылка КАК ЛУ,
	               |	ЛистУчета.Дата КАК Дата,
	               |	СУММА(ВЫБОР
	               |			КОГДА ЛистУчетаАктыКМ3.ЭтоВозвратБезнал
	               |				ТОГДА ЛистУчетаАктыКМ3.СуммаПоНДС10
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК ВозвратПоНДС10БезНал,
	               |	СУММА(ВЫБОР
	               |			КОГДА ЛистУчетаАктыКМ3.ЭтоВозвратБезнал
	               |				ТОГДА ЛистУчетаАктыКМ3.СуммаПоНДС18
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК ВозвратПоНДС18БезНал,
	               |	СУММА(ВЫБОР
	               |			КОГДА ЛистУчетаАктыКМ3.ЭтоВозвратБезнал
	               |				ТОГДА 0
	               |			ИНАЧЕ ЛистУчетаАктыКМ3.СуммаПоНДС10
	               |		КОНЕЦ) КАК ВозвратПоНДС10Нал,
	               |	СУММА(ВЫБОР
	               |			КОГДА ЛистУчетаАктыКМ3.ЭтоВозвратБезнал
	               |				ТОГДА 0
	               |			ИНАЧЕ ЛистУчетаАктыКМ3.СуммаПоНДС18
	               |		КОНЕЦ) КАК ВозвратПоНДС18Нал,
	               |	ЛистУчета.Проведен
	               |ИЗ
	               |	Документ.ЛистУчета.АктыКМ3 КАК ЛистУчетаАктыКМ3
	               |		ЛЕВОЕ СОЕДИНЕНИЕ МассивЛУ КАК ЛистУчета
	               |		ПО ЛистУчетаАктыКМ3.Ссылка = ЛистУчета.ЛУ
	               |ГДЕ
	               |	ЛистУчетаАктыКМ3.Ссылка В
	               |			(ВЫБРАТЬ
	               |				МассивЛУ.ЛУ
	               |			ИЗ
	               |				МассивЛУ)
	               |	И ЛистУчетаАктыКМ3.АктПолучен
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЛистУчета.Дата,
	               |	ЛистУчетаАктыКМ3.Ссылка,
	               |	ЛистУчета.Проведен
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЛистУчетаТоварыПоВозвратам.Ссылка КАК ЛУ,
	               |	ЛистУчетаТоварыПоВозвратам.Номенклатура,
	               |	СУММА(ЛистУчетаТоварыПоВозвратам.Количество) КАК Количество,
	               |	ЛистУчетаТоварыПоВозвратам.СтавкаНДС,
	               |	СУММА(ЛистУчетаТоварыПоВозвратам.Сумма) КАК Сумма,
	               |	ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0) КАК Себестоимость
	               |ИЗ
	               |	Документ.ЛистУчета.ТоварыПоВозвратам КАК ЛистУчетаТоварыПоВозвратам
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьТоваров.СрезПоследних(&ДатаКон, ) КАК СебестоимостьТоваровСрезПоследних
	               |		ПО ЛистУчетаТоварыПоВозвратам.Номенклатура = СебестоимостьТоваровСрезПоследних.Номенклатура
	               |ГДЕ
	               |	ЛистУчетаТоварыПоВозвратам.Ссылка В
	               |			(ВЫБРАТЬ
	               |				МассивЛУ.ЛУ
	               |			ИЗ
	               |				МассивЛУ)
	               |	И НЕ ЛистУчетаТоварыПоВозвратам.Номенклатура.СлужебныйТовар
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЛистУчетаТоварыПоВозвратам.Номенклатура,
	               |	ЛистУчетаТоварыПоВозвратам.СтавкаНДС,
	               |	ЕСТЬNULL(СебестоимостьТоваровСрезПоследних.Себестоимость, 0),
	               |	ЛистУчетаТоварыПоВозвратам.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПКО.СуммаДокумента,
	               |	ПКО.Ссылка КАК Ссылка,
	               |	ПКО.ПометкаУдаления,
	               |	ПКО.Дата,
	               |	ПКО.Организация,
	               |	СтруктурныеЕдиницы.Ссылка КАК ТорговаяТочка,
	               |	СтруктурныеЕдиницы.НомерТочки КАК НомерТочки,
	               |	СтруктурныеЕдиницы.КодОПБух,
	               |	СтруктурныеЕдиницы.ДатаПереходаНаУчетПоОбособленномуПодразделению КАК ДатаПерехода
	               |ИЗ
	               |	Документ.ПоступлениеВКассу КАК ПКО
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	               |		ПО ПКО.ТорговаяТочка = СтруктурныеЕдиницы.Ссылка
	               |ГДЕ
	               |	ПКО.ТорговаяТочка В
	               |			(ВЫБРАТЬ
	               |				МассивЛУИзбенка.ТорговаяТочка
	               |			ИЗ
	               |				МассивЛУИзбенка)
	               |	И ПКО.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПКО.Инкассация)
	               |	И ПКО.Дата МЕЖДУ &ДатаНач И &ДатаКон
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ФинансовыйОборотыДтКт.Регистратор КАК ЛУ,
	               |	ФинансовыйОборотыДтКт.СубконтоКт2 КАК Контрагент,
	               |	СРЕДНЕЕ(ФинансовыйОборотыДтКт.СуммаОборот) КАК СуммаБезнал,
	               |	СУММА(ЛистУчетаЗаказыКурьеров.Количество) КАК КоличествоТовар,
	               |	СУММА(ЛистУчетаЗаказыКурьеров.Сумма) КАК СуммаТовар,
	               |	СпрНоменклатура.СтавкаНДС КАК СтавкаНДСТовар,
	               |	Контрагенты.ИДКурьераПоДоставке
	               |ИЗ
	               |	РегистрБухгалтерии.Финансовый.ОборотыДтКт(&ДатаНач, &ДатаКон, Регистратор, СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ДенежныеСредстваВПутиЭквайринг), , СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РасчетыСПокупателямиПрочие), , ) КАК ФинансовыйОборотыДтКт
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЛистУчета.ЗаказыКурьеров КАК ЛистУчетаЗаказыКурьеров
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	               |			ПО ЛистУчетаЗаказыКурьеров.Номенклатура = СпрНоменклатура.Ссылка
	               |		ПО ФинансовыйОборотыДтКт.Регистратор = ЛистУчетаЗаказыКурьеров.Ссылка
	               |			И ФинансовыйОборотыДтКт.СубконтоКт2 = ЛистУчетаЗаказыКурьеров.Контрагент
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	               |		ПО ФинансовыйОборотыДтКт.СубконтоКт2 = Контрагенты.Ссылка
	               |ГДЕ
	               |	ФинансовыйОборотыДтКт.Регистратор В
	               |			(ВЫБРАТЬ
	               |				МассивЛУ.ЛУ
	               |			ИЗ
	               |				МассивЛУ)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ФинансовыйОборотыДтКт.Регистратор,
	               |	ФинансовыйОборотыДтКт.СубконтоКт2,
	               |	СпрНоменклатура.СтавкаНДС,
	               |	Контрагенты.ИДКурьераПоДоставке";
	
	Результаты = Запрос.ВыполнитьПакет();
	
	ТабДанные = Результаты[13].Выгрузить();
	ТабДетализацияОплатБезналПоБанкам = Результаты[14].Выгрузить(); //?
	ТабВозвратыКм3 = Результаты[15].Выгрузить();
	ТабВозвратыИзСейфа = Результаты[16].Выгрузить();
	ТабПКО = Результаты[17].Выгрузить();
	ТабОплатыКурьерам = Результаты[18].Выгрузить();
	
	ТабДетализацияОплатБезналПоБанкам.Индексы.Добавить("ЛУ");
	ТабВозвратыКМ3.Индексы.Добавить("ЛУ");
	ТабВозвратыИзСейфа.Индексы.Добавить("ЛУ");	
	
	ТаблицаТовары = Новый ТаблицаЗначений;
	ТаблицаТовары.Колонки.Добавить("СтавкаНДС", Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));
	ТаблицаТовары.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	ТаблицаТовары.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число"));
	ТаблицаТовары.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	
	ТаблицаОплаты = Новый ТаблицаЗначений;  //?
	ТаблицаОплаты.Колонки.Добавить("СуммаОплаты", Новый ОписаниеТипов("Число"));
	ТаблицаОплаты.Колонки.Добавить("Префикс", Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(1)));
	ТаблицаОплаты.Колонки.Добавить("ВидОплаты");
	
	ТабНоменклатураПоВозвратамИзСейфа = Новый ТаблицаЗначений; //?
	ТабНоменклатураПоВозвратамИзСейфа.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТабНоменклатураПоВозвратамИзСейфа.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	ТабНоменклатураПоВозвратамИзСейфа.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	ТабНоменклатураПоВозвратамИзСейфа.Колонки.Добавить("Себестоимость", Новый ОписаниеТипов("Число"));
	ТабНоменклатураПоВозвратамИзСейфа.Колонки.Добавить("СтавкаНДС", Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));
	
	СоответствиеДанныхБух = ПолучитьТаблицуДанныхБух(ТабДанные.ВыгрузитьКолонку("ЛУ"), СоединениеСБазой);
	
	ТабДанные.Индексы.Добавить("Подразделение");
	ТабВозвратыКМ3.Индексы.Добавить("ЛУ");
	
	ЭлементыДерева = ДеревоДанных.ПолучитьЭлементы();	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаСоответствиеТТПоНомеру.ТТ
	               |ПОМЕСТИТЬ ТаблицаСоответствиеТТПоНомеру
	               |ИЗ
	               |	&ТаблицаСоответствиеТТПоНомеру КАК ТаблицаСоответствиеТТПоНомеру
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТабДанные.СуммаНал,
	               |	ТабДанные.СуммаБезНал,
	               |	ТабДанные.ЛУ,
	               |	ТабДанные.Дата,
	               |	ТабДанные.Подразделение,
	               |	ТабДанные.СуммаИнкассации,
	               |	ТабДанные.ЭтоИзбенка,
	               |	ТабДанные.Проведен
	               |ПОМЕСТИТЬ ТабДанные
	               |ИЗ
	               |	&ТабДанные КАК ТабДанные
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТабВозвратыИзСейфа.ЛУ,
	               |	ТабВозвратыИзСейфа.Сумма
	               |ПОМЕСТИТЬ ТабВозвратыИзСейфа
	               |ИЗ
	               |	&ТабВозвратыИзСейфа КАК ТабВозвратыИзСейфа
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТабКурьеры.ЛУ,
	               |	ТабКурьеры.КоличествоТовар КАК КоличествоТовар,
	               |	ТабКурьеры.СуммаТовар КАК СуммаТовар
	               |ПОМЕСТИТЬ СводнаяТабКурьеры
	               |ИЗ
	               |	&ТабКурьеры КАК ТабКурьеры
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТабВозвратыИзСейфа.ЛУ,
	               |	СУММА(ТабВозвратыИзСейфа.Сумма) КАК Сумма
	               |ПОМЕСТИТЬ СводнаяВозвратыИзСейфа
	               |ИЗ
	               |	ТабВозвратыИзСейфа КАК ТабВозвратыИзСейфа
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТабВозвратыИзСейфа.ЛУ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СводнаяТабКурьеры.ЛУ,
	               |	СУММА(СводнаяТабКурьеры.КоличествоТовар) КАК КоличествоТовар,
	               |	СУММА(СводнаяТабКурьеры.СуммаТовар) КАК СуммаТовар
	               |ПОМЕСТИТЬ СгруппированнаяТабКурьеры
	               |ИЗ
	               |	СводнаяТабКурьеры КАК СводнаяТабКурьеры
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СводнаяТабКурьеры.ЛУ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаСоответствиеТТПоНомеру.ТТ КАК ТТ,
	               |	ТабДанные.СуммаНал,
	               |	ТабДанные.СуммаБезНал,
	               |	ТабДанные.ЛУ,
	               |	ТабДанные.Подразделение,
	               |	ТабДанные.Проведен,
	               |	ТабДанные.Дата,
	               |	ТабДанные.СуммаИнкассации,
	               |	ТабДанные.ЭтоИзбенка,
	               |	ЕСТЬNULL(ТабВозвратыИзСейфа.Сумма, 0) КАК СуммаВозвратИзСейфа,
	               |	ЕСТЬNULL(СгруппированнаяТабКурьеры.СуммаТовар, 0) КАК СуммаОплатаКурьерам
	               |ИЗ
	               |	ТаблицаСоответствиеТТПоНомеру КАК ТаблицаСоответствиеТТПоНомеру
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ТабДанные КАК ТабДанные
	               |			ЛЕВОЕ СОЕДИНЕНИЕ СводнаяВозвратыИзСейфа КАК ТабВозвратыИзСейфа
	               |			ПО ТабДанные.ЛУ = ТабВозвратыИзСейфа.ЛУ
	               |			ЛЕВОЕ СОЕДИНЕНИЕ СгруппированнаяТабКурьеры КАК СгруппированнаяТабКурьеры
	               |			ПО ТабДанные.ЛУ = СгруппированнаяТабКурьеры.ЛУ
	               |		ПО ТаблицаСоответствиеТТПоНомеру.ТТ = ТабДанные.Подразделение
	               |ГДЕ
	               |	НЕ ТабДанные.ЛУ ЕСТЬ NULL
	               |ИТОГИ ПО
	               |	ТТ";
	
	Запрос.УстановитьПараметр("ТаблицаСоответствиеТТПоНомеру", ТаблицаСоответствиеТТПоНомеру);
	Запрос.УстановитьПараметр("ТабДанные", ТабДанные);
	Запрос.УстановитьПараметр("ТабВозвратыИзСейфа", ТабВозвратыИзСейфа);
	Запрос.УстановитьПараметр("ТабКурьеры", ТабОплатыКурьерам);
	
	ВыборкаТТ = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТТ.Следующий() Цикл
		
		СтрокаТочка = ЭлементыДерева.Добавить();
		СтрокаТочка.Группировка = ВыборкаТТ.ТТ;
		
		Стр = ВыборкаТТ.Выбрать();
		
		Пока Стр.Следующий() Цикл
			
			ОплатаКурьерам = Стр.СуммаОплатаКурьерам;
			ВыручкаФин = 0;						
			НайдСтрВозвратыКМ3 = ТабВозвратыКМ3.Найти(Стр.ЛУ, "ЛУ");
			
			АктыКм3 = 0;
			АктыКМ3БН = 0;
			
			Если НайдСтрВозвратыКМ3 <> Неопределено Тогда
				//АктыКм3 = НайдСтрВозвратыКМ3.ВозвратПоНДС18БезНал + НайдСтрВозвратыКМ3.ВозвратПоНДС18Нал + НайдСтрВозвратыКМ3.ВозвратПоНДС10БезНал + НайдСтрВозвратыКМ3.ВозвратПоНДС10Нал;				
				АктыКм3 = НайдСтрВозвратыКМ3.ВозвратПоНДС18Нал + НайдСтрВозвратыКМ3.ВозвратПоНДС10Нал;
				АктыКМ3БН = НайдСтрВозвратыКМ3.ВозвратПоНДС18БезНал + НайдСтрВозвратыКМ3.ВозвратПоНДС10БезНал;
			КонецЕсли;
			
			ВыручкаФин = Стр.СуммаНал + Стр.СуммаБезНал - ОплатаКурьерам - АктыКМ3БН - АктыКм3;
			ВыручкаБезКм3 = ВыручкаФин + АктыКм3 + АктыКМ3БН;                                  			
			
			НайдСтрБух = СоответствиеДанныхБух.Получить(Строка(Стр.ЛУ.УникальныйИдентификатор()));
			
			СуммаБух = 0;
			СуммаБезналБух = 0;
			ДокументБух = "";
			БухПроведен = Ложь;
			ЕстьПКО = Ложь;
			ЕстьОперация = Ложь;
			СуммаВозврата = 0;
			РазницаПоВозврату = Истина;
			ЕстьВозврат = Стр.СуммаВозвратИзСейфа <> 0;
			
			Если НЕ НайдСтрБух = Неопределено Тогда
				БухПроведен = НайдСтрБух.Проведен;
				СуммаБух = ?(БухПроведен, НайдСтрБух.Сумма, 0);
				СуммаБезналБух = ?(БухПроведен, НайдСтрБух.СуммаБезнал, 0);
				ДокументБух = НайдСтрБух.ОРППредставление;				
				ЕстьПКО = НайдСтрБух.ПКО И Стр.Проведен = НайдСтрБух.ПКОПроведен;
				СуммаВозврата = Окр(НайдСтрБух.СуммаВозврата, 2);
				РазницаПоВозврату = СуммаВозврата <> Стр.СуммаВозвратИзСейфа ИЛИ Стр.Проведен <> НайдСтрБух.ВозвратПроведен;
				ЕстьВозврат = Стр.СуммаВозвратИзСейфа <> 0;
				ЕстьОперация = НайдСтрБух.Операция;
			КонецЕсли;		
			
			Разница = СуммаБух <> ВыручкаФин
					ИЛИ СуммаБезналБух <> Стр.СуммаБезНал-АктыКМ3БН
					ИЛИ Стр.Проведен <> БухПроведен
					ИЛИ (Стр.СуммаНал <> 0 И НЕ ЕстьПКО) ИЛИ (Стр.СуммаНал = 0 И ЕстьПКО)
					ИЛИ (Стр.СуммаИнкассации <> 0 И Стр.ЭтоИзбенка И Не ЕстьОперация) ИЛИ (Стр.СуммаИнкассации = 0 И Стр.ЭтоИзбенка И ЕстьОперация)
					ИЛИ (ЕстьВозврат И РазницаПоВозврату);
					
			//Сообщить(СуммаБух);
			//Сообщить(ВыручкаФин);
			//Сообщить(СуммаБезналБух <> Стр.СуммаБезНал);
			//Сообщить(Стр.Проведен <> БухПроведен);
			//Сообщить((Стр.СуммаНал <> 0 И НЕ ЕстьПКО) ИЛИ (Стр.СуммаНал = 0 И ЕстьПКО));
			//Сообщить((Стр.СуммаИнкассации <> 0 И Стр.ЭтоИзбенка И Не ЕстьОперация) ИЛИ (Стр.СуммаИнкассации = 0 И Стр.ЭтоИзбенка И ЕстьОперация));
			//Сообщить((ЕстьВозврат И РазницаПоВозврату));
			//Сообщить(СуммаБезналБух);
			//Сообщить(Стр.СуммаБезНал-АктыКМ3БН);
					
			
			Если НЕ Разница И ОтображатьТолькоРазницу Тогда				
				Продолжить;
			КонецЕсли;
			
			СтрокаДетальная = СтрокаТочка.ПолучитьЭлементы().Добавить();			
			СтрокаДетальная.Дата = Стр.Дата;
			СтрокаДетальная.ДокументФин = Стр.ЛУ;
			СтрокаДетальная.СуммаНалФин = Стр.СуммаНал;
			СтрокаДетальная.СуммаБезНалФин = Стр.СуммаБезНал;
			СтрокаДетальная.КурьерскиеДоставки = ОплатаКурьерам;
			СтрокаДетальная.ЭтоДетальнаяСтрока = Истина;
			СтрокаДетальная.ВыручкаФин = ВыручкаФин;
			СтрокаДетальная.ВыручкаБезКм3 = ВыручкаБезКм3;
			СтрокаДетальная.АктыКм3 = АктыКм3;
			СтрокаДетальная.АктыКМ3БН = АктыКМ3БН;
			СтрокаДетальная.СуммаБух = СуммаБух;
			СтрокаДетальная.СуммаБезНалБух = СуммаБезналБух;
			СтрокаДетальная.ДокументБух = ДокументБух;
			СтрокаДетальная.ЕстьПКО = ЕстьПКО;
			СтрокаДетальная.ЕстьОперация = ЕстьОперация;
			СтрокаДетальная.СуммаВозвратаИзСейфа = Стр.СуммаВозвратИзСейфа;
			СтрокаДетальная.СуммаВозвратаБух = СуммаВозврата;
			
		КонецЦикла;
		
	КонецЦикла;	
	
	Дерево = ДеревоДанных.ПолучитьЭлементы();
	
	МассивСтрДляУд = Новый Массив;
	
	Для Каждого СтрДерево Из Дерево Цикл
		Если СтрДерево.ПолучитьЭлементы().Количество() = 0 Тогда
			МассивСтрДляУд.Добавить(СтрДерево);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрДерево Из МассивСтрДляУд Цикл
		Дерево.Удалить(СтрДерево);
	КонецЦикла;
		
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуДанныхБух(МассивЛУ, СоединениеСБазой)
	
	МассивОРП = СоединениеСБазой.NewObject("Массив");
	МассивПКО = СоединениеСБазой.NewObject("Массив");
	МассивОпераций = СоединениеСБазой.NewObject("Массив");
	МассивВозвратов = СоединениеСБазой.NewObject("Массив");
	
	ТаблицаДанныхБух = Новый ТаблицаЗначений;
	ТаблицаДанныхБух.Колонки.Добавить("ОРП");
	ТаблицаДанныхБух.Колонки.Добавить("ОРППредставление");
	ТаблицаДанныхБух.Колонки.Добавить("Проведен", Новый ОписаниеТипов("Булево"));
	ТаблицаДанныхБух.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаДанныхБух.Колонки.Добавить("СуммаБезНал", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаДанныхБух.Колонки.Добавить("ПКО");	
	ТаблицаДанныхБух.Колонки.Добавить("ПКОПроведен");
	ТаблицаДанныхБух.Колонки.Добавить("Возврат");	
	ТаблицаДанныхБух.Колонки.Добавить("ВозвратПроведен");
	ТаблицаДанныхБух.Колонки.Добавить("СуммаВозврата");
	ТаблицаДанныхБух.Колонки.Добавить("Операция");
	
	СоответствиеДокументов = Новый Соответствие;
	
	МД = СоединениеСБазой.XMLTypeOf(СоединениеСБазой.Документы.ОтчетОРозничныхПродажах.ПустаяСсылка());
	МДПКО = СоединениеСБазой.XMLTypeOf(СоединениеСБазой.Документы.ПриходныйКассовыйОрдер.ПустаяСсылка());
	МДОПерация = СоединениеСБазой.XMLTypeOf(СоединениеСБазой.Документы.ОперацияБух.ПустаяСсылка());
	МДВозврат = СоединениеСБазой.XMLTypeOf(СоединениеСБазой.Документы.ВозвратТоваровОтПокупателя.ПустаяСсылка());
	
	Для Каждого Лу Из МассивЛУ Цикл
		
		ОРП = СоединениеСБазой.XMLValue(СоединениеСБазой.FromXMLType(МД), Строка(Лу.УникальныйИдентификатор()));
		
		Если НЕ Орп.Ref = СоединениеСБазой.Документы.ОтчетОРозничныхПродажах.ПустаяСсылка() Тогда		
			МассивОРП.Добавить(ОРП);
			НовСтр = ТаблицаДанныхБух.Добавить();
			НовСтр.ОРП = Строка(Лу.УникальныйИдентификатор());
			СоответствиеДокументов.Вставить(Строка(Лу.УникальныйИдентификатор()), НовСтр);
			
			ПКО = СоединениеСБазой.XMLValue(СоединениеСБазой.FromXMLType(МДПКО), Строка(Лу.УникальныйИдентификатор()));
			
			Если НЕ ПКО.Ref = СоединениеСБазой.Документы.ПриходныйКассовыйОрдер.ПустаяСсылка() Тогда
				МассивПКО.Добавить(ПКО);
			КонецЕсли;
			
			Операция = СоединениеСБазой.XMLValue(СоединениеСБазой.FromXMLType(МДОПерация), Строка(Лу.УникальныйИдентификатор()));
			
			Если НЕ Операция.Ref = СоединениеСБазой.Документы.ОперацияБух.ПустаяСсылка() Тогда
				МассивОпераций.Добавить(Операция);
			КонецЕсли; 
			
			ДокВозврат = СоединениеСБазой.XMLValue(СоединениеСБазой.FromXMLType(МДВозврат), Строка(Лу.УникальныйИдентификатор()));
			
			Если НЕ ДокВозврат.Ref = СоединениеСБазой.Документы.ВозвратТоваровОтПокупателя.ПустаяСсылка() Тогда
				МассивВозвратов.Добавить(ДокВозврат);
			КонецЕсли; 
			
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаДанныхБух.Индексы.Добавить("ОРП");
	ТаблицаДанныхБух.ЗаполнитьЗначения(Ложь, "ПКО");
	ТаблицаДанныхБух.ЗаполнитьЗначения(Ложь, "ПКОПроведен");
	ТаблицаДанныхБух.ЗаполнитьЗначения(Ложь, "Возврат");
	ТаблицаДанныхБух.ЗаполнитьЗначения(Ложь, "ВозвратПроведен");
	ТаблицаДанныхБух.ЗаполнитьЗначения(0, "СуммаВозврата");
	ТаблицаДанныхБух.ЗаполнитьЗначения(Ложь, "Операция");
	
	Запрос = СоединениеСБазой.NewObject("Запрос");
	Запрос.Текст = "ВЫБРАТЬ
	|	ОтчетОРозничныхПродажах.Ссылка КАК ОРП,
	|	ОтчетОРозничныхПродажах.Проведен КАК Проведен,
	|	ОтчетОРозничныхПродажах.Представление КАК ОРППредставление,
	|	СУММА(ЕСТЬNULL(ОтчетОРозничныхПродажахТовары.Сумма, 0)) КАК Сумма,
	|	0 КАК СуммаБезнал,
	|	""ОРП"" КАК ТипДок,
	|	NULL КАК СуммаДокумента
	|ПОМЕСТИТЬ СводнаяОРП
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.Товары КАК ОтчетОРозничныхПродажахТовары
	|		ПО ОтчетОРозничныхПродажах.Ссылка = ОтчетОРозничныхПродажахТовары.Ссылка
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка В(&МассивОРП)

	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажах.Ссылка,
	|	ОтчетОРозничныхПродажах.Проведен,
	|	ОтчетОРозничныхПродажах.Представление

	|ОБЪЕДИНИТЬ ВСЕ

	|ВЫБРАТЬ
	|	ОтчетОРозничныхПродажах.Ссылка,
	|	ОтчетОРозничныхПродажах.Проведен,
	|	ОтчетОРозничныхПродажах.Представление,
	|	0,
	|	СУММА(ЕСТЬNULL(ОтчетОРозничныхПродажахОплата.СуммаОплаты, 0)),
	|	""ОРП"",
	|	NULL
	|ИЗ
	|	Документ.ОтчетОРозничныхПродажах КАК ОтчетОРозничныхПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтчетОРозничныхПродажах.Оплата КАК ОтчетОРозничныхПродажахОплата
	|		ПО (ОтчетОРозничныхПродажахОплата.Ссылка = ОтчетОРозничныхПродажах.Ссылка)
	|ГДЕ
	|	ОтчетОРозничныхПродажах.Ссылка В(&МассивОРП)

	|СГРУППИРОВАТЬ ПО
	|	ОтчетОРозничныхПродажах.Ссылка,
	|	ОтчетОРозничныхПродажах.Проведен,
	|	ОтчетОРозничныхПродажах.Представление
	|;

	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СводнаяОРП.ОРП,
	|	СводнаяОРП.Проведен,
	|	СводнаяОРП.ОРППредставление,
	|	СУММА(СводнаяОРП.Сумма) КАК Сумма,
	|	СУММА(СводнаяОРП.СуммаБезнал) КАК СуммаБезнал,
	|	СводнаяОРП.ТипДок,
	|	СводнаяОРП.СуммаДокумента
	|ИЗ
	|	СводнаяОРП КАК СводнаяОРП

	|СГРУППИРОВАТЬ ПО
	|	СводнаяОРП.ОРП,
	|	СводнаяОРП.Проведен,
	|	СводнаяОРП.ОРППредставление,
	|	СводнаяОРП.ТипДок,
	|	СводнаяОРП.СуммаДокумента

	|ОБЪЕДИНИТЬ ВСЕ

	|ВЫБРАТЬ
	|	ПриходныйКассовыйОрдер.Ссылка,
	|	ПриходныйКассовыйОрдер.Проведен,
	|	NULL,
	|	NULL,
	|	NULL,
	|	""ПКО"",
	|	NULL
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
	|ГДЕ
	|	ПриходныйКассовыйОрдер.Ссылка В(&МассивПКО)

	|ОБЪЕДИНИТЬ ВСЕ

	|ВЫБРАТЬ
	|	ОперацияБух.Ссылка,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	""Операция"",
	|	NULL
	|ИЗ
	|	Документ.ОперацияБух КАК ОперацияБух
	|ГДЕ
	|	ОперацияБух.Ссылка В(&МассивОпераций)

	|ОБЪЕДИНИТЬ ВСЕ

	|ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	ВозвратТоваровОтПокупателя.Проведен,
	|	NULL,
	|	NULL,
	|	NULL,
	|	""Возврат"",
	|	ВозвратТоваровОтПокупателя.СуммаДокумента
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.Ссылка В(&МассивВозвратов)";
	
	Запрос.УстановитьПараметр("МассивОРП", МассивОРП);
	Запрос.УстановитьПараметр("МассивПКО", МассивПКО);
	Запрос.УстановитьПараметр("МассивОпераций", МассивОпераций);
	Запрос.УстановитьПараметр("МассивВозвратов", МассивВозвратов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ГуидДок = СоединениеСБазой.XMLСтрока(Выборка.ОРП);
		
		НайдСтр = СоответствиеДокументов.Получить(ГуидДок); //ТаблицаДанныхБух.Найти(ГуидДок, "ОРП");
		
		Если НайдСтр <> Неопределено Тогда
			Если Выборка.ТипДок = "ОРП" Тогда
				НайдСтр.ОрпПредставление = Выборка.ОРППредставление;
				НайдСтр.Сумма = Выборка.Сумма;
				НайдСтр.СуммаБезНал = Выборка.СуммаБезНал;
				НайдСтр.Проведен = Выборка.Проведен;
			ИначеЕсли Выборка.ТипДок = "ПКО" Тогда
				НайдСтр.Пко = Истина;
				НайдСтр.ПкоПроведен = Выборка.Проведен;
			ИначеЕсли Выборка.ТипДок = "Возврат" Тогда
				НайдСтр.Возврат = Истина;
				НайдСтр.ВозвратПроведен = Выборка.Проведен;
				НайдСтр.СуммаВозврата = Выборка.СуммаДокумента;
			ИначеЕсли Выборка.ТипДок = "Операция" Тогда
				НайдСтр.Операция = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	Возврат СоответствиеДокументов; //ТаблицаДанныхБух;
	
КонецФункции   	

&НаКлиенте
Процедура РазвернутьДеревоРекурсивно(СтрокаДерева)
	
	Для Каждого СтрокаВложенная Из СтрокаДерева.ПолучитьЭлементы() Цикл
		Элементы.ДеревоДанных.Развернуть(СтрокаВложенная.ПолучитьИдентификатор());
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ПрочитатьДанные(Команда)
	
	НачалоМая = Дата("20180501");
	
	Если Объект.ДатаНачала < НачалоМая 
		ИЛИ Объект.ДатаОкончания < НачалоМая Тогда
		Предупреждение("Период не может пересекаться с датами раньше 01.05.2018!");
		Возврат;
	КонецЕсли;
	
	ПерестроитьДеревоДанных();
	РазвернутьДеревоРекурсивно(ДеревоДанных);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЛистУчета(Команда)
	
	Если Элементы.ДеревоДанных.ТекущиеДанные = Неопределено
		ИЛИ НЕ Элементы.ДеревоДанных.ТекущиеДанные.ЭтоДетальнаяСтрока Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьЗначение(Элементы.ДеревоДанных.ТекущиеДанные.ДокументФин);
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьВыгрузкуВБухгалтерию(МассивЛУНаВыгрузку)
	
	Узел = ОбщегоНазначенияПовтИсп.ПолучитьУзелОбменаПоКоду("ЛУТ");
	
	Для Каждого ЛУ Из МассивЛУНаВыгрузку Цикл
		ПланыОбмена.ЗарегистрироватьИзменения(Узел, ЛУ);
	КонецЦикла;	
	
	пОбработка = Обработки.ВыгрузкаПлатежныхДокументовВБухгалтерию.Создать();
	пОбработка.ИмяФайлаПравилОбмена 				= "Правила обмена загружены";
	пОбработка.НепосредственноеЧтениеВИБПриемнике 	= Истина;
	пОбработка.ТипИнформационнойБазыДляПодключения 	= Ложь;
	пОбработка.ВерсияПлатформыИнформационнойБазыДляПодключения 			= ПолныеПрава.ПолучитьВерсиюКомОбъекта_Бух();
	СтруктураПодключения = ПолныеПрава.ПолучитьСтрокуПодключенияСтруктурой_Бух();
	пОбработка.ИмяСервераИнформационнойБазыДляПодключения 				= СтруктураПодключения.ИмяСервера;
	пОбработка.ИмяИнформационнойБазыНаСервереДляПодключения 			= СтруктураПодключения.ИмяБазы;
	пОбработка.АутентификацияWindowsИнформационнойБазыДляПодключения 	= Ложь;
	пОбработка.ПользовательИнформационнойБазыДляПодключения 			= СтруктураПодключения.Пользователь;
	пОбработка.ПарольИнформационнойБазыДляПодключения 					= СтруктураПодключения.Пароль;
	пОбработка.ИспользоватьТранзакции 				= Истина;
	пОбработка.КоличествоОбъектовНаТранзакцию 		= 1000000;
	пОбработка.ФлагРежимОтладки 					= Истина;	
	пОбработка.РежимОбмена = "Выгрузка";
		
	пОбработка.ТипУдаленияРегистрацииИзмененийДляУзловОбменаПослеВыгрузки=0;
	
	//пОбработка.ИмяМакета = "ПравилаЛУ";
	//
	//пМакет = пОбработка.ПолучитьМакет("ПравилаЛУ");
	//пОбработка.ЗагрузитьПравилаОбмена(пМакет.ПолучитьТекст(), "Строка");
	
	пОбработка.ИмяМакета = "ПравилаЛУ";
	
	ЗагрузитьПравилаОБменаДаннымиРеглОбмен(пОбработка, "ПравилаЛУ");
	//---АК Susk (Суслин К.В.)	

	
	пОбработка.ИнициализироватьПервоначальныеЗначенияПараметров();
	
	Узел = ОбщегоНазначенияПовтИсп.ПолучитьУзелОбменаПоКоду("ЛУТ");	
	пОбработка.Параметры.УзелОбмена = Узел;
	
	СтрокиДереваПравилВыгрузки = пОбработка.ТаблицаПравилВыгрузки.Строки;
	
	// документы
	Для каждого Правило из СтрокиДереваПравилВыгрузки Цикл
		Если Правило.Имя = "ВыгрузкаЛистовУчета" Тогда			
			Правило.Включить 			= 1;			
		Иначе	
			Правило.Включить 			= 0;
		КонецЕсли;	
	КонецЦикла;		
	
	пОбработка.ВыполнитьВыгрузку();
	 
КонецПроцедуры	

&НаКлиенте
Процедура ВыгрузитьВБухгалтерию(Команда)
	
	Дерево = ДеревоДанных.ПолучитьЭлементы();

	Если Дерево.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Ответ = Вопрос("Будет выполнена выгрузка данных в бухгалтерию выделенных ЛУ. Продолжить?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	МассивЛУНаВыгрузку = Новый Массив;
		
	Для Каждого СтрДерево Из Дерево Цикл
		СтрокиЛУ = СтрДерево.ПолучитьЭлементы();
		
		Для Каждого СтрЛУ Из СтрокиЛУ Цикл
			Если СтрЛУ.Выбран Тогда
				Сообщить(СтрЛУ.ДокументФин);
				МассивЛУНаВыгрузку.Добавить(СтрЛУ.ДокументФин);
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	ВыполнитьВыгрузкуВБухгалтерию(МассивЛУНаВыгрузку);
	
	Ответ = Вопрос("Обновить дерево данных?", РежимДиалогаВопрос.ДаНет);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ПерестроитьДеревоДанных();
		РазвернутьДеревоРекурсивно(ДеревоДанных);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Команда)
	
	УстановитьСнятьПометки(Истина);
		
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	
	УстановитьСнятьПометки(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьПометки(Флаг)
	
	ЭлементыДерева = ДеревоДанных.ПолучитьЭлементы();
	
	Для Каждого СтрД Из ЭлементыДерева Цикл
		СтрД.Выбран = Флаг;
		
		Строки = СтрД.ПолучитьЭлементы();
		
		Для Каждого Стр Из Строки Цикл
			Стр.Выбран = Флаг;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ДеревоДанныхВыбранПриИзменении(Элемент)
	
	ТекСтрД = ДеревоДанных.НайтиПоИдентификатору(Элементы.ДеревоДанных.ТекущаяСтрока);
	
	ПодчиненныеСтроки = ТекСтрД.ПолучитьЭлементы();
	
	Для Каждого Стр Из ПодчиненныеСтроки Цикл
		Стр.Выбран = ТекСтрД.Выбран;
	КонецЦикла;		
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПравилаОБменаДаннымиРеглОбмен(пОбработка, ИмяМакетаПравил) 
	
	флВременныеПравила = Истина;
	ТекстПравил = "";
	
	Если ИмяМакетаПравил = "ПравилаОбменаДанными_Контрагенты" Тогда
		Разрез = "Контрагенты";
	ИначеЕсли ИмяМакетаПравил = "ПравилаЛУ" Тогда
		Разрез = "ПравилаЛУ";
	Иначе
		Разрез = "";
	КонецЕсли;
	
	Попытка
		ТекстПравил = пОбработка.ПолучитьТекстВременныхПравилОбмена(Разрез);
	Исключение
		флВременныеПравила = Ложь;
	КонецПопытки;
	
	Если Не ЗначениеЗаполнено(ТекстПравил) Тогда
		флВременныеПравила = Ложь;
	КонецЕсли;
	
	Если флВременныеПравила Тогда
		пОбработка.ЗагрузитьПравилаОбмена(ТекстПравил, "Строка");
	Иначе	
		пМакет = пОбработка.ПолучитьМакет(ИмяМакетаПравил);
		пОбработка.ЗагрузитьПравилаОбмена(пМакет.ПолучитьТекст(), "Строка");
	КонецЕсли;
	
КонецПроцедуры
