
&НаКлиенте
Процедура ОбновитьЛенту(Команда)
	Если Не ЗначениеЗаполнено(СокрЛП(Искать)) Тогда
	     Сообщить("Введите выражение для поиска");
		 Возврат;
	КонецЕсли; 
	ИдентификаторЭлементаФормы=0;
    СчГрупп=0;
	ТаблицаСтруктурыФайлов.Очистить();
	Тэги.Очистить();
	ОбновитьЛентуСервер();
	ПолныйТекстHTML = "<html>
	|<body>";
	Для Каждого ЭлементСтруктуры Из ТаблицаСтруктурыФайлов Цикл
		Если ЗначениеЗаполнено(ЭлементСтруктуры.АдресВХранилище) Тогда
			Картинка = ПолучитьИзВременногоХранилища(ЭлементСтруктуры.АдресВХранилище);
			УдалитьИзВременногоХранилища(ЭлементСтруктуры.АдресВХранилище);
			Картинка.Записать(ВременныйКаталог + "\" + ЭлементСтруктуры.УинКартинки + ?(ЭлементСтруктуры.ТолькоМиниатюра, "thumb", "") + "." + ЭлементСтруктуры.Расширение);
		КонецЕсли;
	КонецЦикла;	
	ПолныйТекстHTML = ПолныйТекстHTML + "
			|<span><table id = ""Rakurs" + """ border=""1"" cellpadding=""0"" bordercolor=#9696FF cellspacing=""0"" width=""100%"">"
				+ СформироватьТэгиПоРакурсу()
				+ "</table></span><p></p>";
	
	ПолныйТекстHTML = ПолныйТекстHTML + "</body>
	|</html>";
	
	ДокументHTML = ПолныйТекстHTML;
	
	
КонецПроцедуры

&НаКлиенте
Функция СформироватьТэгиПоРакурсу( ТекущаяКартинка = "")
	
	ТекстВозврата = "";
	
	ТекСтатус = "";
	СтильСтатуса = "";
	СтрокиСтруктуры = ТаблицаСтруктурыФайлов;//.НайтиСтроки(Новый Структура("Ракурс", ЭлементРакурс));
	//Если СтрокиСтруктуры.Количество() > 0 Тогда
	//	Если СтрокиСтруктуры[0].СтатусРакурса = 0 Тогда
	//		ТекСтатус = "Не обработан";
	//		СтильСтатуса = "style = ""font-size:18; font-weight: bold; color: #3232FF""";
	//	ИначеЕсли СтрокиСтруктуры[0].СтатусРакурса = 1 Тогда
	//		ТекСтатус = "Не принят";
	//		СтильСтатуса = "style = ""font-size:18; font-weight: bold; color: #FF3232""";
	//	ИначеЕсли СтрокиСтруктуры[0].СтатусРакурса = 2 Тогда
	//		ТекСтатус = "Принят";
	//		СтильСтатуса = "style = ""font-size:18; font-weight: bold; color: #00BE00""";
	//	КонецЕсли;	
	//КонецЕсли;
	//СтрокиВПорядкеОбщегоСписка = НумерацияРакурсов.НайтиСтроки(Новый Структура("Ракурс", ЭлементРакурс));
	ТекстПорядкаРакурса = "";
	//Если СтрокиВПорядкеОбщегоСписка.Количество() > 0 Тогда
	//	ТекстПорядкаРакурса = "(" + Строка(СтрокиВПорядкеОбщегоСписка[0].НомерВОбщемСпискеВывода) + " из " + НумерацияРакурсов.Количество() + ")";
	//КонецЕсли;	
	//ТекстВозврата = ТекстВозврата + "
	//|	<tr>
	//|		<td valign=""top"">
	//|		<table><tr><td>
	//|		<span style = ""font-size:18; font-weight: bold; color: #9696FF"">" + ТекстПорядкаРакурса + " " + ЭлементРакурс + "</span>&nbsp;&nbsp;&nbsp;<span><span id = ""CurrentState" + ЭлементРакурс.УникальныйИдентификатор() + """ " + СтильСтатуса + ">Текущий статус: " + ТекСтатус + "</span></span><span><br></span>
	//|		<span style = ""font-size:14; color: #2D84C4"">Установить статус ракурса</span>&nbsp;&nbsp;<a name = ""SetStatus2"" id = """ + ЭлементРакурс.УникальныйИдентификатор() + """ style = ""font-size:12; font-weight: bold; color: #00BE00"" href = """">Принят</a>&nbsp;&nbsp;<a name = ""SetStatus1"" id = """ + ЭлементРакурс.УникальныйИдентификатор() + """ style = ""font-size:12; font-weight: bold; color: #FF3232"" href = """">Не принят</a>&nbsp;&nbsp;<a name = ""SetStatus0"" id = """ + ЭлементРакурс.УникальныйИдентификатор() + """ style = ""font-size:12; font-weight: bold; color: #3232FF"" href = """">Не обработан</a>
	//|		</td></tr></table>
	//|<table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"">
	//|<tr>		";
	
	КолвоСтрок = СтрокиСтруктуры.Количество();
	Если КолвоСтрок > 0 Тогда
		Если ЗначениеЗаполнено(ТекущаяКартинка) Тогда
			Для Каждого ЭлементСтруктуры Из СтрокиСтруктуры Цикл
				Если ЭлементСтруктуры.УинКартинки = ТекущаяКартинка Тогда
					ТекКартинкаСтруктура = ЭлементСтруктуры;
					Прервать;
				КонецЕсли;	
			КонецЦикла;	
		Иначе	
			ТекКартинкаСтруктура = СтрокиСтруктуры[0];
		КонецЕсли;	
		Файл = Новый Файл(ВременныйКаталог + "\" + ТекКартинкаСтруктура.УинКартинки + "." + ТекКартинкаСтруктура.Расширение);
		Если Файл.Существует()
			И ЗначениеЗаполнено(ТекКартинкаСтруктура.УинКартинки) Тогда
			ТекстВозврата = ТекстВозврата + "
			|<tr>
			|<td width = ""20%"" align=""right"">
			|
			|<table id=""PhotoOpeartions" + ТекКартинкаСтруктура.УинКартинки + "_PhOp" + """>
			|<tr>
			|<td  align=""right"">
			|<img name=ShowBt alt=""Показать изображение"" width=16 height=16 style = ""cursor: pointer"" id = """ + ТекКартинкаСтруктура.УинКартинки + "_" +  """ src = ""file:///" + СтрЗаменить(ВременныйКаталог + "\Show.png", "\", "/") + """>
			|<img name=SaveBt alt=""Сохранить как"" width=16 height=16 style = ""cursor: pointer"" id = """ + ТекКартинкаСтруктура.УинКартинки + "_" +  """ src = ""file:///" + СтрЗаменить(ВременныйКаталог + "\SaveAs.png", "\", "/") + """>
			//|<img name=RotateBt alt=""Перевернуть изображение"" width=16 height=16 style = ""cursor: pointer"" id = """ + ТекКартинкаСтруктура.УинКартинки + "_" +  """ src = ""file:///" + СтрЗаменить(ВременныйКаталог + "\Rotate.png", "\", "/") + """>
			//|<img name=TrimBt alt=""Вырезать картинку в сообщение магазину"" width=16 height=16 style = ""cursor: pointer"" id = """ + ТекКартинкаСтруктура.УинКартинки + "_" +  """ src = ""file:///" + СтрЗаменить(ВременныйКаталог + "\Trim.png", "\", "/") + """>
			|</td>
			|</tr>
			|</table>
			|
			|</td>
			|<td valign=""top"" align = ""center"" width=" + Формат(Цел(600 * МасштабФотоРакурсов/100), "ЧГ=0") + ">
			|<p></p>
			|		<img class=""cloudzoom"" name=""picture"" width=" + Формат(Цел(600 * МасштабФотоРакурсов/100), "ЧГ=0") + " height=" + Формат(Цел(600 * МасштабФотоРакурсов/100), "ЧГ=0") + " style = ""cursor: pointer"" id = """ + ТекКартинкаСтруктура.УинКартинки + "_"+ """ src = ""file:///" + СтрЗаменить(ВременныйКаталог + "\" + ТекКартинкаСтруктура.УинКартинки + "." + ТекКартинкаСтруктура.Расширение, "\", "/") + """>
			//|			zoomImage:&quot;file:///" + СтрЗаменить(ВременныйКаталог + "\" + ТекКартинкаСтруктура.УинКартинки + "." + ТекКартинкаСтруктура.Расширение, "\", "/") + "&quot;,
			//  |         zoomSizeMode: &quot;image&quot;,
			//|         tintColor:&quot;#000&quot;,
			//|         tintOpacity:0.25,
			//|         captionPosition:&quot;bottom&quot;,
			//|         maxMagnification:4,
			//|         autoInside:450"">
			|</td>
			|<td width = ""40%"" valign=""top"">
			|<table width = ""100%"">
			//|<tr>
			//|<td width=15></td>
			//|<td><span style = ""color: #2D84C4"">&nbsp;&nbsp;Комментарий</span></td>
			//|<td width=15></td>
			//|</tr>
			//|<tr>
			//|<td width=15></td>
			//|<td>
			////|" + СформироватьТэгКомментария(ТекКартинкаСтруктура.УинКартинки, ТекКартинкаСтруктура.Комментарий) + "</td>
			//|</td>
			//|<td width=15></td>
			//|</tr>
			|</table>
			|
			|</td>
			|</tr>";
		Иначе
			ТекстВозврата = ТекстВозврата + "
			|<tr>
			|<td width = ""20%""></td>
			|<td valign=""center"" align = ""center"" height = 150 style = ""font-size:24; font-weight: bold; color: #AAAAAA"">
			|Нет фото
			|</td>
			|<td width = ""40%""></td>
			|</tr>";
		КонецЕсли;
		
		//Если Файл.Существует() Тогда
		//	
		//	Если ТекКартинкаСтруктура.СтатусФото = 0 Тогда
		//		ТекСтатус = "Не обработано";
				СтильСтатуса = "style = ""font-size:14; font-weight: bold; color: #3232FF""";
		//	ИначеЕсли ТекКартинкаСтруктура.СтатусФото = 1 Тогда
		//		ТекСтатус = "Не принято";
		//		СтильСтатуса = "style = ""font-size:14; font-weight: bold; color: #FF3232""";
		//	ИначеЕсли ТекКартинкаСтруктура.СтатусФото = 2 Тогда
		//		ТекСтатус = "Принято";
		//		СтильСтатуса = "style = ""font-size:14; font-weight: bold; color: #00BE00""";
		//	КонецЕсли;
			
			ТекстВозврата = ТекстВозврата + "
			|<tr>
			|<td width = ""20%"">
			|
			|</td>
			|<td valign=""center"" align = ""left""><div style=""width=" + Формат(Цел(600 * МасштабФотоРакурсов/100), "ЧГ=0") + "; height:35px; overflow:auto;""> <span>";
			//|<span><span id = ""CurrentPhotoState" + ТекКартинкаСтруктура.УинКартинки + "_" + ЭлементРакурс.УникальныйИдентификатор() + """ " + СтильСтатуса + ">Текущий статус фото: " + ТекСтатус + "</span></span>
			//|<span style = ""font-size:12; color: #2D84C4"">Установить:</span>&nbsp;&nbsp;
			Сч=0;
			ТекТэги=Тэги.НайтиСтроки(Новый Структура("УинКартинки",ТекКартинкаСтруктура.УинКартинки));
			Для каждого Эл Из ТекТэги Цикл
				Сч=Сч+1;
			    ТекстВозврата = ТекстВозврата +"
				|<a name = ""SetPhotoStatus"+Сч+""" id = """ + ТекКартинкаСтруктура.УинКартинки + "_"  +Эл.Тэг+ """ style = ""font-size:12; color: #2D84C4"" href = """">"+"#"+Эл.Тэг+"</a>&nbsp;&nbsp;";
			КонецЦикла;   			
						    ТекстВозврата = ТекстВозврата +"
			|</span></div></td>
			|<td width = ""40%""></td>
			|</tr>";
		//КонецЕсли;	
		
		Если КолвоСтрок > 1 Тогда
			Подсказка=СтрокиСтруктуры[0].НоменклатураНаименование+" "+СтрокиСтруктуры[0].ХарактеристикаНаименование;
			ТекстВозврата = ТекстВозврата + "
			|<tr>
			|<td width = ""20%""> </td>
			//|<td width = ""600""> </td>
			|<td align = ""left"">
			|	<div style=""width=" + Формат(Цел(600 * МасштабФотоРакурсов/100), "ЧГ=0") + "; height:70px; overflow:auto;"">
			|<table name = ""PictView>"">
			|
			|<tr>
			|<td>
			|<table  title="""+Подсказка+"""  id=""" + СтрокиСтруктуры[0].УинКартинки + "_T"  + """ border=""2"" cellpadding=""0"" bordercolor=" + ?(СтрокиСтруктуры[0].УинКартинки = ТекКартинкаСтруктура.УинКартинки, "#aaaa00", "#ffffff") + " cellspacing=""0""><tr><td><img name=""smallpicture"" width=40 height=40 style = ""cursor: pointer"" id = """ + СтрокиСтруктуры[0].УинКартинки + "_" +  """ src = ""file:///" + СтрЗаменить(ВременныйКаталог + "\" + СтрокиСтруктуры[0].УинКартинки + ?(СтрокиСтруктуры[0].ТолькоМиниатюра, "thumb", "") + "." + СтрокиСтруктуры[0].Расширение, "\", "/") + """></td></tr></table></td>";
			Для н = 1 По КолвоСтрок - 1 Цикл
				ЭлементСтруктуры = СтрокиСтруктуры[н];
				Подсказка=СтрокиСтруктуры[н].НоменклатураНаименование+" "+СтрокиСтруктуры[н].ХарактеристикаНаименование;
				ТекстВозврата = ТекстВозврата + "
				|<td><table  title="""+Подсказка+"""  id=""" + ЭлементСтруктуры.УинКартинки + "_T" +  """ border=""2"" cellpadding=""0"" bordercolor=" + ?(ЭлементСтруктуры.УинКартинки = ТекКартинкаСтруктура.УинКартинки, "#aaaa00", "#ffffff") + " cellspacing=""0""><tr><td><img name=""smallpicture"" width = 40 height=40 style = ""cursor: pointer"" id = """ + ЭлементСтруктуры.УинКартинки + "_" +  """ src = ""file:///" + СтрЗаменить(ВременныйКаталог + "\" + ЭлементСтруктуры.УинКартинки + ?(ЭлементСтруктуры.ТолькоМиниатюра, "thumb", "") + "." + ЭлементСтруктуры.Расширение, "\", "/") + """></td></tr></table></td>";
			КонецЦикла;		
			
			ТекстВозврата = ТекстВозврата + "
			|</tr>
			|</div>		
			|</table>
			|</td>
			|<td width = ""40%""> </td>
			|</tr>";
			
			//пиктограммы к фото
			//Если СтрокиСтруктуры[0].СтатусФото = 2 Тогда
			//	СтатусИмя = "Accepted";
			//ИначеЕсли СтрокиСтруктуры[0].СтатусФото = 1 Тогда
			//	СтатусИмя = "Canceled";
			//ИначеЕсли СтрокиСтруктуры[0].СтатусФото = 0 Тогда
			//	СтатусИмя = "Unknown";	
			//КонецЕсли;	
			//ТекстВозврата = ТекстВозврата + "
			//|<tr>
			//|<td width = ""20%""> </td>
			//|<td align = ""left"">
			//|<table name = ""StatusPictView>"">
			//|
			//|<tr>
			//|<td>
			//|<table cellpadding=""0"" cellspacing=""0""><tr><td width=2 height=16></td><td width=45 height=16 valign=""center"" align=""center""><img name=""statuspicture"" width=16 height=16 src = ""file:///" + СтрЗаменить(ВременныйКаталог + "\" + СтатусИмя + ".png", "\", "/") + """></td></tr></table></td>";
			//Для н = 1 По КолвоСтрок - 1 Цикл
			//	ЭлементСтруктуры = СтрокиСтруктуры[н];
			//	Если ЭлементСтруктуры.СтатусФото = 2 Тогда
			//		СтатусИмя = "Accepted";
			//	ИначеЕсли ЭлементСтруктуры.СтатусФото = 1 Тогда
			//		СтатусИмя = "Canceled";
			//	ИначеЕсли ЭлементСтруктуры.СтатусФото = 0 Тогда
			//		СтатусИмя = "Unknown";	
			//	КонецЕсли;
			//	ТекстВозврата = ТекстВозврата + "
			//	|<td><table cellpadding=""0"" cellspacing=""0""><tr><td width=45 height=16 valign=""center"" align=""center""><img name=""statuspicture"" width=16 height=16 src = ""file:///" + СтрЗаменить(ВременныйКаталог + "\" + СтатусИмя + ".png", "\", "/") + """></td></tr></table></td>";
			//КонецЦикла;		
			//
			//ТекстВозврата = ТекстВозврата + "
			//|</tr>
			//|
			//|</table>
			//|</td>
			//|<td width = ""40%""> </td>
			//|</tr>";
		КонецЕсли;
		
		////вывод комментария
		//Если Файл.Существует() Тогда
		//	
		//	ТекстВозврата = ТекстВозврата + "
		//	|<tr>
		//	|<td width = ""20%""></td>
		//	|<td valign=""top"" align = ""left"">
		//	|<span style = ""color: #2D84C4"">Комментарий</span>&nbsp;&nbsp;&nbsp;<a name=""SetKomment"" id=""" + ТекКартинкаСтруктура.УинКартинки + """ style = ""font-size:11; color: #2D84C4"" href="""">Редактировать</a>
		//	|</td>
		//	|<td width = ""20%""></td>
		//	|</tr>";
		//	
		//	
		//	ТекстВозврата = ТекстВозврата + "
		//	|<tr>
		//	|<td width = ""20%""></td>
		//	|<td valign=""top"" align = ""left"">
		//	|<table id=""" + ТекКартинкаСтруктура.УинКартинки + """ border=""0"" width=""100%"">
		//	|
		//	|<tr>
		//	|<td width=""5%""></td>
		//	|<td align = ""left"" width=""90%"">" + СформироватьТэгКомментария(ТекКартинкаСтруктура.УинКартинки, ТекКартинкаСтруктура.Комментарий) + "</td>
		//	|<td width=""5%""></td>
		//	|</tr>
		//	|
		//	|</table>
		//	|</td>
		//	|<td width = ""20%""></td>
		//	|</tr>";
		//КонецЕсли;			
		
		
	КонецЕсли;		
	
	
	ТекстВозврата = ТекстВозврата + "			
	|	</tr></table></td></tr>";
	
	Возврат ТекстВозврата;
	
КонецФункции	

&НаКлиенте
Функция СформироватьТэгКомментария(УинКартинки, Комментарий)
	
	Комментарий = СтрЗаменить(Комментарий, Символы.ПС, "<br>");
	Возврат "<div name=""SetKomment"" style = ""cursor: pointer; background: #eeeee5; border: 1px dashed #abab9a; padding: 5px;	font: 8pt Tahoma; color:#2c2c2c"" id=""SpanKomment" + УинКартинки + """>" + ?(ЗначениеЗаполнено(Комментарий), СокрЛП(Комментарий), "<br><br>") + "</div>";
	
КонецФункции	

&НаКлиенте
Процедура ДокументHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	//Сообщить(Элементы.ДокументHTML.Документ.body.InnerHtml);
	
	СтандартнаяОбработка = Ложь;
	Попытка
		Если ДанныеСобытия.Element.name = "picture" Тогда
			Если ЗначениеЗаполнено(ДанныеСобытия.Element.id) Тогда
				id = СтрЗаменить(ДанныеСобытия.Element.id, "_", Символы.ПС);
				СтруктураСобытия = Новый Структура("УинКартинка", СтрПолучитьСтроку(id, 1));
				Парам=Новый Структура("УинЗаписи",СтруктураСобытия.УинКартинка);
				ОткрытьФорму("Обработка.ЛентаКартинок.Форма.ФормаВыбора",Парам,ЭтаФорма);
				//Файлы = НайтиФайлы(ВременныйКаталог, СтруктураСобытия.УинКартинка + ".*");
				//Если Файлы.Количество() > 0 Тогда
				//	//Стр = Новый Структура("КартинкаСсылка");
				//	//Стр.Вставить("КартинкаСсылка", ПоместитьВоВременноеХранилище(Новый Картинка(Файлы[0].ПолноеИмя), ЭтаФорма.УникальныйИдентификатор)); 
				//	//Форма = ПолучитьФорму("ОбщаяФорма.Фото", Стр);
				//	//ОткрытьФорму(Форма);
				//	ОткрытьЗначение(Новый Картинка(Файлы[0].ПолноеИмя));
				//КонецЕсли;
				
				//РакурсСсылка = ПолучитьСсылкуНаРакурс(СтруктураСобытия.УинРакурса);
			//	СтрокиПоРакурсу = ТаблицаСтруктурыФайлов;
			//	СледКартинка = "";
			//	Для н = 0 По СтрокиПоРакурсу.Количество() - 1 Цикл
			//		Если СтрокиПоРакурсу[н].УинКартинки = СтруктураСобытия.УинКартинка
			//			И н < СтрокиПоРакурсу.Количество() - 1 Тогда
			//			СтрокиТекКартинка = ТекКартинкиРакурсов;
			//			Если СтрокиТекКартинка.Количество() = 0 Тогда
			//				СтрокаТекКартинка = ТекКартинкиРакурсов.Добавить();
			//				//СтрокаТекКартинка.УинРакурса = СтруктураСобытия.УинРакурса;
			//			Иначе	
			//				СтрокаТекКартинка = СтрокиТекКартинка[0];
			//			КонецЕсли;	
			//			СтрокаТекКартинка.УинКартинки = СтрокиПоРакурсу[н + 1].УинКартинки;
			//			
			//			ФайлыКартинки = НайтиФайлы(ВременныйКаталог, СтрокаТекКартинка.УинКартинки + ".*");
			//			//Если ФайлыКартинки.Количество() = 0 Тогда
			//			//	СтрФайл = СкачатьПолнуюКартинкуССервера(СтрокаТекКартинка.УинКартинки);
			//			//	СтрФайл.Картинка.Записать(ВременныйКаталог + "\" + СтрокаТекКартинка.УинКартинки + "." + СтрФайл.Расширение);
			//			//КонецЕсли;
			//		КонецЕсли;	
			//	КонецЦикла;	
			//	
			//	Для Каждого Тэг Из Элементы.ДокументHTML.Документ.getElementsByTagName("table") Цикл
			//		Если Найти(Тэг.id, "Rakurs") > 0 Тогда
			//			ТекФотоПоРакурсу = ТекКартинкиРакурсов;
			//			Тэг.parentElement.innerHTML = "<table id = ""Rakurs" +""" border=""1"" cellpadding=""0"" bordercolor=#9696FF cellspacing=""0"" width=""100%"">"
			//			+ СформироватьТэгиПоРакурсу( ?(ТекФотоПоРакурсу.Количество() > 0, ТекФотоПоРакурсу[0].УинКартинки, ""))
			//			+ "</table>";
			//		КонецЕсли;	
			//	КонецЦикла;
			КонецЕсли;	
		ИначеЕсли ДанныеСобытия.Element.name = "smallpicture" Тогда
			id = СтрЗаменить(ДанныеСобытия.Element.id, "_", Символы.ПС);
			СтруктураСобытия = Новый Структура("УинКартинка", СтрПолучитьСтроку(id, 1));
			ФайлыКартинки = НайтиФайлы(ВременныйКаталог, СтруктураСобытия.УинКартинка + ".*");
			//Если ФайлыКартинки.Количество() = 0 Тогда
			//	СтрФайл = СкачатьПолнуюКартинкуССервера(СтруктураСобытия.УинКартинка);
			//	СтрФайл.Картинка.Записать(ВременныйКаталог + "\" + СтруктураСобытия.УинКартинка + "." + СтрФайл.Расширение);
			//КонецЕсли;	
			Для Каждого Тэг Из Элементы.ДокументHTML.Документ.getElementsByTagName("table") Цикл
				Если Найти(Тэг.id, "Rakurs")  > 0 Тогда
					Тэг.parentElement.innerHTML = "<table id = ""Rakurs"+""" border=""1"" cellpadding=""0"" bordercolor=#9696FF cellspacing=""0"" width=""100%"">"
					 + СформироватьТэгиПоРакурсу( СтруктураСобытия.УинКартинка)
					 + "</table>";
					 
					СтрокиТекКартинки = ТекКартинкиРакурсов;
					Если СтрокиТекКартинки.Количество() = 0 Тогда
						СтрокаТекКартинки = ТекКартинкиРакурсов.Добавить();
						//СтрокаТекКартинки.УинРакурса = СтруктураСобытия.УинРакурса;
					Иначе
						СтрокаТекКартинки = СтрокиТекКартинки[0];
					КонецЕсли;	 
					СтрокаТекКартинки.УинКартинки = СтруктураСобытия.УинКартинка;
				КонецЕсли;	
			КонецЦикла;
			
		ИначеЕсли ДанныеСобытия.Element.name = "SetKomment" Тогда
			Если НЕ МожетРедактировать Тогда
				Предупреждение("У вас нет прав редактирования");
			Иначе	
				Id = СтрЗаменить(ДанныеСобытия.Element.id, "SpanKomment", "");
				СтрокиФото = ТаблицаСтруктурыФайлов.НайтиСтроки(Новый Структура("УинКартинки", Id));
				Если СтрокиФото.Количество() > 0 Тогда
					СтрокаСФото = СтрокиФото[0];
					Коммент = СтрЗаменить(СтрокаСФото.Комментарий, "<br>", Символы.ПС);
					Если ВвестиСтроку(Коммент, "Введите комментарий",, Истина) Тогда
						СтрокаСФото.Комментарий = Коммент;
						ЗаписатьКомментарийВФото(Id, Коммент);
					КонецЕсли;
					Для Каждого Тэг Из Элементы.ДокументHTML.Документ.getElementsByTagName("div") Цикл
						Если Тэг.id = "SpanKomment" + Id Тогда
							Тэг.parentElement.innerHtml = СформироватьТэгКомментария(Id, Коммент);
						КонецЕсли;	
					КонецЦикла;	
				КонецЕсли;	
			КонецЕсли;	
		//ИначеЕсли Лев(ДанныеСобытия.Element.name, СтрДлина("SetStatus")) = "SetStatus" Тогда
		//	Если НЕ МожетРедактировать Тогда
		//		Предупреждение("У вас нет прав редактирования");
		//	Иначе
		//		СтатусКУстановке = СтрЗаменить(ДанныеСобытия.Element.name, "SetStatus", "");
		//		Если СтатусКУстановке = "0" Тогда
		//			ТекСтатус = "Не обработан";
		//			СтильСтатуса = "style = ""font-size:18; font-weight: bold; color: #3232FF""";
		//		ИначеЕсли СтатусКУстановке = "1" Тогда
		//			ТекСтатус = "Не принят";
		//			СтильСтатуса = "style = ""font-size:18; font-weight: bold; color: #FF3232""";
		//		ИначеЕсли СтатусКУстановке = "2" Тогда
		//			ТекСтатус = "Принят";
		//			СтильСтатуса = "style = ""font-size:18; font-weight: bold; color: #00BE00""";
		//		КонецЕсли;
		//		
		//		Для Каждого Тэг Из Элементы.ДокументHTML.Документ.getElementsByTagName("span") Цикл
		//			Если Найти(Тэг.id, "CurrentState" + ДанныеСобытия.Element.Id) > 0 Тогда
		//				//Тэг.parentElement.innerHTML = СформироватьТэгиПоРакурсу(ПолучитьСсылкуНаРакурс(СтруктураСобытия.УинРакурса), СтруктураСобытия.УинКартинка);
		//				Тэг.parentElement.innerHTML = "<span id = ""CurrentState" + ДанныеСобытия.Element.id + """ " + СтильСтатуса + ">Текущий статус: " + ТекСтатус + "</span>";
		//				//ТекРакурс = ПолучитьСсылкуНаРакурс(ДанныеСобытия.Element.id);
		//				СтрокиРакурс = Объект.Ракурсы.НайтиСтроки(Новый Структура("Ракурс", ТекРакурс));
		//				Если СтрокиРакурс.Количество() > 0 Тогда
		//					СтрокаРакурс = СтрокиРакурс[0];
		//				Иначе
		//					СтрокаРакурс = Объект.Ракурсы.Добавить();
		//					СтрокаРакурс.Ракурс = ТекРакурс;
		//				КонецЕсли;
		//				Если СтатусКУстановке = "0" Тогда
		//					СтрокаРакурс.СтатусРакурса = ПредопределенноеЗначение("Перечисление.СтатусыРакурсов.ПустаяСсылка");
		//				ИначеЕсли СтатусКУстановке = "1" Тогда
		//					СтрокаРакурс.СтатусРакурса = ПредопределенноеЗначение("Перечисление.СтатусыРакурсов.Непринято");
		//					СтрокиСОтказами = Объект.ОтказыПоРакурсам.НайтиСтроки(Новый Структура("Ракурс", РакурсСсылка));
		//					Если СтрокиСОтказами.Количество() = 0 Тогда
		//						СтрокаСОтказом = Объект.ОтказыПоРакурсам.Добавить();
		//						СтрокаСОтказом.Ракурс = ТекРакурс;
		//					Иначе
		//						СтрокаСОтказом = СтрокиСОтказами[0];
		//					КонецЕсли;
		//					Коэф = "";
		//					Если СтрокаСОтказом.Количество + 1 >= 2 Тогда
		//						Коэф = "1/3";
		//					ИначеЕсли СтрокаСОтказом.Количество + 1 >= 1 Тогда
		//						Коэф = "2/3";	
		//					КонецЕсли;	
		//					ТекстВопроса = "Учесть отказ по ракурсу в расчете баллов? Новый коэффициент для расчета балла будет " + Коэф;
		//					Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
		//					Если Ответ = КодВозвратаДиалога.Да Тогда
		//						СтрокаСОтказом.Количество = СтрокаСОтказом.Количество + 1;
		//					КонецЕсли;	
		//				ИначеЕсли СтатусКУстановке = "2" Тогда
		//					СтрокаРакурс.СтатусРакурса = ПредопределенноеЗначение("Перечисление.СтатусыРакурсов.Принято");	
		//				КонецЕсли;
		//				СтрокиСтатусРакурса = ТаблицаСтруктурыФайлов.НайтиСтроки(Новый Структура("Ракурс", ТекРакурс));
		//				Для Каждого СтрокаРакурс Из СтрокиСтатусРакурса Цикл
		//					СтрокаРакурс.СтатусРакурса = Число(СтатусКУстановке);
		//				КонецЦикла;	
		//				//ФотоНеОбработанные = ТаблицаСтруктурыФайлов.НайтиСтроки(Новый Структура("Ракурс, СтатусФото", ТекРакурс, 0));
		//				ФотоНеОбработанные = ТаблицаСтруктурыФайлов.НайтиСтроки(Новый Структура("Ракурс", ТекРакурс));
		//				Если ФотоНеОбработанные.Количество() > 0 Тогда
		//					//Ответ = Вопрос("Проставить всем не обработанным фото ракурса такой же статус?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
		//					//Если Ответ = КодВозвратаДиалога.Да Тогда
		//						Для Каждого СтрокаФото Из ФотоНеОбработанные Цикл
		//							СтрокаФото.СтатусФото = СтатусКУстановке;
		//							ЗаписатьСтатусВФото(СтрокаФото.УинКартинки, СтатусКУстановке);
		//						КонецЦикла;
		//						Для Каждого Тэг Из Элементы.ДокументHTML.Документ.getElementsByTagName("table") Цикл
		//							Если Найти(Тэг.id, "Rakurs" + ДанныеСобытия.Element.id) > 0 Тогда
		//								ТекФотоПоРакурсу = ТекКартинкиРакурсов.НайтиСтроки(Новый Структура("УинРакурса", ДанныеСобытия.Element.id));
		//								Тэг.parentElement.innerHTML = "<table id = ""Rakurs" + ДанныеСобытия.Element.id + """ border=""1"" cellpadding=""0"" bordercolor=#9696FF cellspacing=""0"" width=""100%"">"
		//									+ СформироватьТэгиПоРакурсу( ?(ТекФотоПоРакурсу.Количество() > 0, ТекФотоПоРакурсу[0].УинКартинки, ""))
		//									+ "</table>";
		//							КонецЕсли;	
		//						КонецЦикла;
		//					//КонецЕсли;	
		//				КонецЕсли;
		//				ЭтаФорма.Модифицированность = Истина;
		//			КонецЕсли;	
		//		КонецЦикла;
		//		ПересчитатьБаллыПоДокументу();
		//		Объект.Проверяющий = глЗначениеПеременной("глТекущийПользователь");
		//	КонецЕсли;	
	ИначеЕсли Лев(ДанныеСобытия.Element.name, СтрДлина("SetPhotoStatus")) = "SetPhotoStatus" Тогда
		
		//	Если НЕ МожетРедактировать Тогда
		//		Предупреждение("У вас нет прав редактирования");
		//	Иначе
		//		СтатусКУстановке = СтрЗаменить(ДанныеСобытия.Element.name, "SetPhotoStatus", "");
				Модифицированность = Истина;
				
				id = СтрЗаменить(ДанныеСобытия.Element.id, "_", Символы.ПС);
				Искать=СтрПолучитьСтроку(id, 2);
				ИскатьПриИзменении(Неопределено);
				ОбновитьЛенту(Неопределено);
		//		СтруктураСобытия = Новый Структура("УинКартинка, УинРакурса", СтрПолучитьСтроку(id, 1), СтрПолучитьСтроку(id, 2));
		//		СтрокиФото = ТаблицаСтруктурыФайлов.НайтиСтроки(Новый Структура("УинКартинки", СтруктураСобытия.УинКартинка));
		//		Если СтрокиФото.Количество() > 0 Тогда
		//			СтрокиФото[0].СтатусФото = Число(СтатусКУстановке);
		//		КонецЕсли;
		//		ЗаписатьСтатусВФото(СтруктураСобытия.УинКартинка, СтатусКУстановке);
		//		РакурсСсылка = ПолучитьСсылкуНаРакурс(СтруктураСобытия.УинРакурса);
		//		СтрокиПоРакурсу = ТаблицаСтруктурыФайлов.НайтиСтроки(Новый Структура("Ракурс", РакурсСсылка));
		//		ЕстьНеПринятые = Ложь;
		//		ВсеПриняты = Истина;
		//		Для Каждого СтрокаПоРакурсу Из СтрокиПоРакурсу Цикл
		//			ЕстьНеПринятые = Макс(ЕстьНеПринятые, СтрокаПоРакурсу.СтатусФото = 1);
		//			ВсеПриняты = Мин(ВсеПриняты, СтрокаПоРакурсу.СтатусФото = 2);
		//		КонецЦикла;	
		//		Если ВсеПриняты И Не ЕстьНеПринятые Тогда
		//			//СтатусПринято = ПредопределенноеЗначение("Перечисление.СтатусыРакурсов.Принято");
		//			Для Каждого СтрокаПоРакурсу Из СтрокиПоРакурсу Цикл
		//				СтрокаПоРакурсу.СтатусРакурса = 2;
		//			КонецЦикла;
		//			СтрокиРакурс = Объект.Ракурсы.НайтиСтроки(Новый Структура("Ракурс", РакурсСсылка));
		//			Если СтрокиРакурс.Количество() > 0 Тогда
		//				СтрокаРакурс = СтрокиРакурс[0];
		//			Иначе
		//				СтрокаРакурс = Объект.Ракурсы.Добавить();
		//				СтрокаРакурс.Ракурс = РакурсСсылка;
		//			КонецЕсли;
		//			СтрокаРакурс.СтатусРакурса = ПредопределенноеЗначение("Перечисление.СтатусыРакурсов.Принято");
		//		ИначеЕсли ЕстьНеПринятые Тогда
		//			//СтатусНеПринято = ПредопределенноеЗначение("Перечисление.СтатусыРакурсов.Непринято");
		//			Для Каждого СтрокаПоРакурсу Из СтрокиПоРакурсу Цикл
		//				СтрокаПоРакурсу.СтатусРакурса = 1;
		//			КонецЦикла;
		//			СтрокиРакурс = Объект.Ракурсы.НайтиСтроки(Новый Структура("Ракурс", РакурсСсылка));
		//			Если СтрокиРакурс.Количество() > 0 Тогда
		//				СтрокаРакурс = СтрокиРакурс[0];
		//			Иначе
		//				СтрокаРакурс = Объект.Ракурсы.Добавить();
		//				СтрокаРакурс.Ракурс = РакурсСсылка;
		//			КонецЕсли;
		//			СтрокаРакурс.СтатусРакурса = ПредопределенноеЗначение("Перечисление.СтатусыРакурсов.Непринято");
		//			СтрокиСОтказами = Объект.ОтказыПоРакурсам.НайтиСтроки(Новый Структура("Ракурс", РакурсСсылка));
		//			Если СтрокиСОтказами.Количество() = 0 Тогда
		//				СтрокаСОтказом = Объект.ОтказыПоРакурсам.Добавить();
		//				СтрокаСОтказом.Ракурс = РакурсСсылка;
		//			Иначе
		//				СтрокаСОтказом = СтрокиСОтказами[0];
		//			КонецЕсли;
		//			
		//			Коммент = "";
		//			Если СтрокиФото.Количество() > 0 Тогда
		//				СтрокаСФото = СтрокиФото[0];
		//				Коммент = СтрЗаменить(СтрокаСФото.Комментарий, "<br>", Символы.ПС);
		//			КонецЕсли;
		//			
		//			Результат = ОткрытьФормуМодально("Документ.МП_ЗадачаМагазина.Форма.ФормаКомментарияОтказа", Новый Структура("Комментарий, КолвоОтказов", Коммент, СтрокаСОтказом.Количество));
		//			
		//			Если Результат <> Неопределено Тогда
		//				СтрокаСОтказом.Количество = Результат.КолвоОтказов;
		//				СтрокаСФото.Комментарий = Результат.Комментарий;
		//				ЗаписатьКомментарийВФото(СтруктураСобытия.УинКартинка, Результат.Комментарий);
		//			КонецЕсли;	
		//		КонецЕсли;
		//		
		//		СледКартинка = "";
		//		Для н = 0 По СтрокиПоРакурсу.Количество() - 1 Цикл
		//			Если СтрокиПоРакурсу[н].УинКартинки = СтруктураСобытия.УинКартинка
		//				И н < СтрокиПоРакурсу.Количество() - 1 Тогда
		//				СтрокиТекКартинка = ТекКартинкиРакурсов.НайтиСтроки(Новый Структура("УинРакурса", СтруктураСобытия.УинРакурса));
		//				Если СтрокиТекКартинка.Количество() = 0 Тогда
		//					СтрокаТекКартинка = ТекКартинкиРакурсов.Добавить();
		//					СтрокаТекКартинка.УинРакурса = СтруктураСобытия.УинРакурса;
		//				Иначе	
		//					СтрокаТекКартинка = СтрокиТекКартинка[0];
		//				КонецЕсли;	
		//				СтрокаТекКартинка.УинКартинки = СтрокиПоРакурсу[н + 1].УинКартинки;
		//				
		//				ФайлыКартинки = НайтиФайлы(ВременныйКаталог, СтрокаТекКартинка.УинКартинки + ".*");
		//				Если ФайлыКартинки.Количество() = 0 Тогда
		//					СтрФайл = СкачатьПолнуюКартинкуССервера(СтрокаТекКартинка.УинКартинки);
		//					СтрФайл.Картинка.Записать(ВременныйКаталог + "\" + СтрокаТекКартинка.УинКартинки + "." + СтрФайл.Расширение);
		//				КонецЕсли;
		//			КонецЕсли;	
		//		КонецЦикла;	
		//		
		//		Для Каждого Тэг Из Элементы.ДокументHTML.Документ.getElementsByTagName("table") Цикл
		//			Если Найти(Тэг.id, "Rakurs" + СтруктураСобытия.УинРакурса) > 0 Тогда
		//				ТекФотоПоРакурсу = ТекКартинкиРакурсов.НайтиСтроки(Новый Структура("УинРакурса", СтруктураСобытия.УинРакурса));
		//				Тэг.parentElement.innerHTML = "<table id = ""Rakurs" + СтруктураСобытия.УинРакурса + """ border=""1"" cellpadding=""0"" bordercolor=#9696FF cellspacing=""0"" width=""100%"">"
		//				+ СформироватьТэгиПоРакурсу( ?(ТекФотоПоРакурсу.Количество() > 0, ТекФотоПоРакурсу[0].УинКартинки, ""))
		//				+ "</table>";
		//			КонецЕсли;	
		//		КонецЦикла;
		//		
		//		ПересчитатьБаллыПоДокументу();
		//		Объект.Проверяющий = глЗначениеПеременной("глТекущийПользователь");
		//	КонецЕсли;	
			
		ИначеЕсли ДанныеСобытия.Element.name = "ShowBt" Тогда
			
			id = СтрЗаменить(ДанныеСобытия.Element.id, "_", Символы.ПС);
			СтруктураСобытия = Новый Структура("УинКартинка", СтрПолучитьСтроку(id, 1));
			ФайлыКартинки = НайтиФайлы(ВременныйКаталог, СтруктураСобытия.УинКартинка + ".*");
			Если ФайлыКартинки.Количество() > 0 Тогда
				ОткрытьЗначение(Новый Картинка(ФайлыКартинки[0].ПолноеИмя));
			КонецЕсли;
			
		ИначеЕсли ДанныеСобытия.Element.name = "SaveBt" Тогда
			
			id = СтрЗаменить(ДанныеСобытия.Element.id, "_", Символы.ПС);
			СтруктураСобытия = Новый Структура("УинКартинка", СтрПолучитьСтроку(id, 1));
			ФайлыКартинки = НайтиФайлы(ВременныйКаталог, СтруктураСобытия.УинКартинка + ".*");
			Если ФайлыКартинки.Количество() > 0 Тогда
				ДиалогСохранения = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
				Если ДиалогСохранения.Выбрать() Тогда
					КопироватьФайл(ФайлыКартинки[0].ПолноеИмя, ДиалогСохранения.ПолноеИмяФайла + ФайлыКартинки[0].Расширение);
				КонецЕсли;
			КонецЕсли;
			
		//ИначеЕсли ДанныеСобытия.Element.name = "RotateBt" Тогда
		//	
		//	id = СтрЗаменить(ДанныеСобытия.Element.id, "_", Символы.ПС);
		//	СтруктураСобытия = Новый Структура("УинКартинка,", СтрПолучитьСтроку(id, 1));
		//	ФайлыКартинки = НайтиФайлы(ВременныйКаталог, СтруктураСобытия.УинКартинка + ".*");
		//	Если ФайлыКартинки.Количество() > 0 Тогда
		//		Список = Новый СписокЗначений();
		//		Список.Добавить(1, "На 90 градусов против часовой стрелки");
		//		Список.Добавить(2, "На 90 градусов по часовой стрелке");
		//		Список.Добавить(3, "На 180 градусов");
		//		Выбранное = Список.ВыбратьЭлемент("Выберите угол поворота");
		//		Если Выбранное <> Неопределено Тогда
		//			ИмяФайла = ФайлыКартинки[0].ПолноеИмя;
		//			КомпонентаДопГрафика.ПовернутьИзображениеВФайле(ИмяФайла, Выбранное.Значение);
		//			
		//			АдресВХранилище = ПоместитьВоВременноеХранилище(Новый Картинка(ИмяФайла), ЭтаФорма.УникальныйИдентификатор);
		//			ЗаписатьПеревернутоеИзображениеНаСервер(СтруктураСобытия.УинКартинка, АдресВХранилище);
		//			
		//			Для Каждого Тэг Из Элементы.ДокументHTML.Документ.getElementsByTagName("table") Цикл
		//				Если Найти(Тэг.id, "Rakurs") > 0 Тогда
		//					Тэг.parentElement.innerHTML = "<table id = ""Rakurs" + """ border=""1"" cellpadding=""0"" bordercolor=#9696FF cellspacing=""0"" width=""100%"">"
		//					 + СформироватьТэгиПоРакурсу(СтруктураСобытия.УинКартинка)
		//					 + "</table>";
		//				КонецЕсли;	
		//			КонецЦикла;
		//			
		//		КонецЕсли;	
			КонецЕсли;
			
		//ИначеЕсли ДанныеСобытия.Element.name = "TrimBt" Тогда
		//	
		//	id = СтрЗаменить(ДанныеСобытия.Element.id, "_", Символы.ПС);
		//	СтруктураСобытия = Новый Структура("УинКартинка", СтрПолучитьСтроку(id, 1));
		//	ФайлыКартинки = НайтиФайлы(ВременныйКаталог, СтруктураСобытия.УинКартинка + ".*");
		//	Если ФайлыКартинки.Количество() > 0 Тогда
		//		ИмяФайла = ФайлыКартинки[0].ПолноеИмя;
		//		КартинкаТекст = КомпонентаДопГрафика.ВырезатьЧастьИзображения(ИмяФайла);
		//		Если ЗначениеЗаполнено(КартинкаТекст) Тогда
		//			КартинкаВырезанная = КартинкаВДД(КартинкаТекст);
		//			Коммент = "";
		//			СтрокиФото = ТаблицаСтруктурыФайлов.НайтиСтроки(Новый Структура("УинКартинки", СтруктураСобытия.УинКартинка));
		//			Если СтрокиФото.Количество() > 0 Тогда
		//				СтрокаСФото = СтрокиФото[0];
		//				Коммент = СтрЗаменить(СтрокаСФото.Комментарий, "<br>", Символы.ПС);
		//			КонецЕсли;
		//			
		//			СтруктураСообщения = ПолучитьСтруктуруДляСообщенияМОС(СтруктураСобытия.УинРакурса, Объект.Магазин, КартинкаВырезанная, Коммент);
		//			
		//			ФормаСообщения = ПолучитьФорму("Документ.СообщениеМОС.Форма.ФормаСообщенияЦО", Новый Структура("ФД", СтруктураСообщения.ФормДокумент), ЭтаФорма);
		//			
		//			ЗаполнитьЗначенияСвойств(ФормаСообщения.Объект, СтруктураСообщения);
		//			ФормаСообщения.Объект.СтруктурныеЕдиницы.Очистить();
		//			СтрокаТЧ1 = ФормаСообщения.Объект.СтруктурныеЕдиницы.Добавить();
		//			СтрокаТЧ1.СтруктурнаяЕдиница = Объект.Магазин;
		//			СтрокаТЧ1.СтаршийСмены = СтруктураСообщения.СтаршийСмены;
		//			ФормаСообщения.СписокМагазинов.Очистить();
		//			ФормаСообщения.СписокМагазинов.Добавить(Объект.Магазин, Строка(Объект.Магазин), Истина);
		//			ФормаСообщения.Объект.ФорматированиеТекста = Истина;
		//			ФормаСообщения.Открыть();
		//		КонецЕсли;	
		//	КонецЕсли;	
			
		//КонецЕсли;	
	Исключение
	КонецПопытки;
	
	//Сообщить("Разрыв");
	//Сообщить(Элементы.ДокументHTML.Документ.body.InnerHtml);
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьКомментарийВФото(УинФото, Коммент)
	
		
КонецПроцедуры	

&НаСервере
Процедура ОбновитьЛентуСервер()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 20
		|	ПрикрепленныеФотоКОбъектам.Номенклатура,
		|	ПрикрепленныеФотоКОбъектам.Характеристика,
		|	ПрикрепленныеФотоКОбъектам.Объект,
		|	ПрикрепленныеФотоКОбъектам.ТипЗаписи,
		|	ПрикрепленныеФотоКОбъектам.УинЗаписи,
		|	ПрикрепленныеФотоКОбъектам.ОтносительноеИмяФайла,
		|	ПрикрепленныеФотоКОбъектам.ДатаДобавления КАК ДатаДобавления,
		|	ПрикрепленныеФотоКОбъектам.Расширение,
		|	ПрикрепленныеФотоКОбъектам.ТипОперацииМагазина,
		|	ПрикрепленныеФотоКОбъектам.ВАрхиве,
		|	ПрикрепленныеФотоКОбъектам.СтруктурнаяЕдиница,
		|	ВЫРАЗИТЬ(ПрикрепленныеФотоКОбъектам.Текст КАК СТРОКА(300)) КАК Текст
		|ИЗ
		|	РегистрСведений.ПрикрепленныеФотоКОбъектам КАК ПрикрепленныеФотоКОбъектам
		|ГДЕ
		|	ПрикрепленныеФотоКОбъектам.ВАрхиве = ЛОЖЬ
		|	И НЕ ПрикрепленныеФотоКОбъектам.УинЗаписи В (&МассивУин)
		|	И (ПрикрепленныеФотоКОбъектам.Номенклатура.Наименование ПОДОБНО &Наименование
		|			ИЛИ ПрикрепленныеФотоКОбъектам.Характеристика.Наименование ПОДОБНО &Наименование
		|			ИЛИ ПрикрепленныеФотоКОбъектам.СтруктурнаяЕдиница.Наименование ПОДОБНО &Наименование
		|			ИЛИ ВЫРАЗИТЬ(ПрикрепленныеФотоКОбъектам.Текст КАК СТРОКА(300)) ПОДОБНО &Наименование
		|			ИЛИ &Наименование = """")
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаДобавления УБЫВ";
    Запрос.УстановитьПараметр("МассивУин",ТаблицаСтруктурыФайлов.Выгрузить().ВыгрузитьКолонку("УИНКартинки"));
    Запрос.УстановитьПараметр("Наименование","%"+СокрЛП(Искать)+"%");
	Результат = Запрос.Выполнить();
	
	ТЗРезультат = Результат.Выгрузить();
	Струк=Новый Структура("ТЗ",ТЗРезультат);
	КМ=Новый КомпоновщикМакетаКомпоновкиДанных;
	Настройки=Отчеты.ОтчетДляЛентыКартинок.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных").НастройкиПоУмолчанию;
    Если ЗначениеЗаполнено(Адрес) Тогда
		Табл=ПолучитьИзВременногоХранилища(Адрес);
		КолСтр=Настройки.Отбор.Элементы.Количество();
		Для Сч=0 По КолСтр-1 Цикл
		    Настройки.Отбор.Элементы.Удалить(КолСтр-1-Сч);
		КонецЦикла;
		
		Для каждого отб Из  Табл Цикл
			отб1=Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЗаполнитьЗначенияСвойств(отб1,отб);
		КонецЦикла;
	КонецЕсли; 
	
	
	МакетКомп=КМ.Выполнить(Отчеты.ОтчетДляЛентыКартинок.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных"),Настройки, , ,
	Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ПроцКД=Новый ПроцессорКомпоновкиДанных;
	ПроцКД.Инициализировать(МакетКомп,Струк);
	ПроцВыв=Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ТЗРезультат=Новый ТаблицаЗначений;
	ПроцВыв.УстановитьОбъект(ТЗРезультат);
	
	ПроцВыв.НачатьВывод();
	Пока Истина Цикл
		ЭлементРезультатаКомпоновкиДанных = 
		ПроцКД.Следующий();
		Если ЭлементРезультатаКомпоновкиДанных = Неопределено Тогда
			Прервать;
		КонецЕсли;
		ПроцВыв.ВывестиЭлемент(ЭлементРезультатаКомпоновкиДанных);
	КонецЦикла;
	
	ПроцВыв.ЗакончитьВывод();	 
	
	
	Элементы.ДобавитьЕще.Видимость=ТЗРезультат.Количество()>0 или ТаблицаСтруктурыФайлов.Количество()>0;
	ФлНачало=Истина;
	ПервыйПроход = Истина;
	БылоДобавлениеПустого = Ложь;

	Для Каждого ВыборкаДетальныеЗаписи из ТЗРезультат Цикл
		ИдентификаторЭлементаФормы=ИдентификаторЭлементаФормы+1;

		УинКартинки = Строка(ВыборкаДетальныеЗаписи.УИНЗаписи);
		
		
		ПолноеИмяФайла = "";
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ОтносительноеИмяФайла) Тогда
			Если Лев(ВыборкаДетальныеЗаписи.ОтносительноеИмяФайла,2)="\\" Тогда
				КаталогКЗаписи="";
			Иначе
				КаталогКЗаписи = Константы.КаталогХраненияФайловКартинок.Получить();
				Если Прав(КаталогКЗаписи, 1) <> "\" Тогда
					КаталогКЗаписи = КаталогКЗаписи + "\";
				КонецЕсли;	
			КонецЕсли; 	
			ПолноеИмяФайла = КаталогКЗаписи + ВыборкаДетальныеЗаписи.ОтносительноеИмяФайла;
			
			//ПолноеИмяФайла = КаталогФотографий + Выборка.ОтносительноеИмяФайла;
			Файл = Новый Файл(ПолноеИмяФайла);
			РасширениеФайла = Сред(Файл.Расширение, 2);
			Если НЕ ПервыйПроход Тогда
				ПолноеИмяФайла = Файл.Путь + Файл.ИмяБезРасширения + "thumb." + РасширениеФайла;
				ФайлМиниатюра = Новый Файл(ПолноеИмяФайла);
				Если НЕ ФайлМиниатюра.Существует() Тогда
					ПолноеИмяФайла = Файл.Путь + Файл.ИмяБезРасширения + "." + РасширениеФайла;
				КонецЕсли;	
			КонецЕсли;	
			
			Файл = Новый Файл(ПолноеИмяФайла);
			
			Если Файл.Существует()
				И Файл.Размер() > 0 Тогда
				СтруктураЗаписи = ТаблицаСтруктурыФайлов.Добавить();
				СтруктураЗаписи.УинКартинки = УинКартинки;
				
				Если ЗначениеЗаполнено(РасширениеФайла) Тогда
					//Если ПервыйПроход Тогда
						СтруктураЗаписи.ТолькоМиниатюра = Ложь;
					//Иначе
					//	СтруктураЗаписи.ТолькоМиниатюра = Истина;
					//КонецЕсли;	
					
					Попытка
						Картинка = Новый Картинка(ПолноеИмяФайла);
						СтруктураЗаписи.АдресВХранилище = ПоместитьВоВременноеХранилище(Картинка,ЭтаФорма.УникальныйИдентификатор);
						СтруктураЗаписи.Расширение = РасширениеФайла;
						ПервыйПроход = Ложь;
					Исключение
					КонецПопытки;
					СтруктураЗаписи.Номенклатура=ВыборкаДетальныеЗаписи.Номенклатура;
					СтруктураЗаписи.Характеристика=ВыборкаДетальныеЗаписи.Характеристика;
					СтруктураЗаписи.НоменклатураНаименование=ВыборкаДетальныеЗаписи.Номенклатура.Наименование;
					СтруктураЗаписи.ХарактеристикаНаименование=ВыборкаДетальныеЗаписи.Характеристика.Наименование;
					
					МассивТэгов=РазложитьСтрокуВМассивПодстрок(ВыборкаДетальныеЗаписи.Текст);
					Если МассивТэгов.Найти(Строка(ВыборкаДетальныеЗаписи.Объект))=Неопределено и ЗначениеЗаполнено(Строка(ВыборкаДетальныеЗаписи.Объект)) И НЕ ТипЗнч(ВыборкаДетальныеЗаписи.Объект)=Тип("Строка") Тогда
						МассивТэгов.Вставить(0,Строка(ВыборкаДетальныеЗаписи.Объект));
					КонецЕсли;
					Если МассивТэгов.Найти(ВыборкаДетальныеЗаписи.Характеристика.Наименование)=Неопределено и ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Характеристика.Наименование) Тогда
						МассивТэгов.Вставить(0,ВыборкаДетальныеЗаписи.Характеристика.Наименование);
					КонецЕсли;
					Если МассивТэгов.Найти(ВыборкаДетальныеЗаписи.Номенклатура.Наименование)=Неопределено и ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Номенклатура.Наименование) Тогда
						МассивТэгов.Вставить(0,ВыборкаДетальныеЗаписи.Номенклатура.Наименование);
					КонецЕсли;
					Для каждого Эл Из МассивТэгов Цикл
						СтрНов=Тэги.Добавить();
						СтрНов.УинКартинки=УинКартинки;
						СтрНов.Тэг=Эл;
					КонецЦикла;  
				КонецЕсли;
			Иначе
				//Если НЕ БылоДобавлениеПустого Тогда
				//	СтруктураЗаписи = ТаблицаСтруктурыФайлов.Добавить();
				//	БылоДобавлениеПустого = Истина;
				//Иначе
				//	Продолжить;
				//КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция РазложитьСтрокуВМассивПодстрок(Знач Стр) Экспорт 
	
	МассивСтрок = Новый Массив(); 
	Пока Истина Цикл 
		Поз = Найти(Стр,"#"); 
		Если Поз=0 Тогда 
			//МассивСтрок.Добавить(Стр); 
			Возврат МассивСтрок; 
		КонецЕсли;
		Стр=Сред(Стр,Поз+1);
		Поз1 = Найти(Стр,"#");
		Поз2 = Найти(Стр," ");
		Если Поз1=0 Тогда
			Поз=Поз2;
		ИначеЕсли Поз2=0 Тогда
			Поз=Поз1;
		Иначе
			Поз=Мин(Поз1,Поз2);
		КонецЕсли;
		Если Поз<>0 Тогда
			Стр1=Лев(Стр,Поз-1);
		КонецЕсли;
		Если МассивСтрок.Найти(Стр1)=Неопределено И ЗначениеЗаполнено(Стр1) Тогда
			МассивСтрок.Добавить(Стр1); 
		КонецЕсли; 
		Стр = Сред(Стр,Поз); 
	КонецЦикла; 
КонецФункции // глРазложить

&НаКлиенте
Процедура ДобавитьЕще(Команда)
	ОбновитьЛентуСервер();
	ПолныйТекстHTML = "<html>
	|<body>";
	Для Каждого ЭлементСтруктуры Из ТаблицаСтруктурыФайлов Цикл
		Если ЗначениеЗаполнено(ЭлементСтруктуры.АдресВХранилище) Тогда
			Картинка = ПолучитьИзВременногоХранилища(ЭлементСтруктуры.АдресВХранилище);
			Если Не Картинка=Неопределено Тогда
				УдалитьИзВременногоХранилища(ЭлементСтруктуры.АдресВХранилище);
				Картинка.Записать(ВременныйКаталог + "\" + ЭлементСтруктуры.УинКартинки + ?(ЭлементСтруктуры.ТолькоМиниатюра, "thumb", "") + "." + ЭлементСтруктуры.Расширение);
			КонецЕсли; 
		КонецЕсли;
	КонецЦикла;	
	ПолныйТекстHTML = ПолныйТекстHTML + "
			|<span><table id = ""Rakurs" + """ border=""1"" cellpadding=""0"" bordercolor=#9696FF cellspacing=""0"" width=""100%"">"
				+ СформироватьТэгиПоРакурсу()
				+ "</table></span><p></p>";
	
	ПолныйТекстHTML = ПолныйТекстHTML + "</body>
	|</html>";
	
	ДокументHTML = ПолныйТекстHTML;
КонецПроцедуры

&НаКлиенте
Процедура НажатиеКартинки(Элемент, СтандартнаяОбработка)
	//СтандартнаяОбработка=Ложь;
	//Номер=Число(СтрЗаменить(Элемент.Имя,"Картинка__",""));
	//Для каждого Стр Из ТЗСоответствия Цикл
	//	Если Стр.Номер=Номер Тогда
	//		 Прервать;
	//	КонецЕсли; 
	//КонецЦикла; 
	//Парам=Новый Структура("УинЗаписи",Стр.УИН);
	//ОткрытьФорму("Обработка.ЛентаКартинок.Форма.ФормаВыбора",Парам);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	МожетРедактировать=Истина;	
	Элементы.ДобавитьЕще.Видимость=Ложь;
	Если ЗначениеЗаполнено(ВременныйКаталог) Тогда
		УдалитьФайлы(ВременныйКаталог);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(МасштабФотоРакурсов) Тогда
		МасштабФотоРакурсов = 100;
	КонецЕсли;	
	
	ВременныйКаталог = КаталогВременныхФайлов() + Строка(Новый УникальныйИдентификатор());
	СоздатьКаталог(ВременныйКаталог);
	
	БиблиотекаКартинок.ПоказатьДанные.Записать(ВременныйКаталог + "\Show.png");
	БиблиотекаКартинок.ЗаписатьИЗакрыть.Записать(ВременныйКаталог + "\Accepted.png");
	БиблиотекаКартинок.Удалить.Записать(ВременныйКаталог + "\Canceled.png");
	БиблиотекаКартинок.Выбрать.Записать(ВременныйКаталог + "\Unknown.png");
	БиблиотекаКартинок.Записать.Записать(ВременныйКаталог + "\SaveAs.png");
	БиблиотекаКартинок.Сортировка.Записать(ВременныйКаталог + "\Rotate.png");
	БиблиотекаКартинок.ПрочитатьИзменения.Записать(ВременныйКаталог + "\Trim.png");

КонецПроцедуры

&НаКлиенте
Процедура ИскатьПриИзменении(Элемент)
	Элементы.ДобавитьЕще.Видимость=Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия="ОбновитьТэгиВЛентеКартинок" Тогда
		
			ФайлыКартинки = НайтиФайлы(ВременныйКаталог, Параметр + ".*");
			//Если ФайлыКартинки.Количество() = 0 Тогда
			//	СтрФайл = СкачатьПолнуюКартинкуССервера(СтруктураСобытия.УинКартинка);
			//	СтрФайл.Картинка.Записать(ВременныйКаталог + "\" + СтруктураСобытия.УинКартинка + "." + СтрФайл.Расширение);
			//КонецЕсли;	
			Для Каждого Тэг Из Элементы.ДокументHTML.Документ.getElementsByTagName("table") Цикл
				Если Найти(Тэг.id, "Rakurs")  > 0 Тогда
					Тэг.parentElement.innerHTML = "<table id = ""Rakurs"+""" border=""1"" cellpadding=""0"" bordercolor=#9696FF cellspacing=""0"" width=""100%"">"
					 + СформироватьТэгиПоРакурсу( Параметр)
					 + "</table>";
					 
					СтрокиТекКартинки = ТекКартинкиРакурсов;
					Если СтрокиТекКартинки.Количество() = 0 Тогда
						СтрокаТекКартинки = ТекКартинкиРакурсов.Добавить();
						//СтрокаТекКартинки.УинРакурса = СтруктураСобытия.УинРакурса;
					Иначе
						СтрокаТекКартинки = СтрокиТекКартинки[0];
					КонецЕсли;	 
					СтрокаТекКартинки.УинКартинки = Параметр;
				КонецЕсли;	
			КонецЦикла;
		
	
	КонецЕсли; КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Об=Отчеты.ОтчетДляЛентыКартинок.Создать();
	Схема=Отчеты.ОтчетДляЛентыКартинок.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	Об.КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Схема));
	Об.КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
	Об.КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.Полное);
	ЗначениеВРеквизитФормы(Об,"ОтчетОб");
	//Схема=Отчеты.ОтчетДляЛентыКартинок.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	//_ВариантНастройки = Новый КомпоновщикНастроекКомпоновкиДанных;
	//
	////
	//_ВариантНастройки.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Схема));
	//_ВариантНастройки.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
	//_ВариантНастройки.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.Полное);
	//ЗначениеВРеквизитФормы(_ВариантНастройки,"СКД");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтбор(Команда)
	Парам=Новый Структура("Адрес",Адрес);
	ОткрытьФорму("Отчет.ОтчетДляЛентыКартинок.Форма",Парам,ЭтаФорма);
КонецПроцедуры


 