Процедура ПолучитьПочтуСФильтрами() Экспорт
	ПолучитьСообщенияСПочтовогоЯщика(ПолучитьУчетнуюЗаписьПоАдресу("vkusvill@it-stuff.ru"));
КонецПроцедуры

Функция ПолучитьСообщенияСПочтовогоЯщика(УчетнаяЗаписьЭлектроннойПочты) Экспорт
	Почта 						= Новый ИнтернетПочта;
	Профиль 					= Новый ИнтернетПочтовыйПрофиль;
	Профиль.Пользователь 		= УчетнаяЗаписьЭлектроннойПочты.Логин;
	Профиль.ПользовательSMTP 	= УчетнаяЗаписьЭлектроннойПочты.Логин;
	Профиль.ПользовательIMAP 	= УчетнаяЗаписьЭлектроннойПочты.Логин;
	Профиль.Пароль 				= УчетнаяЗаписьЭлектроннойПочты.Пароль;
	Профиль.ПарольSMTP 			= УчетнаяЗаписьЭлектроннойПочты.Пароль;
	Профиль.ПарольIMAP 			= УчетнаяЗаписьЭлектроннойПочты.Пароль;
	Профиль.ПарольIMAP 			= УчетнаяЗаписьЭлектроннойПочты.Пароль;
	Профиль.ПортIMAP 			= УчетнаяЗаписьЭлектроннойПочты.ПортPOP3;
	Профиль.ПортPOP3 			= УчетнаяЗаписьЭлектроннойПочты.ПортPOP3;
	Профиль.АутентификацияSMTP = СпособSMTPАутентификации.БезАутентификации;
	////Профиль.ИспользоватьSSLIMAP = Истина;
	//////Профиль.АдресСервераIMAP 	= "imap.gmail.com";
	////Профиль.АдресСервераIMAP 	= УчетнаяЗаписьЭлектроннойПочты.POP3Сервер;
	//////Профиль.АдресСервераPOP3 	= УчетнаяЗаписьЭлектроннойПочты.POP3Сервер;
	////Почта.Подключиться(Профиль, ПротоколИнтернетПочты.IMAP);
	//////Почта.Подключиться(Профиль, ПротоколИнтернетПочты.POP3);
	ФорматированныйДокумент 	= Новый ФорматированныйДокумент;
	КартинкиФорматДок 			= Новый Структура();
	//------------------------------------------------------------------------
	Профиль.Пользователь 		= "vkusvill@it-stuff.ru";
	Профиль.ПользовательSMTP 	= "vkusvill@it-stuff.ru";
	Профиль.ПользовательIMAP 	= "vkusvill@it-stuff.ru";
	Профиль.Пароль 				= "s539Ti11";
	Профиль.ПарольSMTP 			= "s539Ti11";
	Профиль.ПарольIMAP 			= "s539Ti11";
	Профиль.ПортIMAP 			= 993;
	Профиль.ИспользоватьSSLIMAP = Истина;
	Профиль.Таймаут 			= 1000;
	Профиль.АдресСервераIMAP 	= "imap.gmail.com";
	Почта.Подключиться(Профиль, ПротоколИнтернетПочты.IMAP);
	Попытка
		НужныйЗаголовок 		= "RVV823_";
		ДатаПоследнегоПисьма = НачалоДня(ТекущаяДата()) - 60 * 60 * 24 * 5;
		МассивЗаголовковПисем = Почта.ПолучитьЗаголовки(Новый Структура("Прочитанные, ПослеДатыОтправления", Ложь, ДатаПоследнегоПисьма));
		МассивЗаголовковПисем = Почта.ПолучитьЗаголовки(Новый Структура("ПослеДатыОтправления", ДатаПоследнегоПисьма));
		//МассивЗаголовковПисем = Почта.ПолучитьЗаголовки(Новый Структура("Тема, Прочитанные, ПослеДатыОтправления", НужныйЗаголовок, Истина, ДатаПоследнегоПисьма));
		//МассивЗаголовковПисем = Почта.ПолучитьЗаголовки();  
		МассивЗаголовковДляЗагрузки = Новый Массив;
		Если МассивЗаголовковПисем.Количество() = 0 Тогда
			Почта.Отключиться();
			Возврат 0;
		КонецЕсли;
		Для Каждого Строка ИЗ МассивЗаголовковПисем Цикл
			Если СтрЧислоВхождений(Строка.Тема, НужныйЗаголовок) > 0 Тогда
				МассивЗаголовковДляЗагрузки.Добавить(Строка);
			КонецЕсли;
		КонецЦикла;
		Письма = Почта.Выбрать(Ложь, МассивЗаголовковПисем, Истина);

		
		//Письма = Почта.Выбрать(Ложь, МассивЗаголовковДляЗагрузки, Истина);
		// считываем записи с конца
		КвоЗаписей = Письма.ВГраница();                          
		Если КвоЗаписей = -1 Тогда 
			Возврат 0; 
		КонецЕсли;
		Для Сч = 0 По КвоЗаписей Цикл
			Письмо 								= Письма[КвоЗаписей - Сч];
			ТемаПисьма 							= Письмо.Тема;
			
			
			
			Если СтрЧислоВхождений(ТемаПисьма, НужныйЗаголовок) = 0 Тогда
				//МассивЗаголовковДляЗагрузки.Добавить(Строка);
				Продолжить;
			КонецЕсли;
			
			//Код ниже на будушее +++
			Если Найти(Письмо.Заголовок, "References") > 0 Тогда
				REF = Сред(Письмо.Заголовок, Найти(Письмо.Заголовок, "References") + 13, 36);
			Иначе
				REF = "";
			КонецЕсли;
			Если Найти(Письмо.Заголовок, "Message-Id") > 0 Тогда
				MID = Сред(Письмо.Заголовок, Найти(Письмо.Заголовок, "Message-Id") + 13, 36);
			Иначе
				MID = "";
			КонецЕсли;
			Если Найти(Письмо.Заголовок, "In-Reply-To") > 0 Тогда	
				IRT = Сред(Письмо.Заголовок, Найти(Письмо.Заголовок, "In-Reply-To") + 14, 36);
			Иначе
				IRT = "";
			КонецЕсли;
			//Код ниже на будушее ---


			
			
			
			ОтправительПисьма 					= Письмо.Отправитель;
			ДатаПисьма 							= Письмо.ДатаОтправления;
			Поз									= Найти(СокрЛП(ТемаПисьма), "rtrim(@");
			ЧастьДоЕмЮид 						= Лев(ТемаПисьма, (Поз +6));
			Остаток								= СтрЗаменить(ТемаПисьма, ЧастьДоЕмЮид, "");
			Поз									= Найти(СокрЛП(Остаток), "_");
			ЧастьДо_	 						= Лев(Остаток, Поз);
			Остаток_							= СтрЗаменить(Остаток, ЧастьДо_, "");
			Поз									= Найти(СокрЛП(Остаток_), "#");
			ЧастьДоР	 						= Лев(Остаток_, Поз -1);
			UID 								= ЧастьДоР;
			ТекстПисьмаПростой 					= "";
			Для Каждого ТекстПисьма Из Письмо.Тексты Цикл
				Если ТекстПисьма.ТипТекста 		= ТипТекстаПочтовогоСообщения.ПростойТекст Тогда
					ТекстПисьмаПростой 			= СокрЛП(ТекстПисьма.Текст);
					Прервать;
				ИначеЕсли ТекстПисьма.ТипТекста = ТипТекстаПочтовогоСообщения.HTML Тогда
					ФорматированныйДокумент.УстановитьHTML(ТекстПисьма.Текст, КартинкиФорматДок);
					ТекстПисьмаПростой 			= СокрЛП(ФорматированныйДокумент.ПолучитьТекст());
					Прервать;
				КонецЕсли;
			КонецЦикла;  
			//Сообщить(ТекстПисьмаПростой);
			Отправка = Ложь;
			Отправка = Истина;
			Если Отправка Тогда
				email_uid 						= UID;
				date_email 						= ДатаПисьма;
				email_from						= ОтправительПисьма.Адрес;
				text_email						= ТекстПисьмаПростой;
				////Сообщить(text_email);
				ДобавитьСтрокуПисьмоВSQL_(email_uid, date_email, email_from, text_email, ТемаПисьма);
				
				Попытка
					МенеджерЗаписи 					= РегистрыСведений.ЛогиПисемGMAIL.СоздатьМенеджерЗаписи();
					МенеджерЗаписи.GUID_Загрузки 	= MID;
					МенеджерЗаписи.REF 				= REF;
					МенеджерЗаписи.IRT 				= IRT;
					МенеджерЗаписи.MID 				= MID;
					
					МенеджерЗаписи.email_uid 		= email_uid;
					МенеджерЗаписи.ДатаПолучения 	= date_email;
					МенеджерЗаписи.email_from 		= email_from;
					МенеджерЗаписи.text_email 		= text_email;
					МенеджерЗаписи.ТемаПисьма 		= ТемаПисьма;
					МенеджерЗаписи.Записать();
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
	Исключение
		Сообщить(ОписаниеОшибки());
		ТекстОшибки = "Не удалось прочитать заголовки писем. Ошибка: " + ОписаниеОшибки();
		Сообщить(ТекстОшибки);
	КонецПопытки;
	Почта.Отключиться();
КонецФункции // ()

//Для автоматического разбора в теме должно быть написано #RVV823. Если нашли, то загружаем тело письма. Если по теме ясно, что оно нам не нужно, то не загружаем его.
//В таких письмах формат темы будет указан в следующем виде: Текст темы +   «#RVV823» + rtrim(@email_uid) + '#'.
//Необходимо из таких писем грузить данные в таблицу:sms_repl.[dbo].[List_answer_emails].
//Заполнение полей таблицы: 
//[email_uid]  - uid из темы 
//[date_email]  - дата отправки письма 
//[email_from] [nvarchar](100) NOT NULL - отправитель, 
//[text_email] [nvarchar](max) NOT NULL – из текстовых тегов необходимо выхватить текст и  скомпоновав записать в этот реквизит., 
//[Shopno] [int] NULL – пока не заполняем, 
//[Date_pr] [date] NULL – пока не заполняем, 
//[Res] [nvarchar](max) NULL – пока не заполняем

Процедура ДобавитьСтрокуПисьмоВSQL_(email_uid, date_email, email_from, text_email, ТемаПисьма)
	Транслит 			= СокрЛП(email_uid);
	ЗапрещенныеСимволы 	= "'!№;%:?*()+ ";
	Для Инд 			= 1 По СтрДлина(ЗапрещенныеСимволы) Цикл
		ТекСимвол 		= Сред(ЗапрещенныеСимволы,Инд,1);
		Транслит 		= СтрЗаменить(Транслит,ТекСимвол,"");
	КонецЦикла;
	email_uid 			= СтрЗаменить(Транслит,"""","");
	email_uid 			= ВнешниеДанные.ФорматПоля(email_uid);
	date_email 			= ВнешниеДанные.ФорматПоля(date_email);
	email_from 			= ВнешниеДанные.ФорматПоля(email_from);
	text_email 			= СтрЗаменить(text_email, "'", "");
	text_email  		= ВнешниеДанные.ФорматПоля(text_email);
	subject				= ВнешниеДанные.ФорматПоля(ТемаПисьма);
	
	Если СтрДлина(email_uid) < 38 Тогда
		email_uid = "'11111111-1111-1111-1111-111111111111'";
	КонецЕсли;
	
	//пока не заполняем
	//Shopno	= Shopno;
	//Date_pr	= Date_pr;
	//Res		= Res;
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	ТекстЗапроса = "INSERT INTO [SMS_Repl].[dbo].[List_answer_emails]
	|	(email_uid, date_email, email_from, text_email, subject)
	|VALUES (" + email_uid  + ", " + date_email + ", " + email_from + ",  " + text_email + ",  " + subject +"
	|)"	;
	Попытка	
		ADOСоединение.Execute(ТекстЗапроса);
		//Сообщить(ТекстЗапроса);
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;
КонецПроцедуры

Функция ПолучитьУчетнуюЗаписьПоАдресу(АдресЭлектроннойПочты) Экспорт      
	Запрос1 = Новый Запрос;
	Запрос1.Текст = 
	"ВЫБРАТЬ
	|	УчетныеЗаписиЭлектроннойПочты.Ссылка
	|ИЗ
	|	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
	|ГДЕ
	|	УчетныеЗаписиЭлектроннойПочты.ПометкаУдаления = ЛОЖЬ
	|	И УчетныеЗаписиЭлектроннойПочты.АдресЭлектроннойПочты = &АдресЭлектроннойПочты
	|
	|УПОРЯДОЧИТЬ ПО
	|	УчетныеЗаписиЭлектроннойПочты.Код УБЫВ";
	
	Запрос1.УстановитьПараметр("АдресЭлектроннойПочты", СокрЛП(АдресЭлектроннойПочты));
	
	Рез1 = Запрос1.Выполнить();
	Если Рез1.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выб1 = Рез1.Выбрать();
		Выб1.Следующий();
		Возврат Выб1.Ссылка;
	КонецЕсли;
КонецФункции // ()

Функция ПроверкаТаблицыНажатиеМодуль() Экспорт 
	UID = "3";
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	ТекстЗапросаSQL = "SELECT TD.email_uid,  TD.date_email, TD.email_from, TD.text_email, TD.subject
										|FROM  SMS_Repl.dbo.List_answer_emails as TD with (nolock)";
	rs = ADOСоединение.Execute(ТекстЗапросаSQL);
	Попытка
		rs.MoveFirst();
		Пока НЕ rs.Eof() Цикл
			НоваяСтрока = ТаблицаРезультат.Добавить();
			НоваяСтрока.email_uid = rs.Fields("email_uid").Value;
			НоваяСтрока.date_email = rs.Fields("date_email").Value;
			НоваяСтрока.email_from = rs.Fields("email_from").Value;
			НоваяСтрока.text_email = rs.Fields("text_email").Value;
			НоваяСтрока.subject = rs.Fields("subject").Value;

			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	ADOСоединение.Close();
КонецФункции
