//+++АК LAGP 2018.05.11 ИП-00018465 Объект создан Лагеревым П.А.

&НаКлиенте
Процедура ПоступлениеВБанкОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Элементы.СуммаПоступленияВБанк.Заголовок 	= "Сумма: " + ВыбранноеЗначение.СуммаДокумента;
		Контрагент 									= ВыбранноеЗначение.Контрагент;
		ДоговорКонтрагента 							= ВыбранноеЗначение.ДоговорКонтрагента;
	Иначе
		Элементы.СуммаПоступленияВБанк.Заголовок = "";
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьФлаг(Команда)
	
	Для каждого Строка из ТЗРеализацииТоваровИУслуг Цикл
		Строка.Обрабатывать 	= Истина;
		Если Строка.СуммаВносимая = 0 Тогда
			Строка.СуммаВносимая 	= Строка.СуммаОстаток;
		КонецЕсли;	
	КонецЦикла;	
	
	ЗаполнитьИтогРТУ(ПересчитатьИтог());
	
КонецПроцедуры

&НаКлиенте
Процедура УбратьФлаг(Команда)
	
	 Для каждого Строка из ТЗРеализацииТоваровИУслуг Цикл
		Строка.Обрабатывать 	= Ложь;
		Строка.СуммаВносимая 	= 0;
	КонецЦикла;
	
	ЗаполнитьИтогРТУ(ПересчитатьИтог());
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТЧНаСервере() Экспорт
		
	ТЗРеализацииТоваровИУслуг.Очистить();
	
	Для каждого СтрокаИзПоступленияВБанк ИЗ ПоступлениеВБанк.СопоставлениеРТУ Цикл
		НоваяСтрока = ТЗРеализацииТоваровИУслуг.Добавить();	
		НоваяСтрока.РеализацияТоваровИУслуг = СтрокаИзПоступленияВБанк.РеализацияТоваровИУслуг;		
		НоваяСтрока.СуммаОстаток            = СтрокаИзПоступленияВБанк.СуммаОстаток;
		НоваяСтрока.СуммаВносимая           = СтрокаИзПоступленияВБанк.СуммаВносимая;
		НоваяСтрока.ЭтоИзПоступленияВБанк	= Истина;	
	КонецЦикла;	
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РасчетыСКонтрагентамиОстатки.Сделка,
		|	РасчетыСКонтрагентамиОстатки.СуммаОстаток,
		|	РасчетыСКонтрагентамиОстатки.Сделка.Дата КАК СделкаДата,
		|	РасчетыСКонтрагентамиОстатки.Сделка.НомерИсходящегоДокумента КАК НомерИсходящегоДокумента
		|ИЗ
		|	РегистрНакопления.РасчетыСКонтрагентами.Остатки(
		|			,
		|			Сделка ССЫЛКА Документ.РеализацияТоваровУслуг
		|				И Контрагент = &Контрагент
		|				И Сделка.ДоговорКонтрагента = &ДоговорКонтрагента
		|				И (Сделка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания)) КАК РасчетыСКонтрагентамиОстатки
		|
		|УПОРЯДОЧИТЬ ПО
		|	СделкаДата";
	
	Запрос.УстановитьПараметр("ДатаНачала",	 		Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 		Период.ДатаОкончания);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	Запрос.УстановитьПараметр("Контрагент", 		Контрагент);
	
	//+++АК LAGP 2018.06.17 ИП-00018465.03 СопоставлениеРТУ из экселя.
	Если ЗначениеЗаполнено(ТаблицаНакладныхЭксель) Тогда
		Сообщить("Поиск по номерам накладных из файла EXCEL.");
		ТаблицаИзЭкселя = ТаблицаНакладныхЭксель.Выгрузить();
		ТаблицаИзЭкселя.Свернуть("НомерНакладной", "СуммаНакладной");
		МассивНомеровНакладных = ТаблицаИзЭкселя.ВыгрузитьКолонку("НомерНакладной");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, 
		"				И Сделка.ДоговорКонтрагента = &ДоговорКонтрагента", 
		"				И Сделка.ДоговорКонтрагента = &ДоговорКонтрагента" + Символы.ПС + "				И Сделка.НомерИсходящегоДокумента В (&НомераНакладных)");
		Запрос.УстановитьПараметр("НомераНакладных", МассивНомеровНакладных);
	КонецЕсли;
	//---АК LAGP
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ЗначениеЗаполнено(ТаблицаНакладныхЭксель) Тогда
		Сообщить("Найдено " + ВыборкаДетальныеЗаписи.Количество() + " элементов!");	
	КонецЕсли;	
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл		
		НоваяСтрока = ТЗРеализацииТоваровИУслуг.Добавить();	
		НоваяСтрока.РеализацияТоваровИУслуг = ВыборкаДетальныеЗаписи.Сделка;
		НоваяСтрока.СуммаОстаток = ВыборкаДетальныеЗаписи.СуммаОстаток;
		
		//+++АК LAGP 2018.06.17 ИП-00018465.03 СопоставлениеРТУ из экселя.		
		Если ЗначениеЗаполнено(ТаблицаНакладныхЭксель) Тогда
			НайденнаяСтрокаЭксель = ТаблицаИзЭкселя.Найти(ВыборкаДетальныеЗаписи.НомерИсходящегоДокумента, "НомерНакладной");
			Если НЕ НайденнаяСтрокаЭксель = Неопределено Тогда
				Если НайденнаяСтрокаЭксель.СуммаНакладной > ВыборкаДетальныеЗаписи.СуммаОстаток Тогда
					Сообщить("Для накладной " + ВыборкаДетальныеЗаписи.НомерИсходящегоДокумента + " вносимая сумма в EXCEL больше суммы остатка по регистру. Установлена сумма вносимая по остатку в регистре.");
					НоваяСтрока.СуммаВносимая = ВыборкаДетальныеЗаписи.СуммаОстаток;
				ИначеЕсли НайденнаяСтрокаЭксель.СуммаНакладной = ВыборкаДетальныеЗаписи.СуммаОстаток Тогда
					НоваяСтрока.СуммаВносимая = ВыборкаДетальныеЗаписи.СуммаОстаток;
				Иначе
					Сообщить("Для накладной " + ВыборкаДетальныеЗаписи.НомерИсходящегоДокумента + " вносимая сумма в EXCEL меньше суммы остатка по регистру.");
					НоваяСтрока.СуммаВносимая = НайденнаяСтрокаЭксель.СуммаНакладной;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
		//---АК LAGP
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТЧ(Команда)
	
	ТаблицаНакладныхЭксель.Очистить();
	ЗаполнитьТЧНаСервере();
	ЗаполнитьИтогРТУ(ПересчитатьИтог());
	
КонецПроцедуры

&НаСервере
Процедура РазнестиДСНаСервере()
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Обрабатывать", Истина);
	НайденныеСтроки = ТЗРеализацииТоваровИУслуг.Выгрузить(ПараметрыОтбора);

	ТЗПроверкаНаУникальность = НайденныеСтроки.Скопировать();
	ТЗПроверкаНаУникальность.Свернуть("РеализацияТоваровИУслуг");
	
	Если НайденныеСтроки.Количество() > ТЗПроверкаНаУникальность.Количество() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Существуют дубли реализаций товаров и услуг к обработке!");
		Возврат;
	КонецЕсли;	
	
	Если НЕ ПоступлениеВБанк.Контрагент = Контрагент Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Выбранный контрагент не является контрагентом в выбранном поступлении в банк!");
		Возврат;
	КонецЕсли;	
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		ОбъектПоступлениеВБанк = ПоступлениеВБанк.ПолучитьОбъект();
		ОбъектПоступлениеВБанк.СопоставлениеРТУ.Очистить();
		
		Для каждого СтрокаИзОбработки Из НайденныеСтроки Цикл
			НоваяСтрокаВДокументе = ОбъектПоступлениеВБанк.СопоставлениеРТУ.Добавить();
			НоваяСтрокаВДокументе.РеализацияТоваровИУслуг = СтрокаИзОбработки.РеализацияТоваровИУслуг;
			НоваяСтрокаВДокументе.СуммаВносимая           = СтрокаИзОбработки.СуммаВносимая;
			НоваяСтрокаВДокументе.СуммаОстаток	          = СтрокаИзОбработки.СуммаОстаток;
		КонецЦикла;
		
		Попытка
			ОбъектПоступлениеВБанк.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура РазнестиДС(Команда)
	РазнестиДСНаСервере();
	Сообщить("Разнесение ДС выполнено!");
КонецПроцедуры

&НаКлиенте
Процедура ТЗРеализацииТоваровИУслугОбрабатыватьПриИзменении(Элемент)
	
	Если Элементы.ТЗРеализацииТоваровИУслуг.ТекущиеДанные.Обрабатывать И Элементы.ТЗРеализацииТоваровИУслуг.ТекущиеДанные.СуммаВносимая = 0 Тогда
		Элементы.ТЗРеализацииТоваровИУслуг.ТекущиеДанные.СуммаВносимая = Элементы.ТЗРеализацииТоваровИУслуг.ТекущиеДанные.СуммаОстаток;
	КонецЕсли;	
	ЗаполнитьИтогРТУ(ПересчитатьИтог());
	
КонецПроцедуры	

&НаСервере
Функция ПересчитатьИтог() 
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Обрабатывать", Истина);
	НайденныеСтроки = ТЗРеализацииТоваровИУслуг.Выгрузить(ПараметрыОтбора);
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		Возврат НайденныеСтроки.Итог("СуммаВносимая");
	Иначе 
		Возврат 0;
	КонецЕсли;	
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьИтогРТУ(СуммаВносимых)
		
	Если СуммаВносимых > 0 Тогда		
		Элементы.НадписьСуммаРТУ.Заголовок = "Сумма выбранных реализаций: " + СуммаВносимых;
		
		Если ЗначениеЗаполнено(ПоступлениеВБанк) И СуммаВносимых > ПоступлениеВБанк.СуммаДокумента Тогда
			Элементы.НадписьСуммаРТУ.Заголовок 	= Элементы.НадписьСуммаРТУ.Заголовок + ". Превышение остатка на " + (СуммаВносимых - ПоступлениеВБанк.СуммаДокумента) + "!";
			Элементы.НадписьСуммаРТУ.ЦветТекста = WebЦвета.Красный;
			Элементы.РазнестиДС.Доступность		= Ложь;
		Иначе
			Элементы.НадписьСуммаРТУ.ЦветТекста = WebЦвета.Черный;
			Элементы.РазнестиДС.Доступность		= Истина;
		КонецЕсли;	
	Иначе	
		Элементы.НадписьСуммаРТУ.Заголовок 	= "Документы не выбраны.";
		Элементы.НадписьСуммаРТУ.ЦветТекста = WebЦвета.Черный;
		Элементы.РазнестиДС.Доступность		= Ложь;
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ДоговорКонтрагентаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
			
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Справочники.ДоговорыКонтрагентов.ПолучитьФормуВыбора(,Элемент,);
	ФормаВыбора.ПараметрОтборПоВладельцу = Контрагент;
	ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.Владелец.Доступность = Ложь;
	
	ФормаВыбора.СправочникСписок.Отбор.ВидДоговора.Значение                            = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
	ФормаВыбора.СправочникСписок.Отбор.ВидДоговора.Использование                       = Истина;
	ФормаВыбора.СправочникСписок.Отбор.ВидДоговора.ВидСравнения                        = ВидСравнения.Равно;

	ФормаВыбора.Открыть();	
		
КонецПроцедуры

&НаКлиенте
Процедура ТЗРеализацииТоваровИУслугПриИзменении(Элемент)
	
	ЗаполнитьИтогРТУ(ПересчитатьИтог());	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МассивПраваРедактированиеРегистраПривязкаСтороннихМагазиновКДоговорам = УправлениеДопПравамиПользователей.ПрочитатьЗначениеПраваПользователя(ПланыВидовХарактеристик.ПраваПользователей.РедактированиеРегистраПривязкаСтороннихМагазиновКДоговорам,Ложь,ПараметрыСеанса.ТекущийПользователь);	
	ПравоПривязкаСтороннихМагазиновКДоговорам = МассивПраваРедактированиеРегистраПривязкаСтороннихМагазиновКДоговорам[0];
	
	Если НЕ ПравоПривязкаСтороннихМагазиновКДоговорам Тогда
		Сообщить("У вас нет дополнительного права ""Редактирование регистра ""Привязка сторонних магазинов к договорам""""");
		Отказ = Истина;	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоступлениеВБанкНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		СтандартнаяОбработка = Ложь;
		ФормаВыбора = Документы.ПоступлениеВБанк.ПолучитьФормуВыбора(,Элемент,);
		
		ФормаВыбора.ДокументСписок.Отбор.Контрагент.Значение                            = Контрагент;
		ФормаВыбора.ДокументСписок.Отбор.Контрагент.Использование                       = Истина;
		ФормаВыбора.ДокументСписок.Отбор.Контрагент.ВидСравнения                        = ВидСравнения.Равно;

		ФормаВыбора.Открыть();
	КонецЕсли;	
		
КонецПроцедуры

//+++АК LAGP 2018.06.17 ИП-00018465.03 СопоставлениеРТУ из экселя.
&НаКлиенте
Процедура ЗаполнитьТЧИзЭкселя(Команда)
	
	ТаблицаНакладныхЭксель.Очистить();
	
	ОткрытьФормуМодально("Обработка.СопоставлениеПлатёжныхДокументовсРТУ.Форма.ФормаЗагрузкиЭксель", , ЭтаФорма);
		
	ЗаполнитьТЧНаСервере();	
		
	ЗаполнитьИтогРТУ(ПересчитатьИтог());
	ЭтаФорма.ОбновитьОтображениеДанных();
	
КонецПроцедуры
