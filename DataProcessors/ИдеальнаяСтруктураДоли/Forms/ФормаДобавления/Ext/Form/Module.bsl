
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.ТаблицаПлановСтруктур.Очистить();
	
	ТаблицаГрупп.Очистить();
	
	ТекстЗапросаSQL = "
		|SELECT
		|	id_group Код,
		|	Name_gr Наименование
		|FROM
		|	M2..[Group tovari] as gr (NOLOCK)
		|
		|ORDER BY
		|	Name_gr
		|";
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	rs = ADOСоединение.Execute(ТекстЗапросаSQL);
	
	Попытка
		rs.MoveFirst();
		
		МассивПолей = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("Код,Наименование", ",", Истина, Истина);
		Пока НЕ rs.EOF() Цикл
			НоваяСтрокаТЗ = ТаблицаГрупп.Добавить();
			Для Каждого ИмяПоля Из МассивПолей Цикл
				НоваяСтрокаТЗ[ИмяПоля] = Rs.Fields(ИмяПоля).Value;
			КонецЦикла;
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	ADOСоединение.Close();
	
	ТЗнТаблицаГрупп = ТаблицаГрупп.Выгрузить();
	Элементы.ТаблицаПлановСтруктурКодГруппы.СписокВыбора.ЗагрузитьЗначения(ТЗнТаблицаГрупп.ВыгрузитьКолонку("Код"));
	Элементы.ТаблицаПлановСтруктурГруппа.СписокВыбора.ЗагрузитьЗначения(ТЗнТаблицаГрупп.ВыгрузитьКолонку("Наименование"));
	ТЗнТаблицаГрупп.Очистить();
	ТЗнТаблицаГрупп = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДанные(Команда)
	
	Если ЗаписатьДанныеНаСервере() Тогда
		ПоказатьОповещениеПользователя("Данные успешно записаны!",,,,,);
		Оповестить("ОбновитьИдеальныеСтруктуры");
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьДанныеНаСервере()
	
	Если НЕ ПроверитьЗаполнение() Тогда Возврат Ложь; КонецЕсли;
	
	ТекстЗапросаSQL = "
		|DECLARE @date_start date = " + ВнешниеДанные.ФорматПоля(ДатаСтарта, Истина) + "
		|DECLARE @curr_date datetime = GetDate()
		|
		|INSERT INTO
		|	 [Reports].[dbo].[PlanStructury_GroupTov] ([id_group],[PlanProc],[date_start],date_add)
		|
		|VALUES
		|";
	
	НужнаЗапятая = Ложь;
	Для Каждого СтрокаТЧ Из Объект.ТаблицаПлановСтруктур Цикл
		ТекстЗапросаSQL = ТекстЗапросаSQL + ?(НужнаЗапятая, ",", "") + "
			|(" + ВнешниеДанные.ФорматПоля(СтрокаТЧ.КодГруппы) + "," + ВнешниеДанные.ФорматПоля(СтрокаТЧ.Доля) + ",@date_start,@curr_date)";
		НужнаЗапятая = Истина;
	КонецЦикла;
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	
	ТекстЗапросаSQL = "declare @err int =1
					|while @err=1
					|begin
					| begin try
					|" + ТекстЗапросаSQL + "
					|select @err=0
					| 
					| END TRY
					|  BEGIN CATCH
					| 
					|if CHARINDEX('вызвала взаимоблокировку ресурсов',ERROR_MESSAGE(),1)>0
					|begin
					|-- запись в лог факта блокировки
					|	set @err=1
					|end
					|else
					|begin
					| 
					|-- прочая ошибка - выход  
					| return
					| end
					| 
					|  END CATCH 
					|end -- while";
	
	Попытка	
		ADOСоединение.Execute(ТекстЗапросаSQL);
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки;
	
	ADOСоединение.Close();
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ТаблицаПлановСтруктурКодГруппыПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаПлановСтруктур.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	МассивСтрок = ТаблицаГрупп.НайтиСтроки(Новый Структура("Код", ТекущиеДанные.КодГруппы));
	Если МассивСтрок.Количество() > 0 Тогда
		ТекущиеДанные.Группа = МассивСтрок[0].Наименование;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПлановСтруктурГруппаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаПлановСтруктур.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	МассивСтрок = ТаблицаГрупп.НайтиСтроки(Новый Структура("Наименование", ТекущиеДанные.Группа));
	Если МассивСтрок.Количество() > 0 Тогда
		ТекущиеДанные.КодГруппы = МассивСтрок[0].Код;
	КонецЕсли;
	
КонецПроцедуры
