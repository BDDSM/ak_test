Процедура ЗагрузитьИСоздатьВэбЗаказПокупателя(ТекДата) Экспорт
	Лог = СоздатьЛог();
	МассивЗаказов = Новый Массив;
	Почта = ПодключитсяКПочте("zakazIM@tealsy.ru",Лог);
	Письма = ПолучитьНовыеПисьма(Почта, Лог);
	Если Письма <> Неопределено Тогда
		Для каждого Сообщение из Письма цикл
			Для каждого Вложение из Сообщение.Вложения цикл
				Заказ = ЗагрузитьЗаказИзВложения(Вложение, Лог);
				Если Заказ <> Неопределено Тогда
					МассивЗаказов.Добавить(Заказ);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	СоздатьВэбЗаказыПокупателей(МассивЗаказов, ТекДата, Лог);
КонецПроцедуры

Процедура ЗагрузитьЗаказыИСкорректирроватьРО(ТекДата, МагазинДляОтправкиОстатковРаспределения = Неопределено) Экспорт
	Лог = СоздатьЛог();
	МассивЗаказов = Новый Массив;
	Почта = ПодключитсяКПочте("zakazIM@tealsy.ru",Лог);
	Письма = ПолучитьНовыеПисьма(Почта, Лог);
	Если Письма <> Неопределено Тогда
		Для каждого Сообщение из Письма цикл
			Для каждого Вложение из Сообщение.Вложения цикл
				Заказ = ЗагрузитьЗаказИзВложения(Вложение, Лог);
				Если Заказ <> Неопределено Тогда
					МассивЗаказов.Добавить(Заказ);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	//ЗагрузитьЗаказыВРегистрРаспределениеПоТТ(МассивЗаказов, Лог);
	//СкорректироватьРасходныеОрдера(МассивЗаказов, ТекДата, Лог);
	СоздатьРасходныеОрдераПоЗаказам(МассивЗаказов, ТекДата, Лог, МагазинДляОтправкиОстатковРаспределения);
	УведомитьОтветственных(Лог);
КонецПроцедуры

Процедура СоздатьПеремещенияПоДаннымЗаказа(ТекДата) Экспорт
	Лог = СоздатьЛог();
	ИнтернетМагазины = ПолучитьМассивИнтернетМагазинов(Лог);
	РаспределенныеОстатки = ПолучитьМассивРаспределенныхОстатковТоваров(ИнтернетМагазины, ТекДата, Лог);
	СоздатьПеремещения(РаспределенныеОстатки, Справочники.Склады.НайтиПоНаименованию("ТИЛСИ"),"ВыбратьИзМассиваТоваров", ТекДата, Лог);
	УведомитьОтветственных(Лог);	
КонецПроцедуры

Процедура СоздатьРОпоРаспределению(ТекДата) Экспорт
	Лог = СоздатьЛог();
	ИнтернетМагазины = ПолучитьМассивИнтернетМагазинов(Лог);
	РаспределенныеОстатки = ПолучитьМассивРаспределенныхОстатковТоваров(ИнтернетМагазины, ТекДата, Лог);
	СоздатьРасходныеОрдеры(РаспределенныеОстатки, ТекДата, Лог);
	УведомитьОтветственных(Лог);
КонецПроцедуры

Процедура СоздатьРасходныеОрдеры(РаспределенныеОстатки, Дата, Лог)
	Если Лог.Ошибка или РаспределенныеОстатки.Количество() = 0 Тогда
		ЗаписатьВЛог("Нет распределенных остатков товаров", Лог, "Ошибка");
		Возврат;
	КонецЕсли;
	Для Каждого Распределение из РаспределенныеОстатки Цикл
		ЗаписатьВЛог("Создаем Расходный ордер для " + Распределение.ИнтернетМагазин, Лог);
		Если ЗначениеЗаполнено(Распределение.РасходныйОрдер) Тогда
			РО = Распределение.РасходныйОрдер.ПолучитьОбъект();
		Иначе
			РО = Документы.РасходныйОрдерСклад.СоздатьДокумент();
		КонецЕсли;
		РО.Дата = НачалоДня(Дата + 3600*24);
		РО.НеМенятьДатуПриПроведении = Истина;
		РО.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку");
		РО.Статус = ПредопределенноеЗначение("Перечисление.СтатусыРасходныхОрдеров.ВСборке");
		РО.Организация = Справочники.Организации.НайтиПоНаименованию("Тилси");
		РО.ПричинаПеревозки = ПредопределенноеЗначение("Перечисление.ПричиныПеревозки.ОсновнаяПоставка");
		РО.Склад = Распределение.Склад;
		РО.ДатаРаспределения = НачалоДня(Дата + 3600*24);
		РО.Получатель = Распределение.ИнтернетМагазин;
		РО.Комментарий = "Сформирован по распределению для Интернет магазинов";
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Номенклатура", Неопределено);
		ПараметрыОтбора.Вставить("Характеристика",Неопределено);
		Для каждого Стр из Распределение.Товары Цикл
			ЗаполнитьЗначенияСвойств(ПараметрыОтбора, Стр);
			НайденныеСтроки = РО.Товары.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество() = 0 Тогда
				НоваяСтрока = РО.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);
			КонецЕсли;
		КонецЦикла;
		Попытка
			ЗаписатьВЛог("Записываем Расходный ордер", Лог);
	    	РО.Записать(РежимЗаписиДокумента.Проведение);
			ЗаписатьВЛог("Расходный ордер " + РО + " записан ", Лог);
			Распределение.РасходныйОрдер = РО.Ссылка;
		Исключение
			ЗаписатьВЛог(ОписаниеОшибки() , Лог, "Ошибка");
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьМассивРаспределенныхОстатковТоваров(ИнтернетМагазины, Дата, Лог)
	Если Лог.Ошибка или ИнтернетМагазины.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	ЗаписатьВЛог("Получаем распределенные остатки интернет магазинов на " + Дата, Лог);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Склады.Ссылка КАК СкладРезерва,
	               |	Склады.Владелец КАК ИнтернетМагазин,
	               |	&СкладРаспред КАК СкладРаспред
	               |ПОМЕСТИТЬ ВТ_Склады
	               |ИЗ
	               |	Справочник.Склады КАК Склады
	               |ГДЕ
	               |	(&ДляВсехИнтернетМагазинов
	               |			ИЛИ Склады.Владелец В (&ИнтрнетМагазины))
	               |	И Склады.ЭтоСкладРезерваИнтернетМагазина = ИСТИНА
	               |	И Склады.ПометкаУдаления = ЛОЖЬ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТоварыНаСкладахОстатки.Склад КАК СкладРаспред,
	               |	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	               |	ТоварыНаСкладахОстатки.Характеристика КАК Характеристика,
	               |	ТоварыНаСкладахОстатки.ЕдиницаИзмерения,
	               |	ТоварыНаСкладахОстатки.ДатаПроизводства,
	               |	ТоварыНаСкладахОстатки.КоличествоОстаток,
	               |	ЗначенияСвойствОбъектов.Значение
	               |ПОМЕСТИТЬ ВТ_Товары
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, Склад = &СкладРаспред) КАК ТоварыНаСкладахОстатки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |		ПО ТоварыНаСкладахОстатки.Характеристика = ЗначенияСвойствОбъектов.Объект
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке)
	               |	И ТоварыНаСкладахОстатки.КоличествоОстаток >= ЗначенияСвойствОбъектов.Значение
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Склады.ИнтернетМагазин,
	               |	ПланыПродажПоДнямНедели.Номенклатура,
	               |	ВЫБОР
	               |		КОГДА ВебЗаказПокупателя.Ссылка ЕСТЬ NULL
	               |			ТОГДА ПланыПродажПоДнямНедели.Количество
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК Количество,
	               |	&ДатаПланаПродаж
	               |ПОМЕСТИТЬ ВТ_ОбъединеныйПланПродаж
	               |ИЗ
	               |	ВТ_Склады КАК ВТ_Склады
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПланыПродажПоДнямНедели КАК ПланыПродажПоДнямНедели
	               |		ПО ВТ_Склады.ИнтернетМагазин = ПланыПродажПоДнямНедели.ТорговаяТочка
	               |			И (НАЧАЛОПЕРИОДА(&ДатаПланаПродаж, ДЕНЬ) = ПланыПродажПоДнямНедели.Дата)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВебЗаказПокупателя КАК ВебЗаказПокупателя
	               |		ПО ВТ_Склады.ИнтернетМагазин = ВебЗаказПокупателя.ТорговаяТочка
	               |			И (ВебЗаказПокупателя.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ))
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВТ_Склады.ИнтернетМагазин,
	               |	ВебЗаказПокупателяТовары.Номенклатура,
	               |	ЕСТЬNULL(ВебЗаказПокупателяТовары.Количество, 0),
	               |	&ДатаПланаПродаж
	               |ИЗ
	               |	ВТ_Склады КАК ВТ_Склады
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВебЗаказПокупателя.Товары КАК ВебЗаказПокупателяТовары
	               |		ПО ВТ_Склады.ИнтернетМагазин = ВебЗаказПокупателяТовары.Ссылка.ТорговаяТочка
	               |			И (ВебЗаказПокупателяТовары.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ТекущаяДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&ТекущаяДата, ДЕНЬ))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ОбъединеныйПланПродаж.ДатаПланаПродаж КАК Дата,
	               |	ВТ_ОбъединеныйПланПродаж.ИнтернетМагазин КАК ТорговаяТочка,
	               |	ВТ_ОбъединеныйПланПродаж.Номенклатура,
	               |	СУММА(ВТ_ОбъединеныйПланПродаж.Количество) КАК Количество
	               |ПОМЕСТИТЬ ВТ_ПланПродажСУчетомВэбЗаказа
	               |ИЗ
	               |	ВТ_ОбъединеныйПланПродаж КАК ВТ_ОбъединеныйПланПродаж
	               |ГДЕ
	               |	НЕ ВТ_ОбъединеныйПланПродаж.Номенклатура ЕСТЬ NULL
	               |	И ВТ_ОбъединеныйПланПродаж.Количество <> 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ОбъединеныйПланПродаж.ИнтернетМагазин,
	               |	ВТ_ОбъединеныйПланПродаж.ДатаПланаПродаж,
	               |	ВТ_ОбъединеныйПланПродаж.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Склады.ИнтернетМагазин,
	               |	ВТ_Склады.СкладРаспред,
	               |	ВТ_Склады.СкладРезерва,
	               |	ПланыПродажПоДнямНедели.Номенклатура,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(НормативныйКвантУпаковкиСрезПоследних.Квант, 0) = 0
	               |			ТОГДА ПланыПродажПоДнямНедели.Количество
	               |		КОГДА (ВЫРАЗИТЬ(ПланыПродажПоДнямНедели.Количество / (ВЫРАЗИТЬ(НормативныйКвантУпаковкиСрезПоследних.Квант КАК ЧИСЛО(15, 3))) КАК ЧИСЛО(15, 0))) - (ВЫРАЗИТЬ(ПланыПродажПоДнямНедели.Количество / (ВЫРАЗИТЬ(НормативныйКвантУпаковкиСрезПоследних.Квант КАК ЧИСЛО(15, 3))) КАК ЧИСЛО(15, 3))) = 0
	               |			ТОГДА ПланыПродажПоДнямНедели.Количество
	               |		ИНАЧЕ (ВЫРАЗИТЬ(ПланыПродажПоДнямНедели.Количество / (ВЫРАЗИТЬ(НормативныйКвантУпаковкиСрезПоследних.Квант КАК ЧИСЛО(15, 3))) + 0.5 КАК ЧИСЛО(15, 0))) * (ВЫРАЗИТЬ(НормативныйКвантУпаковкиСрезПоследних.Квант КАК ЧИСЛО(15, 3)))
	               |	КОНЕЦ КАК Количество
	               |ПОМЕСТИТЬ ВТ_ПланыПродаж
	               |ИЗ
	               |	ВТ_Склады КАК ВТ_Склады
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПланПродажСУчетомВэбЗаказа КАК ПланыПродажПоДнямНедели
	               |			ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Товары КАК ВТ_Товары
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |				ПО ВТ_Товары.Характеристика = ЗначенияСвойствОбъектов.Объект
	               |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйКвантУпаковки.СрезПоследних КАК НормативныйКвантУпаковкиСрезПоследних
	               |				ПО ВТ_Товары.Характеристика = НормативныйКвантУпаковкиСрезПоследних.Характеристика
	               |					И (НормативныйКвантУпаковкиСрезПоследних.Склад = &СЕРаспред)
	               |			ПО ПланыПродажПоДнямНедели.Номенклатура = ВТ_Товары.Номенклатура
	               |		ПО ВТ_Склады.ИнтернетМагазин = ПланыПродажПоДнямНедели.ТорговаяТочка
	               |			И (ПланыПродажПоДнямНедели.Дата = &ДатаПланаПродаж)
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ПланыПродаж.ИнтернетМагазин,
	               |	ВТ_ПланыПродаж.СкладРаспред,
	               |	ВТ_ПланыПродаж.СкладРезерва,
	               |	ВТ_ПланыПродаж.Номенклатура,
	               |	ЕСТЬNULL(ВТ_ПланыПродаж.Количество, 0) - ЕСТЬNULL(ЗарезервированныеОстатки.КоличествоОстаток, 0) КАК Потребность
	               |ПОМЕСТИТЬ ВТ_Потребности
	               |ИЗ
	               |	ВТ_ПланыПродаж КАК ВТ_ПланыПродаж
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&ТекущаяДата, ) КАК ЗарезервированныеОстатки
	               |		ПО ВТ_ПланыПродаж.СкладРезерва = ЗарезервированныеОстатки.Склад
	               |			И ВТ_ПланыПродаж.Номенклатура = ЗарезервированныеОстатки.Номенклатура
	               |ГДЕ
	               |	ЕСТЬNULL(ВТ_ПланыПродаж.Количество, 0) - ЕСТЬNULL(ЗарезервированныеОстатки.КоличествоОстаток, 0) > 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Потребности.ИнтернетМагазин,
	               |	ВТ_Потребности.СкладРаспред,
	               |	ВТ_Потребности.СкладРезерва,
	               |	ВТ_Потребности.Номенклатура,
	               |	ВТ_Потребности.Потребность,
	               |	СУММА(ВТ_Потребности1.Потребность) КАК ПотребностьНарастающимИтогом
	               |ПОМЕСТИТЬ ВТ_ПотребностиНарастающимИтогом
	               |ИЗ
	               |	ВТ_Потребности КАК ВТ_Потребности
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Потребности КАК ВТ_Потребности1
	               |		ПО ВТ_Потребности.ИнтернетМагазин.Код >= ВТ_Потребности1.ИнтернетМагазин.Код
	               |			И ВТ_Потребности.Номенклатура = ВТ_Потребности1.Номенклатура
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Потребности.ИнтернетМагазин,
	               |	ВТ_Потребности.СкладРаспред,
	               |	ВТ_Потребности.СкладРезерва,
	               |	ВТ_Потребности.Номенклатура,
	               |	ВТ_Потребности.Потребность
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СпрНоменклатура.Ссылка КАК Номенклатура,
	               |	СпрХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
	               |	ВТ_ОстаткиКРаспределению.СкладРаспред,
	               |	ВТ_ОстаткиКРаспределению.КоличествоОстаток,
	               |	ВТ_ОстаткиКРаспределению.ЕдиницаИзмерения,
	               |	ВТ_ОстаткиКРаспределению.ДатаПроизводства
	               |ПОМЕСТИТЬ ВТ_ОстаткиКРаспределению
	               |ИЗ
	               |	ВТ_Товары КАК ВТ_ОстаткиКРаспределению
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
	               |		ПО ВТ_ОстаткиКРаспределению.Номенклатура = СпрНоменклатура.Ссылка
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК СпрХарактеристикиНоменклатуры
	               |		ПО ВТ_ОстаткиКРаспределению.Характеристика = СпрХарактеристикиНоменклатуры.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ОстаткиКРаспределению.СкладРаспред,
	               |	ВТ_ОстаткиКРаспределению.Номенклатура,
	               |	ВТ_ОстаткиКРаспределению.Характеристика,
	               |	ВТ_ОстаткиКРаспределению.КоличествоОстаток КАК Остаток,
	               |	СУММА(ВТ_ОстаткиКРаспределению1.КоличествоОстаток) КАК ОстатокНарастающимИтогом,
	               |	ВТ_ОстаткиКРаспределению.ДатаПроизводства
	               |ПОМЕСТИТЬ ВТ_ОстаткиКРаспределениюНарастающимИтогом
	               |ИЗ
	               |	ВТ_ОстаткиКРаспределению КАК ВТ_ОстаткиКРаспределению
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстаткиКРаспределению КАК ВТ_ОстаткиКРаспределению1
	               |		ПО ВТ_ОстаткиКРаспределению.СкладРаспред = ВТ_ОстаткиКРаспределению1.СкладРаспред
	               |			И ВТ_ОстаткиКРаспределению.Номенклатура = ВТ_ОстаткиКРаспределению1.Номенклатура
	               |			И ВТ_ОстаткиКРаспределению.Характеристика.Наименование <= ВТ_ОстаткиКРаспределению1.Характеристика.Наименование
	               |			И ВТ_ОстаткиКРаспределению.ДатаПроизводства <= ВТ_ОстаткиКРаспределению1.ДатаПроизводства
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ОстаткиКРаспределению.СкладРаспред,
	               |	ВТ_ОстаткиКРаспределению.Номенклатура,
	               |	ВТ_ОстаткиКРаспределению.Характеристика,
	               |	ВТ_ОстаткиКРаспределению.КоличествоОстаток,
	               |	ВТ_ОстаткиКРаспределению.ДатаПроизводства
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ПотребностиНарастающимИтогом.ИнтернетМагазин,
	               |	ВТ_ПотребностиНарастающимИтогом.СкладРаспред КАК СкладРаспред,
	               |	ВТ_ПотребностиНарастающимИтогом.СкладРезерва КАК СкладРезерва,
	               |	ВТ_ПотребностиНарастающимИтогом.Номенклатура КАК Номенклатура,
	               |	ВТ_ОстаткиКРаспределениюНарастающимИтогом.Характеристика КАК Характеристика,
	               |	ВТ_ПотребностиНарастающимИтогом.Потребность,
	               |	ВТ_ПотребностиНарастающимИтогом.ПотребностьНарастающимИтогом,
	               |	ВТ_ОстаткиКРаспределениюНарастающимИтогом.Остаток,
	               |	ВТ_ОстаткиКРаспределениюНарастающимИтогом.ОстатокНарастающимИтогом,
	               |	ВЫБОР
	               |		КОГДА ВТ_ОстаткиКРаспределениюНарастающимИтогом.ОстатокНарастающимИтогом - ВТ_ОстаткиКРаспределениюНарастающимИтогом.Остаток <= ВТ_ПотребностиНарастающимИтогом.ПотребностьНарастающимИтогом
	               |				И ВТ_ПотребностиНарастающимИтогом.ПотребностьНарастающимИтогом - ВТ_ПотребностиНарастающимИтогом.Потребность <= ВТ_ОстаткиКРаспределениюНарастающимИтогом.ОстатокНарастающимИтогом
	               |			ТОГДА ВТ_ПотребностиНарастающимИтогом.Потребность - ВЫБОР
	               |					КОГДА ВТ_ОстаткиКРаспределениюНарастающимИтогом.ОстатокНарастающимИтогом - ВТ_ОстаткиКРаспределениюНарастающимИтогом.Остаток - (ВТ_ПотребностиНарастающимИтогом.ПотребностьНарастающимИтогом - ВТ_ПотребностиНарастающимИтогом.Потребность) > 0
	               |						ТОГДА ВТ_ОстаткиКРаспределениюНарастающимИтогом.ОстатокНарастающимИтогом - ВТ_ОстаткиКРаспределениюНарастающимИтогом.Остаток - (ВТ_ПотребностиНарастающимИтогом.ПотребностьНарастающимИтогом - ВТ_ПотребностиНарастающимИтогом.Потребность)
	               |					ИНАЧЕ 0
	               |				КОНЕЦ - ВЫБОР
	               |					КОГДА ВТ_ПотребностиНарастающимИтогом.ПотребностьНарастающимИтогом - ВТ_ОстаткиКРаспределениюНарастающимИтогом.ОстатокНарастающимИтогом > 0
	               |						ТОГДА ВТ_ПотребностиНарастающимИтогом.ПотребностьНарастающимИтогом - ВТ_ОстаткиКРаспределениюНарастающимИтогом.ОстатокНарастающимИтогом
	               |					ИНАЧЕ 0
	               |				КОНЕЦ
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК КРезерву
	               |ПОМЕСТИТЬ ВТ_КРезервированию
	               |ИЗ
	               |	ВТ_ПотребностиНарастающимИтогом КАК ВТ_ПотребностиНарастающимИтогом
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ОстаткиКРаспределениюНарастающимИтогом КАК ВТ_ОстаткиКРаспределениюНарастающимИтогом
	               |		ПО ВТ_ПотребностиНарастающимИтогом.СкладРаспред = ВТ_ОстаткиКРаспределениюНарастающимИтогом.СкладРаспред
	               |			И ВТ_ПотребностиНарастающимИтогом.Номенклатура = ВТ_ОстаткиКРаспределениюНарастающимИтогом.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_КРезервированию.СкладРезерва КАК СкладРезерва,
	               |	ВТ_КРезервированию.Номенклатура,
	               |	ВТ_КРезервированию.Характеристика,
	               |	МАКСИМУМ(ВТ_КРезервированию.КРезерву) КАК Количество,
	               |	ВТ_ОстаткиКРаспределению.ЕдиницаИзмерения,
	               |	МАКСИМУМ(ВТ_ОстаткиКРаспределению.ДатаПроизводства) КАК ДатаПроизводства
	               |ИЗ
	               |	ВТ_ОстаткиКРаспределению КАК ВТ_ОстаткиКРаспределению
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_КРезервированию КАК ВТ_КРезервированию
	               |		ПО ВТ_ОстаткиКРаспределению.Номенклатура = ВТ_КРезервированию.Номенклатура
	               |			И ВТ_ОстаткиКРаспределению.Характеристика = ВТ_КРезервированию.Характеристика
	               |ГДЕ
	               |	ВТ_КРезервированию.КРезерву > 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_КРезервированию.СкладРезерва,
	               |	ВТ_КРезервированию.Номенклатура,
	               |	ВТ_КРезервированию.Характеристика,
	               |	ВТ_ОстаткиКРаспределению.ЕдиницаИзмерения
	               |ИТОГИ ПО
	               |	СкладРезерва";
	Запрос.УстановитьПараметр("ИнтрнетМагазины", ИнтернетМагазины);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Склад", Справочники.Склады.НайтиПоНаименованию("Тилси"));
	Запрос.УстановитьПараметр("СкладРаспред", Справочники.Склады.НайтиПоНаименованию("Тилси"));
	Запрос.УстановитьПараметр("ДатаПланаПродаж", НачалоДня(Дата + 3600*24));
	Запрос.УстановитьПараметр("ДляВсехИнтернетМагазинов", Истина);
	Запрос.УстановитьПараметр("ТекущаяДата", Дата);
	СкладРаспред = Справочники.Склады.НайтиПоКоду("000000316");
	Запрос.УстановитьПараметр("СЕРаспред", СкладРаспред.Владелец);
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		ЗаписатьВЛог("Нет распределенных остатков товаров", Лог, "Ошибка");
		Возврат Неопределено;
	КонецЕсли;
	РаспределенныеОстатки = Новый Массив;
	ВыборкаИМ = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"СкладРезерва");
	Пока ВыборкаИМ.Следующий() Цикл
		Остатки = Новый Структура;
		Остатки.Вставить("Склад", ВыборкаИМ.СкладРезерва);
		Остатки.Вставить("РасходныйОрдер", Неопределено);
		Остатки.Вставить("ИнтернетМагазин", Неопределено);
		Остатки.Вставить("Товары", Новый Массив);
		Выборка = ВыборкаИМ.Выбрать();
		Пока Выборка.Следующий() Цикл
			СтрокаТоваров = Новый Структура;
			СтрокаТоваров.Вставить("Номенклатура",Неопределено);
			СтрокаТоваров.Вставить("Характеристика",Неопределено);
			СтрокаТоваров.Вставить("Количество",Неопределено);
			СтрокаТоваров.Вставить("ЕдиницаИзмерения",Неопределено);
			СтрокаТоваров.Вставить("ДатаПроизводства",Неопределено);
			ЗаполнитьЗначенияСвойств(СтрокаТоваров,Выборка);
			Остатки.Товары.Добавить(СтрокаТоваров);
		КонецЦикла;
		РаспределенныеОстатки.Добавить(Остатки);
	КонецЦикла;
	ЗаписатьВЛог("Распределеные остаки получены", Лог);
	Возврат РаспределенныеОстатки;
КонецФункции

Функция ПолучитьМассивИнтернетМагазинов(Лог)
	Если Лог.Ошибка Тогда
		Возврат Неопределено;
	КонецЕсли;
	ЗаписатьВЛог("Получаем список интернет магазинов", Лог);
	ИнтернетМагазины = Новый Массив;
	ИнтернетМагазины.Добавить(Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("1687П_Интернет-Магазин_Коммунарка_А").Ссылка);
	СписокИМ = "";
	Для каждого ИМ из ИнтернетМагазины Цикл
		СписокИМ = СписокИМ + ИМ + ", ";
	КонецЦикла;
	ЗаписатьВЛог("Получены следующие интернет магазины: " + СписокИМ, Лог);
	Возврат ИнтернетМагазины;
КонецФункции

Процедура СкорректироватьРасходныеОрдера(МассивЗаказов, ТекДата, Лог)
	Если Лог.Ошибка ИЛИ МассивЗаказов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	ЗаписатьВЛог("Начинаем корректировку Расходных Ордеров", Лог);
	МассивИнтернетМагазинов = ПолучитьМассивИнтернетМагазинов(Лог);
	ЗаписатьВЛог("Объединяем заказы в единую таблицу", Лог);
	ТЗ_Заказы = Новый ТаблицаЗначений;
	ТЗ_Заказы.Колонки.Добавить("ИнтернетМагазин", Новый ОписаниеТипов("СправочникСсылка.СтруктурныеЕдиницы"));
	ТЗ_Заказы.Колонки.Добавить("PLU", Новый ОписаниеТипов("Строка"));
	ТЗ_Заказы.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	ТЗ_Заказы.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	Для каждого Заказ из МассивЗаказов цикл
		Если Заказ.Магазин <> Неопределено Тогда
			Для каждого СтрокаЗаказа из Заказ.Строки цикл
				НоваяСтрока = ТЗ_Заказы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗаказа);
				НоваяСтрока.PLU = СтрЗаменить(НоваяСтрока.PLU," ","");
				НоваяСтрока.ИнтернетМагазин = Заказ.Магазин;
				Сообщить("" + НоваяСтрока.ИнтернетМагазин + "    " + НоваяСтрока.PLU + "    " + НоваяСтрока.Наименование + "    " + НоваяСтрока.Количество + "    ");
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	ЗаписатьВЛог("Найдем существующие расходные ордера, извлечем их содержимое и сравним с таблицей заказов", Лог);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТЗ.ИнтернетМагазин КАК ИнтернетМагазин,
	               |	ТЗ.PLU КАК PLU,
	               |	ТЗ.Наименование КАК Наименование,
	               |	ТЗ.Количество КАК Количество
	               |ПОМЕСТИТЬ ВТ_ЗаказыНеОбработаные
	               |ИЗ
	               |	&ТЗ КАК ТЗ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗаказыНеОбработаные.ИнтернетМагазин КАК ТорговаяТочка,
	               |	МАКСИМУМ(ВТ_ЗаказыНеОбработаные.Наименование) КАК Наименование,
	               |	СУММА(ВТ_ЗаказыНеОбработаные.Количество) КАК КоличествоЗаказано,
	               |	КонтурEDI_СоответствияТоваров.Номенклатура КАК Номенклатура,
	               |	КонтурEDI_СоответствияТоваров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	МАКСИМУМ(ВЫРАЗИТЬ(ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, 0) КАК ЧИСЛО(15, 3))) КАК КвантПоставки
	               |ПОМЕСТИТЬ ВТ_Заказ
	               |ИЗ
	               |	ВТ_ЗаказыНеОбработаные КАК ВТ_ЗаказыНеОбработаные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтурEDI_СоответствияТоваров КАК КонтурEDI_СоответствияТоваров
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |			ПО КонтурEDI_СоответствияТоваров.ХарактеристикаНоменклатуры = ЗначенияСвойствОбъектов.Объект
	               |		ПО ((ВЫРАЗИТЬ(ВТ_ЗаказыНеОбработаные.PLU КАК СТРОКА(36))) = (ВЫРАЗИТЬ(КонтурEDI_СоответствияТоваров.КодТовараПартнера КАК СТРОКА(36))))
	               |ГДЕ
	               |	ВТ_ЗаказыНеОбработаные.ИнтернетМагазин В(&ИнтернетМагазины)
	               |	И ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ЗаказыНеОбработаные.ИнтернетМагазин,
	               |	КонтурEDI_СоответствияТоваров.Номенклатура,
	               |	КонтурEDI_СоответствияТоваров.ХарактеристикаНоменклатуры
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РасходныйОрдерСкладТовары.Ссылка,
	               |	РасходныйОрдерСкладТовары.Номенклатура,
	               |	РасходныйОрдерСкладТовары.Характеристика,
	               |	РасходныйОрдерСкладТовары.ЕдиницаИзмерения,
	               |	РасходныйОрдерСкладТовары.Количество,
	               |	РасходныйОрдерСкладТовары.ДатаПроизводства,
	               |	РасходныйОрдерСкладТовары.Ссылка.Получатель
	               |ПОМЕСТИТЬ ВТ_РО
	               |ИЗ
	               |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
	               |ГДЕ
	               |	РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
	               |	И РасходныйОрдерСкладТовары.Ссылка.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&Дата, ДЕНЬ) И КОНЕЦПЕРИОДА(&Дата, ДЕНЬ)
	               |	И РасходныйОрдерСкладТовары.Ссылка.Получатель В(&ИнтернетМагазины)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_РО.Ссылка КАК РасходныйОрдер,
	               |	ВТ_РО.Номенклатура,
	               |	ВТ_РО.Характеристика,
	               |	ВТ_РО.ЕдиницаИзмерения,
	               |	ВЫБОР
	               |		КОГДА ВТ_Заказ.КвантПоставки = 0
	               |				ИЛИ ВТ_Заказ.КвантПоставки ЕСТЬ NULL
	               |			ТОГДА ЕСТЬNULL(ВТ_Заказ.КоличествоЗаказано, 0)
	               |		КОГДА ЕСТЬNULL(ВТ_Заказ.КоличествоЗаказано, 0) / ВТ_Заказ.КвантПоставки - (ВЫРАЗИТЬ(ЕСТЬNULL(ВТ_Заказ.КоличествоЗаказано, 0) / ВТ_Заказ.КвантПоставки КАК ЧИСЛО(15, 0))) = 0
	               |			ТОГДА ЕСТЬNULL(ВТ_Заказ.КоличествоЗаказано, 0)
	               |		ИНАЧЕ ((ВЫРАЗИТЬ(ЕСТЬNULL(ВТ_Заказ.КоличествоЗаказано, 0) / ВТ_Заказ.КвантПоставки КАК ЧИСЛО(15, 0))) + 1) * ВТ_Заказ.КвантПоставки
	               |	КОНЕЦ КАК КоличествоЗаказаноеСУчетомКвантов,
	               |	ВТ_РО.ДатаПроизводства,
	               |	ВТ_РО.Количество КАК КоличествоРО
	               |ПОМЕСТИТЬ ВТ
	               |ИЗ
	               |	ВТ_РО КАК ВТ_РО
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Заказ КАК ВТ_Заказ
	               |		ПО ВТ_РО.Получатель = ВТ_Заказ.ТорговаяТочка
	               |			И ВТ_РО.Номенклатура = ВТ_Заказ.Номенклатура
	               |			И ВТ_РО.Характеристика = ВТ_Заказ.ХарактеристикаНоменклатуры
	               |
	               |	
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ.РасходныйОрдер КАК РасходныйОрдер,
	               |	ВТ.Номенклатура,
	               |	ВТ.Характеристика,
	               |	ВТ.ЕдиницаИзмерения,
	               |	ВЫБОР
	               |		КОГДА ВТ.КоличествоРО <= ВТ.КоличествоЗаказаноеСУчетомКвантов
	               |			ТОГДА ВТ.КоличествоРО
	               |		ИНАЧЕ ВТ.КоличествоЗаказаноеСУчетомКвантов
	               |	КОНЕЦ КАК КоличествоОставляемое,
	               |	ВТ.ДатаПроизводства,
	               |	ВЫБОР
	               |		КОГДА ВТ.КоличествоРО > ВТ.КоличествоЗаказаноеСУчетомКвантов
	               |			ТОГДА ВТ.КоличествоРО - ВТ.КоличествоЗаказаноеСУчетомКвантов
	               |		ИНАЧЕ 0
	               |	КОНЕЦ КАК КоличествоПерераспределяемое
	               |ИЗ
	               |	ВТ КАК ВТ
	               |ИТОГИ ПО
	               |	РасходныйОрдер";
	Запрос.УстановитьПараметр("Дата", ТекДата);
	Запрос.УстановитьПараметр("ИнтернетМагазины", МассивИнтернетМагазинов);
	Запрос.УстановитьПараметр("ТЗ", ТЗ_Заказы);
	Рез = Запрос.Выполнить();  
	Если Рез.Пустой() Тогда
		ЗаписатьВЛог("Нет данных для корректировки Расходных ордеров", Лог, "Ошибка");
		Возврат;
	КонецЕсли;
	ЗаписатьВЛог("Произведем корреткировку Расходных ордеров", Лог);	
	ВыборкаРасходныйОрдер = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"РасходныйОрдер");
	Пока ВыборкаРасходныйОрдер.Следующий() цикл
		РасходныйОрдер = ВыборкаРасходныйОрдер.РасходныйОрдер.ПолучитьОбъект();
		РасходныйОрдер.Товары.Очистить();
		Выборка = ВыборкаРасходныйОрдер.Выбрать();
		Пока Выборка.Следующий() цикл
			Если ЗначениеЗаполнено(Выборка.КоличествоОставляемое) Тогда
				НоваяСтрока = РасходныйОрдер.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
				НоваяСтрока.Количество = Выборка.КоличествоОставляемое;
			КонецЕсли;
		КонецЦикла;
		Попытка
			ЗаписатьВЛог("Записываем Расходный ордер", Лог);
	    	РасходныйОрдер.Записать(РежимЗаписиДокумента.Проведение);
			ЗаписатьВЛог("Расходный ордер " + РасходныйОрдер + " записан ", Лог);
		Исключение
			ЗаписатьВЛог(ОписаниеОшибки() , Лог, "Ошибка");
		КонецПопытки;
	КонецЦикла;
	ЗаписатьВЛог("Создадим расходный ордер из освободившихся товаров", Лог);
	ТоварыКПерераспределению = Новый Массив;
	Выборка = Рез.Выбрать();
	Остатки = Новый Структура;
	Остатки.Вставить("ИнтернетМагазин", Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("1577П_Кутузовский57"));
	Остатки.Вставить("РасходныйОрдер", Неопределено);
	Остатки.Вставить("Товары", Новый Массив);
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.КоличествоПерераспределяемое) Тогда
			СтрокаТоваров = Новый Структура;
			СтрокаТоваров.Вставить("Номенклатура",Неопределено);
			СтрокаТоваров.Вставить("Характеристика",Неопределено);
			СтрокаТоваров.Вставить("Количество",Неопределено);
			СтрокаТоваров.Вставить("ЕдиницаИзмерения",Неопределено);
			СтрокаТоваров.Вставить("ДатаПроизводства",Неопределено);
			ЗаполнитьЗначенияСвойств(СтрокаТоваров,Выборка);
			СтрокаТоваров.Количество = Выборка.КоличествоПерераспределяемое;
			Остатки.Товары.Добавить(СтрокаТоваров);
		КонецЕсли;
	КонецЦикла;
	ТоварыКПерераспределению.Добавить(Остатки);
	СоздатьРасходныеОрдеры(ТоварыКПерераспределению, ТекДата, Лог);
КонецПроцедуры

Процедура ЗагрузитьЗаказыВРегистрРаспределениеПоТТ(МассивЗаказов, Лог)
	Если Лог.Ошибка ИЛИ МассивЗаказов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	ЗаписатьВЛог("Объединяем заказы в единую таблицу", Лог);
	ТЗ_Заказы = Новый ТаблицаЗначений;
	ТЗ_Заказы.Колонки.Добавить("ИнтернетМагазин", Новый ОписаниеТипов("СправочникСсылка.СтруктурныеЕдиницы"));
	ТЗ_Заказы.Колонки.Добавить("PLU", Новый ОписаниеТипов("Строка"));
	ТЗ_Заказы.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	ТЗ_Заказы.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	Для каждого Заказ из МассивЗаказов цикл
		Если Заказ.Магазин <> НЕопределено Тогда
			Для каждого СтрокаЗаказа из Заказ.Строки цикл
				НоваяСтрока = ТЗ_Заказы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗаказа);
				НоваяСтрока.PLU = СтрЗаменить(НоваяСтрока.PLU," ","");
				НоваяСтрока.ИнтернетМагазин = Заказ.Магазин;
				Сообщить("" + НоваяСтрока.ИнтернетМагазин + "    " + НоваяСтрока.PLU + "    " + НоваяСтрока.Наименование + "    " + НоваяСтрока.Количество + "    ");
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	ЗаписатьВЛог("Получаем распределение по магазинам исходя из заказа и зарезервирвоаных остатков", Лог);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Склады.Ссылка КАК СкладРезерва,
	               |	Склады.Владелец КАК ИнтернетМагазин
	               |ПОМЕСТИТЬ ВТ_Склады
	               |ИЗ
	               |	Справочник.Склады КАК Склады
	               |ГДЕ
	               |	(&ДляВсехИнтернетМагазинов
	               |			ИЛИ Склады.Владелец В (&ИнтернетМагазины))
	               |	И Склады.ЭтоСкладРезерваИнтернетМагазина = ИСТИНА
	               |	И Склады.ПометкаУдаления = ЛОЖЬ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗ.ИнтернетМагазин КАК ИнтернетМагазин,
	               |	ТЗ.PLU КАК PLU,
	               |	ТЗ.Наименование КАК Наименование,
	               |	ТЗ.Количество КАК Количество
	               |ПОМЕСТИТЬ ВТ_ЗаказыНеОбработаные
	               |ИЗ
	               |	&ТЗ КАК ТЗ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗаказыНеОбработаные.ИнтернетМагазин КАК ТорговаяТочка,
	               |	ВТ_ЗаказыНеОбработаные.Наименование,
	               |	ВТ_ЗаказыНеОбработаные.Количество КАК КоличествоЗаказано,
	               |	ВТ_Склады.СкладРезерва КАК СкладРезерва,
	               |	КонтурEDI_СоответствияТоваров.Номенклатура КАК Номенклатура,
	               |	КонтурEDI_СоответствияТоваров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры
	               |ПОМЕСТИТЬ ВТ_Заказ
	               |ИЗ
	               |	ВТ_ЗаказыНеОбработаные КАК ВТ_ЗаказыНеОбработаные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Склады КАК ВТ_Склады
	               |		ПО ВТ_ЗаказыНеОбработаные.ИнтернетМагазин = ВТ_Склады.ИнтернетМагазин
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтурEDI_СоответствияТоваров КАК КонтурEDI_СоответствияТоваров
	               |		ПО ((ВЫРАЗИТЬ(ВТ_ЗаказыНеОбработаные.PLU КАК СТРОКА(36))) = (ВЫРАЗИТЬ(КонтурEDI_СоответствияТоваров.КодТовараПартнера КАК СТРОКА(36))))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Заказ.ТорговаяТочка КАК ТорговаяТочка,
	               |	ВТ_Заказ.СкладРезерва,
	               |	ВТ_Заказ.Номенклатура,
	               |	ВТ_Заказ.ХарактеристикаНоменклатуры КАК Характеристика,
	               |	СУММА(ВТ_Заказ.КоличествоЗаказано) КАК Нужно,
	               |	СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК Запас,
	               |	ВЫБОР
	               |		КОГДА ТоварыНаСкладахОстатки.КоличествоОстаток >= ВТ_Заказ.КоличествоЗаказано
	               |			ТОГДА ВТ_Заказ.КоличествоЗаказано
	               |		ИНАЧЕ ТоварыНаСкладахОстатки.КоличествоОстаток
	               |	КОНЕЦ КАК Количество
	               |ИЗ
	               |	ВТ_Заказ КАК ВТ_Заказ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, ) КАК ТоварыНаСкладахОстатки
	               |		ПО ВТ_Заказ.СкладРезерва = ТоварыНаСкладахОстатки.Склад
	               |			И ВТ_Заказ.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	               |			И ВТ_Заказ.ХарактеристикаНоменклатуры = ТоварыНаСкладахОстатки.Характеристика
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Заказ.СкладРезерва,
	               |	ВТ_Заказ.Номенклатура,
	               |	ВТ_Заказ.ХарактеристикаНоменклатуры,
	               |	ВЫБОР
	               |		КОГДА ТоварыНаСкладахОстатки.КоличествоОстаток >= ВТ_Заказ.КоличествоЗаказано
	               |			ТОГДА ВТ_Заказ.КоличествоЗаказано
	               |		ИНАЧЕ ТоварыНаСкладахОстатки.КоличествоОстаток
	               |	КОНЕЦ,
	               |	ВТ_Заказ.ТорговаяТочка
	               |ИТОГИ ПО
	               |	ТорговаяТочка";
	Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	Запрос.УстановитьПараметр("ТЗ", ТЗ_Заказы);
	Запрос.УстановитьПараметр("ДляВсехИнтернетМагазинов", ИСТИНА);
	Запрос.УстановитьПараметр("ИнтернетМагазины", "");
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		ЗаписатьВЛог("Нет распределенных товаров", Лог, "Ошибка");
		Возврат;
	КонецЕсли;
	
	//Сообщить("Количество " + ТЗ_Заказы.Количество());
	//Сообщить("Количество " + Выборка.Количество());
	
	ВыборкаТорговаяТочка = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ТорговаяТочка");
	Пока ВыборкаТорговаяТочка.Следующий() цикл
		НаборЗаписей = РегистрыСведений.ОстаткиРаспределенныеПоТТ.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ТорговаяТочка.Установить(ВыборкаТорговаяТочка.ТорговаяТочка);
		НаборЗаписей.Отбор.Дата.Установить(НачалоДня(ТекущаяДата()));
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		Выборка = ВыборкаТорговаяТочка.Выбрать();
		Пока Выборка.Следующий() цикл
			//Сообщить("" + Выборка.СкладРезерва + "    " + Выборка.Номенклатура + "    " + Выборка.Характеристика + "    " + Выборка.КоличествоРаспределено);	
			НоваяЗапись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			НоваяЗапись.Дата = НачалоДня(ТекущаяДата());
		КонецЦикла;
		НаборЗаписей.Записать();
	КонецЦикла;
КонецПроцедуры

Процедура УведомитьСкладыОСозданииРасходныхОрдеров(РаспределенныеОстатки, ТекДата, Лог)
	Если Лог.Ошибка или РаспределенныеОстатки.Количество() = 0 Тогда
		ЗаписатьВЛог("Нет распределенных остатков товаров", Лог, "Ошибка");
		Возврат;
	КонецЕсли;
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("РасходныйОрдер", Новый ОписаниеТипов("ДокументСсылка.РасходныйОрдерСклад"));
	Для Каждого Распределение из РаспределенныеОстатки Цикл
		Если ЗначениеЗаполнено(Распределение.РасходныйОрдер) Тогда
			 Стр = ТЗ.Добавить();
			 Стр.РасходныйОрдер = Распределение.РасходныйОрдер;
		КонецЕсли;
	КонецЦикла;
	Если ТЗ.Количество() > 0 Тогда
		ЗаписатьВЛог("Уведомим склады о созданных расходных ордерах", Лог);
		Почта = ПодключитсяКПочте("zakazIM@tealsy.ru",Лог);
		Письмо = Новый ИнтернетПочтовоеСообщение;
		Письмо.Тема = "Созданы расходные ордера для интернет магазинов";
		Письмо.ИмяОтправителя  	= "zakazIM@tealsy.ru";
		Письмо.Отправитель     	= "zakazIM@tealsy.ru";
		ТекстПисьма = "Для обеспечения интернет магазинов товарами, были созданы следующие Расходные ордера:";
		Для каждого Стр из ТЗ Цикл
			ТекстПисьма = ТекстПисьма + Символы.ПС + Стр.РасходныйОрдер;
		КонецЦикла;
		ТекстСообщения = Письмо.Тексты.Добавить(ТекстПисьма);
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = "grek@automacon.ru";
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = "miha@automacon.ru";
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = "operator.2013@list.ru";
		Попытка
			Почта.Послать(Письмо);
		Исключение
			ЗаписатьВЛог(ОписаниеОшибки() , Лог, "Ошибка");
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

Процедура СкорректироватьРейсы(РаспределенныеОстатки, ТекДата, Лог) 
	Если Лог.Ошибка или РаспределенныеОстатки.Количество() = 0 Тогда
		ЗаписатьВЛог("Нет распределенных остатков товаров", Лог, "Ошибка");
		Возврат;
	КонецЕсли;
	ЗаписатьВЛог("Найдем и скорректируем Маршрутные листы", Лог);
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("ИнтернетМагазин", Новый ОписаниеТипов("СправочникСсылка.СтруктурныеЕдиницы"));
	ТЗ.Колонки.Добавить("РасходныйОрдер", Новый ОписаниеТипов("ДокументСсылка.РасходныйОрдерСклад"));
	Для Каждого Распределение из РаспределенныеОстатки Цикл
		Если ЗначениеЗаполнено(Распределение.РасходныйОрдер) И ЗначениеЗаполнено(Распределение.ИнтернетМагазин) Тогда
			 Стр = ТЗ.Добавить();
			 Стр.ИнтернетМагазин = Распределение.ИнтернетМагазин;
			 Стр.РасходныйОрдер = Распределение.РасходныйОрдер;
		КонецЕсли;
	КонецЦикла;
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	ТЗ.ИнтернетМагазин КАК ИнтернетМагазин,
	                |	ТЗ.РасходныйОрдер КАК РасходныйОрдер
	                |ПОМЕСТИТЬ ВТ
	                |ИЗ
	                |	&ТЗ КАК ТЗ
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ВТ.ИнтернетМагазин,
	                |	ВТ.РасходныйОрдер,
	                |	МаршрутныйЛистТорговыеТочки.Ссылка КАК МаршрутныйЛист
	                |ИЗ
	                |	ВТ КАК ВТ
	                |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛист.ТорговыеТочки КАК МаршрутныйЛистТорговыеТочки
	                |		ПО ВТ.ИнтернетМагазин = МаршрутныйЛистТорговыеТочки.СтруктурнаяЕдиница
	                |ГДЕ
	                |	МаршрутныйЛистТорговыеТочки.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	                |	И МаршрутныйЛистТорговыеТочки.Ссылка.Проведен = ИСТИНА";
	Запрос.УстановитьПараметр("ТЗ", ТЗ);
	Запрос.УстановитьПараметр("ДатаНач",НачалоДня(ТекДата + 3600*24));
	Запрос.УстановитьПараметр("ДатаКон",КонецДня(ТекДата + 3600*24));
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		ЗаписатьВЛог("Ненайдены маршрутные листы", Лог);
		Возврат;
	КонецЕсли;
	Выборка = Рез.Выбрать();
	Пока Выборка.Следующий() цикл
		Рейс = Выборка.МаршрутныйЛист.ПолучитьОбъект();
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Документ", Выборка.РасходныйОрдер);
		НайденныеСтроки = Рейс.РасходныеОрдера.НайтиСтроки(ПараметрыОтбора);
		Если НайденныеСтроки.Количество() = 0 Тогда
			НоваяСтрока = Рейс.РасходныеОрдера.Добавить();
			НоваяСтрока.Документ = Выборка.РасходныйОрдер;
			Попытка
				ЗаписатьВЛог("Добавляем в Маршрутный Лист " + Рейс + " Расходный ордер " + Выборка.РасходныйОрдер, Лог);
	    		Рейс.Записать(РежимЗаписиДокумента.Проведение);
				ЗаписатьВЛог("Маршрутный Лист " + Рейс + " записан ", Лог);
			Исключение
				ЗаписатьВЛог(ОписаниеОшибки() , Лог, "Ошибка");
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура СоздатьРасходныеОрдераПоЗаказам(МассивЗаказов, ТекДата, Лог, МагазинДляОтправкиОстатковРаспределения = Неопределено)
	Если Лог.Ошибка ИЛИ МассивЗаказов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	ЗаписатьВЛог("Объединяем заказы в единую таблицу", Лог);
	ТЗ_Заказы = Новый ТаблицаЗначений;
	ТЗ_Заказы.Колонки.Добавить("ИнтернетМагазин", Новый ОписаниеТипов("СправочникСсылка.СтруктурныеЕдиницы"));
	ТЗ_Заказы.Колонки.Добавить("PLU", Новый ОписаниеТипов("Строка"));
	ТЗ_Заказы.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	ТЗ_Заказы.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	Для каждого Заказ из МассивЗаказов цикл
		Если ЗначениеЗаполнено(Заказ.Магазин) Тогда
			Для каждого СтрокаЗаказа из Заказ.Строки цикл
				НоваяСтрока = ТЗ_Заказы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗаказа);
				НоваяСтрока.PLU = СтрЗаменить(НоваяСтрока.PLU," ","");
				НоваяСтрока.ИнтернетМагазин = Заказ.Магазин;
				Сообщить("" + НоваяСтрока.ИнтернетМагазин + "    " + НоваяСтрока.PLU + "    " + НоваяСтрока.Наименование + "    " + НоваяСтрока.Количество + "    ");
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	ТЗ_Заказы.Свернуть("ИнтернетМагазин, PLU, Наименование","Количество");
	ЗаписатьВЛог("Получаем распределение по магазинам исходя из заказа и зарезервирвоаных остатков", Лог);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Склады.Ссылка КАК СкладРезерва,
	               |	Склады.Владелец КАК ИнтернетМагазин
	               |ПОМЕСТИТЬ ВТ_Склады
	               |ИЗ
	               |	Справочник.Склады КАК Склады
	               |ГДЕ
	               |	(&ДляВсехИнтернетМагазинов
	               |			ИЛИ Склады.Владелец В (&ИнтернетМагазины))
	               |	И Склады.ЭтоСкладРезерваИнтернетМагазина = ИСТИНА
	               |	И Склады.ПометкаУдаления = ЛОЖЬ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗ.ИнтернетМагазин КАК ИнтернетМагазин,
	               |	ТЗ.PLU КАК PLU,
	               |	ТЗ.Наименование КАК Наименование,
	               |	ТЗ.Количество КАК Количество
	               |ПОМЕСТИТЬ ВТ_ЗаказыНеОбработаные
	               |ИЗ
	               |	&ТЗ КАК ТЗ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗаказыНеОбработаные.ИнтернетМагазин КАК ТорговаяТочка,
	               |	ВТ_ЗаказыНеОбработаные.Наименование,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(НормативныйКвантУпаковкиСрезПоследних.Квант, 0) = 0
	               |			ТОГДА ВТ_ЗаказыНеОбработаные.Количество
	               |		КОГДА ВТ_ЗаказыНеОбработаные.Количество / (ВЫРАЗИТЬ(НормативныйКвантУпаковкиСрезПоследних.Квант КАК ЧИСЛО(15, 3))) - (ВЫРАЗИТЬ(ВТ_ЗаказыНеОбработаные.Количество / (ВЫРАЗИТЬ(НормативныйКвантУпаковкиСрезПоследних.Квант КАК ЧИСЛО(15, 3))) КАК ЧИСЛО(15, 0))) = 0
	               |			ТОГДА ВТ_ЗаказыНеОбработаные.Количество
	               |		ИНАЧЕ (ВЫРАЗИТЬ(ВТ_ЗаказыНеОбработаные.Количество / (ВЫРАЗИТЬ(НормативныйКвантУпаковкиСрезПоследних.Квант КАК ЧИСЛО(15, 3))) + 0.5 КАК ЧИСЛО(15, 0))) * (ВЫРАЗИТЬ(НормативныйКвантУпаковкиСрезПоследних.Квант КАК ЧИСЛО(15, 3)))
	               |	КОНЕЦ КАК КоличествоЗаказано,
	               |	ВТ_Склады.СкладРезерва КАК СкладРезерва,
	               |	КонтурEDI_СоответствияТоваров.Номенклатура КАК Номенклатура,
	               |	КонтурEDI_СоответствияТоваров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	НормативныйКвантУпаковкиСрезПоследних.Квант КАК КвантПоставки
	               |ПОМЕСТИТЬ ВТ_Заказ
	               |ИЗ
	               |	ВТ_ЗаказыНеОбработаные КАК ВТ_ЗаказыНеОбработаные
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Склады КАК ВТ_Склады
	               |		ПО ВТ_ЗаказыНеОбработаные.ИнтернетМагазин = ВТ_Склады.ИнтернетМагазин
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтурEDI_СоответствияТоваров КАК КонтурEDI_СоответствияТоваров
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |			ПО КонтурEDI_СоответствияТоваров.ХарактеристикаНоменклатуры = ЗначенияСвойствОбъектов.Объект
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйКвантУпаковки.СрезПоследних КАК НормативныйКвантУпаковкиСрезПоследних
	               |			ПО КонтурEDI_СоответствияТоваров.ХарактеристикаНоменклатуры = НормативныйКвантУпаковкиСрезПоследних.Характеристика
	               |				И (&СЕРаспред = НормативныйКвантУпаковкиСрезПоследних.Склад)
	               |		ПО ((ВЫРАЗИТЬ(ВТ_ЗаказыНеОбработаные.PLU КАК СТРОКА(36))) = (ВЫРАЗИТЬ(КонтурEDI_СоответствияТоваров.КодТовараПартнера КАК СТРОКА(36))))
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Заказ.ТорговаяТочка КАК ТорговаяТочка,
	               |	ВТ_Заказ.СкладРезерва,
	               |	ВТ_Заказ.Номенклатура,
	               |	ВТ_Заказ.ХарактеристикаНоменклатуры КАК Характеристика,
	               |	СУММА(ЕСТЬNULL(ВТ_Заказ.КоличествоЗаказано, 0)) КАК НужноСУчетомКвантов,
	               |	СУММА(0) КАК Запас,
	               |	ТоварыНаСкладахОстатки.ЕдиницаИзмерения,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(ВТ_Заказ.КвантПоставки, 0) = 0
	               |			ТОГДА ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0)
	               |		КОГДА ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) / (ВЫРАЗИТЬ(ВТ_Заказ.КвантПоставки КАК ЧИСЛО(15, 3))) - (ВЫРАЗИТЬ(ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) / (ВЫРАЗИТЬ(ВТ_Заказ.КвантПоставки КАК ЧИСЛО(15, 3))) КАК ЧИСЛО(15, 0))) = 0
	               |			ТОГДА ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0)
	               |		ИНАЧЕ (ВЫРАЗИТЬ(ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) / (ВЫРАЗИТЬ(ВТ_Заказ.КвантПоставки КАК ЧИСЛО(15, 3))) - 0.5 КАК ЧИСЛО(15, 0))) * (ВЫРАЗИТЬ(ВТ_Заказ.КвантПоставки КАК ЧИСЛО(15, 3)))
	               |	КОНЕЦ КАК ЗапасСучетомКвантов,
	               |	ТоварыНаСкладахОстатки.ДатаПроизводства
	               |ПОМЕСТИТЬ ВТ
	               |ИЗ
	               |	ВТ_Заказ КАК ВТ_Заказ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(&Дата, ) КАК ТоварыНаСкладахОстатки
	               |		ПО ВТ_Заказ.СкладРезерва = ТоварыНаСкладахОстатки.Склад
	               |			И ВТ_Заказ.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	               |			И ВТ_Заказ.ХарактеристикаНоменклатуры = ТоварыНаСкладахОстатки.Характеристика
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_Заказ.СкладРезерва,
	               |	ВТ_Заказ.Номенклатура,
	               |	ВТ_Заказ.ХарактеристикаНоменклатуры,
	               |	ВТ_Заказ.ТорговаяТочка,
	               |	ТоварыНаСкладахОстатки.ЕдиницаИзмерения,
	               |	ТоварыНаСкладахОстатки.ДатаПроизводства,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(ВТ_Заказ.КвантПоставки, 0) = 0
	               |			ТОГДА ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0)
	               |		КОГДА ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) / (ВЫРАЗИТЬ(ВТ_Заказ.КвантПоставки КАК ЧИСЛО(15, 3))) - (ВЫРАЗИТЬ(ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) / (ВЫРАЗИТЬ(ВТ_Заказ.КвантПоставки КАК ЧИСЛО(15, 3))) КАК ЧИСЛО(15, 0))) = 0
	               |			ТОГДА ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0)
	               |		ИНАЧЕ (ВЫРАЗИТЬ(ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) / (ВЫРАЗИТЬ(ВТ_Заказ.КвантПоставки КАК ЧИСЛО(15, 3))) - 0.5 КАК ЧИСЛО(15, 0))) * (ВЫРАЗИТЬ(ВТ_Заказ.КвантПоставки КАК ЧИСЛО(15, 3)))
	               |	КОНЕЦ
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ТоварыНаСкладахОстатки.Склад.Владелец,
	               |	ТоварыНаСкладахОстатки.Склад,
	               |	ТоварыНаСкладахОстатки.Номенклатура,
	               |	ТоварыНаСкладахОстатки.Характеристика,
	               |	0,
	               |	ТоварыНаСкладахОстатки.КоличествоОстаток,
	               |	ТоварыНаСкладахОстатки.ЕдиницаИзмерения,
	               |	0,
	               |	ТоварыНаСкладахОстатки.ДатаПроизводства
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |			&Дата,
	               |			Склад В
	               |				(ВЫБРАТЬ
	               |					Склады.СкладРезерва
	               |				ИЗ
	               |					ВТ_Склады КАК Склады)) КАК ТоварыНаСкладахОстатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ.ТорговаяТочка,
	               |	ВТ.СкладРезерва,
	               |	ВТ.Номенклатура,
	               |	ВТ.Характеристика,
	               |	СУММА(ВТ.НужноСУчетомКвантов) КАК НужноСУчетомКвантов,
	               |	СУММА(ВТ.Запас) КАК Запас,
	               |	ВТ.ЕдиницаИзмерения,
	               |	СУММА(ВТ.ЗапасСучетомКвантов) КАК ЗапасСучетомКвантов,
	               |	ВТ.ДатаПроизводства
	               |ПОМЕСТИТЬ ВТ_Свернутая
	               |ИЗ
	               |	ВТ КАК ВТ
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ.ТорговаяТочка,
	               |	ВТ.СкладРезерва,
	               |	ВТ.Номенклатура,
	               |	ВТ.Характеристика,
	               |	ВТ.ЕдиницаИзмерения,
	               |	ВТ.ДатаПроизводства
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ЗначенияСвойствОбъектов.Значение,
	               |	ВТ_Свернутая.Номенклатура КАК Номенклатура
	               |ПОМЕСТИТЬ ВТ_РезервПоГрафикам
	               |ИЗ
	               |	ВТ_Свернутая КАК ВТ_Свернутая
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |		ПО ВТ_Свернутая.Номенклатура = ЗначенияСвойствОбъектов.Объект
	               |ГДЕ
	               |	ЗначенияСвойствОбъектов.Свойство = &СвойствоРезервироватьПоГрафикам
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ.ТорговаяТочка КАК ТорговаяТочка,
	               |	ВТ.СкладРезерва,
	               |	ВТ.Номенклатура,
	               |	ВТ.Характеристика,
	               |	СУММА(ВТ.НужноСУчетомКвантов) КАК НужноСУчетомКвантов,
	               |	СУММА(ВТ.Запас) КАК Запас,
	               |	ВТ.ЕдиницаИзмерения,
	               |	СУММА(ВТ.ЗапасСучетомКвантов) КАК ЗапасСучетомКвантов,
	               |	СУММА(ВЫБОР
	               |			КОГДА ВТ.Запас >= ВТ.НужноСУчетомКвантов
	               |				ТОГДА ВТ.НужноСУчетомКвантов
	               |			ИНАЧЕ ВТ.ЗапасСучетомКвантов
	               |		КОНЕЦ) КАК Количество,
	               |	ВТ.ДатаПроизводства,
	               |	ЕСТЬNULL(ВТ_РезервПоГрафикам.Значение, ЛОЖЬ) КАК РезервПоГрафикам
	               |ИЗ
	               |	ВТ_Свернутая КАК ВТ
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РезервПоГрафикам КАК ВТ_РезервПоГрафикам
	               |		ПО ВТ.Номенклатура = ВТ_РезервПоГрафикам.Номенклатура
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ.ТорговаяТочка,
	               |	ВТ.СкладРезерва,
	               |	ВТ.Номенклатура,
	               |	ВТ.Характеристика,
	               |	ВТ.ЕдиницаИзмерения,
	               |	ВТ.ДатаПроизводства,
	               |	ЕСТЬNULL(ВТ_РезервПоГрафикам.Значение, ЛОЖЬ)
	               |ИТОГИ ПО
	               |	ТорговаяТочка";
	Запрос.УстановитьПараметр("Дата", ТекДата);
	Запрос.УстановитьПараметр("ТЗ", ТЗ_Заказы);
	Запрос.УстановитьПараметр("ДляВсехИнтернетМагазинов", ИСТИНА);
	Запрос.УстановитьПараметр("ИнтернетМагазины", "");
	СкладРаспред = Справочники.Склады.НайтиПоКоду("000000316");
	Запрос.УстановитьПараметр("СЕРаспред", СкладРаспред.Владелец);
	Запрос.УстановитьПараметр("СвойствоРезервироватьПоГрафикам", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Резерв по графикам поставки для ИМ"));
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		ЗаписатьВЛог("Нет распределенных товаров", Лог, "Ошибка");
		Возврат;
	КонецЕсли;
	ЗаписатьВЛог("Запишем Расходные ордера", Лог);
	ТоварыДляИнтернетМагазинов = Новый Массив;
	ВыборкаТТ = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ТорговаяТочка");
	Пока ВыборкаТТ.Следующий() цикл
		Если НЕ ЗначениеЗаполнено(ВыборкаТТ.ТорговаяТочка) Тогда
			Продолжить;
		КонецЕсли;
		Остатки = Новый Структура;
		Остатки.Вставить("ИнтернетМагазин", ВыборкаТТ.ТорговаяТочка);
		Остатки.Вставить("РасходныйОрдер", Неопределено);
		Остатки.Вставить("Товары", Новый Массив);
		Выборка = ВыборкаТТ.Выбрать();
		Пока Выборка.Следующий() цикл
			Если ЗначениеЗаполнено(Выборка.Количество) Тогда
				СтрокаТоваров = Новый Структура;
				СтрокаТоваров.Вставить("Номенклатура",Неопределено);
				СтрокаТоваров.Вставить("Характеристика",Неопределено);
				СтрокаТоваров.Вставить("Количество",Неопределено);
				СтрокаТоваров.Вставить("ЕдиницаИзмерения",Неопределено);
				СтрокаТоваров.Вставить("ДатаПроизводства",Неопределено);
				ЗаполнитьЗначенияСвойств(СтрокаТоваров,Выборка);
				СтрокаТоваров.Количество = Выборка.Количество;
				Остатки.Товары.Добавить(СтрокаТоваров);
				СкладРезерва = Выборка.СкладРезерва;
			КонецЕсли;
			//Если ЗначениеЗаполнено(Выборка.Запас) Тогда 
			//	Если (Выборка.Запас - Выборка.Количество>0) И (НЕ Выборка.Номенклатура.Складируемая) Тогда
			//		СтрокаТоваров = Новый Структура;
			//		СтрокаТоваров.Вставить("Номенклатура",Неопределено);
			//		СтрокаТоваров.Вставить("Характеристика",Неопределено);
			//		СтрокаТоваров.Вставить("Количество",Неопределено);
			//		СтрокаТоваров.Вставить("ЕдиницаИзмерения",Неопределено);
			//		СтрокаТоваров.Вставить("ДатаПроизводства",Неопределено);
			//		ЗаполнитьЗначенияСвойств(СтрокаТоваров,Выборка);
			//		СтрокаТоваров.Количество = Выборка.Запас - Выборка.Количество;
			//		Остатки.Товары.Добавить(СтрокаТоваров);
			//		СкладРезерва = Выборка.СкладРезерва;
			//	КонецЕсли;
			//КонецЕсли;
		КонецЦикла;
		Остатки.Вставить("Склад", СкладРезерва);
		ТоварыДляИнтернетМагазинов.Добавить(Остатки);
	КонецЦикла;
	СоздатьПеремещения(ТоварыДляИнтернетМагазинов, "ВыбратьИзМассиваТоваров", Справочники.Склады.НайтиПоНаименованию("ТИЛСИ"), ТекДата, Лог);
	Для Каждого Стр из ТоварыДляИнтернетМагазинов Цикл
		Стр.Склад = Справочники.Склады.НайтиПоНаименованию("ТИЛСИ");
	КонецЦикла;
	СоздатьРасходныеОрдеры(ТоварыДляИнтернетМагазинов, ТекДата, Лог);
	
	ЗаписатьВЛог("Создадим расходный ордер из освободившихся товаров", Лог);
	ВыборкаТТ = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ТорговаяТочка");
	Пока ВыборкаТТ.Следующий() цикл
		ТоварыКПерераспределению = Новый Массив;
		Остатки = Новый Структура;
		Остатки.Вставить("ИнтернетМагазин", Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("1759П_Киевского Вокзала2"));//Тест
		Остатки.Вставить("РасходныйОрдер", Неопределено);
		Остатки.Вставить("Товары", Новый Массив);
				
		Выборка = ВыборкаТТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.Запас) Тогда 
				Если (Выборка.Запас - Выборка.Количество>0) И (НЕ Выборка.Номенклатура.Складируемая) И (НЕ Выборка.РезервПоГрафикам) Тогда
					СтрокаТоваров = Новый Структура;
					СтрокаТоваров.Вставить("Номенклатура",Неопределено);
					СтрокаТоваров.Вставить("Характеристика",Неопределено);
					СтрокаТоваров.Вставить("Количество",Неопределено);
					СтрокаТоваров.Вставить("ЕдиницаИзмерения",Неопределено);
					СтрокаТоваров.Вставить("ДатаПроизводства",Неопределено);
					ЗаполнитьЗначенияСвойств(СтрокаТоваров,Выборка);
					СтрокаТоваров.Количество = Выборка.Запас - Выборка.Количество;
					Остатки.Товары.Добавить(СтрокаТоваров);
					СкладРезерва = Выборка.СкладРезерва;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Остатки.Вставить("Склад", СкладРезерва);
		ТоварыКПерераспределению.Добавить(Остатки);
	КонецЦикла;
	СоздатьПеремещения(ТоварыКПерераспределению, "ВыбратьИзМассиваТоваров", Справочники.Склады.НайтиПоНаименованию("ТИЛСИ"), ТекДата, Лог);
	Для Каждого Стр из ТоварыКПерераспределению Цикл
		Стр.Склад = Справочники.Склады.НайтиПоНаименованию("ТИЛСИ");
	КонецЦикла;
	СоздатьРасходныеОрдеры(ТоварыКПерераспределению, ТекДата, Лог);
	
	ЗаписатьВЛог("Объединим массивы товаров для дальнейшей обработки", Лог);
	Для каждого Стр из ТоварыКПерераспределению Цикл
		ТоварыДляИнтернетМагазинов.Добавить(Стр);
	КонецЦикла;
	СкорректироватьРейсы(ТоварыДляИнтернетМагазинов, ТекДата, Лог);
	
	УведомитьСкладыОСозданииРасходныхОрдеров(ТоварыДляИнтернетМагазинов, ТекДата, Лог);
КонецПроцедуры

Функция ЗагрузитьЗаказИзВложения(Вложение, Лог)
	Если Лог.Ошибка ИЛИ Найти(Вложение.ИмяФайла, ".xlsx") = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	ЗаписатьВЛог("Начало загрузки вложения " + Вложение.ИмяФайла, Лог);
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xlsx");	
	Вложение.Данные.Записать(ИмяВременногоФайла);
	ЗаписатьВЛог("Вложение сохранено в " + ИмяВременногоФайла, Лог);
	ЗаписатьВЛог("Получение данных заявки из EXCEL " + ИмяВременногоФайла, Лог);
	Попытка
		Excel = Новый COMОбъект("Excel.Application");
		WB = Excel.Workbooks.Open(ИмяВременногоФайла);
		WS = WB.Worksheets(2); //указываем номер листа
		arrZakaz = WS.UsedRange.Value;  //передаём таблицу в переменную
		WB.Close(0);
		ЗаписатьВЛог("Данные получены", Лог);
		УдалитьФайлы(ИмяВременногоФайла);
		ЗаписатьВЛог("Удален временный файл " + ИмяВременногоФайла, Лог);
	Исключение
		ЗаписатьВЛог("Ошибка получения данных!", Лог, "Ошибка");
		Возврат Неопределено;
	КонецПопытки;
	//Разбираем заказ
	МассивКолонок = arrZakaz.Выгрузить(); //Выгружаем таблицу в массив
	ВсегоКолонок = МассивКолонок.Количество();
	ВсегоСтрок   = (МассивКолонок.Получить(0).Количество())-1;
	
	МассивСтрок = Новый Массив;
	Для строкаТП = 1 По всегоСтрок Цикл //Работаем со строкой
		НовСтрока = Новый Структура;
		НовСтрока.Вставить("PLU", СокрЛП(МассивКолонок.Получить(0).Получить(строкаТП)));
		НовСтрока.Вставить("Наименование", СокрЛП(МассивКолонок.Получить(1).Получить(строкаТП)));
		НовСтрока.Вставить("Количество", СокрЛП(МассивКолонок.Получить(2).Получить(строкаТП)));
		МассивСтрок.Добавить(НовСтрока);
	КонецЦикла;
	
	Заказ = Новый Структура;
	Заказ.Вставить("Строки",МассивСтрок);
	ТекстДляРазбора = Вложение.ИмяФайла;
	ТекстДляРазбора = СтрЗаменить(ТекстДляРазбора,"Заказанные_товары_","");
	ТекстДляРазбора = СтрЗаменить(ТекстДляРазбора,".xlsx","");
	ТекстДляРазбора = СтрЗаменить(ТекстДляРазбора,"_",Символы.ПС);
	Сообщить(ТекстДляРазбора);
	НомерМагазина = СтрПолучитьСтроку(ТекстДляРазбора, 3);
	Попытка
		Сообщить(НомерМагазина);
		Сообщить("ТТ " + Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("НомерСтороннейТочки",НомерМагазина));
		Заказ.Вставить("Магазин",Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("НомерСтороннейТочки",НомерМагазина));
	Исключение
		Заказ.Вставить("Магазин",Неопределено);
	КонецПопытки;
	//++Для Теста убрать потом
	Если Найти(Вложение.ИмяФайла, "_2950") > 0 Тогда  //Найти(Вложение.ИмяФайла, "Комунарка") > 0 ИЛИ 
		Заказ.Магазин = Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("1687П_Интернет-Магазин_Коммунарка_А").Ссылка 
	КонецЕсли;
	//--Для Теста убрать потом
	Возврат Заказ;
КонецФункции

Функция ПолучитьНовыеПисьма(Почта, Лог)	
	Если Лог.Ошибка Тогда
		Возврат Неопределено;
	КонецЕсли;
	ЗаписатьВЛог("Получаем заголовки новых писем", Лог);
	ПараметрыОтбораIMAP = Новый Структура;
	ПараметрыОтбораIMAP.Вставить("ПослеДатыОтправления", ТекущаяДата()-3600*12);
	ПараметрыОтбораIMAP.Вставить("Тема", "Заказанные товары");
	Заголовки = Почта.ПолучитьЗаголовки(ПараметрыОтбораIMAP);
	Если Заголовки.Количество() = 0 Тогда
		ЗаписатьВЛог("Нет новых писем!", Лог, "Ошибка");
		Возврат Неопределено;
	Иначе
		ЗаписатьВЛог("Заголовки новых письма получены", Лог);
		ЗаписатьВЛог("Получаем новые письма", Лог);
		Письма = Почта.Выбрать(Ложь, Заголовки, Истина);
		ЗаписатьВЛог("Новые письма получены", Лог);
		Возврат Письма;
	КонецЕсли;
КонецФункции

Функция СоздатьЛог()
	Лог = Новый Структура;
	Лог.Вставить("Статус","В работе");
	Лог.Вставить("Текст", "" + ТекущаяДата() + "    " + "Начало работы");
	Лог.Вставить("Ошибка", Ложь);
	Возврат Лог;
КонецФункции

Процедура ЗаписатьВЛог(НоваяЗаписьВЛог, Лог, Статус = Неопределено)
	Если Статус <> Неопределено Тогда
		Лог.Статус = Статус;
		Если Статус = "Ошибка" Тогда
			Лог.Ошибка = Истина;
		КонецЕсли;
	КонецЕсли;
	Лог.Текст = Лог.Текст + Символы.ПС + ТекущаяДата() + "    " + НоваяЗаписьВЛог;
КонецПроцедуры

Функция ПодключитсяКПочте(АдресЭлектроннойПочты, Лог)
	Если Лог.Ошибка Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	УчетнаяЗаписьЭлектроннойПочты = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоРеквизиту("АдресЭлектроннойПочты",АдресЭлектроннойПочты);
	Если НЕ ЗначениеЗаполнено(УчетнаяЗаписьЭлектроннойПочты) Тогда
		ЗаписатьВЛог("Учетная запись электронной почты с адресом " + АдресЭлектроннойПочты + " ненайдена!", Лог, "Ошибка");
		Возврат Неопределено;
	Иначе
		ЗаписатьВЛог("Найдена учетная запись электронной почты с адресом " + АдресЭлектроннойПочты, Лог);
	КонецЕсли;
	
	Профиль = Новый ИнтернетПочтовыйПрофиль;
	Профиль.АдресСервераSMTP = УчетнаяЗаписьЭлектроннойПочты.SMTPСервер;
	Профиль.АдресСервераPOP3 = УчетнаяЗаписьЭлектроннойПочты.POP3Сервер;
	Профиль.ПортSMTP = УчетнаяЗаписьЭлектроннойПочты.ПортSMTP;
	Профиль.ПортPOP3 = УчетнаяЗаписьЭлектроннойПочты.ПортPOP3;	
	Профиль.Пользователь = УчетнаяЗаписьЭлектроннойПочты.Логин;
	Профиль.Пароль = УчетнаяЗаписьЭлектроннойПочты.Пароль;
	
	Профиль.АдресСервераIMAP = "imap.yandex.ru";
	Профиль.ПортIMAP = 993;
	Профиль.ИспользоватьSSLIMAP = Истина;
	Профиль.ПарольIMAP = УчетнаяЗаписьЭлектроннойПочты.Пароль;
	Профиль.ПользовательIMAP = УчетнаяЗаписьЭлектроннойПочты.Логин;;
	Почта = Новый ИнтернетПочта;
	ЗаписатьВЛог("Подключаемся к почте", Лог);
	Попытка
		Почта.Подключиться(Профиль,ПротоколИнтернетПочты.IMAP);
	Исключение
		ЗаписатьВЛог(ОписаниеОшибки(), Лог, "Ошибка");
		Возврат Неопределено;
	КонецПопытки;
	ЗаписатьВЛог("Почта подключена", Лог);
	Возврат Почта;
КонецФункции

Процедура УведомитьОтветственных(Лог)
	Если Лог.Статус = "В работе" Тогда
		Лог.Статус = "Выполнено без ошибок";
	КонецЕсли;
	
	ВыводЛога = Лог.Статус + Символы.ПС + Символы.ПС + Лог.Текст;
	
	Почта = ПодключитсяКПочте("zakazIM@tealsy.ru",Лог);
	Письмо = Новый ИнтернетПочтовоеСообщение;
	Письмо.Тексты.Добавить(Лог.Статус + Символы.ПС + Символы.ПС + Лог.Текст);
	Письмо.Тема = "Загружены заказы по интернет магазинам";
	Письмо.Получатели.Добавить("Grek@automacon.ru");
	Письмо.Получатели.Добавить("Miha@automacon.ru");
	//Письмо.Получатели.Добавить("sklad@tealsy.ru");
	//Письмо.Получатели.Добавить("shim@tealsy.ru");
	//Письмо.Получатели.Добавить("mr-voroshilovsv@yandex.ru");
	//Письмо.Получатели.Добавить("larisa.kuznetsova@tealsy.ru");
	//Письмо.Получатели.Добавить("miha@automacon.ru");
	//Письмо.Получатели.Добавить("anna.ivanova@tealsy.ru");
	//Письмо.Получатели.Добавить("alina.kanina78@gmail.com");
	Попытка
		Почта.Послать(Письмо);
	Исключение
		ЗаписатьВЛог(ОписаниеОшибки() , Лог, "Ошибка");
	КонецПопытки;
	//Сообщить(Лог.Статус);
	//Сообщить(Лог.Текст);
КонецПроцедуры

Процедура ПриОткрытии()
	МагазинДляОтправкиОстатковРаспределения = Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("1607П_Раменки3").Ссылка;
КонецПроцедуры



Процедура СоздатьПеремещения(РаспределенныеОстатки, СкладОтправитель, СкладПолучатель, Дата, Лог)
	Если Лог.Ошибка или РаспределенныеОстатки.Количество() = 0 Тогда
		ЗаписатьВЛог("Нет распределенных остатков товаров", Лог, "Ошибка");
		Возврат;
	КонецЕсли;
	Для Каждого Распределение из РаспределенныеОстатки Цикл
		ЗаписатьВЛог("Создаем перемещение для " + Распределение.ИнтернетМагазин, Лог);
		Док = Документы.ПеремещениеСклад.СоздатьДокумент();
		Док.Дата = Дата;
		Док.СкладОтправитель = ?(СкладОтправитель = "ВыбратьИзМассиваТоваров", Распределение.Склад, СкладОтправитель); 
		Док.СкладПолучатель = ?(СкладПолучатель = "ВыбратьИзМассиваТоваров", Распределение.Склад, СкладПолучатель);
		Док.Комментарий = "Сформирован по распределению для Интернет магазинов";
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить("Номенклатура", Неопределено);
		ПараметрыОтбора.Вставить("Характеристика",Неопределено);
		Для каждого Стр из Распределение.Товары Цикл
			ЗаполнитьЗначенияСвойств(ПараметрыОтбора, Стр);
			НайденныеСтроки = Док.Товары.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество() = 0 Тогда
				НоваяСтрока = Док.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);
				НоваяСтрока.КоличествоОтправитель = Стр.Количество;
				НоваяСтрока.КоличествоПолучатель = Стр.Количество;
			КонецЕсли;
		КонецЦикла;
		Попытка
			ЗаписатьВЛог("Записываем перемещение", Лог);
	    	Док.Записать(РежимЗаписиДокумента.Проведение);
			ЗаписатьВЛог("Перемещение " + Док + " записан ", Лог);
		Исключение
			ЗаписатьВЛог(ОписаниеОшибки() , Лог, "Ошибка");
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

Процедура СоздатьВэбЗаказыПокупателей(МассивЗаказов, ТекДата, Лог)
	Если Лог.Ошибка ИЛИ МассивЗаказов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	ЗаписатьВЛог("Объединяем заказы в единую таблицу", Лог);
	ТЗ_Заказы = Новый ТаблицаЗначений;
	ТЗ_Заказы.Колонки.Добавить("ИнтернетМагазин", Новый ОписаниеТипов("СправочникСсылка.СтруктурныеЕдиницы"));
	ТЗ_Заказы.Колонки.Добавить("PLU", Новый ОписаниеТипов("Строка"));
	ТЗ_Заказы.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	ТЗ_Заказы.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	Для каждого Заказ из МассивЗаказов цикл
		Если ЗначениеЗаполнено(Заказ.Магазин) Тогда
			Для каждого СтрокаЗаказа из Заказ.Строки цикл
				НоваяСтрока = ТЗ_Заказы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЗаказа);
				НоваяСтрока.PLU = СтрЗаменить(НоваяСтрока.PLU," ","");
				НоваяСтрока.ИнтернетМагазин = Заказ.Магазин;
				Сообщить("" + НоваяСтрока.ИнтернетМагазин + "    " + НоваяСтрока.PLU + "    " + НоваяСтрока.Наименование + "    " + НоваяСтрока.Количество + "    ");
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	ТЗ_Заказы.Свернуть("ИнтернетМагазин, PLU, Наименование","Количество");
	//ЗаписатьВЛог("Подготавлваем з", Лог);
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Склады.Ссылка КАК СкладРезерва,
	               |	Склады.Владелец КАК ИнтернетМагазин
	               |ПОМЕСТИТЬ ВТ_Склады
	               |ИЗ
	               |	Справочник.Склады КАК Склады
	               |ГДЕ
	               |	(&ДляВсехИнтернетМагазинов
	               |			ИЛИ Склады.Владелец В (&ИнтернетМагазины))
	               |	И Склады.ЭтоСкладРезерваИнтернетМагазина = ИСТИНА
	               |	И Склады.ПометкаУдаления = ЛОЖЬ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТЗ.ИнтернетМагазин КАК ИнтернетМагазин,
	               |	ТЗ.PLU КАК PLU,
	               |	ТЗ.Наименование КАК Наименование,
	               |	ТЗ.Количество КАК Количество
	               |ПОМЕСТИТЬ ВТ_ЗаказыНеОбработаные
	               |ИЗ
	               |	&ТЗ КАК ТЗ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗаказыНеОбработаные.ИнтернетМагазин КАК ТорговаяТочка,
	               |	ВТ_ЗаказыНеОбработаные.Наименование,
	               |	ВТ_Склады.СкладРезерва КАК СкладРезерва,
	               |	КонтурEDI_СоответствияТоваров.Номенклатура КАК Номенклатура,
	               |	КонтурEDI_СоответствияТоваров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	               |	ВТ_ЗаказыНеОбработаные.Количество
	               |ПОМЕСТИТЬ ВТ_Заказ
	               |ИЗ
	               |	ВТ_ЗаказыНеОбработаные КАК ВТ_ЗаказыНеОбработаные
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_Склады КАК ВТ_Склады
	               |		ПО ВТ_ЗаказыНеОбработаные.ИнтернетМагазин = ВТ_Склады.ИнтернетМагазин
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтурEDI_СоответствияТоваров КАК КонтурEDI_СоответствияТоваров
	               |		ПО ((ВЫРАЗИТЬ(ВТ_ЗаказыНеОбработаные.PLU КАК СТРОКА(36))) = (ВЫРАЗИТЬ(КонтурEDI_СоответствияТоваров.КодТовараПартнера КАК СТРОКА(36))))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Заказ.ТорговаяТочка КАК ТорговаяТочка,
	               |	ВТ_Заказ.Наименование,
	               |	ВТ_Заказ.Номенклатура,
	               |	ВТ_Заказ.Количество
	               |ИЗ
	               |	ВТ_Заказ КАК ВТ_Заказ
	               |ИТОГИ ПО
	               |	ТорговаяТочка";
	Запрос.УстановитьПараметр("Дата", ТекДата);
	Запрос.УстановитьПараметр("ТЗ", ТЗ_Заказы);
	Запрос.УстановитьПараметр("ДляВсехИнтернетМагазинов", ИСТИНА);
	Запрос.УстановитьПараметр("ИнтернетМагазины", "");
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		ЗаписатьВЛог("Нет распределенных товаров", Лог, "Ошибка");
		Возврат;
	КонецЕсли;
	//ЗаписатьВЛог("Запишем Расходные ордера", Лог);
	ВыборкаТТ = Рез.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ТорговаяТочка");
	Пока ВыборкаТТ.Следующий() цикл
		Если НЕ ЗначениеЗаполнено(ВыборкаТТ.ТорговаяТочка) Тогда
			Продолжить;
		КонецЕсли;
		Док = Документы.ВебЗаказПокупателя.СоздатьДокумент();
		Док.Дата = ТекДата;
		Док.ТорговаяТочка = ВыборкаТТ.ТорговаяТочка;
		Выборка = ВыборкаТТ.Выбрать();
		Пока Выборка.Следующий() цикл
			Если ЗначениеЗаполнено(Выборка.Количество) Тогда
				СтрокаТоваров = Док.Товары.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТоваров,Выборка);
				СтрокаТоваров.Количество = Выборка.Количество;
			КонецЕсли;
		КонецЦикла;
		Док.Записать();
	КонецЦикла;
КонецПроцедуры

//Для Регл задания
Процедура ПроанализироватьТекущееСостояниеИПредпринятьДействия(ТекДата) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	&ТорговаяТочка,
	               |	ВебЗаказПокупателя.Ссылка КАК Заказ,
	               |	NULL КАК Перемещение,
	               |	NULL КАК ПриходныйОрдер,
	               |	NULL КАК РасходныйОрдер
	               |ПОМЕСТИТЬ ВТ
	               |ИЗ
	               |	Документ.ВебЗаказПокупателя КАК ВебЗаказПокупателя
	               |ГДЕ
	               |	ВебЗаказПокупателя.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ТекДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&ТекДата, ДЕНЬ)
	               |	И ВебЗаказПокупателя.ТорговаяТочка = &ТорговаяТочка
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	&ТорговаяТочка,
	               |	NULL,
	               |	ПеремещениеСклад.Ссылка,
	               |	NULL,
	               |	NULL
	               |ИЗ
	               |	Документ.ПеремещениеСклад КАК ПеремещениеСклад
	               |ГДЕ
	               |	ПеремещениеСклад.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ТекДата, ДЕНЬ), ЧАС, 8) И КОНЕЦПЕРИОДА(&ТекДата, ДЕНЬ)
	               |	И ПеремещениеСклад.СкладОтправитель = &СкладРезерва
	               |	И ПеремещениеСклад.СкладПолучатель = &Склад
	               |	И ПеремещениеСклад.Проведен = ИСТИНА
	               |	И ПеремещениеСклад.Комментарий = ""Сформирован по распределению для Интернет магазинов""
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	&ТорговаяТочка,
	               |	NULL,
	               |	NULL,
	               |	ПриходныйОрдерСклад.Ссылка,
	               |	NULL
	               |ИЗ
	               |	Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
	               |ГДЕ
	               |	ПриходныйОрдерСклад.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ТекДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&ТекДата, ДЕНЬ)
	               |	И ПриходныйОрдерСклад.Склад = &Склад
	               |	И ПриходныйОрдерСклад.Проведен = ИСТИНА
	               |	И ПриходныйОрдерСклад.ОжидаемыйПриход = ИСТИНА
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	&ТорговаяТочка,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	РасходныйОрдерСклад.Ссылка
	               |ИЗ
	               |	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
	               |ГДЕ
	               |	РасходныйОрдерСклад.Дата = НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&ТекДата, ДЕНЬ, 1), ДЕНЬ)
	               |	И РасходныйОрдерСклад.Получатель = &ТорговаяТочка
	               |	И РасходныйОрдерСклад.Проведен = ИСТИНА
	               |	И РасходныйОрдерСклад.Комментарий = ""Сформирован по распределению для Интернет магазинов""
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ.ТорговаяТочка,
	               |	МАКСИМУМ(ВТ.Заказ) КАК Заказ,
	               |	МАКСИМУМ(ВТ.Перемещение) КАК Перемещение,
	               |	МАКСИМУМ(ВТ.ПриходныйОрдер) КАК ПриходныйОрдер,
	               |	МАКСИМУМ(ВТ.РасходныйОрдер) КАК РасходныйОрдер
	               |ИЗ
	               |	ВТ КАК ВТ
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ.ТорговаяТочка";
	Запрос.УстановитьПараметр("ТекДата", ТекДата);
	Запрос.УстановитьПараметр("Склад", Справочники.Склады.НайтиПоНаименованию("ТИЛСИ"));
	Запрос.УстановитьПараметр("СкладРезерва", Справочники.Склады.НайтиПоНаименованию("Резерв для ИМ 1687П Коммунарка"));
	Запрос.УстановитьПараметр("ТорговаяТочка", Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("1687П_Интернет-Магазин_Коммунарка_А"));
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	Таб = Рез.Выгрузить();
	Стр = Таб[0];
	Если НЕ ЗначениеЗаполнено(Стр.Заказ) Тогда
		ЗагрузитьИСоздатьВэбЗаказПокупателя(ТекущаяДата());	
	Иначе
		Если НЕ ЗначениеЗаполнено(Стр.ПриходныйОрдер) И НЕ ЗначениеЗаполнено(Стр.РасходныйОрдер) Тогда
			Если НЕ ЗначениеЗаполнено(Стр.Перемещение) Тогда
				СоздатьПеремещенияПоДаннымЗаказа(ТекущаяДата());
			КонецЕсли;
			ЗагрузитьЗаказыИСкорректирроватьРО(КонецДня(ТекущаяДата()));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьСтатусы(ТекДата) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	&ТорговаяТочка,
	               |	ВебЗаказПокупателя.Ссылка КАК Заказ,
	               |	NULL КАК Перемещение,
	               |	NULL КАК ПриходныйОрдер,
	               |	NULL КАК РасходныйОрдер
	               |ПОМЕСТИТЬ ВТ
	               |ИЗ
	               |	Документ.ВебЗаказПокупателя КАК ВебЗаказПокупателя
	               |ГДЕ
	               |	ВебЗаказПокупателя.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ТекДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&ТекДата, ДЕНЬ)
	               |	И ВебЗаказПокупателя.ТорговаяТочка = &ТорговаяТочка
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	&ТорговаяТочка,
	               |	NULL,
	               |	ПеремещениеСклад.Ссылка,
	               |	NULL,
	               |	NULL
	               |ИЗ
	               |	Документ.ПеремещениеСклад КАК ПеремещениеСклад
	               |ГДЕ
	               |	ПеремещениеСклад.Дата МЕЖДУ ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&ТекДата, ДЕНЬ), ЧАС, 8) И КОНЕЦПЕРИОДА(&ТекДата, ДЕНЬ)
	               |	И ПеремещениеСклад.СкладОтправитель = &СкладРезерва
	               |	И ПеремещениеСклад.СкладПолучатель = &Склад
	               |	И ПеремещениеСклад.Проведен = ИСТИНА
	               |	И ПеремещениеСклад.Комментарий = ""Сформирован по распределению для Интернет магазинов""
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	&ТорговаяТочка,
	               |	NULL,
	               |	NULL,
	               |	ПриходныйОрдерСклад.Ссылка,
	               |	NULL
	               |ИЗ
	               |	Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
	               |ГДЕ
	               |	ПриходныйОрдерСклад.Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ТекДата, ДЕНЬ) И КОНЕЦПЕРИОДА(&ТекДата, ДЕНЬ)
	               |	И ПриходныйОрдерСклад.Склад = &Склад
	               |	И ПриходныйОрдерСклад.Проведен = ИСТИНА
	               |	И ПриходныйОрдерСклад.ОжидаемыйПриход = ИСТИНА
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	&ТорговаяТочка,
	               |	NULL,
	               |	NULL,
	               |	NULL,
	               |	РасходныйОрдерСклад.Ссылка
	               |ИЗ
	               |	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
	               |ГДЕ
	               |	РасходныйОрдерСклад.Дата = НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&ТекДата, ДЕНЬ, 1), ДЕНЬ)
	               |	И РасходныйОрдерСклад.Получатель = &ТорговаяТочка
	               |	И РасходныйОрдерСклад.Проведен = ИСТИНА
	               |	И РасходныйОрдерСклад.Комментарий = ""Сформирован по распределению для Интернет магазинов""
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ.ТорговаяТочка,
	               |	МАКСИМУМ(ВТ.Заказ) КАК Заказ,
	               |	МАКСИМУМ(ВТ.Перемещение) КАК Перемещение,
	               |	МАКСИМУМ(ВТ.ПриходныйОрдер) КАК ПриходныйОрдер,
	               |	МАКСИМУМ(ВТ.РасходныйОрдер) КАК РасходныйОрдер
	               |ИЗ
	               |	ВТ КАК ВТ
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ.ТорговаяТочка";
	Запрос.УстановитьПараметр("ТекДата", ТекДата);
	Запрос.УстановитьПараметр("Склад", Справочники.Склады.НайтиПоНаименованию("ТИЛСИ"));
	Запрос.УстановитьПараметр("СкладРезерва", Справочники.Склады.НайтиПоНаименованию("Резерв для ИМ 1687П Коммунарка"));
	Запрос.УстановитьПараметр("ТорговаяТочка", Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("1687П_Интернет-Магазин_Коммунарка_А"));
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	ТекСостояние = Новый Структура("ВыполненоОприходование, ПришелЗаказ, СозданоПеремещение, ТоварВернулиДляОтправки, СозданыРО");
	Таб = Рез.Выгрузить();
	Стр = Таб[0];
	ТекСостояние.ПришелЗаказ = ЗначениеЗаполнено(Стр.Заказ);
	ТекСостояние.ВыполненоОприходование = НЕ ЗначениеЗаполнено(Стр.ПриходныйОрдер);
	ТекСостояние.СозданыРО = ЗначениеЗаполнено(Стр.РасходныйОрдер);
	ТекСостояние.СозданоПеремещение = ЗначениеЗаполнено(Стр.Перемещение);
	ТекСостояние.ТоварВернулиДляОтправки = ЗначениеЗаполнено(Стр.РасходныйОрдер);
	Возврат ТекСостояние;
КонецФункции
