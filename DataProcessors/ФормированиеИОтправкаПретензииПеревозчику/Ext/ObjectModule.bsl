
//+++АК sole 2018.08.31 ИП-00018320.11
Процедура Конструктор()
	 ЗаполнитьАдресОтправителя();	
КонецПроцедуры

//+++АК sole 2018.08.31 ИП-00018320.11
Функция ПолучитьEMailПоОбъекту(Объект)
	
	Перем Запрос;

	Запрос = Новый Запрос();
	Запрос.Текст =
"ВЫБРАТЬ ПЕРВЫЕ 1
|	КонтактнаяИнформация.Представление
|
|ИЗ	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
|ГДЕ
|	КонтактнаяИнформация.Объект = &Объект
|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
|	И	(
|				КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыКонтрагентаДляОбменаДокументами)
|			ИЛИ КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица)
|		)
|";
	Запрос.УстановитьПараметр("Объект", Объект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Представление;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

//+++АК sole 2018.08.29 ИП-00018320.11
Процедура ПолучитьПеречислениеОрганизации(БПР)
	
	Перем Запрос;
	
	Запрос = Новый Запрос();
	
	ПеречислениеОрганизации = Новый Структура();
	БПР.Вставить("ПеречислениеОрганизации", ПеречислениеОрганизации);
	
	Запрос.Текст =
"ВЫБРАТЬ
|	Организации.Ссылка
|
|ИЗ Справочник.Организации КАК Организации
|ГДЕ
|		Организации.Код В
|			(
|				""000000006"",
|               ""000000009""
|			)
|
|УПОРЯДОЧИТЬ ПО Организации.Код
|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ПеречислениеОрганизации.Вставить("Вкусвилл", Выборка.Ссылка);
	Иначе
		Возврат;
	КонецЕсли;
	
	Если Выборка.Следующий() Тогда
		ПеречислениеОрганизации.Вставить("Тилси", Выборка.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

//+++АК sole 2018.08.29 ИП-00018320.11
Функция ДокументHTMLВСтроку(ДокументHTML)
	ЗаписьDOM = Новый ЗаписьDOM;
	ЗаписьHTML = Новый ЗаписьHTML;
	ЗаписьHTML.УстановитьСтроку();
	ЗаписьDOM.Записать(ДокументHTML, ЗаписьHTML);
	Возврат ЗаписьHTML.Закрыть();	
КонецФункции

//+++АК sole 2018.08.29 ИП-00018320.11
Функция СтрокуВДокументHTML(ТекстHTML)
   ЧтениеHTML = Новый ЧтениеHTML();
   ЧтениеHTML.УстановитьСтроку(ТекстHTML);
   ПостроительDOM = Новый ПостроительDOM();
   Возврат ПостроительDOM.Прочитать(ЧтениеHTML);
КонецФункции

//+++АК sole 2018.08.30 ИП-00018320.11
Функция ПолучитьРеквизитыДокументаОснования()
	
	Перем Запрос;
	
	Запрос = Новый Запрос();

	Запрос.Текст =
"ВЫБРАТЬ
|	СчетНаОплатуПокупателю.Дата,
|	СчетНаОплатуПокупателю.Контрагент,
|	СчетНаОплатуПокупателю.Контрагент.НаименованиеПолное КАК НаименованиеКонтрагента,
|	СчетНаОплатуПокупателю.Контрагент.ИНН КАК КонтрагентИНН,
|	СчетНаОплатуПокупателю.ДоговорКонтрагента.Наименование КАК ДоговорКонтрагента,
|	СчетНаОплатуПокупателю.Организация,
|	СчетНаОплатуПокупателю.Организация.НаименованиеПолное КАК НаименованиеОрганизации,
|	СчетНаОплатуПокупателю.ВалютаДокумента КАК Валюта
|	
|ИЗ Документ.СчетНаОплатуПокупателю КАК СчетНаОплатуПокупателю
|ГДЕ 
|		СчетНаОплатуПокупателю.Ссылка = &ДокументСсылка
|";
	Запрос.УстановитьПараметр("ДокументСсылка", ЭтотОбъект.ДокументОснование);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	РеквизитыДокументаОснования = Новый Структура
		("Дата,Контрагент,НаименованиеКонтрагента,КонтрагентИНН,ДоговорКонтрагента,Организация,НаименованиеОрганизации,Валюта");
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(РеквизитыДокументаОснования, Выборка);	
	КонецЕсли;
	
	Возврат РеквизитыДокументаОснования;
КонецФункции

//+++АК sole 2018.08.29 ИП-00018320.11
Процедура СформироватьПисьмо() Экспорт
	
	БПР = ПолучитьРеквизитыДокументаОснования();
	
	ПолучитьПеречислениеОрганизации(БПР);
	ПолучитьФайлЛого(БПР);
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.ИмяФайлаЛого) Тогда
		Возврат;
	КонецЕсли;
	
	ПолучитьТекстПисьмаHTML(БПР);
	
КонецПроцедуры 

//+++АК sole 2018.08.29 ИП-00018320.11
Процедура ПолучитьФайлЛого(БПР)
	
	Перем Лого;
	Перем Печать;  //+++АК LAGP 2018.10.09 ИП-00018320.13 Добавлена печать в тело письма
	
	Пока Истина Цикл
		
		Если БПР.Организация = БПР.ПеречислениеОрганизации.Вкусвилл Тогда
			Лого 	= ЭтотОбъект.ПолучитьМакет("ЛогоВкусвилл");
			Печать 	= ЭтотОбъект.ПолучитьМакет("ПечатьВкусвилл"); //+++АК LAGP 2018.10.09 ИП-00018320.13 Добавлена печать в тело письма
			Прервать;	
		КонецЕсли;
		
		Если БПР.Организация = БПР.ПеречислениеОрганизации.Тилси Тогда
			Лого 	= ЭтотОбъект.ПолучитьМакет("ЛогоТилси");
			Печать 	= ЭтотОбъект.ПолучитьМакет("ПечатьТилси"); //+++АК LAGP 2018.10.09 ИП-00018320.13 Добавлена печать в тело письма
			Прервать;
		КонецЕсли;
		
		ЭтотОбъект.ИмяФайлаЛого = "";
		ЭтотОбъект.ИмяФайлаПечать = "";  //+++АК LAGP 2018.10.09 ИП-00018320.13 Добавлена печать в тело письма
		Возврат;
	КонецЦикла;
	
	ЭтотОбъект.ИмяФайлаЛого = ПолучитьИмяВременногоФайла("png");
	Лого.Записать(ЭтотОбъект.ИмяФайлаЛого);
	
	//+++АК LAGP 2018.10.09 ИП-00018320.13 Добавлена печать в тело письма
	ЭтотОбъект.ИмяФайлаПечать = ПолучитьИмяВременногоФайла("png");
	Печать.Записать(ЭтотОбъект.ИмяФайлаПечать);
	//---АК LAGP
	
КонецПроцедуры

//+++АК sole 2018.08.29 ИП-00018320.11
Процедура ПолучитьТекстПисьмаHTML(БПР)
	
	Перем мТекстПисьмаHTML, тд, Запрос; 
	
	ШаблонHTML = ЭтотОбъект.ПолучитьМакет("ШаблонHTML"); 
	ДокументHTML = ШаблонHTML.ПолучитьДокументHTML();
	мТекстПисьмаHTML = ДокументHTMLВСтроку(ДокументHTML);
	
	Пока Истина Цикл
		
		Если БПР.Организация = БПР.ПеречислениеОрганизации.Вкусвилл Тогда
			тд = ЭтотОбъект.ПолучитьМакет("АдресВкусвилл");
			АдресОрганизации = тд.ПолучитьТекст();
			ДиректорФИО = "А.В. Фарафонов";
			Прервать;	
		КонецЕсли;
		
		Если БПР.Организация = БПР.ПеречислениеОрганизации.Тилси Тогда
			тд = ЭтотОбъект.ПолучитьМакет("АдресТилси");
			АдресОрганизации = тд.ПолучитьТекст();
			ДиректорФИО = "М.А. Широков";
			Прервать;
		КонецЕсли;
		
		АдресОрганизации = "";
		ДиректорФИО = "";
		Прервать;;
	КонецЦикла;
	
	АдресОрганизации =  СтрЗаменить(АдресОрганизации, Символы.ПС, "<BR>");
	
	СписокПоставщиков = Новый СписокЗначений();
	ИтоговаяСумма = 0;
	Отклонения = "";
	НомераПоставок = "";
	Инд = 1;
	
	Для Каждого Стр Из ЭтотОбъект.ПоступленияТоваровУслуг Цикл
		
		НомераПоставок = НомераПоставок + Стр.НомерПоставки + ", ";
		
		Если СписокПоставщиков.НайтиПоЗначению(Стр.Контрагент) = Неопределено Тогда
			СписокПоставщиков.Добавить(Стр.Контрагент);	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Стр.НомерПоставки) Тогда
			НомерПоставки = "№ " + Стр.НомерПоставки;
		Иначе
			НомерПоставки = "";
		КонецЕсли;
		
		Если Стр.ВидПретензии = "бой" Тогда
			ВидПретензии = "бой продукции "	
		Иначе
			ВидПретензии = "недостача товара "
		КонецЕсли;
		
		Отклонения = Отклонения + 
		Формат(Инд, "ЧГ=0") +
		". В поставке " +
		НомерПоставки +
		" от " + Формат(Стр.Дата,"ДФ=дд.ММ.гг") + " г. " +
		ВидПретензии +
		"на сумму " + Формат(Стр.Сумма, "ЧДЦ=2") + " руб."
		"<BR>";
		
		ИтоговаяСумма = ИтоговаяСумма + Стр.Сумма;
		Инд = Инд + 1;
	КонецЦикла;
	
	НомераПоставок = Лев(НомераПоставок, СтрДлина(НомераПоставок) - 2);
	
	Запрос = Новый Запрос();

	Запрос.Текст =
"ВЫБРАТЬ
|	Контрагенты.НаименованиеПолное
|
|ИЗ Справочник.Контрагенты КАК Контрагенты
|ГДЕ Контрагенты.Ссылка	В (&СписокПоставщиков)
|";
	Запрос.УстановитьПараметр("СписокПоставщиков", СписокПоставщиков);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если СписокПоставщиков.Количество() > 1 Тогда
		Поставщики = "поставщиками " 
	Иначе
		Поставщики = "поставщиком "
	КонецЕсли;
	
	
	Пока Выборка.Следующий() Цикл
		Поставщики = Поставщики + "&#171;" + Выборка.НаименованиеПолное + "&#187;" + ", "
	КонецЦикла;
	
	Поставщики = Лев(Поставщики, СтрДлина(Поставщики) - 2);
	
	ОбщаяСуммаПретензии = Формат(ИтоговаяСумма, "ЧДЦ=2") +  " (" +
		ОбщегоНазначения.СформироватьСуммуПрописью(ИтоговаяСумма, БПР.Валюта) + ").";
	
	мТекстПисьмаHTML = СтрЗаменить(мТекстПисьмаHTML, "@OrganisationAddress", АдресОрганизации);
	мТекстПисьмаHTML = СтрЗаменить(мТекстПисьмаHTML, "@Date", Формат(БПР.Дата,"ДФ=дд.ММ.гггг"));
	мТекстПисьмаHTML = СтрЗаменить(мТекстПисьмаHTML, "@ContragentName", БПР.НаименованиеКонтрагента);
	мТекстПисьмаHTML = СтрЗаменить(мТекстПисьмаHTML, "@ContragentINN", БПР.КонтрагентИНН);
	мТекстПисьмаHTML = СтрЗаменить(мТекстПисьмаHTML, "@OrganisationName", БПР.НаименованиеОрганизации);
	мТекстПисьмаHTML = СтрЗаменить(мТекстПисьмаHTML, "@Contract", БПР.ДоговорКонтрагента);
	мТекстПисьмаHTML = СтрЗаменить(мТекстПисьмаHTML, "@Month", НРег(Формат(НачалоМесяца(БПР.Дата) - 1, "ДФ=ММММ")));
	мТекстПисьмаHTML = СтрЗаменить(мТекстПисьмаHTML, "@Suppliers", Поставщики);
	мТекстПисьмаHTML = СтрЗаменить(мТекстПисьмаHTML, "@Deviation", Отклонения);
	мТекстПисьмаHTML = СтрЗаменить(мТекстПисьмаHTML, "@TotalCost", ОбщаяСуммаПретензии);
	мТекстПисьмаHTML = СтрЗаменить(мТекстПисьмаHTML, "@DeliveryNumbers", НомераПоставок);
	мТекстПисьмаHTML = СтрЗаменить(мТекстПисьмаHTML, "@Director", ДиректорФИО);

	ЭтотОбъект.ТекстПисьмаHTML = мТекстПисьмаHTML;
КонецПроцедуры

//+++АК sole 2018.08.29 ИП-00018320.11
Процедура ОтправитьПисьмо() Экспорт
	
	Перем ТекстОшибки;
	
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();

	Почта = Новый ИнтернетПочта();
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Почта.Подключиться(Профиль);
	
	Письмо = Новый ИнтернетПочтовоеСообщение();
	
	Письмо.Тема = "Письмо-претензия";
	Письмо.ИмяОтправителя  = ЭтотОбъект.АдресОтправителя;
	Письмо.Отправитель     = ЭтотОбъект.АдресОтправителя;
	
	//+++АК LAGP 2018.10.09 ИП-00018320.13 Добавлены вложения приходных ордеров в письмо
	Для каждого ФайлВложение из ПрикрепленныеФайлы Цикл
		Письмо.Вложения.Добавить(Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(ФайлВложение.Файл));
	КонецЦикла;	
	//---АК LAGP
	
	Получатель = Письмо.Получатели.Добавить();
	Получатель.Адрес          = ЭтотОбъект.АдресПолучателя;
	Получатель.ОтображаемоеИмя = ЭтотОбъект.АдресПолучателя;
	
	
	ТекстСообщения = Письмо.Тексты.Добавить();
	ТекстСообщения.Текст = СтрЗаменить(ЭтотОбъект.ТекстПисьмаHTML, "@Logo", ЭтотОбъект.ИмяФайлаЛого);
	ТекстСообщения.Текст = СтрЗаменить(ТекстСообщения.Текст, "@Stamp", ЭтотОбъект.ИмяФайлаПечать); //+++АК LAGP 2018.10.09 ИП-00018320.13 Добавлена печать в тело письма
	ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;
	Письмо.ОбработатьТексты();
	
	Попытка
		Почта.Послать(Письмо);
	Исключение
		ТекстОшибки = ОписаниеОшибки();
	КонецПопытки;
	
	Почта.Отключиться();
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		ВызватьИсключение(ТекстОшибки);	
	КонецЕсли;
	
	Сообщить("Письмо успешно отправлено.");
	
КонецПроцедуры

//+++АК sole 2018.08.30 ИП-00018320.11
Процедура ЗаполнитьРеквизитыПоДокументуОснованию() Экспорт
	
	Перем Запрос;
	
	ЭтотОбъект.ПоступленияТоваровУслуг.Очистить();
	
	Если ЭтотОбъект.ДокументОснование.Пустая() Тогда
		Возврат;	
	КонецЕсли; 
	
	РеквизитыДокументаОснования = ПолучитьРеквизитыДокументаОснования();
	
	ЗаполнитьАдресПолучателя(РеквизитыДокументаОснования.Контрагент);
	ЗаполнитьПоступленияТоваровУслуг(РеквизитыДокументаОснования);
	ЗаполнитьВложенияПриходныхОрдеров(); //+++АК LAGP 2018.10.09 ИП-00018320.13 Добавлены вложения приходных ордеров в письмо
	
КонецПроцедуры

//+++АК sole 2018.08.30 ИП-00018320.11
Процедура ЗаполнитьПоступленияТоваровУслуг(РеквизитыДокументаОснования)
	
	НачалоПериода = НачалоМесяца(НачалоМесяца(РеквизитыДокументаОснования.Дата) - 1);
	ОкончаниеПериода = КонецМесяца(НачалоПериода);
	
	Запрос = Новый Запрос();
	Запрос.Текст =
"ВЫБРАТЬ
|	ФинансовыйСубконто.Период КАК Дата,
|	ФинансовыйСубконто.Регистратор КАК Документ,
|	ФинансовыйСубконто.Регистратор.Контрагент КАК Контрагент,
|	Финансовый.Сумма
|ИЗ РегистрБухгалтерии.Финансовый.Субконто КАК ФинансовыйСубконто
|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый КАК Финансовый ПО
|			Финансовый.Регистратор = ФинансовыйСубконто.Регистратор
|		И	Финансовый.НомерСтроки = ФинансовыйСубконто.НомерСтроки
|ГДЕ	
|		ФинансовыйСубконто.Период МЕЖДУ &НачалоПериода И &ОкончаниеПериода
|	И	ТИПЗНАЧЕНИЯ(ФинансовыйСубконто.Регистратор) = Тип(Документ.ПоступлениеТоваровУслуг)
|	И	ФинансовыйСубконто.Регистратор.Организация = &Организация
|	И	ФинансовыйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконто.Контрагенты)
|	И	ФинансовыйСубконто.Значение <> ФинансовыйСубконто.Регистратор.Контрагент
|	И	ФинансовыйСубконто.Значение = &Контрагент
|
|УПОРЯДОЧИТЬ ПО 
|	ФинансовыйСубконто.Период
|";
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("Организация", РеквизитыДокументаОснования.Организация);
	Запрос.УстановитьПараметр("Контрагент", РеквизитыДокументаОснования.Контрагент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	 
	 Пока Выборка.Следующий() Цикл
		 НСтр = ЭтотОбъект.ПоступленияТоваровУслуг.Добавить();
		 ЗаполнитьЗначенияСвойств(НСтр, Выборка);
		 НСтр["ВидПретензии"] = "недостача";
	 КонецЦикла;
	
КонецПроцедуры

//+++АК sole 2018.08.31 ИП-00018320.11
Процедура ЗаполнитьАдресПолучателя(Контрагент)
	
	ЭтотОбъект.АдресПолучателя = ПолучитьEMailПоОбъекту(Контрагент);
	
КонецПроцедуры

//+++АК sole 2018.08.31 ИП-00018320.11
Процедура ЗаполнитьАдресОтправителя()
	
	Пользователь = ПараметрыСеанса.ТекущийПользователь;
	
	ФизЛицо = Пользователь.ФизЛицо;
	
	Если ЗначениеЗаполнено(ФизЛицо) Тогда
		ЭтотОбъект.АдресОтправителя = ПолучитьEMailПоОбъекту(ФизЛицо)	
	КонецЕсли;
	
КонецПроцедуры	

//+++АК LAGP 2018.10.09 ИП-00018320.13 Добавлены вложения приходных ордеров в письмо
Процедура ЗаполнитьВложенияПриходныхОрдеров()
	
	МассивПТУ = ПоступленияТоваровУслуг.ВыгрузитьКолонку("Документ");		
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПоступлениеТоваровУслугПриходныеОрдера.ПриходныйОрдер
		|ПОМЕСТИТЬ ПриходныеОрдера
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.ПриходныеОрдера КАК ПоступлениеТоваровУслугПриходныеОрдера
		|ГДЕ
		|	ПоступлениеТоваровУслугПриходныеОрдера.Ссылка В(&МассивПТУ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриходныеОрдера.ПриходныйОрдер,
		|	ПриходныйОрдерСкладПрикрепленныеФайлы.Файл
		|ИЗ
		|	ПриходныеОрдера КАК ПриходныеОрдера
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерСклад.ПрикрепленныеФайлы КАК ПриходныйОрдерСкладПрикрепленныеФайлы
		|		ПО ПриходныеОрдера.ПриходныйОрдер = ПриходныйОрдерСкладПрикрепленныеФайлы.Ссылка";
	
	Запрос.УстановитьПараметр("МассивПТУ", МассивПТУ);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ПрикрепленныеФайлы.Загрузить(РезультатЗапроса.Выгрузить());
	КонецЕсли;
	
КонецПроцедуры

Конструктор();
//