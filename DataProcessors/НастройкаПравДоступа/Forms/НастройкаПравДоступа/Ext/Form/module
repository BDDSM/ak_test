
// Признак того, что настройка выполняется для групп пользователей
Перем НастройкаДляГруппПользователей;

Перем ВыводитьТекстВсеГруппы;

Перем мЗаголовкиСтраницПанелиПрав;
Перем ТипыОбъектовДоступа;

Перем ВсеГруппыПользователейСтрокой;


// Функция определяет список областей данных,
// которые соответствуют переданному типу данных
//
// Параметры
//  ТИпДанных - Тип, Анализируемый тип
//
// Возвращаемое значение:
//   СписокЗначений
//
Функция ПолучитьСписокОбластейДанных(ТипДанных)

	СписокОбластей = Новый СписокЗначений;
	
	Если ТипДанных = Тип("СправочникСсылка.ГруппыДоступаКонтрагентов") Тогда
		//СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.Контрагенты);
		СписокОбластей.Добавить(Перечисления.ОбластиДанныхОбъектовДоступа.КонтрагентыСписок);
		СписокОбластей.Добавить(Перечисления.ОбластиДанныхОбъектовДоступа.КонтрагентыДанные);
		СписокОбластей.Добавить(Перечисления.ОбластиДанныхОбъектовДоступа.КонтрагентыДопИнформация);
		
	ИначеЕсли ТипДанных = Тип("СправочникСсылка.Организации") Тогда
		СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.Организации);
	ИначеЕсли ТипДанных = Тип("СправочникСсылка.ГруппыДоступаСтруктурныхЕдиниц") Тогда
		СписокОбластей.Добавить(Перечисления.ОбластиДанныхОбъектовДоступа.СтруктурныеЕдиницыСписок);
		СписокОбластей.Добавить(Перечисления.ОбластиДанныхОбъектовДоступа.СтруктурныеЕдиницыДанные);
	//ИначеЕсли ТипДанных = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
	//	СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.ПодразделенияОрганизаций);
	//ИначеЕсли ТипДанных = Тип("СправочникСсылка.Проекты") Тогда
	//	СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.Проекты);
	//ИначеЕсли ТипДанных = Тип("СправочникСсылка.Склады") Тогда
	//	СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.Склады);
	//ИначеЕсли ТипДанных = Тип("СправочникСсылка.ТипыЗаписейЗаметок") Тогда
	//	СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.Заметки);
	ИначеЕсли ТипДанных = Тип("СправочникСсылка.ГруппыДоступаФизическихЛиц") Тогда
		СписокОбластей.Добавить(Перечисления.ОбластиДанныхОбъектовДоступа.ФизическиеЛицаСписок);
		СписокОбластей.Добавить(Перечисления.ОбластиДанныхОбъектовДоступа.ФизическиеЛицаДанные);		
	ИначеЕсли ТипДанных = Тип("СправочникСсылка.ВнешниеОбработки") Тогда
		СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.ВнешниеОбработки);
	//ИначеЕсли ТипДанных = Тип("СправочникСсылка.ГруппыЗаявокКандидатов") Тогда
	//	СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.ЗаявкиКандидатов);
	ИначеЕсли ТипДанных = Тип("СправочникСсылка.Номенклатура") Тогда
		СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.Номенклатура);	
		
	ИначеЕсли ТипДанных = Тип("СправочникСсылка.ГруппыПользователей") Тогда
		// Добавим только те виды объектов доступа, для которых нет областей данных
		СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.Контрагенты);
		СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.Организации);
		//СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.Подразделения);
		//СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.ПодразделенияОрганизаций);
		//СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.Проекты);
		//СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.Склады);
		СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.ВнешниеОбработки);
		//СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.Заметки);
		//СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.ЗаявкиКандидатов);
		СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.Номенклатура);
		// Добавим все области данных
		Для каждого Перечисление Из Перечисления.ОбластиДанныхОбъектовДоступа Цикл
			СписокОбластей.Добавить(Перечисление);
		КонецЦикла;
		
	//ИначеЕсли ТипДанных = Тип("СправочникСсылка.НазначенияИспользованияСпецификаций") Тогда
	//	СписокОбластей.Добавить(Перечисления.ВидыОбъектовДоступа.Спецификации);	
	//	
	//ИначеЕсли ТипДанных = Тип("СправочникСсылка.ТипыЦенНоменклатуры") Тогда
	//	СписокОбластей.Добавить(Перечисления.ОбластиДанныхОбъектовДоступа.ЦеныНоменклатуры);
	//	СписокОбластей.Добавить(Перечисления.ОбластиДанныхОбъектовДоступа.ЦеныНоменклатурыКонтрагентов);
		
	КонецЕсли;
	
	Возврат СписокОбластей;

КонецФункции

Процедура ОбновитьОтборПоНаследуемымЗаписям()
	
	Использование = НЕ ОтображатьНаследуемыеЗаписи;
	Для каждого КлючИЗначение Из ТипыОбъектовДоступа Цикл
		ЭлементыФормы["ТаблицаПравДоступа_" + КлючИЗначение.Ключ].ОтборСтрок.ВидНаследованияПравДоступаИерархическихСправочников.Использование = Использование;
		ЭлементыФормы["ТаблицаПравДоступа_" + КлючИЗначение.Ключ].ОтборСтрок.НаследованаОтВсеПользователи.Использование = Использование;
	КонецЦикла;
	
КонецПроцедуры 

Процедура ПрочитатьТаблицыПравДоступа(ПраваДоступаПользователей)
	
	СоответствиеОбластейДанных = Новый Соответствие;
	
	Для каждого КлючИЗначение Из ТипыОбъектовДоступа Цикл
		Индекс = 1;
		Для каждого Элемент Из ПолучитьСписокОбластейДанных(КлючИЗначение.Значение) Цикл
			СоответствиеОбластейДанных.Вставить(Элемент.Значение, Индекс);
			Индекс = Индекс + 1;
		КонецЦикла; 
	КонецЦикла;
	
	ТаблицаПравДоступа.Очистить();
	Для каждого Запись Из ПраваДоступаПользователей Цикл
		Если Запись.ОбъектДоступа = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ТипОбъектаДоступа = ТипЗНЧ(Запись.ОбъектДоступа);
		Индекс = СоответствиеОбластейДанных[?(ЗначениеЗаполнено(Запись.ОбластьДанных), Запись.ОбластьДанных, Запись.ВидОбъектаДоступа)];
		СтрокиТаблицыПравДоступа = ТаблицаПравДоступа.НайтиСтроки(Новый Структура("ОбъектДоступа, Пользователь, ВладелецПравДоступа, НаследованаОтВсеПользователи", Запись.ОбъектДоступа, Запись.Пользователь, Запись.ВладелецПравДоступа, Запись.НаследованаОтВсеПользователи));
		
		Если СтрокиТаблицыПравДоступа.Количество() <> 0 Тогда
			СтрокаТаблицыПравДоступа = СтрокиТаблицыПравДоступа[0];
		Иначе
			СтрокаТаблицыПравДоступа = ТаблицаПравДоступа.Добавить();
			СтрокаТаблицыПравДоступа.ОбъектДоступа                   = Запись.ОбъектДоступа;
			СтрокаТаблицыПравДоступа.Пользователь                    = Запись.Пользователь;
			СтрокаТаблицыПравДоступа.ВладелецПравДоступа             = Запись.ВладелецПравДоступа;
			СтрокаТаблицыПравДоступа.ВидНаследованияПравДоступаИерархическихСправочников = Запись.ВидНаследованияПравДоступаИерархическихСправочников;
			СтрокаТаблицыПравДоступа.ТипОбъектаДоступа = Новый(ТипОбъектаДоступа);
		КонецЕсли;
		
		СтрокаТаблицыПравДоступа["Чтение_" + Индекс]             = Истина;
		СтрокаТаблицыПравДоступа["Запись_" + Индекс]             = Запись.Запись;
		ЗаполнитьЗначенияСвойств(СтрокаТаблицыПравДоступа, Запись);
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьНаборЗаписейИзТаблицПравДоступа()
	
	СоответствиеОбластейДанных = Новый Соответствие;
	
	Для каждого КлючИЗначение Из ТипыОбъектовДоступа Цикл
		СоответствиеОбластейДанных.Вставить(КлючИЗначение.Значение, ПолучитьСписокОбластейДанных(КлючИЗначение.Значение));
	КонецЦикла;
	
	ПраваДоступаПользователей = РегистрыСведений.НастройкиПравДоступаПользователей.СоздатьНаборЗаписей();
	
	Для каждого СтрокаТаблицы Из ТаблицаПравДоступа Цикл
		
		Индекс = 0;
		
		Для каждого ЭлементОбластиДанных Из СоответствиеОбластейДанных[ТипЗНЧ(СтрокаТаблицы.ОбъектДоступа)] Цикл
			
			Индекс = Индекс + 1;
			
			Если СтрокаТаблицы["Чтение_" + Индекс] Тогда
				Запись = ПраваДоступаПользователей.Добавить();
				Запись.ОбъектДоступа       = СтрокаТаблицы.ОбъектДоступа;
				Запись.ВладелецПравДоступа = СтрокаТаблицы.ВладелецПравДоступа;
				Запись.ОбластьДанных       = ?(ТипЗнч(ЭлементОбластиДанных.Значение) = Тип("ПеречислениеСсылка.ОбластиДанныхОбъектовДоступа"), ЭлементОбластиДанных.Значение, Перечисления.ОбластиДанныхОбъектовДоступа.ПустаяСсылка());
				Запись.Пользователь        = СтрокаТаблицы.Пользователь;
				Запись.НаследованаОтВсеПользователи        = СтрокаТаблицы.НаследованаОтВсеПользователи;
				
				Запись.Запись              = СтрокаТаблицы["Запись_" + Индекс];
				Запись.ВидНаследованияПравДоступаИерархическихСправочников = СтрокаТаблицы.ВидНаследованияПравДоступаИерархическихСправочников;
								
			КонецЕсли; 
			
		КонецЦикла;
		
		
	КонецЦикла;
	
	Возврат ПраваДоступаПользователей;
	
КонецФункции // ПолучитьНаборЗаписейИзТаблицПравДоступа

// Функция формирует закладки, если ни одной закладки не сформированно, то возращается ЛОЖЬ
//
Функция СформироватьЗакладки()
	
	СписокНаследования = Новый СписокЗначений;
	СписокНаследования.Добавить(Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.РаспространитьНаПодчиненных);
	СписокНаследования.Добавить(Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.ТолькоДляТекущегоПрава);
	
	Страницы = ЭлементыФормы.ПанельОбластейДанных.Страницы;
	
	Если НастройкаДляГруппПользователей Тогда
		ИспользуемыеВидыОбъектовДоступа = НастройкаПравДоступа.ПолучитьИспользуемыеВидыОбъектовДоступа(СсылкаОбъекта);
	Иначе
		ИспользуемыеВидыОбъектовДоступа = НастройкаПравДоступа.ПолучитьИспользуемыеВидыОбъектовДоступа();
	КонецЕсли; 
	
	ЗакладкиСформированны = Ложь;
	ПерваяВидимаяЗакладка = Неопределено;
	
	ТекущаяСтраницаДоФормированияЗакладок = ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница;
	
	// Установим видимость закладок чтобы не "потерялись" привязки
	// Потом только отключаем видимость
	Для каждого ЭлСтраница Из Страницы Цикл
		Если ЭлСтраница.Доступность Тогда
			ЭлСтраница.Видимость = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого КлючИЗначение Из ТипыОбъектовДоступа Цикл
		Страница = Страницы[КлючИЗначение.Ключ];
		Если ИспользуемыеВидыОбъектовДоступа.Найти(Перечисления.ВидыОбъектовДоступа[КлючИЗначение.Ключ]) = Неопределено Тогда
			Страница.Видимость = Ложь;
			Продолжить;
		КонецЕсли;
		
		Если НЕ НастройкаДляГруппПользователей Тогда
			Страница.Видимость = (КлючИЗначение.Значение = ТипЗнч(СсылкаОбъекта));
		КонецЕсли;
		
		Если НЕ Страница.Видимость Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПерваяВидимаяЗакладка = Неопределено Тогда
			ПерваяВидимаяЗакладка = Страница;
		КонецЕсли; 
		
		ЗакладкиСформированны = Истина;
		
		Элемент = ЭлементыФормы["ТаблицаПравДоступа_" + КлючИЗначение.Ключ];
		
		Элемент.Колонки.Пользователь.Видимость       = НЕ НастройкаДляГруппПользователей;
		Элемент.Колонки.Пользователь.ТолькоПросмотр  = НастройкаДляГруппПользователей;
		
		Элемент.Колонки.ОбъектДоступа.Видимость      = НастройкаДляГруппПользователей;
		Элемент.Колонки.ОбъектДоступа.ТолькоПросмотр = НЕ НастройкаДляГруппПользователей;
		
		Элемент.ОтборСтрок.ТипОбъектаДоступа.Установить(Страница.Значение);
		
		ОтборНаследования = Элемент.ОтборСтрок.ВидНаследованияПравДоступаИерархическихСправочников;
		ОтборНаследования.ВидСравнения = ВидСравнения.ВСписке;
		ОтборНаследования.Значение = СписокНаследования;
		
		ОтборНаследования = Элемент.ОтборСтрок.НаследованаОтВсеПользователи;
		ОтборНаследования.ВидСравнения = ВидСравнения.Равно;
		ОтборНаследования.Значение = Ложь;
		
		Элемент.НастройкаОтбораСтрок.ТипОбъектаДоступа.Доступность = Ложь;
		Элемент.НастройкаОтбораСтрок.ВидНаследованияПравДоступаИерархическихСправочников.Доступность = Ложь;
		
	КонецЦикла;
	
	// Если закладки не сформированы покажем служебную страницу
	Страницы.СтраницаСлужебная.Видимость = НЕ ЗакладкиСформированны;
	Если Страницы.СтраницаСлужебная.Видимость Тогда
		ПерваяВидимаяЗакладка = Страницы.СтраницаСлужебная;
		
		НадписьСлужебная = "";
		ЭлементыФормы.ПанельОбластейДанных.ОтображениеЗакладок = ОтображениеЗакладок.НеИспользовать;
		Если СсылкаОбъекта = Неопределено ИЛИ СсылкаОбъекта.Пустая() Тогда
			НадписьСлужебная = "Для редактирования настроек прав доступа выберите группу пользователей.";
		Иначе
			НадписьСлужебная = "Выбранная группа пользователей не ограничивает доступ на уровне записей.
								|Чтобы настроить права доступа выберите в группе нужные виды объектов доступа.";
		КонецЕсли;
		
	Иначе
		
		Если НастройкаДляГруппПользователей Тогда
			ЭлементыФормы.ПанельОбластейДанных.ОтображениеЗакладок = ОтображениеЗакладок.СверхуМногострочныйСПерестановкой;
		Иначе
			ЭлементыФормы.ПанельОбластейДанных.ОтображениеЗакладок = ОтображениеЗакладок.НеИспользовать;
		КонецЕсли;
		
	КонецЕсли;
	
	// Если текущую страницу не видно, то сделаем текущую первую видимую страницу
	Если НЕ ТекущаяСтраницаДоФормированияЗакладок.Видимость Тогда
		ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница = ПерваяВидимаяЗакладка;
	КонецЕсли;
	
	Возврат ЗакладкиСформированны;
	
КонецФункции

Функция Записать(Спрашивать = Ложь)
	
	Если НЕ Модифицированность
		ИЛИ НастройкаДляГруппПользователей И (СсылкаОбъекта = Неопределено
		ИЛИ СсылкаОбъекта.Пустая()) Тогда
		
		Возврат Истина;
	КонецЕсли;
	
	Если Спрашивать Тогда
		Ответ = Вопрос("Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Возврат Ложь;
		ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
			Модифицированность = Ложь;
			Возврат Истина;
		КонецЕсли;
	КонецЕсли; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1 1 ИЗ Справочник." + СсылкаОбъекта.Метаданные().Имя + " ГДЕ Ссылка = &Ссылка И ПометкаУдаления";
	Запрос.УстановитьПараметр("Ссылка", СсылкаОбъекта);
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		ОтветНаВопрос = Вопрос("Элемент, для которого настраиваются прав доступа, помечен на удаление!" + Символы.ПС + "Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если ОтветНаВопрос = КодВозвратаДиалога.Нет Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Отказ = Ложь;
	
	Набор = ПолучитьНаборЗаписейИзТаблицПравДоступа();
	Набор.ПроверитьКорректностьНазначенияГруппПользователям();

	
	НастройкаПравДоступа.ЗаписатьПраваДоступаПользователейКОбъекту(Набор, СсылкаОбъекта, Отказ);
	
	Если Не Отказ Тогда
		ПраваДоступаПользователей = РегистрыСведений.НастройкиПравДоступаПользователей.СоздатьНаборЗаписей();
		НастройкаПравДоступа.ПрочитатьПраваДоступаКОбъекту(ПраваДоступаПользователей, СсылкаОбъекта);
		ПрочитатьТаблицыПравДоступа(ПраваДоступаПользователей);
		Модифицированность = Ложь;
	КонецЕсли; 
	
	Возврат Не Отказ;
	
КонецФункции

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ПараметрыСеанса.ИспользоватьОграниченияПравДоступаНаУровнеЗаписей Тогда
		Предупреждение("В конфигурации отключен режим ограничения прав доступа на уровне записей.
						|Настройка режима выполняется в форме ""Параметры доступа на уровне записей"".");
		Отказ = Истина;
		Возврат;
	КонецЕсли; 
	
	ТипНачальноеЗначениеВыбора = ТипЗнч(НачальноеЗначениеВыбора);
	НастройкаДляГруппПользователей = НачальноеЗначениеВыбора = Неопределено 
										ИЛИ (ТипНачальноеЗначениеВыбора = Тип("СправочникСсылка.ГруппыПользователей"));

	ТипыОбъектовДоступа = Новый Структура;
	
	ТипыОбъектовДоступа.Вставить("Контрагенты",			Тип("СправочникСсылка.ГруппыДоступаКонтрагентов"));
	ТипыОбъектовДоступа.Вставить("Организации",			Тип("СправочникСсылка.Организации"));
	ТипыОбъектовДоступа.Вставить("СтруктурныеЕдиницы",		Тип("СправочникСсылка.ГруппыДоступаСтруктурныхЕдиниц"));
	//ТипыОбъектовДоступа.Вставить("ПодразделенияОрганизаций",	Тип("СправочникСсылка.ПодразделенияОрганизаций"));
	//ТипыОбъектовДоступа.Вставить("Проекты",				Тип("СправочникСсылка.Проекты"));
	//ТипыОбъектовДоступа.Вставить("Склады",				Тип("СправочникСсылка.Склады"));
	ТипыОбъектовДоступа.Вставить("ФизическиеЛица",		Тип("СправочникСсылка.ГруппыДоступаФизическихЛиц"));
	ТипыОбъектовДоступа.Вставить("ВнешниеОбработки",	Тип("СправочникСсылка.ВнешниеОбработки"));
	//ТипыОбъектовДоступа.Вставить("Заметки",				Тип("СправочникСсылка.ТипыЗаписейЗаметок"));
	//ТипыОбъектовДоступа.Вставить("ЗаявкиКандидатов",	Тип("СправочникСсылка.ГруппыЗаявокКандидатов"));
	ТипыОбъектовДоступа.Вставить("Номенклатура",		Тип("СправочникСсылка.Номенклатура"));
	//ТипыОбъектовДоступа.Вставить("Спецификации",		Тип("СправочникСсылка.НазначенияИспользованияСпецификаций"));
	//ТипыОбъектовДоступа.Вставить("ЦеныНоменклатуры",	Тип("СправочникСсылка.ТипыЦенНоменклатуры"));
	
	// Если выполняется настройка прав доступа для объекта доступа,
	// то нужно проверить, что вид объекта доступа используется
	Если НЕ НастройкаДляГруппПользователей Тогда
		ИспользуемыеВидыОбъектовДоступа = НастройкаПравДоступа.ПолучитьИспользуемыеВидыОбъектовДоступа();
		ВидОбъектаИспользуется = Ложь;
		ПредставлениеВидаОбъекта = "";
		Для каждого КлючИЗначение Из ТипыОбъектовДоступа Цикл
			Если ТипНачальноеЗначениеВыбора = КлючИЗначение.Значение Тогда
				ВидыОбъектовДоступаСсылка = Перечисления.ВидыОбъектовДоступа[КлючИЗначение.Ключ];
				ВидОбъектаИспользуется = (ИспользуемыеВидыОбъектовДоступа.Найти(ВидыОбъектовДоступаСсылка) <> Неопределено);
				
				ПредставлениеВидаОбъекта = Строка(ВидыОбъектовДоступаСсылка);
				Прервать;
			КонецЕсли;
		КонецЦикла; 
		
		Если НЕ ВидОбъектаИспользуется Тогда
			Если ПредставлениеВидаОбъекта = "" Тогда
				ТекстПредупреждения = "Вид объектов доступа не определен: """ + ТипНачальноеЗначениеВыбора + """";
			Иначе
				ТекстПредупреждения = "Вид объектов доступа """ + ПредставлениеВидаОбъекта + """ не используется!
									|Настройка выполняется в форме ""Параметры доступа на уровне записей"".";
			КонецЕсли; 
			
			Предупреждение(ТекстПредупреждения,, "Настройка прав доступа");
			Отказ = Истина;
			Возврат;
		КонецЕсли; 	
	КонецЕсли;
	
	мЗаголовкиСтраницПанелиПрав = Новый Структура;
	Страницы = ЭлементыФормы.ПанельОбластейДанных.Страницы;
	Для каждого ЭлСтраница Из Страницы Цикл
		Если ТипыОбъектовДоступа.Свойство(ЭлСтраница.Имя) Тогда
			ЭлСтраница.Значение = Новый(ТипыОбъектовДоступа[ЭлСтраница.Имя]);
		КонецЕсли; 
		
		мЗаголовкиСтраницПанелиПрав.Вставить(ЭлСтраница.Имя, ЭлСтраница.Заголовок);
	КонецЦикла; 
	
	ВидимостьНаследуемыхЗаписей = ВосстановитьЗначение("ВидимостьНаследуемыхЗаписейПриНастройкеПравДоступа");
	ОтображатьНаследуемыеЗаписи = ?(ВидимостьНаследуемыхЗаписей = Неопределено, Истина, ВидимостьНаследуемыхЗаписей);
	ЭлементыФормы.ДействияФормы.Кнопки.НаследуемыеЗаписи.Пометка = ОтображатьНаследуемыеЗаписи;
	
	ОбработкаНачальногоЗначенияВыбора(НачальноеЗначениеВыбора, Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли; 	
	
	Если НЕ НастройкаДляГруппПользователей Тогда
		КнопкиКоманднойПанели = ЭлементыФормы.ДействияФормы.Кнопки;
		КнопкиКоманднойПанели.Удалить(КнопкиКоманднойПанели.ДействиеЗаполнить);
		КнопкиКоманднойПанели.Удалить(КнопкиКоманднойПанели.РазделительЗаполнить);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность 
		И НЕ Записать(Истина) Тогда
		
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СохранитьЗначение("ВидимостьНаследуемыхЗаписейПриНастройкеПравДоступа", ОтображатьНаследуемыеЗаписи);
	 	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если НастройкаДляГруппПользователей 
		И ТипЗнч(ЗначениеВыбора) = ТипЗнч(ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница.Значение) Тогда
		
		НоваяЗапись = ТаблицаПравДоступа.Добавить();
		НоваяЗапись.ВидНаследованияПравДоступаИерархическихСправочников = НастройкаПравДоступа.ПолучитьСписокВидовНаследованияПравДоступа(ЗначениеВыбора)[0].Значение;
		НоваяЗапись.ОбъектДоступа       = ЗначениеВыбора;
		НоваяЗапись.ВладелецПравДоступа = ЗначениеВыбора;
		НоваяЗапись.ТипОбъектаДоступа   = Новый(ТипЗНЧ(ЗначениеВыбора));
		НоваяЗапись.Чтение_1            = Истина;
		
		ЭлементыФормы["ТаблицаПравДоступа_" + ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница.Имя].ТекущаяСтрока = НоваяЗапись;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаписанаГруппаПользователей" Тогда
		
		Если ЭтаФорма.Открыта() Тогда
			// Записана группа пользователей. Обновим закладки.
			// Параметр - Ссылка на измененную группу пользователей
			Если ЭлементыФормы.СправочникСписок.ТекущаяСтрока = Параметр Тогда
				ОбработкаАктивизацииСтрокиСпискаГруппПользователей();
			КонецЕсли;
		КонецЕсли; 
		
	ИначеЕсли ИмяСобытия = "ИзмененыИспользуемыеВидыОбъектовДоступа" Тогда
		Если ЭтаФорма.Открыта() Тогда
			// Изменились используемые виды объектов доступа
			СформироватьЗакладки();
		КонецЕсли; 
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Если Записать() Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОсновныеДействияФормыЗаписать(Кнопка)
	
	Записать();
	
КонецПроцедуры

Процедура КоманднаяПанельФормыПодбор(Кнопка)
	
	ИмяВидаОбъектаДоступа = ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница.Значение;
	
	Если ИмяВидаОбъектаДоступа = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТипОбластиДанных = ТипЗнч(ИмяВидаОбъектаДоступа);
	
	Если НастройкаДляГруппПользователей Тогда
		
		Если Справочники.ТипВсеСсылки().СодержитТип(ТипОбластиДанных) Тогда
			ФормаПодбора = Справочники[Метаданные.НайтиПоТипу(ТипОбластиДанных).Имя].ПолучитьФормуВыбора(,ЭтаФорма);
		ИначеЕсли Перечисления.ТипВсеСсылки().СодержитТип(ТипОбластиДанных) Тогда
			ФормаПодбора = Перечисления[Метаданные.НайтиПоТипу(ТипОбластиДанных).Имя].ПолучитьФормуВыбора(,ЭтаФорма);
		Иначе
			Возврат;
		КонецЕсли;
		
		ФормаПодбора.ЗакрыватьПриВыборе = Ложь;
		ФормаПодбора.ОткрытьМодально();
		
		Модифицированность = Истина;
			
	Иначе
		ФормаПодбора = ПолучитьФорму("ПодборГруппПользователей");
		ФормаПодбора.ВидОбъектаДоступа = Перечисления.ВидыОбъектовДоступа[Метаданные.НайтиПоТипу(ТипОбластиДанных).Имя];
		МассивЗначений = ФормаПодбора.ОткрытьМодально();
		
		Если ТипЗнч(МассивЗначений) = Тип("Массив") Тогда
			ВидНаследованияПравДоступаИерархическихСправочников = НастройкаПравДоступа.ПолучитьСписокВидовНаследованияПравДоступа(СсылкаОбъекта)[0].Значение;
			
			Для каждого ЭлементМассива Из МассивЗначений Цикл
				
				НоваяЗапись = ТаблицаПравДоступа.Добавить();
				НоваяЗапись.ВидНаследованияПравДоступаИерархическихСправочников = ВидНаследованияПравДоступаИерархическихСправочников;
				НоваяЗапись.ОбъектДоступа       = СсылкаОбъекта;
				НоваяЗапись.ВладелецПравДоступа = СсылкаОбъекта;
				НоваяЗапись.Пользователь        = ЭлементМассива;
				НоваяЗапись.ТипОбъектаДоступа   = Новый(ТипОбластиДанных);
				НоваяЗапись.Чтение_1 = Истина;
			КонецЦикла;
			
			Если МассивЗначений.Количество() Тогда
				ЭлементыФормы["ТаблицаПравДоступа_" + ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница.Имя].ТекущаяСтрока = НоваяЗапись;
			КонецЕсли; 
			
			Модифицированность = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьПометки(Пометка)

	Элемент = ЭлементыФормы["ТаблицаПравДоступа_" + ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница.Имя];
	ИмяКолонки = Элемент.ТекущаяКолонка.ДанныеФлажка;
	Индекс = Сред(ИмяКолонки, Найти(ИмяКолонки, "_"));
	ЭтоЧтение = Лев(ИмяКолонки, 6) = "Чтение";
	
	ИмяВидаОбъектаДоступа = ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница.Значение;
	
	ТипОбластиДанных = ТипЗнч(ИмяВидаОбъектаДоступа);
	
	МассивСтрокТаблицы = ТаблицаПравДоступа.НайтиСтроки(Новый Структура("ТипОбъектаДоступа", Новый(ТипОбластиДанных)));
	
	Для каждого СтрокаТаблицы Из МассивСтрокТаблицы Цикл
		Если СтрокаТаблицы.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.РаспространитьНаПодчиненных 
			ИЛИ СтрокаТаблицы.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.ТолькоДляТекущегоПрава Тогда
			
			СтрокаТаблицы[ИмяКолонки] = Пометка;
			
			Модифицированность = Истина;
			
			Если Не ЭтоЧтение И Пометка Тогда
				СтрокаТаблицы["Чтение" + Индекс] = Истина;	
			ИначеЕсли ЭтоЧтение И НЕ Пометка Тогда
				СтрокаТаблицы["Запись" + Индекс] = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // УстановитьПометки
 
Процедура КоманднаяПанельФормыУстановитьФлажки(Кнопка)
	
	УстановитьПометки(Истина);
	
КонецПроцедуры

Процедура КоманднаяПанельФормыСнятьФлажки(Кнопка)
	
	УстановитьПометки(Ложь);
	
КонецПроцедуры

Процедура ТаблицаПравДоступаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные <> Неопределено
	   И Элемент.ТекущиеДанные.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.НаследуетсяОтРодителя Тогда
		НастройкаПравДоступа.РедактироватьПраваДоступа(Элемент.ТекущиеДанные.ВладелецПравДоступа);
		
		СтандартнаяОбработка = Ложь;
		
	ИначеЕсли Элемент.ТекущиеДанные.НаследованаОтВсеПользователи Тогда		
		
		НастройкаПравДоступа.РедактироватьПраваДоступа(Элемент.ТекущиеДанные.ОбъектДоступа);
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаПравДоступаПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;	
	Если ТекущиеДанные <> Неопределено Тогда
		Если ТекущиеДанные.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.НаследуетсяОтРодителя 
			 ИЛИ ТекущиеДанные.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.УнаследованоОтДочернего
			 ИЛИ ТекущиеДанные.НаследованаОтВсеПользователи Тогда
			Предупреждение("Запись удалить невозможно, она наследуется от родителя.");
			Отказ = Истина;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

Процедура ТаблицаПравДоступаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ВыводитьТекстВсеГруппы = Истина;	
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ТипОбъектаДоступа = ТипЗнч(Элемент.ОтборСтрок.ТипОбъектаДоступа.Значение);
	
	МассивТипов   = Новый Массив;
	МассивТипов.Добавить(ТипОбъектаДоступа);
	ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
	Элемент.Колонки.ОбъектДоступа.ЭлементУправления.ОграничениеТипа = ОграничениеТипа;
	Элемент.Колонки.ОбъектДоступа.ЭлементУправления.ВыбиратьТип = Ложь;
	
	ОбъектДоступа = ?(НастройкаДляГруппПользователей, ОграничениеТипа.ПривестиЗначение(ТекущиеДанные.ОбъектДоступа), СсылкаОбъекта);
	
	Если НоваяСтрока Тогда
		
		Если НастройкаДляГруппПользователей Тогда
			ТекущиеДанные.Пользователь = СсылкаОбъекта;
		КонецЕсли; 
		
		ТекущиеДанные.ТипОбъектаДоступа = Новый(ТипОбъектаДоступа);
		ТекущиеДанные.ОбъектДоступа = ОбъектДоступа;
		
		Если Элемент.Колонки.Найти("Чтение_1").ТолькоПросмотр Тогда
			ТекущиеДанные.Чтение_1 = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	СписокВидовНаследованияПравДоступа = НастройкаПравДоступа.ПолучитьСписокВидовНаследованияПравДоступа(ОбъектДоступа);
	Элемент.Колонки.ВидНаследованияПравДоступаИерархическихСправочников.ЭлементУправления.ДоступныеЗначения = СписокВидовНаследованияПравДоступа;
	
	Если НоваяСтрока или СписокВидовНаследованияПравДоступа.НайтиПоЗначению(ТекущиеДанные.ВидНаследованияПравДоступаИерархическихСправочников) = Неопределено Тогда
		ТекущиеДанные.ВидНаследованияПравДоступаИерархическихСправочников = СписокВидовНаследованияПравДоступа[0].Значение;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ТаблицаПравДоступаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ОформлениеСтроки.Ячейки.ОбъектДоступа.Видимость и НЕ ЗначениеЗаполнено(ДанныеСтроки.ОбъектДоступа) Тогда
		Если ДанныеСтроки.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.ТолькоДляТекущегоПрава Тогда
			ОформлениеСтроки.Ячейки.ОбъектДоступа.Текст = "<Пустое значение>";
		Иначе
			ОформлениеСтроки.Ячейки.ОбъектДоступа.Текст = "<Весь справочник>";
		КонецЕсли; 
	КонецЕсли;
	
	ТолькоПросмотрФлажков = Элемент.ТолькоПросмотр 
							ИЛИ  ДанныеСтроки.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.НаследуетсяОтРодителя
							ИЛИ ДанныеСтроки.НаследованаОтВсеПользователи;
	
	Для каждого Ячейка Из ОформлениеСтроки.Ячейки Цикл
		Если ТолькоПросмотрФлажков
			И Ячейка.ОтображатьФлажок Тогда
			
			Ячейка.ТолькоПросмотр = Истина;
		КонецЕсли;
		
		Если НЕ Ячейка.Имя = "Картинка" 
			И ПустаяСтрока(Элемент.Колонки[Ячейка.Имя].Данные) 
			И ПустаяСтрока(Элемент.Колонки[Ячейка.Имя].ДанныеФлажка) Тогда
			
			Ячейка.Видимость = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ЯчейкаЧтение = ОформлениеСтроки.Ячейки.Найти("Чтение");
	Если ЯчейкаЧтение <> Неопределено Тогда
		ЯчейкаЧтение.УстановитьФлажок(Истина);
	КонецЕсли;
	
	Если Элемент.Колонки.Пользователь.Видимость Тогда
		Если ЗначениеЗаполнено(ДанныеСтроки.Пользователь) Тогда
			ОформлениеСтроки.Ячейки.Картинка.УстановитьКартинку(БиблиотекаКартинок.ФизическоеЛицо);
		Иначе
			ОформлениеСтроки.Ячейки.Картинка.УстановитьКартинку(БиблиотекаКартинок.ФизическиеЛица);
			ОформлениеСтроки.Ячейки.Пользователь.УстановитьТекст(ВсеГруппыПользователейСтрокой);
		КонецЕсли;			
	Иначе
		ОформлениеСтроки.Ячейки.Картинка.УстановитьКартинку(БиблиотекаКартинок.РегистрСведенийЗапись);
	КонецЕсли;
	
	Если ДанныеСтроки.НаследованаОтВсеПользователи
		 ИЛИ ДанныеСтроки.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.НаследуетсяОтРодителя 
		 ИЛИ ДанныеСтроки.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.УнаследованоОтДочернего Тогда
		 
		 ОформлениеСтроки.ЦветТекста = WebЦвета.Серый;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаПравДоступаПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ОбъектДоступа = ТекущиеДанные.ОбъектДоступа;
	ТекущиеДанные.ВладелецПравДоступа = ОбъектДоступа;
	
	СписокВидовНаследованияПравДоступа = НастройкаПравДоступа.ПолучитьСписокВидовНаследованияПравДоступа(ОбъектДоступа);
	Элемент.Колонки.ВидНаследованияПравДоступаИерархическихСправочников.ЭлементУправления.ДоступныеЗначения = СписокВидовНаследованияПравДоступа;
	
	Если СписокВидовНаследованияПравДоступа.НайтиПоЗначению(ТекущиеДанные.ВидНаследованияПравДоступаИерархическихСправочников) = Неопределено Тогда
		ТекущиеДанные.ВидНаследованияПравДоступаИерархическихСправочников = СписокВидовНаследованияПравДоступа[0].Значение;
	КонецЕсли;
	
КонецПроцедуры

Процедура ТаблицаПравДоступаПриАктивизацииКолонки(Элемент)
	
	КоманднаяПанельТабличногоПоля = ЭлементыФормы["ДействияТаблицыПрав" + ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница.Имя];
	
	ЭтоФлажок = НЕ ПустаяСтрока(Элемент.ТекущаяКолонка.ДанныеФлажка)
				И НЕ Элемент.ТекущаяКолонка.ТолькоПросмотр;
				
	КоманднаяПанельТабличногоПоля.Кнопки.УстановитьФлажки.Доступность = ЭтоФлажок;
	КоманднаяПанельТабличногоПоля.Кнопки.СнятьФлажки.Доступность      = ЭтоФлажок;
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	Для каждого СтраницаПанели Из ЭлементыФормы.ПанельОбластейДанных.Страницы Цикл
		
		Если СтраницаПанели.Видимость И СтраницаПанели.Значение <> Неопределено Тогда
			
			ЗаголовокСтраницы = мЗаголовкиСтраницПанелиПрав[СтраницаПанели.Имя];
			
			КоличествоНастроек = 0;
			НастройкиПравДоступа = ТаблицаПравДоступа.НайтиСтроки(Новый Структура("ТипОбъектаДоступа", СтраницаПанели.Значение));
			
			Если ОтображатьНаследуемыеЗаписи Тогда
				КоличествоНастроек = НастройкиПравДоступа.Количество();
			Иначе
				Для каждого НастройкаПрав Из НастройкиПравДоступа Цикл				
					// Условие такое, каким устанавливается отбор при нажатии на кнопку "Наследуемые записи"
					// Т.е. если есть ненаследуемые записи
					Если НЕ НастройкаПрав.НаследованаОтВсеПользователи
						И НЕ (НастройкаПрав.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.НаследуетсяОтРодителя 
							 ИЛИ НастройкаПрав.ВидНаследованияПравДоступаИерархическихСправочников = Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.УнаследованоОтДочернего) Тогда
						
						КоличествоНастроек = КоличествоНастроек + 1;
					КонецЕсли; 
				КонецЦикла; 
			КонецЕсли; 
			
			Если КоличествоНастроек <> 0 Тогда
				ЗаголовокСтраницы = ЗаголовокСтраницы + " (" + КоличествоНастроек + ")";
			КонецЕсли;
			
			СтраницаПанели.Заголовок = ЗаголовокСтраницы;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ВыводитьТекстВсеГруппы Тогда
		
		ВыделенныйТекст = ЭлементыФормы["ТаблицаПравДоступа_" + ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница.Имя].Колонки.Пользователь.ЭлементУправления.ВыделенныйТекст;
		
		Если НЕ ЗначениеЗаполнено(ВыделенныйТекст) Тогда
			ЭлементыФормы["ТаблицаПравДоступа_" + ЭлементыФормы.ПанельОбластейДанных.ТекущаяСтраница.Имя].Колонки.Пользователь.ЭлементУправления.ВыделенныйТекст = ВсеГруппыПользователейСтрокой;
		КонецЕсли;
		
		ВыводитьТекстВсеГруппы = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура КоманднаяПанельФормыНаследуемыеЗаписи(Кнопка)
	
	ОтображатьНаследуемыеЗаписи = НЕ ОтображатьНаследуемыеЗаписи;
	
	Кнопка.Пометка = ОтображатьНаследуемыеЗаписи;
	ОбновитьОтборПоНаследуемымЗаписям();
	
КонецПроцедуры

Процедура ТаблицаПравДоступаПриИзмененииФлажка(Элемент, Колонка)
	
	ИмяКолонки = Колонка.ДанныеФлажка;
	Индекс = Сред(ИмяКолонки, Найти(ИмяКолонки, "_"));
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если Лев(ИмяКолонки, 6) = "Чтение" Тогда
		Если Не ТекущиеДанные[ИмяКолонки] Тогда
			ТекущиеДанные["Запись" + Индекс] = Ложь;;
		КонецЕсли; 
	Иначе
		Если ТекущиеДанные[ИмяКолонки] Тогда
			ТекущиеДанные["Чтение" + Индекс] = Истина;
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ТаблицаПравДоступаПользовательОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	Если Текст = ВсеГруппыПользователейСтрокой Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

Процедура ТаблицаПравДоступа_ПользовательНачалоВыбора(Элемент, СтандартнаяОбработка)
		
	ОткрытьФормуВыбораГруппыПользователя(Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ОткрытьФормуВыбораГруппыПользователя(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыборкаГруппы = Справочники.ГруппыПользователей.ПолучитьФормуВыбора(, Элемент);
	ФормаВыборкаГруппы.РежимВыбора = Истина;
	ОтборФормыПоСсылке = ФормаВыборкаГруппы.СправочникСписок.Отбор.Ссылка;	
	ОтборФормыПоСсылке.Использование = Истина;
	ОтборФормыПоСсылке.Значение = Справочники.ГруппыПользователей.ВсеПользователи;
	ОтборФормыПоСсылке.ВидСравнения = ВидСравнения.НеРавно;
	ФормаВыборкаГруппы.Открыть();	
	
КонецПроцедуры

// Процедура отрабатывает событие при активизации строки списка групп
//
Процедура ОбработкаАктивизацииСтрокиСпискаГруппПользователей()

	Если НЕ Записать(Истина) Тогда
		ЭлементыФормы.СправочникСписок.ТекущаяСтрока = СсылкаОбъекта;
		Возврат;
	КонецЕсли;
	
	СсылкаОбъекта = ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	
	Заголовок = "Настройка прав доступа: " + Строка(СсылкаОбъекта);
	
	Если СформироватьЗакладки() Тогда
			
		ОбновитьОтборПоНаследуемымЗаписям();
		
		ПраваДоступаПользователей = РегистрыСведений.НастройкиПравДоступаПользователей.СоздатьНаборЗаписей();
		НастройкаПравДоступа.ПрочитатьПраваДоступаКОбъекту(ПраваДоступаПользователей, СсылкаОбъекта);
		ПрочитатьТаблицыПравДоступа(ПраваДоступаПользователей);
			
	КонецЕсли;
		
КонецПроцедуры // ОбработкаАктивизацииСтрокиСпискаГруппПользователей

// Процедура отрабатывает действия при открытии в случае, 
// если права редактируются для объектов доступа.
// Например, при вызове из справочников Организации, Склады и т.д.
//
Процедура ОбработкаНастройкиДляОбъектовДоступаПриОткрытии(Отказ)

	Если НЕ СформироватьЗакладки() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли; 
	
	ОбновитьОтборПоНаследуемымЗаписям();
	
	ПраваДоступаПользователей = РегистрыСведений.НастройкиПравДоступаПользователей.СоздатьНаборЗаписей();
	НастройкаПравДоступа.ПрочитатьПраваДоступаКОбъекту(ПраваДоступаПользователей, СсылкаОбъекта);
	ПрочитатьТаблицыПравДоступа(ПраваДоступаПользователей);
	
КонецПроцедуры // ОбработкаНастройкиДляОбъектовДоступаПриОткрытии
 
Процедура СправочникСписокПриАктивизацииСтроки(Элемент)
	
	Если НЕ НастройкаДляГруппПользователей ИЛИ ЭлементыФормы.СправочникСписок.ТекущаяСтрока = СсылкаОбъекта Тогда
		Возврат;
	КонецЕсли; 
	
	ОбработкаАктивизацииСтрокиСпискаГруппПользователей();
	
КонецПроцедуры

Процедура ОбработкаНачальногоЗначенияВыбора(НачальноеЗначениеВыбора, Отказ)
	
	Если НастройкаДляГруппПользователей Тогда
		
		ЭлементыФормы.РазделительСписка.Свертка = РежимСверткиЭлементаУправления.Нет;
		ЭлементыФормы.СправочникСписок.Свертка = РежимСверткиЭлементаУправления.Нет;
		
		ЭлементыФормы.РазделительСписка.УстановитьПривязку(ГраницаЭлементаУправления.Лево);
		ЭлементыФормы.СправочникСписок.УстановитьПривязку(ГраницаЭлементаУправления.Право, ЭлементыФормы.РазделительСписка, ГраницаЭлементаУправления.Лево);
		
		СправочникСписок.Отбор.Ссылка.ВидСравнения = ВидСравнения.НеРавно;	
		СправочникСписок.Отбор.Ссылка.Значение = Справочники.ГруппыПользователей.ВсеПользователи;
		СправочникСписок.Отбор.Ссылка.Использование = Истина;
		
		Если НачальноеЗначениеВыбора <> Неопределено Тогда
			ЭлементыФормы.СправочникСписок.ТекущаяСтрока = НачальноеЗначениеВыбора;	
		КонецЕсли;
		
	Иначе
		
		ЭлементыФормы.СправочникСписок.УстановитьПривязку(ГраницаЭлементаУправления.Право);
		ЭлементыФормы.РазделительСписка.УстановитьПривязку(ГраницаЭлементаУправления.Лево, ЭлементыФормы.СправочникСписок, ГраницаЭлементаУправления.Право);
		
		ЭлементыФормы.СправочникСписок.Свертка = РежимСверткиЭлементаУправления.Лево;
		ЭлементыФормы.РазделительСписка.Свертка = РежимСверткиЭлементаУправления.Лево;
		
		СсылкаОбъекта = НачальноеЗначениеВыбора;
		
		ОбработкаНастройкиДляОбъектовДоступаПриОткрытии(Отказ);
		
		// Сформируем заголовок
		МетаданныеОбъекта = НачальноеЗначениеВыбора.Метаданные();
		Заголовок = "Настройка прав доступа: "
				+ ?(НЕ ЗначениеЗаполнено(МетаданныеОбъекта.Синоним), МетаданныеОбъекта.Имя, МетаданныеОбъекта.Синоним)
				+ ": " + ?(НЕ ЗначениеЗаполнено(СсылкаОбъекта),"<Весь справочник>", Строка(СсылкаОбъекта));
		
	КонецЕсли;
	
	НачальноеЗначениеВыбора = Неопределено;
	
КонецПроцедуры // ОбработкаНачальногоЗначенияВыбора

Процедура ПриПовторномОткрытии(СтандартнаяОбработка)
	
	ОбработкаНачальногоЗначенияВыбора(НачальноеЗначениеВыбора, Ложь);
	
КонецПроцедуры

Процедура КоманднаяПанельФормыДействиеЗаполнить(Кнопка)
	
	ФормаВыбора = Справочники.ГруппыПользователей.ПолучитьФормуВыбора();
	ФормаВыбора.Заголовок = "Выберите группу настройками, которой нужно заполнить";
	РезультатВыбора = ФормаВыбора.ОткрытьМодально();
	
	Если РезультатВыбора <> Неопределено Тогда		
		Если РезультатВыбора = Справочники.ГруппыПользователей.ВсеПользователи Тогда
			Предупреждение("Группа """ + Справочники.ГруппыПользователей.ВсеПользователи + """ не используется для настройки прав доступа");
			Возврат;
		КонецЕсли;
		
		// Получим подтверждение от пользователя
		Если ТаблицаПравДоступа.Количество() <> 0 Тогда
			ТекстВопроса = "Перед заполнением настройки будут удалены. Продолжить?";
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
			Если Ответ <> КодВозвратаДиалога.Да Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		// Заполняем настройки
		ПраваДоступаПользователей = РегистрыСведений.НастройкиПравДоступаПользователей.СоздатьНаборЗаписей();
		НастройкаПравДоступа.ПрочитатьПраваДоступаКОбъекту(ПраваДоступаПользователей, РезультатВыбора);
		ПрочитатьТаблицыПравДоступа(ПраваДоступаПользователей);
		
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

Процедура ДействияФормыДействиеОтчетНастройкаПравДоступа(Кнопка)
	
	НастройкаПравДоступа.СформироватьВариантОтчетаПоСистемеПрав("НастройкаПравДоступа");
	
КонецПроцедуры

Процедура ДействияФормыДействиеОтчетСведенияОГруппахПользователей(Кнопка)
	
	НастройкаПравДоступа.СформироватьВариантОтчетаПоСистемеПрав("СведенияОГруппахПользователей");
	
КонецПроцедуры



НачальноеЗначениеВыбора = Неопределено;
НастройкаДляГруппПользователей = Ложь;

СсылкаОбъекта = Неопределено;

ВыводитьТекстВсеГруппы = Ложь;

ВсеГруппыПользователейСтрокой = "Все группы пользователей";