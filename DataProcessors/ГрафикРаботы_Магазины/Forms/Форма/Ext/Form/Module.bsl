
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Период.ДатаНачала = ТекущаяДата();
	Период.ДатаОкончания = ТекущаяДата() + 86400*7;
	
	Объект.ДатаНач = Период.ДатаНачала;
	Объект.ДатаКон = Период.ДатаОкончания;
	ОбновитьТабель();
	ОбновитьТабельКассиров();
	ОбновитьТабельГрузчиков();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	
	Объект.ДатаНач = Период.ДатаНачала;
	Объект.ДатаКон = Период.ДатаОкончания;
	ОбновитьТабель();
	ОбновитьТабельКассиров();
	ОбновитьТабельГрузчиков();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПредставлениеТорговойТочки(СтруктураДанных)
	
	Представление 	= "";
	СвойствоПродавца = СтруктураДанных.СвойствоПродавца;
	
	Если СвойствоПродавца = 1 Тогда
		Представление = "пч, ";	
	ИначеЕсли СвойствоПродавца = 2 Тогда
		Представление = "сп, ";
	ИначеЕсли СвойствоПродавца = 3 Тогда
		Представление = "пр, ";
	ИначеЕсли СвойствоПродавца = 4 Тогда
		Представление = "ст, ";
	ИначеЕсли СвойствоПродавца = 5 Тогда
		Представление = "пчн, ";
	ИначеЕсли СвойствоПродавца = 6 Тогда
		Представление = "стпчн, ";	
	КонецЕсли;
	
	ПредставлениеТТ = "";
	ТорговаяТочка 	= СтруктураДанных.ТорговаяТочка;
	Отсутствие 		= СтруктураДанных.Отсутствие;
	КоличествоЧасов = СтруктураДанных.КоличествоЧасов;
	
	Если ЗначениеЗаполнено(ТорговаяТочка)Тогда
		Представление = Представление + Строка(СтруктураДанных.ТорговаяТочкаНаименование);
	ИначеЕсли ЗначениеЗаполнено(Отсутствие)Тогда
		Представление = Строка(Отсутствие);
	КонецЕсли;	
	
	//Если СтруктураДанных.ТорговаяТочкаТипРозничнойТочки = Перечисления.ТипыРозничныхТочек.Магазин И (СвойствоПродавца = 1 ИЛИ СвойствоПродавца = 5 ИЛИ СвойствоПродавца = 6) Тогда
	Если ЗначениеЗаполнено(Отсутствие)Тогда
		Представление = Представление;
	Иначе	
		Представление = Представление + ", (" + Строка(КоличествоЧасов) + "ч.)";
	КонецЕсли;	
	//КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

Функция ПолучитьПредставлениеТорговойТочкиКассиры(СтруктураДанных)
	
	Представление 	   = "";
	СвойствоСотрудника = СтруктураДанных.СвойствоСотрудника;
	
	Если СвойствоСотрудника = 1 Тогда
		Представление = "ст, ";	
	КонецЕсли;
	
	ТорговаяТочка 	= СтруктураДанных.ТорговаяТочка;
	КоличествоЧасов = СтруктураДанных.КоличествоЧасов;
	
	Если ЗначениеЗаполнено(ТорговаяТочка)Тогда
		Представление = Представление + Строка(СтруктураДанных.ТорговаяТочкаНаименование);
	КонецЕсли;	
	
	//Если СвойствоСотрудника = 0 Тогда 
		Представление = Представление + ", (" + Строка(КоличествоЧасов) + "ч.)";
	//КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

Функция ПолучитьПредставлениеТорговойТочкиГрузчики(СтруктураДанных)
	
	Представление 	   = "";
	СвойствоСотрудника = СтруктураДанных.СвойствоСотрудника;
	
	Если СвойствоСотрудника = 1 Тогда
		Представление = "н, ";
	ИначеЕсли СвойствоСотрудника = 2 Тогда
		Представление = "ст, ";	
	КонецЕсли;
	
	ТорговаяТочка 	= СтруктураДанных.ТорговаяТочка;
	КоличествоЧасов = СтруктураДанных.КоличествоЧасов;
	Отсутствие 		= СтруктураДанных.Отсутствие;
	
	Если ЗначениеЗаполнено(ТорговаяТочка)Тогда
		Представление = Представление + Строка(СтруктураДанных.ТорговаяТочкаНаименование);
		//Если СвойствоСотрудника <> 2 Тогда 
			Представление = Представление + ", (" + Строка(КоличествоЧасов) + "ч.)";
		//КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(Отсутствие)Тогда
		Представление = Строка(Отсутствие);
	КонецЕсли;	
	
	Возврат Представление;
	
КонецФункции


&НаСервере
Процедура ОбновитьТабель()
	
	ТабДокТабель.Очистить();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаНач", Объект.ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон", Объект.ДатаКон);
	Запрос.УстановитьПараметр("ТорговаяТочка", ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТабельРаботыПродавцов.Сотрудник,
	               |	ТабельРаботыПродавцов.Сотрудник.Код КАК КодСотрудника,
	               |	ТабельРаботыПродавцов.Период КАК Период,
	               |	ТабельРаботыПродавцов.ТорговаяТочка,
	               |	ТабельРаботыПродавцов.Отсутствие,
	               |	ТабельРаботыПродавцов.СвойствоПродавца,
	               |	ТабельРаботыПродавцов.ТорговаяТочка.Наименование,
	               |	ТабельРаботыПродавцов.КоличествоЧасов,
	               |	ТабельРаботыПродавцов.ТорговаяТочка.ТипРозничнойТочки,
	               |	ВЫРАЗИТЬ(ЕСТЬNULL(КонтактнаяИнформация.Представление, """""""") КАК СТРОКА(50)) КАК Телефон
	               |ИЗ
	               |	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |		ПО ТабельРаботыПродавцов.Сотрудник = КонтактнаяИнформация.Объект
	               |			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСлужебный))
	               |ГДЕ
	               |	ТабельРаботыПродавцов.Период МЕЖДУ &ДатаНач И &ДатаКон
	               |	И ТабельРаботыПродавцов.Сотрудник В
	               |			(ВЫБРАТЬ
	               |				ТабельРаботыПродавцов.Сотрудник
	               |			ИЗ
	               |				РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
	               |			ГДЕ
	               |				ТабельРаботыПродавцов.Период МЕЖДУ &ДатаНач И &ДатаКон
	               |				И ТабельРаботыПродавцов.ТорговаяТочка = &ТорговаяТочка)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Период";
				   
	ТабДанные = Запрос.Выполнить().Выгрузить();
	ТабСотрудники = ТабДанные.Скопировать();
	ТабСотрудники.Свернуть("Сотрудник, КодСотрудника, Телефон");
	
	ЭтотОбъект = РеквизитФормыВЗначение("Объект");
	Макет = ЭтотОбъект.ПолучитьМакет("Табель");
	Область = Макет.ПолучитьОбласть("Шапка|Основное");
	ТабДокТабель.Вывести(Область);
	
	Для Каждого СтрокаСотрудник Из ТабСотрудники Цикл
		Область = Макет.ПолучитьОбласть("Шапка|Продавец");
		Область.Параметры.Продавец = Строка(СтрокаСотрудник.Сотрудник) + Символы.ПС + СтрокаСотрудник.КодСотрудника;
		Область.Параметры.Телефон = Строка(СтрокаСотрудник.Телефон);
		ТабДокТабель.Присоединить(Область);
	КонецЦикла;
	
	ДатаОбработки = Объект.ДатаНач;
	Пока ДатаОбработки <= Объект.ДатаКон Цикл
		Область = Макет.ПолучитьОбласть("Строка|Основное");
		Область.Параметры.Дата = ДатаОбработки;
		ТабДокТабель.Вывести(Область);
		Для Каждого СтрокаСотрудник Из ТабСотрудники Цикл
			Область = Макет.ПолучитьОбласть("Строка|Продавец");
			СтрокиДанные = ТабДанные.НайтиСтроки(Новый Структура("Сотрудник, Период", СтрокаСотрудник.Сотрудник, ДатаОбработки));
			Если СтрокиДанные.Количество() > 0 Тогда
				Если ЗначениеЗаполнено(СтрокиДанные[0].Отсутствие) Тогда
					Область.Область(1,1,1,1).Текст = СтрокиДанные[0].Отсутствие;
				ИначеЕсли СтрокиДанные[0].ТорговаяТочка = ПараметрыСеанса.ТорговаяТочкаПоАйпи Тогда
					Область.Область(1,1,1,1).ЦветФона = Новый Цвет(200, 200, 255);
					Область.Область(1,1,1,1).Шрифт = Новый Шрифт(, 9, Истина);
					Область.Область(1,1,1,1).Текст = ПолучитьПредставлениеТорговойТочки(СтрокиДанные[0]);
				Иначе
					Область.Область(1,1,1,1).Текст = ПолучитьПредставлениеТорговойТочки(СтрокиДанные[0]);
				КонецЕсли;	
			КонецЕсли;	
			ТабДокТабель.Присоединить(Область);
		КонецЦикла;
		ДатаОбработки = ДатаОбработки + 86400;
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура ОбновитьТабельКассиров()
	
	ТабДокТабельКассиры.Очистить();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаНач", Объект.ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон", Объект.ДатаКон);
	Запрос.УстановитьПараметр("ТорговаяТочка", ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТабельРаботыКассиров.Сотрудник,
	               |	ТабельРаботыКассиров.Сотрудник.Код КАК КодСотрудника,
	               |	ТабельРаботыКассиров.Период КАК Период,
	               |	ТабельРаботыКассиров.ТорговаяТочка,
	               |	ТабельРаботыКассиров.СвойствоСотрудника,
	               |	ТабельРаботыКассиров.ТорговаяТочка.Наименование,
	               |	ТабельРаботыКассиров.КоличествоЧасов,
	               |	ТабельРаботыКассиров.ТорговаяТочка.ТипРозничнойТочки,
	               |	ВЫРАЗИТЬ(ЕСТЬNULL(КонтактнаяИнформация.Представление, """""""") КАК СТРОКА(50)) КАК Телефон
	               |ИЗ
	               |	РегистрСведений.ТабельРаботыКассиров КАК ТабельРаботыКассиров
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |		ПО ТабельРаботыКассиров.Сотрудник = КонтактнаяИнформация.Объект
	               |			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСлужебный))
	               |ГДЕ
	               |	ТабельРаботыКассиров.Период МЕЖДУ &ДатаНач И &ДатаКон
	               |	И ТабельРаботыКассиров.Сотрудник В
	               |			(ВЫБРАТЬ
	               |				ТабельРаботыКассиров.Сотрудник
	               |			ИЗ
	               |				РегистрСведений.ТабельРаботыКассиров КАК ТабельРаботыКассиров
	               |			ГДЕ
	               |				ТабельРаботыКассиров.Период МЕЖДУ &ДатаНач И &ДатаКон
	               |				И ТабельРаботыКассиров.ТорговаяТочка = &ТорговаяТочка)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Период";
				   
	ТабДанные = Запрос.Выполнить().Выгрузить();
	ТабСотрудники = ТабДанные.Скопировать();
	ТабСотрудники.Свернуть("Сотрудник, КодСотрудника, Телефон");
	
	ЭтотОбъект = РеквизитФормыВЗначение("Объект");
	Макет = ЭтотОбъект.ПолучитьМакет("Табель");
	Область = Макет.ПолучитьОбласть("Шапка|Основное");
	ТабДокТабельКассиры.Вывести(Область);
	
	Для Каждого СтрокаСотрудник Из ТабСотрудники Цикл
		Область = Макет.ПолучитьОбласть("Шапка|Продавец");
		Область.Параметры.Продавец = Строка(СтрокаСотрудник.Сотрудник) + Символы.ПС + СтрокаСотрудник.КодСотрудника;
		Область.Параметры.Телефон = Строка(СтрокаСотрудник.Телефон);
		ТабДокТабельКассиры.Присоединить(Область);
	КонецЦикла;
	
	ДатаОбработки = Объект.ДатаНач;
	Пока ДатаОбработки <= Объект.ДатаКон Цикл
		Область = Макет.ПолучитьОбласть("Строка|Основное");
		Область.Параметры.Дата = ДатаОбработки;
		ТабДокТабельКассиры.Вывести(Область);
		Для Каждого СтрокаСотрудник Из ТабСотрудники Цикл
			Область = Макет.ПолучитьОбласть("Строка|Продавец");
			СтрокиДанные = ТабДанные.НайтиСтроки(Новый Структура("Сотрудник, Период", СтрокаСотрудник.Сотрудник, ДатаОбработки));
			Если СтрокиДанные.Количество() > 0 Тогда
				Если СтрокиДанные[0].ТорговаяТочка = ПараметрыСеанса.ТорговаяТочкаПоАйпи Тогда
					Область.Область(1,1,1,1).ЦветФона = Новый Цвет(200, 200, 255);
					Область.Область(1,1,1,1).Шрифт = Новый Шрифт(, 9, Истина);
					Область.Область(1,1,1,1).Текст = ПолучитьПредставлениеТорговойТочкиКассиры(СтрокиДанные[0]);
				Иначе
					Область.Область(1,1,1,1).Текст = ПолучитьПредставлениеТорговойТочкиКассиры(СтрокиДанные[0]);
				КонецЕсли;	
			КонецЕсли;	
			ТабДокТабельКассиры.Присоединить(Область);
		КонецЦикла;
		ДатаОбработки = ДатаОбработки + 86400;
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура ОбновитьТабельГрузчиков()
	
	ТабДокТабельГрузчики.Очистить();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаНач", Объект.ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон", Объект.ДатаКон);
	Запрос.УстановитьПараметр("ТорговаяТочка", ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТабельРаботы.Сотрудник,
	               |	ТабельРаботы.Сотрудник.Код КАК КодСотрудника,
	               |	ТабельРаботы.Период КАК Период,
	               |	ТабельРаботы.ТорговаяТочка,
	               |	ТабельРаботы.СвойствоСотрудника,
	               |	ТабельРаботы.ТорговаяТочка.Наименование,
	               |	ТабельРаботы.КоличествоЧасов,
	               |	ТабельРаботы.ТорговаяТочка.ТипРозничнойТочки,
	               |	ВЫРАЗИТЬ(ЕСТЬNULL(КонтактнаяИнформация.Представление, """""""") КАК СТРОКА(50)) КАК Телефон,
	               |	ТабельРаботы.Отсутствие
	               |ИЗ
	               |	РегистрСведений.ТабельРаботыГрузчиков КАК ТабельРаботы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |		ПО ТабельРаботы.Сотрудник = КонтактнаяИнформация.Объект
	               |			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонСлужебный))
	               |ГДЕ
	               |	ТабельРаботы.Период МЕЖДУ &ДатаНач И &ДатаКон
	               |	И ТабельРаботы.Сотрудник В
	               |			(ВЫБРАТЬ
	               |				ТабельРаботыКассиров.Сотрудник
	               |			ИЗ
	               |				РегистрСведений.ТабельРаботыГрузчиков КАК ТабельРаботыКассиров
	               |			ГДЕ
	               |				ТабельРаботыКассиров.Период МЕЖДУ &ДатаНач И &ДатаКон
	               |				И ТабельРаботыКассиров.ТорговаяТочка = &ТорговаяТочка)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Период";
				   
	ТабДанные = Запрос.Выполнить().Выгрузить();
	ТабСотрудники = ТабДанные.Скопировать();
	ТабСотрудники.Свернуть("Сотрудник, КодСотрудника, Телефон");
	
	ЭтотОбъект = РеквизитФормыВЗначение("Объект");
	Макет = ЭтотОбъект.ПолучитьМакет("Табель");
	Область = Макет.ПолучитьОбласть("Шапка|Основное");
	ТабДокТабельГрузчики.Вывести(Область);
	
	Для Каждого СтрокаСотрудник Из ТабСотрудники Цикл
		Область = Макет.ПолучитьОбласть("Шапка|Продавец");
		Область.Параметры.Продавец = Строка(СтрокаСотрудник.Сотрудник) + Символы.ПС + СтрокаСотрудник.КодСотрудника;
		Область.Параметры.Телефон = Строка(СтрокаСотрудник.Телефон);
		ТабДокТабельГрузчики.Присоединить(Область);
	КонецЦикла;
	
	ДатаОбработки = Объект.ДатаНач;
	Пока ДатаОбработки <= Объект.ДатаКон Цикл
		Область = Макет.ПолучитьОбласть("Строка|Основное");
		Область.Параметры.Дата = ДатаОбработки;
		ТабДокТабельГрузчики.Вывести(Область);
		Для Каждого СтрокаСотрудник Из ТабСотрудники Цикл
			Область = Макет.ПолучитьОбласть("Строка|Продавец");
			СтрокиДанные = ТабДанные.НайтиСтроки(Новый Структура("Сотрудник, Период", СтрокаСотрудник.Сотрудник, ДатаОбработки));
			Если СтрокиДанные.Количество() > 0 Тогда
				Если СтрокиДанные[0].ТорговаяТочка = ПараметрыСеанса.ТорговаяТочкаПоАйпи Тогда
					Область.Область(1,1,1,1).ЦветФона = Новый Цвет(200, 200, 255);
					Область.Область(1,1,1,1).Шрифт = Новый Шрифт(, 9, Истина);
					Область.Область(1,1,1,1).Текст = ПолучитьПредставлениеТорговойТочкиГрузчики(СтрокиДанные[0]);
				Иначе
					Область.Область(1,1,1,1).Текст = ПолучитьПредставлениеТорговойТочкиГрузчики(СтрокиДанные[0]);
				КонецЕсли;	
			КонецЕсли;	
			ТабДокТабельГрузчики.Присоединить(Область);
		КонецЦикла;
		ДатаОбработки = ДатаОбработки + 86400;
	КонецЦикла;	
	
КонецПроцедуры


&НаКлиенте
Процедура Печать(Команда)
	
	Если Элементы.Группа1.ТекущаяСтраница = Элементы.ГруппаСтраницаПродавцы Тогда
		ТабДокТабель.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабДокТабель.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	Иначе
		ТабДокТабельКассиры.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабДокТабельКассиры.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	КонецЕсли;	
	
КонецПроцедуры
