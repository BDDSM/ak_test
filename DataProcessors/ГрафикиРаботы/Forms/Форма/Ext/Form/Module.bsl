
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВсеГрафики		= УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.РедактированиеГрафиковРаботыПрошлыхПериодов, Ложь);	
	Если ВсеГрафики Тогда
		Запрос			= Новый Запрос;
		Запрос.Текст	= "ВЫБРАТЬ
			               |	СтруктурныеЕдиницыФизлиц.Подразделение
			               |ИЗ
			               |	РегистрСведений.СтруктурныеЕдиницыФизлиц КАК СтруктурныеЕдиницыФизлиц
			               |ГДЕ
			               |	НЕ СтруктурныеЕдиницыФизлиц.Подразделение.ПометкаУдаления
			               |	И НЕ СтруктурныеЕдиницыФизлиц.Подразделение В (&ЛишниеПодразделения)
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	СтруктурныеЕдиницыФизлиц.Подразделение
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	СтруктурныеЕдиницыФизлиц.Подразделение.Наименование";
		ЛишниеПодразделения = Новый Массив;
		ЛишниеПодразделения.Добавить(Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Управление розницей", Истина));
		Запрос.УстановитьПараметр("ЛишниеПодразделения", ЛишниеПодразделения);
		ТЗ					= Запрос.Выполнить().Выгрузить();
		СписокПодразделений	= ТЗ.ВыгрузитьКолонку("Подразделение");
	Иначе
		Запрос			= Новый Запрос;
		Запрос.Текст	= "ВЫБРАТЬ
			               |	ПраваПользователейНаРедактированиеГрафиков.Подразделение
			               |ИЗ
			               |	РегистрСведений.ПраваПользователейНаРедактированиеГрафиков КАК ПраваПользователейНаРедактированиеГрафиков
			               |ГДЕ
			               |	ПраваПользователейНаРедактированиеГрафиков.Пользователь = &Пользователь";
		Запрос.УстановитьПараметр("Пользователь", глЗначениеПеременной("глТекущийПользователь"));
		ТЗ					= Запрос.Выполнить().Выгрузить();
		СписокПодразделений	= ТЗ.ВыгрузитьКолонку("Подразделение");		
	КонецЕсли;
	Элементы.Подразделение.СписокВыбора.ЗагрузитьЗначения(СписокПодразделений);
	Если Элементы.Подразделение.СписокВыбора.Количество()>0 Тогда
		Объект.Подразделение = Элементы.Подразделение.СписокВыбора[0].Значение;
		СтароеПодразделение = Объект.Подразделение;
	КонецЕсли; 
		
КонецПроцедуры

&НаСервере
Функция ПолучитьЦветаСтиля()
	Возврат Новый Структура("ЗаголовокРабочего, ЗаголовокВыходного, Рабочий ,Выходной",
			ЦветаСтиля.АльтернативныйЦветФонаПоля,
			ЦветаСтиля.ЦветФонаШапкиОтчета,
			ЦветаСтиля.ЦветФонаПоля,
			ЦветаСтиля.ЦветФонаШапкиОтчета);
КонецФункции

&НаКлиенте
Процедура УстановитьВидимостьКолонок()
	Цвета = ПолучитьЦветаСтиля();
	ДнейВМесяце = День(КонецМесяца(Объект.НачалоМесяца));
	ГодПериода = Год(Объект.НачалоМесяца);
	МесяцПериода = Месяц(Объект.НачалоМесяца);
	Для Кол = 1 По 31 Цикл  
		ЕстьДень = (Кол<=ДнейВМесяце);
		Элементы["День"+Строка(Кол)].Видимость	= ЕстьДень;
		Если ЕстьДень Тогда
			ДеньНед = ДеньНедели(Дата(ГодПериода, МесяцПериода, Кол));
			Элементы["День"+Строка(Кол)].ЦветФонаЗаголовка	= ?(ДеньНед>5, Цвета.ЗаголовокВыходного, Цвета.ЗаголовокРабочего);
			Элементы["День"+Строка(Кол)].ЦветФона			= ?(ДеньНед>5, Цвета.Выходной, Цвета.Рабочий);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Объект.НачалоМесяца = НачалоМесяца(ТекущаяДата());
    СформироватьСписокВыбораМесяца(Год(Объект.НачалоМесяца));
	Месяц = Формат(Объект.НачалоМесяца, "ДФ='ММММ гггг'");
	//УстановитьВидимостьКолонок();
	ЗаполнитьНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьСписокВыбораМесяца(Год)
    
    Элементы.Месяц.СписокВыбора.Очистить();
    Элементы.Месяц.СписокВыбора.Добавить(Формат(Год-1, "ЧГ=0")); //для смены года
    Для к = 1 По 12  Цикл
        СформДата = Дата(Год, к, 1);
        Наим = Формат(СформДата, "ДФ = ММММ_гггг");
        Наим = СтрЗаменить(Наим, "_", " ");
        Элементы.Месяц.СписокВыбора.Добавить(Наим);    
    КонецЦикла;
    Элементы.Месяц.СписокВыбора.Добавить(Формат(Год+1, "ЧГ=0")); //для смены года   

КонецПроцедуры

&НаКлиенте
Процедура МесяцНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

    Если НЕ Месяц = "" Тогда
        ВыбрГод = Число(Прав(Месяц, 4));
        СформироватьСписокВыбораМесяца(ВыбрГод);
    КонецЕсли;
    
    СтандартнаяОбработка = Ложь;
	
	ВыбранноеЗначение = Строка(ЭтаФорма.ВыбратьИзСписка(Элемент.СписокВыбора, Элемент));
	Если НЕ ВыбранноеЗначение = "" Тогда
        Пока СтрДлина(ВыбранноеЗначение) = 4 Цикл
            ВыбрГод = Число(ВыбранноеЗначение);
            СформироватьСписокВыбораМесяца(ВыбрГод);
            ВыбранноеЗначение = Строка(ЭтаФорма.ВыбратьИзСписка(Элемент.СписокВыбора, Элемент));                    
        КонецЦикла;
		
		Если НЕ СтрДлина(ВыбранноеЗначение)=4 Тогда
			Если ВыбранноеЗначение = Месяц Тогда Возврат КонецЕсли;
			Если НЕ Спросить() Тогда Возврат КонецЕсли;
            Месяц = ВыбранноеЗначение;
            НомМесяца = (Найти("янвфевмарапрмайиюниюлавгсеноктноядек",Нрег(Лев(ВыбранноеЗначение,3)))+2)/3; //получаем номер месяца
            ВыбрГод = Число(Прав(ВыбранноеЗначение, 4));
            Объект.НачалоМесяца = Дата(ВыбрГод, НомМесяца, 1);	
			//УстановитьВидимостьКолонок();
			ЗаполнитьНаСервере();
        КонецЕсли;
    КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры


&НаСервере
Функция ПолучитьИзЗУП(СписокСотрудников, ИсключаемыеДолжности, КонецПериода)
	
	ТипФизЛица	= Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица");
	ТипДата		= Новый ОписаниеТипов("Дата");
	ТипСтрока	= Новый ОписаниеТипов("Строка");
	
	ТР = Новый ТаблицаЗначений;
	ТР.Колонки.Добавить("ФизЛицо", ТипФизЛица);
	ТР.Колонки.Добавить("Период", ТипДата);
	ТР.Колонки.Добавить("ПериодЗавершения", ТипДата);
	ТР.Колонки.Добавить("Состояние", ТипСтрока);
	ТР.Колонки.Добавить("СостояниеЗавершения", ТипСтрока);
	
	ТС = Новый ТаблицаЗначений;
	ТС.Колонки.Добавить("ФизЛицо", ТипФизЛица);
	ТС.Колонки.Добавить("ДатаНачала", ТипДата);	
	ТС.Колонки.Добавить("ДатаОкончания", ТипДата);	
	
	ПК = Новый Массив;
	
	СтрокаПодключения = ПолныеПрава.ПолучитьСтрокуПодключения_Зуп();
	v82COMОбъект = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Зуп() + ".COMConnector");
	
	Попытка
		v82 = v82COMОбъект.Connect(СтрокаПодключения);
		ПодключениеУстановлено=Истина;
	Исключение		
		ПодключениеУстановлено=Ложь;
		Сообщить("Не удалось подключиться к базе зарплаты");
		Возврат(Новый Структура("ТР, ТС, ПК", ТР, ТС, ПК));
	КонецПопытки;
	
	ИсключаемыеCOM = v82.NewObject("Массив");
	Для каждого ИД ИЗ ИсключаемыеДолжности Цикл
			ИсключаемыеCOM.Добавить(ИД);
	КонецЦикла;	
	
	
	Запрос=v82.NewObject("Запрос"); 
	Запрос.УстановитьПараметр("ИсключаемыеДолжности", ИсключаемыеCOM);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(КонецПериода));

	Запрос.текст =	"ВЫБРАТЬ
					|	РаботникиОрганизацийСрезПоследних.Сотрудник,
					|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо КАК Физлицо,
					|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо.Код КАК Код,
					|	РаботникиОрганизацийСрезПоследних.Должность
					|ПОМЕСТИТЬ ОбаСреза
					|ИЗ
					|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&КонецПериода, ) КАК РаботникиОрганизацийСрезПоследних
					|ГДЕ
					|	НЕ РаботникиОрганизацийСрезПоследних.Должность.Наименование В (&ИсключаемыеДолжности)
					|	И РаботникиОрганизацийСрезПоследних.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
					|	И НЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	РаботникиОрганизацийСрезПоследних.Сотрудник,
					|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо,
					|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо.Код,
					|	РаботникиОрганизацийСрезПоследних.Должность
					|ИЗ
					|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&НачалоПериода, ) КАК РаботникиОрганизацийСрезПоследних
					|ГДЕ
					|	НЕ РаботникиОрганизацийСрезПоследних.Должность.Наименование В (&ИсключаемыеДолжности)
					|	И РаботникиОрганизацийСрезПоследних.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
					|	И НЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	МАКСИМУМ(ОбаСреза.Сотрудник) КАК Сотрудник,
					|	ОбаСреза.Физлицо,
					|	МАКСИМУМ(ОбаСреза.Код) КАК Код,
					|	МАКСИМУМ(ОбаСреза.Должность) КАК Должность
					|ИЗ
					|	ОбаСреза КАК ОбаСреза
					|
					|СГРУППИРОВАТЬ ПО
					|	ОбаСреза.Физлицо";		
	ТФЛ = Запрос.Выполнить().Выгрузить();

	
	СписокВЗУП = v82.NewObject("Массив");
	СписокВЗУПСотр = v82.NewObject("Массив");
	Для каждого Сотрудник ИЗ СписокСотрудников Цикл
		НС = ТФЛ.Найти(Сотрудник.Код, "Код");
		Если НЕ НС = Неопределено Тогда
			СписокВЗУП.Добавить(НС.Физлицо);
			СписокВЗУПСотр.Добавить(НС.Сотрудник);
		КонецЕсли;
	КонецЦикла;	
	
	Запрос=v82.NewObject("Запрос"); 
	Запрос.УстановитьПараметр("Сотрудники", СписокВЗУПСотр);
	Запрос.текст = "ВЫБРАТЬ
					|	СостояниеРаботниковОрганизаций.Сотрудник.Физлицо.Наименование КАК ФИО,
					|	СостояниеРаботниковОрганизаций.Сотрудник.Физлицо.Код КАК Код,
					|	СостояниеРаботниковОрганизаций.Период,
					|	ПРЕДСТАВЛЕНИЕ(СостояниеРаботниковОрганизаций.Состояние) КАК Состояние,
					|	ДОБАВИТЬКДАТЕ(СостояниеРаботниковОрганизаций.ПериодЗавершения, ДЕНЬ, -1) КАК ПериодЗавершения,
					|	ПРЕДСТАВЛЕНИЕ(СостояниеРаботниковОрганизаций.СостояниеЗавершения) КАК СостояниеЗавершения
					|ИЗ
					|	РегистрСведений.СостояниеРаботниковОрганизаций КАК СостояниеРаботниковОрганизаций
					|ГДЕ
					|	СостояниеРаботниковОрганизаций.Сотрудник В(&Сотрудники)";		
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Для каждого Стр ИЗ ТЗ Цикл
		НоваяСтрока			= ТР.Добавить();
		НоваяСтрока.ФизЛицо	= Справочники.ФизическиеЛица.НайтиПоКоду(Стр.Код);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);
	КонецЦикла;
	
	Запрос.текст = "ВЫБРАТЬ
					|	МИНИМУМ(ВЫБОР
					|			КОГДА ПериодыРаботыРаботниковОрганизацийПоОсновномуМестуРаботы.ДатаНачала = ДАТАВРЕМЯ(1, 1, 1)
					|				ТОГДА ДАТАВРЕМЯ(3999, 12, 12)
					|			ИНАЧЕ ПериодыРаботыРаботниковОрганизацийПоОсновномуМестуРаботы.ДатаНачала
					|		КОНЕЦ) КАК ДатаНачала,
					|	МАКСИМУМ(ВЫБОР
					|			КОГДА ПериодыРаботыРаботниковОрганизацийПоОсновномуМестуРаботы.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
					|				ТОГДА ДАТАВРЕМЯ(3999, 12, 12)
					|			ИНАЧЕ ПериодыРаботыРаботниковОрганизацийПоОсновномуМестуРаботы.ДатаОкончания
					|		КОНЕЦ) КАК ДатаОкончания,
					|	ПериодыРаботыРаботниковОрганизацийПоОсновномуМестуРаботы.Физлицо.Наименование КАК ФИО,
					|	ПериодыРаботыРаботниковОрганизацийПоОсновномуМестуРаботы.Физлицо.Код КАК Код
					|ИЗ
					|	РегистрСведений.ПериодыРаботыРаботниковОрганизацийПоОсновномуМестуРаботы КАК ПериодыРаботыРаботниковОрганизацийПоОсновномуМестуРаботы
					|ГДЕ
					|	ПериодыРаботыРаботниковОрганизацийПоОсновномуМестуРаботы.Физлицо В(&Физлица)
					|
					|СГРУППИРОВАТЬ ПО
					|	ПериодыРаботыРаботниковОрганизацийПоОсновномуМестуРаботы.Физлицо.Наименование,
					|	ПериодыРаботыРаботниковОрганизацийПоОсновномуМестуРаботы.Физлицо.Код";
	Запрос.УстановитьПараметр("Физлица", СписокВЗУП);
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Для каждого Стр ИЗ ТЗ Цикл
		НоваяСтрока			= ТС.Добавить();
		НоваяСтрока.ФизЛицо	= Справочники.ФизическиеЛица.НайтиПоКоду(Стр.Код);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);
	КонецЦикла;
	
	Запрос.текст = "ВЫБРАТЬ
					|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря КАК Период,
					|	ПРЕДСТАВЛЕНИЕ(РегламентированныйПроизводственныйКалендарь.ВидДня) КАК ВидДня
					|ИЗ
					|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
					|ГДЕ
					|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря >= &НачПериода
					|	И РегламентированныйПроизводственныйКалендарь.ДатаКалендаря <= &КонПериода
					|
					|УПОРЯДОЧИТЬ ПО
					|	Период";
	Запрос.УстановитьПараметр("НачПериода", НачалоМесяца(Объект.НачалоМесяца));
	Запрос.УстановитьПараметр("КонПериода", КонецМесяца(Объект.НачалоМесяца));
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Для каждого Стр ИЗ ТЗ Цикл
		ПК.Добавить(?(Стр.ВидДня = "Предпраздничный" ИЛИ Стр.ВидДня = "Рабочий", "Я", ""));
	КонецЦикла;
		
	Возврат Новый Структура("ТР, ТС, ПК", ТР, ТС, ПК);
	
КонецФункции


&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Объект.Дни.Очистить();
	Если Объект.Подразделение = Справочники.СтруктурныеЕдиницы.ПустаяСсылка() Тогда Возврат КонецЕсли;
	
	ГодПериода = Год(Объект.НачалоМесяца);
	МесяцПериода = Месяц(Объект.НачалоМесяца);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДолжностиИсключаемыеИзГрафиков.Должность
	               |ИЗ
	               |	РегистрСведений.ДолжностиИсключаемыеИзГрафиков КАК ДолжностиИсключаемыеИзГрафиков";
	ИсключаемыеДолжности = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Должность");	
					   
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтруктурныеЕдиницыФизлицСрезПоследних.ФизЛицо КАК Сотрудник,
	               |	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаПриема,
	               |	ДАТАВРЕМЯ(1, 1, 1) КАК ДатаУвольнения
	               |ИЗ
	               |	РегистрСведений.СтруктурныеЕдиницыФизлиц.СрезПоследних(&Период, ) КАК СтруктурныеЕдиницыФизлицСрезПоследних
	               |ГДЕ
	               |	СтруктурныеЕдиницыФизлицСрезПоследних.Подразделение = &Подразделение
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	СтруктурныеЕдиницыФизлицСрезПоследних.ФизЛицо.Наименование";
				   
				   
				 
	Запрос.УстановитьПараметр("Период", Объект.НачалоМесяца);
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	СписокСотрудников = ТЗ.ВыгрузитьКолонку("Сотрудник");
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ГрафикиРаботыСотрудников.Сотрудник,
	               |	ГрафикиРаботыСотрудников.Период,
	               |	ГрафикиРаботыСотрудников.КодЗанятости
	               |ИЗ
	               |	РегистрСведений.ГрафикиРаботыСотрудников КАК ГрафикиРаботыСотрудников
	               |ГДЕ
	               |	ГрафикиРаботыСотрудников.Период >= &НачалоМесяца
	               |	И ГрафикиРаботыСотрудников.Сотрудник В(&Сотрудники)
	               |	И ГрафикиРаботыСотрудников.Период <= КОНЕЦПЕРИОДА(&НачалоМесяца, МЕСЯЦ)";
	Запрос.УстановитьПараметр("Сотрудники", СписокСотрудников);
	Запрос.УстановитьПараметр("НачалоМесяца", Объект.НачалоМесяца);
	Записи = Запрос.Выполнить().Выгрузить();
		
    ДанныеИЗЗУП = ПолучитьИзЗУП(СписокСотрудников, ИсключаемыеДолжности, КонецМесяца(Объект.НачалоМесяца));
	
	Для Каждого Стр Из ДанныеИЗЗУП.ТС Цикл
		НайСтрока = ТЗ.Найти(Стр.ФизЛицо, "Сотрудник");
		Если НЕ НайСтрока = Неопределено Тогда
			НайСтрока.ДатаПриема = Стр.ДатаНачала;
			НайСтрока.ДатаУвольнения = Стр.ДатаОкончания;
		КонецЕсли;
	КонецЦикла;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДанныеИЗЗУП.Период КАК Период,
	               |	ДанныеИЗЗУП.ПериодЗавершения,
	               |	ДанныеИЗЗУП.Состояние,
	               |	ДанныеИЗЗУП.СостояниеЗавершения
	               |ПОМЕСТИТЬ Врем
	               |ИЗ
	               |	&ДанныеИЗЗУП КАК ДанныеИЗЗУП
	               |ГДЕ
	               |	ДанныеИЗЗУП.ФизЛицо = &ФизЛицо
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Врем.Период КАК Период,
	               |	Врем.ПериодЗавершения,
	               |	Врем.Состояние,
	               |	Врем.СостояниеЗавершения
	               |ИЗ
	               |	Врем КАК Врем
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Период";
	Запрос.УстановитьПараметр("ДанныеИЗЗУП", ДанныеИЗЗУП.ТР);
	
	Изменено = Ложь;	
	НМ = НачалоМесяца(Объект.НачалоМесяца);
	КМ = КонецМесяца(НМ);	
	
	Для Каждого Стр Из ТЗ Цикл
		Если (Стр.ДатаУвольнения <= НачалоМесяца(Объект.НачалоМесяца)) ИЛИ Стр.ДатаПриема>КонецМесяца(Объект.НачалоМесяца) Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = Объект.Дни.Добавить();
		НоваяСтрока.Сотрудник = Стр.Сотрудник;
		
		//Если прием и увольнение попадают на этот месяц, записываем дни приема и увольнения в соответствующие реквизиты строки
		Если НачалоМесяца(Стр.ДатаПриема) = НачалоМесяца(Объект.НачалоМесяца) Тогда
			НоваяСтрока.ПервыйДень = День(Стр.ДатаПриема);
		Иначе
			НоваяСтрока.ПервыйДень = 1;
		КонецЕсли;
		Если НачалоМесяца(Стр.ДатаУвольнения) = НачалоМесяца(Объект.НачалоМесяца) Тогда
			НоваяСтрока.ПоследнийДень = День(Стр.ДатаУвольнения)-1;
		Иначе
			НоваяСтрока.ПоследнийДень = День(КонецМесяца(Объект.НачалоМесяца));
		КонецЕсли;
				
		// Заполним записями из регистра
		Отбор = Новый Структура();
		Отбор.Вставить("Сотрудник", Стр.Сотрудник);
		ЗаписиПоСотруднику = Записи.НайтиСтроки(Отбор);
		Для каждого Запись из ЗаписиПоСотруднику Цикл
			КолонкаДня = "День" + Формат(Запись.Период, "ДФ=d");
			Если НЕ ЗначениеЗаполнено(НоваяСтрока[КолонкаДня]) Тогда
				НоваяСтрока[КолонкаДня] = Запись.КодЗанятости;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	
	Для Каждого Стр ИЗ Объект.Дни Цикл
		//Занесем данные из ЗУП
		Запрос.УстановитьПараметр("Физлицо", Стр.Сотрудник);
		ТЗУП = Запрос.Выполнить().Выгрузить();
	
		Для Ном=0 ПО ТЗУП.Количество()-1 Цикл
			Сост = ТЗУП[Ном];
			Если Сост.Состояние = "Работает" ИЛИ Сост.Период > КМ ИЛИ (ЗначениеЗаполнено(Сост.ПериодЗавершения) И Сост.ПериодЗавершения<НМ) Тогда
				Продолжить;
			КонецЕсли;
			НачПериода = ?(Сост.Период<НМ, 1, День(Сост.Период));
			Если ЗначениеЗаполнено(Сост.ПериодЗавершения) Тогда
				КонПериода = ?(Сост.ПериодЗавершения>КМ, День(КМ), День(Сост.ПериодЗавершения));
			Иначе
				Если Ном = ТЗУП.Количество()-1 Тогда
					КонПериода = День(КМ);
				Иначе
					КонПериода = ?(ТЗУП[Ном+1].Период<НМ, 0, ?(ТЗУП[Ном+1].Период>НМ, День(КМ), День(ТЗУП[Ном+1].Период)));
				КонецЕсли;
			КонецЕсли;
			
			Если Сост.Состояние = "В ежегодном отпуске" 
				ИЛИ Сост.Состояние = "В отпуске по беременности и родам"
				ИЛИ Сост.Состояние = "В отпуске по уходу за ребенком"
				ИЛИ Сост.Состояние = "В учебном оплачиваемом отпуске" Тогда
				Для НДня = НачПериода По КонПериода Цикл
					Колонка = "День" + Строка(НДня);
					Изменено = Изменено ИЛИ (НЕ Стр[Колонка] = "О");
					Стр[Колонка] = "О";
				КонецЦикла;
			ИначеЕсли Сост.Состояние = "В учебном неоплачиваемом отпуске" 
					ИЛИ Сост.Состояние = "В отпуске без сохранения зарплаты" Тогда
				Для НДня = НачПериода По КонПериода Цикл
					Колонка = "День" + Строка(НДня);
					Изменено = Изменено ИЛИ (НЕ Стр[Колонка] = "А");
					Стр[Колонка] = "А";
				КонецЦикла;	
			ИначеЕсли Сост.Состояние = "Болеет" 
				ИЛИ Сост.Состояние = "Уход за больным ребенком"
				ИЛИ Сост.Состояние = "Уход за больным взрослым членом семьи" Тогда
				Для НДня = НачПериода По КонПериода Цикл
					Колонка = "День" + Строка(НДня);
					Если Стр[Колонка]="Я" Тогда
						Стр[Колонка] = "?";
					ИначеЕсли Стр[Колонка]="Я" ИЛИ Стр[Колонка]="" Тогда
						Изменено = Истина;						
						Стр[Колонка] = "Б";
					КонецЕсли;
				КонецЦикла;
			Иначе
			КонецЕсли;						
		КонецЦикла;		
	КонецЦикла;
	
	// Пустые рабочие дни заполним явкой
	Для Каждого Стр Из Объект.Дни Цикл
		Для День = 1 По День(КонецМесяца(Объект.НачалоМесяца)) Цикл
			КолонкаДня = "День" + Строка(День);
			ДеньНед = ДеньНедели(Дата(ГодПериода, МесяцПериода, День));
			Если ЗначениеЗаполнено(Стр[КолонкаДня]) и (День<Стр.ПервыйДень ИЛИ День>Стр.ПоследнийДень) Тогда
				Стр[КолонкаДня] = "";
				Изменено = Истина;
			ИначеЕсли (Стр[КолонкаДня] = "" ИЛИ Стр[КолонкаДня] = "Я") и ДеньНед<6 И День>=Стр.ПервыйДень и День<=Стр.ПоследнийДень Тогда
				Изменено = Изменено ИЛИ (НЕ Стр[КолонкаДня] = ДанныеИЗЗУП.ПК[День-1]);
				Стр[КолонкаДня] = ДанныеИЗЗУП.ПК[День-1];
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;	
	
	// Доступность
	ТекПользователь = глЗначениеПеременной("глТекущийПользователь");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПраваПользователейНаРедактированиеГрафиков.Подразделение
	               |ИЗ
	               |	РегистрСведений.ПраваПользователейНаРедактированиеГрафиков КАК ПраваПользователейНаРедактированиеГрафиков
	               |ГДЕ
	               |	ПраваПользователейНаРедактированиеГрафиков.Пользователь = &Пользователь
	               |	И ПраваПользователейНаРедактированиеГрафиков.Подразделение = &Подразделение";
				   
	Запрос.УстановитьПараметр("Пользователь", ТекПользователь);
	Запрос.УстановитьПараметр("Подразделение", Объект.Подразделение);
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	ЭтоРуководительПодразделения		= (ТЗ.Количество()>0);
	ЕстьПравоРедактироватьСтарыеГрафики	= УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.РедактированиеГрафиковРаботыПрошлыхПериодов, Ложь);
	ЭтоСтарыйГрафик						= ((КонецДня(ТекущаяДата()) - КонецМесяца(Объект.НачалоМесяца))/(60*60*24)>3);
	
	РазрешитьРедактирование = (ЭтоРуководительПодразделения И НЕ ЭтоСтарыйГрафик) ИЛИ ЕстьПравоРедактироватьСтарыеГрафики;
	
	Элементы.Дни.Доступность			= РазрешитьРедактирование; 
	Элементы.ДниЗаполнитьА.Доступность	= РазрешитьРедактирование;
	Элементы.ДниЗаполнитьБ.Доступность	= РазрешитьРедактирование;
	Элементы.ДниЗаполнитьН.Доступность	= РазрешитьРедактирование;
	Элементы.ДниЗаполнитьО.Доступность	= РазрешитьРедактирование;
	Элементы.ДниЗаполнитьЯ.Доступность	= РазрешитьРедактирование;
	
	
	Цвета = ПолучитьЦветаСтиля();
	ДнейВМесяце = День(КонецМесяца(Объект.НачалоМесяца));
	ГодПериода = Год(Объект.НачалоМесяца);
	МесяцПериода = Месяц(Объект.НачалоМесяца);
	Для Кол = 1 По 31 Цикл  
		ЕстьДень = (Кол<=ДнейВМесяце);
		Элементы["День"+Строка(Кол)].Видимость	= ЕстьДень;
		Если ЕстьДень Тогда			
			//ДеньНед = ДеньНедели(Дата(ГодПериода, МесяцПериода, Кол));
			//Элементы["День"+Строка(Кол)].ЦветФонаЗаголовка	= ?(ДеньНед>5, Цвета.ЗаголовокВыходного, Цвета.ЗаголовокРабочего);
			//Элементы["День"+Строка(Кол)].ЦветФона			= ?(ДеньНед>5, Цвета.Выходной, Цвета.Рабочий);
			Элементы["День"+Строка(Кол)].ЦветФонаЗаголовка	= ?(ДанныеИЗЗУП.ПК[Кол-1]="", Цвета.ЗаголовокВыходного, Цвета.ЗаголовокРабочего);
			Элементы["День"+Строка(Кол)].ЦветФона			= ?(ДанныеИЗЗУП.ПК[Кол-1]="", Цвета.Выходной, Цвета.Рабочий);			
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры


&НаКлиенте
Процедура ЗаписатьИзменения(Команда)
	ЗаписатьНаСервере();
	Изменено = Ложь;
КонецПроцедуры


&НаСервере
Процедура ЗаписатьНаСервере()
	Для каждого Стр Из Объект.Дни Цикл
		ПоследнийДеньМесяца = День(КонецМесяца(Объект.НачалоМесяца));
		Для ДеньМесяца=1 по День(КонецМесяца(Объект.НачалоМесяца)) Цикл
			ДатаМесяца = Дата(Год(Объект.НачалоМесяца), Месяц(Объект.НачалоМесяца), ДеньМесяца);
			КолонкаДня = "День" + Строка(ДеньМесяца);
			Попытка
				МенеджерЗаписи = РегистрыСведений.ГрафикиРаботыСотрудников.СоздатьМенеджерЗаписи(); 
				МенеджерЗаписи.Сотрудник   = Стр.Сотрудник; 
				МенеджерЗаписи.Период = ДатаМесяца; 
				МенеджерЗаписи.КодЗанятости = СтрЗаменить(Стр[КолонкаДня], "?", "Я"); 
				МенеджерЗаписи.Записать(); 							
			Исключение
			КонецПопытки;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьЯчейкиСервер(Строки, Колонка, Код)
	Если НЕ Лев(Колонка, 4) = "День" Тогда Возврат КонецЕсли;
	Для Каждого Стр Из Строки Цикл
		Попытка
			Объект.Дни.НайтиПоИдентификатору(Стр)[Колонка] = Код;
		Исключение
		КонецПопытки;
	КонецЦикла;
	Изменено = Истина;
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьЯ(Команда)
	ВыделенныеСтроки = ЭтаФорма.Элементы.Дни.ВыделенныеСтроки;
	ТекущаяКолонка = ЭтаФорма.Элементы.Дни.ТекущийЭлемент.Имя;
	ЗаполнитьЯчейкиСервер(ВыделенныеСтроки, ТекущаяКолонка, "Я");
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьО(Команда)
	ВыделенныеСтроки = ЭтаФорма.Элементы.Дни.ВыделенныеСтроки;
	ТекущаяКолонка = ЭтаФорма.Элементы.Дни.ТекущийЭлемент.Имя;
	ЗаполнитьЯчейкиСервер(ВыделенныеСтроки, ТекущаяКолонка, "О");
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьБ(Команда)
	ВыделенныеСтроки = ЭтаФорма.Элементы.Дни.ВыделенныеСтроки;
	ТекущаяКолонка = ЭтаФорма.Элементы.Дни.ТекущийЭлемент.Имя;
	ЗаполнитьЯчейкиСервер(ВыделенныеСтроки, ТекущаяКолонка, "Б");
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьН(Команда)
	ВыделенныеСтроки = ЭтаФорма.Элементы.Дни.ВыделенныеСтроки;
	ТекущаяКолонка = ЭтаФорма.Элементы.Дни.ТекущийЭлемент.Имя;
	ЗаполнитьЯчейкиСервер(ВыделенныеСтроки, ТекущаяКолонка, "Н");
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьА(Команда)
	ВыделенныеСтроки = ЭтаФорма.Элементы.Дни.ВыделенныеСтроки;
	ТекущаяКолонка = ЭтаФорма.Элементы.Дни.ТекущийЭлемент.Имя;
	ЗаполнитьЯчейкиСервер(ВыделенныеСтроки, ТекущаяКолонка, "А");
КонецПроцедуры


&НаСервере
Функция НапечатьТабель()
	Макет = РеквизитФормыВЗначение("Объект").ПолучитьМакет("Макет");
	ОбластьШапки		= Макет.ПолучитьОбласть("Шапка");
	ОбластьШапки.Параметры["Месяц"]			= Формат(Объект.НачалоМесяца, "ДФ='ММММ yyyy'");
	ОбластьШапки.Параметры["Подразделение"]	= Объект.Подразделение.Наименование;
	ОбластьСтрок		= Новый ТабличныйДокумент;
	СтрокаШапки			= Новый ТабличныйДокумент;
	Область1			= Макет.ПолучитьОбласть("ШапкаТаблицы|Сотрудник");
	Область2			= Макет.ПолучитьОбласть("ШапкаТаблицы|День");
	Область3			= Макет.ПолучитьОбласть("ШапкаТаблицы|Выходной");
	СтрокаШапки.Вывести(Область1);
	ЧислоДней			= День(КонецМесяца(Объект.НачалоМесяца));
	Для НомерДня = 1 По ЧислоДней Цикл
		НомерДняНедели = ДеньНедели(Дата(Год(Объект.НачалоМесяца), Месяц(Объект.НачалоМесяца), НомерДня));
		Ячейка = ?(НомерДняНедели>5, Область3, Область2);
		Ячейка.Параметры["НомерДня"] = Строка(НомерДня);
		СтрокаШапки.Присоединить(Ячейка);
	КонецЦикла;
	Область1			= Макет.ПолучитьОбласть("Строка|Сотрудник");
	Область2			= Макет.ПолучитьОбласть("Строка|День");	
	Область3			= Макет.ПолучитьОбласть("Строка|Выходной");
	Для Каждого Стр Из Объект.Дни Цикл
		СтрокаСотрудника	= Новый ТабличныйДокумент;
		Область1.Параметры["Сотрудник"] = Стр.Сотрудник.Наименование;
		СтрокаСотрудника.Вывести(Область1);
		Для НомерДня = 1 По ЧислоДней Цикл
			НомерДняНедели = ДеньНедели(Дата(Год(Объект.НачалоМесяца), Месяц(Объект.НачалоМесяца), НомерДня));
			Ячейка = ?(НомерДняНедели>5, Область3, Область2);			
			Ячейка.Параметры["Код"] = Стр["День" + Строка(НомерДня)];
			СтрокаСотрудника.Присоединить(Ячейка);
		КонецЦикла;	
		ОбластьСтрок.Вывести(СтрокаСотрудника);
	КонецЦикла;
	//Вывести области в документ
	Док					= Новый ТабличныйДокумент;
	Док.Вывести(ОбластьШапки);
	Док.Вывести(СтрокаШапки);
	Док.Вывести(ОбластьСтрок);
	Возврат Док;
КонецФункции

&НаКлиенте
Процедура Печать(Команда)
	Док = НапечатьТабель();
	//Док.Показать("Графики работы сотрудников за " + Формат(Объект.НачалоМесяца, "ДФ='ММММ yyyy'"));
	ОткрытьФорму("ОбщаяФорма.ФормаОтображенияТабДокумента", Новый Структура("ТабДок, ОтображатьСетку, РазрешитьРедактирование, УстановитьЗаголовок", Док, Ложь, Ложь, "Графики работы сотрудников за " + Формат(Объект.НачалоМесяца, "ДФ='ММММ yyyy'")),, Новый УникальныйИдентификатор());
КонецПроцедуры


&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	Если Объект.Подразделение = СтароеПодразделение Тогда Возврат КонецЕсли;
	Если НЕ Спросить() Тогда Возврат КонецЕсли;
	СтароеПодразделение = Объект.Подразделение;
	ЗаполнитьНаСервере();
КонецПроцедуры


&НаКлиенте
Функция Спросить()
	Если НЕ Изменено Тогда Возврат Истина КонецЕсли;
	Ответ = Вопрос("Данные изменены. Записать?", РежимДиалогаВопрос.ДаНетОтмена);
	Если Ответ = КодВозвратаДиалога.Отмена Тогда Возврат Ложь КонецЕсли;
	Если Ответ = КодВозвратаДиалога.Да Тогда ЗаписатьНаСервере() КонецЕсли;
	Возврат Истина;
КонецФункции


&НаКлиенте
Процедура ДниПриИзменении(Элемент)
	Код = ВРег(Элемент.ТекущиеДанные[Элемент.ТекущийЭлемент.Имя]);
	Изменено = Истина;
	Элемент.ТекущиеДанные[Элемент.ТекущийЭлемент.Имя] = ?(Код="Я", "Я", "Н");
КонецПроцедуры


&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если Не Спросить() Тогда Отказ = Истина КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ДниПриАктивизацииСтроки(Элемент)
	Если Элемент.ТекущиеДанные = Неопределено Тогда Возврат КонецЕсли;
	Для ДеньМесяца=1 по День(КонецМесяца(Объект.НачалоМесяца)) Цикл
		Дост = (Элемент.ТекущиеДанные["День"+Строка(ДеньМесяца)]="Я")
				ИЛИ (Элемент.ТекущиеДанные["День"+Строка(ДеньМесяца)]="?")
				ИЛИ (Элемент.ТекущиеДанные["День"+Строка(ДеньМесяца)]="Н" И УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.РедактированиеГрафиковРаботыПрошлыхПериодов, Ложь));
		Элемент.ПодчиненныеЭлементы["День"+Строка(ДеньМесяца)].Доступность = Дост;
	КонецЦикла;
КонецПроцедуры

