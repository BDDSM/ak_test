
&НаСервере
Процедура ОбновитьСписокСОстатками()
	
	Если Элементы.ТекущиеОстатки.ТекущаяСтрока <> Неопределено Тогда
		ТекНоменклатура = ТекущиеОстатки.НайтиПоИдентификатору(Элементы.ТекущиеОстатки.ТекущаяСтрока).Номенклатура;
	Иначе
		ТекНоменклатура = Неопределено;
	КонецЕсли;	
	
	ТекущиеОстатки.Очистить();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаОтсекаем", ТекущаяДата() - 15 * 86400);
	Запрос.УстановитьПараметр("ТекДата", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Магазин", ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	Запрос.УстановитьПараметр("РеклПродукция", Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_tt", 11024)); //рекламная продукция
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЗ_Запрос.Номенклатура,
	               |	СУММА(ВЗ_Запрос.КоличествоОстаток) КАК КоличествоОстаток,
	               |	СУММА(ВЗ_Запрос.ОбщийЗаказ) КАК ОбщийЗаказ,
	               |	СУММА(ВЗ_Запрос.ЗаказаноНеУтверждено) КАК ЗаказаноНеУтверждено
	               |ПОМЕСТИТЬ ВТ_Заказано
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ЗаявкиНаРекламныеМатериалыОстатки.Номенклатура КАК Номенклатура,
	               |		ВЫБОР
	               |			КОГДА ЗаявкиНаРекламныеМатериалыОстатки.Заявка.ТорговаяТочка = &Магазин
	               |				ТОГДА ЗаявкиНаРекламныеМатериалыОстатки.КоличествоОстаток
	               |			ИНАЧЕ 0
	               |		КОНЕЦ КАК КоличествоОстаток,
	               |		ЗаявкиНаРекламныеМатериалыОстатки.КоличествоОстаток КАК ОбщийЗаказ,
	               |		0 КАК ЗаказаноНеУтверждено
	               |	ИЗ
	               |		РегистрНакопления.ЗаявкиНаРекламныеМатериалы.Остатки(, НЕ Номенклатура.ПометкаУдаления) КАК ЗаявкиНаРекламныеМатериалыОстатки   //+++АК mika 2018.05.30 ИП-00018800 Ограничение помеченных на удаление позиций
	               |	ГДЕ
	               |		ЗаявкиНаРекламныеМатериалыОстатки.Заявка.Дата >= &ДатаОтсекаем
	               |		И ЗаявкиНаРекламныеМатериалыОстатки.КоличествоОстаток > 0
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ЗаявкаНаРекламныеМатериалыТовары.Номенклатура,
	               |		0,
	               |		ЗаявкаНаРекламныеМатериалыТовары.Количество,
	               |		ВЫБОР
	               |			КОГДА ЗаявкаНаРекламныеМатериалыТовары.Ссылка.ТорговаяТочка = &Магазин
	               |				ТОГДА ЗаявкаНаРекламныеМатериалыТовары.Количество
	               |			ИНАЧЕ 0
	               |		КОНЕЦ
	               |	ИЗ
	               |		Документ.ЗаявкаНаРекламныеМатериалы.Товары КАК ЗаявкаНаРекламныеМатериалыТовары
	               |	ГДЕ
	               |		ЗаявкаНаРекламныеМатериалыТовары.Ссылка.Дата >= &ДатаОтсекаем
	               |		И ЗаявкаНаРекламныеМатериалыТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
				   |		И ЗаявкаНаРекламныеМатериалыТовары.Ссылка.Утверждена = ЛОЖЬ
				   |		И ЗаявкаНаРекламныеМатериалыТовары.Количество > 0
				   //+++АК mika 2018.05.30 ИП-00018800 Ограничение помеченных на удаление позиций
				   |		И НЕ ЗаявкаНаРекламныеМатериалыТовары.Номенклатура.ПометкаУдаления) КАК ВЗ_Запрос				   
				   //---АК mika ИП-00018800
				   |СГРУППИРОВАТЬ ПО
				   |	ВЗ_Запрос.Номенклатура
				   |;
				   |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТоварыНаСкладахОстатки.Номенклатура,
	               |	СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток
	               |ПОМЕСТИТЬ ВТ_Остаток
	               |ИЗ
	               |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |			&ТекДата,
	               |			Склад.Владелец = &РеклПродукция
	               |				И Номенклатура.РекламныйМатериал = ИСТИНА
	               |				И НЕ Номенклатура.ПометкаУдаления) КАК ТоварыНаСкладахОстатки
	               |ГДЕ
	               |	ТоварыНаСкладахОстатки.КоличествоОстаток > 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ТоварыНаСкладахОстатки.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЗ_Запрос.Номенклатура,
	               |	ВЗ_Запрос.КоличествоВМагазине,
	               |	ВЗ_Запрос.ЗаказаноВМагазин,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(ВТ_Остаток.КоличествоОстаток, 0) - ЕСТЬNULL(ВЗ_Запрос.ОбщийЗаказ, 0) < 0
	               |			ТОГДА 0
	               |		ИНАЧЕ ЕСТЬNULL(ВТ_Остаток.КоличествоОстаток, 0) - ЕСТЬNULL(ВЗ_Запрос.ОбщийЗаказ, 0)
	               |	КОНЕЦ КАК СвободноНаСкладе,
	               |	НоменклатураСпр.ВидРекламногоМатериала КАК Вид,
	               |	ВЗ_Запрос.ЗаказаноНеУтверждено,
				   //+++АК mika 2018.05.30 ИП-00018800
	               |	НоменклатураСпр.ЕдиницаХраненияОстатков КАК ЕдИзмОстатков
				    //---АК mika ИП-00018800
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ЕСТЬNULL(РегистрНакопленияРекламныеМатериалыВМагазинахОстатки.Номенклатура, ВТ_Заказано.Номенклатура) КАК Номенклатура,
	               |		ЕСТЬNULL(РегистрНакопленияРекламныеМатериалыВМагазинахОстатки.КоличествоОстаток, 0) КАК КоличествоВМагазине,
	               |		ЕСТЬNULL(ВТ_Заказано.КоличествоОстаток, 0) КАК ЗаказаноВМагазин,
	               |		ЕСТЬNULL(ВТ_Заказано.ЗаказаноНеУтверждено, 0) КАК ЗаказаноНеУтверждено,
	               |		ЕСТЬNULL(ВТ_Заказано.ОбщийЗаказ, 0) КАК ОбщийЗаказ
	               |	ИЗ
	               |		РегистрНакопления.РекламныеМатериалыВМагазинах.Остатки(, Магазин = &Магазин) КАК РегистрНакопленияРекламныеМатериалыВМагазинахОстатки
	               |			ПОЛНОЕ СОЕДИНЕНИЕ ВТ_Заказано КАК ВТ_Заказано
	               |			ПО РегистрНакопленияРекламныеМатериалыВМагазинахОстатки.Номенклатура = ВТ_Заказано.Номенклатура) КАК ВЗ_Запрос
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Остаток КАК ВТ_Остаток
	               |		ПО ВЗ_Запрос.Номенклатура = ВТ_Остаток.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК НоменклатураСпр
	               |		ПО ВЗ_Запрос.Номенклатура = НоменклатураСпр.Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВЗ_Запрос.Номенклатура.Наименование";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДоб = ТекущиеОстатки.Добавить();
		СтрокаДоб.Вид = Выборка.Вид;
		СтрокаДоб.Номенклатура = Выборка.Номенклатура;
		СтрокаДоб.КоличествоВМагазине = Выборка.КоличествоВМагазине;
		СтрокаДоб.Заказано = Выборка.ЗаказаноВМагазин;
		СтрокаДоб.ЗаказаноИНеУтверждено = Выборка.ЗаказаноНеУтверждено;
		СтрокаДоб.СвободныйОстатокНаСкладах = Выборка.СвободноНаСкладе;
		СтрокаДоб.ЕдИзмОстатков = Выборка.ЕдИзмОстатков;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ТекНоменклатура) Тогда
		СтрокиТаб = ТекущиеОстатки.НайтиСтроки(Новый Структура("Номенклатура", ТекНоменклатура));
		Если СтрокиТаб.Количество() > 0 Тогда
			Элементы.ТекущиеОстатки.ТекущаяСтрока = СтрокиТаб[0].ПолучитьИдентификатор();
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры	

&НаСервере
Процедура ОбновитьСписокЗаявок()
	
	Если Элементы.ЗаявкиПоМагазину.ТекущаяСтрока <> Неопределено Тогда
		ТекЗаявка = ЗаявкиПоМагазину.НайтиПоИдентификатору(Элементы.ЗаявкиПоМагазину.ТекущаяСтрока).Заявка;
	Иначе
		ТекЗаявка = Неопределено;
	КонецЕсли;
	
	ЗаявкиПоМагазину.Очистить();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("РеклПродукция", Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_tt", 11024)); //рекламная продукция
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ТекущаяДата() - 14*86400));
	Запрос.УстановитьПараметр("Магазин", ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаявкаНаРекламныеМатериалы.Ссылка,
	               |	ЗаявкаНаРекламныеМатериалы.Автор,
	               |	ЗаявкаНаРекламныеМатериалы.Комментарий,
	               |	ЗаявкаНаРекламныеМатериалы.ТорговаяТочка,
	               |	ЗаявкаНаРекламныеМатериалы.Утверждена
	               |ПОМЕСТИТЬ ВТ_Заявки
	               |ИЗ
	               |	Документ.ЗаявкаНаРекламныеМатериалы КАК ЗаявкаНаРекламныеМатериалы
	               |ГДЕ
	               |	ЗаявкаНаРекламныеМатериалы.ПометкаУдаления = ЛОЖЬ
	               |	И ЗаявкаНаРекламныеМатериалы.Дата >= &ДатаНач
	               |	И ЗаявкаНаРекламныеМатериалы.ТорговаяТочка = &Магазин
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Заявки.Ссылка КАК Заявка,
	               |	ВТ_Заявки.Автор,
	               |	ВТ_Заявки.Комментарий,
	               |	ВТ_Заявки.ТорговаяТочка КАК Магазин,
	               |	ВЫБОР
	               |		КОГДА ВТ_Заявки.Утверждена = ЛОЖЬ
	               |			ТОГДА ""Новая""
	               |		КОГДА ЕСТЬNULL(ВЗ_Остатки.КоличествоОстаток, 0) = 0
	               |			ТОГДА ""Отгружено""
	               |		КОГДА ЕСТЬNULL(ВЗ_Отгрузки.Количество, 0) <> 0
	               |			ТОГДА ""Частично отгружено""
	               |		ИНАЧЕ ""Новая""
	               |	КОНЕЦ КАК Статус,
	               |	ВТ_Заявки.Утверждена
	               |ИЗ
	               |	ВТ_Заявки КАК ВТ_Заявки
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ЗаявкиНаРекламныеМатериалыОстатки.Заявка КАК Заявка,
	               |			СУММА(ЗаявкиНаРекламныеМатериалыОстатки.КоличествоОстаток) КАК КоличествоОстаток
	               |		ИЗ
	               |			РегистрНакопления.ЗаявкиНаРекламныеМатериалы.Остатки(
	               |					,
	               |					Заявка В
	               |						(ВЫБРАТЬ
	               |							ВТ_Заявки.Ссылка
	               |						ИЗ
	               |							ВТ_Заявки КАК ВТ_Заявки)) КАК ЗаявкиНаРекламныеМатериалыОстатки
	               |		ГДЕ
	               |			ЗаявкиНаРекламныеМатериалыОстатки.КоличествоОстаток > 0
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ЗаявкиНаРекламныеМатериалыОстатки.Заявка) КАК ВЗ_Остатки
	               |		ПО ВТ_Заявки.Ссылка = ВЗ_Остатки.Заявка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ЗаявкиНаРекламныеМатериалы.Заявка КАК Заявка,
	               |			СУММА(ЗаявкиНаРекламныеМатериалы.Количество) КАК Количество
	               |		ИЗ
	               |			РегистрНакопления.ЗаявкиНаРекламныеМатериалы КАК ЗаявкиНаРекламныеМатериалы
	               |		ГДЕ
	               |			ЗаявкиНаРекламныеМатериалы.Заявка В
	               |					(ВЫБРАТЬ
	               |						ВТ_Заявки.Ссылка
	               |					ИЗ
	               |						ВТ_Заявки КАК ВТ_Заявки)
	               |			И ЗаявкиНаРекламныеМатериалы.Регистратор ССЫЛКА Документ.РасходныйОрдерСклад
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ЗаявкиНаРекламныеМатериалы.Заявка) КАК ВЗ_Отгрузки
	               |		ПО ВТ_Заявки.Ссылка = ВЗ_Отгрузки.Заявка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВТ_Заявки.Ссылка.Дата УБЫВ";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДоб = ЗаявкиПоМагазину.Добавить();
		СтрокаДоб.Заявка = Выборка.Заявка;
		СтрокаДоб.Статус = Выборка.Статус;
		СтрокаДоб.Комментарий = Выборка.Комментарий;
		СтрокаДоб.Утверждена = Выборка.Утверждена;
	КонецЦикла;	
	
	Если ЗначениеЗаполнено(ТекЗаявка) Тогда
		СтрокиТаб = ЗаявкиПоМагазину.НайтиСтроки(Новый Структура("Заявка", ТекЗаявка));
		Если СтрокиТаб.Количество() > 0 Тогда
			Элементы.ЗаявкиПоМагазину.ТекущаяСтрока = СтрокиТаб[0].ПолучитьИдентификатор();
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьСписокСОстатками();
	ОбновитьСписокЗаявок();
	ПериодОтчета.ДатаНачала = ТекущаяДата()- 86400*7;
	ПериодОтчета.ДатаОкончания = ТекущаяДата();
	ПрочиеПриходыИРасходы.Параметры.УстановитьЗначениеПараметра("ДатаОтсечки", ТекущаяДата() - 86400*3);
	ПрочиеПриходыИРасходы.Параметры.УстановитьЗначениеПараметра("ТорговаяТочка", ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого СтрокаТаб Из ТекущиеОстатки Цикл
		СтрокаТаб.Помечен = Истина;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для Каждого СтрокаТаб Из ТекущиеОстатки Цикл
		СтрокаТаб.Помечен = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЗаявкуПоОтмеченным(Команда)
	
	МассивТовары = Новый Массив();
	Для Каждого СтрокаТаб Из ТекущиеОстатки Цикл
		Если СтрокаТаб.Помечен Тогда
			МассивТовары.Добавить(СтрокаТаб.Номенклатура);
		КонецЕсли;	
	КонецЦикла;	
	
	ОткрытьФорму("Документ.ЗаявкаНаРекламныеМатериалы.ФормаОбъекта", Новый Структура("МассивТоварыПриСоздании", МассивТовары));
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПрочийПриходИлиРасходПоОтмеченным(Команда)
	
	МассивТовары = Новый Массив();
	Для Каждого СтрокаТаб Из ТекущиеОстатки Цикл
		Если СтрокаТаб.Помечен Тогда
			МассивТовары.Добавить(СтрокаТаб.Номенклатура);
		КонецЕсли;	
	КонецЦикла;	
	
	ОткрытьФорму("Документ.ДвижениеРекламногоМатериалаВМагазине.ФормаОбъекта", Новый Структура("МассивТоварыПриСоздании", МассивТовары));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкиПоМагазинуВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьЗначение(ЗаявкиПоМагазину.НайтиПоИдентификатору(ВыбраннаяСтрока).Заявка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "РеклМатериалы.ОбновитьЗаявки" Тогда
		ОбновитьСписокСОстатками();
		ОбновитьСписокЗаявок();
	ИначеЕсли ИмяСобытия = "РеклМатериалы.ОбновитьОстатки" Тогда	
		ОбновитьСписокСОстатками();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПоДвижениямОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетПоДвижениямНаСервере()
	
	ОтчетПоДвижениям.Очистить();
	
	СхемаСКД = Отчеты.ВедомостьДвиженийРекламныхМатериаловВМагазинах.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	КомпоновщикНастроекНастройки = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроекНастройки.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаСКД));
	КомпоновщикНастроекНастройки.ЗагрузитьНастройки(СхемаСКД.НастройкиПоУмолчанию); 
	
	КомпоновщикНастроекНастройки.Настройки.ПараметрыДанных.УстановитьЗначениеПараметра("Период", ПериодОтчета);
	
	Для Каждого ЭлементОтбор Из КомпоновщикНастроекНастройки.Настройки.Отбор.Элементы Цикл
		Если ЭлементОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Магазин") Тогда
			ЭлементОтбор.Использование = Истина;
			ЭлементОтбор.ПравоеЗначение = ПараметрыСеанса.ТорговаяТочкаПоАйпи;
		КонецЕсли;	
	КонецЦикла;	
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаСКД, КомпоновщикНастроекНастройки.Настройки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных; 
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	
	ДанныеТЗ = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьДокумент(ОтчетПоДвижениям);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчетПоДвижениям(Команда)
	СформироватьОтчетПоДвижениямНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	ОтчетПоДвижениям.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОстатки(Команда)
	
	ОбновитьСписокСОстатками();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗаявки(Команда)
	ОбновитьСписокЗаявок();
КонецПроцедуры


