
&НаСервере
Функция ПроверитьЗаполнениеНаСервере()
	
	Возврат ПроверитьЗаполнение();
	
КонецФункции

&НаКлиенте
Процедура СоздатьСертификаты(Команда)
	
	Если ПроверитьЗаполнениеНаСервере() И Вопрос("Желаете создать сертификаты?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		  ОбработатьНажатиеКнопки(1);
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ПогаситьСертификаты(Команда)
	
	Если ПроверитьЗаполнениеНаСервере() И Вопрос("Желаете погасить сертификаты?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		  ОбработатьНажатиеКнопки(-1);
	КонецЕсли;
	
КонецПроцедуры

	
&НаСервере
Процедура ОбработатьНажатиеКнопки(Количество)
	
	ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	Сообщить("Начало обработки. " + ТекущаяДата());
	
	Для каждого ТекСтр Из Объект.ТЧ Цикл
		
		//НачальныйНомер = ТекСтр.НачальныйНомер;
		//КонечныйНомер = ТекСтр.КонечныйНомер;
		//КонечныйНомер = ТекСтр.НачальныйНомер + (ТекСтр.СоздатьКолво - 1);
		КодТипаКупона = СокрЛП(ТекСтр.КодТипаКупона);
		
		//+++ GOLV ИП-00020289 19.11.2018
		КоличествоСертификатов = ТекСтр.СоздатьКолво;
		
		ТекстЗапроса =
		"Loyalty.dbo.[FOR1C_SertificatsCreate]
		|" + ВнешниеДанные.ФорматПоля(КоличествоСертификатов) + ",
		|" + ВнешниеДанные.ФорматПоля(КодТипаКупона) + ",
		|" + ВнешниеДанные.ФорматПоля(СокрЛП(Текпользователь));
		
		ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("10.0.0.40");

		Если ADOСоединение = Неопределено Тогда
			Возврат;
		КонецЕсли;

		ADOСоединение.Execute(ТекстЗапроса);	
		ADOСоединение.Close();
		
		//--- GOLV
		
		//it = 0;
		//
		//Для i=НачальныйНомер По КонечныйНомер Цикл
		//	
		//	//+++АК SHEP 2018.08.31 ИП-00019339
		//	//ТекстЗапроса = " SET NOCOUNT ON
		//	//|INSERT INTO [Loyalty].[dbo].[Coupon_move]
		//	//|([id_type_coupon]
		//	//|,[DiscountCardUID]
		//	//|,[user_add]
		//	//|,[time_add]
		//	//|,[kolvo]
		//	//|,[number_cert])
		//	//|VALUES
		//	//|('~~~~~'
		//	//|,'00000000-0000-0000-0000-000000000000'
		//	//|,'`````'
		//	//|,'^^^^^'
		//	//|,&&&&&&
		//	//|,$$$$$$)";
		//	//
		//	//ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "~~~~~", КодТипаКупона);
		//	//ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "`````", ТекПользователь);
		//	//ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "^^^^^", ТекущаяДата());
		//	//ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&&&&&&", Количество);
		//	//ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "$$$$$$", Формат(i, "ЧГ=0"));
		//	
		//	ТекстЗапроса = "
		//	|exec [Loyalty].[dbo].[Coupon_move_ins]
		//	|	@id_type_coupon = '" + КодТипаКупона + "',
		//	//|	@number = " + ВнешниеДанные.ФорматПоля(НомерКарты) + ",
		//	|	@user_add = " + ВнешниеДанные.ФорматПоля(СокрЛП(Текпользователь)) + ",
		//	|	@kolvo = " + ВнешниеДанные.ФорматПоля(Количество) + ",
		//	|	@number_cert = " + ВнешниеДанные.ФорматПоля(i) + "
		//	|";
		//	//---АК SHEP 2018.08.31
		//					
		//	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("10.0.0.40");

		//	Если ADOСоединение = Неопределено Тогда
		//		Возврат;
		//	КонецЕсли;

		//	ADOСоединение.Execute(ТекстЗапроса);	
		//	ADOСоединение.Close();
		//	
		//	//Сообщить(i);
		//	
		//	it = it + 1;
		//	
		//КонецЦикла;			
		
		Сообщить("Добавлено "+ Строка(КоличествоСертификатов) + " новых сертификатов.");
		//Сообщить("Текущий последний номер сертификата: " + Формат(КонечныйНомер, "ЧГ=0"));
			
	КонецЦикла;
	
	Сообщить("Обработка успешно завершена! "+ТекущаяДата());
	
КонецПроцедуры

Процедура ОбновитьВыданные()
	
	ТабВыданныеСертификаты.Очистить();
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("10.0.0.40");
	
	Если ADOСоединение = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТекстЗапроса = "SELECT
					|	Types_coupon.date_st,
					|	Types_coupon.date_fi,
					|	Types_coupon.Sum_coupon as Sum_coupon,
					|	MIN(Coupon_move.number_cert) as МинНомер,
					|	MAX(Coupon_move.number_cert) as МаксНом,
					|	SUM(Coupon_move.kolvo) as Количество
					|FROM
					|	Loyalty.dbo.Coupon_move as Coupon_move
					|		INNER JOIN Loyalty.dbo.Types_coupon as Types_coupon
					|		ON Coupon_move.id_type_coupon = Types_coupon.id_type_coupon
					|WHERE
					|	Types_coupon.Kind = 1
					|	and Coupon_move.kolvo > 0
					|
					|GROUP BY
					|	Types_coupon.date_st,
					|	Types_coupon.date_fi,
					|	Types_coupon.Sum_coupon
					|	
					|ORDER BY
					| Types_coupon.date_st, Types_coupon.date_fi";
	
	rs = ADOСоединение.Execute(ТекстЗапроса);
	
	Попытка
		rs.MoveFirst();
		
		Пока НЕ rs.EOF() Цикл
			СтрокаДоб = ТабВыданныеСертификаты.Добавить();
			СтрокаДоб.ДатаНачалаДействия = Rs.Fields("date_st").Value;
			СтрокаДоб.ДатаОкончанияДействия = Rs.Fields("date_fi").Value;
			СтрокаДоб.СуммаСертификата = Rs.Fields("Sum_coupon").Value;
			СтрокаДоб.МинНомер = Rs.Fields("МинНомер").Value;
			СтрокаДоб.МаксНом = Rs.Fields("МаксНом").Value;
			СтрокаДоб.Количество = Rs.Fields("Количество").Value;
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	Элементы.ТЧКодТипаКупона.СписокВыбора.Очистить();
	
	ТекстЗапроса = "SELECT
					|	CAST(Types_coupon.id_type_coupon as nvarchar(50)) id_type_coupon,
					|	Types_coupon.name_coupon
					|FROM
					|	Loyalty.dbo.Types_coupon as Types_coupon
					|		
					|WHERE
					|	Types_coupon.Kind = 1
					|
					|ORDER BY
					|	Types_coupon.name_coupon
					|";
	
	rs = ADOСоединение.Execute(ТекстЗапроса);
	
	Попытка
		rs.MoveFirst();
		
		Пока НЕ rs.EOF() Цикл
			Элементы.ТЧКодТипаКупона.СписокВыбора.Добавить(Rs.Fields("id_type_coupon").Value, Rs.Fields("name_coupon").Value);
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	ADOСоединение.Close();
	ADOСоединение = Неопределено;
	
КонецПроцедуры	
      
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//СтрСоединенияДанныеТовародвижение = ОбменСAccess.ПолучитьСтрокуСоединения("loyalty");
	//пСоед = Новый ПараметрыСоединенияВнешнегоИсточникаДанных;
	//пСоед.СтрокаСоединения= СтрСоединенияДанныеТовародвижение;
	//ВнешниеИсточникиДанных.Loyality.УстановитьОбщиеПараметрыСоединения(пСоед);
	//ВнешниеИсточникиДанных.Loyality.УстановитьСоединение();
	
	ОбновитьВыданные();
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("10.0.0.40");
	
	Если ADOСоединение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ТЧКодТипаКупона.СписокВыбора.Очистить();
	
	ТекстЗапроса = "SELECT
					|	CAST(Types_coupon.id_type_coupon as nvarchar(50)) id_type_coupon,
					|	Types_coupon.name_coupon
					|FROM
					|	Loyalty.dbo.Types_coupon as Types_coupon
					|		
					|WHERE
					|	Types_coupon.Kind = 1
					|
					|ORDER BY
					|	Types_coupon.name_coupon
					|";
	
	rs = ADOСоединение.Execute(ТекстЗапроса);
	
	Попытка
		rs.MoveFirst();
		
		Пока НЕ rs.EOF() Цикл
			Элементы.ТЧКодТипаКупона.СписокВыбора.Добавить(Rs.Fields("id_type_coupon").Value, Rs.Fields("name_coupon").Value);
			ЭлементОформления = ЭтаФорма.УсловноеОформление.Элементы.Добавить();
			ЭлементОтбор = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ТЧ.КодТипаКупона");
			ЭлементОтбор.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
			ЭлементОтбор.ПравоеЗначение = Rs.Fields("id_type_coupon").Value;
			ЭлементОтбор.Использование = Истина;
			
			ЭлементОформление = ЭлементОформления.Оформление.Элементы.Найти("Текст");
			ЭлементОформление.Использование = Истина;
			ЭлементОформление.Значение = Rs.Fields("name_coupon").Value;
			
			ЭлементПоле = ЭлементОформления.Поля.Элементы.Добавить();
			ЭлементПоле.Использование = Истина;
			ЭлементПоле.Поле = Новый ПолеКомпоновкиДанных("ТЧКодТипаКупона");
			
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	ADOСоединение.Close();
	ADOСоединение = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПриЗакрытииНаСервере();

КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	//ВнешниеИсточникиДанных.Loyality.РазорватьСоединение();
	
КонецПроцедуры

&НаСервере
Процедура ТЧКодТипаКупонаПриИзмененииНаСервере(ТекИдентификатор)
	
	ТекДанные = Объект.ТЧ.НайтиПоИдентификатору(ТекИдентификатор);
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	
	Если ADOСоединение = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТекстЗапроса = "select isnull(MAX(number_cert),0)+1 max_number
					|from Loyalty..Coupon_move as cn with(nolock) inner join Loyalty..Types_coupon as tc with(nolock)
					|on tc.id_type_coupon=cn.id_type_coupon
					|where number_cert is not null and kolvo=1 and kind=1";
	
	rs = ADOСоединение.Execute(ТекстЗапроса);
	
	Попытка
		rs.MoveFirst();
		
		Если НЕ rs.EOF() Тогда
			Объект.ТЧ[ТекДанные.НомерСтроки - 1].НачальныйНомер = Rs.Fields("max_number").Value;
		КонецЕсли;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ТЧКодТипаКупонаПриИзменении(Элемент)
	ТЧКодТипаКупонаПриИзмененииНаСервере(Элементы.ТЧ.ТекущаяСтрока);
КонецПроцедуры
