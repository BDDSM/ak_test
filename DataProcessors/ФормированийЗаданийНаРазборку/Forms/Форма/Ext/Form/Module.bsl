
&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьСервер();
КонецПроцедуры

&НаКлиенте
Процедура СформироватьЗадания(Команда)
	СформироватьЗаданияСервер();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСервер()
	Объект.Товары.Очистить();
	Объект.Расходники.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходныйОрдерСкладТовары.Номенклатура,
		|	ВЫРАЗИТЬ(РасходныйОрдерСкладТовары.Ссылка.Получатель КАК Справочник.СтруктурныеЕдиницы) КАК СтруктурнаяЕдиница,
		|	РасходныйОрдерСкладТовары.Ссылка.Склад КАК Склад,
		|	РасходныйОрдерСкладТовары.Характеристика,
		|	РасходныйОрдерСкладТовары.КоличествоУРЗ КАК Количество,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ РасходныйОрдерСкладТовары.КоличествоУРЗ / (ВЫРАЗИТЬ(ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, 0) КАК ЧИСЛО(15, 3)))
		|		КОНЕЦ КАК ЧИСЛО(15, 0)) КАК КоличествоКоробок,
		|	РасходныйОрдерСкладТовары.Ссылка
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|		ПО РасходныйОрдерСкладТовары.Характеристика = ЗначенияСвойствОбъектов.Объект
		|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке))
		|ГДЕ
		|	РасходныйОрдерСкладТовары.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
		|	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
		|	И НЕ РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
		|	И НЕ РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отменен)
		|	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
		|	И (РасходныйОрдерСкладТовары.Ссылка.Склад.Владелец = &СкладСтрЕд
		|			ИЛИ &СкладСтрЕд = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
		|	И (РасходныйОрдерСкладТовары.Ссылка.Склад = &Склад
		|			ИЛИ &Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
		|	И (РасходныйОрдерСкладТовары.ЗаданиеНаРазборку = ЗНАЧЕНИЕ(Документ.ЗаданиеНаРазборку.пустаяСсылка)
		|			ИЛИ РасходныйОрдерСкладТовары.ЗаданиеНаРазборку.ПометкаУдаления = ИСТИНА)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.Номенклатура КАК Номенклатура,
		|	СУММА(вт.Количество) КАК Количество,
		|	вт.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	вт.Склад КАК Склад,
		|	вт.Характеристика КАК Характеристика,
		|	СУММА(вт.КоличествоКоробок) КАК КоличествоКоробок
		|ИЗ
		|	вт КАК вт
		|
		|СГРУППИРОВАТЬ ПО
		|	вт.Номенклатура,
		|	вт.СтруктурнаяЕдиница,
		|	вт.Склад,
		|	вт.Характеристика
		|
		|УПОРЯДОЧИТЬ ПО
		|	Склад,
		|	СтруктурнаяЕдиница,
		|	Номенклатура,
		|	Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.Ссылка
		|ИЗ
		|	вт КАК вт
		|
		|СГРУППИРОВАТЬ ПО
		|	вт.Ссылка";

	
	Запрос.УстановитьПараметр("Дата1", Объект.ДатаОтбор);
	Запрос.УстановитьПараметр("Дата2", КонецДня(Объект.ДатаОтбор));
	Запрос.УстановитьПараметр("Склад", Объект.СкладОтбор);
	Запрос.УстановитьПараметр("СкладСтрЕд", Объект.СтруктурнаяЕдиницаОтбор);
	
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[1].Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Объект.Товары.Добавить(),ВыборкаДетальныеЗаписи);
	КонецЦикла;
	ВыборкаДетальныеЗаписи = РезультатЗапроса[2].Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Объект.Расходники.Добавить(),ВыборкаДетальныеЗаписи);
	КонецЦикла;


КонецПроцедуры

&НаСервере
Процедура СформироватьЗаданияСервер()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходныйОрдерСкладТовары.Номенклатура,
		|	РасходныйОрдерСкладТовары.Характеристика,
		|	ВЫРАЗИТЬ(РасходныйОрдерСкладТовары.Ссылка.Получатель КАК Справочник.СтруктурныеЕдиницы) КАК СтруктурнаяЕдиница,
		|	РасходныйОрдерСкладТовары.Ссылка.Склад КАК Склад,
		|	РасходныйОрдерСкладТовары.Ссылка,
		|	РасходныйОрдерСкладТовары.КоличествоУРЗ КАК Количество,
		|	ВЫРАЗИТЬ(ВЫБОР
		|			КОГДА ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, 0) = 0
		|				ТОГДА 0
		|			ИНАЧЕ РасходныйОрдерСкладТовары.КоличествоУРЗ / (ВЫРАЗИТЬ(ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, 0) КАК ЧИСЛО(15, 3)))
		|		КОНЕЦ КАК ЧИСЛО(15, 0)) КАК КоличествоКоробок,
		|	РасходныйОрдерСкладТовары.ЗаданиеНаРазборку
		|ПОМЕСТИТЬ втТоварыРасх
		|ИЗ
		|	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|		ПО РасходныйОрдерСкладТовары.Характеристика = ЗначенияСвойствОбъектов.Объект
		|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке))
		|ГДЕ
		|	РасходныйОрдерСкладТовары.Ссылка В(&Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасходныйОрдерСклад.Ссылка,
		|	ВЫРАЗИТЬ(РасходныйОрдерСклад.Получатель КАК Справочник.СтруктурныеЕдиницы) КАК СтруктурнаяЕдиница,
		|	РасходныйОрдерСклад.Склад КАК Склад
		|ИЗ
		|	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
		|ГДЕ
		|	РасходныйОрдерСклад.Ссылка В(&Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТоварыРасх.Номенклатура,
		|	втТоварыРасх.Характеристика,
		|	втТоварыРасх.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	втТоварыРасх.Склад,
		|	СУММА(втТоварыРасх.Количество) КАК Количество,
		|	СУММА(втТоварыРасх.КоличествоКоробок) КАК КоличествоКоробок,
		|	втТоварыРасх.ЗаданиеНаРазборку,
		|	втТоварыРасх.СтруктурнаяЕдиница.НомерТочки КАК СтруктурнаяЕдиницаНомерТочки
		|ИЗ
		|	втТоварыРасх КАК втТоварыРасх
		|
		|СГРУППИРОВАТЬ ПО
		|	втТоварыРасх.Номенклатура,
		|	втТоварыРасх.Характеристика,
		|	втТоварыРасх.СтруктурнаяЕдиница,
		|	втТоварыРасх.Склад,
		|	втТоварыРасх.ЗаданиеНаРазборку
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтруктурнаяЕдиницаНомерТочки";
	Запрос.УстановитьПараметр("Ссылка", Объект.Расходники.Выгрузить().ВыгрузитьКолонку("Ссылка"));
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	
	Выб = РезультатЗапроса[2].Выбрать();
	ТЗЗадания=Новый ТаблицаЗначений;
	ТЗЗадания.Колонки.Добавить("Задание");
	ТЗЗадания.Колонки.Добавить("Номенклатура");
	ТЗЗадания.Колонки.Добавить("Характеристика");
	ТЗЗадания.Колонки.Добавить("Склад");
	
	Пока Выб.Следующий() Цикл
		МасСтр=ТЗЗадания.НайтиСтроки(Новый Структура("Номенклатура,Характеристика,Склад",Выб.Номенклатура,Выб.Характеристика,Выб.Склад));
		Если Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура,Характеристика,Склад,СтруктурнаяЕдиница",Выб.Номенклатура,Выб.Характеристика,Выб.Склад,Выб.СтруктурнаяЕдиница)).Количество()=0 Тогда
			Продолжить;
		КонецЕсли; 
		
		Если МасСтр.Количество() Тогда
			НовоеЗадание=МасСтр[0].Задание.ПолучитьОбъект();
			НовСтр=НовоеЗадание.Товары.Добавить();
			НовСтр.СтруктурнаяЕдиница=Выб.СтруктурнаяЕдиница;
			НовСтр.Количество=Выб.Количество;
			НовСтр.КоличествоКоробок=Выб.КоличествоКоробок;
	    	НовоеЗадание.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			Если ЗначениеЗаполнено(Выб.ЗаданиеНаРазборку) И Объект.УдалятьЗадания ИЛИ НЕ ЗначениеЗаполнено(Выб.ЗаданиеНаРазборку) Тогда
				НовоеЗадание=Документы.ЗаданиеНаРазборку.СоздатьДокумент();
				НовоеЗадание.Дата=НачалоДня(ТекущаяДата())+24*60*60;
				НовоеЗадание.Склад=Выб.Склад;
				НовоеЗадание.Номенклатура=Выб.Номенклатура;
				НовоеЗадание.Характеристика=Выб.Характеристика;
				НовоеЗадание.Автор=ПараметрыСеанса.ТекущийПользователь;
				НовСтр=НовоеЗадание.Товары.Добавить();
				НовСтр.СтруктурнаяЕдиница=Выб.СтруктурнаяЕдиница;
				НовСтр.Количество=Выб.Количество;
				НовСтр.КоличествоКоробок=Выб.КоличествоКоробок;
		    	НовоеЗадание.Записать(РежимЗаписиДокумента.Проведение);
				Сообщение="ru = 'Создано &Док'";
				Сообщение=СтрЗаменить(Сообщение,"&Док",Строка(НовоеЗадание.Ссылка));
				Сообщить(НСтр(Сообщение));
				

				НовСтрТЗ=ТЗЗадания.Добавить();
				НовСтрТЗ.Номенклатура=Выб.Номенклатура;
				НовСтрТЗ.Характеристика=Выб.Характеристика;
				НовСтрТЗ.Задание=НовоеЗадание.Ссылка;
				НовСтрТЗ.Склад=Выб.Склад;
			
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла; 
	
	
	
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[1].Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбДок=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		Для каждого Строка Из ОбДок.Товары Цикл
			Если Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура,Характеристика,Склад,СтруктурнаяЕдиница",
				Строка.Номенклатура,Строка.Характеристика,ОбДок.Склад,ОбДок.Получатель)).Количество()=0 Тогда
				Продолжить;
			КонецЕсли; 
			
			Если ЗначениеЗаполнено(Строка.ЗаданиеНаРазборку) И Объект.УдалятьЗадания Тогда
				Задание=Строка.ЗаданиеНаРазборку.ПолучитьОбъект();
				Задание.Записать(РежимЗаписиДокумента.ОтменаПроведения);
				Задание.ПометкаУдаления=Истина;
				Задание.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли; 
			МасСтр=ТЗЗадания.НайтиСтроки(Новый Структура("Номенклатура,Характеристика,Склад",Строка.Номенклатура,Строка.Характеристика,ВыборкаДетальныеЗаписи.Склад));
			Если МасСтр.Количество() Тогда
				Строка.ЗаданиеНаРазборку=МасСтр[0].Задание;
				Сообщение="ru = 'В строке &Строка документа &Док перезаполнено задание на разборку'";
				Сообщение=СтрЗаменить(Сообщение,"&Док",Строка(ВыборкаДетальныеЗаписи.Ссылка));
				Сообщение=СтрЗаменить(Сообщение,"&Строка",Строка(Строка.НомерСтроки));
				Сообщить(НСтр(Сообщение));
			Иначе	
			КонецЕсли; 
		
		КонецЦикла;
		//ОбДок.Статус=Перечисления.СтатусыРасходныхОрдеров.ВСборке;
		ОбДок.Записать(РежимЗаписиДокумента.Запись);
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Объект.ДатаОтбор=НачалоДня(ТекущаяДата())+24*60*60;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьРасходники(Команда)
	ОбработатьРасходникиСервер();
КонецПроцедуры

&НаСервере
Процедура ОбработатьРасходникиСервер()
	РегламентныеЗаданияСервер.ЗаполнитьРасходникиПоданнымРазборки();
	Сообщить("Выполнено");
КонецПроцедуры

&НаКлиенте
Процедура ПечатьШКМагазинов(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.СтруктурнаяЕдиницаОтбор) Тогда
		Сообщить(НСтр("ru = 'Выберите склад'"));
		Возврат;
	
	КонецЕсли; 
	МасМаг=ПолучитьМагазины();
	ТабДок=СформироватьТабличныйДокумент_Магазины(МасМаг);
	ТабДок.Показать();
	
КонецПроцедуры

&НаСервере
Функция СформироватьТабличныйДокумент_Магазины(МасМаг)Экспорт
	
	
	Возврат Обработки.ФормированийЗаданийНаРазборку.СформироватьТабличныйДокумент_Магазины(МасМаг);
	
КонецФункции


&НаСервере
Функция ПолучитьМагазины()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходныйОрдерСклад.Получатель КАК СтруктурнаяЕдиница
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
		|ГДЕ
		|	РасходныйОрдерСклад.Дата МЕЖДУ &Дата1 И &Дата2
		|	И РасходныйОрдерСклад.ВидОперации = &ВидОперации
		|	И РасходныйОрдерСклад.Проведен = ИСТИНА
		|	И РасходныйОрдерСклад.Склад.Владелец = &ОсновнойСклад
		|	И (РасходныйОрдерСклад.Склад = &Склад
		|			ИЛИ &Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходныйОрдерСклад.Получатель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.СтруктурнаяЕдиница
		|ИЗ
		|	вт КАК вт
		|
		|СГРУППИРОВАТЬ ПО
		|	вт.СтруктурнаяЕдиница";
		
		
	                                                                                                       																											
	Запрос.УстановитьПараметр("ТипСтруктурнойЕдиницы", Перечисления.ТипыСтруктурныхЕдиниц.Розница);
	Запрос.УстановитьПараметр("ОсновнойСклад", Объект.СтруктурнаяЕдиницаОтбор);
	Запрос.УстановитьПараметр("Склад", Объект.СкладОтбор);
	
	Запрос.УстановитьПараметр("СтатусТорговойТочки", Перечисления.СтатусыТорговыхТочек.Открыт);
	Запрос.УстановитьПараметр("СтатусТорговойТочки1", Перечисления.СтатусыТорговыхТочек.СкороОткрытие);
	Запрос.УстановитьПараметр("СтатусТорговойТочки2", Перечисления.СтатусыТорговыхТочек.СкороЗакрытие);
	
	Запрос.УстановитьПараметр("Дата2", КонецДня(Объект.ДатаОтбор)+24*60*60);
	Запрос.УстановитьПараметр("Дата1",НачалоДня(Объект.ДатаОтбор-7*24*24));
	Запрос.УстановитьПараметр("ВидОперации", Перечисления.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	МасМаг=Новый Массив;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МасМаг.Добавить(ВыборкаДетальныеЗаписи.СтруктурнаяЕдиница);
	КонецЦикла;
	
	Возврат МасМаг;
	

КонецФункции // ()


&НаКлиенте
Процедура ПечатьШКВыделенныхМагазинов(Команда)
	МасМаг=Новый Массив;
	Для каждого Стр Из Элементы.Товары.ВыделенныеСтроки Цикл
		Если МасМаг.Найти(Объект.Товары.НайтиПоИдентификатору(Стр).СтруктурнаяЕдиница)=Неопределено Тогда
			МасМаг.Добавить(Объект.Товары.НайтиПоИдентификатору(Стр).СтруктурнаяЕдиница);	
		КонецЕсли; 
	КонецЦикла; 
	ТабДок=СформироватьТабличныйДокумент_Магазины(МасМаг);
	ТабДок.Показать();
	
КонецПроцедуры
