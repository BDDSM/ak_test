
Процедура ЗаполнитьРегистр() Экспорт
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("ДатаН", НачалоДня(ТекущаяДата() - 86400 * 7));
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря,
	               |	СтруктурныеЕдиницы.Ссылка КАК ТорговаяТочка
	               |ПОМЕСТИТЬ ВТ_ТорговыеТочки
	               |ИЗ
	               |	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы,
	               |	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	               |ГДЕ
	               |	СтруктурныеЕдиницы.id_TT <> 0
	               |	И (СтруктурныеЕдиницы.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	               |			ИЛИ СтруктурныеЕдиницы.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Избенка))
	               |	И РегламентированныйПроизводственныйКалендарь.ДатаКалендаря <= &Дата
	               |	И РегламентированныйПроизводственныйКалендарь.ДатаКалендаря >= НАЧАЛОПЕРИОДА(&ДатаН, ДЕНЬ)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВложенныйЗапрос.ДатаКалендаря КАК ДатаКалендаря,
	               |	ВложенныйЗапрос.ТорговаяТочка,
	               |	ЦФОСтруктурныхЕдиниц.ЦФО КАК ТекущееЦФО,
	               |	ЛистУчета.ЦФО КАК НовоеЦФО
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ВТ_ТорговыеТочки.ДатаКалендаря КАК ДатаКалендаря,
	               |		ВТ_ТорговыеТочки.ТорговаяТочка КАК ТорговаяТочка,
	               |		МАКСИМУМ(ЦФОСтруктурныхЕдиниц.Период) КАК ТекущееЦФОПериод,
	               |		МАКСИМУМ(ЛистУчета.Дата) КАК НовоеЦФОПериод
	               |	ИЗ
	               |		ВТ_ТорговыеТочки КАК ВТ_ТорговыеТочки
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦФОСтруктурныхЕдиниц КАК ЦФОСтруктурныхЕдиниц
	               |			ПО ВТ_ТорговыеТочки.ТорговаяТочка = ЦФОСтруктурныхЕдиниц.СтруктурнаяЕдиница
	               |				И ВТ_ТорговыеТочки.ДатаКалендаря >= ЦФОСтруктурныхЕдиниц.Период
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЛистУчета КАК ЛистУчета
	               |			ПО ВТ_ТорговыеТочки.ТорговаяТочка = ЛистУчета.ТорговаяТочка
	               |				И (ЛистУчета.ЦФО <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
	               |				И (ВТ_ТорговыеТочки.ДатаКалендаря >= НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ))
	               |				И (ЛистУчета.Проведен)
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ВТ_ТорговыеТочки.ДатаКалендаря,
	               |		ВТ_ТорговыеТочки.ТорговаяТочка) КАК ВложенныйЗапрос
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦФОСтруктурныхЕдиниц КАК ЦФОСтруктурныхЕдиниц
	               |		ПО ВложенныйЗапрос.ТорговаяТочка = ЦФОСтруктурныхЕдиниц.СтруктурнаяЕдиница
	               |			И ВложенныйЗапрос.ТекущееЦФОПериод = ЦФОСтруктурныхЕдиниц.Период
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЛистУчета КАК ЛистУчета
	               |		ПО ВложенныйЗапрос.ТорговаяТочка = ЛистУчета.ТорговаяТочка
	               |			И (ВложенныйЗапрос.НовоеЦФОПериод = НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ))
	               |ИТОГИ ПО
	               |	ДатаКалендаря";
	ВыборкаДата = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДата.Следующий() Цикл
		ВыборкаТТ = ВыборкаДата.Выбрать();
		Пока ВыборкаТТ.Следующий() Цикл
			Если Не ЗначениеЗаполнено(ВыборкаТТ.НовоеЦФО) Тогда
				пНовоеЦФО = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_88   "); //Управление розницей. Группа Р (развитие)
			Иначе
				пНовоеЦФО = ВыборкаТТ.НовоеЦФО;
			КонецЕсли;
			
			Если ВыборкаТТ.ТекущееЦФО <> пНовоеЦФО
				И ЗначениеЗаполнено(пНовоеЦФО) Тогда
				Набор = РегистрыСведений.ЦФОСтруктурныхЕдиниц.СоздатьНаборЗаписей();
				Набор.Отбор.Период.Установить(ВыборкаДата.ДатаКалендаря);
				Набор.Отбор.СтруктурнаяЕдиница.Установить(ВыборкаТТ.ТорговаяТочка);
				Запись = Набор.Добавить();
				Запись.Период = ВыборкаДата.ДатаКалендаря;
				Запись.СтруктурнаяЕдиница = ВыборкаТТ.ТорговаяТочка;
				Запись.ЦФО = пНовоеЦФО;
				Набор.Записать(Истина);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

