
Функция ЭкстренныйВызовДоступен()
	
	Возврат РольДоступна("ПолныеПрава")
				ИЛИ РольДоступна("ОтветственныйЗаРаботуСАутсорсингом");
	
КонецФункции	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Сотрудник")Тогда
		Сотрудник = Параметры.Сотрудник;
	КонецЕсли;
	
	Если Параметры.Свойство("ТорговаяТочка")Тогда
		ТорговаяТочка = Параметры.ТорговаяТочка;
	КонецЕсли;
	
	Если Параметры.Свойство("КоличествоЧасов")Тогда
		КоличествоЧасовПочасовика = Параметры.КоличествоЧасов;
	КонецЕсли;
	
	Если Параметры.Свойство("ТекДата")Тогда
		ТекДата = Параметры.ТекДата;
	КонецЕсли;
	
	Если Параметры.Свойство("СвойствоСотрудника")Тогда
		СвойствоСотрудника = Параметры.СвойствоСотрудника;
	КонецЕсли;
	
	Если Параметры.Свойство("Отсутствие")Тогда
		Отсутствие = Параметры.Отсутствие;
	КонецЕсли;
	
	Если Параметры.Свойство("Тренинг")Тогда
		Тренинг = Параметры.Тренинг;
		ТренингДо = Параметры.Тренинг;
	КонецЕсли;
	
	Если Параметры.Свойство("ЭкстренныйВызов")Тогда
		ЭкстренныйВызов = Параметры.ЭкстренныйВызов;
	КонецЕсли;
	
	//Если Не ЗначениеЗаполнено(Отсутствие)Тогда
	//	РаботаИлиОтсутствие = 1;
	//	Элементы.ТорговаяТочка.АктивизироватьПоУмолчанию = Истина;
	//Иначе
	//	РаботаИлиОтсутствие = 2;
	//	Элементы.Отсутствие.АктивизироватьПоУмолчанию = Истина;
	//КонецЕсли;
	
	Если  ЗначениеЗаполнено(ТорговаяТочка)Тогда
		РаботаИлиОтсутствие = 1;
		Элементы.ТорговаяТочка.АктивизироватьПоУмолчанию = Истина;
	ИначеЕсли  ЗначениеЗаполнено(Тренинг)Тогда
		РаботаИлиОтсутствие = 3;
		Элементы.Тренинг.АктивизироватьПоУмолчанию = Истина;
	ИначеЕсли  ЗначениеЗаполнено(Отсутствие) Тогда
		РаботаИлиОтсутствие = 2;
		Элементы.Отсутствие.АктивизироватьПоУмолчанию = Истина;
	Иначе
		РаботаИлиОтсутствие = 1;
		Элементы.ТорговаяТочка.АктивизироватьПоУмолчанию = Истина;
	КонецЕсли;
	
	//
	УстановитьВидимостьЭлементов();
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	
	Если НЕ ПроверитьЗаполнение()Тогда
		Возврат;
	КонецЕсли;
	
	Если РаботаИлиОтсутствие = 1
			И НЕ ЗначениеЗаполнено(ТорговаяТочка) Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст	= НСтр("ru = 'Не заполнена торговая точка'");
		Сообщение.Поле 	= "ТорговаяТочка";
		Сообщение.Сообщить();
		Возврат;
		
	КонецЕсли;
	
	Если РаботаИлиОтсутствие = 2
			И НЕ ЗначениеЗаполнено(Отсутствие) Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст	= НСтр("ru = 'Не заполнена причина отсутствия'");
		Сообщение.Поле 	= "Отсутствие";
		Сообщение.Сообщить();
		Возврат;
		
	КонецЕсли;
	
	Если РаботаИлиОтсутствие = 3
			И Не ЗначениеЗаполнено(Тренинг) Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст	= НСтр("ru = 'Не заполнен тренинг'");
		Сообщение.Поле 	= "Тренинг";
		Сообщение.Сообщить();
		Возврат;
		
	КонецЕсли;
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("Сотрудник"			, Сотрудник);
	СтруктураВозврата.Вставить("ТорговаяТочка"		, ТорговаяТочка);
	СтруктураВозврата.Вставить("Отсутствие"			, Отсутствие);
	СтруктураВозврата.Вставить("Период"				, Период);
	Если ТекДата >= '20171001' Тогда
		СтруктураВозврата.Вставить("КоличествоЧасов"	, КоличествоЧасовПочасовика);	
	Иначе	
		СтруктураВозврата.Вставить("КоличествоЧасов"	, ?(ЗначениеЗаполнено(ТорговаяТочка) И СвойствоСотрудника <> 2, КоличествоЧасовПочасовика, 0));	
	КонецЕсли;	
	СтруктураВозврата.Вставить("СвойствоСотрудника"	, СвойствоСотрудника);	
	СтруктураВозврата.Вставить("Тренинг"			, Тренинг);
	СтруктураВозврата.Вставить("ЭкстренныйВызов"	, ЭкстренныйВызов);
	
	Если ЗначениеЗаполнено(ТренингДо)
			ИЛИ ЗначениеЗаполнено(Тренинг) Тогда
		ЗаполнитьТренингВФЛ();
	КонецЕсли; 
	
	Закрыть(СтруктураВозврата);
	
КонецПроцедуры


Процедура ЗаполнитьТренингВФЛ()
	
	Если ЗначениеЗаполнено(ТренингДо)
			И ТренингДо <> Тренинг Тогда
		СпрОб = Сотрудник.ПолучитьОбъект();
		
		НайденнаяСтрока = СпрОб.ПройденныеТренинги.НайтиСтроки(Новый Структура("Тренинг, ДатаПрохождения", ТренингДо, ТекДата));
		Если НайденнаяСтрока.Количество() Тогда
			
			СпрОб.ПройденныеТренинги.Удалить(НайденнаяСтрока[0]);
		КонецЕсли;
		СпрОб.Записать();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Тренинг)
			И ТренингДо <> Тренинг Тогда
		СпрОб = Сотрудник.ПолучитьОбъект();
		
		НайденнаяСтрока = СпрОб.ПройденныеТренинги.НайтиСтроки(Новый Структура("Тренинг, ДатаПрохождения", Тренинг, ТекДата));
		Если Не НайденнаяСтрока.Количество() Тогда
			
			НоваяСтрока = СпрОб.ПройденныеТренинги.Добавить();
			
			НоваяСтрока.Тренинг 		= Тренинг;
			НоваяСтрока.ДатаПрохождения = ТекДата;
			НоваяСтрока.ТренингПройден 	= Истина;

		КонецЕсли;
		СпрОб.Записать();
	КонецЕсли;
	
КонецПроцедуры
 

&НаКлиенте
Процедура ТорговаяТочкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	//+++ak ziga  ИП-00016506.05 20171116 В рамках избавления от модальных форм
	Оповещение=Новый ОписаниеОповещения("ТорговаяТНачало",ЭтаФорма);
	ПараметрыОтбора = Новый Структура("ГоловноеПодразделение", ГруппаТорговыхТочек);
	//Результат = ОткрытьФормуМодально("Обработка.ГрафикРаботыГрузчиков.Форма.ФормаВыбораСтруктурнойЕдиницы", ПараметрыОтбора);
	Результат=ОткрытьФорму("Обработка.ГрафикРаботыВнештатныхСотрудников.Форма.ФормаВыбораСтруктурнойЕдиницы",ПараметрыОтбора,ЭтаФорма,УникальныйИдентификатор,,,Оповещение);
	//---ak ziga  ИП-00016506.05 20171116
	//Если ЗначениеЗаполнено(Результат)Тогда
	//	ТорговаяТочка = Результат;  
	//КонецЕсли;
	
	//УстановитьДоступностьЭлементов();
	
КонецПроцедуры
//+++ak ziga  ИП-00016506.05 20171116  В рамках избавления от модальных форм
&НаКлиенте
Процедура ТорговаяТНачало(Результат, ДополнительныеПараметры) Экспорт
	Если ЗначениеЗаполнено(Результат)Тогда
		ТорговаяТочка = Результат;
		УстановитьДоступностьЭлементов();
	КонецЕсли;
КонецПроцедуры
//---ak ziga  ИП-00016506.05 20171116
&НаКлиенте
Процедура СвойствоСотрудникаПриИзменении(Элемент)
	
	//
	Если СвойствоСотрудника = 2 Тогда
		КоличествоЧасовПочасовика 	= 0;
		ЭкстренныйВызов 			= Ложь;
	КонецЕсли;
	
	//
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементов()
	
	//
	Если ТекДата < '20171001' Тогда
		Элементы.КоличествоЧасовПочасовика.Доступность 	= (ЗначениеЗаполнено(ТорговаяТочка)
														И СвойствоСотрудника <> 2);
	КонецЕсли;													
	Элементы.СвойствоСотрудника.Доступность 		= (РаботаИлиОтсутствие = 1)
														И ЗначениеЗаполнено(ТорговаяТочка);
	Элементы.ЭкстренныйВызов.Доступность 			= ЭкстренныйВызовДоступен();
	Если СвойствоСотрудника = 2 Тогда
		Элементы.ЭкстренныйВызов.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	//
	Если ТекДата >= '20171001' Тогда
		Элементы.КоличествоЧасовПочасовика.Видимость = РаботаИлиОтсутствие = 1;
	КонецЕсли;	
	Элементы.ТорговаяТочка.Видимость 	= (РаботаИлиОтсутствие = 1);
	Элементы.Отсутствие.Видимость 		= (РаботаИлиОтсутствие = 2);
	Элементы.Тренинг.Видимость 			= (РаботаИлиОтсутствие = 3);
	Элементы.ЭкстренныйВызов.Видимость 	= (РаботаИлиОтсутствие = 1);
	
КонецПроцедуры

&НаКлиенте
Процедура РаботаИлиОтсутствиеПриИзменении(Элемент)
	
	//Если РаботаИлиОтсутствие = 1 Тогда
	//	Отсутствие = ПредопределенноеЗначение("Перечисление.ВидыОтсутствия.ПустаяСсылка");	
	//Иначе
	//	ТорговаяТочка = ПредопределенноеЗначение("Справочник.СтруктурныеЕдиницы.ПустаяСсылка");
	//	СвойствоСотрудника = 0;
	//КонецЕсли;
	
	Если РаботаИлиОтсутствие = 1 Тогда
		Отсутствие 	= ПредопределенноеЗначение("Перечисление.ВидыОтсутствия.ПустаяСсылка");
		Тренинг		= ПредопределенноеЗначение("Справочник.Тренинги.ПустаяСсылка");

	ИначеЕсли РаботаИлиОтсутствие = 3 Тогда
		Отсутствие 			= ПредопределенноеЗначение("Перечисление.ВидыОтсутствия.ПустаяСсылка");
		ТорговаяТочка 		= ПредопределенноеЗначение("Справочник.СтруктурныеЕдиницы.ПустаяСсылка");
		СвойствоПродавца 	= 0;
		ЭкстренныйВызов 	= Ложь;
	Иначе
		ТорговаяТочка 		= ПредопределенноеЗначение("Справочник.СтруктурныеЕдиницы.ПустаяСсылка");
		СвойствоПродавца 	= 0;
		Тренинг				= ПредопределенноеЗначение("Справочник.Тренинги.ПустаяСсылка");
		ЭкстренныйВызов 	= Ложь;
	КонецЕсли;
	
	УстановитьВидимостьЭлементов();
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ТорговаяТочкаПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры
