//+++АК KOPA +Модуль 2018.03.30 ИП-00018276
//Данные связанные с магазинами


#Область ___Тесты

Функция ___Переходы()
	Массив = Новый Массив;
	Массив.Добавить(Справочники.СтруктурныеЕдиницы);
	Массив.Добавить(РегистрыСведений.СоответствиеОбъектРоль);

	Возврат Массив;
КонецФункции

Функция ___ДобавитьТестВТаблицу(Таблица, Ключ, Значение)
	Строка = Таблица.Добавить();
	Строка.Ключ = Ключ;
	Строка.Значение = ЗначениеВСтрокуВнутр(Значение);
КонецФункции

Функция ___ПолучитьТесты()
	ФИО = "Абляева Гольфия Идрисовна";
	УИДАбляева = ПолучитьУИДАктивноеФизЛицо(ФИО);
	
	Магазин1234 = "" + Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("НомерТочки", 1234).УникальныйИдентификатор();
	
	Таблица = Новый ТаблицаЗначений;
	ТипСтрока = Новый ОписаниеТипов("Строка", ,Новый КвалификаторыСтроки(0, ДопустимаяДлина.Переменная));
	Таблица.Колонки.Добавить("Ключ", ТипСтрока);
	Таблица.Колонки.Добавить("Значение", ТипСтрока);
	
	ТелоЗапроса = Новый Структура;
	ТелоЗапроса.Вставить("ИмяКоманды", "СписокАдресовМагазинов");
	ТелоЗапроса.Вставить("ПодСтрока", "Косм");
	ТелоЗапроса.Вставить("Первые", "30");
	
	___ДобавитьТестВТаблицу(Таблица, "Список адресов магазинов по подстроке 'Косм'. Первые 30", ТелоЗапроса);

//ИП-00018385 получить помощника управляющего магазина

	ТелоЗапроса = Новый Структура;
	ТелоЗапроса.Вставить("ИмяКоманды", "ПомощникУправляющегоМагазина");
	ТелоЗапроса.Вставить("Магазин", Магазин1234);
	
	___ДобавитьТестВТаблицу(Таблица, "Получить помощника управляющего магазина 1234", ТелоЗапроса);	
	
//ИП-00018385 Получить неправильные номера телефонов магазинов в разрезе помощников управляющих

	ТелоЗапроса = Новый Структура;
	ТелоЗапроса.Вставить("ИмяКоманды", "ПомощникиУправляющихНеправильныеНомераТелефоновМагазинов");
	
	___ДобавитьТестВТаблицу(Таблица, "Получить неправильные номера телефонов магазинов в разрезе помощников управляющих", ТелоЗапроса);
	
//ИП-00018385 Получить список неправильных номеров телефонов магазинов для помощника управляющего
ТелоЗапроса = Новый Структура;
	ТелоЗапроса.Вставить("ИмяКоманды", "НеправильныеНомераТелефоновМагазиновФизЛицо");
	ТелоЗапроса.Вставить("ФизЛицо", УИДАбляева);
	
	___ДобавитьТестВТаблицу(Таблица, "Получить список неправильных номеров телефонов магазинов для помощника управляющего", ТелоЗапроса);
	
//ИП-00018385 Изменить номер телефона магазина
	ТелоЗапроса = Новый Структура;
	ТелоЗапроса.Вставить("ИмяКоманды", "УстановитьТелефонМагазина");
	ТелоЗапроса.Вставить("Магазин", Магазин1234);
	ТелоЗапроса.Вставить("Телефон", "9011234567");
	
	___ДобавитьТестВТаблицу(Таблица, "Изменить номер телефона магазина", ТелоЗапроса);
//ИП-00018385 Получить данные магазина по строке данных
	ТелоЗапроса = Новый Структура;
	ТелоЗапроса.Вставить("ИмяКоманды", "ДанныеМагазина");
	ТелоЗапроса.Вставить("Магазин", Магазин1234);
	ТелоЗапроса.Вставить("СтрокаДанных", "Наименование,ТелефонныйНомер1");
	
	___ДобавитьТестВТаблицу(Таблица, "Получить данные магазина по строке данных", ТелоЗапроса);


	Возврат Таблица;
КонецФункции

Функция ___ПолучитьОписание() Экспорт 
	Структура = Новый Структура;
	Структура.Вставить("ИдЗадача", "Тестирование");
	Структура.Вставить("НаименованиеВнешнейОбработки", "___Тест");
	Структура.Вставить("Переходы", ___Переходы());
	Структура.Вставить("ТаблицаТесты", ___ПолучитьТесты());
	
	Возврат Структура;
КонецФункции

Функция ПолучитьУИДАктивноеФизЛицо(ФИО)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФизическиеЛица.Ссылка
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	НЕ ФизическиеЛица.ПометкаУдаления
		|	И ФизическиеЛица.Активный
		|	И ФизическиеЛица.Наименование = &ФИО";
	Запрос.УстановитьПараметр("ФИО", ФИО);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Выборка.Следующий();
	
	Возврат "" + Выборка.Ссылка.УникальныйИдентификатор();
КонецФункции

#КонецОбласти


Функция ВыполнитьДействие(Данные) Экспорт
	Если Данные.ИмяКоманды = "СписокАдресовМагазинов" Тогда		
		Возврат СписокАдресовМагазинов(Данные);
	ИначеЕсли Данные.ИмяКоманды = "УстановитьТелефонМагазина" Тогда//ИП-00018385
		Возврат УстановитьТелефонМагазина(Данные);	
	ИначеЕсли Данные.ИмяКоманды = "ПомощникУправляющегоМагазина" Тогда//ИП-00018385
		Возврат ПомощникУправляющегоМагазина(Данные);		
	ИначеЕсли Данные.ИмяКоманды = "ПомощникиУправляющихНеправильныеНомераТелефоновМагазинов" Тогда//ИП-00018385
		Возврат ПомощникиУправляющихНеправильныеНомераТелефоновМагазинов(Данные);		
	ИначеЕсли Данные.ИмяКоманды = "НеправильныеНомераТелефоновМагазиновФизЛицо" Тогда//ИП-00018385
		Возврат НеправильныеНомераТелефоновМагазиновФизЛицо(Данные);		
	ИначеЕсли Данные.ИмяКоманды = "ДанныеМагазина" Тогда//ИП-00018385
		Возврат ДанныеМагазина(Данные);		
	Иначе
		Возврат Новый Структура("Ошибка", "Не зашли");	
	КонецЕсли;	
КонецФункции

Функция СписокАдресовМагазинов(Данные) Экспорт 
	Результат = Новый Структура("ОК", Ложь);
	
	Попытка
		Результат.Вставить("Список", ПолучитьСписокАдресовМагазинов(Данные.ПодСтрока, Данные.Первые));
		
	    Результат.ОК = Истина;
	Исключение
		Ошибка = ОписаниеОшибки();
		Результат.Вставить("Ошибка", Ошибка);
	КонецПопытки;
	
	Возврат Результат;
КонецФункции

Функция ПолучитьСписокАдресовМагазинов(ПодСтрока, Первые)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 100
		|	СтруктурныеЕдиницы.Адрес КАК Адрес,
		|	СтруктурныеЕдиницы.НомерТочки,
		|	СтруктурныеЕдиницы.Наименование
		|ИЗ
		|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		|ГДЕ
		|	СтруктурныеЕдиницы.Адрес ПОДОБНО &Адрес
		|	И НЕ СтруктурныеЕдиницы.ПометкаУдаления
		|	И СтруктурныеЕдиницы.Активное
		|	И СтруктурныеЕдиницы.ДатаЗакрытия <= &ДатаЗакрытия
		|
		|УПОРЯДОЧИТЬ ПО
		|	Адрес";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "100", Первые);
	
	Запрос.УстановитьПараметр("Адрес", "%" + ПодСтрока + "%");
	Запрос.УстановитьПараметр("ДатаЗакрытия", КонецДня(ТекущаяДата()));
	
	Результат = Новый Массив;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Магазин = Новый Структура("Представление, НомерМагазина", Символ(9884) + Выборка.Адрес + Символы.ПС + Выборка.Наименование, Выборка.НомерТочки);
		Результат.Добавить(Магазин);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

//ИП-00018385
#Область УстановитьТелефонМагазина

Функция УстановитьТелефонМагазина(Данные) Экспорт 
	Результат = Новый Структура("ОК", Ложь);
	
	Попытка
		Магазин = ТелеграмТехБот.ПолучитьМагазинПоУИД(Данные.Магазин);	
		НомерТелефона = "7" + Прав(Данные.Телефон, 10);
		Телефон = Справочники.СлужебныеSIMКарты.НайтиПоКоду(НомерТелефона);
		Если ЗначениеЗаполнено(Телефон) Тогда
			УстановитьТелефонМагазинаВыполнить_2(Магазин, Телефон);
	    	Результат.ОК = Истина;
		Иначе
			Результат.Вставить("Ошибка", "SIM карта не найдена");
		КонецЕсли;
	Исключение
		Ошибка = ОписаниеОшибки();
		Результат.Вставить("Ошибка", Ошибка);
	КонецПопытки;
	
	Возврат Результат;
КонецФункции

Функция УстановитьТелефонМагазинаВыполнить(Магазин, Телефон)
	
	//обк = Справочники.СтруктурныеЕдиницы.СоздатьЭлемент();
	обк = Магазин.ПолучитьОбъект();
	обк.ТелефонныйНомер1 = Телефон;
	обк.Записать();
	
КонецФункции

Функция УстановитьТелефонМагазинаВыполнить_2(Магазин, Телефон)
	
	МЗ = РегистрыСведений.ПривязкаТелефонов.СоздатьМенеджерЗаписи();
	МЗ.Номер = Телефон;
	МЗ.Привязка = Магазин;
	МЗ.Назначение = Справочники.НазначенияИспользованияSIMКарт.СлужебныйТелефон;
	МЗ.Период = ТекущаяДата();
	МЗ.Записать(Истина);
	
КонецФункции



Функция ПомощникУправляющегоМагазина(Данные) Экспорт 
	
	Результат = Новый Структура("ОК", Ложь);
	
	Попытка
		Магазин = ТелеграмТехБот.ПолучитьМагазинПоУИД(Данные.Магазин);	
		СтруктураПомощника = Новый Структура("ФизЛицо,ФизЛицоНаименование", "", "");
		Помощник = ПолучитьПомощникУправляющегоМагазина(Магазин);
		Если ЗначениеЗаполнено(Помощник) Тогда
			Результат.ФизЛицо = "" + Помощник.УникальныйИдентификатор();
			Результат.ФизЛицоНаименование = Строка(Помощник);
		КонецЕсли;
		Результат.Вставить("ПомощникУправляющего", ПолучитьПомощникУправляющегоМагазина(Магазин));
	    Результат.ОК = Истина;
	Исключение
		Ошибка = ОписаниеОшибки();
		Результат.Вставить("Ошибка", Ошибка);
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьПомощникУправляющегоМагазина(Магазин) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СоответствиеОбъектРольСрезПоследних.РольПользователя
	|ПОМЕСТИТЬ впРольПользователя
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&Период, Объект = &Магазин) КАК СоответствиеОбъектРольСрезПоследних
	|ГДЕ
	|	СоответствиеОбъектРольСрезПоследних.ТипРоли = &ПомощникПоРознице
	//+++ AK suvv 2018.06.08 ИП-00018376.01
	|    ИЛИ СоответствиеОбъектРольСрезПоследних.ТипРоли = &ПомощникСтороннейРозницы
	//--- AK suvv
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	РолиПользователейСоставРоли.Сотрудник,
	|	ПРЕДСТАВЛЕНИЕ(РолиПользователейСоставРоли.Сотрудник)
	|ИЗ
	|	впРольПользователя КАК впРольПользователя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|		ПО впРольПользователя.РольПользователя = РолиПользователейСоставРоли.Ссылка";	
	
	ПомощникПоРознице = ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего;
	
	Запрос.УстановитьПараметр("ПомощникПоРознице", ПомощникПоРознице);
	//+++ AK suvv 2018.06.08 ИП-00018376.01
	Запрос.УстановитьПараметр("ПомощникСтороннейРозницы", ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы);
	//--- AK suvv
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.УстановитьПараметр("Магазин", Магазин);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Сотрудник;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	//Результат = Новый Структура("ФизЛицо,ФизЛицоНаименование", "", "");
	//
	//Если РезультатЗапроса.Пустой() Тогда
	//	Возврат Результат;
	//КонецЕсли;
	//
	//Выборка = РезультатЗапроса.Выбрать();
	//
	//Выборка.Следующий();
	//
	//Результат.ФизЛицо = "" + Выборка.Сотрудник.УникальныйИдентификатор();
	//Результат.ФизЛицоНаименование = Выборка.СотрудникПредставление;
	//
	//Возврат Результат;
	
КонецФункции

#КонецОбласти

//ИП-00018385
#Область НеправильныеНомераТелефоновМагазинов

Функция ПомощникиУправляющихНеправильныеНомераТелефоновМагазинов(Данные)
	Результат = Новый Структура("ОК", Ложь);
	
	Попытка
		Результат.Вставить("Список", ПолучитьПомощникиУправляющихНеправильныеНомераТелефоновМагазинов());
		
	    Результат.ОК = Истина;
	Исключение
		Ошибка = ОписаниеОшибки();
		Результат.Вставить("Ошибка", Ошибка);
	КонецПопытки;
	
	Возврат Результат;
КонецФункции

Функция ПолучитьПомощникиУправляющихНеправильныеНомераТелефоновМагазинов()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтруктурныеЕдиницы.Ссылка
		|ПОМЕСТИТЬ втМагазины
		|ИЗ
		|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		|ГДЕ
		|	НЕ СтруктурныеЕдиницы.ПометкаУдаления
		|	И СтруктурныеЕдиницы.Активное
		|	И (СтруктурныеЕдиницы.ДатаЗакрытия > &Период
		|			ИЛИ СтруктурныеЕдиницы.ДатаЗакрытия = &ПустаяДата)
		|	И СтруктурныеЕдиницы.ТипРозничнойТочки = &ТипРозничнойТочки
		|	И НЕ ПОДСТРОКА(СтруктурныеЕдиницы.ТелефонныйНомер1, 10, 1) В (&Цифры)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеОбъектРольСрезПоследних.РольПользователя,
		|	втМагазины.Ссылка КАК Магазин
		|ПОМЕСТИТЬ впРольПользователя
		|ИЗ
		|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&Период, ) КАК СоответствиеОбъектРольСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМагазины КАК втМагазины
		|		ПО СоответствиеОбъектРольСрезПоследних.Объект = втМагазины.Ссылка
		//+++ AK suvv 2018.06.08 ИП-00018376.01
		//|			И (СоответствиеОбъектРольСрезПоследних.ТипРоли = &ПомощникПоРознице)
		|			И (СоответствиеОбъектРольСрезПоследних.ТипРоли = &ПомощникПоРознице ИЛИ СоответствиеОбъектРольСрезПоследних.ТипРоли = &ПомощникСтороннейРозницы)
		//--- AK suvv
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РолиПользователейСоставРоли.Сотрудник КАК Сотрудник,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ впРольПользователя.Магазин) КАК Магазин,
		|	РолиПользователейСоставРоли.Сотрудник.Наименование КАК СотрудникНаименование
		|ИЗ
		|	впРольПользователя КАК впРольПользователя
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|		ПО впРольПользователя.РольПользователя = РолиПользователейСоставРоли.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РолиПользователейСоставРоли.Сотрудник,
		|	РолиПользователейСоставРоли.Сотрудник.Наименование";
	
	ПомощникПоРознице = ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего;
	
	МассивЦифры = Новый Массив;
	МассивЦифры.Добавить("0");
	МассивЦифры.Добавить("1");
	МассивЦифры.Добавить("2");
	МассивЦифры.Добавить("3");
	МассивЦифры.Добавить("4");
	МассивЦифры.Добавить("5");
	МассивЦифры.Добавить("6");
	МассивЦифры.Добавить("7");
	МассивЦифры.Добавить("8");
	МассивЦифры.Добавить("9");

	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.УстановитьПараметр("ПомощникПоРознице", ПомощникПоРознице);
	//+++ AK suvv 2018.06.08 ИП-00018376.01
	Запрос.УстановитьПараметр("ПомощникСтороннейРозницы", ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы);
	//--- AK suvv
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	Запрос.УстановитьПараметр("ТипРозничнойТочки", Перечисления.ТипыРозничныхТочек.Магазин);
	Запрос.УстановитьПараметр("Цифры", МассивЦифры);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Результат = Новый Массив;
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ФизЛицо = Новый Структура;
		ФизЛицо.Вставить("ФизЛицо", "" + Выборка.Сотрудник.УникальныйИдентификатор());
		ФизЛицо.Вставить("ФизЛицоНаименование", Выборка.СотрудникНаименование);
		
		Результат.Добавить(ФизЛицо);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция НеправильныеНомераТелефоновМагазиновФизЛицо(Данные)
	Результат = Новый Структура("ОК", Ложь);
	
	Попытка
		ФизЛицо = ТелеграмТехБот.ПолучитьФизЛицоПоУИД(Данные.ФизЛицо);
		Результат.Вставить("Список", ПолучитьНеправильныеНомераТелефоновМагазиновФизЛицо(ФизЛицо));
		
	    Результат.ОК = Истина;
	Исключение
		Ошибка = ОписаниеОшибки();
		Результат.Вставить("Ошибка", Ошибка);
	КонецПопытки;
	
	Возврат Результат;
КонецФункции

Функция ПолучитьНеправильныеНомераТелефоновМагазиновФизЛицо(Магазин)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтруктурныеЕдиницы.Ссылка,
		|	СтруктурныеЕдиницы.ТелефонныйНомер1,
		|	СтруктурныеЕдиницы.Наименование
		|ПОМЕСТИТЬ втМагазины
		|ИЗ
		|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		|ГДЕ
		|	НЕ СтруктурныеЕдиницы.ПометкаУдаления
		|	И СтруктурныеЕдиницы.Активное
		|	И (СтруктурныеЕдиницы.ДатаЗакрытия > &Период
		|			ИЛИ СтруктурныеЕдиницы.ДатаЗакрытия = &ПустаяДата)
		|	И СтруктурныеЕдиницы.ТипРозничнойТочки = &ТипРозничнойТочки
		|	И НЕ ПОДСТРОКА(СтруктурныеЕдиницы.ТелефонныйНомер1, 10, 1) В (&Цифры)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеОбъектРольСрезПоследних.РольПользователя,
		|	втМагазины.Ссылка КАК Магазин,
		|	втМагазины.ТелефонныйНомер1,
		|	втМагазины.Наименование
		|ПОМЕСТИТЬ впРольПользователя
		|ИЗ
		|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&Период, ) КАК СоответствиеОбъектРольСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втМагазины КАК втМагазины
		|		ПО СоответствиеОбъектРольСрезПоследних.Объект = втМагазины.Ссылка
		//+++ AK suvv 2018.06.08 ИП-00018376.01
		//|			И (СоответствиеОбъектРольСрезПоследних.ТипРоли = &ПомощникПоРознице)
		|			И (СоответствиеОбъектРольСрезПоследних.ТипРоли = &ПомощникПоРознице или СоответствиеОбъектРольСрезПоследних.ТипРоли = &ПомощникСтороннейРозницы)
		//--- AK suvv
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 5
		|	РолиПользователейСоставРоли.Сотрудник КАК Сотрудник,
		|	впРольПользователя.Магазин КАК Магазин,
		|	РолиПользователейСоставРоли.Сотрудник.Наименование КАК СотрудникНаименование,
		|	впРольПользователя.ТелефонныйНомер1,
		|	впРольПользователя.Наименование
		|ИЗ
		|	впРольПользователя КАК впРольПользователя
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|		ПО впРольПользователя.РольПользователя = РолиПользователейСоставРоли.Ссылка
		|			И (РолиПользователейСоставРоли.Сотрудник = &ФизЛицо)";
	
	ПомощникПоРознице = ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего;
	
	МассивЦифры = Новый Массив;
	МассивЦифры.Добавить("0");
	МассивЦифры.Добавить("1");
	МассивЦифры.Добавить("2");
	МассивЦифры.Добавить("3");
	МассивЦифры.Добавить("4");
	МассивЦифры.Добавить("5");
	МассивЦифры.Добавить("6");
	МассивЦифры.Добавить("7");
	МассивЦифры.Добавить("8");
	МассивЦифры.Добавить("9");

	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.УстановитьПараметр("ПомощникПоРознице", ПомощникПоРознице);
	//+++ AK suvv 2018.06.08 ИП-00018376.01
	Запрос.УстановитьПараметр("ПомощникСтороннейРозницы", ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы);
	//--- AK suvv
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	Запрос.УстановитьПараметр("ТипРозничнойТочки", Перечисления.ТипыРозничныхТочек.Магазин);
	Запрос.УстановитьПараметр("Цифры", МассивЦифры);
	Запрос.УстановитьПараметр("ФизЛицо", Магазин);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Результат = Новый Массив;
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Результат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Магазин = Новый Структура;
		Магазин.Вставить("Магазин", "" + Выборка.Магазин.УникальныйИдентификатор());
		Магазин.Вставить("МагазинНаименование", Выборка.Наименование);
		Магазин.Вставить("Телефон", Выборка.ТелефонныйНомер1);
		
		Результат.Добавить(Магазин);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область ДанныеМагазина

Функция ДанныеМагазина(Данные)
	Результат = Новый Структура("ОК", Ложь);
	
	Попытка
		Магазин = ТелеграмТехБот.ПолучитьМагазинПоУИД(Данные.Магазин);
		Результат.Вставить("Магазин", ПолучитьДанныеМагазина(Магазин, Данные.СтрокаДанных));
		
	    Результат.ОК = Истина;
	Исключение
		Ошибка = ОписаниеОшибки();
		Результат.Вставить("Ошибка", Ошибка);
	КонецПопытки;
	
	Возврат Результат;
КонецФункции

Функция ПолучитьДанныеМагазина(Магазин, СтрокаДанных)
	Массив = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(СтрокаДанных);
	
	МассивЗапрос = Новый Массив;
	
	Для е = 0 По Массив.Количество() - 1 Цикл
		МассивЗапрос.Добавить("СтруктурныеЕдиницы." + Массив[е]);
	КонецЦикла;
	
	ДопСтрока = ТелеграмТехБот.МассивВСтроку(Массив, ","); 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтруктурныеЕдиницы.Ссылка,
		|	СтруктурныеЕдиницы.ПометкаУдаления
		|ИЗ
		|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		|ГДЕ
		|	СтруктурныеЕдиницы.Ссылка = &Ссылка";
	
	Если ЗначениеЗаполнено(ДопСтрока) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПометкаУдаления", "ПометкаУдаления, " + ДопСтрока);	
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", Магазин);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Результат = Новый Структура;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Выборка.Следующий();
	
	Результат = Новый Структура;
	Результат.Вставить("Ссылка", "" + Выборка.Ссылка.УникальныйИдентификатор());
	
	Для каждого ИмяПоля Из Массив Цикл
		Результат.Вставить(ИмяПоля, Выборка[ИмяПоля]);
	КонецЦикла;		
		
	Возврат Результат;
КонецФункции 

#КонецОбласти
