Функция Тест(RegExp,Pattern,Текст)
	RegExp.Pattern = Pattern;
	Возврат RegExp.Test(Текст);
КонецФункции

Функция ВсеПустые(Массив)
	Для Каждого Элемент из Массив Цикл
		Если ЗначениеЗаполнено(Элемент)Тогда
			Возврат Ложь
		КонецЕсли
	КонецЦикла;
	Возврат Истина
КонецФункции

Функция СтруктураТаблицыСвойствКолонок()
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("Индекс");
	Результат.Колонки.Добавить("Дата",Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("Документ",Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("Дебет",Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("Кредит",Новый ОписаниеТипов("Булево"));
	
	Результат.Колонки.Добавить("КоличествоДат",Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("КоличествоДок",Новый ОписаниеТипов("Число"));
	Результат.Колонки.Добавить("КоличествоСумм",Новый ОписаниеТипов("Число"));
	//Результат.Колонки.Добавить("КоличествоДат",Новый ОписаниеТипов("Число"));
	
	Возврат Результат
КонецФункции
	

Функция ОбработатьМассивКолонок(Массив)
	RegExp = Новый COMОбъект("VBScript.RegExp");
    RegExp.IgnoreCase = True;
	RegExp.Global = True;
    RegExp.MultiLine = True;	
	
	МассивСтрок = Новый Массив;
	ПустыеКолонки = Новый Массив;
	
	нДата = 0;
	нДокумент = 0;
	нДебет = 0;
	нКредит = 0;
	
	ТЗ = СтруктураТаблицыСвойствКолонок();
	ТЗ.Добавить();
	
	Для Сч = 0 По Массив.ВГраница() Цикл
		ТекстВКолонке = "";
		ВозможныеПоля = Новый Структура("Дата,Документ,Дебет,Кредит",Ложь,Ложь,Ложь,Ложь);
		
		Для Каждого Элемент из Массив[Сч] Цикл
			Если ЗначениеЗаполнено(Элемент)Тогда
				ТекстВКолонке=ТекстВКолонке + Элемент+Символы.ПС;
			КонецЕсли
		КонецЦикла;
		
		Если ТекстВКолонке = "" Тогда
			ПустыеКолонки.Добавить(Сч);
			Продолжить
		КонецЕсли;
		
		НС = ТЗ.Добавить();
		НС.Индекс = Сч+2-ПустыеКолонки.Количество();
		
		RegExp.Pattern = ".(период|дата).";
		НС.Дата = RegExp.Test(ТекстВКолонке);
		
		RegExp.Pattern = "(документ|операц)";
		НС.Документ = RegExp.Test(ТекстВКолонке);
		
		RegExp.Pattern = "дебет";
		НС.Дебет = RegExp.Test(ТекстВКолонке);
		
		RegExp.Pattern = "кредит";
		НС.Кредит = RegExp.Test(ТекстВКолонке);
		
		RegExp.Pattern = "[\s|^]\d{2}\.\d{2}\.(20)?[\d]{2}(\s|г)";
		НС.КоличествоДат = RegExp.Execute(ТекстВКолонке).Count();
		
		RegExp.Pattern = "расход|приход|оплата|продажа|покупка|реализация|поступление|накладная|счет-фактур|платеж|закупка";
		НС.КоличествоДок = RegExp.Execute(ТекстВКолонке).Count();
		
		RegExp.Pattern = "\s\d+([.,-=]\d{1,2})?\s";
		НС.КоличествоСумм = RegExp.Execute(ТекстВКолонке).Count();
		
	КонецЦикла;
	
	Для Сч = 0 По ПустыеКолонки.ВГраница() Цикл
		Массив.Удалить(ПустыеКолонки[ПустыеКолонки.ВГраница()-Сч])
	КонецЦикла;
	
	ТабСтрок = Новый ТаблицаЗначений();
	ТабСтрок.Колонки.Добавить("Текст",Новый ОписаниеТипов("Строка"));
	ТабСтрок.Колонки.Добавить("Тип",Новый ОписаниеТипов("Строка"));
	
	КоличествоКолонок = Массив.Количество();
	КоличествоСтрок = Массив[0].Количество();
	
	Для Сч=1 По КоличествоСтрок Цикл
		НС = ТабСтрок.Добавить();
	КонецЦикла;
	
	Для Сч=0 По Массив.ВГраница() Цикл
		ИмяКолонки = "Колонка"+(Сч+2);
		ТабСтрок.Колонки.Добавить(ИмяКолонки);
		ТабСтрок.ЗагрузитьКолонку(Массив[Сч],ИмяКолонки);
	КонецЦикла;
	
	ПустыеСтроки = Новый Массив;
	
	Для Каждого Строка из ТабСтрок Цикл
		Текст = "";
		Для Сч = 2 По КоличествоКолонок+1 Цикл
			ТекЯчейка = Строка["Колонка"+Сч];
			Если ЗначениеЗаполнено(ТекЯчейка)Тогда
				Текст = Текст+ТекЯчейка+Символы.Таб
			КонецЕсли;
		КонецЦикла;
		Если Текст = "" Тогда
			ПустыеСтроки.Добавить(Строка);
			Продолжить;
		КонецЕсли;
		
		RegExp.Pattern = ".*(дата|период).*\t(документ|операц).*\t.*дебет.*\t.*кредит.*";
		Если RegExp.Test(Текст)Тогда
			Строка.Тип = "ШТ";
			Продолжить
		КонецЕсли;
		
   		RegExp.Pattern = ".*(сальдо.*начал|начал.*сальдо).*\d+([.,-=]\d{1,2})?\s.*";
		Если RegExp.Test(Текст)Тогда
			Строка.Тип = "СН";
			Продолжить
		КонецЕсли;

   		RegExp.Pattern = ".*(сальдо.*коне|коне.*сальдо).*\d+([.,-=]\d{1,2})?\s.*";
		Если RegExp.Test(Текст)Тогда
			Строка.Тип = "СК";
			Продолжить
		КонецЕсли;
		
   		RegExp.Pattern = ".*(^|\t)\s*\d{2}\.\d{2}\.(20)?\d{2}\s?(г|г\.)?(\ \d{1,2}:\d{2}\:\d{2})?\s*\t.*\d+([.,-=]\d{1,2})?\s.*";
		Если RegExp.Test(Текст)Тогда
			Строка.Тип = "СТ";
			Продолжить
		КонецЕсли;

	КонецЦикла;
	
	Для Каждого Строка из ПустыеСтроки Цикл
		ТабСтрок.Удалить(Строка)
	КонецЦикла;
	
	ШапкаТаблицы = ТабСтрок.НайтиСтроки(Новый Структура("Тип","ШТ"));
	Если ШапкаТаблицы.Количество()=0 Тогда
		МКолонки = ТЗ.НайтиСтроки(Новый Структура("Дата",Истина));
		
		КоличествоДат = 0;
		ИндексДата = -1;
		Для Каждого Колонка из МКолонки Цикл
			Если Колонка.КоличествоДат>КоличествоДат Тогда
				КоличествоДат = Колонка.КоличествоДат;
				ИндексДата = ТЗ.Индекс(Колонка)
			КонецЕсли
		КонецЦикла;
		Если ИндексДата>=0 Тогда
			нДата = ТЗ[ИндексДата].Индекс;
			ТЗ.Удалить(ИндексДата)                                       
		КонецЕсли;
		
		КоличествоДок = 0;
		ИндексДок = -1;
		МКолонки = ТЗ.НайтиСтроки(Новый Структура("Документ",Истина));
		Для Каждого Колонка из МКолонки Цикл
			Если Колонка.КоличествоДок>КоличествоДок Тогда
				КоличествоДок = Колонка.КоличествоДок;
				ИндексДок = ТЗ.Индекс(Колонка)
			КонецЕсли
		КонецЦикла;
		Если ИндексДок>=0 Тогда
			нДокумент = ТЗ[ИндексДок].Индекс;
			ТЗ.Удалить(ИндексДок)
		КонецЕсли;
		
		
		Если ИндексДок=-1 Тогда
			Для Каждого Колонка из ТЗ Цикл
				Если Колонка.КоличествоДок>КоличествоДок Тогда
					КоличествоДок = Колонка.КоличествоДок;
					ИндексДок = ТЗ.Индекс(Колонка)
				КонецЕсли
			КонецЦикла;
			Если ИндексДок>=0 Тогда
				нДокумент = ТЗ[ИндексДок].Индекс;
				ТЗ.Удалить(ИндексДок)
			КонецЕсли;
		
		КонецЕсли;
		
		Если ИндексДата=-1 Тогда
			Для Каждого Колонка из ТЗ Цикл
				Если Колонка.КоличествоДат>КоличествоДат Тогда
					КоличествоДат = Колонка.КоличествоДат;
					ИндексДата = ТЗ.Индекс(Колонка)
				КонецЕсли
			КонецЦикла;
			Если ИндексДата>=0 Тогда
				нДата = ТЗ[ИндексДата].Индекс;
				ТЗ.Удалить(ИндексДата)
			КонецЕсли;
		КонецЕсли;
		
		КоличествоСумм = 0;
		ИндексДебет = -1;
		мКолонки = ТЗ.НайтиСтроки(Новый Структура("Дебет",Истина));
		Для Каждого Колонка из МКолонки Цикл
			Если Колонка.КоличествоСумм>КоличествоСумм Тогда
				КоличествоСумма = Колонка.КоличествоСумм;
				ИндексДебет = ТЗ.Индекс(Колонка)
			КонецЕсли
		КонецЦикла;
		Если ИндексДебет>=0 Тогда
			нДебет = ТЗ[ИндексДебет].Индекс;
			ТЗ.Удалить(ИндексДебет)
		КонецЕсли;
		
		КоличествоСумм = 0;
		ИндексКредит = -1;
		мКолонки = ТЗ.НайтиСтроки(Новый Структура("Кредит",Истина));
		Для Каждого Колонка из МКолонки Цикл
			Если Колонка.КоличествоСумм>КоличествоСумм Тогда
				КоличествоСумма = Колонка.КоличествоСумм;
				ИндексКредит = ТЗ.Индекс(Колонка)
			КонецЕсли
		КонецЦикла;
		Если ИндексКредит>=0 Тогда
			нКредит = ТЗ[ИндексКредит].Индекс;
			ТЗ.Удалить(ИндексКредит)
		КонецЕсли;
		
		Сч = 0;
		Если Мин(ИндексДебет,ИндексКредит)<0 Тогда
			ТЗ.Сортировать("КоличествоСумм Убыв");
			Если ТЗ.Количество()>0 Тогда
				Если ИндексДебет<0 и ТЗ[0].КоличествоСумм>0 Тогда
					нДебет = ТЗ[0].Индекс;
					Сч = 1;
				КонецЕсли;
				Если ТЗ.Количество()>Сч Тогда
					Если ИндексКредит<0 и ТЗ[Сч].КоличествоСумм>0 Тогда
						нКредит = ТЗ[Сч].Индекс;
					КонецЕсли;
				КонецЕсли
			КонецЕсли;
		КонецЕсли;
		
		
	Иначе
		
		Строка = ШапкаТаблицы[0];
		
		Для Сч = 2 По КоличествоКолонок+1 Цикл
			
			Значение = ВРЕГ(Строка["Колонка"+Сч]);
			
			Если нДата = 0 Тогда
				Если Найти(Значение,"ДАТА")>0 Тогда
					нДата = Сч;
					Продолжить
				КонецЕсли;
				
				Если Найти(Значение,"ПЕРИОД")>0 Тогда
					нДата = Сч;
					Продолжить
				КонецЕсли;
			КонецЕсли;
			
			Если нДокумент = 0 Тогда
				Если Найти(Значение,"ДОКУМЕНТ")>0 Тогда
					нДокумент = Сч;
					Продолжить
				КонецЕсли;
				
				Если Найти(Значение,"ОПЕРАЦ")>0 Тогда
					нДокумент = Сч;
					Продолжить
				КонецЕсли;
			КонецЕсли;
			
			Если нДебет = 0 Тогда
				Если Найти(Значение,"ДЕБЕТ")>0 Тогда
					нДебет = Сч;
					Продолжить
				КонецЕсли;
			КонецЕсли;
			
			Если нКредит = 0 Тогда
				Если Найти(Значение,"КРЕДИТ")>0 Тогда
					нКредит = Сч;
				КонецЕсли;
			КонецЕсли;
			
			Если нДата*нДокумент*нДебет*нКредит>0 Тогда
				Прервать
			КонецЕсли
			
				
		КонецЦикла;
		
	КонецЕсли;
	
	Если нДата > 0 Тогда
		Колонка = ТабСтрок.Колонки.Найти("Колонка"+нДата);
		Колонка.Имя = "Дата"
	КонецЕсли;
	
	Если нДокумент > 0 Тогда
		Колонка = ТабСтрок.Колонки.Найти("Колонка"+нДокумент);
		Колонка.Имя = "Документ"
	КонецЕсли;
	
	Если нДебет > 0 Тогда
		Колонка = ТабСтрок.Колонки.Найти("Колонка"+нДебет);
		Колонка.Имя = "Дебет"
	КонецЕсли;
	
	Если нКредит > 0 Тогда
		Колонка = ТабСтрок.Колонки.Найти("Колонка"+нКредит);
		Колонка.Имя = "Кредит"
	КонецЕсли;
	
	
	ТабСтрок.Колонки.Удалить("Текст");
	
	мСальдоНаНачало = 0;
	СтрокаСальдо = ТабСтрок.НайтиСтроки(Новый Структура("Тип","СН"));
	Если СтрокаСальдо.Количество()>0 Тогда
		Попытка
			мСальдоНаНачало = Число(СтрокаСальдо[0].Дебет)
		Исключение
		КонецПопытки;
		Попытка
			мСальдоНаНачало = мСальдоНаНачало - Число(СтрокаСальдо[0].Кредит)
		Исключение
		КонецПопытки
	КонецЕсли;

	мСальдоНаКонец = 0;
	СтрокаСальдо = ТабСтрок.НайтиСтроки(Новый Структура("Тип","СК"));
	Если СтрокаСальдо.Количество()>0 Тогда
		Попытка
			мСальдоНаКонец = Число(СтрокаСальдо[0].Дебет)
		Исключение
		КонецПопытки;
		Попытка
			мСальдоНаКонец = мСальдоНаКонец - Число(СтрокаСальдо[0].Кредит)
		Исключение
		КонецПопытки
	КонецЕсли;

	Возврат ТабСтрок
	
КонецФункции


&НаСервере
Процедура ЗаполнитьТабличныйДокументИзМассива(МассивДанныхКолонок, ВсегоСтрок, ВсегоКолонок)
	//Получение СКД из макета
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	СхемаКомпоновкиДанных = ОбработкаОбъект.ПолучитьМакет("СКД_ЧтениеТабличногоДокумента");

	НомерКолонки=0;
	ТЗ = ОбработатьМассивКолонок(МассивДанныхКолонок);
	Для Каждого Колонка Из ТЗ.Колонки Цикл 
		ПолеНабора = СхемаКомпоновкиДанных.НаборыДанных.ТабличныйДокумент.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
		ПолеНабора.Поле = Колонка.Имя;
		ПолеНабора.ПутьКДанным = Колонка.Имя;
		
		ПолеВыбора = СхемаКомпоновкиДанных.ВариантыНастроек.Основной.Настройки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ПолеВыбора.Использование = Истина;
		ПолеВыбора.Поле = Новый ПолеКомпоновкиДанных(Колонка.Имя);
		
	КонецЦикла;
		
	ВнешниеНаборыДанных = Новый Структура("ТабличныйДокумент ", ТЗ);
    КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;		
	
	Если ПредварительныйПросмотрТабличногоДокументаПослеОткрытия Тогда
		МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, СхемаКомпоновкиДанных.НастройкиПоУмолчанию);								
	Иначе
		МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,
									СхемаКомпоновкиДанных.НастройкиПоУмолчанию, , ,
									Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	КонецЕсли;
		
    ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
    ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных, ВнешниеНаборыДанных);
	
	Если ПредварительныйПросмотрТабличногоДокументаПослеОткрытия Тогда
		ТабДокумент = Новый ТабличныйДокумент;     
    	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;  
		ПроцессорВывода.УстановитьДокумент(ТабДокумент);	
	Иначе
		Результат = Новый ТаблицаЗначений;
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
    	ПроцессорВывода.УстановитьОбъект(Результат);	
	КонецЕсли; 
   
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных); 
	
	Если ПредварительныйПросмотрТабличногоДокументаПослеОткрытия Тогда
		Область = ТабДокумент.ПолучитьОбласть("R1C1:R" + Формат(ТабДокумент.ВысотаТаблицы, "ЧГ=0") + "C" + Формат(ТабДокумент.ШиринаСтраницы, "ЧГ=0"));	
		ТабличныйДокумент.Вывести(Область);	
	Иначе
		Результат.Колонки.Вставить(0);
		ПрочитанныйТабличныйДокумент = ПоместитьВоВременноеХранилище(Результат, ЭтаФорма.УникальныйИдентификатор);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПрочитатьТабличныйДокументИзExcel(ИмяФайла, НомерЛистаExcel = 1) Экспорт
	
	Состояние("Чтение из файла "+ИмяФайла);
	xlLastCell = 11;
	
	ВыбФайл = Новый Файл(ИмяФайла);
	Если НЕ ВыбФайл.Существует() Тогда
		Сообщить("Файл не существует!");
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
		Excel = Новый COMОбъект("Excel.Application");
		Excel.WorkBooks.Open(ИмяФайла);
		ExcelЛист = Excel.Sheets(НомерЛистаExcel);
	Исключение
		Сообщить("Ошибка. Возможно неверно указан номер листа книги Excel.");
		Возврат ложь;
		
	КонецПопытки;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ActiveCell = Excel.ActiveCell.SpecialCells(xlLastCell);
	If ActiveCell.MergeCells then
		ВсегоКолонок = ActiveCell.Column+ActiveCell.Columns.Count;
	Else
		ВсегоКолонок = ActiveCell.Column;
	EndIf;
	ВсегоСтрок = ActiveCell.Row;

	//Если НЕ ПредварительныйПросмотрТабличногоДокументаПослеОткрытия 
	//	И ПерваяСтрокаДанныхТабличногоДокумента > ВсегоСтрок Тогда Возврат Ложь 
	//КонецЕсли;
	
	Область = ExcelЛист.Range(ExcelЛист.Cells(1,1), ExcelЛист.Cells(ВсегоСтрок, ВсегоКолонок));
	МассивДанныхКолонок = Область.Value.Выгрузить();
	//ОбработатьМассивКолонок
	
	Состояние("Обработка загруженных данных...");
	ЗаполнитьТабличныйДокументИзМассива(МассивДанныхКолонок, ВсегоСтрок,  ВсегоКолонок);
	
	Excel.WorkBooks.Close();
	Excel = 0;
	
	Возврат Истина;
	
КонецФункции // ()

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	// Вставить содержимое обработчика.
	ПредварительныйПросмотрТабличногоДокументаПослеОткрытия = Истина;
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл для загрузки";
	Диалог.Фильтр = "Файлы Excel(*.xls,*.xlsx)|*.xls;*.xlsx|OO|*.odt";
	Если Диалог.Выбрать() Тогда
		ПрочитатьТабличныйДокументИзExcel(Диалог.ПолноеИмяФайла);
		ПоказатьСальдо();
		Применить(Неопределено)
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаВыбор(Элемент, Область, СтандартнаяОбработка)

КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДокумент(Команда)
	// Вставить содержимое обработчика.
	Результат = Новый Структура("СальдоНаНачало",СальдоНаНачало);
	МассивСтрок = Новый Массив;
	Для Каждого Строка из ТаблицаДанных Цикл
		МассивСтрок.Добавить(Новый Структура("Дата,Представление,Дебет,Кредит",Строка.Дата,Строка.Документ,Строка.Дебет,Строка.Кредит))
	КонецЦикла;
	Результат.Вставить("Таблица",МассивСтрок);
	ОповеститьОВыборе(Результат);
	//Закрыть()
КонецПроцедуры

Функция ЗначениеЯчейки(Стр,Кол)
	Возврат ТабличныйДокумент.Область(Стр,Кол).Текст
КонецФункции
Функция ПолучитьДату(Массив)
	Попытка
		День = Число(Массив[0]);
		Месяц = (Найти("янвфевмарапрмайиюниюлавгсеноктноядек",НРЕГ(Лев(Массив[1],3)))+2)/3;
		Год = Число(Массив[2]);
		Если Год<100 Тогда
			Год = 2000+Год
		КонецЕсли;
		Результат = Дата(Год,Месяц,День);
		Возврат Результат
	Исключение
		Возврат Дата(1,1,1)
	КонецПопытки
КонецФункции


Функция ДатаИзСтроки(Строка,RegExp=Неопределено)
	Стр = Строка;
	Стр = СтрЗаменить(Стр," ","");
	Результат = Дата(1,1,1);
	Попытка
		Н = Найти(Стр,".");
		День = Число(Лев(Стр,Н-1));
		Стр = Сред(Стр,Н+1);
		Н = Найти(Стр,".");
		Месяц = Число(Лев(Стр,Н-1));
		Стр = Сред(Стр,Н+1);
		Год = Число(Стр);
		Если Год<1000 Тогда
			Год = Год+2000
		КонецЕсли;
		Результат = Дата(Год,Месяц,День);
	Исключение
	КонецПопытки;
	Если Не ЗначениеЗаполнено(Результат)Тогда
		Если RegExp=Неопределено Тогда
			RegExp = Новый COMОбъект("VBScript.RegExp");
		    RegExp.IgnoreCase = True;
			RegExp.Global = True;
		КонецЕсли;
		ДатаМассив = Новый Массив(3);	
		RegExp.Pattern = "(\d{1,2})\s*(января|февраля|марта|апреля|июня|июля|августа|сентября|октября|ноября|декабря)\s*((20)?\d{2})";
		Matches = RegExp.Execute(Строка);
		Если Matches.Count()>0 Тогда
			M = Matches.Item(0).Submatches;
			Для К=0 По 2 Цикл
				ДатаМассив[К]=M.Item(К)
			КонецЦикла;
			Результат = ПолучитьДату(ДатаМассив);
		КонецЕсли;
		
	КонецЕсли;
	Возврат Результат
КонецФункции

&НаСервере
Процедура ПрименитьНаСервере()
	СальдоНаНачало = мСальдоНаНачало;
	СальдоНаКонец = мСальдоНаКонец;
	
	RegExp = Новый COMОбъект("VBScript.RegExp");
    RegExp.IgnoreCase = True;
	RegExp.Global = True;
	
	ТаблицаДанных.Очистить();
	Для НСтр = 2 по ТабличныйДокумент.ВысотаТаблицы Цикл
		Если ТабличныйДокумент.Область(НСтр,1,НСтр,1).Текст = "СТ" Тогда
			СтрокаДанных = ТаблицаДанных.Добавить();
			Если нДата>0 Тогда
				Попытка
					ТекстДата = ЗначениеЯчейки(НСтр,нДата);
					СтрокаДанных.Дата = ДатаИзСтроки(ТекстДата,RegExp);
				Исключение
				КонецПопытки
			КонецЕсли;
			
			Если нДокумент>0 Тогда
				Попытка
					СтрокаДанных.Документ = ЗначениеЯчейки(НСтр,нДокумент)
				Исключение
				КонецПопытки
			КонецЕсли;
			
			Если нДебет>0 Тогда
				Попытка
					СтрокаДанных.Дебет = ЗначениеЯчейки(НСтр,нДебет)
				Исключение
				КонецПопытки
			КонецЕсли;
			
			Если нКредит>0 Тогда
				Попытка
					СтрокаДанных.Кредит = ЗначениеЯчейки(НСтр,нКредит)
				Исключение
				КонецПопытки
			КонецЕсли;
			
			
		КонецЕсли
	КонецЦикла;
	СальдоНаКонецРасчетное = СальдоНаНачало + ТаблицаДанных.Итог("Дебет")-ТаблицаДанных.Итог("Кредит");
	СальдоНаНачало = мСальдоНаНачало;
	СальдоНаКонец = мСальдоНаКонец;
	ТаблицаДанных.Очистить();
	Для НСтр = 2 по ТабличныйДокумент.ВысотаТаблицы Цикл
		Если ТабличныйДокумент.Область(НСтр,1,НСтр,1).Текст = "СТ" Тогда
			СтрокаДанных = ТаблицаДанных.Добавить();
			Если нДата>0 Тогда
				Попытка
					ТекстДата = ЗначениеЯчейки(НСтр,нДата);
					СтрокаДанных.Дата = ДатаИзСтроки(ТекстДата);
				Исключение
				КонецПопытки
			КонецЕсли;
			
			Если нДокумент>0 Тогда
				Попытка
					СтрокаДанных.Документ = ЗначениеЯчейки(НСтр,нДокумент)
				Исключение
				КонецПопытки
			КонецЕсли;
			
			Если нДебет>0 Тогда
				Попытка
					СтрокаДанных.Дебет = ЗначениеЯчейки(НСтр,нДебет)
				Исключение
				КонецПопытки
			КонецЕсли;
			
			Если нКредит>0 Тогда
				Попытка
					СтрокаДанных.Кредит = ЗначениеЯчейки(НСтр,нКредит)
				Исключение
				КонецПопытки
			КонецЕсли;
			
			
		КонецЕсли
	КонецЦикла;
	СальдоНаКонецРасчетное = СальдоНаНачало + ТаблицаДанных.Итог("Дебет")-ТаблицаДанных.Итог("Кредит");
КонецПроцедуры

&НаКлиенте
Процедура Применить(Команда)
	// Вставить содержимое обработчика.
	ПрименитьНаСервере();
	ЭтаФорма.Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаДанные;
КонецПроцедуры

&НаКлиенте
Процедура СальдоНачальное(Команда)
	Если ТабличныйДокумент.ВыделенныеОбласти.Количество()>0  Тогда
		Ячейка = ТабличныйДокумент.ВыделенныеОбласти[0];
		Попытка 
			мСальдоНаНачало = Число(Ячейка.Текст)
		Исключение
			мСальдоНаНачало = 0
		КонецПопытки
	КонецЕсли;
	ПоказатьСальдо();
КонецПроцедуры

&НаКлиенте
Процедура СальдоНаКонец(Команда)
	// Вставить содержимое обработчика.
	Если ТабличныйДокумент.ВыделенныеОбласти.Количество()>0  Тогда
		Ячейка = ТабличныйДокумент.ВыделенныеОбласти[0];
		Попытка 
			мСальдоНаКонец = Число(Ячейка.Текст)
		Исключение
			мСальдоНаКонец = 0
		КонецПопытки
	КонецЕсли;
	ПоказатьСальдо()
КонецПроцедуры

&НаКлиенте
Процедура ДатаНомерКолонкиПриИзменении(Элемент)
	СтандартнаяОбработка = Истина;
	ПеречитатьКолонки("Дата");
КонецПроцедуры

&НаКлиенте
Процедура ПеречитатьКолонки(ИмяКолонки="")
	Ширина = ТабличныйДокумент.ШиринаТаблицы;
	Для Н = 1 по Ширина Цикл
		Ячейка = ТабличныйДокумент.Область(1,Н);
		Если Ячейка.Текст = ИмяКолонки Тогда
			Ячейка.Текст = "Колонка"+Н;
			ТабличныйДокумент.Область(2,Н,ТабличныйДокумент.ВысотаТаблицы,Н).ЦветФона = WebЦвета.Белый; 
			Прервать
		КонецЕсли;
	КонецЦикла;
	Если ИмяКолонки = "" Тогда
		Для НКол = 2 по ТабличныйДокумент.ШиринаТаблицы Цикл
			Ячейка = ТабличныйДокумент.Область(1,НКол);
			Если НКол = нДата Тогда
				Ячейка.Текст = "Дата";
				Продолжить
			КонецЕсли;
			Если НКол = нДокумент Тогда
				Ячейка.Текст = "Документ";
				Продолжить
			КонецЕсли;
			Если НКол = нДебет Тогда
				Ячейка.Текст = "Дебет";
				Продолжить
			КонецЕсли;
			Если НКол = нКредит Тогда
				Ячейка.Текст = "Кредит";
			КонецЕсли;
		КонецЦикла;
		НКол = 2;
	Иначе
		НКол = ЭтаФорма["н"+ИмяКолонки];
		Ячейка = ТабличныйДокумент.Область(1,НКол,1,НКол);
		Ячейка.Текст = ИмяКолонки;
	КонецЕсли;
	МассивКолонок = Новый Массив;
	Если ИмяКолонки = "" Тогда
		МассивКолонок.Добавить(нДата);
		МассивКолонок.Добавить(нДокумент);
		МассивКолонок.Добавить(нДебет);
		МассивКолонок.Добавить(нКредит)
	Иначе
		МассивКолонок.Добавить(НКол);
	КонецЕсли;
	Для НСтр = 2 по ТабличныйДокумент.ВысотаТаблицы Цикл
		Для Каждого НКол из МассивКолонок Цикл
			Ячейка = ТабличныйДокумент.Область(НСтр,НКол);
			ТекЦвет = ?(ТабличныйДокумент.Область(НСтр,1,НСтр,1).Текст="СТ",WebЦвета.БледноЗеленый,WebЦвета.Белый);
			Ячейка.ЦветФона = ТекЦвет
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНомерКолонкиОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ДокументНомерКолонкиПриИзменении(Элемент)
	ПеречитатьКолонки("Документ")
КонецПроцедуры

&НаКлиенте
Процедура нДебетПриИзменении(Элемент)
	ПеречитатьКолонки("Дебет")
КонецПроцедуры

&НаКлиенте
Процедура нКредитПриИзменении(Элемент)
	ПеречитатьКолонки("Кредит")
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСальдо()
	Элементы.ТекстСальдоНачальное.Заголовок = мСальдоНаНачало;
	Элементы.ТекстСальдоКонечное.Заголовок = мСальдоНаКонец;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Акт") Тогда
		ЗагрузитьИзФайлаПриОткрытии=Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗагрузитьИзФайлаПриОткрытии Тогда
		ЗагрузитьИзФайла(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВключатьВТаблицу(Команда)
	// Вставить содержимое обработчика.
	Для Каждого Область из  ТабличныйДокумент.ВыделенныеОбласти Цикл
		Для Сч = Область.Верх по Область.Низ Цикл
			ТабличныйДокумент.Область(Сч,1).Текст = "СТ"
		КонецЦикла;
	КонецЦикла;
	ПеречитатьКолонки();
КонецПроцедуры

&НаКлиенте
Процедура НеВключатьВТаблицу(Команда)
	// Вставить содержимое обработчика.
	Для Каждого Область из  ТабличныйДокумент.ВыделенныеОбласти Цикл
		Для Сч = Область.Верх по Область.Низ Цикл
			ТабличныйДокумент.Область(Сч,1).Текст = ""
		КонецЦикла;
	КонецЦикла;
	ПеречитатьКолонки();
КонецПроцедуры
