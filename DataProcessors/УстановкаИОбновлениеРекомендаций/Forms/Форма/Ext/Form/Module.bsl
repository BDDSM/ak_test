
&НаСервере
Процедура ОбновитьТаблицуНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка КАК Контрагент,
		|	СУММА(ФинансовыйОстаткиИОбороты.СуммаНачальныйОстаток) КАК СуммаНачальныйОстаток,
		|	СУММА(ФинансовыйОстаткиИОбороты.СуммаОборотДт) КАК СуммаОборотДт,
		|	СУММА(ФинансовыйОстаткиИОбороты.СуммаОборотКт) КАК СуммаОборотКт,
		|	СУММА(ФинансовыйОстаткиИОбороты.СуммаКонечныйОстаток) КАК СуммаКонечныйОстаток
		|ПОМЕСТИТЬ втВзаиморасчеты
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.ОстаткиИОбороты(
		|				&ДатаНачала,
		|				&ДатаОкончания,
		|				,
		|				,
		|				(Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РасчетыСПоставщикамиИПодрядчиками))
		|					ИЛИ Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РасчетыСПокупателями)))
		|					И Счет <> ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ВГОРасчетыСПоставщикамиИПодрядчиками)
		|					И Счет <> ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ВГОРасчетыСПокупателями),
		|				,
		|				) КАК ФинансовыйОстаткиИОбороты
		|		ПО Контрагенты.Ссылка = ФинансовыйОстаткиИОбороты.Субконто2
		|
		|СГРУППИРОВАТЬ ПО
		|	Контрагенты.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОПроверкеКонтрагентовСрезПоследних.Рекомендация КАК Рекомендация1Cont,
		|	ВЫРАЗИТЬ(СведенияОПроверкеКонтрагентовСрезПоследних.Пояснения КАК СТРОКА(150)) КАК Пояснения1Cont,
		|	NULL КАК РекомендацияУФК,
		|	NULL КАК ПоясненияУФК,
		|	СведенияОПроверкеКонтрагентовСрезПоследних.Рекомендация.Отрицательная,
		|	СведенияОПроверкеКонтрагентовСрезПоследних.Контрагент,
		|	NULL КАК ДатаОтправки,
		|	NULL КАК ЗавершениеСотрудничества,
		|	NULL КАК ОтветПолучен
		|ПОМЕСТИТЬ втРекомендации
		|ИЗ
		|	РегистрСведений.СведенияОПроверкеКонтрагентов.СрезПоследних(&ДатаОкончания, ТипСведений В (ЗНАЧЕНИЕ(Перечисление.СведенияОПроверке.Сведения1Cont), ЗНАЧЕНИЕ(Перечисление.СведенияОПроверке.СведенияОбщие))) КАК СведенияОПроверкеКонтрагентовСрезПоследних
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	NULL,
		|	NULL,
		|	СведенияОПроверкеКонтрагентовСрезПоследних.РекомендацияВВ,
		|	ВЫРАЗИТЬ(СведенияОПроверкеКонтрагентовСрезПоследних.ПоясненияВВ КАК СТРОКА(150)),
		|	СведенияОПроверкеКонтрагентовСрезПоследних.РекомендацияВВ.Отрицательная,
		|	СведенияОПроверкеКонтрагентовСрезПоследних.Контрагент,
		|	СведенияОПроверкеКонтрагентовСрезПоследних.ДатаОтправки,
		|	СведенияОПроверкеКонтрагентовСрезПоследних.ЗавершениеСотрудничества,
		|	СведенияОПроверкеКонтрагентовСрезПоследних.ОтветПолучен
		|ИЗ
		|	РегистрСведений.СведенияОПроверкеКонтрагентов.СрезПоследних(&ДатаОкончания, ТипСведений В (ЗНАЧЕНИЕ(Перечисление.СведенияОПроверке.СведенияУФК), ЗНАЧЕНИЕ(Перечисление.СведенияОПроверке.СведенияОбщие))) КАК СведенияОПроверкеКонтрагентовСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(втРекомендации.Рекомендация1Cont) КАК Рекомендация1Cont,
		|	МАКСИМУМ(втРекомендации.Пояснения1Cont) КАК Пояснения1Cont,
		|	МАКСИМУМ(втРекомендации.РекомендацияУФК) КАК РекомендацияУФК,
		|	МАКСИМУМ(втРекомендации.ПоясненияУФК) КАК ПоясненияУФК,
		|	МАКСИМУМ(втРекомендации.РекомендацияОтрицательная) КАК Отрицательная,
		|	втРекомендации.Контрагент,
		|	МАКСИМУМ(втРекомендации.ДатаОтправки) КАК ДатаОтправки,
		|	МАКСИМУМ(втРекомендации.ЗавершениеСотрудничества) КАК ЗавершениеСотрудничества,
		|	МАКСИМУМ(втРекомендации.ОтветПолучен) КАК ОтветПолучен
		|ПОМЕСТИТЬ втРекомендацииСГруппировкой
		|ИЗ
		|	втРекомендации КАК втРекомендации
		|
		|СГРУППИРОВАТЬ ПО
		|	втРекомендации.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втВзаиморасчеты.Контрагент,
		|	ЕстьNULL(втВзаиморасчеты.СуммаНачальныйОстаток,0) КАК СуммаНачальныйОстаток,
		|	ЕстьNULL(втВзаиморасчеты.СуммаОборотДт,0) КАК СуммаОборотДт,
		|	ЕстьNULL(втВзаиморасчеты.СуммаОборотКт,0) КАК СуммаОборотКт,
		|	ЕстьNULL(втВзаиморасчеты.СуммаКонечныйОстаток,0) КАК СуммаКонечныйОстаток,
		|	втРекомендацииСГруппировкой.Рекомендация1Cont,
		|	втРекомендацииСГруппировкой.Пояснения1Cont КАК Пояснение1Cont,
		|	втРекомендацииСГруппировкой.РекомендацияУФК,
		|	втРекомендацииСГруппировкой.ПоясненияУФК КАК ПояснениеУФК,
		|	втРекомендацииСГруппировкой.Отрицательная,
		|	втВзаиморасчеты.Контрагент.ОсновнойБухгалтерПокупателя КАК Бухгалтер,
		|	втВзаиморасчеты.Контрагент.ОсновнойМенеджерПокупателя КАК Менеджер,
		|	втВзаиморасчеты.Контрагент.ИНН КАК ИНН,
		|	втРекомендацииСГруппировкой.ЗавершениеСотрудничества,
		|	втРекомендацииСГруппировкой.ДатаОтправки,
		|	втРекомендацииСГруппировкой.ОтветПолучен
		|ИЗ
		|	втВзаиморасчеты КАК втВзаиморасчеты
		|		ЛЕВОЕ СОЕДИНЕНИЕ втРекомендацииСГруппировкой КАК втРекомендацииСГруппировкой
		|		ПО втВзаиморасчеты.Контрагент = втРекомендацииСГруппировкой.Контрагент";
	
	Запрос.УстановитьПараметр("ДатаНачала", ПериодОбработки.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ПериодОбработки.ДатаОкончания);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();;
	Объект.ТаблицаКонтрагентов.Загрузить(РезультатЗапроса);
	УстановитьФлаги();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаблицу(Команда)
	ОбновитьТаблицуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РедактированиеРекомендаций = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.РедактированиеРекомендацийКонтрагентов, Ложь);	

	Если НЕ РедактированиеРекомендаций Тогда
		Сообщить("Нет прав на редактирование рекомендаций");
		Отказ = Истина;
	КонецЕсли;	
	
	ПериодОбработки.ДатаНачала = НачалоМесяца(ТекущаяДата()-6*30*24*60*60);
	ПериодОбработки.ДатаОкончания = КонецМесяца(ТекущаяДата());
	Ответсвенный = "Авто-установка";
	ПереноситьРекомендацию = Истина;
	БезКонечногоОстатока = Истина;
	БезОборотов = Истина;
	РекомендацияУФКНеЗаполнена = Истина;
	ОтветПолучен = Истина;
	ОповещатьОтветсвенных = Истина;
	ПереноситьПояснения = Истина;
	УстановитьКомментарий();
	ОбновитьТаблицуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	ОбновитьТаблицуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	ОбновитьТаблицуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РекомендацияПриИзменении(Элемент)
	УстановитьФлаги();
	ОбновитьИтогоВыделено();
КонецПроцедуры

Процедура  УстановитьФлаги()
	
	Для каждого Строка из Объект.ТаблицаКонтрагентов Цикл
		
		ОтборРекомендация = Истина;
		Если ЗначениеЗаполнено(Рекомендация) Тогда
			ОтборРекомендация = Ложь;
			Для каждого элемент из Рекомендация Цикл 
				Если Строка.Рекомендация1Cont = элемент.Значение Тогда
					ОтборРекомендация = Истина;		
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;	
		
		
		ОтборБезОборотов = Истина;
		Если  БезОборотов = Истина Тогда
			ОтборБезОборотов = (Строка.СуммаОборотДт = 0) И (Строка.СуммаОборотКт = 0);
		КонецЕсли;
		
		ОтборБезКонечногоОстатока = Истина;
		Если БезКонечногоОстатока Тогда
			ОтборБезКонечногоОстатока = (Строка.СуммаКонечныйОстаток = 0)	
		КонецЕсли;
		
		ОтборРекомендацияУФКПустая = Истина;
		Если РекомендацияУФКНеЗаполнена Тогда 
			ОтборРекомендацияУФКПустая = НЕ ЗначениеЗаполнено(Строка.РекомендацияУФК) 
		КонецЕсли;			
		
		Строка.Флаг = ОтборРекомендация И ОтборБезОборотов И ОтборБезКонечногоОстатока И ОтборРекомендацияУФКПустая;
		
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура БезКонечногоОстатокаПриИзменении(Элемент)
	УстановитьФлаги();
	ОбновитьИтогоВыделено();
	УстановитьКомментарий();
КонецПроцедуры

&НаКлиенте
Процедура БезОборотовПриИзменении(Элемент)
	УстановитьФлаги();
	ОбновитьИтогоВыделено();
	УстановитьКомментарий();
КонецПроцедуры

Процедура УстановитьКомментарий()
	
	ЭтоПервый = Истина;
	КомментарийКПояснению = "";
	ПредставлениеПериода = ПредставлениеПериодаОбработки(ПериодОбработки.ДатаНачала,ПериодОбработки.ДатаОкончания,Истина);	
	
	Если БезОборотов Тогда
		Если ЭтоПервый Тогда
			КомментарийКПояснению = ПредставлениеПериода + ": ";
		Иначе	
			КомментарийКПояснению = КомментарийКПояснению + ", ";
		КонецЕсли;
		КомментарийКПояснению = КомментарийКПояснению + "Отсутствуют обороты";
		ЭтоПервый = Ложь;
	КонецЕсли;
	
	Если БезКонечногоОстатока Тогда
		Если ЭтоПервый Тогда
			КомментарийКПояснению = ПредставлениеПериода + ": ";
		Иначе	
			КомментарийКПояснению = КомментарийКПояснению + ", ";
		КонецЕсли;
		КомментарийКПояснению = КомментарийКПояснению + "Отсутствует задолженность";
		ЭтоПервый = Ложь;
	КонецЕсли;
	
КонецПроцедуры	

Функция ПредставлениеПериодаОбработки(НачалоПериода = Неопределено, КонецПериода = Неопределено, ТолькоДаты  = Ложь) Экспорт
	
	ТекстПериод = "";
		
	Если ЗначениеЗаполнено(КонецПериода) Тогда 
		Если КонецПериода >= НачалоПериода Тогда
			ТекстПериод = ?(ТолькоДаты, "", " за ") + ПредставлениеПериода(НачалоДня(НачалоПериода), КонецДня(КонецПериода), "ФП = Истина");
		Иначе
			ТекстПериод = "";
		КонецЕсли;
	ИначеЕсли ЗначениеЗаполнено(НачалоПериода) И Не ЗначениеЗаполнено(КонецПериода) Тогда
		ТекстПериод = ?(ТолькоДаты, "", " за ") + ПредставлениеПериода(НачалоДня(НачалоПериода), КонецДня(Дата(3999, 11, 11)), "ФП = Истина");
		ТекстПериод = СтрЗаменить(ТекстПериод, Сред(ТекстПериод, Найти(ТекстПериод, " - ")), " - ...");
	КонецЕсли;
	
	Возврат ТекстПериод;
	
КонецФункции

&НаСервере
Процедура УстановитьРекомендацииНаСервере()
	
	Рассылка.Очистить();
	
	Для каждого Строка из Объект.ТаблицаКонтрагентов Цикл
		
		Если Строка.Флаг <> Истина Тогда 
			Продолжить;
		КонецЕсли;
		
		МенеджерЗаписи = РегистрыСведений.СведенияОПроверкеКонтрагентов.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Период = ТекущаяДата();
		МенеджерЗаписи.ТипСведений = Перечисления.СведенияОПроверке.СведенияУФК;
		МенеджерЗаписи.Контрагент = Строка.Контрагент;
		Если ПереноситьРекомендацию Тогда
			МенеджерЗаписи.РекомендацияВВ = Строка.Рекомендация1Cont;
		КонецЕсли;
		Если ПереноситьПояснения Тогда
			МенеджерЗаписи.ПоясненияВВ = КомментарийКПояснению + ?(ЗначениеЗаполнено(КомментарийКПояснению)," ","")+Строка.Пояснение1Cont;
		КонецЕсли;		
		Если ОтветПолучен Тогда
			МенеджерЗаписи.ОтветПолучен = Истина;	
		КонецЕсли;	
		МенеджерЗаписи.Ответственный = Ответсвенный;
		МенеджерЗаписи.Записать();
		
		Если ЗначениеЗаполнено(Строка.Контрагент.ОсновнойБухгалтерПокупателя) Тогда			
			НоваяСтрока = Рассылка.Добавить();
			НоваяСтрока.Ответсвенный = Строка.Контрагент.ОсновнойБухгалтерПокупателя;			
			НоваяСтрока.Контрагент   = Строка.Контрагент;
			НоваяСтрока.Рекомендация = МенеджерЗаписи.РекомендацияВВ;
			НоваяСтрока.Пояснение    = МенеджерЗаписи.ПоясненияВВ;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Строка.Контрагент.ОсновнойМенеджерПокупателя) И
			Строка.Контрагент.ОсновнойМенеджерПокупателя <> Строка.Контрагент.ОсновнойБухгалтерПокупателя Тогда			
			НоваяСтрока = Рассылка.Добавить();
			НоваяСтрока.Ответсвенный = Строка.Контрагент.ОсновнойМенеджерПокупателя;			
			НоваяСтрока.Контрагент   = Строка.Контрагент;
			НоваяСтрока.Рекомендация = МенеджерЗаписи.РекомендацияВВ;
			НоваяСтрока.Пояснение    = МенеджерЗаписи.ПоясненияВВ;
		КонецЕсли;	
		
	КонецЦикла;	
	
	Если ОповещатьОтветсвенных Тогда
		ВыполнитьРассылку();
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьРассылку()
	
		
	Тема = "Автоматическая установка рекомендаций";
	
	Ответсвенные = Рассылка.Выгрузить(,"Ответсвенный"); 	
	Ответсвенные.Свернуть("Ответсвенный");	
	
	Для каждого СтрокаОтветсвенный из Ответсвенные Цикл
		
		СтруктураОтбор = Новый Структура("Ответсвенный",СтрокаОтветсвенный.Ответсвенный);
		Контрагенты = Рассылка.НайтиСтроки(СтруктураОтбор);
		
		Адрес = НайтиЭлАдрес(СтрокаОтветсвенный.Ответсвенный.ФизЛицо);
		
		Если Не  ЗначениеЗаполнено(Адрес) Тогда
			Продолжить;
		КонецЕсли;	
		
		ТелоПисьма = "<HTML><HEAD></HEAD><BODY>"+ Символы.ПС; 
		ТелоПисьма = ТелоПисьма + "<META HTTP-EQUIV=""Content-Type"" CONTENT=""text/html; charset=windows-1251"">"+ Символы.ПС; 
		ТелоПисьма = ТелоПисьма + "<h3>Автоматическая установка рекомендаций УФК: </h3>"+ Символы.ПС; 
		ТелоПисьма = ТелоПисьма + "<table border='1px'><th>Контрагент</th><th>ИНН</th><th>Ответственный</th><th>Рекомендация</th><th>Пояснение</th>"+Символы.ПС; 

		РассылкаОтбор = Рассылка.НайтиСтроки(СтруктураОтбор);
		Контрагентов = 0;
		Для каждого строка Из РассылкаОтбор Цикл
			
			ТелоПисьма = ТелоПисьма + "<tr>"; 
			
			ТелоПисьма = ТелоПисьма +  "<td>" + строка.Контрагент + "</td>";
			ТелоПисьма = ТелоПисьма +  "<td>" + строка.Контрагент.ИНН + "</td>";
			ТелоПисьма = ТелоПисьма +  "<td>" + строка.Ответсвенный + "</td>";
			ТелоПисьма = ТелоПисьма +  "<td>" + строка.Рекомендация + "</td>";
			ТелоПисьма = ТелоПисьма +  "<td>" + строка.Пояснение + "</td>";			
			
			ТелоПисьма = ТелоПисьма + "</tr>"+Символы.ПС;
			Контрагентов = Контрагентов + 1;
									
		КонецЦикла;	
		
		ТелоПисьма = ТелоПисьма + Символы.ПС+ "</table>"+Символы.ПС; 
		ТелоПисьма = ТелоПисьма + "<h3>Просим ознакомиться с рекомендациями и внести корректировки в случае необходимости</h3>";

		ТелоПисьма = ТелоПисьма + "</BODY></HTML>"; 
		
		Попытка
			ОтправитьПисьмо(Адрес,ТелоПисьма,Тема);
			Сообщить("Отправлено письмо для бухгалтера: " + СтрокаОтветсвенный.Ответсвенный.ФизЛицо + ", контрагентов: "+  Контрагентов);
		Исключение
			Сообщить("Не удалось отправить письмо для бухгалтера: " + СтрокаОтветсвенный.Ответсвенный.ФизЛицо + ", контрагентов: "+  Контрагентов);
		КонецПопытки;	
	КонецЦикла;	
	
КонецПроцедуры


Функция НайтиЭлАдрес(ФизЛицо)
	
	Если не ЗначениеЗаполнено(ФизЛицо) тогда
		Возврат "";
	КонецЕсли;	
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтактнаяИнформация.Объект КАК Сотрудник,
	|	КонтактнаяИнформация.Представление КАК ЭлАдрес
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Тип = &Тип
	|	И КонтактнаяИнформация.Вид = &Вид
	|	И КонтактнаяИнформация.Объект В(&Объект)";
	
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.EmailФизЛица);
	Запрос.УстановитьПараметр("Объект", ФизЛицо);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.ЭлАдрес;
	КонецЦикла;
	
	Возврат "";
	
КонецФункции

&НаСервере
Процедура ОтправитьПисьмо(АдресПолучателя, ТекстПисьма, Тема)
	
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Письмо = Новый ИнтернетПочтовоеСообщение;
	Письмо.ИмяОтправителя 	= "" + УчетнаяЗапись + "";
	Письмо.ИмяОтправителя  	= "" + СокрЛП(УчетнаяЗапись) + "";
	Письмо.Отправитель     	= "" + СокрЛП(УчетнаяЗапись) + "";
	Письмо.Получатели.Добавить(АдресПолучателя);		
	Письмо.Тема				= Тема;	
	Письмо.Тексты.Добавить(ТекстПисьма, ТипТекстаПочтовогоСообщения.HTML);	
	Почта = Новый ИнтернетПочта;	
	Почта.Подключиться(Профиль);	
	Почта.Послать(Письмо);	
	Почта.Отключиться();
	
КонецПроцедуры
	
	
&НаКлиенте
Процедура УстановитьРекомендации(Команда)
	УстановитьРекомендацииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонтрагентовФлагПриИзменении(Элемент)
	ОбновитьИтогоВыделено();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИтогоВыделено()
	Итого = 0;
	Для каждого Строка из Объект.ТаблицаКонтрагентов Цикл
		Итого = Итого + Строка.Флаг;	
	КонецЦикла;	
	ИтогоВыделено = Итого;
КонецПроцедуры	

&НаКлиенте
Процедура РекомендацияУФКНеЗаполненаПриИзменении(Элемент)
	
	УстановитьФлаги();
	ОбновитьИтогоВыделено();

КонецПроцедуры

&НаКлиенте
Процедура УстановитьВсеФлаги(Значение)
	
	Для каждого Строка из Объект.ТаблицаКонтрагентов Цикл		
		Строка.Флаг = 	Значение		
	КонецЦикла;	
	
КонецПроцедуры	
	 

&НаКлиенте
Процедура ОчиститьФлаги(Команда)
	УстановитьВсеФлаги(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлаги1(Команда)
	УстановитьВсеФлаги(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)


КонецПроцедуры

&НаКлиенте
Процедура ПериодОбработкиПриИзменении(Элемент)
	ОбновитьТаблицуНаСервере();
	УстановитьКомментарий();
КонецПроцедуры


