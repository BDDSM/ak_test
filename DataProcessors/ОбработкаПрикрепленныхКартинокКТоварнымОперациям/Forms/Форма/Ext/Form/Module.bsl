
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДокументОтбор = Параметры.ДокументОтбор;
	
	Если Не ЗначениеЗаполнено(СДаты) Тогда
		СДаты = ТекущаяДата() - 86400;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПоДату) Тогда
		ПоДату = ТекущаяДата() - 86400;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Магазин)
		И РольДоступна("Продавец") Тогда
		Попытка
			Магазин = ПараметрыСеанса.ТорговаяТочкаПоАйпи;
		Исключение
		КонецПопытки;	
	КонецЕсли;
	
	КонстантаКаталогФайлов = Константы.КаталогХраненияФайловКартинок.Получить();
	
	Если Прав(КонстантаКаталогФайлов, 1) <> "\" Тогда
		КонстантаКаталогФайлов = КонстантаКаталогФайлов + "\";
	КонецЕсли;	
	
	КонстантаКаталогФайлов = КонстантаКаталогФайлов + "СписанияНаМагазинах\";
	
	Фильтр = Новый Структура;
	Фильтр.Вставить("Пользователь", ПользователиИнформационнойБазы.ТекущийПользователь());
	Фильтр.Вставить("КлючОбъекта", "Общее/МасштабФотоРакурсов");
		
	Настр = ХранилищеСистемныхНастроек.Выбрать(Фильтр);
	Если Настр.Следующий() Тогда
		МасштабФото = Настр.Настройки;
	КонецЕсли;
	
	Фильтр = Новый Структура;
	Фильтр.Вставить("Пользователь", ПользователиИнформационнойБазы.ТекущийПользователь());
	Фильтр.Вставить("КлючОбъекта", "Общее/ВыводитьНаСтраницеШтук");
		
	Настр = ХранилищеСистемныхНастроек.Выбрать(Фильтр);
	Если Настр.Следующий() Тогда
		ВыводитьНаСтраницеШтук = Настр.Настройки;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(МасштабФото) Тогда
		МасштабФото = 100;
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ВыводитьНаСтраницеШтук) Тогда
		ВыводитьНаСтраницеШтук = 35;
	КонецЕсли;	
	
	ПеречитатьДокументы();
	
	МожетМенятьСтатус = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.МожетМенятьСтатусПриложенныхКартинокСписаний, Ложь);
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьСписокОперацийКОтбору()
	
	МассивВыбора = Новый Массив();
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТипыОперацийМагазина.Ссылка,
	               |	ТипыОперацийМагазина.Наименование
	               |ИЗ
	               |	Справочник.ТипыОперацийМагазина КАК ТипыОперацийМагазина
	               |ГДЕ
	               |	ТипыОперацийМагазина.table_operation = ""td_move""
	               |	И ТипыОперацийМагазина.field_operation = ""operation_type_orig""
	               |	И ТипыОперацийМагазина.is_photo = 1
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТипыОперацийМагазина.code_operation";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивВыбора.Добавить(Выборка.Ссылка);
	КонецЦикла;	
	
	Возврат МассивВыбора;
	
КонецФункции

&НаКлиенте
Процедура ТипОперацииОтборНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	//СтандартнаяОбработка = Ложь;
	Элемент.СписокВыбора.Очистить();
	Элемент.СписокВыбора.ЗагрузитьЗначения(ЗаполнитьСписокОперацийКОтбору());
	
КонецПроцедуры

&НаСервере
Процедура ПеречитатьДокументы()
	
	ТекНомерСтраницы = 1;
	ТабДокументы.Очистить();
	СтраницыБылиЗагрузки.Очистить();
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТипыОпераций.code_operation,
	               |	ТипыОпераций.name_operation,
	               |	ТипыОпераций.Ссылка,
	               |	ТипыОпераций.Наименование,
	               |	ТипыОпераций.field_operation
	               |ИЗ
	               |	Справочник.ТипыОперацийМагазина КАК ТипыОпераций
	               |ГДЕ
	               |	ТипыОпераций.table_operation = &table_operation
	               |	И ТипыОпераций.is_photo = 1
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СтруктурныеЕдиницы.Ссылка,
	               |	СтруктурныеЕдиницы.НомерТочки,
	               |	СтруктурныеЕдиницы.Наименование
	               |ИЗ
	               |	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	               |ГДЕ
	               |	СтруктурныеЕдиницы.НомерТочки > 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Номенклатура.Ссылка,
	               |	Номенклатура.id_tov,
	               |	Номенклатура.Наименование
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПричиныСписания.ИД,
	               |	ПричиныСписания.Наименование
	               |ИЗ
	               |	Справочник.ПричиныСписания КАК ПричиныСписания";
				   
	Запрос.УстановитьПараметр("table_operation", "td_move");
	
	Результаты = Запрос.ВыполнитьПакет();
	ТабКеш = Результаты[0].Выгрузить();
	ТабМагазины = Результаты[1].Выгрузить();
	ТабМагазины.Индексы.Добавить("НомерТочки");
	ТабТовары = Результаты[2].Выгрузить();
	ТабТовары.Индексы.Добавить("id_tov");
	
	id_tov_отбор = ТоварОтбор.id_tov;
	
	ТабПричиныСписания = Результаты[3].Выгрузить();
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	
	ТекстЗапросаSQL = "SELECT DISTINCT [Id_doc] as id
						|INTO #Docs
						|  FROM [SMS_REPL].[dbo].[TD_move] (nolock)
						|  WHERE ";
			Если ЗначениеЗаполнено(ДокументОтбор) Тогда
				ТекстЗапросаSQL = ТекстЗапросаSQL + " Id_doc = " + ВнешниеДанные.ФорматПоля(ДокументОтбор);
			Иначе
				ТекстЗапросаSQL = ТекстЗапросаSQL + " [opendate] >= " + ВнешниеДанные.ФорматПоля(СДаты) + " and [opendate] <= " + ВнешниеДанные.ФорматПоля(КонецДня(ПоДату));
			КонецЕсли;				
						ТекстЗапросаSQL = ТекстЗапросаSQL + "
						|	and CASE WHEN [operation_type] < 0 THEN [operation_type] * (-1) ELSE [operation_type] END IN (Select TOper.code_operation FROM [SMS_REPL].[dbo].[Types_Operation] as TOper (nolock) WHERE Toper.table_operation = 'td_move' and Toper.field_operation = 'operation_type_orig' and TOper.is_photo = 1
						|																" + ?(ЗначениеЗаполнено(ТипОперацииОтбор), " and TOper.code_operation = " + ВнешниеДанные.ФорматПоля(ТипОперацииОтбор.code_operation), "") + ")
						|" + ?(ЗначениеЗаполнено(Магазин), "and ShopNo_rep = " + ВнешниеДанные.ФорматПоля(Магазин.НомерТочки), "") + "
						|" + ?(ЗначениеЗаполнено(ТоварОтбор), "and id_tov = " + ВнешниеДанные.ФорматПоля(ТоварОтбор.id_tov), "") + "
						|SELECT DISTINCT LOWER(CAST(TD.Id_doc as nvarchar(36))) as id, LOWER(CAST(TD.tduid as nvarchar(36))) as tduid
						|	  ,CASE WHEN TD.closedate < '2001-01-01T00:00:00' THEN TD.opendate ELSE TD.closedate END as date
						|	  ,CASE WHEN TD.operation_type < 0 THEN TD.operation_type * (-1) ELSE TD.operation_type END as optype
						|	  ,TD.Descr
						|	  ,TD.id_tov
						|	  ,TD.ShopNo_rep
						|	  ,TD.id_reason
						|	  
						|  FROM [SMS_REPL].[dbo].[TD_move] TD (nolock)
						|  INNER JOIN (SELECT TD.tduid
						|					FROM [SMS_REPL].[dbo].[TD_move] TD (nolock)
						|					INNER JOIN IzbenkaFin.dbo._InfoRg7128 as PrFiles (nolock)
						|					ON CAST(TD.tduid as nvarchar(36)) = PrFiles._Fld7129
						|					WHERE [Id_doc] IN (SELECT #Docs.id FROM #Docs)
						|						and (" + ВнешниеДанные.ФорматПоля(СтатусКартинкиОтбор) + " = 0 or PrFiles._Fld7131 = " + ВнешниеДанные.ФорматПоля(СтатусКартинкиОтбор) + ")
						|					) as VZ
						|	ON TD.tduid = VZ.tduid
						|  WHERE TD.Id_doc IN (SELECT #Docs.id FROM #Docs) and operation_type > 0 "+?(ЗначениеЗаполнено(id_tov_отбор), " and id_tov = "+ВнешниеДанные.ФорматПоля(ТоварОтбор.id_tov),"")+"
						|order by date desc";
					
	
	rs = ADOСоединение.Execute(ТекстЗапросаSQL);
	
	Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
		rs=rs.NextRecordSet();
	КонецЦикла;
	
	//id_tov_отбор = ТоварОтбор.id_tov;
	Счетчик = 1;
	ВсегоСтраниц = 0;
	Попытка
		rs.MoveFirst();
		Пока НЕ rs.Eof() Цикл
			//Сообщить(Выборка.Confirm_type);
			//Если ЗначениеЗаполнено(id_tov_отбор) Тогда
			//	Если id_tov_отбор <> rs.Fields("id_tov").Value Тогда
			//		Продолжить;
			//	КонецЕсли;	
			//КонецЕсли;	
			НовСтр = ТабДокументы.Добавить();
			НовСтр.УинДокумента = rs.Fields("id").Value;
			НовСтр.УинСтроки = rs.Fields("tduid").Value;
			НовСтр.ДатаДокумента = rs.Fields("date").Value;
			НовСтр.Комментарий = rs.Fields("Descr").Value;
			КодОперации = rs.Fields("optype").Value;
			СтрокиИзКеша = ТабКеш.НайтиСтроки(Новый Структура("field_operation, code_operation", "operation_type_orig", КодОперации));
			Если СтрокиИзКеша.Количество() > 0 Тогда
				НовСтр.ТипОперации = СтрокиИзКеша[0].Ссылка;
			Иначе
				НовСтр.operation_type = КодОперации;
			КонецЕсли;
			НомерМагазина = rs.Fields("ShopNo_rep").Value;
			СтрокаИзКеша = ТабМагазины.Найти(НомерМагазина, "НомерТочки");
			Если СтрокаИзКеша <> Неопределено Тогда
				НовСтр.Магазин = СтрокаИзКеша.Ссылка;
				НовСтр.МагазинНаименование = СтрокаИзКеша.Наименование;
			КонецЕсли;
			
			АйдиПричины = rs.Fields("id_reason").Value;
			СтрокаИзКеша = ТабПричиныСписания.Найти(АйдиПричины, "ИД");
			Если СтрокаИзКеша <> Неопределено Тогда
				НовСтр.ПричинаСписания = СокрЛП(СтрокаИзКеша.Наименование);
			КонецЕсли;
			
			СтрокаИзКеша = ТабТовары.Найти(rs.Fields("id_tov").Value, "id_tov");
			Если СтрокаИзКеша <> Неопределено Тогда
				НовСтр.Товар = СтрокаИзКеша.Ссылка;
				НовСтр.ТоварНаименование = СтрокаИзКеша.Наименование;
			КонецЕсли;
			
			НомерСтраницы = Цел(Счетчик / ВыводитьНаСтраницеШтук);
			Если ВыводитьНаСтраницеШтук * НомерСтраницы <> Счетчик Тогда
				НомерСтраницы = НомерСтраницы + 1;
			КонецЕсли;	
			Счетчик = Счетчик + 1;
			НовСтр.НомерСтраницы = НомерСтраницы;
			ВсегоСтраниц = Макс(ВсегоСтраниц, НовСтр.НомерСтраницы);
			rs.MoveNext();
		КонецЦикла;
		
	Исключение
	КонецПопытки;
	
	ADOСоединение.Close();
	
	//Запрос = Новый Запрос();
	//Запрос.Текст = "ВЫБРАТЬ Таб.УинСтроки ПОМЕСТИТЬ ВТ_Уины ИЗ &Таб КАК Таб; ВЫБРАТЬ
	//			   |	ПриложенныеКартинкиКСписаниямМагазины.УинКартинки,
	//			   |	ПриложенныеКартинкиКСписаниямМагазины.УинСтроки
	//			   |ИЗ
	//			   |	РегистрСведений.ПриложенныеКартинкиКСписаниямМагазины КАК ПриложенныеКартинкиКСписаниямМагазины
	//			   |ГДЕ
	//			   |	ПриложенныеКартинкиКСписаниямМагазины.УинСтроки = &УинСтроки"
	
КонецПроцедуры	

&НаКлиенте
Процедура Обновить(Команда)
	
	ПеречитатьДокументы();
	СформироватьТекстHTML();
	ЭтаФорма.ТекущийЭлемент = Элементы.ДокументHTML;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьСтруктуруПоКартинкам()
	
	МассивКВозврату = Новый Массив();
	
	СтраницаУжеОткрывалась = СтраницыБылиЗагрузки.НайтиСтроки(Новый Структура("НомерСтраницы", ТекНомерСтраницы)).Количество() > 0;
	
	ТабЗаписиПоТоварам.Очистить();
	ТабКомментарии.Очистить();
	МассивУиныСтрок = Новый Массив();
	СтрокиПоСтранице = ТабДокументы.НайтиСтроки(Новый Структура("НомерСтраницы", ТекНомерСтраницы));
	Для Каждого СтрокаПоСтранице Из СтрокиПоСтранице Цикл
		МассивУиныСтрок.Добавить(СтрокаПоСтранице.УинСтроки);
	КонецЦикла;	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("УиныСтроки", МассивУиныСтрок);
	Запрос.УстановитьПараметр("СтатусОтбор",ЭтаФорма.СтатусКартинкиОтбор);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПриложенныеКартинкиКСписаниямМагазины.УинКартинки,
	               |	ПриложенныеКартинкиКСписаниямМагазины.СтатусКартинки,
	               |	ПриложенныеКартинкиКСписаниямМагазины.Расширение,
	               |	ПриложенныеКартинкиКСписаниямМагазины.ДатаДобавленияЗаписи КАК ДатаДобавленияЗаписи,
	               |	ПриложенныеКартинкиКСписаниямМагазины.УинСтроки КАК УинСтроки
	               |ИЗ
	               |	РегистрСведений.ПриложенныеКартинкиКСписаниямМагазины КАК ПриложенныеКартинкиКСписаниямМагазины
	               |ГДЕ
	               |	ПриложенныеКартинкиКСписаниямМагазины.УинСтроки В(&УиныСтроки)
	               |	И ВЫБОР
	               |			КОГДА &СтатусОтбор = 0
	               |				ТОГДА ИСТИНА
	               |			ИНАЧЕ ПриложенныеКартинкиКСписаниямМагазины.СтатусКартинки = &СтатусОтбор
	               |		КОНЕЦ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	УинСтроки,
	               |	ДатаДобавленияЗаписи УБЫВ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПриложенныеКартинкиКСписаниямКомментарии.УинКартинки,
	               |	ПриложенныеКартинкиКСписаниямКомментарии.ДатаКомментария КАК ДатаКомментария,
	               |	ПРЕДСТАВЛЕНИЕ(ПриложенныеКартинкиКСписаниямКомментарии.Пользователь) КАК Пользователь,
	               |	ПриложенныеКартинкиКСписаниямКомментарии.Комментарий
	               |ИЗ
	               |	РегистрСведений.ПриложенныеКартинкиКСписаниямКомментарии КАК ПриложенныеКартинкиКСписаниямКомментарии
	               |ГДЕ
	               |	ПриложенныеКартинкиКСписаниямКомментарии.УинКартинки В
	               |			(ВЫБРАТЬ
	               |				ПриложенныеКартинкиКСписаниямМагазины.УинКартинки
	               |			ИЗ
	               |				РегистрСведений.ПриложенныеКартинкиКСписаниямМагазины КАК ПриложенныеКартинкиКСписаниямМагазины
	               |			ГДЕ
	               |				ПриложенныеКартинкиКСписаниямМагазины.УинСтроки В (&УиныСтроки)
	               |				И ВЫБОР
	               |					КОГДА &СтатусОтбор = 0
	               |						ТОГДА ИСТИНА
	               |					ИНАЧЕ ПриложенныеКартинкиКСписаниямМагазины.СтатусКартинки = &СтатусОтбор
	               |				КОНЕЦ)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаКомментария УБЫВ";
				   
	Результаты = Запрос.ВыполнитьПакет();
	Выборка = Результаты[0].Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("УинСтроки") Цикл
		ПервыйПроходПоУин = Истина;
		Пока Выборка.Следующий() Цикл
			СтрокаДоб = ТабЗаписиПоТоварам.Добавить();
			СтрокаДоб.УинСтроки = Выборка.УинСтроки;
			СтрокаДоб.УинКартинки = Выборка.УинКартинки;
			СтрокаДоб.ДатаДобавленияЗаписи = Выборка.ДатаДобавленияЗаписи;
			СтрокаДоб.СтатусФото = Выборка.СтатусКартинки;
			СтрокаДоб.Расширение = Выборка.Расширение;
			СтрокаДоб.ТолькоМиниатюра = НЕ ПервыйПроходПоУин;
			ПервыйПроходПоУин = Ложь;
			Если Не СтраницаУжеОткрывалась Тогда
				ПолноеИмяФайла = "";
				Если Не ПервыйПроходПоУин Тогда
					ПолноеИмяФайла = КонстантаКаталогФайлов + Формат(Выборка.ДатаДобавленияЗаписи, "ДФ=yyyyMM") + "\" + Выборка.УинКартинки + "thumb." + Выборка.Расширение;
					ФайлМиниатюра = Новый Файл(ПолноеИмяФайла);
					Если НЕ ФайлМиниатюра.Существует() Тогда
						ПолноеИмяФайла = КонстантаКаталогФайлов + Формат(Выборка.ДатаДобавленияЗаписи, "ДФ=yyyyMM") + "\" + Выборка.УинКартинки + "." + Выборка.Расширение;
						СтрокаДоб.ТолькоМиниатюра = Ложь;
					КонецЕсли;	
				Иначе
					ПолноеИмяФайла = КонстантаКаталогФайлов + Формат(Выборка.ДатаДобавленияЗаписи, "ДФ=yyyyMM") + "\" + Выборка.УинКартинки + "." + Выборка.Расширение;
				КонецЕсли;
				ФайлКартинки = Новый Файл(ПолноеИмяФайла);
				Если ФайлКартинки.Существует()
					И ФайлКартинки.Размер() > 0 Тогда
					МассивКВозврату.Добавить(Новый Структура("АдресКартинки, Расширение, УинКартинки, ТолькоМиниатюра"
								, ПоместитьВоВременноеХранилище(Новый Картинка(ПолноеИмяФайла))
								, Выборка.Расширение
								, Выборка.УинКартинки
								, СтрокаДоб.ТолькоМиниатюра));
				КонецЕсли;	
			КонецЕсли;	
		КонецЦикла;	
	КонецЦикла;
	
	Выборка = Результаты[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДоб = ТабКомментарии.Добавить();
		СтрокаДоб.УинКартинки = Выборка.УинКартинки;
		СтрокаДоб.ДатаКомментария = Выборка.ДатаКомментария;
		СтрокаДоб.Пользователь = Выборка.Пользователь;
		СтрокаДоб.Комментарий = Выборка.Комментарий;
	КонецЦикла;
	
	СтрокаДоб = СтраницыБылиЗагрузки.Добавить();
	СтрокаДоб.НомерСтраницы = ТекНомерСтраницы;
	
	Возврат МассивКВозврату;	
	
КонецФункции

&НаКлиенте
Функция СформироватьТэгиПоТовару(СтрокаДокумент, ТекущаяКартинка = "")
	
	ТекстВозврата = "";
	
	СтильСтатуса = "style = ""font-size:18; font-weight: bold; color: #3232FF""";
	ТекстВозврата = ТекстВозврата + "
	|	<tr>
	|		<td valign=""top"">
	|		<table><tr><td>
	|		<span style = ""font-size:18; font-weight: bold; color: #9696FF"">Магазин: " + СтрокаДокумент.МагазинНаименование + " Товар: " + СтрокаДокумент.ТоварНаименование + " Дата операции: " + Формат(СтрокаДокумент.ДатаДокумента, "ДФ='dd.MM.yy HH:mm'") + " Операция: " + СтрокаДокумент.ТипОперации + "</span>
	|		</td></tr><tr><td>
	|		<span style = ""font-size:18; font-weight: bold; color: #9696FF"">Причина списания: " + СтрокаДокумент.ПричинаСписания + " Комментарий: " + СокрЛП(СтрокаДокумент.Комментарий) + "</span><span><br></span>
	|		</td></tr></table>
	|<table border=""0"" cellpadding=""0"" cellspacing=""0"" width=""100%"">
	|<tr>		";
	
	СтрокиСтруктуры = ТабЗаписиПоТоварам.НайтиСтроки(Новый Структура("УинСтроки", СтрокаДокумент.УинСтроки));
	
	КолвоСтрок = СтрокиСтруктуры.Количество();
	Если КолвоСтрок > 0 Тогда
		Если ЗначениеЗаполнено(ТекущаяКартинка) Тогда
			Для Каждого ЭлементСтруктуры Из СтрокиСтруктуры Цикл
				Если ЭлементСтруктуры.УинКартинки = ТекущаяКартинка Тогда
					ТекКартинкаСтруктура = ЭлементСтруктуры;
					Прервать;
				КонецЕсли;	
			КонецЦикла;	
		Иначе	
			ТекКартинкаСтруктура = СтрокиСтруктуры[0];
		КонецЕсли;	
		Файл = Новый Файл(ВременныйКаталог + "\" + ТекКартинкаСтруктура.УинКартинки + "." + ТекКартинкаСтруктура.Расширение);
		Если Файл.Существует()
			И ЗначениеЗаполнено(ТекКартинкаСтруктура.УинКартинки) Тогда
			ТекстВозврата = ТекстВозврата + "
			|<tr>
			|<td width = ""20%"" align=""right"">
			|
			|<table id=""PhotoOpeartions" + ТекКартинкаСтруктура.УинКартинки + "_PhOp" + ТекКартинкаСтруктура.УинСтроки + """>
			|<tr>
			|<td  align=""right"">
			|<img name=ShowBt alt=""Показать изображение"" width=16 height=16 style = ""cursor: pointer"" id = """ + ТекКартинкаСтруктура.УинКартинки + "_" + ТекКартинкаСтруктура.УинСтроки + """ src = ""file:///" + СтрЗаменить(ВременныйКаталог + "\Show.png", "\", "/") + """>
			|<img name=SaveBt alt=""Сохранить как"" width=16 height=16 style = ""cursor: pointer"" id = """ + ТекКартинкаСтруктура.УинКартинки + "_" + ТекКартинкаСтруктура.УинСтроки + """ src = ""file:///" + СтрЗаменить(ВременныйКаталог + "\SaveAs.png", "\", "/") + """>
			|<img name=RotateBt alt=""Перевернуть изображение"" width=16 height=16 style = ""cursor: pointer"" id = """ + ТекКартинкаСтруктура.УинКартинки + "_" + ТекКартинкаСтруктура.УинСтроки + """ src = ""file:///" + СтрЗаменить(ВременныйКаталог + "\Rotate.png", "\", "/") + """>
			|<img name=TrimBt alt=""Вырезать картинку в сообщение магазину"" width=16 height=16 style = ""cursor: pointer"" id = """ + ТекКартинкаСтруктура.УинКартинки + "_" + ТекКартинкаСтруктура.УинСтроки + """ src = ""file:///" + СтрЗаменить(ВременныйКаталог + "\Trim.png", "\", "/") + """>
			|</td>
			|</tr>
			|</table>
			|
			|</td>
			|<td valign=""top"" align = ""center"" width=" + Формат(Цел(600 * МасштабФото/100), "ЧГ=0") + ">
			|<p></p>
			|		<img class=""cloudzoom"" name=""picture"" width=" + Формат(Цел(600 * МасштабФото/100), "ЧГ=0") + " height=" + Формат(Цел(600 * МасштабФото/100), "ЧГ=0") + " style = ""cursor: pointer"" id = """ + ТекКартинкаСтруктура.УинКартинки + "_" + ТекКартинкаСтруктура.УинСтроки + """ src = ""file:///" + СтрЗаменить(ВременныйКаталог + "\" + ТекКартинкаСтруктура.УинКартинки + "." + ТекКартинкаСтруктура.Расширение, "\", "/") + """>
			|</td>
			|<td width = ""40%"" valign=""top"">
			|<table width = ""100%"">
			|<tr>
			|<td width=15></td>
			|<td><span style = ""color: #2D84C4"">&nbsp;&nbsp;Комментарий&nbsp;&nbsp;</span><a name=""AddKomment"" href = """" id=""" + ТекКартинкаСтруктура.УинКартинки + "_" + ТекКартинкаСтруктура.УинСтроки + """>Добавить</a></td>
			|<td width=15></td>
			|</tr>
			|<tr>
			|<td width=15></td>
			|<td>
			|" + СформироватьТэгКомментария(ТекКартинкаСтруктура.УинКартинки) + "</td>
			|</td>
			|<td width=15></td>
			|</tr>
			|</table>
			|
			|</td>
			|</tr>";
		Иначе
			ТекстВозврата = ТекстВозврата + "
			|<tr>
			|<td width = ""20%""></td>
			|<td valign=""center"" align = ""center"" height = 150 style = ""font-size:24; font-weight: bold; color: #AAAAAA"">
			|Нет фото
			|</td>
			|<td width = ""40%""></td>
			|</tr>";
		КонецЕсли;
		
		Если Файл.Существует() Тогда
			
			Если ТекКартинкаСтруктура.СтатусФото = 1 Тогда
				ТекСтатус = "Не обработано";
				СтильСтатуса = "style = ""font-size:14; font-weight: bold; color: #3232FF""";
			ИначеЕсли ТекКартинкаСтруктура.СтатусФото = 2 Тогда
				ТекСтатус = "Не принято";
				СтильСтатуса = "style = ""font-size:14; font-weight: bold; color: #FF3232""";
			ИначеЕсли ТекКартинкаСтруктура.СтатусФото = 3 Тогда
				ТекСтатус = "Принято";
				СтильСтатуса = "style = ""font-size:14; font-weight: bold; color: #00BE00""";
			КонецЕсли;
			
			ТекстВозврата = ТекстВозврата + "
			|<tr>
			|<td width = ""20%"">
			|
			|</td>
			|<td valign=""center"" align = ""left"">
			|<span><span id = ""CurrentPhotoState" + ТекКартинкаСтруктура.УинКартинки + "_" + ТекКартинкаСтруктура.УинСтроки + """ " + СтильСтатуса + ">Текущий статус фото: " + ТекСтатус + "</span></span>";
			Если МожетМенятьСтатус Тогда	
				ТекстВозврата = ТекстВозврата + "
				|<span style = ""font-size:12; color: #2D84C4"">Установить:</span>&nbsp;&nbsp;<a name = ""SetPhotoStatus3"" id = """ + ТекКартинкаСтруктура.УинКартинки + "_" + ТекКартинкаСтруктура.УинСтроки + """ style = ""font-size:12; color: #00BE00"" href = """">Принято</a>&nbsp;&nbsp;<a name = ""SetPhotoStatus2"" id = """ + ТекКартинкаСтруктура.УинКартинки + "_" + ТекКартинкаСтруктура.УинСтроки + """ style = ""font-size:12; color: #FF3232"" href = """">Не принято</a></span>";
			КонецЕсли;	
			ТекстВозврата = ТекстВозврата + "
			|</td>
			|<td width = ""40%""></td>
			|</tr>";
		КонецЕсли;	
		
		Если КолвоСтрок > 1 Тогда
			ТекстВозврата = ТекстВозврата + "
			|<tr>
			|<td width = ""20%""> </td>
			|<td align = ""left"">
			|<table name = ""PictView>"">
			|
			|<tr>
			|<td>
			|<table id=""" + СтрокиСтруктуры[0].УинКартинки + "_T" + СтрокиСтруктуры[0].УинСтроки + """ border=""2"" cellpadding=""0"" bordercolor=" + ?(СтрокиСтруктуры[0].УинКартинки = ТекКартинкаСтруктура.УинКартинки, "#aaaa00", "#ffffff") + " cellspacing=""0""><tr><td><img name=""smallpicture"" width=40 height=40 style = ""cursor: pointer"" id = """ + СтрокиСтруктуры[0].УинКартинки + "_" + СтрокиСтруктуры[0].УинСтроки + """ src = ""file:///" + СтрЗаменить(ВременныйКаталог + "\" + СтрокиСтруктуры[0].УинКартинки + ?(СтрокиСтруктуры[0].ТолькоМиниатюра, "thumb", "") + "." + СтрокиСтруктуры[0].Расширение, "\", "/") + """></td></tr></table></td>";
			Для н = 1 По КолвоСтрок - 1 Цикл
				ЭлементСтруктуры = СтрокиСтруктуры[н];
				ТекстВозврата = ТекстВозврата + "
				|<td><table id=""" + ЭлементСтруктуры.УинКартинки + "_T" + ЭлементСтруктуры.УинСтроки + """ border=""2"" cellpadding=""0"" bordercolor=" + ?(ЭлементСтруктуры.УинКартинки = ТекКартинкаСтруктура.УинКартинки, "#aaaa00", "#ffffff") + " cellspacing=""0""><tr><td><img name=""smallpicture"" width = 40 height=40 style = ""cursor: pointer"" id = """ + ЭлементСтруктуры.УинКартинки + "_" + ЭлементСтруктуры.УинСтроки + """ src = ""file:///" + СтрЗаменить(ВременныйКаталог + "\" + ЭлементСтруктуры.УинКартинки + ?(ЭлементСтруктуры.ТолькоМиниатюра, "thumb", "") + "." + ЭлементСтруктуры.Расширение, "\", "/") + """></td></tr></table></td>";
			КонецЦикла;		
			
			ТекстВозврата = ТекстВозврата + "
			|</tr>
			|
			|</table>
			|</td>
			|<td width = ""40%""> </td>
			|</tr>";
			
			//пиктограммы к фото
			Если СтрокиСтруктуры[0].СтатусФото = 3 Тогда
				СтатусИмя = "Accepted";
			ИначеЕсли СтрокиСтруктуры[0].СтатусФото = 2 Тогда
				СтатусИмя = "Canceled";
			ИначеЕсли СтрокиСтруктуры[0].СтатусФото = 1 Тогда
				СтатусИмя = "Unknown";	
			КонецЕсли;	
			ТекстВозврата = ТекстВозврата + "
			|<tr>
			|<td width = ""20%""> </td>
			|<td align = ""left"">
			|<table name = ""StatusPictView>"">
			|
			|<tr>
			|<td>
			|<table cellpadding=""0"" cellspacing=""0""><tr><td width=2 height=16></td><td width=45 height=16 valign=""center"" align=""center""><img name=""statuspicture"" width=16 height=16 src = ""file:///" + СтрЗаменить(ВременныйКаталог + "\" + СтатусИмя + ".png", "\", "/") + """></td></tr></table></td>";
			Для н = 1 По КолвоСтрок - 1 Цикл
				ЭлементСтруктуры = СтрокиСтруктуры[н];
				Если ЭлементСтруктуры.СтатусФото = 3 Тогда
					СтатусИмя = "Accepted";
				ИначеЕсли ЭлементСтруктуры.СтатусФото = 2 Тогда
					СтатусИмя = "Canceled";
				ИначеЕсли ЭлементСтруктуры.СтатусФото = 1 Тогда
					СтатусИмя = "Unknown";	
				КонецЕсли;
				ТекстВозврата = ТекстВозврата + "
				|<td><table cellpadding=""0"" cellspacing=""0""><tr><td width=45 height=16 valign=""center"" align=""center""><img name=""statuspicture"" width=16 height=16 src = ""file:///" + СтрЗаменить(ВременныйКаталог + "\" + СтатусИмя + ".png", "\", "/") + """></td></tr></table></td>";
			КонецЦикла;		
			
			ТекстВозврата = ТекстВозврата + "
			|</tr>
			|
			|</table>
			|</td>
			|<td width = ""40%""> </td>
			|</tr>";
		КонецЕсли;
		
	КонецЕсли;		
	
	
	ТекстВозврата = ТекстВозврата + "			
	|	</tr></table></td></tr>";
	
	Возврат ТекстВозврата;
	
КонецФункции	

&НаКлиенте
Функция СформироватьТэгКомментария(УинКартинки)
	
	СтрокаВозврат = "";
	
	СтрокиКомменты = ТабКомментарии.НайтиСтроки(Новый Структура("УинКартинки", УинКартинки));
	Если СтрокиКомменты.Количество() = 0 Тогда
		СтрокаВозврат = "<div name=""Komment"" style = ""cursor: pointer; background: #eeeee5; border: 1px dashed #abab9a; padding: 5px;	font: 8pt Tahoma; color:#2c2c2c"" id=""SpanKomment" + УинКартинки + """><br><br></div>";
	Иначе
		Для Каждого СтрокаКоммент Из СтрокиКомменты Цикл
			Комментарий = СтрЗаменить(СтрокаКоммент.Комментарий, Символы.ПС, "<br>");
			СтрокаВозврат = СтрокаВозврат + ?(ЗначениеЗаполнено(СтрокаВозврат), "<br>", "")
				+ "<div name=""Komment"" style = ""cursor: pointer; background: #eeeee5; border: 1px dashed #abab9a; padding: 5px;	font: 8pt Tahoma; color:#2c2c2c"" id=""SpanKomment" + УинКартинки + """>" + СтрокаКоммент.Пользователь + " " + Формат(СтрокаКоммент.ДатаКомментария, "ДФ='dd.MM.yy HH:mm'") + "
				|<br>" + Комментарий + "</div>";
		КонецЦикла;	
	КонецЕсли;	
	
	Возврат СтрокаВозврат;
	
КонецФункции	

&НаКлиенте
Процедура СформироватьТекстHTML()
	
	Если НЕ ЗначениеЗаполнено(ТекНомерСтраницы) Тогда
		ТекНомерСтраницы = 1;
	КонецЕсли;	
	
	ПолныйТекстHTML = "<html>
	|<body>";
	
	МассивФайловКЗаписи = ЗаполнитьСтруктуруПоКартинкам();

	Для Каждого ЭлементСтруктуры Из МассивФайловКЗаписи Цикл
		Если ЗначениеЗаполнено(ЭлементСтруктуры.АдресКартинки) Тогда
			Картинка = ПолучитьИзВременногоХранилища(ЭлементСтруктуры.АдресКартинки);
			УдалитьИзВременногоХранилища(ЭлементСтруктуры.АдресКартинки);
			Картинка.Записать(ВременныйКаталог + "\" + ЭлементСтруктуры.УинКартинки + ?(ЭлементСтруктуры.ТолькоМиниатюра, "thumb", "") + "." + ЭлементСтруктуры.Расширение);
		КонецЕсли;
	КонецЦикла;	
	
	СтрокиПоДокументам = ТабДокументы.НайтиСтроки(Новый Структура("НомерСтраницы", ТекНомерСтраницы));
	Для Каждого СтрокаДокумент Из СтрокиПоДокументам Цикл
		ПолныйТекстHTML = ПолныйТекстHTML + "
			|<span><table id = ""Row" + СтрокаДокумент.УинСтроки + """ border=""1"" cellpadding=""0"" bordercolor=#9696FF cellspacing=""0"" width=""100%"">"
				+ СформироватьТэгиПоТовару(СтрокаДокумент)
				+ "</table></span><p></p>";
	КонецЦикла;	
	
	//блок страниц
	Если ВсегоСтраниц > 0 Тогда
		ПолныйТекстHTML = ПолныйТекстHTML + "
			|<span><table id = ""Pages"" border=""1"" cellpadding=""0"" bordercolor=#FFFFFF cellspacing=""0"" width=""100%"">
			|<tr><td>Страницы:&nbsp;&nbsp;";
		СтраницаНач = Макс(1, ТекНомерСтраницы - 3);
		СтраницаКон = Мин(ВсегоСтраниц, СтраницаНач + 14);
		Если СтраницаКон = ВсегоСтраниц Тогда
			СтраницаНач = Макс(1, ВсегоСтраниц - 14);
		КонецЕсли;	
		Если СтраницаНач > 1 Тогда
			ПолныйТекстHTML = ПолныйТекстHTML + "
			|<a name = ""SetPage"" id = ""1"" style = ""font-size:16; color: #00BE00"" href = """">1</a>&nbsp;&nbsp;...";
		КонецЕсли;
		Для н = СтраницаНач По СтраницаКон Цикл
			Если ТекНомерСтраницы = н Тогда
				ПолныйТекстHTML = ПолныйТекстHTML + "
				|<span style = ""font-size:16; color: #00BEFF"">" + Формат(н, "ЧГ=0") + "</span>&nbsp;&nbsp;";
			Иначе	
				ПолныйТекстHTML = ПолныйТекстHTML + "
				|<a name = ""SetPage"" id = """ + Формат(н, "ЧГ=0") + """ style = ""font-size:16; color: #00BE00"" href = """">" + Формат(н, "ЧГ=0") + "</a>&nbsp;&nbsp;";
			КонецЕсли;	
		КонецЦикла;	
		Если СтраницаКон < ВсегоСтраниц Тогда
			ПолныйТекстHTML = ПолныйТекстHTML + "
			|...<a name = ""SetPage"" id = """ + Формат(ВсегоСтраниц, "ЧГ=0") + """ style = ""font-size:16; color: #00BE00"" href = """">" + Формат(ВсегоСтраниц, "ЧГ=0") + "</a>&nbsp;&nbsp;";
		КонецЕсли;
		
		ПолныйТекстHTML = ПолныйТекстHTML + "
			|<a name = ""SetPage"" id = """ + Формат(Макс(1, ТекНомерСтраницы - 1), "ЧГ=0") + """ style = ""font-size:16; color: #00BE00"" href = """">Предыдущая</a>&nbsp;&nbsp;...";
			
		ПолныйТекстHTML = ПолныйТекстHTML + "
			|<a name = ""SetPage"" id = """ + Формат(Мин(ВсегоСтраниц, ТекНомерСтраницы + 1), "ЧГ=0") + """ style = ""font-size:16; color: #00BE00"" href = """">Следующая</a>&nbsp;&nbsp;...";
		
		ПолныйТекстHTML = ПолныйТекстHTML + "		
				|</td></tr></table></span>";
	КонецЕсли;	
	
	ПолныйТекстHTML = ПолныйТекстHTML + "</body>
	|</html>";
	
	ДокументHTML = ПолныйТекстHTML;
	//Элементы.ДокументHTML.Document.body.innerHTML = ПолныйТекстHTML;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВременныйКаталог = КаталогВременныхФайлов() + Строка(Новый УникальныйИдентификатор());
	УдалитьФайлы(ВременныйКаталог);
	СоздатьКаталог(ВременныйКаталог);
	
	БиблиотекаКартинок.ПоказатьДанные.Записать(ВременныйКаталог + "\Show.png");
	БиблиотекаКартинок.ЗаписатьИЗакрыть.Записать(ВременныйКаталог + "\Accepted.png");
	БиблиотекаКартинок.Удалить.Записать(ВременныйКаталог + "\Canceled.png");
	БиблиотекаКартинок.Выбрать.Записать(ВременныйКаталог + "\Unknown.png");
	БиблиотекаКартинок.Записать.Записать(ВременныйКаталог + "\SaveAs.png");
	БиблиотекаКартинок.Сортировка.Записать(ВременныйКаталог + "\Rotate.png");
	БиблиотекаКартинок.ПрочитатьИзменения.Записать(ВременныйКаталог + "\Trim.png");
	
КонецПроцедуры

Процедура ПриЗакрытииНаСервере()
	
	ХранилищеСистемныхНастроек.Сохранить("Общее/МасштабФотоРакурсов", "", МасштабФото);
	ХранилищеСистемныхНастроек.Сохранить("Общее/ВыводитьНаСтраницеШтук", "", ВыводитьНаСтраницеШтук);
	
КонецПроцедуры	

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если ЗначениеЗаполнено(ВременныйКаталог) Тогда
		УдалитьФайлы(ВременныйКаталог);
	КонецЕсли;
	
	ПриЗакрытииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереформироватьСОттяжкой()
	
	СформироватьТекстHTML();
	
КонецПроцедуры	

Функция СкачатьПолнуюКартинкуССервера(УинФото)
	
	СтрокиТабСтруктура = ТабЗаписиПоТоварам.НайтиСтроки(Новый Структура("УинКартинки", УинФото));
	Если СтрокиТабСтруктура.Количество() > 0 Тогда
		СтрокиТабСтруктура[0].ТолькоМиниатюра = Ложь;
	КонецЕсли;
	
	ПолноеИмяФайла = КонстантаКаталогФайлов + Формат(СтрокиТабСтруктура[0].ДатаДобавленияЗаписи, "ДФ=yyyyMM") + "\" + УинФото + "." + СтрокиТабСтруктура[0].Расширение;
	
	Возврат Новый Структура("Расширение, Картинка", СтрокиТабСтруктура[0].Расширение, Новый Картинка(ПолноеИмяФайла));
	
КонецФункции

&НаСервере
Процедура ЗаписатьПеревернутоеИзображениеНаСервер(УинФото, АдресХранилища)
	
	СтрокиФайла = ТабЗаписиПоТоварам.НайтиСтроки(Новый Структура("УинКартинки", УинФото));
	
	ПолноеИмяФайла = КонстантаКаталогФайлов + Формат(СтрокиФайла[0].ДатаДобавленияЗаписи, "ДФ=yyyyMM") + "\" + СтрокиФайла[0].УинКартинки + "." + СтрокиФайла[0].Расширение;
	Файл = Новый Файл(ПолноеИмяФайла);
	РасширениеФайла = Сред(Файл.Расширение, 2);
	ИмяФайлаМиниатюра = Файл.Путь + Файл.ИмяБезРасширения + "thumb." + РасширениеФайла;
	УдалитьФайлы(ИмяФайлаМиниатюра);
	Картинка = ПолучитьИзВременногоХранилища(АдресХранилища);
	Картинка.Записать(ПолноеИмяФайла);
	УдалитьИзВременногоХранилища(АдресХранилища);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КартинкаВДД(П)
	// Функция принимает изображение в base64 формата BMP.
	ДД = Base64Значение(П); // Получаем двоичные данные.
	мПустаяКартинка = Новый Картинка(ДД, Ложь);  // Создаем картинку
	Возврат мПустаяКартинка; // Поместить ссылку в реквизит формы

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруДляСообщенияМОС(Магазин, Картинка, Коммент)
	
	СтруктураВозврата = Новый Структура();
	СтруктураВозврата.Вставить("Дата", ТекущаяДата());
	СтруктураВозврата.Вставить("ТипСообщения", Перечисления.ТипыСообщенийМОС.ИнформационноеСообщение);
	СтруктураВозврата.Вставить("ВидПолучателей", Перечисления.ВидыПолучателейМОС.СписокМагазинов);
	СтруктураВозврата.Вставить("КодНаправления", 0);
	СтруктураВозврата.Вставить("Отправитель", Справочники.РолиПользователей.Администратор);
	СтруктураВозврата.Вставить("СрокАктуальностиСообщения", 2);
	СтруктураВозврата.Вставить("Тема", "Замечание по фотографии списания");
	СтруктураВозврата.Вставить("Автор", ПараметрыСеанса.ТекущийПользователь);
	СтруктураВозврата.Вставить("СтаршийСмены", МеханизмОбменаСообщениями.ПолучитьСтаршегоТекущейСмены(Магазин));
	ФормДокумент = Новый ФорматированныйДокумент();
	ФормДокумент.Добавить(Коммент, ТипЭлементаФорматированногоДокумента.Текст);
	ФормДокумент.Добавить("", ТипЭлементаФорматированногоДокумента.ПереводСтроки);
	ФормДокумент.Добавить(Картинка, ТипЭлементаФорматированногоДокумента.Картинка);
	//ТекстХтмл = "";
	//ВложенияХтмл = Новый Структура();
	//ФормДокумент.ПолучитьHTML(ТекстХтмл, ВложенияХтмл);
	СтруктураВозврата.Вставить("ФормДокумент", ФормДокумент);
	//СтруктураВозврата.Вставить("ФормДокументВложения", ВложенияХтмл);
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаСервере
Процедура ЗаписатьСтатусВФото(УинФото, Статус)
	
	Набор = РегистрыСведений.ПриложенныеКартинкиКСписаниямМагазины.СоздатьНаборЗаписей();
	Набор.Отбор.УинКартинки.Установить(УинФото);
	Набор.Прочитать();
	БылоИзменение = Ложь;
	Для Каждого СтрокаТаб Из Набор Цикл
		Если СтрокаТаб.СтатусКартинки <> Число(Статус) Тогда
			СтрокаТаб.СтатусКартинки = Число(Статус);
			БылоИзменение = Истина;
		КонецЕсли;	
	КонецЦикла;	
	Если БылоИзменение Тогда
		Набор.Записать();
		Запись = РегистрыСведений.ПриложенныеКартинкиКСписаниямКомментарии.СоздатьМенеджерЗаписи();
		Запись.УинКартинки = УинФото;
		Запись.ДатаКомментария = ТекущаяДата();
		Запись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
		Если Статус = "3" Тогда
			Запись.Комментарий = "Был установлен статус Принято";
		ИначеЕсли Статус = "2" Тогда
			Запись.Комментарий = "Был установлен статус Не принято";
		КонецЕсли;
		Запись.Записать();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Попытка
		Если ДанныеСобытия.Element.name = "picture" Тогда
			Если ЗначениеЗаполнено(ДанныеСобытия.Element.id) Тогда
				id = СтрЗаменить(ДанныеСобытия.Element.id, "_", Символы.ПС);
				СтруктураСобытия = Новый Структура("УинКартинка, УинСтроки", СтрПолучитьСтроку(id, 1), СтрПолучитьСтроку(id, 2));
				
				СтрокиПоРакурсу = ТабЗаписиПоТоварам.НайтиСтроки(Новый Структура("УинСтроки", СтруктураСобытия.УинСтроки));
				СледКартинка = "";
				Для н = 0 По СтрокиПоРакурсу.Количество() - 1 Цикл
					Если СтрокиПоРакурсу[н].УинКартинки = СтруктураСобытия.УинКартинка
						И н < СтрокиПоРакурсу.Количество() - 1 Тогда
						СтрокиТекКартинка = ТекКартинкиТоваров.НайтиСтроки(Новый Структура("УинСтроки", СтруктураСобытия.УинСтроки));
						Если СтрокиТекКартинка.Количество() = 0 Тогда
							СтрокаТекКартинка = ТекКартинкиТоваров.Добавить();
							СтрокаТекКартинка.УинСтроки = СтруктураСобытия.УинСтроки;
						Иначе	
							СтрокаТекКартинка = СтрокиТекКартинка[0];
						КонецЕсли;	
						СтрокаТекКартинка.УинКартинки = СтрокиПоРакурсу[н + 1].УинКартинки;
						
						ФайлыКартинки = НайтиФайлы(ВременныйКаталог, СтрокаТекКартинка.УинКартинки + ".*");
						Если ФайлыКартинки.Количество() = 0 Тогда
							СтрФайл = СкачатьПолнуюКартинкуССервера(СтрокаТекКартинка.УинКартинки);
							СтрФайл.Картинка.Записать(ВременныйКаталог + "\" + СтрокаТекКартинка.УинКартинки + "." + СтрФайл.Расширение);
						КонецЕсли;
					КонецЕсли;	
				КонецЦикла;	
				
				Для Каждого Тэг Из Элементы.ДокументHTML.Документ.getElementsByTagName("table") Цикл
					Если Найти(Тэг.id, "Row" + СтруктураСобытия.УинСтроки) > 0 Тогда
						СтрокиТовара = ТабДокументы.НайтиСтроки(Новый Структура("УинСтроки", СтруктураСобытия.УинСтроки));
						ТекФотоПоРакурсу = ТекКартинкиТоваров.НайтиСтроки(Новый Структура("УинСтроки", СтруктураСобытия.УинСтроки));
						Тэг.parentElement.innerHTML = "<table id = ""Row" + СтруктураСобытия.УинСтроки + """ border=""1"" cellpadding=""0"" bordercolor=#9696FF cellspacing=""0"" width=""100%"">"
						+ СформироватьТэгиПоТовару(СтрокиТовара[0], ?(ТекФотоПоРакурсу.Количество() > 0, ТекФотоПоРакурсу[0].УинКартинки, ""))
						+ "</table>";
					КонецЕсли;	
				КонецЦикла;
			КонецЕсли;
		ИначеЕсли ДанныеСобытия.Element.name = "smallpicture" Тогда
			id = СтрЗаменить(ДанныеСобытия.Element.id, "_", Символы.ПС);
			СтруктураСобытия = Новый Структура("УинКартинка, УинСтроки", СтрПолучитьСтроку(id, 1), СтрПолучитьСтроку(id, 2));
			ФайлыКартинки = НайтиФайлы(ВременныйКаталог, СтруктураСобытия.УинКартинка + ".*");
			Если ФайлыКартинки.Количество() = 0 Тогда
				СтрФайл = СкачатьПолнуюКартинкуССервера(СтруктураСобытия.УинКартинка);
				СтрФайл.Картинка.Записать(ВременныйКаталог + "\" + СтруктураСобытия.УинКартинка + "." + СтрФайл.Расширение);
			КонецЕсли;	
			Для Каждого Тэг Из Элементы.ДокументHTML.Документ.getElementsByTagName("table") Цикл
				Если Найти(Тэг.id, "Row" + СтруктураСобытия.УинСтроки) > 0 Тогда
					СтрокиТовара = ТабДокументы.НайтиСтроки(Новый Структура("УинСтроки", СтруктураСобытия.УинСтроки));
					Тэг.parentElement.innerHTML = "<table id = ""Row" + СтруктураСобытия.УинСтроки + """ border=""1"" cellpadding=""0"" bordercolor=#9696FF cellspacing=""0"" width=""100%"">"
					 + СформироватьТэгиПоТовару(СтрокиТовара[0], СтруктураСобытия.УинКартинка)
					 + "</table>";
					 
					СтрокиТекКартинки = ТекКартинкиТоваров.НайтиСтроки(Новый Структура("УинСтроки", СтруктураСобытия.УинСтроки));
					Если СтрокиТекКартинки.Количество() = 0 Тогда
						СтрокаТекКартинки = ТекКартинкиТоваров.Добавить();
						СтрокаТекКартинки.УинСтроки = СтруктураСобытия.УинСтроки;
					Иначе
						СтрокаТекКартинки = СтрокиТекКартинки[0];
					КонецЕсли;	 
					СтрокаТекКартинки.УинКартинки = СтруктураСобытия.УинКартинка;
				КонецЕсли;	
			КонецЦикла;
		ИначеЕсли ДанныеСобытия.Element.name = "ShowBt" Тогда
			
			id = СтрЗаменить(ДанныеСобытия.Element.id, "_", Символы.ПС);
			СтруктураСобытия = Новый Структура("УинКартинка, УинСтроки", СтрПолучитьСтроку(id, 1), СтрПолучитьСтроку(id, 2));
			ФайлыКартинки = НайтиФайлы(ВременныйКаталог, СтруктураСобытия.УинКартинка + ".*");
			Если ФайлыКартинки.Количество() > 0 Тогда
				ОткрытьЗначение(Новый Картинка(ФайлыКартинки[0].ПолноеИмя));
			КонецЕсли;
			
		ИначеЕсли ДанныеСобытия.Element.name = "SaveBt" Тогда
			
			id = СтрЗаменить(ДанныеСобытия.Element.id, "_", Символы.ПС);
			СтруктураСобытия = Новый Структура("УинКартинка, УинСтроки", СтрПолучитьСтроку(id, 1), СтрПолучитьСтроку(id, 2));
			ФайлыКартинки = НайтиФайлы(ВременныйКаталог, СтруктураСобытия.УинКартинка + ".*");
			Если ФайлыКартинки.Количество() > 0 Тогда
				ДиалогСохранения = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
				Если ДиалогСохранения.Выбрать() Тогда
					КопироватьФайл(ФайлыКартинки[0].ПолноеИмя, ДиалогСохранения.ПолноеИмяФайла + ФайлыКартинки[0].Расширение);
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ДанныеСобытия.Element.name = "RotateBt" Тогда
			
			id = СтрЗаменить(ДанныеСобытия.Element.id, "_", Символы.ПС);
			СтруктураСобытия = Новый Структура("УинКартинка, УинСтроки", СтрПолучитьСтроку(id, 1), СтрПолучитьСтроку(id, 2));
			ФайлыКартинки = НайтиФайлы(ВременныйКаталог, СтруктураСобытия.УинКартинка + ".*");
			Если ФайлыКартинки.Количество() > 0 Тогда
				Список = Новый СписокЗначений();
				Список.Добавить(1, "На 90 градусов против часовой стрелки");
				Список.Добавить(2, "На 90 градусов по часовой стрелке");
				Список.Добавить(3, "На 180 градусов");
				Выбранное = Список.ВыбратьЭлемент("Выберите угол поворота");
				Если Выбранное <> Неопределено Тогда
					ИмяФайла = ФайлыКартинки[0].ПолноеИмя;
					КомпонентаДопГрафика.ПовернутьИзображениеВФайле(ИмяФайла, Выбранное.Значение);
					
					АдресВХранилище = ПоместитьВоВременноеХранилище(Новый Картинка(ИмяФайла), ЭтаФорма.УникальныйИдентификатор);
					ЗаписатьПеревернутоеИзображениеНаСервер(СтруктураСобытия.УинКартинка, АдресВХранилище);
					
					Для Каждого Тэг Из Элементы.ДокументHTML.Документ.getElementsByTagName("table") Цикл
						Если Найти(Тэг.id, "Row" + СтруктураСобытия.УинСтроки) > 0 Тогда
							СтрокиТовара = ТабДокументы.НайтиСтроки(Новый Структура("УинСтроки", СтруктураСобытия.УинСтроки));
							Тэг.parentElement.innerHTML = "<table id = ""Row" + СтруктураСобытия.УинСтроки + """ border=""1"" cellpadding=""0"" bordercolor=#9696FF cellspacing=""0"" width=""100%"">"
							 + СформироватьТэгиПоТовару(СтрокиТовара[0], СтруктураСобытия.УинКартинка)
							 + "</table>";
						КонецЕсли;	
					КонецЦикла;
					
				КонецЕсли;	
			КонецЕсли;
			
		ИначеЕсли ДанныеСобытия.Element.name = "TrimBt" Тогда
			
			id = СтрЗаменить(ДанныеСобытия.Element.id, "_", Символы.ПС);
			СтруктураСобытия = Новый Структура("УинКартинка, УинСтроки", СтрПолучитьСтроку(id, 1), СтрПолучитьСтроку(id, 2));
			ФайлыКартинки = НайтиФайлы(ВременныйКаталог, СтруктураСобытия.УинКартинка + ".*");
			Если ФайлыКартинки.Количество() > 0 Тогда
				ИмяФайла = ФайлыКартинки[0].ПолноеИмя;
				КартинкаТекст = КомпонентаДопГрафика.ВырезатьЧастьИзображения(ИмяФайла);
				Если ЗначениеЗаполнено(КартинкаТекст) Тогда
					КартинкаВырезанная = КартинкаВДД(КартинкаТекст);
					
					СтрокиТовара = ТабДокументы.НайтиСтроки(Новый Структура("УинСтроки", СтруктураСобытия.УинСтроки));
					
					СтруктураСообщения = ПолучитьСтруктуруДляСообщенияМОС(СтрокиТовара[0].Магазин, КартинкаВырезанная, "");
					
					ФормаСообщения = ПолучитьФорму("Документ.СообщениеМОС.Форма.ФормаСообщенияЦО", Новый Структура("ФД", СтруктураСообщения.ФормДокумент), ЭтаФорма);
					
					ЗаполнитьЗначенияСвойств(ФормаСообщения.Объект, СтруктураСообщения);
					ФормаСообщения.Объект.СтруктурныеЕдиницы.Очистить();
					СтрокаТЧ1 = ФормаСообщения.Объект.СтруктурныеЕдиницы.Добавить();
					СтрокаТЧ1.СтруктурнаяЕдиница = СтрокиТовара[0].Магазин;
					СтрокаТЧ1.СтаршийСмены = СтруктураСообщения.СтаршийСмены;
					ФормаСообщения.СписокМагазинов.Очистить();
					ФормаСообщения.СписокМагазинов.Добавить(СтрокиТовара[0].Магазин, Строка(СтрокиТовара[0].Магазин), Истина);
					ФормаСообщения.Объект.ФорматированиеТекста = Истина;
					ФормаСообщения.Открыть();
				КонецЕсли;	
			КонецЕсли;
		ИначеЕсли Лев(ДанныеСобытия.Element.name, СтрДлина("SetPhotoStatus")) = "SetPhotoStatus" Тогда
			СтатусКУстановке = СтрЗаменить(ДанныеСобытия.Element.name, "SetPhotoStatus", "");
			Модифицированность = Истина;
			
			id = СтрЗаменить(ДанныеСобытия.Element.id, "_", Символы.ПС);
			СтруктураСобытия = Новый Структура("УинКартинка, УинСтроки", СтрПолучитьСтроку(id, 1), СтрПолучитьСтроку(id, 2));
			СтрокиФото = ТабЗаписиПоТоварам.НайтиСтроки(Новый Структура("УинКартинки", СтруктураСобытия.УинКартинка));
			Если СтрокиФото.Количество() > 0 Тогда
				СтрокиФото[0].СтатусФото = Число(СтатусКУстановке);
			КонецЕсли;
			ЗаписатьСтатусВФото(СтруктураСобытия.УинКартинка, СтатусКУстановке);
			
			СтрокиПоРакурсу = ТабЗаписиПоТоварам.НайтиСтроки(Новый Структура("УинСтроки", СтруктураСобытия.УинСтроки));
			СледКартинка = "";
			Для н = 0 По СтрокиПоРакурсу.Количество() - 1 Цикл
				Если СтрокиПоРакурсу[н].УинКартинки = СтруктураСобытия.УинКартинка
					И н < СтрокиПоРакурсу.Количество() - 1 Тогда
					СтрокиТекКартинка = ТекКартинкиТоваров.НайтиСтроки(Новый Структура("УинСтроки", СтруктураСобытия.УинСтроки));
					Если СтрокиТекКартинка.Количество() = 0 Тогда
						СтрокаТекКартинка = ТекКартинкиТоваров.Добавить();
						СтрокаТекКартинка.УинСтроки = СтруктураСобытия.УинСтроки;
					Иначе	
						СтрокаТекКартинка = СтрокиТекКартинка[0];
					КонецЕсли;	
					СтрокаТекКартинка.УинКартинки = СтрокиПоРакурсу[н + 1].УинКартинки;
					
					ФайлыКартинки = НайтиФайлы(ВременныйКаталог, СтрокаТекКартинка.УинКартинки + ".*");
					Если ФайлыКартинки.Количество() = 0 Тогда
						СтрФайл = СкачатьПолнуюКартинкуССервера(СтрокаТекКартинка.УинКартинки);
						СтрФайл.Картинка.Записать(ВременныйКаталог + "\" + СтрокаТекКартинка.УинКартинки + "." + СтрФайл.Расширение);
					КонецЕсли;
				КонецЕсли;	
			КонецЦикла;	
			
			Для Каждого Тэг Из Элементы.ДокументHTML.Документ.getElementsByTagName("table") Цикл
				Если Найти(Тэг.id, "Row" + СтруктураСобытия.УинСтроки) > 0 Тогда
					СтрокиТовара = ТабДокументы.НайтиСтроки(Новый Структура("УинСтроки", СтруктураСобытия.УинСтроки));
					ТекФото = ТекКартинкиТоваров.НайтиСтроки(Новый Структура("УинСтроки", СтруктураСобытия.УинСтроки));
					Тэг.parentElement.innerHTML = "<table id = ""Row" + СтруктураСобытия.УинСтроки + """ border=""1"" cellpadding=""0"" bordercolor=#9696FF cellspacing=""0"" width=""100%"">"
					+ СформироватьТэгиПоТовару(СтрокиТовара[0], ?(ТекФото.Количество() > 0, ТекФото[0].УинКартинки, ""))
					+ "</table>";
				КонецЕсли;	
			КонецЦикла;
			
		ИначеЕсли ДанныеСобытия.Element.name = "AddKomment" Тогда
			id = СтрЗаменить(ДанныеСобытия.Element.id, "_", Символы.ПС);
			СтруктураСобытия = Новый Структура("УинКартинка, УинСтроки", СтрПолучитьСтроку(id, 1), СтрПолучитьСтроку(id, 2));
			Коммент = "";
			Если ВвестиСтроку(Коммент, "Введите комментарий",, Истина) Тогда
				ЗаписатьКомментарийВФото(СтруктураСобытия.УинКартинка, Коммент);
			КонецЕсли;
			Для Каждого Тэг Из Элементы.ДокументHTML.Документ.getElementsByTagName("table") Цикл
				Если Найти(Тэг.id, "Row" + СтруктураСобытия.УинСтроки) > 0 Тогда
					СтрокиТовара = ТабДокументы.НайтиСтроки(Новый Структура("УинСтроки", СтруктураСобытия.УинСтроки));
					ТекФото = ТекКартинкиТоваров.НайтиСтроки(Новый Структура("УинСтроки", СтруктураСобытия.УинСтроки));
					Тэг.parentElement.innerHTML = "<table id = ""Row" + СтруктураСобытия.УинСтроки + """ border=""1"" cellpadding=""0"" bordercolor=#9696FF cellspacing=""0"" width=""100%"">"
					+ СформироватьТэгиПоТовару(СтрокиТовара[0], ?(ТекФото.Количество() > 0, ТекФото[0].УинКартинки, ""))
					+ "</table>";
				КонецЕсли;	
			КонецЦикла;	
		ИначеЕсли ДанныеСобытия.Element.name = "SetPage" Тогда
			ТекНомерСтраницы = Число(ДанныеСобытия.Element.id);
			ПодключитьОбработчикОжидания("ПереформироватьСОттяжкой", 0.1, Истина);
		КонецЕсли;	
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьКомментарийВФото(УинФото, Коммент)
	
	СтрокаДоб = ТабКомментарии.Вставить(0);
	СтрокаДоб.УинКартинки = УинФото;
	СтрокаДоб.ДатаКомментария = ТекущаяДата();
	СтрокаДоб.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	СтрокаДоб.Комментарий = Коммент;
	
	Запись = РегистрыСведений.ПриложенныеКартинкиКСписаниямКомментарии.СоздатьМенеджерЗаписи();
	Запись.УинКартинки = УинФото;
	Запись.ДатаКомментария = ТекущаяДата();
	Запись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	Запись.Комментарий = Коммент;
	Запись.Записать();
	
КонецПроцедуры

