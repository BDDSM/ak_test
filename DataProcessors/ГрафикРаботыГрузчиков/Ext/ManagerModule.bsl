
Функция СформироватьТабличныйДокумент(МассивФизическихЛиц) Экспорт
	
	//ВнешняяКомпонента = ПодключитьВнешнююКомпонентуПечатиШтрихкода();
	//
	//ТабДок = Новый ТабличныйДокумент;
	//Макет = ПолучитьМакет("Бэйдж");
	//
	//Для Каждого СтрокаМассива Из МассивФизическихЛиц Цикл
	//	
	//	ОбластьМакета = Макет.ПолучитьОбласть("Строка|Столбец");
	//	ОбластьМакета.Параметры.ФИО = СокрЛП(СтрокаМассива.Наименование);
	//	ОбластьМакета.Параметры.Должность = СтрокаМассива.Должность;
	//	ОбластьМакета.Параметры.Код = ПолучитьКодПродавца(СтрокаМассива.Код);
	//	
	//	Если ВнешняяКомпонента <> Неопределено Тогда
	//		
	//		ВнешняяКомпонента.АвтоТип = Ложь;
	//		ВнешняяКомпонента.ТипКода = 1; // указан тип EAN13
	//		
	//		//Штрихкод = "3010372" + Прав(СтрокаМассива.Код, 5);
	//		Штрихкод = "30" + Прав(СтрокаМассива.Код, 10);
	//		ОбластьМакета.Рисунки.Штрихкод.Картинка = ПолучитьКартинкуШтрихкода(ВнешняяКомпонента, Штрихкод);
	//		
	//	КонецЕсли;
	//	
	//	Если Не ТабДок.ПроверитьВывод(ОбластьМакета) Тогда
	//		ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	//	КонецЕсли;
	//	
	//	ТабДок.Вывести(ОбластьМакета);
	//	
	//КонецЦикла;
	//
	//Возврат ТабДок;
	
	МассивСотрудники = Новый Массив();
	Для Каждого ЭлементФизЛицо Из МассивФизическихЛиц Цикл
		Сотрудник = Справочники.ПерсоналККМ.НайтиПоКоду(ЭлементФизЛицо.Код);
		Если Не ЗначениеЗаполнено(Сотрудник) Тогда
			Сообщить(Строка(ЭлементФизЛицо) + " не найден среди персонала ККМ");
		Иначе
			МассивСотрудники.Добавить(Сотрудник);
		КонецЕсли;	
	КонецЦикла;
	
	Возврат Обработки.ПечатьБейджейПродавцов.ПолучитьТабДокБейджей(МассивСотрудники);
	
КонецФункции

Функция ПолучитьКодПродавца(Знач КодПродавца)
	
	ОбработатьСтроку = Истина;
	
	Пока ОбработатьСтроку Цикл
		Если Лев(КодПродавца, 1) = "0" Тогда
			КодПродавца = Прав(КодПродавца, СтрДлина(КодПродавца)-1);
		Иначе
			ОбработатьСтроку = Ложь;
		КонецЕсли;	
	КонецЦикла;
	
	Если СтрДлина(КодПродавца) <= 3 Тогда
		КодПродавца = "000" + КодПродавца;
		КодПродавца = "0." + Прав(КодПродавца, 3);
	Иначе
		КодПродавца = "00000" + КодПродавца;
		КодПродавца = Прав(КодПродавца, 5);
		КодПродавца = Лев(КодПродавца, 2) + "." + Прав(КодПродавца, 3);
	КонецЕсли;
	
	Возврат КодПродавца;
	
КонецФункции

Функция ПодключитьВнешнююКомпонентуПечатиШтрихкода() Экспорт
	
	ПодключениеВыполнено = ПодключитьВнешнююКомпоненту("Обработка.ГрафикРаботыПродавцов_ТЗ.Макет.КомпонентаПечатиШтрихкодов", "КартинкаШтрихкода", ТипВнешнейКомпоненты.Native);
	
	// Создадим объект внешней компоненты
	Если ПодключениеВыполнено Тогда
		ВнешняяКомпонента = Новый("AddIn.КартинкаШтрихкода.Barcode");                  
	Иначе                                                                            
		Возврат Неопределено;
	КонецЕсли;
	
	// Если нет возможности рисовать
	Если НЕ ВнешняяКомпонента.ГрафикаУстановлена Тогда
		// То картинку сформировать не сможем
		Возврат Неопределено;
	КонецЕсли;

	// Установим основные параметры компоненты
	// Если в системе установлен шрифт Tahoma
	Если ВнешняяКомпонента.НайтиШрифт("Tahoma") = Истина Тогда
		// Выбираем его как шрифт для формирования картинки
		ВнешняяКомпонента.Шрифт = "Tahoma";
	Иначе
		// Шрифт Tahoma в системе отсутствует
		// Обойдем все доступные компоненте шрифты
		Для Сч = 0 По ВнешняяКомпонента.КоличествоШрифтов -1 Цикл
			// Получим очередной шрифт, доступный компоненте
			ТекущийШрифт = ВнешняяКомпонента.ШрифтПоИндексу(Сч);
			// Если шрифт доступен
			Если ТекущийШрифт <> Неопределено Тогда
				// Они и будет шрифтом для формирования штрихкода
				ВнешняяКомпонента.Шрифт = ТекущийШрифт;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	// Установим размер шрифта
	ВнешняяКомпонента.РазмерШрифта = 12;
	
	Возврат ВнешняяКомпонента;
	
КонецФункции

Функция ПолучитьКартинкуШтрихкода(ВнешняяКомпонента, Штрихкод) Экспорт
	
	// Если код содержит контрольный символ, обязательно указываем
	ВнешняяКомпонента.СодержитКС = СтрДлина(Штрихкод) = 13;
	
	// Если отображать контрольный символ не нужно
	// ВнешняяКомпонента.ВидимостьКС = Ложь;
	
	// Формируем картинку штрихкода
	ВнешняяКомпонента.ЗначениеКода = Штрихкод;
	
	// Если установленная нами ширина меньше минимально допустимой для этого штрихкода
	Если ВнешняяКомпонента.Ширина < ВнешняяКомпонента.МинимальнаяШиринаКода Тогда
		// Скорректируем ширину
		ВнешняяКомпонента.Ширина = ВнешняяКомпонента.МинимальнаяШиринаКода + 10;
	КонецЕсли;
	
	// Сформируем картинку
	ДвоичныеДанныеКартинки = ВнешняяКомпонента.ПолучитьШтрихкод();
	
	// Если картинка сформировалась
	Если ДвоичныеДанныеКартинки <> Неопределено Тогда
		// Формируем из двоичных данных
		Возврат Новый Картинка(ДвоичныеДанныеКартинки);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции
