
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СхемаКомпоновкиДанных = Обработки.ОтчетОСравненииДокументовСоСканами.ПолучитьМакет("СКД");
	URLСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, Новый УникальныйИдентификатор());   	
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемы));      
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
	Если РольДоступна("ПодтверждениеРасхожденийВСканах") = Истина Тогда
		Элементы.ДЗВсеПровереноОтветственным.Видимость = Истина;
		Элементы.ДЗВсеПровереноОтветственнымТОРГ.Видимость = Истина;
		Элементы.ДЗПодтвержденоОтветственнымПоНДСТОРГ12.Видимость = Истина;
		Элементы.ДЗПодтвержденоОтветственнымПоНДССФ.Видимость = Истина;
	Иначе
		Элементы.ДЗВсеПровереноОтветственным.Видимость = Ложь;	
		Элементы.ДЗВсеПровереноОтветственнымТОРГ.Видимость = Ложь;
		Элементы.ДЗПодтвержденоОтветственнымПоНДСТОРГ12.Видимость = Ложь;
		Элементы.ДЗПодтвержденоОтветственнымПоНДССФ.Видимость = Ложь;		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетНаСервере()
	ДЗ.ПолучитьЭлементы().Очистить();
	
	СхемаКомпоновкиДанных = Обработки.ОтчетОСравненииДокументовСоСканами.ПолучитьМакет("СКД");
	НастройкиКомпоновки = КомпоновщикНастроек.Настройки;	
	
	ДатаНачала = НачалоДня(ТекущаяДата());	
	ДатаОкончания = КонецДня(ТекущаяДата());
	
	СхемаКД					= СхемаКомпоновкиДанных;
	КомпоновщикНастроекКД	= КомпоновщикНастроек;
	
	СтандартныйПериод = ЗначениеПараметраКД("СтандартныйПериод");
	
	Если ЗначениеЗаполнено(СтандартныйПериод) = Истина Тогда
		ДатаНачала = СтандартныйПериод.ДатаНачала;
		ДатаОкончания = КонецДня(СтандартныйПериод.ДатаОкончания);
	КонецЕсли;
	
	СравниватьСБухгалтерией = ЗначениеПараметраКД("СравниватьСБухгалтерией"); 
	
	ТипОтчета = ЗначениеПараметраКД("ТипОтчета"); 
	
	Если ТипОтчета = "Продажи" Тогда
		СравниватьСБухгалтерией = Ложь;
	КонецЕсли;	
	
	Если СравниватьСБухгалтерией = Истина Тогда
		ТЗ_ДанныеБухгалтерии = ПолучитьДанныеИзБухгалтерии(ДатаНачала, ДатаОкончания);		
		Для каждого СтрБух Из ТЗ_ДанныеБухгалтерии Цикл
			СокрЛПНомер = СокрЛП(СтрБух.ФиксНомер);
			СтрБух.НомерДокумента = СокрЛПНомер;			
		КонецЦикла;	
		Элементы.ДЗГруппаДанныеБухгалтерии.Видимость = Истина;
	Иначе
		ТЗ_ДанныеБухгалтерии = ПолучитьПустыеДанныеИзБухгалтерии();
		Элементы.ДЗГруппаДанныеБухгалтерии.Видимость = Ложь;
	КонецЕсли;	
	
	ВидОтчета = ЗначениеПараметраКД("ВидОтчета"); 
	
	Если ВидОтчета = "ПроблемныеНакладные" Тогда
		Элементы.ДЗГруппаПрикрепленныеФайлыСФ.Видимость = Ложь;
	Иначе
		Элементы.ДЗГруппаПрикрепленныеФайлыСФ.Видимость = Истина;
	КонецЕсли;	
	
	Если ВидОтчета = "ПроблемныеСФ" Тогда
		Элементы.ДЗГруппаПрикрепленныеАктыНакладные.Видимость = Ложь;
	Иначе
		Элементы.ДЗГруппаПрикрепленныеАктыНакладные.Видимость = Истина;
	КонецЕсли;	
		
	ДеревоРезультат = Новый ДеревоЗначений;	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,	КомпоновщикНастроекКД.ПолучитьНастройки(), , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	ВнешниеНаборыДанных = Новый Структура("ТЗ_ДанныеБухгалтерии", ТЗ_ДанныеБухгалтерии);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ДеревоРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ИзмененныеОстатки = Новый Соответствие;	
	ИзмененныеОстаткиУпаковок = Новый Соответствие;
	
	НомерПП = 1;
	Для Каждого СтрокаДерева ИЗ ДеревоРезультат.Строки  Цикл
		Если ЗначениеЗаполнено(СтрокаДерева.ДокументПТУ) = Истина Тогда
			СтрокаДереваПТУ = Неопределено;					
			
			НСтрока = ДЗ.ПолучитьЭлементы().Добавить();			
			НСтрока.Уровень = 1;
			НСтрока.НомерПП = НомерПП;
			НомерПП = НомерПП + 1;
			Если СтрокаДерева.Строки.Количество() = 1 Тогда
				ТекСтрока = СтрокаДерева.Строки.Получить(0);
				ЗаполнитьЗНаченияСвойств(НСтрока, ТекСтрока); 
				
				
				СтрокаДереваПТУ = ТекСтрока;
				
			ИначеЕсли СтрокаДерева.Строки.Количество() > 1 Тогда
				ТекСтрока = СтрокаДерева.Строки.Получить(0);
				ЗаполнитьЗНаченияСвойств(НСтрока, СтрокаДерева); 
				НСтрока.ПТУ_ПДР = Истина;
				
				Для каждого СтрокаДерева2 Из СтрокаДерева.Строки Цикл
					Если СтрокаДерева2.ВидДокумента = "ПТУ" Тогда
						СтрокаДереваПТУ = СтрокаДерева2; 
					КонецЕсли;	
					НСтрока2 = НСтрока.ПолучитьЭлементы().Добавить();
					НСтрока2.Уровень = 2;
					ЗаполнитьЗначенияСвойств(НСтрока2, СтрокаДерева2);
				КонецЦикла;				
			КонецЕсли;	
			
			НСтрока.Документ = СтрокаДерева.ДокументПТУ;
			
			Если СтрокаДереваПТУ <> Неопределено Тогда
				ЗаполнитьЗначенияСвойств(Нстрока, СтрокаДереваПТУ, "Контрагент, Организация, ФайлСФ, ДокументЭДО_СФ, ФайлТОРГ12, ДокументЭДО_ТОРГ, РезультатСравненияТОРГ12, РезультатСравненияСФ");
			КонецЕсли;			
			
		Иначе
			ИтогСумма = СтрокаДерева.Сумма_Фин;
			ИтогСуммаНДС = СтрокаДерева.СуммаНДС_Фин;
		КонецЕсли;	
		
	КонецЦикла;	

КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеИзБухгалтерии(ДатаНач, ДатаКон)
	ПараметрыПроверки = Новый Структура;
	Соединение = Справочники.Проверки.ПолучитьСоединениеСбазойБух(ПараметрыПроверки);
		
	Запрос = Соединение.NewObject("Запрос");
	Запрос.Текст = "ВЫБРАТЬ
	|	СчетФактураПолученныйДокументыОснования.ДокументОснование,
	|	СчетФактураПолученныйДокументыОснования.Ссылка.НомерВходящегоДокумента,
	|	СчетФактураПолученныйДокументыОснования.Ссылка.ДатаВходящегоДокумента,
	|	СчетФактураПолученныйДокументыОснования.Ссылка.НомерИсправления КАК НомерИсправления,
	|	СчетФактураПолученныйДокументыОснования.Ссылка.ДатаИсправления КАК ДатаИсправления
	|ПОМЕСТИТЬ ВТ_ВНЕШН_СФ
	|ИЗ
	|	Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|ГДЕ
	|	СчетФактураПолученныйДокументыОснования.ДокументОснование.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И СчетФактураПолученныйДокументыОснования.Ссылка.ПометкаУдаления = ЛОЖЬ
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.СчетФактура.Номер КАК НомерДокумента,
	|	НДСЗаписиКнигиПокупок.СчетФактура.Дата КАК ДатаДокумента,
	|	""ПТУ"" КАК ВидДокумента,
	|	СУММА(НДСЗаписиКнигиПокупок.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(НДСЗаписиКнигиПокупок.НДС) КАК НДС,
	|	НДСЗаписиКнигиПокупок.СчетФактура.НомерВходящегоСчетаФактуры,
	|	НДСЗаписиКнигиПокупок.СчетФактура.ДатаВходящегоСчетаФактуры
	|ПОМЕСТИТЬ ВТ_ДанныеКниги
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|ГДЕ
	|	НДСЗаписиКнигиПокупок.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.СчетФактура.НомерВходящегоСчетаФактуры,
	|	НДСЗаписиКнигиПокупок.СчетФактура.ДатаВходящегоСчетаФактуры,
	|	НДСЗаписиКнигиПокупок.СчетФактура.Номер,
	|	НДСЗаписиКнигиПокупок.СчетФактура.Дата
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|	
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.СчетФактура.Номер,
	|	НДСЗаписиКнигиПокупок.СчетФактура.Дата,
	|	""ПДР"",
	|	СУММА(НДСЗаписиКнигиПокупок.СуммаБезНДС),
	|	СУММА(НДСЗаписиКнигиПокупок.НДС),
	|	НДСЗаписиКнигиПокупок.СчетФактура.НомерВходящегоСчетаФактуры,
	|	НДСЗаписиКнигиПокупок.СчетФактура.ДатаВходящегоСчетаФактуры
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок КАК НДСЗаписиКнигиПокупок
	|ГДЕ
	|	НДСЗаписиКнигиПокупок.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И НДСЗаписиКнигиПокупок.СчетФактура ССЫЛКА Документ.ПоступлениеДопРасходов
	|	
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.СчетФактура.НомерВходящегоСчетаФактуры,
	|	НДСЗаписиКнигиПокупок.СчетФактура.ДатаВходящегоСчетаФактуры,
	|	НДСЗаписиКнигиПокупок.СчетФактура.Номер,
	|	НДСЗаписиКнигиПокупок.СчетФактура.Дата
	|;
	|	
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ДанныеКниги.НомерДокумента КАК ФиксНомер,
	|	""             "" КАК НомерДокумента,
	|	НАЧАЛОПЕРИОДА(ВТ_ДанныеКниги.ДатаДокумента, ДЕНЬ) КАК ДатаДокумента,
	|	ВТ_ДанныеКниги.ВидДокумента,
	|	ВТ_ДанныеКниги.СуммаБезНДС + ВТ_ДанныеКниги.НДС КАК Сумма,
	|	ВТ_ДанныеКниги.СуммаБезНДС,
	|	ВТ_ДанныеКниги.НДС КАК СуммаНДС,
	|	ЕСТЬNULL(ВТ_ВНЕШН_СФ.НомерВходящегоДокумента, ВТ_ДанныеКниги.СчетФактураНомерВходящегоСчетаФактуры) КАК НомерСФ,
	|	ЕСТЬNULL(ВТ_ВНЕШН_СФ.ДатаВходящегоДокумента, ВТ_ДанныеКниги.СчетФактураДатаВходящегоСчетаФактуры) КАК ДатаСФ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТ_ВНЕШН_СФ.НомерИсправления, """") = 0
	|			ТОГДА """"
	|		ИНАЧЕ ЕСТЬNULL(ВТ_ВНЕШН_СФ.НомерИсправления, """")
	|	КОНЕЦ КАК НомерСФ_Испр,	
	|	ЕСТЬNULL(ВТ_ВНЕШН_СФ.ДатаИсправления, ДАТАВРЕМЯ(1,1,1)) КАК ДатаСФ_Испр
	|ИЗ
	|	ВТ_ДанныеКниги КАК ВТ_ДанныеКниги
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ВНЕШН_СФ КАК ВТ_ВНЕШН_СФ
	|		ПО ВТ_ДанныеКниги.СчетФактура = ВТ_ВНЕШН_СФ.ДокументОснование";
	
	
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
                   
	Внешн_ТЗ = Запрос.Выполнить().Выгрузить();
	
	ТЗ = ЗначениеИзКОМ(Соединение, Внешн_ТЗ);
	
	Возврат ТЗ; 
КонецФункции	

&НаСервере
Функция ПолучитьПустыеДанныеИзБухгалтерии()
	Запрос = Новый Запрос;	
	Запрос.Текст = "ВЫБРАТЬ
	|	"""" КАК НомерДокумента,
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаДокумента,
	|	"""" КАК ВидДокумента,
	|	"""" КАК НомерСФ,
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаСФ,
	|	0 КАК Сумма,
	|	0 КАК СуммаНДС,
	|	"""" КАК НомерСФ_Испр,
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК ДатаСФ_Испр";
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	ЗапросБух = Новый Запрос;
	ЗапросБух.Текст = "";
	
	Возврат ТЗ;
КонецФункции	


&НаКлиенте
Процедура СформироватьОтчет(Команда)
	СформироватьОтчетНаСервере();
КонецПроцедуры

&НаСервере
Функция ЗначениеПараметраКД(ИмяПараметра, ЗначениеПоУмолчанию = Неопределено)
	
	ЗначениеПараметра = ЗначениеПоУмолчанию;
	
	ПараметрКД = КомпоновщикНастроек.ПолучитьНастройки().ПараметрыДанных.НайтиЗначениеПараметра(
	Новый ПараметрКомпоновкиДанных(ИмяПараметра));
	Если ПараметрКД <> Неопределено
		И ПараметрКД.Использование Тогда
		ЗначениеПараметра = ПараметрКД.Значение;
	КонецЕсли;
	
	Возврат ЗначениеПараметра;
	
КонецФункции

&НаСервере
Функция ЗначениеВКОМ(Соединение, Значение)
	Возврат Соединение.ЗначениеИзСтрокиВнутр(ЗначениеВСтрокуВнутр(Значение));
КонецФункции

&НаСервере
Функция ЗначениеИзКОМ(Соединение, Значение)
	Возврат ЗначениеИзСтрокиВнутр(Соединение.ЗначениеВСтрокуВнутр(Значение));
КонецФункции

&НаКлиенте
Процедура РезультатСравнения(Команда)
	Элементы.ФормаРезультатСравнения.Пометка = Не Элементы.ФормаРезультатСравнения.Пометка;
	Элементы.РезультатСравнения.Видимость = Элементы.ФормаРезультатСравнения.Пометка;
КонецПроцедуры

&НаКлиенте
Процедура Отбор(Команда)
	Элементы.ФормаОтбор.Пометка = Не Элементы.ФормаОтбор.Пометка;
	Элементы.КомпоновщикНастроекПользовательскиеНастройки.Видимость = Элементы.ФормаОтбор.Пометка;
КонецПроцедуры

&НаКлиенте
Процедура ДЗПриАктивизацииЯчейки(Элемент)
	ТС = Элемент.ТекущаяСтрока;
	Если ТС = Неопределено Тогда
		РезультатСравнения.ПолучитьЭлементы().Очистить();		
		Возврат;
	КонецЕсли;
	
	ТК = Элемент.ТекущийЭлемент;	
	Если ТК = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	ТекРезультатСравнения = "";
	
	Если ТК.Имя = "ДЗФайлСФ" Тогда
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.ФайлСФ) = Ложь Тогда
			РезультатСравнения.ПолучитьЭлементы().Очистить();
			Возврат;
		КонецЕсли;			
		
		ТекРезультатСравнения = Элемент.ТекущиеДанные.РезультатСравненияСФ;						
	КонецЕсли;
	
	Если ТК.Имя = "ДЗФайлТОРГ12" Тогда
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.ФайлТОРГ12) = Ложь Тогда
			РезультатСравнения.ПолучитьЭлементы().Очистить();
			Возврат;
		КонецЕсли;			
		
		ТекРезультатСравнения = Элемент.ТекущиеДанные.РезультатСравненияТОРГ12;						
	КонецЕсли;
	
	ТЗ = Неопределено;
	
	Если ЗначениеЗаполнено(ТекРезультатСравнения) Тогда		
		Попытка 
			ТЗ = ЗначениеИзСтрокиВнутр(ТекРезультатСравнения);			
		Исключение
			РезультатСравнения.ПолучитьЭлементы().Очистить();
			Возврат;
		КонецПопытки;		
	Иначе		
		РезультатСравнения.ПолучитьЭлементы().Очистить();	
		Возврат;
	КонецЕсли;
		
	Если ТипЗнч(ТЗ) = Тип("ТаблицаЗначений") Тогда					
		ЗаполнитьДеревоЗначений(ТЗ);
	КонецЕсли;		
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДеревоЗначений(ТЗ)
	РезультатСравнения.ПолучитьЭлементы().Очистить();
	
	СтрТаблица = Неопределено;
	
	Для каждого Стр Из ТЗ Цикл		
		Если Найти(Стр.Проверка, "Таблица") > 0 Тогда
			Если СтрТаблица <> Неопределено Тогда
				СтрДерево = СтрТаблица.ПолучитьЭлементы().Добавить();
				ЗаполнитьЗначенияСвойств(СтрДерево, Стр);   
			Иначе
				СтрТаблица = РезультатСравнения.ПолучитьЭлементы().Добавить();
				СтрТаблица.Проверка = "Табличная часть";
				
				СтрДерево = СтрТаблица.ПолучитьЭлементы().Добавить();
				ЗаполнитьЗначенияСвойств(СтрДерево, Стр);   
			КонецЕсли;	
		Иначе
			СтрДерево = РезультатСравнения.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(СтрДерево, Стр);
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ВсеПровереноОператором(Команда)
	МассивСтрок = Элементы.ДЗ.ВыделенныеСтроки;
	
	СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");
	
	МассивПакетов = Новый Массив;
	Для каждого Зн Из МассивСтрок Цикл
		СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");		
		ТекСтрока = Элементы.ДЗ.ДанныеСтроки(Зн);
		
		ТекСтрока.ПодтвержденоОператоромСФ = Истина;
		//ТекСтрока.ПодтвержденоОператоромТОРГ12 = Истина;
		Если ТекСтрока.ПТУ_ПДР = Истина Тогда
			Коллекция = Элементы.ДЗ.ДанныеСтроки(Зн).ПолучитьЭлементы();
			
			Для каждого СтрКол Из Коллекция Цикл
				СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");		
				ТекСтрока = СтрКол;
				
				ТекСтрока.ПодтвержденоОператоромСФ = Истина;
				//ТекСтрока.ПодтвержденоОператоромТОРГ12 = Истина;
				
				ЗаполнитьЗначенияСвойств(СтрукутраСтроки, ТекСтрока);
				МассивПакетов.Добавить(СтрукутраСтроки);
				
			КонецЦикла;	
		Иначе			
			ЗаполнитьЗначенияСвойств(СтрукутраСтроки, ТекСтрока);
			МассивПакетов.Добавить(СтрукутраСтроки);
		КонецЕсли;	
	КонецЦикла;	

	ИзменитьПровереноОператоромОтветсвеннымНаСервере(МассивПакетов, "Оператор", Истина, "СФ");
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВсеПровереноОтветственным(Команда)
	МассивСтрок = Элементы.ДЗ.ВыделенныеСтроки;
	
	СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");
	
	МассивПакетов = Новый Массив;
	Для каждого Зн Из МассивСтрок Цикл
		СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");		
		ТекСтрока = Элементы.ДЗ.ДанныеСтроки(Зн);
		
		//ТекСтрока.ПодтвержденоОтветственнымПоНДСТОРГ12 = Истина;
		ТекСтрока.ПодтвержденоОтветственнымПоНДССФ = Истина;
		Если ТекСтрока.ПТУ_ПДР = Истина Тогда
			Коллекция = Элементы.ДЗ.ДанныеСтроки(Зн).ПолучитьЭлементы();
			
			Для каждого СтрКол Из Коллекция Цикл
				СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");		
				ТекСтрока = СтрКол;
				
				//ТекСтрока.ПодтвержденоОтветственнымПоНДСТОРГ12 = Истина;
				ТекСтрока.ПодтвержденоОтветственнымПоНДССФ = Истина;
				
				ЗаполнитьЗначенияСвойств(СтрукутраСтроки, ТекСтрока);
				МассивПакетов.Добавить(СтрукутраСтроки);
				
			КонецЦикла;	
		Иначе			
			ЗаполнитьЗначенияСвойств(СтрукутраСтроки, ТекСтрока);
			МассивПакетов.Добавить(СтрукутраСтроки);
		КонецЕсли;	
	КонецЦикла;	

	ИзменитьПровереноОператоромОтветсвеннымНаСервере(МассивПакетов, "Ответственный", Истина, "СФ");

КонецПроцедуры


&НаСервере
Процедура ИзменитьПровереноОператоромОтветсвеннымНаСервере(МассивПакетов, Режим, Значение, СФ_ТОРГ)
	Для каждого Зн из МассивПакетов Цикл
		Если Зн.ЭтоЭДО = Истина Тогда
			Набор = РегистрыСведений.ЭДО_СопоставлениеДокументов.СоздатьНаборЗаписей();
			Набор.Отбор.Документ.Установить(Зн.Документ);			
			Набор.Прочитать();
			
			Для каждого Запись Из Набор Цикл
				Если СФ_ТОРГ = "СФ_ТОРГ" Или СФ_ТОРГ = "СФ" Тогда
					Если Запись.ДокументЭДО = Зн.ДокументЭДО_СФ Тогда					
						Если Режим = "Оператор" Тогда
							Запись.ПодтверженоОператором = Значение;
						Иначе
							Запись.ПодтвержденоОтветственным = Значение;
						КонецЕсли;	
					КонецЕсли;					
				КонецЕсли;
				
				Если СФ_ТОРГ = "СФ_ТОРГ" Или СФ_ТОРГ = "ТОРГ" Тогда				
					Если Запись.ДокументЭДО = Зн.ДокументЭДО_ТОРГ Тогда					
						Если Режим = "Оператор" Тогда
							Запись.ПодтверженоОператором = Значение;
						Иначе
							Запись.ПодтвержденоОтветственным = Значение;
						КонецЕсли;
					КонецЕсли;	
				КонецЕсли;	
			КонецЦикла;
			
			Набор.Записать();
		Иначе
			
			СписокВидов = Новый СписокЗначений;
			
			Если СФ_ТОРГ = "СФ_ТОРГ" Тогда
				СписокВидов.Добавить(Перечисления.ЭДО_ТипыДокументов.СчетФактура);
				СписокВидов.Добавить(Перечисления.ЭДО_ТипыДокументов.ТоварнаяНакладная);
			ИначеЕсли СФ_ТОРГ = "СФ" Тогда	
				СписокВидов.Добавить(Перечисления.ЭДО_ТипыДокументов.СчетФактура);
			ИначеЕсли СФ_ТОРГ = "ТОРГ" Тогда	
				СписокВидов.Добавить(Перечисления.ЭДО_ТипыДокументов.ТоварнаяНакладная);
			КонецЕсли;	
			
			Для каждого ЗнСписка Из СписокВидов Цикл
				Запись = РегистрыСведений.ЭДО_СопоставлениеДокументов.СоздатьМенеджерЗаписи();
				Запись.Документ = Зн.Документ;
				Запись.ВидДокумента = ЗнСписка.Значение;
				
				Запись.Прочитать();
				
				Если ЗначениеЗаполнено(Запись.Документ) = Ложь Тогда
					Запись.Документ = Зн.Документ;
					Запись.ВидДокумента = ЗнСписка.Значение;
				КонецЕсли;
				
				Запись.ПодтверженоОператором = Значение;
				
				Запись.Записать();
			КонецЦикла;
			
			//Запись = РегистрыСведений.ПрикрепленныеСканыКДокументам.СоздатьМенеджерЗаписи();
			//Запись.Документ = Зн.Документ;
			//Запись.Прочитать();
			
			//			
			//			
			//			Запись.Документ = Зн.Документ;
			//			
			//			Если ЗначениеЗаполнено(Запись.Документ) = Ложь Тогда
			//				Запись.Документ = Зн.Документ;
			//				Запись.ФайлСФ = Зн.ФайлСФ;
			//				Запись.ФайлТОРГ12 = Зн.ФайлТОРГ12;
			//			КонецЕсли;	
			//			
			//			Если Режим = "Оператор" Тогда
			//				Если СФ_ТОРГ = "СФ_ТОРГ" Или СФ_ТОРГ = "СФ" Тогда					
			//					Запись.ПодтвержденоОператоромСФ = Значение;
			//					Если Запись.ПодтвержденоОператоромСФ = Истина Тогда
			//						Запись.ДатаПодтвержденияСФОператором = ТекущаяДата();
			//						Запись.ОператорСФ = ПараметрыСеанса.ТекущийПользователь;
			//					Иначе
			//						Запись.ДатаПодтвержденияСФОператором = Дата(1,1,1);
			//						Запись.ОператорСФ = Справочники.Пользователи.ПустаяСсылка();
			//					КонецЕсли;
			//				КонецЕсли;
			//				
			//				Если СФ_ТОРГ = "СФ_ТОРГ" Или СФ_ТОРГ = "ТОРГ" Тогда					
			//					Запись.ПодтвержденоОператоромТОРГ12 = Значение;
			//					Если Запись.ПодтвержденоОператоромТОРГ12 = Истина Тогда
			//						Запись.ДатаПодтвержденияТОРГ12Оператором = ТекущаяДата();
			//						Запись.ОператорТОРГ12 = ПараметрыСеанса.ТекущийПользователь;
			//					Иначе
			//						Запись.ДатаПодтвержденияТОРГ12Оператором = Дата(1,1,1);
			//						Запись.ОператорТОРГ12 = Справочники.Пользователи.ПустаяСсылка();
			//					КонецЕсли; 
			//				КонецЕсли;
			//			Иначе
			//				Если СФ_ТОРГ = "СФ_ТОРГ" Или СФ_ТОРГ = "СФ" Тогда					
			//					Запись.ПодтвержденоОтветственнымПоНДССФ = Значение;
			//					Если Запись.ПодтвержденоОтветственнымПоНДССФ = Истина Тогда
			//						Запись.ДатаПодтвержденияСФОтветственным = ТекущаяДата();
			//						Запись.ОтветственныйСФ = ПараметрыСеанса.ТекущийПользователь;
			//					Иначе
			//						Запись.ДатаПодтвержденияСФОтветственным = Дата(1,1,1);
			//						Запись.ОтветственныйСФ = Справочники.Пользователи.ПустаяСсылка();
			//					КонецЕсли;
			//				КонецЕсли;	
			//				
			//				Если СФ_ТОРГ = "СФ_ТОРГ" Или СФ_ТОРГ = "ТОРГ" Тогда					
			//					Запись.ПодтвержденоОтветственнымПоНДСТОРГ12 = Значение;
			//					Если Запись.ПодтвержденоОтветственнымПоНДСТОРГ12 = Истина Тогда
			//						Запись.ДатаПодтвержденияТОРГ12Ответственным = ТекущаяДата();
			//						Запись.ОтветственныйТОРГ12 = ПараметрыСеанса.ТекущийПользователь;
			//					Иначе
			//						Запись.ДатаПодтвержденияТОРГ12Ответственным = Дата(1,1,1);
			//						Запись.ОтветственныйТОРГ12 = Справочники.Пользователи.ПустаяСсылка();
			//					КонецЕсли;	
			//				КонецЕсли;	
			//			КонецЕсли;
			//			
			//			Запись.Записать();
		КонецЕсли;		
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ДЗПодтвержденоОператоромТОРГ12ПриИзменении(Элемент)
	ТекСтрока = Элементы.ДЗ.ДанныеСтроки(Элементы.ДЗ.ТекущаяСтрока);
	МассивПакетов = Новый Массив;
	
	Значение = ТекСтрока.ПодтвержденоОператоромТОРГ12;
	
	Если ТекСтрока.ПТУ_ПДР = Ложь Тогда
		СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");
		ЗаполнитьЗначенияСвойств(СтрукутраСтроки, ТекСтрока);			
		МассивПакетов.Добавить(СтрукутраСтроки);
	Иначе
		Коллекция = ТекСтрока.ПолучитьЭлементы();
		
		Для каждого СтрКол Из Коллекция Цикл
			СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");		
			ТекСтрока = СтрКол;
			
			ТекСтрока.ПодтвержденоОператоромТОРГ12 = Значение;		
			
			ЗаполнитьЗначенияСвойств(СтрукутраСтроки, ТекСтрока);
			МассивПакетов.Добавить(СтрукутраСтроки);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ИзменитьПровереноОператоромОтветсвеннымНаСервере(МассивПакетов, "Оператор", Значение, "ТОРГ");
		
		
КонецПроцедуры

&НаКлиенте
Процедура ДЗПодтвержденоОтветственнымПоНДСТОРГ12ПриИзменении(Элемент)
	ТекСтрока = Элементы.ДЗ.ДанныеСтроки(Элементы.ДЗ.ТекущаяСтрока);
	МассивПакетов = Новый Массив;
	
	Значение = ТекСтрока.ПодтвержденоОтветственнымПоНДСТОРГ12;
	
	Если ТекСтрока.ПТУ_ПДР = Ложь Тогда
		СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");
		ЗаполнитьЗначенияСвойств(СтрукутраСтроки, ТекСтрока);			
		МассивПакетов.Добавить(СтрукутраСтроки);
	Иначе
		Коллекция = ТекСтрока.ПолучитьЭлементы();
	
		Для каждого СтрКол Из Коллекция Цикл
			СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");		
			ТекСтрока = СтрКол;
			
			ТекСтрока.ПодтвержденоОтветственнымПоНДСТОРГ12 = Значение;		
			
			ЗаполнитьЗначенияСвойств(СтрукутраСтроки, ТекСтрока);
			МассивПакетов.Добавить(СтрукутраСтроки);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ИзменитьПровереноОператоромОтветсвеннымНаСервере(МассивПакетов, "Ответственный", Значение, "ТОРГ");

КонецПроцедуры

&НаКлиенте
Процедура ДЗПодтвержденоОператоромСФПриИзменении(Элемент)
	ТекСтрока = Элементы.ДЗ.ДанныеСтроки(Элементы.ДЗ.ТекущаяСтрока);
	МассивПакетов = Новый Массив;
	
	Значение = ТекСтрока.ПодтвержденоОператоромСФ;
	
	Если ТекСтрока.ПТУ_ПДР = Ложь Тогда
		СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");
		ЗаполнитьЗначенияСвойств(СтрукутраСтроки, ТекСтрока);			
		МассивПакетов.Добавить(СтрукутраСтроки);
	Иначе
		Коллекция = ТекСтрока.ПолучитьЭлементы();
		
		Для каждого СтрКол Из Коллекция Цикл
			СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");		
			ТекСтрока = СтрКол;
			
			ТекСтрока.ПодтвержденоОператоромСФ = Значение;		
			
			ЗаполнитьЗначенияСвойств(СтрукутраСтроки, ТекСтрока);
			МассивПакетов.Добавить(СтрукутраСтроки);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ИзменитьПровереноОператоромОтветсвеннымНаСервере(МассивПакетов, "Оператор", Значение, "СФ");
КонецПроцедуры

&НаКлиенте
Процедура ДЗПодтвержденоОтветственнымПоНДССФПриИзменении(Элемент)
	ТекСтрока = Элементы.ДЗ.ДанныеСтроки(Элементы.ДЗ.ТекущаяСтрока);
	МассивПакетов = Новый Массив;
	
	Значение = ТекСтрока.ПодтвержденоОтветственнымПоНДССФ;
	
	Если ТекСтрока.ПТУ_ПДР = Ложь Тогда
		СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");
		ЗаполнитьЗначенияСвойств(СтрукутраСтроки, ТекСтрока);			
		МассивПакетов.Добавить(СтрукутраСтроки);
	Иначе
		Коллекция = ТекСтрока.ПолучитьЭлементы();
		
		Для каждого СтрКол Из Коллекция Цикл
			СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");		
			ТекСтрока = СтрКол;
			
			ТекСтрока.ПодтвержденоОтветственнымПоНДССФ = Значение;		
			
			ЗаполнитьЗначенияСвойств(СтрукутраСтроки, ТекСтрока);
			МассивПакетов.Добавить(СтрукутраСтроки);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ИзменитьПровереноОператоромОтветсвеннымНаСервере(МассивПакетов, "Ответственный", Значение, "СФ");
КонецПроцедуры


&НаСервере
Процедура СравнитьПовторноНаСервере(МассивПакетов)
	
	Для каждого Зн Из МассивПакетов Цикл
		Если ЗначениеЗаполнено(Зн.Документ) И ЗначениеЗаполнено(Зн.ДокументЭДО_СФ) Тогда
			СтРезультатСравнения = Справочники.АК_АлгоритмыРаспознаванияФайлов.СравнитьОбъектИФайл(Зн.ДокументЭДО_СФ, Зн.Документ);
			Зн.РезультатСравненияСФ = СтРезультатСравнения.РезультатСравнения;
			Зн.ЕстьОшибкиСФ = СтРезультатСравнения.ЕстьОшибки;			
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(Зн.Документ) И ЗначениеЗаполнено(Зн.ДокументЭДО_ТОРГ) Тогда
			СтРезультатСравнения = Справочники.АК_АлгоритмыРаспознаванияФайлов.СравнитьОбъектИФайл(Зн.ДокументЭДО_ТОРГ, Зн.Документ);
			Зн.РезультатСравненияТОРГ12 = СтРезультатСравнения.РезультатСравнения;
			Зн.ЕстьОшибкиТОРГ12 = СтРезультатСравнения.ЕстьОшибки;						
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры


&НаКлиенте
Процедура СравнитьПовторно(Команда)
	МассивСтрок = Элементы.ДЗ.ВыделенныеСтроки;		
	МассивПакетов = Новый Массив;
	
	Для каждого Зн Из МассивСтрок Цикл
		СтрукутраСтроки = Новый Структура("ИДСтроки, ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12, ПТУ_ПДР, РезультатСравненияСФ, ЕстьОшибкиСФ, РезультатСравненияТОРГ12, ЕстьОшибкиТОРГ12");		
		ТекСтрока = Элементы.ДЗ.ДанныеСтроки(Зн);
		
		ЗаполнитьЗначенияСвойств(СтрукутраСтроки, ТекСтрока);
		СтрукутраСтроки.ИдСтроки = Зн;
		
		МассивПакетов.Добавить(СтрукутраСтроки);
		
				
		Если ТекСтрока.ПТУ_ПДР = Истина Тогда
			Коллекция = Элементы.ДЗ.ДанныеСтроки(Зн).ПолучитьЭлементы();
			
			Для каждого СтрКол Из Коллекция Цикл
				
				СтрукутраСтроки = Новый Структура("ИДСтроки, ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12, ПТУ_ПДР, РезультатСравненияСФ, ЕстьОшибкиСФ, РезультатСравненияТОРГ12, ЕстьОшибкиТОРГ12");		
				ТекСтрока = СтрКол;	
												
				ЗаполнитьЗначенияСвойств(СтрукутраСтроки, ТекСтрока);
				СтрукутраСтроки.ИдСтроки = СтрКол.ПолучитьИдентификатор();
				
				МассивПакетов.Добавить(СтрукутраСтроки);			
				
			КонецЦикла;		
		КонецЕсли;	
	КонецЦикла;	
	
	СравнитьПовторноНаСервере(МассивПакетов);
	
	
	Для каждого Зн Из МассивПакетов Цикл
		ТекСтрока = Элементы.ДЗ.ДанныеСтроки(Зн.ИДСтроки);
		ЗаполнитьЗначенияСвойств(ТекСтрока, Зн, "РезультатСравненияСФ, ЕстьОшибкиСФ, РезультатСравненияТОРГ12, ЕстьОшибкиТОРГ12");
	КонецЦикла;	
	
	Элементы.ДЗ.Обновить();
КонецПроцедуры


&НаКлиенте
Процедура ПоказатьДокумент(Команда)
	ТекСтрока = Элементы.ДЗ.ДанныеСтроки(Элементы.ДЗ.ТекущаяСтрока);
		
	Если Элементы.ДЗ.ТекущийЭлемент.Имя = "ДЗФайлСФ" Тогда
		Если ЗначениеЗаполнено(ТекСтрока.ФайлСФ) = Истина Тогда
			ИмяФайла = ПолучитьИмяВременногоФайла(".pdf");
			Если ПолучитьФайл(ПолучитьАдресДанныхКартинки(ТекСтрока.ФайлСФ), ИмяФайла, Ложь) = Истина Тогда
				ЗапуститьПриложение(ИмяФайла);
			КонецЕсли;	
		КонецЕсли;	
	ИначеЕсли  Элементы.ДЗ.ТекущийЭлемент.Имя = "ДЗФайлТОРГ12" Тогда
		Если ЗначениеЗаполнено(ТекСтрока.ФайлТОРГ12) = Истина Тогда
			ИмяФайла = ПолучитьИмяВременногоФайла(".pdf");
			Если ПолучитьФайл(ПолучитьАдресДанныхКартинки(ТекСтрока.ФайлТОРГ12), ИмяФайла, Ложь) = Истина Тогда
				ЗапуститьПриложение(ИмяФайла);
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПолучитьАдресДанныхКартинки(Файл)	
	Картинка = Новый Картинка(Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(Файл.Ссылка));
	Возврат ПоместитьВоВременноеХранилище(Картинка);	
КонецФункции

&НаКлиенте
Процедура ОткрытьДокументЭДО(Команда)
	ТекСтрока = Элементы.ДЗ.ДанныеСтроки(Элементы.ДЗ.ТекущаяСтрока);
	
	Если Элементы.ДЗ.ТекущийЭлемент.Имя = "ДЗФайлСФ" Тогда
		Если ЗначениеЗаполнено(ТекСтрока.ДокументЭДО_СФ) = Истина Тогда			
			П = Новый Структура;
			П.Вставить("Ключ", ТекСтрока.ДокументЭДО_СФ);			
			Если ТипЗнч(ТекСтрока.ДокументЭДО_СФ) = Тип("ДокументСсылка.ЭДО_ВходящийДокумент") Тогда
				ОткрытьФорму("Документ.ЭДО_ВходящийДокумент.ФормаОбъекта", П);						
			Иначе
				ОткрытьФорму("Документ.ЭДО_ИсходящийДокумент.ФормаОбъекта", П);			
			КонецЕсли;
		КонецЕсли;	
	ИначеЕсли  Элементы.ДЗ.ТекущийЭлемент.Имя = "ДЗФайлТОРГ12" Тогда
		Если ЗначениеЗаполнено(ТекСтрока.ДокументЭДО_ТОРГ) = Истина Тогда
			П = Новый Структура;
			П.Вставить("Ключ", ТекСтрока.ДокументЭДО_ТОРГ);			
			Если ТипЗнч(ТекСтрока.ДокументЭДО_ТОРГ) = Тип("ДокументСсылка.ЭДО_ВходящийДокумент") Тогда
				ОткрытьФорму("Документ.ЭДО_ВходящийДокумент.ФормаОбъекта", П);						
			Иначе
				ОткрытьФорму("Документ.ЭДО_ИсходящийДокумент.ФормаОбъекта", П);			
			КонецЕсли; 			
		КонецЕсли;
	КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ОткрепитьДокументЭДО(Команда)
	ТекСтрока = Элементы.ДЗ.ДанныеСтроки(Элементы.ДЗ.ТекущаяСтрока);
	
	П = Неопределено;
	
	Если Элементы.ДЗ.ТекущийЭлемент.Имя = "ДЗФайлСФ" Тогда
		Если ЗначениеЗаполнено(ТекСтрока.ДокументЭДО_СФ) = Истина Тогда			
			П = Новый Структура;
			П.Вставить("Ключ", ТекСтрока.ПолучитьИдентификатор());						
			П.Вставить("ИдентификаторДокумента", ТекСтрока.ДокументЭДО_СФ.ИдентификаторДокумента);						
			П.Вставить("ИдентификаторПакета", ТекСтрока.ДокументЭДО_СФ.ИдентификаторПакета);						
			П.Вставить("КаналОбмена", ТекСтрока.ДокументЭДО_СФ.КаналОбмена);						
		КонецЕсли;	
	ИначеЕсли  Элементы.ДЗ.ТекущийЭлемент.Имя = "ДЗФайлТОРГ12" Тогда
		Если ЗначениеЗаполнено(ТекСтрока.ДокументЭДО_ТОРГ) = Истина Тогда
			П = Новый Структура;
			П.Вставить("Ключ", ТекСтрока.ПолучитьИдентификатор());						
			П.Вставить("ИдентификаторДокумента", ТекСтрока.ДокументЭДО_ТОРГ.ИдентификаторДокумента);						
			П.Вставить("ИдентификаторПакета", ТекСтрока.ДокументЭДО_ТОРГ.ИдентификаторПакета);						
			П.Вставить("КаналОбмена", ТекСтрока.ДокументЭДО_ТОРГ.КаналОбмена);						
		КонецЕсли;
	КонецЕсли;
	
	Если П <> Неопределено Тогда
		ОткрепитьДокументЭДОНаСервере(П);
		
		Если Элементы.ДЗ.ТекущийЭлемент.Имя = "ДЗФайлСФ" Тогда
			ТекСтрока.ДокументЭДО_СФ = Неопределено;
			ТекСтрока.ФайлСФ = Неопределено;
			ТекСтрока.ЕстьОшибкиСФ = Неопределено;
			ТекСтрока.РезультатСравненияСФ = "";			
			ТекСтрока.Есть_Вложение_СФ = 0;
		ИначеЕсли  Элементы.ДЗ.ТекущийЭлемент.Имя = "ДЗФайлТОРГ12" Тогда
			ТекСтрока.ДокументЭДО_ТОРГ = Неопределено;
			ТекСтрока.ФайлТОРГ12 = Неопределено;
			ТекСтрока.ЕстьОшибкиТОРГ12 = Неопределено;
			ТекСтрока.РезультатСравненияТОРГ12 = "";			
			ТекСтрока.Есть_Вложение_ТОРГ = 0;
		КонецЕсли;  
	КонецЕсли;	
	
	Элементы.ДЗ.Обновить();
КонецПроцедуры

&НаСервере
Процедура ОткрепитьДокументЭДОНаСервере(Струкутра)	
	Если Струкутра.КаналОбмена = Справочники.ЭДО_КаналыОбмена.СБИС Тогда
		ЭДО_ОбщегоНазначения.ОткрепитьДокументыЭДО(Струкутра.ИдентификаторДокумента,, Струкутра.КаналОбмена);	
	Иначе		
		ЭДО_ОбщегоНазначения.ОткрепитьДокументыЭДО(Струкутра.ИдентификаторДокумента,, Струкутра.КаналОбмена);	
	КонецЕсли;	
КонецПроцедуры	

&НаКлиенте
Процедура ВыводитьИсправления(Команда)
	Элементы.ФормаВыводитьИсправления.Пометка = Не Элементы.ФормаВыводитьИсправления.Пометка;
	
	Элементы.ДЗДатаСФ_Испр_БП.Видимость = Элементы.ФормаВыводитьИсправления.Пометка;
	Элементы.ДЗНомерСФ_Испр_БП.Видимость = Элементы.ФормаВыводитьИсправления.Пометка;
	
	Элементы.ДЗНомерСФ_Испр_Фин.Видимость = Элементы.ФормаВыводитьИсправления.Пометка;
	Элементы.ДЗДатаСФ_Испр_Фин.Видимость = Элементы.ФормаВыводитьИсправления.Пометка;
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьСФ(Команда)
	Элементы.ФормаВыводитьСФ.Пометка = Не Элементы.ФормаВыводитьСФ.Пометка;
	Элементы.ДЗГруппаПрикрепленныеФайлыСФ.Видимость = Элементы.ФормаВыводитьСФ.Пометка;
КонецПроцедуры

&НаКлиенте
Процедура ВыводитьТОРГ(Команда)
	Элементы.ФормаВыводитьТОРГ.Пометка = Не Элементы.ФормаВыводитьТОРГ.Пометка;
	Элементы.ДЗГруппаПрикрепленныеАктыНакладные.Видимость = Элементы.ФормаВыводитьТОРГ.Пометка;
КонецПроцедуры

&НаКлиенте
Процедура ВсеПровереноОператоромТОРГ(Команда)
	МассивСтрок = Элементы.ДЗ.ВыделенныеСтроки;
	
	СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");
	
	МассивПакетов = Новый Массив;
	Для каждого Зн Из МассивСтрок Цикл
		СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");		
		ТекСтрока = Элементы.ДЗ.ДанныеСтроки(Зн);
		
		//ТекСтрока.ПодтвержденоОператоромСФ = Истина;
		ТекСтрока.ПодтвержденоОператоромТОРГ12 = Истина;
		Если ТекСтрока.ПТУ_ПДР = Истина Тогда
			Коллекция = Элементы.ДЗ.ДанныеСтроки(Зн).ПолучитьЭлементы();
			
			Для каждого СтрКол Из Коллекция Цикл
				СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");		
				ТекСтрока = СтрКол;
				
				//ТекСтрока.ПодтвержденоОператоромСФ = Истина;
				ТекСтрока.ПодтвержденоОператоромТОРГ12 = Истина;
				
				ЗаполнитьЗначенияСвойств(СтрукутраСтроки, ТекСтрока);
				МассивПакетов.Добавить(СтрукутраСтроки);
				
			КонецЦикла;	
		Иначе			
			ЗаполнитьЗначенияСвойств(СтрукутраСтроки, ТекСтрока);
			МассивПакетов.Добавить(СтрукутраСтроки);
		КонецЕсли;	
	КонецЦикла;	

	ИзменитьПровереноОператоромОтветсвеннымНаСервере(МассивПакетов, "Оператор", Истина, "ТОРГ");
	
	

КонецПроцедуры

&НаКлиенте
Процедура ВсеПровереноОтветственнымТОРГ(Команда)
	МассивСтрок = Элементы.ДЗ.ВыделенныеСтроки;
	
	СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");
	
	МассивПакетов = Новый Массив;
	Для каждого Зн Из МассивСтрок Цикл
		СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");		
		ТекСтрока = Элементы.ДЗ.ДанныеСтроки(Зн);
		
		ТекСтрока.ПодтвержденоОтветственнымПоНДСТОРГ12 = Истина;
		//ТекСтрока.ПодтвержденоОтветственнымПоНДССФ = Истина;
		Если ТекСтрока.ПТУ_ПДР = Истина Тогда
			Коллекция = Элементы.ДЗ.ДанныеСтроки(Зн).ПолучитьЭлементы();
			
			Для каждого СтрКол Из Коллекция Цикл
				СтрукутраСтроки = Новый Структура("ЭтоЭДО, Документ, ДокументЭДО_СФ, ДокументЭДО_ТОРГ, ФайлСФ, ФайлТОРГ12");		
				ТекСтрока = СтрКол;
				
				ТекСтрока.ПодтвержденоОтветственнымПоНДСТОРГ12 = Истина;
				//ТекСтрока.ПодтвержденоОтветственнымПоНДССФ = Истина;
				
				ЗаполнитьЗначенияСвойств(СтрукутраСтроки, ТекСтрока);
				МассивПакетов.Добавить(СтрукутраСтроки);
				
			КонецЦикла;	
		Иначе			
			ЗаполнитьЗначенияСвойств(СтрукутраСтроки, ТекСтрока);
			МассивПакетов.Добавить(СтрукутраСтроки);
		КонецЕсли;	
	КонецЦикла;	

	ИзменитьПровереноОператоромОтветсвеннымНаСервере(МассивПакетов, "Ответственный", Истина, "ТОРГ");

КонецПроцедуры


