
Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура КоманднаяПанель1Сформировать(Кнопка)
	ОбновитьОтчет();
КонецПроцедуры

Процедура ОбновитьОтчет() Экспорт
	Запрос = Новый Запрос;
	//Запрос.Текст = "ВЫБРАТЬ
	//|	ЗначенияСвойствОбъектов.Объект КАК Вер_Файл,
	//|	ЗначенияСвойствОбъектов.Значение КАК Расп_Файл
	//|ПОМЕСТИТЬ ВТ_Вер_И_Расп_Файлы
	//|ИЗ
	//|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	//|ГДЕ
	//|	ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Файлы_Родитель)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ПрикрепленныеСканыКДокументам.Документ,
	//|	ПрикрепленныеСканыКДокументам.ФайлСФ,
	//|	ПрикрепленныеСканыКДокументам.ФайлТОРГ12,
	//|	ПрикрепленныеСканыКДокументам.Документ.Дата,
	//|	ПрикрепленныеСканыКДокументам.Документ.Контрагент,
	//|	ПрикрепленныеСканыКДокументам.Документ.Организация,
	//|	ПрикрепленныеСканыКДокументам.Документ.СуммаДокумента
	//|ПОМЕСТИТЬ ВТ_ОтобранныеДокументы
	//|ИЗ
	//|	РегистрСведений.ПрикрепленныеСканыКДокументам КАК ПрикрепленныеСканыКДокументам
	//|ГДЕ
	//|	ПрикрепленныеСканыКДокументам.Документ ССЫЛКА Документ.ПоступлениеТоваровУслуг
	//|	И ПрикрепленныеСканыКДокументам.Документ.Контрагент = &Контрагент
	//|	И ПрикрепленныеСканыКДокументам.Документ.Дата МЕЖДУ &ДатаНач И &ДатаКон
	//|	И ПрикрепленныеСканыКДокументам.Документ.Ответственный = &Ответственный
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	ПрикрепленныеСканыКДокументам.Документ,
	//|	ПрикрепленныеСканыКДокументам.ФайлСФ,
	//|	ПрикрепленныеСканыКДокументам.ФайлТОРГ12,
	//|	ПрикрепленныеСканыКДокументам.Документ.Дата,
	//|	ПрикрепленныеСканыКДокументам.Документ.Контрагент,
	//|	ПрикрепленныеСканыКДокументам.Документ.Организация,
	//|	ПрикрепленныеСканыКДокументам.Документ.СуммаДокумента
	//|ИЗ
	//|	РегистрСведений.ПрикрепленныеСканыКДокументам КАК ПрикрепленныеСканыКДокументам
	//|ГДЕ
	//|	ПрикрепленныеСканыКДокументам.Документ ССЫЛКА Документ.ПоступлениеДопРасходов
	//|	И ПрикрепленныеСканыКДокументам.Документ.Контрагент = &Контрагент
	//|	И ПрикрепленныеСканыКДокументам.Документ.Дата МЕЖДУ &ДатаНач И &ДатаКон
	//|	И ПрикрепленныеСканыКДокументам.Документ.Ответственный = &Ответственный
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_ОтобранныеДокументы.Документ,
	//|	ВТ_ОтобранныеДокументы.ФайлСФ,
	//|	ВТ_ОтобранныеДокументы.ФайлТОРГ12,
	//|	ВТ_ОтобранныеДокументы.ДокументДата КАК ДокументДата,
	//|	РезультатСравненияФайлаСОбъектомСФ.РезультатСравнения КАК РезультатСравненияСФ,
	//|	РезультатСравненияФайлаСОбъектомСФ.ЕстьОшибки КАК ЕстьОшибкиСФ,
	//|	РезультатСравненияФайлаСОбъектомТОРГ.РезультатСравнения КАК РезультатСравненияТОРГ12,
	//|	РезультатСравненияФайлаСОбъектомТОРГ.ЕстьОшибки КАК ЕстьОшибкиТОРГ12,
	//|	ВТ_ОтобранныеДокументы.ДокументКонтрагент КАК Контрагент,
	//|	ВТ_ОтобранныеДокументы.ДокументОрганизация КАК Организация,
	//|	ВТ_ОтобранныеДокументы.ДокументСуммаДокумента КАК СуммаДокумента,
	//|	ВТ_Вер_И_Расп_Файлы.Расп_Файл КАК РаспФайлСФ,
	//|	ВТ_Вер_И_Расп_ФайлыТОРГ.Расп_Файл КАК РаспФайлТОРГ
	//|ПОМЕСТИТЬ ВТ_ПредвДанные
	//|ИЗ
	//|	ВТ_ОтобранныеДокументы КАК ВТ_ОтобранныеДокументы
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РезультатСравненияФайлаСОбъектом КАК РезультатСравненияФайлаСОбъектомСФ
	//|		ПО ВТ_ОтобранныеДокументы.Документ = РезультатСравненияФайлаСОбъектомСФ.ОбъектСравнения
	//|			И ВТ_ОтобранныеДокументы.ФайлСФ = РезультатСравненияФайлаСОбъектомСФ.Файл
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РезультатСравненияФайлаСОбъектом КАК РезультатСравненияФайлаСОбъектомТОРГ
	//|		ПО ВТ_ОтобранныеДокументы.Документ = РезультатСравненияФайлаСОбъектомТОРГ.ОбъектСравнения
	//|			И ВТ_ОтобранныеДокументы.ФайлТОРГ12 = РезультатСравненияФайлаСОбъектомТОРГ.Файл
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Вер_И_Расп_Файлы КАК ВТ_Вер_И_Расп_Файлы
	//|		ПО ВТ_ОтобранныеДокументы.ФайлСФ = ВТ_Вер_И_Расп_Файлы.Вер_Файл
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Вер_И_Расп_Файлы КАК ВТ_Вер_И_Расп_ФайлыТОРГ
	//|		ПО ВТ_ОтобранныеДокументы.ФайлТОРГ12 = ВТ_Вер_И_Расп_ФайлыТОРГ.Вер_Файл
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_ПредвДанные.Документ,
	//|	ВТ_ПредвДанные.ФайлСФ,
	//|	ВТ_ПредвДанные.ФайлТОРГ12,
	//|	ВТ_ПредвДанные.ДокументДата КАК ДокументДата,
	//|	ВТ_ПредвДанные.РезультатСравненияСФ,
	//|	ВТ_ПредвДанные.ЕстьОшибкиСФ,
	//|	ВТ_ПредвДанные.РезультатСравненияТОРГ12,
	//|	ВТ_ПредвДанные.ЕстьОшибкиТОРГ12,
	//|	ВТ_ПредвДанные.Контрагент,
	//|	ВТ_ПредвДанные.Организация,
	//|	ВТ_ПредвДанные.СуммаДокумента,
	//|	ВТ_ПредвДанные.РаспФайлСФ КАК ФайлСФРаспознанный,
	//|	ВТ_ПредвДанные.РаспФайлТОРГ КАК ФайлТОРГ12Распознанный, 
	//|	РезультатСравненияФайлаСОбъектомСФ.РезультатСравнения КАК РезультатСравненияСФ_С_РаспознаннымФайлом,
	//|	РезультатСравненияФайлаСОбъектомСФ.ЕстьОшибки КАК ЕстьОшибкиРаспСФ,
	//|	РезультатСравненияФайлаСОбъектомТОРГ.РезультатСравнения КАК РезультатСравненияТОРГ_С_РаспознаннымФайлом,
	//|	РезультатСравненияФайлаСОбъектомТОРГ.ЕстьОшибки КАК ЕстьОшибкиРаспТОРГ12
	//|ИЗ
	//|	ВТ_ПредвДанные КАК ВТ_ПредвДанные
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РезультатСравненияФайлаСОбъектом КАК РезультатСравненияФайлаСОбъектомСФ
	//|		ПО ВТ_ПредвДанные.РаспФайлСФ = РезультатСравненияФайлаСОбъектомСФ.ОбъектСравнения
	//|			И ВТ_ПредвДанные.ФайлСФ = РезультатСравненияФайлаСОбъектомСФ.Файл
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РезультатСравненияФайлаСОбъектом КАК РезультатСравненияФайлаСОбъектомТОРГ
	//|		ПО ВТ_ПредвДанные.РаспФайлТОРГ = РезультатСравненияФайлаСОбъектомТОРГ.ОбъектСравнения
	//|			И ВТ_ПредвДанные.ФайлТОРГ12 = РезультатСравненияФайлаСОбъектомТОРГ.Файл
	//|
	//|УПОРЯДОЧИТЬ ПО
	//|	ДокументДата";
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЭДО_СопоставлениеДокументов.Документ,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.СчетФактура)
	|					ИЛИ ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.УПД)
	|				ТОГДА ЭДО_СопоставлениеДокументов.ДокументЭДО
	|			ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЭДО_ВходящийДокумент.ПустаяСсылка)
	|		КОНЕЦ) КАК ДокументЭДО_СФ,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.ТоварнаяНакладная)
	|					ИЛИ ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.УПД)
	|					ИЛИ ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.АктВыполненныхРабот)
	|				ТОГДА ЭДО_СопоставлениеДокументов.ДокументЭДО
	|			ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЭДО_ВходящийДокумент.ПустаяСсылка)
	|		КОНЕЦ) КАК ДокументЭДО_ТОРГ,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.СчетФактура)
	|					ИЛИ ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.УПД)
	|				ТОГДА ЭДО_СопоставлениеДокументов.ДокументЭДО.ФайлPDF
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Файлы.ПустаяСсылкА)
	|		КОНЕЦ) КАК ФайлСФ,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.СчетФактура)
	|					ИЛИ ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.УПД)
	|				ТОГДА ЭДО_СопоставлениеДокументов.ПодтверженоОператором
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ПодтвержденоОператоромСФ,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.СчетФактура)
	|					ИЛИ ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.УПД)
	|				ТОГДА ЭДО_СопоставлениеДокументов.ПодтвержденоОтветственным
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ПодтвержденоОтветственнымПоНДССФ,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.ТоварнаяНакладная)
	|					ИЛИ ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.УПД)
	|					ИЛИ ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.АктВыполненныхРабот)
	|				ТОГДА ЭДО_СопоставлениеДокументов.ДокументЭДО.ФайлPDF
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Файлы.ПустаяСсылкА)
	|		КОНЕЦ) КАК ФайлТОРГ12,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.ТоварнаяНакладная)
	|					ИЛИ ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.УПД)
	|					ИЛИ ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.АктВыполненныхРабот)
	|				ТОГДА ЭДО_СопоставлениеДокументов.ПодтверженоОператором
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ПодтвержденоОператоромТОРГ12,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.ТоварнаяНакладная)
	|					ИЛИ ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.УПД)
	|					ИЛИ ЭДО_СопоставлениеДокументов.ВидДокумента = ЗНАЧЕНИЕ(Перечисление.ЭДО_ТипыДокументов.АктВыполненныхРабот)
	|				ТОГДА ЭДО_СопоставлениеДокументов.ПодтвержденоОтветственным
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ПодтвержденоОтветственнымПоНДСТОРГ12
	|ПОМЕСТИТЬ ВТ_ЭДО_Предв
	|ИЗ
	|	РегистрСведений.ЭДО_СопоставлениеДокументов КАК ЭДО_СопоставлениеДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	ЭДО_СопоставлениеДокументов.Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЭДО_Предв.Документ,
	|	ВТ_ЭДО_Предв.ДокументЭДО_СФ,
	|	ВТ_ЭДО_Предв.ДокументЭДО_ТОРГ,
	|	ВТ_ЭДО_Предв.ФайлСФ,
	|	ВТ_ЭДО_Предв.ПодтвержденоОператоромСФ,
	|	ВТ_ЭДО_Предв.ПодтвержденоОтветственнымПоНДССФ,
	|	ВТ_ЭДО_Предв.ФайлТОРГ12,
	|	ВТ_ЭДО_Предв.ПодтвержденоОператоромТОРГ12,
	|	ВТ_ЭДО_Предв.ПодтвержденоОтветственнымПоНДСТОРГ12,
	|	РезультатСравненияФайлаСОбъектом.РезультатСравнения КАК РезультатСравненияСФ,
	|	РезультатСравненияФайлаСОбъектом.ЕстьОшибки КАК ЕстьОшибкиСФ,
	|	РезультатСравненияФайлаСОбъектомТОРГ.РезультатСравнения КАК РезультатСравненияТОРГ12,
	|	РезультатСравненияФайлаСОбъектомТОРГ.ЕстьОшибки КАК ЕстьОшибкиТОРГ12,
	|	ВТ_ЭДО_Предв.ДокументЭДО_СФ.ФайлXML КАК РаспФайлСФ,
	|	ВТ_ЭДО_Предв.ДокументЭДО_ТОРГ.ФайлXML КАК РаспФайлТОРГ,
	|	"""" КАК РезультатСравненияСФ_С_РаспознаннымФайлом,
	|	ЛОЖЬ КАК ЕстьОшибкиРаспСФ,
	|	"""" КАК РезультатСравненияТОРГ_С_РаспознаннымФайлом,
	|	ЛОЖЬ КАК ЕстьОшибкиРаспТОРГ12
	|ПОМЕСТИТЬ ВТ_ДанныеЭДО
	|ИЗ
	|	ВТ_ЭДО_Предв КАК ВТ_ЭДО_Предв
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РезультатСравненияФайлаСОбъектом КАК РезультатСравненияФайлаСОбъектом
	|		ПО ВТ_ЭДО_Предв.Документ = РезультатСравненияФайлаСОбъектом.ОбъектСравнения
	|			И ВТ_ЭДО_Предв.ДокументЭДО_СФ = РезультатСравненияФайлаСОбъектом.Файл
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РезультатСравненияФайлаСОбъектом КАК РезультатСравненияФайлаСОбъектомТОРГ
	|		ПО ВТ_ЭДО_Предв.Документ = РезультатСравненияФайлаСОбъектомТОРГ.ОбъектСравнения
	|			И ВТ_ЭДО_Предв.ДокументЭДО_ТОРГ = РезультатСравненияФайлаСОбъектомТОРГ.Файл
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Объект КАК Вер_Файл,
	|	ЗначенияСвойствОбъектов.Значение КАК Расп_Файл
	|ПОМЕСТИТЬ ВТ_Вер_И_Расп_Файлы
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Файлы_Родитель)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ПоступлениеТоваровУслуг.СуммаДокумента,
	|	ПоступлениеТоваровУслуг.Контрагент,
	|	ПоступлениеТоваровУслуг.Организация
	|ПОМЕСТИТЬ ВТ_ПТУ
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ПоступлениеТоваровУслуг.Контрагент = &Контрагент
	|	И ПоступлениеТоваровУслуг.Контрагент.ОсновнойБухгалтерПокупателя = &Ответственный
	|	И ПоступлениеТоваровУслуг.ПометкаУдаления = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрикрепленныеСканыКДокументам.Документ,
	|	ПрикрепленныеСканыКДокументам.ФайлСФ,
	|	ПрикрепленныеСканыКДокументам.ФайлТОРГ12,
	|	ПрикрепленныеСканыКДокументам.ПодтвержденоОператоромСФ,
	|	ПрикрепленныеСканыКДокументам.ПодтвержденоОтветственнымПоНДССФ,
	|	ПрикрепленныеСканыКДокументам.ПодтвержденоОператоромТОРГ12,
	|	ПрикрепленныеСканыКДокументам.ПодтвержденоОтветственнымПоНДСТОРГ12
	|ПОМЕСТИТЬ ВТ_ОтобранныеДокументы
	|ИЗ
	|	РегистрСведений.ПрикрепленныеСканыКДокументам КАК ПрикрепленныеСканыКДокументам
	|ГДЕ
	|	ПрикрепленныеСканыКДокументам.Документ ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|	И ПрикрепленныеСканыКДокументам.Документ В
	|			(ВЫБРАТЬ
	|				ВТ_ПТУ.Ссылка
	|			ИЗ
	|				ВТ_ПТУ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОтобранныеДокументы.Документ,
	|	ВТ_ОтобранныеДокументы.ФайлСФ,
	|	ВТ_ОтобранныеДокументы.ПодтвержденоОператоромСФ,
	|	ВТ_ОтобранныеДокументы.ПодтвержденоОтветственнымПоНДССФ,
	|	ВТ_ОтобранныеДокументы.ФайлТОРГ12,
	|	ВТ_ОтобранныеДокументы.ПодтвержденоОператоромТОРГ12,
	|	ВТ_ОтобранныеДокументы.ПодтвержденоОтветственнымПоНДСТОРГ12,
	|	РезультатСравненияФайлаСОбъектомСФ.РезультатСравнения КАК РезультатСравненияСФ,
	|	РезультатСравненияФайлаСОбъектомСФ.ЕстьОшибки КАК ЕстьОшибкиСФ,
	|	РезультатСравненияФайлаСОбъектомТОРГ.РезультатСравнения КАК РезультатСравненияТОРГ12,
	|	РезультатСравненияФайлаСОбъектомТОРГ.ЕстьОшибки КАК ЕстьОшибкиТОРГ12,
	|	ВТ_Вер_И_Расп_Файлы.Расп_Файл КАК РаспФайлСФ,
	|	ВТ_Вер_И_Расп_ФайлыТОРГ.Расп_Файл КАК РаспФайлТОРГ
	|ПОМЕСТИТЬ ВТ_ПредвДанные
	|ИЗ
	|	ВТ_ОтобранныеДокументы КАК ВТ_ОтобранныеДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РезультатСравненияФайлаСОбъектом КАК РезультатСравненияФайлаСОбъектомСФ
	|		ПО ВТ_ОтобранныеДокументы.Документ = РезультатСравненияФайлаСОбъектомСФ.ОбъектСравнения
	|			И ВТ_ОтобранныеДокументы.ФайлСФ = РезультатСравненияФайлаСОбъектомСФ.Файл
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РезультатСравненияФайлаСОбъектом КАК РезультатСравненияФайлаСОбъектомТОРГ
	|		ПО ВТ_ОтобранныеДокументы.Документ = РезультатСравненияФайлаСОбъектомТОРГ.ОбъектСравнения
	|			И ВТ_ОтобранныеДокументы.ФайлТОРГ12 = РезультатСравненияФайлаСОбъектомТОРГ.Файл
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Вер_И_Расп_Файлы КАК ВТ_Вер_И_Расп_Файлы
	|		ПО ВТ_ОтобранныеДокументы.ФайлСФ = ВТ_Вер_И_Расп_Файлы.Вер_Файл
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Вер_И_Расп_Файлы КАК ВТ_Вер_И_Расп_ФайлыТОРГ
	|		ПО ВТ_ОтобранныеДокументы.ФайлТОРГ12 = ВТ_Вер_И_Расп_ФайлыТОРГ.Вер_Файл
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПредвДанные.Документ,
	|	ЗНАЧЕНИЕ(Документ.ЭДО_ВходящийДокумент.ПустаяСсылка) КАК ДокументЭДО_СФ,
	|	ЗНАЧЕНИЕ(Документ.ЭДО_ВходящийДокумент.ПустаяСсылка) КАК ДокументЭДО_ТОРГ,
	|	ВТ_ПредвДанные.ФайлСФ,
	|	ВТ_ПредвДанные.ПодтвержденоОператоромСФ,
	|	ВТ_ПредвДанные.ПодтвержденоОтветственнымПоНДССФ,
	|	ВТ_ПредвДанные.ФайлТОРГ12,
	|	ВТ_ПредвДанные.ПодтвержденоОператоромТОРГ12,
	|	ВТ_ПредвДанные.ПодтвержденоОтветственнымПоНДСТОРГ12,
	|	ВТ_ПредвДанные.РезультатСравненияСФ,
	|	ВТ_ПредвДанные.ЕстьОшибкиСФ,
	|	ВТ_ПредвДанные.РезультатСравненияТОРГ12,
	|	ВТ_ПредвДанные.ЕстьОшибкиТОРГ12,
	|	ВТ_ПредвДанные.РаспФайлСФ,
	|	ВТ_ПредвДанные.РаспФайлТОРГ,
	|	РезультатСравненияФайлаСОбъектомСФ.РезультатСравнения КАК РезультатСравненияСФ_С_РаспознаннымФайлом,
	|	РезультатСравненияФайлаСОбъектомСФ.ЕстьОшибки КАК ЕстьОшибкиРаспСФ,
	|	РезультатСравненияФайлаСОбъектомТОРГ.РезультатСравнения КАК РезультатСравненияТОРГ_С_РаспознаннымФайлом,
	|	РезультатСравненияФайлаСОбъектомТОРГ.ЕстьОшибки КАК ЕстьОшибкиРаспТОРГ12
	|ПОМЕСТИТЬ ВТ_ДанныеПоРаспознаванию
	|ИЗ
	|	ВТ_ПредвДанные КАК ВТ_ПредвДанные
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РезультатСравненияФайлаСОбъектом КАК РезультатСравненияФайлаСОбъектомСФ
	|		ПО ВТ_ПредвДанные.РаспФайлСФ = РезультатСравненияФайлаСОбъектомСФ.ОбъектСравнения
	|			И ВТ_ПредвДанные.ФайлСФ = РезультатСравненияФайлаСОбъектомСФ.Файл
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РезультатСравненияФайлаСОбъектом КАК РезультатСравненияФайлаСОбъектомТОРГ
	|		ПО ВТ_ПредвДанные.РаспФайлТОРГ = РезультатСравненияФайлаСОбъектомТОРГ.ОбъектСравнения
	|			И ВТ_ПредвДанные.ФайлТОРГ12 = РезультатСравненияФайлаСОбъектомТОРГ.Файл
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ДанныеЭДО.Документ,
	|	ВТ_ДанныеЭДО.ДокументЭДО_СФ,
	|	ВТ_ДанныеЭДО.ДокументЭДО_ТОРГ,
	|	ВТ_ДанныеЭДО.ФайлСФ,
	|	ВТ_ДанныеЭДО.ПодтвержденоОператоромСФ,
	|	ВТ_ДанныеЭДО.ПодтвержденоОтветственнымПоНДССФ,
	|	ВТ_ДанныеЭДО.ФайлТОРГ12,
	|	ВТ_ДанныеЭДО.ПодтвержденоОператоромТОРГ12,
	|	ВТ_ДанныеЭДО.ПодтвержденоОтветственнымПоНДСТОРГ12,
	|	ВТ_ДанныеЭДО.РезультатСравненияСФ,
	|	ВТ_ДанныеЭДО.ЕстьОшибкиСФ,
	|	ВТ_ДанныеЭДО.РезультатСравненияТОРГ12,
	|	ВТ_ДанныеЭДО.ЕстьОшибкиТОРГ12,
	|	ЗНАЧЕНИЕ(Справочник.Файлы.ПустаяСсылка),
	|	ЗНАЧЕНИЕ(Справочник.Файлы.ПустаяСсылка),
	|	ВТ_ДанныеЭДО.РезультатСравненияСФ_С_РаспознаннымФайлом,
	|	ВТ_ДанныеЭДО.ЕстьОшибкиРаспСФ,
	|	ВТ_ДанныеЭДО.РезультатСравненияТОРГ_С_РаспознаннымФайлом,
	|	ВТ_ДанныеЭДО.ЕстьОшибкиРаспТОРГ12
	|ИЗ
	|	ВТ_ДанныеЭДО КАК ВТ_ДанныеЭДО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеДопРасходовТовары.Партия,
	|	СУММА(ВЫБОР
	|			КОГДА ПоступлениеДопРасходовТовары.Ссылка.ВариантРасчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРасчетаНДС.НДСсверху)
	|				ТОГДА ПоступлениеДопРасходовТовары.СуммаРаспределено + ПоступлениеДопРасходовТовары.СуммаНДСРаспределено
	|			ИНАЧЕ ПоступлениеДопРасходовТовары.СуммаРаспределено + ПоступлениеДопРасходовТовары.СуммаНДСРаспределено
	|		КОНЕЦ) КАК СуммаДопРасходов,
	|	СУММА(ПоступлениеДопРасходовТовары.СуммаНДСРаспределено) КАК СуммаНДСРаспределено
	|ПОМЕСТИТЬ ВТ_ПДР
	|ИЗ
	|	Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеДопРасходовТовары.Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.Ссылка,
	|	ПоступлениеТоваровУслугТовары.СуммаНДС
	|ПОМЕСТИТЬ ВТ_НДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТ_ПТУ.Ссылка
	|			ИЗ
	|				ВТ_ПТУ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугУслуги.Ссылка,
	|	ПоступлениеТоваровУслугУслуги.СуммаНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
	|ГДЕ
	|	ПоступлениеТоваровУслугУслуги.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТ_ПТУ.Ссылка
	|			ИЗ
	|				ВТ_ПТУ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугОборудование.Ссылка,
	|	ПоступлениеТоваровУслугОборудование.СуммаНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПоступлениеТоваровУслугОборудование
	|ГДЕ
	|	ПоступлениеТоваровУслугОборудование.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТ_ПТУ.Ссылка
	|			ИЗ
	|				ВТ_ПТУ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_НДС.Ссылка,
	|	СУММА(ВТ_НДС.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ВТ_СуммаНДС
	|ИЗ
	|	ВТ_НДС КАК ВТ_НДС
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_НДС.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПТУ.Ссылка КАК Документ,
	|	ВТ_ПТУ.Контрагент,
	|	ВТ_ПТУ.Организация,
	|	ВТ_ПТУ.СуммаДокумента,
	|	ЕСТЬNULL(ВТ_ПДР.СуммаДопРасходов, 0) КАК СуммаДопРасходов,
	|	ЕСТЬNULL(ВТ_ПДР.СуммаНДСРаспределено, 0) КАК СуммаНДСДопРасходов,
	|	ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ФайлСФ, ЗНАЧЕНИЕ(Справочник.Файлы.ПустаяСсылка)) КАК ФайлСФ,
	|	ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ФайлТОРГ12, ЗНАЧЕНИЕ(Справочник.Файлы.ПустаяСсылка)) КАК ФайлТОРГ12,
	|	ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ПодтвержденоОператоромСФ, ЛОЖЬ) КАК ПодтвержденоОператоромСФ,
	|	ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ПодтвержденоОтветственнымПоНДССФ, ЛОЖЬ) КАК ПодтвержденоОтветственнымПоНДССФ,
	|	ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ПодтвержденоОператоромТОРГ12, ЛОЖЬ) КАК ПодтвержденоОператоромТОРГ12,
	|	ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ПодтвержденоОтветственнымПоНДСТОРГ12, ЛОЖЬ) КАК ПодтвержденоОтветственнымПоНДСТОРГ12,
	|	ВТ_ДанныеПоРаспознаванию.РезультатСравненияСФ КАК РезультатСравненияСФ,
	|	ВТ_ДанныеПоРаспознаванию.ЕстьОшибкиСФ,
	|	ВТ_ДанныеПоРаспознаванию.РезультатСравненияТОРГ12,
	|	ВТ_ДанныеПоРаспознаванию.ЕстьОшибкиТОРГ12,
	|	ВТ_ДанныеПоРаспознаванию.РаспФайлСФ КАК ФайлСФРаспознанный,
	|	ВТ_ДанныеПоРаспознаванию.РаспФайлТОРГ КАК ФайлТОРГ12Распознанный,
	|	ВТ_ДанныеПоРаспознаванию.РезультатСравненияСФ_С_РаспознаннымФайлом,
	|	ВТ_ДанныеПоРаспознаванию.ЕстьОшибкиРаспСФ,
	|	ВТ_ДанныеПоРаспознаванию.РезультатСравненияТОРГ_С_РаспознаннымФайлом,
	|	ВТ_ДанныеПоРаспознаванию.ЕстьОшибкиРаспТОРГ12,
	|	ВТ_СуммаНДС.СуммаНДС,
	|	ВТ_ДанныеПоРаспознаванию.ДокументЭДО_СФ,
	|	ВТ_ДанныеПоРаспознаванию.ДокументЭДО_ТОРГ
	|ИЗ
	|	ВТ_ПТУ КАК ВТ_ПТУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПДР КАК ВТ_ПДР
	|		ПО ВТ_ПТУ.Ссылка = ВТ_ПДР.Партия
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДанныеПоРаспознаванию КАК ВТ_ДанныеПоРаспознаванию
	|		ПО ВТ_ПТУ.Ссылка = ВТ_ДанныеПоРаспознаванию.Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СуммаНДС КАК ВТ_СуммаНДС
	|		ПО ВТ_ПТУ.Ссылка = ВТ_СуммаНДС.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &Фильтр = ""Все""
	|				ТОГДА ИСТИНА
	|			КОГДА &Фильтр = ""Проблемные""
	|				ТОГДА ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ЕстьОшибкиСФ, ИСТИНА) = ИСТИНА
	|							И ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ПодтвержденоОператоромСФ, ЛОЖЬ) = ЛОЖЬ
	|						ИЛИ ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ЕстьОшибкиТОРГ12, ИСТИНА) = ИСТИНА
	|							И ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ПодтвержденоОператоромТОРГ12, ЛОЖЬ) = ЛОЖЬ
	|			КОГДА &Фильтр = ""ПроблемныеСФ""
	|				ТОГДА ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ЕстьОшибкиСФ, ИСТИНА) = ИСТИНА
	|						И ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ПодтвержденоОператоромСФ, ЛОЖЬ) = ЛОЖЬ
	|			КОГДА &Фильтр = ""ПроблемныеНакладные""
	|				ТОГДА ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ЕстьОшибкиТОРГ12, ИСТИНА) = ИСТИНА
	|						И ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ПодтвержденоОператоромТОРГ12, ЛОЖЬ) = ЛОЖЬ
	|			КОГДА &Фильтр = ""НуждаютсяВПодтверждении""
	|				ТОГДА ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ПодтвержденоОператоромСФ, ЛОЖЬ) = ИСТИНА
	|							И ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ПодтвержденоОтветственнымПоНДССФ, ЛОЖЬ) = ЛОЖЬ
	|						ИЛИ ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ПодтвержденоОператоромТОРГ12, ЛОЖЬ) = ИСТИНА
	|							И ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ПодтвержденоОтветственнымПоНДСТОРГ12, ЛОЖЬ) = ЛОЖЬ
	|		КОНЕЦ
	|	И ВТ_СуммаНДС.СуммаНДС <> 0
	|	И ВЫБОР
	|			КОГДА &ТолькоПрикрепленные = ИСТИНА
	|					И &Фильтр = ""Проблемные""
	|				ТОГДА ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ФайлСФ, ЗНАЧЕНИЕ(Справочник.Файлы.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Файлы.ПустаяСсылка)
	|						ИЛИ ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ФайлТОРГ12, ЗНАЧЕНИЕ(Справочник.Файлы.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Файлы.ПустаяСсылка)
	|			КОГДА &ТолькоПрикрепленные = ИСТИНА
	|					И &Фильтр = ""ПроблемныеСФ""
	|				ТОГДА ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ФайлСФ, ЗНАЧЕНИЕ(Справочник.Файлы.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Файлы.ПустаяСсылка)
	|			КОГДА &ТолькоПрикрепленные = ИСТИНА
	|					И &Фильтр = ""ПроблемныеНакладные""
	|				ТОГДА ЕСТЬNULL(ВТ_ДанныеПоРаспознаванию.ФайлТОРГ12, ЗНАЧЕНИЕ(Справочник.Файлы.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.Файлы.ПустаяСсылка)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ТолькоЭДО = ИСТИНА
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТ_ПТУ.Ссылка.Дата";
	
	Запрос.УстановитьПараметр("Фильтр", ЭтаФорма.ВидОтчета);
	
	Запрос.УстановитьПараметр("ТолькоПрикрепленные", ЭтаФорма.ТолькоПрикрепленные);
	Запрос.УстановитьПараметр("ТолькоЭДО", ЭтаФорма.ТолькоЭДО);
	
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНач));
	Если ЗначениеЗаполнено(ДатаКон) = Истина Тогда
		Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаКон));
	Иначе
		Запрос.УстановитьПараметр("ДатаКон", КонецГода(ТекущаяДата()));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Контрагент", ЭтотОбъект.Контрагент);
	Запрос.УстановитьПараметр("Ответственный", ЭтотОбъект.Пользователь);
	
	Если ЗначениеЗаполнено(ЭтотОбъект.Контрагент) = Ложь Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ПрикрепленныеСканыКДокументам.Документ.Контрагент = &Контрагент", "");		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ПоступлениеТоваровУслуг.Контрагент = &Контрагент", "");				
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ЭтотОбъект.Пользователь) = Ложь Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ПрикрепленныеСканыКДокументам.Документ.Ответственный = &Ответственный", "");		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И ПоступлениеТоваровУслуг.Контрагент.ОсновнойБухгалтерПокупателя = &Ответственный", "");		
		
	КонецЕсли;
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	ЭтотОбъект.Результат.Загрузить(ТЗ);
КонецПроцедуры	

Процедура НастройкаПериодаНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = НастройкаПериода.ПолучитьДатуОкончания();		
	КонецЕсли;
	
КонецПроцедуры

Процедура ТЗДокументовПриАктивизацииЯчейки(Элемент)
	
	ТС = Элемент.ТекущаяСтрока;
	Если ЗначениеЗаполнено(ТС) = Ложь Тогда
		ТаблицаСравнения.Очистить();
		ЭтаФорма.Дерево.Строки.Очистить();
		Возврат;
	КонецЕсли;	
	
	ТК = Элемент.ТекущаяКолонка;	
	Если ТК.Имя = "ФайлТОРГ12" ИЛИ ТК.Имя = "ФайлСФ" ИЛИ ТК.Имя = "ФайлСФРаспознанный" ИЛИ ТК.Имя = "ФайлТОРГ12Распознанный" Тогда
		Если ЗначениеЗаполнено(ТС[ТК.Имя]) = Ложь Тогда
			ТаблицаСравнения.Очистить();
			ЭтаФорма.Дерево.Строки.Очистить();
			Возврат;
		КонецЕсли;	
		
		Если ТК.Имя = "ФайлТОРГ12" Тогда
			РезультатСравнения = ТС.РезультатСравненияТОРГ12;			
			//ЭлементыФормы.ТаблицаСравнения.Колонки.ЗначениеВОбъекте.ТекстШапки = "Данные в документе";
			ЭлементыФормы.Дерево.Колонки.ЗначениеВОбъекте.ТекстШапки = "Данные в документе";			
		ИначеЕсли ТК.Имя = "ФайлСФ" Тогда 
			РезультатСравнения = ТС.РезультатСравненияСФ;
			//ЭлементыФормы.ТаблицаСравнения.Колонки.ЗначениеВОбъекте.ТекстШапки = "Данные в документе";
			ЭлементыФормы.Дерево.Колонки.ЗначениеВОбъекте.ТекстШапки = "Данные в документе";
		ИначеЕсли ТК.Имя = "ФайлСФРаспознанный" Тогда 
			РезультатСравнения = ТС.РезультатСравненияСФ_С_РаспознаннымФайлом;	
			//ЭлементыФормы.ТаблицаСравнения.Колонки.ЗначениеВОбъекте.ТекстШапки = "Данные в распознанном файле";
			ЭлементыФормы.Дерево.Колонки.ЗначениеВОбъекте.ТекстШапки = "Данные в распознанном файле";
		ИначеЕсли ТК.Имя = "ФайлТОРГ12Распознанный" Тогда 
			РезультатСравнения = ТС.РезультатСравненияТОРГ_С_РаспознаннымФайлом;		
			//ЭлементыФормы.ТаблицаСравнения.Колонки.ЗначениеВОбъекте.ТекстШапки = "Данные в распознанном файле";
			ЭлементыФормы.Дерево.Колонки.ЗначениеВОбъекте.ТекстШапки = "Данные в распознанном файле";
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(РезультатСравнения) Тогда		
			Попытка 
				ТЗ = ЗначениеИзСтрокиВнутр(РезультатСравнения);			
			Исключение
				ТаблицаСравнения.Очистить();
				ЭтаФорма.Дерево.Строки.Очистить();
				Возврат;
			КонецПопытки;		
		Иначе
			ТаблицаСравнения.Очистить();
			Возврат;
		КонецЕсли;
		
		Если ТипЗнч(ТЗ) = Тип("ТаблицаЗначений") Тогда
		//	ЭтаФорма.ТаблицаСравнения = ТЗ;
		//	ЭлементыФормы.ТаблицаСравнения.Колонки.ДанныеВРаспознанном.Видимость = Ложь;
			ЭлементыФормы.Дерево.Колонки.ДанныеВРаспознанном.Видимость = Ложь;		
			ЗаполнитьДеревоЗначений(ТЗ);
		КонецЕсли;			
		
		
	ИначеЕсли ТК.Имя = "СФ" Тогда
		РезультатСравнения = ТС.РезультатСравненияСФ;
		РезультатСравнения1 = ТС.РезультатСравненияСФ_С_РаспознаннымФайлом;
		
		Если ЗначениеЗаполнено(РезультатСравнения) Тогда		
			Попытка 
				ТЗ = ЗначениеИзСтрокиВнутр(РезультатСравнения);			
			Исключение
				ТаблицаСравнения.Очистить();
				ЭтаФорма.Дерево.Строки.Очистить();
				Возврат;
			КонецПопытки;		
		Иначе
			ТаблицаСравнения.Очистить();
			ЭтаФорма.Дерево.Строки.Очистить();
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РезультатСравнения1) Тогда		
			Попытка 
				ТЗ1 = ЗначениеИзСтрокиВнутр(РезультатСравнения1);			
			Исключение
				ТаблицаСравнения.Очистить();
				ЭтаФорма.Дерево.Строки.Очистить();
				Возврат;
			КонецПопытки;		
		Иначе
			ТаблицаСравнения.Очистить();
			ЭтаФорма.Дерево.Строки.Очистить();
			Возврат;
		КонецЕсли;
		
		ТЗ.Колонки.Добавить("ДанныеВРаспознанном");
		
		Для каждого Стр Из ТЗ1 Цикл
			Фильтр = Новый Структура("Проверка", );
			
			СтрТЗ = ТЗ.Найти(Стр.Проверка, "Проверка");
			Если СтрТЗ <> Неопределено Тогда
				СтрТЗ.ДанныеВРаспознанном = Стр.ЗначениеВОбъекте;
			КонецЕсли;	
		КонецЦикла;	
		
		
		Если ТипЗнч(ТЗ) = Тип("ТаблицаЗначений") Тогда
			ЭтаФорма.ТаблицаСравнения = ТЗ;
			//ЭлементыФормы.ТаблицаСравнения.Колонки.ДанныеВРаспознанном.Видимость = Истина;
			//ЭлементыФормы.ТаблицаСравнения.Колонки.ЗначениеВОбъекте.ТекстШапки = "Данные в документе";
			
			ЭлементыФормы.Дерево.Колонки.ЗначениеВОбъекте.ТекстШапки = "Данные в документе";
			ЭлементыФормы.Дерево.Колонки.ДанныеВРаспознанном.Видимость = Истина;		
			ЗаполнитьДеревоЗначений(ТЗ);
			
			//ЭлементыФормы.ТаблицаСравнения.СоздатьКолонки();
		КонецЕсли;
	ИначеЕсли ТК.Имя = "Накладная" Тогда
		РезультатСравнения = ТС.РезультатСравненияТОРГ12;
		РезультатСравнения1 = ТС.РезультатСравненияТОРГ_С_РаспознаннымФайлом;
		
		Если ЗначениеЗаполнено(РезультатСравнения) Тогда		
			Попытка 
				ТЗ = ЗначениеИзСтрокиВнутр(РезультатСравнения);			
			Исключение
				ТаблицаСравнения.Очистить();
				ЭтаФорма.Дерево.Строки.Очистить();
				Возврат;
			КонецПопытки;		
		Иначе
			ТаблицаСравнения.Очистить();
			ЭтаФорма.Дерево.Строки.Очистить();
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(РезультатСравнения1) Тогда		
			Попытка 
				ТЗ1 = ЗначениеИзСтрокиВнутр(РезультатСравнения1);			
			Исключение
				ТаблицаСравнения.Очистить();
				ЭтаФорма.Дерево.Строки.Очистить();
				Возврат;
			КонецПопытки;		
		Иначе
			ТаблицаСравнения.Очистить();
			Возврат;
		КонецЕсли;
		
		ТЗ.Колонки.Добавить("ДанныеВРаспознанном");
		
		Для каждого Стр Из ТЗ1 Цикл
			Фильтр = Новый Структура("Проверка", );
			
			СтрТЗ = ТЗ.Найти(Стр.Проверка, "Проверка");
			Если СтрТЗ <> Неопределено Тогда
				СтрТЗ.ДанныеВРаспознанном = Стр.ЗначениеВОбъекте;
			КонецЕсли;	
		КонецЦикла;	
		
		
		Если ТипЗнч(ТЗ) = Тип("ТаблицаЗначений") Тогда
			ЭтаФорма.ТаблицаСравнения = ТЗ;
			//ЭлементыФормы.ТаблицаСравнения.Колонки.ДанныеВРаспознанном.Видимость = Истина;
			//ЭлементыФормы.ТаблицаСравнения.Колонки.ЗначениеВОбъекте.ТекстШапки = "Данные в документе";				
			
			ЭлементыФормы.Дерево.Колонки.ДанныеВРаспознанном.Видимость = Истина;
			ЭлементыФормы.Дерево.Колонки.ЗначениеВОбъекте.ТекстШапки = "Данные в документе";				
		КонецЕсли;		
	Иначе
		ТаблицаСравнения.Очистить();
		ЭтаФорма.Дерево.Строки.Очистить();
		Возврат;
	КонецЕсли;	
	
	
КонецПроцедуры

Процедура ТЗДокументовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если Колонка.Имя = "Документ" Или Колонка.Имя = "Организация" Или Колонка.Имя = "Контрагент" Тогда
		Значение = ВыбраннаяСтрока[Колонка.Имя];
		Если ЗначениеЗаполнено(Значение) Тогда
			ОткрытьЗначение(Значение);
		КонецЕсли;	
		//Документ = ВыбраннаяСтрока.Документ;
		//ОткрытьЗначение(Документ);
	ИначеЕсли Колонка.Имя = "ФайлСФ" Тогда
		ФайлСФ = ВыбраннаяСтрока.ФайлСФ;
		ОткрытьФайлДляВерификации(ФайлСФ, ВыбраннаяСтрока.Документ);
	ИначеЕсли Колонка.Имя = "ФайлТОРГ12" Тогда	
		ОткрытьФайлДляВерификации(ВыбраннаяСтрока.ФайлТОРГ12, ВыбраннаяСтрока.Документ);
	КонецЕсли;
КонецПроцедуры

Процедура ОткрытьФайлДляВерификации(Знач Файл, Документ)
	Обработка = Обработки.СканированиеИВерификацияДокументов.Создать();
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Объект КАК Вер_Файл,
	|	ЗначенияСвойствОбъектов.Значение КАК Расп_Файл
	|ПОМЕСТИТЬ ВТ_Вер_И_Расп
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Файлы_Родитель)
	|	И ЗначенияСвойствОбъектов.Объект = &Файл
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Вер_И_Расп.Вер_Файл,
	|	ВТ_Вер_И_Расп.Расп_Файл,
	|	ЗначенияСвойствОбъектов.Значение КАК Оригинал
	|ИЗ
	|	ВТ_Вер_И_Расп КАК ВТ_Вер_И_Расп
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО ВТ_Вер_И_Расп.Расп_Файл = ЗначенияСвойствОбъектов.Объект
	|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Файлы_Родитель))";
	
	Запрос.УстановитьПараметр("Файл", Файл);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Если ТЗ.Количество() > 0 Тогда
		
		НСтр = Обработка.Сканирование.Добавить();
		НСтр.Файл = ТЗ[0].Оригинал;
		НСТр.ФайлXML = ТЗ[0].Расп_Файл;
		НСтр.ФайлXMLВерификация = Файл;
		НСтр.ПрикрепленныйДокумент = Документ;
		
		СтрукутраОтбора = Новый Структура("ДатаНач, ДатаКон", Дата(1,1,1), КонецГода(ТекущаяДата()));
		Обработка.ЗаполнитьОбновитьСписокСканирования(СтрукутраОтбора, НСТр);		
		
		ФормаВерификации = Обработка.ПолучитьФорму("ФормаВерификации", ЭтаФорма);
		ФормаВерификации.ТекСтрокаСканирование = НСтр;		
		ФормаВерификации.Открыть();
	КонецЕсли;
	
КонецПроцедуры	

Процедура ТЗДокументовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ЗначениеЗаполнено(ДанныеСтроки.ФайлСФ) Тогда
		Если ДанныеСтроки.ЕстьОшибкиСФ = Истина Тогда
			ОформлениеСтроки.Ячейки.ФайлСФ.ЦветФона = WebЦвета.Лосось;		
			ОформлениеСтроки.Ячейки.ФайлСФ.Текст = "Есть отл. В/Д";
		Иначе
			ОформлениеСтроки.Ячейки.ФайлСФ.Текст = "Нет отл. В/Д";
			ОформлениеСтроки.Ячейки.ФайлСФ.ЦветФона = WebЦвета.БледноЗеленый;		
		КонецЕсли;
	Иначе
		ОформлениеСтроки.Ячейки.ФайлСФ.Текст = "Нет вер. файла";		
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(ДанныеСтроки.ФайлТОРГ12) Тогда
		Если ДанныеСтроки.ЕстьОшибкиТОРГ12 = Истина Тогда
			ОформлениеСтроки.Ячейки.ФайлТОРГ12.ЦветФона = WebЦвета.Лосось;
			ОформлениеСтроки.Ячейки.ФайлТОРГ12.Текст = "Есть отл. В/Д";
		Иначе
			ОформлениеСтроки.Ячейки.ФайлТОРГ12.Текст = "Нет отл. В/Д";	
			ОформлениеСтроки.Ячейки.ФайлТОРГ12.ЦветФона = WebЦвета.БледноЗеленый;		
		КонецЕсли;
	Иначе
		ОформлениеСтроки.Ячейки.ФайлТОРГ12.Текст = "Нет вер. файла";		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеСтроки.ФайлСФРаспознанный) Тогда
		Если ДанныеСтроки.ЕстьОшибкиРаспСФ = Истина Тогда
			ОформлениеСтроки.Ячейки.ФайлСФРаспознанный.ЦветФона = WebЦвета.Лосось;
			ОформлениеСтроки.Ячейки.ФайлСФРаспознанный.Текст = "Есть отл. Р/В";
		Иначе		
			ОформлениеСтроки.Ячейки.ФайлСФРаспознанный.Текст = "Нет отл. Р/В";	
			ОформлениеСтроки.Ячейки.ФайлСФРаспознанный.ЦветФона = WebЦвета.БледноЗеленый;		
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(ДанныеСтроки.ДокументЭДО_СФ) Тогда
			ОформлениеСтроки.Ячейки.ФайлСФРаспознанный.Текст = "Документ ЭДО";		
		Иначе
			ОформлениеСтроки.Ячейки.ФайлСФРаспознанный.Текст = "Нет вер. файла";		
		КонецЕсли;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДанныеСтроки.ФайлТОРГ12Распознанный) Тогда
		Если ДанныеСтроки.ЕстьОшибкиРаспТОРГ12 = Истина Тогда
			ОформлениеСтроки.Ячейки.ФайлТОРГ12Распознанный.ЦветФона = WebЦвета.Лосось;
			ОформлениеСтроки.Ячейки.ФайлТОРГ12Распознанный.Текст = "Есть отл. Р/В";
		Иначе		
			ОформлениеСтроки.Ячейки.ФайлТОРГ12Распознанный.Текст = "Нет отл. Р/В";	
			ОформлениеСтроки.Ячейки.ФайлТОРГ12Распознанный.ЦветФона = WebЦвета.БледноЗеленый;		
		КонецЕсли;
	Иначе		
		Если ЗначениеЗаполнено(ДанныеСтроки.ДокументЭДО_ТОРГ) Тогда
			ОформлениеСтроки.Ячейки.ФайлТОРГ12Распознанный.Текст = "Документ ЭДО";		
		Иначе	
			ОформлениеСтроки.Ячейки.ФайлТОРГ12Распознанный.Текст = "Нет вер. файла";	
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ТаблицаСравненияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	//Если ДанныеСтроки.Результат <> Истина Тогда
	//	ОформлениеСтроки.ЦветФона = WebЦвета.БледноЗолотистый;
	//КонецЕсли;
	
	Если Найти(ДанныеСтроки.Проверка, "Номенклатура") > 0 
		Или	Найти(ДанныеСтроки.Проверка, "Единица измерения") > 0 Тогда
		Возврат;
	КонецЕсли;	
	
	//Если ЭлементыФормы.ТаблицаСравнения.Колонки.ДанныеВРаспознанном.Видимость = Истина Тогда
	//	Если ДанныеСтроки.ДанныеВРаспознанном <> ДанныеСтроки.ЗначениеВФайле Тогда
	//		ОформлениеСтроки.Ячейки.ДанныеВРаспознанном.ЦветФона = WebЦвета.БледноЗолотистый; 
	//		ОформлениеСтроки.Ячейки.ЗначениеВФайле.ЦветФона = WebЦвета.БледноЗолотистый; 
	//	КонецЕсли;	
	//КонецЕсли;	
	//
	//Если ДанныеСтроки.ЗначениеВОбъекте <> ДанныеСтроки.ЗначениеВФайле Тогда
	//	ОформлениеСтроки.Ячейки.ЗначениеВОбъекте.ЦветФона = WebЦвета.БледноЗолотистый; 
	//	ОформлениеСтроки.Ячейки.ЗначениеВФайле.ЦветФона = WebЦвета.БледноЗолотистый; 
	//КонецЕсли;
КонецПроцедуры



Процедура ТЗДокументовПриИзмененииФлажка(Элемент, Колонка)
	
	ТС = ЭлементыФормы.ТЗДокументов.ТекущаяСтрока;
	Если ЗначениеЗаполнено(ТС) = Истина И ЗначениеЗаполнено(ТС.Документ) = Истина И ЗначениеЗаполнено(ТС.ДокументЭДО_СФ) = ЛОЖЬ И  ЗначениеЗаполнено(ТС.ДокументЭДО_ТОРГ) = ЛОЖЬ Тогда		
		
		Запись = РегистрыСведений.ПрикрепленныеСканыКДокументам.СоздатьМенеджерЗаписи();
		Запись.Документ = ТС.Документ;
		Запись.Прочитать();
		
		Если ЗначениеЗаполнено(Запись.Документ) = Ложь Тогда
			Запись.Документ = ТС.Документ;
			Запись.ФайлСФ = ТС.ФайлСФ;
			Запись.ФайлТОРГ12 = ТС.ФайлТОРГ12;
		КонецЕсли;	
		
		Если Колонка.Имя = "ПодтвержденоОператоромСФ" Тогда
			Запись.ПодтвержденоОператоромСФ = ТС.ПодтвержденоОператоромСФ;
			Если Запись.ПодтвержденоОператоромСФ = Истина Тогда
				Запись.ДатаПодтвержденияСФОператором = ТекущаяДата();
				Запись.ОператорСФ = ПараметрыСеанса.ТекущийПользователь;
			Иначе
				Запись.ДатаПодтвержденияСФОператором = Дата(1,1,1);
				Запись.ОператорСФ = Справочники.Пользователи.ПустаяСсылка();
			КонецЕсли;				
		ИначеЕсли Колонка.Имя = "ПодтвержденоОтветственнымПоНДССФ" Тогда
			Запись.ПодтвержденоОтветственнымПоНДССФ = ТС.ПодтвержденоОтветственнымПоНДССФ;
			Если Запись.ПодтвержденоОтветственнымПоНДССФ = Истина Тогда
				Запись.ДатаПодтвержденияСФОтветственным = ТекущаяДата();
				Запись.ОтветственныйСФ = ПараметрыСеанса.ТекущийПользователь;
			Иначе
				Запись.ДатаПодтвержденияСФОтветственным = Дата(1,1,1);
				Запись.ОтветственныйСФ = Справочники.Пользователи.ПустаяСсылка();
			КонецЕсли;
		ИначеЕсли Колонка.Имя = "ПодтвержденоОператоромТОРГ12" Тогда
			Запись.ПодтвержденоОператоромТОРГ12 = ТС.ПодтвержденоОператоромТОРГ12;
			Если Запись.ПодтвержденоОператоромТОРГ12 = Истина Тогда
				Запись.ДатаПодтвержденияТОРГ12Оператором = ТекущаяДата();
				Запись.ОператорТОРГ12 = ПараметрыСеанса.ТекущийПользователь;
			Иначе
				Запись.ДатаПодтвержденияТОРГ12Оператором = Дата(1,1,1);
				Запись.ОператорТОРГ12 = Справочники.Пользователи.ПустаяСсылка();
			КонецЕсли;
		ИначеЕсли Колонка.Имя = "ПодтвержденоОтветственнымПоНДСТОРГ12" Тогда
			Запись.ПодтвержденоОтветственнымПоНДСТОРГ12 = ТС.ПодтвержденоОтветственнымПоНДСТОРГ12;
			Если Запись.ПодтвержденоОтветственнымПоНДСТОРГ12 = Истина Тогда
				Запись.ДатаПодтвержденияТОРГ12Ответственным = ТекущаяДата();
				Запись.ОтветственныйТОРГ12 = ПараметрыСеанса.ТекущийПользователь;
			Иначе
				Запись.ДатаПодтвержденияТОРГ12Ответственным = Дата(1,1,1);
				Запись.ОтветственныйТОРГ12 = Справочники.Пользователи.ПустаяСсылка();
			КонецЕсли;	
		КонецЕсли;
		
		Запись.Записать();
	ИначеЕсли ЗначениеЗаполнено(ТС) = Истина И ЗначениеЗаполнено(ТС.Документ) = Истина И (ЗначениеЗаполнено(ТС.ДокументЭДО_СФ) = Истина ИЛИ ЗначениеЗаполнено(ТС.ДокументЭДО_ТОРГ) = Истина) Тогда			
		Набор = РегистрыСведений.ЭДО_СопоставлениеДокументов.СоздатьНаборЗаписей();
		Набор.Отбор.Документ.Установить(ТС.Документ);
		
		Набор.Прочитать();
		
		Для каждого Запись Из Набор Цикл
			Если Запись.ДокументЭДО = ТС.ДокументЭДО_СФ Тогда
				Если Колонка.Имя = "ПодтвержденоОператоромСФ" Тогда
					Запись.ПодтверженоОператором = ТС.ПодтвержденоОператоромСФ;							
				ИначеЕсли Колонка.Имя = "ПодтвержденоОтветственнымПоНДССФ" Тогда
					Запись.ПодтвержденоОтветственным = ТС.ПодтвержденоОтветственнымПоНДССФ;	
				КонецЕсли;
			ИначеЕсли Запись.ДокументЭДО = ТС.ДокументЭДО_ТОРГ Тогда	
				Если Колонка.Имя = "ПодтвержденоОператоромТОРГ12" Тогда
					Запись.ПодтверженоОператором = ТС.ПодтвержденоОператоромТОРГ12;							
				ИначеЕсли Колонка.Имя = "ПодтвержденоОтветственнымПоНДСТОРГ12" Тогда
					Запись.ПодтвержденоОтветственным = ТС.ПодтвержденоОтветственнымПоНДСТОРГ12;	
				КонецЕсли;
			КонецЕсли;	
		КонецЦикла;
		
		Набор.Записать();	
	КонецЕсли;
	
КонецПроцедуры

Процедура ВидОтчетаПриИзменении(Элемент)
	Если ЭтотОбъект.Результат.Количество() > 0 Тогда
		ОбновитьОтчет();
	КонецЕсли;	
	УправлениеВидимостью();
	
	
КонецПроцедуры

Процедура УправлениеВидимостью()
	Если ЭтаФорма.ВидОтчета = "Все" ИЛИ ЭтаФорма.ВидОтчета = "Проблемные" Тогда
		ЭлементыФормы.ТЗДокументов.Колонки.СФ.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ФайлСФРаспознанный.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ФайлСФ.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ПодтвержденоОператоромСФ.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ПодтвержденоОтветственнымПоНДССФ.Видимость = Ложь;
		ЭлементыФормы.ТЗДокументов.Колонки.Накладная.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ФайлТОРГ12Распознанный.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ФайлТОРГ12.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ПодтвержденоОператоромТОРГ12.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ПодтвержденоОтветственнымПоНДСТОРГ12.Видимость = Ложь;
	ИначеЕсли ЭтаФорма.ВидОтчета = "ПроблемныеСФ" Тогда
		ЭлементыФормы.ТЗДокументов.Колонки.СФ.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ФайлСФРаспознанный.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ФайлСФ.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ПодтвержденоОператоромСФ.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ПодтвержденоОтветственнымПоНДССФ.Видимость = Ложь;
		ЭлементыФормы.ТЗДокументов.Колонки.Накладная.Видимость = Ложь;
		ЭлементыФормы.ТЗДокументов.Колонки.ФайлТОРГ12Распознанный.Видимость = Ложь;
		ЭлементыФормы.ТЗДокументов.Колонки.ФайлТОРГ12.Видимость = Ложь;
		ЭлементыФормы.ТЗДокументов.Колонки.ПодтвержденоОператоромТОРГ12.Видимость = Ложь;
		ЭлементыФормы.ТЗДокументов.Колонки.ПодтвержденоОтветственнымПоНДСТОРГ12.Видимость = Ложь;		
	ИначеЕсли ЭтаФорма.ВидОтчета = "ПроблемныеНакладные" Тогда
		ЭлементыФормы.ТЗДокументов.Колонки.СФ.Видимость = Ложь;
		ЭлементыФормы.ТЗДокументов.Колонки.ФайлСФРаспознанный.Видимость = Ложь;
		ЭлементыФормы.ТЗДокументов.Колонки.ФайлСФ.Видимость = Ложь;
		ЭлементыФормы.ТЗДокументов.Колонки.ПодтвержденоОператоромСФ.Видимость = Ложь;
		ЭлементыФормы.ТЗДокументов.Колонки.ПодтвержденоОтветственнымПоНДССФ.Видимость = Ложь;
		ЭлементыФормы.ТЗДокументов.Колонки.Накладная.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ФайлТОРГ12Распознанный.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ФайлТОРГ12.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ПодтвержденоОператоромТОРГ12.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ПодтвержденоОтветственнымПоНДСТОРГ12.Видимость = Ложь;			
	ИначеЕсли ЭтаФорма.ВидОтчета = "НуждаютсяВПодтверждении" Тогда
		ЭлементыФормы.ТЗДокументов.Колонки.СФ.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ФайлСФРаспознанный.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ФайлСФ.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ПодтвержденоОператоромСФ.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ПодтвержденоОтветственнымПоНДССФ.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.Накладная.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ФайлТОРГ12Распознанный.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ФайлТОРГ12.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ПодтвержденоОператоромТОРГ12.Видимость = Истина;
		ЭлементыФормы.ТЗДокументов.Колонки.ПодтвержденоОтветственнымПоНДСТОРГ12.Видимость = Истина;
	КонецЕсли;	
КонецПроцедуры	

Процедура ПриОткрытии()
	ЭтаФорма.ВидОтчета = "Проблемные";
	УправлениеВидимостью();
	
	ЭтотОбъект.ДатаНач = НачалоМесяца(ТекущаяДата());
	ЭтотОбъект.ДатаКон = КонецМесяца(ТекущаяДата());
	
	Если РольДоступна("ПодтверждениеРасхожденийВСканах") = Истина Тогда
		ЭлементыФормы.ВидОтчета.СписокВыбора.Добавить("НуждаютсяВПодтверждении", "Нуждаются в подтверждении");		
	КонецЕсли;	
КонецПроцедуры

Процедура КонтекстноеМенюТЗДокументовОткрепитьСФ(Кнопка)
	ТС = ЭлементыФормы.ТЗДокументов.ТекущаяСтрока;
	Если ЗначениеЗаполнено(ТС) = Истина Тогда
		Если ЗначениеЗаполнено(ТС.ФайлСФ) = Истина И ЗначениеЗаполнено(ТС.Документ) = Истина Тогда
			ОбъектДокумент = ТС.Документ.ПолучитьОбъект();
			ОбъектДокумент.НомерВходящегоСчетаФактуры = "";
			ОбъектДокумент.ДатаВходящегоСчетаФактуры = Дата(1,1,1);
			ОбъектДокумент.СчетФактура = Справочники.Файлы.ПустаяСсылка();
			ОбъектДокумент.ОбменДанными.Загрузка = Истина;
			ОбъектДокумент.НеПроверятьДатуЗапретаРедактирования = Истина;

			Попытка 
				ОбъектДокумент.Записать();
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
			
			Запись = РегистрыСведений.ПрикрепленныеСканыКДокументам.СоздатьМенеджерЗаписи();
			Запись.Документ = ТС.Документ;
			Запись.Прочитать();
			
			Запись.ФайлСФ = Справочники.Файлы.ПустаяСсылка();
			Запись.ПодтвержденоОператоромСФ = Ложь;
			Запись.ПодтвержденоОтветственнымПоНДССФ = Ложь;
			Запись.Записать();
			
			Запрос = Новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
			|	СчетФактураПолученный.Ссылка
			|ИЗ
			|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
			|ГДЕ
			|	СчетФактураПолученный.ДокументОснование = &ДокументОснование
			|	И СчетФактураПолученный.ПометкаУдаления = ЛОЖЬ";
			
			Запрос.УстановитьПараметр("ДокументОснование", ТС.Документ);
			ТЗ = Запрос.Выполнить().Выгрузить();
			
			Для каждого Стр ИЗ ТЗ Цикл
				ДокСФ = Стр.Ссылка.ПолучитьОбъект();
				Попытка 
					ДокСФ.УстановитьПометкуУдаления(Истина);
				Исключение
					
				КонецПопытки;
			КонецЦикла;			
		КонецЕсли;
	КонецЕсли;	

КонецПроцедуры

Процедура КонтекстноеМенюТЗДокументовОткрытьСкан(Кнопка)
	ТС = ЭлементыФормы.ТЗДокументов.ТекущаяСтрока;
	
	Если ЗначениеЗаполнено(ТС.ДокументЭДО_СФ) = Ложь И  ЗначениеЗаполнено(ТС.ДокументЭДО_ТОРГ) = Ложь Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Объект КАК Вер_Файл,
		|	ЗначенияСвойствОбъектов.Значение КАК Расп_Файл
		|ПОМЕСТИТЬ ВТ_Вер_И_Расп
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Файлы_Родитель)
		|	И ЗначенияСвойствОбъектов.Объект = &Файл
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Вер_И_Расп.Вер_Файл,
		|	ВТ_Вер_И_Расп.Расп_Файл,
		|	ЗначенияСвойствОбъектов.Значение КАК Оригинал
		|ИЗ
		|	ВТ_Вер_И_Расп КАК ВТ_Вер_И_Расп
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|		ПО ВТ_Вер_И_Расп.Расп_Файл = ЗначенияСвойствОбъектов.Объект
		|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Файлы_Родитель))";
		
		
		Файл = Справочники.Файлы.ПустаяСсылка();
		Если ЗначениеЗаполнено(ТС) = Истина Тогда
			ТК = ЭлементыФормы.ТЗДокументов.ТекущаяКолонка;
			Если ТК.Имя = "ФайлСФ" ИЛИ ТК.Имя = "СФ" ИЛИ ТК.Имя = "ФайлСФРаспознанный" Тогда
				Если ЗначениеЗаполнено(ТС.ФайлСФ) = Истина Тогда
					Файл = ТС.ФайлСФ;
				КонецЕсли;	
			ИначеЕсли ТК.Имя = "ФайлТОРГ12Распознанный" ИЛИ ТК.Имя = "Накладная" ИЛИ ТК.Имя = "ФайлТОРГ12" Тогда
				Если ЗначениеЗаполнено(ТС.ФайлТОРГ12) = Истина Тогда
					Файл = ТС.ФайлТОРГ12;
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(Файл) = Ложь Тогда
			Возврат;		
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Файл", Файл);
		ТЗ = Запрос.Выполнить().Выгрузить();
		Для каждого Стр Из ТЗ Цикл
			ПутьКФайлу = Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(Стр.Оригинал);
			Файл = Новый Файл(ПутьКФайлу);
			Если Файл.Существует() = Истина Тогда
				Попытка
					ЗапуститьПриложение(ПутьКФайлу);
				Исключение
					Сообщить(ОписаниеОшибки());
				КонецПопытки;				
			КонецЕсли;
		КонецЦикла;	
	Иначе
		Если ЗначениеЗаполнено(ТС.ДокументЭДО_СФ) Тогда
			ПутьКФайлу = Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(ТС.ДокументЭДО_СФ.ФайлPDF);
			Файл = Новый Файл(ПутьКФайлу);
			Если Файл.Существует() = Истина Тогда
				Попытка
					ЗапуститьПриложение(ПутьКФайлу);
				Исключение
					Сообщить(ОписаниеОшибки());
				КонецПопытки;				
			КонецЕсли;
		Иначе
			ПутьКФайлу = Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(ТС.ДокументЭДО_ТОРГ.ФайлPDF);
			Файл = Новый Файл(ПутьКФайлу);
			Если Файл.Существует() = Истина Тогда
				Попытка
					ЗапуститьПриложение(ПутьКФайлу);
				Исключение
					Сообщить(ОписаниеОшибки());
				КонецПопытки;				
			КонецЕсли;
 
		КонецЕсли;	
	КонецЕсли;

КонецПроцедуры


Процедура ЗаполнитьДеревоЗначений(ТЗ)
	ЭтаФорма.Дерево.Строки.Очистить();
	
	СтрТаблица = Неопределено;
	
	Для каждого Стр Из ТЗ Цикл		
		Если Найти(Стр.Проверка, "Таблица") > 0 Тогда
			Если ЗначениеЗаполнено(СтрТаблица) = Истина Тогда
				СтрДерево = СтрТаблица.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрДерево, Стр);   
			Иначе
				СтрТаблица = ЭтаФорма.Дерево.Строки.Добавить();
				СтрТаблица.Проверка = "Табличная часть";
				
				СтрДерево = СтрТаблица.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрДерево, Стр);   
			КонецЕсли;	
		Иначе
			СтрДерево = ЭтаФорма.Дерево.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрДерево, Стр);
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры	

Процедура ДеревоПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если Найти(ДанныеСтроки.Проверка, "Номенклатура") > 0 
		Или	Найти(ДанныеСтроки.Проверка, "Единица измерения") > 0 Тогда
		Возврат;
	КонецЕсли;	
	
	Если ЭлементыФормы.Дерево.Колонки.ДанныеВРаспознанном.Видимость = Истина Тогда
		Если ДанныеСтроки.ДанныеВРаспознанном <> ДанныеСтроки.ЗначениеВФайле Тогда
			ОформлениеСтроки.Ячейки.ДанныеВРаспознанном.ЦветФона = WebЦвета.БледноЗолотистый; 
			ОформлениеСтроки.Ячейки.ЗначениеВФайле.ЦветФона = WebЦвета.БледноЗолотистый; 
		КонецЕсли;	
	КонецЕсли;	
	
	Если ДанныеСтроки.ЗначениеВОбъекте <> ДанныеСтроки.ЗначениеВФайле Тогда
		ОформлениеСтроки.Ячейки.ЗначениеВОбъекте.ЦветФона = WebЦвета.БледноЗолотистый; 
		ОформлениеСтроки.Ячейки.ЗначениеВФайле.ЦветФона = WebЦвета.БледноЗолотистый; 
	КонецЕсли;

КонецПроцедуры
