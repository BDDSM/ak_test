////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Импортирует данные по отметкам приход/уход внештатных сотрудников из Фронтол
// По умолчанию вызывается регламентным заданием 
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура ЗагрузитьДанныеПоОтметкамВнештатныхСотрудниковФронтол(НачалоПериода = Неопределено, КонецПериода = Неопределено, СтруктураПараметров = Неопределено) Экспорт

	Если СтруктураПараметров = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ГруппаСотрудников = Неопределено;
	НомерТочки = Неопределено;
	
	СтруктураПараметров.Свойство("ГруппаСотрудников", ГруппаСотрудников);
	СтруктураПараметров.Свойство("НомерТочки", НомерТочки);
	
	ТабДанные = Новый ТаблицаЗначений();
	ТабДанные.Колонки.Добавить("Сотрудник"		, Новый ОписаниеТипов("СправочникСсылка.СотрудникиАутсорсинг"));
	ТабДанные.Колонки.Добавить("ДатаПрихода"	, Новый ОписаниеТипов("Дата"	, , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	ТабДанные.Колонки.Добавить("ДатаУхода"		, Новый ОписаниеТипов("Дата"	, , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	ТабДанные.Колонки.Добавить("idЗаписиПриход"	, Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(32, ДопустимаяДлина.Фиксированная)));
	ТабДанные.Колонки.Добавить("idЗаписиУход"	, Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(32, ДопустимаяДлина.Фиксированная)));
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	СотрудникиАутсорсинг.Ссылка,
	|	СотрудникиАутсорсинг.ИД
	|ИЗ
	|	Справочник.СотрудникиАутсорсинг КАК СотрудникиАутсорсинг
	|ГДЕ
	|	(&ВсеГруппы
	|			ИЛИ СотрудникиАутсорсинг.ГруппаСотрудников = &ГруппаСотрудников)";
	
	Запрос.УстановитьПараметр("ВсеГруппы", ЗначениеЗаполнено(ГруппаСотрудников));
	Запрос.УстановитьПараметр("ГруппаСотрудников", ГруппаСотрудников);
	
	Результаты = Запрос.ВыполнитьПакет();
	ТабПродавцы = Результаты[0].Выгрузить();
	ТабПродавцы.Индексы.Добавить("Код");
	
	ТабАутсорсинг = Результаты[1].Выгрузить();
	ТабАутсорсинг.Индексы.Добавить("ИД");
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	
	ТекстЗапроса = "SELECT CAST(VZ_Zapros.id as nvarchar(36)) id, VZ_Zapros.CashierID, VZ_Zapros.DateTimeAdd, VZ_Zapros.Flag
	|FROM (SELECT CT.id
	|      ,CT.CashierID
	|      ,CT.DateTimeAdd
	|      ,CT.Flag
	|      ,ROW_NUMBER() OVER (PARTITION BY CashierID, Flag Order by DateTimeAdd desc) as rn
	|  FROM [srv-sql04].[frontol].[dbo].[CashierTime]  as CT (nolock)
	|  where CT.DateTimeAdd >= " + ВнешниеДанные.ФорматПоля(НачалоПериода) + ?(ЗначениеЗаполнено(НомерТочки)," and CT.ShopNo = " + ВнешниеДанные.ФорматПоля(НомерТочки),"") + ") as VZ_Zapros
	|  where VZ_Zapros.rn = 1
	|  order by Flag desc
	|";
	
	rs = ADOСоединение.Execute(ТекстЗапроса);
	Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
		rs=rs.NextRecordSet();
	КонецЦикла;
	
	Попытка
		rs.MoveFirst();
		
		Пока НЕ rs.EOF() Цикл
			КодПродавец = Rs.Fields("CashierID").Value;
			Если ЗначениеЗаполнено(КодПродавец) Тогда
				Продавец = Неопределено;
				СтрокаТабПродавцы = ТабПродавцы.Найти(Прав("0000000000" + Формат(КодПродавец, "ЧГ=0"), 10), "Код");
				Если СтрокаТабПродавцы = Неопределено Тогда
					СтрокаТабАутсорс = ТабАутсорсинг.Найти(КодПродавец, "ИД");
					Если СтрокаТабАутсорс <> Неопределено Тогда
						Продавец = СтрокаТабАутсорс.Ссылка;
					КонецЕсли;	
				Иначе
					Продавец = СтрокаТабПродавцы.Ссылка;
				КонецЕсли;
				Если ЗначениеЗаполнено(Продавец) Тогда
					СтрокиДоб = ТабДанные.НайтиСтроки(Новый Структура("Сотрудник", Продавец));
					Если СтрокиДоб.Количество() = 0 Тогда
						СтрокаДоб = ТабДанные.Добавить();
					Иначе
						СтрокаДоб = СтрокиДоб[0];
					КонецЕсли;
					СтрокаДоб.Сотрудник = Продавец;
					Если Rs.Fields("Flag").Value = 1 Тогда
						СтрокаДоб.ДатаПрихода = Rs.Fields("DateTimeAdd").Value;
						СтрокаДоб.idЗаписиПриход = Rs.Fields("id").Value;
					ИначеЕсли Rs.Fields("Flag").Value = 0
						И Rs.Fields("DateTimeAdd").Value >= СтрокаДоб.ДатаПрихода Тогда
						СтрокаДоб.ДатаУхода = Rs.Fields("DateTimeAdd").Value;	
						СтрокаДоб.idЗаписиУход = Rs.Fields("id").Value;
					КонецЕсли;
				КонецЕсли;	
			КонецЕсли;	
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	ADOСоединение.Close();
	ADOСоединение = Неопределено;
	
	КолвоСтрок = ТабДанные.Количество();
	Для н = 1 По КолвоСтрок Цикл
		Если НЕ ЗначениеЗаполнено(ТабДанные[КолвоСтрок - н].ДатаПрихода) Тогда
			ТабДанные.Удалить(КолвоСтрок - н);
			Продолжить;
		КонецЕсли;	
		Если ЗначениеЗаполнено(ТабДанные[КолвоСтрок - н].ДатаПрихода)
			И ЗначениеЗаполнено(ТабДанные[КолвоСтрок - н].ДатаУхода)
			И ТабДанные[КолвоСтрок - н].ДатаУхода < НачалоДня(ТекущаяДата()) Тогда
			ТабДанные.Удалить(КолвоСтрок - н);
			Продолжить;
		КонецЕсли;	
	КонецЦикла;

КонецПроцедуры // ЗагрузитьДанныеПоОтметкамВнештатныхСотрудников()
