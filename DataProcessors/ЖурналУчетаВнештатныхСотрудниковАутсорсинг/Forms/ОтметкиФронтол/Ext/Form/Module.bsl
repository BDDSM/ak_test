
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьПараметрыФормы();
	
	ОбновитьОтметкиФронтолСервер();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОбновить(Команда)
	
	ОбновитьОтметкиФронтолКлиент();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПараметрыФормы()
	
	ТекущаяДата = Неопределено;
	
	Параметры.Свойство("Дата", ТекущаяДата); 
	Параметры.Свойство("ТорговаяТочка", Магазин);
	Параметры.Свойство("Сотрудник", Сотрудник);
	
	Период.ДатаНачала = НачалоДня(ТекущаяДата);
	Период.ДатаОкончания = КонецДня(ТекущаяДата);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтметкиФронтолКлиент();
	
	Если ПроверитьВозможностьОбновления() Тогда
		ОбновитьОтметкиФронтолСервер();
		ВывестиУведомленияКлиент();
	Иначе 
		ПоказатьПредупреждение(,"Заполните все обязательные поля!");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьВозможностьОбновления()
	
	Возврат ЗначениеЗаполнено(Период.ДатаНачала) И ЗначениеЗаполнено(Период.ДатаОкончания) И ЗначениеЗаполнено(Магазин);
	
КонецФункции

&НаКлиенте
Процедура ВывестиУведомленияКлиент();
	
Если ТаблицаОтметок.Количество() = 0 Тогда
		
		ТекстУведомления = "";
		
		Если НачалоДня(Период.ДатаНачала) = НачалоДня(Период.ДатаОкончания) Тогда
			ТекстУведомления = ТекстУведомления + СтрЗаменить("За Дата ", "Дата", Формат(Период.ДатаНачала, "ДЛФ=DD"));
		Иначе
			ТекстУведомления = ТекстУведомления + "За период с ДатаНачала по ДатаОкончания ";
			ТекстУведомления = СтрЗаменить(ТекстУведомления, "ДатаНачала", Период.ДатаНачала); 
			ТекстУведомления = СтрЗаменить(ТекстУведомления, "ДатаОкончания", Период.ДатаОкончания); 
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Сотрудник) Тогда
			ТекстУведомления = ТекстУведомления + СтрЗаменить(" по сотруднику Сотрудник", "Сотрудник", Сотрудник);;
		КонецЕсли;
		
		ТекстУведомления = ТекстУведомления + СтрЗаменить(" (магазин ТорговаяТочка) нет отметок в Фронтол!", "ТорговаяТочка", Магазин);
		
		ПоказатьПредупреждение(,ТекстУведомления);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтметкиФронтолСервер()
	
	Если НЕ ЗначениеЗаполнено(Магазин) Тогда
		Сообщить(НСтр("ru = 'Укажите магазин!';"));
		Возврат;
	КонецЕсли;
	
	//Формирование таблицы данных
	ТабДанные = Новый ТаблицаЗначений();
	
	ТабДанные.Колонки.Добавить("ShopNo"		, Новый ОписаниеТипов("Число"	, Новый КвалификаторыЧисла(10, 0)));
	ТабДанные.Колонки.Добавить("CashierID"	, Новый ОписаниеТипов("Число"	, Новый КвалификаторыЧисла(10, 0)));
	ТабДанные.Колонки.Добавить("barcode"    , Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(40, ДопустимаяДлина.Переменная)));
	ТабДанные.Колонки.Добавить("Flag"		, Новый ОписаниеТипов("Число"	, Новый КвалификаторыЧисла(2, 0)));
	ТабДанные.Колонки.Добавить("Дата"	    , Новый ОписаниеТипов("Дата"	, , , Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	ТабДанные.Колонки.Добавить("idЗаписи"   , Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(36, ДопустимаяДлина.Переменная)));
	ТабДанные.Колонки.Добавить("input_type"	, Новый ОписаниеТипов("Число"	, Новый КвалификаторыЧисла(2, 0)));
	
	ТекстЗапроса = "	
	|SELECT CAST(VZ_Zapros.id as nvarchar(36)) id, VZ_Zapros.CashierID,barcode, VZ_Zapros.DateTimeAdd, VZ_Zapros.Flag, VZ_Zapros.ShopNo, VZ_Zapros.input_type
	|FROM (SELECT CT.id
	|,CT.barcode
	|,CT.CashierID
	|,CT.DateTimeAdd
	|,CT.Flag
	|,CT.ShopNo
	|,CT.input_type
	|,ROW_NUMBER() OVER (PARTITION BY CashierID, Flag Order by DateTimeAdd desc) as rn
	|FROM [srv-sql04].[frontol].[dbo].[CashierTime]  as CT (nolock)
	|where CT.DateTimeAdd >= " + ВнешниеДанные.ФорматПоля(Период.ДатаНачала)+ " and CT.DateTimeAdd <= "+ ВнешниеДанные.ФорматПоля(Период.ДатаОкончания)+" 
	|and CT.ShopNo = " + ВнешниеДанные.ФорматПоля(Магазин.НомерТочки) + ") as VZ_Zapros
	|--where VZ_Zapros.rn = 1 
	|--OR CAST(VZ_Zapros.id as nvarchar(36)) = '57321D69-E0D4-4D92-A6E1-B0A4640289F9'
	|--order by Flag desc
	|order by CashierID, DateTimeAdd";
	
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "where CT.DateTimeAdd", "where CT.CashierID = " + Формат(Сотрудник.ИД, "ЧГ=") + " and CT.DateTimeAdd");
	КонецЕсли;  
	
	//Подключение к Фронтол
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();

	rs = ADOСоединение.Execute(ТекстЗапроса);
	Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
		rs=rs.NextRecordSet();
	КонецЦикла;
	
	Попытка
		rs.MoveFirst();
		Пока НЕ rs.EOF() Цикл
			КодПродавец = Rs.Fields("CashierID").Value;
			Если ЗначениеЗаполнено(КодПродавец) Тогда
				СтрокаДоб = ТабДанные.Добавить();
				СтрокаДоб.ShopNo = Rs.Fields("ShopNo").Value;
				СтрокаДоб.CashierID = Rs.Fields("CashierID").Value;
				СтрокаДоб.barcode = ?(Rs.Fields("barcode").Value = Null, "NULL", Rs.Fields("barcode").Value);
				СтрокаДоб.Flag = Rs.Fields("Flag").Value;
				СтрокаДоб.Дата = Rs.Fields("DateTimeAdd").Value;
				СтрокаДоб.idЗаписи = Rs.Fields("id").Value;
				СтрокаДоб.input_type = Rs.Fields("input_type").Value;
			КонецЕсли;	
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	Если ТабДанные.Количество() Тогда
		 ТаблицаОтметок.Загрузить(ТабДанные);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

