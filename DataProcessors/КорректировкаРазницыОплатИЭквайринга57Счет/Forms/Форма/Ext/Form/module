
Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	НачПериодаВыручки = ВычислитьНачалоПериодаВыручки();
	
	Если НачПериодаВыручки = Неопределено Тогда
		ОбщегоНазначения.СообщитьОбОшибке("НЕ удалось подобрать начальную рабочую дату для анализа. Возможно не заполнен производственный календарь в периоде обработки. Продолжение операции невозможно!");
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ФинансовыйОбороты.Период,
	               |	ФинансовыйОбороты.Счет,
	               |	ФинансовыйОбороты.Субконто3 КАК Терминал,
	               |	ФинансовыйОбороты.СуммаОборот
	               |ИЗ
	               |	РегистрБухгалтерии.Финансовый.Обороты(&НачПериода, &КонПериода, День, Счет = &Счет572, , , КорСчет = &Счет904, ) КАК ФинансовыйОбороты
	               |ИТОГИ ПО
	               |	Терминал";
				   
	Запрос.УстановитьПараметр("Счет572", ПланыСчетов.Финансовый.ДенежныеСредстваВПутиЭквайринг);
	Запрос.УстановитьПараметр("ТТ", Терминал);
	Запрос.УстановитьПараметр("Счет904", ПланыСчетов.Финансовый.ВыручкаТорговыхТочек);
	Запрос.УстановитьПараметр("НачПериода", НачПериодаВыручки);
	Запрос.УстановитьПараметр("КонПериода", КонецДня(КонецПериода)-86400);
	
	ЗапросЭквайринг = Новый Запрос;
	ЗапросЭквайринг.Текст = "ВЫБРАТЬ
	                        |	ФинансовыйОбороты.Период,
	                        |	ФинансовыйОбороты.КорСубконто3,
	                        |	ФинансовыйОбороты.СуммаОборот,
	                        |	ФинансовыйОбороты.СуммаОборотДт,
	                        |	ФинансовыйОбороты.СуммаОборотКт
	                        |ПОМЕСТИТЬ Сводная
	                        |ИЗ
	                        |	РегистрБухгалтерии.Финансовый.Обороты(&НачПериода, &КонПериода, День, Счет = &Счет511, , , КорСчет = &Счет572, ) КАК ФинансовыйОбороты
	                        |ГДЕ
	                        |	ФинансовыйОбороты.СуммаОборот <> 0
	                        |
	                        |ОБЪЕДИНИТЬ ВСЕ
	                        |
	                        |ВЫБРАТЬ
	                        |	НАЧАЛОПЕРИОДА(ФинансовыйОбороты.Период, ДЕНЬ),
	                        |	ФинансовыйОбороты.КорСубконто3,
	                        |	ФинансовыйОбороты.СуммаОборот,
	                        |	ФинансовыйОбороты.СуммаОборотДт,
	                        |	ФинансовыйОбороты.СуммаОборотКт
	                        |ИЗ
	                        |	РегистрБухгалтерии.Финансовый.Обороты(&НачПериода, &КонПериода, Регистратор, Счет = &Счет443, , , КорСчет = &Счет572, ) КАК ФинансовыйОбороты
	                        |ГДЕ
	                        |	ФинансовыйОбороты.СуммаОборот <> 0
	                        |	И НЕ ФинансовыйОбороты.Регистратор ССЫЛКА Документ.Операция
	                        |;
	                        |
	                        |////////////////////////////////////////////////////////////////////////////////
	                        |ВЫБРАТЬ
	                        |	Сводная.Период,
	                        |	Сводная.КорСубконто3 КАК Терминал,
	                        |	СУММА(Сводная.СуммаОборот) КАК СуммаОборот,
	                        |	СУММА(Сводная.СуммаОборотДт) КАК СуммаОборотДт,
	                        |	СУММА(Сводная.СуммаОборотКт) КАК СуммаОборотКт
	                        |ИЗ
	                        |	Сводная КАК Сводная
	                        |
	                        |СГРУППИРОВАТЬ ПО
	                        |	Сводная.Период,
	                        |	Сводная.КорСубконто3
	                        |
	                        |УПОРЯДОЧИТЬ ПО
	                        |	Терминал
	                        |ИТОГИ ПО
	                        |	Терминал
	                        |АВТОУПОРЯДОЧИВАНИЕ";
							
	ЗапросЭквайринг.УстановитьПараметр("НачПериода", НачалоПериода);
	ЗапросЭквайринг.УстановитьПараметр("КонПериода", КонецДня(КонецПериода));
	ЗапросЭквайринг.УстановитьПараметр("Счет511", ПланыСчетов.Финансовый.РасчетныйСчет);
	ЗапросЭквайринг.УстановитьПараметр("ТТ", Терминал);
	ЗапросЭквайринг.УстановитьПараметр("Счет572", ПланыСчетов.Финансовый.ДенежныеСредстваВПутиЭквайринг);
	ЗапросЭквайринг.УстановитьПараметр("Счет443", ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения);
	
	ВыборкаЭквайрингТерминалы = ЗапросЭквайринг.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаОплатыТерминалы = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ОбщСумма = 0;
	МассивСтрокДляУд = Новый Массив;
	
	ТзОплаты = Новый ТаблицаЗначений;
	ТзОплаты.Колонки.Добавить("Период");
	ТзОплаты.Колонки.Добавить("СуммаОборот");
	
	ДопустимаяПогрешность = (НачалоПериода - НачПериодаВыручки) / 86400;
	
	Пока ВыборкаЭквайрингТерминалы.Следующий() Цикл
		
		Если НЕ ВыборкаОплатыТерминалы.НайтиСледующий(ВыборкаЭквайрингТерминалы.Терминал, "Терминал") Тогда
			Продолжить;
		КонецЕсли;	
		
		ВыборкаТерминал = ВыборкаЭквайрингТерминалы.Выбрать();
		
		Пока ВыборкаТерминал.Следующий() Цикл
			
			ВыборкаОплаты = ВыборкаОплатыТерминалы.Выбрать();
			
			Пока ВыборкаОплаты.Следующий() Цикл
				НовСтр = ТзОплаты.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, ВыборкаОплаты);				
			КонецЦикла;
			
			Для Каждого СтрОпл Из ТзОплаты Цикл
				
				Если ВыборкаТерминал.Период = СтрОпл.Период + 86400 Тогда
					
					ОбщСумма = ОбщСумма + СтрОпл.СуммаОборот;
					МассивСтрокДляУд.Добавить(СтрОпл);
					Прервать;
					
				КонецЕсли;
				
				ОбщСумма = ОбщСумма + СтрОпл.СуммаОборот;
				
				МассивСтрокДляУд.Добавить(СтрОпл);
				
			КонецЦикла;
			
			НовСтр = Выгрузка.Добавить();
			НовСтр.ПериодЭквайринга = ВыборкаТерминал.Период;
			НовСтр.Терминал = ВыборкаТерминал.Терминал;
			НовСтр.СуммаПоЭквайрингу = ВыборкаТерминал.СуммаОборот;
			НовСтр.СуммаПоОплате = ОбщСумма;
			НовСтр.ДопустимаяПогрешность = ДопустимаяПогрешность;
			НовСтр.РазницаДляСписывания = НовСтр.СуммаПоОплате - НовСтр.СуммаПоЭквайрингу;
			
			Для Каждого СтрУд Из МассивСтрокДляУд Цикл
				ТзОплаты.Удалить(СтрУд);
			КонецЦикла;
			
			МассивСтрокДляУд.Очистить();
			ОбщСумма = 0;			
			
		КонецЦИкла;
		
		ТзОплаты.Очистить();
		ВыборкаОплатыТерминалы.Сбросить();
		
	КонецЦикла;	
	
КонецПроцедуры

Функция ВычислитьНачалоПериодаВыручки()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря КАК ДатаКалендаря,
	               |	РегламентированныйПроизводственныйКалендарь.Год,
	               |	РегламентированныйПроизводственныйКалендарь.Пятидневка,
	               |	РегламентированныйПроизводственныйКалендарь.Шестидневка,
	               |	РегламентированныйПроизводственныйКалендарь.КалендарныеДни,
	               |	РегламентированныйПроизводственныйКалендарь.ВидДня
	               |ИЗ
	               |	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	               |ГДЕ
	               |	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &НачПериода И &КонПериода
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаКалендаря УБЫВ
	               |АВТОУПОРЯДОЧИВАНИЕ";
				   
	Запрос.УстановитьПараметр("НачПериода", ДобавитьМесяц(НачалоПериода, -1));
	Запрос.УстановитьПараметр("КонПериода", НачалоПериода - 86400);
	
	ТзПериоды = Запрос.Выполнить().Выгрузить();
	
	ПРошлаяДата = Дата("00010101");
	
	Для Каждого Стр Из ТзПериоды Цикл
		
		Если Стр.ВидДня = Перечисления.ВидыДнейПроизводственногоКалендаря.Рабочий Тогда
			
			Если ПрошлаяДата = Дата("00010101") Тогда
				Возврат Стр.ДатаКалендаря;
			Иначе
			     Возврат ПрошлаяДата;
			КонецЕсли;
						
		КонецЕсли;
		
		ПрошлаяДата = Стр.ДатаКалендаря;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
			
