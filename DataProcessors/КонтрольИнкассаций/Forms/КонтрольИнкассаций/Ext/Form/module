//+++АК LAGP 2018.09.25 ИП-00019420 Разработал Лагерев.

Перем ПредыдущаяСтруктурнаяЕдиница;
Перем Окраска;

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	МассивПраваКонтрольИнкассаций = УправлениеДопПравамиПользователей.ПрочитатьЗначениеПраваПользователя(ПланыВидовХарактеристик.ПраваПользователей.КонтрольИнкассаций,Ложь,ПараметрыСеанса.ТекущийПользователь);	
	ПравоКонтрольИнкассаций = МассивПраваКонтрольИнкассаций[0];
	
	Если НЕ ПравоКонтрольИнкассаций Тогда
		Сообщить("У вас нет дополнительного права ""Конроль инкассаций"", рассылка будет недоступна.");
		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОтправитьПисьма.Доступность = Ложь;
		//Отказ = Истина;	
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	Оповещение = Новый ОписаниеОповещения("ПоказатьВопросНеМодально", ЭтаФорма, "Заполнение");
	ПоказатьВопрос(Оповещение, "Таблица будет обновлена!", РежимДиалогаВопрос.ОКОтмена, 20);				
	     		
КонецПроцедуры

Процедура ТаблицаЛистовУчетаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Окраска Тогда
		ОформлениеСтроки.ЦветФона = WebЦвета.ЦианСветлый;
	КонецЕсли;		
	
	ОформлениеСтроки.Ячейки.ГруппаОтказа.Видимость = Ложь;	
	
	Если ДанныеСтроки.ПисьмоОтменыБылоОтправлено Тогда
		ОформлениеСтроки.Ячейки.ОтправленоПисьмоОтмены.ЦветФона 		= WebЦвета.БледноЛиловый;
		ОформлениеСтроки.Ячейки.ОтправленоПисьмоОтмены.ТолькоПросмотр 	= Истина;
		ОформлениеСтроки.Ячейки.ПричинаОтмены.ТолькоПросмотр 			= Истина;
		ОформлениеСтроки.Ячейки.ОтветственныйЗаОтмену.ТолькоПросмотр 	= Истина;
		ОформлениеСтроки.Ячейки.ПричинаОтмены.ЦветФона 					= WebЦвета.БледноЛиловый;
		ОформлениеСтроки.Ячейки.ОтветственныйЗаОтмену.ЦветФона 			= WebЦвета.БледноЛиловый;
	КонецЕсли;	
	
	Если ДанныеСтроки.Контроль = "Превышен лимит инкассации!" Тогда
		Если ДанныеСтроки.ПисьмоРасхожденияБылоОтправлено Тогда
			ОформлениеСтроки.Ячейки.Контроль.ЦветФона = WebЦвета.БледноЛиловый;
		Иначе				
			ОформлениеСтроки.Ячейки.Контроль.ЦветФона = WebЦвета.Красный;
		КонецЕсли;	
	ИначеЕсли ДанныеСтроки.Контроль = "Не задан график инкассаций!" Тогда
		ОформлениеСтроки.Ячейки.Контроль.ЦветФона = WebЦвета.БледноЗолотистый;
	КонецЕсли;
	
	Если ДанныеСтроки.Самоинкассация Тогда
		ДанныеСтроки.РазрешенныйОстаток = 200000;
	Иначе
		ДанныеСтроки.РазрешенныйОстаток = 250000;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПоказатьВопросНеМодально(Результат, ПараметрыЗаписи) Экспорт
	
	Если ПараметрыЗаписи = "Отправка" Тогда
		Если Результат = КодВозвратаДиалога.Да Тогда
			ТаблицаСПризнаком = ТаблицаЛистовУчета.Выгрузить(Новый Структура("ОтправленоПисьмоОтмены", ИСТИНА));
			Если ТаблицаСПризнаком.Количество() > 0 Тогда
				Для каждого ОтобраннаяСтрока из ТаблицаСПризнаком Цикл
					Если НЕ ОтобраннаяСтрока.ПисьмоОтменыБылоОтправлено Тогда
						МенеджерЗаписиКонтрольИнкассаций = РегистрыСведений.КонтрольИнкассаций.СоздатьМенеджерЗаписи();				
						ЗаполнитьЗначенияСвойств(МенеджерЗаписиКонтрольИнкассаций, ОтобраннаяСтрока);						
						МенеджерЗаписиКонтрольИнкассаций.Записать();
						СтруктураПараметров = Новый Структура;
						СтруктураПараметров.Вставить("СтруктурнаяЕдиница", ОтобраннаяСтрока.ТорговаяТочка);
						СтруктураПараметров.Вставить("ВидПисьма", "Отмена");
						СтруктураПараметров.Вставить("ЛистУчета", ОтобраннаяСтрока.ЛистУчета);
						СтруктураПараметров.Вставить("Дата", ОтобраннаяСтрока.Период);
						СтруктураПараметров.Вставить("ПолучателиРассылки", "" + ОтобраннаяСтрока.АдресаДляРассылкиБухРасчётчик + ОтобраннаяСтрока.АдресаДляРассылкиПомощникТУЗ);						
						ОтправитьПисьмо(СтруктураПараметров);
					КонецЕсли;	
				КонецЦикла;								
			КонецЕсли;
			
			ТаблицаСКонтролем = ТаблицаЛистовУчета.Выгрузить(Новый Структура("Контроль", "Превышен лимит инкассации!"));
			Если ТаблицаСКонтролем.Количество() > 0 Тогда
				Для каждого ОтобраннаяСтрока из ТаблицаСКонтролем Цикл
					//Обработки.КонтрольИнкассаций.СформироватьИОтправитьПисьмаПревышенияЛимита(НачПериода); //+++АК LAGP 2018.11.21 ИП-00020402 Отправка всех вчерашних не отправленных по регламентной процедуре     
					
					//Отправка по 1 письму на каждую точку
					//Если НЕ ОтобраннаяСтрока.ПисьмоРасхожденияБылоОтправлено Тогда
					//	МенеджерЗаписиКонтрольИнкассаций = РегистрыСведений.КонтрольИнкассаций.СоздатьМенеджерЗаписи();				
					//	ЗаполнитьЗначенияСвойств(МенеджерЗаписиКонтрольИнкассаций, ОтобраннаяСтрока);
					//	МенеджерЗаписиКонтрольИнкассаций.ОтправленоПисьмоОРасхождении = ИСТИНА;
					//	МенеджерЗаписиКонтрольИнкассаций.Записать();
					//	СтруктураПараметров = Новый Структура;
					//	СтруктураПараметров.Вставить("СтруктурнаяЕдиница", ОтобраннаяСтрока.ТорговаяТочка);
					//	СтруктураПараметров.Вставить("ВидПисьма", "Расхождение");
					//	СтруктураПараметров.Вставить("Дата", ОтобраннаяСтрока.Период);
					//	СтруктураПараметров.Вставить("ЛистУчета", ОтобраннаяСтрока.ЛистУчета);
					//	СтруктураПараметров.Вставить("Сумма", ОтобраннаяСтрока.КонечныйОстаток);
					//	СтруктураПараметров.Вставить("ПолучателиРассылки", "" + ОтобраннаяСтрока.АдресаДляРассылкиБухРасчётчик + ОтобраннаяСтрока.АдресаДляРассылкиПомощникТУЗ + ОтобраннаяСтрока.АдресРасчётчикаВЛистеУчёта);												
					//	ОтправитьПисьмо(СтруктураПараметров)
					//КонецЕсли;	
				КонецЦикла;								
			КонецЕсли;
			                                                                                     
		КонецЕсли;	
		ПоказатьВопросНеМодально(КодВозвратаДиалога.ОК, "Заполнение");
	ИначеЕсли ПараметрыЗаписи = "Заполнение" Тогда
		Если Результат = КодВозвратаДиалога.ОК Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ЛистУчетаДокумент.Ссылка КАК ЛистУчета,
				|	ЛистУчетаДокумент.ТорговаяТочка,
				|	ЛистУчетаДокумент.НачальныйОстаток,
				|	ЛистУчетаДокумент.СуммаНал КАК НаличныеПоступления,
				|	ЛистУчетаДокумент.ВозвратПокупателю КАК ВозвратыДС,
				|	ЛистУчетаДокумент.Отклонение КАК РазницаПоДеньгам,
				|	ЛистУчетаДокумент.СуммаИнкассации КАК Инкассация,
				|	ЛистУчетаДокумент.КонечныйОстаток,
				|	КонтрольИнкассаций.ОтправленоПисьмоОРасхождении КАК ПисьмоРасхожденияБылоОтправлено,
				|	КонтрольИнкассаций.ОтправленоПисьмоОтмены,
				|	КонтрольИнкассаций.ОтправленоПисьмоОтмены КАК ПисьмоОтменыБылоОтправлено,
				|	КонтрольИнкассаций.ОтветственныйЗаОтмену,
				|	КонтрольИнкассаций.ПричинаОтмены,
				|	ВЫБОР
				|		КОГДА ДЕНЬНЕДЕЛИ(ЛистУчетаДокумент.Дата) = 1
				|			ТОГДА ГрафикИнкассации.ИнкассацияПн
				|		ИНАЧЕ ВЫБОР
				|				КОГДА ДЕНЬНЕДЕЛИ(ЛистУчетаДокумент.Дата) = 2
				|					ТОГДА ГрафикИнкассации.ИнкассацияВт
				|				ИНАЧЕ ВЫБОР
				|						КОГДА ДЕНЬНЕДЕЛИ(ЛистУчетаДокумент.Дата) = 3
				|							ТОГДА ГрафикИнкассации.ИнкассацияСр
				|						ИНАЧЕ ВЫБОР
				|								КОГДА ДЕНЬНЕДЕЛИ(ЛистУчетаДокумент.Дата) = 4
				|									ТОГДА ГрафикИнкассации.ИнкассацияЧт
				|								ИНАЧЕ ВЫБОР
				|										КОГДА ДЕНЬНЕДЕЛИ(ЛистУчетаДокумент.Дата) = 5
				|											ТОГДА ГрафикИнкассации.ИнкассацияПт
				|										ИНАЧЕ ВЫБОР
				|												КОГДА ДЕНЬНЕДЕЛИ(ЛистУчетаДокумент.Дата) = 6
				|													ТОГДА ГрафикИнкассации.ИнкассацияСб
				|												ИНАЧЕ ВЫБОР
				|														КОГДА ДЕНЬНЕДЕЛИ(ЛистУчетаДокумент.Дата) = 7
				|															ТОГДА ГрафикИнкассации.ИнкассацияВс
				|													КОНЕЦ
				|											КОНЕЦ
				|									КОНЕЦ
				|							КОНЕЦ
				|					КОНЕЦ
				|			КОНЕЦ
				|	КОНЕЦ КАК ЭтоДеньИнкассации,
				|	СтруктурныеЕдиницы.КонтрагентИнкассатор КАК Инкассатор,
				|	ЛистУчетаДокумент.Дата,
				|	СтруктурныеЕдиницы.НомерТочки,
				|	СтруктурныеЕдиницы.НомерЯвочнойКартыДляИнкассации,
				|	СтруктурныеЕдиницы.Самоинкассация,
				|	Пользователи.ФизЛицо КАК РасчётчикФизЛицо,
				|	ВЫБОР
				|		КОГДА ГрафикИнкассации.ИнкассацияПн = ИСТИНА
				|			ТОГДА ""Пн ""
				|       ИНАЧЕ """"
				|	КОНЕЦ + 
				|	ВЫБОР
				|		КОГДА ГрафикИнкассации.ИнкассацияВт = ИСТИНА
				|			ТОГДА ""Вт ""
				|       ИНАЧЕ """"
				|	КОНЕЦ +
			    |	ВЫБОР
				|		КОГДА ГрафикИнкассации.ИнкассацияСр = ИСТИНА
				|			ТОГДА ""Ср ""
				|       ИНАЧЕ """"
				|	КОНЕЦ + 
				|	ВЫБОР
				|		КОГДА ГрафикИнкассации.ИнкассацияЧт = ИСТИНА
				|			ТОГДА ""Чт ""
				|       ИНАЧЕ """"
				|	КОНЕЦ +
				|	ВЫБОР
				|		КОГДА ГрафикИнкассации.ИнкассацияПт = ИСТИНА
				|			ТОГДА ""Пт ""
				|       ИНАЧЕ """"
				|	КОНЕЦ +
				|	ВЫБОР
				|		КОГДА ГрафикИнкассации.ИнкассацияСб = ИСТИНА
				|			ТОГДА ""Сб ""
				|       ИНАЧЕ """"
				|	КОНЕЦ +
				|	ВЫБОР
				|		КОГДА ГрафикИнкассации.ИнкассацияВс = ИСТИНА
				|			ТОГДА ""Вс""
				|       ИНАЧЕ """"
				|	КОНЕЦ КАК ГрафикСтрокой
				|ПОМЕСТИТЬ втПодготовленная
				|ИЗ
				|	Документ.ЛистУчета КАК ЛистУчетаДокумент
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтрольИнкассаций КАК КонтрольИнкассаций
				|		ПО (КонтрольИнкассаций.ЛистУчета = ЛистУчетаДокумент.Ссылка)
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикИнкассации КАК ГрафикИнкассации
				|		ПО ЛистУчетаДокумент.ТорговаяТочка = ГрафикИнкассации.ТорговаяТочка
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
				|		ПО ЛистУчетаДокумент.ТорговаяТочка = СтруктурныеЕдиницы.Ссылка
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
				|		ПО ЛистУчетаДокумент.Расчетчик = Пользователи.Ссылка
				|ГДЕ
				|	ЛистУчетаДокумент.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
				|	И ЛистУчетаДокумент.Проведен = ИСТИНА
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	втПодготовленная.ЛистУчета,
				|	втПодготовленная.ТорговаяТочка КАК ТорговаяТочка,
				|	втПодготовленная.НачальныйОстаток,
				|	втПодготовленная.НаличныеПоступления,
				|	втПодготовленная.ВозвратыДС,
				|	втПодготовленная.РазницаПоДеньгам,
				|	втПодготовленная.Инкассация,
				|	втПодготовленная.КонечныйОстаток,
				|	втПодготовленная.ПисьмоРасхожденияБылоОтправлено,
				|	втПодготовленная.ОтправленоПисьмоОтмены,
				|	втПодготовленная.ПисьмоОтменыБылоОтправлено,
				|	втПодготовленная.ОтветственныйЗаОтмену,
				|	втПодготовленная.ПричинаОтмены,
				|	втПодготовленная.ЭтоДеньИнкассации,
				|	ВЫБОР
				|		КОГДА втПодготовленная.КонечныйОстаток >= 200000
				|				И втПодготовленная.Самоинкассация = ИСТИНА
				|			ТОГДА ""Превышен лимит инкассации!""
				|		ИНАЧЕ ВЫБОР
				|				КОГДА втПодготовленная.КонечныйОстаток >= 250000
				|						И втПодготовленная.Самоинкассация = ЛОЖЬ
				|					ТОГДА ""Превышен лимит инкассации!""
				|				ИНАЧЕ """"
				|			КОНЕЦ
				|	КОНЕЦ КАК Контроль,
				|	втПодготовленная.Инкассатор КАК Инкассатор,
				|	втПодготовленная.Дата КАК Период,
				|	втПодготовленная.НомерЯвочнойКартыДляИнкассации,
				|	втПодготовленная.Самоинкассация,
				|	ЛОЖЬ КАК Окраска,
				|	КонтактнаяИнформация.Представление КАК АдресРасчётчикаВЛистеУчёта,
				|	втПодготовленная.ГрафикСтрокой
				|ИЗ
				|	втПодготовленная КАК втПодготовленная
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
				|		ПО втПодготовленная.РасчётчикФизЛицо = КонтактнаяИнформация.Объект
				|ГДЕ
				|	КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EMailФизЛица)
				|
				|УПОРЯДОЧИТЬ ПО
				|	втПодготовленная.НомерТочки,
				|	втПодготовленная.Дата";
			
				//|	ВЫБОР
				//|		КОГДА втПодготовленная.ЭтоДеньИнкассации ЕСТЬ NULL
				//|			ТОГДА ""Не задан график инкассаций!""
				//|		ИНАЧЕ ВЫБОР
				//|				КОГДА втПодготовленная.ЭтоДеньИнкассации = ИСТИНА
				//|					ТОГДА ВЫБОР
				//|							КОГДА втПодготовленная.КонечныйОстаток >= 200000
				//|								ТОГДА ""Превышен лимит инкассации!""
				//|							ИНАЧЕ """"
				//|						КОНЕЦ
				//|			КОНЕЦ
				//|	КОНЕЦ КАК Контроль, // запасной текст в поле "контроль"
				
				//|	ВЫБОР
				//|		КОГДА втПодготовленная.ЭтоДеньИнкассации = ИСТИНА
				//|			ТОГДА втПодготовленная.Инкассатор
				//|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
				//|	КОНЕЦ КАК Инкассатор, // заполнение поля инкассатор только по дням инкассации
							
			Запрос.УстановитьПараметр("ДатаНачала", НачПериода);
			Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(КонПериода));	
			
			РезультатЗапроса = Запрос.Выполнить();  //+++АК LAGP 2018.10.08 ИП-00019420.01 Добавлено поле ГрафикСтрокой, изменено поведение лимитов.
			
			Если НЕ РезультатЗапроса.Пустой() Тогда		
				ТаблицаДанных = РезультатЗапроса.Выгрузить();
				ТаблицаДанных.Колонки.Добавить("АдресаДляРассылкиБухРасчётчик");
				ТаблицаДанных.Колонки.Добавить("АдресаДляРассылкиПомощникТУЗ");
				ТаблицаДанных.Колонки.Добавить("СотрудникБухРасчётчик");
				ТаблицАдресовОтветственных = ПолучитьТаблицуАдресов(ТаблицаДанных.ВыгрузитьКолонку("ТорговаяТочка"));
				АдресаЕсть = ЗначениеЗаполнено(ТаблицАдресовОтветственных);
				
				Для каждого СтрокаТаблицыДанных Из ТаблицаДанных Цикл
					
					Если АдресаЕсть Тогда
						НайденнаяСтрокаАдресов = ТаблицАдресовОтветственных.Найти(СтрокаТаблицыДанных.ТорговаяТочка);
						Если ЗначениеЗаполнено(НайденнаяСтрокаАдресов) Тогда
							СтрокаТаблицыДанных.АдресаДляРассылкиБухРасчётчик 	= НайденнаяСтрокаАдресов.АдресаДляРассылкиБухРасчётчик;
							СтрокаТаблицыДанных.АдресаДляРассылкиПомощникТУЗ 	= НайденнаяСтрокаАдресов.АдресаДляРассылкиПомощникТУЗ;
							СтрокаТаблицыДанных.СотрудникБухРасчётчик 			= НайденнаяСтрокаАдресов.СотрудникБухРасчётчик;
						КонецЕсли;	
					КонецЕсли;	
					
					Если ПредыдущаяСтруктурнаяЕдиница = СтрокаТаблицыДанных.ТорговаяТочка Тогда
						Если Окраска Тогда
							СтрокаТаблицыДанных.Окраска = ИСТИНА;
						КонецЕсли;	
					Иначе
						Окраска = НЕ Окраска;
						Если Окраска Тогда
							СтрокаТаблицыДанных.Окраска = ИСТИНА;
						КонецЕсли;
					КонецЕсли;	
					ПредыдущаяСтруктурнаяЕдиница = СтрокаТаблицыДанных.ТорговаяТочка;	
				КонецЦикла;	
				
				ТаблицаЛистовУчета.Загрузить(ТаблицаДанных);
			Иначе
				Сообщить("По данным параметрам документов не найдено!");
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

Функция ПолучитьТаблицуАдресов(МассивСтруктурныхЕдиниц)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствиеОбъектРольСрезПоследних.РольПользователя,
		|	СоответствиеОбъектРольСрезПоследних.Объект,
		|	РолиПользователейСоставРоли.Сотрудник,
		|	РолиПользователейСоставРоли.Ссылка,
		|	СоответствиеОбъектРольСрезПоследних.ТипРолиID
		|ПОМЕСТИТЬ втСотрудникиПолучатели
		|ИЗ
		|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
		|			,
		|			Объект В (&МассивСтруктурныхЕдиниц)
		|					И ТипРолиID = ""BuhRaschetchik""
		|				ИЛИ ПОДСТРОКА(РольПользователя.Наименование, 0, 12) = ""Помощник_ТУ3"") КАК СоответствиеОбъектРольСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = РолиПользователейСоставРоли.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втСотрудникиПолучатели.Объект КАК ТорговаяТочка,
		|	втСотрудникиПолучатели.Сотрудник,
		|	втСотрудникиПолучатели.ТипРолиID,
		|	КонтактнаяИнформация.Представление
		|ИЗ
		|	втСотрудникиПолучатели КАК втСотрудникиПолучатели
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ПО втСотрудникиПолучатели.Сотрудник = КонтактнаяИнформация.Объект
		|ГДЕ
		|	КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица)";
	
	Запрос.УстановитьПараметр("МассивСтруктурныхЕдиниц", МассивСтруктурныхЕдиниц);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;	
	
	ТаблицаВспомогательная = РезультатЗапроса.Выгрузить();
	ТаблицаВспомогательная.Свернуть("ТорговаяТочка");	
	ТаблицаВспомогательная.Колонки.Добавить("АдресаДляРассылкиБухРасчётчик");
	ТаблицаВспомогательная.Колонки.Добавить("СотрудникБухРасчётчик");
	ТаблицаВспомогательная.Колонки.Добавить("АдресаДляРассылкиПомощникТУЗ");	
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НайденныеСтроки = ТаблицаВспомогательная.НайтиСтроки(Новый Структура("ТорговаяТочка", ВыборкаДетальныеЗаписи.ТорговаяТочка));	
		Для каждого НайденнаяСтрока из НайденныеСтроки Цикл
			Если ВыборкаДетальныеЗаписи.ТипРолиID = "BuhRaschetchik" Тогда
				НайденнаяСтрока.АдресаДляРассылкиБухРасчётчик = "" + НайденнаяСтрока.АдресаДляРассылкиБухРасчётчик + ВыборкаДетальныеЗаписи.Представление + ";";
				НайденнаяСтрока.СотрудникБухРасчётчик = "" + НайденнаяСтрока.СотрудникБухРасчётчик + ?(ЗначениеЗаполнено(НайденнаяСтрока.СотрудникБухРасчётчик), "; ", "") + ВыборкаДетальныеЗаписи.Сотрудник;
			ИначеЕсли ВыборкаДетальныеЗаписи.ТипРолиID = "PomoshnikTerrUpravlyushego" Тогда
				НайденнаяСтрока.АдресаДляРассылкиПомощникТУЗ = "" + НайденнаяСтрока.АдресаДляРассылкиПомощникТУЗ + ВыборкаДетальныеЗаписи.Представление + ";";
			КонецЕсли;	
		КонецЦикла;
	КонецЦикла;

	Возврат ТаблицаВспомогательная; 
	
КонецФункции	
	
Процедура ОсновныеДействияФормыОтправитьПисьма(Кнопка)
	
	Оповещение = Новый ОписаниеОповещения("ПоказатьВопросНеМодально", ЭтаФорма, "Отправка");
	ПоказатьВопрос(Оповещение, "Желаете отправить письма отказа?", РежимДиалогаВопрос.ДаНет, 20);			
	
КонецПроцедуры

Процедура ОтправитьПисьмо(СтруктураПараметров)
	
	СтруктураПисьма = Новый Структура;
	Кому = Новый СписокЗначений;	
	Кому.Добавить(СтруктураПараметров.ПолучателиРассылки);
		
	Если СтруктураПараметров.ВидПисьма = "Отмена" Тогда
		Тема = "По магазину " + СтруктураПараметров.СтруктурнаяЕдиница + " зафиксирован отказ от инкассации " + СтруктураПараметров.Дата + ".";
		Тело = "По магазину " + СтруктураПараметров.СтруктурнаяЕдиница + " зафиксирован отказ от инкассации " + СтруктураПараметров.Дата + "." + Символы.ПС + СтруктураПараметров.ЛистУчета;
	ИначеЕсли СтруктураПараметров.ВидПисьма = "Расхождение" Тогда
		Кому.Добавить("buh18@vkusvill.ru;buh39@vkusvill.ru;buh53@vkusvill.ru;buh52@vkusvill.ru;buh56@vkusvill.ru;buh43@vkusvill.ru;buh02@p01.vkusvill.ru");
		Тема = "По магазину " + СтруктураПараметров.СтруктурнаяЕдиница + " " + СтруктураПараметров.Дата + " зафиксировано превышение лимита остатка денежных средств.";
		Тело = "По магазину " + СтруктураПараметров.СтруктурнаяЕдиница + " " + СтруктураПараметров.Дата + " зафиксировано превышение лимита остатка денежных средств." + Символы.ПС + "Остаток составил " + СтруктураПараметров.Сумма + Символы.ПС + "Ответственное лицо " + ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтруктураПараметров.ЛистУчета, "Расчетчик") + "." + Символы.ПС + СтруктураПараметров.ЛистУчета;	
	КонецЕсли;	
		
	Тело = Тело + Символы.ПС + Символы.ПС + "Время создания рассылки: " + ТекущаяДата() + Символы.ПС + "Инициатор рассылки: " + ПараметрыСеанса.ТекущийПользователь;				
	
	Кому.Добавить("lagp@automacon.ru");
	
	СтруктураПисьма.Вставить("Кому", Кому);
	СтруктураПисьма.Вставить("Тема", Тема);
	СтруктураПисьма.Вставить("Тело", Тело);
	СтруктураПисьма.Вставить("СписокФайловВложений", Новый Массив);
	
	ОбщегоНазначенияКлиентСервер.ОтправитьПисьмоПоПочте(СтруктураПисьма);
	
КонецПроцедуры;	

ПредыдущаяСтруктурнаяЕдиница = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
Окраска = Ложь;