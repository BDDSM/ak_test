
Функция ПодключитьВнешнююКомпонентуПечатиШтрихкода() Экспорт
	
	// В зависимости от типа платформы подключим соответствующую внешнюю компоненту
	ПодключениеВыполнено = Неопределено;
	СистемнаяИнформация = Новый СистемнаяИнформация;
	Если СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86 Тогда
		ПодключениеВыполнено = ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаПечатиШтрихкодовWindows32", "КартинкаШтрихкода", ТипВнешнейКомпоненты.Native);
	ИначеЕсли СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
		ПодключениеВыполнено = ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаПечатиШтрихкодовWindows64", "КартинкаШтрихкода", ТипВнешнейКомпоненты.Native);
	КонецЕсли;
	
	// Создадим объект внешней компоненты
	Если ПодключениеВыполнено Тогда
		ВнешняяКомпонента = Новый("AddIn.КартинкаШтрихкода.Barcode");
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	// Если нет возможности рисовать
	Если НЕ ВнешняяКомпонента.ГрафикаУстановлена Тогда
		// То картинку сформировать не сможем
		Возврат Неопределено;
	Иначе
		
		// Установим основные параметры компоненты
		
		// Если в системе установлен шрифт Tahoma
		Если ВнешняяКомпонента.НайтиШрифт("Tahoma") = Истина Тогда
			// Выбираем его как шрифт для формирования картинки
			ВнешняяКомпонента.Шрифт = "Tahoma";
		Иначе
			
			// Шрифт Tahoma в системе отсутствует
			// Обойдем все доступные компоненте шрифты
			Для Сч = 0 По ВнешняяКомпонента.КоличествоШрифтов -1 Цикл
				// Получим очередной шрифт, доступный компоненте
				ТекущийШрифт = ВнешняяКомпонента.ШрифтПоИндексу(Сч);
				// Если шрифт доступен
				Если ТекущийШрифт <> Неопределено Тогда
					// Они и будет шрифтом для формирования штри-кода
					ВнешняяКомпонента.Шрифт = ТекущийШрифт;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		// Утановим размер шрифта
		ВнешняяКомпонента.РазмерШрифта = 12;
		
		Возврат ВнешняяКомпонента;
		
	КонецЕсли;;
	
КонецФункции

Функция ПолучитьТабДокБейджей(МассивФизическихЛиц) Экспорт
	
	ВнешняяКомпонента = ПодключитьВнешнююКомпонентуПечатиШтрихкода();
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = Обработки.ПечатьБейджейПродавцов.ПолучитьМакет("Бэйдж");
	
	Для Каждого СтрокаМассива Из МассивФизическихЛиц Цикл
		
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		ОбластьМакета.Параметры.ФИО = СокрЛП(СтрокаМассива.Наименование);
		
		ОбластьМакета.Параметры.Код = ПолучитьКодПродавца(СтрокаМассива.Код);
		
		Если ВнешняяКомпонента <> Неопределено Тогда
			
			//ВнешняяКомпонента.АвтоТип = Ложь;
			//ВнешняяКомпонента.ТипКода = 1; // указан тип EAN13
			
			Штрихкод = СтрокаМассива.Пароль;
			Параметры = Новый Структура();
			Параметры.Вставить("Ширина"			, ОбластьМакета.Рисунки.Штрихкод.Ширина);
			Параметры.Вставить("Высота"			, ОбластьМакета.Рисунки.Штрихкод.Высота);
			Параметры.Вставить("ТипКода"		, 1);
			Параметры.Вставить("ОтображатьТекст", Истина);
			Параметры.Вставить("РазмерШрифта"	, 8);
			Параметры.Вставить("Штрихкод"		, Штрихкод);
			
			ОбластьМакета.Рисунки.Штрихкод.Картинка = ОбщегоНазначенияКлиентСервер.ПолучитьКартинкуШтрихкода(ВнешняяКомпонента, Параметры);
			
		КонецЕсли;
		
		Если Не ТабДок.ПроверитьВывод(ОбластьМакета) Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьМакета);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПолучитьТабДокОбычные(ТабКПечати) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = Обработки.ПечатьБейджейПродавцов.ПолучитьМакет("Бэйдж_Обычный");
	
	Для Каждого СтрокаТаб Из ТабКПечати Цикл
		
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		ОбластьМакета.Рисунки.ФИО.Текст = СокрЛП(СтрокаТаб.Имя) + Символы.ПС + СтрокаТаб.Фамилия;
		ОбластьМакета.Рисунки.Должность.Текст = СокрЛП(СтрокаТаб.Должность);
		
		Если Не ТабДок.ПроверитьВывод(ОбластьМакета) Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ТабДок.Вывести(ОбластьМакета);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПолучитьКодПродавца(Знач КодПродавца)
	
	ОбработатьСтроку = Истина;
	
	Пока ОбработатьСтроку Цикл
		Если Лев(КодПродавца, 1) = "0" Тогда
			КодПродавца = Прав(КодПродавца, СтрДлина(КодПродавца)-1);
		Иначе
			ОбработатьСтроку = Ложь;
		КонецЕсли;	
	КонецЦикла;
	
	Если СтрДлина(КодПродавца) <= 3 Тогда
		КодПродавца = "000" + КодПродавца;
		КодПродавца = "0." + Прав(КодПродавца, 3);
	Иначе
		КодПродавца = "00000" + КодПродавца;
		КодПродавца = Прав(КодПродавца, 5);
		КодПродавца = Лев(КодПродавца, 2) + "." + Прав(КодПродавца, 3);
	КонецЕсли;
	
	Возврат КодПродавца;
	
КонецФункции