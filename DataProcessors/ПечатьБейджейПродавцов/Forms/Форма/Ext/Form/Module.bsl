
&НаСервере
Функция ПечатьНаСервере()
	
	МассивПродавцы = Новый Массив();
	Для Каждого СтрокаТаб Из Объект.Продавцы Цикл
		Если СтрокаТаб.Печатать Тогда
			МассивПродавцы.Добавить(СтрокаТаб.Сотрудник);
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат Обработки.ПечатьБейджейПродавцов.ПолучитьТабДокБейджей(МассивПродавцы);
	
КонецФункции

&НаКлиенте
Процедура Печать(Команда)
	
	ТабДок = ПечатьНаСервере();
	
	ОткрытьФорму("ОбщаяФорма.ФормаОтображенияТабДокумента", Новый Структура("ТабДок, УстановитьЗаголовок", ТабДок, "Бэйджи"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//Фрм = ПолучитьФорму("ОбщаяФорма.Аутентификация");
	//Результ = Фрм.ОткрытьМодально();
	//
	//Если Результ = Неопределено ИЛИ Результ = Ложь Тогда
	//	Отказ = Истина;
	//	Возврат;
	//КонецЕсли;
	//
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	                                                                             
	Запрос = Новый Запрос();
	
	//+++АК mika 2018.01.25 ИП-00017263.02 Добавление возможности печати внештатных сотрудников
	//Бейджи хотят печатать также в офисе, менеджеры внештатных сотрудников, через Web клиент.
	//Должны быть доступны внештатные сотрудники Контрагента на дату печати.
	//Запрос.УстановитьПараметр("ТорговаяТочка"	, ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	
	Параметры.Свойство("ГруппаСотрудников", ГруппаСотрудников);

	Попытка
		Запрос.УстановитьПараметр("ТорговаяТочка"	, ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	Исключение
		Запрос.УстановитьПараметр("ТорговаяТочка"	, Справочники.СтруктурныеЕдиницы.ПустаяСсылка());
	КонецПопытки;
	//---АК mika
	
	Запрос.УстановитьПараметр("Период"			, НачалоДня(ТекущаяДата()));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТабельРаботыПродавцов.Сотрудник.Код КАК Код,
	|	ВЫБОР
	|		КОГДА ТабельРаботыПродавцов.СвойствоПродавца = 2
	|			ТОГДА ""Старший продавец""
	|		ИНАЧЕ ""Продавец-консультант""
	|	КОНЕЦ КАК Должность,
	|	ТабельРаботыПродавцов.Сотрудник.Наименование КАК Наименование
	|ИЗ
	|	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
	|ГДЕ
	|	ТабельРаботыПродавцов.ТорговаяТочка = &ТорговаяТочка
	|	И ТабельРаботыПродавцов.Период = &Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабельРаботыКассиров.Сотрудник.Код,
	|	""Кассир"",
	|	ТабельРаботыКассиров.Сотрудник.Наименование
	|ИЗ
	|	РегистрСведений.ТабельРаботыКассиров КАК ТабельРаботыКассиров
	|ГДЕ
	|	ТабельРаботыКассиров.ТорговаяТочка = &ТорговаяТочка
	|	И ТабельРаботыКассиров.Период = &Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабельРаботыГрузчиков.Сотрудник.Код,
	|	""Грузчик"",
	|	ТабельРаботыГрузчиков.Сотрудник.Наименование
	|ИЗ
	|	РегистрСведений.ТабельРаботыГрузчиков КАК ТабельРаботыГрузчиков
	|ГДЕ
	|	ТабельРаботыГрузчиков.ТорговаяТочка = &ТорговаяТочка
	|	И ТабельРаботыГрузчиков.Период = &Период
	//+++АК mika 2018.11.14 ИП-00020434
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабельРаботыПекарей.Сотрудник.Код,
	|	""Пекарь"",
	|	ТабельРаботыПекарей.Сотрудник.Наименование
	|ИЗ
	|	РегистрСведений.ТабельРаботыПекарей КАК ТабельРаботыПекарей
	|ГДЕ
	|	ТабельРаботыПекарей.ТорговаяТочка = &ТорговаяТочка
	|	И ТабельРаботыПекарей.Период = &Период
	//---АК mika 
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабельРаботыПромоутеров.Сотрудник.Код,
	|	""Промоутер"",
	|	ТабельРаботыПромоутеров.Сотрудник.Наименование
	|ИЗ
	|	РегистрСведений.ТабельРаботыПромоутеров КАК ТабельРаботыПромоутеров
	|ГДЕ
	|	ТабельРаботыПромоутеров.ТорговаяТочка = &ТорговаяТочка
	|	И ТабельРаботыПромоутеров.Период = &Период
	|
	//+++АК mika 2018.01.18 Добавление возможности печати внештатных сотрудников 
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТабельРаботыСотрудниковАутсорсинг.Сотрудник.ИД,
	|	ТабельРаботыСотрудниковАутсорсинг.Должность,
	|	ТабельРаботыСотрудниковАутсорсинг.Сотрудник.Наименование
	|ИЗ
	|	РегистрСведений.ТабельРаботыСотрудниковАутсорсинг КАК ТабельРаботыСотрудниковАутсорсинг
	|ГДЕ
	|	ТабельРаботыСотрудниковАутсорсинг.Период = &Период
	|	И (ТабельРаботыСотрудниковАутсорсинг.ТорговаяТочка = &ТорговаяТочка ИЛИ &ТорговаяТочка = Значение(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
	|   И ТабельРаботыСотрудниковАутсорсинг.Сотрудник.ГруппаСотрудников <> ЗНАЧЕНИЕ(Справочник.ГруппыСотрудниковАутсорсинг.ПустаяСсылка)
	|   И (&ГруппаСотрудников = ЗНАЧЕНИЕ(Справочник.ГруппыСотрудниковАутсорсинг.ПустаяСсылка) ИЛИ ТабельРаботыСотрудниковАутсорсинг.Сотрудник.ГруппаСотрудников = &ГруппаСотрудников)";
	
	Элементы.ГруппаВнештатныхСотрудников.Видимость = ЗначениеЗаполнено(ГруппаСотрудников);
	
	Запрос.УстановитьПараметр("ГруппаСотрудников", ГруппаСотрудников);

	//---АК mika
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		//СтрокаТаб = Объект.Продавцы.Добавить(); //+++АК mika 2018.02.20 Без задачи. Убрать пустые строки
		//+++АК mika 2018.01.18 Добавление возможности печати внештатных сотрудников 
		//СтрокаТаб.Сотрудник = Справочники.ПерсоналККМ.НайтиПоКоду(Выборка.Код); 
		Если ТипЗнч(Выборка.Код) = Тип("Число") Тогда
			//Преобразование типа числа в строку
			ТекущийИД = Формат(Выборка.Код, "ЧГ="); Для н = 1 по 10 - СтрДлина(ТекущийИД) Цикл	ТекущийИД = "0" + ТекущийИД; КонецЦикла;
			
			//+++АК mika 2018.02.20 Без задачи. Убрать пустые строки 
			//СтрокаТаб.Сотрудник = Справочники.ПерсоналККМ.НайтиПоКоду(ТекущийИД);
			НайденныйСотрудник = Справочники.ПерсоналККМ.НайтиПоКоду(ТекущийИД);
			Если ЗначениеЗаполнено(НайденныйСотрудник) Тогда
				СтрокаТаб = Объект.Продавцы.Добавить();
				СтрокаТаб.Сотрудник = НайденныйСотрудник;
			КонецЕсли;
			//---АК mika
			
		Иначе
			//+++АК mika 2018.02.20 Без задачи. Убрать пустые строки
			Если ЗначениеЗаполнено(ГруппаСотрудников) Тогда 
				Продолжить;
			КонецЕсли;
			//---АК mika
			СтрокаТаб = Объект.Продавцы.Добавить();
			СтрокаТаб.Сотрудник = Справочники.ПерсоналККМ.НайтиПоКоду(Выборка.Код);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТаб.Сотрудник) Тогда
			СтрокаТаб.Печатать = Истина;
		КонецЕсли;
		
		СтрокаТаб = ТабОбычные.Добавить();
		СтрокаТаб.Печатать = Истина;
		СтрокаТаб.Должность = Выборка.Должность;
		Наименование = Выборка.Наименование;
		Наименование = СтрЗаменить(Наименование, " ", Символы.ПС);
		Если СтрЧислоСтрок(Наименование) > 1 Тогда
			СтрокаТаб.Фамилия = СтрПолучитьСтроку(Наименование, 1);
			СтрокаТаб.Имя = СтрПолучитьСтроку(Наименование, 2);
		Иначе	
			СтрокаТаб.Фамилия = Наименование;
		КонецЕсли;	
	КонецЦикла;	
	
	//+++АК mika 2018.02.20 Без задачи. Добавить сортировку по наименованию 
	Если ЗначениеЗаполнено(ГруппаСотрудников) Тогда
		Объект.Продавцы.Сортировать("Сотрудник");
		ТабОбычные.Сортировать("Фамилия, Имя");
	КонецЕсли;
	//---АК mika

КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого СтрокаТаб Из Объект.Продавцы Цикл
		СтрокаТаб.Печатать = Истина;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для Каждого СтрокаТаб Из Объект.Продавцы Цикл
		СтрокаТаб.Печатать = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиОбычные(Команда)
	
	Для Каждого СтрокаТаб Из ТабОбычные Цикл
		СтрокаТаб.Печатать = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиОбычные(Команда)
	
	Для Каждого СтрокаТаб Из ТабОбычные Цикл
		СтрокаТаб.Печатать = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПечатьНаСервереОбычный()
	
	МассивПродавцы = Новый Массив();
	Для Каждого СтрокаТаб Из Объект.Продавцы Цикл
		Если СтрокаТаб.Печатать Тогда
			МассивПродавцы.Добавить(СтрокаТаб.Сотрудник);
		КонецЕсли;	
	КонецЦикла;
	ТабКПечати = ТабОбычные.Выгрузить();
	КолвоСтрок = ТабКПечати.Количество();
	Для н = 1 По КолвоСтрок Цикл
		Если НЕ ТабКПечати[КолвоСтрок - н].Печатать Тогда
			ТабКПечати.Удалить(КолвоСтрок - н);
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат Обработки.ПечатьБейджейПродавцов.ПолучитьТабДокОбычные(ТабКПечати);
	
КонецФункции

&НаКлиенте
Процедура ПечатьОбычный(Команда)
	
	ТабДок = ПечатьНаСервереОбычный();
	
	ОткрытьФорму("ОбщаяФорма.ФормаОтображенияТабДокумента", Новый Структура("ТабДок, УстановитьЗаголовок", ТабДок, "Бэйджи"));
	
КонецПроцедуры
