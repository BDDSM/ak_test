
Функция ВыполнитьДействие(СтруктураПараметры, Отладка = Истина) Экспорт 
	Действие = СтруктураПараметры.Действие;
		
	Если Отладка Тогда		
		обк =  ПолучитьТестОбработку("АК_ПрофильГрузчика");
		
		Если обк <> Неопределено Тогда
			Возврат	обк.ВыполнитьДействие(СтруктураПараметры, Ложь);
		КонецЕсли;			
	КонецЕсли;

	
	Если Действие = "Маршруты" Тогда		
		Возврат ПолучитьВозможныеМаршруты(СтруктураПараметры);			
	ИначеЕсли Действие = "Магазины" Тогда 
		Возврат ПолучитьДанныеМагазиныВоротаПаллеты(СтруктураПараметры);
	ИначеЕсли Действие = "Паллета" Тогда 
		Возврат ПолучитьДанныеПаллетыПоШтрихкоду(СтруктураПараметры);		
	ИначеЕсли Действие = "ПлюсПаллета" Тогда
		Возврат ПлюсПаллета(СтруктураПараметры);
	Иначе 
		ВызватьИсключение "Не установлено действие для выполнения!";
	КонецЕсли;	
КонецФункции

Функция ПолучитьТестОбработку(Имя)
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВнешниеОбработки.ХранилищеВнешнейОбработки
		|ИЗ
		|	Справочник.ВнешниеОбработки КАК ВнешниеОбработки
		|ГДЕ
		|	ВнешниеОбработки.Наименование = &Наименование
		|	И НЕ ВнешниеОбработки.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Наименование", Имя);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;	
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Хранилище = Выборка.ХранилищеВнешнейОбработки;
	КонецЦикла;

	ДвоичныеДанные = Хранилище.Получить();
	
	Если ДвоичныеДанные = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;

	ИмяФайла = ПолучитьИмяВременногоФайла(".epf");
	
	ДвоичныеДанные.Записать(ИмяФайла);
	
	обк = ВнешниеОбработки.Создать(ИмяФайла, Ложь);
	
	Возврат обк;
КонецФункции 

#Область Прочее

Функция ПолучитьСсылкуОтладка(СсылкаСтрока, Менеджер)
	Если ТипЗнч(СсылкаСтрока) = Тип("Строка") Тогда
		Результат = ПолучитьСсылкуПоГУИД(СсылкаСтрока, Менеджер);
	ИначеЕсли ТипЗнч(СсылкаСтрока) = Тип("УникальныйИдентификатор") Тогда		
		Результат = ПолучитьСсылкуПоГУИД(СсылкаСтрока, Менеджер);		
	Иначе
		Результат = СсылкаСтрока;	
	КонецЕсли;	

	Возврат Результат;
КонецФункции 

Функция ЗаполнитьПараметрыДанных(ВходящиеДанные)
	Данные = Новый Структура;
	
	Если ВходящиеДанные.Свойство("Склад") Тогда
		Данные.Вставить("Склад", ПолучитьСсылкуОтладка(ВходящиеДанные.Склад, Справочники.Склады));
	КонецЕсли;
	
	Если ВходящиеДанные.Свойство("Грузчик") Тогда
	    Данные.Вставить("Грузчик", ПолучитьСсылкуОтладка(ВходящиеДанные.Грузчик, Справочники.ФизическиеЛица));
	КонецЕсли;
	
	Если ВходящиеДанные.Свойство("Маршрут") Тогда				
	    Данные.Вставить("Маршрут", ПолучитьСсылкуОтладка(ВходящиеДанные.Маршрут, Справочники.Маршруты));
	КонецЕсли;	
	
	ДатаНачРОС = ДобавитьДень(ВходящиеДанные.ДатаНачала, -10);//Ограничим поиск по периоду  
	ДатаКонРОС = ДобавитьДень(ВходящиеДанные.ДатаКонца, 10); 
	
	ДатаНачРейс = НачалоДня(ДобавитьДень(ВходящиеДанные.ДатаНачала, -10));
	ДатаКонРейс = КонецДня(ДобавитьДень(ВходящиеДанные.ДатаКонца, 10));
	
	ПериодСканПал = КонецДня(ВходящиеДанные.ДатаКонца);
	
	Данные.Вставить("ДатаНачРОС", ДатаНачРОС);
	Данные.Вставить("ДатаКонРОС", ДатаКонРОС);
		
	Данные.Вставить("ПериодСканПал", ПериодСканПал);
	
	Данные.Вставить("ДатаНачРейс", ДатаНачРейс);
	Данные.Вставить("ДатаКонРейс", ДатаКонРейс);
	
	Данные.Вставить("ПериодСоответствие", КонецДня(ВходящиеДанные.ДатаКонца));
		
	МассивСтатус = Новый Массив;
	МассивСтатус.Добавить(Перечисления.СтатусПаллета.ВодительПринял);
	МассивСтатус.Добавить(Перечисления.СтатусПаллета.НаДебаркадере);
	МассивСтатус.Добавить(Перечисления.СтатусПаллета.ВСборке);
	
	Данные.Вставить("СтатусСканПал", МассивСтатус);	

	Данные.Вставить("СтатусСобран", Перечисления.СтатусПаллета.Собран);
	Данные.Вставить("ПустаяПаллета", Справочники.СоставПаллеты.ПустаяСсылка());
	
	Возврат Данные;
КонецФункции

Функция ПоместитьДанныеВХранилище(Данные)
	Возврат Новый ХранилищеЗначения(Данные, Новый СжатиеДанных(9));	
КонецФункции

Функция ДобавитьДень(Знач Дата, КоличествоДней)	
	Если КоличествоДней > 0 Тогда		
		Дата = КонецДня(Дата);			
	Иначе		
		Дата = НачалоДня(Дата);			
	КонецЕсли;
	
	Возврат Дата + КоличествоДней * 3600*24;  
КонецФункции 

Функция ПолучитьСсылкуПоГУИД(Знач ГУИД, Менеджер)
	Если ТипЗнч(ГУИД) = Тип("Строка") Тогда
		ГУИД = Новый УникальныйИдентификатор(ГУИД);	
	КонецЕсли;
	
	Ссылка = Менеджер.ПолучитьСсылку(ГУИД);	
		
	Возврат Ссылка;
КонецФункции

Функция ПолучитьСтрокуГУИД(Ссылка)	
	Возврат "" + Ссылка.УникальныйИдентификатор();	
КонецФункции 

Процедура ЗаполнитьПараметрыЗапроса(Запрос, Данные)
	Для каждого Параметр Из Данные Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);	
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область МагазиныВоротаПаллеты 
//СТАРТ
Функция ПолучитьДанныеМагазиныВоротаПаллеты(ВходящиеДанные) Экспорт 
	Данные = ЗаполнитьПараметрыДанных(ВходящиеДанные);
	
	Выборка = ПолучитьМаршрутыВоротаПаллеты(Данные);
	
	РезультатТаблицы = СформироватьТаблицуДляОтправки(Выборка);
	
	Результат = Новый Структура;
	Результат.Вставить("ТаблицаМагазины", РезультатТаблицы.ТаблицаМагазины);
	
	Возврат ПоместитьДанныеВХранилище(Результат);
КонецФункции

Функция ПолучитьМаршрутыВоротаПаллеты(Данные) Экспорт 	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МаршрутныйЛист.Ссылка,
		|	МаршрутныйЛист.Маршрут
		|ПОМЕСТИТЬ тВсеМаршруты
		|ИЗ
		|	Документ.МаршрутныйЛист КАК МаршрутныйЛист
		|ГДЕ
		|	МаршрутныйЛист.Дата МЕЖДУ &ДатаНачРейс И &ДатаКонРейс
		|	И МаршрутныйЛист.Проведен
		|	И МаршрутныйЛист.Маршрут = &Маршрут
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаршрутныйЛистРасходныеОрдера.Документ КАК РасходныйОрдер,
		|	РасходныйОрдерСклад.Получатель,
		|	тВсеМаршруты.Маршрут
		|ПОМЕСТИТЬ тРасходныеОрдераПоСкладу
		|ИЗ
		|	тВсеМаршруты КАК тВсеМаршруты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛист.РасходныеОрдера КАК МаршрутныйЛистРасходныеОрдера
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
		|			ПО МаршрутныйЛистРасходныеОрдера.Документ = РасходныйОрдерСклад.Ссылка
		|				И (РасходныйОрдерСклад.Проведен)
		|				И (РасходныйОрдерСклад.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отменен))
		|				И (РасходныйОрдерСклад.Склад = &Склад)
		|				И (РасходныйОрдерСклад.Дата МЕЖДУ &ДатаНачРОС И &ДатаКонРОС)
		|		ПО тВсеМаршруты.Ссылка = МаршрутныйЛистРасходныеОрдера.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	тРасходныеОрдераПоСкладу.РасходныйОрдер,
		|	СоставПаллеты.Ссылка КАК Паллет,
		|	тРасходныеОрдераПоСкладу.Маршрут,
		|	тРасходныеОрдераПоСкладу.Получатель
		|ПОМЕСТИТЬ тВсеПаллетыРасходногоОрдера
		|ИЗ
		|	тРасходныеОрдераПоСкладу КАК тРасходныеОрдераПоСкладу
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СоставПаллеты КАК СоставПаллеты
		|		ПО тРасходныеОрдераПоСкладу.РасходныйОрдер = СоставПаллеты.РасходныйОрдер
		|			И (НЕ СоставПаллеты.ПометкаУдаления)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	тВсеПаллетыРасходногоОрдера.РасходныйОрдер,
		|	тВсеПаллетыРасходногоОрдера.Паллет,
		|	тВсеПаллетыРасходногоОрдера.Маршрут,
		|	тВсеПаллетыРасходногоОрдера.Получатель
		|ПОМЕСТИТЬ тСобранныеПаллетыРасходногоОрдера
		|ИЗ
		|	тВсеПаллетыРасходногоОрдера КАК тВсеПаллетыРасходногоОрдера
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СканированныеПаллеты.СрезПоследних(
		|				&ПериодСканПал,
		|				Ордер В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						тРасходныеОрдераПоСкладу.РасходныйОрдер
		|					ИЗ
		|						тРасходныеОрдераПоСкладу КАК тРасходныеОрдераПоСкладу)) КАК СканированныеПаллетыСрезПоследних
		|		ПО тВсеПаллетыРасходногоОрдера.РасходныйОрдер = СканированныеПаллетыСрезПоследних.Ордер
		|			И тВсеПаллетыРасходногоОрдера.Паллет = СканированныеПаллетыСрезПоследних.Паллет
		|ГДЕ
		|	ВЫБОР
		|			КОГДА СканированныеПаллетыСрезПоследних.Паллет ЕСТЬ NULL
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 250
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ тСобранныеПаллетыРасходногоОрдера.Паллет) КАК КоличествоПаллет,
		|	АК_СоответствиеВоротМаршрутамСрезПоследних.Ворота.Наименование,
		|	ВЫРАЗИТЬ(тСобранныеПаллетыРасходногоОрдера.Получатель КАК Справочник.СтруктурныеЕдиницы).Наименование КАК МагазинНаименование
		|ИЗ
		|	тСобранныеПаллетыРасходногоОрдера КАК тСобранныеПаллетыРасходногоОрдера
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НомераМаршрутов.СрезПоследних(
		|				&ПериодСоответствие,
		|				Маршрут В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						тСобранныеПаллетыРасходногоОрдера.Маршрут
		|					ИЗ
		|						тСобранныеПаллетыРасходногоОрдера КАК тСобранныеПаллетыРасходногоОрдера)) КАК НомераМаршрутовСрезПоследних
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АК_СоответствиеВоротМаршрутам.СрезПоследних(
		|					&ПериодСоответствие,
		|					СтруктурноеПодразделение В
		|						(ВЫБРАТЬ
		|							Склады.Владелец
		|						ИЗ
		|							Справочник.Склады КАК Склады
		|						ГДЕ
		|							Склады.Ссылка = &Склад)) КАК АК_СоответствиеВоротМаршрутамСрезПоследних
		|			ПО НомераМаршрутовСрезПоследних.Номер = АК_СоответствиеВоротМаршрутамСрезПоследних.НомерМаршрута
		|		ПО тСобранныеПаллетыРасходногоОрдера.Маршрут = НомераМаршрутовСрезПоследних.Маршрут
		|
		|СГРУППИРОВАТЬ ПО
		|	АК_СоответствиеВоротМаршрутамСрезПоследних.Ворота.Наименование,
		|	ВЫРАЗИТЬ(тСобранныеПаллетыРасходногоОрдера.Получатель КАК Справочник.СтруктурныеЕдиницы).Наименование";
	
	ЗаполнитьПараметрыЗапроса(Запрос, Данные);
	
	Возврат Запрос.Выполнить().Выбрать();
КонецФункции

Функция СформироватьТаблицуДляОтправки(Выборка)
	ТаблицаМагазины = Новый ТаблицаЗначений;
	
	ОписаниеСтрока36 = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(36, ДопустимаяДлина.Переменная));
	ОписаниеСтрока = Новый ОписаниеТипов("Строка");
	ОписаниеЧисло = Новый ОписаниеТипов("Число");
	
	ТаблицаМагазины.Колонки.Добавить("МагазинНаименование", ОписаниеСтрока);
	ТаблицаМагазины.Колонки.Добавить("ВоротаНаименование", ОписаниеСтрока);
	ТаблицаМагазины.Колонки.Добавить("КоличествоПаллет", ОписаниеЧисло);
	
	Пока Выборка.Следующий() Цикл
		СтрокаМагазин = ТаблицаМагазины.Добавить();
			
		ЗаполнитьЗначенияСвойств(СтрокаМагазин, Выборка);		
	КонецЦикла;
	
	Возврат Новый Структура("ТаблицаМагазины", ТаблицаМагазины);
КонецФункции

#КонецОбласти

#Область Маршрут
//СТАРТ
Функция ПолучитьВозможныеМаршруты(ВходящиеДанные) Экспорт 
	Данные = ЗаполнитьПараметрыДанных(ВходящиеДанные);
	
	ТаблицаМаршруты = ПолучитьТаблицуМаршрутыДляОтправкиМП(Данные);
	
	Результат = Новый Структура;
	Результат.Вставить("ТаблицаМаршруты", ТаблицаМаршруты);
	
	Возврат ПоместитьДанныеВХранилище(Результат);
КонецФункции 

Функция ПолучитьТаблицуМаршруты(Данные) Экспорт 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МаршрутныйЛист.Ссылка,
		|	МаршрутныйЛист.Маршрут
		|ПОМЕСТИТЬ тВсеМаршруты
		|ИЗ
		|	Документ.МаршрутныйЛист КАК МаршрутныйЛист
		|ГДЕ
		|	МаршрутныйЛист.Дата МЕЖДУ &ДатаНачРейс И &ДатаКонРейс
		|	И МаршрутныйЛист.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаршрутныйЛистРасходныеОрдера.Документ КАК РасходныйОрдер,
		|	РасходныйОрдерСклад.Получатель,
		|	тВсеМаршруты.Маршрут
		|ПОМЕСТИТЬ тРасходныеОрдераПоСкладу
		|ИЗ
		|	тВсеМаршруты КАК тВсеМаршруты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛист.РасходныеОрдера КАК МаршрутныйЛистРасходныеОрдера
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
		|			ПО МаршрутныйЛистРасходныеОрдера.Документ = РасходныйОрдерСклад.Ссылка
		|				И (РасходныйОрдерСклад.Проведен)
		|				И (РасходныйОрдерСклад.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отменен))
		|				И (РасходныйОрдерСклад.Склад = &Склад)
		|				И (РасходныйОрдерСклад.Дата МЕЖДУ &ДатаНачРОС И &ДатаКонРОС)
		|		ПО тВсеМаршруты.Ссылка = МаршрутныйЛистРасходныеОрдера.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	тРасходныеОрдераПоСкладу.РасходныйОрдер,
		|	СоставПаллеты.Ссылка КАК Паллет
		|ПОМЕСТИТЬ тВсеПаллетыРасходногоОрдера
		|ИЗ
		|	тРасходныеОрдераПоСкладу КАК тРасходныеОрдераПоСкладу
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СоставПаллеты КАК СоставПаллеты
		|		ПО тРасходныеОрдераПоСкладу.РасходныйОрдер = СоставПаллеты.РасходныйОрдер
		|			И (НЕ СоставПаллеты.ПометкаУдаления)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	тВсеПаллетыРасходногоОрдера.РасходныйОрдер,
		|	тВсеПаллетыРасходногоОрдера.Паллет,
		|	тРасходныеОрдераПоСкладу.Получатель,
		|	тРасходныеОрдераПоСкладу.Маршрут
		|ПОМЕСТИТЬ тСобранныеПаллетыРасходногоОрдера
		|ИЗ
		|	тВсеПаллетыРасходногоОрдера КАК тВсеПаллетыРасходногоОрдера
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СканированныеПаллеты.СрезПоследних(
		|				&ПериодСканПал,
		|				Ордер В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						тРасходныеОрдераПоСкладу.РасходныйОрдер
		|					ИЗ
		|						тРасходныеОрдераПоСкладу КАК тРасходныеОрдераПоСкладу)) КАК СканированныеПаллетыСрезПоследних
		|		ПО тВсеПаллетыРасходногоОрдера.РасходныйОрдер = СканированныеПаллетыСрезПоследних.Ордер
		|			И тВсеПаллетыРасходногоОрдера.Паллет = СканированныеПаллетыСрезПоследних.Паллет
		|		ЛЕВОЕ СОЕДИНЕНИЕ тРасходныеОрдераПоСкладу КАК тРасходныеОрдераПоСкладу
		|		ПО тВсеПаллетыРасходногоОрдера.РасходныйОрдер = тРасходныеОрдераПоСкладу.РасходныйОрдер
		|ГДЕ
		|	ВЫБОР
		|			КОГДА СканированныеПаллетыСрезПоследних.Паллет ЕСТЬ NULL
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ тСобранныеПаллетыРасходногоОрдера.Паллет) КАК КоличествоПаллет,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ тСобранныеПаллетыРасходногоОрдера.Получатель) КАК КоличествоМагазинов,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ АК_СоответствиеВоротМаршрутамСрезПоследних.Ворота) КАК КоличествоВорот,
		|	тСобранныеПаллетыРасходногоОрдера.Маршрут,
		|	тСобранныеПаллетыРасходногоОрдера.Маршрут.Наименование КАК Наименование,
		|	тСобранныеПаллетыРасходногоОрдера.Маршрут.ПолноеНаименование КАК ПолноеНаименование,
		|	НомераМаршрутовСрезПоследних.Номер КАК НомерМаршрута
		|ИЗ
		|	тСобранныеПаллетыРасходногоОрдера КАК тСобранныеПаллетыРасходногоОрдера
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НомераМаршрутов.СрезПоследних(
		|				&ПериодСоответствие,
		|				Маршрут В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						тСобранныеПаллетыРасходногоОрдера.Маршрут
		|					ИЗ
		|						тСобранныеПаллетыРасходногоОрдера КАК тСобранныеПаллетыРасходногоОрдера)) КАК НомераМаршрутовСрезПоследних
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АК_СоответствиеВоротМаршрутам.СрезПоследних(
		|					&ПериодСоответствие,
		|					СтруктурноеПодразделение В
		|						(ВЫБРАТЬ
		|							Склады.Владелец
		|						ИЗ
		|							Справочник.Склады КАК Склады
		|						ГДЕ
		|							Склады.Ссылка = &Склад)) КАК АК_СоответствиеВоротМаршрутамСрезПоследних
		|			ПО (АК_СоответствиеВоротМаршрутамСрезПоследних.НомерМаршрута = НомераМаршрутовСрезПоследних.Номер)
		|		ПО тСобранныеПаллетыРасходногоОрдера.Маршрут = НомераМаршрутовСрезПоследних.Маршрут
		|
		|СГРУППИРОВАТЬ ПО
		|	тСобранныеПаллетыРасходногоОрдера.Маршрут,
		|	тСобранныеПаллетыРасходногоОрдера.Маршрут.Наименование,
		|	тСобранныеПаллетыРасходногоОрдера.Маршрут.ПолноеНаименование,
		|	НомераМаршрутовСрезПоследних.Номер";	
	
	ЗаполнитьПараметрыЗапроса(Запрос, Данные);
	
	Возврат Запрос.Выполнить().Выбрать();	
КонецФункции

Функция ПолучитьТаблицуМаршрутыДляОтправкиМП(Данные) Экспорт 	
	Таблица = Новый ТаблицаЗначений;
	
	ОписаниеСтрока36 = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(36, ДопустимаяДлина.Переменная));
	ОписаниеСтрока = Новый ОписаниеТипов("Строка");
	ОписаниеЧисло = Новый ОписаниеТипов("Число");
	
	Таблица.Колонки.Добавить("Маршрут", ОписаниеСтрока36);
	
	Таблица.Колонки.Добавить("Наименование", ОписаниеСтрока);
	Таблица.Колонки.Добавить("ПолноеНаименование", ОписаниеСтрока);
		
	Таблица.Колонки.Добавить("КоличествоПаллет", ОписаниеЧисло);
	Таблица.Колонки.Добавить("КоличествоВорот", ОписаниеЧисло);
	Таблица.Колонки.Добавить("КоличествоМагазинов", ОписаниеЧисло);
		
	Колонки = "КоличествоПаллет,КоличествоВорот,КоличествоМагазинов,Наименование,ПолноеНаименование";
	
	е = 0;
	
	Выборка = ПолучитьТаблицуМаршруты(Данные);
	
	Пока Выборка.Следующий() Цикл
		Строка = Таблица.Добавить();
		
		ЗаполнитьЗначенияСвойств(Строка, Выборка, Колонки);
		Строка.Наименование = Выборка.НомерМаршрута;
		Строка.Маршрут = ПолучитьСтрокуГУИД(Выборка.Маршрут);
	КонецЦикла;
	
	Возврат Таблица;
КонецФункции

#КонецОбласти

#Область ТолькоПаллета
//СТАРТ
Функция ПолучитьДанныеПаллетыПоШтрихкоду(ВходящиеДанные) Экспорт 
	Данные = ЗаполнитьПараметрыДанных(ВходящиеДанные);
	
	Структура = ВнешниеДанные.СчитатьДанныеПоШтрихКоду(ВходящиеДанные.Штрихкод);
	
	Результат = Новый Структура;
	
	Если Не ЗначениеЗаполнено(Структура.Объект) Тогда	
		Результат.Вставить("Ошибка", "Паллета не найдена");
		
		Возврат ПоместитьДанныеВХранилище(Результат);		
	КонецЕсли;

	Данные.Вставить("Паллета", Структура.Объект);
	
	Выборка = ПолучитьВыборкуПаллета(Данные);
	
	СкладГрузчика = ПолучитьСсылкуОтладка(ВходящиеДанные.Склад, Справочники.Склады);
	Грузчик = Неопределено;
	
	Результат = СформироватьОтветПоПаллете(Выборка, СкладГрузчика, Грузчик);	
	
	Возврат ПоместитьДанныеВХранилище(Результат);
КонецФункции

Функция ПолучитьВыборкуПаллета(Данные) Экспорт 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоставПаллеты.Ссылка КАК Паллета,
		|	СоставПаллеты.РасходныйОрдер
		|ПОМЕСТИТЬ тПаллета
		|ИЗ
		|	Справочник.СоставПаллеты КАК СоставПаллеты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
		|		ПО СоставПаллеты.РасходныйОрдер = РасходныйОрдерСклад.Ссылка
		|			И (РасходныйОрдерСклад.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отменен))
		|			И (РасходныйОрдерСклад.Проведен)
		|			И (СоставПаллеты.Ссылка = &Паллета)
		|			И (РасходныйОрдерСклад.Дата МЕЖДУ &ДатаНачРОС И &ДатаКонРОС)
		|ГДЕ
		|	СоставПаллеты.Ссылка = &Паллета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	тПаллета.Паллета,
		|	тПаллета.РасходныйОрдер,
		|	ВЫБОР
		|		КОГДА СканированныеПаллетыСрезПоследних.Статус ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК РасходныйОрдерСобран
		|ПОМЕСТИТЬ тПаллетаСобран
		|ИЗ
		|	тПаллета КАК тПаллета
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СканированныеПаллеты.СрезПоследних(
		|				&ПериодСканПал,
		|				Ордер В
		|					(ВЫБРАТЬ
		|						тПаллета.РасходныйОрдер
		|					ИЗ
		|						тПаллета КАК тПаллета)) КАК СканированныеПаллетыСрезПоследних
		|		ПО тПаллета.РасходныйОрдер = СканированныеПаллетыСрезПоследних.Ордер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	тПаллета.Паллета,
		|	тПаллета.РасходныйОрдер,
		|	СканированныеПаллетыСрезПоследних.Статус,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка КАК МаршрутныйЛист,
		|	ВЫБОР
		|		КОГДА СканированныеПаллетыСрезПоследних.Статус ЕСТЬ NULL
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПаллетаСобрана,
		|	тПаллетаСобран.РасходныйОрдерСобран
		|ПОМЕСТИТЬ тПаллетаМаршрутныйЛист
		|ИЗ
		|	тПаллета КАК тПаллета
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СканированныеПаллеты.СрезПоследних(
		|				&ПериодСканПал,
		|				Ордер В
		|					(ВЫБРАТЬ
		|						тПаллетаСобран.РасходныйОрдер
		|					ИЗ
		|						тПаллетаСобран КАК тПаллетаСобран
		|					ГДЕ
		|						тПаллетаСобран.РасходныйОрдерСобран)) КАК СканированныеПаллетыСрезПоследних
		|		ПО тПаллета.РасходныйОрдер = СканированныеПаллетыСрезПоследних.Ордер
		|			И тПаллета.Паллета = СканированныеПаллетыСрезПоследних.Паллет
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛист.РасходныеОрдера КАК МаршрутныйЛистРасходныеОрдера
		|		ПО тПаллета.РасходныйОрдер = МаршрутныйЛистРасходныеОрдера.Документ,
		|	тПаллетаСобран КАК тПаллетаСобран
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	тПаллетаМаршрутныйЛист.МаршрутныйЛист.Маршрут КАК Маршрут,
		|	тПаллетаМаршрутныйЛист.Статус,
		|	тПаллетаМаршрутныйЛист.Паллета,
		|	ВЫРАЗИТЬ(тПаллетаМаршрутныйЛист.РасходныйОрдер КАК Документ.РасходныйОрдерСклад).Получатель КАК Магазин,
		|	АК_СоответствиеВоротМаршрутамСрезПоследних.Ворота,
		|	тПаллетаМаршрутныйЛист.ПаллетаСобрана,
		|	тПаллетаМаршрутныйЛист.РасходныйОрдерСобран,
		|	ВЫРАЗИТЬ(тПаллетаМаршрутныйЛист.РасходныйОрдер КАК Документ.РасходныйОрдерСклад).Склад КАК Склад,
		|	тПаллетаМаршрутныйЛист.РасходныйОрдер,
		|	НомераМаршрутовСрезПоследних.Номер КАК НомерМаршрута,
		|	тПаллетаМаршрутныйЛист.МаршрутныйЛист
		|ПОМЕСТИТЬ тИтог
		|ИЗ
		|	тПаллетаМаршрутныйЛист КАК тПаллетаМаршрутныйЛист
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НомераМаршрутов.СрезПоследних(
		|				&ПериодСоответствие,
		|				Маршрут В
		|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|						тПаллетаМаршрутныйЛист.МаршрутныйЛист.Маршрут
		|					ИЗ
		|						тПаллетаМаршрутныйЛист КАК тПаллетаМаршрутныйЛист)) КАК НомераМаршрутовСрезПоследних
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АК_СоответствиеВоротМаршрутам.СрезПоследних(
		|					&ПериодСоответствие,
		|					СтруктурноеПодразделение В
		|						(ВЫБРАТЬ
		|							Склады.Владелец
		|						ИЗ
		|							Справочник.Склады КАК Склады
		|						ГДЕ
		|							Склады.Ссылка = &Склад)) КАК АК_СоответствиеВоротМаршрутамСрезПоследних
		|			ПО НомераМаршрутовСрезПоследних.Номер = АК_СоответствиеВоротМаршрутамСрезПоследних.НомерМаршрута
		|		ПО тПаллетаМаршрутныйЛист.МаршрутныйЛист.Маршрут = НомераМаршрутовСрезПоследних.Маршрут
		|ГДЕ
		|	тПаллетаМаршрутныйЛист.МаршрутныйЛист.Дата МЕЖДУ &ДатаНачРейс И &ДатаКонРейс
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	тИтог.Маршрут,
		|	тИтог.Статус,
		|	тИтог.Магазин,
		|	тИтог.Ворота,
		|	тИтог.ПаллетаСобрана,
		|	тИтог.РасходныйОрдерСобран,
		|	тИтог.Магазин.Наименование,
		|	тИтог.Ворота.Наименование,
		|	тИтог.Маршрут.Наименование,
		|	тИтог.Маршрут.ПолноеНаименование,
		|	тИтог.Склад.Наименование,
		|	тИтог.РасходныйОрдер,
		|	тИтог.Склад,
		|	тИтог.Ворота.ИД,
		|	тИтог.НомерМаршрута
		|ИЗ
		|	тИтог КАК тИтог";
	
	ЗаполнитьПараметрыЗапроса(Запрос, Данные);
	
	Возврат Запрос.Выполнить().Выбрать();	
КонецФункции

Функция СформироватьОтветПоПаллете(Выборка, СкладГрузчика, Грузчик)
	Результат = Новый Структура;
	
	Если Выборка.Следующий() Тогда
		
		Если Не Выборка.РасходныйОрдерСобран Тогда		
			Результат.Вставить("Ошибка", "Паллета находиться в ордере который еще не собран");
		Иначе 
			Если Не Выборка.ПаллетаСобрана Тогда		
				Результат.Вставить("Ошибка", "Паллета уже отгружена");
			КонецЕсли;			
		КонецЕсли;	
		
		Если Не Выборка.Склад = СкладГрузчика Тогда		
			Результат.Вставить("Ошибка", "Паллета пренадлежит другому складу");
		КонецЕсли;
		
		Если Не Выборка.Склад = СкладГрузчика Тогда		
			Результат.Вставить("Ошибка", "Паллета пренадлежит другому складу");
		КонецЕсли;		
		
		Результат.Вставить("МагазинНаименование", Выборка.МагазинНаименование);
		Результат.Вставить("МаршрутНаименование", Выборка.МаршрутНаименование);
		Результат.Вставить("СкладНаименование", Выборка.СкладНаименование);
		Результат.Вставить("ВоротаНаименование", Выборка.ВоротаНаименование);
		Результат.Вставить("ВоротаИД", Формат(Выборка.ВоротаИД, "ЧГ="));
	Иначе 	
		Результат.Вставить("Ошибка", "Данные о паллете не найдены");
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

#КонецОбласти

Функция ПлюсПаллета(СтруктураПараметры) Экспорт 
	УстановитьПривилегированныйРежим(Истина);
	
	ШтрихКодПаллеты = СтруктураПараметры.ШтрихКод;
	СтрДанные = ВнешниеДанные.СчитатьДанныеПоШтрихКоду(ШтрихКодПаллеты);
	
	Док = СтрДанные.Объект.РасходныйОрдер;
	ДокОбъект = Док.ПолучитьОбъект();
	ДокОбъект.КоличествоПаллет = ДокОбъект.КоличествоПаллет + 1;
	ДокОбъект.Записать(РежимЗаписиДокумента.Запись);	
	
	Возврат Истина;
КонецФункции



