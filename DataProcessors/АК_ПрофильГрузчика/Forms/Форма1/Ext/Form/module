
Процедура НадписьВоротаНажатие(Элемент)
	ОткрытьФорму("Справочник.AK_Ворота.ФормаСписка");
КонецПроцедуры

Процедура НадписьМаршрутыНажатие(Элемент)
	ОткрытьФорму("Справочник.Маршруты.ФормаСписка");
КонецПроцедуры

Процедура НадписьСканированныеПаллетыНажатие(Элемент)
	ОткрытьФорму("РегистрСведений.СканированныеПаллеты.ФормаСписка");
КонецПроцедуры

Процедура НадписьСоставПаллетыНажатие(Элемент)
	ОткрытьФорму("Справочник.СоставПаллеты.ФормаСписка");
КонецПроцедуры

Функция КОРА_ПолучитьАдрес_19()
	Возврат "http://10.0.0.19/automacon18" + "/ws/MobileService?wsdl"	
КонецФункции

Функция ПолучитьПроксиПоАдресу(Пользователь, Пароль, СообщениеОбОшибке)	
	Адрес = КОРА_ПолучитьАдрес_19();
	
	Попытка			
		Определения = Новый WSОпределения(Адрес, Пользователь, Пароль);
		Прокси = Новый WSПрокси(Определения, "MobileExchange", "MobileService", "MobileServiceSoap");
		Прокси.Пользователь = Пользователь;
		Прокси.Пароль = Пароль;					
		
		Возврат Прокси;
	Исключение
		СообщениеОбОшибке = ОписаниеОшибки();
		
		Возврат Неопределено;
	КонецПопытки;	
КонецФункции

Процедура ОсновныеДействияФормыТест(Кнопка)
	Прокси = ПолучитьПрокси();
	Прокси.ПрофильГрузчика(Новый ХранилищеЗначения(""));
КонецПроцедуры

// Возвращает прокси сервиса обмена данными.
//
// Возвращаемое значение:
// WSПрокси
//
Функция ПолучитьПрокси(СообщениеОбОшибке = "") Экспорт	
	Пользователь = "obmenMP";
	Пароль = "666";
	
	Возврат ПолучитьПроксиПоАдресу(Пользователь, Пароль, СообщениеОбОшибке);	
КонецФункции

Процедура КнопкаВыполнитьНажатие(Кнопка)
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	AK_Ворота.Ссылка
	//	|ИЗ
	//	|	Справочник.AK_Ворота КАК AK_Ворота";
	//
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//Выборка = РезультатЗапроса.Выбрать();
	//
	//Пока Выборка.Следующий() Цикл
	//	обк = Выборка.Ссылка.ПолучитьОбъект();
	//	обк.ИД = 0;
	//	обк.ОбменДанными.Загрузка = Истина;
	//	обк.Записать();
	//КонецЦикла;
	
	Прокси = ПолучитьПрокси();
	
	СтруктураДанных = Новый Структура("Штрихкод, Кладовщик", "850000001324432", Грузчик.УникальныйИдентификатор());
	//ДанныеМП = Новый ХранилищеЗначения(СтруктураДанных, Новый СжатиеДанных(9));
	//
	// 
	//СтруктураОтвета = Прокси.ПаллетаНаДебаркадере(ДанныеМП).Получить();
	
	
	ДанныеМП = Новый ХранилищеЗначения(СтруктураДанных, Новый СжатиеДанных(9));
	
	Попытка 
		СтруктураОтвета = Прокси.НачатьПогрузку(ДанныеМП).Получить();	
	Исключение
		Сообщить("Не удалось записать данные по причине: " + ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	Сообщить(СтруктураОтвета.ОписаниеОшибок);
КонецПроцедуры

Процедура КнопкаЗагрузитьМагазиныПоМаршрутуНажатие(Элемент)
	ВходящиеДанные = Новый Структура;
	ВходящиеДанные.Вставить("Склад", Склад);
	ВходящиеДанные.Вставить("Маршрут", Маршрут);
	ВходящиеДанные.Вставить("Грузчик", Неопределено);
	ВходящиеДанные.Вставить("Дата", ТекДата);
	
	Результат = ПолучитьДанныеМагазиныВоротаПаллеты(ВходящиеДанные);
	
	Данные = Результат.Получить();
	
	ТаблицаМагазины = Данные.ТаблицаМагазины;
	ТаблицаПаллеты = Данные.ТаблицаПаллеты;
	
	ЭлементыФормы.ТаблицаМагазины.СоздатьКолонки();
	ЭлементыФормы.ТаблицаПаллеты.СоздатьКолонки();
КонецПроцедуры

Процедура КнопкаЗагрузитьВозможныеМаршрутыНажатие(Элемент)
	ВходящиеДанные = Новый Структура;
	ВходящиеДанные.Вставить("Склад", "dddf7252-4cf5-11e3-979d-005056a00106");//Склад);
	//ВходящиеДанные.Вставить("Маршрут", Маршрут);
	ВходящиеДанные.Вставить("Грузчик", Неопределено);
	ВходящиеДанные.Вставить("Дата", ТекДата);
	
	Результат = ПолучитьВозможныеМаршруты(ВходящиеДанные);
	
	Данные = Результат.Получить();
	
	ТаблицаМаршруты = Данные.ТаблицаМаршруты;
	
	ЭлементыФормы.ТаблицаМаршруты.СоздатьКолонки();
КонецПроцедуры

Процедура ПоказатьДанныеОднойПаллетыНажатие(Элемент)
	ВходящиеДанные = Новый Структура;
	ВходящиеДанные.Вставить("Склад", Склад);
	ВходящиеДанные.Вставить("Штрихкод", Штрихкод);
	ВходящиеДанные.Вставить("Грузчик", Неопределено);
	ВходящиеДанные.Вставить("Дата", ТекДата);
	
	Результат = ПолучитьДанныеПаллетыПоШтрихкоду(ВходящиеДанные);
	
	Данные = Результат.Получить();
	
	ДанныеОднойПаллеть.Очистить();
	
	Для каждого КлючЗначение Из Данные Цикл	
		Строка = ДанныеОднойПаллеть.Добавить();
	    ЗаполнитьЗначенияСвойств(Строка, КлючЗначение);
	КонецЦикла;
КонецПроцедуры








