
#Область ОбработчикиСобытийФормы

//+++АК LATV 2018.10.07 ИП-00020000
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Объект.Период.Вариант = ВариантСтандартногоПериода.Сегодня;
	
	ИнициализироватьСКД();

КонецПроцедуры

//+++АК LATV 2018.10.07 ИП-00020000
&НаКлиенте
Процедура ПриОткрытии(Отказ)

	УстановитьВидимостьОтбора(СохраняемоеЗначение_ВидимостьОтбора);

КонецПроцедуры

//+++АК LATV 2018.10.07 ИП-00020000
&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)

	СохраняемоеЗначение_ВидимостьОтбора = Элементы.ГруппаОтбор.Видимость;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

//+++АК LATV 2018.10.07 ИП-00020000
&НаКлиенте
Процедура СкрытьПоказатьОтбор(Команда)

	УстановитьВидимостьОтбора(Не Элементы.ГруппаОтбор.Видимость);

КонецПроцедуры

//+++АК LATV 2018.10.07 ИП-00020000
&НаКлиенте
Процедура СнятьОтметку(Команда)

	ПоменятьЗначениеФлага(Ложь);

КонецПроцедуры

//+++АК LATV 2018.10.07 ИП-00020000
&НаКлиенте
Процедура ОтметитьВсе(Команда)

	ПоменятьЗначениеФлага(Истина);

КонецПроцедуры

//+++АК LATV 2018.10.07 ИП-00020000
&НаКлиенте
Процедура Заполнить(Команда)

	ОчиститьСообщения();
	ЗаполнитьВФоне();

КонецПроцедуры

//+++АК LATV 2018.10.07 ИП-00020000
&НаКлиенте
Процедура СформироватьДокументы(Команда)

	СформироватьДокументыВФоне();

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Заполнение

//+++АК LATV 2018.10.07 ИП-00020000
&НаКлиенте
Процедура ЗаполнитьВФоне()

	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ОбрабатываемыеДокументы.Очистить();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
	ПараметрыОжидания.ВыводитьСообщения	= Истина;
	ПараметрыОжидания.ТекстСообщения	= НСтр("ru = 'Заполнение данных по заказам'");
	ПараметрыОжидания.ОповещениеПользователя.Показать	= Истина;
	ПараметрыОжидания.ОповещениеПользователя.Пояснение	= НСтр("ru = 'Заполнение данных по заказам завершено'");
	
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьВФонеЗавершение", ЭтаФорма);
	
	ДлительнаяОперация = ЗаполнитьНаСервере();
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);

КонецПроцедуры

//+++АК LATV 2018.10.07 ИП-00020000
&НаСервере
Функция ЗаполнитьНаСервере()

	// Выполняемый метод
	ПолноеИмяОбъекта = РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя();
	ИмяМетода = ПолноеИмяОбъекта + ".МодульОбъекта.ВыполнитьОбработкуВФоне";
	
	ПараметрыМетода = Новый Структура();
	ПараметрыМетода.Вставить("Действие","Заполнение");
	ПараметрыМетода.Вставить("Период",					Объект.Период);
	ПараметрыМетода.Вставить("Организация",				Объект.Организация);
	ПараметрыМетода.Вставить("Склад",					Объект.Склад);
	ПараметрыМетода.Вставить("НастройкиКомпоновщика",	Объект.КомпоновщикНастроек.ПолучитьНастройки());
	
	// Запуск фонового задания
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьВФоне(ИмяМетода, ПараметрыМетода, ПараметрыВыполнения);

КонецФункции

//+++АК LATV 2018.10.07 ИП-00020000
&НаКлиенте
Процедура ЗаполнитьВФонеЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда // Задание отменено
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		Если Результат.Сообщения <> Неопределено Тогда
			Для Каждого Сообщение Из Результат.Сообщения Цикл
				Сообщение.Сообщить();
			КонецЦикла;
		КонецЕсли;
		
		ЗагрузитьПодготовленныеДанные(Результат.АдресРезультата);
		Возврат;
	КонецЕсли;

КонецПроцедуры

//+++АК LATV 2018.10.07 ИП-00020000
&НаСервере
Процедура ЗагрузитьПодготовленныеДанные(АдресРезультата)

	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Объект.ОбрабатываемыеДокументы.Загрузить(Результат.ОбрабатываемыеДокументы);
	
	УдалитьИзВременногоХранилища(АдресРезультата);

КонецПроцедуры

#КонецОбласти

#Область ФормированиеДокументов

//+++АК LATV 2018.10.07 ИП-00020000
&НаКлиенте
Процедура СформироватьДокументыВФоне()

	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
	ПараметрыОжидания.ВыводитьСообщения	= Истина;
	ПараметрыОжидания.ТекстСообщения	= НСтр("ru = 'Формирование приходных ордеров'");
	ПараметрыОжидания.ОповещениеПользователя.Показать	= Истина;
	ПараметрыОжидания.ОповещениеПользователя.Пояснение	= НСтр("ru = 'Формирование приходных ордеров завершено'");
	
	Оповещение = Новый ОписаниеОповещения("СформироватьДокументыВФонеЗавершение", ЭтаФорма);
	
	ДлительнаяОперация = СформироватьДокументыНаСервере();
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);

КонецПроцедуры

//+++АК LATV 2018.10.07 ИП-00020000
&НаСервере
Функция СформироватьДокументыНаСервере()

	// Выполняемый метод
	ПолноеИмяОбъекта = РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя();
	ИмяМетода = ПолноеИмяОбъекта + ".МодульОбъекта.ВыполнитьОбработкуВФоне";
	
	ПараметрыМетода = Новый Структура();
	ПараметрыМетода.Вставить("Действие","ОбработкаРезультата");
	ПараметрыМетода.Вставить("ОбрабатываемыеДокументы", Объект.ОбрабатываемыеДокументы.Выгрузить());
	
	// Запуск фонового задания
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьВФоне(ИмяМетода, ПараметрыМетода, ПараметрыВыполнения);

КонецФункции

//+++АК LATV 2018.10.07 ИП-00020000
&НаКлиенте
Процедура СформироватьДокументыВФонеЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда // Задание отменено
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		Если Результат.Сообщения <> Неопределено Тогда
			Для Каждого Сообщение Из Результат.Сообщения Цикл
				Сообщение.Сообщить();
			КонецЦикла;
		КонецЕсли;
		
		ЗагрузитьПодготовленныеДанныеСоздание(Результат.АдресРезультата);
		Возврат;
	КонецЕсли;

КонецПроцедуры

//+++АК LATV 2018.10.07 ИП-00020000
&НаСервере
Процедура ЗагрузитьПодготовленныеДанныеСоздание(АдресРезультата)

	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Объект.ОбрабатываемыеДокументы.Загрузить(Результат.ОбрабатываемыеДокументы);
	
	УдалитьИзВременногоХранилища(АдресРезультата);

КонецПроцедуры

#КонецОбласти

//+++АК LATV 2018.10.07 ИП-00020000
&НаКлиенте
Процедура УстановитьВидимостьОтбора(ВидимостьОтбора)

	Элементы.ГруппаОтбор.Видимость			= ВидимостьОтбора;
	Элементы.СкрытьПоказатьОтбор.Пометка	= ВидимостьОтбора;

КонецПроцедуры

//+++АК LATV 2018.10.07 ИП-00020000
&НаСервере
Процедура ИнициализироватьСКД()

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ИнициализироватьСКД(УникальныйИдентификатор);
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");

КонецПроцедуры

//+++АК LATV 2018.10.07 ИП-00020000
&НаСервере
Процедура ПоменятьЗначениеФлага(ЗначениеФлага)

	МассивСтрок = Объект.ОбрабатываемыеДокументы.НайтиСтроки(Новый Структура("Выбрать", Не ЗначениеФлага));
	Для Каждого ТекСтрока Из МассивСтрок Цикл
		ТекСтрока.Выбрать = ЗначениеФлага;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти