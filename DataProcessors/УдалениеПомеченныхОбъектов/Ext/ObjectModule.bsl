Перем ТаблицаСсылок;

Функция вОбновитьПомеченныеНаУдаление(ТолькоЗаявкиНаРасход = Истина) Экспорт
	УстановитьПривилегированныйРежим(Истина);
	
	ПоказыватьОбъектыКоторыеМожноУдалить = Истина;
	ПоказыватьОбъектыКоторыеНельзяУдалить = Истина;
	ПоказыватьСсылкиУдаляемых = Истина;
	ПоказыватьСсылкиНеудаляемых = Истина;
	СсылкиНаУдаляемыеОбъекты.Очистить();
	ТаблицаСсылок = Ложь;
	УдаляемыеОбъекты.Очистить();
	СоответствиеТипаКМетаданному = Новый Соответствие;
	
	Попытка
		МассивКУдалению = НайтиПомеченныеНаУдаление();
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Для каждого УдаляемыйОбъект из МассивКУдалению цикл
		ТипУдаляемогоОбъекта = ТипЗНЧ(УдаляемыйОбъект);
		Если ТолькоЗаявкиНаРасход Тогда
			МассивНужныеТипы = Новый Массив();
			МассивНужныеТипы.Добавить(Тип("ДокументСсылка.ЗаявкаНаРасходованиеСредств"));
			МассивНужныеТипы.Добавить(Тип("ДокументСсылка.ЭлектронноеПисьмо"));
			МассивНужныеТипы.Добавить(Тип("ЗадачаСсылка.ЗадачаИсполнителя"));
			Если МассивНужныеТипы.Найти(ТипУдаляемогоОбъекта) = Неопределено Тогда
				Продолжить;
			КонецЕсли;	
		КонецЕсли;	
		СтрокаУдаляемогоОбъекта = УдаляемыеОбъекты.Добавить();
		СтрокаУдаляемогоОбъекта.ссылка = УдаляемыйОбъект;
		СтрокаУдаляемогоОбъекта.ПредставлениеСсылки = УдаляемыйОбъект;
		ИмяМетаданного = СоответствиеТипаКМетаданному[ТипУдаляемогоОбъекта];
		Если ИмяМетаданного = Неопределено Тогда
			ИмяМетаданного = УдаляемыйОбъект.Метаданные().ПолноеИмя();
			СоответствиеТипаКМетаданному.Вставить(ТипУдаляемогоОбъекта,ИмяМетаданного);
		КонецЕсли; 
		СтрокаУдаляемогоОбъекта.Метаданные = ИмяМетаданного;
		СтрокаУдаляемогоОбъекта.Удалять = Истина;
		СтрокаУдаляемогоОбъекта.Удаляется = Истина;
		СтрокаУдаляемогоОбъекта.ИндексКартинки = 1;
	КонецЦикла;
	Возврат Истина;
КонецФункции

Процедура вКонтроль() Экспорт
	ЕстьПомеченныеНеВОтборе = Ложь;
	МассивКУдалению = Новый Массив;
	Для Каждого СтрокаУдаляемогоОбъекта из УдаляемыеОбъекты Цикл
		Если СтрокаУдаляемогоОбъекта.Удалять  Тогда
			МассивКУдалению.Добавить(СтрокаУдаляемогоОбъекта.Ссылка);
			СтрокаУдаляемогоОбъекта.Удаляется = Истина;
		Иначе
			СтрокаУдаляемогоОбъекта.Удаляется = Ложь;
		КонецЕсли;
		СтрокаУдаляемогоОбъекта.НеУдаляемыхСсылок = 0;
		СтрокаУдаляемогоОбъекта.Ссылок = 0;
	КонецЦикла;
	СсылкиНаУдаляемыеОбъекты.Очистить();
	ТаблицаСсылок = НайтиПоСсылкам(МассивКУдалению);
	ТаблицаСсылок.Колонки.Добавить("СтрокаУдаляемого");
	ТаблицаСсылок.Колонки.Добавить("СтрокаДанного");
	ТаблицаСсылок.Колонки.Добавить("ИндексКартинки");
	ТаблицаСсылок.Колонки.Добавить("Удаляется");
	
	
	Для каждого ЭлементТаблицыСсылок из ТаблицаСсылок Цикл
		Ссылка = ЭлементТаблицыСсылок.ссылка;
		Данные = ЭлементТаблицыСсылок.Данные;
		СтрокаСсылки = УдаляемыеОбъекты.Найти(Ссылка,"Ссылка");
		МетаданныеДанных = ЭлементТаблицыСсылок.Метаданные;
		ИмяМетаданных = МетаданныеДанных.ПолноеИмя();
		
		Если Лев(ИмяМетаданных,15) = "РегистрСведений" Тогда
			ИзмеренияРегистраСведений = МетаданныеДанных.Измерения;
			УдаляетсяРегистрСведений = Ложь;
			Для Каждого Измерение Из ИзмеренияРегистраСведений Цикл
				Если Измерение.Ведущее Тогда
					Если Ссылка = Данные[Измерение.Имя] Тогда
						УдаляетсяРегистрСведений = Истина;
						ЭлементТаблицыСсылок.Данные = ссылка;
						Данные = ссылка;
						Прервать;
					КонецЕсли; 
				КонецЕсли;
			КонецЦикла;
			Если Не УдаляетсяРегистрСведений Тогда
				ЭлементТаблицыСсылок.Данные = Неопределено;
				Данные = Неопределено;
			КонецЕсли; 
		КонецЕсли;
		
		
		Если Данные = Неопределено Тогда
			ЭлементТаблицыСсылок.ИндексКартинки = 3;
			СтрокаДанного = Неопределено;
		Иначе
			СтрокаДанного = ?(Данные = Ссылка,СтрокаСсылки,УдаляемыеОбъекты.Найти(Данные,"Ссылка"));
			ЭлементТаблицыСсылок.ИндексКартинки =?(Данные.ПометкаУдаления,1,0);
		КонецЕсли; 
		СтрокаСсылки.Ссылок = СтрокаСсылки.Ссылок + 1;
		УдаляетсяСсылка = СтрокаСсылки.Удаляется;
		Если СтрокаДанного = Неопределено Тогда
			УдаляетсяДанное = Ложь;
			Если УдаляетсяСсылка Тогда
				СтрокаСсылки.Удаляется = Ложь;
			КонецЕсли; 
		Иначе
			УдаляетсяДанное = СтрокаДанного.Удаляется;
			Если Не УдаляетсяДанное Тогда
				Если УдаляетсяСсылка Тогда
					СтрокаСсылки.Удаляется = ложь;
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 
		Если УдаляетсяДанное = ложь Тогда
			СтрокаСсылки.НеУдаляемыхСсылок = СтрокаСсылки.НеУдаляемыхСсылок + 1;
		КонецЕсли; 
		ЭлементТаблицыСсылок.Удаляется = УдаляетсяДанное;
		ЭлементТаблицыСсылок.СтрокаУдаляемого = СтрокаСсылки;
		ЭлементТаблицыСсылок.СтрокаДанного = СтрокаДанного;
	КонецЦикла;
	НашлиДляИсключения = Истина;
	Пока НашлиДляИсключения Цикл
		НашлиДляИсключения = Ложь;
		Для каждого ЭлементТаблицыСсылок из ТаблицаСсылок Цикл
			СтрокаДанного = ЭлементТаблицыСсылок.СтрокаДанного;
			Если  СтрокаДанного <> Неопределено Тогда
				УдаляетсяДанное = СтрокаДанного.Удаляется;
				Удаляется = ЭлементТаблицыСсылок.Удаляется;
				СтрокаСсылки = ЭлементТаблицыСсылок.СтрокаУдаляемого;
				УдаляетсяСсылка = СтрокаСсылки.Удаляется;
				Если Удаляется и Не УдаляетсяДанное  Тогда
					ЭлементТаблицыСсылок.Удаляется = Ложь;
					СтрокаСсылки.НеУдаляемыхСсылок = СтрокаСсылки.НеУдаляемыхСсылок + 1;
				КонецЕсли;
				Если УдаляетсяСсылка И Не УдаляетсяДанное Тогда
					СтрокаСсылки.Удаляется = ложь;
					НашлиДляИсключения = Истина;
				КонецЕсли;
			КонецЕсли; 
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура вУдалить() Экспорт
	ЕстьПомеченныеНеВОтборе = Ложь;
	Удалено = 0;
	НеУдалено = 0;
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Удаляется",Истина);
	МассивУдаляемых = УдаляемыеОбъекты.НайтиСтроки(СтруктураОтбора);
	СтруктураОтбора.Очистить();
	Для Каждого СтрокаУдаляемогоОбъекта из МассивУдаляемых Цикл
		Ссылка = СтрокаУдаляемогоОбъекта.Ссылка;
		Объект = Ссылка.ПолучитьОбъект();
		
		Попытка 
			
			Если Не Объект = Неопределено Тогда
				Объект.Удалить();
			КонецЕсли;
			
			УдаляемыеОбъекты.Удалить(СтрокаУдаляемогоОбъекта);
			СтруктураОтбора.Вставить("Ссылка",Ссылка);
			МассивСсылок = ТаблицаСсылок.НайтиСтроки(СтруктураОтбора);
			Для Каждого СтрокаСсылки из МассивСсылок Цикл
				ТаблицаСсылок.Удалить(СтрокаСсылки);
			КонецЦикла;
			Удалено = Удалено+1;
		Исключение
			НеУдалено = НеУдалено+1;
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры