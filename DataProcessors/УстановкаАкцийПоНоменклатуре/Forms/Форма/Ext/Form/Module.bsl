
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//+++AK BARA #16448	
	Если УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.МожетРедактироватьАкцииНаТовары, Ложь) Тогда
		
	ИначеЕсли  УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.МожетРедактироватьЗаявкиАкций, Ложь)  Тогда 	
		Элементы.ФормаЗаписатьДанныеВТовары.Видимость = Ложь;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("У вас нет прав на регулирвоание акций товаров",,,, Отказ);
	КонецЕсли;	
	//---AK BARA #16448

	Объект.ПоВсемМагазинам = Истина;
	
	Тип = "Акция";
	//+++ AK BARA #16448.01
	ИзменитьВидимостьТЧ();
	//--- AK BARA #16448.01
КонецПроцедуры

&НаКлиенте
Процедура ОтрегулироватьЭлементы()
	
	Элементы.Магазины.Доступность = НЕ Объект.ПоВсемМагазинам;
	
КонецПроцедуры	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОтрегулироватьЭлементы();
	НастроитьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоВсемМагазинамПриИзменении(Элемент)
	
	ОтрегулироватьЭлементы();
	
КонецПроцедуры

Функция ПолучитьМакетПоТипу()
//+++ AK BARA #16448.01	
	ИзменитьВидимостьТЧ();	
//--- AK BARA #16448.01
	
	Если Тип = "Акция" Тогда
		Если Объект.ТипСкидки = Перечисления.ТипыАкцийПоТоварам.ПриПокупкеНесколькихШтук Тогда
			Возврат Обработки.УстановкаАкцийПоНоменклатуре.ПолучитьМакет("МакетПриПокупкеШтук");
		ИначеЕсли Объект.ТипСкидки = Перечисления.ТипыАкцийПоТоварам.СкидкаПоБонуснойКарте Тогда
			Возврат Обработки.УстановкаАкцийПоНоменклатуре.ПолучитьМакет("МакетПроцент");
		Иначе			
			Возврат Новый ТабличныйДокумент();
		КонецЕсли;
	Иначе
		Возврат Обработки.УстановкаАкцийПоНоменклатуре.ПолучитьМакет("МакетПодарки");
	КонецЕсли;	

КонецФункции	

//+++ AK BARA #16448.01
Функция   ИзменитьВидимостьТЧ()
ТабЧасть = "";	
	Если Тип = "Акция" Тогда
		Если Объект.ТипСкидки = Перечисления.ТипыАкцийПоТоварам.ПриПокупкеНесколькихШтук Тогда
			ЭтаФорма.Элементы.ТоварыПодарки.Видимость = Ложь;
			ЭтаФорма.Элементы.ТоварыПриПокупкеШтук.Видимость = Истина;
			ЭтаФорма.Элементы.ТоварыПроцент.Видимость = Ложь;
			ТабЧасть = "ТоварыПриПокупкеШтук";
		ИначеЕсли Объект.ТипСкидки = Перечисления.ТипыАкцийПоТоварам.СкидкаПоБонуснойКарте Тогда
			ЭтаФорма.Элементы.ТоварыПодарки.Видимость = Ложь;
			ЭтаФорма.Элементы.ТоварыПриПокупкеШтук.Видимость = Ложь;
			ЭтаФорма.Элементы.ТоварыПроцент.Видимость = Истина;	
			ТабЧасть = "ТоварыПроцент";
		Иначе			
			ЭтаФорма.Элементы.ТоварыПодарки.Видимость = Ложь;
			ЭтаФорма.Элементы.ТоварыПриПокупкеШтук.Видимость = Ложь;
			ЭтаФорма.Элементы.ТоварыПроцент.Видимость = Ложь;
			ТабЧасть = "";
		КонецЕсли;
	Иначе
		ЭтаФорма.Элементы.ТоварыПодарки.Видимость = Истина;
		ЭтаФорма.Элементы.ТоварыПриПокупкеШтук.Видимость = Ложь;
		ЭтаФорма.Элементы.ТоварыПроцент.Видимость = Ложь;	
		ТабЧасть = "ТоварыПодарки";
	КонецЕсли;	
	
	Если ВидимостьТабДок = Истина Тогда	
		ЭтаФорма.Элементы.ТоварыПодарки.Видимость = Ложь;
		ЭтаФорма.Элементы.ТоварыПриПокупкеШтук.Видимость = Ложь;
		ЭтаФорма.Элементы.ТоварыПроцент.Видимость = Ложь;		
	КонецЕсли;
	
Возврат ТабЧасть;	
КонецФункции	
//--- AK BARA #16448.01

&НаКлиенте
Процедура ТипСкидкиПриИзменении(Элемент)
	
	ТабТовары.Очистить();
	ТабТовары.Вывести(ПолучитьМакетПоТипу());
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьИРасчитатьСервер()
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.ДатаОкончания));
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(Объект.ДатаНачала));
	Запрос.Текст = "ВЫБРАТЬ
	               |	НоменклатураСпр.Ссылка,
	               |	НоменклатураСпр.Наименование,
	               |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена
	               |ИЗ
	               |	Справочник.Номенклатура КАК НоменклатураСпр
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	               |				&ДатаКон,
	               |				ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	               |					И ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.ОсновнойТипЦенПродаж)) КАК ЦеныНоменклатурыСрезПоследних
	               |		ПО НоменклатураСпр.Ссылка = ЦеныНоменклатурыСрезПоследних.Номенклатура
	               |ГДЕ
	               |	НоменклатураСпр.ЭтоГруппа = ЛОЖЬ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НоменклатураАкции.Ссылка,
	               |	НоменклатураАкции.ТипСкидки,
	               |	НоменклатураАкции.ДействуетВМагазине
	               |ИЗ
	               |	Справочник.Номенклатура.Акции КАК НоменклатураАкции
	               |ГДЕ
	               |	(НоменклатураАкции.ДатаНачала МЕЖДУ &ДатаНач И &ДатаКон
	               |			ИЛИ НоменклатураАкции.ДатаОкончания МЕЖДУ &ДатаНач И &ДатаКон
	               |			ИЛИ &ДатаНач МЕЖДУ НоменклатураАкции.ДатаНачала И НоменклатураАкции.ДатаОкончания
	               |			ИЛИ &ДатаКон МЕЖДУ НоменклатураАкции.ДатаНачала И НоменклатураАкции.ДатаОкончания)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НоменклатураАкции.Ссылка,
	               |	НоменклатураАкции.ДействуетВМагазине
	               |ИЗ
	               |	Справочник.Номенклатура.УсловияДляПодарка КАК НоменклатураАкции
	               |ГДЕ
	               |	(НоменклатураАкции.ДатаНачала МЕЖДУ &ДатаНач И &ДатаКон
	               |			ИЛИ НоменклатураАкции.ДатаОкончания МЕЖДУ &ДатаНач И &ДатаКон
	               |			ИЛИ &ДатаНач МЕЖДУ НоменклатураАкции.ДатаНачала И НоменклатураАкции.ДатаОкончания
	               |			ИЛИ &ДатаКон МЕЖДУ НоменклатураАкции.ДатаНачала И НоменклатураАкции.ДатаОкончания)";
				   
	Результаты = Запрос.ВыполнитьПакет();
	ТабКеш = Результаты[0].Выгрузить();
	АкцииТекущие = Результаты[1].Выгрузить();
	ПодаркиТекущие = Результаты[2].Выгрузить();
	
	//+++АК KIRN 2018.05.15 ИП-00018233
	
	тзИсторияПоАкциям = Новый ТаблицаЗначений;
	тзИсторияПоАкциям.Колонки.Добавить("id_tov", Новый ОписаниеТипов("Число"));
	тзИсторияПоАкциям.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	тзИсторияПоАкциям.Колонки.Добавить("СуммаПродажДо",Новый ОписаниеТипов("Число"));
	тзИсторияПоАкциям.Колонки.Добавить("СуммаПродажВ",Новый ОписаниеТипов("Число"));
	тзИсторияПоАкциям.Колонки.Добавить("СуммаПродажПосле",Новый ОписаниеТипов("Число"));
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	
	СтрЗапрос = "SELECT 
		|[id_tov] as id_tov
		|,sum([Сумма Прод_До_Акции])/COUNT(*) as sum_prod_do_avr
		|,sum([Сумма Прод_В_Акцию])/COUNT(*) as sum_prod_v_avr
		|,sum([Сумма Прод_После_Акции])/COUNT(*) as sum_prod_posle_avr
		|FROM [Reports].[dbo].[Action_Tovar_SpecPrice_History]
		|where  [Акция] LIKE '"+?(Объект.ТипСкидки=Перечисления.ТипыАкцийПоТоварам.СкидкаПоБонуснойКарте,"Cкидка по бонусной карте ","При покупке нескольких штук ")+"' and [Дата_начала] between '"+Формат(ДобавитьМесяц(Объект.ДатаНачала,-8),"ДФ=yyyyMMdd")+"' and '"+Формат(Объект.ДатаОкончания,"ДФ=yyyyMMdd")+"'
		|group by [id_tov]";
	
	rs = ADOСоединение.Execute(СтрЗапрос);
	Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
		rs=rs.NextRecordSet();
	КонецЦикла;
	
	Попытка
		rs.MoveFirst();
		
		Пока НЕ rs.EOF() Цикл
			СтрокаТаб = тзИсторияПоАкциям.Добавить();
			СтрокаТаб.id_tov = Rs.Fields("id_tov").Value;
			СтрокаТаб.Номенклатура = Справочники.Номенклатура.НайтиПоРеквизиту("id_tov",Rs.Fields("id_tov").Value);
			СтрокаТаб.СуммаПродажДо = Rs.Fields("sum_prod_do_avr").Value;
			СтрокаТаб.СуммаПродажВ = Rs.Fields("sum_prod_v_avr").Value;
			СтрокаТаб.СуммаПродажПосле = Rs.Fields("sum_prod_posle_avr").Value;
			
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	//---АК KIRN 
	
	Если Тип = "Акция" Тогда
		Если Объект.ТипСкидки = Перечисления.ТипыАкцийПоТоварам.СкидкаПоБонуснойКарте Тогда
			//+++ AK BARA #16448 Переделан код, был по таб док, сейчас по тч   //--- AK BARA #16448.01
			Для каждого Стр Из Объект.ТоварыПроцент  Цикл				
				БылаНайденаНоменклатура = Ложь;
				СтрокиКешаПоиск = ТабКеш.НайтиСтроки(Новый Структура("Ссылка", Стр.Номенклатура));
				Для Каждого СтрокаКеш Из СтрокиКешаПоиск Цикл
					Если СтрокаКеш.Ссылка = Стр.Номенклатура Тогда
						ПроцентСкидки =Стр.ПроцентСкидки;
						Попытка
							Процент = Число(ПроцентСкидки);
							Стр.СтараяЦена = СтрокаКеш.Цена;
							Стр.НоваяЦена = Окр(СтрокаКеш.Цена - Процент*СтрокаКеш.Цена/100, 0, РежимОкругления.Окр15как20);
							ДействующиеАкции = АкцииТекущие.НайтиСтроки(Новый Структура("Ссылка", СтрокаКеш.Ссылка));
							Если ДействующиеАкции.Количество() > 0 Тогда
								Стр.Комментарий = "Есть действующая акция";
							КонецЕсли;	
						Исключение
							Стр.Комментарий = "Не удалось преобразовать процент скидки к числу";
						КонецПопытки;	
						БылаНайденаНоменклатура = Истина;
						Прервать;
					КонецЕсли;	
				КонецЦикла;
				Если Не БылаНайденаНоменклатура Тогда
					Стр.Комментарий = "Номенклатура не найдена по наименованию";
				КонецЕсли;
				//+++АК KIRN 2018.05.15 ИП-00018233
				мСтрок = тзИсторияПоАкциям.НайтиСтроки(Новый Структура("Номенклатура",Стр.Номенклатура));
				Если мСтрок.Количество()>0 ТОгда
					Стр.ПроданоВАкцию = мСтрок[0].СуммаПродажВ;
					Стр.ПроданоПослеАкции = мСтрок[0].СуммаПродажПосле;
				КонецЕСли;
				//---АК KIRN 
			КонецЦикла;
		ИначеЕсли Объект.ТипСкидки = Перечисления.ТипыАкцийПоТоварам.ПриПокупкеНесколькихШтук Тогда
			//Для н = 2 По ТабТовары.ВысотаТаблицы Цикл
			Для Каждого Стр из Объект.ТоварыПриПокупкеШтук Цикл 
				БылаНайденаНоменклатура = Ложь;
				Стр.НоваяЦена = 0;
				
				СтрокиКешаПоиск = ТабКеш.НайтиСтроки(Новый Структура("Ссылка", Стр.Номенклатура));
				Для Каждого СтрокаКеш Из СтрокиКешаПоиск Цикл
					Если СтрокаКеш.Ссылка = Стр.Номенклатура Тогда
						КолвоШтук = Стр.ПриПокупкеШтук;
						
						НоваяЦена = Стр.УстановитьЦену;
						Попытка
							НоваяЦена = Число(НоваяЦена);
							Стр.СтараяЦена = СтрокаКеш.Цена;
							Стр.НоваяЦена = НоваяЦена;
						Исключение
							Стр.Комментарий = "Не удалось преобразовать новую цену к числу";
						КонецПопытки;
						БылаНайденаНоменклатура = Истина;
						ДействующиеАкции = АкцииТекущие.НайтиСтроки(Новый Структура("Ссылка", СтрокаКеш.Ссылка));
						Если ДействующиеАкции.Количество() > 0 Тогда
							Стр.Комментарий = "Есть действующая акция";
						КонецЕсли;
						Прервать;
					КонецЕсли;	
				КонецЦикла;
				Если Не БылаНайденаНоменклатура Тогда
					Стр.Комментарий = "Номенклатура не найдена по наименованию";
				КонецЕсли;
				
				//+++АК KIRN 2018.05.15 ИП-00018233
				мСтрок = тзИсторияПоАкциям.НайтиСтроки(Новый Структура("Номенклатура",Стр.Номенклатура));
				Если мСтрок.Количество()>0 ТОгда
					Стр.ПроданоВАкцию = мСтрок[0].СуммаПродажВ;
					Стр.ПроданоПослеАкции = мСтрок[0].СуммаПродажПосле;
				КонецЕСли;
				//---АК KIRN 
			КонецЦикла;	
		КонецЕсли;
	Иначе
		//Для н = 2 По ТабТовары.ВысотаТаблицы Цикл
		Для Каждого Стр из Объект.ТоварыПодарки Цикл 
			БылаНайденаНоменклатура = Ложь;
			Стр.Комментарий = "";
			СтрокиКешаПоиск = ТабКеш.НайтиСтроки(Новый Структура("Ссылка", Стр.Номенклатура));
			Для Каждого СтрокаКеш Из СтрокиКешаПоиск Цикл
				Если СтрокаКеш.Ссылка = Стр.Номенклатура Тогда
					СуммаЧека = Стр.ПриСуммеЧека;
					СуммаЧека = Число(СуммаЧека);
					
					КолвоДарить = Стр.МожноПодаритьШтук;
					
					БылаНайденаНоменклатура = Истина;
					ДействующиеАкции = ПодаркиТекущие.НайтиСтроки(Новый Структура("Ссылка", СтрокаКеш.Ссылка));
					Если ДействующиеАкции.Количество() > 0 Тогда
						Стр.Комментарий = "Уже есть строка для подарка";
					КонецЕсли;
					Прервать;
				КонецЕсли;	
			КонецЦикла;
			Если Не БылаНайденаНоменклатура Тогда
				Стр.Комментарий = "Номенклатура не найдена по наименованию";
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;	
	    //--- AK BARA #16448.01

КонецПроцедуры	

&НаКлиенте
Процедура ПроверитьИРасчитать(Команда)
	
	ПроверитьИРасчитатьСервер();
	
КонецПроцедуры

Процедура ЗаписатьДанные()
	
	//+++AK BARA #16448
	Если ЗначениеЗаполнено(ЗаявкаНаАкцию) Тогда 
		ДокЗаявка = ЗаявкаНаАкцию.ПолучитьОбъект();
		ДокЗаявка.ЗаявкаЗакрыта = Истина;
		ДокЗаявка.Записать();
	КонецЕсли;
	//---AK BARA #16448
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(Объект.ДатаОкончания));
	Запрос.Текст = "ВЫБРАТЬ
	               |	НоменклатураСпр.Ссылка,
	               |	НоменклатураСпр.Наименование,
	               |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена
	               |ИЗ
	               |	Справочник.Номенклатура КАК НоменклатураСпр
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	               |				&ДатаКон,
	               |				ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	               |					И ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.ОсновнойТипЦенПродаж)) КАК ЦеныНоменклатурыСрезПоследних
	               |		ПО НоменклатураСпр.Ссылка = ЦеныНоменклатурыСрезПоследних.Номенклатура
	               |ГДЕ
	               |	НоменклатураСпр.ЭтоГруппа = ЛОЖЬ";
				    
	ТабКеш = Запрос.Выполнить().Выгрузить();
	 //AK BARA #16448 переделан код с табличного документа на табличные части  
	Если Тип = "Акция" Тогда
		Если Объект.ТипСкидки = Перечисления.ТипыАкцийПоТоварам.СкидкаПоБонуснойКарте Тогда
			Для каждого Стр Из Объект.ТоварыПроцент Цикл   
				Для Каждого СтрокаКеш Из ТабКеш Цикл
					Если СтрокаКеш.Ссылка = Стр.Номенклатура Тогда
						Процент = Стр.ПроцентСкидки;
						НоваяЦена = Окр(СтрокаКеш.Цена - Процент*СтрокаКеш.Цена/100, 0, РежимОкругления.Окр15как20);
						
						СпрОбъект = СтрокаКеш.Ссылка.ПолучитьОбъект();
						Если Объект.ПоВсемМагазинам Тогда
							СтрокаТаб = СпрОбъект.Акции.Добавить();
							СтрокаТаб.НазваниеАкции = СокрЛП(Стр.НазваниеАкции);
							СтрокаТаб.ДатаНачала = Объект.ДатаНачала;
							СтрокаТаб.ДатаОкончания = Объект.ДатаОкончания;
							СтрокаТаб.ДействуетЦена_Скидка = Процент;
							СтрокаТаб.ТипСкидки = Объект.ТипСкидки;
							СтрокаТаб.КомментарийНаЦенник = СокрЛП(Стр.КомментарийНаЦенник);
						Иначе
							Для Каждого СтрокаМагазин Из Объект.Магазины Цикл
								СтрокаТаб = СпрОбъект.Акции.Добавить();
								СтрокаТаб.НазваниеАкции = СокрЛП(Стр.НазваниеАкции);
								СтрокаТаб.ДатаНачала = Объект.ДатаНачала;
								СтрокаТаб.ДатаОкончания = Объект.ДатаОкончания;
								СтрокаТаб.ДействуетЦена_Скидка = Процент;
								СтрокаТаб.ТипСкидки = Объект.ТипСкидки;
								СтрокаТаб.ДействуетВМагазине = СтрокаМагазин.СтруктурнаяЕдиница;
								СтрокаТаб.КомментарийНаЦенник = СокрЛП(Стр.КомментарийНаЦенник);
							КонецЦикла;	
						КонецЕсли;
						СпрОбъект.Записать();
						Прервать;	
					КонецЕсли;	
				КонецЦикла;
			КонецЦикла;
		ИначеЕсли Объект.ТипСкидки = Перечисления.ТипыАкцийПоТоварам.ПриПокупкеНесколькихШтук Тогда
			Для каждого  Стр из Объект.ТоварыПриПокупкеШтук Цикл
				БылаНайденаНоменклатура = Ложь;
				Для каждого СтрокаКеш Из ТабКеш Цикл
					Если СтрокаКеш.Ссылка = Стр.Номенклатура  Тогда
	
						КолвоШтук = Стр.ПриПокупкеШтук;
						НоваяЦена = Стр.УстановитьЦену;
						
						СпрОбъект = СтрокаКеш.Ссылка.ПолучитьОбъект();
						Если Объект.ПоВсемМагазинам Тогда
							СтрокаТаб = СпрОбъект.Акции.Добавить();
								СтрокаТаб.НазваниеАкции = СокрЛП(Стр.НазваниеАкции);
								СтрокаТаб.ДатаНачала = Объект.ДатаНачала;
								СтрокаТаб.ДатаОкончания = Объект.ДатаОкончания;
								СтрокаТаб.ПриПокупкеШтук = КолвоШтук;
								СтрокаТаб.ДействуетЦена_Скидка = НоваяЦена;
								СтрокаТаб.ТипСкидки = Объект.ТипСкидки;
								СтрокаТаб.КомментарийНаЦенник = СокрЛП(Стр.КомментарийНаЦенник);
						Иначе
							Для Каждого СтрокаМагазин Из Объект.Магазины Цикл
								СтрокаТаб = СпрОбъект.Акции.Добавить();
								СтрокаТаб.НазваниеАкции = СокрЛП(Стр.НазваниеАкции);
								СтрокаТаб.ДатаНачала = Объект.ДатаНачала;
								СтрокаТаб.ДатаОкончания = Объект.ДатаОкончания;
								СтрокаТаб.ПриПокупкеШтук = КолвоШтук;
								СтрокаТаб.ДействуетЦена_Скидка = НоваяЦена;
								СтрокаТаб.ТипСкидки = Объект.ТипСкидки;
								СтрокаТаб.ДействуетВМагазине = СтрокаМагазин.СтруктурнаяЕдиница;
								СтрокаТаб.КомментарийНаЦенник = СокрЛП(Стр.КомментарийНаЦенник);
							КонецЦикла;	
						КонецЕсли;
						СпрОбъект.Записать();
						
						Прервать;
					КонецЕсли;	
				КонецЦикла;
			КонецЦикла;	
		КонецЕсли;
	Иначе
		Для каждого  Стр из Объект.ТоварыПодарки Цикл
			БылаНайденаНоменклатура = Ложь;
			Для Каждого СтрокаКеш Из ТабКеш Цикл
				Если  СтрокаКеш.Ссылка = Стр.Номенклатура Тогда

					СуммаЧека = Стр.ПриСуммеЧека;
					КолвоВПодарок = Стр.МожноПодаритьШтук;
					
					СпрОбъект = СтрокаКеш.Ссылка.ПолучитьОбъект();
					Если Объект.ПоВсемМагазинам Тогда
						СтрокаТаб = СпрОбъект.УсловияДляПодарка.Добавить();
						СтрокаТаб.ДатаНачала = Объект.ДатаНачала;
						СтрокаТаб.ДатаОкончания = Объект.ДатаОкончания;
						СтрокаТаб.ПриСуммеЧекаОт = СуммаЧека;
						СтрокаТаб.МожноПодаритьШтук = КолвоВПодарок;
					Иначе
						Для Каждого СтрокаМагазин Из Объект.Магазины Цикл
							СтрокаТаб = СпрОбъект.УсловияДляПодарка.Добавить();
							СтрокаТаб.ДатаНачала = Объект.ДатаНачала;
							СтрокаТаб.ДатаОкончания = Объект.ДатаОкончания;
							СтрокаТаб.ПриСуммеЧекаОт = СуммаЧека;
							СтрокаТаб.МожноПодаритьШтук = КолвоВПодарок;
							СтрокаТаб.ДействуетВМагазине = СтрокаМагазин.СтруктурнаяЕдиница;
						КонецЦикла;	
					КонецЕсли;
					СпрОбъект.Записать();
					
					Прервать;
				КонецЕсли;	
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаписатьДанныеВТовары(Команда)
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена дата начала акции",,,, Отказ);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнена дата окончания акции",,,, Отказ);
	КонецЕсли;
	
	Если Объект.ДатаНачала < НачалоДня(ТекущаяДата()) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя устаналивать дату начала акции ранее текущей даты",,,, Отказ);
	КонецЕсли;	
	
	
	Если Тип = "Акция" Тогда
		Если Не ЗначениеЗаполнено(Объект.ТипСкидки) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен тип скидки",,,, Отказ);
		КонецЕсли;
	КонецЕсли;	
	
	Если Не Объект.ПоВсемМагазинам
		И Объект.Магазины.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен список магазинов",,,, Отказ);
	КонецЕсли;	
	
	Если Отказ Тогда
		Предупреждение("Данные не записаны. Смотрите окно сообщений");
		Возврат;
	КонецЕсли;

	//+++АК bara 17.11.17	16448.03
	КомуПочта = ПолучитьемайлПоПользователю(ЗаявкаНаАкцию);
	Кому = Новый Массив;
	Кому.Добавить(КомуПочта);
	Кому.Добавить("zakaz@izbenka.msk.ru");
	Кому.Добавить("izbenka.msv@gmail.com");
	Кому.Добавить("izbenkaet@gmail.com");
	//---
	

	Попытка
		НачатьТранзакцию();
		ЗаписатьДанные();		
		ЗафиксироватьТранзакцию();
		Предупреждение("Данные успешно записаны");
		Если ЗначениеЗаполнено(ЗаявкаНаАкцию) Тогда	
			ШапкаПисьма = " Акция с &ДатаНачала по &ДатаОкончания. Тип акции ""&ТипАкции"". Тип скидки ""&ТипСкидки"".<BR>";
			ШапкаПисьма = СтрЗаменить(ШапкаПисьма,"&ДатаНачала",Формат(Объект.ДатаНачала,"ДФ=dd.MM.yyyy"));
			ШапкаПисьма = СтрЗаменить(ШапкаПисьма,"&ДатаОкончания",Формат(Объект.ДатаОкончания,"ДФ=dd.MM.yyyy"));
			ШапкаПисьма = СтрЗаменить(ШапкаПисьма,"&ТипАкции",Тип);
			ШапкаПисьма = СтрЗаменить(ШапкаПисьма,"&ТипСкидки",Объект.ТипСкидки);
			
			ТабЧасть = ИзменитьВидимостьТЧ();
			ТекстПисьма = ШапкаПисьма+"<table border=1> ";
			Если ТабЧасть = "ТоварыПроцент" Тогда 
				ТекстПисьма = ТекстПисьма + Символы.ПС + 
				"<tr>
				|<td> Номенклатура </td> <td> Процент скидки </td> <td> Название акции </td> <td> Комментарий на ценник </td>
				|<td> Старая цена </td> <td> Новая цена </td> <td> Комментарий </td>
				|</tr>" ;
				Для каждого Стр Из Объект.ТоварыПроцент Цикл					
					ТекстПисьма = ТекстПисьма + Символы.ПС + 
					"<tr>
					|<td>"+Стр.Номенклатура+"</td> <td>"+Стр.ПроцентСкидки+"</td> <td>"+Стр.НазваниеАкции+"</td> <td>"+Стр.КомментарийНаЦенник+"</td>
					|<td>"+Стр.СтараяЦена+"</td> <td>"+Стр.НоваяЦена+"</td> <td>"+Стр.Комментарий+"</td>
					|</tr>" ;						
				КонецЦикла;				
			ИначеЕсли ТабЧасть = "ТоварыПодарки" Тогда 
				ТекстПисьма = ТекстПисьма + Символы.ПС + 
				"<tr>
				|<td> Номенклатура </td> <td> При сумму чека </td> <td> Можно подарить штук </td>  <td> Комментарий </td>
				|</tr>" ;
				Для каждого Стр Из Объект.ТоварыПодарки Цикл					
					ТекстПисьма = ТекстПисьма + Символы.ПС + 
					"<tr>
					|<td>"+Стр.Номенклатура+"</td> <td>"+Стр.ПриСуммеЧека+"</td> <td>"+Стр.МожноПодаритьШтук+"</td> <td>"+Стр.Комментарий+"</td>
					|</tr>" ;						
				КонецЦикла;				
			ИначеЕсли ТабЧасть = "ТоварыПриПокупкеШтук" Тогда 
				ТекстПисьма = ТекстПисьма + Символы.ПС + 
				"<tr>
				|<td> Номенклатура </td> <td> При покупке штук </td> <td> Установить цену </td> <td> Название акции </td><td> Комментарий на ценник </td>
				|<td> Старая цена </td> <td> Новая цена </td> <td> Комментарий </td>
				|</tr>" ;
				Для каждого Стр Из Объект.ТоварыПриПокупкеШтук Цикл					
					ТекстПисьма = ТекстПисьма + Символы.ПС + 
					"<tr>
					|<td>"+Стр.Номенклатура+"</td> <td>"+Стр.ПриПокупкеШтук+"</td> <td>"+Стр.УстановитьЦену+"</td> <td>"+Стр.НазваниеАкции+"</td> <td>"+Стр.КомментарийНаЦенник+"</td>
					|<td>"+Стр.СтараяЦена+"</td> <td>"+Стр.НоваяЦена+"</td> <td>"+Стр.Комментарий+"</td>
					|</tr>" ;						
				КонецЦикла;				
			КонецЕсли;
			
			ТекстПисьма = ТекстПисьма + "</table>" ;			
			ОтправитьПисьмо("Заявки на акцию одобрена.", "Заявка на акцию одобрена.",ТекстПисьма,Кому);	
		КонецЕсли;
	Исключение
		ОтменитьТранзакцию();
		Предупреждение("Данные не записаны" + Символы.ПС + ОписаниеОшибки());
	КонецПопытки;	
	
	
КонецПроцедуры

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	//ТабДок = Новый ТабличныйДокумент();
	//ТабДок.Вывести(ТабТовары);
	Настройки.Вставить("Магазины", Объект.Магазины.Выгрузить());
	Настройки.Вставить("ТабДок", ТабТовары);
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ТабТовары.Очистить();
	Объект.Магазины.Загрузить(Настройки.Получить("Магазины"));
    ТабТовары.Вывести(Настройки.Получить("ТабДок"));
	
	Элементы.Магазины.Доступность = НЕ Объект.ПоВсемМагазинам;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьВидимость()
	
	Если Тип = "Акция" Тогда
		Элементы.ТипСкидки.Видимость = Истина;
	Иначе
		Элементы.ТипСкидки.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ТипПриИзменении(Элемент)
	НастроитьВидимость();
	ТипСкидкиПриИзменении(Неопределено);
КонецПроцедуры

//+++ AK BARA #16448.01
&НаСервере
Процедура ЗаписатьЗаявкуНаСервере(ЗаявкаНаАкцию,Тип,ТабТовары)
	
	Если ЗначениеЗаполнено(ЗаявкаНаАкцию) Тогда 
		ДокЗаявка = ЗаявкаНаАкцию.ПолучитьОбъект()
	Иначе
		ДокЗаявка = Документы.ЗаявкаНаАкцию.СоздатьДокумент();
		ДокЗаявка.Дата = ТекущаяДата();
	КонецЕсли;
	
	ХранилищеТоваров = Новый ХранилищеЗначения(ТабТовары);
	
	ЗаполнитьЗначенияСвойств(ДокЗаявка,Объект);
	ДокЗаявка.Тип = Тип;
	ДокЗаявка.Товары = ХранилищеТоваров;
	Для каждого Стр Из Объект.Магазины Цикл
		НовСтр = ДокЗаявка.Магазины.Добавить();
		НовСтр.СтруктурнаяЕдиница = Стр.СтруктурнаяЕдиница;
	КонецЦикла;
	
	Для каждого Стр Из Объект.ТоварыПроцент Цикл
		НовСтр = ДокЗаявка.ТоварыПроцент.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,Стр);
	КонецЦикла;
	
	Для каждого Стр Из Объект.ТоварыПодарки Цикл
		НовСтр = ДокЗаявка.ТоварыПодарки.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,Стр);
	КонецЦикла;
	
	Для каждого Стр Из Объект.ТоварыПриПокупкеШтук Цикл
		НовСтр = ДокЗаявка.ТоварыПриПокупкеШтук.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,Стр);
	КонецЦикла;
	
	ДокЗаявка.Записать();
	ЗаявкаНаАкцию = ДокЗаявка.Ссылка;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЗаявку(Команда)
	Кому = "reklama01@vkusvill.ru";	
	
	Если ЗначениеЗаполнено(ЗаявкаНаАкцию)= Ложь Тогда	
		
		ШапкаПисьма = " Акция с &ДатаНачала по &ДатаОкончания. Тип акции ""&ТипАкции"". Тип скидки ""&ТипСкидки"".<BR>";
		ШапкаПисьма = СтрЗаменить(ШапкаПисьма,"&ДатаНачала",Формат(Объект.ДатаНачала,"ДФ=dd.MM.yyyy"));
		ШапкаПисьма = СтрЗаменить(ШапкаПисьма,"&ДатаОкончания",Формат(Объект.ДатаОкончания,"ДФ=dd.MM.yyyy"));
		ШапкаПисьма = СтрЗаменить(ШапкаПисьма,"&ТипАкции",Тип);
		ШапкаПисьма = СтрЗаменить(ШапкаПисьма,"&ТипСкидки",Объект.ТипСкидки);

		ТабЧасть = ИзменитьВидимостьТЧ();
		ТекстПисьма = ШапкаПисьма+"<table border=1> ";
		Если ТабЧасть = "ТоварыПроцент" Тогда 
			ТекстПисьма = ТекстПисьма + Символы.ПС + 
			"<tr>
			|<td> Номенклатура </td> <td> Процент скидки </td> <td> Название акции </td> <td> Комментарий на ценник </td>
			|<td> Старая цена </td> <td> Новая цена </td> <td> Комментарий </td>
			|</tr>" ;
			Для каждого Стр Из Объект.ТоварыПроцент Цикл					
				ТекстПисьма = ТекстПисьма + Символы.ПС + 
				"<tr>
				|<td>"+Стр.Номенклатура+"</td> <td>"+Стр.ПроцентСкидки+"</td> <td>"+Стр.НазваниеАкции+"</td> <td>"+Стр.КомментарийНаЦенник+"</td>
				|<td>"+Стр.СтараяЦена+"</td> <td>"+Стр.НоваяЦена+"</td> <td>"+Стр.Комментарий+"</td>
				|</tr>" ;						
			КонецЦикла;				
		ИначеЕсли ТабЧасть = "ТоварыПодарки" Тогда 
			ТекстПисьма = ТекстПисьма + Символы.ПС + 
			"<tr>
			|<td> Номенклатура </td> <td> При сумму чека </td> <td> Можно подарить штук </td>  <td> Комментарий </td>
			|</tr>" ;
			Для каждого Стр Из Объект.ТоварыПодарки Цикл					
				ТекстПисьма = ТекстПисьма + Символы.ПС + 
				"<tr>
				|<td>"+Стр.Номенклатура+"</td> <td>"+Стр.ПриСуммеЧека+"</td> <td>"+Стр.МожноПодаритьШтук+"</td> <td>"+Стр.Комментарий+"</td>
				|</tr>" ;						
			КонецЦикла;				
		ИначеЕсли ТабЧасть = "ТоварыПриПокупкеШтук" Тогда 
			ТекстПисьма = ТекстПисьма + Символы.ПС + 
			"<tr>
			|<td> Номенклатура </td> <td> При покупке штук </td> <td> Установить цену </td> <td> Название акции </td><td> Комментарий на ценник </td>
			|<td> Старая цена </td> <td> Новая цена </td> <td> Комментарий </td>
			|</tr>" ;
			Для каждого Стр Из Объект.ТоварыПриПокупкеШтук Цикл					
				ТекстПисьма = ТекстПисьма + Символы.ПС + 
				"<tr>
				|<td>"+Стр.Номенклатура+"</td> <td>"+Стр.ПриПокупкеШтук+"</td> <td>"+Стр.УстановитьЦену+"</td> <td>"+Стр.НазваниеАкции+"</td> <td>"+Стр.КомментарийНаЦенник+"</td>
				|<td>"+Стр.СтараяЦена+"</td> <td>"+Стр.НоваяЦена+"</td> <td>"+Стр.Комментарий+"</td>
				|</tr>" ;						
			КонецЦикла;				
		КонецЕсли;
		 

		ТекстПисьма = ТекстПисьма + "</table>" ;
		ОтправитьПисьмо("Создана заявки на акцию.", "Создана заявки на акцию.",ТекстПисьма,Кому);	
	КонецЕсли;
	ЗаписатьЗаявкуНаСервере(ЗаявкаНаАкцию,Тип,ТабТовары);
	
КонецПроцедуры

&НаСервере
Функция  ЗаявкаНаАкциюПриИзмененииНаСервере(ЗаявкаНаАкцию)
	
	Если ЗначениеЗаполнено(ЗаявкаНаАкцию) Тогда 
		ЗаполнитьЗначенияСвойств(Объект,ЗаявкаНаАкцию,,"Магазины,ТоварыПроцент,ТоварыПодарки,ТоварыПриПокупкеШтук");
		
		Тип = ЗаявкаНаАкцию.Тип;
		Товары = ЗаявкаНаАкцию.Товары.Получить();
		
		//Запрос = Новый Запрос;
		//Запрос.Текст = 
		//"ВЫБРАТЬ
		//|	ЗаявкаНаАкциюМагазины.Ссылка,
		//|	ЗаявкаНаАкциюМагазины.НомерСтроки,
		//|	ЗаявкаНаАкциюМагазины.СтруктурнаяЕдиница
		//|ИЗ
		//|	Документ.ЗаявкаНаАкцию.Магазины КАК ЗаявкаНаАкциюМагазины
		//|ГДЕ
		//|	ЗаявкаНаАкциюМагазины.Ссылка = &Ссылка";
		//
		//Запрос.УстановитьПараметр("Ссылка", ЗаявкаНаАкцию);
		//
		//РезультатЗапроса = Запрос.Выполнить();
		//
		//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		//
		//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//	НовСтр = Объект.Магазины.Добавить();	
		//	НовСтр.СтруктурнаяЕдиница = ВыборкаДетальныеЗаписи.СтруктурнаяЕдиница;
		//КонецЦикла;		  
		
			Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявкаНаАкциюТоварыПроцент.Ссылка,
		|	ЗаявкаНаАкциюТоварыПроцент.НомерСтроки,
		|	ЗаявкаНаАкциюТоварыПроцент.Номенклатура,
		|	ЗаявкаНаАкциюТоварыПроцент.ПроцентСкидки,
		|	ЗаявкаНаАкциюТоварыПроцент.НазваниеАкции,
		|	ЗаявкаНаАкциюТоварыПроцент.КомментарийНаЦенник,
		|	ЗаявкаНаАкциюТоварыПроцент.СтараяЦена,
		|	ЗаявкаНаАкциюТоварыПроцент.НоваяЦена,
		|	ЗаявкаНаАкциюТоварыПроцент.Комментарий
		|ИЗ
		|	Документ.ЗаявкаНаАкцию.ТоварыПроцент КАК ЗаявкаНаАкциюТоварыПроцент
		|ГДЕ
		|	ЗаявкаНаАкциюТоварыПроцент.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаявкаНаАкциюТоварыПодарки.Ссылка,
		|	ЗаявкаНаАкциюТоварыПодарки.НомерСтроки,
		|	ЗаявкаНаАкциюТоварыПодарки.Номенклатура,
		|	ЗаявкаНаАкциюТоварыПодарки.ПриСуммеЧека,
		|	ЗаявкаНаАкциюТоварыПодарки.МожноПодаритьШтук,
		|	ЗаявкаНаАкциюТоварыПодарки.Комментарий
		|ИЗ
		|	Документ.ЗаявкаНаАкцию.ТоварыПодарки КАК ЗаявкаНаАкциюТоварыПодарки
		|ГДЕ
		|	ЗаявкаНаАкциюТоварыПодарки.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаявкаНаАкциюТоварыПриПокупкеШтук.Ссылка,
		|	ЗаявкаНаАкциюТоварыПриПокупкеШтук.НомерСтроки,
		|	ЗаявкаНаАкциюТоварыПриПокупкеШтук.Номенклатура,
		|	ЗаявкаНаАкциюТоварыПриПокупкеШтук.ПриПокупкеШтук,
		|	ЗаявкаНаАкциюТоварыПриПокупкеШтук.УстановитьЦену,
		|	ЗаявкаНаАкциюТоварыПриПокупкеШтук.НазваниеАкции,
		|	ЗаявкаНаАкциюТоварыПриПокупкеШтук.КомментарийНаЦенник,
		|	ЗаявкаНаАкциюТоварыПриПокупкеШтук.СтараяЦена,
		|	ЗаявкаНаАкциюТоварыПриПокупкеШтук.НоваяЦена,
		|	ЗаявкаНаАкциюТоварыПриПокупкеШтук.Комментарий
		|ИЗ
		|	Документ.ЗаявкаНаАкцию.ТоварыПриПокупкеШтук КАК ЗаявкаНаАкциюТоварыПриПокупкеШтук
		|ГДЕ
		|	ЗаявкаНаАкциюТоварыПриПокупкеШтук.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаявкаНаАкциюМагазины.Ссылка,
		|	ЗаявкаНаАкциюМагазины.НомерСтроки,
		|	ЗаявкаНаАкциюМагазины.СтруктурнаяЕдиница
		|ИЗ
		|	Документ.ЗаявкаНаАкцию.Магазины КАК ЗаявкаНаАкциюМагазины
		|ГДЕ
		|	ЗаявкаНаАкциюМагазины.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", ЗаявкаНаАкцию);
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		Выборка = РезультатЗапроса[0].Выбрать();		
		Пока Выборка.Следующий() Цикл
			НовСтр = Объект.ТоварыПроцент.Добавить();	
			ЗаполнитьЗначенияСвойств(НовСтр,Выборка);
		КонецЦикла;	
		
		Выборка = РезультатЗапроса[1].Выбрать();		
		Пока Выборка.Следующий() Цикл
			НовСтр = Объект.ТоварыПодарки.Добавить();	
			ЗаполнитьЗначенияСвойств(НовСтр,Выборка);
		КонецЦикла;	
		
		Выборка = РезультатЗапроса[2].Выбрать();		
		Пока Выборка.Следующий() Цикл
			НовСтр = Объект.ТоварыПриПокупкеШтук.Добавить();	
			ЗаполнитьЗначенияСвойств(НовСтр,Выборка);
		КонецЦикла;	
		
		Выборка = РезультатЗапроса[3].Выбрать();		
		Пока Выборка.Следующий() Цикл
			НовСтр = Объект.Магазины.Добавить();	
			ЗаполнитьЗначенияСвойств(НовСтр,Выборка);
		КонецЦикла;	

	Иначе
		Товары = "";	
	КонецЕсли;
	
	Возврат Товары;			
КонецФункции

&НаКлиенте
Процедура ЗаявкаНаАкциюПриИзменении(Элемент)
	
ТабТовары =	ЗаявкаНаАкциюПриИзмененииНаСервере(ЗаявкаНаАкцию);

КонецПроцедуры

&НаКлиенте
Процедура ЗаявкаНаАкциюНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	
	Отборы = Новый Структура;
	Отборы.Вставить("ЗаявкаЗакрыта", Ложь);	
	
	ПараметрыФормы.Вставить("Отбор", Отборы);
	
	Рез = ОткрытьФормуМодально("Документ.ЗаявкаНаАкцию.Форма.ФормаВыбора", ПараметрыФормы, ЭтаФорма.ЗаявкаНаАкцию);
	ЗаявкаНаАкцию = Рез;
	ТабТовары =	ЗаявкаНаАкциюПриИзмененииНаСервере(ЗаявкаНаАкцию);
	
	ИзменитьВидимостьТЧ();
	НастроитьВидимость()
КонецПроцедуры

&НаСервере
Процедура ОтменитьЗаявкуНаСервере(Рез)
	
	ДокЗаявка = ЗаявкаНаАкцию.ПолучитьОбъект();
	ДокЗаявка.ЗаявкаЗакрыта = Истина;
	ДокЗаявка.КомментарийПоАкции = Рез;
	ДокЗаявка.ОтказПоЗаявке = Истина;
	ДокЗаявка.Записать();
	ЗаявкаНаАкцию = Документы.ЗаявкаНаАкцию.ПустаяСсылка();

КонецПроцедуры

&НаСервере
Функция ПолучитьемайлПоПользователю(ЗаявкаНаАкцию)
	
	ПолучательАдрес = "";
	Если ЗначениеЗаполнено(ЗаявкаНаАкцию.Ответственный) Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Представление КАК ЕМайл
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &Объект
		|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
		|	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица)";
		
		Запрос.УстановитьПараметр("Объект", ЗаявкаНаАкцию.Ответственный.Физлицо);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если  ВыборкаДетальныеЗаписи.Следующий() Тогда 
			ПолучательАдрес = ВыборкаДетальныеЗаписи.ЕМайл;
		КонецЕсли;
	КонецЕсли;

	Возврат  ПолучательАдрес;
КонецФункции

&НаКлиенте
Процедура ОтменитьЗаявку(Команда)
	Кому = ПолучитьемайлПоПользователю(ЗаявкаНаАкцию);
	
	Если ЗначениеЗаполнено(ЗаявкаНаАкцию) Тогда 
		Рез = ОткрытьФормуМодально("Обработка.УстановкаАкцийПоНоменклатуре.Форма.ПричинаОтказа");	
		ОтменитьЗаявкуНаСервере(Рез);
		
		ШапкаПисьма = " Акция с &ДатаНачала по &ДатаОкончания. Тип акции ""&ТипАкции"". Тип скидки ""&ТипСкидки"".<BR>";
		ШапкаПисьма = СтрЗаменить(ШапкаПисьма,"&ДатаНачала",Формат(Объект.ДатаНачала,"ДФ=dd.MM.yyyy"));
		ШапкаПисьма = СтрЗаменить(ШапкаПисьма,"&ДатаОкончания",Формат(Объект.ДатаОкончания,"ДФ=dd.MM.yyyy"));
		ШапкаПисьма = СтрЗаменить(ШапкаПисьма,"&ТипАкции",Тип);
		ШапкаПисьма = СтрЗаменить(ШапкаПисьма,"&ТипСкидки",Объект.ТипСкидки);

		ТабЧасть = ИзменитьВидимостьТЧ();
		ТекстПисьма = ШапкаПисьма+"<table border=1> ";
		Если ТабЧасть = "ТоварыПроцент" Тогда 
			ТекстПисьма = ТекстПисьма + Символы.ПС + 
			"<tr>
			|<td> Номенклатура </td> <td> Процент скидки </td> <td> Название акции </td> <td> Комментарий на ценник </td>
			|<td> Старая цена </td> <td> Новая цена </td> <td> Комментарий </td>
			|</tr>" ;
			Для каждого Стр Из Объект.ТоварыПроцент Цикл					
				ТекстПисьма = ТекстПисьма + Символы.ПС + 
				"<tr>
				|<td>"+Стр.Номенклатура+"</td> <td>"+Стр.ПроцентСкидки+"</td> <td>"+Стр.НазваниеАкции+"</td> <td>"+Стр.КомментарийНаЦенник+"</td>
				|<td>"+Стр.СтараяЦена+"</td> <td>"+Стр.НоваяЦена+"</td> <td>"+Стр.Комментарий+"</td>
				|</tr>" ;						
			КонецЦикла;				
		ИначеЕсли ТабЧасть = "ТоварыПодарки" Тогда 
			ТекстПисьма = ТекстПисьма + Символы.ПС + 
			"<tr>
			|<td> Номенклатура </td> <td> При сумму чека </td> <td> Можно подарить штук </td>  <td> Комментарий </td>
			|</tr>" ;
			Для каждого Стр Из Объект.ТоварыПодарки Цикл					
				ТекстПисьма = ТекстПисьма + Символы.ПС + 
				"<tr>
				|<td>"+Стр.Номенклатура+"</td> <td>"+Стр.ПриСуммеЧека+"</td> <td>"+Стр.МожноПодаритьШтук+"</td> <td>"+Стр.Комментарий+"</td>
				|</tr>" ;						
			КонецЦикла;				
		ИначеЕсли ТабЧасть = "ТоварыПриПокупкеШтук" Тогда 
			ТекстПисьма = ТекстПисьма + Символы.ПС + 
			"<tr>
			|<td> Номенклатура </td> <td> При покупке штук </td> <td> Установить цену </td> <td> Название акции </td><td> Комментарий на ценник </td>
			|<td> Старая цена </td> <td> Новая цена </td> <td> Комментарий </td>
			|</tr>" ;
			Для каждого Стр Из Объект.ТоварыПриПокупкеШтук Цикл					
				ТекстПисьма = ТекстПисьма + Символы.ПС + 
				"<tr>
				|<td>"+Стр.Номенклатура+"</td> <td>"+Стр.ПриПокупкеШтук+"</td> <td>"+Стр.УстановитьЦену+"</td> <td>"+Стр.НазваниеАкции+"</td> <td>"+Стр.КомментарийНаЦенник+"</td>
				|<td>"+Стр.СтараяЦена+"</td> <td>"+Стр.НоваяЦена+"</td> <td>"+Стр.Комментарий+"</td>
				|</tr>" ;						
			КонецЦикла;				
		КонецЕсли;

		
		ТекстПисьма = ТекстПисьма + "</table>" ;
		
		ОтправитьПисьмо("Отказ заявки на акцию.", "Отказ заявки на акцию.",ТекстПисьма,Кому);
	КонецЕсли;
	
	Объект.ТипСкидки = Неопределено;
	Объект.ДатаНачала = Неопределено;
	Объект.ДатаОкончания = Неопределено;
КонецПроцедуры

Процедура ОтправитьПисьмо(Тема, Текст,ТаблицаПисьма,Кому);
	
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();	
	
	Письмо = Новый ИнтернетПочтовоеСообщение;
	Письмо.Тема 			= Тема;
	Письмо.Отправитель 		= УчетнаяЗапись.Логин;
	Письмо.ИмяОтправителя 	= УчетнаяЗапись.Логин;
	//+++АК bara 17.11.17	16448.03
	Если тип("Строка") = ТипЗнч(Кому) Тогда 
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = Кому;
	ИначеЕсли  тип("Массив") = ТипЗнч(Кому) Тогда 
		Для каждого Стр Из Кому Цикл
			Получатель = Письмо.Получатели.Добавить();
			Получатель.Адрес = Стр;
		КонецЦикла; 
	КонецЕсли;
	//---
	ТекстПисьма = Письмо.Тексты.Добавить();
	
	ТекстПисьма.ТипТекста 	= ТипТекстаПочтовогоСообщения.HTML;	
	ТекстПисьма.Текст = "<HTML><BODY>" + Текст + ТаблицаПисьма+"</BODY></HTML>";
	
	Почта = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Почта.Подключиться(Профиль);	
	Почта.Послать(Письмо);
	Почта.Отключиться();
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ЗагрузитьИзXLSНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура ЗагрузитьИзXLS(Команда)
	
	ЗагрузитьИзXLSНаСервере();
	Элементы.ТабТовары.Видимость = Истина;
	Элементы.СохранитьДанные.Видимость = Истина;
	Элементы.Отменить.Видимость = Истина;
	Элементы.ОчиститьТабДок.Видимость = Истина;

	ВидимостьТабДок = Истина;
	
	ЭтаФорма.Элементы.ТоварыПодарки.Видимость = Ложь;
	ЭтаФорма.Элементы.ТоварыПриПокупкеШтук.Видимость = Ложь;
	ЭтаФорма.Элементы.ТоварыПроцент.Видимость = Ложь;		
	
КонецПроцедуры


&НаКлиенте
Процедура СохранитьДанные(Команда)

	Элементы.ТабТовары.Видимость = Ложь;
	Элементы.СохранитьДанные.Видимость = Ложь;
	Элементы.Отменить.Видимость = Ложь;
	Элементы.ОчиститьТабДок.Видимость = Ложь;
	
	ВидимостьТабДок = Ложь;
	ИзменитьВидимостьТЧ();
	
	Режим = РежимДиалогаВопрос.ДаНет;
	Ответ = Вопрос("Очистить табличные части?", Режим, 0);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Объект.ТоварыПроцент.Очистить();
		Объект.ТоварыПодарки.Очистить();
		Объект.ТоварыПриПокупкеШтук.Очистить();
	КонецЕсли;
	
	СохранитьДанныеНаСервере();
КонецПроцедуры


&НаСервере
Процедура СохранитьДанныеНаСервере()
	
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	НоменклатураСпр.Ссылка,
	               |	НоменклатураСпр.Наименование
	               |ИЗ
	               |	Справочник.Номенклатура КАК НоменклатураСпр
	               |ГДЕ
	               |	НоменклатураСпр.ЭтоГруппа = ЛОЖЬ";
				   
	Результаты = Запрос.Выполнить();
	ТабКеш = Результаты.Выгрузить();
	
	Если Тип = "Акция" Тогда
		Если Объект.ТипСкидки = Перечисления.ТипыАкцийПоТоварам.СкидкаПоБонуснойКарте Тогда
			Для н = 2 По ТабТовары.ВысотаТаблицы Цикл
				БылаНайденаНоменклатура = Ложь;
				Для Каждого СтрокаКеш Из ТабКеш Цикл
					Если СокрЛП(НРег(СтрокаКеш.Наименование)) = СокрЛП(НРег(ТабТовары.Область(н, 1, н, 1).Текст)) Тогда
						НоменклатураСсылка = СтрокаКеш.Ссылка;
						НазваниеАкции = ТабТовары.Область(н, 3, н, 3).Текст;
						КомментарийНаЦенник = ТабТовары.Область(н, 4, н, 4).Текст;
						Комментарий = ТабТовары.Область(н, 7, н, 7).Текст;												
						ПроцентСкидки = СтрЗаменить(ТабТовары.Область(н, 2, н, 2).Текст, " ", "");
						ПроцентСкидки = СтрЗаменить(ПроцентСкидки, ",", ".");
						ПроцентСкидки = СтрЗаменить(ПроцентСкидки, "%", "");
						Попытка
							Процент = Число(ПроцентСкидки);
							ЦенаСтарая = Число(ТабТовары.Область(н, 5, н, 5).Текст);
							ЦенаНовая =  Число(ТабТовары.Область(н, 6, н, 6).Текст);			
						Исключение
							Сообщить("В строке "+н+", не удалось преобразовать число");
						КонецПопытки;	
						БылаНайденаНоменклатура = Истина;
						Прервать;
					КонецЕсли;	
				КонецЦикла;
				НовСтр = Объект.ТоварыПроцент.Добавить();
				НовСтр.Номенклатура = НоменклатураСсылка;
				НовСтр.ПроцентСкидки = ПроцентСкидки;
				НовСтр.Комментарий = Комментарий;
				НовСтр.СтараяЦена = ЦенаСтарая;
				НовСтр.НоваяЦена = ЦенаНовая;
				НовСтр.НазваниеАкции = НазваниеАкции;
				НовСтр.КомментарийНаЦенник = КомментарийНаЦенник;

				Если Не БылаНайденаНоменклатура Тогда
					Сообщить("В строке "+н+", номенклатура не найдена по наименованию");
				КонецЕсли;	
			КонецЦикла;
		ИначеЕсли Объект.ТипСкидки = Перечисления.ТипыАкцийПоТоварам.ПриПокупкеНесколькихШтук Тогда
			Для н = 2 По ТабТовары.ВысотаТаблицы Цикл
			
				БылаНайденаНоменклатура = Ложь;
				Для Каждого СтрокаКеш Из ТабКеш Цикл
					Если СокрЛП(НРег(СтрокаКеш.Наименование)) = СокрЛП(НРег(ТабТовары.Область(н, 1, н, 1).Текст)) Тогда
						НоменклатураСсылка = СтрокаКеш.Ссылка;
						НазваниеАкции = ТабТовары.Область(н, 4, н, 4).Текст;
						КомментарийНаЦенник = ТабТовары.Область(н, 5, н, 5).Текст;
						Попытка
							УстановитьЦену = ТабТовары.Область(н, 3, н, 3).Текст;
						Исключение
							Сообщить("В строке "+н+", не удалось преобразовать цену к числу");
						КонецПопытки;
						Комментарий = ТабТовары.Область(н, 8, н, 8).Текст;
						
						КолвоШтук = СтрЗаменить(ТабТовары.Область(н, 2, н, 2).Текст, " ", "");
						КолвоШтук = СтрЗаменить(КолвоШтук, ",", ".");
						Попытка
							КолвоШтук = Число(КолвоШтук);
						Исключение
							Сообщить("В строке "+н+", не удалось преобразовать указанное количество штук к числу");
						КонецПопытки;
						
						НоваяЦена = СтрЗаменить(ТабТовары.Область(н, 7, н, 7).Текст, " ", "");
						НоваяЦена = СтрЗаменить(НоваяЦена, ",", ".");
						СтараяЦена =  СтрЗаменить(ТабТовары.Область(н, 6, н, 6).Текст, " ", "");
						СтараяЦена = СтрЗаменить(СтараяЦена, ",", ".");
						
						Попытка
							НоваяЦена = Число(НоваяЦена);
							СтараяЦена = Число(СтараяЦена);							
						Исключение
							Сообщить("В строке "+н+", не удалось преобразовать  цену к числу");
						КонецПопытки;
						БылаНайденаНоменклатура = Истина;
						Прервать;
					КонецЕсли;	
				КонецЦикла;
				НовСтр = Объект.ТоварыПриПокупкеШтук.Добавить();
				НовСтр.Номенклатура = НоменклатураСсылка;
				НовСтр.ПриПокупкеШтук = КолвоШтук;
				НовСтр.УстановитьЦену = УстановитьЦену;				
				НовСтр.Комментарий = Комментарий;
				НовСтр.СтараяЦена = СтараяЦена;
				НовСтр.НоваяЦена = НоваяЦена;
				НовСтр.НазваниеАкции = НазваниеАкции;
				НовСтр.КомментарийНаЦенник = КомментарийНаЦенник;
				Если Не БылаНайденаНоменклатура Тогда
					Сообщить("В строке "+н+", номенклатура не найдена по наименованию");
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;
	Иначе
		Для н = 2 По ТабТовары.ВысотаТаблицы Цикл
			БылаНайденаНоменклатура = Ложь;
			Для Каждого СтрокаКеш Из ТабКеш Цикл
				Если СокрЛП(НРег(СтрокаКеш.Наименование)) = СокрЛП(НРег(ТабТовары.Область(н, 1, н, 1).Текст)) Тогда
					НоменклатураСсылка = СтрокаКеш.Ссылка;
					Комментарий = ТабТовары.Область(н, 4, н, 4).Текст;
					
					СуммаЧека = СтрЗаменить(ТабТовары.Область(н, 2, н, 2).Текст, " ", "");
					СуммаЧека = СтрЗаменить(СуммаЧека, ",", ".");
					Попытка
						СуммаЧека = Число(СуммаЧека);
					Исключение
						Сообщить("В строке "+н+", не удалось преобразовать сумму чека к числу");
					КонецПопытки;
					
					КолвоДарить = СтрЗаменить(ТабТовары.Область(н, 3, н, 3).Текст, " ", "");
					КолвоДарить = СтрЗаменить(КолвоДарить, ",", ".");
					Попытка
						КолвоДарить = Число(КолвоДарить);
					Исключение
						Сообщить("В строке "+н+", не удалось преобразовать количество в подарок к числу");
					КонецПопытки;
					БылаНайденаНоменклатура = Истина;
					Прервать;
				КонецЕсли;	
			КонецЦикла;
			
			НовСтр = Объект.ТоварыПодарки.Добавить();
			НовСтр.Номенклатура = НоменклатураСсылка;
			НовСтр.ПриСуммеЧека = СуммаЧека;
			НовСтр.МожноПодаритьШтук = КолвоДарить;				
			НовСтр.Комментарий = Комментарий;
		
			Если Не БылаНайденаНоменклатура Тогда
				Сообщить("В строке "+н+", номенклатура не найдена по наименованию");
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;	
	
	
КонецПроцедуры


&НаКлиенте
Процедура Отменить(Команда)
	
	Элементы.ТабТовары.Видимость = Ложь;
	Элементы.СохранитьДанные.Видимость = Ложь;
	Элементы.Отменить.Видимость = Ложь;
	Элементы.ОчиститьТабДок.Видимость = Ложь;
	
	ВидимостьТабДок = Ложь;
	ИзменитьВидимостьТЧ();
	
	ОтменитьНаСервере();
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ОтменитьНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура ОчиститьТабДок(Команда)
	ТабТовары.Очистить();
	ТабТовары.Вывести(ПолучитьМакетПоТипу());
КонецПроцедуры
//---AK BARA #16448
