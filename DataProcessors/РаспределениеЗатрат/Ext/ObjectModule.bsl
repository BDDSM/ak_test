
Перем _ГоловныеПодразделения;

//
//
Процедура ВыполнитьРаспределение(Статья = Неопределено) Экспорт
	
	Сообщить("Начало: " + ПолныеПрава.ТекущаяДатаСервера());
	
	РазделУчёта = ?(МСФО, "МСФО", "Основной");
	ПериодРаспределения = ПолучитьПериодРаспределения();
	
	Счета = ПолучитьСписокСчетовЗатрат();
	Для Каждого Счёт Из Счета Цикл
		
		Отбор = Новый Массив();
		Отбор.Добавить(Счёт);
		Статьи = ПолучитьСписокСтатейДляЗакрытия(Отбор);
		
		//
		Если ЗначениеЗаполнено(Статья) Тогда
			Статьи = Новый Массив;
			Статьи.Добавить(Статья);
		КонецЕсли;	
			
		
		
		
		Если Статьи.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого _Статья Из Статьи Цикл
			УдалитьДокументыПоСтатьеДоходовРасходов(Счёт, _Статья);
		КонецЦикла;
		
		НаборЗаписей = РегистрыБухгалтерии.Финансовый.СоздатьНаборЗаписей().Выгрузить();
		Распределить44ыйСчёт(ПериодРаспределения, Счёт, Статьи, РазделУчёта, НаборЗаписей, "");
		НаборЗаписей.Индексы.Добавить("СубконтоКт2"); // статьи доходов и расходов
		
		Для Каждого _Статья Из Статьи Цикл
			СоздатьДокументыПоСтатьеДоходовРасходов(Счёт, _Статья, НаборЗаписей);
		КонецЦикла;
		
	КонецЦикла;
	
	Сообщить("Конец: " + ПолныеПрава.ТекущаяДатаСервера());
	
КонецПроцедуры

//
//
Процедура УдалитьДвиженияЗаПериод(СтатьяДР) Экспорт
	
	//
	Счета = ПолучитьСписокСчетовЗатрат();
	
	//
	СписокДокументов = ПолучитьСписокДокументовЗаПериод(Счета, СтатьяДР);
	УдалитьДокументыПоСписку(СписокДокументов);
	
КонецПроцедуры

//
//
Функция ПолучитьПериодРаспределения()
	
	Если ЗначениеЗаполнено(Период) Тогда
		Результат = КонецМесяца(Период);
	Иначе
		Результат = КонецМесяца(ДобавитьМесяц(ПолныеПрава.ТекущаяДатаСервера(), -1));
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

//
//
Функция ПолучитьСписокСчетовЗатрат()
	
	Результат = Новый Массив();
	
	Если СчётЗакрытия = ПланыСчетов.Финансовый.ЗатратыДляРаспределения Тогда
		Результат.Добавить(ПланыСчетов.Финансовый.ЗатратыТоварныеДляРаспределения); // 44.1
		Результат.Добавить(ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения); // 44.2
		Результат.Добавить(ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения); // 44.3
	Иначе
		Результат.Добавить(СчётЗакрытия);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

//
//
Функция ПолучитьСписокГоловныхПодразделений()
	
	Если _ГоловныеПодразделения <> Неопределено Тогда
		Возврат _ГоловныеПодразделения;
	КонецЕсли;
	
	ИзбенкаОбщий   = Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_ЦФО", 10032);
	ВкусвиллОбщий  = Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_ЦФО", 10030);
	ВсеОрганизации = Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_ЦФО", 10031);
	
	ГоловныеПодразделения = Новый Массив();
	ГоловныеПодразделения.Добавить(ВсеОрганизации);
	ГоловныеПодразделения.Добавить(ИзбенкаОбщий);
	ГоловныеПодразделения.Добавить(ВкусвиллОбщий);
	
	Возврат ГоловныеПодразделения;
	
КонецФункции

//
//
Функция ПолучитьСписокСтатейДляЗакрытия(СчетаЗатрат)
	
	Результат = Новый Массив();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МСФО", МСФО);
	Запрос.УстановитьПараметр("СчетаЗатрат", СчетаЗатрат);
	Запрос.УстановитьПараметр("КонецПериода", Новый Граница(ПолучитьПериодРаспределения(), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ГоловныеПодразделения", ПолучитьСписокГоловныхПодразделений());
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Остатки.СтатьяДоходаРасхода КАК СДР
	|ИЗ
	|	(ВЫБРАТЬ
	|		Организация             КАК Организация,
	|		Субконто1               КАК ГоловноеПодразделение,
	|		Субконто2               КАК СтатьяДоходаРасхода,
	|		Субконто3               КАК ЦФО,
	|		СУММА(СуммаОстаток)     КАК СуммаРаспределения,
	|		СУММА(СуммаМСФООстаток) КАК СуммаРаспределенияМСФО
	|	ИЗ
	|		РегистрБухгалтерии.Финансовый.Остатки(&КонецПериода, Счет В (&СчетаЗатрат),,
	//+++АК MIND 2017.12.20 нужно по всем распределение делать
	//|			ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы).Ссылка В (&ГоловныеПодразделения))
	|		)
	|	ГДЕ
	|		НЕ Субконто1 ЕСТЬ NULL 
	|		И ВЫРАЗИТЬ(Субконто2 КАК Справочник.СтатьиДоходовРасходов) <> ЗНАЧЕНИЕ(Справочник.СтатьиДоходовРасходов.ПустаяСсылка)
	|	СГРУППИРОВАТЬ ПО
	|		Организация,
	|		Субконто1,
	|		Субконто2,
	|		Субконто3
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Организация,
	|		Субконто1,
	|		Субконто2,
	|		Субконто3,
	|		СУММА(СуммаОстаток),
	|		СУММА(СуммаМСФООстаток)
	|	ИЗ
	|		РегистрБухгалтерии.Финансовый.Остатки(&КонецПериода, Счет В (&СчетаЗатрат),,)
	|	ГДЕ
	|		ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы).Ссылка <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|		И
	|		(ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы).ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|		ИЛИ
	|		ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы).БратьВРаспределениеЗатрат = ИСТИНА)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Организация,
	|		Субконто1,
	|		Субконто2,
	|		Субконто3) КАК Остатки
	|ГДЕ
	|	(ВЫБОР КОГДА &МСФО ТОГДА Остатки.СуммаРаспределенияМСФО <> 0 ИНАЧЕ Остатки.СуммаРаспределения <> 0 КОНЕЦ)
	|;";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат.Добавить(Выборка.СДР);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

//
//
Функция ПолучитьСписокДокументовЗаПериод(Счета, СтатьяДР = Неопределено)
	
	//
	Результат = Новый Массив();
	
	//
	ТЗ = "ВЫБРАТЬ
	     |	Таблица.Ссылка
	     |ИЗ
	     |	Документ.РаспределениеЗатрат КАК Таблица
	     |ГДЕ
	     |	Таблица.Дата = &Дата
	     |	И Таблица.МСФО = &МСФО
	     |	И Таблица.СчетЗатрат В(&СчетЗатрат)
	     |{ГДЕ
	     |	Таблица.СтатьяДоходовРасходов.*}";
	
	//
	ПЗ = Новый ПостроительЗапроса;
	ПЗ.Текст = ТЗ;
	
	//
	ПЗ.Параметры.Вставить("Дата", ПолучитьПериодРаспределения()); 
	ПЗ.Параметры.Вставить("МСФО", МСФО);
	ПЗ.Параметры.Вставить("СчетЗатрат", Счета);
	
	//
	Если ЗначениеЗаполнено(СтатьяДР) Тогда
		
		//
		ЭлементОтбора = ПЗ.Отбор.Добавить("СтатьяДоходовРасходов");
		ЭлементОтбора.Установить(СтатьяДР);
		
	КонецЕсли;		
		
	//
	ПЗ.Выполнить();
	
	//
	Выборка = ПЗ.Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Результат.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	//
	Возврат Результат;
	
КонецФункции

//
//
Процедура УдалитьДокументыПоСписку(СписокДокументов)
	
	Для Каждого ДокументСсылка Из СписокДокументов Цикл
		
		ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
		Если ДокументОбъект = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДокументОбъект.ПометкаУдаления Тогда
			ДокументОбъект.Удалить();
		КонецЕсли;
		
		Если ДокументОбъект.Проведен Тогда
			ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			ДокументОбъект.Удалить();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//
//
Процедура Распределить44ыйСчёт(ПериодПроведения, СчётЗатрат, СтатьиДоходовРасходов, РазделУчёта, НаборЗаписей, Комментарий)
	
	Если РазделУчёта = "Основной" Тогда
		ИмяРесурса = "Сумма";
		ИмяОстатка = "СуммаРаспределения";
	ИначеЕсли РазделУчёта = "МСФО" Тогда
		ИмяРесурса = "СуммаМСФО";
		ИмяОстатка = "СуммаРаспределенияМСФО";
	Иначе
		ВызватьИсключение("Неизвестный раздел учёта: """ + РазделУчёта + """!");
	КонецЕсли;
	КодСубСчёта = Сред(СчётЗатрат.Код, Найти(СчётЗатрат.Код, ".") + 1);
	
	//+++AK susk
	//СчётСписанияЗатрат = ПланыСчетов.Финансовый.НайтиПоКоду("90." + КодСубСчёта);
	
	//44.5 должен распределяться на 90.3	
	Если СокрЛП(СчётЗатрат.Код) = "44.5" Тогда
		СчётСписанияЗатрат = ПланыСчетов.Финансовый.НайтиПоКоду("90.3");
	//+++АК sils 12.03.2018 ИП-00017960
	ИначеЕсли СокрЛП(СчётЗатрат.Код) = "X44" Тогда
		СчётСписанияЗатрат = ПланыСчетов.Финансовый.НайтиПоКоду("X90");
	//---АК
	Иначе
		СчётСписанияЗатрат = ПланыСчетов.Финансовый.НайтиПоКоду("90." + КодСубСчёта);
	КонецЕсли;
	//---AK susk   
	
	СодержаниеПроводки = "Распределены затраты" + ?(ПустаяСтрока(Комментарий), ".", ": ") + Комментарий;
	
	СписокСчетов90 = Новый СписокЗначений();
	СписокСчетов90.Добавить(ПланыСчетов.Финансовый.ЗатратыТорговыхТочек); // 90.3
	СписокСчетов90.Добавить(ПланыСчетов.Финансовый.ВыручкаТорговыхТочек); // 90.4
	
	ИзбенкаОбщий   = Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_ЦФО", 10032);
	ВкусвиллОбщий  = Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_ЦФО", 10030);
	ВсеОрганизации = Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_ЦФО", 10031);
	ГоловныеПодразделения = Новый СписокЗначений();
	ГоловныеПодразделения.Добавить(ВсеОрганизации);
	ГоловныеПодразделения.Добавить(ИзбенкаОбщий);
	ГоловныеПодразделения.Добавить(ВкусвиллОбщий);
	
	ТаблицаЭффективности = ВнешниеДанные.ПолучитьЭффективностьТорговыхТочек(ПериодПроведения);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНач"		, НачалоМесяца(ПериодПроведения));
	Запрос.УстановитьПараметр("ДатаКон"		, КонецМесяца(ПериодПроведения));
	Запрос.УстановитьПараметр("ДатаНачала"		, Новый Граница(НачалоМесяца(ПериодПроведения), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаОкончания"	, Новый Граница(КонецМесяца(ПериодПроведения), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаОкончанияГр"	, Новый Граница(КонецМесяца(ПериодПроведения), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ИзбенкаОбщий"	, ИзбенкаОбщий);
	Запрос.УстановитьПараметр("ВкусвиллОбщий"	, ВкусвиллОбщий);
	Запрос.УстановитьПараметр("Все"				, ВсеОрганизации);
	Запрос.УстановитьПараметр("СчетЗатрат"		, СчётЗатрат);
	Запрос.УстановитьПараметр("СписокСчетов"	, СписокСчетов90);
	Запрос.УстановитьПараметр("ТаблицаЭффективности", ТаблицаЭффективности);
	Запрос.УстановитьПараметр("ГоловныеПодразделения", ГоловныеПодразделения);
	Запрос.УстановитьПараметр("СтатьиДоходовРасходов", СтатьиДоходовРасходов);
	Запрос.УстановитьПараметр("ЦФОРазвитие", Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_tt", 10954));
	Запрос.УстановитьПараметр("ЭтоМСФО", РазделУчёта = "МСФО"); //+++АК MIND 2017.12.19 есть подозрение, что вообще надо без него, но страхуюсь, потому что работало и так распределение
	//+++АК sils 21.03.2018 ИП-00018102
	Орг_Тилси = Справочники.Организации.НайтиПоКоду("000000009");
	Запрос.УстановитьПараметр("Орг_Тилси" , Орг_Тилси);
	//---АК
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Т.ТорговаяТочка,
	|	Т.Дата,
	|	Т.Эффективность
	|ПОМЕСТИТЬ
	|	ТаблицаЭффективности
	|ИЗ
	|	&ТаблицаЭффективности КАК Т
	|ИНДЕКСИРОВАТЬ ПО
	|	Т.ТорговаяТочка;
	// ***************************************************
	// * Формирование базы распределения по листам учёта *
	// ***************************************************
	|ВЫБРАТЬ
	|	ЛУ.ТорговаяТочка,
	|	ЛУ.ЦФО,
	|	ВЫБОР
	|		КОГДА ЛУ.ЦФО.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат = 0
	|		  ИЛИ ЛУ.ЦФО.ГоловноеПодразделение ЕСТЬ NULL 
	|		ТОГДА 1
	|		ИНАЧЕ ЛУ.ЦФО.ГоловноеПодразделение.КоэффициентРаспределенияЗатрат
	|	КОНЕЦ КАК КоэффициентРаспределенияЗатрат,
	|	ВЫБОР
	|		КОГДА ЛУ.ТорговаяТочка.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	|		ТОГДА &ВкусвиллОбщий
	|		ИНАЧЕ &ИзбенкаОбщий
	|	КОНЕЦ КАК ГоловноеПодразделение,
	|	СУММА(ЕСТЬNULL(ЭФ.Эффективность, 0)) КАК Эффективность,
	|	КОЛИЧЕСТВО(ЛУ.Дата) КАК КоличествоСмен
	|ПОМЕСТИТЬ
	|	ТаблицаТорговыеТочки
	|ИЗ
	|	Документ.ЛистУчета КАК ЛУ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ТаблицаЭффективности КАК ЭФ
	|	ПО ЛУ.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	 И ЛУ.Проведен
	|	 И ЛУ.ТорговаяТочка = ЭФ.ТорговаяТочка
	|	 И НАЧАЛОПЕРИОДА(ЛУ.Дата, ДЕНЬ) = НАЧАЛОПЕРИОДА(ЭФ.Дата, ДЕНЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЛУ.ТорговаяТочка,
	|	ЛУ.ЦФО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ЛУ.ТорговаяТочка,
	|	ЛУ.ЦФО
	|;
	// *******************************
	// * Получение данных по выручке *
	// *******************************
	|ВЫБРАТЬ
	|	Субконто1 КАК ТорговаяТочка,
	|	Субконто3 КАК ЦФО,
	|	СУММА(СуммаОборотКт) - СУММА(СуммаОборотДт) КАК Выручка,
	|	ВЫБОР КОГДА Субконто3 = &ЦФОРазвитие ТОГДА СУММА(СуммаОборотКт) - СУММА(СуммаОборотДт) ИНАЧЕ 0 КОНЕЦ КАК ВыручкаГруппыРазвития
	|ПОМЕСТИТЬ
	|	ТаблицаВыручка
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор,
	|		Счет В (&СписокСчетов),,
	//+++АК sils 14.05.2018 ИП-00018466
	//|		ВЫРАЗИТЬ(Субконто2 КАК Справочник.СтатьиДоходовРасходов) = ЗНАЧЕНИЕ(Справочник.СтатьиДоходовРасходов.РозничнаяВыручка),,)
	|		ВЫРАЗИТЬ(Субконто2 КАК Справочник.СтатьиДоходовРасходов) = ЗНАЧЕНИЕ(Справочник.СтатьиДоходовРасходов.РозничнаяВыручка)
	|				И (Субконто1 ЕСТЬ NULL
	|					ИЛИ (ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы)) = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|					ИЛИ (ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы).ТипРозничнойТочки <> ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Перекресток)
	|					И ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы).ТипРозничнойТочки <> ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Пятерочка))),,)
	//---АК
	|ГДЕ
	|	Регистратор ССЫЛКА Документ.ЛистУчета
	|
	|СГРУППИРОВАТЬ ПО
	|	Субконто1,
	|	Субконто3
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1,
	|	Субконто3
	|;
	// *****************************************************
	// * Дополнение базы распределения драйвером "Выручка" *
	// *****************************************************
	|ВЫБРАТЬ
	|	Т0.ТорговаяТочка,
	|	Т0.ЦФО,
	|	Т0.ГоловноеПодразделение,
	|	Т0.КоэффициентРаспределенияЗатрат,
	|	Т0.Эффективность,
	|	Т0.КоличествоСмен,
	|	ЕСТЬNULL(Т1.Выручка, 0) КАК Выручка,
	|	ЕСТЬNULL(Т1.ВыручкаГруппыРазвития, 0) КАК ВыручкаГруппыРазвития
	|ПОМЕСТИТЬ
	|	БазаРаспределения
	|ИЗ
	|	ТаблицаТорговыеТочки КАК Т0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ТаблицаВыручка КАК Т1
	|	ПО Т0.ТорговаяТочка = Т1.ТорговаяТочка
	|	 И Т0.ЦФО = Т1.ЦФО
	|;
	|
	|УНИЧТОЖИТЬ ТаблицаЭффективности;
	|УНИЧТОЖИТЬ ТаблицаТорговыеТочки;
	|УНИЧТОЖИТЬ ТаблицаВыручка;
	|
	// *********************************************
	// * Вычисление итогов драйверов распределения *
	// *********************************************
	|ВЫБРАТЬ
	|	Т0.ТорговаяТочка,
	|	Т0.ЦФО,
	|	Т0.ГоловноеПодразделение,
	|	Т0.Эффективность * Т0.КоэффициентРаспределенияЗатрат КАК Эффективность,
	|	Т1.ЭффективностьИтог,
	|	Т2.ЭффективностьИтогПоГП,
	|	Т0.КоличествоСмен,
	|	Т1.КоличествоСменИтог,
	|	Т2.КоличествоСменИтогПоГП,
	|	Т0.Выручка,
	|	Т0.ВыручкаГруппыРазвития,
	|	Т1.ВыручкаИтог,
	|	Т1.ВыручкаГруппыРазвитияИтог,
	|	Т2.ВыручкаИтогПоГП,
	|	Т2.ВыручкаГруппыРазвитияИтогПоГП
	|ПОМЕСТИТЬ
	|	БазаРаспределенияПлюсИтоги
	|ИЗ
	|	БазаРаспределения КАК Т0,
	|	(ВЫБРАТЬ
	|		СУММА(Эффективность  * КоэффициентРаспределенияЗатрат) КАК ЭффективностьИтог,
	|		СУММА(КоличествоСмен * КоэффициентРаспределенияЗатрат) КАК КоличествоСменИтог,
	|		СУММА(Выручка) КАК ВыручкаИтог,
	|		СУММА(ВыручкаГруппыРазвития) КАК ВыручкаГруппыРазвитияИтог
	|	ИЗ
	|		БазаРаспределения) КАК Т1, // Итоги по драйверам распределения (все)
	|	(ВЫБРАТЬ
	|		ГоловноеПодразделение,
	|		СУММА(Эффективность  * КоэффициентРаспределенияЗатрат) КАК ЭффективностьИтогПоГП,
	|		СУММА(КоличествоСмен * КоэффициентРаспределенияЗатрат) КАК КоличествоСменИтогПоГП,
	|		СУММА(Выручка) КАК ВыручкаИтогПоГП,
	|		СУММА(ВыручкаГруппыРазвития) КАК ВыручкаГруппыРазвитияИтогПоГП
	|	ИЗ
	|		БазаРаспределения
	|	СГРУППИРОВАТЬ ПО
	|		ГоловноеПодразделение) КАК Т2 // Итоги по драйверам распределения в разрезе головных подразделений
	|ГДЕ
	|	Т0.ГоловноеПодразделение = Т2.ГоловноеПодразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Т0.ГоловноеПодразделение
	|;
	|
	|УНИЧТОЖИТЬ БазаРаспределения;
	|
	// ************************************
	// * Получение сумм для распределения *
	// ************************************
	|ВЫБРАТЬ
	|	Организация                         КАК Организация,
	|	Субконто1                           КАК ГоловноеПодразделение,
	|	Субконто2                           КАК СтатьяДоходаРасхода,
	|	Субконто3                           КАК ЦФО,
	|	Субконто2.СпособРаспределенияЗатрат КАК СпособРаспределения,
	|	Субконто2.БазаРаспределенияЗатрат   КАК БазаРаспределения,
	|	СУММА(СуммаКонечныйОстаток)         КАК СуммаРаспределения,
	|	СУММА(СуммаМСФОКонечныйОстаток)     КАК СуммаРаспределенияМСФО
	|ПОМЕСТИТЬ
	|	ТаблицаРаспределения
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.ОстаткиИОбороты(&ДатаНачала,
	|			&ДатаОкончанияГр,
	|			,
	|			,
	|			Счет = &СчетЗатрат,
	|			,
	|			ВЫБОР КОГДА &ЭтоМСФО = Истина ТОГДА ИСТИНА ИНАЧЕ ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы) В (&ГоловныеПодразделения) КОНЕЦ
	//+++АК sils 21.03.2018 ИП-00018102
	|				" + ?(Орг_Тилси = Справочники.Организации.ПустаяСсылка(), "", "И Организация <> &Орг_Тилси") + "
	//---АК
	|				И ВЫРАЗИТЬ(Субконто2 КАК Справочник.СтатьиДоходовРасходов) В (&СтатьиДоходовРасходов))
	|СГРУППИРОВАТЬ ПО
	|	Организация,
	|	Субконто1,
	|	Субконто2,
	|	Субконто3
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	// *************************************************************************
	// * Соединение базы и сумм распределения (основной результирующий запрос) *
	// *************************************************************************
	|ВЫБРАТЬ
	|	Т.Организация, // Измерение РБ Финансовый
	|	Т.ГП_90,
	|	Т.ГП_44, // 44 Субконто1
	|	Т.ЦФО_90, // 90 Субконто3
	|	Т.ЦФО_44, // 44 Субконто3
	|	Т.ТорговаяТочка, // 90 Субконто1
	|	Т.СтатьяДоходаРасхода, // 44 и 90 Субконто2
	|   Т.БазаРаспределения,
	|	Т.СпособРаспределения,
	|	Т.Эффективность, // Драйвер распределения по эффективности торговой точки
	|	Т.ЭффективностьИтог,
	|	Т.ЭффективностьИтогПоГП,
	|	Т.КоличествоСмен, // Драйвер распределения по количеству смен
	|	Т.КоличествоСменИтог,
	|	Т.КоличествоСменИтогПоГП,
	|	Т.Выручка, // Драйвер распределения по выручке торговой точки
	|	Т.ВыручкаИтог,
	|	Т.ВыручкаИтогПоГП,
	|	Т.ВыручкаГруппыРазвития, // Драйвер распределения по выручке торговых точек группы развития
	|	Т.ВыручкаГруппыРазвитияИтог,
	|	Т.ВыручкаГруппыРазвитияИтогПоГП,
	|	Т.СуммаРаспределения, // Сумма для распределения по основному виду учёта
	|	Т.СуммаРаспределенияМСФО // Сумма для распределения по МСФО
	|ИЗ
	|(ВЫБРАТЬ
	|	Т1.Организация, // Измерение РБ Финансовый
	|	Т0.ГоловноеПодразделение КАК ГП_90,
	|	Т1.ГоловноеПодразделение КАК ГП_44, // 44 Субконто1
	|	Т0.ЦФО КАК ЦФО_90, // 90 Субконто3
	|	Т1.ЦФО КАК ЦФО_44, // 44 Субконто3
	|	Т0.ТорговаяТочка, // 90 Субконто1
	|	Т1.СтатьяДоходаРасхода, // 44 и 90 Субконто2
	|   Т1.БазаРаспределения,
	|	Т1.СпособРаспределения,
	|	Т0.Эффективность, // Драйвер распределения по эффективности торговой точки
	|	Т0.ЭффективностьИтог,
	|	Т0.ЭффективностьИтогПоГП,
	|	Т0.КоличествоСмен, // Драйвер распределения по количеству смен
	|	Т0.КоличествоСменИтог,
	|	Т0.КоличествоСменИтогПоГП,
	|	Т0.Выручка, // Драйвер распределения по выручке торговой точки
	|	Т0.ВыручкаИтог,
	|	Т0.ВыручкаИтогПоГП,
	|	Т0.ВыручкаГруппыРазвития, // Драйвер распределения по выручке торговых точек группы развития
	|	Т0.ВыручкаГруппыРазвитияИтог,
	|	Т0.ВыручкаГруппыРазвитияИтогПоГП,
	|	Т1.СуммаРаспределения, // Сумма для распределения по основному виду учёта
	|	Т1.СуммаРаспределенияМСФО // Сумма для распределения по МСФО
	|ИЗ
	|	БазаРаспределенияПлюсИтоги КАК Т0,
	|	ТаблицаРаспределения       КАК Т1
	|ГДЕ
	|	Т1.ГоловноеПодразделение = &Все
	|	ИЛИ (ВЫБОР КОГДА &ЭтоМСФО = Истина ТОГДА ВЫРАЗИТЬ(Т1.ГоловноеПодразделение КАК Справочник.СтруктурныеЕдиницы).ТипСтруктурнойЕдиницы В (ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение), ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Склад))
	|			И НЕ Т1.ГоловноеПодразделение В (&ГоловныеПодразделения) ИНАЧЕ ЛОЖЬ КОНЕЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ // Типичная оптимизация ИЛИ (SCAN). Теперь оба объединяемых запроса будут использовать индексы (SEEK).
	|
	|ВЫБРАТЬ
	|	Т1.Организация, // Измерение РБ Финансовый
	|	Т0.ГоловноеПодразделение КАК ГП_90,
	|	Т1.ГоловноеПодразделение КАК ГП_44, // 44 Субконто1
	|	Т0.ЦФО КАК ЦФО_90, // 90 Субконто3
	|	Т1.ЦФО КАК ЦФО_44, // 44 Субконто3
	|	Т0.ТорговаяТочка, // 90 Субконто1
	|	Т1.СтатьяДоходаРасхода, // 44 и 90 Субконто2
	|   Т1.БазаРаспределения,
	|	Т1.СпособРаспределения,
	|	Т0.Эффективность, // Драйвер распределения по эффективности торговой точки
	|	Т0.ЭффективностьИтог,
	|	Т0.ЭффективностьИтогПоГП,
	|	Т0.КоличествоСмен, // Драйвер распределения по количеству смен
	|	Т0.КоличествоСменИтог,
	|	Т0.КоличествоСменИтогПоГП,
	|	Т0.Выручка, // Драйвер распределения по выручке торговой точки
	|	Т0.ВыручкаИтог,
	|	Т0.ВыручкаИтогПоГП,
	|	Т0.ВыручкаГруппыРазвития, // Драйвер распределения по выручке торговых точек группы развития
	|	Т0.ВыручкаГруппыРазвитияИтог,
	|	Т0.ВыручкаГруппыРазвитияИтогПоГП,
	|	Т1.СуммаРаспределения, // Сумма для распределения по основному виду учёта
	|	Т1.СуммаРаспределенияМСФО // Сумма для распределения по МСФО
	|ИЗ
	|	БазаРаспределенияПлюсИтоги КАК Т0,
	|	ТаблицаРаспределения       КАК Т1
	|ГДЕ
	|	Т0.ГоловноеПодразделение = Т1.ГоловноеПодразделение) КАК Т
	|
	|ИТОГИ
	|	МАКСИМУМ(Т.СуммаРаспределения),    // Суммы распределения, в том числе для контроля и распределения копеек
	|	МАКСИМУМ(Т.СуммаРаспределенияМСФО) // в разрезах остатков 44 счёта для распределения на 90 счёт
	|ПО
	|	Т.Организация,
	|	Т.ГП_44,
	|	Т.СтатьяДоходаРасхода,
	|	Т.ЦФО_44
	|;";
	
	//
	РезультатЗапроса = Запрос.Выполнить(); // Нужно для анализа производительности
	
	ВидСубконто1 = ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки;
	ВидСубконто2 = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДоходовРасходов;
	ВидСубконто3 = ПланыВидовХарактеристик.ВидыСубконто.ЦФО;
	
	//
	ВыборкаОрганизация = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаОрганизация.Следующий() Цикл // Группировка "Организация"
		
		ВыборкаСубконто1 = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСубконто1.Следующий() Цикл // Группировка "ГоловноеПодразделение"
			ВыборкаСубконто2 = ВыборкаСубконто1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСубконто2.Следующий() Цикл // Группировка "СтатьяДоходаРасхода"
				ВыборкаСубконто3 = ВыборкаСубконто2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаСубконто3.Следующий() Цикл // Группировка "ЦФО"
					
					СуммаРаспределения = ВыборкаСубконто3[ИмяОстатка];
					Если СуммаРаспределения = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					СуммаРаспределено = 0;
					
					ДетальныеЗаписи = ВыборкаСубконто3.Выбрать();
					//mind 2017-10-23 переделал на правильное пропорциональное распределение, а то зависают копейки
					ТабРаспределение = Новый ТаблицаЗначений();
					ТабРаспределение.Колонки.Добавить("Организация");
					ТабРаспределение.Колонки.Добавить("ГП_44");
					ТабРаспределение.Колонки.Добавить("СтатьяДоходаРасхода");
					ТабРаспределение.Колонки.Добавить("ЦФО_44");
					ТабРаспределение.Колонки.Добавить("ТорговаяТочка");
					ТабРаспределение.Колонки.Добавить("ЦФО_90");
					ТабРаспределение.Колонки.Добавить("База");
					ТабРаспределение.Колонки.Добавить("Распределено");
	//				Пока ДетальныеЗаписи.Следующий() Цикл
	//					
	//					Распределено = 0;
	//					
	//					Если ДетальныеЗаписи.СпособРаспределения = Перечисления.СпособыРаспределенияЗатрат.ПоВыручке Тогда
	//						Если ВыборкаСубконто3.ГП_44 = ВсеОрганизации Тогда
	//							Распределено = ?(ДетальныеЗаписи.ВыручкаИтог = 0, 0,
	//								ДетальныеЗаписи.Выручка / ДетальныеЗаписи.ВыручкаИтог * СуммаРаспределения);
	//						Иначе
	//							Распределено = ?(ДетальныеЗаписи.ВыручкаИтогПоГП = 0, 0,
	//								ДетальныеЗаписи.Выручка / ДетальныеЗаписи.ВыручкаИтогПоГП * СуммаРаспределения);
	//						КонецЕсли;
	//					ИначеЕсли ДетальныеЗаписи.СпособРаспределения = Перечисления.СпособыРаспределенияЗатрат.ПоВыручкеГруппыРазвития Тогда
	//						Если ВыборкаСубконто3.ГП_44 = ВсеОрганизации Тогда
	//							Распределено = ?(ДетальныеЗаписи.ВыручкаГруппыРазвитияИтог = 0, 0,
	//								ДетальныеЗаписи.ВыручкаГруппыРазвития / ДетальныеЗаписи.ВыручкаГруппыРазвитияИтог * СуммаРаспределения);
	//						Иначе
	//							Распределено = ?(ДетальныеЗаписи.ВыручкаИтогПоГП = 0, 0,
	//								ДетальныеЗаписи.Выручка / ДетальныеЗаписи.ВыручкаИтогПоГП * СуммаРаспределения);
	//						КонецЕсли;
	//
	//					ИначеЕсли ДетальныеЗаписи.СпособРаспределения = Перечисления.СпособыРаспределенияЗатрат.ПоЭффективности Тогда
	//						Если ДетальныеЗаписи.ГП_44 = ВсеОрганизации Тогда
	//							Распределено = ?(ДетальныеЗаписи.ЭффективностьИтог = 0, 0,
	//								ДетальныеЗаписи.Эффективность / ДетальныеЗаписи.ЭффективностьИтог * СуммаРаспределения);
	//						Иначе
	//							Распределено = ?(ДетальныеЗаписи.ЭффективностьИтогПоГП = 0, 0,
	//								ДетальныеЗаписи.Эффективность / ДетальныеЗаписи.ЭффективностьИтогПоГП * СуммаРаспределения);
	//						КонецЕсли;
	//						
	//					ИначеЕсли ДетальныеЗаписи.СпособРаспределения = Перечисления.СпособыРаспределенияЗатрат.ПоКоличествуСмен Тогда
	//						Если ДетальныеЗаписи.ГП_44 = ВсеОрганизации Тогда
	//							Распределено = ?(ДетальныеЗаписи.КоличествоСменИтог = 0, 0,
	//								ДетальныеЗаписи.КоличествоСмен / ДетальныеЗаписи.КоличествоСменИтог * СуммаРаспределения);
	//						Иначе
	//							Распределено = ?(ДетальныеЗаписи.КоличествоСменИтогПоГП = 0, 0,
	//								ДетальныеЗаписи.КоличествоСмен / ДетальныеЗаписи.КоличествоСменИтогПоГП * СуммаРаспределения);
	//						КонецЕсли;
	//						
	//					Иначе // По умолчанию распределяем по выручке
	//						Если ВыборкаСубконто3.ГП_44 = ВсеОрганизации Тогда
	//							Распределено = ?(ДетальныеЗаписи.ВыручкаИтог = 0, 0,
	//								ДетальныеЗаписи.Выручка / ДетальныеЗаписи.ВыручкаИтог * СуммаРаспределения);
	//						Иначе
	//							Распределено = ?(ДетальныеЗаписи.ВыручкаИтогПоГП = 0, 0,
	//								ДетальныеЗаписи.Выручка / ДетальныеЗаписи.ВыручкаИтогПоГП * СуммаРаспределения);
	//						КонецЕсли;
	//						
	//					КонецЕсли;
	//					
	//					Распределено = Окр(Распределено, 2);
	//					Если Распределено = 0.00 Тогда
	//						Продолжить;
	//					КонецЕсли;
	//					СуммаРаспределено = СуммаРаспределено + Распределено;
	//					
	//					Движение = НаборЗаписей.Добавить();
	//					Движение.Период = ПериодПроведения;
	//					Движение.Регистратор = Неопределено;
	//					Движение.Активность  = Истина;
	//					Движение.Организация = ДетальныеЗаписи.Организация;
	//					Движение.СчетКт = СчётЗатрат;
	//					Движение.ВидСубконтоДт1 = ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки;
	//					Движение.ВидСубконтоДт2 = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДоходовРасходов;
	//					Движение.ВидСубконтоДт3 = ПланыВидовХарактеристик.ВидыСубконто.ЦФО;
	//					Движение.ВидСубконтоКт1 = ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки;
	//					Движение.ВидСубконтоКт2 = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДоходовРасходов;
	//					Движение.ВидСубконтоКт3 = ПланыВидовХарактеристик.ВидыСубконто.ЦФО;
	//					Движение.СубконтоКт1 = ДетальныеЗаписи.ГП_44;
	//					Движение.СубконтоКт2 = ДетальныеЗаписи.СтатьяДоходаРасхода;
	//					Движение.СубконтоКт3 = ДетальныеЗаписи.ЦФО_44;
	//					Движение.СчетДт = СчётСписанияЗатрат; 
	//					Движение.СубконтоДт1 = ДетальныеЗаписи.ТорговаяТочка;
	//					Движение.СубконтоДт2 = ДетальныеЗаписи.СтатьяДоходаРасхода;
	//					Движение.СубконтоДт3 = ДетальныеЗаписи.ЦФО_90;
	//					Движение.НомерЖурнала = "ТТ";
	//					Движение.Содержание = СодержаниеПроводки;
	//					Движение[ИмяРесурса] = Распределено;
	//					
	//				КонецЦикла; // Детальные записи
	
					Пока ДетальныеЗаписи.Следующий() Цикл
						
						Распределено = 0;
						
						Если ДетальныеЗаписи.СпособРаспределения = Перечисления.СпособыРаспределенияЗатрат.ПоВыручке Тогда
							Если ВыборкаСубконто3.ГП_44 = ВсеОрганизации Тогда
								Распределено = ?(ДетальныеЗаписи.ВыручкаИтог = 0, 0,
									ДетальныеЗаписи.Выручка / ДетальныеЗаписи.ВыручкаИтог * СуммаРаспределения);
							Иначе
								Распределено = ?(ДетальныеЗаписи.ВыручкаИтогПоГП = 0, 0,
									ДетальныеЗаписи.Выручка / ДетальныеЗаписи.ВыручкаИтогПоГП * СуммаРаспределения);
							КонецЕсли;
						ИначеЕсли ДетальныеЗаписи.СпособРаспределения = Перечисления.СпособыРаспределенияЗатрат.ПоВыручкеГруппыРазвития Тогда
							Если ВыборкаСубконто3.ГП_44 = ВсеОрганизации Тогда
								Распределено = ?(ДетальныеЗаписи.ВыручкаГруппыРазвитияИтог = 0, 0,
									ДетальныеЗаписи.ВыручкаГруппыРазвития / ДетальныеЗаписи.ВыручкаГруппыРазвитияИтог * СуммаРаспределения);
							Иначе
								Распределено = ?(ДетальныеЗаписи.ВыручкаИтогПоГП = 0, 0,
									ДетальныеЗаписи.Выручка / ДетальныеЗаписи.ВыручкаИтогПоГП * СуммаРаспределения);
							КонецЕсли;
	
						ИначеЕсли ДетальныеЗаписи.СпособРаспределения = Перечисления.СпособыРаспределенияЗатрат.ПоЭффективности Тогда
							Если ДетальныеЗаписи.ГП_44 = ВсеОрганизации Тогда
								Распределено = ?(ДетальныеЗаписи.ЭффективностьИтог = 0, 0,
									ДетальныеЗаписи.Эффективность / ДетальныеЗаписи.ЭффективностьИтог * СуммаРаспределения);
							Иначе
								Распределено = ?(ДетальныеЗаписи.ЭффективностьИтогПоГП = 0, 0,
									ДетальныеЗаписи.Эффективность / ДетальныеЗаписи.ЭффективностьИтогПоГП * СуммаРаспределения);
							КонецЕсли;
							
						ИначеЕсли ДетальныеЗаписи.СпособРаспределения = Перечисления.СпособыРаспределенияЗатрат.ПоКоличествуСмен Тогда
							Если ДетальныеЗаписи.ГП_44 = ВсеОрганизации Тогда
								Распределено = ?(ДетальныеЗаписи.КоличествоСменИтог = 0, 0,
									ДетальныеЗаписи.КоличествоСмен / ДетальныеЗаписи.КоличествоСменИтог * СуммаРаспределения);
							Иначе
								Распределено = ?(ДетальныеЗаписи.КоличествоСменИтогПоГП = 0, 0,
									ДетальныеЗаписи.КоличествоСмен / ДетальныеЗаписи.КоличествоСменИтогПоГП * СуммаРаспределения);
							КонецЕсли;
							
						Иначе // По умолчанию распределяем по выручке
							Если ВыборкаСубконто3.ГП_44 = ВсеОрганизации Тогда
								Распределено = ?(ДетальныеЗаписи.ВыручкаИтог = 0, 0,
									ДетальныеЗаписи.Выручка / ДетальныеЗаписи.ВыручкаИтог * СуммаРаспределения);
							Иначе
								Распределено = ?(ДетальныеЗаписи.ВыручкаИтогПоГП = 0, 0,
									ДетальныеЗаписи.Выручка / ДетальныеЗаписи.ВыручкаИтогПоГП * СуммаРаспределения);
							КонецЕсли;
							
						КонецЕсли;
						
						СтрокаДоб = ТабРаспределение.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаДоб, ДетальныеЗаписи);
						СтрокаДоб.База = Распределено;
						
					КонецЦикла;
					
					НовыеСуммы = ОбщегоНазначения.РаспределитьПропорционально(СуммаРаспределения, ТабРаспределение.ВыгрузитьКолонку("База"));
					Если НовыеСуммы <> Неопределено Тогда
						ТабРаспределение.ЗагрузитьКолонку(НовыеСуммы, "Распределено");
					КонецЕсли;	
					
					Для Каждого СтрокаРаспределения Из ТабРаспределение Цикл
						Движение = НаборЗаписей.Добавить();
						Движение.Период = ПериодПроведения;
						Движение.Регистратор = Неопределено;
						Движение.Активность  = Истина;
						Движение.Организация = СтрокаРаспределения.Организация;
						Движение.СчетКт = СчётЗатрат;
						Движение.ВидСубконтоДт1 = ВидСубконто1;
						Движение.ВидСубконтоДт2 = ВидСубконто2;
						Движение.ВидСубконтоДт3 = ВидСубконто3;
						Движение.ВидСубконтоКт1 = ВидСубконто1;
						Движение.ВидСубконтоКт2 = ВидСубконто2;
						Движение.ВидСубконтоКт3 = ВидСубконто3;
						Движение.СубконтоКт1 = СтрокаРаспределения.ГП_44;
						Движение.СубконтоКт2 = СтрокаРаспределения.СтатьяДоходаРасхода;
						Движение.СубконтоКт3 = СтрокаРаспределения.ЦФО_44;
						Движение.СчетДт = СчётСписанияЗатрат; 
						Движение.СубконтоДт1 = СтрокаРаспределения.ТорговаяТочка;
						Движение.СубконтоДт2 = СтрокаРаспределения.СтатьяДоходаРасхода;
						Движение.СубконтоДт3 = СтрокаРаспределения.ЦФО_90;
						Движение.НомерЖурнала = "ТТ";
						Движение.Содержание = СодержаниеПроводки;
						Движение[ИмяРесурса] = СтрокаРаспределения.Распределено;
					КонецЦикла;	
					
					//// Распределение оставшихся копеек в последнюю строку
					//КоличествоСтрок = НаборЗаписей.Количество();
					//Если КоличествоСтрок > 0 Тогда
					//	ПоследняяСтрока = КоличествоСтрок - 1;
					//	НаборЗаписей[ПоследняяСтрока][ИмяРесурса] = НаборЗаписей[ПоследняяСтрока][ИмяРесурса] + (СуммаРаспределения - СуммаРаспределено);
					//КонецЕсли;
					
				КонецЦикла; // Группировка "ЦФО"
			КонецЦикла; // Группировка "СтатьяДоходаРасхода"
		КонецЦикла; // Группировка "ГоловноеПодразделение"
	КонецЦикла;
	
	//+++АК sils 12.03.2018 ИП-00017960
	Если СокрЛП(СчётЗатрат.Код) = "X44" Тогда
		Возврат;
	КонецЕсли;
	//---АК
	
	//+++АК sils 21.03.2018 ИП-00018102
	// Прямой перенос затрат Тилси
	Если Орг_Тилси <> Справочники.Организации.ПустаяСсылка() Тогда
		//+++АК sils 13.05.2018 ИП-00018466
		ТилсиОбщий   = Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_ЦФО", 10080);
		Если ПериодПроведения < '20180401' или ТилсиОбщий = Справочники.СтруктурныеЕдиницы.ПустаяСсылка() Тогда
		//---АК
		Запрос.Текст = "ВЫБРАТЬ
		               |	ФинансовыйОстатки.Организация,
		               |	ФинансовыйОстатки.Субконто1 КАК ТорговаяТочка,
		               |	ФинансовыйОстатки.Субконто2 КАК СДР,
		               |	ФинансовыйОстатки.Субконто3 КАК ЦФО,
		               |	СУММА(ФинансовыйОстатки.СуммаОстаток) КАК Сумма,
		               |	СУММА(ФинансовыйОстатки.СуммаМСФООстаток) КАК СуммаМСФО
		               |ИЗ
		               |	РегистрБухгалтерии.Финансовый.Остатки(
		               |			&ДатаОкончанияГр,
		               |			Счет = &СчетЗатрат,
		               |			,
		               |			ВЫБОР
		               |					КОГДА &ЭтоМСФО = ИСТИНА
		               |						ТОГДА ИСТИНА
		               |					ИНАЧЕ ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы) В (&ГоловныеПодразделения)
		               |				КОНЕЦ
		               |				И ВЫРАЗИТЬ(Субконто2 КАК Справочник.СтатьиДоходовРасходов).Ссылка В (&СтатьиДоходовРасходов)
		               |				И Организация = &Орг_Тилси) КАК ФинансовыйОстатки
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ФинансовыйОстатки.Организация,
		               |	ФинансовыйОстатки.Субконто1,
		               |	ФинансовыйОстатки.Субконто2,
		               |	ФинансовыйОстатки.Субконто3";
		Выборка = Запрос.Выполнить().Выбрать();				   
		Пока Выборка.Следующий() Цикл
			Если Выборка[ИмяРесурса] = 0 Тогда
				Продолжить;
			КонецЕсли;
			Движение = НаборЗаписей.Добавить();
			Движение.Период = ПериодПроведения;
			Движение.Регистратор = Неопределено;
			Движение.Активность  = Истина;
			Движение.Организация = Выборка.Организация;
			Движение.ВидСубконтоДт1 = ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки;
			Движение.ВидСубконтоДт2 = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДоходовРасходов;
			Движение.ВидСубконтоДт3 = ПланыВидовХарактеристик.ВидыСубконто.ЦФО;
			Движение.ВидСубконтоКт1 = ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки;
			Движение.ВидСубконтоКт2 = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДоходовРасходов;
			Движение.ВидСубконтоКт3 = ПланыВидовХарактеристик.ВидыСубконто.ЦФО;
			Движение.СчетКт = СчётЗатрат;
			Движение.СубконтоКт1 = Выборка.ТорговаяТочка;
			Движение.СубконтоКт2 = Выборка.СДР;
			Движение.СубконтоКт3 = Выборка.ЦФО;
			Движение.СчетДт = СчётСписанияЗатрат; 
			Движение.СубконтоДт1 = Выборка.ТорговаяТочка;
			Движение.СубконтоДт2 = Выборка.СДР;
			Движение.СубконтоДт3 = Выборка.ЦФО;
			Движение[ИмяРесурса] = Выборка[ИмяРесурса];
			Движение.НомерЖурнала = "ТТ";
			Движение.Содержание = СодержаниеПроводки;
		КонецЦикла;
		//+++АК sils 13.05.2018 ИП-00018466ё2
		КонецЕсли;
		Если ПериодПроведения >= '20180401' Тогда
			Запрос.УстановитьПараметр("ТилсиОбщий", ТилсиОбщий);
			Запрос.УстановитьПараметр("ВыручкаОтОптовыхПродаж", Справочники.СтатьиДоходовРасходов.НайтиПоКоду("10105"));
			Запрос.Текст = "ВЫБРАТЬ
			               |	ФинансовыйОстатки.Организация,
			               |	ФинансовыйОстатки.Субконто1 КАК ТорговаяТочка,
			               |	ФинансовыйОстатки.Субконто2 КАК СтатьяДоходаРасхода,
			               |	ФинансовыйОстатки.Субконто3 КАК ЦФО,
			               |	ФинансовыйОстатки.Субконто2.СпособРаспределенияЗатрат КАК СпособРаспределения,
			               |	ФинансовыйОстатки.Субконто2.БазаРаспределенияЗатрат КАК БазаРаспределения,
			               |	СУММА(ФинансовыйОстатки.СуммаОстаток) КАК СуммаРаспределения,
			               |	СУММА(ФинансовыйОстатки.СуммаМСФООстаток) КАК СуммаРаспределенияМСФО
			               |ПОМЕСТИТЬ ТаблицаРаспределения
			               |ИЗ
			               |	РегистрБухгалтерии.Финансовый.Остатки(
			               |			&ДатаОкончанияГр,
			               |			Счет = &СчетЗатрат,
			               |			,
			               |			ВЫРАЗИТЬ(Субконто2 КАК Справочник.СтатьиДоходовРасходов).Ссылка В (&СтатьиДоходовРасходов)
			               |				И Организация = &Орг_Тилси) КАК ФинансовыйОстатки
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	ФинансовыйОстатки.Организация,
			               |	ФинансовыйОстатки.Субконто1,
			               |	ФинансовыйОстатки.Субконто2,
			               |	ФинансовыйОстатки.Субконто3,
			               |	ФинансовыйОстатки.Субконто2.СпособРаспределенияЗатрат,
			               |	ФинансовыйОстатки.Субконто2.БазаРаспределенияЗатрат
			               |
			               |ИНДЕКСИРОВАТЬ ПО
			               |	ФинансовыйОстатки.Субконто1
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО,
			               |	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница КАК ТорговаяТочка
			               |ПОМЕСТИТЬ ВР_ЦФО
			               |ИЗ
			               |	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(
			               |			&ДатаОкончанияГр,
			               |			СтруктурнаяЕдиница <> ЦФО
			               |				И НЕ СтруктурнаяЕдиница ЕСТЬ NULL
			               |				И СтруктурнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
			               |				И Организация = &Орг_Тилси
			               |				И СтруктурнаяЕдиница.ТипРозничнойТочки В (ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Перекресток),ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Пятерочка))
			               |				И (СтруктурнаяЕдиница.СтатусТорговойТочки = ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Открыт)
			               |					ИЛИ СтруктурнаяЕдиница.СтатусТорговойТочки = ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.ПустаяСсылка)
						   //+++АК sils 20.10.2018 ИП-00020205
						   //|					ИЛИ СтруктурнаяЕдиница.СтатусТорговойТочки ЕСТЬ NULL)) КАК ЦФОСтруктурныхЕдиницСрезПоследних
			               |					ИЛИ СтруктурнаяЕдиница.СтатусТорговойТочки ЕСТЬ NULL 
			               |					ИЛИ СтруктурнаяЕдиница.ДатаЗакрытия <> ДАТАВРЕМЯ(1,1,1) И 
			               |					(СтруктурнаяЕдиница.ДатаЗакрытия >= &ДатаКон ИЛИ 
						   |					СтруктурнаяЕдиница.ДатаЗакрытия < &ДатаКон И СтруктурнаяЕдиница.ДатаЗакрытия >= &ДатаНач))) КАК ЦФОСтруктурныхЕдиницСрезПоследних
						   //---АК
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ФинансовыйОбороты.Субконто1 КАК ТорговаяТочка,
			               |	ФинансовыйОбороты.Субконто3 КАК ЦФО,
			               |	СУММА(ФинансовыйОбороты.СуммаОборотКт) - СУММА(ФинансовыйОбороты.СуммаОборотДт) КАК Выручка
			               |ПОМЕСТИТЬ ТаблицаВыручка
			               |ИЗ
			               |	РегистрБухгалтерии.Финансовый.Обороты(&ДатаНачала, &ДатаОкончания, Регистратор, Счет В (&СписокСчетов), , (ВЫРАЗИТЬ(Субконто2 КАК Справочник.СтатьиДоходовРасходов)) = &ВыручкаОтОптовыхПродаж, , ) КАК ФинансовыйОбороты
			               |ГДЕ
			               |	НЕ ФинансовыйОбороты.Регистратор ССЫЛКА Документ.РаспределениеЗатрат
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	ФинансовыйОбороты.Субконто1,
			               |	ФинансовыйОбороты.Субконто3
			               |
			               |ИНДЕКСИРОВАТЬ ПО
			               |	ФинансовыйОбороты.Субконто1,
			               |	ФинансовыйОбороты.Субконто3
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	Т0.ТорговаяТочка,
			               |	Т0.ЦФО,
			               |	ЕСТЬNULL(Т1.Выручка, 0) КАК Выручка
			               |ПОМЕСТИТЬ БазаРаспределения
			               |ИЗ
			               |	ВР_ЦФО КАК Т0
			               |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаВыручка КАК Т1
			               |		ПО Т0.ТорговаяТочка = Т1.ТорговаяТочка
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |УНИЧТОЖИТЬ ВР_ЦФО
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |УНИЧТОЖИТЬ ТаблицаВыручка
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	Т0.ТорговаяТочка,
			               |	Т0.ЦФО,
			               |	Т0.Выручка,
			               |	Т1.ВыручкаИтог,
			               |	Т2.ВыручкаИтогПоГП
			               |ПОМЕСТИТЬ БазаРаспределенияПлюсИтоги
			               |ИЗ
			               |	БазаРаспределения КАК Т0,
			               |	(ВЫБРАТЬ
			               |		СУММА(БазаРаспределения.Выручка) КАК ВыручкаИтог
			               |	ИЗ
			               |		БазаРаспределения КАК БазаРаспределения) КАК Т1,
			               |	(ВЫБРАТЬ
			               |		БазаРаспределения.ЦФО КАК ЦФО,
			               |		СУММА(БазаРаспределения.Выручка) КАК ВыручкаИтогПоГП
			               |	ИЗ
			               |		БазаРаспределения КАК БазаРаспределения
			               |	
			               |	СГРУППИРОВАТЬ ПО
			               |		БазаРаспределения.ЦФО) КАК Т2
			               |ГДЕ
			               |	Т0.ЦФО = Т2.ЦФО
			               |	И Т0.Выручка <> 0
			               |
			               |ИНДЕКСИРОВАТЬ ПО
			               |	Т0.ЦФО
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |УНИЧТОЖИТЬ БазаРаспределения
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	Т.Организация КАК Организация,
			               |	Т.ГП_90,
			               |	Т.ГП_44 КАК ГП_44,
			               |	Т.ЦФО_90,
			               |	Т.ЦФО_44 КАК ЦФО_44,
			               |	Т.ТорговаяТочка,
			               |	Т.СтатьяДоходаРасхода КАК СтатьяДоходаРасхода,
			               |	Т.БазаРаспределения,
			               |	Т.СпособРаспределения,
			               |	Т.Выручка,
			               |	Т.ВыручкаИтог,
			               |	Т.ВыручкаИтогПоГП,
			               |	Т.СуммаРаспределения КАК СуммаРаспределения,
			               |	Т.СуммаРаспределенияМСФО КАК СуммаРаспределенияМСФО
			               |ИЗ
			               |	(ВЫБРАТЬ
			               |		Т1.Организация КАК Организация,
			               |		Т0.ТорговаяТочка КАК ГП_90,
			               |		Т1.ТорговаяТочка КАК ГП_44,
			               |		Т0.ЦФО КАК ЦФО_90,
			               |		Т1.ЦФО КАК ЦФО_44,
			               |		Т0.ТорговаяТочка КАК ТорговаяТочка,
			               |		Т1.СтатьяДоходаРасхода КАК СтатьяДоходаРасхода,
			               |		Т1.БазаРаспределения КАК БазаРаспределения,
			               |		Т1.СпособРаспределения КАК СпособРаспределения,
			               |		Т0.Выручка КАК Выручка,
			               |		Т0.ВыручкаИтог КАК ВыручкаИтог,
			               |		Т0.ВыручкаИтогПоГП КАК ВыручкаИтогПоГП,
			               |		Т1.СуммаРаспределения КАК СуммаРаспределения,
			               |		Т1.СуммаРаспределенияМСФО КАК СуммаРаспределенияМСФО
			               |	ИЗ
			               |		БазаРаспределенияПлюсИтоги КАК Т0,
			               |		ТаблицаРаспределения КАК Т1
			               |	ГДЕ
			               |		Т1.ТорговаяТочка = &ТилсиОбщий
			               |	
			               |	ОБЪЕДИНИТЬ ВСЕ
			               |	
			               |	ВЫБРАТЬ
			               |		Т1.Организация,
			               |		Т0.ТорговаяТочка,
			               |		Т1.ТорговаяТочка,
			               |		Т0.ЦФО,
			               |		Т1.ЦФО,
			               |		Т0.ТорговаяТочка,
			               |		Т1.СтатьяДоходаРасхода,
			               |		Т1.БазаРаспределения,
			               |		Т1.СпособРаспределения,
			               |		Т0.Выручка,
			               |		Т0.ВыручкаИтог,
			               |		Т0.ВыручкаИтогПоГП,
			               |		Т1.СуммаРаспределения,
			               |		Т1.СуммаРаспределенияМСФО
			               |	ИЗ
			               |		БазаРаспределенияПлюсИтоги КАК Т0,
			               |		ТаблицаРаспределения КАК Т1
			               |	ГДЕ
			               |		(Т0.ЦФО = Т1.ТорговаяТочка
			               |				ИЛИ Т0.ТорговаяТочка = Т1.ТорговаяТочка)) КАК Т
			               |ИТОГИ
			               |	МАКСИМУМ(СуммаРаспределения),
			               |	МАКСИМУМ(СуммаРаспределенияМСФО)
			               |ПО
			               |	Организация,
			               |	ГП_44,
			               |	СтатьяДоходаРасхода,
			               |	ЦФО_44
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |УНИЧТОЖИТЬ ТаблицаРаспределения
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |УНИЧТОЖИТЬ БазаРаспределенияПлюсИтоги";
			РезультатЗапроса = Запрос.Выполнить(); // Нужно для анализа производительности
			ВидСубконто1 = ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки;
			ВидСубконто2 = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДоходовРасходов;
			ВидСубконто3 = ПланыВидовХарактеристик.ВидыСубконто.ЦФО;
			ВыборкаОрганизация = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			ТабРаспределение = Новый ТаблицаЗначений();
			ТабРаспределение.Колонки.Добавить("Организация");
			ТабРаспределение.Колонки.Добавить("ГП_44");
			ТабРаспределение.Колонки.Добавить("СтатьяДоходаРасхода");
			ТабРаспределение.Колонки.Добавить("ЦФО_44");
			ТабРаспределение.Колонки.Добавить("ТорговаяТочка");
			ТабРаспределение.Колонки.Добавить("ЦФО_90");
			ТабРаспределение.Колонки.Добавить("База");
			ТабРаспределение.Колонки.Добавить("Распределено");
			
			Пока ВыборкаОрганизация.Следующий() Цикл // Группировка "Организация"
				
				ВыборкаСубконто1 = ВыборкаОрганизация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаСубконто1.Следующий() Цикл // Группировка "ГоловноеПодразделение"
					ВыборкаСубконто2 = ВыборкаСубконто1.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаСубконто2.Следующий() Цикл // Группировка "СтатьяДоходаРасхода"
						ВыборкаСубконто3 = ВыборкаСубконто2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаСубконто3.Следующий() Цикл // Группировка "ЦФО"
							
							СуммаРаспределения = ВыборкаСубконто3[ИмяОстатка];
							Если СуммаРаспределения = 0 Тогда
								Продолжить;
							КонецЕсли;
							
							СуммаРаспределено = 0;
							
							ДетальныеЗаписи = ВыборкаСубконто3.Выбрать();
							ТабРаспределение.Очистить();
			
							Пока ДетальныеЗаписи.Следующий() Цикл
								Распределено = 0;
								
								Если ДетальныеЗаписи.СпособРаспределения = Перечисления.СпособыРаспределенияЗатрат.ПоВыручке Тогда
									Если ВыборкаСубконто3.ГП_44 = ТилсиОбщий Тогда
										Распределено = ?(ДетальныеЗаписи.ВыручкаИтог = 0, 0,
											ДетальныеЗаписи.Выручка / ДетальныеЗаписи.ВыручкаИтог * СуммаРаспределения);
									Иначе
										Распределено = ?(ДетальныеЗаписи.ВыручкаИтогПоГП = 0, 0,
											ДетальныеЗаписи.Выручка / ДетальныеЗаписи.ВыручкаИтогПоГП * СуммаРаспределения);
									КонецЕсли;
								Иначе // По умолчанию распределяем по выручке
									Если ВыборкаСубконто3.ГП_44 = ТилсиОбщий Тогда
										Распределено = ?(ДетальныеЗаписи.ВыручкаИтог = 0, 0,
											ДетальныеЗаписи.Выручка / ДетальныеЗаписи.ВыручкаИтог * СуммаРаспределения);
									Иначе
										Распределено = ?(ДетальныеЗаписи.ВыручкаИтогПоГП = 0, 0,
											ДетальныеЗаписи.Выручка / ДетальныеЗаписи.ВыручкаИтогПоГП * СуммаРаспределения);
									КонецЕсли;
									
								КонецЕсли;
								
								СтрокаДоб = ТабРаспределение.Добавить();
								ЗаполнитьЗначенияСвойств(СтрокаДоб, ДетальныеЗаписи);
								СтрокаДоб.База = Распределено;
							КонецЦикла;
							
							НовыеСуммы = ОбщегоНазначения.РаспределитьПропорционально(СуммаРаспределения, ТабРаспределение.ВыгрузитьКолонку("База"));
							Если НовыеСуммы <> Неопределено Тогда
								ТабРаспределение.ЗагрузитьКолонку(НовыеСуммы, "Распределено");
							КонецЕсли;	
							
							Для Каждого СтрокаРаспределения Из ТабРаспределение Цикл
								Движение = НаборЗаписей.Добавить();
								Движение.Период = ПериодПроведения;
								Движение.Регистратор = Неопределено;
								Движение.Активность  = Истина;
								Движение.Организация = СтрокаРаспределения.Организация;
								Движение.ВидСубконтоДт1 = ВидСубконто1;
								Движение.ВидСубконтоДт2 = ВидСубконто2;
								Движение.ВидСубконтоДт3 = ВидСубконто3;
								Движение.ВидСубконтоКт1 = ВидСубконто1;
								Движение.ВидСубконтоКт2 = ВидСубконто2;
								Движение.ВидСубконтоКт3 = ВидСубконто3;
								
								Движение.СчетКт = СчётЗатрат;
								Движение.СубконтоКт1 = СтрокаРаспределения.ГП_44;
								Движение.СубконтоКт2 = СтрокаРаспределения.СтатьяДоходаРасхода;
								Движение.СубконтоКт3 = СтрокаРаспределения.ЦФО_44;
								
								Движение.СчетДт = СчётСписанияЗатрат; 
								Движение.СубконтоДт1 = СтрокаРаспределения.ТорговаяТочка;
								Движение.СубконтоДт2 = СтрокаРаспределения.СтатьяДоходаРасхода;
								Движение.СубконтоДт3 = СтрокаРаспределения.ЦФО_90;
								
								Движение.НомерЖурнала = "ТТ";
								Движение.Содержание = СодержаниеПроводки;
								Движение[ИмяРесурса] = СтрокаРаспределения.Распределено;
							КонецЦикла;	
						КонецЦикла; // Группировка "ЦФО"
					КонецЦикла; // Группировка "СтатьяДоходаРасхода"
				КонецЦикла; // Группировка "ГоловноеПодразделение"
			КонецЦикла;
		//+++АК sils 13.05.2018 ИП-00018466
		КонецЕсли;
		Если ПериодПроведения >= '20180401' Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	ФинансовыйОстатки.Организация,
			               |	ФинансовыйОстатки.Субконто1 КАК ТорговаяТочка,
			               |	ФинансовыйОстатки.Субконто2 КАК СДР,
			               |	ФинансовыйОстатки.Субконто3 КАК ЦФО,
			               |	СУММА(ФинансовыйОстатки.СуммаОстаток) КАК Сумма,
			               |	СУММА(ФинансовыйОстатки.СуммаМСФООстаток) КАК СуммаМСФО
			               |ИЗ
			               |	РегистрБухгалтерии.Финансовый.Остатки(
			               |			&ДатаОкончанияГр,
			               |			Счет = &СчетЗатрат,
			               |			,
			               |			ВЫРАЗИТЬ(Субконто2 КАК Справочник.СтатьиДоходовРасходов).Ссылка В (&СтатьиДоходовРасходов)
			               |				И Организация <> &Орг_Тилси) КАК ФинансовыйОстатки
			               |ГДЕ
			               |	ФинансовыйОстатки.Субконто1 В
			               |			(ВЫБРАТЬ
			               |				ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница
			               |			ИЗ
			               |				РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&ДатаОкончанияГр, СтруктурнаяЕдиница <> ЦФО
			               |					И НЕ СтруктурнаяЕдиница ЕСТЬ NULL
			               |					И СтруктурнаяЕдиница <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
			               |					И Организация = &Орг_Тилси
			               |					И СтруктурнаяЕдиница.ТипРозничнойТочки В (ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Перекресток), ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Пятерочка))
						   //+++АК sils 28.11.2018 ИП-00020479
						   //|					И (СтруктурнаяЕдиница.СтатусТорговойТочки = ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Открыт)
						   //|						ИЛИ СтруктурнаяЕдиница.СтатусТорговойТочки = ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.ПустаяСсылка)
						   ////+++АК sils 20.10.2018 ИП-00020205
						   ////|						ИЛИ СтруктурнаяЕдиница.СтатусТорговойТочки ЕСТЬ NULL)) КАК ЦФОСтруктурныхЕдиницСрезПоследних)
						   //|					ИЛИ СтруктурнаяЕдиница.СтатусТорговойТочки ЕСТЬ NULL 
						   //|					ИЛИ СтруктурнаяЕдиница.ДатаЗакрытия <> ДАТАВРЕМЯ(1,1,1) И 
						   //|					(СтруктурнаяЕдиница.ДатаЗакрытия >= &ДатаКон ИЛИ 
						   //|					СтруктурнаяЕдиница.ДатаЗакрытия < &ДатаКон И СтруктурнаяЕдиница.ДатаЗакрытия >= &ДатаНач))) КАК ЦФОСтруктурныхЕдиницСрезПоследних)
						   ////---АК
			               |					И (СтруктурнаяЕдиница.ДатаОткрытия = ДАТАВРЕМЯ(1,1,1) ИЛИ 
			               |					СтруктурнаяЕдиница.ДатаОткрытия <= &ДатаКон) И 
			               |					(СтруктурнаяЕдиница.ДатаЗакрытия = ДАТАВРЕМЯ(1,1,1) ИЛИ 
			               |					СтруктурнаяЕдиница.ДатаЗакрытия >= &ДатаКон ИЛИ 
						   |					СтруктурнаяЕдиница.ДатаЗакрытия < &ДатаКон И СтруктурнаяЕдиница.ДатаЗакрытия >= &ДатаНач)) КАК ЦФОСтруктурныхЕдиницСрезПоследних)
						   //---АК
			               |
			               |СГРУППИРОВАТЬ ПО
			               |	ФинансовыйОстатки.Организация,
			               |	ФинансовыйОстатки.Субконто1,
			               |	ФинансовыйОстатки.Субконто2,
			               |	ФинансовыйОстатки.Субконто3";
			Выборка = Запрос.Выполнить().Выбрать();				   
			Пока Выборка.Следующий() Цикл
				Если Выборка[ИмяРесурса] = 0 Тогда
					Продолжить;
				КонецЕсли;
				Движение = НаборЗаписей.Добавить();
				Движение.Период = ПериодПроведения;
				Движение.Регистратор = Неопределено;
				Движение.Активность  = Истина;
				Движение.Организация = Выборка.Организация;
				Движение.ВидСубконтоДт1 = ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки;
				Движение.ВидСубконтоДт2 = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДоходовРасходов;
				Движение.ВидСубконтоДт3 = ПланыВидовХарактеристик.ВидыСубконто.ЦФО;
				Движение.ВидСубконтоКт1 = ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки;
				Движение.ВидСубконтоКт2 = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДоходовРасходов;
				Движение.ВидСубконтоКт3 = ПланыВидовХарактеристик.ВидыСубконто.ЦФО;
				Движение.СчетКт = СчётЗатрат;
				Движение.СубконтоКт1 = Выборка.ТорговаяТочка;
				Движение.СубконтоКт2 = Выборка.СДР;
				Движение.СубконтоКт3 = Выборка.ЦФО;
				Движение.СчетДт = СчётСписанияЗатрат; 
				Движение.СубконтоДт1 = Выборка.ТорговаяТочка;
				Движение.СубконтоДт2 = Выборка.СДР;
				Движение.СубконтоДт3 = Выборка.ЦФО;
				Движение[ИмяРесурса] = Выборка[ИмяРесурса];
				Движение.НомерЖурнала = "ТТ";
				Движение.Содержание = СодержаниеПроводки;
			КонецЦикла;
		//+++АК sils 13.05.2018 ИП-00018466
		КонецЕсли
		//---АК
	КонецЕсли;
	//---АК
	
	//
	Счет445 = ПланыСчетов.Финансовый.НайтиПоКоду("44.5");
	Если СчётЗатрат = Счет445 Тогда
		СчётСписанияЗатрат = ПланыСчетов.Финансовый.ЗатратыТорговыхТочек;
	КонецЕсли;
	
	// "Прямой" перенос затрат по торговым точкам без распределения
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Организация,
	|	Субконто1 КАК ТорговаяТочка,
	|	Субконто2 КАК СДР,
	|	Субконто3 КАК ЦФО,
	|	СУММА(СуммаОстаток)     КАК Сумма,
	|	СУММА(СуммаМСФООстаток) КАК СуммаМСФО
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(&ДатаОкончанияГр, Счет = &СчетЗатрат,,
	|		ВЫРАЗИТЬ(Субконто2 КАК Справочник.СтатьиДоходовРасходов).Ссылка В (&СтатьиДоходовРасходов))
	|ГДЕ
	|	ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы).Ссылка <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|	И
	|	(ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы).ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|	ИЛИ
	//+++АК sils 28.11.2018 ИП-00020479
	|	ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы).ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.СторонняяРозница) И
	|	ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы).ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Вкусомат) ИЛИ
	|	ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы).ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.СкладСтороннейРозницы) И
	|	ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы).ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Вкусомат) ИЛИ
	//---АК
	|	ВЫРАЗИТЬ(Субконто1 КАК Справочник.СтруктурныеЕдиницы).БратьВРаспределениеЗатрат = ИСТИНА)
	|	
	|СГРУППИРОВАТЬ ПО
	|	Организация,
	|	Субконто1,
	|	Субконто2,
	|	Субконто3
	|";
	Выборка = Запрос.Выполнить().Выбрать();				   
	Пока Выборка.Следующий() Цикл
		Если Выборка[ИмяРесурса] = 0 Тогда
			Продолжить;
		КонецЕсли;
		Движение = НаборЗаписей.Добавить();
		Движение.Период = ПериодПроведения;
		Движение.Регистратор = Неопределено;
		Движение.Активность  = Истина;
		Движение.Организация = Выборка.Организация;
		Движение.ВидСубконтоДт1 = ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки;
		Движение.ВидСубконтоДт2 = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДоходовРасходов;
		Движение.ВидСубконтоДт3 = ПланыВидовХарактеристик.ВидыСубконто.ЦФО;
		Движение.ВидСубконтоКт1 = ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки;
		Движение.ВидСубконтоКт2 = ПланыВидовХарактеристик.ВидыСубконто.СтатьиДоходовРасходов;
		Движение.ВидСубконтоКт3 = ПланыВидовХарактеристик.ВидыСубконто.ЦФО;
		Движение.СчетКт = СчётЗатрат;
		Движение.СубконтоКт1 = Выборка.ТорговаяТочка;
		Движение.СубконтоКт2 = Выборка.СДР;
		Движение.СубконтоКт3 = Выборка.ЦФО;
		Движение.СчетДт = СчётСписанияЗатрат; 
		Движение.СубконтоДт1 = Выборка.ТорговаяТочка;
		Движение.СубконтоДт2 = Выборка.СДР;
		Движение.СубконтоДт3 = Выборка.ЦФО;
		Движение[ИмяРесурса] = Выборка[ИмяРесурса];
		Движение.НомерЖурнала = "ТТ";
		Движение.Содержание = СодержаниеПроводки;
	КонецЦикла;
	
КонецПроцедуры

//
//
Процедура СоздатьДокументыПоСтатьеДоходовРасходов(СчётЗатрат, СтатьяДоходовРасходов, НаборЗаписей)
	
	Отбор = Новый Структура();
	Отбор.Вставить("СубконтоКт2", СтатьяДоходовРасходов);
	МассивЗаписей = НаборЗаписей.НайтиСтроки(Отбор);
	Если МассивЗаписей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	НовыйДокумент = ПолучитьНовыйДокумент(СчётЗатрат, СтатьяДоходовРасходов);
	Движения = ПолучитьНовыйНаборЗаписей(НовыйДокумент);
	Буфер = НаборЗаписей.Скопировать(Новый Массив());
	
	Для Счётчик = 1 По МассивЗаписей.Количество() Цикл
		
		Источник = МассивЗаписей[Счётчик - 1];
		Источник.Регистратор = НовыйДокумент;
		ЗаполнитьЗначенияСвойств(Буфер.Добавить(), Источник);
		
		Если Счётчик % 2000 = 0 Тогда
			Движения.Загрузить(Буфер);
			Движения.Записать();
			Если Счётчик < МассивЗаписей.Количество() Тогда
				НовыйДокумент = ПолучитьНовыйДокумент(СчётЗатрат, СтатьяДоходовРасходов);
				Движения = ПолучитьНовыйНаборЗаписей(НовыйДокумент);
				Буфер.Очистить();
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если Счётчик % 2000 > 0 Тогда
		Движения.Загрузить(Буфер);
		Движения.Записать();
	КонецЕсли; 
	
КонецПроцедуры

//
//
Процедура УдалитьДокументыПоСтатьеДоходовРасходов(СчётЗатрат, СтатьяДоходовРасходов)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Дата", ПолучитьПериодРаспределения());
	Запрос.УстановитьПараметр("МСФО", МСФО);
	Запрос.УстановитьПараметр("СчётЗатрат", СчётЗатрат);
	Запрос.УстановитьПараметр("СтатьяДоходовРасходов", СтатьяДоходовРасходов);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Ссылка
	|ИЗ
	|	Документ.РаспределениеЗатрат
	|ГДЕ
	|	Дата = &Дата
	|	И
	|	МСФО = &МСФО
	|	И
	|	СчетЗатрат = &СчётЗатрат
	|	И
	|	СтатьяДоходовРасходов = &СтатьяДоходовРасходов
	|;";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Если ДокументОбъект = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если ДокументОбъект.ПометкаУдаления Тогда
			ДокументОбъект.Удалить();
		КонецЕсли;
		
		Если ДокументОбъект.Проведен Тогда
			ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			ДокументОбъект.Удалить();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//
//
Функция ПолучитьНовыйДокумент(СчётЗатрат, СтатьяДоходовРасходов)
	
	ДокументОбъект = Документы.РаспределениеЗатрат.СоздатьДокумент();
	ДокументОбъект.УстановитьНовыйНомер();
	ДокументОбъект.Дата = ПолучитьПериодРаспределения();
	ДокументОбъект.МСФО = МСФО;
	ДокументОбъект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	ДокументОбъект.Комментарий = ?(МСФО, "МСФО", "Упр") + "/" + СокрЛП(СчётЗатрат.Код) + "/" + СокрЛП(СтатьяДоходовРасходов.Наименование);
	ДокументОбъект.СчетЗатрат = СчётЗатрат;
	ДокументОбъект.СтатьяДоходовРасходов = СтатьяДоходовРасходов;
	ДокументОбъект.Проведен = Истина;
	ДокументОбъект.ОбменДанными.Загрузка = Истина;
	ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
	
	Возврат ДокументОбъект.Ссылка;
	
КонецФункции

//
//
Функция ПолучитьНовыйНаборЗаписей(Регистратор)
	Движения = РегистрыБухгалтерии.Финансовый.СоздатьНаборЗаписей();
	Движения.Отбор.Регистратор.Установить(Регистратор);
	Движения.РазрешитьЗаписьБезПроверки = Истина;
	//+++АК Susk (Суслин К.В.) 2018.04.17 оптимизация
	//не используем больше обменданными.Загрузка у наборов бух.регистра
	Движения.ДополнительныеСвойства.Вставить("НеПроверятьНаборПередЗаписью", Истина);
	//Движения.ОбменДанными.Загрузка = Истина;
	//---AK susk
	Возврат Движения;
КонецФункции

_ГоловныеПодразделения = Неопределено;