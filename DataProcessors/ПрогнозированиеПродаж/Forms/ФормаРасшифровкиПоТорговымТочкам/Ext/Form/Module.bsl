
Процедура УстановитьВидимостьКолонок(мМассивДнейНеделиПериода)
	
	Элементы.ПланыПродажПоДнямНеделиКоличествоПонедельник.Видимость = (НЕ мМассивДнейНеделиПериода.Найти(1) = Неопределено);
	Элементы.ПланыПродажПоДнямНеделиКоличествоВторник.Видимость 	= (НЕ мМассивДнейНеделиПериода.Найти(2) = Неопределено);
	Элементы.ПланыПродажПоДнямНеделиКоличествоСреда.Видимость 		= (НЕ мМассивДнейНеделиПериода.Найти(3) = Неопределено);
	Элементы.ПланыПродажПоДнямНеделиКоличествоЧетверг.Видимость 	= (НЕ мМассивДнейНеделиПериода.Найти(4) = Неопределено);
	Элементы.ПланыПродажПоДнямНеделиКоличествоПятница.Видимость 	= (НЕ мМассивДнейНеделиПериода.Найти(5) = Неопределено);
	Элементы.ПланыПродажПоДнямНеделиКоличествоСуббота.Видимость 	= (НЕ мМассивДнейНеделиПериода.Найти(6) = Неопределено);
	Элементы.ПланыПродажПоДнямНеделиКоличествоВоскресенье.Видимость = (НЕ мМассивДнейНеделиПериода.Найти(7) = Неопределено);
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьТекстДняНедели(мДеньНедели)
	
	мИндексДняНедели = Перечисления.ДниНедели.Индекс(мДеньНедели) + 1;
	Если мИндексДняНедели = 1 Тогда
		Возврат "Понедельник";
	ИначеЕсли мИндексДняНедели = 2 Тогда
		Возврат "Вторник";
	ИначеЕсли мИндексДняНедели = 3 Тогда
		Возврат "Среда";
	ИначеЕсли мИндексДняНедели = 4 Тогда
		Возврат "Четверг";
	ИначеЕсли мИндексДняНедели = 5 Тогда
		Возврат "Пятница";
	ИначеЕсли мИндексДняНедели = 6 Тогда
		Возврат "Суббота";
	Иначе
		Возврат "Воскресенье";
	КонецЕсли;
	
КонецФункции
 
&НаСервереБезКонтекста
Функция ПолучитьТипТТДляТА(мТТ)
	
	Возврат мТТ.ТипТорговойТочкиДляАссортимента;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТипТТСТороннейРозницы(мТТ)
	Возврат мТТ.ТипРозничнойТочки;	
КонецФункции

Процедура ЗаполнитьТаблицуПродаж()
	
	Перем Запрос, ТаблицаЗапроса;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаАссортимента"	, КонецДня(ТекущаяДата() + 86400));
	Запрос.УстановитьПараметр("МассивТорговыхТочек"	, ЭтаФорма.СписокТорговыхТочек);
	Запрос.УстановитьПараметр("НоменклатураОтбор"	, ЭтаФорма.НоменклатураОтбор);
	Запрос.УстановитьПараметр("МассивДней"			, ЭтаФорма.СписокДатПериода);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварныйАссортиментТочек.ТорговаяТочка КАК ТорговаяТочка
	|ПОМЕСТИТЬ ТТАссортимента
	|ИЗ
	|	РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(
	|			&ДатаАссортимента,
	|			ТорговаяТочка В (&МассивТорговыхТочек)
	|				И Номенклатура = &НоменклатураОтбор) КАК ТоварныйАссортиментТочек
	|ГДЕ
	|	НЕ ТоварныйАссортиментТочек.Выведена
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТорговаяТочка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланыПродажПоДнямНедели.ТорговаяТочка,
	|	ВЫБОР
	|		КОГДА ДЕНЬНЕДЕЛИ(ПланыПродажПоДнямНедели.Дата) = 1
	|			ТОГДА ПланыПродажПоДнямНедели.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоПонедельник,
	|	ВЫБОР
	|		КОГДА ДЕНЬНЕДЕЛИ(ПланыПродажПоДнямНедели.Дата) = 2
	|			ТОГДА ПланыПродажПоДнямНедели.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоВторник,
	|	ВЫБОР
	|		КОГДА ДЕНЬНЕДЕЛИ(ПланыПродажПоДнямНедели.Дата) = 3
	|			ТОГДА ПланыПродажПоДнямНедели.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоСреда,
	|	ВЫБОР
	|		КОГДА ДЕНЬНЕДЕЛИ(ПланыПродажПоДнямНедели.Дата) = 4
	|			ТОГДА ПланыПродажПоДнямНедели.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоЧетверг,
	|	ВЫБОР
	|		КОГДА ДЕНЬНЕДЕЛИ(ПланыПродажПоДнямНедели.Дата) = 5
	|			ТОГДА ПланыПродажПоДнямНедели.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоПятница,
	|	ВЫБОР
	|		КОГДА ДЕНЬНЕДЕЛИ(ПланыПродажПоДнямНедели.Дата) = 6
	|			ТОГДА ПланыПродажПоДнямНедели.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоСуббота,
	|	ВЫБОР
	|		КОГДА ДЕНЬНЕДЕЛИ(ПланыПродажПоДнямНедели.Дата) = 7
	|			ТОГДА ПланыПродажПоДнямНедели.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоВоскресенье,
	|	ПланыПродажПоДнямНедели.Количество,
	|	ПланыПродажПоДнямНедели.Цена
	|ПОМЕСТИТЬ ВТОсновная
	|ИЗ
	|	РегистрСведений.ПланыПродажПоДнямНедели КАК ПланыПродажПоДнямНедели
	|ГДЕ
	|	ПланыПродажПоДнямНедели.Дата В(&МассивДней)
	|	И ПланыПродажПоДнямНедели.Номенклатура = &НоменклатураОтбор
	|	И ПланыПродажПоДнямНедели.ТорговаяТочка В
	|			(ВЫБРАТЬ
	|				ТТассортимента.ТорговаяТочка
	|			ИЗ
	|				ТТассортимента)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОсновная.ТорговаяТочка КАК ТорговаяТочка,
	|	ВТОсновная.ТорговаяТочка.id_TT КАК id_TT,
	|	ВТОсновная.ТорговаяТочка.НеУчаствуетВРаспределении КАК НеУчаствуетВРаспределении,
	|	ВТОсновная.КоличествоПонедельник КАК КоличествоПонедельник,
	|	ВТОсновная.КоличествоВторник КАК КоличествоВторник,
	|	ВТОсновная.КоличествоСреда КАК КоличествоСреда,
	|	ВТОсновная.КоличествоЧетверг КАК КоличествоЧетверг,
	|	ВТОсновная.КоличествоПятница КАК КоличествоПятница,
	|	ВТОсновная.КоличествоСуббота КАК КоличествоСуббота,
	|	ВТОсновная.КоличествоВоскресенье КАК КоличествоВоскресенье,
	|	ВТОсновная.Количество КАК Количество,
	|	ВТОсновная.Цена КАК Цена
	|ПОМЕСТИТЬ ВТПоследняя
	|ИЗ
	|	ВТОсновная КАК ВТОсновная
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СпрСтруктурныеЕдиницы.Ссылка,
	|	СпрСтруктурныеЕдиницы.id_TT,
	|	СпрСтруктурныеЕдиницы.НеУчаствуетВРаспределении,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СпрСтруктурныеЕдиницы
	|ГДЕ
	|	СпрСтруктурныеЕдиницы.Ссылка В
	|			(ВЫБРАТЬ
	|				ТТассортимента.ТорговаяТочка
	|			ИЗ
	|				ТТассортимента)
	|	И НЕ СпрСтруктурныеЕдиницы.Ссылка В
	|				(ВЫБРАТЬ
	|					ВТосновная.ТорговаяТочка
	|				ИЗ
	|					ВТосновная)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК Изменять,
	|	ВТПоследняя.ТорговаяТочка,
	|	ВТПоследняя.id_TT,
	|	ВТПоследняя.НеУчаствуетВРаспределении,
	|	СУММА(ВТПоследняя.КоличествоПонедельник) КАК КоличествоПонедельник,
	|	СУММА(ВТПоследняя.КоличествоВторник) КАК КоличествоВторник,
	|	СУММА(ВТПоследняя.КоличествоСреда) КАК КоличествоСреда,
	|	СУММА(ВТПоследняя.КоличествоЧетверг) КАК КоличествоЧетверг,
	|	СУММА(ВТПоследняя.КоличествоПятница) КАК КоличествоПятница,
	|	СУММА(ВТПоследняя.КоличествоСуббота) КАК КоличествоСуббота,
	|	СУММА(ВТПоследняя.КоличествоВоскресенье) КАК КоличествоВоскресенье,
	|	СУММА(ВТПоследняя.Количество) КАК ПланКоличество,
	|	ВТПоследняя.Цена * СУММА(ВТПоследняя.Количество) КАК ПланСумма,
	|	ВТПоследняя.Цена
	|ИЗ
	|	ВТПоследняя КАК ВТПоследняя
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТПоследняя.ТорговаяТочка,
	|	ВТПоследняя.id_TT,
	|	ВТПоследняя.НеУчаствуетВРаспределении,
	|	ВТПоследняя.Цена
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТПоследняя.id_TT";
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	// вывод на форму
	ЭтаФорма.ПланыПродажПоДнямНедели.Загрузить(ТаблицаЗапроса);
		
	ОбновитьВсеИтогиПоДням();
	
КонецПроцедуры

// Добавляет запись в регистр сведений "ПланыПродажПоДнямНедели" на основании строки таблицы на форме.
//
&НаСервереБезКонтекста
Процедура ДобавитьЗаписьВПланПродажПоДням(СтруктураПараметров)
	
	ТекСписокЗначенийКИзменению = СтруктураПараметров.СписокЗначенийКИзменению;
	Если ТекСписокЗначенийКИзменению.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// запись в регистр "ПланыПродажПоДнямНедели" измененных данных
	мПланыПродажПоДнямНедели = РегистрыСведений.ПланыПродажПоДнямНедели;
	
	ПредТорговаяТочка = ТекСписокЗначенийКИзменению[0].Значение;
	
	мРасчетчик 			= СтруктураПараметров.Расчетчик;
	мНоменклатураОтбор 	= СтруктураПараметров.НоменклатураОтбор;
	
	мТТИзменилась = (НЕ СтруктураПараметров.ТорговаяТочка = ПредТорговаяТочка);
	
	////////////////////////////////////
	// УДАЛЕНИЕ из регистра старых значений
	Если мТТИзменилась Тогда // если изменилась торговая точка - очистка записи по предыдущей торговой точке
		
		Для Каждого ЭлементСписка Из СтруктураПараметров.СписокДатПериода Цикл
			НаборЗаписей = мПланыПродажПоДнямНедели.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Дата.Установить(ЭлементСписка.Значение);
			//НаборЗаписей.Отбор.Расчетчик.Установить(мРасчетчик);
			НаборЗаписей.Отбор.ТорговаяТочка.Установить(ПредТорговаяТочка);
			НаборЗаписей.Отбор.Номенклатура.Установить(мНоменклатураОтбор);
			НаборЗаписей.Прочитать();
			Попытка
				НаборЗаписей.Очистить();
				НаборЗаписей.Записать();
			Исключение
				Сообщить("Не удалось очистить предыдущие значения плана продаж по дням недели" + Символы.ПС + ОписаниеОшибки());
			КонецПопытки;
	    КонецЦикла;
		
	КонецЕсли;		
	
	
	////////////////////////////////////
	// ЗАПИСЬ в регистр новых значений
	ДатаПонедельник = НачалоНедели(СтруктураПараметров.СписокДатПериода[0].Значение);
	ПредКоличествоПонедельник 	= ТекСписокЗначенийКИзменению[1].Значение;
	ПредКоличествоВторник 		= ТекСписокЗначенийКИзменению[2].Значение;
	ПредКоличествоСреда 		= ТекСписокЗначенийКИзменению[3].Значение;
	ПредКоличествоЧетверг 		= ТекСписокЗначенийКИзменению[4].Значение;
	ПредКоличествоПятница 		= ТекСписокЗначенийКИзменению[5].Значение;
	ПредКоличествоСуббота 		= ТекСписокЗначенийКИзменению[6].Значение;
	ПредКоличествоВоскресенье 	= ТекСписокЗначенийКИзменению[7].Значение;
	
	// понедельник
	Если мТТИзменилась
			ИЛИ НЕ СтруктураПараметров.КоличествоПонедельник = ПредКоличествоПонедельник Тогда
			
		МенеджерЗаписи = мПланыПродажПоДнямНедели.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Дата 			= ДатаПонедельник;
		МенеджерЗаписи.Расчетчик 		= мРасчетчик;
		МенеджерЗаписи.ТорговаяТочка 	= СтруктураПараметров.ТорговаяТочка;
		МенеджерЗаписи.Номенклатура 	= мНоменклатураОтбор;
		МенеджерЗаписи.Количество 		= СтруктураПараметров.КоличествоПонедельник;
		МенеджерЗаписи.Цена 			= СтруктураПараметров.Цена;
		МенеджерЗаписи.Склад 			= мРасчетчик.Склад;
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			Сообщить("Не удалось записать план продаж по дням недели" + Символы.ПС + ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
	// вторник
	Если мТТИзменилась
			ИЛИ НЕ СтруктураПараметров.КоличествоВторник = ПредКоличествоВторник Тогда
			
		МенеджерЗаписи = мПланыПродажПоДнямНедели.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Дата 			= ДатаПонедельник + 86400;
		МенеджерЗаписи.Расчетчик 		= мРасчетчик;
		МенеджерЗаписи.ТорговаяТочка 	= СтруктураПараметров.ТорговаяТочка;
		МенеджерЗаписи.Номенклатура 	= мНоменклатураОтбор;
		МенеджерЗаписи.Количество 		= СтруктураПараметров.КоличествоВторник;
		МенеджерЗаписи.Цена 			= СтруктураПараметров.Цена;
		МенеджерЗаписи.Склад 			= мРасчетчик.Склад;
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			Сообщить("Не удалось записать план продаж по дням недели" + Символы.ПС + ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
	// среда
	Если мТТИзменилась
			ИЛИ НЕ СтруктураПараметров.КоличествоСреда = ПредКоличествоСреда Тогда
			
		МенеджерЗаписи = мПланыПродажПоДнямНедели.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Дата 			= ДатаПонедельник + 2 * 86400;
		МенеджерЗаписи.Расчетчик 		= мРасчетчик;
		МенеджерЗаписи.ТорговаяТочка 	= СтруктураПараметров.ТорговаяТочка;
		МенеджерЗаписи.Номенклатура 	= мНоменклатураОтбор;
		МенеджерЗаписи.Количество 		= СтруктураПараметров.КоличествоСреда;
		МенеджерЗаписи.Цена 			= СтруктураПараметров.Цена;
		МенеджерЗаписи.Склад 			= мРасчетчик.Склад;
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			Сообщить("Не удалось записать план продаж по дням недели" + Символы.ПС + ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
	// четверг
	Если мТТИзменилась
			ИЛИ НЕ СтруктураПараметров.КоличествоЧетверг = ПредКоличествоЧетверг Тогда
			
		МенеджерЗаписи = мПланыПродажПоДнямНедели.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Дата 			= ДатаПонедельник + 3 * 86400;
		МенеджерЗаписи.Расчетчик 		= мРасчетчик;
		МенеджерЗаписи.ТорговаяТочка 	= СтруктураПараметров.ТорговаяТочка;
		МенеджерЗаписи.Номенклатура 	= мНоменклатураОтбор;
		МенеджерЗаписи.Количество 		= СтруктураПараметров.КоличествоЧетверг;
		МенеджерЗаписи.Цена 			= СтруктураПараметров.Цена;
		МенеджерЗаписи.Склад 			= мРасчетчик.Склад;
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			Сообщить("Не удалось записать план продаж по дням недели" + Символы.ПС + ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
	// пятница
	Если мТТИзменилась
			ИЛИ НЕ СтруктураПараметров.КоличествоПятница = ПредКоличествоПятница Тогда
			
		МенеджерЗаписи = мПланыПродажПоДнямНедели.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Дата 			= ДатаПонедельник + 4 * 86400;
		МенеджерЗаписи.Расчетчик 		= мРасчетчик;
		МенеджерЗаписи.ТорговаяТочка 	= СтруктураПараметров.ТорговаяТочка;
		МенеджерЗаписи.Номенклатура 	= мНоменклатураОтбор;
		МенеджерЗаписи.Количество 		= СтруктураПараметров.КоличествоПятница;
		МенеджерЗаписи.Цена 			= СтруктураПараметров.Цена;
		МенеджерЗаписи.Склад 			= мРасчетчик.Склад;
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			Сообщить("Не удалось записать план продаж по дням недели" + Символы.ПС + ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
	// суббота
	Если мТТИзменилась
			ИЛИ НЕ СтруктураПараметров.КоличествоСуббота = ПредКоличествоСуббота Тогда
			
		МенеджерЗаписи = мПланыПродажПоДнямНедели.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Дата 			= ДатаПонедельник + 5 * 86400;
		МенеджерЗаписи.Расчетчик 		= мРасчетчик;
		МенеджерЗаписи.ТорговаяТочка 	= СтруктураПараметров.ТорговаяТочка;
		МенеджерЗаписи.Номенклатура 	= мНоменклатураОтбор;
		МенеджерЗаписи.Количество 		= СтруктураПараметров.КоличествоСуббота;
		МенеджерЗаписи.Цена 			= СтруктураПараметров.Цена;
		МенеджерЗаписи.Склад 			= мРасчетчик.Склад;
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			Сообщить("Не удалось записать план продаж по дням недели" + Символы.ПС + ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
	// воскресенье
	Если мТТИзменилась
			ИЛИ НЕ СтруктураПараметров.КоличествоВоскресенье = ПредКоличествоВоскресенье Тогда
			
		МенеджерЗаписи = мПланыПродажПоДнямНедели.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Дата 			= ДатаПонедельник + 6 * 86400;
		МенеджерЗаписи.Расчетчик 		= мРасчетчик;
		МенеджерЗаписи.ТорговаяТочка 	= СтруктураПараметров.ТорговаяТочка;
		МенеджерЗаписи.Номенклатура 	= мНоменклатураОтбор;
		МенеджерЗаписи.Количество 		= СтруктураПараметров.КоличествоВоскресенье;
		МенеджерЗаписи.Цена 			= СтруктураПараметров.Цена;
		МенеджерЗаписи.Склад 			= мРасчетчик.Склад;
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			Сообщить("Не удалось записать план продаж по дням недели" + Символы.ПС + ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьЗаписиВПланеПродажПоДням(СтруктураПараметров)
	
	Перем мПланыПродажПоДнямНедели, НаборЗаписей;
	
	// удаление в регистре "ПланыПродажПоДнямНедели"
	мПланыПродажПоДнямНедели = РегистрыСведений.ПланыПродажПоДнямНедели;
	
	мРасчетчик 			= СтруктураПараметров.Расчетчик;
	мНоменклатураОтбор 	= СтруктураПараметров.НоменклатураОтбор;
	
	Для Каждого ТекТТ Из СтруктураПараметров.МассивТорговыхТочек Цикл
		Для Каждого ЭлементСписка Из СтруктураПараметров.СписокДатПериода Цикл
			
			НаборЗаписей = мПланыПродажПоДнямНедели.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Дата.Установить(ЭлементСписка.Значение);
			НаборЗаписей.Отбор.ТорговаяТочка.Установить(ТекТТ);
			НаборЗаписей.Отбор.Номенклатура.Установить(мНоменклатураОтбор);
			НаборЗаписей.Прочитать();
			
			НаборЗаписей.Очистить();
			
			Попытка
				НаборЗаписей.Записать();
			Исключение
				Сообщить("Не удалось удалить запись плана продаж по дням недели!" + Символы.ПС + ОписаниеОшибки());
			КонецПопытки;
			
	    КонецЦикла;
    КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьЗаписьВПланыПоСтроке(МенеджерРегистра, СтруктураПараметров)
	
	// очистить строку, если есть
	НаборЗаписей = МенеджерРегистра.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Дата.Установить(СтруктураПараметров.Дата);
	НаборЗаписей.Отбор.ТорговаяТочка.Установить(СтруктураПараметров.ТорговаяТочка);
	НаборЗаписей.Отбор.Номенклатура.Установить(СтруктураПараметров.Номенклатура);
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() > 0 Тогда
		НаборЗаписей.Очистить();
		Попытка
			НаборЗаписей.Записать();
		Исключение
			Сообщить("Не удалось удалить запись плана продаж по дням недели!" + Символы.ПС + ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	НаборЗаписей = Неопределено; // забота о памяти приложения 1С
	
	
	// создание новой записи в регистре
	МенеджерЗаписи = МенеджерРегистра.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтруктураПараметров);
	Попытка
		МенеджерЗаписи.Записать();
	Исключение
		Сообщить("Не удалось записать план продаж по дням недели" + Символы.ПС + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруПараметровДляЗаписиВПланПродаж()
	
	ДатаПн = Дата(1, 1, 1);
	ДатаВт = Дата(1, 1, 1);
	ДатаСр = Дата(1, 1, 1);
	ДатаЧт = Дата(1, 1, 1);
	ДатаПт = Дата(1, 1, 1);
	ДатаСб = Дата(1, 1, 1);
	ДатаВс = Дата(1, 1, 1);
	Для Каждого ЭлементСписка Из ЭтаФорма.СписокДатПериода Цикл
		ТекДень = ЭлементСписка.Значение;
		Если ДеньНедели(ТекДень) = 1 Тогда
			ДатаПн = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 2 Тогда
			ДатаВт = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 3 Тогда
			ДатаСр = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 4 Тогда
			ДатаЧт = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 5 Тогда
			ДатаПт = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 6 Тогда
			ДатаСб = ТекДень;
		Иначе
			ДатаВс = ТекДень;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Расчетчик"		, ЭтаФорма.Расчетчик);
	СтруктураПараметров.Вставить("НоменклатураОтбор", ЭтаФорма.НоменклатураОтбор);
	СтруктураПараметров.Вставить("ДатаПн"		, ДатаПн);
	СтруктураПараметров.Вставить("ДатаВт"		, ДатаВт);
	СтруктураПараметров.Вставить("ДатаСр"		, ДатаСр);
	СтруктураПараметров.Вставить("ДатаЧт"		, ДатаЧт);
	СтруктураПараметров.Вставить("ДатаПт"		, ДатаПт);
	СтруктураПараметров.Вставить("ДатаСб"		, ДатаСб);
	СтруктураПараметров.Вставить("ДатаВс"		, ДатаВс);
	
	Возврат СтруктураПараметров;
	
КонецФункции

Функция ПолучитьСтруктуруПараметровДляЗаписиВПланПродажСервер()
	
	ДатаПн = Дата(1, 1, 1);
	ДатаВт = Дата(1, 1, 1);
	ДатаСр = Дата(1, 1, 1);
	ДатаЧт = Дата(1, 1, 1);
	ДатаПт = Дата(1, 1, 1);
	ДатаСб = Дата(1, 1, 1);
	ДатаВс = Дата(1, 1, 1);
	Для Каждого ЭлементСписка Из ЭтаФорма.СписокДатПериода Цикл
		ТекДень = ЭлементСписка.Значение;
		Если ДеньНедели(ТекДень) = 1 Тогда
			ДатаПн = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 2 Тогда
			ДатаВт = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 3 Тогда
			ДатаСр = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 4 Тогда
			ДатаЧт = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 5 Тогда
			ДатаПт = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 6 Тогда
			ДатаСб = ТекДень;
		Иначе
			ДатаВс = ТекДень;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Расчетчик"		, ЭтаФорма.Расчетчик);
	СтруктураПараметров.Вставить("Склад"			, ЭтаФорма.Расчетчик.Склад);
	СтруктураПараметров.Вставить("НоменклатураОтбор", ЭтаФорма.НоменклатураОтбор);
	СтруктураПараметров.Вставить("ДатаПн"		, ДатаПн);
	СтруктураПараметров.Вставить("ДатаВт"		, ДатаВт);
	СтруктураПараметров.Вставить("ДатаСр"		, ДатаСр);
	СтруктураПараметров.Вставить("ДатаЧт"		, ДатаЧт);
	СтруктураПараметров.Вставить("ДатаПт"		, ДатаПт);
	СтруктураПараметров.Вставить("ДатаСб"		, ДатаСб);
	СтруктураПараметров.Вставить("ДатаВс"		, ДатаВс);
	
	Возврат СтруктураПараметров;
	
КонецФункции


Процедура СформироватьНадписьИтогоКоличество()
	
	ТекИтогоКоличество = ЭтаФорма.ИтогоКоличествоПонедельник + 
							ЭтаФорма.ИтогоКоличествоВторник + 
							ЭтаФорма.ИтогоКоличествоСреда + 
							ЭтаФорма.ИтогоКоличествоЧетверг + 
							ЭтаФорма.ИтогоКоличествоПятница + 
							ЭтаФорма.ИтогоКоличествоСуббота + 
							ЭтаФорма.ИтогоКоличествоВоскресенье;
	Элементы.НадписьИтогоКоличество.Заголовок = Формат(ТекИтогоКоличество, "ЧГ=");
	
КонецПроцедуры

Процедура ИзменитьКоличествоИтогоПоДню(ТекстДняНедели, ФормироватьИтогоЗаНеделю = Истина)
	
	ЭтаФорма["ИтогоКоличество" + ТекстДняНедели] = ЭтаФорма.ПланыПродажПоДнямНедели.Итог("Количество" + ТекстДняНедели);
	
	Если ФормироватьИтогоЗаНеделю Тогда
		СформироватьНадписьИтогоКоличество();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьВсеИтогиПоДням()
	
	ИзменитьКоличествоИтогоПоДню("Понедельник"	, Ложь);
	ИзменитьКоличествоИтогоПоДню("Вторник"		, Ложь);
	ИзменитьКоличествоИтогоПоДню("Среда"		, Ложь);
	ИзменитьКоличествоИтогоПоДню("Четверг"		, Ложь);
	ИзменитьКоличествоИтогоПоДню("Пятница"		, Ложь);
	ИзменитьКоличествоИтогоПоДню("Суббота"		, Ложь);
	ИзменитьКоличествоИтогоПоДню("Воскресенье"	, Ложь);
	
	СформироватьНадписьИтогоКоличество();
	
КонецПроцедуры	


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// реквизиты (параметры), передаваемые из формы-владельца
	ЭтаФорма.НомерНеделиПлан		= ЭтаФорма.Параметры.НомерНеделиПлан;
	Элементы.НадписьТекНомерНедели.Заголовок = Формат(Этаформа.НомерНеделиПлан, "ЧГ=");
	
	ЭтаФорма.НоменклатураОтбор		= ЭтаФорма.Параметры.НоменклатураОтбор; // отбор по текущей номенклатуре
	ЭтаФорма.Расчетчик				= ЭтаФорма.Параметры.Расчетчик; 		// отбор по правам (расчетчик)
	ЭтаФорма.ПоследняяДатаВнесенияЛистовУчета = ЭтаФорма.Параметры.ПоследняяДатаВнесенияЛистовУчета;
	ЭтаФорма.ГлубинаАнализа			= ЭтаФорма.Параметры.ГлубинаАнализа;
	
	ЭтаФорма.ДеньНеделиИзменения 	= Перечисления.ДниНедели.Понедельник;
	
	// списки доступных номенклатур и торговых точек (по правам пользователя, по расчетчику) - в реквизиты формы
	мМассив	= ДопМодульСервер.ПолучитьМассивДоступнойНоменклатуры(ЭтаФорма.Расчетчик);
	ТекСписок = Новый СписокЗначений;
	ТекСписок.ЗагрузитьЗначения(мМассив);
	ЭтаФорма.СписокНоменклатуры = ТекСписок;
	
	мМассивТТ = ДопМодульСервер.ПолучитьМассивДоступныхТорговыхТочек(ЭтаФорма.Расчетчик.Склад, ЭтаФорма.НоменклатураОтбор);
	ТекСписок = Новый СписокЗначений;
	ТекСписок.ЗагрузитьЗначения(мМассивТТ);
	ЭтаФорма.СписокТорговыхТочек = ТекСписок;
	
	
	// вывод только тех дней планируемой недели, которые попадают в выбранный период планирования
	МассивСтруктур = ЭтаФорма.Параметры.ТаблицаДнейПериодаВНеделе;  // массив структур (из-за тонкого клиента...)
	мТаблицаДнейПериодаВНеделе = Новый ТаблицаЗначений;
	мТаблицаДнейПериодаВНеделе.Колонки.Добавить("Дата"		, Новый ОписаниеТипов("Дата"));
	мТаблицаДнейПериодаВНеделе.Колонки.Добавить("ДеньНедели", Новый ОписаниеТипов("Число",, Новый КвалификаторыЧисла(1, 0)));
	Для Каждого СтруктураЗначенийСтроки Из МассивСтруктур Цикл
		НоваяСтрока = мТаблицаДнейПериодаВНеделе.Добавить();
		НоваяСтрока.Дата 		= СтруктураЗначенийСтроки.Дата;
		НоваяСтрока.ДеньНедели 	= СтруктураЗначенийСтроки.ДеньНедели;
	КонецЦикла;
	ЭтаФорма.ТаблицаДатПериода.Загрузить(мТаблицаДнейПериодаВНеделе);
	
	МассивДнейНеделиПериодаВНеделе = мТаблицаДнейПериодаВНеделе.ВыгрузитьКолонку("ДеньНедели");
	УстановитьВидимостьКолонок(МассивДнейНеделиПериодаВНеделе);
	
	мМассив = мТаблицаДнейПериодаВНеделе.ВыгрузитьКолонку("Дата");
	мСписокДатПериода = Новый СписокЗначений;
	мСписокДатПериода.ЗагрузитьЗначения(мМассив);
	ЭтаФорма.СписокДатПериода = мСписокДатПериода;
	
	
	// вывод на экран записей из регистра сведений
	ЗаполнитьТаблицуПродаж();
	
	ОбновитьВсеИтогиПоДням();
	
	// продажи за прошлые периоды
	мСписокНоменклатуры = Новый СписокЗначений;
	мСписокНоменклатуры.Добавить(ЭтаФорма.НоменклатураОтбор);
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ТаблицаПрошлыхПериодов =
			ОбработкаОбъект.ПолучитьПродажиЗаПрошлыеНедели(ЭтаФорма.НомерНеделиПлан, ЭтаФорма.СписокТорговыхТочек, мСписокНоменклатуры, "ПоТорговойТочке");
	
	Если НЕ ТаблицаПрошлыхПериодов = Неопределено Тогда
		ЭтаФорма.ПродажиЗаПрошлыеНедели.Загрузить(ТаблицаПрошлыхПериодов);
	Иначе
		Если ЭтаФорма.ПродажиЗаПрошлыеНедели.Количество() > 0 Тогда
			ЭтаФорма.ПродажиЗаПрошлыеНедели.Очистить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГлубинаАнализаПриИзменении(Элемент)
	
	Если ЭтаФорма.ГлубинаАнализа = 0 Тогда
		ЭтаФорма.ГлубинаАнализа = 1;
	КонецЕсли;
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция РаспределитьПоДнямИЗаписатьСервер(СтруктураПараметров, СтруктураНаличияДнейВПериоде)
	
	Перем Запрос, РезультатыЗапроса;
	
	мРасчетчик 			= СтруктураПараметров.Расчетчик;
	мНоменклатураОтбор 	= СтруктураПараметров.НоменклатураОтбор;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Расчетчик"			, мРасчетчик);
	Запрос.УстановитьПараметр("Склад"				, мРасчетчик.Склад);
	Запрос.УстановитьПараметр("МассивТорговыхТочек"	, СтруктураПараметров.МассивТорговыхТочек);
	Запрос.УстановитьПараметр("Номенклатура"		, мНоменклатураОтбор);
	Запрос.УстановитьПараметр("ГруппаУРЗ"			, мНоменклатураОтбор.ГруппаНоменклатурыУРЗ);
	Запрос.УстановитьПараметр("Весовой"				, мНоменклатураОтбор.Весовой);
	Запрос.УстановитьПараметр("ТаблицаНачальная"	, СтруктураПараметров.ТаблицаНачальная);
	Запрос.УстановитьПараметр("ТаблицаДат"			, СтруктураПараметров.ТаблицаДат);
	
	Запрос.УстановитьПараметр("ЕстьПонедельник"	, СтруктураНаличияДнейВПериоде.ЕстьПонедельник);
	Запрос.УстановитьПараметр("ЕстьВторник"		, СтруктураНаличияДнейВПериоде.ЕстьВторник);
	Запрос.УстановитьПараметр("ЕстьСреда"		, СтруктураНаличияДнейВПериоде.ЕстьСреда);
	Запрос.УстановитьПараметр("ЕстьЧетверг"		, СтруктураНаличияДнейВПериоде.ЕстьЧетверг);
	Запрос.УстановитьПараметр("ЕстьПятница"		, СтруктураНаличияДнейВПериоде.ЕстьПятница);
	Запрос.УстановитьПараметр("ЕстьСуббота"		, СтруктураНаличияДнейВПериоде.ЕстьСуббота);
	Запрос.УстановитьПараметр("ЕстьВоскресенье"	, СтруктураНаличияДнейВПериоде.ЕстьВоскресенье);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаспределениеПродажПроценты.ТорговаяТочка,
	|	РаспределениеПродажПроценты.Номенклатура,
	|	ВЫБОР
	|		КОГДА &ЕстьПонедельник
	|			ТОГДА РаспределениеПродажПроценты.ПроцентПонедельник
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПроцентПонедельник,
	|	ВЫБОР
	|		КОГДА &ЕстьВторник
	|			ТОГДА РаспределениеПродажПроценты.ПроцентВторник
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПроцентВторник,
	|	ВЫБОР
	|		КОГДА &ЕстьСреда
	|			ТОГДА РаспределениеПродажПроценты.ПроцентСреда
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПроцентСреда,
	|	ВЫБОР
	|		КОГДА &ЕстьЧетверг
	|			ТОГДА РаспределениеПродажПроценты.ПроцентЧетверг
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПроцентЧетверг,
	|	ВЫБОР
	|		КОГДА &ЕстьПятница
	|			ТОГДА РаспределениеПродажПроценты.ПроцентПятница
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПроцентПятница,
	|	ВЫБОР
	|		КОГДА &ЕстьСуббота
	|			ТОГДА РаспределениеПродажПроценты.ПроцентСуббота
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПроцентСуббота,
	|	ВЫБОР
	|		КОГДА &ЕстьВоскресенье
	|			ТОГДА РаспределениеПродажПроценты.ПроцентВоскресенье
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПроцентВоскресенье
	|ПОМЕСТИТЬ ВТПроценты
	|ИЗ
	|	РегистрСведений.РаспределениеПродажПоДнямНеделиПроценты КАК РаспределениеПродажПроценты
	|ГДЕ
	|	(РаспределениеПродажПроценты.Номенклатура = &Номенклатура
	|			ИЛИ РаспределениеПродажПроценты.Номенклатура = &ГруппаУРЗ
	|			ИЛИ РаспределениеПродажПроценты.Номенклатура = &Расчетчик
	|			ИЛИ РаспределениеПродажПроценты.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|	И РаспределениеПродажПроценты.ТорговаяТочка В(&МассивТорговыхТочек)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РаспределениеПродажПроценты.ТорговаяТочка,
	|	РаспределениеПродажПроценты.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНачальная.ТорговаяТочка,
	|	ТаблицаНачальная.КоличествоПонедельник,
	|	ТаблицаНачальная.КоличествоВторник,
	|	ТаблицаНачальная.КоличествоСреда,
	|	ТаблицаНачальная.КоличествоЧетверг,
	|	ТаблицаНачальная.КоличествоПятница,
	|	ТаблицаНачальная.КоличествоСуббота,
	|	ТаблицаНачальная.КоличествоВоскресенье,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаНачальная.ПнИзменен
	|			ТОГДА ТаблицаНачальная.КоличествоПонедельник
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ТаблицаНачальная.ВтИзменен
	|			ТОГДА ТаблицаНачальная.КоличествоВторник
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ТаблицаНачальная.СрИзменен
	|			ТОГДА ТаблицаНачальная.КоличествоСреда
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ТаблицаНачальная.ЧтИзменен
	|			ТОГДА ТаблицаНачальная.КоличествоЧетверг
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ТаблицаНачальная.ПтИзменен
	|			ТОГДА ТаблицаНачальная.КоличествоПятница
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ТаблицаНачальная.СбИзменен
	|			ТОГДА ТаблицаНачальная.КоличествоСуббота
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ТаблицаНачальная.ВсИзменен
	|			ТОГДА ТаблицаНачальная.КоличествоВоскресенье
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбщееКоличество,
	|	ТаблицаНачальная.ПланКоличество,
	|	ТаблицаНачальная.ПланСумма,
	|	ТаблицаНачальная.Цена,
	|	ТаблицаНачальная.ПнИзменен,
	|	ТаблицаНачальная.ВтИзменен,
	|	ТаблицаНачальная.СрИзменен,
	|	ТаблицаНачальная.ЧтИзменен,
	|	ТаблицаНачальная.ПтИзменен,
	|	ТаблицаНачальная.СбИзменен,
	|	ТаблицаНачальная.ВсИзменен
	|ПОМЕСТИТЬ ВТТаблицаНачальная
	|ИЗ
	|	&ТаблицаНачальная КАК ТаблицаНачальная
	|ГДЕ
	|	НЕ(ТаблицаНачальная.ПнИзменен
	|				И ТаблицаНачальная.ВтИзменен
	|				И ТаблицаНачальная.СрИзменен
	|				И ТаблицаНачальная.ЧтИзменен
	|				И ТаблицаНачальная.ПтИзменен
	|				И ТаблицаНачальная.СбИзменен
	|				И ТаблицаНачальная.ВсИзменен)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВТПроценты.Номенклатура = &Номенклатура
	|			ТОГДА 1
	|		КОГДА ВТПроценты.Номенклатура = &ГруппаУРЗ
	|			ТОГДА 2
	|		КОГДА ВТПроценты.Номенклатура = &Расчетчик
	|			ТОГДА 3
	|		КОГДА ВТПроценты.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА 4
	|		ИНАЧЕ 5
	|	КОНЕЦ КАК Порядок,
	|	ВТТаблицаНачальная.ТорговаяТочка,
	|	ВТТаблицаНачальная.КоличествоПонедельник,
	|	ВТТаблицаНачальная.КоличествоВторник,
	|	ВТТаблицаНачальная.КоличествоСреда,
	|	ВТТаблицаНачальная.КоличествоЧетверг,
	|	ВТТаблицаНачальная.КоличествоПятница,
	|	ВТТаблицаНачальная.КоличествоСуббота,
	|	ВТТаблицаНачальная.КоличествоВоскресенье,
	|	ВТТаблицаНачальная.ОбщееКоличество,
	|	ВТТаблицаНачальная.ПланКоличество,
	|	ВТТаблицаНачальная.ПланСумма,
	|	ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) КАК ПроцентПонедельник,
	|	ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) КАК ПроцентВторник,
	|	ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) КАК ПроцентСреда,
	|	ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) КАК ПроцентЧетверг,
	|	ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) КАК ПроцентПятница,
	|	ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) КАК ПроцентСуббота,
	|	ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) КАК ПроцентВоскресенье,
	|	ВЫБОР
	|		КОГДА НЕ ВТТаблицаНачальная.ПнИзменен
	|			ТОГДА ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ВТТаблицаНачальная.ВтИзменен
	|			ТОГДА ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ВТТаблицаНачальная.СрИзменен
	|			ТОГДА ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ВТТаблицаНачальная.ЧтИзменен
	|			ТОГДА ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ВТТаблицаНачальная.ПтИзменен
	|			ТОГДА ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ВТТаблицаНачальная.СбИзменен
	|			ТОГДА ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ВТТаблицаНачальная.ВсИзменен
	|			ТОГДА ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбщийПроцент,
	|	ВТТаблицаНачальная.Цена КАК Цена,
	|	ВТТаблицаНачальная.ПнИзменен,
	|	ВТТаблицаНачальная.ВтИзменен,
	|	ВТТаблицаНачальная.СрИзменен,
	|	ВТТаблицаНачальная.ЧтИзменен,
	|	ВТТаблицаНачальная.ПтИзменен,
	|	ВТТаблицаНачальная.СбИзменен,
	|	ВТТаблицаНачальная.ВсИзменен
	|ПОМЕСТИТЬ ВТСлужебная
	|ИЗ
	|	ВТТаблицаНачальная КАК ВТТаблицаНачальная
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПроценты КАК ВТПроценты
	|		ПО ВТПроценты.ТорговаяТочка = ВТТаблицаНачальная.ТорговаяТочка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСлужебная.Порядок КАК Порядок,
	|	ВТСлужебная.ТорговаяТочка,
	|	ВЫБОР
	|		КОГДА ВТСлужебная.ПнИзменен
	|			ТОГДА ВТСлужебная.КоличествоПонедельник
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТСлужебная.ОбщийПроцент > 0
	|					ТОГДА ВЫБОР
	|							КОГДА &Весовой = ИСТИНА
	|								ТОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПонедельник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + ВЫБОР
	|										КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПонедельник / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПонедельник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + 0.05
	|											ТОГДА 0
	|										ИНАЧЕ 0.1
	|									КОНЕЦ
	|							ИНАЧЕ (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПонедельник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + ВЫБОР
	|									КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПонедельник / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПонедельник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + 0.5
	|										ТОГДА 0
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоПонедельник,
	|	ВЫБОР
	|		КОГДА ВТСлужебная.ВтИзменен
	|			ТОГДА ВТСлужебная.КоличествоВторник
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТСлужебная.ОбщийПроцент > 0
	|					ТОГДА ВЫБОР
	|							КОГДА &Весовой = ИСТИНА
	|								ТОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВторник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + ВЫБОР
	|										КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВторник / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВторник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + 0.05
	|											ТОГДА 0
	|										ИНАЧЕ 0.1
	|									КОНЕЦ
	|							ИНАЧЕ (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВторник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + ВЫБОР
	|									КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВторник / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВторник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + 0.5
	|										ТОГДА 0
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоВторник,
	|	ВЫБОР
	|		КОГДА ВТСлужебная.СрИзменен
	|			ТОГДА ВТСлужебная.КоличествоСреда
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТСлужебная.ОбщийПроцент > 0
	|					ТОГДА ВЫБОР
	|							КОГДА &Весовой = ИСТИНА
	|								ТОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСреда / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + ВЫБОР
	|										КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСреда / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСреда / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + 0.05
	|											ТОГДА 0
	|										ИНАЧЕ 0.1
	|									КОНЕЦ
	|							ИНАЧЕ (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСреда / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + ВЫБОР
	|									КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСреда / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСреда / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + 0.5
	|										ТОГДА 0
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоСреда,
	|	ВЫБОР
	|		КОГДА ВТСлужебная.ЧтИзменен
	|			ТОГДА ВТСлужебная.КоличествоЧетверг
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТСлужебная.ОбщийПроцент > 0
	|					ТОГДА ВЫБОР
	|							КОГДА &Весовой = ИСТИНА
	|								ТОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентЧетверг / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + ВЫБОР
	|										КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентЧетверг / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентЧетверг / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + 0.05
	|											ТОГДА 0
	|										ИНАЧЕ 0.1
	|									КОНЕЦ
	|							ИНАЧЕ (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентЧетверг / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + ВЫБОР
	|									КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентЧетверг / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентЧетверг / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + 0.5
	|										ТОГДА 0
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоЧетверг,
	|	ВЫБОР
	|		КОГДА ВТСлужебная.ПтИзменен
	|			ТОГДА ВТСлужебная.КоличествоПятница
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТСлужебная.ОбщийПроцент > 0
	|					ТОГДА ВЫБОР
	|							КОГДА &Весовой = ИСТИНА
	|								ТОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПятница / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + ВЫБОР
	|										КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПятница / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПятница / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + 0.05
	|											ТОГДА 0
	|										ИНАЧЕ 0.1
	|									КОНЕЦ
	|							ИНАЧЕ (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПятница / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + ВЫБОР
	|									КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПятница / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПятница / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + 0.5
	|										ТОГДА 0
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоПятница,
	|	ВЫБОР
	|		КОГДА ВТСлужебная.СбИзменен
	|			ТОГДА ВТСлужебная.КоличествоСуббота
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТСлужебная.ОбщийПроцент > 0
	|					ТОГДА ВЫБОР
	|							КОГДА &Весовой = ИСТИНА
	|								ТОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСуббота / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + ВЫБОР
	|										КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСуббота / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСуббота / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + 0.05
	|											ТОГДА 0
	|										ИНАЧЕ 0.1
	|									КОНЕЦ
	|							ИНАЧЕ (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСуббота / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + ВЫБОР
	|									КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСуббота / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСуббота / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + 0.5
	|										ТОГДА 0
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоСуббота,
	|	ВЫБОР
	|		КОГДА ВТСлужебная.ВсИзменен
	|			ТОГДА ВТСлужебная.КоличествоВоскресенье
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТСлужебная.ОбщийПроцент > 0
	|					ТОГДА ВЫБОР
	|							КОГДА &Весовой = ИСТИНА
	|								ТОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВоскресенье / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + ВЫБОР
	|										КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВоскресенье / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВоскресенье / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + 0.05
	|											ТОГДА 0
	|										ИНАЧЕ 0.1
	|									КОНЕЦ
	|							ИНАЧЕ (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВоскресенье / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + ВЫБОР
	|									КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВоскресенье / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВоскресенье / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + 0.5
	|										ТОГДА 0
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоВоскресенье,
	|	ВТСлужебная.ПланСумма КАК ПланСумма,
	|	ВТСлужебная.Цена КАК Цена,
	|	ВТСлужебная.ПнИзменен,
	|	ВТСлужебная.ВтИзменен,
	|	ВТСлужебная.СрИзменен,
	|	ВТСлужебная.ЧтИзменен,
	|	ВТСлужебная.ПтИзменен,
	|	ВТСлужебная.СбИзменен,
	|	ВТСлужебная.ВсИзменен
	|ПОМЕСТИТЬ ВТТаблицаПлановОбщие
	|ИЗ
	|	ВТСлужебная КАК ВТСлужебная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТаблицаПлановОбщие.ТорговаяТочка,
	|	МИНИМУМ(ВТТаблицаПлановОбщие.Порядок) КАК Порядок
	|ПОМЕСТИТЬ ВТТаблицаПлановПорядок
	|ИЗ
	|	ВТТаблицаПлановОбщие КАК ВТТаблицаПлановОбщие
	|ГДЕ
	|	НЕ ВТТаблицаПлановОбщие.Порядок = 5
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТаблицаПлановОбщие.ТорговаяТочка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТаблицаПлановОбщие.ТорговаяТочка КАК ТорговаяТочка,
	|	ВТТаблицаПлановОбщие.КоличествоПонедельник КАК КоличествоПонедельник,
	|	ВТТаблицаПлановОбщие.КоличествоВторник КАК КоличествоВторник,
	|	ВТТаблицаПлановОбщие.КоличествоСреда КАК КоличествоСреда,
	|	ВТТаблицаПлановОбщие.КоличествоЧетверг КАК КоличествоЧетверг,
	|	ВТТаблицаПлановОбщие.КоличествоПятница КАК КоличествоПятница,
	|	ВТТаблицаПлановОбщие.КоличествоСуббота КАК КоличествоСуббота,
	|	ВТТаблицаПлановОбщие.КоличествоВоскресенье КАК КоличествоВоскресенье,
	|	ВТТаблицаПлановОбщие.КоличествоПонедельник + ВТТаблицаПлановОбщие.КоличествоВторник + ВТТаблицаПлановОбщие.КоличествоСреда + ВТТаблицаПлановОбщие.КоличествоЧетверг + ВТТаблицаПлановОбщие.КоличествоПятница + ВТТаблицаПлановОбщие.КоличествоСуббота + ВТТаблицаПлановОбщие.КоличествоВоскресенье КАК ПланКоличество,
	|	ВТТаблицаПлановОбщие.ПланСумма КАК ПланСумма,
	|	ВТТаблицаПлановОбщие.Цена КАК Цена,
	|	ВТТаблицаПлановОбщие.ПнИзменен КАК ПнИзменен,
	|	ВТТаблицаПлановОбщие.ВтИзменен КАК ВтИзменен,
	|	ВТТаблицаПлановОбщие.СрИзменен КАК СрИзменен,
	|	ВТТаблицаПлановОбщие.ЧтИзменен КАК ЧтИзменен,
	|	ВТТаблицаПлановОбщие.ПтИзменен КАК ПтИзменен,
	|	ВТТаблицаПлановОбщие.СбИзменен КАК СбИзменен,
	|	ВТТаблицаПлановОбщие.ВсИзменен КАК ВсИзменен
	|ПОМЕСТИТЬ ВТРаспределение
	|ИЗ
	|	ВТТаблицаПлановОбщие КАК ВТТаблицаПлановОбщие
	|ГДЕ
	|	ВТТаблицаПлановОбщие.Порядок = 5
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТТаблицаПлановОбщие.ТорговаяТочка,
	|	ВТТаблицаПлановОбщие.КоличествоПонедельник,
	|	ВТТаблицаПлановОбщие.КоличествоВторник,
	|	ВТТаблицаПлановОбщие.КоличествоСреда,
	|	ВТТаблицаПлановОбщие.КоличествоЧетверг,
	|	ВТТаблицаПлановОбщие.КоличествоПятница,
	|	ВТТаблицаПлановОбщие.КоличествоСуббота,
	|	ВТТаблицаПлановОбщие.КоличествоВоскресенье,
	|	ВТТаблицаПлановОбщие.КоличествоПонедельник + ВТТаблицаПлановОбщие.КоличествоВторник + ВТТаблицаПлановОбщие.КоличествоСреда + ВТТаблицаПлановОбщие.КоличествоЧетверг + ВТТаблицаПлановОбщие.КоличествоПятница + ВТТаблицаПлановОбщие.КоличествоСуббота + ВТТаблицаПлановОбщие.КоличествоВоскресенье,
	|	ВТТаблицаПлановОбщие.ПланСумма,
	|	ВТТаблицаПлановОбщие.Цена,
	|	ВТТаблицаПлановОбщие.ПнИзменен,
	|	ВТТаблицаПлановОбщие.ВтИзменен,
	|	ВТТаблицаПлановОбщие.СрИзменен,
	|	ВТТаблицаПлановОбщие.ЧтИзменен,
	|	ВТТаблицаПлановОбщие.ПтИзменен,
	|	ВТТаблицаПлановОбщие.СбИзменен,
	|	ВТТаблицаПлановОбщие.ВсИзменен
	|ИЗ
	|	ВТТаблицаПлановОбщие КАК ВТТаблицаПлановОбщие
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаблицаПлановПорядок КАК ВТТаблицаПлановПорядок
	|		ПО (ВТТаблицаПлановПорядок.ТорговаяТочка = ВТТаблицаПлановОбщие.ТорговаяТочка)
	|			И (ВТТаблицаПлановПорядок.Порядок = ВТТаблицаПлановОбщие.Порядок)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДат.Дата КАК Дата
	|ПОМЕСТИТЬ ВТДаты
	|ИЗ
	|	&ТаблицаДат КАК ТаблицаДат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДаты.Дата КАК Дата,
	|	&Расчетчик КАК Расчетчик,
	|	&Склад КАК Склад,
	|	ВТРаспределение.ТорговаяТочка КАК ТорговаяТочка,
	|	&Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 1
	|			ТОГДА ВТРаспределение.КоличествоПонедельник
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 2
	|			ТОГДА ВТРаспределение.КоличествоВторник
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 3
	|			ТОГДА ВТРаспределение.КоличествоСреда
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 4
	|			ТОГДА ВТРаспределение.КоличествоЧетверг
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 5
	|			ТОГДА ВТРаспределение.КоличествоПятница
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 6
	|			ТОГДА ВТРаспределение.КоличествоСуббота
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 7
	|			ТОГДА ВТРаспределение.КоличествоВоскресенье
	|	КОНЕЦ КАК Количество,
	|	ЕСТЬNULL(ВТРаспределение.Цена, 0) КАК Цена
	|ИЗ
	|	ВТДаты КАК ВТДаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРаспределение КАК ВТРаспределение
	|		ПО (ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 1
	|					И ВТРаспределение.КоличествоПонедельник > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 2
	|					И ВТРаспределение.КоличествоВторник > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 3
	|					И ВТРаспределение.КоличествоСреда > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 4
	|					И ВТРаспределение.КоличествоЧетверг > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 5
	|					И ВТРаспределение.КоличествоПятница > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 6
	|					И ВТРаспределение.КоличествоСуббота > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 7
	|					И ВТРаспределение.КоличествоВоскресенье > 0)
	|ГДЕ
	|	НЕ ВТРаспределение.ТорговаяТочка ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРаспределение.ТорговаяТочка,
	|	ВТРаспределение.КоличествоПонедельник,
	|	ВТРаспределение.КоличествоВторник,
	|	ВТРаспределение.КоличествоСреда,
	|	ВТРаспределение.КоличествоЧетверг,
	|	ВТРаспределение.КоличествоПятница,
	|	ВТРаспределение.КоличествоСуббота,
	|	ВТРаспределение.КоличествоВоскресенье,
	|	ВТРаспределение.ПланКоличество,
	|	ВТРаспределение.ПланСумма,
	|	ВТРаспределение.Цена,
	|	ВТРаспределение.ПнИзменен,
	|	ВТРаспределение.ВтИзменен,
	|	ВТРаспределение.СрИзменен,
	|	ВТРаспределение.ЧтИзменен,
	|	ВТРаспределение.ПтИзменен,
	|	ВТРаспределение.СбИзменен,
	|	ВТРаспределение.ВсИзменен
	|ИЗ
	|	ВТРаспределение КАК ВТРаспределение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПроценты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТТаблицаНачальная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСлужебная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТТаблицаПлановОбщие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТТаблицаПлановПорядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРаспределение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДаты";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	
	// запись в регистр "ПланыПродажПоДнямНедели" измененных данных
	мПланыПродажПоДнямНедели = РегистрыСведений.ПланыПродажПоДнямНедели;
	
	ТаблицаЗапроса = РезультатыЗапроса[7].Выгрузить();
	
	Для Каждого ЭлементСписка Из СтруктураПараметров.СписокДатПериода Цикл
		
		ТекДата = ЭлементСписка.Значение;
		
		НаборЗаписей = мПланыПродажПоДнямНедели.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Дата.Установить(ТекДата);
		НаборЗаписей.Отбор.Расчетчик.Установить(мРасчетчик);
		НаборЗаписей.Отбор.Номенклатура.Установить(мНоменклатураОтбор);
		НаборЗаписей.Прочитать();
		
		ВремТаблица = ТаблицаЗапроса.Скопировать(Новый Структура("Дата", ТекДата));
		НаборЗаписей.Загрузить(ВремТаблица);
	
		Попытка
			НаборЗаписей.Записать();
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
	КонецЦикла;	
	
	
	Возврат РезультатыЗапроса[8].Выгрузить();
	
КонецФункции

Процедура РаспределитьПоДнямСервер()
	
	Перем мТаблицаНачальная, ТекНоменклатура, Запрос, РезультатыЗапроса, РезультатЗапроса;
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровДляЗаписиВПланПродажСервер();
	СтруктураПараметров.Вставить("СписокДатПериода"		, ЭтаФорма.СписокДатПериода);
	СтруктураПараметров.Вставить("МассивТорговыхТочек"	, ЭтаФорма.СписокТорговыхТочек);
	
	мТаблицаНачальная = ЭтаФорма.ПланыПродажПоДнямНедели.Выгрузить();
	СтруктураПараметров.Вставить("ТаблицаНачальная"	, мТаблицаНачальная);
	
	СтруктураПараметров.Вставить("ТаблицаДат"		, ЭтаФорма.ТаблицаДатПериода.Выгрузить(, "Дата"));
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	СтруктураНаличияДнейВПериоде = ОбработкаОбъект.ПолучитьСтруктуруНаличияДнейВПериоде(СтруктураПараметров.СписокДатПериода);
	
	//
	мТаблицаНаЭкран = РаспределитьПоДнямИЗаписатьСервер(СтруктураПараметров, СтруктураНаличияДнейВПериоде);
	
	ЭтаФорма.ПланыПродажПоДнямНедели.Загрузить(мТаблицаНаЭкран);
		
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьПоДням(Команда)

	Если ЭтаФорма.ПланыПродажПоДнямНедели.Количество() = 0 Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Нет основания для распределения!";
		СообщениеПользователю.УстановитьДанные(ЭтаФорма.ПланыПродажПоДнямНедели);
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	РаспределитьПоДнямСервер();
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ДобавитьПроцентИзмененияВПланПродажПоДнямСервер(ВремТаблица, СтруктураПараметров)
	
	Перем мПланыПродажПоДнямНедели, мКоэффициент, ТекНоменклатура, ТекПорядокОкругления;
	
	
	// служ. переменные
	мПланыПродажПоДнямНедели = РегистрыСведений.ПланыПродажПоДнямНедели;
	
	мКоэффициент = (1 + СтруктураПараметров.ПроцентИзменения / 100);
	ТекНоменклатура 		= СтруктураПараметров.НоменклатураОтбор;
	ТекПорядокОкругления 	= ?(ТекНоменклатура.Весовой, 1, 0);
	
	ДатаПн = СтруктураПараметров.ДатаПн;
	ДатаВт = СтруктураПараметров.ДатаВт;
	ДатаСр = СтруктураПараметров.ДатаСр;
	ДатаЧт = СтруктураПараметров.ДатаЧт;
	ДатаПт = СтруктураПараметров.ДатаПт;
	ДатаСб = СтруктураПараметров.ДатаСб;
	ДатаВс = СтруктураПараметров.ДатаВс;
	
	
	// обработка таблицы
	СтруктураЗаписи = Новый Структура("Дата, ТорговаяТочка, Количество, Цена");
	СтруктураЗаписи.Вставить("Расчетчик"	, СтруктураПараметров.Расчетчик);
	СтруктураЗаписи.Вставить("Склад"		, СтруктураПараметров.Расчетчик.Склад);
	СтруктураЗаписи.Вставить("Номенклатура"	, СтруктураПараметров.НоменклатураОтбор);
	
	Для Каждого СтрокаТаблицы Из ВремТаблица Цикл
		
		Если НЕ СтрокаТаблицы.Изменять Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураЗаписи.ТорговаяТочка 	= СтрокаТаблицы.ТорговаяТочка;
		СтруктураЗаписи.Цена 			= СтрокаТаблицы.Цена;
		
		Если НЕ СтрокаТаблицы.КоличествоПонедельник = 0 Тогда
			СтрокаТаблицы.КоличествоПонедельник = Окр(СтрокаТаблицы.КоличествоПонедельник * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоПонедельник;
			СтруктураЗаписи.Дата 		= ДатаПн;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если НЕ СтрокаТаблицы.КоличествоВторник = 0 Тогда
			СтрокаТаблицы.КоличествоВторник 		= Окр(СтрокаТаблицы.КоличествоВторник * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоВторник;
			СтруктураЗаписи.Дата 		= ДатаВт;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если НЕ СтрокаТаблицы.КоличествоСреда = 0 Тогда
			СтрокаТаблицы.КоличествоСреда 			= Окр(СтрокаТаблицы.КоличествоСреда * мКоэффициент		, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоСреда;
			СтруктураЗаписи.Дата 		= ДатаСр;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если НЕ СтрокаТаблицы.КоличествоЧетверг = 0 Тогда
			СтрокаТаблицы.КоличествоЧетверг 		= Окр(СтрокаТаблицы.КоличествоЧетверг * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоЧетверг;
			СтруктураЗаписи.Дата 		= ДатаЧт;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если НЕ СтрокаТаблицы.КоличествоПятница = 0 Тогда
			СтрокаТаблицы.КоличествоПятница 		= Окр(СтрокаТаблицы.КоличествоПятница * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоПятница;
			СтруктураЗаписи.Дата 		= ДатаПт;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если НЕ СтрокаТаблицы.КоличествоСуббота = 0 Тогда
			СтрокаТаблицы.КоличествоСуббота 		= Окр(СтрокаТаблицы.КоличествоСуббота * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоСуббота;
			СтруктураЗаписи.Дата 		= ДатаСб;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если НЕ СтрокаТаблицы.КоличествоВоскресенье = 0 Тогда
			СтрокаТаблицы.КоличествоВоскресенье 	= Окр(СтрокаТаблицы.КоличествоВоскресенье * мКоэффициент, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоВоскресенье;
			СтруктураЗаписи.Дата 		= ДатаВс;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		
		СтрокаТаблицы.ПланКоличество 	= СтрокаТаблицы.КоличествоПонедельник +
											СтрокаТаблицы.КоличествоВторник +
											СтрокаТаблицы.КоличествоСреда +
											СтрокаТаблицы.КоличествоЧетверг +
											СтрокаТаблицы.КоличествоПятница +
											СтрокаТаблицы.КоличествоСуббота +
											СтрокаТаблицы.КоличествоВоскресенье;
		СтрокаТаблицы.ПланСумма 		= СтрокаТаблицы.Цена * СтрокаТаблицы.ПланКоличество;
		
	КонецЦикла;                                                                          
	
КонецПроцедуры

// Изменяет числовые показатели в регистре сведений "ПланыПродажПоДнямНедели" на процент изменения.
//
Процедура ДобавитьПроцентИзмененияВПланПродажПоДням(СтруктураПараметров)
	
	ВремТаблица = ЭтаФорма.ПланыПродажПоДнямНедели.Выгрузить();
	
	ДобавитьПроцентИзмененияВПланПродажПоДнямСервер(ВремТаблица, СтруктураПараметров);
	
	ЭтаФорма.ПланыПродажПоДнямНедели.Загрузить(ВремТаблица);
	
	ОбновитьВсеИтогиПоДням();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПланПродаж(Команда)

	СтруктураПараметров = ПолучитьСтруктуруПараметровДляЗаписиВПланПродаж();
	СтруктураПараметров.Вставить("ПроцентИзменения", ЭтаФорма.ПроцентИзменения);
	
	ДобавитьПроцентИзмененияВПланПродажПоДням(СтруктураПараметров);
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьРезультатыЗапросаПоРаспределению(мТаблицаФактов, СтруктураПараметров, СтруктураНаличияДнейВПериоде)
	
	Перем мДатаНачала, мДатаОкончания, мДатаНачала2, ТаблицаДат, НоваяСтрока, Запрос, ОбработкаОбъект;
	
	мНоменклатураОтбор = СтруктураПараметров.НоменклатураОтбор;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаАссортимента"	, КонецДня(ТекущаяДата() + 86400));
	Запрос.УстановитьПараметр("Расчетчик"			, СтруктураПараметров.Расчетчик);
	Запрос.УстановитьПараметр("МассивНоменклатуры"	, СтруктураПараметров.МассивНоменклатуры);
	Запрос.УстановитьПараметр("МассивТорговыхТочек"	, СтруктураПараметров.МассивТорговыхТочек);
	Запрос.УстановитьПараметр("НоменклатураОтбор"	, мНоменклатураОтбор);
	Запрос.УстановитьПараметр("ГруппаУРЗ"			, мНоменклатураОтбор.ГруппаНоменклатурыУРЗ);
	Запрос.УстановитьПараметр("Весовой"				, мНоменклатураОтбор.Весовой);
	Запрос.УстановитьПараметр("МинКоличествоПлан"	, ?(НЕ мНоменклатураОтбор.Весовой, 1, 0.2));
	Запрос.УстановитьПараметр("ТаблицаФактов"		, мТаблицаФактов);	
	Запрос.УстановитьПараметр("ТаблицаДат"			, СтруктураПараметров.ТаблицаДат);
	
	Запрос.УстановитьПараметр("ЕстьПонедельник"	, СтруктураНаличияДнейВПериоде.ЕстьПонедельник);
	Запрос.УстановитьПараметр("ЕстьВторник"		, СтруктураНаличияДнейВПериоде.ЕстьВторник);
	Запрос.УстановитьПараметр("ЕстьСреда"		, СтруктураНаличияДнейВПериоде.ЕстьСреда);
	Запрос.УстановитьПараметр("ЕстьЧетверг"		, СтруктураНаличияДнейВПериоде.ЕстьЧетверг);
	Запрос.УстановитьПараметр("ЕстьПятница"		, СтруктураНаличияДнейВПериоде.ЕстьПятница);
	Запрос.УстановитьПараметр("ЕстьСуббота"		, СтруктураНаличияДнейВПериоде.ЕстьСуббота);
	Запрос.УстановитьПараметр("ЕстьВоскресенье"	, СтруктураНаличияДнейВПериоде.ЕстьВоскресенье);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаспределениеПродажПроценты.Номенклатура КАК Номенклатура,
	|	РаспределениеПродажПроценты.ТорговаяТочка КАК ТорговаяТочка,
	|	РаспределениеПродажПроценты.ПроцентПонедельник,
	|	РаспределениеПродажПроценты.ПроцентВторник,
	|	РаспределениеПродажПроценты.ПроцентСреда,
	|	РаспределениеПродажПроценты.ПроцентЧетверг,
	|	РаспределениеПродажПроценты.ПроцентПятница,
	|	РаспределениеПродажПроценты.ПроцентСуббота,
	|	РаспределениеПродажПроценты.ПроцентВоскресенье
	|ПОМЕСТИТЬ ВТПроценты
	|ИЗ
	|	РегистрСведений.РаспределениеПродажПоДнямНеделиПроценты КАК РаспределениеПродажПроценты
	|ГДЕ
	|	(РаспределениеПродажПроценты.Номенклатура = &НоменклатураОтбор
	|			ИЛИ РаспределениеПродажПроценты.Номенклатура = &ГруппаУРЗ
	|			ИЛИ РаспределениеПродажПроценты.Номенклатура = &Расчетчик
	|			ИЛИ РаспределениеПродажПроценты.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|	И РаспределениеПродажПроценты.ТорговаяТочка В(&МассивТорговыхТочек)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	ТорговаяТочка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварныйАссортиментТочек.ТорговаяТочка КАК ТорговаяТочка
	|ПОМЕСТИТЬ ВТНоменклатураАссортимента
	|ИЗ
	|	РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(
	|			&ДатаАссортимента,
	|			ТорговаяТочка В (&МассивТорговыхТочек)
	|				И Номенклатура = &НоменклатураОтбор) КАК ТоварныйАссортиментТочек
	|ГДЕ
	|	НЕ ТоварныйАссортиментТочек.Выведена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.ТорговаяТочка КАК ТорговаяТочка,
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
	|	ЦеныНоменклатурыСрезПоследних.Период КАК Период
	|ПОМЕСТИТЬ ВТЦены
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, Номенклатура = &НоменклатураОтбор) КАК ЦеныНоменклатурыСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТорговаяТочка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаФактов.ТорговаяТочка,
	|	ТаблицаФактов.ПланКоличество,
	|	ТаблицаФактов.Цена
	|ПОМЕСТИТЬ ВТТаблицаФактов
	|ИЗ
	|	&ТаблицаФактов КАК ТаблицаФактов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВТПроценты.Номенклатура = &НоменклатураОтбор
	|			ТОГДА 1
	|		КОГДА ВТПроценты.Номенклатура = &ГруппаУРЗ
	|			ТОГДА 2
	|		КОГДА ВТПроценты.Номенклатура = &Расчетчик
	|			ТОГДА 3
	|		КОГДА ВТПроценты.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА 4
	|		ИНАЧЕ 5
	|	КОНЕЦ КАК Порядок,
	|	ТаблицаФактов.ТорговаяТочка,
	|	ВЫБОР
	|		КОГДА &Весовой = ИСТИНА
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) / 100 КАК ЧИСЛО(15, 1))) + ВЫБОР
	|					КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) / 100 КАК ЧИСЛО(15, 1))) + 0.05
	|							И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) > 0
	|									И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) / 100 < 0.05)
	|						ТОГДА ВЫБОР
	|								КОГДА 0.2 - (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) / 100 КАК ЧИСЛО(15, 1))) > 0
	|									ТОГДА 0.2 - (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) / 100 КАК ЧИСЛО(15, 1)))
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0.1 + ВЫБОР
	|							КОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) / 100 КАК ЧИСЛО(15, 1))) = 0
	|								ТОГДА 0.1
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) / 100 КАК ЧИСЛО(15, 0))) + ВЫБОР
	|				КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) / 100 КАК ЧИСЛО(15, 0))) + 0.5
	|						И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) > 0
	|								И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) / 100 < 0.5)
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоПонедельник,
	|	ВЫБОР
	|		КОГДА &Весовой = ИСТИНА
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) / 100 КАК ЧИСЛО(15, 1))) + ВЫБОР
	|					КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) / 100 КАК ЧИСЛО(15, 1))) + 0.05
	|							И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) > 0
	|									И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) / 100 < 0.05)
	|						ТОГДА ВЫБОР
	|								КОГДА 0.2 - (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) / 100 КАК ЧИСЛО(15, 1))) > 0
	|									ТОГДА 0.2 - (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) / 100 КАК ЧИСЛО(15, 1)))
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0.1 + ВЫБОР
	|							КОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) / 100 КАК ЧИСЛО(15, 1))) = 0
	|								ТОГДА 0.1
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) / 100 КАК ЧИСЛО(15, 0))) + ВЫБОР
	|				КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) / 100 КАК ЧИСЛО(15, 0))) + 0.5
	|						И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) > 0
	|								И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) / 100 < 0.5)
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоВторник,
	|	ВЫБОР
	|		КОГДА &Весовой = ИСТИНА
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) / 100 КАК ЧИСЛО(15, 1))) + ВЫБОР
	|					КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) / 100 КАК ЧИСЛО(15, 1))) + 0.05
	|							И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) > 0
	|									И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) / 100 < 0.05)
	|						ТОГДА ВЫБОР
	|								КОГДА 0.2 - (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) / 100 КАК ЧИСЛО(15, 1))) > 0
	|									ТОГДА 0.2 - (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) / 100 КАК ЧИСЛО(15, 1)))
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0.1 + ВЫБОР
	|							КОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) / 100 КАК ЧИСЛО(15, 1))) = 0
	|								ТОГДА 0.1
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) / 100 КАК ЧИСЛО(15, 0))) + ВЫБОР
	|				КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) / 100 КАК ЧИСЛО(15, 0))) + 0.5
	|						И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) > 0
	|								И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) / 100 < 0.5)
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоСреда,
	|	ВЫБОР
	|		КОГДА &Весовой = ИСТИНА
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) / 100 КАК ЧИСЛО(15, 1))) + ВЫБОР
	|					КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) / 100 КАК ЧИСЛО(15, 1))) + 0.05
	|							И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) > 0
	|									И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) / 100 < 0.05)
	|						ТОГДА ВЫБОР
	|								КОГДА 0.2 - (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) / 100 КАК ЧИСЛО(15, 1))) > 0
	|									ТОГДА 0.2 - (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) / 100 КАК ЧИСЛО(15, 1)))
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0.1 + ВЫБОР
	|							КОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) / 100 КАК ЧИСЛО(15, 1))) = 0
	|								ТОГДА 0.1
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) / 100 КАК ЧИСЛО(15, 0))) + ВЫБОР
	|				КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) / 100 КАК ЧИСЛО(15, 0))) + 0.5
	|						И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) > 0
	|								И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) / 100 < 0.5)
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоЧетверг,
	|	ВЫБОР
	|		КОГДА &Весовой = ИСТИНА
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) / 100 КАК ЧИСЛО(15, 1))) + ВЫБОР
	|					КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) / 100 КАК ЧИСЛО(15, 1))) + 0.05
	|							И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) > 0
	|									И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) / 100 < 0.05)
	|						ТОГДА ВЫБОР
	|								КОГДА 0.2 - (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) / 100 КАК ЧИСЛО(15, 1))) > 0
	|									ТОГДА 0.2 - (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) / 100 КАК ЧИСЛО(15, 1)))
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0.1 + ВЫБОР
	|							КОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) / 100 КАК ЧИСЛО(15, 1))) = 0
	|								ТОГДА 0.1
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) / 100 КАК ЧИСЛО(15, 0))) + ВЫБОР
	|				КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) / 100 КАК ЧИСЛО(15, 0))) + 0.5
	|						И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) > 0
	|								И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) / 100 < 0.5)
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоПятница,
	|	ВЫБОР
	|		КОГДА &Весовой = ИСТИНА
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) / 100 КАК ЧИСЛО(15, 1))) + ВЫБОР
	|					КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) / 100 КАК ЧИСЛО(15, 1))) + 0.05
	|							И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) > 0
	|									И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) / 100 < 0.05)
	|						ТОГДА ВЫБОР
	|								КОГДА 0.2 - (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) / 100 КАК ЧИСЛО(15, 1))) > 0
	|									ТОГДА 0.2 - (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) / 100 КАК ЧИСЛО(15, 1)))
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0.1 + ВЫБОР
	|							КОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) / 100 КАК ЧИСЛО(15, 1))) = 0
	|								ТОГДА 0.1
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) / 100 КАК ЧИСЛО(15, 0))) + ВЫБОР
	|				КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) / 100 КАК ЧИСЛО(15, 0))) + 0.5
	|						И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) > 0
	|								И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) / 100 < 0.5)
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоСуббота,
	|	ВЫБОР
	|		КОГДА &Весовой = ИСТИНА
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) / 100 КАК ЧИСЛО(15, 1))) + ВЫБОР
	|					КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) / 100 КАК ЧИСЛО(15, 1))) + 0.05
	|							И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) > 0
	|									И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) / 100 < 0.05)
	|						ТОГДА ВЫБОР
	|								КОГДА 0.2 - (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) / 100 КАК ЧИСЛО(15, 1))) > 0
	|									ТОГДА 0.2 - (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) / 100 КАК ЧИСЛО(15, 1)))
	|								ИНАЧЕ 0
	|							КОНЕЦ
	|					ИНАЧЕ 0.1 + ВЫБОР
	|							КОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) / 100 КАК ЧИСЛО(15, 1))) = 0
	|								ТОГДА 0.1
	|							ИНАЧЕ 0
	|						КОНЕЦ
	|				КОНЕЦ
	|		ИНАЧЕ (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) / 100 КАК ЧИСЛО(15, 0))) + ВЫБОР
	|				КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) / 100 КАК ЧИСЛО(15, 0))) + 0.5
	|						И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) > 0
	|								И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) / 100 < 0.5)
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоВоскресенье,
	|	ТаблицаФактов.Цена КАК Цена
	|ПОМЕСТИТЬ ВТТаблицаПлановОбщие
	|ИЗ
	|	ВТТаблицаФактов КАК ТаблицаФактов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПроценты КАК ВТПроценты
	|		ПО (ВТПроценты.ТорговаяТочка = ТаблицаФактов.ТорговаяТочка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТаблицаПлановОбщие.ТорговаяТочка КАК ТорговаяТочка,
	|	МИНИМУМ(ВТТаблицаПлановОбщие.Порядок) КАК Порядок
	|ПОМЕСТИТЬ ВТТаблицаПлановПорядок
	|ИЗ
	|	ВТТаблицаПлановОбщие КАК ВТТаблицаПлановОбщие
	|ГДЕ
	|	НЕ ВТТаблицаПлановОбщие.Порядок = 5
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТаблицаПлановОбщие.ТорговаяТочка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТорговаяТочка,
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТаблицаПлановОбщие.ТорговаяТочка КАК ТорговаяТочка,
	|	ВТТаблицаПлановОбщие.КоличествоПонедельник КАК КоличествоПонедельник,
	|	ВТТаблицаПлановОбщие.КоличествоВторник КАК КоличествоВторник,
	|	ВТТаблицаПлановОбщие.КоличествоСреда КАК КоличествоСреда,
	|	ВТТаблицаПлановОбщие.КоличествоЧетверг КАК КоличествоЧетверг,
	|	ВТТаблицаПлановОбщие.КоличествоПятница КАК КоличествоПятница,
	|	ВТТаблицаПлановОбщие.КоличествоСуббота КАК КоличествоСуббота,
	|	ВТТаблицаПлановОбщие.КоличествоВоскресенье КАК КоличествоВоскресенье,
	|	ВТТаблицаПлановОбщие.КоличествоПонедельник + ВТТаблицаПлановОбщие.КоличествоВторник + ВТТаблицаПлановОбщие.КоличествоСреда + ВТТаблицаПлановОбщие.КоличествоЧетверг + ВТТаблицаПлановОбщие.КоличествоПятница + ВТТаблицаПлановОбщие.КоличествоСуббота + ВТТаблицаПлановОбщие.КоличествоВоскресенье КАК ПланКоличество,
	|	ВТТаблицаПлановОбщие.Цена КАК Цена
	|ПОМЕСТИТЬ ВТПромежуточная
	|ИЗ
	|	ВТТаблицаПлановОбщие КАК ВТТаблицаПлановОбщие
	|ГДЕ
	|	ВТТаблицаПлановОбщие.Порядок = 5
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТТаблицаПлановОбщие.ТорговаяТочка,
	|	ВТТаблицаПлановОбщие.КоличествоПонедельник,
	|	ВТТаблицаПлановОбщие.КоличествоВторник,
	|	ВТТаблицаПлановОбщие.КоличествоСреда,
	|	ВТТаблицаПлановОбщие.КоличествоЧетверг,
	|	ВТТаблицаПлановОбщие.КоличествоПятница,
	|	ВТТаблицаПлановОбщие.КоличествоСуббота,
	|	ВТТаблицаПлановОбщие.КоличествоВоскресенье,
	|	ВТТаблицаПлановОбщие.КоличествоПонедельник + ВТТаблицаПлановОбщие.КоличествоВторник + ВТТаблицаПлановОбщие.КоличествоСреда + ВТТаблицаПлановОбщие.КоличествоЧетверг + ВТТаблицаПлановОбщие.КоличествоПятница + ВТТаблицаПлановОбщие.КоличествоСуббота + ВТТаблицаПлановОбщие.КоличествоВоскресенье,
	|	ВТТаблицаПлановОбщие.Цена
	|ИЗ
	|	ВТТаблицаПлановОбщие КАК ВТТаблицаПлановОбщие
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаблицаПлановПорядок КАК ВТТаблицаПлановПорядок
	|		ПО (ВТТаблицаПлановПорядок.ТорговаяТочка = ВТТаблицаПлановОбщие.ТорговаяТочка)
	|			И (ВТТаблицаПлановПорядок.Порядок = ВТТаблицаПлановОбщие.Порядок)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПромежуточная.ТорговаяТочка КАК ТорговаяТочка,
	|	ВТПромежуточная.КоличествоПонедельник КАК КоличествоПонедельник,
	|	ВТПромежуточная.КоличествоВторник КАК КоличествоВторник,
	|	ВТПромежуточная.КоличествоСреда КАК КоличествоСреда,
	|	ВТПромежуточная.КоличествоЧетверг КАК КоличествоЧетверг,
	|	ВТПромежуточная.КоличествоПятница КАК КоличествоПятница,
	|	ВТПромежуточная.КоличествоСуббота КАК КоличествоСуббота,
	|	ВТПромежуточная.КоличествоВоскресенье КАК КоличествоВоскресенье,
	|	ВТПромежуточная.ПланКоличество КАК ПланКоличество,
	|	ВТПромежуточная.Цена КАК Цена
	|ПОМЕСТИТЬ ВТОсновная
	|ИЗ
	|	ВТПромежуточная КАК ВТПромежуточная
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТНоменклатураАссортимента.ТорговаяТочка,
	|	&МинКоличествоПлан,
	|	&МинКоличествоПлан,
	|	&МинКоличествоПлан,
	|	&МинКоличествоПлан,
	|	&МинКоличествоПлан,
	|	&МинКоличествоПлан,
	|	&МинКоличествоПлан,
	|	7 * &МинКоличествоПлан,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТЦены.Период, ДАТАВРЕМЯ(1, 1, 1)) > ЕСТЬNULL(ВТЦеныБезТТ.Период, ДАТАВРЕМЯ(1, 1, 1))
	|			ТОГДА ЕСТЬNULL(ВТЦены.Цена, 0)
	|		ИНАЧЕ ЕСТЬNULL(ВТЦеныБезТТ.Цена, 0)
	|	КОНЕЦ
	|ИЗ
	|	ВТНоменклатураАссортимента КАК ВТНоменклатураАссортимента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПромежуточная КАК ВТПромежуточная
	|		ПО (ВТПромежуточная.ТорговаяТочка = ВТНоменклатураАссортимента.ТорговаяТочка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЦены КАК ВТЦены
	|		ПО (ВТЦены.ТорговаяТочка = ВТНоменклатураАссортимента.ТорговаяТочка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЦены КАК ВТЦеныБезТТ
	|		ПО (ВТЦеныБезТТ.ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
	|ГДЕ
	|	ВТПромежуточная.ТорговаяТочка ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПланов.ТорговаяТочка,
	|	СУММА(ТаблицаПланов.ПланКоличество) КАК Показатель
	|ИЗ
	|	ВТОсновная КАК ТаблицаПланов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПланов.ТорговаяТочка
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаПланов.ПланКоличество) = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПланов.ТорговаяТочка,
	|	СУММА(ТаблицаПланов.КоличествоПонедельник) КАК КоличествоПонедельник,
	|	СУММА(ТаблицаПланов.КоличествоВторник) КАК КоличествоВторник,
	|	СУММА(ТаблицаПланов.КоличествоСреда) КАК КоличествоСреда,
	|	СУММА(ТаблицаПланов.КоличествоЧетверг) КАК КоличествоЧетверг,
	|	СУММА(ТаблицаПланов.КоличествоПятница) КАК КоличествоПятница,
	|	СУММА(ТаблицаПланов.КоличествоСуббота) КАК КоличествоСуббота,
	|	СУММА(ТаблицаПланов.КоличествоВоскресенье) КАК КоличествоВоскресенье,
	|	ТаблицаПланов.Цена
	|ПОМЕСТИТЬ ВТРаспределение
	|ИЗ
	|	ВТОсновная КАК ТаблицаПланов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПланов.ТорговаяТочка,
	|	ТаблицаПланов.Цена
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаПланов.ПланКоличество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДат.Дата КАК Дата
	|ПОМЕСТИТЬ ВТДаты
	|ИЗ
	|	&ТаблицаДат КАК ТаблицаДат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДаты.Дата КАК Дата,
	|	ВТРаспределение.ТорговаяТочка КАК ТорговаяТочка,
	|	&НоменклатураОтбор КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 1
	|			ТОГДА ВТРаспределение.КоличествоПонедельник
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 2
	|			ТОГДА ВТРаспределение.КоличествоВторник
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 3
	|			ТОГДА ВТРаспределение.КоличествоСреда
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 4
	|			ТОГДА ВТРаспределение.КоличествоЧетверг
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 5
	|			ТОГДА ВТРаспределение.КоличествоПятница
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 6
	|			ТОГДА ВТРаспределение.КоличествоСуббота
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 7
	|			ТОГДА ВТРаспределение.КоличествоВоскресенье
	|	КОНЕЦ КАК Количество,
	|	ЕСТЬNULL(ВТРаспределение.Цена, 0) КАК Цена
	|ПОМЕСТИТЬ ВТПланыПродажПоДням
	|ИЗ
	|	ВТДаты КАК ВТДаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРаспределение КАК ВТРаспределение
	|		ПО (ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 1
	|					И ВТРаспределение.КоличествоПонедельник > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 2
	|					И ВТРаспределение.КоличествоВторник > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 3
	|					И ВТРаспределение.КоличествоСреда > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 4
	|					И ВТРаспределение.КоличествоЧетверг > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 5
	|					И ВТРаспределение.КоличествоПятница > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 6
	|					И ВТРаспределение.КоличествоСуббота > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 7
	|					И ВТРаспределение.КоличествоВоскресенье > 0)
	|ГДЕ
	|	НЕ ВТРаспределение.ТорговаяТочка ЕСТЬ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Дата,
	|	ТорговаяТочка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланыПродажПоДням.Дата КАК Дата,
	|	ПланыПродажПоДням.ТорговаяТочка,
	|	ПланыПродажПоДням.Номенклатура,
	|	ПланыПродажПоДням.Количество,
	|	ПланыПродажПоДням.Цена
	|ИЗ
	|	ВТПланыПродажПоДням КАК ПланыПродажПоДням
	|ИТОГИ ПО
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПланыПродажПоДнямНедели.Дата КАК Дата,
	|	ПланыПродажПоДнямНедели.ТорговаяТочка КАК ТорговаяТочка
	|ИЗ
	|	РегистрСведений.ПланыПродажПоДнямНедели КАК ПланыПродажПоДнямНедели
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПланыПродажПоДням КАК ВТПланыПродажПоДням
	|		ПО (ВТПланыПродажПоДням.Дата = ПланыПродажПоДнямНедели.Дата)
	|			И (ВТПланыПродажПоДням.ТорговаяТочка = ПланыПродажПоДнямНедели.ТорговаяТочка)
	|ГДЕ
	|	ПланыПродажПоДнямНедели.Дата В
	|			(ВЫБРАТЬ
	|				ВТДаты.Дата
	|			ИЗ
	|				ВТДаты)
	|	И ПланыПродажПоДнямНедели.Номенклатура = &НоменклатураОтбор
	|	И ПланыПродажПоДнямНедели.ТорговаяТочка В(&МассивТорговыхТочек)
	|	И НЕ ПланыПродажПоДнямНедели.ТорговаяТочка.НеУчаствуетВРаспределении
	|	И ВТПланыПродажПоДням.ТорговаяТочка ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПланов.ТорговаяТочка,
	|	ВЫБОР
	|		КОГДА &ЕстьПонедельник = ИСТИНА
	|			ТОГДА ТаблицаПланов.КоличествоПонедельник
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоПонедельник,
	|	ВЫБОР
	|		КОГДА &ЕстьВторник = ИСТИНА
	|			ТОГДА ТаблицаПланов.КоличествоВторник
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоВторник,
	|	ВЫБОР
	|		КОГДА &ЕстьСреда = ИСТИНА
	|			ТОГДА ТаблицаПланов.КоличествоСреда
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоСреда,
	|	ВЫБОР
	|		КОГДА &ЕстьЧетверг = ИСТИНА
	|			ТОГДА ТаблицаПланов.КоличествоЧетверг
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоЧетверг,
	|	ВЫБОР
	|		КОГДА &ЕстьПятница = ИСТИНА
	|			ТОГДА ТаблицаПланов.КоличествоПятница
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоПятница,
	|	ВЫБОР
	|		КОГДА &ЕстьСуббота = ИСТИНА
	|			ТОГДА ТаблицаПланов.КоличествоСуббота
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоСуббота,
	|	ВЫБОР
	|		КОГДА &ЕстьВоскресенье = ИСТИНА
	|			ТОГДА ТаблицаПланов.КоличествоВоскресенье
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоВоскресенье,
	|	ТаблицаПланов.Цена
	|ПОМЕСТИТЬ ВТПоследняя
	|ИЗ
	|	ВТРаспределение КАК ТаблицаПланов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПланов.ТорговаяТочка,
	|	ТаблицаПланов.КоличествоПонедельник,
	|	ТаблицаПланов.КоличествоВторник,
	|	ТаблицаПланов.КоличествоСреда,
	|	ТаблицаПланов.КоличествоЧетверг,
	|	ТаблицаПланов.КоличествоПятница,
	|	ТаблицаПланов.КоличествоСуббота,
	|	ТаблицаПланов.КоличествоВоскресенье,
	|	ТаблицаПланов.КоличествоПонедельник + ТаблицаПланов.КоличествоВторник + ТаблицаПланов.КоличествоСреда + ТаблицаПланов.КоличествоЧетверг + ТаблицаПланов.КоличествоПятница + ТаблицаПланов.КоличествоСуббота + ТаблицаПланов.КоличествоВоскресенье КАК ПланКоличество,
	|	ТаблицаПланов.Цена * (ТаблицаПланов.КоличествоПонедельник + ТаблицаПланов.КоличествоВторник + ТаблицаПланов.КоличествоСреда + ТаблицаПланов.КоличествоЧетверг + ТаблицаПланов.КоличествоПятница + ТаблицаПланов.КоличествоСуббота + ТаблицаПланов.КоличествоВоскресенье) КАК ПланСумма,
	|	ТаблицаПланов.Цена
	|ИЗ
	|	ВТПоследняя КАК ТаблицаПланов";
	
	Возврат Запрос.ВыполнитьПакет();
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗаполнитьИЗаписатьПланСервер(СтруктураПараметров, РезультатыЗапросов, мСч, СтруктураНаличияДнейВПериоде)
	
	СтрокаНеПустыхДней = Неопределено;
	
	// таблица с количеством дней недели, в которых не было продаж
	ТаблицаНеПустыхДней = РезультатыЗапросов[7 + мСч].Выгрузить();
	Если ТаблицаНеПустыхДней.Количество() > 0 Тогда
		СтрокаНеПустыхДней = ТаблицаНеПустыхДней[0];
	Иначе
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Нет данных для расчета!";
		СообщениеПользователю.Сообщить();
		Возврат Неопределено;
	КонецЕсли;
	
	
	// даты, в которых не было продаж (листов учета) в пределах анализируемого периода
	ТаблицаДат 	= РезультатыЗапросов[9 + мСч].Выгрузить();
	Для Каждого СтрокаТаблицы Из ТаблицаДат Цикл
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = Формат(СтрокаТаблицы.Дата, "ДЛФ=Д") + " не было продаж";
		СообщениеПользователю.Сообщить();
	КонецЦикла;
	
	
	// планы по номенклатуре - вывод на экран
	ТаблицаЗапроса = РезультатыЗапросов[8 + мСч].Выгрузить();
	
	ТаблицаЗапроса.Колонки.Добавить("ПланКоличество", Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(15, 3)));
	Для Каждого СтрокаТаблицы Из ТаблицаЗапроса Цикл
		Если СтрокаТаблицы.КоличествоПонедельник > 0 Тогда
			СтрокаТаблицы.КоличествоПонедельник = СтрокаТаблицы.КоличествоПонедельник / СтрокаНеПустыхДней.КоличествоПн;														
		КонецЕсли;
		Если СтрокаТаблицы.КоличествоВторник > 0 Тогда
			СтрокаТаблицы.КоличествоВторник 	= СтрокаТаблицы.КоличествоВторник / СтрокаНеПустыхДней.КоличествоВт;
		КонецЕсли;
		Если СтрокаТаблицы.КоличествоСреда > 0 Тогда
			СтрокаТаблицы.КоличествоСреда 		= СтрокаТаблицы.КоличествоСреда / СтрокаНеПустыхДней.КоличествоСр;
		КонецЕсли;
		Если СтрокаТаблицы.КоличествоЧетверг > 0 Тогда
			СтрокаТаблицы.КоличествоЧетверг 	= СтрокаТаблицы.КоличествоЧетверг / СтрокаНеПустыхДней.КоличествоЧт;
		КонецЕсли;
		Если СтрокаТаблицы.КоличествоПятница > 0 Тогда
			СтрокаТаблицы.КоличествоПятница 	= СтрокаТаблицы.КоличествоПятница / СтрокаНеПустыхДней.КоличествоПт;
		КонецЕсли;
		Если СтрокаТаблицы.КоличествоСуббота > 0 Тогда
			СтрокаТаблицы.КоличествоСуббота 	= СтрокаТаблицы.КоличествоСуббота / СтрокаНеПустыхДней.КоличествоСб;
		КонецЕсли;
		Если СтрокаТаблицы.КоличествоВоскресенье > 0 Тогда
			СтрокаТаблицы.КоличествоВоскресенье = СтрокаТаблицы.КоличествоВоскресенье / СтрокаНеПустыхДней.КоличествоВс;
		КонецЕсли;
		СтрокаТаблицы.ПланКоличество = СтрокаТаблицы.КоличествоПонедельник +
										СтрокаТаблицы.КоличествоВторник +
										СтрокаТаблицы.КоличествоСреда +
										СтрокаТаблицы.КоличествоЧетверг +
										СтрокаТаблицы.КоличествоПятница +
										СтрокаТаблицы.КоличествоСуббота +
										СтрокаТаблицы.КоличествоВоскресенье;
	КонецЦикла;
	
	
	// распределить по данным регистра сведений "Планы продаж по дням недели (проценты)"
	РезультатыЗапросаОбщие = ПолучитьРезультатыЗапросаПоРаспределению(ТаблицаЗапроса, СтруктураПараметров, СтруктураНаличияДнейВПериоде);
	
    
	// поиск продаж, по которым нет записей в регистре сведений "Планы продаж по дням недели (проценты)"
	РезультатЗапроса = РезультатыЗапросаОбщие[8];
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Нет распределения по дням для торговой точки """ + Выборка.ТорговаяТочка + """";
		СообщениеПользователю.Сообщить();
	КонецЦикла;
	
	Возврат РезультатыЗапросаОбщие;
	
КонецФункции

Процедура ЗаполнитьПланСервер(МассивПараметров)
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровДляЗаписиВПланПродажСервер();
	СтруктураПараметров.Вставить("МассивТорговыхТочек"	,
		ЭтаФорма.ПланыПродажПоДнямНедели.Выгрузить(Новый Структура("Изменять", Истина), "ТорговаяТочка").ВыгрузитьКолонку("ТорговаяТочка"));
	СтруктураПараметров.Вставить("ТаблицаДат"			, ЭтаФорма.ТаблицаДатПериода.Выгрузить(, "Дата"));
	СтруктураПараметров.Вставить("ПроцентИзменения"		, МассивПараметров[0]);
	СтруктураПараметров.Вставить("ДатаНачала"			, МассивПараметров[1]);
	СтруктураПараметров.Вставить("ДатаОкончания"		, МассивПараметров[2]);
	СтруктураПараметров.Вставить("СписокДатПериода"		, МассивПараметров[3]);
	СтруктураПараметров.Вставить("МассивНоменклатуры"	, МассивПараметров[4]);
	
	СтрокаНеПустыхДней = Неопределено;
	
	мСч = 0;
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	мСпиСокТТ = Новый СписокЗначений;
	мСпиСокТТ.ЗагрузитьЗначения(СтруктураПараметров.МассивТорговыхТочек);
	РезультатыЗапросов = ОбработкаОбъект.ПолучитьПакетЗапросовПоФактуПродаж(СтруктураПараметров.ДатаНачала,
										СтруктураПараметров.ДатаОкончания, мСпиСокТТ, СтруктураПараметров.НоменклатураОтбор, мСч);
	
	СтруктураНаличияДнейВПериоде = ОбработкаОбъект.ПолучитьСтруктуруНаличияДнейВПериоде(СтруктураПараметров.СписокДатПериода);
	
	РезультатыЗапросаОбщие = ЗаполнитьИЗаписатьПланСервер(СтруктураПараметров, РезультатыЗапросов, мСч, СтруктураНаличияДнейВПериоде);
	Если РезультатыЗапросаОбщие = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
    
	// запись в регистр "Планы продаж по дням недели"
	РезультатКЗаписи 	= РезультатыЗапросаОбщие[12];
	РезультатКОчистке 	= РезультатыЗапросаОбщие[13];
	ОбработкаОбъект.ЗаписатьВПланыПродажПоДнямНедели(СтруктураПараметров.Расчетчик, РезультатКЗаписи, РезультатКОчистке, СтруктураПараметров.НоменклатураОтбор);
	
	// планы по торговым точкам - вывод на экран
	мТаблица = РезультатыЗапросаОбщие[15].Выгрузить();
	ВремТаблица = ЭтаФорма.ПланыПродажПоДнямНедели.Выгрузить();
	Для Каждого СтрокаТаблицы Из ВремТаблица Цикл
		Если НЕ СтрокаТаблицы.Изменять Тогда
			Продолжить;
		КонецЕсли;
		СтрокаКЗагрузке = мТаблица.Найти(СтрокаТаблицы.ТорговаяТочка, "ТорговаяТочка");
		Если НЕ СтрокаКЗагрузке = Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаКЗагрузке,, "ТорговаяТочка");
		КонецЕсли;
	КонецЦикла;
    ЭтаФорма.ПланыПродажПоДнямНедели.Загрузить(ВремТаблица);
	
	ОбновитьВсеИтогиПоДням();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПлан(Команда)
	
	Если НЕ ЗначениеЗаполнено(ЭтаФорма.ПоследняяДатаВнесенияЛистовУчета) Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не выбран базовый период! Расчет невозможен.";
		СообщениеПользователю.УстановитьДанные(ЭтаФорма.ПоследняяДатаВнесенияЛистовУчета);
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если ЭтаФорма.СписокДатПериода.Количество() = 0 Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не выбран период планирования! Расчет невозможен.";
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если ЭтаФорма.ПроцентИзмененияПланаПродаж = 0 Тогда
		
		МассивПараметров = Новый Массив;
		МассивПараметров.Добавить(ЭтаФорма.ПроцентИзмененияПланаПродаж);
		МассивПараметров.Добавить(ЭтаФорма.ПоследняяДатаВнесенияЛистовУчета - (ЭтаФорма.ГлубинаАнализа * 7 - 1) * 86400);
		МассивПараметров.Добавить(КонецДня(ЭтаФорма.ПоследняяДатаВнесенияЛистовУчета));
		МассивПараметров.Добавить(ЭтаФорма.СписокДатПериода);
		МассивПараметров.Добавить(ЭтаФорма.СписокНоменклатуры);
		
		ЗаполнитьПланСервер(МассивПараметров);
		
	Иначе
		
		СтруктураПараметров = ПолучитьСтруктуруПараметровДляЗаписиВПланПродаж();
		СтруктураПараметров.Вставить("ПроцентИзменения", ЭтаФорма.ПроцентИзмененияПланаПродаж);
	
		ДобавитьПроцентИзмененияВПланПродажПоДням(СтруктураПараметров);
		
	КонецЕсли;
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ДобавитьПроцентИзмененияВПланПродажПоДнюСервер(ВремТаблица, СтруктураПараметров, мИндексДняНедели)
	
	Перем мПланыПродажПоДнямНедели, мКоэффициент, ТекНоменклатура, ТекПорядокОкругления;
	
	
	// служ. переменные
	мПланыПродажПоДнямНедели = РегистрыСведений.ПланыПродажПоДнямНедели;
	
	мКоэффициент = (1 + СтруктураПараметров.ПроцентИзменения / 100);
	ТекНоменклатура 		= СтруктураПараметров.НоменклатураОтбор;
	ТекПорядокОкругления 	= ?(ТекНоменклатура.Весовой, 1, 0);
	
	ДатаДня = Дата(1, 1, 1);
	Если мИндексДняНедели = 1 Тогда
		ДатаДня = СтруктураПараметров.ДатаПн;
	ИначеЕсли мИндексДняНедели = 2 Тогда
		ДатаДня = СтруктураПараметров.ДатаВт;
	ИначеЕсли мИндексДняНедели = 3 Тогда
		ДатаДня = СтруктураПараметров.ДатаСр;
	ИначеЕсли мИндексДняНедели = 4 Тогда
		ДатаДня = СтруктураПараметров.ДатаЧт;
	ИначеЕсли мИндексДняНедели = 5 Тогда
		ДатаДня = СтруктураПараметров.ДатаПт;
	ИначеЕсли мИндексДняНедели = 6 Тогда
		ДатаДня = СтруктураПараметров.ДатаСб;
	Иначе
		ДатаДня = СтруктураПараметров.ДатаВс;
	КонецЕсли;
	
	
	// обработка таблицы
	СтруктураЗаписи = Новый Структура("ТорговаяТочка, Количество, Цена");
	СтруктураЗаписи.Вставить("Дата"			, ДатаДня);
	СтруктураЗаписи.Вставить("Расчетчик"	, СтруктураПараметров.Расчетчик);
	СтруктураЗаписи.Вставить("Склад"		, СтруктураПараметров.Расчетчик.Склад);
	СтруктураЗаписи.Вставить("Номенклатура"	, ТекНоменклатура);
	
	Для Каждого СтрокаТаблицы Из ВремТаблица Цикл
		
		Если НЕ СтрокаТаблицы.Изменять Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураЗаписи.ТорговаяТочка 	= СтрокаТаблицы.ТорговаяТочка;
		СтруктураЗаписи.Цена 			= СтрокаТаблицы.Цена;
		
		Если мИндексДняНедели = 1
				И НЕ СтрокаТаблицы.КоличествоПонедельник = 0 Тогда
			СтрокаТаблицы.КоличествоПонедельник = Окр(СтрокаТаблицы.КоличествоПонедельник * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоПонедельник;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если мИндексДняНедели = 2
				И НЕ СтрокаТаблицы.КоличествоВторник = 0 Тогда
			СтрокаТаблицы.КоличествоВторник 		= Окр(СтрокаТаблицы.КоличествоВторник * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоВторник;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если мИндексДняНедели = 3
				И НЕ СтрокаТаблицы.КоличествоСреда = 0 Тогда
			СтрокаТаблицы.КоличествоСреда 			= Окр(СтрокаТаблицы.КоличествоСреда * мКоэффициент		, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоСреда;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если мИндексДняНедели = 4
				И НЕ СтрокаТаблицы.КоличествоЧетверг = 0 Тогда
			СтрокаТаблицы.КоличествоЧетверг 		= Окр(СтрокаТаблицы.КоличествоЧетверг * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоЧетверг;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если мИндексДняНедели = 5
				И НЕ СтрокаТаблицы.КоличествоПятница = 0 Тогда
			СтрокаТаблицы.КоличествоПятница 		= Окр(СтрокаТаблицы.КоличествоПятница * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоПятница;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если мИндексДняНедели = 6
				И НЕ СтрокаТаблицы.КоличествоСуббота = 0 Тогда
			СтрокаТаблицы.КоличествоСуббота 		= Окр(СтрокаТаблицы.КоличествоСуббота * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоСуббота;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если мИндексДняНедели = 7
				И НЕ СтрокаТаблицы.КоличествоВоскресенье = 0 Тогда
			СтрокаТаблицы.КоличествоВоскресенье 	= Окр(СтрокаТаблицы.КоличествоВоскресенье * мКоэффициент, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоВоскресенье;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		
		СтрокаТаблицы.ПланКоличество 	= СтрокаТаблицы.КоличествоПонедельник +
											СтрокаТаблицы.КоличествоВторник +
											СтрокаТаблицы.КоличествоСреда +
											СтрокаТаблицы.КоличествоЧетверг +
											СтрокаТаблицы.КоличествоПятница +
											СтрокаТаблицы.КоличествоСуббота +
											СтрокаТаблицы.КоличествоВоскресенье;
		СтрокаТаблицы.ПланСумма 		= СтрокаТаблицы.Цена * СтрокаТаблицы.ПланКоличество;
		
	КонецЦикла;                                                                          
	
КонецПроцедуры

// Изменяет числовые показатели для дня на процент изменения.
//
Процедура ДобавитьПроцентИзмененияВПланПродажПоДню(СтруктураПараметров)
	
	ВремТаблица = ЭтаФорма.ПланыПродажПоДнямНедели.Выгрузить();
	
	мИндексДняНедели = Перечисления.ДниНедели.Индекс(СтруктураПараметров.ДеньНеделиИзменения) + 1;
	
	//
	ДобавитьПроцентИзмененияВПланПродажПоДнюСервер(ВремТаблица, СтруктураПараметров, мИндексДняНедели);
	
	
	ЭтаФорма.ПланыПродажПоДнямНедели.Загрузить(ВремТаблица);
	
	// обновление итогового поля по дню
	ТекстДняНедели = ПолучитьТекстДняНедели(СтруктураПараметров.ДеньНеделиИзменения);
	ИзменитьКоличествоИтогоПоДню(ТекстДняНедели);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПланНаДень(Команда)

	Если ЭтаФорма.ДеньНеделиИзменения.Пустая() Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не указан день недели!";
		СообщениеПользователю.УстановитьДанные(ЭтаФорма.ДеньНеделиИзменения);
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;

	Если ЭтаФорма.ПроцентИзмененияДень = 0 Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не указан процент изменения!";
		СообщениеПользователю.УстановитьДанные(ЭтаФорма.ПроцентИзмененияДень);
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровДляЗаписиВПланПродаж();
	СтруктураПараметров.Вставить("ПроцентИзменения"		, ЭтаФорма.ПроцентИзмененияДень);
	СтруктураПараметров.Вставить("ДеньНеделиИзменения"	, ЭтаФорма.ДеньНеделиИзменения);
	
	ДобавитьПроцентИзмененияВПланПродажПоДню(СтруктураПараметров);
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура КопироватьНаДругойДеньНеделиСерверБезКонтекста(ВремТаблица, СтруктураПараметров, мИндексДняНеделиНа, ТекстДняНа)

	// служ. переменные
	мПланыПродажПоДнямНедели = РегистрыСведений.ПланыПродажПоДнямНедели;
	
	ДатаДня = Дата(1, 1, 1);
	Если мИндексДняНеделиНа = 1 Тогда
		ДатаДня = СтруктураПараметров.ДатаПн;
	ИначеЕсли мИндексДняНеделиНа = 2 Тогда
		ДатаДня = СтруктураПараметров.ДатаВт;
	ИначеЕсли мИндексДняНеделиНа = 3 Тогда
		ДатаДня = СтруктураПараметров.ДатаСр;
	ИначеЕсли мИндексДняНеделиНа = 4 Тогда
		ДатаДня = СтруктураПараметров.ДатаЧт;
	ИначеЕсли мИндексДняНеделиНа = 5 Тогда
		ДатаДня = СтруктураПараметров.ДатаПт;
	ИначеЕсли мИндексДняНеделиНа = 6 Тогда
		ДатаДня = СтруктураПараметров.ДатаСб;
	Иначе
		ДатаДня = СтруктураПараметров.ДатаВс;
	КонецЕсли;
	
	ТекстДняС = ПолучитьТекстДняНедели(СтруктураПараметров.ДеньНеделиС);
	
	
	// обработка таблицы
	СтруктураЗаписи = Новый Структура("ТорговаяТочка, Количество, Цена");
	СтруктураЗаписи.Вставить("Дата"			, ДатаДня);
	СтруктураЗаписи.Вставить("Расчетчик"	, СтруктураПараметров.Расчетчик);
	СтруктураЗаписи.Вставить("Склад"		, СтруктураПараметров.Расчетчик.Склад);
	СтруктураЗаписи.Вставить("Номенклатура"	, СтруктураПараметров.НоменклатураОтбор);
	
	Для Каждого СтрокаТаблицы Из ВремТаблица Цикл
		
		Если НЕ СтрокаТаблицы.Изменять Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураЗаписи.ТорговаяТочка 	= СтрокаТаблицы.ТорговаяТочка;
		СтруктураЗаписи.Цена 			= СтрокаТаблицы.Цена;
		
		ТекКоличество = СтрокаТаблицы["Количество" + ТекстДняС];
		СтрокаТаблицы["Количество" + ТекстДняНа] = ТекКоличество;
		СтруктураЗаписи.Количество 	= ТекКоличество;
		ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		
		СтрокаТаблицы.ПланКоличество 	= СтрокаТаблицы.КоличествоПонедельник +
											СтрокаТаблицы.КоличествоВторник +
											СтрокаТаблицы.КоличествоСреда +
											СтрокаТаблицы.КоличествоЧетверг +
											СтрокаТаблицы.КоличествоПятница +
											СтрокаТаблицы.КоличествоСуббота +
											СтрокаТаблицы.КоличествоВоскресенье;
		СтрокаТаблицы.ПланСумма 		= СтрокаТаблицы.Цена * СтрокаТаблицы.ПланКоличество;
		
	КонецЦикла;                                                                          
	
КонецПроцедуры

Процедура КопироватьНаДругойДеньНеделиСервер(СтруктураПараметров)

	ВремТаблица = ЭтаФорма.ПланыПродажПоДнямНедели.Выгрузить();
	
	мИндексДняНеделиНа = Перечисления.ДниНедели.Индекс(СтруктураПараметров.ДеньНеделиНа) + 1;
	ТекстДняНедели = ПолучитьТекстДняНедели(ДеньНеделиНа);
	
	//
	КопироватьНаДругойДеньНеделиСерверБезКонтекста(ВремТаблица, СтруктураПараметров, мИндексДняНеделиНа, ТекстДняНедели);
	
	
	ЭтаФорма.ПланыПродажПоДнямНедели.Загрузить(ВремТаблица);
	
	// обновление итогового поля по дню
	ИзменитьКоличествоИтогоПоДню(ТекстДняНедели);
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьНаДругойДеньНедели(Команда)

	Если ЭтаФорма.ДеньНеделиС.Пустая() Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не указан день недели, план которого необходимо скопировать!";
		СообщениеПользователю.УстановитьДанные(ЭтаФорма.ДеньНеделиС);
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;

	Если ЭтаФорма.ДеньНеделиНа.Пустая() Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не указан день недели, план на который необходимо скопировать!";
		СообщениеПользователю.УстановитьДанные(ЭтаФорма.ДеньНеделиНа);
		СообщениеПользователю.Сообщить();
		Возврат;
	Иначе
		Если ЭтаФорма.ДеньНеделиНа = ЭтаФорма.ДеньНеделиС Тогда
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Дни недели не должны совпадать!";
			СообщениеПользователю.УстановитьДанные(ЭтаФорма.ДеньНеделиНа);
			СообщениеПользователю.Сообщить();
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровДляЗаписиВПланПродаж();
	СтруктураПараметров.Вставить("ДеньНеделиС"	, ЭтаФорма.ДеньНеделиС);
	СтруктураПараметров.Вставить("ДеньНеделиНа"	, ЭтаФорма.ДеньНеделиНа);
	
	КопироватьНаДругойДеньНеделиСервер(СтруктураПараметров);
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура КопироватьПланПрошлойНеделиСервер(МассивДатПрошлойНедели, мРасчетчик, мНоменклатураОтбор, мСписокТорговыхТочек, мСписокДатПериода)
	
	Перем мПланыПродажПоДнямНедели;
	
	// получение записей прошлой недели
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Расчетчик"				, мРасчетчик);
	Запрос.УстановитьПараметр("Склад"					, мРасчетчик.Склад);
	Запрос.УстановитьПараметр("МассивТорговыхТочек"		, мСписокТорговыхТочек);
	Запрос.УстановитьПараметр("МассивДатПрошлойНедели"	, МассивДатПрошлойНедели);
	Запрос.УстановитьПараметр("НоменклатураОтбор"		, мНоменклатураОтбор);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Расчетчик КАК Расчетчик,
	|	&Склад КАК Склад,
	|	ПланыПродажПоДнямНедели.Дата КАК Дата,
	|	ПланыПродажПоДнямНедели.ТорговаяТочка КАК ТорговаяТочка,
	|	ПланыПродажПоДнямНедели.Номенклатура КАК Номенклатура,
	|	МАКСИМУМ(ПланыПродажПоДнямНедели.Количество) КАК Количество,
	|	МАКСИМУМ(ПланыПродажПоДнямНедели.Цена) КАК Цена
	|ИЗ
	|	РегистрСведений.ПланыПродажПоДнямНедели КАК ПланыПродажПоДнямНедели
	|ГДЕ
	|	ПланыПродажПоДнямНедели.Дата В(&МассивДатПрошлойНедели)
	|	И ПланыПродажПоДнямНедели.ТорговаяТочка В(&МассивТорговыхТочек)
	|	И ПланыПродажПоДнямНедели.Номенклатура = &НоменклатураОтбор
	|
	|СГРУППИРОВАТЬ ПО
	|	ПланыПродажПоДнямНедели.Номенклатура,
	|	ПланыПродажПоДнямНедели.ТорговаяТочка,
	|	ПланыПродажПоДнямНедели.Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	ТорговаяТочка,
	|	Номенклатура";
	
	//+++АК LAGP 2018.02.25 В запросе присутствуют одинаковые строки с разной ценой, регистр сведений не даёт записывать такие строки (цена - реквизит). Добавил группировку для запроса.

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Нет данных для копирования!";
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	ТаблицаЗапроса = РезультатЗапроса.Выгрузить();
	
	
	// очистка в регистре "ПланыПродажПоДнямНедели" данных по текущему периоду
	мПланыПродажПоДнямНедели = РегистрыСведений.ПланыПродажПоДнямНедели;
	
	Для Каждого ЭлементСписка Из мСписокДатПериода Цикл
		
		ТекДата = ЭлементСписка.Значение;
		
		НаборЗаписей = мПланыПродажПоДнямНедели.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Дата.Установить(ТекДата);
		НаборЗаписей.Отбор.Расчетчик.Установить(мРасчетчик);
		НаборЗаписей.Отбор.Номенклатура.Установить(мНоменклатураОтбор);
		НаборЗаписей.Прочитать();
		
		ВремТаблица = ТаблицаЗапроса.Скопировать(Новый Структура("Дата", ТекДата - 7 * 86400));
		ВремТаблица.ЗаполнитьЗначения(ТекДата, "Дата");
		НаборЗаписей.Загрузить(ВремТаблица);
	
		Попытка
			НаборЗаписей.Записать();
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
	КонецЦикла;	
	
КонецПроцедуры

// Копирует набор записей по прошлой неделе (от планируемой даты)
//
&НаКлиенте
Процедура КопироватьПланПрошлойНедели(Команда)
	
	МассивДатПрошлойНедели = Новый Массив;
	Для Каждого ЭлементСписка Из ЭтаФорма.СписокДатПериода Цикл
		МассивДатПрошлойНедели.Добавить(ЭлементСписка.Значение - 7 * 86400);
	КонецЦикла;
	
	КопироватьПланПрошлойНеделиСервер(МассивДатПрошлойНедели,
						ЭтаФорма.Расчетчик, ЭтаФорма.НоменклатураОтбор, ЭтаФорма.СписокТорговыхТочек, ЭтаФорма.СписокДатПериода);
	
	// перерисовка на форме
	ЗаполнитьТаблицуПродаж();
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ИзменитьКоличествоПоИтогуИЗаписатьСервер(ВремТаблица, СтруктураПараметров)
	
	мПланыПродажПоДнямНедели = РегистрыСведений.ПланыПродажПоДнямНедели;
	
	// служ. переменные
	ТекНоменклатура 		= СтруктураПараметров.НоменклатураОтбор;
	ТекПорядокОкругления 	= ?(ТекНоменклатура.Весовой, 1, 0);
	
	ДатаПн = СтруктураПараметров.ДатаПн;
	ДатаВт = СтруктураПараметров.ДатаВт;
	ДатаСр = СтруктураПараметров.ДатаСр;
	ДатаЧт = СтруктураПараметров.ДатаЧт;
	ДатаПт = СтруктураПараметров.ДатаПт;
	ДатаСб = СтруктураПараметров.ДатаСб;
	ДатаВс = СтруктураПараметров.ДатаВс;
	КоэффициентПн = СтруктураПараметров.КоэффициентПн;
	КоэффициентВт = СтруктураПараметров.КоэффициентВт;
	КоэффициентСр = СтруктураПараметров.КоэффициентСр;
	КоэффициентЧт = СтруктураПараметров.КоэффициентЧт;
	КоэффициентПт = СтруктураПараметров.КоэффициентПт;
	КоэффициентСб = СтруктураПараметров.КоэффициентСб;
	КоэффициентВс = СтруктураПараметров.КоэффициентВс;
	
	// обработка таблицы
	СтруктураЗаписи = Новый Структура("Дата, ТорговаяТочка, Количество, Цена");
	СтруктураЗаписи.Вставить("Расчетчик"	, СтруктураПараметров.Расчетчик);
	СтруктураЗаписи.Вставить("Склад"		, СтруктураПараметров.Расчетчик.Склад);
	СтруктураЗаписи.Вставить("Номенклатура"	, ТекНоменклатура);
	
	Для Каждого СтрокаТаблицы Из ВремТаблица Цикл
		
		Если НЕ СтрокаТаблицы.Изменять Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураЗаписи.ТорговаяТочка 	= СтрокаТаблицы.ТорговаяТочка;
		СтруктураЗаписи.Цена 			= СтрокаТаблицы.Цена;
		
		Если НЕ СтрокаТаблицы.КоличествоПонедельник = 0 Тогда
			СтрокаТаблицы.КоличествоПонедельник = Окр(СтрокаТаблицы.КоличествоПонедельник * КоэффициентПн	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоПонедельник;
			СтруктураЗаписи.Дата 		= ДатаПн;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если НЕ СтрокаТаблицы.КоличествоВторник = 0 Тогда
			СтрокаТаблицы.КоличествоВторник 		= Окр(СтрокаТаблицы.КоличествоВторник * КоэффициентВт	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоВторник;
			СтруктураЗаписи.Дата 		= ДатаВт;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если НЕ СтрокаТаблицы.КоличествоСреда = 0 Тогда
			СтрокаТаблицы.КоличествоСреда 			= Окр(СтрокаТаблицы.КоличествоСреда * КоэффициентСр		, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоСреда;
			СтруктураЗаписи.Дата 		= ДатаСр;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если НЕ СтрокаТаблицы.КоличествоЧетверг = 0 Тогда
			СтрокаТаблицы.КоличествоЧетверг 		= Окр(СтрокаТаблицы.КоличествоЧетверг * КоэффициентЧт	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоЧетверг;
			СтруктураЗаписи.Дата 		= ДатаЧт;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если НЕ СтрокаТаблицы.КоличествоПятница = 0 Тогда
			СтрокаТаблицы.КоличествоПятница 		= Окр(СтрокаТаблицы.КоличествоПятница * КоэффициентПт	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоПятница;
			СтруктураЗаписи.Дата 		= ДатаПт;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если НЕ СтрокаТаблицы.КоличествоСуббота = 0 Тогда
			СтрокаТаблицы.КоличествоСуббота 		= Окр(СтрокаТаблицы.КоличествоСуббота * КоэффициентСб	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоСуббота;
			СтруктураЗаписи.Дата 		= ДатаСб;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если НЕ СтрокаТаблицы.КоличествоВоскресенье = 0 Тогда
			СтрокаТаблицы.КоличествоВоскресенье 	= Окр(СтрокаТаблицы.КоличествоВоскресенье * КоэффициентВс, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоВоскресенье;
			СтруктураЗаписи.Дата 		= ДатаВс;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		
		СтрокаТаблицы.ПланКоличество 	= СтрокаТаблицы.КоличествоПонедельник +
											СтрокаТаблицы.КоличествоВторник +
											СтрокаТаблицы.КоличествоСреда +
											СтрокаТаблицы.КоличествоЧетверг +
											СтрокаТаблицы.КоличествоПятница +
											СтрокаТаблицы.КоличествоСуббота +
											СтрокаТаблицы.КоличествоВоскресенье;
		СтрокаТаблицы.ПланСумма 		= СтрокаТаблицы.Цена * СтрокаТаблицы.ПланКоличество;
		
	КонецЦикла;                                                                          
	
КонецПроцедуры

// Изменяет числовые показатели для дня в регистре сведений "ПланыПродажПоДнямНедели" в пропорции к итогу за день.
//
Процедура ИзменитьКоличествоПоИтогуСервер(СтруктураПараметров)
	
	ВремТаблица = ЭтаФорма.ПланыПродажПоДнямНедели.Выгрузить(Новый Структура("Изменять", Истина));
	ИтогоПн = ВремТаблица.Итог("КоличествоПонедельник");
	СтруктураПараметров.Вставить("КоэффициентПн", ?(ИтогоПн = 0, 1, ЭтаФорма.ИтогоКоличествоПонедельник / ИтогоПн));
	ИтогоВт = ВремТаблица.Итог("КоличествоВторник");
	СтруктураПараметров.Вставить("КоэффициентВт", ?(ИтогоВт = 0, 1, ЭтаФорма.ИтогоКоличествоВторник 	/ ИтогоВт));
	ИтогоСр = ВремТаблица.Итог("КоличествоСреда");
	СтруктураПараметров.Вставить("КоэффициентСр", ?(ИтогоСр = 0, 1, ЭтаФорма.ИтогоКоличествоСреда 		/ ИтогоСр));
	ИтогоЧт = ВремТаблица.Итог("КоличествоЧетверг");
	СтруктураПараметров.Вставить("КоэффициентЧт", ?(ИтогоЧт = 0, 1, ЭтаФорма.ИтогоКоличествоЧетверг 	/ ИтогоЧт));
	ИтогоПт = ВремТаблица.Итог("КоличествоПятница");
	СтруктураПараметров.Вставить("КоэффициентПт", ?(ИтогоПт = 0, 1, ЭтаФорма.ИтогоКоличествоПятница 	/ ИтогоПт));
	ИтогоСб = ВремТаблица.Итог("КоличествоСуббота");
	СтруктураПараметров.Вставить("КоэффициентСб", ?(ИтогоСб = 0, 1, ЭтаФорма.ИтогоКоличествоСуббота 	/ ИтогоСб));
	ИтогоВс = ВремТаблица.Итог("КоличествоВоскресенье");
	СтруктураПараметров.Вставить("КоэффициентВс", ?(ИтогоВс = 0, 1, ЭтаФорма.ИтогоКоличествоВоскресенье / ИтогоВс));
	
	ВремТаблица = ЭтаФорма.ПланыПродажПоДнямНедели.Выгрузить();
	
	ИзменитьКоличествоПоИтогуИЗаписатьСервер(ВремТаблица, СтруктураПараметров);
	
	ЭтаФорма.ПланыПродажПоДнямНедели.Загрузить(ВремТаблица);
	
	ОбновитьВсеИтогиПоДням();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьКоличествоПоИтогу(Команда)

	СтруктураПараметров = ПолучитьСтруктуруПараметровДляЗаписиВПланПродаж();
	
	ИзменитьКоличествоПоИтогуСервер(СтруктураПараметров);
	
КонецПроцедуры


Функция ПолучитьСвернутыйПлан()
	
	Перем ТаблицаСвернутыйПлан, МассивСтруктур, СтруктураСтроки;
	
	ТаблицаСвернутыйПлан = ЭтаФорма.ПланыПродажПоДнямНедели.Выгрузить();
	ТаблицаСвернутыйПлан.Свернуть("ТорговаяТочка", "ПланСумма");
	ТаблицаСвернутыйПлан.Колонки.ПланСумма.Имя = "Сумма";
	
	МассивСтруктур = Новый Массив;
	ТекНоменклатура = ЭтаФорма.НоменклатураОтбор;
	Для Каждого СтрокаТаблицы Из ТаблицаСвернутыйПлан Цикл
		СтруктураСтроки = Новый Структура;
		СтруктураСтроки.Вставить("Номенклатура"	, ТекНоменклатура);
		СтруктураСтроки.Вставить("ТорговаяТочка", СтрокаТаблицы.ТорговаяТочка);
		СтруктураСтроки.Вставить("Сумма"		, СтрокаТаблицы.Сумма);
		МассивСтруктур.Добавить(СтруктураСтроки);
	КонецЦикла;
	
	Возврат МассивСтруктур;
	
КонецФункции

&НаКлиенте
Процедура КнопкаОКНажатие(Команда)
	
	МассивСтруктур = ПолучитьСвернутыйПлан();
	
	ЭтаФорма.Закрыть(МассивСтруктур);
	
КонецПроцедуры


///////////////////
// ТП Планы продаж

&НаКлиенте
Процедура ОтменитьРучнуюКорректировкуВПланеПродаж(Команда)

	Перем ТекДанные, ИмяТекЭлемента;
	
	ТекДанные 		= Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные;
	ИмяТекЭлемента 	= Элементы.ПланыПродажПоДнямНедели.ТекущийЭлемент.Имя;
	
	Если ИмяТекЭлемента = "ПланыПродажПоДнямНеделиКоличествоПонедельник" Тогда
		ТекДанные.ПнИзменен = Ложь;
	ИначеЕсли ИмяТекЭлемента = "ПланыПродажПоДнямНеделиКоличествоВторник" Тогда
		ТекДанные.ВтИзменен = Ложь;
	ИначеЕсли ИмяТекЭлемента = "ПланыПродажПоДнямНеделиКоличествоСреда" Тогда
		ТекДанные.СрИзменен = Ложь;
	ИначеЕсли ИмяТекЭлемента = "ПланыПродажПоДнямНеделиКоличествоЧетверг" Тогда
		ТекДанные.ЧтИзменен = Ложь;
	ИначеЕсли ИмяТекЭлемента = "ПланыПродажПоДнямНеделиКоличествоПятница" Тогда
		ТекДанные.ПтИзменен = Ложь;
	ИначеЕсли ИмяТекЭлемента = "ПланыПродажПоДнямНеделиКоличествоСуббота" Тогда
		ТекДанные.СбИзменен = Ложь;
	ИначеЕсли ИмяТекЭлемента = "ПланыПродажПоДнямНеделиКоличествоВоскресенье" Тогда
		ТекДанные.ВсИзменен = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииКоличестваВПланеПродаж(ТекДанные)
	
	ТекДанные.ПланКоличество = ТекДанные.КоличествоПонедельник +
									ТекДанные.КоличествоВторник +
									ТекДанные.КоличествоСреда +
									ТекДанные.КоличествоЧетверг +
									ТекДанные.КоличествоПятница +
									ТекДанные.КоличествоСуббота +
									ТекДанные.КоличествоВоскресенье;
	
	ТекДанные.ПланСумма = ТекДанные.ПланКоличество * ТекДанные.Цена;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиИзменять(Команда)

	Для Каждого СтрокаТаблицы Из ЭтаФорма.ПланыПродажПоДнямНедели Цикл
		СтрокаТаблицы.Изменять = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиИзменять(Команда)

	Для Каждого СтрокаТаблицы Из ЭтаФорма.ПланыПродажПоДнямНедели Цикл
		СтрокаТаблицы.Изменять = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиТолькоВВ(Команда)

	мТипТТДляТАВВ = ПредопределенноеЗначение("Перечисление.ТипыТорговыхТочекДляТоварногоАссортимента.ВВ");
	Для Каждого СтрокаТаблицы Из ЭтаФорма.ПланыПродажПоДнямНедели Цикл
		Если ПолучитьТипТТДляТА(СтрокаТаблицы.ТорговаяТочка) = мТипТТДляТАВВ Тогда
			СтрокаТаблицы.Изменять = Истина;
		Иначе
			СтрокаТаблицы.Изменять = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиТТМиниТТПусто(Команда)

	мТипТТДляТАВВ = ПредопределенноеЗначение("Перечисление.ТипыТорговыхТочекДляТоварногоАссортимента.ВВ");
	Для Каждого СтрокаТаблицы Из ЭтаФорма.ПланыПродажПоДнямНедели Цикл
		Если ПолучитьТипТТДляТА(СтрокаТаблицы.ТорговаяТочка) = мТипТТДляТАВВ Тогда
			СтрокаТаблицы.Изменять = Ложь;
		Иначе
			СтрокаТаблицы.Изменять = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиКоличествоПонедельникПриИзменении(Элемент)
	
	Перем ТекДанные;
	
	ТекДанные = Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные;
	
	ПриИзмененииКоличестваВПланеПродаж(ТекДанные); // пересчет общего количества и суммы
	
	ИзменитьКоличествоИтогоПоДню("Понедельник");
	
	ТекДанные.ПнИзменен = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиКоличествоВторникПриИзменении(Элемент)
	
	Перем ТекДанные;
	
	ТекДанные = Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные;
	
	ПриИзмененииКоличестваВПланеПродаж(ТекДанные); // пересчет общего количества и суммы
	
	ИзменитьКоличествоИтогоПоДню("Вторник");
	
	ТекДанные.ВтИзменен = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиКоличествоСредаПриИзменении(Элемент)
	
	Перем ТекДанные;
	
	ТекДанные = Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные;
	
	ПриИзмененииКоличестваВПланеПродаж(ТекДанные); // пересчет общего количества и суммы
	
	ИзменитьКоличествоИтогоПоДню("Среда");
	
	ТекДанные.СрИзменен = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиКоличествоЧетвергПриИзменении(Элемент)
	
	Перем ТекДанные;
	
	ТекДанные = Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные;
	
	ПриИзмененииКоличестваВПланеПродаж(ТекДанные); // пересчет общего количества и суммы
	
	ИзменитьКоличествоИтогоПоДню("Четверг");
	
	ТекДанные.ЧтИзменен = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиКоличествоПятницаПриИзменении(Элемент)
	
	Перем ТекДанные;
	
	ТекДанные = Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные;
	
	ПриИзмененииКоличестваВПланеПродаж(ТекДанные); // пересчет общего количества и суммы
	
	ИзменитьКоличествоИтогоПоДню("Пятница");
	
	ТекДанные.ПтИзменен = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиКоличествоСубботаПриИзменении(Элемент)
	
	Перем ТекДанные;
	
	ТекДанные = Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные;
	
	ПриИзмененииКоличестваВПланеПродаж(ТекДанные); // пересчет общего количества и суммы
	
	ИзменитьКоличествоИтогоПоДню("Суббота");
	
	ТекДанные.СбИзменен = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиКоличествоВоскресеньеПриИзменении(Элемент)
	
	Перем ТекДанные;
	
	ТекДанные = Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные;
	
	ПриИзмененииКоличестваВПланеПродаж(ТекДанные); // пересчет общего количества и суммы
	
	ИзменитьКоличествоИтогоПоДню("Воскресенье");
	
	ТекДанные.ВсИзменен = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиЦенаПриИзменении(Элемент)
	
	Перем ТекДанные;
	
	ТекДанные = Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные;
	
	//ПриИзмененииКоличестваВПланеПродаж(ТекДанные);
	ТекДанные.ПланСумма = ТекДанные.ПланКоличество * ТекДанные.Цена;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиПриИзменении(Элемент)
	
	Если ЭтаФорма.СписокДатПериода.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные = Элемент.ТекущиеДанные;
	
	// перезапись в регистр сведений "ПланыПродажПоДнямНедели" данных строки
	СтрокаКолонок = "ТорговаяТочка, КоличествоПонедельник, КоличествоВторник, КоличествоСреда, КоличествоЧетверг, КоличествоПятница, КоличествоСуббота, КоличествоВоскресенье, ПланКоличество, ПланСумма, Цена";
	СтруктураПараметров = Новый Структура(СтрокаКолонок);
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, ТекДанные, СтрокаКолонок);
	
	СтруктураПараметров.Вставить("Расчетчик"				, ЭтаФорма.Расчетчик);
	СтруктураПараметров.Вставить("НоменклатураОтбор"		, ЭтаФорма.НоменклатураОтбор);
	СтруктураПараметров.Вставить("СписокДатПериода"			, ЭтаФорма.СписокДатПериода);
	СтруктураПараметров.Вставить("СписокЗначенийКИзменению"	, ЭтаФорма.СписокЗначенийКИзменению);
	
	ДобавитьЗаписьВПланПродажПоДням(СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиПриАктивизацииСтроки(Элемент)

	ТекДанные = Элемент.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ПродажиЗаПрошлыеНедели.ОтборСтрок = Новый ФиксированнаяСтруктура("ТорговаяТочка", ТекДанные.ТорговаяТочка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиПередУдалением(Элемент, Отказ)

	Перем ТекВыделенныеСтроки, ТекДанные;
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтаФорма.СписокДатПериода.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("ТорговаяТочка");
	СтруктураПараметров.Вставить("Расчетчик"		, ЭтаФорма.Расчетчик);
	СтруктураПараметров.Вставить("НоменклатураОтбор", ЭтаФорма.НоменклатураОтбор);
	СтруктураПараметров.Вставить("СписокДатПериода"	, ЭтаФорма.СписокДатПериода);
	
	ТекВыделенныеСтроки = Элемент.ВыделенныеСтроки;
	
	мМассивТорговыхТочек = Новый Массив;
	Для Каждого СтрокаТаблицы Из ТекВыделенныеСтроки Цикл
		ТекДанные = ЭтаФорма.ПланыПродажПоДнямНедели.НайтиПоИдентификатору(СтрокаТаблицы);
		мМассивТорговыхТочек.Добавить(ТекДанные.ТорговаяТочка);
	КонецЦикла;	
	СтруктураПараметров.Вставить("МассивТорговыхТочек", мМассивТорговыхТочек);
	
	//
	УдалитьЗаписиВПланеПродажПоДням(СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)

	Если НоваяСтрока Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтаФорма.СписокЗначенийКИзменению.Количество() > 0 Тогда
		ЭтаФорма.СписокЗначенийКИзменению.Очистить();
	КонецЕсли;
	
	ТекДанные = Элемент.ТекущиеДанные;
	ЭтаФорма.СписокЗначенийКИзменению.Добавить(ТекДанные.ТорговаяТочка);
	ЭтаФорма.СписокЗначенийКИзменению.Добавить(ТекДанные.КоличествоПонедельник);
	ЭтаФорма.СписокЗначенийКИзменению.Добавить(ТекДанные.КоличествоВторник);
	ЭтаФорма.СписокЗначенийКИзменению.Добавить(ТекДанные.КоличествоСреда);
	ЭтаФорма.СписокЗначенийКИзменению.Добавить(ТекДанные.КоличествоЧетверг);
	ЭтаФорма.СписокЗначенийКИзменению.Добавить(ТекДанные.КоличествоПятница);
	ЭтаФорма.СписокЗначенийКИзменению.Добавить(ТекДанные.КоличествоСуббота);
	ЭтаФорма.СписокЗначенийКИзменению.Добавить(ТекДанные.КоличествоВоскресенье);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	//Если ОтменаРедактирования Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Если ЭтаФорма.СписокДатПериода.Количество() = 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//ТекДанные = Элемент.ТекущиеДанные;
	//
	//// перезапись в регистр сведений "ПланыПродажПоДнямНедели" данных строки
	//СтрокаКолонок = "ТорговаяТочка, КоличествоПонедельник, КоличествоВторник, КоличествоСреда, КоличествоЧетверг, КоличествоПятница, КоличествоСуббота, КоличествоВоскресенье, ПланКоличество, ПланСумма, Цена";
	//СтруктураПараметров = Новый Структура(СтрокаКолонок);
	//ЗаполнитьЗначенияСвойств(СтруктураПараметров, ТекДанные, СтрокаКолонок);
	//
	//СтруктураПараметров.Вставить("Расчетчик"				, ЭтаФорма.Расчетчик);
	//СтруктураПараметров.Вставить("НоменклатураОтбор"		, ЭтаФорма.НоменклатураОтбор);
	//СтруктураПараметров.Вставить("СписокДатПериода"			, ЭтаФорма.СписокДатПериода);
	//СтруктураПараметров.Вставить("СписокЗначенийКИзменению"	, ЭтаФорма.СписокЗначенийКИзменению);
	//
	//ДобавитьЗаписьВПланПродажПоДням(СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиТорговаяТочкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	Перем ФормаВыбора, ОтборПоСсылке;
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = ПолучитьФорму("Справочник.СтруктурныеЕдиницы.Форма.ФормаВыбора",, Элемент);

	ФормаВыбора.Элементы.Список.ТекущаяСтрока = Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные.ТорговаяТочка;
	
	мСписок = ФормаВыбора.Список;
	ЭлементОтбора = мСписок.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Ссылка");   
    ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
    ЭлементОтбора.Использование  = Истина;
    ЭлементОтбора.ПравоеЗначение = ЭтаФорма.СписокТорговыхТочек;
    ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ФормаВыбора.Элементы.ФормаОчиститьОтборы.Доступность = Ложь;
	ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиТолькоДляПерекрестков(Команда)
	мТипТТ = ПредопределенноеЗначение("Перечисление.ТипыРозничныхТочек.Перекресток");
	Для Каждого СтрокаТаблицы Из ЭтаФорма.ПланыПродажПоДнямНедели Цикл
		Если ПолучитьТипТТСТороннейРозницы(СтрокаТаблицы.ТорговаяТочка) = мТипТТ Тогда
			СтрокаТаблицы.Изменять = Истина;
		Иначе
			СтрокаТаблицы.Изменять = Ложь;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиТолькоДляПятерочек(Команда)
	мТипТТ = ПредопределенноеЗначение("Перечисление.ТипыРозничныхТочек.Пятерочка");
	Для Каждого СтрокаТаблицы Из ЭтаФорма.ПланыПродажПоДнямНедели Цикл
		Если ПолучитьТипТТСТороннейРозницы(СтрокаТаблицы.ТорговаяТочка) = мТипТТ Тогда
			СтрокаТаблицы.Изменять = Истина;
		Иначе
			СтрокаТаблицы.Изменять = Ложь;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
