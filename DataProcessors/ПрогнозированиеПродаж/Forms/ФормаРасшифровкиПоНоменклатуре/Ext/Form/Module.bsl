
&НаСервере
Процедура УстановитьВидимостьКолонок(мМассивДнейНеделиПериода)
	
	Элементы.ПланыПродажПоДнямНеделиКоличествоПонедельник.Видимость = (НЕ мМассивДнейНеделиПериода.Найти(1) = Неопределено);
	Элементы.ПланыПродажПоДнямНеделиКоличествоВторник.Видимость 	= (НЕ мМассивДнейНеделиПериода.Найти(2) = Неопределено);
	Элементы.ПланыПродажПоДнямНеделиКоличествоСреда.Видимость 		= (НЕ мМассивДнейНеделиПериода.Найти(3) = Неопределено);
	Элементы.ПланыПродажПоДнямНеделиКоличествоЧетверг.Видимость 	= (НЕ мМассивДнейНеделиПериода.Найти(4) = Неопределено);
	Элементы.ПланыПродажПоДнямНеделиКоличествоПятница.Видимость 	= (НЕ мМассивДнейНеделиПериода.Найти(5) = Неопределено);
	Элементы.ПланыПродажПоДнямНеделиКоличествоСуббота.Видимость 	= (НЕ мМассивДнейНеделиПериода.Найти(6) = Неопределено);
	Элементы.ПланыПродажПоДнямНеделиКоличествоВоскресенье.Видимость = (НЕ мМассивДнейНеделиПериода.Найти(7) = Неопределено);
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьТекстДняНедели(мДеньНедели)
	
	мИндексДняНедели = Перечисления.ДниНедели.Индекс(мДеньНедели) + 1;
	Если мИндексДняНедели = 1 Тогда
		Возврат "Понедельник";
	ИначеЕсли мИндексДняНедели = 2 Тогда
		Возврат "Вторник";
	ИначеЕсли мИндексДняНедели = 3 Тогда
		Возврат "Среда";
	ИначеЕсли мИндексДняНедели = 4 Тогда
		Возврат "Четверг";
	ИначеЕсли мИндексДняНедели = 5 Тогда
		Возврат "Пятница";
	ИначеЕсли мИндексДняНедели = 6 Тогда
		Возврат "Суббота";
	Иначе
		Возврат "Воскресенье";
	КонецЕсли;
	
КонецФункции

Процедура ЗаполнитьТаблицуПродаж()
	
	Перем Запрос, ТаблицаЗапроса;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаАссортимента"	, КонецДня(ТекущаяДата() + 86400));
	Запрос.УстановитьПараметр("ТорговаяТочка"		, ЭтаФорма.ТорговаяТочка);
	Запрос.УстановитьПараметр("МассивНоменклатуры"	, ЭтаФорма.СписокНоменклатуры);
	Запрос.УстановитьПараметр("МассивДней"			, ЭтаФорма.СписокДатПериода);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварныйАссортиментТочек.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ВТНоменклатураАссортимента
	|ИЗ
	|	РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(
	|			&ДатаАссортимента,
	|			ТорговаяТочка = &ТорговаяТочка
	|				И Номенклатура В (&МассивНоменклатуры)) КАК ТоварныйАссортиментТочек
	|ГДЕ
	|	НЕ ТоварныйАссортиментТочек.Выведена
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланыПродажПоДнямНедели.Номенклатура,
	|	ПланыПродажПоДнямНедели.Номенклатура.Наименование КАК НаименованиеНоменклатуры,
	|	ВЫБОР
	|		КОГДА ДЕНЬНЕДЕЛИ(ПланыПродажПоДнямНедели.Дата) = 1
	|			ТОГДА ПланыПродажПоДнямНедели.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоПонедельник,
	|	ВЫБОР
	|		КОГДА ДЕНЬНЕДЕЛИ(ПланыПродажПоДнямНедели.Дата) = 2
	|			ТОГДА ПланыПродажПоДнямНедели.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоВторник,
	|	ВЫБОР
	|		КОГДА ДЕНЬНЕДЕЛИ(ПланыПродажПоДнямНедели.Дата) = 3
	|			ТОГДА ПланыПродажПоДнямНедели.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоСреда,
	|	ВЫБОР
	|		КОГДА ДЕНЬНЕДЕЛИ(ПланыПродажПоДнямНедели.Дата) = 4
	|			ТОГДА ПланыПродажПоДнямНедели.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоЧетверг,
	|	ВЫБОР
	|		КОГДА ДЕНЬНЕДЕЛИ(ПланыПродажПоДнямНедели.Дата) = 5
	|			ТОГДА ПланыПродажПоДнямНедели.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоПятница,
	|	ВЫБОР
	|		КОГДА ДЕНЬНЕДЕЛИ(ПланыПродажПоДнямНедели.Дата) = 6
	|			ТОГДА ПланыПродажПоДнямНедели.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоСуббота,
	|	ВЫБОР
	|		КОГДА ДЕНЬНЕДЕЛИ(ПланыПродажПоДнямНедели.Дата) = 7
	|			ТОГДА ПланыПродажПоДнямНедели.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоВоскресенье,
	|	ПланыПродажПоДнямНедели.Количество,
	|	ПланыПродажПоДнямНедели.Цена
	|ПОМЕСТИТЬ ВТОсновная
	|ИЗ
	|	РегистрСведений.ПланыПродажПоДнямНедели КАК ПланыПродажПоДнямНедели
	|ГДЕ
	|	ПланыПродажПоДнямНедели.Дата В(&МассивДней)
	|	И ПланыПродажПоДнямНедели.ТорговаяТочка = &ТорговаяТочка
	|	И ПланыПродажПоДнямНедели.Номенклатура В
	|			(ВЫБРАТЬ
	|				ВТНоменклатураАссортимента.Номенклатура
	|			ИЗ
	|				ВТНоменклатураАссортимента)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТОсновная.Номенклатура КАК Номенклатура,
	|	ВТОсновная.НаименованиеНоменклатуры КАК НаименованиеНоменклатуры,
	|	ВТОсновная.КоличествоПонедельник КАК КоличествоПонедельник,
	|	ВТОсновная.КоличествоВторник КАК КоличествоВторник,
	|	ВТОсновная.КоличествоСреда КАК КоличествоСреда,
	|	ВТОсновная.КоличествоЧетверг КАК КоличествоЧетверг,
	|	ВТОсновная.КоличествоПятница КАК КоличествоПятница,
	|	ВТОсновная.КоличествоСуббота КАК КоличествоСуббота,
	|	ВТОсновная.КоличествоВоскресенье КАК КоличествоВоскресенье,
	|	ВТОсновная.Количество КАК Количество,
	|	ВТОсновная.Цена КАК Цена
	|ПОМЕСТИТЬ ВТПоследняя
	|ИЗ
	|	ВТОсновная КАК ВТОсновная
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СпрНоменклатура.Ссылка,
	|	СпрНоменклатура.Наименование,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТНоменклатураАссортимента.Номенклатура
	|			ИЗ
	|				ВТНоменклатураАссортимента)
	|	И НЕ СпрНоменклатура.Ссылка В
	|				(ВЫБРАТЬ
	|					ВТосновная.Номенклатура
	|				ИЗ
	|					ВТосновная)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИСТИНА КАК Изменять,
	|	ВТПоследняя.Номенклатура,
	|	СУММА(ВТПоследняя.КоличествоПонедельник) КАК КоличествоПонедельник,
	|	СУММА(ВТПоследняя.КоличествоВторник) КАК КоличествоВторник,
	|	СУММА(ВТПоследняя.КоличествоСреда) КАК КоличествоСреда,
	|	СУММА(ВТПоследняя.КоличествоЧетверг) КАК КоличествоЧетверг,
	|	СУММА(ВТПоследняя.КоличествоПятница) КАК КоличествоПятница,
	|	СУММА(ВТПоследняя.КоличествоСуббота) КАК КоличествоСуббота,
	|	СУММА(ВТПоследняя.КоличествоВоскресенье) КАК КоличествоВоскресенье,
	|	СУММА(ВТПоследняя.Количество) КАК ПланКоличество,
	|	ВТПоследняя.Цена * СУММА(ВТПоследняя.Количество) КАК ПланСумма,
	|	ВТПоследняя.Цена
	|ИЗ
	|	ВТПоследняя КАК ВТПоследняя
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТПоследняя.Номенклатура,
	|	ВТПоследняя.НаименованиеНоменклатуры,
	|	ВТПоследняя.Цена
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТПоследняя.НаименованиеНоменклатуры";
	
	ТаблицаЗапроса = Запрос.Выполнить().Выгрузить();
	
	// вывод на форму
	ЭтаФорма.ПланыПродажПоДнямНедели.Загрузить(ТаблицаЗапроса);
	
КонецПроцедуры

// Добавляет запись в регистр сведений "ПланыПродажПоДнямНедели" на основании строки таблицы на форме.
//
&НаСервереБезКонтекста
Процедура ДобавитьЗаписьВПланПродажПоДням(СтруктураПараметров)
	
	ТекСписокЗначенийКИзменению = СтруктураПараметров.СписокЗначенийКИзменению;
	Если ТекСписокЗначенийКИзменению.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// запись в регистр "ПланыПродажПоДнямНедели" измененных данных
	мПланыПродажПоДнямНедели = РегистрыСведений.ПланыПродажПоДнямНедели;
	
	ПредНоменклатура = ТекСписокЗначенийКИзменению[0].Значение;
	
	мРасчетчик 		= СтруктураПараметров.Расчетчик;
	мТорговаяТочка 	= СтруктураПараметров.ТорговаяТочка;
	
	мНоменклатураИзменилась = (НЕ СтруктураПараметров.Номенклатура = ПредНоменклатура);
	
	////////////////////////////////////
	// УДАЛЕНИЕ из регистра старых значений
	Если мНоменклатураИзменилась Тогда // если изменилась номенклатура - очистка записи по предыдущей номенклатуре
		
		Для Каждого ЭлементСписка Из СтруктураПараметров.СписокДатПериода Цикл
			НаборЗаписей = мПланыПродажПоДнямНедели.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Дата.Установить(ЭлементСписка.Значение);
			НаборЗаписей.Отбор.ТорговаяТочка.Установить(мТорговаяТочка);
			НаборЗаписей.Отбор.Номенклатура.Установить(ПредНоменклатура);
			НаборЗаписей.Прочитать();
			Попытка
				НаборЗаписей.Очистить();
				НаборЗаписей.Записать();
			Исключение
				Сообщить("Не удалось очистить предыдущие значения плана продаж по дням недели" + Символы.ПС + ОписаниеОшибки());
			КонецПопытки;
	    КонецЦикла;
		
	КонецЕсли;		
	
	
	////////////////////////////////////
	// ЗАПИСЬ в регистр новых значений
	ДатаПонедельник = НачалоНедели(СтруктураПараметров.СписокДатПериода[0].Значение);
	ПредКоличествоПонедельник 	= ТекСписокЗначенийКИзменению[1].Значение;
	ПредКоличествоВторник 		= ТекСписокЗначенийКИзменению[2].Значение;
	ПредКоличествоСреда 		= ТекСписокЗначенийКИзменению[3].Значение;
	ПредКоличествоЧетверг 		= ТекСписокЗначенийКИзменению[4].Значение;
	ПредКоличествоПятница 		= ТекСписокЗначенийКИзменению[5].Значение;
	ПредКоличествоСуббота 		= ТекСписокЗначенийКИзменению[6].Значение;
	ПредКоличествоВоскресенье 	= ТекСписокЗначенийКИзменению[7].Значение;
	
	// понедельник
	Если мНоменклатураИзменилась
			ИЛИ НЕ СтруктураПараметров.КоличествоПонедельник = ПредКоличествоПонедельник Тогда
			
		МенеджерЗаписи = мПланыПродажПоДнямНедели.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Дата 			= ДатаПонедельник;
		МенеджерЗаписи.Расчетчик 		= мРасчетчик;
		МенеджерЗаписи.ТорговаяТочка 	= мТорговаяТочка;
		МенеджерЗаписи.Номенклатура 	= СтруктураПараметров.Номенклатура;
		МенеджерЗаписи.Количество 		= СтруктураПараметров.КоличествоПонедельник;
		МенеджерЗаписи.Цена 			= СтруктураПараметров.Цена;
		МенеджерЗаписи.Склад 			= мРасчетчик.Склад;
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			Сообщить("Не удалось записать план продаж по дням недели" + Символы.ПС + ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
	// вторник
	Если мНоменклатураИзменилась
			ИЛИ НЕ СтруктураПараметров.КоличествоВторник = ПредКоличествоВторник Тогда
			
		МенеджерЗаписи = мПланыПродажПоДнямНедели.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Дата 			= ДатаПонедельник + 86400;
		МенеджерЗаписи.Расчетчик 		= мРасчетчик;
		МенеджерЗаписи.ТорговаяТочка 	= мТорговаяТочка;
		МенеджерЗаписи.Номенклатура 	= СтруктураПараметров.Номенклатура;
		МенеджерЗаписи.Количество 		= СтруктураПараметров.КоличествоВторник;
		МенеджерЗаписи.Цена 			= СтруктураПараметров.Цена;
		МенеджерЗаписи.Склад 			= мРасчетчик.Склад;
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			Сообщить("Не удалось записать план продаж по дням недели" + Символы.ПС + ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
	// среда
	Если мНоменклатураИзменилась
			ИЛИ НЕ СтруктураПараметров.КоличествоСреда = ПредКоличествоСреда Тогда
			
		МенеджерЗаписи = мПланыПродажПоДнямНедели.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Дата 			= ДатаПонедельник + 2 * 86400;
		МенеджерЗаписи.Расчетчик 		= мРасчетчик;
		МенеджерЗаписи.ТорговаяТочка 	= мТорговаяТочка;
		МенеджерЗаписи.Номенклатура 	= СтруктураПараметров.Номенклатура;
		МенеджерЗаписи.Количество 		= СтруктураПараметров.КоличествоСреда;
		МенеджерЗаписи.Цена 			= СтруктураПараметров.Цена;
		МенеджерЗаписи.Склад 			= мРасчетчик.Склад;
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			Сообщить("Не удалось записать план продаж по дням недели" + Символы.ПС + ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
	// четверг
	Если мНоменклатураИзменилась
			ИЛИ НЕ СтруктураПараметров.КоличествоЧетверг = ПредКоличествоЧетверг Тогда
			
		МенеджерЗаписи = мПланыПродажПоДнямНедели.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Дата 			= ДатаПонедельник + 3 * 86400;
		МенеджерЗаписи.Расчетчик 		= мРасчетчик;
		МенеджерЗаписи.ТорговаяТочка 	= мТорговаяТочка;
		МенеджерЗаписи.Номенклатура 	= СтруктураПараметров.Номенклатура;
		МенеджерЗаписи.Количество 		= СтруктураПараметров.КоличествоЧетверг;
		МенеджерЗаписи.Цена 			= СтруктураПараметров.Цена;
		МенеджерЗаписи.Склад 			= мРасчетчик.Склад;
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			Сообщить("Не удалось записать план продаж по дням недели" + Символы.ПС + ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
	// пятница
	Если мНоменклатураИзменилась
			ИЛИ НЕ СтруктураПараметров.КоличествоПятница = ПредКоличествоПятница Тогда
			
		МенеджерЗаписи = мПланыПродажПоДнямНедели.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Дата 			= ДатаПонедельник + 4 * 86400;
		МенеджерЗаписи.Расчетчик 		= мРасчетчик;
		МенеджерЗаписи.ТорговаяТочка 	= мТорговаяТочка;
		МенеджерЗаписи.Номенклатура 	= СтруктураПараметров.Номенклатура;
		МенеджерЗаписи.Количество 		= СтруктураПараметров.КоличествоПятница;
		МенеджерЗаписи.Цена 			= СтруктураПараметров.Цена;
		МенеджерЗаписи.Склад 			= мРасчетчик.Склад;
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			Сообщить("Не удалось записать план продаж по дням недели" + Символы.ПС + ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
	// суббота
	Если мНоменклатураИзменилась
			ИЛИ НЕ СтруктураПараметров.КоличествоСуббота = ПредКоличествоСуббота Тогда
			
		МенеджерЗаписи = мПланыПродажПоДнямНедели.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Дата 			= ДатаПонедельник + 5 * 86400;
		МенеджерЗаписи.Расчетчик 		= мРасчетчик;
		МенеджерЗаписи.ТорговаяТочка 	= мТорговаяТочка;
		МенеджерЗаписи.Номенклатура 	= СтруктураПараметров.Номенклатура;
		МенеджерЗаписи.Количество 		= СтруктураПараметров.КоличествоСуббота;
		МенеджерЗаписи.Цена 			= СтруктураПараметров.Цена;
		МенеджерЗаписи.Склад 			= мРасчетчик.Склад;
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			Сообщить("Не удалось записать план продаж по дням недели" + Символы.ПС + ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
	// воскресенье
	Если мНоменклатураИзменилась
			ИЛИ НЕ СтруктураПараметров.КоличествоВоскресенье = ПредКоличествоВоскресенье Тогда
			
		МенеджерЗаписи = мПланыПродажПоДнямНедели.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Дата 			= ДатаПонедельник + 6 * 86400;
		МенеджерЗаписи.Расчетчик 		= мРасчетчик;
		МенеджерЗаписи.ТорговаяТочка 	= мТорговаяТочка;
		МенеджерЗаписи.Номенклатура 	= СтруктураПараметров.Номенклатура;
		МенеджерЗаписи.Количество 		= СтруктураПараметров.КоличествоВоскресенье;
		МенеджерЗаписи.Цена 			= СтруктураПараметров.Цена;
		МенеджерЗаписи.Склад 			= мРасчетчик.Склад;
		
		Попытка
			МенеджерЗаписи.Записать();
		Исключение
			Сообщить("Не удалось записать план продаж по дням недели" + Символы.ПС + ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьЗаписиВПланеПродажПоДням(СтруктураПараметров)
	
	Перем мПланыПродажПоДнямНедели, НаборЗаписей;
	
	// удаление в регистре "ПланыПродажПоДнямНедели"
	мПланыПродажПоДнямНедели = РегистрыСведений.ПланыПродажПоДнямНедели;
	
	мРасчетчик 		= СтруктураПараметров.Расчетчик;
	мТорговаяТочка 	= СтруктураПараметров.ТорговаяТочка;
	
	Для Каждого ТекНоменклатура Из СтруктураПараметров.МассивНоменклатуры Цикл
		Для Каждого ЭлементСписка Из СтруктураПараметров.СписокДатПериода Цикл
			
			НаборЗаписей = мПланыПродажПоДнямНедели.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Дата.Установить(ЭлементСписка.Значение);
			НаборЗаписей.Отбор.ТорговаяТочка.Установить(мТорговаяТочка);
			НаборЗаписей.Отбор.Номенклатура.Установить(ТекНоменклатура);
			НаборЗаписей.Прочитать();
			
			НаборЗаписей.Очистить();
			
			Попытка
				НаборЗаписей.Записать();
			Исключение
				Сообщить("Не удалось удалить запись плана продаж по дням недели!" + Символы.ПС + ОписаниеОшибки());
			КонецПопытки;
			
	    КонецЦикла;
    КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьЗаписьВПланыПоСтроке(МенеджерРегистра, СтруктураПараметров);
	
	// очистить строку, если есть
	НаборЗаписей = МенеджерРегистра.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Дата.Установить(СтруктураПараметров.Дата);
	НаборЗаписей.Отбор.ТорговаяТочка.Установить(СтруктураПараметров.ТорговаяТочка);
	НаборЗаписей.Отбор.Номенклатура.Установить(СтруктураПараметров.Номенклатура);
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() > 0 Тогда
		НаборЗаписей.Очистить();
		Попытка
			НаборЗаписей.Записать();
		Исключение
			Сообщить("Не удалось удалить запись плана продаж по дням недели!" + Символы.ПС + ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	НаборЗаписей = Неопределено; // забота о памяти приложения 1С
	
	
	// создание новой записи в регистре
	МенеджерЗаписи = МенеджерРегистра.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтруктураПараметров);
	Попытка
		МенеджерЗаписи.Записать();
	Исключение
		Сообщить("Не удалось записать план продаж по дням недели" + Символы.ПС + ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруПараметровДляЗаписиВПланПродаж()
	
	ДатаПн = Дата(1, 1, 1);
	ДатаВт = Дата(1, 1, 1);
	ДатаСр = Дата(1, 1, 1);
	ДатаЧт = Дата(1, 1, 1);
	ДатаПт = Дата(1, 1, 1);
	ДатаСб = Дата(1, 1, 1);
	ДатаВс = Дата(1, 1, 1);
	Для Каждого ЭлементСписка Из ЭтаФорма.СписокДатПериода Цикл
		ТекДень = ЭлементСписка.Значение;
		Если ДеньНедели(ТекДень) = 1 Тогда
			ДатаПн = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 2 Тогда
			ДатаВт = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 3 Тогда
			ДатаСр = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 4 Тогда
			ДатаЧт = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 5 Тогда
			ДатаПт = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 6 Тогда
			ДатаСб = ТекДень;
		Иначе
			ДатаВс = ТекДень;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Расчетчик"	, ЭтаФорма.Расчетчик);
	СтруктураПараметров.Вставить("ТорговаяТочка", ЭтаФорма.ТорговаяТочка);
	СтруктураПараметров.Вставить("ДатаПн"		, ДатаПн);
	СтруктураПараметров.Вставить("ДатаВт"		, ДатаВт);
	СтруктураПараметров.Вставить("ДатаСр"		, ДатаСр);
	СтруктураПараметров.Вставить("ДатаЧт"		, ДатаЧт);
	СтруктураПараметров.Вставить("ДатаПт"		, ДатаПт);
	СтруктураПараметров.Вставить("ДатаСб"		, ДатаСб);
	СтруктураПараметров.Вставить("ДатаВс"		, ДатаВс);
	
	Возврат СтруктураПараметров;
	
КонецФункции

Функция ПолучитьСтруктуруПараметровДляЗаписиВПланПродажСервер()
	
	ДатаПн = Дата(1, 1, 1);
	ДатаВт = Дата(1, 1, 1);
	ДатаСр = Дата(1, 1, 1);
	ДатаЧт = Дата(1, 1, 1);
	ДатаПт = Дата(1, 1, 1);
	ДатаСб = Дата(1, 1, 1);
	ДатаВс = Дата(1, 1, 1);
	Для Каждого ЭлементСписка Из ЭтаФорма.СписокДатПериода Цикл
		ТекДень = ЭлементСписка.Значение;
		Если ДеньНедели(ТекДень) = 1 Тогда
			ДатаПн = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 2 Тогда
			ДатаВт = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 3 Тогда
			ДатаСр = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 4 Тогда
			ДатаЧт = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 5 Тогда
			ДатаПт = ТекДень;
		ИначеЕсли ДеньНедели(ТекДень) = 6 Тогда
			ДатаСб = ТекДень;
		Иначе
			ДатаВс = ТекДень;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Расчетчик"	, ЭтаФорма.Расчетчик);
	СтруктураПараметров.Вставить("Склад"		, ЭтаФорма.Расчетчик.Склад);
	СтруктураПараметров.Вставить("ТорговаяТочка", ЭтаФорма.ТорговаяТочка);
	СтруктураПараметров.Вставить("ДатаПн"		, ДатаПн);
	СтруктураПараметров.Вставить("ДатаВт"		, ДатаВт);
	СтруктураПараметров.Вставить("ДатаСр"		, ДатаСр);
	СтруктураПараметров.Вставить("ДатаЧт"		, ДатаЧт);
	СтруктураПараметров.Вставить("ДатаПт"		, ДатаПт);
	СтруктураПараметров.Вставить("ДатаСб"		, ДатаСб);
	СтруктураПараметров.Вставить("ДатаВс"		, ДатаВс);
	
	Возврат СтруктураПараметров;
	
КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// передаваемые из формы-владельца
	ЭтаФорма.НомерНеделиПлан		= ЭтаФорма.Параметры.НомерНеделиПлан;
	Элементы.НадписьТекНомерНедели.Заголовок = Формат(Этаформа.НомерНеделиПлан, "ЧГ=");
	
	ЭтаФорма.ТорговаяТочка			= ЭтаФорма.Параметры.ТорговаяТочка; // отбор по текущей торговой точке
	ЭтаФорма.Расчетчик				= ЭтаФорма.Параметры.Расчетчик; 	// отбор по правам (расчетчик)
	ЭтаФорма.ПоследняяДатаВнесенияЛистовУчета = ЭтаФорма.Параметры.ПоследняяДатаВнесенияЛистовУчета;
	ЭтаФорма.ГлубинаАнализа			= ЭтаФорма.Параметры.ГлубинаАнализа;
	
	ЭтаФорма.ДеньНеделиИзменения 	= Перечисления.ДниНедели.Понедельник;
	
		
	// список доступных номенклатур (по правам пользователя, по расчетчику) - в реквизит формы
	мМассивНоменклатуры	= ДопМодульСервер.ПолучитьМассивДоступнойНоменклатуры(ЭтаФорма.Расчетчик);
	ТекСписок = Новый СписокЗначений;
	ТекСписок.ЗагрузитьЗначения(мМассивНоменклатуры);
	ЭтаФорма.СписокНоменклатуры = ТекСписок;

	
	// вывод только тех дней планируемой недели, которые попадают в выбранный период планирования
	МассивСтруктур = ЭтаФорма.Параметры.ТаблицаДнейПериодаВНеделе;  // массив структур (из-за тонкого клиента...)
	мТаблицаДнейПериодаВНеделе = Новый ТаблицаЗначений;
	мТаблицаДнейПериодаВНеделе.Колонки.Добавить("Дата"		, Новый ОписаниеТипов("Дата"));
	мТаблицаДнейПериодаВНеделе.Колонки.Добавить("ДеньНедели", Новый ОписаниеТипов("Число",, Новый КвалификаторыЧисла(1, 0)));
	Для Каждого СтруктураЗначенийСтроки Из МассивСтруктур Цикл
		НоваяСтрока = мТаблицаДнейПериодаВНеделе.Добавить();
		НоваяСтрока.Дата 		= СтруктураЗначенийСтроки.Дата;
		НоваяСтрока.ДеньНедели 	= СтруктураЗначенийСтроки.ДеньНедели;
	КонецЦикла;
	ЭтаФорма.ТаблицаДатПериода.Загрузить(мТаблицаДнейПериодаВНеделе);
	
	МассивДнейНеделиПериодаВНеделе = мТаблицаДнейПериодаВНеделе.ВыгрузитьКолонку("ДеньНедели");
	УстановитьВидимостьКолонок(МассивДнейНеделиПериодаВНеделе);
	
	мМассив = мТаблицаДнейПериодаВНеделе.ВыгрузитьКолонку("Дата");
	мСписокДатПериода = Новый СписокЗначений;
	мСписокДатПериода.ЗагрузитьЗначения(мМассив);
	ЭтаФорма.СписокДатПериода = мСписокДатПериода;
	
	
	// вывод на экран записей из регистра сведений
	ЗаполнитьТаблицуПродаж();
	

	// продажи за прошлые периоды
	мСписокТТ = Новый СписокЗначений;
	мСписокТТ.Добавить(ЭтаФорма.ТорговаяТочка);
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ТаблицаПрошлыхПериодов =
		ОбработкаОбъект.ПолучитьПродажиЗаПрошлыеНедели(ЭтаФорма.НомерНеделиПлан, мСписокТТ, мМассивНоменклатуры, "ПоНоменклатуре");
	
	Если НЕ ТаблицаПрошлыхПериодов = Неопределено Тогда
		ЭтаФорма.ПродажиЗаПрошлыеНедели.Загрузить(ТаблицаПрошлыхПериодов);
	Иначе
		Если ЭтаФорма.ПродажиЗаПрошлыеНедели.Количество() > 0 Тогда
			ЭтаФорма.ПродажиЗаПрошлыеНедели.Очистить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГлубинаАнализаПриИзменении(Элемент)
	
	Если ЭтаФорма.ГлубинаАнализа = 0 Тогда
		ЭтаФорма.ГлубинаАнализа = 1;
	КонецЕсли;
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция РаспределитьПоДнямИЗаписатьСервер(СтруктураПараметров, СтруктураНаличияДнейВПериоде)
	
	мРасчетчик 		= СтруктураПараметров.Расчетчик;
	мТорговаяТочка 	= СтруктураПараметров.ТорговаяТочка;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Расчетчик"			, мРасчетчик);
	Запрос.УстановитьПараметр("Склад"				, мРасчетчик.Склад);
	Запрос.УстановитьПараметр("ТорговаяТочка"		, мТорговаяТочка);
	Запрос.УстановитьПараметр("МассивНоменклатуры"	, СтруктураПараметров.МассивНоменклатуры);
	Запрос.УстановитьПараметр("МассивГруппУРЗ"		, СтруктураПараметров.МассивГруппУРЗ);
	Запрос.УстановитьПараметр("ТаблицаНачальная"	, СтруктураПараметров.ТаблицаНачальная);
	Запрос.УстановитьПараметр("ТаблицаДат"			, СтруктураПараметров.ТаблицаДат);
	
	Запрос.УстановитьПараметр("ЕстьПонедельник"	, СтруктураНаличияДнейВПериоде.ЕстьПонедельник);
	Запрос.УстановитьПараметр("ЕстьВторник"		, СтруктураНаличияДнейВПериоде.ЕстьВторник);
	Запрос.УстановитьПараметр("ЕстьСреда"		, СтруктураНаличияДнейВПериоде.ЕстьСреда);
	Запрос.УстановитьПараметр("ЕстьЧетверг"		, СтруктураНаличияДнейВПериоде.ЕстьЧетверг);
	Запрос.УстановитьПараметр("ЕстьПятница"		, СтруктураНаличияДнейВПериоде.ЕстьПятница);
	Запрос.УстановитьПараметр("ЕстьСуббота"		, СтруктураНаличияДнейВПериоде.ЕстьСуббота);
	Запрос.УстановитьПараметр("ЕстьВоскресенье"	, СтруктураНаличияДнейВПериоде.ЕстьВоскресенье);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаспределениеПродажПроценты.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА &ЕстьПонедельник
	|			ТОГДА РаспределениеПродажПроценты.ПроцентПонедельник
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПроцентПонедельник,
	|	ВЫБОР
	|		КОГДА &ЕстьВторник
	|			ТОГДА РаспределениеПродажПроценты.ПроцентВторник
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПроцентВторник,
	|	ВЫБОР
	|		КОГДА &ЕстьСреда
	|			ТОГДА РаспределениеПродажПроценты.ПроцентСреда
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПроцентСреда,
	|	ВЫБОР
	|		КОГДА &ЕстьЧетверг
	|			ТОГДА РаспределениеПродажПроценты.ПроцентЧетверг
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПроцентЧетверг,
	|	ВЫБОР
	|		КОГДА &ЕстьПятница
	|			ТОГДА РаспределениеПродажПроценты.ПроцентПятница
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПроцентПятница,
	|	ВЫБОР
	|		КОГДА &ЕстьСуббота
	|			ТОГДА РаспределениеПродажПроценты.ПроцентСуббота
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПроцентСуббота,
	|	ВЫБОР
	|		КОГДА &ЕстьВоскресенье
	|			ТОГДА РаспределениеПродажПроценты.ПроцентВоскресенье
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПроцентВоскресенье
	|ПОМЕСТИТЬ ВТПроценты
	|ИЗ
	|	РегистрСведений.РаспределениеПродажПоДнямНеделиПроценты КАК РаспределениеПродажПроценты
	|ГДЕ
	|	РаспределениеПродажПроценты.ТорговаяТочка = &ТорговаяТочка
	|	И (РаспределениеПродажПроценты.Номенклатура В (&МассивНоменклатуры)
	|			ИЛИ РаспределениеПродажПроценты.Номенклатура В (&МассивГруппУРЗ)
	|			ИЛИ РаспределениеПродажПроценты.Номенклатура = &Расчетчик
	|			ИЛИ РаспределениеПродажПроценты.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНачальная.Номенклатура,
	|	ТаблицаНачальная.ГруппаУРЗ,
	|	ТаблицаНачальная.Весовой,
	|	ТаблицаНачальная.КоличествоПонедельник,
	|	ТаблицаНачальная.КоличествоВторник,
	|	ТаблицаНачальная.КоличествоСреда,
	|	ТаблицаНачальная.КоличествоЧетверг,
	|	ТаблицаНачальная.КоличествоПятница,
	|	ТаблицаНачальная.КоличествоСуббота,
	|	ТаблицаНачальная.КоличествоВоскресенье,
	|	ВЫБОР
	|		КОГДА НЕ ТаблицаНачальная.ПнИзменен
	|			ТОГДА ТаблицаНачальная.КоличествоПонедельник
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ТаблицаНачальная.ВтИзменен
	|			ТОГДА ТаблицаНачальная.КоличествоВторник
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ТаблицаНачальная.СрИзменен
	|			ТОГДА ТаблицаНачальная.КоличествоСреда
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ТаблицаНачальная.ЧтИзменен
	|			ТОГДА ТаблицаНачальная.КоличествоЧетверг
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ТаблицаНачальная.ПтИзменен
	|			ТОГДА ТаблицаНачальная.КоличествоПятница
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ТаблицаНачальная.СбИзменен
	|			ТОГДА ТаблицаНачальная.КоличествоСуббота
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ТаблицаНачальная.ВсИзменен
	|			ТОГДА ТаблицаНачальная.КоличествоВоскресенье
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбщееКоличество,
	|	ТаблицаНачальная.ПланКоличество,
	|	ТаблицаНачальная.ПланСумма,
	|	ТаблицаНачальная.Цена,
	|	ТаблицаНачальная.ПнИзменен,
	|	ТаблицаНачальная.ВтИзменен,
	|	ТаблицаНачальная.СрИзменен,
	|	ТаблицаНачальная.ЧтИзменен,
	|	ТаблицаНачальная.ПтИзменен,
	|	ТаблицаНачальная.СбИзменен,
	|	ТаблицаНачальная.ВсИзменен
	|ПОМЕСТИТЬ ВТТаблицаНачальная
	|ИЗ
	|	&ТаблицаНачальная КАК ТаблицаНачальная
	|ГДЕ
	|	НЕ(ТаблицаНачальная.ПнИзменен
	|				И ТаблицаНачальная.ВтИзменен
	|				И ТаблицаНачальная.СрИзменен
	|				И ТаблицаНачальная.ЧтИзменен
	|				И ТаблицаНачальная.ПтИзменен
	|				И ТаблицаНачальная.СбИзменен
	|				И ТаблицаНачальная.ВсИзменен)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВТПроценты.Номенклатура = ВТТаблицаНачальная.Номенклатура
	|			ТОГДА 1
	|		КОГДА ВТПроценты.Номенклатура = ВТТаблицаНачальная.ГруппаУРЗ
	|			ТОГДА 2
	|		КОГДА ВТПроценты.Номенклатура = &Расчетчик
	|			ТОГДА 3
	|		КОГДА ВТПроценты.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА 4
	|		ИНАЧЕ 5
	|	КОНЕЦ КАК Порядок,
	|	ВТТаблицаНачальная.Номенклатура,
	|	ВТТаблицаНачальная.Весовой,
	|	ВТТаблицаНачальная.КоличествоПонедельник,
	|	ВТТаблицаНачальная.КоличествоВторник,
	|	ВТТаблицаНачальная.КоличествоСреда,
	|	ВТТаблицаНачальная.КоличествоЧетверг,
	|	ВТТаблицаНачальная.КоличествоПятница,
	|	ВТТаблицаНачальная.КоличествоСуббота,
	|	ВТТаблицаНачальная.КоличествоВоскресенье,
	|	ВТТаблицаНачальная.ОбщееКоличество,
	|	ВТТаблицаНачальная.ПланКоличество,
	|	ВТТаблицаНачальная.ПланСумма,
	|	ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) КАК ПроцентПонедельник,
	|	ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) КАК ПроцентВторник,
	|	ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) КАК ПроцентСреда,
	|	ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) КАК ПроцентЧетверг,
	|	ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) КАК ПроцентПятница,
	|	ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) КАК ПроцентСуббота,
	|	ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) КАК ПроцентВоскресенье,
	|	ВЫБОР
	|		КОГДА НЕ ВТТаблицаНачальная.ПнИзменен
	|			ТОГДА ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ВТТаблицаНачальная.ВтИзменен
	|			ТОГДА ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ВТТаблицаНачальная.СрИзменен
	|			ТОГДА ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ВТТаблицаНачальная.ЧтИзменен
	|			ТОГДА ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ВТТаблицаНачальная.ПтИзменен
	|			ТОГДА ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ВТТаблицаНачальная.СбИзменен
	|			ТОГДА ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НЕ ВТТаблицаНачальная.ВсИзменен
	|			ТОГДА ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОбщийПроцент,
	|	ВТТаблицаНачальная.Цена КАК Цена,
	|	ВТТаблицаНачальная.ПнИзменен,
	|	ВТТаблицаНачальная.ВтИзменен,
	|	ВТТаблицаНачальная.СрИзменен,
	|	ВТТаблицаНачальная.ЧтИзменен,
	|	ВТТаблицаНачальная.ПтИзменен,
	|	ВТТаблицаНачальная.СбИзменен,
	|	ВТТаблицаНачальная.ВсИзменен
	|ПОМЕСТИТЬ ВТСлужебная
	|ИЗ
	|	ВТТаблицаНачальная КАК ВТТаблицаНачальная
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПроценты КАК ВТПроценты
	|		ПО (ВТПроценты.Номенклатура = ВТТаблицаНачальная.Номенклатура
	|				ИЛИ ВТПроценты.Номенклатура = ВТТаблицаНачальная.ГруппаУРЗ
	|				ИЛИ ВТПроценты.Номенклатура = &Расчетчик
	|				ИЛИ ВТПроценты.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСлужебная.Порядок КАК Порядок,
	|	ВТСлужебная.Номенклатура,
	|	ВЫБОР
	|		КОГДА ВТСлужебная.ПнИзменен
	|			ТОГДА ВТСлужебная.КоличествоПонедельник
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТСлужебная.ОбщийПроцент > 0
	|					ТОГДА ВЫБОР
	|							КОГДА ВТСлужебная.Весовой = ИСТИНА
	|								ТОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПонедельник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + ВЫБОР
	|										КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПонедельник / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПонедельник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + 0.05
	|											ТОГДА ВЫБОР
	|													КОГДА 0.2 - (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПонедельник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) > 0
	|														ТОГДА 0.2 - (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПонедельник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1)))
	|													ИНАЧЕ 0
	|												КОНЕЦ
	|										ИНАЧЕ 0.1 + ВЫБОР
	|												КОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПонедельник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) = 0
	|													ТОГДА 0.1
	|												ИНАЧЕ 0
	|											КОНЕЦ
	|									КОНЕЦ
	|							ИНАЧЕ (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПонедельник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + ВЫБОР
	|									КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПонедельник / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПонедельник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + 0.5
	|										ТОГДА 0
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоПонедельник,
	|	ВЫБОР
	|		КОГДА ВТСлужебная.ВтИзменен
	|			ТОГДА ВТСлужебная.КоличествоВторник
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТСлужебная.ОбщийПроцент > 0
	|					ТОГДА ВЫБОР
	|							КОГДА ВТСлужебная.Весовой = ИСТИНА
	|								ТОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВторник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + ВЫБОР
	|										КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВторник / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВторник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + 0.05
	|											ТОГДА ВЫБОР
	|													КОГДА 0.2 - (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВторник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) > 0
	|														ТОГДА 0.2 - (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВторник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1)))
	|													ИНАЧЕ 0
	|												КОНЕЦ
	|										ИНАЧЕ 0.1 + ВЫБОР
	|												КОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВторник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) = 0
	|													ТОГДА 0.1
	|												ИНАЧЕ 0
	|											КОНЕЦ
	|									КОНЕЦ
	|							ИНАЧЕ (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВторник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + ВЫБОР
	|									КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВторник / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВторник / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + 0.5
	|										ТОГДА 0
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоВторник,
	|	ВЫБОР
	|		КОГДА ВТСлужебная.СрИзменен
	|			ТОГДА ВТСлужебная.КоличествоСреда
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТСлужебная.ОбщийПроцент > 0
	|					ТОГДА ВЫБОР
	|							КОГДА ВТСлужебная.Весовой = ИСТИНА
	|								ТОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСреда / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + ВЫБОР
	|										КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСреда / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСреда / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + 0.05
	|											ТОГДА ВЫБОР
	|													КОГДА 0.2 - (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСреда / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) > 0
	|														ТОГДА 0.2 - (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСреда / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1)))
	|													ИНАЧЕ 0
	|												КОНЕЦ
	|										ИНАЧЕ 0.1 + ВЫБОР
	|												КОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСреда / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) = 0
	|													ТОГДА 0.1
	|												ИНАЧЕ 0
	|											КОНЕЦ
	|									КОНЕЦ
	|							ИНАЧЕ (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСреда / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + ВЫБОР
	|									КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСреда / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСреда / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + 0.5
	|										ТОГДА 0
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоСреда,
	|	ВЫБОР
	|		КОГДА ВТСлужебная.ЧтИзменен
	|			ТОГДА ВТСлужебная.КоличествоЧетверг
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТСлужебная.ОбщийПроцент > 0
	|					ТОГДА ВЫБОР
	|							КОГДА ВТСлужебная.Весовой = ИСТИНА
	|								ТОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентЧетверг / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + ВЫБОР
	|										КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентЧетверг / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентЧетверг / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + 0.05
	|											ТОГДА ВЫБОР
	|													КОГДА 0.2 - (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентЧетверг / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) > 0
	|														ТОГДА 0.2 - (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентЧетверг / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1)))
	|													ИНАЧЕ 0
	|												КОНЕЦ
	|										ИНАЧЕ 0.1 + ВЫБОР
	|												КОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентЧетверг / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) = 0
	|													ТОГДА 0.1
	|												ИНАЧЕ 0
	|											КОНЕЦ
	|									КОНЕЦ
	|							ИНАЧЕ (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентЧетверг / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + ВЫБОР
	|									КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентЧетверг / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентЧетверг / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + 0.5
	|										ТОГДА 0
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоЧетверг,
	|	ВЫБОР
	|		КОГДА ВТСлужебная.ПтИзменен
	|			ТОГДА ВТСлужебная.КоличествоПятница
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТСлужебная.ОбщийПроцент > 0
	|					ТОГДА ВЫБОР
	|							КОГДА ВТСлужебная.Весовой = ИСТИНА
	|								ТОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПятница / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + ВЫБОР
	|										КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПятница / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПятница / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + 0.05
	|											ТОГДА ВЫБОР
	|													КОГДА 0.2 - (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПятница / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) > 0
	|														ТОГДА 0.2 - (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПятница / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1)))
	|													ИНАЧЕ 0
	|												КОНЕЦ
	|										ИНАЧЕ 0.1 + ВЫБОР
	|												КОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПятница / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) = 0
	|													ТОГДА 0.1
	|												ИНАЧЕ 0
	|											КОНЕЦ
	|									КОНЕЦ
	|							ИНАЧЕ (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПятница / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + ВЫБОР
	|									КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПятница / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентПятница / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + 0.5
	|										ТОГДА 0
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоПятница,
	|	ВЫБОР
	|		КОГДА ВТСлужебная.СбИзменен
	|			ТОГДА ВТСлужебная.КоличествоСуббота
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТСлужебная.ОбщийПроцент > 0
	|					ТОГДА ВЫБОР
	|							КОГДА ВТСлужебная.Весовой = ИСТИНА
	|								ТОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСуббота / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + ВЫБОР
	|										КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСуббота / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСуббота / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + 0.05
	|											ТОГДА ВЫБОР
	|													КОГДА 0.2 - (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСуббота / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) > 0
	|														ТОГДА 0.2 - (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСуббота / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1)))
	|													ИНАЧЕ 0
	|												КОНЕЦ
	|										ИНАЧЕ 0.1 + ВЫБОР
	|												КОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСуббота / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) = 0
	|													ТОГДА 0.1
	|												ИНАЧЕ 0
	|											КОНЕЦ
	|									КОНЕЦ
	|							ИНАЧЕ (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСуббота / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + ВЫБОР
	|									КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСуббота / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентСуббота / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + 0.5
	|										ТОГДА 0
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоСуббота,
	|	ВЫБОР
	|		КОГДА ВТСлужебная.ВсИзменен
	|			ТОГДА ВТСлужебная.КоличествоВоскресенье
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВТСлужебная.ОбщийПроцент > 0
	|					ТОГДА ВЫБОР
	|							КОГДА ВТСлужебная.Весовой = ИСТИНА
	|								ТОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВоскресенье / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + ВЫБОР
	|										КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВоскресенье / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВоскресенье / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) + 0.05
	|											ТОГДА ВЫБОР
	|													КОГДА 0.2 - (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВоскресенье / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) > 0
	|														ТОГДА 0.2 - (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВоскресенье / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1)))
	|													ИНАЧЕ 0
	|												КОНЕЦ
	|										ИНАЧЕ 0.1 + ВЫБОР
	|												КОГДА (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВоскресенье / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 1))) = 0
	|													ТОГДА 0.1
	|												ИНАЧЕ 0
	|											КОНЕЦ
	|									КОНЕЦ
	|							ИНАЧЕ (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВоскресенье / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + ВЫБОР
	|									КОГДА ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВоскресенье / ВТСлужебная.ОбщийПроцент < (ВЫРАЗИТЬ(ВТСлужебная.ОбщееКоличество * ВТСлужебная.ПроцентВоскресенье / ВТСлужебная.ОбщийПроцент КАК ЧИСЛО(15, 0))) + 0.5
	|										ТОГДА 0
	|									ИНАЧЕ 1
	|								КОНЕЦ
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоВоскресенье,
	|	ВТСлужебная.ПланСумма КАК ПланСумма,
	|	ВТСлужебная.Цена КАК Цена,
	|	ВТСлужебная.ПнИзменен,
	|	ВТСлужебная.ВтИзменен,
	|	ВТСлужебная.СрИзменен,
	|	ВТСлужебная.ЧтИзменен,
	|	ВТСлужебная.ПтИзменен,
	|	ВТСлужебная.СбИзменен,
	|	ВТСлужебная.ВсИзменен
	|ПОМЕСТИТЬ ВТТаблицаПлановОбщие
	|ИЗ
	|	ВТСлужебная КАК ВТСлужебная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВТТаблицаПлановОбщие.Порядок КАК Порядок
	|ПОМЕСТИТЬ ВТТаблицаПлановПорядок
	|ИЗ
	|	ВТТаблицаПлановОбщие КАК ВТТаблицаПлановОбщие
	|ГДЕ
	|	НЕ ВТТаблицаПлановОбщие.Порядок = 5
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВТТаблицаПлановОбщие.Порядок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТаблицаПлановОбщие.Номенклатура КАК Номенклатура,
	|	ВТТаблицаПлановОбщие.КоличествоПонедельник,
	|	ВТТаблицаПлановОбщие.КоличествоВторник,
	|	ВТТаблицаПлановОбщие.КоличествоСреда,
	|	ВТТаблицаПлановОбщие.КоличествоЧетверг,
	|	ВТТаблицаПлановОбщие.КоличествоПятница,
	|	ВТТаблицаПлановОбщие.КоличествоСуббота,
	|	ВТТаблицаПлановОбщие.КоличествоВоскресенье,
	|	ВТТаблицаПлановОбщие.КоличествоПонедельник + ВТТаблицаПлановОбщие.КоличествоВторник + ВТТаблицаПлановОбщие.КоличествоСреда + ВТТаблицаПлановОбщие.КоличествоЧетверг + ВТТаблицаПлановОбщие.КоличествоПятница + ВТТаблицаПлановОбщие.КоличествоСуббота + ВТТаблицаПлановОбщие.КоличествоВоскресенье КАК ПланКоличество,
	|	ВТТаблицаПлановОбщие.ПланСумма,
	|	ВТТаблицаПлановОбщие.Цена,
	|	ВТТаблицаПлановОбщие.ПнИзменен,
	|	ВТТаблицаПлановОбщие.ВтИзменен,
	|	ВТТаблицаПлановОбщие.СрИзменен,
	|	ВТТаблицаПлановОбщие.ЧтИзменен,
	|	ВТТаблицаПлановОбщие.ПтИзменен,
	|	ВТТаблицаПлановОбщие.СбИзменен,
	|	ВТТаблицаПлановОбщие.ВсИзменен
	|ПОМЕСТИТЬ ВТРаспределение
	|ИЗ
	|	ВТТаблицаПлановОбщие КАК ВТТаблицаПлановОбщие
	|ГДЕ
	|	(ВТТаблицаПлановОбщие.Порядок = 5
	|			ИЛИ ВТТаблицаПлановОбщие.Порядок В
	|				(ВЫБРАТЬ
	|					ВТТаблицаПлановПорядок.Порядок
	|				ИЗ
	|					ВТТаблицаПлановПорядок))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДат.Дата КАК Дата
	|ПОМЕСТИТЬ ВТДаты
	|ИЗ
	|	&ТаблицаДат КАК ТаблицаДат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДаты.Дата КАК Дата,
	|	&Расчетчик КАК Расчетчик,
	|	&Склад КАК Склад,
	|	&ТорговаяТочка КАК ТорговаяТочка,
	|	ВТРаспределение.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 1
	|			ТОГДА ВТРаспределение.КоличествоПонедельник
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 2
	|			ТОГДА ВТРаспределение.КоличествоВторник
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 3
	|			ТОГДА ВТРаспределение.КоличествоСреда
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 4
	|			ТОГДА ВТРаспределение.КоличествоЧетверг
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 5
	|			ТОГДА ВТРаспределение.КоличествоПятница
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 6
	|			ТОГДА ВТРаспределение.КоличествоСуббота
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 7
	|			ТОГДА ВТРаспределение.КоличествоВоскресенье
	|	КОНЕЦ КАК Количество,
	|	ЕСТЬNULL(ВТРаспределение.Цена, 0) КАК Цена
	|ИЗ
	|	ВТДаты КАК ВТДаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРаспределение КАК ВТРаспределение
	|		ПО (ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 1
	|					И ВТРаспределение.КоличествоПонедельник > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 2
	|					И ВТРаспределение.КоличествоВторник > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 3
	|					И ВТРаспределение.КоличествоСреда > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 4
	|					И ВТРаспределение.КоличествоЧетверг > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 5
	|					И ВТРаспределение.КоличествоПятница > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 6
	|					И ВТРаспределение.КоличествоСуббота > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 7
	|					И ВТРаспределение.КоличествоВоскресенье > 0)
	|ГДЕ
	|	НЕ ВТРаспределение.Номенклатура ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТРаспределение.Номенклатура,
	|	ВТРаспределение.КоличествоПонедельник,
	|	ВТРаспределение.КоличествоВторник,
	|	ВТРаспределение.КоличествоСреда,
	|	ВТРаспределение.КоличествоЧетверг,
	|	ВТРаспределение.КоличествоПятница,
	|	ВТРаспределение.КоличествоСуббота,
	|	ВТРаспределение.КоличествоВоскресенье,
	|	ВТРаспределение.ПланКоличество,
	|	ВТРаспределение.ПланСумма,
	|	ВТРаспределение.Цена,
	|	ВТРаспределение.ПнИзменен,
	|	ВТРаспределение.ВтИзменен,
	|	ВТРаспределение.СрИзменен,
	|	ВТРаспределение.ЧтИзменен,
	|	ВТРаспределение.ПтИзменен,
	|	ВТРаспределение.СбИзменен,
	|	ВТРаспределение.ВсИзменен
	|ИЗ
	|	ВТРаспределение КАК ВТРаспределение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПроценты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТТаблицаНачальная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСлужебная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТТаблицаПлановОбщие
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТТаблицаПлановПорядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРаспределение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДаты";
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	
	// запись в регистр "ПланыПродажПоДнямНедели" измененных данных
	мПланыПродажПоДнямНедели = РегистрыСведений.ПланыПродажПоДнямНедели;
	
	ТаблицаЗапроса = РезультатыЗапроса[7].Выгрузить();
	
	Для Каждого ЭлементСписка Из СтруктураПараметров.СписокДатПериода Цикл
		
		ТекДата = ЭлементСписка.Значение;
		
		НаборЗаписей = мПланыПродажПоДнямНедели.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Дата.Установить(ТекДата);
		НаборЗаписей.Отбор.Расчетчик.Установить(мРасчетчик);
		НаборЗаписей.Отбор.ТорговаяТочка.Установить(мТорговаяТочка);
		НаборЗаписей.Прочитать();
		
		ВремТаблица = ТаблицаЗапроса.Скопировать(Новый Структура("Дата", ТекДата));
		НаборЗаписей.Загрузить(ВремТаблица);
	
		Попытка
			НаборЗаписей.Записать();
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
	КонецЦикла;	

	
	Возврат РезультатыЗапроса[8].Выгрузить();
		
КонецФункции

Процедура РаспределитьПоДнямСервер()
	
	Перем мТаблицаНачальная, ТекНоменклатура, Запрос, РезультатыЗапроса, РезультатЗапроса;
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровДляЗаписиВПланПродажСервер();
	СтруктураПараметров.Вставить("СписокДатПериода"		, ЭтаФорма.СписокДатПериода);
	СтруктураПараметров.Вставить("МассивНоменклатуры"	, ЭтаФорма.СписокНоменклатуры);
	
	мТаблицаНачальная = ЭтаФорма.ПланыПродажПоДнямНедели.Выгрузить();
	мТаблицаНачальная.Колонки.Добавить("ГруппаУРЗ"	, Новый ОписаниеТипов("СправочникСсылка.ГруппыНоменклатурыУРЗ"));
	мТаблицаНачальная.Колонки.Добавить("Весовой"	, Новый ОписаниеТипов("Булево"));
	Для Каждого СтрокаТаблицы Из мТаблицаНачальная Цикл
		ТекНоменклатура = СтрокаТаблицы.Номенклатура;
		СтрокаТаблицы.ГруппаУРЗ	= ТекНоменклатура.ГруппаНоменклатурыУРЗ;
		СтрокаТаблицы.Весовой 	= ТекНоменклатура.Весовой;
	КонецЦикла;
	СтруктураПараметров.Вставить("ТаблицаНачальная"	, мТаблицаНачальная);
	СтруктураПараметров.Вставить("МассивГруппУРЗ"	, мТаблицаНачальная.ВыгрузитьКолонку("ГруппаУРЗ"));
	
	СтруктураПараметров.Вставить("ТаблицаДат"		, ЭтаФорма.ТаблицаДатПериода.Выгрузить(, "Дата"));
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	СтруктураНаличияДнейВПериоде = ОбработкаОбъект.ПолучитьСтруктуруНаличияДнейВПериоде(СтруктураПараметров.СписокДатПериода);
	
	//
	мТаблицаНаЭкран = РаспределитьПоДнямИЗаписатьСервер(СтруктураПараметров, СтруктураНаличияДнейВПериоде);
	
	ЭтаФорма.ПланыПродажПоДнямНедели.Загрузить(мТаблицаНаЭкран);
		
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьПоДням(Команда)

	Если ЭтаФорма.ПланыПродажПоДнямНедели.Количество() = 0 Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Нет основания для распределения!";
		СообщениеПользователю.УстановитьДанные(ЭтаФорма.ПланыПродажПоДнямНедели);
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	РаспределитьПоДнямСервер();
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ДобавитьПроцентИзмененияВПланПродажПоДнямСервер(ВремТаблица, СтруктураПараметров)
	
	// служ. переменные
	мПланыПродажПоДнямНедели = РегистрыСведений.ПланыПродажПоДнямНедели;
	
	мКоэффициент = (1 + СтруктураПараметров.ПроцентИзменения / 100);
	
	ДатаПн = СтруктураПараметров.ДатаПн;
	ДатаВт = СтруктураПараметров.ДатаВт;
	ДатаСр = СтруктураПараметров.ДатаСр;
	ДатаЧт = СтруктураПараметров.ДатаЧт;
	ДатаПт = СтруктураПараметров.ДатаПт;
	ДатаСб = СтруктураПараметров.ДатаСб;
	ДатаВс = СтруктураПараметров.ДатаВс;
	
	
	// обработка таблицы
	СтруктураЗаписи = Новый Структура("Дата, Номенклатура, Количество, Цена");
	СтруктураЗаписи.Вставить("Расчетчик"	, СтруктураПараметров.Расчетчик);
	СтруктураЗаписи.Вставить("Склад"		, СтруктураПараметров.Склад);
	СтруктураЗаписи.Вставить("ТорговаяТочка", СтруктураПараметров.ТорговаяТочка);
	
	Для Каждого СтрокаТаблицы Из ВремТаблица Цикл
		
		Если НЕ СтрокаТаблицы.Изменять Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураЗаписи.Номенклатура 	= СтрокаТаблицы.Номенклатура;
		СтруктураЗаписи.Цена 			= СтрокаТаблицы.Цена;
		
		ТекПорядокОкругления = ?(СтрокаТаблицы.Номенклатура.Весовой, 1, 0);
		Если НЕ СтрокаТаблицы.КоличествоПонедельник = 0 Тогда
			СтрокаТаблицы.КоличествоПонедельник = Окр(СтрокаТаблицы.КоличествоПонедельник * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоПонедельник;
			СтруктураЗаписи.Дата 		= ДатаПн;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если НЕ СтрокаТаблицы.КоличествоВторник = 0 Тогда
			СтрокаТаблицы.КоличествоВторник 		= Окр(СтрокаТаблицы.КоличествоВторник * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоВторник;
			СтруктураЗаписи.Дата 		= ДатаВт;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если НЕ СтрокаТаблицы.КоличествоСреда = 0 Тогда
			СтрокаТаблицы.КоличествоСреда 			= Окр(СтрокаТаблицы.КоличествоСреда * мКоэффициент		, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоСреда;
			СтруктураЗаписи.Дата 		= ДатаСр;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если НЕ СтрокаТаблицы.КоличествоЧетверг = 0 Тогда
			СтрокаТаблицы.КоличествоЧетверг 		= Окр(СтрокаТаблицы.КоличествоЧетверг * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоЧетверг;
			СтруктураЗаписи.Дата 		= ДатаЧт;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если НЕ СтрокаТаблицы.КоличествоПятница = 0 Тогда
			СтрокаТаблицы.КоличествоПятница 		= Окр(СтрокаТаблицы.КоличествоПятница * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоПятница;
			СтруктураЗаписи.Дата 		= ДатаПт;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если НЕ СтрокаТаблицы.КоличествоСуббота = 0 Тогда
			СтрокаТаблицы.КоличествоСуббота 		= Окр(СтрокаТаблицы.КоличествоСуббота * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоСуббота;
			СтруктураЗаписи.Дата 		= ДатаСб;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если НЕ СтрокаТаблицы.КоличествоВоскресенье = 0 Тогда
			СтрокаТаблицы.КоличествоВоскресенье 	= Окр(СтрокаТаблицы.КоличествоВоскресенье * мКоэффициент, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоВоскресенье;
			СтруктураЗаписи.Дата 		= ДатаВс;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		
		СтрокаТаблицы.ПланКоличество 	= СтрокаТаблицы.КоличествоПонедельник +
											СтрокаТаблицы.КоличествоВторник +
											СтрокаТаблицы.КоличествоСреда +
											СтрокаТаблицы.КоличествоЧетверг +
											СтрокаТаблицы.КоличествоПятница +
											СтрокаТаблицы.КоличествоСуббота +
											СтрокаТаблицы.КоличествоВоскресенье;
		СтрокаТаблицы.ПланСумма 		= СтрокаТаблицы.Цена * СтрокаТаблицы.ПланКоличество;
		
	КонецЦикла;                                                                          
		
КонецПроцедуры

// Изменяет числовые показатели в регистре сведений "ПланыПродажПоДнямНедели" на процент изменения.
//
Процедура ДобавитьПроцентИзмененияВПланПродажПоДням(мПроцент)
	
	ВремТаблица = ЭтаФорма.ПланыПродажПоДнямНедели.Выгрузить();
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровДляЗаписиВПланПродажСервер();
	СтруктураПараметров.Вставить("ПроцентИзменения", мПроцент);
	
	ДобавитьПроцентИзмененияВПланПродажПоДнямСервер(ВремТаблица, СтруктураПараметров);
	
	ЭтаФорма.ПланыПродажПоДнямНедели.Загрузить(ВремТаблица);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПланПродаж(Команда)

	ДобавитьПроцентИзмененияВПланПродажПоДням(ЭтаФорма.ПроцентИзменения);
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьРезультатыЗапросаПоРаспределению(мТаблицаФактов, СтруктураПараметров, СтруктураНаличияДнейВПериоде)
	
	Перем НоваяСтрока, Запрос;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаАссортимента"	, КонецДня(ТекущаяДата() + 86400));
	Запрос.УстановитьПараметр("Расчетчик"			, СтруктураПараметров.Расчетчик);
	Запрос.УстановитьПараметр("ТорговаяТочка"		, СтруктураПараметров.ТорговаяТочка);
	Запрос.УстановитьПараметр("СписокНоменклатуры"	, СтруктураПараметров.МассивНоменклатуры);
	Запрос.УстановитьПараметр("ТаблицаФактов"		, мТаблицаФактов);
	Запрос.УстановитьПараметр("ТаблицаДат"			, СтруктураПараметров.ТаблицаДат);
	
	Запрос.УстановитьПараметр("ЕстьПонедельник"	, СтруктураНаличияДнейВПериоде.ЕстьПонедельник);
	Запрос.УстановитьПараметр("ЕстьВторник"		, СтруктураНаличияДнейВПериоде.ЕстьВторник);
	Запрос.УстановитьПараметр("ЕстьСреда"		, СтруктураНаличияДнейВПериоде.ЕстьСреда);
	Запрос.УстановитьПараметр("ЕстьЧетверг"		, СтруктураНаличияДнейВПериоде.ЕстьЧетверг);
	Запрос.УстановитьПараметр("ЕстьПятница"		, СтруктураНаличияДнейВПериоде.ЕстьПятница);
	Запрос.УстановитьПараметр("ЕстьСуббота"		, СтруктураНаличияДнейВПериоде.ЕстьСуббота);
	Запрос.УстановитьПараметр("ЕстьВоскресенье"	, СтруктураНаличияДнейВПериоде.ЕстьВоскресенье);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СпрНоменклатура.Ссылка КАК Номенклатура
	|ПОМЕСТИТЬ ВТДеревоНоменклатуры
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.Ссылка В(&СписокНоменклатуры)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	СпрНоменклатура.ГруппаНоменклатурыУРЗ
	|ИЗ
	|	Справочник.Номенклатура КАК СпрНоменклатура
	|ГДЕ
	|	СпрНоменклатура.Ссылка В(&СписокНоменклатуры)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаспределениеПродажПроценты.Номенклатура КАК Номенклатура,
	|	РаспределениеПродажПроценты.ПроцентПонедельник,
	|	РаспределениеПродажПроценты.ПроцентВторник,
	|	РаспределениеПродажПроценты.ПроцентСреда,
	|	РаспределениеПродажПроценты.ПроцентЧетверг,
	|	РаспределениеПродажПроценты.ПроцентПятница,
	|	РаспределениеПродажПроценты.ПроцентСуббота,
	|	РаспределениеПродажПроценты.ПроцентВоскресенье
	|ПОМЕСТИТЬ ВТПроценты
	|ИЗ
	|	РегистрСведений.РаспределениеПродажПоДнямНеделиПроценты КАК РаспределениеПродажПроценты
	|ГДЕ
	|	РаспределениеПродажПроценты.ТорговаяТочка = &ТорговаяТочка
	|	И (РаспределениеПродажПроценты.Номенклатура В
	|				(ВЫБРАТЬ
	|					ВТДеревоНоменклатуры.Номенклатура
	|				ИЗ
	|					ВТДеревоНоменклатуры)
	|			ИЛИ РаспределениеПродажПроценты.Номенклатура = &Расчетчик
	|			ИЛИ РаспределениеПродажПроценты.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварныйАссортиментТочек.Номенклатура КАК Номенклатура,
	|	ТоварныйАссортиментТочек.Номенклатура.Весовой КАК Весовой,
	|	ТоварныйАссортиментТочек.Номенклатура.Наименование КАК НаименованиеНоменклатуры
	|ПОМЕСТИТЬ ВТНоменклатураАссортимента
	|ИЗ
	|	РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(
	|			&ДатаАссортимента,
	|			ТорговаяТочка = &ТорговаяТочка
	|				И Номенклатура В (&СписокНоменклатуры)) КАК ТоварныйАссортиментТочек
	|ГДЕ
	|	НЕ ТоварныйАссортиментТочек.Выведена
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.ТорговаяТочка КАК ТорговаяТочка,
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена,
	|	ЦеныНоменклатурыСрезПоследних.Период КАК Период
	|ПОМЕСТИТЬ ВТЦены
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			,
	|			(ТорговаяТочка = &ТорговаяТочка
	|				ИЛИ ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
	|				И Номенклатура В (&СписокНоменклатуры)) КАК ЦеныНоменклатурыСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ТорговаяТочка,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаФактов.Номенклатура,
	|	ТаблицаФактов.НаименованиеНоменклатуры,
	|	ТаблицаФактов.ГруппаУРЗ,
	|	ТаблицаФактов.Весовой,
	|	ТаблицаФактов.ПланКоличество,
	|	ТаблицаФактов.Цена
	|ПОМЕСТИТЬ ВТТаблицаФактов
	|ИЗ
	|	&ТаблицаФактов КАК ТаблицаФактов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВТПроценты.Номенклатура = ТаблицаФактов.Номенклатура
	|			ТОГДА 1
	|		КОГДА ВТПроценты.Номенклатура = ТаблицаФактов.ГруппаУРЗ
	|			ТОГДА 2
	|		КОГДА ВТПроценты.Номенклатура = &Расчетчик
	|			ТОГДА 3
	|		КОГДА ВТПроценты.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|			ТОГДА 4
	|		ИНАЧЕ 5
	|	КОНЕЦ КАК Порядок,
	|	ТаблицаФактов.Номенклатура,
	|	ТаблицаФактов.НаименованиеНоменклатуры,
	|	ВЫБОР
	|		КОГДА ТаблицаФактов.Весовой = ИСТИНА
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) / 100 КАК ЧИСЛО(15, 1))) + ВЫБОР
	|					КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) / 100 КАК ЧИСЛО(15, 1))) + 0.05
	|							И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) > 0
	|									И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) / 100 < 0.05)
	|						ТОГДА 0
	|					ИНАЧЕ 0.1
	|				КОНЕЦ
	|		ИНАЧЕ (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) / 100 КАК ЧИСЛО(15, 0))) + ВЫБОР
	|				КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) / 100 КАК ЧИСЛО(15, 0))) + 0.5
	|						И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) > 0
	|								И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПонедельник, 0) / 100 < 0.5)
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоПонедельник,
	|	ВЫБОР
	|		КОГДА ТаблицаФактов.Весовой = ИСТИНА
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) / 100 КАК ЧИСЛО(15, 1))) + ВЫБОР
	|					КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) / 100 КАК ЧИСЛО(15, 1))) + 0.05
	|							И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) > 0
	|									И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) / 100 < 0.05)
	|						ТОГДА 0
	|					ИНАЧЕ 0.1
	|				КОНЕЦ
	|		ИНАЧЕ (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) / 100 КАК ЧИСЛО(15, 0))) + ВЫБОР
	|				КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) / 100 КАК ЧИСЛО(15, 0))) + 0.5
	|						И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) > 0
	|								И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВторник, 0) / 100 < 0.5)
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоВторник,
	|	ВЫБОР
	|		КОГДА ТаблицаФактов.Весовой = ИСТИНА
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) / 100 КАК ЧИСЛО(15, 1))) + ВЫБОР
	|					КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) / 100 КАК ЧИСЛО(15, 1))) + 0.05
	|							И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) > 0
	|									И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) / 100 < 0.05)
	|						ТОГДА 0
	|					ИНАЧЕ 0.1
	|				КОНЕЦ
	|		ИНАЧЕ (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) / 100 КАК ЧИСЛО(15, 0))) + ВЫБОР
	|				КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) / 100 КАК ЧИСЛО(15, 0))) + 0.5
	|						И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) > 0
	|								И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСреда, 0) / 100 < 0.5)
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоСреда,
	|	ВЫБОР
	|		КОГДА ТаблицаФактов.Весовой = ИСТИНА
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) / 100 КАК ЧИСЛО(15, 1))) + ВЫБОР
	|					КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) / 100 КАК ЧИСЛО(15, 1))) + 0.05
	|							И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) > 0
	|									И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) / 100 < 0.05)
	|						ТОГДА 0
	|					ИНАЧЕ 0.1
	|				КОНЕЦ
	|		ИНАЧЕ (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) / 100 КАК ЧИСЛО(15, 0))) + ВЫБОР
	|				КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) / 100 КАК ЧИСЛО(15, 0))) + 0.5
	|						И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) > 0
	|								И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентЧетверг, 0) / 100 < 0.5)
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоЧетверг,
	|	ВЫБОР
	|		КОГДА ТаблицаФактов.Весовой = ИСТИНА
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) / 100 КАК ЧИСЛО(15, 1))) + ВЫБОР
	|					КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) / 100 КАК ЧИСЛО(15, 1))) + 0.05
	|							И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) > 0
	|									И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) / 100 < 0.05)
	|						ТОГДА 0
	|					ИНАЧЕ 0.1
	|				КОНЕЦ
	|		ИНАЧЕ (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) / 100 КАК ЧИСЛО(15, 0))) + ВЫБОР
	|				КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) / 100 КАК ЧИСЛО(15, 0))) + 0.5
	|						И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) > 0
	|								И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентПятница, 0) / 100 < 0.5)
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоПятница,
	|	ВЫБОР
	|		КОГДА ТаблицаФактов.Весовой = ИСТИНА
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) / 100 КАК ЧИСЛО(15, 1))) + ВЫБОР
	|					КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) / 100 КАК ЧИСЛО(15, 1))) + 0.05
	|							И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) > 0
	|									И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) / 100 < 0.05)
	|						ТОГДА 0
	|					ИНАЧЕ 0.1
	|				КОНЕЦ
	|		ИНАЧЕ (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) / 100 КАК ЧИСЛО(15, 0))) + ВЫБОР
	|				КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) / 100 КАК ЧИСЛО(15, 0))) + 0.5
	|						И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) > 0
	|								И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентСуббота, 0) / 100 < 0.5)
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоСуббота,
	|	ВЫБОР
	|		КОГДА ТаблицаФактов.Весовой = ИСТИНА
	|			ТОГДА (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) / 100 КАК ЧИСЛО(15, 1))) + ВЫБОР
	|					КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) / 100 КАК ЧИСЛО(15, 1))) + 0.05
	|							И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) > 0
	|									И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) / 100 < 0.05)
	|						ТОГДА 0
	|					ИНАЧЕ 0.1
	|				КОНЕЦ
	|		ИНАЧЕ (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) / 100 КАК ЧИСЛО(15, 0))) + ВЫБОР
	|				КОГДА ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) / 100 < (ВЫРАЗИТЬ(ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) / 100 КАК ЧИСЛО(15, 0))) + 0.5
	|						И НЕ(ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) > 0
	|								И ТаблицаФактов.ПланКоличество * ЕСТЬNULL(ВТПроценты.ПроцентВоскресенье, 0) / 100 < 0.5)
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК КоличествоВоскресенье,
	|	ТаблицаФактов.Цена КАК Цена
	|ПОМЕСТИТЬ ВТТаблицаПлановОбщие
	|ИЗ
	|	ВТТаблицаФактов КАК ТаблицаФактов
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПроценты КАК ВТПроценты
	|		ПО (ВТПроценты.Номенклатура = ТаблицаФактов.Номенклатура
	|				ИЛИ ВТПроценты.Номенклатура = ТаблицаФактов.ГруппаУРЗ
	|				ИЛИ ВТПроценты.Номенклатура = &Расчетчик
	|				ИЛИ ВТПроценты.Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТаблицаПлановОбщие.Номенклатура КАК Номенклатура,
	|	МИНИМУМ(ВТТаблицаПлановОбщие.Порядок) КАК Порядок
	|ПОМЕСТИТЬ ВТТаблицаПлановПорядок
	|ИЗ
	|	ВТТаблицаПлановОбщие КАК ВТТаблицаПлановОбщие
	|ГДЕ
	|	НЕ ВТТаблицаПлановОбщие.Порядок = 5
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТТаблицаПлановОбщие.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Порядок
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТаблицаПлановОбщие.Номенклатура КАК Номенклатура,
	|	ВТТаблицаПлановОбщие.НаименованиеНоменклатуры КАК НаименованиеНоменклатуры,
	|	ВТТаблицаПлановОбщие.КоличествоПонедельник КАК КоличествоПонедельник,
	|	ВТТаблицаПлановОбщие.КоличествоВторник КАК КоличествоВторник,
	|	ВТТаблицаПлановОбщие.КоличествоСреда КАК КоличествоСреда,
	|	ВТТаблицаПлановОбщие.КоличествоЧетверг КАК КоличествоЧетверг,
	|	ВТТаблицаПлановОбщие.КоличествоПятница КАК КоличествоПятница,
	|	ВТТаблицаПлановОбщие.КоличествоСуббота КАК КоличествоСуббота,
	|	ВТТаблицаПлановОбщие.КоличествоВоскресенье КАК КоличествоВоскресенье,
	|	ВТТаблицаПлановОбщие.КоличествоПонедельник + ВТТаблицаПлановОбщие.КоличествоВторник + ВТТаблицаПлановОбщие.КоличествоСреда + ВТТаблицаПлановОбщие.КоличествоЧетверг + ВТТаблицаПлановОбщие.КоличествоПятница + ВТТаблицаПлановОбщие.КоличествоСуббота + ВТТаблицаПлановОбщие.КоличествоВоскресенье КАК ПланКоличество,
	|	ВТТаблицаПлановОбщие.Цена КАК Цена
	|ПОМЕСТИТЬ ВТПромежуточная
	|ИЗ
	|	ВТТаблицаПлановОбщие КАК ВТТаблицаПлановОбщие
	|ГДЕ
	|	ВТТаблицаПлановОбщие.Порядок = 5
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТТаблицаПлановОбщие.Номенклатура,
	|	ВТТаблицаПлановОбщие.НаименованиеНоменклатуры,
	|	ВТТаблицаПлановОбщие.КоличествоПонедельник,
	|	ВТТаблицаПлановОбщие.КоличествоВторник,
	|	ВТТаблицаПлановОбщие.КоличествоСреда,
	|	ВТТаблицаПлановОбщие.КоличествоЧетверг,
	|	ВТТаблицаПлановОбщие.КоличествоПятница,
	|	ВТТаблицаПлановОбщие.КоличествоСуббота,
	|	ВТТаблицаПлановОбщие.КоличествоВоскресенье,
	|	ВТТаблицаПлановОбщие.КоличествоПонедельник + ВТТаблицаПлановОбщие.КоличествоВторник + ВТТаблицаПлановОбщие.КоличествоСреда + ВТТаблицаПлановОбщие.КоличествоЧетверг + ВТТаблицаПлановОбщие.КоличествоПятница + ВТТаблицаПлановОбщие.КоличествоСуббота + ВТТаблицаПлановОбщие.КоличествоВоскресенье,
	|	ВТТаблицаПлановОбщие.Цена
	|ИЗ
	|	ВТТаблицаПлановОбщие КАК ВТТаблицаПлановОбщие
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТТаблицаПлановПорядок КАК ВТТаблицаПлановПорядок
	|		ПО (ВТТаблицаПлановПорядок.Номенклатура = ВТТаблицаПлановОбщие.Номенклатура)
	|			И (ВТТаблицаПлановПорядок.Порядок = ВТТаблицаПлановОбщие.Порядок)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПромежуточная.Номенклатура КАК Номенклатура,
	|	ВТПромежуточная.НаименованиеНоменклатуры КАК НаименованиеНоменклатуры,
	|	ВТПромежуточная.КоличествоПонедельник КАК КоличествоПонедельник,
	|	ВТПромежуточная.КоличествоВторник КАК КоличествоВторник,
	|	ВТПромежуточная.КоличествоСреда КАК КоличествоСреда,
	|	ВТПромежуточная.КоличествоЧетверг КАК КоличествоЧетверг,
	|	ВТПромежуточная.КоличествоПятница КАК КоличествоПятница,
	|	ВТПромежуточная.КоличествоСуббота КАК КоличествоСуббота,
	|	ВТПромежуточная.КоличествоВоскресенье КАК КоличествоВоскресенье,
	|	ВТПромежуточная.ПланКоличество КАК ПланКоличество,
	|	ВТПромежуточная.Цена КАК Цена
	|ПОМЕСТИТЬ ВТОсновная
	|ИЗ
	|	ВТПромежуточная КАК ВТПромежуточная
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТНоменклатураАссортимента.Номенклатура,
	|	ВТНоменклатураАссортимента.НаименованиеНоменклатуры,
	|	ВЫБОР
	|		КОГДА НЕ ВТНоменклатураАссортимента.Весовой
	|			ТОГДА 1
	|		ИНАЧЕ 0.2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ВТНоменклатураАссортимента.Весовой
	|			ТОГДА 1
	|		ИНАЧЕ 0.2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ВТНоменклатураАссортимента.Весовой
	|			ТОГДА 1
	|		ИНАЧЕ 0.2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ВТНоменклатураАссортимента.Весовой
	|			ТОГДА 1
	|		ИНАЧЕ 0.2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ВТНоменклатураАссортимента.Весовой
	|			ТОГДА 1
	|		ИНАЧЕ 0.2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ВТНоменклатураАссортимента.Весовой
	|			ТОГДА 1
	|		ИНАЧЕ 0.2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ВТНоменклатураАссортимента.Весовой
	|			ТОГДА 1
	|		ИНАЧЕ 0.2
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НЕ ВТНоменклатураАссортимента.Весовой
	|			ТОГДА 7
	|		ИНАЧЕ 1.4
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ВТЦены.Период, ДАТАВРЕМЯ(1, 1, 1)) > ЕСТЬNULL(ВТЦеныБезТТ.Период, ДАТАВРЕМЯ(1, 1, 1))
	|			ТОГДА ЕСТЬNULL(ВТЦены.Цена, 0)
	|		ИНАЧЕ ЕСТЬNULL(ВТЦеныБезТТ.Цена, 0)
	|	КОНЕЦ
	|ИЗ
	|	ВТНоменклатураАссортимента КАК ВТНоменклатураАссортимента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПромежуточная КАК ВТПромежуточная
	|		ПО (ВТПромежуточная.Номенклатура = ВТНоменклатураАссортимента.Номенклатура)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЦены КАК ВТЦены
	|		ПО (ВТЦены.Номенклатура = ВТНоменклатураАссортимента.Номенклатура)
	|			И (ВТЦены.ТорговаяТочка = &ТорговаяТочка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЦены КАК ВТЦеныБезТТ
	|		ПО (ВТЦеныБезТТ.Номенклатура = ВТНоменклатураАссортимента.Номенклатура)
	|			И (ВТЦеныБезТТ.ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
	|ГДЕ
	|	ВТПромежуточная.Номенклатура ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПланов.Номенклатура,
	|	СУММА(ТаблицаПланов.ПланКоличество) КАК Показатель
	|ИЗ
	|	ВТОсновная КАК ТаблицаПланов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПланов.Номенклатура
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаПланов.ПланКоличество) = 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПланов.Номенклатура,
	|	ТаблицаПланов.НаименованиеНоменклатуры,
	|	СУММА(ТаблицаПланов.КоличествоПонедельник) КАК КоличествоПонедельник,
	|	СУММА(ТаблицаПланов.КоличествоВторник) КАК КоличествоВторник,
	|	СУММА(ТаблицаПланов.КоличествоСреда) КАК КоличествоСреда,
	|	СУММА(ТаблицаПланов.КоличествоЧетверг) КАК КоличествоЧетверг,
	|	СУММА(ТаблицаПланов.КоличествоПятница) КАК КоличествоПятница,
	|	СУММА(ТаблицаПланов.КоличествоСуббота) КАК КоличествоСуббота,
	|	СУММА(ТаблицаПланов.КоличествоВоскресенье) КАК КоличествоВоскресенье,
	|	ТаблицаПланов.Цена
	|ПОМЕСТИТЬ ВТРаспределение
	|ИЗ
	|	ВТОсновная КАК ТаблицаПланов
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПланов.Номенклатура,
	|	ТаблицаПланов.НаименованиеНоменклатуры,
	|	ТаблицаПланов.Цена
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаПланов.ПланКоличество) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДат.Дата КАК Дата
	|ПОМЕСТИТЬ ВТДаты
	|ИЗ
	|	&ТаблицаДат КАК ТаблицаДат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТДаты.Дата КАК Дата,
	|	&ТорговаяТочка КАК ТорговаяТочка,
	|	ВТРаспределение.Номенклатура КАК Номенклатура,
	|	ВТРаспределение.НаименованиеНоменклатуры КАК НаименованиеНоменклатуры,
	|	ВЫБОР
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 1
	|			ТОГДА ВТРаспределение.КоличествоПонедельник
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 2
	|			ТОГДА ВТРаспределение.КоличествоВторник
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 3
	|			ТОГДА ВТРаспределение.КоличествоСреда
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 4
	|			ТОГДА ВТРаспределение.КоличествоЧетверг
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 5
	|			ТОГДА ВТРаспределение.КоличествоПятница
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 6
	|			ТОГДА ВТРаспределение.КоличествоСуббота
	|		КОГДА ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 7
	|			ТОГДА ВТРаспределение.КоличествоВоскресенье
	|	КОНЕЦ КАК Количество,
	|	ЕСТЬNULL(ВТРаспределение.Цена, 0) КАК Цена
	|ПОМЕСТИТЬ ВТПланыПродажПоДням
	|ИЗ
	|	ВТДаты КАК ВТДаты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРаспределение КАК ВТРаспределение
	|		ПО (ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 1
	|					И ВТРаспределение.КоличествоПонедельник > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 2
	|					И ВТРаспределение.КоличествоВторник > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 3
	|					И ВТРаспределение.КоличествоСреда > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 4
	|					И ВТРаспределение.КоличествоЧетверг > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 5
	|					И ВТРаспределение.КоличествоПятница > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 6
	|					И ВТРаспределение.КоличествоСуббота > 0
	|				ИЛИ ДЕНЬНЕДЕЛИ(ВТДаты.Дата) = 7
	|					И ВТРаспределение.КоличествоВоскресенье > 0)
	|ГДЕ
	|	НЕ ВТРаспределение.Номенклатура ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланыПродажПоДням.Дата КАК Дата,
	|	ПланыПродажПоДням.ТорговаяТочка,
	|	ПланыПродажПоДням.Номенклатура,
	|	МАКСИМУМ(ПланыПродажПоДням.Количество) КАК Количество,
	|	МАКСИМУМ(ПланыПродажПоДням.Цена) КАК Цена
	|ИЗ
	|	ВТПланыПродажПоДням КАК ПланыПродажПоДням
	|
	|СГРУППИРОВАТЬ ПО
	|	ПланыПродажПоДням.Дата,
	|	ПланыПродажПоДням.ТорговаяТочка,
	|	ПланыПродажПоДням.Номенклатура
	|ИТОГИ ПО
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПланыПродажПоДнямНедели.Дата КАК Дата
	|ИЗ
	|	РегистрСведений.ПланыПродажПоДнямНедели КАК ПланыПродажПоДнямНедели
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПланыПродажПоДням КАК ВТПланыПродажПоДням
	|		ПО (ВТПланыПродажПоДням.Дата = ПланыПродажПоДнямНедели.Дата)
	|			И (ВТПланыПродажПоДням.Номенклатура = ПланыПродажПоДнямНедели.Номенклатура)
	|ГДЕ
	|	ПланыПродажПоДнямНедели.Дата В
	|			(ВЫБРАТЬ
	|				ВТДаты.Дата
	|			ИЗ
	|				ВТДаты)
	|	И ПланыПродажПоДнямНедели.ТорговаяТочка = &ТорговаяТочка
	|	И ПланыПродажПоДнямНедели.Номенклатура В(&СписокНоменклатуры)
	|	И ВТПланыПродажПоДням.Номенклатура ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПланов.Номенклатура,
	|	ТаблицаПланов.НаименованиеНоменклатуры,
	|	ВЫБОР
	|		КОГДА &ЕстьПонедельник = ИСТИНА
	|			ТОГДА ТаблицаПланов.КоличествоПонедельник
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоПонедельник,
	|	ВЫБОР
	|		КОГДА &ЕстьВторник = ИСТИНА
	|			ТОГДА ТаблицаПланов.КоличествоВторник
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоВторник,
	|	ВЫБОР
	|		КОГДА &ЕстьСреда = ИСТИНА
	|			ТОГДА ТаблицаПланов.КоличествоСреда
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоСреда,
	|	ВЫБОР
	|		КОГДА &ЕстьЧетверг = ИСТИНА
	|			ТОГДА ТаблицаПланов.КоличествоЧетверг
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоЧетверг,
	|	ВЫБОР
	|		КОГДА &ЕстьПятница = ИСТИНА
	|			ТОГДА ТаблицаПланов.КоличествоПятница
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоПятница,
	|	ВЫБОР
	|		КОГДА &ЕстьСуббота = ИСТИНА
	|			ТОГДА ТаблицаПланов.КоличествоСуббота
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоСуббота,
	|	ВЫБОР
	|		КОГДА &ЕстьВоскресенье = ИСТИНА
	|			ТОГДА ТаблицаПланов.КоличествоВоскресенье
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КоличествоВоскресенье,
	|	ТаблицаПланов.Цена
	|ПОМЕСТИТЬ ВТПоследняя
	|ИЗ
	|	ВТРаспределение КАК ТаблицаПланов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПланов.Номенклатура,
	|	ТаблицаПланов.КоличествоПонедельник,
	|	ТаблицаПланов.КоличествоВторник,
	|	ТаблицаПланов.КоличествоСреда,
	|	ТаблицаПланов.КоличествоЧетверг,
	|	ТаблицаПланов.КоличествоПятница,
	|	ТаблицаПланов.КоличествоСуббота,
	|	ТаблицаПланов.КоличествоВоскресенье,
	|	ТаблицаПланов.КоличествоПонедельник + ТаблицаПланов.КоличествоВторник + ТаблицаПланов.КоличествоСреда + ТаблицаПланов.КоличествоЧетверг + ТаблицаПланов.КоличествоПятница + ТаблицаПланов.КоличествоСуббота + ТаблицаПланов.КоличествоВоскресенье КАК ПланКоличество,
	|	ТаблицаПланов.Цена * (ТаблицаПланов.КоличествоПонедельник + ТаблицаПланов.КоличествоВторник + ТаблицаПланов.КоличествоСреда + ТаблицаПланов.КоличествоЧетверг + ТаблицаПланов.КоличествоПятница + ТаблицаПланов.КоличествоСуббота + ТаблицаПланов.КоличествоВоскресенье) КАК ПланСумма,
	|	ТаблицаПланов.Цена
	|ИЗ
	|	ВТПоследняя КАК ТаблицаПланов
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаПланов.НаименованиеНоменклатуры";
	
	//+++АК LAGP 2018.02.25 Сгруппировал 13 запрос, из-за разных цен (реквизит регистра сведений) дублировались строки, невозможно было записать РС "ПланыПродажПоДнямНедели"
	
	Возврат Запрос.ВыполнитьПакет();
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗаполнитьИЗаписатьПланСервер(СтруктураПараметров, РезультатыЗапросов, мСч, СтруктураНаличияДнейВПериоде)
	
	// таблица с количеством дней недели, в которых не было продаж
	СтрокаНеПустыхДней = Неопределено;
	
	ТаблицаНеПустыхДней = РезультатыЗапросов[7 + мСч].Выгрузить();
	Если ТаблицаНеПустыхДней.Количество() > 0 Тогда
		СтрокаНеПустыхДней = ТаблицаНеПустыхДней[0];
	Иначе
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Нет данных для расчета!";
		СообщениеПользователю.Сообщить();
		Возврат Неопределено;
	КонецЕсли;
	
	
	// даты, в которых не было продаж (листов учета) в пределах анализируемого периода
	ВыборкаДат 	= РезультатыЗапросов[9 + мСч].Выбрать();
	Пока ВыборкаДат.Следующий() Цикл
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = Формат(ВыборкаДат.Дата, "ДЛФ=Д") + " не было продаж";
		СообщениеПользователю.Сообщить();
	КонецЦикла;
	
	
	// планы по номенклатуре - вывод на экран
	ТаблицаЗапроса = РезультатыЗапросов[8 + мСч].Выгрузить();
	
	ТаблицаЗапроса.Колонки.Добавить("ПланКоличество", Новый ОписаниеТипов("Число",,Новый КвалификаторыЧисла(15, 3)));
	Для Каждого СтрокаТаблицы Из ТаблицаЗапроса Цикл
		Если СтрокаТаблицы.КоличествоПонедельник > 0 Тогда
			СтрокаТаблицы.КоличествоПонедельник = СтрокаТаблицы.КоличествоПонедельник / СтрокаНеПустыхДней.КоличествоПн;														
		КонецЕсли;
		Если СтрокаТаблицы.КоличествоВторник > 0 Тогда
			СтрокаТаблицы.КоличествоВторник 	= СтрокаТаблицы.КоличествоВторник / СтрокаНеПустыхДней.КоличествоВт;
		КонецЕсли;
		Если СтрокаТаблицы.КоличествоСреда > 0 Тогда
			СтрокаТаблицы.КоличествоСреда 		= СтрокаТаблицы.КоличествоСреда / СтрокаНеПустыхДней.КоличествоСр;
		КонецЕсли;
		Если СтрокаТаблицы.КоличествоЧетверг > 0 Тогда
			СтрокаТаблицы.КоличествоЧетверг 	= СтрокаТаблицы.КоличествоЧетверг / СтрокаНеПустыхДней.КоличествоЧт;
		КонецЕсли;
		Если СтрокаТаблицы.КоличествоПятница > 0 Тогда
			СтрокаТаблицы.КоличествоПятница 	= СтрокаТаблицы.КоличествоПятница / СтрокаНеПустыхДней.КоличествоПт;
		КонецЕсли;
		Если СтрокаТаблицы.КоличествоСуббота > 0 Тогда
			СтрокаТаблицы.КоличествоСуббота 	= СтрокаТаблицы.КоличествоСуббота / СтрокаНеПустыхДней.КоличествоСб;
		КонецЕсли;
		Если СтрокаТаблицы.КоличествоВоскресенье > 0 Тогда
			СтрокаТаблицы.КоличествоВоскресенье = СтрокаТаблицы.КоличествоВоскресенье / СтрокаНеПустыхДней.КоличествоВс;
		КонецЕсли;
		СтрокаТаблицы.ПланКоличество = СтрокаТаблицы.КоличествоПонедельник +
										СтрокаТаблицы.КоличествоВторник +
										СтрокаТаблицы.КоличествоСреда +
										СтрокаТаблицы.КоличествоЧетверг +
										СтрокаТаблицы.КоличествоПятница +
										СтрокаТаблицы.КоличествоСуббота +
										СтрокаТаблицы.КоличествоВоскресенье;
	КонецЦикла;
	

	// распределить по данным регистра сведений "Планы продаж по дням недели (проценты)"
	РезультатыЗапросаОбщие = ПолучитьРезультатыЗапросаПоРаспределению(ТаблицаЗапроса, СтруктураПараметров, СтруктураНаличияДнейВПериоде);
	
    
	// поиск продаж, по которым нет записей в регистре сведений "Планы продаж по дням недели (проценты)"
	РезультатЗапроса = РезультатыЗапросаОбщие[9];
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Нет распределения по дням для номенклатуры """ + Выборка.Номенклатура + """";
		СообщениеПользователю.Сообщить();
	КонецЦикла;
	
	Возврат РезультатыЗапросаОбщие;
	
КонецФункции

Процедура ЗаполнитьПланСервер(МассивПараметров)
	
	Перем РезультатыЗапросов;
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровДляЗаписиВПланПродажСервер();
	СтруктураПараметров.Вставить("МассивНоменклатуры"	, ЭтаФорма.ПланыПродажПоДнямНедели.Выгрузить(Новый Структура("Изменять", Истина), "Номенклатура").ВыгрузитьКолонку("Номенклатура"));
	СтруктураПараметров.Вставить("ТаблицаДат"			, ЭтаФорма.ТаблицаДатПериода.Выгрузить(, "Дата"));
	СтруктураПараметров.Вставить("ПроцентИзменения"		, МассивПараметров[0]);
	СтруктураПараметров.Вставить("ДатаНачала"			, МассивПараметров[1]);
	СтруктураПараметров.Вставить("ДатаОкончания"		, МассивПараметров[2]);
	СтруктураПараметров.Вставить("СписокДатПериода"		, МассивПараметров[3]);
	
	мСч = 0;
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	РезультатыЗапросов = ОбработкаОбъект.ПолучитьПакетЗапросовПоФактуПродаж(СтруктураПараметров.ДатаНачала,
			СтруктураПараметров.ДатаОкончания, СтруктураПараметров.ТорговаяТочка, СтруктураПараметров.МассивНоменклатуры, мСч);
	
	СтруктураНаличияДнейВПериоде = ОбработкаОбъект.ПолучитьСтруктуруНаличияДнейВПериоде(СтруктураПараметров.СписокДатПериода);
	
	РезультатыЗапросаОбщие = ЗаполнитьИЗаписатьПланСервер(СтруктураПараметров, РезультатыЗапросов, мСч, СтруктураНаличияДнейВПериоде);
	Если РезультатыЗапросаОбщие = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// запись в регистр "Планы продаж по дням недели"
	РезультатКЗаписи 	= РезультатыЗапросаОбщие[13];
	РезультатКОчистке 	= РезультатыЗапросаОбщие[14];
	ОбработкаОбъект.ЗаписатьВПланыПродажПоДнямНедели(СтруктураПараметров.Расчетчик, РезультатКЗаписи, РезультатКОчистке,, СтруктураПараметров.ТорговаяТочка);
	
	// планы по торговым точкам - вывод на экран
	МассивСтрокБезПродаж	= Новый Массив;
	МассивТоваровБезПродаж 	= Новый Массив;
	мТаблица = РезультатыЗапросаОбщие[16].Выгрузить();
	ВремТаблица = ЭтаФорма.ПланыПродажПоДнямНедели.Выгрузить();
	Для Каждого СтрокаТаблицы Из ВремТаблица Цикл
		Если НЕ СтрокаТаблицы.Изменять Тогда
			Продолжить;
		КонецЕсли;
		СтрокаКЗагрузке = мТаблица.Найти(СтрокаТаблицы.Номенклатура, "Номенклатура");
		Если НЕ СтрокаКЗагрузке = Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, СтрокаКЗагрузке,, "Номенклатура");
		КонецЕсли;
	КонецЦикла;
	
	ЭтаФорма.ПланыПродажПоДнямНедели.Загрузить(ВремТаблица);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПлан(Команда)
	
	Если НЕ ЗначениеЗаполнено(ЭтаФорма.ПоследняяДатаВнесенияЛистовУчета) Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не выбран базовый период! Расчет невозможен.";
		СообщениеПользователю.УстановитьДанные(ЭтаФорма.ПоследняяДатаВнесенияЛистовУчета);
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если ЭтаФорма.СписокДатПериода.Количество() = 0 Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не выбран период планирования! Расчет невозможен.";
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	
	Если ЭтаФорма.ПроцентИзмененияПланаПродаж = 0 Тогда
		
		МассивПараметров = Новый Массив;
		МассивПараметров.Добавить(ЭтаФорма.ПроцентИзмененияПланаПродаж);
		МассивПараметров.Добавить(ЭтаФорма.ПоследняяДатаВнесенияЛистовУчета - (ЭтаФорма.ГлубинаАнализа * 7 - 1) * 86400);
		МассивПараметров.Добавить(КонецДня(ЭтаФорма.ПоследняяДатаВнесенияЛистовУчета));
		МассивПараметров.Добавить(ЭтаФорма.СписокДатПериода);
		
		ЗаполнитьПланСервер(МассивПараметров);
		
	Иначе
		
		ДобавитьПроцентИзмененияВПланПродажПоДням(ЭтаФорма.ПроцентИзмененияПланаПродаж);
		
	КонецЕсли;
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура ДобавитьПроцентИзмененияВПланПродажПоДнюСервер(ВремТаблица, СтруктураПараметров)
	
	Перем мПланыПродажПоДнямНедели, мКоэффициент, ДатаДня, ТекПорядокОкругления;
	
	
	// служ. переменные
	мПланыПродажПоДнямНедели = РегистрыСведений.ПланыПродажПоДнямНедели;
	
	мКоэффициент = (1 + СтруктураПараметров.ПроцентИзменения / 100);

	ДатаДня = Дата(1, 1, 1);
	мИндексДняНедели = Перечисления.ДниНедели.Индекс(СтруктураПараметров.ДеньНеделиИзменения) + 1;
	Если мИндексДняНедели = 1 Тогда
		ДатаДня = СтруктураПараметров.ДатаПн;
	ИначеЕсли мИндексДняНедели = 2 Тогда
		ДатаДня = СтруктураПараметров.ДатаВт;
	ИначеЕсли мИндексДняНедели = 3 Тогда
		ДатаДня = СтруктураПараметров.ДатаСр;
	ИначеЕсли мИндексДняНедели = 4 Тогда
		ДатаДня = СтруктураПараметров.ДатаЧт;
	ИначеЕсли мИндексДняНедели = 5 Тогда
		ДатаДня = СтруктураПараметров.ДатаПт;
	ИначеЕсли мИндексДняНедели = 6 Тогда
		ДатаДня = СтруктураПараметров.ДатаСб;
	Иначе
		ДатаДня = СтруктураПараметров.ДатаВс;
	КонецЕсли;
	
	
	// обработка таблицы
	СтруктураЗаписи = Новый Структура("Номенклатура, Количество, Цена");
	СтруктураЗаписи.Вставить("Дата"			, ДатаДня);
	СтруктураЗаписи.Вставить("Расчетчик"	, СтруктураПараметров.Расчетчик);
	СтруктураЗаписи.Вставить("Склад"		, СтруктураПараметров.Расчетчик.Склад);
	СтруктураЗаписи.Вставить("ТорговаяТочка", СтруктураПараметров.ТорговаяТочка);
	
	Для Каждого СтрокаТаблицы Из ВремТаблица Цикл
		
		Если НЕ СтрокаТаблицы.Изменять Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураЗаписи.Номенклатура 	= СтрокаТаблицы.Номенклатура;
		СтруктураЗаписи.Цена 			= СтрокаТаблицы.Цена;
		
		ТекПорядокОкругления = ?(СтрокаТаблицы.Номенклатура.Весовой, 1, 0);
		Если мИндексДняНедели = 1
				И НЕ СтрокаТаблицы.КоличествоПонедельник = 0 Тогда
			СтрокаТаблицы.КоличествоПонедельник = Окр(СтрокаТаблицы.КоличествоПонедельник * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоПонедельник;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если мИндексДняНедели = 2
				И НЕ СтрокаТаблицы.КоличествоВторник = 0 Тогда
			СтрокаТаблицы.КоличествоВторник 		= Окр(СтрокаТаблицы.КоличествоВторник * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоВторник;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если мИндексДняНедели = 3
				И НЕ СтрокаТаблицы.КоличествоСреда = 0 Тогда
			СтрокаТаблицы.КоличествоСреда 			= Окр(СтрокаТаблицы.КоличествоСреда * мКоэффициент		, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоСреда;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если мИндексДняНедели = 4
				И НЕ СтрокаТаблицы.КоличествоЧетверг = 0 Тогда
			СтрокаТаблицы.КоличествоЧетверг 		= Окр(СтрокаТаблицы.КоличествоЧетверг * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоЧетверг;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если мИндексДняНедели = 5
				И НЕ СтрокаТаблицы.КоличествоПятница = 0 Тогда
			СтрокаТаблицы.КоличествоПятница 		= Окр(СтрокаТаблицы.КоличествоПятница * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоПятница;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если мИндексДняНедели = 6
				И НЕ СтрокаТаблицы.КоличествоСуббота = 0 Тогда
			СтрокаТаблицы.КоличествоСуббота 		= Окр(СтрокаТаблицы.КоличествоСуббота * мКоэффициент	, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоСуббота;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		Если мИндексДняНедели = 7
				И НЕ СтрокаТаблицы.КоличествоВоскресенье = 0 Тогда
			СтрокаТаблицы.КоличествоВоскресенье 	= Окр(СтрокаТаблицы.КоличествоВоскресенье * мКоэффициент, ТекПорядокОкругления);
			СтруктураЗаписи.Количество 	= СтрокаТаблицы.КоличествоВоскресенье;
			ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		КонецЕсли;
		
		СтрокаТаблицы.ПланКоличество 	= СтрокаТаблицы.КоличествоПонедельник +
											СтрокаТаблицы.КоличествоВторник +
											СтрокаТаблицы.КоличествоСреда +
											СтрокаТаблицы.КоличествоЧетверг +
											СтрокаТаблицы.КоличествоПятница +
											СтрокаТаблицы.КоличествоСуббота +
											СтрокаТаблицы.КоличествоВоскресенье;
		СтрокаТаблицы.ПланСумма 		= СтрокаТаблицы.Цена * СтрокаТаблицы.ПланКоличество;
		
	КонецЦикла;                                                                          
	
КонецПроцедуры

// Изменяет числовые показатели для дня на процент изменения.
//
Процедура ДобавитьПроцентИзмененияВПланПродажПоДню(СтруктураПараметров)
	
	ВремТаблица = ЭтаФорма.ПланыПродажПоДнямНедели.Выгрузить();
	
	ДобавитьПроцентИзмененияВПланПродажПоДнюСервер(ВремТаблица, СтруктураПараметров);
	
	ЭтаФорма.ПланыПродажПоДнямНедели.Загрузить(ВремТаблица);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПланНаДень(Команда)

	Если ЭтаФорма.ДеньНеделиИзменения.Пустая() Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не указан день недели!";
		СообщениеПользователю.УстановитьДанные(ЭтаФорма.ДеньНеделиИзменения);
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;

	Если ЭтаФорма.ПроцентИзмененияДень = 0 Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не указан процент изменения!";
		СообщениеПользователю.УстановитьДанные(ЭтаФорма.ПроцентИзмененияДень);
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровДляЗаписиВПланПродаж();
	СтруктураПараметров.Вставить("ПроцентИзменения"		, ЭтаФорма.ПроцентИзмененияДень);
	СтруктураПараметров.Вставить("ДеньНеделиИзменения"	, ЭтаФорма.ДеньНеделиИзменения);
	
	ДобавитьПроцентИзмененияВПланПродажПоДню(СтруктураПараметров);
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура КопироватьНаДругойДеньНеделиСерверБезКонтекста(ВремТаблица, СтруктураПараметров)

	// служ. переменные
	мПланыПродажПоДнямНедели = РегистрыСведений.ПланыПродажПоДнямНедели;
	
	ДатаДня = Дата(1, 1, 1);
	мИндексДняНеделиНа = Перечисления.ДниНедели.Индекс(СтруктураПараметров.ДеньНеделиНа) + 1;
	Если мИндексДняНеделиНа = 1 Тогда
		ДатаДня = СтруктураПараметров.ДатаПн;
		ТекстДняНа = "Понедельник";
	ИначеЕсли мИндексДняНеделиНа = 2 Тогда
		ДатаДня = СтруктураПараметров.ДатаВт;
		ТекстДняНа = "Вторник";
	ИначеЕсли мИндексДняНеделиНа = 3 Тогда
		ДатаДня = СтруктураПараметров.ДатаСр;
		ТекстДняНа = "Среда";
	ИначеЕсли мИндексДняНеделиНа = 4 Тогда
		ДатаДня = СтруктураПараметров.ДатаЧт;
		ТекстДняНа = "Четверг";
	ИначеЕсли мИндексДняНеделиНа = 5 Тогда
		ДатаДня = СтруктураПараметров.ДатаПт;
		ТекстДняНа = "Пятница";
	ИначеЕсли мИндексДняНеделиНа = 6 Тогда
		ДатаДня = СтруктураПараметров.ДатаСб;
		ТекстДняНа = "Суббота";
	Иначе
		ДатаДня = СтруктураПараметров.ДатаВс;
		ТекстДняНа = "Воскресенье";
	КонецЕсли;
	
	ТекстДняС = ПолучитьТекстДняНедели(СтруктураПараметров.ДеньНеделиС);
		
	
	// обработка таблицы
	СтруктураЗаписи = Новый Структура("Номенклатура, Количество, Цена");
	СтруктураЗаписи.Вставить("Дата"			, ДатаДня);
	СтруктураЗаписи.Вставить("Расчетчик"	, СтруктураПараметров.Расчетчик);
	СтруктураЗаписи.Вставить("Склад"		, СтруктураПараметров.Расчетчик.Склад);
	СтруктураЗаписи.Вставить("ТорговаяТочка", СтруктураПараметров.ТорговаяТочка);
	
	Для Каждого СтрокаТаблицы Из ВремТаблица Цикл
		
		Если НЕ СтрокаТаблицы.Изменять Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураЗаписи.Номенклатура 	= СтрокаТаблицы.Номенклатура;
		СтруктураЗаписи.Цена 			= СтрокаТаблицы.Цена;
		
		ТекКоличество = СтрокаТаблицы["Количество" + ТекстДняС];
		СтрокаТаблицы["Количество" + ТекстДняНа] = ТекКоличество;
		СтруктураЗаписи.Количество 	= ТекКоличество;
		ДобавитьЗаписьВПланыПоСтроке(мПланыПродажПоДнямНедели, СтруктураЗаписи);
		
		СтрокаТаблицы.ПланКоличество 	= СтрокаТаблицы.КоличествоПонедельник +
											СтрокаТаблицы.КоличествоВторник +
											СтрокаТаблицы.КоличествоСреда +
											СтрокаТаблицы.КоличествоЧетверг +
											СтрокаТаблицы.КоличествоПятница +
											СтрокаТаблицы.КоличествоСуббота +
											СтрокаТаблицы.КоличествоВоскресенье;
		СтрокаТаблицы.ПланСумма 		= СтрокаТаблицы.Цена * СтрокаТаблицы.ПланКоличество;
		
	КонецЦикла;                                                                          
	
КонецПроцедуры

Процедура КопироватьНаДругойДеньНеделиСервер(СтруктураПараметров)
	
	ВремТаблица = ЭтаФорма.ПланыПродажПоДнямНедели.Выгрузить();
	
	КопироватьНаДругойДеньНеделиСерверБезКонтекста(ВремТаблица, СтруктураПараметров);
	
	ЭтаФорма.ПланыПродажПоДнямНедели.Загрузить(ВремТаблица);
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьНаДругойДеньНедели(Команда)

	Если ЭтаФорма.ДеньНеделиС.Пустая() Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не указан день недели, план которого необходимо скопировать!";
		СообщениеПользователю.УстановитьДанные(ЭтаФорма.ДеньНеделиС);
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;

	Если ЭтаФорма.ДеньНеделиНа.Пустая() Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Не указан день недели, план на который необходимо скопировать!";
		СообщениеПользователю.УстановитьДанные(ЭтаФорма.ДеньНеделиНа);
		СообщениеПользователю.Сообщить();
		Возврат;
	Иначе
		Если ЭтаФорма.ДеньНеделиНа = ЭтаФорма.ДеньНеделиС Тогда
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Дни недели не должны совпадать!";
			СообщениеПользователю.УстановитьДанные(ЭтаФорма.ДеньНеделиНа);
			СообщениеПользователю.Сообщить();
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровДляЗаписиВПланПродаж();
	СтруктураПараметров.Вставить("ДеньНеделиС"	, ЭтаФорма.ДеньНеделиС);
	СтруктураПараметров.Вставить("ДеньНеделиНа"	, ЭтаФорма.ДеньНеделиНа);
	
	КопироватьНаДругойДеньНеделиСервер(СтруктураПараметров);
	
КонецПроцедуры


&НаСервереБезКонтекста
Процедура КопироватьПланПрошлойНеделиСервер(МассивДатПрошлойНедели, мРасчетчик, мТорговаяТочка, мСписокНоменклатуры, мСписокДатПериода)
	
	// получение записей прошлой недели
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Расчетчик"				, мРасчетчик);
	Запрос.УстановитьПараметр("Склад"					, мРасчетчик.Склад);
	Запрос.УстановитьПараметр("ТорговаяТочка"			, мТорговаяТочка);
	Запрос.УстановитьПараметр("МассивДатПрошлойНедели"	, МассивДатПрошлойНедели);
	Запрос.УстановитьПараметр("МассивНоменклатуры"		, мСписокНоменклатуры);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	&Расчетчик КАК Расчетчик,
	|	&Склад КАК Склад,
	|	ПланыПродажПоДнямНедели.Дата,
	|	ПланыПродажПоДнямНедели.ТорговаяТочка,
	|	ПланыПродажПоДнямНедели.Номенклатура,
	|	ПланыПродажПоДнямНедели.Количество,
	|	ПланыПродажПоДнямНедели.Цена
	|ИЗ
	|	РегистрСведений.ПланыПродажПоДнямНедели КАК ПланыПродажПоДнямНедели
	|ГДЕ
	|	ПланыПродажПоДнямНедели.Дата В (&МассивДатПрошлойНедели)
	|	И ПланыПродажПоДнямНедели.ТорговаяТочка = &ТорговаяТочка
	|	И ПланыПродажПоДнямНедели.Номенклатура В(&МассивНоменклатуры)";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		СообщениеПользователю = Новый СообщениеПользователю;
		СообщениеПользователю.Текст = "Нет данных для копирования!";
		СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	ТаблицаЗапроса = РезультатЗапроса.Выгрузить();
	
	
	//
	мПланыПродажПоДнямНедели = РегистрыСведений.ПланыПродажПоДнямНедели;
	
	Для Каждого ЭлементСписка Из мСписокДатПериода Цикл
		
		ТекДата = ЭлементСписка.Значение;
		
		НаборЗаписей = мПланыПродажПоДнямНедели.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Дата.Установить(ТекДата);
		НаборЗаписей.Отбор.Расчетчик.Установить(мРасчетчик);
		НаборЗаписей.Отбор.ТорговаяТочка.Установить(мТорговаяТочка);
		НаборЗаписей.Прочитать();
		
		ВремТаблица = ТаблицаЗапроса.Скопировать(Новый Структура("Дата", ТекДата - 7 * 86400));
		ВремТаблица.ЗаполнитьЗначения(ТекДата, "Дата");
		НаборЗаписей.Загрузить(ВремТаблица);
	
		Попытка
			НаборЗаписей.Записать();
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
	КонецЦикла;	
	
КонецПроцедуры

// Копирует набор записей по прошлой неделе (от планируемой даты)
//
&НаКлиенте
Процедура КопироватьПланПрошлойНедели(Команда)
	
	МассивДатПрошлойНедели = Новый Массив;
	Для Каждого ЭлементСписка Из ЭтаФорма.СписокДатПериода Цикл
		МассивДатПрошлойНедели.Добавить(ЭлементСписка.Значение - 7 * 86400);
	КонецЦикла;
	
	КопироватьПланПрошлойНеделиСервер(МассивДатПрошлойНедели,
							ЭтаФорма.Расчетчик, ЭтаФорма.ТорговаяТочка, ЭтаФорма.СписокНоменклатуры, ЭтаФорма.СписокДатПериода);
	
	// перерисовка на форме
	ЗаполнитьТаблицуПродаж();
	
КонецПроцедуры


Функция ПолучитьСвернутыйПлан()
	
	Перем ТаблицаСвернутыйПлан, МассивСтруктур, СтруктураСтроки;
	
	ТаблицаСвернутыйПлан = ЭтаФорма.ПланыПродажПоДнямНедели.Выгрузить();
	ТаблицаСвернутыйПлан.Свернуть("Номенклатура", "ПланСумма");
	ТаблицаСвернутыйПлан.Колонки.ПланСумма.Имя = "Сумма";
	
	МассивСтруктур = Новый Массив;
	ТекТТ = ЭтаФорма.ТорговаяТочка;
	Для Каждого СтрокаТаблицы Из ТаблицаСвернутыйПлан Цикл
		СтруктураСтроки = Новый Структура;
		СтруктураСтроки.Вставить("ТорговаяТочка", ТекТТ);
		СтруктураСтроки.Вставить("Номенклатура"	, СтрокаТаблицы.Номенклатура);
		СтруктураСтроки.Вставить("Сумма"		, СтрокаТаблицы.Сумма);
		МассивСтруктур.Добавить(СтруктураСтроки);
	КонецЦикла;
	
	Возврат МассивСтруктур;
	
КонецФункции

&НаКлиенте
Процедура КнопкаОКНажатие(Команда)
	
	МассивСтруктур = ПолучитьСвернутыйПлан();
	
	ЭтаФорма.Закрыть(МассивСтруктур);
	
КонецПроцедуры


///////////////////
// ТП Планы продаж

&НаКлиенте
Процедура ОтменитьРучнуюКорректировкуВПланеПродаж(Команда)

	Перем ТекДанные, ИмяТекЭлемента;
	
	ТекДанные 		= Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные;
	ИмяТекЭлемента 	= Элементы.ПланыПродажПоДнямНедели.ТекущийЭлемент.Имя;
	
	Если ИмяТекЭлемента = "ПланыПродажПоДнямНеделиКоличествоПонедельник" Тогда
		ТекДанные.ПнИзменен = Ложь;
	ИначеЕсли ИмяТекЭлемента = "ПланыПродажПоДнямНеделиКоличествоВторник" Тогда
		ТекДанные.ВтИзменен = Ложь;
	ИначеЕсли ИмяТекЭлемента = "ПланыПродажПоДнямНеделиКоличествоСреда" Тогда
		ТекДанные.СрИзменен = Ложь;
	ИначеЕсли ИмяТекЭлемента = "ПланыПродажПоДнямНеделиКоличествоЧетверг" Тогда
		ТекДанные.ЧтИзменен = Ложь;
	ИначеЕсли ИмяТекЭлемента = "ПланыПродажПоДнямНеделиКоличествоПятница" Тогда
		ТекДанные.ПтИзменен = Ложь;
	ИначеЕсли ИмяТекЭлемента = "ПланыПродажПоДнямНеделиКоличествоСуббота" Тогда
		ТекДанные.СбИзменен = Ложь;
	ИначеЕсли ИмяТекЭлемента = "ПланыПродажПоДнямНеделиКоличествоВоскресенье" Тогда
		ТекДанные.ВсИзменен = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииКоличестваВПланеПродаж(ТекДанные)
	
	ТекДанные.ПланКоличество = ТекДанные.КоличествоПонедельник +
									ТекДанные.КоличествоВторник +
									ТекДанные.КоличествоСреда +
									ТекДанные.КоличествоЧетверг +
									ТекДанные.КоличествоПятница +
									ТекДанные.КоличествоСуббота +
									ТекДанные.КоличествоВоскресенье;
	
	ТекДанные.ПланСумма = ТекДанные.ПланКоличество * ТекДанные.Цена;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиИзменять(Команда)

	Для Каждого СтрокаТаблицы Из ЭтаФорма.ПланыПродажПоДнямНедели Цикл
		СтрокаТаблицы.Изменять = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиИзменять(Команда)

	Для Каждого СтрокаТаблицы Из ЭтаФорма.ПланыПродажПоДнямНедели Цикл
		СтрокаТаблицы.Изменять = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиКоличествоПонедельникПриИзменении(Элемент)
	
	Перем ТекДанные;
	
	ТекДанные = Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные;
	
	ПриИзмененииКоличестваВПланеПродаж(ТекДанные); // пересчет общего количества и суммы
	
	ТекДанные.ПнИзменен = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиКоличествоВторникПриИзменении(Элемент)
	
	Перем ТекДанные;
	
	ТекДанные = Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные;
	
	ПриИзмененииКоличестваВПланеПродаж(ТекДанные); // пересчет общего количества и суммы
	
	ТекДанные.ВтИзменен = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиКоличествоСредаПриИзменении(Элемент)
	
	Перем ТекДанные;
	
	ТекДанные = Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные;
	
	ПриИзмененииКоличестваВПланеПродаж(ТекДанные); // пересчет общего количества и суммы
	
	ТекДанные.СрИзменен = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиКоличествоЧетвергПриИзменении(Элемент)
	
	Перем ТекДанные;
	
	ТекДанные = Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные;
	
	ПриИзмененииКоличестваВПланеПродаж(ТекДанные); // пересчет общего количества и суммы
	
	ТекДанные.ЧтИзменен = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиКоличествоПятницаПриИзменении(Элемент)
	
	Перем ТекДанные;
	
	ТекДанные = Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные;
	
	ПриИзмененииКоличестваВПланеПродаж(ТекДанные); // пересчет общего количества и суммы
	
	ТекДанные.ПтИзменен = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиКоличествоСубботаПриИзменении(Элемент)
	
	Перем ТекДанные;
	
	ТекДанные = Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные;
	
	ПриИзмененииКоличестваВПланеПродаж(ТекДанные); // пересчет общего количества и суммы
	
	ТекДанные.СбИзменен = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиКоличествоВоскресеньеПриИзменении(Элемент)
	
	Перем ТекДанные;
	
	ТекДанные = Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные;
	
	ПриИзмененииКоличестваВПланеПродаж(ТекДанные); // пересчет общего количества и суммы
	
	ТекДанные.ВсИзменен = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиЦенаПриИзменении(Элемент)
	
	Перем ТекДанные;
	
	ТекДанные = Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные;
	
	ТекДанные.ПланСумма = ТекДанные.ПланКоличество * ТекДанные.Цена;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиПриИзменении(Элемент)

	Если ЭтаФорма.СписокДатПериода.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные = Элемент.ТекущиеДанные;
	
	// перезапись в регистр сведений "ПланыПродажПоДнямНедели" данных строки
	СтрокаКолонок = "Номенклатура, КоличествоПонедельник, КоличествоВторник, КоличествоСреда, КоличествоЧетверг, КоличествоПятница, КоличествоСуббота, КоличествоВоскресенье, Цена";
	СтруктураПараметров = Новый Структура(СтрокаКолонок);
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, ТекДанные, СтрокаКолонок);
	
	СтруктураПараметров.Вставить("Расчетчик"				, ЭтаФорма.Расчетчик);
	СтруктураПараметров.Вставить("ТорговаяТочка"			, ЭтаФорма.ТорговаяТочка);
	СтруктураПараметров.Вставить("СписокДатПериода"			, ЭтаФорма.СписокДатПериода);
	СтруктураПараметров.Вставить("СписокЗначенийКИзменению"	, ЭтаФорма.СписокЗначенийКИзменению);
	
	ДобавитьЗаписьВПланПродажПоДням(СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиПриАктивизацииСтроки(Элемент)

	ТекДанные = Элемент.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ПродажиЗаПрошлыеНедели.ОтборСтрок = Новый ФиксированнаяСтруктура("Номенклатура", ТекДанные.Номенклатура);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиПередУдалением(Элемент, Отказ)

	Перем ТекВыделенныеСтроки, ТекДанные;
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтаФорма.СписокДатПериода.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура("Номенклатура");
	СтруктураПараметров.Вставить("Расчетчик"		, ЭтаФорма.Расчетчик);
	СтруктураПараметров.Вставить("ТорговаяТочка"	, ЭтаФорма.ТорговаяТочка);
	СтруктураПараметров.Вставить("СписокДатПериода"	, ЭтаФорма.СписокДатПериода);
	
	ТекВыделенныеСтроки = Элемент.ВыделенныеСтроки;
	
	мМассивНоменклатуры = Новый Массив;
	Для Каждого СтрокаТаблицы Из ТекВыделенныеСтроки Цикл
		ТекДанные = ЭтаФорма.ПланыПродажПоДнямНедели.НайтиПоИдентификатору(СтрокаТаблицы);
		мМассивНоменклатуры.Добавить(ТекДанные.Номенклатура);
	КонецЦикла;	
	СтруктураПараметров.Вставить("МассивНоменклатуры", мМассивНоменклатуры);
	
	//
	УдалитьЗаписиВПланеПродажПоДням(СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)

	Если НоваяСтрока Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтаФорма.СписокЗначенийКИзменению.Количество() > 0 Тогда
		ЭтаФорма.СписокЗначенийКИзменению.Очистить();
	КонецЕсли;
	
	ТекДанные = Элемент.ТекущиеДанные;
	ЭтаФорма.СписокЗначенийКИзменению.Добавить(ТекДанные.Номенклатура);
	ЭтаФорма.СписокЗначенийКИзменению.Добавить(ТекДанные.КоличествоПонедельник);
	ЭтаФорма.СписокЗначенийКИзменению.Добавить(ТекДанные.КоличествоВторник);
	ЭтаФорма.СписокЗначенийКИзменению.Добавить(ТекДанные.КоличествоСреда);
	ЭтаФорма.СписокЗначенийКИзменению.Добавить(ТекДанные.КоличествоЧетверг);
	ЭтаФорма.СписокЗначенийКИзменению.Добавить(ТекДанные.КоличествоПятница);
	ЭтаФорма.СписокЗначенийКИзменению.Добавить(ТекДанные.КоличествоСуббота);
	ЭтаФорма.СписокЗначенийКИзменению.Добавить(ТекДанные.КоличествоВоскресенье);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	//Перем ТекДанные, СтрокаКолонок, СтрокаПродаж;
	//
	//Если ОтменаРедактирования Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Если ЭтаФорма.СписокДатПериода.Количество() = 0 Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//ТекДанные = Элемент.ТекущиеДанные;
	//
	//// перезапись в регистр сведений "ПланыПродажПоДнямНедели" данных строки
	//СтрокаКолонок = "Номенклатура, КоличествоПонедельник, КоличествоВторник, КоличествоСреда, КоличествоЧетверг, КоличествоПятница, КоличествоСуббота, КоличествоВоскресенье, Цена";
	//СтруктураПараметров = Новый Структура(СтрокаКолонок);
	//ЗаполнитьЗначенияСвойств(СтруктураПараметров, ТекДанные, СтрокаКолонок);
	//
	//СтруктураПараметров.Вставить("Расчетчик"				, ЭтаФорма.Расчетчик);
	//СтруктураПараметров.Вставить("ТорговаяТочка"			, ЭтаФорма.ТорговаяТочка);
	//СтруктураПараметров.Вставить("СписокДатПериода"			, ЭтаФорма.СписокДатПериода);
	//СтруктураПараметров.Вставить("СписокЗначенийКИзменению"	, ЭтаФорма.СписокЗначенийКИзменению);
	//
	//ДобавитьЗаписьВПланПродажПоДням(СтруктураПараметров, НоваяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыПродажПоДнямНеделиНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	Перем ФормаВыбора, ОтборПоСсылке;
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = ПолучитьФорму("Справочник.Номенклатура.Форма.ФормаВыбора",, Элемент);
	
	ФормаВыбора.НачальноеЗначениеВыбора = Элементы.ПланыПродажПоДнямНедели.ТекущиеДанные.Номенклатура;
	
	ОтборПоСсылке = ФормаВыбора.Отбор.Ссылка;
	ОтборПоСсылке.ВидСравнения 		= ВидСравнения.ВСпискеПоИерархии;
	ОтборПоСсылке.Использование 	= Истина;
	ОтборПоСсылке.Значение 			= ЭтаФорма.СписокНоменклатуры;
	
	мСписок = ФормаВыбора.ЭлементыФормы.СправочникСписок;
	мСписок.НастройкаОтбора.Ссылка.Доступность 	= Ложь;
	мСписок.ИерархическийПросмотр 				= Ложь;
	мСписок.ИзменятьИерархическийПросмотр 		= Ложь;
	
	ФормаВыбора.Открыть();
	
КонецПроцедуры
