
Процедура ЗаполнитьДанныеПоТоварам(Товар = Неопределено)
	
	МассивТовары = Новый Массив();
	Если ЗначениеЗаполнено(Товар) Тогда
		МассивТовары.Добавить(Товар);
	Иначе	
		Для Каждого СтрокаТаб Из ТабДанные Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаТаб.СрокГодностиДней) Тогда
				МассивТовары.Добавить(СтрокаТаб.Номенклатура);
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;	
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Товары", МассивТовары);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЗ_Запрос.СрокГодности,
	               |	ВЗ_Запрос.Сортировка,
	               |	ВЗ_Запрос.Товар КАК Товар
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		МИНИМУМ(ХарактеристикиНоменклатуры.СрокГодности * ХарактеристикиНоменклатуры.ТипСрокаГодности.КоэффициентВСутках) КАК СрокГодности,
	               |		0 КАК Сортировка,
	               |		ХарактеристикиНоменклатуры.Владелец КАК Товар
	               |	ИЗ
	               |		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	               |	ГДЕ
	               |		ХарактеристикиНоменклатуры.Владелец В(&Товары)
	               |		И ХарактеристикиНоменклатуры.СтатусАктивностиХарактеристики = ЗНАЧЕНИЕ(Перечисление.СтатусыАктивностиХарактеристик.Активна)
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ХарактеристикиНоменклатуры.Владелец
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		МИНИМУМ(ХарактеристикиНоменклатуры.СрокГодности * ХарактеристикиНоменклатуры.ТипСрокаГодности.КоэффициентВСутках),
	               |		1,
	               |		ХарактеристикиНоменклатуры.Владелец
	               |	ИЗ
	               |		Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	               |	ГДЕ
	               |		ХарактеристикиНоменклатуры.Владелец В(&Товары)
	               |		И НЕ ХарактеристикиНоменклатуры.СтатусАктивностиХарактеристики В (ЗНАЧЕНИЕ(Перечисление.СтатусыАктивностиХарактеристик.Активна), ЗНАЧЕНИЕ(Перечисление.СтатусыАктивностиХарактеристик.Неактивная))
	               |	
	               |	СГРУППИРОВАТЬ ПО
	               |		ХарактеристикиНоменклатуры.Владелец) КАК ВЗ_Запрос
	               |ГДЕ
	               |	НЕ ВЗ_Запрос.СрокГодности ЕСТЬ NULL 
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Товар,
	               |	ВЗ_Запрос.Сортировка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЗ_Запрос.МестоВыкладки,
	               |	Номенклатура.Ссылка
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			МАКСИМУМ(ВыкладкаПланограммы.МестоВыкладки) КАК МестоВыкладки,
	               |			ВыкладкаПланограммы.Номенклатура КАК Ссылка
	               |		ИЗ
	               |			РегистрСведений.ВыкладкаПланограммы КАК ВыкладкаПланограммы
	               |		ГДЕ
	               |			ВыкладкаПланограммы.Планограмма.НеАктуальная = ЛОЖЬ
	               |			И ВыкладкаПланограммы.ТоварВыведен = ЛОЖЬ
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ВыкладкаПланограммы.Номенклатура) КАК ВЗ_Запрос
	               |		ПО Номенклатура.Ссылка = ВЗ_Запрос.Ссылка
	               |ГДЕ
	               |	ЕСТЬNULL(ВЗ_Запрос.МестоВыкладки, ЗНАЧЕНИЕ(Справочник.МестаВыкладки.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.МестаВыкладки.ПустаяСсылка)
	               |	И Номенклатура.Выведена = ЛОЖЬ
	               |	И Номенклатура.ПометкаУдаления = ЛОЖЬ";
	Результаты = Запрос.ВыполнитьПакет();			   
	ТабКешМеста = Результаты[1].Выгрузить();
	Выборка = Результаты[0].Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Товар") Цикл
		Если Выборка.Следующий() Тогда
			СтрокиТаб = ТабДанные.НайтиСтроки(Новый Структура("Номенклатура", Выборка.Товар));
			Если СтрокиТаб.Количество() > 0 Тогда
				СтрокиТаб[0].СрокГодностиДней = Выборка.СрокГодности;
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
	
	Для Каждого СтрокаТаб Из ТабДанные Цикл
		СтрокаКеш = ТабКешМеста.Найти(СтрокаТаб.Номенклатура, "Ссылка");
		Если СтрокаКеш <> Неопределено Тогда
			СтрокаТаб.МестоВыкладки = СтрокаКеш.МестоВыкладки;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТаб.ДатаПроизводства) Тогда
			СтрокаТаб.ПоследнийДеньПродажи = СтрокаТаб.ДатаПроизводства + 86400 * (СтрокаТаб.СрокГодностиДней - 1);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТаб.ПоследнийДеньПродажи)
			И СтрокаТаб.ПоследнийДеньПродажи <= НачалоДня(ТекущаяДата()) Тогда
			СтрокаТаб.ВыделятьКрасным = Истина;
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Магазин", ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	Запрос.Текст = "ВЫБРАТЬ
	               |	РегистрСведенийКонтрольПросрочкиВМагазинах.Магазин,
	               |	РегистрСведенийКонтрольПросрочкиВМагазинах.Номенклатура,
	               |	РегистрСведенийКонтрольПросрочкиВМагазинах.ДатаПроизводства,
	               |	РегистрСведенийКонтрольПросрочкиВМагазинах.Остаток,
	               |	РегистрСведенийКонтрольПросрочкиВМагазинах.СрокГодностиДней,
	               |	РегистрСведенийКонтрольПросрочкиВМагазинах.ДатаПоследнегоИзменения,
	               |	РегистрСведенийКонтрольПросрочкиВМагазинах.АвторИзменения,
	               |	РегистрСведенийКонтрольПросрочкиВМагазинах.Комментарий,
	               |	ДОБАВИТЬКДАТЕ(РегистрСведенийКонтрольПросрочкиВМагазинах.ДатаПроизводства, ДЕНЬ, РегистрСведенийКонтрольПросрочкиВМагазинах.СрокГодностиДней) КАК ДатаПросрочки
	               |ИЗ
	               |	РегистрСведений.КонтрольПросрочкиВМагазинах КАК РегистрСведенийКонтрольПросрочкиВМагазинах
	               |ГДЕ
	               |	РегистрСведенийКонтрольПросрочкиВМагазинах.Магазин = &Магазин
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаПросрочки";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТабДанные.Добавить(), Выборка);
	КонецЦикла;	
	
	ЗаполнитьДанныеПоТоварам();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабДанныеНоменклатураПриИзменении(Элемент)
	
	ОбработатьВыборНоменклатуры();
	Если Элементы.ТабДанные.ТекущиеДанные <> Неопределено Тогда
		ЗаполнитьДанныеПоТоварам(Элементы.ТабДанные.ТекущиеДанные.Номенклатура);
	КонецЕсли;	
	
КонецПроцедуры

Функция ПолучитьАвтора()
	
	Попытка
		АвторИзменения = ПараметрыСеанса.ТекущийПродавец;
	Исключение
	КонецПопытки;
	Если НЕ ЗначениеЗаполнено(АвторИзменения) Тогда
		АвторИзменения = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	Возврат АвторИзменения;
	
КонецФункции	

&НаКлиенте
Процедура ТабДанныеПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Элементы.ТабДанные.ТекущиеДанные <> Неопределено Тогда
		ЗаполнитьДанныеПоТоварам();
		Элементы.ТабДанные.ТекущиеДанные.ДатаПоследнегоИзменения = ТекущаяДата();
		Элементы.ТабДанные.ТекущиеДанные.АвторИзменения = ПолучитьАвтора();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТабДанныеПередНачаломИзменения(Элемент, Отказ)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ТабДанныеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока
		И Копирование Тогда
		Элементы.ТабДанные.ТекущиеДанные.АвторИзменения = Неопределено;
		Элементы.ТабДанные.ТекущиеДанные.ДатаПоследнегоИзменения = '00010101';
	КонецЕсли;	
	
КонецПроцедуры

Процедура ЗаполнитьПоВыкладке(МестоВыкладки)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РабочаяДата"		, ТекущаяДата());
	Запрос.УстановитьПараметр("ТорговаяТочка"	, ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	Запрос.УстановитьПараметр("Планограмма"		, ПараметрыСеанса.ТорговаяТочкаПоАйпи.Планограмма);
	Запрос.УстановитьПараметр("ДатаТек"			, ТекущаяДата());
	Запрос.УстановитьПараметр("МестоВыкладки"	, МестоВыкладки);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВыкладкаПланограммы.Номенклатура
	|ИЗ
	|	РегистрСведений.ВыкладкаПланограммы КАК ВыкладкаПланограммы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(
	|				&ДатаТек,
	|				ТорговаяТочка = &ТорговаяТочка
	|					И Выведена = ЛОЖЬ) КАК ТоварныйАссортиментТочекСрезПоследних
	|		ПО ВыкладкаПланограммы.Номенклатура = ТоварныйАссортиментТочекСрезПоследних.Номенклатура
	|ГДЕ
	|	(ВыкладкаПланограммы.Планограмма = &Планограмма
	|			ИЛИ &Планограмма = ЗНАЧЕНИЕ(Справочник.Планограммы.ПустаяСсылка))
	|	И ВыкладкаПланограммы.МестоВыкладки = &МестоВыкладки
	|	И ВыкладкаПланограммы.Номенклатура В
	|			(ВЫБРАТЬ
	|				ТоварныйАссортиментТочекСрезПоследних.Номенклатура
	|			ИЗ
	|				РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(&РабочаяДата, ТорговаяТочка = &ТорговаяТочка
	|					ИЛИ &ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)) КАК ТоварныйАссортиментТочекСрезПоследних
	|			ГДЕ
	|				ТоварныйАссортиментТочекСрезПоследних.Выведена = ЛОЖЬ)
	|	И ВыкладкаПланограммы.Номенклатура В
	|			(ВЫБРАТЬ
	|				ЦеныНоменклатурыСрезПоследних.Номенклатура
	|			ИЗ
	|				РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&РабочаяДата, ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|					И ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.ОсновнойТипЦенПродаж)) КАК ЦеныНоменклатурыСрезПоследних)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВыкладкаПланограммы.Номенклатура.Наименование";
				   
	МассивТовары = Новый Массив();
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаТаб = ТабДанные.Добавить();
		СтрокаТаб.Номенклатура = Выборка.Номенклатура;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПоМестуВыкладку(Команда)
	
	МестоВыкладки = ПредопределенноеЗначение("Справочник.МестаВыкладки.ПустаяСсылка");
	Если ВвестиЗначение(МестоВыкладки, "Выберите место выкладки") Тогда
		ЗаполнитьПоВыкладке(МестоВыкладки);
		ЗаполнитьДанныеПоТоварам();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеНаСервере()
	
	Набор = РегистрыСведений.КонтрольПросрочкиВМагазинах.СоздатьНаборЗаписей();
	Набор.Отбор.Магазин.Установить(ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	Для Каждого СтрокаТаб Из ТабДанные Цикл
		Движение = Набор.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, СтрокаТаб);
		Движение.Магазин = ПараметрыСеанса.ТорговаяТочкаПоАйпи;
	КонецЦикла;	
	Набор.Записать();
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаписатьДанные(Команда)
	
	ЗаписатьДанныеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабДанныеДатаПроизводстваПриИзменении(Элемент)
	
	ЗаполнитьДанныеПоТоварам(Элементы.ТабДанные.ТекущиеДанные.Номенклатура);
	
КонецПроцедуры

Функция ПечатьНаСервере()
	
	ТабДокумент = Новый ТабличныйДокумент();
	Макет = Обработки.РабочийСтолПродавца.ПолучитьМакет("ПечатьТаблицы");
	Область = Макет.ПолучитьОбласть("Шапка");
	ТабДокумент.Вывести(Область);
	Для Каждого СтрокаТаб Из ТабДанные Цикл
		Область = Макет.ПолучитьОбласть("Строка");
		ЗаполнитьЗначенияСвойств(Область.Параметры, СтрокаТаб);
		ТабДокумент.Вывести(Область);
	КонецЦикла;	
	Возврат ТабДокумент;
	
КонецФункции	

&НаКлиенте
Процедура Печать(Команда)
	
	ТабДок = ПечатьНаСервере();
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьНоменклатуруПоЧастиТекста(Текст)
	
    ПараметрыПодбора    =    Новый Структура("ДополнительныеПараметры, ТекстПоиска", "ПодборДляМагазина", Текст);
    Возврат ПолучитьДанныеВыбора(Тип("СправочникСсылка.Номенклатура"), ПараметрыПодбора);
	
КонецФункции

&НаКлиенте
Процедура ТабДанныеНоменклатураАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = ПолучитьНоменклатуруПоЧастиТекста(Текст);
	
КонецПроцедуры

&НаКлиенте
Функция ОбработатьВыборНоменклатуры()
	
	ТекДанные = Элементы.ТабДанные.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекДанные.Номенклатура) Тогда
		СтрокиТаб = ТабДанные.НайтиСтроки(Новый Структура("Номенклатура", ТекДанные.Номенклатура));
		Если СтрокиТаб.Количество() > 1 Тогда
			Ответ = Вопрос("Уже есть строка с данной номенклатурой. Показать?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат Истина;
			Иначе
				ТабДанные.Удалить(Элементы.ТабДанные.ТекущиеДанные);
				СтрокиТаб = ТабДанные.НайтиСтроки(Новый Структура("Номенклатура", ТекДанные.Номенклатура));
				Элементы.ТабДанные.ТекущаяСтрока = СтрокиТаб[0].ПолучитьИдентификатор();
				Элементы.ТабДанные.ВыделенныеСтроки.Добавить(СтрокиТаб[0]);
				Возврат Ложь;
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;	
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ТабДанныеНоменклатураОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ТекСтрТовары = Элементы.ТабДанные.ТекущиеДанные;
	ТекСтрТовары.Номенклатура = ВыбранноеЗначение;
	Если ОбработатьВыборНоменклатуры() Тогда
		ЗаполнитьДанныеПоТоварам(ВыбранноеЗначение);
	КонецЕсли;	
	
КонецПроцедуры
