
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	СписокКонтрагентов = СписокДокументов.ВыгрузитьКолонку("Контрагент");
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КонтактнаяИнформация.Объект,
	               |	КонтактнаяИнформация.Представление
	               |ИЗ
	               |	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |ГДЕ
	               |	КонтактнаяИнформация.Объект В(&СписокПолучатетлей)
	               |	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)";
				   
				   
	Запрос.УстановитьПараметр("СписокПолучатетлей",СписокКонтрагентов);
	
	СписокАдресов = Запрос.Выполнить().Выгрузить();
	
	Для каждого Строка Из СписокДокументов Цикл
		
		адрес = СписокАдресов.Найти(Строка.Контрагент);
		
		Если Адрес <> Неопределено Тогда
			Строка.Почта = Адрес.Представление;
			Строка.Котправке = Истина;
		КонецЕсли; 
		
	КонецЦикла; 

	Отправлено = 0;
	
КонецПроцедуры

Функция ПодготовитьТаблицуРасчетныеДокументы(ДокументОплаты)
	
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	-ЕСТЬNULL(СУММА(ФинансовыйОстатки.СуммаОстаток), 0) КАК СуммаОстаток
		|ИЗ
		//+++АК POZM 2018.05.15 ИП-00018601 
		//|	РегистрБухгалтерии.Финансовый.Остатки(&КонецПериода, Счет = &СчетРасчетов, , Субконто2 = &Контрагент) КАК ФинансовыйОстатки
		|	РегистрБухгалтерии.Финансовый.Остатки(&КонецПериода, Счет = &СчетРасчетов, , Субконто1 = &Организация И Субконто2 = &Контрагент) КАК ФинансовыйОстатки
		//---АК POZM 
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕстьNULL(ФинансовыйОбороты.СуммаОборотКт,0) КАК Закупка,
		|	ФинансовыйОбороты.ПериодМесяц КАК ПериодМесяц
		|ИЗ
		//+++АК POZM 2018.05.15 ИП-00018601 
		//|	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, Авто, Счет = &СчетРасчетов, , Субконто2 = &Контрагент, , ) КАК ФинансовыйОбороты
		|	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, Авто, Счет = &СчетРасчетов, , Субконто1 = &Организация И Субконто2 = &Контрагент, , ) КАК ФинансовыйОбороты
		//---АК POZM 
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПериодМесяц УБЫВ";
		
	НачальнаяДата = ДокументОплаты.Дата - 365*24*3600;	
	Запрос.УстановитьПараметр("НачалоПериода", НачальнаяДата);	
	Запрос.УстановитьПараметр("КонецПериода", ДокументОплаты.Дата);
	Запрос.УстановитьПараметр("Контрагент", ДокументОплаты.Контрагент);
	//+++АК POZM 2018.05.15 ИП-00018601 
	Запрос.УстановитьПараметр("Организация", ДокументОплаты.Организация);
	//---АК POZM 
	Запрос.УстановитьПараметр("СчетРасчетов", ДокументОплаты.СчетУчетаРасчетовСКонтрагентом);
	//+++АК POZM 2018.04.23 ИП-00018101.02 
	Если ДокументОплаты.СчетУчетаРасчетовСКонтрагентом.Код = "76.5" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Субконто2 = &Контрагент","Субконто2 = &Контрагент И Субконто3 = &Договор ");
		Запрос.УстановитьПараметр("Договор", ДокументОплаты.ДоговорКонтрагента);
	КонецЕсли;	
	//---АК POZM 

	Результат = Запрос.ВыполнитьПакет();

	ВсегоСуммаДолга = Результат[0].Выгрузить().Итог("СуммаОстаток");
	
	ЗакупкиПоМесяцам = Результат[1].Выбрать();
	
	ОстатокОборот = ВсегоСуммаДолга;
	
	Пока ЗакупкиПоМесяцам.Следующий() Цикл
		
		Если ОстатокОборот <= ЗакупкиПоМесяцам.Закупка Тогда	
			НачальнаяДата = ЗакупкиПоМесяцам.ПериодМесяц;
			Прервать;
		Иначе 
			ОстатокОборот = ОстатокОборот - ЗакупкиПоМесяцам.Закупка
		КонецЕсли;
		
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФинансовыйОбороты.ПериодСекунда КАК Дата,
		|	ФинансовыйОбороты.Регистратор,
		|	-ФинансовыйОбороты.СуммаОборот КАК СуммаДокумента,
		|	0 КАК СуммаДолга,
		|	ИСТИНА КАК УдалитьСтроку,
		|	0 КАК КОплате
		|ИЗ
		//|	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, Авто, Счет = &СчетРасчетов, , Субконто2 = &Контрагент, , ) КАК ФинансовыйОбороты
		//+++АК POZM 2018.05.15 ИП-00018601 
		|	РегистрБухгалтерии.Финансовый.Обороты(&НачалоПериода, &КонецПериода, Авто, Счет = &СчетРасчетов, , Субконто1 = &Организация И Субконто2 = &Контрагент, , ) КАК ФинансовыйОбороты
		//---АК POZM 
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФинансовыйОбороты.ПериодСекунда УБЫВ";
		
	Запрос.УстановитьПараметр("НачалоПериода", НачальнаяДата);
	Запрос.УстановитьПараметр("КонецПериода", ДокументОплаты.Дата);
	Запрос.УстановитьПараметр("Контрагент", ДокументОплаты.Контрагент);
	//+++АК POZM 2018.05.15 ИП-00018601 
	Запрос.УстановитьПараметр("Организация", ДокументОплаты.Организация);
	//---АК POZM 
	Запрос.УстановитьПараметр("СчетРасчетов", ДокументОплаты.СчетУчетаРасчетовСКонтрагентом);

	//+++АК POZM 2018.04.23 ИП-00018101.02 
	Если ДокументОплаты.СчетУчетаРасчетовСКонтрагентом.Код = "76.5" Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"Субконто2 = &Контрагент","Субконто2 = &Контрагент И Субконто3 = &Договор ");
		Запрос.УстановитьПараметр("Договор", ДокументОплаты.ДоговорКонтрагента);
	КонецЕсли;	
	//---АК POZM 
	
	ТаблицаДокументов = Запрос.Выполнить().Выгрузить();
    ВсегоДокументов = ТаблицаДокументов.Количество();
	
	Если ВсегоСуммаДолга <= 0 ИЛИ ВсегоДокументов = 0 Тогда
		Результат = Новый структура;
		Результат.Вставить("ДокументыОплаты",Неопределено);
		Результат.Вставить("СписокВозвратов",Новый СписокЗначений);

		Возврат Результат;
	КонецЕсли;	
	
	НомерСтроки =0;
	
	Пока ВсегоСуммаДолга > 0 Цикл
		
		Если  НомерСтроки > (ВсегоДокументов -1) Тогда
			Прервать;
		КонецЕсли;	
		
		Если ТаблицаДокументов[НомерСтроки].СуммаДокумента > 0 Тогда
			
			Если ВсегоСуммаДолга > ТаблицаДокументов[НомерСтроки].СуммаДокумента Тогда 
				ТаблицаДокументов[НомерСтроки].СуммаДолга = ТаблицаДокументов[НомерСтроки].СуммаДокумента;
				ВсегоСуммаДолга = ВсегоСуммаДолга - ТаблицаДокументов[НомерСтроки].СуммаДокумента;
			Иначе	
			    ТаблицаДокументов[НомерСтроки].СуммаДолга = ВсегоСуммаДолга;
				ВсегоСуммаДолга = 0;
			КонецЕсли;	
			
		КонецЕсли;	
		
		ТаблицаДокументов[НомерСтроки].УдалитьСтроку = Ложь;
		НомерСтроки = НомерСтроки  + 1;	
		
	КонецЦикла;	
		
	СписокВозвратов = Новый СписокЗначений;
	
	ОтборТаблицы = новый Структура;
	ОтборТаблицы.Вставить("УдалитьСтроку",Ложь); 	
	
	ТаблицаСОтбором = ТаблицаДокументов.Скопировать(ОтборТаблицы);
	ТаблицаСОтбором.Сортировать("Дата Возр");
	
	СуммаОплатыИтого = ДокументОплаты.СуммаДокумента;
	
	Для каждого строка из ТаблицаСОтбором Цикл
		
		Если строка.СуммаДокумента < 0 Тогда
			
			Если ТипЗнч(строка.Регистратор) = Тип("ДокументСсылка.ВозвратТоваровПоставщику") тогда
				Если СуммаОплатыИтого > 0 тогда
					СписокВозвратов.Добавить(строка.Регистратор);
				КонецЕсли;	
			КонецЕсли;
			строка.УдалитьСтроку = Истина;
			
		Иначе	

			Если СуммаОплатыИтого > 0 тогда
				
				Если СуммаОплатыИтого > строка.СуммаДолга Тогда	
					строка.Коплате =  строка.СуммаДолга;	
				    СуммаОплатыИтого = СуммаОплатыИтого - строка.СуммаДолга;
				Иначе
					строка.Коплате =  СуммаОплатыИтого;	
				    СуммаОплатыИтого = 0;
				КонецЕсли;
			Иначе	
				строка.УдалитьСтроку = Истина;	
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;	
	
	Результат = Новый структура;
	Результат.Вставить("ДокументыОплаты",ТаблицаСОтбором.Скопировать(ОтборТаблицы));
	Результат.Вставить("СписокВозвратов",СписокВозвратов);
	
	Возврат Результат;
	
КонецФункции	

Функция ПодготовитьТаблицуРасчетныеДокументыСтар(ДокументОплаты)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	-ЕСТЬNULL(СУММА(ФинансовыйОстатки.СуммаОстаток), 0) КАК СуммаОстаток
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.Остатки(&КонецПериода, Счет = &СчетРасчетов, , Субконто2 = &Контрагент) КАК ФинансовыйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ФинансовыйОбороты.ПериодСекунда КАК Дата,
		|	ФинансовыйОбороты.Регистратор,
		|	-ФинансовыйОбороты.СуммаОборот КАК СуммаДокумента,
		|	0 КАК СуммаДолга,
		|	ИСТИНА КАК УдалитьСтроку,
		|	0 КАК КОплате
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.Обороты(, &КонецПериода, Авто, Счет = &СчетРасчетов, , Субконто2 = &Контрагент, , ) КАК ФинансовыйОбороты
		|ГДЕ
		|	ФинансовыйОбороты.СуммаОборот < 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФинансовыйОбороты.ПериодСекунда УБЫВ";

	Запрос.УстановитьПараметр("КонецПериода", ДокументОплаты.Дата);
	Запрос.УстановитьПараметр("Контрагент", ДокументОплаты.Контрагент);
	Запрос.УстановитьПараметр("СчетРасчетов", ДокументОплаты.СчетУчетаРасчетовСКонтрагентом);

	Результат = Запрос.ВыполнитьПакет();

	ВсегоСуммаДолга = Результат[0].Выгрузить().Итог("СуммаОстаток");
	
	ТаблицаДокументов = Результат[1].Выгрузить();

	Если ВсегоСуммаДолга <= 0 ИЛИ ТаблицаДокументов.Количество() =0 Тогда
		Возврат Неопределено;
	КонецЕсли;	
	
	НомерСтроки =0;
	
	Пока ВсегоСуммаДолга > 0 Цикл
		
		Если ВсегоСуммаДолга > ТаблицаДокументов[НомерСтроки].СуммаДокумента Тогда 
			ТаблицаДокументов[НомерСтроки].СуммаДолга = ТаблицаДокументов[НомерСтроки].СуммаДокумента;
			ВсегоСуммаДолга = ВсегоСуммаДолга - ТаблицаДокументов[НомерСтроки].СуммаДокумента;
			ТаблицаДокументов[НомерСтроки].УдалитьСтроку = Ложь;
		Иначе	
		    ТаблицаДокументов[НомерСтроки].СуммаДолга = ВсегоСуммаДолга;
			ВсегоСуммаДолга = 0;
			ТаблицаДокументов[НомерСтроки].УдалитьСтроку = Ложь;
		КонецЕсли;	
			
		НомерСтроки = НомерСтроки  + 1;	
		
	КонецЦикла;	
		
	ОтборТаблицы = новый Структура;
	ОтборТаблицы.Вставить("УдалитьСтроку",Ложь); 	
	
	ТаблицаСОтбором = ТаблицаДокументов.Скопировать(ОтборТаблицы);
	ТаблицаСОтбором.Сортировать("Дата Возр");
	
	СуммаОплатыИтого = ДокументОплаты.СуммаДокумента;
	
	Для каждого строка из ТаблицаСОтбором Цикл
		
		Если СуммаОплатыИтого > 0 тогда
			
			Если СуммаОплатыИтого > строка.СуммаДолга Тогда	
				строка.Коплате =  строка.СуммаДолга;	
			    СуммаОплатыИтого = СуммаОплатыИтого - строка.СуммаДолга;
			Иначе
				строка.Коплате =  СуммаОплатыИтого;	
			    СуммаОплатыИтого = 0;
			КонецЕсли;
		Иначе	
			строка.УдалитьСтроку = Истина;	
			
		КонецЕсли;
		
	КонецЦикла;	
	
	Результат =  ТаблицаСОтбором.Скопировать(ОтборТаблицы);
	
	Возврат Результат;
	
КонецФункции	

Процедура ВыполнитьРассылкуНажатие(Элемент)
	
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	
	Почта = Новый ИнтернетПочта;
	Почта.Подключиться(Профиль);
	ЭлементыФормы.ИндикаторОтправлено.Значение = 0;
	ОтправленоПисем = 0;
	ВсегоКОтправке = 0;
	Для каждого получатель Из СписокДокументов Цикл
		Если Получатель.Котправке и ЗначениеЗаполнено(Получатель.Почта) Тогда
			ВсегоКОтправке = ВсегоКОтправке + 1;
		КонецЕсли;
	КонецЦикла;
	
	ЭлементыФормы.ИндикаторОтправлено.МаксимальноеЗначение = ВсегоКОтправке;
	
	Для каждого получатель Из СписокДокументов Цикл
		
	    РасчетныеДокументы = ПодготовитьТаблицуРасчетныеДокументы(получатель.Ссылка);
		ТаблицаРасшифровка = РасчетныеДокументы.ДокументыОплаты;
		ТаблицаВозврат     = РасчетныеДокументы.СписокВозвратов;
		
		Если Получатель.Котправке и ЗначениеЗаполнено(Получатель.Почта) Тогда
			Тема = Получатель.Организация.Наименование+". Оплачен товар (" +Получатель.Контрагент.НаименованиеПолное+ ")";
			ПлатёжЗаКонтрагента = "";
			Если ТаблицаРасшифровка <> неопределено И ТаблицаРасшифровка.Количество()>0 Тогда
				ПерваяСтрока = ТаблицаРасшифровка[0];
				Если ТипЗнч(ПерваяСтрока.Регистратор) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") И ПерваяСтрока.Регистратор.Контрагент <> Получатель.Контрагент Тогда
					ПлатёжЗаКонтрагента = " за " + ПерваяСтрока.Регистратор.Контрагент + ", ИНН " + ПерваяСтрока.Регистратор.Контрагент.ИНН;
				КонецЕсли;	
			КонецЕсли;	
			Текст = Символы.ПС + Получатель.Организация.НаименованиеПолное+ " сегодня осуществил платеж на сумму: " 
				+ Формат(Получатель.Сумма, "ЧЦ=15; ЧДЦ=2")
				+ ПлатёжЗаКонтрагента
				+ символы.ПС+
				" на следующие реквизиты: " + символы.ПС+
				"  Получатель: " + Получатель.Контрагент.НаименованиеПолное + Символы.ПС +
				"     ИНН/КПП: " + Получатель.Контрагент.ИНН +  
					?(ЗначениеЗаполнено(Получатель.Контрагент.КПП),"/" + Получатель.Контрагент.КПП, "") + символы.ПС +
				"     рас.сч.: " + Получатель.Счет.НомерСчета + символы.пс + 
				"       Банк : " + Получатель.Счет.Банк.Наименование + Символы.ПС +
				"        БИК : " + Получатель.Счет.Банк.Код + Символы.ПС + 
				"    кор.сч. : " + Получатель.Счет.Банк.КоррСчет + Символы.ПС ;
				
			Если ТаблицаРасшифровка <> неопределено Тогда
					
				Текст = Текст + Символы.ПС;
			
				Для каждого строка из ТаблицаРасшифровка Цикл
					
					Если ТипЗнч(строка.Регистратор) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
						Текст = Текст + "Поступление № " + строка.Регистратор.НомерВходящегоДокумента + " от " + Формат(строка.Регистратор.ДатаВходящегоДокумента,"ДФ=dd.MM.yy");	
					Иначе                                                                                        
						Текст = Текст + строка.регистратор;
					КонецЕсли;
					
					Текст = Текст + "  сумма: " + строка.КОплате + Символы.ПС;  
										
				КонецЦикла;	
				
			КонецЕсли;	
			
			Если ТаблицаВозврат.Количество() > 0 Тогда
				
				Текст = Текст + Символы.ПС;
				Текст = Текст + "Документы возвратов, учтенные во взаиморасчетах:" + Символы.ПС;
							
				Для каждого строка из ТаблицаВозврат Цикл
					Текст = Текст + "Возврат №" + строка.Значение.Номер + " от " + Формат(строка.Значение.Дата,"ДФ=dd.MM.yy");;
					Текст = Текст + "  сумма: " + строка.Значение.СуммаДокумента + Символы.ПС;					
				КонецЦикла;	
				
			КонецЕсли;	
			
			ОтправитьПисьмо(УчетнаяЗапись, Почта, Получатель.Почта, Тема, Текст);
			ОтправленоПисем = ОтправленоПисем+1;
			ЭлементыФормы.ИндикаторОтправлено.Значение = ОтправленоПисем; 
			Получатель.отправлено = Истина;
		
		КонецЕсли; 
	КонецЦикла; 
	
	Почта.Отключиться();
	Сообщить("Всего отправлено писем - "+ОтправленоПисем);

КонецПроцедуры

Процедура ОтправитьПисьмо(УчетнаяЗапись, Почта, АдресПолучателя, Тема, ТекстПисьма)
	
//	АдресПолучателя = "";
	
	СпАдресов=Новый СписокЗначений;
	МассивАдресов=Справочники.Контрагенты.РазложитьСтрокуВМассивПодстрок(АдресПолучателя,";");	
	Для каждого Эл Из МассивАдресов Цикл
		Если ЗначениеЗаполнено(Эл) Тогда
			СпАдресов.Добавить(Сокрлп(Эл));
		КонецЕсли; 
	КонецЦикла; 
	
	Письмо = Новый ИнтернетПочтовоеСообщение;
	
	Письмо.ИмяОтправителя  = ""+СокрЛП(УчетнаяЗапись)+"";
	Письмо.Отправитель     = ""+СокрЛП(УчетнаяЗапись)+"";
	
	Письмо.Тексты.Добавить(ТекстПисьма,ТипТекстаПочтовогоСообщения.ПростойТекст);
	
	Письмо.Тема=Тема;
	
	Для каждого Адрес Из СпАдресов Цикл
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = Адрес.Значение;
	КонецЦикла;	
	
	Почта.Послать(Письмо);
	
КонецПроцедуры

Процедура ПриОткрытии()
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура СписокДокументовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.Отправлено тогда
		ОформлениеСтроки.ЦветФона= WebЦвета.БледноЗеленый;
	КонецЕсли;	
	//Если ДанныеСтроки.Ссылка.Комплектация.Количество()>0 Тогда
	//	ДатаАкта=ДанныеСтроки.Ссылка.Комплектация[0].АктПодписан;
	//	ПлановыйСрок=ДанныеСтроки.Ссылка.Комплектация[0].ПлановыйСрокНачалаМонтажа;
	//	Если ЗначениеЗаполнено(ДатаАкта) Тогда
	//		ОформлениеСтроки.Ячейки.ДатаАкта.УстановитьТекст(ДатаАкта);
	//	КонецЕсли;	
	//	Если ЗначениеЗаполнено(ПлановыйСрок) Тогда
	//		ОформлениеСтроки.Ячейки.ПлановыйСрок.УстановитьТекст(ПлановыйСрок);
	//	КонецЕсли;	
	//	Если Не ЗначениеЗаполнено(ДатаАкта) Тогда
			//ОформлениеСтроки.ЦветФона= WebЦвета.БледноБирюзовый;
	//	ИначеЕсли Не ЗначениеЗаполнено(ПлановыйСрок) Тогда
	//		ОформлениеСтроки.ЦветФона= WebЦвета.БледноЗеленый;
	//	КонецЕсли;
	//Иначе
	//	ОформлениеСтроки.ЦветФона= WebЦвета.БледноЗолотистый;
	//КонецЕсли;	
КонецПроцедуры

Процедура ДействияФормыВыделитьВсе(Кнопка)
	
	Для Каждого строка из СписокДокументов Цикл		
		Строка.Котправке = Истина;	
	КонецЦикла;	
	
КонецПроцедуры

Процедура ДействияФормыСнятьВсе(Кнопка)
	
	Для Каждого строка из СписокДокументов Цикл		
		Строка.Котправке = Ложь;	
	КонецЦикла;	

КонецПроцедуры
 


