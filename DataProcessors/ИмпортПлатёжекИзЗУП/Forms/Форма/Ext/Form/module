Перем СтрокаПодключения;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	ИмпортПлатёжекИзЗуп();
	Предупреждение("Импорт завершен!");
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ИмпортНДФЛПриИзменении(Элемент)
	ЭлементыФормы.ЗаполнятьДатуИНомерВДокументахЗУП.Видимость=ИмпортНДФЛ;
	
	//+++АК sole 2018.08.21 ИП-00019600
	КорректировкаНачалаПериодаЕслиНеобходимо();
	//---АК sole 2018.08.21 ИП-00019600
	
КонецПроцедуры

Процедура ИмпортПлатёжекИзЗуп()
	
	СтрокаПодключения = ПолныеПрава.ПолучитьСтрокуПодключения_Зуп();
	v82COMОбъект = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Зуп() + ".COMConnector");
	Попытка
		v82 = v82COMОбъект.Connect(СтрокаПодключения);
		ПодключениеУстановлено = Истина;
	Исключение
		ПодключениеУстановлено = Ложь;
		Сообщить("Не удалось подключитьс к базе ЗУП");
		Возврат;
	КонецПопытки;
	
	УстановитьПривилегированныйРежим(Истина);
	Если ИмпортНДФЛ Тогда
		выборка=v82.Документы.ПеречислениеНДФЛвБюджет.Выбрать(НачПериода,КонецДня(КонПериода));
		Пока выборка.Следующий() Цикл
			Если не выборка.проведен Тогда
				продолжить;
			КонецЕсли;	
			Если Выборка.Организация.ИНН<>Организация.ИНН Тогда
				продолжить;
			КонецЕсли;	
			ТекстЗапроса="ВЫБРАТЬ
			|	РасходИзБанка.Ссылка
			|ИЗ
			|	Документ.РасходИзБанка КАК РасходИзБанка
			|ГДЕ
			|	РасходИзБанка.Комментарий ПОДОБНО &Комментарий";
			Запрос=Новый Запрос(ТекстЗапроса);			 
			Запрос.УстановитьПараметр("ОрганизацияИНН",Организация.ИНН);
			Запрос.УстановитьПараметр("Комментарий","Перенесен из ЗУП, на основании перечисления НДФЛ в бюджет "+выборка.номер+" от "+выборка.дата);
			выборкаД=запрос.Выполнить().Выбрать();
			Если выборкаД.Следующий() Тогда
				ДокПП=выборкаД.ссылка.ПолучитьОбъект();
			Иначе	
				ДокПП=Документы.РасходИзБанка.СоздатьДокумент();
			КонецЕсли;	
			ДокПП.Дата=Выборка.ДатаПлатежа;
			ДокПП.ВалютаДокумента=Справочники.Валюты.НайтиПоКоду("643");
			ДокПП.ВидОперации=Перечисления.ВидыОперацийППИсходящее.ПеречислениеНалога;
			ДокПП.ВидПеречисленияВБюджет=Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж;
			ДокПП.ПеречислениеВБюджет=истина;
			
			ДокПП.ВидПлатежа="Электронно";
			ДокПП.СтатьяДвиженияДенежныхСредств=Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("120520");
			
			ДокПП.ОчередностьПлатежа=5;
			ДокПП.СтатусСоставителя="02";
			ДокПП.КодБК="18210102010011000110";
			ДокПП.ВидПлатежаВГосБюджет=Перечисления.ВидыПлатежейВГосБюджет.Налог;
			
			ОКТМОСКПП=выборка.ОКТМО_КПП;
			номпоз=Найти(ОКТМОСКПП,"/");
			ОКТМО=СокрЛП(Лев(ОКТМОСКПП,номпоз-1));
			КПП=СокрЛП(Прав(ОКТМОСКПП,СтрДлина(ОКТМОСКПП)-НомПоз));
			Организация=Справочники.Организации.НайтиПоРеквизиту("ИНН",Выборка.Организация.ИНН);
			//// найдём предыдущую платёжку на этот ОКТМО
			//ТекстЗапроса="ВЫБРАТЬ
			//			 |	РасходИзБанка.Ссылка
			//			 |ИЗ
			//			 |	Документ.РасходИзБанка КАК РасходИзБанка
			//			 |ГДЕ
			//			 |	РасходИзБанка.КодОКТМО = &КодОКТМО
			//			 |	И РасходИзБанка.Организация = &Организация
			//			 |	И РасходИзБанка.Проведен
			//			 |	И РасходИзБанка.КПППлательщика = &КПППлательщика
			//			 |	И РасходИзБанка.ВидОперации = &ВидОперации
			//			 |	И РасходИзБанка.ПеречислениеВБюджет
			//			 |	И РасходИзБанка.Дата < &Дата
			//			 |	И РасходИзБанка.СчетУчетаРасчетовСКонтрагентомБУ.Код = ""68.01""
			//			 |
			//			 |УПОРЯДОЧИТЬ ПО
			//			 |	РасходИзБанка.Дата УБЫВ";
			//Запрос=Новый Запрос(ТекстЗапроса);			 
			//Запрос.УстановитьПараметр("КодОКТМО",ОКТМО);
			//Запрос.УстановитьПараметр("Организация",Организация);
			//Запрос.УстановитьПараметр("КПППлательщика",КПП);
			//Запрос.УстановитьПараметр("ВидОперации",Перечисления.ВидыОперацийППИсходящее.ПеречислениеНалога);
			//Запрос.УстановитьПараметр("Дата",НачалоДня(выборка.дата));
			//рез=запрос.Выполнить().Выбрать();
			//Если рез.Следующий() Тогда
			//	НашлиДок=рез.Ссылка;
			//	//нашлиДок.ПолучитьФорму().Открыть();
			//	ЗаполнитьЗначенияСвойств(ДокПП,нашлиДок,,"Номер,дата,комментарий,НомерВходящегоДокумента,ДатаОплаты,Ответственный");
			//КонецЕсли;
			ДокПП.Организация=Организация;
			ДокПП.СчетОрганизации=Организация.ОсновнойБанковскийСчет;
			ДокПП.ВидОперации=Перечисления.ВидыОперацийППИсходящее.ПеречислениеНалога;
			//ДокПП.КПППлательщика=КПП;
			ДокПП.КодОКТМО=ОКТМО;
			ДокПП.Контрагент=НайтиИФНС_По_КПП(КПП);
			
			ДокПП.ИННПлательщика=ДокПП.Организация.ИНН;
			ДокПП.КПППлательщика = КПП;
			ДокПП.ИННПолучателя = ДокПП.Контрагент.ИНН;
			ДокПП.КПППолучателя = ДокПП.Контрагент.КПП;
			
			ДокПП.ТекстПлательщика=ДокПП.Организация.НаименованиеПлательщикаПриПеречисленииНалогов;
			ДокПП.ТекстПолучателя=ДокПП.Контрагент.НаименованиеПолное;
			
			ДокПП.СчетКонтрагента=ДокПП.Контрагент.ОсновнойБанковскийСчет;
			ДокПП.ДатаОплаты=ДокПП.Дата;
			ДокПП.Оплачено=ложь;
			ДокПП.СуммаДокумента=выборка.Сумма;
			ДокПП.ПоказательПериода="МС."+Формат(выборка.МесяцНалоговогоПериода,"ДФ=ММ.yyyy");
			ДокПП.СчетУчетаРасчетовСКонтрагентом=ПланыСчетов.Финансовый.НайтиПоКоду("68.1");
			ДокПП.СубконтоДт1=ДокПП.Организация;
			ДокПП.СубконтоДт2=Справочники.ВидыНалогов.НайтиПоКоду("000000010");
			ДокПП.СчетБанк=ПланыСчетов.Хозрасчетный.НайтиПоКоду("51");
			ДокПП.СчетУчетаРасчетовСКонтрагентомБУ=ПланыСчетов.Хозрасчетный.НайтиПоКоду("68.01");
			ДокПП.СчетУчетаРасчетовПоАвансамБУ=ПланыСчетов.Хозрасчетный.НайтиПоКоду("68.01");
			ДокПП.НазначениеПлатежа="НДФЛ по ставке в п.1. ст. 224 НК, за "+Формат(выборка.МесяцНалоговогоПериода,"ДФ='ММММ yyyy'")+"г. Сумма "+Формат(ДОКПП.СуммаДокумента,"ЧДЦ=2; ЧРД=-; ЧГ=0");
			ДокПП.Комментарий="Перенесен из ЗУП, на основании перечисления НДФЛ в бюджет "+выборка.номер+" от "+выборка.дата;
			ДокПП.СтатьяДвиженияДенежныхСредствБУ=ОбщегоНазначенияСервер.ПолучитьСтатьюДДС_БУ(ДокПП.СтатьяДвиженияДенежныхСредств,ДокПП.ВидОперации);
			ДокПП.Записать(режимЗаписиДокумента.Запись);
			ДокПП.Записать(режимЗаписиДокумента.ОтменаПроведения);
			//Если ОткрыватьСформированныеДокументы Тогда
			//	ДокПП.ПолучитьФорму().Открыть();
			//КонецЕсли;
			Если ЗаполнятьДатуИНомерВДокументахЗУП Тогда
				ДокЗуп=выборка.ПолучитьОбъект();
				ДокЗУП.ПлатежноеПоручениеНомер=ДокПП.Номер;
				ДокЗУП.ПлатежноеПоручениеДата=ДокПП.Дата;
				ДокЗуп.Записать(v82.режимЗаписидокумента.Проведение);
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;
	
	Если ИмпортЗП Тогда
		выборка=v82.Документы.ЗарплатаКВыплатеОрганизаций.Выбрать(НачПериода,КонецДня(КонПериода));
		Пока выборка.Следующий() Цикл
			Если не выборка.проведен Тогда
				продолжить;
			КонецЕсли;	
			
			Если Выборка.Организация.ИНН<>Организация.ИНН Тогда
				продолжить;
			КонецЕсли;	
			
			Й=0;
			Пока й<Выборка.Зарплата.Количество() Цикл
				Стр=Выборка.Зарплата.Получить(й);
				Сумма=Стр.Сумма;
				ФизЛицо=Справочники.ФизическиеЛица.НайтиПоНаименованию(СокрЛП(Стр.ФизЛицо.Наименование));
				Если Физлицо.Пустая() Тогда
					Сообщить("Физ лицо "+Стр.ФизЛицо.Наименование+" - не найден в базе! Сумма документа "+Сумма);
				КонецЕсли;
				й=й+1;
				
				ТекстЗапроса="ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	РасходИзБанка.Ссылка
				|ИЗ
				|	Документ.РасходИзБанка КАК РасходИзБанка
				|ГДЕ
				|	РасходИзБанка.Комментарий ПОДОБНО &Комментарий
				|	И РасходИзБанка.ВидОперации = &ВидОперации";
				Запрос=Новый Запрос(ТекстЗапроса);			 
				Запрос.УстановитьПараметр("Комментарий","Перенесен из ЗУП, на основании ведомости "+выборка.номер+" от "+выборка.дата+" строка "+(й+1)+" - "+Стр.ФизЛицо.Наименование);
				Запрос.УстановитьПараметр("ВидОперации",перечисления.ВидыОперацийППИсходящее.ПеречислениеЗП);
				выборкаД=запрос.Выполнить().Выбрать();
				Если выборкаД.Следующий() Тогда
					ДокПП=выборкаД.ссылка.ПолучитьОбъект();
				Иначе	
					ДокПП=Документы.РасходИзБанка.СоздатьДокумент();
				КонецЕсли;	
				ДокПП.Дата=Выборка.Дата;
				Организация=Справочники.Организации.НайтиПоРеквизиту("ИНН",Выборка.Организация.ИНН);
				// найдём предыдущую платёжку на этого физлица
				ТекстЗапроса="ВЫБРАТЬ РАЗРЕШЕННЫЕ
				|	РасходИзБанка.Ссылка
				|ИЗ
				|	Документ.РасходИзБанка КАК РасходИзБанка
				|ГДЕ
				|	РасходИзБанка.Контрагент = &ФИзЛицо
				|	И РасходИзБанка.Организация = &Организация
				|	И РасходИзБанка.Проведен
				|	И РасходИзБанка.ВидОперации = &ВидОперации
				|	И РасходИзБанка.Дата < &Дата
				|	И РасходИзБанка.СчетУчетаРасчетовСКонтрагентомБУ.Код = ""70""
				|
				|УПОРЯДОЧИТЬ ПО
				|	РасходИзБанка.Дата УБЫВ";
				Запрос=Новый Запрос(ТекстЗапроса);			 
				Запрос.УстановитьПараметр("ФИзЛицо",ФизЛицо);
				Запрос.УстановитьПараметр("Организация",Организация);
				Запрос.УстановитьПараметр("ВидОперации",Перечисления.ВидыОперацийППИсходящее.ПеречислениеЗП);
				Запрос.УстановитьПараметр("Дата",НачалоДня(выборка.дата));
				рез=запрос.Выполнить().Выбрать();
				Если рез.Следующий() Тогда
					НашлиДок=рез.Ссылка;
					//нашлиДок.ПолучитьФорму().Открыть();
					ЗаполнитьЗначенияСвойств(ДокПП,нашлиДок,,"Номер,дата,комментарий,НомерВходящегоДокумента,ДатаОплаты,Ответственный");
				КонецЕсли;
				ДокПП.Организация=Организация;
				ДокПП.ВалютаДокумента=Справочники.Валюты.НайтиПоКоду("643");
				ДокПП.ВидОперации=Перечисления.ВидыОперацийППИсходящее.ПеречислениеЗП;
				ДокПП.ДатаОплаты=ДокПП.Дата;
				ДокПП.Контрагент=ФизЛицо;
				ДокПП.ФизЛицо=ФизЛицо;
				ДокПП.Оплачено=ложь;
				ДокПП.СуммаДокумента=Сумма;
				ДокПП.СчетУчетаРасчетовСКонтрагентомБУ=ПланыСчетов.Хозрасчетный.НайтиПоКоду("70");
				ДокПП.СчетУчетаРасчетовПоАвансамБУ=ПланыСчетов.Хозрасчетный.НайтиПоКоду("70");
				ДокПП.НазначениеПлатежа=НазначениеПлатежа+" Сумма "+Формат(Сумма,"ЧДЦ=2; ЧРД=-; ЧГ=0");
				ДокПП.СчетКонтрагента=ПолучитьСчетДляФизлица(ДокПП.Контрагент);
				ДокПП.Комментарий="Перенесен из ЗУП, на основании ведомости "+выборка.номер+" от "+выборка.дата+" строка "+(й+1)+" - "+Стр.ФизЛицо.Наименование;
				//УстановитьПривилегированныйРежим(истина);
				
				//+++susk
				//ИП-00016526
				Если Выборка.ДокументОснование <> Неопределено Тогда
					
					НайдСтрФизЛицо = Выборка.ДокументОснование.ДополнительныеНачисления.Найти(Стр.ФизЛицо, "ФизЛицо");
									
					Если НайдСтрФизЛицо <> Неопределено Тогда
						
						КодВидРасч = СокрЛП(НайдСтрФизЛицо.ВидРасчета.Code);
						
						Если КодВидРасч = "00053" ИЛИ КодВидРасч = "00054" Тогда
							ДокПП.СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("139397");
							ДокПП.СтатьяДвиженияДенежныхСредствБУ = ДокПП.СтатьяДвиженияДенежныхСредств.СтатьяДДС_БУ;
							ДокПП.СчетУчетаРасчетовСКонтрагентомБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("73.03");
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				//---susk
				
				ДокПП.Записать(режимЗаписиДокумента.Запись);
				ДокПП.Записать(режимЗаписиДокумента.ОтменаПроведения);
				//Если ОткрыватьСформированныеДокументы Тогда
				//	ДокПП.ПолучитьФорму().Открыть();
				//КонецЕсли;
			КонецЦикла;	
		КонецЦикла;	
	КонецЕсли;
	
	Если ИмпортИЛ Тогда
		
		ТекстЗапроса="ВЫБРАТЬ
		             |	УдержаниеПоИсполнительнымЛистамФизическиеЛица.ФизЛицо,
		             |	МАКСИМУМ(УдержаниеПоИсполнительнымЛистамФизическиеЛица.Ссылка.Дата) КАК Дата
		             |ПОМЕСТИТЬ Максимумы
		             |ИЗ
		             |	Документ.УдержаниеПоИсполнительнымЛистам.ФизическиеЛица КАК УдержаниеПоИсполнительнымЛистамФизическиеЛица
		             |ГДЕ
		             |	УдержаниеПоИсполнительнымЛистамФизическиеЛица.Ссылка.Проведен
		             |
		             |СГРУППИРОВАТЬ ПО
		             |	УдержаниеПоИсполнительнымЛистамФизическиеЛица.ФизЛицо
		             |;
		             |
		             |////////////////////////////////////////////////////////////////////////////////
		             |ВЫБРАТЬ
		             |	УдержаниеПоИсполнительнымЛистамФизическиеЛица.Ссылка КАК ДокУдержания,
		             |	УдержаниеПоИсполнительнымЛистамФизическиеЛица.ФизЛицо
		             |ИЗ
		             |	Максимумы КАК Максимумы
		             |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УдержаниеПоИсполнительнымЛистам.ФизическиеЛица КАК УдержаниеПоИсполнительнымЛистамФизическиеЛица
		             |		ПО Максимумы.ФизЛицо = УдержаниеПоИсполнительнымЛистамФизическиеЛица.ФизЛицо
		             |			И Максимумы.Дата = УдержаниеПоИсполнительнымЛистамФизическиеЛица.Ссылка.Дата";
		Запрос=Новый Запрос(ТекстЗапроса);			 
		КэшУдержаний=Запрос.Выполнить().Выгрузить();
		
		ТекстЗапроса="ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК ПериодРегистрации
		|ПОМЕСТИТЬ Периоды
		|ИЗ
		|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
		|ГДЕ
		|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &НачалоПериода И &КонецПериода
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Удержания.Организация КАК Организация,
		|	Удержания.ПериодРегистрации КАК ПериодРегистрации,
		|	Удержания.Результат КАК Результат,
		|	Удержания.ПочтовыйСбор КАК Издержки,
		|	Сотрудники.Сотрудник КАК Сотрудник,
		|	ФактическийАдрес.Представление КАК ФактическийАдрес,
		|	Удержания.Размер КАК Размер,
		|	Удержания.ДокументОснование КАК ДокументОснование,
		|	Удержания.ПорядокРасчета КАК ПорядокРасчета,
		|	Удержания.Получатель КАК Получатель,
		|	Удержания.ДокументОснование.ВидИсполнительногоДокумента КАК ВидИсполнительногоДокумента,
		|	Удержания.ПроцентПочтовогоСбора КАК ПроцентПочтовогоСбора,
		|	Удержания.ВидИздержек КАК ВидИздержек
		|ПОМЕСТИТЬ ВТИсходная
		|ИЗ
		|	(ВЫБРАТЬ
		|		УдержанияРаботниковОрганизаций.ФизЛицо КАК ФизЛицо,
		|		СУММА(ВЫБОР
		|				КОГДА УдержанияРаботниковОрганизаций.ВидРасчета В (&ВидыРасчетаИздержкиПоИЛ)
		|					ТОГДА 0
		|				ИНАЧЕ УдержанияРаботниковОрганизаций.Результат
		|			КОНЕЦ) КАК Результат,
		|		СУММА(ВЫБОР
		|				КОГДА УдержанияРаботниковОрганизаций.ВидРасчета В (&ВидыРасчетаИздержкиПоИЛ)
		|					ТОГДА УдержанияРаботниковОрганизаций.Результат
		|				ИНАЧЕ 0
		|			КОНЕЦ) КАК ПочтовыйСбор,
		|		УдержанияРаботниковОрганизаций.Показатель1 КАК Размер,
		|		УдержанияРаботниковОрганизаций.ДокументОснование КАК ДокументОснование,
		|		ВЫБОР
		|			КОГДА УдержанияРаботниковОрганизаций.ВидРасчета В (&ВидыРасчетаИздержкиПоИЛ)
		|				ТОГДА ""% от удержанных сумм""
		|			КОГДА УдержанияРаботниковОрганизаций.ВидРасчета.ИдентификаторЭлемента = ""ИЛВПрожиточныхМинимумах""
		|				ТОГДА ""кратно прожиточному минимуму""
		|			КОГДА УдержанияРаботниковОрганизаций.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммой), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммойДоПредела))
		|				ТОГДА ""фиксированная сумма""
		|			ИНАЧЕ ""% заработка""
		|		КОНЕЦ КАК ПорядокРасчета,
		|		УдержанияРаботниковОрганизаций.ОбособленноеПодразделение КАК Организация,
		|		УдержанияРаботниковОрганизаций.ПериодРегистрации КАК ПериодРегистрации,
		|		ВЫБОР
		|			КОГДА УдержанияРаботниковОрганизаций.ВидРасчета В (&ВидыРасчетаИздержкиПоИЛ)
		|				ТОГДА УдержанияРаботниковОрганизаций.ВидРасчета
		|			ИНАЧЕ ВЫБОР
		|					КОГДА УдержанияРаботниковОрганизаций.ПорядокИсчисленияИздержек ССЫЛКА Справочник.ТарифыБанковНаДенежныеПереводы
		|						ТОГДА &БанковскиеИздержкиПоИЛ
		|					КОГДА УдержанияРаботниковОрганизаций.ПорядокИсчисленияИздержек ССЫЛКА Справочник.ТарифыПочтовогоСбора
		|							ИЛИ ТИПЗНАЧЕНИЯ(УдержанияРаботниковОрганизаций.ПорядокИсчисленияИздержек) = ТИП(ЧИСЛО)
		|						ТОГДА ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ПочтовыйСборПоИЛ)
		|					ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ПустаяСсылка)
		|				КОНЕЦ
		|		КОНЕЦ КАК ВидИздержек,
		|		ВЫБОР
		|			КОГДА УдержанияРаботниковОрганизаций.ВидРасчета В (&ВидыРасчетаИздержкиПоИЛ)
		|				ТОГДА УдержанияРаботниковОрганизаций.Получатель
		|			ИНАЧЕ УдержанияРаботниковОрганизаций.ДокументОснование.Получатель
		|		КОНЕЦ КАК Получатель,
		|		ВЫБОР
		|			КОГДА ТИПЗНАЧЕНИЯ(УдержанияРаботниковОрганизаций.ПорядокИсчисленияИздержек) = ТИП(ЧИСЛО)
		|				ТОГДА УдержанияРаботниковОрганизаций.ПорядокИсчисленияИздержек
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК ПроцентПочтовогоСбора
		|	ИЗ
		|		РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизаций
		|	ГДЕ
		|		УдержанияРаботниковОрганизаций.ВидРасчета В(&ВидыРасчетаПоИЛ)
		|		И УдержанияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &НачалоПериода И &КонецПериода
		|	{ГДЕ
		|		УдержанияРаботниковОрганизаций.ОбособленноеПодразделение.* КАК Организация,
		|		УдержанияРаботниковОрганизаций.ДокументОснование.*}
		|	
		|	СГРУППИРОВАТЬ ПО
		|		УдержанияРаботниковОрганизаций.ФизЛицо,
		|		УдержанияРаботниковОрганизаций.Показатель1,
		|		УдержанияРаботниковОрганизаций.ДокументОснование,
		|		УдержанияРаботниковОрганизаций.ПериодРегистрации,
		|		УдержанияРаботниковОрганизаций.ОбособленноеПодразделение,
		|		ВЫБОР
		|			КОГДА УдержанияРаботниковОрганизаций.ВидРасчета В (&ВидыРасчетаИздержкиПоИЛ)
		|				ТОГДА УдержанияРаботниковОрганизаций.Получатель
		|			ИНАЧЕ УдержанияРаботниковОрганизаций.ДокументОснование.Получатель
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ТИПЗНАЧЕНИЯ(УдержанияРаботниковОрганизаций.ПорядокИсчисленияИздержек) = ТИП(ЧИСЛО)
		|				ТОГДА УдержанияРаботниковОрганизаций.ПорядокИсчисленияИздержек
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА УдержанияРаботниковОрганизаций.ВидРасчета В (&ВидыРасчетаИздержкиПоИЛ)
		|				ТОГДА ""% от удержанных сумм""
		|			КОГДА УдержанияРаботниковОрганизаций.ВидРасчета.ИдентификаторЭлемента = ""ИЛВПрожиточныхМинимумах""
		|				ТОГДА ""кратно прожиточному минимуму""
		|			КОГДА УдержанияРаботниковОрганизаций.ВидРасчета В (ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммой), ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммойДоПредела))
		|				ТОГДА ""фиксированная сумма""
		|			ИНАЧЕ ""% заработка""
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА УдержанияРаботниковОрганизаций.ВидРасчета В (&ВидыРасчетаИздержкиПоИЛ)
		|				ТОГДА УдержанияРаботниковОрганизаций.ВидРасчета
		|			ИНАЧЕ ВЫБОР
		|					КОГДА УдержанияРаботниковОрганизаций.ПорядокИсчисленияИздержек ССЫЛКА Справочник.ТарифыБанковНаДенежныеПереводы
		|						ТОГДА &БанковскиеИздержкиПоИЛ
		|					КОГДА УдержанияРаботниковОрганизаций.ПорядокИсчисленияИздержек ССЫЛКА Справочник.ТарифыПочтовогоСбора
		|							ИЛИ ТИПЗНАЧЕНИЯ(УдержанияРаботниковОрганизаций.ПорядокИсчисленияИздержек) = ТИП(ЧИСЛО)
		|						ТОГДА ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ПочтовыйСборПоИЛ)
		|					ИНАЧЕ ЗНАЧЕНИЕ(ПланВидовРасчета.УдержанияОрганизаций.ПустаяСсылка)
		|				КОНЕЦ
		|		КОНЕЦ) КАК Удержания
		|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ФактическийАдрес
		|		ПО (ФактическийАдрес.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
		|			И Удержания.ДокументОснование.Получатель = ФактическийАдрес.Объект
		|			И (ФактическийАдрес.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресКонтрагента))}
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			МАКСИМУМ(СписокСотрудников.Сотрудник) КАК Сотрудник,
		|			СписокСотрудников.Физлицо КАК Физлицо,
		|			СписокСотрудников.ПериодРегистрации КАК ПериодРегистрации,
		|			СписокСотрудников.ГоловнаяОрганизация КАК ГоловнаяОрганизация
		|		ИЗ
		|			(ВЫБРАТЬ
		|				МАКСИМУМ(РаботникиОрганизаций.Сотрудник) КАК Сотрудник,
		|				РаботникиОрганизаций.Сотрудник.Физлицо КАК Физлицо,
		|				1 КАК Приоритет,
		|				ПериодыРаботников.ПериодРегистрации КАК ПериодРегистрации,
		|				РаботникиОрганизаций.Организация КАК ГоловнаяОрганизация
		|			ИЗ
		|				(ВЫБРАТЬ
		|					МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
		|					РаботникиОрганизаций.Сотрудник.Физлицо КАК ФизЛицо,
		|					Периоды.ПериодРегистрации КАК ПериодРегистрации,
		|					РаботникиОрганизаций.Сотрудник КАК Сотрудник
		|				ИЗ
		|					РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ Периоды КАК Периоды
		|						ПО (РаботникиОрганизаций.Период <= КОНЕЦПЕРИОДА(Периоды.ПериодРегистрации, МЕСЯЦ))
		|				ГДЕ
		|					РаботникиОрганизаций.Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|					И РаботникиОрганизаций.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
		|				{ГДЕ
		|					РаботникиОрганизаций.Сотрудник.*}
		|				
		|				СГРУППИРОВАТЬ ПО
		|					РаботникиОрганизаций.Сотрудник.Физлицо,
		|					Периоды.ПериодРегистрации,
		|					РаботникиОрганизаций.Сотрудник) КАК ПериодыРаботников
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|					ПО ПериодыРаботников.Период = РаботникиОрганизаций.Период
		|						И ПериодыРаботников.Сотрудник = РаботникиОрганизаций.Сотрудник
		|			{ГДЕ
		|				РаботникиОрганизаций.Сотрудник.*}
		|			
		|			СГРУППИРОВАТЬ ПО
		|				РаботникиОрганизаций.Сотрудник.Физлицо,
		|				ПериодыРаботников.ПериодРегистрации,
		|				РаботникиОрганизаций.Организация
		|			
		|			ОБЪЕДИНИТЬ
		|			
		|			ВЫБРАТЬ
		|				МАКСИМУМ(РаботникиОрганизаций.Сотрудник),
		|				РаботникиОрганизаций.Сотрудник.Физлицо,
		|				2,
		|				ПериодыРаботников.ПериодРегистрации,
		|				РаботникиОрганизаций.Организация
		|			ИЗ
		|				(ВЫБРАТЬ
		|					МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
		|					РаботникиОрганизаций.Сотрудник.Физлицо КАК ФизЛицо,
		|					Периоды.ПериодРегистрации КАК ПериодРегистрации,
		|					РаботникиОрганизаций.Сотрудник КАК Сотрудник
		|				ИЗ
		|					РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ Периоды КАК Периоды
		|						ПО (РаботникиОрганизаций.Период <= КОНЕЦПЕРИОДА(Периоды.ПериодРегистрации, МЕСЯЦ))
		|				ГДЕ
		|					РаботникиОрганизаций.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|					И РаботникиОрганизаций.Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|					И РаботникиОрганизаций.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
		|				{ГДЕ
		|					РаботникиОрганизаций.Сотрудник.*}
		|				
		|				СГРУППИРОВАТЬ ПО
		|					РаботникиОрганизаций.Сотрудник.Физлицо,
		|					Периоды.ПериодРегистрации,
		|					РаботникиОрганизаций.Сотрудник) КАК ПериодыРаботников
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|					ПО ПериодыРаботников.Период = РаботникиОрганизаций.Период
		|						И ПериодыРаботников.Сотрудник = РаботникиОрганизаций.Сотрудник
		|			{ГДЕ
		|				РаботникиОрганизаций.Сотрудник.*}
		|			
		|			СГРУППИРОВАТЬ ПО
		|				РаботникиОрганизаций.Сотрудник.Физлицо,
		|				ПериодыРаботников.ПериодРегистрации,
		|				РаботникиОрганизаций.Организация
		|			
		|			ОБЪЕДИНИТЬ
		|			
		|			ВЫБРАТЬ
		|				МАКСИМУМ(СотрудникиДУ.Ссылка),
		|				СотрудникиДУ.Физлицо,
		|				3,
		|				ПериодыРаботников.ПериодРегистрации,
		|				ВЫБОР
		|					КОГДА СотрудникиДУ.ОбособленноеПодразделение.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|						ТОГДА СотрудникиДУ.ОбособленноеПодразделение
		|					ИНАЧЕ СотрудникиДУ.ОбособленноеПодразделение.ГоловнаяОрганизация
		|				КОНЕЦ
		|			ИЗ
		|				Периоды КАК ПериодыРаботников,
		|				Справочник.СотрудникиОрганизаций КАК СотрудникиДУ
		|			{ГДЕ
		|				СотрудникиДУ.Ссылка.* КАК Сотрудник}
		|			
		|			СГРУППИРОВАТЬ ПО
		|				СотрудникиДУ.Физлицо,
		|				ПериодыРаботников.ПериодРегистрации,
		|				ВЫБОР
		|					КОГДА СотрудникиДУ.ОбособленноеПодразделение.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|						ТОГДА СотрудникиДУ.ОбособленноеПодразделение
		|					ИНАЧЕ СотрудникиДУ.ОбособленноеПодразделение.ГоловнаяОрганизация
		|				КОНЕЦ) КАК СписокСотрудников
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СписокФизическихЛиц.Физлицо КАК Физлицо,
		|					МИНИМУМ(СписокФизическихЛиц.Приоритет) КАК Приоритет,
		|					СписокФизическихЛиц.ПериодРегистрации КАК ПериодРегистрации,
		|					СписокФизическихЛиц.ГоловнаяОрганизация КАК ГоловнаяОрганизация
		|				ИЗ
		|					(ВЫБРАТЬ
		|						МАКСИМУМ(РаботникиОрганизаций.Сотрудник) КАК Сотрудник,
		|						РаботникиОрганизаций.Сотрудник.Физлицо КАК Физлицо,
		|						1 КАК Приоритет,
		|						ПериодыРаботников.ПериодРегистрации КАК ПериодРегистрации,
		|						РаботникиОрганизаций.Организация КАК ГоловнаяОрганизация
		|					ИЗ
		|						(ВЫБРАТЬ
		|							МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
		|							РаботникиОрганизаций.Сотрудник.Физлицо КАК ФизЛицо,
		|							Периоды.ПериодРегистрации КАК ПериодРегистрации,
		|							РаботникиОрганизаций.Сотрудник КАК Сотрудник
		|						ИЗ
		|							РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|								ВНУТРЕННЕЕ СОЕДИНЕНИЕ Периоды КАК Периоды
		|								ПО (РаботникиОрганизаций.Период <= КОНЕЦПЕРИОДА(Периоды.ПериодРегистрации, МЕСЯЦ))
		|						ГДЕ
		|							РаботникиОрганизаций.Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|							И РаботникиОрганизаций.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
		|						
		|						СГРУППИРОВАТЬ ПО
		|							РаботникиОрганизаций.Сотрудник.Физлицо,
		|							Периоды.ПериодРегистрации,
		|							РаботникиОрганизаций.Сотрудник) КАК ПериодыРаботников
		|							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|							ПО ПериодыРаботников.Период = РаботникиОрганизаций.Период
		|								И ПериодыРаботников.Сотрудник = РаботникиОрганизаций.Сотрудник
		|					
		|					СГРУППИРОВАТЬ ПО
		|						РаботникиОрганизаций.Сотрудник.Физлицо,
		|						ПериодыРаботников.ПериодРегистрации,
		|						РаботникиОрганизаций.Организация
		|					
		|					ОБЪЕДИНИТЬ
		|					
		|					ВЫБРАТЬ
		|						МАКСИМУМ(РаботникиОрганизаций.Сотрудник),
		|						РаботникиОрганизаций.Сотрудник.Физлицо,
		|						2,
		|						ПериодыРаботников.ПериодРегистрации,
		|						РаботникиОрганизаций.Организация
		|					ИЗ
		|						(ВЫБРАТЬ
		|							МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
		|							РаботникиОрганизаций.Сотрудник.Физлицо КАК ФизЛицо,
		|							Периоды.ПериодРегистрации КАК ПериодРегистрации,
		|							РаботникиОрганизаций.Сотрудник КАК Сотрудник
		|						ИЗ
		|							РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|								ВНУТРЕННЕЕ СОЕДИНЕНИЕ Периоды КАК Периоды
		|								ПО (РаботникиОрганизаций.Период <= КОНЕЦПЕРИОДА(Периоды.ПериодРегистрации, МЕСЯЦ))
		|						ГДЕ
		|							РаботникиОрганизаций.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|							И РаботникиОрганизаций.Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|							И РаботникиОрганизаций.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
		|						
		|						СГРУППИРОВАТЬ ПО
		|							РаботникиОрганизаций.Сотрудник.Физлицо,
		|							Периоды.ПериодРегистрации,
		|							РаботникиОрганизаций.Сотрудник) КАК ПериодыРаботников
		|							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
		|							ПО ПериодыРаботников.Период = РаботникиОрганизаций.Период
		|								И ПериодыРаботников.Сотрудник = РаботникиОрганизаций.Сотрудник
		|					
		|					СГРУППИРОВАТЬ ПО
		|						РаботникиОрганизаций.Сотрудник.Физлицо,
		|						ПериодыРаботников.ПериодРегистрации,
		|						РаботникиОрганизаций.Организация
		|					
		|					ОБЪЕДИНИТЬ
		|					
		|					ВЫБРАТЬ
		|						МАКСИМУМ(СотрудникиДУ.Ссылка),
		|						СотрудникиДУ.Физлицо,
		|						3,
		|						ПериодыРаботников.ПериодРегистрации,
		|						ВЫБОР
		|							КОГДА СотрудникиДУ.ОбособленноеПодразделение.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|								ТОГДА СотрудникиДУ.ОбособленноеПодразделение
		|							ИНАЧЕ СотрудникиДУ.ОбособленноеПодразделение.ГоловнаяОрганизация
		|						КОНЕЦ
		|					ИЗ
		|						Периоды КАК ПериодыРаботников,
		|						Справочник.СотрудникиОрганизаций КАК СотрудникиДУ
		|					
		|					СГРУППИРОВАТЬ ПО
		|						СотрудникиДУ.Физлицо,
		|						ПериодыРаботников.ПериодРегистрации,
		|						ВЫБОР
		|							КОГДА СотрудникиДУ.ОбособленноеПодразделение.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|								ТОГДА СотрудникиДУ.ОбособленноеПодразделение
		|							ИНАЧЕ СотрудникиДУ.ОбособленноеПодразделение.ГоловнаяОрганизация
		|						КОНЕЦ) КАК СписокФизическихЛиц
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СписокФизическихЛиц.Физлицо,
		|					СписокФизическихЛиц.ПериодРегистрации,
		|					СписокФизическихЛиц.ГоловнаяОрганизация) КАК СписокФизическихЛиц
		|				ПО СписокСотрудников.Приоритет = СписокФизическихЛиц.Приоритет
		|					И СписокСотрудников.Физлицо = СписокФизическихЛиц.Физлицо
		|					И СписокСотрудников.ПериодРегистрации = СписокФизическихЛиц.ПериодРегистрации
		|					И СписокСотрудников.ГоловнаяОрганизация = СписокФизическихЛиц.ГоловнаяОрганизация
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СписокСотрудников.Физлицо,
		|			СписокСотрудников.ПериодРегистрации,
		|			СписокСотрудников.ГоловнаяОрганизация) КАК Сотрудники
		|		ПО Удержания.ФизЛицо = Сотрудники.Физлицо
		|			И Удержания.ПериодРегистрации = Сотрудники.ПериодРегистрации
		|			И (ВЫБОР
		|				КОГДА Удержания.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|					ТОГДА Удержания.Организация
		|				ИНАЧЕ Удержания.Организация.ГоловнаяОрганизация
		|			КОНЕЦ = Сотрудники.ГоловнаяОрганизация)
		|{ХАРАКТЕРИСТИКИ
		|	ТИП(Справочник.СотрудникиОрганизаций)
		|	ВИДЫХАРАКТЕРИСТИК (ВЫБРАТЬ
		|			КатегорииОбъектов.Ссылка,
		|			"" Дополнительная категория: "" + КатегорииОбъектов.Наименование КАК Наименование
		|		ИЗ
		|			Справочник.КатегорииОбъектов КАК КатегорииОбъектов
		|		ГДЕ
		|			КатегорииОбъектов.НазначениеКатегории = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_СотрудникиОрганизаций)
		|			И НЕ КатегорииОбъектов.ПометкаУдаления)
		|	ПОЛЕКЛЮЧА Ссылка
		|	ПОЛЕИМЕНИ Наименование
		|	ЗНАЧЕНИЯХАРАКТЕРИСТИК РегистрСведений.КатегорииОбъектов
		|	ПОЛЕОБЪЕКТА Объект
		|	ПОЛЕВИДА Категория }
		|{ХАРАКТЕРИСТИКИ
		|	ТИП(Справочник.СотрудникиОрганизаций)
		|	ВИДЫХАРАКТЕРИСТИК (ВЫБРАТЬ
		|			СвойстваОбъектов.Ссылка,
		|			"" Дополнительное свойство: "" + СвойстваОбъектов.Наименование КАК Наименование,
		|			СвойстваОбъектов.ТипЗначения
		|		ИЗ
		|			ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
		|		ГДЕ
		|			СвойстваОбъектов.НазначениеСвойства = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_СотрудникиОрганизаций)
		|			И НЕ СвойстваОбъектов.ПометкаУдаления)
		|	ПОЛЕКЛЮЧА Ссылка
		|	ПОЛЕИМЕНИ Наименование
		|	ПОЛЕТИПАЗНАЧЕНИЯ ТипЗначения
		|	ЗНАЧЕНИЯХАРАКТЕРИСТИК РегистрСведений.ЗначенияСвойствОбъектов
		|	ПОЛЕОБЪЕКТА Объект
		|	ПОЛЕВИДА Свойство
		|	ПОЛЕЗНАЧЕНИЯ Значение }
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Исходная.Организация КАК Организация,
		|	Исходная.ПериодРегистрации КАК ПериодРегистрации,
		|	Исходная.Результат КАК Результат,
		|	Исходная.Сотрудник КАК Сотрудник,
		|	Исходная.ФактическийАдрес КАК ФактическийАдрес,
		|	Исходная.Размер КАК Размер,
		|	Исходная.ДокументОснование КАК ДокументОснование,
		|	Исходная.ПорядокРасчета КАК ПорядокРасчета,
		|	Исходная.Получатель КАК Получатель,
		|	Исходная.ВидИсполнительногоДокумента КАК ВидИсполнительногоДокумента,
		|	Исходная.ПроцентПочтовогоСбора КАК ПроцентПочтовогоСбора,
		|	Исходная.ВидИздержек КАК ВидИздержек,
		|	ВЫБОР
		|		КОГДА Исходная.ВидИздержек В (&ВидыРасчетаИздержкиПоИЛ)
		|				И ВложенныйЗапрос.ВидИздержек ЕСТЬ NULL 
		|			ТОГДА Исходная.Издержки
		|		ИНАЧЕ ВЫРАЗИТЬ(ВложенныйЗапрос.Издержки * Исходная.Результат / ВЫБОР
		|					КОГДА ВложенныйЗапрос.БазаИздержек = 0
		|						ТОГДА 1
		|					ИНАЧЕ ВложенныйЗапрос.БазаИздержек
		|				КОНЕЦ КАК ЧИСЛО(15, 3))
		|	КОНЕЦ КАК Издержки
		|{ВЫБРАТЬ
		|	Организация.*,
		|	ПериодРегистрации,
		|	Результат,
		|	Сотрудник.*,
		|	ФактическийАдрес,
		|	Размер,
		|	ДокументОснование.*,
		|	ПорядокРасчета,
		|	Получатель.*,
		|	ВидИсполнительногоДокумента,
		|	ПроцентПочтовогоСбора,
		|	ВидИздержек.*,
		|	Издержки}
		|ИЗ
		|	ВТИсходная КАК Исходная
		|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ВТИсходная.Организация КАК Организация,
		|			ВТИсходная.ПериодРегистрации КАК ПериодРегистрации,
		|			ВТИсходная.Сотрудник КАК Сотрудник,
		|			ВТИсходная.Получатель КАК Получатель,
		|			ВТИсходная.ПроцентПочтовогоСбора КАК ПроцентПочтовогоСбора,
		|			ВТИсходная.ВидИздержек КАК ВидИздержек,
		|			ВложенныйЗапрос.Результат КАК БазаИздержек,
		|			ВТИсходная.Издержки КАК Издержки
		|		ИЗ
		|			ВТИсходная КАК ВТИсходная
		|				ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ВТИсходная.Организация КАК Организация,
		|					ВТИсходная.ПериодРегистрации КАК ПериодРегистрации,
		|					ВТИсходная.Сотрудник КАК Сотрудник,
		|					ВТИсходная.Получатель КАК Получатель,
		|					ВТИсходная.ПроцентПочтовогоСбора КАК ПроцентПочтовогоСбора,
		|					ВТИсходная.ВидИздержек КАК ВидИздержек,
		|					СУММА(ВТИсходная.Результат) КАК Результат
		|				ИЗ
		|					ВТИсходная КАК ВТИсходная
		|				ГДЕ
		|					ВТИсходная.ДокументОснование <> ЗНАЧЕНИЕ(Документ.ИсполнительныйЛист.ПустаяСсылка)
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ВТИсходная.Организация,
		|					ВТИсходная.ПериодРегистрации,
		|					ВТИсходная.Сотрудник,
		|					ВТИсходная.Получатель,
		|					ВТИсходная.ПроцентПочтовогоСбора,
		|					ВТИсходная.ВидИздержек) КАК ВложенныйЗапрос
		|				ПО ВТИсходная.Организация = ВложенныйЗапрос.Организация
		|					И ВТИсходная.ПериодРегистрации = ВложенныйЗапрос.ПериодРегистрации
		|					И ВТИсходная.Сотрудник = ВложенныйЗапрос.Сотрудник
		|					И ВТИсходная.Получатель = ВложенныйЗапрос.Получатель
		|					И ВТИсходная.ПроцентПочтовогоСбора = ВложенныйЗапрос.ПроцентПочтовогоСбора
		|					И ВТИсходная.ВидИздержек = ВложенныйЗапрос.ВидИздержек
		|		ГДЕ
		|			ВТИсходная.ДокументОснование = ЗНАЧЕНИЕ(Документ.ИсполнительныйЛист.ПустаяСсылка)) КАК ВложенныйЗапрос
		|		ПО Исходная.Организация = ВложенныйЗапрос.Организация
		|			И Исходная.ПериодРегистрации = ВложенныйЗапрос.ПериодРегистрации
		|			И Исходная.Сотрудник = ВложенныйЗапрос.Сотрудник
		|			И Исходная.Получатель = ВложенныйЗапрос.Получатель
		|			И (Исходная.ПроцентПочтовогоСбора = ЕСТЬNULL(ВложенныйЗапрос.ПроцентПочтовогоСбора, 0))
		|			И Исходная.ВидИздержек = ВложенныйЗапрос.ВидИздержек
		|ГДЕ
		|	Исходная.ДокументОснование <> ЗНАЧЕНИЕ(Документ.ИсполнительныйЛист.ПустаяСсылка)
		|{ГДЕ
		|	Исходная.Организация.*,
		|	Исходная.Сотрудник.*,
		|	Исходная.Получатель.*,
		|	Исходная.ДокументОснование.*,
		|	Исходная.ВидИсполнительногоДокумента,
		|	Исходная.ПериодРегистрации}
		|{ХАРАКТЕРИСТИКИ
		|	ТИП(Справочник.СотрудникиОрганизаций)
		|	ВИДЫХАРАКТЕРИСТИК (ВЫБРАТЬ
		|			КатегорииОбъектов.Ссылка,
		|			"" Дополнительная категория: "" + КатегорииОбъектов.Наименование КАК Наименование
		|		ИЗ
		|			Справочник.КатегорииОбъектов КАК КатегорииОбъектов
		|		ГДЕ
		|			КатегорииОбъектов.НазначениеКатегории = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_СотрудникиОрганизаций)
		|			И НЕ КатегорииОбъектов.ПометкаУдаления)
		|	ПОЛЕКЛЮЧА Ссылка
		|	ПОЛЕИМЕНИ Наименование
		|	ЗНАЧЕНИЯХАРАКТЕРИСТИК РегистрСведений.КатегорииОбъектов
		|	ПОЛЕОБЪЕКТА Объект
		|	ПОЛЕВИДА Категория }
		|{ХАРАКТЕРИСТИКИ
		|	ТИП(Справочник.СотрудникиОрганизаций)
		|	ВИДЫХАРАКТЕРИСТИК (ВЫБРАТЬ
		|			СвойстваОбъектов.Ссылка,
		|			"" Дополнительное свойство: "" + СвойстваОбъектов.Наименование КАК Наименование,
		|			СвойстваОбъектов.ТипЗначения
		|		ИЗ
		|			ПланВидовХарактеристик.СвойстваОбъектов КАК СвойстваОбъектов
		|		ГДЕ
		|			СвойстваОбъектов.НазначениеСвойства = ЗНАЧЕНИЕ(ПланВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_СотрудникиОрганизаций)
		|			И НЕ СвойстваОбъектов.ПометкаУдаления)
		|	ПОЛЕКЛЮЧА Ссылка
		|	ПОЛЕИМЕНИ Наименование
		|	ПОЛЕТИПАЗНАЧЕНИЯ ТипЗначения
		|	ЗНАЧЕНИЯХАРАКТЕРИСТИК РегистрСведений.ЗначенияСвойствОбъектов
		|	ПОЛЕОБЪЕКТА Объект
		|	ПОЛЕВИДА Свойство
		|	ПОЛЕЗНАЧЕНИЯ Значение }" ;
		Запрос = v82.NewObject("Запрос");
		Запрос.Текст=ТекстЗапроса;
		
		Запрос.УстановитьПараметр("ВидыРасчетаИздержкиПоИЛ",v82.ПланыВидовРасчета.УдержанияОрганизаций.НайтиПоНаименованию("Почтовый сбор по исп. листам"));
		Запрос.УстановитьПараметр("НачалоПериода",НачПериода);
		Запрос.УстановитьПараметр("КонецПериода",КонецМесяца(КонПериода));
		Запрос.УстановитьПараметр("БанковскиеИздержкиПоИЛ","БИпоИЛ");
		МассивВР=v82.NewObject("Массив");
		МассивВР.Добавить(v82.ПланыВидовРасчета.УдержанияОрганизаций.НайтиПоНаименованию("Удержание по исп. листу кратно величине прожиточного минимума"));
		МассивВР.Добавить(v82.ПланыВидовРасчета.УдержанияОрганизаций.НайтиПоНаименованию("Удержание по исп. листу процентом"));
		МассивВР.Добавить(v82.ПланыВидовРасчета.УдержанияОрганизаций.НайтиПоНаименованию("Удержание по исп. листу процентом без учета БЛ"));
		МассивВР.Добавить(v82.ПланыВидовРасчета.УдержанияОрганизаций.НайтиПоНаименованию("Удержание по исп. листу процентом до предела"));
		МассивВР.Добавить(v82.ПланыВидовРасчета.УдержанияОрганизаций.НайтиПоНаименованию("Удержание по исп. листу процентом до предела без учета БЛ"));
		МассивВР.Добавить(v82.ПланыВидовРасчета.УдержанияОрганизаций.НайтиПоНаименованию("Удержание по исп. листу фикс. суммой"));
		МассивВР.Добавить(v82.ПланыВидовРасчета.УдержанияОрганизаций.НайтиПоНаименованию("Удержание по исп. листу фикс. суммой до предела"));
		Запрос.УстановитьПараметр("ВидыРасчетаПоИЛ",МассивВР);
		
		
		Выборка=Запрос.Выполнить().Выбрать();
		
		//выборка=v82.Документы.ПеречислениеНДФЛвБюджет.Выбрать(НачПериода,КонецДня(КонПериода));
		Пока выборка.Следующий() Цикл
			Если выборка.Результат<=0 Тогда
				продолжить;
			КонецЕсли;	
			Если Выборка.Организация.ИНН<>Организация.ИНН Тогда
				продолжить;
			КонецЕсли;	
			//ТекстЗапроса="ВЫБРАТЬ
			//			 |	РасходИзБанка.Ссылка
			//			 |ИЗ
			//			 |	Документ.РасходИзБанка КАК РасходИзБанка
			//			 |ГДЕ
			//			 |	РасходИзБанка.Комментарий ПОДОБНО &Комментарий";
			//Запрос=Новый Запрос(ТекстЗапроса);			 
			//Запрос.УстановитьПараметр("ОрганизацияИНН",Организация.ИНН);
			//Запрос.УстановитьПараметр("Комментарий","Перенесен из ЗУП, на основании перечисления НДФЛ в бюджет "+выборка.номер+" от "+выборка.дата);
			//выборкаД=запрос.Выполнить().Выбрать();
			//Если выборкаД.Следующий() Тогда
			//	ДокПП=выборкаД.ссылка.ПолучитьОбъект();
			//Иначе	
			ДокПП=Документы.РасходИзБанка.СоздатьДокумент();
			//КонецЕсли;	
			ДокПП.Дата=ДатаИЛ;
			ДокПП.ВалютаДокумента=Справочники.Валюты.НайтиПоКоду("643");
			ДокПП.ВидОперации=Перечисления.ВидыОперацийППИсходящее.ПеречислениеПоИсполнительнымЛистам;
			//ДокПП.ВидПеречисленияВБюджет=Перечисления.ВидыПеречисленийВБюджет.НалоговыйПлатеж;
			//ДокПП.ПеречислениеВБюджет=истина;
			
			ДокПП.ВидПлатежа="Электронно";
			ДокПП.СтатьяДвиженияДенежныхСредств=Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("133110");
			
			ДокПП.ОчередностьПлатежа=1;
			//ДокПП.СтатусСоставителя="02";
			//ДокПП.КодБК="18210102010011000110";
			//ДокПП.ВидПлатежаВГосБюджет=Перечисления.ВидыПлатежейВГосБюджет.Налог;
			
			//ОКТМОСКПП=выборка.ОКТМО_КПП;
			//номпоз=Найти(ОКТМОСКПП,"/");
			//ОКТМО=СокрЛП(Лев(ОКТМОСКПП,номпоз-1));
			//КПП=СокрЛП(Прав(ОКТМОСКПП,СтрДлина(ОКТМОСКПП)-НомПоз));
			//Организация=Организация;
			//// найдём предыдущую платёжку на этот ОКТМО
			//ТекстЗапроса="ВЫБРАТЬ
			//			 |	РасходИзБанка.Ссылка
			//			 |ИЗ
			//			 |	Документ.РасходИзБанка КАК РасходИзБанка
			//			 |ГДЕ
			//			 |	РасходИзБанка.КодОКТМО = &КодОКТМО
			//			 |	И РасходИзБанка.Организация = &Организация
			//			 |	И РасходИзБанка.Проведен
			//			 |	И РасходИзБанка.КПППлательщика = &КПППлательщика
			//			 |	И РасходИзБанка.ВидОперации = &ВидОперации
			//			 |	И РасходИзБанка.ПеречислениеВБюджет
			//			 |	И РасходИзБанка.Дата < &Дата
			//			 |	И РасходИзБанка.СчетУчетаРасчетовСКонтрагентомБУ.Код = ""68.01""
			//			 |
			//			 |УПОРЯДОЧИТЬ ПО
			//			 |	РасходИзБанка.Дата УБЫВ";
			//Запрос=Новый Запрос(ТекстЗапроса);			 
			//Запрос.УстановитьПараметр("КодОКТМО",ОКТМО);
			//Запрос.УстановитьПараметр("Организация",Организация);
			//Запрос.УстановитьПараметр("КПППлательщика",КПП);
			//Запрос.УстановитьПараметр("ВидОперации",Перечисления.ВидыОперацийППИсходящее.ПеречислениеНалога);
			//Запрос.УстановитьПараметр("Дата",НачалоДня(выборка.дата));
			//рез=запрос.Выполнить().Выбрать();
			//Если рез.Следующий() Тогда
			//	НашлиДок=рез.Ссылка;
			//	//нашлиДок.ПолучитьФорму().Открыть();
			//	ЗаполнитьЗначенияСвойств(ДокПП,нашлиДок,,"Номер,дата,комментарий,НомерВходящегоДокумента,ДатаОплаты,Ответственный");
			//КонецЕсли;
			ДокПП.Организация=Организация;
			ДокПП.СчетОрганизации=Организация.ОсновнойБанковскийСчет;
			//ДокПП.ВидОперации=Перечисления.ВидыОперацийППИсходящее.ПеречислениеНалога;
			////ДокПП.КПППлательщика=КПП;
			//ДокПП.КодОКТМО=ОКТМО;
			Контрагент=Справочники.Контрагенты.НайтиПоНаименованию(Выборка.Получатель.Наименование);
			ПапкаАлименты=Справочники.Контрагенты.НайтиПоКоду("Т00002073");
			руб=Константы.ВалютаРегламентированногоУчета.Получить();
			Если Контрагент.Пустая() Тогда
				СписокВариантов=Новый СписокЗначений;
				СписокВариантов.Добавить(1,"Создать");
				СписокВариантов.Добавить(2,"Выбрать");
				СписокВариантов.Добавить(3,"Продолжить");
				Ответ = Вопрос("Не найден контрагент с наименованием "+Выборка.Получатель.Наименование+"", СписокВариантов, 0);
				Если Ответ = 1 Тогда
					 Контрагент=Справочники.Контрагенты.СоздатьЭлемент();
					 Контрагент.Родитель=ПапкаАлименты;
					 Контрагент.Наименование=Выборка.Получатель.Наименование;
					 Контрагент.Код=Выборка.Получатель.Код;
					 Контрагент.ЮрФизЛицо=Перечисления.ЮрФизЛицо.ЮрЛицо;
					 Контрагент.НаименованиеПолное=Выборка.Получатель.НаименованиеПолное;
					 Контрагент.ИНН=Выборка.Получатель.ИНН;
					 Контрагент.КПП=Выборка.Получатель.КПП;
					 Контрагент.ОбменДанными.Загрузка=Истина;
					 Контрагент.СтавкаНДС=Перечисления.СтавкиНДС.БезНДС;
					 Контрагент.Записать();
					 КонтрагентСсылка=Контрагент.Ссылка;
					 Если ЗначениеЗаполнено(Выборка.Получатель.ОсновнойБанковскийСчет.НомерСчета) Тогда
					 	Счет=Справочники.БанковскиеСчета.СоздатьЭлемент();
						Счет.ОбменДанными.Загрузка = Истина;
						Счет.Банк=Справочники.Банки.НайтиПоКоду(Выборка.Получатель.ОсновнойБанковскийСчет.Банк.Код);
						Счет.ВалютаДенежныхСредств=руб;
						Счет.ВидСчета="Расчетный";
						Счет.Наименование=Выборка.Получатель.ОсновнойБанковскийСчет.Наименование;
						Счет.Владелец=КонтрагентСсылка;
						Счет.НомерСчета=Выборка.Получатель.ОсновнойБанковскийСчет.НомерСчета;
						Счет.ТекстНазначения=Выборка.Получатель.ОсновнойБанковскийСчет.ТекстНазначения;
						Счет.ТекстКорреспондента=Выборка.Получатель.ОсновнойБанковскийСчет.ТекстКорреспондента;
						Счет.НомерИДатаРазрешения=Выборка.Получатель.ОсновнойБанковскийСчет.НомерИДатаРазрешения;
						Счет.ДатаОткрытия=Выборка.Получатель.ОсновнойБанковскийСчет.ДатаОткрытия;
						Счет.ДатаЗакрытия=Выборка.Получатель.ОсновнойБанковскийСчет.ДатаЗакрытия;
						Счет.МесяцПрописью=Выборка.Получатель.ОсновнойБанковскийСчет.МесяцПрописью;
						Счет.СуммаБезКопеек=Выборка.Получатель.ОсновнойБанковскийСчет.СуммаБезКопеек;
						Счет.ОбменДанными.Загрузка = Истина;
						Счет.Записать();
						Контрагент.ОсновнойБанковскийСчет=Счет.Ссылка;
						Контрагент.Записать();
					КонецЕсли;
					 Если ЗначениеЗаполнено(Выборка.Получатель.ОсновнойДоговорКонтрагента.Наименование) Тогда
					 	Договор=Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
						Договор.Владелец=КонтрагентСсылка;
						Договор.Наименование=Выборка.Получатель.ОсновнойДоговорКонтрагента.Наименование;
						Договор.Код=Выборка.Получатель.ОсновнойДоговорКонтрагента.Код;
						Договор.Организация=Организация;
						Договор.Записать();
						Контрагент.ОсновнойДоговорКонтрагента=Договор.Ссылка;
						Контрагент.Записать();
					КонецЕсли;	
					Контрагент=КонтрагентСсылка;
				ИначеЕсли Ответ = 2 Тогда	
					Контрагент=Справочники.Контрагенты.ПолучитьФормуВыбора().ОткрытьМодально();
				КонецЕсли;
				
			КонецЕсли;	
			ДокПП.Контрагент=Контрагент;
			
			ДокПП.ИННПлательщика=ДокПП.Организация.ИНН;
			ДокПП.КПППлательщика = Организация.КПП;
			ДокПП.ИННПолучателя = ДокПП.Контрагент.ИНН;
			ДокПП.КПППолучателя = ДокПП.Контрагент.КПП;
			
			ДокПП.ТекстПлательщика=ДокПП.Организация.НаименованиеСокращенное;
			ДокПП.ТекстПолучателя=ДокПП.Контрагент.НаименованиеПолное;
			
			ДокПП.СчетКонтрагента=ПолучитьСчетДляФизлица(ДокПП.Контрагент);
			
			ДокПП.ДатаОплаты=ДокПП.Дата;
			ДокПП.Оплачено=ложь;
			ДокПП.СуммаДокумента=выборка.Результат;
			//ДокПП.ПоказательПериода="МС."+Формат(выборка.МесяцНалоговогоПериода,"ДФ=ММ.yyyy");
			ДокПП.СчетУчетаРасчетовСКонтрагентом=ПланыСчетов.Финансовый.НайтиПоКоду("76.2");
			ДокПП.СубконтоДт1=ДокПП.Организация;
			ДокПП.СубконтоДт2=Справочники.ФизическиеЛица.НайтиПоНаименованию(Выборка.Сотрудник.Наименование);
			ДокПП.СчетБанк=ПланыСчетов.Хозрасчетный.НайтиПоКоду("51");
			ДокПП.СчетУчетаРасчетовСКонтрагентомБУ=ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.41");
			ДокПП.СчетУчетаРасчетовПоАвансамБУ=ПланыСчетов.Хозрасчетный.НайтиПоКоду("76.41");
			Если СокрЛП(ДокПП.СчетКонтрагента.ТекстНазначения)="" Тогда
				ДокПП.НазначениеПлатежа="Алиментыпои\л№"+Выборка.ДокументОснование.Номер+"от"+Формат(Выборка.ДокументОснование.Дата,"ДФ=dd.MM.yyyy")+"сзаработнойплаты"+ДокПП.СубконтоДт2+"за"+Формат(Выборка.ПериодРегистрации,"ДФ=МММMyyyy; ДЛФ=D")+"БЕЗНДССумма "+Формат(Выборка.Результат,"ЧРД=-; ЧГ=");
			Иначе
				ДокПП.НазначениеПлатежа=ДокПП.СчетКонтрагента.ТекстНазначения;
			КонецЕсли;	
			ДокПП.Комментарий="Перенесен из ЗУП";
			ДокПП.СтатьяДвиженияДенежныхСредствБУ=ОбщегоНазначенияСервер.ПолучитьСтатьюДДС_БУ(ДокПП.СтатьяДвиженияДенежныхСредств,ДокПП.ВидОперации);
			ДокПП.ЗаявкаНаРасходованиеСредств=Документы.ЗаявкаНаРасходованиеСредств.ПустаяСсылка();
			ДокПП.ФизЛицо=ДокПП.СубконтоДт2;
			СтрокаДока=КэшУдержаний.Найти(ДокПП.ФизЛицо);
			ДокПП.СтавкаНДС=Перечисления.СтавкиНДС.БезНДС;
			Если СтрокаДока<>Неопределено Тогда
				ДокПП.УдержаниеПоИспЛистам=СтрокаДока.ДокУдержания;
			Иначе
				Сообщить("Не нашёл документа удержания по исполнительным листам для "+ДокПП.ФизЛицо);
			КонецЕсли;
			Если ДокПП.Контрагент.ЮрФизЛицо=Перечисления.ЮрФизЛицо.ЮрЛицо Тогда
				ДокПП.ПеречислениеВБюджет=Истина;
				ДокПП.ВидПеречисленияВБюджет=Перечисления.ВидыПеречисленийВБюджет.ИнойПлатеж;
				ДокПП.СтатусСоставителя="08";
				ДокПП.ВидПлатежаВГосБюджет=Перечисления.ВидыПлатежейВГосБюджет.НеПринято;
				//ДокПП.КодОКТМО=ДокПП.Контрагент
			КонецЕсли;	
			ДокПП.Записать(режимЗаписиДокумента.Запись);
			Сообщить("Сформирован документ "+ДокПП);
			//ДокПП.Записать(режимЗаписиДокумента.ОтменаПроведения);
			//Если ОткрыватьСформированныеДокументы Тогда
			//ДокПП.ПолучитьФорму().Открыть();
			//КонецЕсли;
			//Если ЗаполнятьДатуИНомерВДокументахЗУП Тогда
			//	ДокЗуп=выборка.ПолучитьОбъект();
			//	ДокЗУП.ПлатежноеПоручениеНомер=ДокПП.Номер;
			//	ДокЗУП.ПлатежноеПоручениеДата=ДокПП.Дата;
			//	ДокЗуп.Записать(v82.режимЗаписидокумента.Проведение);
			//КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры	

Функция НайтиИФНС_По_КПП(КПП)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Родитель"	, Справочники.Контрагенты.НайтиПоКоду("000000523"));
	Запрос.УстановитьПараметр("ИНН_Поиск"	, Лев(КПП, 4));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Родитель = &Родитель
	|	И ПОДСТРОКА(Контрагенты.ИНН, 1, 4) = &ИНН_Поиск";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ссылка;
	КонецЕсли;
	
	Возврат Справочники.Контрагенты.ПустаяСсылка();
	
КонецФункции	

Функция ПолучитьСчетДляФизлица(Контрагент)
	Если ЗначениеЗаполнено(Контрагент.ОсновнойБанковскийСчет) Тогда
		Возврат Контрагент.ОсновнойБанковскийСчет;
	КонецЕсли;
	Выборка=Справочники.БанковскиеСчета.Выбрать(,Контрагент);
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	Возврат неопределено;
КонецФункции	

Процедура ИмпортЗППриИзменении(Элемент)
	ЭлементыФормы.НазначениеПлатежаТекст.Видимость=ИмпортЗП;
	ЭлементыФормы.НазначениеПлатежа.Видимость=ИмпортЗП;
	
	//+++АК sole 2018.08.21 ИП-00019600
	КорректировкаНачалаПериодаЕслиНеобходимо();
	//---АК sole 2018.08.21 ИП-00019600

КонецПроцедуры

//+++АК sole 2018.08.21 ИП-00019600
Процедура НачПериодаПриИзменении(Элемент)
	 КорректировкаНачалаПериодаЕслиНеобходимо();	
КонецПроцедуры

//+++АК sole 2018.08.21 ИП-00019600
Процедура КорректировкаНачалаПериодаЕслиНеобходимо()
	
	ГраницаНачалаПериода = НачалоДня(ТекущаяДата());
	
	Если 
			ЭтотОбъект.НачПериода < ГраницаНачалаПериода 
		И	(
					ЭтотОбъект.ИмпортЗП 
				Или	ЭтотОбъект.ИмпортНДФЛ
			)
	Тогда
		 ЭтотОбъект.НачПериода = ГраницаНачалаПериода;
	КонецЕсли;
	
КонецПроцедуры



ЗаполнятьДатуИНомерВДокументахЗУП=истина;
ОткрыватьСформированныеДокументы=Ложь;
ЭлементыФормы.ЗаполнятьДатуИНомерВДокументахЗУП.Видимость=Ложь;
ЭлементыФормы.НазначениеПлатежаТекст.Видимость=ИмпортЗП;
ЭлементыФормы.НазначениеПлатежа.Видимость=ИмпортЗП;
ДатаИЛ=ТекущаяДата();