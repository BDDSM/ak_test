
&НаКлиенте
Процедура НастройкаСканирования(Команда)
	
	СистемнаяИнформация = Новый СистемнаяИнформация();
	ИдентификаторКлиента = СистемнаяИнформация.ИдентификаторКлиента;
	
	ОткрытьФорму("Справочник.Файлы.Форма.НастройкаСканирования", Новый Структура(
						"КомпонентаУстановлена, ИдентификаторКлиента",
						РаботаСоСканеромКлиент.ПроинициализироватьКомпоненту(), ИдентификаторКлиента));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПоступленияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КаталогСохранения = Константы.КаталогХраненияФайловКартинок.Получить();
	КаталогСохранения = КаталогСохранения + ?(Прав(КаталогСохранения, 1) <> "\", "\", "");
	
КонецПроцедуры

Функция ПолучитьРеквизитыСохраненияКартинки(ФайлСсылка)
	
	Картинка = Новый Картинка(Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(ФайлСсылка));
	Возврат Новый Структура("АдресКартинки, Расширение", ПоместитьВоВременноеХранилище(Картинка), ФайлСсылка.Расширение);
	
КонецФункции

Процедура ЗаписатьДанныеВПоступление(ЧтоСканируют, ФайлСсылка, СсылкаДок)
	УстановитьПривилегированныйРежим(Истина);
	
	ДокОбъект = СсылкаДок.ПолучитьОбъект();
	Если ЧтоСканируют = "Акт_Накладная_Поступление" Тогда
		ДокОбъект.Акт = ФайлСсылка;
		Акт_Общий = ФайлСсылка;
		Элементы.ДекорацияАктОбщая.Видимость = Истина;
	ИначеЕсли ЧтоСканируют = "Приложение_Поступление" Тогда
		ДокОбъект.Приложение = ФайлСсылка;
		Приложение_Общий = ФайлСсылка;
		Элементы.ДекорацияПриложениеОбщая.Видимость = Истина;
	ИначеЕсли ЧтоСканируют = "СФ_Поступление" Тогда
		ДокОбъект.СчетФактура = ФайлСсылка;
		СФ_Общий = ФайлСсылка;
		Элементы.ДекорацияСФОбщая.Видимость = Истина;
	ИначеЕсли ЧтоСканируют = "УПД_Поступление" Тогда
		ДокОбъект.УПД = ФайлСсылка;
		УПД_Общий = ФайлСсылка;
		Элементы.ДекорацияУПДОбщая.Видимость = Истина;	
	КонецЕсли;
	
	ДокОбъект.ОбменДанными.Загрузка = Истина;
	ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
	Элементы.СписокПоступления.Обновить();
	
КонецПроцедуры

Процедура ЗаписатьДанныеВПоступлениеДР(ЧтоСканируют, ФайлСсылка, СсылкаДок)
	УстановитьПривилегированныйРежим(Истина);
	
	ДокОбъект = СсылкаДок.ПолучитьОбъект();
	Если ЧтоСканируют = "Акт_ПоступлениеДР" Тогда
		ДокОбъект.Акт = ФайлСсылка;
		Акт_Общий = ФайлСсылка;
		Элементы.ДекорацияАктОбщая.Видимость = Истина;
	ИначеЕсли ЧтоСканируют = "Приложение_ПоступлениеДР" Тогда
		ДокОбъект.Приложение = ФайлСсылка;
		Приложение_Общий = ФайлСсылка;
		Элементы.ДекорацияПриложениеОбщая.Видимость = Истина;
	ИначеЕсли ЧтоСканируют = "СФ_ПоступлениеДР" Тогда
		ДокОбъект.СчетФактура = ФайлСсылка;
		СФ_Общий = ФайлСсылка;
		Элементы.ДекорацияСФОбщая.Видимость = Истина;
	ИначеЕсли ЧтоСканируют = "УПД_ПоступлениеДР" Тогда
		ДокОбъект.УПД = ФайлСсылка;
		УПД_Общий = ФайлСсылка;
		Элементы.ДекорацияУПДОбщая.Видимость = Истина;	
	КонецЕсли;
	
	ДокОбъект.ОбменДанными.Загрузка = Истина;
	ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
	Элементы.СписокПоступленияДопРасходы.Обновить();
	
КонецПроцедуры

Процедура ЗаписатьДанныеВОТР(ЧтоСканируют, ФайлСсылка, СсылкаДок)
	УстановитьПривилегированныйРежим(Истина);
	
	ДокОбъект = СсылкаДок.ПолучитьОбъект();
	Если ЧтоСканируют = "Акт_ОТР" Тогда
		ДокОбъект.Акт = ФайлСсылка;
		Акт_Общий = ФайлСсылка;
		Элементы.ДекорацияАктОбщая.Видимость = Истина;
	ИначеЕсли ЧтоСканируют = "Приложение_ОТР" Тогда
		ДокОбъект.Приложение = ФайлСсылка;
		Приложение_Общий = ФайлСсылка;
		Элементы.ДекорацияПриложениеОбщая.Видимость = Истина;
	ИначеЕсли ЧтоСканируют = "СФ_ОТР" Тогда
		ДокОбъект.СчетФактура = ФайлСсылка;
		СФ_Общий = ФайлСсылка;
		Элементы.ДекорацияСФОбщая.Видимость = Истина;
	ИначеЕсли ЧтоСканируют = "УПД_ОТР" Тогда
		ДокОбъект.УПД = ФайлСсылка;
		УПД_Общий = ФайлСсылка;
		Элементы.ДекорацияУПДОбщая.Видимость = Истина;	
	КонецЕсли;
	
	ДокОбъект.ОбменДанными.Загрузка = Истина;
	ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
	Элементы.СписокОбщиеТранспортныеРасходы.Обновить();
	
КонецПроцедуры

Процедура ЗаписатьДанныеВМаршрут(ЧтоСканируют, ФайлСсылка, СсылкаДок)
	УстановитьПривилегированныйРежим(Истина);
	
	ДокОбъект = СсылкаДок.ПолучитьОбъект();
	Если ЧтоСканируют = "Акт_Маршрут" Тогда
		ДокОбъект.Акт = ФайлСсылка;
		Акт_Общий = ФайлСсылка;
		Элементы.ДекорацияАктОбщая.Видимость = Истина;
	ИначеЕсли ЧтоСканируют = "Приложение_Маршрут" Тогда
		ДокОбъект.Приложение = ФайлСсылка;
		Приложение_Общий = ФайлСсылка;
		Элементы.ДекорацияПриложениеОбщая.Видимость = Истина;
	ИначеЕсли ЧтоСканируют = "СФ_Маршрут" Тогда
		ДокОбъект.СчетФактура = ФайлСсылка;
		СФ_Общий = ФайлСсылка;
		Элементы.ДекорацияСФОбщая.Видимость = Истина;
	ИначеЕсли ЧтоСканируют = "УПД_Маршрут" Тогда
		ДокОбъект.УПД = ФайлСсылка;
		УПД_Общий = ФайлСсылка;
		Элементы.ДекорацияУПДОбщая.Видимость = Истина;	
	КонецЕсли;
	
	ДокОбъект.ОбменДанными.Загрузка = Истина;
	ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
	Элементы.СписокМаршрутныеЛисты.Обновить();
	
КонецПроцедуры

Процедура ЗаписатьДанныеВДоставкуНаТТ(ЧтоСканируют, ФайлСсылка, СсылкаДок)
	УстановитьПривилегированныйРежим(Истина);
	
	ДокОбъект = СсылкаДок.ПолучитьОбъект();
	Если ЧтоСканируют = "Акт_ДоставкаНаТТ" Тогда
		ДокОбъект.Акт = ФайлСсылка;
		Акт_Общий = ФайлСсылка;
		Элементы.ДекорацияАктОбщая.Видимость = Истина;
	ИначеЕсли ЧтоСканируют = "Приложение_ДоставкаНаТТ" Тогда
		ДокОбъект.Приложение = ФайлСсылка;
		Приложение_Общий = ФайлСсылка;
		Элементы.ДекорацияПриложениеОбщая.Видимость = Истина;
	ИначеЕсли ЧтоСканируют = "СФ_ДоставкаНаТТ" Тогда
		ДокОбъект.СчетФактура = ФайлСсылка;
		СФ_Общий = ФайлСсылка;
		Элементы.ДекорацияСФОбщая.Видимость = Истина;
	ИначеЕсли ЧтоСканируют = "УПД_ДоставкаНаТТ" Тогда
		ДокОбъект.УПД = ФайлСсылка;
		УПД_Общий = ФайлСсылка;
		Элементы.ДекорацияУПДОбщая.Видимость = Истина;	
	КонецЕсли;
	
	ДокОбъект.ОбменДанными.Загрузка = Истина;
	ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
	Элементы.СписокДоставкаНаТТ.Обновить();
	
КонецПроцедуры



&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура")
		И ВыбранноеЗначение.Свойство("ИмяСобытия")
		И ВыбранноеЗначение.ИмяСобытия = "Отсканировано" Тогда
		Если ВыбранноеЗначение.ЧтоСканируют = "Акт_Накладная_Поступление"
			ИЛИ ВыбранноеЗначение.ЧтоСканируют = "Приложение_Поступление"
			ИЛИ ВыбранноеЗначение.ЧтоСканируют = "СФ_Поступление"
			ИЛИ ВыбранноеЗначение.ЧтоСканируют = "УПД_Поступление" Тогда
			ЗаписатьДанныеВПоступление(ВыбранноеЗначение.ЧтоСканируют, ВыбранноеЗначение.МассивКартинок[0], Элементы.СписокПоступления.ТекущаяСтрока);
		КонецЕсли;
		
		Если ВыбранноеЗначение.ЧтоСканируют = "Акт_ПоступлениеДР"
			ИЛИ ВыбранноеЗначение.ЧтоСканируют = "Приложение_ПоступлениеДР"
			ИЛИ ВыбранноеЗначение.ЧтоСканируют = "СФ_ПоступлениеДР"
			ИЛИ ВыбранноеЗначение.ЧтоСканируют = "УПД_ПоступлениеДР" Тогда
			ЗаписатьДанныеВПоступлениеДР(ВыбранноеЗначение.ЧтоСканируют, ВыбранноеЗначение.МассивКартинок[0], Элементы.СписокПоступленияДопРасходы.ТекущаяСтрока);
		КонецЕсли;
		
		Если ВыбранноеЗначение.ЧтоСканируют = "Акт_ОТР"
			ИЛИ ВыбранноеЗначение.ЧтоСканируют = "Приложение_ОТР"
			ИЛИ ВыбранноеЗначение.ЧтоСканируют = "СФ_ОТР"
			ИЛИ ВыбранноеЗначение.ЧтоСканируют = "УПД_ОТР" Тогда
			ЗаписатьДанныеВОТР(ВыбранноеЗначение.ЧтоСканируют, ВыбранноеЗначение.МассивКартинок[0], Элементы.СписокОбщиеТранспортныеРасходы.ТекущаяСтрока);
		КонецЕсли;
		
		Если ВыбранноеЗначение.ЧтоСканируют = "Акт_Маршрут"
			ИЛИ ВыбранноеЗначение.ЧтоСканируют = "Приложение_Маршрут"
			ИЛИ ВыбранноеЗначение.ЧтоСканируют = "СФ_Маршрут"
			ИЛИ ВыбранноеЗначение.ЧтоСканируют = "УПД_Маршрут" Тогда
			ЗаписатьДанныеВМаршрут(ВыбранноеЗначение.ЧтоСканируют, ВыбранноеЗначение.МассивКартинок[0], Элементы.СписокМаршрутныеЛисты.ТекущаяСтрока);
		КонецЕсли;
		
		Если ВыбранноеЗначение.ЧтоСканируют = "Акт_ДоставкаНаТТ"
			ИЛИ ВыбранноеЗначение.ЧтоСканируют = "Приложение_ДоставкаНаТТ"
			ИЛИ ВыбранноеЗначение.ЧтоСканируют = "СФ_ДоставкаНаТТ"
			ИЛИ ВыбранноеЗначение.ЧтоСканируют = "УПД_ДоставкаНаТТ" Тогда
			ЗаписатьДанныеВДоставкуНаТТ(ВыбранноеЗначение.ЧтоСканируют, ВыбранноеЗначение.МассивКартинок[0], Элементы.СписокДоставкаНаТТ.ТекущаяСтрока);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПоступленияПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ВыбранаСтрокаОбщая", 0.2, Истина);
	
КонецПроцедуры

Функция ПодготовитьФайлКПросмотру(Каталог, ИмяФайла)
	
	Файлы = НайтиФайлы(Каталог, ИмяФайла, Истина);
	Если Файлы.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат Новый Картинка(Файлы[0].ПолноеИмя);
	
КонецФункции	

&НаКлиенте
Процедура СписокПоступленияДопРасходыПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОбщиеТранспортныеРасходыПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОбщиеТранспортныеРасходыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СканироватьАктОбщая(Команда)
	
	Если Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаПоступления" Тогда
		ТекСтрока = Элементы.СписокПоступления.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "Акт_Накладная_Поступление");
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаПоступлениеДопРасходов" Тогда
		ТекСтрока = Элементы.СписокПоступленияДопРасходы.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "Акт_ПоступлениеДР");
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаОбщиеТранспортныеРасходы" Тогда
		ТекСтрока = Элементы.СписокОбщиеТранспортныеРасходы.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "Акт_ОТР");
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаМаршрутныеЛисты" Тогда
		ТекСтрока = Элементы.СписокМаршрутныеЛисты.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "Акт_Маршрут");
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаДоставкаНаТТ" Тогда
		ТекСтрока = Элементы.СписокДоставкаНаТТ.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "Акт_ДоставкаНаТТ");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрАктОбщая(Команда)
	
	Если ЗначениеЗаполнено(Акт_Общий) Тогда
		
		СтруктураКартинки = ПолучитьРеквизитыСохраненияКартинки(Акт_Общий);
		ИмяФайла = ПолучитьИмяВременногоФайла(СтруктураКартинки.Расширение);
		Если ПолучитьФайл(СтруктураКартинки.АдресКартинки, ИмяФайла, Ложь) = Истина Тогда
			ЗапуститьПриложение(ИмяФайла);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыбранаСтрокаОбщаяСервер(Ссылка)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаПоступления" Тогда
		Док = "ПоступлениеТоваровУслуг";
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаПоступлениеДопРасходов" Тогда
		Док = "ПоступлениеДопРасходов";
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаОбщиеТранспортныеРасходы" Тогда
		Док = "ОбщиеТранспортныеРасходы";
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаМаршрутныеЛисты" Тогда
		Док = "МаршрутныйЛист";
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаДоставкаНаТТ" Тогда
		Док = "ДоставкаНаТТ";	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Док) Тогда
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПоступлениеДопРасходов.Акт,
		               |	ПоступлениеДопРасходов.СчетФактура,
		               |	ПоступлениеДопРасходов.Приложение,
		               |	ПоступлениеДопРасходов.УПД
		               |ИЗ
		               |	Документ." + Док + " КАК ПоступлениеДопРасходов
		               |ГДЕ
		               |	ПоступлениеДопРасходов.Ссылка = &Ссылка";
					   
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Акт_Общий = Выборка.Акт;
			СФ_Общий = Выборка.СчетФактура;
			Приложение_Общий = Выборка.Приложение;
			УПД_Общий = Выборка.УПД;
		Иначе
			Акт_Общий = Неопределено;
			СФ_Общий = Неопределено;
			Приложение_Общий = Неопределено;
			УПД_Общий = Неопределено;
		КонецЕсли;
	Иначе
		Акт_Общий = Неопределено;
		СФ_Общий = Неопределено;
		Приложение_Общий = Неопределено;
		УПД_Общий = Неопределено;
	КонецЕсли;	
	
	Элементы.ДекорацияАктОбщая.Видимость = ЗначениеЗаполнено(Акт_Общий);
	Элементы.ДекорацияСФОбщая.Видимость = ЗначениеЗаполнено(СФ_Общий);
	Элементы.ДекорацияПриложениеОбщая.Видимость = ЗначениеЗаполнено(Приложение_Общий);
	Элементы.ДекорацияУПДОбщая.Видимость = ЗначениеЗаполнено(УПД_Общий);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранаСтрокаОбщая()
	
	Ссылка = Неопределено;
	Если Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаПоступления" Тогда
		Ссылка = Элементы.СписокПоступления.ТекущаяСтрока;
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаПоступлениеДопРасходов" Тогда
		Ссылка = Элементы.СписокПоступленияДопРасходы.ТекущаяСтрока;
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаОбщиеТранспортныеРасходы" Тогда
		Ссылка = Элементы.СписокОбщиеТранспортныеРасходы.ТекущаяСтрока;
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаМаршрутныеЛисты" Тогда
		Ссылка = Элементы.СписокМаршрутныеЛисты.ТекущаяСтрока;
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаДоставкаНаТТ" Тогда
		Ссылка = Элементы.СписокДоставкаНаТТ.ТекущаяСтрока;	
	КонецЕсли;	
	
	ВыбранаСтрокаОбщаяСервер(Ссылка);
	
КонецПроцедуры	

&НаКлиенте
Процедура СписокОбщиеТранспортныеРасходыПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ВыбранаСтрокаОбщая", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СканироватьСчетФактура_Общая(Команда)
	
	Если Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаПоступления" Тогда
		ТекСтрока = Элементы.СписокПоступления.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "СФ_Поступление");
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаПоступлениеДопРасходов" Тогда
		ТекСтрока = Элементы.СписокПоступленияДопРасходы.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "СФ_ПоступлениеДР");
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаОбщиеТранспортныеРасходы" Тогда
		ТекСтрока = Элементы.СписокОбщиеТранспортныеРасходы.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "СФ_ОТР");
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаМаршрутныеЛисты" Тогда
		ТекСтрока = Элементы.СписокМаршрутныеЛисты.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "СФ_Маршрут");
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаДоставкаНаТТ" Тогда
		ТекСтрока = Элементы.СписокДоставкаНаТТ.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "СФ_ДоставкаНаТТ");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрСФ_Общая(Команда)
	
	Если ЗначениеЗаполнено(СФ_Общий) Тогда
		
		СтруктураКартинки = ПолучитьРеквизитыСохраненияКартинки(СФ_Общий);
		ИмяФайла = ПолучитьИмяВременногоФайла(СтруктураКартинки.Расширение);
		Если ПолучитьФайл(СтруктураКартинки.АдресКартинки, ИмяФайла, Ложь) = Истина Тогда
			ЗапуститьПриложение(ИмяФайла);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СканироватьПриложение_Общая(Команда)
	
	Если Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаПоступления" Тогда
		ТекСтрока = Элементы.СписокПоступления.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "Приложение_Поступление");
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаПоступлениеДопРасходов" Тогда
		ТекСтрока = Элементы.СписокПоступленияДопРасходы.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "Приложение_ПоступлениеДР");
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаОбщиеТранспортныеРасходы" Тогда
		ТекСтрока = Элементы.СписокОбщиеТранспортныеРасходы.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "Приложение_ОТР");
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаМаршрутныеЛисты" Тогда
		ТекСтрока = Элементы.СписокМаршрутныеЛисты.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "Приложение_Маршрут");
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаДоставкаНаТТ" Тогда
		ТекСтрока = Элементы.СписокДоставкаНаТТ.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "Приложение_ДоставкаНаТТ");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрПриложение_Общая(Команда)
	
	Если ЗначениеЗаполнено(Приложение_Общий) Тогда
		
		СтруктураКартинки = ПолучитьРеквизитыСохраненияКартинки(Приложение_Общий);
		ИмяФайла = ПолучитьИмяВременногоФайла(СтруктураКартинки.Расширение);
		Если ПолучитьФайл(СтруктураКартинки.АдресКартинки, ИмяФайла, Ложь) = Истина Тогда
			ЗапуститьПриложение(ИмяФайла);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СканироватьУПД_Общий(Команда)
	
	Если Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаПоступления" Тогда
		ТекСтрока = Элементы.СписокПоступления.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "УПД_Поступление");
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаПоступлениеДопРасходов" Тогда
		ТекСтрока = Элементы.СписокПоступленияДопРасходы.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "УПД_ПоступлениеДР");
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаОбщиеТранспортныеРасходы" Тогда
		ТекСтрока = Элементы.СписокОбщиеТранспортныеРасходы.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "УПД_ОТР");
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаМаршрутныеЛисты" Тогда
		ТекСтрока = Элементы.СписокМаршрутныеЛисты.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "УПД_Маршрут");
	ИначеЕсли Элементы.ГруппаСтраницыДокументы.ТекущаяСтраница.Имя = "ГруппаДоставкаНаТТ" Тогда
		ТекСтрока = Элементы.СписокДоставкаНаТТ.ТекущаяСтрока;
		Если ТекСтрока = Неопределено Тогда
			Возврат;
		КонецЕсли;	
		
		РаботаСоСканеромКлиент.СканироватьИПоказатьДиалогПросмотра(Объект, ТекСтрока.УникальныйИдентификатор(), ЭтаФорма, Истина, "УПД_ДоставкаНаТТ");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрУПД_Общий(Команда)
	
	Если ЗначениеЗаполнено(УПД_Общий) Тогда
		
		СтруктураКартинки = ПолучитьРеквизитыСохраненияКартинки(УПД_Общий);
		ИмяФайла = ПолучитьИмяВременногоФайла(СтруктураКартинки.Расширение);
		Если ПолучитьФайл(СтруктураКартинки.АдресКартинки, ИмяФайла, Ложь) = Истина Тогда
			ЗапуститьПриложение(ИмяФайла);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПоступленияДопРасходыПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ВыбранаСтрокаОбщая", 0.2, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыДокументыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ВыбранаСтрокаОбщая();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокМаршрутныеЛистыПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокМаршрутныеЛистыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокМаршрутныеЛистыПриАктивизацииСтроки(Элемент)
	
	ВыбранаСтрокаОбщая();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДоставкаНаТТВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДоставкаНаТТПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокДоставкаНаТТПриАктивизацииСтроки(Элемент)
	
	ВыбранаСтрокаОбщая();
	
КонецПроцедуры
