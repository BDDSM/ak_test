
&НаКлиенте
Процедура Далее(Команда)
	Если Не ЗначениеЗаполнено(Объект.Логин) Тогда
	    Сообщить("Введите ИНН");
		Возврат;
	КонецЕсли; 
	Если ВведенПароль() Тогда
	    ПараметрыФормы = Новый Структура("Логин, Пароль",Объект.Логин, Объект.Пароль);
	    ОткрытьФорму(ПолучитьПолноеИмяФормы("ФормаСверкиУправляемая"), ПараметрыФормы, ЭтаФорма);
		Закрыть();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте 
Функция ПолучитьПолноеИмяФормы(ИмяФормы)

    СимволТочка = ".";
    ПозицияТочки = СтрДлина(ЭтаФорма.ИмяФормы);
    Пока Сред(ЭтаФорма.ИмяФормы, ПозицияТочки, 1) <> СимволТочка Цикл ПозицияТочки = ПозицияТочки - 1; КонецЦикла; //
    Возврат Лев(ЭтаФорма.ИмяФормы, ПозицияТочки) + ИмяФормы;

КонецФункции

&НаСервере
Функция ВведенПароль()
	//Возврат Истина;
	Об=РеквизитФормыВЗначение("Объект");
	
	Прокси = Об.ПолучитьПрокси();
	
	Если Прокси = Неопределено Тогда
		Сообщить(НСтр("ru='Не удалось установить соединение с информационной базой.';en='Could not establish a connection to the database.'"));
		Возврат Ложь;
	КонецЕсли;
	
	СтруктураДанных = Новый Структура("ИНН, Пароль", Объект.Логин, Объект.Пароль);
	ДанныеМП = Новый ХранилищеЗначения(СтруктураДанных, Новый СжатиеДанных(9));
	
	Попытка 
		СтруктураОтвета = Прокси.ВведенПароль(ДанныеМП);	
	Исключение
		Сообщить("Не удалось получить данные по причине: " + ОписаниеОшибки());
		Возврат Ложь;
	КонецПопытки; 
	Если СтруктураОтвета Тогда
		Возврат Истина;
	Иначе
		Сообщить ("Не удалось авторизоваться в центральной базе" );
		Возврат Ложь;
	КонецЕсли; 	
КонецФункции 

&НаСервере
Процедура СохранитьНастройки()
	ХранилищеОбщихНастроек.Сохранить("ИННДляОбработкиАктСверки",,Объект.Логин);
	СоотПароль=Новый Соответствие;
	СоотПароль.Вставить(Объект.Логин, Объект.Пароль);
	ХранилищеОбщихНастроек.Сохранить("ПарольДляОбработкиАктСверки",,СоотПароль);	
КонецПроцедуры
//  
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Организации.ИНН
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	НЕ Организации.ПометкаУдаления";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Элементы.Логин.СписокВыбора.Добавить(ВыборкаДетальныеЗаписи.ИНН);
		Если ВыборкаДетальныеЗаписи.Количество()=1 Тогда
		     Объект.Логин=ВыборкаДетальныеЗаписи.ИНН;
		КонецЕсли; 
	КонецЦикла;
	ИНН=ХранилищеОбщихНастроек.Загрузить("ИННДляОбработкиАктСверки");
	Если ЗначениеЗаполнено(ИНН) Тогда
		Объект.Логин=ИНН;	
	КонецЕсли;
	СоотПароль=ХранилищеОбщихНастроек.Загрузить("ПарольДляОбработкиАктСверки");
	Если ЗначениеЗаполнено(СоотПароль) Тогда
		Объект.Пароль=СоотПароль[Объект.Логин];	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьНастройки();
КонецПроцедуры

