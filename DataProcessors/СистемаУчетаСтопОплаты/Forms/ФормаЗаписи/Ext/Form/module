Перем СЗ_РуководителиСтопОплаты;
Перем ФинМенеджер;
Перем ТекПользователь;
Перем ИсходнаяСтопОплата, ИсходнаяПодтверждено;
Перем УчёткаДляНастройки, Почта;
Перем АдресОтправки;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Проверяем контрагента
	Отказ = ПроверкаКонтрагента();
	
	// По просьбе добавляю сообщение, если ни один флаг не проставлен
	Если не СтопОплатаЗаявка и не СтопОплатаОтмена и не ПодтвержденаЗаявка и не ПодтвержденаОтмена Тогда
		Если Вопрос("Ни один флаг не проставлен. Вы уверены, что хотите сохранить запись?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	// Получаем флаги
	СтопОплата = Ложь;
	Подтверждено = Ложь;
	Если ПодтвержденаОтмена Тогда
	ИначеЕсли СтопОплатаОтмена Тогда
		Подтверждено = Истина;
	ИначеЕсли ПодтвержденаЗаявка Тогда
		СтопОплата = Истина;
		Подтверждено = Истина;
	ИначеЕсли СтопОплатаЗаявка Тогда
		СтопОплата = Истина;
	КонецЕсли;
	// Проверяем необходимое заполнение при установке флагов
	Если СтопОплата Тогда
		Если не ЗначениеЗаполнено(Руководитель) Тогда
			Сообщить("Необходимо заполнить руководителя!");
			Отказ = Истина;
		КонецЕсли;
		Если не ЗначениеЗаполнено(Комментарий) Тогда
			Сообщить("Необходимо заполнить комментарий!");
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	Если Отказ = Истина Тогда
		Сообщить("Сохранение не выполнено!");
		Возврат;
	КонецЕсли;
	
	//Если ставят стоп оплату - запомним кто
	Если ИсходнаяСтопОплата <> СтопОплата Тогда
		//Если СтопОплата = Истина Тогда
			УстановилВСтопОплату = ТекПользователь;
		//КонецЕсли;
	КонецЕсли;
	// Записываем данные в регистр
	НаборЗаписей = РегистрыСведений.СведенияОСтопОплате.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Контрагент.Установить(Контрагент);
	//+++АК sils 06.09.2018 ИП-00019634
	НаборЗаписей.Отбор.Организация.Установить(Организация);
	//---АК
	НаборЗаписей.Отбор.Период.Установить(ДатаУчета);
	НаборЗаписей.Прочитать();
	НаборЗаписей.Очистить();
	
	НовЗапись = НаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(НовЗапись, ЭтаФорма);
	НовЗапись.Период = ДатаУчета;
	
	//+++АК ZHAS 16-09-17 ИП-00015200.03
	GUID 			= Строка(Новый УникальныйИдентификатор);
	НовЗапись.GUID 	= GUID;
	//---АК ZHAS 16-09-17 ИП-00015200.03
	
	
	Попытка
		НаборЗаписей.Записать();
	Исключение
		Сообщить("Нет доступа к регистру сведений! Изменения не записаны!");
		Возврат;
	КонецПопытки;
	
	//Отправляем письма
	Если ИсходнаяСтопОплата <> СтопОплата Тогда
		Если СтопОплата = Истина и Подтверждено = Ложь Тогда
			
			//---АК ZHAS 16-09-17 ИП-00015200.03
			РассылкаПриУстановкеСтопОплаты(, GUID);
			//---АК ZHAS 16-09-17 ИП-00015200.03
			
		ИначеЕсли СтопОплата = Ложь и Подтверждено = Истина Тогда
			
			//---АК ZHAS 16-09-17 ИП-00015200.03
			РассылкаПриСнятииСтопОплаты(, GUID);
			//---АК ZHAS 16-09-17 ИП-00015200.03
			
		КонецЕсли;
	КонецЕсли;
	Если ИсходнаяПодтверждено <> Подтверждено Тогда
		Если СтопОплата = Истина и Подтверждено = Истина Тогда
			
			//---АК ZHAS 16-09-17 ИП-00015200.03
			РассылкаПриУстановкеСтопОплаты(Истина, GUID);
			//---АК ZHAS 16-09-17 ИП-00015200.03
			
		ИначеЕсли СтопОплата = Ложь и Подтверждено = Ложь Тогда
			
			//---АК ZHAS 16-09-17 ИП-00015200.03
			РассылкаПриСнятииСтопОплаты(Истина, GUID);
			//---АК ZHAS 16-09-17 ИП-00015200.03
			
		КонецЕсли;
	КонецЕсли;
	
	//+++АК sils 06.09.2018 ИП-00019634
	//ЭтаФорма.Закрыть(Контрагент);
	ВыбранныеДанные = Новый Структура;
	ВыбранныеДанные.Вставить("Контрагент", Контрагент);
	ВыбранныеДанные.Вставить("Организация", Организация);
	ЭтаФорма.Закрыть(ВыбранныеДанные);
	//---АК
КонецПроцедуры

//---АК ZHAS 16-09-17 ИП-00015200.03
Функция АкцептЗаявкоРежимТеста() Экспорт 	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыДляПодстановкиВЗаявки.Индекс
	|ИЗ
	|	РегистрСведений.ПараметрыДляПодстановкиВЗаявки КАК ПараметрыДляПодстановкиВЗаявки
	|ГДЕ
	|	ПараметрыДляПодстановкиВЗаявки.Индекс = 115";
	Возврат НЕ Запрос.Выполнить().Пустой();
КонецФункции
//---АК ZHAS 16-09-17 ИП-00015200.03


Процедура ПриОткрытии()
	ИсходнаяСтопОплата = СтопОплата;
	ИсходнаяПодтверждено = Подтверждено;
	Если СтопОплата и не Подтверждено Тогда
		СтопОплатаЗаявка = Истина;
	ИначеЕсли СтопОплата и Подтверждено Тогда
		СтопОплатаЗаявка = Истина;
		ПодтвержденаЗаявка = Истина;
	ИначеЕсли не СтопОплата и Подтверждено Тогда
		СтопОплатаЗаявка = Истина;
		ПодтвержденаЗаявка = Истина;
		СтопОплатаОтмена = Истина;
	КонецЕсли;
	ОбновитьСписокРуководителей();
	ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	ФинМенеджер = ПроверкаНаМенеждера();
	
	ВыбрЗначение = СЗ_РуководителиСтопОплаты.НайтиПоЗначению(Руководитель);
	Если ВыбрЗначение <> Неопределено Тогда
		Руководитель = ВыбрЗначение.Значение;
	КонецЕсли;
	
	УстановитьСтатус();
	УстановитьДоступность();
	
	АдресОтправки = "no-reply@vkusvill.ru";
	Почта = Новый ИнтернетПочта;   	
	УчёткаДляНастройки = МеханизмОбменаСообщениями.ПолучитьУчетнуюЗаписьПоАдресу(АдресОтправки);	
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчёткаДляНастройки);
	Почта.Подключиться(Профиль, ПротоколИнтернетПочты.IMAP);
КонецПроцедуры

//**************************************************************************************

// При установке флага "Стоп оплата" должно отправляться письмо:
// руководителю,
// если установил флаг технолог - бухгалтеру,
// если установил бухгалтер - технологу и финансовому менеджеру,
// тем, у кого в регистре сведений "РуководителиСтопОплаты" стоит флаг "РассылкаСтопОплата".
Процедура РассылкаПриУстановкеСтопОплаты(флПодтверждение = Ложь, GUID)
	Сообщить("Установка флага стоп оплаты контрагенту " + СокрЛП(Контрагент) + ":");
	
	Тема = "Установка стоп оплаты по " + СокрЛП(Контрагент);
	Если не флПодтверждение Тогда
		ТекстПисьма = "По контрагенту " + СокрЛП(Контрагент) + " подана заявка на установку стоп оплаты. Ожидается подтверждение." + Символы.ПС +
			"Установил в стоп оплату " + СокрЛП(УстановилВСтопОплату) + " " + ТекущаяДата() + Символы.ПС + 
			"Причина стоп-оплаты: " + СокрЛП(Комментарий) + Символы.ПС + 
			"Руководитель: " + Руководитель + Символы.ПС + 
			"Основной бухгалтер: " + ОсновнойБухгалтерПокупателя + Символы.ПС + 
			"Основной менеджер: " + ОсновнойМенеджерПокупателя;
		//+++АК sils 06.09.2018 ИП-00019634
		Если ЗначениеЗаполнено(Организация) Тогда
			Тема = Тема + " ( Организация " + СокрЛП(Организация) + ")";
			ТекстПисьма = СтрЗаменить(ТекстПисьма, " подана заявка", "(Организация " + СокрЛП(Организация) + ") подана заявка");
		КонецЕсли;
		//---АК
	Иначе
		ТекстПисьма = "По контрагенту " + СокрЛП(Контрагент) + " подтверждена установка стоп оплаты." + Символы.ПС + 
			"Установил в стоп оплату " + СокрЛП(УстановилВСтопОплату) + " " + ТекущаяДата() + Символы.ПС + 
			"Причина стоп-оплаты: " + СокрЛП(Комментарий) + Символы.ПС + 
			"Руководитель: " + Руководитель + Символы.ПС + 
			"Основной бухгалтер: " + ОсновнойБухгалтерПокупателя + Символы.ПС + 
			"Основной менеджер: " + ОсновнойМенеджерПокупателя;
		//+++АК sils 06.09.2018 ИП-00019634
		Если ЗначениеЗаполнено(Организация) Тогда
			Тема = Тема + " ( Организация " + СокрЛП(Организация) + ")";
			ТекстПисьма = СтрЗаменить(ТекстПисьма, " подтверждена установка", "(Организация " + СокрЛП(Организация) + ") подтверждена установка");
		КонецЕсли;
		//---АК
	КонецЕсли;
	
	СЗ = Новый СписокЗначений;
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Сотрудник");
	ТЗ.Колонки.Добавить("ЭлАдрес");
	
	//+++АК ZHAS 16-09-17 ИП-00015200.03
	ТЗ.Колонки.Добавить("ПодтверждениеЧерезПочту");
	//+++АК ZHAS 16-09-17 ИП-00015200.03

	
	// Отправка письма руководителю, если не текущий пользователь
	Если Руководитель <> ТекПользователь Тогда	
		НовСтр = ТЗ.Добавить();
		НовСтр.Сотрудник = Руководитель;
		НовСтр.ЭлАдрес = СокрЛП(ЭлАдрес);
	КонецЕсли;
	
	// Отправка письма ответственным менеджеру и буху, если не текущий пользователь
	Если ОсновнойМенеджерПокупателя = ТекПользователь Тогда
		Если не ЗначениеЗаполнено(ОсновнойБухгалтерПокупателя) Тогда
			Сообщить("У контрагента не заполнен основной бухгалтер!");
		ИначеЕсли не ЗначениеЗаполнено(ОсновнойБухгалтерПокупателя.ФизЛицо) Тогда
			Сообщить("Не получилось найти эл.адрес " + СокрЛП(ОсновнойБухгалтерПокупателя));
		Иначе
			СЗ.Добавить(ОсновнойБухгалтерПокупателя.ФизЛицо);
		КонецЕсли;
	ИначеЕсли ОсновнойБухгалтерПокупателя = ТекПользователь Тогда
		Если не ЗначениеЗаполнено(ОсновнойМенеджерПокупателя) Тогда
			Сообщить("У контрагента не заполнен основной менеджер!");
		ИначеЕсли не ЗначениеЗаполнено(ОсновнойМенеджерПокупателя.ФизЛицо) Тогда
			Сообщить("Не получилось найти эл.адрес " + СокрЛП(ОсновнойМенеджерПокупателя));
		Иначе
			СЗ.Добавить(ОсновнойМенеджерПокупателя.ФизЛицо);
		КонецЕсли;
	Иначе
		Если не ЗначениеЗаполнено(ОсновнойБухгалтерПокупателя) Тогда
			Сообщить("У контрагента не заполнен основной бухгалтер!");
		ИначеЕсли не ЗначениеЗаполнено(ОсновнойБухгалтерПокупателя.ФизЛицо) Тогда
			Сообщить("Не получилось найти эл.адрес " + СокрЛП(ОсновнойБухгалтерПокупателя));
		Иначе
			СЗ.Добавить(ОсновнойБухгалтерПокупателя.ФизЛицо);
		КонецЕсли;
		Если не ЗначениеЗаполнено(ОсновнойМенеджерПокупателя) Тогда
			Сообщить("У контрагента не заполнен основной менеджер!");
		ИначеЕсли не ЗначениеЗаполнено(ОсновнойМенеджерПокупателя.ФизЛицо) Тогда
			Сообщить("Не получилось найти эл.адрес " + СокрЛП(ОсновнойМенеджерПокупателя));
		Иначе
			СЗ.Добавить(ОсновнойМенеджерПокупателя.ФизЛицо);
		КонецЕсли;
	КонецЕсли;
	
	// Находим их адреса и в таблицу ТЗ
	ТЗ1 = НайтиЭлАдрес(СЗ);
	Для каждого стр из ТЗ1 Цикл
		НовСтр = ТЗ.Добавить();
		НовСтр.Сотрудник = стр.Сотрудник;
		НовСтр.ЭлАдрес = СокрЛП(стр.ЭлАдрес);
	КонецЦикла;
	
	//Добавляем туда из регистра всех, у кого стоит флаг рассылки и фин.менеджеру (кроме текущего пользователя)
	Набор = РегистрыСведений.РуководителиСтопОплаты.СоздатьНаборЗаписей();
	Набор.Прочитать();
	Для каждого стр из Набор Цикл
		Если стр.Руководитель = ТекПользователь Тогда
			Продолжить;
		КонецЕсли;
		стр1 = ТЗ.Найти(стр.Сотрудник);
		Если стр1 <> Неопределено Тогда
			стр1.ЭлАдрес = СокрЛП(стр.ЭлАдрес);
			Продолжить;
		КонецЕсли;
		
		//+++АК ZHAS 19-10-17 ИП-00015200.03 - Меняем Алгоритм
		//Старый Алгоритм +
		//Если стр.ФинМенеджер Тогда
		//	НовСтр = ТЗ.Добавить();
		//	НовСтр.Сотрудник = стр.Сотрудник;
		//	НовСтр.ЭлАдрес = СокрЛП(стр.ЭлАдрес);
		//	
		//	//+++АК ZHAS 16-09-17 ИП-00015200.03
		//	//НовСтр.ПодтверждениеЧерезПочту = Стр.ПодтверждениеЧерезПочту;
		//	//+++АК ZHAS 16-09-17 ИП-00015200.03

		//ИначеЕсли стр.РассылкаСтопОплата Тогда
		//	НовСтр = ТЗ.Добавить();
		//	НовСтр.Сотрудник = стр.Сотрудник;
		//	НовСтр.ЭлАдрес = СокрЛП(стр.ЭлАдрес);
		//	
		//	Если стр.Руководитель Тогда
		//		//+++АК ZHAS 16-09-17 ИП-00015200.03
		//		НовСтр.ПодтверждениеЧерезПочту = Стр.ПодтверждениеЧерезПочту;
		//		//+++АК ZHAS 16-09-17 ИП-00015200.03
		//	КонецЕсли;

		//КонецЕсли;
		//Старый алгоритм -
		
		
		//Новый алгоритм +
		
		Если стр.РассылкаСтопОплата Тогда
			НовСтр = ТЗ.Добавить();
			НовСтр.Сотрудник = стр.Сотрудник;
			НовСтр.ЭлАдрес = СокрЛП(стр.ЭлАдрес);
			Если стр.Руководитель Тогда
				НовСтр.ПодтверждениеЧерезПочту = Стр.ПодтверждениеЧерезПочту;
			КонецЕсли;
		ИначеЕсли стр.ФинМенеджер Тогда
			НовСтр = ТЗ.Добавить();
			НовСтр.Сотрудник = стр.Сотрудник;
			НовСтр.ЭлАдрес = СокрЛП(стр.ЭлАдрес);
		//ИначеЕсли стр.РассылкаСтопОплата Тогда
			//НовСтр = ТЗ.Добавить();
			//НовСтр.Сотрудник = стр.Сотрудник;
			//НовСтр.ЭлАдрес = СокрЛП(стр.ЭлАдрес);
			//Если стр.Руководитель Тогда
			//	НовСтр.ПодтверждениеЧерезПочту = Стр.ПодтверждениеЧерезПочту;
			//КонецЕсли;
		КонецЕсли;
		//+++АК ZHAS 19-10-17 ИП-00015200.03 - Меняем Алгоритм
		//Новый алгоритм -
		
		
		
		
	КонецЦикла;
	//+++АК ZHAS 16-09-17 ИП-00015200.03
	//ТЗ.Свернуть("Сотрудник, ЭлАдрес", ""); //Ранее было
	ТЗ.Свернуть("Сотрудник, ЭлАдрес, ПодтверждениеЧерезПочту", "");
	//+++АК ZHAS 16-09-17 ИП-00015200.03

	
	// Отправляем письма и сообщаем у кого адрес не найден
	Для каждого стр из ТЗ Цикл
		ТекЭлем = СЗ.НайтиПоЗначению(стр.Сотрудник);
		Если ТекЭлем <> Неопределено Тогда
			СЗ.Удалить(ТекЭлем);
		КонецЕсли;
				
		//+++АК ZHAS 16-09-17 ИП-00015200.03
		ИспользоватьПодтверждениеЧерезПочту = Ложь;
		Попытка
			ИспользоватьПодтверждениеЧерезПочту = Стр.ПодтверждениеЧерезПочту;
			Если ИспользоватьПодтверждениеЧерезПочту = Неопределено Тогда
				ИспользоватьПодтверждениеЧерезПочту = Ложь;
			КонецЕсли;
		Исключение
		КонецПопытки;
		//ОтправкаПисьма(Тема, СокрЛП(стр.ЭлАдрес), ТекстПисьма, стр.Сотрудник); //Старый код
//!!!!!		ОтправкаПисьма(Тема, СокрЛП(стр.ЭлАдрес), ТекстПисьма, стр.Сотрудник, ИспользоватьПодтверждениеЧерезПочту, GUID, флПодтверждение)
		//+++АК ZHAS 16-09-17 ИП-00015200.03

	КонецЦикла;
	Для каждого стр из СЗ Цикл
		Сообщить("Не получилось найти эл.адрес " + СокрЛП(стр.Значение));
	КонецЦикла;
	
	//-----МОДИФИКАЦИЯ - ОТПРАВКА НА ПОДТВЕРЖДЕНИЕ ЧЕРЕЗ ПОЧТУ + КНОПКИ
	
	Если СтопОплатаЗаявка И НЕ ПодтвержденаЗаявка ИЛИ СтопОплатаОтмена И НЕ ПодтвержденаОтмена Тогда
		ОтправкаПисьма_КНОПКИ(Тема, Неопределено, ТекстПисьма, Неопределено, , GUID);
	КонецЕсли;
	
	
	//-----МОДИФИКАЦИЯ - ОТПРАВКА НА ПОДТВЕРЖДЕНИЕ ЧЕРЕЗ ПОЧТУ + КНОПКИ
	
	
	
	
	
КонецПроцедуры

//+++АК ZHAS 16-09-17 ИП-00015200.03
Процедура ОтправкаПисьма_КНОПКИ(Тема, EmailАдрес, ТекстПисьма, ФизЛицо, ИспользоватьПодтверждениеЧерезПочту = Ложь, GUID = "", флПодтверждение = ЛОЖЬ)
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РуководителиСтопОплаты.Сотрудник,
		|	РуководителиСтопОплаты.ЭлАдрес,
		|	РуководителиСтопОплаты.ФинМенеджер,
		|	РуководителиСтопОплаты.Руководитель,
		|	РуководителиСтопОплаты.РассылкаСтопОплата,
		|	РуководителиСтопОплаты.ПодтверждениеЧерезПочту
		|ИЗ
		|	РегистрСведений.РуководителиСтопОплаты КАК РуководителиСтопОплаты
		|ГДЕ
		|	РуководителиСтопОплаты.Сотрудник = &Сотрудник
		|	И РуководителиСтопОплаты.РассылкаСтопОплата
		|	И РуководителиСтопОплаты.ПодтверждениеЧерезПочту";
	
	//Запрос.УстановитьПараметр("ПодтверждениеЧерезПочту", Руководитель);
	//Запрос.УстановитьПараметр("РассылкаСтопОплата", РассылкаСтопОплата);
	Запрос.УстановитьПараметр("Сотрудник", Руководитель);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
		EmailАдрес = ВыборкаДетальныеЗаписи.ЭлАдрес;
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	Если СокрЛП(EmailАдрес) = "" Тогда
		Сообщить("Не найден эл.адрес " + ФизЛицо);
		Возврат;
	КонецЕсли;
	Письмо = Новый ИнтернетПочтовоеСообщение;
	Письмо.Тема = Тема;
	Письмо.ИмяОтправителя = СокрЛП(УчёткаДляНастройки);
	Письмо.Отправитель.Адрес = АдресОтправки;
	Если АкцептЗаявкоРежимТеста() Тогда
		//СписокКому 									= Новый СписокЗначений;
		//EmailАдрес = "zsergei2000@gmail.com";
	КонецЕсли;
	Эл1 = "zsergei2000@gmail.com";
	СсылкаАкцептант								= ПараметрыСеанса.ТекущийПользователь;
	СписокКому 									= Новый СписокЗначений;
	Если EmailАдрес <> "" Тогда
		СпАдресов								= Новый СписокЗначений;
		МассивАдресов							= Справочники.Контрагенты.РазложитьСтрокуВМассивПодстрок(EmailАдрес,";");	
		Для каждого Эл Из МассивАдресов Цикл
			Если ЗначениеЗаполнено(Эл) Тогда
				СписокКому.Добавить(СокрЛП(Эл));
			КонецЕсли; 
		КонецЦикла; 
	Иначе
		СообщениеПоОшибке = НСтр("ru = 'Письмо не отправлено! Не заполнен адрес электронной почты %Выборка_Акцептант%'");
		Сообщить(СтрЗаменить(СообщениеПоОшибке, "%Выборка_Акцептант%", СсылкаАкцептант));
	КонецЕсли;
	СписокКому.Добавить(СокрЛП(Эл1));
	МногострочнаяСтрока = СокрЛП(EmailАдрес);
	МногострочнаяСтрока = СтрЗаменить(МногострочнаяСтрока, ",", Символы.ПС);
	МногострочнаяСтрока = СтрЗаменить(МногострочнаяСтрока, ";", Символы.ПС);
	
	Для й = 1 По СтрЧислоСтрок(МногострочнаяСтрока) Цикл;
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = СокрЛП(СтрПолучитьСтроку(МногострочнаяСтрока, й));
	КонецЦикла;

	ID_MESSAGE 									= Строка(Новый УникальныйИдентификатор);
	TYPE_MESSAGE                                = 5;
	Если НЕ СтопОплатаОтмена Тогда
		TYPE_MESSAGE                             = 6;
	КонецЕсли;
	GUID_Заявки									= GUID;
	Объект_Ссылка								= Неопределено;
	Таблица 									= СтрЗаменить(ТекстПисьма, Символы.ПС, "<br>") + "<br><br>";
	ТекстСообщения = Письмо.Тексты.Добавить(ТекстПисьма);
	ТекстСообщения.ТипТекста 					= ТипТекстаПочтовогоСообщения.HTML;
	
	
	
	
		//+++АК ZHAS 16-09-17 ИП-00015200.03
	//Если ИспользоватьПодтверждениеЧерезПочту Тогда
		//ТекстСообщения.ТипТекста 					= ТипТекстаПочтовогоСообщения.HTML;
		ID_MESSAGE 									= Строка(Новый УникальныйИдентификатор);
		TYPE_MESSAGE                                = 5;
		Если НЕ СтопОплатаОтмена Тогда
			TYPE_MESSAGE                             = 6;
		КонецЕсли;
		GUID_Заявки									= GUID;
		Объект_Ссылка								= Неопределено;
		
		//пТекстСсылкиНаКнопкуПодтвердить 			= "mailto:vkusvill.333@gmail.com?reply-to=vkusvill.333@gmail.com&subject=Акцепт стоп оплаты" + "&body=GUID%20" + GUID_Заявки + "%20ID_MESSAGE%20" + ID_MESSAGE   + "%20TYPE_MESSAGE%20" + TYPE_MESSAGE  + "%20Акцептировано";
		//пТекстСсылкиНаКнопкуОтменитьПодтверждение 	= "mailto:vkusvill.333@gmail.com?reply-to=vkusvill.333@gmail.com&subject=Акцепт стоп оплаты" + "&body=GUID%20" + GUID_Заявки + "%20ID_MESSAGE%20" + ID_MESSAGE   + "%20TYPE_MESSAGE%20" + TYPE_MESSAGE  + "%20Отклонено";
		//
		//пТекстКнопкиПодтвердить 					= "<br><br><a href=""" + пТекстСсылкиНаКнопкуПодтвердить + """><b>Акцептовать</b></a><br><br>";
		//пТекстКнопкиОтменитьПодтверждение 			= "<a href=""" + пТекстСсылкиНаКнопкуОтменитьПодтверждение + """><b>Отклонить</b></a><br><br>";
		Таблица 									= СтрЗаменить(ТекстПисьма, Символы.ПС, "<br>") + "<br><br>";
		//Таблица									= ТекстПисьма;

		//УправлениеЭлектроннойПочтой.ОтправитьЗаявкуНаПодтверждение(Тема, Таблица, НомерЗаявки, СписокКому, GUID_Заявки, ID_MESSAGE, TYPE_MESSAGE, Адрес, СсылкаАкцептант, УчетнаяЗапись, Объект_Ссылка)

		
		//Если ИспользоватьПодтверждениеЧерезПочту И НЕ флПодтверждение Тогда
			//УправлениеЭлектроннойПочтой.ОтправитьЗаявкуНаПодтверждение(Тема, Таблица, , СписокКому, GUID_Заявки, ID_MESSAGE, TYPE_MESSAGE, EmailАдрес, СсылкаАкцептант, Неопределено, Объект_Ссылка);
		//Иначе

	//КонецЕсли;
	//+++АК ZHAS 16-09-17 ИП-00015200.03

	
	
	
	Попытка
		//Почта.Послать(Письмо);
		//Если ИспользоватьПодтверждениеЧерезПочту И НЕ флПодтверждение Тогда
			УправлениеЭлектроннойПочтой.ОтправитьЗаявкуНаПодтверждение(Тема, Таблица, , СписокКому, GUID_Заявки, ID_MESSAGE, TYPE_MESSAGE, EmailАдрес, СсылкаАкцептант, Неопределено, Объект_Ссылка);
		//Иначе
		Сообщить("Письмо отправлено " +СокрЛП(ФизЛицо) + ".");
	Исключение
		Сообщить("Письмо не отправлено " +СокрЛП(ФизЛицо) + ". " + ОписаниеОшибки());
	КонецПопытки;		
КонецПроцедуры
//+++АК ZHAS 16-09-17 ИП-00015200.03

// При снятии флага "Стоп оплата" должно отправляться письмо:
// финансовому менеджеру
// если снял технолог - бухгалтеру
// если снял бухгалтер - технологу
Процедура РассылкаПриСнятииСтопОплаты(флПодтверждение = Ложь, GUID)
	Сообщить("Снятие флага стоп оплаты контрагенту " + СокрЛП(Контрагент) + ":");
	
	Тема = "Снятие стоп оплаты по " + СокрЛП(Контрагент);
	Если не флПодтверждение Тогда
		ТекстПисьма = "По контрагенту " + СокрЛП(Контрагент) + " подана заявка на снятие стоп оплаты. Ождидается подтверждение." + Символы.ПС + 
			"Подал заявку на снятие стоп оплаты " + СокрЛП(УстановилВСтопОплату) + " " + ТекущаяДата() + Символы.ПС + 
			"Причина стоп-оплаты: " + СокрЛП(Комментарий) + Символы.ПС + 
			"Руководитель: " + Руководитель + Символы.ПС + 
			"Основной бухгалтер: " + ОсновнойБухгалтерПокупателя + Символы.ПС + 
			"Основной менеджер: " + ОсновнойМенеджерПокупателя;
		//+++АК sils 06.09.2018 ИП-00019634
		Если ЗначениеЗаполнено(Организация) Тогда
			Тема = СтрЗаменить(Тема, ":", " ( Организация " + СокрЛП(Организация) + "):");
			ТекстПисьма = СтрЗаменить(ТекстПисьма, " подана заявка", "(Организация " + СокрЛП(Организация) + ") подана заявка");
		КонецЕсли;
		//---АК
	Иначе
		ТекстПисьма = "По контрагенту " + СокрЛП(Контрагент) + " подтверждено снятие стоп оплаты." + Символы.ПС + 
			"Подал заявку на снятие стоп оплаты " + СокрЛП(УстановилВСтопОплату) + " " + ТекущаяДата() + Символы.ПС + 
			"Причина стоп-оплаты: " + СокрЛП(Комментарий) + Символы.ПС + 
			"Руководитель: " + Руководитель + Символы.ПС + 
			"Основной бухгалтер: " + ОсновнойБухгалтерПокупателя + Символы.ПС + 
			"Основной менеджер: " + ОсновнойМенеджерПокупателя;
		//+++АК sils 06.09.2018 ИП-00019634
		Если ЗначениеЗаполнено(Организация) Тогда
			Тема = СтрЗаменить(Тема, ":", " ( Организация " + СокрЛП(Организация) + "):");
			ТекстПисьма = СтрЗаменить(ТекстПисьма, " подтверждено снятие", "(Организация " + СокрЛП(Организация) + ") подтверждено снятие");
		КонецЕсли;
		//---АК
	КонецЕсли;
	
	СЗ = Новый СписокЗначений;
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Сотрудник");
	ТЗ.Колонки.Добавить("ЭлАдрес");
	
	//+++АК ZHAS 16-09-17 ИП-00015200.03
	ТЗ.Колонки.Добавить("ПодтверждениеЧерезПочту");
	//+++АК ZHAS 16-09-17 ИП-00015200.03
	
	// Отправка письма руководителю, если не текущий пользователь
	Если Руководитель <> ТекПользователь Тогда	
		НовСтр = ТЗ.Добавить();
		НовСтр.Сотрудник = Руководитель;
		НовСтр.ЭлАдрес = СокрЛП(ЭлАдрес);
	КонецЕсли;
	
	// Отправка письма ответственным менеджеру и буху, если не текущий пользователь
	Если ОсновнойМенеджерПокупателя = ТекПользователь Тогда
		Если не ЗначениеЗаполнено(ОсновнойБухгалтерПокупателя) Тогда
			Сообщить("У контрагента не заполнен основной бухгалтер!");
		ИначеЕсли не ЗначениеЗаполнено(ОсновнойБухгалтерПокупателя.ФизЛицо) Тогда
			Сообщить("Не получилось найти эл.адрес " + СокрЛП(ОсновнойБухгалтерПокупателя));
		Иначе
			СЗ.Добавить(ОсновнойБухгалтерПокупателя.ФизЛицо);
		КонецЕсли;
	ИначеЕсли ОсновнойБухгалтерПокупателя = ТекПользователь Тогда
		Если не ЗначениеЗаполнено(ОсновнойМенеджерПокупателя) Тогда
			Сообщить("У контрагента не заполнен основной менеджер!");
		ИначеЕсли не ЗначениеЗаполнено(ОсновнойМенеджерПокупателя.ФизЛицо) Тогда
			Сообщить("Не получилось найти эл.адрес " + СокрЛП(ОсновнойМенеджерПокупателя));
		Иначе
			СЗ.Добавить(ОсновнойМенеджерПокупателя.ФизЛицо);
		КонецЕсли;
	Иначе
		Если не ЗначениеЗаполнено(ОсновнойБухгалтерПокупателя) Тогда
			Сообщить("У контрагента не заполнен основной бухгалтер!");
		ИначеЕсли не ЗначениеЗаполнено(ОсновнойБухгалтерПокупателя.ФизЛицо) Тогда
			Сообщить("Не получилось найти эл.адрес " + СокрЛП(ОсновнойБухгалтерПокупателя));
		Иначе
			СЗ.Добавить(ОсновнойБухгалтерПокупателя.ФизЛицо);
		КонецЕсли;
		Если не ЗначениеЗаполнено(ОсновнойМенеджерПокупателя) Тогда
			Сообщить("У контрагента не заполнен основной менеджер!");
		ИначеЕсли не ЗначениеЗаполнено(ОсновнойМенеджерПокупателя.ФизЛицо) Тогда
			Сообщить("Не получилось найти эл.адрес " + СокрЛП(ОсновнойМенеджерПокупателя));
		Иначе
			СЗ.Добавить(ОсновнойМенеджерПокупателя.ФизЛицо);
		КонецЕсли;
	КонецЕсли;
	
	// Находим их адреса и в таблицу ТЗ
	ТЗ1 = НайтиЭлАдрес(СЗ);
	Для каждого стр из ТЗ1 Цикл
		НовСтр = ТЗ.Добавить();
		НовСтр.Сотрудник = стр.Сотрудник;
		НовСтр.ЭлАдрес = СокрЛП(стр.ЭлАдрес);
	КонецЦикла;
	
	//Добавляем туда из регистра всех, у кого стоит флаг рассылки и фин.менеджеру (кроме текущего пользователя)
	Набор = РегистрыСведений.РуководителиСтопОплаты.СоздатьНаборЗаписей();
	Набор.Прочитать();
	
	Для каждого стр из Набор Цикл
		Если стр.Руководитель = ТекПользователь Тогда
			Продолжить;
		КонецЕсли;
		стр1 = ТЗ.Найти(стр.Сотрудник);
		Если стр1 <> Неопределено Тогда
			стр1.ЭлАдрес = СокрЛП(стр.ЭлАдрес);
			Продолжить;
		КонецЕсли;
		
		//+++АК ZHAS 19-10-17 ИП-00015200.03 - Меняем Алгоритм
		//Старый алгоритм +
		//Если стр.ФинМенеджер Тогда
		//	НовСтр = ТЗ.Добавить();
		//	НовСтр.Сотрудник = стр.Сотрудник;
		//	НовСтр.ЭлАдрес = СокрЛП(стр.ЭлАдрес);
		//	
		//	//+++АК ZHAS 16-09-17 ИП-00015200.03
		//	//НовСтр.ПодтверждениеЧерезПочту = Стр.ПодтверждениеЧерезПочту;
		//	//+++АК ZHAS 16-09-17 ИП-00015200.03
		//	
		//ИначеЕсли стр.РассылкаСтопОплата Тогда
		//	НовСтр = ТЗ.Добавить();
		//	НовСтр.Сотрудник = стр.Сотрудник;
		//	НовСтр.ЭлАдрес = СокрЛП(стр.ЭлАдрес);
		//	
		//	//НовСтр.ЭлАдрес = СокрЛП(стр.ЭлАдрес);
		//	
		//	Если стр.Руководитель Тогда
		//		//+++АК ZHAS 16-09-17 ИП-00015200.03
		//		НовСтр.ПодтверждениеЧерезПочту = Стр.ПодтверждениеЧерезПочту;
		//		//+++АК ZHAS 16-09-17 ИП-00015200.03
		//	КонецЕсли;

		//	
		//	//+++АК ZHAS 16-09-17 ИП-00015200.03
		//	//НовСтр.ПодтверждениеЧерезПочту = Стр.ПодтверждениеЧерезПочту;
		//	//+++АК ZHAS 16-09-17 ИП-00015200.03
		//	
		//КонецЕсли;
		//Старый алгоритм -
		
		//Новый алгоритм +
		
		Если стр.РассылкаСтопОплата Тогда
			НовСтр = ТЗ.Добавить();
			НовСтр.Сотрудник = стр.Сотрудник;
			НовСтр.ЭлАдрес = СокрЛП(стр.ЭлАдрес);
			Если стр.Руководитель Тогда
				НовСтр.ПодтверждениеЧерезПочту = Стр.ПодтверждениеЧерезПочту;
			КонецЕсли;
		ИначеЕсли стр.ФинМенеджер Тогда
			НовСтр = ТЗ.Добавить();
			НовСтр.Сотрудник = стр.Сотрудник;
			НовСтр.ЭлАдрес = СокрЛП(стр.ЭлАдрес);
		//ИначеЕсли стр.РассылкаСтопОплата Тогда
			//НовСтр = ТЗ.Добавить();
			//НовСтр.Сотрудник = стр.Сотрудник;
			//НовСтр.ЭлАдрес = СокрЛП(стр.ЭлАдрес);
			//Если стр.Руководитель Тогда
			//	НовСтр.ПодтверждениеЧерезПочту = Стр.ПодтверждениеЧерезПочту;
			//КонецЕсли;
		КонецЕсли;
		//+++АК ZHAS 19-10-17 ИП-00015200.03 - Меняем Алгоритм
		//Новый алгоритм -

		
		
	КонецЦикла;
	
	//+++АК ZHAS 16-09-17 ИП-00015200.03
	//ТЗ.Свернуть("Сотрудник, ЭлАдрес", ""); //Ранее было
	ТЗ.Свернуть("Сотрудник, ЭлАдрес, ПодтверждениеЧерезПочту", "");
	//+++АК ZHAS 16-09-17 ИП-00015200.03
	
	// Отправляем письма и сообщаем у кого адрес не найден
	Для каждого стр из ТЗ Цикл
		ТекЭлем = СЗ.НайтиПоЗначению(стр.Сотрудник);
		Если ТекЭлем <> Неопределено Тогда
			СЗ.Удалить(ТекЭлем);
		КонецЕсли;
		
		//+++АК ZHAS 16-09-17 ИП-00015200.03
		ИспользоватьПодтверждениеЧерезПочту = Ложь;
		Попытка
			ИспользоватьПодтверждениеЧерезПочту = Стр.ПодтверждениеЧерезПочту;
			Если ИспользоватьПодтверждениеЧерезПочту = Неопределено Тогда
				ИспользоватьПодтверждениеЧерезПочту = Ложь;
			КонецЕсли;
		Исключение
		КонецПопытки;
		
		//ОтправкаПисьма(Тема, СокрЛП(стр.ЭлАдрес), ТекстПисьма, стр.Сотрудник; //Старый код
////!!!		ОтправкаПисьма(Тема, СокрЛП(стр.ЭлАдрес), ТекстПисьма, стр.Сотрудник, ИспользоватьПодтверждениеЧерезПочту, GUID, флПодтверждение);
		//+++АК ZHAS 16-09-17 ИП-00015200.03
		
	КонецЦикла;
	Для каждого стр из СЗ Цикл
		Сообщить("Не удалось установить электронную почту " + стр.Значение + "!");
	КонецЦикла;
	
	//-----МОДИФИКАЦИЯ - ОТПРАВКА НА ПОДТВЕРЖДЕНИЕ ЧЕРЕЗ ПОЧТУ + КНОПКИ
	
	Если СтопОплатаЗаявка И НЕ ПодтвержденаЗаявка ИЛИ СтопОплатаОтмена И НЕ ПодтвержденаОтмена Тогда
		ОтправкаПисьма_КНОПКИ(Тема, Неопределено, ТекстПисьма, Неопределено, , GUID);
	КонецЕсли;
	
	
	//-----МОДИФИКАЦИЯ - ОТПРАВКА НА ПОДТВЕРЖДЕНИЕ ЧЕРЕЗ ПОЧТУ + КНОПКИ

КонецПроцедуры

Процедура ОтправкаПисьма(Тема, EmailАдрес, ТекстПисьма, ФизЛицо, ИспользоватьПодтверждениеЧерезПочту = Ложь, GUID = "", флПодтверждение = ЛОЖЬ)
	Если СокрЛП(EmailАдрес) = "" Тогда
		Сообщить("Не найден эл.адрес " + ФизЛицо);
		Возврат;
	КонецЕсли;
	Письмо = Новый ИнтернетПочтовоеСообщение;
	Письмо.Тема = Тема;
	Письмо.ИмяОтправителя = СокрЛП(УчёткаДляНастройки);
	Письмо.Отправитель.Адрес = АдресОтправки;
	
	//+++АК ZHAS 16-09-17 ИП-00015200.03
	//EmailАдрес = "tut.1c@icloud.com";//zhas...
	//EmailАдрес = "zsergei2000@gmail.com";
	
	
	
	Если АкцептЗаявкоРежимТеста() Тогда
		//СписокКому 									= Новый СписокЗначений;
		//EmailАдрес = "zsergei2000@gmail.com";
	КонецЕсли;

	
	
	Эл1 = "zsergei2000@gmail.com";
	//Адрес 									= СокрЛП(Выборка.Почта);
	СсылкаАкцептант								= ПараметрыСеанса.ТекущийПользователь;
	СписокКому 									= Новый СписокЗначений;
	Если EmailАдрес <> "" Тогда
		СпАдресов								= Новый СписокЗначений;
		МассивАдресов							= Справочники.Контрагенты.РазложитьСтрокуВМассивПодстрок(EmailАдрес,";");	
		Для каждого Эл Из МассивАдресов Цикл
			Если ЗначениеЗаполнено(Эл) Тогда
				СписокКому.Добавить(СокрЛП(Эл));
			КонецЕсли; 
		КонецЦикла; 
	Иначе
		СообщениеПоОшибке = НСтр("ru = 'Письмо не отправлено! Не заполнен адрес электронной почты %Выборка_Акцептант%'");
		Сообщить(СтрЗаменить(СообщениеПоОшибке, "%Выборка_Акцептант%", СсылкаАкцептант));
		//Продолжить;
	КонецЕсли;
	
	СписокКому.Добавить(СокрЛП(Эл1));

	//+++АК ZHAS 16-09-17 ИП-00015200.03

	МногострочнаяСтрока = СокрЛП(EmailАдрес);
	МногострочнаяСтрока = СтрЗаменить(МногострочнаяСтрока, ",", Символы.ПС);
	МногострочнаяСтрока = СтрЗаменить(МногострочнаяСтрока, ";", Символы.ПС);
	
	Для й = 1 По СтрЧислоСтрок(МногострочнаяСтрока) Цикл;
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = СокрЛП(СтрПолучитьСтроку(МногострочнаяСтрока, й));
	КонецЦикла;
	
	//+++АК ZHAS 16-09-17 ИП-00015200.03
	Если ИспользоватьПодтверждениеЧерезПочту Тогда
		//ТекстСообщения.ТипТекста 					= ТипТекстаПочтовогоСообщения.HTML;
		ID_MESSAGE 									= Строка(Новый УникальныйИдентификатор);
		TYPE_MESSAGE                                = 5;
		Если НЕ СтопОплатаОтмена Тогда
			TYPE_MESSAGE                             = 6;
		КонецЕсли;
		GUID_Заявки									= GUID;
		Объект_Ссылка								= Неопределено;
		
		//пТекстСсылкиНаКнопкуПодтвердить 			= "mailto:vkusvill.333@gmail.com?reply-to=vkusvill.333@gmail.com&subject=Акцепт стоп оплаты" + "&body=GUID%20" + GUID_Заявки + "%20ID_MESSAGE%20" + ID_MESSAGE   + "%20TYPE_MESSAGE%20" + TYPE_MESSAGE  + "%20Акцептировано";
		//пТекстСсылкиНаКнопкуОтменитьПодтверждение 	= "mailto:vkusvill.333@gmail.com?reply-to=vkusvill.333@gmail.com&subject=Акцепт стоп оплаты" + "&body=GUID%20" + GUID_Заявки + "%20ID_MESSAGE%20" + ID_MESSAGE   + "%20TYPE_MESSAGE%20" + TYPE_MESSAGE  + "%20Отклонено";
		//
		//пТекстКнопкиПодтвердить 					= "<br><br><a href=""" + пТекстСсылкиНаКнопкуПодтвердить + """><b>Акцептовать</b></a><br><br>";
		//пТекстКнопкиОтменитьПодтверждение 			= "<a href=""" + пТекстСсылкиНаКнопкуОтменитьПодтверждение + """><b>Отклонить</b></a><br><br>";
		Таблица 									= СтрЗаменить(ТекстПисьма, Символы.ПС, "<br>") + "<br><br>";
		//Таблица									= ТекстПисьма;

		//УправлениеЭлектроннойПочтой.ОтправитьЗаявкуНаПодтверждение(Тема, Таблица, НомерЗаявки, СписокКому, GUID_Заявки, ID_MESSAGE, TYPE_MESSAGE, Адрес, СсылкаАкцептант, УчетнаяЗапись, Объект_Ссылка)

	КонецЕсли;
	//+++АК ZHAS 16-09-17 ИП-00015200.03
	
	
	
	ТекстСообщения = Письмо.Тексты.Добавить(ТекстПисьма);
	
	//+++АК ZHAS 16-09-17 ИП-00015200.03
	Если ИспользоватьПодтверждениеЧерезПочту И НЕ флПодтверждение Тогда
		ТекстСообщения.ТипТекста 					= ТипТекстаПочтовогоСообщения.HTML;
	КонецЕсли;
	//+++АК ZHAS 16-09-17 ИП-00015200.03

	
	Если ОтправлятьПисьмаНаОдинАдрес Тогда
		Если СокрЛП(ТекПользователь) = "Светлана Силина" Тогда
			Письмо.Получатели.Очистить();
			Получатель = Письмо.Получатели.Добавить();
			Получатель.Адрес = "sils@automacon.ru";
			ТекстСообщения = Письмо.Тексты.Добавить(ТекстПисьма+ ". Информация по флагу: письмо для адресата: " + СокрЛП(ФизЛицо) + " (" + СокрЛП(EmailАдрес) + ")");
			Сообщить("Все письма будут перенаправлены на sils@automacon.ru");
		ИначеЕсли СокрЛП(ТекПользователь) = "Абдишев Рустем" Тогда
			Письмо.Получатели.Очистить();
			Получатель = Письмо.Получатели.Добавить();
			Получатель.Адрес = "abdr@automacon.ru";
			ТекстСообщения = Письмо.Тексты.Добавить(ТекстПисьма+ ". Информация по флагу: письмо для адресата: " + СокрЛП(ФизЛицо) + " (" + СокрЛП(EmailАдрес) + ")");
			Сообщить("Все письма будут перенаправлены на abdr@automacon.ru");
		КонецЕсли;
	КонецЕсли;
	//Если ОтправлятьПисьмаНаОдинАдрес Тогда
	//	Письмо.Получатели.Очистить();
	//	Получатель = Письмо.Получатели.Добавить();
	//	Получатель.Адрес = "abdr@automacon.ru";
	//	Получатель.Адрес = "zsergei2000@gmail.com"; //zhas...
	//	//Получатель.Адрес = "sils@automacon.ru";
	//	ТекстСообщения = Письмо.Тексты.Добавить("" + Символы.ПС + "Информация по флагу: письмо для адресата: " + СокрЛП(ФизЛицо) + " (" + СокрЛП(EmailАдрес) + ")");
	//КонецЕсли;
	
	Попытка
		//+++АК ZHAS 16-09-17 ИП-00015200.03
		Если ИспользоватьПодтверждениеЧерезПочту И НЕ флПодтверждение Тогда
			УправлениеЭлектроннойПочтой.ОтправитьЗаявкуНаПодтверждение(Тема, Таблица, , СписокКому, GUID_Заявки, ID_MESSAGE, TYPE_MESSAGE, EmailАдрес, СсылкаАкцептант, Неопределено, Объект_Ссылка);
		Иначе
			Почта.Послать(Письмо);
			Сообщить("Письмо отправлено " +СокрЛП(ФизЛицо) + ".");
		КонецЕсли;
		//+++АК ZHAS 16-09-17 ИП-00015200.03
	Исключение
		Сообщить("Письмо не отправлено " +СокрЛП(ФизЛицо) + ". " + ОписаниеОшибки());
	КонецПопытки;		
КонецПроцедуры

Функция НайтиЭлАдрес(СЗ)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтактнаяИнформация.Объект КАК Сотрудник,
	|	КонтактнаяИнформация.Представление КАК ЭлАдрес
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Тип = &Тип
	|	И КонтактнаяИнформация.Вид = &Вид
	|	И КонтактнаяИнформация.Объект В(&Объект)";
	
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.EmailФизЛица);
	Запрос.УстановитьПараметр("Объект", СЗ);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

//**************************************************************************************

Процедура УстановитьСтатус()
	Если СтопОплатаОтмена и не ПодтвержденаОтмена Тогда
		Статус = "Заявка на отмену стоп оплаты";
		ЭлементыФормы.Статус.ЦветФона = Новый Цвет(144, 238, 144);
	ИначеЕсли СтопОплатаОтмена и ПодтвержденаОтмена Тогда
		Статус = "Подтверждена отмена стоп оплаты";
		ЭлементыФормы.Статус.ЦветФона = Новый Цвет();
	ИначеЕсли СтопОплатаЗаявка и не ПодтвержденаЗаявка Тогда
		Статус = "Заявка на стоп оплату";
		ЭлементыФормы.Статус.ЦветФона = Новый Цвет(255, 215, 0);
	ИначеЕсли СтопОплатаЗаявка и ПодтвержденаЗаявка Тогда
		Статус = "Подтверждена стоп оплата";
		ЭлементыФормы.Статус.ЦветФона = Новый Цвет(175, 238, 238);
	ИначеЕсли не СтопОплатаОтмена и не ПодтвержденаОтмена Тогда
		Статус = "Не в стоп оплате";
		ЭлементыФормы.Статус.ЦветФона = Новый Цвет();
	КонецЕсли;		
КонецПроцедуры

//**************************************************************************************

Процедура ОбновитьСписокРуководителей()
	СЗ_РуководителиСтопОплаты = Новый СписокЗначений;
	СЗ_РуководителиСтопОплаты.Очистить();
	НаборЗаписей = РегистрыСведений.РуководителиСтопОплаты.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	Для каждого Элем из НаборЗаписей Цикл
		Если Элем.Руководитель Тогда
			СЗ_РуководителиСтопОплаты.Добавить(Элем.Сотрудник, СокрЛП(Элем.Сотрудник) + " (" + СокрЛП(Элем.ЭлАдрес) + ")");
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция ПроверкаНаМенеждера()
	Отбор = Новый Структура;
	Отбор.Вставить("Сотрудник", ТекПользователь);
	Выборка = РегистрыСведений.РуководителиСтопОплаты.Выбрать(Отбор);
	Если Выборка.Следующий() Тогда
		Если Выборка.ФинМенеджер Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

//**************************************************************************************

Процедура ЗаявкаНаСтопОплатуПриИзменении(Элемент)
	УстановитьСтатус();
	УстановитьДоступность();
КонецПроцедуры

Процедура ЗаявкаНаОтменуСтопОплатыПриИзменении(Элемент)
	УстановитьСтатус();
	УстановитьДоступность();
КонецПроцедуры

//**************************************************************************************

Процедура ПодтвержденаЗаявкаПриИзменении(Элемент)
	УстановитьСтатус();
	УстановитьДоступность();
КонецПроцедуры

Процедура ПодтвержденаОтменаПриИзменении(Элемент)
	УстановитьСтатус();
	УстановитьДоступность();
КонецПроцедуры

//**************************************************************************************

Процедура РуководительНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора = СЗ_РуководителиСтопОплаты;
	ТекЭлем = СЗ_РуководителиСтопОплаты.НайтиПоЗначению(Элемент.Значение);
	Если ТекЭлем <> Неопределено Тогда
		Элемент.Значение = ТекЭлем.Значение;
	КонецЕсли;
КонецПроцедуры

Процедура РуководительОчистка(Элемент, СтандартнаяОбработка)
	ЭлАдрес = "";
КонецПроцедуры

Процедура РуководительОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ВыбрЗначение = СЗ_РуководителиСтопОплаты.НайтиПоЗначению(ВыбранноеЗначение);
	Если ВыбрЗначение <> Неопределено Тогда
		ТекАдрес = Сред(ВыбрЗначение.Представление, Найти(ВыбрЗначение.Представление, "(") + 1);
		ТекАдрес = Лев(ТекАдрес, СтрДлина(ТекАдрес) - 1);
		Руководитель = ВыбрЗначение.Значение;
		ЭлАдрес = ТекАдрес;
	КонецЕсли;
	
	УстановитьДоступность();
КонецПроцедуры

//**************************************************************************************

Процедура КонтрагентОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ФлагРазрешено = Ложь;
	Если ВыбранноеЗначение = Контрагент Тогда
		ОсновнойБухгалтерПокупателя = Контрагент.ОсновнойБухгалтерПокупателя;
		ОсновнойМенеджерПокупателя = Контрагент.ОсновнойМенеджерПокупателя;
		Возврат;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(ВыбранноеЗначение.ОсновнойБухгалтерПокупателя) Тогда
		Сообщить("У контрагента не заполнен основной бухгалтер! Подбор не выполнен!");
		Возврат;
	КонецЕсли;
	Если не ЗначениеЗаполнено(ВыбранноеЗначение.ОсновнойМенеджерПокупателя) Тогда
		Сообщить("У контрагента не заполнен основной менеджер! Подбор не выполнен!");
		Возврат;
	КонецЕсли;
	
	Если не ФинМенеджер Тогда
		Если ВыбранноеЗначение.ОсновнойБухгалтерПокупателя = ТекПользователь или 
			ВыбранноеЗначение.ОсновнойМенеджерПокупателя = ТекПользователь Тогда
			ФлагРазрешено = Истина;
		Иначе
			Сообщить("Пользователь не является финансовым менеджером, основным менеждером или бухгалтером контрагента. Контрагент не выбран!");
		КонецЕсли;
	Иначе
		ФлагРазрешено = Истина;
	КонецЕсли;
	
	//Теперь проверим а может этот контрагент уже есть в регистре сведений
	Если ФлагРазрешено Тогда
		Отбор = Новый Структура;
		Отбор.Вставить("Контрагент", ВыбранноеЗначение); 
		ТЗ = РегистрыСведений.СведенияОСтопОплате.СрезПоследних(, Отбор);
		
		Если ТЗ.Количество() > 0 Тогда
			Сообщить("Контрагент уже присутствует в списке!");
			Возврат;
		Иначе
			Контрагент = ВыбранноеЗначение;
			ОсновнойБухгалтерПокупателя = Контрагент.ОсновнойБухгалтерПокупателя;
			ОсновнойМенеджерПокупателя = Контрагент.ОсновнойМенеджерПокупателя;
		КонецЕсли;
	Иначе
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

//+++АК sils 16.03.2018 
Процедура КонтрагентПриИзменении(Элемент)
	ФлагРазрешено = Ложь;
	Если не ЗначениеЗаполнено(Контрагент.ОсновнойБухгалтерПокупателя) Тогда
		Сообщить("У контрагента не заполнен основной бухгалтер! Подбор не выполнен!");
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		Возврат;
	КонецЕсли;
	Если не ЗначениеЗаполнено(Контрагент.ОсновнойМенеджерПокупателя) Тогда
		Сообщить("У контрагента не заполнен основной менеджер! Подбор не выполнен!");
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		Возврат;
	КонецЕсли;
	
	Если не ФинМенеджер Тогда
		Если Контрагент.ОсновнойБухгалтерПокупателя = ТекПользователь или 
			Контрагент.ОсновнойМенеджерПокупателя = ТекПользователь Тогда
			ФлагРазрешено = Истина;
		Иначе
			Сообщить("Пользователь не является финансовым менеджером, основным менеждером или бухгалтером контрагента. Контрагент не выбран!");
			Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		КонецЕсли;
	Иначе
		ФлагРазрешено = Истина;
	КонецЕсли;
	
	//Теперь проверим а может этот контрагент уже есть в регистре сведений
	Если ФлагРазрешено Тогда
		Отбор = Новый Структура;
		Отбор.Вставить("Контрагент", Контрагент); 
		ТЗ = РегистрыСведений.СведенияОСтопОплате.СрезПоследних(, Отбор);
		
		Если ТЗ.Количество() > 0 Тогда
			Сообщить("Контрагент уже присутствует в списке!");
			Контрагент = Справочники.Контрагенты.ПустаяСсылка();
			Возврат;
		Иначе
			ОсновнойБухгалтерПокупателя = Контрагент.ОсновнойБухгалтерПокупателя;
			ОсновнойМенеджерПокупателя = Контрагент.ОсновнойМенеджерПокупателя;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//---АК

Функция ПроверкаКонтрагента()
	ФлагВозврата = Ложь;
	Если ЗначениеЗаполнено(Контрагент) Тогда
		//Отбор = Новый Структура;
		//Отбор.Вставить("Контрагент", Контрагент);
		//ТЗ = РегистрыСведений.СведенияОСтопОплате.СрезПоследних(, Отбор);
		//Если ТЗ.Количество() > 1 Тогда
		//	Сообщить("Такой контрагент уже есть!");
		//	ФлагВозврата = Истина;
		//КонецЕсли;
	Иначе
		Сообщить("Контрагент не может быть пустым!");
		ФлагВозврата = Истина;
	КонецЕсли;
	Возврат ФлагВозврата;
Конецфункции

//**************************************************************************************

Процедура УстановитьДоступность()
	ЭлементыФормы.СтопОплатаЗаявка.Доступность = Истина;
	ЭлементыФормы.ПодтвержденаЗаявка.Доступность = Ложь;
	ЭлементыФормы.СтопОплатаОтмена.Доступность = Ложь;
	ЭлементыФормы.ПодтвержденаОтмена.Доступность = Ложь;
	Если СтопОплатаЗаявка Тогда
		ЭлементыФормы.СтопОплатаЗаявка.Доступность = Истина;
		ЭлементыФормы.БлокироватьДо.Доступность = Истина;
		ЭлементыФормы.ПодтвержденаЗаявка.Доступность = Истина;
		ЭлементыФормы.СтопОплатаОтмена.Доступность = Ложь;
		ЭлементыФормы.ПодтвержденаОтмена.Доступность = Ложь;
	КонецЕсли;
	Если ПодтвержденаЗаявка Тогда
		ЭлементыФормы.СтопОплатаЗаявка.Доступность = Ложь;
		ЭлементыФормы.БлокироватьДо.Доступность = Ложь;
		ЭлементыФормы.ПодтвержденаЗаявка.Доступность = Истина;
		ЭлементыФормы.СтопОплатаОтмена.Доступность = Истина;
		ЭлементыФормы.ПодтвержденаОтмена.Доступность = Ложь;
	КонецЕсли;
	Если СтопОплатаОтмена Тогда
		ЭлементыФормы.СтопОплатаЗаявка.Доступность = Ложь;
		ЭлементыФормы.БлокироватьДо.Доступность = Ложь;
		ЭлементыФормы.ПодтвержденаЗаявка.Доступность = Ложь;
		ЭлементыФормы.СтопОплатаОтмена.Доступность = Истина;
		ЭлементыФормы.ПодтвержденаОтмена.Доступность = Истина;
	КонецЕсли;
	Если ПодтвержденаОтмена Тогда
		ЭлементыФормы.СтопОплатаЗаявка.Доступность = Ложь;
		ЭлементыФормы.БлокироватьДо.Доступность = Ложь;
		ЭлементыФормы.ПодтвержденаЗаявка.Доступность = Ложь;
		ЭлементыФормы.СтопОплатаОтмена.Доступность = Ложь;
		ЭлементыФормы.ПодтвержденаОтмена.Доступность = Истина;
	КонецЕсли;
	
	ЭлементыФормы.СтопОплатаЗаявка.Доступность = ЭлементыФормы.СтопОплатаЗаявка.Доступность и ДоступностьФлагаСтопОплаты();
	ЭлементыФормы.БлокироватьДо.Доступность = ЭлементыФормы.СтопОплатаЗаявка.Доступность и ДоступностьФлагаСтопОплаты();
	ЭлементыФормы.СтопОплатаОтмена.Доступность = ЭлементыФормы.СтопОплатаОтмена.Доступность и ДоступностьФлагаСтопОплаты();
	ЭлементыФормы.ПодтвержденаЗаявка.Доступность = ЭлементыФормы.ПодтвержденаЗаявка.Доступность и ДоступностьФлагаПодтверждено();
	ЭлементыФормы.ПодтвержденаОтмена.Доступность = ЭлементыФормы.ПодтвержденаОтмена.Доступность и ДоступностьФлагаПодтверждено();
КонецПроцедуры

// Флаг доступен ответственному менеджеру или ответственному бухгалтеру
Функция ДоступностьФлагаСтопОплаты()
	Если ОсновнойБухгалтерПокупателя = ТекПользователь или ОсновнойМенеджерПокупателя = ТекПользователь Тогда	
		Возврат Истина;
	ИначеЕсли Руководитель = ТекПользователь Тогда	
		Возврат Истина;
	Иначе
		Набор = РегистрыСведений.РуководителиСтопОплаты.СоздатьНаборЗаписей();
		Набор.Отбор.Сотрудник.Установить(ТекПользователь);
		Набор.Прочитать();
		Если Набор.Количество() > 0 Тогда
			Если Набор[0].ФинМенеджер Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЕсли;
		Возврат Ложь;
	КонецЕсли;
КонецФункции

// Флаг доступен подтверждающему
Функция ДоступностьФлагаПодтверждено()
	Если Руководитель = ТекПользователь Тогда	
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции



















