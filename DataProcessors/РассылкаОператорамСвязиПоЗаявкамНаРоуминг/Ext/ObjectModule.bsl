
Процедура ВыполнитьРассылку() Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ОриентацияСтраницы		= ОриентацияСтраницы.Ландшафт;
	ТабДок.РазмерКолонтитулаСнизу	= 0;
	ТабДок.РазмерКолонтитулаСверху 	= 0;
	ТабДок.ПолеСверху 	= 5;
	ТабДок.ПолеСнизу 	= 5;
	ТабДок.ПолеСлева 	= 5;
	ТабДок.ПолеСправа 	= 5;
	ТабДок.АвтоМасштаб	= Истина;
	
	МакетПриложения = Документы.ЗаявкаНаРоуминг.ПолучитьМакет("МакетПриложения");
	МакетЗаявки 	= Документы.ЗаявкаНаРоуминг.ПолучитьМакет("МакетЗаявки");
	
	ОбластьШапка 			= МакетПриложения.ПолучитьОбласть("Шапка");
	ОбластьСтрока 			= МакетПриложения.ПолучитьОбласть("Строка");
	ОбластьПодвал 			= МакетПриложения.ПолучитьОбласть("Подвал");
	ОбластьОператорМегафон 	= МакетПриложения.ПолучитьОбласть("ОператорМегафон");
	
	ОтборОтправителяПисьма = Новый Структура;
	ОтборОтправителяПисьма.Вставить("ОтправительПисьмаОператоруСвязи", ИСТИНА);	
	
	ТЗОтправительПисьма = РегистрыСведений.ЗаявкиНаРоумингЛимиты.СрезПоследних(,ОтборОтправителяПисьма);
	ПолучательРассылок  = "";
	Лимит				= 0;
	
	//Перебирает срез регистра от свежих к старым, пока не заполнит все необходимые параметры.
	Если ТЗОтправительПисьма.Количество() > 0 Тогда
		ТЗОтправительПисьма.Сортировать("Период Убыв", Новый СравнениеЗначений);	
		Для каждого СтрокаТЗРегистра Из ТЗОтправительПисьма Цикл
			
			Если ЗначениеЗаполнено(ПолучательРассылок)Тогда
				Прервать;	
			КонецЕсли;	
			
			Если НЕ ЗначениеЗаполнено(ПолучательРассылок) И ЗначениеЗаполнено(СтрокаТЗРегистра.ПолучательРассылок) И ЗначениеЗаполнено(СтрокаТЗРегистра.ОтправительПисьмаОператоруСвязи) Тогда
				ПолучательРассылок = СтрокаТЗРегистра.ПолучательРассылок; 
			КонецЕсли;					
		КонецЦикла;
		
	КонецЕсли;	
	
	//для отправки почты от определенного сотрудника
	ЗапросУчеткиОтправителя = Новый Запрос;
	ЗапросУчеткиОтправителя.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.Ссылка,
		|	Пользователи.ФизЛицо
		|ПОМЕСТИТЬ втПользователь
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.ФизЛицо = &ОтправительПисьма
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УчетныеЗаписиЭлектроннойПочтыДоступКУчетнойЗаписи.Ссылка КАК УчетнаяЗапись,
		|	втПользователь.ФизЛицо
		|ИЗ
		|	втПользователь КАК втПользователь
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.УчетныеЗаписиЭлектроннойПочты.ДоступКУчетнойЗаписи КАК УчетныеЗаписиЭлектроннойПочтыДоступКУчетнойЗаписи
		|		ПО втПользователь.Ссылка = УчетныеЗаписиЭлектроннойПочтыДоступКУчетнойЗаписи.Пользователь
		|ГДЕ
		|	УчетныеЗаписиЭлектроннойПочтыДоступКУчетнойЗаписи.Администрирование = ИСТИНА";
	
	ЗапросУчеткиОтправителя.УстановитьПараметр("ОтправительПисьма", ПолучательРассылок);
	
	РезультатЗапросаУчеткиОтправителя = ЗапросУчеткиОтправителя.Выполнить();

	Если НЕ РезультатЗапросаУчеткиОтправителя.Пустой() Тогда
		ВыборкаУчеткиОтправителя = РезультатЗапросаУчеткиОтправителя.Выбрать();
		ВыборкаУчеткиОтправителя.Следующий();
		УчетнаяЗаписьОтправителяПисьма = ВыборкаУчеткиОтправителя.УчетнаяЗапись;
	Иначе
		Возврат;
	КонецЕсли;	
	
	//запрос вытаскивает все необходимые данные для печати приложения
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаНаРоуминг.СлужебнаяSIMКарта,
	|	ЗаявкаНаРоуминг.КонецДействия,
	|	ЗаявкаНаРоуминг.НачалоДействия,
	|	ЗаявкаНаРоуминг.Организация,
	|	ЗаявкаНаРоуминг.Ссылка,
	|	ЗаявкаНаРоуминг.Сотрудник
	|ПОМЕСТИТЬ втТелефонныеНомера
	|ИЗ
	|	Документ.ЗаявкаНаРоуминг КАК ЗаявкаНаРоуминг
	|ГДЕ
	|	ЗаявкаНаРоуминг.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРоуминг.Подтвержден)
	|	И ЗаявкаНаРоуминг.ВыгруженаЗаявкаОператоруСвязи = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТелефонныеНомера.СлужебнаяSIMКарта.ОператорСвязи,
	|	ТелефонныеНомера.СлужебнаяSIMКарта,
	|	ВложенныйЗапрос.НачалоДействия,
	|	ВложенныйЗапрос.КонецДействия,
	|	ВложенныйЗапрос.Организация,
	|	ВложенныйЗапрос.Ссылка,
	|	ВложенныйЗапрос.Сотрудник
	|ПОМЕСТИТЬ втОператор
	|ИЗ
	|	втТелефонныеНомера КАК ТелефонныеНомера
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			втТелефонныеНомера.СлужебнаяSIMКарта КАК СлужебнаяSIMКарта,
	|			втТелефонныеНомера.КонецДействия КАК КонецДействия,
	|			втТелефонныеНомера.НачалоДействия КАК НачалоДействия,
	|			втТелефонныеНомера.Организация КАК Организация,
	|			втТелефонныеНомера.Ссылка КАК Ссылка,
	|			втТелефонныеНомера.Сотрудник КАК Сотрудник
	|		ИЗ
	|			втТелефонныеНомера КАК втТелефонныеНомера) КАК ВложенныйЗапрос
	|		ПО ТелефонныеНомера.СлужебнаяSIMКарта = ВложенныйЗапрос.СлужебнаяSIMКарта
	|			И ТелефонныеНомера.Сотрудник = ВложенныйЗапрос.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОператор.СлужебнаяSIMКартаОператорСвязи,
	|	втОператор.СлужебнаяSIMКарта,
	|	втОператор.НачалоДействия,
	|	втОператор.КонецДействия,
	|	втОператор.Организация,
	|	ВЫБОР
	|		КОГДА ОсновныеДоговораКонтрагентовСрезПоследних_СПриложением.ДоговорКонтрагента ЕСТЬ NULL
	|			ТОГДА ОсновныеДоговораКонтрагентовСрезПоследних_БезПриложения.ДоговорКонтрагента
	|		ИНАЧЕ ОсновныеДоговораКонтрагентовСрезПоследних_СПриложением.ДоговорКонтрагента
	|	КОНЕЦ КАК ДоговорКонтрагента,
	|	втОператор.Ссылка,
	|	втОператор.Сотрудник
	|ИЗ
	|	втОператор КАК втОператор
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеДоговораКонтрагентов.СрезПоследних(
	|				,
	|				Контрагент.СтатьяДвиженияДенежныхСредств = &СтатьяДДСОператораСвязи
	|					И ДоговорКонтрагента.ОтправлятьПриложениеКЗаявкеНаРоуминг = ИСТИНА
	|					И Контрагент.ПометкаУдаления = ЛОЖЬ) КАК ОсновныеДоговораКонтрагентовСрезПоследних_СПриложением
	|		ПО втОператор.Организация = ОсновныеДоговораКонтрагентовСрезПоследних_СПриложением.Организация
	|			И втОператор.СлужебнаяSIMКартаОператорСвязи = ОсновныеДоговораКонтрагентовСрезПоследних_СПриложением.Контрагент
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеДоговораКонтрагентов.СрезПоследних(
	|				,
	|				Контрагент.СтатьяДвиженияДенежныхСредств = &СтатьяДДСОператораСвязи
	|					И ДоговорКонтрагента.ОтправлятьПриложениеКЗаявкеНаРоуминг = ЛОЖЬ
	|					И Контрагент.ПометкаУдаления = ЛОЖЬ) КАК ОсновныеДоговораКонтрагентовСрезПоследних_БезПриложения
	|		ПО втОператор.Организация = ОсновныеДоговораКонтрагентовСрезПоследних_БезПриложения.Организация
	|			И втОператор.СлужебнаяSIMКартаОператорСвязи = ОсновныеДоговораКонтрагентовСрезПоследних_БезПриложения.Контрагент
	|ИТОГИ ПО
	|	ДоговорКонтрагента";
	
	Запрос.УстановитьПараметр("СтатьяДДСОператораСвязи", Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("139320")); //Статья ДДС "Оплата корпоративной связи"
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;	
	
	СтруктураНовогоПисьма = Новый Структура;
	СтруктураНовогоПисьма.Вставить("ВидТекста", Перечисления.ВидыТекстовЭлектронныхПисем.Текст);
	СтруктураНовогоПисьма.Вставить("Тема", "Вкусвилл: отмена запрета на роуминг от " + Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy"));
	СтруктураНовогоПисьма.Вставить("УчетнаяЗаписьОтправителя", УчетнаяЗаписьОтправителяПисьма);

	//эксель файл приходится обрабатывать дополнительно, т.к. нужно изменить ориентацию и вставить подпись
	Кому = Новый СписокЗначений;
	ПутьВремФайла	= "\\10.0.0.51\1c$\Заявки на роуминг\tmp\";
	ВремФайлЭксель 	= "ПриложениеНеОбработанное.XLS";
	ВремФайлЭксельОбработанный = "Приложение.XLS";
	УдалитьФайлы(ПутьВремФайла, "*.*");
	
	ВыборкаОператорыСвязи = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ДоговорКонтрагента");	
	
	Пока ВыборкаОператорыСвязи.Следующий() Цикл	
		
		МассивВложений = Новый Массив;
		ТабДок.Очистить();
		
		ЗапросКонтактаКонтрагента = Новый Запрос;
		ЗапросКонтактаКонтрагента.УстановитьПараметр("Объект", ВыборкаОператорыСвязи.ДоговорКонтрагента.Владелец);
		ЗапросКонтактаКонтрагента.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыКонтрагентаДляОбменаДокументами);
		ЗапросКонтактаКонтрагента.Текст =                                                                                   
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Представление
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект В(&Объект)
		|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
		|	И КонтактнаяИнформация.Вид = &Вид";
		ВыборкаКонтактаКонтрагента = ЗапросКонтактаКонтрагента.Выполнить().Выбрать();
		
		Пока ВыборкаКонтактаКонтрагента.Следующий() Цикл
			Если Кому.НайтиПоЗначению(ВыборкаКонтактаКонтрагента.Представление)=Неопределено Тогда
				Кому.Добавить(ВыборкаКонтактаКонтрагента.Представление);
			КонецЕсли; 
		КонецЦикла;
		
		МассивДокументов = Новый Массив;
		
		Если ЗначениеЗаполнено(ВыборкаОператорыСвязи.ДоговорКонтрагента) Тогда
			ОбластьШапка.Параметры.НомерСоглашения = ВыборкаОператорыСвязи.ДоговорКонтрагента.Номер;
			ОбластьШапка.Параметры.ДатаСоглашения = ВыборкаОператорыСвязи.ДоговорКонтрагента.Дата;
		КонецЕсли;	
		ОбластьШапка.Параметры.ДатаЗаявки = Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy");	
		ТабДок.Вывести(ОбластьШапка);
		
		ВыборкаSIMКарта = ВыборкаОператорыСвязи.Выбрать();
		
		ЕстьБезлимитныйРоуминг = Ложь; //+++АК LAGP 2018.03.28 ИП-00017453.02 Функция исключения по номерам телефонов
		
		КоличествоСтрок = ВыборкаSIMКарта.Количество();
		
		Пока ВыборкаSIMКарта.Следующий() Цикл
			КоличествоДней 	= ((ВыборкаSIMКарта.КонецДействия - ВыборкаSIMКарта.НачалоДействия) / 86400);
			ЛимитЗаявки 	= ВыборкаSIMКарта.Ссылка.ЛимитЗаявки;
			ОбластьСтрока.Параметры.ТелефонныйНомер = ВыборкаSIMКарта.СлужебнаяSIMКарта;
			ОбластьСтрока.Параметры.Бюджет = ЛимитЗаявки * КоличествоДней;
			ОбластьСтрока.Параметры.Лимит = ОбластьСтрока.Параметры.Бюджет - ЛимитЗаявки * 2;
			ТабДок.Вывести(ОбластьСтрока);
			
			ТабДокЗаявка = Документы.ЗаявкаНаРоуминг.ПечатьЗаявкаНаРоуминг(ВыборкаSIMКарта.Ссылка, МакетЗаявки);    //печатная форма заявки формируется в менеджере
			ТабДокЗаявка.Записать(ПутьВремФайла + "Заявка_" + ВыборкаSIMКарта.Сотрудник + ".XLS", ТипФайлаТабличногоДокумента.XLS);	
			МассивВложений.Добавить(ПутьВремФайла + "Заявка_" + ВыборкаSIMКарта.Сотрудник + ".XLS");
			МассивДокументов.Добавить(ВыборкаSIMКарта.Ссылка);
			
			//+++АК LAGP 2018.03.28 ИП-00017453.02 Функция исключения по номерам телефонов
			Если ВыборкаSIMКарта.СлужебнаяSIMКарта.БезлимитПоРоумингу Тогда 
				ЕстьБезлимитныйРоуминг = Истина;	
			КонецЕсли;
			//---АК LAGP
			
		КонецЦикла;	
		
		//+++АК LAGP 2018.03.28 ИП-00017453.02 Функция исключения по номерам телефонов
		Если ЕстьБезлимитныйРоуминг Тогда
			Кому.Очистить();
			Кому.Добавить("buh51@vkusvill.ru");
		КонецЕсли;	
		//---АК LAGP
		
		ОбластьПодвал.Параметры.СотрудникФИО = "Фарафонов А.В.";
		ОбластьПодвал.Параметры.СотрудникДолжность = "Генеральный Директор";
		ОбластьПодвал.Параметры.ОснованиеПодписи = "Устава";	
		ТабДок.Вывести(ОбластьПодвал);
		
		//+++АК LAGP 2018.05.31 б/н Просьба Рустема, хотят отказаться от отправки приложений операторам моб. связи
		//Если ВыборкаОператорыСвязи.ДоговорКонтрагента.ОтправлятьПриложениеКЗаявкеНаРоуминг Тогда  
		Если Ложь Тогда	
		//---АК LAGP
		
			ТабДок.Вывести(ОбластьОператорМегафон);	
	
			//ВремФайл = ПолучитьИмяВременногоФайла("HTM");
			//ТабДок.Записать(ВремФайл, ТипФайлаТабличногоДокумента.HTML);
			
			//форматирую эксель лист,  вставляю подпись
			ТабДок.ОриентацияСтраницы		= ОриентацияСтраницы.Ландшафт;
			ТабДок.Записать(ПутьВремФайла + ВремФайлЭксель, ТипФайлаТабличногоДокумента.XLS);
			
			ТабДокЭксель = Новый ТабличныйДокумент;
			ТабДокЭксель.Прочитать(ПутьВремФайла + ВремФайлЭксель);
			КартинкаПодпись = ТабДокЭксель.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
			КартинкаПодпись.Верх 	= 70 + (5.55 * КоличествоСтрок);;
			КартинкаПодпись.Высота  = 11;
			КартинкаПодпись.Ширина  = 13;
			КартинкаПодпись.Лево 	= 40;
			Подпись = Новый Картинка("\\10.0.0.51\1c$\Заявки на роуминг\не удалять\Подпись.jpg");
			КартинкаПодпись.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
			КартинкаПодпись.Картинка = Подпись;
			
			КартинкаПечать = ТабДокЭксель.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
			КартинкаПечать.Верх 	= 60 + (5.55 * КоличествоСтрок);
			КартинкаПечать.Высота  = 65;
			КартинкаПечать.Ширина  = 65;
			КартинкаПечать.Лево 	= 45;
			Печать = Новый Картинка("\\10.0.0.51\1c$\Заявки на роуминг\не удалять\Печать.gif");
			КартинкаПечать.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
			КартинкаПечать.Картинка = Печать;
			
			ТабДокЭксель.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			ТабДокЭксель.Записать(ПутьВремФайла + ВремФайлЭксельОбработанный, ТипФайлаТабличногоДокумента.XLS);
			
			//Excel = Новый COMОбъект("Excel.Application"); 
			//РабочаяКнига = Excel.Workbooks.Open(ПутьВремФайла + ВремФайлЭксель);
			//ЛистДокумента = Excel.Sheets(1);
			//ПараметрыСтраницы = ЛистДокумента.PageSetup;
			//ПараметрыСтраницы.Orientation = 2;
			//Верх = ЛистДокумента.Cells(12, 5).Top;
			//Лево = ЛистДокумента.Cells(12, 5).Left;
			//ВерхПечать = ЛистДокумента.Cells(7, 3).Top;
			//ЛевоПечать = ЛистДокумента.Cells(7, 3).Left;
			//КартинкаПодпись = ЛистДокумента.Shapes.AddPicture("\\10.0.0.51\1c$\Заявки на роуминг\не удалять\Подпись.jpg", Ложь, Истина, Лево + 1, Верх + 1, 40, 30);
			//КартинкаПечать = ЛистДокумента.Shapes.AddPicture("\\10.0.0.51\1c$\Заявки на роуминг\не удалять\Печать.gif", Ложь, Истина, ЛевоПечать, ВерхПечать, 120, 120);
			//РабочаяКнига.SaveAs(ПутьВремФайла + ВремФайлЭксельОбработанный);
			//РабочаяКнига.Close();        
			//Excel.Quit();    
			//Excel = Неопределено;
			
			МассивВложений.Добавить(ПутьВремФайла + ВремФайлЭксельОбработанный);
			
		КонецЕсли;
		
		СтруктураНовогоПисьма.Вставить("МассивВложений", МассивВложений);
		СтруктураНовогоПисьма.Вставить("Кому", Кому);
		СтруктураНовогоПисьма.Вставить("КодовоеСлово", ВыборкаОператорыСвязи.ДоговорКонтрагента.КодовоеСловоОператораСвязи);
		
		Успешно = Ложь;
		Попытка	
			ОтправитьПисьмоПоПочте(СтруктураНовогоПисьма);
			Успешно = Истина;
		Исключение
		КонецПопытки;
		            
		Если Успешно Тогда
			Для каждого ДокументМассива из МассивДокументов Цикл
				ДокументМассиваОбж = ДокументМассива.ПолучитьОбъект();
				ДокументМассиваОбж.ВыгруженаЗаявкаОператоруСвязи = Истина;
				ДокументМассиваОбж.ОбменДанными.Загрузка = Истина;
				ДокументМассиваОбж.Записать();
				ОтправитьПисьмоСотруднику(ДокументМассива, УчетнаяЗаписьОтправителяПисьма);
			КонецЦикла;	
		КонецЕсли;	
		
	КонецЦикла;

КонецПроцедуры

Процедура ОтправитьПисьмоПоПочте(СтруктураНовогоПисьма)  
	
	УчетнаяЗапись = СтруктураНовогоПисьма.УчетнаяЗаписьОтправителя;
	
	СпАдресов=Новый СписокЗначений;
	Для каждого ЭлСп Из СтруктураНовогоПисьма.Кому Цикл
		МассивАдресов = Справочники.Контрагенты.РазложитьСтрокуВМассивПодстрок(ЭлСп.Значение, ";");	
		Для каждого Эл Из МассивАдресов Цикл
			Если ЗначениеЗаполнено(Эл) Тогда
				СпАдресов.Добавить(Сокрлп(Эл));
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла;
	СпАдресов.Добавить(Сокрлп(УчетнаяЗапись.АдресЭлектроннойПочты)); //Отправителю тоже надо отправлять письмо, для контроля
	
	Почта = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Письмо = Новый ИнтернетПочтовоеСообщение;
	
	Если СтруктураНовогоПисьма.Свойство("МассивВложений") Тогда
		Для каждого ЭлементМассиваВложений Из СтруктураНовогоПисьма.МассивВложений Цикл
			Вложение = Письмо.Вложения.Добавить(ЭлементМассиваВложений);
		КонецЦикла;
	КонецЕсли;			
	
	Почта.Подключиться(Профиль);
	Письмо.Тема = СтруктураНовогоПисьма.Тема;;
	Письмо.ИмяОтправителя 	= "" + УчетнаяЗапись + "";
	Письмо.ИмяОтправителя  	= "" + СокрЛП(УчетнаяЗапись) + "";
	Письмо.Отправитель     	= "" + СокрЛП(УчетнаяЗапись) + "";
	
	//ТабДок=СтруктураНовогоПисьма.Тело;
	
	Если СтруктураНовогоПисьма.Свойство("КодовоеСлово") Тогда
		ТекстСообщения = Письмо.Тексты.Добавить();
		ТекстСообщения.Текст     = 	СтруктураНовогоПисьма.КодовоеСлово;   		
		ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;
	КонецЕсли;
		
	Для каждого Адрес Из СпАдресов Цикл
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = Адрес.Значение;
	КонецЦикла;

	Почта.Послать(Письмо);
	Почта.Отключиться();

КонецПроцедуры

//+++АК LAGP 2018.06.01 ИП-00018867 Доработка: Доработка заявок на роуминг(отправлять памятку).
Функция ПолучитьКонтактнуюИнформацию(ОбъектРС, ВидКонтактнойИнформации, ТипКонтактнойИнформации) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(150)) КАК Инфо
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Вид = &ВидКонтактнойИнформации
	|	И КонтактнаяИнформация.Тип = &ТипКонтактнойИнформации
	|	И КонтактнаяИнформация.Объект = &ОбъектРС";
	
	Запрос.УстановитьПараметр("ВидКонтактнойИнформации", ВидКонтактнойИнформации);
	Запрос.УстановитьПараметр("ТипКонтактнойИнформации", ТипКонтактнойИнформации);
	Запрос.УстановитьПараметр("ОбъектРС", ОбъектРС);
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Выб = Рез.Выбрать();
		Выб.Следующий();
		Возврат Выб.Инфо;
	КонецЕсли;
	
КонецФункции

//+++АК LAGP 2018.06.01 ИП-00018867 Доработка: Доработка заявок на роуминг(отправлять памятку).
Процедура ОтправитьПисьмоСотруднику(ЗаявкаНаРоуминг, УчетнаяЗаписьОтправителяПисьма)
	
	МассивВложений = Новый Массив;
	МассивВложений.Добавить("\\10.0.0.51\1c$\Заявки на роуминг\не удалять\Шпаргалка.docx");
	
	Кому = Новый СписокЗначений;
	АдресСотрудника = ПолучитьКонтактнуюИнформацию(ЗаявкаНаРоуминг.Сотрудник, Справочники.ВидыКонтактнойИнформации.EmailФизЛица, Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	СбойОтправки = Ложь;
	Если ЗначениеЗаполнено(АдресСотрудника) Тогда
		Кому.Добавить(АдресСотрудника);
	Иначе
		Кому.Добавить("lagp@automacon.ru");
		СбойОтправки = Истина;
	КонецЕсли;	
	
	СтруктураНовогоПисьма = Новый Структура;
	СтруктураНовогоПисьма.Вставить("ВидТекста", Перечисления.ВидыТекстовЭлектронныхПисем.Текст);
	СтруктураНовогоПисьма.Вставить("Тема", "Вкусвилл: отмена запрета на роуминг от " + Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy"));
	СтруктураНовогоПисьма.Вставить("УчетнаяЗаписьОтправителя", УчетнаяЗаписьОтправителяПисьма);
	СтруктураНовогоПисьма.Вставить("МассивВложений", МассивВложений);
	СтруктураНовогоПисьма.Вставить("КодовоеСлово", ?(СбойОтправки, "Не удалось определить email " + ЗаявкаНаРоуминг.Сотрудник, "Во вложении письма находится шпаргалка выезжающим."));
	СтруктураНовогоПисьма.Вставить("Кому", Кому);
	Попытка	
		ОтправитьПисьмоПоПочте(СтруктураНовогоПисьма);
	Исключение
	КонецПопытки;	
	
КонецПроцедуры;	