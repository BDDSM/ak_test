
#Область ПрограммныйИнтерфейс

//+++АК LATV 2018.07.24 0-000018902
Процедура Выгрузить() Экспорт

	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаУвольнения) Тогда
		ДатаУвольнения = Дата(2018, 11, 01);
	КонецЕсли;
	
	ДанныеСотрудников = ПолучитьДанныеСотрудников();
	СформироватьФайлВыгрузки(ДанныеСотрудников);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//+++АК LATV 2018.07.24 0-000018902
Функция ПолучитьДанныеСотрудников()

	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СотрудникиОрганизаций.Физлицо КАК ФизЛицо
		|ПОМЕСТИТЬ втДействующиеСотрудники
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|ГДЕ
		|	СотрудникиОрганизаций.Организация = &Вкусвилл
		|	И СотрудникиОрганизаций.Физлицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|	И СотрудникиОрганизаций.ДатаПриемаНаРаботу <> ДАТАВРЕМЯ(1, 1, 1)
		|	И СотрудникиОрганизаций.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втДействующиеСотрудники.ФизЛицо КАК ФизЛицо,
		|	""Действующий"" КАК Статус
		|ПОМЕСТИТЬ втВсеСотрудники
		|ИЗ
		|	втДействующиеСотрудники КАК втДействующиеСотрудники
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СотрудникиОрганизаций.Физлицо,
		|	""Уволенный""
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|		ЛЕВОЕ СОЕДИНЕНИЕ втДействующиеСотрудники КАК втДействующиеСотрудники
		|		ПО СотрудникиОрганизаций.Физлицо = втДействующиеСотрудники.ФизЛицо
		|ГДЕ
		|	втДействующиеСотрудники.ФизЛицо ЕСТЬ NULL
		|	И СотрудникиОрганизаций.Организация = &Вкусвилл
		|	И СотрудникиОрганизаций.Физлицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|	И СотрудникиОрганизаций.ДатаПриемаНаРаботу <> ДАТАВРЕМЯ(1, 1, 1)
		|	И СотрудникиОрганизаций.ДатаУвольнения > &ДатаУвольнения
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ втДействующиеСотрудники
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втВсеСотрудники.ФизЛицо КАК ФизЛицо,
		|	КонтактнаяИнформация.Представление КАК Телефон
		|ИЗ
		|	втВсеСотрудники КАК втВсеСотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ПО втВсеСотрудники.ФизЛицо = КонтактнаяИнформация.Объект
		|			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
		|
		|УПОРЯДОЧИТЬ ПО
		|	втВсеСотрудники.ФизЛицо.Наименование
		|ИТОГИ ПО
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втВсеСотрудники.ФизЛицо КАК ФизЛицо,
		|	ФизическиеЛица.Код КАК КодФизЛица,
		|	ФизическиеЛица.Наименование КАК ФИОФизЛица,
		|	ЕСТЬNULL(ФИОСотрудников.Фамилия, """") КАК ФамилияФизЛица,
		|	ЕСТЬNULL(ФИОСотрудников.Имя, """") КАК ИмяФизЛица,
		|	ЕСТЬNULL(ФИОСотрудников.Отчество, """") КАК ОтчествоФизЛица,
		|	ФИОСотрудников.ФизЛицо ЕСТЬ NULL КАК РазделитьФИОФизЛица,
		|	ФизическиеЛица.ПомощникТУ КАК Помощник,
		|	ЕСТЬNULL(ФизическиеЛица.ПомощникТУ.Код, """") КАК КодПомощника,
		|	ЕСТЬNULL(ФизическиеЛица.ПомощникТУ.Наименование, """") КАК ФИОПомощника,
		|	ЕСТЬNULL(ФИОПомощников.Фамилия, """") КАК ФамилияПомощника,
		|	ЕСТЬNULL(ФИОПомощников.Имя, """") КАК ИмяПомощника,
		|	ЕСТЬNULL(ФИОПомощников.Отчество, """") КАК ОтчествоПомощника,
		|	ФИОПомощников.ФизЛицо ЕСТЬ NULL КАК РазделитьФИОПомощника,
		|	ФизическиеЛица.Руководитель КАК Руководитель,
		|	ЕСТЬNULL(ФизическиеЛица.Руководитель.Код, """") КАК КодРуководителя,
		|	ЕСТЬNULL(ФизическиеЛица.Руководитель.Наименование, """") КАК ФИОРуководителя,
		|	ЕСТЬNULL(ФИОРуководителей.Фамилия, """") КАК ФамилияРуководителя,
		|	ЕСТЬNULL(ФИОРуководителей.Имя, """") КАК ИмяРуководителя,
		|	ЕСТЬNULL(ФИОРуководителей.Отчество, """") КАК ОтчествоРуководителя,
		|	ФИОРуководителей.ФизЛицо ЕСТЬ NULL КАК РазделитьФИОРуководителя,
		|	ФизическиеЛица.ДатаРождения КАК ДатаРождения,
		|	втВсеСотрудники.Статус,
		|	ФизическиеЛица.Пол,
		|	ФизическиеЛица.Должность,
		|	"""" КАК Телефоны
		|ИЗ
		|	втВсеСотрудники КАК втВсеСотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОПомощников
		|			ПО ФизическиеЛица.ПомощникТУ = ФИОПомощников.ФизЛицо
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОРуководителей
		|			ПО ФизическиеЛица.Руководитель = ФИОРуководителей.ФизЛицо
		|		ПО втВсеСотрудники.ФизЛицо = ФизическиеЛица.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОСотрудников
		|		ПО втВсеСотрудники.ФизЛицо = ФИОСотрудников.ФизЛицо
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФИОФизЛица");
	
	Запрос.УстановитьПараметр("Вкусвилл",		Справочники.Организации.НайтиПоКоду("000000006")); // "Вкусвилл"
	Запрос.УстановитьПараметр("ДатаУвольнения",	ДатаУвольнения);
	
	Результаты = Запрос.ВыполнитьПакет();
	
	ДанныеСотрудников = Новый Структура();
	ДанныеСотрудников.Вставить("ОсновныеДанные", Результаты[4]);
	ДанныеСотрудников.Вставить("Телефоны", Результаты[3]);
	
	Возврат ДанныеСотрудников;

КонецФункции

//+++АК LATV 2018.07.24 0-000018902
Функция СформироватьФайлВыгрузки(ДанныеСотрудников)

	Разделитель = ";";
	
	ФайлВыгрузки = Новый ЗаписьТекста(ИмяФайла, КодировкаТекста.UTF8);
	ЗаписатьШапку(ФайлВыгрузки, Разделитель);
	
	ОсновныеДанные	= ДанныеСотрудников.ОсновныеДанные.Выбрать();
	Телефоны		= ДанныеСотрудников.Телефоны.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ОсновныеДанные.Следующий() Цикл
		
		ДанныеСтроки = Новый Массив;
		
		// Код 1С
		Код1С = ОсновныеДанные.КодФизЛица;
		ДанныеСтроки.Добавить(Код1С);
		
		// ФИО Сотрудника
		ФИОФизЛица = ФИОФизЛица(ОсновныеДанные.ФИОФизЛица, ОсновныеДанные.ФамилияФизЛица
			, ОсновныеДанные.ИмяФизЛица, ОсновныеДанные.ОтчествоФизЛица, ОсновныеДанные.РазделитьФИОФизЛица);
		
		// Фамилия сотрудника
		ДанныеСтроки.Добавить(ФИОФизЛица[0]);
		
		// Имя сотрудника
		ДанныеСтроки.Добавить(ФИОФизЛица[1]);
		
		// Отчество сотрудника
		ДанныеСтроки.Добавить(ФИОФизЛица[2]);
		
		// Дата рождения
		ДатаРождения = ОсновныеДанные.ДатаРождения;
		ДанныеСтроки.Добавить(Формат(ДатаРождения, "ДФ=dd.MM.yyyy"));
		
		// Код 1С помощника
		Код1СПомощника = ОсновныеДанные.КодПомощника;
		ДанныеСтроки.Добавить(Код1СПомощника);
		
		// ФИО помощника
		ФИОПомощника = ФИОФизЛица(ОсновныеДанные.ФИОПомощника, ОсновныеДанные.ФамилияПомощника
			, ОсновныеДанные.ИмяПомощника, ОсновныеДанные.ОтчествоПомощника, ОсновныеДанные.РазделитьФИОПомощника);
		
		// Фамилия помощника
		ДанныеСтроки.Добавить(ФИОПомощника[0]);
		
		// Имя помощника
		ДанныеСтроки.Добавить(ФИОПомощника[1]);
		
		// Отчество помощника
		ДанныеСтроки.Добавить(ФИОПомощника[2]);
		
		// Код 1С руководителя
		Код1СРуководителя = ОсновныеДанные.КодРуководителя;
		ДанныеСтроки.Добавить(Код1СРуководителя);
		
		// ФИО руководителя
		ФИОРуководителя = ФИОФизЛица(ОсновныеДанные.ФИОРуководителя, ОсновныеДанные.ФамилияРуководителя
			, ОсновныеДанные.ИмяРуководителя, ОсновныеДанные.ОтчествоРуководителя, ОсновныеДанные.РазделитьФИОРуководителя);
		
		// Фамилия руководителя
		ДанныеСтроки.Добавить(ФИОРуководителя[0]);
		
		// Имя руководителя
		ДанныеСтроки.Добавить(ФИОРуководителя[1]);
		
		// Отчество руководителя
		ДанныеСтроки.Добавить(ФИОРуководителя[2]);
		
		// Статус
		Статус = ОсновныеДанные.Статус;
		ДанныеСтроки.Добавить(Статус);
		
		// Пол
		Пол = ОсновныеДанные.Пол;
		ДанныеСтроки.Добавить(Пол);
		
		// Должность
		Должность = ОсновныеДанные.Должность;
		ДанныеСтроки.Добавить(Должность);
		 
		// Телефоны
		ТелефоныФизЛица = Новый Массив;
		Если Телефоны.НайтиСледующий(ОсновныеДанные.ФизЛицо, "ФизЛицо") Тогда
			ВыборкаТелефонов = Телефоны.Выбрать();
			Пока ВыборкаТелефонов.Следующий() Цикл
				Телефон = ВыборкаТелефонов.Телефон;
				Если ПустаяСтрока(Телефон) Тогда
					Продолжить;
				КонецЕсли;
				
				Телефон = СтрЗаменить(СокрЛП(Телефон), ";", ",");
				ТелефоныФизЛица.Добавить(Телефон);
			КонецЦикла;
		КонецЕсли;
		
		ТелефоныФизЛицаСтрокой = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ТелефоныФизЛица);
		ДанныеСтроки.Добавить(ТелефоныФизЛицаСтрокой);
		
		// Запись
		НоваяСтрока = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ДанныеСтроки, Разделитель);
		ФайлВыгрузки.ЗаписатьСтроку(НоваяСтрока);
		
	КонецЦикла;
	
	ФайлВыгрузки.Закрыть();

КонецФункции

//+++АК LATV 2018.07.24 0-000018902
Процедура ЗаписатьШапку(ФайлВыгрузки, Разделитель)

	ДанныеСтроки = Новый Массив;
	
	// Код 1С
	ДанныеСтроки.Добавить("Код 1С");
	
	// Фамилия сотрудника
	ДанныеСтроки.Добавить("Фамилия сотрудника");
	
	// Имя сотрудника
	ДанныеСтроки.Добавить("Имя сотрудника");
	
	// Отчество сотрудника
	ДанныеСтроки.Добавить("Отчество сотрудника");
	
	// Дата рождения
	ДанныеСтроки.Добавить("Дата рождения");
	
	// Код 1С помощника
	ДанныеСтроки.Добавить("Код 1С помощника");
	
	// Фамилия помощника
	ДанныеСтроки.Добавить("Фамилия помощника");
	
	// Имя помощника
	ДанныеСтроки.Добавить("Имя помощника");
	
	// Отчество помощника
	ДанныеСтроки.Добавить("Отчество помощника");
	
	// Код 1С руководителя
	ДанныеСтроки.Добавить("Код 1С руководителя");
	
	// Фамилия руководителя
	ДанныеСтроки.Добавить("Фамилия руководителя");
	
	// Имя руководителя
	ДанныеСтроки.Добавить("Имя руководителя");
	
	// Отчество руководителя
	ДанныеСтроки.Добавить("Отчество руководителя");
	
	// Статус
	ДанныеСтроки.Добавить("Статус");
	
	// Пол
	ДанныеСтроки.Добавить("Пол");
	
	// Должность
	ДанныеСтроки.Добавить("Должность");
	
	// Телефоны
	ДанныеСтроки.Добавить("Телефоны");
	
	// Запись
	НоваяСтрока = СтроковыеФункцииКлиентСервер.ПолучитьСтрокуИзМассиваПодстрок(ДанныеСтроки, Разделитель);
	ФайлВыгрузки.ЗаписатьСтроку(НоваяСтрока);

КонецПроцедуры

//+++АК LATV 2018.07.24 0-000018902
Функция ФИОФизЛица(ФИО = "", Фамилия = "", Имя = "", Отчество = "", ПолучитьИзФИО = Ложь)

	Если ПолучитьИзФИО Тогда
		МассивФИО = ОбщегоНазначения.ПолучитьМассивФИО(ФИО);
	Иначе
		МассивФИО = Новый Массив;
		МассивФИО.Добавить(Фамилия);
		МассивФИО.Добавить(Имя);
		МассивФИО.Добавить(Отчество);
	КонецЕсли;
	
	Возврат МассивФИО;

КонецФункции

#КонецОбласти

#Область МодульМенеджера

//+++АК LATV 2018.07.24 0-000018902
Функция КодДляВыполненияВПериодическихЗаданиях(ТекущаяОбработка, Параметры) Экспорт

	// Выполнение отчета
	ВыполняемаяОбработка = Обработки.ВыгрузкаДанныхСотрудников.Создать();
	
	ВыполняемаяОбработка.ДатаУвольнения	= Параметры.ДатаУвольнения;
	ВыполняемаяОбработка.ИмяФайла		= Параметры.ИмяФайла;
	
	ВыполняемаяОбработка.Выгрузить();

КонецФункции

#КонецОбласти
