<ПравилаОбмена>
	<ВерсияФормата>2.01</ВерсияФормата>
	<Ид>528b0cca-0c56-4135-88b9-66d4b8403c5f    </Ид>
	<Наименование>Листы учета</Наименование>
	<ДатаВремяСоздания>2018-05-30T18:51:23</ДатаВремяСоздания>
	<Источник ВерсияПлатформы="8.0" ВерсияКонфигурации="1.7.0.23" СинонимКонфигурации="Избенка 1.7.0.23">Избенка</Источник>
	<Приемник ВерсияПлатформы="8.0" ВерсияКонфигурации="2.0.66.46" СинонимКонфигурации="Бухгалтерия предприятия КОРП, редакция 2.0">БухгалтерияПредприятияКОРП</Приемник>
	<ПередВыгрузкойДанных>Если Параметры.УзелОбмена = Неопределено Тогда
	Параметры.УзелОбмена = ОбщегоНазначенияПовтИсп.ПолучитьУзелОбменаПоКоду("ЛУП");	
КонецЕсли;

Параметры.УзелОбменаБухСтрокой = Параметры.УзелОбмена.Код;</ПередВыгрузкойДанных>
	<ПослеВыгрузкиДанных>ПередатьОдинПараметрВПриемник("УзелОбменаБухСтрокой", Параметры.УзелОбменаБухСтрокой);</ПослеВыгрузкиДанных>
	<ПередЗагрузкойДанных>Параметры.СоответствиеГраницЗапрета = АК_ДопМодуль.АК_ПолучитьГраницыЗапрета();
</ПередЗагрузкойДанных>
	<ПослеЗагрузкиДанных>ОбменСФинансами.АК_ОтложенноеПроведениеЛУФоновое(Параметры.УзелОбменаБухСтрокой);</ПослеЗагрузкиДанных>
	<ПослеЗагрузкиОбъекта>Если Найти(ИмяТипаОбъекта, "Документ") Тогда	
	
	Отказ = Истина; //в любом непонятном случае не загружаю.
	
	ГраницаПоОрганизации = Параметры.СоответствиеГраницЗапрета[Объект.Организация];
		
	// Если регламентированная дата запрета для регламентного документа не определена
	// то используется общая дата запрета изменения данных
	Если ГраницаПоОрганизации = Неопределено Тогда
		ГраницаПоОрганизации = Параметры.СоответствиеГраницЗапрета["ОбщаяДатаЗапретаРедактирования"];    
	КонецЕсли;
		
	Если НЕ ГраницаПоОрганизации = Неопределено 
		И Объект.Дата &lt;= ГраницаПоОрганизации	Тогда
			Отказ = Истина;			
		Иначе
			Отказ = Ложь;
	КонецЕсли;

КонецЕсли;
</ПослеЗагрузкиОбъекта>
	<Параметры>
		<Параметр Имя="НомерСообщения                                    " Наименование="НомерСообщения                                    " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="СоответствиеГраницЗапрета                         " Наименование="СоответствиеГраницЗапрета                         " ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="УзелОбмена                                        " Наименование="УзелОбмена                                        " ИспользуетсяПриЗагрузке="false" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="УзелОбменаБух                                     " Наименование="УзелОбменаБух                                     " ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="false" ПередаватьПараметрПриВыгрузке="false"/>
		<Параметр Имя="УзелОбменаБухСтрокой                              " Наименование="УзелОбменаБухСтрокой                              " ИспользуетсяПриЗагрузке="true" УстанавливатьВДиалоге="false" ТипЗначения="Строка" ПередаватьПараметрПриВыгрузке="false"/>
	</Параметры>
	<Обработки/>
	<ПравилаКонвертацииОбъектов>
		<Группа>
			<Код>Документы</Код>
			<Наименование>Документы</Наименование>
			<Порядок>50</Порядок>
			<Правило>
				<Код>ЛистУчета_ОРП</Код>
				<Наименование>Документ: Лист учета</Наименование>
				<Порядок>50</Порядок>
				<ПослеЗагрузки>//стоит проверка на ДЗР, если не прошло, то будет отказ и ничего не будет загружаться дальше
Если Не Отказ Тогда
	
	//****
	//Параметры объекта
	СовместнаяДеятельность = ПараметрыОбъекта["СовместнаяДеятельность"];
	ЭтоИзбенка = ПараметрыОбъекта["ЭтоИзбенка"];
	СуммаИнкассации = ПараметрыОбъекта["СуммаИнкассации"];
	ТорговаяТочка = ПараметрыОбъекта["ТорговаяТочка"];
	
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(Объект, глЗначениеПеременной("глТекущийПользователь"), Объект.мВалютаРегламентированногоУчета, "Продажа", Неопределено);	
	
	Объект.СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.ПолучитьСсылку(Новый УникальныйИдентификатор("396f3f29-b85b-11e0-b603-001517297ae2")); //Поступление от покупателей, код 000000007
	Объект.ВидОперации = Перечисления.ВидыОперацийОтчетОРозничныхПродажах.ОтчетККМОПродажах;
	Объект.СчетКасса = ПланыСчетов.Хозрасчетный.КассаОрганизации; //50.01
	Объект.УчитыватьНДС = Истина;
	Объект.СуммаВключаетНДС = Истина;
	
	//Товары
	НоменклатураВТовары = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор("c6ab9f5e-fb10-11e4-b952-005056a00106")); // Все товары 
	ГруппаСовместнаяДеятельность = Справочники.НоменклатурныеГруппы.ПолучитьСсылку(Новый УникальныйИдентификатор("a3420e64-f1a5-11e4-9a59-005056a00106")); // Совместная деятельность
	
	Для Каждого СтрокаТовар Из Объект.Товары Цикл
		СтрокаТовар.Номенклатура = НоменклатураВТовары;
		Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧасти(СтрокаТовар, Истина);
		
		Если СовместнаяДеятельность Тогда
			СтрокаТовар.Субконто = ГруппаСовместнаяДеятельность;
		КонецЕсли;
		
		ОбработкаТабличныхЧастей.ПриИзмененииСуммыТабЧасти(СтрокаТовар, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрокаТовар, Объект);
	КонецЦикла;
	
	//Оплата
	Если Объект.Оплата.Количество() Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ВидыОплатОрганизаций.Ссылка КАК ВидОплаты,
		|	ВидыОплатОрганизаций.Контрагент,
		|	ВидыОплатОрганизаций.ДоговорКонтрагента,
		|	ВидыОплатОрганизаций.СчетУчетаРасчетов
		|ИЗ
		|	Справочник.ВидыОплатОрганизаций КАК ВидыОплатОрганизаций
		|ГДЕ
		|	ВидыОплатОрганизаций.Ссылка В(&amp;МассивВидовОплат)
		|;
		|ВЫБРАТЬ
		|	АК_СоответствиеВидовОплатИСчетов.ВидОплаты
		|ИЗ
		|	РегистрСведений.АК_СоответствиеВидовОплатИСчетов КАК АК_СоответствиеВидовОплатИСчетов";
		
		Запрос.УстановитьПараметр("МассивВидовОплат", Объект.Оплата.ВыгрузитьКолонку("ВидОплаты"));

		
		Результат = Запрос.ВыполнитьПакет();
		
		ТаблицаРасшифровкиВидаОплаты = Результат[0].Выгрузить();
		ВидыОплатыКурьеры = Результат[1].Выгрузить();
		
		Для Каждого СтрокаБезнал Из Объект.Оплата Цикл
			
			НайдСтрОплата = ТаблицаРасшифровкиВидаОплаты.Найти(СтрокаБезнал.ВидОплаты, "ВидОплаты");
			
			Если НЕ НайдСтрОплата = Неопределено Тогда
				СтрокаБезнал.Контрагент = НайдСтрОплата.Контрагент;
				СтрокаБезнал.ДоговорКонтрагента = НайдСтрОплата.ДоговорКонтрагента;
				СтрокаБезнал.СчетУчетаРасчетов = НайдСтрОплата.СчетУчетаРасчетов;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Объект.Комментарий = "Загрузка обработкой: " + Объект.ПодразделениеОрганизации + ?(СовместнаяДеятельность, " (Совместная деятельность)", "");		
	Объект.ОбменДанными.Загрузка = Истина;
		
	НачатьТранзакцию();
	
	ОплатыБэкап = Объект.Оплата.Выгрузить();
	
	МассивСтрДляУд = Новый Массив;
	
	Для Каждого Стр Из Объект.Оплата Цикл
		Если ВидыОплатыКурьеры.Найти(Стр.ВидОплаты, "ВидОплаты") &lt;&gt; Неопределено Тогда
			МассивСтрДляУд.Добавить(Стр);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из МассивСтрДляУд Цикл
		Объект.Оплата.Удалить(Стр);
	КонецЦикла;	
	
	Объект.Записать(РежимЗаписиДокумента.Запись);	
	
	//1. Регистр АК_СоответствиеПодразделенийЗагруженнымДокументам
	ЗаписьРегистра = РегистрыСведений.АК_СоответствиеПодразделенийЗагруженнымДокументам.СоздатьМенеджерЗаписи();
	ЗаписьРегистра.Документ = Объект.Ссылка;
	ЗаписьРегистра.Подразделение = Объект.ПодразделениеОрганизации;
	ЗаписьРегистра.Записать();
	
	//2. ПКО
	СсылкаНаПКО = Документы.ПриходныйКассовыйОрдер.ПолучитьСсылку(Новый УникальныйИдентификатор(Строка(Объект.Ссылка.УникальныйИдентификатор())));
	
	ДокПКО = СсылкаНаПКО.ПолучитьОбъект();
	
	Если ДокПКО = Неопределено Тогда
		ДокПКО = Документы.ПриходныйКассовыйОрдер.СоздатьДокумент();
		ДокПКО.УстановитьСсылкуНового(СсылкаНаПКО);
	КонецЕсли;
	
	ДокПКО.Заполнить(Объект.Ссылка);
	ДокПКО.Дата = Объект.Дата;
	ДокПКО.ПодразделениеОрганизации = Объект.ПодразделениеОрганизации;
	ДокПКО.Основание = "Розничная выручка";
	ДокПКО.Комментарий = "Загрузка обработкой: " + Объект.ПодразделениеОрганизации;
	
	ДокПКО.СуммаДокумента = ДокПКО.РасшифровкаПлатежа.Итог("СуммаПлатежа");
	//ДокПКО.ОбменДанными.Загрузка = Истина;
	
	Если ЗначениеЗаполнено(ДокПКО.СуммаДокумента) ИЛИ НЕ ДокПКО.ЭТоНовый() Тогда
		ДокПКО.Записать(?(ДокПКО.Проведен, РежимЗаписиДокумента.ОтменаПроведения, РежимЗаписиДокумента.Запись));
		СсылкаНаОбъект = ДокПКО.Ссылка;
		Если ЗначениеЗаполнено(ДокПКО.СуммаДокумента) Тогда
			Выполнить(Алгоритмы.ЗаписатьОбъектВОтложенноеПроведение);		
		КонецЕсли;
	КонецЕсли;
	
	//бэкапленая оплата
	Объект.Оплата.Загрузить(ОплатыБэкап);		
	Объект.Записать(РежимЗаписиДокумента.Запись);
	
	СсылкаНаОбъект = Объект.Ссылка;
	Выполнить(Алгоритмы.ЗаписатьОбъектВОтложенноеПроведение);	
	
	//3. Инкассация (только для точек с видом "Избенка"
	Если ЭтоИзбенка И ЗначениеЗаполнено(СуммаИнкассации) Тогда
		СсылкаНаОперацию = Документы.ОперацияБух.ПолучитьСсылку(Новый УникальныйИдентификатор(Строка(Объект.Ссылка.УникальныйИдентификатор())));
		
		ДокОперация = СсылкаНаОперацию.ПолучитьОбъект();
		
		Если ДокОперация = Неопределено Тогда
			ДокОперация = Документы.ОперацияБух.СоздатьДокумент();
			ДокОперация.УстановитьСсылкуНового(СсылкаНаОперацию);							
		КонецЕсли;
		
		ДокОперация.Движения.Хозрасчетный.Очистить();
		ДокОперация.Дата = Объект.Дата;
		ДокОперация.СуммаОперации = СуммаИнкассации;
		ДокОперация.Организация = Объект.Организация;
		
		Если ДокОперация.ЭтоНовый() Тогда
			ДокОперация.УстановитьНовыйНомер();
		КонецЕсли;
		
		Движение = ДокОперация.Движения.Хозрасчетный.Добавить();
		Движение.Период = Объект.Дата;
		Движение.Организация = Объект.Организация;
		Движение.СчетДт = ПланыСчетов.Хозрасчетный.ПереводыВПути; //57.01
		Движение.СчетКт = ПланыСчетов.Хозрасчетный.КассаОрганизации; //50.01
		Движение.ПодразделениеДт = Объект.ПодразделениеОрганизации;
		Движение.ПодразделениеКт = Объект.ПодразделениеОрганизации;
		Движение.Сумма = СуммаИнкассации;			
		СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ПолучитьСсылку(Новый УникальныйИдентификатор("e85a75ab-a9f9-11e4-be51-005056a00106")); //Инкассация		
		Движение.СубконтоДт.СтатьиДвиженияДенежныхСредств=СтатьяДДС;
		Движение.СубконтоКт.СтатьиДвиженияДенежныхСредств=СтатьяДДС;		
		ДокОперация.Комментарий = "Инкассация по ЛУ " + ТорговаяТочка;
		ДокОперация.ОбменДанными.Загрузка = Истина;
		ДокОперация.Содержание = "Обработка выгрузки";
		
		ДокОперация.Записать();
		
	КонецЕсли;	
	
	ЗафиксироватьТранзакцию();	
	
КонецЕсли;

Отказ = Истина;</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<Источник>ДокументСсылка.ЛистУчета</Источник>
				<Приемник>ДокументСсылка.ОтчетОРозничныхПродажах</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<КодПравилаКонвертации>ПодразделенияОрганизаций                          </КодПравилаКонвертации>
						<ПередВыгрузкой>ИсходящиеДанные = Новый Структура;
ИсходящиеДанные.Вставить("КодОПБух", ВходящиеДанные.КодОПБух);
ИсходящиеДанные.Вставить("НаименованиеПодразделенияДляПоиска", ВходящиеДанные.НаименованиеПодразделенияДляПоиска);
ИсходящиеДанные.Вставить("Владелец", ВходящиеДанные.Организация);
ИсходящиеДанные.Вставить("ЭтоИзбенка", ВходящиеДанные.ЭтоИзбенка);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>13</Код>
						<Наименование> --&gt; Склад</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Склад" Вид="Реквизит" Тип="СправочникСсылка.Склады"/>
						<ПередВыгрузкой>ИсходящиеДанные = Новый Структура;

Если ВходящиеДанные.ПоискСкладаВРазрезеПодразделения Тогда
	ИсходящиеДанные.Вставить("ПодразделениеОрганизации", ВходящиеДанные.ПодразделениеОрганизации);
Иначе
	ИсходящиеДанные.Вставить("ПодразделениеОрганизации", Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
КонецЕсли;

ИсходящиеДанные.Вставить("Наименование", ВходящиеДанные.ИмяККМ);

ИмяПКО = "Склады";

Если ВходящиеДанные.ПоискСкладаВРазрезеПодразделения Тогда
	Значение = Новый Структура("ПодразделениеОрганизации, Наименование", ВходящиеДанные.ПодразделениеОрганизации, ВходящиеДанные.ИмяККМ);
Иначе
	Значение = Новый Структура("ПодразделениеОрганизации, Наименование", Справочники.ПодразделенияОрганизаций.ПустаяСсылка(), ВходящиеДанные.ИмяККМ);
КонецЕсли;</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; </Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>СовместнаяДеятельность</ИмяПараметраДляПередачи>
					</Свойство>
					<Свойство>
						<Код>14</Код>
						<Наименование> --&gt; </Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ЭтоИзбенка</ИмяПараметраДляПередачи>
					</Свойство>
					<Свойство>
						<Код>15</Код>
						<Наименование> --&gt; </Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>СуммаИнкассации</ИмяПараметраДляПередачи>
					</Свойство>
					<Свойство>
						<Код>16</Код>
						<Наименование> --&gt; </Наименование>
						<Порядок>400</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ТорговаяТочка</ИмяПараметраДляПередачи>
					</Свойство>
					<Свойство>
						<Код>17</Код>
						<Наименование> --&gt; </Наименование>
						<Порядок>450</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>УзелОбменаСтрокой</ИмяПараметраДляПередачи>
					</Свойство>
					<Группа>
						<Код>4</Код>
						<Наименование> --&gt; Товары</Наименование>
						<Порядок>500</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>5</Код>
							<Наименование> --&gt; СтавкаНДС</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							<КодПравилаКонвертации>СтавкиНДС                                         </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; Количество</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Цена</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Цена" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
					</Группа>
					<Группа>
						<Код>9</Код>
						<Наименование> --&gt; Оплата</Наименование>
						<Порядок>550</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Оплата" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; СуммаОплаты</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СуммаОплаты" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>12</Код>
							<Наименование> --&gt; ВидОплаты</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="ВидОплаты" Вид="Реквизит" Тип="СправочникСсылка.ВидыОплатОрганизаций"/>
							<ПередВыгрузкой>ИсходящиеДанные = Новый Структура;
ИсходящиеДанные.Вставить("Организация", ВходящиеДанные.Организация);
ИсходящиеДанные.Вставить("Префикс", ОбъектКоллекции.Префикс);

ИмяПКО = "ВидыОплатОрганизаций";

//УзелСсылки  = ВыгрузитьПоПравилу(, , ИсходящиеДанные, , ИмяПКО);
Значение = Новый Структура("Организация, Префикс", Источник.Организация, ОбъектКоллекции.Префикс);</ПередВыгрузкой>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ЛистУчета_ВозвратИзСейфа</Код>
				<Наименование>Документ: Лист учета</Наименование>
				<Порядок>100</Порядок>
				<ПослеЗагрузки>//стоит проверка на ДЗР, если не прошло, то будет отказ и ничего не будет загружаться дальше
Если Не Отказ Тогда
	
	ТорговаяТочка = ПараметрыОбъекта["ТорговаяТочка"];
	НомерТочки = ПараметрыОбъекта["НомерТочки"];
	
	ГлЗначениеПеременнойТекущийПользователь = глЗначениеПеременной("глТекущийПользователь");
	
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(Объект, ГлЗначениеПеременнойТекущийПользователь, Объект.мВалютаРегламентированногоУчета, "Продажа", Неопределено);
	ЗаполнениеДокументов.ПриИзмененииЗначенияОрганизации(Объект, ГлЗначениеПеременнойТекущийПользователь);
	
	Объект.ВидОперации = Перечисления.ВидыОперацийВозвратТоваровОтПокупателя.ПродажаКомиссия;
	Объект.Контрагент = Справочники.Контрагенты.ПолучитьСсылку(Новый УникальныйИдентификатор("5416da5b-b11e-11e0-b602-001517297ae2")); // Розничный покупатель, с кодом 000001178
	
	Запрос = Новый Запрос;
	Запрос.Текст =	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК ДоговорРозничныйПокупатель
	|ИЗ
	| 	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов	
	|ГДЕ
	|	НЕ ДоговорыКонтрагентов.ПометкаУдаления
	|	И ДоговорыКонтрагентов.Владелец = &amp;Контрагент
	|	И ДоговорыКонтрагентов.Организация = &amp;Организация
	|	И ДоговорыКонтрагентов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)";
	
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Объект.ДоговорКонтрагента = Выборка.ДоговорРозничныйПокупатель;
	КонецЕсли;
	
	Объект.УчитыватьНДС = Истина;
	Объект.СуммаВключаетНДС = Истина;
	Объект.КурсВзаиморасчетов = 1;
	Объект.КратностьВзаиморасчетов = 1;
	Объект.ОтразитьВКнигеПокупок = Истина;
	Объект.Склад = Справочники.Склады.ПолучитьСсылку(Новый УникальныйИдентификатор("a6550327-ebe2-11e3-9bf2-005056a00106")); //СКЛАД брака (для возвратов)
	Объект.Комментарий = "Загружен по возврату из сейфа " + ТорговаяТочка;
	Объект.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.РасчетыСРозничнымиПокупателями; //62.Р
	Объект.СчетУчетаРасчетовПоАвансам = ПланыСчетов.Хозрасчетный.РасчетыСРозничнымиПокупателями; //62.Р
	Объект.СчетУчетаНДС = ПланыСчетов.Хозрасчетный.НДС; //68.02
	Объект.ПокупателемВыставляетсяСчетФактураНаВозврат = Истина;
	
	Для Каждого Стр Из Объект.Товары Цикл
		Объект.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(Стр, "Товары", Истина);
		ОбработкаТабличныхЧастей.ЗаполнитьНомерГТДИСтрануПроисхождения(Стр);	
		
		Если Стр.Себестоимость &lt;= 0 Тогда
			Стр.Себестоимость = 1;
		КонецЕсли;
		
		ОбработкаТабличныхЧастей.ПриИзмененииСуммыТабЧасти(Стр, Объект);
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Стр, Объект);
	КонецЦикла;
	
	Объект.ОбменДанными.Загрузка = Истина;
	
	НачатьТранзакцию();
	
	Объект.Записать(РежимЗаписиДокумента.Запись);
	
	СсылкаНаОбъект = Объект.Ссылка;
	Выполнить(Алгоритмы.ЗаписатьОбъектВОтложенноеПроведение);
	
	//Свойства объектов - загружен по возврату из сейфа
	Запись = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
	Запись.Объект 	= Объект.Ссылка;
	Запись.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.ПолучитьСсылку(Новый УникальныйИдентификатор("b87d971f-f979-11e4-b952-005056a00106")); // "Загружен по возврату из сейфа"
	Запись.Значение = Истина;
	Запись.Записать();
	
	//свойства объектов - номер точки в финансах
	Запись = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
	Запись.Объект 	= Объект.Ссылка;
	Запись.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.ПолучитьСсылку(Новый УникальныйИдентификатор("cafe875f-f979-11e4-b952-005056a00106")); // "Номер точки в финансах"
	Запись.Значение = НомерТочки;
	Запись.Записать();
	
	//отражение НДС к вычету
	СсылкаНаОтражение = Документы.ОтражениеНДСКВычету.ПолучитьСсылку(Новый УникальныйИдентификатор(Строка(Объект.Ссылка.УникальныйИдентификатор())));
	
	ДокОтражение = СсылкаНаОтражение.ПолучитьОбъект();
	
	Если ДокОтражение = Неопределено Тогда	
		ДокОтражение = Документы.ОтражениеНДСКВычету.СоздатьДокумент();
		ДокОтражение.УстановитьСсылкуНового(СсылкаНаОтражение);
	КонецЕсли;
	
	ДокОтражение.ТоварыИУслуги.Очистить(); //чтобы при заполнении на клиенте не долбило вопросами
	ДокОтражение.Заполнить(Объект.Ссылка);
	ДокОтражение.КодВидаОперации = "17";
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ДокОтражение, ГлЗначениеПеременнойТекущийПользователь, ДокОтражение.мВалютаРегламентированногоУчета, "Покупка");
	ДокОтражение.Дата = Объект.Дата;
	ДокОтражение.ПрямаяЗаписьВКнигу = Истина;
	ДокОтражение.ИспользоватьДокументРасчетовКакСчетФактуру = Истина;
	ДОкОтражение.ОбменДанными.Загрузка = Истина;
	
	ДокОтражение.Записать(РежимЗаписиДокумента.Запись);
	
	СсылкаНаОбъект = ДокОтражение.Ссылка;
	Выполнить(Алгоритмы.ЗаписатьОбъектВОтложенноеПроведение); 
	
	//РКО
	СсылкаНаРКО = Документы.РасходныйКассовыйОрдер.ПолучитьСсылку(Новый УникальныйИдентификатор(Строка(Объект.Ссылка.УникальныйИдентификатор())));
	
	ДокРКО = СсылкаНаРКО.ПолучитьОбъект();
	
	Если ДокРКО = Неопределено Тогда
		ДокРКО = Документы.РасходныйКассовыйОрдер.СоздатьДокумент();
		ДокРКО.УстановитьСсылкуНового(СсылкаНаРКО);
	КонецЕсли;
	
	ДокРКО.РасшифровкаПлатежа.Очистить();
	
	СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ПолучитьСсылку(Новый УникальныйИдентификатор("92a279ed-f8e5-11e6-a30f-005056a00106")); // Возврат товара от покупателя, с кодом 901039"
	
	ДокРКО.Заполнить(Объект.Ссылка);
	ДокРКО.СтатьяДвиженияДенежныхСредств = СтатьяДДС;
	
	Для Каждого СтрокаРасш Из ДокРКО.РасшифровкаПлатежа Цикл
		СтрокаРасш.СтатьяДвиженияДенежныхСредств = СтатьяДДС;
	КонецЦикла;	
	
	ДокРКО.Дата = НачалоДня(Объект.Дата) + 21 * 3600;
	ДокРКО.ПодразделениеОрганизации = Объект.ПодразделениеОрганизации;
	ДокРКО.ОбменДанными.Загрузка = Истина;
	
	ДокРКО.Записать(РежимЗаписиДокумента.Запись);
	
	СсылкаНаОбъект = ДокРКО.Ссылка;
	Выполнить(Алгоритмы.ЗаписатьОбъектВОтложенноеПроведение);
	
	ЗафиксироватьТранзакцию();	
	
КонецЕсли;

Отказ = Истина;	
</ПослеЗагрузки>
				<НеЗапоминатьВыгруженные>true</НеЗапоминатьВыгруженные>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<Источник>ДокументСсылка.ЛистУчета</Источник>
				<Приемник>ДокументСсылка.ВозвратТоваровОтПокупателя</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
						<ПередВыгрузкой>Значение = КонецДня(ВходящиеДанные.Дата);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
						<ПередВыгрузкой>ИсходящиеДанные = Новый Структура;
ИсходящиеДанные.Вставить("КодОПБух", ВходящиеДанные.КодОПБух);
ИсходящиеДанные.Вставить("НаименованиеПодразделенияДляПоиска", ВходящиеДанные.НаименованиеПодразделенияДляПоиска);
ИсходящиеДанные.Вставить("Владелец", ВходящиеДанные.Организация);
ИсходящиеДанные.Вставить("ЭтоИзбенка", ВходящиеДанные.ЭтоИзбенка);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; </Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ТорговаяТочка</ИмяПараметраДляПередачи>
					</Свойство>
					<Свойство>
						<Код>11</Код>
						<Наименование> --&gt; </Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>НомерТочки</ИмяПараметраДляПередачи>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование> --&gt; </Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>УзелОбменаСтрокой</ИмяПараметраДляПередачи>
					</Свойство>
					<Группа>
						<Код>5</Код>
						<Наименование> --&gt; Товары</Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Товары" Вид="ТабличнаяЧасть"/>
						<Свойство>
							<Код>6</Код>
							<Наименование> --&gt; Номенклатура</Наименование>
							<Порядок>50</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Номенклатура" Вид="Реквизит" Тип="СправочникСсылка.Номенклатура"/>
							<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
						</Свойство>
						<Свойство>
							<Код>7</Код>
							<Наименование> --&gt; Количество</Наименование>
							<Порядок>100</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Количество" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>8</Код>
							<Наименование> --&gt; Сумма</Наименование>
							<Порядок>150</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Сумма" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>9</Код>
							<Наименование> --&gt; Себестоимость</Наименование>
							<Порядок>200</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="Себестоимость" Вид="Реквизит" Тип="Число"/>
						</Свойство>
						<Свойство>
							<Код>10</Код>
							<Наименование> --&gt; СтавкаНДС</Наименование>
							<Порядок>250</Порядок>
							<Источник Имя="" Вид=""/>
							<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
							<КодПравилаКонвертации>СтавкиНДС                                         </КодПравилаКонвертации>
						</Свойство>
					</Группа>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПКО_Операция</Код>
				<Наименование>Документ: Поступление в банк</Наименование>
				<Порядок>150</Порядок>
				<ПослеЗагрузки>//стоит проверка на ДЗР, если не прошло, то будет отказ и ничего не будет загружаться дальше
Если Не Отказ Тогда
	
	Если Объект.ЭтоНовый() Тогда
		Объект.УстановитьНовыйНомер();
	КонецЕсли;
	
	Объект.Содержание = "Обработка выгрузки";
	
	ПодразделениеКт = ПараметрыОбъекта["ПодразделениеОрганизации"];
	
	Объект.Движения.Хозрасчетный.Очистить();
	
	Движение = Объект.Движения.Хозрасчетный.Добавить();
	Движение.Активность = НЕ Объект.ПометкаУдаления;
	Движение.Период = Объект.Дата;
	Движение.Организация = Объект.Организация;
	Движение.СчетДт = ПланыСчетов.Хозрасчетный.КассаОрганизации; //50.01
	Движение.СчетКт = ПланыСчетов.Хозрасчетный.ПереводыВПути; //57.01
	Движение.ПодразделениеДт = Справочники.ПодразделенияОрганизаций.ПолучитьСсылку(Новый УникальныйИдентификатор("0a3758a1-fc5b-11e1-9aa8-000c29e4e68a")); //Управление розницей
	Движение.ПодразделениеКт = ПодразделениеКт;
	Движение.Сумма = Объект.СуммаОперации;
	
	СтатьяДДС = Справочники.СтатьиДвиженияДенежныхСредств.ПолучитьСсылку(Новый УникальныйИдентификатор("e85a75ab-a9f9-11e4-be51-005056a00106")); //Инкассация
	
	Движение.СубконтоДт.СтатьиДвиженияДенежныхСредств = СтатьяДДС;
	Движение.СубконтоКт.СтатьиДвиженияДенежныхСредств = СтатьяДДС;
	Объект.ОбменДанными.Загрузка = Истина;
	
	НачатьТранзакцию();
	
	Объект.Записать();
	Объект.Движения.Хозрасчетный.Записать();
	ЗафиксироватьТранзакцию();	
	
КонецЕсли;

Отказ = Истина;
		
		
</ПослеЗагрузки>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<Источник>ДокументСсылка.ПоступлениеВБанк</Источник>
				<Приемник>ДокументСсылка.ОперацияБух</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование> --&gt; Дата</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Дата" Вид="Свойство" Тип="Дата"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование> --&gt; СуммаОперации</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="СуммаОперации" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; ПометкаУдаления</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; </Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ПодразделениеОрганизации</ИмяПараметраДляПередачи>
						<ПередВыгрузкой>ИсходящиеДанные = Новый Структура;
ИсходящиеДанные.Вставить("КодОПБух", ВходящиеДанные.КодОПБух);
ИсходящиеДанные.Вставить("НаименованиеПодразделенияДляПоиска", ВходящиеДанные.НаименованиеПодразделенияДляПоиска);
ИсходящиеДанные.Вставить("Владелец", ВходящиеДанные.Организация);
ИсходящиеДанные.Вставить("ЭтоИзбенка", ВходящиеДанные.ЭтоИзбенка);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование> --&gt; </Наименование>
						<Порядок>350</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>УзелОбменаСтрокой</ИмяПараметраДляПередачи>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Справочники</Код>
			<Наименование>Справочники                                       </Наименование>
			<Порядок>100</Порядок>
			<Правило>
				<Код>Организации</Код>
				<Наименование>Справочник: Организации</Наименование>
				<Порядок>100</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Источник>СправочникСсылка.Организации</Источник>
				<Приемник>СправочникСсылка.Организации</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>ИНН --&gt; ИНН</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="ИНН" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ПодразделенияОрганизаций</Код>
				<Наименование>Справочник: Структурные единицы</Наименование>
				<Порядок>150</Порядок>
				<ПослеЗагрузки>Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
		|ПодразделенияОрганизаций.Ссылка	
		|ИЗ
		|Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		|ГДЕ
		|ПодразделенияОрганизаций.Наименование = ""Управление розницей""
		|И ПодразделенияОрганизаций.Владелец = &amp;Владелец
		|И НЕ ПодразделенияОрганизаций.ПометкаУдаления";
Запрос.УстановитьПараметр("Владелец", Объект.Владелец);
	
Выборка = Запрос.Выполнить().Выбрать();
	
Если Выборка.Следующий() И Объект.Родитель.Пустая() Тогда
	Объект.Родитель = Выборка.Ссылка;
КонецЕсли;	
</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>// В правиле выгрузки объекта подразумевается, что точки по Избенке и точки по Магазинам ищутся по разному. Поэтому я здесь также ищу по разному.

ЭтоИзбенка = ПараметрыОбъекта["ЭтоИзбенка"];
ПрекратитьПоиск = Ложь;

//по избенка поиск идёт либо по КодОПБух, либо по наименованию подразделения.
Если ЭтоИзбенка Тогда
	
	КодОПБух = ПараметрыОбъекта["КодОПБух"];
	НаименованиеПодразделенияДляПоиска = ПараметрыОбъекта["НаименованиеПодразделенияДляПоиска"];
	Организация = СвойстваПоиска["Владелец"];
	
	Если ЗначениеЗаполнено(КодОПБух) Или ЗначениеЗаполнено(НаименованиеПодразделенияДляПоиска) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
			|	ПодразделенияОрганизаций.Ссылка
			|ИЗ
			|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
			|ГДЕ
			|	&amp;СтрокаПоискаКодНаименование	
			|	И ПодразделенияОрганизаций.Владелец = &amp;Владелец
			|	И НЕ ПодразделенияОрганизаций.ПометкаУдаления";
	
		Если ЗначениеЗаполнено(КодОПБух) Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&amp;СтрокаПоискаКодНаименование", "ПодразделенияОрганизаций.Код = &amp;Код");
			Запрос.УстановитьПараметр("Код", КодОПБух);
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "&amp;СтрокаПоискаКодНаименование", "ПодразделенияОрганизаций.Наименование = &amp;Наименование");
			Запрос.УстановитьПараметр("Наименование", НаименованиеПодразделенияДляПоиска);
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Владелец", Организация);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			СсылкаНаОбъект = Выборка.Ссылка;
			ПрекратитьПоиск = Истина;
		КонецЕсли;
		
	КонецЕсли;
		
КонецЕсли;
	
Если НЕ ПрекратитьПоиск Тогда		
	
	Если НомерВариантаПоиска = 1 Тогда
		СтрокаИменСвойствПоиска = "Префикс,Владелец";
	КонецЕсли;
	
КонецЕсли;
		
		</ПоследовательностьПолейПоиска>
				<НеЗамещать>true</НеЗамещать>
				<Источник>СправочникСсылка.СтруктурныеЕдиницы</Источник>
				<Приемник>СправочникСсылка.ПодразделенияОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<НеЗамещать>true</НеЗамещать>
						<Код>1</Код>
						<Наименование>НомерТочки --&gt; Префикс</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="НомерТочки" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="Префикс" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Формат(Источник.НомерТочки, "ЧГ=0");</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<НеЗамещать>true</НеЗамещать>
						<Код>3</Код>
						<Наименование>НомерТочки --&gt; Код</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="НомерТочки" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПередВыгрузкой>Значение = Формат(Источник.НомерТочки, "ЧГ=0");</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<НеЗамещать>true</НеЗамещать>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>НомерТочки --&gt; ЦифровойИндексОбособленногоПодразделения</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="НомерТочки" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="ЦифровойИндексОбособленногоПодразделения" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; ОбособленноеПодразделение</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ОбособленноеПодразделение" Вид="Реквизит" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Истина;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование> --&gt; Владелец</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>Код --&gt; РегистрацияВИФНС</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="РегистрацияВИФНС" Вид="Реквизит" Тип="СправочникСсылка.РегистрацияВИФНС"/>
						<ПередВыгрузкой>Орг = ВходящиеДанные.Владелец;	

//поля поиска
Если НЕ ЗначениеЗаполнено(Источник.ОКТМОДляВыгрузкиВБух)
	ИЛИ НЕ ЗначениеЗаполнено(Источник.КППДляВыгрузкиВБух) Тогда	
	Отказ = Истина;
КонецЕсли;

ИсходящиеДанные = Новый Структура;
ИсходящиеДанные.Вставить("КодПоОКТМО"	, Источник.ОКТМОДляВыгрузкиВБух);
ИсходящиеДанные.Вставить("КПП"			, Источник.КППДляВыгрузкиВБух);
ИсходящиеДанные.Вставить("Владелец", Орг);
ИсходящиеДанные.Вставить("НаименованиеИФНС", Строка(Источник.КонтрагентИФНС));
ИсходящиеДанные.Вставить("КодПоОКАТО", Источник.ОКАТО);
ИсходящиеДанные.Вставить("Код", Источник.КодИФНС);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>КППДляВыгрузкиВБух --&gt; КПП</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="КППДляВыгрузкиВБух" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КПП" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Отказ = НЕ ЗначениеЗаполнено(Источник.КППДляВыгрузкиВБух);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>ОКТМОДляВыгрузкиВБух --&gt; КодПоОКТМО</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="ОКТМОДляВыгрузкиВБух" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодПоОКТМО" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Отказ = НЕ ЗначениеЗаполнено(Источник.ОКТМОДляВыгрузкиВБух);</ПередВыгрузкой>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>ОКАТО --&gt; КодПоОКАТО</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="ОКАТО" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="КодПоОКАТО" Вид="Реквизит" Тип="Строка"/>
						<ПередВыгрузкой>Отказ = НЕ ЗначениеЗаполнено(Источник.ОКАТО);</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>11</Код>
						<Наименование> --&gt; </Наименование>
						<Порядок>550</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>КодОПБух</ИмяПараметраДляПередачи>
					</Свойство>
					<Свойство Поиск="true">
						<Код>12</Код>
						<Наименование> --&gt; </Наименование>
						<Порядок>600</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>НаименованиеПодразделенияДляПоиска</ИмяПараметраДляПередачи>
					</Свойство>
					<Свойство Поиск="true">
						<Код>13</Код>
						<Наименование> --&gt; </Наименование>
						<Порядок>650</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>ЭтоИзбенка</ИмяПараметраДляПередачи>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>ВидыОплатОрганизаций</Код>
				<Наименование>: </Наименование>
				<Порядок>200</Порядок>
				<ПоследовательностьПолейПоиска>Если НомерВариантаПоиска = 1 Тогда
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
|	ВидыОплатОрганизаций.Организация,
|	ВидыОплатОрганизаций.Ссылка,
|	ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, """") КАК Префикс
|ИЗ
|	Справочник.ВидыОплатОрганизаций КАК ВидыОплатОрганизаций
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
|		ПО ВидыОплатОрганизаций.Ссылка = ЗначенияСвойствОбъектов.Объект
|			И (ЗначенияСвойствОбъектов.Свойство = &amp;Свойство)
|ГДЕ
|	НЕ ВидыОплатОрганизаций.ПометкаУдаления
|	И ВидыОплатОрганизаций.Организация = &amp;Организация
|	И ВЫБОР
|			КОГДА &amp;ПрефиксЗаполнен
|				ТОГДА ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, """") = &amp;Префикс
|			ИНАЧЕ ИСТИНА
|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("Организация", СвойстваПоиска["Организация"]);
	Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.ПолучитьСсылку(Новый УникальныйИдентификатор("4700f60c-d14a-11e4-93e5-005056a00106"))); //Префикс терминала (для видов оплат)
	
	Префикс = ПараметрыОбъекта["Префикс"];
	
	Запрос.УстановитьПараметр("ПрефиксЗаполнен", ЗначениеЗаполнено(Префикс));
	Запрос.УстановитьПараметр("Префикс", Префикс);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		СсылкаНаОбъект = Выборка.Ссылка;
	КонецЕсли;
	
ИначеЕсли НомерВариантаПоиска = 2 Тогда
	
	СтрокаИменСвойствПоиска = "Организация,ПометкаУдаления";
	
КонецЕсли;
	
	</ПоследовательностьПолейПоиска>
				<НеЗамещать>true</НеЗамещать>
				<НеСоздаватьЕслиНеНайден>true</НеСоздаватьЕслиНеНайден>
				<Приемник>СправочникСсылка.ВидыОплатОрганизаций</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; Организация</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Организация" Вид="Реквизит" Тип="СправочникСсылка.Организации"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; ПометкаУдаления</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<ПередВыгрузкой>Значение = Ложь;</ПередВыгрузкой>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; </Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="" Вид=""/>
						<ИмяПараметраДляПередачи>Префикс</ИмяПараметраДляПередачи>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Склады</Код>
				<Наименование>: </Наименование>
				<Порядок>250</Порядок>
				<ПослеЗагрузки>Объект.ВидСклада = Перечисления.ВидыСкладов.НеавтоматизированнаяТорговаяТочка;
Объект.ТипЦенРозничнойТорговли = Справочники.ТипыЦенНоменклатуры.ПолучитьСсылку(Новый УникальныйИдентификатор("fe5390f7-f6ed-11df-9731-001e5848397d")); //Основная цена продажи
Объект.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПолучитьСсылку(Новый УникальныйИдентификатор("fe539103-f6ed-11df-9731-001e5848397d")); //Основная номенклатурная группа
Объект.Код = Объект.Наименование;</ПослеЗагрузки>
				<ПоследовательностьПолейПоиска>Если НомерВариантаПоиска = 1 Тогда
	Если ЗначениеЗаполнено(СвойстваПоиска["ПодразделениеОрганизации"]) Тогда
		СтрокаИменСвойствПоиска = "ПодразделениеОрганизации,Наименование";
	Иначе
		СтрокаИменСвойствПоиска = "Наименование";
	КонецЕсли;
КонецЕсли;</ПоследовательностьПолейПоиска>
				<НеЗамещать>true</НеЗамещать>
				<Приемник>СправочникСсылка.Склады</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; ПодразделениеОрганизации</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="ПодразделениеОрганизации" Вид="Реквизит" Тип="СправочникСсылка.ПодразделенияОрганизаций"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>РегистрацияВИФНС</Код>
				<Наименование>: </Наименование>
				<Порядок>300</Порядок>
				<ПослеЗагрузки>Если Объект.ЭтоНовый() Тогда
	Если Объект.Наименование="" Тогда
		Объект.Наименование="ОКТМО/КПП: "+Объект.КодПоОКТМО+"/"+Объект.КПП;
	КонецЕсли;	
КонецЕсли;</ПослеЗагрузки>
				<НеЗамещать>true</НеЗамещать>
				<Приемник>СправочникСсылка.РегистрацияВИФНС</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование> --&gt; КодПоОКТМО</Наименование>
						<Порядок>50</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодПоОКТМО" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование> --&gt; КПП</Наименование>
						<Порядок>100</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КПП" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>3</Код>
						<Наименование> --&gt; Владелец</Наименование>
						<Порядок>150</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Владелец" Вид="Свойство" Тип="СправочникСсылка.Организации"/>
						<КодПравилаКонвертации>Организации                                       </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование> --&gt; НаименованиеИФНС</Наименование>
						<Порядок>200</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="НаименованиеИФНС" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование> --&gt; Код</Наименование>
						<Порядок>250</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>6</Код>
						<Наименование> --&gt; КодПоОКАТО</Наименование>
						<Порядок>300</Порядок>
						<ПолучитьИзВходящихДанных>true</ПолучитьИзВходящихДанных>
						<Источник Имя="" Вид=""/>
						<Приемник Имя="КодПоОКАТО" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>Номенклатура</Код>
				<Наименование>Справочник: Номенклатура</Наименование>
				<Порядок>350</Порядок>
				<ПоследовательностьПолейПоиска>Если НомерВариантаПоиска = 1 тогда
 
 СтрокаИменСвойствПоиска = "ИД,ЭтоГруппа";
 
Иначе
 
 СтрокаИменСвойствПоиска = "Наименование,ЭтоГруппа";
 
КонецЕсли;</ПоследовательностьПолейПоиска>
				<НеЗамещать>true</НеЗамещать>
				<Источник>СправочникСсылка.Номенклатура</Источник>
				<Приемник>СправочникСсылка.Номенклатура</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>id_tov --&gt; ИД</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="id_tov" Вид="Реквизит" Тип="Число"/>
						<Приемник Имя="ИД" Вид="Реквизит" Тип="Число"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Артикул --&gt; Артикул</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Артикул" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Артикул" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>БазоваяЕдиницаИзмерения --&gt; БазоваяЕдиницаИзмерения</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="БазоваяЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
						<Приемник Имя="БазоваяЕдиницаИзмерения" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторЕдиницИзмерения"/>
						<КодПравилаКонвертации>КлассификаторЕдиницИзмерения                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриводитьКДлине>11</ПриводитьКДлине>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>Комментарий --&gt; Комментарий</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="Комментарий" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>6</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>300</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>7</Код>
						<Наименование>НоменклатурнаяГруппа --&gt; НоменклатурнаяГруппа</Наименование>
						<Порядок>350</Порядок>
						<Источник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
						<Приемник Имя="НоменклатурнаяГруппа" Вид="Реквизит" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
						<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>8</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>400</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>9</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>450</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.Номенклатура"/>
						<КодПравилаКонвертации>Номенклатура                                      </КодПравилаКонвертации>
					</Свойство>
					<Свойство>
						<Код>10</Код>
						<Наименование>СтавкаНДС --&gt; СтавкаНДС</Наименование>
						<Порядок>500</Порядок>
						<Источник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
						<Приемник Имя="СтавкаНДС" Вид="Реквизит" Тип="ПеречислениеСсылка.СтавкиНДС"/>
						<КодПравилаКонвертации>СтавкиНДС                                         </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>11</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>550</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>12</Код>
						<Наименование>КодТНВЭД --&gt; КодТНВЭД</Наименование>
						<Порядок>600</Порядок>
						<Источник Имя="КодТНВЭД" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторТНВЭД"/>
						<Приемник Имя="КодТНВЭД" Вид="Реквизит" Тип="СправочникСсылка.КлассификаторТНВЭД"/>
						<КодПравилаКонвертации>КлассификаторТНВЭД                                </КодПравилаКонвертации>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КлассификаторЕдиницИзмерения</Код>
				<Наименование>Справочник: Классификатор единиц измерения</Наименование>
				<Порядок>400</Порядок>
				<НеЗамещать>true</НеЗамещать>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<Источник>СправочникСсылка.КлассификаторЕдиницИзмерения</Источник>
				<Приемник>СправочникСсылка.КлассификаторЕдиницИзмерения</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<ПриводитьКДлине>4</ПриводитьКДлине>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>НаименованиеПолное --&gt; НаименованиеПолное</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>НоменклатурныеГруппы</Код>
				<Наименование>Справочник: Номенклатурные группы</Наименование>
				<Порядок>450</Порядок>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<Источник>СправочникСсылка.НоменклатурныеГруппы</Источник>
				<Приемник>СправочникСсылка.НоменклатурныеГруппы</Приемник>
				<Свойства>
					<Свойство>
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство Поиск="true">
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>Родитель --&gt; Родитель</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
						<Приемник Имя="Родитель" Вид="Свойство" Тип="СправочникСсылка.НоменклатурныеГруппы"/>
						<КодПравилаКонвертации>НоменклатурныеГруппы                              </КодПравилаКонвертации>
					</Свойство>
					<Свойство Поиск="true" Обязательное="true">
						<Код>5</Код>
						<Наименование>ЭтоГруппа --&gt; ЭтоГруппа</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ЭтоГруппа" Вид="Свойство" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
			<Правило>
				<Код>КлассификаторТНВЭД</Код>
				<Наименование>Справочник: Классификатор ТН ВЭД</Наименование>
				<Порядок>500</Порядок>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>true</ПродолжитьПоискПоПолямПоискаЕслиПоИдентификаторуНеНашли>
				<Источник>СправочникСсылка.КлассификаторТНВЭД</Источник>
				<Приемник>СправочникСсылка.КлассификаторТНВЭД</Приемник>
				<Свойства>
					<Свойство Поиск="true">
						<Код>1</Код>
						<Наименование>Код --&gt; Код</Наименование>
						<Порядок>50</Порядок>
						<Источник Имя="Код" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Код" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>2</Код>
						<Наименование>Наименование --&gt; Наименование</Наименование>
						<Порядок>100</Порядок>
						<Источник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
						<Приемник Имя="Наименование" Вид="Свойство" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>3</Код>
						<Наименование>НаименованиеПолное --&gt; НаименованиеПолное</Наименование>
						<Порядок>150</Порядок>
						<Источник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
						<Приемник Имя="НаименованиеПолное" Вид="Реквизит" Тип="Строка"/>
					</Свойство>
					<Свойство>
						<Код>4</Код>
						<Наименование>ПометкаУдаления --&gt; ПометкаУдаления</Наименование>
						<Порядок>200</Порядок>
						<Источник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
						<Приемник Имя="ПометкаУдаления" Вид="Свойство" Тип="Булево"/>
					</Свойство>
					<Свойство>
						<Код>5</Код>
						<Наименование>СырьевойТовар --&gt; СырьевойТовар</Наименование>
						<Порядок>250</Порядок>
						<Источник Имя="СырьевойТовар" Вид="Реквизит" Тип="Булево"/>
						<Приемник Имя="СырьевойТовар" Вид="Реквизит" Тип="Булево"/>
					</Свойство>
				</Свойства>
				<Значения/>
			</Правило>
		</Группа>
		<Группа>
			<Код>Перечисления</Код>
			<Наименование>Перечисления</Наименование>
			<Порядок>150</Порядок>
			<Правило>
				<Код>СтавкиНДС</Код>
				<Наименование>Перечисление: Ставки НДС</Наименование>
				<Порядок>50</Порядок>
				<Источник>ПеречислениеСсылка.СтавкиНДС</Источник>
				<Приемник>ПеречислениеСсылка.СтавкиНДС</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>БезНДС --&gt; БезНДС</Наименование>
						<Порядок>50</Порядок>
						<Источник>БезНДС</Источник>
						<Приемник>БезНДС</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>НДС0 --&gt; НДС0</Наименование>
						<Порядок>100</Порядок>
						<Источник>НДС0</Источник>
						<Приемник>НДС0</Приемник>
					</Значение>
					<Значение>
						<Код>3</Код>
						<Наименование>НДС10 --&gt; НДС10</Наименование>
						<Порядок>150</Порядок>
						<Источник>НДС10</Источник>
						<Приемник>НДС10</Приемник>
					</Значение>
					<Значение>
						<Код>4</Код>
						<Наименование>НДС10_110 --&gt; НДС10_110</Наименование>
						<Порядок>200</Порядок>
						<Источник>НДС10_110</Источник>
						<Приемник>НДС10_110</Приемник>
					</Значение>
					<Значение>
						<Код>5</Код>
						<Наименование>НДС18 --&gt; НДС18</Наименование>
						<Порядок>250</Порядок>
						<Источник>НДС18</Источник>
						<Приемник>НДС18</Приемник>
					</Значение>
					<Значение>
						<Код>6</Код>
						<Наименование>НДС18_118 --&gt; НДС18_118</Наименование>
						<Порядок>300</Порядок>
						<Источник>НДС18_118</Источник>
						<Приемник>НДС18_118</Приемник>
					</Значение>
					<Значение>
						<Код>7</Код>
						<Наименование>НДС20 --&gt; НДС20</Наименование>
						<Порядок>350</Порядок>
						<Источник>НДС20</Источник>
						<Приемник>НДС20</Приемник>
					</Значение>
					<Значение>
						<Код>8</Код>
						<Наименование>НДС20_120 --&gt; НДС20_120</Наименование>
						<Порядок>400</Порядок>
						<Источник>НДС20_120</Источник>
						<Приемник>НДС20_120</Приемник>
					</Значение>
				</Значения>
			</Правило>
		</Группа>
		<Группа>
			<Код>Планы счетов</Код>
			<Наименование>Планы счетов</Наименование>
			<Порядок>200</Порядок>
			<Правило>
				<Код>Хозрасчетный</Код>
				<Наименование>План счетов: План счетов бухгалтерского учета</Наименование>
				<Порядок>50</Порядок>
				<СинхронизироватьПоИдентификатору>true</СинхронизироватьПоИдентификатору>
				<Источник>ПланСчетовСсылка.Хозрасчетный</Источник>
				<Приемник>ПланСчетовСсылка.Хозрасчетный</Приемник>
				<Свойства/>
				<Значения>
					<Значение>
						<Код>1</Код>
						<Наименование>КассаОрганизации --&gt; КассаОрганизации</Наименование>
						<Порядок>50</Порядок>
						<Источник>КассаОрганизации</Источник>
						<Приемник>КассаОрганизации</Приемник>
					</Значение>
					<Значение>
						<Код>2</Код>
						<Наименование>ПереводыВПути --&gt; ПереводыВПути</Наименование>
						<Порядок>100</Порядок>
						<Источник>ПереводыВПути</Источник>
						<Приемник>ПереводыВПути</Приемник>
					</Значение>
				</Значения>
			</Правило>
		</Группа>
	</ПравилаКонвертацииОбъектов>
	<ПравилаВыгрузкиДанных>
		<Правило Отключить="false">
			<Код>ВыгрузкаЛистовУчета</Код>
			<Наименование>ВыгрузкаЛистовУчета                               </Наименование>
			<Порядок>50</Порядок>
			<СпособОтбораДанных>ПроизвольныйАлгоритм</СпособОтбораДанных>
			<ПередОбработкойПравила>ДатаНачалаОбработки = ТекущаяДата();	
Сообщить("Начало выборки " + Строка(ДатаНачалаОбработки));
Отказ = Ложь;

Узел = Параметры.УзелОбмена;
УзелСтрокой = Параметры.УзелОбмена.Код;

ЗаписьXML = Новый ЗаписьXML();
ЗаписьXML.УстановитьСтроку();
ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();		
ЗаписьСообщения.НачатьЗапись(ЗаписьXML, Узел);

МассивМетаданных = Новый Массив;
МассивМетаданных.Добавить(Метаданные.Документы.ЛистУчета);

ВыборкаЛУ = ПланыОбмена.ВыбратьИзменения(ЗаписьСообщения.Получатель, ЗаписьСообщения.НомерСообщения, МассивМетаданных);
Параметры.НомерСообщения = ЗаписьСообщения.НомерСообщения;

МассивЛУВСообщении = Новый Массив;

Пока ВыборкаЛУ.Следующий() Цикл
	ОбъектЛУ = ВыборкаЛУ.Получить();	
	МассивЛУВСообщении.Добавить(ОбъектЛУ.Ссылка);
КонецЦикла;

Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ
               |	ЛистУчета.Ссылка КАК ЛУ,
               |	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) КАК ДатаЛУ,
               |	СтруктурныеЕдиницы.НомерТочки,
               |	СтруктурныеЕдиницы.ТипРозничнойТочки,
               |	СтруктурныеЕдиницы.Ссылка КАК ТТ
               |ПОМЕСТИТЬ СводнаяТаблица
               |ИЗ
               |	Документ.ЛистУчета КАК ЛистУчета
               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
               |			ПО ЛистУчета.ТорговаяТочка = СтруктурныеЕдиницы.Ссылка               
               |ГДЕ
               |	ЛистУчета.Ссылка В (&amp;МассивЛУВСообщении)
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	МИНИМУМ(СводнаяТаблицаМинимумДата.ДатаЛУ) КАК НачДата,
               |	МАКСИМУМ(СводнаяТаблицаМаксимумДата.ДатаЛУ) КАК КонДата
               |ИЗ
               |	СводнаяТаблица КАК СводнаяТаблицаМинимумДата
               |		ПОЛНОЕ СОЕДИНЕНИЕ СводнаяТаблица КАК СводнаяТаблицаМаксимумДата
               |		ПО СводнаяТаблицаМинимумДата.ЛУ = СводнаяТаблицаМаксимумДата.ЛУ
			   |ИМЕЮЩИЕ НЕ МИНИМУМ(СводнаяТаблицаМинимумДата.ДатаЛУ) ЕСТЬ NULL И НЕ МАКСИМУМ(СводнаяТаблицаМаксимумДата.ДатаЛУ) ЕСТЬ NULL
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	СводнаяТаблица.ЛУ,
               |	СводнаяТаблица.НомерТочки,
               |	СводнаяТаблица.ТипРозничнойТочки,
               |	СводнаяТаблица.ТТ
               |ИЗ
               |	СводнаяТаблица КАК СводнаяТаблица
               |ГДЕ
               |	СводнаяТаблица.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Избенка)
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	СводнаяТаблица.ЛУ,
               |	СводнаяТаблица.ДатаЛУ,
               |	СводнаяТаблица.НомерТочки,
               |	СводнаяТаблица.ТипРозничнойТочки,
               |	СводнаяТаблица.ТТ
               |ИЗ
               |	СводнаяТаблица КАК СводнаяТаблица
               |ГДЕ
               |	СводнаяТаблица.ТипРозничнойТочки &lt;&gt; ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Избенка)
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	СводнаяТаблица.НомерТочки,
               |	СводнаяТаблица.ТТ
               |ИЗ
               |	СводнаяТаблица КАК СводнаяТаблица";

Запрос.УстановитьПараметр("МассивЛУВСообщении", МассивЛУВСообщении);

Результат = Запрос.ВыполнитьПакет();

ТаблицаЛУИзбенка = Результат[2].Выгрузить();
ТаблицаЛУМагазин = Результат[3].Выгрузить();
ТаблицаСоответствиеТТПоНомеру = Результат[4].Выгрузить();

ТаблицаДат = Результат[1].Выгрузить();

Если НЕ ТаблицаДат.Количество() Тогда
	Отказ = Истина;
КонецЕсли;

Если НЕ Отказ Тогда
	
	ДатаНач = ТаблицаДат[0].НачДата;
	ДатаКон = КонецДня(ТаблицаДат[0].КонДата);	
	
	МассивЛУИзбенка = ТаблицаЛУИзбенка.ВыгрузитьКолонку("ЛУ");
	МассивЛУМагазин = ТаблицаЛУМагазин.ВыгрузитьКолонку("ЛУ");
	
	МассивНомеровТочекИзбенка = ТаблицаЛУИзбенка.ВыгрузитьКолонку("НомерТочки");
	МассивНомеровТочекМагазин = ТаблицаЛУМагазин.ВыгрузитьКолонку("НомерТочки");
	
	МассивТочекИзбенка = ТаблицаЛУИзбенка.ВыгрузитьКолонку("ТТ");
		
	СтрокаОтбораПодразделенийМагазин = "-99999";
	СтрокаОтбораПодразделенийИзбенка = "-99999";
	
	Для Каждого НомерТочки Из МассивНомеровТочекИзбенка Цикл
		СтрокаОтбораПодразделенийИзбенка = СтрокаОтбораПодразделенийИзбенка + ", " + Формат(НомерТочки, "ЧН=; ЧГ=0");		
	КонецЦикла;
	
	Для Каждого НомерТочки Из МассивНомеровТочекМагазин Цикл
		СтрокаОтбораПодразделенийМагазин = СтрокаОтбораПодразделенийМагазин + ", " + Формат(НомерТочки, "ЧН=; ЧГ=0");		
	КонецЦикла;
	
	Сообщить("Запрос АДО");
	ADOСоединение = ВнешниеДанныеКлиентСервер.ПолучитьADOСоединение();
	
	СтрЗапрос = "SELECT QntT.TT,
	|  CAST(QntT.CloseDate as datetime) as CloseDate,  
	|  QntT.Qnt,
	|  QntT.SummaPoNDS10,
	|  QntT.SummaPoNDS18
	|FROM (SELECT dbo_Checks.ShopNo as TT, dbo_CheckLine.date_ch as CloseDate,
	|                   SUM(CASE WHEN dbo_Checks.BaseSum &lt; 0 THEN dbo_CheckLine.Quantity * (-1) ELSE dbo_CheckLine.Quantity END) as Qnt,
	|                   SUM(CASE WHEN ArticleBin2UID.Stavka = 10 THEN dbo_CheckLine.BaseSum ELSE 0 END) as SummaPoNDS10, 
	|                   SUM(CASE WHEN ArticleBin2UID.Stavka = 18 THEN dbo_CheckLine.BaseSum ELSE 0 END) as SummaPoNDS18 
	|                 FROM SMS_Union.dbo.CheckLine as dbo_CheckLine (nolock) 
	|                 INNER JOIN SMS_Union.dbo.Checks as dbo_Checks (nolock) ON dbo_CheckLine.CheckUID = dbo_Checks.CheckUID
	|              LEFT OUTER JOIN IzbenkaFin.dbo.ArticleBin2UID as ArticleBin2UID (nolock) ON dbo_CheckLine.id_tov_cl = ArticleBin2UID.id_tov
	|                 WHERE dbo_Checks.CloseDate BETWEEN CAST('"+Формат(ДатаНач,"ДФ=dd/MM/yyyy")+"' as datetime) and CAST('"+Формат(ДатаКон,"ДФ='dd/MM/yyyy HH:mm:ss'")+"' as datetime) and dbo_Checks.ShopNo IN (" + СтрокаОтбораПодразделенийМагазин + ")
	|                 GROUP BY dbo_Checks.ShopNo, dbo_CheckLine.date_ch) as QntT
	|UNION 
	|SELECT Ch.ShopNo AS TT, cast(Chl.date_ch as datetime) CloseDate,  
	|SUM(Chl.Qnt) as Qnt,
	|  SUM(Chl.SummaPoNDS10) as SummaPoNDS10,
	|  SUM(Chl.SummaPoNDS18) as SummaPoNDS18	
	|FROM [SMS_IZBENKA].[dbo].[Checks] as Ch (nolock)
	|	LEFT OUTER JOIN (SELECT Chl.date_ch, Chl.CheckUid As CheckUid, SUM(Chl.Quantity) as Qnt, 
	|				   				SUM(CASE WHEN ArticleBin2UID.Stavka = 10 THEN Chl.BaseSum ELSE 0 END) as SummaPoNDS10, 
	|			   				SUM(CASE WHEN ArticleBin2UID.Stavka = 18 THEN Chl.BaseSum ELSE 0 END) as SummaPoNDS18
	|						FROM [SMS_IZBENKA].[dbo].[CheckLine] as Chl (nolock)
	|						INNER JOIN IzbenkaFin.dbo.ArticleBin2UID as ArticleBin2UID (nolock)
	|						ON Chl.id_tov_cl = ArticleBin2UID.id_tov
	|					WHERE Chl.date_ch BETWEEN CAST('"+Формат(ДатаНач,"ДФ=dd/MM/yyyy")+"' as datetime) and CAST('"+Формат(ДатаКон,"ДФ='dd/MM/yyyy HH:mm:ss'")+"' as datetime) and Chl.OperationType_cl = 1
	|						GROUP BY Chl.CheckUid, Chl.date_ch) as Chl ON Ch.CheckUID = Chl.CheckUid
	|where Ch.CloseDate BETWEEN CAST('"+Формат(ДатаНач,"ДФ=dd/MM/yyyy")+"' as datetime) and CAST('"+Формат(ДатаКон,"ДФ='dd/MM/yyyy HH:mm:ss'")+"' as datetime) and Ch.OperationType = 1
	|	and Ch.ShopNo IN (" + СтрокаОтбораПодразделенийИзбенка + ")
	|GROUP BY Ch.ShopNo, cast(Chl.date_ch as datetime)";
	
	Сообщить("Запрос АДО");
	rs = ADOСоединение.Execute(СтрЗапрос);
	
	ТаблицаИзSQL = Новый ТаблицаЗначений;
	ТаблицаИзSQL.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	ТаблицаИзSQL.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктурныеЕдиницы"));
	ТаблицаИзSQL.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	ТаблицаИзSQL.Колонки.Добавить("СуммаПоНДС10", Новый ОписаниеТипов("Число"));
	ТаблицаИзSQL.Колонки.Добавить("СуммаПоНДС18", Новый ОписаниеТипов("Число"));
	ТаблицаИзSQL.Колонки.Добавить("ЭтоИзбенка", Новый ОписаниеТипов("Булево"));
	
	Попытка //если набор пустой, то выдает ошибку
		rs.MoveFirst();
		
		Пока НЕ rs.EOF() Цикл
			
			СтрокаПодр = ТаблицаСоответствиеТТПоНомеру.Найти(Rs.Fields("TT").Value, "НомерТочки");
			Если СтрокаПодр = Неопределено Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Не найдено подразделение по номеру магазина: " + Формат(Rs.Fields("TT").Value, "ЧГ=0") + " и указанной организации");
				rs.MoveNext();
				Продолжить;
			КонецЕсли;	
			
			СтрокаДоб = ТаблицаИзSQL.Добавить();		
			СтрокаДоб.Подразделение = СтрокаПодр.ТТ;
			СтрокаДоб.Дата = Rs.Fields("CloseDate").Value;
			СтрокаДоб.Количество = Rs.Fields("Qnt").Value;
			СтрокаДоб.СуммаПоНДС10 = Rs.Fields("SummaPoNDS10").Value;
			СтрокаДоб.СуммаПоНДС18 = Rs.Fields("SummaPoNDS18").Value;			
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	Сообщить("Конец запрос АДО");
	
	Запрос.УстановитьПараметр("ТаблицаИзSQL", ТаблицаИзSQL);
	Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("МассивЛУМагазин", МассивЛУМагазин);
	Запрос.УстановитьПараметр("МассивЛУИзбенка", МассивЛУИзбенка);
	Запрос.УстановитьПараметр("МассивТочекИзбенка", МассивТочекИзбенка);
	
	Сообщить("Запрос к базе");
	
	Запрос.Текст = "ВЫБРАТЬ
               |	ЛистУчета.Ссылка КАК ЛУ,
               |	ЛистУчета.ТорговаяТочка КАК Подразделение,
               |	МИНИМУМ(ОсновныеСредства.ЗаводскойНомер) КАК ИмяККМ,
               |	ЛистУчета.Терминал КАК Терминал,
               |	СУММА(ЛистУчетаZОтчеты.СуммаПоНал) КАК Сумма,
               |	СУММА(ЛистУчетаZОтчеты.СуммаПоБезнал) КАК СуммаПоБезнал,
               |	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) КАК Дата,
               |	ЛистУчета.Организация КАК Организация,
               |	ИСТИНА КАК ЭтоИзбенка
               |ПОМЕСТИТЬ ЛУ_ВыручкаИзбенка
               |ИЗ
               |	Документ.ЛистУчета.ZОтчеты КАК ЛистУчетаZОтчеты
               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЛистУчета КАК ЛистУчета
               |		ПО ЛистУчетаZОтчеты.Ссылка = ЛистУчета.Ссылка
               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
               |		ПО ЛистУчетаZОтчеты.Касса = ОсновныеСредства.Ссылка
               |ГДЕ
               |	ЛистУчетаZОтчеты.Ссылка В(&amp;МассивЛУИзбенка)
               |
               |СГРУППИРОВАТЬ ПО
               |	ЛистУчета.ТорговаяТочка,
               |	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ),
               |	ЛистУчета.Организация,
               |	ЛистУчета.Ссылка,
               |	ЛистУчета.Терминал
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) КАК Дата,
               |	ЛистУчета.ТорговаяТочка КАК Подразделение,
               |	СУММА(ЛистУчетаОплатыПоБанковскимКартам.Сумма + ЛистУчетаОплатыПоБанковскимКартам.СуммаДоставка) КАК Сумма,
               |	ЛистУчетаОплатыПоБанковскимКартам.Терминал,
               |	ЛистУчетаОплатыПоБанковскимКартам.Ссылка КАК ЛУ,               

			   |	ЛистУчетаОплатыПоБанковскимКартам.РабочееМестоВСкл КАК ИмяККМ,
               |	ЛОЖЬ КАК ЭтоИзбенка
               |ПОМЕСТИТЬ ЛУ_ОплатыПоБанковскимКартам
               |ИЗ
               |	Документ.ЛистУчета.ОплатыПоБанковскимКартам КАК ЛистУчетаОплатыПоБанковскимКартам
               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Терминалы КАК Терминалы
               |		ПО ЛистУчетаОплатыПоБанковскимКартам.Терминал = Терминалы.Ссылка
               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЛистУчета КАК ЛистУчета
               |		ПО ЛистУчетаОплатыПоБанковскимКартам.Ссылка = ЛистУчета.Ссылка
               |ГДЕ
               |	ЛистУчетаОплатыПоБанковскимКартам.Ссылка В(&amp;МассивЛУМагазин)
               |
               |СГРУППИРОВАТЬ ПО
               |	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ),
               |	ЛистУчета.ТорговаяТочка,
               |	ЛистУчетаОплатыПоБанковскимКартам.Терминал,
               |	ЛистУчетаОплатыПоБанковскимКартам.Ссылка,
			   |	ЛистУчетаОплатыПоБанковскимКартам.РабочееМестоВСкл              

               |
               |ОБЪЕДИНИТЬ ВСЕ
               |
               |ВЫБРАТЬ
               |	ЛУ_ВыручкаИзбенка.Дата,
               |	ЛУ_ВыручкаИзбенка.Подразделение,
               |	СУММА(ЛУ_ВыручкаИзбенка.СуммаПоБезнал),
               |	ЛУ_ВыручкаИзбенка.Терминал,
               |	ЛУ_ВыручкаИзбенка.ЛУ,
               |	ЛУ_ВыручкаИзбенка.ИмяККМ,
               |	ЛУ_ВыручкаИзбенка.ЭтоИзбенка
               |ИЗ
               |	ЛУ_ВыручкаИзбенка КАК ЛУ_ВыручкаИзбенка
               |ГДЕ
               |	ЛУ_ВыручкаИзбенка.СуммаПоБезнал &gt; 0
               |
               |СГРУППИРОВАТЬ ПО
               |	ЛУ_ВыручкаИзбенка.ЛУ,
               |	ЛУ_ВыручкаИзбенка.Подразделение,
               |	ЛУ_ВыручкаИзбенка.Терминал,
               |	ЛУ_ВыручкаИзбенка.Дата,
               |	ЛУ_ВыручкаИзбенка.ИмяККМ,
               |	ЛУ_ВыручкаИзбенка.ЭтоИзбенка
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) КАК Дата,
               |	ЛистУчета.ТорговаяТочка КАК Подразделение,
               |	СУММА(ЛистУчетаВыручка.Сумма) КАК Сумма,
               |	ЛистУчетаВыручка.Ссылка КАК ЛУ,              

			   |	МИНИМУМ(ЛистУчетаВыручка.РабочееМестоВСкл) КАК ИмяККМ,
               |	ЛОЖЬ КАК ЭтоИзбенка
               |ПОМЕСТИТЬ ЛУ_Выручка
               |ИЗ
               |	Документ.ЛистУчета.Выручка КАК ЛистУчетаВыручка


               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЛистУчета КАК ЛистУчета
               |		ПО ЛистУчетаВыручка.Ссылка = ЛистУчета.Ссылка
               |ГДЕ
               |	ЛистУчетаВыручка.Ссылка В(&amp;МассивЛУМагазин)
               |
               |СГРУППИРОВАТЬ ПО
               |	ЛистУчета.ТорговаяТочка,
               |	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ),
               |	ЛистУчетаВыручка.Ссылка
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ТаблицаИзSQL.Подразделение,
               |	ТаблицаИзSQL.Дата,
               |	ТаблицаИзSQL.Количество,
               |	ТаблицаИзSQL.СуммаПоНДС10,
               |	ТаблицаИзSQL.СуммаПоНДС18
               |ПОМЕСТИТЬ Временно_ТаблицаИзSQL
               |ИЗ
               |	&amp;ТаблицаИзSQL КАК ТаблицаИзSQL
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	Временно_ТаблицаИзSQL.Подразделение,
               |	Временно_ТаблицаИзSQL.Дата,
               |	СУММА(Временно_ТаблицаИзSQL.Количество) КАК Количество,
               |	СУММА(Временно_ТаблицаИзSQL.СуммаПоНДС10) КАК СуммаПоНДС10,
               |	СУММА(Временно_ТаблицаИзSQL.СуммаПоНДС18) КАК СуммаПоНДС18
               |ПОМЕСТИТЬ ТаблицаИзSQL
               |ИЗ
               |	Временно_ТаблицаИзSQL КАК Временно_ТаблицаИзSQL
               |
               |СГРУППИРОВАТЬ ПО
               |	Временно_ТаблицаИзSQL.Подразделение,
               |	Временно_ТаблицаИзSQL.Дата
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |УНИЧТОЖИТЬ Временно_ТаблицаИзSQL
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ЛУ_Выручка.Дата,
               |	ЛУ_Выручка.Подразделение,
               |	СУММА(ЛУ_Выручка.Сумма) КАК Сумма,
               |	ЛУ_Выручка.ЛУ,
               |	ЛУ_Выручка.ИмяККМ КАК ИмяККМ,
               |	ЛУ_Выручка.ЭтоИзбенка
               |ПОМЕСТИТЬ СводнаяЛУ
               |ИЗ
               |	ЛУ_Выручка КАК ЛУ_Выручка
               |
               |СГРУППИРОВАТЬ ПО
               |	ЛУ_Выручка.Дата,
               |	ЛУ_Выручка.Подразделение,
               |	ЛУ_Выручка.ЛУ,
               |	ЛУ_Выручка.ЭтоИзбенка,
               |	ЛУ_Выручка.ИмяККМ
               |
               |ОБЪЕДИНИТЬ ВСЕ
               |
               |ВЫБРАТЬ
               |	ЛУ_ОплатыПоБанковскимКартам.Дата,
               |	ЛУ_ОплатыПоБанковскимКартам.Подразделение,
               |	СУММА(ЛУ_ОплатыПоБанковскимКартам.Сумма),
               |	ЛУ_ОплатыПоБанковскимКартам.ЛУ,
               |	МИНИМУМ(ЛУ_ОплатыПоБанковскимКартам.ИмяККМ),
               |	ЛУ_ОплатыПоБанковскимКартам.ЭтоИзбенка
               |ИЗ
               |	ЛУ_ОплатыПоБанковскимКартам КАК ЛУ_ОплатыПоБанковскимКартам
               |
               |СГРУППИРОВАТЬ ПО
               |	ЛУ_ОплатыПоБанковскимКартам.Дата,
               |	ЛУ_ОплатыПоБанковскимКартам.Подразделение,
               |	ЛУ_ОплатыПоБанковскимКартам.ЛУ,
               |	ЛУ_ОплатыПоБанковскимКартам.ЭтоИзбенка
               |
               |ОБЪЕДИНИТЬ ВСЕ
               |
               |ВЫБРАТЬ
               |	ЛУ_ВыручкаИзбенка.Дата,
               |	ЛУ_ВыручкаИзбенка.Подразделение,
               |	ЛУ_ВыручкаИзбенка.Сумма,
               |	ЛУ_ВыручкаИзбенка.ЛУ,
               |	ЛУ_ВыручкаИзбенка.ИмяККМ,
               |	ЛУ_ВыручкаИзбенка.ЭтоИзбенка
               |ИЗ
               |	ЛУ_ВыручкаИзбенка КАК ЛУ_ВыручкаИзбенка
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ЛУ_ОплатыПоБанковскимКартам.Дата,
               |	СУММА(ЛУ_ОплатыПоБанковскимКартам.Сумма) КАК Сумма,
               |	ЛУ_ОплатыПоБанковскимКартам.Подразделение,
               |	ЛУ_ОплатыПоБанковскимКартам.Терминал,
               |	ЛУ_ОплатыПоБанковскимКартам.ЛУ,
               |	ЛУ_ОплатыПоБанковскимКартам.ЭтоИзбенка
               |ПОМЕСТИТЬ ТабДетализацияОплатБезналПоБанкам
               |ИЗ
               |	ЛУ_ОплатыПоБанковскимКартам КАК ЛУ_ОплатыПоБанковскимКартам
               |
               |СГРУППИРОВАТЬ ПО
               |	ЛУ_ОплатыПоБанковскимКартам.Дата,
               |	ЛУ_ОплатыПоБанковскимКартам.Подразделение,
               |	ЛУ_ОплатыПоБанковскимКартам.Терминал,
               |	ЛУ_ОплатыПоБанковскимКартам.ЛУ,
               |	ЛУ_ОплатыПоБанковскимКартам.ЭтоИзбенка
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |УНИЧТОЖИТЬ ЛУ_ОплатыПоБанковскимКартам
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |УНИЧТОЖИТЬ ЛУ_Выручка
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	СводнаяЛУ.Дата,
               |	СводнаяЛУ.Подразделение,
               |	СУММА(СводнаяЛУ.Сумма) КАК Сумма,
               |	СводнаяЛУ.ЛУ,
               |	МИНИМУМ(СводнаяЛУ.ИмяККМ) КАК ИмяККМ,
               |	СводнаяЛУ.ЭтоИзбенка
               |ПОМЕСТИТЬ СвернутаяЛУ
               |ИЗ
               |	СводнаяЛУ КАК СводнаяЛУ
               |
               |СГРУППИРОВАТЬ ПО
               |	СводнаяЛУ.Дата,
               |	СводнаяЛУ.Подразделение,
               |	СводнаяЛУ.ЛУ,
               |	СводнаяЛУ.ЭтоИзбенка
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |УНИЧТОЖИТЬ СводнаяЛУ
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	СводнаяЛУ.ЛУ.Организация КАК Организация,
               |	СводнаяЛУ.ЛУ.СуммаИнкассации КАК СуммаИнкассации,
               |	СводнаяЛУ.ЛУ,
               |	СводнаяЛУ.Дата,
               |	СводнаяЛУ.ИмяККМ,
               |	СводнаяЛУ.Подразделение,
               |	СводнаяЛУ.Сумма,
               |	ЕСТЬNULL(СтруктурныеЕдиницы.СовместнаяДеятельность, ЛОЖЬ) КАК ТТ_СовместнаяДеятельность,
               |	ЕСТЬNULL(СтруктурныеЕдиницы.НомерТочки, 0) КАК НомерТочки,
               |	СводнаяЛУ.ЭтоИзбенка,
               |	СтруктурныеЕдиницы.ДатаПереходаНаУчетПоОбособленномуПодразделению КАК ДатаПерехода,
               |	СтруктурныеЕдиницы.КодОПБух,
               |	ЕСТЬNULL(ТаблицаИзSQL.Количество, 0) КАК Количество,
               |	ЕСТЬNULL(ТаблицаИзSQL.СуммаПоНДС10, 0) КАК СуммаПоНДС10,
               |	ЕСТЬNULL(ТаблицаИзSQL.СуммаПоНДС18, 0) КАК СуммаПоНДС18
               |ИЗ
               |	СвернутаяЛУ КАК СводнаяЛУ
               |		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаИзSQL КАК ТаблицаИзSQL
               |		ПО СводнаяЛУ.Дата = ТаблицаИзSQL.Дата
               |			И СводнаяЛУ.Подразделение = ТаблицаИзSQL.Подразделение
               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
               |		ПО СводнаяЛУ.Подразделение = СтруктурныеЕдиницы.Ссылка
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ТабДетализацияОплатБезналПоБанкам.Дата,
               |	СУММА(ТабДетализацияОплатБезналПоБанкам.Сумма) КАК Сумма,
               |	ТабДетализацияОплатБезналПоБанкам.Подразделение,
               |	ТабДетализацияОплатБезналПоБанкам.Терминал,
               |	ТабДетализацияОплатБезналПоБанкам.ЛУ,
               |	ТабДетализацияОплатБезналПоБанкам.ЭтоИзбенка
               |ИЗ
               |	ТабДетализацияОплатБезналПоБанкам КАК ТабДетализацияОплатБезналПоБанкам
               |
               |СГРУППИРОВАТЬ ПО
               |	ТабДетализацияОплатБезналПоБанкам.Дата,
               |	ТабДетализацияОплатБезналПоБанкам.Подразделение,
               |	ТабДетализацияОплатБезналПоБанкам.Терминал,
               |	ТабДетализацияОплатБезналПоБанкам.ЛУ,
               |	ТабДетализацияОплатБезналПоБанкам.ЭтоИзбенка
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ЛистУчетаАктыКМ3.Ссылка КАК ЛУ,
               |	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) КАК Дата,
               |	СУММА(ВЫБОР
               |			КОГДА ЛистУчетаАктыКМ3.ЭтоВозвратБезнал
               |				ТОГДА ЛистУчетаАктыКМ3.СуммаПоНДС10
               |			ИНАЧЕ 0
               |		КОНЕЦ) КАК ВозвратПоНДС10БезНал,
               |	СУММА(ВЫБОР
               |			КОГДА ЛистУчетаАктыКМ3.ЭтоВозвратБезнал
               |				ТОГДА ЛистУчетаАктыКМ3.СуммаПоНДС18
               |			ИНАЧЕ 0
               |		КОНЕЦ) КАК ВозвратПоНДС18БезНал,
               |	СУММА(ВЫБОР
               |			КОГДА ЛистУчетаАктыКМ3.ЭтоВозвратБезнал
               |				ТОГДА 0
               |			ИНАЧЕ ЛистУчетаАктыКМ3.СуммаПоНДС10
               |		КОНЕЦ) КАК ВозвратПоНДС10Нал,
               |	СУММА(ВЫБОР
               |			КОГДА ЛистУчетаАктыКМ3.ЭтоВозвратБезнал
               |				ТОГДА 0
               |			ИНАЧЕ ЛистУчетаАктыКМ3.СуммаПоНДС18
               |		КОНЕЦ) КАК ВозвратПоНДС18Нал
               |ИЗ
               |	Документ.ЛистУчета.АктыКМ3 КАК ЛистУчетаАктыКМ3
               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЛистУчета КАК ЛистУчета
               |		ПО ЛистУчетаАктыКМ3.Ссылка = ЛистУчета.Ссылка
               |ГДЕ
               |	ЛистУчетаАктыКМ3.Ссылка В (&amp;МассивЛУМагазин, &amp;МассивЛУИзбенка)
               |	И ЛистУчетаАктыКМ3.АктПолучен
               |
               |СГРУППИРОВАТЬ ПО
               |	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ),
               |	ЛистУчетаАктыКМ3.Ссылка
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ЛистУчетаВозвратыИзСейфа.Ссылка КАК ЛУ,
               |	ЛистУчетаТоварыПоВозвратам.Номенклатура,
               |	СУММА(ЛистУчетаТоварыПоВозвратам.Количество) КАК Количество,
               |	ЛистУчетаТоварыПоВозвратам.СтавкаНДС,
               |	СУММА(ЛистУчетаТоварыПоВозвратам.Сумма) КАК Сумма,
               |	СебестоимостьТоваровСрезПоследних.Себестоимость
               |ИЗ
               |	Документ.ЛистУчета.ВозвратыИзСейфа КАК ЛистУчетаВозвратыИзСейфа
               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЛистУчета.ТоварыПоВозвратам КАК ЛистУчетаТоварыПоВозвратам
               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьТоваров.СрезПоследних(&amp;ДатаКон, ) КАК СебестоимостьТоваровСрезПоследних
               |			ПО ЛистУчетаТоварыПоВозвратам.Номенклатура = СебестоимостьТоваровСрезПоследних.Номенклатура
               |		ПО ЛистУчетаВозвратыИзСейфа.Ссылка = ЛистУчетаТоварыПоВозвратам.Ссылка
               |			И ЛистУчетаВозвратыИзСейфа.КлючСтроки = ЛистУчетаТоварыПоВозвратам.КлючСтрокиВозврата
               |ГДЕ
               |	ЛистУчетаВозвратыИзСейфа.Ссылка.Ссылка В (&amp;МассивЛУМагазин, &amp;МассивЛУИзбенка)
               |	И НЕ ЛистУчетаТоварыПоВозвратам.Номенклатура.СлужебныйТовар
               |
               |СГРУППИРОВАТЬ ПО
               |	ЛистУчетаТоварыПоВозвратам.Номенклатура,
               |	ЛистУчетаТоварыПоВозвратам.СтавкаНДС,
               |	СебестоимостьТоваровСрезПоследних.Себестоимость,
               |	ЛистУчетаВозвратыИзСейфа.Ссылка
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	ПКО.СуммаДокумента,
               |	ПКО.Ссылка КАК Ссылка,
               |	ПКО.ПометкаУдаления,
               |	ПКО.Дата,
               |	ПКО.Организация,
               |	СтруктурныеЕдиницы.Ссылка КАК ТорговаяТочка,
               |	СтруктурныеЕдиницы.НомерТочки КАК НомерТочки,
               |	СтруктурныеЕдиницы.КодОПБух,
               |	СтруктурныеЕдиницы.ДатаПереходаНаУчетПоОбособленномуПодразделению КАК ДатаПерехода
               |ИЗ
               |	Документ.ПоступлениеВКассу КАК ПКО
               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
               |		ПО ПКО.ТорговаяТочка = СтруктурныеЕдиницы.Ссылка
               |ГДЕ
               |	ПКО.ТорговаяТочка В(&amp;МассивТочекИзбенка)  
               |	И ПКО.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПКО.Инкассация) И ПКО.Дата МЕЖДУ &amp;ДатаНач И &amp;ДатаКон
			   |
			   |;
			   |
			   |ВЫБРАТЬ
			   |	ФинансовыйОборотыДтКт.Регистратор КАК ЛУ,
			   |	ФинансовыйОборотыДтКт.СубконтоКт2 КАК Контрагент,
			   |	СРЕДНЕЕ(ФинансовыйОборотыДтКт.СуммаОборот) КАК СуммаБезнал,
			   |	СУММА(ЛистУчетаЗаказыКурьеров.Количество) КАК КоличествоТовар,
			   |	СУММА(ЛистУчетаЗаказыКурьеров.Сумма) КАК СуммаТовар,
			   |	СпрНоменклатура.СтавкаНДС КАК СтавкаНДСТовар,
			   |	Контрагенты.ИДКурьераПоДоставке
			   |ИЗ
			   |	РегистрБухгалтерии.Финансовый.ОборотыДтКт(&amp;ДатаНач, &amp;ДатаКон, Регистратор, СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ДенежныеСредстваВПутиЭквайринг), , СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.РасчетыСПокупателямиПрочие), , ) КАК ФинансовыйОборотыДтКт
			   |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЛистУчета.ЗаказыКурьеров КАК ЛистУчетаЗаказыКурьеров
			   |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СпрНоменклатура
			   |			ПО ЛистУчетаЗаказыКурьеров.Номенклатура = СпрНоменклатура.Ссылка
			   |		ПО ФинансовыйОборотыДтКт.Регистратор = ЛистУчетаЗаказыКурьеров.Ссылка
			   |			И ФинансовыйОборотыДтКт.СубконтоКт2 = ЛистУчетаЗаказыКурьеров.Контрагент
			   |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
			   |		ПО ФинансовыйОборотыДтКт.СубконтоКт2 = Контрагенты.Ссылка
			   |ГДЕ			   
			   |	ФинансовыйОборотыДтКт.Регистратор В (&amp;МассивЛУМагазин, &amp;МассивЛУИзбенка)			   
			   |СГРУППИРОВАТЬ ПО
			   |	ФинансовыйОборотыДтКт.Регистратор,
			   |	ФинансовыйОборотыДтКт.СубконтоКт2,
			   |	СпрНоменклатура.СтавкаНДС,
			   |	Контрагенты.ИДКурьераПоДоставке";
	
	Результаты = Запрос.ВыполнитьПакет();
	
	ТабДанные = Результаты[12].Выгрузить();
	ТабДетализацияОплатБезналПоБанкам = Результаты[13].Выгрузить();
	ТабВозвратыКм3 = Результаты[14].Выгрузить();
	ТабВозвратыИзСейфа = Результаты[15].Выгрузить();
	ТабПКО = Результаты[16].Выгрузить();
	ТабОплатыПоКурьерскимСлужбам = Результаты[17].Выгрузить();
	
	ТабДетализацияОплатБезналПоБанкам.Индексы.Добавить("ЛУ");
	ТабВозвратыКМ3.Индексы.Добавить("ЛУ");
	ТабВозвратыИзСейфа.Индексы.Добавить("ЛУ");
	
	Сообщить("Конец запрос к базе");
	
	ТаблицаТовары = Новый ТаблицаЗначений;
	ТаблицаТовары.Колонки.Добавить("СтавкаНДС", Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));
	ТаблицаТовары.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	ТаблицаТовары.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число"));
	ТаблицаТовары.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	ТаблицаТовары.Колонки.Добавить("ЛУ");
	
	ТаблицаОплаты = Новый ТаблицаЗначений;
	ТаблицаОплаты.Колонки.Добавить("СуммаОплаты", Новый ОписаниеТипов("Число"));
	ТаблицаОплаты.Колонки.Добавить("Префикс", Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(1)));
	ТаблицаОплаты.Колонки.Добавить("ВидОплаты");
	
	ТабНоменклатураПоВозвратамИзСейфа = Новый ТаблицаЗначений;
	ТабНоменклатураПоВозвратамИзСейфа.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТабНоменклатураПоВозвратамИзСейфа.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число"));
	ТабНоменклатураПоВозвратамИзСейфа.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	ТабНоменклатураПоВозвратамИзСейфа.Колонки.Добавить("Себестоимость", Новый ОписаниеТипов("Число"));
	ТабНоменклатураПоВозвратамИзСейфа.Колонки.Добавить("СтавкаНДС", Новый ОписаниеТипов("ПеречислениеСсылка.СтавкиНДС"));
	
	Для Каждого Стр Из ТабДанные Цикл
		СтрСообщения = "";
		Для Каждого Колонка Из ТабДанные.Колонки Цикл
			СтрСообщения = СтрСообщения + Колонка.Имя + " - " + Строка(Стр[Колонка.Имя]) + ", ";
		КонецЦикла;
		Сообщить(СтрСообщения);
		
		//***
		//ИСХОДЯЩИЕ ДАННЫЕ
		ИсходящиеДанные = Новый Структура;
		ИсходящиеДанные.Вставить("Дата", Стр.Дата);
		ИсходящиеДанные.Вставить("Организация", Стр.Организация);
		ИсходящиеДанные.Вставить("ЭтоИзбенка", Стр.ЭтоИзбенка);
		
		//ТТ по Избенке ищем несколько иначе
		ИсходящиеДанные.Вставить("НаименованиеПодразделенияДляПоиска", "");
		ИсходящиеДанные.Вставить("КодОПБух", "");
		
		Если Стр.ЭтоИзбенка Тогда		
			Если ЗначениеЗаполнено(Стр.ДатаПерехода) И Стр.ДатаПерехода &lt;= Стр.Дата Тогда
				Если ЗначениеЗаполнено(Стр.КодОПБух) Тогда
					ИсходящиеДанные.Вставить("КодОПБух", Стр.КодОПБух);
				КонецЕсли;
			Иначе
				ИсходящиеДанные.Вставить("НаименованиеПодразделенияДляПоиска", "Управление розницей");
			КонецЕсли;
		КонецЕсли;
		//
		
		ИсходящиеДанные.Вставить("ПодразделениеОрганизации", Стр.Подразделение);
		ИсходящиеДанные.Вставить("СуммаВыручка", Стр.Сумма);
		ИсходящиеДанные.Вставить("СовместнаяДеятельность", Стр.ТТ_СовместнаяДеятельность);
		ИсходящиеДанные.Вставить("Склад", Справочники.Склады.ПустаяСсылка());
		ИсходящиеДанные.Вставить("ПоискСкладаВРазрезеПодразделения", НЕ Стр.ЭтоИзбенка); //по избенке ищем склады просто по наименованию, по Вкусвиллу уже по связке Подразделение + Наименование
		ИсходящиеДанные.Вставить("ИмяККМ", Стр.ИмяККМ);
		ИсходящиеДанные.Вставить("СуммаИнкассации", Стр.СуммаИнкассации);
		ИсходящиеДанные.Вставить("ТорговаяТочка", Стр.Подразделение);
		
		//поехали готовить таблицу.
		ТаблицаТовары.Очистить();
		ТаблицаОплаты.Очистить();
		
		НайдСтрВозвратыКМ3 = ТабВозвратыКМ3.Найти(Стр.ЛУ, "ЛУ");
		
		Если Стр.Сумма &lt;&gt; 0 Тогда
			
			ЗадействованоКоличество = 0;
			ЗадейстованаСумма = 0;
			
			Если Стр.Количество &lt; 0.1 Тогда
				Стр.Количество = 0.1;
			КонецЕсли;
			
			КоэффициентВыручкиПоНДС10 = ?(Стр.СуммаПоНДС10 + Стр.СуммаПоНДС18 = 0, 1, Стр.СуммаПоНДС10 / (Стр.СуммаПоНДС10 + Стр.СуммаПоНДС18));
			
			Если КоэффициентВыручкиПоНДС10 &gt; 0 Тогда			
				СтрокаТовар = ТаблицаТовары.Добавить();					
				СтрокаТовар.ЛУ = Стр.ЛУ;
				СтрокаТовар.СтавкаНДС = Перечисления.СтавкиНДС.НДС10;
				СтрокаТовар.Количество = Окр(Стр.Количество * КоэффициентВыручкиПоНДС10, 3);
				ЗадействованоКоличество = ЗадействованоКоличество + Окр(СтрокаТовар.Количество, 3);
				СтрокаТовар.Цена = ?(СтрокаТовар.Количество = 0, 0, Стр.Сумма * КоэффициентВыручкиПоНДС10 / СтрокаТовар.Количество);
				СтрокаТовар.Сумма = Стр.Сумма * КоэффициентВыручкиПоНДС10;
				ЗадейстованаСумма = ЗадейстованаСумма + СтрокаТовар.Сумма;
				
				//минусуем возврат км-3
				Если НайдСтрВозвратыКМ3 &lt;&gt; Неопределено Тогда
					СтрокаТовар.Сумма = СтрокаТовар.Сумма - (НайдСтрВозвратыКМ3.ВозвратПоНДС10БезНал + НайдСтрВозвратыКМ3.ВозвратПоНДС10Нал);
				КонецЕсли;
			КонецЕсли;
			
			Если КоэффициентВыручкиПоНДС10 &lt; 1 Тогда
				СтрокаТовар = ТаблицаТовары.Добавить();
				СтрокаТовар.ЛУ = Стр.ЛУ;
				СтрокаТовар.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
				СтрокаТовар.Количество = Стр.Количество - ЗадействованоКоличество;
				СтрокаТовар.Цена = ?(СтрокаТовар.Количество = 0, 0, (Стр.Сумма - ЗадейстованаСумма) / СтрокаТовар.Количество);
				СтрокаТовар.Сумма = Стр.Сумма - ЗадейстованаСумма;
				
				//минусуем возврат км-3
				Если НайдСтрВозвратыКМ3 &lt;&gt; Неопределено Тогда
					СтрокаТовар.Сумма = СтрокаТовар.Сумма - (НайдСтрВозвратыКМ3.ВозвратПоНДС18БезНал + НайдСтрВозвратыКМ3.ВозвратПоНДС18Нал);
				КонецЕсли;
			КонецЕсли;	
			
		КонецЕсли;
		
		//ИП-00019521.02
		//из таблицы товаров вычитаем суммы продажи по курьерам.
		СтруктураПоиска = Новый Структура;
		
		Для Каждого СтрТовары ИЗ ТаблицаТовары Цикл			
			СтруктураПоиска.Вставить("ЛУ", СтрТовары.ЛУ);
			СтруктураПоиска.Вставить("СтавкаНДСТовар", СтрТовары.СтавкаНДС);
			
			НайдСтроки = ТабОплатыПоКурьерскимСлужбам.НайтиСтроки(СтруктураПоиска);
			
			Если НайдСтроки.Количество() Тогда
				СтрТовары.Количество = СтрТовары.Количество - НайдСтроки[0].КоличествоТовар;
				СтрТовары.Сумма = СтрТовары.Сумма - НайдСтроки[0].СуммаТовар;
				СтрТовары.Цена = ?(СтрТовары.Количество = 0, 0, СтрТовары.Сумма / СтрТовары.Количество);
			КонецЕсли;
		КонецЦикла;
		//-
		
		ИсходящиеДанные.Вставить("Товары", ТаблицаТовары);
		
		//таблица безнал
		НайдСтрокиДетОплата = ТабДетализацияОплатБезналПоБанкам.НайтиСтроки(Новый Структура("ЛУ", Стр.ЛУ));	
		
		//ИП-00019521.02
		НайдСтрокиОплатыКурьерам = ТабОплатыПоКурьерскимСлужбам.НайтиСтроки(Новый Структура("ЛУ", Стр.ЛУ)); 
		
		ОбщаяСуммаОплатКурьерам = 0;
		НомерСтрокиРозница = -1;
				
		Если НайдСтрокиОплатыКурьерам.Количество() Тогда
			НомерСтрокиРозница = НомерСтрокиРозница + 1;
			НовСтр = ТаблицаОплаты.Добавить();
			Новстр.СуммаОплаты = НайдСтрокиОплатыКурьерам[0].СуммаБезнал;
			НовСтр.Префикс = Строка(НайдСтрокиОплатыКурьерам[0].ИДКурьераПоДоставке);
			НовСтр.ВидОплаты = Неопределено;			
			
			ОбщаяСуммаОплатКурьерам = ОбщаяСуммаОплатКурьерам + НайдСтрокиОплатыКурьерам[0].СуммаБезнал;
			
		КонецЕсли;
		
		Для Каждого НайдСтр Из НайдСтрокиДетОплата Цикл
			НовСтр = ТаблицаОплаты.Добавить();          				
			
			Новстр.СуммаОплаты = НайдСтр.Сумма - Мин(НайдСтр.Сумма, ОбщаяСуммаОплаткурьерам);
			
			ОбщаяСуммаОплатКурьерам = ОбщаяСуммаОплатКурьерам - Мин(НайдСтр.Сумма, ОбщаяСуммаОплаткурьерам);
			
			НовСтр.Префикс = "1";
			
			Если Стр.ЭтоИзбенка Тогда
				Префикс = Лев(СокрЛП(НайдСтр.Терминал), 1);
				
				Если Префикс = "1" Или Префикс = "4" Тогда			
					НовСтр.Префикс = Префикс;
				КонецЕсли;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Префикс) Тогда
				Префикс = "1"; //затычка - Сбер всегда, если не заполнен
			КонецЕсли;
			
			НовСтр.ВидОплаты = Неопределено;
		КонецЦикла;
		
		ТаблицаОплаты.Свернуть("Префикс,ВидОплаты", "СуммаОплаты");	
		
		Сообщить("Номерстрокирозница = " + Строка(НомерСтрокиРозница));
		
		Если ТаблицаОплаты.Количество() И НайдСтрВозвратыКМ3 &lt;&gt; Неопределено Тогда
			ТаблицаОплаты[НомерСтрокиРозница + 1].СуммаОплаты = ТаблицаОплаты[НомерСтрокиРозница + 1].СуммаОплаты - (НайдСтрВозвратыКМ3.ВозвратПоНДС10БезНал + НайдСтрВозвратыКМ3.ВозвратПоНДС18БезНал);
		КонецЕсли;
		
		ИсходящиеДанные.Вставить("Оплата", ТаблицаОплаты);
		ИсходящиеДанные.Вставить("УзелОбменаСтрокой", УзелСтрокой);
		
		Попытка
			ВыгрузитьПоПравилу(Стр.ЛУ, , ИсходящиеДанные, , "ЛистУчета_ОРП");
		Исключение
			Отказ = Истина;
		КонецПопытки;
		
		//Возвраты из сейфа, если есть
		НайдСтрВозвраты = ТабВозвратыИзСейфа.НайтиСтроки(Новый Структура("ЛУ", Стр.ЛУ));
		
		Если НайдСтрВозвраты.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ИсхДанныеВозвраты = Новый Структура;
		ИсхДанныеВозвраты.Вставить("Дата", Стр.Дата);
		ИсхДанныеВозвраты.Вставить("Организация", Стр.Организация);
		ИсхДанныеВозвраты.Вставить("ПодразделениеОрганизации", Стр.Подразделение);
		ИсхДанныеВозвраты.Вставить("ТорговаяТочка", Стр.Подразделение);
		ИсхДанныеВозвраты.Вставить("НомерТочки", Стр.НомерТочки);
		
		//т.к. в исходной обработке поиск подразделения осуществлялся по коду+организация, то я решил не изобретать велосипед.
		//у меня в поиске подразделения есть такой поиск, но он делался для точек с видом "Избенка" и заполненым кодом ОП Бухи. 
		//поэтому я здесь вставляю те же поля, чтобы подогнать под тот поиск, ставлю ЭтоИзбенка - в истину и кодом ОП бух проставляю код ТТ.
		ИсхДанныеВозвраты.Вставить("КодОПБух", Формат(Стр.НомерТочки, "ЧГ=0"));
		ИсхДанныеВозвраты.Вставить("НаименованиеПодразделенияДляПоиска", "");
		ИсхДанныеВозвраты.Вставить("Владелец", Стр.Организация);
		ИсхДанныеВозвраты.Вставить("ЭтоИзбенка", Истина);   		
		
		ТабНоменклатураПоВозвратамИзСейфа.Очистить();
		
		Для Каждого НСтрВозврат Из НайдСтрВозвраты Цикл
			НовСтрВозврат = ТабНоменклатураПоВозвратамИзСейфа.Добавить();
			НовСтрВозврат.Номенклатура = НСтрВозврат.Номенклатура;			
			НовСтрВозврат.Количество = НСтрВозврат.Количество;
			НовСтрВозврат.Сумма = НСтрВозврат.Сумма;
			НовСтрВозврат.Себестоимость = НСтрВозврат.Себестоимость * НСтрВозврат.Количество;
			НовСтрВозврат.СтавкаНДС = НСтрВозврат.СтавкаНДС;
		КонецЦикла;
		
		ИсхДанныеВозвраты.Вставить("Товары", ТабНоменклатураПоВозвратамИзСейфа);
		ИсхДанныеВозвраты.Вставить("УзелОбменаСтрокой", УзелСтрокой);
		
		Попытка
			ВыгрузитьПоПравилу(Стр.ЛУ, , ИсхДанныеВозвраты, , "ЛистУчета_ВозвратИзСейфа");	
		Исключение
			Отказ = Истина;
		КонецПопытки;
		
	КонецЦикла;
	
	
	//ПКО по инкассации отдельно.		
	Для Каждого Стр Из ТабПКО Цикл	
		
		ИсхДанныеПКО = Новый Структура;
		
		//поиск подразделения по Избенке
		ИсхДанныеПКО.Вставить("ЭтоИзбенка", Истина);
		ИсхДанныеПКО.Вставить("НаименованиеПодразделенияДляПоиска", "");
		ИсхДанныеПКО.Вставить("КодОПБух", "");
		
		Если ЗначениеЗаполнено(Стр.ДатаПерехода) И Стр.ДатаПерехода &lt;= Стр.Дата Тогда
			Если ЗначениеЗаполнено(Стр.КодОПБух) Тогда
				ИсхДанныеПКО.Вставить("КодОПБух", Стр.КодОПБух);
			КонецЕсли;
		Иначе
			ИсхДанныеПКО.Вставить("НаименованиеПодразделенияДляПоиска", "Управление розницей");
		КонецЕсли;		
		
		ИсхДанныеПКО.Вставить("Дата", Стр.Дата);
		ИсхДанныеПКО.Вставить("ПодразделениеОрганизации", Стр.ТорговаяТочка);
		ИсхДанныеПКО.Вставить("СуммаОперации", Стр.СуммаДокумента);
		ИсхДанныеПКО.Вставить("Организация", Стр.Организация);
		ИсхДанныеПКО.Вставить("ПометкаУдаления", Стр.ПометкаУдаления);
		ИсхДанныеПКО.Вставить("Комментарий", "Инкассация получил склад от " + Строка(Стр.ТорговаяТочка));
		ИсхДанныеПКО.Вставить("УзелОбменаСтрокой", УзелСтрокой);
		
		Попытка
			ВыгрузитьПоПравилу(Стр.Ссылка, , ИсхДанныеПКО, , "ПКО_Операция");
		Исключение
			Отказ = Истина;
		КонецПопытки;
		
	КонецЦикла;		
		
	ДатаКонцаОбработки = ТекущаяДата();	
	Сообщить("Конец выборки " + Строка(ДатаКонцаОбработки));
	
	Сообщить("Разность: " + Строка(ДатаКонцаОбработки - ДатаНачалаОбработки) + " сек");
	
КонецЕсли;
</ПередОбработкойПравила>
			<ПослеОбработкиПравила>Если НепосредственноеЧтениеВИБПриемнике Тогда
	Сообщить("Снимаю регистрацию");
	ПланыОбмена.УдалитьРегистрациюИзменений(Параметры.УзелОбмена, Параметры.НомерСообщения);
КонецЕсли;</ПослеОбработкиПравила>
		</Правило>
	</ПравилаВыгрузкиДанных>
	<ПравилаОчисткиДанных/>
	<Алгоритмы>
		<Алгоритм Имя="ЗаписатьОбъектВОтложенноеПроведение" ИспользуетсяПриЗагрузке="true">
			<Текст>//Отложенное проведение
Если Параметры.УзелОбменаБух = Неопределено Тогда
	Параметры.УзелОбменаБух = ПланыОбмена.ОбменИзбенкаСБП.НайтиПоКоду(ПараметрыОбъекта["УзелОбменаСтрокой"]);
КонецЕсли;

ЗаписьРегистра = РегистрыСведений.ОтложенныеДвиженияДокументов.СоздатьМенеджерЗаписи();
ЗаписьРегистра.Документ = СсылкаНаОбъект;
ЗаписьРегистра.УзелОбмена = Параметры.УзелОбменаБух;
ЗаписьРегистра.Прочитать();

Если НЕ ЗаписьРегистра.Выбран() Тогда
	ЗаписьРегистра.Документ = СсылкаНаОбъект;
	ЗаписьРегистра.УзелОбмена = Параметры.УзелОбменаБух;
	ЗаписьРегистра.Записать(Ложь);
КонецЕсли;
</Текст>
		</Алгоритм>
		<Алгоритм Имя="ПроверкаНаРавенство" ИспользуетсяПриЗагрузке="true">
			<Текст>Пту1 = Объект;
Пту2 = Объект.Ссылка;

МетаданныеДокумента = Пту1.Метаданные();
	
ДопРеквизиты = Новый Массив;
ДопРеквизиты.Добавить("Номер");
ДопРеквизиты.Добавить("Дата");
ДопРеквизиты.Добавить("ПометкаУдаления");
ДопРеквизиты.Добавить("Проведен");
	
НеРавны = Ложь;
	
Для Каждого Эл Из МетаданныеДокумента.Реквизиты Цикл
	ЗначРекв1 = Пту1[Эл.Имя];
	ЗначРекв2 = Пту2[Эл.Имя];
		
	Если ЗначРекв1 &lt;&gt; ЗначРекв2 Тогда
		НеРавны = Истина;
		Сообщить(Эл.Имя);
		Прервать;
	КонецЕсли;
		
КонецЦикла;
	
Если НЕ Неравны Тогда
		
	Для Каждого Эл Из ДопРеквизиты Цикл
		ЗначРекв1 = Пту1[Эл];
		ЗначРекв2 = Пту2[Эл];
		
		Если ЗначРекв1 &lt;&gt; ЗначРекв2 Тогда
			НеРавны = Истина;
			Сообщить(Эл);
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
КонецЕсли;
	
Если НЕ Неравны Тогда
	
	Для Каждого ТЧ Из МетаданныеДокумента.ТабличныеЧасти Цикл
		
		СтрокаРеквизиты = "";
			
		ТЧПТу1 = Пту1[ТЧ.Имя];
		ТЧПту2 = Пту2[Тч.Имя];
		
		Для Каждого Эл Из Тч.Реквизиты Цикл
			
			Для Каждого Стр Из ТчПту1 Цикл
				ЗначРекв1 = Стр[Эл.Имя];
				
				Попытка
					ЗначРекв2 = ТчПту2[Стр.НомерСтроки - 1][Эл.Имя];
				Исключение
					НеРавны = Истина;
					Сообщить(Эл.Имя);
					Прервать;
				КонецПопытки;
				
				Если ЗначРекв1 &lt;&gt; ЗначРекв2 Тогда
					НеРавны = Истина;
					Сообщить(Эл.Имя);
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
				
			Если НЕ НеРавны Тогда
					
				Для Каждого Стр Из ТчПту2 Цикл
					ЗначРекв2 = Стр[Эл.Имя];
					
					Попытка
						ЗначРекв1 = ТчПту1[Стр.НомерСтроки - 1][Эл.Имя];
					Исключение
						НеРавны = Истина;
						Сообщить(эл.Имя);
						Прервать;
					КонецПопытки;
						
					Если ЗначРекв1 &lt;&gt; ЗначРекв2 Тогда
						НеРавны = Истина;
						Сообщить(Эл.Имя);
						Прервать;
					КонецЕсли;
						
				КонецЦикла;
					
			КонецЕсли;
				
		КонецЦикла;
			
	КонецЦикла;	
		
КонецЕсли;</Текст>
		</Алгоритм>
	</Алгоритмы>
	<Запросы/>
</ПравилаОбмена>