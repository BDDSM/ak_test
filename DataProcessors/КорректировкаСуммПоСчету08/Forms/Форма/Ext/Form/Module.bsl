

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.ДатаОбработки 	= НачалоМесяца(ТекущаяДата()) - 1;
	Объект.СтатьяДР			= Справочники.СтатьиДоходовРасходов.НайтиПоКоду("61010"); // Амортизация инвестиций в ТТ
	
КонецПроцедуры


Процедура ЗаполнитьОстаткиПоСчету08Сервер()
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаОстатков", КонецДня(Объект.ДатаОбработки) + 1);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФинансовыйОстатки.Субконто1 КАК СтатьяДДС,
	|	ФинансовыйОстатки.Субконто2 КАК ОсновноеСредство,
	|	ФинансовыйОстатки.Субконто3 КАК ЦФО,
	|	ЕСТЬNULL(Остатки02.Субконто2, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)) КАК ТорговаяТочка,
	|	ФинансовыйОстатки.СуммаОстаток КАК Сумма,
	|	ФинансовыйОстатки.СуммаМСФООстаток
	|ИЗ
	|	РегистрБухгалтерии.Финансовый.Остатки(&ДатаОстатков, Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.КапитальныеВложения), , ) КАК ФинансовыйОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Финансовый.Остатки(&ДатаОстатков, Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ККМ), , Субконто2 ССЫЛКА Справочник.СтруктурныеЕдиницы) КАК Остатки02
	|		ПО (Остатки02.Субконто3 = ФинансовыйОстатки.Субконто2)
	|			И (Остатки02.КоличествоОстаток > 0)
	|ГДЕ
	|	ФинансовыйОстатки.СуммаОстаток > 0
	|	И НЕ Остатки02.Субконто2 ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФинансовыйОстатки.Субконто2.ИнвентарныйНомер,
	|	ФинансовыйОстатки.Субконто1.Наименование";
	
	Объект.ОстаткиПоСчету08.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОстаткиПоСчету08(Команда)
	
	//
	ЗаполнитьОстаткиПоСчету08Сервер();	
	
КонецПроцедуры

Процедура СформироватьДокументОперацииСервер()
	
	Счет01 = ПланыСчетов.Финансовый.Инвестиции;
	Счет08 = ПланыСчетов.Финансовый.КапитальныеВложения;
	Счет443 = ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;
	//+++АК ZICD 20.01.2017
	//ДатаНачалаУчетаМСФО = Константы.АК_НачалоВеденияУчетаМСФО.Получить();
	ДатаНачалаУчетаМСФО = АК_УчетМСФОПривилегированный.ПолучитьДатуНачалаУчетаМСФО();
	//---АК
	ЗаписыватьОрганизацию = (Объект.ДатаОбработки >= ДатаНачалаУчетаМСФО
								И НЕ Объект.Организация.Пустая());
	
	//
	ДокОперации = Документы.Операция.СоздатьДокумент();
	ДокОперации.Дата = КонецДня(Объект.ДатаОбработки);
	
	ДвиженияФинансовый = ДокОперации.Движения.Финансовый;
	Для Каждого СтрокаТЧ Из Объект.ОстаткиПоСчету08 Цикл
		
		//Дт01-Кт08
		Проводка = ДвиженияФинансовый.ДобавитьДебет();
		Проводка.Период							= Объект.ДатаОбработки;
		Проводка.Сумма							= СтрокаТЧ.Сумма;
		
		Проводка.СчетДт							= Счет01;
		Проводка.СубконтоДт.ТорговыеТочки		= СтрокаТЧ.ТорговаяТочка;
		
		Проводка.СчетКт							= Счет08;
		Проводка.СубконтоКт.ОсновныеСредства	= СтрокаТЧ.ОсновноеСредство;
		Проводка.СубконтоКт.СтатьиДвиженияДенежныхСредств	= СтрокаТЧ.СтатьяДДС;
		Проводка.СубконтоКт.ЦФО					= СтрокаТЧ.ЦФО;
		Если ЗаписыватьОрганизацию Тогда
			Проводка.Организация = Объект.Организация;
		КонецЕсли;
		
		//Дт44-Кт01
		Проводка = ДвиженияФинансовый.ДобавитьДебет();
		Проводка.Период							= Объект.ДатаОбработки;
		Проводка.Сумма							= СтрокаТЧ.Сумма;
		
		Проводка.СчетДт							= Счет443;
		Если ЗначениеЗаполнено(СтрокаТЧ.ТорговаяТочка)
				И СтрокаТЧ.ТорговаяТочка.ТипСтруктурнойЕдиницы <> Перечисления.ТипыСтруктурныхЕдиниц.Розница Тогда
			Проводка.СубконтоДт.ТорговыеТочки	= Справочники.СтруктурныеЕдиницы.НайтиПоКоду("ЦФО_000");
		Иначе
			Проводка.СубконтоДт.ТорговыеТочки	= СтрокаТЧ.ТорговаяТочка;
		КонецЕсли;
		Проводка.СубконтоДт.СтатьиДоходовРасходов = Объект.СтатьяДР;
		Проводка.СубконтоДт.ЦФО					= СтрокаТЧ.ЦФО;
		
		Проводка.СчетКт							= Счет01;
		Проводка.СубконтоКт.ТорговыеТочки		= СтрокаТЧ.ТорговаяТочка;
		Если ЗаписыватьОрганизацию Тогда
			Проводка.Организация = Объект.Организация;
		КонецЕсли;
		
	КонецЦикла;
	
	ДокОперации.СуммаОперации 	= Объект.ОстаткиПоСчету08.Итог("Сумма");
	ДокОперации.Комментарий		= "Списание сумм по счету 08 [создан автоматически обработкой]";
	
	Попытка
		ДокОперации.Записать();
		Объект.ДокументОперация = ДокОперации.Ссылка;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДокументОперации(Команда)
	
	Если Объект.СтатьяДР.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	//
	СформироватьДокументОперацииСервер();
	
КонецПроцедуры
