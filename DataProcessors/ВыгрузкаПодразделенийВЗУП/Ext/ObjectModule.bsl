Перем v82,v82БП;

Функция ПолучитьЭлементВЗУПе(УИН)
	УИН_В_ЗУПе=v82.NewObject("УникальныйИдентификатор", УИН);
				   
	ПодразделениеОбъект = v82.Справочники.Подразделения.ПолучитьССылку(v82.NewObject("УникальныйИдентификатор",УИН_В_ЗУПе)).ПолучитьОбъект();
	   
	Если ПодразделениеОбъект = Неопределено Тогда
	   
	    НовыйПодразделениеОбъект = v82.Справочники.Подразделения.СоздатьЭлемент();
			      
	    НовыйПодразделениеОбъект.УстановитьСсылкуНового(v82.Справочники.Подразделения.ПолучитьСсылку(v82.NewObject("УникальныйИдентификатор",УИН_В_ЗУПе)));
		
		НовыйПодразделениеОбъект.ОбменДанными.Загрузка=истина;
		НовыйПодразделениеОбъект.УстановитьНовыйКод();
		ПодразделениеОбъект = НовыйПодразделениеОбъект;
	       
	Иначе
		//Сообщить("Нашёл!");
	КонецЕсли;
	
	Возврат ПодразделениеОбъект;
КонецФункции

Процедура ВыгрузитьВЗУП() Экспорт
	СтрокаСоединения = СтрокаСоединенияИнформационнойБазы();
	ИмяБД = Сред(СтрокаСоединения,Найти(СтрокаСоединения,"Ref=")+4);
	ИмяБД = СтрЗаменить(ИмяБД,";","");
	ИмяБД = СтрЗаменить(ИмяБД,Символ(34),"");
	ИмяБД = ?(ИмяБД = "IzbenkaFin","Основная БД",ИмяБД);
	Если ИмяБД = "Основная БД" Тогда
		СтрокаПодключения = ПолныеПрава.ПолучитьСтрокуПодключения_Зуп();
	Иначе
		СтрокаПодключения="Srvr=""srv-sql02""; Ref=""HRM_test""; Usr=""Обмен""; Pwd=""123321""";
	КонецЕсли;	
	
	v82COMОбъект = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Зуп() + ".COMConnector");
	
	Попытка
		//v82 = v82COMОбъект.Connect("Srvr=srv-sql01; Ref=IzbenkaFin;");
		v82 = v82COMОбъект.Connect(СтрокаПодключения);
		ПодключениеУстановлено=Истина;
	Исключение
		
		ПодключениеУстановлено=Ложь;
		Сообщить("Не удалось подключитьс к базе ЗУП");
		Возврат;
		
	КонецПопытки;
	
	//ТекстЗапроса="ВЫБРАТЬ
	//			 |	ЦФОСтруктурныхЕдиницСрезПоследних.Период,
	//			 |	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница,
	//			 |	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО КАК ЦФО,
	//			 |	ЦФОСтруктурныхЕдиницСрезПоследних.Организация КАК Организация
	//			 |ИЗ
	//			 |	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних КАК ЦФОСтруктурныхЕдиницСрезПоследних
	//			 |
	//			 |СГРУППИРОВАТЬ ПО
	//			 |	ЦФОСтруктурныхЕдиницСрезПоследних.Период,
	//			 |	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница,
	//			 |	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО,
	//			 |	ЦФОСтруктурныхЕдиницСрезПоследних.Организация";
	
	ТекстЗапроса="ВЫБРАТЬ
	             |	СтруктурныеЕдиницы.Ссылка,
	             |	СтруктурныеЕдиницы.Наименование,
	             |	СтруктурныеЕдиницы.ДатаЗакрытия,
	             |	СтруктурныеЕдиницы.УведомлениеОЗакрытииОППодано
	             |ИЗ
	             |	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	             |ГДЕ
	             |	(СтруктурныеЕдиницы.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Подразделение)
	             |			ИЛИ СтруктурныеЕдиницы.Код = ""P00000231"")
	             |	И НЕ СтруктурныеЕдиницы.ПометкаУдаления";
				 
	Запрос=Новый Запрос(ТекстЗапроса);			 
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		УИН = XMLСтрока(Выборка.Ссылка.УникальныйИдентификатор());
		ПодразделениеОбъект=ПолучитьЭлементВЗУПе(УИН);
		//Если ПодразделениеОбъект.наименование<>Выборка.Наименование Тогда
			ПодразделениеОбъект.наименование=Выборка.Наименование;
			//ПодразделениеОбъект.Родитель=ЦФО;
			//ПодразделениеОбъект.АК_ДатаЗакрытия=Выборка.ДатаЗакрытия;
			//ПодразделениеОбъект.АК_УведомлениеОЗакрытииОППодано=Выборка.УведомлениеОЗакрытииОППодано;
	   		ПодразделениеОбъект.Записать();
		//КонецЕсли;	
		
		////Если ЗначениеЗаполнено(Выборка.Организация) Тогда
		////	ПодразделениеОбъект=v82.Справочники.Подразделения.НайтиПоНаименованию(Выборка.Организация.Наименование,истина,v82.Справочники.Подразделения.ПустаяСсылка());
		////	Если ПодразделениеОбъект=v82.Справочники.Подразделения.ПустаяСсылка() Тогда
		////		НовыйПодразделениеОбъект = v82.Справочники.Подразделения.СоздатьЭлемент();
		////		НовыйПодразделениеОбъект.Наименование=Выборка.Организация.Наименование;
		////		НовыйПодразделениеОбъект.Записать();
		////		Организация=НовыйПодразделениеОбъект.Ссылка;
		////	Иначе
		////		Организация=ПодразделениеОбъект.Ссылка;
		////	КонецЕсли;	

		////Иначе
		////	ПодразделениеОбъект=v82.Справочники.Подразделения.НайтиПоНаименованию("ВСЕ ОРГАНИЗАЦИИ",истина,v82.Справочники.Подразделения.ПустаяСсылка());
		////	Если ПодразделениеОбъект=v82.Справочники.Подразделения.ПустаяСсылка() Тогда
		////		НовыйПодразделениеОбъект = v82.Справочники.Подразделения.СоздатьЭлемент();
		////		НовыйПодразделениеОбъект.Наименование="ВСЕ ОРГАНИЗАЦИИ";
		////		НовыйПодразделениеОбъект.Записать();
		////		Организация=НовыйПодразделениеОбъект.Ссылка;
		////	Иначе
		////		Организация=ПодразделениеОбъект.Ссылка;
		////	КонецЕсли;	
		////КонецЕсли;	
	   
		//УИН = XMLСтрока(Выборка.ЦФО.УникальныйИдентификатор());
		//ПодразделениеОбъект=ПолучитьЭлементВЗУПе(УИН);
		//Если ПодразделениеОбъект.наименование<>Выборка.ЦФО.Наименование или ПодразделениеОбъект.Родитель<>Организация Тогда
		//	ПодразделениеОбъект.наименование=Выборка.ЦФО.Наименование;
		//	ПодразделениеОбъект.Родитель=Организация;
		//  	ПодразделениеОбъект.Записать();
		//КонецЕсли;	
		////
		////ПодразделениеОбъект=v82.Справочники.Подразделения.НайтиПоНаименованию(Выборка.ЦФО.Наименование,истина,Организация);
		////Если ПодразделениеОбъект=v82.Справочники.Подразделения.ПустаяСсылка() Тогда
		////	НовыйПодразделениеОбъект = v82.Справочники.Подразделения.СоздатьЭлемент();
		////	НовыйПодразделениеОбъект.Наименование=Выборка.ЦФО.Наименование;
		////	НовыйПодразделениеОбъект.Родитель=Организация;
		////	НовыйПодразделениеОбъект.Записать();
		////	ЦФО=НовыйПодразделениеОбъект.Ссылка;
		////Иначе
		////	ЦФО=ПодразделениеОбъект.Ссылка;
		////КонецЕсли;	
		
		//ЦФО=ПодразделениеОбъект.Ссылка;
		
		////Если выборка.СтруктурнаяЕдиница=Выборка.ЦФО Тогда
		////	продолжить;
		////КонецЕсли;
		////Если НЕ ЗначениеЗаполнено(выборка.СтруктурнаяЕдиница) Тогда
		////	продолжить;
		////КонецЕсли;
		////УИН = XMLСтрока(Выборка.СтруктурнаяЕдиница.УникальныйИдентификатор());
		////ПодразделениеОбъект=ПолучитьЭлементВЗУПе(УИН);
		////Если ПодразделениеОбъект.наименование<>Выборка.СтруктурнаяЕдиница.Наименование или ПодразделениеОбъект.Родитель<>ЦФО Тогда
		////	ПодразделениеОбъект.наименование=Выборка.СтруктурнаяЕдиница.Наименование;
		////	ПодразделениеОбъект.Родитель=ЦФО;
		////  	ПодразделениеОбъект.Записать();
		////КонецЕсли;	
		
	КонецЦикла;	
	ВыгрузитьВЗУППодразделенияОрганизаций();
КонецПроцедуры	

Процедура ИмпортПривязкиФизлицКПодразделениям() Экспорт
	ТекстЗапроса="ВЫБРАТЬ
	             |	ФизическиеЛица.Ссылка,
	             |	ФизическиеЛица.Код
	             |ИЗ
	             |	Справочник.ФизическиеЛица КАК ФизическиеЛица";
	Запрос=Новый Запрос(ТекстЗапроса);			 
	КэшФизЛиц=Запрос.Выполнить().Выгрузить();			 
	
	ТекстЗапроса="ВЫБРАТЬ
             |	АК_СотрудникиУпрПодразделений.Период,
             |	АК_СотрудникиУпрПодразделений.ФизЛицо,
             |	АК_СотрудникиУпрПодразделений.Подразделение
             |ИЗ
             |	РегистрСведений.АК_СотрудникиУпрПодразделений КАК АК_СотрудникиУпрПодразделений";
	СтрокаСоединения = СтрокаСоединенияИнформационнойБазы();
	ИмяБД = Сред(СтрокаСоединения,Найти(СтрокаСоединения,"Ref=")+4);
	ИмяБД = СтрЗаменить(ИмяБД,";","");
	ИмяБД = СтрЗаменить(ИмяБД,Символ(34),"");
	ИмяБД = ?(ИмяБД = "IzbenkaFin","Основная БД",ИмяБД);
	Если ИмяБД = "Основная БД" Тогда
		СтрокаПодключения = ПолныеПрава.ПолучитьСтрокуПодключения_Зуп();
	Иначе
		СтрокаПодключения="Srvr=""srv-sql02""; Ref=""HRM_test""; Usr=""Обмен""; Pwd=""123321""";
	КонецЕсли;	
	
	v82COMОбъект = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Зуп() + ".COMConnector");
	
	Попытка
		//v82 = v82COMОбъект.Connect("Srvr=srv-sql01; Ref=IzbenkaFin;");
		v82 = v82COMОбъект.Connect(СтрокаПодключения);
		ПодключениеУстановлено=Истина;
	Исключение
		
		ПодключениеУстановлено=Ложь;
		Сообщить("Не удалось подключитьс к базе ЗУП");
		Возврат;
		
	КонецПопытки;
	
	
	
	запрос=v82.NewObject("Запрос");  
	запрос.текст = ТекстЗапроса;			 
	Выборка=Запрос.Выполнить().Выбрать();
	
	Набор=РегистрыСведений.СтруктурныеЕдиницыФизлиц.СоздатьНаборЗаписей();
	Набор.Прочитать();
	Набор.Очистить();
	
	Пока Выборка.Следующий() Цикл
		//ФизЛицо=Справочники.ФизическиеЛица.НайтиПоКоду(Выборка.ФизЛицо.Код);
		ФизЛицо=КэшФизЛиц.Найти(Выборка.ФизЛицо.Код,"Код");
		Если ФизЛицо<>неопределено Тогда
			ФизЛицо=ФизЛицо.Ссылка;
		КонецЕсли;	
		Подразделение=Справочники.СтруктурныеЕдиницы.ПолучитьСсылку(Новый УникальныйИдентификатор(v82.XMLСтрока(Выборка.Подразделение.УникальныйИдентификатор())));
		Если Не (ЗначениеЗаполнено(ФизЛицо) И ЗначениеЗаполнено(Подразделение)) Тогда
			Продолжить;
		КонецЕсли;	
		НЗ=Набор.Добавить();
		НЗ.Период=Выборка.Период;
		НЗ.ФизЛицо=ФизЛицо;
		НЗ.Подразделение=Подразделение;
	КонецЦикла;	
	Набор.Записать();
	//Предупреждение("Импорт завершен");
КонецПроцедуры	

Процедура ВыгрузитьВЗУППодразделенияОрганизаций() Экспорт
	
	СтрокаПодключения = ПолныеПрава.ПолучитьСтрокуПодключения_Зуп();
	//СтрокаПодключения="Srvr=""srv-sql02""; Ref=""HRM_test""; Usr=""Обмен""; Pwd=""123321""";
		
	v82COMОбъект = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Зуп() + ".COMConnector");
	
	Попытка
		//v82 = v82COMОбъект.Connect("Srvr=srv-sql01; Ref=IzbenkaFin;");
	 	v82 = v82COMОбъект.Connect(СтрокаПодключения);
		ПодключениеУстановлено=Истина;
	Исключение
		
		ПодключениеУстановлено=Ложь;
		Сообщить("Не удалось подключиться к базе ЗУП");
		Возврат;
		
	КонецПопытки;

	СтрокаПодключенияБП = ПолныеПрава.ПолучитьСтрокуПодключения_Бух();
	v82COMОбъектБП = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Бух() + ".COMConnector");
	
	Попытка
		v82БП = v82COMОбъектБП.Connect(СтрокаПодключенияБП);
		ПодключениеБПУстановлено=Истина;
	Исключение
		
		ПодключениеБПУстановлено=Ложь;
		Сообщить("Не удалось подключиться к базе бухгалтерии");
		Возврат;
		
	КонецПопытки;
	// кэш подразделений БП
	ТекстЗапроса="ВЫБРАТЬ
		|	ПодразделенияОрганизаций.Ссылка,
		|	ПодразделенияОрганизаций.Владелец.ИНН КАК ИНН,
		|	ПодразделенияОрганизаций.Владелец КАК Орг,
		|	ПодразделенияОрганизаций.Код,
		|	ПодразделенияОрганизаций.Префикс
		|ИЗ
		|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций";
	ЗапросПодр = v82БП.NewObject("Запрос");
	ЗапросПодр.Текст = ТекстЗапроса;
	ТабПодрБух = ЗапросПодр.Выполнить().Выгрузить();	
	
	// кэш подразделений ЗУП
	ТекстЗапросаЗУП="ВЫБРАТЬ
		|	ПодразделенияОрганизаций.Ссылка,
		|	ПодразделенияОрганизаций.Владелец.ИНН КАК ИНН,
		|	ПодразделенияОрганизаций.Владелец КАК Орг,
		|	ПодразделенияОрганизаций.Код,
		|	ПодразделенияОрганизаций.Наименование
		|ИЗ
		|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций";	
	
	ЗапросПодр = v82.NewObject("Запрос");
	ЗапросПодр.Текст = ТекстЗапросаЗУП;
	ТабПодрЗУП = ЗапросПодр.Выполнить().Выгрузить();
	

    
	ТекстЗапроса="ВЫБРАТЬ
	             |	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница КАК ссылка,
	             |	ЦФОСтруктурныхЕдиницСрезПоследних.Организация.ИНН КАК ИНН
	             |ИЗ
	             |	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних КАК ЦФОСтруктурныхЕдиницСрезПоследних";
	Запрос=Новый Запрос(текстЗапроса);
	ВыборкаПодразделений=Запрос.Выполнить().Выбрать();
	Пока ВыборкаПодразделений.Следующий() Цикл
		
		ПодрБП=ПолучитьПодразделениеБух(ТабПодрБух, ВыборкаПодразделений.Ссылка,ВыборкаПодразделений.ИНН);
		Если ПодрБП=Неопределено Тогда
			Сообщить("Не нашёл соответствия для "+ВыборкаПодразделений.Ссылка);
		Иначе
			Сообщить("БП:"+ВыборкаПодразделений.Ссылка+" - "+ПодрБП.Наименование);
			Если СокрЛП(ВыборкаПодразделений.ИНН)<>СокрЛП(ПодрБП.Владелец.ИНН) Тогда
				Сообщить("Не совпадают организации!");
			Иначе
				Отбор=v82.NewObject("Структура");
				Отбор.Вставить("Наименование",ПодрБП.Наименование);
				Отбор.Вставить("ИНН",ВыборкаПодразделений.ИНН);
				СтрокиПодр=ТабПодрЗУП.НайтиСтроки(Отбор);
				Если СтрокиПодр.Количество()>1 Тогда
					Сообщить("Найдено несколько вариантов при поиске по коду по В ЗУП по наименованию для "+ПодрБП.Наименование);
					ПодрЗУП=СтрокиПодр.Получить(0).Ссылка;
				ИначеЕсли СтрокиПодр.Количество()=1 Тогда
					ПодрЗУП=СтрокиПодр.Получить(0).Ссылка;
				Иначе
					Продолжить;
				КонецЕсли;	
				
				Если ПодрЗУП.АК_УведомлениеОЗакрытииОППодано<>ВыборкаПодразделений.Ссылка.УведомлениеОЗакрытииОППодано ИЛИ
					ПодрЗУП.АК_ДатаЗакрытия<>ВыборкаПодразделений.Ссылка.ДатаЗакрытия И ВыборкаПодразделений.Ссылка.ДатаЗакрытия>Дата(2016,10,19) Тогда//у старых не соответствует действительности в фин
					ПодрЗУП=ПодрЗУП.ПолучитьОбъект();
					ПодрЗУП.АК_УведомлениеОЗакрытииОППодано=ВыборкаПодразделений.Ссылка.УведомлениеОЗакрытииОППодано;
					ПодрЗУП.АК_ДатаЗакрытия=ВыборкаПодразделений.Ссылка.ДатаЗакрытия;
					ПодрЗУП.ОбменДанными.Загрузка=Истина;
					ПодрЗУП.Записать();
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
КонецПроцедуры	

Функция ПолучитьПодразделениеБух(ТабПодрБух, Точка,ИНН)
	
	Если ЗначениеЗаполнено(Точка.КодОПБух) Тогда
		//ищем по коду равному код оп бух
		Отбор=v82БП.NewObject("Структура");
		Отбор.Вставить("Код",Точка.КодОПБух);
		Отбор.Вставить("ИНН",ИНН);
		СтрокиПодр=ТабПодрБух.НайтиСтроки(Отбор);
		Если СтрокиПодр.Количество()>1 Тогда
			Сообщить("Найдено несколько вариантов при поиске по коду по кодопбух для "+Точка);
			Возврат СтрокиПодр.Получить(0).Ссылка;
		ИначеЕсли СтрокиПодр.Количество()=1 Тогда
			//Сообщить("Найдено несколько вариантов при поиске по коду по номеру точки для "+Точка);
			Возврат СтрокиПодр.Получить(0).Ссылка;
		Иначе
			
		КонецЕсли;	
	КонецЕсли;	

	
	НомерТочки=СокрЛП(Формат(Точка.НомерТочки, "ЧГ=0"));
	Если ЗначениеЗаполнено(НомерТочки) Тогда
		// ищем по коду равному номеру точки
		Отбор=v82БП.NewObject("Структура");
		Отбор.Вставить("Код",НомерТочки);
		Отбор.Вставить("ИНН",ИНН);
		СтрокиПодр=ТабПодрБух.НайтиСтроки(Отбор);
		Если СтрокиПодр.Количество()>1 Тогда
			Сообщить("Найдено несколько вариантов при поиске по коду по номеру точки для "+Точка);
			Возврат СтрокиПодр.Получить(0).Ссылка;
		ИначеЕсли СтрокиПодр.Количество()=1 Тогда
			//Сообщить("Найдено несколько вариантов при поиске по коду по номеру точки для "+Точка);
			Возврат СтрокиПодр.Получить(0).Ссылка;
		Иначе
			
		КонецЕсли;	
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(НомерТочки) Тогда
		// ищем по коду равному номеру точки
		Нашли=v82БП.справочники.ПодразделенияОрганизаций.НайтипоКоду(НомерТочки);
		Если Нашли<>v82БП.справочники.ПодразделенияОрганизаций.Пустаяссылка() Тогда
			Возврат Нашли;
		Иначе
			
		КонецЕсли;	
	КонецЕсли;

	Если ЗначениеЗаполнено(НомерТочки) Тогда
		Для Каждого СтрокаТаб Из ТабПодрБух Цикл
			Если СокрЛП(СтрокаТаб.Префикс) = СокрЛП(Формат(НомерТочки, "ЧГ=0")) Тогда
				Возврат СтрокаТаб.Ссылка;
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;
	Если ЗначениеЗаполнено(НомерТочки) Тогда
		// ищем по коду равному номеру точки
		Отбор=v82БП.NewObject("Структура");
		Отбор.Вставить("Префикс",НомерТочки);
		Отбор.Вставить("ИНН",ИНН);
		СтрокиПодр=ТабПодрБух.НайтиСтроки(Отбор);
		Если СтрокиПодр.Количество()>1 Тогда
			Сообщить("Найдено несколько вариантов при поиске по префиксу по номеру точки для "+Точка);
			Возврат СтрокиПодр.Получить(0).Ссылка;
		ИначеЕсли СтрокиПодр.Количество()=1 Тогда
			//Сообщить("Найдено несколько вариантов при поиске по коду по номеру точки для "+Точка);
			Возврат СтрокиПодр.Получить(0).Ссылка;
		Иначе
			
		КонецЕсли;	
	КонецЕсли;


	Возврат Неопределено;
	
КонецФункции