
Процедура УстановитьОтборВДинамическомСписке(ИмяЭлементаОтбора, ЗначениеОтбора)
	
	мПолеКомпоновки = Новый ПолеКомпоновкиДанных(ИмяЭлементаОтбора);
	
	ЭлементыОтбора = ЭтаФорма.СтоимостьДоставки.Отбор.Элементы;
	Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл
			
		Если ЭлементОтбора.ЛевоеЗначение = мПолеКомпоновки Тогда
			
			ЭлементОтбора.Использование 	= ЗначениеЗаполнено(ЗначениеОтбора);
			ЭлементОтбора.ПравоеЗначение 	= ЗначениеОтбора;
			
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьСтоимостьСервер(СтруктураПараметров)
	
	ЕстьТипРозничнойТочки 			= ЗначениеЗаполнено(СтруктураПараметров.ТипРозничнойТочки);
	ЕстьГруппаДоставкиНоменклатуры 	= ЗначениеЗаполнено(СтруктураПараметров.ГруппаДоставкиНоменклатуры);
	ЕстьКонтрагент 					= ЗначениеЗаполнено(СтруктураПараметров.Контрагент);
	ЕстьПеревозчик 					= ЗначениеЗаполнено(СтруктураПараметров.Перевозчик);
	ЕстьТТ 							= ЗначениеЗаполнено(СтруктураПараметров.ТТ);
	ЕстьОрганизация 				= ЗначениеЗаполнено(СтруктураПараметров.Организация);
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаУстановки", СтруктураПараметров.ДатаУстановки);
	Если ЕстьТипРозничнойТочки Тогда
		Запрос.УстановитьПараметр("ТипРозничнойТочки"			, СтруктураПараметров.ТипРозничнойТочки);
	КонецЕсли;
	Если ЕстьГруппаДоставкиНоменклатуры Тогда
		Запрос.УстановитьПараметр("ГруппаДоставкиНоменклатуры"	, СтруктураПараметров.ГруппаДоставкиНоменклатуры);
	КонецЕсли;
	Если ЕстьКонтрагент Тогда
		Запрос.УстановитьПараметр("Контрагент"					, СтруктураПараметров.Контрагент);
	КонецЕсли;
	Если ЕстьПеревозчик Тогда
		Запрос.УстановитьПараметр("Перевозчик"					, СтруктураПараметров.Перевозчик);
	КонецЕсли;
	Если ЕстьТТ Тогда
		Запрос.УстановитьПараметр("ТТ"							, СтруктураПараметров.ТТ);
	КонецЕсли;
	Если ЕстьОрганизация Тогда
		Запрос.УстановитьПараметр("Организация"					, СтруктураПараметров.Организация);
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СтоимостьУслугПоДоставке.Контрагент,
	|	СтоимостьУслугПоДоставке.ТТ,
	|	СтоимостьУслугПоДоставке.ГруппаДоставкиНоменклатуры
	|ИЗ
	|	РегистрСведений.СтоимостьУслугПоДоставкеТовараНаТТ.СрезПоследних(&ДатаУстановки, &УсловиеОтбора) КАК СтоимостьУслугПоДоставке
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АК_ПеревозчикиПоКонтрагентам КАК АК_ПеревозчикиПоКонтрагентам
	|		ПО (АК_ПеревозчикиПоКонтрагентам.Перевозчик = СтоимостьУслугПоДоставке.Контрагент)
	|ГДЕ
	|	(АК_ПеревозчикиПоКонтрагентам.Контрагент ЕСТЬ NULL 
	|			ИЛИ &УсловиеПоКонтрагенту)";
	
	ТекстОтбора = "ИСТИНА";
	ТекстОтбора = ТекстОтбора +	?(ЕстьТипРозничнойТочки, "
	|	И ТТ.ТипРозничнойТочки = &ТипРозничнойТочки", "");
	ТекстОтбора = ТекстОтбора +	?(ЕстьГруппаДоставкиНоменклатуры, "
	|	И ГруппаДоставкиНоменклатуры = &ГруппаДоставкиНоменклатуры", "");
	ТекстОтбора = ТекстОтбора +	?(ЕстьПеревозчик, "
	|	И Контрагент = &Перевозчик", "");
	ТекстОтбора = ТекстОтбора +	?(ЕстьТТ, "
	|	И ТТ = &ТТ", "");
	ТекстОтбора = ТекстОтбора +	?(ЕстьОрганизация, "
	|	И Организация = &Организация", "");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбора"		, ТекстОтбора);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеПоКонтрагенту",
												?(ЕстьКонтрагент, "АК_ПеревозчикиПоКонтрагентам.Контрагент = &Контрагент", "ИСТИНА"));
	
	Запрос.Текст = ТекстЗапроса;
	
	
	РегСведений = РегистрыСведений.СтоимостьУслугПоДоставкеТовараНаТТ;
	//
	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			МенеджерЗаписи = РегСведений.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
			МенеджерЗаписи.Период 		= СтруктураПараметров.ДатаУстановки;
			МенеджерЗаписи.Ставка 		= СтруктураПараметров.Ставка;
			МенеджерЗаписи.Организация 	= СтруктураПараметров.Организация;
			//МенеджерЗаписи.ДатаЗаписи 	= ТекущаяДата();
			Если Не НоменклатураСервер.ПроверитьГруппуДоставкиНоменклатуры(МенеджерЗаписи.Период,МенеджерЗаписи.ТТ,МенеджерЗаписи.ГруппаДоставкиНоменклатуры) Тогда
				НоменклатураСервер.УбратьСтарыеЗаписиСтоимостьУслугПоДоставкеТовараНаТТ(МенеджерЗаписи.Период,МенеджерЗаписи.ТТ,МенеджерЗаписи.ГруппаДоставкиНоменклатуры);
			КонецЕсли; 
			Попытка
				МенеджерЗаписи.Записать(); 
			Исключение
				СообщениеПользователю = Новый СообщениеПользователю;
				СообщениеПользователю.Текст = "Не удалось добавить запись в регистр сведений";
				СообщениеПользователю.Сообщить();
			КонецПопытки;
		КонецЦикла;
	Иначе
		МенеджерЗаписи = РегСведений.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтруктураПараметров);
		МенеджерЗаписи.Период = СтруктураПараметров.ДатаУстановки;
		//МенеджерЗаписи.ДатаЗаписи 	= ТекущаяДата();
		Если НоменклатураСервер.ПроверитьГруппуДоставкиНоменклатуры(МенеджерЗаписи.Период,МенеджерЗаписи.ТТ,МенеджерЗаписи.ГруппаДоставкиНоменклатуры) Тогда
			НоменклатураСервер.УбратьСтарыеЗаписиСтоимостьУслугПоДоставкеТовараНаТТ(МенеджерЗаписи.Период,МенеджерЗаписи.ТТ,МенеджерЗаписи.ГруппаДоставкиНоменклатуры);
		КонецЕсли;
		Попытка
			МенеджерЗаписи.Записать(); 
		Исключение
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Не удалось добавить запись в регистр сведений";
			СообщениеПользователю.Сообщить();
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Объект.ДатаУстановки = ТекущаяДата();
	
	Объект.ГруппаДоставкиНоменклатуры = Перечисления.ГруппыДоставкиНоменклатуры.Прочее;
	УстановитьОтборВДинамическомСписке("ГруппаДоставкиНоменклатуры", Объект.ГруппаДоставкиНоменклатуры);
	
КонецПроцедуры


&НаКлиенте
Процедура ТипРозничнойТочкиПриИзменении(Элемент)
	
	УстановитьОтборВДинамическомСписке("ТТ.ТипРозничнойТочки"		, Объект.ТипРозничнойТочки);
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаДоставкиНоменклатурыПриИзменении(Элемент)
	
	УстановитьОтборВДинамическомСписке("ГруппаДоставкиНоменклатуры"	, Объект.ГруппаДоставкиНоменклатуры);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	УстановитьОтборВДинамическомСписке("Контрагент", Объект.Контрагент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПеревозчикПриИзменении(Элемент)
	
	УстановитьОтборВДинамическомСписке("Перевозчик", Объект.Перевозчик);
	
КонецПроцедуры

&НаКлиенте
Процедура ТТПриИзменении(Элемент)
	
	УстановитьОтборВДинамическомСписке("ТТ"							, Объект.ТТ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьОтборВДинамическомСписке("Организация"				, Объект.Организация);
	
КонецПроцедуры


&НаКлиенте
Процедура УстановитьСтоимость(Команда)
	
	Если Объект.Ставка = 0 Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана ставка!");
		Возврат;
	КонецЕсли;
	
	//
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ДатаУстановки"				, Объект.ДатаУстановки);
	СтруктураПараметров.Вставить("ТипРозничнойТочки"			, Объект.ТипРозничнойТочки);
	СтруктураПараметров.Вставить("ГруппаДоставкиНоменклатуры"	, Объект.ГруппаДоставкиНоменклатуры);
	СтруктураПараметров.Вставить("Контрагент"					, Объект.Контрагент);
	СтруктураПараметров.Вставить("Перевозчик"					, Объект.Перевозчик);
	СтруктураПараметров.Вставить("ТТ"							, Объект.ТТ);
	СтруктураПараметров.Вставить("Организация"					, Объект.Организация);
	СтруктураПараметров.Вставить("Ставка"						, Объект.Ставка);
	
	УстановитьСтоимостьСервер(СтруктураПараметров);
	
	//
	Элементы.СтоимостьДоставки.Обновить();
	
КонецПроцедуры
