
#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриИзмененииПериода()
	
	ПредставлениеПериодаРегистрации = ПолучитьПредставлениеПериода(Объект.ПериодРегистрации, КонецМесяца(Объект.ПериодРегистрации));
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериодЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ПериодРегистрации = РезультатВыбора.НачалоПериода;
	
	ПриИзмененииПериода();
	
	ЗаполнитьДанныеОбОперацияхНаКлиенте();
	
КонецПроцедуры 

&НаСервере
Функция ПолучитьСписокПериодов(НачалоПериода)
	
	СписокПериодов = Новый СписокЗначений;
	Если НачалоПериода = '00010101' Тогда
		Возврат Новый СписокЗначений;
	Иначе
		ЗначениеНачалоПериода = НачалоПериода;
	КонецЕсли;
	
	
	ТекущийГод = Год(ЗначениеНачалоПериода);
	СписокПериодов.Добавить(Дата(ТекущийГод - 1, 1, 1), Формат(ТекущийГод - 1, "ЧГ=0") + "...");
	Для Сч = 1 По 12 Цикл
		СписокПериодов.Добавить(Дата(ТекущийГод, Сч, 1), Формат(Дата(ТекущийГод, Сч, 1), "ДФ='MMMM yyyy'"));
	КонецЦикла;
	СписокПериодов.Добавить(Дата(ТекущийГод + 1, 1, 1), Формат(ТекущийГод + 1, "ЧГ=0") + "...");
	
	Возврат СписокПериодов;
	
КонецФункции 

&НаСервере
Функция ПолучитьПредставлениеПериода(НачалоПериода, КонецПериода)
	
	СписокПериодов = Новый СписокЗначений;
	Если не НачалоПериода = '00010101' Тогда
		ТекущийГод = Год(НачалоПериода);
		СписокПериодов.Добавить(Дата(ТекущийГод - 1, 1, 1), Формат(ТекущийГод - 1, "ЧГ=0") + "...");
		Для Сч = 1 По 12 Цикл
			СписокПериодов.Добавить(Дата(ТекущийГод, Сч, 1), Формат(Дата(ТекущийГод, Сч, 1), "ДФ='MMMM yyyy'"));
		КонецЦикла;
		СписокПериодов.Добавить(Дата(ТекущийГод + 1, 1, 1), Формат(ТекущийГод + 1, "ЧГ=0") + "...");
	КонецЕсли;
	
	ЭлементСписка = СписокПериодов.НайтиПоЗначению(НачалоПериода);
	Если ЭлементСписка <> Неопределено тогда
		Возврат ЭлементСписка.Представление;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьОперацииЧекЛиста(ИсходноеДерево)
	
	Для Каждого Стр из ИсходноеДерево.Строки Цикл
		
		Если Стр.Строки.Количество() > 0 и Стр.ОперацияЧекЛиста = Стр.Строки[0].ОперацияЧекЛиста Тогда
			
			ПользователиСДоступом = Новый СписокЗначений;
			Для Каждого Подстрока из Стр.Строки Цикл
				Если ЗначениеЗаполнено(Подстрока.ПользовательСДоступом) Тогда 
				ПользователиСДоступом.Добавить(Подстрока.ПользовательСДоступом);
				КонецЕсли;
			КонецЦикла;
			Стр.ПользователиСДоступом = ПользователиСДоступом;
			Если (ПользователиСДоступом.НайтиПоЗначению(ТекПользователь) <> неопределено или РазрешеныЛюбыеОперации) Тогда 
				Стр.ДоступенТекущемуПользователю = Истина;
			КонецЕсли; 
			Стр.Строки.Очистить();
		Иначе
			Стр.Ответственный = Справочники.Пользователи.ПустаяСсылка();
			Стр.Исполнители = "";
			Стр.ДатаВыполнения = Дата(01,01,0001);
			Стр.ПлановаяДатаВыполнения = Дата(01,01,0001);
			Стр.СрокВыполнения = 0;
			Стр.ДоступенТекущемуПользователю = Ложь;
			ЗаполнитьОперацииЧекЛиста(Стр);
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьДанныеОбОперацияхНаСервере()
	
	ОтборПоОрганизации = Новый Структура;
	ОтборПоОрганизации.Вставить("Организация", Объект.Организация);
	НастройкаЧекЛиста = РегистрыСведений.СписокНастроекЧекЛиста.ПолучитьПоследнее(НачалоМесяца(Объект.ПериодРегистрации), ОтборПоОрганизации).Настройка;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписокНастроекЧекЛистаСрезПоследних.Настройка
	|ПОМЕСТИТЬ ВТ_АктуальнаяНастройка
	|ИЗ
	|	РегистрСведений.СписокНастроекЧекЛиста.СрезПоследних(&ДатаЗакрытия, Организация = &Организация) КАК СписокНастроекЧекЛистаСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиЧекЛистаОперацииЧекЛиста.ОперацияЧекЛиста,
	|	НастройкиЧекЛистаОперацииЧекЛиста.Ссылка КАК Настройка
	|ПОМЕСТИТЬ ВТ_ОперацииПоНастройке
	|ИЗ
	|	ВТ_АктуальнаяНастройка КАК ВТ_АктуальнаяНастройка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НастройкиЧекЛиста.ОперацииЧекЛиста КАК НастройкиЧекЛистаОперацииЧекЛиста
	|		ПО ВТ_АктуальнаяНастройка.Настройка = НастройкиЧекЛистаОперацииЧекЛиста.Ссылка
	|ГДЕ
	|	НастройкиЧекЛистаОперацииЧекЛиста.Использовать
	|
	|СГРУППИРОВАТЬ ПО
	|	НастройкиЧекЛистаОперацииЧекЛиста.Ссылка,
	|	НастройкиЧекЛистаОперацииЧекЛиста.ОперацияЧекЛиста
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОперацииПоНастройке.ОперацияЧекЛиста,
	|	ЕСТЬNULL(ОперацииЧекЛистаОтветственные.Ответственный, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК Ответственный
	|ПОМЕСТИТЬ ВТ_ОперацииИОтветственныеПоНастройке
	|ИЗ
	|	ВТ_ОперацииПоНастройке КАК ВТ_ОперацииПоНастройке
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОперацииЧекЛиста.Ответственные КАК ОперацииЧекЛистаОтветственные
	|		ПО ВТ_ОперацииПоНастройке.ОперацияЧекЛиста = ОперацииЧекЛистаОтветственные.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОперацииИОтветственныеПоНастройке.ОперацияЧекЛиста КАК ОперацияЧекЛиста,
	|	ЕСТЬNULL(СписокОперацийЧекЛистов.Выполнена, ЛОЖЬ) КАК Выполнена,
	|	ЕСТЬNULL(СписокОперацийЧекЛистов.Ответственный, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК Ответственный,
	|	ЕСТЬNULL(СписокОперацийЧекЛистов.ДатаВыполнения, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаВыполнения,
	|	ЕСТЬNULL(ВТ_ОперацииИОтветственныеПоНастройке.Ответственный, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК ПользовательСДоступом
	|ПОМЕСТИТЬ ВТ_ОперацииИОтветственныеПоНастройкеИЗакрытию
	|ИЗ
	|	ВТ_ОперацииИОтветственныеПоНастройке КАК ВТ_ОперацииИОтветственныеПоНастройке
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СписокОперацийЧекЛистов КАК СписокОперацийЧекЛистов
	|		ПО (СписокОперацийЧекЛистов.Операция = ВТ_ОперацииИОтветственныеПоНастройке.ОперацияЧекЛиста)
	|			И (СписокОперацийЧекЛистов.Месяц = &ДатаЗакрытия)
	|			И (СписокОперацийЧекЛистов.Организация = &Организация)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОперацииИОтветственныеПоНастройкеИЗакрытию.ОперацияЧекЛиста КАК ОперацияЧекЛиста,
	|	ВТ_ОперацииИОтветственныеПоНастройкеИЗакрытию.ПользовательСДоступом,
	|	ЕСТЬNULL(ВТ_ОперацииИОтветственныеПоНастройкеИЗакрытию.ОперацияЧекЛиста.СрокВыполнения, 0) КАК СрокВыполнения,
	|	ВТ_ОперацииИОтветственныеПоНастройкеИЗакрытию.Выполнена КАК Выполнена,
	|	ВТ_ОперацииИОтветственныеПоНастройкеИЗакрытию.Ответственный КАК Ответственный,
	|	ВТ_ОперацииИОтветственныеПоНастройкеИЗакрытию.ДатаВыполнения КАК ДатаВыполнения,
	|	ДОБАВИТЬКДАТЕ(КОНЕЦПЕРИОДА(&ДатаЗакрытия, МЕСЯЦ), ДЕНЬ, ЕСТЬNULL(ВТ_ОперацииИОтветственныеПоНастройкеИЗакрытию.ОперацияЧекЛиста.СрокВыполнения, 0)) КАК ПлановаяДатаВыполнения,
	|	ПОДСТРОКА(ВТ_ОперацииИОтветственныеПоНастройкеИЗакрытию.ОперацияЧекЛиста.ОтветственныеСтрокой, 0, 500) КАК Исполнители
	|ИЗ
	|	ВТ_ОперацииИОтветственныеПоНастройкеИЗакрытию КАК ВТ_ОперацииИОтветственныеПоНастройкеИЗакрытию
	|ИТОГИ
	|	МАКСИМУМ(СрокВыполнения),
	|	МИНИМУМ(Выполнена),
	|	МАКСИМУМ(Ответственный),
	|	МАКСИМУМ(ДатаВыполнения),
	|	МАКСИМУМ(ПлановаяДатаВыполнения),
	|	МАКСИМУМ(Исполнители)
	|ПО
	|	ОперацияЧекЛиста ИЕРАРХИЯ
	|АВТОУПОРЯДОЧИВАНИЕ";
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ДатаЗакрытия", НачалоМесяца(Объект.ПериодРегистрации));
			
	ДеревоОпераций = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ДеревоОпераций.Колонки.Добавить("ПользователиСДоступом", Новый ОписаниеТипов("СписокЗначений"));
	ДеревоОпераций.Колонки.Добавить("ДоступенТекущемуПользователю", Новый ОписаниеТипов("Булево"));
	ЗаполнитьОперацииЧекЛиста(ДеревоОпераций);
	ДеревоОпераций.Колонки.Удалить(ДеревоОпераций.Колонки.ПользовательСДоступом);
	
	ДеревоОперацийЧекЛиста = РеквизитФормыВЗначение("ОперацииЧекЛиста");
	ДеревоОперацийЧекЛиста.Строки.Очистить();
	ЗначениеВРеквизитФормы(ДеревоОпераций, "ОперацииЧекЛиста");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанныеОбОперацияхНаКлиенте()
	
	ЗаполнитьДанныеОбОперацияхНаСервере();
	
	ОбновитьСостояниеЗакрытия();
	
	РазвернутьВсеДерево(ОперацииЧекЛиста.ПолучитьЭлементы());
   		
КонецПроцедуры 

&НаСервере
Функция НайтиОтмеченноеЗначениеВДеревеЗначений(СтрокиДерева)
	
	Для каждого Строка из СтрокиДерева Цикл
		Если Строка.Выполнена = Ложь и Строка.Строки.Количество() = 0 Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Строка из СтрокиДерева Цикл
		
		НайденнаяСтрока = НайтиОтмеченноеЗначениеВДеревеЗначений(Строка.Строки);
		Если НайденнаяСтрока = Истина Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции 

&НаСервере
Функция ВсеОперацииВыполнены()
	
	ДеревоОперацииЧекЛиста = РеквизитФормыВЗначение("ОперацииЧекЛиста");
	ВсеОперацииВыполнены = не НайтиОтмеченноеЗначениеВДеревеЗначений(ДеревоОперацииЧекЛиста.Строки);
	Если ВсеОперацииВыполнены и ДеревоОперацииЧекЛиста.Строки.Количество() > 0 Тогда 
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
		
КонецФункции

&НаКлиенте
Процедура ОбновитьСостояниеЗакрытия()
	
	Если ВсеОперацииВыполнены() Тогда 
		Элементы.Статус.Заголовок = "Все операции выполнены"; 
	Иначе
		Элементы.Статус.Заголовок = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВсеДерево(КоллекцияЭлементов) 
    
    Для каждого ЭлементКоллекции Из КоллекцияЭлементов Цикл
        Элементы.ОперацииЧекЛиста.Развернуть(ЭлементКоллекции.ПолучитьИдентификатор());
        
        ВложенныеЭлементыКоллекции = ЭлементКоллекции.ПолучитьЭлементы();
        Если (ВложенныеЭлементыКоллекции.Количество() > 0) Тогда
            РазвернутьВсеДерево(ВложенныеЭлементыКоллекции);
        Иначе
            Продолжить;
        КонецЕсли;
    КонецЦикла;
    
КонецПроцедуры

&НаСервере
Процедура СохранитьИзменение(СтруктураДанных)
	
	НЗ = РегистрыСведений.СписокОперацийЧекЛистов.СоздатьНаборЗаписей();
	НЗ.Отбор.Месяц.Установить(НачалоМесяца(Объект.ПериодРегистрации));
	НЗ.Отбор.Организация.Установить(Объект.Организация);
	НЗ.Отбор.Операция.Установить(СтруктураДанных.ОперацияЧекЛиста);
	НЗ.Прочитать();
	
	Если НЗ.Количество() = 0 Тогда
		НовЗапись = НЗ.Добавить();
		НовЗапись.Месяц = НачалоМесяца(Объект.ПериодРегистрации);
		НовЗапись.Организация = Объект.Организация;
		НовЗапись.Операция = СтруктураДанных.ОперацияЧекЛиста;
		НовЗапись.Выполнена = СтруктураДанных.Выполнена;
		НовЗапись.Ответственный = СтруктураДанных.Ответственный;
		НовЗапись.ДатаВыполнения = СтруктураДанных.ДатаВыполнения;
		НовЗапись.ПлановаяДатаВыполнения = КонецМесяца(Объект.ПериодРегистрации) + 1 + СтруктураДанных.ОперацияЧекЛиста.СрокВыполнения * 86400;
	Иначе
		ТекЗапись = НЗ[0];
		ТекЗапись.Выполнена = СтруктураДанных.Выполнена;
		ТекЗапись.Ответственный = СтруктураДанных.Ответственный;
		ТекЗапись.ДатаВыполнения = СтруктураДанных.ДатаВыполнения;
	КонецЕсли;
	НЗ.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеРодителяВДереве(НазваниеРеквизитаДерева)
		
	ЭлементКоллекции = Элементы.ОперацииЧекЛиста.ТекущиеДанные;
	
	УстановкаФлажков(ЭлементКоллекции, ЭлементКоллекции[НазваниеРеквизитаДерева], НазваниеРеквизитаДерева);
	
	Родитель = ЭлементКоллекции.ПолучитьРодителя();
	Пока Родитель <> Неопределено Цикл
		Родитель[НазваниеРеквизитаДерева] = ?(УстановленноДляВсех(ЭлементКоллекции, НазваниеРеквизитаДерева),
		ЭлементКоллекции[НазваниеРеквизитаДерева], ?(НазваниеРеквизитаДерева = "Выполнена", Ложь, ""));
		ЭлементКоллекции = Родитель;
		Родитель = ЭлементКоллекции.ПолучитьРодителя();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановкаФлажков(ЭлементКоллекции, ЗначениеПометки, НазваниеРеквизитаДерева)
	
	ПодчинЭлементы = ЭлементКоллекции.ПолучитьЭлементы();
	Для Каждого ТекЭлемент Из ПодчинЭлементы Цикл
		ТекЭлемент[НазваниеРеквизитаДерева] = ЗначениеПометки;
		УстановкаФлажков(ТекЭлемент, ТекЭлемент[НазваниеРеквизитаДерева], НазваниеРеквизитаДерева);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция УстановленноДляВсех(ЭлементКоллекции, НазваниеРеквизитаДерева)
	
	СоседниеЭлементы = ЭлементКоллекции.ПолучитьРодителя().ПолучитьЭлементы();
	Для Каждого ТекЭлемент Из СоседниеЭлементы Цикл
		Если ТекЭлемент[НазваниеРеквизитаДерева] <> ЭлементКоллекции[НазваниеРеквизитаДерева] Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	Возврат Истина;
	
КонецФункции  

&НаСервере
Процедура ЗаполнитьРеквизитыПоУмолчанию()
	
	ТекПользователь = ПараметрыСеанса.ТекущийПользователь;
	РазрешеныЛюбыеОперации = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.РазрешеныЛюбыеОперацииСЧекЛистом, Ложь);
	
	Объект.ПериодРегистрации = НачалоМесяца(НачалоМесяца(ТекущаяДата()) - 1);
	
	НЗ = РегистрыСведений.НастройкиПользователей.СоздатьНаборЗаписей();
	НЗ.Отбор.Настройка.Установить(ПланыВидовХарактеристик.НастройкиПользователей.ОсновнаяОрганизация);
	НЗ.Отбор.Пользователь.Установить(ТекПользователь);
	НЗ.Прочитать();
	Если НЗ.Количество() > 0 Тогда 
		Объект.Организация = НЗ[0].Значение;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВидимостьЭлементовФормы()
	
	Если ПоказыватьСправку Тогда 
		Элементы.ПолеСправка.Видимость = Истина;
		Элементы.ДекорацияПоказатьСправку.Видимость = Ложь;
		Элементы.ДекорацияЗакрытьСправку.Видимость = Истина;
	Иначе
		Элементы.ПолеСправка.Видимость = Ложь;
		Элементы.ДекорацияПоказатьСправку.Видимость = Истина;
		Элементы.ДекорацияЗакрытьСправку.Видимость = Ложь;	
	КонецЕсли;
	
	Элементы.ФормаКоманднаяПанель.ПодчиненныеЭлементы.УдалитьВсеОтметкиЗаПериод.Видимость = РазрешеныЛюбыеОперации;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьРеквизитыПоУмолчанию();

КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПриИзмененииПериода();
	ЗаполнитьДанныеОбОперацияхНаКлиенте();
	
	ИзменитьВидимостьЭлементовФормы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УвеличитьПериод(Команда)
	
	Объект.ПериодРегистрации = ДобавитьМесяц(Объект.ПериодРегистрации, 1);
	
	ПриИзмененииПериода();
	ЗаполнитьДанныеОбОперацияхНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура УменьшитьПериод(Команда)
	
	Объект.ПериодРегистрации = ДобавитьМесяц(Объект.ПериодРегистрации,-1);
	ПриИзмененииПериода();
	ЗаполнитьДанныеОбОперацияхНаКлиенте();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДанныеОЗакрытииМесяца()
	
	НЗ = РегистрыСведений.СписокОперацийЧекЛистов.СоздатьНаборЗаписей();
	НЗ.Отбор.Месяц.Установить(НачалоМесяца(Объект.ПериодРегистрации));
	НЗ.Отбор.Организация.Установить(Объект.Организация);
	НЗ.Прочитать();
	НЗ.Очистить();
	НЗ.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВсеОтметкиЗаПериод(Команда)
	
	Ответ = Вопрос("Вы действительно хотите удалить все отметки о выполнении операций?", РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
 
	УдалитьДанныеОЗакрытииМесяца();
	
	ЗаполнитьДанныеОбОперацияхНаКлиенте();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПредставлениеПериодаРегистрацииПриИзменении(Элемент)
	
	ПредставлениеПериодаРегистрации = ПолучитьПредставлениеПериода(НачалоМесяца(Объект.ПериодРегистрации), КонецМесяца(Объект.ПериодРегистрации));
	
КонецПроцедуры 

&НаКлиенте
Процедура ПредставлениеПериодаРегистрацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыВыбора = Новый Структура("НачалоПериода, КонецПериода", НачалоМесяца(Объект.ПериодРегистрации), КонецМесяца(Объект.ПериодРегистрации));
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтаФорма);
	ОткрытьФорму("ОбщаяФорма.ВыборСтандартногоПериодаМесяц", ПараметрыВыбора, Элементы.ПредставлениеПериодаРегистрации, , , , ОписаниеОповещения);
	
КонецПроцедуры 

&НаКлиенте
Процедура ПредставлениеПериодаРегистрацииОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры 

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	ЗаполнитьДанныеОбОперацияхНаКлиенте();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОперацииЧекЛистаВыполненаПриИзменении(Элемент)
	
	ТекДанные = Элементы.ОперацииЧекЛиста.ТекущиеДанные;	
	ТекДанные.Ответственный = ТекПользователь;
	ТекДанные.ДатаВыполнения = ТекущаяДата();
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ОперацияЧекЛиста", ТекДанные.ОперацияЧекЛиста);
	СтруктураДанных.Вставить("Выполнена", ТекДанные.Выполнена);
	СтруктураДанных.Вставить("Ответственный", ТекДанные.Ответственный);
	СтруктураДанных.Вставить("ДатаВыполнения", ТекДанные.ДатаВыполнения);
	СохранитьИзменение(СтруктураДанных);
	
	ИзменениеРодителяВДереве("Выполнена");
		
	ОбновитьСостояниеЗакрытия();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОткрытьСписокОпераций(Команда)
	
	ОткрытьФорму("Справочник.ОперацииЧекЛиста.Форма.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокНастроек(Команда)
	
	ОткрытьФорму("Справочник.НастройкиЧекЛиста.Форма.ФормаСписка");
	
КонецПроцедуры 

&НаКлиенте
Процедура ОткрытьСписокОперацийПоЗакрытиюМесяца(Команда)
	
	ОткрытьФорму("РегистрСведений.СписокОперацийЧекЛистов.Форма.ФормаСписка");
	
КонецПроцедуры 

&НаКлиенте
Процедура ДекорацияЗакрытьСправкуНажатие(Элемент)
	
	ПоказыватьСправку = Ложь;
	ИзменитьВидимостьЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПоказатьСправкуНажатие(Элемент)
	
	ПоказыватьСправку = Истина;
	ИзменитьВидимостьЭлементовФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ОперацииЧекЛистаПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.ОперацииЧекЛиста.ТекущиеДанные;
	Если ТекДанные<> неопределено Тогда
		ТекОперация = ТекДанные.ОперацияЧекЛиста;
		СправкаОбОперации = ТекОперация.ПолноеОписание;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
