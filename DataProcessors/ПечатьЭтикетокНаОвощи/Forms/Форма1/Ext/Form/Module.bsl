
Процедура НоменклатураПриИзменении(ТекИдентификатор)
	
	ТекДанные = ТаблицаТоваров.НайтиПоИдентификатору(ТекИдентификатор);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Владелец", ТекДанные.Номенклатура);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХарактеристикиНоменклатуры.Ссылка
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец = &Владелец
	|	И НЕ ХарактеристикиНоменклатуры.Неактивная";
				   
	ТабХарактеристики = Запрос.Выполнить().Выгрузить();
	
	Если ТабХарактеристики.Количество() = 1 Тогда
		ТекДанные.Характеристика = ТабХарактеристики[0].Ссылка;
	Иначе
		ТекДанные.Характеристика = Неопределено;
	КонецЕсли;
	ТекДанные.ДатаПроизводства 	= '00010101';
	ТекДанные.Складируемая 		= ТекДанные.Номенклатура.Складируемая;
	
	ХарактеристикаПриИзменении(ТекИдентификатор);
	
КонецПроцедуры

Процедура ХарактеристикаПриИзменении(ТекИдентификатор)
	//
	//ТекДанные = ТаблицаТоваров.НайтиПоИдентификатору(ТекИдентификатор);
	//Запрос = Новый Запрос();
	//Запрос.УстановитьПараметр("Объект", ТекДанные.Характеристика);
	//Запрос.Текст = "ВЫБРАТЬ
	//			   |	ЗначенияСвойствОбъектов.Значение
	//			   |ИЗ
	//			   |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	//			   |ГДЕ
	//			   |	ЗначенияСвойствОбъектов.Объект = &Объект
	//			   |	И ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.свойстваОбъектов.КоличествоВУпаковке)";
	//			   
	//Выборка = Запрос.Выполнить().Выбрать();
	//
	//Если Выборка.Следующий() Тогда
	//	ТекДанные.КоличествоВУпаковке = Выборка.Значение;
	//Иначе
	//	ТекДанные.КоличествоВУпаковке = 0;
	//КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТоваровНоменклатураПриИзменении(Элемент)
	
	НоменклатураПриИзменении(Элементы.ТаблицаТоваров.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТоваровХарактеристикаПриИзменении(Элемент)
	
	ХарактеристикаПриИзменении(Элементы.ТаблицаТоваров.ТекущаяСтрока);
	
КонецПроцедуры

Процедура СформироватьЭтикеткиНаСервере()
	
	Этикетки.Очистить();
	ТаблицаМакетовЭтикеток.Очистить();
	
	//ВнешняяКомпонента = Справочники.Номенклатура.ПодключитьВнешнююКомпонентуПечатиШтрихкода();
	Макет = Обработки.ПечатьЭтикетокНаОвощи.ПолучитьМакет("Этикетка");
	
	ТабДок = Новый ТабличныйДокумент;
	
	//Область = Макет.ПолучитьОбласть("Этикетка");
	//ОбластьСтр = Макет.ПолучитьОбласть("Строка");
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТЗ", Объект.Товары1.Выгрузить());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТЗ.Номенклатура,
	|	ТЗ.Характеристика,
	|	ТЗ.ДатаПоставки
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	&ТЗ КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт.Номенклатура,
	|	вт.Характеристика,
	|	МАКСИМУМ(ЭтикеткиНаОвощи.Период) КАК Период
	|ПОМЕСТИТЬ втТовары
	|ИЗ
	|	вт КАК вт
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭтикеткиНаОвощи КАК ЭтикеткиНаОвощи
	|		ПО вт.Номенклатура = ЭтикеткиНаОвощи.Номенклатура
	|			И вт.Характеристика = ЭтикеткиНаОвощи.Характеристика
	|			И вт.ДатаПоставки >= ЭтикеткиНаОвощи.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	вт.Номенклатура,
	|	вт.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТовары.Номенклатура,
	|	втТовары.Характеристика,
	|	ЭтикеткиНаОвощи.СтранаПроисхождения,
	|	ЭтикеткиНаОвощи.Производитель,
	|	ЭтикеткиНаОвощи.Поставщик,
	|	ЭтикеткиНаОвощи.АдресИзготовителя,
	|	ЭтикеткиНаОвощи.ДатаСбора,
	|	ЭтикеткиНаОвощи.СрокГодности,
	|	ЭтикеткиНаОвощи.УсловияХранения
	|ИЗ
	|	втТовары КАК втТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭтикеткиНаОвощи КАК ЭтикеткиНаОвощи
	|		ПО втТовары.Номенклатура = ЭтикеткиНаОвощи.Номенклатура
	|			И втТовары.Характеристика = ЭтикеткиНаОвощи.Характеристика
	|			И втТовары.Период = ЭтикеткиНаОвощи.Период";
	ТабКеш = Запрос.Выполнить().Выгрузить();
	Для Каждого Выб Из Объект.Товары1 Цикл
		
		//Если ТабДок.ВысотаТаблицы > 0 Тогда
		//	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		//КонецЕсли;	
		
		СтрокиКеш = ТабКеш.НайтиСтроки(Новый Структура("Номенклатура, Характеристика", Выб.Номенклатура, Выб.Характеристика));
		Если СтрокиКеш.Количество() = 0 Тогда
			//Сообщить("Для сочетания " + Выб.Номенклатура + " " + Выб.Характеристика + " не присвоен Id по нумератору");
			Продолжить;
		КонецЕсли;
		
		Область = Макет.ПолучитьОбласть("Этикетка");
		ЗаполнитьЗначенияСвойств(Область.Параметры,СтрокиКеш[0]);
	

		Для н = 1 По Выб.КоличествоКопий Цикл
			ТабДок.Вывести(Область);
			ТабДокИтог = Новый ТабличныйДокумент();
			ТабДокИтог.ПолеСверху = 0;
			ТабДокИтог.ПолеСнизу = 0;
			ТабДокИтог.ПолеСлева = 0;
			ТабДокИтог.ПолеСправа = 0;
			ТабДокИтог.ШиринаСтраницы = 98;
			ТабДокИтог.ВысотаСтраницы = 78;
			ТабДокИтог.Вывести(ТабДок);
			СтрокаДоб = ТаблицаМакетовЭтикеток.Добавить();
			СтрокаДоб.ТабДокСтрокой = ЗначениеВСтрокуВнутр(ТабДокИтог);
		КонецЦикла;
	КонецЦикла;	
	
	Этикетки.Вывести(ТабДок);
	Этикетки.КлючПараметровПечати = "ПараметрыПечати_ПечатьЭтикетокНаОвощи";
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьЭтикетки(Команда)
	
	СформироватьЭтикеткиНаСервере();
	Элементы.Группа1.ТекущаяСтраница = Элементы.Группа3;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВPDF(Команда)
	
	ДиалогСохранения = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогСохранения.Фильтр = "PDF|*.pdf";
	Если ДиалогСохранения.Выбрать() Тогда
		Этикетки.Записать(ДиалогСохранения.ПолноеИмяФайла, ТипФайлаТабличногоДокумента.PDF);
	КонецЕсли;	
	
КонецПроцедуры

Функция ПолучитьТабДокИзСтроки(ТабДокСтрокой)
	
	Возврат ЗначениеИзСтрокиВнутр(ТабДокСтрокой);
	
КонецФункции	

&НаКлиенте
Процедура Печать(Команда)
	
	Этикетки.ПолеСверху = 0;
	Этикетки.ПолеСнизу = 0;
	Этикетки.ПолеСлева = 0;
	Этикетки.ПолеСправа = 0;
	Этикетки.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	
	//Для Каждого СтрокаТаб Из ТаблицаМакетовЭтикеток Цикл
	//	ТабДок = ПолучитьТабДокИзСтроки(СтрокаТаб.ТабДокСтрокой);
	//	Если ЗначениеЗаполнено(ПринтерДляПечати) Тогда
	//		ТабДок.ИмяПринтера = ПринтерДляПечати;
	//	КонецЕсли;	
	//	ТабДок.Напечатать(РежимИспользованияДиалогаПечати.НеИспользовать);
	//КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруДляФормирования()
	
	МассивВозврат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Характеристики", ТаблицаТоваров.Выгрузить().ВыгрузитьКолонку("Характеристика"));
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХарактеристикиНоменклатуры.Ссылка,
	|	ХарактеристикиНоменклатуры.Владелец.НаименованиеПолное КАК Товар,
	|	ХарактеристикиНоменклатуры.Владелец КАК ТоварСсылка,
	|	ЗначенияСвойствОбъектов.Значение КАК Производитель,
	|	ЕСТЬNULL(ВложенныйЗапрос.Количество, ЕСТЬNULL(ЗначенияСвойствОбъектовКв.Значение, 0)) КАК КолвоВКоробке,
	|	НумераторШтрихКодовКоробок.Нумератор,
	|	ХарактеристикиНоменклатуры.Владелец.Весовой КАК Весовой,
	|	ЕСТЬNULL(ВложенныйЗапрос2.Сотрудник, ВложенныйЗапрос1.Сотрудник) КАК Сотрудник
	|ИЗ
	|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов.Объект
	|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектовКв
	|		ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектовКв.Объект
	|			И (ЗначенияСвойствОбъектовКв.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке))
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			КоличествоВКоробкеСрезПоследних.Номенклатура КАК Номенклатура,
	|			КоличествоВКоробкеСрезПоследних.Характеристика КАК Характеристика,
	|			МАКСИМУМ(КоличествоВКоробкеСрезПоследних.Количество) КАК Количество
	|		ИЗ
	|			РегистрСведений.КоличествоВКоробке.СрезПоследних КАК КоличествоВКоробкеСрезПоследних
	|		
	|		СГРУППИРОВАТЬ ПО
	|			КоличествоВКоробкеСрезПоследних.Номенклатура,
	|			КоличествоВКоробкеСрезПоследних.Характеристика) КАК ВложенныйЗапрос
	|		ПО ХарактеристикиНоменклатуры.Ссылка = ВложенныйЗапрос.Характеристика
	|			И ХарактеристикиНоменклатуры.Владелец = ВложенныйЗапрос.Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НумераторШтрихКодовКоробок КАК НумераторШтрихКодовКоробок
	|		ПО ХарактеристикиНоменклатуры.Ссылка = НумераторШтрихКодовКоробок.Характеристика
	|			И ХарактеристикиНоменклатуры.Владелец = НумераторШтрихКодовКоробок.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СоответствиеОбъектРольСрезПоследних.Объект КАК Объект,
	|			МАКСИМУМ(РолиПользователейСоставРоли.Сотрудник) КАК Сотрудник
	|		ИЗ
	|			РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)) КАК СоответствиеОбъектРольСрезПоследних
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|				ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = РолиПользователейСоставРоли.Ссылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СоответствиеОбъектРольСрезПоследних.Объект) КАК ВложенныйЗапрос1
	|		ПО (ЗначенияСвойствОбъектов.Значение = ВложенныйЗапрос1.Объект)
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			СоответствиеОбъектРольСрезПоследних.Объект КАК Объект,
	|			МАКСИМУМ(РолиПользователейСоставРоли.Сотрудник) КАК Сотрудник
	|		ИЗ
	|			РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству)) КАК СоответствиеОбъектРольСрезПоследних
	|				ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|				ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = РолиПользователейСоставРоли.Ссылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СоответствиеОбъектРольСрезПоследних.Объект) КАК ВложенныйЗапрос2
	|		ПО ХарактеристикиНоменклатуры.Ссылка = ВложенныйЗапрос2.Объект
	|ГДЕ
	|	ХарактеристикиНоменклатуры.Владелец.Выведена = ЛОЖЬ
	|	И ХарактеристикиНоменклатуры.Неактивная = ЛОЖЬ
	|	И ХарактеристикиНоменклатуры.Ссылка В
	|			(ВЫБРАТЬ
	|				ШтриховыеКоды.Характеристика
	|			ИЗ
	|				РегистрСведений.ШтриховыеКоды КАК ШтриховыеКоды)
	|	" + ?(ТаблицаТоваров.Количество() > 0, "И ХарактеристикиНоменклатуры.Ссылка В (&Характеристики)", "") + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	Производитель";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Сотрудник") Цикл
		Стрдн = Выборка.Сотрудник;
		Если НЕ ЗначениеЗаполнено(Стрдн) Тогда
			Стрдн = "Сотрудник не определен";
		Иначе
			Стрдн = СокрЛП(Стрдн);
			Стрдн = СтрЗаменить(Стрдн, ".", "_");
			Стрдн = СтрЗаменить(Стрдн, "/", "_");
			Стрдн = СтрЗаменить(Стрдн, "\", "_");
			Стрдн = СтрЗаменить(Стрдн, """", "");
		КонецЕсли;
		Пока Выборка.СледующийПоЗначениюПоля("Производитель") Цикл
			Прзв = СокрЛП(Выборка.Производитель);
			Прзв = СтрЗаменить(Прзв, " ", "_");
			Прзв = СтрЗаменить(Прзв, ".", "_");
			Прзв = СтрЗаменить(Прзв, "/", "_");
			Прзв = СтрЗаменить(Прзв, "\", "_");
			Прзв = СтрЗаменить(Прзв, """", "");
			Пока Выборка.Следующий() Цикл
				СтруктураПоТовару = Новый Структура();
				СтруктураПоТовару.Вставить("Производитель", Прзв);
				СтруктураПоТовару.Вставить("Сотрудник", Стрдн);
				
				Товар = Строка(Выборка.Товар);
				Товар = СтрЗаменить(Товар, ".", "_");
				Товар = СтрЗаменить(Товар, " ", "_");
				Товар = СтрЗаменить(Товар, ",", "_");
				Товар = СтрЗаменить(Товар, "%", "_");
				Товар = СтрЗаменить(Товар, "/", "_");
				Товар = СтрЗаменить(Товар, "\", "_");
				Товар = СтрЗаменить(Товар, """", "");
				
				РазделениеТовара = СтрЗаменить(Выборка.Товар, " ", Символы.ПС);
				ЗаголовокТовар = ВРег(СтрПолучитьСтроку(РазделениеТовара, 1));
				ОстальнойТекст = "";
				ТекстТовар1 = "";
				ТекстТовар2 = "";
				Для н = 2 По СтрЧислоСтрок(РазделениеТовара) Цикл
					ОстальнойТекст = ОстальнойТекст + ?(ЗначениеЗаполнено(ОстальнойТекст), " ", "") + СтрПолучитьСтроку(РазделениеТовара, н);
				КонецЦикла;
				ТекстТовар1 = Сред(ОстальнойТекст, 1, 27);
				ТекстТовар2 = Сред(ОстальнойТекст, 28, 27);
				
				СтруктураПоТовару.Вставить("Товар", Товар);
				
				ТекстДокумент = Новый ТекстовыйДокумент();
				ТекстДокумент.ДобавитьСтроку("set WshShell = CreateObject(""Wscript.Shell"")
				|set fso = CreateObject(""Scripting.FileSystemObject"")
				|
				|prn = ""BCPrint""	'Сетевое имя принтера
				|Set objWMIService = GetObject (""winmgmts:\\.\root\CIMV2"")
				|Set colItems = objWMIService.ExecQuery (""SELECT * FROM Win32_Printer WHERE ShareName = '""+prn+""'"")
				|For Each objItem In colItems
				|	PrinterFound = true
				|Next
				|
				|if NOT PrinterFound Then
				|	WScript.Echo ""Принтер этикеток с сетевым именем ""+prn+ "" не найден или не верно настроен.""
				|	WScript.quit()
				|End If
				|
				|d0 = 1	'Количество дней к текущей дате по умолчанию
				|curdate = Left(DateAdd(""d"",d0,Date()),5)
				|
				|d = InputBox(""Введите дату производства в формате (ММ.ДД):"", ""Дата производства"", Right(curdate,2)+"".""+Left(curdate,2))
				|If IsEmpty(d) Then  WScript.quit()
				|
				|q0 = " + Формат(Цел(Выборка.КолвоВКоробке), "ЧГ=0") + " 'Количество в коробке по умолчанию
				|q = InputBox(""Введите количество в коробке (шт):"", ""Количество в коробке"", q0) 
				|If IsEmpty(q) Then  WScript.quit()
				|n0 = 1 'Количество этикеток по умолчанию
				|n = InputBox(""Введите количество этикеток:"",""Количество этикеток"",n0)
				|If IsEmpty(n) Then  WScript.quit()
				|
				|d = LTrim(RTrim(d))
				|q = LTrim(RTrim(q))
				|n = LTrim(RTrim(n))
				|q0 = q
				|q = left(""000000"",6-len(q" + ?(Выборка.Весовой, "*1000", "") + "))+LTrim(q" + ?(Выборка.Весовой, "*1000", "") + ")
				|
				|set file = fso.CreateTextFile(WshShell.CurrentDirectory+""\" + Товар + ".epl2"")
				|file.WriteLine(""I8,C,001"")
				|file.WriteLine(""OD"")
				|file.WriteLine(""N"")
				|file.WriteLine(""D10"")
				|file.WriteLine(""S5"")
				|file.WriteLine(""B50,300,0,1,3,5,80,B," + Символ(34) + Символ(34) + Формат(Выборка.Нумератор, "ЧГ=0") + """+q+Left(d,2)+Right(d,2)+" + Символ(34) + Символ(34) + Символ(34) + Символ(34) + ")
				|file.WriteLine(""A1,50,0,4,2,1,N," + Символ(34) + Символ(34) + ЗаголовокТовар + Символ(34) + Символ(34) + Символ(34) + ")  			'13 символов
				|file.WriteLine(""A1,75,0,4,1,1,N," + Символ(34) + Символ(34) + ТекстТовар1 + Символ(34) + Символ(34) + Символ(34) + ")	'27 символов
				|file.WriteLine(""A1,100,0,4,1,1,N," + Символ(34) + Символ(34) + ТекстТовар2 + Символ(34) + Символ(34) + Символ(34) + ") 			'27 символов
				|file.WriteLine(""A1,200,0,4,1,1,N," + Символ(34) + Символ(34) + Сред(Выборка.Производитель, 1, 27) + Символ(34) + Символ(34) + Символ(34) + ")
				|file.WriteLine(""A1,225,0,4,1,1,N," + Символ(34) + Символ(34) + "Дата производства ""+Left(d,2)+"".""+Right(d,2)+" + Символ(34) + Символ(34) + Символ(34) + Символ(34) + ")
				|file.WriteLine(""A1,250,0,4,1,1,N," + Символ(34) + Символ(34) + "Кол-во в кор. ""+q0+" + Символ(34) + Символ(34) + Символ(34) + Символ(34) + ")
				|file.WriteLine(""P""+n)
				|file.Close()
				|fso.MoveFile WshShell.CurrentDirectory+""\" + Товар + ".epl2"", ""\\127.0.0.1\""+prn");
				
				СтруктураПоТовару.Вставить("ТекстДокумент", ТекстДокумент);
				МассивВозврат.Добавить(СтруктураПоТовару);
			КонецЦикла;						
		КонецЦикла;
	КонецЦикла;	
	
	Возврат МассивВозврат;
	
КонецФункции	

&НаКлиенте
Процедура СформироватьСкрипты(Команда)
	
	ДиалогСохранения = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Если ДиалогСохранения.Выбрать() Тогда
		КаталогСохранения = ДиалогСохранения.Каталог;
		Если Прав(КаталогСохранения, 1) <> "\" Тогда
			КаталогСохранения = КаталогСохранения + "\";
		КонецЕсли;	
		МассивСкрипты = ПолучитьСтруктуруДляФормирования();
		Для Каждого ЭлементСкрипт Из МассивСкрипты Цикл
			Подкаталог = КаталогСохранения + ЭлементСкрипт.Сотрудник + "\" + ЭлементСкрипт.Производитель;
			СоздатьКаталог(Подкаталог);
			ЭлементСкрипт.ТекстДокумент.Записать(Подкаталог + "\" + ЭлементСкрипт.Товар + ".vbs", КодировкаТекста.ANSI);
		КонецЦикла;	
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаТоваровПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элементы.ТаблицаТоваров.ТекущиеДанные.КоличествоКопий = 1;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если СформирвоатьПриОткрытии Тогда
		СформироватьЭтикетки(Неопределено);
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СформирвоатьПриОткрытии = Параметры.СформирвоатьПриОткрытии;
	
КонецПроцедуры

&НаКлиенте
Процедура ПринтерДляПечатиНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элемент.СписокВыбора.Очистить(); // список значений 
	принтеры = Новый COMОбъект("WScript.Network"); 
	prn = принтеры.EnumPrinterConnections(); 
	i = 0; 
	Пока i < prn.Count()-1 Цикл 
	    Элемент.СписокВыбора.Добавить(prn.Item(i+1)); 
	    i = i + 2; 
	КонецЦикла; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиШтрихКод(Команда)
	
	ШтрихКод = ОткрытьФормуМодально("ОбщаяФорма.ФормаВводаШтрихкода");
	Если ЗначениеЗаполнено(ШтрихКод) Тогда
		СтруктураДанных = ВнешниеДанные.СчитатьДанныеПоШтрихКоду(ШтрихКод);
		Если ТипЗнч(СтруктураДанных) = Тип("Структура") Тогда
			Для Каждого Элемент Из СтруктураДанных Цикл
				Сообщить(Строка(Элемент.Ключ) + ": " + Строка(Элемент.Значение));
			КонецЦикла;	
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Элементы.Товары.ТекущиеДанные.КоличествоКопий = 1;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	Элементы.Товары.ТекущиеДанные.ДатаПоставки=ТекущаяДата();
	Элементы.Товары.ТекущиеДанные.Характеристика= ПолучитьХарактеристику(Элементы.Товары.ТекущиеДанные.Номенклатура);
КонецПроцедуры

&НаСервере
Функция ПолучитьХарактеристику(Номенклатура)

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходныйОрдерСкладТовары.Ссылка,
		|	РасходныйОрдерСкладТовары.Ссылка.Дата КАК Дата,
		|	РасходныйОрдерСкладТовары.Характеристика
		|ИЗ
		|	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		|ГДЕ
		|	РасходныйОрдерСкладТовары.Номенклатура = &Номенклатура
		|	И РасходныйОрдерСкладТовары.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
		|	И РасходныйОрдерСкладТовары.Ссылка.Получатель = &Получатель
		|	И РасходныйОрдерСкладТовары.Ссылка.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";

	Запрос.УстановитьПараметр("Дата1", ТекущаяДата()-30*24*60*60);
	Запрос.УстановитьПараметр("Дата2", КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Получатель", ПараметрыСеанса.ТорговаяТочкаПоАйпи);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Характеристика;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции
 
