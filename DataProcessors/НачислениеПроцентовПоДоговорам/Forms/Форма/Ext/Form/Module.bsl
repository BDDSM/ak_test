
&НаСервере
Процедура ЗаполнитьНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка КАК Договор,
		|	ВЫБОР
		|		КОГДА ДОБАВИТЬКДАТЕ(ДоговорыКонтрагентов.Дата, ДЕНЬ, 1) > &ДатаНачала
		|			ТОГДА ДОБАВИТЬКДАТЕ(ДоговорыКонтрагентов.Дата, ДЕНЬ, 1)
		|		ИНАЧЕ &ДатаНачала
		|	КОНЕЦ КАК ДатаНачала,
		|	ВЫБОР
		|		КОГДА ДоговорыКонтрагентов.СрокДействия < &ДатаОкончания
		|			ТОГДА ДоговорыКонтрагентов.СрокДействия
		|		ИНАЧЕ &ДатаОкончания
		|	КОНЕЦ КАК ДатаОкончания,
		|	ДоговорыКонтрагентов.СуммаДоговора,
		|	ДоговорыКонтрагентов.ПроцентнаяСтавка КАК Ставка,
		|	ДоговорыКонтрагентов.Владелец,
		|	ДоговорыКонтрагентов.Организация
		|ПОМЕСТИТЬ втДоговорыКНачислению
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДОБАВИТЬКДАТЕ(ДоговорыКонтрагентов.Дата, ДЕНЬ, 1) <= &ДатаОкончания
		|	И ДоговорыКонтрагентов.СрокДействия >= &ДатаНачала
		|	И ДоговорыКонтрагентов.ТипДоговораФинансы = &ТипДоговора
		|	И ДоговорыКонтрагентов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.Финансовый)
		|	И ДоговорыКонтрагентов.ПометкаУдаления <> ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втДоговорыКНачислению.Договор,
		|	втДоговорыКНачислению.ДатаНачала,
		|	втДоговорыКНачислению.ДатаОкончания,
		|	втДоговорыКНачислению.СуммаДоговора,
		|	втДоговорыКНачислению.Ставка,
		|	РАЗНОСТЬДАТ(втДоговорыКНачислению.ДатаНачала, втДоговорыКНачислению.ДатаОкончания, ДЕНЬ) + 1 КАК Дней,
		|	&ДнейВГоду,
		|	втДоговорыКНачислению.Владелец КАК Контрагент,
		|	втДоговорыКНачислению.Организация
		|ПОМЕСТИТЬ втДоговорыСПараметрамиРасчета
		|ИЗ
		|	втДоговорыКНачислению КАК втДоговорыКНачислению
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втДоговорыСПараметрамиРасчета.Договор,
		|	втДоговорыСПараметрамиРасчета.ДатаНачала,
		|	втДоговорыСПараметрамиРасчета.ДатаОкончания,
		|	втДоговорыСПараметрамиРасчета.СуммаДоговора,
		|	втДоговорыСПараметрамиРасчета.Ставка,
		|	втДоговорыСПараметрамиРасчета.Дней,
		|	втДоговорыСПараметрамиРасчета.ДнейВГоду,
		|	ВЫБОР
		|		КОГДА втДоговорыСПараметрамиРасчета.Дней > 0
		|			ТОГДА втДоговорыСПараметрамиРасчета.Ставка * втДоговорыСПараметрамиРасчета.Дней * втДоговорыСПараметрамиРасчета.СуммаДоговора / (втДоговорыСПараметрамиРасчета.ДнейВГоду * 100)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Сумма,
		|	втДоговорыСПараметрамиРасчета.Контрагент,
		|	втДоговорыСПараметрамиРасчета.Организация
		|ПОМЕСТИТЬ втНачисления
		|ИЗ
		|	втДоговорыСПараметрамиРасчета КАК втДоговорыСПараметрамиРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФинансовыйОбороты.Субконто1 КАК Контрагент,
		|	ФинансовыйОбороты.Субконто2 КАК Договор,
		|	ФинансовыйОбороты.Организация,
		|	СУММА(ФинансовыйОбороты.СуммаОборотДт) КАК Начислено,
		|	МАКСИМУМ(ФинансовыйОбороты.Регистратор) КАК Документ
		|ПОМЕСТИТЬ втНачисленные
		|ИЗ
		|	РегистрБухгалтерии.Финансовый.Обороты(
		|			&ДатаНачала,
		|			&ДатаОкончания,
		|			Регистратор,
		|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ПрочиеЗаймыВыданные),
		|			,
		|			Субконто2 В
		|				(ВЫБРАТЬ
		|					втДоговорыКНачислению.Договор
		|				ИЗ
		|					втДоговорыКНачислению),
		|			КорСчет = &КорСчетНастройка,
		|			) КАК ФинансовыйОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ФинансовыйОбороты.Субконто2,
		|	ФинансовыйОбороты.Организация,
		|	ФинансовыйОбороты.Субконто1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втНачисления.Договор КАК Договор,
		|	втНачисления.ДатаНачала,
		|	втНачисления.ДатаОкончания,
		|	втНачисления.СуммаДоговора,
		|	втНачисления.Ставка,
		|	втНачисления.Дней,
		|	втНачисления.ДнейВГоду,
		|	втНачисления.Сумма КАК Сумма,
		|	втНачисленные.Начислено КАК СуммаНачислено,
		|	втНачисленные.Документ КАК Документ,
		|	втНачисления.Контрагент КАК Контрагент,
		|	втНачисления.Организация КАК Организация,
		|	ЕСТЬNULL(втНачисления.Сумма, 0) - ЕСТЬNULL(втНачисленные.Начислено, 0) КАК КНачислению,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(втНачисления.Сумма, 0) > ЕСТЬNULL(втНачисленные.Начислено, 0)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Флаг
		|ИЗ
		|	втНачисления КАК втНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ втНачисленные КАК втНачисленные
		|		ПО втНачисления.Договор = втНачисленные.Договор
		|			И втНачисления.Контрагент = втНачисленные.Контрагент
		|			И втНачисления.Организация = втНачисленные.Организация
		|
		|УПОРЯДОЧИТЬ ПО
		|	Организация,
		|	Контрагент,
		|	Договор,
		|	Документ";
	
	Запрос.УстановитьПараметр("ДатаНачала", Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Период.ДатаОкончания);
	Запрос.УстановитьПараметр("ТипДоговора", Объект.ТипДоговора);
	
	ДнейВГоду = (КонецГода(Период.ДатаОкончания)+1-НачалоГода(Период.ДатаНачала))/(24*3600);
	Запрос.УстановитьПараметр("ДнейВГоду", ДнейВГоду);
	
	КорСчетНастройка = ПолучитьКорСчет(Объект.ТипДоговора,Период.ДатаОкончания);
	
	Запрос.УстановитьПараметр("КорСчетНастройка", КорСчетНастройка);	
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Начисления.Загрузить(РезультатЗапроса);
	ОбновитьСуммыИтого();
	
КонецПроцедуры

Функция ПолучитьКорСчет(ТипДоговора,Дата)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкаОтраженияОперацийВУчетеСрезПоследних.Счет
		|ИЗ
		|	РегистрСведений.НастройкаОтраженияОперацийВУчете.СрезПоследних(&ДатаОкончания, ВидОперации = &ВидОперации) КАК НастройкаОтраженияОперацийВУчетеСрезПоследних";
	
	
	Если ТипДоговора = Перечисления.ТипыДоговоровФинансы.Депозит Тогда
		ВидОперации = Перечисления.ВидыОперацийВУчете.НачислениеПроцентовПоДепозитам;
	ИначеЕсли ТипДоговора = Перечисления.ТипыДоговоровФинансы.Займ Тогда	
		ВидОперации = Перечисления.ВидыОперацийВУчете.НачислениеПроцентовПоЗаймам;
	КонецЕсли;	
		
	Запрос.УстановитьПараметр("ВидОперации", ВидОперации);
	Запрос.УстановитьПараметр("ДатаОкончания", Дата);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Счет;
	КонецЦикла;
	
	Сообщить("Не заполнена настройка начисления");
	Возврат Неопределено;

КонецФункции
	
	
&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Период.ДатаНачала = НачалоМесяца(НачалоМесяца(ТекущаяДата()-2));
	Период.ДатаОкончания = КонецМесяца(НачалоМесяца(ТекущаяДата()-2));
	Объект.ТипДоговора =  Перечисления.ТипыДоговоровФинансы.Депозит;
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументыНаСервере()
	
	Отбор = Новый Структура;
	Отбор.Вставить("Флаг",Истина);
	
	ТаблицаКначислению = Начисления.Выгрузить().Скопировать(Отбор);		
	
	ТаблицаОрганизацииКонтрагенты = ТаблицаКначислению.Скопировать(,"Организация,Контрагент");
	ТаблицаОрганизацииКонтрагенты.Свернуть("Организация,Контрагент");
	
	Для каждого Строка из ТаблицаОрганизацииКонтрагенты Цикл
		
		Отбор = Новый Структура;
		Отбор.Вставить("Организация",Строка.Организация);
		Отбор.Вставить("Контрагент",Строка.Контрагент);
		
		СтрокиОтбор = ТаблицаКначислению.НайтиСтроки(Отбор);
		
		НовыйДокумент = Документы.НачислениеПроцентовПоДоговорам.СоздатьДокумент();
		ЗаполнитьЗначенияСвойств(НовыйДокумент,Отбор);
		ЗаполнитьЗначенияСвойств(НовыйДокумент,Период);
		НовыйДокумент.ТипДоговора = Объект.ТипДоговора;
		Записывать = Ложь;
		Для каждого ДоговорКНачислению из СтрокиОтбор Цикл
			НоваяСтрока = НовыйДокумент.Начисления.Добавить();		
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ДоговорКНачислению);
			Если ДоговорКНачислению.КНачислению > 0 Тогда
				Записывать = истина;
			КонецЕсли;	
		КонецЦикла;
		НовыйДокумент.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		НовыйДокумент.Дата = КонецДня(Период.ДатаОкончания);
		Если Записывать Тогда
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
	КонецЦикла;	
	ЗаполнитьНаСервере();	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументы(Команда)
	СоздатьДокументыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура НачисленияПриИзменении(Элемент)
	ОбновитьСуммыИтого();
КонецПроцедуры


Процедура ОбновитьСуммыИтого()

	ИтогоКНачислению 	 = Начисления.Итог("КНачислению");
	ИтогоСумма			 = Начисления.Итог("Сумма");
	ИтогоСуммаДоговора   = Начисления.Итог("СуммаДоговора");
	ИтогоСуммаНачислено  = Начисления.Итог("СуммаНачислено");
	
КонецПроцедуры	

&НаКлиенте
Процедура НачисленияДокументОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекущаяСтрока = Элементы.Начисления.ТекущиеДанные;
	ОткрытьЗначение(ТекущаяСтрока.Документ);	
КонецПроцедуры

&НаКлиенте
Процедура НачисленияДокументНажатие(Элемент, СтандартнаяОбработка)
	
	ТекущаяСтрока = Элементы.Начисления.ТекущиеДанные;
	ОткрытьЗначение(ТекущаяСтрока.Документ);	

КонецПроцедуры

&НаКлиенте
Процедура НачисленияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Врег(Поле.Имя) = "НАЧИСЛЕНИЯДОКУМЕНТ" Тогда
		СтандартнаяОбработка = Ложь;
		ТекущаяСтрока = Элементы.Начисления.ТекущиеДанные;
		ОткрытьЗначение(ТекущаяСтрока.Документ);	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТипДоговораПриИзменении(Элемент)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлаги(Значение)
	
	Для каждого строка из Начисления Цикл
		строка.Флаг = Значение;
	КонецЦикла;	
	
КонецПроцедуры	


&НаКлиенте
Процедура ВыделитьВсе(Команда)
	УстановитьФлаги(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыделение(Команда)
	УстановитьФлаги(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДоговор(Команда)
	текущаяСтрока = Элементы.Начисления.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда		
		ОткрытьЗначение(ТекущаяСтрока.Договор);				
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонтрагента(Команда)
	
	ТекущаяСтрока = Элементы.Начисления.ТекущиеДанные;
	Если ТекущаяСтрока <> Неопределено Тогда		
		ОткрытьЗначение(ТекущаяСтрока.Контрагент);				
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьВБПНаСервере()
	
	Документов = 0;
	
	
	МассивДокументов = Новый  Массив;
	
	Для каждого строка из Начисления Цикл
		
		Если НЕ ЗначениеЗаполнено(строка.Документ) Тогда
			Продолжить;
		КонецЕсли;	
		
		Поиск = МассивДокументов.Найти(строка.Документ);
		УжеВыгружен = Поиск <> Неопределено;
		
		Если НЕ Строка.Флаг Тогда
			Если УжеВыгружен Тогда
				Сообщить("Внимание! Начисление процентов по договору: " + строка.Договор + " отражено документом: " + строка.Документ);
				Сообщить("Частичная выгрузка документа не поддерживается. Документ выгружен в БП");
			КонецЕсли;	
			Продолжить;
		КонецЕсли;	
		
		Если УжеВыгружен Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(строка.Документ) = Тип("ДокументСсылка.НачислениеПроцентовПоДоговорам") Тогда
			МассивДокументов.Добавить(строка.Документ);
			ДокументОбъект = строка.Документ.ПОлучитьОбъект();
			ОбменСБП2_0.ВыгрузитьДокументВБП("НачислениеПроцентовПоДоговорам", "НачислениеПроцентовПоДоговорам", ДокументОбъект);
			Документов = Документов + 1;
		КонецЕсли;
		
	КонецЦикла;	
		
	Сообщить("Выгружено документов: " + Документов);	
		
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВБП(Команда)
	ВыгрузитьВБПНаСервере();
КонецПроцедуры
