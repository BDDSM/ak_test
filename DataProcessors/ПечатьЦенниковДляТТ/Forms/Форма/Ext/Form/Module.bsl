
&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого СтрокаТовар Из ТоварыКПечати Цикл
		СтрокаТовар.Печатать = Истина;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для Каждого СтрокаТовар Из ТоварыКПечати Цикл
		СтрокаТовар.Печатать = Ложь;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуТоваровКПечати()
	
	ТоварыКПечати.Очистить();
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЦенникиКПечати.Магазин КАК Магазин,
	               |	ЦенникиКПечати.Номенклатура,
	               |	ЦенникиКПечати.ОписаниеПричиныПечати,
	               |	ЦенникиКПечати.Характеристика
	               |ИЗ
	               |	РегистрСведений.ЦенникиКПечатиВМагазинах КАК ЦенникиКПечати
	               |ГДЕ
	               |	ЦенникиКПечати.Магазин.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Избенка)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ЦенникиКПечати.Магазин.Наименование,
	               |	ЦенникиКПечати.Номенклатура.Наименование";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДоб = ТоварыКПечати.Добавить();
		СтрокаДоб.Печатать = Истина;
		СтрокаДоб.ТТ = Выборка.Магазин;
		СтрокаДоб.Номенклатура = Выборка.Номенклатура;
		СтрокаДоб.Характеристика = Выборка.Характеристика;
		СтрокаДоб.ПричинаПечати = Выборка.ОписаниеПричиныПечати;
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//Объект.ПечататьДробныеЦенники = Истина;
	//ЗаполнитьТаблицуТоваровКПечати();
	
КонецПроцедуры

Функция ПолучитьТабДокЛицевая()
	
	Макет = Обработки.ПечатьЦенниковДляТТ.ПолучитьМакет("Ценник");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекДата"				, КонецДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("УпаковкаДляЦенника", ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("УпаковкаДляЦенника"));
	Запрос.УстановитьПараметр("Харки", ТоварыКПечати.Выгрузить().ВыгрузитьКолонку("Характеристика"));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХарактеристикиНоменклатуры.Владелец,
	               |	ХарактеристикиНоменклатуры.Ссылка,
	               |	ХарактеристикиНоменклатуры.Владелец.Наименование КАК Наименование,
	               |	ЦеныНоменклатурыСрезПоследних.Цена,
	               |	ЕСТЬNULL(ЗначенияСвойствОбъектов_Страна.Значение, """") КАК Страна,
	               |	ЕСТЬNULL(ЗначенияСвойствОбъектов_Упаковка.Значение, """") КАК Вес,
	               |	ХарактеристикиНоменклатуры.Владелец.ПозицияРазделителяДляЦенника КАК ПозицияПереносаНаименования
	               |ИЗ
	               |	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	               |				&ТекДата,
	               |				ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	               |					И ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.ОсновнойТипЦенПродаж)) КАК ЦеныНоменклатурыСрезПоследних
	               |		ПО ХарактеристикиНоменклатуры.Владелец = ЦеныНоменклатурыСрезПоследних.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов_Страна
	               |		ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов_Страна.Объект
	               |			И (ЗначенияСвойствОбъектов_Страна.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СтранаПроисхождения))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов_Упаковка
	               |		ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов_Упаковка.Объект
	               |			И (ЗначенияСвойствОбъектов_Упаковка.Свойство = &УпаковкаДляЦенника)
	               |ГДЕ
	               |	ХарактеристикиНоменклатуры.Ссылка В(&Харки)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ШтриховыеКоды.Номенклатура,
	               |	ШтриховыеКоды.Характеристика,
	               |	ШтриховыеКоды.ЛожныйШтрихКод
	               |ИЗ
	               |	РегистрСведений.ШтриховыеКоды КАК ШтриховыеКоды
	               |ГДЕ
	               |	ШтриховыеКоды.ЛожныйШтрихКод <> """"";
				   
	Результаты = Запрос.ВыполнитьПакет();
	ТабКеш = Результаты[0].Выгрузить();
	ТабЛожные = Результаты[1].Выгрузить();
	
	ТабДок = Новый ТабличныйДокумент();
	ТабДок.ПолеСверху = 5;
	ТабДок.ПолеСлева = 5;
	ТабДок.ПолеСнизу = 5;
	ТабДок.ПолеСправа = 5;
	
	Счетчик = 0;
	Для Каждого СтрокаТовар Из ТоварыКПечати Цикл
		Если НЕ СтрокаТовар.Печатать Тогда
			Продолжить;
		КонецЕсли;
		СтрокаКеш = Табкеш.Найти(СтрокаТовар.Характеристика, "Ссылка");
		Если СтрокаКеш = Неопределено Тогда
			Продолжить;
		КонецЕсли;	
		Если Счетчик % 9 = 0
			И Счетчик <> 0 Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;	
		ПозицияРазделителяДляЦенника = СтрокаКеш.ПозицияПереносаНаименования;
		Область = Макет.ПолучитьОбласть("Ценник|Основное");
		НаименованиеДляЦенника = СтрокаКеш.Наименование;
		НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника,"   "," ");
		НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника,"  "," ");
		НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника," ",Символы.ПС);
		
		Область.Рисунки.Наим1.Текст = "";
		Область.Рисунки.Наим2.Текст = "";
		Если ПозицияРазделителяДляЦенника = 0 Тогда
			СтрокаНаименования1 = "";
			Для н = 0 по СтрЧислоСтрок(НаименованиеДляЦенника) Цикл
				СтрокаНаименования1 = СтрокаНаименования1 + СтрПолучитьСтроку(НаименованиеДляЦенника,н)+" ";
			КонецЦикла;
			СтрокаНаименования1 = СокрЛП(СтрокаНаименования1);
			
			Область.Рисунки.Наим1.Текст = ВРЕГ(СтрокаНаименования1);
		Иначе
			СтрокаНаименования1 = "";
			Для н = 0 по ПозицияРазделителяДляЦенника Цикл
				СтрокаНаименования1 = СтрокаНаименования1 + СтрПолучитьСтроку(НаименованиеДляЦенника,н)+" ";
			КонецЦикла;
			СтрокаНаименования1 = СокрЛП(СтрокаНаименования1);
			
			Область.Рисунки.Наим1.Текст = ВРЕГ(СтрокаНаименования1);
			
			СтрокаНаименования2 = "";
			Для н = ПозицияРазделителяДляЦенника + 1 по СтрЧислоСтрок(НаименованиеДляЦенника) Цикл
				СтрокаНаименования2 = СтрокаНаименования2 + СтрПолучитьСтроку(НаименованиеДляЦенника,н)+" ";
			КонецЦикла;
			СтрокаНаименования2 = НРег(СокрЛП(СтрокаНаименования2));
			
			Область.Рисунки.Наим2.Текст = ВРЕГ(СтрокаНаименования2);
		КонецЕсли;
		СтрокиДробныйЦенник = ТабЛожные.НайтиСтроки(Новый Структура("Номенклатура, Характеристика", СтрокаТовар.Номенклатура, СтрокаТовар.Характеристика));
		Если СтрокиДробныйЦенник.Количество() > 0
			И Объект.ПечататьДробныеЦенники Тогда
			ВесВГраммах = Прав(СокрЛП(СтрокиДробныйЦенник[0].ЛожныйШтрихКод), 5);
			ВесВГраммах = Лев(ВесВГраммах, 4);
			Пока Лев(ВесВГраммах, 1) = "0" Цикл
				ВесВГраммах = Сред(ВесВГраммах, 2);
			КонецЦикла;
			Попытка
				Коэф = Число(ВесВГраммах) / 1000;
				ЦенаДробное = Окр(СтрокаКеш.Цена * Коэф, 0);
				Область.Рисунки.Цена.Текст 			= Формат(ЦенаДробное, "ЧДЦ=2; ЧРД=-; ЧГ=0") + " руб.";
				Область.Рисунки.Вес.Текст 		= ВесВГраммах + " г";
			Исключение	
				Область.Рисунки.Цена.Текст = Формат(СтрокаКеш.Цена, "ЧДЦ=2; ЧРД=-; ЧГ=0") + " руб.";
				Область.Рисунки.Вес.Текст = СтрокаКеш.Вес;
			КонецПопытки;
		Иначе
			Область.Рисунки.Вес.Текст = СтрокаКеш.Вес;
			Область.Рисунки.Цена.Текст = Формат(СтрокаКеш.Цена, "ЧДЦ=2; ЧРД=-; ЧГ=0") + " руб.";
		КонецЕсли;	
		Область.Рисунки.Страна.Текст = СтрокаКеш.Страна;
		Если Счетчик % 3 = 0 Тогда
			ТабДок.Вывести(Область);
		Иначе
			ТабДок.Присоединить(Область);
		КонецЕсли;
		Счетчик = Счетчик + 1;
		Запись = РегистрыСведений.РаспечатанныеЦенникиМагазинов.СоздатьМенеджерЗаписи();
		Запись.ДатаПечати = ТекущаяДата();
		Запись.Магазин = СтрокаТовар.ТТ;
		Запись.Номенклатура = СтрокаТовар.Номенклатура;
		Запись.Цена = СтрокаКеш.Цена;
		Запись.Страна = СтрокаКеш.Страна;
		Запись.Вес = СтрокаКеш.Вес;
		Запись.НаименованиеТовара = СтрокаКеш.Наименование;
		Запись.Записать();
		
		Набор = РегистрыСведений.ЦенникиКПечатиВМагазинах.СоздатьНаборЗаписей();
		Набор.Отбор.Магазин.Установить(СтрокаТовар.ТТ);
		Набор.Отбор.Номенклатура.Установить(СтрокаТовар.Номенклатура);
		Набор.Записать();
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПолучитьТабДокОборотная()
	
	Макет = Обработки.ПечатьЦенниковДляТТ.ПолучитьМакет("Ценник_ОбрСторона");
	
	
	ТабДок = Новый ТабличныйДокумент();
	ТабДок.ПолеСверху = 5;
	ТабДок.ПолеСлева = 5;
	ТабДок.ПолеСнизу = 5;
	ТабДок.ПолеСправа = 5;
	
	Счетчик = 0;
	Для Каждого СтрокаТовар Из ТоварыКПечати Цикл
		Если НЕ СтрокаТовар.Печатать Тогда
			Продолжить;
		КонецЕсли;
		Если Счетчик % 9 = 0
			И Счетчик <> 0 Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;	
		Область = Макет.ПолучитьОбласть("Ценник|Основное");
		Область.Параметры.ТекДата = ТекущаяДата();
		Если Счетчик % 3 = 0 Тогда
			ТабДок.Вывести(Область);
		Иначе
			ТабДок.Присоединить(Область);
		КонецЕсли;
		Счетчик = Счетчик + 1;
	КонецЦикла;
	
	Пока Счетчик % 3 <> 0 Цикл
		Область = Макет.ПолучитьОбласть("Ценник|Основное");
		ТабДок.Присоединить(Область);
		Счетчик = Счетчик + 1;
	КонецЦикла;	
	
	Возврат ТабДок;
	
КонецФункции

&НаСервере
Функция ПечатьСервер()
	
	ТабДок = Новый ТабличныйДокумент();
	Счетчик = 0;
	Для Каждого СтрокаТаб Из ТоварыКПечати Цикл
		Если СтрокаТаб.Печатать Тогда
			СтруктураРаспечатанногоЦенника = Неопределено;
			НеПомещатьЗаписьВРаспечатанные = Ложь;
			Область = Справочники.Номенклатура.ПолучитьЦенник_80_60(СтрокаТаб.Номенклатура, СтрокаТаб.Характеристика,,,, СтруктураРаспечатанногоЦенника, Объект.ПечататьДробныеЦенники, "ООО ""Луг да Поле""", Истина);
			Для н = 1 По СтрокаТаб.КоличествоКопий Цикл
				Если Счетчик%3 = 0 Тогда
					Если НЕ ТабДок.ПроверитьВывод(Область) Тогда
						ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;	
					ТабДок.Вывести(Область);
				Иначе
					ТабДок.Присоединить(Область);
				КонецЕсли;
				Счетчик = Счетчик + 1;
			КонецЦикла;	
			//Если НеПомещатьЗаписьВРаспечатанные = Ложь Тогда
			//	Запись = РегистрыСведений.РаспечатанныеЦенникиМагазинов.СоздатьМенеджерЗаписи();
			//	Запись.ДатаПечати = ?(НЕ ПечатьНаЗавтра, ТекущаяДата(), НачалоДня(ТекущаяДата() + 86400));
			//	Запись.Номенклатура = СтрокаТаб.Номенклатура;
			//	Запись.Характеристика = СтрокаТаб.Характеристика;
			//	Запись.Магазин = ПараметрыСеанса.ТорговаяТочкаПоАйпи;
			//	Если ТипЗнч(СтруктураРаспечатанногоЦенника) = Тип("Структура") Тогда
			//		ЗаполнитьЗначенияСвойств(Запись, СтруктураРаспечатанногоЦенника);
			//	КонецЕсли;	
			//	Запись.Записать();
			//	
			//	Набор = РегистрыСведений.ЦенникиКПечатиВМагазинах.СоздатьНаборЗаписей();
			//	Набор.Отбор.Магазин.Установить(ПараметрыСеанса.ТорговаяТочкаПоАйпи);
			//	Набор.Отбор.Номенклатура.Установить(СтрокаТаб.Номенклатура);
			//	Набор.Записать();
			//КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	Возврат ТабДок;
		
КонецФункции

&НаКлиенте
Процедура Печать(Команда)
	
	//ТабДок = ПолучитьТабДокЛицевая();
	//ТабДок.Показать("Лицевая");
	//
	//ТабДок = ПолучитьТабДокОборотная();
	//ТабДок.Показать("Оборотная");
	
	ТабДок = ПечатьСервер();
	ТабДок.ПолеСнизу = 3;
	ТабДок.ПолеСверху = 3;
	ТабДок.ПолеСлева = 3;
	ТабДок.ПолеСправа = 3;
	ТабДок.Показать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьНеобходимостьПечатиЦенников(Команда)
	
	РегламентныеЗаданияСервер.ПересчетНеобходимостиПечатиЦенникаТТ();
	ЗаполнитьТаблицуТоваровКПечати();
	
КонецПроцедуры

Процедура ЗаполнитьПоАссортиментуПолномуСервер()
	
	ТоварыКПечати.Очистить();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	РасходныйОрдерСкладТовары.Номенклатура
	               |ПОМЕСТИТЬ ВТ_Приходники
	               |ИЗ
	               |	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
	               |		ПО РасходныйОрдерСклад.Ссылка = РасходныйОрдерСкладТовары.Ссылка
	               |ГДЕ
	               |	РасходныйОрдерСклад.Дата >= ДОБАВИТЬКДАТЕ(&ТекДата, МЕСЯЦ, -3)
	               |	И РасходныйОрдерСклад.Проведен = ИСТИНА
	               |	И ВЫРАЗИТЬ(РасходныйОрдерСклад.Получатель КАК Справочник.СтруктурныеЕдиницы).ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Избенка)
	               |	И НЕ РасходныйОрдерСкладТовары.Номенклатура ЕСТЬ NULL 
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ТоварныйАссортиментТочекСрезПоследних.Номенклатура КАК Номенклатура
	               |ПОМЕСТИТЬ ВТ_Ассортимент
	               |ИЗ
	               |	РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(&ТекДата, ) КАК ТоварныйАссортиментТочекСрезПоследних
	               |ГДЕ
	               |	ТоварныйАссортиментТочекСрезПоследних.Выведена = ЛОЖЬ
	               |	И ТоварныйАссортиментТочекСрезПоследних.Запрещена = ЛОЖЬ
	               |	И ТоварныйАссортиментТочекСрезПоследних.ТорговаяТочка.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Избенка)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВЗ_Запрос.Номенклатура КАК Номенклатура
	               |ПОМЕСТИТЬ ВТ_Товары
	               |ИЗ
				   //|	(ВЫБРАТЬ
				   //|		ТоварныйАссортиментТочекСрезПоследних.Номенклатура КАК Номенклатура
				   //|	ИЗ
				   //|		ВТ_Ассортимент КАК ТоварныйАссортиментТочекСрезПоследних
				   //|	
				   //|	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |		РасходныйОрдерСкладТовары.Номенклатура КАК Номенклатура
	               |	ИЗ
	               |		ВТ_Приходники КАК РасходныйОрдерСкладТовары) КАК ВЗ_Запрос
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Товары.Номенклатура,
	               |	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
	               |	ВЫБОР
	               |		КОГДА ХарактеристикиНоменклатуры.СтатусАктивностиХарактеристики = ЗНАЧЕНИЕ(Перечисление.СтатусыАктивностиХарактеристик.Активна)
	               |			ТОГДА 0
	               |		КОГДА ХарактеристикиНоменклатуры.СтатусАктивностиХарактеристики = ЗНАЧЕНИЕ(Перечисление.СтатусыАктивностиХарактеристик.Выведена)
	               |			ТОГДА 1
	               |		КОГДА ХарактеристикиНоменклатуры.СтатусАктивностиХарактеристики = ЗНАЧЕНИЕ(Перечисление.СтатусыАктивностиХарактеристик.Новая)
	               |			ТОГДА 2
	               |	КОНЕЦ КАК Сортировка
	               |ИЗ
	               |	ВТ_Товары КАК ВТ_Товары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	               |		ПО ВТ_Товары.Номенклатура = ХарактеристикиНоменклатуры.Владелец
	               |			И (ХарактеристикиНоменклатуры.ПометкаУдаления = ЛОЖЬ)
	               |			И (ХарактеристикиНоменклатуры.Неактивная = ЛОЖЬ)
	               |ГДЕ
	               |	ВТ_Товары.Номенклатура.ПометкаУдаления = ЛОЖЬ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВТ_Товары.Номенклатура,
	               |	Сортировка";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Номенклатура") Цикл
		Пока Выборка.Следующий() Цикл
			СтрокаДоб = ТоварыКПечати.Добавить();
			СтрокаДоб.Печатать = Истина;
			СтрокаДоб.Номенклатура = Выборка.Номенклатура;
			СтрокаДоб.Характеристика = Выборка.Характеристика;
			СтрокаДоб.КоличествоКопий = 1;
			Прервать;
		КонецЦикла;	
	КонецЦикла;
	
КонецПроцедуры	

Процедура ЗаполнитьПоАссортиментуТТСервер(ТТ)
	
	ТоварыКПечати.Очистить();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.УстановитьПараметр("ТТ", ТТ);
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ДвиженияТоваровПоЛистамУчетаОбороты.Номенклатура
	               |ПОМЕСТИТЬ ВТ_Движения
	               |ИЗ
	               |	РегистрНакопления.ДвиженияТоваровПоЛистамУчета.Обороты(
	               |			ДОБАВИТЬКДАТЕ(&ТекДата, МЕСЯЦ, -3),
	               |			&ТекДата,
	               |			,
	               |			СтруктурнаяЕдиница = &ТТ
	               |				И ВидДвиженияТовара В (Значение(Перечисление.ВидДвиженияТовараПоЛистуУчета.Продажа), Значение(Перечисление.ВидДвиженияТовараПоЛистуУчета.Поступление))) КАК ДвиженияТоваровПоЛистамУчетаОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ТоварныйАссортиментТочекСрезПоследних.Номенклатура КАК Номенклатура
	               |ПОМЕСТИТЬ ВТ_Ассортимент
	               |ИЗ
	               |	РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(&ТекДата, ТорговаяТочка = &ТТ) КАК ТоварныйАссортиментТочекСрезПоследних
	               |ГДЕ
	               |	ТоварныйАссортиментТочекСрезПоследних.Выведена = ЛОЖЬ
	               |	И ТоварныйАссортиментТочекСрезПоследних.Запрещена = ЛОЖЬ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ВЗ_Запрос.Номенклатура КАК Номенклатура
	               |ПОМЕСТИТЬ ВТ_Товары
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ТоварныйАссортиментТочекСрезПоследних.Номенклатура КАК Номенклатура
	               |	ИЗ
	               |		ВТ_Ассортимент КАК ТоварныйАссортиментТочекСрезПоследних
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ВТ_Движения.Номенклатура
	               |	ИЗ
	               |		ВТ_Движения КАК ВТ_Движения) КАК ВЗ_Запрос
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_Товары.Номенклатура,
	               |	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
	               |	ВЫБОР
	               |		КОГДА ХарактеристикиНоменклатуры.СтатусАктивностиХарактеристики = ЗНАЧЕНИЕ(Перечисление.СтатусыАктивностиХарактеристик.Активна)
	               |			ТОГДА 0
	               |		КОГДА ХарактеристикиНоменклатуры.СтатусАктивностиХарактеристики = ЗНАЧЕНИЕ(Перечисление.СтатусыАктивностиХарактеристик.Выведена)
	               |			ТОГДА 1
	               |		КОГДА ХарактеристикиНоменклатуры.СтатусАктивностиХарактеристики = ЗНАЧЕНИЕ(Перечисление.СтатусыАктивностиХарактеристик.Новая)
	               |			ТОГДА 2
	               |	КОНЕЦ КАК Сортировка
	               |ИЗ
	               |	ВТ_Товары КАК ВТ_Товары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	               |		ПО ВТ_Товары.Номенклатура = ХарактеристикиНоменклатуры.Владелец
	               |			И (ХарактеристикиНоменклатуры.ПометкаУдаления = ЛОЖЬ)
	               |			И (ХарактеристикиНоменклатуры.Неактивная = ЛОЖЬ)
	               |ГДЕ
	               |	ВТ_Товары.Номенклатура.ПометкаУдаления = ЛОЖЬ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВТ_Товары.Номенклатура,
	               |	Сортировка";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Номенклатура") Цикл
		Пока Выборка.Следующий() Цикл
			СтрокаДоб = ТоварыКПечати.Добавить();
			СтрокаДоб.Печатать = Истина;
			СтрокаДоб.Номенклатура = Выборка.Номенклатура;
			СтрокаДоб.Характеристика = Выборка.Характеристика;
			СтрокаДоб.КоличествоКопий = 1;
			Прервать;
		КонецЦикла;	
	КонецЦикла;
	
КонецПроцедуры	

&НаКлиенте
Процедура ЗаполнитьПоАссортиментуПолному(Команда)
	
	//ТТ = ПредопределенноеЗначение("Справочник.СтруктурныеЕдиницы.ПустаяСсылка");
	//Если ВвестиЗначение(ТТ, "Выберите торговую точку", Тип("СправочникСсылка.СтруктурныеЕдиницы")) Тогда
		ЗаполнитьПоАссортиментуПолномуСервер();
	//КонецЕсли;
	
	ТоварыКПечати.Сортировать("Номенклатура");
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТабЧасть(Команда)
	
	ТоварыКПечати.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКПечатиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		КолвоКопий = 1;
		ВвестиЗначение(КолвоКопий, "Введите количество копий");
		Для Каждого ЭлементМассива Из ВыбранноеЗначение Цикл
			СтрокаДоб = ТоварыКПечати.Добавить();
			СтрокаДоб.Печатать = Истина;
			//СтрокаДоб.ТТ = ЭлементМассива.ТТ;
			СтрокаДоб.Номенклатура = ЭлементМассива.Номенклатура;
			СтрокаДоб.Характеристика = ЭлементМассива.Характеристика;
			СтрокаДоб.КоличествоКопий = КолвоКопий;
		КонецЦикла;	
		ТоварыКПечати.Сортировать("Номенклатура");
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоНаборуТоваров(Команда)
	
	ОткрытьФорму("Обработка.ПечатьЦенниковДляТТ.Форма.ФормаЗаполненияНабора",, Элементы.ТоварыКПечати);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКоличествоКопий(Команда)
	
	КолвоКопий = 1;
	ВвестиЗначение(КолвоКопий, "Введите количество копий");
	Для Каждого СтрокаДоб Из ТоварыКПечати Цикл
		СтрокаДоб.КоличествоКопий = КолвоКопий;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоАссортимнтуТТ(Команда)
	
	ТТ = ПредопределенноеЗначение("Справочник.СтруктурныеЕдиницы.ПустаяСсылка");
	Если ВвестиЗначение(ТТ, "Выберите торговую точку", Тип("СправочникСсылка.СтруктурныеЕдиницы")) Тогда
		ЗаполнитьПоАссортиментуТТСервер(ТТ);
	КонецЕсли;
	
	ТоварыКПечати.Сортировать("Номенклатура");
	
КонецПроцедуры
