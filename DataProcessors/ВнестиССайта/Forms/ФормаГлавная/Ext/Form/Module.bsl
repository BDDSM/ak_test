

// Выполянет запрос и резульатат запроса возвращает в таблицу значений
//
&НаСервере
Процедура База_ВыполнитьЗапросИЗаполнитьТаблицуЗначений(ТекстЗапроса, допПараметры = Неопределено)  
	
	RecordSet = База_ВыполнитьЗапрос(ТекстЗапроса, допПараметры);
	тзРезультат = База_РезульататЗапросВТаблицуЗначений(RecordSet);
	RecordSet.Close();
	
 //   Для каждого ТекСтрока Из тзРезультат Цикл
 //
 //		ТекСтрока.Дата = Дата(ТекСтрока.Дата);
 //
 //   КонецЦикла;	
 //   тзРезультат.Сортировать("Дата Убыв");
 //   
 //   Объект.ТЗ_СМС_ВсеПоКлиенту.Загрузить(тзРезультат);
	
КонецПроцедуры

&НаСервере
Процедура База_ВыполнитьЗапросНеЗаполняяТЗ(ТекстЗапроса, допПараметры = Неопределено)  
	
	RecordSet = База_ВыполнитьЗапрос(ТекстЗапроса, допПараметры);
	тзРезультат = База_РезульататЗапросВТаблицуЗначений(RecordSet);
	RecordSet.Close();
		
КонецПроцедуры


&НаСервере
Функция База_ВыполнитьЗапрос(ТекстЗапроса, допПараметры = Неопределено, СтрокаПодключения = "")  
	Попытка
		Command = Новый COMОбъект("ADODB.Command");
		
		Если ТипЗнч(допПараметры) = Тип("Структура") тогда
			ЗаполнитьЗначенияСвойств(Command, допПараметры);
		КонецЕсли;			
		CurrentConnection = База_Подключение(СтрокаПодключения);
		Command.ActiveConnection = CurrentConnection;
		Command.CommandTimeout = 0;
		Command.CommandText = ТекстЗапроса;
		RecordSet = Новый COMОбъект("ADODB.RecordSet");
		RecordSet = Command.Execute(); //Выполнение и получение набора данных
		Возврат RecordSet;
	Исключение	
		ВызватьИсключение ОписаниеОшибки();
	КонецПопытки;	
КонецФункции

&НаСервере
Функция База_Подключение(СтрокаПодключения) экспорт	
	
	Попытка
		CurrentConnection = Новый COMОбъект("ADODB.Connection");
		Catalog = Новый COMОбъект("ADOX.Catalog");			
		
		Catalog.ActiveConnection = СтрокаПодключения;
		CurrentConnection.Open(СтрокаПодключения);
		Возврат CurrentConnection;	
		
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();		
		#Если НаКлиенте тогда
		Сообщить(ОписаниеОшибки);			
		#КонецЕсли		
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

// На основе результата запроса (База_ВыполнитьЗапрос) создаем таблицу значений!!
&НаСервере
Функция База_РезульататЗапросВТаблицуЗначений(RecordSet) 
	
	тз = Новый ТаблицаЗначений;
	Если ТипЗнч(RecordSet) <> Тип("COMОбъект") тогда
		Возврат тз;
	КонецЕсли;
	
	// Инициализируем колонки
	Для НомерКолонки = 0 По RecordSet.Fields.Count-1 Цикл
		NameFiled = RecordSet.Fields.Item(НомерКолонки).Name;
		NameFiled = СтрЗаменить(NameFiled,"$","_");
		тз.Колонки.Добавить(NameFiled,,RecordSet.Fields.Item(НомерКолонки).Name, 15);
	КонецЦикла;
	
	// Перебор данных
	Если НЕ RecordSet.EOF() Тогда
		RecordSet.MoveFirst();                 
		Пока RecordSet.EOF() = 0 Цикл
			СтрокаТаблицыЗначений = тз.Добавить();
			Для НомерКолонки = 0 По RecordSet.Fields.Count-1 Цикл
				СтрокаТаблицыЗначений[НомерКолонки] = RecordSet.Fields(RecordSet.Fields.Item(НомерКолонки).Name).Value;
			КонецЦикла;
			RecordSet.MoveNext();  
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТЗ;
КонецФункции

// Закрываем датасет возвращаемй База_ВыполнитьЗапрос();
//
&НаСервере
Процедура База_ЗакрытьЗапрос(RecordSet) 
	Если ТипЗнч(RecordSet) = Тип("COMОбъект") тогда
		RecordSet.Close();
	КонецЕсли;		
КонецПроцедуры


//////////////////////////////////////////////////////////////////
&НаКлиенте
Процедура КнДобавить(Команда)
	
	КнДобавитьНаСервере();	
	 
КонецПроцедуры

&НаСервере
Процедура КнДобавитьНаСервере()
	
	Если ЗначениеЗаполнено(Анкета) И ЗначениеЗаполнено(НомерКарты) И ЗначениеЗаполнено(Фамилия) Тогда
		
		ТекстЗапроса = "Select Top 1 D.CustomerUID , c.Фамилия , d2.Number ВтораяКарта
		|from [Loyalty].[dbo].DiscountCard (nolock) d
		|left join [Loyalty].[dbo].Customer (nolock) c on d.CustomerUID=c.CustomerUID
		|inner join [Loyalty].[dbo].Account (nolock) a on a.AccountUID=d.AccountUID
		|left join [Loyalty].[dbo].DiscountCard (nolock) d2 on d2.AccountUID=a.AccountUID and d2.DiscountCardUID<>d.DiscountCardUID
		|where D.Number=/**BPar1**/~~~~~/**FPar**/ ;";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "~~~~~",НомерКарты);
		
		СтрокаПодключения = ВнешниеДанные.ПолучитьСтрокуПодключенияMSSQL("srv-sql01", "Loyalty");
		
		RecordSet = База_ВыполнитьЗапрос(ТекстЗапроса, , СтрокаПодключения);
		rst1 = База_РезульататЗапросВТаблицуЗначений(RecordSet);
		RecordSet.Close();
		
		ТекстЗапроса = "SELECT [anketa_id]		
		|FROM [Loyalty].[dbo].[Card_anketa]
		|WHERE [anketa_id] = '~~~~~';";

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "~~~~~", Анкета);
		
		СтрокаПодключения = ВнешниеДанные.ПолучитьСтрокуПодключенияMSSQL("srv-sql01", "Loyalty");
		
		RecordSet = База_ВыполнитьЗапрос(ТекстЗапроса, , СтрокаПодключения);
		rst2 = База_РезульататЗапросВТаблицуЗначений(RecordSet);
		RecordSet.Close();
		
		Если ТолькоЦифры(Анкета) Тогда
			
			Если rst2.Количество() <> 0 Тогда
				ОбщегоНазначения.СообщитьИнформациюПользователю("Такая анкета уже заведена");				
			Иначе
				
				Если rst1.Количество() = 0 Тогда
					ОбщегоНазначения.СообщитьИнформациюПользователю("Нет такой карты");
				ИначеЕсли rst1[0].CustomerUID <> NULL Тогда
					
					ОбщегоНазначения.СообщитьИнформациюПользователю("Покупатель " + Фамилия + " с такой картой уже заведен")
					
				Иначе
					
					// DoCmd.OpenQuery "Anketa_сайт_занести", acNormal, acEdit
					ТекстЗапроса ="INSERT INTO [Loyalty].[dbo].[Card_anketa] VALUES ('"+НомерКарты+"',"+Число(Анкета)+",'"+Фамилия+"','"+ПараметрыСеанса.ТекущийПользователь.Наименование+"',"+ТекущаяДата()+",1);";
					
					СтрокаПодключения = ВнешниеДанные.ПолучитьСтрокуПодключенияMSSQL("srv-sql01", "Loyalty");
		            
					RecordSet = База_ВыполнитьЗапрос(ТекстЗапроса, , СтрокаПодключения);
					rst2 = База_РезульататЗапросВТаблицуЗначений(RecordSet);
					RecordSet.Close();
					
					ОбщегоНазначения.СообщитьИнформациюПользователю("Анкета внесена");
					
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			ОбщегоНазначения.СообщитьИнформациюПользователю("Не числовой номер анкеты");
		КонецЕсли;
		
	Иначе
		 ОбщегоНазначения.СообщитьИнформациюПользователю("Есть пустое значение");
	КонецЕсли;	
	 
КонецПроцедуры

&НаСервере
Функция ТолькоЦифры(лкСтр) Экспорт 
	
	лкСтрПроверки = "1234567890";
	ДлинаСтр = СтрДлина(лкСтр);
	
	НеТлькоЦифры = Истина;
	
	Для i = 1 По ДлинаСтр Цикл
		
		ТекСимвол = Сред(лкСтр,i,i);
		Если НЕ Найти(лкСтрПроверки, ТекСимвол) Тогда
			НеТлькоЦифры = Ложь;
			Прервать;
		КонецЕсли;	
		i = i + 1;
	КонецЦикла;	
	
	Возврат НеТлькоЦифры;
	
КонецФункции	

&НаКлиенте
Процедура ПосмотретьСписокЗагрузки(Команда)
	
	 Табл = ПосмотретьСписокЗагрузкиНаСервере();
	 Табл.Показать("Список загрузки");
	 
КонецПроцедуры


&НаСервере
Функция  ПосмотретьСписокЗагрузкиНаСервере()
	
	ТекстЗапроса = "SELECT [card_number]
	|  ,[anketa_id]
	|  ,[familia]
	|  ,[user_ca]
	|  ,[time_ca]
	|  ,[type_import]
	|FROM [Loyalty].[dbo].[Card_anketa]
	|ORDER BY [time_ca] DESC;";
 
	СтрокаПодключения = ВнешниеДанные.ПолучитьСтрокуПодключенияMSSQL("srv-sql01", "Loyalty");
	
	RecordSet = База_ВыполнитьЗапрос(ТекстЗапроса, , СтрокаПодключения);
	ТЗ = База_РезульататЗапросВТаблицуЗначений(RecordSet);
	RecordSet.Close();	
		
	Табл=Новый ТабличныйДокумент;
	Макет = ПолучитьОбщийМакет(Метаданные.ОбщиеМакеты.АК_ПечатьТаблицЗначений);
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаОсновной=Макет.ПолучитьОбласть("Шапка|Основной");
	ОбластьСтрокаОсновной=Макет.ПолучитьОбласть("Строка|Основной");
	ОбластьИтогОсновной=Макет.ПолучитьОбласть("Итог|Основной");
	ОбластьШапкаДОП=Макет.ПолучитьОбласть("Шапка|Показатели");
	ОбластьСтрокаДОП=Макет.ПолучитьОбласть("Строка|Показатели");
	ОбластьИтогДОП=Макет.ПолучитьОбласть("Итог|Показатели");
	
	
	ОбластьЗаголовок.Параметры.Заголовок = "Список загрузки";
	Табл.Вывести(ОбластьЗаголовок);
	
	Табл.Вывести(ОбластьШапкаОсновной);
	
	Для Каждого Колонка из Тз.Колонки ЦИКЛ
		ОбластьШапкаДОП.Параметры.ИмяПоказателя=Колонка.Имя;
		Табл.Присоединить(ОбластьШапкаДОП);
	КонецЦикла;
	
	счетчик=0;
	Для каждого стр из Тз Цикл
		счетчик=счетчик+1;
		ОбластьСтрокаОсновной.Параметры.счетчик=счетчик; 
		Табл.Вывести(ОбластьСтрокаОсновной);
		Для Каждого Колонка из Тз.Колонки ЦИКЛ
			ОбластьСтрокаДОП.Параметры.ЗначениеКолонки=Формат(стр[Колонка.Имя],"ЧДЦ=2; ЧН=0,00; ЧГ=0");
			Табл.Присоединить(ОбластьСтрокаДОП);
		КонецЦикла;
	КонецЦикла;
	//Табл.Вывести(ОбластьИтогОсновной);
	
	//Для Каждого Колонка из Тз.Колонки ЦИКЛ
	//	ОбластьИтогДОП.Параметры.Итог=Формат(Тз.Итог(Колонка.Имя),"ЧДЦ=2; ЧН=0,00; ЧГ=0");
	//	Табл.Присоединить(ОбластьИтогДОП);
	//КонецЦикла;
	
	
	//Табл.Защита = Истина;
	//Табл.ОтображатьЗаголовки = Ложь;
	Табл.ОтображатьСетку = Ложь;
	Возврат Табл;	
		
КонецФункции
