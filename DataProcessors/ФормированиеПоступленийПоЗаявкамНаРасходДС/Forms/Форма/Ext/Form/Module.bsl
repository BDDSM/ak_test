
Процедура ЗаполнитьЗаявкиНаРасходДС()
	
	Если Объект.ДатаНачала = Дата(1, 1, 1) Тогда
		Возврат;
	КонецЕсли;
	
	ЕстьДатаОкончания		= ЗначениеЗаполнено(Объект.ДатаОкончания);
	ЕстьСтатьиДДСВключая 	= (ЭтаФорма.СтатьиДДСВключая.Количество() > 0);
	ЕстьСтатьиДДСИсключая 	= (ЭтаФорма.СтатьиДДСИсключая.Количество() > 0);
	ЕстьКонтрагентыВключая 	= (ЭтаФорма.КонтрагентыВключая.Количество() > 0);
	ЕстьКонтрагентыИсключая = (ЭтаФорма.КонтрагентыИсключая.Количество() > 0);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала"				, Объект.ДатаНачала);
	Если ЕстьДатаОкончания Тогда
		Запрос.УстановитьПараметр("ДатаОкончания"		, КонецДня(Объект.ДатаОкончания));
	КонецЕсли;
	Если ЕстьСтатьиДДСВключая Тогда
		Запрос.УстановитьПараметр("СтатьиДДСВключая"	, ЭтаФорма.СтатьиДДСВключая);
	КонецЕсли;
	Если ЕстьСтатьиДДСИсключая Тогда
		Запрос.УстановитьПараметр("СтатьиДДСИсключая"	, ЭтаФорма.СтатьиДДСИсключая);
	КонецЕсли;
	Если ЕстьКонтрагентыВключая Тогда
		Запрос.УстановитьПараметр("КонтрагентыВключая"	, ЭтаФорма.КонтрагентыВключая);
	КонецЕсли;
	Если ЕстьКонтрагентыИсключая Тогда
		Запрос.УстановитьПараметр("КонтрагентыИсключая"	, ЭтаФорма.КонтрагентыИсключая);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДатаНачалаО"	, ДатаОтработки.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончанияО"	, КонецДня(ДатаОтработки.ДатаОкончания));
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЛОЖЬ КАК Обрабатывать,
	|	ДокЗаявка.Ссылка КАК Заявка,
	|	ДокЗаявка.Контрагент КАК Контрагент,
	|	ДокЗаявка.СтатьяДвиженияДенежныхСредств КАК СтатьяДДС,
	|	ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка) КАК ДокументПоступления,
	|	ДокЗаявка.СуммаДокумента КАК СуммаДокумента
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеСредств КАК ДокЗаявка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ПО (ПоступлениеТоваровУслуг.ДокументОснование = ДокЗаявка.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентами.Обороты(&ДатаНачала, , , НЕ ЗаявкаНаРасходованиеСредств = ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеСредств.ПустаяСсылка)) КАК Оплаты
	|		ПО (Оплаты.ЗаявкаНаРасходованиеСредств = ДокЗаявка.Ссылка)
	|ГДЕ
	|	НЕ ДокЗаявка.Дата < &ДатаНачала
	|	И ДокЗаявка.Проведен
	|	И ДокЗаявка.ПринятоКОплате
	|	И ДокЗаявка.ФормаОплаты = ЗНАЧЕНИЕ(Перечисление.ФормыОплаты.Безналичные)
	|	И (ДокЗаявка.ДокументОснование = ЗНАЧЕНИЕ(Документ.ПоступлениеТоваровУслуг.ПустаяСсылка)
	|			ИЛИ НЕ ДокЗаявка.ДокументОснование ССЫЛКА Документ.ПоступлениеТоваровУслуг)
	|	И &ДопУсловия
	|	И НЕ ДокЗаявка.Аванс
	|	И ПоступлениеТоваровУслуг.Ссылка ЕСТЬ NULL 
	|	И НЕ Оплаты.ЗаявкаНаРасходованиеСредств ЕСТЬ NULL 
	|	И НЕ ДокЗаявка.СуммаДокумента > ЕСТЬNULL(Оплаты.СуммаРасход, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДокЗаявка.МоментВремени";
	
	ТекстЗамены = "";
	Если ЕстьДатаОкончания Тогда
		ТекстЗамены = ТекстЗамены + "
	|	И НЕ ДокЗаявка.Дата > &ДатаОкончания";
	КонецЕсли;
	Если ЕстьСтатьиДДСВключая Тогда
		ТекстЗамены = ТекстЗамены + "
	|	И ДокЗаявка.СтатьяДвиженияДенежныхСредств В (&СтатьиДДСВключая)";
	КонецЕсли;
	Если ЕстьСтатьиДДСИсключая Тогда
		ТекстЗамены = ТекстЗамены + "
	|	И НЕ ДокЗаявка.СтатьяДвиженияДенежныхСредств В (&СтатьиДДСИсключая)";
	КонецЕсли;
	Если ЕстьКонтрагентыВключая Тогда
		ТекстЗамены = ТекстЗамены + "
	|	И ДокЗаявка.Контрагент В (&КонтрагентыВключая)";
	КонецЕсли;
	Если ЕстьКонтрагентыИсключая Тогда
		ТекстЗамены = ТекстЗамены + "
	|	И НЕ ДокЗаявка.Контрагент В (&КонтрагентыИсключая)";
	КонецЕсли;
    Если ЗначениеЗаполнено(ДатаОтработки.ДатаНачала) и ЗначениеЗаполнено(ДатаОтработки.ДатаОкончания)  Тогда
		ТекстЗамены = ТекстЗамены + "
	|	И  ДокЗаявка.ПериодОтработки Между &ДатаНачалаО и &ДатаОкончанияО";
    ИначеЕсли ЗначениеЗаполнено(ДатаОтработки.ДатаНачала)   Тогда
		ТекстЗамены = ТекстЗамены + "
	|	И  ДокЗаявка.ПериодОтработки >= &ДатаНачалаО ";
    ИначеЕсли ЗначениеЗаполнено(ДатаОтработки.ДатаОкончания)   Тогда
		ТекстЗамены = ТекстЗамены + "
	|	И  ДокЗаявка.ПериодОтработки <= &ДатаОкончанияО И  ДокЗаявка.ПериодОтработки > ДатаВремя(1,1,1) ";
	КонецЕсли; 
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "
	|	И &ДопУсловия", ТекстЗамены);
	
	Запрос.Текст = ТекстЗапроса;
	
	мТаблицаЗаявок = Запрос.Выполнить().Выгрузить();
	
	//
	ЭтаФорма.ТаблицаЗаявок.Загрузить(мТаблицаЗаявок);
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.ДатаНачала = НачалоМесяца(ТекущаяДата());
	
	ЭтаФорма.СтатьиДДСИсключая.Добавить(Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("120110")); // оплата поставщикам товара
	ЭтаФорма.СтатьиДДСИсключая.Добавить(Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("120210")); // оплата упаковки, этикетки
	ЭтаФорма.СтатьиДДСИсключая.Добавить(Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("131011"));
	ЭтаФорма.СтатьиДДСИсключая.Добавить(Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("120332")); // оплата доставки на склады
	ЭтаФорма.СтатьиДДСИсключая.Добавить(Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("132030"));
	ЭтаФорма.СтатьиДДСИсключая.Добавить(Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("131010"));
	
	//
	ЗаполнитьЗаявкиНаРасходДС();
	
КонецПроцедуры


&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	ЗаполнитьЗаявкиНаРасходДС();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	ЗаполнитьЗаявкиНаРасходДС();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьиДДСВключаяПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ЗаполнитьЗаявкиНаРасходДС();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьиДДСВключаяПослеУдаления(Элемент)
	
	ЗаполнитьЗаявкиНаРасходДС();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьиДДСИсключаяПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ЗаполнитьЗаявкиНаРасходДС();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьиДДСИсключаяПослеУдаления(Элемент)
	
	ЗаполнитьЗаявкиНаРасходДС();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыВключаяПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ЗаполнитьЗаявкиНаРасходДС();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыВключаяПослеУдаления(Элемент)
	
	ЗаполнитьЗаявкиНаРасходДС();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыИсключаяПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ЗаполнитьЗаявкиНаРасходДС();
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентыИсключаяПослеУдаления(Элемент)
	
	ЗаполнитьЗаявкиНаРасходДС();
	
КонецПроцедуры


&НаКлиенте
Процедура ТаблицаЗаявокУстановитьФлажки(Команда)

	Для Каждого СтрокаТаблицы Из ЭтаФорма.ТаблицаЗаявок Цикл
		СтрокаТаблицы.Обрабатывать = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗаявокСнятьФлажки(Команда)

	Для Каждого СтрокаТаблицы Из ЭтаФорма.ТаблицаЗаявок Цикл
		СтрокаТаблицы.Обрабатывать = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗаявкиНаРасходДС(Команда)
	
	ЗаполнитьЗаявкиНаРасходДС();
	
КонецПроцедуры

Процедура СоздатьПоступленияСервер()
	
	СтрокиКОбработке = ЭтаФорма.ТаблицаЗаявок.НайтиСтроки(Новый Структура("Обрабатывать", Истина));
	Если СтрокиКОбработке.Количество() = 0 Тогда
		Сообщить("Нет данных к обработке!");
		Возврат;
	КонецЕсли;	
	
	//
	ДокиПоступление = Документы.ПоступлениеТоваровУслуг;
	ТекОтветственный = ПараметрыСеанса.ТекущийПользователь;
	Для Каждого СтрокаТаблицы Из СтрокиКОбработке Цикл
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.ДокументПоступления) Тогда
			Продолжить;
		КонецЕсли;
		
		ОбъектДокумента = ДокиПоступление.СоздатьДокумент();
		ОбъектДокумента.Заполнить(СтрокаТаблицы.Заявка);
		ОбъектДокумента.Дата 					= ТекущаяДата();
		ОбъектДокумента.НеВыгружатьВБУ			= Истина;
		ОбъектДокумента.НомерВходящегоДокумента = "АВЗ";
		ОбъектДокумента.ДатаВходящегоДокумента 	= ТекущаяДата();
		ОбъектДокумента.Ответственный 			= ТекОтветственный;
		ОбъектДокумента.Комментарий				= СокрЛП(СтрокаТаблицы.Заявка.НазначениеПлатежа);
		
		Попытка
			ОбъектДокумента.Записать(РежимЗаписиДокумента.Проведение);
			Сообщить("Создан и проведен документ " + ОбъектДокумента);
			СтрокаТаблицы.ДокументПоступления 			= ОбъектДокумента.Ссылка;
			СтрокаТаблицы.ДокументПоступленияПроведен 	= Ложь;
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьПоступления(Команда)
	
	СоздатьПоступленияСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЗаявокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	Если Поле.Имя = "ТаблицаЗаявокЗаявка" Тогда
		
		Ключ = Новый Структура("Ключ", Элементы.ТаблицаЗаявок.ДанныеСтроки(ВыбраннаяСтрока).Заявка);
		ФормаЭлемента = ПолучитьФорму("Документ.ЗаявкаНаРасходованиеСредств.Форма.ФормаДокумента", Ключ);    
		ФормаЭлемента.Открыть();
		
	ИначеЕсли Поле.Имя = "ТаблицаЗаявокДокументПоступления" Тогда
		
		ТекСтрока = Элементы.ТаблицаЗаявок.ДанныеСтроки(ВыбраннаяСтрока);
		ТекПоступление = ТекСтрока.ДокументПоступления;
		Если ЗначениеЗаполнено(ТекПоступление) Тогда
			Ключ = Новый Структура("Ключ", ТекПоступление);
			ФормаЭлемента = ПолучитьФорму("Документ.ПоступлениеТоваровУслуг.Форма.ФормаДокумента", Ключ);    
			ФормаЭлемента.ОткрытьМодально();
			ТекСтрока.ДокументПоступленияПроведен = ТекСтрока.ДокументПоступления.Проведен;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусыДокументовПоступления(Команда)
	
	Для Каждого СтрокаТаблицы Из ЭтаФорма.ТаблицаЗаявок Цикл
		Если СтрокаТаблицы.ДокументПоступления.Пустая() Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицы.ДокументПоступленияПроведен = СтрокаТаблицы.ДокументПоступления.Проведен;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОтработкиПриИзменении(Элемент)
	ЗаполнитьЗаявкиНаРасходДС()
КонецПроцедуры
