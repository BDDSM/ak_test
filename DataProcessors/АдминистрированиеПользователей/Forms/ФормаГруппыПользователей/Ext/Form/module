Перем ТекущаяГруппаСтрокаСписка; // Содержит строку текущей группы

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ

Процедура ОбновитьЗаголовок()

	ТекстЗаголовка = "Группы пользователей";
	Если ТекущаяГруппаСтрокаСписка <> Неопределено
		И НЕ СправочникОбъект.Ссылка.Пустая() Тогда
		
		Если СправочникОбъект.ЭтоНовый() Тогда
			ТекстЗаголовка = ТекстЗаголовка + ": Новый";
		Иначе			
			ТекстЗаголовка = ТекстЗаголовка + ": " + СокрЛП(СправочникОбъект.Наименование);
		КонецЕсли; 
	КонецЕсли; 
	
	Заголовок = ТекстЗаголовка;
	
КонецПроцедуры // ОбновитьЗаголовок

Процедура УстановитьДоступность()

	ДоступностьОбъекта = НЕ СправочникОбъект.Ссылка.Пустая() И НЕ СправочникОбъект.ЭтоГруппа;
	
	ЭлементыФормы.СписокПользователи.Доступность = ДоступностьОбъекта;
	ЭлементыФормы.ПользователиГруппы.Доступность    = ДоступностьОбъекта;
	
	
	ЭлементыФормы.КнопкаДобавитьПользователя.Доступность = ДоступностьОбъекта;
	ЭлементыФормы.КнопкаУдалитьПользователя.Доступность  = ДоступностьОбъекта;
	
	Если ДоступностьОбъекта Тогда
		ЭлементыФормы.СписокПользователи.ЦветФонаПоля = Новый Цвет;
		ЭлементыФормы.ПользователиГруппы.ЦветФонаПоля    = Новый Цвет;
	Иначе
		ЭлементыФормы.СписокПользователи.ЦветФонаПоля = ЦветаСтиля.ЦветФонаФормы;
		ЭлементыФормы.ПользователиГруппы.ЦветФонаПоля    = ЦветаСтиля.ЦветФонаФормы;
	КонецЕсли;
	
КонецПроцедуры // УстановитьДоступность


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ СПИСКА ГРУПП ПОЛЬЗОВАТЕЛЕЙ

// Функция записывает текущую группу пользователей
//
Функция СохранитьТекущуюГруппу(Спрашивать)
	
	Если ТекущаяГруппаСтрокаСписка = Неопределено 
		ИЛИ СправочникОбъект.Ссылка.Пустая()
		ИЛИ СправочникОбъект.ЭтоГруппа Тогда
		
		Возврат Истина;
	КонецЕсли; 
	
	ФлагЗаписи = СправочникОбъект.ЭтоНовый() ИЛИ СправочникОбъект.Модифицированность();
	
	Если Спрашивать И ФлагЗаписи Тогда
		Ответ = Вопрос("Группа пользователей """ + СправочникОбъект.Наименование + """ была изменена. Сохранить?", РежимДиалогаВопрос.ДаНетОтмена);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			
			Если НЕ СправочникОбъект.ЭтоНовый() Тогда
				СправочникОбъект.Прочитать();
			КонецЕсли; 
			
			Возврат Истина;
			
		ИначеЕсли Ответ <> КодВозвратаДиалога.Да Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ФлагЗаписи Тогда
		Если ПустаяСтрока(СправочникОбъект.Наименование) Тогда
			Предупреждение("Не указано наименование!"); 
			Возврат Ложь;
		КонецЕсли;
		
		НовыйОбъект = СправочникОбъект.ЭтоНовый();
		
		СправочникОбъект.Записать();
		
		ОбновитьЗаголовок();
		
	КонецЕсли;
	
	Возврат Истина;

КонецФункции // СохранитьТекущуюГруппу

// Функция обрабатывает действие, связанное с активацией строки
//
Функция ОбработкаПриАктивизацииСтрокиСпискаГрупп(ТекущиеДанные)

	Если ТекущиеДанные = Неопределено ИЛИ ТекущиеДанные.Ссылка <> СправочникОбъект.Ссылка Тогда
		// Перешли на другую группу пользователей
		
		Если НЕ СохранитьТекущуюГруппу(Истина) Тогда
			// Отменили выбор строки. Сделаем активной предыдущую строку
			ЭлементыФормы.СправочникСписок.ТекущаяСтрока = ТекущаяГруппаСтрокаСписка;
			Возврат Ложь;
		КонецЕсли;
		
		Если ТекущиеДанные <> Неопределено Тогда
			СправочникОбъект = ТекущиеДанные.Ссылка.ПолучитьОбъект();
		Иначе
			СправочникОбъект = Неопределено;
		КонецЕсли;
		
		ОбновитьЗаголовок();
		
	КонецЕсли; 
	
	ТекущаяГруппаСтрокаСписка = ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	
	УстановитьДоступность();
	
	Возврат Истина;

КонецФункции // ОбработкаПриАктивизацииСтрокиСпискаГрупп

// Обработчик события ПриАктивизацииСтроки табличного поля СправочникСписок
//
Процедура СправочникСписокПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
	
	ОбработкаПриАктивизацииСтрокиСпискаГрупп(ТекущиеДанные);
	
КонецПроцедуры

// Процедура добавляет пользователей входящих в группу
//
Процедура ДобавитьПользователейГруппы(ГруппаСсылка)

	Запрос = Новый Запрос;
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	Пользователи.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Пользователи КАК Пользователи
	               |ГДЕ
	               |	Пользователи.Ссылка В ИЕРАРХИИ(&Ссылка)
	               |	И (НЕ Пользователи.Ссылка В (&СписокПользователейГруппы))
	               |	И (НЕ Пользователи.ЭтоГруппа)";
	 
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", ГруппаСсылка);
	Запрос.УстановитьПараметр("СписокПользователейГруппы", СправочникОбъект.ПользователиГруппы.ВыгрузитьКолонку("Пользователь"));
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НовыйПользователь = СправочникОбъект.ПользователиГруппы.Добавить();
		НовыйПользователь.Пользователь = Выборка.Ссылка;
	КонецЦикла;
	
КонецПроцедуры // ДобавитьПользователейГруппы
 
// Процедура добавляет выбранных пользователей в состав группы пользователей
// Если среди выбранных строк есть группа пользователей, то добавляются все пользователи группы
//
Процедура ДобавитьВыбранныхПользователей()
	
	ФлагДобавлятьПользователейГруппы = Неопределено;
	
	Для каждого СтрокаСписка Из ЭлементыФормы.СписокПользователи.ВыделенныеСтроки Цикл
		Если СтрокаСписка.Ссылка.ЭтоГруппа Тогда
			Если ФлагДобавлятьПользователейГруппы = Неопределено Тогда
				Ответ = Вопрос("Добавить всех пользователей группы?", РежимДиалогаВопрос.ДаНет);
				Если Ответ <> КодВозвратаДиалога.Да Тогда
					ФлагДобавлятьПользователейГруппы = Ложь;
					Продолжить;
				КонецЕсли;
				ФлагДобавлятьПользователейГруппы = Истина;
			ИначеЕсли НЕ ФлагДобавлятьПользователейГруппы Тогда
				Продолжить;
			КонецЕсли; 
			ДобавитьПользователейГруппы(СтрокаСписка.Ссылка);
		Иначе
			Если СправочникОбъект.ПользователиГруппы.Найти(СтрокаСписка.Ссылка, "Пользователь") = Неопределено Тогда
				НовыйПользователь = СправочникОбъект.ПользователиГруппы.Добавить();
				НовыйПользователь.Пользователь = СтрокаСписка.Ссылка;
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла; 
	
	ОбновитьЗаголовок();
	
КонецПроцедуры // ДобавитьВыбранныхПользователей

// Процедура удаляет выбранных пользователей из состава группы пользователей
//
Процедура УдалитьВыбранныхПользователей()

	СтрокиКУдалению = Новый Массив;
	Для каждого СтрокаСписка Из ЭлементыФормы.ПользователиГруппы.ВыделенныеСтроки Цикл
		СтрокиКУдалению.Добавить(СтрокаСписка);
	КонецЦикла;
	
	Для каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
		СправочникОбъект.ПользователиГруппы.Удалить(СтрокаКУдалению);	
	КонецЦикла; 
	
	ОбновитьЗаголовок();
	
КонецПроцедуры // УдалитьВыбранныхПользователей

// Обработчик события нажатия на кнопку ДействиеРедактироватьПрава
//
Процедура ДействияФормыДействиеРедактироватьПрава(Кнопка)
	
	Если СправочникОбъект.Ссылка.Пустая() ИЛИ СправочникОбъект.ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	НастройкаПравДоступа.РедактироватьПраваДоступа(СправочникОбъект.Ссылка);
	
КонецПроцедуры // ДействияГруппПользователейДействиеРедактироватьПрава 

// Обработчик события нажатия на кнопку ДействиеЗаписатьГруппуПользователя
//
Процедура ОсновныеДействияФормыДействиеЗаписатьГруппуПользователя(Кнопка)
	
	СохранитьТекущуюГруппу(Ложь);
	
КонецПроцедуры

// Обработчик события нажатия на кнопку ДействиеЗаписатьГруппуПользователяИЗакрыть
//
Процедура ОсновныеДействияФормыДействиеЗаписатьГруппуПользователяИЗакрыть(Кнопка)
	
	Если СохранитьТекущуюГруппу(Ложь) Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзменитьВидимостьПанелиПоГоризонтали()

	Если ОтображатьПодборПользователей Тогда
		
		Если ЭлементыФормы.ПанельПодборПользователей.Свертка = РежимСверткиЭлементаУправления.Право Тогда
			
			ЭлементыФормы.РазделительПодборПользователей.Свертка = РежимСверткиЭлементаУправления.Нет;
			ЭлементыФормы.ПанельПодборПользователей.Свертка = РежимСверткиЭлементаУправления.Нет;
			
			ЭлементыФормы.РазделительПодборПользователей.УстановитьПривязку(ГраницаЭлементаУправления.Право, Этаформа.Панель, ГраницаЭлементаУправления.Лево, Этаформа.Панель, ГраницаЭлементаУправления.Право);
			ЭлементыФормы.ПанельПодборПользователей.УстановитьПривязку(ГраницаЭлементаУправления.Лево, ЭлементыФормы.РазделительПодборПользователей, ГраницаЭлементаУправления.Право);
			
		КонецЕсли; 
		
	Иначе
		
		Если ЭлементыФормы.ПанельПодборПользователей.Свертка = РежимСверткиЭлементаУправления.Нет Тогда
			
			ЭлементыФормы.ПанельПодборПользователей.УстановитьПривязку(ГраницаЭлементаУправления.Лево);
			ЭлементыФормы.РазделительПодборПользователей.УстановитьПривязку(ГраницаЭлементаУправления.Право, ЭлементыФормы.ПанельПодборПользователей, ГраницаЭлементаУправления.Лево);
			
			ЭлементыФормы.ПанельПодборПользователей.Свертка = РежимСверткиЭлементаУправления.Право;
			ЭлементыФормы.РазделительПодборПользователей.Свертка = РежимСверткиЭлементаУправления.Право;
			
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры //
 
Процедура УправлениеВидимостьюПодбораПользователей()

	ИзменитьВидимостьПанелиПоГоризонтали();
	
	ЭлементыФормы.ДействияФормы.Кнопки.ДействиеОтображатьПодбор.Пометка = ОтображатьПодборПользователей;
	
КонецПроцедуры //
 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ СПИСКА ПОЛЬЗОВАТЕЛЕЙ

Процедура СписокПользователиВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДобавитьВыбранныхПользователей();	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()	
	
	Если НЕ Константы.ИспользоватьОграниченияПравДоступаНаУровнеЗаписей.Получить() Тогда
		ЭлементыФормы.ДействияФормы.Кнопки.Удалить(ЭлементыФормы.ДействияФормы.Кнопки.ДействиеРедактироватьПрава);
	КонецЕсли; 
	
	СправочникСписок.Отбор.Ссылка.ВидСравнения = ВидСравнения.НеРавно;	
	СправочникСписок.Отбор.Ссылка.Значение = Справочники.ГруппыПользователей.ВсеПользователи;
	СправочникСписок.Отбор.Ссылка.Использование = Истина;

	УправлениеВидимостьюПодбораПользователей();
	
КонецПроцедуры

Процедура КнопкаДобавитьПользователяНажатие(Элемент)
	
	ДобавитьВыбранныхПользователей();	
	
КонецПроцедуры

Процедура КнопкаУдалитьПользователяНажатие(Элемент)
	
	УдалитьВыбранныхПользователей();
	
КонецПроцедуры

Процедура КоманднаяПанельСоставГруппыДействиеДействиеОтображатьПодбор(Кнопка)
	
	ОтображатьПодборПользователей = НЕ ОтображатьПодборПользователей;
	
	УправлениеВидимостьюПодбораПользователей();
	
КонецПроцедуры



