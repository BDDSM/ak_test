
Процедура ОткрытьФормуПоЭлементуМеню(СсылкаЭлементаМеню)Экспорт
		
	Перем РазделМетаданных, ВидФормы, ИмяМетаданных, ТипЭлемента, ФормаДляОткрытия;
	
	Если СсылкаЭлементаМеню.ЭтоГруппа Тогда
		Запрос = Новый Запрос();
		Запрос.Текст = "ВЫБРАТЬ
		               |	МенюБыстрогоДоступа.Ссылка
		               |ИЗ
		               |	Справочник.МенюБыстрогоДоступа КАК МенюБыстрогоДоступа
		               |ГДЕ
		               |	МенюБыстрогоДоступа.Ссылка В ИЕРАРХИИ(&Ссылка)
		               |	И МенюБыстрогоДоступа.ЭтоГруппа = ЛОЖЬ
		               |	И МенюБыстрогоДоступа.Владелец = &Владелец";
					   
		Запрос.УстановитьПараметр("Ссылка", СсылкаЭлементаМеню);
		Запрос.УстановитьПараметр("Владелец", ПараметрыСеанса.ТекущийПользователь);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ОткрытьФормуПоЭлементуМеню(Выборка.Ссылка);
		КонецЦикла;
		Возврат;
	КонецЕсли;	
	
	СтурктураДанных = СсылкаЭлементаМеню.ХранилищеНастроек.Получить();
	Если ТипЗнч(СтурктураДанных) <> Тип("Структура") Тогда
		Сообщить("Ошибка при открытии. Обратитесь к администратору!", СтатусСообщения.Внимание);
		Возврат;		
	КонецЕсли;
	
	ФормаДляОткрытия = Неопределено;
	
	Попытка
		
		Если СтурктураДанных.Свойство("ТипЭлемента", ТипЭлемента) Тогда
			
			Если ТипЭлемента = "Форма" Тогда
				
				Если СтурктураДанных.Свойство("ВидФормы", ВидФормы) Тогда
					
					Если ВидФормы = "ФормаСписка" Тогда
						
						//ФормаДляОткрытия = ПолучитьФорму("Документ.ЛистУчета.ФормаСписка");
						Выполнить("ФормаДляОткрытия = "+ СтурктураДанных.РазделМетаданных +"."+  СтурктураДанных.ИмяМетаданных+"."+"ПолучитьФормуСписка()");	
						
					ИначеЕсли ВидФормы = "ФормаОтчета" Тогда
						
						Выполнить("ФормаДляОткрытия = "+ СтурктураДанных.РазделМетаданных +"."+ СтурктураДанных.ИмяМетаданных+"."+"ПолучитьФорму()");
					ИначеЕсли ВидФормы = "ФормаОбработки" Тогда
						
						Выполнить("ФормаДляОткрытия = "+ СтурктураДанных.РазделМетаданных +"."+ СтурктураДанных.ИмяМетаданных+"."+"ПолучитьФорму()");
						
					ИначеЕсли ВидФормы = "ФормаНового" Тогда  
						
						Если СтурктураДанных.РазделМетаданных = "Справочники" Тогда
							Выполнить("ФормаДляОткрытия =" + СтурктураДанных.РазделМетаданных + "." + СтурктураДанных.ИмяМетаданных + "." + "ПолучитьФормуНовогоЭлемента()");
						ИначеЕсли СтурктураДанных.РазделМетаданных = "Документы" Тогда
							Выполнить("ФормаДляОткрытия =" + СтурктураДанных.РазделМетаданных + "." + СтурктураДанных.ИмяМетаданных + "." + "ПолучитьФормуНовогоДокумента()");
						ИначеЕсли СтурктураДанных.РазделМетаданных = "Задачи" Тогда
							Выполнить("ФормаДляОткрытия =" + СтурктураДанных.РазделМетаданных + "." + СтурктураДанных.ИмяМетаданных + "." + "ПолучитьФормуНовойЗадачи()");
						КонецЕсли;
						
					ИначеЕсли ВидФормы = "ФормаЭлемента" Тогда 			
						ФормаДляОткрытия = СтурктураДанных.Значение.ПолучитьФорму();	
					ИначеЕсли ВидФормы = "ОбщаяФорма" Тогда 			
						ФормаДляОткрытия = ПолучитьОбщуюФорму(СтурктураДанных.ИмяМетаданных);
					КонецЕсли;	
					
								
				КонецЕсли; 
				
			
			КонецЕсли;			
			
			Если ТипЗнч(ФормаДляОткрытия) = Тип("Форма") Тогда	
				//ФормаДляОткрытия.КлючУникальности = Новый УникальныйИдентификатор;
				
				ФормаДляОткрытия.Открыть();
				
				Если ТаблицаОткрытыеФормы.Найти(СсылкаЭлементаМеню, "Ссылка") = Неопределено Тогда
					СтрокаТаблицыОткрытыеФормы = ТаблицаОткрытыеФормы.Добавить();
					СтрокаТаблицыОткрытыеФормы.Ссылка = СсылкаЭлементаМеню;
					СтрокаТаблицыОткрытыеФормы.Форма = ФормаДляОткрытия;
					СтрокаТаблицыОткрытыеФормы.Наименование = СсылкаЭлементаМеню.Наименование;
					СтрокаТаблицыОткрытыеФормы.Комментарий = СсылкаЭлементаМеню.Комментарий;
					СтрокаТаблицыОткрытыеФормы.Группа = СсылкаЭлементаМеню.Родитель;
				КонецЕсли;	
			ИначеЕсли ТипЗнч(ФормаДляОткрытия) = Тип("УправляемаяФорма") Тогда	
				//ФормаДляОткрытия.КлючУникальности = Новый УникальныйИдентификатор;
				
				ФормаДляОткрытия.Открыть();
				
				Если ТаблицаОткрытыеФормы.Найти(СсылкаЭлементаМеню, "Ссылка") = Неопределено Тогда
					СтрокаТаблицыОткрытыеФормы = ТаблицаОткрытыеФормы.Добавить();
					СтрокаТаблицыОткрытыеФормы.Ссылка = СсылкаЭлементаМеню;
					СтрокаТаблицыОткрытыеФормы.Форма = ФормаДляОткрытия;
					СтрокаТаблицыОткрытыеФормы.Наименование = СсылкаЭлементаМеню.Наименование;
					СтрокаТаблицыОткрытыеФормы.Комментарий = СсылкаЭлементаМеню.Комментарий;
					СтрокаТаблицыОткрытыеФормы.Группа = СсылкаЭлементаМеню.Родитель;
				КонецЕсли;	
				
			КонецЕсли;			
		КонецЕсли;
		
	Исключение
		Сообщить("Не удалось открыть форму по данному элементу меню.", СтатусСообщения.Внимание);
	КонецПопытки;
		
КонецПроцедуры

Процедура СохранитьРеквизитыВФайл(Реквизиты)Экспорт
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Заголовок = "Выберите файл для сохранения настроек.";
	Диалог.ПолноеИмяФайла = "";
	Диалог.Расширение = "menu";
	Диалог.Фильтр = "Файлы настроек меню быстрого доступа (*.menu)|*.menu"; 
	Если Диалог.Выбрать() Тогда
		Попытка
			ЗначениеВФайл(Диалог.ПолноеИмяФайла, Реквизиты);
		Исключение
			Предупреждение("Не удалось записать файл настроек.",30);
		КонецПопытки;
	КонецЕсли;	
КонецПроцедуры

Функция ПолучитьРеквизитыДляСохранения(СсылкиМассив)Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МенюБыстрогоДоступа.Родитель.Наименование,
	               |	МенюБыстрогоДоступа.ЭтоГруппа,
	               |	МенюБыстрогоДоступа.Наименование,
	               |	МенюБыстрогоДоступа.Комментарий,
	               |	МенюБыстрогоДоступа.ХранилищеНастроек,
	               |	МенюБыстрогоДоступа.ИмяКартинки
	               |ИЗ
	               |	Справочник.МенюБыстрогоДоступа КАК МенюБыстрогоДоступа
	               |ГДЕ
	               |	МенюБыстрогоДоступа.Ссылка В(&СписокСсылок)
	               |	И НЕ МенюБыстрогоДоступа.Ссылка = ЗНАЧЕНИЕ(Справочник.МенюБыстрогоДоступа.ПустаяСсылка)";
	
	Запрос.УстановитьПараметр("СписокСсылок", СсылкиМассив);
	
	ТаблицаВозврата = Запрос.Выполнить().Выгрузить();
	ТаблицаВозврата.Колонки.Добавить("ЗначениеХранилищаНастроек");
	Для каждого Строка Из ТаблицаВозврата Цикл
		Строка.ЗначениеХранилищаНастроек = Строка.ХранилищеНастроек.Получить();	
	КонецЦикла; 
	
	Возврат ТаблицаВозврата;		
	
КонецФункции
	
Функция ВосстановитьРеквизитыИзФайла(Настройки)Экспорт
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = "Выберите файл сохраненных настроек.";
	Диалог.ПолноеИмяФайла = "";
	Диалог.Расширение = "rep";
	Диалог.Фильтр = "Файлы настроек меню быстрого доступа(*.menu)|*.menu"; 
	Если Диалог.Выбрать() Тогда
		Попытка
			Настройки = ЗначениеИзФайла(Диалог.ВыбранныеФайлы[0]);			
			Возврат Истина;
		Исключение
			Предупреждение("Не удалось открыть файл настроек.",30);
			Возврат Ложь;
		КонецПопытки;
	Иначе
		Возврат Ложь;
	КонецЕсли;	
	
КонецФункции

Процедура ЗагрузитьРеквизитыМеню(Реквизиты, Режим)Экспорт
	
	Если ТипЗнч(Реквизиты) <> Тип("ТаблицаЗначений") Тогда
		Предупреждение("Не соответствует формат полученных настроек!",20);	
		Возврат;			
	КонецЕсли;
	Реквизиты.Сортировать("ЭтоГруппа УБЫВ");
	Реквизиты.Колонки.Добавить("ОбъектСправочника");	
	Состояние("Загрузка данных");  	    
	
	Если Режим = 3 Тогда
		Выборка = Справочники.МенюБыстрогоДоступа.Выбрать(, Сотрудник);	
		Пока Выборка.Следующий() Цикл
			ЭлементМеню = Выборка.ПолучитьОбъект();
			Попытка
				ЭлементМеню.Удалить();
			Исключение
				Продолжить;
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	
	Если Режим = 2 Тогда
		НайденнаяГруппаОбщая = Справочники.МенюБыстрогоДоступа.НайтиПоНаименованию(ИмяГруппы,,, Сотрудник);	
		Если НайденнаяГруппаОбщая.Пустая() Тогда
			НовГруппа = Справочники.ЭС_МБ_ЭлементыМеню.СоздатьГруппу();
			НовГруппа.Наименование = ИмяГруппы;
			НовГруппа.Владелец = Сотрудник;
			НовГруппа.Записать();
			
			НайденнаяГруппаОбщая = НовГруппа.Ссылка;			
		КонецЕсли;		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МенюБыстрогоДоступа.Ссылка КАК Группа,
	               |	МенюБыстрогоДоступа.Наименование
	               |ИЗ
	               |	Справочник.МенюБыстрогоДоступа КАК МенюБыстрогоДоступа
	               |ГДЕ
	               |	МенюБыстрогоДоступа.ЭтоГруппа
	               |	И МенюБыстрогоДоступа.Владелец = &Владелец
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	МенюБыстрогоДоступа.Ссылка,
	               |	МенюБыстрогоДоступа.Наименование";
	
	Запрос.УстановитьПараметр("Владелец", Сотрудник);
	
	ТаблицаПодчинненыхГрупп = Запрос.Выполнить().Выгрузить();
	
	МенеджерМБСправочник = Справочники.МенюБыстрогоДоступа;
	
	Для Каждого Строка Из Реквизиты Цикл
		Если Строка.ЭтоГруппа Тогда
			НайденнаяГруппа = ТаблицаПодчинненыхГрупп.Найти(Строка.Наименование, "Наименование");
			Если НайденнаяГруппа = Неопределено Тогда
				НовОбъект = Справочники.МенюБыстрогоДоступа.СоздатьГруппу();
				ЗаполнитьЗначенияСвойств(НовОбъект, Строка,,"ИмяКартинки");
			Иначе    
				Строка.ОбъектСправочника = МенеджерМБСправочник.НайтиПоНаименованию(Строка.Наименование,,,Сотрудник).ПолучитьОбъект();
				Продолжить;
			КонецЕсли; 			
		ИначеЕсли НЕ Строка.ЭтоГруппа Тогда
			НовОбъект = Справочники.МенюБыстрогоДоступа.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(НовОбъект, Строка);
		КонецЕсли;             		
		НовОбъект.ХранилищеНастроек = Новый ХранилищеЗначения(Строка.ЗначениеХранилищаНастроек);
		//НовОбъект.Сотрудник = ПараметрыСеанса.Сотрудник;
		НовОбъект.Владелец = Сотрудник;
		
		НовОбъект.Записать();
		Строка.ОбъектСправочника = НовОбъект;
	КонецЦикла;  	
	
	ТаблицаПодчинненыхГрупп = Запрос.Выполнить().Выгрузить();
	Для Каждого Строка Из Реквизиты Цикл
		
		Если НЕ Строка.РодительНаименование = "" И НЕ Строка.РодительНаименование = NULL Тогда
			
			Если Строка.ОбъектСправочника = Неопределено Тогда
				Продолжить;    						
			КонецЕсли;
			
			НайденныйРодитель = ТаблицаПодчинненыхГрупп.Найти(Строка.РодительНаименование, "Наименование");
			Если НайденныйРодитель = Неопределено Тогда
				Продолжить;    						
			КонецЕсли; 
			Строка.ОбъектСправочника.Родитель = НайденныйРодитель.Группа;
			
			Строка.ОбъектСправочника.Записать();
		КонецЕсли; 
		
		Если Режим = 2 Тогда
			Если НЕ Строка.ОбъектСправочника = Неопределено И Строка.ОбъектСправочника.Родитель.Пустая() Тогда
				Строка.ОбъектСправочника.Родитель = НайденнаяГруппаОбщая;	
				Строка.ОбъектСправочника.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОчиститьНастройки()Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МенюБыстрогоДоступа.Ссылка
	               |ИЗ
	               |	Справочник.МенюБыстрогоДоступа КАК МенюБыстрогоДоступа
	               |ГДЕ
	               |	МенюБыстрогоДоступа.Владелец = &Сотрудник";

	Запрос.УстановитьПараметр("Сотрудник", СотрудникВладелецМеню);

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();

	Пока Выборка.Следующий() Цикл
		ОбъектМеню = Выборка.Ссылка.ПолучитьОбъект();
		ОбъектМеню.Удалить();
	КонецЦикла;
		
КонецПроцедуры




//* Инициализация таблицы открытых форм
ТаблицаОткрытыеФормы.Колонки.Добавить("Наименование");   
ТаблицаОткрытыеФормы.Колонки.Добавить("Комментарий");
ТаблицаОткрытыеФормы.Колонки.Добавить("Ссылка");
ТаблицаОткрытыеФормы.Колонки.Добавить("Группа");
ТаблицаОткрытыеФормы.Колонки.Добавить("Форма");


