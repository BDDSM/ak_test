Процедура СправочникСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
		
	Если Колонка.Имя = "Комментарий" Тогда
		Возврат;
	КонецЕсли;
	
	//Если ВыбраннаяСтрока.ЭтоГруппа Тогда
	//	Возврат;
	//КонецЕсли;
	Если Не ЗначениеЗаполнено(ВыбраннаяСтрока) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;	
	ОткрытьФормуПоЭлементуМеню(ВыбраннаяСтрока);
	//ПодключитьОбработчикОжидания("ОбновитьСтроки_Подключаемый", 1, Истина);
КонецПроцедуры

Процедура ПриОткрытии()
	
	ПодключитьОбработчикОжидания("ПроверкаТаблицыОткрытыхФорм_Подключаемый", 1); 
	
КонецПроцедуры

Процедура КоманднаяПанельЛеваяДействие3(Кнопка)
	
	Список = Новый СписокЗначений;
	Список.Добавить(0, "Сохранить выделенные");
	Список.Добавить(1, "Сохранить все");
	//Список.Добавить("Картинка",,,БиблиотекаКартинок.Картинка1);
	Вид = ВыбратьИзМеню(Список, ЭлементыФормы.Кнопка1);
	Если Вид = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если Вид.Значение = 0 Тогда
		
		ВыделенныеСтроки = ЭлементыФормы.СправочникСписок.ВыделенныеСтроки;
		Если ВыделенныеСтроки.Количество() = 0 Тогда
			Сообщить("Выделите пункты меню, которые необходимо сохранить в файл!", СтатусСообщения.Внимание);
			Возврат;
		КонецЕсли;
		Для каждого Строка Из ВыделенныеСтроки Цикл
			//Если ВыделенныеСтроки.Содержит() = Истина Тогда
			//	Продолжить;		
			//КонецЕсли; 	
			Если Не Строка.Родитель.Пустая() Тогда
				ВыделенныеСтроки.Добавить(Строка.Родитель);			 
				Если Не Строка.Родитель.Родитель.Пустая() Тогда
					ВыделенныеСтроки.Добавить(Строка.Родитель.Родитель);	
					Если Не Строка.Родитель.Родитель.Родитель.Пустая() Тогда
						ВыделенныеСтроки.Добавить(Строка.Родитель.Родитель.Родитель);				
						Если Не Строка.Родитель.Родитель.Родитель.Родитель.Пустая() Тогда
							ВыделенныеСтроки.Добавить(Строка.Родитель.Родитель.Родитель.Родитель);	
						КонецЕсли;  
					КонецЕсли;
				КонецЕсли; 
			КонецЕсли;
		КонецЦикла;  
		
	ИначеЕсли Вид.Значение = 1 Тогда
		
		ВыделенныеСтроки = Новый Массив;
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	МенюБыстрогоДоступа.Ссылка
		               |ИЗ
		               |	Справочник.МенюБыстрогоДоступа КАК МенюБыстрогоДоступа
		               |ГДЕ
		               |	МенюБыстрогоДоступа.Владелец = &Сотрудник";


		Запрос.УстановитьПараметр("Сотрудник", СотрудникВладелецМеню);

		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();

		Пока Выборка.Следующий() Цикл
			ВыделенныеСтроки.Добавить(Выборка.Ссылка);		
		КонецЦикла; 		
		
	Иначе
		Возврат;
	КонецЕсли;
	
	РеквизитыДляСохранения = ПолучитьРеквизитыДляСохранения(ВыделенныеСтроки);
	ВыделенныеСтроки.Очистить();
	СохранитьРеквизитыВФайл(РеквизитыДляСохранения);
	
КонецПроцедуры

Процедура КоманднаяПанельЛеваяДействие5(Кнопка) 	
	Перем Настройки;
	
	ОкноВыбораРежимаЗагрузки = ПолучитьФорму("ФормаРежимЗагрузки");
	Режим = ОкноВыбораРежимаЗагрузки.ОткрытьМодально();
	Если Режим = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ВосстановитьРеквизитыИзФайла(Настройки) Тогда
		ЗагрузитьРеквизитыМеню(Настройки, Режим);		
	КонецЕсли;
	
 КонецПроцедуры

Процедура КоманднаяПанельЛеваяОчистить(Кнопка)
	Если Вопрос("Действительно хотите очистить текущие настройки?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		ОчиститьНастройки();
	КонецЕсли;	
КонецПроцедуры

Процедура СправочникСписокПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ТаблицаОткрытыеФормы.Найти(ДанныеСтроки.Ссылка, "Ссылка") <> Неопределено Тогда
		ОформлениеСтроки.Шрифт = Новый Шрифт(ОформлениеСтроки.Шрифт,,, Истина);
	Иначе
		ОформлениеСтроки.Шрифт = Новый Шрифт(ОформлениеСтроки.Шрифт,,, Ложь);
	КонецЕсли;
	Если ЗначениеЗаполнено(ДанныеСтроки.ИмяКартинки) Тогда
		ОформлениеСтроки.Ячейки.Наименование.Картинка = БиблиотекаКартинок[ДанныеСтроки.ИмяКартинки];
	КонецЕсли;
КонецПроцедуры

Процедура ТП_ОткрытыеФормыВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	Если Колонка.Имя = "Комментарий" Тогда
		Возврат;
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
	Если Колонка.Имя = "Закрыть" Тогда
		ВыбраннаяСтрока.Форма.Закрыть();
		Возврат;
	КонецЕсли;
	Если ТипЗнч(ВыбраннаяСтрока.Форма) = Тип("Форма")
		ИЛИ ТипЗнч(ВыбраннаяСтрока.Форма) = Тип("УправляемаяФорма") Тогда
		//Если ВыбраннаяСтрока.Форма.Открыта() Тогда
		//	ВыбраннаяСтрока.Форма.Активизировать();
		//Иначе
			ВыбраннаяСтрока.Форма.Открыть();
		//КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ПроверкаТаблицыОткрытыхФорм_Подключаемый()
	Если ТаблицаОткрытыеФормы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	Счетчик = 0;
	Пока Счетчик < ТаблицаОткрытыеФормы.Количество() Цикл
		СтрокаТаблицыОткрытыеФормы = ТаблицаОткрытыеФормы[Счетчик];
		Если (ТипЗнч(СтрокаТаблицыОткрытыеФормы.Форма) = Тип("Форма") ИЛИ ТипЗнч(СтрокаТаблицыОткрытыеФормы.Форма) = Тип("УправляемаяФорма"))
			И СтрокаТаблицыОткрытыеФормы.Форма.Открыта() Тогда
			Счетчик = Счетчик + 1;
		Иначе
			ТаблицаОткрытыеФормы.Удалить(СтрокаТаблицыОткрытыеФормы);
		КонецЕсли;
	КонецЦикла;
	//ВыделитьСоответствующиеЭлементыМенюИОткрытыеФормы();
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
КонецПроцедуры

Процедура СправочникСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	Если НЕ ЭтоГруппа Тогда
		ЭлементыФормы.СправочникСписок.СпособРедактирования = СпособРедактированияСписка.ВДиалоге;
		ПодключитьОбработчикОжидания("УстановитьРедактированиеВСписке_Подключаемый", 1, Истина);
	КонецЕсли;
КонецПроцедуры

Процедура СправочникСписокПередНачаломИзменения(Элемент, Отказ)
	ТекущиеДанные = Элемент.ТекущиеДанные; 
	
	Если НЕ ТекущиеДанные.ЭтоГруппа 
		И Элемент.ТекущаяКолонка.Имя <> "Комментарий"
		Тогда
		ЭлементыФормы.СправочникСписок.СпособРедактирования = СпособРедактированияСписка.ВДиалоге;
		ПодключитьОбработчикОжидания("УстановитьРедактированиеВСписке_Подключаемый", 1, Истина);
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьРедактированиеВСписке_Подключаемый()
	ЭлементыФормы.СправочникСписок.СпособРедактирования = СпособРедактированияСписка.ВСписке;
КонецПроцедуры

Процедура СправочникСписокПриАктивизацииСтроки(Элемент)
	ВыделитьСоответствующиеЭлементыМенюИОткрытыеФормы();	
КонецПроцедуры

Процедура ВыделитьСоответствующиеЭлементыМенюИОткрытыеФормы()
	ТекущаяСтрока = ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	НайденнаяОткрытаяФорма = ТаблицаОткрытыеФормы.Найти(ТекущаяСтрока, "Ссылка");
	Если НайденнаяОткрытаяФорма = Неопределено Тогда
		ЭлементыФормы.ТП_ОткрытыеФормы.ВыделенныеСтроки.Очистить();
	Иначе
		ЭлементыФормы.ТП_ОткрытыеФормы.ТекущаяСтрока = НайденнаяОткрытаяФорма;
	КонецЕсли;	
КонецПроцедуры


Процедура КоманднаяПанель2ЗакрытьФорму(Кнопка)
	
	Если ТаблицаОткрытыеФормы.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли;
	
	ТекущиеДанные = ЭлементыФормы.ТП_ОткрытыеФормы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Сообщить("Выделите в окне открытых форм форму, которую нужно закрыть!", СтатусСообщения.Важное);
		Возврат;	
	КонецЕсли;	
	ТекущиеДанные.Форма.Закрыть();
КонецПроцедуры

Процедура КоманднаяПанель2АктивизироватьФорму(Кнопка)
	
	Если ТаблицаОткрытыеФормы.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли; 
	
	ТекущиеДанные = ЭлементыФормы.ТП_ОткрытыеФормы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Сообщить("Выделите в окне открытых форм, форму, которую нужно активизировать!", СтатусСообщения.Важное);
		Возврат;	
	КонецЕсли;	
	//ТекущиеДанные.Форма.Активизировать();	
	ТекущиеДанные.Форма.Открыть();	
КонецПроцедуры

Процедура КонтекстноеМенюОткрыть(Кнопка)
	Колонка = ЭлементыФормы.СправочникСписок.ТекущаяКолонка;
	Если Колонка.Имя = "Комментарий" Тогда
		Возврат;
	КонецЕсли;
	ВыбраннаяСтрока = ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	//Если ВыбраннаяСтрока.ЭтоГруппа Тогда
	//	Возврат;
	//КонецЕсли;
	Если Не ЗначениеЗаполнено(ВыбраннаяСтрока) Тогда
		Возврат;
	КонецЕсли;
	
	//СтандартнаяОбработка = Ложь;	
	ОткрытьФормуПоЭлементуМеню(ВыбраннаяСтрока);
		
КонецПроцедуры




Процедура КоманднаяПанель1КнопкаНастройка(Кнопка)
	Если НЕ ПараметрыСеанса.АдминистрированиеРежимаПредприятия 
			И НЕ ПараметрыСеанса.ПользовательИмеетПраваАдминистратора Тогда
		Возврат;
	КонецЕсли;
	
	Если ВвестиЗначение(СотрудникВладелецМеню, "Выберите владельца меню!", Тип("СправочникСсылка.ФизическиеЛица")) = Ложь Тогда
		СотрудникВладелецМеню = ПараметрыСеанса.Сотрудник;		
	КонецЕсли;
	
	ОбновитьМенюБыстрогоДоступа();

КонецПроцедуры

Процедура ОбновитьМенюБыстрогоДоступа()
		
	
	СправочникСписок.Колонки.ИмяКартинки.АвтоУдаление = Ложь;
	ЭлементыФормы.СправочникСписок.Колонки.ИмяКартинки.Видимость = Ложь;
	
	ЭлементыФормы.СправочникСписок.ИерархическийПросмотр = Ложь;
	
	СправочникСписок.Отбор.Владелец.ВидСравнения = ВидСравнения.Равно;
	СправочникСписок.Отбор.Владелец.Значение = ПараметрыСеанса.ТекущийПользователь;
	СправочникСписок.Отбор.Владелец.Использование = Истина;
	
	СправочникСписок.Порядок.Установить("РеквизитСортировки");

КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	ОбновитьМенюБыстрогоДоступа();
	
КонецПроцедуры

Процедура КоманднаяПанель2ЗакрытьВсеФормыГруппы(Кнопка)
	
	Если ТаблицаОткрытыеФормы.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли;
	
	ТекущиеДанные = ЭлементыФормы.ТП_ОткрытыеФормы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Сообщить("Выделите форму, по группе которой следует закрыть все!", СтатусСообщения.Важное);
		Возврат;	
	КонецЕсли;
	Для Каждого СтрокаТаб Из ТаблицаОткрытыеФормы Цикл
		Если СтрокаТаб.Группа = ТекущиеДанные.Группа Тогда
			СтрокаТаб.Форма.Закрыть();
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

Процедура СправочникСписокПередУстановкойПометкиУдаления(Элемент, Отказ)
	
	Отказ = Истина;
	Ответ = Вопрос("Элемент и все подчиненные ему элементы будут удалены. Продолжить?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	ТекЭлемент = ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	Если ЗначениеЗаполнено(ТекЭлемент) Тогда
		Запрос = Новый Запрос();
		Запрос.Текст = "ВЫБРАТЬ
		               |	МенюБыстрогоДоступа.Ссылка
		               |ИЗ
		               |	Справочник.МенюБыстрогоДоступа КАК МенюБыстрогоДоступа
		               |ГДЕ
		               |	МенюБыстрогоДоступа.Ссылка = &Ссылка";
					   
		Запрос.УстановитьПараметр("Ссылка", ТекЭлемент);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СпрОб = Выборка.Ссылка.ПолучитьОбъект();
			СпрОб.Удалить();
		КонецЦикла;	
	КонецЕсли;				   
	
	
КонецПроцедуры

Процедура КоманднаяПанельЛеваяПереместитьВверх(Кнопка)
	
	ТекСтрока = ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	МенюБыстрогоДоступа.Ссылка,
	               |	МенюБыстрогоДоступа.РеквизитСортировки КАК РеквизитСортировки
	               |ИЗ
	               |	Справочник.МенюБыстрогоДоступа КАК МенюБыстрогоДоступа
	               |ГДЕ
	               |	МенюБыстрогоДоступа.Владелец = &Владелец
	               |	И МенюБыстрогоДоступа.Родитель = &Родитель
	               |	И МенюБыстрогоДоступа.РеквизитСортировки < &РеквизитСортировки
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РеквизитСортировки УБЫВ";
				   
	Запрос.УстановитьПараметр("Владелец", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("Родитель", ТекСтрока.Родитель);
	Запрос.УстановитьПараметр("РеквизитСортировки", ТекСтрока.РеквизитСортировки);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СпрОб = Выборка.Ссылка.ПолучитьОбъект();
		СпрОб.РеквизитСортировки = ТекСтрока.РеквизитСортировки;
		СпрОб.Записать();
		
		СпрОб = ТекСтрока.ПолучитьОбъект();
		СпрОб.РеквизитСортировки = Выборка.РеквизитСортировки;
		СпрОб.Записать();
	КонецЕсли;
	
	СправочникСписок.Обновить();
	
КонецПроцедуры

Процедура КоманднаяПанельЛеваяПереместитьВниз(Кнопка)
	
	ТекСтрока = ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	Если ТекСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	МенюБыстрогоДоступа.Ссылка,
	               |	МенюБыстрогоДоступа.РеквизитСортировки КАК РеквизитСортировки
	               |ИЗ
	               |	Справочник.МенюБыстрогоДоступа КАК МенюБыстрогоДоступа
	               |ГДЕ
	               |	МенюБыстрогоДоступа.Владелец = &Владелец
	               |	И МенюБыстрогоДоступа.Родитель = &Родитель
	               |	И МенюБыстрогоДоступа.РеквизитСортировки > &РеквизитСортировки
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	РеквизитСортировки";
				   
	Запрос.УстановитьПараметр("Владелец", ПараметрыСеанса.ТекущийПользователь);
	Запрос.УстановитьПараметр("Родитель", ТекСтрока.Родитель);
	Запрос.УстановитьПараметр("РеквизитСортировки", ТекСтрока.РеквизитСортировки);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СпрОб = Выборка.Ссылка.ПолучитьОбъект();
		СпрОб.РеквизитСортировки = ТекСтрока.РеквизитСортировки;
		СпрОб.Записать();
		
		СпрОб = ТекСтрока.ПолучитьОбъект();
		СпрОб.РеквизитСортировки = Выборка.РеквизитСортировки;
		СпрОб.Записать();
	КонецЕсли;
	
	СправочникСписок.Обновить();
	
КонецПроцедуры

Процедура КоманднаяПанель3ЗакрытьФорму(Кнопка)
	
	Если ТаблицаОткрытыеФормы.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли;
	
	ТекущиеДанные = ЭлементыФормы.ТП_ОткрытыеФормы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Сообщить("Выделите в окне открытых форм форму, которую нужно закрыть!", СтатусСообщения.Важное);
		Возврат;	
	КонецЕсли;	
	ТекущиеДанные.Форма.Закрыть();
	
КонецПроцедуры

Процедура КоманднаяПанель3ЗакрытьВсеФормыГруппы(Кнопка)
	
	Если ТаблицаОткрытыеФормы.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли;
	
	ТекущиеДанные = ЭлементыФормы.ТП_ОткрытыеФормы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Сообщить("Выделите форму, по группе которой следует закрыть все!", СтатусСообщения.Важное);
		Возврат;	
	КонецЕсли;
	Для Каждого СтрокаТаб Из ТаблицаОткрытыеФормы Цикл
		Если СтрокаТаб.Группа = ТекущиеДанные.Группа Тогда
			СтрокаТаб.Форма.Закрыть();
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

Процедура ТП_ОткрытыеФормыПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ЭлементыФормы.ТП_ОткрытыеФормы.Колонки.Закрыть.Видимость Тогда
		ОформлениеСтроки.Ячейки.Закрыть.УстановитьКартинку(БиблиотекаКартинок.Закрыть);
	КонецЕсли;	
	
КонецПроцедуры




СотрудникВладелецМеню = ПараметрыСеанса.ТекущийПользователь;

                           