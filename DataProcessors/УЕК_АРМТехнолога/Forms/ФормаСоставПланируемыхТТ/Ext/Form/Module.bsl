
&НаСервере
Процедура РассчитатьКоличествоЗаписей()

	//
	КоличествоВсего = ПланируемыеТТ.Количество();

КонецПроцедуры
 

&НаСервере
Процедура ЗаполнитьПоДействующимТТ(НомерНедели)
	
	//
	ПланируемыеТТ.Очистить();
	
	//
	ТЗ = "ВЫБРАТЬ
	     |	СоответствиеДатДнямНедели.НомерНедели,
	     |	МИНИМУМ(СоответствиеДатДнямНедели.Дата) КАК НачалоПериода,
	     |	МАКСИМУМ(СоответствиеДатДнямНедели.Дата) КАК КонецПериода
	     |ПОМЕСТИТЬ ТЗ_Границы
	     |ИЗ
	     |	РегистрСведений.СоответствиеДатДнямНедели КАК СоответствиеДатДнямНедели
	     |ГДЕ
	     |	СоответствиеДатДнямНедели.НомерНедели = &НомерНедели
	     |
	     |СГРУППИРОВАТЬ ПО
	     |	СоответствиеДатДнямНедели.НомерНедели
	     |;
	     |
	     |////////////////////////////////////////////////////////////////////////////////
	     |ВЫБРАТЬ РАЗЛИЧНЫЕ
	     |	СтруктурныеЕдиницы.Ссылка КАК СтруктурнаяЕдиница,
	     |	ТЗ_Границы.НомерНедели,
	     |	ТЗ_Границы.НачалоПериода,
	     |	ТЗ_Границы.КонецПериода,
	     |	СтруктурныеЕдиницы.id_TT КАК id_TT
	     |ИЗ
	     |	ТЗ_Границы КАК ТЗ_Границы
	     |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	     |		ПО (ТЗ_Границы.КонецПериода МЕЖДУ СтруктурныеЕдиницы.ДатаОткрытия И ВЫБОР
	     |				КОГДА СтруктурныеЕдиницы.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
	     |					ТОГДА ДАТАВРЕМЯ(3001, 1, 1)
	     |				ИНАЧЕ СтруктурныеЕдиницы.ДатаЗакрытия
	     |			КОНЕЦ)
	     |			И (СтруктурныеЕдиницы.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница))
	     |
	     |УПОРЯДОЧИТЬ ПО
	     |	id_TT";
		 
	//
	ПЗ = Новый ПостроительЗапроса;
	ПЗ.Текст = ТЗ;
	
	//
	ПЗ.Параметры.Вставить("НомерНедели", НомерНедели);
	
	//
	ПЗ.Выполнить();
	
	//
	Выборка = ПЗ.Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		//
		НоваяСтрока = ПланируемыеТТ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
	КонецЦикла; 
	
	//
	РассчитатьКоличествоЗаписей();

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоНомеруНеделиИзБД(НомерНедели)
	
	//
	ПланируемыеТТ.Очистить();
	
	//
	ТЗ = "ВЫБРАТЬ
	     |	УЕК_ПланируемыеТТ.ТорговаяТочка КАК СтруктурнаяЕдиница,
	     |	УЕК_ПланируемыеТТ.ТорговаяТочка.id_TT КАК ТорговаяТочкаid_TT
	     |ИЗ
	     |	РегистрСведений.УЕК_ПланируемыеТТ КАК УЕК_ПланируемыеТТ
	     |ГДЕ
	     |	УЕК_ПланируемыеТТ.НомерНедели = &НомерНедели
	     |
	     |УПОРЯДОЧИТЬ ПО
	     |	ТорговаяТочкаid_TT";
		 
	//
	ПЗ = Новый ПостроительЗапроса;
	ПЗ.Текст = ТЗ;
	
	//
	ПЗ.Параметры.Вставить("НомерНедели", НомерНедели);
	
	//
	ПЗ.Выполнить();
	
	//
	Выборка = ПЗ.Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		//
		НоваяСтрока = ПланируемыеТТ.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	
	КонецЦикла; 

	//
	РассчитатьКоличествоЗаписей();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//
	Параметры.Свойство("НомерНедели", НомерНедели);
	Если Не ЗначениеЗаполнено(НомерНедели) Тогда
		Возврат;
	КонецЕсли; 
	
	//
	ЗаполнитьПоНомеруНеделиИзБД(НомерНедели);	
	
	//
	Если ПланируемыеТТ.Количество() = 0 Тогда
	
		//
		ЗаполнитьПоДействующимТТ(НомерНедели);
	
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПодобрать(Команда)
	
	//
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	//
	Форма = ПолучитьФорму("Обработка.УЕК_АРМТехнолога.Форма.ФормаПодбораСтруктурныхЕдиниц", ПараметрыФормы, ЭтаФорма);
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	//
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		
		//
		Для каждого ЭлементМассива Из ВыбранноеЗначение Цикл
			
			//
			СП = Новый Структура;
			СП.Вставить("СтруктурнаяЕдиница", ЭлементМассива);
			
			//
			НайденныеСтроки = ПланируемыеТТ.НайтиСтроки(СП);
			Если НайденныеСтроки.Количество() = 0 Тогда
				
				//
				НоваяСтрока = ПланируемыеТТ.Добавить();
				НоваяСтрока.СтруктурнаяЕдиница = ЭлементМассива;
			
			КонецЕсли; 
		
		КонецЦикла; 
	
	КонецЕсли; 
	
	//
	РассчитатьКоличествоЗаписей();
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьСоставПланируемыхТТНаСервере()
	
	//
	ВсеОК = Истина;
	
	//
	НЗ = РегистрыСведений.УЕК_ПланируемыеТТ.СоздатьНаборЗаписей();
	
	//
	Для каждого СтрокаТЗ Из ПланируемыеТТ Цикл
	
		//
		НоваяЗапись = НЗ.Добавить();
		НоваяЗапись.НомерНедели = НомерНедели;
		НоваяЗапись.ТорговаяТочка = СтрокаТЗ.СтруктурнаяЕдиница;
		
		//
		НоваяЗапись.id_tt = НоваяЗапись.ТорговаяТочка.id_TT;
	
	КонецЦикла; 

	//
	Попытка
		НЗ.Записать();
	Исключение
		Сообщить(ОписаниеОшибки());
		ВсеОК = Ложь;
	КонецПопытки;
	
	//
	Возврат ВсеОК;
	
КонецФункции

&НаКлиенте
Процедура КомандаОК(Команда)
	
	//
	ВсеОК = ЗаписатьСоставПланируемыхТТНаСервере();
	Если ВсеОК Тогда
		Модифицированность = Ложь;
		Закрыть(Истина);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗакрыть(Команда)
	
	//
	Закрыть(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланируемыеТТПослеУдаления(Элемент)
	
	//
	РассчитатьКоличествоЗаписей();
	
КонецПроцедуры


&НаКлиенте
Процедура ПланируемыеТТПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	//
	РассчитатьКоличествоЗаписей();
	
КонецПроцедуры

