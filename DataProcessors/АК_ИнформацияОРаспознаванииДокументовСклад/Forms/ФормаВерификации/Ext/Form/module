//+++ АК LUZA 2017.10.31 ИП-00016717
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	ЭтаФорма.ДатаНач = НачалоДня(ТекущаяДата());
	ЭтаФорма.ДатаКон = КонецДня(ТекущаяДата());
	
	ЭтаФорма.Автор = ПараметрыСеанса.ТекущийПользователь;
	
	ЗаполнитьТаблицы();
КонецПроцедуры
//--- АК LUZA 2017.10.31 ИП-00016717

//+++ АК LUZA 2017.10.31 ИП-00016717
Процедура ЗаполнитьТаблицы(ОбновлятьТаблицы = Истина)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ПоступлениеТоваровУслуг.СчетФактура КАК Файл
	|ПОМЕСТИТЬ ВТ_ИсхДанные
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ПоступлениеТоваровУслуг.СчетФактура.Ссылка ЕСТЬ НЕ NULL 
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Ссылка,
	|	ПоступлениеТоваровУслуг.УПД
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ПоступлениеТоваровУслуг.УПД.Ссылка ЕСТЬ НЕ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА АК_ОчередьРаспознаванияФайлов.Распознан = ЛОЖЬ
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П_1,
	|	СУММА(ВЫБОР
	|			КОГДА АК_ОчередьРаспознаванияФайлов.Распознан = ИСТИНА
	|					И АК_ОчередьРаспознаванияФайлов.Обработан = ИСТИНА
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П_2,
	|	СУММА(ВЫБОР
	|			КОГДА АК_ОчередьРаспознаванияФайлов.Распознан = ИСТИНА
	|					И АК_ОчередьРаспознаванияФайлов.Обработан = ИСТИНА
	|					И АК_ОчередьРаспознаванияФайлов.РезультатСравнения = ИСТИНА
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П_3,
	|	СУММА(ВЫБОР
	|			КОГДА АК_ОчередьРаспознаванияФайлов.Распознан = ИСТИНА
	|					И АК_ОчередьРаспознаванияФайлов.Обработан = ИСТИНА
	|					И АК_ОчередьРаспознаванияФайлов.РезультатСравнения = ЛОЖЬ
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П_4,
	|	СУММА(1) КАК Всего
	|ИЗ
	|	РегистрСведений.АК_ОчередьРаспознаванияФайлов КАК АК_ОчередьРаспознаванияФайлов
	|ГДЕ
	|	АК_ОчередьРаспознаванияФайлов.ОбъектСравнения ССЫЛКА Документ.ЗаявкаНаУслугиМатериалы
	|	И АК_ОчередьРаспознаванияФайлов.ОбъектСравнения.Ссылка ЕСТЬ НЕ NULL 
	|	И АК_ОчередьРаспознаванияФайлов.ОбъектСравнения.Ответственный = &Ответственный
	|	И АК_ОчередьРаспознаванияФайлов.ОбъектСравнения.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И АК_ОчередьРаспознаванияФайлов.РаспознанНеКорректно = ЛОЖЬ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВЫБОР
	|			КОГДА АК_ОчередьРаспознаванияФайлов.Распознан = ЛОЖЬ
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П_1,
	|	СУММА(ВЫБОР
	|			КОГДА АК_ОчередьРаспознаванияФайлов.Распознан = ИСТИНА
	|					И АК_ОчередьРаспознаванияФайлов.Обработан = ИСТИНА
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П_2,
	|	СУММА(ВЫБОР
	|			КОГДА АК_ОчередьРаспознаванияФайлов.Распознан = ИСТИНА
	|					И АК_ОчередьРаспознаванияФайлов.Обработан = ИСТИНА
	|					И АК_ОчередьРаспознаванияФайлов.РезультатСравнения = ИСТИНА
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П_3,
	|	СУММА(ВЫБОР
	|			КОГДА АК_ОчередьРаспознаванияФайлов.Распознан = ИСТИНА
	|					И АК_ОчередьРаспознаванияФайлов.Обработан = ИСТИНА
	|					И АК_ОчередьРаспознаванияФайлов.РезультатСравнения = ЛОЖЬ
	|				ТОГДА 1
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК П_4,
	|	СУММА(1) КАК Всего
	|ИЗ
	|	РегистрСведений.АК_ОчередьРаспознаванияФайлов КАК АК_ОчередьРаспознаванияФайлов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО АК_ОчередьРаспознаванияФайлов.Файл = ЗначенияСвойствОбъектов.Объект
	|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Файлы_Родитель))
	|ГДЕ
	|	АК_ОчередьРаспознаванияФайлов.ОбъектСравнения ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|	И АК_ОчередьРаспознаванияФайлов.ОбъектСравнения.Ссылка ЕСТЬ НЕ NULL 
	|	И АК_ОчередьРаспознаванияФайлов.ОбъектСравнения.Ответственный = &Ответственный
	|	И АК_ОчередьРаспознаванияФайлов.ОбъектСравнения.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И АК_ОчередьРаспознаванияФайлов.РаспознанНеКорректно = ЛОЖЬ
	|	И ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АК_ОчередьРаспознаванияФайлов.ОбъектСравнения,
	|	АК_ОчередьРаспознаванияФайлов.ОбъектСравнения.Дата КАК ОбъектСравненияДата,
	|	АК_ОчередьРаспознаванияФайлов.Файл,
	|	АК_ОчередьРаспознаванияФайлов.Распознан,
	|	АК_ОчередьРаспознаванияФайлов.Обработан,
	|	АК_ОчередьРаспознаванияФайлов.РаспознанНеКорректно,
	|	АК_ОчередьРаспознаванияФайлов.РезультатСравнения,
	|	АК_ОчередьРаспознаванияФайлов.ОбъектСравнения.Ответственный КАК Ответственный
	|ИЗ
	|	РегистрСведений.АК_ОчередьРаспознаванияФайлов КАК АК_ОчередьРаспознаванияФайлов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИсхДанные КАК ВТ_ИсхДанные
	|		ПО АК_ОчередьРаспознаванияФайлов.ОбъектСравнения = ВТ_ИсхДанные.Ссылка
	|			И АК_ОчередьРаспознаванияФайлов.Файл = ВТ_ИсхДанные.Файл
	|ГДЕ
	|	АК_ОчередьРаспознаванияФайлов.ОбъектСравнения ССЫЛКА Документ.ЗаявкаНаУслугиМатериалы
	|	И АК_ОчередьРаспознаванияФайлов.ОбъектСравнения.Ссылка ЕСТЬ НЕ NULL 
	|	И АК_ОчередьРаспознаванияФайлов.ОбъектСравнения.Ответственный = &Ответственный
	|	И АК_ОчередьРаспознаванияФайлов.ОбъектСравнения.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И АК_ОчередьРаспознаванияФайлов.РаспознанНеКорректно = ЛОЖЬ
	|	И ВЫБОР
	|			КОГДА &Режим = 1
	|				ТОГДА АК_ОчередьРаспознаванияФайлов.Распознан = ЛОЖЬ
	|			КОГДА &Режим = 2
	|				ТОГДА АК_ОчередьРаспознаванияФайлов.Распознан = ИСТИНА
	|						И АК_ОчередьРаспознаванияФайлов.Обработан = ИСТИНА
	|			КОГДА &Режим = 3
	|				ТОГДА АК_ОчередьРаспознаванияФайлов.Распознан = ИСТИНА
	|						И АК_ОчередьРаспознаванияФайлов.Обработан = ИСТИНА
	|						И АК_ОчередьРаспознаванияФайлов.РезультатСравнения = ИСТИНА
	|			КОГДА &Режим = 4
	|				ТОГДА АК_ОчередьРаспознаванияФайлов.Распознан = ИСТИНА
	|						И АК_ОчередьРаспознаванияФайлов.Обработан = ИСТИНА
	|						И АК_ОчередьРаспознаванияФайлов.РезультатСравнения = ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбъектСравненияДата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АК_ОчередьРаспознаванияФайлов.ОбъектСравнения,
	|	АК_ОчередьРаспознаванияФайлов.ОбъектСравнения.Дата КАК ОбъектСравненияДата,
	|	АК_ОчередьРаспознаванияФайлов.Файл,
	|	АК_ОчередьРаспознаванияФайлов.Распознан,
	|	АК_ОчередьРаспознаванияФайлов.Обработан,
	|	АК_ОчередьРаспознаванияФайлов.РаспознанНеКорректно,
	|	АК_ОчередьРаспознаванияФайлов.РезультатСравнения,
	|	АК_ОчередьРаспознаванияФайлов.ОбъектСравнения.Ответственный КАК Ответственный,
	|	ЗначенияСвойствОбъектов.Значение КАК ФайлРодитель
	|ИЗ
	|	РегистрСведений.АК_ОчередьРаспознаванияФайлов КАК АК_ОчередьРаспознаванияФайлов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО АК_ОчередьРаспознаванияФайлов.Файл = ЗначенияСвойствОбъектов.Объект
	|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Файлы_Родитель))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ИсхДанные КАК ВТ_ИсхДанные
	|		ПО АК_ОчередьРаспознаванияФайлов.ОбъектСравнения = ВТ_ИсхДанные.Ссылка
	|			И АК_ОчередьРаспознаванияФайлов.Файл = ВТ_ИсхДанные.Файл
	|ГДЕ
	|	АК_ОчередьРаспознаванияФайлов.ОбъектСравнения ССЫЛКА Документ.ПоступлениеТоваровУслуг
	|	И АК_ОчередьРаспознаванияФайлов.ОбъектСравнения.Ссылка ЕСТЬ НЕ NULL 
	|	И АК_ОчередьРаспознаванияФайлов.ОбъектСравнения.Ответственный = &Ответственный
	|	И АК_ОчередьРаспознаванияФайлов.РаспознанНеКорректно = ЛОЖЬ
	|	И АК_ОчередьРаспознаванияФайлов.ОбъектСравнения.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ВЫБОР
	|			КОГДА &РежимСФ = 1
	|				ТОГДА АК_ОчередьРаспознаванияФайлов.Распознан = ЛОЖЬ
	|			КОГДА &РежимСФ = 2
	|				ТОГДА АК_ОчередьРаспознаванияФайлов.Распознан = ИСТИНА
	|						И АК_ОчередьРаспознаванияФайлов.Обработан = ИСТИНА
	|			КОГДА &РежимСФ = 3
	|				ТОГДА АК_ОчередьРаспознаванияФайлов.Распознан = ИСТИНА
	|						И АК_ОчередьРаспознаванияФайлов.Обработан = ИСТИНА
	|						И АК_ОчередьРаспознаванияФайлов.РезультатСравнения = ИСТИНА
	|			КОГДА &РежимСФ = 4
	|				ТОГДА АК_ОчередьРаспознаванияФайлов.Распознан = ИСТИНА
	|						И АК_ОчередьРаспознаванияФайлов.Обработан = ИСТИНА
	|						И АК_ОчередьРаспознаванияФайлов.РезультатСравнения = ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, НЕОПРЕДЕЛЕНО) = НЕОПРЕДЕЛЕНО
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбъектСравненияДата";
	
	Запрос.УстановитьПараметр("Режим", ЭтаФорма.ТекущийРежимСчет);
	Запрос.УстановитьПараметр("РежимСФ", ЭтаФорма.ТекущийРежимСчетФактура);
	Запрос.УстановитьПараметр("ДатаНач", НачалоДня(ЭтаФорма.ДатаНач));
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ЭтаФорма.ДатаКон));
	Запрос.УстановитьПараметр("Ответственный", ЭтаФорма.Автор);
	Если ЗначениеЗаполнено(ЭтаФорма.ДатаКон) = Ложь Тогда
		Запрос.УстановитьПараметр("ДатаКон", КонецДня(ТекущаяДата()));		
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ЭтаФорма.Автор) = Ложь Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И АК_ОчередьРаспознаванияФайлов.ОбъектСравнения.Ответственный = &Ответственный","И ИСТИНА");
	КонецЕсли;	
	
	МассивТаблиц = Запрос.ВыполнитьПакет();
	
	ДанныеПоСчетам = МассивТаблиц.Получить(1).Выгрузить();
	ДанныеПоСФ = МассивТаблиц.Получить(2).Выгрузить();
	
	ПроставитьКоличествоФайловВЭлементахФорм(ДанныеПоСчетам, ЭлементыФормы.ГлавнаяПанель.Страницы.СчетаНаОплату);
	ПроставитьКоличествоФайловВЭлементахФорм(ДанныеПоСФ, ЭлементыФормы.ГлавнаяПанель.Страницы.СчетаФактуры);
	
	Если ОбновлятьТаблицы = Истина Тогда
		ЭтаФорма.Таблица_Счетов = МассивТаблиц.Получить(3).Выгрузить();
		ЭтаФорма.Таблица_СФ = МассивТаблиц.Получить(4).Выгрузить();
	КонецЕсли;
	
КонецПроцедуры	       
//--- АК LUZA 2017.10.31 ИП-00016717

//+++ АК LUZA 2017.10.31 ИП-00016717
Процедура ПроставитьКоличествоФайловВЭлементахФорм(Показатели, Страница)
	Если  Показатели.Количество() > 0 Тогда
		Стр = Показатели[0];
		Если Стр.Всего = NULL Тогда
			Стр.Всего = 0;
		КонецЕсли;	
		Поз = Найти(Страница.Заголовок, "(");
		Если Поз = 0 Тогда
			Страница.Заголовок = Страница.Заголовок + " (" + Формат(Стр.Всего, "ЧН=") + ")";	
		Иначе
			Страница.Заголовок = Лев(Страница.Заголовок, Поз  - 1) + "(" + Формат(Стр.Всего, "ЧН=") + ")";		
		КонецЕсли;	
		
		Для а = 1 По 4 Цикл
			Если Страница = ЭлементыФормы.ГлавнаяПанель.Страницы.СчетаНаОплату Тогда
				ИмяЭлемента = "КнопкаСчет" + Строка(а);
				ТекРежим = ЭтаФорма.ТекущийРежимСчет;
			ИначеЕсли Страница = ЭлементыФормы.ГлавнаяПанель.Страницы.СчетаФактуры Тогда
				ИмяЭлемента = "КнопкаСФ" + Строка(а);
				ТекРежим = ЭтаФорма.ТекущийРежимСчетФактура;
			КонецЕсли;	
			
			Если ТекРежим = а Тогда
				ЭлементыФормы[ИмяЭлемента].Шрифт = Новый Шрифт(ЭлементыФормы[ИмяЭлемента].Шрифт,,,Истина);
			Иначе	
				ЭлементыФормы[ИмяЭлемента].Шрифт = Новый Шрифт(ЭлементыФормы[ИмяЭлемента].Шрифт,,,Ложь);
			КонецЕсли;	
			
			ЗаголовокКнопки = ЭлементыФормы[ИмяЭлемента].Заголовок;
			
			ЗначениеПоказателя = Стр["П_" + Строка(а)];
			Если ЗначениеПоказателя = NULL Тогда
				ЗначениеПоказателя = 0;
			КонецЕсли;
			Поз = Найти(ЗаголовокКнопки, "(");
			Если Поз = 0 Тогда
				ЗаголовокКнопки = ЗаголовокКнопки + " (" + Формат(ЗначениеПоказателя, "ЧН=") + ")";	
			Иначе
				ЗаголовокКнопки = Лев(ЗаголовокКнопки, Поз  - 1) + "(" + Формат(ЗначениеПоказателя, "ЧН=") + ")";		
			КонецЕсли;
			
			ЭлементыФормы[ИмяЭлемента].Заголовок = ЗаголовокКнопки;
		КонецЦикла;	
		
	КонецЕсли;                                                                              
КонецПроцедуры
//--- АК LUZA 2017.10.31 ИП-00016717

//+++ АК LUZA 2017.10.31 ИП-00016717
Процедура КоманднаяПанельФормыОбновить(Кнопка)
	ЗаполнитьТаблицы();
КонецПроцедуры
//--- АК LUZA 2017.10.31 ИП-00016717

//+++ АК LUZA 2017.10.31 ИП-00016717
Процедура КоманднаяПанель2ОткрытьСкан(Кнопка)
	ТС = Неопределено;
	Если ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.СчетаНаОплату Тогда
		ТС = ЭлементыФормы.Таблица_Счетов.ТекущаяСтрока;
	ИначеЕсли ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.СчетаФактуры Тогда
		ТС = ЭлементыФормы.Таблица_СФ.ТекущаяСтрока;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ТС) И ЗначениеЗаполнено(ТС.Файл) = Истина Тогда
		
		Файл = ТС.Файл; 		
		ИмяФайла = Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(Файл);
		
		Файл = Новый Файл(ИмяФайла);
		Если Файл.Существует() Тогда
			ЗапуститьПриложение(ИмяФайла);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//--- АК LUZA 2017.10.31 ИП-00016717

//+++ АК LUZA 2017.10.31 ИП-00016717
Процедура КоманднаяПанель2РаспознанНеКорректно(Кнопка)
	ТС = Неопределено;
	Если ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.СчетаНаОплату Тогда
		ТС = ЭлементыФормы.Таблица_Счетов.ТекущаяСтрока;
		ТЗ = ЭтаФорма.Таблица_Счетов;
	ИначеЕсли ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.СчетаФактуры Тогда
		ТС = ЭлементыФормы.Таблица_СФ.ТекущаяСтрока;
		ТЗ = ЭтаФорма.Таблица_СФ;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ТС) И ЗначениеЗаполнено(ТС.Файл) = Истина Тогда
		
		Файл = ТС.Файл;
		Запись = РегистрыСведений.АК_ОчередьРаспознаванияФайлов.СоздатьМенеджерЗаписи();
		Запись.Файл = Файл;
		Запись.Прочитать();
		Запись.РаспознанНеКорректно = Истина;
		Запись.Записать();
		
		ТЗ.Удалить(ТС);
		
		ЗаполнитьТаблицы(Ложь);
	КонецЕсли;

КонецПроцедуры
//--- АК LUZA 2017.10.31 ИП-00016717

//+++ АК LUZA 2017.10.31 ИП-00016717
Процедура Таблица_СчетовПриАктивизацииСтроки(Элемент)
	ТС = ЭлементыФормы.Таблица_Счетов.ТекущаяСтрока;
	Файл = Справочники.Файлы.ПустаяСсылка();
	Если ЗначениеЗаполнено(ТС) И ЗначениеЗаполнено(ТС.Файл) Тогда
		Файл = ТС.Файл;
		
		Запись = РегистрыСведений.АК_ОчередьРаспознаванияФайлов.СоздатьМенеджерЗаписи();
		Запись.Файл = Файл;
		Запись.Прочитать();
		
		ТаблицаСравнения =  ЗаполнитьТаблицуСвойств(Файл, Запись.ОбъектСравнения);
		//ЭлементыФормы.ТаблицаСравнения.СоздатьКолонки();
	КонецЕсли;
КонецПроцедуры
//--- АК LUZA 2017.10.31 ИП-00016717

//+++ АК LUZA 2017.10.31 ИП-00016717
Функция ЗаполнитьТаблицуСвойств(Файл, ОбъектСравнения)
	
	ЗначенияСвойств = Новый ТаблицаЗначений;
	ЗначенияСвойств.Колонки.Добавить("Свойство",,,4);
	ЗначенияСвойств.Колонки.Добавить("СвойствоСсылка",,,4);
	ЗначенияСвойств.Колонки.Добавить("ДанныеВОбъекте",,"Данные в объекте",6);
	ЗначенияСвойств.Колонки.Добавить("ДанныеВФайле",,"Данные в файле",6);
	
	//++ АК LUZA 20170731 ИП-00016332	
	Если ТипЗнч(ОбъектСравнения) = Тип("ДокументСсылка.ЗаявкаНаУслугиМатериалы") Тогда
		СоответствиеРеквизитов = Новый Соответствие;
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_НазваниеКонтрагента, "Контрагент");
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_ИНН, "ИНН");
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_СуммаСчета, "СуммаДокумента");
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_НомерСчета, "НомерСчета");
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_ДатаСчета, "ДатаСчета");
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_БИК, "БИК");
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_РассчетныйСчет, "РасчСчет");
		
		ПредставлениеРеквизитов = Новый Соответствие;
		ПредставлениеРеквизитов.Вставить("Контрагент", "5. Наим. контр.");
		ПредставлениеРеквизитов.Вставить("ИНН", "4. ИНН контр.");
		ПредставлениеРеквизитов.Вставить("СуммаДокумента", "3. Сумма счета");
		ПредставлениеРеквизитов.Вставить("НомерСчета", "1. Номер счета");
		ПредставлениеРеквизитов.Вставить("ДатаСчета", "2. Дата счета");
		ПредставлениеРеквизитов.Вставить("БИК", "6. БИК");
		ПредставлениеРеквизитов.Вставить("РасчСчет", "7. Расс. счет");
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ЗаявкаНаУслугиМатериалы.Ссылка,
		|	ЗаявкаНаУслугиМатериалы.Контрагент.Наименование КАК Контрагент,
		|	ЗаявкаНаУслугиМатериалы.Контрагент.ИНН КАК ИНН,
		|	ЗаявкаНаУслугиМатериалы.СуммаДокумента,
		|	ЗаявкаНаУслугиМатериалы.НомерСчета,
		|	ЗаявкаНаУслугиМатериалы.ДатаСчета,
		|	ЗаявкаНаУслугиМатериалы.СчетКонтрагента.Банк.Код КАК БИК,
		|	ЗаявкаНаУслугиМатериалы.СчетКонтрагента.НомерСчета КАК РасчСчет
		|ИЗ
		|	Документ.ЗаявкаНаУслугиМатериалы КАК ЗаявкаНаУслугиМатериалы	
		|ГДЕ
		|	ЗаявкаНаУслугиМатериалы.Ссылка = &Заявка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ	
		|	ЗначенияСвойствОбъектов.Свойство КАК Свойство,
		|	ЗначенияСвойствОбъектов.Значение КАК ДанныеВСчете
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Объект = &СчетНаОплату";
		
		
		Запрос.УстановитьПараметр("Заявка", ОбъектСравнения);
		Запрос.УстановитьПараметр("СчетНаОплату", Файл);
		
	ИначеЕсли ТипЗнч(ОбъектСравнения) = Тип("ДокументСсылка.ПриходныйОрдерСклад") Тогда
		СоответствиеРеквизитов = Новый Соответствие;		
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_Склад_ПоставщикИНН, "ИНН");		
		//СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_Склад_Поставщик_Имя, "Поставщик");		
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ПриходныйОрдерСклад.Поставщик.ИНН КАК ИНН,
		|	ПриходныйОрдерСклад.Поставщик.НаименованиеПолное КАК Поставщик
		|ИЗ
		|	Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
		|ГДЕ
		|	ПриходныйОрдерСклад.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Свойство КАК Свойство,
		|	ЗначенияСвойствОбъектов.Значение КАК ДанныеВСчете
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Объект = &СчетНаОплату";
		
		Запрос.УстановитьПараметр("Ссылка", ОбъектСравнения);
		Запрос.УстановитьПараметр("СчетНаОплату", Файл);
	ИначеЕсли ТипЗнч(ОбъектСравнения) = Тип("СправочникСсылка.ХарактеристикиНоменклатуры") Тогда
		СоответствиеРеквизитов = Новый Соответствие;		
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_Этикетки_ГОСТ_ТУ, "ГОСТ_ТУ");				
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_Этикетки_Производитель, "ИмяПроизводителя");				
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_Этикетки_Производитель_Адрес, "АдресПроизводителя");				
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_Этикетки_Масса_Нетто_Объем, "МассаНетто");				
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_Этикетки_Пищевая_Ценность_Белки, "ЦенностьБелки");				
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_Этикетки_Пищевая_Ценность_Жиры, "ЦенностьЖиры");				
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_Этикетки_Пищевая_Ценность_Углеводы, "ЦенностьУглеводы");				
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_Этикетки_Состав, "Состав");				
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_Этикетки_СрокГодности, "СрокГодности");				
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_Этикетки_Условия_Хранения, "УсловияХранения");				
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_Этикетки_Энергетическая_Ценность_Дж, "Энергетическая_Ценность_Дж");				
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_Этикетки_Энергетическая_Ценность_Ккал, "Энергетическая_Ценность_Ккал");				
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ХарактеристикиНоменклатуры.Наименование КАК ИмяПроизводителя,
		|	ХарактеристикиНоменклатуры.ГосударственныйСтандартТехническоеУсловие КАК ГОСТ_ТУ,
		|	"""" КАК АдресПроизводителя,
		|	"""" КАК МассаНетто,
		|	"""" КАК ЦенностьБелки,
		|	"""" КАК ЦенностьЖиры,
		|	"""" КАК ЦенностьУглеводы,
		|	"""" КАК Состав,
		|	"""" КАК СрокГодности,
		|	"""" КАК УсловияХранения,
		|	"""" КАК Энергетическая_Ценность_Дж,
		|	"""" КАК Энергетическая_Ценность_Ккал
		|ИЗ
		|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|ГДЕ
		|	ХарактеристикиНоменклатуры.Ссылка = &ОбъектСравнения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Свойство КАК Свойство,
		|	ЗначенияСвойствОбъектов.Значение КАК ДанныеВСчете
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Объект = &Файл";
		
		Запрос.УстановитьПараметр("ОбъектСравнения", ОбъектСравнения);
		Запрос.УстановитьПараметр("Файл", Файл);
	ИначеЕсли ТипЗнч(ОбъектСравнения) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		СоответствиеРеквизитов = Новый Соответствие;		
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_СФ_ИНН, "ИНН");
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_СФ_Номер, "Номер");
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_СФ_Дата, "Дата");
		СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_СФ_Сумма, "Сумма");
		//
		//СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_СФ_Валюта, "Валюта");
		//СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_СФ_Версия, "Версия");
		//СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_Склад_Поставщик_Имя, "ИмяПоставщика");
		//СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_СФ_ИНН_Покупателя, "ИННПокупателя");
		//СоответствиеРеквизитов.Вставить(ПланыВидовХарактеристик.СвойстваОбъектов.Файлы_СФ_Сумма, "Сумма");
		
		ПредставлениеРеквизитов = Новый Соответствие;
		ПредставлениеРеквизитов.Вставить("ИНН", "4. ИНН контр.");
		ПредставлениеРеквизитов.Вставить("Сумма", "3. Сумма СФ");
		ПредставлениеРеквизитов.Вставить("Номер", "1. Номер СФ");
		ПредставлениеРеквизитов.Вставить("Дата", "2. Дата СФ");
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	ПоступлениеТоваровУслуг.НомерВходящегоСчетаФактуры КАК Номер,
		|	ПоступлениеТоваровУслуг.Контрагент.ИНН КАК ИНН,
		|	ПоступлениеТоваровУслуг.ДатаВходящегоСчетаФактуры КАК Дата,
		|	ПоступлениеТоваровУслуг.СуммаДокумента КАК Сумма,
		|	"""" КАК Валюта,
		|	"""" КАК Версия,
		|	"""" КАК ИмяПоставщика,
		|	"""" КАК ИННПокупателя
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
		|ГДЕ
		|	ПоступлениеТоваровУслуг.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияСвойствОбъектов.Свойство КАК Свойство,
		|	ЗначенияСвойствОбъектов.Значение КАК ДанныеВСчете
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Объект = &СчетНаОплату";
		
		Запрос.УстановитьПараметр("Ссылка", ОбъектСравнения);
		Запрос.УстановитьПараметр("СчетНаОплату", Файл);
	КонецЕсли;	
	
	МассивРезультат = Запрос.ВыполнитьПакет();
	
	ТЗ_ДанныеЗаявки = МассивРезультат[0].Выгрузить();		
	ТЗ_Данныефайла = МассивРезультат[1].Выгрузить();
	
	Для каждого СтрЗаявка Из ТЗ_Данныефайла Цикл
		НСтр = ЗначенияСвойств.Добавить();
		ЗаполнитьЗначенияСвойств(НСтр, СтрЗаявка);		
		
		НСтр.ДанныеВФайле = СтрЗаявка.ДанныеВСчете;
		НСтр.Свойство = ПредставлениеРеквизитов.Получить(СоответствиеРеквизитов[СтрЗаявка.Свойство]);
		НСтр.СвойствоСсылка = СтрЗаявка.Свойство;
		Если ТЗ_ДанныеЗаявки.Количество() > 0 Тогда
			Если СоответствиеРеквизитов[СтрЗаявка.Свойство] <> Неопределено Тогда 
				НСтр.ДанныеВОбъекте = ТЗ_ДанныеЗаявки[0][СоответствиеРеквизитов[СтрЗаявка.Свойство]];
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;	
	ЗначенияСвойств.Сортировать("Свойство");
	Возврат ЗначенияСвойств; 
КонецФункции
//--- АК LUZA 2017.10.31 ИП-00016717

//+++ АК LUZA 2017.10.31 ИП-00016717
Процедура КоманднаяПанельСвойстваСохранить(Кнопка)
	ТС = Неопределено;
	Если ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.СчетаНаОплату Тогда
		ТС = ЭлементыФормы.Таблица_Счетов.ТекущаяСтрока;
		ТЗ = ЭтаФорма.ТаблицаСравнения;
	ИначеЕсли ЭлементыФормы.ГлавнаяПанель.ТекущаяСтраница = ЭлементыФормы.ГлавнаяПанель.Страницы.СчетаФактуры Тогда
		ТС = ЭлементыФормы.Таблица_СФ.ТекущаяСтрока;
		ТЗ = ЭтаФорма.ТаблицаСравненияСФ;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ТС) И ЗначениеЗаполнено(ТС.Файл) = Истина Тогда
		
		Файл = ТС.Файл;
		
		Запись = РегистрыСведений.АК_ОчередьРаспознаванияФайлов.СоздатьМенеджерЗаписи();
		Запись.Файл = Файл;
		Запись.Прочитать();
		Запись.Обработан = Ложь;
		Запись.Записать();
		//
		Набор = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
		Набор.Отбор.Объект.Установить(Файл);
		Набор.Прочитать();
		Для каждого Запись Из Набор Цикл
			Стр = ТЗ.Найти(Запись.Свойство, "СвойствоСсылка");
			Если Стр <> Неопределено Тогда
				Запись.Значение = Стр.ДанныеВФайле;
			КонецЕсли;  
		КонецЦикла;	
		Набор.Записать();
	КонецЕсли;

КонецПроцедуры
//--- АК LUZA 2017.10.31 ИП-00016717

//+++ АК LUZA 2017.10.31 ИП-00016717
Процедура УстановитьПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(ДатаНач, ?(ДатаКон='0001-01-01', ДатаКон, КонецДня(ДатаКон)));
	Если НастройкаПериода.Редактировать() Тогда
		ДатаНач = НастройкаПериода.ПолучитьДатуНачала();
		ДатаКон = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	
	
КонецПроцедуры
//--- АК LUZA 2017.10.31 ИП-00016717

//+++ АК LUZA 2017.10.31 ИП-00016717
Процедура ТаблицаСравненияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.Свойство = "5. Наим. контр." Тогда
		ЦветОшибки = WebЦвета.Оранжевый;
	Иначе
		ЦветОшибки = WebЦвета.Красный;
	КонецЕсли;	
	Если ДанныеСтроки.ДанныеВОбъекте <> ДанныеСтроки.ДанныеВФайле И ЗначениеЗаполнено(ДанныеСтроки.ДанныеВОбъекте) Тогда
		ОформлениеСтроки.ЦветФона = ЦветОшибки;
	КонецЕсли;	

КонецПроцедуры
//--- АК LUZA 2017.10.31 ИП-00016717

//+++ АК LUZA 2017.10.31 ИП-00016717
Процедура КнопкаСчетНажатие(Элемент)
	ИДНажатойКнопки = Число(Прав(Элемент.Имя, 1));
	
	Если ЭтаФорма.ТекущийРежимСчет = ИДНажатойКнопки Тогда
		ЭтаФорма.ТекущийРежимСчет = 0;
	Иначе
		ЭтаФорма.ТекущийРежимСчет = ИДНажатойКнопки;
	КонецЕсли;	
	
	ЗаполнитьТаблицы();
	
КонецПроцедуры
//--- АК LUZA 2017.10.31 ИП-00016717

//+++ АК LUZA 2017.10.31 ИП-00016717
Процедура КнопкаСФНажатие(Элемент)
	ИДНажатойКнопки = Число(Прав(Элемент.Имя, 1));
	
	Если ЭтаФорма.ТекущийРежимСчетФактура = ИДНажатойКнопки Тогда
		ЭтаФорма.ТекущийРежимСчетФактура = 0;
	Иначе
		ЭтаФорма.ТекущийРежимСчетФактура = ИДНажатойКнопки;
	КонецЕсли;	
	
	ЗаполнитьТаблицы();  	

КонецПроцедуры
//--- АК LUZA 2017.10.31 ИП-00016717

//+++ АК LUZA 2017.10.31 ИП-00016717
Процедура АвторОчистка(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры
//--- АК LUZA 2017.10.31 ИП-00016717

//+++ АК LUZA 2017.10.31 ИП-00016717
Процедура Таблица_СФПриАктивизацииСтроки(Элемент)
	ТС = ЭлементыФормы.Таблица_СФ.ТекущаяСтрока;
	Файл = Справочники.Файлы.ПустаяСсылка();
	Если ЗначениеЗаполнено(ТС) И ЗначениеЗаполнено(ТС.Файл) Тогда
		Файл = ТС.Файл;
		
		Запись = РегистрыСведений.АК_ОчередьРаспознаванияФайлов.СоздатьМенеджерЗаписи();
		Запись.Файл = Файл;
		Запись.Прочитать();
		
		ТаблицаСравненияСФ  =  ЗаполнитьТаблицуСвойств(Файл, Запись.ОбъектСравнения);
	КонецЕсли;

КонецПроцедуры
//--- АК LUZA 2017.10.31 ИП-00016717
