
&НаКлиенте
Процедура Далее(Команда)
	
	Если ЭтаФорма.Элементы.ГруппаЭтапы.ТекущаяСтраница = ЭтаФорма.Элементы.ГруппаФайлИОператор Тогда
		ПрочитатьДанныеИзфайла();
		ЭтаФорма.Элементы.ГруппаЭтапы.ТекущаяСтраница =  ЭтаФорма.Элементы.ГруппаРезультат;
		ОбновитьОформлениеПриСменеСтраницы();
	ИначеЕсли ЭтаФорма.Элементы.ГруппаЭтапы.ТекущаяСтраница = ЭтаФорма.Элементы.ГруппаРезультат Тогда	
		РаспознатьДанные();
		ЭтаФорма.Элементы.ГруппаЭтапы.ТекущаяСтраница =  ЭтаФорма.Элементы.ГруппаРасходы;
		ОбновитьОформлениеПриСменеСтраницы();
	ИначеЕсли ЭтаФорма.Элементы.ГруппаЭтапы.ТекущаяСтраница =  ЭтаФорма.Элементы.ГруппаРасходы Тогда
		результат = ВыгрузитьРезультат();
		ЭтаФорма.Закрыть(результат);	
	КонецЕсли;	
	
	
КонецПроцедуры

Функция ВыгрузитьРезультат()
	Результат = Новый Структура;
	Адрес = ПоместитьВоВременноеХранилище(Объект.Расходы.Выгрузить());	
	Результат.Вставить("Адрес",Адрес);	
	Результат.Вставить("Файл",Объект.Файл);
	Возврат Результат;
КонецФункции	

Процедура РаспознатьДанные()
	
	
	НеРаспознано = 0;
	Распознано = 0;
	Объект.Расходы.Очистить();
	Для Стр = 2 по Объект.Результат.ВысотаТаблицы Цикл
		СимКартаТекст = СокрЛП(Объект.Результат.Область(Стр,2,Стр,2).Текст);
        СимКарта = ПолучитьСимКарту(СимКартаТекст);
		
		НоваяСтрока = Объект.Расходы.Добавить();

		Если СимКарта <> неопределено Тогда
			
			НоваяСтрока.СимКарта 			 = СимКарта;
			Распознано = Распознано + 1;
			Объект.Результат.Область(Стр,1,Стр,1).Текст = "Да";

		Иначе	
			
			НоваяСтрока.СимКарта 			 = СимКартаТекст;
			НоваяСтрока.НомерНеЗарегистрирован = Истина;
			Объект.Результат.Область(Стр,1,Стр,1).Текст = "Нет";
			НеРаспознано = НеРаспознано + 1; 
			
		КонецЕсли;
			
			Данные = СокрЛП(Объект.Результат.Область(Стр,3,Стр,3).Текст);			
			НоваяСтрока.АбонентскаяПлата     = Формат(Число(?(Данные<>"",Данные,0)),"ЧДЦ=2");
						
			Данные = СокрЛП(Объект.Результат.Область(Стр,4,Стр,4).Текст);
			НоваяСтрока.МобильнаяСвязь       = Формат(Число(?(Данные<>"",Данные,0)),"ЧДЦ=2");	
			
			Данные = СокрЛП(Объект.Результат.Область(Стр,5,Стр,5).Текст);
			НоваяСтрока.SMSMMS      		 = Формат(Число(?(Данные<>"",Данные,0)),"ЧДЦ=2");	
			
			Данные = СокрЛП(Объект.Результат.Область(Стр,6,Стр,6).Текст);
			НоваяСтрока.Интернет      		 = Формат(Число(?(Данные<>"",Данные,0)),"ЧДЦ=2");	
			
			Данные = СокрЛП(Объект.Результат.Область(Стр,7,Стр,7).Текст);
			НоваяСтрока.Роуминг              = Формат(Число(?(Данные<>"",Данные,0)),"ЧДЦ=2");
			
			Данные = СокрЛП(Объект.Результат.Область(Стр,8,Стр,8).Текст);
			НоваяСтрока.ДополнительныеУслуги = Формат(Число(?(Данные<>"",Данные,0)),"ЧДЦ=2");
			
			Данные = СокрЛП(Объект.Результат.Область(Стр,9,Стр,9).Текст);
			НоваяСтрока.Скидка   = Формат(Число(?(Данные<>"",Данные,0)),"ЧДЦ=2");
			
		
		Элементы.СтрокаСостояния.Заголовок = "Распознано: " + Распознано + ". Нераспознано: " + НеРаспознано;
	КонецЦикла;
	
КонецПроцедуры	

Функция ПолучитьСимКарту(СимКартаТекст)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СлужебныеSIMКарты.Ссылка
		|ИЗ
		|	Справочник.СлужебныеSIMКарты КАК СлужебныеSIMКарты
		|ГДЕ
		|	СлужебныеSIMКарты.Код В (&Код)";

	СписокКодов = Новый СписокЗначений;
	СписокКодов.Добавить("7"+СимКартаТекст);
	СписокКодов.Добавить("8"+СимКартаТекст);
	СписокКодов.Добавить(СимКартаТекст);	
	
	Запрос.УстановитьПараметр("Код", СписокКодов);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;

	Возврат Неопределено;
	
КонецФункции	

&НаКлиенте
Процедура ОткрытьФайл(Команда)
	
	ДиалогВыбораФайла=Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок="Выберите файл для загрузки";
	ДиалогВыбораФайла.Фильтр="Табличный документ (*.xls,*.xlsx)|*.xls*";
	Если ДиалогВыбораФайла.Выбрать() тогда
		
		Объект.Файл = ДиалогВыбораФайла.ПолноеИмяФайла;
		
	КонецЕсли;	
	
	ОбновитьСписокЛистов();
	
	//ФайлExcelПолучитьСписокЛистов_1CXML_XLSX(Объект.Файл);
	
КонецПроцедуры

&НаКлиенте
Процедура ОператорПриИзменении(Элемент)
	
	ЗаполнитьКолонкиНаСервере();
	
	
КонецПроцедуры

Процедура ЗаполнитьКолонкиНаСервере()
	
	КолонкиСимкарта             = объект.Оператор.СимКарта;
	КолонкиАбонентскаяПлата     = объект.Оператор.КолонкиАбонентскаяПлата;
	КолонкиМобильнаяСвязь       = объект.Оператор.КолонкиМобильнаяСвязь;
	КолонкиSMSMMS               = объект.Оператор.КолонкиSMSMMS;
	КолонкиИнтернет               = объект.Оператор.КолонкиИнтернет;
	КолонкиРоуминг              = объект.Оператор.КолонкиРоуминг;
	КолонкиДополнительныеУслуги = объект.Оператор.КолонкиДополнительныеУслуги;
	КолонкиСкидка               = объект.Оператор.КолонкиСкидка;
	
	
	
КонецПроцедуры	


&НаКлиенте
Процедура ПрочитатьДанныеИзфайла()
		
	Попытка	
		Excel = Новый COMObject("Excel.Application");
	Исключение
		Сообщить("MS Office Excel на компьютере не установлен. Необходимо выполнить установку/переустановку MS Office Excel.");
	КонецПопытки;
	
	Если  Объект.Файл = "" Тогда
		
		Сообщить("Файл не выбран");
		Возврат;
		
	КонецЕсли;
	
	Excel.Workbooks.Open(СокрЛП(Объект.Файл));
	//Книга = Excel.ActiveWorkbook;
	
	ВсегоЛистов = Excel.Sheets.Count;
	НомерВыбранногоЛиста=0;
	
	для НомерЛиста = 1 по ВсегоЛистов Цикл
		
		ИмяЛиста =  Excel.Sheets(НомерЛиста).Name;
		ИмяЛиста = СтрЗаменить(ИмяЛиста,"-","");
		ИмяЛиста = СтрЗаменить(ИмяЛиста,"_","");
		ИмяЛиста = СтрЗаменить(ИмяЛиста,"(","");
		ИмяЛиста = СтрЗаменить(ИмяЛиста,")","");
		
		ВыбранныйЛистСтрока = ВыбранныйЛист;
		ВыбранныйЛистСтрока = СтрЗаменить(ВыбранныйЛистСтрока,"-","");
		ВыбранныйЛистСтрока = СтрЗаменить(ВыбранныйЛистСтрока,"_","");
		ВыбранныйЛистСтрока = СтрЗаменить(ВыбранныйЛистСтрока,")","");
		ВыбранныйЛистСтрока = СтрЗаменить(ВыбранныйЛистСтрока,"(","");
		
		Если ВыбранныйЛистСтрока = ИмяЛиста Тогда
			НомерВыбранногоЛиста = 	НомерЛиста;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;	
	
	Если НомерВыбранногоЛиста=0 Тогда
		Сообщить("Лист не найден");
		Возврат;
	КонецЕсли;	
	
	ЛистExcel  = Excel.Worksheets(НомерВыбранногоЛиста);
	
	ВсегоСтрок = ЛистExcel.Cells(1,1).SpecialCells(11).Row;

	
	ВывестиШапкуНаСервере();
	
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("СимКарта");	
	СтруктураРезультат.Вставить("МобильнаяСвязь");	
	СтруктураРезультат.Вставить("АбонентскаяПлата");
	СтруктураРезультат.Вставить("SMSMMS");
	СтруктураРезультат.Вставить("Интернет");	
	СтруктураРезультат.Вставить("Роуминг");
	СтруктураРезультат.Вставить("ДополнительныеУслуги");
	СтруктураРезультат.Вставить("Скидка");

	
	НеудачныхПопыток = 0;
	
	Счетчик =0;
	Объект.ТЧРезультат.Очистить();
	
	Для НомерСтроки = 1 по ВсегоСтрок Цикл
		Счетчик = Счетчик + 1;
		СимКарта =  ЛистExcel.Cells(НомерСтроки,Число(КолонкиСимкарта)).Value;
		СтруктураРезультат.СимКарта = ПреобразоватьНомер(СимКарта);
		
		Если СтрДлина(СимКарта) = 10 и ТолькоЦифрыВСтроке(СтруктураРезультат.СимКарта) Тогда
			
			РасчитатьСуммы(ЛистExcel,НомерСтроки,СтруктураРезультат); 
			НоваяСтрока = Объект.ТЧРезультат.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтруктураРезультат);
			
			НеудачныхПопыток = 0;
			
			Элементы.СтрокаСостояния.Заголовок = "Прочитано " + НомерСтроки + " строк";
			
			Если Счетчик = 100 Тогда
				ЭтаФорма.ОбновитьОтображениеДанных();
				СброситьСчетчик();
			КонецЕсли;
						
		Иначе
			НеудачныхПопыток = НеудачныхПопыток + 1;
			
		КонецЕсли;
		
		Если НеудачныхПопыток > 10 Тогда
			Элементы.СтрокаСостояния.Заголовок = "Не корректные настройки";
			Прервать;
		КонецЕсли;
		
	КонецЦикла;	
	
	ЗаполнитьРезультатНаСервере();
	
	
	Excel.Application.DisplayAlerts=0;
	Excel.Quit();
	Excel.Application.DisplayAlerts=1;
	
	Excel = Неопределено;
	Книга = Неопределено;
	ЛистExcel = Неопределено;
 	
КонецПроцедуры

Процедура СброситьСчетчик()
	
	Счетчик = 0;
	
КонецПроцедуры	


Процедура ЗаполнитьРезультатНаСервере()
	
	Макет = обработки.ЗакрузкаРасходовНаМобильнуюСвязь.ПолучитьМакет("Макет"); 
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	таблицаРезультат = Объект.ТЧРезультат.Выгрузить();
	Для каждого строка из таблицаРезультат Цикл
		ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,строка);
		объект.Результат.Вывести(ОбластьСтрока);
	КонецЦикла;	
	
	
КонецПроцедуры	

Процедура ВывестиШапкуНаСервере()

	Объект.Результат.Очистить();
	Макет = обработки.ЗакрузкаРасходовНаМобильнуюСвязь.ПолучитьМакет("Макет"); 
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	Объект.Результат.Вывести(ОбластьШапка);

	
КонецПроцедуры

//Костыль
Процедура ВывестиСтрокуНаСервере(СтруктураРезультат)

	Макет = обработки.ЗакрузкаРасходовНаМобильнуюСвязь.ПолучитьМакет("Макет"); 
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ЗаполнитьЗначенияСвойств(ОбластьСтрока.Параметры,СтруктураРезультат);
	объект.Результат.Вывести(ОбластьСтрока);
	
КонецПроцедуры

&НаКлиенте	
Функция ПреобразоватьНомер(СимКарта)
	СимКарта = Строка(СимКарта);
	СимКарта = СтрЗаменить(СимКарта," ","");
	СимКарта = СтрЗаменить(СимКарта,Символ(160),"");
	СимКарта = СтрЗаменить(СимКарта,"-","");
	СимКарта = СтрЗаменить(СимКарта,"+","");
	Если СтрДлина(СимКарта) > 10 Тогда
		СимКарта = Прав(СимКарта,10);
	КонецЕсли;
	Возврат СимКарта;
КонецФункции

&НаКлиенте
Процедура РасчитатьСуммы(ЛистExcel,НомерСтроки,Результат)
	
	Результат.МобильнаяСвязь         = ПолучитьСуммуИзФайла(ЛистExcel,НомерСтроки,КолонкиМобильнаяСвязь);
	Результат.АбонентскаяПлата       = ПолучитьСуммуИзФайла(ЛистExcel,НомерСтроки,КолонкиАбонентскаяПлата);
	Результат.SMSMMS      			 = ПолучитьСуммуИзФайла(ЛистExcel,НомерСтроки,КолонкиSMSMMS);
	Результат.Интернет       		 = ПолучитьСуммуИзФайла(ЛистExcel,НомерСтроки,КолонкиИнтернет);	
	Результат.Роуминг 				 = ПолучитьСуммуИзФайла(ЛистExcel,НомерСтроки,КолонкиРоуминг);
	Результат.ДополнительныеУслуги   = ПолучитьСуммуИзФайла(ЛистExcel,НомерСтроки,КолонкиДополнительныеУслуги);
	Результат.Скидка				 = ПолучитьСуммуИзФайла(ЛистExcel,НомерСтроки,КолонкиСкидка);
	
КонецПроцедуры	


&НаКлиенте
Функция РазложитьСтрокуВМассивПодстрок(Знач Стр, Разделитель = ",") Экспорт
	
	МассивСтрок = Новый Массив();
	Если Разделитель = " " Тогда
		Стр = СокрЛП(Стр);
		Пока Истина Цикл
			Поз = Найти(Стр,Разделитель);
			Если Поз=0 Тогда
				МассивСтрок.Добавить(Стр);
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр,Поз-1));
			Стр = СокрЛ(Сред(Стр,Поз));
		КонецЦикла;
	Иначе
		ДлинаРазделителя = СтрДлина(Разделитель);
		Пока Истина Цикл
			Поз = Найти(Стр,Разделитель);
			Если Поз=0 Тогда
				МассивСтрок.Добавить(Стр);
				Возврат МассивСтрок;
			КонецЕсли;
			МассивСтрок.Добавить(Лев(Стр,Поз-1));
			Стр = Сред(Стр,Поз+ДлинаРазделителя);
		КонецЦикла;
	КонецЕсли;
	
КонецФункции // глРазложить


&НаКлиенте
Функция ПолучитьСуммуИзФайла(ЛистExcel,НомерСтроки,КолонкиСотоваяСвязь)
	
	Сумма = 0;
	Колонки = РазложитьСтрокуВМассивПодстрок(КолонкиСотоваяСвязь);
	Для НомерКолонки = 0 по Колонки.Количество()-1 Цикл
		Попытка
			Знак = 1;
			НомерКолонкиВФайле = Число(Колонки[НомерКолонки]);
			Если НомерКолонкиВФайле < 0 Тогда
				НомерКолонкиВФайле = НомерКолонкиВФайле*-1;
				Знак = -1;
			КонецЕсли;	
		Исключение
			НомерКолонкиВФайле = 0;
		КонецПопытки;	
		Если НомерКолонкиВФайле <> 0 Тогда			
			ЗначениеВФайле = ЛистExcel.Cells(НомерСтроки,НомерКолонкиВФайле).Value;
			Сумма = Сумма + Знак*ПреобразоватьВЧисло(ЗначениеВФайле);		
		КонецЕсли;
	КонецЦикла;	
	
	Возврат Сумма;
	
КонецФункции	

&НаКлиенте
Функция ПреобразоватьВЧисло(Строка);
	
	Попытка
    	Возврат Окр(Число(Строка),2); 
	Исключение
		Возврат 0;
	КонецПопытки;		
	
КонецФункции	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Структура = Новый Структура;
	Структура.Вставить("Оператор",неопределено);
	ЗаполнитьЗначенияСвойств(Структура,Параметры);
	Если  Структура.Оператор <> неопределено Тогда 
		Объект.Оператор = Параметры.Оператор;
	КонецЕсли;	
	Элементы.СтрокаСостояния.Заголовок = "";
	//Объект.Файл = "C:\Users\automacon29\Desktop\Мегафон тест.xlsx";
	//Объект.Оператор = Справочники.АК_ОператорыМобильнойСвязи.НайтиПоКоду("000000001");
	ЗаполнитьКолонкиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Функция ТолькоЦифрыВСтроке(Знач СтрокаПроверки, Знач УчитыватьЛидирующиеНули = Истина, Знач УчитыватьПробелы = Истина)
	
	Если ТипЗнч(СтрокаПроверки) <> Тип("Строка") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ УчитыватьПробелы Тогда
		СтрокаПроверки = СтрЗаменить(СтрокаПроверки, " ", "");
	КонецЕсли;
	
	Если Сред(СтрокаПроверки, 1, 1) = "-" Тогда
		СтрокаПроверки = Сред(СтрокаПроверки, 2, СтрДлина(СтрокаПроверки));
	КонецЕсли;
	
	Если ПустаяСтрока(СтрокаПроверки) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если НЕ УчитыватьЛидирующиеНули Тогда
		Позиция = 1;
		// Взятие символа за границей строки возвращает пустую строку
		Пока Сред(СтрокаПроверки, Позиция, 1) = "0" Цикл
			Позиция = Позиция + 1;
		КонецЦикла;
		СтрокаПроверки = Сред(СтрокаПроверки, Позиция);
	КонецЕсли;
	
	// Если содержит только цифры, то в результате замен должна быть получена пустая строка
	// Проверять при помощи ПустаяСтрока нельзя, так как в исходной строке могут быть пробельные символы
	Возврат СтрДлина(
	СтрЗаменить( СтрЗаменить( СтрЗаменить( СтрЗаменить( СтрЗаменить(
	СтрЗаменить( СтрЗаменить( СтрЗаменить( СтрЗаменить( СтрЗаменить(  
	СтрокаПроверки, "0", ""), "1", ""), "2", ""), "3", ""), "4", ""), "5", ""), "6", ""), "7", ""), "8", ""), "9", "")) = 0;
	
КонецФункции


&НаКлиенте
Процедура ГруппаЭтапыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	ОбновитьОформлениеПриСменеСтраницы();
	
КонецПроцедуры

Процедура ОбновитьОформлениеПриСменеСтраницы()
	
	ТекущаяСтраница	= Элементы.ГруппаЭтапы.ТекущаяСтраница;
		
	ЭтоНачало = ТекущаяСтраница = Элементы.ГруппаФайлИОператор;
	ЭтоКонец  = ТекущаяСтраница = Элементы.ГруппаРасходы;
	Элементы.Назад.Видимость = НЕ ЭтоНачало;
	Если ЭтоКонец Тогда
		ЭтаФорма.Элементы.Далее.Заголовок = "Загрузить";
	Иначе
		ЭтаФорма.Элементы.Далее.Заголовок = "Далее >>";
	КонецЕсли;	
		
		
КонецПроцедуры	


&НаКлиенте
Процедура Назад(Команда)
	
	Если ЭтаФорма.Элементы.ГруппаЭтапы.ТекущаяСтраница = ЭтаФорма.Элементы.ГруппаРезультат Тогда
		ЭтаФорма.Элементы.ГруппаЭтапы.ТекущаяСтраница =  ЭтаФорма.Элементы.ГруппаФайлИОператор;	
	ИначеЕсли ЭтаФорма.Элементы.ГруппаЭтапы.ТекущаяСтраница = ЭтаФорма.Элементы.ГруппаРасходы Тогда	
		ЭтаФорма.Элементы.ГруппаЭтапы.ТекущаяСтраница =  ЭтаФорма.Элементы.ГруппаРезультат;
	КонецЕсли;	
    ОбновитьОформлениеПриСменеСтраницы();
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьОформлениеПриСменеСтраницы();
КонецПроцедуры


&НаКлиенте
Процедура ФайлПриИзменении(Элемент)
	
	ОбновитьСписокЛистов();
	
КонецПроцедуры

//&НаКлиенте
//Процедура ОбновитьСписокЛистов();
//	
//	Листы.Очистить();
//	Листы=ФайлExcelПолучитьСписокЛистов_1CXML_XLSX(Объект.Файл);	
//	
//КонецПроцедуры	
//	
//Функция ФайлExcelПолучитьСписокЛистов_1CXML_XLSX(ФайлEXCEL)
//    Перем ZIPКаталог, WorkBook;
//    Перем СписокЛистов;
//    ZIPКаталог = КаталогВременныхФайлов() + "XLSX\";
//    СписокЛистов = Новый СписокЗначений;
//    Файл = ПолучитьОбъектФайл(ФайлEXCEL, Истина);
//    Если Файл = Неопределено Тогда
//        Сообщить("Невозможно получить список листов, т.к. невозможно открыть для чтения файл:
//        |" + ФайлEXCEL);
//        Возврат Новый СписокЗначений;
//    КонецЕсли;
//    Если НЕ ВРег(Файл.Расширение) = ".XLSX" Тогда
//        Возврат Новый СписокЗначений;
//    КонецЕсли;
//    WorkBook = Новый ЧтениеXML;
//    WorkBook.ОткрытьФайл(ZIPКаталог + "XL\WorkBook.xml");
//    // Считать очередной узел XML.
//    Пока WorkBook.Прочитать() Цикл
//        Если НЕ ВРег(WorkBook.Имя) = ВРег("sheet") Тогда
//            Продолжить;
//        КонецЕсли;
//        // Тип текущего узла XML.
//        Если WorkBook.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
//            // Считать очередной атрибут элемента XML.
//            Пока WorkBook.ПрочитатьАтрибут() Цикл
//                Если НЕ ВРег(WorkBook.Имя) = "NAME" Тогда
//                    Продолжить;
//                КонецЕсли;
//                СписокЛистов.Добавить(WorkBook.Значение);
//            КонецЦикла;
//        КонецЕсли;
//    КонецЦикла;
//    // Завершение работы.
//    // Закрытие Объектов.
//    WorkBook.Закрыть();
//    Возврат СписокЛистов;
//КонецФункции

//Функция ПолучитьОбъектФайл(Знач ФайлEXCEL, РаспаковатьXLSX = Ложь)
//    Перем Файл, objFSO, objFile, XLSXРаспакован;
//    Если НЕ ЗначениеЗаполнено(ФайлEXCEL) Тогда
//        Возврат Неопределено;
//    КонецЕсли;
//    Файл = Новый Файл(ФайлEXCEL);
//    Если НЕ Файл.Существует() Тогда
//        Сообщить("Файл не существует:
//        |" + ФайлEXCEL);
//        Возврат Неопределено;
//    КонецЕсли;
//    // Проверка: Занят ли файл другим процессом?
//    objFSO = Новый COMОбъект("Scripting.FileSystemObject");
//    Попытка
//        objFSO.MoveFile(ФайлEXCEL, ФайлEXCEL);
//        objFile = objFSO.GetFile(ФайлEXCEL);
//    Исключение
//        objFile = Неопределено;
//        objFSO = Неопределено;
//        Сообщить("Ошибка открытия файла/Файл занят другой программой:
//        |" + ФайлEXCEL);
//        Возврат Неопределено;
//    КонецПопытки;
//    objFSO = Неопределено;
//    Если ВРег(Файл.Расширение) = ".XLSX" И РаспаковатьXLSX Тогда
//        // Распаковка файла XLSX во временный каталог.
//        XLSXРаспакован = РаспаковатьXLSXвКаталогВременныхФайлов(ФайлEXCEL);
//        Если НЕ XLSXРаспакован Тогда
//            Возврат Неопределено;
//        КонецЕсли;
//    КонецЕсли;
//    Возврат Файл;
//КонецФункции

//Функция РаспаковатьXLSXвКаталогВременныхФайлов(ФайлEXCEL)
//    Перем ZIPФайл, ZIPКаталог;
//    ZIPКаталог = КаталогВременныхФайлов() + "XLSX\";
//    Попытка
//        УдалитьФайлы(ZIPКаталог);
//        ZIPФайл = Новый ЧтениеZipФайла;
//        ZIPФайл.Открыть(ФайлEXCEL);
//        ZIPФайл.ИзвлечьВсе(ZIPКаталог, РежимВосстановленияПутейФайловZIP.Восстанавливать);
//        Возврат Истина;
//    Исключение
//        Возврат Ложь;
//    КонецПопытки;
//    Возврат Истина;
//КонецФункции

&НаКлиенте
Процедура СписокЛистов(Команда)
	
	ОбновитьСписокЛистов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокЛистов()
	
	Перем ТабличныйДокумент, ОбластьТД;
	Перем СписокЛистов;

	СписокЛистов = Новый СписокЗначений;
	
	Элементы.ВыбранныйЛист.СписокВыбора.Очистить();
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Попытка
		// Выполняется долго на больших файлах.
		ТабличныйДокумент.Прочитать(объект.Файл);
	Исключение
		Сообщить(ОписаниеОшибки(), СтатусСообщения.Внимание);
		ВыбранныйЛист = "";
	КонецПопытки;
	
	НомерЛиста = 1;
	Для Каждого ОбластьТД ИЗ ТабличныйДокумент.Области Цикл		
		Элементы.ВыбранныйЛист.СписокВыбора.Добавить(ОбластьТД.Имя);
		НомерЛиста = НомерЛиста + 1;
	КонецЦикла;	
	
	
КонецПроцедуры	

&НаКлиенте
Процедура ЛистыПриИзменении(Элемент)
	
	ВыбранныйЛист = 1;
	
КонецПроцедуры
