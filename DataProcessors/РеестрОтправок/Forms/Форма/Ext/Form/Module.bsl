
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТорговаяТочка = ?(ПараметрыСеанса.ТорговаяТочкаПоАйпи=Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("999_Тест"),Справочники.СтруктурныеЕдиницы.ПустаяСсылка(),ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	//Сообщить(ТорговаяТочка);
	ТекДата = ТекущаяДатаСеанса();
	РолиТекПользователя = Новый СписокЗначений;
	ЭтоАдминистратор = Ложь;
	МассивРолейТекПользователя = МеханизмОбменаСообщениями.ПолучитьРолиПользователяИлиФизЛица(ПараметрыСеанса.ТекущийПользователь);
	Если МассивРолейТекПользователя <> Неопределено Тогда
		РолиТекПользователя.ЗагрузитьЗначения(МассивРолейТекПользователя);
		Если МассивРолейТекПользователя.Найти(Справочники.РолиПользователей.Администратор) <> Неопределено Тогда
			ЭтоАдминистратор = Истина;
		КонецЕсли;
	КонецЕсли;
	ТекФизЛицо=ПараметрыСеанса.ТекущийПользователь.ФизЛицо;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РолиПользователейСоставРоли.Ссылка
		|ИЗ
		|	Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.ТипыРолей КАК РолиПользователейТипыРолей
		|		ПО РолиПользователейСоставРоли.Ссылка = РолиПользователейТипыРолей.Ссылка
		|			И (РолиПользователейСоставРоли.Сотрудник = &ТекФизЛицо)
		|			И (РолиПользователейТипыРолей.ТипРоли = &ТипРоли)";

	Запрос.УстановитьПараметр("ТекФизЛицо", ТекФизЛицо);
	Запрос.УстановитьПараметр("ТипРоли", ПланыВидовХарактеристик.ТипыРолейПользователя.БрендМенеджер);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ЭтоПродактМенеджер=Истина;
	КонецЦикла;


	
	СтаршийСмены = МеханизмОбменаСообщениями.ПолучитьСтаршегоТекущейСмены(ТорговаяТочка);
	ОтборПериод.Вариант=ВариантСтандартногоПериода.Сегодня;
	Элементы.ТЗРезКоличествоМагазинов.Видимость=ЭтоАдминистратор или НЕ ЗначениеЗаполнено(ТорговаяТочка);	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("ОбработкаОжидания", 600);
	ОбновитьТЗРезНаСервере("ФильтрВсеСообщения");
КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОжидания()

	ОбновитьТЗРезНаСервере("ФильтрВсеСообщения");

КонецПроцедуры


&НаСервере
Процедура ОбновитьТЗРезНаСервере(ИмяАктивнойКнопки) Экспорт
	
	ТекСсылка = Неопределено;
	ТекСообщение=Неопределено;
	
	ТекСтрока = Элементы.ТЗРез.ТекущаяСтрока;
	Если ТекСтрока <> Неопределено Тогда
		ТекСтрокаТЗРез = Объект.ТЗРез.НайтиПоИдентификатору(ТекСтрока);
		Если ТекСтрокаТЗРез <> Неопределено Тогда
			ТекСсылка = ТекСтрокаТЗРез.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтоАдминистратор или НЕ ЗначениеЗаполнено(ТорговаяТочка) Тогда
		Запрос1 = Новый Запрос;
		Запрос1.Текст =
		"ВЫБРАТЬ
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка,
		|	СУММА(ВЫБОР
		|			КОГДА СообщениеМОССтруктурныеЕдиницы.Прочитал = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) КАК Прочитано,
		|	КОЛИЧЕСТВО(СообщениеМОССтруктурныеЕдиницы.Прочитал) КАК ВсегоМагазинов
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	Документ.СообщениеМОС.СтруктурныеЕдиницы КАК СообщениеМОССтруктурныеЕдиницы
		|ГДЕ
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И СообщениеМОССтруктурныеЕдиницы.Ссылка.ФлХТМЛ
		|	И СообщениеМОССтруктурныеЕдиницы.Ссылка.Дата МЕЖДУ &ДатаНачала И &Датаокончания  и &УсловиеПродакт
		|
		|
		|СГРУППИРОВАТЬ ПО
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.Дата КАК Дата,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.Номер КАК Номер,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ТипСообщения КАК ТипСообщения,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.Тема КАК Тема,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.РольПолучателя КАК РольПолучателя,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ТекстСообщения КАК ТекстСообщения,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.Автор КАК Автор,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ДатаИВремяВыполненияПлан КАК ДатаИВремяВыполненияПлан,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ДатаИВремяВыполненияФакт КАК ДатаИВремяВыполненияФакт,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.СрокАктуальностиСообщения КАК СрокАктуальностиСообщения,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.Отправитель КАК Отправитель,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.Товар КАК Товар,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ШаблонСообщений КАК ШаблонСообщений,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ТипИнцидента КАК ТипИнцидента,
		|	СообщениеМОССтруктурныеЕдиницы.Прочитал КАК Прочитал,
		|	СообщениеМОССтруктурныеЕдиницы.ДатаИВремяПрочтения КАК ДатаИВремяПрочтения,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ВсемСменам КАК ВсемСменам,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.Проведен КАК Проведен,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.СтатусИнцидента КАК СтатусИнцидента,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.КодНаправления КАК КодНаправления,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка КАК Ссылка,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ПрочтеноВсеми КАК ПрочтеноВсеми,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ДатаАктуальности КАК ДатаАктуальности,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.СтатусИнцидентаИзменен,
		|	ВЫБОР
		|		КОГДА СообщениеМОССтруктурныеЕдиницы.Ссылка.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийМОС.Инцидент)
		|				И СообщениеМОССтруктурныеЕдиницы.Ссылка.СтатусИнцидента = 3
		|			ТОГДА ""Проверить выполнение""
		|		КОГДА СообщениеМОССтруктурныеЕдиницы.Ссылка.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийМОС.ИнформационноеСообщение)
		|				И СообщениеМОССтруктурныеЕдиницы.Ссылка.КодНаправления = 0
		|				И СообщениеМОССтруктурныеЕдиницы.Прочитал = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|			ТОГДА ""Прочитать сообщение""
		|		КОГДА СообщениеМОССтруктурныеЕдиницы.Ссылка.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийМОС.Задача)
		|				И СообщениеМОССтруктурныеЕдиницы.Прочитал = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|			ТОГДА ""Выполнить задачу""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ТребуемоеДействие,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.СтатусСообщенияСтрокой КАК СтатусСообщения,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.АдресИ_ИД_ПочтовогоСообщения КАК АдресИ_ИД_ПочтовогоСообщения,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.SQL_ID КАК SQL_ID,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.АдресЭПОтправителя КАК АдресЭПОтправителя,
		|	(ВЫРАЗИТЬ(вт.Прочитано / ВЫБОР
		|			КОГДА вт.ВсегоМагазинов = 0
		|				ТОГДА 1
		|			ИНАЧЕ вт.ВсегоМагазинов
		|		КОНЕЦ КАК ЧИСЛО(15, 2))) * 100 КАК ПроцентПрочитанных
		|ИЗ
		|	Документ.СообщениеМОС КАК СообщениеМОССтруктурныеЕдиницы
		|		ЛЕВОЕ СОЕДИНЕНИЕ вт КАК вт
		|		ПО СообщениеМОССтруктурныеЕдиницы.Ссылка = вт.Ссылка
		|ГДЕ
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И СообщениеМОССтруктурныеЕдиницы.Ссылка.ФлХТМЛ
		|	И СообщениеМОССтруктурныеЕдиницы.Ссылка.Дата МЕЖДУ &ДатаНачала И &Датаокончания  и &УсловиеПродакт
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";
		
	Иначе	
		Запрос1 = Новый Запрос;
		Запрос1.Текст = 
		"ВЫБРАТЬ
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка,
		|	СУММА(ВЫБОР
		|			КОГДА СообщениеМОССтруктурныеЕдиницы.Прочитал = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) КАК Прочитано,
		|	КОЛИЧЕСТВО(СообщениеМОССтруктурныеЕдиницы.Прочитал) КАК ВсегоМагазинов
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	Документ.СообщениеМОС.СтруктурныеЕдиницы КАК СообщениеМОССтруктурныеЕдиницы
		|ГДЕ
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И СообщениеМОССтруктурныеЕдиницы.Ссылка.ФлХТМЛ
		|	И СообщениеМОССтруктурныеЕдиницы.Ссылка.Дата МЕЖДУ &ДатаНачала И &Датаокончания    и &УсловиеПродакт
		|
		|
		|СГРУППИРОВАТЬ ПО
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.Дата КАК Дата,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.Номер КАК Номер,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ТипСообщения КАК ТипСообщения,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.Тема КАК Тема,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.РольПолучателя КАК РольПолучателя,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ТекстСообщения КАК ТекстСообщения,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.Автор КАК Автор,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ДатаИВремяВыполненияПлан КАК ДатаИВремяВыполненияПлан,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ДатаИВремяВыполненияФакт КАК ДатаИВремяВыполненияФакт,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.СрокАктуальностиСообщения КАК СрокАктуальностиСообщения,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.Отправитель КАК Отправитель,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.Товар КАК Товар,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ШаблонСообщений КАК ШаблонСообщений,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ТипИнцидента КАК ТипИнцидента,
		|	СообщениеМОССтруктурныеЕдиницы.СтаршийСмены КАК СтаршийСмены,
		|	СообщениеМОССтруктурныеЕдиницы.Прочитал КАК Прочитал,
		|	СообщениеМОССтруктурныеЕдиницы.ДатаИВремяПрочтения КАК ДатаИВремяПрочтения,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ВсемСменам КАК ВсемСменам,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.Проведен КАК Проведен,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.СтатусИнцидента КАК СтатусИнцидента,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.КодНаправления КАК КодНаправления,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка КАК Ссылка,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ПрочтеноВсеми КАК ПрочтеноВсеми,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.ДатаАктуальности КАК ДатаАктуальности,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.СтатусИнцидентаИзменен,
		|	ВЫБОР
		|		КОГДА СообщениеМОССтруктурныеЕдиницы.Ссылка.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийМОС.Инцидент)
		|				И СообщениеМОССтруктурныеЕдиницы.Ссылка.СтатусИнцидента = 3
		|			ТОГДА ""Проверить выполнение""
		|		КОГДА СообщениеМОССтруктурныеЕдиницы.Ссылка.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийМОС.ИнформационноеСообщение)
		|				И СообщениеМОССтруктурныеЕдиницы.Ссылка.КодНаправления = 0
		|				И СообщениеМОССтруктурныеЕдиницы.Прочитал = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|			ТОГДА ""Прочитать сообщение""
		|		КОГДА СообщениеМОССтруктурныеЕдиницы.Ссылка.ТипСообщения = ЗНАЧЕНИЕ(Перечисление.ТипыСообщенийМОС.Задача)
		|				И СообщениеМОССтруктурныеЕдиницы.Прочитал = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|			ТОГДА ""Выполнить задачу""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК ТребуемоеДействие,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.СтатусСообщенияСтрокой КАК СтатусСообщения,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.АдресИ_ИД_ПочтовогоСообщения,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.SQL_ID,
		|	СообщениеМОССтруктурныеЕдиницы.Ссылка.АдресЭПОтправителя,
		|	(ВЫРАЗИТЬ(вт.Прочитано / ВЫБОР
		|			КОГДА вт.ВсегоМагазинов = 0
		|				ТОГДА 1
		|			ИНАЧЕ вт.ВсегоМагазинов
		|		КОНЕЦ КАК ЧИСЛО(15, 2))) * 100 КАК ПроцентПрочитанных
		|ИЗ
		|	Документ.СообщениеМОС.СтруктурныеЕдиницы КАК СообщениеМОССтруктурныеЕдиницы
		|		ЛЕВОЕ СОЕДИНЕНИЕ вт КАК вт
		|		ПО СообщениеМОССтруктурныеЕдиницы.Ссылка = вт.Ссылка
		|ГДЕ
		|	(СообщениеМОССтруктурныеЕдиницы.СтруктурнаяЕдиница = &СтруктурнаяЕдиница)
		//|	И СообщениеМОССтруктурныеЕдиницы.СтаршийСмены = &СтаршийСмены
		|	И СообщениеМОССтруктурныеЕдиницы.Ссылка.ПометкаУдаления = ЛОЖЬ И СообщениеМОССтруктурныеЕдиницы.Ссылка.ФлХТМЛ  И СообщениеМОССтруктурныеЕдиницы.Ссылка.Дата Между &ДатаНачала и &Датаокончания  и &УсловиеПродакт
		//|	И СообщениеМОССтруктурныеЕдиницы.Ссылка.ДатаАктуальности >= &ТекущаяДата
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";
	КонецЕсли; 
	
	Запрос1.УстановитьПараметр("СтруктурнаяЕдиница", ТорговаяТочка);
	Запрос1.УстановитьПараметр("ТекущаяДата", ТекущаяДатаСеанса());
	Запрос1.УстановитьПараметр("СтаршийСмены", СтаршийСмены);
	Запрос1.УстановитьПараметр("ДатаНачала", ОтборПериод.ДатаНачала);
	Запрос1.УстановитьПараметр("ДатаОкончания", КонецДня(ОтборПериод.ДатаОкончания));
	Запрос1.УстановитьПараметр("Тема1", "%Реестр новинок%");
	Запрос1.УстановитьПараметр("Тема2", "%Реестр особых новинок%");
	Запрос1.УстановитьПараметр("Тема3", "%Развитие%");
	Если ЭтоПродактМенеджер Тогда
		Запрос1.Текст=СтрЗаменить(Запрос1.Текст,"&УсловиеПродакт","(СообщениеМОССтруктурныеЕдиницы.Ссылка.Тема подобно &Тема1 или СообщениеМОССтруктурныеЕдиницы.Ссылка.Тема подобно &Тема2) и не СообщениеМОССтруктурныеЕдиницы.Ссылка.Тема подобно &Тема3");
	Иначе	
		Запрос1.Текст=СтрЗаменить(Запрос1.Текст,"&УсловиеПродакт","Истина");
	КонецЕсли; 	
	
	
	Выб1 = Запрос1.Выполнить().Выбрать();
	
	Объект.ТЗРез.Очистить();
	
	Пока Выб1.Следующий() Цикл
		ДобавлятьСтроку = Ложь;
		Если ИмяАктивнойКнопки = "ФильтрНеВыполнено" ИЛИ ИмяАктивнойКнопки = "Фильтр2Задачи" Тогда
			Если Выб1.ТипСообщения = Перечисления.ТипыСообщенийМОС.Инцидент
					И (Выб1.СтатусИнцидента = 1 ИЛИ Выб1.СтатусИнцидента = 2 ИЛИ Выб1.СтатусИнцидента = 3) Тогда
				ДобавлятьСтроку = Истина;
			КонецЕсли;
		КонецЕсли;
		Если ИмяАктивнойКнопки = "ФильтрОбязательноВыполнить" ИЛИ ИмяАктивнойКнопки = "Фильтр2Задачи" Тогда
			Если Выб1.ТипСообщения = Перечисления.ТипыСообщенийМОС.Задача
					И НЕ ЗначениеЗаполнено(Выб1.Прочитал) Тогда
				ДобавлятьСтроку = Истина;
			КонецЕсли;
		КонецЕсли;
		Если ИмяАктивнойКнопки = "ФильтрОбязательноДляПрочтения" Тогда
			Если (Выб1.ТипСообщения = Перечисления.ТипыСообщенийМОС.ИнформационноеСообщение ИЛИ Выб1.ТипСообщения = Перечисления.ТипыСообщенийМОС.Задача)
					И НЕ ЗначениеЗаполнено(Выб1.Прочитал) И Выб1.КодНаправления = 0
					ИЛИ Выб1.СтатусИнцидентаИзменен Тогда
				ДобавлятьСтроку = Истина;
			КонецЕсли;
		КонецЕсли;
		Если ИмяАктивнойКнопки = "ФильтрВсеОтправленные" Тогда
			Если Выб1.КодНаправления = 1 Тогда
				ДобавлятьСтроку = Истина;
			КонецЕсли;
		КонецЕсли;
		Если ИмяАктивнойКнопки = "ФильтрЧерновики" Тогда
			Если НЕ Выб1.Проведен Тогда
				ДобавлятьСтроку = Истина;
			КонецЕсли;
		КонецЕсли;
		Если ИмяАктивнойКнопки = "ФильтрВсеСообщения" Тогда
			ДобавлятьСтроку = Истина;
		КонецЕсли;
		
		Если ИмяАктивнойКнопки = "Фильтр2Входящие" Тогда
			Если Выб1.Проведен И Выб1.КодНаправления = 0 Тогда
				ДобавлятьСтроку = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ДобавлятьСтроку Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаИсключений = "";
		Если НЕ ЗначениеЗаполнено(Выб1.Прочитал) Тогда
			СтрокаИсключений = "ТекстСообщения";
		КонецЕсли;
		
		СтрокаТЗРез = Объект.ТЗРез.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТЗРез, Выб1,, СтрокаИсключений);
		
		Если ЭтоАдминистратор или НЕ ЗначениеЗаполнено(ТорговаяТочка) Тогда
		//	Для каждого СтрОбещ Из Объект.ТЗРез Цикл
		//		СтрМагазины="";
		//		Для каждого Стр Из СтрОбещ.Ссылка.СтруктурныеЕдиницы Цикл
		//			СтрМагазины=СтрМагазины+", "+Строка(Стр.СтруктурнаяЕдиница);
		//		КонецЦикла;
		//		СтрМагазины=Прав(СтрМагазины,СтрДлина(СтрМагазины)-2);
		//		СтрОбещ.Магазины=СтрМагазины;
		//	КонецЦикла;
			СтрМагазины="";
			Для каждого Стр Из СтрокаТЗРез.Ссылка.СтруктурныеЕдиницы Цикл
				Если Найти(СтрМагазины,Строка(Стр.СтруктурнаяЕдиница))=0 Тогда
					СтрМагазины=СтрМагазины+", "+Строка(Стр.СтруктурнаяЕдиница);
				КонецЕсли; 
			КонецЦикла;
			Для каждого Стр Из СтрокаТЗРез.Ссылка.РолиПолучателей Цикл
				Если Найти(СтрМагазины,Строка(Стр.Роль))=0 Тогда
					СтрМагазины=СтрМагазины+", "+Строка(Стр.Роль);
				КонецЕсли; 
			КонецЦикла;
			СтрМагазины=Прав(СтрМагазины,СтрДлина(СтрМагазины)-2);
			СтрокаТЗРез.КоличествоМагазинов=СтрокаТЗРез.Ссылка.СтруктурныеЕдиницы.Количество();                                 
			СтрокаТЗРез.Магазины=СтрМагазины;
		Иначе
			//Для каждого СтрОбещ Из Объект.ТЗРез Цикл             
			//	СтрОбещ.Магазины=Строка(ТорговаяТочка);
			//КонецЦикла;
			СтрокаТЗРез.Магазины=Строка(ТорговаяТочка);

		КонецЕсли;
		// заполним колонку ТипСообщения2 
		
		СтрокаТЗРез.ТипСообщения2 = Строка(СтрокаТЗРез.ТипСообщения);
		
		Если Выб1.ТипСообщения = Перечисления.ТипыСообщенийМОС.ИнформационноеСообщение Тогда
			//Если ЗначениеЗаполнено(Выб1.АдресИ_ИД_ПочтовогоСообщения) ИЛИ ЗначениеЗаполнено(Выб1.SQL_ID)
			//		ИЛИ Найти(Выб1.Автор.Наименование, "Диговцова") > 0 Тогда
			//	СтрокаТЗРез.ТипСообщения2 = "Уведомление с сервера";
			
			СтрокаАдресовЭП1 = "vkusvill@it-stuff.ru, no-reply@vkusvill.ru";
			
			Если Найти(СтрокаАдресовЭП1, НРег(Выб1.АдресЭПОтправителя)) > 0 ИЛИ ЗначениеЗаполнено(Выб1.SQL_ID)
					ИЛИ Найти(Выб1.Автор.Наименование, "Диговцова") > 0 Тогда
				СтрокаТЗРез.ТипСообщения2 = "Уведомление с сервера";
			ИначеЕсли Найти(Выб1.Отправитель.Наименование, "УЕК") > 0 Тогда
				СтрокаТЗРез.ТипСообщения2 = "Отдел УЕК";
			ИначеЕсли Найти(Выб1.Отправитель.Наименование, "Мерченд") > 0 Тогда
				СтрокаТЗРез.ТипСообщения2 = "Мерчендайзер";
			КонецЕсли;
		КонецЕсли;
		
		
	КонецЦикла;
	
	Если ТекСсылка <> Неопределено Тогда
		ИДСтроки = Неопределено;
		СО1 = Новый Структура("Ссылка", ТекСсылка);
		МС1 = Объект.ТЗРез.НайтиСтроки(СО1);
		Если МС1.Количество() > 0 Тогда
			СтрокаТЗ1 = МС1[0];
			ИДСтроки = СтрокаТЗ1.ПолучитьИдентификатор();
		КонецЕсли; 
		Если ИДСтроки <> Неопределено Тогда
			Элементы.ТЗРез.ТекущаяСтрока = ИДСтроки;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТЗРезВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
		// вызываем форму сообщения
	ТекДанные = Элемент.ТекущиеДанные;
	
	Если ТекДанные <> Неопределено Тогда
		Если Не(ЭтоАдминистратор или НЕ ЗначениеЗаполнено(ТорговаяТочка)) Тогда
			ЭтоЧерновик = ЭтоЧерновик(ТекДанные.Ссылка);
			ОткрытыеОкна = ПолучитьОкна();
			Для Каждого Окно Из ОткрытыеОкна Цикл
				Форма1 = Окно.ПолучитьСодержимое();
				Если Форма1 <> Неопределено Тогда
					Если Форма1.КлючУникальности = "СЩ_ОкноПодтверждения" ИЛИ Форма1.КлючУникальности = "СЩ_ОкноНовогоСообщения" Тогда
						Форма1.Закрыть();
					КонецЕсли;	
				КонецЕсли;
			КонецЦикла;
			Если ЭтоЧерновик Тогда
				СП1 = Новый Структура("Объект, ТорговаяТочка, СтаршийСмены", ТекДанные.Ссылка, ТорговаяТочка, СтаршийСмены);
				Форма1 = ОткрытьФорму("Документ.СообщениеМОС.Форма.ФормаНовогоСообщенияМагазина", СП1, ЭтаФорма,"СЩ_ОкноНовогоСообщения");
			Иначе
				СП1 = Новый Структура("Объект, ТорговаяТочка, СтаршийСмены", ТекДанные.Ссылка, ТорговаяТочка, СтаршийСмены);
				Форма1 = ОткрытьФорму("Документ.СообщениеМОС.Форма.ФормаПодтвержденияМагазина", СП1, ЭтаФорма,"СЩ_ОкноПодтверждения");
			КонецЕсли;
		Иначе	
				СП1 = Новый Структура("Объект,Докссылка,Ключ, ТорговаяТочка, СтаршийСмены", ТекДанные.Ссылка, ТекДанные.Ссылка, ТекДанные.Ссылка, ТорговаяТочка, СтаршийСмены);
				Форма1 = ОткрытьФорму("Документ.СообщениеМОС.Форма.ФормаСообщенияЦО", СП1, ЭтаФорма,"СЩ_ОкноПодтверждения");
			
			//ОткрытьЗначение(ТекДанные.Ссылка);
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры


Функция ЭтоЧерновик(Ссылка)
	
	Возврат НЕ Ссылка.Проведен;
	
КонецФункции // ()

&НаКлиенте
Процедура ТЗРезПриАктивизацииСтроки(Элемент)
	Если Элементы.ТЗРез.ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТЗРезПриАктивизацииСтрокиСервер(Элементы.ТЗРез.ТекущиеДанные.Ссылка);
	Картинки = Новый Структура;
	ФД.ПолучитьHTML(ХТМЛ, Картинки);
	ХТМЛ=ЗначРекв(Элементы.ТЗРез.ТекущиеДанные.Ссылка,"ХТМЛТекст");
	Для Каждого Картинка Из Картинки Цикл
		ИмяВремФайла = ПолучитьИмяВременногоФайла("");
		Картинка.Значение.Записать(ИмяВремФайла);
		ХТМЛ = СтрЗаменить(ХТМЛ, "<img src='" + Картинка.Ключ + "'", "<img src=""" + ИмяВремФайла + """");
	КонецЦикла;
	
	//+++АК SHEP 20160425
	// убираем лишний "мусор", в т.ч. чтобы картинки при печати были на след. странице, а не обрезались
	ПозТела = Найти(ХТМЛ, "<body>");
	Если ПозТела <> 0 Тогда
		ХТМЛ = "<html>" + Символы.ПС + Сред(ХТМЛ, ПозТела);
	КонецЕсли;
	ТекСообщение=Элементы.ТЗРез.ТекущиеДанные.Ссылка;
КонецПроцедуры

&НаСервере
Функция ЗначРекв(Ссылка,ИмяРекв)
	Возврат Ссылка[ИмяРекв]
КонецФункции // ()

&НаСервере
Процедура ТЗРезПриАктивизацииСтрокиСервер(ТекущийОбъект)
	ФД = ТекущийОбъект.ФД.Получить();
КонецПроцедуры

&НаКлиенте
Процедура ОтчетОПрочтении(Команда)
	ТД=ОтчетОПрочтенииСервер();
	ТД.Показать();
КонецПроцедуры
 
&НаСервере
Функция ОтчетОПрочтенииСервер()
	Макет=Обработки.РеестрОтправок.ПолучитьМакет("ОтчетОПрочтении");
	Обл=Макет.ПолучитьОбласть("Шапка");
	Обл.Параметры.Сообщение=ТекСообщение;
	ТабДок=Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати="ОтчетОПрочтении";
	
	ТабДок.Вывести(Обл);
	Для каждого Стр Из ТекСообщение.СтруктурныеЕдиницы Цикл
		Обл=Макет.ПолучитьОбласть("Строка");
		Обл.Параметры.Магазин=Стр.СтруктурнаяЕдиница;
		Обл.Параметры.Дата=Стр.ДатаИВремяПрочтения;
		Если ТекСообщение.ТипСообщения = Перечисления.ТипыСообщенийМОС.ИнформационноеСообщение Тогда
			ФлЗадачи=Ложь;
		ИначеЕсли ТекСообщение.ТипСообщения = Перечисления.ТипыСообщенийМОС.Задача Тогда
			ФлЗадачи=Истина;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(стр.Прочитал) Тогда
			Обл.Параметры.Статус= ?(ФлЗадачи, "Не выполнена", "Не прочитано");
		Иначе 
			Обл.Параметры.Статус= ?(ФлЗадачи, "Выполнена", "Прочитано");
		КонецЕсли;
		Обл.Параметры.ТипСтруктурнойЕдиницы=Стр.СтруктурнаяЕдиница.ТипСтруктурнойЕдиницы;
		ТабДок.Вывести(Обл);
	КонецЦикла;
	Возврат  ТабДок;
КонецФункции

&НаКлиенте
Процедура ПринудительнаяОтправка(Команда)
	ОткрытьФорму("Обработка.РеестрОтправок.Форма.ФормаОтправки",,ЭтаФорма,ЭтаФорма.УникальныйИдентификатор,);
КонецПроцедуры

&НаКлиенте
Функция СписокРассылки(Команда)
	ГруппаРассылкиНовыеПравилаРаботыСотрудников = ГруппаРассылкиНовыеПравилаРаботыСотрудниковПолучить();
	Если ЗначениеЗаполнено(ГруппаРассылкиНовыеПравилаРаботыСотрудников) Тогда
		СтруктураОтбора = Новый Структура("Группа", ГруппаРассылкиНовыеПравилаРаботыСотрудников);
		ОткрытьФорму("РегистрСведений.АК_ГруппыРассылки.ФормаСписка", Новый Структура("Отбор", СтруктураОтбора), ЭтаФорма);
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция ГруппаРассылкиНовыеПравилаРаботыСотрудниковПолучить()
	Возврат Справочники.АК_ГруппыРассылки.НайтиПоНаименованию("Рассылки реестра новинок");
КонецФункции

&НаКлиенте
Процедура НастройкаОтправки(Команда)
	ОткрытьФорму("Обработка.ПочтоваяРассылкаРеестраОтправок.Форма.Форма",,,"ПочтоваяРассылкаРеестраОтправок");	
КонецПроцедуры


&НаКлиенте
Процедура ОтборПериодПриИзменении(Элемент)
	ОбновитьТЗРезНаСервере("ФильтрВсеСообщения");
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьТЗ(Команда)
	ОбновитьТЗРезНаСервере("ФильтрВсеСообщения");
КонецПроцедуры


&НаКлиенте
Процедура ОтчетПоОтправкам(Команда)
	ОткрытьФорму("Отчет.АК_ОтчетПоОтправкам.Форма.ФормаОтчета");
КонецПроцедуры

