
&НаКлиенте
Процедура Сформировать(Команда)
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Сообщить(НСтр("ru = 'Выберите организацию'"));
		Возврат;
	КонецЕсли; 
	
	Объект.Маршруты.Очистить();
	Объект.СписокМаршрутов.Очистить();
	Объект.ВремяВыходаПоМаршрутам.Очистить();
	Дер=ДеревоМаршрутов.ПолучитьЭлементы();
	Дер.Очистить();
	СформироватьСервер();
КонецПроцедуры

&НаСервере
Процедура СформироватьСервер()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут,
		|	МаршрутныйЛистРасходныеОрдера.Документ.Получатель КАК СтруктурнаяЕдиница,
		|	МаршрутныйЛистТорговыеТочки.ПоставкаВСетках КАК КолвоСетокВПоставке,
		|	ВЫБОР
		|		КОГДА НомераМаршрутовСрезПоследних.ПланируемоеВремяВыездаПоМаршруту ЕСТЬ NULL
		|				ИЛИ НомераМаршрутовСрезПоследних.ПланируемоеВремяВыездаПоМаршруту = НЕОПРЕДЕЛЕНО
		|			ТОГДА ВЫБОР
		|					КОГДА МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.ПланируемоеВремяВыездаПоМаршруту ССЫЛКА Справочник.ВремяВыездаПоМаршруту
		|						ТОГДА МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.ПланируемоеВремяВыездаПоМаршруту.ВремяВыезда
		|					ИНАЧЕ МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.ПланируемоеВремяВыездаПоМаршруту
		|				КОНЕЦ
		|		ИНАЧЕ ВЫБОР
		|				КОГДА НомераМаршрутовСрезПоследних.ПланируемоеВремяВыездаПоМаршруту ССЫЛКА Справочник.ВремяВыездаПоМаршруту
		|					ТОГДА НомераМаршрутовСрезПоследних.ПланируемоеВремяВыездаПоМаршруту.ВремяВыезда
		|				ИНАЧЕ НомераМаршрутовСрезПоследних.ПланируемоеВремяВыездаПоМаршруту
		|			КОНЕЦ
		|	КОНЕЦ КАК ВремяВыходаВРейсДата,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.ПланируемоеВремяВыездаПоМаршруту КАК ВремяВыходаВРейс,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.ДатаЗавершенияПогрузки КАК ФактическоеВремяВыхода,
		|	МаршрутныйЛистРасходныеОрдера.Документ.Комментарий КАК Примечание,
		|	МаршрутныйЛистРасходныеОрдера.Документ,
		|	МаршрутныйЛистРасходныеОрдера.Документ.Сборщик КАК Сборщик,
		|	МаршрутныйЛистРасходныеОрдера.Документ.Склад.Владелец,
		|	МаршрутныйЛистРасходныеОрдера.Документ.Склад,
		|	ЕСТЬNULL(НомераМаршрутовСрезПоследних.Номер, МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.Наименование) КАК МаршрутНаименование,
		|	ЕСТЬNULL(НомераМаршрутовСрезПоследних.НомерПоВремениВыезда, МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.НомерПоВремениВыезда) КАК МаршрутНомерПоВремениВыезда
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	Документ.МаршрутныйЛист.РасходныеОрдера КАК МаршрутныйЛистРасходныеОрдера
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Маршруты.ТорговыеТочки КАК МаршрутныйЛистТорговыеТочки
		|		ПО МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут = МаршрутныйЛистТорговыеТочки.Ссылка
		|			И МаршрутныйЛистРасходныеОрдера.Документ.Получатель = МаршрутныйЛистТорговыеТочки.СтруктурнаяЕдиница
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НомераМаршрутов.СрезПоследних(&Дата2, ) КАК НомераМаршрутовСрезПоследних
		|		ПО МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут = НомераМаршрутовСрезПоследних.Маршрут
		|ГДЕ
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И ВЫБОР
		|			КОГДА МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.Организация = ЗНАЧЕНИЕ(Справочник.организации.ПустаяСсылка)
		|				ТОГДА &Вкусвилл
		|			ИНАЧЕ МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.Организация
		|		КОНЕЦ = &Организация
		|	И МаршрутныйЛистРасходныеОрдера.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
		|	И МаршрутныйЛистРасходныеОрдера.Документ.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отменен)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.Документ КАК Документ,
		|	МАКСИМУМ(СканированныеПаллетыСборка.Период) КАК НачалоСборки,
		|	МАКСИМУМ(СканированныеПаллетыСобран.Период) КАК ОкончаниеСборки
		|ПОМЕСТИТЬ втМП
		|ИЗ
		|	вт КАК вт
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СканированныеПаллеты КАК СканированныеПаллетыСборка
		|		ПО вт.Документ = СканированныеПаллетыСборка.Ордер
		|			И (СканированныеПаллетыСборка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусПаллета.ВСборке))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СканированныеПаллеты КАК СканированныеПаллетыСобран
		|		ПО вт.Документ = СканированныеПаллетыСобран.Ордер
		|			И (СканированныеПаллетыСобран.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусПаллета.Собран))
		|
		|СГРУППИРОВАТЬ ПО
		|	вт.Документ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.Маршрут КАК Маршрут,
		|	вт.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	вт.КолвоСетокВПоставке,
		|	вт.ВремяВыходаВРейс КАК ВремяВыходаВРейс,
		|	вт.ВремяВыходаВРейсДата КАК ВремяВыходаВРейсДата,
		|	ВЫБОР
		|		КОГДА вт.Маршрут.Наименование = ""0""
		|			ТОГДА ДАТАВРЕМЯ(1, 1, 1, 23, 59, 59)
		|		ИНАЧЕ вт.ВремяВыходаВРейсДата
		|	КОНЕЦ КАК ВремяВыходаВРейс1,
		|	вт.ФактическоеВремяВыхода,
		|	"""" КАК Примечание,
		|	вт.Документ КАК Документ,
		|	вт.Сборщик,
		|	втМП.НачалоСборки КАК НачалоСборки,
		|	втМП.ОкончаниеСборки,
		|	вт.Документ.Дата КАК ДокументДата,
		|	вт.ДокументСклад КАК Склад,
		|	вт.МаршрутНаименование КАК МаршрутНаименование,
		|	вт.МаршрутНомерПоВремениВыезда КАК МаршрутНомерПоВремениВыезда
		|ИЗ
		|	вт КАК вт
		|		ЛЕВОЕ СОЕДИНЕНИЕ втМП КАК втМП
		|		ПО вт.Документ = втМП.Документ
		|ГДЕ
		|	(вт.СтруктурнаяЕдиница = &Магазин
		|			ИЛИ вт.ДокументСкладВладелец = &Магазин
		|			ИЛИ &Магазин = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
		|	И вт.Маршрут <> ЗНАЧЕНИЕ(Справочник.Маршруты.ПустаяСсылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВремяВыходаВРейс1,
		|	ВремяВыходаВРейсДата,
		|	МаршрутНомерПоВремениВыезда,
		|	МаршрутНаименование,
		|	Маршрут,
		|	СтруктурнаяЕдиница,
		|	НачалоСборки,
		|	ДокументДата,
		|	Документ";

	Запрос.УстановитьПараметр("Дата1", Период.ДатаНачала);
	Запрос.УстановитьПараметр("Дата2", КонецДня(Период.ДатаОкончания));
	Запрос.УстановитьПараметр("Магазин", ОтборМагазин);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Вкусвилл", Справочники.Организации.НайтиПоКоду("000000006"));
	
	Результат = Запрос.Выполнить();

	ТЗРезультат = Результат.Выгрузить();                             
    ТекМаршрут="";
	Сч=1;
	Для Каждого Стр из ТЗРезультат Цикл
		НовСтр=Объект.Маршруты.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,Стр);
		Если Стр.Маршрут<>ТекМаршрут Тогда
			НовСтр.Номер=Сч;
			Сч=Сч+1;
			ТекМаршрут=Стр.Маршрут;
		КонецЕсли; 
	КонецЦикла;
	ТЗРезультат.Свернуть("Маршрут,СтруктурнаяЕдиница,КолвоСетокВПоставке,ВремяВыходаВРейс,ФактическоеВремяВыхода,Примечание");
	ТекМаршрут=Неопределено;
	Дер=РеквизитФормыВЗначение("ДеревоМаршрутов");
	Для Каждого Стр из ТЗРезультат Цикл
		НовСтр=Объект.СписокМаршрутов.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,Стр);
		Если ТекМаршрут<>Стр.Маршрут Тогда
			ТекМаршрут=Стр.Маршрут;
			СтрДер=Дер.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрДер,Стр,,"СтруктурнаяЕдиница,КолВоСетокВПоставке");
			СтрДер.Маршрут1=ТекМаршрут;
			СтрВр=Объект.ВремяВыходаПоМаршрутам.Добавить();
			ЗаполнитьЗначенияСвойств(СтрВр,Стр,,);
		КонецЕсли; 
		СтрДер1=СтрДер.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(СтрДер1,Стр,,"Маршрут,ВремяВыходаВРейс,ФактическоеВремяВыхода");
		СтрДер1.Маршрут1=ТекМаршрут;
	КонецЦикла;
	ЗначениеВРеквизитФормы(Дер,"ДеревоМаршрутов");
КонецПроцедуры


&НаКлиенте
Процедура МаршрутыВремяВыходаВРейсПриИзменении(Элемент)
	МаршрутыВремяВыходаВРейсПриИзмененииСервер(Элементы.Маршруты.ТекущиеДанные.Маршрут,Элементы.Маршруты.ТекущиеДанные.ВремяВыходаВРейс);
КонецПроцедуры

&НаСервере
Процедура МаршрутыВремяВыходаВРейсПриИзмененииСервер(Маршрут,ВремяВыходаВРейс)
	Если ЗначениеЗаполнено(Маршрут) Тогда
		ОбъектМаршрут=Маршрут.ПолучитьОбъект();
		ОбъектМаршрут.ПланируемоеВремяВыездаПоМаршруту=ВремяВыходаВРейс;
		ОбъектМаршрут.Записать();
		Для каждого Стр Из Объект.Маршруты Цикл
			Если Стр.Маршрут=Маршрут Тогда
				Стр.ВремяВыходаВРейс=ВремяВыходаВРейс;
				Стр.ВремяВыходаВРейсДата=?(ТипЗнч(Стр.ВремяВыходаВРейс)=Тип("СправочникСсылка.ВремяВыездаПоМаршруту"),Стр.ВремяВыходаВРейс.ВремяВыезда,Стр.ВремяВыходаВРейс);
			КонецЕсли; 
		КонецЦикла;
		Для каждого Стр Из Объект.СписокМаршрутов Цикл
			Если Стр.Маршрут=Маршрут Тогда
				Стр.ВремяВыходаВРейс=ВремяВыходаВРейс;
				Стр.ВремяВыходаВРейсДата=?(ТипЗнч(Стр.ВремяВыходаВРейс)=Тип("СправочникСсылка.ВремяВыездаПоМаршруту"),Стр.ВремяВыходаВРейс.ВремяВыезда,Стр.ВремяВыходаВРейс);
			КонецЕсли; 
		КонецЦикла;
		
		//Дер=РеквизитФормыВЗначение("ДеревоМаршрутов");
		//
		//Для каждого Стр Из Дер.Строки Цикл
		//	Если Стр.Маршрут=Маршрут Тогда
		//		Стр.ВремяВыходаВРейс=ВремяВыходаВРейс;
		//		Для каждого СтрПодч Из Стр.Строки Цикл
		//			СтрПодч.ВремяВыходаВРейс=Дата(1,1,1);
		//		КонецЦикла; 
		//	КонецЕсли; 
		//КонецЦикла;
		//ЗначениеВРеквизитФормы(Дер,"ДеревоМаршрутов");
		
		
		Для каждого Стр Из ДеревоМаршрутов.ПолучитьЭлементы() Цикл
			Если Стр.Маршрут=Маршрут Тогда
				Стр.ВремяВыходаВРейс=ВремяВыходаВРейс;
				Стр.ВремяВыходаВРейсДата=?(ТипЗнч(Стр.ВремяВыходаВРейс)=Тип("СправочникСсылка.ВремяВыездаПоМаршруту"),Стр.ВремяВыходаВРейс.ВремяВыезда,Стр.ВремяВыходаВРейс);
			КонецЕсли; 
		КонецЦикла;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СписокМаршрутовВремяВыходаВРейсПриИзменении(Элемент)
	МаршрутыВремяВыходаВРейсПриИзмененииСервер(Элементы.СписокМаршрутов.ТекущиеДанные.Маршрут,Элементы.СписокМаршрутов.ТекущиеДанные.ВремяВыходаВРейс);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоМаршрутовВремяВыходаВРейсПриИзменении(Элемент)
	МаршрутыВремяВыходаВРейсПриИзмененииСервер(Элементы.ДеревоМаршрутов.ТекущиеДанные.Маршрут1,Элементы.ДеревоМаршрутов.ТекущиеДанные.ВремяВыходаВРейс);
КонецПроцедуры

&НаКлиенте
Процедура ПечатьДерева(Команда)
	ТД=Новый ТабличныйДокумент;
	ПечатьДереваСервер(ТД);
	ТД.Показать();
КонецПроцедуры

&НаСервере
Процедура ПечатьДереваСервер(ТД)
	Дер=РеквизитФормыВЗначение("ДеревоМаршрутов");
	Макет=Обработки.ОтчетПоМаршрутам.ПолучитьМакет("Макет");
	

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Маршруты.Ссылка,
		|	Маршруты.ПолноеНаименование
		|ИЗ
		|	Справочник.Маршруты КАК Маршруты
		|ГДЕ
		|	Маршруты.Ссылка В(&Ссылка)";

	Запрос.УстановитьПараметр("Ссылка", Объект.Маршруты.Выгрузить().ВыгрузитьКолонку("Маршрут"));

	Результат = Запрос.Выполнить();

	ТЗМаршруты = Результат.Выгрузить();



	Сч=0;
	Для каждого Стр Из Дер.Строки Цикл
		Сч=Сч+1;
		СтрПеч=Макет.ПолучитьОбласть("Строка1");
		ЗаполнитьЗначенияСвойств(СтрПеч.Параметры,Стр);
		ПолноеНаименование=ТЗМаршруты.НайтиСтроки(Новый Структура("Ссылка",Стр.Маршрут))[0].ПолноеНаименование;
		СтрПеч.Параметры.Маршрут=?(ЗначениеЗаполнено(ПолноеНаименование),ПолноеНаименование,Стр.Маршрут);
		Если ЗначениеЗаполнено(Стр.Маршрут) Тогда
			СтрПеч.Параметры.МаршрутПН=Стр.Маршрут;//ТЗМаршруты.НайтиСтроки(Новый Структура("Ссылка",Стр.Маршрут))[0].ПолноеНаименование;
		КонецЕсли; 
		
		СтрПеч.Параметры.ВремяВыходаВРейс=?(ТипЗнч(Стр.ВремяВыходаВРейс)=Тип("Дата"),Сред(Стр.ВремяВыходаВРейс,12),Стр.ВремяВыходаВРейс);
		ТД.Вывести(СтрПеч,1);
		Для каждого СтрПодч Из Стр.Строки  Цикл
			СтрПеч=Макет.ПолучитьОбласть("Строка2");
			ЗаполнитьЗначенияСвойств(СтрПеч.Параметры,СтрПодч);
			Если ЗначениеЗаполнено(СтрПодч.Маршрут) Тогда
				//СтрПеч.Параметры.МаршрутПН=ТЗМаршруты.НайтиСтроки(Новый Структура("Ссылка",СтрПодч.Маршрут))[0].ПолноеНаименование;
			КонецЕсли; 
			ТД.Вывести(СтрПеч,2);
		КонецЦикла; 
		
	КонецЦикла;  
КонецПроцедуры

&НаКлиенте
Процедура ДеревоМаршрутовПриАктивизацииСтроки(Элемент)
	Если Элементы.ДеревоМаршрутов.ТекущиеДанные=Неопределено Тогда
		Возврат;	
	КонецЕсли; 
	ТекМаршрут=Элементы.ДеревоМаршрутов.ТекущиеДанные.Маршрут;
	Элементы.ДеревоМаршрутовВремяВыходаВРейс.ТолькоПросмотр=Не ЗначениеЗаполнено(ТекМаршрут);
КонецПроцедуры
                                                                                                 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ФлПолныеПрава=РольДоступна("ПолныеПрава") или РольДоступна("ОператорСклада");
	Элементы.Маршруты.ТолькоПросмотр=Не ФлПолныеПрава;
	Элементы.ДеревоМаршрутов.ТолькоПросмотр=Не ФлПолныеПрава;
КонецПроцедуры

 
