
#Область ПрограммныйИнтерфейс

//+++АК LATV 2018.11.26 ИП-00020489
Процедура ОчиститьУстаревшиеФайлы() Экспорт

	Если ПриходныеОрдера Тогда
		ПриходныеОрдера();
	КонецЕсли;
	
	Если СписанияНаМагазинах Тогда
		СписанияНаМагазинах();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ПриходныеОрдера

//+++АК LATV 2018.11.26 ИП-00020489
Процедура ПриходныеОрдера()

	Ограничитель = 1000000; // документов
	
	//
	КаталогХранения = Константы.КаталогХраненияФайлов.Получить();
	Если ПустаяСтрока(КаталогХранения) Тогда
		Возврат;
	КонецЕсли;
	
	Если Прав(КаталогХранения, 1) <> "\" Тогда
		КаталогХранения = КаталогХранения + "\";
	КонецЕсли;
	
	//
	НачалоПериода = Дата(2017,05,01);
	
	Сегодня = ТекущаяДата();
	
	НачалоГода = НачалоГода(Сегодня);
	Если Месяц(Сегодня) <= 6 Тогда
		НачалоГода = НачалоГода(НачалоГода-1);
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПриходныйОрдерСкладПрикрепленныеФайлы.Файл,
		|	ПриходныйОрдерСкладПрикрепленныеФайлы.Файл.ИмяПодкаталога КАК ИмяПодкаталога,
		|	ПриходныйОрдерСкладПрикрепленныеФайлы.Файл.Расширение КАК Расширение,
		|	ПриходныйОрдерСкладПрикрепленныеФайлы.Ссылка,
		|	ПриходныйОрдерСкладПрикрепленныеФайлы.Ссылка.Дата КАК Дата
		|ИЗ
		|	Документ.ПриходныйОрдерСклад.ПрикрепленныеФайлы КАК ПриходныйОрдерСкладПрикрепленныеФайлы
		|ГДЕ
		|	ПриходныйОрдерСкладПрикрепленныеФайлы.Ссылка.Дата Между &НачалоПериода И &НачалоГода
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата");
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	FSO = Новый COMОбъект("Scripting.FileSystemObject");
	
	Выборка = РезультатЗапроса.Выбрать();
	Сообщить("" + Выборка.Количество());
	
	Сообщить("Начало: " + ТекущаяДата());
	
	КоличествоФайлов		= 0;
	КоличествоДокументов	= 0;
	ОбщийРазмер				= 0;
	Мин		= Дата(3000,1,1);
	Макс	= Дата(1,1,1);
	Пока Выборка.Следующий() Цикл
		
		КоличествоДокументов = КоличествоДокументов + 1;
		
		Каталог = КаталогХранения + Выборка.ИмяПодкаталога;
		Если НЕ FSO.FolderExists(Каталог) Тогда
			Продолжить;
		КонецЕсли;
		
		Если КоличествоФайлов = Ограничитель Тогда
			Прервать;
		КонецЕсли;
		
		//
		ИмяФайла = Строка(Выборка.Файл.УникальныйИдентификатор())
			+ ?(Лев(Выборка.Расширение, 1) = ".", "", ".") + Выборка.Расширение;
		ПолноеИмяФайла = Каталог + "\" + ИмяФайла;
		
		Если FSO.FileExists(ПолноеИмяФайла) Тогда
			Мин		= Мин(Мин, Выборка.Дата);
			Макс	= Макс(Макс, Выборка.Дата);
			
			КоличествоФайлов = КоличествоФайлов + 1;
			
			СамФайл = FSO.GetFile(ПолноеИмяФайла);
			ОбщийРазмер = ОбщийРазмер + СамФайл.Size;
			
			FSO.DeleteFile(ПолноеИмяФайла, Истина);
		КонецЕсли;
		
	КонецЦикла;
	
	ОбщийРазмер = Окр(ОбщийРазмер / (1024 * 1024), 1);
	
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Всего документов: %1
					|с %2 по %3
					|Всего файлов: %4 (%5 Мб)'"), КоличествоДокументов, Мин, Макс, КоличествоФайлов, ОбщийРазмер);
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	
	Сообщить("Конец: " + ТекущаяДата());

КонецПроцедуры

#КонецОбласти

#Область СписанияНаМагазинах

//+++АК LATV 2018.11.29 ИП-00020489.01
Процедура СписанияНаМагазинах()

	//Очистка каталога \\10.0.0.51\1c$\СписанияНаМагазинах\
	
	// Общая логика работы с каталогом:
	//	из МП записывают картинки в регистры ПрикрепленныеФотоКОбъектам и ПриложенныеКартинкиКСписаниямМагазины (а так же в регистр с комментариями для картинок ПриложенныеКартинкиКСписаниямКомментарии)
	//	дальше по регистру заполняются документы АК_РазнесениеБояТоваров, АК_РазнесениеСписанийНаКачество.
	//	Так же по регистру можно посмотреть картинке и отредактировать в ОбработкаПрикрепленныхКартинокКТоварнымОперациям,
	//	эта же обработка открывается из товародвижений
	//
	//	Фото к документам Разнесение боя товаров хранить 2 месяца.
	//	Фото к документам Разнесение списаний на качество хранить 3 месяца
	//	Фото по списаниям, которые не относятся к этим документам хранить неделю.
	//
	//	Пока не понятно, как именно разграничивать, поэтому просто чистим все записи по регистр, старше 3х месяцев.
	
	УстановитьПривилегированныйРежим(Истина);
	КонстантаКаталог = Константы.КаталогХраненияФайловКартинок.Получить();
	Если Прав(КонстантаКаталог, 1) <> "\" Тогда
		КонстантаКаталог = КонстантаКаталог + "\";
	КонецЕсли;
	
	КонстантаКаталог = КонстантаКаталог + "СписанияНаМагазинах\";
	
	ЭтотМесяц = НачалоМесяца(ТекущаяДата());
	КонецПериодаХранения = ДобавитьМесяц(ЭтотМесяц, -3);
	
	Если Период <> Дата(1,1,1) И Период < КонецПериодаХранения Тогда
		КонецПериодаХранения = Период;
	КонецЕсли;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НАЧАЛОПЕРИОДА(ПриложенныеКартинкиКСписаниямМагазины.ДатаДобавленияЗаписи, МЕСЯЦ) КАК Месяц
		|ИЗ
		|	РегистрСведений.ПриложенныеКартинкиКСписаниямМагазины КАК ПриложенныеКартинкиКСписаниямМагазины
		|ГДЕ
		|	ПриложенныеКартинкиКСписаниямМагазины.ДатаДобавленияЗаписи < &КонецПериодаХранения
		|
		|УПОРЯДОЧИТЬ ПО
		|	Месяц");
	
	Запрос.УстановитьПараметр("КонецПериодаХранения", КонецПериодаХранения);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	FSO = Новый COMОбъект("Scripting.FileSystemObject");
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Отказ = Ложь;
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Очистка месяца %1. %2'"), Выборка.Месяц, ТекущаяДата());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		ПолноеИмяКаталога = КонстантаКаталог + Формат(Выборка.Месяц, "ДФ=yyyyMM");
		УдалитьКаталог(FSO, ПолноеИмяКаталога, Отказ);
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Очистка месяца %1 завершена. %2'"), Выборка.Месяц, ТекущаяДата());
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
		Если Не Отказ Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Очистка данных SQL за месяц %1. %2'"), Выборка.Месяц, ТекущаяДата());
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			
			ОчиститьЗаписиПриложенныеКартинкиКСписаниямМагазины(Выборка.Месяц);
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Очистка данных SQL за месяц %1 завершена. %2'"), Выборка.Месяц, ТекущаяДата());
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

//+++АК LATV 2018.11.29 ИП-00020489.01
Процедура ОчиститьЗаписиПриложенныеКартинкиКСписаниямМагазины(КонецПериодаХранения, Отказ = Ложь)

	//Выполняется хранимая процедура "clear_InfoRg7128_1c", которая очищает устаревшие записи в регистрах
	//	РегистрСведений.ПрикрепленныеФотоКОбъектам					(Основная): InfoRg7733
	//	РегистрСведений.ПриложенныеКартинкиКСписаниямМагазины		(Основная): InfoRg7128
	//	РегистрСведений.ПриложенныеКартинкиКСписаниямКомментарии	(Основная): InfoRg7139
	//		Перечисление.ТипыЗаписейПриложенныхКартинок	(Основная): Enum7732
	
	Попытка
		ВнешниеИсточникиДанных.ЛокальнаяБаза.ОчиститьРCПриложенныеКартинкиКСписаниямМагазиныИСвязанныеДанные(КонецПериодаХранения);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки(),,,, Отказ);
	КонецПопытки;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//+++АК LATV 2018.11.26 ИП-00020489
Процедура УдалитьФайл(FSO, ПолноеИмяФайла, Отказ = Ложь)

	Попытка
		Если FSO.FileExists(ПолноеИмяФайла) Тогда
			//СамФайл = FSO.GetFile(ПолноеИмяФайла);
			//РазмерФайла = СамФайл.Size;
			
			FSO.DeleteFile(ПолноеИмяФайла, Истина);
		КонецЕсли;
		
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки(),,,, Отказ);
	КонецПопытки;

КонецПроцедуры

//+++АК LATV 2018.11.26 ИП-00020489
Процедура УдалитьКаталог(FSO, ПолноеИмяКаталога, Отказ = Ложь)

	Попытка
		Если FSO.FolderExists(ПолноеИмяКаталога) Тогда
			FSO.DeleteFolder(ПолноеИмяКаталога, Истина);
		КонецЕсли;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки(),,,, Отказ);
	КонецПопытки;

КонецПроцедуры

#КонецОбласти
