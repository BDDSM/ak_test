
Процедура КнопкаВыполнитьНажатие(Кнопка)
	
	ВыгрузитьДокументыВБП();
	ОбновитьСписок();
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ОбновитьСписок();
	
КонецПроцедуры

Процедура КоманднаяПанельСписокПТУОбновитьСписок(Кнопка)
	
	ОбновитьСписок();
	
КонецПроцедуры

Процедура КоманднаяПанельСписокПТУУстановитьФлажки(Кнопка)
	
	УстановитьСнятьФлажки(Истина);
	
КонецПроцедуры


Процедура КоманднаяПанельСписокПТУСнятьФлажки(Кнопка)
	
	УстановитьСнятьФлажки(Ложь);
	
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////////

Процедура ОбновитьСписок()
		
	СписокПТУ.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ДокументыДляВыгрузкиПравокПоСчетФактурам.Документ КАК ПТУ,
	               |	ПоступлениеТоваровУслуг.НомерВходящегоСчетаФактуры,
	               |	ПоступлениеТоваровУслуг.ДатаВходящегоСчетаФактуры,
	               |	ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, Контрагенты.КПП) КАК КПП
	               |ИЗ
	               |	РегистрСведений.ДокументыДляВыгрузкиПравокПоСчетФактурам КАК ДокументыДляВыгрузкиПравокПоСчетФактурам
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |			ПО ПоступлениеТоваровУслуг.Ссылка = ЗначенияСвойствОбъектов.Объект
	               |				И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.КППКонтрагента))
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
	               |			ПО ПоступлениеТоваровУслуг.Контрагент = Контрагенты.Ссылка
	               |		ПО ДокументыДляВыгрузкиПравокПоСчетФактурам.Документ = ПоступлениеТоваровУслуг.Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДокументыДляВыгрузкиПравокПоСчетФактурам.Документ.Дата
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	ТаблицаПТУБазы = Запрос.Выполнить().Выгрузить();	
	ТаблицаПТУБазы.Колонки.Добавить("Гуид");
	ТаблицаПТУБазы.Колонки.Добавить("Обработан");
	
	Для Каждого Стр Из ТаблицаПТУБАзы Цикл
		Стр.Гуид = Строка(Стр.ПТУ.УникальныйИдентификатор());
	КонецЦикла;
	
	Если ТаблицаПТУБазы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	v82 = ВернутьПодключениеКБазеБП();
	
	Если v82 = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ВыборкаПТУБП = ПолучитьВыборкуПТУБПБазы(v82, ТаблицаПТУБазы);
	
	МассивСтрНаУд = Новый Массив;
	
	Пока ВыборкаПТУБП.Следующий() Цикл
		ГуидБП = v82.XMLСтрока(ВыборкаПТУБП.Ссылка);
		
		НайдСтрФин = ТаблицаПТУБазы.Найти(ГуидБП, "Гуид");
		
		Если НЕ НайдСтрФин = Неопределено Тогда
			НужноВыгружать = Ложь;
			
			Если СокрЛП(ВыборкаПТУБП.КППКонтрагента) <> СокрЛП(НайдСтрФин.КПП) Тогда
				НужноВыгружать = Истина;
			КонецЕсли;			
			
			Если СокрЛП(ВыборкаПТУБП.НомерВходящегоСчетаФактуры) <> СокрЛП(НайдСтрФин.НомерВходящегоСчетаФактуры) 
				ИЛИ ВыборкаПТУБП.ДатаВходящегоСчетаФактуры <> НайдСтрФин.ДатаВходящегоСчетаФактуры Тогда
				НужноВыгружать = Истина;
			КонецЕсли;
			
			Если НЕ НужноВыгружать Тогда
				МассивСтрНаУд.Добавить(НайдСтрФин);
			Иначе
				НайдСтрФин.Обработан = Истина;
			КонецЕсли;			
		
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого Стр Из МассивСтрНаУд Цикл
		УдалитьЗаписьИзНабора(Стр.ПТУ);
		ТаблицаПТУБазы.Удалить(Стр);   		
	КонецЦикла;
	
	СписокПТУ.Загрузить(ТаблицаПТУБазы.Скопировать(ТаблицаПТУБазы.НайтиСтроки(Новый Структура("Обработан", Истина))));		
	
КонецПроцедуры

Процедура УстановитьСнятьФлажки(Признак)
	
	Для Каждого Стр Из СписокПту Цикл
		Стр.Выбран = Признак;
	КонецЦикла;
	
КонецПроцедуры

Процедура ВыгрузитьДокументыВБП()
	
	пОбработка = ОбменСБП2_0.ИнициализироватьОбработкуОбмена("СчетФактураПолученный");
	Узел = ПланыОбмена.ОбменИзбенкаСБП.НайтиПоКоду("БП");
	
	СтрокиДереваПравилВыгрузки = пОбработка.ТаблицаПравилВыгрузки.Строки;					
	
	// документы
	ПравилаВсе = СтрокиДереваПравилВыгрузки[0].Строки;
	Для каждого Правило из ПравилаВсе Цикл
		Если Правило.Имя = "СчетФактураЗакрытыйПериод" Тогда
			Правило.Включить 			= 1;
			Правило.СсылкаНаУзелОбмена	= Неопределено;
		Иначе	
			Правило.Включить 			= 0;
		КонецЕсли;	
	КонецЦикла;
	
	СписокДокНаВыгрузку = Новый Массив;
	
	Для Каждого Стр Из СписокПТУ Цикл
		Если Стр.Выбран Тогда
			СписокДокНаВыгрузку.Добавить(Стр.ПТУ);
		КонецЕсли;
	КонецЦикла;
	
	пОбработка.Параметры.СписокСчФЗакрытогоПериода = СписокДокНаВыгрузку;

	пОбработка.ТипУдаленияРегистрацииИзмененийДляУзловОбменаПослеВыгрузки=0;
	пОбработка.ВыполнитьВыгрузку();	
	
КонецПроцедуры

Процедура СписокПТУПриПолученииДанных(Элемент, ОформленияСтрок)
	
	МассивПТУ = Новый Массив;
	
	Для Каждого ЭлОформления Из ОформленияСтрок Цикл
		МассивПТУ.Добавить(ЭлОформления.ДанныеСтроки.ПТУ);
	КонецЦикла;
	
	ТзДанныеПТУ = ПолучитьДанныеПТУ(МассивПТУ);		
	
	Для Каждого ЭлОформления Из ОформленияСтрок Цикл
		
		НайдСтр = ТзДанныеПТУ.Найти(ЭлОформления.ДанныеСтроки.ПТУ, "Ссылка");
		
		Если НЕ НайдСтр = Неопределено Тогда
		
			ЭлОформления.Ячейки.НомерСчФ.ОтображатьТекст = Истина;
			ЭлОформления.Ячейки.НомерСчФ.Текст = НайдСтр.НомерСчФ;
		
			ЭлОформления.Ячейки.ДатаСчФ.ОтображатьТекст = Истина;
			ЭлОформления.Ячейки.ДатаСчФ.Текст = НайдСтр.ДатаСчФ;
		
			ЭлОформления.Ячейки.КппКА.ОтображатьТекст = Истина;
			ЭлОформления.Ячейки.КппКА.Текст = НайдСтр.КппКА;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьДанныеПТУ(МассивПТУ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеТоваровУслуг.ДатаВходящегоСчетаФактуры КАК ДатаСчФ,
	               |	ПоступлениеТоваровУслуг.НомерВходящегоСчетаФактуры КАК НомерСчФ,
	               |	ЗначенияСвойствОбъектов.Значение КАК КппКА,
	               |	ПоступлениеТоваровУслуг.Ссылка
	               |ИЗ
	               |	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |		ПО ПоступлениеТоваровУслуг.Ссылка = ЗначенияСвойствОбъектов.Объект
	               |			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.КППКонтрагента))
	               |ГДЕ
	               |	ПоступлениеТоваровУслуг.Ссылка В(&МассивПТУ)";
	
	Запрос.УстановитьПараметр("МассивПТУ", МассивПТУ);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция ВернутьПодключениеКБазеБП()
	
	СтрокаПодключения = ПолныеПрава.ПолучитьСтрокуПодключения_Бух();	
	v82COMОбъект = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Бух() + ".COMConnector");
	
	Попытка
		v82 = v82COMОбъект.Connect(СтрокаПодключения);
		ПодключениеУстановлено=Истина;
	Исключение
		ПодключениеУстановлено=Ложь;
		Сообщить("Не удалось подключиться к базе бухгалтерии!");
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат v82;
	
КонецФункции

Функция ПолучитьВыборкуПТУБПБазы(v82, ТаблицаПТУБазы)		
	
	Запрос=v82.NewObject("Запрос");
	Запрос.Текст = "ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.НомерВходящегоСчетаФактуры,
	|	ПоступлениеТоваровУслуг.ДатаВходящегоСчетаФактуры,
	|	ЕСТЬNULL(ЖурналУчетаСчетовФактурСрезПоследних.КППКонтрагента, """") КАК КППКонтрагента,
	|	ПоступлениеТоваровУслуг.Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналУчетаСчетовФактур.СрезПоследних КАК ЖурналУчетаСчетовФактурСрезПоследних
	|		ПО ЖурналУчетаСчетовФактурСрезПоследних.Регистратор = ПоступлениеТоваровУслуг.Ссылка
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В (&МассивСсылок)";
	
	МассивСсылок = ВернутьМассивСсылокДляБухБазы(v82, ТаблицаПТУБазы);
	
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	Возврат Запрос.Выполнить().Выбрать();	
	
КонецФункции

Функция ВернутьМассивСсылокДляБухБазы(v82, ТаблицаПТУБазы)
	
	МассивСсылок = v82.NewObject("Массив");
	МетаданныеПТУ = v82.XMLTypeOf(v82.Документы.ПоступлениеТоваровУслуг.ПустаяСсылка());
	
	Для Каждого Стр Из ТаблицаПТУБазы Цикл	
		
		МассивСсылок.Добавить(v82.XMLValue(v82.FromXMLType(МетаданныеПТУ), Стр.Гуид));
		
	КонецЦикла;

	Возврат МассивСсылок;
	
КонецФункции

Процедура УдалитьЗаписьИзНабора(ПТУ)
	
	Набор = РегистрыСведений.ДокументыДляВыгрузкиПравокПоСчетФактурам.СоздатьНаборЗаписей();
	Набор.Отбор.Документ.Установить(ПТУ);
	Набор.Прочитать();
	Набор.Очистить();
	Набор.Записать();	
	
КонецПроцедуры

Процедура КоманднаяПанельСписокПТУУдалитьИзСписка(Кнопка)
	
	Ответ = Вопрос("Удалить выбранные ПТУ из выгрузки?", РежимДиалогаВопрос.ДаНет);
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Стр Из СписокПТУ Цикл
		Набор = РегистрыСведений.ДокументыДляВыгрузкиПравокПоСчетФактурам.СоздатьНаборЗаписей();
		Набор.Отбор.Документ.Установить(Стр.ПТУ);
		Набор.Прочитать();
		Набор.Очистить();
		Набор.Записать();
	КонецЦикла;
	
	ОбновитьСписок();
	
КонецПроцедуры
