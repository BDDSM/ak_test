
Перем АдресЭлектроннойПочтыДляРассылки;
Перем ПолучателиКопий Экспорт;
Перем ЭлектронныеАдресаПолучателейКопий;

#Область ПрограммныйИнтерфейс

//+++АК LATV 2018.08.09 ИП-00019120
Процедура ВыполнитьОбработкуВФоне(Параметры, АдресХранилища) Экспорт

	Открытки = Параметры.Открытки;
	ПоздравитьСотрудников();

КонецПроцедуры

//+++АК LATV 2018.08.09 ИП-00019120
Процедура ПоздравитьСотрудников() Экспорт

	ХранениеОткрыток = СохранитьОткрыткиНаДиск();
	
	ДанныеСотрудников = ПолучитьДанныеСотрудников();
	Если ДанныеСотрудников = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭлектронныеАдресаПолучателейКопий = УправлениеЭлектроннойПочтой.ЭлектронныеАдресаФизическихЛиц(ПолучателиКопий);
	ПисьмаДляОтправки = СформироватьПоздравления(ДанныеСотрудников, ХранениеОткрыток);
	Если ПисьмаДляОтправки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОтправитьПисьма(ПисьмаДляОтправки);
	
	ОчиститьСохраненныеОткрытки(ХранениеОткрыток);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

//+++АК LATV 2018.08.09 ИП-00019120
Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	Если Открытки.Количество() < 10 Тогда
		ТекстСообщения = НСтр("ru = 'Не заполнены все открытки'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Объект.Открытки",, Отказ);
	Иначе
		Для Каждого Открытка Из Открытки Цикл
			Если Не ЗначениеЗаполнено(Открытка.Значение) Тогда
				ТекстСообщения = НСтр("ru = 'Не заполнены все открытки'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,, "Объект.Открытки",, Отказ);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки(АдресЭлектроннойПочтыДляРассылки);
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(УчетнаяЗапись, "АдресЭлектроннойПочты") <> АдресЭлектроннойПочтыДляРассылки Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Не найдена учетная запись для рассылки: ""%1""'"), АдресЭлектроннойПочтыДляРассылки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//+++АК LATV 2018.08.10 ИП-00019120
Функция СохранитьОткрыткиНаДиск()

	ХранениеОткрыток = Новый Соответствие;
	
	Для Каждого Открытка Из Открытки Цикл
		Расширение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Открытка.Значение, "Расширение");
		ФайлОткрытки = ПолучитьИмяВременногоФайла(Расширение);
		ДанныеФайла = Новый ДвоичныеДанные(Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(Открытка.Значение));
		ДанныеФайла.Записать(ФайлОткрытки);
		ХранениеОткрыток.Вставить(Открытка.Значение, ФайлОткрытки);
	КонецЦикла;
	
	Возврат ХранениеОткрыток;

КонецФункции

//+++АК LATV 2018.08.10 ИП-00019120
Процедура ОчиститьСохраненныеОткрытки(ХранениеОткрыток)

	Для Каждого Открытка Из ХранениеОткрыток Цикл
		УдалитьФайлы(Открытка.Значение);
	КонецЦикла;

КонецПроцедуры

//+++АК LATV 2018.08.09 ИП-00019120
Функция ПолучитьДанныеСотрудников()

	Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СотрудникиОрганизаций.Физлицо КАК ФизЛицо
		//+++АК ILIK 2018.10.05 ИП-00019120.01
		|,
		|	СотрудникиОрганизаций.Ссылка КАК Сотрудник
		//---АК ILIK
		|ПОМЕСТИТЬ втДействующиеСотрудники
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|ГДЕ
		|	СотрудникиОрганизаций.Организация = &Вкусвилл
		|	И СотрудникиОрганизаций.Физлицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|	И СотрудникиОрганизаций.ДатаПриемаНаРаботу <> ДАТАВРЕМЯ(1, 1, 1)
		|	И СотрудникиОрганизаций.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втДействующиеСотрудники.ФизЛицо КАК ФизЛицо,
		|	""День рождения"" КАК ВидПоздравления,
		|	0 КАК КоличествоЛет
		|ПОМЕСТИТЬ втПоздравленияСотрудников
		|ИЗ
		|	втДействующиеСотрудники КАК втДействующиеСотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ПО втДействующиеСотрудники.ФизЛицо = ФизическиеЛица.Ссылка
		|ГДЕ
		|	МЕСЯЦ(ФизическиеЛица.ДатаРождения) = МЕСЯЦ(&ТекуцщаяДата)
		|	И ДЕНЬ(ФизическиеЛица.ДатаРождения) = ДЕНЬ(&ТекуцщаяДата)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втДействующиеСотрудники.ФизЛицо,
		|	""Годовщина работы"",
		|	РАЗНОСТЬДАТ(ФизическиеЛица.ДатаНачалаРаботы, &ТекуцщаяДата, ГОД)
		|ИЗ
		|	втДействующиеСотрудники КАК втДействующиеСотрудники
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
		|		ПО втДействующиеСотрудники.ФизЛицо = ФизическиеЛица.Ссылка
		|ГДЕ
		|	МЕСЯЦ(ФизическиеЛица.ДатаНачалаРаботы) = МЕСЯЦ(&ТекуцщаяДата)
		|	И ДЕНЬ(ФизическиеЛица.ДатаНачалаРаботы) = ДЕНЬ(&ТекуцщаяДата)
		//+++АК ILIK 2018.10.05 ИП-00019120.01
		//|	И РАЗНОСТЬДАТ(ФизическиеЛица.ДатаНачалаРаботы, &ТекуцщаяДата, ГОД) МЕЖДУ 0 И 10
		|	И РАЗНОСТЬДАТ(ФизическиеЛица.ДатаНачалаРаботы, &ТекуцщаяДата, ГОД) МЕЖДУ 1 И 9
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втДействующиеСотрудники.ФизЛицо,
		|	""Прием на работу"",
		|	0
		|ИЗ
		|	втДействующиеСотрудники КАК втДействующиеСотрудники
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|		ПО втДействующиеСотрудники.ФизЛицо = ЗначенияСвойствОбъектов.Объект
		|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.ПоздравлениеПриПриемеНаРаботуОтправлено))
		|ГДЕ
		|	РАЗНОСТЬДАТ(втДействующиеСотрудники.Сотрудник.ДатаПриемаНаРаботу, &ТекуцщаяДата, ДЕНЬ) <= 14
		|	И ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, ЛОЖЬ) = ЛОЖЬ
		|	И (втДействующиеСотрудники.Сотрудник.ПодразделениеОрганизации.Наименование В (&ПодразделенияОфис)
		|			ИЛИ втДействующиеСотрудники.Сотрудник.ПодразделениеОрганизации.Наименование В (&ПодразделенияРозница)
		|				И втДействующиеСотрудники.ФизЛицо.Должность В (&ДолжностиРозница)
		|			ИЛИ втДействующиеСотрудники.Сотрудник.ПодразделениеОрганизации.Наименование В (&ПодразделенияСклад)
		|				И втДействующиеСотрудники.ФизЛицо.Должность В (&ДолжностиСклад))
		//---АК ILIK
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		//+++АК ILIK 2018.10.05 ИП-00019120.01
		//|ВЫБРАТЬ
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		//---АК ILIK
		|	втПоздравленияСотрудников.ФизЛицо,
		|	втПоздравленияСотрудников.ФизЛицо.Наименование КАК ФИО,
		|	втПоздравленияСотрудников.ВидПоздравления,
		|	втПоздравленияСотрудников.КоличествоЛет,
		//+++АК ILIK 2018.10.05 ИП-00019120.01
		//|	КонтактнаяИнформация.Представление КАК АдресЭлектроннойПочты
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(1024)) КАК АдресЭлектроннойПочты
		//---АК ILIK 
		|ИЗ
		|	втПоздравленияСотрудников КАК втПоздравленияСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ПО втПоздравленияСотрудников.ФизЛицо = КонтактнаяИнформация.Объект
		|			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
		|			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица))");
	
	Запрос.УстановитьПараметр("Вкусвилл",		Справочники.Организации.НайтиПоКоду("000000006")); // "Вкусвилл"
	Запрос.УстановитьПараметр("ТекуцщаяДата",	ТекущаяДата());
	
	//+++АК ILIK 2018.10.05 ИП-00019120.01
	СтруктураПодразделений = ПолучитьПодразделения();
	Запрос.УстановитьПараметр("ПодразделенияОфис", СтруктураПодразделений.ПодразделенияОфис);
	Запрос.УстановитьПараметр("ПодразделенияРозница", СтруктураПодразделений.ПодразделенияРозница);
	Запрос.УстановитьПараметр("ПодразделенияСклад", СтруктураПодразделений.ПодразделенияСклад);
	Запрос.УстановитьПараметр("ДолжностиРозница", СтруктураПодразделений.ДолжностиРозница);
	Запрос.УстановитьПараметр("ДолжностиСклад", СтруктураПодразделений.ДолжностиСклад);
	//---АК ILIK
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Возврат Выборка;

КонецФункции

//+++АК LATV 2018.08.09 ИП-00019120
Функция СформироватьПоздравления(ДанныеСотрудников, ХранениеОткрыток)

	ПисьмаДляОтправки = Новый Массив;
	
	Пока ДанныеСотрудников.Следующий() Цикл
		ПараметрыЗаполнения = ПараметрыЗаполненияПисьма(ДанныеСотрудников, ХранениеОткрыток);
		Если ПараметрыЗаполнения = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		//+++АК ILIK 2018.10.05 ИП-00019120.01
		//ПараметрыПисьма = СФормироватьПисьмоДляОтправки(ПараметрыЗаполнения, ДанныеСотрудников.АдресЭлектроннойПочты, ДанныеСотрудников.ФИО);
		ПараметрыПисьма = СФормироватьПисьмоДляОтправки(ПараметрыЗаполнения, ДанныеСотрудников.АдресЭлектроннойПочты, ДанныеСотрудников.ФИО, ДанныеСотрудников.ФизЛицо);
		//---АК ILIK
		ПисьмаДляОтправки.Добавить(ПараметрыПисьма);
	КонецЦикла;
	
	Возврат ПисьмаДляОтправки;

КонецФункции

//+++АК LATV 2018.08.09 ИП-00019120
Функция ПараметрыЗаполненияПисьма(ДанныеСотрудников, ХранениеОткрыток)

	ПараметрыЗаполнения = Неопределено;
	
	Открытка = ВыбратьОткрытку(ДанныеСотрудников);
	Если Открытка <> Неопределено Тогда
		
		Если ДанныеСотрудников.ВидПоздравления = "День рождения" Тогда
			Тема = НСтр("ru = 'С Днем рождения!'");
		ИначеЕсли ДанныеСотрудников.ВидПоздравления = "Годовщина работы" Тогда
			Тема = НСтр("ru = 'Мы вместе '") + СтрокаСЧислом(";%1 год;;%1 года;%1 лет;%1 года"
				, ДанныеСотрудников.КоличествоЛет, ВидЧисловогоЗначения.Количественное);
		//+++АК ILIK 2018.10.05 ИП-00019120.01
		ИначеЕсли ДанныеСотрудников.ВидПоздравления = "Прием на работу" Тогда
			Тема = НСтр("ru = 'Приветствуем в команде ""ВкусВилл""'");
		//---АК ILIK
		КонецЕсли;
		
		ПараметрыЗаполнения = Новый Структура;
		ПараметрыЗаполнения.Вставить("Тема",			Тема);
		ПараметрыЗаполнения.Вставить("ФайлОткрытки",	ХранениеОткрыток.Получить(Открытка));
	КонецЕсли;
	
	Возврат ПараметрыЗаполнения;

КонецФункции

//+++АК LATV 2018.08.09 ИП-00019120
Функция ВыбратьОткрытку(ДанныеСотрудников)

	Открытка = Неопределено;
	
	Если ДанныеСотрудников.ВидПоздравления = "День рождения" Тогда
		Открытка = Открытки[0].Значение;
	ИначеЕсли ДанныеСотрудников.ВидПоздравления = "Годовщина работы" Тогда
		Открытка = Открытки[ДанныеСотрудников.КоличествоЛет].Значение;
	//+++АК ILIK 2018.10.05 ИП-00019120.01
	ИначеЕсли ДанныеСотрудников.ВидПоздравления = "Прием на работу" Тогда
		Открытка = Открытки[10].Значение;
	//---АК ILIK
	КонецЕсли;
	
	Возврат Открытка;

КонецФункции

//+++АК LATV 2018.08.09 ИП-00019120
//+++АК ILIK 2018.10.05 ИП-00019120.01
//Функция СформироватьПисьмоДляОтправки(ПараметрыЗаполнения, АдресПолучателя, ПредставлениеПолучателя)
Функция СформироватьПисьмоДляОтправки(ПараметрыЗаполнения, АдресПолучателя, ПредставлениеПолучателя, ФизЛицо)
//---АК ILIK

	Кому = Новый Массив;
	Кому.Добавить(Новый Структура("Адрес, Представление", АдресПолучателя, ПредставлениеПолучателя));
	
	Копия = Новый Массив;
	Для Каждого Получатель Из ЭлектронныеАдресаПолучателейКопий Цикл
		Копия.Добавить(Новый Структура("Адрес, Представление", Получатель.Адрес, Получатель.Представление));
	КонецЦикла;
	
	ПараметрыПисьма = Новый Структура();
	ПараметрыПисьма.Вставить("Важность",	ВажностьИнтернетПочтовогоСообщения.Обычная);
	ПараметрыПисьма.Вставить("ТипТекста",	ТипТекстаПочтовогоСообщения.HTML);
	ПараметрыПисьма.Вставить("Тема",		ПараметрыЗаполнения.Тема);
	ПараметрыПисьма.Вставить("Тело",		ПоместитьВложениеВТелоПисьма(ПараметрыЗаполнения.ФайлОткрытки));
	ПараметрыПисьма.Вставить("Кому",		Кому);
	ПараметрыПисьма.Вставить("Копия",		Копия);
	//+++АК ILIK 2018.10.05 ИП-00019120.01
	ПараметрыПисьма.Вставить("ФизЛицо",		ФизЛицо);
	//---АК ILIK
	
	Возврат ПараметрыПисьма;

КонецФункции

//+++АК LATV 2018.08.09 ИП-00019120
Функция ПоместитьВложениеВТелоПисьма(ФайлОткрытки)

	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"<img src=""%1""><BR>", ФайлОткрытки);
	
	Возврат ТекстСообщения;

КонецФункции

//+++АК LATV 2018.08.09 ИП-00019120
Процедура ОтправитьПисьма(ПисьмаДляОтправки)

	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки(АдресЭлектроннойПочтыДляРассылки);
	
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	
	ДанныеУчетнойЗаписи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(УчетнаяЗапись, "АдресЭлектроннойПочты, Наименование");
	
	Почта = Новый ИнтернетПочта;
	Почта.Подключиться(Профиль);
	
	Для Каждого ПараметрыПисьма Из ПисьмаДляОтправки Цикл
		Письмо = Новый ИнтернетПочтовоеСообщение;
		
		Письмо.Тема				= ПараметрыПисьма.Тема;
		Письмо.ИмяОтправителя	= НСтр("ru = 'Наши поздравления!'");
		Письмо.Отправитель		= СокрЛП(ДанныеУчетнойЗаписи.АдресЭлектроннойПочты);
		
		Для Каждого СтрокаПолучатель Из ПараметрыПисьма.Кому Цикл
			Получатель = Письмо.Получатели.Добавить();
			Получатель.Адрес			= СтрокаПолучатель.Адрес;
			Получатель.ОтображаемоеИмя	= СтрокаПолучатель.Представление;
		КонецЦикла;
		
		Для Каждого СтрокаПолучатель Из ПараметрыПисьма.Копия Цикл
			Получатель = Письмо.Копии.Добавить();
			Получатель.Адрес			= СтрокаПолучатель.Адрес;
			Получатель.ОтображаемоеИмя	= СтрокаПолучатель.Представление;
		КонецЦикла;
		
		ТекстСообщения = Письмо.Тексты.Добавить();
		ТекстСообщения.Текст		= ПараметрыПисьма.Тело;
		ТекстСообщения.ТипТекста	= ПараметрыПисьма.ТипТекста;
		
		Письмо.ОбработатьТексты();
		
		Почта.Послать(Письмо);
		
		//+++АК ILIK 2018.10.05 ИП-00019120.01
		ЗаписатьФактОтправки(ПараметрыПисьма.Тема, ПараметрыПисьма.ФизЛицо);
		//---АК ILIK
	КонецЦикла;
	
	Почта.Отключиться();

КонецПроцедуры

//+++АК ILIK 2018.10.05 ИП-00019120.01
Функция ПолучитьПодразделения()
	ПодразделенияОфис = Новый Массив;
	ПодразделенияОфис.Добавить("Управление единой концепцией");
	ПодразделенияОфис.Добавить("Центральный офис");
	ПодразделенияОфис.Добавить("Исполнительное управление");
	ПодразделенияОфис.Добавить("Управление по финансовому контролю и учёту");
	ПодразделенияОфис.Добавить("Управление финансами");
	ПодразделенияОфис.Добавить("Управление Качества");
	ПодразделенияОфис.Добавить("Управление по развитию");
	ПодразделенияОфис.Добавить("Управление по расчёту заказов");
	ПодразделенияОфис.Добавить("Управление по обеспечению");
	ПодразделенияОфис.Добавить("Администрация");
	ПодразделенияОфис.Добавить("Управление проектом");
	
	ПодразделенияРозница = Новый Массив;
	ПодразделенияРозница.Добавить("Управление розницей");
	
	ДолжностиРозница = Новый Массив;
	ДолжностиРозница.Добавить("Аналитик");
	ДолжностиРозница.Добавить("Ассистент специалиста по подбору персонала");
	ДолжностиРозница.Добавить("Ведущий специалист в рознице");
	ДолжностиРозница.Добавить("Ведущий специалист по подбору персонала");
	ДолжностиРозница.Добавить("Логист");
	ДолжностиРозница.Добавить("Менеджер по исследованиям");
	ДолжностиРозница.Добавить("Офис-менеджер");
	ДолжностиРозница.Добавить("Помощник территориального управляющего");
	ДолжностиРозница.Добавить("Помощник юриста");
	ДолжностиРозница.Добавить("Руководитель отдела по подбору и обучению персонала");
	ДолжностиРозница.Добавить("Специалист");
	ДолжностиРозница.Добавить("Специалист по документации");
	ДолжностиРозница.Добавить("Специалист по исследованиям");
	ДолжностиРозница.Добавить("Специалист по обучению");
	ДолжностиРозница.Добавить("Специалист по подбору персонала");
	ДолжностиРозница.Добавить("Специалист по согласованию наружной рекламы");
	ДолжностиРозница.Добавить("Старший юрист");
	ДолжностиРозница.Добавить("Юрист");
	
	ПодразделенияСклад = Новый Массив;
	ПодразделенияСклад.Добавить("Склад");
	
	ДолжностиСклад = Новый Массив;
	ДолжностиСклад.Добавить("Заместитель заведующего складом");
	ДолжностиСклад.Добавить("Руководитель распределительного центра");
	ДолжностиСклад.Добавить("Старший оператор склада");
	ДолжностиСклад.Добавить("Заместитель управляющего распределительного центра");
	ДолжностиСклад.Добавить("Помощник руководителя");
	
	Возврат Новый Структура("ПодразделенияОфис, ПодразделенияРозница, ДолжностиРозница, ПодразделенияСклад, ДолжностиСклад", ПодразделенияОфис, ПодразделенияРозница, ДолжностиРозница, ПодразделенияСклад, ДолжностиСклад);
КонецФункции

//+++АК ILIK 2018.10.05 ИП-00019120.01
Процедура ЗаписатьФактОтправки(Тема, ФизЛицо)
	Если Тема = "Приветствуем в команде ""ВкусВилл""" Тогда
		НаборЗаписей = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Объект.Установить(ФизЛицо);
		НаборЗаписей.Отбор.Свойство.Установить(ПланыВидовХарактеристик.СвойстваОбъектов.ПоздравлениеПриПриемеНаРаботуОтправлено);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Объект = ФизЛицо;
		НоваяЗапись.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.ПоздравлениеПриПриемеНаРаботуОтправлено;
		НоваяЗапись.Значение = Истина; 

		НаборЗаписей.Записать();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область МодульМенеджера

//+++АК LATV 2018.08.09 ИП-00019120
Функция КодДляВыполненияВПериодическихЗаданиях(ТекущаяОбработка, Параметры) Экспорт

	ЗапросПолучателей = Новый Запрос();
	ЗапросПолучателей.Текст =
		"ВЫБРАТЬ
		|	ПериодическиеЗаданияПолучателиРассылки.ФизЛицо КАК ФизЛицо
		|ИЗ
		|	Справочник.ПериодическиеЗадания.ПолучателиРассылки КАК ПериодическиеЗаданияПолучателиРассылки
		|ГДЕ
		|	ПериодическиеЗаданияПолучателиРассылки.Ссылка = &Задание";
	
	ЗапросПолучателей.УстановитьПараметр("Задание", ТекущаяОбработка);
	Получатели = ЗапросПолучателей.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизЛицо");
	
	// Выполнение обработки
	ВыполняемаяОбработка = Обработки.РассылкаПоздравленийСотрудникам.Создать();
	
	ВыполняемаяОбработка.Открытки			= Параметры.Открытки;
	ВыполняемаяОбработка.ПолучателиКопий	= Получатели;
	
	ВыполняемаяОбработка.ПоздравитьСотрудников();

КонецФункции

#КонецОбласти

АдресЭлектроннойПочтыДляРассылки = "inside@vkusvill.ru";
ПолучателиКопий = Новый Массив;
