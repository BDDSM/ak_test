
&НаСервере
Процедура НастроитьЭлементыФормы()

	Если Объект.ВсеРолиПользователя.Количество() = 1 Тогда
		Элементы.РольПользователя.Видимость = Ложь;
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(ИДРод) Тогда
		Элементы.ВидПолучателя.Видимость = Ложь;
		Элементы.Получатель.Видимость = Ложь;
		Элементы.Товар.Видимость = Ложь;
		Элементы.ТипСообщения.Видимость = Ложь;
		Элементы.Тема.ТолькоПросмотр = Истина;
		Элементы.ОтИмени.Видимость = Ложь;
		Элементы.СрокАктуальности.Видимость = Ложь;
		Элементы.ВсемСменам.Видимость = Ложь;
		Элементы.СписокМагазинов.Видимость = Ложь;
	Иначе
		Если ВидПолучателя = 3 Тогда
			Элементы.Товар.Видимость = Объект.УказаниеТовара;
			Элементы.Получатель.ТолькоПросмотр = Объект.УказаниеТовара;
			Если Объект.ТипСообщения = Перечисления.ТипыСообщенийМОС.Инцидент Тогда
				Элементы.ТипИнцидента.Видимость = НЕ Объект.УказаниеТовара;
				Элементы.Получатель.ТолькоПросмотр = Истина;
				Элементы.ВидПолучателя.ТолькоПросмотр = Истина;
			КонецЕсли;
		Иначе
			Элементы.Товар.Видимость = Ложь;
			Элементы.Получатель.ТолькоПросмотр = Истина;
		КонецЕсли;
		
		Если Объект.ОтИмени <> 0 Тогда // т.е. это магазин
			Элементы.ВидПолучателя.ТолькоПросмотр = Истина;
			ВидПолучателя = 3;
			Если Объект.ТипСообщения = Перечисления.ТипыСообщенийМОС.Задача Тогда
				Объект.ТипСообщения = Неопределено;
			КонецЕсли;
		Иначе
			Если Объект.ТипСообщения = Перечисления.ТипыСообщенийМОС.Задача Тогда
				ВидПолучателя = 2;
				Элементы.ВидПолучателя.ТолькоПросмотр = Истина;
				ВсемСменам = Ложь;
				Элементы.ВсемСменам.Доступность = Ложь;
			ИначеЕсли Объект.ТипСообщения = Перечисления.ТипыСообщенийМОС.Инцидент Тогда
				ВидПолучателя = 3;
				Элементы.ВидПолучателя.ТолькоПросмотр = Истина;
				ВсемСменам = Ложь;
				Элементы.ВсемСменам.Доступность = Ложь;
			Иначе
				Элементы.ВидПолучателя.ТолькоПросмотр = Ложь;
				Элементы.ВсемСменам.Доступность = Истина;
			КонецЕсли;
		КонецЕсли;
			
		Элементы.Получатель.Видимость = Ложь;
		Элементы.СписокМагазинов.Видимость = Ложь;
		Элементы.ВсемСменам.Видимость = Истина;
		Если ВидПолучателя = 3 Тогда
			Элементы.Получатель.Видимость = Истина;
			Элементы.ВсемСменам.Видимость = Ложь;
		ИначеЕсли ВидПолучателя = 2 И НЕ ЗначениеЗаполнено(ИДРод) Тогда
			Элементы.СписокМагазинов.Видимость = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокРолейПользователя()

	Элементы.РольПользователя.СписокВыбора.Очистить();
	Для каждого ЭлСЗ1 Из Объект.ВсеРолиПользователя Цикл
		Элементы.РольПользователя.СписокВыбора.Добавить(ЭлСЗ1.Значение);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщение(Команда)
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		ОтправитьСообщениеНаСервере();
		ЗакрытиеПослеОтправки = Истина;
		ОповеститьОЗаписиНового(Неопределено);
		Закрыть();
	Исключение
		Предупреждение("Не удалось отправить сообщение");
	КонецПопытки;
	
КонецПроцедуры

// Функция корректирует значение некоторых реквизитов обработки
// Возвращает Истина, если всё нормально и Ложь, если есть ошибки
//
&НаСервере
Функция СкорректироватьПараметрыОбработки()

	Если Объект.УказаниеТовара Тогда
		// если на основании предопределённого шаблона, то адресуем в зависимости от шаблона
		// если на основании обычного шаблона, то адресуем ответственному из карточки товара
	
		Если Объект.Шаблон = Справочники.ШаблоныСообщенийМОС.ПретензияКСкладу Тогда
		
			//ищем склад-поставщик для данного товара
			СкладПоставщик = Обработки.СообщенияМОС.ПолучитьСкладПоставщикТовара(Объект.Товар, Объект.ОтИмени);
			Если НЕ ЗначениеЗаполнено(СкладПоставщик) Тогда
				ТекстСообщения = "Не найден склад-поставщик! Исходные данные:"
				+ Символы.ПС + "Товар: " + Строка(Объект.Товар)
				+ Символы.ПС + "Код структурной единицы: " + Формат(Объект.ОтИмени, "ЧГ=0");
				
				ПеренаправитьСообщениеАдминистраторуОбОшибке(ТекстСообщения);
				Возврат Ложь;
			КонецЕсли;
		
			//  по складу ищем роль и, если всё нашли, то заполняем эту роль
			Объект.Получатель = Обработки.СообщенияМОС.ПолучитьРольПользователяПоСкладу(СкладПоставщик);
			Если НЕ ЗначениеЗаполнено(Объект.Получатель) Тогда
				ТекстСообщения = "Не найдена роль для склада! Исходные данные:"
				+ Символы.ПС + "Склад: " + Строка(СкладПоставщик);
				
				ПеренаправитьСообщениеАдминистраторуОбОшибке(ТекстСообщения);
				Возврат Ложь;
			КонецЕсли;
		ИначеЕсли Объект.Шаблон = Справочники.ШаблоныСообщенийМОС.ПретензияРасчетчику Тогда	
			
			// вычислим расчётчика по товару
			Расчетчик = Обработки.СообщенияМОС.ПолучитьРасчетчикаПоТовару(Объект.Товар);
			Если НЕ ЗначениеЗаполнено(Расчетчик) Тогда
				ТекстСообщения = "Не удалось найти расчетчика по товару! Исходные данные:"
				+ Символы.ПС + "Товар: " + Строка(Объект.Товар);
				
				ПеренаправитьСообщениеАдминистраторуОбОшибке(ТекстСообщения);
				Возврат Ложь;
			КонецЕсли;
							
			// найдём роль по найденному расчётчику
			Объект.Получатель = Обработки.СообщенияМОС.ПолучитьРольПользователяПоРасчетчику(Расчетчик);
			Если НЕ ЗначениеЗаполнено(Объект.Получатель) Тогда
				ТекстСообщения = "Не найдена роль для расчетчика! Исходные данные:"
				+ Символы.ПС + "Расчетчик: " + Строка(Расчетчик);
									
				ПеренаправитьСообщениеАдминистраторуОбОшибке(ТекстСообщения);
				Возврат Ложь;
			КонецЕсли;
		ИначеЕсли Объект.Шаблон = Справочники.ШаблоныСообщенийМОС.ПретензияПоКачеству
			  ИЛИ НЕ ЗначениеЗаполнено(Объект.Шаблон) Тогда	
		// возьмём роль из карточки товара (реквизит "РольОтветственныхЗаТовар")
		Объект.Получатель = Объект.Товар.РольОтветственныхЗаТовар;
			Если НЕ ЗначениеЗаполнено(Объект.Получатель) Тогда
				екстСообщения = "Не найдена роль ответственных по качеству! Исходные данные:"
						+ Символы.ПС + "Товар: " + Строка(Объект.Товар);
									
				ПеренаправитьСообщениеАдминистраторуОбОшибке(ТекстСообщения);
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;

КонецФункции


&НаСервере
Процедура ОтправитьСообщениеНаСервере()
	
	СкорректироватьПараметрыОбработки();
	
	ДанныеДляMessage = Новый Структура;
	МассивДанныхДляMessage    = Новый Массив;
	МассивДанныхДляRecipietns = Неопределено;
		
	ДанныеДляMessage.Вставить("TTL", СрокАктуальности);
	Если ВидПолучателя = 3 Тогда
		ДанныеДляMessage.Вставить("Role", ?(ЗначениеЗаполнено(Объект.Получатель.Код), Число(Объект.Получатель.Код), ""));
	КонецЕсли;
	
	ДанныеДляMessage.Вставить("Direction", 1);
	ДанныеДляMessage.Вставить("Subject", Объект.Тема);
	ДанныеДляMessage.Вставить("MessageText", Объект.ТекстСообщения);
	КодТипаСообщения = Обработки.СообщенияМОС.ПолучитьКодТипаСообщенияМОСПоЗначениюПеречисления(Объект.ТипСообщения);
	ДанныеДляMessage.Вставить("MessageType", КодТипаСообщения);
	ДанныеДляMessage.Вставить("Author", Число(Объект.КодСотрудника));
	ДанныеДляMessage.Вставить("AddDateTime", Обработки.СообщенияМОС.ПолучитьРабочуюДатуМОС());
	ДанныеДляMessage.Вставить("RoleSender", Объект.РольПользователя.Код);
	ДанныеДляMessage.Вставить("ShopNo", Объект.ОтИмени);
	Если ЗначениеЗаполнено(ИДРод) Тогда
		ДанныеДляMessage.Вставить("IDMes", ИДРод);
	КонецЕсли;
	
	Если Объект.ОтИмени = 0 Тогда // т.е. это центр
		ДанныеДляMessage.Вставить("TypeAddr", 0);
		
		Если ВсемСменам И Элементы.ВсемСменам.Видимость Тогда
			ДанныеДляMessage.Вставить("TypeAddr", 2);
		ИначеЕсли ВидПолучателя = 3 Тогда
			ДанныеДляMessage.Вставить("TypeAddr", 3);
		Иначе
			ДанныеДляMessage.Вставить("TypeAddr", 1);
		КонецЕсли;	
		
		Если ВидПолучателя = 3 Тогда // вариант указания роли
			Расчетчик_СтруктурнаяЕдиница = Объект.Получатель.Расчетчик_СтруктурнаяЕдиница;
			ДанныеДляMessage.Вставить("Direction", 3);
			Если ЗначениеЗаполнено(Расчетчик_СтруктурнаяЕдиница) Тогда
				Если ТипЗнч(Расчетчик_СтруктурнаяЕдиница) = Тип("СправочникСсылка.Расчетчики") Тогда
					ДанныеДляMessage.Вставить("ShopNo",   Расчетчик_СтруктурнаяЕдиница.Склад.НомерТочки);
					ДанныеДляMessage.Вставить("Direction", 1);
				ИначеЕсли ТипЗнч(Расчетчик_СтруктурнаяЕдиница) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
					ДанныеДляMessage.Вставить("ShopNo",   Расчетчик_СтруктурнаяЕдиница.НомерТочки);
					ДанныеДляMessage.Вставить("Direction", 1);
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли ВидПолучателя = 1 Тогда // вариант сообщения "все магазины/текущая смена"
			МассивДанныхДляRecipietns = ПолучитьДанныеДляRecipients();
		ИначеЕсли ВидПолучателя = 2 Тогда // вариант сообщения "указанные магазины/все смены" и "указанные магазины/тек. смена"
			// здесь сформируем сообщения только для тек. смены, а для остальных смен сообщения(для инф. сообщений)
			// будут формироваться на стороне MSSQL Server
			МассивТТ = Новый Массив;
			Для каждого ЭлСЗМ Из СписокМагазинов Цикл
				Если ЭлСЗМ.Пометка Тогда
					МассивТТ.Добавить(ЭлСЗМ.Значение);
				КонецЕсли;
			КонецЦикла;
			МассивДанныхДляRecipietns = ПолучитьДанныеДляRecipients(МассивТТ);
		КонецЕсли;
	Иначе // т.е. вариант эмуляции отправки из магазина
		ДанныеДляMessage.Вставить("TypeAddr", 3);
		ДанныеДляMessage.Вставить("Direction", 2);
	КонецЕсли;
	
	Если Объект.ТипСообщения = Перечисления.ТипыСообщенийМОС.Инцидент Тогда
		ДанныеДляMessage.Вставить("Status", 1);
	КонецЕсли;
	
	Если МассивДанныхДляRecipietns = Неопределено Тогда // это вариант одного сообщения
		ДанныеДляMessage.Вставить("ShopNo_rep", ДанныеДляMessage.ShopNo);
		МассивДанныхДляMessage.Добавить(ДанныеДляMessage);
	Иначе
		Для каждого Эл1 Из МассивДанныхДляRecipietns Цикл
			НомерМагазина1 = Эл1.ShopNo;
			Стр1 = ОбщегоНазначения.СкопироватьУниверсальнуюКоллекцию(ДанныеДляMessage);
			Стр1.Вставить("ShopNo_rep", НомерМагазина1);
			МассивДанныхДляMessage.Добавить(Стр1);
		КонецЦикла;
	КонецЕсли;
	
	ДанныеДляЗаписи = Новый Структура("Messages, Recipients", МассивДанныхДляMessage, МассивДанныхДляRecipietns);
	ИДСообщения = 0;
	Обработки.СообщенияМОС.ДобавитьЗаписиВТаблицыSQL(ДанныеДляЗаписи, ИДСообщения);
	
	Если ЗначениеЗаполнено(ТекстСообщенияОбОшибке) Тогда
		// сформируем ещё одно сообщение для администратора
		//КодРолиАдминистратора = Число(Справочники.РолиПользователей.Администратор.Код);
		//ДанныеДляMessage.Вставить("Role", КодРолиАдминистратора);
		//ДанныеДляMessage.Вставить("IDMes", ИДСообщения);
		//ТекстАдминистратору = ТекстСообщенияОбОшибке + Символы.ПС + "Текст сообщения:"
		//	+ Символы.ПС + ДанныеДляMessage.MessageText;
		//ДанныеДляMessage.Вставить("MessageText", ТекстАдминистратору);
		//
		//ДанныеДляЗаписи = Новый Структура("Messages, Recipients", ДанныеДляMessage);
		//Обработки.СообщенияМОС.ДобавитьЗаписиВТаблицыSQL(ДанныеДляЗаписи, ИДСообщения);
		//ТекстСообщенияОбОшибке = Неопределено;
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьДанныеДляRecipients(ТТ = Неопределено)

	МассивДанныхДляRecipietns = Новый Массив;
	
	// получим список тек. смен по всем магазинам
	ТЗСтаршихТекСмен = Обработки.СообщенияМОС.ПолучитьТЗСтаршихТекущихСмен(ТТ);
	Для каждого СтрокаТЗСТС Из ТЗСтаршихТекСмен Цикл
		ДанныеДляRecipients = Новый Структура;
		ДанныеДляRecipients.Вставить("ShopNo", СтрокаТЗСТС.НомерМагазина);
		ДанныеДляRecipients.Вставить("Senior", Число(СтрокаТЗСТС.КодФизЛица));
		МассивДанныхДляRecipietns.Добавить(ДанныеДляRecipients);
	КонецЦикла;
	
	Возврат МассивДанныхДляRecipietns;

КонецФункции // ()


&НаКлиенте
Процедура ВидПолучателяПриИзменении(Элемент)
	
	НастроитьЭлементыФормы();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КопироватьДанныеФормы(Параметры.РеквизитОбъект, Объект);
	
	СписокМагазинов = МеханизмОбменаСообщениямиПовтИсп.ПолучитьСписокПодразделений("Магазины");
	
	Элементы.ОтИмени.СписокВыбора.Добавить(0, "Это подразделение");	
	Для каждого ЭлСЗ1 Из СписокМагазинов Цикл
		Элементы.ОтИмени.СписокВыбора.Добавить(ЭлСЗ1.Значение, ЭлСЗ1.Представление);
	КонецЦикла;
	Объект.ОтИмени = 0;
	
	Элементы.ВидПолучателя.СписокВыбора.Добавить(3, Обработки.СообщенияМОС.ПолучитьПредставлениеВидаПолучателя(3));
	Элементы.ВидПолучателя.СписокВыбора.Добавить(1, Обработки.СообщенияМОС.ПолучитьПредставлениеВидаПолучателя(1));
	Элементы.ВидПолучателя.СписокВыбора.Добавить(2, Обработки.СообщенияМОС.ПолучитьПредставлениеВидаПолучателя(2));
	
	СрокАктуальности = Обработки.СообщенияМОС.ПолучитьЗначениеTTL();
	
	ЗаполнитьСписокРолейПользователя();
	
	Если Параметры.Свойство("Шаблон") Тогда
		Объект.Шаблон = Параметры.Шаблон;
		Объект.ТипСообщения = Параметры.Шаблон.ТипСообщения;
		Объект.ТекстСообщения = Параметры.Шаблон.ТекстСообщения;
		Объект.УказаниеТовара = Параметры.Шаблон.Товары;
		Если НЕ Объект.УказаниеТовара Тогда
			Объект.Получатель = Параметры.Шаблон.РольПолучателя;
			Если Объект.ТипСообщения = Перечисления.ТипыСообщенийМОС.Инцидент Тогда
				Объект.ТипИнцидента = Параметры.Шаблон.ТипИнцидента;
				Объект.Получатель = Параметры.Шаблон.ТипИнцидента.Роль;
			КонецЕсли;
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.Получатель) ИЛИ Объект.УказаниеТовара Тогда
			ВидПолучателя = 3;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("ИДРод") Тогда // это вариант ответа/комментария
		ИДРод = Параметры.ИДРод;
		Объект.ТипСообщения = Перечисления.ТипыСообщенийМОС.ИнформационноеСообщение;
		ЭлСЗ = Объект.ВсеРолиПользователя.НайтиПоЗначению(Параметры.РольПолучателя);
		Если ЭлСЗ <> Неопределено Тогда
			Объект.РольПользователя = Параметры.РольПолучателя;
			Элементы.РольПользователя.ТолькоПросмотр = Истина;
		КонецЕсли;
		
		Если Параметры.КодНаправления = 2 Тогда
			ВидПолучателя = 2; // список магазинов
			Для каждого ЭлСЗ Из СписокМагазинов Цикл
				Если ЭлСЗ.Значение = Параметры.КодМагазинаОтправителя Тогда
					ЭлСЗ.Пометка = Истина;
				КонецЕсли;
				Если МеханизмОбменаСообщениямиПовтИсп.ЭтоТестовыйРежимМОС() Тогда
					Если ЭлСЗ.Значение = 99999 И Параметры.КодМагазинаОтправителя = 191 Тогда
						ЭлСЗ.Пометка = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Элементы.СписокМагазинов.Видимость = Ложь;
			
		ИначеЕсли ЗначениеЗаполнено(Параметры.РольОтправителя) Тогда
			ВидПолучателя = 3;
			Объект.Получатель = Параметры.РольОтправителя;
		КонецЕсли;
		Объект.Тема = "Ответ на " + СокрЛП(Параметры.ТемаРод);
		
	КонецЕсли;
	
	Заголовок = Заголовок + Обработки.СообщенияМОС.ПолучитьДобавкуКЗаголовкуОкна();
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НастроитьЭлементыФормы();
		
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если Объект.ОтИмени <> 0 Тогда
		Если ВидПолучателя <> 3 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "При отправке сообщения от имени другого подразделения адресация должен иметь значение ""Указанная роль""";
			Сообщение.Поле = "ВидПолучателя";
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЕсли;
	
	Если ВидПолучателя = 3 Тогда
		//ПроверяемыеРеквизиты.Добавить("Объект.Получатель");
		//Подразделение = Объект.Получатель.Расчетчик_СтруктурнаяЕдиница;
		//Если НЕ ЗначениеЗаполнено(Подразделение) Тогда
		//	Отказ = Истина;
		//	Сообщение = Новый СообщениеПользователю;
		//	Сообщение.Текст = "У выбранного получателя не заполнен реквизит ""Стр. единица""";
		//	Сообщение.Поле = "Получатель";
		//	Сообщение.Сообщить();
		//	Возврат;
		//КонецЕсли;
		//Если ТипЗнч(Подразделение) <> Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
		//	Отказ = Истина;
		//	Сообщение = Новый СообщениеПользователю;
		//	Сообщение.Текст = "У выбранного получателя заполнен реквизит ""Расчетчик"". Отправка сообщений расчетчикам не предусмотрена!";
		//	Сообщение.Поле = "Получатель";
		//	Сообщение.Сообщить();
		//	Возврат;
		//КонецЕсли;
		//Если НЕ ЗначениеЗаполнено(Подразделение.НомерТочки) Тогда
		//	Отказ = Истина;
		//	Сообщение = Новый СообщениеПользователю;
		//	Сообщение.Текст = "У выбранного получателя в реквизите ""Стр. единица"" не указан номер точки";
		//	Сообщение.Поле = "Получатель";
		//	Сообщение.Сообщить();
		//	Возврат;
		//КонецЕсли;
	ИначеЕсли ВидПолучателя = 2 Тогда
		// СписокМагазинов проверим вручную
		СписокМагазиновЗаполнен = Ложь;
		Для каждого ЭлСЗ1 Из СписокМагазинов Цикл
			Если ЭлСЗ1.Пометка Тогда
				СписокМагазиновЗаполнен = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если НЕ СписокМагазиновЗаполнен Тогда
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Укажите хотя бы один магазин";
			Сообщение.Поле = "СписокМагазинов";
			Сообщение.Сообщить();
		КонецЕсли;
	КонецЕсли;
	Если Объект.УказаниеТовара И НЕ ЗначениеЗаполнено(Объект.Товар) Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Укажите товар";
		Сообщение.Поле = "Товар";
		Сообщение.Сообщить();
	КонецЕсли;
	
	Если Объект.ТипСообщения = Перечисления.ТипыСообщенийМОС.Инцидент И НЕ Объект.УказаниеТовара И НЕ ЗначениеЗаполнено(Объект.ТипИнцидента) Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Необходимо указать тип инцидента";
		Сообщение.Поле = "ТипИнцидента";
		Сообщение.Сообщить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСообщенияПриИзменении(Элемент)
	
	НастроитьЭлементыФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗакрытиеПослеОтправки Тогда
		Ответ1 = Вопрос("При закрытии введённые данные будут утеряны! Вы действительно хотите закрыть данное окно?", РежимДиалогаВопрос.ДаНет);
		Если Ответ1 = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПеренаправитьСообщениеАдминистраторуОбОшибке(ТекстСообщения)

	ТекстСообщенияОбОшибке = ТекстСообщения; 
	
	//Объект.Получатель = Справочники.РолиПользователей.Администратор;
	//Объект.ТекстСообщения = Объект.ТекстСообщения + Символы.ПС + ТекстСообщения;
	//ВидПолучателя = 3;
	
КонецПроцедуры


&НаКлиенте
Процедура ОтИмениПриИзменении(Элемент)
	
	СкорректироватьПараметрыОбработки();
	НастроитьЭлементыФормы();
	
КонецПроцедуры


&НаКлиенте
Процедура ТоварПриИзменении(Элемент)
	
	СкорректироватьПараметрыОбработки();
	
КонецПроцедуры


&НаКлиенте
Процедура ТипИнцидентаПриИзменении(Элемент)
	
	УстановитьРольПоТипуИнцидента();
	
КонецПроцедуры

Процедура УстановитьРольПоТипуИнцидента()

	Объект.Получатель = Объект.ТипИнцидента.Роль;

КонецПроцедуры
