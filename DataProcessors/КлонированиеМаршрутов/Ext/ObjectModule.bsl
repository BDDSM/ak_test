
//+++АК sole 2018.08.02 ИП-00019229
Процедура КлонироватьМаршруты() Экспорт
	
	Перем БПР;
	
	БПР = СоздатьБлокПараметров(); 
	СоздатьТаблицуСопоставленияМаршрутов(БПР);
	
	НачатьТранзакцию();
	Попытка
		КопироватьМаршруты(БПР);
		КопироватьВодителей(БПР);
 		КопироватьЗаписиСтоимостьУслугПоДоставкеНаТТ(БПР);
		
		ЗафиксироватьТранзакцию();
	Исключение
		ОтменитьТранзакцию();
		БПР.Запрос.МенеджерВременныхТаблиц.Закрыть();
		ВызватьИсключение(ОписаниеОшибки());
	КонецПопытки;
	
	ОтобразитьСписокКлонированныхМаршрутов(БПР);
	БПР.Запрос.МенеджерВременныхТаблиц.Закрыть();	
	
КонецПроцедуры

//+++АК sole 2018.08.02 ИП-00019229
Функция СоздатьБлокПараметров()
	
	Перем БПР, Запрос;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	
	БПР = Новый Структура();
	БПР.Вставить("Запрос", Запрос);
	
	Возврат БПР;
КонецФункции

//+++АК sole 2018.08.02 ИП-00019229
Процедура СоздатьТаблицуСопоставленияМаршрутов(БПР)
	
	тзСопоставленияМаршрутов = Новый ТаблицаЗначений();
	тзСопоставленияМаршрутов.Колонки.Добавить("КопируемыйМаршрут", Новый ОписаниеТипов("СправочникСсылка.Маршруты"));
	тзСопоставленияМаршрутов.Колонки.Добавить("МаршрутКопия", Новый ОписаниеТипов("СправочникСсылка.Маршруты"));
	
	ПустойМаршрут = Справочники.Маршруты.ПустаяСсылка();
	
	Для Каждого Стр Из ЭтотОбъект.КлонируемыеМаршруты Цикл
		Если Не Стр.Обрабатывать Тогда
			Продолжить;
		КонецЕсли;
		
		НСтр = тзСопоставленияМаршрутов.Добавить();
		НСтр["КопируемыйМаршрут"] = Стр["Маршрут"];
		НСтр["МаршрутКопия"] = ПустойМаршрут;
	КонецЦикла; 
	
	БПР.Вставить("тзСопоставленияМаршрутов", тзСопоставленияМаршрутов);
	
КонецПроцедуры

//+++АК sole 2018.08.02 ИП-00019229
Процедура КопироватьМаршруты(БПР)
	
	Для Каждого Стр Из БПР.тзСопоставленияМаршрутов Цикл
		оКопируемыйМаршрут = Стр.КопируемыйМаршрут.ПолучитьОбъект();
		оМаршрутКопия = Справочники.Маршруты.СоздатьЭлемент();
		оМаршрутКопия.ОбменДанными.Загрузка = Истина;
		
		ЗаполнитьЗначенияСвойств(оМаршрутКопия, оКопируемыйМаршрут,,"Родитель, Владелец, Ссылка, Код");

		Для Каждого тчСтр Из оКопируемыйМаршрут.ТорговыеТочки Цикл
			НСтр = оМаршрутКопия.ТорговыеТочки.Добавить();
			ЗаполнитьЗначенияСвойств(НСтр, тчСтр);
		КонецЦикла;
		
		Для Каждого тчСтр Из оКопируемыйМаршрут.ГруппыНоменклатуры Цикл
			НСтр = оМаршрутКопия.ГруппыНоменклатуры.Добавить();
			ЗаполнитьЗначенияСвойств(НСтр, тчСтр);
		КонецЦикла;

		Для Каждого тчСтр Из оКопируемыйМаршрут.Склады Цикл
			НСтр = оМаршрутКопия.Склады.Добавить();
			ЗаполнитьЗначенияСвойств(НСтр, тчСтр);
		КонецЦикла;
		
			оКопируемыйМаршрут.Наименование = оКопируемыйМаршрут.Наименование + " (" + оКопируемыйМаршрут.Перевозчик.Наименование + ")";
			оКопируемыйМаршрут.ПометкаУдаления = Истина;
			оКопируемыйМаршрут.ОбменДанными.Загрузка = Истина;
			оКопируемыйМаршрут.Записать();
		
			оМаршрутКопия.Перевозчик = ЭтотОбъект.НовыйПеревозчик;
			оМаршрутКопия.УстановитьНовыйКод();
			оМаршрутКопия.Записать();
			Стр.МаршрутКопия = оМаршрутКопия.Ссылка; 
	КонецЦикла;
	
КонецПроцедуры

//+++АК sole 2018.08.02 ИП-00019229
Процедура КопироватьВодителей(БПР)
	
	Перем Запрос;	
	
	Запрос = БПР.Запрос;
	Запрос.Текст =
"ВЫБРАТЬ
|	т.КопируемыйМаршрут,
|   т.МаршрутКопия
|
|		ПОМЕСТИТЬ втСопоставленияМаршрутов
|
|ИЗ &Таблица КАК т 
|;
|ВЫБРАТЬ
|	ВодителиПоМаршрутуСрезПоследних.Период,
|	втСопоставленияМаршрутов.МаршрутКопия КАК Маршрут,
|	ВодителиПоМаршрутуСрезПоследних.Водитель,
|	ВодителиПоМаршрутуСрезПоследних.Автомобиль,
|	ВодителиПоМаршрутуСрезПоследних.Контрагент
|
|ИЗ втСопоставленияМаршрутов
|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВодителиПоМаршруту.СрезПоследних КАК ВодителиПоМаршрутуСрезПоследних ПО
|			ВодителиПоМаршрутуСрезПоследних.Маршрут = втСопоставленияМаршрутов.КопируемыйМаршрут
|";
	Запрос.УстановитьПараметр("Таблица", БПР.тзСопоставленияМаршрутов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.ВодителиПоМаршруту.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(Выборка.Период);
		НаборЗаписей.Отбор.Маршрут.Установить(Выборка.Маршрут);
		НаборЗаписей.Прочитать();
		Если НаборЗаписей.Количество() <> 0 Тогда
			Продолжить;
		КонецЕсли;
		Запись = НаборЗаписей.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
	Запрос.Параметры.Очистить();	
	
КонецПроцедуры

//+++АК sole 2018.08.02 ИП-00019229
Процедура КопироватьЗаписиСтоимостьУслугПоДоставкеНаТТ(БПР)
	
	Перем Запрос;	
	
	Запрос = БПР.Запрос;
	Запрос.Текст =
"ВЫБРАТЬ
|	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.Период,
|	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.Контрагент,
|	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.ТТ,
|	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.ГруппаДоставкиНоменклатуры,
|   втСопоставленияМаршрутов.МаршрутКопия КАК Маршрут,
|	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.Ставка,
|	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.НаличиеДопТарифа,
|	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.СтавкаДопТарифа,
|	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.ПоставкаВСетках,
|	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.ВариантРасчетаНДС,
|	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.СтавкаНДС,
|	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.Организация,
|	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.ДатаЗаписи
|
|ИЗ втСопоставленияМаршрутов
|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьУслугПоДоставкеТовараНаТТ.СрезПоследних КАК СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних ПО
|			СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.Маршрут = втСопоставленияМаршрутов.КопируемыйМаршрут
|";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НаборЗаписей = РегистрыСведений.СтоимостьУслугПоДоставкеТовараНаТТ.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(Выборка.Период);
		НаборЗаписей.Отбор.Контрагент.Установить(Выборка.Контрагент);
		НаборЗаписей.Отбор.ТТ.Установить(Выборка.ТТ);
		НаборЗаписей.Отбор.ГруппаДоставкиНоменклатуры.Установить(Выборка.ГруппаДоставкиНоменклатуры);
		НаборЗаписей.Отбор.Маршрут.Установить(Выборка.Маршрут);
		
		Запись = НаборЗаписей.Добавить();
		
		ЗаполнитьЗначенияСвойств(Запись, Выборка);
		
		НаборЗаписей.ОбменДанными.Загрузка = Истина;
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
	Запрос.Параметры.Очистить();
	
КонецПроцедуры

//+++АК sole 2018.08.02 ИП-00019229
Процедура ОтобразитьСписокКлонированныхМаршрутов(БПР)
	
	Перем Запрос;
	
	Запрос = БПР.Запрос;

	Запрос.Текст =
"ВЫБРАТЬ
|	ПРЕДСТАВЛЕНИЕ(втСопоставленияМаршрутов.МаршрутКопия) КАК Маршрут
|ИЗ втСопоставленияМаршрутов 
|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Сообщить("Создан """ + Выборка.Маршрут + """.");
	КонецЦикла;
	
КонецПроцедуры