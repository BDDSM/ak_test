
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.МагазинТек = ПараметрыСеанса.ТорговаяТочкаПоАйпи;	
	Если Объект.МагазинТек.НомерТочки = 999 Тогда
		Объект.МагазинТек = Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	КонецЕсли;
				
	Если Параметры.Свойство("НомерКассы")Тогда
		НомерКассы=Параметры.НомерКассы;
	КонецЕсли;
	
	Если Параметры.Свойство("Дата")Тогда
		Дата=Параметры.Дата;
	Иначе
		Дата = ТекущаяДата();
	КонецЕсли;
	
	Если Параметры.Свойство("Тип")Тогда
		ТипВидео=Параметры.Тип;
	КонецЕсли;
	
	Если Параметры.Свойство("НомерЧека")Тогда
		НомерЧека=Параметры.НомерЧека;
		ЗапускатьПриОткрытии = Истина;
		НайтиЗаписиНаСервере(Истина);
	КонецЕсли;
	
	Если Параметры.Свойство("IDЗаписи") Тогда
		 IdЗаписи = Параметры.IdЗаписи
	КонецЕсли;
	
	Макет = Обработки.АК_ПросмотрУправлениеВидеоКамерами.ПолучитьМакет("КодХТМЛ");
	ПоказВидео = Макет.ПолучитьТекст();
	//Если ЗначениеЗаполнено(ПараметрыСеанса.ТорговаяТочкаПоАйпи)Тогда
	//	НомерМагазина = ПараметрыСеанса.ТорговаяТочкаПоАйпи.id_TT;
	//КонецЕсли;
	
	ПолучитьТипыВидео();
	
	КонецИнтервала = Дата(1,1,1,23,59,59);
	
	ИсторияПросмотровВидеокамер = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.ИсторияПросмотровВидеокамер, Ложь);
	Если ИсторияПросмотровВидеокамер или РольДоступна("ПолныеПрава") Тогда
		Элементы.СтраницаИсторияПросмотровВидео.Видимость = Истина;
	Иначе	
		Элементы.СтраницаИсторияПросмотровВидео.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПолучитьТипыВидео()
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	ТекстЗапроса =
	"SELECT [id_type_video]
    |  ,[name_type_video]
	|FROM [SMS_REPL].[dbo].[tfv_type_video]";
	rs = ADOСоединение.Execute(ТекстЗапроса);
	Попытка
		rs.MoveFirst();
		Элементы.ТипВидео.СписокВыбора.Очистить();
		Пока НЕ rs.EOF() Цикл
			Элементы.ТипВидео.СписокВыбора.Добавить(rs.Fields("id_type_video").Value,rs.Fields("name_type_video").Value);
			rs.MoveNext()
		КонецЦикла;
	Исключение
		Возврат
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура Получить(Команда)
	// Вставить содержимое обработчика.
//	Соединение = Новый HTTPСоединение("10.3.68.113");
//	Запрос = Новый HTTPЗапрос("video?act=get&id=0CE44531-ADF3-42EF-956F-0801784250BC");
////	Запрос.УстановитьТелоИзСтроки("act=get&id=0CE44531-ADF3-42EF-956F-0801784250BC");
//	ПолученныйФайл= ПолучитьИмяВременногоФайла("mp4");
//	Соединение.ОтправитьДляОбработки(Запрос,ПолученныйФайл);
	ПутьКЗаписи = Записи.НайтиПоИдентификатору(АктивнаяЗапись).Путь;
	//"http://10.3.68.113/video?act=get&id=0CE44531-ADF3-42EF-956F-0801784250BC";
	WMP=Элементы.ПоказВидео.Документ.getElementbyId("WMP").ContentDocument;
	WMP.URL=ПутьКЗаписи;
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьПанельНастроек(Команда)
	Элементы.ПанельНастроек.Видимость=Не Элементы.ПанельНастроек.Видимость;
	Элементы.КнопкаСкрытьПоказатьНастройки.Заголовок = ?(Элементы.ПанельНастроек.Видимость,"Скрыть настройки","Показать настройки");
КонецПроцедуры

&НаСервере
Функция ДатаВремяВСтроку(Дата,Время)
	Результат = Формат(Дата,"ДФ=yyyy-MM-dd")+" "+?(Час(Время)<10,"0","")+Формат(Время,"ДЛФ=T; ДП=0:00:00");
	Возврат "{ts'"+Результат+"'}"
КонецФункции

Функция ВремяВСтроку(Время)
	Результат = Формат(Время,"ДФ=yyyy-MM-dd")+" "+?(Час(Время)<10,"0","")+Формат(Время,"ДЛФ=T; ДП=0:00:00");
	Возврат "{ts'"+Результат+"'}"
КонецФункции


&НаСервере
Процедура НайтиЗаписиНаСервере(ПоЧеку=Ложь)
	//Если НомерМагазина+НомерКассы+ТипВидео=0 Тогда
	//	Сообщить("Не задан ни один параметр для поиска (магазин, касса или тип)!");
	//	Возврат
	//КонецЕсли;
	АктивнаяЗапись = -1;
	Записи.Очистить();
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	ТекстЗапроса =
	"SELECT V.[id]
	  |	,V.[ShopNo]
	  |	,V.[ip_camera]	  
	  |	,V.[CashID] 
	  |	,V.[CashierID]	  
	  |	,V.[CashCheckNo]
	  |	,V.[time_st]
	  |	,V.[Time_fin]
	  |	,Cast(V.[periods_text] as nvarchar(100)) as periods_text
	  //|	,[date_add]
	  //|	,[user_add]
	  |	,Cast(V.text_video as nvarchar(100))as text_video
	  //|	,[is_made]
	  |	,V.Type_video
	  |	,T.name_type_video as Type_str
	  |	,Cast(V.[Link_Download] as nvarchar(100)) as Link_Download
	  |	,Cast(V.[Link_View]  as nvarchar(100)) as Link_View
	  |	,Cast(F.[Link_Download]  as nvarchar(100)) as  flinkdownload  
	  |	,Cast(F.[Link_View]  as nvarchar(100)) as flinkview         
	  |	,F.[time_photo]
	  | ,V.[lag_cash]
	 // | ,CAST(master.dbo.Binary2UID(TT._IdRRef) as nvarchar(36)) as RefTT
	  |	,IsNull(P.FIO,'') as FIO
	  | ,Ch.CashierId	as CashierId2
	  //+++АК mika ИП-00016281 Дата: 2017.08.03
	  | ,Ch.BONUSCARD as BONUSCARD
	  //---АК
	  |	,V.[is_photo]	  
	  |FROM [SMS_REPL].[dbo].[times_for_video] V (nolock)
	  |left outer join [SMS_REPL].[dbo].[tfv_type_video] T 
	  |on V.type_video=T.id_type_video
	 // |left outer join [IzbenkaFin].[dbo].[_Reference42] TT (nolock)
	 // |on V.ShopNo=TT._Fld2756
	  |left outer join [SMS_REPL].[dbo].[Checks] Ch (nolock)
	  |on V.Cashid=Ch.CashId and V.CashCheckNo=Ch.CashCheckNo
	  |left outer join [SMS_REPL].[dbo].[Cashier_View_tbl] P (nolock)
	  |on Ch.CashierId=P.CodeFL 
	  |left outer join [SMS_REPL].[dbo].[times_for_photo] F (nolock)
	  |on V.ID=F.ID
	  |WHERE 
	  |&When &Where &Type &Ipcamera  &kassir
	  |order by V.id";
	  
	Если ПоЧеку Тогда
		УсловиеКогда = "(V.CashCheckNo="+Формат(НомерЧека,"ЧН=; ЧГ=0")+")"
	Иначе
		УсловиеКогда = " ((TIME_ST between &TimeStart and &TimeFinish) or (Time_Fin between &TimeStart and &TimeFinish))";
		УсловиеКогда = СтрЗаменить(УсловиеКогда,"&TimeStart",ВремяВСтроку(НачалоПериода));
		УсловиеКогда = СтрЗаменить(УсловиеКогда,"&TimeFinish",ВремяВСтроку(КонецПериода));
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&When",УсловиеКогда);
	
	УсловиеТип = ?(ТипВидео=0,"","And (V.Type_video="+Формат(ТипВидео,"ЧН=; ЧГ=0")+")");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&Type",УсловиеТип);
	
	Если НомерКассы>0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&Where","And (V.CashID="+Формат(НомерКассы,"ЧН=; ЧГ=0")+") ");
	ИначеЕсли НомерМагазина>0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&Where","And (V.ShopNo="+Формат(НомерМагазина,"ЧН=; ЧГ=0")+") ");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&Where","");
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"left outer join [IzbenkaFin].[dbo].[_Reference42] TT (nolock)
	|on V.ShopNo=TT._Fld2756","");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса," ,CAST(master.dbo.Binary2UID(TT._IdRRef) as nvarchar(36)) as RefTT","");
	
	Если ЗначениеЗаполнено(КассирОтбор) Тогда
		КассирКод =	Формат(Число(КодСправочника(КассирОтбор)),"ЧГ=");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&kassir"," and (V.[CashierID] = "+КассирКод+" or Ch.CashierId = "+КассирКод+" )");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&kassir","");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОбъектНаблюдения) Тогда
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"left outer join [IzbenkaFin].[dbo].[_Reference42] TT (nolock)
		|on V.ShopNo=TT._Fld2756","");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса," ,CAST(master.dbo.Binary2UID(TT._IdRRef) as nvarchar(36)) as RefTT","");
	
		УсловиеОтбораПокамерам = " And (";
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.IDКамеры.IDКамеры КАК  IDКамеры
		|ИЗ
		|	РегистрСведений.АК_ПривязкаКамерыКОбъектуНаблюдения.СрезПоследних(&ДатаСреза, ОбъектНаблюдения = &ОбъектНаблюдения) КАК АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних";
		
		Запрос.УстановитьПараметр("ДатаСреза", Дата);
		Запрос.УстановитьПараметр("ОбъектНаблюдения", ОбъектНаблюдения);
		
		РезЗапроса = Запрос.Выполнить() ;
		ВыборкаКамеры = РезЗапроса.Выбрать();
		
		Если ВыборкаКамеры.Следующий() Тогда
			
			УсловиеОтбораПокамерам = УсловиеОтбораПокамерам + "V.[ip_camera]='" + ВыборкаКамеры.IDКамеры+"'";
		Иначе
			УсловиеОтбораПокамерам = УсловиеОтбораПокамерам + "V.[ip_camera]='Пусто'";
		КонецЕсли;
		
		
		Пока ВыборкаКамеры.Следующий() Цикл
			
			УсловиеОтбораПокамерам = УсловиеОтбораПокамерам + " or V.[ip_camera]='" + ВыборкаКамеры.IDКамеры+"'";

					
		КонецЦикла;
		
		
		УсловиеОтбораПокамерам = УсловиеОтбораПокамерам+")";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&Ipcamera",УсловиеОтбораПокамерам);

	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&Ipcamera","");
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтруктурныеЕдиницы.НомерТочки,
	|	ЕСТЬNULL(ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.Пустаяссылка)) КАК ЦФО,
	|	СтруктурныеЕдиницы.Ссылка КАК СтруктурнаяЕдиница
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&ПериодСреза, ) КАК ЦФОСтруктурныхЕдиницСрезПоследних
	|		ПО (ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница = СтруктурныеЕдиницы.Ссылка)";
	Запрос.УстановитьПараметр("ПериодСреза",КонецПериода);
	тзСтруктурныеЕдиницы = Запрос.Выполнить().Выгрузить();
	тзСтруктурныеЕдиницы.Индексы.Добавить("НомерТочки");
	
	ФизЛица = Новый Массив;
	
	rs = ADOСоединение.Execute(ТекстЗапроса);
	Попытка
       rs.MoveFirst();
       
	   Пока НЕ rs.EOF() Цикл
		   		   
		   НоваяСтрока = Записи.Add();
		   
		   НоваяСтрока.ФотоВидео = ?(rs.Fields("is_photo").Value=1 или rs.Fields("is_photo").Value=2,"Фото","Видео");

		   НоваяСтрока.ID_Камеры = rs.Fields("ip_camera").Value;		   
		   Если    НоваяСтрока.ФотоВидео = "Фото" 
		   //+++ AK suvv 2018.10.15 ИП-00020130
		   и ЗначениеЗаполнено(rs.Fields("flinkdownload").Value)
		   //--- AK suvv
		   Тогда
			   НоваяСтрока.Путь = rs.Fields("flinkdownload").Value;
			   НоваяСтрока.ПутьДляПросмотра = rs.Fields("flinkview").Value;
			   НоваяСтрока.Начало = rs.Fields("time_photo").Value;		      
		   Иначе		
			   НоваяСтрока.Начало = rs.Fields("Time_St").Value;
			   НоваяСтрока.Окончание = rs.Fields("Time_Fin").Value;			   
			   НоваяСтрока.Путь = rs.Fields("Link_Download").Value;
			   НоваяСтрока.ПутьДляПросмотра = rs.Fields("Link_View").Value;
		   КонецЕсли;
		   НоваяСтрока.ИД = rs.Fields("ID").Value;
		   НоваяСтрока.НомерЧека = rs.Fields("CashCheckNo").Value;
		   НоваяСтрока.Касса = rs.Fields("CashId").Value;
		   НоваяСтрока.Тип = rs.Fields("Type_video").Value;
		   НоваяСтрока.ТипВидео = СокрЛП(rs.Fields("Type_str").Value);
		   НоваяСтрока.НомерТТ = rs.Fields("ShopNo").Value;
		   //НоваяСтрока.Кассир = rs.Fields("FIO").Value;
		   Если rs.Fields("CashierID").Value <> null Тогда 
			   Если Формат(rs.Fields("CashierID").Value,"ЧЦ=10; ЧВН=; ЧГ=") <> "" Тогда  
				   НоваяСтрока.Кассир = Формат(rs.Fields("CashierID").Value,"ЧЦ=10; ЧВН=; ЧГ=");
				   ФизЛица.Добавить(Формат(rs.Fields("CashierID").Value,"ЧЦ=10; ЧВН=; ЧГ="));
			   КонецЕсли;
		   Иначе 
			   Если Формат(rs.Fields("CashierId2").Value,"ЧЦ=10; ЧВН=; ЧГ=") <> "" Тогда  
				   НоваяСтрока.Кассир = Формат(rs.Fields("CashierId2").Value,"ЧЦ=10; ЧВН=; ЧГ=");
				   ФизЛица.Добавить(Формат(rs.Fields("CashierId2").Value,"ЧЦ=10; ЧВН=; ЧГ="));
			   КонецЕсли;
		   КонецЕсли;

		   НоваяСтрока.Лаг = rs.Fields("lag_cash").Value;

		   //+++АК mika ИП-00016281 Дата: 2017.08.03
		   НоваяСтрока.НомерКарты = rs.Fields("BONUSCARD").Value;
		   //---АК
		   
		   //mika Дата: 2017.09.08
		   //НоваяСтрока.ТекстКВидео = СокрЛП(rs.Fields("text_video").Value)+"; "+СокрЛП(rs.Fields("periods_text").Value);
		   Префикс = "";
		   Префикс = Префикс + ?(ЗначениеЗаполнено(НоваяСтрока.Кассир), Строка(НоваяСтрока.Кассир) + "; ","") +
		   					   ?(ЗначениеЗаполнено(НоваяСтрока.НомерКарты), Строка(НоваяСтрока.НомерКарты) + "; ","");
							   
		   НоваяСтрока.ТекстКВидео = Префикс + СокрЛП(rs.Fields("text_video").Value)+"; " + СокрЛП(rs.Fields("periods_text").Value);
		   //mika

		   //Попытка
		   //	НоваяСтрока.ТТ = Справочники.СтруктурныеЕдиницы.ПолучитьСсылку(Новый УникальныйИдентификатор(rs.Fields("RefTT").Value));
		   //Исключение
		   //КонецПопытки;
		   
		   
		   Если ЗначениеЗаполнено(НоваяСтрока.НомерТТ) Тогда 
			   НайденнаяСтрока = тзСтруктурныеЕдиницы.Найти(НоваяСтрока.НомерТТ,"НомерТочки");   
			   Если НайденнаяСтрока<>Неопределено Тогда 
				   НоваяСтрока.ЦФО = НайденнаяСтрока.ЦФО; 
				   НоваяСтрока.ТТ = НайденнаяСтрока.СтруктурнаяЕдиница; 
			   КонецЕсли;			 			   			   
		   КонецЕсли;
		   НоваяСтрока.ИдентификаторСтроки = НоваяСтрока.ПолучитьИдентификатор();
		   //НоваяСтрока.ДанныеЧека = Строка(НоваяСтрока.ТТ)+" №кассы: "+Строка(НоваяСтрока.Касса)+", "+НоваяСтрока.Кассир+", ЧЕК: "+НоваяСтрока.НомерЧека;
	
		   rs.MoveNext();
       КонецЦикла;
	   
   Исключение
	   Сообщить("Нет записей по кассе за период");
	   ADOСоединение.Close();
	   Возврат
   КонецПопытки;
   ADOСоединение.Close();
   
	//Если Записи.Количество()>0 Тогда
	//	АктивнаяЗапись = Записи[0].ПолучитьИдентификатор();		   
	//КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФизическиеЛица.Код,
	|	ФизическиеЛица.Ссылка,
	|	ФизическиеЛица.НаименованиеПолное,
	|	ФизическиеЛица.Наименование
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Код В(&Код)";
	
	Запрос.УстановитьПараметр("Код", ФизЛица);
	
	РезультатФЛ = Запрос.Выполнить().Выгрузить();
	РезультатФЛ.Индексы.Добавить("Код");
	Для каждого Стр Из Записи Цикл
		РезПоиска = РезультатФЛ.Найти(Стр.Кассир,"Код");
		Если РезПоиска <> Неопределено Тогда 
			Стр.КассирФЛ = РезПоиска.Ссылка  ;
			Стр.ДанныеЧека = Строка(Стр.ТТ)+" №кассы: "+Строка(Стр.Касса)+", "+РезПоиска.Наименование+", ЧЕК: "+Стр.НомерЧека;
		Иначе
			Стр.ДанныеЧека = Строка(Стр.ТТ)+" №кассы: "+Строка(Стр.Касса)+", ЧЕК: "+Стр.НомерЧека;	 
		КонецЕсли;
		
	КонецЦикла;


	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.ОбъектНаблюдения,
	|	АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.IDКамеры.IDКамеры КАК IDКамеры,
	|	АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.ОбъектНаблюдения.Наименование
	|ИЗ
	|	РегистрСведений.АК_ПривязкаКамерыКОбъектуНаблюдения.СрезПоследних(&Дата, ) КАК АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних
	|ГДЕ
	|	АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.ОбъектНаблюдения <> НЕОПРЕДЕЛЕНО
	|	И АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.IDКамеры.IDКамеры <> """"
	|	И (АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.ДатаПо >= &Дата
	|			ИЛИ АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.ДатаПо = &ПустаяДата)";
	
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ПустаяДата", Дата("00010101000000"));
	
	Результат = Запрос.Выполнить().Выгрузить();
	Результат.Индексы.Добавить("IDКамеры");
	Для каждого Стр Из Записи Цикл
		Если ЗначениеЗаполнено(Стр.ID_Камеры) Тогда
			Отбор = Новый Структура();
			Отбор.Вставить("IDКамеры",СокрЛП(Стр.ID_Камеры));
			РезПоиска = Результат.НайтиСтроки( Отбор);
			РакурсыПоКамере = "";
			Для каждого СтрРакурсы Из РезПоиска Цикл
			     РакурсыПоКамере = РакурсыПоКамере + СтрРакурсы.ОбъектНаблюденияНаименование+"; ";
			 КонецЦикла;
			 Стр.Ракурс =  РакурсыПоКамере;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Функция КодСправочника(КодСпр)

	
 Возврат КодСпр.Код ;
КонецФункции // ()


&НаКлиенте
Процедура НайтиЗаписиЗаПериод(Команда)
	НайтиЗаписиНаСервере();
	//ЗапускВидео(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЗапускВидео(Команда)
	
	Если Записи.НайтиПоИдентификатору(АктивнаяЗапись).ФотоВидео = "Фото" Тогда 
		ПутьКЗаписи = Записи.НайтиПоИдентификатору(АктивнаяЗапись).Путь;
		ПоказФото = "<html>
		|<body>
		|<img  src="""+ПутьКЗаписи+""" width=90%>
		|</body>
		|</html>   ";  
		Элементы.ПоказФото.Видимость= Истина;
		
		Стр = Записи.НайтиПоИдентификатору(АктивнаяЗапись);
		Если ЗначениеЗаполнено(Стр.Путь) Тогда 
			СделатьЗаписьвРегистрПросмотра(Стр.Путь,Стр.Начало,Стр.Окончание,Стр.ТТ,Стр.ТекстКВидео,Стр.ID_Камеры,Стр.ФотоВидео,Стр.Ракурс, Стр.НомерКарты);
		КонецЕсли;
		
	Иначе  
		Попытка
			WMP=Элементы.ПоказВидео.Документ.getElementbyId("WMP").ContentDocument;
			Если АктивнаяЗапись < 0 Тогда
				WMP.URL = ""
			Иначе			
				ПутьКЗаписи = Записи.НайтиПоИдентификатору(АктивнаяЗапись).Путь;
				Стр = Записи.НайтиПоИдентификатору(АктивнаяЗапись);
				Если ЗначениеЗаполнено(ПутьКЗаписи) Тогда 
					СделатьЗаписьвРегистрПросмотра(ПутьКЗаписи,Стр.Начало,Стр.Окончание,Стр.ТТ,Стр.ТекстКВидео,Стр.ID_Камеры,Стр.ФотоВидео,Стр.Ракурс, Стр.НомерКарты);
				КонецЕсли;
			КонецЕсли;
			WMP.URL=ПутьКЗаписи;   
		Исключение
		КонецПопытки;		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СделатьЗаписьвРегистрПросмотра(ПутьКЗаписи,Начало,Окончание,ТТ,ТекстКВидео,ID_Камеры,ФотоВидео,Ракурс, НомерКарты = "")
	
	мзПросмотрВК = РегистрыСведений.АК_ПросмотрВидеоКамер.СоздатьМенеджерЗаписи();
	мзПросмотрВК.ДатаПросмотра = ТекущаяДата();
	мзПросмотрВК.Пользователь = ПараметрыСеанса.ТекущийПользователь;
	мзПросмотрВК.Путь = ПутьКЗаписи;
	мзПросмотрВК.Начало = Начало;
	мзПросмотрВК.Окончание = Окончание;
	мзПросмотрВК.ТТ = ТТ;
	
	//+++АК mika ИП-00016281 Дата: 2017.08.07
	//мзПросмотрВК.ТекстКВидео = ТекстКВидео;
	мзПросмотрВК.ТекстКВидео = ПолучитьТекстКВидео(НомерКарты, ТекстКВидео);	
	//---АК
	
	мзПросмотрВК.ID_Камеры = ID_Камеры;
	мзПросмотрВК.ФотоВидео = ФотоВидео;
	мзПросмотрВК.Ракурс = Ракурс;
	мзПросмотрВК.Записать(Истина);
	
КонецПроцедуры 


&НаСервере
Процедура ПрочитатьЛогиНаСервере(ВыбраннаяСтрока,ПоПериоду=Ложь)
	Логи.Очистить();
	Если АктивнаяЗапись<0 Тогда
		Возврат
	КонецЕсли;
	ТекСтрока = Записи.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если ТекСтрока=Неопределено Тогда
		Возврат
	КонецЕсли;
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("srv-sql04");
	ТекстЗапроса =
	"SELECT f.ACTION , f.DATETIME
 	|FROM [frontol].[dbo].[FrontolLog] f (nolock)
	|where f.CashID = &CashID  and f.DATETIME between 
	|DATEADD(second,&Lag,&time_st) and DATEADD(second,&Lag,&time_fin)
 	|order by id";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&CashID",Формат(ТекСтрока.Касса,"ЧН=; ЧГ=0"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&Lag",Формат(-ТекСтрока.Лаг,"ЧН=; ЧГ=0"));
	Если ПоПериоду Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&time_st",ВремяВСтроку(НачалоПериода));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&time_fin",ВремяВСтроку(КонецПериода));
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&time_st",ВремяВСтроку(НачалоПериода));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&time_fin",ВремяВСтроку(КонецПериода));
		ЛогиНачало = Дата(Год(Дата),Месяц(Дата),День(Дата),Час(ТекСтрока.Начало),Минута(ТекСтрока.Начало),Секунда(ТекСтрока.Начало))-ТекСтрока.Лаг;
		ЛогиКонец = Дата(Год(Дата),Месяц(Дата),День(Дата),Час(ТекСтрока.Окончание),Минута(ТекСтрока.Окончание),Секунда(ТекСтрока.Окончание))-ТекСтрока.Лаг;
	КонецЕсли;
	
	Попытка
		rs = ADOСоединение.Execute(ТекстЗапроса);
       rs.MoveFirst();
       
	   Пока НЕ rs.EOF() Цикл
		   НоваяСтрока = Логи.Add();
		   НоваяСтрока.Datetime = rs.Fields("Datetime").Value;
		   НоваяСтрока.Action = rs.Fields("Action").Value;
		   rs.MoveNext()
	   КонецЦикла;
    Исключение
    	//Сообщить("Не удалось прочитать логи: "+ОписаниеОШИБКИ())
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	АктивнаяЗапись = ВыбраннаяСтрока;
	Если Записи.НайтиПоИдентификатору(АктивнаяЗапись).ФотоВидео = "Фото" Тогда 
		Элементы.ПоказФото.Видимость= Истина;
		Элементы.ПоказВидео.Видимость= Ложь;
	Иначе
		Элементы.ПоказФото.Видимость= Ложь;
		Элементы.ПоказВидео.Видимость= Истина;
	КонецЕсли;
	ЭтаФорма.ОбновитьОтображениеДанных();
	ПодключитьОбработчикОжидания("ЗапускВидео1",0.1,Истина);
	//ЗапускВидео(Неопределено);
	ПрочитатьЛогиНаСервере(ВыбраннаяСтрока);
КонецПроцедуры

 &НаКлиенте
Процедура ЗапускВидео1()
	ЗапускВидео(Неопределено)
КонецПроцедуры



&НаКлиенте
Процедура НайтиПоЧеку(Команда)
	НайтиЗаписиНаСервере(Истина);
//	ЗапускВидео(Неопределено)
КонецПроцедуры

&НаКлиенте
Функция ПараметрыЗапроса(СтрокаЗапроса)
	Результат = Новый Структура("СтрокаСоединения,Запрос");
	Путь = Сред(СтрокаЗапроса,Найти(СтрокаЗапроса,"//")+2);
	ПозРазделителя = Найти(Путь,"/");
	Результат.СтрокаСоединения = Лев(Путь,ПозРазделителя-1);
	Результат.Запрос = Сред(Путь,ПозРАзделителя+1);
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура Скачать(Команда)
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Если Диалог.Выбрать() Тогда
		ИмяКаталога = Диалог.Каталог
	Иначе
		Возврат
	КонецЕсли;
	Для Каждого ИдСтроки из Элементы.Записи.ВыделенныеСтроки Цикл
		ТекЗапись = Записи.НайтиПоИдентификатору(ИдСтроки);
		Если Не ЗначениеЗаполнено(ТекЗапись.Путь)Тогда
			Сообщить("Не указан путь для скачивания записи с ИД: "+Строка(ТекЗапись.ИД)+". Файл не будет загружен");
			Продолжить
		КонецЕсли;
		Попытка
			ДанныеЗапроса = ПараметрыЗапроса(ТекЗапись.Путь);
			Соединение = Новый HTTPСоединение(ДанныеЗапроса.СтрокаСоединения);
			
			Запрос = Новый HTTPЗапрос(ДанныеЗапроса.Запрос);
			Если ТекЗапись.ФотоВидео = "Фото" Тогда   
				ПолученныйФайл= ИмяКаталога+"\"+Формат(ТекЗапись.ИД,"ЧН=;ЧГ=0")+(".jpg");
			Иначе
				ПолученныйФайл= ИмяКаталога+"\"+Формат(ТекЗапись.ИД,"ЧН=;ЧГ=0")+(".mp4"); 
			КонецЕсли;
			Соединение.ОтправитьДляОбработки(Запрос,ПолученныйФайл);
			Сообщить("Записан файл "+ПолученныйФайл);
		Исключение
			Сообщить("Произошла ошибка при загрузке файла для записи с ИД "+Строка(ТекЗапись.ИД));
		КонецПопытки
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Следующий(Команда)
	Если АктивнаяЗапись  = Записи.Количество()-1 Тогда
		Возврат
	КонецЕсли;
	АктивнаяЗапись = АктивнаяЗапись+1;
	ЗапускВидео(Неопределено)
КонецПроцедуры

&НаКлиенте
Процедура Предыдущий(Команда)
	Если АктивнаяЗапись  = 0 Тогда
		Возврат
	КонецЕсли;
	АктивнаяЗапись = АктивнаяЗапись-1;
	ЗапускВидео(Неопределено)
КонецПроцедуры

&НаКлиенте
Процедура ОжиданиеЗапускВидео()Экспорт
	Если ВводДоступен() Тогда
		ЗапускВидео(Неопределено);
		ОтключитьОбработчикОжидания("ОжиданиеЗапускВидео");
		ЭтаФорма.ОбновитьОтображениеДанных();
	Иначе
		ПодключитьОбработчикОжидания("ОжиданиеЗапускВидео",1/5,Истина)
	КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗапускатьПриОткрытии Тогда
		Если Записи.Количество()>0 Тогда
			АктивнаяЗапись = 0;
			ПодключитьОбработчикОжидания("ОжиданиеЗапускВидео",1/5,Истина);
			СкрытьПанельНастроек(Неопределено);
			Элементы.ПанельПоЗапросу.Видимость=Истина;
			Элементы.Записи.ТекущаяСтрока = 0;
			Элементы.Записи.ТекущийЭлемент=Элементы.ЗаписиИД;
			ЗаписиПриАктивизацииСтроки(Неопределено);
		Иначе
			ОповеститьОВыборе(Ложь);
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОбъектНаблюдения) = Ложь Тогда
		ОбъектНаблюдения  = ПредопределенноеЗначение("Справочник.РабочиеМеста.ПустаяСсылка");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.МагазинТек) Тогда
		МагазинОтбор = Объект.МагазинТек;
		Магазин = Объект.МагазинТек;	
		Если ЗначениеЗаполнено(Магазин) Тогда 
			НомерМагазина = НомерМагазинаПоСсылке(Магазин);
		Иначе
			НомерМагазина = 0;
		КонецЕсли;
		Элементы.МагазинОтбор.ТолькоПросмотр = Истина;
		Элементы.Магазин.ТолькоПросмотр = Истина;	
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МагазинОтбор) Тогда 
		Команда1();	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаписиПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элементы.Записи.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ДанныеЗаписи = ТекущиеДанные.ДанныеЧека;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Просмотрено(Команда)
	ОповеститьОВыборе(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЛоги(Команда)
	ПрочитатьЛогиНаСервере(АктивнаяЗапись,Истина)
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьВидео(Команда)
	П = Новый Структура("МагазинТек");
	П.МагазинТек = Объект.МагазинТек;	
		
	ОткрытьФорму("Обработка.АК_ПросмотрУправлениеВидеоКамерами.Форма.ФормаЗапросВидео",Новый Структура("Значения",П),ЭтаФорма);		
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьВидеоПоЗаписи(Команда)
	ТекЗапись = Элементы.Записи.ТекущиеДанные;
	Если ТекЗапись=Неопределено Тогда
		Возврат
	КонецЕсли;
	П = Новый Структура("НомерЧека,НомерКассы,Начало,Окончание,ТипЗапроса,МагазинТек");
	ЗаполнитьЗНаченияСвойств(П,ТекЗапись);
	П.Начало = Дата(Год(ТекЗапись.Начало),Месяц(ТекЗапись.Начало),День(ТекЗапись.Начало),Час(ТекЗапись.Начало),Минута(ТекЗапись.Начало),Секунда(ТекЗапись.Начало));
	П.Окончание = Дата(Год(ТекЗапись.Начало),Месяц(ТекЗапись.Начало),День(ТекЗапись.Начало),Час(ТекЗапись.Окончание),Минута(ТекЗапись.Окончание),Секунда(ТекЗапись.Окончание));
	П.НомерКассы = ТекЗапись.Касса;	
	П.ТипЗапроса = ТекЗапись.ФотоВидео;	
	П.Вставить("НомерМагазина",ТекЗапись.НомерТТ);
	П.Вставить("ID_Камеры",ТекЗапись.ID_Камеры);
	П.МагазинТек = Объект.МагазинТек;	
	
	ОткрытьФорму("Обработка.АК_ПросмотрУправлениеВидеоКамерами.Форма.ФормаЗапросВидео",Новый Структура("Значения",П),ЭтаФорма);	
КонецПроцедуры

&НаСервере
Функция СоставЧекаНаСервере(ВыбраннаяСтрока)
	ТекСтрока = Записи.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ADO = ВнешниеДанные.ПолучитьADOСоединение();
	ТекстЗапроса =
		"select CashCheckNo NCh
		|,C.BaseSum,C.OpenDate
		|,L.BaseSum LSum
		|,L.CashCheckLineNo ln
		|,L.id_tov_cl
		|,BONUSCARD 
		|,N._Description Tovar
		|,OpenDate
		|,CashId
		|,L.quantity qu, L.BasePrice price
		|from
		|	(select CashCheckNo, CheckUID,CloseDate,BaseSum,OpenDate,BONUSCARD,CashId
		|	from SMS_UNION..Checks (nolock)
		|	where CashCheckNo=&Check and CashId = &CashId)C
		|	inner join Sms_Union..Checkline L (nolock)
		|	on C.CheckUID=L.CheckUID
		|	left join IzbenkaFin.._Reference29 N
		|	on L.id_tov_cl=N._Fld760
		|order by L.CashCheckLineNo";
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&Check",Формат(ТекСтрока.НомерЧека,"ЧН=;ЧГ=0"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"&CashId",Формат(ТекСтрока.Касса,"ЧН=;ЧГ=0"));
	rs = ADO.Execute(ТекстЗапроса);
	Попытка
		rs.MoveFirst();
		ТабДок = Новый ТабличныйДокумент;
		Макет = Обработки.АК_ПросмотрУправлениеВидеоКамерами.ПолучитьМакет("СоставЧека");
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		ОбластьШапка.Параметры.НомерЧека = ТекСтрока.НомерЧека;
		ОбластьШапка.Параметры.Касса = ТекСтрока.Касса;
		ОбластьШапка.Параметры.Дата = rs.Fields("OpenDate").Value;
		ОбластьШапка.Параметры.Сумма = rs.Fields("BaseSum").Value;
		
		ТабДок.Вывести(ОбластьШапка);
		ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
		Info="";
		Пока Не rs.EOF() Цикл
			Info=Строка(rs.Fields("ln").Value)+". "+rs.Fields("Tovar").Value+" "+Строка(rs.Fields("qu").Value)+"*"
			+Формат(rs.Fields("price").Value,"ЧДЦ=2; ЧН=; ЧГ=0")+"р. = "+Формат(rs.Fields("LSum").Value,"ЧДЦ=2; ЧН=;ЧГ=0")+"р.";
			rs.MoveNext();
			ОбластьСтрока.Параметры.СтрокаЧека = Info;
			ТабДок.Вывести(ОбластьСтрока);
		КонецЦикла;
		Возврат ТабДок;
	Исключение
		Сообщить("Не удалось прочитать данные о чеке");
		Возврат Неопределено
	КонецПопытки;
КонецФункции

&НаКлиенте
Процедура СоставЧека(Команда)
	ТекСтрока = Элементы.Записи.ТекущиеДанные;
	Если ТекСтрока=Неопределено Тогда
		Возврат
	КонецЕсли;
	ТабДок = СоставЧекаНаСервере(ТекСтрока.ПолучитьИдентификатор());
	Если ТабДок<>Неопределено Тогда
		ТабДок.Показать("Чек №"+Формат(ТекСтрока.НомерЧека,"ЧГ=0"));
		ТабДок.ТолькоПросмотр = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура МагазинОтборПриИзменении(Элемент)
	
	Команда1();	
	
КонецПроцедуры

&НаСервере
Процедура Команда1()
	МагазинОтборНеПустой = ЗначениеЗаполнено(МагазинОтбор);
	
	НачалоHTML = "<html>
	|<body>
	|<span>
	|<table  border=""1"" cellpadding=""0"" bordercolor=#9696FF cellspacing=""0"" width=""100%"">";
	
	КонецHTML = "</table></span><p></p>
	|</body>
	|</html>";
	   	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.Магазин КАК Магазин,
	|	АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.ОбъектНаблюдения КАК ОбъектНаблюдения,
	|	АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.IDКамеры КАК СсылкаIDКамеры,
	|	АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.Период КАК ДатаИзменения,
	|	АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.АктивностьЗаписи,
	|	АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.Магазин.Наименование,
	|	АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.ОбъектНаблюдения.Наименование,
	|	АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.IDКамеры.Наименование КАК IDКамерыНаименование,
	|	АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.IDКамеры.IDКамеры КАК IDКамеры,
	|	АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.ДатаПо
	|ИЗ
	|	РегистрСведений.АК_ПривязкаКамерыКОбъектуНаблюдения.СрезПоследних(&Дата, ) КАК АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних
	|ГДЕ
	|	ИСТИНА
	|	И АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.Магазин = &Магазин
	|	//И АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.ОбъектНаблюдения <> НЕОПРЕДЕЛЕНО
	|	И (АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.ДатаПо >= &Дата ИЛИ АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.ДатаПо = &ДатаПустая )
	|
	|УПОРЯДОЧИТЬ ПО
	|	Магазин,
	|	IDКамерыНаименование,
	|	ОбъектНаблюдения
	|ИТОГИ ПО
	|	СсылкаIDКамеры";
	
	Запрос.УстановитьПараметр("Дата",ТекущаяДата());	
		Запрос.УстановитьПараметр("ДатаПустая",Дата("00010101000000"));	

	Если ЗначениеЗаполнено(МагазинОтбор) Тогда 
		Запрос.УстановитьПараметр("Магазин",МагазинОтбор);	
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И АК_ПривязкаКамерыКОбъектуНаблюденияСрезПоследних.Магазин = &Магазин","");
	КонецЕсли;
	Результат = Запрос.Выполнить();
	
	ВыборкаКамеры = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Таблица = "";
	Столбец = 1;
	Пока ВыборкаКамеры.Следующий() и МагазинОтборНеПустой Цикл
		СтрТаблица = "";
		
		ВыборкаДетальныеЗаписи = ВыборкаКамеры.Выбрать();
		
		МагазинНаименование = "";
		//IDКамерыНаименование = "";
		Если Столбец = 1 Тогда 
			СтрТаблица =	" 		
			|<tr>" 
		КонецЕсли;
		
		
		СтрТаблица = СтрТаблица+ " 
		|<td  valign=""center"" align = ""center"" width = ""40%"">
		//+++АК ЛЕБВ |   <img name = ""SelectVideo"" idcamera=""&idcamera"" src=""http://10.0.0.190/photos/&IDКамеры"" wigth=""100"" height=""150"" > </br>
		|   <img name = ""SelectVideo"" idcamera=""&idcamera"" src=""\\10.0.0.51\1c$\MagazinBudush\Work\&IDКамеры.jpg"" wigth=""100"" height=""150"" > </br>
		//---АК ЛЕБВ
		|
		|<span style = ""font-size:18; font-weight: bold; color: #9696FF""> Магазин: &МагазинНазвание </span>&nbsp;&nbsp;&nbsp;</span>  </br>
		|<span style = ""font-size:14; color: #2D84C4"">Объекты наблюдения: </span>&nbsp;&nbsp;	";
		СтрТаблицаРакурс = "";   
		ПервыйЦикл = Истина;
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ПервыйЦикл и ВыборкаДетальныеЗаписи.ОбъектНаблюдения <> Неопределено Тогда 
				ID = ""+ВыборкаДетальныеЗаписи.Магазин.УникальныйИдентификатор()+"_"+ВыборкаДетальныеЗаписи.СсылкаIDКамеры.УникальныйИдентификатор()+"_"+"Неопределено";
				СтрТаблицаРакурс =  СтрТаблицаРакурс+ "<a name = ""SetRakurs"" id = ""&_ID"" style = ""font-size:12; font-weight: bold; color: #3232FF"" href = """">Добавить значение</a>, ";
				СтрТаблицаРакурс = СтрЗаменить(СтрТаблицаРакурс,"&_ID",ID);					
								//СтрТаблицаРакурс = "";  
			КонецЕсли;
			ПервыйЦикл = Ложь;
			ID = ?(ТипЗнч(ВыборкаДетальныеЗаписи.ОбъектНаблюдения) = Тип("СправочникСсылка.РабочиеМеста"),"РабочиеМеста","")+ВыборкаДетальныеЗаписи.Магазин.УникальныйИдентификатор()+"_"+ВыборкаДетальныеЗаписи.СсылкаIDКамеры.УникальныйИдентификатор()+"_"+?(Не ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ОбъектНаблюдения),"Неопределено",ВыборкаДетальныеЗаписи.ОбъектНаблюдения.УникальныйИдентификатор());
			
			СтрТаблицаРакурс =  СтрТаблицаРакурс+ "<a name = ""SetRakurs"" id = ""&ID"" style = ""font-size:12; font-weight: bold; color: #3232FF"" href = """">&РакурсКамеры</a>, ";
			СтрТаблицаРакурс = СтрЗаменить(СтрТаблицаРакурс,"&ID",ID);	
			СтрТаблицаРакурс = СтрЗаменить(СтрТаблицаРакурс,"&РакурсКамеры",?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ОбъектНаблюденияНаименование),ВыборкаДетальныеЗаписи.ОбъектНаблюденияНаименование,"Добавить значение"));
			МагазинНаименование = ВыборкаДетальныеЗаписи.МагазинНаименование   ;
			//IDКамерыНаименование = ВыборкаДетальныеЗаписи.IDКамерыНаименование ;
			//IDКамеры = ВыборкаДетальныеЗаписи.IDКамеры;
			Магазин = ВыборкаДетальныеЗаписи.Магазин;
		КонецЦикла;
		
		idcamera = Формат(Магазин.НомерТочки,"ЧГ=")+"_"+ВыборкаКамеры.IDКамеры;
		СтрТаблица = СтрЗаменить(СтрТаблица,"&idcamera",idcamera);	
		СтрТаблица = СтрТаблица+СтрТаблицаРакурс; 

			СтрТаблица =  СтрТаблица+ "</br> &ИДКамеры</br> <a style = ""color:&Color;"" id=&Camera_GUID  name = ""ItsOK"" href="""">&ПризнакОбработано</a>
		| 
		|</td>  ";
		Если Столбец = 2 Тогда 			
			СтрТаблица = СтрТаблица +	" 		
			|</tr>" 
		КонецЕсли;
		Столбец = Столбец +1 ;
		
		Если Столбец = 3 Тогда 
			Столбец = 1; 
		КонецЕсли;
		СтрТаблица = СтрЗаменить(СтрТаблица,"&МагазинНазвание",МагазинНаименование);
		//СтрТаблица = СтрЗаменить(СтрТаблица,"&РакурсКамеры",ВыборкаДетальныеЗаписи.ОбъектНаблюденияНаименование);
		//+++АК ЛЕБВСтрТаблица = СтрЗаменить(СтрТаблица,"&IDКамеры",ВыборкаКамеры.IDКамеры);
		СтрТаблица = СтрЗаменить(СтрТаблица,"&IDКамеры", СтрЗаменить(СокрЛП(ВыборкаКамеры.IDКамеры),".","-"));
		//---АК ЛЕБВ
		СтрТаблица = СтрЗаменить(СтрТаблица,"&ИДКамеры",ВыборкаКамеры.IDКамерыНаименование);  
		
		//+++ZEZA
		Если ВыборкаКамеры.СсылкаIDКамеры.НеНастроеныРакурсы = Истина Тогда
			
			СтрТаблица = СтрЗаменить(СтрТаблица,"&ПризнакОбработано", "Ракурсы не настроены");
			СтрТаблица = СтрЗаменить(СтрТаблица,"&Color", "#B22222");
		Иначе	
			СтрТаблица = СтрЗаменить(СтрТаблица,"&ПризнакОбработано", "Ракурсы настроены");
			СтрТаблица = СтрЗаменить(СтрТаблица,"&Color", "#339966");
		КонецЕсли;	
		
		//
		СтрТаблица = СтрЗаменить(СтрТаблица,"&Camera_GUID", ВыборкаКамеры.СсылкаIDКамеры.УникальныйИдентификатор());
		
		//---ZEZA
		
		//СтрТаблица = СтрЗаменить(СтрТаблица,"&ID",ID);		
		Таблица = Таблица + СтрТаблица;
	КонецЦикла;
	
	Если Столбец = 2 Тогда 			
		СтрТаблица = СтрТаблица +	" 		
		|<td>Пусто</td>" 
	КонецЕсли;

	
	//ДокументHTML = "<html>
	//|<body>
	//|<span>
	//|<table id = ""Rakurs721b15b8-79ce-11e5-8c58-005056a00106"" border=""1"" cellpadding=""0"" bordercolor=#9696FF cellspacing=""0"" width=""100%"">
	//|<tr>    
	//|<td valign=""center"" align = ""center"" width = ""40%"">
	//| 
	//|<span style = ""font-size:18; font-weight: bold; color: #9696FF""> Магазин название</span>&nbsp;&nbsp;&nbsp;<span><span id = ""CurrentState721b15b8-79ce-11e5-8c58-005056a00106"" style = ""font-size:18; font-weight: bold; color: #3232FF""> текст текст</span></span><span><br></span></br>
	//|<span style = ""font-size:14; color: #2D84C4"">Ракурс камеры</span>&nbsp;&nbsp;<a name = ""SetStatus0"" id = ""721b15b8-79ce-11e5-8c58-005056a00106"" style = ""font-size:12; font-weight: bold; color: #3232FF"" href = """">Не обработан</a></br>
	//|Ид камеры</br>
	//| 
	//|</td>
	//|<td valign=""center"" align = ""center"" height = 150 style = ""font-size:24; font-weight: bold; color: #AAAAAA"">
	//|<img src=""http://10.0.0.190/photos/10.3.166.81"" >
	//|</td>
	//|</tr></table>
	//| 
	//|</td></tr></table></span><p></p>
	//|</body>
	//|</html>";
	
	
	ДокументHTML = НачалоHTML+Таблица +КонецHTML;
КонецПроцедуры

&НаКлиенте
Процедура ДокументHTMLПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Команда1Клиент()

Команда1();	

КонецПроцедуры


&НаКлиенте
Процедура ДокументHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Попытка
		Если ДанныеСобытия.Element.name = "SetRakurs" Тогда
			id = СтрЗаменить(ДанныеСобытия.Element.id, "_", Символы.ПС);
			Если Найти(id,"РабочиеМеста") <> 0 Тогда
				Ракурсы = Ложь;
				id = СтрЗаменить(id,"РабочиеМеста","");
			иначе
				Ракурсы = Истина;				
			КонецЕсли;
			СтруктураИзмерений = Новый Структура("Магазин, IDКамеры, ОбъектНаблюдения", СтрПолучитьСтроку(id, 1), СтрПолучитьСтроку(id, 2), СтрПолучитьСтроку(id, 3));
			
			
			УИМагазин = Новый УникальныйИдентификатор(СтруктураИзмерений.Магазин);
			//СсылкаМагазин = Справочники.СтруктурныеЕдиницы.ПолучитьСсылку(УИМагазин);				
			УИIDКамеры = Новый УникальныйИдентификатор(СтруктураИзмерений.IDКамеры);
			//СсылкаIDКамеры = Справочники.АК_ID_Камеры.ПолучитьСсылку(УИIDКамеры);
			
			МагазинИКамера = ПолучитьСсылкиМагазинИкамера(УИМагазин,УИIDКамеры);
			
			//Если СтруктураИзмерений.ОбъектНаблюдения = "Неопределено" Тогда 
			//	СсылкаОбъектНаблюдения = Неопределено;
			//Иначе 
			//Если  Ракурсы Тогда 
			//	УИОбъектНаблюдения = Новый УникальныйИдентификатор(СтруктураИзмерений.ОбъектНаблюдения);
			//	СсылкаОбъектНаблюдения = Справочники.МП_Ракурсы.ПолучитьСсылку(УИОбъектНаблюдения);
			//Иначе
			//	УИОбъектНаблюдения = Новый УникальныйИдентификатор(СтруктураИзмерений.ОбъектНаблюдения);
			//	СсылкаОбъектНаблюдения = Справочники.РабочиеМеста.ПолучитьСсылку(УИОбъектНаблюдения);
			//КонецЕсли;
			//КонецЕсли;
			
			
			//ФормаЗаписи = ПолучитьФорму("РегистрСведений.АК_ПривязкаКамерыКОбъектуНаблюдения.Форма.ФормаЗаписиУпр");
			//ФормаЗаписи.Запись.IDКамеры =  СсылкаIDКамеры;
			//ФормаЗаписи.Запись.Магазин =  СсылкаМагазин;
			//ФормаЗаписи.Запись.АктивностьЗаписи =  Истина;
			//ФормаЗаписи.Запись.ОбъектНаблюдения =  СсылкаОбъектНаблюдения;
			
			//+++ZEZA ФормаСписка = ПолучитьФорму("РегистрСведений.АК_ПривязкаКамерыКОбъектуНаблюдения.Форма.ФормаСпискаУпр");
			//+++ZEZA ФормаСписка.ОтборМагазин  = МагазинИКамера.Магазин;//СсылкаМагазин;
			//+++ZEZA ФормаСписка.ОтборКамера =  МагазинИКамера.Камера;//СсылкаIDКамеры;
			//+++ZEZA ФормаСписка.ОткрытьМодально();
			
			//
			Форма = ПолучитьФорму("Обработка.РаботаСКамерами_РазметкаРакурсов.Форма.Форма1",, ЭтаФорма);
			Форма.ВыбраннаяКамера = МагазинИКамера.Камера;
			Форма.Открыть();
			 
			 //ФормаЗаписи.ОткрытьМодально();
			 
			 
			 ПодключитьОбработчикОжидания("Команда1Клиент",0.1,Истина);	
		 ИначеЕсли ДанныеСобытия.Element.name = "SelectVideo" Тогда
			 idcamera = СтрЗаменить(ДанныеСобытия.Element.idcamera, "_", Символы.ПС);
			 СтруктураИзмерений = Новый Структура("Магазин, IDКамеры", СтрПолучитьСтроку(idcamera, 1), СтрПолучитьСтроку(idcamera, 2));
			 
			 П = Новый Структура();
			 
			 П.Вставить("НомерМагазина",СтруктураИзмерений.Магазин);
			 П.Вставить("ID_Камеры",СтруктураИзмерений.IDКамеры);
			 П.Вставить("Начало",ТекущаяДата());
			 П.Вставить("Окончание",ТекущаяДата());
			 ОткрытьФорму("Обработка.АК_ПросмотрУправлениеВидеоКамерами.Форма.ФормаЗапросВидео",Новый Структура("Значения",П),ЭтаФорма);	
			 
			 
		 ИначеЕсли ДанныеСобытия.Element.name = "ItsOK" Тогда	 
			 
			 //
			 _Результат = ИзменитьПризнакРакурсыНастроены(ДанныеСобытия.Element.id);
			 
			 //
			 Если _Результат = Истина Тогда
				 ДанныеСобытия.Element.outerHTML = "<a style = ""color:#B22222;"" id=" + ДанныеСобытия.Element.id + " name = ""ItsOK"" href="""">Ракурсы не настроены</a>";
				 ДанныеСобытия.Element.innerHTML = "<a style = ""color:#B22222;"" id=" + ДанныеСобытия.Element.id + " name = ""ItsOK"" href="""">Ракурсы не настроены</a>";
			 ИначеЕсли 	_Результат = Ложь Тогда 
				 ДанныеСобытия.Element.outerHTML = "<a style = ""color:#339966;"" id=" + ДанныеСобытия.Element.id + " name = ""ItsOK"" href="""">Ракурсы настроены</a>";
				 ДанныеСобытия.Element.innerHTML = "<a style = ""color:#339966;"" id=" + ДанныеСобытия.Element.id + " name = ""ItsOK"" href="""">Ракурсы настроены</a>";
				
			 КонецЕсли;
			 
		 КонецЕсли;	
	Исключение    
	КонецПопытки;
КонецПроцедуры 

&НаСервере
Функция ПолучитьСсылкиМагазинИкамера (УИМагазин,УИIDКамеры)
	Рез = Новый Структура;
	Рез.Вставить("Магазин", Справочники.СтруктурныеЕдиницы.ПолучитьСсылку(УИМагазин));
	Рез.Вставить("Камера", Справочники.АК_ID_Камеры.ПолучитьСсылку(УИIDКамеры));
	
	Возврат Рез;
КонецФункции

&НаСервере
Функция НомерКассыПоСсылке(сКасса);
	
   Возврат   сКасса.ИД;
КонецФункции // ()

&НаСервере
Функция НомерМагазинаПоСсылке(сМагазин);
	
   Возврат   сМагазин.НомерТочки;
КонецФункции // ()


&НаКлиенте
Процедура МагазинПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Магазин) и ЗначениеЗаполнено(ОбъектНаблюдения) и ТипЗнч(ОбъектНаблюдения) = Тип("СправочникСсылка.РабочиеМеста") и ОбъектНаблюденияСтруктурнаяЕдиница(ОбъектНаблюдения) <> Магазин Тогда 
		ОбъектНаблюдения = ПредопределенноеЗначение("Справочник.РабочиеМеста.ПустаяСсылка");
	КонецЕсли;   
	
	Если ЗначениеЗаполнено(Магазин) Тогда 
		НомерМагазина = НомерМагазинаПоСсылке(Магазин);
	Иначе
		НомерМагазина = 0;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция  ОбъектНаблюденияСтруктурнаяЕдиница (ОбъектНаблюденияСсылка) 
	
Возврат ОбъектНаблюденияСсылка.СтруктурнаяЕдиница;	
КонецФункции


&НаКлиенте
Процедура ОбъектНаблюденияПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Магазин) и ТипЗнч(ОбъектНаблюдения) = Тип("СправочникСсылка.РабочиеМеста") Тогда 
		НомерКассы = НомерКассыПоСсылке(ОбъектНаблюдения);
	Иначе
		НомерКассы = 0;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОбъектНаблюденияАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора =	ОбъектНаблюденияСервер(Текст)

КонецПроцедуры

&НаСервере
Функция ОбъектНаблюденияСервер(Текст)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	МП_Ракурсы.Ссылка
	|ИЗ
	|	Справочник.МП_Ракурсы КАК МП_Ракурсы
	|ГДЕ
	|	МП_Ракурсы.Наименование ПОДОБНО &Наименование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РабочиеМеста.Ссылка
	|ИЗ
	|	Справочник.РабочиеМеста КАК РабочиеМеста
	|ГДЕ
	|	РабочиеМеста.Наименование ПОДОБНО &Наименование
	|	И РабочиеМеста.СтруктурнаяЕдиница = &СтруктурнаяЕдиница";
	
	Запрос.УстановитьПараметр("Наименование", "%" + Текст + "%");
	Если ЗначениеЗаполнено(Магазин) Тогда 
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Магазин);
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"И РабочиеМеста.СтруктурнаяЕдиница = &СтруктурнаяЕдиница","");
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ДанныеВыбора = Новый СписокЗначений;
	
	Пока вЫборка.Следующий() Цикл
		ДанныеВыбора.Добавить(Выборка.Ссылка,Выборка.Ссылка);
	КонецЦикла;
	
	Возврат ДанныеВыбора;
КонецФункции


&НаКлиенте
Процедура ОбъектНаблюденияОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОбъектНаблюдения = ПредопределенноеЗначение("Справочник.РабочиеМеста.ПустаяСсылка");	
КонецПроцедуры


&НаКлиенте
Процедура МагазинОчистка(Элемент, СтандартнаяОбработка)
	Если ТипЗнч(ОбъектНаблюдения) = Тип("СправочникСсылка.РабочиеМеста") Тогда 
		ОбъектНаблюдения = ПредопределенноеЗначение("Справочник.РабочиеМеста.ПустаяСсылка");
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ОбъектНаблюденияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	   ПереопределитьСвязиПараметровВыбораОбъектаНаблюдения();
КонецПроцедуры

&НаСервере
Процедура ПереопределитьСвязиПараметровВыбораОбъектаНаблюдения()
	Если ЗначениеЗаполнено(Магазин) Тогда 
		НовыйМассив = Новый Массив();
		НовыйМассив.Добавить(Новый СвязьПараметраВыбора("Отбор.СтруктурнаяЕдиница",	"Магазин"));
	Иначе
		НовыйМассив = Новый Массив();
	КонецЕсли;
	
	НовыеСвязи = Новый ФиксированныйМассив(НовыйМассив);
	
	Элементы.ОбъектНаблюдения.СвязиПараметровВыбора = НовыеСвязи;
	
КонецПроцедуры // ПереопределитьСвязиПараметровВыбора()


&НаКлиенте
Процедура МагазинНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	 //ПереопределитьСвязиПараметровВыбораОбъектаНаблюдения();
КонецПроцедуры


&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	
	Если  ЗначениеЗаполнено(КонецПериода) = Ложь Тогда
		КонецПериода = КонецДня(НачалоПериода);	
	КонецЕсли;
	Если  НачалоПериода> КонецПериода Тогда
		КонецПериода = КонецДня(НачалоПериода);	
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	
	Если КонецПериода = НачалоДня(КонецПериода) Тогда
		КонецПериода = КонецДня(КонецПериода);
	КонецЕсли;
	
	Если  ЗначениеЗаполнено(НачалоПериода) = Ложь Тогда
		НачалоПериода = НачалоДня(НачалоПериода);	
	КонецЕсли;
	Если  НачалоПериода> КонецПериода Тогда
		НачалоПериода = НачалоДня(КонецПериода);	
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура Группа9ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница.Заголовок = "Привязка камер" Тогда 
		МагазинОтборПриИзменении("");
	Иначе 
		МагазинПриИзменении("");
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ЖурналПросмотровВидеоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	АктивнаяЗапись = ВыбраннаяСтрока;
	Если ИсторияПросмотровВидео.НайтиПоИдентификатору(АктивнаяЗапись).ФотоВидео = "Фото" Тогда 
		Элементы.ПоказФото.Видимость= Истина;
		Элементы.ПоказВидео.Видимость= Ложь;
	Иначе
		Элементы.ПоказФото.Видимость= Ложь;
		Элементы.ПоказВидео.Видимость= Истина;
	КонецЕсли;
	
	ЭтаФорма.ОбновитьОтображениеДанных();
	ПодключитьОбработчикОжидания("ЗапускВидеоИзЖурнала",0.1,Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапускВидеоИзЖурнала()
	       
	Если Элементы.ИсторияПросмотровВидео.ТекущиеДанные.ФотоВидео = "Фото" Тогда 
		ПутьКЗаписи = Элементы.ИсторияПросмотровВидео.ТекущиеДанные.Путь;
		ПоказФото = "<html>
		|<body>
		|<img  src="""+ПутьКЗаписи+""" width=90%>
		|</body>
		|</html>   ";  
		Элементы.ПоказФото.Видимость= Истина;
	Иначе  
		Попытка
			WMP=Элементы.ПоказВидео.Документ.getElementbyId("WMP").ContentDocument;
			//Если АктивнаяЗапись < 0 Тогда
			//	WMP.URL = ""
			//Иначе			
				ПутьКЗаписи = Элементы.ИсторияПросмотровВидео.ТекущиеДанные.Путь;
			//КонецЕсли;
			WMP.URL=ПутьКЗаписи;   
		Исключение
		КонецПопытки;		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура Группа6ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если ТекущаяСтраница = "СтраницаИсторияПросмотровВидео" Тогда 
		Элементы.ПоказФото.Видимость= Ложь;
		Элементы.ПоказВидео.Видимость= Истина;
	ИНаче			
		Элементы.ПоказФото.Видимость= Истина;
		Элементы.ПоказВидео.Видимость= Ложь;		
	КонецЕсли;

	
КонецПроцедуры


&НаКлиенте
Процедура ИсторияПросмотровВидеоВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	
КонецПроцедуры


&НаКлиенте
Процедура ИсторияПросмотровВидеоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	  
	Если Элементы.ИсторияПросмотровВидео.ТекущиеДанные.ФотоВидео = "Фото" Тогда 
		Элементы.ПоказФото.Видимость= Истина;
		Элементы.ПоказВидео.Видимость= Ложь;
	Иначе
		Элементы.ПоказФото.Видимость= Ложь;
		Элементы.ПоказВидео.Видимость= Истина;
	КонецЕсли;
	
	ЭтаФорма.ОбновитьОтображениеДанных();
	ПодключитьОбработчикОжидания("ЗапускВидеоИзЖурнала",0.1,Истина);

КонецПроцедуры

&НаСервере
Функция ИзменитьПризнакРакурсыНастроены(idКамеры)
	
	//
	Результат = Неопределено;
	
	//
	Попытка
		
		//
		Ссылка = Справочники.АК_ID_Камеры.ПолучитьСсылку(Новый УникальныйИдентификатор(idКамеры));	
		
		//
		ВсеОК = ПолныеПрава.ИзменитьРеквизитОбъекта(Ссылка, "НеНастроеныРакурсы", НЕ Ссылка.НеНастроеныРакурсы);
		Если ВсеОК Тогда
			Результат = Ссылка.НеНастроеныРакурсы;
		КонецЕсли;	
		
	Исключение
	КонецПопытки;	
	
	//
	Возврат Результат;
	
КонецФункции	
 
//+++АК mika Дата: 2017.08.07
&НаСервереБезКонтекста
Функция ПолучитьТекстКВидео(НомерКарты, ТекстКВидео)
	
	Возврат "" + СокрЛП(ПараметрыСеанса.ТекущийПользователь.Код) + 
			?(ЗначениеЗаполнено(НомерКарты), "; " + НомерКарты, "") +
				?(СтрДлина(СокрЛП(ТекстКВидео))>1, "; " + ТекстКВидео, ТекстКВидео)  
КонецФункции
//---АК