
Функция ЭтоПомощникУправляющего()
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Запрос.УстановитьПараметр("Сотрудник", ПараметрыСеанса.ТекущийПользователь);
	Запрос.Текст = "ВЫБРАТЬ
	               |	СоответствиеОбъектРольСрезПоследних.Объект
	               |ИЗ
	               |	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ТекущаяДата, ) КАК СоответствиеОбъектРольСрезПоследних
	               |ГДЕ
				   //+++ AK suvv 2018.06.08 ИП-00018376.01
				   //|	СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
				   |	(СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
				   |     ИЛИ СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы))
				   //--- AK suvv
	               |	И СоответствиеОбъектРольСрезПоследних.РольПользователя В
	               |			(ВЫБРАТЬ
	               |				РолиПользователейСоставРоли.Ссылка
	               |			ИЗ
	               |				Справочник.Пользователи КАК Пользователи ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	               |					ПО
	               |						Пользователи.ФизЛицо = РолиПользователейСоставРоли.Сотрудник
	               |			ГДЕ
	               |				Пользователи.Ссылка = &Сотрудник)";
				   
	Результат = Запрос.Выполнить();
	Возврат (НЕ Результат.Пустой()) ИЛИ ПараметрыСеанса.ТекущийПользователь.ПросмотрВсехМагазиновВНовойВкусвилл;
	
КонецФункции

Функция ЭтоУправляющий()
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Запрос.УстановитьПараметр("Сотрудник", ПараметрыСеанса.ТекущийПользователь);
	Запрос.Текст = "ВЫБРАТЬ
	               |	СоответствиеОбъектРольСрезПоследних.Объект
	               |ИЗ
	               |	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ТекущаяДата, ) КАК СоответствиеОбъектРольСрезПоследних
	               |ГДЕ
	               //+++ AK suvv 2018.06.08 ИП-00018376.01
				   //|	СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
				   |	(СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
				   |    ИЛИ СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы))
				   //--- AK suvv
	               |	И СоответствиеОбъектРольСрезПоследних.РольПользователя В
	               |			(ВЫБРАТЬ
	               |				РолиПользователей.Ссылка
	               |			ИЗ
	               |				Справочник.РолиПользователей КАК РолиПользователей
	               |			ГДЕ
	               |				РолиПользователей.Родитель В
	               |					(ВЫБРАТЬ
	               |						РолиПользователейСоставРоли.Ссылка
	               |					ИЗ
	               |						Справочник.Пользователи КАК Пользователи ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	               |							ПО
	               |								Пользователи.ФизЛицо = РолиПользователейСоставРоли.Сотрудник
	               |					ГДЕ
	               |						Пользователи.Ссылка = &Сотрудник))";
				   
	Результат = Запрос.Выполнить();
	Возврат (НЕ Результат.Пустой()) ИЛИ ПараметрыСеанса.ТекущийПользователь.ПросмотрВсехМагазиновВНовойВкусвилл;
	
КонецФункции

Функция ЭкстренныйВызовДоступен()
	
	Возврат ЭтоУправляющий() ИЛИ ЭтоПомощникУправляющего() ИЛИ РольДоступна("ПолныеПрава") ИЛИ РольДоступна("АК_РаботаСГрафикамиПродавцов");
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Сотрудник")Тогда
		Сотрудник = Параметры.Сотрудник;
	КонецЕсли;
	
	Если Параметры.Свойство("ТорговаяТочка")Тогда
		ТорговаяТочка = Параметры.ТорговаяТочка;
	КонецЕсли;
	
	Если Параметры.Свойство("ТекДата")Тогда
		ТекДата = Параметры.ТекДата;
	КонецЕсли;
	
	Если Параметры.Свойство("Тренинг")Тогда
		Тренинг = Параметры.Тренинг;
		ТренингДо = Параметры.Тренинг;
	КонецЕсли;
	
	
	Если Параметры.Свойство("КоличествоЧасов")Тогда
		КоличествоЧасовПочасовика = Параметры.КоличествоЧасов;
	КонецЕсли;
	
	Если Параметры.Свойство("СвойствоСотрудника")Тогда
		СвойствоСотрудника = Параметры.СвойствоСотрудника;
	КонецЕсли;
	
	Если Параметры.Свойство("Отсутствие")Тогда
		Отсутствие = Параметры.Отсутствие;
	КонецЕсли;
	
	Если Параметры.Свойство("ЭкстренныйВызов")Тогда
		ЭкстренныйВызов = Параметры.ЭкстренныйВызов;
	КонецЕсли;
	
	//
	//Если Не ЗначениеЗаполнено(Отсутствие)Тогда
	//	РаботаИлиОтсутствие = 1;
	//	Элементы.ТорговаяТочка.АктивизироватьПоУмолчанию = Истина;
	//Иначе
	//	РаботаИлиОтсутствие = 2;
	//	Элементы.Отсутствие.АктивизироватьПоУмолчанию = Истина;
	//КонецЕсли;
	
	Если  ЗначениеЗаполнено(ТорговаяТочка)Тогда
		РаботаИлиОтсутствие = 1;
		Элементы.ТорговаяТочка.АктивизироватьПоУмолчанию = Истина;
	ИначеЕсли  ЗначениеЗаполнено(Тренинг)Тогда
		РаботаИлиОтсутствие = 3;
		Элементы.Тренинг.АктивизироватьПоУмолчанию = Истина;
	ИначеЕсли  ЗначениеЗаполнено(Отсутствие) Тогда
		РаботаИлиОтсутствие = 2;
		Элементы.Отсутствие.АктивизироватьПоУмолчанию = Истина;
	Иначе
		РаботаИлиОтсутствие = 1;
		Элементы.ТорговаяТочка.АктивизироватьПоУмолчанию = Истина;
	КонецЕсли;
	
	//+++АК mika 2018.02.09 ИП-00016863.02
	Параметры.Свойство("Группа", Группа);
	Параметры.Свойство("ГруппаПомощника", ГруппаПомощника);
	Параметры.Свойство("ВариантПостроения", ВариантПостроения);
	//---АК mika
	//
	УстановитьВидимостьЭлементов();
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	
	Отказ = Ложь;
	Если Не ПроверитьЗаполнение()Тогда
		Отказ = Истина;
	КонецЕсли;
	
	//+++АК MIND 2017.11.21
	Если РаботаИлиОтсутствие = 1
		И НЕ ЗначениеЗаполнено(КоличествоЧасовПочасовика) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указано количество часов",,,, Отказ);
	КонецЕсли;	
	//---АК MIND
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если РаботаИлиОтсутствие = 1 И Не ЗначениеЗаполнено(ТорговаяТочка) Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст= НСтр("ru = 'Не заполнена торговая точка'");
		Сообщение.Поле = "ТорговаяТочка";
		Сообщение.Сообщить();
		Возврат;
		
	КонецЕсли;
	
	Если РаботаИлиОтсутствие = 2 И Не ЗначениеЗаполнено(Отсутствие) Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст= НСтр("ru = 'Не заполнена причина отсутствия'");
		Сообщение.Поле = "Отсутствие";
		Сообщение.Сообщить();
		Возврат;
		
	КонецЕсли;
	
	Если РаботаИлиОтсутствие = 3 И Не ЗначениеЗаполнено(Тренинг) Тогда
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст= НСтр("ru = 'Не заполнен тренинг'");
		Сообщение.Поле = "Тренинг";
		Сообщение.Сообщить();
		Возврат;
		
	КонецЕсли;
	
	//+++ziga 26.10.2017
	Если РаботаИлиОтсутствие=2 или РаботаИлиОтсутствие=1 Тогда 
		Если Не ПолучитьАктивный(Сотрудник) Тогда
		Ответ = Вопрос("Сотрудник "+Строка(Сотрудник)+" не активный, сделать активным?", РежимДиалогаВопрос.ДаНет);
		Если (Ответ = КодВозвратаДиалога.Да) Тогда
			ИзменитьСотрудникаСервер(Сотрудник);
		КонецЕсли;		
		КонецЕсли; 	
	КонецЕсли;
	//---ziga 26.10.2017
	
	СтруктураВозврата = Новый Структура;
	
	СтруктураВозврата.Вставить("Сотрудник"			, Сотрудник);
	СтруктураВозврата.Вставить("ТорговаяТочка"		, ТорговаяТочка);
	СтруктураВозврата.Вставить("Отсутствие"			,Отсутствие);
	
	//+++АК mika 2018.02.09 ИП-00016863.02
	Если ВариантПостроения = 1 Тогда
		СтруктураВозврата.Вставить("ГруппаНовая", Группа);
	КонецЕсли;
	//---АК mika 

	Если ТекДата >= '20171001' Тогда
		СтруктураВозврата.Вставить("КоличествоЧасов"	, КоличествоЧасовПочасовика);	
	Иначе	
		СтруктураВозврата.Вставить("КоличествоЧасов"	, ?(СвойствоСотрудника = 0 И ЗначениеЗаполнено(ТорговаяТочка), КоличествоЧасовПочасовика, 0));	
	КонецЕсли;	
	СтруктураВозврата.Вставить("СвойствоСотрудника"	, СвойствоСотрудника);	
	СтруктураВозврата.Вставить("Тренинг", 	Тренинг);
	СтруктураВозврата.Вставить("ЭкстренныйВызов", 	ЭкстренныйВызов);
	Если ЗначениеЗаполнено(ТренингДо) ИЛИ ЗначениеЗаполнено(Тренинг) Тогда
		ЗаполнитьТренингВФЛ();
	КонецЕсли; 
	
	
	
	Закрыть(СтруктураВозврата);
	
КонецПроцедуры
//+++ziga 30.10.2017
&НаСервере
Процедура ИзменитьСотрудникаСервер(Сотр)
	Сотр=Сотрудник.Получитьобъект();
	Сотр.Активный=Истина;
	Сотр.записать();
КонецПроцедуры
&НаСервере
Функция ПолучитьАктивный(Сотр)
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ФизическиеЛица.Активный
	             |ИЗ
	             |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	             |ГДЕ
	             |	ФизическиеЛица.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка",Сотр);
	Выборка=Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Возврат	Выборка.Активный;	
	КонецЦикла; 	
	
КонецФункции
//---ziga 30.10.2017

Процедура ЗаполнитьТренингВФЛ()
	Если ЗначениеЗаполнено(ТренингДо) И ТренингДо<>Тренинг Тогда
		СпрОб = Сотрудник.ПолучитьОбъект();
		
		НайденнаяСтрока = СпрОб.ПройденныеТренинги.НайтиСтроки(Новый Структура("Тренинг, ДатаПрохождения",ТренингДо,ТекДата));
		Если НайденнаяСтрока.Количество() Тогда
			
			СпрОб.ПройденныеТренинги.Удалить(НайденнаяСтрока[0]);
		КонецЕсли;
		СпрОб.Записать();
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(Тренинг) И ТренингДо<>Тренинг Тогда
		СпрОб = Сотрудник.ПолучитьОбъект();
		
		НайденнаяСтрока = СпрОб.ПройденныеТренинги.НайтиСтроки(Новый Структура("Тренинг, ДатаПрохождения",Тренинг,ТекДата));
		Если Не НайденнаяСтрока.Количество() Тогда
			
			НоваяСтрока = СпрОб.ПройденныеТренинги.Добавить();
			
			НоваяСтрока.Тренинг 		= Тренинг;
			НоваяСтрока.ДатаПрохождения = ТекДата;
			НоваяСтрока.ТренингПройден 	= Истина;

		КонецЕсли;
		СпрОб.Записать();
	КонецЕсли; 
КонецПроцедуры
 


&НаКлиенте
Процедура ТорговаяТочкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыОтбора = Новый Структура("ГоловноеПодразделение", ГруппаТорговыхТочек);
	Результат = ОткрытьФормуМодально("Обработка.ГрафикРаботыПродавцов_ТЗ.Форма.ФормаВыбораСтруктурнойЕдиницы", ПараметрыОтбора);
	Если ЗначениеЗаполнено(Результат)Тогда
		ТорговаяТочка = Результат; 
		ОбновитьГруппуТорговойТочки();//+++АК mika 2018.02.09 ИП-00016863.02
	КонецЕсли;
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура СвойствоСотрудникаПриИзменении(Элемент)
	
	//
	Если СвойствоСотрудника = 1 Тогда
		КоличествоЧасовПочасовика = 0;
		ЭкстренныйВызов = Ложь;
	КонецЕсли;
	
	//
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементов()
	
	//
	Если ТекДата < '20171001' Тогда
		Элементы.КоличествоЧасовПочасовика.Доступность = (СвойствоСотрудника = 0 И ЗначениеЗаполнено(ТорговаяТочка));
	КонецЕсли;	
	Элементы.СвойствоСотрудника.Доступность = (РаботаИлиОтсутствие = 1) И ЗначениеЗаполнено(ТорговаяТочка);
	Элементы.ЭкстренныйВызов.Доступность = ЭкстренныйВызовДоступен();
	Если СвойствоСотрудника = 1 Тогда
		Элементы.ЭкстренныйВызов.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьЭлементов()
	
	//
	//Если ТекДата >= '20171001' Тогда
		Элементы.КоличествоЧасовПочасовика.Видимость = РаботаИлиОтсутствие = 1;
	//КонецЕсли;	
	Элементы.ТорговаяТочка.Видимость = (РаботаИлиОтсутствие = 1);
	Элементы.Отсутствие.Видимость = (РаботаИлиОтсутствие = 2);
	Элементы.Тренинг.Видимость = (РаботаИлиОтсутствие = 3);
	Элементы.ЭкстренныйВызов.Видимость = (РаботаИлиОтсутствие = 1);
	
КонецПроцедуры

&НаКлиенте
Процедура РаботаИлиОтсутствиеПриИзменении(Элемент)
	
	//Если РаботаИлиОтсутствие = 1 Тогда
	//	Отсутствие = ПредопределенноеЗначение("Перечисление.ВидыОтсутствия.ПустаяСсылка");	
	//Иначе
	//	ТорговаяТочка = ПредопределенноеЗначение("Справочник.СтруктурныеЕдиницы.ПустаяСсылка");
	//	СвойствоСотрудника = 0;
	//КонецЕсли;
	
	Если РаботаИлиОтсутствие = 1 Тогда
		Отсутствие = ПредопределенноеЗначение("Перечисление.ВидыОтсутствия.ПустаяСсылка");
		Тренинг= ПредопределенноеЗначение("Справочник.Тренинги.ПустаяСсылка");

	ИначеЕсли РаботаИлиОтсутствие = 3 Тогда
		Отсутствие = ПредопределенноеЗначение("Перечисление.ВидыОтсутствия.ПустаяСсылка");
		ТорговаяТочка = ПредопределенноеЗначение("Справочник.СтруктурныеЕдиницы.ПустаяСсылка");
		СвойствоПродавца = 0;
		ЭкстренныйВызов = Ложь;
	Иначе
		ТорговаяТочка = ПредопределенноеЗначение("Справочник.СтруктурныеЕдиницы.ПустаяСсылка");
		СвойствоПродавца = 0;
		Тренинг= ПредопределенноеЗначение("Справочник.Тренинги.ПустаяСсылка");
		ЭкстренныйВызов = Ложь;
	КонецЕсли;
	
	УстановитьВидимостьЭлементов();
	УстановитьДоступностьЭлементов();
	
	ОбновитьГруппуТорговойТочки(); //+++АК mika 2018.02.09 ИП-00016863.02

КонецПроцедуры

&НаКлиенте
Процедура ТорговаяТочкаПриИзменении(Элемент)
	
	УстановитьДоступностьЭлементов();
	
	//+++АК MIND 2017.11.21 имитируем порядок обхода элементов
	Если РаботаИлиОтсутствие <> 3 Тогда
		ЭтаФорма.ТекущийЭлемент = Элементы.КоличествоЧасовПочасовика;
	КонецЕсли;	
	//---АК MIND
	
	ОбновитьГруппуТорговойТочки();//+++АК mika 2018.02.09 ИП-00016863.02
	  
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	//+++АК MIND 2017.11.21 имитируем порядок обхода элементов
	Если РаботаИлиОтсутствие <> 3 Тогда
		ЭтаФорма.ТекущийЭлемент = Элементы.ТорговаяТочка;
	КонецЕсли;	
	//---АК MIND
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоЧасовПочасовикаПриИзменении(Элемент)
	
	//+++АК MIND 2017.11.21 имитируем порядок обхода элементов
	Если РаботаИлиОтсутствие <> 3 Тогда
		ЭтаФорма.ТекущийЭлемент = Элементы.СохранитьИзменения;
	КонецЕсли;	
	//---АК MIND
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьГруппуТорговойТочки()//+++АК mika 2018.02.09 ИП-00016863.02
	
	//Актуально только для варианта построения "по помощнику"
	Если ЗначениеЗаполнено(ГруппаПомощника) Тогда
		
		Если Элементы.ТорговаяТочка.Видимость Тогда
			Группа = ПолучитьЦФОМагазинаСервер(ТорговаяТочка);
		Иначе
			Группа = ГруппаПомощника;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЦФОМагазинаСервер(СтруктурнаяЕдиница) //+++АК mika 2018.02.09 ИП-00016863.02

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО КАК ЦФО
	|ИЗ
	|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ЦФОСтруктурныхЕдиницСрезПоследних";
	
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.ЦФО;
	КонецЕсли;
	
	Возврат Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	
КонецФункции // ПолучитьЦФОМагазинаСервер()




