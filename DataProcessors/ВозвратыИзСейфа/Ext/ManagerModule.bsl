
Процедура ВыгрузитьВозвратыВБухгалтерию(ДатаНачала, ДатаОкончания, МассивОрганизаций, МассивСтруктурныхЕдиниц) Экспорт
	
	Попытка
		
		Коннектор = Новый COMObject(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Бух() + ".COMConnector");
		// создается объект COM-соединение
		
		Строка = ПолныеПрава.ПолучитьСтрокуПодключения_Бух();
		СоединениеСБазой = Коннектор.Connect(Строка);
	Исключение
		СоединениеСБазой = Неопределено;
		Сообщить("Подключится к базе невозможно! " + Символы.ПС + Строка(ОписаниеОшибки()));
		Возврат;
	КонецПопытки;
	
	РозничныйПокупательБух 		= СоединениеСБазой.Справочники.Контрагенты.НайтиПоКоду("000001178");
	Счет50_01 					= СоединениеСБазой.ПланыСчетов.Хозрасчетный.КассаОрганизации;
	Счет57_03 					= СоединениеСБазой.ПланыСчетов.Хозрасчетный.ПродажиПоПлатежнымКартам;
	Счет62_Р 					= СоединениеСБазой.ПланыСчетов.Хозрасчетный.РасчетыСРозничнымиПокупателями;
	Счет68_02 					= СоединениеСБазой.ПланыСчетов.Хозрасчетный.НДС;
	СкладВозврата 				= СоединениеСБазой.Справочники.Склады.НайтиПоНаименованию("СКЛАД брака (для возвратов)");
	ВидОперации 				= СоединениеСБазой.Перечисления.ВидыОперацийВозвратТоваровОтПокупателя.ПродажаКомиссия;
	СвойствоЗагруженаПоЧекам 	= СоединениеСБазой.ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Реализация загружена по чекам");
	СпособЗаполненияЦен 		= СоединениеСБазой.Перечисления.СпособыЗаполненияЦен.ПоЦенамНоменклатуры;
	ВсеТовары 					= СоединениеСБазой.Справочники.Номенклатура.НайтиПоКоду("1-000065893");
	СтатьяДДСБух 				= СоединениеСБазой.Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("901039");//НайтиПоНаименованию("Поступление от покупателей");
	
	ОргСП 		= Справочники.Организации.НайтиПоРеквизиту("ИНН", "7731626420");
	ОргВкусвилл = Справочники.Организации.НайтиПоРеквизиту("ИНН", "7734675810");
	
	ТаблицаВозвратов = Новый ТаблицаЗначений();
	ТаблицаВозвратов.Колонки.Добавить("Возврат");
	ТаблицаВозвратов.Колонки.Добавить("РКО");
	ТаблицаВозвратов.Колонки.Добавить("ОтражениеНДС");
	ТаблицаВозвратов.Колонки.Добавить("Дата");
	ТаблицаВозвратов.Колонки.Добавить("НомерТочки");
	
	ЗапросПодкл = СоединениеСБазой.NewObject("Запрос");
	ЗапросПодкл.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНачала));
	ЗапросПодкл.УстановитьПараметр("ДатаКон", КонецДня(ДатаОкончания));
	ЗапросПодкл.УстановитьПараметр("СвойствоЗагруженПоВозврату"	, СоединениеСБазой.ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Загружен по возврату из сейфа"));
	ЗапросПодкл.УстановитьПараметр("СвойствоНомерТТ"			, СоединениеСБазой.ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Номер точки в финансах"));
	ЗапросПодкл.Текст =
	"ВЫБРАТЬ
	|	ВозвратТоваровОтПокупателя.Ссылка,
	|	РасходныйКассовыйОрдер.Ссылка КАК РКО,
	|	ОтражениеНДСКВычету.Ссылка КАК ОтражениеНДС,
	|	НАЧАЛОПЕРИОДА(ВозвратТоваровОтПокупателя.Дата, ДЕНЬ) КАК Дата,
	|	ЗначенияСвойствОбъектовНомерТТ.Значение КАК НомерТочки
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектовЗагруженПоВозврату
	|		ПО ВозвратТоваровОтПокупателя.Ссылка = ЗначенияСвойствОбъектовЗагруженПоВозврату.Объект
	|			И (ЗначенияСвойствОбъектовЗагруженПоВозврату.Свойство = &СвойствоЗагруженПоВозврату)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектовНомерТТ
	|		ПО ВозвратТоваровОтПокупателя.Ссылка = ЗначенияСвойствОбъектовНомерТТ.Объект
	|			И (ЗначенияСвойствОбъектовНомерТТ.Свойство = &СвойствоНомерТТ)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|		ПО ВозвратТоваровОтПокупателя.Ссылка = РасходныйКассовыйОрдер.ДокументОснование
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтражениеНДСКВычету КАК ОтражениеНДСКВычету
	|		ПО ВозвратТоваровОтПокупателя.Ссылка = ОтражениеНДСКВычету.РасчетныйДокумент
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.ПометкаУдаления = ЛОЖЬ
	|	И ВозвратТоваровОтПокупателя.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ЗначенияСвойствОбъектовЗагруженПоВозврату.Значение = ИСТИНА";
						
	Выборка = ЗапросПодкл.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДоб = ТаблицаВозвратов.Добавить();
		СтрокаДоб.Возврат 		= Выборка.Ссылка;
		СтрокаДоб.РКО 			= Выборка.РКО;
		СтрокаДоб.ОтражениеНДС 	= Выборка.ОтражениеНДС;
		СтрокаДоб.Дата 			= Выборка.Дата;
		СтрокаДоб.НомерТочки 	= Выборка.НомерТочки;
	КонецЦикла;
	
	ЗапросПодкл = СоединениеСБазой.NewObject("Запрос");
	ЗапросПодкл.Текст =
	"ВЫБРАТЬ
	|	Организации.Ссылка,
	|	Организации.ИНН,
	|	ДоговорыКонтрагентов.Ссылка КАК ДоговорРозничныйПокупатель
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО Организации.Ссылка = ДоговорыКонтрагентов.Организация
	|ГДЕ
	|	Организации.ПометкаУдаления = ЛОЖЬ
	|	И ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ
	|	И ДоговорыКонтрагентов.Владелец = &Контрагент
	|	И ДоговорыКонтрагентов.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)";
						
	РозничныйПокупательБух = СоединениеСБазой.Справочники.Контрагенты.НайтиПоКоду("000001178");
	ЗапросПодкл.УстановитьПараметр("Контрагент", РозничныйПокупательБух);
	
	ТабОрганизацииБух = ЗапросПодкл.Выполнить().Выгрузить();
	
	ЗапросПодкл = СоединениеСБазой.NewObject("Запрос");
	ЗапросПодкл.Текст =
	"ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	Номенклатура.ИД
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура";
	ТабТовары = ЗапросПодкл.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаНач"		, НачалоДня(ДатаНачала));
	Запрос.УстановитьПараметр("ДатаКон"		, КонецДня(ДатаОкончания));
	Запрос.УстановитьПараметр("Организация"	, МассивОрганизаций);
	Запрос.УстановитьПараметр("ЕстьОтборОрг", МассивОрганизаций.Количество() > 0);
	Запрос.УстановитьПараметр("ТорговыеТочки", МассивСтруктурныхЕдиниц);
	Запрос.УстановитьПараметр("ЕстьОтборПоТТ", МассивСтруктурныхЕдиниц.Количество() > 0);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ЛистУчетаВозвратыИзСейфа.Ссылка.Дата, ДЕНЬ) КАК Дата,
	|	ЛистУчетаВозвратыИзСейфа.Ссылка.ТорговаяТочка КАК ТорговаяТочка,
	|	ЛистУчетаТоварыПоВозвратам.Номенклатура,
	|	СУММА(ЛистУчетаТоварыПоВозвратам.Количество) КАК Количество,
	|	ЛистУчетаТоварыПоВозвратам.СтавкаНДС,
	|	СУММА(ЛистУчетаТоварыПоВозвратам.Сумма) КАК Сумма,
	|	ЛистУчетаВозвратыИзСейфа.Ссылка.ТорговаяТочка.НомерТочки КАК НомерТочки,
	|	СебестоимостьТоваровСрезПоследних.Себестоимость,
	|	ЛистУчетаВозвратыИзСейфа.Ссылка.Организация,
	|	ЛистУчетаВозвратыИзСейфа.Ссылка
	|ИЗ
	|	Документ.ЛистУчета.ВозвратыИзСейфа КАК ЛистУчетаВозвратыИзСейфа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЛистУчета.ТоварыПоВозвратам КАК ЛистУчетаТоварыПоВозвратам
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СебестоимостьТоваров.СрезПоследних(&ДатаКон, ) КАК СебестоимостьТоваровСрезПоследних
	|			ПО ЛистУчетаТоварыПоВозвратам.Номенклатура = СебестоимостьТоваровСрезПоследних.Номенклатура
	|		ПО ЛистУчетаВозвратыИзСейфа.Ссылка = ЛистУчетаТоварыПоВозвратам.Ссылка
	|			И ЛистУчетаВозвратыИзСейфа.КлючСтроки = ЛистУчетаТоварыПоВозвратам.КлючСтрокиВозврата
	|ГДЕ
	|	ЛистУчетаВозвратыИзСейфа.Ссылка.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И ЛистУчетаВозвратыИзСейфа.Ссылка.Проведен = ИСТИНА
	//|	И ЛистУчетаВозвратыИзСейфа.ВозвратПолучен = ИСТИНА
	|	И ЛистУчетаТоварыПоВозвратам.Номенклатура.СлужебныйТовар = ЛОЖЬ
	|	И (ЛистУчетаВозвратыИзСейфа.Ссылка.Организация В (&Организация)
	|			ИЛИ &ЕстьОтборОрг = ЛОЖЬ)
	|	И (ЛистУчетаВозвратыИзСейфа.Ссылка.ТорговаяТочка В (&ТорговыеТочки)
	|			ИЛИ &ЕстьОтборПоТТ = ЛОЖЬ)
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ЛистУчетаВозвратыИзСейфа.Ссылка.Дата, ДЕНЬ),
	|	ЛистУчетаВозвратыИзСейфа.Ссылка.ТорговаяТочка,
	|	ЛистУчетаТоварыПоВозвратам.Номенклатура,
	|	ЛистУчетаТоварыПоВозвратам.СтавкаНДС,
	|	ЛистУчетаВозвратыИзСейфа.Ссылка.ТорговаяТочка.НомерТочки,
	|	СебестоимостьТоваровСрезПоследних.Себестоимость,
	|	ЛистУчетаВозвратыИзСейфа.Ссылка.Организация,
	|	ЛистУчетаВозвратыИзСейфа.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	ТорговаяТочка";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	СуммаВыгруженных = 0;
	Пока Выборка.СледующийПоЗначениюПоля("Дата") Цикл
		Пока Выборка.СледующийПоЗначениюПоля("ТорговаяТочка") Цикл
			СтрокаДляОрганизации = ТабОрганизацииБух.Найти(СокрЛП(Выборка.Организация.ИНН), "ИНН");
			ПодразделениеБух = СоединениеСБазой.Справочники.ПодразделенияОрганизаций.НайтиПоКоду(Формат(Выборка.НомерТочки, "ЧГ=0"),,, СтрокаДляОрганизации.Ссылка);
			Если СтрокаДляОрганизации = Неопределено Тогда
				Сообщить("Для организации: " + Выборка.Организация + " не найдено соответствие в бух. базе по ИНН: " + Выборка.Организация.ИНН);
				Продолжить;
			КонецЕсли;
			Если НЕ СоединениеСБазой.ЗначениеЗаполнено(ПодразделениеБух) Тогда
				Сообщить("Для подразделения: " + Выборка.ТорговаяТочка + " не найдено соответствие в бух. базе");
				Продолжить;
			КонецЕсли;
			
			СтрокиВозврат = ТаблицаВозвратов.НайтиСтроки(Новый Структура("Дата, НомерТочки", Выборка.Дата, Выборка.НомерТочки));
			Если СтрокиВозврат.Количество() = 0 Тогда
				ДокВозврат = СоединениеСБазой.Документы.ВозвратТоваровОтПокупателя.СоздатьДокумент();
				СоединениеСБазой.ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ДокВозврат, СоединениеСБазой.глЗначениеПеременной("глТекущийПользователь"), ДокВозврат.мВалютаРегламентированногоУчета, "Продажа", Неопределено);
			Иначе
				ДокВозврат = СтрокиВозврат[0].Возврат.ПолучитьОбъект();
			КонецЕсли;
			ДокВозврат.Дата 				= КонецДня(Выборка.Дата);
			ДокВозврат.ВидОперации 			= ВидОперации;
			ДокВозврат.Организация 			= СтрокаДляОрганизации.Ссылка;
			ДокВозврат.Контрагент 			= РозничныйПокупательБух;
			ДокВозврат.ДоговорКонтрагента 	= СтрокаДляОрганизации.ДоговорРозничныйПокупатель;
			ДокВозврат.УчитыватьНДС 		= Истина;
			ДокВозврат.СуммаВключаетНДС 	= Истина;
			//ДокВозврат.НомерРасходногоКассовогоОрдера = "КМ-3";
			//ДокВозврат.ДатаРасходногоКассовогоОрдера = СтрокаДанные.Дата;
			ДокВозврат.Комментарий 			= "Загружен по возврату из сейфа " + Выборка.ТорговаяТочка;
			
			//Если Выборка.Организация = ОргВкусвилл Тогда
				ДокВозврат.ПодразделениеОрганизации = ПодразделениеБух;
			//Иначе	
			//	Если ЗначениеЗаполнено(Выборка.ТорговаяТочка.ДатаПереходаНаУчетПоОбособленномуПодразделению)
			//			И Выборка.ТорговаяТочка.ДатаПереходаНаУчетПоОбособленномуПодразделению <= Выборка.Дата Тогда
			//		Если ЗначениеЗаполнено(Выборка.ТорговаяТочка.КодОПБух) Тогда
			//			ДокВозврат.ПодразделениеОрганизации = СоединениеСБазой.Справочники.ПодразделенияОрганизаций.НайтиПоКоду(Выборка.ТорговаяТочка.КодОПБух,,, ДокВозврат.Организация);
			//		Иначе	
			//			ДокВозврат.ПодразделениеОрганизации = ПодразделениеБух;
			//		КонецЕсли;	
			//	Иначе
			//		//Если СтрокаДанные.Организация = ОргСП Тогда
			//			ДокВозврат.ПодразделениеОрганизации = СоединениеСБазой.Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("Управление розницей",,, ДокВозврат.Организация);
			//		//КонецЕсли;
			//	КонецЕсли;	
			//КонецЕсли;
			
			
			СоединениеСБазой.ЗаполнениеДокументов.ПриИзмененииЗначенияОрганизации(ДокВозврат, СоединениеСБазой.глЗначениеПеременной("глТекущийПользователь"));
			ДокВозврат.КурсВзаиморасчетов 		= 1;
			ДокВозврат.КратностьВзаиморасчетов 	= 1;
			ДокВозврат.ОтразитьВКнигеПокупок 	= Истина;
			ДокВозврат.Склад 					= СкладВозврата;
			
			//Если НЕ СтрокаДанные.ЭтоБезнал Тогда
				ДокВозврат.СчетУчетаРасчетовСКонтрагентом = Счет62_Р;
				//ДокВозврат.СчетУчетаРасчетовПоАвансам = Счет50_01;
				ДокВозврат.СчетУчетаРасчетовПоАвансам = Счет62_Р;
			//Иначе
			//	ДокВозврат.СчетУчетаРасчетовСКонтрагентом = Счет62_Р;
			//	ДокВозврат.СчетУчетаРасчетовПоАвансам = Счет57_03;
			//КонецЕсли;	
			ДокВозврат.СчетУчетаНДС = Счет68_02;
			ДокВозврат.ПокупателемВыставляетсяСчетФактураНаВозврат = Истина;
			
			//Если СтрокаДанные.Организация = ОргСП Тогда
			//	ДокВозврат.УчитыватьНДС = Ложь;
			//КонецЕсли;
			
			ДокВозврат.Товары.Очистить();
			Пока Выборка.Следующий() Цикл
				СтрокаСТоваром = ТабТовары.Найти(Выборка.Номенклатура.id_tov, "ИД");
				Если СтрокаСТоваром = Неопределено Тогда
					Сообщить("Для номенклатуры: " + Выборка.Номенклатура + " не найдено соответствие в бухгалтерской базе");
					Продолжить;
				КонецЕсли;	
				СтрокаДоб = ДокВозврат.Товары.Добавить();
				СтрокаДоб.Номенклатура 	= СтрокаСТоваром.Ссылка;
				ДокВозврат.ЗаполнитьСчетаУчетаВСтрокеТабЧастиРегл(СтрокаДоб, "Товары", Истина);
				СоединениеСБазой.ОбработкаТабличныхЧастей.ЗаполнитьНомерГТДИСтрануПроисхождения(СтрокаДоб);
				СтрокаДоб.Количество 	= Выборка.Количество;
				СтрокаДоб.Сумма 		= Выборка.Сумма;
				СтрокаДоб.Себестоимость = Выборка.Себестоимость;
				Если СтрокаДоб.Себестоимость <= 0 Тогда
					СтрокаДоб.Себестоимость = 1;
				КонецЕсли;	
				Если Выборка.СтавкаНДС = Перечисления.СтавкиНДС.НДС18 Тогда
					СтрокаДоб.СтавкаНДС = СоединениеСБазой.Перечисления.СтавкиНДС.НДС18;
				Иначе	
					СтрокаДоб.СтавкаНДС = СоединениеСБазой.Перечисления.СтавкиНДС.НДС10;
				КонецЕсли;	
				СоединениеСБазой.ОбработкаТабличныхЧастей.ПриИзмененииСуммыТабЧасти(СтрокаДоб, ДокВозврат);
				
				СоединениеСБазой.ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрокаДоб, ДокВозврат);
				
			КонецЦикла;
			
			Попытка
				ДокВозврат.Записать(СоединениеСБазой.РежимЗаписиДокумента.Запись);
				СоединениеСБазой.АК_Привилегированный.ПровестиДокумент(ДокВозврат.Ссылка);
				Сообщить(" Проведен возврат от клиента № " + ДокВозврат.Номер + " от " + ДокВозврат.Дата + ", точка: " + Выборка.ТорговаяТочка + ", Сумма: " + ДокВозврат.СуммаДокумента);
				СуммаВыгруженных = СуммаВыгруженных + ДокВозврат.СуммаДокумента;
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
				Продолжить;
			КонецПопытки;
			
			Запись = СоединениеСБазой.РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
			Запись.Объект 	= ДокВозврат.Ссылка;
			Запись.Свойство = СоединениеСБазой.ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Загружен по возврату из сейфа");
			Запись.Значение = Истина;
			Запись.Записать();
			
			Запись = СоединениеСБазой.РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
			Запись.Объект 	= ДокВозврат.Ссылка;
			Запись.Свойство = СоединениеСБазой.ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Номер точки в финансах");
			Запись.Значение = Выборка.НомерТочки;
			Запись.Записать();
			
			
			Если СтрокиВозврат.Количество() = 0
					ИЛИ СтрокиВозврат[0].ОтражениеНДС = Null Тогда
				ДокОтражение = СоединениеСБазой.Документы.ОтражениеНДСКВычету.СоздатьДокумент();
			Иначе
				ДокОтражение = СтрокиВозврат[0].ОтражениеНДС.ПолучитьОбъект();
			КонецЕсли;	
			ДокОтражение.Заполнить(ДокВозврат.Ссылка);
			ДокОтражение.КодВидаОперации = "17";
			СоединениеСБазой.ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ДокОтражение, СоединениеСБазой.глЗначениеПеременной("глТекущийПользователь"), ДокОтражение.мВалютаРегламентированногоУчета, "Покупка");
			ДокОтражение.Дата = ДокВозврат.Дата;
			ДокОтражение.ПрямаяЗаписьВКнигу = Истина;
			ИспользоватьДокументРасчетовКакСчетФактуру = Истина;
			ДокОтражение.Записать(СоединениеСБазой.РежимЗаписиДокумента.Проведение);
			
			Если СтрокиВозврат.Количество() = 0
				ИЛИ СтрокиВозврат[0].РКО = Null Тогда
				ДокРКО = СоединениеСБазой.Документы.РасходныйКассовыйОрдер.СоздатьДокумент();
			Иначе
				ДокРКО = СтрокиВозврат[0].РКО.ПолучитьОбъект();
				ДокРКО.РасшифровкаПлатежа.Очистить();
			КонецЕсли;	
			ДокРКО.Заполнить(ДокВозврат.Ссылка);
			ДокРКО.СтатьяДвиженияДенежныхСредств = СтатьяДДСБух;
			Для Каждого СтрокаРасш Из ДокРКО.РасшифровкаПлатежа Цикл
				СтрокаРасш.СтатьяДвиженияДенежныхСредств = СтатьяДДСБух;
			КонецЦикла;	
			ДокРКО.Дата = НачалоДня(ДокВозврат.Дата) + 21 * 3600;
			ДокРКО.ПодразделениеОрганизации = ДокВозврат.ПодразделениеОрганизации;
			Попытка
				ДокРКО.Записать(СоединениеСБазой.РежимЗаписиДокумента.Запись);
				СоединениеСБазой.АК_Привилегированный.ПровестиДокумент(ДокРКО.Ссылка);
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			КонецПопытки;
			
			ДокЛУ = Выборка.Ссылка.ПолучитьОбъект();
			ДокЛУ.ОбменДанными.Загрузка = Истина;
			ЗаписыватьЛУ = Ложь;
			Для Каждого СтрокаВозвратЛУ Из ДокЛУ.ВозвратыИзСейфа Цикл
				Если СтрокаВозвратЛУ.ВозвратПолучен Тогда
					СтрокаВТоварах = ДокЛУ.ТоварыПоВозвратам.Найти(СтрокаВозвратЛУ.КлючСтроки, "КлючСтрокиВозврата");
					Если СтрокаВТоварах <> Неопределено Тогда
						СтрокаВозвратЛУ.ВыгруженВБухгалтерию = Истина;
						ЗаписыватьЛУ = Истина;
					КонецЕсли;	
				КонецЕсли;	
			КонецЦикла;
			Если ЗаписыватьЛУ Тогда
				ДокЛУ.Записать(РежимЗаписиДокумента.Запись);
			КонецЕсли;	
			
		КонецЦикла;	
	КонецЦикла;	
	
	Сообщить("Всего выгружено возвратов на сумму " + СуммаВыгруженных);
	
КонецПроцедуры	