Перем мИсходноеЗначениеИспользоватьОграниченияПравДоступаНаУровнеЗаписей;
Перем СписокИспользуемыхВидовОбъектов;

// Процедура обновляет назначенные виды объектов доступа группам пользователей
// Неиспользуемые виды объектов доступа очищаются
//
Процедура ОбновитьГруппыПользователей(ТаблицаГруппПользователей)
	
	Если ТаблицаГруппПользователей.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Набор = РегистрыСведений.НазначениеВидовОбъектовДоступа.СоздатьНаборЗаписей();
	
	// Удалим настройки
	Для каждого ЭлКоллекции Из ТаблицаГруппПользователей Цикл
		Набор.Отбор.ГруппаПользователей.Установить(ЭлКоллекции.ГруппаПользователей);
		Набор.Отбор.ВидОбъектаДоступа.Установить(ЭлКоллекции.ВидОбъектаДоступа);
		Набор.Записать();
	КонецЦикла;
	
КонецПроцедуры // ОбновитьГруппыПользователей

Процедура ЗаписатьИспользуемыеВидыОбъектовДоступа()
	
	Если НЕ ИспользоватьОграниченияПравДоступаНаУровнеЗаписей Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаГруппПользователей = ПолучитьТаблицуГруппПользователей();
	
	Набор = РегистрыСведений.ИспользуемыеВидыОбъектовДоступа.СоздатьНаборЗаписей();
	Для каждого ЭлКоллекции Из ВидыОбъектовДоступа Цикл
		Если ЭлКоллекции.Пометка Тогда
			ЗаписьНабора = Набор.Добавить();
			ЗаписьНабора.ВидОбъектаДоступа = ЭлКоллекции.ВидОбъектаДоступа;
		КонецЕсли; 
	КонецЦикла;
	Набор.Записать();
	
	ОбновитьГруппыПользователей(ТаблицаГруппПользователей);
	
	Модифицированность = Ложь;
	
КонецПроцедуры // ЗаписатьИспользуемыеВидыОбъектовДоступа

// Функция возвращает группы пользователей, для которых изменилась настройка прав доступа
//
Функция ПолучитьТаблицуГруппПользователей()
	
	// Получим виды объектов доступа, которые недоступны для настройки прав
	МассивНедоступныхВидовОбъектовДоступа = Новый Массив;
	Для каждого ЭлКоллекции Из ВидыОбъектовДоступа Цикл
		Если НЕ ЭлКоллекции.Пометка Тогда
			МассивНедоступныхВидовОбъектовДоступа.Добавить(ЭлКоллекции.ВидОбъектаДоступа);
		КонецЕсли; 
	КонецЦикла; 
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	НазначениеВидовОбъектовДоступа.ГруппаПользователей КАК ГруппаПользователей,
	               |	НазначениеВидовОбъектовДоступа.ВидОбъектаДоступа КАК ВидОбъектаДоступа
	               |ИЗ
	               |	РегистрСведений.НазначениеВидовОбъектовДоступа КАК НазначениеВидовОбъектовДоступа
	               |ГДЕ
	               |	НазначениеВидовОбъектовДоступа.ВидОбъектаДоступа В (&МассивНедоступныхВидовОбъектовДоступа)
	               |
	               |ДЛЯ ИЗМЕНЕНИЯ
	               |	РегистрСведений.НазначениеВидовОбъектовДоступа";
	 
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("МассивНедоступныхВидовОбъектовДоступа", МассивНедоступныхВидовОбъектовДоступа);
	
	Возврат Запрос.Выполнить().Выгрузить();	

КонецФункции // ПолучитьТаблицуГруппПользователей

// Функция проверяет настройки перед началом записи
//
Функция ПроверитьПередНачаломЗаписиНастроек()
	
	Если ИспользоватьОграниченияПравДоступаНаУровнеЗаписей Тогда 
		
		Если ВидыОбъектовДоступа.Найти(Истина, "Пометка") = Неопределено Тогда
			ТекстПредупреждения = "Для ограничения доступа необходимо выбрать хотя бы один вид объектов";
			Предупреждение(ТекстПредупреждения,, "Ограничение доступа по видам объектов");
			Возврат Ложь;
		КонецЕсли; 
		
		ТекстОтключенныхВидовОбъектов = "";
		Для каждого ВидДоступа Из ВидыОбъектовДоступа Цикл
			Если ВидДоступа.Пометка Тогда
				Продолжить;	
			КонецЕсли;		
			
			// Если пользователь отключил виды объектов попросим подтвердить запись
			Если СписокИспользуемыхВидовОбъектов.Найти(ВидДоступа.ВидОбъектаДоступа) <> Неопределено Тогда
				ТекстОтключенныхВидовОбъектов = ТекстОтключенныхВидовОбъектов 
					+ Символы.ПС 
					+ " - " + Строка(ВидДоступа.ВидОбъектаДоступа);
			КонецЕсли;		
		КонецЦикла; 
		
		Если ТекстОтключенныхВидовОбъектов <> "" Тогда
			ТекстВопроса = "Будут отключены ограничения по видам объектов:" + ТекстОтключенныхВидовОбъектов + "
							|
							|Продолжить?";
			
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,,,"Ограничение доступа по видам объектов"); 
			Если Ответ <> КодВозвратаДиалога.Да Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли; 
		
	КонецЕсли;
	
	Возврат Истина;

КонецФункции // 

// Функция записывает настройки
//
// Возвращаемое значение:
//   <Булево>   – Истина, если запись выполнена успешно, Ложь, если произошла ошибка
// 
Функция ЗаписатьНастройки()

	Если НЕ ПроверитьПередНачаломЗаписиНастроек() Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	// В одной транзакции запишем настройки
	НачатьТранзакцию();
	
	Константы.ИспользоватьОграниченияПравДоступаНаУровнеЗаписей.Установить(ИспользоватьОграниченияПравДоступаНаУровнеЗаписей);
	
	ЗаписатьИспользуемыеВидыОбъектовДоступа();
	
	ПолныеПрава.УстановитьПараметрыМеханизмаОграниченияПравДоступа();
	
	Модифицированность = Ложь;
	
	ЗафиксироватьТранзакцию();
	
	Если мИсходноеЗначениеИспользоватьОграниченияПравДоступаНаУровнеЗаписей <> ИспользоватьОграниченияПравДоступаНаУровнеЗаписей Тогда
		Оповестить("ИзмененоИспользоватьОграниченияПравДоступаНаУровнеЗаписей", , "ФормаНастройкаПараметровУчета");
	КонецЕсли; 
	
	Оповестить("ИзмененыИспользуемыеВидыОбъектовДоступа", ,"ФормаИспользуемыеВидыОбъектовДоступа");
	
	мИсходноеЗначениеИспользоватьОграниченияПравДоступаНаУровнеЗаписей = ИспользоватьОграниченияПравДоступаНаУровнеЗаписей;
	
	ЗаполнитьСписокИспользуемыхВидовОбъектов();
	
	Возврат Истина;
	
КонецФункции // ЗаписатьНастройки

// Процедура считывает настройки из ИБ и устанавливает их значения реквизитам формы
//
Процедура ПрочитатьНастройки()

	ИспользоватьОграниченияПравДоступаНаУровнеЗаписей = Константы.ИспользоватьОграниченияПравДоступаНаУровнеЗаписей.Получить();
	
	ЗаполнитьСписокВидовОбъектовДоступа();
	
КонецПроцедуры // ПрочитатьНастройки

Процедура ЗаполнитьСписокИспользуемыхВидовОбъектов()

	СписокИспользуемыхВидовОбъектов.Очистить();
	
	Для каждого ВидДоступа Из ВидыОбъектовДоступа Цикл
		Если ВидДоступа.Пометка Тогда
			СписокИспользуемыхВидовОбъектов.Добавить(ВидДоступа.ВидОбъектаДоступа);
		КонецЕсли;
	КонецЦикла; 
	
КонецПроцедуры //
 
// Процедура заполняет СписокИспользуемыеВидыОбъектовДоступа данными РС ИспользуемыеВидыОбъектовДоступа
//
Процедура ЗаполнитьСписокВидовОбъектовДоступа(УстановитьЗначенияПоУмолчанию = Ложь)
	
	ВидыОбъектовДоступа.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВидыОбъектовДоступа.Ссылка КАК ВидОбъектаДоступа,
	|	ВЫБОР
	|		КОГДА ИспользуемыеВидыОбъектовДоступа.ВидОбъектаДоступа ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Пометка
	|ИЗ
	|	Перечисление.ВидыОбъектовДоступа КАК ВидыОбъектовДоступа
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИспользуемыеВидыОбъектовДоступа КАК ИспользуемыеВидыОбъектовДоступа
	|		ПО (ИспользуемыеВидыОбъектовДоступа.ВидОбъектаДоступа = ВидыОбъектовДоступа.Ссылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидыОбъектовДоступа.Порядок";
	
	ЕстьИспользуемыеВидыОбъектовДоступа = Ложь;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ВидыОбъектовДоступа.Добавить();
		НоваяСтрока.ВидОбъектаДоступа = Выборка.ВидОбъектаДоступа;
		НоваяСтрока.Пометка = ИспользоватьОграниченияПравДоступаНаУровнеЗаписей И Выборка.Пометка;
		ЕстьИспользуемыеВидыОбъектовДоступа = Выборка.Пометка ИЛИ ЕстьИспользуемыеВидыОбъектовДоступа;
	КонецЦикла;
	
	// Если используются ограничения прав доступа на уровне записей
	// и нет выбранных видов доступа, то установим значения по умолчанию
	Если УстановитьЗначенияПоУмолчанию
		И ИспользоватьОграниченияПравДоступаНаУровнеЗаписей
		И НЕ ЕстьИспользуемыеВидыОбъектовДоступа Тогда
		
		Для каждого ВидДоступа Из ВидыОбъектовДоступа Цикл
			Если ВидДоступа.ВидОбъектаДоступа = Перечисления.ВидыОбъектовДоступа.Организации Тогда
				ВидДоступа.Пометка = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЗаполнитьСписокИспользуемыхВидовОбъектов();
	
КонецПроцедуры //

// Процедура изменяет доступность кнопки НастройкаИспользуемыеВидыОбъектовДоступа
// Кнопка доступна, если установлен флаг "Использовать ограничения прав доступа на уровне записей"
//
Процедура ИзменитьДоступностьВидовОбъектовДоступа()

	ЭлементыФормы.ВидыОбъектовДоступа.Доступность = ИспользоватьОграниченияПравДоступаНаУровнеЗаписей;
	
	Если НЕ ИспользоватьОграниченияПравДоступаНаУровнеЗаписей Тогда
		ВидыОбъектовДоступа.ЗаполнитьЗначения(Ложь, "Пометка");
	КонецЕсли;
	
КонецПроцедуры // ИзменитьДоступностьВидовОбъектовДоступа


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

// Процедура - обработчик события "ПриИзменении" флажка ИспользоватьОграниченияПравДоступаНаУровнеЗаписей
//
Процедура ИспользоватьОграниченияПравДоступаНаУровнеЗаписейПриИзменении(Элемент)
	
	ИзменитьДоступностьВидовОбъектовДоступа();
	
	Если ИспользоватьОграниченияПравДоступаНаУровнеЗаписей Тогда
		ЗаполнитьСписокВидовОбъектовДоступа(Истина);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ


// Процедура - обработчик нажатия на кнопку "ОК"
//
Процедура ОсновныеДействияФормыОсновныеДействияФормыОК(Кнопка)
	
	Если ЗаписатьНастройки() Тогда
		Закрыть();
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОсновныеДействияФормыДействиеЗаписать(Кнопка)
	
	ЗаписатьНастройки()
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриОткрытии формы
//
Процедура ПриОткрытии()
	
	ПрочитатьНастройки();
	
	мИсходноеЗначениеИспользоватьОграниченияПравДоступаНаУровнеЗаписей = ИспользоватьОграниченияПравДоступаНаУровнеЗаписей;
	
	ИзменитьДоступностьВидовОбъектовДоступа();
	
	Если НЕ ПравоДоступа("Изменение", Метаданные.Константы.ИспользоватьОграниченияПравДоступаНаУровнеЗаписей) Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		ТекстВопроса = "Данные были изменены. Сохранить изменения?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			 Если НЕ ЗаписатьНастройки() Тогда
			 	Отказ = Истина;
			 КонецЕсли;
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда
		 	Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


СписокИспользуемыхВидовОбъектов = Новый Массив;