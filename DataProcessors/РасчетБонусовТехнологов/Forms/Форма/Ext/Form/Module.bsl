
&НаКлиенте
Процедура Рассчитать(Команда)
	РассчитатьНаСервере();	
КонецПроцедуры

Процедура РассчитатьНаСервере()
	УстановитьПривилегированныйРежим(Истина);
	Для каждого СтрРоль Из Объект.Роли Цикл
		НЗ=РегистрыСведений.РезультатыРасчетаБонусаТехнологов.СоздатьНаборЗаписей();
		НЗ.Отбор.ДатаНачала.Установить(Объект.ДатаНачала);
		НЗ.Отбор.ДатаОкончания.Установить(Объект.ДатаОкончания);
		НЗ.Отбор.Роль.Установить(СтрРоль.Роль);
	    НЗ.Записать();
	КонецЦикла; 
	
	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РолиПользователейТипыРолей.РольПользователя,
	|	РолиПользователейТипыРолей.Объект,
	|	РолиПользователейТипыРолей.Период КАК Период,
	|	РолиПользователейТипыРолей.ТипРоли
	|ПОМЕСТИТЬ втБезХар
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&Дата1, ТипРоли = &ТипРоли) КАК РолиПользователейТипыРолей
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	РолиПользователейТипыРолей.РольПользователя,
	|	РолиПользователейТипыРолей.Объект,
	|	РолиПользователейТипыРолей.Период,
	|	РолиПользователейТипыРолей.ТипРоли
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль КАК РолиПользователейТипыРолей
	|ГДЕ
	|	РолиПользователейТипыРолей.Период > &Дата1
	|	И РолиПользователейТипыРолей.Период <= &Дата2
	|	И РолиПользователейТипыРолей.ТипРоли = &ТипРоли
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РолиПользователейТипыРолей.РольПользователя,
	|	РолиПользователейТипыРолей.Объект,
	|	РолиПользователейТипыРолей.Период КАК Период,
	|	РолиПользователейТипыРолей.ТипРоли
	|ПОМЕСТИТЬ втЧужиеХар
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&Дата1, ТипРоли = &ТипРоли) КАК РолиПользователейТипыРолей
	|ГДЕ
	|	РолиПользователейТипыРолей.Объект ССЫЛКА Справочник.ХарактеристикиНоменклатуры
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	РолиПользователейТипыРолей.РольПользователя,
	|	РолиПользователейТипыРолей.Объект,
	|	РолиПользователейТипыРолей.Период,
	|	РолиПользователейТипыРолей.ТипРоли
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль КАК РолиПользователейТипыРолей
	|ГДЕ
	|	РолиПользователейТипыРолей.Объект ССЫЛКА Справочник.ХарактеристикиНоменклатуры
	|	И РолиПользователейТипыРолей.Период > &Дата1
	|	И РолиПользователейТипыРолей.Период <= &Дата2
	|	И РолиПользователейТипыРолей.ТипРоли = &ТипРоли
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втБезХар.РольПользователя,
	|	втБезХар.Период,
	|	ЗначенияСвойствОбъектов.Объект,
	|	втБезХар.ТипРоли
	|ПОМЕСТИТЬ втХар
	|ИЗ
	|	втБезХар КАК втБезХар
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО втБезХар.Объект = ЗначенияСвойствОбъектов.Значение
	|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовхарактеристик.СвойстваОбъектов.Производитель))
	|			И (втБезХар.Объект ССЫЛКА Справочник.Контрагенты)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втБезХар.РольПользователя КАК Роль,
	|	втБезХар.Объект КАК Характеристика,
	|	втБезХар.Объект.Владелец КАК Номенклатура,
	|	втБезХар.Период КАК Период
	|ПОМЕСТИТЬ втХарактеристики
	|ИЗ
	|	втБезХар КАК втБезХар
	|ГДЕ
	|	НЕ втБезХар.Объект ССЫЛКА Справочник.Контрагенты
	|	И втБезХар.Объект.Неактивная = ЛОЖЬ
	|
	|СГРУППИРОВАТЬ ПО
	|	втБезХар.РольПользователя,
	|	втБезХар.Объект,
	|	втБезХар.Объект.Владелец,
	|	втБезХар.Период
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	втХар.РольПользователя,
	|	втХар.Объект,
	|	втХар.Объект.Владелец,
	|	втХар.Период
	|ИЗ
	|	втХар КАК втХар
	|		ЛЕВОЕ СОЕДИНЕНИЕ втЧужиеХар КАК втЧужиеХар
	|		ПО втХар.ТипРоли = втЧужиеХар.ТипРоли
	|			И втХар.Объект = втЧужиеХар.Объект
	//|			И (НЕ втХар.РольПользователя = втЧужиеХар.РольПользователя)
	|			И втХар.Период >= втЧужиеХар.Период
	|ГДЕ
	|	втЧужиеХар.РольПользователя ЕСТЬ NULL 
	|	И втХар.Объект.Неактивная = ЛОЖЬ
	|	И втХар.Объект.Владелец.ТипТовара В (ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.Продукция), ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.ПокупнойТовар))
	|
	|СГРУППИРОВАТЬ ПО
	|	втХар.РольПользователя,
	|	втХар.Объект,
	|	втХар.Объект.Владелец,
	|	втХар.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втХар.Роль,
	|	втХар.Характеристика,
	|	ЗначенияСвойствОбъектов.Значение КАК Производитель,
	|	втХар.Номенклатура,
	|	втХар.Период
	|ПОМЕСТИТЬ втХарСПроизводителем
	|ИЗ
	|	втХарактеристики КАК втХар
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|		ПО (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовхарактеристик.СвойстваОбъектов.Производитель))
	|			И втХар.Характеристика = ЗначенияСвойствОбъектов.Объект
	|
	|СГРУППИРОВАТЬ ПО
	|	втХар.Роль,
	|	втХар.Характеристика,
	|	втХар.Номенклатура,
	|	ЗначенияСвойствОбъектов.Значение,
	|	втХар.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втХар.Роль КАК Роль,
	|	Выбор когда втХар.Период<&Дата1 тогда &Дата1 иначе втХар.Период конец  КАК Период,
	|	втХар.Характеристика КАК Характеристика,
	|	втХар.Номенклатура КАК Номенклатура,
	|	втХар.Производитель КАК Производитель,
	|	втХар.Производитель.ГоловнойКонтрагент КАК Холдинг,
	|	0 КАК Обращений,
	|	втХар.Характеристика.ИДЭлемента КАК ИДЭлемента
	|ИЗ
	|	втХарСПроизводителем КАК втХар
	|
	|СГРУППИРОВАТЬ ПО
	|	втХар.Роль,
	|	Выбор когда втХар.Период<&Дата1 тогда &Дата1 иначе втХар.Период конец,
	|	втХар.Характеристика,
	|	втХар.Номенклатура,
	|	втХар.Производитель,
	|	втХар.Производитель.ГоловнойКонтрагент,
	|	втХар.Характеристика.ИДЭлемента
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Период";
	
	
	Запрос.УстановитьПараметр("ТипРоли", ПланыВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству);
	Запрос.УстановитьПараметр("Дата2",КонецДня(Объект.ДатаОкончания));
	Запрос.УстановитьПараметр("Дата1",НачалоДня(Объект.ДатаНачала));
	Запрос.УстановитьПараметр("Роли",Объект.Роли.Выгрузить().ВыгрузитьКолонку("Роль"));
	
    Запрос.УстановитьПараметр("ТипОбращения",Справочники.ТипыОбращенийПокупателей.НайтиПоКоду("201"));
    Запрос.УстановитьПараметр("ТипСписанияВозврата",Справочники.ТипыСписанийИВозвратов.НайтиПоКоду("00003"));
    Запрос.УстановитьПараметр("ТипВключения",Перечисления.АК_ТипыВключений.НарушениеТехнологииПроизводства);
    Запрос.УстановитьПараметр("СтатусЖалобы",Перечисления.СтатусыЖалоб.ВРаботе);
    Запрос.УстановитьПараметр("СтатусЖалобы1",Перечисления.СтатусыЖалоб.Подтверждена);
	
	Результат1 = Запрос.Выполнить();
	//
	//Отчет.Объекты.Очистить();
	Объект.Характеристики.Очистить();
	Объект.ХарактеристикиВсе.Очистить();
	Объект.ХарактеристикиИтог.Очистить();
	
	ВыборкаДетальныеЗаписи = Результат1.Выбрать();
	
	ТЗКопия=Объект.Характеристики.Выгрузить();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Стр=Объект.ХарактеристикиВсе.Добавить();
		Стр.Период=?(ВыборкаДетальныеЗаписи.Период<Объект.ДатаНачала,Объект.ДатаНачала,ВыборкаДетальныеЗаписи.Период);
		Стр.Роль=ВыборкаДетальныеЗаписи.Роль;
		Стр.Номенклатура=ВыборкаДетальныеЗаписи.Номенклатура;
		Стр.Характеристика=ВыборкаДетальныеЗаписи.Характеристика;
		СТР.ИДЭлемента=ВыборкаДетальныеЗаписи.ИДЭлемента;
		СТР.Холдинг=ВыборкаДетальныеЗаписи.Холдинг;
		СТР.Производитель=ВыборкаДетальныеЗаписи.Производитель;
		СТР.Обращений=ВыборкаДетальныеЗаписи.Обращений;
		Если Объект.Роли.НайтиСтроки(Новый Структура("Роль",ВыборкаДетальныеЗаписи.Роль)).Количество()>0 Тогда
			Стр=Объект.Характеристики.Добавить();
			Стр.Период=?(ВыборкаДетальныеЗаписи.Период<Объект.ДатаНачала,Объект.ДатаНачала,ВыборкаДетальныеЗаписи.Период);
			Стр.Роль=ВыборкаДетальныеЗаписи.Роль;
			Стр.Номенклатура=ВыборкаДетальныеЗаписи.Номенклатура;
			Стр.Характеристика=ВыборкаДетальныеЗаписи.Характеристика;
			СТР.ИДЭлемента=ВыборкаДетальныеЗаписи.ИДЭлемента;
			СТР.Холдинг=ВыборкаДетальныеЗаписи.Холдинг;
			СТР.Производитель=ВыборкаДетальныеЗаписи.Производитель;
			СТР.Обращений=ВыборкаДетальныеЗаписи.Обращений;

		КонецЕсли; 
	КонецЦикла;
	Кол=Объект.ХарактеристикиВсе.Количество();
	Для Сч=0 По Кол-1 Цикл
		Стр=Объект.ХарактеристикиВсе[Сч];
		Если Объект.Роли.НайтиСтроки(Новый Структура("Роль",Стр.Роль)).Количество()=0 Тогда
			Продолжить;	
		КонецЕсли; 
		Если Стр.Период>=Объект.ДатаНачала Тогда
			ДатаОтсчета=Стр.Период;	
		Иначе	
			ДатаОтсчета=Объект.ДатаНачала-24*60*60;	
		КонецЕсли; 
		Если Сч<Кол-1 Тогда
			Если Объект.ХарактеристикиВсе[Сч+1].Характеристика=Стр.Характеристика Тогда
				ДатаДо=Объект.ХарактеристикиВсе[Сч+1].Период-24*60*60;
			Иначе	
			    ДатаДо=Объект.ДатаОкончания;
			КонецЕсли;
		Иначе
			ДатаДо=Объект.ДатаОкончания;
		КонецЕсли; 
		
		Пока ДатаОтсчета<ДатаДо Цикл
			ДатаОтсчета=ДатаОтсчета+24*60*60;
			НовСтр=ТЗКопия.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр,Стр);
			НовСтр.Период=ДатаОтсчета;
		
		КонецЦикла;	
		
	КонецЦикла; 
	Для каждого Стр Из ТЗКопия Цикл
		НовСтр=Объект.Характеристики.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,Стр);
	КонецЦикла; 
	Объект.Характеристики.Сортировать("Роль,Номенклатура,Характеристика,Период");
	
	ТЗКопия=Объект.ХарактеристикиВсе.Выгрузить();
	ТЗКопия.Очистить();	
	Кол=Объект.ХарактеристикиВсе.Количество();
	Для Сч=0 По Кол-1 Цикл
		Стр=Объект.ХарактеристикиВсе[Сч];
		Если Стр.Период>=Объект.ДатаНачала Тогда
			ДатаОтсчета=Стр.Период;	
		Иначе	
			ДатаОтсчета=Объект.ДатаНачала-24*60*60;	
		КонецЕсли; 
		Если Сч<Кол-1 Тогда
			Если Объект.ХарактеристикиВсе[Сч+1].Характеристика=Стр.Характеристика Тогда
				ДатаДо=Объект.ХарактеристикиВсе[Сч+1].Период-24*60*60;
			Иначе	
			    ДатаДо=Объект.ДатаОкончания;
			КонецЕсли;
		Иначе
			ДатаДо=Объект.ДатаОкончания;
		КонецЕсли; 
		
		Пока ДатаОтсчета<ДатаДо Цикл
			ДатаОтсчета=ДатаОтсчета+24*60*60;
			НовСтр=ТЗКопия.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр,Стр);
			НовСтр.Период=ДатаОтсчета;
		
		КонецЦикла;	
		
	КонецЦикла; 
	Для каждого Стр Из ТЗКопия Цикл
		НовСтр=Объект.ХарактеристикиВсе.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,Стр);
	КонецЦикла; 
	Объект.ХарактеристикиВсе.Сортировать("Роль,Номенклатура,Характеристика,Период");
	
	
	
	Запрос.Текст="ВЫБРАТЬ
	             |	ОбращенияПокупателей.Номенклатура КАК Номенклатура,
	             |	КОЛИЧЕСТВО(ОбращенияПокупателей.id_OK) КАК Обращений,
	             |	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаДок, ДЕНЬ) КАК Период,
	             |	ОбращенияПокупателей.Производитель
	             |ИЗ
	             |	РегистрСведений.ОбращенияПокупателей КАК ОбращенияПокупателей
	             |ГДЕ
	             |	ОбращенияПокупателей.ДатаДок МЕЖДУ &Дата1 И &Дата2
	             |	И (ОбращенияПокупателей.ТипОбращения = &ТипОбращения
	             |			ИЛИ ОбращенияПокупателей.ТипСписанияВозврата = &ТипСписанияВозврата)
	             |	И ОбращенияПокупателей.ТипВключения <> &ТипВключения
	             |	И (ОбращенияПокупателей.СтатусЖалобы = &СтатусЖалобы
	             |			ИЛИ ОбращенияПокупателей.СтатусЖалобы = &СтатусЖалобы1)
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	ОбращенияПокупателей.Номенклатура,
	             |	НАЧАЛОПЕРИОДА(ОбращенияПокупателей.ДатаДок, ДЕНЬ),
	             |	ОбращенияПокупателей.Производитель";
	ВыбВключения=Запрос.Выполнить().Выбрать();
	Пока ВыбВключения.Следующий() Цикл
		МасСтр=Объект.ХарактеристикиВсе.НайтиСтроки(Новый Структура("Номенклатура,Производитель,Период",ВыбВключения.Номенклатура,ВыбВключения.Производитель,ВыбВключения.Период));
		Для каждого Эл Из МасСтр Цикл
			Эл.Обращений=ВыбВключения.Обращений;
		КонецЦикла; 
	КонецЦикла; 
	ВыбВключения.Сбросить();
	Пока ВыбВключения.Следующий() Цикл
		МасСтр=Объект.Характеристики.НайтиСтроки(Новый Структура("Номенклатура,Производитель,Период",ВыбВключения.Номенклатура,ВыбВключения.Производитель,ВыбВключения.Период));
		Для каждого Эл Из МасСтр Цикл
			Эл.Обращений=ВыбВключения.Обращений;
		КонецЦикла; 
	КонецЦикла; 
	ВыбВключения.Сбросить();
	
	
		// Вставить содержимое обработчика.
	ADOСоединение = Новый COMОбъект("ADODB.Connection");
	ADOСоединение.ConnectionTimeOut = 0;
	ADOСоединение.CommandTimeOut    = 0;
	СтрПодкл=ОбменСAccess.ПолучитьСтрокуСоединения("M2");
	//СтрПодкл=СтрЗаменить(СтрПодкл,"sms_izbenka","m2");
	ADOСоединение.ConnectionString  = СтрПодкл;
	ADOСоединение.Open();
	Если ADOСоединение.State() = 0 Тогда
		Возврат;
	Иначе         
	КонецЕсли;
	//
	
	
	Дата1=Объект.ДатаНачала;
	Дата2=КонецДня(Объект.ДатаОкончания);
 	
	
	
	СтрЗапрос =	"If OBJECT_ID('tempdb..#VTProizvoditeli') Is Not Null	Drop Table #VTProizvoditeli
	|If OBJECT_ID('tempdb..#Obrascheniya_Base') Is Not Null	Drop Table #Obrascheniya_Base
	|If OBJECT_ID('tempdb..#VT_PricePost_Predv') Is Not Null	Drop Table #VT_PricePost_Predv
	|If OBJECT_ID('tempdb..#VT_PricePost') Is Not Null		Drop Table #VT_PricePost
	|If OBJECT_ID('tempdb..#VT_Obrascheniya') Is Not Null	Drop Table #VT_Obrascheniya
	|If OBJECT_ID('tempdb..#dtt') Is Not Null				Drop Table #dtt
	|If OBJECT_ID('tempdb..#dtt_sokr') Is Not Null			Drop Table #dtt_sokr
	|If OBJECT_ID('tempdb..#tov_obr') Is Not Null			Drop Table #tov_obr
	|If OBJECT_ID('tempdb..#VT_obr_bezTT') Is Not Null		Drop Table #VT_obr_bezTT
	|If OBJECT_ID('tempdb..#TovAss_sokr') Is Not Null		Drop Table #TovAss_sokr
	|If OBJECT_ID('tempdb..#dtt_week') Is Not Null			Drop Table #dtt_week
	|if OBJECT_ID ('tempdb..#sebest_pr') is not null drop table #sebest_pr
	|if OBJECT_ID ('tempdb..#d') is not null drop table #d
					|declare @date1 as datetime , @date2 as datetime
					|set @date1="+ВнешниеДанные.ФорматПоля(Дата1-6*24*60*60)+"
					|set @date2 = "+ВнешниеДанные.ФорматПоля(Дата2)+"
 |create table #ls (Period datetime,  id_tov int, id_tt int, Summa numeric(15, 3), kol numeric(15, 3), post numeric(15, 3)
 |) 
					|
					|Insert into #ls
	|Select
	|	dtt.date_tt as Period,
	|	dtt.id_tov,
	|	dtt.id_tt,
	|	(dtt.quantity - dtt.discount50_qty - dtt.discount50_sms_qty)*dtt.price as Summa,
	|	dtt.quantity - dtt.discount50_qty - dtt.discount50_sms_qty as kol, dtt.post post
	|From Reports..dtt as dtt (nolock)
	|Where
	|	dtt.date_tt Between @Date1 And @Date2

|-----------------------------------------------
	|Select
	|	TovAss._Fld3958RRef as TT,
	|	TovAss._Fld3959RRef as Tovar,
	|	TovAss._Fld3960RRef as har,
	|	TovAss._Fld3961 as vivedena,
	|	TovAss.id_tt_1C as id_tt,
	|	TovAss.id_tov_1C as id_tov,
	|	Convert(datetime, DateAdd(Year, -2000, TovAss._Period)) as _Period
	|Into #TovAss_sokr
	|From IzbenkaFin.._InfoRg3957 as TovAss (nolock)
	|Where 
	|   Year(TovAss._Period) > 4000  and TovAss.id_tov_1C in (Select ls.id_tov from #ls ls )  and Convert(Datetime, DateAdd(Year, -2000, TovAss._Period))<= @date2
|-----------------------------------------------
 |create table #NomHarMax ( id_tt int,  id_tov int, Periodls datetime, Period datetime
 |) 
    |
    |Insert into #NomHarMax
    |Select
    |	TovAss_sokr.id_tt as id_tt,
    |	TovAss_sokr.id_tov as id_tov,ls.Period periodls,
    |	Max(TovAss_sokr._Period) as Period
    |	From #TovAss_sokr TovAss_sokr
    |	Inner join #ls ls on TovAss_sokr.id_tov=ls.id_tov and TovAss_sokr.id_tt=ls.id_tt and TovAss_sokr._Period<=ls.Period
    |GROUP BY TovAss_sokr.id_tt,
    |	TovAss_sokr.id_tov,ls.Period  	
|-----------------------------------------------
 |create table #TovAssHar ( id_tov int, 
 |	Har binary(16), Tovar binary(16),id_kontr int,
 |	Periodls datetime, Summa numeric(15, 3), Kol numeric(15, 3), Post numeric(15, 3)
 |) 
    |
    |Insert into #TovAssHar
    |Select
	|	
    |	TovAss_sokr.id_tov as id_tov
    |	,TovAss_sokr.har as har, TovAss_sokr.Tovar as Tovar,Kontr._fld1159 id_kontr,
	|	ls.Period Periodls, Sum(ls.Summa) Summa, Sum(ls.Kol) Kol, Sum(ls.Post) Post
    |	From #ls ls
	|	Inner join #NomHarMax NomHarMax	
    |	Inner join  #TovAss_sokr TovAss_sokr  on TovAss_sokr.id_tov=NomHarMax.id_tov and TovAss_sokr.id_tt=NomHarMax.id_tt and TovAss_sokr._Period=NomHarMax.Period
	|     on ls.id_tov=NomHarMax.id_tov and ls.id_tt=NomHarMax.id_tt and ls.Period=NomHarMax.periodls
	|   Inner join IzbenkaFin.._InfoRg393 as Proizv (nolock) 
	| 	Inner join IzbenkaFin.._Reference27 as Kontr (nolock)
	| 			On Proizv._Fld396_RRRef = Kontr._IDRRef
	| 	on  TovAss_sokr.har=Proizv._Fld394_RRRef and Proizv._Fld395RRef = 0x9B0FBEA8EE4FEDDB4CAF6656F51808B7
	
	
	|	group by TovAss_sokr.id_tov
    |	,TovAss_sokr.har, TovAss_sokr.Tovar,Kontr._fld1159,
	|	ls.Period
|-----------------------------------------------

	|SELECT id_tov ,id_kontr,  convert(decimal(15,2),sum(Summa+transp) / sum(kolvo))  Себест ,convert(decimal(15,2),sum(transp) / sum(kolvo)) Трансп
	|			,  convert(decimal(15,2),sum(SummUpakovka) / sum(kolvo)) [Стоимость Упак], convert(decimal(15,2),AVG(price)) [ЦенаЗакупки с НДС]
	|into #sebest_pr
	|FROM [Reports].[dbo].[Sebest_proizvod_old] sp with(nolock)
	|where date_r between @date1 and @date2	

	|group by  id_tov,id_kontr                                                
	|having sum(kolvo)>0
	
|-----------------------------------------------
    |Select
	|	
    |	ls.id_tov as id_tov
    |	,ls.har as har, ls.Tovar as Tovar,SprHar._fld6224 as idhar,
	|	ls.Periodls Periodls, (ls.Summa) Summa, (ls.Kol) Kol,(ls.post) post,
	|	round(case when ls.kol >0 then ls.summa / (1 + isnull(t.nds,0.18) ) /ls.kol - b.Себест end*isnull(ls.kol,0),1) Маржа
    |	From #TovAssHar ls
	|	Inner join #sebest_pr b on ls.id_tov=b.id_tov and  ls.id_kontr=b.id_kontr
	|	inner join M2..Tovari t on ls.id_tov=t.id_tov
	|	inner join IzbenkaFin.._Reference2539 as SprHar on SprHar._idrref=ls.har
	//|	inner join 
	//|	(Select  ls.id_tov as id_tov,  Sum(ls.Summa) Summa, Sum(ls.Kol) Kol
	//|	From #TovAssHar ls
	//|group by  ls.id_tov 
	//|) dtt  on ls.id_tov=dtt.id_tov
|";


	
	//СтрЗапрос = "SELECT * 
	//			  |  	  FROM IzbenkaFin.._Reference5118 (nolock)";

   	МасИДХар=Объект.Характеристики.Выгрузить().ВыгрузитьКолонку("ИДЭлемента");
	rs = ADOСоединение.Execute(СтрЗапрос);
	//ТЗ=Новый ТаблицаЗначений;
	//ТЗ.Колонки.Добавить("Место");
	//ТЗ.Колонки.Добавить("Сенсор");
	//ТЗ.Колонки.Добавить("Shop_name");
	//ТЗ.Колонки.Добавить("mest_name");
	//ТЗ.Колонки.Добавить("Ответ");
	//ТЗ.Колонки.Добавить("Дата");
	//ТЗ.Колонки.Добавить("is_made");                           
	//ТЗ.Колонки.Добавить("ShopNo");
	Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
		rs=rs.NextRecordSet();
	КонецЦикла;
	
	
	ТабДанныеСТТ = Новый ТаблицаЗначений();
	ТабДанныеСТТ.Колонки.Добавить("ХарИД"	, Новый ОписаниеТипов("Число"));
	ТабДанныеСТТ.Колонки.Добавить("Дата"		, Новый ОписаниеТипов("Дата"));
	//ТабДанные.Колонки.Добавить("ДатаОкончания"		, Новый ОписаниеТипов("Дата"));
	//

	//ТабДанные.Колонки.Добавить("Выручка"			, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ВыручкаОбщ"			, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("Оборот"			, Новый ОписаниеТипов("Число"));
	ТабДанныеСТТ.Колонки.Добавить("Маржа"			, Новый ОписаниеТипов("Число"));
	ТабДанныеСТТ.Колонки.Добавить("Выручка"			, Новый ОписаниеТипов("Число"));
	ТабДанныеСТТ.Колонки.Добавить("Количество"			, Новый ОписаниеТипов("Число"));
	ТабДанныеСТТ.Колонки.Добавить("Поступило"			, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ПроцентПродажСоСкидкойКВыручке"			, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ПроцентСписанийПоСрокуКВыручке"			, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ПроцентСписанийПоКачествуКВыручке"	, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ПовторныеПокупки"				, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ПокупкиОбщие"				, Новый ОписаниеТипов("Число"));
	//
	//ТабДанные.Колонки.Добавить("Частота"				, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("ПродажиСоСкидкой"				, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("СписанияПоСроку"				, Новый ОписаниеТипов("Число"));
	//ТабДанные.Колонки.Добавить("СписанияПоКачеству"				, Новый ОписаниеТипов("Число"));
	//ТабДанныеСТТ.Колонки.Добавить("id_tt"				, Новый ОписаниеТипов("Число"));
	                                                                                                 
	//Попытка
		rs.MoveFirst();
		//
		Сч=0;
		Пока НЕ rs.EOF() Цикл
			Сч=Сч+1;
			Если Сч=100 Тогда
			  //прервать;
		 	КонецЕсли; 
		    Если МасИДХар.Найти(Rs.Fields("idhar").Value)=Неопределено Тогда
				rs.MoveNext();
			    Продолжить;
			КонецЕсли; 
			СтрокаДоб = ТабДанныеСТТ.Добавить();
			//Если Rs.Fields("TovarUID").Value <> NULL Тогда
			//	СтрокаДоб.Номенклатура = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Rs.Fields("TovarUID").Value));
			//КонецЕсли;
			//Если Rs.Fields("TTUID").Value <> NULL Тогда
			//	СтрокаДоб.ТТ = Справочники.СтруктурныеЕдиницы.ПолучитьСсылку(Новый УникальныйИдентификатор(Rs.Fields("TTUID").Value));
			//КонецЕсли;
			//СтрокаДоб.Неделя=	(НачалоНедели(ТекущаяДата())-Rs.Fields("НачалоНедели").Value)/(7*24*60*60);
			СтрокаДоб.Дата=	(Rs.Fields("Periodls").Value);
			СтрокаДоб.ХарИД=	(Rs.Fields("idhar").Value);
			//СтрокаДоб.ДатаОкончания=	КонецНедели(Rs.Fields("НачалоНедели").Value);

			//
			//СтрокаДоб.Выручка = Rs.Fields("СредВыручка").Value;
			//СтрокаДоб.ВыручкаОбщ = Rs.Fields("Выручка").Value;
			//СтрокаДоб.Оборот = Rs.Fields("Оборот").Value;
			СтрокаДоб.Маржа = Rs.Fields("Маржа").Value;
			СтрокаДоб.Выручка = Rs.Fields("Summa").Value;
			СтрокаДоб.Количество = Rs.Fields("kol").Value;
			СтрокаДоб.Поступило = Rs.Fields("post").Value;
			//СтрокаДоб.id_tt = Rs.Fields("id_tt").Value;
			//СтрокаДоб.ПроцентПродажСоСкидкойКВыручке = 100*?(Rs.Fields("Выручка").Value=0,0,(Rs.Fields("СуммаСкидки").Value)/Rs.Fields("Выручка").Value);
			//СтрокаДоб.ПроцентСписанийПоСрокуКВыручке = 100*?(Rs.Fields("Выручка").Value=0,0,Rs.Fields("СписаниеСрок").Value/Rs.Fields("Выручка").Value);
			//СтрокаДоб.ПроцентСписанийПоКачествуКВыручке = 100*?(Rs.Fields("Выручка").Value=0,0,Rs.Fields("СписаниеКачество").Value/Rs.Fields("Выручка").Value);
			//СтрокаДоб.ПовторныеПокупки = Rs.Fields("ПовтПокупки").Value;
			//СтрокаДоб.ПокупкиОбщие = Rs.Fields("ПокупкиОбщие").Value;
			//СтрокаДоб.ПродажиСоСкидкой = Rs.Fields("СуммаСкидки").Value;
			//СтрокаДоб.СписанияПоСроку = Rs.Fields("СписаниеСрок").Value;
			//СтрокаДоб.СписанияПоКачеству = Rs.Fields("СписаниеКачество").Value;
			//СтрокаДоб.id_tov = Rs.Fields("id_tov").Value;
			//СтрокаДоб.Частота = Rs.Fields("частота").Value;
                                                                       
			//Сообщить(Rs.Fields("id_tov").Value);
			rs.MoveNext();
		КонецЦикла;
	//Исключение
	//КонецПопытки;
	
	ТабДанные=ТабДанныеСТТ;
	ТабДанные.Свернуть("Дата,ХарИД","Маржа,Выручка,Количество,Поступило");
	ТабДанные.Индексы.Добавить("Дата,ХарИД");
	//ТабДанныеСТТ.Индексы.Добавить("Дата,ХарИД");
	
    Для каждого Стр Из Объект.Характеристики Цикл
		МасСтр=ТабДанные.НайтиСтроки(Новый Структура("Дата,ХарИД",Стр.Период,Стр.ИДЭлемента));
		Если МасСтр.Количество() Тогда
			Стр.Выручка=МасСтр[0].Выручка;
			Стр.Маржа=МасСтр[0].Маржа;
			Стр.Количество=МасСтр[0].Количество;
			Стр.Поступило=МасСтр[0].Поступило;
		КонецЕсли; 
	КонецЦикла; 
	Кол=Объект.Характеристики.Количество();
	Для Сч=0 По Кол-1 Цикл
		Если Объект.Характеристики[Кол-1-Сч].Выручка=0 Тогда
			Объект.Характеристики.Удалить(Кол-1-Сч);	
		КонецЕсли; 
	КонецЦикла; 

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Характеристики.Период,
		|	Характеристики.Роль,
		|	Характеристики.Характеристика,
		|	Характеристики.Номенклатура,
		|	Характеристики.Маржа,
		|	Характеристики.Выручка
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	&Характеристики КАК Характеристики
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втХар.Роль,
		|	втХар.Характеристика,
		|	втХар.Номенклатура,
		|	СУММА(втХар.Маржа) КАК Маржа,
		|	СУММА(втХар.Выручка) КАК Выручка
		|ПОМЕСТИТЬ втХар
		|ИЗ
		|	вт КАК втХар
		|
		|СГРУППИРОВАТЬ ПО
		|	втХар.Роль,
		|	втХар.Характеристика,
		|	втХар.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втХар.Роль,
		|	втХар.Характеристика,
		|	втХар.Номенклатура,
		|	втХар.Маржа,
		|	втХар.Выручка,
		|	ВЫБОР
		|		КОГДА АналогиНоменклатурыТовары.Ссылка ЕСТЬ NULL
		|			ТОГДА втХар.Номенклатура
		|		ИНАЧЕ АналогиНоменклатурыТовары.Ссылка
		|	КОНЕЦ КАК Группа,
		|	ЗначенияСвойствОбъектов.Значение КАК Производитель
		|ПОМЕСТИТЬ втГруппы
		|ИЗ
		|	втХар КАК втХар
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|		ПО (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовхарактеристик.СвойстваОбъектов.Производитель))
		|			И втХар.Характеристика = ЗначенияСвойствОбъектов.Объект
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АналогиНоменклатуры.Товары КАК АналогиНоменклатурыТовары
		|		ПО втХар.Номенклатура = АналогиНоменклатурыТовары.Номенклатура
		|			И (НЕ АналогиНоменклатурыТовары.Ссылка.ПометкаУдаления)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втГруппы.Группа,
		|	СУММА(втГруппы.Выручка) КАК Выручка,
		|	втГруппы.Производитель,
		|	втГруппы.Роль
		|ПОМЕСТИТЬ втВыручкаПоПроизвод
		|ИЗ
		|	втГруппы КАК втГруппы
		|
		|СГРУППИРОВАТЬ ПО
		|	втГруппы.Группа,
		|	втГруппы.Производитель,
		|	втГруппы.Роль
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втГруппы.Группа,
		|	втГруппы.Производитель,
		|	втГруппы.Номенклатура,
		|	втГруппы.Характеристика
		|ПОМЕСТИТЬ втГруппыБезРолей
		|ИЗ
		|	втГруппы КАК втГруппы
		|
		|СГРУППИРОВАТЬ ПО
		|	втГруппы.Группа,
		|	втГруппы.Производитель,
		|	втГруппы.Номенклатура,
		|	втГруппы.Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втГруппы.Группа,
		|	СУММА(втГруппы.Выручка) КАК Выручка,
		|	втГруппы.Роль
		|ПОМЕСТИТЬ втВыручкаПоГруппе
		|ИЗ
		|	втГруппы КАК втГруппы
		|
		|СГРУППИРОВАТЬ ПО
		|	втГруппы.Группа,
		|	втГруппы.Роль
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втВыручкаПоПроизвод.Группа,
		|	втВыручкаПоПроизвод.Выручка,
		|	втВыручкаПоПроизвод.Производитель,
		|	втВыручкаПоПроизвод.Роль,
		|	ВЫБОР
		|		КОГДА втВыручкаПоГруппе.Выручка = 0
		|			ТОГДА 0
		|		ИНАЧЕ втВыручкаПоПроизвод.Выручка / втВыручкаПоГруппе.Выручка
		|	КОНЕЦ КАК Процент
		|ПОМЕСТИТЬ втДублиВсе
		|ИЗ
		|	втВыручкаПоПроизвод КАК втВыручкаПоПроизвод
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВыручкаПоГруппе КАК втВыручкаПоГруппе
		|		ПО втВыручкаПоПроизвод.Группа = втВыручкаПоГруппе.Группа
		|			И втВыручкаПоПроизвод.Роль = втВыручкаПоГруппе.Роль
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втВыручкаПоПроизвод.Группа,
		|	втВыручкаПоПроизвод.Выручка,
		|	втВыручкаПоПроизвод.Производитель,
		|	втВыручкаПоПроизвод.Роль,
		|	втВыручкаПоПроизвод.Процент
		|ПОМЕСТИТЬ втДубли
		|ИЗ
		|	втДублиВсе КАК втВыручкаПоПроизвод
		|ГДЕ
		|	втВыручкаПоПроизвод.Процент > &КритерийЗадвоения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втДубли.Группа,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втДубли.Производитель) КАК Производитель,
		|	втДубли.Роль
		|ПОМЕСТИТЬ втДублиИтог
		|ИЗ
		|	втДубли КАК втДубли
		|
		|СГРУППИРОВАТЬ ПО
		|	втДубли.Группа,
		|	втДубли.Роль
		|
		|ИМЕЮЩИЕ
		|	КОЛИЧЕСТВО(втДубли.Производитель) >= 2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ВЫБОР
		|			КОГДА ИсключительныеНовинки.ДатаПервогоПрихода ЕСТЬ NULL
		|				ТОГДА НАЧАЛОПЕРИОДА(ТоварыНаСкладах.Период, ДЕНЬ)
		|			ИНАЧЕ ИсключительныеНовинки.ДатаПервогоПрихода
		|		КОНЕЦ) КАК Период,
		|	втГруппы.Группа
		|ПОМЕСТИТЬ втДатыПоставкиВсе
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах КАК ТоварыНаСкладах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втГруппыБезРолей КАК втГруппы
		|		ПО ТоварыНаСкладах.Характеристика = втГруппы.Характеристика
		|			И ТоварыНаСкладах.Номенклатура = втГруппы.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ИсключительныеНовинки КАК ИсключительныеНовинки
		|		ПО ТоварыНаСкладах.Номенклатура = ИсключительныеНовинки.Номенклатура
		|
		|СГРУППИРОВАТЬ ПО
		|	втГруппы.Группа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втГруппы.Период,
		|	втГруппы.Группа
		|ПОМЕСТИТЬ втДатыПоставки
		|ИЗ
		|	втДатыПоставкиВсе КАК втГруппы
		|ГДЕ
		|	втГруппы.Период < &ДатаОтсчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втГруппы.Характеристика,
		|	втГруппы.Номенклатура,
		|	втГруппы.Роль
		|ИЗ
		|	втГруппы КАК втГруппы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДублиИтог КАК втДублиИтог
		|		ПО втГруппы.Группа = втДублиИтог.Группа
		|			И втГруппы.Роль = втДублиИтог.Роль
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	втГруппы.Характеристика,
		|	втГруппы.Номенклатура,
		|	втГруппы.Роль
		|ИЗ
		|	втГруппы КАК втГруппы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДатыПоставки КАК втДатыПоставки
		|		ПО втГруппы.Группа = втДатыПоставки.Группа
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	втГруппы.Характеристика,
		|	втГруппы.Номенклатура,
		|	втГруппы.Роль
		|ИЗ
		|	втГруппы КАК втГруппы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТоварыИсключенияНеТребующиеЗадвоения КАК ТоварыИсключенияНеТребующиеЗадвоения
		|		ПО втГруппы.Номенклатура = ТоварыИсключенияНеТребующиеЗадвоения.Номенклатура
		|			
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втГруппы.Характеристика,
		|	втГруппы.Номенклатура,
		|	втГруппы.Роль,
		|	втДатыПоставкиПоГруппам.Период,
		|	ВЫБОР
		|		КОГДА ДОБАВИТЬКДАТЕ(втДатыПоставкиПоГруппам.Период, ДЕНЬ, 30) МЕЖДУ &Дата1 И &Дата2
		|			ТОГДА ДОБАВИТЬКДАТЕ(втДатыПоставкиПоГруппам.Период, ДЕНЬ, 30)
		|		ИНАЧЕ ДОБАВИТЬКДАТЕ(втДатыПоставкиПоГруппам.Период, ДЕНЬ, 60)
		|	КОНЕЦ КАК ДатаОтсчета,
		|	ХарактеристикиНоменклатуры.ИДЭлемента,
		|	0 КАК Выручка,
		|	0 КАК Количество,
		|	0 КАК Месяц
		|ИЗ
		|	втГруппы КАК втГруппы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втДатыПоставкиВсе КАК втДатыПоставкиПоГруппам
		|		ПО втГруппы.Группа = втДатыПоставкиПоГруппам.Группа
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|		ПО втГруппы.Характеристика = ХарактеристикиНоменклатуры.Ссылка
		|ГДЕ
		|	(ДОБАВИТЬКДАТЕ(втДатыПоставкиПоГруппам.Период, ДЕНЬ, 30) МЕЖДУ &Дата1 И &Дата2
		|			ИЛИ ДОБАВИТЬКДАТЕ(втДатыПоставкиПоГруппам.Период, ДЕНЬ, 60) МЕЖДУ &Дата1 И &Дата2)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втДублиВсе.Роль,
		|	втДублиВсе.Процент,
		|	втГруппы.Характеристика,
		|	втГруппы.Номенклатура
		|ИЗ
		|	втДублиВсе КАК втДублиВсе
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втГруппы КАК втГруппы
		|		ПО втДублиВсе.Группа = втГруппы.Группа
		|			И втДублиВсе.Роль = втГруппы.Роль
		|			И втДублиВсе.Производитель = втГруппы.Производитель";
    Запрос.УстановитьПараметр("Характеристики",Объект.Характеристики.Выгрузить());
    Запрос.УстановитьПараметр("КритерийЗадвоения",КритерийЗадвоения/100);
    Запрос.УстановитьПараметр("ДатаОтсчета",ДобавитьМесяц(Объект.ДатаНачала,-3));
	Запрос.УстановитьПараметр("Дата2",КонецДня(Объект.ДатаОкончания));
	Запрос.УстановитьПараметр("Дата1",НачалоДня(Объект.ДатаНачала));

	Результат = Запрос.ВыполнитьПакет();
    ТЗ1 				= Результат[11].Выгрузить();
	ТЗ2 				= Результат[12].Выгрузить();
	ТЗПроценты 				= Результат[13].Выгрузить();
	МасНом=ТЗ2.ВыгрузитьКолонку("Номенклатура");
	
	//Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстаткиИОбороты.Номенклатура КАК Номенклатура,
		|	ТоварыНаСкладахОстаткиИОбороты.Характеристика КАК Характеристика,
		|	СУММА(ТоварыНаСкладахОстаткиИОбороты.КоличествоНачальныйОстаток) КАК КоличествоНачальныйОстаток,
		|	СтруктурныеЕдиницы.Ссылка.id_TT КАК id_tt,
		|	СтруктурныеЕдиницы.Ссылка КАК Получатель,
		|	ТоварыНаСкладахОстаткиИОбороты.Период КАК Период
		|ПОМЕСТИТЬ втОстатки
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.ОстаткиИОбороты(
		|			&Дата1,
		|			&Дата2,
		|			День,
		|			ДвиженияИГраницыПериода,
		|			Склад.ВидСклада = &Вид
		|				И Номенклатура В (&Номенклатура)) КАК ТоварыНаСкладахОстаткиИОбороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		|		ПО ТоварыНаСкладахОстаткиИОбороты.Склад = СтруктурныеЕдиницы.СкладТорговогоЗала
		|ГДЕ
		|	ТоварыНаСкладахОстаткиИОбороты.КоличествоНачальныйОстаток > 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ТоварыНаСкладахОстаткиИОбороты.Номенклатура,
		|	ТоварыНаСкладахОстаткиИОбороты.Характеристика,
		|	СтруктурныеЕдиницы.Ссылка.id_TT,
		|	СтруктурныеЕдиницы.Ссылка,
		|	ТоварыНаСкладахОстаткиИОбороты.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОстатки.Номенклатура,
		|	втОстатки.Период,
		|	втОстатки.Получатель,
		|	МАКСИМУМ(ТоварныйАссортиментТочек.Период) КАК ПериодАсс,
		|	втОстатки.id_tt
		|ПОМЕСТИТЬ втПериодыМакс
		|ИЗ
		|	втОстатки КАК втОстатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныйАссортиментТочек КАК ТоварныйАссортиментТочек
		|		ПО втОстатки.Получатель = ТоварныйАссортиментТочек.ТорговаяТочка
		|			И втОстатки.Номенклатура = ТоварныйАссортиментТочек.Номенклатура
		|			И втОстатки.Период >= ТоварныйАссортиментТочек.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	втОстатки.Номенклатура,
		|	втОстатки.Период,
		|	втОстатки.Получатель,
		|	втОстатки.id_tt
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втПериодыМакс.Номенклатура КАК Номенклатура,
		|	втПериодыМакс.Получатель КАК Получатель,
		|	втПериодыМакс.id_tt,
		|	втПериодыМакс.Период КАК Период,
		|	ТоварныйАссортиментТочек.Характеристика КАК Характеристика
		|ИЗ
		|	втПериодыМакс КАК втПериодыМакс
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныйАссортиментТочек КАК ТоварныйАссортиментТочек
		|		ПО втПериодыМакс.Номенклатура = ТоварныйАссортиментТочек.Номенклатура
		|			И втПериодыМакс.Получатель = ТоварныйАссортиментТочек.ТорговаяТочка
		|			И втПериодыМакс.ПериодАсс = ТоварныйАссортиментТочек.Период
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Получатель,
		|	Период";

	Запрос.УстановитьПараметр("Вид", Перечисления.ВидыСкладов.Розничный);
	Запрос.УстановитьПараметр("Дата1", Объект.ДатаНачала-6*24*60*60);
	Запрос.УстановитьПараметр("Дата2", КонецДня(Объект.ДатаОкончания));
	Запрос.УстановитьПараметр("Номенклатура", МасНом);
	
	Результат = Запрос.Выполнить();

	Остатки = Результат.Выгрузить();
	ТЗКопия=Остатки.СкопироватьКолонки();	
	Кол=Остатки.Количество();
	Для Сч=0 По Кол-1 Цикл
		Стр=Остатки[Сч];
		Если Стр.Период>=Объект.ДатаНачала-6*24*60*60 Тогда
			ДатаОтсчета=Стр.Период;	
		Иначе	
			ДатаОтсчета=Объект.ДатаНачала-6*24*60*60-24*60*60;	
		КонецЕсли; 
		Если Сч<Кол-1 Тогда
			Если Остатки[Сч+1].Характеристика=Стр.Характеристика И  Остатки[Сч+1].id_tt=Стр.id_tt Тогда
				ДатаДо=Остатки[Сч+1].Период-24*60*60;
			Иначе	
			    ДатаДо=Объект.ДатаОкончания;
			КонецЕсли;
		Иначе
			ДатаДо=Объект.ДатаОкончания;
		КонецЕсли; 
		
		Пока ДатаОтсчета<ДатаДо Цикл
			ДатаОтсчета=ДатаОтсчета+24*60*60;
			НовСтр=ТЗКопия.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр,Стр);
			НовСтр.Период=ДатаОтсчета;
		
		КонецЦикла;	
		
	КонецЦикла; 
	Для каждого Стр Из ТЗКопия Цикл
		НовСтр=Остатки.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,Стр);
	КонецЦикла; 
	
	
	
	//Остатки.Индексы.Добавить("Дата,Номенклатура");
	
	Запрос.Текст="ВЫБРАТЬ
	             |	РасходныйОрдерСкладТовары.Номенклатура,
	             |	СУММА(РасходныйОрдерСкладТовары.Количество) КАК Количество,
	             |	РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения КАК период,
	             |	РасходныйОрдерСкладТовары.Ссылка.Получатель,
	             |	РасходныйОрдерСкладТовары.Ссылка.Получатель.id_TT КАК id_tt,
	             |	РасходныйОрдерСкладТовары.Характеристика
	             |ИЗ
	             |	Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
	             |ГДЕ
	             |	РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения МЕЖДУ &Дата1 И &Дата2
	             |	И РасходныйОрдерСкладТовары.Ссылка.Проведен = ИСТИНА
	             |	И РасходныйОрдерСкладТовары.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.ВСборке)
	             |	И РасходныйОрдерСкладТовары.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийРасходСкладскойУчет.ОтгрузкаВТорговуюТочку)
	             |	И РасходныйОрдерСкладТовары.Номенклатура В(&Номенклатура)
	             |	И РасходныйОрдерСкладТовары.Количество > 0
	             |
	             |СГРУППИРОВАТЬ ПО
	             |	РасходныйОрдерСкладТовары.Ссылка.ДатаРаспределения,
	             |	РасходныйОрдерСкладТовары.Ссылка.Получатель,
	             |	РасходныйОрдерСкладТовары.Номенклатура,
	             |	РасходныйОрдерСкладТовары.Ссылка.Получатель.id_TT,
	             |	РасходныйОрдерСкладТовары.Характеристика";	
	Результат = Запрос.Выполнить();

	Отправлено = Результат.Выгрузить();
	
	
	НормативПродаж=СредняяВыручкаПриРасчетеБонусаТехнологаЗаНовинки;
	НормативПродажКол=СреднееКоличествоПродажПриРасчетеБонусаТехнологаЗаНовинки;
	ТЗНовинки=ТЗ2.СкопироватьКолонки();
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыСоСниженнымиЦенами.Номенклатура,
		|	ТоварыСоСниженнымиЦенами.Характеристика,
		|	ТоварыСоСниженнымиЦенами.ДатаСтартаПродаж
		|ИЗ
		|	РегистрСведений.ТоварыСоСниженнымиЦенами КАК ТоварыСоСниженнымиЦенами";

	Результат = Запрос.Выполнить();

	ТоварыСоСнижЦенами = Результат.Выгрузить();


	
	
	Для каждого Стр Из ТЗ2 Цикл
		МасДат=Новый Массив;
		МасДат.Добавить(Стр.ДатаОтсчета);
		МасДат.Добавить(Стр.ДатаОтсчета-24*60*60);
		МасДат.Добавить(Стр.ДатаОтсчета-2*24*60*60);
		МасДат.Добавить(Стр.ДатаОтсчета-3*24*60*60);
		МасДат.Добавить(Стр.ДатаОтсчета-4*24*60*60);
		МасДат.Добавить(Стр.ДатаОтсчета-5*24*60*60);
		МасДат.Добавить(Стр.ДатаОтсчета-6*24*60*60);
		
		МасТТ=Новый Массив;
		
		Выручка=0;
		КолПродаж=0;
		Для каждого Эл Из МасДат Цикл
			МасСтр=ТабДанные.НайтиСтроки(Новый Структура("Дата,ХарИД",Эл,Стр.ИДЭлемента));
			Если МасСтр.Количество() Тогда
				Выручка=Выручка+МасСтр[0].Выручка;
				КолПродаж=КолПродаж+МасСтр[0].Количество;
			КонецЕсли;
			
			МасСтр=Остатки.НайтиСтроки(Новый Структура("Период,Номенклатура,Характеристика",Эл,Стр.Номенклатура,Стр.Характеристика));
			Если МасСтр.Количество() Тогда
				Для каждого ЭлТТ Из МасСтр Цикл
					Если МасТТ.Найти(ЭлТТ.id_tt)=Неопределено Тогда
						МасТТ.Добавить(ЭлТТ.id_tt);
					КонецЕсли; 
				КонецЦикла; 
			КонецЕсли;
			МасСтр=Отправлено.НайтиСтроки(Новый Структура("Период,Номенклатура,характеристика",Эл,Стр.Номенклатура,Стр.Характеристика));
			Если МасСтр.Количество() Тогда
				Для каждого ЭлТТ Из МасСтр Цикл
					Если МасТТ.Найти(ЭлТТ.id_tt)=Неопределено Тогда
						МасТТ.Добавить(ЭлТТ.id_tt);
					КонецЕсли; 
				КонецЦикла; 
			КонецЕсли;
		КонецЦикла; 
		Если (МасТТ.Количество()>0 И (Выручка/МасТТ.Количество()>=НормативПродаж ИЛИ КолПродаж/МасТТ.Количество()>=НормативПродажКол)) Тогда
			НовСтр=ТЗНовинки.Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр,Стр);
			Месяц=?(Стр.ДатаОтсчета-Стр.Период=30*24*60*60,1,2);
			НовСтр.Месяц=Месяц;
			//Выр=0;
			//Кол=0;
			//МасСтр=Объект.Характеристики.НайтиСтроки(Новый Структура("Роль,Номенклатура,Характеристика",Стр.Роль,Стр.Номенклатура,Стр.Характеристика));
			//Если МасСтр.Количество() Тогда
			//	Для каждого Эл Из МасСтр Цикл
			//		Выр=Выр+Эл.Выручка;
			//		Кол=Кол+Эл.Количество;
			//	КонецЦикла; 
			//	НовСтр.Выручка=Выр;
			//	НовСтр.Количество=Кол;
			//КонецЕсли; 
		КонецЕсли; 

		
	КонецЦикла; 
	
	
	

	Объект.Задвоение.Загрузить(ТЗ1);
	Объект.Новинки.Загрузить(ТЗНовинки);
	

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КоэффициентыВключенийХарактеристик.КоличествоВключений КАК КоличествоВключений,
		|	КоэффициентыВключенийХарактеристик.Коэффициент
		|ИЗ
		|	РегистрСведений.КоэффициентыВключенийХарактеристик КАК КоэффициентыВключенийХарактеристик
		|
		|УПОРЯДОЧИТЬ ПО
		|	КоличествоВключений";

	Результат = Запрос.Выполнить();

	ТЗВключ = Результат.Выгрузить();

	
	
	Для каждого Стр Из Объект.Характеристики Цикл
		МасСтр=Объект.Задвоение.НайтиСтроки(Новый Структура("Роль,Номенклатура,Характеристика",Стр.Роль,Стр.Номенклатура,Стр.Характеристика));
		Если МасСтр.Количество() Тогда
			КЗадвоен=1;                              
		Иначе	
			КЗадвоен=КоэффициентЗадвоения;
		КонецЕсли; 
		Включений=0;
		МасСтр=Объект.Характеристики.НайтиСтроки(Новый Структура("Роль,Номенклатура,Характеристика",Стр.Роль,Стр.Номенклатура,Стр.Характеристика));
		Для каждого Эл Из МасСтр Цикл
			Включений=Включений+Эл.Обращений;
		КонецЦикла; 
		
		КВключ=1;
		Кол=ТЗВключ.Количество();
		Для Сч=0 По Кол-1 Цикл
			Если ТЗВключ[Сч].КоличествоВключений>Включений Тогда
				Если Сч>0 Тогда
					КВключ=ТЗВключ[Сч-1].Коэффициент;
					Прервать;
				КонецЕсли; 
			КонецЕсли; 
			Если Сч= Кол-1 Тогда
				КВключ=ТЗВключ[Сч].Коэффициент;
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
		КХолд=1;
		Если ЗначениеЗаполнено(Стр.Холдинг) И Стр.Холдинг <>Стр.Производитель Тогда
			МасСтр=Объект.ХарактеристикиВсе.НайтиСтроки(Новый Структура("Холдинг",Стр.Холдинг));
			МасХар=Новый Массив;
			Включений=0;
			Для каждого Эл Из  МасСтр Цикл
				Включений=Включений+Эл.Обращений;
				Если МасХар.Найти(Эл.Характеристика)=Неопределено Тогда
					МасХар.Добавить(Эл.Характеристика);
				КонецЕсли; 
			КонецЦикла; 
			Если МасХар.Количество()>0 Тогда
				КСрав=Включений/МасХар.Количество();
				Если КСрав>КоэффициентВключенияХолдинга Тогда
					КХолд=0;
				КонецЕсли; 
			КонецЕсли;                           
		КонецЕсли; 
		Стр.Бонус=Стр.Маржа*ПроцентОтМаржи/100*КЗадвоен*КВключ*КХолд;
		Стр.КоэффициентЗадвоения=КЗадвоен;               
		Стр.КоэффициентВключения=КВключ;
		Стр.КоэффициентВключенияХолдинг=КХолд;
		
		МасСтр=ТоварыСоСнижЦенами.НайтиСтроки(Новый Структура("Номенклатура,Характеристика",Стр.Номенклатура,Стр.Характеристика));
		Если МасСтр.Количество() Тогда
			Если  Стр.Период >=МасСтр[0].ДатаСтартаПродаж И Стр.Период <=ДобавитьМесяц(МасСтр[0].ДатаСтартаПродаж,1) Тогда
				Стр.БонусСнижениеЦен=Стр.Выручка*ПроцентБонусаТехнологаЗаНовинки/100;

			КонецЕсли;
		КонецЕсли;                                                                
		
		
		МасСтр=Объект.Новинки.НайтиСтроки(Новый Структура("Роль,Номенклатура,Характеристика",Стр.Роль,Стр.Номенклатура,Стр.Характеристика));
		Если МасСтр.Количество() Тогда
			Стр.БонусНовинки=Стр.Выручка*ПроцентБонусаТехнологаЗаНовинки/100;
			Стр.Месяц=МасСтр[0].Месяц;
		КонецЕсли; 
		
		МасСтр=ТЗПроценты.НайтиСтроки(Новый Структура("Роль,Номенклатура,Характеристика",Стр.Роль,Стр.Номенклатура,Стр.Характеристика));
		Если МасСтр.Количество() Тогда
			Стр.ПроцентОбъемаПродаж=МасСтр[0].Процент*100;                              
		КонецЕсли; 
		Мен=РегистрыСведений.РезультатыРасчетаБонусаТехнологов.СоздатьМенеджерЗаписи();
		Мен.ДатаНачала=Объект.ДатаНачала;
		Мен.ДатаОкончания=Объект.ДатаОкончания;
		ЗаполнитьЗначенияСвойств(Мен,Стр);
		Мен.Записать();
	КонецЦикла;  
	
	ТЗИтог=Объект.Характеристики.Выгрузить();
	ТЗИтог.Свернуть("Роль,Характеристика,Номенклатура,Холдинг,Производитель,КоэффициентЗадвоения,КоэффициентВключения,КоэффициентВключенияХолдинг,ПроцентОбъемаПродаж,Месяц","Маржа,Выручка,Количество,Обращений,Бонус,БонусНовинки,БонусСнижениеЦен");
	Объект.ХарактеристикиИтог.Загрузить(ТЗИтог);			
	Сообщить("Расчет завершен");
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьПривилегированныйРежим(Истина);
	КоэффициентВключенияХолдинга=Константы.КоэффициентВключенияХолдинга.Получить();
	
	КоэффициентВключенияХолдинга=Константы.КоэффициентВключенияХолдинга.Получить();
	Если КоэффициентВключенияХолдинга=0 Тогда
		КоэффициентВключенияХолдинга=1;
	КонецЕсли; 
	
	КоэффициентЗадвоения=Константы.КоэффициентЗадвоения.Получить();
	Если КоэффициентЗадвоения=0 Тогда
		КоэффициентЗадвоения=0.5;
	КонецЕсли; 
	
	КритерийЗадвоения=Константы.КритерийЗадвоения.Получить();
	Если КритерийЗадвоения=0 Тогда
		КритерийЗадвоения=5;
	КонецЕсли; 
	
	ПроцентБонусаТехнологаЗаНовинки=Константы.ПроцентБонусаТехнологаЗаНовинки.Получить();
	Если ПроцентБонусаТехнологаЗаНовинки=0 Тогда
		ПроцентБонусаТехнологаЗаНовинки=0.5;
	КонецЕсли; 
	
	ПроцентОтМаржи=Константы.ПроцентОтМаржи.Получить();
	Если ПроцентОтМаржи=0 Тогда
		ПроцентОтМаржи=0.1;
	КонецЕсли; 
	
	СреднееКоличествоПродажПриРасчетеБонусаТехнологаЗаНовинки=Константы.СреднееКоличествоПродажПриРасчетеБонусаТехнологаЗаНовинки.Получить();
	Если СреднееКоличествоПродажПриРасчетеБонусаТехнологаЗаНовинки=0 Тогда
		СреднееКоличествоПродажПриРасчетеБонусаТехнологаЗаНовинки=7;
	КонецЕсли; 
	
	СредняяВыручкаПриРасчетеБонусаТехнологаЗаНовинки=Константы.СредняяВыручкаПриРасчетеБонусаТехнологаЗаНовинки.Получить();
	Если СредняяВыручкаПриРасчетеБонусаТехнологаЗаНовинки=0 Тогда
		СредняяВыручкаПриРасчетеБонусаТехнологаЗаНовинки=700;
	КонецЕсли; 

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КоэффициентыВключенийХарактеристик.КоличествоВключений,
		|	КоэффициентыВключенийХарактеристик.Коэффициент
		|ИЗ
		|	РегистрСведений.КоэффициентыВключенийХарактеристик КАК КоэффициентыВключенийХарактеристик";

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Если ВыборкаДетальныеЗаписи.Количество()=0 Тогда
		Мен=РегистрыСведений.КоэффициентыВключенийХарактеристик.СоздатьМенеджерЗаписи();
		Мен.КоличествоВключений=0;
		Мен.Коэффициент =1;
		Мен.Записать();
		Мен=РегистрыСведений.КоэффициентыВключенийХарактеристик.СоздатьМенеджерЗаписи();
		Мен.КоличествоВключений=1;
		Мен.Коэффициент =0.5;
		Мен.Записать();
		Мен=РегистрыСведений.КоэффициентыВключенийХарактеристик.СоздатьМенеджерЗаписи();
		Мен.КоличествоВключений=2;
		Мен.Коэффициент =0.25;
		Мен.Записать();
		Мен=РегистрыСведений.КоэффициентыВключенийХарактеристик.СоздатьМенеджерЗаписи();
		Мен.КоличествоВключений=3;
		Мен.Коэффициент =0;
		Мен.Записать();
	КонецЕсли; 
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствиеОбъектРольСрезПоследних.РольПользователя
		|ИЗ
		|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = РолиПользователейСоставРоли.Ссылка
		|ГДЕ
		|	РолиПользователейСоставРоли.Сотрудник = &Сотрудник
		|	И РолиПользователейСоставРоли.Ссылка.ПометкаУдаления = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеОбъектРольСрезПоследних.РольПользователя";

	Запрос.УстановитьПараметр("Сотрудник", ПараметрыСеанса.ТекущийПользователь.ФизЛицо);
	Запрос.УстановитьПараметр("ТипРоли", ПланыВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКачеству);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
    ЭтоТехнолог=Ложь;
	РольТехнолога=Неопределено;
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ЭтоТехнолог=Истина;	
		РольТехнолога=ВыборкаДетальныеЗаписи.РольПользователя;
	КонецЕсли;
	
	Если (ЭтоТехнолог) И Не РольДоступна("ПолныеПрава") Тогда
		НовСтр=Объект.Роли.Добавить();
		НовСтр.Роль=РольТехнолога;
	    Элементы.Роли.ТолькоПросмотр=Истина;
		Элементы.Рассчитать.Доступность=Ложь;
		Элементы.ЗаписатьРезультатыВРегистр.Доступность=Ложь;
		Элементы.ГруппаНастройки.ТолькоПросмотр=Истина;

	Иначе
		
		НастройкиХран=ХранилищеОбщихНастроек.Загрузить("АКНастройкиРасчетаБонусовТехнологов");
		Если НастройкиХран<>Неопределено Тогда
			Настройки=НастройкиХран.Получить();
			Объект.роли.Загрузить(Настройки);
		КонецЕсли; 
	КонецЕсли; 
	
	СохранитьНастройкиСервер();	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройки(Команда)
	СохранитьНастройкиСервер();
КонецПроцедуры

Процедура СохранитьНастройкиСервер()
	УстановитьПривилегированныйРежим(Истина);
	Константы.КоэффициентВключенияХолдинга.Установить(КоэффициентВключенияХолдинга);
	
	Константы.КритерийЗадвоения.Установить(КритерийЗадвоения);
	
	Константы.ПроцентБонусаТехнологаЗаНовинки.Установить(ПроцентБонусаТехнологаЗаНовинки);
	
	Константы.ПроцентОтМаржи.Установить(ПроцентОтМаржи);
	
	Константы.СреднееКоличествоПродажПриРасчетеБонусаТехнологаЗаНовинки.Установить(СреднееКоличествоПродажПриРасчетеБонусаТехнологаЗаНовинки);
		
	Константы.СредняяВыручкаПриРасчетеБонусаТехнологаЗаНовинки.Установить(СредняяВыручкаПриРасчетеБонусаТехнологаЗаНовинки);
	ХранилищеОбщихНастроек.Сохранить("АКНастройкиРасчетаБонусовТехнологов",,Новый ХранилищеЗначения(Объект.Роли.Выгрузить()));
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	СохранитьНастройкиСервер();
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьРезультатыВРегистр(Команда)
	ЗаписатьРезультатыВРегистрСервер();	
КонецПроцедуры

Процедура ЗаписатьРезультатыВРегистрСервер()
	//ОчиститьРегистрСведенийЗарплатаПродавцов();	
	ТЗИтоги=Объект.Характеристики.Выгрузить();
	ТЗИтоги.Свернуть("Период,Роль","Бонус,БонусНовинки,БонусСнижениеЦен");
	
	Док=Документы.НачислениеПремииОфиснымРаботникам.СоздатьДокумент();
	Док.Дата=ТекущаяДата();
	Док.Утверждающий=Справочники.РолиПользователей.НайтиПоКоду("00134").СоставРоли[0].Сотрудник;
	Док.СуммаДокумента=ТЗИтоги.Итог("Бонус")+ТЗИтоги.Итог("БонусНовинки")+ТЗИтоги.Итог("БонусСнижениеЦен");
	Док.Ответственный=ПараметрыСеанса.ТекущийПользователь;
	Док.Комментарий="Бонус технолога";
	//
	Для каждого Стр Из Объект.Роли Цикл
		МасСтр=ТЗИтоги.НайтиСтроки(Новый Структура("Роль",Стр.Роль));
		Для каждого Эл Из МасСтр Цикл
			Для каждого СтрФЛ Из Стр.Роль.СоставРоли Цикл
				Премия=Эл.Бонус+Эл.БонусНовинки;
				
				НовСтр=Док.Состав.Добавить();
				НовСтр.ФизЛицо=СтрФЛ.Сотрудник;
				НовСтр.ДатаВыплаты=ТекущаяДата();
                НовСтр.Сумма=Премия;
                НовСтр.ВыплаченнаяСумма=Премия;
				
				//ПремияСНДФЛ = Премия/0.87;
				//
				//ТипРабот = Перечисления.ТипыРаботДляРасчетаЗП.БонусТехнолога;
				//
				//СтруктураДанных = ПолучитьСтруктуруПолей();
				//
				//СтруктураДанных.ДатаНачисления 	= Эл.Период;
				//СтруктураДанных.ФизЛицо 		= СтрФЛ.Сотрудник;
				////СтруктураДанных.ТорговаяТочка 	= Выборка.ТорговаяТочка;
				//СтруктураДанных.ТипРабот 		= ТипРабот;
				//
				//СтруктураДанных.Бонус 			= Окр(Премия	 , 2, РежимОкругления.Окр15как10);
				//СтруктураДанных.БонусСНДФЛ 		= Окр(ПремияСНДФЛ, 2, РежимОкругления.Окр15как10);
				//
				//ДобавитьЗаписьВРегистр_РасчетЗП(СтруктураДанных);
																	 
				
			
			КонецЦикла; 
		КонецЦикла; 
	КонецЦикла; 
	Док.Записать(РежимЗаписиДокумента.Проведение);	
	Сообщить(Строка(Док.Ссылка)+" сформирован");
КонецПроцедуры


Функция ПолучитьСтруктуруПолей()
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ДатаНачисления");
	СтруктураДанных.Вставить("ФизЛицо");
	СтруктураДанных.Вставить("ТорговаяТочка");
	СтруктураДанных.Вставить("ТипРабот");
	СтруктураДанных.Вставить("Выручка");
	СтруктураДанных.Вставить("Зарплата");
	СтруктураДанных.Вставить("Бонус");
	СтруктураДанных.Вставить("ЗарплатаСНДФЛ");
	СтруктураДанных.Вставить("БонусСНДФЛ");
	СтруктураДанных.Вставить("КлассТТ");
	СтруктураДанных.Вставить("КлассТТРасчетный");
	СтруктураДанных.Вставить("КлассПродавца");
	СтруктураДанных.Вставить("КоличествоПродавцов");
	СтруктураДанных.Вставить("КоличествоПродавцовПЧ");
	СтруктураДанных.Вставить("ПроцентБонуса");
	
	СтруктураДанных.Вставить("ПланПромо");
	//СтруктураДанных.Вставить("ФактПромо");
	СтруктураДанных.Вставить("ОбщаяПремияПромо");
	СтруктураДанных.Вставить("КоличествоСменПромо");
	СтруктураДанных.Вставить("ОбщееКоличествоСменПромо");
	
	СтруктураДанных.Вставить("Комментарий");
	
	Возврат СтруктураДанных;
	
КонецФункции


Процедура ДобавитьЗаписьВРегистр_РасчетЗП(СтруктураДанных)
	
	Запись = РегистрыСведений.ЗарплатаПродавцов.СоздатьМенеджерЗаписи();
	
	ЗаполнитьЗначенияСвойств(Запись, СтруктураДанных);
	
	Запись.Записать();
	
КонецПроцедуры

Процедура ОчиститьРегистрСведенийЗарплатаПродавцов()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗарплатаПродавцов.ДатаНачисления
	|ИЗ
	|	РегистрСведений.ЗарплатаПродавцов КАК ЗарплатаПродавцов
	|ГДЕ
	|	ЗарплатаПродавцов.ДатаНачисления МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ЗарплатаПродавцов.ТипРабот = Значение(Перечисление.ТипыРаботДляРасчетаЗП.БонусТехнолога)");
	
	Запрос.УстановитьПараметр("НачалоПериода", Объект.ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(Объект.ДатаОкончания));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий()Цикл
		Набор = РегистрыСведений.ЗарплатаПродавцов.СоздатьНаборЗаписей();
		Набор.Отбор.ДатаНачисления.Установить(Выборка.ДатаНачисления);
		Набор.Отбор.ТипРабот.Установить(Перечисления.ТипыРаботДляРасчетаЗП.БонусТехнолога);
		Набор.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	Объект.ДатаНачала=Период.ДатаНачала;
	Объект.ДатаОкончания=Период.ДатаОкончания;
	Объект.Характеристики.Очистить();
	Объект.ХарактеристикиИтог.Очистить();
	Объект.ХарактеристикиВсе.Очистить();
	
	
	
	ПериодПриИзмененииСервер();
КонецПроцедуры

Процедура ПериодПриИзмененииСервер()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РезультатыРасчетаБонусаТехнологов.Период КАК Период,
		|	РезультатыРасчетаБонусаТехнологов.ДатаНачала,
		|	РезультатыРасчетаБонусаТехнологов.ДатаОкончания,
		|	РезультатыРасчетаБонусаТехнологов.Роль КАК Роль,
		|	РезультатыРасчетаБонусаТехнологов.Номенклатура КАК Номенклатура,
		|	РезультатыРасчетаБонусаТехнологов.Характеристика КАК Характеристика,
		|	РезультатыРасчетаБонусаТехнологов.Маржа,
		|	РезультатыРасчетаБонусаТехнологов.Выручка,
		|	РезультатыРасчетаБонусаТехнологов.Количество,
		|	РезультатыРасчетаБонусаТехнологов.Обращений,
		|	РезультатыРасчетаБонусаТехнологов.Поступило,
		|	РезультатыРасчетаБонусаТехнологов.Бонус,
		|	РезультатыРасчетаБонусаТехнологов.БонусНовинки,
		|	РезультатыРасчетаБонусаТехнологов.БонусСнижениеЦен,
		|	РезультатыРасчетаБонусаТехнологов.ИДЭлемента,
		|	РезультатыРасчетаБонусаТехнологов.Холдинг,
		|	РезультатыРасчетаБонусаТехнологов.Производитель,
		|	РезультатыРасчетаБонусаТехнологов.КоэффициентЗадвоения,
		|	РезультатыРасчетаБонусаТехнологов.КоэффициентВключения,
		|	РезультатыРасчетаБонусаТехнологов.КоэффициентВключенияХолдинг,
		|	РезультатыРасчетаБонусаТехнологов.ПроцентОбъемаПродаж,
		|	РезультатыРасчетаБонусаТехнологов.Месяц
		|ИЗ
		|	РегистрСведений.РезультатыРасчетаБонусаТехнологов КАК РезультатыРасчетаБонусаТехнологов
		|ГДЕ
		|	РезультатыРасчетаБонусаТехнологов.ДатаНачала = &ДатаНачала
		|	И РезультатыРасчетаБонусаТехнологов.ДатаОкончания = &ДатаОкончания
		|	И РезультатыРасчетаБонусаТехнологов.Роль В(&Роль)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Роль,
		|	Номенклатура,
		|	Характеристика,
		|	Период";

	Запрос.УстановитьПараметр("ДатаНачала", Объект.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", Объект.ДатаОкончания);
	Запрос.УстановитьПараметр("Роль", Объект.Роли.Выгрузить().ВыгрузитьКолонку("Роль"));

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НовСтр=Объект.Характеристики.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,ВыборкаДетальныеЗаписи);
	КонецЦикла;
	ТЗИтог=Объект.Характеристики.Выгрузить();
	ТЗИтог.Свернуть("Роль,Характеристика,Номенклатура,Холдинг,Производитель,КоэффициентЗадвоения,КоэффициентВключения,КоэффициентВключенияХолдинг,ПроцентОбъемаПродаж,Месяц","Маржа,Выручка,Количество,Обращений,Бонус,БонусНовинки,БонусСнижениеЦен");
	Объект.ХарактеристикиИтог.Загрузить(ТЗИтог);	
КонецПроцедуры


&НаКлиенте
Процедура РолиРольНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуМодально("Обработка.РасчетБонусовТехнологов.Форма.ФормаВыбораРолей",,ЭтаФорма);
КонецПроцедуры

