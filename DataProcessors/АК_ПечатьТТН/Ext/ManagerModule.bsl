
Функция ДобавитьСтроку(знач т1, знач т2, Тел = "")
	
	т1=сокрлп(т1);
	т2=сокрлп(т2);
	Если т1="" тогда
		т1=Тел+т2;
	иначе
		если т2<>"" тогда
			т1=т1+", "+Тел+т2;
		КонецЕсли;
	КонецЕсли;
	
	возврат т1;
	
КонецФункции

&НаСервере
Функция ПолучитьСтруктуруПараметровТТН()
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Номер",			"");
	СтруктураПараметров.Вставить("Дата",			Дата(1,1,1));
	СтруктураПараметров.Вставить("Грузоотправитель","");
	СтруктураПараметров.Вставить("Грузоотправитель","");
	СтруктураПараметров.Вставить("Грузополучатель",	"");
	СтруктураПараметров.Вставить("ОтпускРазрешил",	"");
	СтруктураПараметров.Вставить("Автор",			"");
	СтруктураПараметров.Вставить("Должность",		"");
	СтруктураПараметров.Вставить("Организация",		"");
	СтруктураПараметров.Вставить("АвтомобильМарка",	"");
	СтруктураПараметров.Вставить("АвтомобильНомер",	"");
	СтруктураПараметров.Вставить("Заказчик",		"");
	СтруктураПараметров.Вставить("Водитель",		"");
	СтруктураПараметров.Вставить("ВидПеревозки",	"");
	СтруктураПараметров.Вставить("ПунктПогрузки",	"");
	СтруктураПараметров.Вставить("ПунктРазгрузки",	"");
	СтруктураПараметров.Вставить("Перевозчик",	"");
	СтруктураПараметров.Вставить("Расшифровка",	"");
	СтруктураПараметров.Вставить("Маршрут",	"");
	СтруктураПараметров.Вставить("ВсегоНаименований","");
	СтруктураПараметров.Вставить("ПрикрепленныеФайлыКоличество","");
	
	ТабТовары = Новый ТаблицаЗначений;
	СтруктураПараметров.Вставить("Товары", ТабТовары);
	
	Возврат СтруктураПараметров;
	
КонецФункции

Функция ПолучитьСтруктуруПараметровТЧ_ТТН(ДанныеТовара)
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ТоварКод",			Тип("Строка"));
	СтруктураПараметров.Вставить("ТоварНаименование",	Тип("Строка"));
	СтруктураПараметров.Вставить("ТоварЕдиница",		Тип("Строка"));
	СтруктураПараметров.Вставить("Количество",			Тип("Строка"));
	СтруктураПараметров.Вставить("КоличествоМест",		Тип("Строка"));
	СтруктураПараметров.Вставить("ВидУпаковки",			Тип("Строка"));
	СтруктураПараметров.Вставить("Цена",				Тип("Число"));
	СтруктураПараметров.Вставить("Масса",				Тип("Число"));
	
	Возврат СтруктураПараметров;
	
КонецФункции

Функция ПреобразоватьНомерДокВТекстНомераТТН(НомерДок)
	
	ТекстНомераТТН = "";
	ДлинаНомера = СтрДлина(НомерДок);
	Для н = 1 По ДлинаНомера Цикл
		Если Сред(НомерДок, н, 1) = "0"
				И НЕ н = ДлинаНомера Тогда
			ТекстНомераТТН = Сред(НомерДок, н + 1);
			Продолжить;
		КонецЕсли;

		Прервать;
	КонецЦикла;
	
	Возврат ТекстНомераТТН;
	
КонецФункции
	

Функция СформироватьПечатнуюФормуТТН(ТабДокумент, СтруктураПараметров, СНовойСтраницы)

	Если СНовойСтраницы Тогда
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();			
    КонецЕсли;
	
	Макет = Обработки.АК_ПечатьТТН.ПолучитьМакет("ТТН_1Т");
	
	ОбластьМакетаМаршрут          = Макет.ПолучитьОбласть("НаименованиеМаршрута");
	ОбластьМакетаШапка            = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаб");
	ОбластьМакетаСтрока           = Макет.ПолучитьОбласть("Строка");
	ОбластьМакетаИтогоПоСтранице  = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьМакетаПодвал           = Макет.ПолучитьОбласть("Подвал");
	
	ОбластьмакетаТранспортныйРаздел = Макет.ПолучитьОбласть("ТранспортныйРаздел");
	
	Если ЗначениеЗаполнено(СтруктураПараметров.Маршрут) тогда
		ОбластьМакетаМаршрут.Параметры.Маршрут = СтруктураПараметров.Маршрут;
		ТабДокумент.Вывести(ОбластьМакетаМаршрут);
	КонецЕсли;
	
	// Выводим общие реквизиты шапки
	ОбластьМакетаШапка.Параметры.Заполнить(СтруктураПараметров);
	ТекДата = СтруктураПараметров.Дата;
	ОбластьМакетаШапка.Параметры.ДатаДень	= Прав("0"	+ День(ТекДата)	, 2);
	ОбластьМакетаШапка.Параметры.ДатаМесяц  = Прав("0"	+ Месяц(ТекДата), 2);
	ОбластьМакетаШапка.Параметры.ДатаГод  	= Прав(""	+ Год(ТекДата)	, 2);
	
	ТабДокумент.Вывести(ОбластьМакетаШапка);

	// Инициализация счетчика страниц
	НомерСтраницы = 1;

	// Инициализация счетчика строк
	НомерСтроки     = 0;
	КоличествоСтрок = СтруктураПараметров.Товары.Количество();

	// Выводим заголовок многострочной части
	ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "№" + СтруктураПараметров.Номер + ", Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
	
	// Выводим многострочную часть документа
	Для Каждого ДанныеТовара Из СтруктураПараметров.Товары Цикл
		
		НомерСтроки = НомерСтроки + 1;

		ОбластьМакетаСтрока.Параметры.Заполнить(ДанныеТовара);
		
		// Проверим вывод
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(ОбластьМакетаСтрока);
		СтрокаСПодвалом.Добавить(ОбластьМакетаИтогоПоСтранице);
		Если НомерСтроки = КоличествоСтрок Тогда           // если последняя строка, должен
			 // помещаться и подвал документа
			СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
		КонецЕсли;

		#Если Клиент Тогда
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда	
		#Иначе	
		Если НЕ ФормированиеПечатныхФормСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
		#КонецЕсли
			Если КоличествоСтрок > 1 Тогда
				
				ТабДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);
				
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();			
				
				// Выведем заголовок таблицы
				НомерСтраницы = НомерСтраницы + 1;
				ОбластьМакетаЗаголовокТаблицы.Параметры.НомерСтраницы = "№"+СтруктураПараметров.Номер+", "+"Страница " + НомерСтраницы; 
				ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
				
			КонецЕсли;

		КонецЕсли;

		ТабДокумент.Вывести(ОбластьМакетаСтрока);

	КонецЦикла;

	ТабДокумент.Вывести(ОбластьМакетаИтогоПоСтранице);

	// Выводим подвал документа
	
	ОбластьМакетаПодвал.Параметры.Заполнить(СтруктураПараметров);
	ОбластьМакетаПодвал.Параметры.КоличествоЛистов	= НомерСтраницы;
	ОбластьМакетаПодвал.Параметры.КоличествоСтрок	= ЧислоПрописью(СтруктураПараметров.Товары.Количество(),, ",,,,,,,,0");;
	
	Факсимиле = Справочники.Факсимиле.НайтиПоРеквизиту("ФизЛицо", СтруктураПараметров.Автор);
	Если ЗначениеЗаполнено(Факсимиле) Тогда
	    КартинкаПодпись = Факсимиле.Подпись.Получить();
		Если ТипЗнч(КартинкаПодпись) = Тип("Картинка") Тогда
			ОбластьМакетаПодвал.Рисунки.КартинкаПодпись.Картинка = КартинкаПодпись; 
		КонецЕсли; 
	КонецЕсли; 
	
	
	ТабДокумент.Вывести(ОбластьМакетаПодвал);
	
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();			
	
	ОбластьмакетаТранспортныйРаздел.Параметры.Заполнить(СтруктураПараметров);
	ТабДокумент.Вывести(ОбластьмакетаТранспортныйРаздел);
	
	Возврат ТабДокумент;
	
КонецФункции

Процедура ПечатьОрдера(ТабличныйДокумент, МаршрутныйЛист, Ордер, МаршрутИзвестен, Вкусвилл, СНовойСтраницы
	//,КэшСертификатов
	)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЭтоРасходныйОрдер = (ТипЗнч(Ордер) = Тип("ДокументСсылка.РасходныйОрдерСклад"));
	
	СтруктураПараметров = ПолучитьСтруктуруПараметровТТН();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ордер"		, Ордер);
	Запрос.УстановитьПараметр("Вкусвилл"	, Вкусвилл);
	Запрос.УстановитьПараметр("ТекущаяДата"	, КонецДня(Ордер.Дата));
	Если МаршрутИзвестен Тогда
		Запрос.УстановитьПараметр("Автомобиль"	, МаршрутныйЛист.Автомобиль);
		Запрос.УстановитьПараметр("Водитель"	, МаршрутныйЛист.Водитель);
		Запрос.УстановитьПараметр("Перевозчик"	, МаршрутныйЛист.Перевозчик);
	КонецЕсли;
	
	Если ЭтоРасходныйОрдер Тогда
		
		Если НЕ МаршрутИзвестен Тогда
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	РасходныйОрдер.Номер КАК Номер,
			|	РасходныйОрдер.Дата КАК Дата,
			|	РасходныйОрдер.Склад.Владелец.Организация КАК Организация,
			|	РасходныйОрдер.Склад,
			|	РасходныйОрдер.Получатель КАК СтруктурнаяЕдиница,
			|	РасходныйОрдер.Склад.Владелец.Адрес КАК ГрузоотправительАдрес,
			|	РасходныйОрдер.Склад.Владелец.ТелефонныйНомер1 КАК ГрузоотправительТелефон1,
			|	РасходныйОрдер.Склад.Владелец.ТелефонныйНомер2 КАК ГрузоотправительТелефон2,
			|	РасходныйОрдер.Автор.ФизЛицо КАК Автор,
			|	РасходныйОрдер.Автор.ФизЛицо.Должность КАК Должность,
			|	РасходныйОрдер.Автор.ФизЛицо.Наименование КАК Расшифровка,
			|	РасходныйОрдер.Автомобиль.Марка КАК АвтомобильМарка,
			
			//+++АК BELN 2017.12.18 ИП-00017513
			//|	РасходныйОрдер.Автомобиль.Наименование КАК АвтомобильНомер,
			|	"""" КАК АвтомобильНомер,
			//---АК BELN 2017.12.18 
			|	РасходныйОрдер.Автомобиль.Перевозчик КАК Перевозчик,
			|	РасходныйОрдер.Автомобиль.Перевозчик КАК Поставщик,
			|	РасходныйОрдер.Водитель.Наименование КАК Водитель,
			|	РасходныйОрдер.Автомобиль.Перевозчик.ОсновнойБанковскийСчет КАК ПеревозчикСчет,
			|	РасходныйОрдер.Автомобиль.Перевозчик.НаименованиеПолное КАК ПеревозчикНаименование
			|ПОМЕСТИТЬ БазовыеДанные
			|ИЗ
			|	Документ.РасходныйОрдерСклад КАК РасходныйОрдер
			|ГДЕ
			|	РасходныйОрдер.Ссылка = &Ордер
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	СтруктурнаяЕдиница,
			|	Перевозчик";
		Иначе
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	РасходныйОрдер.Номер КАК Номер,
			|	РасходныйОрдер.Дата КАК Дата,
			|	РасходныйОрдер.Склад.Владелец.Организация КАК Организация,
			|	РасходныйОрдер.Склад,
			|	РасходныйОрдер.Получатель КАК СтруктурнаяЕдиница,
			|	РасходныйОрдер.Склад.Владелец.Адрес КАК ГрузоотправительАдрес,
			|	РасходныйОрдер.Склад.Владелец.ТелефонныйНомер1 КАК ГрузоотправительТелефон1,
			|	РасходныйОрдер.Склад.Владелец.ТелефонныйНомер2 КАК ГрузоотправительТелефон2,
			|	РасходныйОрдер.Автор.ФизЛицо КАК Автор,
			|	РасходныйОрдер.Автор.ФизЛицо.Должность КАК Должность,
			|	РасходныйОрдер.Автор.ФизЛицо.Наименование КАК Расшифровка,
			|	ЕСТЬNULL(СпрАвтомобили.Марка, """") КАК АвтомобильМарка,
			//+++АК BELN 2017.12.18 ИП-00017513
			//|	ЕСТЬNULL(СпрАвтомобили.Наименование, """") КАК АвтомобильНомер,
			|	"""" КАК АвтомобильНомер,
				//---АК BELN 2017.12.18 
			
			
			|	СпрПеревозчики.Ссылка КАК Перевозчик,
			|	СпрПеревозчики.Ссылка КАК Поставщик,
			|	ЕСТЬNULL(КонтактныеЛицаКонтрагентов.Наименование, """") КАК Водитель,
			|	СпрПеревозчики.ОсновнойБанковскийСчет КАК ПеревозчикСчет,
			|	ЕСТЬNULL(СпрПеревозчики.НаименованиеПолное, """") КАК ПеревозчикНаименование
			|ПОМЕСТИТЬ БазовыеДанные
			|ИЗ
			|	Документ.РасходныйОрдерСклад КАК РасходныйОрдер
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Автомобили КАК СпрАвтомобили
			|		ПО (СпрАвтомобили.Ссылка = &Автомобиль)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК СпрПеревозчики
			|		ПО (СпрПеревозчики.Ссылка = &Перевозчик)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаКонтрагентов КАК КонтактныеЛицаКонтрагентов
			|		ПО (КонтактныеЛицаКонтрагентов.Ссылка = &Водитель)
			|ГДЕ
			|	РасходныйОрдер.Ссылка = &Ордер
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	СтруктурнаяЕдиница,
			|	Перевозчик";
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница.Адрес КАК ГрузополучательАдрес,
		|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница.ТелефонныйНомер1 КАК ГрузополучательТелефон1,
		|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница.ТелефонныйНомер2 КАК ГрузополучательТелефон2,
		|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ЦФОСтруктурныхЕдиницСрезПоследних.Организация
		|ПОМЕСТИТЬ ЦФОСтруктурныхЕдиниц
		|ИЗ
		|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(
		|			&ТекущаяДата,
		|			СтруктурнаяЕдиница В
		|				(ВЫБРАТЬ
		|					БазовыеДанные.СтруктурнаяЕдиница
		|				ИЗ
		|					БазовыеДанные)) КАК ЦФОСтруктурныхЕдиницСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтруктурнаяЕдиница
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект КАК Поставщик,
		|	КонтактнаяИнформация.Представление КАК ГрузоотправительАдрес
		|ПОМЕСТИТЬ Контакт1
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Объект КАК Справочник.Контрагенты) В
		|			(ВЫБРАТЬ
		|				БазовыеДанные.Перевозчик
		|			ИЗ
		|				БазовыеДанные)
		|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
		|	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресКонтрагента)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Поставщик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект КАК Поставщик,
		|	КонтактнаяИнформация.Представление КАК ГрузоотправительТелефон1
		|ПОМЕСТИТЬ контакт2
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Объект КАК Справочник.Контрагенты) В
		|			(ВЫБРАТЬ
		|				БазовыеДанные.Перевозчик
		|			ИЗ
		|				БазовыеДанные)
		|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
		|	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Поставщик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(Контакт1.Поставщик, контакт2.Поставщик) КАК Поставщик,
		|	ЕСТЬNULL(Контакт1.ГрузоотправительАдрес, """") КАК ГрузоотправительАдрес,
		|	ЕСТЬNULL(контакт2.ГрузоотправительТелефон1, """") КАК ГрузоотправительТелефон1,
		|	"""" КАК ГрузоотправительТелефон2
		|ПОМЕСТИТЬ Контакты
		|ИЗ
		|	Контакт1 КАК Контакт1
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ контакт2 КАК контакт2
		|		ПО Контакт1.Поставщик = контакт2.Поставщик
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Поставщик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БазовыеДанные.Номер,
		|	БазовыеДанные.Дата,
		|	ЕСТЬNULL(ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница.Организация.НаименованиеСокращенное, """") КАК ГрузополучательОрганизация,
		|	ЕСТЬNULL(ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница.Адрес, """") КАК ГрузополучательАдрес,
		|	ЕСТЬNULL(ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница.ТелефонныйНомер1, """") КАК ГрузополучательТелефон1,
		|	ЕСТЬNULL(ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница.ТелефонныйНомер2, """") КАК ГрузополучательТелефон2,
		|	ЕСТЬNULL(Организации.НаименованиеСокращенное, """") КАК ГрузоотправительНаименование,
		|	БазовыеДанные.ГрузоотправительАдрес КАК ГрузоотправительАдрес,
		|	БазовыеДанные.ГрузоотправительТелефон1 КАК ГрузоотправительТелефон1,
		|	БазовыеДанные.ГрузоотправительТелефон2 КАК ГрузоотправительТелефон2,
		|	БазовыеДанные.Организация КАК Организация,
		|	БазовыеДанные.Склад,
		|	БазовыеДанные.Автор,
		|	БазовыеДанные.Должность,
		|	БазовыеДанные.Расшифровка,
		|	БазовыеДанные.АвтомобильМарка,
		//+++АК BELN 2017.12.18 ИП-00017513
		//|	БазовыеДанные.АвтомобильНомер,
		|	"""" КАК АвтомобильНомер,
			//---АК BELN 2017.12.18 
		|	БазовыеДанные.Водитель,
		|	ЕСТЬNULL(Контакты.ГрузоотправительАдрес, """") КАК ПеревозчикАдрес,
		|	ЕСТЬNULL(Контакты.ГрузоотправительТелефон1, """") КАК ПеревозчикТелефон1,
		|	ЕСТЬNULL(Контакты.ГрузоотправительТелефон2, """") КАК ПеревозчикТелефон2,
		|	БазовыеДанные.ПеревозчикНаименование,
		|	БазовыеДанные.ПеревозчикСчет,
		|	БазовыеДанные.Перевозчик
		|ИЗ
		|	БазовыеДанные КАК БазовыеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
		|		ПО (Организации.Ссылка = &Вкусвилл)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&ТекущаяДата, ) КАК ЦФОСтруктурныхЕдиницСрезПоследних
		|		ПО БазовыеДанные.СтруктурнаяЕдиница = ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница
		|		ЛЕВОЕ СОЕДИНЕНИЕ Контакты КАК Контакты
		|		ПО БазовыеДанные.Перевозчик = Контакты.Поставщик
		|ГДЕ
		|	Организации.Ссылка = &Вкусвилл";

	Иначе // приходный ордер
		
		Если НЕ МаршрутИзвестен Тогда
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ПриходныйОрдерСклад.Номер КАК Номер,
			|	ПриходныйОрдерСклад.Дата КАК Дата,
			|	ВЫРАЗИТЬ(ПриходныйОрдерСклад.Поставщик КАК Справочник.Контрагенты) КАК Поставщик,
			|	ПриходныйОрдерСклад.Склад.Владелец КАК СтруктурнаяЕдиница,
			|	ПриходныйОрдерСклад.Склад,
			|	ПриходныйОрдерСклад.Автор.ФизЛицо.Должность КАК Должность,
			|	ПриходныйОрдерСклад.Автор.ФизЛицо.Наименование КАК Расшифровка,
			|	ПриходныйОрдерСклад.Автор.ФизЛицо КАК Автор,
			|	ПриходныйОрдерСклад.Автомобиль.Марка,
			|	ПриходныйОрдерСклад.Автомобиль.Наименование КАК АвтомобильНомер,
			|	"""" КАК Водитель,
			|	ПриходныйОрдерСклад.Автомобиль.Перевозчик КАК Перевозчик,
			|	ПриходныйОрдерСклад.Автомобиль.Перевозчик.ОсновнойБанковскийСчет КАК ПеревозчикСчет,
			|	ПриходныйОрдерСклад.Автомобиль.Перевозчик.НаименованиеПолное КАК Перевозчикнаименование
			|ПОМЕСТИТЬ БазовыеДанные
			|ИЗ
			|	Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
			|ГДЕ
			|	ПриходныйОрдерСклад.Ссылка = &Ордер
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Поставщик,
			|	СтруктурнаяЕдиница";
		Иначе
			ТекстЗапроса = 
			"ВЫБРАТЬ
			|	ПриходныйОрдерСклад.Номер КАК Номер,
			|	ПриходныйОрдерСклад.Дата КАК Дата,
			|	ВЫРАЗИТЬ(ПриходныйОрдерСклад.Поставщик КАК Справочник.Контрагенты) КАК Поставщик,
			|	ПриходныйОрдерСклад.Склад.Владелец КАК СтруктурнаяЕдиница,
			|	ПриходныйОрдерСклад.Склад,
			|	ПриходныйОрдерСклад.Автор.ФизЛицо.Должность КАК Должность,
			|	ПриходныйОрдерСклад.Автор.ФизЛицо.Наименование КАК Расшифровка,
			|	ПриходныйОрдерСклад.Автор.ФизЛицо КАК Автор,
			|	ЕСТЬNULL(СпрАвтомобили.Марка, """") КАК АвтомобильМарка,
			|	ЕСТЬNULL(СпрАвтомобили.Наименование, """") КАК АвтомобильНомер,
			|	ЕСТЬNULL(КонтактныеЛицаКонтрагентов.Наименование, """") КАК Водитель,
			|	СпрПеревозчики.Ссылка КАК Перевозчик,
			|	СпрПеревозчики.ОсновнойБанковскийСчет КАК ПеревозчикСчет,
			|	ЕСТЬNULL(СпрПеревозчики.НаименованиеПолное, """") КАК Перевозчикнаименование
			|ПОМЕСТИТЬ БазовыеДанные
			|ИЗ
			|	Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Автомобили КАК СпрАвтомобили
			|		ПО (СпрАвтомобили.Ссылка = &Автомобиль)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК СпрПеревозчики
			|		ПО (СпрПеревозчики.Ссылка = &Перевозчик)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КонтактныеЛицаКонтрагентов КАК КонтактныеЛицаКонтрагентов
			|		ПО (КонтактныеЛицаКонтрагентов.Ссылка = &Водитель)
			|ГДЕ
			|	ПриходныйОрдерСклад.Ссылка = &Ордер
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Поставщик,
			|	СтруктурнаяЕдиница";
		КонецЕсли;
		ТекстЗапроса = ТекстЗапроса + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЦФОСтруктурныхЕдиниц.СтруктурнаяЕдиница.Адрес КАК ГрузополучательАдрес,
		|	ЦФОСтруктурныхЕдиниц.СтруктурнаяЕдиница.ТелефонныйНомер1 КАК ГрузополучательТелефон1,
		|	ЦФОСтруктурныхЕдиниц.СтруктурнаяЕдиница.ТелефонныйНомер2 КАК ГрузополучательТелефон2,
		|	ЦФОСтруктурныхЕдиниц.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	ЦФОСтруктурныхЕдиниц.Организация
		|ПОМЕСТИТЬ ЦФОСтруктурныхЕдиниц
		|ИЗ
		|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(
		|			&ТекущаяДата,
		|			СтруктурнаяЕдиница В
		|				(ВЫБРАТЬ
		|					БазовыеДанные.СтруктурнаяЕдиница
		|				ИЗ
		|					БазовыеДанные)) КАК ЦФОСтруктурныхЕдиниц
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СтруктурнаяЕдиница
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект КАК Поставщик,
		|	КонтактнаяИнформация.Представление КАК ГрузоотправительАдрес
		|ПОМЕСТИТЬ Контакт1
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Объект КАК Справочник.Контрагенты) В
		|			(ВЫБРАТЬ
		|				БазовыеДанные.Поставщик
		|			ИЗ
		|				БазовыеДанные)
		|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
		|	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресКонтрагента)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект,
		|	КонтактнаяИнформация.Представление
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Объект КАК Справочник.Контрагенты) В
		|			(ВЫБРАТЬ
		|				БазовыеДанные.Перевозчик
		|			ИЗ
		|				БазовыеДанные)
		|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
		|	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресКонтрагента)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Поставщик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект КАК Поставщик,
		|	КонтактнаяИнформация.Представление КАК ГрузоотправительТелефон1
		|ПОМЕСТИТЬ контакт2
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Объект КАК Справочник.Контрагенты) В
		|			(ВЫБРАТЬ
		|				БазовыеДанные.Поставщик
		|			ИЗ
		|				БазовыеДанные)
		|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
		|	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект,
		|	КонтактнаяИнформация.Представление
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Объект КАК Справочник.Контрагенты) В
		|			(ВЫБРАТЬ
		|				БазовыеДанные.Перевозчик
		|			ИЗ
		|				БазовыеДанные)
		|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
		|	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ТелефонКонтрагента)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Поставщик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(Контакт1.Поставщик, контакт2.Поставщик) КАК Поставщик,
		|	ЕСТЬNULL(Контакт1.ГрузоотправительАдрес, """") КАК ГрузоотправительАдрес,
		|	ЕСТЬNULL(контакт2.ГрузоотправительТелефон1, """") КАК ГрузоотправительТелефон1,
		|	"""" КАК ГрузоотправительТелефон2
		|ПОМЕСТИТЬ Контакты
		|ИЗ
		|	Контакт1 КАК Контакт1
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ контакт2 КАК контакт2
		|		ПО Контакт1.Поставщик = контакт2.Поставщик
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Поставщик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БазовыеДанные.Номер,
		|	БазовыеДанные.Дата,
		|	ЕСТЬNULL(ЦФОСтруктурныхЕдиниц.Организация.НаименованиеСокращенное, """") КАК ГрузополучательОрганизация,
		|	ЕСТЬNULL(ЦФОСтруктурныхЕдиниц.ГрузополучательАдрес, """") КАК ГрузополучательАдрес,
		|	ЕСТЬNULL(ЦФОСтруктурныхЕдиниц.ГрузополучательТелефон1, """") КАК ГрузополучательТелефон1,
		|	ЕСТЬNULL(ЦФОСтруктурныхЕдиниц.ГрузополучательТелефон2, """") КАК ГрузополучательТелефон2,
		|	БазовыеДанные.Поставщик.НаименованиеПолное КАК ГрузоотправительНаименование,
		|	ЕСТЬNULL(Контакты.ГрузоотправительАдрес, """") КАК ГрузоотправительАдрес,
		|	ЕСТЬNULL(Контакты.ГрузоотправительТелефон1, """") КАК ГрузоотправительТелефон1,
		|	ЕСТЬNULL(Контакты.ГрузоотправительТелефон2, """") КАК ГрузоотправительТелефон2,
		|	БазовыеДанные.Автор,
		|	БазовыеДанные.Должность,
		|	БазовыеДанные.Расшифровка,
		|	БазовыеДанные.АвтомобильМарка,
		|	БазовыеДанные.АвтомобильНомер,
		|	БазовыеДанные.Водитель,
		|	ЕСТЬNULL(Контакты1.ГрузоотправительАдрес, """") КАК ПеревозчикАдрес,
		|	ЕСТЬNULL(Контакты1.ГрузоотправительТелефон1, """") КАК ПеревозчикТелефон1,
		|	ЕСТЬNULL(Контакты1.ГрузоотправительТелефон2, """") КАК ПеревозчикТелефон2,
		|	БазовыеДанные.ПеревозчикСчет,
		|	БазовыеДанные.Перевозчикнаименование КАК ПеревозчикНаименование
		|ИЗ
		|	БазовыеДанные КАК БазовыеДанные
		|		ЛЕВОЕ СОЕДИНЕНИЕ ЦФОСтруктурныхЕдиниц КАК ЦФОСтруктурныхЕдиниц
		|		ПО БазовыеДанные.СтруктурнаяЕдиница = ЦФОСтруктурныхЕдиниц.СтруктурнаяЕдиница
		|		ЛЕВОЕ СОЕДИНЕНИЕ Контакты КАК Контакты
		|		ПО БазовыеДанные.Поставщик = Контакты.Поставщик
		|			И БазовыеДанные.Перевозчик = Контакты.Поставщик,
		|	Контакты КАК Контакты1";
			
		СтруктураПараметров.ПрикрепленныеФайлыКоличество 	= ЧислоПрописью(Ордер.ПрикрепленныеФайлы.Количество(),, ",,,,,,,,0");
		СтруктураПараметров.Видперевозки 					= "Доставка на склад";

	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(СтруктураПараметров, ВыборкаДетальныеЗаписи,
														"Номер, Дата, Автор, Должность, Расшифровка, АвтомобильМарка, АвтомобильНомер, Водитель");
		//АК БЕЛН 03.08.17+
		Если ЭтоРасходныйОрдер Тогда
			СтруктураПараметров.Водитель="";
		КонецЕсли;
	
		//АК БЕЛН 03.08.17-
		Грузоотправитель = ВыборкаДетальныеЗаписи.ГрузоотправительНаименование;
		Грузоотправитель = ДобавитьСтроку(Грузоотправитель, ВыборкаДетальныеЗаписи.ГрузоотправительАдрес);
		Грузоотправитель = ДобавитьСтроку(Грузоотправитель, ВыборкаДетальныеЗаписи.ГрузоотправительТелефон1, "т. ");
		Грузоотправитель = ДобавитьСтроку(Грузоотправитель, ВыборкаДетальныеЗаписи.ГрузоотправительТелефон2, "т. ");
		
		СтруктураПараметров.Грузоотправитель = Грузоотправитель;
		
		Грузополучатель = ВыборкаДетальныеЗаписи.ГрузополучательОрганизация;
		Грузополучатель = ДобавитьСтроку(Грузополучатель, ВыборкаДетальныеЗаписи.ГрузополучательАдрес);
		Грузополучатель = ДобавитьСтроку(Грузополучатель, ВыборкаДетальныеЗаписи.ГрузополучательТелефон1, "т. ");
		Грузополучатель = ДобавитьСтроку(Грузополучатель, ВыборкаДетальныеЗаписи.ГрузополучательТелефон1, "т. ");
		
		СтруктураПараметров.Грузополучатель = Грузополучатель;
		
		ПунктПогрузки = ВыборкаДетальныеЗаписи.ГрузоотправительАдрес;
		ПунктПогрузки = ДобавитьСтроку(ПунктПогрузки, ВыборкаДетальныеЗаписи.ГрузоотправительТелефон1,  "т. ");
		ПунктПогрузки = ДобавитьСтроку(ПунктПогрузки, ВыборкаДетальныеЗаписи.ГрузоотправительТелефон2, "т. ");
		
		СтруктураПараметров.ПунктПогрузки = ПунктПогрузки;
		
		ПунктРазгрузки = ВыборкаДетальныеЗаписи.ГрузополучательАдрес;
		ПунктРазгрузки = ДобавитьСтроку(ПунктРазгрузки, ВыборкаДетальныеЗаписи.ГрузополучательТелефон1, "т. ");
		ПунктРазгрузки = ДобавитьСтроку(ПунктРазгрузки, ВыборкаДетальныеЗаписи.ГрузополучательТелефон1, "т. ");
		
		СтруктураПараметров.ПунктРазгрузки = ПунктРазгрузки;
		
		Перевозчик = ВыборкаДетальныеЗаписи.ПеревозчикНаименование;
		Перевозчик = ДобавитьСтроку(Перевозчик, ВыборкаДетальныеЗаписи.ПеревозчикАдрес);
		Перевозчик = ДобавитьСтроку(Перевозчик, ВыборкаДетальныеЗаписи.ПеревозчикТелефон1, "т. ");
		Перевозчик = ДобавитьСтроку(Перевозчик, ВыборкаДетальныеЗаписи.ПеревозчикТелефон2, "т. ");
		
		БанковскийСчет = ВыборкаДетальныеЗаписи.ПеревозчикСчет;
		Если ЗначениеЗаполнено(БанковскийСчет) Тогда
			
			Если ПустаяСтрока(БанковскийСчет.ТекстКорреспондента) Тогда
				
				Если ЗначениеЗаполнено(БанковскийСчет.БанкДляРасчетов) Тогда
					СчетТекст = "р/с " + БанковскийСчет.НомерСчета + " в " + БанковскийСчет.Банк + " " + БанковскийСчет.Банк.Город;
				Иначе
					СчетТекст = "";
				КонецЕсли;	
			Иначе
				СчетТекст = БанковскийСчет.ТекстКорреспондента;
			КонецЕсли;
			
			Перевозчик = ДобавитьСтроку(Перевозчик,СчетТекст);

		КонецЕсли;
	
		СтруктураПараметров.Перевозчик 	= Перевозчик;
		
		СтруктураПараметров.Маршрут		= МаршрутныйЛист.Маршрут;
		
		Запрос.УстановитьПараметр("ТекущийДокумент"	, Ордер);
		Запрос.УстановитьПараметр("Сетка"			, "Сетка");
		Запрос.УстановитьПараметр("Коробка"			, "Коробка");
		
		Если ЭтоРасходныйОрдер Тогда
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Товары.Номенклатура,
			|	ВЫРАЗИТЬ(Товары.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
			|	Товары.Номенклатура.Код КАК ТоварКод,
			|	Товары.Характеристика КАК Характеристика,
			|	ВЫРАЗИТЬ("""" КАК СТРОКА(200)) КАК Сертификаты,
			|	Товары.Количество,
			|	Товары.Количество КАК КоличествоМест,
			|	ПРЕДСТАВЛЕНИЕ(Товары.ЕдиницаИзмерения) КАК ТоварЕдиница,
			|	ВЫБОР
			|		КОГДА Товары.Номенклатура.БезУпаковки
			|			ТОГДА &Сетка
			|		ИНАЧЕ &Коробка
			|	КОНЕЦ КАК ВидУпаковки,
			|	Товары.Количество * Товары.ЕдиницаИзмерения.Вес / 1000 КАК Масса,
			|	Товары.ДатаПроизводства,
			|	Товары.Номенклатура.ТребуетсяВетеринарныйСертификат КАК ТребуетсяВетеринарныйСертификат,
			|	Товары.НомерСтроки
			|ПОМЕСТИТЬ ТабличнаяЧасть
			|ИЗ
			|	Документ.РасходныйОрдерСклад.Товары КАК Товары
			|ГДЕ
			|	Товары.Ссылка = &ТекущийДокумент
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТабличнаяЧасть.Номенклатура
			|ИЗ
			|	ТабличнаяЧасть КАК ТабличнаяЧасть
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТабличнаяЧасть.Номенклатура,
			|	ТабличнаяЧасть.ТоварНаименование,
			|	ТабличнаяЧасть.ТоварКод,
			|	ТабличнаяЧасть.Характеристика,
			|	ТабличнаяЧасть.Сертификаты,
			|	ТабличнаяЧасть.Количество,
			|	ТабличнаяЧасть.КоличествоМест,
			|	ТабличнаяЧасть.ТоварЕдиница,
			|	ТабличнаяЧасть.ВидУпаковки,
			|	ТабличнаяЧасть.Масса,
			|	ТабличнаяЧасть.ДатаПроизводства,
			|	ТабличнаяЧасть.ТребуетсяВетеринарныйСертификат,
			|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки
			|ИЗ
			|	ТабличнаяЧасть КАК ТабличнаяЧасть
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
		Иначе
			ТекстЗапроса =
			"ВЫБРАТЬ
			|	Товары.НомерСтроки,
			|	Товары.Номенклатура,
			|	ВЫРАЗИТЬ(Товары.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
			|	Товары.Номенклатура.Код КАК ТоварКод,
			|	Товары.Характеристика КАК Характеристика,
			|	ВЫРАЗИТЬ("""" КАК СТРОКА(200)) КАК Сертификаты,
			|	Товары.Количество,
			|	Товары.КоличествоКоробок КАК КоличествоМест,
			|	ПРЕДСТАВЛЕНИЕ(Товары.ЕдиницаИзмерения) КАК ТоварЕдиница,
			|	ВЫБОР
			|		КОГДА Товары.Номенклатура.БезУпаковки
			|			ТОГДА &Сетка
			|		ИНАЧЕ &Коробка
			|	КОНЕЦ КАК ВидУпаковки,
			|	Товары.Количество * Товары.ЕдиницаИзмерения.Вес / 1000 КАК Масса,
			|	Товары.ДатаПроизводства,
			|	Товары.Номенклатура.ТребуетсяВетеринарныйСертификат КАК ТребуетсяВетеринарныйСертификат
			|ПОМЕСТИТЬ ТабличнаяЧасть
			|ИЗ
			|	Документ.ПриходныйОрдерСклад.Товары КАК Товары
			|ГДЕ
			|	Товары.Ссылка = &ТекущийДокумент
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВетСвидетельстваПоступлений.ДанныеВетСвидетельствСерия КАК Серия,
			|	ВетСвидетельстваПоступлений.ДанныеВетСвидетельствНомер КАК Номер
			|ИЗ
			|	РегистрСведений.ВетСвидетельстваПоступлений КАК ВетСвидетельстваПоступлений
			|ГДЕ
			|	ВетСвидетельстваПоступлений.ДокПоступления = &ТекущийДокумент
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТабличнаяЧасть.Номенклатура
			|ИЗ
			|	ТабличнаяЧасть КАК ТабличнаяЧасть
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
			|	ТабличнаяЧасть.Номенклатура,
			|	ТабличнаяЧасть.ТоварНаименование,
			|	ТабличнаяЧасть.ТоварКод,
			|	ТабличнаяЧасть.Характеристика,
			|	ТабличнаяЧасть.Сертификаты,
			|	ТабличнаяЧасть.Количество,
			|	ТабличнаяЧасть.КоличествоМест,
			|	ТабличнаяЧасть.ТоварЕдиница,
			|	ТабличнаяЧасть.ВидУпаковки,
			|	ТабличнаяЧасть.Масса,
			|	ТабличнаяЧасть.ДатаПроизводства,
			|	ТабличнаяЧасть.ТребуетсяВетеринарныйСертификат
			|ИЗ
			|	ТабличнаяЧасть КАК ТабличнаяЧасть
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки";
		КонецЕсли;
		
		Запрос.Текст = ТекстЗапроса;
		
		Запросы = Запрос.ВыполнитьПакет();
		РазмерПакета = Запросы.Количество();
		//РазмерПакета-1 - табличная часть
		//РазмерПакета-2 - выборка номенклатуры
		//РазмерПакета-3 - для приходных ордеров вет.свидетельства
		
		СтруктураПараметров.ВсегоНаименований = ЧислоПрописью(Запросы[РазмерПакета - 2].Выгрузить().Количество(),, ",,,,,,,,0");
		
		Если НЕ ЭтоРасходныйОрдер Тогда
			//получим вет. свидетельства
			ВетСвидетельства = Запросы[РазмерПакета - 3].Выгрузить();
			ВетСвидетельстваТекст = "";
			Для Каждого СтрокаСвидетельства из ВетСвидетельства цикл
				ВетСвидетельстваТекст = ВетСвидетельстваТекст + ", " + СтрокаСвидетельства.Серия + "№" + СтрокаСвидетельства.Номер;
			конеццикла;
			ВетСвидетельстваТекст = Сред(ВетСвидетельстваТекст, 3);
		КонецЕсли;
		
		//резерв на случай необходимости оптимизации
		//СтруктураПоискаСертификатов=Новый Структура;
		
		СтруктураПараметров.Вставить("Товары", Запросы[РазмерПакета - 1].Выгрузить());
		Для Каждого СтрокаТовара Из СтруктураПараметров.Товары Цикл
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("ДействуетДо"		, СтруктураПараметров.Дата);
			Запрос.УстановитьПараметр("Номенклатура"	, СтрокаТовара.Номенклатура);
			Запрос.УстановитьПараметр("Характеристика"	, СтрокаТовара.Характеристика);
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	СертификатыНаПродукцию.РегистрационныйНомер,
			|	СертификатыНаПродукцию.ДействуетДо
			|ИЗ
			|	РегистрСведений.СертификатыНаПродукцию КАК СертификатыНаПродукцию
			|ГДЕ
			|	СертификатыНаПродукцию.ДействуетДо >= &ДействуетДо
			|	И СертификатыНаПродукцию.Номенклатура = &Номенклатура
			|	И СертификатыНаПродукцию.Характеристика = &Характеристика
			|	И СертификатыНаПродукцию.Удален = Ложь
			|
			|УПОРЯДОЧИТЬ ПО
			|	СертификатыНаПродукцию.ДействуетДо УБЫВ";
			Результат = Запрос.Выполнить();
			ВыборкаДетальныеЗаписи = Результат.Выбрать();

			//резерв на случай необходимости оптимизации
			//СтруктураПоискаСертификатов.Вставить("Номенклатура", СтрокаТовара.Номенклатура);
			//СтруктураПоискаСертификатов.Вставить("Характеристика", СтрокаТовара.Характеристика);
			//СтруктураПоискаСертификатов.Вставить("Дата", СтруктураПараметров.Дата);
			//
			//СтрокиСертификатов=КэшСертификатов.НайтиСтроки(СтруктураПоискаСертификатов);
			//
			//ПоискСертификатовВсего=ПоискСертификатовВсего+1;
			
			//Если СтрокиСертификатов.Количество()>0 Тогда
			//	Сертификаты=СтрокиСертификатов[0].Сертификаты;
			//	ПоискСертификатовВсегоУспех=ПоискСертификатовВсегоУспех+1;
			//иначе
			Сертификаты = "";
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				РегНомер = ВРег(ВыборкаДетальныеЗаписи.РегистрационныйНомер);
				Поз=Найти(РегНомер,";");
				Если Поз=0 тогда
					Сертификаты=Сертификаты+", "+РегНомер;
				иначе
					Пока Поз>0 цикл
						Серт=Сокрлп(лев(РегНомер,Поз-1));
						Если Серт<>"" тогда
							Для Маркер=1 по 10 цикл
								МаркерТекст=формат(Маркер,"ЧГ=0");
								Серт=СтрЗаменить(Серт,"("+МаркерТекст+")"," ");
								Серт=СтрЗаменить(Серт,"_"+МаркерТекст," ");
								Серт=СтрЗаменить(Серт,"-"+МаркерТекст," ");
								Серт=СтрЗаменить(Серт,".PAGE"+МаркерТекст," ");
								Серт=СтрЗаменить(Серт," "+МаркерТекст+".",".");
								Серт=сокрлп(Серт);
							КонецЦикла;
							Серт=СтрЗаменить(Серт,"_.",".");
							Серт=СтрЗаменить(Серт,".JPG","");
							Серт=СтрЗаменить(Серт,".PNG","");
							Серт=СтрЗаменить(Серт,".JPEG","");
							Серт=Сокрлп(Серт);
							Если Найти(Сертификаты,Серт)=0 тогда
								Сертификаты=Сертификаты+", "+Серт;
							КонецЕсли;
						КонецЕсли;
						РегНомер=сред(РегНомер,Поз+1);
						Поз=Найти(РегНомер,";");
					КонецЦикла;
				конецесли;
			КонецЦикла;
			
			Сертификаты = ВРег(Сертификаты);
			
			Если СтрокаТовара.ТребуетсяВетеринарныйСертификат тогда
				
				Если ЭтоРасходныйОрдер тогда
			
					ДатаПроизводства = СтрокаТовара.ДатаПроизводства;
					Если НЕ ЗначениеЗаполнено(ДатаПроизводства) Тогда
						ДатаПроизводства = СтруктураПараметров.Дата;
					конецесли;
					
					Запрос.УстановитьПараметр("ДатаПроизводства", ДатаПроизводства);
					Запрос.Текст = 
					"ВЫБРАТЬ
					|	ПриходныйОрдерСкладТовары.Номенклатура КАК Номенклатура,
					|	ПриходныйОрдерСкладТовары.Характеристика КАК Характеристика,
					|	ПриходныйОрдерСкладТовары.Ссылка КАК Ссылка
					|ПОМЕСТИТЬ ПриходныеОрдераВыборкаВозможных
					|ИЗ
					|	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
					|ГДЕ
					|	ПриходныйОрдерСкладТовары.Номенклатура = &Номенклатура
					|	И ПриходныйОрдерСкладТовары.Ссылка.Проведен
					|	И ПриходныйОрдерСкладТовары.Характеристика = &Характеристика
					|	И ПриходныйОрдерСкладТовары.Ссылка.Дата < &ДатаПроизводства
					|
					|ИНДЕКСИРОВАТЬ ПО
					|	Номенклатура,
					|	Характеристика,
					|	Ссылка
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
					|	ВетСвидетельстваПоступлений.ДанныеВетСвидетельствСерия КАК Серия,
					|	ВетСвидетельстваПоступлений.ДанныеВетСвидетельствНомер КАК Номер,
					|	ВетСвидетельстваПоступлений.ДанныеВетСвидетельствДата КАК Дата,
					|	ПриходныеОрдераВыборкаВозможных.Ссылка КАК Ссылка
					|ИЗ
					|	РегистрСведений.ВетСвидетельстваПоступлений КАК ВетСвидетельстваПоступлений
					|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПриходныеОрдераВыборкаВозможных КАК ПриходныеОрдераВыборкаВозможных
					|		ПО ВетСвидетельстваПоступлений.ДокПоступления = ПриходныеОрдераВыборкаВозможных.Ссылка
					|ГДЕ
					|	ВетСвидетельстваПоступлений.ДокПоступления В
					|			(ВЫБРАТЬ
					|				ПриходныеОрдераВыборкаВозможных.Ссылка
					|			ИЗ
					|				ПриходныеОрдераВыборкаВозможных)
					|	И ВетСвидетельстваПоступлений.ДанныеВетСвидетельствДата <= &ДатаПроизводства
					|
					|УПОРЯДОЧИТЬ ПО
					|	ВетСвидетельстваПоступлений.ДанныеВетСвидетельствДата УБЫВ,
					|	Ссылка
					|ИТОГИ ПО
					|	Дата,
					|	Ссылка
					|АВТОУПОРЯДОЧИВАНИЕ";

					Результат = Запрос.Выполнить();

					ВыборкаДанныеВетСвидетельствДата = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

					Если ВыборкаДанныеВетСвидетельствДата.Следующий() Тогда

						ВыборкаСсылка = ВыборкаДанныеВетСвидетельствДата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

						Если ВыборкаСсылка.Следующий() Тогда 
							
							ВыборкаДетальныеЗаписи = ВыборкаСсылка.Выбрать();

							Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
								Сертификаты = Сертификаты + ", " + ВыборкаДетальныеЗаписи.Серия + "№" + ВыборкаДетальныеЗаписи.Номер;
							КонецЦикла;
						КонецЕсли;;
					КонецЕсли;;
					
				Иначе
					Сертификаты = Сертификаты + ", " + ВетСвидетельстваТекст;
				КонецЕсли;
				
			КонецЕсли;
				
				//резерв на случай необходимости оптимизации
				//СтрокаСертификата=КэшСертификатов.Добавить();
				//ЗаполнитьЗначенияСвойств(СтрокаСертификата,СтруктураПоискаСертификатов);
				//СтрокаСертификата.Сертификаты=Сертификаты;
			//КонецЕсли;
			
			СтрокаТовара.Сертификаты = Сред(Сертификаты, 3);
		конеццикла;
		
		//
		СформироватьПечатнуюФормуТТН(ТабличныйДокумент, СтруктураПараметров, СНовойСтраницы);
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

Функция Печать1Т(ТабличныйДокумент, МассивДокументов)
	
	Если МассивДокументов.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИНН", "7734675810");
	Запрос.УстановитьПараметр("КПП", "773401001");
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Организации.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ИНН = &ИНН
	|	И Организации.КПП = &КПП
	|	И НЕ Организации.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ";
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Вкусвилл = ВыборкаДетальныеЗаписи.Ссылка;
	иначе
		Вкусвилл = Справочники.Организации.ПустаяСсылка();
	КонецЕсли;

	//
	Запрос = Новый Запрос;
	Запрос.Параметры.Вставить("МассивДокументов", МассивДокументов);
	
	Если ТипЗнч(МассивДокументов) = Тип("ДокументСсылка.МаршрутныйЛист")
			ИЛИ ТипЗнч(МассивДокументов[0]) = Тип("ДокументСсылка.МаршрутныйЛист") Тогда

		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	МаршрутныйЛистРасходныеОрдера.Ссылка КАК МаршрутныйЛист,
		|	ИСТИНА КАК МаршрутИзвестен,
		|	МаршрутныйЛистРасходныеОрдера.Документ КАК Ордер,
		|	МаршрутныйЛистРасходныеОрдера.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Документ.МаршрутныйЛист.РасходныеОрдера КАК МаршрутныйЛистРасходныеОрдера
		|ГДЕ
		|	МаршрутныйЛистРасходныеОрдера.Ссылка В(&МассивДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	МаршрутИзвестен УБЫВ,
		|	МаршрутныйЛист,
		|	НомерСтроки,
		|	Ордер
		|АВТОУПОРЯДОЧИВАНИЕ";

	ИначеЕсли ТипЗнч(МассивДокументов) = Тип("ДокументСсылка.АктПеревозчика")
			ИЛИ ТипЗнч(МассивДокументов[0]) = Тип("ДокументСсылка.АктПеревозчика") Тогда

		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЕСТЬNULL(МаршрутныйЛистПриходныеОрдера.Ссылка, ЗНАЧЕНИЕ(Документ.МаршрутныйЛист.ПустаяСсылка)) КАК МаршрутныйЛист,
		|	ВЫБОР
		|		КОГДА МаршрутныйЛистПриходныеОрдера.Ссылка ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК МаршрутИзвестен,
		|	АктПеревозчикаПриходныеОрдера.ПриходныйОрдер КАК Ордер,
		|	АктПеревозчикаПриходныеОрдера.НомерСтроки КАК НомерСтроки,
		|	0 КАК Порядок
		|ИЗ
		|	Документ.АктПеревозчика.ПриходныеОрдера КАК АктПеревозчикаПриходныеОрдера
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛист.ПриходныеОрдера КАК МаршрутныйЛистПриходныеОрдера
		|		ПО (МаршрутныйЛистПриходныеОрдера.ПриходныйОрдер = АктПеревозчикаПриходныеОрдера.ПриходныйОрдер)
		|			И (МаршрутныйЛистПриходныеОрдера.Ссылка.Проведен)
		|ГДЕ
		|	АктПеревозчикаПриходныеОрдера.Ссылка В(&МассивДокументов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЕСТЬNULL(МаршрутныйЛистРасходныеОрдера.Ссылка, ЗНАЧЕНИЕ(Документ.МаршрутныйЛист.ПустаяСсылка)),
		|	ВЫБОР
		|		КОГДА МаршрутныйЛистРасходныеОрдера.Ссылка ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	АктПеревозчикаРасходныеОрдера.РасходныйОрдер,
		|	АктПеревозчикаРасходныеОрдера.НомерСтроки,
		|	1
		|ИЗ
		|	Документ.АктПеревозчика.РасходныеОрдера КАК АктПеревозчикаРасходныеОрдера
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.МаршрутныйЛист.РасходныеОрдера КАК МаршрутныйЛистРасходныеОрдера
		|		ПО (МаршрутныйЛистРасходныеОрдера.Документ = АктПеревозчикаРасходныеОрдера.РасходныйОрдер)
		|			И (МаршрутныйЛистРасходныеОрдера.Ссылка.Проведен)
		|ГДЕ
		|	АктПеревозчикаРасходныеОрдера.Ссылка В(&МассивДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок,
		|	МаршрутИзвестен УБЫВ,
		|	МаршрутныйЛист,
		|	НомерСтроки
		|АВТОУПОРЯДОЧИВАНИЕ";

	Иначе

		//+++АК KIRN 2018.04.02 ИП-00018240
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	МаршрутныйЛистРасходныеОрдера.Ссылка КАК МаршрутныйЛист,
		|	МаршрутныйЛистРасходныеОрдера.Документ КАК Ордер,
		|	МаршрутныйЛистРасходныеОрдера.НомерСтроки,
		|	ВЫБОР
		|		КОГДА МаршрутныйЛистРасходныеОрдера.Документ.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ТОГДА МаршрутныйЛистРасходныеОрдера.Документ.Организация
		|		ИНАЧЕ МаршрутныйЛистРасходныеОрдера.Документ.Склад.Владелец.Организация
		|	КОНЕЦ КАК Организация
		|ПОМЕСТИТЬ МаршрутыОрдера0
		|ИЗ
		|	Документ.МаршрутныйЛист.РасходныеОрдера КАК МаршрутныйЛистРасходныеОрдера
		|ГДЕ
		|	МаршрутныйЛистРасходныеОрдера.Документ В(&МассивДокументов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ордер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	МаршрутныйЛистПриходныеОрдера.Ссылка КАК МаршрутныйЛист,
		|	МаршрутныйЛистПриходныеОрдера.ПриходныйОрдер КАК Ордер,
		|	МаршрутныйЛистПриходныеОрдера.НомерСтроки,
		|	ВЫБОР
		|		КОГДА МаршрутныйЛистПриходныеОрдера.ПриходныйОрдер.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ТОГДА МаршрутныйЛистПриходныеОрдера.ПриходныйОрдер.Организация
		|		ИНАЧЕ МаршрутныйЛистПриходныеОрдера.ПриходныйОрдер.Склад.Владелец.Организация
		|	КОНЕЦ КАК Организация
		|ПОМЕСТИТЬ МаршрутыОрдера1
		|ИЗ
		|	Документ.МаршрутныйЛист.ПриходныеОрдера КАК МаршрутныйЛистПриходныеОрдера
		|ГДЕ
		|	МаршрутныйЛистПриходныеОрдера.ПриходныйОрдер В(&МассивДокументов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ордер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаршрутыОрдера0.МаршрутныйЛист КАК МаршрутныйЛист,
		|	ИСТИНА КАК МаршрутИзвестен,
		|	МаршрутыОрдера0.Ордер КАК Ордер,
		|	МаршрутыОрдера0.НомерСтроки КАК НомерСтроки,
		|	МаршрутыОрдера0.Организация
		|ИЗ
		|	МаршрутыОрдера0 КАК МаршрутыОрдера0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МаршрутыОрдера1.МаршрутныйЛист,
		|	ИСТИНА,
		|	МаршрутыОрдера1.Ордер,
		|	МаршрутыОрдера1.НомерСтроки,
		|	МаршрутыОрдера1.Организация
		|ИЗ
		|	МаршрутыОрдера1 КАК МаршрутыОрдера1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Документ.МаршрутныйЛист.ПустаяСсылка),
		|	ЛОЖЬ,
		|	РасходныйОрдерСклад.Ссылка,
		|	0,
		|	ВЫБОР
		|		КОГДА РасходныйОрдерСклад.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ТОГДА РасходныйОрдерСклад.Организация
		|		ИНАЧЕ РасходныйОрдерСклад.Склад.Владелец.Организация
		|	КОНЕЦ КАК Организация
		|	
		|ИЗ
		|	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
		|ГДЕ
		|	НЕ РасходныйОрдерСклад.Ссылка В
		|				(ВЫБРАТЬ
		|					МаршрутыОрдера0.Ордер
		|				ИЗ
		|					МаршрутыОрдера0)
		|	И РасходныйОрдерСклад.Ссылка В(&МассивДокументов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Документ.МаршрутныйЛист.ПустаяСсылка),
		|	ЛОЖЬ,
		|	ПриходныйОрдерСклад.Ссылка,
		|	0,
		|	ВЫБОР
		|		КОГДА ПриходныйОрдерСклад.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			ТОГДА ПриходныйОрдерСклад.Организация
		|		ИНАЧЕ ПриходныйОрдерСклад.Склад.Владелец.Организация
		|	КОНЕЦ КАК Организация
		|ИЗ
		|	Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
		|ГДЕ
		|	НЕ ПриходныйОрдерСклад.Ссылка В
		|				(ВЫБРАТЬ
		|					МаршрутыОрдера1.Ордер
		|				ИЗ
		|					МаршрутыОрдера1)
		|	И ПриходныйОрдерСклад.Ссылка В(&МассивДокументов)
		|
		|УПОРЯДОЧИТЬ ПО
		|	МаршрутИзвестен УБЫВ,
		|	МаршрутныйЛист,
		|	НомерСтроки,
		|	Ордер
		|АВТОУПОРЯДОЧИВАНИЕ";

		//Запрос.Текст = 
		//"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		//|	МаршрутныйЛистРасходныеОрдера.Ссылка КАК МаршрутныйЛист,
		//|	МаршрутныйЛистРасходныеОрдера.Документ КАК Ордер,
		//|	МаршрутныйЛистРасходныеОрдера.НомерСтроки
		//|ПОМЕСТИТЬ МаршрутыОрдера0
		//|ИЗ
		//|	Документ.МаршрутныйЛист.РасходныеОрдера КАК МаршрутныйЛистРасходныеОрдера
		//|ГДЕ
		//|	МаршрутныйЛистРасходныеОрдера.Документ В(&МассивДокументов)
		//|
		//|ИНДЕКСИРОВАТЬ ПО
		//|	Ордер
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		//|	МаршрутныйЛистПриходныеОрдера.Ссылка КАК МаршрутныйЛист,
		//|	МаршрутныйЛистПриходныеОрдера.ПриходныйОрдер КАК Ордер,
		//|	МаршрутныйЛистПриходныеОрдера.НомерСтроки
		//|ПОМЕСТИТЬ МаршрутыОрдера1
		//|ИЗ
		//|	Документ.МаршрутныйЛист.ПриходныеОрдера КАК МаршрутныйЛистПриходныеОрдера
		//|ГДЕ
		//|	МаршрутныйЛистПриходныеОрдера.ПриходныйОрдер В(&МассивДокументов)
		//|
		//|ИНДЕКСИРОВАТЬ ПО
		//|	Ордер
		//|;
		//|
		//|////////////////////////////////////////////////////////////////////////////////
		//|ВЫБРАТЬ
		//|	МаршрутыОрдера0.МаршрутныйЛист КАК МаршрутныйЛист,
		//|	ИСТИНА КАК МаршрутИзвестен,
		//|	МаршрутыОрдера0.Ордер КАК Ордер,
		//|	МаршрутыОрдера0.НомерСтроки КАК НомерСтроки
		//|ИЗ
		//|	МаршрутыОрдера0 КАК МаршрутыОрдера0
		//|
		//|ОБЪЕДИНИТЬ ВСЕ
		//|
		//|ВЫБРАТЬ
		//|	МаршрутыОрдера1.МаршрутныйЛист,
		//|	ИСТИНА,
		//|	МаршрутыОрдера1.Ордер,
		//|	МаршрутыОрдера1.НомерСтроки
		//|ИЗ
		//|	МаршрутыОрдера1 КАК МаршрутыОрдера1
		//|
		//|ОБЪЕДИНИТЬ ВСЕ
		//|
		//|ВЫБРАТЬ 
		//|	ЗНАЧЕНИЕ(Документ.МаршрутныйЛист.ПустаяСсылка),
		//|	ЛОЖЬ,
		//|	РасходныйОрдерСклад.Ссылка,
		//|	0
		//|ИЗ
		//|	Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
		//|ГДЕ
		//|	НЕ РасходныйОрдерСклад.Ссылка В
		//|				(ВЫБРАТЬ
		//|					МаршрутыОрдера0.Ордер
		//|				ИЗ
		//|					МаршрутыОрдера0)
		//|	И РасходныйОрдерСклад.Ссылка В(&МассивДокументов)
		//|
		//|ОБЪЕДИНИТЬ ВСЕ
		//|
		//|ВЫБРАТЬ  
		//|	ЗНАЧЕНИЕ(Документ.МаршрутныйЛист.ПустаяСсылка),
		//|	ЛОЖЬ,
		//|	ПриходныйОрдерСклад.Ссылка,
		//|	0
		//|ИЗ
		//|	Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
		//|ГДЕ
		//|	НЕ ПриходныйОрдерСклад.Ссылка В
		//|				(ВЫБРАТЬ
		//|					МаршрутыОрдера1.Ордер
		//|				ИЗ
		//|					МаршрутыОрдера1)
		//|	И ПриходныйОрдерСклад.Ссылка В(&МассивДокументов)
		//|
		//|УПОРЯДОЧИТЬ ПО
		//|	МаршрутИзвестен УБЫВ,
		//|	МаршрутныйЛист,
		//|	НомерСтроки,
		//|	Ордер
		//|АВТОУПОРЯДОЧИВАНИЕ";

		//---АК KIRN 
	КонецЕсли;
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	СНовойСтраницы = Ложь;
	
	//резерв на случай необходимости оптимизации
	//КэшСертификатов=Новый ТаблицаЗначений;
	//КэшСертификатов.Колонки.Добавить("Номенклатура",Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	//КэшСертификатов.Колонки.Добавить("Характеристика",Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	//КэшСертификатов.Колонки.Добавить("Дата",Новый ОписаниеТипов("Дата"));
	//КэшСертификатов.Колонки.Добавить("Сертификаты",Новый ОписаниеТипов("Строка"));
	
	Пока ВыборкаДетальныеЗаписи.Следующий() цикл
		//+++АК KIRN 2018.04.02 ИП-00018240
		ПечатьОрдера(ТабличныйДокумент,
		ВыборкаДетальныеЗаписи.МаршрутныйЛист,
		ВыборкаДетальныеЗаписи.Ордер,
		ВыборкаДетальныеЗаписи.МаршрутИзвестен,
		ВыборкаДетальныеЗаписи.Организация,
		СНовойСтраницы
		//,
		//КэшСертификатов
		);
		СНовойСтраницы = Истина;

		//ПечатьОрдера(ТабличныйДокумент,
		//	ВыборкаДетальныеЗаписи.МаршрутныйЛист,
		//	ВыборкаДетальныеЗаписи.Ордер,
		//	ВыборкаДетальныеЗаписи.МаршрутИзвестен,
		//	Вкусвилл,
		//	СНовойСтраницы
		//	//,
		//	//КэшСертификатов
		//);
		//СНовойСтраницы = Истина;
		//---АК KIRN 
	КонецЦикла;

	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ПечатьТ1(ПараметрКоманды) Экспорт 
	
	Таб = Новый ТабличныйДокумент;
	Таб.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Возврат Печать1Т(Таб, ПараметрКоманды);
	
КонецФункции


Функция НапечататьОрдераМаршрута(ТабличныйДокумент, МассивДокументов)
	
	//текст в основном скопирован из печати АктаПеревозчика
	
	Если ТипЗнч(МассивДокументов) = Тип("ДокументСсылка.МаршрутныйЛист")
			ИЛИ ТипЗнч(МассивДокументов[0]) = Тип("ДокументСсылка.МаршрутныйЛист") Тогда

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ИНН", "7734675810"	);
		Запрос.УстановитьПараметр("КПП", "773401001"	);
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Организации.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.ИНН = &ИНН
		|	И Организации.КПП = &КПП
		|	И НЕ Организации.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|АВТОУПОРЯДОЧИВАНИЕ";
		Результат = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = Результат.Выбрать();

		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Организация 		= ВыборкаДетальныеЗаписи.Ссылка;
			ПодписьДиректора 	= ОбщегоНазначения.ПолучитьПодписьФизлица(Справочники.ФизическиеЛица.НайтиПоНаименованию("Фарафонов Алексей Владимирович")).Получить();
		иначе
			Организация 		= Справочники.Организации.ПустаяСсылка();
			ПодписьДиректора 	= Неопределено;
		КонецЕсли;
		
		//
		ТабДокумент	= Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПараметрыПечати_МаршрутныйЛист_ТТН";
		
		Макет = ПолучитьМакет("ТранспортнаяНакладная");
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		
		ЗапросДатаИСтруктурнаяЕдиница = Новый Запрос;
		ЗапросДатаИСтруктурнаяЕдиница.Текст = 
		"ВЫБРАТЬ
		|	ЦФОСтруктурныхЕдиницСрезПоследних.Организация КАК Организация
		|ИЗ
		|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&ДатаМаршрутногоЛиста, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ЦФОСтруктурныхЕдиницСрезПоследних";

		//
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	МаршрутныйЛистРасходныеОрдера.Документ КАК Ордер,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка КАК МаршрутныйЛист,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут КАК Маршрут,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Сумма КАК Сумма,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Автомобиль КАК Автомобиль,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Водитель КАК Водитель,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Перевозчик КАК Перевозчик,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Оператор.ФизЛицо КАК ФизЛицо,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Номер КАК НомерМаршрутногоЛиста,
		|	НАЧАЛОПЕРИОДА(МаршрутныйЛистРасходныеОрдера.Ссылка.Дата, ДЕНЬ) КАК ДатаМаршрутногоЛиста,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.ПорядокСортировки КАК МаршрутПорядокСортировки,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.Наименование КАК МаршрутНаименование
		|ПОМЕСТИТЬ ВТРасходныеОрдера
		|ИЗ
		|	Документ.МаршрутныйЛист.РасходныеОрдера КАК МаршрутныйЛистРасходныеОрдера
		|ГДЕ
		|	МаршрутныйЛистРасходныеОрдера.Ссылка В(&МассивДокументов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ордер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	МаршрутныйЛистПриходныеОрдера.ПриходныйОрдер КАК Ордер,
		|	МаршрутныйЛистПриходныеОрдера.Ссылка КАК МаршрутныйЛист,
		|	МаршрутныйЛистПриходныеОрдера.Ссылка.МаршрутТранспортныхКомпаний КАК Маршрут,
		|	МаршрутныйЛистПриходныеОрдера.Ссылка.Сумма КАК Сумма,
		|	МаршрутныйЛистПриходныеОрдера.Ссылка.Автомобиль КАК Автомобиль,
		|	МаршрутныйЛистПриходныеОрдера.Ссылка.Водитель КАК Водитель,
		|	МаршрутныйЛистПриходныеОрдера.Ссылка.Перевозчик КАК Перевозчик,
		|	МаршрутныйЛистПриходныеОрдера.Ссылка.Оператор.ФизЛицо КАК ФизЛицо,
		|	МаршрутныйЛистПриходныеОрдера.Ссылка.Номер КАК НомерМаршрутногоЛиста,
		|	НАЧАЛОПЕРИОДА(МаршрутныйЛистПриходныеОрдера.Ссылка.Дата, ДЕНЬ) КАК ДатаМаршрутногоЛиста,
		|	МаршрутныйЛистПриходныеОрдера.Ссылка.МаршрутТранспортныхКомпаний.Наименование КАК МаршрутНаименование
		|ПОМЕСТИТЬ ВТПриходныеОрдера
		|ИЗ
		|	Документ.МаршрутныйЛист.ПриходныеОрдера КАК МаршрутныйЛистПриходныеОрдера
		|ГДЕ
		|	МаршрутныйЛистПриходныеОрдера.Ссылка В(&МассивДокументов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ордер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РасходныйОрдерСклад.Ссылка КАК Ссылка,
		|	ВТРасходныеОрдера.Сумма КАК Сумма,
		|	ВТРасходныеОрдера.Маршрут КАК Маршрут,
		|	ВТРасходныеОрдера.НомерМаршрутногоЛиста КАК НомерМаршрутногоЛиста,
		|	ВТРасходныеОрдера.МаршрутПорядокСортировки,
		|	ВТРасходныеОрдера.МаршрутНаименование,
		|	РасходныйОрдерСклад.Получатель.Код КАК ПолучательКод,
		|	ВЫБОР
		|		КОГДА ВТРасходныеОрдера.Автомобиль = ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)
		|			ТОГДА РасходныйОрдерСклад.Автомобиль
		|		ИНАЧЕ ВТРасходныеОрдера.Автомобиль
		|	КОНЕЦ КАК Автомобиль,
		|	ВЫБОР
		|		КОГДА ВТРасходныеОрдера.Водитель = ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаКонтрагентов.ПустаяСсылка)
		|			ТОГДА РасходныйОрдерСклад.Водитель
		|		ИНАЧЕ ВТРасходныеОрдера.Водитель
		|	КОНЕЦ КАК Водитель,
		|	РасходныйОрдерСклад.Получатель КАК СтруктурнаяЕдиница,
		|	ВЫБОР
		|		КОГДА ВТРасходныеОрдера.Перевозчик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА РасходныйОрдерСклад.Автомобиль.Перевозчик
		|		ИНАЧЕ ВТРасходныеОрдера.Перевозчик
		|	КОНЕЦ КАК Перевозчик,
		|	ВТРасходныеОрдера.ДатаМаршрутногоЛиста,
		|	ВТРасходныеОрдера.МаршрутныйЛист КАК МаршрутныйЛист,
		|	ВТРасходныеОрдера.Ордер,
		|	ЕСТЬNULL(ВТРасходныеОрдера.ФизЛицо, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК Оператор
		|ПОМЕСТИТЬ БазоваяИнформация
		|ИЗ
		|	ВТРасходныеОрдера КАК ВТРасходныеОрдера
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
		|		ПО ВТРасходныеОрдера.Ордер = РасходныйОрдерСклад.Ссылка
		|ГДЕ
		|	РасходныйОрдерСклад.Ссылка В
		|			(ВЫБРАТЬ
		|				ВТРасходныеОрдера.Ордер
		|			ИЗ
		|				ВТРасходныеОрдера)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПриходныйОрдерСклад.Ссылка,
		|	ВТПриходныеОрдера.Сумма,
		|	ВТПриходныеОрдера.Маршрут,
		|	ВТПриходныеОрдера.НомерМаршрутногоЛиста,
		|	0,
		|	ВТПриходныеОрдера.МаршрутНаименование,
		|	"""",
		|	ВЫБОР
		|		КОГДА ВТПриходныеОрдера.Автомобиль = ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)
		|			ТОГДА ПриходныйОрдерСклад.Автомобиль
		|		ИНАЧЕ ВТПриходныеОрдера.Автомобиль
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВТПриходныеОрдера.Водитель = ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаКонтрагентов.ПустаяСсылка)
		|			ТОГДА ПриходныйОрдерСклад.Автомобиль.ОсновнойВодитель
		|		ИНАЧЕ ВТПриходныеОрдера.Водитель
		|	КОНЕЦ,
		|	ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка),
		|	ВЫБОР
		|		КОГДА ВТПриходныеОрдера.Перевозчик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ПриходныйОрдерСклад.Автомобиль.Перевозчик
		|		ИНАЧЕ ВТПриходныеОрдера.Перевозчик
		|	КОНЕЦ,
		|	ВТПриходныеОрдера.ДатаМаршрутногоЛиста,
		|	ВТПриходныеОрдера.МаршрутныйЛист,
		|	ВТПриходныеОрдера.Ордер,
		|	ЕСТЬNULL(ВТПриходныеОрдера.ФизЛицо, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка))
		|ИЗ
		|	ВТПриходныеОрдера КАК ВТПриходныеОрдера
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
		|		ПО ВТПриходныеОрдера.Ордер = ПриходныйОрдерСклад.Ссылка
		|ГДЕ
		|	ПриходныйОрдерСклад.Ссылка В
		|			(ВЫБРАТЬ
		|				ВТПриходныеОрдера.Ордер
		|			ИЗ
		|				ВТПриходныеОрдера)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(БазоваяИнформация.Перевозчик, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Перевозчик,
		|	ЕСТЬNULL(БазоваяИнформация.Автомобиль, ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)) КАК Автомобиль,
		|	ЕСТЬNULL(БазоваяИнформация.Водитель, ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаКонтрагентов.ПустаяСсылка)) КАК Водитель,
		|	БазоваяИнформация.ДатаМаршрутногоЛиста КАК ДатаМаршрутногоЛиста,
		|	РасходныйОрдерСкладТовары.Номенклатура.Родитель.Наименование КАК ГруппаТоваров,
		|	РасходныйОрдерСкладТовары.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(РасходныйОрдерСкладТовары.ЕдиницаИзмерения.Вес, 0) * РасходныйОрдерСкладТовары.Количество КАК Вес
		|ПОМЕСТИТЬ ВТСлужебная
		|ИЗ
		|	БазоваяИнформация КАК БазоваяИнформация
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		|		ПО БазоваяИнформация.Ссылка = РасходныйОрдерСкладТовары.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЕСТЬNULL(БазоваяИнформация.Перевозчик, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)),
		|	ЕСТЬNULL(БазоваяИнформация.Автомобиль, ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)),
		|	ЕСТЬNULL(БазоваяИнформация.Водитель, ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаКонтрагентов.ПустаяСсылка)),
		|	БазоваяИнформация.ДатаМаршрутногоЛиста,
		|	ПриходныйОрдерСкладТовары.Номенклатура.Родитель.Наименование,
		|	ПриходныйОрдерСкладТовары.Ссылка,
		|	ЕСТЬNULL(ПриходныйОрдерСкладТовары.ЕдиницаИзмерения.Вес, 0) * ПриходныйОрдерСкладТовары.Количество
		|ИЗ
		|	БазоваяИнформация КАК БазоваяИнформация
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		|		ПО БазоваяИнформация.Ссылка = ПриходныйОрдерСкладТовары.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТСлужебная.Перевозчик КАК Перевозчик,
		|	ВТСлужебная.Автомобиль КАК Автомобиль,
		|	ВТСлужебная.Водитель КАК Водитель,
		|	ВТСлужебная.ДатаМаршрутногоЛиста КАК ДатаМаршрутногоЛиста,
		|	ВТСлужебная.ГруппаТоваров КАК ГруппаТоваров
		|ПОМЕСТИТЬ ВыборкаТоваров
		|ИЗ
		|	ВТСлужебная КАК ВТСлужебная
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БазоваяИнформация.НомерМаршрутногоЛиста КАК НомерМаршрутногоЛиста,
		|	БазоваяИнформация.ДатаМаршрутногоЛиста КАК ДатаМаршрутногоЛиста,
		|	БазоваяИнформация.Перевозчик КАК Перевозчик,
		|	БазоваяИнформация.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	БазоваяИнформация.Маршрут КАК Маршрут,
		|	БазоваяИнформация.Водитель КАК Водитель,
		|	БазоваяИнформация.Автомобиль КАК Автомобиль,
		|	БазоваяИнформация.Ссылка КАК РасходныйОрдер,
		|	БазоваяИнформация.Оператор КАК Оператор,
		|	БазоваяИнформация.Сумма КАК Сумма,
		|	ЕСТЬNULL(ВТСлужебная.Вес, 0) КАК Вес
		|ИЗ
		|	БазоваяИнформация КАК БазоваяИнформация
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВТСлужебная.Ссылка КАК Ссылка,
		|			СУММА(ВТСлужебная.Вес) КАК Вес
		|		ИЗ
		|			ВТСлужебная КАК ВТСлужебная
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВТСлужебная.Ссылка) КАК ВТСлужебная
		|		ПО (ВТСлужебная.Ссылка = БазоваяИнформация.Ссылка)
		|
		|УПОРЯДОЧИТЬ ПО
		|	БазоваяИнформация.МаршрутПорядокСортировки,
		|	БазоваяИнформация.МаршрутНаименование,
		|	БазоваяИнформация.ПолучательКод,
		|	Перевозчик,
		|	Водитель,
		|	Автомобиль
		|ИТОГИ
		|	МАКСИМУМ(Маршрут),
		|	МАКСИМУМ(Оператор)
		|ПО
		|	ДатаМаршрутногоЛиста,
		|	НомерМаршрутногоЛиста,
		|	Перевозчик,
		|	СтруктурнаяЕдиница,
		|	Водитель,
		|	Автомобиль";

		Результат = Запрос.Выполнить();
		
		ВыборкаДатаМаршрутногоЛиста = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		мЮрЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
		
		Пока ВыборкаДатаМаршрутногоЛиста.Следующий() Цикл
			
			мДатаТТН = ВыборкаДатаМаршрутногоЛиста.ДатаМаршрутногоЛиста;
			ДатаНаПечать 	= Формат(мДатаТТН, "ДФ=""дд.ММ.гг""");

			СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, мДатаТТН);
			мТекстГрузоотправителя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(
														СведенияОбОрганизации, "НаименованиеСокращенное,ЮридическийАдрес,Телефоны");
			
			ВыборкаНомерМаршрутногоЛиста = ВыборкаДатаМаршрутногоЛиста.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаНомерМаршрутногоЛиста.Следующий() Цикл
				
				ТекстНомераТТН = "";
				Если ЗначениеЗаполнено(ВыборкаНомерМаршрутногоЛиста.НомерМаршрутногоЛиста) Тогда
					ТекстНомераТТН = ПреобразоватьНомерДокВТекстНомераТТН(ВыборкаНомерМаршрутногоЛиста.НомерМаршрутногоЛиста);
				КонецЕсли;
				
				ТекОператор = ВыборкаНомерМаршрутногоЛиста.Оператор;
				ТекМаршрут 	= ВыборкаНомерМаршрутногоЛиста.Маршрут;
			
				ВыборкаПеревозчик = ВыборкаНомерМаршрутногоЛиста.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПеревозчик.Следующий() Цикл
					
					ТекПеревозчик = ВыборкаПеревозчик.Перевозчик;
					Если НЕ ЗначениеЗаполнено(ТекПеревозчик) тогда
						ТекПеревозчик = Справочники.Контрагенты.ПустаяСсылка();
					КонецЕсли;
					Если ТекПеревозчик.ЮрФизЛицо = мЮрЛицо Тогда
						ТекИсполнитель 		= СокрЛП(ТекПеревозчик.ГенеральныйДиректор);
						ЮрАдресПеревозчика 	= ОбщегоНазначения.ПолучитьКонтактнуюИнформациюПоВиду(ТекПеревозчик, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
					Иначе
						ТекИсполнитель 		= СокрЛП(ТекПеревозчик.Наименование);
						ЮрАдресПеревозчика 	= ОбщегоНазначения.ПолучитьКонтактнуюИнформациюПоВиду(ТекПеревозчик, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
					КонецЕсли;
					
					ВыборкаСтруктурнаяЕдиница = ВыборкаПеревозчик.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаСтруктурнаяЕдиница.Следующий() Цикл
						
						ЗапросДатаИСтруктурнаяЕдиница.УстановитьПараметр("ДатаМаршрутногоЛиста"	, мДатаТТН);
						ЗапросДатаИСтруктурнаяЕдиница.УстановитьПараметр("СтруктурнаяЕдиница"		, ВыборкаСтруктурнаяЕдиница.СтруктурнаяЕдиница);
						Результат = ЗапросДатаИСтруктурнаяЕдиница .Выполнить();
						ВыборкаОрганизации = Результат.Выбрать();
						Если ВыборкаОрганизации.Следующий() Тогда
							ОрганизацияПолучатель = ВыборкаОрганизации.Организация;
						иначе                      
							ОрганизацияПолучатель = Справочники.Организации.ПустаяСсылка();
						КонецЕсли;

						СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ОрганизацияПолучатель, мДатаТТН);
						мТекстГрузополучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(
																		СведенияОбОрганизации, "НаименованиеСокращенное,ЮридическийАдрес,Телефоны");
																						
						ВыборкаВодитель = ВыборкаСтруктурнаяЕдиница.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаВодитель.Следующий() Цикл
							
	                        ТекВодитель = ВыборкаВодитель.Водитель;
							
							ВыборкаАвтомобиль = ВыборкаВодитель.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаАвтомобиль.Следующий() Цикл
								
								ТекАвтомобиль = ВыборкаАвтомобиль.Автомобиль;
								
								// получим выборку групп, используя временную таблицу
								Запрос.УстановитьПараметр("ДатаМаршрутногоЛиста", мДатаТТН);
								Запрос.УстановитьПараметр("Автомобиль"			, ТекАвтомобиль);
								Запрос.УстановитьПараметр("Водитель"			, ТекВодитель);
								Запрос.УстановитьПараметр("Перевозчик"			, ТекПеревозчик);
								Запрос.Текст = 
								"ВЫБРАТЬ
								|	ВыборкаТоваров.ГруппаТоваров КАК ГруппаТоваров
								//|	ВыборкаТоваров.Перевозчик,
								//|	ВыборкаТоваров.Автомобиль,
								//|	ВыборкаТоваров.Водитель,
								//|	ВыборкаТоваров.ДатаМаршрутногоЛиста,
								//|	ВыборкаТоваров.Вес
								|ИЗ
								|	ВыборкаТоваров КАК ВыборкаТоваров
								|ГДЕ
								|	ВыборкаТоваров.Перевозчик = &Перевозчик
								|	И ВыборкаТоваров.Автомобиль = &Автомобиль
								|	И ВыборкаТоваров.Водитель = &Водитель
								|	И ВыборкаТоваров.ДатаМаршрутногоЛиста = &ДатаМаршрутногоЛиста
								|
								|УПОРЯДОЧИТЬ ПО
								|	ГруппаТоваров
								|АВТОУПОРЯДОЧИВАНИЕ";

								СтрокаГрупп = "";
								обВес = 0;
								ВыборкаГруппТоваров = Запрос.Выполнить().Выбрать();
								Пока ВыборкаГруппТоваров.Следующий() Цикл
									СтрокаГрупп = СтрокаГрупп + "; " + ВыборкаГруппТоваров.ГруппаТоваров;
									//обВес = обВес + ВыборкаГруппТоваров.Вес;
								КонецЦикла;
								
								Если НЕ СтрокаГрупп = "" Тогда
									СтрокаГрупп = Сред(СтрокаГрупп, 3);
								КонецЕсли;
								
								ВыборкаДетальныеЗаписи = ВыборкаАвтомобиль.Выбрать();
								
								ТекстОрдеров 	= "";
								ТекСумма = 0;
								МассивОрдеров = Новый Массив;
								
								Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
									ТекстОрдеров = ТекстОрдеров + "; " + ОбщегоНазначения.ПолучитьНомерНаПечать(ВыборкаДетальныеЗаписи.РасходныйОрдер) + " от " + ДатаНаПечать;
									МассивОрдеров.Добавить(ВыборкаДетальныеЗаписи.РасходныйОрдер);
									ТекСумма = ТекСумма + ВыборкаДетальныеЗаписи.Сумма;
									обВес = обВес + ВыборкаДетальныеЗаписи.Вес;
								КонецЦикла;
								Если НЕ ТекстОрдеров = "" Тогда
									ТекстОрдеров = Сред(ТекстОрдеров, 3);
								КонецЕсли;
								
								//
								ЭтоДоставкаНаСклад = (ТипЗнч(ТекМаршрут) = Тип("СправочникСсылка.МаршрутыТранспортныхКомпаний"));
								ОбластьМакета.Параметры.ДатаТТН 			= ДатаНаПечать;
								ОбластьМакета.Параметры.НомерТТН 			= ТекстНомераТТН;
								ОбластьМакета.Параметры.Маршрут 			= ?(ЗначениеЗаполнено(ТекМаршрут), СокрЛП(ТекМаршрут.Наименование), "");
								ОбластьМакета.Параметры.Грузополучатель 	= ?(ЭтоДоставкаНаСклад, мТекстГрузоотправителя, мТекстГрузополучателя);
								//ОбластьМакета.Параметры.НаименованиеГруза 	= СтрокаГрупп;
								ОбластьМакета.Параметры.НаименованиеГруза 	= "Согласно " + ?(ЭтоДоставкаНаСклад, "накладных: ", "расходных ордеров: ") + ТекстОрдеров + ".";
								ОбластьМакета.Параметры.ПереченьДокументов 	= ?(ЭтоДоставкаНаСклад, "Накладные: ", "Расходные ордера : ") + ТекстОрдеров + ".";
								ОбластьМакета.Параметры.Грузоотправитель	= мТекстГрузоотправителя;
								
								ПечПеревозчик = СокрЛП(ТекПеревозчик.Наименование);
								Если ЮрАдресПеревозчика.Свойство("Представление") Тогда
									ПечПеревозчик = ПечПеревозчик + ?(СокрЛП(ЮрАдресПеревозчика.Представление) = "", "", "; " + СокрЛП(ЮрАдресПеревозчика.Представление));
								КонецЕсли;								
								ОбластьМакета.Параметры.Перевозчик 			= ПечПеревозчик;
								
								ОбластьМакета.Параметры.Дата_ПриемГруза			= Формат(мДатаТТН, "ДЛФ=Д") + " 09:00";
								ОбластьМакета.Параметры.ДатаПрибытия_ПриемГруза	= Формат(мДатаТТН, "ДЛФ=Д") + " 08:50";
								ОбластьМакета.Параметры.ДатаУбытия_ПриемГруза	= Формат(мДатаТТН, "ДЛФ=Д") + " 09:20";
								ОбластьМакета.Параметры.Дата_СдачаГруза			= Формат(мДатаТТН, "ДЛФ=Д") + " 10:00";
								ОбластьМакета.Параметры.ДатаПрибытия_СдачаГруза	= Формат(мДатаТТН, "ДЛФ=Д") + " 09:50";
								ОбластьМакета.Параметры.ДатаУбытия_СдачаГруза	= Формат(мДатаТТН, "ДЛФ=Д") + " 10:20";
								ОбластьМакета.Параметры.ДатаПринятияКИсполнению	= Формат(мДатаТТН - 2 * 86400, "ДЛФ=Д");
								ОбластьМакета.Параметры.МассаГруза				= Формат(обВес, "ЧГ=") + " кг";
								ОбластьМакета.Параметры.Исполнитель				= ОбщегоНазначения.ФамилияИнициалыФизЛица(ТекИсполнитель);
								
								Если ЗначениеЗаполнено(ТекОператор) Тогда
									ОбластьМакета.Параметры.Оператор			= ОбщегоНазначения.ФамилияИнициалыФизЛица(ТекОператор);
									ОбластьМакета.Рисунки.Очистить();
									ПодписьОператора = ОбщегоНазначения.ПолучитьПодписьФизлица(ТекОператор).Получить();
									Если ТипЗнч(ПодписьОператора) = Тип("Картинка") Тогда
										РисунокПодписи = ОбластьМакета.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
								    	РисунокПодписи.Расположить(ОбластьМакета.Область(44, 3, 44, 4));
										РисунокПодписи.Узор 		= ТипУзораТабличногоДокумента.БезУзора;
								    	РисунокПодписи.ЦветФона 	= Новый Цвет; // автоцвет (прозрачный чтоб полоску подчеркивания видно было)
								    	РисунокПодписи.Линия 		= Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии, 0);
								    	РисунокПодписи.Картинка 	= ПодписьОператора;
										РисунокПодписи = ОбластьМакета.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
								    	РисунокПодписи.Расположить(ОбластьМакета.Область(105, 11, 107, 12));
										РисунокПодписи.Узор 		= ТипУзораТабличногоДокумента.БезУзора;
								    	РисунокПодписи.ЦветФона 	= Новый Цвет; // автоцвет (прозрачный чтоб полоску подчеркивания видно было)
								    	РисунокПодписи.Линия 		= Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии, 0);
								    	//РисунокПодписи.Картинка 	= ПодписьДиректора;
								    	РисунокПодписи.Картинка 	= ПодписьОператора;
									КонецЕсли;
								КонецЕсли;
								
								Адреса = Документы.АктПеревозчика.ПолучитьТекстыАдресов(МассивОрдеров);
								ОбластьМакета.Параметры.Заполнить(Адреса);
								
								ИмяВодителя = СокрЛП(ТекВодитель.Наименование);
								ОбластьМакета.Параметры.Водитель 			= "";//ИмяВодителя;
								//ОбластьМакета.Параметры.ГосНомерАвтомобиля 	= СокрЛП(ТекАвтомобиль.Наименование);
								ОбластьМакета.Параметры.Автомобиль 			= СокрЛП(ТекАвтомобиль.Марка) +
														?(ТекАвтомобиль.Тоннаж > 0, ", " + Формат(Окр(ТекАвтомобиль.Тоннаж, 1), "ЧГ=") + "т", "");
													
								//ТекСтавкаНДС = ?(НЕ ТекМаршрут = Неопределено, УчетНДС.ПолучитьСтавкуНДС(ТекМаршрут.СтавкаНДС), 0);
								//Если НЕ ТекСумма = 0 Тогда
								//	ОбластьМакета.Параметры.Стоимость = Строка(ТекСумма +
								//		?((НЕ ТекМаршрут = Неопределено)
								//				И ТекМаршрут.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСсверху,
								//			УчетНДС.РассчитатьСуммуНДС(ТекСумма, Истина, Ложь, ТекСтавкаНДС), 0)) + 
								//		?((НЕ ТекМаршрут = Неопределено) И НЕ ТекСтавкаНДС = 0, ", в т.ч. НДС " + Строка(ТекСтавкаНДС) + "%", "");
								//Иначе
									ОбластьМакета.Параметры.Стоимость = "";	
								//КонецЕсли;
								
								//ОбластьМакета.Параметры.Руководитель 		= ОбщегоНазначения.ФамилияИнициалыФизЛица(СокрЛП(Организация.ГенеральныйДиректор));
								ОбластьМакета.Параметры.ДатаТТН 			= ДатаНаПечать;
								
								
								ТабДокумент.Вывести(ОбластьМакета);
								
								ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
								
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
		ТабДокумент.ПолеСнизу 			= 5;
		ТабДокумент.ПолеСверху 			= 5;	
		ТабДокумент.АвтоМасштаб 		= Истина;
		ТабДокумент.ОтображатьСетку 	= Ложь;
		ТабДокумент.Защита 				= Ложь;
		ТабДокумент.ТолькоПросмотр 		= Ложь;
		ТабДокумент.ОтображатьЗаголовки = Ложь;
		
		Возврат ТабДокумент;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

Функция НапечататьОрдераМаршрута_Новый(ТабличныйДокумент, МассивДокументов)
	
    //
	Если ТипЗнч(МассивДокументов) = Тип("ДокументСсылка.МаршрутныйЛист")
			ИЛИ ТипЗнч(МассивДокументов[0]) = Тип("ДокументСсылка.МаршрутныйЛист") Тогда
		
		мЮрЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
		
        //
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ИНН", "7734675810"	);
		Запрос.УстановитьПараметр("КПП", "773401001"	);
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Организации.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Организации КАК Организации
		|ГДЕ
		|	Организации.ИНН = &ИНН
		|	И Организации.КПП = &КПП
		|	И НЕ Организации.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка
		|АВТОУПОРЯДОЧИВАНИЕ";
		Результат = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = Результат.Выбрать();

		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Организация 		= ВыборкаДетальныеЗаписи.Ссылка;
			ПодписьДиректора 	= ОбщегоНазначения.ПолучитьПодписьФизлица(Справочники.ФизическиеЛица.НайтиПоНаименованию("Фарафонов Алексей Владимирович")).Получить();
		Иначе
			Организация 		= Справочники.Организации.ПустаяСсылка();
			ПодписьДиректора 	= Неопределено;
		КонецЕсли;
		
		
		//
		ТабДокумент	= Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПараметрыПечати_МаршрутныйЛист_ТТН";
		
		Макет = ПолучитьМакет("ТранспортнаяНакладная");
		
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		
		
		ЗапросДатаИСтруктурнаяЕдиница = Новый Запрос;
		ЗапросДатаИСтруктурнаяЕдиница.Текст = 
		"ВЫБРАТЬ
		|	ТабельРаботыПродавцовСрезПоследних.Период КАК Период,
		|	ТабельРаботыПродавцовСрезПоследних.Сотрудник КАК Сотрудник
		|ПОМЕСТИТЬ ВТТабель
		|ИЗ
		|	РегистрСведений.ТабельРаботыПродавцов.СрезПоследних(&ДатаМаршрутногоЛиста, ) КАК ТабельРаботыПродавцовСрезПоследних
		|ГДЕ
		|	ТабельРаботыПродавцовСрезПоследних.ТорговаяТочка = &СтруктурнаяЕдиница
		|	И ТабельРаботыПродавцовСрезПоследних.СвойствоПродавца = 2
		|	И ТабельРаботыПродавцовСрезПоследних.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЦФОСтруктурныхЕдиницСрезПоследних.Организация КАК Организация
		|ИЗ
		|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&ДатаМаршрутногоЛиста, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ЦФОСтруктурныхЕдиницСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВТТабель.Сотрудник) КАК Сотрудник
		|ИЗ
		|	ВТТабель КАК ВТТабель
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			МАКСИМУМ(ВТТабель.Период) КАК Период
		|		ИЗ
		|			ВТТабель КАК ВТТабель) КАК ВТТабель2
		|		ПО (ВТТабель2.Период = ВТТабель.Период)";

		// ДОСТАВКА НА ТТ
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	МаршрутныйЛистРасходныеОрдера.Документ КАК Ордер,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка КАК МаршрутныйЛист,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут КАК Маршрут,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Сумма КАК Сумма,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Автомобиль КАК Автомобиль,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Водитель КАК Водитель,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Перевозчик КАК Перевозчик,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Оператор.ФизЛицо КАК ФизЛицо,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Номер КАК НомерМаршрутногоЛиста,
		|	НАЧАЛОПЕРИОДА(МаршрутныйЛистРасходныеОрдера.Ссылка.Дата, ДЕНЬ) КАК ДатаМаршрутногоЛиста,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.ПорядокСортировки КАК МаршрутПорядокСортировки,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.Наименование КАК МаршрутНаименование
		|ПОМЕСТИТЬ ВТРасходныеОрдера
		|ИЗ
		|	Документ.МаршрутныйЛист.РасходныеОрдера КАК МаршрутныйЛистРасходныеОрдера
		|ГДЕ
		|	МаршрутныйЛистРасходныеОрдера.Ссылка В(&МассивДокументов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ордер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РасходныйОрдерСклад.Ссылка КАК Ссылка,
		|	ВТРасходныеОрдера.Сумма КАК Сумма,
		|	ВТРасходныеОрдера.Маршрут КАК Маршрут,
		|	ВТРасходныеОрдера.НомерМаршрутногоЛиста КАК НомерМаршрутногоЛиста,
		|	ВТРасходныеОрдера.МаршрутПорядокСортировки,
		|	ВТРасходныеОрдера.МаршрутНаименование,
		|	РасходныйОрдерСклад.Получатель.Код КАК ПолучательКод,
		|	ВЫБОР
		|		КОГДА ВТРасходныеОрдера.Автомобиль = ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)
		|			ТОГДА РасходныйОрдерСклад.Автомобиль
		|		ИНАЧЕ ВТРасходныеОрдера.Автомобиль
		|	КОНЕЦ КАК Автомобиль,
		|	ВЫБОР
		|		КОГДА ВТРасходныеОрдера.Водитель = ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаКонтрагентов.ПустаяСсылка)
		|			ТОГДА РасходныйОрдерСклад.Водитель
		|		ИНАЧЕ ВТРасходныеОрдера.Водитель
		|	КОНЕЦ КАК Водитель,
		|	РасходныйОрдерСклад.Получатель КАК СтруктурнаяЕдиница,
		|	ВЫБОР
		|		КОГДА ВТРасходныеОрдера.Перевозчик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА РасходныйОрдерСклад.Автомобиль.Перевозчик
		|		ИНАЧЕ ВТРасходныеОрдера.Перевозчик
		|	КОНЕЦ КАК Перевозчик,
		|	ВТРасходныеОрдера.ДатаМаршрутногоЛиста,
		|	ВТРасходныеОрдера.МаршрутныйЛист КАК МаршрутныйЛист,
		|	ВТРасходныеОрдера.Ордер,
		|	ЕСТЬNULL(ВТРасходныеОрдера.ФизЛицо, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК Оператор
		|ПОМЕСТИТЬ БазоваяИнформация
		|ИЗ
		|	ВТРасходныеОрдера КАК ВТРасходныеОрдера
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерСклад КАК РасходныйОрдерСклад
		|		ПО ВТРасходныеОрдера.Ордер = РасходныйОрдерСклад.Ссылка
		|ГДЕ
		|	РасходныйОрдерСклад.Ссылка В
		|			(ВЫБРАТЬ
		|				ВТРасходныеОрдера.Ордер
		|			ИЗ
		|				ВТРасходныеОрдера)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЕСТЬNULL(БазоваяИнформация.Перевозчик, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Перевозчик,
		|	ЕСТЬNULL(БазоваяИнформация.Автомобиль, ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)) КАК Автомобиль,
		|	ЕСТЬNULL(БазоваяИнформация.Водитель, ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаКонтрагентов.ПустаяСсылка)) КАК Водитель,
		|	БазоваяИнформация.ДатаМаршрутногоЛиста КАК ДатаМаршрутногоЛиста,
		|	РасходныйОрдерСкладТовары.Номенклатура.Родитель.Наименование КАК ГруппаТоваров,
		|	РасходныйОрдерСкладТовары.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(РасходныйОрдерСкладТовары.ЕдиницаИзмерения.Вес, 0) * РасходныйОрдерСкладТовары.Количество КАК Вес
		|ПОМЕСТИТЬ ВТСлужебная
		|ИЗ
		|	БазоваяИнформация КАК БазоваяИнформация
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РасходныйОрдерСклад.Товары КАК РасходныйОрдерСкладТовары
		|		ПО БазоваяИнформация.Ссылка = РасходныйОрдерСкладТовары.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БазоваяИнформация.НомерМаршрутногоЛиста КАК НомерМаршрутногоЛиста,
		|	БазоваяИнформация.ДатаМаршрутногоЛиста КАК ДатаМаршрутногоЛиста,
		|	БазоваяИнформация.Перевозчик КАК Перевозчик,
		|	БазоваяИнформация.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
		|	БазоваяИнформация.Маршрут КАК Маршрут,
		|	БазоваяИнформация.Водитель КАК Водитель,
		|	БазоваяИнформация.Автомобиль КАК Автомобиль,
		|	БазоваяИнформация.Ссылка КАК РасходныйОрдер,
		|	БазоваяИнформация.Оператор КАК Оператор,
		//|	ЕСТЬNULL(ТабельРаботыПродавцов.Сотрудник, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК СтаршийПродавец,
		|	БазоваяИнформация.Сумма КАК Сумма,
		|	ЕСТЬNULL(ВТСлужебная.Вес, 0) КАК Вес
		|ИЗ
		|	БазоваяИнформация КАК БазоваяИнформация
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВТСлужебная.Ссылка КАК Ссылка,
		|			СУММА(ВТСлужебная.Вес) КАК Вес
		|		ИЗ
		|			ВТСлужебная КАК ВТСлужебная
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВТСлужебная.Ссылка) КАК ВТСлужебная
		|		ПО (ВТСлужебная.Ссылка = БазоваяИнформация.Ссылка)
		//|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		//|			ТабельРаботыПродавцов.Период КАК Период,
		//|			ТабельРаботыПродавцов.Сотрудник КАК Сотрудник,
		//|			ТабельРаботыПродавцов.ТорговаяТочка КАК ТорговаяТочка
		//|		ИЗ
		//|			РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
		//|		ГДЕ
		//|			ТабельРаботыПродавцов.СвойствоПродавца = 2
		//|			И ТабельРаботыПродавцов.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.ПустаяСсылка)) КАК ТабельРаботыПродавцов
		//|		ПО (ТабельРаботыПродавцов.ТорговаяТочка = БазоваяИнформация.СтруктурнаяЕдиница)
		//|			И (ТабельРаботыПродавцов.Период <= БазоваяИнформация.ДатаМаршрутногоЛиста)
		|
		|УПОРЯДОЧИТЬ ПО
		|	БазоваяИнформация.МаршрутПорядокСортировки,
		|	БазоваяИнформация.МаршрутНаименование,
		|	БазоваяИнформация.ПолучательКод,
		|	Перевозчик,
		|	Водитель,
		|	Автомобиль
		|ИТОГИ
		|	МАКСИМУМ(Маршрут),
		|	МАКСИМУМ(Оператор)
		//|	,МАКСИМУМ(СтаршийПродавец)
		|ПО
		|	ДатаМаршрутногоЛиста,
		|	НомерМаршрутногоЛиста,
		|	Перевозчик,
		|	СтруктурнаяЕдиница,
		|	Водитель,
		|	Автомобиль";

		Результат = Запрос.Выполнить();
		
		ВыборкаДатаМаршрутногоЛиста = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		Пока ВыборкаДатаМаршрутногоЛиста.Следующий() Цикл
			
			мДатаТТН = ВыборкаДатаМаршрутногоЛиста.ДатаМаршрутногоЛиста;
			ДатаНаПечать 	= Формат(мДатаТТН, "ДФ=""дд.ММ.гг""");

			СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, мДатаТТН);
			мТекстГрузоотправителя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(
														СведенияОбОрганизации, "НаименованиеСокращенное,ЮридическийАдрес,Телефоны");
			
			ВыборкаНомерМаршрутногоЛиста = ВыборкаДатаМаршрутногоЛиста.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаНомерМаршрутногоЛиста.Следующий() Цикл
				
				ТекстНомераТТН = "";
				Если ЗначениеЗаполнено(ВыборкаНомерМаршрутногоЛиста.НомерМаршрутногоЛиста) Тогда
					ТекстНомераТТН = ПреобразоватьНомерДокВТекстНомераТТН(ВыборкаНомерМаршрутногоЛиста.НомерМаршрутногоЛиста);
				КонецЕсли;
				
				ТекОператор = ВыборкаНомерМаршрутногоЛиста.Оператор;
				ТекМаршрут 	= ВыборкаНомерМаршрутногоЛиста.Маршрут;
			
				ВыборкаПеревозчик = ВыборкаНомерМаршрутногоЛиста.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПеревозчик.Следующий() Цикл
					
					ТекПеревозчик = ВыборкаПеревозчик.Перевозчик;
					Если НЕ ЗначениеЗаполнено(ТекПеревозчик) тогда
						ТекПеревозчик = Справочники.Контрагенты.ПустаяСсылка();
					КонецЕсли;
					Если ТекПеревозчик.ЮрФизЛицо = мЮрЛицо Тогда
						ТекИсполнитель 		= СокрЛП(ТекПеревозчик.ГенеральныйДиректор);
						ЮрАдресПеревозчика 	= ОбщегоНазначения.ПолучитьКонтактнуюИнформациюПоВиду(ТекПеревозчик, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
					Иначе
						ТекИсполнитель 		= СокрЛП(ТекПеревозчик.Наименование);
						ЮрАдресПеревозчика 	= ОбщегоНазначения.ПолучитьКонтактнуюИнформациюПоВиду(ТекПеревозчик, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
					КонецЕсли;
					
					ВыборкаСтруктурнаяЕдиница = ВыборкаПеревозчик.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаСтруктурнаяЕдиница.Следующий() Цикл
						
						ЗапросДатаИСтруктурнаяЕдиница.УстановитьПараметр("ДатаМаршрутногоЛиста"	, мДатаТТН);
						ЗапросДатаИСтруктурнаяЕдиница.УстановитьПараметр("СтруктурнаяЕдиница"		, ВыборкаСтруктурнаяЕдиница.СтруктурнаяЕдиница);
						Результаты = ЗапросДатаИСтруктурнаяЕдиница.ВыполнитьПакет();
						ВыборкаОрганизации = Результаты[1].Выбрать();
						Если ВыборкаОрганизации.Следующий() Тогда
							ОрганизацияПолучатель = ВыборкаОрганизации.Организация;
						Иначе                      
							ОрганизацияПолучатель = Справочники.Организации.ПустаяСсылка();
						КонецЕсли;
						ВыборкаСтаршийПродавец = Результаты[2].Выбрать();
						Если ВыборкаСтаршийПродавец.Следующий() Тогда
							СтаршийПродавец = ВыборкаСтаршийПродавец.Сотрудник;
						Иначе                      
							СтаршийПродавец = Справочники.ФизическиеЛица.ПустаяСсылка();
						КонецЕсли;

						СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ОрганизацияПолучатель, мДатаТТН);
						мТекстГрузополучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(
																		СведенияОбОрганизации, "НаименованиеСокращенное,ЮридическийАдрес,Телефоны");
																						
						ВыборкаВодитель = ВыборкаСтруктурнаяЕдиница.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаВодитель.Следующий() Цикл
							
	                        ТекВодитель = ВыборкаВодитель.Водитель;
							
							ВыборкаАвтомобиль = ВыборкаВодитель.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаАвтомобиль.Следующий() Цикл
								
								ТекАвтомобиль = ВыборкаАвтомобиль.Автомобиль;
								
								//
								ТекстОрдеров 	= "";
								ТекСумма = 0;
								обВес = 0;
								МассивОрдеров = Новый Массив;
								
								ВыборкаДетальныеЗаписи = ВыборкаАвтомобиль.Выбрать();
								Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
									ТекстОрдеров = ТекстОрдеров + "; " + ОбщегоНазначения.ПолучитьНомерНаПечать(ВыборкаДетальныеЗаписи.РасходныйОрдер) + " от " + ДатаНаПечать;
									МассивОрдеров.Добавить(ВыборкаДетальныеЗаписи.РасходныйОрдер);
									ТекСумма = ТекСумма + ВыборкаДетальныеЗаписи.Сумма;
									обВес = обВес + ВыборкаДетальныеЗаписи.Вес;
								КонецЦикла;
								Если НЕ ТекстОрдеров = "" Тогда
									ТекстОрдеров = Сред(ТекстОрдеров, 3);
								КонецЕсли;
								
								//
								ОбластьМакета.Параметры.ДатаТТН 			= ДатаНаПечать;
								ОбластьМакета.Параметры.НомерТТН 			= ТекстНомераТТН;
								ОбластьМакета.Параметры.Маршрут 			= ?(ЗначениеЗаполнено(ТекМаршрут), СокрЛП(ТекМаршрут.Наименование), "");
								ОбластьМакета.Параметры.Грузополучатель 	= мТекстГрузополучателя;
								ОбластьМакета.Параметры.НаименованиеГруза 	= "Согласно накладных: " + ТекстОрдеров + ".";
								ОбластьМакета.Параметры.ПереченьДокументов 	= "Накладные: " + ТекстОрдеров + ".";
								ОбластьМакета.Параметры.Грузоотправитель	= мТекстГрузоотправителя;
								
								ПечПеревозчик = СокрЛП(ТекПеревозчик.Наименование);
								Если ЮрАдресПеревозчика.Свойство("Представление") Тогда
									ПечПеревозчик = ПечПеревозчик + ?(СокрЛП(ЮрАдресПеревозчика.Представление) = "", "", "; " + СокрЛП(ЮрАдресПеревозчика.Представление));
								КонецЕсли;								
								ОбластьМакета.Параметры.Перевозчик 			= ПечПеревозчик;
								
								ОбластьМакета.Параметры.Дата_ПриемГруза			= Формат(мДатаТТН, "ДЛФ=Д") + " 09:00";
								ОбластьМакета.Параметры.ДатаПрибытия_ПриемГруза	= Формат(мДатаТТН, "ДЛФ=Д") + " 08:50";
								ОбластьМакета.Параметры.ДатаУбытия_ПриемГруза	= Формат(мДатаТТН, "ДЛФ=Д") + " 09:20";
								ОбластьМакета.Параметры.Дата_СдачаГруза			= Формат(мДатаТТН, "ДЛФ=Д") + " 10:00";
								ОбластьМакета.Параметры.ДатаПрибытия_СдачаГруза	= Формат(мДатаТТН, "ДЛФ=Д") + " 09:50";
								ОбластьМакета.Параметры.ДатаУбытия_СдачаГруза	= Формат(мДатаТТН, "ДЛФ=Д") + " 10:20";
								ОбластьМакета.Параметры.ДатаПринятияКИсполнению	= Формат(мДатаТТН - 2 * 86400, "ДЛФ=Д");
								ОбластьМакета.Параметры.МассаГруза				= Формат(обВес, "ЧГ=") + " кг";
								ОбластьМакета.Параметры.Исполнитель				= ОбщегоНазначения.ФамилияИнициалыФизЛица(ТекИсполнитель);
								ОбластьМакета.Параметры.ОрганизацияПлательщик	= "";
								
								ОбластьМакета.Параметры.НадписьОператор				= "Оператор";
								ОбластьМакета.Параметры.НадписьПродавецКонсультант	= "Продавец-консультант";
								ОбластьМакета.Параметры.СтаршийПродавец				= СтаршийПродавец;
								Если ЗначениеЗаполнено(ТекОператор) Тогда
									ОбластьМакета.Параметры.Оператор				= ОбщегоНазначения.ФамилияИнициалыФизЛица(ТекОператор);
									ОбластьМакета.Параметры.Грузоотправитель16_1	= ОбщегоНазначения.ФамилияИнициалыФизЛица(ТекОператор);
									ОбластьМакета.Рисунки.Очистить();
									ПодписьОператора = ОбщегоНазначения.ПолучитьПодписьФизлица(ТекОператор).Получить();
									Если ТипЗнч(ПодписьОператора) = Тип("Картинка") Тогда
										РисунокПодписи = ОбластьМакета.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
								    	РисунокПодписи.Расположить(ОбластьМакета.Область(44, 3, 44, 4));
										РисунокПодписи.Узор 		= ТипУзораТабличногоДокумента.БезУзора;
								    	РисунокПодписи.ЦветФона 	= Новый Цвет; // автоцвет (прозрачный чтоб полоску подчеркивания видно было)
								    	РисунокПодписи.Линия 		= Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии, 0);
								    	РисунокПодписи.Картинка 	= ПодписьОператора;
										РисунокПодписи = ОбластьМакета.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
								    	РисунокПодписи.Расположить(ОбластьМакета.Область(105, 11, 107, 12));
										РисунокПодписи.Узор 		= ТипУзораТабличногоДокумента.БезУзора;
								    	РисунокПодписи.ЦветФона 	= Новый Цвет; // автоцвет (прозрачный чтоб полоску подчеркивания видно было)
								    	РисунокПодписи.Линия 		= Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии, 0);
								    	РисунокПодписи.Картинка 	= ПодписьОператора;
									КонецЕсли;
								КонецЕсли;
								
								Адреса = Документы.АктПеревозчика.ПолучитьТекстыАдресов(МассивОрдеров);
								ОбластьМакета.Параметры.Заполнить(Адреса);
								
								ИмяВодителя = СокрЛП(ТекВодитель.Наименование);
								ОбластьМакета.Параметры.Водитель 			= "";//ИмяВодителя;
								//ОбластьМакета.Параметры.ГосНомерАвтомобиля 	= СокрЛП(ТекАвтомобиль.Наименование);
								ОбластьМакета.Параметры.Автомобиль 			= СокрЛП(ТекАвтомобиль.Марка) +
														?(ТекАвтомобиль.Тоннаж > 0, ", " + Формат(Окр(ТекАвтомобиль.Тоннаж, 1), "ЧГ=") + "т", "");
													
								ОбластьМакета.Параметры.Стоимость 			= "";	
								ОбластьМакета.Параметры.ДатаТТН 			= ДатаНаПечать;
								
								
								ТабДокумент.Вывести(ОбластьМакета);
								
								ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
								
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
		// ДОСТАВКА НА СКЛАД
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	МаршрутныйЛистПриходныеОрдера.ПриходныйОрдер КАК Ордер,
		|	МаршрутныйЛистПриходныеОрдера.Ссылка КАК МаршрутныйЛист,
		|	МаршрутныйЛистПриходныеОрдера.Ссылка.МаршрутТранспортныхКомпаний КАК Маршрут,
		|	МаршрутныйЛистПриходныеОрдера.Ссылка.Сумма КАК Сумма,
		|	МаршрутныйЛистПриходныеОрдера.Ссылка.Автомобиль КАК Автомобиль,
		|	МаршрутныйЛистПриходныеОрдера.Ссылка.Водитель КАК Водитель,
		|	МаршрутныйЛистПриходныеОрдера.Ссылка.Перевозчик КАК Перевозчик,
		|	МаршрутныйЛистПриходныеОрдера.Ссылка.Оператор.ФизЛицо КАК ФизЛицо,
		|	МаршрутныйЛистПриходныеОрдера.Ссылка.Номер КАК НомерМаршрутногоЛиста,
		|	НАЧАЛОПЕРИОДА(МаршрутныйЛистПриходныеОрдера.Ссылка.Дата, ДЕНЬ) КАК ДатаМаршрутногоЛиста,
		|	МаршрутныйЛистПриходныеОрдера.Ссылка.МаршрутТранспортныхКомпаний.Наименование КАК МаршрутНаименование
		|ПОМЕСТИТЬ ВТПриходныеОрдера
		|ИЗ
		|	Документ.МаршрутныйЛист.ПриходныеОрдера КАК МаршрутныйЛистПриходныеОрдера
		|ГДЕ
		|	МаршрутныйЛистПриходныеОрдера.Ссылка В(&МассивДокументов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ордер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТПриходныеОрдера.Ордер КАК Ссылка,
		|	ВТПриходныеОрдера.Сумма,
		|	ВТПриходныеОрдера.Маршрут,
		|	ВТПриходныеОрдера.НомерМаршрутногоЛиста,
		|	ВТПриходныеОрдера.МаршрутНаименование,
		|	ВЫБОР
		|		КОГДА ВТПриходныеОрдера.Автомобиль = ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)
		|			ТОГДА ПриходныйОрдерСклад.Автомобиль
		|		ИНАЧЕ ВТПриходныеОрдера.Автомобиль
		|	КОНЕЦ КАК Автомобиль,
		|	ВЫБОР
		|		КОГДА ВТПриходныеОрдера.Водитель = ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаКонтрагентов.ПустаяСсылка)
		|			ТОГДА ПриходныйОрдерСклад.Автомобиль.ОсновнойВодитель
		|		ИНАЧЕ ВТПриходныеОрдера.Водитель
		|	КОНЕЦ КАК Водитель,
		|	ВЫБОР
		|		КОГДА ВТПриходныеОрдера.Перевозчик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ПриходныйОрдерСклад.Автомобиль.Перевозчик
		|		ИНАЧЕ ВТПриходныеОрдера.Перевозчик
		|	КОНЕЦ КАК Перевозчик,
		|	ВТПриходныеОрдера.ДатаМаршрутногоЛиста,
		|	ВТПриходныеОрдера.МаршрутныйЛист,
		|	ВТПриходныеОрдера.Ордер,
		|	ЕСТЬNULL(ВТПриходныеОрдера.ФизЛицо, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК Оператор
		|ПОМЕСТИТЬ БазоваяИнформация
		|ИЗ
		|	ВТПриходныеОрдера КАК ВТПриходныеОрдера
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
		|		ПО ВТПриходныеОрдера.Ордер = ПриходныйОрдерСклад.Ссылка
		|ГДЕ
		|	ПриходныйОрдерСклад.Ссылка В
		|			(ВЫБРАТЬ
		|				ВТПриходныеОрдера.Ордер
		|			ИЗ
		|				ВТПриходныеОрдера)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(БазоваяИнформация.Перевозчик, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Перевозчик,
		|	ЕСТЬNULL(БазоваяИнформация.Автомобиль, ЗНАЧЕНИЕ(Справочник.Автомобили.ПустаяСсылка)) КАК Автомобиль,
		|	ЕСТЬNULL(БазоваяИнформация.Водитель, ЗНАЧЕНИЕ(Справочник.КонтактныеЛицаКонтрагентов.ПустаяСсылка)) КАК Водитель,
		|	БазоваяИнформация.ДатаМаршрутногоЛиста КАК ДатаМаршрутногоЛиста,
		|	ПриходныйОрдерСкладТовары.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(ПриходныйОрдерСкладТовары.ЕдиницаИзмерения.Вес, 0) * ЕСТЬNULL(ПриходныйОрдерСкладТовары.Количество, 0) КАК Вес
		|ПОМЕСТИТЬ ВТСлужебная
		|ИЗ
		|	БазоваяИнформация КАК БазоваяИнформация
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		|		ПО БазоваяИнформация.Ссылка = ПриходныйОрдерСкладТовары.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БазоваяИнформация.НомерМаршрутногоЛиста КАК НомерМаршрутногоЛиста,
		|	БазоваяИнформация.ДатаМаршрутногоЛиста КАК ДатаМаршрутногоЛиста,
		|	БазоваяИнформация.Перевозчик КАК Перевозчик,
		|	БазоваяИнформация.Маршрут КАК Маршрут,
		|	БазоваяИнформация.Водитель КАК Водитель,
		|	БазоваяИнформация.Автомобиль КАК Автомобиль,
		|	БазоваяИнформация.Ссылка КАК ПриходныйОрдер,
		|	БазоваяИнформация.Оператор КАК Оператор,
		|	БазоваяИнформация.Сумма КАК Сумма,
		|	ЕСТЬNULL(ВТСлужебная.Вес, 0) КАК Вес,
		|	ЕСТЬNULL(ВТПоставщики.Поставщик, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Поставщик
		|ИЗ
		|	БазоваяИнформация КАК БазоваяИнформация
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВТСлужебная.Ссылка КАК Ссылка,
		|			СУММА(ВТСлужебная.Вес) КАК Вес
		|		ИЗ
		|			ВТСлужебная КАК ВТСлужебная
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ВТСлужебная.Ссылка) КАК ВТСлужебная
		|		ПО (ВТСлужебная.Ссылка = БазоваяИнформация.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МаршрутыТранспортныхКомпаний.Поставщики КАК ВТПоставщики
		|		ПО (ВТПоставщики.Ссылка = БазоваяИнформация.Маршрут)
		|
		|УПОРЯДОЧИТЬ ПО
		|	БазоваяИнформация.МаршрутНаименование,
		|	Перевозчик,
		|	Водитель,
		|	Автомобиль
		|ИТОГИ
		|	МАКСИМУМ(Маршрут),
		|	МАКСИМУМ(Оператор)
		|ПО
		|	ДатаМаршрутногоЛиста,
		|	НомерМаршрутногоЛиста,
		|	Перевозчик,
		|	Поставщик,
		|	Водитель,
		|	Автомобиль";

		Результат = Запрос.Выполнить();
		
		ВыборкаДатаМаршрутногоЛиста = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		мЮрЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
		
		Пока ВыборкаДатаМаршрутногоЛиста.Следующий() Цикл
			
			мДатаТТН = ВыборкаДатаМаршрутногоЛиста.ДатаМаршрутногоЛиста;
			ДатаНаПечать 	= Формат(мДатаТТН, "ДФ=""дд.ММ.гг""");

			СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, мДатаТТН);
			мТекстГрузополучателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеСокращенное,ЮридическийАдрес,Телефоны");
			
			ВыборкаНомерМаршрутногоЛиста = ВыборкаДатаМаршрутногоЛиста.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаНомерМаршрутногоЛиста.Следующий() Цикл
				
				ТекстНомераТТН = "";
				Если ЗначениеЗаполнено(ВыборкаНомерМаршрутногоЛиста.НомерМаршрутногоЛиста) Тогда
					ТекстНомераТТН = ПреобразоватьНомерДокВТекстНомераТТН(ВыборкаНомерМаршрутногоЛиста.НомерМаршрутногоЛиста);
				КонецЕсли;
				
				ТекОператор = ВыборкаНомерМаршрутногоЛиста.Оператор;
				ТекМаршрут 	= ВыборкаНомерМаршрутногоЛиста.Маршрут;
			
				ВыборкаПеревозчик = ВыборкаНомерМаршрутногоЛиста.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаПеревозчик.Следующий() Цикл
					
					ТекПеревозчик = ВыборкаПеревозчик.Перевозчик;
					Если НЕ ЗначениеЗаполнено(ТекПеревозчик) тогда
						ТекПеревозчик = Справочники.Контрагенты.ПустаяСсылка();
					КонецЕсли;
					//Если ТекПеревозчик.ЮрФизЛицо = мЮрЛицо Тогда
					//	ТекИсполнитель 		= СокрЛП(ТекПеревозчик.ГенеральныйДиректор);
					//	ЮрАдресПеревозчика 	= ОбщегоНазначения.ПолучитьКонтактнуюИнформациюПоВиду(ТекПеревозчик, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
					//Иначе
					ТекИсполнитель 		= СокрЛП(ТекПеревозчик.Наименование);
					ЮрАдресПеревозчика 	= ОбщегоНазначения.ПолучитьКонтактнуюИнформациюПоВиду(ТекПеревозчик, Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
					//КонецЕсли;
					
					ВыборкаПоставщик = ВыборкаПеревозчик.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаПоставщик.Следующий() Цикл
						
						ТекПоставщик = ВыборкаПоставщик.Поставщик;
						СведенияОПоставщике = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ТекПоставщик, мДатаТТН);
						мТекстПоставщика 	= ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,ЮридическийАдрес,Телефоны");
						мТекстАдресПогрузки = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ЮридическийАдрес,");
						//																
						ВыборкаВодитель = ВыборкаПоставщик.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаВодитель.Следующий() Цикл
							
	                        ТекВодитель = ВыборкаВодитель.Водитель;
							
							ВыборкаАвтомобиль = ВыборкаВодитель.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаАвтомобиль.Следующий() Цикл
								
								ТекАвтомобиль = ВыборкаАвтомобиль.Автомобиль;
								
								ВыборкаДетальныеЗаписи = ВыборкаАвтомобиль.Выбрать();
								
								ТекстОрдеров 	= "";
								ТекСумма = 0;
								обВес = 0;
								МассивОрдеров = Новый Массив;
								
								Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
									//ТекстОрдеров = ТекстОрдеров + "; " + ОбщегоНазначения.ПолучитьНомерНаПечать(ВыборкаДетальныеЗаписи.ПриходныйОрдер) + " от " + ДатаНаПечать;
									ТекстОрдеров = ТекстОрдеров + "; " + СокрЛП(ВыборкаДетальныеЗаписи.ПриходныйОрдер.НомерДокументаПоставщика) + " от " +
																			?(ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ПриходныйОрдер.ДатаДокументаПоставщика),
																				Формат(ВыборкаДетальныеЗаписи.ПриходныйОрдер.ДатаДокументаПоставщика, "ДФ=""дд.ММ.гг"""),
																				Формат(ВыборкаДетальныеЗаписи.ПриходныйОрдер.Дата, "ДФ=""дд.ММ.гг"""));
									МассивОрдеров.Добавить(ВыборкаДетальныеЗаписи.ПриходныйОрдер);
									ТекСумма = ТекСумма + ВыборкаДетальныеЗаписи.Сумма;
									обВес = обВес + ВыборкаДетальныеЗаписи.Вес;
								КонецЦикла;
								Если НЕ ТекстОрдеров = "" Тогда
									ТекстОрдеров = Сред(ТекстОрдеров, 3);
								КонецЕсли;
								
								//
								ОбластьМакета.Параметры.ДатаТТН 			= ДатаНаПечать;
								ОбластьМакета.Параметры.НомерТТН 			= ТекстНомераТТН;
								ОбластьМакета.Параметры.Маршрут 			= ?(ЗначениеЗаполнено(ТекМаршрут), СокрЛП(ТекМаршрут.Наименование), "");
								ОбластьМакета.Параметры.Грузополучатель 	= мТекстГрузополучателя;
								ОбластьМакета.Параметры.НаименованиеГруза 	= "Согласно накладных: " + ТекстОрдеров + ".";
								ОбластьМакета.Параметры.ПереченьДокументов 	= "Накладные: " + ТекстОрдеров + ".";
								ОбластьМакета.Параметры.Грузоотправитель	= мТекстПоставщика;
								
								ПечПеревозчик = СокрЛП(ТекПеревозчик.Наименование);
								Если ЮрАдресПеревозчика.Свойство("Представление") Тогда
									ПечПеревозчик = ПечПеревозчик + ?(СокрЛП(ЮрАдресПеревозчика.Представление) = "", "", "; " + СокрЛП(ЮрАдресПеревозчика.Представление));
								КонецЕсли;								
								ОбластьМакета.Параметры.Перевозчик 			= ПечПеревозчик;
								
								ОбластьМакета.Параметры.Дата_ПриемГруза			= Формат(мДатаТТН, "ДЛФ=Д") + " 09:00";
								ОбластьМакета.Параметры.ДатаПрибытия_ПриемГруза	= Формат(мДатаТТН, "ДЛФ=Д") + " 08:50";
								ОбластьМакета.Параметры.ДатаУбытия_ПриемГруза	= Формат(мДатаТТН, "ДЛФ=Д") + " 09:20";
								ОбластьМакета.Параметры.Дата_СдачаГруза			= Формат(мДатаТТН, "ДЛФ=Д") + " 10:00";
								ОбластьМакета.Параметры.ДатаПрибытия_СдачаГруза	= Формат(мДатаТТН, "ДЛФ=Д") + " 09:50";
								ОбластьМакета.Параметры.ДатаУбытия_СдачаГруза	= Формат(мДатаТТН, "ДЛФ=Д") + " 10:20";
								ОбластьМакета.Параметры.ДатаПринятияКИсполнению	= Формат(мДатаТТН - 2 * 86400, "ДЛФ=Д");
								ОбластьМакета.Параметры.МассаГруза				= Формат(обВес, "ЧГ=") + " кг";
								//ОбластьМакета.Параметры.Исполнитель				= ОбщегоНазначения.ФамилияИнициалыФизЛица(ТекИсполнитель);
								ОбластьМакета.Параметры.Исполнитель				= ТекИсполнитель;
								
								ОбластьМакета.Параметры.ОрганизацияПлательщик	= мТекстГрузополучателя;
								ОбластьМакета.Параметры.Грузоотправитель16_1	= ТекПоставщик;
								
								ОбластьМакета.Параметры.НадписьОператор				= "Кладовщик";
								ОбластьМакета.Параметры.НадписьПродавецКонсультант	= "Оператор";
								ОбластьМакета.Параметры.Оператор					= "";
								//Если ЗначениеЗаполнено(ТекОператор) Тогда
								//	ОбластьМакета.Параметры.Оператор		= ОбщегоНазначения.ФамилияИнициалыФизЛица(ТекОператор);
									ОбластьМакета.Рисунки.Очистить();
								//КонецЕсли;
								
								Адреса = Документы.АктПеревозчика.ПолучитьТекстыАдресов(МассивОрдеров);
								ОбластьМакета.Параметры.Заполнить(Адреса);
								ОбластьМакета.Параметры.АдресаПогрузки		= мТекстАдресПогрузки;
								
								ИмяВодителя = СокрЛП(ТекВодитель.Наименование);
								ОбластьМакета.Параметры.Водитель 			= "";//ИмяВодителя;
								//ОбластьМакета.Параметры.ГосНомерАвтомобиля 	= СокрЛП(ТекАвтомобиль.Наименование);
								ОбластьМакета.Параметры.Автомобиль 			= СокрЛП(ТекАвтомобиль.Марка) +
														?(ТекАвтомобиль.Тоннаж > 0, ", " + Формат(Окр(ТекАвтомобиль.Тоннаж, 1), "ЧГ=") + "т", "");
													
								ОбластьМакета.Параметры.Стоимость 			= "";	
								ОбластьМакета.Параметры.ДатаТТН 			= ДатаНаПечать;
								
								
								ТабДокумент.Вывести(ОбластьМакета);
								
								ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
								
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
		ТабДокумент.ПолеСнизу 			= 5;
		ТабДокумент.ПолеСверху 			= 5;	
		ТабДокумент.АвтоМасштаб 		= Истина;
		ТабДокумент.ОтображатьСетку 	= Ложь;
		ТабДокумент.Защита 				= Ложь;
		ТабДокумент.ТолькоПросмотр 		= Ложь;
		ТабДокумент.ОтображатьЗаголовки = Ложь;
		
		Возврат ТабДокумент;
		
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

Функция ПечатьТранспортнойНакладной(ПараметрКоманды) Экспорт 
	
	Таб = Новый ТабличныйДокумент;
	
	Возврат НапечататьОрдераМаршрута_Новый(Таб, ПараметрКоманды);
	
КонецФункции
