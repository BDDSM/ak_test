
#Область Параметров

&НаСервере
Перем СтруктураПараметров;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьПараметрыФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ВремяИстекло Тогда
		ПодключитьОбработчикОжидания("ПоказатьУведомлениеВремяИстекло", 0.5, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ТестПройден И Не РаспечатанПротокол Тогда
		
		Оповещение = Новый ОписаниеОповещения("ПечатьПротоколаВопросЗавершение", ЭтаФорма);
        ПоказатьВопрос(Оповещение, НСтр("ru = 'Распечатать протокол перед закрытием?'", "ru"), РежимДиалогаВопрос.ДаНет, 15 );

	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьПараметрыФормы()

	СтруктураПараметров = ЗначениеИзСтрокиВнутр(Параметры.СтруктураПараметров);
	
	Для Каждого Параметр Из СтруктураПараметров Цикл
		ЭтаФорма[Параметр.Ключ] = Параметр.Значение;     
	КонецЦикла;
	
	Параметры.Свойство("ВремяИстекло", ВремяИстекло);
	
	ЗаполнитьРассчетныеПоказатели();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРассчетныеПоказатели()

    ЭтаФорма.Заголовок = СтрЗаменить("Результаты: ВидАттестации", "ВидАттестации", ВидАттестации);
	
	//Подсчет правильных ответов
	ТаблицаВопросов = ЗначениеИзСтрокиВнутр(ВопросыСтрока);
	
	НайденныеСтроки = ТаблицаВопросов.НайтиСтроки(Новый Структура("Правильный", Истина));
	ОтветыПравильные = НайденныеСтроки.Количество();
	
	//Формирование надписей
	Если ВопросыВсего - ОтветыПравильные <= КвоДопустимыхОшибок Тогда 
		РезультатНадпись = "Поздравляем!!! Тест успешно пройден!";
		ТестПройден = Истина;
	Иначе
		РезультатНадпись = "Тест не пройден!!!";
		Элементы.РезультатНадпись.ЦветТекста = WebЦвета.ТемноКрасный;
		ТестПройден = Ложь;
	КонецЕсли;

	Ответы = Строка(ОтветыПравильные) + " из " + ВопросыВсего;
	
	Затрачено = Строка(Окр((ВремяОкончанияТестирования - ВремяНачалаТестирования) / 60,0)) + " из " + КвоМинут + " мин.";
	
	Если ТестПройден Тогда
		СформироватьЗаписьИтогиПрохожденияАттестации(СтруктураПараметров);
	КонецЕсли;
	
	Элементы.КоммандаРаспечататьПротокол.Видимость = ТестПройден;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьЗаписьИтогиПрохожденияАттестации(СтруктураПараметров)
	
	МенеджерЗаписи = РегистрыСведений.ИтогиПрохожденияАттестацииСотрудников.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Период        = НачалоДня(СтруктураПараметров.ВремяНачалаТестирования);
	МенеджерЗаписи.Организация   = СтруктураПараметров.Организация;
	МенеджерЗаписи.ВидАттестации = СтруктураПараметров.ВидАттестации;
	МенеджерЗаписи.ФизЛицо         = СтруктураПараметров.Сотрудник;
	МенеджерЗаписи.Протокол        = Новый ХранилищеЗначения(ЗначениеВСтрокуВнутр(СтруктураПараметров), Новый СжатиеДанных(9));
	МенеджерЗаписи.НомерПротокола  = РегистрыСведений.ИтогиПрохожденияАттестацииСотрудников.СгенерироватьНомерПротокола(СтруктураПараметров);
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьПротоколаВопросЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
	     НапечататьПротоколКлиент();
	 Иначе
		 РаспечатанПротокол = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НапечататьПротоколКлиент()
	
	РаспечатанПротокол = Истина;
	
	НапечататьПротоколАттестации(Новый Структура("Организация, ВидАттестации, ФизЛицо, Период", 
						Организация, ВидАттестации, Сотрудник, ВремяНачалаТестирования));
	
	Если ТабДок.Области.Количество()> 0 Тогда
		ОткрытьФорму("ОбщаяФорма.ФормаПечати", Новый Структура("ТабДок", ТабДок));
	Иначе
		ПоказатьПредупреждение(,"Отсутствуют данные по установленному отбору! Печать протокола невозможна!");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НапечататьПротоколАттестации(СтруктураПараметров)
	
	РегистрыСведений.ИтогиПрохожденияАттестацииСотрудников.НапечататьПротоколАттестации(СтруктураПараметров, ТабДок);
	
КонецПроцедуры

&НаКлиенте
Процедура РаспечататьПротокол(Команда)
	
	НапечататьПротоколКлиент();

КонецПроцедуры

&НаКлиенте
Процедура ПоказатьУведомлениеВремяИстекло()Экспорт
	ПоказатьПредупреждение(,"Время истекло!");
КонецПроцедуры

#КонецОбласти
