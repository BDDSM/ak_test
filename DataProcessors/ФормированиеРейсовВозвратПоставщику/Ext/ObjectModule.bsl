
//+++АК sole 2018.07.13 ИП-00018320.04
// Проверяет на наличие уже созданных в заданный день документов "Маршрутный лист" (доставка на ТТ).
//
// Возврат:
//   Массив ссылок на документы.
//
Функция ПолучитьСозданныеДокументы() Экспорт
	
	Перем Запрос;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МаршрутныйЛист.Ссылка
	|
	|ИЗ	Документ.МаршрутныйЛист КАК МаршрутныйЛист
	|ГДЕ
	|		НЕ МаршрутныйЛист.ПометкаУдаления
	|	И	МаршрутныйЛист.Дата >= &ДатаНачала 
	|	И 	МаршрутныйЛист.Дата <= &ДатаОкончания
	|	И	МаршрутныйЛист.ВидПеревозки = ЗНАЧЕНИЕ(Справочник.АК_ВидыПеревозки.ВозвратПоставщику)
	|	И	(
	|				МаршрутныйЛист.Перевозчик = &Перевозчик
	|			ИЛИ &Перевозчик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|		)
	|	И 	(	
	|				МаршрутныйЛист.Организация = &Организация
	|			ИЛИ &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		)
	|";
	
	Запрос.УстановитьПараметр("ДатаНачала", ЭтотОбъект.ДатаРейсов);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ЭтотОбъект.ДатаРейсов));
	Запрос.УстановитьПараметр("Перевозчик", ЭтотОбъект.Перевозчик);
	Запрос.УстановитьПараметр("Организация", ЭтотОбъект.Организация);

	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

//+++АК sole 2018.07.13 ИП-00018320.04
// Удаляет документы, полученные в результате запроса.
//
// Параметры:
// 	 МассивСсылок - Массив ссылок на документы.
//
Процедура УдалитьСуществующиеДокументы(МассивСсылок, ВыводитьСообщения = Ложь) Экспорт
	
	Перем ОбъектДокумента;
	
	Для Каждого ЭлементМассива Из МассивСсылок Цикл
		ОбъектДокумента = ЭлементМассива.ПолучитьОбъект();
		Попытка
			ОбъектДокумента.УстановитьПометкуУдаления(Истина);
			Если ВыводитьСообщения = Истина Тогда
				Сообщить("Помечен на удаление документ """ + ОбъектДокумента + """");
			КонецЕсли;
		Исключение
			Если ВыводитьСообщения = Истина Тогда
				Сообщить("Не удалось пометить на удаление документ """ + ОбъектДокумента + """" + ОписаниеОшибки());
			КонецЕсли;
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

//+++АК sole 2018.07.16 ИП-00018320.04
Процедура СформироватьДокументы(ВыводитьСообщения = Ложь) Экспорт
	
	Перем Запрос;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
"ВЫБРАТЬ
|	АК_ЗаявкаНаПеревозку.Ссылка
|
|ИЗ Документ.АК_ЗаявкаНаПеревозку КАК АК_ЗаявкаНаПеревозку
|ГДЕ
|		НЕ АК_ЗаявкаНаПеревозку.ПометкаУдаления
|	И	АК_ЗаявкаНаПеревозку.Проведен
|	И	АК_ЗаявкаНаПеревозку.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаПеревозку.Согласована)
|   И	АК_ЗаявкаНаПеревозку.Дата >= &ДатаНачала
|	И	АК_ЗаявкаНаПеревозку.Дата <= &ДатаОкончания
|	И	(
|        		АК_ЗаявкаНаПеревозку.Организация = &Организация 
|			ИЛИ &Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
|		)
|	И	(
| 				АК_ЗаявкаНаПеревозку.Перевозчик = &Перевозчик
|			ИЛИ	&Перевозчик = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
|		)
|";	
	Запрос.УстановитьПараметр("ДатаНачала", ЭтотОбъект.ДатаРейсов);
	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ЭтотОбъект.ДатаРейсов));
	Запрос.УстановитьПараметр("Организация", ЭтотОбъект.Организация);
	Запрос.УстановитьПараметр("Перевозчик", ЭтотОбъект.Перевозчик);
	Выборка = Запрос.Выполнить().Выбрать();
	
	//Документов будет мало, менее 10 документов в сутки, 
	//поэтому заполнение документов реализовано, через обработку заполенения.
	Пока Выборка.Следующий() Цикл
		оМаршрутныйЛист = Документы.МаршрутныйЛист.СоздатьДокумент();
		оМаршрутныйЛист.Заполнить(Выборка.Ссылка);
		оМаршрутныйЛист.Проведен = Истина;
		оМаршрутныйЛист.ПроверятьУникальностьРейсаОтносительноЗаявки = Ложь;
		Попытка
			оМаршрутныйЛист.Записать();
			
			Если ВыводитьСообщения = Истина Тогда
				Сообщить("Создан документ """ + оМаршрутныйЛист + """");
			КонецЕсли;
		Исключение
			Если ВыводитьСообщения = Истина Тогда
				Сообщить("Не удалось записать документ " + оМаршрутныйЛист);
			КонецЕсли;
		КонецПопытки;
		
		Если оМаршрутныйЛист.Ссылка.Пустая() Тогда
			Продолжить;
		КонецЕсли;
	
		оЗаявка = Выборка.Ссылка.ПолучитьОбъект();
		оЗаявка.Статус = Перечисления.СтатусыЗаявокНаПеревозку.Выполнена;
		Попытка
			оЗаявка.Записать();
		Исключение
			Если ВыводитьСообщения = Истина Тогда
				Сообщить("Не удалось записать документ " + оЗаявка);
			КонецЕсли;	
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры