
Процедура УстановитьОтборПоДате()
	
	ОтборНаФорме = ЭтаФорма.Списания.Отбор;
	
	ПолеКомпоновкиДата 	= ОтборНаФорме.ДоступныеПоляОтбора.Элементы.Найти("ДатаСписания").Поле;
	ЕстьДатаНачала 		= ЗначениеЗаполнено(Объект.ДатаНачала);
	ЕстьДатаОкончания 	= ЗначениеЗаполнено(Объект.ДатаОкончания);
	
	Если ОтборНаФорме.Элементы.Количество() = 0 Тогда
		
		ЭлементОтбора = ОтборНаФорме.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение 	= ПолеКомпоновкиДата;
		ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
		ЭлементОтбора.Использование 	= ЕстьДатаНачала;
		ЭлементОтбора.ПравоеЗначение 	= Объект.ДатаНачала;
		
		ЭлементОтбора = ОтборНаФорме.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение 	= ПолеКомпоновкиДата;
		ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
		ЭлементОтбора.Использование 	= ЕстьДатаОкончания;
		ЭлементОтбора.ПравоеЗначение 	= Объект.ДатаОкончания;
		
	Иначе
		
		Для Каждого ЭлементОтбора Из ОтборНаФорме.Элементы Цикл
			
			Если ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновкиДата
					И ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно Тогда
				
				ЭлементОтбора.ПравоеЗначение 	= Объект.ДатаНачала;
				ЭлементОтбора.Использование 	= ЕстьДатаНачала;
				
			ИначеЕсли ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновкиДата
					И ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно Тогда
				
				ЭлементОтбора.ПравоеЗначение 	= Объект.ДатаОкончания;
				ЭлементОтбора.Использование 	= ЕстьДатаОкончания;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Объект.ДатаНачала 		= НачалоНедели(ТекущаяДата());
	Объект.ДатаОкончания 	= КонецНедели(ТекущаяДата());
	
	УстановитьОтборПоДате();
	
КонецПроцедуры


&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	УстановитьОтборПоДате();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	УстановитьОтборПоДате();
	
КонецПроцедуры


Процедура ЗаполнитьСписанияСервер()
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("10.0.0.40", , , "DATABASE=Reports;LANGUAGE=русский;");
	
	Если ADOСоединение = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ТекстЗапроса =
	"SELECT
	|	SpisanieKach_Week.id,
	|	SpisanieKach_Week.id_tov,
	|   SpisanieKach_Week.id_kontr,
	|   SpisanieKach_Week.date_start_week,
	|   SpisanieKach_Week.SpisanieSumma
	|FROM [Reports].[dbo].[SpisanieKach_Week] as SpisanieKach_Week (nolock)
	|WHERE
	|	SpisanieKach_Week.date_start_week >= CONVERT(DATETIME, '" + Формат(Объект.ДатаНачала, "ДФ='yyyy-MM-dd HH:mm:ss'") +
	"', 20) AND SpisanieKach_Week.date_start_week <= CONVERT(DATETIME, '" + Формат(КонецДня(Объект.ДатаОкончания), "ДФ='yyyy-MM-dd HH:mm:ss'") + "', 20)";
	
	Выборка = ADOСоединение.Execute(ТекстЗапроса);
	
	
	ТабДанные = Новый ТаблицаЗначений();
	ТабДанные.Колонки.Добавить("id");
	ТабДанные.Колонки.Добавить("id_tov");
	ТабДанные.Колонки.Добавить("id_kontr");
	ТабДанные.Колонки.Добавить("Номенклатура"	, Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТабДанные.Колонки.Добавить("Контрагент"		, Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТабДанные.Колонки.Добавить("Сумма"			, Новый ОписаниеТипов("Число"));
	ТабДанные.Колонки.Добавить("ДатаСписания"	, Новый ОписаниеТипов("Дата"));
	
	СпрНоменклатура = Справочники.Номенклатура;
	СпрКонтрагенты 	= Справочники.Контрагенты;
	МассивДат = Новый Массив;
	
	Если НЕ Выборка.EOF() Тогда
		
		Выборка.MoveFirst();
		
		Пока НЕ Выборка.EOF() Цикл
			
			НоваяСтрока = ТабДанные.Добавить();
			
			НоваяСтрока.id 				= Выборка.Fields("id").Value;
			
			Текid_tov = Выборка.Fields("id_tov").Value;
			НоваяСтрока.id_tov			= Текid_tov;
			НоваяСтрока.Номенклатура 	= СпрНоменклатура.НайтиПоРеквизиту("id_tov", Текid_tov);
			
			Текid_kontr = Выборка.Fields("id_kontr").Value;
			НоваяСтрока.id_kontr		= Текid_kontr;
			НоваяСтрока.Контрагент 		= СпрКонтрагенты.НайтиПоРеквизиту("ИД", Текid_kontr);
			
			НоваяСтрока.Сумма 			= Выборка.Fields("SpisanieSumma").Value;
			
			ТекДатаСписания = Выборка.Fields("date_start_week").Value;
			ТекДатаСписания = Дата(Лев(ТекДатаСписания, 4), Сред(ТекДатаСписания, 6, 2), Прав(ТекДатаСписания, 2));
			НоваяСтрока.ДатаСписания 	= ТекДатаСписания;
			Если МассивДат.Найти(ТекДатаСписания) = Неопределено Тогда
				МассивДат.Добавить(ТекДатаСписания);
			КонецЕсли;
			
			Выборка.MoveNext();
			
		КонецЦикла;
		
	КонецЕсли;
	ADOСоединение.Close();
	
	
	Если ТабДанные.Количество() > 0 Тогда
		
		мРегистр = РегистрыСведений.ДанныеСписанийПоГруппеА;
		
		// очистка записей за выбранные даты
		Для Каждого ТекДатаСписания Из МассивДат Цикл
			НаборЗаписей = мРегистр.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ДатаСписания.Установить(ТекДатаСписания);
			НаборЗаписей.Прочитать();
			Если НаборЗаписей.Количество() > 0 Тогда
				НаборЗаписей.Очистить();
				Попытка
					НаборЗаписей.Записать();
				Исключение
					Сообщить("Не удалось очистить записи регистра!");
				КонецПопытки;
			КонецЕсли;	
		КонецЦикла;
		
		// запись данных в регистр
		Для Каждого СтрокаТаблицы Из ТабДанные Цикл
			
			МенеджерЗаписи = мРегистр.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи, СтрокаТаблицы);
			
			Попытка
				МенеджерЗаписи.Записать();
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
			
		КонецЦикла;
		
	Иначе
		Сообщить("Нет данных для заполнения!");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписания(Команда)
	
	ЗаполнитьСписанияСервер();
	
	Элементы.Списания.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	
	//УстановитьОтборПоСтатусу();
	
КонецПроцедуры
