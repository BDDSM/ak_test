//+++АК KOPA +Модуль 2018.03.02 ИП-00018046
//Модуль предназначен для методов телеграм тех бота
//Получим роли сотрудников

///////////////////////////////////////////////////////////////////////////////////////////////////////
//Описание формата данных
//Данные: Структура 
//-Роли: Структура. Содержащая данные для получения ролей пользователя 
//--Роль: КлючЗначение 
//---Ключ: КлючЗначение.Ключ. Идентификатор роли. РуководительОтдела, ПомощникПоРознице
//---Значение: КлючЗначение.Значение. Структура
//----Параметры: Структура параметры для запроса. Имеют значение строка и являются идентификаторами объектов
//-----ФизЛицо: Строка УИД физлица
//-----Магазин: Строка УИД СТруктурнойЕдиницы
//----ПростыеПараметры: Структура. Параметры для запроса. Имеют простой тип данных.

#Область ___Тесты

Функция ___Переходы()
	Массив = Новый Массив;
	Массив.Добавить(РегистрыСведений.ПользователиПоЦФО);
	Массив.Добавить(Справочники.Пользователи);
	Массив.Добавить(Справочники.РолиПользователей);
	Массив.Добавить(РегистрыСведений.СоответствиеОбъектРоль);
	Массив.Добавить(ПланыВидовХарактеристик.ТипыРолейПользователя);

	Возврат Массив;
КонецФункции

Функция ___ДобавитьТестВТаблицу(Таблица, Ключ, Значение)
	Строка = Таблица.Добавить();
	Строка.Ключ = Ключ;
	Строка.Значение = ЗначениеВСтрокуВнутр(Значение);
КонецФункции

Функция ___ПолучитьТесты()
	Таблица = Новый ТаблицаЗначений;
	ТипСтрока = Новый ОписаниеТипов("Строка", ,Новый КвалификаторыСтроки(0, ДопустимаяДлина.Переменная));
	Таблица.Колонки.Добавить("Ключ", ТипСтрока);
	Таблица.Колонки.Добавить("Значение", ТипСтрока);
	
	ПолеВводаНомерЗадачи = "ИП-00018046";
	ФИО = "Абляева Гольфия Идрисовна";
//ПомощникПоРознице и УправляющийПоРознице	
	Данные = Новый Структура("ИмяКоманды", "РолиСотрудников"); 
	СтруктураРоли = Новый Структура;
		СтруктураРуководительОтдела = Новый Структура;
			Параметры = Новый Структура("Физлицо", ПолучитьУИДАктивноеФизЛицо(ФИО));
		СтруктураРуководительОтдела.Вставить("Параметры", Параметры);		
	СтруктураРоли.Вставить("РуководительОтдела", СтруктураРуководительОтдела);
	
		СтруктураПомощникПоРознице = Новый Структура;
			Параметры = Новый Структура("Физлицо", ПолучитьУИДАктивноеФизЛицо(ФИО));
		СтруктураПомощникПоРознице.Вставить("Параметры", Параметры);		
	СтруктураРоли.Вставить("ПомощникПоРознице", СтруктураПомощникПоРознице);
	
		СтруктураУправляющийПоРознице = Новый Структура;
			Параметры = Новый Структура("Физлицо", ПолучитьУИДАктивноеФизЛицо(ФИО));
		СтруктураУправляющийПоРознице.Вставить("Параметры", Параметры);		
	СтруктураРоли.Вставить("УправляющийПоРознице", СтруктураУправляющийПоРознице);	
		
	Данные.Вставить("Роли", СтруктураРоли);
	
	___ДобавитьТестВТаблицу(Таблица, "Роли Абляевой", Данные);
//ПомощникПоРаскруткеМагазинИерархия
//
	ФИОХвостикова = "Хвостикова Светлана Петровна";
	Магазин1116 = "1116М_Веерная22";
	
	Данные = Новый Структура("ИмяКоманды", "РолиСотрудников"); 
	СтруктураРоли = Новый Структура;
		СтруктураРуководительОтдела = Новый Структура;
			Параметры = Новый Структура("Физлицо,Магазин", ПолучитьУИДАктивноеФизЛицо(ФИОХвостикова), "" + Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию(Магазин1116, Истина).УникальныйИдентификатор());
			
		СтруктураРуководительОтдела.Вставить("Параметры", Параметры);		
	СтруктураРоли.Вставить("ПомощникПоРаскруткеМагазинИерархия", СтруктураРуководительОтдела);
	
	Данные.Вставить("Роли", СтруктураРоли);
	___ДобавитьТестВТаблицу(Таблица, "+Роль ПомощникПоРаскруткеМагазинИерархия для " + ФИОХвостикова + " " + Магазин1116, Данные);
	
//ПомощникПоРаскруткеМагазинИерархия
//в иерархии
	ФИОЩедрин = "Щедрин Александр Андреевич";
	Магазин1116 = "1116М_Веерная22";
	
	Данные = Новый Структура("ИмяКоманды", "РолиСотрудников"); 
	СтруктураРоли = Новый Структура;
		СтруктураРуководительОтдела = Новый Структура;
			Параметры = Новый Структура("Физлицо,Магазин", ПолучитьУИДАктивноеФизЛицо(ФИОЩедрин), "" + Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию(Магазин1116, Истина).УникальныйИдентификатор());
			
		СтруктураРуководительОтдела.Вставить("Параметры", Параметры);		
	СтруктураРоли.Вставить("ПомощникПоРаскруткеМагазинИерархия", СтруктураРуководительОтдела);
	
	Данные.Вставить("Роли", СтруктураРоли);
	___ДобавитьТестВТаблицу(Таблица, "+Роль ПомощникПоРаскруткеМагазинИерархия для " + ФИОЩедрин + " " + Магазин1116, Данные);
//ПомощникПоРаскруткеМагазинИерархия
//Нет роли
	Магазин1116 = "1116М_Веерная22";
	
	Данные = Новый Структура("ИмяКоманды", "РолиСотрудников"); 
	СтруктураРоли = Новый Структура;
		СтруктураРуководительОтдела = Новый Структура;
			Параметры = Новый Структура("Физлицо,Магазин", ПолучитьУИДАктивноеФизЛицо(ФИО), "" + Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию(Магазин1116, Истина).УникальныйИдентификатор());
			
		СтруктураРуководительОтдела.Вставить("Параметры", Параметры);		
	СтруктураРоли.Вставить("ПомощникПоРаскруткеМагазинИерархия", СтруктураРуководительОтдела);
	
	Данные.Вставить("Роли", СтруктураРоли);
	___ДобавитьТестВТаблицу(Таблица, "-Роль ПомощникПоРаскруткеМагазинИерархия для " + ФИО + " " + Магазин1116, Данные);
	
//ПомощникПоРозницеМагазин
//Абляева и магазин 1234
	Данные = Новый Структура("ИмяКоманды", "РолиСотрудников"); 
	СтруктураРоли = Новый Структура;
		СтруктураПомощникПоРознице = Новый Структура;
			Параметры = Новый Структура("Физлицо,Магазин", ПолучитьУИДАктивноеФизЛицо(ФИО), 1234);
		СтруктураПомощникПоРознице.Вставить("Параметры", Параметры);		
	СтруктураРоли.Вставить("ПомощникПоРозницеМагазин", СтруктураПомощникПоРознице);
	
		СтруктураУправляющийПоРознице = Новый Структура;
			Параметры = Новый Структура("Физлицо,Магазин", ПолучитьУИДАктивноеФизЛицо(ФИО), 1234);
		СтруктураУправляющийПоРознице.Вставить("Параметры", Параметры);		
	СтруктураРоли.Вставить("УправляющийПоРозницеМагазин", СтруктураУправляющийПоРознице);	
		
	Данные.Вставить("Роли", СтруктураРоли);
	
	___ДобавитьТестВТаблицу(Таблица, "Абляева и магазин 1234. ПомощникПоРозницеМагазин", Данные);
	Возврат Таблица;
КонецФункции

Функция ___ПолучитьОписание() Экспорт 
	Структура = Новый Структура;
	Структура.Вставить("ИдЗадача", "Тестирование");
	Структура.Вставить("НаименованиеВнешнейОбработки", "___Тест");
	Структура.Вставить("Переходы", ___Переходы());
	Структура.Вставить("ТаблицаТесты", ___ПолучитьТесты());
	
	Возврат Структура;
КонецФункции

Функция ПолучитьУИДАктивноеФизЛицо(ФИО)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФизическиеЛица.Ссылка
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица
		|ГДЕ
		|	НЕ ФизическиеЛица.ПометкаУдаления
		|	И ФизическиеЛица.Активный
		|	И ФизическиеЛица.Наименование = &ФИО";
	Запрос.УстановитьПараметр("ФИО", ФИО);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Выборка.Следующий();
	
	Возврат "" + Выборка.Ссылка.УникальныйИдентификатор();
КонецФункции

#КонецОбласти

Функция ВыполнитьДействие(Данные) Экспорт 
	Возврат ПолучитьРолиСотрудника(Данные);
КонецФункции

#Область РолиСотрудника



Процедура Запрос_РуководительОтдела(Запрос)
	Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Пользователи.Ссылка
	|ПОМЕСТИТЬ тПользователь
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.ФизЛицо = &ФизЛицо
	|	И НЕ Пользователи.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПользователиПоЦФОСрезПоследних.РуководительОтдела
	|ИЗ
	|	РегистрСведений.ПользователиПоЦФО.СрезПоследних(
	|			&Период,
	|			Сотрудник В
	|				(ВЫБРАТЬ
	|					тПользователь.Ссылка
	|				ИЗ
	|					тПользователь КАК тПользователь)) КАК ПользователиПоЦФОСрезПоследних
	|ГДЕ
	|	ПользователиПоЦФОСрезПоследних.РуководительОтдела";
	
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.Текст = Текст;
КонецПроцедуры

Процедура Запрос_ПомощникПоРознице(Запрос)
	Текст = "ВЫБРАТЬ
	|	РолиПользователейСоставРоли.Ссылка КАК РольПользователя,
	|	РолиПользователейСоставРоли.Сотрудник
	|ПОМЕСТИТЬ тПользовательСРолью
	|ИЗ
	|	Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|ГДЕ
	|	РолиПользователейСоставРоли.Сотрудник = &ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ТипыРолейПользователя.Ссылка КАК ТипРоли,
	|	тПользовательСРолью.РольПользователя,
	|	ТипыРолейПользователя.Наименование
	|ИЗ
	|	тПользовательСРолью КАК тПользовательСРолью
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ТипыРолейПользователя КАК ТипыРолейПользователя
	|		ПО тПользовательСРолью.РольПользователя.ТипыРолей.ТипРоли = ТипыРолейПользователя.Ссылка
	|			И (ТипыРолейПользователя.Ссылка В (&ТипыРолей))";	
	ПомощникПоРознице = ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего;
	//ТехнологПоКонтролюКачестваДневной = ПланыВидовХарактеристик.ТипыРолейПользователя.ТехнологПоКонтролюКачестваДневной;
	МассивТипыРолейЗапрос = Новый Массив;
	МассивТипыРолейЗапрос.Добавить(ПомощникПоРознице);
	//МассивТипыРолейЗапрос.Добавить(ТехнологПоКонтролюКачестваДневной);
	
	//+++ AK suvv 2018.06.08 ИП-00018376.01
	ПомощникСтороннейРозницы = ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы;
	МассивТипыРолейЗапрос.Добавить(ПомощникСтороннейРозницы);
	//--- AK suvv

	Запрос.УстановитьПараметр("ТипыРолей", МассивТипыРолейЗапрос);
	Запрос.Текст = Текст;
КонецПроцедуры

Процедура Запрос_ПомощникПоРаскруткеМагазинИерархия(Запрос)
	Текст = "ВЫБРАТЬ
	|	РолиПользователейСоставРоли.Сотрудник,
	|	РолиПользователейСоставРоли.Ссылка КАК РольПользователя
	|ПОМЕСТИТЬ тРольПользователяВерхнийУровень
	|ИЗ
	|	Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|ГДЕ
	|	РолиПользователейСоставРоли.Ссылка.Родитель = &ПустаяСсылка
	|	И РолиПользователейСоставРоли.Сотрудник = &ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РолиПользователейСоставРоли.Ссылка КАК РольПользователя,
	|	РолиПользователейСоставРоли.Сотрудник,
	|	РолиПользователейТипыРолей.ТипРоли
	|ПОМЕСТИТЬ тПользовательСРолью
	|ИЗ
	|	Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.ТипыРолей КАК РолиПользователейТипыРолей
	|		ПО РолиПользователейСоставРоли.Ссылка = РолиПользователейТипыРолей.Ссылка
	|			И (РолиПользователейСоставРоли.Сотрудник = &ФизЛицо)
	|			И (РолиПользователейТипыРолей.ТипРоли.Код = &ТипРолиКод)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РолиПользователейТипыРолей.Ссылка,
	|	тРольПользователяВерхнийУровень.Сотрудник,
	|	РолиПользователейТипыРолей.ТипРоли
	|ИЗ
	|	тРольПользователяВерхнийУровень КАК тРольПользователяВерхнийУровень
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.ТипыРолей КАК РолиПользователейТипыРолей
	|		ПО тРольПользователяВерхнийУровень.РольПользователя = РолиПользователейТипыРолей.Ссылка.Родитель
	|			И (РолиПользователейТипыРолей.ТипРоли.Код = &ТипРолиКод)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	тПользовательСРолью.РольПользователя
	|ИЗ
	|	тПользовательСРолью КАК тПользовательСРолью
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
	|				&Период,
	|				ТипРоли В
	|					(ВЫБРАТЬ
	|						тПользовательСРолью.ТипРоли
	|					ИЗ
	|						тПользовательСРолью КАК тПользовательСРолью)) КАК СоответствиеОбъектРольСрезПоследних
	|		ПО тПользовательСРолью.ТипРоли = СоответствиеОбъектРольСрезПоследних.ТипРоли
	|			И тПользовательСРолью.РольПользователя = СоответствиеОбъектРольСрезПоследних.РольПользователя
	|			И (СоответствиеОбъектРольСрезПоследних.Объект = &Магазин)";	
	
	Запрос.УстановитьПараметр("ТипРолиКод", "PomoshnikPoRaskrutke");
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.УстановитьПараметр("ПустаяСсылка", Справочники.РолиПользователей.ПустаяСсылка());
	Запрос.Текст = Текст;
КонецПроцедуры

Процедура Запрос_УправляющийПоРознице(Запрос) 
	Текст = "ВЫБРАТЬ
		|	РолиПользователейСоставРоли.Ссылка КАК РольПользователя,
		|	РолиПользователейСоставРоли.Сотрудник
		|ПОМЕСТИТЬ тПользовательСРолью
		|ИЗ
		|	Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|ГДЕ
		|	РолиПользователейСоставРоли.Сотрудник = &ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	ТипыРолейПользователя.Ссылка КАК ТипРоли,
		|	тПользовательСРолью.РольПользователя,
		|	ТипыРолейПользователя.Наименование
		|ИЗ
		|	тПользовательСРолью КАК тПользовательСРолью
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ТипыРолейПользователя КАК ТипыРолейПользователя
		|		ПО тПользовательСРолью.РольПользователя.ТипыРолей.ТипРоли = ТипыРолейПользователя.Ссылка
		|			И (ТипыРолейПользователя.Код В (&ТипыРолей))";	
		МассивТипыРолейЗапрос = Новый Массив;
		МассивТипыРолейЗапрос.Добавить("UpravlyayushchiiPoRoznice");
		
		Запрос.УстановитьПараметр("ТипыРолей", МассивТипыРолейЗапрос);
		Запрос.Текст = Текст;
КонецПроцедуры

Процедура Запрос_ПомощникПоРозницеМагазин(Запрос)

	Текст = "ВЫБРАТЬ
	        |	РолиПользователейСоставРоли.Ссылка КАК РольПользователя,
	        |	РолиПользователейСоставРоли.Сотрудник
	        |ПОМЕСТИТЬ тПользовательСРолью
	        |ИЗ
	        |	Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	        |ГДЕ
	        |	РолиПользователейСоставРоли.Сотрудник = &ФизЛицо
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ ПЕРВЫЕ 1
	        |	ТипыРолейПользователя.Ссылка КАК ТипРоли,
	        |	тПользовательСРолью.РольПользователя
	        |ПОМЕСТИТЬ втРоль
	        |ИЗ
	        |	тПользовательСРолью КАК тПользовательСРолью
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ТипыРолейПользователя КАК ТипыРолейПользователя
	        |		ПО тПользовательСРолью.РольПользователя.ТипыРолей.ТипРоли = ТипыРолейПользователя.Ссылка
	        |			И (ТипыРолейПользователя.Ссылка В (&ТипыРолей))
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ ПЕРВЫЕ 1
	        |	СоответствиеОбъектРольСрезПоследних.Период
	        |ИЗ
	        |	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&Период, Объект = &Магазин) КАК СоответствиеОбъектРольСрезПоследних
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втРоль КАК втРоль
	        |		ПО СоответствиеОбъектРольСрезПоследних.ТипРоли = втРоль.ТипРоли
	        |			И СоответствиеОбъектРольСрезПоследних.РольПользователя = втРоль.РольПользователя";	
	
	ПомощникПоРознице = ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего;
	МассивТипыРолейЗапрос = Новый Массив;
	МассивТипыРолейЗапрос.Добавить(ПомощникПоРознице);
	//+++ AK suvv 2018.06.08 ИП-00018376.01
	ПомощникСтороннейРозницы = ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы;
	МассивТипыРолейЗапрос.Добавить(ПомощникСтороннейРозницы);
	//--- AK suvv

	Запрос.УстановитьПараметр("ТипыРолей", МассивТипыРолейЗапрос);
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.Текст = Текст;
КонецПроцедуры

Процедура Запрос_УправляющийПомощникаМагазин(Запрос)

	Текст =
	"ВЫБРАТЬ
	|	РолиПользователейСоставРоли.Ссылка КАК РольПользователя,
	|	РолиПользователейСоставРоли.Сотрудник
	|ПОМЕСТИТЬ тПользовательСРолью
	|ИЗ
	|	Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|ГДЕ
	|	РолиПользователейСоставРоли.Сотрудник В
	|			(ВЫБРАТЬ
	|				РолиПользователейСоставРоли.Сотрудник
	|			ИЗ
	|				Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|			ГДЕ
	|				НЕ РолиПользователейСоставРоли.Сотрудник = &Физлицо
	|				И РолиПользователейСоставРоли.Ссылка.Родитель В
	|					(ВЫБРАТЬ
	|						РолиПользователейСоставРоли.Ссылка
	|					ИЗ
	|						Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|					ГДЕ
	|						РолиПользователейСоставРоли.Сотрудник = &Физлицо))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТипыРолейПользователя.Ссылка КАК ТипРоли,
	|	тПользовательСРолью.РольПользователя
	|ПОМЕСТИТЬ втРоль
	|ИЗ
	|	тПользовательСРолью КАК тПользовательСРолью
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ТипыРолейПользователя КАК ТипыРолейПользователя
	|		ПО тПользовательСРолью.РольПользователя.ТипыРолей.ТипРоли = ТипыРолейПользователя.Ссылка
	|			И (ТипыРолейПользователя.Ссылка В (&ТипыРолей))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	СоответствиеОбъектРольСрезПоследних.Период
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&Период, Объект = &Магазин) КАК СоответствиеОбъектРольСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втРоль КАК втРоль
	|		ПО СоответствиеОбъектРольСрезПоследних.ТипРоли = втРоль.ТипРоли
	|			И СоответствиеОбъектРольСрезПоследних.РольПользователя = втРоль.РольПользователя";	
	
	МассивТипыРолейЗапрос = Новый Массив;
	//ПомощникПоРознице = ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего;
	//МассивТипыРолейЗапрос.Добавить(ПомощникПоРознице);
	//ПомощникСтороннейРозницы = ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы;
	//МассивТипыРолейЗапрос.Добавить(ПомощникСтороннейРозницы);
	ПомощникПоРаскрутке = ПланыВидовХарактеристик.ТипыРолейПользователя.НайтиПоКоду("PomoshnikPoRaskrutke");
	МассивТипыРолейЗапрос.Добавить(ПомощникПоРаскрутке);	

	Запрос.УстановитьПараметр("ТипыРолей", МассивТипыРолейЗапрос);
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.Текст = Текст;
	
КонецПроцедуры


Процедура Запрос_УправляющийПоРозницеМагазин(Запрос)
	Текст = "ВЫБРАТЬ
	        |	РолиПользователейСоставРоли.Ссылка КАК РольПользователя,
	        |	РолиПользователейСоставРоли.Сотрудник
	        |ПОМЕСТИТЬ тПользовательСРолью
	        |ИЗ
	        |	Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	        |ГДЕ
	        |	РолиПользователейСоставРоли.Сотрудник = &ФизЛицо
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ ПЕРВЫЕ 1
	        |	ТипыРолейПользователя.Ссылка КАК ТипРоли,
	        |	тПользовательСРолью.РольПользователя
	        |ПОМЕСТИТЬ втРоль
	        |ИЗ
	        |	тПользовательСРолью КАК тПользовательСРолью
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ТипыРолейПользователя КАК ТипыРолейПользователя
	        |		ПО тПользовательСРолью.РольПользователя.ТипыРолей.ТипРоли = ТипыРолейПользователя.Ссылка
	        |			И (ТипыРолейПользователя.Код В (&ТипыРолей))
	        |;
	        |
	        |////////////////////////////////////////////////////////////////////////////////
	        |ВЫБРАТЬ
	        |	СоответствиеОбъектРольСрезПоследних.Период
	        |ИЗ
	        |	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&Период, Объект = &Магазин) КАК СоответствиеОбъектРольСрезПоследних
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втРоль КАК втРоль
	        |		ПО СоответствиеОбъектРольСрезПоследних.ТипРоли = втРоль.ТипРоли
	        |			И СоответствиеОбъектРольСрезПоследних.РольПользователя = втРоль.РольПользователя";	
	МассивТипыРолейЗапрос = Новый Массив;
	МассивТипыРолейЗапрос.Добавить("UpravlyayushchiiPoRoznice");
	
	Запрос.УстановитьПараметр("ТипыРолей", МассивТипыРолейЗапрос);
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.Текст = Текст;
КонецПроцедуры

Процедура Запрос_СотрудникТилси(Запрос)
	Текст = "ВЫБРАТЬ
	        |	ФизическиеЛица.Ссылка
	        |ИЗ
	        |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	        |ГДЕ
	        |	ФизическиеЛица.Ссылка = &ФизЛицо
	        |	И ФизическиеЛица.СотрудникТилси";	
	Запрос.Текст = Текст;
КонецПроцедуры

Процедура Запрос_Суперпользователь(Запрос)
	Текст = "ВЫБРАТЬ
	        |	ФизическиеЛица.Ссылка
	        |ИЗ
	        |	Справочник.ФизическиеЛица КАК ФизическиеЛица
	        |ГДЕ
	        |	ФизическиеЛица.Ссылка = &ФизЛицо
	        |	И ФизическиеЛица.СуперпользовательТехбота";	
	Запрос.Текст = Текст;
КонецПроцедуры

Процедура Запрос_(Запрос)

	

КонецПроцедуры

Функция ТекстЗапросовРольСотрудника(ИмяРоли, Запрос)
	Если ИмяРоли = "РуководительОтдела" Тогда
		Запрос_РуководительОтдела(Запрос);		
	ИначеЕсли ИмяРоли = "ПомощникПоРознице" Тогда
		Запрос_ПомощникПоРознице(Запрос);
	ИначеЕсли ИмяРоли = "ПомощникПоРаскруткеМагазинИерархия" Тогда
		Запрос_ПомощникПоРаскруткеМагазинИерархия(Запрос);
	ИначеЕсли ИмяРоли = "УправляющийПоРознице" Тогда 
		Запрос_УправляющийПоРознице(Запрос);
	ИначеЕсли ИмяРоли = "ПомощникПоРозницеМагазин" Тогда//Роль пользователя с магазином
		Запрос_ПомощникПоРозницеМагазин(Запрос);
	ИначеЕсли ИмяРоли = "УправляющийПоРозницеМагазин" Тогда//Роль пользователя с магазином
		Запрос_УправляющийПоРозницеМагазин(Запрос);
	ИначеЕсли ИмяРоли = "СотрудникТилси" Тогда
		Запрос_СотрудникТилси(Запрос);
	ИначеЕсли ИмяРоли = "Суперпользователь" Тогда
		Запрос_Суперпользователь(Запрос);		
	ИначеЕсли ИмяРоли = "УправляющийПомощникаМагазин" Тогда
		Запрос_УправляющийПомощникаМагазин(Запрос);
	ИначеЕсли ИмяРоли = "АХО" Тогда
		Запрос_АХО(Запрос);
	КонецЕсли;	
КонецФункции

Процедура Запрос_АХО(Запрос)
	Текст = "ВЫБРАТЬ
	        |	Техники.ФизЛицо.Ссылка
	        |ИЗ
	        |	Справочник.Техники КАК Техники
	        |ГДЕ
	        |	НЕ Техники.ПометкаУдаления
	        |	И Техники.ФизЛицо = &ФизЛицо";	
	Запрос.Текст = Текст;
КонецПроцедуры

Функция РезультатЗапросаПустой(Запрос)
	Возврат Запрос.Выполнить().Пустой();
КонецФункции 

Функция ПреобразоватьЗначениеВСсылку(Знач Ключ, Значение)
	Ключ = ВРег(Ключ);
	
	Если Ключ = "ФИЗЛИЦО" Тогда
		Результат = ТелеграмТехБот.ПолучитьСсылкуПоГУИД_Строка(Значение, Справочники.ФизическиеЛица);
	ИначеЕсли Ключ = "МАГАЗИН" Тогда
//Магазин можем получать как УИД и НомерТочки
		Если ТипЗнч(Значение) = Тип("Число") Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ ПЕРВЫЕ 1
			|	СтруктурныеЕдиницы.Ссылка
			|ИЗ
			|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
			|ГДЕ
			|	СтруктурныеЕдиницы.НомерТочки = &НомерТочки
			|	И НЕ СтруктурныеЕдиницы.ПометкаУдаления";
			
			Запрос.УстановитьПараметр("НомерТочки", Значение);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Выборка = РезультатЗапроса.Выбрать();
			
			Выборка.Следующий();
			Результат = Выборка.Ссылка;
		Иначе 	
			Результат = ТелеграмТехБот.ПолучитьСсылкуПоГУИД_Строка(Значение, Справочники.СтруктурныеЕдиницы);
		КонецЕсли;
	Иначе 
		Ошибка = "Ключ для преобразования ссылки не найден: " + Ключ;
		
		ВызватьИсключение Ошибка;
	КонецЕсли;	
	
	Возврат Результат;
КонецФункции

Функция ПреобразоватьСтроковыеДанныеВСсылки(СтроковыеДанные)
	Результат = Новый Структура;
	
	Для каждого КлючЗначение Из СтроковыеДанные Цикл
		Результат.Вставить(КлючЗначение.Ключ, ПреобразоватьЗначениеВСсылку(КлючЗначение.Ключ, КлючЗначение.Значение));
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Процедура УстановитьПараметрыЗапроса(Запрос, ПараметрыЗапроса)
	Для каждого Параметр Из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(Параметр.Ключ, Параметр.Значение);
	КонецЦикла;
КонецПроцедуры

Функция ПроверитьРольПоПользователю(ИмяРоли, ПараметрыРоли)
	
	Физлицо = ПараметрыРоли.Физлицо;
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Пользователи.ИдентификаторПользователяИБ КАК УИД
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.ФизЛицо = &ФизЛицо
	|	И НЕ Пользователи.ИдентификаторПользователяИБ = &ПустойИД");
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	Запрос.УстановитьПараметр("ПустойИД", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	РЗ = Запрос.Выполнить().Выбрать();
	Если РЗ.Следующий() Тогда
		Попытка
			ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(РЗ.УИД);
			Если ПользовательИБ = Неопределено ТОгда
				Возврат Ложь;
			КонецЕсли;
			Возврат ПользовательИБ.Роли.Содержит(Метаданные.Роли[ИмяРоли]);
		Исключение
			Возврат Ложь;
		КонецПопытки;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

//СТАРТ
Функция ПолучитьРолиСотрудника(Данные) Экспорт 
//РуководительОтдела
//ПомощникПоРознице
	Результат = Новый Структура("Роли", Новый Структура);
	
	Для каждого ДанныеПроверкиРоли Из Данные.Роли Цикл
		
		ИмяРоли = ДанныеПроверкиРоли.Ключ;
		ПараметрыРоли = ДанныеПроверкиРоли.Значение;
		
		Если ИмяРоли = "АК_РаботаСПромоАкциями" Тогда
			
			РольДоступна = ПроверитьРольПоПользователю(ИмяРоли, ПреобразоватьСтроковыеДанныеВСсылки(ПараметрыРоли.Параметры));
			
		Иначе
		
			Запрос = Новый Запрос;
			ТекстЗапросовРольСотрудника(ИмяРоли, Запрос);
			
		    Если Не ЗначениеЗаполнено(Запрос.Текст) Тогда
				РольДоступна = Ложь;//Не найдена проверка этой роли
				Результат.Вставить("Ошибка", "Не найдена проверка роли: " + ИмяРоли); 
			Иначе 		
				Если ПараметрыРоли.Свойство("ПростыеПараметры") Тогда
					УстановитьПараметрыЗапроса(Запрос, ПараметрыРоли.ПростыеПараметры);	
				КонецЕсли;	
				Если ПараметрыРоли.Свойство("Параметры") Тогда
					УстановитьПараметрыЗапроса(Запрос, ПреобразоватьСтроковыеДанныеВСсылки(ПараметрыРоли.Параметры));	
				КонецЕсли;		
				РольДоступна = Не РезультатЗапросаПустой(Запрос);
			КонецЕсли;
			
		КонецЕсли;
		
		Результат.Роли.Вставить(ИмяРоли, Формат(РольДоступна, "БЛ=0; БИ=1"));//0: роль не доступна, 1: роль доступна
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции


#КонецОбласти

