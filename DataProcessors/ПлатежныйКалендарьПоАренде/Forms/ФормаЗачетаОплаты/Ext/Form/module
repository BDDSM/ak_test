Перем ВалютаРегл;
Перем СтрокаОплаты Экспорт;

Процедура ОсновныеДействияФормыВыполнить(Кнопка)

	Если ПереключательВыбор = 1 Тогда
		// Создаем документ зачета
		ДокументЗачета = Документы.ЗачетОплатыАренды.СоздатьДокумент();
		
		ДокументЗачета.Дата =  ТекущаяДата();
		ДокументЗачета.Организация = СтрокаОплаты.Организация;
		ДокументЗачета.Контрагент = СтрокаОплаты.Контрагент;
		ДокументЗачета.ДоговорКонтрагента = СтрокаОплаты.ДоговорКонтрагента;
		ДокументЗачета.ТорговаяТочка = СтрокаОплаты.СтруктурнаяЕдиница;
		ДокументЗачета.Ответственный = глЗначениеПеременной("глТекущийПользователь");
		
		СтрокаЗачета = ДокументЗачета.ЗачетДепозита.Добавить();
		СтрокаЗачета.ФормаОплаты = СтрокаОплаты.ФормаОплаты;
		СтрокаЗачета.ТипАренднойПлаты = СтрокаОплаты.ТипАренднойПлаты;
		СтрокаЗачета.ПериодРегистрации = СтрокаОплаты.МесяцАренды;
		СтрокаЗачета.Сумма = ЗачестьВРублях;
		СтрокаЗачета.СуммаВВалютеДепозита = ЗачестьВВалютеДепозита;
		
		Попытка 
			ДокументЗачета.Записать(РежимЗаписиДокумента.Проведение);
			Закрыть(Истина);
		Исключение
			ОбщегоНазначения.СообщитьОбОшибке("Не удалось записать документ зачета оплаты по причине: " + ОписаниеОшибки() + Символы.ПС + ". Будет создан обычный платежный документ.");
			Закрыть(Ложь);
		КонецПопытки; 
		
	ИначеЕсли ПереключательВыбор = 2 Тогда
		Закрыть(Ложь);
		
	Иначе
		Закрыть(Неопределено);
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЭлементыФормы.НадписьИнформация.Заголовок = "Строка № " + СтрокаОплаты.НомерСтроки + ". Контрагент: <" + СтрокаОплаты.Контрагент + ">." + Символы.ПС + "Обнаружена возможность зачета оплаты из депозита.";
	
	ПереключательВыбор = 1;
	
	УстановитьДоступность();
	
	ОбновитьИнформацию();
	
КонецПроцедуры

Процедура УстановитьДоступность()
	
	ЭлементыФормы.ЗачестьВВалютеДепозита.Доступность = (ПереключательВыбор = 1);
	ЭлементыФормы.ЗачестьВРублях.Доступность = (ПереключательВыбор = 1);
	ЭлементыФормы.НадписьОстаток.Доступность = (ПереключательВыбор = 1);
	
КонецПроцедуры 

Процедура ПереключательВыборПриИзменении(Элемент)
	
	УстановитьДоступность();
	
КонецПроцедуры

Процедура ЗачестьВВалютеДепозитаПриИзменении(Элемент)
	
	ЗачестьВВалютеДепозита = Мин(ВозможноЗачестьИзДепозита, ЗачестьВВалютеДепозита); 	
	
	Если ВалютаДепозита = ВалютаРегл Тогда
		ЗачестьВВалютеДепозита = Мин(СуммаКОплате, ЗачестьВВалютеДепозита); 	
		ЗачестьВРублях = ЗачестьВВалютеДепозита;
	КонецЕсли; 
	
	ОбновитьИнформацию();
	
КонецПроцедуры

Процедура ЗачестьВРубляхПриИзменении(Элемент)
	
	ЗачестьВРублях = Мин(СуммаКОплате, ЗачестьВРублях); 	
	
	Если ВалютаДепозита = ВалютаРегл Тогда
		ЗачестьВРублях = Мин(ВозможноЗачестьИзДепозита, ЗачестьВРублях); 			
		ЗачестьВВалютеДепозита = ЗачестьВРублях;
	КонецЕсли; 

	ОбновитьИнформацию();
	
КонецПроцедуры

Процедура ОбновитьИнформацию()
	
	ЭлементыФормы.НадписьОстаток.Видимость = (СуммаКОплате>ЗачестьВРублях);
	ЭлементыФормы.НадписьОстаток.Заголовок = "На оставшиеся "+ Формат(СуммаКОплате - ЗачестьВРублях, "ЧДЦ=2; ЧН=") + " руб. будет создан обычный платежный документ";
	
КонецПроцедуры 

ВалютаРегл = Константы.ВалютаРегламентированногоУчета.Получить();