
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.МесяцОбработки = НачалоМесяца(ДобавитьМесяц(ТекущаяДата(), -1));
	Месяц = Формат(Объект.МесяцОбработки, "ДФ='MMMM yyyy'");
	
КонецПроцедуры

&НаКлиенте
Процедура МесяцРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	Объект.МесяцОбработки = НачалоМесяца(ДобавитьМесяц(Объект.МесяцОбработки, Направление));
	Месяц = Формат(Объект.МесяцОбработки, "ДФ='MMMM yyyy'");
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДокументыЗатрат()
	//+++АК ZICD 12.01.2017 ИП-00014363
	// Весь код отсюда уехал в процедуру "СоздатьДокументыЗатратДоМСФО"
	Если АК_УчетМСФОПривилегированный.УчётВключён(НачалоМесяца(Объект.МесяцОбработки)) Тогда
		СоздатьДокументыЗатратПослеМСФО();
	Иначе
		СоздатьДокументыЗатратДоМСФО();
	КонецЕсли;
	//---АК
КонецПроцедуры	
//+++АК ZICD 12.01.2017 ИП-00014363
&НаСервере
Процедура СоздатьДокументыЗатратДоМСФО()
	
	СтатьяНалогиСФот = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("20520");
	СтатьяБонуснаяЧасть = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("20510");
	ЦФОВсе = Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Все", Истина);
	ЦФОУпрРозницей = Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Управление розницей", Истина);
	СчетЗатрат = ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения;
	СчетСписанияЗатрат = ПланыСчетов.Финансовый.ЗатратыТорговыхТочек;
	
	ЗапросНачисленного = Новый Запрос();
	ЗапросНачисленного.Текст = "ВЫБРАТЬ
	                           |	ЗарплатаПродавцов.ТорговаяТочка,
	                           |	СУММА(ЗарплатаПродавцов.Зарплата + ЗарплатаПродавцов.Бонус) КАК СуммаНачисленно
	                           |ИЗ
	                           |	РегистрСведений.ЗарплатаПродавцов КАК ЗарплатаПродавцов
	                           |ГДЕ
	                           |	НАЧАЛОПЕРИОДА(ЗарплатаПродавцов.ДатаНачисления, МЕСЯЦ) = &ДатаНачисления
	                           |
	                           |СГРУППИРОВАТЬ ПО
	                           |	ЗарплатаПродавцов.ТорговаяТочка
	                           |
	                           |УПОРЯДОЧИТЬ ПО
	                           |	ЗарплатаПродавцов.ТорговаяТочка.НомерТочки
	                           |;
	                           |
	                           |////////////////////////////////////////////////////////////////////////////////
	                           |ВЫБРАТЬ
	                           |	ФинансовыйОбороты.СуммаОборот КАК СуммаНалогов
	                           |ИЗ
	                           |	РегистрБухгалтерии.Финансовый.Обороты(&ДатаНач, &ДатаКон, , Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ЗатратыТочекДляРаспределения), , Субконто2 = &НалогиСФот, , ) КАК ФинансовыйОбороты";
							   
	ЗапросНачисленного.УстановитьПараметр("ДатаНачисления", НачалоМесяца(Объект.МесяцОбработки));
	ЗапросНачисленного.УстановитьПараметр("ДатаНач", Новый Граница(НачалоМесяца(Объект.МесяцОбработки), ВидГраницы.Включая));
	ЗапросНачисленного.УстановитьПараметр("ДатаКон", Новый Граница(КонецМесяца(Объект.МесяцОбработки), ВидГраницы.Включая));
	ЗапросНачисленного.УстановитьПараметр("НалогиСФот", СтатьяНалогиСФот);
	ЗапросНачисленного.УстановитьПараметр("СтатьяДоходовРасходов", СтатьяБонуснаяЧасть);
	
	Результаты = ЗапросНачисленного.ВыполнитьПакет();
	
	ОбщаяСуммаНалогов = 0;
	
	ТабСуммыПоТТ = Результаты[0].Выгрузить();
	ТабСуммыПоТТ.Колонки.Добавить("Процент");
	ТабСуммыПоТТ.Колонки.Добавить("СуммаНалога");
	
	СуммаНачисленоПустаяТТ = 0;
	КолвоСтрок = ТабСуммыПоТТ.Количество();
	Для н = 1 По КолвоСтрок Цикл
		Если Не ЗначениеЗаполнено(ТабСуммыПоТТ[КолвоСтрок - н].ТорговаяТочка) Тогда
			СуммаНачисленоПустаяТТ = СуммаНачисленоПустаяТТ + ТабСуммыПоТТ[КолвоСтрок - н].СуммаНачисленно;
			ТабСуммыПоТТ.Удалить(КолвоСтрок - н);
		КонецЕсли;	
	КонецЦикла;
	
	ОбщаяСуммаНачислено = ТабСуммыПоТТ.Итог("СуммаНачисленно");
	Если ОбщаяСуммаНачислено = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если СуммаНачисленоПустаяТТ <> 0 Тогда
		ОбщаяСуммаНачислено = ТабСуммыПоТТ.Итог("СуммаНачисленно");
		ВсегоРазложено = 0;
		Для Каждого СтрокаТТ Из ТабСуммыПоТТ Цикл
			ВсегоРазложено = ВсегоРазложено + Окр(СуммаНачисленоПустаяТТ * СтрокаТТ.СуммаНачисленно / ОбщаяСуммаНачислено, 2);
			СтрокаТТ.СуммаНачисленно = СтрокаТТ.СуммаНачисленно + Окр(СуммаНачисленоПустаяТТ * СтрокаТТ.СуммаНачисленно / ОбщаяСуммаНачислено, 2);
		КонецЦикла;	
		Если ВсегоРазложено <> СуммаНачисленоПустаяТТ Тогда
			ТабСуммыПоТТ[0].СуммаНачисленно = ТабСуммыПоТТ[0].СуммаНачисленно + СуммаНачисленоПустаяТТ - ВсегоРазложено;
		КонецЕсли;	
	КонецЕсли;	
	
	ОбщаяСуммаНачислено = ТабСуммыПоТТ.Итог("СуммаНачисленно");
	
	ВыборкаНалоги = Результаты[1].Выбрать();
	
	Если ВыборкаНалоги.Следующий() Тогда
		ОбщаяСуммаНалогов = ВыборкаНалоги.СуммаНалогов;
	КонецЕсли;
	
	ДокЗП = Документы.СписаниеЗатратТорговыхТочек.СоздатьДокумент();
	ДокЗП.Дата = КонецМесяца(Объект.МесяцОбработки);
	ДокЗП.СчетЗатрат = СчетЗатрат;
	ДокЗП.СчетСписанияЗатрат = СчетСписанияЗатрат;
	ДокЗП.СубконтоКт1 = ЦФОВсе;
	ДокЗП.СубконтоКт2 = СтатьяБонуснаяЧасть;
	ДокЗП.СубконтоКт3 = ЦФОУпрРозницей;
	ДокЗП.СтатьяДоходовРасходов = СтатьяБонуснаяЧасть;
	ДокЗП.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	ДокЗП.Комментарий = "Списание затрат /Бонусная часть  продавцов/ " + Формат(Объект.МесяцОбработки, "ДФ='MMMM yyyy'");
	Для Каждого СтрокаТТ Из ТабСуммыПоТТ Цикл
		СтрокаТТ.Процент = СтрокаТТ.СуммаНачисленно / ОбщаяСуммаНачислено;
		СтрокаТТ.СуммаНалога = СтрокаТТ.Процент * ОбщаяСуммаНалогов;
		СтрокаДоб = ДокЗП.ТорговыеТочки.Добавить();
		СтрокаДоб.ТорговаяТочка = СтрокаТТ.ТорговаяТочка;
		СтрокаДоб.Сумма = СтрокаТТ.СуммаНачисленно;
	КонецЦикла;	
	
	Попытка
		ДокЗП.Записать(РежимЗаписиДокумента.Проведение);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Проведен документ " + ДокЗП.Ссылка);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		ДокЗП.Записать(РежимЗаписиДокумента.Запись);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Записан документ " + ДокЗП.Ссылка);
	КонецПопытки;
	
	Если ОбщаяСуммаНалогов > 0 Тогда
		ДокЗП = Документы.СписаниеЗатратТорговыхТочек.СоздатьДокумент();
		ДокЗП.Дата = КонецМесяца(Объект.МесяцОбработки);
		ДокЗП.СчетЗатрат = СчетЗатрат;
		ДокЗП.СчетСписанияЗатрат = СчетСписанияЗатрат;
		ДокЗП.СубконтоКт1 = ЦФОВсе;
		ДокЗП.СубконтоКт2 = СтатьяНалогиСФот;
		ДокЗП.СубконтоКт3 = ЦФОУпрРозницей;
		ДокЗП.СтатьяДоходовРасходов = СтатьяНалогиСФот;
		ДокЗП.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		ДокЗП.Комментарий = "Списание затрат /Налоги от ФОТБонусы продавцов/ " + Формат(Объект.МесяцОбработки, "ДФ='MMMM yyyy'");
		Для Каждого СтрокаТТ Из ТабСуммыПоТТ Цикл
			Если ОбщаяСуммаНалогов < 0 Тогда
				Прервать;
			КонецЕсли;	
			СтрокаДоб = ДокЗП.ТорговыеТочки.Добавить();
			СтрокаДоб.ТорговаяТочка = СтрокаТТ.ТорговаяТочка;
			СтрокаДоб.Сумма = Мин(СтрокаТТ.СуммаНалога, ОбщаяСуммаНалогов);
			ОбщаяСуммаНалогов = ОбщаяСуммаНалогов - СтрокаДоб.Сумма;
		КонецЦикла;
		
		Если ОбщаяСуммаНалогов > 0 Тогда
			ДокЗП.ТорговыеТочки[0].Сумма = ДокЗП.ТорговыеТочки[0].Сумма + ОбщаяСуммаНалогов;
		КонецЕсли;	
		
		Попытка
			ДокЗП.Записать(РежимЗаписиДокумента.Проведение);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Проведен документ " + ДокЗП.Ссылка);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			ДокЗП.Записать(РежимЗаписиДокумента.Запись);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Записан документ " + ДокЗП.Ссылка);
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры
&НаСервере
Процедура СоздатьДокументыЗатратПослеМСФО()
	
	СтатьяНалогиСФот    = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("20520");
	СтатьяБонуснаяЧасть = Справочники.СтатьиДоходовРасходов.НайтиПоКоду("20510");
	
	ПараметрыПроведения = Новый Структура();
	ПараметрыПроведения.Вставить("ЦФОВсе",              Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Все", Истина));
	ПараметрыПроведения.Вставить("ЦФОУпрРозницей",      Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Управление розницей", Истина));
	ПараметрыПроведения.Вставить("СчетЗатрат",          ПланыСчетов.Финансовый.ЗатратыТочекДляРаспределения);
	ПараметрыПроведения.Вставить("СчетСписанияЗатрат",  ПланыСчетов.Финансовый.ЗатратыТорговыхТочек);
	ПараметрыПроведения.Вставить("СтатьяНалогиСФот",    СтатьяНалогиСФот);
	ПараметрыПроведения.Вставить("СтатьяБонуснаяЧасть", СтатьяБонуснаяЧасть);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ДатаНачисления", НачалоМесяца(Объект.МесяцОбработки));
	Запрос.УстановитьПараметр("ДатаНач", Новый Граница(НачалоМесяца(Объект.МесяцОбработки), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаКон", Новый Граница(КонецМесяца(Объект.МесяцОбработки), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("НалогиСФот", СтатьяНалогиСФот);
	Запрос.Текст = ПолучитьТекстЗапросаПослеМСФО();						   
	Выборка = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);

	// Цикл по группировке "Организация"
	Для Каждого Запись Из Выборка.Строки Цикл
		
		// Зарплата
		СписаниеЗарплаты = СоздатьСписаниеЗатратТТ(Запись, ПараметрыПроведения, СтатьяБонуснаяЧасть);
		ЗаполнитьСписаниеЗатратТТ(СписаниеЗарплаты, Запись.Строки, ПараметрыПроведения);
		ПровестиСписаниеЗатратТТ(СписаниеЗарплаты);
		
		// Налоги
		СписаниеНалогов = СоздатьСписаниеЗатратТТ(Запись, ПараметрыПроведения, СтатьяНалогиСФот);
		ЗаполнитьСписаниеЗатратТТ(СписаниеНалогов, Запись.Строки, ПараметрыПроведения);
		ПровестиСписаниеЗатратТТ(СписаниеНалогов);
		
	КонецЦикла;
	
КонецПроцедуры
Функция ПолучитьТекстЗапросаПослеМСФО()
	Возврат "
	|ВЫБРАТЬ
	|	Т0.Организация,
	|	Т0.ТорговаяТочка,
	|	Т0.Количество КАК КоличествоСмен,
	|	Т0.КоличествоСменИтого
	|	,Т0.СуммаЗарплатыПоТТ
	|	,(ВЫБОР КОГДА Т0.КоличествоСменИтого = 0 ТОГДА 0 ИНАЧЕ Т0.СуммаЗарплатыПоТТ * Т0.Количество / Т0.КоличествоСменИтого КОНЕЦ) КАК СуммаЗарплаты
	|	,Т1.СуммаЗарплатыИтого
	|	,Т1.СуммаЗарплатыНеПоТТ
	|	,ЕСТЬNULL(Т2.Сумма, 0) КАК СуммаНалогов
	|ИЗ
	|	(ВЫБРАТЬ
	|		Т0.Организация,
	|		Т0.ТорговаяТочка,
	|		Т0.Количество,
	|		Т1.Количество КАК КоличествоСменИтого,
	|		Т1.Сумма КАК СуммаЗарплатыПоТТ
	|	ИЗ
	|		(ВЫБРАТЬ
	|			Организация,
	|			ТорговаяТочка,
	|			КОЛИЧЕСТВО(Дата) КАК Количество
	|		ИЗ
	|			Документ.ЛистУчета
	|		ГДЕ
	|			Проведен
	|			И
	|			Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаНачисления, МЕСЯЦ) И КОНЕЦПЕРИОДА(&ДатаНачисления, МЕСЯЦ)
	|		СГРУППИРОВАТЬ ПО
	|			Организация,
	|			ТорговаяТочка) КАК Т0
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|
	|		(ВЫБРАТЬ
	|			Т0.ТорговаяТочка,
	|			МАКСИМУМ(Т0.Количество) КАК Количество,
	|			СУММА(Т1.Зарплата + Т1.Бонус) КАК Сумма
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ТорговаяТочка,
	|				КОЛИЧЕСТВО(Дата) КАК Количество
	|			ИЗ
	|				Документ.ЛистУчета
	|			ГДЕ
	|				Проведен
	|				И
	|				Дата МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаНачисления, МЕСЯЦ) И КОНЕЦПЕРИОДА(&ДатаНачисления, МЕСЯЦ)
	|			СГРУППИРОВАТЬ ПО
	|				ТорговаяТочка) КАК Т0
	|			
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ	
	|				РегистрСведений.ЗарплатаПродавцов КАК Т1
	|			ПО НАЧАЛОПЕРИОДА(Т1.ДатаНачисления, МЕСЯЦ) = &ДатаНачисления
	|			 И Т1.ТорговаяТочка <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|			 И Т0.ТорговаяТочка = Т1.ТорговаяТочка
	|				
	|		СГРУППИРОВАТЬ ПО
	|			Т0.ТорговаяТочка) КАК Т1
	|
	|		ПО Т0.ТорговаяТочка = Т1.ТорговаяТочка) КАК Т0
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|
	|		(ВЫБРАТЬ
	|			СУММА(ВЫБОР КОГДА ТорговаяТочка <> ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка) ТОГДА Зарплата + Бонус ИНАЧЕ 0 КОНЕЦ) КАК СуммаЗарплатыИтого,
	|			СУММА(ВЫБОР КОГДА ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка) ТОГДА Зарплата + Бонус ИНАЧЕ 0 КОНЕЦ) КАК СуммаЗарплатыНеПоТТ
	|		ИЗ
	|			РегистрСведений.ЗарплатаПродавцов
	|		ГДЕ
	|			НАЧАЛОПЕРИОДА(ДатаНачисления, МЕСЯЦ) = &ДатаНачисления) КАК Т1
	|
	|	ПО ИСТИНА
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|
	|		(ВЫБРАТЬ
	|			Организация,
	|			СУММА(СуммаОборот) КАК Сумма
	|		ИЗ
	|			РегистрБухгалтерии.Финансовый.Обороты(&ДатаНач, &ДатаКон, , Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.ЗатратыТочекДляРаспределения), , Субконто2 = &НалогиСФот, , )
	|		СГРУППИРОВАТЬ ПО
	|			Организация) КАК Т2
	|
	|	ПО Т0.Организация = Т2.Организация
	|
	|УПОРЯДОЧИТЬ ПО
	|	Т0.Организация,
	|	Т0.ТорговаяТочка.НомерТочки ВОЗР
	|ИТОГИ ПО
	|	Т0.Организация
	|;";
КонецФункции
Функция СоздатьСписаниеЗатратТТ(Данные, ПараметрыПроведения, СтатьяДоходовРасходов)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Дата", КонецМесяца(Объект.МесяцОбработки));
	Запрос.УстановитьПараметр("Организация",        Данные.Организация);
	Запрос.УстановитьПараметр("СчетЗатрат",         ПараметрыПроведения.СчетЗатрат);
	Запрос.УстановитьПараметр("СчетСписанияЗатрат", ПараметрыПроведения.СчетСписанияЗатрат);
	Запрос.УстановитьПараметр("СубконтоКт1", ПараметрыПроведения.ЦФОВсе);
	Запрос.УстановитьПараметр("СубконтоКт2", СтатьяДоходовРасходов);
	Запрос.УстановитьПараметр("СубконтоКт3", ПараметрыПроведения.ЦФОУпрРозницей);
	Запрос.УстановитьПараметр("СтатьяДоходовРасходов", СтатьяДоходовРасходов);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Ссылка
	|ИЗ
	|	Документ.СписаниеЗатратТорговыхТочек
	|ГДЕ
	|	Дата = &Дата
	|	И
	|	СчетЗатрат = &СчетЗатрат
	|	И
	|	СчетСписанияЗатрат = &СчетСписанияЗатрат
	|	И
	|	СубконтоКт1 = &СубконтоКт1
	|	И
	|	СубконтоКт2 = &СубконтоКт2
	|	И
	|	СубконтоКт3 = &СубконтоКт3
	|	И
	|	Организация = &Организация
	|	И
	|	СтатьяДоходовРасходов = &СтатьяДоходовРасходов
	|";
	РезультатЗапроса = Запрос.Выполнить();
	
	НужноЗаполнитьРеквизиты = Ложь;
	
	Если РезультатЗапроса.Пустой() Тогда
		ДокументОбъект = Документы.СписаниеЗатратТорговыхТочек.СоздатьДокумент();
		НужноЗаполнитьРеквизиты = Истина;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Если ДокументОбъект = Неопределено Тогда
				ДокументОбъект = Документы.СписаниеЗатратТорговыхТочек.СоздатьДокумент();
				НужноЗаполнитьРеквизиты = Истина;
			КонецЕсли;
		Иначе
			ДокументОбъект = Документы.СписаниеЗатратТорговыхТочек.СоздатьДокумент();
			НужноЗаполнитьРеквизиты = Истина;
		КонецЕсли;
	КонецЕсли;
	
	ДокументОбъект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	
	Если НужноЗаполнитьРеквизиты Тогда	
		ДокументОбъект.Организация = Данные.Организация;
		ДокументОбъект.Дата        = КонецМесяца(Объект.МесяцОбработки);
		ДокументОбъект.СчетЗатрат         = ПараметрыПроведения.СчетЗатрат;
		ДокументОбъект.СчетСписанияЗатрат = ПараметрыПроведения.СчетСписанияЗатрат;
		ДокументОбъект.СубконтоКт1 = ПараметрыПроведения.ЦФОВсе;
		ДокументОбъект.СубконтоКт2 = СтатьяДоходовРасходов;
		ДокументОбъект.СубконтоКт3 = ПараметрыПроведения.ЦФОУпрРозницей;
		ДокументОбъект.СтатьяДоходовРасходов = СтатьяДоходовРасходов;
		ДокументОбъект.Комментарий = СтатьяДоходовРасходов.Наименование + ", период: " + Формат(Объект.МесяцОбработки, "ДФ='MMMM yyyy'");
	КонецЕсли;
	
	Возврат ДокументОбъект;
	
КонецФункции
Процедура ЗаполнитьСписаниеЗатратТТ(ДокументОбъект, ТаблицаДанных, ПараметрыПроведения)
	
	// Заполнение табличной части "ТорговыеТочки"
	
	Если ТаблицаДанных.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура();
	
	Если ДокументОбъект.СтатьяДоходовРасходов = ПараметрыПроведения.СтатьяБонуснаяЧасть Тогда
		
		СтруктураПараметров.Вставить("База",         ТаблицаДанных);
		СтруктураПараметров.Вставить("Сумма",        ТаблицаДанных[0].СуммаЗарплатыНеПоТТ);
		СтруктураПараметров.Вставить("ИмяДрайвера",  "СуммаЗарплаты");
		СтруктураПараметров.Вставить("ИтогДрайвера", ТаблицаДанных[0].СуммаЗарплатыИтого);
		СтруктураПараметров.Вставить("ИмяПриёмника", "СуммаЗарплаты");
		
	ИначеЕсли ДокументОбъект.СтатьяДоходовРасходов = ПараметрыПроведения.СтатьяНалогиСФот Тогда
		
		СтруктураПараметров.Вставить("База",         ТаблицаДанных);
		СтруктураПараметров.Вставить("Сумма",        ТаблицаДанных[0].СуммаНалогов);
		СтруктураПараметров.Вставить("ИмяДрайвера",  "СуммаЗарплаты");
		СтруктураПараметров.Вставить("ИтогДрайвера", ТаблицаДанных[0].СуммаЗарплатыИтого + ТаблицаДанных[0].СуммаЗарплатыНеПоТТ);
		СтруктураПараметров.Вставить("ИмяПриёмника", "СуммаНалогов");
		
	Иначе
		// Неизвестный вид списания
		Возврат;
	КонецЕсли;
	
	ВыполнитьРаспределение(СтруктураПараметров);
	
	ДокументОбъект.ТорговыеТочки.Очистить();
	
	Для Каждого Запись Из ТаблицаДанных Цикл
		НоваяЗапись = ДокументОбъект.ТорговыеТочки.Добавить();
		НоваяЗапись.ТорговаяТочка = Запись.ТорговаяТочка;
		НоваяЗапись.Сумма         = Запись[СтруктураПараметров.ИмяПриёмника];
	КонецЦикла;
	
КонецПроцедуры
Процедура ПровестиСписаниеЗатратТТ(ДокументОбъект)
	
	Попытка
		Если ДокументОбъект.ПометкаУдаления Тогда
			ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
			ДокументОбъект.УстановитьПометкуУдаления(Ложь);
		КонецЕсли;
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Проведен документ: " + ДокументОбъект.Ссылка);
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Записан документ: " + ДокументОбъект.Ссылка);
	КонецПопытки;
	
КонецПроцедуры
// Функция выполняет пропорциональное распределение
// СтруктураПараметров - структура, содержащая параметры распределения
// - База - набор данных, по которому распределяется сумма распределения
// - Сумма - сумма, которая подлежит распределению
// - ИмяДрайвера - имя колонки, пропорционально значений которой выполняется распределение
// - ИтогДрайвера - итоговое значение по колонке драйвера распределения
// - ИмяПриёмника - имя колонки, значение которой принимает распределённые суммы
Процедура ВыполнитьРаспределение(СтруктураПараметров)
	
	Если СтруктураПараметров.Сумма = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если СтруктураПараметров.База.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СуммаРаспределения   = СтруктураПараметров.Сумма;
	ОсталосьРаспределить = СуммаРаспределения;
	БазаРаспределения    = СтруктураПараметров.База;
	ИмяПриёмника = СтруктураПараметров.ИмяПриёмника;
	ИмяДрайвера  = СтруктураПараметров.ИмяДрайвера;
	ИтогДрайвера = СтруктураПараметров.ИтогДрайвера;
	
	Если ИтогДрайвера = 0 Тогда
		Для Каждого Запись Из БазаРаспределения Цикл
			ИтогДрайвера = ИтогДрайвера + Запись[ИмяДрайвера];
		КонецЦикла;
	КонецЕсли;
	
	Если ИтогДрайвера = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Запись Из БазаРаспределения Цикл
		Распределено = СуммаРаспределения * Запись[ИмяДрайвера] / ИтогДрайвера;
		Запись[ИмяПриёмника] = Запись[ИмяПриёмника] + Распределено;
		ОсталосьРаспределить = ОсталосьРаспределить - Распределено;
	КонецЦикла;
	
	Если ОсталосьРаспределить <> 0 Тогда
		Запись = БазаРаспределения[0];
		Запись[ИмяПриёмника] = Запись[ИмяПриёмника] + ОсталосьРаспределить;
	КонецЕсли;
	
КонецПроцедуры
//---АК

&НаКлиенте
Процедура СоздатьДокументы(Команда)
	
	СоздатьДокументыЗатрат();
	Оповестить("ОбновитьСписокЗатрат");
	
КонецПроцедуры
