
//+++АК ERMK 2018.12.03 ИП-00020563
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Контрагент = Параметры.Контрагент;

КонецПроцедуры

&НаСервере
Процедура ПоискНаСервере()
	ФабрикаXD = ОбменССистемойВетис.ПолучитьФабрикуXDTOEnterpiseService();
	
	ListOptions = ФабрикаXD.Создать("http://api.vetrf.ru/schema/cdm/base", "ListOptions");  
	ListOptions.count = 100;  
	
	BusinessEntity = ФабрикаXD.Создать("http://api.vetrf.ru/schema/cdm/cerberus/enterprise", "BusinessEntity"); 
	BusinessEntity.inn = Контрагент.ИНН;
	
	ПроксиEnterprise = ОбменССистемойВетис.ПолучитьПроксиEnterprise(ОбменССистемойВетис.ОсновнаяНастройкаАПИ());	
	
	Объект.ТаблицаКонтрагентов.Очистить();
	Попытка 
		Ответ = ПроксиEnterprise.GetBusinessEntityList(ListOptions, BusinessEntity);
		Если ТипЗнч(Ответ) = Тип("ОбъектXDTO") Тогда
			businessEntity =  ОбменССистемойВетис.ПолучитьСвойствоОбъектаXDTO(Ответ, "businessEntity");
			
			а = 0;
			Если ТипЗнч(businessEntity) = Тип("СписокXDTO") Тогда
				Для каждого Стр Из businessEntity Цикл
					НСтр = Объект.ТаблицаКонтрагентов.Добавить();
					ЗаполнитьЗначенияСвойств(Нстр, Стр);

					Если а = 0 Тогда
						ЗаполнитьТаблицуПлощадокНаСервере(НСтр.GUID);
						НСтр.Пометка = Истина;
					КонецЕсли;
					
					а = а + 1;
				КонецЦикла;					
			КонецЕсли;	
		КонецЕсли;	
	Исключение		
		
	КонецПопытки;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПлощадокНаСервере(GUID)
	ПроксиEnterprise = ОбменССистемойВетис.ПолучитьПроксиEnterprise(ОбменССистемойВетис.ОсновнаяНастройкаАПИ());
	
	Попытка
		Ответ = ПроксиEnterprise.GetBusinessEntityByGuid(GUID);
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	ТЗГуидПлощадок = Новый ТаблицаЗначений; 	
	ТЗГуидПлощадок.Колонки.Добавить("ГУИД", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(36)));
	
	Если ТипЗнч(Ответ) = Тип("ОбъектXDTO") Тогда
		СписокПлощадок = ОбменССистемойВетис.ПолучитьСвойствоОбъектаXDTO(Ответ, "activityLocation"); 	
		
		Если ТипЗнч(СписокПлощадок) = Тип("СписокXDTO") Тогда
			
			Для каждого ЗначСписка Из СписокПлощадок Цикл
				Нстр = ТЗГуидПлощадок.Добавить();
				Нстр.ГУИД = ЗначСписка.enterprise.guid;
			КонецЦикла;
			
		КонецЕсли;		
	КонецЕсли;
	
	Объект.ТаблицаПлощадок.Очистить();
	
	а = 0;
	Для каждого Стр Из ТЗГуидПлощадок Цикл
		GUIDПлощадки = Стр.ГУИД;
		Попытка
			Ответ = ПроксиEnterprise.GetEnterpriseByGuid(GUIDПлощадки);
		Исключение
			Сообщить(ОписаниеОшибки());
			Возврат;
		КонецПопытки;
		
		Если ТипЗнч(Ответ) = Тип("ОбъектXDTO") Тогда			 
			НСтр = Объект.ТаблицаПлощадок.Добавить();
			ЗаполнитьЗначенияСвойств(НСтр, Ответ);			 
			НСтр.addressView = Ответ.address.addressView;
		КонецЕсли; 
		
		а = а + 1;
		// Состояние("Обработан " + Строка(а));
	КонецЦикла;	
	
	
КонецПроцедуры

&НаКлиенте
Процедура Поиск(Команда)
	ПоискНаСервере();
КонецПроцедуры

&НаСервере
Процедура СохранитьНаСервере()
	Для каждого Стр Из Объект.ТаблицаКонтрагентов Цикл
		Если Стр.Пометка = Истина Тогда
			Запись = РегистрыСведений.МЙ_СоответствиеКонтрагентов.СоздатьМенеджерЗаписи();
			Запись.Контрагент = Контрагент;
			Запись.Прочитать();
			
			Запись.Контрагент = Контрагент;
			Запись.GUID = Стр.GUID;
			Запись.Записать();		
		КонецЕсли;	
	КонецЦикла;	
	
	Для каждого Стр Из Объект.ТаблицаПлощадок Цикл
		Спр = Справочники.МЙ_ПоднадзорныеОбъектыКонтрагентов.НайтиПоРеквизиту("GUID", Стр.GUID,, Контрагент);
		
		Если Спр.Пустая() Тогда
			Спр = Справочники.МЙ_ПоднадзорныеОбъектыКонтрагентов.СоздатьЭлемент();
			Спр.Владелец = Контрагент;
			Спр.addressView = Стр.addressView;
			Спр.GUID = Стр.GUID;
			Спр.Name = Стр.name;
			
			//+++АК LATV 2018.07.15 ИП-00019272
			Спр.Наименование = СокрЛП(Стр.name) + СокрЛП(Стр.addressView);
			//+++АК LATV Конец
			
			Спр.Записать();
		КонецЕсли;	
		
		Если Стр.Пометка = Истина Тогда
			СпрКонтр = Контрагент.ПолучитьОбъект();
			СпрКонтр.МЙ_ОсновнаяПлощадка = Спр.Ссылка;
			СпрКонтр.ОбменДанными.Загрузка = Истина;
			СпрКонтр.Записать();
		КонецЕсли;	
			
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонтрагентовПриАктивизацииСтроки(Элемент)
	ТС = Элемент.ТекущиеДанные;
	Если ТС = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	GUID = ТС.GUID;
	
	ЗаполнитьТаблицуПлощадокНаСервере(GUID);
	
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПлощадокПометкаПриИзменении(Элемент)
	ТС = Элемент.Родитель.ТекущиеДанные;
	
	Если ТС.Пометка = Истина Тогда		 
		Для каждого Стр Из Объект.ТаблицаПлощадок Цикл
			Если Стр.НомерСтроки = ТС.НомерСтроки Тогда
				Продолжить;				 
			КонецЕсли; 
			
			Стр.Пометка = Ложь;
		КонецЦикла; 	 
	КонецЕсли;
	
КонецПроцедуры
