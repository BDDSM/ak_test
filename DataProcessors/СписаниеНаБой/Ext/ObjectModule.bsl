
Функция ВыполнитьДействие(СтруктураПараметры) Экспорт 
	Действие = СтруктураПараметры.Действие;
	
	Если Действие = "Документ" Тогда		
		Возврат СоздатьДокументРасходныйОрдерСклад(СтруктураПараметры);					
	Иначе 
		ВызватьИсключение "Не установлено действие для выполнения!";
	КонецЕсли;	
КонецФункции

Функция ПолучитьСсылкуПоГУИД(Знач ГУИД, Менеджер)
	Если ТипЗнч(ГУИД) = Тип("Строка") Тогда
		ГУИД = Новый УникальныйИдентификатор(ГУИД);	
	КонецЕсли;
	
	Ссылка = Менеджер.ПолучитьСсылку(ГУИД);	
		
	Возврат Ссылка;
КонецФункции

Функция ПолучитьЕдиницуИзмеренияПоНоменклатуре(Номенклатура)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЕдиницыИзмерения.Ссылка
		|ИЗ
		|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
		|ГДЕ
		|	ЕдиницыИзмерения.Владелец = &Номенклатура
		|	И НЕ ЕдиницыИзмерения.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Возврат ?(Выборка.Следующий(), Выборка.Ссылка, Неопределено);
КонецФункции

Процедура УстановитьАвтора(Объект, ГУИДФизЛица)
	Если Не ЗначениеЗаполнено(ГУИДФизЛица) Тогда
		Возврат;
	КонецЕсли;
	
	Попытка	
		Идентификатор = Новый УникальныйИдентификатор(ГУИДФизЛица);
		ФизЛицо  = Справочники.ФизическиеЛица.ПолучитьСсылку(Идентификатор);			
	Исключение
		Объект.Комментарий = "Автор не установлен";
		
		Возврат;
	КонецПопытки;
	
	Пользователь = ПолучитьПользователяПоФизЛицу(ФизЛицо);
	
	Если Пользователь = Неопределено Тогда
		Объект.Комментарий = "" + ФизЛицо;
	Иначе
		Объект.Автор = Пользователь;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьПользователяПоФизЛицу(ФизЛицо)	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.Ссылка,
		|	Пользователи.ФизЛицо
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.ФизЛицо = &ФизЛицо";
	
	Запрос.УстановитьПараметр("ФизЛицо", ФизЛицо);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Возврат ?(Выборка.Следующий(), Выборка.Ссылка, Неопределено);
КонецФункции

Функция ПоместитьДанныеВХранилище(Данные)
	Возврат Новый ХранилищеЗначения(Данные, Новый СжатиеДанных(9));	
КонецФункции

Функция СоздатьДокументРасходныйОрдерСклад(СтруктураПараметры) Экспорт 
	обк = Документы.РасходныйОрдерСклад.СоздатьДокумент();
	
	обк.Дата = ТекущаяДата();
	обк.ВидОперации = Перечисления.ВидыОперацийРасходСкладскойУчет.УтилизацияБой;
	обк.Комментарий = СтруктураПараметры.ОписаниеПричины;
	обк.Склад = ПолучитьСсылкуПоГУИД(СтруктураПараметры.Склад, Справочники.Склады);
	//обк.Организация
	УстановитьАвтора(обк, СтруктураПараметры.ФизЛицо);
	
	Для каждого Строка Из СтруктураПараметры.Товары Цикл
		НоваяСтрока = обк.Товары.Добавить();
		
	    НоваяСтрока.Номенклатура = ПолучитьСсылкуПоГУИД(Строка.Номенклатура, Справочники.Номенклатура);
		НоваяСтрока.Характеристика = ПолучитьСсылкуПоГУИД(Строка.Характеристика, Справочники.ХарактеристикиНоменклатуры);
//Предполагается что позиций не много и достаточно такого механизма		
		НоваяСтрока.ЕдиницаИзмерения = ПолучитьЕдиницуИзмеренияПоНоменклатуре(НоваяСтрока.Номенклатура);
		НоваяСтрока.Количество = Строка.Количество;
		НоваяСтрока.ДатаПроизводства = Строка.ДатаПроизводства;
	КонецЦикла;
	
	обк.Записать();
	
	Возврат ПоместитьДанныеВХранилище(Новый Структура);
КонецФункции
