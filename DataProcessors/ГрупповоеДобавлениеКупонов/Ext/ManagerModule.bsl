
Процедура ОтправитьSMSНаСервер(МассивГУИД = Неопределено) Экспорт

	// 
	ADOСоединение = Новый COMОбъект("ADODB.Connection");
	ADOСоединение.ConnectionTimeOut = 0;
	ADOСоединение.CommandTimeOut    = 0;
	ADOСоединение.ConnectionString  = ОбменСAccess.ПолучитьСтрокуСоединения("sms_union");
	ADOСоединение.Open();
	
	
	// Получение списка телефонов, на которые уже были отправлены СМС
	лкСписокТелефУжеОтправили = Новый СписокЗначений;
	ТекстЗапроса =
	"Select Distinct
	|	Outgoing.Number
	|From IES..Outgoing as Outgoing (nolock)
	|Where 
	|	Outgoing.AddDate >= DateAdd(Day, -7, GETDATE()) 
	|	And Outgoing.type_BV = 2";
	Выборка = ADOСоединение.Execute(ТекстЗапроса);
	Если НЕ Выборка.EOF() Тогда
		Выборка.MoveFirst();
		Пока НЕ Выборка.EOF() Цикл
			лкСписокТелефУжеОтправили.Добавить(Выборка.Fields("Number").Value);
			Выборка.MoveNext();
		КонецЦикла;
	КонецЕсли;
	//СтрСоединенияДанныеТовародвижение = "DRIVER={SQL Server Native Client 10.0};SERVER=SRV-SQL01;UID=izbenka;PWD=cjyzcjyz;DATABASE=IES;LANGUAGE=русский";
	//пСоед = Новый ПараметрыСоединенияВнешнегоИсточникаДанных;
	//пСоед.СтрокаСоединения = СтрСоединенияДанныеТовародвижение;
	//ВнешниеИсточникиДанных.IES.УстановитьОбщиеПараметрыСоединения(пСоед);
	//ВнешниеИсточникиДанных.IES.УстановитьСоединение();
	//
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("ТекДатаМинусНеделя", (ТекущаяДата() - 604800));
	//Запрос.Текст = 
	//	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	//	|	dbo_Outgoing.Number КАК НомерТелефона
	//	|ИЗ
	//	|	ВнешнийИсточникДанных.IES.Таблица.dbo_Outgoing КАК dbo_Outgoing
	//	|ГДЕ
	//	|	dbo_Outgoing.AddDate >= &ТекДатаМинусНеделя
	//	|	И dbo_Outgoing.type_BV = 2";
	//
	//ТЗ_Рез = Запрос.Выполнить().Выгрузить();
	//ВнешниеИсточникиДанных.IES.РазорватьСоединение();
	//	
	//лкСписокТелефУжеОтправили = Новый СписокЗначений();
	//лкСписокТелефУжеОтправили.ЗагрузитьЗначения(ТЗ_Рез.ВыгрузитьКолонку("НомерТелефона"));
	
	// Те рассылки СМС, которые надо отправить
	Запрос = Новый Запрос;
	Если НЕ МассивГУИД = Неопределено Тогда
		Запрос.УстановитьПараметр("МассивГУИД", МассивГУИД);
	КонецЕсли;
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 200
	|	SMS.GUID_Записи,
	|	SMS.Отправлен,
	|	SMS.Рассылка,
	|	SMS.ДатаДобавления,
	|	SMS.ДатаОтправкиНаСервер,
	|	SMS.Пользователь,
	|	SMS.НомерТелефона,
	|	SMS.DiscountCardUID,
	|	SMS.ФИО,
	|	SMS.НомерКарты,
	|	SMS.ОтправитьБезПроверкиВремени
	|ИЗ
	|	РегистрСведений.SMS КАК SMS
	|ГДЕ
	|	НЕ SMS.Отправлен
	|	И &УсловиеПоГУИД";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "
	|	И &УсловиеПоГУИД",
		?(НЕ МассивГУИД = Неопределено, "
	|	И SMS.GUID_Записи В (&МассивГУИД)", ""));
	Запрос.Текст = ТекстЗапроса;

	Выборка = Запрос.Выполнить().Выбрать();
	
	РегистрСМС = РегистрыСведений.SMS;
	ТекстАутгоуинг 			= "";
	ТекстDiscountCardUID 	= "";
	ТекстГУИДЗаписи			= "";
	Пока Выборка.Следующий() Цикл
		
		ТекНомерТелефона = Выборка.НомерТелефона;
		
		Если СокрЛП(Выборка.DiscountCardUID) = "" Тогда
			Набор = РегистрСМС.СоздатьНаборЗаписей();
			Набор.Отбор.GUID_Записи.Установить(Выборка.GUID_Записи);
			Набор.Прочитать();
			Для каждого ТекСтрНабора Из Набор Цикл
				ТекСтрНабора.Отправлен 				= Истина;
				ТекСтрНабора.ДатаОтправкиНаСервер 	= ТекущаяДата();
			КонецЦикла;
			Набор.Записать();
			Продолжить;
		Иначе
			Если (НЕ Выборка.ОтправитьБезПроверкиВремени) 
					И НЕ лкСписокТелефУжеОтправили.НайтиПоЗначению(ТекНомерТелефона) = Неопределено Тогда  // Уже отправляли!
				Набор = РегистрСМС.СоздатьНаборЗаписей();
				Набор.Отбор.GUID_Записи.Установить(Выборка.GUID_Записи);
				Набор.Прочитать();
				Для каждого ТекСтрНабора Из Набор Цикл
					ТекСтрНабора.Отправлен = Истина;
				КонецЦикла;
				Набор.Записать();
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		// текст для создания записей на SQL в таблице IES..Outgoing
		ТекПроект 	= СокрЛП(Выборка.Рассылка.Наименование);
		ТекТекст 	= СокрЛП(Выборка.Рассылка.ТекстСообщения);
		лТекТекст = СтрЗаменить(ТекТекст	, "<ФИО>"		, Выборка.ФИО);
		лТекТекст = СтрЗаменить(лТекТекст	, "<НомерКарты>", Выборка.НомерКарты);			
		ТекстАутгоуинг = ТекстАутгоуинг + ", ('" + ТекНомерТелефона + "', '" + лТекТекст + "','" + Выборка.ДатаДобавления + "', '" +
		//+++АК SHEP 2018.07.17 ИП-00018126.02
		//			Выборка.DiscountCardUID + "', 2, '" + ТекПроект + "', '" + Выборка.Пользователь + "')";
					Выборка.НомерКарты + "', 2, '" + ТекПроект + "', '" + Выборка.Пользователь + "')";
		//---АК SHEP 2018.07.17
		
		ТекстDiscountCardUID 	= ТекстDiscountCardUID 	+ ",'" + СокрЛП(Выборка.DiscountCardUID) + "'";
		ТекстГУИДЗаписи 		= ТекстГУИДЗаписи 		+ ", " + ДопМодульСервер.ПолучитьТекстГУИДДляSQL(Строка(Выборка.GUID_Записи));
		
	КонецЦикла;
	ТекстАутгоуинг 			= Сред(ТекстАутгоуинг, 3);
	ТекстDiscountCardUID 	= Сред(ТекстDiscountCardUID, 2);
	ТекстГУИДЗаписи 		= Сред(ТекстГУИДЗаписи, 3);
	
	
	// Помещение записей на SQL в таблицу IES..Outgoing 
	Если НЕ ТекстАутгоуинг = "" Тогда
		ТекстЗапроса =
		"/****** Сценарий для команды SelectTopNRows среды SSMS  ******/
		|Insert Into IES..Outgoing
		|    (Number,
		|    Message,
		|    AddDate,
		//+++АК SHEP 2018.07.17 ИП-00018126.02
		//|    DiscountCardUID,
		|    BC_Number,
		//---АК SHEP 2018.07.17
		|    type_BV,
		|    Project,
		|    user_add)
		|Values " + ТекстАутгоуинг;
		Попытка
			ADOСоединение.Execute(ТекстЗапроса);
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	// Перезапись признака sent_sms на SQL в таблице SMS_IZBENKA..sms_tovar_card 
	Если НЕ ТекстDiscountCardUID = "" Тогда
		ТекстЗапроса =
		"Begin Transaction
		|Update
		|	SMS_IZBENKA..sms_tovar_card
		|Set
		|	sent_sms = 1
		|From SMS_IZBENKA..sms_tovar_card (nolock) as stc 
		| inner join SMS_IZBENKA..sms_tovar (nolock) as st
		| on st.id_sms_tovar = stc.id_sms_tovar
		|where
		| 	st.date_sms = DateAdd(Day, 0, Convert(date, getdate()))
		|	And stc.DiscountCardUID in (" + ТекстDiscountCardUID + ")
		|Commit";	
		Попытка
			ADOСоединение.Execute(ТекстЗапроса);
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	// Перезапись регистра сведений SMS 
	Если НЕ ТекстГУИДЗаписи = "" Тогда
		ТекстЗапроса =
		"Begin Transaction
		|Update
		|	IzbenkaFin.._InfoRg4076
		|Set _Fld4079 = 0x01,         					-- Отправлен = Истина
		|	 _Fld4080 = DateAdd(Year, 2000, GETDATE())  -- ДатаОтправкиНаСервер = ТекущаяДата (со смещением на 2000 лет для 1С)
		|where
		| 	_Fld4093 in (" + ТекстГУИДЗаписи + ")
		|Commit";	
		Попытка
			ADOСоединение.Execute(ТекстЗапроса);
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	//
	ADOСоединение.Close();
	
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	
	//	Если СокрЛП(ВыборкаДетальныеЗаписи.DiscountCardUID) = "" Тогда
	//		
	//		Набор = РегистрыСведений.SMS.СоздатьНаборЗаписей();
	//		Набор.Отбор.GUID_Записи.Установить(ВыборкаДетальныеЗаписи.GUID_Записи);
	//		Набор.Прочитать();
	//		Для каждого ТекСтрНабора Из Набор Цикл
	//			ТекСтрНабора.Отправлен 				= Истина;
	//			ТекСтрНабора.ДатаОтправкиНаСервер 	= ТекущаяДата();
	//		КонецЦикла;
	//		Набор.Записать();
	//		
	//		Продолжить;
	//	КонецЕсли;	
	//	
	//	Если НЕ ВыборкаДетальныеЗаписи.ОтправитьБезПроверкиВремени Тогда 
	//		
	//		Если лкСписокТелефУжеОтправили.НайтиПоЗначению(ВыборкаДетальныеЗаписи.НомерТелефона) <> Неопределено Тогда
	//			
	//			// Уже отправляли!
	//			
	//			Набор = РегистрыСведений.SMS.СоздатьНаборЗаписей();
	//			Набор.Отбор.GUID_Записи.Установить(ВыборкаДетальныеЗаписи.GUID_Записи);
	//			Набор.Прочитать();
	//			Для каждого ТекСтрНабора Из Набор Цикл
	//				ТекСтрНабора.Отправлен = Истина;
	//			КонецЦикла;
	//			Набор.Записать();
	//			
	//			Продолжить;
	//			
	//		КонецЕсли;	
	//		
	//	КонецЕсли;
	//		
	//	ТекПроект 	= СокрЛП(ВыборкаДетальныеЗаписи.Рассылка.Наименование);
	//	ТекТекст 	= СокрЛП(ВыборкаДетальныеЗаписи.Рассылка.ТекстСообщения);
	//	лТекТекст = СтрЗаменить(ТекТекст	, "<ФИО>"		, ВыборкаДетальныеЗаписи.ФИО);
	//	лТекТекст = СтрЗаменить(лТекТекст	, "<НомерКарты>", ВыборкаДетальныеЗаписи.НомерКарты);			
	//	
	//	ТекстЗапроса = "/****** Сценарий для команды SelectTopNRows среды SSMS  ******/
	//	|insert into [IES].[dbo].[Outgoing]
	//	|    ([Number]
	//	|    ,[Message]
	//	|    ,[AddDate]
	//	|    ,[DiscountCardUID]
	//	|    ,[type_BV]
	//	|    ,[Project]
	//	|    ,[user_add])
	//	|VALUES 
	//	|	 ('" + ВыборкаДетальныеЗаписи.НомерТелефона + "', '" + лТекТекст + "','" + ВыборкаДетальныеЗаписи.ДатаДобавления + "', '" +
	//				ВыборкаДетальныеЗаписи.DiscountCardUID + "', '2', '" + ТекПроект + "', '" + ВыборкаДетальныеЗаписи.Пользователь + "') ;";
	//	
	//	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("10.0.0.40", "izbenka", "cjyzcjyz");
	//	ADOСоединение.Execute(ТекстЗапроса);	
	//	ADOСоединение.Close();
	//	
	//	ТекстЗапроса =
	//	"update [SMS_IZBENKA].[dbo].[sms_tovar_card]
	//	|set sent_sms=1
	//	|FROM [SMS_IZBENKA].[dbo].[sms_tovar_card] (nolock) stc 
	//	|inner join [SMS_IZBENKA].[dbo].[sms_tovar] (nolock) st on st.id_sms_tovar= stc.id_sms_tovar
	//	|where st.date_sms=dateadd(day,0,CONVERT(date,getdate())) AND stc.DiscountCardUID = '" + СокрЛП(ВыборкаДетальныеЗаписи.DiscountCardUID) + "';";
	//	
	//	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("10.0.0.40", "izbenka", "cjyzcjyz");
	//	ADOСоединение.Execute(ТекстЗапроса);	
	//	ADOСоединение.Close();
	//	
	//	НаборЗаписей = РегистрыСведений.SMS.СоздатьНаборЗаписей();
	//	НаборЗаписей.Отбор.GUID_Записи.Установить(ВыборкаДетальныеЗаписи.GUID_Записи);
	//	НаборЗаписей.Прочитать();
	//	Для каждого ТекСтрНабора Из НаборЗаписей Цикл
	//		ТекСтрНабора.Отправлен 				= Истина;
	//		ТекСтрНабора.ДатаОтправкиНаСервер 	= ТекущаяДата();			
	//	КонецЦикла;
	//	НаборЗаписей.Записать();
	//	
	//КонецЦикла;
    
КонецПроцедуры
