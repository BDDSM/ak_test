
Процедура СоздатьЗадачи() Экспорт
	ВыполнитьЗадачиСНеоплаченнымиЗаявками();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ДокументЗаявкаНаРасходованиеСредств.Ссылка КАК Ссылка,
	               |	ЕСТЬNULL(ВложенныйЗапрос.Приход, 0) КАК Приход,
	               |	ЕСТЬNULL(ВложенныйЗапрос.Расход, 0) КАК Расход,
	               |	ЕСТЬNULL(ВложенныйЗапрос.Отправлено, 0) КАК Отправлено
	               |ИЗ
	               |	Документ.ЗаявкаНаРасходованиеСредств КАК ДокументЗаявкаНаРасходованиеСредств
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВложенныйЗапрос.ЗаявкаНаРасходованиеСредств КАК ЗаявкаНаРасходованиеСредств,
	               |			СУММА(ВложенныйЗапрос.Приход) КАК Приход,
	               |			СУММА(ВложенныйЗапрос.Расход) КАК Расход,
	               |			СУММА(ВложенныйЗапрос.Отправлено) КАК Отправлено
	               |		ИЗ
	               |			(ВЫБРАТЬ
	               |				ВзаиморасчетыСКонтрагентами.ЗаявкаНаРасходованиеСредств КАК ЗаявкаНаРасходованиеСредств,
	               |				СУММА(ВЫБОР
	               |						КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	               |							ТОГДА ВзаиморасчетыСКонтрагентами.Сумма
	               |						ИНАЧЕ 0
	               |					КОНЕЦ) КАК Приход,
	               |				СУММА(ВЫБОР
	               |						КОГДА ВзаиморасчетыСКонтрагентами.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	               |							ТОГДА ВзаиморасчетыСКонтрагентами.Сумма
	               |						ИНАЧЕ 0
	               |					КОНЕЦ) КАК Расход,
	               |				0 КАК Отправлено
	               |			ИЗ
	               |				РегистрНакопления.ВзаиморасчетыСКонтрагентами КАК ВзаиморасчетыСКонтрагентами
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				ВзаиморасчетыСКонтрагентами.ЗаявкаНаРасходованиеСредств
	               |			
	               |			ОБЪЕДИНИТЬ ВСЕ
	               |			
	               |			ВЫБРАТЬ
	               |				ОтправленныеПлатежиВБанк.ЗаявкаНаРасходованиеСредств,
	               |				0,
	               |				0,
	               |				СУММА(ОтправленныеПлатежиВБанк.Сумма)
	               |			ИЗ
	               |				РегистрНакопления.ОтправленныеПлатежиВБанк КАК ОтправленныеПлатежиВБанк
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				ОтправленныеПлатежиВБанк.ЗаявкаНаРасходованиеСредств) КАК ВложенныйЗапрос
	               |		ГДЕ
	               |			ВложенныйЗапрос.ЗаявкаНаРасходованиеСредств.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаявокНаРасходованиеСредств.Акцептована)
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ВложенныйЗапрос.ЗаявкаНаРасходованиеСредств) КАК ВложенныйЗапрос
	               |		ПО ДокументЗаявкаНаРасходованиеСредств.Ссылка = ВложенныйЗапрос.ЗаявкаНаРасходованиеСредств
	               |ГДЕ
	               |	НЕ ВложенныйЗапрос.ЗаявкаНаРасходованиеСредств.ПометкаУдаления
	               |	И ЕСТЬNULL(ВложенныйЗапрос.Расход, 0) = 0
	               |	И ЕСТЬNULL(ВложенныйЗапрос.Отправлено, 0) = 0";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СоздатьЗадачуПоДокументу(Выборка.Ссылка);
	КонецЦикла;
КонецПроцедуры

Процедура СоздатьЗадачуПоДокументу(пДокумент)
	обЗадача = Задачи.ЗадачаИсполнителя.СоздатьЗадачу();
	обЗадача.ВидЗадачи = Справочники.ВидыЗадачПользователей.НеоплаченныеЗаявкиНаРасходованиеСредств;
	обЗадача.Дата = ТекущаяДата();
	обЗадача.ОбъектЗадачи = пДокумент;
	обЗадача.Ответственный = ?(пДокумент.ФормаОплаты = Перечисления.ФормыОплаты.Безналичные, Константы.ОтветственныйЗаБанковскиеОперации.Получить(), Константы.ОтветственныйЗаКассовыеОперации.Получить());	
	обЗадача.Исполнитель = ?(пДокумент.ФормаОплаты = Перечисления.ФормыОплаты.Безналичные, Константы.ОтветственныйЗаБанковскиеОперации.Получить(), Константы.ОтветственныйЗаКассовыеОперации.Получить());	
	обЗадача.Организация = пДокумент.Организация;
	обЗадача.Оповещение = Истина;
	обЗадача.СрокИсполнения = НачалоДня(ТекущаяДата());
	обЗадача.СрокОповещения = НачалоДня(ТекущаяДата());
	обЗадача.Наименование = "Срок оплаты по документу " + пДокумент + " ,произвести оплату по даному документу?";
	обЗадача.Записать();
КонецПроцедуры

Процедура ВыполнитьЗадачиСНеоплаченнымиЗаявками()
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЗадачаИсполнителя.Ссылка
	               |ИЗ
	               |	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
	               |ГДЕ
	               |	ЗадачаИсполнителя.ВидЗадачи = ЗНАЧЕНИЕ(Справочник.ВидыЗадачПользователей.НеоплаченныеЗаявкиНаРасходованиеСредств)
	               |	И НЕ ЗадачаИсполнителя.Выполнена";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		обЗадача = Выборка.Ссылка.ПолучитьОбъект();
		обЗадача.Выполнена = Истина;
		обЗадача.Записать();
	КонецЦикла;	
КонецПроцедуры
