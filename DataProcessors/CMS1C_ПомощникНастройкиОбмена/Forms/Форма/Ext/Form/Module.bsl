Процедура УстановитьПараметрыДляДинамическихЗапросов()
	Таблицы.Параметры.УстановитьЗначениеПараметра("СистемаУправленияСайтом",ОБъект.СистемаУправленияСайтом);
	СопоставленияТаблиц.Параметры.УстановитьЗначениеПараметра("СистемаУправленияСайтом",ОБъект.СистемаУправленияСайтом);
	ПоляТаблиц.Параметры.УстановитьЗначениеПараметра("Владелец",Элементы.Таблицы.ТекущаяСтрока);
	
	
	СхемыОбмена.Параметры.УстановитьЗначениеПараметра("СистемаУправленияСайтом",Объект.СистемаУправленияСайтом);
	ТекущаяСтрока = Элементы.СхемыОбмена.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		ЭтапыСхемы.Параметры.УстановитьЗначениеПараметра("Владелец",Неопределено);
	Иначе
		//СхемыОбмена.
		ЭтапыСхемы.Параметры.УстановитьЗначениеПараметра("Владелец",ТекущаяСтрока.Ссылка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КомандаПолучитьСписокТаблиц(Команда)
	ТаблицаТаблиц = ПолучитьСписокТаблицДляЗагрузки();
	Ф = ПолучитьФорму("Обработка.CMS1C_ПомощникНастройкиОбмена.Форма.ФормаВыбораТаблицДляЗагрузки");
	Для Каждого СтрТз из ТаблицаТаблиц Цикл
		Ф.ТаблицаТаблиц.Добавить().ИмяТаблицы = СтрТз.ИмяТаблицы;
	КонецЦИкла;
	Результат = Ф.ОткрытьМодально();
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//ТаблицаНужныхТаблиц = РЕзультат.ВЫгрузить(Новый Структура("Загружать",Истина));
	СоздатьТаблицы(Результат);
	УстановитьПараметрыДляДинамическихЗапросов();
КонецПроцедуры

Функция ПолучитьСписокТаблицДляЗагрузки()
	Обработка = Обработки.CMS1C_ОбработкаОбмена.Создать();
	ЗаполнитьЗначенияСвойств(Обработка,Объект.НастройкаСайта);
	СтруктураПараметровСайта = Обработка.ПолучитьСтруктуруПараметровДляСоединения(Обработка, Обработка.HTTPОбменАдресСайта);
	 
	Соединение = Обработка.HTTPУстановитьСоединение(СтруктураПараметровСайта);
	
	ТаблицаТаблиц = CMS1C_ПроцедурыОбменаССайтомСервер.ЗапросSQL("get_database_tables","",Соединение,СтруктураПараметровСайта,,);
	
	Возврат ТаблицаТаблиц;
КонецФункции

Функция СоздатьТаблицы(Результат)
	Обработка = Обработки.CMS1C_ОбработкаОбмена.Создать();
	ЗаполнитьЗначенияСвойств(Обработка,Объект.НастройкаСайта);
	СтруктураПараметровСайта = Обработка.ПолучитьСтруктуруПараметровДляСоединения(Обработка, Обработка.HTTPОбменАдресСайта);
	
	Соединение = Обработка.HTTPУстановитьСоединение(СтруктураПараметровСайта);
	Для Каждого СтрТз из Результат Цикл
		Если Не СтрТз.Загружать Тогда
			Продолжить;
		КонецЕсли;
		
		Запрос = Новый Запрос();
		Запрос.Текст = "ВЫБРАТЬ
		|	CMS1C_Таблицы.Ссылка
		|ИЗ
		|	Справочник.CMS1C_Таблицы КАК CMS1C_Таблицы
		|ГДЕ
		|	CMS1C_Таблицы.Наименование = &Наименование
		|	И CMS1C_Таблицы.СистемаУправленияСайтом = &СистемаУправленияСайтом";
		Запрос.УстановитьПараметр("Наименование",СтрТз.ИмяТаблицы);
		Запрос.УстановитьПараметр("СистемаУправленияСайтом",ОБъект.СистемаУправленияСайтом);
		ВЫб = Запрос.Выполнить().Выбрать();
		Если ВЫб.Следующий() Тогда
			ТекЭлементТаблица = Выб.Ссылка;
		Иначе
			Об = Справочники.CMS1C_Таблицы.СоздатьЭлемент();
			Об.СистемаУправленияСайтом = Объект.СистемаУправленияСайтом;
			Об.Наименование = СтрТз.ИмяТаблицы;
			Об.Записать();
			ТекЭлементТаблица = Об.Ссылка;
		КонецЕсли;
		
		ТаблицаКолонок = CMS1C_ПроцедурыОбменаССайтомСервер.ЗапросSQL("get_columns",СтрТз.ИмяТаблицы,Соединение,СтруктураПараметровСайта);
		
		НС = 0;
		Для Каждого СтрТзТаблицаКОлонок из ТаблицаКолонок Цикл
			НС = НС + 1;
			Запрос = Новый Запрос();
			Запрос.Текст = "ВЫБРАТЬ
			|	CMS1C_ПоляТаблиц.Ссылка
			|ИЗ
			|	Справочник.CMS1C_ПоляТаблиц КАК CMS1C_ПоляТаблиц
			|ГДЕ
			|	CMS1C_ПоляТаблиц.Владелец = &Владелец
			|	И CMS1C_ПоляТаблиц.Наименование = &Наименование";
			Запрос.УстановитьПараметр("Владелец",ТекЭлементТаблица);
			Запрос.УстановитьПараметр("Наименование",СтрТзТаблицаКОлонок.Наименование);
			ВЫб = Запрос.Выполнить().Выбрать();
			Если ВЫб.Следующий() Тогда
				Об = Выб.Ссылка.ПолучитьОБъект();
			Иначе
				Об = Справочники.CMS1C_ПоляТаблиц.СоздатьЭлемент();
			КонецЕсли;
			Об.Владелец = ТекЭлементТаблица;
			Об.Наименование = СтрТзТаблицаКОлонок.Наименование;
			ПолучитьТипЗначенияИРазмерности(Об,СтрТзТаблицаКОлонок.ТИп);
			Об.ВозможенNULL = ?(СтрТзТаблицаКОлонок.NULL="YES",Истина,ЛОжь);
			УстановитьЗначениеПоУмолчаниюИсходяИзТипа(Об,СтрТзТаблицаКОлонок.ПоУмолчанию);
			Об.Индекс = СтрТзТаблицаКОлонок.Индекс;
			Об.Экстра = СтрТзТаблицаКОлонок.Экстра;
			Об.Сортировка = НС;
			Об.Записать();
		КонеЦЦИкла;
		
	КонецЦикла;
КонецФункции

&НаКлиенте
Процедура ТаблицыПриАктивизацииСтроки(Элемент)
	ПоляТаблиц.Параметры.УстановитьЗначениеПараметра("Владелец",Элементы.Таблицы.ТекущаяСтрока);
КонецПроцедуры

Процедура ПолучитьТипЗначенияИРазмерности(ПолеОбъект,Тип)
	Если Найти(Тип,"varchar")<> 0 Тогда
		ПолеОбъект.Тип = "Строка";
		НайдПерваяГалочка = Найти(Тип,"(");
		НайдВтораяГалочка = Найти(Тип,")");
		Разница = НайдВтораяГалочка - НайдПерваяГалочка-1;
		ПолеОбъект.Размерность = Число(Сред(Тип,НайдПерваяГалочка+1,Разница));
	ИначеЕсли Найти(Тип,"blob") Тогда 
		ПолеОбъект.Тип = "Строка";
		ПолеОбъект.Размерность = 0;
	ИначеЕсли Найти(Тип,"char")<> 0 Тогда
		ПолеОбъект.Тип = "Строка";
		НайдПерваяГалочка = Найти(Тип,"(");
		НайдВтораяГалочка = Найти(Тип,")");
		Разница = НайдВтораяГалочка - НайдПерваяГалочка-1;
		ПолеОбъект.Размерность = Число(Сред(Тип,НайдПерваяГалочка+1,Разница));
	ИначеЕсли Найти(Тип,"int")<>0 Тогда
		ПолеОбъект.Тип = "Число";
		НайдПерваяГалочка = Найти(Тип,"(");
		НайдВтораяГалочка = Найти(Тип,")");
		Разница = НайдВтораяГалочка - НайдПерваяГалочка-1;
		ПолеОбъект.Размерность = Число(Сред(Тип,НайдПерваяГалочка+1,Разница));
	ИначеЕсли Найти(Тип,"text")<>0 Тогда
		ПолеОбъект.Тип = "Строка";
		ПолеОбъект.Размерность = 0;
	ИНачеЕсли Найти(Тип,"datetime") <> 0 Тогда
		ПолеОбъект.Тип = "Дата";
		ПолеОбъект.Размерность = 0;
	ИНачеЕсли Найти(Тип,"date") <> 0 Тогда
		ПолеОбъект.Тип = "Дата";
		ПолеОбъект.Размерность = 0;
	ИНачеЕсли Найти(Тип,"time") <> 0 Тогда
		ПолеОбъект.Тип = "Дата";
		ПолеОбъект.Размерность = 0;
	ИНачеЕсли Найти(Тип,"timestamp") <> 0 Тогда
		ПолеОбъект.Тип = "Дата";
		ПолеОбъект.Размерность = 0;
	ИначеЕсли Найти(Тип,"decimal") <> 0 Тогда
		ПолеОбъект.Тип = "Число";
		НайдПерваяГалочка = Найти(Тип,"(");
		НайдВтораяГалочка = Найти(Тип,",");
		Разница = НайдВтораяГалочка - НайдПерваяГалочка-1;
		ПолеОбъект.Размерность = Число(Сред(Тип,НайдПерваяГалочка+1,Разница));
	ИначеЕсли Найти(Тип,"double") <> 0 Тогда
		ПолеОбъект.Тип = "Число";
		ПолеОбъект.Размерность = 0;
	ИначеЕсли Найти(Тип,"float") <> 0 Тогда
		ПолеОбъект.Тип = "Число";
		ПолеОбъект.Размерность = 0;
	ИначеЕсли Найти(Тип,"enum") <> 0 Тогда
		ПолеОбъект.Тип = "Строка";
		НайдПерваяГалочка = Найти(Тип,"(");
		НайдВтораяГалочка = Найти(Тип,")");
		Разница = НайдВтораяГалочка - НайдПерваяГалочка-1;
		ПолеОбъект.Значения = Сред(Тип,НайдПерваяГалочка+1,Разница);
		ПолеОбъект.Размерность = 0;
	Иначе
		Сообщить("Не найден тип "+Тип);
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьЗначениеПоУмолчаниюИсходяИзТипа(Об,ПоУмолчанию)
	//Сообщить(ПоУмолчанию+", "+Об.ТИп);
	Если НЕ ЗначениеЗаполнено(ПоУмолчанию) Тогда
		Об.ПоУмолчанию = Неопределено;
		Возврат;
	КонецЕсли;
	
	Если Об.Тип = "Число" Тогда
		Об.ПоУмолчанию = Число(ПоУмолчанию);
	Иначе
		Об.ПоУмолчанию = ПоУмолчанию;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицуДанных(Команда)
	ЗаполнитьТаблицуДанныхСерв();
	
КонецПроцедуры

Процедура ЗаполнитьТаблицуДанныхСерв()
	Обработка = Обработки.CMS1C_ОбработкаОбмена.Создать();
	ЗаполнитьЗначенияСвойств(Обработка,Объект.НастройкаСайта);
	СтруктураПараметровСайта = Обработка.ПолучитьСтруктуруПараметровДляСоединения(Обработка, Обработка.HTTPОбменАдресСайта);
	 
	Соединение = Обработка.HTTPУстановитьСоединение(СтруктураПараметровСайта);
	
	СтруктураПараметровЗапроса = Новый Структура();
	Если Объект.НастройкаСайта.Отладка ИЛИ ОБъект.НастройкаОбмена.Отладка Тогда
		СтруктураПараметровЗапроса.Вставить("Отладка",Истина);
	КонецЕсли;
	
	
	ТаблицаДанныхСерв = CMS1C_ПроцедурыОбменаССайтомСервер.ЗапросSQL("list","SELECT * FROM "+Элементы.Таблицы.ТекущаяСтрока.Наименование,Соединение,СтруктураПараметровСайта,,СтруктураПараметровЗапроса);
	//ТЗ = ДанныеФормыВЗначение(ТаблицаДанных,ТИп("ТаблицаЗначений"));
	//тз.Колонки.Очистить();
	//Для Каждого СтрТз из ТаблицаДанныхСерв.КОлонки Цикл
	//	тз.Колонки.Добавить(СтрТз.Имя);
	//КонецЦИкла;
	//
	//Для Каждого СтРТз из ТаблицаДанныхСерв Цикл
	//	ДобСтр = тз.Добавить();
	//	ЗаполнитьЗначенияСвойств(ДобСтр,СтрТз);
	//КонецЦИкла;		
	
	//ЗначениеВРеквизитФормы(Тз,"ТаблицаДанных");
	//тз2 = ДанныеФормыВЗначение(ТаблицаДанных,ТИп("ТаблицаЗначений"));
	ВЫвестиТаблицуНаФорму(ЭтаФорма,"ТаблицаДанных",ТаблицаДанныхСерв);
КонецПроцедуры


&НаСервере
Процедура ВывестиТаблицуНаФорму(УФ,ИмяТЗНаФорме,ТЗ, ТЗОбработчиковСобытий = Неопределено) Экспорт
   
   // СОЗДАНИЕ РЕКВИЗИТОВ ФОРМЫ
   МассивДобавляемыхРеквизитов = Новый Массив; 
   
   Для Каждого Колонка Из ТЗ.Колонки Цикл
      МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения,ИмяТЗНаФорме ,Колонка.Заголовок));   
   КонецЦикла; 
   
   МассивУдаляемыхРеквизитов = УФ.ПолучитьРеквизиты(ИмяТЗНаФорме);
   МассивИменУдаляемыхРеквизитов = Новый Массив;
   
   Для каждого Элемент Из МассивУдаляемыхРеквизитов Цикл
      МассивИменУдаляемыхРеквизитов.Добавить(ИмяТЗНаФорме + "." + Элемент.Имя);
   КонецЦикла; 
   
   УФ.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов,МассивИменУдаляемыхРеквизитов); 
   
   // СОЗДАНИЕ ЭЛЕМЕНТОВ ФОРМЫ
   Для каждого Элемент Из МассивУдаляемыхРеквизитов Цикл
      УдаляемыйЭлемент = УФ.Элементы.Найти(ИмяТЗНаФорме + Элемент.Имя);
      УФ.Элементы.Удалить(УдаляемыйЭлемент);
   КонецЦикла; 
   
   Для Каждого Колонка Из ТЗ.Колонки Цикл
      НоваяКолонка = УФ.Элементы.Добавить(ИмяТЗНаФорме + Колонка.Имя, Тип("ПолеФормы"), УФ.Элементы[ИмяТЗНаФорме]); 
      НоваяКолонка.Заголовок = Колонка.Заголовок; 
      НоваяКолонка.ПутьКДанным = ИмяТЗНаФорме + "." + Колонка.Имя;
      НоваяКолонка.Вид = ВидПоляФормы.ПолеВвода; 
      НоваяКолонка.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;    
   КонецЦикла;    
   
   УФ[ИмяТЗНаФорме].Загрузить(ТЗ);
   
   // Привязка обработчиков событий
   Если ТЗОбработчиковСобытий = Неопределено Тогда
      Возврат;
   КонецЕсли;   
   
   Для Каждого Строка Из ТЗОбработчиковСобытий Цикл
      УФ.Элементы[Строка.ИмяЭлемента].УстановитьДействие(Строка.ИмяСобытия, Строка.ИмяЭлемента + Строка.ИмяСобытия); 
   КонецЦикла;   
   
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьПараметрыДляДинамическихЗапросов();
КонецПроцедуры

&НаКлиенте
Процедура СхемыОбменаПриАктивизацииСтроки(Элемент)
	ТекСтрокаСхемы = Элементы.СхемыОбмена.ТекущиеДанные;
	Если ТекСтрокаСхемы = Неопределено Тогда
		ЭтапыСхемы.Параметры.УстановитьЗначениеПараметра("Владелец",Неопределено);
	Иначе
		ЭтапыСхемы.Параметры.УстановитьЗначениеПараметра("Владелец",ТекСтрокаСхемы.Ссылка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Копирование ТОгда
		Возврат;
	Конецесли;
	
	Отказ = Истина;
	ф = ПолучитьФорму("Справочник.CMS1C_Таблицы.ФормаОбъекта");
	Ф.Объект.СистемаУправленияСайтом = Объект.СистемаУправленияСайтом;
	Ф.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура СопоставленияТаблицПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Копирование ТОгда
		Возврат;
	Конецесли;
	Отказ = Истина;
	
	
	Стр = Новый Структура();
	Стр.Вставить("НастройкаСайта",ОБъект.НастройкаСайта);
	Стр.Вставить("НастройкаОбмена",Объект.НастройкаОбмена);
	Стр.Вставить("СистемаУправленияСайтом",Объект.СистемаУправленияСайтом);
	ОткрытьФорму("Справочник.CMS1C_СопоставленияТаблиц.ФормаОбъекта",Стр,Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СхемыОбменаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Копирование ТОгда
		Возврат;
	Конецесли;
	
	Отказ = Истина;
	Стр = Новый Структура();
	Стр.Вставить("НастройкаСайта",ОБъект.НастройкаСайта);
	Стр.Вставить("НастройкаОбмена",Объект.НастройкаОбмена);
	Стр.Вставить("СистемаУправленияСайтом",Объект.СистемаУправленияСайтом);
	
	ОткрытьФорму("Справочник.CMS1C_СхемыОбмена.ФормаОбъекта",Стр,Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыСхемыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Копирование ТОгда
		Возврат;
	Конецесли;
	
	Отказ = Истина;
	ф = ПолучитьФорму("Справочник.CMS1C_ЭтапыСхемы.ФормаОбъекта");
	
	ТекСтрокаСхемы = Элементы.СхемыОбмена.ТекущиеДанные;
	
	Если ТекСтрокаСхемы <> Неопределено Тогда
		ТекСхема = ТекСтрокаСхемы.Ссылка;
		Если ТекСхема <> Неопределено тогда
			Ф.Объект.СхемаОбмена = ТекСхема;
		КонецЕсли;
	КонецЕсли;
	Ф.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура СистемаУправленияСайтомПриИзменении(Элемент)
	УстановитьПараметрыДляДинамическихЗапросов();
	СхемыОбменаПриАктивизацииСтроки(Элемент);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьПараметрыДляДинамическихЗапросов();
КонецПроцедуры

&НаКлиенте
Процедура СопоставленияТаблицВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ВыбраннаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Стр = Новый Структура();
	Стр.Вставить("НастройкаСайта",ОБъект.НастройкаСайта);
	Стр.Вставить("НастройкаОбмена",Объект.НастройкаОбмена);
	//Стр.Вставить("СистемаУправленияСайтом".ОБъект.СистемаУправленияСайтом);
	Стр.Вставить("Ключ",ВыбраннаяСтрока);
	ОткрытьФорму("Справочник.CMS1C_СопоставленияТаблиц.Форма.ФормаЭлемента",Стр,Элемент);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СопоставленияТаблицПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СхемыОбменаПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыСхемыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПоляТаблицПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры
