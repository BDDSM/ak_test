
&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
	Если ЗначениеЗаполнено(ТекПриходник) Тогда
	    МасСтр=Объект.Приходники.НайтиСтроки(Новый Структура("Ссылка",ТекПриходник));
		Если МасСтр.Количество()<>0 Тогда
		    Идентиф=МасСтр[0].ПолучитьИдентификатор();
			Элементы.Приходники.ТекущаяСтрока=Идентиф;
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

//+++АК LATV 2018.09.01 ИП-00019721
&НаСервере
Процедура ЗаполнитьНаСервере()

	Объект.Приходники.Очистить();
	Объект.ПриходникиБезГруппировки.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПриходныйОрдерСклад.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ втПриходники
		|ИЗ
		|	Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
		|ГДЕ
		|	ПриходныйОрдерСклад.Дата МЕЖДУ &Дата1 И &Дата2
		|	И ПриходныйОрдерСклад.Проведен
		|	И НЕ ПриходныйОрдерСклад.Отменен
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПоступлениеТоваровУслугДокументыОснования.Ссылка КАК Ссылка,
		|	ПоступлениеТоваровУслугДокументыОснования.ПриходныйОрдер КАК ДокументОснование
		|ПОМЕСТИТЬ втПоступления
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.ПриходныеОрдера КАК ПоступлениеТоваровУслугДокументыОснования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПриходники КАК втПриходники
		|		ПО ПоступлениеТоваровУслугДокументыОснования.ПриходныйОрдер = втПриходники.Ссылка
		|ГДЕ
		|	НЕ ПоступлениеТоваровУслугДокументыОснования.Ссылка.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеТоваровУслугДокументыОснования.Ссылка,
		|	ПоступлениеТоваровУслугДокументыОснования.ПриходныйОрдер
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втПоступления.ДокументОснование КАК ДокументОснование,
		|	СУММА(ПоступлениеТоваровУслуг.Сумма) КАК Сумма,
		|	СУММА(ВЫБОР
		|			КОГДА ПоступлениеТоваровУслуг.Количество - ПоступлениеТоваровУслуг.ПоПриходнымОрдерам - ПоступлениеТоваровУслуг.КоличествоПретензияКСкладу > 0
		|				ТОГДА ПоступлениеТоваровУслуг.Количество - ПоступлениеТоваровУслуг.ПоПриходнымОрдерам - ПоступлениеТоваровУслуг.КоличествоПретензияКСкладу
		|			ИНАЧЕ -(ПоступлениеТоваровУслуг.Количество - ПоступлениеТоваровУслуг.ПоПриходнымОрдерам - ПоступлениеТоваровУслуг.КоличествоПретензияКСкладу)
		|		КОНЕЦ) КАК Претензии,
		|	СУММА(ПоступлениеТоваровУслуг.СуммаНДС) КАК СуммаНДС
		|ПОМЕСТИТЬ втСуммаПоступлений
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслуг
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПоступления КАК втПоступления
		|		ПО ПоступлениеТоваровУслуг.Ссылка = втПоступления.Ссылка
		|ГДЕ
		|	НЕ ПоступлениеТоваровУслуг.Ссылка.ПометкаУдаления
		|
		|СГРУППИРОВАТЬ ПО
		|	втПоступления.ДокументОснование
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ДокументОснование
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ПриходныйОрдерСклад.Ссылка) КАК Ссылка,
		|	ПриходныйОрдерСклад.Поставщик КАК Контрагент,
		|	ВЫБОР
		|		КОГДА втПоступления.Ссылка ЕСТЬ NULL
		|			ТОГДА ПриходныйОрдерСклад.Поставщик.ОсновнойДоговорКонтрагента.Организация
		|		ИНАЧЕ втПоступления.Ссылка.Организация
		|	КОНЕЦ КАК ЮридическоеЛицо,
		|	ПриходныйОрдерСклад.НомерДокументаПоставщика КАК НомерНакладной,
		|	ПриходныйОрдерСклад.ДатаДокументаПоставщика КАК ДатаНакладной,
		|	МАКСИМУМ(ПриходныйОрдерСклад.РасхожденияСПоставщиком) КАК РасхожденияСПоставщиком,
		|	МАКСИМУМ(ПриходныйОрдерСклад.ПоставщикОповещен) КАК ПоставщикОповещен
		|ПОМЕСТИТЬ втПриходникиСгрупп
		|ИЗ
		|	Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПоступления КАК втПоступления
		|		ПО (втПоступления.ДокументОснование = ПриходныйОрдерСклад.Ссылка)
		|ГДЕ
		|	ПриходныйОрдерСклад.Дата МЕЖДУ &Дата1 И &Дата2
		|	И (ПриходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ОтПоставщика)
		|			ИЛИ ПриходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ПоступлениеУпаковкиОтПоставщика))
		|	И ВЫБОР
		|			КОГДА &БезПоступлений = ИСТИНА
		|				ТОГДА втПоступления.Ссылка ЕСТЬ NULL
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И (ПриходныйОрдерСклад.Поставщик.ОсновнойБухгалтерПокупателя = &Бух
		|			ИЛИ &Бух = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))
		|	И (ПриходныйОрдерСклад.Поставщик = &Контрагент
		|			ИЛИ &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
		|	И (ПриходныйОрдерСклад.Склад.Владелец = &Склад
		|			ИЛИ &Склад = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
		//+++АК ILIK 2018.11.28 ИП-00020522
		|	И (ПриходныйОрдерСклад.Поставщик.ОтветственныйОператор = &Оператор
		|			ИЛИ &Оператор = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))
		//---АК ILIK
		|
		|СГРУППИРОВАТЬ ПО
		|	ПриходныйОрдерСклад.Поставщик,
		|	ВЫБОР
		|		КОГДА втПоступления.Ссылка ЕСТЬ NULL
		|			ТОГДА ПриходныйОрдерСклад.Поставщик.ОсновнойДоговорКонтрагента.Организация
		|		ИНАЧЕ втПоступления.Ссылка.Организация
		|	КОНЕЦ,
		|	ПриходныйОрдерСклад.НомерДокументаПоставщика,
		|	ПриходныйОрдерСклад.ДатаДокументаПоставщика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриходныйОрдерСклад.Ссылка КАК Ссылка,
		|	ПриходныйОрдерСклад.ПометкаУдаления,
		|	ПриходныйОрдерСклад.Номер,
		|	ПриходныйОрдерСклад.Дата КАК Дата,
		|	ПриходныйОрдерСклад.Проведен,
		|	ПриходныйОрдерСклад.ВидОперации,
		|	ПриходныйОрдерСклад.Поставщик КАК Контрагент,
		|	ЕСТЬNULL(втСуммаПоступлений.Сумма, 0) КАК СуммаДокумента,
		|	втПоступления.Ссылка КАК Поступление,
		|	втПоступления.Ссылка.НомерВходящегоСчетаФактуры КАК НомерСчетаФактуры,
		|	втПоступления.Ссылка.ДатаВходящегоСчетаФактуры КАК ДатаСчетаФактуры,
		|	ВЫБОР
		|		КОГДА втПоступления.Ссылка ЕСТЬ NULL
		|			ТОГДА ПриходныйОрдерСклад.Ссылка.Организация
		|		ИНАЧЕ втПоступления.Ссылка.Организация
		|	КОНЕЦ КАК ЮридическоеЛицо,
		|	ПриходныйОрдерСклад.Комментарий,
		|	ПриходныйОрдерСклад.Поставщик.ОсновнойБухгалтерПокупателя КАК ОтветственныйБухгалтер,
		|	ПриходныйОрдерСклад.НомерДокументаПоставщика КАК НомерНакладной,
		|	ПриходныйОрдерСклад.ДатаДокументаПоставщика КАК ДатаНакладной,
		|	ЕСТЬNULL(втСуммаПоступлений.Претензии, 0) КАК Претензии,
		|	ПриходныйОрдерСклад.РасхожденияСПоставщиком,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(втСуммаПоступлений.Претензии, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ФлПретензии,
		|	ВЫБОР
		|		КОГДА ПриходныйОрдерСклад.Проведен
		|			ТОГДА 1
		|		КОГДА ПриходныйОрдерСклад.ПометкаУдаления
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Индекс,
		|	ЕСТЬNULL(втСуммаПоступлений.СуммаНДС, 0) КАК СуммаНДС,
		|	ПриходныйОрдерСклад.Склад,
		|	ПриходныйОрдерСклад.ПоставщикОповещен,
		|	втПоступления.Ссылка.Проведен КАК ПроведенПоступ,
		|	втПоступления.Ссылка.ПометкаУдаления КАК ПометкаУдаленияПоступ,
		|	ПриходныйОрдерСклад.Поставщик
		|ИЗ
		|	Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
		|		ЛЕВОЕ СОЕДИНЕНИЕ втПоступления КАК втПоступления
		|		ПО (втПоступления.ДокументОснование = ПриходныйОрдерСклад.Ссылка)
		|		ЛЕВОЕ СОЕДИНЕНИЕ втСуммаПоступлений КАК втСуммаПоступлений
		|		ПО (втСуммаПоступлений.ДокументОснование = ПриходныйОрдерСклад.Ссылка)
		|ГДЕ
		|	ПриходныйОрдерСклад.Дата МЕЖДУ &Дата1 И &Дата2
		|	И (ПриходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ОтПоставщика)
		|			ИЛИ ПриходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ПоступлениеУпаковкиОтПоставщика))
		|	И ВЫБОР
		|			КОГДА &БезПоступлений = ИСТИНА
		|				ТОГДА втПоступления.Ссылка ЕСТЬ NULL
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И (ПриходныйОрдерСклад.Поставщик.ОсновнойБухгалтерПокупателя = &Бух
		|			ИЛИ &Бух = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))
		|	И (ПриходныйОрдерСклад.Поставщик = &Контрагент
		|			ИЛИ &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
		|	И (ПриходныйОрдерСклад.Склад.Владелец = &Склад
		|			ИЛИ &Склад = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
		//+++АК ILIK 2018.11.28 ИП-00020522
		|	И (ПриходныйОрдерСклад.Поставщик.ОтветственныйОператор = &Оператор
		|			ИЛИ &Оператор = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))
		//---АК ILIK
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриходныйОрдерСклад.Ссылка КАК Ссылка,
		|	ПриходныйОрдерСклад.ПометкаУдаления,
		|	ПриходныйОрдерСклад.Номер,
		|	ПриходныйОрдерСклад.Дата КАК Дата,
		|	ПриходныйОрдерСклад.Проведен,
		|	ПриходныйОрдерСклад.ВидОперации,
		|	ПриходныйОрдерСклад.Поставщик КАК Контрагент,
		|	ЕСТЬNULL(втСуммаПоступлений.Сумма, 0) КАК СуммаДокумента,
		|	втПоступления.Ссылка КАК Поступление,
		|	втПоступления.Ссылка.НомерВходящегоСчетаФактуры КАК НомерСчетаФактуры,
		|	втПоступления.Ссылка.ДатаВходящегоСчетаФактуры КАК ДатаСчетаФактуры,
		|	ВЫБОР
		|		КОГДА втПоступления.Ссылка ЕСТЬ NULL
		|			ТОГДА ПриходныйОрдерСклад.Ссылка.Организация
		|		ИНАЧЕ втПоступления.Ссылка.Организация
		|	КОНЕЦ КАК ЮридическоеЛицо,
		|	ПриходныйОрдерСклад.Комментарий,
		|	ПриходныйОрдерСклад.Поставщик.ОсновнойБухгалтерПокупателя КАК ОтветственныйБухгалтер,
		|	ПриходныйОрдерСклад.НомерДокументаПоставщика КАК НомерНакладной,
		|	ПриходныйОрдерСклад.ДатаДокументаПоставщика КАК ДатаНакладной,
		|	ЕСТЬNULL(втСуммаПоступлений.Претензии, 0) КАК Претензии,
		|	втПриходникиСгрупп.РасхожденияСПоставщиком,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(втСуммаПоступлений.Претензии, 0) = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ФлПретензии,
		|	ВЫБОР
		|		КОГДА ПриходныйОрдерСклад.Проведен
		|			ТОГДА 1
		|		КОГДА ПриходныйОрдерСклад.ПометкаУдаления
		|			ТОГДА 2
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Индекс,
		|	ЕСТЬNULL(втСуммаПоступлений.СуммаНДС, 0) КАК СуммаНДС,
		|	ПриходныйОрдерСклад.Склад,
		|	втПриходникиСгрупп.ПоставщикОповещен,
		|	втПоступления.Ссылка.Проведен КАК ПроведенПоступ,
		|	втПоступления.Ссылка.ПометкаУдаления КАК ПометкаУдаленияПоступ,
		|	ПриходныйОрдерСклад.Поставщик
		//+++АК ILIK 2018.10.11 ИП-00019835
		|,	ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, втПоступления.Ссылка.Контрагент.КПП) КАК КППКонтрагента
		//---АК ILIK
		|ИЗ
		|	втПриходникиСгрупп КАК втПриходникиСгрупп
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
		|			ЛЕВОЕ СОЕДИНЕНИЕ втПоступления КАК втПоступления
		|			ПО (втПоступления.ДокументОснование = ПриходныйОрдерСклад.Ссылка)
		|			ЛЕВОЕ СОЕДИНЕНИЕ втСуммаПоступлений КАК втСуммаПоступлений
		|			ПО (втСуммаПоступлений.ДокументОснование = ПриходныйОрдерСклад.Ссылка)
		|		ПО втПриходникиСгрупп.Ссылка = ПриходныйОрдерСклад.Ссылка
		//+++АК ILIK 2018.10.11 ИП-00019835
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|		ПО (втПоступления.Ссылка = ЗначенияСвойствОбъектов.Объект)
		|			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.КППКонтрагента))
		//---АК ILIK
		|ГДЕ
		|	ПриходныйОрдерСклад.Дата МЕЖДУ &Дата1 И &Дата2
		|	И (ПриходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ОтПоставщика)
		|			ИЛИ ПриходныйОрдерСклад.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПриходСкладскойУчет.ПоступлениеУпаковкиОтПоставщика))
		|	И ВЫБОР
		|			КОГДА &БезПоступлений = ИСТИНА
		|				ТОГДА втПоступления.Ссылка ЕСТЬ NULL
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|	И (ПриходныйОрдерСклад.Поставщик.ОсновнойБухгалтерПокупателя = &Бух
		|			ИЛИ &Бух = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))
		|	И (ПриходныйОрдерСклад.Поставщик = &Контрагент
		|			ИЛИ &Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка))
		|	И (ПриходныйОрдерСклад.Склад.Владелец = &Склад
		|			ИЛИ &Склад = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	Ссылка";

	Запрос.УстановитьПараметр("Дата1",			ПериодОтбора.ДатаНачала);
	Запрос.УстановитьПараметр("Дата2",			КонецДня(ПериодОтбора.ДатаОкончания));
	Запрос.УстановитьПараметр("БезПоступлений",	БезСформированныхПоступлений);
	Запрос.УстановитьПараметр("Бух",			ОтветственныйБухгалтер);
	Запрос.УстановитьПараметр("Контрагент",		Контрагент);
	Запрос.УстановитьПараметр("Склад",			Склад);
	//+++АК ILIK 2018.11.28 ИП-00020522
	Запрос.УстановитьПараметр("Оператор",		ОтветственныйОператор);
	//---АК ILIK
	
	Результаты = Запрос.ВыполнитьПакет();
	ВыборкаДетальныеЗаписиБезГруппировки = Результаты[4].Выбрать();
	ВыборкаДетальныеЗаписи = Результаты[5].Выбрать();
	
	ВВ=Справочники.Организации.НайтиПоНаименованию("Вкусвилл");
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НовСтр = Объект.Приходники.Добавить();
		ЗаполнитьПоВыборке(НовСтр, ВыборкаДетальныеЗаписи, ВВ);
	КонецЦикла;
	
	Пока ВыборкаДетальныеЗаписиБезГруппировки.Следующий() Цикл
		НовСтр = Объект.ПриходникиБезГруппировки.Добавить();
		ЗаполнитьПоВыборке(НовСтр, ВыборкаДетальныеЗаписиБезГруппировки, ВВ);
	КонецЦикла;

КонецПроцедуры

//+++АК LATV 2018.09.01 ИП-00019721
&НаСервере
Процедура ЗаполнитьПоВыборке(НоваяСтрока, ВыборкаДетальныеЗаписи, ВВ)

	ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаДетальныеЗаписи);
	Если Не ЗначениеЗаполнено(НоваяСтрока.ЮридическоеЛицо) Тогда
		НоваяСтрока.ЮридическоеЛицо = ВВ;
	КонецЕсли;
	Если ПроставитьНомерИДатуСФ И ЗначениеЗаполнено(НоваяСтрока.НомерНакладной) И Не ЗначениеЗаполнено(НоваяСтрока.НомерСчетаФактуры) Тогда
		НоваяСтрока.НомерСчетаФактуры=НоваяСтрока.НомерНакладной;
	КонецЕсли;
	Если ПроставитьНомерИДатуСФ И ЗначениеЗаполнено(НоваяСтрока.ДатаНакладной) И Не ЗначениеЗаполнено(НоваяСтрока.ДатаСчетаФактуры) Тогда
		НоваяСтрока.ДатаСчетаФактуры=НоваяСтрока.ДатаНакладной;
	КонецЕсли;
	
	Сумма		= 0;
	СуммаНДС	= 0;
	Если ТипЗнч(ВыборкаДетальныеЗаписи.Поставщик) = Тип("СправочникСсылка.Контрагенты") И Не ЗначениеЗаполнено(НоваяСтрока.Поступление) Тогда
		ОбновитьЦенуВСтрокеТЧ(НоваяСтрока,Сумма,СуммаНДС);
		НоваяСтрока.СуммаДокумента	= Сумма;
		НоваяСтрока.СуммаНДС		= СуммаНДС;
	КонецЕсли;
	Если ЗначениеЗаполнено(НоваяСтрока.Поступление) Тогда
		НоваяСтрока.ПоступлениеПомечено = ВыборкаДетальныеЗаписи.ПометкаУдаленияПоступ Или Не ВыборкаДетальныеЗаписи.ПроведенПоступ;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПисьмоПоставщику(Команда)
	Если Элементы.Приходники.ТекущиеДанные=Неопределено Тогда
		Возврат;	
	КонецЕсли; 
	ОтправитьПисьмоПоставщикуСервер(Элементы.Приходники.ТекущиеДанные.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ОтправитьПисьмоПоставщикуСервер(Приходник)
	СтруктураНовогоПисьма = Новый Структура;
	СтруктураНовогоПисьма.Вставить("ВидТекста", Перечисления.ВидыТекстовЭлектронныхПисем.Текст);
	СписокФайловВложений = Новый СписокЗначений;
	
	СтруктураНовогоПисьма.Вставить("Тема", "Принят товар "+Приходник.Поставщик.НаименованиеПолное+" по приходному ордеру №"+Приходник.НомерДокументаПоставщика+" от "+Формат(Приходник.ДатаДокументаПоставщика,"ДФ=dd.MM.yyyy")+".");
	Для каждого Стр Из Приходник.ПрикрепленныеФайлы Цикл
		СписокФайловВложений.Добавить(Новый Структура("ИмяФайла",  Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(Стр.Файл)));
	КонецЦикла; 
	СтруктураНовогоПисьма.Вставить("СписокФайловВложений", СписокФайловВложений);
	Кому = Новый СписокЗначений;

	Запрос = Новый Запрос;
	Запрос.Текст =                                                                                   
		"ВЫБРАТЬ                                                   
		|	КонтактнаяИнформация.Представление
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &Объект
		|	И КонтактнаяИнформация.Тип = &Тип
		|	И КонтактнаяИнформация.Вид = Значение(Справочник.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыКонтрагентаДляОбменаДокументами)";

	Запрос.УстановитьПараметр("Объект", Приходник.Поставщик);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		
	Иначе
		 Сообщить("Не заполнен адрес электронной почты контрагента!!");
		 Возврат;
	КонецЕсли;

	
	Кому.Добавить(ВыборкаДетальныеЗаписи.Представление);
	СтруктураНовогоПисьма.Вставить("Кому", Кому);
	Макет=Документы.ПриходныйОрдерСклад.ПолучитьМакет("ТаблицаОтправки");
	ОбластьПечати=Макет.ПолучитьОбласть("ШапкаТаблицы");
	//ОбластьПечати.Параметры.Сообщение="В приходе №"+Объект.НомерДокументаПоставщика+" от "+Формат(Объект.ДатаДокументаПоставщика,"ДФ=dd.MM.yyyy")+" были выявлены расходения.
	//| По факту складом "+Объект.Склад+" были приняты позиции в следующем количестве.
	//| Во вложении сопроводительные документы (акт о расхождении, скан накладной, подписанные материально ответственными лицами).";
	//ОбластьПечати.Параметры.СкладомПолучено="Складом "+Объект.Склад+" было получено фактически";
	ТабДок=Новый ТабличныйДокумент;
	ТабДок.Вывести(ОбластьПечати);
	ОбластьПечати=Макет.ПолучитьОбласть("Строка");
	Для каждого Стр Из Приходник.Товары Цикл
	    ЗаполнитьЗначенияСвойств(ОбластьПечати.Параметры,Стр);
		ТабДок.Вывести(ОбластьПечати);
	КонецЦикла;
	//ОбластьПечати=Макет.ПолучитьОбласть("Подвал");
	//ОбластьПечати.Параметры.ТекстПодвал="Просьба в кратчайший срок согласовать расхождения и выслать замены документов.";
	//ТабДок.Вывести(ОбластьПечати);
	СтруктураНовогоПисьма.Вставить("Тело",ТабДок);
	Попытка
		ОтправитьПисьмоПоПочте(СтруктураНовогоПисьма,Приходник);
	    Сообщить("Отправлено письмо с информацией о приходном ордере на "+ВыборкаДетальныеЗаписи.Представление);
		Если Не Приходник.ПоставщикОповещен Тогда
			ОбъектПриходник=Приходник.ПолучитьОбъект();
			ОбъектПриходник.ПоставщикОповещен=Истина;
			УстановитьПривилегированныйРежим(Истина);
			//Модифицированность=Истина;
			ОбъектПриходник.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли; 
	Исключение
	    Сообщить(ОписаниеОшибки());
	КонецПопытки; 
	
	//УдалитьФайлы(КаталогВременныхФайлов()+"Акт сверки и заказы.epf");
КонецПроцедуры
 

&НаСервере
Процедура ОтправитьПисьмоПоПочте(СтруктураНовогоПисьма,Приходник)  Экспорт
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
	СпАдресов=Новый СписокЗначений;
	Для каждого ЭлСп Из СтруктураНовогоПисьма.Кому Цикл
		МассивАдресов=Справочники.Контрагенты.РазложитьСтрокуВМассивПодстрок(ЭлСп.Значение,";");	
		Для каждого Эл Из МассивАдресов Цикл
			Если ЗначениеЗаполнено(Эл) Тогда
				СпАдресов.Добавить(Сокрлп(Эл));
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла;
	Почта = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Письмо = Новый ИнтернетПочтовоеСообщение;
	
	Почта.Подключиться(Профиль);
	Письмо.Тема = СтруктураНовогоПисьма.Тема;
	Письмо.ИмяОтправителя = ""+УчетнаяЗапись+"";
	Письмо.ИмяОтправителя  = ""+СокрЛП(УчетнаяЗапись)+"";
	Письмо.Отправитель     = ""+СокрЛП(УчетнаяЗапись)+"";
	
	ТабДок=СтруктураНовогоПисьма.Тело;
	ВремФайл = ПолучитьИмяВременногоФайла("htm");
	ТабДок.Записать(ВремФайл, ТипФайлаТабличногоДокумента.HTML);
	
	ТекстДокумент = Новый ТекстовыйДокумент();
	ТекстДокумент.Прочитать(ВремФайл);
	
	Текст = ТекстДокумент.ПолучитьТекст();
	НачалоБлокаСтиль = Найти(Текст, "<STYLE");
	КонецБлокаСтиль = Найти(Текст, "</STYLE");
	ТекстСтиль = Сред(Текст, НачалоБлокаСтиль, КонецБлокаСтиль - НачалоБлокаСтиль + 8);
	НачалоБлокаТело = Найти(Текст, "<BODY");
	КонецБлокаТело = Найти(Текст, "</BODY");
	ТекстТело = Сред(Текст, НачалоБлокаТело, КонецБлокаТело - НачалоБлокаТело + 7);
	
	ТекстПолный = "<HTML>" + Символы.ПС + ТекстСтиль + Символы.ПС + ТекстТело + Символы.ПС + "</HTML>";
	ТекстПолный = СтрЗаменить(ТекстПолный, "CELLSPACING=0", "CELLSPACING=0; border = 1");
	
	ТекстСообщения = Письмо.Тексты.Добавить();
	ТекстСообщения.Текст     = 	"В приходе №"+Приходник.НомерДокументаПоставщика+" от "+Формат(Приходник.ДатаДокументаПоставщика,"ДФ=dd.MM.yyyy")+" были выявлены расхождения.
	|По факту складом "+Приходник.Склад+" были приняты позиции в следующем количестве.
	|Во вложении сопроводительные документы (акт о расхождении, скан накладной), подписанные материально ответственными лицами.
	|Складом "+Приходник.Склад.Владелец+" было получено фактически:";
	ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
	
	ТекстСообщения = Письмо.Тексты.Добавить();
	ТекстСообщения.Текст     = ТекстПолный;
	ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;
	
	
	ТекстСообщения = Письмо.Тексты.Добавить(); 
	//ТекстСообщения.Текст     = 	"Просьба в кратчайший срок согласовать расхождения и выслать замены документов.";
	ТекстСообщения.Текст     = "<HTML>
		|<HEAD>
		|		<TITLE>Просьба </Title>
		|</HEAD>
		|<BODY>
		|<H1><b><font face=""Academy"" color=""Red"" size=5>Просьба в кратчайший срок согласовать расхождения и выслать замены документов. </font></b></H1>
		|</BODY>
		|</HTML>";
	
	ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;
	
	
	Для каждого Эл1 Из СтруктураНовогоПисьма.СписокФайловВложений Цикл
		Письмо.Вложения.Добавить(Эл1.Значение.ИмяФайла);
	КонецЦикла;
	
	Для каждого Адрес Из СпАдресов Цикл
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес           = Адрес.Значение;
	КонецЦикла;
	//МейлБух=УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(Объект.Поставщик.ОсновнойБухгалтерПокупателя.ФизЛицо);
	//Если ЗначениеЗаполнено(МейлБух) Тогда
	//	Получатель = Письмо.Копии.Добавить();
	//	Получатель.Адрес           = МейлБух;
	//КонецЕсли; 
	Почта.Послать(Письмо);
	Почта.Отключиться();
КонецПроцедуры


&НаСервере
Процедура ОбновитьЦенуВСтрокеТЧ(СтрокаТЧ,Сумма,СуммаНДС) Экспорт
	
	//Отбор = Новый Структура;
	//Отбор.Вставить("Номенклатура"		, СтрокаТЧ.Номенклатура);
	//Отбор.Вставить("ЕдиницаИзмерения"	, СтрокаТЧ.ЕдиницаИзмерения);
	//Отбор.Вставить("Поставщик"			, Контрагент);
	//
	//СтруктураЦены = РегистрыСведений.ЦеныПоставщиков.ПолучитьПоследнее(?(Дата = Дата(1, 1, 1), НачалоДня(ТекущаяДата()), Дата), Отбор);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура"	, СтрокаТЧ.Ссылка.Товары.ВыгрузитьКолонку("Номенклатура"));
	Запрос.УстановитьПараметр("Поставщик"		, СтрокаТЧ.Ссылка.Поставщик);
	Запрос.УстановитьПараметр("ДатаСреза"		, ?(ЗначениеЗаполнено(СтрокаТЧ.Ссылка.Дата), СтрокаТЧ.Ссылка.Дата, НачалоДня(ТекущаяДата())));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЦеныПоставщиковСрезПоследних.Номенклатура,
	|	МАКСИМУМ(ЦеныПоставщиковСрезПоследних.Период) КАК Период
	|ПОМЕСТИТЬ вт
	|ИЗ
	|	РегистрСведений.ЦеныПоставщиков.СрезПоследних(
	|			&ДатаСреза,
	|			Номенклатура В (&Номенклатура)
	|				И Поставщик = &Поставщик) КАК ЦеныПоставщиковСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦеныПоставщиковСрезПоследних.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЦеныПоставщиковСрезПоследних.Цена,
	|	0 КАК ЦенаБезНДС,
	|	ЦеныПоставщиковСрезПоследних.Номенклатура
	|ИЗ
	|	РегистрСведений.ЦеныПоставщиков.СрезПоследних(
	|			&ДатаСреза,
	|			Номенклатура В (&Номенклатура)
	|				И Поставщик = &Поставщик) КАК ЦеныПоставщиковСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт КАК вт
	|		ПО ЦеныПоставщиковСрезПоследних.Номенклатура = вт.Номенклатура
	|			И ЦеныПоставщиковСрезПоследних.Период = вт.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЦеныПоставщиковСрезПоследних.Период УБЫВ";

	РезультатЗапроса = Запрос.Выполнить();
	//Если РезультатЗапроса.Пустой() Тогда
	//	Возврат;
	//КонецЕсли;
	СтруктураЦены = РезультатЗапроса.Выбрать();
	СоотЦен=Новый Соответствие;
	Если СтрокаТЧ.Ссылка.Поставщик.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
		ВариантРасчетаНДС		= Перечисления.ВариантыРасчетаНДС.БезНДС;
	Иначе	
		ВариантРасчетаНДС		= Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле;
	КонецЕсли;
	Для каждого Стр Из СтрокаТЧ.Ссылка.Товары Цикл
		ЦенаПоТекСтроке=0;
		Если СтруктураЦены.НайтиСледующий(Новый Структура("Номенклатура",Стр.Номенклатура)) Тогда
			Если ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле Тогда
				ЦенаПоТекСтроке=СтруктураЦены.Цена;
				СтавкаНДС = Стр.Номенклатура.СтавкаНДС;
			Иначе
				Если ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.БезНДС Тогда
					СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
				Иначе
					СтавкаНДС = Стр.Номенклатура.СтавкаНДС;
				КонецЕсли;	
				ЦенаБезНДС = (СтруктураЦены.Цена / (100 + УчетНДС.ПолучитьСтавкуНДС(СтавкаНДС))) * 100;
				ЦенаПоТекСтроке=ЦенаБезНДС;
			КонецЕсли;	
			СтруктураПоСтроке=Новый Структура("Сумма, СуммаНДС,Количество,СтавкаНДС",0,0,Стр.Количество,СтавкаНДС);
			ПосчитатьСуммуСтрокиТЧ(СтруктураПоСтроке,ЦенаПоТекСтроке,ВариантРасчетаНДС);
			Сумма=Сумма+СтруктураПоСтроке.Сумма;
			СуммаНДС=СуммаНДС+СтруктураПоСтроке.СуммаНДС;
		КонецЕсли;
		СтруктураЦены.Сбросить();
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ПосчитатьСуммуСтрокиТЧ(СтрокаТабличнойЧасти,ЦенаПоТекСтроке,ВариантРасчетаНДС) Экспорт
	
	СтрокаТабличнойЧасти.Сумма = ЦенаПоТекСтроке * (СтрокаТабличнойЧасти.Количество);
	РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ВариантРасчетаНДС);
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, мВариантРасчета) Экспорт
	
	УчитыватьНДС = Истина;
	СуммаВключаетНДС = (мВариантРасчета = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле);
	
	СтрокаТабличнойЧасти.СуммаНДС = УчетНДС.РассчитатьСуммуНДС(СтрокаТабличнойЧасти.Сумма,
													   УчитыватьНДС, СуммаВключаетНДС,
													   УчетНДС.ПолучитьСтавкуНДС(СтрокаТабличнойЧасти.СтавкаНДС));
	
КонецПроцедуры

//+++АК LATV 2018.08.28 ИП-00019663
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ОтборПоЗамечаниям		= "Все";
	ПериодОтбора.Вариант	= ВариантСтандартногоПериода.Вчера;
	ОтветственныйБухгалтер	= глЗначениеПеременной("глТекущийПользователь");
	ЗаполнитьНаСервере();

КонецПроцедуры

&НаКлиенте
Процедура ПриходникиНомерНакладнойПриИзменении(Элемент)
	ТекНомер=Элементы.Приходники.ТекущиеДанные.НомерНакладной;
	ПриходникиНомерНакладнойПриИзмененииСервер();
КонецПроцедуры

&НаСервере
Процедура ПриходникиНомерНакладнойПриИзмененииСервер()
	Если ЗначениеЗаполнено(ТекПоступление) Тогда
		ОбъектПриходник=ТекПоступление.ПолучитьОбъект();
		ОбъектПриходник.НомерВходящегоДокумента=ТекНомер;
		ОбъектПриходник.Записать();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриходникиДатаНакладнойПриИзменении(Элемент)
	ТекДата=Элементы.Приходники.ТекущиеДанные.ДатаНакладной;
	ПриходникиДатаНакладнойПриИзмененииСервер();
КонецПроцедуры

&НаСервере
Процедура ПриходникиДатаНакладнойПриИзмененииСервер()
	Если ЗначениеЗаполнено(ТекПоступление) Тогда
		ОбъектПриходник=ТекПоступление.ПолучитьОбъект();
		ОбъектПриходник.ДатаВходящегоДокумента=ТекДата;
		ОбъектПриходник.Записать();
	КонецЕсли; 
КонецПроцедуры


&НаКлиенте
Процедура ПриходникиНомерСчетаФактурыПриИзменении(Элемент)
	ТекНомерСФ=Элементы.Приходники.ТекущиеДанные.НомерСчетаФактуры;
	ПриходникиНомерСчетаФактурыПриИзмененииСервер();

КонецПроцедуры

&НаСервере
Процедура ПриходникиНомерСчетаФактурыПриИзмененииСервер()
	Если ЗначениеЗаполнено(ТекПоступление) Тогда
		ОбъектПриходник=ТекПоступление.ПолучитьОбъект();
		ОбъектПриходник.НомерВходящегоСчетаФактуры=ТекНомерСФ;
		ОбъектПриходник.Записать();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриходникиДатаСчетаФактурыПриИзменении(Элемент)
	ТекДатаСФ=Элементы.Приходники.ТекущиеДанные.ДатаСчетаФактуры;
	ПриходникиДатаСчетаФактурыПриИзмененииСервер();

КонецПроцедуры

&НаСервере
Процедура ПриходникиДатаСчетаФактурыПриИзмененииСервер()
	Если ЗначениеЗаполнено(ТекПоступление) Тогда
		ОбъектПриходник=ТекПоступление.ПолучитьОбъект();
		ОбъектПриходник.ДатаВходящегоСчетаФактуры=ТекДатаСФ;
		ОбъектПриходник.Записать();
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриходникиПриАктивизацииСтроки(Элемент)
	Если Элементы.Приходники.ТекущиеДанные<>Неопределено Тогда
		ТекПоступление=Элементы.Приходники.ТекущиеДанные.Поступление;
		ТекПриходник=Элементы.Приходники.ТекущиеДанные.Ссылка;
		ТекНомер=Элементы.Приходники.ТекущиеДанные.НомерНакладной;
		ТекДата=Элементы.Приходники.ТекущиеДанные.ДатаНакладной;
		ТекНомерСФ=Элементы.Приходники.ТекущиеДанные.НомерСчетаФактуры;
		ТекДатаСФ=Элементы.Приходники.ТекущиеДанные.ДатаСчетаФактуры;
		ТекОрдер=Элементы.Приходники.ТекущиеДанные.Ссылка;
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоЗамечаниямПриИзменении(Элемент)
	
	Если ОтборПоЗамечаниям="Претензии" Тогда
		ОтборСтрок = Новый Структура;
		ОтборСтрок.Вставить("ФлПретензии", Истина);
		Элементы.Приходники.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрок);
	ИначеЕсли ОтборПоЗамечаниям="Расхождения" Тогда
		ОтборСтрок = Новый Структура;
		ОтборСтрок.Вставить("РасхожденияСПоставщиком", Истина);
		Элементы.Приходники.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрок);
	Иначе
		Элементы.Приходники.ОтборСтрок = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПериодОтбораПриИзменении(Элемент)
	ЗаполнитьНаСервере();
	Если ЗначениеЗаполнено(ТекПриходник) Тогда
	    МасСтр=Объект.Приходники.НайтиСтроки(Новый Структура("Ссылка",ТекПриходник));
		Если МасСтр.Количество()<>0 Тогда
		    Идентиф=МасСтр[0].ПолучитьИдентификатор();
			Элементы.Приходники.ТекущаяСтрока=Идентиф;
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПриходникиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ФлРедактирование=Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПриходникиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ФлРедактирование=Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодключитьОбработчикОжидания("ОбновитьТаблицу",60*15,Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТаблицу()
	Если Не ФлРедактирование Тогда
		  ЗаполнитьНаСервере();
		Если ЗначениеЗаполнено(ТекПриходник) Тогда
		    МасСтр=Объект.Приходники.НайтиСтроки(Новый Структура("Ссылка",ТекПриходник));
			Если МасСтр.Количество()<>0 Тогда
			    Идентиф=МасСтр[0].ПолучитьИдентификатор();
				Элементы.Приходники.ТекущаяСтрока=Идентиф;
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

//+++АК LATV 2018.08.27 ИП-00019663
&НаКлиенте
Процедура ОткрытьНакладную(Команда)

	Если Элементы.Приходники.ТекущиеДанные<>Неопределено Тогда
		Если ЗначениеЗаполнено(Элементы.Приходники.ТекущиеДанные.Поступление) Тогда
			ОткрытьЗначение(Элементы.Приходники.ТекущиеДанные.Поступление);
		Иначе
			Если ПериодОтбора.ДатаОкончания >= ТекущаяДата() Тогда
				ТекстВопроса = НСтр("ru = 'Указана Текущая дата, Вы хотите продолжить работу?'");
				Оповещение = Новый ОписаниеОповещения("ОткрытьНакладнуюЗавершение", ЭтаФорма);
				ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 30);
				Возврат;
			КонецЕсли;
			
			СоздатьНаСервере();
			ОткрытьЗначение(ТекПоступление);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

//+++АК LATV 2018.08.27 ИП-00019663
&НаКлиенте
Процедура ОткрытьНакладнуюЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	СоздатьНаСервере();
	ОткрытьЗначение(ТекПоступление);

КонецПроцедуры

&НаСервере
Процедура СоздатьНаСервере()
    ОбПоступление=Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
	
	ОбПоступление.Заполнить(ТекПриходник);
	ОбПоступление.Дата=?(ЗначениеЗаполнено(ТекДата),ТекДата,ТекПриходник.Дата);	
	ОбПоступление.УстановитьНовыйНомер(?(ЗначениеЗаполнено(ТекОрдер.Поставщик.ОсновнойДоговорКонтрагента.Организация.Префикс),
	ТекОрдер.Поставщик.ОсновнойДоговорКонтрагента.Организация.Префикс,""));
	
	ОбПоступление.НомерВходящегоДокумента=ТекНомер;
	ОбПоступление.ДатаВходящегоДокумента=ТекДата;
	ОбПоступление.НомерВходящегоСчетаФактуры=ТекНомерСФ;
	ОбПоступление.ДатаВходящегоСчетаФактуры=ТекДатаСФ;
	
	ОбПоступление.Дата=ТекОрдер.Дата;
	ОбПоступление.ДоговорКонтрагента=ТекОрдер.Поставщик.ОсновнойДоговорКонтрагента;
	ОбПоступление.ВидОперации=Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Покупка;
	ОбПоступление.СчетУчетаРасчетовСКонтрагентом=?(ТекОрдер.Склад=Справочники.Склады.НайтиПоНаименованию("Склад_Упаковка_Котляково"),ПланыСчетов.Финансовый.РасчетыСПоставщикамиУпаковки,ПланыСчетов.Финансовый.РасчетыСПоставщиками);
	ОбПоступление.Организация=ТекОрдер.Поставщик.ОсновнойДоговорКонтрагента.Организация;
	
	ОбПоступление.Ответственный=глЗначениеПеременной("глТекущийПользователь");
	
	Попытка                                                                
		//+++АК ILIK 2018.06.06 ИП-00018853
		//ОбПоступление.Записать(РежимЗаписиДокумента.Проведение);
		Если ОбПоступление.Проверитьзаполнение() Тогда
			ОбПоступление.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			ОбПоступление.Записать(РежимЗаписиДокумента.Запись);
		КонецЕсли;
		//---АК ILIK
	Исключение
		Сообщить(ОписаниеОшибки());
		ОбПоступление.Записать(РежимЗаписиДокумента.Запись);
	КонецПопытки;
	Сообщить("Создан документ "+ОбПоступление.Ссылка);
	ТекПоступление=ОбПоступление.Ссылка;
	ЗаполнитьНаСервере();
КонецПроцедуры

//+++АК LATV 2018.08.27 ИП-00019663
&НаКлиенте
Процедура СформироватьПоступления(Команда)

	Если ПериодОтбора.ДатаОкончания >= ТекущаяДата() Тогда
		ТекстВопроса = НСтр("ru = 'Указана Текущая дата, Вы хотите продолжить работу?'");
		Оповещение = Новый ОписаниеОповещения("СформироватьПоступленияЗавершение", ЭтаФорма);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 30);
		Возврат;
	КонецЕсли;
	
	СформироватьПоступленияСервер();

КонецПроцедуры

//+++АК LATV 2018.08.27 ИП-00019663
&НаКлиенте
Процедура СформироватьПоступленияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт

	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	СформироватьПоступленияСервер();

КонецПроцедуры

//+++АК LATV 2018.09.01 ИП-00019721
&НаСервере
Процедура СформироватьПоступленияСервер()
	//+++АК ILIK 2018.09.26 ИП-00019587
	ТаблицаНепроведенныхДокументов = ИнициализироватьТаблицуНепроведенныхДокументов();
	//---АК ILIK

	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ПриходныйОрдерСклад.Ссылка,
		|	ПриходныйОрдерСклад.ВерсияДанных,
		|	ПриходныйОрдерСклад.ПометкаУдаления,
		|	ПриходныйОрдерСклад.Номер,
		|	ПриходныйОрдерСклад.Дата,
		|	ПриходныйОрдерСклад.Проведен,
		|	ПриходныйОрдерСклад.ВидОперации,
		|	ПриходныйОрдерСклад.Организация,
		|	ПриходныйОрдерСклад.Склад,
		|	ПриходныйОрдерСклад.НомерДокументаПоставщика,
		|	ПриходныйОрдерСклад.ДатаДокументаПоставщика,
		|	ПриходныйОрдерСклад.Автор,
		|	ПриходныйОрдерСклад.Комментарий,
		|	ПриходныйОрдерСклад.Поставщик,
		|	ПриходныйОрдерСклад.ВремяЗаездаМашины,
		|	ПриходныйОрдерСклад.Кладовщик,
		|	ПриходныйОрдерСклад.ВыполнятьДвиженияДатойДокумента,
		|	ПриходныйОрдерСклад.Основание,
		|	ПриходныйОрдерСклад.Автомобиль,
		|	ПриходныйОрдерСклад.ДатаВремяЗаездаМашины,
		|	ПриходныйОрдерСклад.КоличествоПаллет,
		|	ПриходныйОрдерСклад.ВремяОтпускаТовараПроизводителем,
		|	ПриходныйОрдерСклад.ДанныеВетСвидетельствСерия,
		|	ПриходныйОрдерСклад.ОжидаемыйПриход,
		|	ПриходныйОрдерСклад.ПриемкаТерминаломЗакончена,
		|	ПриходныйОрдерСклад.ДанныеВетСвидетельствНомер,
		|	ПриходныйОрдерСклад.ДанныеВетСвидетельствДата,
		|	ПриходныйОрдерСклад.ПровереноТехнологом,
		|	ПриходныйОрдерСклад.РасхожденияСПоставщиком,
		|	ПриходныйОрдерСклад.ПоставщикОповещен,
		|	ПриходныйОрдерСклад.ЗамечанияПоРаспознаванию,
		|	ПриходныйОрдерСклад.ЕстьЗамечанияПоРаспознаванию,
		|	ПриходныйОрдерСклад.ДатаПрямойПоставкиНаМагазины,
		|	ПриходныйОрдерСклад.Представление,
		|	ПриходныйОрдерСклад.МоментВремени,
		|	ПриходныйОрдерСклад.Поставщик.ОсновнойДоговорКонтрагента КАК ОсновнойДоговорКонтрагента
		|ПОМЕСТИТЬ втОрдера
		|ИЗ
		|	Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
		|ГДЕ
		|	ПриходныйОрдерСклад.Ссылка В(&Ссылка)
		|	И ПриходныйОрдерСклад.Проведен
		|	И НЕ ПриходныйОрдерСклад.Отменен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДоговорыКонтрагентов.ДоговорКонтрагента КАК Договор,
		|	втОрдера.Ссылка КАК Док
		|ПОМЕСТИТЬ втДоговоры
		|ИЗ
		|	втОрдера КАК втОрдера
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеДоговораКонтрагентов КАК ДоговорыКонтрагентов
		|		ПО втОрдера.Поставщик = ДоговорыКонтрагентов.Контрагент
		|			И втОрдера.Организация = ДоговорыКонтрагентов.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втДоговоры.Договор,
		|	втОрдера.Ссылка,
		|	втОрдера.ВерсияДанных,
		|	втОрдера.ПометкаУдаления,
		|	втОрдера.Номер,
		|	втОрдера.Дата,
		|	втОрдера.Проведен,
		|	втОрдера.ВидОперации,
		|	втОрдера.Организация,
		|	втОрдера.Склад,
		|	втОрдера.НомерДокументаПоставщика,
		|	втОрдера.ДатаДокументаПоставщика,
		|	втОрдера.Автор,
		|	втОрдера.Комментарий,
		|	втОрдера.Поставщик,
		|	втОрдера.ВремяЗаездаМашины,
		|	втОрдера.Кладовщик,
		|	втОрдера.ВыполнятьДвиженияДатойДокумента,
		|	втОрдера.Основание,
		|	втОрдера.Автомобиль,
		|	втОрдера.ДатаВремяЗаездаМашины,
		|	втОрдера.КоличествоПаллет,
		|	втОрдера.ВремяОтпускаТовараПроизводителем,
		|	втОрдера.ДанныеВетСвидетельствСерия,
		|	втОрдера.ОжидаемыйПриход,
		|	втОрдера.ПриемкаТерминаломЗакончена,
		|	втОрдера.ДанныеВетСвидетельствНомер,
		|	втОрдера.ДанныеВетСвидетельствДата,
		|	втОрдера.ПровереноТехнологом,
		|	втОрдера.РасхожденияСПоставщиком,
		|	втОрдера.ПоставщикОповещен,
		|	втОрдера.ЗамечанияПоРаспознаванию,
		|	втОрдера.ЕстьЗамечанияПоРаспознаванию,
		|	втОрдера.ДатаПрямойПоставкиНаМагазины,
		|	втОрдера.Представление,
		|	втОрдера.МоментВремени,
		|	ЕСТЬNULL(втДоговоры.Договор, втОрдера.ОсновнойДоговорКонтрагента) КАК ДоговорКонтрагента
		|ИЗ
		|	втОрдера КАК втОрдера
		|		ЛЕВОЕ СОЕДИНЕНИЕ втДоговоры КАК втДоговоры
		|		ПО втОрдера.Ссылка = втДоговоры.Док";
	
	ПриходныеОрдера = Объект.ПриходникиБезГруппировки.Выгрузить().ВыгрузитьКолонку("Ссылка");
	Запрос.УстановитьПараметр("Ссылка", ПриходныеОрдера);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	//
	СклКотляково					= Справочники.Склады.НайтиПоНаименованию("Склад_Упаковка_Котляково");
	СчРасчетыСПоставщикамиУпаковки	= ПланыСчетов.Финансовый.РасчетыСПоставщикамиУпаковки;
	СчРасчетыСПоставщиками			= ПланыСчетов.Финансовый.РасчетыСПоставщиками;
	счПасчетыСПоставщикомПрочее		= ПланыСчетов.Финансовый.ПрочаяЗадолженность;
	СтатьяДДС_ХозТовары				= Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("139112");
	СтатьяДР_ХозТовары				= Справочники.СтатьиДоходовРасходов.НайтиПоКоду("39112");
	СтатьяДДС						= Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("120110");
	
	ЗапросМатериал = Новый Запрос;
	ЗапросМатериал.Текст =
		"ВЫБРАТЬ
		|	ПриходныйОрдерСкладТовары.Ссылка
		|ИЗ
		|	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
		|ГДЕ
		|	ПриходныйОрдерСкладТовары.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Материал)
		//+++АК ILIK 2018.10.11 ИП-00019835
		|	И ПриходныйОрдерСкладТовары.Ссылка В(&Ссылка)
		//---АК ILIK
		|	И ПриходныйОрдерСкладТовары.Ссылка.Проведен";
	
	ЗапросМатериал.УстановитьПараметр("Ссылка", ПриходныеОрдера);
	ПриходникиСМатериалами = ЗапросМатериал.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Для Каждого Стр Из Объект.ПриходникиБезГруппировки Цикл
		Если Не ВыборкаДетальныеЗаписи.НайтиСледующий(Новый Структура("Ссылка", Стр.Ссылка)) Тогда
			ВыборкаДетальныеЗаписи.Сбросить();
			Продолжить;
		КонецЕсли;
		
		флЕстьМатериалы = Ложь;
		Если (ВыборкаДетальныеЗаписи.ВидОперации = Перечисления.ВидыОперацийПриходСкладскойУчет.ОтПоставщика 
			Или ВыборкаДетальныеЗаписи.ВидОперации = Перечисления.ВидыОперацийПриходСкладскойУчет.ПоступлениеУпаковкиОтПоставщика) 
			И Не ВыборкаДетальныеЗаписи.ПометкаУдаления Тогда
			Если ПриходникиСМатериалами.Найти(Стр.Ссылка) <> Неопределено Тогда
				флЕстьМатериалы = Истина;
			КонецЕсли;
		КонецЕсли;
		
		ЕстьВФорме = Объект.Приходники.НайтиСтроки(Новый Структура("Ссылка", Стр.Ссылка));
		СтрокаФормы = ?(ЕстьВФорме.Количество() > 0, ЕстьВФорме[0], Неопределено);
		Если ЗначениеЗаполнено(Стр.Поступление) И флЕстьМатериалы И СтрокаФормы <> Неопределено Тогда
			ОбПоступление = Стр.Поступление.ПолучитьОбъект();
			
			флИзменен = Ложь;
			НайдПО = ОбПоступление.ПриходныеОрдера.НайтиСтроки(Новый Структура("ПриходныйОрдер", Стр.Ссылка));
			Если НайдПО.Количество() > 0 Тогда
				Для Каждого СтрокаТЧ Из ОбПоступление.Товары Цикл
					НайдСтроки = ОбПоступление.Услуги.НайтиСтроки(Новый Структура("Номенклатура", СтрокаТЧ.Номенклатура));
					Если НайдСтроки.Количество() = 1 Тогда
						НайдСтрока = НайдСтроки[0];
						Если НайдСтрока.Количество = СтрокаТЧ.Количество Тогда
							ОбПоступление.Услуги.Удалить(НайдСтрока);
							флИзменен = Истина;
						Иначе
							Сообщить("В " + СокрЛП(ОбПоступление) + " материал " + СокрЛП(СтрокаТЧ.Номенклатура) + " " + Символы.ПС + Символы.Таб + 
							"дублируется в табличных частях ""Товары"" и ""Услуги/Материалы"", но количество не совпадает. Необходима проверка!");
						КонецЕсли;
					ИначеЕсли НайдСтроки.Количество() > 1 Тогда
						Сообщить("В " + СокрЛП(ОбПоступление) + " материал " + СокрЛП(СтрокаТЧ.Номенклатура) + " " + Символы.ПС + Символы.Таб + 
						"дублируется в табличных частях ""Товары"" и ""Услуги/Материалы"", но в ""Услуги/Материалы"" несколько строк. Необходима проверка!");
					КонецЕсли;
				КонецЦикла;
				Если не ЗначениеЗаполнено(ОбПоступление.СтатьяДДС) Тогда
					ОбПоступление.СтатьяДДС = СтатьяДДС_ХозТовары;
					флИзменен = Истина;
				КонецЕсли;
				Если не ЗначениеЗаполнено(ОбПоступление.СтатьяЗатрат) Тогда
					ОбПоступление.СтатьяЗатрат = СтатьяДР_ХозТовары;
					флИзменен = Истина;
				КонецЕсли;
				Если флИзменен Тогда
					Попытка
						Если ОбПоступление.Проверитьзаполнение() Тогда
							ОбПоступление.Записать(РежимЗаписиДокумента.Проведение);
						Иначе
							ОбПоступление.Записать(РежимЗаписиДокумента.Запись);
						КонецЕсли;
					Исключение
						//+++АК ILIK 2018.09.26 ИП-00019587
						//Сообщить(ОписаниеОшибки());
						//---АК ILIK 
						ОбПоступление.Записать(РежимЗаписиДокумента.Запись);
						//+++АК ILIK 2018.09.26 ИП-00019587
						//Сообщить("Не удалось провести "+Строка(ОбПоступление.Ссылка)+" контрагента "+Строка(ОбПоступление.Контрагент));
						ДобавитьНепроведенныйДокумент(ТаблицаНепроведенныхДокументов, ОбПоступление.Ссылка);
						//---АК ILIK
					КонецПопытки;
					Сообщить("Изменен документ "+ОбПоступление.Ссылка);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Стр.Поступление)
		   И (ВыборкаДетальныеЗаписи.ВидОперации=Перечисления.ВидыОперацийПриходСкладскойУчет.ОтПоставщика
			или ВыборкаДетальныеЗаписи.ВидОперации=Перечисления.ВидыОперацийПриходСкладскойУчет.ПоступлениеУпаковкиОтПоставщика) И Не ВыборкаДетальныеЗаписи.ПометкаУдаления Тогда
			ФлСоздатьДок=Истина;
			Док=Неопределено;
			
			
			ЗапросПТУ = Новый Запрос;
			ЗапросПТУ.Текст = "ВЫБРАТЬ
			                  |	ПоступлениеТоваровУслуг.Ссылка
			                  |ИЗ
			                  |	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
			                  |ГДЕ
			                  |	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслуг.Дата, ДЕНЬ) = &Дата
			                  |	И ПоступлениеТоваровУслуг.Контрагент = &Контрагент
			                  |	И ПоступлениеТоваровУслуг.ДатаВходящегоДокумента = &ДатаВходящегоДокумента
			                  |	И ПоступлениеТоваровУслуг.ДатаВходящегоСчетаФактуры = &ДатаВходящегоСчетаФактуры
			                  |	И ПоступлениеТоваровУслуг.НомерВходящегоДокумента = &НомерВходящегоДокумента
			                  |	И ПоступлениеТоваровУслуг.НомерВходящегоСчетаФактуры = &НомерВходящегоСчетаФактуры
			                  //|	И ПоступлениеТоваровУслуг.Проведен = ИСТИНА
							  |	";
			ЗапросПТУ.УстановитьПараметр("Дата", НачалоДня(ВыборкаДетальныеЗаписи.Дата));
			ЗапросПТУ.УстановитьПараметр("Контрагент", ВыборкаДетальныеЗаписи.Поставщик);
			ЗапросПТУ.УстановитьПараметр("ДатаВходящегоДокумента", Стр.ДатаНакладной);
			ЗапросПТУ.УстановитьПараметр("ДатаВходящегоСчетаФактуры", Стр.ДатаСчетаФактуры);
			ЗапросПТУ.УстановитьПараметр("НомерВходящегоДокумента", Стр.НомерНакладной);
			ЗапросПТУ.УстановитьПараметр("НомерВходящегоСчетаФактуры", Стр.НомерСчетаФактуры);
			ВыборкаПТУ = ЗапросПТУ.Выполнить().Выбрать();
			Если ВыборкаПТУ.Следующий() ТОгда
				ФлСоздатьДок=Ложь;
				Док = ВыборкаПТУ.Ссылка;
				СтрокаСОрдером = ВыборкаПТУ.Ссылка.Приходныеордера.Найти(Стр.Ссылка,"ПриходныйОрдер");
				Если ЗначениеЗаполнено(СтрокаСОрдером) ТОгда
					Продолжить;
				КонецЕСли;
			Конецесли;
			
			Если ФлСоздатьДок Тогда
				
				ОбПоступление=Документы.ПоступлениеТоваровУслуг.СоздатьДокумент();
				ОбПоступление.Заполнить(Стр.Ссылка);
				ЗаполнитьТоварыПоПриходномуОрдеру(Стр.Ссылка, ОбПоступление);
				
				ОбПоступление.Дата = ВыборкаДетальныеЗаписи.Дата;
				ОбПоступление.УстановитьНовыйНомер(?(ЗначениеЗаполнено(Стр.ЮридическоеЛицо.Префикс), Стр.ЮридическоеЛицо.Префикс,""));
				
				ОбПоступление.ВидОперации			= Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Покупка;
				ОбПоступление.ДоговорКонтрагента	=ВыборкаДетальныеЗаписи.ДоговорКонтрагента;
				
				Если ВыборкаДетальныеЗаписи.Поставщик.Наименование = "ЛАВА ООО" Тогда
					ОбПоступление.СчетУчетаРасчетовСКонтрагентом	= счПасчетыСПоставщикомПрочее;
					ОбПоступление.СтатьяДДС							= СтатьяДДС;
					
				ИначеЕсли флЕстьМатериалы Тогда
					Если ЗначениеЗаполнено(ОбПоступление.ДоговорКонтрагента)
					   И ЗначениеЗаполнено(ОбПоступление.ДоговорКонтрагента.СчетУчетаРасчетовСКонтрагентом) Тогда
						ОбПоступление.СчетУчетаРасчетовСКонтрагентом = ОбПоступление.ДоговорКонтрагента.СчетУчетаРасчетовСКонтрагентом;
					Иначе
						ОбПоступление.СчетУчетаРасчетовСКонтрагентом = СчРасчетыСПоставщиками;
					КонецЕсли;
					ОбПоступление.СтатьяДДС		= СтатьяДДС_ХозТовары;
					ОбПоступление.СтатьяЗатрат	= СтатьяДР_ХозТовары;
				Иначе
					ОбПоступление.СчетУчетаРасчетовСКонтрагентом = ?(ВыборкаДетальныеЗаписи.Склад = СклКотляково, СчРасчетыСПоставщикамиУпаковки, СчРасчетыСПоставщиками);
				КонецЕСли;
				
				ОбПоступление.Организация	= ВыборкаДетальныеЗаписи.Организация;
				ОбПоступление.Комментарий	= "#Авт. из обработки АРМ прих ордера. "+Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy")+" "+Стр.Ссылка;
				ОбПоступление.Ответственный	= глЗначениеПеременной("глТекущийПользователь");
				
				ОбПоступление.НомерВходящегоДокумента		= ?(СтрокаФормы = Неопределено, Стр.НомерНакладной, СтрокаФормы.НомерНакладной);
				ОбПоступление.ДатаВходящегоДокумента		= ?(СтрокаФормы = Неопределено, Стр.ДатаНакладной, СтрокаФормы.ДатаНакладной);
				ОбПоступление.НомерВходящегоСчетаФактуры	= ?(СтрокаФормы = Неопределено, Стр.НомерСчетаФактуры, СтрокаФормы.НомерСчетаФактуры);
				ОбПоступление.ДатаВходящегоСчетаФактуры		= ?(СтрокаФормы = Неопределено, Стр.ДатаСчетаФактуры, СтрокаФормы.ДатаСчетаФактуры);
				
			Иначе
				ОбПоступление = Док.ПолучитьОбъект();
				СтрПО = ОбПоступление.Приходныеордера.Добавить();
				СтрПО.ПриходныйОрдер = Стр.Ссылка;
				ЗаполнитьТоварыПоПриходномуОрдеру(Стр.Ссылка, ОбПоступление);
			КонецЕсли;
			
			флПроверкаПройдена = Истина;
			Для каждого стр1 из ОбПоступление.Товары Цикл
				Если стр1.СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка() Тогда
					Сообщить("В документе ПТУ №" + СокрЛП(ОбПоступление.Номер) + " от " + Формат(ОбПоступление.Дата, "ДФ=dd.MM.yyyy") +
						" в табличной части ""Товары"" в строке " + СокрЛП((ОбПоступление.Товары.Индекс(стр1) + 1)) + " не указана ставка НДС!");
					флПроверкаПройдена = Ложь;
				КонецЕсли;
			КонецЦикла;
			Для каждого стр1 из ОбПоступление.Услуги Цикл
				Если стр1.СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка() Тогда
					Сообщить("В документе ПТУ №" + СокрЛП(ОбПоступление.Номер) + " от " + Формат(ОбПоступление.Дата, "ДФ=dd.MM.yyyy") +
						" в табличной части ""Услуги"" в строке " + СокрЛП((ОбПоступление.Услуги.Индекс(стр1) + 1)) + " не указана ставка НДС!");
					флПроверкаПройдена = Ложь;
				КонецЕсли;
			КонецЦикла;
			Для каждого стр1 из ОбПоступление.Оборудование Цикл
				Если стр1.СтавкаНДС = Перечисления.СтавкиНДС.ПустаяСсылка() Тогда
					Сообщить("В документе ПТУ №" + СокрЛП(ОбПоступление.Номер) + " от " + Формат(ОбПоступление.Дата, "ДФ=dd.MM.yyyy") +
						" в табличной части ""Оборудование"" в строке " + СокрЛП((ОбПоступление.Оборудование.Индекс(стр1) + 1)) + " не указана ставка НДС!");
					флПроверкаПройдена = Ложь;
				КонецЕсли;
			КонецЦикла;
			Если не флПроверкаПройдена Тогда
				ОбПоступление.Записать(РежимЗаписиДокумента.Запись);
				Сообщить("Не удалось провести "+Строка(ОбПоступление.Ссылка)+" контрагента "+Строка(ОбПоступление.Контрагент));
				
				ТекКонтрагент = ОбПоступление.Контрагент;
				Если ЗначениеЗаполнено(ТекКонтрагент) Тогда
					//+++АК ILIK 2018.09.21 ИП-00019757
					//ТекМенеджер = ТекКонтрагент.ОсновнойМенеджерПокупателя;
					ТекМенеджер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекКонтрагент, "ОсновнойБухгалтерПокупателя");
					//---АК ILIK
					Если ЗначениеЗаполнено(ТекМенеджер) Тогда
						Запрос = Новый Запрос;
						Запрос.УстановитьПараметр("ОбъектЗадачи", ОбПоступление.Ссылка);
						Запрос.УстановитьПараметр("Исполнитель"	, ТекМенеджер);
						
						Запрос.Текст =
						"ВЫБРАТЬ
						|	ЗадачаИсполнителя.Ссылка
						|ИЗ
						|	Задача.ЗадачаИсполнителя КАК ЗадачаИсполнителя
						|ГДЕ
						//+++АК ILIK 2018.10.18 ИП-00019757.02
						//|	НЕ ЗадачаИсполнителя.ПометкаУдаления
						|	ЗадачаИсполнителя.ВидЗадачи = ЗНАЧЕНИЕ(Справочник.ВидыЗадачПользователей.НеПроведенПТУ)
						|	И НЕ ЗадачаИсполнителя.Выполнена
						//---АК ILIK
						|	И ЗадачаИсполнителя.ОбъектЗадачи = &ОбъектЗадачи
						|	И ЗадачаИсполнителя.Исполнитель = &Исполнитель";
						
						Результат = Запрос.Выполнить();
						Если Результат.Пустой() Тогда	
							Попытка
								обЗадача = Задачи.ЗадачаИсполнителя.СоздатьЗадачу();
								обЗадача.Дата 			= ТекущаяДата();
								обЗадача.ВидЗадачи 		= Справочники.ВидыЗадачПользователей.НеПроведенПТУ;
								обЗадача.ОбъектЗадачи 	= ОбПоступление.Ссылка;
								обЗадача.Ответственный 	= ПараметрыСеанса.ТекущийПользователь;	
								обЗадача.Исполнитель 	= ТекМенеджер;	
								обЗадача.Организация 	= ОбПоступление.Организация;
								обЗадача.Оповещение 	= Истина;
								обЗадача.СрокИсполнения = НачалоДня(ТекущаяДата());
								обЗадача.СрокОповещения = НачалоДня(ТекущаяДата());
								обЗадача.Наименование 	= "В списке документов ПТУ имеются документы по Вашим контрагентам, не проведенные по причине - не указана ставка НДС";
								обЗадача.Записать();
							Исключение
							КонецПопытки;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				ВыборкаДетальныеЗаписи.Сбросить();
				Продолжить;
			КонецЕсли;
			
			Попытка
				Если ОбПоступление.Проверитьзаполнение() Тогда
					ОбПоступление.Записать(РежимЗаписиДокумента.Проведение);
				Иначе
					ОбПоступление.Записать(РежимЗаписиДокумента.Запись);
				КонецЕсли;
			Исключение
				//+++АК ILIK 2018.09.26 ИП-00019587
				//Сообщить(ОписаниеОшибки());
				//---АК ILIK
				ОбПоступление.Записать(РежимЗаписиДокумента.Запись);
				//+++АК ILIK 2018.09.26 ИП-00019587
				//Сообщить("Не удалось провести "+Строка(ОбПоступление.Ссылка)+" контрагента "+Строка(ОбПоступление.Контрагент));
				ДобавитьНепроведенныйДокумент(ТаблицаНепроведенныхДокументов, ОбПоступление.Ссылка);
				//---АК ILIK
			КонецПопытки;
			
			Сообщить("Создан документ "+ОбПоступление.Ссылка);
			
			//Рассылка оповещения факторинговой компании 
			Если ФлСоздатьДок
			   И ОбПоступление.Проведен
			   И ЗначениеЗаполнено(ОбПоступление.ДоговорКонтрагента) Тогда
				ДанныеДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОбПоступление.ДоговорКонтрагента, "РасчетыЧерезФК, ФакторинговаяКомпания, ФакторинговаяКомпания.ИНН");
				Если ДанныеДоговора.РасчетыЧерезФК
				   И ЗначениеЗаполнено(ДанныеДоговора.ФакторинговаяКомпания) Тогда
				  // И ДанныеДоговора.ФакторинговаяКомпанияИНН = "7725314818" Тогда //ОТКРЫТИЕ ФАКТОРИНГ ООО
					ОтправитьПисьмоПоПочтеФакторинг(ДанныеДоговора.ФакторинговаяКомпания, ОбПоступление.Ссылка);
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		ВыборкаДетальныеЗаписи.Сбросить();
		
	КонецЦикла;
	
	//+++АК ILIK 2018.09.26 ИП-00019587
	ПровестиНепроведенныеДокументы(ТаблицаНепроведенныхДокументов);
	//---АК ILIK
	
	ЗаполнитьНаСервере();

КонецПроцедуры

//+++АК KIRN 2018.05.11 ИП-00018571 
&НаСервере
Процедура ЗаполнитьТоварыПоПриходномуОрдеру(СсылкаНаДокумент, ОбПоступление)
	
	ОбПоступление.Товары.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОрдеров", ОбПоступление.ПриходныеОрдера.ВыгрузитьКолонку("ПриходныйОрдер"));
	Запрос.УстановитьПараметр("МаксДата", СсылкаНаДокумент.Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА СоставКомплектаСрезПоследних.Составляющая ЕСТЬ NULL 
	|			ТОГДА ПриходныйОрдерСкладТовары.Номенклатура
	|		ИНАЧЕ СоставКомплектаСрезПоследних.Составляющая.Владелец
	|	КОНЕЦ КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА СоставКомплектаСрезПоследних.Составляющая ЕСТЬ NULL 
	|			ТОГДА ПриходныйОрдерСкладТовары.ЕдиницаИзмерения
	|		ИНАЧЕ СоставКомплектаСрезПоследних.Составляющая.Владелец.ЕдиницаХраненияОстатков
	|	КОНЕЦ КАК ЕдиницаИзмерения,
	|	СУММА(ВЫБОР
	|			КОГДА СоставКомплектаСрезПоследних.Составляющая ЕСТЬ NULL 
	|				ТОГДА ПриходныйОрдерСкладТовары.Количество
	|			ИНАЧЕ ПриходныйОрдерСкладТовары.Количество * СоставКомплектаСрезПоследних.Количество
	|		КОНЕЦ) КАК Количество,
	|	СУММА(ВЫБОР
	|			КОГДА СоставКомплектаСрезПоследних.Составляющая ЕСТЬ NULL 
	|				ТОГДА ПриходныйОрдерСкладТовары.Количество
	|			ИНАЧЕ ПриходныйОрдерСкладТовары.Количество * СоставКомплектаСрезПоследних.Количество
	|		КОНЕЦ) КАК ПоПриходнымОрдерам,
	|	ВЫБОР
	|		КОГДА СоставКомплектаСрезПоследних.Составляющая ЕСТЬ NULL 
	|			ТОГДА ПриходныйОрдерСкладТовары.ЕдиницаИзмерения.Коэффициент
	|		ИНАЧЕ СоставКомплектаСрезПоследних.Составляющая.Владелец.ЕдиницаХраненияОстатков.Коэффициент
	|	КОНЕЦ КАК Коэффициент
	|ИЗ
	|	Документ.ПриходныйОрдерСклад.Товары КАК ПриходныйОрдерСкладТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставКомплекта.СрезПоследних(&МаксДата, ) КАК СоставКомплектаСрезПоследних
	|		ПО ПриходныйОрдерСкладТовары.Характеристика = СоставКомплектаСрезПоследних.Характеристика
	|			И (ПриходныйОрдерСкладТовары.Характеристика.НеРазбиватьВБухДокументахНаСоставляющие = ЛОЖЬ)
	|ГДЕ
	|	ПриходныйОрдерСкладТовары.Ссылка В (&МассивОрдеров)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА СоставКомплектаСрезПоследних.Составляющая ЕСТЬ NULL 
	|			ТОГДА ПриходныйОрдерСкладТовары.Номенклатура
	|		ИНАЧЕ СоставКомплектаСрезПоследних.Составляющая.Владелец
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СоставКомплектаСрезПоследних.Составляющая ЕСТЬ NULL 
	|			ТОГДА ПриходныйОрдерСкладТовары.ЕдиницаИзмерения
	|		ИНАЧЕ СоставКомплектаСрезПоследних.Составляющая.Владелец.ЕдиницаХраненияОстатков
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СоставКомплектаСрезПоследних.Составляющая ЕСТЬ NULL 
	|			ТОГДА ПриходныйОрдерСкладТовары.ЕдиницаИзмерения.Коэффициент
	|		ИНАЧЕ СоставКомплектаСрезПоследних.Составляющая.Владелец.ЕдиницаХраненияОстатков.Коэффициент
	|	КОНЕЦ";
	
	ТЗ =Запрос.Выполнить().Выгрузить();
	
	Для каждого СтрТЗ Из ТЗ Цикл
	   	НовСтр=ОбПоступление.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,СтрТЗ);
	КонецЦикла; 
	//ОбПоступление.Товары.Загрузить();
	
	//+++АК Susk (Суслин К.В.) 2018.07.30 ИП-00019275		 
	//ТабСчетаУчета = ОбщегоНазначенияКлиентСервер.ПолучитьТаблицуСчетовУчетаНоменклатур(ОбПоступление.Товары.ВыгрузитьКолонку("Номенклатура"), СсылкаНаДокумент.Дата);
	
	МассивНоменклатуры = ОбПоступление.Товары.ВыгрузитьКолонку("Номенклатура");	
	СоответствиеНоменклатурыИСчета = Справочники.Номенклатура.ПолучитьСчетаУчетаОбъектов(МассивНоменклатуры, СсылкаНаДокумент.Дата);
	//---АК Susk (Суслин К.В.) 	
	
	Для Каждого СтрокаТЧ Из ОбПоступление.Товары Цикл
		
		Если ЗначениеЗаполнено(СтрокаТЧ.Номенклатура) Тогда
			
			//+++АК Susk (Суслин К.В.) 2018.07.30 ИП-00019275
			//следующий закоментированный код убрать в сентябре 2018, как откатаем универсальное получение счетов учета.
		
			СтруктураСчетов = СоответствиеНоменклатурыИСчета.Получить(СтрокаТЧ.Номенклатура);			
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, СтруктураСчетов);
			
			#Область ЗакомментКод_ЗаполнитьТоварыПоПриходномуОрдеру
			//Если СтрокаТЧ.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Товар
			//	ИЛИ СтрокаТЧ.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Материал Тогда
			//	
			//	СчетУчета = ПланыСчетов.Финансовый.Товары;
			//	
			//ИначеЕсли СтрокаТЧ.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Оборудование Тогда
			//	
			//	СчетУчета = ПланыСчетов.Финансовый.КапитальныеВложения;
			//	
			//КонецЕсли;
			//
			//Если СтрокаТЧ.Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Упаковка Тогда
			//	СчетУчета = ПланыСчетов.Финансовый.МатералыДляВыпуска;
			//КонецЕсли;
			//
			//СтрокаСчетУчета = ТабСчетаУчета.Найти(СтрокаТЧ.Номенклатура, "Номенклатура");
			//Если СтрокаСчетУчета <> Неопределено
			//	И ЗначениеЗаполнено(СтрокаСчетУчета.СчетУчета) Тогда
			//	СчетУчета = СтрокаСчетУчета.СчетУчета;
			//КонецЕсли;
			//
			////+++АК sils 22.06.2018 ИП-00019041
			//Если СтрокаТЧ.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Материал Тогда
			//	СчетаЗатрат = Справочники.Номенклатура.ПолучитьСчетаУчета(СтрокаТЧ.Номенклатура);
			//	СчетУчета = ?(ЗначениеЗаполнено(СчетаЗатрат.СчетУчета), СчетаЗатрат.СчетУчета, СчетУчета);
			//КонецЕсли;
			////---АК
			//СтрокаТЧ.СчетУчета = ?(Не ЗначениеЗаполнено(СчетУчета), ПланыСчетов.Финансовый.Товары, СчетУчета);
			#КонецОбласти
			
			//---АК Susk (Суслин К.В.) 
			
			Если СтрокаТЧ.Номенклатура.ТипТовара = Перечисления.ТипыТоваров.Сырье Тогда
				СтрокаТЧ.СтатьяТовародвижения	= Справочники.СтатьиТовародвижения.ПоступлениеСырьяОтПоставщика;
			Иначе
				СтрокаТЧ.СтатьяТовародвижения	= Справочники.СтатьиТовародвижения.ПоступлениеОтПоставщика;
			КонецЕсли;	
			
			Если ОбПоступление.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.БезНДС Тогда
				СтрокаТЧ.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС;
			Иначе
				СтрСтавкиПоХарактеристике = ОбПоступление.СтруктураСтавкиНДСИзХарактеристики(СтрокаТЧ.Номенклатура);
		
				Если СтрСтавкиПоХарактеристике.ВыборСтавкиНДСВручную Тогда
					
				ИначеЕсли ЗначениеЗаполнено(СтрСтавкиПоХарактеристике.СтавкаНДС) Тогда
					СтрокаТЧ.СтавкаНДС = СтрСтавкиПоХарактеристике.СтавкаНДС;
				Иначе
					СтрокаТЧ.СтавкаНДС = СтрокаТЧ.Номенклатура.СтавкаНДС;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
		
		ОбновитьЦенуВСтрокеТЧ1(СтрокаТЧ,ОбПоступление);
		
	КонецЦикла;
	
	ПосчитатьСуммуТабличнойЧасти(ОбПоступление);
	
КонецПроцедуры
//---АК KIRN 

&НаСервере
Процедура ОбновитьЦенуВСтрокеТЧ1(СтрокаТЧ,ОбПоступление) Экспорт
	
	//Отбор = Новый Структура;
	//Отбор.Вставить("Номенклатура"		, СтрокаТЧ.Номенклатура);
	//Отбор.Вставить("ЕдиницаИзмерения"	, СтрокаТЧ.ЕдиницаИзмерения);
	//Отбор.Вставить("Поставщик"			, Контрагент);
	//
	//СтруктураЦены = РегистрыСведений.ЦеныПоставщиков.ПолучитьПоследнее(?(Дата = Дата(1, 1, 1), НачалоДня(ТекущаяДата()), Дата), Отбор);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура"	, СтрокаТЧ.Номенклатура);
	Запрос.УстановитьПараметр("Поставщик"		, ОбПоступление.Контрагент);
	Запрос.УстановитьПараметр("ДатаСреза"		, ?(ЗначениеЗаполнено(ОбПоступление.Дата), ОбПоступление.Дата, НачалоДня(ТекущаяДата())));
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЦеныПоставщиковСрезПоследних.Цена,
	|	0 КАК ЦенаБезНДС
	|ИЗ
	|	РегистрСведений.ЦеныПоставщиков.СрезПоследних(
	|			&ДатаСреза,
	|			Номенклатура = &Номенклатура
	|				И Поставщик = &Поставщик) КАК ЦеныПоставщиковСрезПоследних
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЦеныПоставщиковСрезПоследних.Период УБЫВ";
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	СтруктураЦены = РезультатЗапроса.Выбрать();
	СтруктураЦены.Следующий();
	
	//
	Если ОбПоступление.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле Тогда
		СтрокаТЧ.Цена = СтруктураЦены.Цена;
	Иначе		
		
		Если СтруктураЦены.ЦенаБезНДС = 0 Тогда
			
			ЦенаБезНДС = (СтруктураЦены.Цена / (100 + УчетНДС.ПолучитьСтавкуНДС(СтрокаТЧ.СтавкаНДС))) * 100;
			
			СтрокаТЧ.Цена = ЦенаБезНДС;
			
		Иначе
			СтрокаТЧ.Цена = СтруктураЦены.ЦенаБезНДС;
		КонецЕсли;
	КонецЕсли;
	
	ПосчитатьСуммуСтрокиТЧ1(СтрокаТЧ,ОбПоступление);
	
КонецПроцедуры

&НаСервере
Процедура ПосчитатьСуммуСтрокиТЧ1(СтрокаТабличнойЧасти,ОбПоступление) Экспорт
	
	Попытка
		КолвоПретензияКПоставщику = СтрокаТабличнойЧасти.Количество - СтрокаТабличнойЧасти.ПоПриходнымОрдерам - СтрокаТабличнойЧасти.КоличествоПретензияКСкладу;
	Исключение
		КолвоПретензияКПоставщику = 0;
	КонецПопытки;	
	СтрокаТабличнойЧасти.Сумма = СтрокаТабличнойЧасти.Цена * (СтрокаТабличнойЧасти.Количество - КолвоПретензияКПоставщику);
	РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ОбПоступление.ВариантРасчетаНДС);
	
КонецПроцедуры

&НаСервере
Процедура ПосчитатьСуммуТабличнойЧасти(ОбПоступление) Экспорт
	
	//Название не совсем адекватно, это расчет суммы документа
	
	СуммаДок = 0;
	
	Для Каждого СтрокаТЧ Из ОбПоступление.Товары Цикл
		Если ОбПоступление.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле Тогда
			СуммаДок = СуммаДок + СтрокаТЧ.Сумма;
		Иначе
			СуммаДок = СуммаДок + СтрокаТЧ.Сумма + СтрокаТЧ.СуммаНДС;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из ОбПоступление.Услуги Цикл
		Если ОбПоступление.ВариантРасчетаНДС = Перечисления.ВариантыРасчетаНДС.НДСвТомЧисле Тогда
			СуммаДок = СуммаДок + СтрокаТЧ.Сумма;
		Иначе
			СуммаДок = СуммаДок + СтрокаТЧ.Сумма + СтрокаТЧ.СуммаНДС;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из ОбПоступление.Оборудование Цикл
		СуммаДок = СуммаДок + СтрокаТЧ.Сумма;
	КонецЦикла;
	
	ОбПоступление.СуммаДокумента = СуммаДок;
	
Конецпроцедуры

&НаКлиенте
Процедура БезСформированныхПоступленийПриИзменении(Элемент)
	ЗаполнитьНаСервере();
	Если ЗначениеЗаполнено(ТекПриходник) Тогда
	    МасСтр=Объект.Приходники.НайтиСтроки(Новый Структура("Ссылка",ТекПриходник));
		Если МасСтр.Количество()<>0 Тогда
		    Идентиф=МасСтр[0].ПолучитьИдентификатор();
			Элементы.Приходники.ТекущаяСтрока=Идентиф;
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйБухгалтерПриИзменении(Элемент)
	ЗаполнитьНаСервере();
	Если ЗначениеЗаполнено(ТекПриходник) Тогда
	    МасСтр=Объект.Приходники.НайтиСтроки(Новый Структура("Ссылка",ТекПриходник));
		Если МасСтр.Количество()<>0 Тогда
		    Идентиф=МасСтр[0].ПолучитьИдентификатор();
			Элементы.Приходники.ТекущаяСтрока=Идентиф;
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

//+++АК ILIK 2018.11.28 ИП-00020522
&НаКлиенте
Процедура ОтветственныйОператорПриИзменении(Элемент)
	ЗаполнитьНаСервере();
	Если ЗначениеЗаполнено(ТекПриходник) Тогда
	    НайденныеСтроки = Объект.Приходники.НайтиСтроки(Новый Структура("Ссылка", ТекПриходник));
		Если НайденныеСтроки.Количество() > 0 Тогда
			Элементы.Приходники.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	ЗаполнитьНаСервере();
	Если ЗначениеЗаполнено(ТекПриходник) Тогда
	    МасСтр=Объект.Приходники.НайтиСтроки(Новый Структура("Ссылка",ТекПриходник));
		Если МасСтр.Количество()<>0 Тогда
		    Идентиф=МасСтр[0].ПолучитьИдентификатор();
			Элементы.Приходники.ТекущаяСтрока=Идентиф;
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	ЗаполнитьНаСервере();
	Если ЗначениеЗаполнено(ТекПриходник) Тогда
	    МасСтр=Объект.Приходники.НайтиСтроки(Новый Структура("Ссылка",ТекПриходник));
		Если МасСтр.Количество()<>0 Тогда
		    Идентиф=МасСтр[0].ПолучитьИдентификатор();
			Элементы.Приходники.ТекущаяСтрока=Идентиф;
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоставщикуПоВыделенным(Команда)
	//ТекВыделенныеСтроки = Элементы.Приходники.ВыделенныеСтроки;
	//Если ТекВыделенныеСтроки.Количество() = 0 Тогда
	//	ОбщегоНазначения.СообщитьОбОшибке("Необходимо выбрать хотя бы одну строку!");
	//	Возврат;
	//КонецЕсли;
	
	//
	мМассив = Новый Массив;
	Для Каждого СтрокаСписка Из Объект.Приходники Цикл                                               
		Если СтрокаСписка.ФлОтправки и СтрокаСписка.РасхожденияСПоставщиком Тогда
			//ТекДанные = Объект.Приходники.НайтиПоИдентификатору(СтрокаСписка);
			мМассив.Добавить(СтрокаСписка.Ссылка);
		КонецЕсли; 
	КонецЦикла;
	ОтправитьПоставщикуПоВыделеннымСервер(мМассив);
	Для Каждого СтрокаСписка Из Объект.Приходники Цикл                                               
		Если СтрокаСписка.ФлОтправки Тогда
			//ТекДанные = Объект.Приходники.НайтиПоИдентификатору(СтрокаСписка);
			ОповеститьОбИзменении(СтрокаСписка.Ссылка);
			СтрокаСписка.ФлОтправки = Ложь;	                                      
		КонецЕсли; 
	КонецЦикла;
	
	//Элементы.Приходники.Обновить();
КонецПроцедуры

&НаСервере
Процедура ОтправитьПоставщикуПоВыделеннымСервер(мМассив)
	Для каждого Эл Из мМассив Цикл
	    ОбъектДок=Эл.ПолучитьОбъект();
		Документы.ПриходныйОрдерСклад.ОтправитьПисьмоПоставщику(ОбъектДок);
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоставщикуПоВсем(Команда)
	ОтправитьПоставщикуПоВсемСервер();
	Для каждого Стр Из Объект.Приходники Цикл
		ОповеститьОбИзменении(Стр.Ссылка);
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура ОтправитьПоставщикуПоВсемСервер()
	Для каждого Стр Из Объект.Приходники Цикл
		Если Стр.Ссылка.РасхожденияСПоставщиком Тогда
		    ОбъектДок=Стр.Ссылка.ПолучитьОбъект();
			Документы.ПриходныйОрдерСклад.ОтправитьПисьмоПоставщику(ОбъектДок);
			Стр.ФлОтправки = Ложь;	                                      

			//Стр.ПоставщикОповещен=Истина;
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура УстановитьФлажки(ЗначФлажка)
	
	Для каждого ТекСтр Из Объект.Приходники Цикл
		//Если ЗначФлажка=Ложь или ТекСтр.Ссылка.РасхожденияСПоставщиком Тогда
			ТекСтр.ФлОтправки = ЗначФлажка;	                                      
		//КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	УстановитьФлажки(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВсе(Команда)
	
	УстановитьФлажки(Ложь);
	
КонецПроцедуры

//+++АК LAGP 2018.07.31 ИП-00018875.02 Рассылка оповещения факторинговой компании
Процедура ОтправитьПисьмоПоПочтеФакторинг(ФакторинговаяКомпанияДоговора, Док)  	
	
	СтруктураНовогоПисьма = Новый Структура;
		
	Кому = Новый Массив;
	
	ЗапросАдресовЭП = Новый Запрос;
	ЗапросАдресовЭП.Текст =                                                                                   
	"ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление,
	|	КонтактнаяИнформация.Объект
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &ФакторинговаяКомпанияДоговора
	|	И КонтактнаяИнформация.Вид = &ВидКонтактнойИнформации";
	
	СтруктураЗапроса = Новый Структура;
	СтруктураЗапроса.Вставить("Текст"							, ЗапросАдресовЭП.Текст);
	СтруктураЗапроса.Вставить("ФакторинговаяКомпанияДоговора"	, ФакторинговаяКомпанияДоговора);
	СтруктураЗапроса.Вставить("ВидКонтактнойИнформации"			, Справочники.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыКонтрагентаДляОбменаДокументами);
		
	РезультатЗапросаПолучателейРассылки = ПолныеПрава.ВыполнитьЗапрос(СтруктураЗапроса);
		
	ВыборкаДетальныеЗаписиЭП = РезультатЗапросаПолучателейРассылки.Выбрать();
	Пока ВыборкаДетальныеЗаписиЭП.Следующий() Цикл
		Если ЗначениеЗаполнено(СокрЛП(ВыборкаДетальныеЗаписиЭП.Представление)) Тогда
			Кому.Добавить(ВыборкаДетальныеЗаписиЭП.Представление);
		КонецЕсли; 
	КонецЦикла;
	
	СтруктураНовогоПисьма.Вставить("Кому", Кому);
			
	СтрокаПредставления = "Оповещение о фактическом поступлении товара от контрагента " + Док.Контрагент;
	СтрокаПриходныхОрдеров = "";
	Если Док.ПриходныеОрдера.Количество() > 0 Тогда
		СтрокаПриходныхОрдеров = "Склад принял документами: " + Символы.ПС;	
	КонецЕсли;	
	Для каждого Ордер Из Док.ПриходныеОрдера Цикл
		СтрокаПриходныхОрдеров = СтрокаПриходныхОрдеров + Ордер.ПриходныйОрдер + Символы.ПС;	
	КонецЦикла;	
	
	ВходящийНомер 	= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Док, "НомерВходящегоДокумента");
	ВходящаяДата 	= ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Док, "ДатаВходящегоДокумента");
	
	Если ТипЗнч(ВходящаяДата) = Тип("Дата") Тогда
		ВходящаяДата = Формат(ВходящаяДата, "ДФ=dd.MM.yyyy");	
	КонецЕсли;	
		
	СтруктураНовогоПисьма.Вставить("Тема",	СтрокаПредставления);
	СтруктураНовогоПисьма.Вставить("Тело", "Внимание, проведено " + Док + Символы.ПС + "Сумма документа: " + Док.СуммаДокумента  
		+ Символы.ПС + "Входящий документ поставщика №" + ВходящийНомер + " от " + ВходящаяДата + Символы.ПС + СтрокаПриходныхОрдеров);		
		
	УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоКоду("000000001");
	
	СпАдресов = Новый СписокЗначений;
	Для каждого ЭлСп Из СтруктураНовогоПисьма.Кому Цикл
		МассивАдресов = Справочники.Контрагенты.РазложитьСтрокуВМассивПодстрок(ЭлСп, ";");	
		Для каждого Эл Из МассивАдресов Цикл
			Если ЗначениеЗаполнено(Эл) Тогда
				СпАдресов.Добавить(Сокрлп(Эл));
			КонецЕсли; 
		КонецЦикла; 
	КонецЦикла;
	
	Почта = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Письмо = Новый ИнтернетПочтовоеСообщение;
	
	Почта.Подключиться(Профиль);
	Письмо.Тема = СтруктураНовогоПисьма.Тема;
	Письмо.ИмяОтправителя 	= "" + УчетнаяЗапись + "";
	Письмо.ИмяОтправителя  	= "" + СокрЛП(УчетнаяЗапись) + "";
	Письмо.Отправитель     	= "" + СокрЛП(УчетнаяЗапись) + "";
	
	ТабДок=СтруктураНовогоПисьма.Тело;
	
	ТекстСообщения = Письмо.Тексты.Добавить();
	ТекстСообщения.Текст     = ТабДок;	
	ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
 	
	Для каждого Адрес Из СпАдресов Цикл
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = Адрес.Значение;
	КонецЦикла;
	Почта.Послать(Письмо);
	Почта.Отключиться();
		
КонецПроцедуры

//+++АК ILIK 2018.09.26 ИП-00019587
&НаСервере
Функция ИнициализироватьТаблицуНепроведенныхДокументов()
	ТаблицаНепроведенныхДокументов = Новый ТаблицаЗначений;
	ТаблицаНепроведенныхДокументов.Колонки.Добавить("Документ", Новый ОписаниеТипов("ДокументСсылка.ПоступлениеТоваровУслуг"));
	ТаблицаНепроведенныхДокументов.Колонки.Добавить("Ошибка", Новый ОписаниеТипов("Строка"));
	
	Возврат ТаблицаНепроведенныхДокументов;
КонецФункции

//+++АК ILIK 2018.09.26 ИП-00019587
&НаСервере
Процедура ДобавитьНепроведенныйДокумент(ТаблицаНепроведенныхДокументов, Документ)
	Если ЗначениеЗаполнено(ТаблицаНепроведенныхДокументов.Найти(Документ, "Документ")) Тогда
		Возврат;
	КонецЕсли;
	
	НовСтр = ТаблицаНепроведенныхДокументов.Добавить();
	НовСтр.Документ = Документ;
КонецПроцедуры

//+++АК ILIK 2018.09.26 ИП-00019587
&НаСервере
Процедура ПровестиНепроведенныеДокументы(ТаблицаНепроведенныхДокументов)
	Если ТаблицаНепроведенныхДокументов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для й = 1 По 3 Цикл
		КоличествоСтрок = ТаблицаНепроведенныхДокументов.Количество();
		Для ы = 1 По КоличествоСтрок Цикл
			ТекСтрока = ТаблицаНепроведенныхДокументов[КоличествоСтрок - ы];
			ДокументОбъект = ТекСтрока.Документ.ПолучитьОбъект();
			Попытка
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
				ТаблицаНепроведенныхДокументов.Удалить(ТекСтрока);
			Исключение
				ТекСтрока.Ошибка = ОписаниеОшибки();
			КонецПопытки;
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого Стр Из ТаблицаНепроведенныхДокументов Цикл
		Сообщить(Стр.Ошибка);
		Сообщить("Не удалось провести " + Строка(Стр.Документ) + " контрагента " + Строка(Стр.Документ.Контрагент));
	КонецЦикла;
КонецПроцедуры

//+++АК ILIK 2018.10.11 ИП-00019835
&НаКлиенте
Процедура ПриходникиКППКонтрагентаПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.Приходники.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.Поступление) Тогда
		ИзменитьКППКонтрагента(СтрокаТабличнойЧасти.Поступление, СтрокаТабличнойЧасти.КППКонтрагента);
	КонецЕсли;
КонецПроцедуры

//+++АК ILIK 2018.10.11 ИП-00019835
&НаКлиенте
Процедура ПриходникиПередНачаломИзменения(Элемент, Отказ)
	Если Элемент.ТекущийЭлемент.Имя = "ПриходникиКППКонтрагента" Тогда
		СтрокаТабличнойЧасти = Элементы.Приходники.ТекущиеДанные;
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Поступление) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "В строке " + СтрокаТабличнойЧасти.НомерСтроки + " не заполнен документ ""Поступление товаров услуг""";
			Сообщение.Поле = "Объект.Приходники[" + Число(СтрокаТабличнойЧасти.НомерСтроки - 1) + "].Поступление";
			Сообщение.Сообщить();
			
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//+++АК ILIK 2018.10.11 ИП-00019835
&НаСервереБезКонтекста
Процедура ИзменитьКППКонтрагента(ПоступлениеТоваровУслуг, КППКонтрагента)
	Документы.ПоступлениеТоваровУслуг.ЗаписатьКППКонтрагента(ПоступлениеТоваровУслуг, КППКонтрагента);
КонецПроцедуры
