&НаКлиенте
Процедура Послать(АдресПолучателя,ТекстПисьма,УЗ,Тема,Пользователь)
	
	Почта = Новый ИнтернетПочта;

	ИПП=Новый ИнтернетПочтовыйПрофиль;
	
	ИПП.АдресСервераSMTP="10.0.0.30";
	ИПП.Пользователь=Пользователь;
	ИПП.ПортSMTP=25;
	
	ИПП.АутентификацияSMTP = СпособSMTPАутентификации.БезАутентификации;
	ИПП.ПарольSMTP         = "";
	ИПП.ПользовательSMTP   = "";
	////КонецЕсли;
	
	Письмо=Новый ИнтернетПочтовоеСообщение;
	//Письмо.Отправитель=УЗ;
	Письмо.Получатели.Добавить(АдресПолучателя);
	
	//Для Каждого ТекАдр Из Вложения Цикл
	//КонецЦикла;
	
	Письмо.Отправитель     = ""+СокрЛП(УЗ)+"";
	
	Письмо.Тема=Тема;
	
	Письмо.Тексты.Добавить(ТекстПисьма,ТипТекстаПочтовогоСообщения.ПростойТекст);
	
	Для Каждого Файл из Файлы Цикл
		Письмо.Вложения.Добавить(Файл.Значение)
	КонецЦикла;
	
	Почта=Новый ИнтернетПочта;
	
	Почта.Подключиться(ИПП);
	
	Почта.Послать(Письмо);
	
	Почта.Отключиться();
	
КонецПроцедуры


&НаКлиенте
Процедура ОтправитьНаСервере()
	МассивСообщений = Новый Массив;
	
	ТекстПисьма = Текст;//+Символы.ПС+ФамилияИмяБухгалтера;
	Для каждого Строка Из Контрагенты Цикл
		Если Не	Строка.Пометка Тогда
			Продолжить;	
		КонецЕсли;
		
		Отказ = Ложь;
		
		Если Не ЗначениеЗаполнено(Строка.АдресПочты) Тогда
			
			МассивСообщений.Добавить("У Контрагента "+Строка.Контрагент + " не заполнен email адрес!");	
			Отказ = Истина;
		КонецЕсли;
		
		Если Отказ Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		ТаблицаОбъектовКому = СтрЗаменить(Строка.АдресПочты, ";",Символы.ПС);
		
		МаксимальноеЗначение = СтрЧислоСтрок(ТаблицаОбъектовКому);
		
		ЕстьОшибки = Ложь;
		
		Для сч=1 по СтрЧислоСтрок(ТаблицаОбъектовКому) Цикл
			АдресПолучателя=СокрЛП(СтрПолучитьСтроку(ТаблицаОбъектовКому,сч));
			Попытка
				Послать(АдресПолучателя,ТекстПисьма+Символы.ПС+Символы.ПС+Подпись,АдресОтправителя,ТемаПисьма,ФамилияИмяБухгалтера);
			Исключение
				Сообщить("Не удается отправить письмо по адресу:"+АдресПолучателя+" для контрагента "+Строка.Контрагент);
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецЦикла;
		
	КонецЦикла;    
	
	
	МассивСообщений = ОбщегоНазначения.УдалитьПовторяющиесяЭлементыМассива(МассивСообщений);
	
	Для каждого ТекСтрока Из МассивСообщений Цикл
		
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ТекСтрока;
		Сообщение.Сообщить();
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	ОтправитьНаСервере()
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка КАК Контрагент,
	|	КонтактнаяИнформация.Представление КАК АдресПочты,
	|	ИСТИНА КАК Пометка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО (КонтактнаяИнформация.Объект = Контрагенты.Ссылка)
	|			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|			И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыКонтрагентаДляОбменаДокументами))
	|ГДЕ
	|	Контрагенты.ОсновнойБухгалтерПокупателя = &ОсновнойБухгалтер
	|	И НЕ Контрагенты.ПометкаУдаления";
	Запрос.УстановитьПараметр("ОсновнойБухгалтер",ОтветственныйБухгалтер);
	//Выборка = Запрос.Выполнить().Выбрать();
	Контрагенты.Загрузить(Запрос.Выполнить().Выгрузить());
	//Контрагенты.Очистить();
	//Пока Выборка.Следующий() Цикл
	//	Контрагенты.Добавить(Выборка.Контрагент,Выборка.АдресПочты,Истина)
	//КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере()
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьАдресПочты(Пользователь)
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("Объект",Пользователь);                        
	ПараметрыОтбора.Вставить("Тип",Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	ПараметрыОтбора.Вставить("Вид",Справочники.ВидыКонтактнойИнформации.СлужебныйАдресЭлектроннойПочтыПользователя);
	Возврат РегистрыСведений.КонтактнаяИнформация.Получить(ПараметрыОтбора).Представление;
КонецФункции

&НаСервере
Процедура ОтветственныйБухгалтерПриИзмененииНаСервере()
	Контрагенты.Очистить();
	Если ОтветственныйБухгалтер.Пустая() Тогда
		АдресОтправителя = ""
	Иначе
		АдресОтправителя = ПолучитьАдресПочты(ОтветственныйБухгалтер)
	КонецЕсли;
	ДанныеФизЛицаБухгалтера = ОбщегоНазначения.ПолучитьМассивФИО(ОтветственныйБухгалтер.ФизЛицо);
	ФамилияИмяБухгалтера = ДанныеФизЛицаБухгалтера[0] + " "+ДанныеФизЛицаБухгалтера[1];
	Подпись = "С уважением, "+ФамилияИмяБухгалтера+Символы.ПС
		+"бухгалтер ООО ""Вкусвилл"""+Символы.ПС
		+"e-mail: "+АдресОтправителя;
КонецПроцедуры
	
&НаКлиенте
Процедура ОтветственныйБухгалтерПриИзменении(Элемент)
	ОтветственныйБухгалтерПриИзмененииНаСервере()
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОтветственныйБухгалтер = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ОтветственныйБухгалтер.Пустая()Тогда
		ОтветственныйБухгалтерПриИзменении(Неопределено)
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Копирование Тогда
		Возврат
	КонецЕсли;
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.МножественныйВыбор=Истина;
	Если Диалог.Выбрать() Тогда
		Для Каждого ИмяФайла из Диалог.ВыбранныеФайлы Цикл
			Файлы.Добавить(ИмяФайла)
		КонецЦикла;
	КонецЕсли;
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ФайлыЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.ПолноеИмяФайла = ТекущиеДанные.Значение;
	Диалог.МножественныйВыбор = Ложь;
	Если Диалог.Выбрать() Тогда
		ТекущиеДанные.Значение = Диалог.ПолноеИмяФайла
	КонецЕсли;
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ФайлыЗначениеПриИзменении(Элемент)
КонецПроцедуры

&НаКлиенте
Процедура ФайлыЗначениеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	Файл = Новый Файл(Текст);
	Если Не Файл.Существует() Тогда
		СтандартнаяОбработка=Ложь
	КонецЕсли;
КонецПроцедуры
