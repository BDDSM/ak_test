
Процедура ЗаполнитьСервер()

	//
	Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("Дата"		, НачалоДня(ТекущаяДата()) - 2*86400);
	//Запрос.УстановитьПараметр("ТекущаяДата"	, ТекущаяДата());
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АК_МагазиныКЗакрытию.Магазин,
	|	АК_МагазиныКЗакрытию.ДатаПланируемогоЗакрытия
	|ИЗ
	|	РегистрСведений.АК_МагазиныКЗакрытию КАК АК_МагазиныКЗакрытию";
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект.Магазины.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;

КонецПроцедуры

//Процедура УстановитьДоступность()
//	
//	мДоступность = НЕ (РольДоступна("Перевозчик")
//						И НЕ РольДоступна("ПолныеПрава"));
//	//Элементы.Магазины.Доступность 				= мДоступность;
//	//Элементы.МагазиныНовыйМагазин.Доступность 	= мДоступность;
//	Элементы.МагазиныТекущиеПараметры.Доступность 	= мДоступность;
//	Элементы.ФормаНастроитьОповещение.Доступность 	= мДоступность;
//	
//КонецПроцедуры


Процедура МагазиныДатаОткрытияПриИзмененииСервер(ДатаОткрытия, Магазин)
	
	ОбъектМагазина = Магазин.ПолучитьОбъект();
	ОбъектМагазина.ДатаОткрытия = ДатаОткрытия;
	ОбъектМагазина.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура МагазиныДатаОткрытияПриИзменении(Элемент)
	
	//ТекДанные = Элементы.Магазины.ТекущиеДанные;
	//
	//Если ТекДанные.ДатаОткрытия < НачалоДня(ТекущаяДата())
	//		ИЛИ ТекДанные.ДатаОткрытия > ДобавитьМесяц(ТекущаяДата(), 11) Тогда
	//	Сообщить("Некорректная дата открытия");
	//	ТекДанные.ДатаОткрытия = ТекДата;
	//	Возврат;
	//КонецЕсли; 
	//
	//МагазиныДатаОткрытияПриИзмененииСервер(ТекДанные.ДатаОткрытия, ТекДанные.Магазин);
	//ТекДата = ТекДанные.ДатаОткрытия;
	//
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСервер();
	//
	////
	//УстановитьДоступность();
	
КонецПроцедуры


&НаКлиенте
Процедура НастроитьОповещение(Команда)
	
	СписокГрупп = Новый Массив;
	СписокГрупп.Добавить(ПредопределенноеЗначение("Справочник.АК_ГруппыРассылки.ОткрытиеМагазина"));
	СписокГрупп.Добавить(ПредопределенноеЗначение("Справочник.АК_ГруппыРассылки.Список1"));
	СписокГрупп.Добавить(ПредопределенноеЗначение("Справочник.АК_ГруппыРассылки.Список2"));
	СписокГрупп.Добавить(ПредопределенноеЗначение("Справочник.АК_ГруппыРассылки.Список3"));
	
	СтруктураПараметров = Новый Структура("Группы", СписокГрупп);
	ОткрытьФорму("РегистрСведений.АК_ГруппыРассылки.Форма.ФормаСпискаУправляемая", СтруктураПараметров, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура МагазиныСпециалистПоРазвитиюПриИзмененииСервер(Магазин,СпециалистПоРазвитию)
	
	Мен = РегистрыСведений.СоответствиеОбъектРоль.СоздатьМенеджерЗаписи();
	Мен.Период				= НачалоДня(ТекущаяДата());
	Мен.Объект				= Магазин;
	Мен.ТипРоли				= ПланыВидовХарактеристик.ТипыРолейПользователя.СпециалистПоРазвитию;
	Мен.РольПользователя	= СпециалистПоРазвитию;
	Мен.ТипРолиID			= ПланыВидовХарактеристик.ТипыРолейПользователя.СпециалистПоРазвитию.Код;
	Мен.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура МагазиныСпециалистПоРазвитиюПриИзменении(Элемент)
	
	ТекДанные = Элементы.Магазины.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекДанные.Магазин)
			И ЗначениеЗаполнено(ТекДанные.СпециалистПоРазвитию) Тогда
		МагазиныСпециалистПоРазвитиюПриИзмененииСервер(ТекДанные.Магазин, ТекДанные.СпециалистПоРазвитию);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МагазиныСпециалистПоРазвитиюНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтруктураПараметров = Новый Структура("ОтборПоТипу, РежимВыбора", ПредопределенноеЗначение("ПланВидовХарактеристик.ТипыРолейПользователя.СпециалистПоРазвитию"), Истина);
	ОткрытьФорму("Справочник.РолиПользователей.Форма.ФормаВыбора", СтруктураПараметров, Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура МагазиныПриАктивизацииСтроки(Элемент)
	
	//ТекДанные = Элементы.Магазины.ТекущиеДанные;
	//Если ТекДанные <> Неопределено Тогда
	//	ТекДата = ТекДанные.Датаоткрытия;
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МагазиныВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеПараметры(Неопределено)
	
КонецПроцедуры

&НаКлиенте
Процедура ТекущиеПараметры(Команда)
	
	//ОткрытьФорму("Справочник.СтруктурныеЕдиницы.Форма.НовыйМагазин", Новый Структура("Ключ", Элементы.Магазины.ТекущиеДанные.Магазин), ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьМагазин(Команда)
	
	форма = Справочники.СтруктурныеЕдиницы.ПолучитьФормуВыбора(,Элементы.Магазины );
	форма.ЗакрыватьПриВыборе = истина;
	форма.Заголовок = "Выберите магазин для закрытия";
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура МагазиныОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	НСтр = Объект.Магазины.Добавить();
	НСтр.Магазин = ВыбранноеЗначение;
КонецПроцедуры


&НаКлиенте
Процедура МагазиныПланируемаяДатаЗакрытияПриИзменении(Элемент)
	//НЗ = РегистрыСведений.АК_МагазиныКЗакрытию.СоздатьНаборЗаписей();
	//НЗ.Отбор.Магазин.Установить(Элементы.Магазины.ТекущиеДанные.Магазин);
	//НЗ.Прочитать();
	//Если НЗ.Количество() > 0 Тогда 
	//	Для каждого Запись из НЗ цикл
	//		Запись.ДатаПланируемогоЗакрытия = Элемент.Значение;
	//		Запись.Записать(Ложь);
	//	КонецЦикла;	
	//Иначе
	//	НЗАп = НЗ.Добавить();
	//	НЗАп.Магазин = Элементы.Магазины.ТекущиеДанные.Магазин;
	//	НЗАп.ДатаПланируемогоЗакрытия = Элемент.Значение;
	//КонецЕсли;	
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьМагазин(Команда)
	форма = Справочники.СтруктурныеЕдиницы.ПолучитьФормуВыбора(,Элементы.Реквизит1 );
	форма.Отбор.ПометкаУдаления.Значение = ложь;
	форма.Отбор.ПометкаУдаления.Использование = Истина;
	форма.Отбор.ТипСтруктурнойЕдиницы.Значение = Перечисления.ТипыСтруктурныхЕдиниц.Розница;
	форма.Отбор.ТипСтруктурнойЕдиницы.Использование = Истина;
	//СтатусТорговойТочки
	форма.ЗакрыватьПриВыборе = истина;
	форма.Заголовок = "Выберите магазин для закрытия";
	Форма.Открыть();
КонецПроцедуры


&НаКлиенте
Процедура Реквизит1ОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	НЗ = РегистрыСведений.АК_МагазиныКЗакрытию.СоздатьМенеджерЗаписи();
	НЗ.Магазин = ВыбранноеЗначение;
	НЗ.ПолучитьФорму().Открыть();
	
КонецПроцедуры


&НаКлиенте
Процедура НастройкиОповещения(Команда)
	
	//Структура = новый Структура;
	//Структура.Вставить("Магазин",Элементы.Реквизит1.ТекущаяСтрока.Магазин);
	//
	//
	//
	////ОткрытьФорму("Обработка.ОповещенияОЗакрытииМагазинов.Форма.НастройкиОповещения", Структура,ЭтаФорма);
	//ОткрытьФорму("ВнешняяОбработка.ОповещенияОЗакрытииМагазинов.Форма.НастройкиОповещения", Структура,ЭтаФорма);
	
	ОткрытьФорму("РегистрСведений.АК_ПредварительнаяРассылка.Форма.ФормаСписка1",, ЭтаФорма);
	
КонецПроцедуры

