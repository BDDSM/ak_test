
&НаКлиенте
Процедура Получить(Команда)
	ПоказатьОповещениеПользователя("Просмотр почты",,"Получение заголовков");
	ПолучитьЗаголовкиНаСервере();
	ПоказатьОповещениеПользователя("Просмотр почты",,"Проверка загруженных предложений");
//	ПроверитьЗагрузкуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПроверитьЗагрузкуНаСервере()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ТаблицаСообщений.ИдентификаторПочты КАК СТРОКА(100)) КАК ИдентификаторПочты,
		|	ТаблицаСообщений.ДатаОтправления,
		|	ТаблицаСообщений.Отправитель,
		|	ТаблицаСообщений.Тема,
		|	ТаблицаСообщений.ИдентификаторСообщения
		|ПОМЕСТИТЬ Сообщения
		|ИЗ
		|	&ТаблицаСообщений КАК ТаблицаСообщений
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИдентификаторПочты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Сообщения.ДатаОтправления,
		|	Сообщения.Отправитель,
		|	Сообщения.Тема,
		|	Сообщения.ИдентификаторПочты,
		|	Сообщения.ИдентификаторСообщения,
		|	ВЫБОР
		|		КОГДА АК_ПоступающиеПредложения.Ссылка ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Пропуск,
		|	ВЫРАЗИТЬ(Сообщения.Отправитель КАК СТРОКА(100)) КАК Отправитель100
		|ПОМЕСТИТЬ СводнаяТаблица
		|ИЗ
		|	Сообщения КАК Сообщения
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.АК_ПоступающиеПредложения КАК АК_ПоступающиеПредложения
		|		ПО Сообщения.ИдентификаторПочты = АК_ПоступающиеПредложения.ИдентификаторПочты
		|ГДЕ
		|	АК_ПоступающиеПредложения.Источник = &ИсточникПочта
		|	И НЕ АК_ПоступающиеПредложения.ИдентификаторПочты = &ПустаяСтрока
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СводнаяТаблица.ДатаОтправления КАК ДатаОтправления,
		|	СводнаяТаблица.Отправитель КАК Отправитель,
		|	СводнаяТаблица.Тема,
		|	СводнаяТаблица.ИдентификаторПочты,
		|	СводнаяТаблица.ИдентификаторСообщения,
		|	СводнаяТаблица.Пропуск
		|ИЗ
		|	СводнаяТаблица КАК СводнаяТаблица
		//|ГДЕ
		//|	НЕ СводнаяТаблица.Пропуск
		|
		|УПОРЯДОЧИТЬ ПО
		|	ДатаОтправления,
		|	СводнаяТаблица.Отправитель100";

	Запрос.Параметры.Вставить("ТаблицаСообщений",Объект.ТаблицаСообщений.Выгрузить());
	Запрос.Параметры.Вставить("ИсточникПочта",Перечисления.АК_ИсточникиПоступающихПредложений.Почта);
	Запрос.Параметры.Вставить("ПустаяСтрока","");
		
	Объект.ТаблицаСообщений.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

&НаСервере
Процедура ПолучитьЗаголовкиНаСервере()
	
		Почта = ПолучитьИнтернетПочту();
		МассивСообщений = Новый Массив;
		
		Попытка
			Почта.ТекущийПочтовыйЯщик=Объект.Ящик;
			
	        сообщить("Текущий ящик: "+Почта.ТекущийПочтовыйЯщик);
			
			сообщить("Чтение почтовых сообщений "+ТекущаяДата());
			
			ПараметрыОтбора = Новый Структура;
			//ПараметрыОтбора.Вставить("Новые", Истина);
			ПараметрыОтбора.Вставить("ПослеДатыОтправления", Дата(2016,1,31));
			
			//МассивСообщений = Почта.ПолучитьЗаголовки(ПараметрыОтбора);
			МассивСообщений = Почта.ПолучитьЗаголовки();
	    Исключение
	        сообщить("Ошибка подключения к серверу");
	        сообщить(""+ОписаниеОшибки());
	        Возврат;
	    КонецПопытки;
		
		сообщить("Сообщения получены "+ТекущаяДата());
		
		Если МассивСообщений.Количество() = 0 Тогда
			сообщить("В почтовом ящике нет сообщений. Прерываем работу.");
			Сообщить("Почтовый ящик пуст");
		//	//ПолученныеПисьма.Очистить();
		//	Возврат;
		иначе
		    сообщить("Сообщения: "+МассивСообщений.Количество());

			Обработано=0;
			НеобходимоПолучить=новый Массив;
			Для Каждого Сообщение из МассивСообщений цикл
				
				Если Сообщение.Тема="ВкусВилл: на сайте заполнена анкета нового поставщика" тогда
					продолжить;
				КонецЕсли;
				
				Если НЕ Объект.ИсключаемыеСообщения.НайтиПоЗначению(Сообщение.ИдентификаторСообщения)=Неопределено тогда
					Продолжить;
				КонецЕсли;
				
				ИдентификаторПочты=""+Сообщение.ИдентификаторСообщения+";"+нрег(стрзаменить(Сообщение.Отправитель.Адрес," ",""))+";"+Сообщение.ДатаОтправления;

				СтрокаСообщения=Объект.ТаблицаСообщений.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаСообщения,Сообщение,"ДатаОтправления,Тема,ИдентификаторСообщения");
				СтрокаСообщения.ИдентификаторПочты=ИдентификаторПочты;
				СтрокаСообщения.Отправитель=Сообщение.Отправитель.Адрес;
				
				
 //   			Запрос.УстановитьПараметр("ИдентификаторПочты", ИдентификаторПочты);

 //   			СообщениеНеЗагружено = Запрос.Выполнить().Пустой();
 //
 //   			Если СообщениеНеЗагружено тогда
 //   				НеобходимоПолучить.Добавить(Сообщение);
 //   			КонецЕсли;
			КонецЦикла;

            //возврат;

			МассивСообщений=Почта.Выбрать(Ложь,НеобходимоПолучить);
			Для Каждого Сообщение из МассивСообщений цикл
				КоличествоВложений=Сообщение.Вложения.Количество();
				Если КоличествоВложений>0 тогда
					
					Обработано=Обработано+1;
				иначе
					Если Объект.ИсключаемыеСообщения.НайтиПоЗначению(Сообщение.ИдентификаторСообщения)=Неопределено тогда
						Объект.ИсключаемыеСообщения.Добавить(Сообщение.ИдентификаторСообщения);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Сообщить("Обработано: "+Обработано);
		КонецЕсли;	
	
КонецПроцедуры


&НаКлиенте
Процедура УчетнаяЗаписьПриИзменении(Элемент)
	ЗаполнитьСписокПапокНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокПапокНаСервере()
	ПолучитьИнтернетПочту();
КонецПроцедуры

&НаСервере
Функция ПолучитьИнтернетПочту(ЗаполнитьЯщики=Истина)
	Профиль = новый ИнтернетПочтовыйПрофиль;
    Почта = Новый ИнтернетПочта;
	Если ЗначениеЗаполнено(Объект.УчетнаяЗапись) тогда
		УчетнаяЗапись=Объект.УчетнаяЗапись;
		Если найти(врег(УчетнаяЗапись.POP3Сервер),"IMAP")>0 тогда
			Профиль.ИспользоватьSSLIMAP = Истина;        
			Профиль.АдресСервераIMAP =	УчетнаяЗапись.POP3Сервер;        
			Профиль.ПортIMAP = 			УчетнаяЗапись.ПортPOP3;        
			Профиль.ПользовательIMAP = 	УчетнаяЗапись.Логин;        
			Профиль.ПарольIMAP = 		УчетнаяЗапись.Пароль;        
			Протокол = ПротоколИнтернетПочты.IMAP;        
		иначе
			Профиль.АдресСервераPOP3 =	УчетнаяЗапись.POP3Сервер;        
			Профиль.ПортPOP3 = 			УчетнаяЗапись.ПортPOP3;        
			Профиль.Пользователь =	 	УчетнаяЗапись.Логин;        
			Профиль.Пароль = 			УчетнаяЗапись.Пароль;        
			Протокол = ПротоколИнтернетПочты.POP3;        
		КонецЕсли;
		Профиль.Таймаут = 15;        
		
		Попытка
	        Почта.Подключиться(Профиль,Протокол);
	    Исключение
	        сообщить("Ошибка подключения к серверу");
	        сообщить(""+ОписаниеОшибки());
			ЗаполнитьЯщики=Ложь;
		КонецПопытки;
		
		Если ЗаполнитьЯщики тогда
		
			Элементы.Ящик.СписокВыбора.Очистить();
				
			ПочтовыеЯщики = Новый Массив;            
			ПочтовыеЯщики = Почта.ПолучитьПочтовыеЯщики(); 
			
			Если ПочтовыеЯщики.Найти(Объект.Ящик)=Неопределено тогда
				Объект.Ящик="";
			КонецЕсли;
			
			ЯщикПоУмолчанию=ВРег("TEST");
			
			НовыйЯщик="";
			Для Каждого Ящик из ПочтовыеЯщики цикл
				Если врег(Ящик)=ЯщикПоУмолчанию тогда
					Объект.Ящик=Ящик;
					Маркер="1.";
				Иначе 
					Маркер="";
				КонецЕсли;
				Если врег(Ящик)="INBOX" тогда
					Элементы.Ящик.СписокВыбора.Добавить(Ящик,Маркер+"Входящие");
				иначе
					Элементы.Ящик.СписокВыбора.Добавить(Ящик,Маркер+Ящик);
				КонецЕсли;
				Если ПустаяСтрока(Объект.Ящик) и Врег(Ящик)=ЯщикПоУмолчанию тогда
					Объект.Ящик=Ящик;
				КонецЕсли;
			КонецЦикла;
			Элементы.Ящик.СписокВыбора.СортироватьПоПредставлению();
		КонецЕсли;
	КонецЕсли;
	возврат Почта;
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьПривилегированныйРежим(Истина);
	КаталогФайнРидер = Константы.КаталогФайнРидер.Получить();
	
	Если Прав(КаталогФайнРидер, 1) <> "\" Тогда
		КаталогФайнРидер = КаталогФайнРидер + "\";
	КонецЕсли;	
	КаталогФайнРидер=СтрЗаменить(врег(КаталогФайнРидер),врег("\sticker\"),"");
	
	КаталогДок=КаталогФайнРидер+"\DOC\";
	
	ИмяФайлаИсключений=КаталогДок="исключаемые_сообщения.txt";
	
	ФайлИсключение = Новый Файл(ИмяФайлаИсключений);
	Если ФайлИсключение.Существует() Тогда
		Попытка
			ИсключаемыеСообщения=ЗначениеИзФайла(ИмяФайлаИсключений);
		Исключение
			ИсключаемыеСообщения=Неопределено;
		КонецПопытки;
		Если ТипЗнч(ИсключаемыеСообщения)=Тип("Массив") тогда
			Объект.ИсключаемыеСообщения.ЗагрузитьЗначения(ИсключаемыеСообщения);
		КонецЕсли;
	КонецЕсли;
	
	                                        
	Адрес="zakupka@vkusvill.ru";
	УчетнаяЗапись=Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоНаименованию(Адрес);
	
	Если ЗначениеЗаполнено(УчетнаяЗапись) тогда
		//УчетнаяЗапись=УчетнаяЗапись.получитьобъект();
		Объект.УчетнаяЗапись=УчетнаяЗапись;
	иначе
		УчетнаяЗапись=Справочники.УчетныеЗаписиЭлектроннойПочты.СоздатьЭлемент();
	//КонецЕсли;	
		УчетнаяЗапись.Наименование=Адрес;
		
		УчетнаяЗапись.АдресЭлектроннойПочты=Адрес;
		УчетнаяЗапись.Логин=Адрес;
		УчетнаяЗапись.Пароль="asDzqA15";
		УчетнаяЗапись.POP3Сервер="imap.yandex.ru";
		УчетнаяЗапись.ПортPOP3=993;
		УчетнаяЗапись.ОставлятьКопииСообщенийНаСервере=Истина;
		УчетнаяЗапись.ВремяОжиданияСервера=15;
		
		УчетнаяЗапись.НазначениеУчетнойЗаписи=Перечисления.НазначенияУчетнойЗаписи.Прочее;
		
		УчетнаяЗапись.ОбменДанными.Загрузка=Истина;
		УчетнаяЗапись.Записать();
		
		Объект.УчетнаяЗапись=УчетнаяЗапись.Ссылка;
	КонецЕсли;
	ЗаполнитьСписокПапокНаСервере();	
	
	УстановитьПривилегированныйРежим(Ложь);
КонецПроцедуры


&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если Объект.ИсключаемыеСообщения.Количество()>0 тогда
		СохранитьИсключенияНаСервере();
	КонецЕсли;
КонецПроцедуры
	
&НаСервере
Процедура СохранитьИсключенияНаСервере()
	ЗначениеВФайл(ИмяФайлаИсключений,Объект.ИсключаемыеСообщения.ВыгрузитьЗначения());
КонецПроцедуры
