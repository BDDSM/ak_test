&НаКлиенте
Перем ВызванОбработчикПриАктивизацииСтроки;


&НаСервере
Процедура УстановитьПризнакГруппы(СтрокиДерева)
	
	Для Каждого Строка Из СтрокиДерева Цикл
		Строка.ЭтоГруппа = Строка.Номенклатура.ЭтоГруппа;
		УстановитьПризнакГруппы(Строка.Строки);
	КонецЦикла;  

КонецПроцедуры 

&НаКлиенте
Функция ЦелМаксимальное(Сумма) Экспорт
	
	Возврат ?(Цел(Сумма) = Сумма, Сумма, Цел(Сумма) + 1);
	
КонецФункции 

&НаСервере
Процедура ЗаполнитьДеревоТоваров()

	СхемаКомпоновкиДанных = Обработки.АнализЭтикеток.ПолучитьМакет("СКД_Товары");
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, СхемаКомпоновкиДанных.НастройкиПоУмолчанию,,, Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));

	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ДеревоРезультат = Новый ДеревоЗначений;

	ПроцессорВывода.УстановитьОбъект(ДеревоРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	ДеревоРезультат.Колонки.Добавить("ЭтоГруппа", Новый ОписаниеТипов("Булево"));
	УстановитьПризнакГруппы(ДеревоРезультат.Строки);
		
	ЗначениеВРеквизитФормы(ДеревоРезультат, "ДеревоТоваров");

КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьТаблицыКартинок(Характеристика)
	
	ТаблицаКартинокИзБазы.Очистить();

	Если ЗначениеЗаполнено(Характеристика) Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	НоменклатураЭтикетки.ИмяФайла
		                      |ИЗ
		                      |	Справочник.Номенклатура.Этикетки КАК НоменклатураЭтикетки
		                      |ГДЕ
		                      |	НоменклатураЭтикетки.Характеристика = &Характеристика
		                      |	И НоменклатураЭтикетки.Ссылка = &Номенклатура
		                      |
		                      |УПОРЯДОЧИТЬ ПО
		                      |	НоменклатураЭтикетки.НомерСтроки");
		
		Запрос.УстановитьПараметр("Характеристика", Характеристика); 

		Запрос.УстановитьПараметр("Номенклатура", Характеристика.Владелец); 

		Выборка = Запрос.Выполнить().Выбрать();

		Пока Выборка.Следующий() Цикл
			Файл = Новый Файл(Выборка.ИмяФайла);
			
			Если НЕ Файл.Существует() Тогда
				Продолжить;
			Иначе
				НоваяСтрока = ТаблицаКартинокИзБазы.Добавить();
				НоваяСтрока.ИмяФайла = Выборка.ИмяФайла;
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли; 


	// 
	ТаблицаКартинокИзМагазина.Очистить();
	
	КаталогФотографий = СокрЛП(Константы.МП_КаталогХраненияФайловЗадачМП.Получить());

	Если Прав(КаталогФотографий, 1) <> "\" Тогда
		КаталогФотографий = КаталогФотографий + "\";
	КонецЕсли;

	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ИнвентаризацияУпаковки.ОтносительноеИмяФайла КАК ИмяФайла
	|ИЗ
	|	Документ.ИнвентаризацияУпаковки КАК ИнвентаризацияУпаковки
	|ГДЕ
	|	НЕ ИнвентаризацияУпаковки.ПометкаУдаления
	|	И ИнвентаризацияУпаковки.ХарактеристикаНоменклатуры = &Характеристика
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИнвентаризацияУпаковки.Дата");
	
	Запрос.УстановитьПараметр("Характеристика", Характеристика); 

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		Файл = Новый Файл(КаталогФотографий+Выборка.ИмяФайла);
		
		Если ПустаяСтрока(Выборка.ИмяФайла) Тогда
			Продолжить;
		КонецЕсли;

		Попытка 
			Если  НЕ Файл.Существует() Тогда
				Продолжить;
			КонецЕсли;

		Исключение
						
		КонецПопытки; 

		Если НЕ Файл.Существует() Тогда 
		Иначе
			НоваяСтрока = ТаблицаКартинокИзМагазина.Добавить();
			НоваяСтрока.ИмяФайла = КаталогФотографий+Выборка.ИмяФайла;
		КонецЕсли;	
	КонецЦикла;

	//
	Сертификат = "";

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СертификатыНаПродукцию.Характеристика,
	                      |	МАКСИМУМ(СертификатыНаПродукцию.Период) КАК Период
	                      |ПОМЕСТИТЬ ВТ_ПоследниеПериоды
	                      |ИЗ
	                      |	РегистрСведений.СертификатыНаПродукцию.СрезПоследних КАК СертификатыНаПродукцию
	                      |ГДЕ
	                      |	СертификатыНаПродукцию.Характеристика = &Характеристика
	                      |	И СертификатыНаПродукцию.Удален = ЛОЖЬ
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	СертификатыНаПродукцию.Характеристика
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	СертификатыНаПродукцию.ИмяФайла
	                      |ИЗ
	                      |	РегистрСведений.СертификатыНаПродукцию КАК СертификатыНаПродукцию
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ПоследниеПериоды КАК ВТ_ПоследниеПериоды
	                      |		ПО СертификатыНаПродукцию.Характеристика = ВТ_ПоследниеПериоды.Характеристика
	                      |			И СертификатыНаПродукцию.Период = ВТ_ПоследниеПериоды.Период");
	
	Запрос.УстановитьПараметр("Характеристика", Характеристика); 

	ИмяФайлаСертификата = "";
	Сертификат = Неопределено;
	Элементы.Сертификат.ТекстНевыбраннойКартинки = "";

	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ИмяФайлаСертификата = Выборка.ИмяФайла;

		Если Нрег(Прав(ИмяФайлаСертификата, 3)) = "pdf" Тогда
			Элементы.Сертификат.ТекстНевыбраннойКартинки = "Открыть PDF";
		Иначе
			Попытка 
				Картинка = Новый Картинка(ИмяФайлаСертификата);
				Сертификат = ПоместитьВоВременноеХранилище(Картинка, УникальныйИдентификатор);
			Исключение
			КонецПопытки; 
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьHTMLПоТаблицеКартинок(ТаблицаКартинок)

	КартинокВСтроке = 6;

	ПолныйТекстHTML = "
		|<html><body>
		|<table name = ""PictView"">";

	Для НомерСтроки = 1 По ЦелМаксимальное(ТаблицаКартинок.Количество()/КартинокВСтроке) Цикл
		ПолныйТекстHTML = ПолныйТекстHTML + "
			|<tr>";
		Для НомерКолонки = 1 По КартинокВСтроке Цикл
			ИндексСтрокиКартики = (НомерСтроки-1) * КартинокВСтроке + НомерКолонки - 1;
			Если ИндексСтрокиКартики = ТаблицаКартинок.Количество() Тогда
				Прервать;
			КонецЕсли; 
			ИмяФайла = ТаблицаКартинок[ИндексСтрокиКартики].ИмяФайла;
			ПолныйТекстHTML = ПолныйТекстHTML+ "
			|<td><table id=""" + ИндексСтрокиКартики + "_T" + """ border=""2"" cellpadding=""0"" bordercolor=#ffffff cellspacing=""0""><tr><td><img name=""picture"" width = 60 height=60 style = ""cursor: pointer"" id = """  + ИндексСтрокиКартики  + """ src = ""file:///" + СтрЗаменить(ИмяФайла, "\", "/") + """></td></tr></table></td>";
		КонецЦикла;	
		ПолныйТекстHTML = ПолныйТекстHTML + "
			|</tr>";
	КонецЦикла;	

	ПолныйТекстHTML = ПолныйТекстHTML + "</body></html>";

	Возврат ПолныйТекстHTML;

КонецФункции


&НаКлиенте
Процедура ВывестиКартинки(Характеристика)

	Элементы.Сертификат.ТекстНевыбраннойКартинки = "";

	ЗаполнитьТаблицыКартинок(Характеристика);
				
	ЭтикеткиИзБазыHTML = ПолучитьHTMLПоТаблицеКартинок(ТаблицаКартинокИзБазы);
	
	ЭтикеткиИзМагазинаHTML = ПолучитьHTMLПоТаблицеКартинок(ТаблицаКартинокИзМагазина);
	
КонецПроцедуры	

&НаКлиенте
Процедура ДеревоТоваровПриАктивизацииСтроки(Элемент)
	
	Если ВызванОбработчикПриАктивизацииСтроки = Истина Тогда
		Возврат;
	КонецЕсли; 

	ВызванОбработчикПриАктивизацииСтроки = Истина;

	ВывестиКартинки(Элементы.ДеревоТоваров.ТекущиеДанные.ХарактеристикаНоменклатуры);

	ВызванОбработчикПриАктивизацииСтроки = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ЭтикеткиHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	Если Элемент.Имя = "ЭтикеткиИзБазыHTML" Тогда
		ТаблицаКартинок = ТаблицаКартинокИзБазы;
	Иначе
		ТаблицаКартинок = ТаблицаКартинокИзМагазина;
	КонецЕсли; 

	Если ДанныеСобытия.Element.name = "picture" Тогда
		ИндексСтроки = Число(ДанныеСобытия.Element.id);

		Картинка = Новый Картинка(ТаблицаКартинок[ИндексСтроки].ИмяФайла);
		АдресКартинки = ПоместитьВоВременноеХранилище(Картинка, УникальныйИдентификатор);

		ПараметрыФормы = Новый Структура("КартинкаСсылка", АдресКартинки); 
		ОткрытьФорму("ОбщаяФорма.Фото", ПараметрыФормы);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ЗаполнитьДеревоТоваров();

КонецПроцедуры

&НаКлиенте
Процедура ДеревоТоваровНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ДеревоТоваровНоменклатураОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДеревоТоваровЭтикеткаВНормеПриИзмененииНаСервере(Характеристика, Значение)

	 ХарактеристикаОбъект = Характеристика.ПолучитьОбъект();

	ХарактеристикаОбъект.ЭтикеткаВНорме = Значение;

	Попытка 
		ХарактеристикаОбъект.Записать();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки; 

КонецПроцедуры 

&НаКлиенте
Процедура ДеревоТоваровЭтикеткаВНормеПриИзменении(Элемент)

	ДеревоТоваровЭтикеткаВНормеПриИзмененииНаСервере(Элементы.ДеревоТоваров.ТекущиеДанные.ХарактеристикаНоменклатуры, Элементы.ДеревоТоваров.ТекущиеДанные.ЭтикеткаВНорме)

КонецПроцедуры

&НаКлиенте
Процедура СертификатНажатие(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;

	Если Нрег(Прав(ИмяФайлаСертификата, 3)) = "pdf" Тогда
		ЗапуститьПриложение(ИмяФайлаСертификата);
	Иначе
		ПараметрыФормы = Новый Структура("КартинкаСсылка", Сертификат); 
		ОткрытьФорму("ОбщаяФорма.Фото", ПараметрыФормы);
	КонецЕсли;

КонецПроцедуры
