
Процедура УстановитьОтборАвансовыеОтчеты()
	
	ОтборНаФорме = ЭтаФорма.АвансовыеОтчеты.Отбор;
	
	мЕстьОрганизация = НЕ Объект.Организация.Пустая();
	ПолеКомпоновкиДата			= Новый ПолеКомпоновкиДанных("Дата");
	ПолеКомпоновкиОрганизация	= Новый ПолеКомпоновкиДанных("Организация");
		
	Если ОтборНаФорме.Элементы.Количество() = 0 Тогда
		
		ЭлементОтбора = ОтборНаФорме.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение 	= ПолеКомпоновкиДата;
		ЭлементОтбора.Использование 	= Истина;
		ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
		ЭлементОтбора.ПравоеЗначение 	= Объект.ДатаНачала;
		ЭлементОтбора = ОтборНаФорме.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение 	= ПолеКомпоновкиДата;
		ЭлементОтбора.Использование 	= Истина;
		ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
		ЭлементОтбора.ПравоеЗначение 	= КонецДня(Объект.ДатаОкончания);
		ЭлементОтбора = ОтборНаФорме.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение 	= ПолеКомпоновкиОрганизация;
		ЭлементОтбора.Использование 	= мЕстьОрганизация;
		ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение 	= Объект.Организация;
		
	Иначе
		
		Для Каждого ЭлементОтбора Из ОтборНаФорме.Элементы Цикл
			
			Если ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновкиДата Тогда
				
				Если ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно Тогда
					ЭлементОтбора.ПравоеЗначение = Объект.ДатаНачала;
				ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно Тогда
					ЭлементОтбора.ПравоеЗначение = КонецДня(Объект.ДатаОкончания);
				КонецЕсли;
				
			ИначеЕсли ЭлементОтбора.ЛевоеЗначение = ПолеКомпоновкиОрганизация Тогда
				
				ЭлементОтбора.Использование 	= мЕстьОрганизация;
				ЭлементОтбора.ПравоеЗначение 	= Объект.Организация;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьВидимостьПараметрыФайлаExcel()
	
	Элементы.ГруппаПараметрыExcel.Видимость = ЭтаФорма.ПоказыватьПараметрыExcel;
	
КонецПроцедуры

Процедура УстановитьВидимостьСодержимоеФайлаExcel()
	
	Элементы.ТаблицаОплатИзExcel.Видимость = ЭтаФорма.ПоказыватьСодержимоеФайла;
	
КонецПроцедуры

Процедура УстановитьВидимостьАвансовыеОтчеты()
	
	Элементы.АвансовыеОтчеты.Видимость = ЭтаФорма.ПоказыватьАвансовыеОтчеты;
	
КонецПроцедуры

Функция ПолучитьДатуИзСтроки(ТекСтрока)
	
	Если НЕ ЗначениеЗаполнено(ТекСтрока) Тогда
		Возврат Неопределено;
	КонецЕсли;
	ТекСтрока = СтрЗаменить(ТекСтрока, Символы.НПП, "");
	ТекСтрока = СтрЗаменить(ТекСтрока, Символы.Пс, "");
	
	Попытка
		Возврат Дата(Прав(ТекСтрока, 4), Сред(ТекСтрока, 4, 2), Лев(ТекСтрока, 2))
	Исключение
		Возврат Неопределено
	КонецПопытки;
	
КонецФункции

Функция ПолучитьЧислоИзСтроки(ТекСтрока)
	
	Если НЕ ЗначениеЗаполнено(ТекСтрока) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Попытка
		Возврат Число(СтрЗаменить(СтрЗаменить(ТекСтрока, ",", "."), Символы.НПП, ""))
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

Функция ПолучитьФИОИзНазначенияПлатежа(ТекСтрока)
	
	Если НЕ ЗначениеЗаполнено(ТекСтрока) Тогда
		Возврат "";
	КонецЕсли;
	
	ПозФИО = Найти(ТекСтрока, "ФИО Держателя ");
	Если ПозФИО > 0 Тогда
		ТекСтрока = Сред(ТекСтрока, ПозФИО + 14);
		ПозТочка = Найти(ТекСтрока, ".");
		Если ПозТочка > 0 Тогда
			Возврат СокрЛП(Лев(ТекСтрока, ПозТочка - 1));
		КонецЕсли;
	Иначе
		ПозФИО = Найти(ТекСтрока, "СЗ Отражено по операции с картой MasterCard Business ");
		Если ПозФИО > 0 Тогда
			ТекСтрока = Сред(ТекСтрока, ПозФИО + 53);
			ТекСтрока = Лев(ТекСтрока, 16);
			ТекКорпКарта = Справочники.КорпоративныеБанковскиеКарты.НайтиПоРеквизиту("НомерКорпоративнойКарты", ТекСтрока);
			Если НЕ ТекКорпКарта.Пустая() Тогда
				Возврат ТекКорпКарта.ФизЛицо.Наименование;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьФизЛицоПоНаименованию(ТекНаименование)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Наименование", ТекНаименование);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ФизическиеЛица.Ссылка
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|ГДЕ
	|	ФизическиеЛица.Наименование = &Наименование
	|	И НЕ ФизическиеЛица.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	Иначе
		Возврат Справочники.ФизическиеЛица.ПустаяСсылка();
	КонецЕсли;
	
	//Возврат Справочники.ФизическиеЛица.НайтиПоНаименованию(ТекНаименование);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьОрганизациюПоНаименованию(ТекНаименование)
	
	Возврат Справочники.Организации.НайтиПоРеквизиту("НаименованиеСокращенное", ТекНаименование);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТекстЧислоМесяц(ТекстЧислоМесяц)
	
	Если ТекстЧислоМесяц = "января" Тогда
		Возврат "1"
	ИначеЕсли ТекстЧислоМесяц = "февраля" Тогда
		Возврат "2"
	ИначеЕсли ТекстЧислоМесяц = "марта" Тогда
		Возврат "3"
	ИначеЕсли ТекстЧислоМесяц = "апреля" Тогда
		Возврат "4"
	ИначеЕсли ТекстЧислоМесяц = "мая" Тогда
		Возврат "5"
	ИначеЕсли ТекстЧислоМесяц = "июня" Тогда
		Возврат "6"
	ИначеЕсли ТекстЧислоМесяц = "июля" Тогда
		Возврат "7"
	ИначеЕсли ТекстЧислоМесяц = "августа" Тогда
		Возврат "8"
	ИначеЕсли ТекстЧислоМесяц = "сентября" Тогда
		Возврат "9"
	ИначеЕсли ТекстЧислоМесяц = "октября" Тогда
		Возврат "10"
	ИначеЕсли ТекстЧислоМесяц = "ноября" Тогда
		Возврат "11"
	ИначеЕсли ТекстЧислоМесяц = "декабря" Тогда
		Возврат "12"
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДатуИзТекста(ТекстДаты)
	
	Если НЕ ЗначениеЗаполнено(ТекстДаты) Тогда
		Возврат Неопределено;
	КонецЕсли;
	ТекстДаты = СтрЗаменить(ТекстДаты, Символы.НПП	, "");
	ТекстДаты = СтрЗаменить(ТекстДаты, Символы.ПС	, "");
	
	ТекстЧислоДата 	= "1";
	ТекстЧислоМесяц = "1";
	ТекстЧислоГод = "1";
	ПозПробел1 = Найти(" ", ТекстДаты);   
	Если ПозПробел1 > 0 Тогда
		ТекстЧислоДата = Лев(ТекстДаты, ПозПробел1 - 1);
		ТекстДаты = Сред(ТекстДаты, ПозПробел1 + 1);
		ПозПробел2 = Найти(" ", ТекстДаты);
		Если ПозПробел2 > 0 Тогда
			ТекстЧислоМесяц = ПолучитьТекстЧислоМесяц(Лев(ТекстДаты, ПозПробел2 - 1));
			ТекстДаты = Сред(ТекстДаты, ПозПробел2 + 1);
			ПозПробел3 = Найти(" ", ТекстДаты);
			Если ПозПробел3 > 0 Тогда
				ТекстЧислоГод = Лев(ТекстДаты, ПозПробел3 - 1);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Попытка
		Возврат Дата(ТекстЧислоДата, ТекстЧислоМесяц, ТекстЧислоГод);
	Исключение
		Возврат Неопределено
	КонецПопытки;
	
КонецФункции

&НаКлиенте
Функция ПолучитьСтруктуруФайла()
	
	МассивСтруктур = Новый Массив;
	
	//
	Эксель = Новый COMОбъект("Excel.Application");
	
	Эксель_документ = Эксель.Workbooks.Open(ЭтаФорма.ФайлExcel);
	ЛистЭксель = Эксель_документ.Sheets(1);
	
	ТекНаименованиеОрганизации = СокрЛП(Строка(ЛистЭксель.Cells(ЭтаФорма.НомерСтрокиОрганизация, ЭтаФорма.НомерКолонкиОрганизация).Value));
	Объект.Организация = ПолучитьОрганизациюПоНаименованию(ТекНаименованиеОрганизации);
	
	ТекДатаНачала = ПолучитьДатуИзТекста(СокрЛП(Строка(ЛистЭксель.Cells(ЭтаФорма.НомерСтрокиДат, ЭтаФорма.НомерКолонкиДатаНачала).Value)));
	Если НЕ ТекДатаНачала = Неопределено Тогда
		Объект.ДатаНачала = ТекДатаНачала;
	КонецЕсли;
	
	ТекДатаОкончания = ПолучитьДатуИзТекста(СокрЛП(Строка(ЛистЭксель.Cells(ЭтаФорма.НомерСтрокиДат, ЭтаФорма.НомерКолонкиДатаОкончания).Value)));
	Если НЕ ТекДатаОкончания = Неопределено Тогда
		Объект.ДатаОкончания = ТекДатаОкончания;
	КонецЕсли;
	
	НомСтроки = ЭтаФорма.ВысотаШапки + ЭтаФорма.ВысотаШапкиТаблицы + 1;
	БанкСчетДт = ЛистЭксель.Cells(НомСтроки, ЭтаФорма.НомерКолонкиРазделитель).Value;
	
	Пока ЗначениеЗаполнено(БанкСчетДт) Цикл
		
		ТекСуммаПоДебету = ПолучитьЧислоИзСтроки(Строка(ЛистЭксель.Cells(НомСтроки, ЭтаФорма.НомерКолонкиСуммаПоДебету).Value));
		Если ТекСуммаПоДебету = Неопределено Тогда  // этот вид операции не интересен
			НомСтроки = НомСтроки + 1;
			СтрокаПереходСтраницы = ЛистЭксель.Cells(НомСтроки + ЭтаФорма.ОтступМеждуСтраницами, ЭтаФорма.НомерКолонкиСбербанк).Value;
			Если ЗначениеЗаполнено(СтрокаПереходСтраницы)
					И Лев(СтрокаПереходСтраницы, 22) = "Сбербанк Бизнес Онлайн" Тогда
				НомСтроки = НомСтроки + ЭтаФорма.ОтступМеждуСтраницами + ЭтаФорма.ВысотаШапкиТаблицы + 1;
			КонецЕсли;
			БанкСчетДт = ЛистЭксель.cells(НомСтроки, ЭтаФорма.НомерКолонкиРазделитель).Value;
		    Продолжить;
		КонецЕсли;
		
		ТекДата = ПолучитьДатуИзСтроки(Строка(ЛистЭксель.Cells(НомСтроки, ЭтаФорма.НомерКолонкиДатаПроводки).Value));
		Если ТекДата = Неопределено Тогда
			Сообщить("Строка Excel " + Формат(НомСтроки, "ЧГ=") + ": невозможно распознать дату проводки");
			НомСтроки = НомСтроки + 1;
			СтрокаПереходСтраницы = ЛистЭксель.Cells(НомСтроки + ЭтаФорма.ОтступМеждуСтраницами, ЭтаФорма.НомерКолонкиСбербанк).Value;
			Если ЗначениеЗаполнено(СтрокаПереходСтраницы)
					И Лев(СтрокаПереходСтраницы, 22) = "Сбербанк Бизнес Онлайн" Тогда
				НомСтроки = НомСтроки + ЭтаФорма.ОтступМеждуСтраницами + ЭтаФорма.ВысотаШапкиТаблицы + 1;
			КонецЕсли;
			БанкСчетДт = ЛистЭксель.cells(НомСтроки, ЭтаФорма.НомерКолонкиРазделитель).Value;
		    Продолжить;
		КонецЕсли;
		
		ТекФИО = ПолучитьФИОИзНазначенияПлатежа(Строка(ЛистЭксель.Cells(НомСтроки, ЭтаФорма.НомерКолонкиНазначениеПлатежа).Value));
		Если ТекФИО = "" Тогда
			Сообщить("Строка Excel " + Формат(НомСтроки, "ЧГ=") + ": невозможно распознать ФИО держателя в назначении платежа");
			НомСтроки = НомСтроки + 1;
			СтрокаПереходСтраницы = ЛистЭксель.Cells(НомСтроки + ЭтаФорма.ОтступМеждуСтраницами, ЭтаФорма.НомерКолонкиСбербанк).Value;
			Если ЗначениеЗаполнено(СтрокаПереходСтраницы)
					И Лев(СтрокаПереходСтраницы, 22) = "Сбербанк Бизнес Онлайн" Тогда
				НомСтроки = НомСтроки + ЭтаФорма.ОтступМеждуСтраницами + ЭтаФорма.ВысотаШапкиТаблицы + 1;
			КонецЕсли;
			БанкСчетДт = ЛистЭксель.cells(НомСтроки, ЭтаФорма.НомерКолонкиРазделитель).Value;
		    Продолжить;
		КонецЕсли;
		
		ТекФизЛицо = ПолучитьФизЛицоПоНаименованию(ТекФИО);
		Если ТекФизЛицо.Пустая() Тогда
			Сообщить("Строка Excel " + Формат(НомСтроки, "ЧГ=") + ": не найдено физлицо " + ТекФИО);
			НомСтроки = НомСтроки + 1;
			СтрокаПереходСтраницы = ЛистЭксель.Cells(НомСтроки + ЭтаФорма.ОтступМеждуСтраницами, ЭтаФорма.НомерКолонкиСбербанк).Value;
			Если ЗначениеЗаполнено(СтрокаПереходСтраницы)
					И Лев(СтрокаПереходСтраницы, 22) = "Сбербанк Бизнес Онлайн" Тогда
				НомСтроки = НомСтроки + ЭтаФорма.ОтступМеждуСтраницами + ЭтаФорма.ВысотаШапкиТаблицы + 1;
			КонецЕсли;
			БанкСчетДт = ЛистЭксель.cells(НомСтроки, ЭтаФорма.НомерКолонкиРазделитель).Value;
		    Продолжить;
		КонецЕсли;
		
		//
		СтруктураСтроки = Новый Структура;
		СтруктураСтроки.Вставить("Дата"		, ТекДата);
		СтруктураСтроки.Вставить("ФизЛицо"	, ТекФизЛицо);
		СтруктураСтроки.Вставить("Сумма"	, ТекСуммаПоДебету);
		МассивСтруктур.Добавить(СтруктураСтроки);
		
		//
		НомСтроки = НомСтроки + 1;
		СтрокаПереходСтраницы = ЛистЭксель.Cells(НомСтроки + ЭтаФорма.ОтступМеждуСтраницами, ЭтаФорма.НомерКолонкиСбербанк).Value;
		Если ЗначениеЗаполнено(СтрокаПереходСтраницы)
				И Лев(СтрокаПереходСтраницы, 22) = "Сбербанк Бизнес Онлайн" Тогда
			НомСтроки = НомСтроки + ЭтаФорма.ОтступМеждуСтраницами + ЭтаФорма.ВысотаШапкиТаблицы + 1;
		КонецЕсли;
		БанкСчетДт = ЛистЭксель.Cells(НомСтроки, ЭтаФорма.НомерКолонкиРазделитель).Value;
		
	КонецЦикла;
	
	
	//
	Эксель.Quit();
	
	Возврат МассивСтруктур;
	
КонецФункции

Процедура ЗаполнитьТаблицуОплатПоСтруктуреФайла(МассивСтруктур)
	
	Если ЭтаФорма.ТаблицаОплатИзExcel.Количество() > 0 Тогда
		ЭтаФорма.ТаблицаОплатИзExcel.Очистить();
	КонецЕсли;
	
	//
	Для Каждого ТекСтруктура Из МассивСтруктур Цикл
		НоваяСтрока = ЭтаФорма.ТаблицаОплатИзExcel.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтруктура);
	КонецЦикла;
	
	ЭтаФорма.ТаблицаОплатИзExcel.Сортировать("ФизЛицо, Дата, Сумма");
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтаФорма.ПоказыватьПараметрыExcel 	= Истина;
	ЭтаФорма.ПоказыватьСодержимоеФайла 	= Истина;
	
	ЭтаФорма.НомерКолонкиДатаПроводки 		= 3;
	ЭтаФорма.НомерКолонкиСуммаПоДебету 		= 12;
	ЭтаФорма.НомерКолонкиНазначениеПлатежа 	= 27;
	
	ЭтаФорма.НомерСтрокиОрганизация		= 6;
	ЭтаФорма.НомерКолонкиОрганизация	= 15;
	
	ЭтаФорма.НомерСтрокиДат 			= 7;
	ЭтаФорма.НомерКолонкиДатаНачала 	= 15;
	ЭтаФорма.НомерКолонкиДатаОкончания 	= 19;
	
	ЭтаФорма.ВысотаШапки 				= 9;
	ЭтаФорма.ВысотаШапкиТаблицы 		= 2;
	ЭтаФорма.ОтступМеждуСтраницами 		= 4;
	ЭтаФорма.НомерКолонкиРазделитель 	= 6;
	ЭтаФорма.НомерКолонкиСбербанк 		= 7;
	
	
	//
	УстановитьВидимостьПараметрыФайлаExcel();
	УстановитьВидимостьСодержимоеФайлаExcel();
	
	УстановитьОтборАвансовыеОтчеты();
	УстановитьВидимостьАвансовыеОтчеты();
	
КонецПроцедуры


&НаКлиенте
Процедура ФайлExcelНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораФайла =	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);

	ДиалогВыбораФайла.Заголовок					= "Выберите файл (Excel)";
	ДиалогВыбораФайла.ПредварительныйПросмотр	= Ложь;
	ДиалогВыбораФайла.ИндексФильтра				= 0;
	ДиалогВыбораФайла.ПолноеИмяФайла			= ЭтаФорма.ФайлExcel;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		ЭтаФорма.ФайлExcel = ДиалогВыбораФайла.ПолноеИмяФайла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлExcelОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение("explorer " + ЭтаФорма.ФайлExcel);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлExcelПриИзменении(Элемент)
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьПараметрыExcelПриИзменении(Элемент)

	УстановитьВидимостьПараметрыФайлаExcel();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьСодержимоеФайлаПриИзменении(Элемент)

	УстановитьВидимостьСодержимоеФайлаExcel();
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьФайл(Команда)

	МассивСтруктур = ПолучитьСтруктуруФайла();
	
	ЗаполнитьТаблицуОплатПоСтруктуреФайла(МассивСтруктур);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьПериод(Команда)
	
	СтандартныйПериод = Новый СтандартныйПериод(Объект.ДатаНачала, Объект.ДатаОкончания);
	ДиалогРедактирования = Новый ДиалогРедактированияСтандартногоПериода();
	ДиалогРедактирования.Период = СтандартныйПериод;
	Если ДиалогРедактирования.Редактировать() Тогда
		СтандартныйПериод = ДиалогРедактирования.Период;
		Объект.ДатаНачала 		= СтандартныйПериод.ДатаНачала;
		Объект.ДатаОкончания 	= СтандартныйПериод.ДатаОкончания;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(Объект.ДатаНачала)
			И ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
		
		Если ЗначениеЗаполнено(Объект.ДатаОкончания)
				И Объект.ДатаНачала > Объект.ДатаОкончания Тогда
			
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Дата начала периода больше даты окончания периода!";
			СообщениеПользователю.Сообщить();
			
			Объект.ДатаНачала = Объект.ДатаОкончания;
			Возврат;
		КонецЕсли;
		
	Иначе
		
		Если НЕ ЗначениеЗаполнено(Объект.ДатаНачала) Тогда
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Должна быть указана дата начала периода!";
			СообщениеПользователю.Сообщить();
		КонецЕсли;
	
		Если НЕ ЗначениеЗаполнено(Объект.ДатаОкончания) Тогда
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = "Должна быть указана дата окончания периода!";
			СообщениеПользователю.Сообщить();
		КонецЕсли;
	
	КонецЕсли;
	
	УстановитьОтборАвансовыеОтчеты();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	
	УстановитьОтборАвансовыеОтчеты();
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	УстановитьОтборАвансовыеОтчеты();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьОтборАвансовыеОтчеты();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьАвансовыеОтчетыПриИзменении(Элемент)
	
	УстановитьВидимостьАвансовыеОтчеты();
	
КонецПроцедуры


Функция ПолучитьТабДокументСравнение()
	
	ЭтаФорма.ТабДокумент.Очистить();
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала"		, Объект.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания"	, КонецДня(Объект.ДатаОкончания));
	Запрос.УстановитьПараметр("ТаблицаОплат"	, ЭтаФорма.ТаблицаОплатИзExcel.Выгрузить());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОплат.Дата КАК ДеньОплаты,
	|	ТаблицаОплат.ФизЛицо,
	|	ТаблицаОплат.Сумма
	|ПОМЕСТИТЬ ВТТаблицаОплат
	|ИЗ
	|	&ТаблицаОплат КАК ТаблицаОплат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.ФизЛицо КАК ФизЛицо,
	|	ТабличнаяЧасть.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТСуммы
	|ИЗ
	|	Документ.АвансовыйОтчет.Товары КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ТабличнаяЧасть.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.ФизЛицо,
	|	ТабличнаяЧасть.Сумма
	|ИЗ
	|	Документ.АвансовыйОтчет.Услуги КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ТабличнаяЧасть.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.ФизЛицо,
	|	ТабличнаяЧасть.Сумма
	|ИЗ
	|	Документ.АвансовыйОтчет.Прочее КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ТабличнаяЧасть.Ссылка.Проведен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.Ссылка.ФизЛицо,
	|	ТабличнаяЧасть.Сумма
	|ИЗ
	|	Документ.АвансовыйОтчет.ОплатаПоставщикам КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И ТабличнаяЧасть.Ссылка.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТТаблицаОплат.ДеньОплаты КАК Дата,
	|	ВТТаблицаОплат.ФизЛицо КАК ФизЛицо,
	|	ВТТаблицаОплат.Сумма,
	|	ВЫБОР
	|		КОГДА ВТАвансовыеОтчеты.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА """"
	|		ИНАЧЕ ""v""
	|	КОНЕЦ КАК ЕстьВ1С
	|ИЗ
	|	ВТТаблицаОплат КАК ВТТаблицаОплат
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|			ВТСуммы.ФизЛицо КАК ФизЛицо,
	|			ВТСуммы.Сумма КАК Сумма
	|		ИЗ
	|			ВТСуммы КАК ВТСуммы) КАК ВТАвансовыеОтчеты
	|		ПО (ВТАвансовыеОтчеты.ФизЛицо = ВТТаблицаОплат.ФизЛицо)
	|			И (ВТАвансовыеОтчеты.Сумма = ВТТаблицаОплат.Сумма)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицо,
	|	Дата";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Если РезультатЗапроса.Пустой() Тогда
		Сообщить("Нет данных для отчета!");
		Возврат ТабличныйДокумент;
	КонецЕсли;
	
	//
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СравнениеВыпискиСАвансовымиОтчетамиу";
	
	ОбработкаОб = РеквизитФормыВЗначение("Объект");
	ТекМакет = ОбработкаОб.ПолучитьМакет("Макет");
	
	ОбластьМакетаЗаголовок 	= ТекМакет.ПолучитьОбласть("Заголовок");
	ОбластьМакетаСтрока 	= ТекМакет.ПолучитьОбласть("Строка");
	
	ОбластьМакетаЗаголовок.Параметры.ДатаНачала 	= Формат(Объект.ДатаНачала		, "ДЛФ=Д");
	ОбластьМакетаЗаголовок.Параметры.ДатаОкончания 	= Формат(Объект.ДатаОкончания	, "ДЛФ=Д");
	ТабличныйДокумент.Вывести(ОбластьМакетаЗаголовок);
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбластьМакетаСтрока.Параметры.Заполнить(Выборка);
		ОбластьМакетаСтрока.Параметры.Дата = Формат(Выборка.Дата, "ДЛФ=Д ");;
		ТабличныйДокумент.Вывести(ОбластьМакетаСтрока);
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	
    Возврат ТабличныйДокумент;
	
КонецФункции

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	
	ТабличныйДокумент = ПолучитьТабДокументСравнение();
	Если ТабличныйДокумент = Новый ТабличныйДокумент Тогда
		Возврат;
	КонецЕсли;
	
	ЭтаФорма.ТабДокумент = ТабличныйДокумент;
	
КонецПроцедуры
