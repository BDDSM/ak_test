
Процедура КнопкаВыполнитьНажатие(Кнопка)
	ТекПользователь = Справочники.Пользователи.НайтиПоРеквизиту("ИдентификаторПользователяИБ",ПользователиИнформационнойБазы.ТекущийПользователь().УникальныйИдентификатор);
	Автор = ТекПользователь.ФизЛицо.Наименование;
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("SRV-SQL03");
	СтрЗапрос = "INSERT INTO [vv03].[dbo].[Reiting_reset_period]([id_tov],[id_kontr],[date_reset],[Reason],[Autor],[Current_reiting]) VALUES(&id_tov, '&id_kontr','&date_reset','&Reason','&Autor',&Current_reiting);";
	СтрЗапрос = СтрЗаменить(СтрЗапрос, "&id_tov", Формат(id_tov,"ЧГ=0")); 
	СтрЗапрос = СтрЗаменить(СтрЗапрос, "&id_kontr", Формат(id_kontr,"ЧГ=0")); 
	СтрЗапрос = СтрЗаменить(СтрЗапрос, "&date_reset", Формат(ДатаОбнуления,"ДФ=yyyy-MM-dd"));
	СтрЗапрос = СтрЗаменить(СтрЗапрос, "&Reason", ПричинаОбнуленияРейтинга);
	СтрЗапрос = СтрЗаменить(СтрЗапрос, "&Autor", Автор);
	//+++AK GREK 20.12.2017 ИП-00017358.01
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РейтингиТоваров.Номенклатура,
	               |	РейтингиТоваров.Характеристика,
	               |	РейтингиТоваров.Рейтинг,
	               |	РейтингиТоваров.ДатаОбновления КАК ДатаОбновления
	               |ИЗ
	               |	РегистрСведений.РейтингиТоваров КАК РейтингиТоваров
	               |ГДЕ
	               |	РейтингиТоваров.Номенклатура.id_tov = &id_tov
	               |	И РейтингиТоваров.Характеристика.id_kontr = &id_kontr
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ДатаОбновления УБЫВ";
	Запрос.УстановитьПараметр("id_tov", id_tov);
	Запрос.УстановитьПараметр("id_kontr", id_kontr);
	Рез = Запрос.Выполнить();
	ТекущийРейтинг = 0;
	Если НЕ Рез.Пустой() Тогда
		Рейтинг = Рез.Выгрузить();
		ТекущийРейтинг = Рейтинг[0].Рейтинг;
	КонецЕсли;
	СтрЗапрос = СтрЗаменить(СтрЗапрос, "&Current_reiting", Формат(ТекущийРейтинг,"ЧРД=.; ЧГ=0"));
	//---AK	
	rs = ADOСоединение.Execute(СтрЗапрос);
	ADOСоединение.Close();
	//+++AK GREK 20.12.2017 ИП-00017358.01
	УведомитьТехнологаОбОбнуленииРейтинга();
	//---AK
	Закрыть();
КонецПроцедуры

Процедура УведомитьТехнологаОбОбнуленииРейтинга()
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("SRV-SQL03");
	СтрЗапрос = "SELECT [id],[id_tov],[id_kontr],[date_reset],[date_add],[Reason],[Autor],[Current_reiting] FROM [vv03].[dbo].[Reiting_reset_period] WHERE id_tov = &id_tov";
	Если id_kontr <> 0 Тогда
		СтрЗапрос = СтрЗапрос + " AND id_kontr = " + Формат(id_kontr,"ЧГ=");	
	КонецЕсли;
	СтрЗапрос = СтрЗаменить(СтрЗапрос, "&id_tov", Формат(id_tov,"ЧГ="));
	rs = ADOСоединение.Execute(СтрЗапрос);
	
	Пока НЕ rs = Неопределено Цикл
		Если rs.Fields.Count > 0 Тогда
			Прервать;
		КонецЕсли;
			rs = rs.NextRecordSet();
		КонецЦикла;

	Попытка
		rs.MoveFirst();	
		Пока НЕ rs.EOF() Цикл
			СтрокаДоб = ИсторияОбнуленийРейтинга.Добавить();
			СтрокаДоб.Дата = СтрЗаменить(Строка(rs.Fields("date_reset").Value),"-","");
			//Сообщить(rs.Fields("date_reset").Value);
			СтрокаДоб.Причина = rs.Fields("Reason").Value;
			СтрокаДоб.Автор = rs.Fields("Autor").Value;
			//+++AK GREK 20.12.2017 ИП-00017358.01
			СтрокаДоб.ДействовавшийРейтинг = rs.Fields("Current_reiting").Value;
			//---AK	
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	ADOСоединение.Close();
	ИсторияОбнуленийРейтинга.Сортировать("Дата");
	
	Если ИсторияОбнуленийРейтинга.Количество() > 0 Тогда
		УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
		Почта = Новый ИнтернетПочта;
		Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
		Почта.Подключиться(Профиль);
		Письмо = Новый ИнтернетПочтовоеСообщение;
		ОбнуляемыйТовар = Справочники.Номенклатура.НайтиПоРеквизиту("id_tov",id_tov);
		Если НЕ ЗначениеЗаполнено(ОбнуляемыйТовар) Тогда
			Возврат;	
		КонецЕсли;
		Письмо.Тема = "Обнулен рейтинг товара " + ОбнуляемыйТовар.Наименование;
		Письмо.ИмяОтправителя  	= "" + СокрЛП(УчетнаяЗапись) + "";
		Письмо.Отправитель     	= "" + СокрЛП(УчетнаяЗапись) + "";
		ТекстПисьма = "
		|Рейтинг для товара &НаименованиеТовара был только что обнулен.
		|
		|История обнулений рейтинга, для данного товара:
		|&ИсторияОбнуления";
		
		ТекстСообщения = Письмо.Тексты.Добавить();
		ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;
		ТекстПисьма = "<p>"+СтрЗаменить(ТекстПисьма,Символы.ПС,"<br>")+"</p>";			
		ТекстПисьма = СтрЗаменить(ТекстПисьма, "&НаименованиеТовара" , ОбнуляемыйТовар.Наименование);
		ТекстПисьма = СтрЗаменить(ТекстПисьма, "&ИсторияОбнуления" , ТекстHTMLИсторияОбнулений(ИсторияОбнуленийРейтинга));
		//Сообщить(ТекстПисьма);
		ТекстСообщения.Текст = ТекстПисьма;
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	СоответствиеОбъектРольСрезПоследних.РольПользователя
		               |ПОМЕСТИТЬ ВТ_Роли
		               |ИЗ
		               |	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних КАК СоответствиеОбъектРольСрезПоследних
		               |ГДЕ
		               |	(СоответствиеОбъектРольСрезПоследних.Объект.id_tov = &id_tov
		               |			ИЛИ СоответствиеОбъектРольСрезПоследних.Объект.id_kontr = &id_kontr
		               |				И СоответствиеОбъектРольСрезПоследних.Объект.Владелец.id_tov = &id_tov
		               |			ИЛИ СоответствиеОбъектРольСрезПоследних.Объект.ИД = &id_kontr)
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ_Роли.РольПользователя,
		               |	РолиПользователейСоставРоли.Сотрудник,
		               |	КонтактнаяИнформация.Представление
		               |ИЗ
		               |	ВТ_Роли КАК ВТ_Роли
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		               |			ПО РолиПользователейСоставРоли.Сотрудник = КонтактнаяИнформация.Объект
		               |		ПО ВТ_Роли.РольПользователя = РолиПользователейСоставРоли.Ссылка
		               |ГДЕ
		               |	КонтактнаяИнформация.Тип = &Тип
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |УНИЧТОЖИТЬ ВТ_Роли";
		Запрос.УстановитьПараметр("Тип", ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты"));
		Запрос.УстановитьПараметр("id_tov",id_tov);	
		Запрос.УстановитьПараметр("id_kontr",id_kontr);
		Рез = Запрос.Выполнить();
		Если Рез.Пустой() Тогда
			//Сообщить("Не найден адрес отправки письма подтверждения передачи новой торговой точки. Письмо не отправлено.");
			Возврат;
		КонецЕсли;
		АдресаПолучателя = Рез.Выгрузить().ВыгрузитьКолонку("Представление");
		Для Каждого СтрПолучатель из АдресаПолучателя цикл 
			Получатель = Письмо.Получатели.Добавить();
			Получатель.Адрес = СокрЛП(СтрПолучатель);
			//Сообщить(СтрПолучатель.Представление);
		КонецЦикла;
		//Получатель = Письмо.Получатели.Добавить();
		//Получатель.Адрес = "grek@automacon.ru";
		//
		Попытка
			Почта.Послать(Письмо);
		Исключение
		КонецПопытки;	
	КонецЕсли;
КонецПроцедуры


Функция ТекстHTMLИсторияОбнулений(ТаблицаДанных)
	
	ТекстHTML = "<table border><tr align='center'><td>Дата</td><td>Автор</td><td>Причина</td><td>Значение рейтинга до обнуления</td></tr>";

	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		ТекстHTML = ТекстHTML + "<tr>";
		ТекстHTML = ТекстHTML + "<td>" + Формат(СтрокаТаблицы.Дата,"ДФ=dd.MM.yyyy") + "</td>";
		ТекстHTML = ТекстHTML + "<td>" + СокрЛП(СтрокаТаблицы.Автор) + "</td>";
		ТекстHTML = ТекстHTML + "<td>" + СокрЛП(СтрокаТаблицы.Причина) + "</td>";
		ТекстHTML = ТекстHTML + "<td>" + СтрокаТаблицы.ДействовавшийРейтинг + "</td>";
		ТекстHTML = ТекстHTML + "</tr>";
	КонецЦикла;
	ТекстHTML = ТекстHTML + "</table>";
	
	Возврат ТекстHTML;
	
КонецФункции

