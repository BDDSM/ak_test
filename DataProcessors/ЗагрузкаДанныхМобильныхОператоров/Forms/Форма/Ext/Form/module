
Процедура КнопкаВыполнитьНажатие(Кнопка)
	//подключаемся к эксель 
	Попытка 
		Excel = Новый COMОбъект("Excel.Application"); 
		Excel.WorkBooks.Open(ПутьКФайлу);
 		Состояние("Обработка файла Microsoft Excel..."); 
	Исключение Сообщить("Ошибка при открытии файла с помощью Excel! Загрузка не будет произведена!"); 
		Сообщить(ОписаниеОшибки()); 
		Возврат; 
	КонецПопытки; 
	
	Попытка //Открываем необходимый лист 
		Excel.Sheets(1).Select(); 
		// лист 1, по умолчанию
	Исключение 
		//Закрываем Excel 
		Excel.ActiveWorkbook.Close();
 		Excel = 0;
 		Сообщить("Файл "+Строка(ПутьКФайлу)+" не соответствует необходимому формату! Первый лист не найден!"); 
		ОтменитьТранзакцию(); 
		Возврат; 
	КонецПопытки;
	
	
	//Получим количество строк и колонок. 
	//В разных версиях Excel получаются по-разному, поэтому сначала определим версию Excel 
	Версия = Лев(Excel.Version,Найти(Excel.Version,".")-1); 
	Если Версия = "8" тогда 
		ФайлСтрок = Excel.Cells.CurrentRegion.Rows.Count; 
		ФайлКолонок = Макс(Excel.Cells.CurrentRegion.Columns.Count, 13); 
	Иначе ФайлСтрок = Excel.Cells(1,1).SpecialCells(11).Row; 
		ФайлКолонок = Excel.Cells(1,1).SpecialCells(11).Column; 
	Конецесли; 

	Данные.Очистить();
	Таблица = Данные.Выгрузить();

	Для НС = 5 по ФайлСтрок Цикл 
		// НС указываем с какой строки начинать обработку 
		Состояние("Файл "+Строка(ПутьКФайлу)+": Обрабатывается первый лист "+Строка(Формат(?(ФайлСтрок=0,0,((100*НС)/ФайлСтрок)),"ЧЦ=3; ЧДЦ=0"))+" %");
		ОбработкаПрерыванияПользователя();  
		НоваяСтрока = Таблица.Добавить(); 
		Для НомерКолонки = 1 по Таблица.Колонки.Количество() Цикл  
			НоваяСтрока[НомерКолонки-1] = Excel.Cells(НС, НомерКолонки).Text;   
		КонецЦикла; 
	КонецЦикла;
	
	Данные.Загрузить(Таблица);
	
	Excel.DisplayAlerts = 0;
	Excel.Quit(); 
	Excel.DisplayAlerts = 1;
КонецПроцедуры

Процедура ПутьКФайлуНачалоВыбора(Элемент, СтандартнаяОбработка)
	ДиалогВыбора = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбора.Заголовок = "Выберите файл";
	
	Если ДиалогВыбора.Выбрать() Тогда
		ПутьКФайлу = ДиалогВыбора.ПолноеИмяФайла;
	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыДействие(Кнопка)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗагружаемыеДанные.Дата,
	               |	ЗагружаемыеДанные.Телефон,
	               |	ЗагружаемыеДанные.НаименованиеКлиента,
	               |	ЗагружаемыеДанные.БизнесУслуга1,
	               |	ЗагружаемыеДанные.БизнесУслуга2,
	               |	ЗагружаемыеДанные.Сумма
	               |ПОМЕСТИТЬ ВТ_ЗагружаемыеДанные
	               |ИЗ
	               |	&ЗагружаемыеДанные КАК ЗагружаемыеДанные
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ЗагружаемыеДанные.Телефон КАК Абонент,
	               |	ВТ_ЗагружаемыеДанные.НаименованиеКлиента,
	               |	ВТ_ЗагружаемыеДанные.БизнесУслуга1 КАК Услуга,
	               |	ВТ_ЗагружаемыеДанные.БизнесУслуга2 КАК ВидУслуги,
	               |	ВТ_ЗагружаемыеДанные.Сумма КАК Расходы,
	               |	&ТекущаяДата КАК Период
	               |ИЗ
	               |	ВТ_ЗагружаемыеДанные КАК ВТ_ЗагружаемыеДанные
	               |ГДЕ
	               |	ВТ_ЗагружаемыеДанные.Сумма > 0";
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Запрос.УстановитьПараметр("ЗагружаемыеДанные", Данные.Выгрузить());
	НаборЗаписей = РегистрыСведений.ЕжедневныеРасходамНаМобильнуюСвязь.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Установить(ТекущаяДата());
	НаборЗаписей.Прочитать();
	НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
	НаборЗаписей.Записать();
КонецПроцедуры

Процедура ОсновныеДействияФормыДействие1(Кнопка)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЕжедневныеРасходамНаМобильнуюСвязьСрезПоследних.Абонент,
	               |	СУММА(ЕжедневныеРасходамНаМобильнуюСвязьСрезПоследних.Расходы) КАК Расходы,
	               |	ЕжедневныеРасходамНаМобильнуюСвязьСрезПоследних.Период
	               |ПОМЕСТИТЬ ВТ_РасходыПоНомерам
	               |ИЗ
	               |	РегистрСведений.ЕжедневныеРасходамНаМобильнуюСвязь.СрезПоследних КАК ЕжедневныеРасходамНаМобильнуюСвязьСрезПоследних
	               |ГДЕ
	               |	НЕ ЕжедневныеРасходамНаМобильнуюСвязьСрезПоследних.Услуга ПОДОБНО ""%периодические и разовые начисления%""
	               |	И ЕжедневныеРасходамНаМобильнуюСвязьСрезПоследних.Абонент <> """"
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЕжедневныеРасходамНаМобильнуюСвязьСрезПоследних.Абонент,
	               |	ЕжедневныеРасходамНаМобильнуюСвязьСрезПоследних.Период
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_РасходыПоНомерам.Абонент,
	               |	ВТ_РасходыПоНомерам.Расходы,
	               |	КонтактнаяИнформация.Объект,
	               |	КонтактнаяИнформация.Объект.Руководитель,
	               |	ВТ_РасходыПоНомерам.Период,
	               |	ВТ_РасходыПоНомерам.Расходы - &ЛимитРасходов КАК ПревышениеЛимита
	               |ПОМЕСТИТЬ ВТ_РасходыПоФизЛицам
	               |ИЗ
	               |	ВТ_РасходыПоНомерам КАК ВТ_РасходыПоНомерам
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |		ПО (ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(11)) ПОДОБНО ""%"" + ВТ_РасходыПоНомерам.Абонент + ""%"")
	               |ГДЕ
	               |	ВТ_РасходыПоНомерам.Расходы > &ЛимитРасходов
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_РасходыПоФизЛицам.Абонент КАК Телефон,
	               |	ВТ_РасходыПоФизЛицам.Расходы,
	               |	ВТ_РасходыПоФизЛицам.Объект КАК Абонент,
	               |	ВТ_РасходыПоФизЛицам.ОбъектРуководитель КАК Руководитель,
	               |	ВТ_РасходыПоФизЛицам.Период,
	               |	КонтактнаяИнформация.Представление КАК EmailРуководителя,
	               |	ВТ_РасходыПоФизЛицам.ПревышениеЛимита
	               |ИЗ
	               |	ВТ_РасходыПоФизЛицам КАК ВТ_РасходыПоФизЛицам
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |		ПО ВТ_РасходыПоФизЛицам.ОбъектРуководитель = КонтактнаяИнформация.Объект
	               |ГДЕ
	               |	(КонтактнаяИнформация.Тип = &Тип
	               |			ИЛИ ВТ_РасходыПоФизЛицам.ОбъектРуководитель ЕСТЬ NULL)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_РасходыПоНомерам
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_РасходыПоФизЛицам";
	Запрос.УстановитьПараметр("Тип", ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты"));
	Запрос.УстановитьПараметр("ЛимитРасходов", 200);
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ПревышенияЛимита = Рез.Выгрузить();
	ДанныеДляРассылки = Новый ТаблицаЗначений;
	Для Каждого Колонка из ПревышенияЛимита.Колонки Цикл
		ДанныеДляРассылки.Колонки.Добавить(Колонка.Имя);
	КонецЦикла;	
	Для Каждого Стр из ПревышенияЛимита цикл
		//Проконтролируем отсутствие дублей
		Отбор = Новый Структура();
		Отбор.Вставить("Телефон", Стр.Телефон);
		НайденыеСтроки = ПревышенияЛимита.НайтиСтроки(Отбор);
		Если НЕ НайденыеСтроки.Количество() > 1 Тогда
			НоваяСтрока = ДанныеДляРассылки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Стр);
		КонецЕсли;
	КонецЦикла;
	
	Если ДанныеДляРассылки.Количество()>0 Тогда
		УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
		Почта = Новый ИнтернетПочта;
		Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
		Почта.Подключиться(Профиль);
		
		Адресаты = ДанныеДляРассылки.Скопировать(,"EmailРуководителя");
		Адресаты.Свернуть("EmailРуководителя");
		Для Каждого Адресат из Адресаты цикл
			Если НЕ ЗначениеЗаполнено( Адресат.EmailРуководителя) Тогда
				Продолжить;
			КонецЕсли;
			Отбор = Новый Структура();
			Отбор.Вставить("EmailРуководителя", Адресат.EmailРуководителя);
			НайденыеСтроки = ДанныеДляРассылки.НайтиСтроки(Отбор);
			Если НайденыеСтроки.Количество() > 0 Тогда
				Письмо = Новый ИнтернетПочтовоеСообщение;
				Письмо.Тема = "Превышение лимита по моб. связи за " + НайденыеСтроки[0].Период;
				Письмо.ИмяОтправителя  	= "" + СокрЛП(УчетнаяЗапись) + "";
				Письмо.Отправитель     	= "" + СокрЛП(УчетнаяЗапись) + "";
				ТекстСообщения = Письмо.Тексты.Добавить();
				ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;
				ТекстПисьма = "По следующим телефоным номерам, было зафиксировано превышение допустимого уровня ежедневных расходов:" + Символы.ПС + Символы.ПС + "&ТаблицаНомеров";
				ТекстHTML = "<table border><tr align='center'><td>тел. номер</td><td>Абонент</td><td>Расходы</td><td>Превышение лимита</td></tr>";
				Для Каждого Стр Из НайденыеСтроки Цикл
					//ТекстПисьма = ТекстПисьма + "Для тел. номера " + Стр.Телефон + " (" + Стр.Абонент + ") расходы составили " + Стр.Расходы + " руб., лимит был превышен на " + Стр.ПревышениеЛимита + " руб." + Символы.ПС;
					ТекстHTML = ТекстHTML + "<tr>";
					ТекстHTML = ТекстHTML + "<td>" + Стр.Телефон + "</td>";
					ТекстHTML = ТекстHTML + "<td>" + СокрЛП(Стр.Абонент) + "</td>";
					ТекстHTML = ТекстHTML + "<td>" + Стр.Расходы + "</td>";
					ТекстHTML = ТекстHTML + "<td>" + Стр.ПревышениеЛимита + "</td>";
					ТекстHTML = ТекстHTML + "</tr>";
				КонецЦикла;
				ТекстHTML = ТекстHTML + "</table>";	
				ТекстПисьма = СтрЗаменить(ТекстПисьма, "&ТаблицаНомеров" , ТекстHTML);
				ТекстПисьма = "<p>"+СтрЗаменить(ТекстПисьма,Символы.ПС,"<br>")+"</p>";
				ТекстСообщения.Текст = ТекстПисьма;
				//Получатель = Письмо.Получатели.Добавить();
				//Получатель.Адрес = СокрЛП(Адресат.EmailРуководителя);
				Попытка
					Почта.Послать(Письмо);
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЦикла;
		
		//Отправим сводное письмо
		Письмо = Новый ИнтернетПочтовоеСообщение;
		Письмо.Тема = "Превышение лимита по моб. связи за " + НайденыеСтроки[0].Период;
		Письмо.ИмяОтправителя  	= "" + СокрЛП(УчетнаяЗапись) + "";
		Письмо.Отправитель     	= "" + СокрЛП(УчетнаяЗапись) + "";
		ТекстСообщения = Письмо.Тексты.Добавить();
		ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;
		ТекстПисьма = "По следующим телефоным номерам, было зафиксировано превышение допустимого уровня ежедневных расходов:" + Символы.ПС + Символы.ПС + "&ТаблицаНомеров";
		ТекстHTML = "<table border><tr align='center'><td>тел. номер</td><td>Абонент</td><td>Расходы</td><td>Превышение лимита</td></tr>";
		Для Каждого Стр Из ПревышенияЛимита Цикл
			//ТекстПисьма = ТекстПисьма + "Для тел. номера " + Стр.Телефон + " (" + Стр.Абонент + ") расходы составили " + Стр.Расходы + " руб., лимит был превышен на " + Стр.ПревышениеЛимита + " руб." + Символы.ПС;
			ТекстHTML = ТекстHTML + "<tr>";
			ТекстHTML = ТекстHTML + "<td>" + Стр.Телефон + "</td>";
			ТекстHTML = ТекстHTML + "<td>" + СокрЛП(Стр.Абонент) + "</td>";
			ТекстHTML = ТекстHTML + "<td>" + Стр.Расходы + "</td>";
			ТекстHTML = ТекстHTML + "<td>" + Стр.ПревышениеЛимита + "</td>";
			ТекстHTML = ТекстHTML + "</tr>";
		КонецЦикла;
		ТекстHTML = ТекстHTML + "</table>";	
		ТекстПисьма = СтрЗаменить(ТекстПисьма, "&ТаблицаНомеров" , ТекстHTML);
		ТекстПисьма = "<p>"+СтрЗаменить(ТекстПисьма,Символы.ПС,"<br>")+"</p>";
		ТекстСообщения.Текст = ТекстПисьма;
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = "grek@automacon.ru";
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = "buh06@vkusvill.ru";
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = "marp@automacon.ru";
		Попытка
			Почта.Послать(Письмо);
		Исключение
		КонецПопытки;

	КонецЕсли;
КонецПроцедуры

Процедура ОсновныеДействияФормыДействие2(Кнопка)
	ТестовыйАдрес = "grek@automacon.ru";
	//Подключаемся к почте
	ДатаНачало = НачалоДня(ТекущаяДата()-3600*24);
	ДатаКонец = КонецДня(ТекущаяДата());
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки("megafon@vkusvill.ru");
	Если НЕ ЗначениеЗаполнено(УчетнаяЗапись) Тогда
		Сообщить("Не найдена учетная запись!");
		Возврат;
	КонецЕсли;
	Почта = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Почта.Подключиться(Профиль);
	
	//ПОлучаем и обрабатываем заголовки писем
	Заголовки = Почта.ПолучитьЗаголовки();
	ПолучаемоеСообщение = новый массив;
	ПолученыеОшибки = новый ТаблицаЗначений;
	ПолученыеОшибки.Колонки.Добавить("ТекстОшибки");
	ПолученыеОшибки.Колонки.Добавить("Email");
	ПолученыеОшибки.Колонки.Добавить("ОписаниеОшибки");
	ПолученыеОшибки.Колонки.Добавить("ЗначениеОшибки");
	сч=0;
	Пока сч<Заголовки.Количество() цикл
		Если Найти(Заголовки[сч].Тема, "Отчет для ВкусВилл") > 0 
			И Заголовки[сч].ДатаОтправления >=ДатаНачало И Заголовки[сч].ДатаОтправления <=ДатаКонец Тогда
			ПолучаемоеСообщение.Добавить(Заголовки[сч]);
			//Если заголовок сообшает о том что письмо содержит сообщение об ошибке получим его и разберем
			Попытка
				ПолученноеСообщение = Почта.Выбрать(ложь,  ПолучаемоеСообщение);
			Исключение
				Сообщить(ОписаниеОшибки());	
			КонецПопытки;
			
			Для каждого Сообщение из ПолученноеСообщение Цикл
				Для каждого Вложение из Сообщение.Вложения цикл
					Если Найти(Вложение.ИмяФайла, ".xlsx")>0 Тогда
						Файл = Вложение.Данные;	
						ПутьКФайлу = КаталогВременныхФайлов() + Вложение.ИмяФайла;
						Файл.Записать(ПутьКФайлу); 
						КнопкаВыполнитьНажатие(Кнопка);
						УдалитьФайлы(ПутьКФайлу);
						ПутьКФайлу = "";
						Возврат;
					КонецЕсли;	
				КонецЦикла;
			КонецЦикла;
			ПолучаемоеСообщение.Очистить();
		КонецЕсли;
		сч=сч+1;
	КонецЦикла;
КонецПроцедуры

