&НаСервере
Процедура ЗагрузитьРасходник(ШтрихКод)
	Док = ВнешниеДанные.ПолучитьДокументПоШтрихКоду(ШтрихКод);
	Если НЕ ЗначениеЗаполнено(Док)
		ИЛИ ТипЗнч(Док) <> Тип("ДокументСсылка.РасходныйОрдерСклад") Тогда
		Сообщить(НСтр("ru = 'Не найден документ'"));
	КонецЕсли;
	Объект.Товары.Очистить();
	Для каждого Стр Из Док.Товары Цикл
		НовСтр=Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,Стр);
		НовСтр.КоличествоПоОрдеру=Стр.Количество;
		НовСтр.КоличествоОсталось=Стр.Количество;
		
	КонецЦикла; 
	СкладДляШтучногоТовара= Док.Склад.ДляШтучногоТовара;
	Если Найти(Нрег(Строка(Док.Склад)),Нрег("мороз"))>0 Тогда
		ЭтоЗаморозка=Истина;
	Иначе	
		ЭтоЗаморозка=(Ложь);
	КонецЕсли; 
	Объект.РасходныйОрдер=Док;
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СчитатьДанныеПоШтрихКоду(ШтрихКод)
	Возврат ВнешниеДанные.СчитатьДанныеПоШтрихКоду(ШтрихКод);	
КонецФункции // ()

&НаКлиенте
Процедура ВвестиШтрихКод(Команда)
	ШтрихКод = ОткрытьФормуМодально("ОбщаяФорма.ФормаВводаШтрихкода");
	ТекНоменклатура=Неопределено;
	
	Если Объект.Товары.Количество()=0 И ЗначениеЗаполнено(Объект.РасходныйОрдер) Тогда
		Если СкладДляШтучногоТовара И Лев(ШтрихКод,2)="85" Тогда
			КолПал=0;
			Если ВвестиЧисло(КолПал,"Введите количество паллет",2) Тогда
			Иначе
				Возврат
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 
	ВвестиШтрихКодСервер(ШтрихКод,ТекНоменклатура);
	Если ЗначениеЗаполнено(ТекНоменклатура) Тогда
		СтруктураОтбор = Новый Структура("Номенклатура", ТекНоменклатура);
		МасСтр=Объект.Товары.НайтиСтроки(СтруктураОтбор);
		Если МасСтр.Количество() Тогда
			Элементы.Товары.ТекущаяСтрока=МасСтр[0].ПолучитьИдентификатор();
		КонецЕсли; 
	КонецЕсли; 
КонецПроцедуры	

&НаСервере
Процедура ВвестиШтрихКодСервер(ШтрихКод,ТекНоменклатура)
	УстановитьПривилегированныйРежим(Истина);
	Если ЗначениеЗаполнено(ШтрихКод) Тогда
		Если Лев(ШтрихКод,2)="93" Тогда
			ЗагрузитьРасходник(ШтрихКод);
			
		Иначе
			ДанныеШтрихкода = СчитатьДанныеПоШтрихКоду(ШтрихКод);
			Если НЕ ЗначениеЗаполнено(ДанныеШтрихкода.Номенклатура) И Объект.Товары.Количество() Тогда
				Сообщить(НСтр("ru = 'По штрих-коду не найдена номенклатура'"));
			Иначе
				Если ДанныеШтрихкода.Свойство("КоличествоКоробок") Тогда
					КолКоробок=ДанныеШтрихкода.КоличествоКоробок;
				Иначе	
					КолКоробок=1;
				КонецЕсли; 
				
				Товары=Объект.Товары.Выгрузить();
				Товары.Свернуть("Номенклатура,Характеристика,ЕдиницаИзмерения,КоличествоВКоробке,РазрешенаСборкаАналогов",
				"КоличествоУРЗ,КоличествоПоОрдеру,КоличествоПринятое,КоличествоОсталось,КоличествоКоробокПринятое");
				
				
				
				
				
				//ФоновыйОбмен.ДобавитьЗаписьВЖурналОбмена("Сборка. Получен шк "+Строка(Штрихкод),,,ЭтаФорма.ЛогПользователь,ЭтаФорма.ЛогДокумент,ЭтаФорма.ЛогНоменклатура);
				Если Объект.Товары.Количество()=0 И ЗначениеЗаполнено(Объект.РасходныйОрдер) Тогда
					Если СкладДляШтучногоТовара Тогда
						ДокОбъект=Объект.РасходныйОрдер.ПолучитьОбъект();
						ДокОбъект.КоличествоПаллет = КолПал;
						ДокОбъект.Записать();
						
						//ФоновыйОбмен.ДобавитьЗаписьВЖурналОбмена("Введено количество паллет: "+Строка(КолПал),,,ЭтаФорма.ЛогПользователь,ЭтаФорма.ЛогДокумент,"");
						КонецЕсли; 
					ДанныеШтрихкода=ПолучитьДанныеПоШКПаллеты(Штрихкод);
					Если ДанныеШтрихкода=Неопределено Тогда
						Возврат;
					КонецЕсли;
					Если ДанныеШтрихкода.Документ=Объект.РасходныйОрдер Тогда
						Сообщить("Работа по расходнику завершена");
						Объект.РасходныйОрдер=Неопределено;
					Иначе	
						ТекстСооб="Документ паллеты не соответствует собираемому документу";
						Сообщить(ТекстСооб);
					КонецЕсли;
					Возврат;
				КонецЕсли;
				//Если ОжиданиеСканированияБейджаКладовщика Тогда
				//	ЭтоКладовщик=ОтправитьШКБейджаКладовщика(Штрихкод);
				//	Если ЭтоКладовщик=Неопределено Тогда
				//		Возврат;
				//	КонецЕсли; 
				//	Парам=Новый Структура("КладовщикИД",КладовщикИД);
				//    Если ЭтоКладовщик Тогда
				//		ОткрытьФорму("Обработка.СборкаПроверкаКладовщиком.Форма.ФормаИтогов",Парам,ЭтаФорма);
				//	Иначе	
				//		СообщениеПользователю="Данный штрихкод не принадлежит кладовщику";
				//	КонецЕсли;
				//	Возврат;
				//КонецЕсли; 
				//Если Лев(Штрихкод,2)="85" и СтрДлина(Штрихкод)=15 Тогда
				//    ДанныеШтрихкода=ПолучитьДанныеПоШКПаллеты(Штрихкод);
				//	Если ДанныеШтрихкода=Неопределено Тогда
				//		Возврат;
				//	КонецЕсли;
				//	ТекстСооб="Документ - "+ДанныеШтрихкода.ПредставлениеДокумента+"
				//	| Торговая точка - "+ДанныеШтрихкода.ПолучательНаименование;
				//	Если Не ДанныеШтрихкода.ШКДокумента=ОбщегоНазначенияВызовСервера.ПолучитьЗначениеКонстанты("ШтрихкодДокументаСборки") Тогда
				//		ТекстСооб=ТекстСооб+"
				//		| Документ паллеты не соответствует собираемому документу";
				//	КонецЕсли;
				//	СообщениеПользователю=ТекстСооб;
				//	Возврат;
				//КонецЕсли;
				КоличествоДобКоробок=1;
				Если Лев(Штрихкод,2)="88"  И Не СтрДлина(Штрихкод)=14 Тогда
					//ФоновыйОбмен.ДобавитьЗаписьВЖурналОбмена("ШК "+Строка(ШтрихКод)+"ПолучитьДанныеПоШКБольшойКоробки Начало ",,,ЭтаФорма.ЛогПользователь,ЭтаФорма.ЛогДокумент,"");
					//ДанныеШтрихкодаКоробки=ОбщегоНазначенияКлиент.ПолучитьДанныеШтрихкода(Штрихкод);
					//Если ДанныеШтрихкодаКоробки=Неопределено Тогда
					//	Возврат;
					//КонецЕсли;
					//ДанныеШтрихкода = ОбщегоНазначенияКлиент.ПолучитьДанныеШтрихкода(ДанныеШтрихкодаКоробки.ШтрихКодНоменклатуры);
					//ДанныеШтрихкода.Количество = ДанныеШтрихкода.КоличествоИзХарактеристики*ДанныеШтрихкодаКоробки.КоличествоКоробок;
					КоличествоДобКоробок=ДанныеШтрихкода.КоличествоКоробок;
					//ФоновыйОбмен.ДобавитьЗаписьВЖурналОбмена("ШК "+Строка(ШтрихКод)+"ПолучитьДанныеПоШКБольшойКоробки Конец ",,,ЭтаФорма.ЛогПользователь,ЭтаФорма.ЛогДокумент,"");
				КонецЕсли; 
				ДанныеШтрихкода.Вставить("ЭтоДатаПоУмолчанию", Ложь);
				
				
				
				
				Если НЕ ЗначениеЗаполнено(ДанныеШтрихкода.Номенклатура) Тогда			
					Сообщить("Штрихкод " + Штрихкод + " не найден в базе данных!");
					Возврат;
				КонецЕсли;
				ТекНоменклатура=ДанныеШтрихкода.Номенклатура;	
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ХарактеристикиНоменклатуры.Ссылка КАК Характеристика,
				|	ХарактеристикиНоменклатуры.Владелец КАК Номенклатура,
				|	ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, 0) КАК КоличествоВКоробке
				|ИЗ
				|	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
				|		ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов.Объект
				|			И (ЗначенияСвойствОбъектов.Свойство = &Свойство)
				|			И (ХарактеристикиНоменклатуры.Владелец = &Ном)
				|ГДЕ
				|	ХарактеристикиНоменклатуры.Владелец = &Ном";
				
				Запрос.УстановитьПараметр("Ном", ДанныеШтрихкода.Номенклатура);
				Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ТЗХарактеристики = РезультатЗапроса.Выгрузить();
				МасСтр=ТЗХарактеристики.НайтиСтроки(Новый Структура("Характеристика",ДанныеШтрихкода.Характеристика));
				ДанныеШтрихкода.Вставить("КоличествоИзХарактеристики",МасСтр[0].КоличествоВКоробке);
				
		
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	АналогиРазрешенныеПриСборке.Номенклатура
					|ИЗ
					|	РегистрСведений.АналогиРазрешенныеПриСборке КАК АналогиРазрешенныеПриСборке
					|ГДЕ
					|	АналогиРазрешенныеПриСборке.Расходник = &Расходник";
				
				Запрос.УстановитьПараметр("Расходник", Объект.РасходныйОрдер);
				
				РезультатЗапроса = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				РазрешенныеАналоги.Очистить();
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					РазрешенныеАналоги.Добавить(ВыборкаДетальныеЗаписи.Номенклатура);
				КонецЦикла;
				

				
				
				Если ДанныеШтрихкода.КоличествоИзХарактеристики<>0
					И ДанныеШтрихкода.КоличествоИзХарактеристики<>ДанныеШтрихкода.Количество
					И Не ЭтаФорма.СкладДляШтучногоТовара И Не (Лев(Штрихкод,2)="88" И Не СтрДлина(Штрихкод)=14) Тогда
					ДанныеШтрихкода.Количество = ДанныеШтрихкода.КоличествоИзХарактеристики;
				КонецЕсли;
				
				Если ((СтрДлина(ШтрихКод)=14
					) ИЛИ (Лев(Штрихкод,2)="88"  И Не СтрДлина(Штрихкод)=14))
					И ЭтаФорма.СкладДляШтучногоТовара Тогда
					Сообщить("На складе для штучного товара нельзя использовать коробочные штрихкоды");
					//ФоновыйОбмен.ДобавитьЗаписьВЖурналОбмена("ШК "+Строка(ШтрихКод)+". На складе для штучного товара нельзя использовать коробочные штрихкоды",,,ЭтаФорма.ЛогПользователь,ЭтаФорма.ЛогДокумент,"");
					Возврат;
				КонецЕсли;
				
				//ФлВесовой=ОбщегоНазначенияКлиент.ЗначениеРеквизита(ДанныеШтрихкода.Номенклатура,"Весовой");
				//Если ФлВесовой Тогда
				//	СтрВес=" (Вес "+Строка(ДанныеШтрихкода.Количество)+" кг)";
				//Иначе	
				//	СтрВес="";
				//КонецЕсли; 
				
				//
				
				
				МасСтр=Товары.НайтиСтроки(Новый Структура("Номенклатура", ДанныеШтрихкода.Номенклатура));
				Если МасСтр.Количество()>0 И ЭтоЗаморозка= Истина Тогда
					ФлЕстьСовпадения=Ложь;
					Для каждого Стр Из МасСтр Цикл
						МасСтрХар1=ТЗХарактеристики.НайтиСтроки(Новый Структура("Характеристика",Стр.Характеристика));
						МасСтрХар2=ТЗХарактеристики.НайтиСтроки(Новый Структура("Характеристика",ДанныеШтрихкода.Характеристика));
						
						Если МасСтрХар1[0].КоличествоВКоробке=МасСтрХар2[0].КоличествоВКоробке Тогда
							ФлЕстьСовпадения=Истина;
						КонецЕсли; 
					КонецЦикла;
					Если Не ФлЕстьСовпадения Тогда
						Сообщить(Строка(ДанныеШтрихкода.Номенклатура) + " <" +  ДанныеШтрихкода.Характеристика + "> - НЕ СОБИРАЕМ! Не подходит количество в коробке");
						//ФоновыйОбмен.ДобавитьЗаписьВЖурналОбмена("Сборка. ШК "+ Строка(Штрихкод)+" не собираем.  Не подходит количество в коробке",,,ЭтаФорма.ЛогПользователь,ЭтаФорма.ЛогДокумент,ЭтаФорма.ЛогНоменклатура);
						Возврат;
						
					КонецЕсли; 
				КонецЕсли;  
				
				
				
				// Обычное сканирование
				СтруктураОтбор = Новый Структура("Номенклатура, Характеристика", ДанныеШтрихкода.Номенклатура, ДанныеШтрихкода.Характеристика);
				СтруктураОтбор1 = Новый Структура("Номенклатура", ДанныеШтрихкода.Номенклатура);
				//	
				
				//Если НепринимаемыеТовары.НайтиСтроки(СтруктураОтбор).Количество() > 0 Тогда
				//	СообщениеПользователю=Строка(ДанныеШтрихкода.Номенклатура) + " <" +  ДанныеШтрихкода.Характеристика + "> - НЕ СОБИРАЕМ!";
				//	ФоновыйОбмен.ДобавитьЗаписьВЖурналОбмена("Сборка. ШК "+ Строка(Штрихкод)+" не собираем",,,ЭтаФорма.ЛогПользователь,ЭтаФорма.ЛогДокумент,ЭтаФорма.ЛогНоменклатура);
				//	Возврат;
				//КонецЕсли;
				ХарКвант=ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка");
				
				Если Не ЗначениеЗаполнено(ДанныеШтрихкода.ДатаПроизводства) Тогда
					МассивДатыПроиз=Объект.Товары.НайтиСтроки(СтруктураОтбор);
					ЕстьСтрокаСЗапДП=Ложь;
					Для каждого Стр Из МассивДатыПроиз Цикл
						Если ЗначениеЗаполнено(Стр.ДатаПроизводства) Тогда
							ДанныеШтрихкода.Вставить("ДатаПроизводства",Стр.ДатаПроизводства);
							ЕстьСтрокаСЗапДП=Истина;
							Если ЗначениеЗаполнено(Стр.Характеристика) Тогда
								ХарКвант=Стр.Характеристика;
							КонецЕсли; 
							Прервать;
						КонецЕсли; 
					КонецЦикла; 
					Если Не ЕстьСтрокаСЗапДП Тогда
						МассивДатыПроиз1=Объект.Товары.НайтиСтроки(СтруктураОтбор1);
						Для каждого Стр Из МассивДатыПроиз1 Цикл
							Если ЗначениеЗаполнено(Стр.Характеристика) И Не ЗначениеЗаполнено(ХарКвант) Тогда
								ХарКвант=Стр.Характеристика;
							КонецЕсли; 
							Если ЗначениеЗаполнено(Стр.ДатаПроизводства) Тогда
								ДанныеШтрихкода.Вставить("ДатаПроизводства",Стр.ДатаПроизводства);
								Прервать;
							КонецЕсли; 
						КонецЦикла; 
					КонецЕсли; 
				КонецЕсли; 
				
				
				//ФоновыйОбмен.ДобавитьЗаписьВЖурналОбмена("Штрихкод " + Штрихкод +  ?(Не ФлВесовой,". Количество ",". Вес ")+Строка(ДанныеШтрихкода.Количество)
				//+". Дата производства "+Строка(Формат(ДанныеШтрихкода.ДатаПроизводства,"ДФ=dd.MM.yyyy"))
				//+". Коробок "+Строка(КоличествоДобКоробок),,,ЭтаФорма.ЛогПользователь,ЭтаФорма.ЛогДокумент,ЭтаФорма.ЛогНоменклатура);
				
				// Найдем товар в таблице товаров
				НайденныеСтроки=Новый Массив;
				
				МассивНайденныеСтрокиОднаСтрока = Товары.НайтиСтроки(СтруктураОтбор);
				
				Если МассивНайденныеСтрокиОднаСтрока.Количество()=0
					И РазрешенныеАналоги.НайтиПоЗначению(ДанныеШтрихкода.Номенклатура)=Неопределено Тогда
					Сообщить(Строка(ДанныеШтрихкода.Номенклатура) + " <" +  ДанныеШтрихкода.Характеристика + "> - НЕ СОБИРАЕМ!");
					Возврат;
					
					
				КонецЕсли; 
				
				
				МассивНайденныеСтроки = Товары.НайтиСтроки(СтруктураОтбор1);
				
				
				Если Не МассивНайденныеСтрокиОднаСтрока.Количество()=0 Тогда
					НайденныеСтроки.Добавить(МассивНайденныеСтрокиОднаСтрока[0]);
				КонецЕсли;
				Для Сч=0 По МассивНайденныеСтроки.Количество()-1 Цикл
					Если МассивНайденныеСтроки[Сч].Характеристика = ДанныеШтрихкода.Характеристика Тогда
						Продолжить;
					КонецЕсли; 
					НайденныеСтроки.Добавить(МассивНайденныеСтроки[Сч]);
				КонецЦикла; 
				
				
				
				Если НайденныеСтроки.Количество() = 0 Тогда
					//НоваяСтрока = НепринимаемыеТовары.Добавить();
					//
					//ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеШтрихкода);
					//ФоновыйОбмен.ДобавитьЗаписьВЖурналОбмена("Сборка. ШК "+ Строка(Штрихкод)+" нет в документе, не добавляем",,,ЭтаФорма.ЛогПользователь,ЭтаФорма.ЛогДокумент,ЭтаФорма.ЛогНоменклатура);
					Сообщить(Строка(ДанныеШтрихкода.Номенклатура) + " <" +  ДанныеШтрихкода.Характеристика + "> - НЕ СОБИРАЕМ!");
					Возврат;
					
				Иначе
					НайденКоличествоПринятое=0;
					НайденКоличествоПоОрдеру=0;
					Для каждого Стр Из НайденныеСтроки Цикл
						НайденКоличествоПринятое=НайденКоличествоПринятое+Стр.КоличествоПринятое;
						НайденКоличествоПоОрдеру=НайденКоличествоПоОрдеру+Стр.КоличествоПоОрдеру;
					КонецЦикла;
					
				КонецЕсли;
				
				Если ДанныеШтрихкода.КоличествоИзХарактеристики<>0 Тогда
					ДанныеШтрихкода.Вставить("КоличествоКвант",ДанныеШтрихкода.КоличествоИзХарактеристики);
					КонтрольКоробок=ДанныеШтрихкода.КоличествоИзХарактеристики;
				Иначе
					МасСтр=ТЗХарактеристики.НайтиСтроки(Новый Структура("Характеристика",ХарКвант));
					КонтрольКоробок=МасСтр[0].КоличествоВКоробке;
					//Если ЗначениеЗаполнено(ХарКвант) и Не ПолучитьРеквизит(ХарКвант,"Квант")=0 Тогда
					//     КонтрольКоробок=ПолучитьРеквизит(ХарКвант,"Квант");
					//ИначеЕсли ЗначениеЗаполнено(ДанныеШтрихкода.КоличествоКвант) Тогда	
					//     КонтрольКоробок=ДанныеШтрихкода.КоличествоКвант;
					//Иначе
					//     КонтрольКоробок=ДанныеШтрихкода.Количество/?(КоличествоДобКоробок=0,1,КоличествоДобКоробок);
					//КонецЕсли; 
				КонецЕсли;
				
				
				
				// Проверим излишек, если уже не спрашивали про эту позицию
				Если Не СравнитьСУчетомПогрешности(НайденКоличествоПринятое + ДанныеШтрихкода.Количество, НайденКоличествоПоОрдеру, КонтрольКоробок) 
					и НайденКоличествоПринятое + ДанныеШтрихкода.Количество > НайденКоличествоПоОрдеру И НайденКоличествоПоОрдеру>0 Тогда
					Сообщить(Строка(ДанныеШтрихкода.Номенклатура) + " <" +  ДанныеШтрихкода.Характеристика + "> - НЕ СОБИРАЕМ!  Обнаружен излишек");
					Возврат;
				КонецЕсли; 
				
				
				
				ДобавитьКоробкуИзм(НайденныеСтроки,Товары, ДанныеШтрихкода,КоличествоДобКоробок);
				//
				//
				//ЗаписатьТоварыКПриемке();
				//
				//УстановитьСтроку(ДанныеШтрихкода.Номенклатура, ДанныеШтрихкода.Характеристика);
				//ФоновыйОбмен.ДобавитьЗаписьВЖурналОбмена("Завершение. ШК " + Штрихкод +  ?(Не ФлВесовой,". Количество ",". Вес ")+Строка(ДанныеШтрихкода.Количество)+". Дата производства "+Строка(Формат(ДанныеШтрихкода.ДатаПроизводства,"ДФ=dd.MM.yyyy"))+". Коробок "+Строка(КоличествоДобКоробок)
				//+ 	". Дата работы с документом "+Строка(ОбщегоНазначенияВызовСервера.ПолучитьЗначениеКонстанты("ДатаНачалаРаботыПоДокументу")),,,ЭтаФорма.ЛогПользователь,ЭтаФорма.ЛогДокумент,ЭтаФорма.ЛогНоменклатура);
				//			
				//			
				
				
				
				
				
			КонецЕсли;	
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Процедура ДобавитьКоробкуИзм(МассивСтрок,Товары, ДанныеШтрихкода,КоличествоДобКоробок=1,СтрВес="")
	//ФоновыйОбмен.ДобавитьЗаписьВЖурналОбмена("Сборка. Начало добавления коробкиИзм."+СтрВес,,,ЭтаФорма.ЛогПользователь,ЭтаФорма.ЛогДокумент,ЭтаФорма.ЛогНоменклатура);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЕдиницаПоКлассификатору"	, ДанныеШтрихкода.Номенклатура.БазоваяЕдиницаИзмерения);
	Запрос.УстановитьПараметр("Номенклатура"			, ДанныеШтрихкода.Номенклатура);
	
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЕдиницыИзмерения.Ссылка КАК ЕдиницаИзмерения
	|ИЗ
	|	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|ГДЕ
	|	ЕдиницыИзмерения.Владелец = &Номенклатура
	|	И ЕдиницыИзмерения.ЕдиницаПоКлассификатору = &ЕдиницаПоКлассификатору
	|	И НЕ ЕдиницыИзмерения.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ДанныеШтрихкода.Вставить("ЕдиницаИзмерения", Выборка.ЕдиницаИзмерения);
	КонецЕсли;
	
	
	
	ПерваяИтерация=Истина;
	УбратьИзДругихСтрок=0;
	УбратьИзДругихСтрок1=0;
	Кол=МассивСтрок.Количество()-1;
	СчМас=0;
	Пока Истина Цикл
		Если СчМас>Кол Тогда
			Прервать;
		КонецЕсли; 
		Строка=МассивСтрок[СчМас];
		Если ПерваяИтерация Тогда
			СтруктураОтбор = Новый Структура("Номенклатура, Характеристика", ДанныеШтрихкода.Номенклатура, ДанныеШтрихкода.Характеристика);
			МассивНайденныеСтроки= Товары.НайтиСтроки(СтруктураОтбор);
			СчИтог=-1;
			Сч=0;
			Для каждого СтрТов Из Товары Цикл
				Если СтрТов.Номенклатура=ДанныеШтрихкода.Номенклатура Тогда
					СчИтог=Сч;
					Прервать;
				КонецЕсли;
				Сч=Сч+1;  
			КонецЦикла;
			Если Не (Строка.Номенклатура=ДанныеШтрихкода.Номенклатура и Строка.Характеристика=ДанныеШтрихкода.Характеристика) Тогда
				НайдСтр=Товары.Вставить(СчИтог);
				НайдСтр.Номенклатура=ДанныеШтрихкода.Номенклатура;
				НайдСтр.Характеристика=ДанныеШтрихкода.Характеристика;
				НайдСтр.КоличествоВКоробке = ?(ДанныеШтрихкода.КоличествоКвант=0,ДанныеШтрихкода.Количество/?(КоличествоДобКоробок=0,1,КоличествоДобКоробок),ДанныеШтрихкода.КоличествоКвант);
				НайдСтр.КоличествоКоробокПринятое = НайдСтр.КоличествоКоробокПринятое + КоличествоДобКоробок;
				НайдСтр.КоличествоПринятое = НайдСтр.КоличествоПринятое + ДанныеШтрихкода.Количество;
				Если НайдСтр.КоличествоПринятое>НайдСтр.КоличествоПоОрдеру И Не СравнитьСУчетомПогрешности(НайдСтр.КоличествоПринятое,НайдСтр.КоличествоПоОрдеру,НайдСтр.КоличествоВКоробке) Тогда
					УбратьИзДругихСтрок=НайдСтр.КоличествоПринятое-НайдСтр.КоличествоПоОрдеру;
					НайдСтр.КоличествоПоОрдеру=НайдСтр.КоличествоПринятое;
				КонецЕсли; 
				НайдСтр.КоличествоОсталось = НайдСтр.КоличествоПоОрдеру - НайдСтр.КоличествоПринятое;
				//НайдСтр.ЕдиницаИзмерения = ПолучитьЕдиницуИзмерения(НайдСтр.Номенклатура);
				НайдСтр.РазрешенаСборкаАналогов=НЕ РазрешенныеАналоги.НайтиПоЗначению(ДанныеШтрихкода.Номенклатура)=Неопределено;
				МассивСтрок.Вставить(0,НайдСтр);
				Кол=Кол+1;
			Иначе	
				НайдСтр=Строка;
				НайдСтр.КоличествоВКоробке = ?(ДанныеШтрихкода.КоличествоКвант=0,ДанныеШтрихкода.Количество/?(КоличествоДобКоробок=0,1,КоличествоДобКоробок),ДанныеШтрихкода.КоличествоКвант);
				НайдСтр.КоличествоКоробокПринятое = НайдСтр.КоличествоКоробокПринятое + КоличествоДобКоробок;
				НайдСтр.КоличествоПринятое = НайдСтр.КоличествоПринятое + ДанныеШтрихкода.Количество;
				Если НайдСтр.КоличествоПринятое>НайдСтр.КоличествоПоОрдеру И Не СравнитьСУчетомПогрешности(НайдСтр.КоличествоПринятое,НайдСтр.КоличествоПоОрдеру,НайдСтр.КоличествоВКоробке) Тогда
					УбратьИзДругихСтрок=НайдСтр.КоличествоПринятое-НайдСтр.КоличествоПоОрдеру;
					НайдСтр.КоличествоПоОрдеру=НайдСтр.КоличествоПринятое;
				КонецЕсли; 
				НайдСтр.КоличествоОсталось = НайдСтр.КоличествоПоОрдеру - НайдСтр.КоличествоПринятое;
				//НайдСтр.ЕдиницаИзмерения = ПолучитьЕдиницуИзмерения(НайдСтр.Номенклатура);
				НайдСтр.РазрешенаСборкаАналогов=НЕ РазрешенныеАналоги.НайтиПоЗначению(ДанныеШтрихкода.Номенклатура)=Неопределено;
			КонецЕсли; 
		Иначе	
			Если Не УбратьИзДругихСтрок=0 И Строка.КоличествоОсталось>0 И Не СравнитьСУчетомПогрешности(Строка.КоличествоОсталось,0,Строка.КоличествоВКоробке) Тогда
				Строка.КоличествоПоОрдеру=Строка.КоличествоПоОрдеру-Мин(Строка.КоличествоОсталось,УбратьИзДругихСтрок);
				Строка.КоличествоОсталось = Строка.КоличествоОсталось - Мин(Строка.КоличествоОсталось,УбратьИзДругихСтрок);
				УбратьИзДругихСтрок =  УбратьИзДругихСтрок - Мин(Строка.КоличествоОсталось,УбратьИзДругихСтрок);
			КонецЕсли; 
		КонецЕсли; 
		//______________________
		
		Если ПерваяИтерация Тогда
			СтруктураОтбора = Новый Структура("Номенклатура, Характеристика, ДатаПроизводства");
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, ДанныеШтрихкода);
			МассивНайденныеСтроки = Объект.Товары.НайтиСтроки(СтруктураОтбора);
			
			СчИтог=-1;
			Сч=0;
			Для каждого СтрТов Из Объект.Товары Цикл
				Если СтрТов.Номенклатура=ДанныеШтрихкода.Номенклатура И СтрТов.Характеристика=ДанныеШтрихкода.Характеристика  Тогда
					СчИтог=Сч;
					Прервать;
				КонецЕсли;
				Сч=Сч+1;  
			КонецЦикла;
			Сч=0;
			Если СчИтог=-1 Тогда
				Для каждого СтрТов Из Объект.Товары Цикл
					Если СтрТов.Номенклатура=ДанныеШтрихкода.Номенклатура Тогда
						СчИтог=Сч;
						Прервать;
					КонецЕсли;
					Сч=Сч+1;  
				КонецЦикла;
			КонецЕсли; 
			Если МассивНайденныеСтроки.Количество()=0 Тогда
				НайдСтр=Объект.Товары.Вставить(?(СчИтог=-1,0,СчИтог));
				НайдСтр.Номенклатура=ДанныеШтрихкода.Номенклатура;
				НайдСтр.Характеристика=ДанныеШтрихкода.Характеристика;
				НайдСтр.КоличествоКоробокПринятое = НайдСтр.КоличествоКоробокПринятое + КоличествоДобКоробок;
				НайдСтр.КоличествоПринятое = НайдСтр.КоличествоПринятое + ДанныеШтрихкода.Количество;
				НайдСтр.ДатаПроизводства  =ДанныеШтрихкода.ДатаПроизводства;
				НайдСтр.КоличествоВКоробке  =ДанныеШтрихкода.КоличествоИзХарактеристики;
				НайдСтр.ЕдиницаИзмерения  =ДанныеШтрихкода.ЕдиницаИзмерения;
				НайдСтр.РазрешенаСборкаАналогов  =Строка.РазрешенаСборкаАналогов;
				
				Если НайдСтр.КоличествоПринятое>НайдСтр.КоличествоПоОрдеру
					И Не СравнитьСУчетомПогрешности(НайдСтр.КоличествоПринятое,НайдСтр.КоличествоПоОрдеру,Строка.КоличествоВКоробке) Тогда
					УбратьИзДругихСтрок1=НайдСтр.КоличествоПринятое-НайдСтр.КоличествоПоОрдеру;
					НайдСтр.КоличествоПоОрдеру=НайдСтр.КоличествоПринятое;
				КонецЕсли; 
				НайдСтр.КоличествоОсталось  =НайдСтр.КоличествоПоОрдеру-НайдСтр.КоличествоПринятое;
				
			Иначе	
				НайдСтр=МассивНайденныеСтроки[0];
				НайдСтр.КоличествоКоробокПринятое = НайдСтр.КоличествоКоробокПринятое + КоличествоДобКоробок;
				НайдСтр.КоличествоПринятое = НайдСтр.КоличествоПринятое + ДанныеШтрихкода.Количество;
				НайдСтр.КоличествоВКоробке  =ДанныеШтрихкода.КоличествоИзХарактеристики;
				НайдСтр.ЕдиницаИзмерения  =ДанныеШтрихкода.ЕдиницаИзмерения;
				НайдСтр.РазрешенаСборкаАналогов  =Строка.РазрешенаСборкаАналогов;
				Если НайдСтр.КоличествоПринятое>НайдСтр.КоличествоПоОрдеру
					И Не СравнитьСУчетомПогрешности(НайдСтр.КоличествоПринятое,НайдСтр.КоличествоПоОрдеру,Строка.КоличествоВКоробке) Тогда
					УбратьИзДругихСтрок1=НайдСтр.КоличествоПринятое-НайдСтр.КоличествоПоОрдеру;
					НайдСтр.КоличествоПоОрдеру=НайдСтр.КоличествоПринятое;
				КонецЕсли; 
				НайдСтр.КоличествоОсталось  =НайдСтр.КоличествоПоОрдеру-НайдСтр.КоличествоПринятое;
			КонецЕсли;
			
			СтруктураОтбора = Новый Структура("Номенклатура, Характеристика");
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, ДанныеШтрихкода);
			МассивНайденныеСтроки = Объект.Товары.НайтиСтроки(СтруктураОтбора);
			Для каждого СтрДаты Из МассивНайденныеСтроки Цикл
				Если Не СтрДаты.ДатаПроизводства=ДанныеШтрихкода.ДатаПроизводства  Тогда
					Если Не УбратьИзДругихСтрок1=0 И СтрДаты.КоличествоПоОрдеру-СтрДаты.КоличествоПринятое>0 
						И Не СравнитьСУчетомПогрешности(СтрДаты.КоличествоПоОрдеру-СтрДаты.КоличествоПринятое,0,Строка.КоличествоВКоробке) Тогда
						Осталось=СтрДаты.КоличествоПоОрдеру-СтрДаты.КоличествоПринятое;
						СтрДаты.КоличествоПоОрдеру=СтрДаты.КоличествоПоОрдеру-Мин(Осталось,УбратьИзДругихСтрок1);
						СтрДаты.КоличествоОсталось=СтрДаты.КоличествоПоОрдеру-СтрДаты.КоличествоПринятое;
						УбратьИзДругихСтрок1 =  УбратьИзДругихСтрок1 - Мин(Осталось,УбратьИзДругихСтрок1);
					КонецЕсли; 
				КонецЕсли; 
			КонецЦикла; 
		Иначе
			СтруктураОтбора = Новый Структура("Номенклатура, Характеристика");
			ЗаполнитьЗначенияСвойств(СтруктураОтбора, Строка);
			МассивНайденныеСтроки = Объект.Товары.НайтиСтроки(СтруктураОтбора);
			Для каждого СтрДаты Из МассивНайденныеСтроки Цикл
				Если Не УбратьИзДругихСтрок1=0 И СтрДаты.КоличествоПоОрдеру-СтрДаты.КоличествоПринятое>0
					И Не СравнитьСУчетомПогрешности(СтрДаты.КоличествоПоОрдеру-СтрДаты.КоличествоПринятое,0,Строка.КоличествоВКоробке) Тогда
					Осталось=СтрДаты.КоличествоПоОрдеру-СтрДаты.КоличествоПринятое;
					СтрДаты.КоличествоПоОрдеру=СтрДаты.КоличествоПоОрдеру-Мин(Осталось,УбратьИзДругихСтрок1);
					СтрДаты.КоличествоОсталось=СтрДаты.КоличествоПоОрдеру-СтрДаты.КоличествоПринятое;
					УбратьИзДругихСтрок1 =  УбратьИзДругихСтрок1 - Мин(Осталось,УбратьИзДругихСтрок1);
				КонецЕсли; 
			КонецЦикла; 
		КонецЕсли;
		ПерваяИтерация=Ложь;
		СчМас=СчМас+1;
	КонецЦикла; 
	
	//Если Не ЭтоРевизор Тогда
	КолСтр=Объект.Товары.Количество();
	Для Сч=0 По КолСтр-1 Цикл
		Если ДанныеШтрихкода.Номенклатура=Объект.Товары[КолСтр-1-Сч].Номенклатура И 
			Объект.Товары[КолСтр-1-Сч].КоличествоКоробокПринятое=0 И 
			СравнитьСУчетомПогрешности(Объект.Товары[КолСтр-1-Сч].КоличествоПоОрдеру,0,
			Товары.НайтиСтроки(Новый Структура("Номенклатура, Характеристика",Объект.Товары[КолСтр-1-Сч].Номенклатура,
			Объект.Товары[КолСтр-1-Сч].Характеристика))[0].КоличествоВКоробке)  Тогда
			Объект.Товары.Удалить(КолСтр-1-Сч);
		КонецЕсли; 
	КонецЦикла;
	КолСтр=Товары.Количество();
	Для Сч=0 По КолСтр-1 Цикл
		Если  ДанныеШтрихкода.Номенклатура=Товары[КолСтр-1-Сч].Номенклатура И  Товары[КолСтр-1-Сч].КоличествоКоробокПринятое=0 
			И  СравнитьСУчетомПогрешности(Товары[КолСтр-1-Сч].КоличествоПоОрдеру,0,Товары[КолСтр-1-Сч].КоличествоВКоробке)  Тогда
			Товары.Удалить(КолСтр-1-Сч);
		КонецЕсли; 
	КонецЦикла;
	//КонецЕсли; 
	МасСтрНом=Объект.Товары.НайтиСтроки(Новый Структура("Номенклатура",ДанныеШтрихкода.Номенклатура));
	ФлГотово=Истина;
	МасХар=Новый Массив;
	Для каждого Эл Из МасСтрНом Цикл
		Если МасХар.Найти(Эл.Характеристика)=Неопределено Тогда
			МасХар.Добавить(Эл.Характеристика);
		КонецЕсли; 
	КонецЦикла; 
	
	Для каждого ЭлХар Из МасХар Цикл
		КолКороб=0;
		КолОсталосьОбщ=0;
		Для каждого Эл Из МасСтрНом Цикл
			Если ЭлХар=Эл.Характеристика Тогда
				Если Эл.КоличествоВКоробке<>0 Тогда
					КолКороб=Эл.КоличествоВКоробке;
				КонецЕсли; 
				КолОсталосьОбщ=КолОсталосьОбщ+Эл.КоличествоОсталось;
			КонецЕсли; 
		КонецЦикла; 
		КолОсталосьОбщ=?(КолОсталосьОбщ<0,-КолОсталосьОбщ,КолОсталосьОбщ);
		КолКороб=?(КолКороб=0,0.1,КолКороб);
		Если НЕ КолОсталосьОбщ<=КолКороб/2 Тогда
			ФлГотово=Ложь;
			Прервать;
		КонецЕсли; 
	КонецЦикла; 
	
	Для каждого Эл Из МасСтрНом Цикл
		Эл.Готово=ФлГотово;
	КонецЦикла; 
	
	КолСтр=Объект.Товары.Количество();
	Для Сч=0 По КолСтр-1 Цикл
		Если  Объект.Товары[КолСтр-1-Сч].Готово Тогда
			Объект.Товары.Удалить(КолСтр-1-Сч);
		КонецЕсли; 
	КонецЦикла;
	
	//ФлВесовой=ОбщегоНазначенияКлиент.ЗначениеРеквизита(ДанныеШтрихкода.Номенклатура,"Весовой");
	//Если ФлВесовой Тогда
	//	ОбщегоНазначенияВызовСервера.ДобавитьВесовуюКоробку(ДанныеШтрихкода,КоличествоДобКоробок);
	//КонецЕсли; 
	//
	//ФоновыйОбмен.ДобавитьЗаписьВЖурналОбмена("Сборка. Конец добавления коробкиИзм."+СтрВес,,,ЭтаФорма.ЛогПользователь,ЭтаФорма.ЛогДокумент,ЭтаФорма.ЛогНоменклатура);
КонецПроцедуры


&НаСервере
Функция СравнитьСУчетомПогрешности(Сумма1,Сумма2, КоличествоДляВычисленияПогрешности)
	Погр=?(КоличествоДляВычисленияПогрешности=0 ИЛИ СкладДляШтучногоТовара,0.1,КоличествоДляВычисленияПогрешности/2);
	Возврат ?(Сумма1-Сумма2>0,Сумма1-Сумма2,-Сумма1+Сумма2)<= Погр;
КонецФункции // ()

&НаСервереБезКонтекста
Функция ПолучитьРеквизит(Ссыл,Рекв)
	Возврат Ссыл[Рекв];
КонецФункции 

&НаСервере
Функция ПолучитьДанныеПоШКПаллеты(ШтрихКодПаллеты)
	
	
	СтрДанные = ВнешниеДанные.СчитатьДанныеПоШтрихКоду(ШтрихКодПаллеты);
	СтруктураВозврат=Новый Структура;
	Если Лев(ШтрихКодПаллеты,2)="85" Тогда
		Если НЕ ЗначениеЗаполнено(СтрДанные.Объект)
			ИЛИ ТипЗнч(СтрДанные.Объект) <> Тип("СправочникСсылка.СоставПаллеты") Тогда
			Сообщить("По штрих-коду не найден паллета");
			Возврат Неопределено;
		КонецЕсли;
		
		СтруктураВозврат.Вставить("Паллета", Строка(СтрДанные.Объект.УникальныйИдентификатор()));
		СтруктураВозврат.Вставить("ПредставлениеДокумента", Строка(СтрДанные.Объект.РасходныйОрдер));
		Если ЗначениеЗаполнено(СтрДанные.Объект.РасходныйОрдер) Тогда
			Запрос = Новый Запрос();
			Запрос.УстановитьПараметр("Документ", СтрДанные.Объект.РасходныйОрдер);
			Запрос.Текст = "ВЫБРАТЬ
			|	МаршрутныйЛистРасходныеОрдера.Документ,
			|	МАКСИМУМ(МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут) КАК Маршрут
			|ИЗ
			|	Документ.МаршрутныйЛист.РасходныеОрдера КАК МаршрутныйЛистРасходныеОрдера
			|ГДЕ
			|	МаршрутныйЛистРасходныеОрдера.Ссылка.ПометкаУдаления = ЛОЖЬ
			|	И МаршрутныйЛистРасходныеОрдера.Документ = &Документ
			|
			|СГРУППИРОВАТЬ ПО
			|	МаршрутныйЛистРасходныеОрдера.Документ";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				СтруктураВозврат.Вставить("Маршрут", Строка(Выборка.Маршрут));
			КонецЕсли;	
		Иначе
			СтруктураВозврат.Вставить("Маршрут", "");
		КонецЕсли;	
		Попытка
			СтруктураВозврат.Вставить("ПолучательНаименование", Строка(СтрДанные.Объект.РасходныйОрдер.Получатель));
		Исключение
			СтруктураВозврат.Вставить("ПолучательНаименование", "");
		КонецПопытки;
		СтруктураВозврат.Вставить("Документ", (СтрДанные.Объект.РасходныйОрдер));
	КонецЕсли; 
	
	Возврат  (СтруктураВозврат);
	
КонецФункции
