Процедура ПодключитьЗУПНажатиеМодуль() Экспорт
	СтрокаПодключения = ПолныеПрава.ПолучитьСтрокуПодключения_Зуп();
	Если ОбщегоНазначения.ЭтоКопияБазы() Тогда
		СтрокаПодключения=СтрЗаменить(СтрокаПодключения,"Srvr=""srv-sql01""; Ref=""HRM""","Srvr=""srv-sql02""; Ref=""HRM_test""");
	КонецЕсли;	
	v82COMОбъект = Новый COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Зуп() + ".COMConnector");
	Попытка
		v82 = v82COMОбъект.Connect(СтрокаПодключения);
		ПодключениеУстановлено=Истина;
	Исключение
		ПодключениеУстановлено=Ложь;
		Сообщить("Не удалось подключиться к базе зарплаты");
		Возврат;
	КонецПопытки;
	
	Запрос = v82.NewObject("Запрос");
	Запрос.Текст = "ВЫБРАТЬ
	|	ЛицевыеСчетаРаботниковОрганизации.Банк.Код КАК БанкКод,
	|	ЛицевыеСчетаРаботниковОрганизации.ФизЛицо.Код КАК ФизЛицоКод,
	|	ЛицевыеСчетаРаботниковОрганизации.НомерЛицевогоСчета КАК НомерЛицевогоСчета,
	|	ЛицевыеСчетаРаботниковОрганизации.Банк.Наименование,
	|	ЛицевыеСчетаРаботниковОрганизации.Банк.ОсновнойБанковскийСчет.Банк.Наименование КАК ОсновнойБанковскийСчетБанк,
	|	ЛицевыеСчетаРаботниковОрганизации.Банк.ОсновнойБанковскийСчет.Банк.Код КАК ОсновнойБанковскийСчетБанкКод,
	|	ЛицевыеСчетаРаботниковОрганизации.ФизЛицо.Наименование,
	|	ЛицевыеСчетаРаботниковОрганизации.ФизЛицо.ИНН
	|ИЗ
	|	РегистрСведений.ЛицевыеСчетаРаботниковОрганизации КАК ЛицевыеСчетаРаботниковОрганизации";
	
	Выборка = Запрос.Выполнить().Выгрузить();  
	Для Каждого Строка ИЗ Выборка Цикл
		#Если Клиент Тогда
			ОбработкаПрерыванияПользователя();
		#КонецЕсли
		Стр 				= БанковскиеСчета.Добавить();
		Если ЗначениеЗаполнено(Строка.БанкКод) Тогда
			//Стр.БанковскиеСчета = Справочники.БанковскиеСчета.НайтиПоКоду(СокрЛП(Строка.БанкКод));
		КонецЕсли;
		Стр.КодБанк							= СокрЛП(Строка.БанкКод);
		Стр.КодСотрудник					= СокрЛП(Строка.ФизЛицоКод);
		Если ЗначениеЗаполнено(Строка.ФизЛицоКод) Тогда
			//Стр.Владелец					= Справочники.Контрагенты.НайтиПоКоду(СокрЛП(Строка.ФизЛицоКод));
		КонецЕсли;
		Стр.НомерСчета						= Строка.НомерЛицевогоСчета;
		Стр.БанкНаименование				= Строка.БанкНаименование;
		Стр.ФизЛицоНаименование				= Строка.ФизЛицоНаименование;
		Стр.ФизЛицоИНН						= Строка.ФизЛицоИНН;
		Стр.ОсновнойБанковскийСчетБанк		= Строка.ОсновнойБанковскийСчетБанк;
		Стр.ОсновнойБанковскийСчетБанкКод	= Строка.ОсновнойБанковскийСчетБанкКод;
	КонецЦикла;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДанныеРегистра.КодБанк,
	|	ДанныеРегистра.КодСотрудник,
	|	ДанныеРегистра.НомерСчета,
	|	ДанныеРегистра.БанкНаименование,
	|	ДанныеРегистра.ФизЛицоНаименование,
	|	ДанныеРегистра.ОсновнойБанковскийСчетБанк,
	|	ДанныеРегистра.ОсновнойБанковскийСчетБанкКод,
	|	ДанныеРегистра.ФизЛицоИНН
	|ПОМЕСТИТЬ ТЗ_Регистр
	|ИЗ
	|	&БанковскиеСчета КАК ДанныеРегистра
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЗ_Регистр.КодБанк,
	|	ТЗ_Регистр.ОсновнойБанковскийСчетБанкКод КАК БИКБанкаДляРасчетов,
	|	ФизическиеЛица.Ссылка КАК Владелец,
	|	Банки.Ссылка.КоррСчет КАК КоррсчетБанка,
	|	ТЗ_Регистр.ОсновнойБанковскийСчетБанк,
	|	ТЗ_Регистр.ОсновнойБанковскийСчетБанкКод,
	|	ТЗ_Регистр.КодСотрудник,
	|	ТЗ_Регистр.НомерСчета,
	|	БанковскиеСчета.Ссылка КАК БанковскиеСчета,
	|	ТЗ_Регистр.БанкНаименование,
	|	ТЗ_Регистр.ФизЛицоНаименование,
	|	ТЗ_Регистр.ФизЛицоИНН,
	|	Банки.Ссылка КАК Банк
	|ПОМЕСТИТЬ Итог_Таблица
	|ИЗ
	|	ТЗ_Регистр КАК ТЗ_Регистр
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчета КАК БанковскиеСчета
	|		ПО ТЗ_Регистр.НомерСчета = БанковскиеСчета.НомерСчета
	|			И ТЗ_Регистр.ОсновнойБанковскийСчетБанкКод = БанковскиеСчета.Банк.Код
	|			И ТЗ_Регистр.КодСотрудник = БанковскиеСчета.Владелец.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО ТЗ_Регистр.КодСотрудник = ФизическиеЛица.Код
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Банки КАК Банки
	|		ПО ТЗ_Регистр.ОсновнойБанковскийСчетБанкКод = Банки.Код
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ТЗ_Регистр
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Итог_Таблица.КодБанк,
	|	Итог_Таблица.БИКБанкаДляРасчетов,
	|	Итог_Таблица.Владелец,
	|	Итог_Таблица.КоррсчетБанка,
	|	Итог_Таблица.ОсновнойБанковскийСчетБанк,
	|	Итог_Таблица.ОсновнойБанковскийСчетБанкКод,
	|	Итог_Таблица.КодСотрудник,
	|	Итог_Таблица.НомерСчета,
	|	Итог_Таблица.БанковскиеСчета,
	|	Итог_Таблица.БанкНаименование,
	|	Итог_Таблица.ФизЛицоНаименование,
	|	Итог_Таблица.ФизЛицоИНН,
	|	Итог_Таблица.Банк
	|ИЗ
	|	Итог_Таблица КАК Итог_Таблица
	|ГДЕ
	|	Итог_Таблица.БанковскиеСчета ЕСТЬ NULL 
	|	И Итог_Таблица.КодБанк <> """"
	|	И Итог_Таблица.НомерСчета <> """"
	|	И Итог_Таблица.ОсновнойБанковскийСчетБанкКод <> """"
	|	И НЕ Итог_Таблица.Владелец ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Итог_Таблица";
	Запрос.УстановитьПараметр("БанковскиеСчета", БанковскиеСчета);
	БанковскиеСчета.Загрузить(Запрос.Выполнить().Выгрузить());
	v82COMОбъект 	= Неопределено;
	v82 			= Неопределено;
	Для Каждого Строка ИЗ БанковскиеСчета Цикл
		Владелец 					= Строка.Владелец;
		Если НЕ ЗначениеЗаполнено(Владелец) Тогда
			Продолжить;
		КонецЕсли;
		Банк 						= Строка.Банк;
		НомерСчета					= Строка.НомерСчета;
		Если БанковскийСчетСуществует(НомерСчета) Тогда
			О 						= Справочники.БанковскиеСчета.СоздатьЭлемент();
			О.Владелец 				= Владелец;
			О.Наименование 			= "" + НомерСчета + ", " + Банк;
			О.Банк 					= Банк;
			О.ТекстКорреспондента 	= Владелец.Наименование;
			О.НомерСчета 			= НомерСчета;
			О.ВидСчета				= "Расчетный";
			О.ВалютаДенежныхСредств = Справочники.Валюты.НайтиПоКоду("643");
			О.ДатаОткрытия			= НачалоДня(ТекущаяДата());
			Попытка
				О.Записать();
			Исключение
				Попытка
					//Можно раскоментировать для отладки ЗаписьЖурналаРегистрации("КОД ИП-00016341.000.00000001"+ ОписаниеОшибки());
				Исключение
				КонецПопытки;
				Попытка
					//Можно раскоментировать для отладки ЗаписьЖурналаРегистрации("КОД ИП-00016341.000.00000001 Владелец "+ Владелец);
				Исключение
				КонецПопытки;
			КонецПопытки;
			Строка.БанковскиеСчета = О.Ссылка;
			О = Неопределено;
		КонецЕсли;
	КонецЦикла;
	Возврат;	
КонецПроцедуры	

Функция БанковскийСчетСуществует(НомерСчета)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БанковскиеСчета.Ссылка
	|ИЗ
	|	Справочник.БанковскиеСчета КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.НомерСчета = &НомерСчета
	|";
	Запрос.УстановитьПараметр("НомерСчета", НомерСчета); //Ранее было несколько условий, но в самом справочнике стоит контроль дубляжа
	Возврат Запрос.Выполнить().Пустой();
КонецФункции
