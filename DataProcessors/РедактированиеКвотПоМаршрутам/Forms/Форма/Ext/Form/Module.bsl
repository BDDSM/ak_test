
&НаКлиенте
Процедура Сформировать(Команда)
	Если Не ЗначениеЗаполнено(Объект.Склад) Тогда
		Сообщить(НСтр("ru = 'Выберите склад'"));
		Возврат;
	КонецЕсли; 
	Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
		Сообщить(НСтр("ru = 'Выберите организацию'"));
		Возврат;
	КонецЕсли; 
	
	СформироватьСервер();

КонецПроцедуры

Процедура СформироватьСервер()
	ТабДок.Очистить();
	Объект.Квоты.Очистить();
	Объект.Маршруты.Очистить();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВременныеИнтервалы.Ссылка,
		|	ВременныеИнтервалы.ВремяНачала,
		|	ВременныеИнтервалы.ВремяОкончания,
		|	ВременныеИнтервалы.Склад
		|ПОМЕСТИТЬ втИнтервалы
		|ИЗ
		|	Справочник.ВременныеИнтервалы КАК ВременныеИнтервалы
		|ГДЕ
		|	ВременныеИнтервалы.Склад = &Склад
		|	И ВременныеИнтервалы.ПометкаУдаления = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут КАК Ссылка,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.ПланируемоеВремяВыездаПоМаршруту КАК ПланируемоеВремяВыездаПоМаршруту,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.Перевозчик КАК Перевозчик,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.ПланируемоеВремяВыездаПоМаршруту.ВремяВыезда,
		|	ВременныеИнтервалы.Ссылка КАК ВременнойИнтервал
		|ПОМЕСТИТЬ втМаршрутыСМагазинами
		|ИЗ
		|	Документ.МаршрутныйЛист.РасходныеОрдера КАК МаршрутныйЛистРасходныеОрдера
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Маршруты.ТорговыеТочки КАК МаршрутныйЛистТорговыеТочки
		|		ПО МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут = МаршрутныйЛистТорговыеТочки.Ссылка
		|			И МаршрутныйЛистРасходныеОрдера.Документ.Получатель = МаршрутныйЛистТорговыеТочки.СтруктурнаяЕдиница
		|			И (ВЫБОР
		|				КОГДА МаршрутныйЛистТорговыеТочки.Ссылка.Организация = ЗНАЧЕНИЕ(Справочник.организации.ПустаяСсылка)
		|					ТОГДА &Вкусвилл
		|				ИНАЧЕ МаршрутныйЛистТорговыеТочки.Ссылка.Организация
		|			КОНЕЦ = &Организация)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВременныеИнтервалы КАК ВременныеИнтервалы
		|		ПО (ВЫБОР
		|				КОГДА МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.ПланируемоеВремяВыездаПоМаршруту ССЫЛКА Справочник.ВремяВыездаПоМаршруту
		|					ТОГДА МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.ПланируемоеВремяВыездаПоМаршруту.ВремяВыезда МЕЖДУ ВременныеИнтервалы.ВремяНачала И ВременныеИнтервалы.ВремяОкончания
		|				ИНАЧЕ МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.ПланируемоеВремяВыездаПоМаршруту МЕЖДУ ВременныеИнтервалы.ВремяНачала И ВременныеИнтервалы.ВремяОкончания
		|			КОНЕЦ)
		|ГДЕ
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И ВЫБОР
		|			КОГДА МаршрутныйЛистРасходныеОрдера.Ссылка.Организация = ЗНАЧЕНИЕ(Справочник.организации.ПустаяСсылка)
		|				ТОГДА &Вкусвилл
		|			ИНАЧЕ МаршрутныйЛистРасходныеОрдера.Ссылка.Организация
		|		КОНЕЦ = &Организация
		|	И МаршрутныйЛистРасходныеОрдера.Ссылка.Дата МЕЖДУ &Дата1 И &Дата2
		|	И МаршрутныйЛистРасходныеОрдера.Документ.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыРасходныхОрдеров.Отменен)
		|	И МаршрутныйЛистРасходныеОрдера.Документ.Склад.Владелец = &Склад
		|	И ВременныеИнтервалы.Склад = &Склад
		|	И ВременныеИнтервалы.ПометкаУдаления = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.ПланируемоеВремяВыездаПоМаршруту,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.Перевозчик,
		|	МаршрутныйЛистРасходныеОрдера.Ссылка.Маршрут.ПланируемоеВремяВыездаПоМаршруту.ВремяВыезда,
		|	ВременныеИнтервалы.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПланируемыеМаршрутыПеревозчикаСрезПоследних.Маршрут
		|ПОМЕСТИТЬ втБезМаг
		|ИЗ
		|	РегистрСведений.ПланируемыеМаршрутыПеревозчика.СрезПоследних(, ДатаПланирования > &ТекДата) КАК ПланируемыеМаршрутыПеревозчикаСрезПоследних
		|ГДЕ
		|	ПланируемыеМаршрутыПеревозчикаСрезПоследних.Отменен = ЛОЖЬ
		|	И ПланируемыеМаршрутыПеревозчикаСрезПоследних.ОчиститьМагазины = ИСТИНА
		|	И ВЫБОР
		|			КОГДА ПланируемыеМаршрутыПеревозчикаСрезПоследних.Маршрут.Организация = ЗНАЧЕНИЕ(Справочник.организации.ПустаяСсылка)
		|				ТОГДА &Вкусвилл
		|			ИНАЧЕ ПланируемыеМаршрутыПеревозчикаСрезПоследних.Маршрут.Организация
		|		КОНЕЦ = &Организация
		|	И ВЫРАЗИТЬ(ПланируемыеМаршрутыПеревозчикаСрезПоследних.Регистратор КАК Документ.ПланируемыеМаршрутыПеревозчика).Склад = &Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПланируемыеМаршрутыПеревозчикаСрезПоследних.ВремяВыезда КАК ТекущееВремяВыезда,
		|	ПланируемыеМаршрутыПеревозчикаСрезПоследних.Маршрут,
		|	ПланируемыеМаршрутыПеревозчикаСрезПоследних.Подрядчик КАК Перевозчик,
		|	ПланируемыеМаршрутыПеревозчикаСрезПоследних.ДатаПланирования,
		|	ПланируемыеМаршрутыПеревозчикаСрезПоследних.ВременнойИнтервал
		|ПОМЕСТИТЬ втПланМарш
		|ИЗ
		|	РегистрСведений.ПланируемыеМаршрутыПеревозчика.СрезПоследних(
		|			,
		|			ДатаПланирования > &ТекДата
		|				И НЕ Маршрут В
		|						(ВЫБРАТЬ
		|							втБезМаг.Маршрут
		|						ИЗ
		|							втБезМаг)
		|				И НЕ Маршрут В
		|						(ВЫБРАТЬ
		|							втМаршрутыСМагазинами.Ссылка
		|						ИЗ
		|							втМаршрутыСМагазинами)) КАК ПланируемыеМаршрутыПеревозчикаСрезПоследних
		|ГДЕ
		|	ПланируемыеМаршрутыПеревозчикаСрезПоследних.Отменен = ЛОЖЬ
		|	И ВЫБОР
		|			КОГДА ПланируемыеМаршрутыПеревозчикаСрезПоследних.Маршрут.Организация = ЗНАЧЕНИЕ(Справочник.организации.ПустаяСсылка)
		|				ТОГДА &Вкусвилл
		|			ИНАЧЕ ПланируемыеМаршрутыПеревозчикаСрезПоследних.Маршрут.Организация
		|		КОНЕЦ = &Организация
		|	И ПланируемыеМаршрутыПеревозчикаСрезПоследних.ОчиститьМагазины = ЛОЖЬ
		|	И ВЫРАЗИТЬ(ПланируемыеМаршрутыПеревозчикаСрезПоследних.Регистратор КАК Документ.ПланируемыеМаршрутыПеревозчика).Склад = &Склад
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втИнтервалы.Ссылка КАК ВременнойИнтервал,
		|	СУММА(ВЫБОР
		|			КОГДА Маршруты.Ссылка ЕСТЬ NULL
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) КАК Используется,
		|	Маршруты.Перевозчик
		|ПОМЕСТИТЬ втМаршруты
		|ИЗ
		|	втИнтервалы КАК втИнтервалы
		|		ЛЕВОЕ СОЕДИНЕНИЕ втМаршрутыСМагазинами КАК Маршруты
		|		ПО (ВЫБОР
		|				КОГДА Маршруты.ПланируемоеВремяВыездаПоМаршруту ССЫЛКА Справочник.ВремяВыездаПоМаршруту
		|					ТОГДА Маршруты.ПланируемоеВремяВыездаПоМаршруту.ВремяВыезда МЕЖДУ втИнтервалы.ВремяНачала И втИнтервалы.ВремяОкончания
		|				ИНАЧЕ Маршруты.ПланируемоеВремяВыездаПоМаршруту МЕЖДУ втИнтервалы.ВремяНачала И втИнтервалы.ВремяОкончания
		|			КОНЕЦ)
		|
		|СГРУППИРОВАТЬ ПО
		|	втИнтервалы.Ссылка,
		|	Маршруты.Перевозчик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втИнтервалы.Ссылка КАК ВременнойИнтервал,
		|	КвотаПеревозчикаСрезПоследних.Подрядчик КАК Перевозчик,
		|	КвотаПеревозчикаСрезПоследних.КоличествоМаршрутов КАК Квота
		|ПОМЕСТИТЬ втКвоты
		|ИЗ
		|	втИнтервалы КАК втИнтервалы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КвотаПеревозчика.СрезПоследних(
		|				&Дата,
		|				Склад = &Склад
		|					И Организация
		|					 = &Организация) КАК КвотаПеревозчикаСрезПоследних
		|		ПО втИнтервалы.Ссылка = КвотаПеревозчикаСрезПоследних.ВременнойИнтервал
		|ГДЕ
		|	КвотаПеревозчикаСрезПоследних.КоличествоМаршрутов > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втМаршруты.ВременнойИнтервал,
		|	втМаршруты.Используется КАК КоличествоМаршрутовИспользуется,
		|	втМаршруты.Перевозчик КАК Подрядчик,
		|	0 КАК КоличествоМаршрутов,
		|	втМаршруты.ВременнойИнтервал.ВремяНачала КАК ВременнойИнтервалВремяНачала,
		|	втМаршруты.ВременнойИнтервал.ВремяОкончания КАК ВременнойИнтервалВремяОкончания
		|ПОМЕСТИТЬ втИтог
		|ИЗ
		|	втМаршруты КАК втМаршруты
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	втКвоты.ВременнойИнтервал,
		|	0,
		|	втКвоты.Перевозчик,
		|	втКвоты.Квота,
		|	втКвоты.ВременнойИнтервал.ВремяНачала,
		|	втКвоты.ВременнойИнтервал.ВремяОкончания
		|ИЗ
		|	втКвоты КАК втКвоты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втИтог.ВременнойИнтервал,
		|	СУММА(втИтог.КоличествоМаршрутовИспользуется) КАК КоличествоМаршрутовИспользуется,
		|	втИтог.Подрядчик,
		|	СУММА(втИтог.КоличествоМаршрутов) КАК КоличествоМаршрутов,
		|	втИтог.ВременнойИнтервалВремяНачала,
		|	втИтог.ВременнойИнтервалВремяОкончания
		|ИЗ
		|	втИтог КАК втИтог
		|
		|СГРУППИРОВАТЬ ПО
		|	втИтог.ВременнойИнтервал,
		|	втИтог.Подрядчик,
		|	втИтог.ВременнойИнтервалВремяНачала,
		|	втИтог.ВременнойИнтервалВремяОкончания
		|
		|УПОРЯДОЧИТЬ ПО
		|	втИтог.ВременнойИнтервалВремяНачала,
		|	втИтог.ВременнойИнтервалВремяОкончания
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втПланМарш.ТекущееВремяВыезда,
		|	втПланМарш.Маршрут,
		|	втПланМарш.Перевозчик,
		|	втПланМарш.ДатаПланирования,
		|	втПланМарш.ВременнойИнтервал КАК ТекущийВременнойИнтервал
		|ИЗ
		|	втПланМарш КАК втПланМарш
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	втМаршрутыСМагазинами.ПланируемоеВремяВыездаПоМаршруту,
		|	втМаршрутыСМагазинами.Ссылка,
		|	втМаршрутыСМагазинами.Перевозчик,
		|	ДАТАВРЕМЯ(1, 1, 1),
		|	втМаршрутыСМагазинами.ВременнойИнтервал
		|ИЗ
		|	втМаршрутыСМагазинами КАК втМаршрутыСМагазинами";
	
	Запрос.УстановитьПараметр("Дата", КонецДня(Объект.Дата));
	Запрос.УстановитьПараметр("Дата2", КонецДня(Объект.Дата));
	Запрос.УстановитьПараметр("Дата1", НачалоДня(Объект.Дата));
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Вкусвилл", Справочники.Организации.НайтиПоКоду("000000006"));
	
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса[7].Выбрать();
	ВыборкаМаршруты = РезультатЗапроса[8].Выбрать();
	Объект.Маршруты.Очистить();
	Пока ВыборкаМаршруты.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Объект.Маршруты.Добавить(),ВыборкаМаршруты);	
	КонецЦикла;
	
	МасКонтр=Новый Массив;
	МасВремя=Новый Массив;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если МасКонтр.Найти(ВыборкаДетальныеЗаписи.Подрядчик)=Неопределено И ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Подрядчик) Тогда
			МасКонтр.Добавить(ВыборкаДетальныеЗаписи.Подрядчик);	
		КонецЕсли; 
		Если МасВремя.Найти(ВыборкаДетальныеЗаписи.ВременнойИнтервал)=Неопределено Тогда
			МасВремя.Добавить(ВыборкаДетальныеЗаписи.ВременнойИнтервал);	
		КонецЕсли; 
		
		ЗаполнитьЗначенияСвойств(Объект.Квоты.Добавить(),ВыборкаДетальныеЗаписи);
	КонецЦикла;
	Макет=Обработки.РедактированиеКвотПоМаршрутам.ПолучитьМакет("Макет");
	ШапкаНач=Макет.ПолучитьОбласть("Шапка|Начало");
	ШапкаКон=Макет.ПолучитьОбласть("Шапка|Конец");
	
	СтрокаНач=Макет.ПолучитьОбласть("Строка|Начало");
	СтрокаКон=Макет.ПолучитьОбласть("Строка|Конец");
	ТабДок.Вывести(ШапкаНач);
	Для каждого Эл Из МасКонтр Цикл
		ШапкаКон.Параметры.Подрядчик=Эл;
		ТабДок.Присоединить(ШапкаКон);
	КонецЦикла; 
	ШапкаКон.Параметры.Подрядчик="Итого";
	ТабДок.Присоединить(ШапкаКон);	
	Для каждого Эл Из МасВремя Цикл
		СтрокаНач=Макет.ПолучитьОбласть("Строка|Начало");
		СтрокаНач.Параметры.ВременнойИнтервал=Эл;
		ТабДок.Вывести(СтрокаНач);
		ИтогКМ=0;
		ИтогКМИсп=0;
		Для каждого Эл1 Из МасКонтр Цикл
			МасСтр=Объект.Квоты.НайтиСтроки(Новый Структура("ВременнойИнтервал,Подрядчик",Эл,Эл1));
			Если МасСтр.Количество() Тогда
				СтрокаКон=Макет.ПолучитьОбласть("Строка|Конец");
				СтрокаКон.Параметры.КоличествоМаршрутов=МасСтр[0].КоличествоМаршрутов;
				СтрокаКон.Параметры.Расшифровка = Новый ФиксированнаяСтруктура("ВременнойИнтервал,Подрядчик,КоличествоМаршрутов",
				Эл, Эл1,МасСтр[0].КоличествоМаршрутов);
				
				СтрокаКон.Параметры.КоличествоМаршрутовИспользуется=МасСтр[0].КоличествоМаршрутовИспользуется;
				ИтогКМ=ИтогКМ+МасСтр[0].КоличествоМаршрутов;
				ИтогКМИсп=ИтогКМИсп+МасСтр[0].КоличествоМаршрутовИспользуется;
				ТабДок.Присоединить(СтрокаКон);	
			Иначе
				СтрокаКон=Макет.ПолучитьОбласть("Строка|Конец");
				СтрокаКон.Параметры.КоличествоМаршрутов=0;
				СтрокаКон.Параметры.КоличествоМаршрутовИспользуется=0;
				СтрокаКон.Параметры.Расшифровка = Новый ФиксированнаяСтруктура("ВременнойИнтервал,Подрядчик,КоличествоМаршрутов",
				Эл, Эл1,0);
				ТабДок.Присоединить(СтрокаКон);	
			КонецЕсли;
		КонецЦикла;
		СтрокаКон=Макет.ПолучитьОбласть("Строка|Конец");
		СтрокаКон.Параметры.КоличествоМаршрутов=ИтогКМ;
		СтрокаКон.Параметры.КоличествоМаршрутовИспользуется=ИтогКМИсп;

		ТабДок.Присоединить(СтрокаКон);	
	КонецЦикла; 
	КолонкаИтога=2+2*МасКонтр.Количество();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабДокОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	Если ТипЗнч(Расшифровка)=Тип("ФиксированнаяСтруктура")  Тогда
		МасСтр=Объект.Квоты.НайтиСтроки(Новый Структура("ВременнойИнтервал,Подрядчик",Расшифровка.ВременнойИнтервал,Расшифровка.Подрядчик));
		Если МасСтр.Количество() Тогда
			СтрКвот=МасСтр[0];
			Кол=СтрКвот.КоличествоМаршрутов;
		Иначе
			СтрКвот=Объект.Квоты.Добавить();
			СтрКвот.ВременнойИнтервал=Расшифровка.ВременнойИнтервал;
			СтрКвот.Подрядчик=Расшифровка.Подрядчик;
			Кол=0;
		КонецЕсли;
		ВвестиЧисло(Кол,"Введите квоту");
		КолМарш=0;
		Для каждого Стр Из Объект.Маршруты Цикл
			Если Стр.Перевозчик=Расшифровка.Подрядчик И Стр.ТекущийВременнойИнтервал=Расшифровка.ВременнойИнтервал Тогда
				КолМарш=КолМарш+1;
			КонецЕсли; 
		КонецЦикла; 
		
		Если КолМарш>Кол Тогда
			Парам=Новый Структура("Перевозчик,ВременнойИнтервал",Расшифровка.Подрядчик,Расшифровка.ВременнойИнтервал);
			Рез=ОткрытьФормуМодально(ПолучитьПолноеИмяФормы("ФормаМаршрутов"),Парам,ЭтаФорма);
			Если НЕ Рез=Истина Тогда
				Возврат;
			КонецЕсли; 
		КонецЕсли; 
		
		
		СтрКвот.КоличествоМаршрутов=Кол;
		НомерКолонки=Элементы.ТабДок.ТекущаяОбласть.Лево;
		НомерСтроки=Элементы.ТабДок.ТекущаяОбласть.Верх;
		ТекОбласть = ТабДок.Область(НомерСтроки, НомерКолонки, НомерСтроки, НомерКолонки);
		ТекОбласть.Текст = Строка(Кол);
		МасСтр=Объект.Квоты.НайтиСтроки(Новый Структура("ВременнойИнтервал",Расшифровка.ВременнойИнтервал));
		Итог=0;
		Для каждого Эл Из МасСтр Цикл
			Итог=Итог+Эл.КоличествоМаршрутов;
		КонецЦикла; 
		ТекОбласть = ТабДок.Область(НомерСтроки, КолонкаИтога, НомерСтроки, КолонкаИтога);
		ТекОбласть.Текст = Строка(Итог);
		Если СписокПеревозчиков.НайтиПоЗначению(СтрКвот.Подрядчик)=Неопределено Тогда
			СписокПеревозчиков.Добавить(СтрКвот.Подрядчик);	
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьПолноеИмяФормы(ИмяФормы)

    СимволТочка = ".";
    ПозицияТочки = СтрДлина(ЭтаФорма.ИмяФормы);
    Пока Сред(ЭтаФорма.ИмяФормы, ПозицияТочки, 1) <> СимволТочка Цикл ПозицияТочки = ПозицияТочки - 1; КонецЦикла; //
    Возврат Лев(ЭтаФорма.ИмяФормы, ПозицияТочки) + ИмяФормы;

КонецФункции

&НаКлиенте
Процедура ЗаписатьИзменения(Команда)
	Если Объект.Квоты.Количество()=0 Тогда
		Возврат;
	КонецЕсли; 
	ЗаписатьИзмененияСервер();	
	СформироватьСервер();
КонецПроцедуры

Процедура ЗаписатьИзмененияСервер()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КвотаПеревозчика.Регистратор,
		|	Контрагенты.Ссылка КАК Подрядчик
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КвотаПеревозчика КАК КвотаПеревозчика
		|		ПО (КвотаПеревозчика.Подрядчик = Контрагенты.Ссылка)
		|			И (КвотаПеревозчика.Склад = &Склад)
		|			И (КвотаПеревозчика.Период = &Период)
		|			И (КвотаПеревозчика.Регистратор ССЫЛКА Документ.КвотаНаДоставкуТовараНаТТ)
		|	И 
		|			КвотаПеревозчика.Организация
		|		 = &Организация
		|ГДЕ
		|	Контрагенты.Ссылка В(&Ссылка)
		|ИТОГИ ПО
		|	Подрядчик";
	
	Запрос.УстановитьПараметр("Период", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Склад", Объект.Склад);
	Запрос.УстановитьПараметр("Ссылка", СписокПеревозчиков.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Вкусвилл", Справочники.Организации.НайтиПоКоду("000000006"));
	
	
	РезультатЗапроса = Запрос.Выполнить();
	Выб = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТЗ=Объект.Квоты.Выгрузить();                         
	ТЗ.Сортировать("ВременнойИнтервалВремяНачала,ВременнойИнтервалВремяОкончания");
	Пока Выб.Следующий() Цикл
		ВыборкаДетальныеЗаписи = Выб.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Регистратор) Тогда
			Ссылка=ВыборкаДетальныеЗаписи.Регистратор;
			Док=Ссылка.ПолучитьОбъект();
		Иначе
			Док=Документы.КвотаНаДоставкуТовараНаТТ.СоздатьДокумент();
			Док.Дата=ТекущаяДата();
			Док.Подрядчик=Выб.Подрядчик;
			Док.Склад=Объект.Склад;
			Док.Организация=Объект.Организация;
			Док.Записать(РежимЗаписиДокумента.Проведение);
		КонецЕсли;
		Док.ВременныеИнтервалы.Очистить();
		Для каждого Стр Из ТЗ Цикл
			Если Стр.Подрядчик=Выб.Подрядчик Тогда
				ЗаполнитьЗначенияСвойств(Док.ВременныеИнтервалы.Добавить(),Стр);	
			КонецЕсли; 
		КонецЦикла; 
		Док.Записать(РежимЗаписиДокумента.Проведение);
	КонецЦикла; 
	СписокПеревозчиков.Очистить();
	
	ПланМаршруты=Объект.Маршруты.Выгрузить();
	ПланМаршруты.Очистить();
	
	
	Для каждого Стр Из Объект.Маршруты Цикл
		Если ЗначениеЗаполнено(Стр.ВремяВыезда) Тогда
			Если Не ЗначениеЗаполнено(Стр.ДатаПланирования) Тогда                     
				ОбМарш=Стр.Маршрут.ПолучитьОбъект();
				ОбМарш.ПланируемоеВремяВыездаПоМаршруту=Стр.ВремяВыезда;
				ОбМарш.Записать();
			Иначе	
				НовСтр=ПланМаршруты.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр,Стр);
			КонецЕсли; 
		КонецЕсли; 	
	КонецЦикла; 
	
	Если ПланМаршруты.Количество() Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ТЗ.Маршрут,
			|	ТЗ.ДатаПланирования
			|ПОМЕСТИТЬ вт
			|ИЗ
			|	&ТЗ КАК ТЗ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПланируемыеМагазиныПеревозчикаСрезПоследних.Период,
			|	ПланируемыеМагазиныПеревозчикаСрезПоследних.Регистратор,
			|	ПланируемыеМагазиныПеревозчикаСрезПоследних.НомерСтроки,
			|	ПланируемыеМагазиныПеревозчикаСрезПоследних.Активность,
			|	ПланируемыеМагазиныПеревозчикаСрезПоследних.Подрядчик,
			|	ПланируемыеМагазиныПеревозчикаСрезПоследних.ДатаПланирования,
			|	ПланируемыеМагазиныПеревозчикаСрезПоследних.Маршрут,
			|	ПланируемыеМагазиныПеревозчикаСрезПоследних.Магазин,
			|	ПланируемыеМагазиныПеревозчикаСрезПоследних.Стоимость,
			|	ПланируемыеМагазиныПеревозчикаСрезПоследних.ПорядокДоставки,
			|	ПланируемыеМагазиныПеревозчикаСрезПоследних.ПоставкаВСетках
			|ИЗ
			|	РегистрСведений.ПланируемыеМагазиныПеревозчика.СрезПоследних(
			|			,
			|			(Маршрут, ДатаПланирования) В
			|				(ВЫБРАТЬ
			|					ТЗ.Маршрут,
			|					ТЗ.ДатаПланирования
			|				ИЗ
			|					вт КАК ТЗ)) КАК ПланируемыеМагазиныПеревозчикаСрезПоследних";
		
		Запрос.УстановитьПараметр("ТЗ", ПланМаршруты);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ТЗМагазины = РезультатЗапроса.Выгрузить();
		
		Для каждого Стр Из ПланМаршруты Цикл
			Док=Документы.ПланируемыеМаршрутыПеревозчика.СоздатьДокумент();
			Док.Дата=ТекущаяДата();
			Док.Подрядчик=Стр.Перевозчик;
			Док.Организация=Объект.Организация;
			Док.ДатаПланирования=Стр.ДатаПланирования;
			Док.Склад=Объект.Склад;
			НовСтрМарш=Док.Маршруты.Добавить();
			ИД=Новый УникальныйИдентификатор;
			НовСтрМарш.УИН_Строки=ИД;
			НовСтрМарш.ВременнойИнтервал=Стр.ВременнойИнтервал;
			НовСтрМарш.Маршрут=Стр.Маршрут;
			НовСтрМарш.ВремяВыезда=Стр.ВремяВыезда;
			МасСтр=ТЗМагазины.НайтиСтроки(Новый Структура("Маршрут,ДатаПланирования",Стр.Маршрут,Стр.ДатаПланирования));
			Для каждого Эл Из МасСтр Цикл
				НовСтрМаг=Док.Магазины.Добавить();
				ЗаполнитьЗначенияСвойств(НовСтрМаг,Эл);
				НовСтрМаг.УИН_Строки=ИД;
			КонецЦикла; 
			Док.Записать(РежимЗаписиДокумента.Проведение);
		КонецЦикла; 
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Объект.Дата=ТекущаяДата()+24*60*60;
КонецПроцедуры

