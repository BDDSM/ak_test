
Функция ПостроитьТЗОстатков(СписокНоменклатурыДляОтбора, СписокПоставщиковДляОтбора) Экспорт
	
	ТаблицаДанных = Новый ТаблицаЗначений();
	ТаблицаДанных.Колонки.Добавить("ТТ", Новый ОписаниеТипов("СправочникСсылка.СтруктурныеЕдиницы"));
	ТаблицаДанных.Колонки.Добавить("id_ТТ", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаДанных.Колонки.Добавить("id_tov", Новый ОписаниеТипов("Число"));
	ТаблицаДанных.Колонки.Добавить("Поставщик", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	ТаблицаДанных.Колонки.Добавить("ОстатокНаТочке", Новый ОписаниеТипов("Число"));
	
	ADOСоединение = Новый COMОбъект("ADODB.Connection");
	ADOСоединение.ConnectionTimeOut = 0;
	ADOСоединение.CommandTimeOut    = 0;
	
	СтрСоедиение = ОбменСAccess.ПолучитьСтрокуСоединения("sms_izbenka");
	
	ADOСоединение.ConnectionString  = СтрСоедиение;
	ADOСоединение.Open();
	
	ЗапросРеквизиты = Новый Запрос();
	ЗапросРеквизиты.Текст = "ВЫБРАТЬ
	|	Номенклатура.Ссылка,
	|	Номенклатура.id_tov
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка В(&Номенклатура)";
	
	ЗапросРеквизиты.УстановитьПараметр("Номенклатура", СписокНоменклатурыДляОтбора);
	
	ТабНоменклатура = ЗапросРеквизиты.Выполнить().Выгрузить();
	СтрокаОтборНоменклатура = "99999999";
	
	Если СписокНоменклатурыДляОтбора.Количество() > 0 Тогда
		Для Каждого ЭлементНоменклатура Из СписокНоменклатурыДляОтбора Цикл
			СтрокаСпр = ТабНоменклатура.Найти(ЭлементНоменклатура.Значение, "Ссылка");
			СтрокаОтборНоменклатура = СтрокаОтборНоменклатура + ", " + Формат(СтрокаСпр.id_tov, "ЧГ=0");
		КонецЦикла;	
	КонецЕсли;	
	
	СтрЗапрос = "exec M2..ostatki_tt_tov_currdate " + ?(СписокНоменклатурыДляОтбора.Количество() > 0, "'" + СтрокаОтборНоменклатура + "'", "null") + ", null, 0";
	
	//СтрЗапрос = "SELECT Ostatki.ID_tov, Ostatki.ID_TT, Ostatki.Amount
	//|FROM [SMS_UNION].[dbo].[AccArticle] as Ostatki (nolock)
	//|INNER JOIN (SELECT Ostatki.ID_TT as id_tt,
	//|	  Ostatki.ID_tov,
	//|	  MAX(Ostatki.Period) as MaxPeriod
	//|  FROM [SMS_UNION].[dbo].[AccArticle] as Ostatki (nolock)
	//|  GROUP BY
	//|  Ostatki.ID_TT,
	//|	  Ostatki.ID_tov) as MaxOstatki
	//|	  ON Ostatki.ID_tov = MaxOstatki.ID_tov
	//|	  and Ostatki.ID_TT = MaxOstatki.id_tt
	//|	  and Ostatki.Period = MaxOstatki.MaxPeriod
	//|WHERE Ostatki.Amount > 0
	//|	  " + ?(СписокНоменклатурыДляОтбора.Количество() > 0, " and Ostatki.ID_tov IN (" + СтрокаОтборНоменклатура + ")", "");
	
	rs = ADOСоединение.Execute(СтрЗапрос);
	Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
		rs=rs.NextRecordSet();
	КонецЦикла;
	
	Попытка
		rs.MoveFirst();
		
		Пока НЕ rs.EOF() Цикл
			СтрокаДоб = ТаблицаДанных.Добавить();
			СтрокаДоб.id_ТТ 		= Rs.Fields("ID_TT").Value;
			СтрокаДоб.id_tov 		= Rs.Fields("ID_tov").Value;
			СтрокаДоб.ОстатокНаТочке 		= Rs.Fields("kol").Value;   
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	Таб.id_ТТ,
	|	Таб.ID_tov,
	|	Таб.ОстатокНаТочке
	|ПОМЕСТИТЬ ВТ_Данные
	|ИЗ
	|	&Таб КАК Таб
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЗ_Запрос.ОстатокНаТочке,
	|	ВЗ_Запрос.Номенклатура,
	|	ВЗ_Запрос.ТорговаяТочка КАК ТТ,
	|	ТоварныйАссортиментТочекСрезПоследних.Значение КАК Поставщик
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТ_Данные.ОстатокНаТочке КАК ОстатокНаТочке,
	|		Номенклатура.Ссылка КАК Номенклатура,
	|		СтруктурныеЕдиницы.Ссылка КАК ТорговаяТочка
	|	ИЗ
	|		ВТ_Данные КАК ВТ_Данные
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|			ПО ВТ_Данные.id_ТТ = СтруктурныеЕдиницы.id_TT
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	|			ПО ВТ_Данные.ID_tov = Номенклатура.id_tov) КАК ВЗ_Запрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ТоварныйАссортиментТочекСрезПоследних.ТорговаяТочка КАК ТорговаяТочка,
	|			ТоварныйАссортиментТочекСрезПоследних.Номенклатура КАК Номенклатура,
	|			ЗначенияСвойствОбъектов.Значение КАК Значение
	|		ИЗ
	|			РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних КАК ТоварныйАссортиментТочекСрезПоследних
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|				ПО ТоварныйАссортиментТочекСрезПоследних.Характеристика = ЗначенияСвойствОбъектов.Объект
	|					И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель))
	|		ГДЕ
	|			ТоварныйАссортиментТочекСрезПоследних.Выведена = ЛОЖЬ) КАК ТоварныйАссортиментТочекСрезПоследних
	|		ПО ВЗ_Запрос.ТорговаяТочка = ТоварныйАссортиментТочекСрезПоследних.ТорговаяТочка
	|			И ВЗ_Запрос.Номенклатура = ТоварныйАссортиментТочекСрезПоследних.Номенклатура
	|ГДЕ
	|	(ТоварныйАссортиментТочекСрезПоследних.Значение В (&Поставщики)
	|			ИЛИ &ЕстьОтборПоПоставщикам = ЛОЖЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_Данные";
	
	Запрос.УстановитьПараметр("Таб", ТаблицаДанных);
	Запрос.УстановитьПараметр("ЕстьОтборПоПоставщикам", СписокПоставщиковДляОтбора.Количество() > 0);
	Запрос.УстановитьПараметр("Поставщики", СписокПоставщиковДляОтбора);
	
	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
	
	
	ADOСоединение.Close();
	ADOСоединение = Неопределено;
	
	Возврат ТаблицаДанных;
	
КонецФункции

//+++АК SHEP 2018.06.13 ИП-00018934
Процедура ДобавитьВСписокТелефонов(_СписокТелефонов, ТекТел)
	
	ТекТел = СтрЗаменить(СокрЛП(ТекТел), " ", "");
	ТекТел = СтрЗаменить(ТекТел, "-", "");
	ТекТел = СтрЗаменить(ТекТел, "(", "");
	ТекТел = СтрЗаменить(ТекТел, ")", "");
	
	Если СтрДлина(ТекТел) >= 10 И СокрЛП(ТекТел) <> "" И _СписокТелефонов.НайтиПоЗначению(ТекТел) = Неопределено Тогда
		_СписокТелефонов.Добавить(Прав(СокрЛП(ТекТел), 10));
	КонецЕсли;
	
КонецПроцедуры

//+++АК SHEP 2018.04.25 ИП-00017310.02: поменял установку значений в промежуточную переменную СписокАдресатов:
//	теперь получатель будет в значении, эл. адрес — в представлении
// убрал проверку: СписокАдресатов.НайтиПоЗначению(ТекАдрес), т.к. адреса потом всё равно проверяются при парсинге адреса
Процедура ПостроитьСписокАдресатовНаСервере(ВсеЧислящиесяВШтатеОфисники = Ложь) Экспорт
	
	ЭтотОбъект.СписокПолучателей.Очистить();
	ЭтотОбъект.СписокТелефонов.Очистить();
	
	Если НЕ ОбщегоНазначения.ЭтоКопияБазы() Тогда
		НовСтрока = ЭтотОбъект.СписокТелефонов.Добавить();
		НовСтрока.АдресТелефон = "9257861067";
	КонецЕсли;
	
	Если ПроверитьЗаполнение() Тогда
		
		// Формируем список ТТ для отбора
		СписоТТДляОтбора = Новый СписокЗначений;
		
		лкСписокНоменклатуры = Новый СписокЗначений;
		Для каждого ТекСтр Из ЭтотОбъект.Номенклатура Цикл
			
			лкСписокНоменклатуры.Добавить(ТекСтр.Номенклатура);
			
		КонецЦикла;
		
		лкСписокПроизв = Новый СписокЗначений;
		Для каждого ТекСтр Из ЭтотОбъект.Производители Цикл
			
			лкСписокПроизв.Добавить(ТекСтр.Контрагент);
			
		КонецЦикла;
		
		Если  ЭтотОбъект.МожетПрисутствоватьНаОстатках Тогда
			
			Если ЭтотОбъект.Производители.Количество() > 0 ИЛИ ЭтотОбъект.Номенклатура.Количество() > 0 Тогда
				
				СписоТТДляОтбора.Очистить();
				
				лкСписокХарактеристик = Новый СписокЗначений;
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ЗначенияСвойствОбъектов.Объект КАК Характеристика
				|ИЗ
				|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
				|ГДЕ
				|	ЗначенияСвойствОбъектов.Значение В(&СписокПоставщиков)
				|	И ЗначенияСвойствОбъектов.Свойство = &Свойство
				|
				|СГРУППИРОВАТЬ ПО
				|	ЗначенияСвойствОбъектов.Объект";
				
				Запрос.УстановитьПараметр("Свойство", ПланыВидовХарактеристик.СвойстваОбъектов.Производитель);
				Запрос.УстановитьПараметр("СписокПоставщиков", лкСписокПроизв);
				
				ТЗ_РезультатХаракт = Запрос.Выполнить();
				
				ВыборкаДетЗаписи = ТЗ_РезультатХаракт.Выбрать();
				
				Пока ВыборкаДетЗаписи.Следующий() Цикл
					лкСписокХарактеристик.Добавить(ВыборкаДетЗаписи.Характеристика);
				КонецЦикла;
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	ТоварныйАссортиментТочекСрезПоследних.ТорговаяТочка
				|ИЗ
				|	РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(
				|			&НаДату, Выведена = ЛОЖЬ " +    												 
				?(ЭтотОбъект.Номенклатура.Количество() > 0," И Номенклатура В (&СписокНоменклатуры) ", " ") +				
				?(лкСписокХарактеристик.Количество() > 0," И Характеристика В (&лкСписокХарактеристик)", " ") +				
				" ) КАК ТоварныйАссортиментТочекСрезПоследних
				|
				|СГРУППИРОВАТЬ ПО
				|ТоварныйАссортиментТочекСрезПоследних.ТорговаяТочка";
				
				Запрос.УстановитьПараметр("СписокНоменклатуры", лкСписокНоменклатуры);				
				Запрос.УстановитьПараметр("лкСписокХарактеристик", лкСписокХарактеристик);
				Запрос.УстановитьПараметр("НаДату", ТекущаяДата());
				
				Результат = Запрос.Выполнить();
				
				ВыборкаДетальныеЗаписи = Результат.Выбрать();
				
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					Если СписоТТДляОтбора.НайтиПоЗначению(ВыборкаДетальныеЗаписи.ТорговаяТочка) = Неопределено Тогда
						СписоТТДляОтбора.Добавить(ВыборкаДетальныеЗаписи.ТорговаяТочка);	
					КонецЕсли;	
					
				КонецЦикла;
				
				Если СписоТТДляОтбора.Количество() = 0 Тогда
					Возврат;
				КонецЕсли;	
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ЭтотОбъект.ПрисутствуетНаОстатках Тогда
			
			ТЗОстатков = ПостроитьТЗОстатков(лкСписокНоменклатуры, лкСписокПроизв);	
			
			Для каждого ТекстрТЗОст Из ТЗОстатков Цикл
				
				Если СписоТТДляОтбора.НайтиПоЗначению(ТекстрТЗОст.ТТ) = Неопределено Тогда
					
					СписоТТДляОтбора.Добавить(ТекстрТЗОст.ТТ);
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если ТЗОстатков.Количество() = 0 Тогда
				Возврат;
			КонецЕсли;	
			
		КонецЕсли;				
		
		СписокАдресатов = Новый СписокЗначений;
		_СписокТелефонов = Новый СписокЗначений;
		
		ТЗ_ЦФО = ЭтотОбъект.ЦФО.Выгрузить();
		массЦФО = ТЗ_ЦФО.ВыгрузитьКолонку("ЦФО");
		СписокЦФО = Новый СписокЗначений; 
		СписокЦФО.ЗагрузитьЗначения(массЦФО);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница.АдресЭлектроннойПочты КАК ТекАдрес,
		|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница,
		//+++АК SHEP 2018.04.25 ИП-00017310.02: нужен получатель
		|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница КАК Получатель,
		//---АК SHEP 2018.04.25
		|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница.ТелефонныйНомер1 КАК ТелефонныйНомер1,
		|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница.ТипРозничнойТочки КАК ТипРозничнойТочки
		|ИЗ
		|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(
		|			&текДата,
		|			ЦФО В (&СписокЦФО)
		//+++АК SHEP 20161130: добавил список ТТ
		|				И ВЫБОР
		|					КОГДА &ЕстьОтборПоТТ
		|						ТОГДА СтруктурнаяЕдиница В (&СписокТТ)
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		//---АК SHEP 20161130
		|				И СтруктурнаяЕдиница.Активное = ИСТИНА) КАК ЦФОСтруктурныхЕдиницСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница.АдресЭлектроннойПочты,
		|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница,
		|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница.ТелефонныйНомер1,
		|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница.ТипРозничнойТочки";
		
		Запрос.УстановитьПараметр("СписокЦФО", СписокЦФО);
		Запрос.УстановитьПараметр("текДата", ТекущаяДата());
		//+++АК SHEP 20161130: добавил список ТТ
		Запрос.УстановитьПараметр("ЕстьОтборПоТТ", ЭтотОбъект.СписокТТ.Количество() > 0);
		Запрос.УстановитьПараметр("СписокТТ", ЭтотОбъект.СписокТТ.ВыгрузитьКолонку("ТорговаяТочка"));
		//---АК SHEP 20161130
		
		Результат = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		
		Если ЭтотОбъект.ТорговыеТочки Тогда
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				Если ВыборкаДетальныеЗаписи.ТипРозничнойТочки = ПредопределенноеЗначение("Перечисление.ТипыРозничныхТочек.Магазин") Тогда
					
					Если НЕ ЭтотОбъект.Магазины Тогда
						Продолжить;
					КонецЕсли;	
					
				ИначеЕсли ВыборкаДетальныеЗаписи.ТипРозничнойТочки = ПредопределенноеЗначение("Перечисление.ТипыРозничныхТочек.Избенка") Тогда
					
					Если НЕ ЭтотОбъект.Избенка Тогда
						Продолжить;
					КонецЕсли;
					
				Иначе 	
					
					Если ЭтотОбъект.Избенка ИЛИ ЭтотОбъект.Магазины Тогда
						Продолжить;
					КонецЕсли;
					
				КонецЕсли;
				
				Если СписоТТДляОтбора.Количество() > 0 И СписоТТДляОтбора.НайтиПоЗначению(ВыборкаДетальныеЗаписи.СтруктурнаяЕдиница) = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				ТекАдрес = СокрЛП(ВыборкаДетальныеЗаписи.ТекАдрес); 
				Если ТекАдрес <> "" Тогда
					//+++АК SHEP 2018.04.25 ИП-00017310.02: нужен получатель
					//СписокАдресатов.Добавить(СокрЛП(ТекАдрес));
					СписокАдресатов.Добавить(ВыборкаДетальныеЗаписи.Получатель, ТекАдрес);
					//---АК SHEP 2018.04.25
				КонецЕсли;
				
				ТекТелефон = ВыборкаДетальныеЗаписи.ТелефонныйНомер1; 
				
				//+++АК SHEP 2018.06.13 ИП-00018934: перенёс в отдельную процедуру
				//ТекТелефон = СтрЗаменить(ТекТелефон, " ", "");
				//ТекТелефон = СтрЗаменить(ТекТелефон, "-", "");
				//ТекТелефон = СтрЗаменить(ТекТелефон, "(", "");
				//ТекТелефон = СтрЗаменить(ТекТелефон, ")", "");
				//
				//Если СтрДлина(ТекТелефон) >= 10 И СокрЛП(ТекТелефон) <> "" И _СписокТелефонов.НайтиПоЗначению(ТекТелефон) = Неопределено Тогда
				//	
				//	_СписокТелефонов.Добавить(Прав(СокрЛП(ТекТелефон), 10));
				//	
				//КонецЕсли;
				ДобавитьВСписокТелефонов(_СписокТелефонов, ТекТелефон);
				//---АК SHEP 2018.06.13
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ЭтотОбъект.ПомошникиТерриториальныхУправляющих Тогда
			//+++AK GREK 22.11.2017 ИП-00017270
			ЗапросПомошники = Новый Запрос;
			ЗапросПомошники.Текст = 
				"ВЫБРАТЬ
				|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница.АдресЭлектроннойПочты КАК ТекАдрес,
				|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница,
				|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница.ТелефонныйНомер1 КАК ТелефонныйНомер1,
				|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница.ТипРозничнойТочки КАК ТипРозничнойТочки
				|ПОМЕСТИТЬ ВТ_СтруктурныеЕдиницы
				|ИЗ
				|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(
				|			&текДата,
				|			ЦФО В (&СписокЦФО)
				|				И СтруктурнаяЕдиница.Активное = ИСТИНА) КАК ЦФОСтруктурныхЕдиницСрезПоследних
				|
				|СГРУППИРОВАТЬ ПО
				|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница.АдресЭлектроннойПочты,
				|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница,
				|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница.ТелефонныйНомер1,
				|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница.ТипРозничнойТочки
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_СтруктурныеЕдиницы.СтруктурнаяЕдиница,
				|	СоответствиеОбъектРольСрезПоследних.РольПользователя,
				|	ВТ_СтруктурныеЕдиницы.ТипРозничнойТочки
				|ПОМЕСТИТЬ ВТ_Роли
				|ИЗ
				|	ВТ_СтруктурныеЕдиницы КАК ВТ_СтруктурныеЕдиницы
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&текДата, ТипРоли = &ТипРоли) КАК СоответствиеОбъектРольСрезПоследних
				|		ПО ВТ_СтруктурныеЕдиницы.СтруктурнаяЕдиница = СоответствиеОбъектРольСрезПоследних.Объект
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_Роли.РольПользователя,
				|	ВТ_Роли.СтруктурнаяЕдиница,
				|	РолиПользователейСоставРоли.Сотрудник,
				|	ВТ_Роли.ТипРозничнойТочки
				|ПОМЕСТИТЬ ВТ_ФизЛица
				|ИЗ
				|	ВТ_Роли КАК ВТ_Роли
				|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
				|		ПО ВТ_Роли.РольПользователя = РолиПользователейСоставРоли.Ссылка
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВТ_ФизЛица.СтруктурнаяЕдиница,
				|	ВТ_ФизЛица.ТипРозничнойТочки,
				|	ВТ_ФизЛица.РольПользователя,
				|	ВТ_ФизЛица.Сотрудник,
				//+++АК SHEP 2018.04.25 ИП-00017310.02: нужен получатель
				|	ВТ_ФизЛица.Сотрудник КАК Получатель,
				//---АК SHEP 2018.04.25
				|	КонтактнаяИнформация.Представление КАК ПочтовыйАдрес,
				|	КонтактнаяИнформация1.Представление КАК НомерТелефона
				|ИЗ
				|	ВТ_ФизЛица КАК ВТ_ФизЛица
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
				|		ПО ВТ_ФизЛица.Сотрудник = КонтактнаяИнформация.Объект
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация1
				|		ПО ВТ_ФизЛица.Сотрудник = КонтактнаяИнформация1.Объект
				|ГДЕ
				|	КонтактнаяИнформация.Тип = &ТипПочта
				|	И КонтактнаяИнформация1.Тип = &ТипТел
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_СтруктурныеЕдиницы
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_Роли
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|УНИЧТОЖИТЬ ВТ_ФизЛица";
				
			ЗапросПомошники.УстановитьПараметр("ТипПочта", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
			ЗапросПомошники.УстановитьПараметр("ВидПочта", Справочники.ВидыКонтактнойИнформации.EmailФизЛица);
			ЗапросПомошники.УстановитьПараметр("ТипТел", Перечисления.ТипыКонтактнойИнформации.Телефон);
			ЗапросПомошники.УстановитьПараметр("ВидТел", Справочники.ВидыКонтактнойИнформации.ТелефонСлужебный);
			ЗапросПомошники.УстановитьПараметр("СписокЦФО", СписокЦФО);
			ЗапросПомошники.УстановитьПараметр("текДата", ТекущаяДата());
			ЗапросПомошники.УстановитьПараметр("ТипРоли", ПланыВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего);
			
			РезультатПомошники = ЗапросПомошники.Выполнить();
			ВыборкаДетальныеЗаписиПомошники = РезультатПомошники.Выбрать();
			
			Пока ВыборкаДетальныеЗаписиПомошники.Следующий() Цикл
				
				Если ВыборкаДетальныеЗаписиПомошники.ТипРозничнойТочки = ПредопределенноеЗначение("Перечисление.ТипыРозничныхТочек.Магазин") Тогда
					Если НЕ ЭтотОбъект.Магазины Тогда
						Продолжить;
					КонецЕсли;	
				ИначеЕсли ВыборкаДетальныеЗаписиПомошники.ТипРозничнойТочки = ПредопределенноеЗначение("Перечисление.ТипыРозничныхТочек.Избенка") Тогда
					Если НЕ ЭтотОбъект.Избенка Тогда
						Продолжить;
					КонецЕсли;
				Иначе 	
					Если ЭтотОбъект.Избенка ИЛИ ЭтотОбъект.Магазины Тогда
						Продолжить;
					КонецЕсли;	
				КонецЕсли;
				
				Если СписоТТДляОтбора.Количество() > 0 И СписоТТДляОтбора.НайтиПоЗначению(ВыборкаДетальныеЗаписи.СтруктурнаяЕдиница) = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				ТекТТ = ВыборкаДетальныеЗаписи.СтруктурнаяЕдиница;							
				ТекАдрес = СокрЛП(ВыборкаДетальныеЗаписиПомошники.ПочтовыйАдрес);
				Если ТекАдрес <> "" Тогда		
					//+++АК SHEP 2018.04.25 ИП-00017310.02: нужен получатель
					//СписокАдресатов.Добавить(СокрЛП(ТекАдрес));
					СписокАдресатов.Добавить(ВыборкаДетальныеЗаписиПомошники.Получатель, ТекАдрес);
					//---АК SHEP 2018.04.25
				КонецЕсли;
				
				ТекТел = СокрЛП(ВыборкаДетальныеЗаписиПомошники.НомерТелефона);				
				//+++АК SHEP 2018.06.13 ИП-00018934: перенёс в отдельную процедуру
				//ТекТел = СтрЗаменить(ТекТел, " ", "");
				//ТекТел = СтрЗаменить(ТекТел, "-", "");
				//ТекТел = СтрЗаменить(ТекТел, "(", "");
				//ТекТел = СтрЗаменить(ТекТел, ")", "");
				//Если СтрДлина(ТекТел) = 11 И СокрЛП(ТекТел) <> "" И _СписокТелефонов.НайтиПоЗначению(ТекТел) = Неопределено Тогда	
				//	_СписокТелефонов.Добавить(Прав(СокрЛП(ТекТел), 10));	
				//КонецЕсли;
				ДобавитьВСписокТелефонов(_СписокТелефонов, ТекТел);
				//---АК SHEP 2018.06.13
			КонецЦикла;	
			//---AK			
		КонецЕсли;
		
		Если ЭтотОбъект.ТерриториальныеУправляющие Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПользователиПоЦФОСрезПоследних.Сотрудник.ФизЛицо КАК Сотрудник
			|ПОМЕСТИТЬ ВремТЗ
			|ИЗ
			|	РегистрСведений.ПользователиПоЦФО.СрезПоследних(
			|			&текДата,
			|			РуководительОтдела = ИСТИНА
			|				И ЦФО В (&СписокЦФО)) КАК ПользователиПоЦФОСрезПоследних
			|
			|СГРУППИРОВАТЬ ПО
			|	ПользователиПоЦФОСрезПоследних.Сотрудник.ФизЛицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			//+++АК SHEP 2018.04.25 ИП-00017310.02: нужен получатель
			|	КонтактнаяИнформация.Объект КАК Получатель,
			//---АК SHEP 2018.04.25
			|	КонтактнаяИнформация.Представление КАК ТекАдрес
			|ИЗ
			|	ВремТЗ КАК ВремТЗ
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
			|		ПО ВремТЗ.Сотрудник = КонтактнаяИнформация.Объект
			|ГДЕ
			|	КонтактнаяИнформация.Тип = &Тип
			|	И КонтактнаяИнформация.Вид = &Вид";
			
			Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.EmailФизЛица);
			Запрос.УстановитьПараметр("СписокЦФО", СписокЦФО);
			Запрос.УстановитьПараметр("текДата", ТекущаяДата());
			Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
			
			Результат = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = Результат.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				ТекАдрес = СокрЛП(ВыборкаДетальныеЗаписи.ТекАдрес);
				Если ТекАдрес <> "" Тогда
					//+++АК SHEP 2018.04.25 ИП-00017310.02: нужен получатель
					//СписокАдресатов.Добавить(СокрЛП(ТекАдрес));
					СписокАдресатов.Добавить(ВыборкаДетальныеЗаписи.Получатель, ТекАдрес);
					//---АК SHEP 2018.04.25
				КонецЕсли;
				
			КонецЦикла;			
			
			ЗапросТел = Новый Запрос;
			ЗапросТел.Текст = 
			"ВЫБРАТЬ
			|	ПользователиПоЦФОСрезПоследних.Сотрудник.ФизЛицо КАК Сотрудник
			|ПОМЕСТИТЬ ВремТЗ
			|ИЗ
			|	РегистрСведений.ПользователиПоЦФО.СрезПоследних(
			|			&текДата,
			|			РуководительОтдела = ИСТИНА
			|				И ЦФО В (&СписокЦФО)) КАК ПользователиПоЦФОСрезПоследних
			|
			|СГРУППИРОВАТЬ ПО
			|	ПользователиПоЦФОСрезПоследних.Сотрудник.ФизЛицо
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	КонтактнаяИнформация.Представление КАК ТекТел
			|ИЗ
			|	ВремТЗ КАК ВремТЗ
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
			|		ПО ВремТЗ.Сотрудник = КонтактнаяИнформация.Объект
			|ГДЕ
			|	КонтактнаяИнформация.Тип = &Тип
			|	И КонтактнаяИнформация.Вид = &Вид";
			
			ЗапросТел.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ТелефонСлужебный);
			ЗапросТел.УстановитьПараметр("СписокЦФО", СписокЦФО);
			ЗапросТел.УстановитьПараметр("текДата", ТекущаяДата());
			ЗапросТел.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
			
			РезультатТел = ЗапросТел.Выполнить();
			
			ВыборкаДетальныеЗаписиПомошникиТел = РезультатТел.Выбрать();
			
			ТекТел = "";
			Пока ВыборкаДетальныеЗаписиПомошникиТел.Следующий() Цикл
				ТекТел = СокрЛП(ВыборкаДетальныеЗаписиПомошникиТел.ТекТел);
				//+++АК SHEP 2018.06.13 ИП-00018934: перенёс в отдельную процедуру
				//ТекТел = СтрЗаменить(ТекТел, " ", "");
				//ТекТел = СтрЗаменить(ТекТел, "-", "");
				//ТекТел = СтрЗаменить(ТекТел, "(", "");
				//ТекТел = СтрЗаменить(ТекТел, ")", "");
				//
				//Если СтрДлина(ТекТел) = 11 И СокрЛП(ТекТел) <> "" И _СписокТелефонов.НайтиПоЗначению(ТекТел) = Неопределено Тогда
				//	
				//	_СписокТелефонов.Добавить(Прав(СокрЛП(ТекТел), 10));
				//	
				//КонецЕсли;			
				ДобавитьВСписокТелефонов(_СписокТелефонов, ТекТел);
				//---АК SHEP 2018.06.13
			КонецЦикла;
						
		КонецЕсли;		
				
		Если ЭтотОбъект.УЕК Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			//+++АК SHEP 2018.04.25 ИП-00017310.02: нужен получатель
			|	АК_ГруппыРассылки.ФизЛицо КАК Получатель,
			//---АК SHEP 2018.04.25
			|	АК_ГруппыРассылки.Емейл КАК ТекАдрес
			|ИЗ
			|	РегистрСведений.АК_ГруппыРассылки КАК АК_ГруппыРассылки
			|ГДЕ
			|	АК_ГруппыРассылки.Группа = &Группа
			|	И АК_ГруппыРассылки.Емейл <> """"
			|
			|СГРУППИРОВАТЬ ПО
			//+++АК SHEP 2018.04.25 ИП-00017310.02: нужен получатель
			|	АК_ГруппыРассылки.ФизЛицо,
			//---АК SHEP 2018.04.25
			|	АК_ГруппыРассылки.Емейл";
			
			Запрос.УстановитьПараметр("Группа", ЭтотОбъект.Группа);
						
			Результат = Запрос.Выполнить();
			
			ВыборкаДетальныеЗаписи = Результат.Выбрать();
			
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				
				ТекАдрес = СокрЛП(ВыборкаДетальныеЗаписи.ТекАдрес);
				Если ТекАдрес <> "" Тогда
					//+++АК SHEP 2018.04.25 ИП-00017310.02: нужен получатель
					//СписокАдресатов.Добавить(СокрЛП(ТекАдрес));
					СписокАдресатов.Добавить(ВыборкаДетальныеЗаписи.Получатель, ТекАдрес);
					//---АК SHEP 2018.04.25
				КонецЕсли;
				
			КонецЦикла;			
			
			ЗапросТел = Новый Запрос;
			ЗапросТел.Текст = 
			"ВЫБРАТЬ
			|	АК_ГруппыРассылки.Телефон КАК ТекТел
			|ИЗ
			|	РегистрСведений.АК_ГруппыРассылки КАК АК_ГруппыРассылки
			|ГДЕ
			|	АК_ГруппыРассылки.Группа = &Группа
			|	И АК_ГруппыРассылки.Телефон <> """"
			|
			|СГРУППИРОВАТЬ ПО
			|	АК_ГруппыРассылки.Телефон";
			
			ЗапросТел.УстановитьПараметр("Группа", ЭтотОбъект.Группа);
			
			РезультатТел = ЗапросТел.Выполнить();
			
			ВыборкаТел = РезультатТел.Выбрать();
			
			ТекТел = "";
			Пока ВыборкаТел.Следующий() Цикл
				
				ТекТел = СокрЛП(ВыборкаТел.ТекТел);
				
				//+++АК SHEP 2018.06.13 ИП-00018934: перенёс в отдельную процедуру
				//ТекТел = СтрЗаменить(ТекТел, " ", "");
				//ТекТел = СтрЗаменить(ТекТел, "-", "");
				//ТекТел = СтрЗаменить(ТекТел, "(", "");
				//ТекТел = СтрЗаменить(ТекТел, ")", "");
				//
				//Если СтрДлина(ТекТел) = 11 И СокрЛП(ТекТел) <> "" И _СписокТелефонов.НайтиПоЗначению(ТекТел) = Неопределено Тогда
				//	
				//	_СписокТелефонов.Добавить(Прав(СокрЛП(ТекТел), 10));
				//	
				//КонецЕсли;
				ДобавитьВСписокТелефонов(_СписокТелефонов, ТекТел);
				//---АК SHEP 2018.06.13
			КонецЦикла;
						
		КонецЕсли;		
		
		//+++ Pans 20161117 (ИП-00014062)
		Если ЭтотОбъект.ВсеЧислящиесяВШтатеОфисники Тогда
			Запрос1 = Новый Запрос;
			Запрос1.Текст = 
			"ВЫБРАТЬ
			|	СотрудникиОрганизаций.Физлицо
			|ПОМЕСТИТЬ ФизЛица
			|ИЗ
			|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
			|ГДЕ
			|	СотрудникиОрганизаций.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
			|	И СотрудникиОрганизаций.ПометкаУдаления = ЛОЖЬ
			|	И СотрудникиОрганизаций.Физлицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			//+++АК SHEP 2018.04.25 ИП-00017310.02: нужен получатель
			|	КонтактнаяИнформация.Объект КАК Получатель,
			//---АК SHEP 2018.04.25
			|	КонтактнаяИнформация.Представление КАК Представление
			|ИЗ
			|	ФизЛица КАК ФизЛица
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
			|		ПО ФизЛица.Физлицо = КонтактнаяИнформация.Объект
			|ГДЕ
			|	КонтактнаяИнформация.Тип = &Тип
			|	И КонтактнаяИнформация.Вид = &Вид";
			
			Запрос1.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.EmailФизЛица);
			Запрос1.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
			
			Результат = Запрос1.Выполнить();
			ВыборкаДетальныеЗаписи = Результат.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ТекАдрес = СокрЛП(ВыборкаДетальныеЗаписи.Представление);
				Если ЗначениеЗаполнено(ТекАдрес) Тогда
					//+++АК SHEP 2018.04.25 ИП-00017310.02: нужен получатель
					//СписокАдресатов.Добавить(ТекАдрес);
					СписокАдресатов.Добавить(ВыборкаДетальныеЗаписи.Получатель, ТекАдрес);
					//---АК SHEP 2018.04.25
				КонецЕсли;
			КонецЦикла;			
			
			Запрос1.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ТелефонСлужебный);
			Запрос1.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
			
			Результат = Запрос1.Выполнить();
			ВыборкаДетальныеЗаписи = Результат.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ТекТел = СокрЛП(ВыборкаДетальныеЗаписи.Представление);
				Если ЗначениеЗаполнено(ТекТел) И _СписокТелефонов.НайтиПоЗначению(ТекТел) = Неопределено Тогда
					_СписокТелефонов.Добавить(ТекТел);
				КонецЕсли;
			КонецЦикла;			
			
			
		КонецЕсли;
		//--- Pans 20161117 (ИП-00014062)
		
		Для каждого ТекСтр Из ЭтотОбъект.ДопАдресаты Цикл
			
			//+++АК SHEP 2018.04.25 ИП-00017310.02
			//СписокАдресатов.Добавить(СокрЛП(ТекСтр.Адрес));
			СписокАдресатов.Добавить(СокрЛП(ТекСтр.Адрес), СокрЛП(ТекСтр.Адрес));
			//---АК SHEP 2018.04.25
						
		КонецЦикла;
		
		//+++АК mika 2018.06.28 ИП-00018615 Мерчандайзеры, ГорячаяЛиния
		Если ЭтотОбъект.Мерчандайзеры ИЛИ ЭтотОбъект.ГорячаяЛиния Тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	КонтактнаяИнформация.Объект КАК Получатель,
			|	КонтактнаяИнформация.Представление КАК ЭлектронныйАдрес
			|ИЗ
			|	Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
			|		ПО РолиПользователейСоставРоли.Сотрудник = КонтактнаяИнформация.Объект
			|ГДЕ
			|	(&Мерчандайзинг
			|				И РолиПользователейСоставРоли.Ссылка.Код = ""00121""
			|			ИЛИ &ГорячаяЛиния
			|				И РолиПользователейСоставРоли.Ссылка.Код = ""00391"")
			|	И КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
			|	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица)";
			
			Запрос.УстановитьПараметр("Мерчандайзинг", ЭтотОбъект.Мерчандайзеры);
			Запрос.УстановитьПараметр("ГорячаяЛиния", ЭтотОбъект.ГорячаяЛиния);
			
			РезультатЗапроса = Запрос.Выполнить();
			
			Если Не РезультатЗапроса.Пустой() Тогда
				Выборка = РезультатЗапроса.Выбрать();
				Пока Выборка.Следующий() Цикл
					СписокАдресатов.Добавить(СокрЛП(Выборка.Получатель), СокрЛП(Выборка.ЭлектронныйАдрес));
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		//---АК mika
		
		//+++АК SHEP 2018.06.13 ИП-00018934
		Если ЭтотОбъект.ГруппыРассылок.Количество() > 0 Тогда
			
			Запрос = Новый Запрос(
				"ВЫБРАТЬ
				|	АК_ГруппыРассылки.ФизЛицо КАК Получатель,
				|	АК_ГруппыРассылки.Емейл КАК ТекАдрес,
				|	АК_ГруппыРассылки.Телефон КАК ТекТел
				|ИЗ
				|	РегистрСведений.АК_ГруппыРассылки КАК АК_ГруппыРассылки
				|ГДЕ
				|	АК_ГруппыРассылки.Группа В(&ГруппыРассылок)");
			Запрос.УстановитьПараметр("ГруппыРассылок", ЭтотОбъект.ГруппыРассылок.ВыгрузитьКолонку("Группа"));
			
			Результат = Запрос.Выполнить();
			Если НЕ Результат.Пустой() Тогда
				
				ВыборкаДетальныеЗаписи = Результат.Выбрать();
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					
					ТекАдрес = СокрЛП(ВыборкаДетальныеЗаписи.ТекАдрес);
					Если ТекАдрес <> "" Тогда
						СписокАдресатов.Добавить(ВыборкаДетальныеЗаписи.Получатель, ТекАдрес);
					КонецЕсли;
					
					ТекТел = СокрЛП(ВыборкаДетальныеЗаписи.ТекТел);
					Если ТекТел <> "" Тогда
						ДобавитьВСписокТелефонов(_СписокТелефонов, ТекТел);
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		//---АК SHEP 2018.06.13
		
		Для каждого ТекСтрСп Из СписокАдресатов Цикл
			
			//+++АК SHEP 2018.04.10 ИП-00018352: Разделяем "сложносочинённые" адреса, добавил цикл
			ТекАдрес = СтрЗаменить(СокрЛП(ТекСтрСп.Представление), ";", ",");
			ТекМассивАдресов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ТекАдрес, ",", Истина, Истина);
			Для Каждого ТекАдрес Из ТекМассивАдресов Цикл
			//---АК SHEP 2018.04.10
				Если ЭтотОбъект.СписокПолучателей.Найти(ТекАдрес, "АдресТелефон") <> Неопределено Тогда Продолжить; КонецЕсли;
	  	    	новСтр = ЭтотОбъект.СписокПолучателей.Добавить();
				новСтр.АдресТелефон = СокрЛП(ТекАдрес);
				//+++АК SHEP 2018.04.25 ИП-00017310.02: нужен получатель
				новСтр.Получатель = ТекСтрСп.Значение;
				новСтр.ПредставлениеПолучателя = Строка(ТекСтрСп.Значение);
				//---АК SHEP 2018.04.25
			КонецЦикла;
			
		КонецЦикла;
		
		Для каждого ТекСтрСп Из _СписокТелефонов Цикл
            
  	    	новСтр = ЭтотОбъект.СписокТелефонов.Добавить();
			новСтр.АдресТелефон = ТекСтрСп.Значение;
			
  		КонецЦикла;
		
		ВремТЗ = ЭтотОбъект.СписокТелефонов.Выгрузить();
		ВремТЗ.Свернуть("АдресТелефон");
		ЭтотОбъект.СписокТелефонов.Загрузить(ВремТЗ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВсеЦФОНаСервере() Экспорт
	
	ЭтотОбъект.ЦФО.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО
	|ИЗ
	|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(
	|			&ТекДата,
	|			ЦФО.ПометкаУдаления = ЛОЖЬ
	|				И СтруктурнаяЕдиница.ПометкаУдаления = ЛОЖЬ
	|				И СтруктурнаяЕдиница.Активное = ИСТИНА) КАК ЦФОСтруктурныхЕдиницСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО";
	
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	
	лкВыборка = Запрос.Выполнить().Выбрать();
	Пока лкВыборка.Следующий() Цикл
		
		//Если лкВыборка.ЦФО.ТипРозничнойТочки = ПредопределенноеЗначение("Перечисление.ТипыРозничныхТочек.Избенка") И ЭтотОбъект.Избенка Тогда
			НоваяСтр = ЭтотОбъект.ЦФО.Добавить();	
			НоваяСтр.ЦФО = лкВыборка.ЦФО;
		//КонецЕсли;	
		
		//Если лкВыборка.ЦФО.ТипРозничнойТочки = ПредопределенноеЗначение("Перечисление.ТипыРозничныхТочек.Магазин") И ЭтотОбъект.Магазины Тогда
		//	НоваяСтр = Объект.ЦФО.Добавить();	
		//	НоваяСтр.ЦФО = лкВыборка.ЦФО;
		//КонецЕсли;
		
	КонецЦикла;
	
	//Объект.ЦФО.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ОтправитьСМСНаСервере(ТекСписекТел = Неопределено) Экспорт
	
	Если ТекСписекТел = Неопределено Тогда
		ВсеЦФОНаСервере();
		ПостроитьСписокАдресатовНаСервере();
		ТекСписекТел = Новый СписокЗначений;
		ТекСписекТел.ЗагрузитьЗначения(ЭтотОбъект.СписокТелефонов.ВыгрузитьКолонку("АдресТелефон"));
	КонецЕсли;

	Для каждого ТекСтрСписка Из ТекСписекТел Цикл
		Телефон = ТекСтрСписка.Значение;
		СообщениеSMS = СокрЛП(ЭтотОбъект.ТекстПисьма);
		
		Если СтрДлина(Формат(Телефон,"ЧГ=0")) <> 10 Тогда
			Сообщить("Проверьте ещё раз формат номера телефона: "+Телефон);	
		Иначе	
			//ТекстЗапроса = "insert into [SMSGate].[dbo].[Incoming]
			//|      ([Date]
			//|      ,[nomer]
			//|      ,[text]
			//|      ,[Time]
			//|      ,[source])
			//|select convert(datetime,CONVERT(date,getdate())) , 
			//|/**BPar1**/'~~~~~'/**FPar**/ ,
			//|/**BPar2**/'^^^^^'/**FPar**/ ,
			//|CONVERT(time(7),getdate())  , 10 ;";
			
			ТекстЗапроса = "/****** Сценарий для команды SelectTopNRows среды SSMS  ******/
			|insert into [IES].[dbo].[Outgoing]
			|    ([Number]
			|    ,[Message]
			|    ,[AddDate]
			|    ,[DiscountCardUID]
			|    ,[type_BV]
			|    ,[Project]
			|    ,[user_add])
			|VALUES 
			|	 ('7' +left('"+Формат(Телефон,"ЧГ=0")+"',10), '"+СообщениеSMS+"','"+ТекущаяДата()+"',"+" NULL "+", '"+9+"', '"+"РассылкаТТ"+"', '"+СокрЛП(ПараметрыСеанса.ТекущийПользователь)+"') ;";
		
			
			//ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "~~~~~",Формат(Телефон,"ЧГ=0"));
			//ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "^^^^^",СообщениеSMS);
			
			//СтрокаПодключения = "Provider=SQLOLEDB.1;Persist Security Info=True;Initial Catalog=SMSGate;Data Source=srv-sql01;Password=cjyzcjyz;User ID=izbenka";
			//База_ВыполнитьЗапросНеЗаполняяТЗ(ТекстЗапроса, , СтрокаПодключения);
			
			ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("10.0.0.40");
	
			Если ADOСоединение = Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			ADOСоединение.Execute(ТекстЗапроса);	
			ADOСоединение.Close();
			
			Сообщить("Отправили СМС на номер +7"+Телефон);
			
		КонецЕсли;
 
 	КонецЦикла;

КонецПроцедуры // ОтправитьСМСНаСервере()

//+++АК SHEP 2017.12.13 ИП-00017310
Процедура ОтправитьПочтовыеСообщения(лкТекСписок = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.ЗаголовокПисьма) Тогда
		Сообщить("Не заполнена тема письма!");
		Возврат;
	КонецЕсли;	
	
	Если лкТекСписок = Неопределено Тогда
		ПостроитьСписокАдресатовНаСервере(ЭтотОбъект.ВсеЧислящиесяВШтатеОфисники);
		лкТекСписок = Новый СписокЗначений;
		лкТекСписок.ЗагрузитьЗначения(ЭтотОбъект.СписокПолучателей.ВыгрузитьКолонку("АдресТелефон"));
	КонецЕсли;
	
	ТекКол = лкТекСписок.Количество();
	
	Если лкТекСписок <> Неопределено И ТекКол > 0 Тогда 
		
		ВремСписок = Новый СписокЗначений;
		Тек_it = 0;
		
		Для каждого ТекСтрлкТекСписок Из лкТекСписок Цикл
			
			Если Тек_it < 34 Тогда
				
				ВремСписок.Добавить(ТекСтрлкТекСписок.Значение);
				
				Тек_it = Тек_it + 1;
				
			Иначе
				
				ВремСписок.Добавить(ТекСтрлкТекСписок.Значение);
				
				Тек_it = 0;
				
				СоздатьПисьмо(ВремСписок);
				
				ВремСписок.Очистить();
				
			КонецЕсли;				
			
		КонецЦикла;
		
		Если ВремСписок.Количество() <> 0 Тогда
			СоздатьПисьмо(ВремСписок);
		КонецЕсли;	
		//+++АК БЕЛН 20170110
		Попытка
			СоздатьЗаписьИстории(ПредопределенноеЗначение("Перечисление.ВидОтправки.ЭлектроннаяПочта"),лкТекСписок);
		Исключение
			
		КонецПопытки; 
		//---АК БЕЛН 20170110
	Иначе
		Сообщить("Нет адресов для отправки!");
	КонецЕсли;
	
КонецПроцедуры

Процедура СоздатьПисьмо(СписокАдресатов)
	
	// создаём письмо  ///////////////////////////////////////////////////////////
	
	//+++AK GREK 04.12.2017 ИП-00017390
	//Обратный адрес теперь берем с формы
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	КонтактнаяИнформация.Представление КАК АдресПользователя
	//|ИЗ
	//|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	//|		ПО КонтактнаяИнформация.ЭтотОбъект = Пользователи.ФизЛицо
	//|ГДЕ
	//|	Пользователи.Ссылка = &ТекПользователь
	//|	И КонтактнаяИнформация.Тип = &Тип
	//|	И КонтактнаяИнформация.Вид = &Вид";
	//
	//Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.EmailФизЛица);
	//Запрос.УстановитьПараметр("ТекПользователь", ПараметрыСеанса.ТекущийПользователь);
	//Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	//
	//Результат = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = Результат.Выбрать();
	//ТекАдресПользователя = "";
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	ТекАдресПользователя = СокрЛП(ВыборкаДетальныеЗаписи.АдресПользователя);
	//КонецЦикла;
	//---AK
	
	Адрес = "";
	
	Для каждого ТекСтрСписка Из СписокАдресатов Цикл
		
		Если Адрес = "" Тогда
			Адрес = ТекСтрСписка.Значение;	
		Иначе
			Адрес = Адрес + ", " + ТекСтрСписка.Значение;
		КонецЕсли;
		
	КонецЦикла;
	//+++AK GREK 23.11.2017 ИП-00017270
	Адрес = СтрЗаменить(Адрес,";", ",");
	//---AK
	
	//Отправитель = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоКоду("000000001"); 
	Отправитель = ЭтотОбъект.АдресОтправителя;
	
	//+++АК ILIK 2018.08.31 ИП-00019619
	//Письмо = Документы.ЭлектронноеПисьмо.СоздатьДокумент();
	Если ЗначениеЗаполнено(ЭтотОбъект.СохраненноеЭлектронноеПисьмо)
	   И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтотОбъект.СохраненноеЭлектронноеПисьмо, "СтатусПисьма") = Перечисления.СтатусыПисем.Сохраненное Тогда
		Письмо = ЭтотОбъект.СохраненноеЭлектронноеПисьмо.ПолучитьОбъект();
		Письмо.Предмет = "";
   	Иначе
		Письмо = Документы.ЭлектронноеПисьмо.СоздатьДокумент();
	КонецЕсли;
	//---АК ILIK
	Письмо.НеВыдаватьСообщенияПриЗаписиОбъекта = Истина;
	Письмо.Кому = Адрес;
	Письмо.ЗаголовокПисьма = ЭтотОбъект.ЗаголовокПисьма;
	Письмо.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	Письмо.УчетнаяЗапись = Отправитель;
	Письмо.ОтправительАдресЭлектроннойПочты = Отправитель.АдресЭлектроннойПочты;
	Письмо.Дата = ТекущаяДата();
	Письмо.ТекстПисьма = ЭтотОбъект.ТекстПисьма;
	Письмо.Тема = ЭтотОбъект.ЗаголовокПисьма;
	//+++АК SHEP 2017.12.14 ИП-00017310
	//Письмо.ВидТекстаПисьма = Перечисления.ВидыТекстовЭлектронныхПисем.Текст;
	Письмо.ВидТекстаПисьма = Перечисления.ВидыТекстовЭлектронныхПисем[?(Найти(НРег(ЭтотОбъект.ТекстПисьма), "<html>") = 0, "Текст", "HTML")];
	//---АК SHEP 2017.12.14
	Письмо.КодировкаПисьма = "utf-8";
	
	Если ЗначениеЗаполнено(ТекАдресПользователя) Тогда
		Письмо.АК_ОбратныйАдрес = ТекАдресПользователя; 
	КонецЕсли;
	
	Для каждого ТекСтрСписка Из СписокАдресатов Цикл
		
		НоваяСтр = Письмо.КомуТЧ.Добавить();
		НоваяСтр.АдресЭлектроннойПочты = ТекСтрСписка.Значение;
		
	КонецЦикла;		
	
	ОтправитьПисьмо(Письмо);	
	
КонецПроцедуры

// Процедура инициирует отправку письма.
//
Процедура ОтправитьПисьмо(ТекПисьмо)
	
	ШапкаСообщения = "Не отправлено: " + Строка(ТекПисьмо);
	
	Если ТекПисьмо.СтатусПисьма = Перечисления.СтатусыПисем.Полученное ИЛИ ТекПисьмо.СтатусПисьма = Перечисления.СтатусыПисем.Отправленное Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(ТекПисьмо.Кому) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указан ни один получатель.",, ШапкаСообщения);
		Возврат;
	КонецЕсли;
	
	Если ТекПисьмо.ПометкаУдаления Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Нельзя отправлять помеченное на удаление письмо.",, ШапкаСообщения);
		Возврат;
	КонецЕсли;
	
	ТекПисьмо.СтатусПисьма = Перечисления.СтатусыПисем.Исходящее;
	Если НЕ ЗначениеЗаполнено(ТекПисьмо.Ответственный) Тогда
		ТекПисьмо.Ответственный = глЗначениеПеременной("глТекущийПользователь");
	КонецЕсли; 
	
	//+++АК SHEP 2018.05.25 ИП-00018641
	ТекПисьмо.ДатаОтправления = ЭтотОбъект.ДатаОтложеннойОтправки;
	Если ТекПисьмо.ВидТекстаПисьма = ПредопределенноеЗначение("Перечисление.ВидыТекстовЭлектронныхПисем.HTML") И ЭтотОбъект.ВложенныеФайлы.Количество() > 0 Тогда
		ТекПисьмо.ВидТекстаПисьма = ПредопределенноеЗначение("Перечисление.ВидыТекстовЭлектронныхПисем.HTMLСКартинками");
	КонецЕсли;
	//---АК SHEP 2018.05.25
	
	Попытка
		ТекПисьмо.Записать();
		Сообщить("Записан новый документ: "+ТекПисьмо.Ссылка);
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, ШапкаСообщения);
		Возврат;
	КонецПопытки;
	
	//+++АК ILIK 2018.08.31 ИП-00019619
	ЭтотОбъект.СохраненноеЭлектронноеПисьмо = ТекПисьмо.Ссылка;
	ТаблицаФайлов = ПолучитьВложенныеФайлыПоДокументу(ТекПисьмо.Ссылка);
	//---АК ILIK
	
	Для каждого СтрокаТаблицы Из ЭтотОбъект.ВложенныеФайлы Цикл
		//+++АК ILIK 2018.08.31 ИП-00019619
		//НовыйОбъект = Справочники.ВложенияЭлектронныхПисем.СоздатьЭлемент();
		
		НайденнаяСтрока = ТаблицаФайлов.Найти(СтрокаТаблицы.ИмяФайла, "ИмяФайла");
		Если НайденнаяСтрока = Неопределено Тогда
			НовыйОбъект = Справочники.ВложенияЭлектронныхПисем.СоздатьЭлемент();
		Иначе
			НовыйОбъект = НайденнаяСтрока.Ссылка.ПолучитьОбъект();
		КонецЕсли;
		//---АК ILIK
		
		НовыйОбъект.Объект                 = ТекПисьмо.Ссылка;
		НовыйОбъект.ИмяФайла               = СтрокаТаблицы.ИмяФайла;
		НовыйОбъект.ИДФайлаПочтовогоПисьма = СтрокаТаблицы.ИДФайлаПочтовогоПисьма; //+++АК SHEP 2018.05.25 ИП-00018641
		НовыйОбъект.Наименование = ТекПисьмо.Ссылка;
		
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(СтрокаТаблицы.СсылкаНаФайл);
		НовыйОбъект.Хранилище              = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных());
		
		Попытка
			НовыйОбъект.Записать();
		Исключение
			ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, Строка(ЭтотОбъект));
			Отказ = Истина;
			Прервать;
		КонецПопытки;
		
	КонецЦикла;
	
	//+++АК SHEP 2018.05.25 ИП-00018641
	Если ЗначениеЗаполнено(ЭтотОбъект.ДатаОтложеннойОтправки) И ЭтотОбъект.ДатаОтложеннойОтправки > ТекущаяДата() Тогда
		Возврат;
	КонецЕсли;
	//---АК SHEP 2018.05.25
	
	УчетныеЗаписи = Новый Массив;
	УчетныеЗаписи.Добавить(ТекПисьмо.УчетнаяЗапись);
	Письма = Новый Соответствие;
	Письма.Вставить(ТекПисьмо.Ссылка, ТекПисьмо);
	УправлениеЭлектроннойПочтой.ПолучениеОтправкаПисем(глЗначениеПеременной("глСоответствиеТекстовЭлектронныхПисем"), глЗначениеПеременной("глТекущийПользователь"), УчетныеЗаписи, Письма, Истина);
	Сообщить("Список получателей: "+ТекПисьмо.Кому);
	Сообщить("Отправка завершена.");
	
КонецПроцедуры

//+++АК БЕЛН 20170110
Процедура СоздатьЗаписьИстории(ВидОтправки,СписокАдресов)
	Обработки.ПочтоваяРассылка.СоздатьЗаписьИстории(ВидОтправки, СписокАдресов, ЭтотОбъект.ЗаголовокПисьма, ЭтотОбъект.ТекстПисьма, ТекПользователь);
КонецПроцедуры

//+++АК ILIK 2018.08.31 ИП-00019619
Функция СоздатьДокументЭлектронноеПисьмо()
	Если ЗначениеЗаполнено(ЭтотОбъект.СохраненноеЭлектронноеПисьмо)
	   И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтотОбъект.СохраненноеЭлектронноеПисьмо, "СтатусПисьма") = Перечисления.СтатусыПисем.Сохраненное Тогда
		НовыйДокумент = ЭтотОбъект.СохраненноеЭлектронноеПисьмо.ПолучитьОбъект();
	Иначе
		НовыйДокумент = Документы.ЭлектронноеПисьмо.СоздатьДокумент();
	КонецЕсли;
	НовыйДокумент.Дата = ТекущаяДата();
	НовыйДокумент.НеВыдаватьСообщенияПриЗаписиОбъекта = Истина;
	НовыйДокумент.СтатусПисьма = Перечисления.СтатусыПисем.Сохраненное;
	НовыйДокумент.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	НовыйДокумент.УчетнаяЗапись = ЭтотОбъект.АдресОтправителя;
	НовыйДокумент.Тема = ЭтотОбъект.ЗаголовокПисьма;
	НовыйДокумент.ТекстПисьма = ЭтотОбъект.ТекстПисьма;
	НовыйДокумент.ВидТекстаПисьма = Перечисления.ВидыТекстовЭлектронныхПисем[?(Найти(НРег(ЭтотОбъект.ТекстПисьма), "<html>") = 0, "Текст", "HTML")];
	НовыйДокумент.КодировкаПисьма = "utf-8";
	НовыйДокумент.Предмет = "#ДляВосстановления#";
	Попытка
		НовыйДокумент.Записать();
		Возврат НовыйДокумент.Ссылка;
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, "Не удалось сохранить письмо: ");
		Возврат Неопределено;
	КонецПопытки;
КонецФункции

//+++АК ILIK 2018.08.31 ИП-00019619
Процедура СоздатьВложенныйФайл(НовыйДокумент, ЭлементИсточник, НайденнаяСтрока)
	Если НайденнаяСтрока = Неопределено Тогда
		НовыйЭлемент = Справочники.ВложенияЭлектронныхПисем.СоздатьЭлемент();
	Иначе
		НовыйЭлемент = НайденнаяСтрока.Ссылка.ПолучитьОбъект();
	КонецЕсли;
	
	НовыйЭлемент.Объект = НовыйДокумент.Ссылка;
	НовыйЭлемент.Наименование = НовыйДокумент.Ссылка;
	
	Если ТипЗнч(ЭлементИсточник) = Тип("КлючИЗначение") Тогда
		НовыйЭлемент.ИмяФайла = ЭлементИсточник.Ключ;
		НовыйЭлемент.ИДФайлаПочтовогоПисьма = ЭлементИсточник.Ключ;
		
		НовыйЭлемент.Хранилище = Новый ХранилищеЗначения(ЭлементИсточник.Значение, Новый СжатиеДанных());
	Иначе
		НовыйЭлемент.ИмяФайла = ЭлементИсточник.ИмяФайла;
		НовыйЭлемент.ИДФайлаПочтовогоПисьма = ЭлементИсточник.ИДФайлаПочтовогоПисьма;
	
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ЭлементИсточник.СсылкаНаФайл);
		НовыйЭлемент.Хранилище = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных());
	КонецЕсли;
	
	Попытка
		НовыйЭлемент.Записать();
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, "Не удалось сохранить вложение письма: ");
	КонецПопытки;
КонецПроцедуры

//+++АК ILIK 2018.08.31 ИП-00019619
Функция ПолучитьВложенныеФайлыПоДокументу(НовыйДокумент)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВложенияЭлектронныхПисем.Ссылка,
	               |	ВложенияЭлектронныхПисем.ИмяФайла
	               |ИЗ
	               |	Справочник.ВложенияЭлектронныхПисем КАК ВложенияЭлектронныхПисем
	               |ГДЕ
	               |	ВложенияЭлектронныхПисем.Объект = &Объект";
	Запрос.УстановитьПараметр("Объект", НовыйДокумент);
	Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

//+++АК ILIK 2018.08.31 ИП-00019619
Процедура СохранитьВложенныеФайлы(НовыйДокумент, СтруктураВложения)
	Количество = ЭтотОбъект.ВложенныеФайлы.Количество();
	Для й = 1 По Количество Цикл
		Если Не ПустаяСтрока(ЭтотОбъект.ВложенныеФайлы.Получить(Количество - й).ИДФайлаПочтовогоПисьма) Тогда
			ЭтотОбъект.ВложенныеФайлы.Удалить(Количество - й);
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаФайлов = ПолучитьВложенныеФайлыПоДокументу(НовыйДокумент.Ссылка);
	Для Каждого СтрокаТаблицы Из ЭтотОбъект.ВложенныеФайлы Цикл
		СоздатьВложенныйФайл(НовыйДокумент, СтрокаТаблицы, ТаблицаФайлов.Найти(СтрокаТаблицы.ИмяФайла, "ИмяФайла"));
	КонецЦикла;
	
	Для Каждого ЭлементВложение Из СтруктураВложения Цикл
		СоздатьВложенныйФайл(НовыйДокумент, ЭлементВложение, ТаблицаФайлов.Найти(ЭлементВложение.Ключ, "ИмяФайла"));
	КонецЦикла;
КонецПроцедуры

//+++АК ILIK 2018.08.31 ИП-00019619
Процедура СохранитьЭлектронноеПисьмоВДокумент() Экспорт
	СтруктураВложения = Новый Структура;
	ЭтотОбъект.ТекстПисьмаФД.ПолучитьHTML(ЭтотОбъект.ТекстПисьма, СтруктураВложения);
	
	НовыйДокумент = СоздатьДокументЭлектронноеПисьмо();
	Если НовыйДокумент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьВложенныеФайлы(НовыйДокумент, СтруктураВложения);
КонецПроцедуры

//+++АК ILIK 2018.08.31 ИП-00019619
Процедура ВосстановитьЭлектронноеПисьмоИзДокумента() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЭлектронноеПисьмо.УчетнаяЗапись,
	               |	ЭлектронноеПисьмо.Тема,
	               |	ЭлектронноеПисьмо.ТекстПисьма
	               |ИЗ
	               |	Документ.ЭлектронноеПисьмо КАК ЭлектронноеПисьмо
	               |ГДЕ
	               |	ЭлектронноеПисьмо.Ссылка = &СсылкаНаДокумент
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВложенияЭлектронныхПисем.ИмяФайла,
	               |	ВложенияЭлектронныхПисем.Файл,
	               |	ВложенияЭлектронныхПисем.ИДФайлаПочтовогоПисьма
	               |ИЗ
	               |	Справочник.ВложенияЭлектронныхПисем КАК ВложенияЭлектронныхПисем
	               |ГДЕ
	               |	ВложенияЭлектронныхПисем.Объект = &СсылкаНаДокумент";
	Запрос.УстановитьПараметр("СсылкаНаДокумент", ЭтотОбъект.СохраненноеЭлектронноеПисьмо);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	Выборка = РезультатЗапроса[0].Выбрать();
	Если Выборка.Следующий() Тогда
		ЭтотОбъект.АдресОтправителя = Выборка.УчетнаяЗапись;
		ЭтотОбъект.ЗаголовокПисьма = Выборка.Тема;
		ЭтотОбъект.ТекстПисьма = Выборка.ТекстПисьма;
	КонецЕсли;
	
	СтруктураВложения = Новый Структура;
	Выборка = РезультатЗапроса[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ПустаяСтрока(Выборка.ИДФайлаПочтовогоПисьма) Тогда
			НовСтр = ЭтотОбъект.ВложенныеФайлы.Добавить();
			НовСтр.ИмяФайла = Выборка.ИмяФайла;
			НовСтр.СсылкаНаФайл = ПоместитьВоВременноеХранилище(Новый Картинка(Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(Выборка.Файл)), Новый УникальныйИдентификатор);
		Иначе
			СтруктураВложения.Вставить(Выборка.ИмяФайла, Новый Картинка(Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(Выборка.Файл)));
		КонецЕсли;
	КонецЦикла;
	ЭтотОбъект.ТекстПисьмаФД.УстановитьHTML(ЭтотОбъект.ТекстПисьма, СтруктураВложения);
КонецПроцедуры
