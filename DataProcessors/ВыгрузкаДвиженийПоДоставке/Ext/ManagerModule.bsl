
Процедура ВыгрузитьВБухгалтерию(ДатаНачала, ДатаОкончания, ТабВыдано, ТабПолучено, ФизЛицоПолучатель) Экспорт
	
	Попытка
		
		Коннектор = Новый COMObject(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Бух() + ".COMConnector");
		// создается объект COM-соединение
		
		Строка = ПолныеПрава.ПолучитьСтрокуПодключения_Бух();
		СоединениеСБазой = Коннектор.Connect(Строка);
	Исключение
		СоединениеСБазой = Неопределено;
		Сообщить("Подключится к базе невозможно! " + Символы.ПС+Строка(ОписаниеОшибки()));
		Возврат;
	КонецПопытки;
	
	РозничныйПокупательБух = СоединениеСБазой.Справочники.Контрагенты.НайтиПоКоду("000001178");
	ФизЛицо = СоединениеСБазой.Справочники.ФизическиеЛица.ПолучитьСсылку(СоединениеСБазой.NewObject("УникальныйИдентификатор", Строка(ФизЛицоПолучатель.УникальныйИдентификатор())));
	Счет50_01 = СоединениеСБазой.ПланыСчетов.Хозрасчетный.КассаОрганизации;
	Счет57_04 = СоединениеСБазой.ПланыСчетов.Хозрасчетный.НайтиПоКоду("57.04");
	Счет71_01 = СоединениеСБазой.ПланыСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами;
	//Счет62_Р = СоединениеСБазой.ПланыСчетов.Хозрасчетный.РасчетыСРозничнымиПокупателями;
	//Счет68_02 = СоединениеСБазой.ПланыСчетов.Хозрасчетный.НДС;
	//СкладВозврата = СоединениеСБазой.Справочники.Склады.НайтиПоНаименованию("СКЛАД брака (для возвратов)");
	ВидОперацииПрочееРКО = СоединениеСБазой.Перечисления.ВидыОперацийРКО.ПрочийРасход;
	ВидОперацииПодотчетРКО = СоединениеСБазой.Перечисления.ВидыОперацийРКО.ВыдачаПодотчетномуЛицу;
	ВидОперацииПрочееПКО = СоединениеСБазой.Перечисления.ВидыОперацийПКО.ПрочийПриход;
	ВидОперацииПодотчетПКО = СоединениеСБазой.Перечисления.ВидыОперацийПКО.ВозвратОтПодотчетногоЛица;
	СвойствоДвижения = СоединениеСБазой.ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("Это движения ДС по доставке");
	СтатьяДДСДеньгиВПути = СоединениеСБазой.Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию("Денежные средства в пути");
	СтатьяДДСПодотчеты = СоединениеСБазой.Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию("Выдача /возврат подотчетных сумм");
	
	ОргВкусвилл = Справочники.Организации.НайтиПоРеквизиту("ИНН", "7734675810");
	
	ЗапросПодкл = СоединениеСБазой.NewObject("Запрос");
	ЗапросПодкл.УстановитьПараметр("ДатаНач", НачалоДня(ДатаНачала));
	ЗапросПодкл.УстановитьПараметр("ДатаКон", КонецДня(ДатаОкончания));
	ЗапросПодкл.УстановитьПараметр("СвойствоДвижения", СвойствоДвижения);
	ЗапросПодкл.Текст = "ВЫБРАТЬ
						|	ВЗ_Запрос.РКО КАК Док,
						|	ВЗ_Запрос.Дата КАК Дата
						|ИЗ
						|	(ВЫБРАТЬ
						|		РасходныйКассовыйОрдер.Ссылка КАК РКО,
						|		НАЧАЛОПЕРИОДА(РасходныйКассовыйОрдер.Дата, ДЕНЬ) КАК Дата
						|	ИЗ
						|		Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
						|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
						|			ПО РасходныйКассовыйОрдер.Ссылка = ЗначенияСвойствОбъектов.Объект
						|				И (ЗначенияСвойствОбъектов.Свойство = &СвойствоДвижения)
						|	ГДЕ
						|		РасходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ
						|		И РасходныйКассовыйОрдер.Дата МЕЖДУ &ДатаНач И &ДатаКон
						|		И ЗначенияСвойствОбъектов.Значение = ИСТИНА
						|	
						|	ОБЪЕДИНИТЬ ВСЕ
						|	
						|	ВЫБРАТЬ
						|		ПриходныйКассовыйОрдер.Ссылка,
						|		НАЧАЛОПЕРИОДА(ПриходныйКассовыйОрдер.Дата, ДЕНЬ)
						|	ИЗ
						|		Документ.ПриходныйКассовыйОрдер КАК ПриходныйКассовыйОрдер
						|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
						|			ПО ПриходныйКассовыйОрдер.Ссылка = ЗначенияСвойствОбъектов.Объект
						|				И (ЗначенияСвойствОбъектов.Свойство = &СвойствоДвижения)
						|	ГДЕ
						|		ПриходныйКассовыйОрдер.ПометкаУдаления = ЛОЖЬ
						|		И ПриходныйКассовыйОрдер.Дата МЕЖДУ &ДатаНач И &ДатаКон
						|		И ЗначенияСвойствОбъектов.Значение = ИСТИНА) КАК ВЗ_Запрос
                        |
						|УПОРЯДОЧИТЬ ПО
						|	Дата";
						
	Выборка = ЗапросПодкл.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДокОбъект = Выборка.Док.ПолучитьОбъект();
		ДокОбъект.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
	
	ЗапросПодкл = СоединениеСБазой.NewObject("Запрос");
	ЗапросПодкл.Текст = "ВЫБРАТЬ
	                    |	Организации.Ссылка,
	                    |	Организации.ИНН
	                    |ИЗ
	                    |	Справочник.Организации КАК Организации
	                    |ГДЕ
	                    |	Организации.ПометкаУдаления = ЛОЖЬ";
						
	ТабОрганизацииБух = ЗапросПодкл.Выполнить().Выгрузить();
	
	СуммыКПередачеПоДням = Новый ТаблицаЗначений();
	СуммыКПередачеПоДням.Колонки.Добавить("Дата");
	СуммыКПередачеПоДням.Колонки.Добавить("Организация");
	СуммыКПередачеПоДням.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	
	Для Каждого СтрокаВыдано Из ТабВыдано Цикл
		
		СтрокаДляОрганизации = ТабОрганизацииБух.Найти(СокрЛП(СтрокаВыдано.Организация.ИНН), "ИНН");
		ПодразделениеБух = СоединениеСБазой.Справочники.ПодразделенияОрганизаций.НайтиПоКоду(Формат(СтрокаВыдано.ТорговаяТочка.НомерТочки, "ЧГ=0"));
		Если СтрокаДляОрганизации = Неопределено Тогда
			Сообщить("Для организации: " + Выборка.Организация + " не найдено соотвествие в бух. базе по ИНН: " + СтрокаВыдано.Организация.ИНН);
			Продолжить;
		КонецЕсли;
		
		ДокРКО = СоединениеСБазой.Документы.РасходныйКассовыйОрдер.СоздатьДокумент();
		ДокРКО.Дата = СтрокаВыдано.Дата;
		ДокРКО.ВидОперации = ВидОперацииПрочееРКО;
		ДокРКО.Организация = СтрокаДляОрганизации.Ссылка;
		ДокРКО.СчетКасса = Счет50_01;
		Если СтрокаВыдано.Организация = ОргВкусвилл Тогда
			ДокРКО.ПодразделениеОрганизации = ПодразделениеБух;
		Иначе	
			Если ЗначениеЗаполнено(СтрокаВыдано.ТорговаяТочка.ДатаПереходаНаУчетПоОбособленномуПодразделению)
				И СтрокаВыдано.ТорговаяТочка.ДатаПереходаНаУчетПоОбособленномуПодразделению <= СтрокаВыдано.Дата Тогда
				Если ЗначениеЗаполнено(СтрокаВыдано.ТорговаяТочка.КодОПБух) Тогда
					ДокРКО.ПодразделениеОрганизации = СоединениеСБазой.Справочники.ПодразделенияОрганизаций.НайтиПоКоду(СтрокаВыдано.ТорговаяТочка.КодОПБух,,, ДокРКО.Организация);
				Иначе	
					ДокРКО.ПодразделениеОрганизации = ПодразделениеБух;
				КонецЕсли;	
			Иначе
				//Если СтрокаДанные.Организация = ОргСП Тогда
				ДокРКО.ПодразделениеОрганизации = СоединениеСБазой.Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("Управление розницей",,, ДокРКО.Организация);
				//КонецЕсли;
			КонецЕсли;	
		КонецЕсли;
		ДокРКО.СчетУчетаРасчетовСКонтрагентом = Счет57_04;
		ДокРКО.ВалютаДокумента = ДокРКО.мВалютаРегламентированногоУчета;
		ДокРКО.Контрагент = СоединениеСБазой.Справочники.Контрагенты.ПустаяСсылка();
		СтрокаРасшифровка = ДокРКО.РасшифровкаПлатежа.Добавить();
		СтрокаРасшифровка.КурсВзаиморасчетов = 1;
		СтрокаРасшифровка.СуммаПлатежа = СтрокаВыдано.Сумма;
		СтрокаРасшифровка.КратностьВзаиморасчетов = 1;
		СтрокаРасшифровка.СуммаВзаиморасчетов = СтрокаВыдано.Сумма;
		СтрокаРасшифровка.СтатьяДвиженияДенежныхСредств = СтатьяДДСДеньгиВПути;
		СтрокаРасшифровка.СчетУчетаРасчетовСКонтрагентом = Счет57_04;
		
		ДокРКО.СуммаДокумента = СтрокаВыдано.Сумма;
		
		ДокРКО.ПодразделениеДт = СоединениеСБазой.Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("Управление розницей",,, ДокРКО.Организация);
		ДокРКО.СубконтоДт1 = СтатьяДДСДеньгиВПути;
		ДокРКО.Комментарий = "Движение денежных средств по доставке";
		
		
		Попытка
			ДокРКО.Записать(СоединениеСБазой.РежимЗаписиДокумента.Запись);
			
			Запись = СоединениеСБазой.РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
			Запись.Объект = ДокРКО.Ссылка;
			Запись.Свойство = СвойствоДвижения;
			Запись.Значение = Истина;
			Запись.Записать();
			
			СоединениеСБазой.АК_Привилегированный.ПровестиДокумент(ДокРКО.Ссылка);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			Продолжить;
		КонецПопытки;
		
		ДокПКО = СоединениеСБазой.Документы.ПриходныйКассовыйОрдер.СоздатьДокумент();
		ДокПКО.Дата = СтрокаВыдано.Дата;
		ДокПКО.ВидОперации = ВидОперацииПрочееПКО;
		ДокПКО.Организация = СтрокаДляОрганизации.Ссылка;
		ДокПКО.СчетКасса = Счет50_01;
		ДокПКО.ПодразделениеОрганизации = СоединениеСБазой.Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("Управление розницей",,, ДокПКО.Организация);
		ДокПКО.СчетУчетаРасчетовСКонтрагентом = Счет57_04;
		ДокПКО.ВалютаДокумента = ДокПКО.мВалютаРегламентированногоУчета;
		ДокПКО.Контрагент = СоединениеСБазой.Справочники.Контрагенты.ПустаяСсылка();
		СтрокаРасшифровка = ДокПКО.РасшифровкаПлатежа.Добавить();
		СтрокаРасшифровка.КурсВзаиморасчетов = 1;
		СтрокаРасшифровка.СуммаПлатежа = СтрокаВыдано.Сумма;
		СтрокаРасшифровка.КратностьВзаиморасчетов = 1;
		СтрокаРасшифровка.СуммаВзаиморасчетов = СтрокаВыдано.Сумма;
		СтрокаРасшифровка.СтатьяДвиженияДенежныхСредств = СтатьяДДСДеньгиВПути;
		СтрокаРасшифровка.СчетУчетаРасчетовСКонтрагентом = Счет57_04;
		
		ДокПКО.СуммаДокумента = СтрокаВыдано.Сумма;
		
		ДокПКО.ПодразделениеКт = ДокПКО.ПодразделениеОрганизации;
		ДокПКО.СубконтоКт1 = СтатьяДДСДеньгиВПути;
		ДокПКО.Комментарий = "Движение денежных средств по доставке";
		
		
		Попытка
			ДокПКО.Записать(СоединениеСБазой.РежимЗаписиДокумента.Запись);
			
			Запись = СоединениеСБазой.РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
			Запись.Объект = ДокПКО.Ссылка;
			Запись.Свойство = СвойствоДвижения;
			Запись.Значение = Истина;
			Запись.Записать();
			
			СоединениеСБазой.АК_Привилегированный.ПровестиДокумент(ДокПКО.Ссылка);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			Продолжить;
		КонецПопытки;
		
		СуммыКПередаче = СуммыКПередачеПоДням.Добавить();
		СуммыКПередаче.Дата = СтрокаВыдано.Дата;
		СуммыКПередаче.Организация = СтрокаВыдано.Организация;
		СуммыКПередаче.Сумма = СтрокаВыдано.Сумма;
		
	КонецЦикла;
	
	СуммыКПередачеПоДням.Свернуть("Дата, Организация", "Сумма");
	СуммыКПередачеПоДням.Сортировать("Дата");
	
	Для Каждого СтрокаВыдано Из СуммыКПередачеПоДням Цикл
		
		СтрокаДляОрганизации = ТабОрганизацииБух.Найти(СокрЛП(СтрокаВыдано.Организация.ИНН), "ИНН");
		Если СтрокаДляОрганизации = Неопределено Тогда
			Сообщить("Для организации: " + Выборка.Организация + " не найдено соотвествие в бух. базе по ИНН: " + СтрокаВыдано.Организация.ИНН);
			Продолжить;
		КонецЕсли;
		
		ДокРКО = СоединениеСБазой.Документы.РасходныйКассовыйОрдер.СоздатьДокумент();
		ДокРКО.Дата = СтрокаВыдано.Дата;
		ДокРКО.ВидОперации = ВидОперацииПодотчетРКО;
		ДокРКО.Организация = СтрокаДляОрганизации.Ссылка;
		ДокРКО.СчетКасса = Счет50_01;
		ДокРКО.ПодразделениеОрганизации = СоединениеСБазой.Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("Управление розницей",,, ДокРКО.Организация);
		//ДокРКО.СчетУчетаРасчетовСКонтрагентом = Счет71_01;
		ДокРКО.ВалютаДокумента = ДокРКО.мВалютаРегламентированногоУчета;
		ДокРКО.Контрагент = ФизЛицо;
		ДокРКО.ЗаполнитьПоляВыдатьПоДокументу(ДокРКО.Контрагент);
		СтрокаРасшифровка = ДокРКО.РасшифровкаПлатежа.Добавить();
		СтрокаРасшифровка.КурсВзаиморасчетов = 1;
		СтрокаРасшифровка.СуммаПлатежа = СтрокаВыдано.Сумма;
		СтрокаРасшифровка.КратностьВзаиморасчетов = 1;
		СтрокаРасшифровка.СуммаВзаиморасчетов = СтрокаВыдано.Сумма;
		СтрокаРасшифровка.СтатьяДвиженияДенежныхСредств = СтатьяДДСПодотчеты;
		//СтрокаРасшифровка.СчетУчетаРасчетовСКонтрагентом = Счет57_01;
		
		ДокРКО.СуммаДокумента = СтрокаВыдано.Сумма;
		
		//ДокРКО.ПодразделениеДт = СоединениеСБазой.Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("Управление розницей",,, ДокРКО.Организация);
		//ДокРКО.СубконтоДт1 = СтатьяДДСОплатаБух;
		ДокРКО.Комментарий = "Движение денежных средств по доставке";
		
		
		Попытка
			ДокРКО.Записать(СоединениеСБазой.РежимЗаписиДокумента.Запись);
			
			Запись = СоединениеСБазой.РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
			Запись.Объект = ДокРКО.Ссылка;
			Запись.Свойство = СвойствоДвижения;
			Запись.Значение = Истина;
			Запись.Записать();
			
			СоединениеСБазой.АК_Привилегированный.ПровестиДокумент(ДокРКО.Ссылка);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			Продолжить;
		КонецПопытки;
		
	КонецЦикла;
	
	Для Каждого СтрокаВыдано Из ТабПолучено Цикл
		
		СтрокаДляОрганизации = ТабОрганизацииБух.Найти(СокрЛП(СтрокаВыдано.Организация.ИНН), "ИНН");
		Если СтрокаДляОрганизации = Неопределено Тогда
			Сообщить("Для организации: " + Выборка.Организация + " не найдено соотвествие в бух. базе по ИНН: " + СтрокаВыдано.Организация.ИНН);
			Продолжить;
		КонецЕсли;
		
		ДокПКО = СоединениеСБазой.Документы.ПриходныйКассовыйОрдер.СоздатьДокумент();
		ДокПКО.Дата = СтрокаВыдано.Дата;
		ДокПКО.ВидОперации = ВидОперацииПодотчетПКО;
		ДокПКО.Организация = СтрокаДляОрганизации.Ссылка;
		ДокПКО.СчетКасса = Счет50_01;
		ДокПКО.ПодразделениеОрганизации = СоединениеСБазой.Справочники.ПодразделенияОрганизаций.НайтиПоНаименованию("Управление розницей",,, ДокПКО.Организация);
		//ДокПКО.СчетУчетаРасчетовСКонтрагентом = Счет57_01;
		ДокПКО.ВалютаДокумента = ДокПКО.мВалютаРегламентированногоУчета;
		ДокПКО.Контрагент = ФизЛицо;
		СтрокаРасшифровка = ДокПКО.РасшифровкаПлатежа.Добавить();
		СтрокаРасшифровка.КурсВзаиморасчетов = 1;
		СтрокаРасшифровка.СуммаПлатежа = СтрокаВыдано.Сумма;
		СтрокаРасшифровка.КратностьВзаиморасчетов = 1;
		СтрокаРасшифровка.СуммаВзаиморасчетов = СтрокаВыдано.Сумма;
		СтрокаРасшифровка.СтатьяДвиженияДенежныхСредств = СтатьяДДСПодотчеты;
		//СтрокаРасшифровка.СчетУчетаРасчетовСКонтрагентом = Счет57_01;
		
		Если СоединениеСБазой.ЗначениеЗаполнено(ДокПКО.Контрагент) Тогда
			
			Запрос = СоединениеСБазой.NewObject("Запрос");
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия, ФизическиеЛица.Наименование) КАК Фамилия,
			|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Имя, """") КАК Имя,
			|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Отчество, """") КАК Отчество
			|ИЗ
			|	Справочник.ФизическиеЛица КАК ФизическиеЛица
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ФизЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних
			|		ПО ФизическиеЛица.Ссылка = ФИОФизЛицСрезПоследних.ФизЛицо
			|ГДЕ
			|	ФизическиеЛица.Ссылка = &ФизЛицо";
			Запрос.УстановитьПараметр("Дата", ДокПКО.Дата);
			Запрос.УстановитьПараметр("ФизЛицо", ДокПКО.Контрагент);
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				ДокПКО.ПринятоОт = Выборка.Фамилия+" "+Выборка.Имя+" "+Выборка.Отчество;
			КонецЕсли;
			
		КонецЕсли;
		
		ДокПКО.СуммаДокумента = СтрокаВыдано.Сумма;
		
		ДокПКО.Комментарий = "Движение денежных средств по доставке";
		
		
		Попытка
			ДокПКО.Записать(СоединениеСБазой.РежимЗаписиДокумента.Запись);
			
			Запись = СоединениеСБазой.РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
			Запись.Объект = ДокПКО.Ссылка;
			Запись.Свойство = СвойствоДвижения;
			Запись.Значение = Истина;
			Запись.Записать();
			
			СоединениеСБазой.АК_Привилегированный.ПровестиДокумент(ДокПКО.Ссылка);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			Продолжить;
		КонецПопытки;
		
	КонецЦикла;
	
	
КонецПроцедуры