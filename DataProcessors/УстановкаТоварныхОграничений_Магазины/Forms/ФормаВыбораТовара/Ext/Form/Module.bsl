
Функция УжеЕстьАналогТовара()
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.УстановитьПараметр("Номенклатура", Товар);
	Запрос.УстановитьПараметр("ТорговаяТочка", ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	Запрос.Текст = "ВЫБРАТЬ
	               |	АналогиНоменклатурыТовары.Ссылка
	               |ПОМЕСТИТЬ ВТ_Аналоги
	               |ИЗ
	               |	Справочник.АналогиНоменклатуры.Товары КАК АналогиНоменклатурыТовары
	               |ГДЕ
	               |	АналогиНоменклатурыТовары.Ссылка.ПолностьюЗаменяемыйТовар = ИСТИНА
	               |	И АналогиНоменклатурыТовары.Ссылка.ПометкаУдаления = ЛОЖЬ
	               |	И АналогиНоменклатурыТовары.Номенклатура = &Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТоварныйАссортиментТочекСрезПоследних.Номенклатура
	               |ИЗ
	               |	РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(
	               |			&ТекДата,
	               |			ТорговаяТочка = &ТорговаяТочка
	               |				И Номенклатура В
	               |					(ВЫБРАТЬ
	               |						АналогиНоменклатурыТовары.Номенклатура
	               |					ИЗ
	               |						Справочник.АналогиНоменклатуры.Товары КАК АналогиНоменклатурыТовары
	               |					ГДЕ
	               |						АналогиНоменклатурыТовары.Ссылка В
	               |							(ВЫБРАТЬ
	               |								ВТ_Аналоги.Ссылка
	               |							ИЗ
	               |								ВТ_Аналоги КАК ВТ_Аналоги)
	               |						И АналогиНоменклатурыТовары.Номенклатура <> &Номенклатура)) КАК ТоварныйАссортиментТочекСрезПоследних
	               |ГДЕ
	               |	ТоварныйАссортиментТочекСрезПоследних.Выведена = ЛОЖЬ
	               |	И ТоварныйАссортиментТочекСрезПоследних.Запрещена = ЛОЖЬ";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	ЕстьАналоги = Ложь;
	Пока Выборка.Следующий() Цикл
		Сообщить("Уже есть в матрице полный аналог: " + Выборка.Номенклатура);
		ЕстьАналоги = Истина;
	КонецЦикла;	
	
	Возврат ЕстьАналоги;
	
КонецФункции	

Функция ТоварУжеЕстьВМатрице()
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТорговаяТочка", ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	Запрос.УстановитьПараметр("Номенклатура", Товар);
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТоварныйАссортиментТочекСрезПоследних.Номенклатура
	               |ИЗ
	               |	РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(
	               |			&ТекДата,
	               |			ТорговаяТочка = &ТорговаяТочка
	               |				И Номенклатура = &Номенклатура) КАК ТоварныйАссортиментТочекСрезПоследних
	               |ГДЕ
	               |	ТоварныйАссортиментТочекСрезПоследних.Выведена = ЛОЖЬ
	               |	И ТоварныйАссортиментТочекСрезПоследних.Запрещена = ЛОЖЬ";
				   
				   
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

Функция БылиПродажиЗаПоследнююНеделю()
	
	ТабДвижения = ВнешниеДанные.ПолучитьДвиженияТоваровПолная(ТекущаяДата() - 86400 * 7, ТекущаяДата(), , Товар, Ложь);
	БылиПродажи = Ложь;
	Для Каждого СтрокаТаб Из ТабДвижения Цикл
		Если СтрокаТаб.Продано > 0 Тогда
			Возврат Истина;
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат Ложь;
	
КонецФункции	

Процедура ДобавитьВМатрицу()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекДата"		, ТекущаяДата());
	Запрос.УстановитьПараметр("Товар", Товар);
	Запрос.УстановитьПараметр("Кавказский"	, Справочники.СтруктурныеЕдиницы.НайтиПоКоду("P00000231"));
	Запрос.УстановитьПараметр("ОсновнойСклад", ?(ЗначениеЗаполнено(ПараметрыСеанса.ТорговаяТочкаПоАйпи.ОсновнойСклад), ПараметрыСеанса.ТорговаяТочкаПоАйпи.ОсновнойСклад, Справочники.СтруктурныеЕдиницы.НайтиПоКоду("P00000231")));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТоварныйАссортиментТочекСрезПоследних.Характеристика,
	|	СУММА(1) КАК Колво
	|ИЗ
	|	РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(&ТекДата, Номенклатура = &Товар) КАК ТоварныйАссортиментТочекСрезПоследних
	|ГДЕ
	|	ТоварныйАссортиментТочекСрезПоследних.Выведена = ЛОЖЬ
	|	И ТоварныйАссортиментТочекСрезПоследних.Запрещена = ЛОЖЬ
	|	И ВЫБОР
	|			КОГДА ТоварныйАссортиментТочекСрезПоследних.ТорговаяТочка.ОсновнойСклад = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|				ТОГДА &Кавказский
	|			ИНАЧЕ ТоварныйАссортиментТочекСрезПоследних.ТорговаяТочка.ОсновнойСклад
	|		КОНЕЦ = &ОсновнойСклад
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварныйАссортиментТочекСрезПоследних.Характеристика";
	
	ТабХарки = Запрос.Выполнить().Выгрузить();
	ТабХарки.Сортировать("Колво убыв");
	
	Запись = РегистрыСведений.ТоварныйАссортиментТочек.СоздатьМенеджерЗаписи();
	Запись.Период = ТекущаяДата();
	Запись.ТорговаяТочка = ПараметрыСеанса.ТорговаяТочкаПоАйпи;
	Запись.Номенклатура = Товар;
	Запись.Характеристика = ?(ТабХарки.Количество() > 0, ТабХарки[0].Характеристика, Неопределено);
	Запись.Записать();
	
КонецПроцедуры	

&НаКлиенте
Процедура Записать(Команда)
	
	Если НЕ ЗначениеЗаполнено(Товар) Тогда
		Сообщить("Не выбран товар");
		Возврат;
	КонецЕсли;	
	
	Если ТоварУжеЕстьВМатрице() Тогда
		Сообщить("Товар уже есть в ассортиментной матрице вашего магазина. Добавление запрещено!");
		Возврат;
	КонецЕсли;
	
	Если УжеЕстьАналогТовара() Тогда
		Возврат;
	КонецЕсли;
	
	Если Не БылиПродажиЗаПоследнююНеделю() Тогда
		Сообщить("Не было продаж данного товара ни с одного магазина за последнюю неделю. Добавление запрещено!");
		Возврат;
	КонецЕсли;
	
	ДобавитьВМатрицу();
	
	Закрыть(Товар);
	
КонецПроцедуры
