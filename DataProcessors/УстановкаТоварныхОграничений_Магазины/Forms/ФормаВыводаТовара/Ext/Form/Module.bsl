
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТабДанные = Новый ТаблицаЗначений();
	ТабДанные.Колонки.Добавить("TovarUID"	, Новый ОписаниеТипов("Строка"));
	ТабДанные.Колонки.Добавить("Номенклатура"	, Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТабДанные.Колонки.Добавить("discount50"			, Новый ОписаниеТипов("Число"));
	ТабДанные.Колонки.Добавить("quantity"			, Новый ОписаниеТипов("Число"));
	ТабДанные.Колонки.Добавить("spisanie"	, Новый ОписаниеТипов("Число"));
	ТабДанные.Колонки.Добавить("digust"	, Новый ОписаниеТипов("Число"));
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	
	ТекстЗапроса = "create table #ls (id_tov int, discount50 numeric(15, 3), quantity numeric(15, 3)
					|	, spisanie numeric(15, 3), digust numeric(15, 3)) 
                    |
					|Insert into #ls
					|exec ('SELECT DTT.id_tov
					|	,SUM([discount50]) discount50
					|	,SUM([summa]) quantity
					|	,SUM(([spisanie]) * price) spisanie
					|	,SUM([digust]) digust
					|FROM [vv03].[dbo].[DTT] DTT (nolock) 
                    |
					|where date_tt >= '" + ВнешниеДанные.ФорматПоля(ТекущаяДата() - 86400 * 15, Истина) + "' and date_tt <= '" + ВнешниеДанные.ФорматПоля(ТекущаяДата() - 86400, Истина) + "'
					|
					|	and DTT.id_tt = " + ВнешниеДанные.ФорматПоля(ПараметрыСеанса.ТорговаяТочкаПоАйпи.id_TT) + "		  
					|GROUP BY 
					|	DTT.id_tov') at [SRV-SQL03]
					|	
					|CREATE INDEX index_id_tov
					|ON #ls(id_tov)
					|
					|SELECT UINTov._Fld4946 as TovarUID
					|	,[discount50] discount50
					|	,[quantity] quantity
					|	,[spisanie] spisanie
					|	,[digust] digust
					|	
					|FROM #ls DTT (nolock) 
					|LEFT OUTER JOIN IzbenkaFin.dbo._InfoRg4943 UINTov (nolock) ON DTT.id_tov = UINTov._Fld4953 and UINTov._Fld4944_TYPE = 0x08 and UINTov._Fld4944_RTRef = 0x0000001D
					|LEFT OUTER JOIN IzbenkaFin.dbo._Reference29 TovSpr (nolock) ON DTT.id_tov = TovSpr._Fld760
					|WHERE TovSpr._Fld3860 = 0
                    |
					|";
	
	rs = ADOСоединение.Execute(ТекстЗапроса);
	Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
		rs=rs.NextRecordSet();
	КонецЦикла;
	
	Попытка
		rs.MoveFirst();
		
		Пока НЕ rs.EOF() Цикл
			СтрокаДоб = ТабДанные.Добавить();
			Если Rs.Fields("TovarUID").Value <> NULL Тогда
				СтрокаДоб.Номенклатура = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Rs.Fields("TovarUID").Value));
			КонецЕсли;
			СтрокаДоб.discount50 = Rs.Fields("discount50").Value;
			СтрокаДоб.quantity = Rs.Fields("quantity").Value;   
			СтрокаДоб.spisanie = Rs.Fields("spisanie").Value;
			СтрокаДоб.digust = Rs.Fields("digust").Value;
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	ADOСоединение.Close();
	ADOСоединение = Неопределено;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.УстановитьПараметр("ТорговаяТочка", ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	Запрос.УстановитьПараметр("ТаблицаАссортимента", Обработки.УстановкаТоварныхОграничений_Магазины.ПолучитьТаблицуЗапрещенныхКВыводуИзАссортиментаПозиций()); //+++АК mika 2018.10.17 ИП-00020152 
	Запрос.Текст =
	//+++АК mika 2018.10.17 ИП-00020152 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаАссортимента.id_tov,
	|	ТаблицаАссортимента.id_tt,
	|	ТаблицаАссортимента.Status,
	|	ТаблицаАссортимента.Номенклатура
	|ПОМЕСТИТЬ ВТ_АссортиментАвто
	|ИЗ
	|	&ТаблицаАссортимента КАК ТаблицаАссортимента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_АссортиментАвто.id_tov,
	|	ВТ_АссортиментАвто.id_tt,
	|	МАКСИМУМ(ВТ_АссортиментАвто.Status) КАК Статус,
	|	ВТ_АссортиментАвто.Номенклатура
	|ПОМЕСТИТЬ ВТ_АссортиментАвтоНоменклатура
	|ИЗ
	|	ВТ_АссортиментАвто КАК ВТ_АссортиментАвто
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_АссортиментАвто.Номенклатура,
	|	ВТ_АссортиментАвто.id_tov,
	|	ВТ_АссортиментАвто.id_tt
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварныйАссортиментТочекСрезПоследних.Номенклатура,
	|	ТоварныйАссортиментТочекСрезПоследних.Характеристика,
	|	ТоварныйАссортиментТочекСрезПоследних.Характеристика.СтатусАктивностиХарактеристики КАК СтатусАктивностиХарактеристики,
	|	ТоварныйАссортиментТочекСрезПоследних.Характеристика.Статус КАК Статус,
	|	ТоварныйАссортиментТочекСрезПоследних.Характеристика.Причина КАК Причина,
	|	ТоварныйАссортиментТочекСрезПоследних.Характеристика.ДатаВывода КАК ДатаВывода,
	|	ТоварныйАссортиментТочекСрезПоследних.Характеристика.ДатаОжидаемогоВозврата КАК ДатаОжидаемогоВозврата,
	|	ЕСТЬNULL(ТоварныеОграниченияНаТочках.МинимальныйОстаток, 0) КАК МинОстаток,
	|	ЕСТЬNULL(ТоварныеОграниченияНаТочках.МаксимальныйОстаток, 0) КАК МаксОстаток,
	|	ТоварныйАссортиментТочекСрезПоследних.ТорговаяТочка.id_TT КАК id_TT,
	//+++АК mika 2018.10.17 ИП-00020152 
	|    ВТ_АссортиментАвтоНоменклатура.Статус КАК СтатусSQL,
	//---АК mika
	|	ВЗ_Выкладка.МестоВыкладки
	|ИЗ
	|	РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(&ТекДата, ТорговаяТочка = &ТорговаяТочка) КАК ТоварныйАссортиментТочекСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграниченияНаТочках КАК ТоварныеОграниченияНаТочках
	|		ПО ТоварныйАссортиментТочекСрезПоследних.Номенклатура = ТоварныеОграниченияНаТочках.ГруппаНоменклатуры
	|			И ТоварныйАссортиментТочекСрезПоследних.ТорговаяТочка = ТоварныеОграниченияНаТочках.ТорговаяТочка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ВыкладкаПланограммы.Номенклатура КАК Номенклатура,
	|			ВыкладкаПланограммы.МестоВыкладки КАК МестоВыкладки
	|		ИЗ
	|			РегистрСведений.ВыкладкаПланограммы КАК ВыкладкаПланограммы
	|		ГДЕ
	|			ВыкладкаПланограммы.Планограмма В
	|					(ВЫБРАТЬ
	|						СтруктурныеЕдиницы.Планограмма
	|					ИЗ
	|						Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|					ГДЕ
	|						СтруктурныеЕдиницы.Ссылка = &ТорговаяТочка)) КАК ВЗ_Выкладка
	|		ПО ТоварныйАссортиментТочекСрезПоследних.Номенклатура = ВЗ_Выкладка.Номенклатура
	//+++АК mika 2018.10.17 ИП-00019755 
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АссортиментАвтоНоменклатура КАК ВТ_АссортиментАвтоНоменклатура
	|		ПО ТоварныйАссортиментТочекСрезПоследних.Номенклатура = ВТ_АссортиментАвтоНоменклатура.Номенклатура
	//---АК mika   
	|ГДЕ
	|	ТоварныйАссортиментТочекСрезПоследних.Выведена = ЛОЖЬ
	|	И ТоварныйАссортиментТочекСрезПоследних.Запрещена = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТоварныйАссортиментТочекСрезПоследних.Номенклатура.Наименование";
	
	//+++АК mika 2018.10.30 ИП-00020094 Добавление РLU Только для магазинов Сторонней розницы
	ЭтоСторонняяРозница = СтрДлина(СокрЛП(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыСеанса.ТорговаяТочкаПоАйпи, "НомерСтороннейТочки")))>2;
	Если ЭтоСторонняяРозница Тогда
		
		Элементы.ТоварыPLU.Видимость = Истина;	

		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТ_АссортиментАвтоНоменклатура.Статус КАК СтатусSQL,",
												 "ВТ_АссортиментАвтоНоменклатура.Статус КАК СтатусSQL,
												 |КонтурEDI_СоответствияТоваров.КодТовараПартнера КАК PLU,");
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПО ТоварныйАссортиментТочекСрезПоследних.Номенклатура = ВТ_АссортиментАвтоНоменклатура.Номенклатура",
												 "ПО ТоварныйАссортиментТочекСрезПоследних.Номенклатура = ВТ_АссортиментАвтоНоменклатура.Номенклатура
												 |ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтурEDI_СоответствияТоваров КАК КонтурEDI_СоответствияТоваров
												 |		ПО ТоварныйАссортиментТочекСрезПоследних.Номенклатура = КонтурEDI_СоответствияТоваров.Номенклатура
												 |			И ТоварныйАссортиментТочекСрезПоследних.Характеристика = КонтурEDI_СоответствияТоваров.ХарактеристикаНоменклатуры");
	КонецЕсли;
	//---АК mika

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДоб = Товары.Добавить();
		СтрокаДоб.Номенклатура = Выборка.Номенклатура;
		СтрокаДоб.id_TT = Выборка.id_TT;
		СтрокаДоб.Характеристика = Выборка.Характеристика;
		СтрокаДоб.МестоВыкладки = Выборка.МестоВыкладки;
		СтрокаДоб.МинОстаток = Выборка.МинОстаток;
		СтрокаДоб.МаксОстаток = Выборка.МаксОстаток;
		ОписаниеСтатуса = "";
		Если Выборка.Статус = Перечисления.СтатусыХарактеристик.Рабочая
			ИЛИ НЕ ЗначениеЗаполнено(Выборка.Статус) Тогда
			ОписаниеСтатуса = Выборка.СтатусАктивностиХарактеристики;
		Иначе
			ОписаниеСтатуса = "Статус: " + Выборка.Статус
						+ Символы.ПС + "Дата установки: " + Формат(Выборка.ДатаВывода, "ДФ=dd.MM.yy")
						+ Символы.ПС + "Причина: " + СокрЛП(Выборка.Причина)
						+ Символы.ПС + "Дата ожидаемого возврата: " + Формат(Выборка.ДатаОжидаемогоВозврата, "ДФ=dd.MM.yy");
		КонецЕсли;	
		СтрокаДоб.ОписаниеСтатусаХарактеристики = ОписаниеСтатуса;
		СтрокаДоб.Статус = Выборка.СтатусSQL; //+++АК mika 2018.10.17 ИП-00020152
		СтрокаДоб.PLU    = ?(ЭтоСторонняяРозница,Выборка.PLU,""); //+++АК mika 2018.10.30 ИП-00020094 Добавление РLU Только для магазинов Сторонней розницы
		СтрокаТовародвижения = ТабДанные.Найти(Выборка.Номенклатура, "Номенклатура");
		Если СтрокаТовародвижения <> Неопределено Тогда
			СтрокаДоб.Продажа = СтрокаТовародвижения.quantity;
			СтрокаДоб.СписаниеНа40Процентов = СтрокаТовародвижения.discount50;
			СтрокаДоб.СписаниеПоКачеству = СтрокаТовародвижения.spisanie;
			СтрокаДоб.КолвоДегустации = СтрокаТовародвижения.digust;
			СтрокаДоб.ПроцентПеретарки = ?(СтрокаДоб.Продажа = 0, 0, (СтрокаДоб.СписаниеНа40Процентов + СтрокаДоб.СписаниеПоКачеству) / СтрокаДоб.Продажа * 100);
			//СтрокаДоб.ОтношениеВыручкиКСписаниям = ?(СтрокаДоб.Продажа = 0, 0, (СтрокаДоб.СписаниеПоКачеству) / СтрокаДоб.Продажа * 100);
			Если СтрокаДоб.СписаниеНа40Процентов + СтрокаДоб.СписаниеПоКачеству > 0 Тогда
				СтрокаДоб.ОтношениеВыручкиКСписаниям = ?(СтрокаДоб.Продажа = 0, 999, (СтрокаДоб.СписаниеНа40Процентов + СтрокаДоб.СписаниеПоКачеству) / СтрокаДоб.Продажа * 100);
			Иначе	
				СтрокаДоб.ОтношениеВыручкиКСписаниям = ?(СтрокаДоб.Продажа = 0, 0, (СтрокаДоб.СписаниеНа40Процентов + СтрокаДоб.СписаниеПоКачеству) / СтрокаДоб.Продажа * 100);
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
	
	Товары.Сортировать("ОтношениеВыручкиКСписаниям Убыв");
	
КонецПроцедуры

Процедура ВывестиПомеченныеПозиции()
	
	КолвоСтрок = Товары.Количество();
	Для н = 1 По КолвоСтрок Цикл
		Если Товары[КолвоСтрок - н].Вывести Тогда
			Запись = РегистрыСведений.ТоварныйАссортиментТочек.СоздатьМенеджерЗаписи();
			Запись.Период = ТекущаяДата();
			Запись.ТорговаяТочка = ПараметрыСеанса.ТорговаяТочкаПоАйпи;
			Запись.Номенклатура = Товары[КолвоСтрок - н].Номенклатура;
			Запись.Характеристика = Товары[КолвоСтрок - н].Характеристика;
			Запись.Выведена = Истина;
			Запись.Записать();
			Товары.Удалить(КолвоСтрок - н);
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ВывестиПомеченные(Команда)
	
	Ответ = Вопрос("Вы уверены, что хотите вывести из ассоримента помеченные позиции?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВывестиПомеченныеПозиции();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция СформироватьПечать()
	
	ТабДокумент = Новый ТабличныйДокумент();
	
	Макет = Обработки.УстановкаТоварныхОграничений_Магазины.ПолучитьМакет("ПозицииТаблицы");
	Область = Макет.ПолучитьОбласть("Шапка");
	ТабДокумент.Вывести(Область);
	
	Для Каждого СтрокаТаб Из Товары Цикл
		Область = Макет.ПолучитьОбласть("Строка");
		Область.Параметры.Номенклатура = СтрокаТаб.Номенклатура;
		Область.Параметры.Характеристика = СтрокаТаб.Характеристика;
		Область.Параметры.ОписаниеСтатуса = СтрокаТаб.ОписаниеСтатусаХарактеристики;
		Область.Параметры.Продажа = СтрокаТаб.Продажа;
		Область.Параметры.СписаниеНа40 = СтрокаТаб.СписаниеНа40Процентов;
		Область.Параметры.СписаниеПоСроку = СтрокаТаб.СписаниеПоКачеству;
		Область.Параметры.КолвоДегустации = СтрокаТаб.КолвоДегустации;
		Область.Параметры.Отношение = СтрокаТаб.ОтношениеВыручкиКСписаниям;
		Область.Параметры.МинОстаток = СтрокаТаб.МинОстаток;
		Область.Параметры.МаксОстаток = СтрокаТаб.МаксОстаток;
		ТабДокумент.Вывести(Область);
	КонецЦикла;	
	
	ТабДокумент.ОтображатьСетку = Ложь;
	ТабДокумент.ОтображатьЗаголовки = Ложь;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Возврат ТабДокумент
	
КонецФункции	

&НаКлиенте
Процедура Печать(Команда)
	
	ТабДокумент = СформироватьПечать();
	ТабДокумент.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	
КонецПроцедуры

//+++АК BARA 2017.12.27 ИП-00017541      
&НаСервере
Процедура ЗаписатьНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Попытка
		Автор = Строка(ПараметрыСеанса.ТекущийПродавец);
	Исключение
		Автор = ПараметрыСеанса.ТекущийПользователь;
	КонецПопытки;	
	
	ТекстИзменения = "";
	
	Для Каждого СтрокаТаб Из Товары Цикл
		Если СтрокаТаб.БылоИзменение Тогда
			ТекстИзменения = ТекстИзменения + ?(ЗначениеЗаполнено(ТекстИзменения), Символы.ПС, "") + СтрокаТаб.Номенклатура + " Мин. остаток  Был: " + Формат(СтрокаТаб.БылМинимальный, "ЧН=") + " Стал: " + Формат(СтрокаТаб.МинОстаток, "ЧН=") + "     Макс. остаток  Был: " + Формат(СтрокаТаб.БылМаксимальный, "ЧН=") + " Стал: " + Формат(СтрокаТаб.МаксОстаток, "ЧН=");
			Запись = РегистрыСведений.ТоварныеОграниченияНаТочках.СоздатьМенеджерЗаписи();
			Запись.ГруппаНоменклатуры = СтрокаТаб.Номенклатура;
			Запись.ТорговаяТочка = ПараметрыСеанса.ТорговаяТочкаПоАйпи;
			Запись.id_TT = СтрокаТаб.id_TT;
			Запись.МинимальныйОстаток = СтрокаТаб.МинОстаток;
			Запись.МаксимальныйОстаток = СтрокаТаб.МаксОстаток;
			Запись.ДатаСозданияЗаписи = ТекущаяДата();
			Запись.Автор = Автор;
			Запись.Записать();
		КонецЕсли;	
	КонецЦикла;

	Если ЗначениеЗаполнено(ТекстИзменения) Тогда
		
		ЗапросКонтИнфы = Новый Запрос();
		ЗапросКонтИнфы.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
		ЗапросКонтИнфы.УстановитьПараметр("Объект", ПараметрыСеанса.ТорговаяТочкаПоАйпи);
		
		ЗапросКонтИнфы.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		                       |	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(200)) КАК Адрес
		                       |ИЗ
		                       |	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ТекущаяДата, ) КАК СоответствиеОбъектРольСрезПоследних
		                       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		                       |			РолиПользователейСоставРоли.Ссылка КАК Ссылка,
		                       |			РолиПользователейСоставРоли.Сотрудник КАК Сотрудник
		                       |		ИЗ
		                       |			Справочник.Пользователи КАК Пользователи
		                       |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		                       |				ПО Пользователи.ФизЛицо = РолиПользователейСоставРоли.Сотрудник) КАК ВЗ_Сотрудники
		                       |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		                       |			ПО ВЗ_Сотрудники.Сотрудник = КонтактнаяИнформация.Объект
		                       |				И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
		                       |				И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица))
		                       |		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = ВЗ_Сотрудники.Ссылка
		                       |ГДЕ  
							   //+++ AK suvv 2018.06.05 ИП-00018376.01
							   //|	СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
							   |	(СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
							   |	ИЛИ СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы))
							   //--- AK suvv
		                       |	И СоответствиеОбъектРольСрезПоследних.Объект = &Объект";
							   
		ТабАдреса = ЗапросКонтИнфы.Выполнить().Выгрузить();
		
		Если ТабАдреса.Количество() > 0 Тогда
			УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
			Почта = Новый ИнтернетПочта;
			Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
			Письмо = Новый ИнтернетПочтовоеСообщение;
			Почта.Подключиться(Профиль);
			Письмо.Тема = "На магазине " + ПараметрыСеанса.ТорговаяТочкаПоАйпи + " были внесены изменения в товарные ограничения";
			Письмо.ИмяОтправителя = ""+УчетнаяЗапись+"";
			Письмо.ИмяОтправителя  = ""+СокрЛП(УчетнаяЗапись)+"";
			Письмо.Отправитель     = ""+СокрЛП(УчетнаяЗапись)+"";
			Для Каждого СтрокаАдр Из ТабАдреса Цикл
				Получатель = Письмо.Получатели.Добавить();
				Получатель.Адрес           = СокрЛП(СтрокаАдр.Адрес);
				Получатель.ОтображаемоеИмя = СокрЛП(СтрокаАдр.Адрес);
			КонецЦикла;	
			
			ТекстСообщения = Письмо.Тексты.Добавить();
			ТекстСообщения.Текст     = "Изменения внес " + Автор + Символы.ПС + ТекстИзменения;
			ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
			
			Попытка
				//Почта.Послать(Письмо);
				Сообщить("Отправка письма после записи");
				Почта.Отключиться();
			Исключение
			КонецПопытки;	
		КонецЕсли;	
	КонецЕсли;	

КонецПроцедуры

//+++АК BARA 2017.12.27 ИП-00017541 
&НаКлиенте
Процедура Записать(Команда)
	ЗаписатьНаСервере();
КонецПроцедуры

//+++АК BARA 2017.12.27 ИП-00017541 
&НаКлиенте
Процедура ИзменениеМинМакс()
	
	Счетчик = 0;
	Для Каждого СтрокаТаб Из Товары Цикл
		Если СтрокаТаб.БылоИзменение Тогда
			Счетчик = Счетчик + 1;
		КонецЕсли;	
	КонецЦикла;
	
	Если Счетчик >= 20 Тогда
		Предупреждение("Нельзя за один раз менять более 20 позиций");
		Отказ = Истина;
	Иначе
		Отказ = Истина;
		Результат = ОткрытьФормуМодально("Обработка.УстановкаТоварныхОграничений_Магазины.Форма.Редактирование", Новый Структура("Номенклатура, НормативныйКвант, МинОстаток, МаксОстаток"
						, Элементы.Товары.ТекущиеДанные.Номенклатура, Элементы.Товары.ТекущиеДанные.НормативныйКвант, Элементы.Товары.ТекущиеДанные.МинОстаток, Элементы.Товары.ТекущиеДанные.МаксОстаток));
		Если ТипЗнч(Результат) = Тип("Структура") Тогда
			ТекДанные = Элементы.Товары.ТекущиеДанные;
			Если ТекДанные.МинОстаток <> Результат.МинОстаток
				ИЛИ ТекДанные.МаксОстаток <> Результат.МаксОстаток Тогда
				ТекДанные.БылоИзменение = Истина;
				ТекДанные.МинОстаток = Результат.МинОстаток;
				ТекДанные.МаксОстаток = Результат.МаксОстаток;
			КонецЕсли;
			ПроверитьСтрокуТаблицы(ТекДанные);
		КонецЕсли;	
	КонецЕсли;	

КонецПроцедуры

//+++АК BARA 2017.12.27 ИП-00017541 
&НаКлиенте
Процедура ПроверитьСтрокуТаблицы(Позиция)
	Если Позиция = Неопределено Тогда
		Возврат
	КонецЕсли;
	Позиция.Комментарий = ?(Позиция.МинОстаток>Позиция.НормативныйКвант*10 И Позиция.НормативныйКвант>0,"Мин.остаток более, чем в 10 раз превышает квант упаковки","");
	Позиция.Предупредить = Позиция.Комментарий<>""
КонецПроцедуры

//+++АК BARA 2017.12.27 ИП-00017541  
&НаКлиенте
Процедура Команда1(Команда)
	ИзменениеМинМакс();
КонецПроцедуры

//+++АК BELN 2018.02.06 
&НаКлиенте
Процедура СортироватУбыв(Команда)
	Если Элементы.Товары.ТекущийЭлемент<>Неопределено Тогда
		Имя=СтрЗаменить(Элементы.Товары.ТекущийЭлемент.Имя,"Товары","");	
		Товары.Сортировать(Имя+" Убыв");
		Сортировка.Очистить();
		НовСтр=Сортировка.Добавить();
		НовСтр.Поле=Имя;
		НовСтр.Порядок="Убыв";
	КонецЕсли; 
КонецПроцедуры
//---АК BELN 2018.02.06 
//+++АК BELN 2018.02.06 ИП-00017860
&НаКлиенте
Процедура СортироватВозр(Команда)
	Если Элементы.Товары.ТекущийЭлемент<>Неопределено Тогда
		Имя=СтрЗаменить(Элементы.Товары.ТекущийЭлемент.Имя,"Товары","");	
		Товары.Сортировать(Имя);
		Сортировка.Очистить();
		НовСтр=Сортировка.Добавить();
		НовСтр.Поле=Имя;
		НовСтр.Порядок="Возр";
	КонецЕсли; 
КонецПроцедуры
//---АК BELN 2018.02.06 
//+++АК BELN 2018.02.06 ИП-00017860
&НаКлиенте
Процедура Сорт(Команда)
	ОткрытьФорму("Обработка.УстановкаТоварныхОграничений_Магазины.Форма.ФормаСортировки",,ЭтаФорма);
КонецПроцедуры
//---АК BELN 2018.02.06 
//+++АК BELN 2018.02.06 ИП-00017860
&НаКлиенте
Функция ПолучитьКолонки() Экспорт
	Возврат ПолучитьКолонкиСервер();
КонецФункции // ()
//---АК BELN 2018.02.06 
//+++АК BELN 2018.02.06 ИП-00017860
&НаСервере
Функция ПолучитьКолонкиСервер() Экспорт
	ТЗ=Товары.Выгрузить();
	Мас=Новый Массив;
	Для каждого кол Из ТЗ.Колонки Цикл
		Мас.Добавить(Кол.Имя);
	КонецЦикла; 
	Возврат Мас;

КонецФункции // ()
//---АК BELN 2018.02.06 

//+++АК mika 2018.10.17 ИП-00020152 
&НаКлиенте
Процедура ТоварыПередНачаломИзменения(Элемент, Отказ)
	Если Элемент.ТекущийЭлемент.Имя = "ТоварыВывести" И ЗначениеЗаполнено(Элемент.ТекущиеДанные.Статус) Тогда
		ПоказатьПредупреждение(,"Запрещено вручную выводить товары по которым ассортимент управляется автоматически (см. колонку ""Статус"")!");
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры
