
Процедура ЗаполнитьТаблицуОграничений(Номенклатура = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.УстановитьПараметр("ТорговаяТочка", ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	Запрос.УстановитьПараметр("НоменклатураНеопр", Ложь);
	Если ТипЗнч(Номенклатура)=Тип("Массив") Тогда
		МасНом=Номенклатура;
	ИначеЕсли Не (Номенклатура)=Неопределено Тогда
		МасНом=Новый Массив;	
	    МасНом.Добавить(Номенклатура);
	Иначе
		Запрос.УстановитьПараметр("НоменклатураНеопр", Истина);
	КонецЕсли; 
	Запрос.УстановитьПараметр("Номенклатура", МасНом);
	
	Запрос.УстановитьПараметр("ТаблицаАссортимента", Обработки.УстановкаТоварныхОграничений_Магазины.ПолучитьТаблицуЗапрещенныхКВыводуИзАссортиментаПозиций()); //+++АК mika 2018.10.17 ИП-00020152 
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	СоответствиеТиповРозничныхТочекИТорговыхМарок.ТипРозничнойТочки,
	               |	СоответствиеТиповРозничныхТочекИТорговыхМарок.ТорговаяМарка,
	               |	СтруктурныеЕдиницы.Ссылка
	               |ПОМЕСТИТЬ вт_ТорговыеМарки
	               |ИЗ
	               |	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеТиповРозничныхТочекИТорговыхМарок КАК СоответствиеТиповРозничныхТочекИТорговыхМарок
	               |		ПО СтруктурныеЕдиницы.ТипРозничнойТочки = СоответствиеТиповРозничныхТочекИТорговыхМарок.ТипРозничнойТочки
	               |ГДЕ
	               |	СтруктурныеЕдиницы.Ссылка = &ТорговаяТочка
	               |;
				   //+++АК mika 2018.10.17 ИП-00020152
				   |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ТаблицаАссортимента.id_tov,
	               |	ТаблицаАссортимента.id_tt,
	               |	ТаблицаАссортимента.Status,
	               |	ТаблицаАссортимента.Номенклатура
	               |ПОМЕСТИТЬ ВТ_АссортиментАвто
	               |ИЗ
	               |	&ТаблицаАссортимента КАК ТаблицаАссортимента
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_АссортиментАвто.id_tov,
	               |	ВТ_АссортиментАвто.id_tt,
	               |	МАКСИМУМ(ВТ_АссортиментАвто.Status) КАК Статус,
	               |	ВТ_АссортиментАвто.Номенклатура
	               |ПОМЕСТИТЬ ВТ_АссортиментАвтоНоменклатура
	               |ИЗ
	               |	ВТ_АссортиментАвто КАК ВТ_АссортиментАвто
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_АссортиментАвто.Номенклатура,
	               |	ВТ_АссортиментАвто.id_tov,
	               |	ВТ_АссортиментАвто.id_tt
	               |;
				   //---АК mika 
				   |
				   |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ТоварныйАссортиментТочекСрезПоследних.Номенклатура,
	               |	ТоварныйАссортиментТочекСрезПоследних.id_TT,
	               |	ТоварныйАссортиментТочекСрезПоследних.ТорговаяТочка,
	               |	ТоварныйАссортиментТочекСрезПоследних.Характеристика,
	               |	ВЫБОР
	               |		КОГДА ТоварныйАссортиментТочекСрезПоследних.Характеристика.СтатусАктивностиХарактеристики = ЗНАЧЕНИЕ(Перечисление.СтатусыАктивностиХарактеристик.Выведена)
	               |				ИЛИ ТоварныйАссортиментТочекСрезПоследних.Характеристика.СтатусАктивностиХарактеристики = ЗНАЧЕНИЕ(Перечисление.СтатусыАктивностиХарактеристик.Неактивная)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК Неактивная
	               |ПОМЕСТИТЬ ВТ_АссортиментТочки
	               |ИЗ
	               |	РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(
	               |			&ТекДата,
	               |			ТорговаяТочка = &ТорговаяТочка
	               |				И ВЫБОР
	               |					КОГДА &НоменклатураНеопр
	               |						ТОГДА ИСТИНА
	               |					ИНАЧЕ Номенклатура В (&Номенклатура)
	               |				КОНЕЦ
	               |				И Номенклатура.ТорговаяМарка В
	               |					(ВЫБРАТЬ
	               |						вт_ТорговыеМарки.ТорговаяМарка
	               |					ИЗ
	               |						вт_ТорговыеМарки)) КАК ТоварныйАссортиментТочекСрезПоследних
	               |ГДЕ
	               |	НЕ ТоварныйАссортиментТочекСрезПоследних.Выведена
	               |	И НЕ ТоварныйАссортиментТочекСрезПоследних.Запрещена
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ТоварныйАссортиментТочекСрезПоследних.Номенклатура,
	               |	ТоварныйАссортиментТочекСрезПоследних.id_TT,
	               |	ЕСТЬNULL(ТоварныеОграниченияНаТочках.МинимальныйОстаток, 0) КАК МинОстаток,
	               |	ТоварныеОграниченияНаТочках.МаксимальныйОстаток КАК МаксОстаток,
	               |	ВЗ_Выкладка.МестоВыкладки,
	               |	ВложенныйЗапрос.Квант,
				   //+++АК mika 2018.10.17 ИП-00020152 
				   |    ВТ_АссортиментАвтоНоменклатура.Статус КАК СтатусSQL,
				   //---АК mika
	               |	ТоварныйАссортиментТочекСрезПоследних.Неактивная
	               |ИЗ
	               |	ВТ_АссортиментТочки КАК ТоварныйАссортиментТочекСрезПоследних
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныеОграниченияНаТочках КАК ТоварныеОграниченияНаТочках
	               |		ПО ТоварныйАссортиментТочекСрезПоследних.Номенклатура = ТоварныеОграниченияНаТочках.ГруппаНоменклатуры
	               |			И ТоварныйАссортиментТочекСрезПоследних.ТорговаяТочка = ТоварныеОграниченияНаТочках.ТорговаяТочка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВыкладкаПланограммы.Номенклатура КАК Номенклатура,
	               |			ВыкладкаПланограммы.МестоВыкладки КАК МестоВыкладки,
	               |			СоответствиеТиповРозничныхТочекИТорговыхМарок.ТипРозничнойТочки КАК ТипРозничнойТочки
	               |		ИЗ
	               |			РегистрСведений.ВыкладкаПланограммы КАК ВыкладкаПланограммы
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеТиповРозничныхТочекИТорговыхМарок КАК СоответствиеТиповРозничныхТочекИТорговыхМарок
	               |				ПО ВыкладкаПланограммы.Планограмма.ТорговаяМарка = СоответствиеТиповРозничныхТочекИТорговыхМарок.ТорговаяМарка
	               |					И ВыкладкаПланограммы.Номенклатура.ТорговаяМарка = СоответствиеТиповРозничныхТочекИТорговыхМарок.ТорговаяМарка
	               |		ГДЕ
	               |			ВыкладкаПланограммы.Планограмма В
	               |					(ВЫБРАТЬ
	               |						СтруктурныеЕдиницы.Планограмма
	               |					ИЗ
	               |						Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	               |					ГДЕ
	               |						СтруктурныеЕдиницы.Ссылка = &ТорговаяТочка)) КАК ВЗ_Выкладка
	               |		ПО ТоварныйАссортиментТочекСрезПоследних.Номенклатура = ВЗ_Выкладка.Номенклатура
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВЗ_Макс.Характеристика КАК Характеристика,
	               |			МАКСИМУМ(НормативныйКвантУпаковкиСрезПоследних.Квант) КАК Квант
	               |		ИЗ
	               |			(ВЫБРАТЬ
	               |				НормативныйКвантУпаковкиСрезПоследних.Характеристика КАК Характеристика,
	               |				МАКСИМУМ(НормативныйКвантУпаковкиСрезПоследних.Период) КАК Период
	               |			ИЗ
	               |				РегистрСведений.НормативныйКвантУпаковки.СрезПоследних(
	               |						&ТекДата,
	               |						Характеристика В
	               |							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |								ВТ_АссортиментТочки.Характеристика
	               |							ИЗ
	               |								ВТ_АссортиментТочки КАК ВТ_АссортиментТочки)) КАК НормативныйКвантУпаковкиСрезПоследних
	               |			
	               |			СГРУППИРОВАТЬ ПО
	               |				НормативныйКвантУпаковкиСрезПоследних.Характеристика) КАК ВЗ_Макс
	               |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйКвантУпаковки.СрезПоследних(
	               |						&ТекДата,
	               |						Характеристика В
	               |							(ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |								ВТ_АссортиментТочки.Характеристика
	               |							ИЗ
	               |								ВТ_АссортиментТочки КАК ВТ_АссортиментТочки)) КАК НормативныйКвантУпаковкиСрезПоследних
	               |				ПО ВЗ_Макс.Период = НормативныйКвантУпаковкиСрезПоследних.Период
	               |					И ВЗ_Макс.Характеристика = НормативныйКвантУпаковкиСрезПоследних.Характеристика
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ВЗ_Макс.Характеристика) КАК ВложенныйЗапрос
	               |		ПО ТоварныйАссортиментТочекСрезПоследних.Характеристика = ВложенныйЗапрос.Характеристика
				   //+++АК mika 2018.10.17 ИП-00019755 
				   |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АссортиментАвтоНоменклатура КАК ВТ_АссортиментАвтоНоменклатура
				   |		ПО ТоварныйАссортиментТочекСрезПоследних.Номенклатура = ВТ_АссортиментАвтоНоменклатура.Номенклатура
				   //---АК mika
				   |
	               |УПОРЯДОЧИТЬ ПО
	               |	ТоварныйАссортиментТочекСрезПоследних.Номенклатура.Наименование";

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДоб = ТабЗначения.Добавить();
		СтрокаДоб.Номенклатура = Выборка.Номенклатура;
		СтрокаДоб.МестоВыкладки = Выборка.МестоВыкладки;
		СтрокаДоб.id_TT = Выборка.id_TT;
		СтрокаДоб.МинОстаток = Выборка.МинОстаток;
		СтрокаДоб.БылМинимальный = Выборка.МинОстаток;
		СтрокаДоб.МаксОстаток = Выборка.МаксОстаток;
		СтрокаДоб.БылМаксимальный = Выборка.МаксОстаток;
		СтрокаДоб.НормативныйКвант = Выборка.Квант;
		СтрокаДоб.Неактивная = Выборка.Неактивная;
		СтрокаДоб.Статус = Выборка.СтатусSQL; //+++АК mika 2018.10.17 ИП-00020152 
	КонецЦикла;
	
	ТабЗначения.Сортировать("МестоВыкладки, Номенклатура");

	ЗаполнитьКонечныеОстатки();
	
	ЗаполнитьСредниеПродажи(); //+++АК SHEP 2018.08.01 ИП-00019381
	
КонецПроцедуры	

//+++АК SHEP 2018.08.01 ИП-00019381
&НаСервере
Процедура ЗаполнитьСредниеПродажи()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Сутки = 24*60*60;
	//+++АК SHEP 2018.10.25 ИП-00020078
	//ДатаНачала 		= НачалоДня(ТекущаяДата()) - 7 * Сутки; // берём предыдущие 7 дней
	ДатаНачала 		= НачалоДня(ТекущаяДата()) - 14 * Сутки; // берём предыдущие 14 дней
	//---АК SHEP 2018.10.25
	ДатаОкончания 	= КонецДня(ТекущаяДата()) - 1 * Сутки;
	мРасчетчик 		= Неопределено; //Справочники.Расчетчики.ПустаяСсылка();
	мОсновнойСклад	= Справочники.СтруктурныеЕдиницы.ПустаяСсылка();
	
	ТекТорговаяТочка = ПараметрыСеанса.ТорговаяТочкаПоАйпи;
	МассивТТВкл		= Новый Массив;
	МассивТТВкл.Добавить(ТекТорговаяТочка);
	МассивТТИскл 	= Новый Массив;
	
	ВыводитьТТМиниТТПусто =
		(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекТорговаяТочка, "ТипТорговойТочкиДляАссортимента") <> ПредопределенноеЗначение("Перечисление.ТипыТорговыхТочекДляТоварногоАссортимента.ВВ"));
	ВыводитьТолькоВВ = Ложь;
	
	ТаблицаДанных_СредниеПродажи = Отчеты.ОтчетПоПродажамИПотеряннымПродажам.ПолучитьТаблицуПродаж(ДатаНачала, ДатаОкончания,
														мРасчетчик, мОсновнойСклад, МассивТТВкл, МассивТТИскл,
														ВыводитьТТМиниТТПусто, ВыводитьТолькоВВ);
	ТаблицаДанных_СредниеПродажи.Свернуть("Номенклатура", "Количество_пр,Количество_с,Количество_пот");
	
	ТаблицаДанных_СредниеПродажи.Индексы.Добавить("Номенклатура");
	
	Для Каждого СтрокаТаб Из ТабЗначения Цикл
		СтрокаКеш = ТаблицаДанных_СредниеПродажи.Найти(СтрокаТаб.Номенклатура, "Номенклатура");
		Если СтрокаКеш <> Неопределено Тогда
			//+++АК SHEP 2018.10.25 ИП-00020078
			//СтрокаТаб.СредниеПродажи = (СтрокаКеш.Количество_пр + СтрокаКеш.Количество_с + СтрокаКеш.Количество_пот) / 7; // среднее за неделю
			СтрокаТаб.СредниеПродажи = (СтрокаКеш.Количество_пр + СтрокаКеш.Количество_с + СтрокаКеш.Количество_пот) / 14; // среднее за 14 дней
			//---АК SHEP 2018.10.25
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСтрокуТаблицы(Позиция)
	Если Позиция = Неопределено Тогда
		Возврат
	КонецЕсли;
	Позиция.Комментарий = ?(Позиция.МинОстаток>Позиция.НормативныйКвант*10 И Позиция.НормативныйКвант>0,"Мин.остаток более, чем в 10 раз превышает квант упаковки","");
	Позиция.Предупредить = Позиция.Комментарий<>""
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьТаблицуОграничений();	
	
	ОбновитьДоступностьСервер(); //+++АК mika 2018.11.14 ИП-00019857 
	
КонецПроцедуры

&НаКлиенте
Процедура ТабЗначенияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Не ОтменаРедактирования Тогда
		ТекДанные = Элементы.ТабЗначения.ТекущиеДанные;
		Если ТекДанные.МинОстаток <> ТекДанные.БылМинимальный
			ИЛИ ТекДанные.МаксОстаток <> ТекДанные.БылМаксимальный Тогда
			Если ЗначениеЗаполнено(ТекДанные.НормативныйКвант)
				И ЗначениеЗаполнено(ТекДанные.МаксОстаток)
				И ТекДанные.МаксОстаток < ТекДанные.НормативныйКвант Тогда
				//+++АК MIND 2018.01.31 убираю макс остаток
				//Предупреждение("Нельзя установить максимальный остаток меньше, чем нормативный квант");
			Иначе	
				ПроверитьСтрокуТаблицы(ТекДанные);
				Элементы.ТабЗначения.ТекущиеДанные.БылоИзменение = Истина;
			КонецЕсли;	
		Иначе
			Элементы.ТабЗначения.ТекущиеДанные.БылоИзменение = Ложь;
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНаСервере()
	

	УстановитьПривилегированныйРежим(Истина);
	
	Попытка
		Автор = Строка(ПараметрыСеанса.ТекущийПродавец);
	Исключение
		Автор = ПараметрыСеанса.ТекущийПользователь;
	КонецПопытки;	
	
	ТекстИзменения = "";
	
	Для Каждого СтрокаТаб Из ТабЗначения Цикл
		Если СтрокаТаб.БылоИзменение Тогда
			ТекстИзменения = ТекстИзменения + ?(ЗначениеЗаполнено(ТекстИзменения), Символы.ПС, "") + СтрокаТаб.Номенклатура + " Мин. остаток  Был: " + Формат(СтрокаТаб.БылМинимальный, "ЧН=") + " Стал: " + Формат(СтрокаТаб.МинОстаток, "ЧН=") + "     Макс. остаток  Был: " + Формат(СтрокаТаб.БылМаксимальный, "ЧН=") + " Стал: " + Формат(СтрокаТаб.МаксОстаток, "ЧН=");
			Запись = РегистрыСведений.ТоварныеОграниченияНаТочках.СоздатьМенеджерЗаписи();
			Запись.ГруппаНоменклатуры = СтрокаТаб.Номенклатура;
			Запись.ТорговаяТочка = ПараметрыСеанса.ТорговаяТочкаПоАйпи;
			Запись.id_TT = СтрокаТаб.id_TT;
			Запись.МинимальныйОстаток = СтрокаТаб.МинОстаток;
			Запись.МаксимальныйОстаток = СтрокаТаб.МаксОстаток;
			Запись.ДатаСозданияЗаписи = ТекущаяДата();
			Запись.Автор = Автор;
			Запись.Записать();
		КонецЕсли;	
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ТекстИзменения) Тогда
		
		ЗапросКонтИнфы = Новый Запрос();
		ЗапросКонтИнфы.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
		ЗапросКонтИнфы.УстановитьПараметр("Объект", ПараметрыСеанса.ТорговаяТочкаПоАйпи);
		//ЗапросКонтИнфы.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		//					   |	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(200)) КАК Адрес
		//					   |ИЗ
		//					   |	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ТекущаяДата, ) КАК СоответствиеОбъектРольСрезПоследних
		//					   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		//					   |			РолиПользователейСоставРоли.Ссылка КАК Ссылка,
		//					   |			РолиПользователейСоставРоли.Сотрудник КАК Сотрудник
		//					   |		ИЗ
		//					   |			Справочник.Пользователи КАК Пользователи
		//					   |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		//					   |				ПО Пользователи.ФизЛицо = РолиПользователейСоставРоли.Сотрудник) КАК ВЗ_Сотрудники
		//					   |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		//					   |			ПО ВЗ_Сотрудники.Сотрудник = КонтактнаяИнформация.Объект
		//					   |				И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
		//					   |				И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица))
		//					   |		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = ВЗ_Сотрудники.Ссылка
		//					   |ГДЕ
		//					   |	СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
		//					   |	И СоответствиеОбъектРольСрезПоследних.Объект = &Объект
		//					   |
		//					   |ОБЪЕДИНИТЬ ВСЕ
		//					   |
		//					   |ВЫБРАТЬ
		//					   |	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(200))
		//					   |ИЗ
		//					   |	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ТекущаяДата, ) КАК СоответствиеОбъектРольСрезПоследних
		//					   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		//					   |			РолиПользователейСоставРоли.Ссылка КАК Ссылка,
		//					   |			РолиПользователейСоставРоли.Сотрудник КАК Сотрудник
		//					   |		ИЗ
		//					   |			Справочник.Пользователи КАК Пользователи
		//					   |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		//					   |				ПО Пользователи.ФизЛицо = РолиПользователейСоставРоли.Сотрудник) КАК ВЗ_Сотрудники
		//					   |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		//					   |			ПО ВЗ_Сотрудники.Сотрудник = КонтактнаяИнформация.Объект
		//					   |				И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
		//					   |				И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица))
		//					   |		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя.Родитель = ВЗ_Сотрудники.Ссылка
		//					   |ГДЕ
		//					   |	СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
		//					   |	И СоответствиеОбъектРольСрезПоследних.Объект = &Объект";
		
		ЗапросКонтИнфы.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		                       |	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(200)) КАК Адрес
		                       |ИЗ
		                       |	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ТекущаяДата, ) КАК СоответствиеОбъектРольСрезПоследних
		                       |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		                       |			РолиПользователейСоставРоли.Ссылка КАК Ссылка,
		                       |			РолиПользователейСоставРоли.Сотрудник КАК Сотрудник
		                       |		ИЗ
		                       |			Справочник.Пользователи КАК Пользователи
		                       |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		                       |				ПО Пользователи.ФизЛицо = РолиПользователейСоставРоли.Сотрудник) КАК ВЗ_Сотрудники
		                       |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		                       |			ПО ВЗ_Сотрудники.Сотрудник = КонтактнаяИнформация.Объект
		                       |				И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
		                       |				И (КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.EmailФизЛица))
		                       |		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = ВЗ_Сотрудники.Ссылка
		                       |ГДЕ
		                       //+++ AK suvv 2018.06.08 ИП-00018376.01
							   //|	СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
							   |	(СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
							   |    ИЛИ СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы))
							   //--- AK suvv
							   //+++АК ILIK 2018.10.29 ИП-00020072
							   //|	И СоответствиеОбъектРольСрезПоследних.Объект = &Объект";
							   |	И СоответствиеОбъектРольСрезПоследних.Объект = &Объект
							   |
		                       |ОБЪЕДИНИТЬ
		                       |
		                       |ВЫБРАТЬ
		                       |	ЗначенияСвойствСтруктурныхЕдиниц.СтруктурнаяЕдиница.АдресЭлектроннойПочты
		                       |ИЗ
		                       |	РегистрСведений.ЗначенияСвойствСтруктурныхЕдиниц КАК ЗначенияСвойствСтруктурныхЕдиниц
		                       |ГДЕ
		                       |	ЗначенияСвойствСтруктурныхЕдиниц.СтруктурнаяЕдиница = &Объект
		                       |	И ЗначенияСвойствСтруктурныхЕдиниц.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваСтруктурныхЕдиниц.УведомлятьОбИзмененииТоварныхОграничений)
		                       |	И ЗначенияСвойствСтруктурныхЕдиниц.Значение = ИСТИНА
		                       |	И ЗначенияСвойствСтруктурныхЕдиниц.СтруктурнаяЕдиница.АдресЭлектроннойПочты <> """"";
							   //---АК ILIK
							   
		ТабАдреса = ЗапросКонтИнфы.Выполнить().Выгрузить();
		
		Если ТабАдреса.Количество() > 0 Тогда
			УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
			Почта = Новый ИнтернетПочта;
			Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
			Письмо = Новый ИнтернетПочтовоеСообщение;
			Почта.Подключиться(Профиль);
			Письмо.Тема = "На магазине " + ПараметрыСеанса.ТорговаяТочкаПоАйпи + " были внесены изменения в товарные ограничения";
			Письмо.ИмяОтправителя = ""+УчетнаяЗапись+"";
			Письмо.ИмяОтправителя  = ""+СокрЛП(УчетнаяЗапись)+"";
			Письмо.Отправитель     = ""+СокрЛП(УчетнаяЗапись)+"";
			Для Каждого СтрокаАдр Из ТабАдреса Цикл
				Получатель = Письмо.Получатели.Добавить();
				Получатель.Адрес           = СокрЛП(СтрокаАдр.Адрес);
				Получатель.ОтображаемоеИмя = СокрЛП(СтрокаАдр.Адрес);
			КонецЦикла;	
			
			ТекстСообщения = Письмо.Тексты.Добавить();
			ТекстСообщения.Текст     = "Изменения внес " + Автор + Символы.ПС + ТекстИзменения;
			ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
			
			Попытка
				Почта.Послать(Письмо);
				Почта.Отключиться();
			Исключение
			КонецПопытки;	
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	
	ТекстИзменения = "";
	ЕстьПредупреждения = Ложь;
	
	Для Каждого СтрокаТаб Из ТабЗначения Цикл
		Если СтрокаТаб.БылоИзменение Тогда
			ТекстИзменения = ТекстИзменения + ?(ЗначениеЗаполнено(ТекстИзменения), Символы.ПС, "") + СтрокаТаб.Номенклатура + " Мин. остаток  Был: " + Формат(СтрокаТаб.БылМинимальный, "ЧН=") + " Стал: " + Формат(СтрокаТаб.МинОстаток, "ЧН=") + "     Макс. остаток  Был: " + Формат(СтрокаТаб.БылМаксимальный, "ЧН=") + " Стал: " + Формат(СтрокаТаб.МаксОстаток, "ЧН=");
			Если СтрокаТаб.Предупредить Тогда
				ЕстьПредупреждения = Истина
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;	
	
	Если ЕстьПредупреждения Тогда
		Если Вопрос("Есть предупреждения для записываемых строк. Продолжить?",РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Нет Тогда
			Сообщить("Данные не записаны");
			Возврат
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстИзменения) Тогда
		Ответ = Вопрос("Вы внесли следующие изменения. Хотите их записать?" + Символы.ПС + ТекстИзменения, РежимДиалогаВопрос.ДаНетОтмена, 60, КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ЗаписатьНаСервере();
		ИначеЕсли Ответ = КодВозвратаДиалога.Отмена Тогда	
			Возврат;
		КонецЕсли;	
	КонецЕсли;	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ТабЗначенияПередНачаломИзменения(Элемент, Отказ)
	
	Счетчик = 0;
	Для Каждого СтрокаТаб Из ТабЗначения Цикл
		Если СтрокаТаб.БылоИзменение Тогда
			Счетчик = Счетчик + 1;
		КонецЕсли;	
	КонецЦикла;
	
	//+++АК SHEP 2018.11.30 ИП-00020078.03: пока отключил
	//Если Счетчик >= 20 Тогда
	//	Предупреждение("Нельзя за один раз менять более 20 позиций");
	//	Отказ = Истина;
	//Иначе
	//---АК SHEP 2018.11.30
		Отказ = Истина;
		//+++АК SHEP 2018.10.25 ИП-00020078: небольшая оптимизация, как так вообще можно программировать???
		//Результат = ОткрытьФормуМодально("Обработка.УстановкаТоварныхОграничений_Магазины.Форма.Редактирование", Новый Структура("Номенклатура, НормативныйКвант, МинОстаток, МаксОстаток"
		//				, Элементы.ТабЗначения.ТекущиеДанные.Номенклатура, Элементы.ТабЗначения.ТекущиеДанные.НормативныйКвант, Элементы.ТабЗначения.ТекущиеДанные.МинОстаток, Элементы.ТабЗначения.ТекущиеДанные.МаксОстаток));
		ТекущиеДанные = Элементы.ТабЗначения.ТекущиеДанные;
		Результат = ОткрытьФормуМодально(СтроковыеФункцииКлиентСервер.ПолучитьПолноеИмяФормы(ИмяФормы, "Редактирование"), Новый Структура("Номенклатура, НормативныйКвант, МинОстаток, МаксОстаток"
						, ТекущиеДанные.Номенклатура, ТекущиеДанные.НормативныйКвант, ТекущиеДанные.МинОстаток, ТекущиеДанные.МаксОстаток));
		//---АК SHEP 2018.10.25


		Если ТипЗнч(Результат) = Тип("Структура") Тогда
			//+++АК BELN 2018.01.31 
			Если (Результат.МинОстаток>0 ИЛИ Результат.МаксОстаток>0) И Элементы.ТабЗначения.ТекущиеДанные.Неактивная Тогда
				Сообщить("Эта позиция имеет статус активности характеристики Выведена или Неактивна, не рекомендуется устанавливать положительное значение остатка");	
			КонецЕсли; 				
			//---АК BELN 2018.01.31 				
			ТекДанные = Элементы.ТабЗначения.ТекущиеДанные;
			Если ТекДанные.МинОстаток <> Результат.МинОстаток
				ИЛИ ТекДанные.МаксОстаток <> Результат.МаксОстаток Тогда
				ТекДанные.БылоИзменение = Истина;
				ТекДанные.МинОстаток = Результат.МинОстаток;
				ТекДанные.МаксОстаток = Результат.МаксОстаток;
			КонецЕсли;
			ПроверитьСтрокуТаблицы(ТекДанные);
		КонецЕсли;	
	//КонецЕсли; //---АК SHEP 2018.11.30
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьТовар(Команда)
	//+++АК БЕЛН 20170220
	//ТоварДобавленный = ОткрытьФормуМодально("Обработка.УстановкаТоварныхОграничений_Магазины.Форма.ФормаВыбораТовара",, ЭтаФорма);
	//Если ЗначениеЗаполнено(ТоварДобавленный) Тогда
	//	ЗаполнитьТаблицуОграничений(ТоварДобавленный);
	//КонецЕсли;	
	ОткрытьФорму("Обработка.РабочийСтолПродавца.Форма.ФормаДобавленияВАссортимент",,ЭтаФорма);
	//---АК БЕЛН 20170220
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Для Каждого Позиция из ТабЗначения Цикл
		ПроверитьСтрокуТаблицы(Позиция)
	КонецЦикла;
    ОбновитьДанныеПоАссортименту();

КонецПроцедуры

//+++АК БЕЛН 20170220
//&НаКлиенте
//Процедура НадписьЕстьТоварыКДобавлениюВАссортиментНажатие(Элемент)
//	ОткрытьФорму("Обработка.РабочийСтолПродавца.Форма.ФормаДобавленияВАссортимент",,ЭтаФорма);
//КонецПроцедуры

&НаСервере
Процедура ПолучитьТаблицуКДобавлению(ТекДата)
	УстановитьПривилегированныйРежим(Истина);
	ТоварыКДобавлениюВАсс.Очистить();
	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц=Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	СоответствиеТиповРозничныхТочекИТорговыхМарок.ТипРозничнойТочки,
	               |	СоответствиеТиповРозничныхТочекИТорговыхМарок.ТорговаяМарка
	               |ПОМЕСТИТЬ втТорговыеМарки
	               |ИЗ
	               |	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеТиповРозничныхТочекИТорговыхМарок КАК СоответствиеТиповРозничныхТочекИТорговыхМарок
	               |		ПО СтруктурныеЕдиницы.ТипРозничнойТочки = СоответствиеТиповРозничныхТочекИТорговыхМарок.ТипРозничнойТочки
	               |ГДЕ
	               |	СтруктурныеЕдиницы.Ссылка = &ТТ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПотерянныеПродажиПоТочкам.Номенклатура,
	               |	&ТТ КАК ТорговаяТочка
	               |ПОМЕСТИТЬ втНоменклатура
	               |ИЗ
	               |	РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(
	               |			&КонецДня,
	               |			ТорговаяТочка <> &ТТ
	               |				И Номенклатура.ТорговаяМарка В
	               |					(ВЫБРАТЬ
	               |						втТОрговыеМарки.ТорговаяМарка
	               |					ИЗ
	               |						втТОрговыеМарки)) КАК ПотерянныеПродажиПоТочкам
	               |ГДЕ
	               |	ПотерянныеПродажиПоТочкам.Выведена = ЛОЖЬ
	               |	И ПотерянныеПродажиПоТочкам.Запрещена = ЛОЖЬ
	               |	И ПотерянныеПродажиПоТочкам.Номенклатура.ТипТовара <> ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.Сырье)
	               |	И ПотерянныеПродажиПоТочкам.Номенклатура.ТипТовара <> ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.Упаковка)
	               |	И НЕ ПотерянныеПродажиПоТочкам.Номенклатура В (&НоменИскл)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПотерянныеПродажиПоТочкам.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втНоменклатураСАналогами.Номенклатура,
	               |	втНоменклатураСАналогами.ТорговаяТочка,
	               |	ТоварныйАссортиментТочекСрезПоследних.Период
	               |ПОМЕСТИТЬ втТоварыВнеАссортимента
	               |ИЗ
	               |	втНоменклатура КАК втНоменклатураСАналогами
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(
	               |				&КонецДня,
	               |				ТорговаяТочка = &ТТ
	               |					И Номенклатура.ТорговаяМарка В
	               |						(ВЫБРАТЬ
	               |							втТорговыеМарки.ТорговаяМарка
	               |						ИЗ
	               |							втТорговыеМарки)) КАК ТоварныйАссортиментТочекСрезПоследних
	               |		ПО втНоменклатураСАналогами.Номенклатура = ТоварныйАссортиментТочекСрезПоследних.Номенклатура
	               |			И втНоменклатураСАналогами.ТорговаяТочка = ТоварныйАссортиментТочекСрезПоследних.ТорговаяТочка
	               |			И (ТоварныйАссортиментТочекСрезПоследних.Выведена = ЛОЖЬ)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втНоменклатураСАналогами.Номенклатура,
	               |	втНоменклатураСАналогами.ТорговаяТочка,
	               |	ТоварныйАссортиментТочекСрезПоследних.Период
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втТоварыВнеАссортимента.Номенклатура,
	               |	втТоварыВнеАссортимента.ТорговаяТочка,
	               |	МАКСИМУМ(втТоварыВнеАссортимента.Период) КАК Период
	               |ПОМЕСТИТЬ втТоварыВнеАссортиментаГрупп
	               |ИЗ
	               |	втТоварыВнеАссортимента КАК втТоварыВнеАссортимента
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втТоварыВнеАссортимента.Номенклатура,
	               |	втТоварыВнеАссортимента.ТорговаяТочка
	               |
	               |ИМЕЮЩИЕ
	               |	МАКСИМУМ(втТоварыВнеАссортимента.Период) ЕСТЬ NULL
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втТоварыВнеАссортимента.ТорговаяТочка,
	               |	ХарактеристикиНоменклатуры.Владелец КАК Номенклатура,
	               |	МАКСИМУМ(ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, 0)) КАК КоличествоВУпаковке,
	               |	МИНИМУМ(ВЫРАЗИТЬ(ХарактеристикиНоменклатуры.СрокГодности * ХарактеристикиНоменклатуры.ТипСрокаГодности.КоэффициентВСутках КАК ЧИСЛО(10, 0))) КАК СрокГодности
	               |ПОМЕСТИТЬ втНоменклатураДляДобавления
	               |ИЗ
	               |	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	               |		ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов.Объект
	               |			И (ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.КоличествоВУпаковке))
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втТоварыВнеАссортиментаГрупп КАК втТоварыВнеАссортимента
	               |		ПО ХарактеристикиНоменклатуры.Владелец = втТоварыВнеАссортимента.Номенклатура
	               |ГДЕ
	               |	ХарактеристикиНоменклатуры.СрокГодности > 0
	               |	И ХарактеристикиНоменклатуры.Неактивная = ЛОЖЬ
	               |	И ХарактеристикиНоменклатуры.ПометкаУдаления = ЛОЖЬ
	               |	И ЕСТЬNULL(ЗначенияСвойствОбъектов.Значение, 0) > 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ХарактеристикиНоменклатуры.Владелец,
	               |	втТоварыВнеАссортимента.ТорговаяТочка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втНоменклатураДляДобавления.ТорговаяТочка,
	               |	втНоменклатураДляДобавления.Номенклатура,
	               |	втНоменклатураДляДобавления.КоличествоВУпаковке,
	               |	СУММА(ЕСТЬNULL(ПотерянныеПродажиПоТочкам.Количество, 0)) КАК КоличествоПотерянных,
	               |	втНоменклатураДляДобавления.СрокГодности
	               |ПОМЕСТИТЬ ВтПотерянныеЗаПериод
	               |ИЗ
	               |	втНоменклатураДляДобавления КАК втНоменклатураДляДобавления
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПотерянныеПродажиПоТочкам КАК ПотерянныеПродажиПоТочкам
	               |		ПО втНоменклатураДляДобавления.Номенклатура = ПотерянныеПродажиПоТочкам.Номенклатура
	               |			И втНоменклатураДляДобавления.ТорговаяТочка = ПотерянныеПродажиПоТочкам.ТорговаяТочка
	               |			И (ПотерянныеПродажиПоТочкам.Дата >= ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, -((ВЫРАЗИТЬ(втНоменклатураДляДобавления.СрокГодности / 2 КАК ЧИСЛО(10, 0))) - 1)))
	               |			И (ПотерянныеПродажиПоТочкам.Дата <= &КонецДня)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втНоменклатураДляДобавления.ТорговаяТочка,
	               |	втНоменклатураДляДобавления.Номенклатура,
	               |	втНоменклатураДляДобавления.КоличествоВУпаковке,
	               |	втНоменклатураДляДобавления.СрокГодности
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВтПотерянныеЗаПериод.ТорговаяТочка,
	               |	ВтПотерянныеЗаПериод.Номенклатура,
	               |	ВтПотерянныеЗаПериод.КоличествоВУпаковке,
	               |	ВтПотерянныеЗаПериод.КоличествоПотерянных КАК КоличествоПотерянных,
	               |	ВтПотерянныеЗаПериод.СрокГодности КАК СрокГодностиВДнях
	               |ПОМЕСТИТЬ втКДобавлениюТовары
	               |ИЗ
	               |	ВтПотерянныеЗаПериод КАК ВтПотерянныеЗаПериод
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втКДобавлениюТовары.ТорговаяТочка,
	               |	втКДобавлениюТовары.Номенклатура,
	               |	втКДобавлениюТовары.КоличествоВУпаковке,
	               |	втКДобавлениюТовары.КоличествоПотерянных,
	               |	втКДобавлениюТовары.СрокГодностиВДнях,
	               |	ВЫБОР
	               |		КОГДА втКДобавлениюТовары.СрокГодностиВДнях = 0
	               |			ТОГДА 0
	               |		ИНАЧЕ ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) * ВЫБОР
	               |				КОГДА втКДобавлениюТовары.КоличествоПотерянных > втКДобавлениюТовары.КоличествоВУпаковке
	               |						И НЕ втКДобавлениюТовары.Номенклатура.КатегорияАссортимента = ЗНАЧЕНИЕ(Перечисление.КатегорииАссортимента.ОсобыеТовары)
	               |					ТОГДА втКДобавлениюТовары.КоличествоПотерянных
	               |				ИНАЧЕ 0
	               |			КОНЕЦ / втКДобавлениюТовары.СрокГодностиВДнях
	               |	КОНЕЦ КАК Выигрыш,
	               |	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена
	               |ПОМЕСТИТЬ втВыигрыш
	               |ИЗ
	               |	втКДобавлениюТовары КАК втКДобавлениюТовары
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	               |				&КонецДня,
	               |				ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.ОсновнойТипЦенПродаж)
	               |					И Номенклатура В
	               |						(ВЫБРАТЬ
	               |							втКДобавлениюТовары.Номенклатура
	               |						ИЗ
	               |							втКДобавлениюТовары КАК втКДобавлениюТовары)
	               |					И ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)) КАК ЦеныНоменклатурыСрезПоследних
	               |		ПО втКДобавлениюТовары.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втВыигрыш.ТорговаяТочка,
	               |	втВыигрыш.Номенклатура,
	               |	втВыигрыш.КоличествоВУпаковке,
	               |	втВыигрыш.КоличествоПотерянных,
	               |	втВыигрыш.СрокГодностиВДнях,
	               |	втВыигрыш.Цена,
	               |	втВыигрыш.Выигрыш
	               |ПОМЕСТИТЬ втИтогБезХар
	               |ИЗ
	               |	втВыигрыш КАК втВыигрыш
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втИтогБезХар.ТорговаяТочка,
	               |	втИтогБезХар.Номенклатура,
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ХарактеристикиНоменклатуры.Ссылка) КАК КолХар,
	               |	втИтогБезХар.КоличествоВУпаковке,
	               |	втИтогБезХар.КоличествоПотерянных,
	               |	втИтогБезХар.СрокГодностиВДнях,
	               |	втИтогБезХар.Цена,
	               |	втИтогБезХар.Выигрыш
	               |ПОМЕСТИТЬ втКолХар
	               |ИЗ
	               |	втИтогБезХар КАК втИтогБезХар
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	               |		ПО втИтогБезХар.Номенклатура = ХарактеристикиНоменклатуры.Владелец
	               |			И (НЕ ХарактеристикиНоменклатуры.ПометкаУдаления)
	               |			И (НЕ ХарактеристикиНоменклатуры.Неактивная)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	втИтогБезХар.ТорговаяТочка,
	               |	втИтогБезХар.Номенклатура,
	               |	втИтогБезХар.КоличествоВУпаковке,
	               |	втИтогБезХар.КоличествоПотерянных,
	               |	втИтогБезХар.СрокГодностиВДнях,
	               |	втИтогБезХар.Цена,
	               |	втИтогБезХар.Выигрыш
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВложенныйЗапрос.Номенклатура КАК Номенклатура,
	               |	ТоварныйАссортиментТочекСрезПоследних.Период КАК ДатаВывода,
				   //+++АК SHEP 2018.10.25 ИП-00020078
				   |	ТоварныйАссортиментТочекСрезПоследних.Автор КАК АвторВывода,
				   //---АК SHEP 2018.10.25
	               |	ВложенныйЗапрос.ТорговаяТочка
	               |ПОМЕСТИТЬ втАссортимент
	               |ИЗ
	               |	втКолХар КАК ВложенныйЗапрос
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(&ТекущаяДата, ТорговаяТочка = &СтруктурнаяЕдиница) КАК ТоварныйАссортиментТочекСрезПоследних
	               |		ПО ВложенныйЗапрос.Номенклатура = ТоварныйАссортиментТочекСрезПоследних.Номенклатура
	               |			И (ТоварныйАссортиментТочекСрезПоследних.Выведена
	               |				ИЛИ ТоварныйАссортиментТочекСрезПоследних.Запрещена)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	втАссортимент.Номенклатура,
	               |	"""" КАК ПризнакАссортимента,
	               |	втАссортимент.ДатаВывода,
				   //+++АК SHEP 2018.10.25 ИП-00020078
				   |	втАссортимент.АвторВывода,
				   //---АК SHEP 2018.10.25
	               |	ЕСТЬNULL(втКолХар.Выигрыш, 0) КАК Выигрыш,
	               |	ЕСТЬNULL(втКолХар.Цена, 0) КАК Цена,
	               |	ЕСТЬNULL(втКолХар.СрокГодностиВДнях, 0) КАК СрокГодности,
	               |	ЕСТЬNULL(втКолХар.КоличествоПотерянных, 0) КАК КоличествоПотерянныхЗаПолСрокаГодности,
	               |	ЕСТЬNULL(втКолХар.КоличествоВУпаковке, 0) КАК КоличествоВКоробке,
	               |	ВЗ_Выкладка.МестоВыкладки,
	               |	втАссортимент.ТорговаяТочка,
	               |	втАссортимент.Номенклатура.id_tov КАК id_tov,
	               |	0 КАК Покупателей,
				   |	втАссортимент.Номенклатура.КатегорияАссортимента КАК КатегорияАссортимента				   
	               |ИЗ
	               |	втАссортимент КАК втАссортимент
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втКолХар КАК втКолХар
	               |		ПО втАссортимент.Номенклатура = втКолХар.Номенклатура
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВыкладкаПланограммы.Номенклатура КАК Номенклатура,
	               |			ВыкладкаПланограммы.МестоВыкладки КАК МестоВыкладки
	               |		ИЗ
	               |			РегистрСведений.ВыкладкаПланограммы КАК ВыкладкаПланограммы
	               |		ГДЕ
	               |			ВыкладкаПланограммы.Планограмма В
	               |					(ВЫБРАТЬ
	               |						СтруктурныеЕдиницы.Планограмма
	               |					ИЗ
	               |						Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	               |					ГДЕ
	               |						СтруктурныеЕдиницы.Ссылка = &СтруктурнаяЕдиница)) КАК ВЗ_Выкладка
	               |		ПО втАссортимент.Номенклатура = ВЗ_Выкладка.Номенклатура
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Выигрыш УБЫВ";

	Запрос.УстановитьПараметр("Дата", НачалоДня(ТекДата));
	Запрос.УстановитьПараметр("КонецДня", КонецДня(ТекДата));
	Запрос.УстановитьПараметр("ТекущаяДата", КонецДня(ТекДата));
	Запрос.УстановитьПараметр("ТТ", ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	Запрос.УстановитьПараметр("ПризнакДляДетей", Справочники.ПризнакиУчетаНоменклатуры.НайтиПоНаименованию("Детские товары"));
	
	НоменИскл=Новый Массив;
	НоменИскл.Добавить(Справочники.Номенклатура.НайтиПоКоду("000624109"));
	НоменИскл.Добавить(Справочники.Номенклатура.НайтиПоКоду("000624110"));
	НоменИскл.Добавить(Справочники.Номенклатура.НайтиПоКоду("000624086"));
	Запрос.УстановитьПараметр("НоменИскл", (НоменИскл));
	Результат = Запрос.Выполнить();

	ТЗХарактеристики = Результат.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекДата"		, ТекущаяДата());
	Запрос.УстановитьПараметр("Кавказский"	, Справочники.СтруктурныеЕдиницы.НайтиПоКоду("P00000231"));
	Запрос.УстановитьПараметр("ОсновнойСклад", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыСеанса.ТорговаяТочкаПоАйпи, "ОсновнойСклад"));
	Запрос.УстановитьПараметр("ВтНом"		, ТЗХарактеристики);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВтНом.Номенклатура
	|ПОМЕСТИТЬ ВТ_Номенклатура
	|ИЗ
	|	&ВтНом КАК ВтНом
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВтНом.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварныйАссортиментТочекСрезПоследних.Номенклатура,
	|	ТоварныйАссортиментТочекСрезПоследних.Характеристика,
	|	ТоварныйАссортиментТочекСрезПоследних.ТорговаяТочка.ОсновнойСклад КАК ОсновнойСклад,
	|	СУММА(1) КАК Колво
	|ИЗ
	|	РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(
	|			&ТекДата,
	|			ТорговаяТочка.ОсновнойСклад = &ОсновнойСклад
	|				И Номенклатура В
	|					(ВЫБРАТЬ
	|						ВТ_Номенклатура.Номенклатура
	|					ИЗ
	|						ВТ_Номенклатура КАК ВТ_Номенклатура)) КАК ТоварныйАссортиментТочекСрезПоследних
	|ГДЕ
	|	ТоварныйАссортиментТочекСрезПоследних.Выведена = ЛОЖЬ
	|	И ТоварныйАссортиментТочекСрезПоследних.Запрещена = ЛОЖЬ
	|	И ТоварныйАссортиментТочекСрезПоследних.Характеристика.СтатусАктивностиХарактеристики <> ЗНАЧЕНИЕ(Перечисление.СтатусыАктивностиХарактеристик.Выведена)
	|	И ТоварныйАссортиментТочекСрезПоследних.Характеристика.СтатусАктивностиХарактеристики <> ЗНАЧЕНИЕ(Перечисление.СтатусыАктивностиХарактеристик.Неактивная)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварныйАссортиментТочекСрезПоследних.ТорговаяТочка.ОсновнойСклад,
	|	ТоварныйАссортиментТочекСрезПоследних.Номенклатура,
	|	ТоварныйАссортиментТочекСрезПоследних.Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтруктурныеЕдиницы.Ссылка КАК ТорговаяТочка,
	|	ВЫБОР
	|		КОГДА СтруктурныеЕдиницы.ОсновнойСклад = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|			ТОГДА &Кавказский
	|		ИНАЧЕ СтруктурныеЕдиницы.ОсновнойСклад
	|	КОНЕЦ КАК ОсновнойСклад
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	(СтруктурныеЕдиницы.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|			ИЛИ ВЫБОР
	|				КОГДА &ЭтоПерекресток
	|					ТОГДА СтруктурныеЕдиницы.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Перекресток)
	//+++АК mika 2018.11.12 ЗА-00015559 Добавлена возможность работы с торговыми точками Пяторочки
	|				КОГДА &ЭтоПятерочка
	|					ТОГДА СтруктурныеЕдиницы.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Пятерочка)
	//---АК mika
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)";
	
	//+++АК mika 2018.11.12 ЗА-00015559 Добавлена возможность работы с торговыми точками Пяторочки
	Если ЗначениеЗаполнено(ПараметрыСеанса.ТорговаяТочкаПоАйпи) Тогда
		ТипРозничнойТочки = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ПараметрыСеанса.ТорговаяТочкаПоАйпи, "ТипРозничнойТочки");
		Запрос.УстановитьПараметр("ЭтоПерекресток", ТипРозничнойТочки = Перечисления.ТипыРозничныхТочек.Перекресток);
		Запрос.УстановитьПараметр("ЭтоПятерочка", ТипРозничнойТочки = Перечисления.ТипыРозничныхТочек.Пятерочка);
	Иначе
		Запрос.УстановитьПараметр("ЭтоПерекресток", Ложь);
		Запрос.УстановитьПараметр("ЭтоПятерочка", Ложь);
	КонецЕсли;
	//---АК mika

	Результаты = Запрос.ВыполнитьПакет();
	ТабСамыеЧастыеХарки = Результаты[1].Выгрузить();
	ТабСамыеЧастыеХарки.Индексы.Добавить("ОсновнойСклад, Номенклатура");
	ТабСкладыМагазинов = Результаты[2].Выгрузить();
	ТабСкладыМагазинов.Индексы.Добавить("ТорговаяТочка");
	ТоварыКДобавлениюВАсс.Очистить();
	
	ADOСоединение = Новый COMОбъект("ADODB.Connection");
	ADOСоединение.ConnectionTimeOut = 0;
	ADOСоединение.CommandTimeOut    = 0;
	СтрПодкл=ОбменСAccess.ПолучитьСтрокуСоединения("M2");
	ADOСоединение.ConnectionString  = СтрПодкл;
	ADOСоединение.Open();
	
	СтрЗапрос = "select distinct
	|	BONUSCARD карта
	|	from SMS_UNION..Checks as ch with(nolock)
	|	where BONUSCARD <>'' and BONUSCARD is not null and
	|	ShopNo ="+ВнешниеДанные.ФорматПоля(ПараметрыСеанса.НомерТочкиПоАйпи)+"
	|	AND CloseDate > dateadd(day,-21,GETDATE())";	
		
	СтрКарты="";
	rs = ADOСоединение.Execute(СтрЗапрос);
	Попытка
		rs.MoveFirst();
		//
		Сч=0;
		Пока НЕ rs.EOF() Цикл
			Сч=Сч+1;
			СтрКарты=СтрКарты+Rs.Fields("карта").Value+",";
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	СтрКарты=Лев(СтрКарты,СтрДлина(СтрКарты)-1);	
	СтрКарты = "'" + СтрЗаменить(СтрКарты, ",", "','") + "'";
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("SRV-SQL03");
	
	Если ADOСоединение = Неопределено Тогда
		Возврат;
	КонецЕсли;

	СтрЗапрос = "SELECT 
	|	l.id_tov,		
	|	l.number number	
	|FROM [vv03].[dbo].[lovepr_card_tov] l (nolock)		
	|	inner join  [vv03].[dbo].[Tovari] (nolock) t	
	|		on t.id_tov = l.id_tov
	|where l.date_from < GETDATE()	
	|	and l.date_to > GETDATE() and l.number  IN(" + СтрКарты + ") group by l.id_tov, number";


	rs = ADOСоединение.Execute(СтрЗапрос);
	
	ТЗНоменклатура=Новый ТаблицаЗначений;
	ТЗНоменклатура.Колонки.Добавить("id_tov");
	Попытка
		rs.MoveFirst();
		//
		Сч=0;
		Пока НЕ rs.EOF() Цикл
			Сч=Сч+1;
			НовСтр=ТЗНоменклатура.Добавить();
			НовСтр.id_tov=Rs.Fields("id_tov").Value;
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	Для каждого Стр Из ТЗХарактеристики Цикл
		Характеристика 	= ОпределитьПравильнуюХаркуДляТочкиТовАссортимент(Стр.ТорговаяТочка, Стр.Номенклатура, ТабСамыеЧастыеХарки, ТабСкладыМагазинов);
		Если Не ЗначениеЗаполнено(Характеристика) Тогда
			Продолжить;	
		КонецЕсли; 		
		
		НовСтр=ТоварыКДобавлениюВАсс.Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр,Стр);
		НовСтр.Номенклатура=Стр.Номенклатура;
		НовСтр.Характеристика=Характеристика;
		НовСтр.Покупателей=ТЗНоменклатура.НайтиСтроки(Новый Структура("id_tov",Стр.id_tov)).Количество();
		НовСтр.Выигрыш=Стр.Выигрыш;
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Функция ОпределитьПравильнуюХаркуДляТочкиТовАссортимент(ТорговаяТочка, Товар, ТабСамыеЧастыеХарки, ТабСкладыМагазинов)
	
	СтрокаКешСклад = ТабСкладыМагазинов.Найти(ТорговаяТочка, "ТорговаяТочка");
	Если СтрокаКешСклад <> Неопределено Тогда
		ТабПоТоварам = Новый ТаблицаЗначений();
		ТабПоТоварам.Колонки.Добавить("Харка");
		ТабПоТоварам.Колонки.Добавить("Колво");
		
		СтрокиПоХарке = ТабСамыеЧастыеХарки.НайтиСтроки(Новый Структура("ОсновнойСклад, Номенклатура", СтрокаКешСклад.ОсновнойСклад, Товар));
		
		Для Каждого СтрокаХар Из СтрокиПоХарке Цикл
			СтрокаДоб = ТабПоТоварам.Добавить();
			СтрокаДоб.Харка = СтрокаХар.Характеристика;
			СтрокаДоб.Колво = СтрокаХар.Колво;
		КонецЦикла;
		
		ТабПоТоварам.Сортировать("Колво убыв");
		Возврат ?(ТабПоТоварам.Количество() > 0, ТабПоТоварам[0].Харка, Неопределено);
	Иначе
		Возврат Неопределено;
	КонецЕсли;	
	
КонецФункции

&НаСервере
Процедура ОбновитьДанныеПоАссортименту() Экспорт
	//Попытка
		ПолучитьТаблицуКДобавлению(ТекущаяДата()); 
		//Элементы.НадписьЕстьТоварыКДобавлениюВАссортимент.Видимость = (ТоварыКДобавлениюВАсс.Количество() > 0);
		//Элементы.НадписьЕстьТоварыКДобавлениюВАссортимент.Заголовок = "Отсутствующие товары в ассортименте (" + Формат(ТоварыКДобавлениюВАсс.Количество(), "ЧГ=0") + ") !";
	//Исключение
	//КонецПопытки;

КонецПроцедуры

//---АК БЕЛН 20170220

//Mind 2017-04-07
&НаКлиенте
Процедура УдалитьИзТоварногоАссортимента(Команда)
	
	ОткрытьФорму("Обработка.УстановкаТоварныхОграничений_Магазины.Форма.ФормаВыводаТовара",, ЭтаФорма);
	
КонецПроцедуры

//Mind 2017-05-24
&НаСервере
Процедура ЗаполнитьКонечныеОстатки()
	
	ТабОстатки = Новый ТаблицаЗначений();
	ТабОстатки.Колонки.Добавить("Номенклатура");
	ТабОстатки.Колонки.Добавить("Количество");
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	
	СтрЗапрос = "SELECT TD.Ost_kon as Kolvo
				|	,UINTov._Fld4946 as TovarUID 
				|FROM SMS_REPL.dbo.TD_ost (nolock) as TD
				|LEFT OUTER JOIN IzbenkaFin.dbo._InfoRg4943 UINTov (nolock) ON TD.id_tov = UINTov._Fld4953 and UINTov._Fld4944_TYPE = 0x08 and UINTov._Fld4944_RTRef = 0x0000001D
				|WHERE TD.ShopNo_rep = " + ВнешниеДанные.ФорматПоля(ПараметрыСеанса.НомерТочкиПоАйпи);
	rs = ADOСоединение.Execute(СтрЗапрос);
	Попытка
		rs.MoveFirst();
		//
		Сч=0;
		Пока НЕ rs.EOF() Цикл
			СтрокаДоб = ТабОстатки.Добавить();
			Если Rs.Fields("TovarUID").Value <> NULL Тогда
				СтрокаДоб.Номенклатура = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Rs.Fields("TovarUID").Value));
			КонецЕсли;
			СтрокаДоб.Количество = Rs.Fields("Kolvo").Value;
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	ТабОстатки.Индексы.Добавить("Номенклатура");
	
	Для Каждого СтрокаТаб Из ТабЗначения Цикл
		СтрокаКеш = ТабОстатки.Найти(СтрокаТаб.Номенклатура, "Номенклатура");
		Если СтрокаКеш <> Неопределено Тогда
			СтрокаТаб.КонечныйОстаток = СтрокаКеш.Количество;
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры	

//+++АК SHEP 2018.10.31 ИП-00020078.01
&НаКлиенте
Процедура ЗаполнитьМинОстаток(Команда)
	ЗаполнитьМинОстатокНаСервере();
КонецПроцедуры

//+++АК SHEP 2018.10.31 ИП-00020078.01
&НаСервере
Процедура ЗаполнитьМинОстатокНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	ТекТорговаяТочка = ПараметрыСеанса.ТорговаяТочкаПоАйпи;
	id_TT = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекТорговаяТочка, "id_TT");
	
	Сутки = 24*60*60;
	ДатаОкончания = КонецДня(ТекущаяДата() + Сутки); // берём на завтра
	ДатаНачала = НачалоДня(ДатаОкончания);
	//ТаблицаДанныхМожетПродать = Отчеты.РасшифровкаРаспределенияТоваровВТорговойТочке.ПолучитьТаблицуДанных(
	//	ВнешниеДанные.ФорматПоля(ДатаНачала, Истина), ВнешниеДанные.ФорматПоля(ДатаОкончания, Истина),
	//	Формат(id_TT, "ЧГ="), "");
	ТаблицаДанныхМожетПродать = РеквизитФормыВЗначение("Объект").ПолучитьТаблицуМожетПродать(
		ДатаНачала, ДатаОкончания, id_TT, "");
	
	Для Каждого СтрокаТЗн Из ТабЗначения Цикл
		
		СтрокаТЗнМожетПродать = ТаблицаДанныхМожетПродать.Найти(СтрокаТЗн.Номенклатура, "Товар"); //ТаблицаДанныхМожетПродать.Найти(Строка(СтрокаТЗн.Номенклатура), "Товар");
		Если СтрокаТЗнМожетПродать = Неопределено Тогда
			МожетПродать = 0;
		Иначе
			МожетПродать = СтрокаТЗнМожетПродать.МожетПродать;
		КонецЕсли;
		
		Если СтрокаТЗн.МинОстаток <> МожетПродать Тогда
			СтрокаТЗн.МинОстаток = МожетПродать;
			СтрокаТЗн.БылоИзменение = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//+++АК mika 2018.11.14 ИП-00019857 
&НаСервере
Процедура ОбновитьДоступностьСервер()
	
	ЭтоКонтролер = РольДоступна("КонтролерСторонняяРозницаПросмотр"); 
	ЭтаФорма.КоманднаяПанель.Доступность = НЕ ЭтоКонтролер;
	
КонецПроцедуры // ОбновитьДоступностьСервер()
