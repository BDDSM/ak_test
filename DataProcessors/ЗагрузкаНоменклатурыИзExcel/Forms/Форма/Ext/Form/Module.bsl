
#Область ОбработчикиСобытийЭлементовФормы

//+++АК LATV 2018.09.18 ИП-00019632
&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	ПоказатьВыборФайла();

КонецПроцедуры

//+++АК LATV 2018.09.18 ИП-00019632
&НаКлиенте
Процедура ИмяФайлаОткрытие(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Если ПустаяСтрока(Объект.ИмяФайла) Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПустойОбработчикОповещения", ЭтаФорма);
	НачатьЗапускПриложения(Оповещение, Объект.ИмяФайла);

КонецПроцедуры

//+++АК LATV 2018.09.18 ИП-00019632
&НаКлиенте
Процедура ОтборПоНаличиюОшибокПриИзменении(Элемент)

	ОтборСтрок = Новый Структура(Элементы.ДанныеНоменклатуры.ОтборСтрок);
	
	Если ПустаяСтрока(ОтборПоНаличиюОшибок) Тогда
		ОтборСтрок.Удалить("ЕстьОшибки");
		ОтборСтрок.Удалить("ХарактеристикаНоменклатуры");
	ИначеЕсли ОтборПоНаличиюОшибок = "СОшибками" Тогда
		ОтборСтрок.Вставить("ЕстьОшибки",					Истина);
		ОтборСтрок.Вставить("ХарактеристикаНоменклатуры",	ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка"));
	ИначеЕсли ОтборПоНаличиюОшибок = "БезОшибок" Тогда
		ОтборСтрок.Вставить("ЕстьОшибки",					Ложь);
		ОтборСтрок.Вставить("ХарактеристикаНоменклатуры",	ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка"));
	КонецЕсли;
	
	Элементы.ДанныеНоменклатуры.ОтборСтрок = Новый ФиксированнаяСтруктура(ОтборСтрок);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ДанныеНоменклатуры

//+++АК LATV 2018.09.18 ИП-00019632
&НаКлиенте
Процедура ДанныеНоменклатурыПриАктивизацииСтроки(Элемент)

	ТекДанные = Элементы.ДанныеНоменклатуры.ТекущиеДанные;
	
	НомерСтрокиФайла = ?(ТекДанные = Неопределено, 0, ТекДанные.НомерСтрокиФайла);
	Элементы.Склады.ОтборСтрок = Новый ФиксированнаяСтруктура("НомерСтрокиФайла", НомерСтрокиФайла);
	
	ЕстьОшибки = ?(ТекДанные = Неопределено, Ложь, Не ПустаяСтрока(ТекДанные.Ошибки));
	Элементы.ДанныеНоменклатурыПоказатьОшибки.Доступность = ЕстьОшибки;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийКомандФормы

//+++АК LATV 2018.09.18 ИП-00019632
&НаКлиенте
Процедура Загрузить(Команда)

	ЗаполнитьВФоне();

КонецПроцедуры

//+++АК LATV 2018.09.18 ИП-00019632
&НаКлиенте
Процедура СоздатьНоменклатуру(Команда)

	СоздатьНоменклатуруВФоне();

КонецПроцедуры

//+++АК LATV 2018.09.18 ИП-00019632
&НаКлиенте
Процедура ПоказатьОшибки(Команда)

	ПоказатьЗначение(, Элементы.ДанныеНоменклатуры.ТекущиеДанные.Ошибки);

КонецПроцедуры

//+++АК LATV 2018.09.16 ИП-00019632
&НаКлиенте
Процедура ПолучитьШаблон(Команда)

	Файлы = ПолучитьШаблонНаСервере();
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	ДиалогВыбораФайла.Фильтр			= "Книга MS Excel (*.xls)|*.xls";
	
	Оповещение = Новый ОписаниеОповещения("ПолучитьШаблонЗавершение", ЭтаФорма);
	НачатьПолучениеФайлов(Оповещение, Файлы, ДиалогВыбораФайла, Истина);

КонецПроцедуры

//+++АК CISA 2018.11.19 ИП-00020346
&НаСервере
Функция ВернутьМассивНоменклатура()
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТабДанные.Номенклатура,
		|	ТабДанные.ХарактеристикаНоменклатуры КАК Характеристика,
		//|	ТабДанные.КодТехнолога,
		//|	ТабДанные.Технолог,
		|	ТабДанные.РольТехнолога
		|ПОМЕСТИТЬ вт
		|ИЗ
		|	&ТабДанные КАК ТабДанные
		|ГДЕ
		|	ТабДанные.Номенклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт.Номенклатура,
		|	вт.Характеристика,
		//|	вт.КодТехнолога,
		//|	вт.Технолог,
		|	вт.РольТехнолога
		|ИЗ
		|	вт КАК вт";
	
	Запрос.УстановитьПараметр("ТабДанные", Объект.ДанныеНоменклатуры.Выгрузить());
	ТЗ = Запрос.Выполнить().Выгрузить();

	мсДанные = Новый Массив;
	Для Каждого СтрокаТЗ Из ТЗ Цикл
        стСтрокаТаблицы = Новый Структура;
        Для Каждого ИмяКолонки Из ТЗ.Колонки Цикл
            стСтрокаТаблицы.Вставить(ИмяКолонки.Имя, СтрокаТЗ[ИмяКолонки.Имя]);
        КонецЦикла;    
        мсДанные.Добавить(стСтрокаТаблицы);       
    КонецЦикла;
	
	Возврат мсДанные;
	
КонецФункции

//+++АК CISA 2018.11.19 ИП-00020346
&НаКлиенте
Процедура ОткрытьОбработкуФормированиеШтрихКодаУпаковок(Команда)
	
	МассивНоменклатура = ВернутьМассивНоменклатура();
	ОткрытьФорму("Обработка.ФормированиеШтрихКодаУпаковок.Форма.Форма", Новый Структура("МассивНоменклатура", МассивНоменклатура), ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ВыборФайла

//+++АК LATV 2018.09.18 ИП-00019632
&НаКлиенте
Процедура ПоказатьВыборФайла()

	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.ПолноеИмяФайла	= Объект.ИмяФайла;
	ДиалогВыбораФайла.Фильтр			= "Книга MS Excel (*.xls)|*.xls";
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПоказатьВыборФайлаЗавершение", ЭтаФорма);
	ДиалогВыбораФайла.Показать(ОписаниеОповещения)

КонецПроцедуры

//+++АК LATV 2018.09.18 ИП-00019632
&НаКлиенте
Процедура ПоказатьВыборФайлаЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт

	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ИмяФайла = ВыбранныеФайлы[0];

КонецПроцедуры

#КонецОбласти

#Область Заполнение

//+++АК LATV 2018.09.18 ИП-00019632
&НаКлиенте
Процедура ЗаполнитьВФоне()

	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьПослеПомещенияФайлов", ЭтаФорма);
	НачатьПомещениеФайла(Оповещение,, Объект.ИмяФайла, Ложь, УникальныйИдентификатор);

КонецПроцедуры

//+++АК LATV 2018.09.18 ИП-00019632
&НаКлиенте
Процедура ЗаполнитьПослеПомещенияФайлов(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт

	Объект.ДанныеНоменклатуры.Очистить();
	Объект.Склады.Очистить();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
	ПараметрыОжидания.ВыводитьСообщения	= Истина;
	ПараметрыОжидания.ТекстСообщения	= НСтр("ru = 'Получение данных из файла'");
	ПараметрыОжидания.ОповещениеПользователя.Показать	= Истина;
	ПараметрыОжидания.ОповещениеПользователя.Пояснение	= НСтр("ru = 'Получение данных из файла завершено'");
	
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьВФонеЗавершение", ЭтаФорма);
	
	ДлительнаяОперация = ЗаполнитьНаСервере(Адрес);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);
	
	УдалитьИзВременногоХранилища(Адрес);

КонецПроцедуры

//+++АК LATV 2018.09.18 ИП-00019632
&НаСервере
Функция ЗаполнитьНаСервере(АдресФайла)

	// Выполняемый метод
	ПолноеИмяОбъекта = РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя();
	ИмяМетода = ПолноеИмяОбъекта + ".МодульОбъекта.ВыполнитьОбработкуВФоне";
	
	ПараметрыМетода = Новый Структура();
	ПараметрыМетода.Вставить("Действие","Заполнение");
	ПараметрыМетода.Вставить("ДвоичныеДанныеФайла", ПолучитьИзВременногоХранилища(АдресФайла));
	
	// Запуск фонового задания
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьВФоне(ИмяМетода, ПараметрыМетода, ПараметрыВыполнения);

КонецФункции

//+++АК LATV 2018.09.18 ИП-00019632
&НаКлиенте
Процедура ЗаполнитьВФонеЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда // Задание отменено
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		Если Результат.Сообщения <> Неопределено Тогда
			Для Каждого Сообщение Из Результат.Сообщения Цикл
				Сообщение.Сообщить();
			КонецЦикла;
		КонецЕсли;
		
		ЗагрузитьПодготовленныеДанные(Результат.АдресРезультата);
		Возврат;
	КонецЕсли;

КонецПроцедуры

//+++АК LATV 2018.09.18 ИП-00019632
&НаСервере
Процедура ЗагрузитьПодготовленныеДанные(АдресРезультата)

	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Объект.ДанныеНоменклатуры.Загрузить(Результат.ДанныеНоменклатуры);
	Объект.Склады.Загрузить(Результат.Склады);
	
	УдалитьИзВременногоХранилища(АдресРезультата);

КонецПроцедуры

#КонецОбласти

#Область ОбработкаРезультата

//+++АК LATV 2018.09.18 ИП-00019632
&НаКлиенте
Процедура СоздатьНоменклатуруВФоне()

	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
	ПараметрыОжидания.ВыводитьСообщения	= Истина;
	ПараметрыОжидания.ТекстСообщения	= НСтр("ru = 'Формирование данных в 1С'");
	ПараметрыОжидания.ОповещениеПользователя.Показать	= Истина;
	ПараметрыОжидания.ОповещениеПользователя.Пояснение	= НСтр("ru = 'Формирование данных в 1С завершено'");
	
	Оповещение = Новый ОписаниеОповещения("СоздатьНоменклатуруВФонеЗавершение", ЭтаФорма);
	
	ДлительнаяОперация = СоздатьНоменклатуруНаСервере();
	ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, Оповещение, ПараметрыОжидания);

КонецПроцедуры

//+++АК LATV 2018.09.18 ИП-00019632
&НаСервере
Функция СоздатьНоменклатуруНаСервере()

	// Выполняемый метод
	ПолноеИмяОбъекта = РеквизитФормыВЗначение("Объект").Метаданные().ПолноеИмя();
	ИмяМетода = ПолноеИмяОбъекта + ".МодульОбъекта.ВыполнитьОбработкуВФоне";
	
	ПараметрыМетода = Новый Структура();
	ПараметрыМетода.Вставить("Действие","ОбработкаРезультата");
	ПараметрыМетода.Вставить("ДанныеНоменклатуры",	Объект.ДанныеНоменклатуры.Выгрузить());
	ПараметрыМетода.Вставить("Склады",				Объект.Склады.Выгрузить());
	
	// Запуск фонового задания
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	Возврат ДлительныеОперации.ВыполнитьВФоне(ИмяМетода, ПараметрыМетода, ПараметрыВыполнения);

КонецФункции

//+++АК LATV 2018.09.18 ИП-00019632
&НаКлиенте
Процедура СоздатьНоменклатуруВФонеЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда // Задание отменено
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		Если Результат.Сообщения <> Неопределено Тогда
			Для Каждого Сообщение Из Результат.Сообщения Цикл
				Сообщение.Сообщить();
			КонецЦикла;
		КонецЕсли;
		
		ЗагрузитьПодготовленныеДанныеСоздание(Результат.АдресРезультата);
		Возврат;
	КонецЕсли;

КонецПроцедуры

//+++АК LATV 2018.09.18 ИП-00019632
&НаСервере
Процедура ЗагрузитьПодготовленныеДанныеСоздание(АдресРезультата)

	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Объект.ДанныеНоменклатуры.Загрузить(Результат.ДанныеНоменклатуры);
	
	УдалитьИзВременногоХранилища(АдресРезультата);

КонецПроцедуры

#КонецОбласти

#Область СохранениеШаблона

//+++АК LATV 2018.09.16 ИП-00019632
&НаСервере
Функция ПолучитьШаблонНаСервере()

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Шаблон_XLS = ОбработкаОбъект.ПолучитьМакет("Шаблон_XLS");
	
	НовыйФайл = Новый ОписаниеПередаваемогоФайла;
	НовыйФайл.Хранение	= ПоместитьВоВременноеХранилище(Шаблон_XLS, УникальныйИдентификатор);
	
	Файлы = Новый Массив;
	Файлы.Добавить(НовыйФайл);
	
	Возврат Файлы;

КонецФункции

//+++АК LATV 2018.09.16 ИП-00019632
&НаКлиенте
Процедура ПолучитьШаблонЗавершение(ПолученныеФайлы, ДополнительныеПараметры) Экспорт

	Если Не ЗначениеЗаполнено(ПолученныеФайлы) Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПустойОбработчикОповещения", ЭтаФорма);
	НачатьЗапускПриложения(Оповещение, ПолученныеФайлы[0].Имя);

КонецПроцедуры

#КонецОбласти

//+++АК LATV 2018.09.16 ИП-00019632
&НаКлиенте
Процедура ПустойОбработчикОповещения(КодВозврата, ДополнительныеПараметры) Экспорт
	// Обработчик не требуется
КонецПроцедуры

#КонецОбласти
