
Процедура КнопкаВыполнитьНажатие(Кнопка)
	
		ТекстЗапросаКалендарь="ВЫБРАТЬ
                      |	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря КАК ДатаКалендаря,
                      |	РегламентированныйПроизводственныйКалендарь.Год,
                      |	РегламентированныйПроизводственныйКалендарь.ВидДня
                      |ИЗ
                      |	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
                      |ГДЕ
                      |	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &ДатаС И &ДатаПо
                      |	И (РегламентированныйПроизводственныйКалендарь.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Рабочий)
                      |			ИЛИ РегламентированныйПроизводственныйКалендарь.ВидДня = ЗНАЧЕНИЕ(Перечисление.ВидыДнейПроизводственногоКалендаря.Предпраздничный))
                      |
                      |УПОРЯДОЧИТЬ ПО
                      |	ДатаКалендаря";
		ЗапросКалендарь=Новый Запрос(ТекстЗапросаКалендарь);
		ЗапросКалендарь.УстановитьПараметр("ДатаС",НачПериода);			 
		ЗапросКалендарь.УстановитьПараметр("ДатаПо",Конпериода+15*24*60*60);// накинем 15 суток про запас
		Календарь=ЗапросКалендарь.Выполнить().Выгрузить();
		
		ДатаС = НачПериода;
		ДатаПо = КонПериода;
			
		ВыборкаSQL = Новый ТаблицаЗначений;
		ВыборкаSQL.Колонки.Добавить("id_terminal");

		ВыборкаSQL.Колонки.Добавить("ДатаSQL");
		ВыборкаSQL.Колонки.Добавить("Дата");
		ВыборкаSQL.Колонки.Добавить("id_terminal_ch");
		ВыборкаSQL.Колонки.Добавить("СуммаВ_SQL");
		ВыборкаSQL.Колонки.Добавить("Сумма_ТранВ_SQL");
		ВыборкаSQL.Колонки.Добавить("id_org");
		ВыборкаSQL.Колонки.Добавить("schet");


		ТекстЗапроса = "SELECT 
			  | cast([date] as datetime) as date
			  |,[id_org]
		      |,[id_terminal]
		      |,[summa]
		      |,[schet]
			  |,[Summa_tran]
		  	|FROM [SMS_IZBENKA].[dbo].[terminal_prihod]
		  	|where date >= '"+Формат(ДатаС,"ДФ=yyyy-MM-dd")+"' and date < '"+Формат(КонецДня(ДатаПо)+1,"ДФ=yyyy-MM-dd")+"'";

		                  
		СтрСоединенияДанныеТовародвижение = ОбменСAccess.ПолучитьСтрокуСоединения("sms_izbenka");
			
		ADOСоединение = Новый COMОбъект("ADODB.Connection");

		ADOСоединение.ConnectionTimeOut = 0;
		ADOСоединение.CommandTimeOut    = 0;
		ADOСоединение.ConnectionString  = СтрСоединенияДанныеТовародвижение;
		ADOСоединение.Open();


		rs = ADOСоединение.Execute(ТекстЗапроса);
			
		rs.MoveFirst();
				
		Пока НЕ rs.EOF() Цикл
			Стр = ВыборкаSQL.Добавить();
			Стр.ДатаSQL = Дата(rs.Fields("date").Value);
			Стр.id_terminal_ch = rs.Fields("id_terminal").Value;
			
			Стр.СуммаВ_SQL = Число(rs.Fields("summa").Value);
			Стр.Сумма_ТранВ_SQL = Число(rs.Fields("Summa_tran").Value);
			
			Стр.id_terminal = Формат(Стр.id_terminal_ch,"ЧГ=0");
			Стр.СуммаВ_SQL = Окр(Стр.СуммаВ_SQL,2);
			Стр.Сумма_ТранВ_SQL = Окр(Стр.Сумма_ТранВ_SQL,2);
			
			Стр.schet = rs.Fields("schet").Value;
			Стр.id_org = rs.Fields("id_org").Value;
			
			ТекДата=НачалоДня(Стр.ДатаSQL);
			День=Календарь.Найти(ТекДата);
			й=0; // если вдруг календарь не заполнен
			Пока День=Неопределено и й<30 Цикл
				й=й+1 ;
				ТекДата=КонецДня(ТекДата)+1;
				День=Календарь.Найти(ТекДата);
			КонецЦикла;	
			Стр.Дата=ТекДата;
            			
			rs.MoveNext();
		КонецЦикла;

		ADOСоединение.Close();

		ВыборкаSQL.Свернуть("Дата,id_terminal_ch,id_terminal,schet","СуммаВ_SQL,Сумма_ТранВ_SQL");
		////////////////////////////////////////
	
	ТекстЗапроса="ВЫБРАТЬ
	             |	ПоступлениеВБанк.Ссылка
	             |ИЗ
	             |	Документ.ПоступлениеВБанк КАК ПоступлениеВБанк
	             |ГДЕ
	             |	ПоступлениеВБанк.Проведен
	             |	И ПоступлениеВБанк.Дата МЕЖДУ &ДатаС И &ДатаПо
	             |	И ПоступлениеВБанк.ВидОперации = &ВидОперации
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	ПоступлениеВБанк.Дата";
	Запрос = Новый Запрос(ТекстЗапроса);			 
	Запрос.УстановитьПараметр("ДатаС",НачПериода);
	Запрос.УстановитьПараметр("ДатаПо",КонецДня(КонПериода));
	Запрос.УстановитьПараметр("ВидОперации",Перечисления.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ЭквайрингСводно);
	выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Док = Выборка.Ссылка.ПолучитьОбъект();
		ТаблицаКешПривязокТТ = Неопределено;
		////////////////////////////////////////
		СтруктураОтбора = Новый Структура("Дата,schet",НачалоДня(Док.Дата),СокрЛП(Док.СчетОрганизации.НомерСчета));
		ТЗДокумента = ВыборкаSQL.Скопировать(СтруктураОтбора);
		
		Если Не БезКонтроля Тогда
			Если Док.ЭквайрингРасшифровка.Итог("СуммаДокумента")<>ТЗДокумента.Итог("СуммаВ_SQL") тогда
				Сообщить("Не идёт сумма выписки и расшифровки по "+Док+ " на "+(Док.ЭквайрингРасшифровка.Итог("СуммаДокумента")-ТЗДокумента.Итог("СуммаВ_SQL")));
				Продолжить;
			КонецЕсли;	
			
			Если Док.ЭквайрингРасшифровка.Итог("СуммаКомиссииБанка")<>(ТЗДокумента.Итог("Сумма_ТранВ_SQL") - ТЗДокумента.Итог("СуммаВ_SQL")  ) тогда
				Сообщить("Не идёт сумма выписки и расшифровки по "+Док+ " на "+(Док.ЭквайрингРасшифровка.Итог("СуммаКомиссииБанка")-ТЗДокумента.Итог("Сумма_ТранВ_SQL") + ТЗДокумента.Итог("СуммаВ_SQL") ));
				Продолжить;
			КонецЕсли;	
		КонецЕсли;	

		Док.ЭквайрингРасшифровка.Очистить();
		Для каждого Стр Из ТЗДокумента Цикл
			НС = Док.ЭквайрингРасшифровка.Добавить();
			НС.СуммаДокумента = Стр.СуммаВ_SQL;
			НС.СуммаКомиссииБанка = Стр.Сумма_ТранВ_SQL -Стр.СуммаВ_SQL;
			нашли = Справочники.Терминалы.НайтиПоРеквизиту("ИД",Стр.id_terminal);
			Если нашли.Пустая() Тогда
				Сообщить("Не найден терминал с ИД "+Стр.id_terminal);
			КонецЕсли;
			НС.Терминал = Нашли;
			НС.ТорговаяТочка = Эквайринг.Получить_ТТ_Терминала(Док.Дата,НС.Терминал,ТаблицаКешПривязокТТ,ложь);
			
			Если Не ЗначениеЗаполнено(НС.ТорговаяТочка) Тогда
				Сообщить("Не нашёл точки для "+НС.Терминал);
			КонецЕсли;	
		КонецЦикла;	
		попытка
			Док.Записать(РежимЗаписиДокумента.Проведение);
			сообщить("Проведен "+Док);
		Исключение
			продолжить;
		КонецПопытки;	
	КонецЦикла;	
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериода = НастройкаПериода.ПолучитьДатуНачала();
		КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры
