
Процедура База_ВыполнитьЗапросНеЗаполняяТЗ(ТекстЗапроса, допПараметры = Неопределено, СтрокаПодключения = "")  
	
	RecordSet = База_ВыполнитьЗапрос(ТекстЗапроса, допПараметры, СтрокаПодключения);
	//тзРезультат = База_РезульататЗапросВТаблицуЗначений(RecordSet);
	Попытка
		RecordSet.Close();
	Исключение
	КонецПопытки;	
		
КонецПроцедуры

&НаСервере
Процедура База_ВыполнитьЗапросИЗаполнитьТаблицуЗначений(ТекстЗапроса, допПараметры = Неопределено, СтрокаПодключения = "")  
	
	RecordSet = База_ВыполнитьЗапрос(ТекстЗапроса, допПараметры, СтрокаПодключения);
	тзРезультат = База_РезульататЗапросВТаблицуЗначений(RecordSet);
	RecordSet.Close();
	
	
	Объект.СписокШаблонов.Загрузить(тзРезультат);
	
	Для каждого ТекСтр Из Объект.СписокШаблонов Цикл
	
		 ТекСтр.type_bv1 = ТекСтр.type_bv;
	
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция База_ВыполнитьЗапрос(ТекстЗапроса, допПараметры = Неопределено, СтрокаПодключения = "")  
	Попытка
		Command = Новый COMОбъект("ADODB.Command");
		
		Если ТипЗнч(допПараметры) = Тип("Структура") тогда
			ЗаполнитьЗначенияСвойств(Command, допПараметры);
		КонецЕсли;			
		CurrentConnection = База_Подключение(СтрокаПодключения);
		
		Command.ActiveConnection = CurrentConnection;
		Command.CommandTimeout = 0;
		Command.CommandText = ТекстЗапроса;
		RecordSet = Новый COMОбъект("ADODB.RecordSet");
		RecordSet = Command.Execute(); //Выполнение и получение набора данных
		Возврат RecordSet;
	Исключение	
		ВызватьИсключение ОписаниеОшибки();
	КонецПопытки;	
КонецФункции

&НаСервере
Функция База_Подключение(СтрокаПодключения) экспорт	
	
	Попытка
		CurrentConnection = Новый COMОбъект("ADODB.Connection");
		Catalog = Новый COMОбъект("ADOX.Catalog");			
		
		
		Catalog.ActiveConnection = СтрокаПодключения;
		CurrentConnection.Open(СтрокаПодключения);
		Возврат CurrentConnection;	
		
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();		
		#Если НаКлиенте тогда
		Сообщить(ОписаниеОшибки);			
		#КонецЕсли		
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

// На основе результата запроса (База_ВыполнитьЗапрос) создаем таблицу значений!!
&НаСервере
Функция База_РезульататЗапросВТаблицуЗначений(RecordSet) 
	
	тз = Новый ТаблицаЗначений;
	Если ТипЗнч(RecordSet) <> Тип("COMОбъект") тогда
		Возврат тз;
	КонецЕсли;
	
	// Инициализируем колонки
	Для НомерКолонки = 0 По RecordSet.Fields.Count-1 Цикл
		NameFiled = RecordSet.Fields.Item(НомерКолонки).Name;
		NameFiled = СтрЗаменить(NameFiled,"$","_");
		тз.Колонки.Добавить(NameFiled,,RecordSet.Fields.Item(НомерКолонки).Name, 15);
	КонецЦикла;
	
	// Перебор данных
	Если НЕ RecordSet.EOF() Тогда
		RecordSet.MoveFirst();                 
		Пока RecordSet.EOF() = 0 Цикл
			СтрокаТаблицыЗначений = тз.Добавить();
			Для НомерКолонки = 0 По RecordSet.Fields.Count-1 Цикл
				СтрокаТаблицыЗначений[НомерКолонки] = RecordSet.Fields(RecordSet.Fields.Item(НомерКолонки).Name).Value;
			КонецЦикла;
			RecordSet.MoveNext();  
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТЗ;
КонецФункции

// Закрываем датасет возвращаемй База_ВыполнитьЗапрос();
//
&НаСервере
Процедура База_ЗакрытьЗапрос(RecordSet) 
	Если ТипЗнч(RecordSet) = Тип("COMОбъект") тогда
		RecordSet.Close();
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьДанные();

КонецПроцедуры

&НаСервере
Процедура ОбновитьДанные()
	
	Объект.СписокШаблонов.Очистить();
	
	ТекстЗапроса = "SELECT [type_bv]
	|    ,[text_sms]
	|FROM [IES].[dbo].[sms_texts];";
	СтрокаПодключения = ПолучитьСтрокуПодключения("srv-sql01", "IES");
	База_ВыполнитьЗапросИЗаполнитьТаблицуЗначений(ТекстЗапроса, Неопределено, СтрокаПодключения);

КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьДанные();
КонецПроцедуры


&НаКлиенте
Процедура СписокШаблоновПередУдалением(Элемент, Отказ)
	
	Если Элементы.СписокШаблонов.ТекущиеДанные.type_bv <> 0 Тогда
		
		Если Вопрос("Удалить строку из базы?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			
			ТекстЗапроса = "DELETE FROM [IES].[dbo].[sms_texts] WHERE [type_bv] = '"+Элементы.СписокШаблонов.ТекущиеДанные.type_bv+"' ;";
			СтрокаПодключения = ПолучитьСтрокуПодключения("srv-sql01", "IES");
			База_ВыполнитьЗапросНеЗаполняяТЗ(ТекстЗапроса, Неопределено, СтрокаПодключения);
			
		КонецЕсли;
		
	КонецЕсли;	
	 
КонецПроцедуры

&НаКлиенте
Процедура СписокШаблоновПриИзменении(Элемент)
	
	СтрокаПодключения = ПолучитьСтрокуПодключения("srv-sql01", "IES"); 
	
	Если Элементы.СписокШаблонов.ТекущиеДанные.type_bv <> 0 Тогда
		
		ТекстЗапроса = "UPDATE [IES].[dbo].[sms_texts] SET [text_sms] = '"+Элементы.СписокШаблонов.ТекущиеДанные.text_sms +"' WHERE [type_bv] = '"+Элементы.СписокШаблонов.ТекущиеДанные.type_bv+"';";
		
		
		Попытка
			База_ВыполнитьЗапросНеЗаполняяТЗ(ТекстЗапроса, Неопределено, СтрокаПодключения);
		Исключение
			Предупреждение(ОписаниеОшибки());
		КонецПопытки;
		
		Если Элементы.СписокШаблонов.ТекущиеДанные.type_bv <> Элементы.СписокШаблонов.ТекущиеДанные.type_bv1 И Элементы.СписокШаблонов.ТекущиеДанные.type_bv1 <> 0 Тогда
			
			ТекстЗапроса = "DELETE FROM [IES].[dbo].[sms_texts] WHERE [type_bv] = '"+Элементы.СписокШаблонов.ТекущиеДанные.type_bv+"' ;";
			СтрокаПодключения = ПолучитьСтрокуПодключения("srv-sql01", "IES");
									
			Попытка
				База_ВыполнитьЗапросНеЗаполняяТЗ(ТекстЗапроса, Неопределено, СтрокаПодключения);
			Исключение
				Предупреждение(ОписаниеОшибки());
			КонецПопытки;
			
			Элементы.СписокШаблонов.ТекущиеДанные.type_bv = Элементы.СписокШаблонов.ТекущиеДанные.type_bv1;
			ТекстЗапроса = "insert into [IES].[dbo].[sms_texts] ([type_bv] ,[text_sms]) VALUES ('"+Элементы.СписокШаблонов.ТекущиеДанные.type_bv1+"', '"+Элементы.СписокШаблонов.ТекущиеДанные.text_sms +"');";
			
			Попытка
				База_ВыполнитьЗапросНеЗаполняяТЗ(ТекстЗапроса, Неопределено, СтрокаПодключения);
			Исключение
				// вернём как было...
				Элементы.СписокШаблонов.ТекущиеДанные.type_bv = Элементы.СписокШаблонов.ТекущиеДанные.type_bv1;
				ТекстЗапроса = "insert into [IES].[dbo].[sms_texts] ([type_bv] ,[text_sms]) VALUES ('"+Элементы.СписокШаблонов.ТекущиеДанные.type_bv+"', '"+Элементы.СписокШаблонов.ТекущиеДанные.text_sms +"');";
				Предупреждение(ОписаниеОшибки());
			КонецПопытки;
			
		КонецЕсли;	
		
	ИначеЕсли Элементы.СписокШаблонов.ТекущиеДанные.type_bv1 <> 0 Тогда
		
		Элементы.СписокШаблонов.ТекущиеДанные.type_bv = Элементы.СписокШаблонов.ТекущиеДанные.type_bv1;
		ТекстЗапроса = "insert into [IES].[dbo].[sms_texts] ([type_bv] ,[text_sms]) VALUES ('"+Элементы.СписокШаблонов.ТекущиеДанные.type_bv+"', '"+Элементы.СписокШаблонов.ТекущиеДанные.text_sms +"');";
				
		Попытка
			База_ВыполнитьЗапросНеЗаполняяТЗ(ТекстЗапроса, Неопределено, СтрокаПодключения);
		Исключение
			Предупреждение(ОписаниеОшибки());
		КонецПопытки;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокШаблоновПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Копирование Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

//+++АК Susk (Суслин К.В.) 2018.08.09 
&НаСервереБезКонтекста
Функция ПолучитьСтрокуПодключения(DS, InitialCatalog)
	
	Возврат ВнешниеДанные.ПолучитьСтрокуПодключенияMSSQL(DS, InitialCatalog);
	
КонецФункции
 