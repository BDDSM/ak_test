// Подключение к ЗУП
Перем КомСоединениеЗУП;

Перем СписокСотрудниковИПолучателей;
Перем СписокАдресовПолучателей;

Процедура УстановитьСоединениеСБазойЗУП() 
	
	//+++АК POZM 2018.05.25 ИП-00018806 
	СтрокаПодключения = ПолныеПрава.ПолучитьСтрокуПодключения_Зуп();
	КомОбъект = Новый  COMОбъект(ПолныеПрава.ПолучитьВерсиюКомОбъекта_Зуп()+".COMConnector");
	
	#Область АК_ОтключенныйКод 
	//СтрокаПодключения = "Srvr=""10.0.0.15:1641"";Ref=""hrm""; Usr=""Обмен""; Pwd=""123321""";
	//КомОбъект = Новый  COMОбъект("V83.COMConnector");
	#КонецОбласти 
	//---АК POZM 
	
	Попытка
		КомСоединениеЗУП = КомОбъект.Connect(СтрокаПодключения);
	Исключение
		КомСоединениеЗУП = Неопределено;
	КонецПопытки;
	
КонецПроцедуры

// Формирование списка документов в ЗУП
Функция ПолучитьСписокДокументовИзЗУП()
	Запрос = КомСоединениеЗУП.NewObject("Запрос");
	
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СотрудникиОрганизаций.Ссылка КАК Сотрудник
		|ПОМЕСТИТЬ Сотрудники
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриемНаРаботуВОрганизациюРаботникиОрганизации.Ссылка.Номер,
		|	ПриемНаРаботуВОрганизациюРаботникиОрганизации.Ссылка.Дата,
		|	ПриемНаРаботуВОрганизациюРаботникиОрганизации.Сотрудник,
		|	ПриемНаРаботуВОрганизациюРаботникиОрганизации.Ссылка.Организация
		|ПОМЕСТИТЬ ВТ_ПриемНаРаботу
		|ИЗ
		|	Документ.ПриемНаРаботуВОрганизацию.РаботникиОрганизации КАК ПриемНаРаботуВОрганизациюРаботникиОрганизации
		|ГДЕ
		|	ПриемНаРаботуВОрганизациюРаботникиОрганизации.НомерСтроки = 1
		|	И ПриемНаРаботуВОрганизациюРаботникиОрганизации.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ПриемНаРаботуВОрганизациюРаботникиОрганизации.Ссылка.ПометкаУдаления = ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПриемНаРаботу.Номер,
		|	ВТ_ПриемНаРаботу.Дата,
		|	Сотрудники.Сотрудник.Код,
		|	Сотрудники.Сотрудник.Наименование,
		|	ВТ_ПриемНаРаботу.Организация.ИНН,
		|	ВТ_ПриемНаРаботу.Организация.Наименование
		|ПОМЕСТИТЬ ПриемНаРаботу
		|ИЗ
		|	ВТ_ПриемНаРаботу КАК ВТ_ПриемНаРаботу
		|		ЛЕВОЕ СОЕДИНЕНИЕ Сотрудники КАК Сотрудники
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|			ПО Сотрудники.Сотрудник = ЗначенияСвойствОбъектов.Объект
		|		ПО (Сотрудники.Сотрудник = ВТ_ПриемНаРаботу.Сотрудник)
		|			И (Сотрудники.Сотрудник.Организация = ВТ_ПриемНаРаботу.Организация)
		|ГДЕ
		|	ЗначенияСвойствОбъектов.Свойство = &Свойство
		|	И ЗначенияСвойствОбъектов.Значение = &Значение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоговорНаВыполнениеРаботСФизЛицом.Номер,
		|	ДоговорНаВыполнениеРаботСФизЛицом.Дата,
		|	""ГПХ"" КАК ВидДокумента,
		|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Код КАК ТабельныйНомер,
		|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Наименование КАК СотрудникНаименование,
		|	ДоговорНаВыполнениеРаботСФизЛицом.Организация.ИНН КАК ОрганизацияИНН,
		|	ДоговорНаВыполнениеРаботСФизЛицом.Организация.Наименование КАК ОрганизацияНаименование
		|ИЗ
		|	Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
		|ГДЕ
		|	ДоговорНаВыполнениеРаботСФизЛицом.ПометкаУдаления = ЛОЖЬ
		|	И ДоговорНаВыполнениеРаботСФизЛицом.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И ДоговорНаВыполнениеРаботСФизЛицом.АК_Подписан = ЛОЖЬ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПриемНаРаботу.Номер,
		|	ПриемНаРаботу.Дата,
		|	""Прием на работу"",
		|	ПриемНаРаботу.СотрудникКод,
		|	ПриемНаРаботу.СотрудникНаименование,
		|	ПриемНаРаботу.ОрганизацияИНН,
		|	ПриемНаРаботу.ОрганизацияНаименование
		|ИЗ
		|	ПриемНаРаботу КАК ПриемНаРаботу";
	
	
	
	Если День(ТекущаяДата()) <= 15 Тогда
		ДатаНачала = НачалоМесяца(ДобавитьМесяц(ТекущаяДата(), -1));
		ДатаОкончания = КонецМесяца(ДобавитьМесяц(ТекущаяДата(), -1));
		
	ИначеЕсли День(ТекущаяДата()) <= 30 Тогда
		ДатаНачала = НачалоМесяца(ТекущаяДата());
		ДатаОкончания = КонецМесяца(ТекущаяДата());
		
	КонецЕсли; 
	
	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	Запрос.УстановитьПараметр("Значение", КомСоединениеЗУП.Справочники.ЗначенияСвойствОбъектов.НайтиПоКоду("000000034"));
	Запрос.УстановитьПараметр("Свойство", КомСоединениеЗУП.ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоКоду("0033"));
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции
 

// Формирование списка получателей рассылки
// Формирование списка сотрудников
Процедура СформироватьСписокСотрудниковИПолучателей()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РолиПользователейСоставРоли.Ссылка,
		|	РолиПользователейСоставРоли.Сотрудник
		|ПОМЕСТИТЬ РольСотрудник
		|ИЗ
		|	Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|ГДЕ
		|	РолиПользователейСоставРоли.НомерСтроки = 1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РолиПользователейСоставРоли.Ссылка,
		|	РолиПользователейСоставРоли.Сотрудник
		|ПОМЕСТИТЬ РольСотрудник2
		|ИЗ
		|	Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|ГДЕ
		|	РолиПользователейСоставРоли.НомерСтроки = 1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеОбъектРольСрезПоследних.Объект,
		|	СоответствиеОбъектРольСрезПоследних.РольПользователя КАК РольПомощник,
		|	СоответствиеОбъектРольСрезПоследних.РольПользователя.Родитель КАК РольУправляющий,
		|	РольСотрудник.Сотрудник КАК СотрудникП,
		|	РольСотрудник2.Сотрудник КАК СотрудникУ
		|ПОМЕСТИТЬ ОбъектРоль
		|ИЗ
		|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних КАК СоответствиеОбъектРольСрезПоследних
		|		ЛЕВОЕ СОЕДИНЕНИЕ РольСотрудник КАК РольСотрудник
		|		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = РольСотрудник.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РольСотрудник2 КАК РольСотрудник2
		|		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя.Родитель = РольСотрудник2.Ссылка
		|ГДЕ
		|	СоответствиеОбъектРольСрезПоследних.ТипРоли.Наименование ПОДОБНО ""%Помощник%""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СправочникФизическиеЛица.Ссылка,
		|	СправочникФизическиеЛица.Код КАК Код,
		|	СправочникФизическиеЛица.Наименование КАК Наименование,
		|	СправочникФизическиеЛица.Активный КАК Активный,
		|	СправочникФизическиеЛица.Должность КАК Должность,
		|	ПРЕДСТАВЛЕНИЕ(ТабельРаботы.Группа) КАК Группа,
		|	ТабельРаботы.ТорговаяТочка,
		|	ТабельРаботы.СотрудникПомощник,
		|	ТабельРаботы.СотрудникУправляющий,
		|	СотрудникиОрганизаций.Код КАК ТабельныйНомер,
		|	СотрудникиОрганизаций.Организация,
		|	СотрудникиОрганизаций.Организация.ИНН
		|ИЗ
		|	Справочник.ФизическиеЛица КАК СправочникФизическиеЛица
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ТабельРаботыСотрудников.Сотрудник КАК Сотрудник,
		|			МАКСИМУМ(ТабельРаботыСотрудников.Группа) КАК Группа,
		|			МИНИМУМ(ТабельРаботыСотрудников.ПериодМин) КАК ПериодМин,
		|			МАКСИМУМ(ТабельРаботыСотрудников.ПериодМакс) КАК ПериодМакс,
		|			МАКСИМУМ(ТабельРаботыСотрудников.ТорговаяТочка) КАК ТорговаяТочка,
		|			МАКСИМУМ(ТабельРаботыСотрудников.СотрудникП) КАК СотрудникПомощник,
		|			МАКСИМУМ(ТабельРаботыСотрудников.СотрудникУ) КАК СотрудникУправляющий
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ТабельРаботыСотрудников.Сотрудник КАК Сотрудник,
		|				МАКСИМУМ(ТабельРаботыСотрудников.ПериодМакс) КАК ПериодМакс
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ТабельРаботыПродавцов.Сотрудник КАК Сотрудник,
		|					ТабельРаботыПродавцов.Группа КАК Группа,
		|					МИНИМУМ(ТабельРаботыПродавцов.Период) КАК ПериодМин,
		|					МАКСИМУМ(ТабельРаботыПродавцов.Период) КАК ПериодМакс,
		|					ТабельРаботыПродавцов.ТорговаяТочка КАК ТорговаяТочка
		|				ИЗ
		|					РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
		|				ГДЕ
		|					ТабельРаботыПродавцов.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.ПустаяСсылка)
		|					И НЕ ТабельРаботыПродавцов.ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
		|					И ТабельРаботыПродавцов.Период <= &ТекДата
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТабельРаботыПродавцов.Сотрудник,
		|					ТабельРаботыПродавцов.Группа,
		|					ТабельРаботыПродавцов.ТорговаяТочка
		|				
		|				ОБЪЕДИНИТЬ ВСЕ
		|				
		|				ВЫБРАТЬ
		|					ТабельРаботыПродавцов.Сотрудник,
		|					НЕОПРЕДЕЛЕНО,
		|					ДАТАВРЕМЯ(1, 1, 1),
		|					МАКСИМУМ(ТабельРаботыПродавцов.Период),
		|					НЕОПРЕДЕЛЕНО
		|				ИЗ
		|					РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
		|				ГДЕ
		|					ТабельРаботыПродавцов.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.Уволен)
		|					И РАЗНОСТЬДАТ(ТабельРаботыПродавцов.Период, &ТекДата, МЕСЯЦ) >= 2
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТабельРаботыПродавцов.Сотрудник
		|				
		|				ОБЪЕДИНИТЬ ВСЕ
		|				
		|				ВЫБРАТЬ
		|					ТабельРаботыКассиров.Сотрудник,
		|					ТабельРаботыКассиров.Группа,
		|					МИНИМУМ(ТабельРаботыКассиров.Период),
		|					МАКСИМУМ(ТабельРаботыКассиров.Период),
		|					ТабельРаботыКассиров.ТорговаяТочка
		|				ИЗ
		|					РегистрСведений.ТабельРаботыКассиров КАК ТабельРаботыКассиров
		|				ГДЕ
		|					ТабельРаботыКассиров.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.ПустаяСсылка)
		|					И НЕ ТабельРаботыКассиров.ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
		|					И ТабельРаботыКассиров.Период <= &ТекДата
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТабельРаботыКассиров.Сотрудник,
		|					ТабельРаботыКассиров.Группа,
		|					ТабельРаботыКассиров.ТорговаяТочка
		|				
		|				ОБЪЕДИНИТЬ ВСЕ
		|				
		|				ВЫБРАТЬ
		|					ТабельРаботыКассиров.Сотрудник,
		|					НЕОПРЕДЕЛЕНО,
		|					ДАТАВРЕМЯ(1, 1, 1),
		|					МАКСИМУМ(ТабельРаботыКассиров.Период),
		|					НЕОПРЕДЕЛЕНО
		|				ИЗ
		|					РегистрСведений.ТабельРаботыКассиров КАК ТабельРаботыКассиров
		|				ГДЕ
		|					ТабельРаботыКассиров.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.Уволен)
		|					И РАЗНОСТЬДАТ(ТабельРаботыКассиров.Период, &ТекДата, МЕСЯЦ) >= 2
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТабельРаботыКассиров.Сотрудник) КАК ТабельРаботыСотрудников
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ТабельРаботыСотрудников.Сотрудник) КАК ТабельРаботыСотрудниковМаксимум
		|				ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					ТабельРаботыПродавцов.Сотрудник КАК Сотрудник,
		|					ТабельРаботыПродавцов.Группа КАК Группа,
		|					МИНИМУМ(ТабельРаботыПродавцов.Период) КАК ПериодМин,
		|					МАКСИМУМ(ТабельРаботыПродавцов.Период) КАК ПериодМакс,
		|					МАКСИМУМ(ТабельРаботыПродавцов.ТорговаяТочка) КАК ТорговаяТочка,
		|					МАКСИМУМ(ОбъектРоль.СотрудникП) КАК СотрудникП,
		|					МАКСИМУМ(ОбъектРоль.СотрудникУ) КАК СотрудникУ
		|				ИЗ
		|					РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
		|						ЛЕВОЕ СОЕДИНЕНИЕ ОбъектРоль КАК ОбъектРоль
		|						ПО ТабельРаботыПродавцов.ТорговаяТочка = ОбъектРоль.Объект
		|				ГДЕ
		|					ТабельРаботыПродавцов.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.ПустаяСсылка)
		|					И НЕ ТабельРаботыПродавцов.ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
		|					И ТабельРаботыПродавцов.Период <= &ТекДата
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТабельРаботыПродавцов.Сотрудник,
		|					ТабельРаботыПродавцов.Группа
		|				
		|				ОБЪЕДИНИТЬ ВСЕ
		|				
		|				ВЫБРАТЬ
		|					ТабельРаботыПродавцов.Сотрудник,
		|					НЕОПРЕДЕЛЕНО,
		|					ДАТАВРЕМЯ(1, 1, 1),
		|					МАКСИМУМ(ТабельРаботыПродавцов.Период),
		|					НЕОПРЕДЕЛЕНО,
		|					NULL,
		|					NULL
		|				ИЗ
		|					РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
		|				ГДЕ
		|					ТабельРаботыПродавцов.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.Уволен)
		|					И РАЗНОСТЬДАТ(ТабельРаботыПродавцов.Период, &ТекДата, МЕСЯЦ) >= 2
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТабельРаботыПродавцов.Сотрудник
		|				
		|				ОБЪЕДИНИТЬ ВСЕ
		|				
		|				ВЫБРАТЬ
		|					ТабельРаботыКассиров.Сотрудник,
		|					ТабельРаботыКассиров.Группа,
		|					МИНИМУМ(ТабельРаботыКассиров.Период),
		|					МАКСИМУМ(ТабельРаботыКассиров.Период),
		|					МАКСИМУМ(ТабельРаботыКассиров.ТорговаяТочка),
		|					МАКСИМУМ(ОбъектРоль.СотрудникП),
		|					МАКСИМУМ(ОбъектРоль.СотрудникУ)
		|				ИЗ
		|					РегистрСведений.ТабельРаботыКассиров КАК ТабельРаботыКассиров,
		|					ОбъектРоль КАК ОбъектРоль
		|				ГДЕ
		|					ТабельРаботыКассиров.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.ПустаяСсылка)
		|					И НЕ ТабельРаботыКассиров.ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
		|					И ТабельРаботыКассиров.Период <= &ТекДата
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТабельРаботыКассиров.Сотрудник,
		|					ТабельРаботыКассиров.Группа
		|				
		|				ОБЪЕДИНИТЬ ВСЕ
		|				
		|				ВЫБРАТЬ
		|					ТабельРаботыКассиров.Сотрудник,
		|					НЕОПРЕДЕЛЕНО,
		|					ДАТАВРЕМЯ(1, 1, 1),
		|					МАКСИМУМ(ТабельРаботыКассиров.Период),
		|					НЕОПРЕДЕЛЕНО,
		|					NULL,
		|					NULL
		|				ИЗ
		|					РегистрСведений.ТабельРаботыКассиров КАК ТабельРаботыКассиров
		|				ГДЕ
		|					ТабельРаботыКассиров.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.Уволен)
		|					И РАЗНОСТЬДАТ(ТабельРаботыКассиров.Период, &ТекДата, МЕСЯЦ) >= 2
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ТабельРаботыКассиров.Сотрудник) КАК ТабельРаботыСотрудников
		|				ПО ТабельРаботыСотрудниковМаксимум.ПериодМакс = ТабельРаботыСотрудников.ПериодМакс
		|					И ТабельРаботыСотрудниковМаксимум.Сотрудник = ТабельРаботыСотрудников.Сотрудник
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ТабельРаботыСотрудников.Сотрудник) КАК ТабельРаботы
		|		ПО СправочникФизическиеЛица.Ссылка = ТабельРаботы.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|		ПО (СотрудникиОрганизаций.Физлицо = СправочникФизическиеЛица.Ссылка)
		|ГДЕ
		|	СправочникФизическиеЛица.Активный = ИСТИНА
		|	И (СправочникФизическиеЛица.ДатаУвольнения = ДАТАВРЕМЯ(1, 1, 1)
		|			ИЛИ СправочникФизическиеЛица.ДатаУвольнения > &ТекДата)
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование";
	
	Запрос.УстановитьПараметр("ТекДата", КонецДня(ТекущаяДата()));
	
	СписокСотрудниковИПолучателей = Запрос.Выполнить().Выгрузить();
	
	СписокПолучателейП = СписокСотрудниковИПолучателей.Скопировать(, "СотрудникПомощник");
	СписокПолучателейП.Свернуть("СотрудникПомощник", "");
	СписокПолучателейУ = СписокСотрудниковИПолучателей.Скопировать(, "СотрудникУправляющий");
	СписокПолучателейУ.Свернуть("СотрудникУправляющий", "");
	
	СписокПолучателей = Новый ТаблицаЗначений;
	СписокПолучателей.Колонки.Добавить("Получатель");
	Для каждого Получатель Из СписокПолучателейП Цикл
		НовыйПолучатель = СписокПолучателей.Добавить();
		НовыйПолучатель.Получатель = Получатель.СотрудникПомощник;
	КонецЦикла; 
	Для каждого Получатель Из СписокПолучателейУ Цикл
		НовыйПолучатель = СписокПолучателей.Добавить();
		НовыйПолучатель.Получатель = Получатель.СотрудникУправляющий;
	КонецЦикла; 
	
	СписокПолучателей.Свернуть("Получатель", "");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтактнаяИнформация.Объект,
		|	ПОДСТРОКА(КонтактнаяИнформация.Представление, 1, 100) КАК Адрес
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект ССЫЛКА Справочник.ФизическиеЛица
		|	И КонтактнаяИнформация.Объект В(&СписокПолучателей)
		|	И КонтактнаяИнформация.Тип = &Тип";
	
	Запрос.УстановитьПараметр("СписокПолучателей", СписокПолучателей);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	
	СписокАдресовПолучателей = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры
 
//Отправка отчета

Процедура ОтправитьОтчет()
	
	СписокНеподписанныхДокументов = ПолучитьСписокДокументовИзЗУП();
	
	КД = Новый КвалификаторыДаты(ЧастиДаты.Дата); 
	Массив = Новый Массив;
	Массив.Добавить(Тип("Дата"));
	ОписаниеТиповД = Новый ОписаниеТипов(Массив, , КД);

	КС = Новый КвалификаторыСтроки(100);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);

	ТабСписокНеподписанныхДокументов = Новый ТаблицаЗначений;
	ТабСписокНеподписанныхДокументов.Колонки.Добавить("Номер", ОписаниеТиповС);
	ТабСписокНеподписанныхДокументов.Колонки.Добавить("Дата", ОписаниеТиповД);
	ТабСписокНеподписанныхДокументов.Колонки.Добавить("ВидДокумента", ОписаниеТиповС);
	ТабСписокНеподписанныхДокументов.Колонки.Добавить("ТабельныйНомер", ОписаниеТиповС);
	ТабСписокНеподписанныхДокументов.Колонки.Добавить("СотрудникНаименование", ОписаниеТиповС);
	ТабСписокНеподписанныхДокументов.Колонки.Добавить("ОрганизацияИНН", ОписаниеТиповС);
	ТабСписокНеподписанныхДокументов.Колонки.Добавить("ОрганизацияНаименование", ОписаниеТиповС);
	
	Для каждого СтрокаСписка Из СписокНеподписанныхДокументов Цикл
		НоваяСтрока = ТабСписокНеподписанныхДокументов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаСписка);
		НоваяСтрока.ТабельныйНомер = СокрЛП(НоваяСтрока.ТабельныйНомер);
		НоваяСтрока.ОрганизацияИНН = СокрЛП(НоваяСтрока.ОрганизацияИНН);
	КонецЦикла; 

	
	Для каждого Получатель Из СписокАдресовПолучателей Цикл
		
		ТабельныеНомераСотрудников = Новый ТаблицаЗначений;
		ТабельныеНомераСотрудников.Колонки.Добавить("ТабельныйНомер", ОписаниеТиповС);
		ТабельныеНомераСотрудников.Колонки.Добавить("ОрганизацияИНН", ОписаниеТиповС);
		
		Отбор = Новый Структура("СотрудникПомощник", Получатель.Объект);
		СотрудникиПомощника = СписокСотрудниковИПолучателей.НайтиСтроки(Отбор);
		
		Для каждого Сотрудник Из СотрудникиПомощника Цикл
			НовыйНомер = ТабельныеНомераСотрудников.Добавить();
			НовыйНомер.ТабельныйНомер = СокрЛП(Сотрудник.ТабельныйНомер);
			НовыйНомер.ОрганизацияИНН = СокрЛП(Сотрудник.ОрганизацияИНН);
		КонецЦикла; 
		
		Отбор = Новый Структура("СотрудникУправляющий", Получатель);
		СотрудникиУправляющего = СписокСотрудниковИПолучателей.НайтиСтроки(Отбор);
		
		Для каждого Сотрудник Из СотрудникиУправляющего Цикл
			НовыйНомер = ТабельныеНомераСотрудников.Добавить();
			НовыйНомер.ТабельныйНомер = СокрЛП(Сотрудник.ТабельныйНомер);
			НовыйНомер.ОрганизацияИНН = СокрЛП(Сотрудник.ОрганизацияИНН);
		КонецЦикла; 
		
		ТабельныеНомераСотрудников.Свернуть("ТабельныйНомер, ОрганизацияИНН", "");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СписокДокументов.Номер,
			|	СписокДокументов.Дата,
			|	СписокДокументов.ВидДокумента,
			|	СписокДокументов.ТабельныйНомер,
			|	СписокДокументов.СотрудникНаименование,
			|	СписокДокументов.ОрганизацияИНН,
			|	СписокДокументов.ОрганизацияНаименование
			|ПОМЕСТИТЬ СписокДокументов
			|ИЗ
			|	&СписокДокументов КАК СписокДокументов
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СписокСотрудников.ТабельныйНомер,
			|	СписокСотрудников.ОрганизацияИНН
			|ПОМЕСТИТЬ СписокСотрудников
			|ИЗ
			|	&СписокСотрудников КАК СписокСотрудников
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СписокДокументов.ВидДокумента,
			|	СписокДокументов.Номер,
			|	СписокДокументов.Дата,
			|	СписокДокументов.СотрудникНаименование,
			|	СписокДокументов.ОрганизацияНаименование,
			|	СписокДокументов.ТабельныйНомер
			|ПОМЕСТИТЬ НайденныеДокументы
			|ИЗ
			|	СписокСотрудников КАК СписокСотрудников
			|		ЛЕВОЕ СОЕДИНЕНИЕ СписокДокументов КАК СписокДокументов
			|		ПО СписокСотрудников.ТабельныйНомер = СписокДокументов.ТабельныйНомер
			|			И СписокСотрудников.ОрганизацияИНН = СписокДокументов.ОрганизацияИНН
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НайденныеДокументы.ВидДокумента,
			|	НайденныеДокументы.Номер,
			|	НайденныеДокументы.Дата,
			|	НайденныеДокументы.СотрудникНаименование,
			|	НайденныеДокументы.ОрганизацияНаименование,
			|	НайденныеДокументы.ТабельныйНомер
			|ИЗ
			|	НайденныеДокументы КАК НайденныеДокументы
			|ГДЕ
			|	НЕ НайденныеДокументы.ВидДокумента = """"";
		
		
		Запрос.УстановитьПараметр("СписокДокументов", ТабСписокНеподписанныхДокументов);
		Запрос.УстановитьПараметр("СписокСотрудников", ТабельныеНомераСотрудников);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			Продолжить;
		КонецЕсли; 
		
		ТабРезультатЗапроса = РезультатЗапроса.Выгрузить();
		
		СтруктураПисьма = Новый Структура;
		СтруктураПисьма.Вставить("Объект", Получатель.Объект);
		СтруктураПисьма.Вставить("Адрес", Получатель.Адрес);
		СтруктураПисьма.Вставить("СписокДокументов", ТабРезультатЗапроса);
		
		ОтправитьПисьмо(СтруктураПисьма);
		
		Прервать;
		
	КонецЦикла; 
КонецПроцедуры

Процедура ОтправитьПисьмо(СтруктураПисьма)
	// Сформируем тело письма
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Макет");
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Адрес = "" + СтруктураПисьма.Объект + "<" + СтруктураПисьма.Адрес + ">";
	ТабличныйДокумент.Вывести(Область);
	
	
	Область = Макет.ПолучитьОбласть("Строка");
	Для каждого СтрокаТаб Из СтруктураПисьма.СписокДокументов Цикл
		Область.Параметры.Заполнить(СтрокаТаб);
		ТабличныйДокумент.Вывести(Область);
	КонецЦикла; 
	
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	ТабличныйДокумент.Показать();
	
	ИмяФайла = КаталогВременныхФайлов() + Формат(ТекущаяДата(), "ДФ='yyyy-MM-dd hh-mm-ss'");
	ТабличныйДокумент.Записать(ИмяФайла + ".html", ТипФайлаТабличногоДокумента.HTML5);
	ТабличныйДокумент.Записать(ИмяФайла + ".xls", ТипФайлаТабличногоДокумента.XLS);
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Прочитать(ИмяФайла + ".html");
	
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
	Если УчетнаяЗапись = Неопределено Тогда
		УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоРеквизиту("АдресЭлектроннойПочты", "no-reply@vkusvill.ru");
	КонецЕсли;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Почта = Новый ИнтернетПочта;
	Почта.Подключиться(Профиль);	
	
	Письмо = Новый ИнтернетПочтовоеСообщение;

	Письмо.Тема = "Список неподписанных документов на " + Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy");
	
	Письмо.Тексты.Добавить(СтрЗаменить(ТекстовыйДокумент.ПолучитьТекст(), "<TABLE", "<TABLE border=1;"), ТипТекстаПочтовогоСообщения.HTML);
	
	Письмо.Вложения.Добавить(ИмяФайла + ".xls");
	
	Письмо.Отправитель 		= УчетнаяЗапись.Логин;
	Письмо.ИмяОтправителя 	= УчетнаяЗапись.Логин;  	
	
	Письмо.Получатели.Добавить(СтруктураПисьма.Адрес); 
	
	Попытка	
		Почта.Послать(Письмо);
	Исключение
	КонецПопытки;
	
	
	Почта.Отключиться();      
	
	
КонецПроцедуры
 
Процедура СформироватьИОтправить()	Экспорт 
	УстановитьСоединениеСБазойЗУП();
	
	СформироватьСписокСотрудниковИПолучателей();
	
	ОтправитьОтчет();
	
	КомСоединениеЗУП = Неопределено;

КонецПроцедуры
