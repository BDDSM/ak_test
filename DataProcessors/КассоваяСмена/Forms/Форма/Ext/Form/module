
Перем ТекПользователь;

Функция ПолучитьГруппуДоступаСтруктурнойЕдиницы(Пользователь)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГруппыДоступаСтруктурныхЕдиниц.Ссылка,
	|	НастройкиПравДоступаПользователей.Чтение,
	|	НастройкиПравДоступаПользователей.Запись,
	|	НастройкиПравДоступаПользователей.ОбъектДоступа,
	|	НастройкиПравДоступаПользователей.ОбластьДанных,
	|	НастройкиПравДоступаПользователей.Пользователь,
	|	НастройкиПравДоступаПользователей.ВладелецПравДоступа
	|ИЗ
	|	РегистрСведений.НастройкиПравДоступаПользователей КАК НастройкиПравДоступаПользователей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыДоступаСтруктурныхЕдиниц КАК ГруппыДоступаСтруктурныхЕдиниц
	|		ПО НастройкиПравДоступаПользователей.ОбъектДоступа = ГруппыДоступаСтруктурныхЕдиниц.Ссылка
	|			И НастройкиПравДоступаПользователей.ВладелецПравДоступа = ГруппыДоступаСтруктурныхЕдиниц.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыПользователей.ПользователиГруппы КАК ГруппыПользователейПользователиГруппы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НазначениеВидовОбъектовДоступа КАК НазначениеВидовОбъектовДоступа
	|			ПО ГруппыПользователейПользователиГруппы.Ссылка = НазначениеВидовОбъектовДоступа.ГруппаПользователей
	|				И (НазначениеВидовОбъектовДоступа.ВидОбъектаДоступа = ЗНАЧЕНИЕ(Перечисление.ВидыОбъектовДоступа.СтруктурныеЕдиницы))
	|		ПО НастройкиПравДоступаПользователей.Пользователь = ГруппыПользователейПользователиГруппы.Ссылка
	|ГДЕ
	|	ГруппыПользователейПользователиГруппы.Пользователь = &Пользователь";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ГруппаДоступа = Выборка.Ссылка;
	Иначе
		ГруппаДоступа = Справочники.ГруппыДоступаСтруктурныхЕдиниц.ПустаяСсылка();
	КонецЕсли;
	
	Возврат ГруппаДоступа;
	
КонецФункции

Процедура ПриОткрытии()
	
	Если НЕ ЗначениеЗаполнено(Смена) Тогда
		Смена = ТекущаяДата();
	КонецЕсли;
	
	ГруппаДоступаСтруктурнойЕдиницы = ПолучитьГруппуДоступаСтруктурнойЕдиницы(ТекПользователь);
	Если НЕ ЗначениеЗаполнено(ГруппаДоступаСтруктурнойЕдиницы) Тогда
		ЭлементыФормы.ПанельГруппыДоступа.ТекущаяСтраница = ЭлементыФормы.ПанельГруппыДоступа.Страницы.ЕстьВыбор;
	Иначе
		ЭлементыФормы.ПанельГруппыДоступа.ТекущаяСтраница = ЭлементыФормы.ПанельГруппыДоступа.Страницы.НетВыбора;
	КонецЕсли;
	ЗаполнитьТаблицуИнкассации();
	
КонецПроцедуры

Функция ПолучитьТекстЗапроса(ПоСтрокеТаблицы=Ложь)
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтруктурныеЕдиницы.Ссылка КАК ТорговаяТочка,
	|	ПоступлениеВКассу.Ссылка КАК ПоступлениеВКассу, 
	|	СУММА(ПоступлениеВКассу.СуммаДокумента) КАК СуммаИнкассации,
	|	СУММА(ЛистУчета.СуммаИнкассации) КАК СуммаИнкассацииЛУ
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЛистУчета КАК ЛистУчета
	|		ПО (ЛистУчета.ТорговаяТочка = СтруктурныеЕдиницы.Ссылка)
	|			И (НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) = &СменаОРП)
	|			И (ЛистУчета.Проведен)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеВКассу КАК ПоступлениеВКассу
	|		ПО (ПоступлениеВКассу.ТорговаяТочка = СтруктурныеЕдиницы.Ссылка)
	|			И (НАЧАЛОПЕРИОДА(ПоступлениеВКассу.Дата, ДЕНЬ) = &Смена)
	|			И (ПоступлениеВКассу.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПКО.Инкассация))
	|			И (ПоступлениеВКассу.Проведен)
	|ГДЕ
	|	(СтруктурныеЕдиницы.ДатаЗакрытия >= &Смена ИЛИ СтруктурныеЕдиницы.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1) ИЛИ &ОтображатьЗакрытые)
	|	И СтруктурныеЕдиницы.ГруппаДоступаСтруктурнойЕдиницы = &ГруппаДоступаСтруктурнойЕдиницы 
	|	И СтруктурныеЕдиницы.ТипРозничнойТочки <> ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	|	И СтруктурныеЕдиницы.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница) И СтруктурныеЕдиницы.id_TT > 0" +
		?(ПоСтрокеТаблицы, "	И СтруктурныеЕдиницы.Ссылка = &ТТ И ПоступлениеВКассу.Ссылка = &Поступление", "") + "
	|
	|СГРУППИРОВАТЬ ПО
	|	СтруктурныеЕдиницы.Ссылка,
	|	ПоступлениеВКассу.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтруктурныеЕдиницы.id_TT";
	
	Возврат ТекстЗапроса;

КонецФункции 

Процедура ЗаполнитьТаблицуИнкассации()
	
	СменаОРП = Смена-(24*60*60);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГруппаДоступаСтруктурнойЕдиницы",ГруппаДоступаСтруктурнойЕдиницы);
	Запрос.УстановитьПараметр("СменаОРП",СменаОРП);
	Запрос.УстановитьПараметр("Смена",Смена);
	Запрос.УстановитьПараметр("ОтображатьЗакрытые",ОтображатьЗакрытые);
	
	
	Запрос.Текст = ПолучитьТекстЗапроса();
	Инкассация.Загрузить(Запрос.Выполнить().Выгрузить());
//	ЭлементыФормы.Инкассация.СоздатьКолонки();
	Колонка = ЭлементыФормы.Инкассация.Колонки.ТорговаяТочка;
	Колонка.ТолькоПросмотр = истина;
	//Колонка = ЭлементыФормы.Инкассация.Колонки.СуммаИнкассацииЛУ;
	//Колонка.ТолькоПросмотр = истина;
	
	СуммыПоЛистам.Очистить();
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеВКассуСуммыИнкассацииПоЛистамУчета.ЛистУчета,
	               |	ПоступлениеВКассуСуммыИнкассацииПоЛистамУчета.Сумма,
	               |	ПоступлениеВКассуСуммыИнкассацииПоЛистамУчета.Ссылка
	               |ИЗ
	               |	Документ.ПоступлениеВКассу.СуммыИнкассацииПоЛистамУчета КАК ПоступлениеВКассуСуммыИнкассацииПоЛистамУчета
	               |ГДЕ
	               |	ПоступлениеВКассуСуммыИнкассацииПоЛистамУчета.Ссылка В(&Доки)
	               |	И ПоступлениеВКассуСуммыИнкассацииПоЛистамУчета.Ссылка.Проведен = ИСТИНА
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(ЛистУчета.СуммаИнкассации) КАК СуммаИнкассации,
	               |	ЛистУчета.Ссылка,
	               |	ЛистУчета.ТорговаяТочка
	               |ИЗ
	               |	Документ.ЛистУчета КАК ЛистУчета
	               |ГДЕ
	               |	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) = &СменаОРП
	               |	И ЛистУчета.Проведен = ИСТИНА
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЛистУчета.Ссылка,
	               |	ЛистУчета.ТорговаяТочка";
				   
	Запрос.УстановитьПараметр("Доки", Инкассация.ВыгрузитьКолонку("ПоступлениеВКассу"));
	Запрос.УстановитьПараметр("СменаОРП", СменаОРП);
	
	Результаты = Запрос.ВыполнитьПакет();
	ТабРасшифровка = Результаты[0].Выгрузить();
	ТабЛУ = Результаты[1].Выгрузить();
	Для Каждого СтрокаИнкас Из Инкассация Цикл
		СтрокиРасшифровки = ТабРасшифровка.НайтиСтроки(Новый Структура("Ссылка", СтрокаИнкас.ПоступлениеВКассу));
		Если СтрокиРасшифровки.Количество() > 0 Тогда
			Для Каждого СтрокаРасш Из СтрокиРасшифровки Цикл
				СтрокаДоб = СуммыПоЛистам.Добавить();
				СтрокаДоб.ЛистУчета = СтрокаРасш.ЛистУчета;
				СтрокаДоб.ТорговаяТочка = СтрокаИнкас.ТорговаяТочка;
				СтрокаДоб.Сумма = СтрокаРасш.Сумма;
				СтрокаДоб.ПоступлениеВКассу = СтрокаРасш.Ссылка; 	
			КонецЦикла;
		Иначе
			СтрокаЛист = ТабЛУ.Найти(СтрокаИнкас.ТорговаяТочка, "ТорговаяТочка");
			Если СтрокаЛист <> Неопределено Тогда
				СтрокаДоб = СуммыПоЛистам.Добавить();
				СтрокаДоб.ЛистУчета = СтрокаЛист.Ссылка;
				СтрокаДоб.ТорговаяТочка = СтрокаЛист.ТорговаяТочка;
				СтрокаДоб.Сумма = СтрокаЛист.СуммаИнкассации;
			КонецЕсли;	
		КонецЕсли;	
	КонецЦикла;
	
	Для Каждого СтрокаИнкас Из Инкассация Цикл
		СтрокаИнкас.СуммаИнкассацииЛУ = 0;
		СтрокиРасш = СуммыПоЛистам.НайтиСтроки(Новый Структура("ТорговаяТочка, ПоступлениеВКассу", СтрокаИнкас.ТорговаяТочка, СтрокаИнкас.ПоступлениеВКассу));
		Для Каждого СтрокаРасш Из СтрокиРасш Цикл
			СтрокаИнкас.СуммаИнкассацииЛУ = СтрокаИнкас.СуммаИнкассацииЛУ + СтрокаРасш.Сумма;
		КонецЦикла;
	КонецЦикла;	
	
	ПересчитатьИтогиОрганизаций();
	
Конецпроцедуры

Процедура ПересчитатьИтогиОрганизаций()
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Дата", Смена);
	Запрос.УстановитьПараметр("Таб", Инкассация.Выгрузить());
	Запрос.Текст = "ВЫБРАТЬ
	               |	Таб.ТорговаяТочка,
	               |	Таб.СуммаИнкассации
	               |ПОМЕСТИТЬ ВТ_Данные
	               |ИЗ
	               |	&Таб КАК Таб
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(ВТ_Данные.СуммаИнкассации) КАК Сумма,
	               |	ЕСТЬNULL(ЦФОСтруктурныхЕдиницСрезПоследних.Организация, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)) КАК Организация
	               |ИЗ
	               |	ВТ_Данные КАК ВТ_Данные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&Дата, ) КАК ЦФОСтруктурныхЕдиницСрезПоследних
	               |		ПО ВТ_Данные.ТорговаяТочка = ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница
	               |ГДЕ
	               |	ВТ_Данные.СуммаИнкассации <> 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЕСТЬNULL(ЦФОСтруктурныхЕдиницСрезПоследних.Организация, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_Данные";
				   
	ИтогиПоОрганизациям.Загрузить(Запрос.Выполнить().Выгрузить());
	
	
	СменаОРП = Смена-(24*60*60);
	Запрос.УстановитьПараметр("СменаОРП",СменаОРП);
	Запрос.УстановитьПараметр("Смена",Смена);
	Запрос.УстановитьПараметр("ОтображатьЗакрытые",ОтображатьЗакрытые);
	
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СтруктурныеЕдиницы.Ссылка КАК ТорговаяТочка,
	               |	СУММА(ПоступлениеВКассу.СуммаДокумента) КАК СуммаИнкассации
	               |ПОМЕСТИТЬ ВТ_Данные
	               |ИЗ
	               |	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеВКассу КАК ПоступлениеВКассу
	               |		ПО (ПоступлениеВКассу.ТорговаяТочка = СтруктурныеЕдиницы.Ссылка)
	               |			И (НАЧАЛОПЕРИОДА(ПоступлениеВКассу.Дата, ДЕНЬ) = &Смена)
	               |			И (ПоступлениеВКассу.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПКО.Инкассация))
	               |			И (ПоступлениеВКассу.Проведен)
	               |ГДЕ
	               |	(СтруктурныеЕдиницы.ДатаЗакрытия >= &Смена
	               |			ИЛИ СтруктурныеЕдиницы.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
	               |			ИЛИ &ОтображатьЗакрытые)
	               |	И СтруктурныеЕдиницы.ТипРозничнойТочки <> ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	               |	И СтруктурныеЕдиницы.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	               |	И СтруктурныеЕдиницы.id_TT > 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СтруктурныеЕдиницы.Ссылка,
	               |	ПоступлениеВКассу.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(ВТ_Данные.СуммаИнкассации) КАК Сумма,
	               |	ЕСТЬNULL(ЦФОСтруктурныхЕдиницСрезПоследних.Организация, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)) КАК Организация
	               |ИЗ
	               |	ВТ_Данные КАК ВТ_Данные
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&Дата, ) КАК ЦФОСтруктурныхЕдиницСрезПоследних
	               |		ПО ВТ_Данные.ТорговаяТочка = ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница
	               |ГДЕ
	               |	ВТ_Данные.СуммаИнкассации <> 0
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЕСТЬNULL(ЦФОСтруктурныхЕдиницСрезПоследних.Организация, ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВТ_Данные";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаТаб = ИтогиПоОрганизациям.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаб, Выборка);
		СтрокаТаб.ОбщийИтог = Истина;
	КонецЦикла;	
	
КонецПроцедуры	

Процедура СменаПриИзменении(Элемент)
	
	ЗаполнитьТаблицуИнкассации();
	
КонецПроцедуры

Процедура ИнкассацияСуммаИнкассацииПриИзменении(Элемент)
	
	СменаОРП = Смена-(24*60*60);
	ТекущиеДанные 	= ЭлементыФормы.Инкассация.ТекущиеДанные;
	ТекДокПоступления = ТекущиеДанные.ПоступлениеВКассу;
	СуммаИнкассации = ТекущиеДанные.СуммаИнкассации;
	ТорговаяТочка 	= ТекущиеДанные.ТорговаяТочка;
	Если СуммаИнкассации = 0 Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.ПоступлениеВКассу) Тогда
			ПоступлениеВКассу = ТекущиеДанные.ПоступлениеВКассу.ПолучитьОбъект();
			ПоступлениеВКассу.УстановитьПометкуУдаления(Истина);
		КонецЕсли;
	Иначе
		
		Если ГруппаДоступаСтруктурнойЕдиницы = Справочники.ГруппыДоступаСтруктурныхЕдиниц.НайтиПоКоду("000000001") Тогда
			СтруктурнаяиЕдиницаПриемаИнкассации = Справочники.СтруктурныеЕдиницы.НайтиПоРеквизиту("id_tt", 8);
		ИначеЕсли ГруппаДоступаСтруктурнойЕдиницы = Справочники.ГруппыДоступаСтруктурныхЕдиниц.НайтиПоКоду("000000002") Тогда
			СтруктурнаяиЕдиницаПриемаИнкассации = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("000000251");	
		КонецЕсли;	
		//Отбор = Новый Структура;
		//Отбор.Вставить("ТорговаяТочка",ТорговаяТочка);
		//СтруктураРезультата = РегистрыСведений.СкладыТорговыхТочек.ПолучитьПоследнее(Смена,Отбор);
		//СтруктурнаяиЕдиницаПриемаИнкассации = СтруктураРезультата.Склад;
		
		Если ЗначениеЗаполнено(ТекущиеДанные.ПоступлениеВКассу) Тогда
			ПоступлениеВКассу = ТекущиеДанные.ПоступлениеВКассу.ПолучитьОбъект();
		Иначе
			ПоступлениеВКассу 								= Документы.ПоступлениеВКассу.СоздатьДокумент();
		КонецЕсли;
		ПоступлениеВКассу.Дата							= Смена;
		ПоступлениеВКассу.ВидОперации 					= Перечисления.ВидыОперацийПКО.Инкассация;
		ПоступлениеВКассу.СтатьяДвиженияДенежныхСредствБУ = Справочники.СтатьиДвиженияДенежныхСредствБУ.НайтиПоНаименованию("Инкассация");
		//ПоступлениеВКассу.Организация 					= Справочники.Организации.Избенка;
		ЗапросОрг = Новый Запрос();
		ЗапросОрг.Текст = "ВЫБРАТЬ
		                  |	ЦФОСтруктурныхЕдиницСрезПоследних.Организация
		                  |ИЗ
		                  |	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&Дата, СтруктурнаяЕдиница = &ТорговаяТочка) КАК ЦФОСтруктурныхЕдиницСрезПоследних";
		ЗапросОрг.УстановитьПараметр("Дата", НачалоДня(Смена));
		ЗапросОрг.УстановитьПараметр("ТорговаяТочка", ТорговаяТочка);
		Выборка = ЗапросОрг.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ПоступлениеВКассу.Организация 					= Выборка.Организация;
		Иначе
			ПоступлениеВКассу.Организация 					= ТорговаяТочка.Организация;
		КонецЕсли;	
		Если НЕ ЗначениеЗаполнено(ПоступлениеВКассу.СтруктурнаяЕдиница) Тогда
			ПоступлениеВКассу.СтруктурнаяЕдиница 			= СтруктурнаяиЕдиницаПриемаИнкассации;
		КонецЕсли;	
		ПоступлениеВКассу.ТорговаяТочка					= ТорговаяТочка;
		ПоступлениеВКассу.СтатьяДвиженияДенежныхСредств = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("110101");
		ПоступлениеВКассу.СуммаДокумента 				= СуммаИнкассации;
		ПоступлениеВКассу.Ответственный					= ТекПользователь;
		ПоступлениеВКассу.СуммыИнкассацииПоЛистамУчета.Очистить();
		СтрокиРасшифровки = СуммыПоЛистам.НайтиСтроки(Новый Структура("ТорговаяТочка, ПоступлениеВКассу", ТорговаяТочка, ТекДокПоступления));
		Для Каждого СтрокаРасш Из СтрокиРасшифровки Цикл
			СтрокаДоб = ПоступлениеВКассу.СуммыИнкассацииПоЛистамУчета.Добавить();
			СтрокаДоб.ЛистУчета = СтрокаРасш.ЛистУчета;
			СтрокаДоб.Сумма = СтрокаРасш.Сумма;
		КонецЦикла;	
		ПоступлениеВКассу.Записать(РежимЗаписиДокумента.Проведение);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТТ",ТорговаяТочка);
	Запрос.УстановитьПараметр("Поступление",ПоступлениеВКассу.Ссылка);
	Запрос.УстановитьПараметр("ГруппаДоступаСтруктурнойЕдиницы",ГруппаДоступаСтруктурнойЕдиницы);
	Запрос.УстановитьПараметр("СменаОРП",СменаОРП);
	Запрос.УстановитьПараметр("Смена",Смена);
	Запрос.УстановитьПараметр("ОтображатьЗакрытые",ОтображатьЗакрытые);
	Запрос.Текст = ПолучитьТекстЗапроса(Истина);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Следующий() Тогда
		ТекущиеДанные.СуммаИнкассации = Результат.СуммаИнкассации;
		ТекущиеДанные.ПоступлениеВКассу = Результат.ПоступлениеВКассу;         
	КонецЕсли;
	
	КолвоСтрок = СуммыПоЛистам.Количество();
	Для н = 1 По КолвоСтрок Цикл
		Если СуммыПоЛистам[КолвоСтрок - н].ТорговаяТочка = ТекущиеДанные.ТорговаяТочка
			И СуммыПоЛистам[КолвоСтрок - н].ПоступлениеВКассу = ТекДокПоступления Тогда
			СуммыПоЛистам.Удалить(КолвоСтрок - н);
		КонецЕсли;	
	КонецЦикла;	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеВКассуСуммыИнкассацииПоЛистамУчета.ЛистУчета,
	               |	ПоступлениеВКассуСуммыИнкассацииПоЛистамУчета.Сумма,
	               |	ПоступлениеВКассуСуммыИнкассацииПоЛистамУчета.Ссылка
	               |ИЗ
	               |	Документ.ПоступлениеВКассу.СуммыИнкассацииПоЛистамУчета КАК ПоступлениеВКассуСуммыИнкассацииПоЛистамУчета
	               |ГДЕ
	               |	ПоступлениеВКассуСуммыИнкассацииПоЛистамУчета.Ссылка = &Док
	               |	И ПоступлениеВКассуСуммыИнкассацииПоЛистамУчета.Ссылка.Проведен = ИСТИНА
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(ЛистУчета.СуммаИнкассации) КАК СуммаИнкассации,
	               |	ЛистУчета.Ссылка,
	               |	ЛистУчета.ТорговаяТочка
	               |ИЗ
	               |	Документ.ЛистУчета КАК ЛистУчета
	               |ГДЕ
	               |	НАЧАЛОПЕРИОДА(ЛистУчета.Дата, ДЕНЬ) = &СменаОРП
	               |	И ЛистУчета.Проведен = ИСТИНА
	               |	И ЛистУчета.ТорговаяТочка = &ТорговаяТочка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ЛистУчета.Ссылка,
	               |	ЛистУчета.ТорговаяТочка";
				   
	Запрос.УстановитьПараметр("Док", ТекущиеДанные.ПоступлениеВКассу);
	Запрос.УстановитьПараметр("ТорговаяТочка", ТекущиеДанные.ТорговаяТочка);
	Запрос.УстановитьПараметр("СменаОРП", СменаОРП);
	
	Результаты = Запрос.ВыполнитьПакет();
	ТабРасшифровка = Результаты[0].Выгрузить();
	ТабЛУ = Результаты[1].Выгрузить();
	СтрокиРасшифровки = ТабРасшифровка.НайтиСтроки(Новый Структура("Ссылка", ТекущиеДанные.ПоступлениеВКассу));
	Если СтрокиРасшифровки.Количество() > 0 Тогда
		Для Каждого СтрокаРасш Из СтрокиРасшифровки Цикл
			СтрокаДоб = СуммыПоЛистам.Добавить();
			СтрокаДоб.ЛистУчета = СтрокаРасш.ЛистУчета;
			СтрокаДоб.ТорговаяТочка = ТекущиеДанные.ТорговаяТочка;
			СтрокаДоб.Сумма = СтрокаРасш.Сумма;
			СтрокаДоб.ПоступлениеВКассу = СтрокаРасш.Ссылка;  
		КонецЦикла;
	Иначе
		СтрокаЛист = ТабЛУ.Найти(ТекущиеДанные.ТорговаяТочка, "ТорговаяТочка");
		Если СтрокаЛист <> Неопределено Тогда
			СтрокаДоб = СуммыПоЛистам.Добавить();
			СтрокаДоб.ЛистУчета = СтрокаЛист.Ссылка;
			СтрокаДоб.ТорговаяТочка = СтрокаЛист.ТорговаяТочка;
			СтрокаДоб.Сумма = СтрокаЛист.СуммаИнкассации;
		КонецЕсли;	
	КонецЕсли;	
	
	ТекущиеДанные.СуммаИнкассацииЛУ = 0;
	СтрокиРасш = СуммыПоЛистам.НайтиСтроки(Новый Структура("ТорговаяТочка, ПоступлениеВКассу", ТекущиеДанные.ТорговаяТочка, ТекущиеДанные.ПоступлениеВКассу));
	Для Каждого СтрокаРасш Из СтрокиРасш Цикл
		ТекущиеДанные.СуммаИнкассацииЛУ = ТекущиеДанные.СуммаИнкассацииЛУ + СтрокаРасш.Сумма;
	КонецЦикла;
	
	//ЗаполнитьТаблицуИнкассации();			
КонецПроцедуры

Процедура ИнкассацияПередУдалением(Элемент, Отказ)
	
	Отказ=Истина;
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ИнкассацияПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	//Отказ =Истина;
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ИнкассацияПоступлениеВКассуНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные 	= ЭлементыФормы.Инкассация.ТекущиеДанные;
	ПоступлениеВКассу = ТекущиеДанные.ПоступлениеВКассу;
	Если ЗначениеЗаполнено(ПоступлениеВКассу) Тогда
		Форма = ПоступлениеВКассу.ПолучитьФорму("ФормаДокумента");
		Форма.Открыть();
	КонецЕсли;
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ГруппаДоступаСтруктурнойЕдиницыПриИзменении(Элемент)
	ЗаполнитьТаблицуИнкассации();
КонецПроцедуры

Процедура ИнкассацияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ДанныеСтроки.СуммаИнкассации > 0 И ДанныеСтроки.СуммаИнкассацииЛУ > 0 И НЕ ДанныеСтроки.СуммаИнкассации =  ДанныеСтроки.СуммаИнкассацииЛУ Тогда
		ОформлениеСтроки.ЦветТекста = ЦветаСтиля.ЦветОсобогоТекста;
	КонецЕсли;
	
	СтрокиЛисты = СуммыПоЛистам.НайтиСтроки(Новый Структура("ТорговаяТочка", ДанныеСтроки.ТорговаяТочка));
	Если СтрокиЛисты.Количество() > 1 Тогда
		ОформлениеСтроки.Шрифт = Новый Шрифт(,, Истина);
	КонецЕсли;	
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ИнкассацияВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	//Если Колонка.Имя = "ТорговаяТочка" Тогда
	//	ВыбраннаяСтрока.ТорговаяТочка.ПолучитьФорму().Открыть();
	//КонецЕсли;
	Если Колонка.Имя = "ТорговаяТочка" Тогда
		Результат = ОткрытьФормуМодально("Справочник.СтруктурныеЕдиницы.ФормаВыбора");
		Если ТипЗнч(Результат) = Тип("СправочникСсылка.СтруктурныеЕдиницы") Тогда
			ЭлементыФормы.Инкассация.ТекущиеДанные.ТорговаяТочка = Результат;
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

Процедура ИнкассацияСуммаИнкассацииЛУОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ЗначениеЗаполнено(ЭлементыФормы.Инкассация.ТекущиеДанные.ПоступлениеВКассу) Тогда
		Сообщить("В строке не создан документ поступления в кассу (укажите сумму инкассации и документ будет создан)");
		Возврат;
	КонецЕсли;	
	
	СписокСумм = Новый Массив();
	СтрокиСуммы = СуммыПоЛистам.НайтиСтроки(Новый Структура("ТорговаяТочка, ПоступлениеВКассу", ЭлементыФормы.Инкассация.ТекущиеДанные.ТорговаяТочка, ЭлементыФормы.Инкассация.ТекущиеДанные.ПоступлениеВКассу));
	Для Каждого СтрокаСум Из СтрокиСуммы Цикл
		СписокСумм.Добавить(Новый Структура("ЛистУчета, СуммаИнкассации", СтрокаСум.ЛистУчета, СтрокаСум.Сумма));
	КонецЦикла;	
	
	Результат = ОткрытьФормуМодально("Обработка.КассоваяСмена.Форма.ФормаСуммыПоЛистам", Новый Структура("СписокСуммы, ТорговаяТочка", СписокСумм, ЭлементыФормы.Инкассация.ТекущиеДанные.ТорговаяТочка));
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		КолвоСтрок = СуммыПоЛистам.Количество();
		Для н = 1 По КолвоСтрок Цикл
			Если СуммыПоЛистам[КолвоСтрок - н].ТорговаяТочка = ЭлементыФормы.Инкассация.ТекущиеДанные.ТорговаяТочка
				И СуммыПоЛистам[КолвоСтрок - н].ПоступлениеВКассу = ЭлементыФормы.Инкассация.ТекущиеДанные.ПоступлениеВКассу Тогда
				СуммыПоЛистам.Удалить(КолвоСтрок - н);
			КонецЕсли;	
		КонецЦикла;	
		Для Каждого СтрокаТаб Из Результат.СтрокиЛистов Цикл
			СтрокаДоб = СуммыПоЛистам.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаДоб, СтрокаТаб);
			СтрокаДоб.ПоступлениеВКассу = ЭлементыФормы.Инкассация.ТекущиеДанные.ПоступлениеВКассу;
		КонецЦикла;	
		ЭлементыФормы.Инкассация.ТекущиеДанные.СуммаИнкассации = Результат.СуммаИнкассации;
		ИнкассацияСуммаИнкассацииПриИзменении(Неопределено);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ИнкассацияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Копирование Тогда
		ЭлементыФормы.Инкассация.ТекущиеДанные.СуммаИнкассацииЛУ = 0;
		ЭлементыФормы.Инкассация.ТекущиеДанные.СуммаИнкассации = 0;
		ЭлементыФормы.Инкассация.ТекущиеДанные.ПоступлениеВКассу = Неопределено;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ИнкассацияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ПересчитатьИтогиОрганизаций();
	
КонецПроцедуры

Процедура ИтогиПоОрганизациямПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.ОбщийИтог Тогда
		ОформлениеСтроки.Ячейки.Организация.УстановитьТекст("Общий итог: " + ДанныеСтроки.Организация);
		ОформлениеСтроки.Шрифт = Новый Шрифт(,, Истина);
	КонецЕсли;	
	
КонецПроцедуры

ТекПользователь = глЗначениеПеременной("глТекущийПользователь");
