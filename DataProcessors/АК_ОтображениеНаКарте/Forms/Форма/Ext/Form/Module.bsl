&НаКлиенте
Процедура ПриОткрытии(Отказ, СтандартнаяОбработка)
	
	Если НЕ (Режим=РежимАдресКонтрагента или Режим=РежимАдресПредложения или Режим=РежимВыборКонтрагента или Режим=РежимПредложенияНаКарте) тогда
		Элементы.ТекстРежимНеизвестен.Видимость=Истина;
		Элементы.ТекстРежимНеизвестен.Заголовок=Элементы.ТекстРежимНеизвестен.Заголовок+" """+Режим+"""";
		Режим=НеизвестныйРежим;
	ИначеЕсли Режим=РежимПредложенияНаКарте тогда
		//Олег
		//Элементы.Координаты.Видимость=Истина;
		//Элементы.Карта.Видимость=Истина;
		Элементы.СмотретьНаКарте.Доступность=Ложь;
		Элементы.СмотретьНаКарте.Видимость=Ложь;
		Элементы.Координаты.Видимость=Истина;
		


    //финиш

	Иначе 
		Элементы.ТекстРежимНеизвестен.Видимость=Ложь;
	КонецЕсли;
	
	//+++АК SUVV 2018.03.05 ИП-00017818
	//WinHttp = Неопределено;
	//---АК SUVV

	Если Режим=РежимАдресКонтрагента или Режим=РежимАдресПредложения тогда
		
		Элементы.ГруппаРазмещениеНаКарте.Видимость=Истина;
		
		//+++АК SUVV 2018.03.05 ИП-00017818
		
		ПолучитьКоординатыИСведенияПоКоординатам();
		
		//Если НЕ КоординатыОпределены и НЕ ПустаяСтрока(Адрес) тогда
		//	//ищем адреса и координаты к ним
		//	попытка
		//	    WinHttp = ПолучитьГеокодерЯндекс();
		//		ЭлементыАдреса = Новый Массив;
		//		КоординатыОпределены=ПолучитьСтрокуКоординат(WinHttp,Адрес,СтрокаКоординат,ЭлементыАдреса);
		//		ответГород = ЭлементыАдреса[0];
		//		ответУлица = ЭлементыАдреса[1];
		//		ответДом = ЭлементыАдреса[2];
		//	Исключение
		//		Сообщить("Ошибка при определении координат: "+ОписаниеОшибки());
		//	КонецПопытки;
		//КонецЕсли;
		//
		//Если НЕ КоординатыОпределены Тогда 
		//	СтрокаКоординат=КоординатыОфиса;
		//КонецЕсли;
		//
		//Если ОпределитьРасположение и КоординатыОпределены Тогда
		//	Если WinHttp=Неопределено Тогда
		//	    WinHttp = ПолучитьГеокодерЯндекс();
		//	КонецЕсли;
		//	ответСервера = ПолучитьСведенияПоКоординатам(WinHttp,СтрокаКоординат,"district");
		//	ответОкруг = ПолучитьЗначениеКомпонента(ответСервера,"district");
		//	ответРайон = ПолучитьЗначениеКомпонента(ответСервера,"district");
		//	ответСервера = ПолучитьСведенияПоКоординатам(WinHttp,СтрокаКоординат,"metro");
		//	ответСтанцияМетро = ПолучитьЗначениеКомпонента(ответСервера,"metro");
		//КонецЕсли;
		//---АК SUVV
		
		Элементы.ЗапомнитьРазмещениеНаКарте.Доступность=	КоординатыОпределены;
		Элементы.Карта.Видимость=	КоординатыОпределены;
		Элементы.ТекстНетАдреса.Видимость=					НЕ КоординатыОпределены;
		//Элементы.ГруппаПоискПоАдресу.Видимость=			НЕ КоординатыОпределены;
		Элементы.АдресСтрока.Видимость=						КоординатыОпределены;
		Элементы.ГруппаПоискПоАдресу.Видимость=				Ложь;
		Элементы.ГруппаФильтр.Видимость=Ложь;
	ИначеЕсли Режим=РежимВыборКонтрагента тогда
		Элементы.ГруппаФильтр.Видимость=Истина;
		Элементы.Координаты.Видимость=Ложь;
		Элементы.Карта.Видимость=Ложь;
	КонецЕсли;
	
	Если Режим=РежимАдресКонтрагента и Режим2="Авто" тогда
		ЗапомнитьРазмещениеНаКарте(Неопределено);
	иначе
		ЭтаФорма.Карта = ПолучитьHTMLдокумент();
	КонецЕсли;
	
	Если Режим=РежимПредложенияНаКарте тогда
		СмотретьНаКарте(Неопределено);
		Элементы.СмотретьНаКарте.Доступность=Ложь;
		Элементы.СмотретьНаКарте.Видимость=Ложь;
		Элементы.Координаты.Видимость=Истина;
		Элементы.ГруппаФильтр.Видимость=Ложь;
		Элементы.ТекстРежимНеизвестен.Видимость=Ложь;
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура АдресПриИзменении(Элемент)
	
	//ПолучитьКоординаты();
	
КонецПроцедуры

&НаКлиенте
Процедура СобытиеКарты(Элемент, ДанныеСобытия, СтандартнаяОбработка) 
	
	СтандартнаяОбработка=Ложь;
	
	Попытка
		ИмяОперации = ДанныеСобытия.Event.propertyName;
		
		Если НЕ ЗначениеЗаполнено(ИмяОперации) или ИмяОперации = "ЩелчокПоКарте" Тогда // не наше событие
			Возврат	
		КонецЕсли; 
		
		Если НЕ КартаЗагружена и НЕ ИмяОперации = "ЗагрузкаЗавершена" тогда
			Возврат;
		иначе
			
			Если ИмяОперации = "ЗагрузкаЗавершена" Тогда // готовность карты
				КартаЗагружена = Истина;
			иначе
				
				ДанныеОперации = ДанныеСобытия.Event.data;
				//сообщить(""+ИмяОперации+": "+ДанныеОперации);
			
				Если Режим=РежимАдресКонтрагента или Режим=РежимАдресПредложения тогда
					Если ИмяОперации = "КонецПеремещения" Тогда 
						СтрокаКоординат=Координаты41(ДанныеОперации);
						КоординатыОпределены=Истина;
						Элементы.ЗапомнитьРазмещениеНаКарте.Доступность=Истина;
					КонецЕсли; 
				ИначеЕсли Режим=РежимВыборКонтрагента тогда
					Если ИмяОперации="ТекСтрока" тогда
						Результат=Новый Структура;
						Результат.Вставить("СсылкаНаОбъект",Координаты[ДанныеОперации-1].СсылкаНаОбъект);
						//сообщить("Выбран "+Результат.СсылкаНаОбъект);
						ОповеститьОВыборе(Результат);
					КонецЕсли;
				иначе
					//+++АК mika 2017.11.24 ИП-00017302
					ОбновитьСписокПоступившихПредложений(ИмяОперации, ДанныеОперации - 1);  
					//---АК 
				КонецЕсли;
			
			//Если ИмяОперации = "ТекСтрока" Тогда 
			//	//ПозиционироватьСтрокуТабКоординатПоКоординатам (ДанныеОперации);
			//ИначеЕсли ИмяОперации = "ЩелчокПоКарте" Тогда 
			//	//КоординатыСтр =  ДанныеОперации;
			//Иначе
			КонецЕсли; 
		КонецЕсли;
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму()
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ПерерисоватьКарту()
КонецПроцедуры

Функция КоординатыВЧисло(СтрокаКоординат)
	
	//АиК 11.01.2017 старт
	//исправление ошибок в координатах
	СтрокаКоординат=СтрЗаменить(СтрокаКоординат,"..",".");
	//АиК 11.01.2017 финиш

	Поз=найти(СтрокаКоординат,",");
	К1=число(лев(СтрокаКоординат,Поз-1));
	К2=число(сред(СтрокаКоординат,Поз+1));
	К=Новый Структура;
	К.Вставить("К1",К1);
	К.Вставить("К2",К2);
	Возврат К;
КонецФункции

Функция Абс(ч)
	возврат макс(ч,-ч);
КонецФункции

Функция КоординатыВСтроку(К1,К2)
	Возврат стрзаменить(Формат(К1,"ЧГ=0;ЧРД=."),",",".")+","+стрзаменить(Формат(К2,"ЧГ=0;ЧРД=."),",",".");
КонецФункции

Функция КоординатыГраниц(СписокКоординат,Центр)
	КоординатыЦентра=КоординатыВЧисло(Центр);
	Угол1К1=КоординатыЦентра.К1;
	Угол1К2=КоординатыЦентра.К2;
	Угол2К1=Угол1К1;
	Угол2К2=Угол1К2;
	Для Каждого ЭлементСписка из СписокКоординат цикл
//		сообщить("Точка: "+ЭлементСписка.Значение);
		КоординатыТочки=КоординатыВЧисло(ЭлементСписка.Значение);
		Д1=абс(КоординатыЦентра.К1-КоординатыТочки.К1);
		Д2=абс(КоординатыЦентра.К2-КоординатыТочки.К2);
		Угол1К1=мин(Угол1К1,КоординатыЦентра.К1-Д1);
		Угол1К2=мин(Угол1К2,КоординатыЦентра.К2-Д2);
		Угол2К1=Макс(Угол2К1,КоординатыЦентра.К1+Д1);
		Угол2К2=Макс(Угол2К2,КоординатыЦентра.К2+Д2);
	КонецЦикла;
	Область="["+КоординатыВСтроку(Угол1К1,Угол1К2)+"],["+КоординатыВСтроку(Угол2К1,Угол2К2)+"]";
//	Сообщить("Область: "+Область);
	Возврат Область;;
КонецФункции

&НаСервере
Функция ПолучитьHTMLдокумент(ИмяМакета="КартаЯндекс")
	
	КартаЗагружена=Ложь;
	
	СписокКоординат=Новый СписокЗначений;
	
	МакетКарты =Обработки.АК_ОтображениеНаКарте.ПолучитьМакет(ИмяМакета);
	ТекстСтраницы=МакетКарты.ПолучитьТекст(); 
	
	Если ИмяМакета="КартаЯндекс" тогда
		ТекстСтраницы=СтрЗаменить(ТекстСтраницы,"DIV_NAME",ИдКарты);
		ТекстСтраницы=СтрЗаменить(ТекстСтраницы,"КоординатыОфиса",КоординатыОфиса);
		СписокКоординат.Добавить(КоординатыОфиса);
		Если Режим=РежимАдресКонтрагента или Режим=РежимАдресПредложения тогда
			Если НЕ КоординатыОпределены тогда
				ТекстСтраницы=СтрЗаменить(ТекстСтраницы,"КоординатыЦентра",КоординатыОфиса);
			иначе
				ТекстСтраницы=СтрЗаменить(ТекстСтраницы,"КоординатыЦентра",СтрокаКоординат);
			КонецЕсли;
			ТекстСтраницы=СтрЗаменить(ТекстСтраницы,"//Границы","");
			Код="
			|var placemark2 = new ymaps.Placemark(["
			+СтрокаКоординат+
			"], {
			//|    balloonContent: '"+Наименование+"',
			|    iconContent: '"+Наименование+"'
			|}, {
			|    preset: 'islands#redStretchyIcon',
			|    // Отключаем кнопку закрытия балуна.
			|    balloonCloseButton: false,
			|    // Балун будем открывать и закрывать кликом по иконке метки.
			|    hideIconOnBalloonOpen: false,
			|    draggable: true
			|});
			//|placemark2.events.add(""click"", function (e) { // привязка к событию шелчок на объект
			//|	return1c('ТекСтрока',e.get('target').geometry.getCoordinates());  // возврат координат из объекта 
			//|	//myMap.hint.close();   						// очищаем карту от подсказок
			//|	});
			|placemark2.events.add(""dragend"", function (e) { // привязка к событию шелчок на объект
			|	return1c('КонецПеремещения',e.get('target').geometry.getCoordinates());  // возврат координат из объекта 
			|	//myMap.hint.close();   						// очищаем карту от подсказок
			|	});
			//|placemark2.events.add(""dragstart"", function (e) { // привязка к событию шелчок на объект
			//|	return1c('НачалоПеремещения',e.get('target').geometry.getCoordinates());  // возврат координат из объекта 
			//|	//myMap.hint.close();   						// очищаем карту от подсказок
			//|	});
			|myMap.geoObjects.add(placemark2);	
//			|geoGroup.add(placemark2);	
			|";
			ТекстСтраницы=СтрЗаменить(ТекстСтраницы,"//INSERT_CODE_HERE",Код);
			СписокКоординат.Добавить(СтрокаКоординат);
			ТекстСтраницы=СтрЗаменить(ТекстСтраницы,"КоординатыГраниц",КоординатыГраниц(СписокКоординат,СтрокаКоординат));
		//ИначеЕсли Режим=РежимВыборКонтрагента  тогда
		ИначеЕсли Режим=РежимВыборКонтрагента ИЛИ  Режим=РежимПредложенияНаКарте тогда
			ТекстСтраницы=СтрЗаменить(ТекстСтраницы,"КоординатыЦентра",КоординатыОфиса);
			
			Если КоличествоОбъектовСАдресом=0 тогда
				ТекстСтраницы=СтрЗаменить(ТекстСтраницы,"//Центр","");
			иначе
				ТекстСтраницы=СтрЗаменить(ТекстСтраницы,"//Границы","");
			КонецЕсли;

				ОбщийКод="";
				Код="
				|var ПеременнаяМаркер = new ymaps.Placemark([СтрокаКоординат], {
				//|    balloonContent: '"+Наименование+"',
				|    iconContent: 'Наименование'
				|}, {
				|    preset: 'islands#redStretchyIcon',
				|    // Отключаем кнопку закрытия балуна.
				|    balloonCloseButton: false,
				|    // Балун будем открывать и закрывать кликом по иконке метки.
				|    hideIconOnBalloonOpen: false,
				|    draggable: false
				|});
				|ПеременнаяМаркер.events.add(""click"", function (e) { // привязка к событию шелчок на объект
				|	return1c('ТекСтрока',НомерСтрокиСтр);  // возврат номера строки из объекта 
				|	//myMap.hint.close();   						// очищаем карту от подсказок
				|	});
				//|ПеременнаяМаркер.events.add(""dragend"", function (e) { // привязка к событию шелчок на объект
				//|	return1c('КонецПеремещения',e.get('target').geometry.getCoordinates());  // возврат координат из объекта 
				//|	//myMap.hint.close();   						// очищаем карту от подсказок
				//|	});
				//|ПеременнаяМаркер.events.add(""dragstart"", function (e) { // привязка к событию шелчок на объект
				//|	return1c('НачалоПеремещения',e.get('target').geometry.getCoordinates());  // возврат координат из объекта 
				//|	//myMap.hint.close();   						// очищаем карту от подсказок
				//|	});
				|myMap.geoObjects.add(ПеременнаяМаркер);	
	//			|geoGroup.add(ПеременнаяМаркер);	
				|";
				
				НомерМаркера=1;
				НомерСтроки=0;
				Для Каждого СтрокаСКоординатами из Координаты цикл
					
					СтрокаСКоординатами.СтрокаКоординат=СтрЗаменить(СтрокаСКоординатами.СтрокаКоординат,"..",".");
					НомерСтроки=НомерСтроки+1;
					Если СтрокаСКоординатами.КоординатыОпределены тогда
						НомерМаркера=НомерМаркера+1;
						НомерМаркераСтр=Формат(НомерМаркера,"ЧГ=0");
						НомерСтрокиСтр=Формат(НомерСтроки,"ЧГ=0");
						ПеременнаяМаркер="Placemark"+НомерМаркераСтр;
						ПромКод=СтрЗаменить(Код,"ПеременнаяМаркер",ПеременнаяМаркер);
						ПромКод=СтрЗаменить(ПромКод,"СтрокаКоординат",СтрокаСКоординатами.СтрокаКоординат);
						//+++АК mika 2017.12.01 ИП-00017045^01
						//При наличии в наименовании предложения символа ' корректно сгенерировать карту невозможно
						СтрокаСКоординатами.Наименование = СтрЗаменить(СтрокаСКоординатами.Наименование, "'", """");
						//---АК mika ИП-00017045^01
						ПромКод=СтрЗаменить(ПромКод,"Наименование",СтрокаСКоординатами.Наименование);
						ПромКод=СтрЗаменить(ПромКод,"НомерСтрокиСтр",НомерСтрокиСтр);
						ОбщийКод=ОбщийКод+ПромКод;
						СписокКоординат.Добавить(СтрокаСКоординатами.СтрокаКоординат);
					КонецЕсли;
				конеццикла;
				
				ТекстСтраницы=СтрЗаменить(ТекстСтраницы,"//INSERT_CODE_HERE",ОбщийКод);
			//КонецЕсли;
			ТекстСтраницы=СтрЗаменить(ТекстСтраницы,"КоординатыГраниц",КоординатыГраниц(СписокКоординат,КоординатыОфиса));
			
		КонецЕсли;
		Иначе 
		//
	КонецЕсли;
	
	Возврат ТекстСтраницы; 
	
КонецФункции

&НаКлиенте
Процедура ДобавитьМаркер(Команда)
	//55.804911,37.392895
	Коорд="55.804911,37.392895";
//	сообщить("Координаты "+Коорд);
	
	Код="
	|var placemark = new ymaps.Placemark(["
	+Коорд+
	"], {
	|    balloonContent: 'Контент',
	|    iconContent: 'Маркер'
	|}, {
	|    preset: 'islands#yellowStretchyIcon',
	|    // Отключаем кнопку закрытия балуна.
	|    balloonCloseButton: false,
	|    // Балун будем открывать и закрывать кликом по иконке метки.
	|    hideIconOnBalloonOpen: false,
	|    draggable: true
	|});
	|placemark.events.add(""click"", function (e) { // привязка к событию шелчок на объект
	|	return1c('ТекСтрока',e.get('target').geometry.getCoordinates());  // возврат координат из объекта 
	|	//myMap.hint.close();   						// очищаем карту от подсказок
	|	});
	|placemark.events.add(""dragend"", function (e) { // привязка к событию шелчок на объект
	|	return1c('КонецПеремещения',e.get('target').geometry.getCoordinates());  // возврат координат из объекта 
	|	//myMap.hint.close();   						// очищаем карту от подсказок
	|	});
	|placemark.events.add(""dragstart"", function (e) { // привязка к событию шелчок на объект
	|	return1c('НачалоПеремещения',e.get('target').geometry.getCoordinates());  // возврат координат из объекта 
	|	//myMap.hint.close();   						// очищаем карту от подсказок
	|	});
	|myMap.geoObjects.add(placemark);	
	|";
//Возврат;	
//	ВыполнитьСкрипт(
//	"myMap.balloon.open(["+Широта+","+ Долгота+"], """+Наименование+""", {
//	|   // Опция: не показываем кнопку закрытия.
//	|  closeButton: false,
//	|  autoPan: false,  
//	|  autoPanDuration: 150 
//	|});");
//	
//	ВыполнитьСкрипт(
//	
//	"myMap.balloon.open(["+Широта+","+ Долгота+"], """+Наименование+""", {
//	|   // Опция: не показываем кнопку закрытия.
//	|  closeButton: false,
//	|  autoPan: false,  
//	|  autoPanDuration: 150 
//	|});");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	//Если НЕ КартаОчищена тогда
	//	Отказ=Истина;
	//	Карта = ПолучитьHTMLдокумент("ПустаяСтраница");
	//	КартаОчищена = Истина;
	//	ПодключитьОбработчикОжидания("ЗакрытьФорму",1,Истина);
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗапомнитьРазмещениеНаКарте(Команда)
	Результат=Новый Структура;
	Результат.Вставить("СтрокаКоординат",СтрокаКоординат);
	Результат.Вставить("КоординатыОпределены",КоординатыОпределены);
	Результат.Вставить("Город",ответГород);
	Результат.Вставить("Улица",ответУлица);
	Результат.Вставить("Дом",ответДом);
	Если ОпределитьРасположение Тогда
		Результат.Вставить("Округ",ответОкруг);
		Результат.Вставить("Район",ответРайон);
		Результат.Вставить("Метро",ответСтанцияМетро);
	КонецЕсли;
	ОповеститьОВыборе(Результат);
КонецПроцедуры

&НаСервере
Функция ПолучитьАдресНаСервере( СсылкаНаОбъект)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Представление КАК Адрес,
		|	1 КАК Приоритет
		|ПОМЕСТИТЬ Выборка
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &СсылкаНаОбъект
		|	И КонтактнаяИнформация.Тип = &ТипАдрес
		|	И КонтактнаяИнформация.Вид = &ВидФактическийАдрес
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КонтактнаяИнформация.Представление,
		|	2
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &СсылкаНаОбъект
		|	И КонтактнаяИнформация.Тип = &ТипАдрес
		|	И КонтактнаяИнформация.Вид = &ВидЮридическийАдрес
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ ПЕРВЫЕ 1
		|	Выборка.Адрес
		|ИЗ
		|	Выборка КАК Выборка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Выборка.Приоритет";

	Запрос.УстановитьПараметр("ВидФактическийАдрес", Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	Запрос.УстановитьПараметр("ВидЮридическийАдрес", Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	Запрос.УстановитьПараметр("ТипАдрес", Перечисления.ТипыКонтактнойИнформации.Адрес);
	Запрос.УстановитьПараметр("СсылкаНаОбъект", СсылкаНаОбъект);
	
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Адрес;
	иначе
		Возврат "";
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ОбновитьКоординатыНаСервере(СсылкаНаОбъект,СтрокаКоординат);
	Спр=СсылкаНаОбъект.ПолучитьОбъект();
	Спр.СтрокаКоординат=СтрокаКоординат;
	Спр.КоординатыОпределены=Истина;
	Спр.ОбменДанными.Загрузка=Истина;
	Попытка
		Спр.Записать();
	исключение
	конецпопытки;
КонецПроцедуры

&НаКлиенте
Процедура СмотретьНаКарте(Команда)
	
	СтрокиБезКоординат=Координаты.НайтиСтроки(Новый Структура("КоординатыОпределены",Ложь));
	
	НетКоординат=0;
	
    WinHttp = ПолучитьГеокодерЯндекс();
	
	для Каждого СтрокаБезКоординат из СтрокиБезКоординат цикл
		
		Адрес=СтрокаБезКоординат.Адрес;

		Если НЕ ПустаяСтрока(Адрес) Тогда
			СтрокаБезКоординат.КоординатыОпределены=
				ПолучитьСтрокуКоординат(WinHttp,Адрес,СтрокаБезКоординат.СтрокаКоординат);
		КонецЕсли;;
		Если СтрокаБезКоординат.КоординатыОпределены тогда
			//попробуем координаты про запас записать
			ОбновитьКоординатыНаСервере(СтрокаБезКоординат.СсылкаНаОбъект,СтрокаБезКоординат.СтрокаКоординат);
		иначе
			НетКоординат=НетКоординат+1;
		КонецЕсли;			
	КонецЦикла;
	Если НетКоординат>0 тогда
		УдалосьПолучитьКоординаты=КоличествоОбъектовСАдресом-НетКоординат;
		Элементы.СмотретьНаКарте.Заголовок="Удалось определить координаты: "+УдалосьПолучитьКоординаты;
	КонецЕсли;
	ЭтаФорма.Карта = ПолучитьHTMLдокумент();
	//олег
	//Элементы.СмотретьНаКарте.Видимость=Ложь;
	//Элементы.Координаты.Видимость=Ложь;
	Элементы.СмотретьНаКарте.Видимость=Истина;
	Элементы.Координаты.Видимость=Истина;

	//олег
	Элементы.Карта.Видимость=Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ФильтрУправлениеКачестваПриИзменении(Элемент)
	УправлениеКачества=?(ФильтрУправлениеКачества,УправлениеКачества,"");
	ОтборКонтрагентов();
КонецПроцедуры

&НаКлиенте
Процедура ФильтрТехнологПриИзменении(Элемент)
	Технолог=?(ФильтрТехнолог,Технолог,"");
	ОтборКонтрагентов();
КонецПроцедуры

&НаКлиенте
Процедура ФильтрНоменклатурнаяГруппаПриИзменении(Элемент)
	НоменклатурнаяГруппа=?(ФильтрНоменклатурнаяГруппа,НоменклатурнаяГруппа,"");
	ОтборКонтрагентов();
КонецПроцедуры

&НаКлиенте
Процедура УправлениеКачестваПриИзменении(Элемент)
	ФильтрУправлениеКачества=ЗначениеЗаполнено(УправлениеКачества);
	ОтборКонтрагентов();
КонецПроцедуры

&НаКлиенте
Процедура ТехнологПриИзменении(Элемент)
	ФильтрТехнолог=ЗначениеЗаполнено(Технолог);
	ОтборКонтрагентов();
КонецПроцедуры

&НаКлиенте
Процедура НоменклатурнаяГруппаПриИзменении(Элемент)
	ФильтрНоменклатурнаяГруппа=ЗначениеЗаполнено(НоменклатурнаяГруппа);
	ОтборКонтрагентов();
КонецПроцедуры

&НаКлиенте
Процедура ОтборКонтрагентов()
	Элементы.Карта.Видимость=Ложь;
	Если 	ФильтрНоменклатурнаяГруппа и ЗначениеЗаполнено(НоменклатурнаяГруппа) или 
			ФильтрТехнолог и ЗначениеЗаполнено(Технолог) или 
			ФильтрУправлениеКачества и ЗначениеЗаполнено(УправлениеКачества) 
	тогда
		ОтборКонтрагентовНаСервере();
	иначе
		Координаты.Очистить();
	КонецЕсли;
	
	Элементы.Координаты.Видимость=Истина;
	УправлениеВидомНадписиСмотретьНаКарте();
	Элементы.СмотретьНаКарте.Видимость=Истина;

КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидомНадписиСмотретьНаКарте()
	Если КоличествоОбъектовСАдресом=0 тогда
		Элементы.СмотретьНаКарте.Заголовок="Контрагенты с адресом не найдены";
		Элементы.СмотретьНаКарте.Доступность=Ложь;
	иначе
		Элементы.СмотретьНаКарте.Заголовок="Смотреть контрагентов на карте: "+КоличествоОбъектовСАдресом;
		Элементы.СмотретьНаКарте.Доступность=Истина;
	КонецЕсли;
КонецПроцедуры



&НаСервере
Процедура ОтборКонтрагентовНаСервере()
	Запрос = Новый Запрос;
	
	Если ФильтрНоменклатурнаяГруппа тогда
		Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	КонтрагентыНоменклатурныеГруппы.Ссылка КАК СсылкаНаОбъект
				|ПОМЕСТИТЬ ВыборкаКонтрагентов0
				|ИЗ
				|	Справочник.Контрагенты.НоменклатурныеГруппы КАК КонтрагентыНоменклатурныеГруппы
				|ГДЕ
				|	КонтрагентыНоменклатурныеГруппы.ГруппаНоменклатуры = &НоменклатурнаяГруппа
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	СсылкаНаОбъект
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	Контрагенты.Ссылка КАК СсылкаНаОбъект,
				|	Контрагенты.КоординатыОпределены КАК КоординатыОпределены,
				|	Контрагенты.СтрокаКоординат КАК СтрокаКоординат,
				|	Контрагенты.Наименование КАК Наименование
				|ПОМЕСТИТЬ ВыборкаКонтрагентов
				|ИЗ
				|	Справочник.Контрагенты КАК Контрагенты
				|ГДЕ
				|	Контрагенты.Ссылка В
				|			(ВЫБРАТЬ
				|				ВыборкаКонтрагентов0.СсылкаНаОбъект
				|			ИЗ
				|				ВыборкаКонтрагентов0)
				|	И &Истина
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	СсылкаНаОбъект
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	КонтактнаяИнформация.Представление КАК Адрес,
				|	1 КАК Приоритет,
				|	КонтактнаяИнформация.Объект КАК СсылкаНаОбъект
				|ПОМЕСТИТЬ Контакты
				|ИЗ
				|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
				|ГДЕ
				|	КонтактнаяИнформация.Объект В
				|			(ВЫБРАТЬ
				|				ВыборкаКонтрагентов.СсылкаНаОбъект
				|			ИЗ
				|				ВыборкаКонтрагентов)
				|	И КонтактнаяИнформация.Тип = &ТипАдрес
				|	И КонтактнаяИнформация.Вид = &ВидФактическийАдрес
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|ВЫБРАТЬ
				|	КонтактнаяИнформация.Представление,
				|	2,
				|	КонтактнаяИнформация.Объект
				|ИЗ
				|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
				|ГДЕ
				|	КонтактнаяИнформация.Объект В
				|			(ВЫБРАТЬ
				|				ВыборкаКонтрагентов.СсылкаНаОбъект
				|			ИЗ
				|				ВыборкаКонтрагентов)
				|	И КонтактнаяИнформация.Тип = &ТипАдрес
				|	И КонтактнаяИнформация.Вид = &ВидЮридическийАдрес
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	ВыборкаКонтрагентов.СсылкаНаОбъект КАК СсылкаНаОбъект,
				|	ВыборкаКонтрагентов.КоординатыОпределены,
				|	ВыборкаКонтрагентов.СтрокаКоординат,
				|	ВыборкаКонтрагентов.Наименование КАК Наименование,
				|	ЕСТЬNULL(Контакты.Адрес, """") КАК Адрес,
				|	ЕСТЬNULL(Контакты.Приоритет, 3) КАК Приоритет
				|ИЗ
				|	ВыборкаКонтрагентов КАК ВыборкаКонтрагентов
				|		ЛЕВОЕ СОЕДИНЕНИЕ Контакты КАК Контакты
				|		ПО ВыборкаКонтрагентов.СсылкаНаОбъект = Контакты.СсылкаНаОбъект
				|
				|УПОРЯДОЧИТЬ ПО
				|	СсылкаНаОбъект,
				|	Приоритет
				|ИТОГИ ПО
				|	СсылкаНаОбъект
				|АВТОУПОРЯДОЧИВАНИЕ";

				Если ФильтрУправлениеКачества тогда
					Условие="КонтрагентыНоменклатурныеГруппы.Ссылка.УправлениеКачества = &УправлениеКачества";
					Если ФильтрТехнолог  тогда
						Условие=Условие+" И ";
					КонецЕсли;
				иначе
					Условие="";
				КонецЕсли;
				Если ФильтрТехнолог  тогда
					Условие=Условие+"КонтрагентыНоменклатурныеГруппы.Ссылка.Технолог = &Технолог";
				КонецЕсли;
			иначе
				Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
					|	Контрагенты.Ссылка КАК СсылкаНаОбъект,
					|	Контрагенты.КоординатыОпределены КАК КоординатыОпределены,
					|	Контрагенты.СтрокаКоординат КАК СтрокаКоординат,
					|	Контрагенты.Наименование КАК Наименование
					|ПОМЕСТИТЬ ВыборкаКонтрагентов
					|ИЗ
					|	Справочник.Контрагенты КАК Контрагенты
					|ГДЕ
					|	&Истина
					|
					|ИНДЕКСИРОВАТЬ ПО
					|	СсылкаНаОбъект
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	КонтактнаяИнформация.Представление КАК Адрес,
					|	1 КАК Приоритет,
					|	КонтактнаяИнформация.Объект КАК СсылкаНаОбъект
					|ПОМЕСТИТЬ Контакты
					|ИЗ
					|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
					|ГДЕ
					|	КонтактнаяИнформация.Объект В
					|			(ВЫБРАТЬ
					|				ВыборкаКонтрагентов.СсылкаНаОбъект
					|			ИЗ
					|				ВыборкаКонтрагентов)
					|	И КонтактнаяИнформация.Тип = &ТипАдрес
					|	И КонтактнаяИнформация.Вид = &ВидФактическийАдрес
					|
					|ОБЪЕДИНИТЬ ВСЕ
					|
					|ВЫБРАТЬ
					|	КонтактнаяИнформация.Представление,
					|	2,
					|	КонтактнаяИнформация.Объект
					|ИЗ
					|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
					|ГДЕ
					|	КонтактнаяИнформация.Объект В
					|			(ВЫБРАТЬ
					|				ВыборкаКонтрагентов.СсылкаНаОбъект
					|			ИЗ
					|				ВыборкаКонтрагентов)
					|	И КонтактнаяИнформация.Тип = &ТипАдрес
					|	И КонтактнаяИнформация.Вид = &ВидЮридическийАдрес
					|;
					|
					|////////////////////////////////////////////////////////////////////////////////
					|ВЫБРАТЬ
					|	ВыборкаКонтрагентов.СсылкаНаОбъект КАК СсылкаНаОбъект,
					|	ВыборкаКонтрагентов.КоординатыОпределены,
					|	ВыборкаКонтрагентов.СтрокаКоординат,
					|	ВыборкаКонтрагентов.Наименование КАК Наименование,
					|	ЕСТЬNULL(Контакты.Адрес, """") КАК Адрес,
					|	ЕСТЬNULL(Контакты.Приоритет, 3) КАК Приоритет
					|ИЗ
					|	ВыборкаКонтрагентов КАК ВыборкаКонтрагентов
					|		ЛЕВОЕ СОЕДИНЕНИЕ Контакты КАК Контакты
					|		ПО ВыборкаКонтрагентов.СсылкаНаОбъект = Контакты.СсылкаНаОбъект
					|
					|УПОРЯДОЧИТЬ ПО
					|	СсылкаНаОбъект,
					|	Приоритет
					|ИТОГИ ПО
					|	СсылкаНаОбъект
					|АВТОУПОРЯДОЧИВАНИЕ";

				Если ФильтрУправлениеКачества тогда
					Условие="Контрагенты.УправлениеКачества = &УправлениеКачества";
					Если ФильтрТехнолог  тогда
						Условие=Условие+" И ";
					КонецЕсли;
				иначе
					Условие="";
				КонецЕсли;
				Если ФильтрТехнолог  тогда
					Условие=Условие+"Контрагенты.Технолог = &Технолог";
				КонецЕсли;
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(Условие) тогда
		Запрос.Текст=СтрЗаменить(Запрос.Текст,"&Истина",Условие);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Истина", Истина);
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", НоменклатурнаяГруппа);
	Запрос.УстановитьПараметр("Технолог", Технолог);
	Запрос.УстановитьПараметр("УправлениеКачества", УправлениеКачества);
	Запрос.УстановитьПараметр("ВидФактическийАдрес", Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	Запрос.УстановитьПараметр("ВидЮридическийАдрес", Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента);
	Запрос.УстановитьПараметр("ТипАдрес", Перечисления.ТипыКонтактнойИнформации.Адрес);

	Координаты.Очистить();
	
	Результат = Запрос.Выполнить();

	ВыборкаСсылкаНаОбъект = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	КоличествоОбъектовСАдресом=0;
	
	Пока ВыборкаСсылкаНаОбъект.Следующий() Цикл
		ВыборкаДетальныеЗаписи = ВыборкаСсылкаНаОбъект.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ТекСтрокаКоординат=Координаты.Добавить();
			ЗаполнитьЗначенияСвойств(ТекСтрокаКоординат,ВыборкаДетальныеЗаписи);
			ТекСтрокаКоординат.НетАдресаНетКоординат=ПустаяСтрока(ТекСтрокаКоординат.Адрес) и НЕ ТекСтрокаКоординат.КоординатыОпределены;
			Если НЕ ТекСтрокаКоординат.НетАдресаНетКоординат тогда
				КоличествоОбъектовСАдресом=КоличествоОбъектовСАдресом+1;
			КонецЕсли;
			прервать;
		КонецЦикла;
	КонецЦикла;


КонецПроцедуры


&НаКлиенте
Процедура КоординатыПриИзменении(Элемент)
	УправлениеВидомНадписиСмотретьНаКарте();
КонецПроцедуры

&НаКлиенте
Процедура КоординатыПриАктивизацииСтроки(Элемент)
	
	//+++АК mika 2017.11.24 ИП-00017302
	ПодключитьОбработчикОжидания("ОбновитьПараметрыДинамическогоСпискаобработчик", 0.3, Истина);
	//---АК
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Ид=Новый УникальныйИдентификатор;
	ИдКарты="DIV_"+Ид;
	
	КоординатыОфиса="55.804911,37.392895";

	РежимАдресКонтрагента="РежимАдресКонтрагента";
	РежимАдресПредложения="РежимАдресПредложения";
	РежимВыборКонтрагента="РежимВыборКонтрагента";
	РежимПредложенияНаКарте="РежимПредложенияНаКарте";
	НеизвестныйРежим="НеизвестныйРежим";
	
	Элементы.СмотретьНаКарте.Заголовок="Контрагенты не найдены";
	Элементы.СмотретьНаКарте.Доступность=Ложь;
	Элементы.ГруппаРазмещениеНаКарте.Видимость=Ложь;
	
	Параметры.Свойство("Режим",Режим);
	Если Параметры.Свойство("ОпределитьРасположение") Тогда
		ОпределитьРасположение = Параметры.ОпределитьРасположение
	Иначе
		ОпределитьРасположение = Ложь
	КонецЕсли;
	
	Если Режим=РежимАдресКонтрагента или Режим=РежимАдресПредложения тогда
		СтрокаКоординат=		Параметры.СтрокаКоординат;
		КоординатыОпределены=	Параметры.КоординатыОпределены и НЕ ПустаяСтрока(СтрокаКоординат);
		Наименование=			Параметры.Наименование;
		Адрес=					Параметры.Адрес;
		Если Режим=РежимАдресКонтрагента тогда
			Режим2=Параметры.Режим2;
		КонецЕсли;
	ИначеЕсли Режим=РежимПредложенияНаКарте тогда
		СтрокаКоординат=		КоординатыОфиса;
		КоординатыОпределены=	Истина;
		Наименование=			"Офис";
		Адрес=					"";
		//Если Режим=РежимАдресКонтрагента тогда
		//	Режим2=Параметры.Режим2;
		//КонецЕсли;
	КонецЕсли;
	
	Если Режим=РежимПредложенияНаКарте Тогда
		МассивПредложений=Параметры.Массив;
		Если МассивПредложений.Количество()>0 Тогда
			Для Каждого ТекСтрока Из МассивПредложений Цикл
				НоваяСтрока=Координаты.Добавить();
				ПредложениеСсылка=ТекСтрока;
				НоваяСтрока.Наименование=Строка(ПредложениеСсылка);
				НоваяСтрока.СсылкаНаОбъект=ПредложениеСсылка;
				НоваяСтрока.СтрокаКоординат=ПредложениеСсылка.СтрокаКоординат;
				НоваяСтрока.КоординатыОпределены=?(ЗначениеЗаполнено(ПредложениеСсылка.СтрокаКоординат),Истина,Ложь);
				//НоваяСтрока.КоординатыОпределены=Ложь;
				НоваяСтрока.Адрес=ПредложениеСсылка.ЮридическийАдрес;
				Если (НЕ НоваяСтрока.КоординатыОпределены) И (ПредложениеСсылка.ЮридическийАдрес="") Тогда 
				 НоваяСтрока.НетАдресаНетКоординат=Истина;
				Иначе
				 НоваяСтрока.НетАдресаНетКоординат=Ложь;
				КонецЕсли;

			КонецЦикла;	
		КонецЕсли;
		 	КонецЕсли;	
			
	//+++АК mika 2017.11.24 ИП-00017302
	Если Параметры.Свойство("ОтборНаправление", ОтборНаправление) Тогда
		УстановитьПараметрыПоступившиеПредложения();
	КонецЕсли;
	//---АК
	
КонецПроцедуры

//+++АК SUVV 2018.03.05 ИП-00017818
//&НаКлиентеНаСервереБезКонтекста
&НаСервере
//---АК SUVV
Функция ПолучитьГеокодерЯндекс() экспорт
	
	Попытка
		
		Сервис = "geocode-maps.yandex.ru";
		Порт = 443;
		
	    WinHttp = Новый COMОбъект("WinHttp.WinHttpRequest.5.1");
	    WinHttp.Option(2,"utf-8");
	    WinHttp.Open("POST","https://geocode-maps.yandex.ru:443/1.x/",0);
	    WinHttp.SetRequestHeader("Accept-Language", "ru");
	    WinHttp.SetRequestHeader("Accept-Charset","utf-8");
	    WinHttp.setRequestHeader("Content-Language", "ru");
	    WinHttp.setRequestHeader("Content-Charset", "utf-8");
	    WinHttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded; charset=utf-8");
		
		Возврат WinHttp;
		
	Исключение	
		
		Возврат Неопределено;
		
	КонецПопытки;
	
КонецФункции
//+++АК SUVV 2018.03.05 ИП-00017818
//&НаКлиентеНаСервереБезКонтекста
&НаСервере
//---АК SUVV
Функция Координаты41(СтрокаКоординат,Реверс=Ложь) экспорт
	Поз=Найти(СтрокаКоординат,",");
	Если Поз=0 тогда
		Поз=Найти(СтрокаКоординат," ");
	КонецЕсли;        		
	
	Если Поз=0 тогда
		Возврат "";
	КонецЕсли;
	
	К1=лев(сокрлп(Лев(СтрокаКоординат,Поз-1)),20);
	К2=лев(сокрлп(Сред(СтрокаКоординат,Поз+1)),20);
	
	Если Реверс тогда
		Возврат К2+","+К1;
	иначе
		Возврат К1+","+К2;
	КонецЕсли;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВернутьТекстПоТэгу(ИсхСтрока,Тэг,Очистить=Ложь)
	КС = СтрДлина(Тэг);
	П1=найти(ИсхСтрока,"<"+Тэг+">");
	П2=найти(ИсхСтрока,"</"+Тэг+">");
	Если П1*П2=0 Тогда
		Результат = ""
	Иначе
		Результат = Сред(ИсхСтрока,П1+2+КС,П2-П1-2-КС)
	КонецЕсли;
	Если Очистить и Результат <>"" Тогда
		ИсхСтрока = Лев(ИсхСтрока,П1-1)+Сред(ИсхСтрока,П2+3+СтрДлина(Тэг))
	КонецЕсли;
	Возврат Результат
КонецФункции

//+++АК SUVV 2018.03.05 ИП-00017818
//&НаКлиентеНаСервереБезКонтекста
&НаСервере
//---АК SUVV
Функция ПолучитьСтрокуКоординат(WinHttp,Адрес,СтрокаКоординат,ЭлементыАдреса=Неопределено) экспорт
    WinHttp.Send("geocode="+Адрес);
    ОтветСервера = WinHttp.ResponseText();
	п1=найти(ОтветСервера,"<pos>");
	п2=найти(ОтветСервера,"</pos>");
	Если п1>0 и п2>п1 тогда
		СтрокаКоординат=Координаты41(сред(ОтветСервера,п1+5,п2-п1-5),Истина);
		//+++АК SUVV 2018.03.05 ИП-00017818
		//Если Не ЭлементыАдреса = Неопределено Тогда
		//	ЭлементыАдреса.Очистить();
		//	ЭлементыАдреса.Добавить(ВернутьТекстПоТэгу(ОтветСервера,"LocalityName"));
		//	ЭлементыАдреса.Добавить(ВернутьТекстПоТэгу(ОтветСервера,"ThoroughfareName"));
		//	ЭлементыАдреса.Добавить(ВернутьТекстПоТэгу(ОтветСервера,"PremiseNumber"));
		//КонецЕсли;
		ответГород = ВернутьТекстПоТэгу(ОтветСервера,"LocalityName");
		ответУлица = ВернутьТекстПоТэгу(ОтветСервера,"ThoroughfareName");
		ответДом   = ВернутьТекстПоТэгу(ОтветСервера,"PremiseNumber");
		//---АК SUVV
	    Возврат НЕ ПустаяСтрока(СтрокаКоординат);
	иначе
		СтрокаКоординат="";
		Возврат Ложь;
	КонецЕсли;
КонецФункции
//+++АК SUVV 2018.03.05 ИП-00017818
//&НаКлиентеНаСервереБезКонтекста
&НаСервере
//---АК SUVV
Функция ПолучитьСведенияПоКоординатам(WinHTTP,Координаты,Тип)Экспорт
    WinHttp.Send("geocode="+Координаты41(Координаты,Истина)+"&kind="+Тип);
    ОтветСервера = WinHttp.ResponseText();
	Возврат ответСервера
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьЗначениеКомпонента(ответСервера,Тип)Экспорт
	Попытка
		Компонент=ВернутьТекстПоТэгу(ОтветСервера,"Component",Истина);
		Пока Компонент<>"" Цикл
			Если ВернутьТекстПоТэгу(Компонент,"kind")=Тип Тогда
				Возврат ВернутьТекстПоТэгу(Компонент,"name")
			КонецЕсли;
			Компонент=ВернутьТекстПоТэгу(ОтветСервера,"Component",Истина);
		КонецЦикла;
		Возврат ""
	Исключение
		Возврат ""
	КонецПопытки
КонецФункции

//+++АК mika 2017.11.24 ИП-00017302
&НаКлиенте
Процедура ОтобразитьПоступившиеПредложения(Команда)
	
	Элементы.КоординатыОтобразитьПоступившиеПредложения.Пометка = НЕ Элементы.КоординатыОтобразитьПоступившиеПредложения.Пометка;
	
	ОбновитьВидимостьПоступившихПредложений();
	
КонецПроцедуры

//+++АК mika 2017.11.24 ИП-00017302
&НаКлиенте
Процедура ОбновитьВидимостьПоступившихПредложений()
	
	ВидимостьПредложений = Элементы.КоординатыОтобразитьПоступившиеПредложения.Пометка;
	
	Элементы.ГруппаСписокПредложений.Видимость = ВидимостьПредложений;
	
	Если Не ВидимостьПредложений Тогда
		ТекущееПредложение = "";
	КонецЕсли;
	
КонецПроцедуры

//+++АК mika 2017.11.24 ИП-00017302
&НаКлиенте
Процедура УстановитьПараметрыПоступившиеПредложенияКлиент()
	
	Элементы.ГруппаСписокПредложений.Видимость = Элементы.КоординатыОтобразитьПоступившиеПредложения.Пометка;  
	
КонецПроцедуры

//+++АК mika 2017.11.24 ИП-00017302
&НаСервере
Процедура УстановитьПараметрыПоступившиеПредложения()
	
	СписокПредложений.Параметры.УстановитьЗначениеПараметра("Наименование", ТекущееПредложение);
	
	Если ОтборНаправление.Количество() > 0 Тогда
		
		МассивГрупп = Новый Массив();
		Для каждого ЗначениеСписка из ОтборНаправление Цикл
			МассивГрупп.Добавить(ЗначениеСписка.Значение);
		КонецЦикла;
		
		СписокПредложений.Параметры.УстановитьЗначениеПараметра("ПродуктоваяГруппа", МассивГрупп);
		
		ОтборНаправление = Новый СписокЗначений();
		
	КонецЕсли;
	
КонецПроцедуры

//+++АК mika 2017.11.24 ИП-00017302
&НаКлиенте
Процедура ОбновитьПараметрыДинамическогоСпискаобработчик()	
	
	ОбновитьСписокПоступившихПредложенийПриАктивацииСтроки();
	
КонецПроцедуры

//+++АК mika 2017.11.24 ИП-00017302
&НаКлиенте
Процедура ОбновитьСписокПоступившихПредложений(ИмяОперации, ИндексСтроки)

	Если Элементы.КоординатыОтобразитьПоступившиеПредложения.Пометка 
		И ИмяОперации = "ТекСтрока" Тогда
		
		КоличествоСтрок = Координаты.Количество();
		
		Если  КоличествоСтрок > 0 И ИндексСтроки >= 0 И ИндексСтроки <= КоличествоСтрок -1 Тогда
			
			ТекущееПредложение = Координаты[ИндексСтроки].СсылкаНаОбъект;
			
			Элементы.Координаты.ТекущаяСтрока = Координаты[ИндексСтроки].ПолучитьИдентификатор();
			
		Иначе
			
			ТекущееПредложение = "";
			
		КонецЕсли;
		
	Иначе
		ТекущееПредложение = ""; 
	КонецЕсли;

	УстановитьПараметрыПоступившиеПредложения();

КонецПроцедуры // ОбновитьСписокПоступившихПредложений(ИмяОперации, ДанныеОперации)()

//+++АК mika 2017.11.24 ИП-00017302
&НаКлиенте
Процедура ОбновитьСписокПоступившихПредложенийПриАктивацииСтроки()	
	
	Если Элементы.КоординатыОтобразитьПоступившиеПредложения.Пометка И Элементы.Координаты.ТекущиеДанные <> Неопределено 
		И ТекущееПредложение <> Строка(Элементы.Координаты.ТекущиеДанные.СсылкаНаОбъект) Тогда
		
		 ТекущееПредложение = Строка(Элементы.Координаты.ТекущиеДанные.СсылкаНаОбъект);
		 
		 УстановитьПараметрыПоступившиеПредложения();
		 
	КонецЕсли; 
	
КонецПроцедуры
//+++АК SUVV 2018.03.05 ИП-00017818
&НаСервере
Процедура ПолучитьКоординатыИСведенияПоКоординатам()
	
	WinHttp = ПолучитьГеокодерЯндекс();
	Если WinHttp = неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ КоординатыОпределены и НЕ ПустаяСтрока(Адрес) Тогда
		КоординатыОпределены = ПолучитьСтрокуКоординат(WinHttp, Адрес, СтрокаКоординат);
	КонецЕсли;
	
	Если НЕ КоординатыОпределены Тогда 
		СтрокаКоординат = КоординатыОфиса;
	КонецЕсли;
	
	Если ОпределитьРасположение и КоординатыОпределены Тогда
		ОтветСервера = ПолучитьСведенияПоКоординатам(WinHttp, СтрокаКоординат,"district");
		ОтветОкруг = ПолучитьЗначениеКомпонента(ответСервера,"district");
		ОтветРайон = ПолучитьЗначениеКомпонента(ответСервера,"district");
		ОтветСервера = ПолучитьСведенияПоКоординатам(WinHttp, СтрокаКоординат,"metro");
		ОтветСтанцияМетро = ПолучитьЗначениеКомпонента(ответСервера,"metro");
	КонецЕсли;
	
КонецПроцедуры //---АК SUVV


