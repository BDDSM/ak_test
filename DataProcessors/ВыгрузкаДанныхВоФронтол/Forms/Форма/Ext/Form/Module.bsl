
Процедура ВыгрузитьСервер()

	ТабКВыгрузке = Новый ТаблицаЗначений;
	ТабКВыгрузке.Колонки.Добавить("РабочееМесто");
	ТабКВыгрузке.Колонки.Добавить("СПользователями");
	
	Для Каждого СтрокаТаб Из Объект.РабочиеМеста Цикл
		Если НЕ СтрокаТаб.Выгружать Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(СтрокаТаб.РабочееМесто.КаталогВыгрузкиВоФронтол) Тогда
			Сообщить("У рабочего места " + СтрокаТаб.РабочееМесто + " не заполнен каталог выгрузки во фронтол");
			Продолжить;
		КонецЕсли;
		СтрокаДоб = ТабКВыгрузке.Добавить();
		СтрокаДоб.РабочееМесто 		= СтрокаТаб.РабочееМесто;
		СтрокаДоб.СПользователями 	= СтрокаТаб.СПользователями;
	КонецЦикла;
	
	Обработки.ВыгрузкаДанныхВоФронтол.ВыгрузитьДанныеВоФронтол(ТабКВыгрузке);	
	
КонецПроцедуры

Процедура ВыгрузитьСервер_СтараяСхема()

	ТабКВыгрузке = Новый ТаблицаЗначений;
	ТабКВыгрузке.Колонки.Добавить("РабочееМесто");
	ТабКВыгрузке.Колонки.Добавить("СПользователями");
	
	Для Каждого СтрокаТаб Из Объект.РабочиеМеста Цикл
		Если НЕ СтрокаТаб.Выгружать Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(СтрокаТаб.РабочееМесто.КаталогВыгрузкиВоФронтол) Тогда
			Сообщить("У рабочего места " + СтрокаТаб.РабочееМесто + " не заполнен каталог выгрузки во фронтол");
			Продолжить;
		КонецЕсли;
		СтрокаДоб = ТабКВыгрузке.Добавить();
		СтрокаДоб.РабочееМесто 		= СтрокаТаб.РабочееМесто;
		СтрокаДоб.СПользователями 	= СтрокаТаб.СПользователями;
	КонецЦикла;
	
	Обработки.ВыгрузкаДанныхВоФронтол.ВыгрузитьДанныеВоФронтол_(ТабКВыгрузке);	
	
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
	
	ВыгрузитьСервер();	
	
КонецПроцедуры 

&НаКлиенте
Процедура УстановитьФлажкиДляСтроки(Команда)
	
	Для Каждого СтрокаТаб Из Объект.РабочиеМеста Цикл
		СтрокаТаб.Выгружать = Истина;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиДляСтроки(Команда)
	
	Для Каждого СтрокаТаб Из Объект.РабочиеМеста Цикл
		СтрокаТаб.Выгружать = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПоПользователям(Команда)
	
	Для Каждого СтрокаТаб Из Объект.РабочиеМеста Цикл
		СтрокаТаб.СПользователями = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПоПользователям(Команда)
	
	Для Каждого СтрокаТаб Из Объект.РабочиеМеста Цикл
		СтрокаТаб.СПользователями = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.РабочиеМеста.Количество() = 0 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РабочиеМеста.Ссылка,
		|	ВЫБОР
		|		КОГДА РабочиеМеста.СтруктурнаяЕдиница.ДатаЗапускаНовойСистемыУчета <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК Выгружать
		|ИЗ
		|	Справочник.РабочиеМеста КАК РабочиеМеста
		|ГДЕ
		|	(РабочиеМеста.СтруктурнаяЕдиница.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
		|			ИЛИ РабочиеМеста.СтруктурнаяЕдиница.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Микромаркет) //+++АК mika 2018.05.30 ИП-00018792
		//+++АК BELN 2018.12.06 ИП-00020532.01 
		|			ИЛИ РабочиеМеста.СтруктурнаяЕдиница.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.ПространствоВкуса)) 
		//---АК BELN
		|			И РабочиеМеста.СтруктурнаяЕдиница.ДатаЗакрытия = ДАТАВРЕМЯ(1, 1, 1)
		|
		|УПОРЯДОЧИТЬ ПО
		|	РабочиеМеста.СтруктурнаяЕдиница.НомерТочки,
		|	РабочиеМеста.НомерРабочегоМеста";
					   
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СтрокаДоб = Объект.РабочиеМеста.Добавить();
			СтрокаДоб.Выгружать 	= Выборка.Выгружать;
			СтрокаДоб.РабочееМесто 	= Выборка.Ссылка;
		КонецЦикла;	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПоСтаройСхеме(Команда)
	
	ВыгрузитьСервер_СтараяСхема();
	
КонецПроцедуры
