//+++АК sole 2018.05.23 ИП-00018320.01
&НаСервере
Процедура ВыполнитьОбработку(МассивФайловВХранилище) Экспорт
	
	ТекстОшибки = Неопределено;
	
	Элемент = МассивФайловВХранилище[0];
    ФайлИзХранилища = ПолучитьИзВременногоХранилища(Элемент.Хранение);
	ВременныйФайлXLS = ПолучитьИмяВременногоФайла("xls");
    ФайлИзХранилища.Записать(ВременныйФайлXLS);
	
	Попытка
		
		ТабДок = Новый ТабличныйДокумент;
		ТабДок.Прочитать(ВременныйФайлXLS, СпособЧтенияЗначенийТабличногоДокумента.Значение);	
		
		НомерПервойСтроки = АК_НайтиПервуюСтрокуТаблицы(ТабДок);
		
		Если НомерПервойСтроки <> 0 Тогда
			АК_ВыполнитьРазборИЗагрузкуДанных(ТабДок, НомерПервойСтроки)
		Иначе
			Сообщить("Excel-файл не соответствует формату! Пожалуйста, выберете Excel-файл с данными для загрузки, соответствующий установленному формату!");
		КонецЕсли;	
		
	Исключение
		ТекстОшибки = ОписаниеОшибки();		
	КонецПопытки;
	
	УдалитьФайлы(ВременныйФайлXLS);
	
	Если ТекстОшибки <> Неопределено Тогда
		ВызватьИсключение(ТекстОшибки);	
	КонецЕсли;
	
КонецПроцедуры


//+++АК sole 2018.05.24 ИП-00018320.01
Функция АК_НайтиПервуюСтрокуТаблицы(ТабДок)	
	
	КолСтр = ТабДок.ВысотаТаблицы;
	
	НомерПервойСтроки = 0;
	
	Для Сч = 1 По КолСтр - 1 Цикл
		
		Значение = ТабДок.ПолучитьОбласть("R" + Формат(Сч, "ЧГ=0") + "C1").ТекущаяОбласть.Текст;
		Если Значение = "Дата" Тогда
			НомерПервойСтроки = Сч + 2;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат НомерПервойСтроки;
КонецФункции

//+++АК sole 2018.05.24 ИП-00018320.01
Процедура АК_ВыполнитьРазборИЗагрузкуДанных(ТабДок, НомерПервойСтроки)
	
	тзПервичнаяТЗ = АК_ПолучитьТаблицуЗначенийИзДокумента(ТабДок, НомерПервойСтроки);
	тзДляЗагрузки = АК_ПолучитьТаблицуЗначенийДляЗагрузки(тзПервичнаяТЗ);	
	
	ЕстьНезаполненныеСсылочныеПоля = АК_ПроверитьЗаполнениеСсылочныхПолей(тзДляЗагрузки);	
	
	Если ЕстьНезаполненныеСсылочныеПоля Тогда
		Возврат;
	КонецЕсли;
	
	АК_ЗагрузитьДанныеВРегистр(тзДляЗагрузки);
	
КонецПроцедуры

//+++АК sole 2018.05.24 ИП-00018320.01
Функция АК_ПолучитьТаблицуЗначенийИзДокумента(ТабДок, НомерПервойСтроки)
	
	Перем Сч;
	
	тзПервичнаяТЗ = АК_СформироватьСтруктуруПервичнойТЗ();	
	
	КолСтр = ТабДок.ВысотаТаблицы;
	Попытка
		Для Сч = НомерПервойСтроки По КолСтр Цикл
		
			АдресСтроки = "R" + Формат(Сч, "ЧГ=0");
			
			Значение = ТабДок.ПолучитьОбласть(АдресСтроки + "C1").ТекущаяОбласть.Текст;
			
			Если Значение = "" Тогда
				Прервать;
			КонецЕсли;
			
			НСтр = тзПервичнаяТЗ.Добавить();
		
			НСтр["НомерСтроки"] = Сч;
			НСтр["Дата"] = вДату(Значение);
			НСтр["Перевозчик"] = ТабДок.ПолучитьОбласть(АдресСтроки + "C2").ТекущаяОбласть.Текст;
			НСтр["Поставщик"] = ТабДок.ПолучитьОбласть(АдресСтроки + "C3").ТекущаяОбласть.Текст;
			НСтр["Вес"] = Число(ТабДок.ПолучитьОбласть(АдресСтроки + "C4").ТекущаяОбласть.Текст);
			НСтр["Сумма"] = Число(ТабДок.ПолучитьОбласть(АдресСтроки + "C5").ТекущаяОбласть.Текст);
		
		КонецЦикла;
	Исключение
		ТекстОшибки = "При обработке строки Excel-файла № " + Формат(Сч, "ЧГ=0") + " возникло исключение: " + Символы.ПС +
		ОписаниеОшибки();
		
		ВызватьИсключение(ТекстОшибки);
	КонецПопытки;
	
	Возврат тзПервичнаяТЗ; 
КонецФункции

//+++АК sole 2018.05.24 ИП-00018320.01
Функция АК_СформироватьСтруктуруПервичнойТЗ()
	
	тзПервичнаяТЗ = Новый ТаблицаЗначений();
	тзПервичнаяТЗ.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"));
	тзПервичнаяТЗ.Колонки.Добавить("Дата", Новый ОписаниеТипов("Дата"));
	тзПервичнаяТЗ.Колонки.Добавить("Перевозчик", Новый ОписаниеТипов("Строка",,,,,, Новый КвалификаторыСтроки(512)));
	тзПервичнаяТЗ.Колонки.Добавить("Поставщик", Новый ОписаниеТипов("Строка",,,,,, Новый КвалификаторыСтроки(512)));
	тзПервичнаяТЗ.Колонки.Добавить("Вес", Новый ОписаниеТипов("Число"));
	тзПервичнаяТЗ.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	
	Возврат тзПервичнаяТЗ;
КонецФункции

//+++АК sole 2018.05.24 ИП-00018320.01
Функция АК_ПолучитьТаблицуЗначенийДляЗагрузки(тзПервичнаяТЗ)
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.Текст =
"ВЫБРАТЬ
|	т.НомерСтроки,
|   т.Дата,
|   т.Перевозчик,
|   т.Поставщик,
|   т.Вес,
|	т.Сумма
|
|		ПОМЕСТИТЬ втТаблица
|
|ИЗ &Таблица КАК т
|;
|///////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	втТаблица.НомерСтроки,
|   втТаблица.Дата,
|   ЕСТЬNULL(Перевозчики.Ссылка, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Перевозчик,
|   ЕСТЬNULL(Поставщики.Ссылка, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Поставщик,
|   втТаблица.Вес,
|	втТаблица.Сумма
|
|ИЗ втТаблица
|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Перевозчики ПО
|			НЕ Перевозчики.ЭтоГруппа
|		И	Перевозчики.Наименование = втТаблица.Перевозчик
|		
|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Поставщики ПО
|			НЕ Поставщики.ЭтоГруппа
|		И	Поставщики.Наименование = втТаблица.Поставщик
|
|";
	
	Запрос.Параметры.Вставить("Таблица", тзПервичнаяТЗ);
	тзДляЗагрузки = Запрос.Выполнить().Выгрузить();
	
	Запрос.МенеджерВременныхТаблиц.Закрыть();
	
	Возврат тзДляЗагрузки;
КонецФункции

//+++АК sole 2018.05.24 ИП-00018320.01
Функция АК_ПроверитьЗаполнениеСсылочныхПолей(тзДляЗагрузки)
	
	ЕстьНезаполненныеСсылочныеПоля = Ложь;
	
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("Перевозчик", Справочники.Контрагенты.ПустаяСсылка());
	
	мСтроки = тзДляЗагрузки.НайтиСтроки(СтруктураОтбора);
	
	тз = Новый ТаблицаЗначений();
	тз.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"));
	тз.Колонки.Добавить("Сообщение", Новый ОписаниеТипов("Строка",,,,,, Новый КвалификаторыСтроки(512)));
	
	
	Для Каждого Стр Из мСтроки Цикл
		НСтр = тз.Добавить();
		НСтр["НомерСтроки"] = Стр["НомерСтроки"];
		НСтр["Сообщение"] = "В строке № " + Формат(Стр["НомерСтроки"], "ЧГ=0") + " не удалось найти перевозчика справочнике контрагентов! Вероятно имя контрагента написано неправильно, или содержит лишние пробелы, или контрагент с таким именем не заведён в справочнике контрагентов!";
	КонецЦикла;
	
	СтруктураОтбора.Очистить();
	СтруктураОтбора.Вставить("Поставщик", Справочники.Контрагенты.ПустаяСсылка());
	
	мСтроки = тзДляЗагрузки.НайтиСтроки(СтруктураОтбора);
	
	Для Каждого Стр Из мСтроки Цикл
		НСтр = тз.Добавить();
		НСтр["НомерСтроки"] = Стр["НомерСтроки"];
		НСтр["Сообщение"] = "В строке № " + Формат(Стр["НомерСтроки"], "ЧГ=0") + " не удалось найти поставщика справочнике контрагентов! Вероятно имя контрагента написано неправильно, или содержит лишние пробелы, или контрагент с таким именем не заведён в справочнике контрагентов!";
	КонецЦикла;
	
	тз.Сортировать("НомерСтроки");
	
	Для Каждого Стр Из тз Цикл
		ЕстьНезаполненныеСсылочныеПоля = Истина;
		Сообщить(Стр["Сообщение"]);
	КонецЦикла;
	
	Возврат	ЕстьНезаполненныеСсылочныеПоля;
	
КонецФункции

//+++АК sole 2018.05.24 ИП-00018320.01
Процедура АК_ЗагрузитьДанныеВРегистр(тзДляЗагрузки)
	
	Если тзДляЗагрузки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Сч = 0;
	
	НачатьТранзакцию();
	Попытка
		
		Для Каждого Стр Из тзДляЗагрузки Цикл
			НаборЗаписей = РегистрыСведений.ИтогиПоАктамСверкиСПеревозчиком.СоздатьНаборЗаписей(); 
			НаборЗаписей.Отбор.Дата.Установить(Стр["Дата"]);
			НаборЗаписей.Отбор.Перевозчик.Установить(Стр["Перевозчик"]);
			НаборЗаписей.Отбор.Поставщик.Установить(Стр["Поставщик"]);
			
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.Дата = Стр["Дата"];
			НоваяЗапись.Перевозчик = Стр["Перевозчик"];
			НоваяЗапись.Поставщик = Стр["Поставщик"];
			НоваяЗапись.Вес = Стр["Вес"];
			НоваяЗапись.Сумма = Стр["Сумма"];
			
			НаборЗаписей.Записать();
			Сч = Сч + 1;
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();	
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение(ОписаниеОшибки());
	КонецПопытки;
	
	Сообщить("Загрузка выполнена успешно! " + ПолучитьСловоСтрокПоКоличеству(Сч));
	
КонецПроцедуры

Функция ПолучитьСловоСтрокПоКоличеству(Количество)
	СтрКоличество = Формат(Количество, "ЧГ = 0");
	
	пЦифра = Количество % 10;
	
	Если пЦифра >= 5 ИЛИ пЦифра = 0 Тогда
		Возврат "Записано " + СтрКоличество +  " строк";	
	КонецЕсли;
	
	Если пЦифра >= 2 Тогда
		Возврат "Записано " + СтрКоличество +  " строки";
	КонецЕсли;
	
	Если пЦифра = 1 Тогда
		Возврат "Записана " + СтрКоличество +  " строка";	
	КонецЕсли;
	
КонецФункции

// Преоразование строки вида "ДД.ММ.ГГГГ" в тип Дата
Функция вДату(Стр)

	ДД = Лев(Стр,2);
	ГГ = Прав(Стр,4);
	ММ = Сред(Стр,4,2);
	нДата = ГГ+ММ+ДД;
	нДата = Дата(нДата);
	Возврат нДата;
	
КонецФункции // вДату()

//
