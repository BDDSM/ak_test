Функция ПроверитьЗначенияФормы()
	
	// 1. инициализируем таблицу вывода ошибок
	ТаблицаОшибок = ИнициализироватьТаблицуОшибок();
	
	// 2. передать структуру для проверки
	ПроверитьПолеФормы(ТаблицаОшибок, Партнер,					, Истина, "Партнер");
	ПроверитьПолеФормы(ТаблицаОшибок, АдресДоставки,			, Истина, "АдресДоставки");
	ПроверитьПолеФормы(ТаблицаОшибок, GLN, 			"GLN"	, Истина, "GLN");
	
	ПроверитьСвязанныеСправочникиТочкиДоставкиНаПовтор(Партнер,СсылкаТочкиДоставки,ТаблицаОшибок, ЮрФизЛицо, ТочкаДоставкиСвойСправочник);
	
	Если ТаблицаОшибок.Количество() > 0 Тогда
		
		Если ПустаяСтрока(Наименование) Тогда
			
			ТекстЗаголовка = "При заполнении точки доставки найдены ошибки.";
			
		Иначе
			
			ТекстЗаголовка = "При заполнении точки доставки """+СокрЛП(Наименование)+""" найдены ошибки.";
			
		КонецЕсли;
			
		ОткрытьФормуВыводаОшибок(ТекстЗаголовка,ТаблицаОшибок,ЭтаФорма);
		
		Возврат Ложь;
		
	Иначе
		
		Возврат Истина;
		
	КонецЕсли;
	
	// 3. обработать результат
	
КонецФункции

Процедура КнопкаВыполнитьНажатие(Кнопка)

	Если НЕ ПроверитьЗначенияФормы() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("Партнер",			Партнер);
	СтруктураПолей.Вставить("Наименование",		Наименование);
	СтруктураПолей.Вставить("GLN",				GLN);
	СтруктураПолей.Вставить("АдресДоставки",	АдресДоставки);
	СтруктураПолей.Вставить("ЮрФизЛицо",		ЮрФизЛицо);
    СтруктураПолей.Вставить("ТочкаДоставкиСвойСправочник",			ТочкаДоставкиСвойСправочник);
    СтруктураПолей.Вставить("ЗагружатьСообщенияПоТочкеДоставки",	ЗагружатьСообщенияПоТочкеДоставки);
	
	СохранитьЭлементСправочника("ТочкиДоставкиСторонние",СсылкаТочкиДоставки,СтруктураПолей);
	
	Оповестить("КонтурEDI_ОбновитьСписокТочекДоставки");
		
	ЭтаФорма.Закрыть(Истина);
	
КонецПроцедуры

Процедура УстановитьТипПоля1С(ИмяНаФорме,Тип1С)
	
	ПолеФормы	= ЭлементыФормы[ИмяНаФорме];
	ТипПоля		= ПолучитьТипЗначенияОбъекта(Тип1С);
			
	Если ТипПоля = Неопределено Тогда
		
		Сообщить("Не задан тип объекта 1С для поля с типом "+Тип1С);
		
	Иначе	
		
		ЭлементыФормы[ИмяНаФорме].ОграничениеТипа = Новый ОписаниеТипов(ТипПоля);
		
		Если НЕ ЗначениеЗаполнено(ЭтаФорма[ИмяНаФорме]) Тогда
			
			ЭтаФорма[ИмяНаФорме] = ПолучитьПустуюСсылкуОбъекта(Тип1С);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УправлениеВидимостьюСправочникаТочекДоставок()
	
	СвойСправочникТочекДоставки = ПолучитьКонстантуEDI("СвойСправочникТочекДоставки");
	
	Если НЕ ЗначениеЗаполнено(СвойСправочникТочекДоставки) Тогда
		
		ЭлементыФормы.ТочкаДоставкиСвойСправочник.Доступность = Ложь;
		
		ЭлементыФормы.НадписьОткрытьНастройки.Видимость			= Истина;
		ЭлементыФормы.НадписьПодсказкаТочекДоставок.Видимость	= Истина;
		
	Иначе
		
		ЭлементыФормы.ТочкаДоставкиСвойСправочник.Доступность = Истина;
		
		ЭлементыФормы.ТочкаДоставкиСвойСправочник.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка."+СокрЛП(СвойСправочникТочекДоставки));
		
		Если НЕ ЗначениеЗаполнено(ТочкаДоставкиСвойСправочник) Тогда
			
			ЭтаФорма.ТочкаДоставкиСвойСправочник = Справочники[СвойСправочникТочекДоставки].ПустаяСсылка();
			
		КонецЕсли;
		
		ЭлементыФормы.НадписьОткрытьНастройки.Видимость			= Ложь;
		ЭлементыФормы.НадписьПодсказкаТочекДоставок.Видимость	= Ложь;
		
	КонецЕсли;
	
	
КонецПроцедуры

Процедура УстановитьЗаголовокПодсказкиЮрФизлица()
	ГрузополучательИзЮрФизЛицаТД						= (ПолучитьКонстантуEDI("ГрузополучательИзЮрФизЛицаТД") = Истина);
	ЗаполняемоеПолеВЗаказе = ?(ГрузополучательИзЮрФизЛицаТД, "Грузополучатель","Контрагент");
	ЭлементыФормы.НадписьПодсказкаЮрФизлицо.Заголовок = "Согласно текущим настройкам, будет использовано для заполнения поля """+ЗаполняемоеПолеВЗаказе+""" в документе заказа.";
КонецПроцедуры

Процедура ПриОткрытии()
	
	ПриОткрытииФормы(ЭтаФорма);
	
	Если ЗначениеЗаполнено(СсылкаТочкиДоставки) Тогда
		
		СтруктураЭлемента = ПолучитьЭлементСправочника("ТочкиДоставкиСторонние", СсылкаТочкиДоставки);
		
		Если НЕ СтруктураЭлемента = Неопределено Тогда
		
			Наименование	= СтруктураЭлемента.Наименование;
			Партнер			= СтруктураЭлемента.Партнер;
			
			ПредставлениеПартнера = ПолучитьПредставлениеЭлементаСправочника(Партнер);
			
			GLN				= СтруктураЭлемента.GLN;
			АдресДоставки	= СтруктураЭлемента.АдресДоставки;
			ЮрФизЛицо		= СтруктураЭлемента.ЮрФизЛицо;
			Подразделение	= СтруктураЭлемента.Подразделение;
			ТочкаДоставкиСвойСправочник = СтруктураЭлемента.ТочкаДоставкиСвойСправочник;
			
			Если СтруктураЭлемента.Свойство("ЗагружатьСообщенияПоТочкеДоставки") Тогда
				ЗагружатьСообщенияПоТочкеДоставки = СтруктураЭлемента.ЗагружатьСообщенияПоТочкеДоставки;
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		ПредставлениеПартнера = ПолучитьПредставлениеЭлементаСправочника(Партнер);
		
	КонецЕсли;
	
	ЭлементыФормы.ЗагружатьСообщенияПоТочкеДоставки.Видимость = (ПараметрыПользователяEDI.ФильтрОбменаПоТочкамДоставки = Истина);
	
	УстановитьЗаголовокПодсказкиЮрФизлица();
	
	УправлениеВидимостьюСправочникаТочекДоставок();
	
	Если НЕ ВнешнееХранилище Тогда
		УстановитьТипПоля1С("Партнер",		"Партнер");
	КонецЕсли;	
	УстановитьТипПоля1С("ЮрФизЛицо",	"ЮрФизЛицоСтороннее");
		
	// Автотесты
	Если ЗначениеЗаполнено(ПараметрыАвтотестирования) Тогда

		ПодключитьОбработчикОжидания("ЗаписатьНастройкиАвтотестирования",0.1,Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьНастройкиАвтотестирования()
	
	КнопкаВыполнитьНажатие("");
	
КонецПроцедуры

Процедура ПартнерНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ВыбратьЭлементСправочника(Партнер,"Партнер",,СтандартнаяОбработка);
	
	ПредставлениеПартнера = ПолучитьПредставлениеЭлементаСправочника(Партнер);
	
КонецПроцедуры

Процедура НадписьОткрытьНастройкиНажатие(Элемент)
	
	ФормаНастройки = ПолучитьФорму("ФормаСервис_Настройка");
	Если Элемент.Имя = "НадписьОткрытьНастройки_ЮрФизЛицо" Тогда
		ФормаНастройки.ТекущаяВкладка = "СтраницаЗаказыПокупателей";
	ИначеЕсли Элемент.Имя = "НадписьОткрытьНастройки" Тогда
		ФормаНастройки.ТекущаяВкладка = "ПрочиеНастройки";
	КонецЕсли;
	ФормаНастройки.ОткрытьМодально();

	УправлениеВидимостьюСправочникаТочекДоставок();
	УстановитьЗаголовокПодсказкиЮрФизлица();
	
КонецПроцедуры

Процедура ТочкаДоставкиСвойСправочникНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ВыбранноеЗначение = ОбработкаСобытияПодключаемогоМодуля("ПередВыборомТочкиДоставкиСвойСправочник",,Новый Структура("ЮрФизЛицо,ТекущееЗначение,Партнер,GLN",ЮрФизЛицо,Элемент.Значение,Партнер,GLN));
	Если НЕ ВыбранноеЗначение=Неопределено Тогда
		Элемент.Значение = ВыбранноеЗначение;
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	СвойСправочникТочекДоставки = ПолучитьКонстантуEDI("СвойСправочникТочекДоставки");
	СтандартнаяОбработка = Ложь;
	
	Попытка
		
		Парам = Новый Структура("Отбор,ТекущаяСтрока", Новый Структура("Владелец", ЮрФизЛицо), Элемент.Значение);
		ФРМ = ПолучитьФорму("Справочник." + СвойСправочникТочекДоставки + ".ФормаВыбора", Парам, Элемент);
		
	Исключение
		
		//На 8.1 при открытии справочника, имеющего владельца, будет вызвано исключение.
		ФРМ = Справочники[СвойСправочникТочекДоставки].ПолучитьФормуВыбора(,Элемент);
		
		Попытка
			ФРМ.Отбор.Владелец.Установить(ЮрФизЛицо);
		Исключение
		КонецПопытки;
			
	КонецПопытки;
	
	ФРМ.ОткрытьМодально();
		
КонецПроцедуры

Процедура ЮрФизЛицоНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ТипПоля	= ПолучитьТипЗначенияОбъекта("ЮрФизЛицоСтороннее");
	
	Если Лев(ВРЕГ(ТипПоля),10)="СПРАВОЧНИК" Тогда
		
		СтандартнаяОбработка = Ложь;
		ИмяСправочника = ПолучитьТипЗначенияОбъекта("ЮрФизЛицоСтороннее",,Истина);
		
		Попытка
			Парам = Новый Структура("ТекущаяСтрока", Элемент.Значение);
			ФРМ = ПолучитьФорму("Справочник." + ИмяСправочника + ".ФормаВыбора", Парам, Элемент);
		Исключение
			ФРМ = Справочники[ИмяСправочника].ПолучитьФормуВыбора(,Элемент);
		КонецПопытки;
		
		ФРМ.ПоложениеОкна = ВариантПоложенияОкна.НеПерекрыватьВладельца;
		ФРМ.ОткрытьМодально();
		
	КонецЕсли;
	
КонецПроцедуры

//+++ AK suvv 03.07.2018 ИП-00018812
Процедура КнопкаЗарегистироватьНовуюСЕНажатие(Элемент)
	
	//создадим новую СЕ и откроем ее на просмотр, заполнив поля по умолчанию
	
	НоваяСЕ = Справочники.СтруктурныеЕдиницы.СоздатьЭлемент();
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ТипРозничнойТочки", Перечисления.ТипыРозничныхТочек.Перекресток);
	ПараметрыЗаполнения.Вставить("ТипСтруктурнойЕдиницы", Перечисления.ТипыСтруктурныхЕдиниц.СторонняяРозница);
	ПараметрыЗаполнения.Вставить("ДатаОткрытия", ТекущаяДата());
	ПараметрыЗаполнения.Вставить("Планограмма", Справочники.Планограммы.НайтиПоКоду("00002"));//Планограмма ЗЛ
	ПараметрыЗаполнения.Вставить("ОсновнойСклад", Справочники.СтруктурныеЕдиницы.НайтиПоКоду("P00000231"));//Кавказский_1
	ПараметрыЗаполнения.Вставить("ГруппаДоступаСтруктурнойЕдиницы", Справочники.ГруппыДоступаСтруктурныхЕдиниц.НайтиПоКоду("000000001"));//Марьино
	ПараметрыЗаполнения.Вставить("Организация", Справочники.Организации.НайтиПоКоду("000000009"));//Тилси
	ПараметрыЗаполнения.Вставить("СтатусТорговойТочки", Перечисления.СтатусыТорговыхТочек.СкороОткрытие);
	//+++ AK suvv 16.07.2018 ИП-00018812.01
	ПараметрыЗаполнения.Вставить("ФорматМагазинаВВ", Перечисления.ФорматМагазинаВВ.Обычный);
	//--- AK suvv
	
	//заполним информацию по адресу
	Регион = "";
	Город  = "";
	УлицаПолноеНаименование = "";
	Улица = "";
	ТипУлицы = "";
	УлицаСокрНаименование = "";
	Дом    = "";
	Координаты = "";
	
	WinHttp = ПолучитьГеокодерЯндекс();
	
	Если WinHttp <> неопределено Тогда
		
		WinHttp.Send("geocode=" + АдресДоставки);
		
		ОтветСервера = WinHttp.ResponseText();
		
		ЧтениеXML = Новый ЧтениеXML;
		ЧтениеXML.УстановитьСтроку(ОтветСервера);
		
		Пока ЧтениеXML.Прочитать() Цикл
			
			Если ЧтениеXML.ЛокальноеИмя = "ThoroughfareName"  и ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента  Тогда
				ЧтениеXML.Прочитать();
				УлицаПолноеНаименование = ЧтениеXML.Значение;
			ИначеЕсли ЧтениеXML.ЛокальноеИмя = "LocalityName" и ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				ЧтениеXML.Прочитать();
				Город = ЧтениеXML.Значение;
			ИначеЕсли ЧтениеXML.ЛокальноеИмя = "PremiseNumber" и ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				ЧтениеXML.Прочитать();
				Дом = ЧтениеXML.Значение;
			ИначеЕсли ЧтениеXML.ЛокальноеИмя = "pos" и ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
				ЧтениеXML.Прочитать();
				Координаты = ЧтениеXML.Значение;
			КонецЕсли;
			
			Если ЧтениеXML.ЛокальноеИмя = "featureMember" и ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда 
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		ГородСсылка = Справочники.Города.НайтиПоНаименованию(Город);
		ПараметрыЗаполнения.Вставить("Город", ГородСсылка);
		
		РегионСсылка = Справочники.Регионы.НайтиПоНаименованию(Город);
		Если не ЗначениеЗаполнено(РегионСсылка) Тогда
			РегионСсылка = Справочники.Регионы.НайтиПоКоду("77");
		КонецЕсли;
		ПараметрыЗаполнения.Вставить("Регион", РегионСсылка);
		
		РазложитьАдрес(УлицаПолноеНаименование, Улица, ТипУлицы);
		ПараметрыЗаполнения.Вставить("Улица", Улица);
		ПараметрыЗаполнения.Вставить("УлицаСокрНаименование", ПолучитьУлицаСокрНаименование(Улица, ГородСсылка, РегионСсылка));
		
		ПараметрыЗаполнения.Вставить("Дом", Дом);
		
		Адрес = ТипУлицы + " " + Улица + ", д. " + Дом;
		ПараметрыЗаполнения.Вставить("Адрес", Адрес);
		
		Если Координаты <> "" Тогда
			//+++ AK suvv 2018.11.21 ИП-00020482
			ПараметрыЗаполнения.Вставить("КоординатыДолгота", Число(Лев(Координаты , 9)));
			ПараметрыЗаполнения.Вставить("КоординатыШирота", Число(Сред(Координаты, 10)));
			//--- AK suvv
			
			СтрокаКоординат = СтрЗаменить(Координаты, " ", ",");
			
			ОтветСервера = ПолучитьСведенияПоКоординатам(WinHttp, СтрокаКоординат,"district");
			АдминистративныйОкруг = ПолучитьЗначениеКомпонента(ответСервера,"district");
			Район = ПолучитьЗначениеКомпонента(ответСервера,"district");
			ОтветСервера = ПолучитьСведенияПоКоординатам(WinHttp, СтрокаКоординат,"metro");
			СтанцияМетро = ПолучитьЗначениеКомпонента(ответСервера,"metro");
			
			Если Город = "Москва" Тогда
				
				ПараметрыЗаполнения.Вставить("Район", Справочники.Районы.НайтиПоНаименованию(СтрЗаменить(Район, "район ", "")));
				ПараметрыЗаполнения.Вставить("АдминистративныйОкруг", Справочники.АдминистративныеОкруга.НайтиПоНаименованию(СтрЗаменить(АдминистративныйОкруг, " административный округ", "")));
				
				Метро = Справочники.СтанцииМетро.НайтиПоНаименованию(СтрЗаменить(СтанцияМетро, "метро ", ""));
				Если ЗначениеЗаполнено(Метро) Тогда
					СтанцииМетро = НоваяСЕ.СтанцииМетро.Выгрузить();
					НовМетро = СтанцииМетро.Добавить();
					НовМетро.Метро = Метро;
					ПараметрыЗаполнения.Вставить("СтанцииМетро", СтанцииМетро);
				КонецЕсли;
				
			ИначеЕсли Город = "Зеленоград" Тогда
				
				ПараметрыЗаполнения.Вставить("Район", Справочники.Районы.НайтиПоНаименованию("Зеленоград"));
				ПараметрыЗаполнения.Вставить("АдминистративныйОкруг", Справочники.АдминистративныеОкруга.НайтиПоНаименованию("Зеленоград"));
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	НомерТочки = Справочники.СтруктурныеЕдиницы.НомерДляНовойТочки();
	ПараметрыЗаполнения.Вставить("НомерТочки", НомерТочки);
	
	Если Город = "Москва" или Город="" Тогда
		ОбозначениеГород = ""
	Иначе
		ОбозначениеГород = Лев(ГородСсылка.Наименование,3) + "_";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(УлицаСокрНаименование) Тогда
		ОбозначениеУлица = УлицаСокрНаименование;	
	Иначе	
		ОбозначениеУлица = Улица;
	КонецЕсли;
	
	//+++ AK suvv 16.07.2018 ИП-00018812.01
	НаименованиеТочки = Формат(НомерТочки, "ЧГ=0") + "П_" + СокрЛП(ОбозначениеГород) + СокрЛП(ОбозначениеУлица) + ПервыеЦифры(Дом);
	//--- AK suvv
	ПараметрыЗаполнения.Вставить("Наименование", НаименованиеТочки);
	
	ЦФО = Новый ТаблицаЗначений;
	ЦФО.Колонки.Добавить("Период");
	ЦФО.Колонки.Добавить("ЦФО");
	ЦФО.Колонки.Добавить("Организация");
	ЦФО.Колонки.Добавить("АвторИзменений");
	ЦФО.Колонки.Добавить("ДатаИзменений");
	
	НовСтрока = ЦФО.Добавить();
	НовСтрока.Период = ТекущаяДата();
	НовСтрока.ЦФО = Справочники.СтруктурныеЕдиницы.НайтиПоКоду("000001255"); //Управление розницей. Тилси
	НовСтрока.Организация = Справочники.Организации.НайтиПоКоду("000000009"); //Тилси
	НовСтрока.АвторИзменений = ПараметрыСеанса.ТекущийПользователь;
	НовСтрока.ДатаИзменений = ТекущаяДата();
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("Ключ", НоваяСЕ);
	ПараметрыОткрытия.Вставить("ЗначенияЗаполнения", ПараметрыЗаполнения);
	ПараметрыОткрытия.Вставить("ЦФО", ЦФО);
	ФормаСЕ = ПолучитьФорму("Справочник.СтруктурныеЕдиницы.Форма.ФормаЭлементаУправяемая", ПараметрыОткрытия);
	//+++ AK suvv 16.07.2018 ИП-00018812.01
	ФормаСЕ.ОткрытьМодально();
	ТочкаДоставкиСвойСправочник = ФормаСЕ.Объект.Ссылка;
	//--- AK suvv
	
КонецПроцедуры //--- AK suvv

//+++ AK suvv 05.07.2018 ИП-00018812
Функция ПолучитьГеокодерЯндекс()
	
	Попытка
		
		Сервис = "geocode-maps.yandex.ru";
		Порт = 443;
		
		WinHttp = Новый COMОбъект("WinHttp.WinHttpRequest.5.1");
		WinHttp.Option(2,"utf-8");
		WinHttp.Open("POST","https://geocode-maps.yandex.ru:443/1.x/",0);
		WinHttp.SetRequestHeader("Accept-Language", "ru");
		WinHttp.SetRequestHeader("Accept-Charset","utf-8");
		WinHttp.setRequestHeader("Content-Language", "ru");
		WinHttp.setRequestHeader("Content-Charset", "utf-8");
		WinHttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded; charset=utf-8");
		
		Возврат WinHttp;
		
	Исключение	
		
		Возврат Неопределено;
		
	КонецПопытки;
	
КонецФункции //--- AK suvv

//+++ AK suvv 05.07.2018 ИП-00018812
Функция ПолучитьСведенияПоКоординатам(WinHTTP,Координаты,Тип)
	
	WinHttp.Send("geocode=" + Координаты + "&kind=" + Тип);
	ОтветСервера = WinHttp.ResponseText();
	Возврат ОтветСервера;
	
КонецФункции  //--- AK suvv

//+++ AK suvv 05.07.2018 ИП-00018812
Функция ПолучитьЗначениеКомпонента(ответСервера,Тип)Экспорт
	
	Попытка
		Компонент =  ВернутьТекстПоТэгу(ОтветСервера, "Component", Истина);
		Пока Компонент <> "" Цикл
			Если ВернутьТекстПоТэгу(Компонент, "kind") = Тип Тогда
				Возврат ВернутьТекстПоТэгу(Компонент,"name")
			КонецЕсли;
			Компонент = ВернутьТекстПоТэгу(ОтветСервера, "Component", Истина);
		КонецЦикла;
		Возврат "";
	Исключение
		Возврат "";
	КонецПопытки
	
КонецФункции //--- AK suvv

//+++ AK suvv 05.07.2018 ИП-00018812
Функция ВернутьТекстПоТэгу(ИсхСтрока,Тэг,Очистить=Ложь)
	
	КС = СтрДлина(Тэг);
	П1 = Найти(ИсхСтрока, "<" + Тэг + ">");
	П2 = Найти(ИсхСтрока, "</" + Тэг + ">");
	
	Если П1*П2 = 0 Тогда
		Результат = ""
	Иначе
		Результат = Сред(ИсхСтрока, П1 + 2 + КС, П2 - П1 - 2 - КС)
	КонецЕсли;
	
	Если Очистить и Результат <>"" Тогда
		ИсхСтрока = Лев(ИсхСтрока, П1 - 1) + Сред(ИсхСтрока, П2 + 3 + СтрДлина(Тэг))
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции //--- AK suvv

//+++ AK suvv 05.07.2018 ИП-00018812
Функция ПервыеЦифры(Стр)
	
	Для К = 1 По СтрДлина(Стр) Цикл
		Если Найти("01234567890", Сред(Стр,К,1))=0 Тогда
			Возврат Лев(Стр, К - 1)
		КонецЕсли;
	КонецЦикла;
	
	Возврат Стр;
	
КонецФункции //--- AK suvv

//+++ AK suvv 05.07.2018 ИП-00018812
Процедура РазложитьАдрес(УлицаПолноеНаименование, Улица, ТипУлицы)
	
	ТипыУлиц = "улица, переулок, аллея, бульвар, линия, набережная, переулок, площадь, проезд, просек, проспект, спуск, тупик, улица, шоссе";
	
	Слова = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(УлицаПолноеНаименование, " ");
	
	Для Каждого Слово из Слова Цикл
		
		Если Найти(ТипыУлиц, НРег(Слово))=0 Тогда
			Улица = Улица + Слово + " ";
		Иначе
			ТипУлицы = Слово;
			Если ТипУлицы = "улица" Тогда 
				ТипУлицы = "ул.";
			ИначеЕсли ТипУлицы = "проспект" Тогда 
				ТипУлицы = "пр-т";
			ИначеЕсли ТипУлицы = "проезд" Тогда 
				ТипУлицы = "пр.";
			ИначеЕсли ТипУлицы = "переулок" Тогда 
				ТипУлицы = "пер.";
			ИначеЕсли ТипУлицы = "набережная" Тогда 
				ТипУлицы = "наб.";
			ИначеЕсли ТипУлицы = "площадь" Тогда 
				ТипУлицы = "пл.";
			ИначеЕсли ТипУлицы = "бульвар" Тогда 
				ТипУлицы = "б-р";
			ИначеЕсли ТипУлицы = "шоссе" Тогда 
				ТипУлицы = "ш.";
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры //--- AK suvv

//+++ AK suvv 05.07.2018 ИП-00018812
Функция ПолучитьУлицаСокрНаименование(УлицаДляПоиска, Город, Регион)
	
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтруктурныеЕдиницы.УлицаСокрНаименование КАК УлицаСокрНаименование,
	|	ВЫБОР
	|		КОГДА СтруктурныеЕдиницы.Город = &Город
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА СтруктурныеЕдиницы.Регион = &Регион
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РейтингПохожести
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	СтруктурныеЕдиницы.Адрес ПОДОБНО &Улица
	|	И СтруктурныеЕдиницы.УлицаСокрНаименование <> """"
	|
	|УПОРЯДОЧИТЬ ПО
	|	РейтингПохожести УБЫВ";
	Запрос.УстановитьПараметр("Город", Город);
	Запрос.УстановитьПараметр("Регион", Регион);
	Запрос.УстановитьПараметр("Улица","%" + УлицаДляПоиска + "%");
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		УлицаСокрНаименование = УлицаДляПоиска;
	Иначе
		РезультатПоиска = Рез.Выгрузить();
		УлицаСокрНаименование = РезультатПоиска[0].УлицаСокрНаименование;
	КонецЕсли;
	
	Возврат УлицаСокрНаименование; 
	
КонецФункции //--- AK suvv


