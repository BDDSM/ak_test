&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
перем Данные,ТекстОписаниеОшибки,ТестовыйАдрес;

	ТестовыйАдрес="";

	Отказ=НЕ АК_РассылкиПоставщикамТехнологам.ПолучитьПараметрыНастройкиРассылокПоставщикамТехнологам(Данные,ТекстОписаниеОшибки);
	Если Отказ тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка при получении данных настройки: "+ТекстОписаниеОшибки);
	иначе
		Попытка
			Если ТипЗнч(Данные)=Тип("Структура") тогда
				Для Каждого Элемент из Данные цикл
					попытка
						Если Элемент.Ключ="ВидыКонтактнойИнформацииПроизводитель" тогда
							ВидыКонтактнойИнформацииПроизводитель.Загрузить(Элемент.Значение);
						ИначеЕсли Элемент.Ключ="ВидыКонтактнойИнформацииТехнолог" тогда
							ВидыКонтактнойИнформацииТехнолог.Загрузить(Элемент.Значение);
						ИначеЕсли 
							(Элемент.Ключ="ИнтервалНеделя1"	ИЛИ	Элемент.Ключ="ИнтервалНеделя2" ИЛИ Элемент.Ключ="ИнтервалМесяц" ИЛИ	Элемент.Ключ="ИнтервалПроизвольный")
							И Элемент.Значение 
						тогда
							ЭтаФорма[Элемент.Ключ]	= Элемент.Значение;
						ИначеЕсли Элемент.Ключ="ИнтервалДни" тогда
							ИнтервалДни=Элемент.Значение;
						ИначеЕсли Элемент.Ключ="ТестовыйАдрес" тогда
							ТестовыйАдрес=Элемент.Значение;
						ИначеЕсли Элемент.Ключ="АдресПоУмолчанию" тогда
							АдресПоУмолчанию=Элемент.Значение;
						ИначеЕсли Элемент.Ключ="ИспользоватьТестовыйАдрес" тогда
							ИспользоватьТестовыйАдрес=Элемент.Значение;
						КонецЕсли;
					Исключение
						ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ошибка получения данных """+Элемент.Ключ+""": "+ОписаниеОшибки());
					КонецПопытки;
				КонецЦикла;
			Иначе 
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Данные повреждены");
			КонецЕсли;
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Данные повреждены");
		КонецПопытки;
	КонецЕсли;
	Если НЕ ПустаяСтрока(ТестовыйАдрес) и ПустаяСтрока(АдресПоУмолчанию) тогда
		АдресПоУмолчанию=ТестовыйАдрес;
	КонецЕсли;
	Элементы.ИнтервалДни.Доступность=ИнтервалПроизвольный;
	Элементы.НадписьНетОтчета.Видимость=
		(ИнтервалПроизвольный и ИнтервалДни=0)
		ИЛИ НЕ (ИнтервалНеделя1 или ИнтервалНеделя2 или ИнтервалМесяц или ИнтервалПроизвольный) ;
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьЗначениеКонстанты()
	ОбновитьЗначениеКонстантыНаСервере();
	Элементы.ВыполнитьРассылку.Доступность=Ложь;
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗначениеКонстантыНаСервере()
	Данные=Новый Структура;
	Данные.Вставить("ВидыКонтактнойИнформацииПроизводитель",ВидыКонтактнойИнформацииПроизводитель.Выгрузить());
	Данные.Вставить("ВидыКонтактнойИнформацииТехнолог",ВидыКонтактнойИнформацииТехнолог.Выгрузить());
	Данные.Вставить("ИнтервалНеделя1",ИнтервалНеделя1);
	Данные.Вставить("ИнтервалНеделя2",ИнтервалНеделя2);
	Данные.Вставить("ИнтервалМесяц",ИнтервалМесяц);
	Данные.Вставить("ИнтервалДни",ИнтервалДни);
	Данные.Вставить("ИнтервалПроизвольный",ИнтервалПроизвольный);
	Данные.Вставить("ИспользоватьТестовыйАдрес",ИспользоватьТестовыйАдрес);
	Данные.Вставить("АдресПоУмолчанию",АдресПоУмолчанию);
	НаборКонстант.АК_НастройкиРассылокПоставщикамТехнологам=ЗначениеВСтрокуВнутр(Данные);
КонецПроцедуры

&НаКлиенте
Процедура ВидыКонтактнойИнформацииПроизводителяПриИзменении(Элемент)
	ОбновитьЗначениеКонстанты();
КонецПроцедуры

&НаКлиенте
Процедура ВидыКонтактнойИнформацииТехнологаПриИзменении(Элемент)
	ОбновитьЗначениеКонстанты();
КонецПроцедуры

&НаКлиенте
Процедура ЗаданиеПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалНеделя1ПриИзменении(Элемент)
	ВыборИнтервала(Элемент.Имя);
	ОбновитьЗначениеКонстанты();
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалНеделя2ПриИзменении(Элемент)
	ВыборИнтервала(Элемент.Имя);
	ОбновитьЗначениеКонстанты();
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалМесяцПриИзменении(Элемент)
	ВыборИнтервала(Элемент.Имя);
	ОбновитьЗначениеКонстанты();
КонецПроцедуры

&НаКлиенте
Процедура ИнтервалПроизвольныйПриИзменении(Элемент)
	ВыборИнтервала(Элемент.Имя);
	ОбновитьЗначениеКонстанты();
КонецПроцедуры

&НаСервере
Процедура ВыборИнтервала(ЭлементИмя)
	ИнтервалНеделя1			= Ложь;
	ИнтервалНеделя2			= Ложь;
	ИнтервалМесяц			= Ложь;
	ИнтервалПроизвольный	= Ложь;
	ЭтаФорма[ЭлементИмя]	= Истина;
	Элементы.ИнтервалДни.Доступность=ИнтервалПроизвольный;
	Элементы.НадписьНетОтчета.Видимость=
		(ИнтервалПроизвольный и ИнтервалДни=0)
		ИЛИ НЕ (ИнтервалНеделя1 или ИнтервалНеделя2 или ИнтервалМесяц или ИнтервалПроизвольный) ;
	РасставитьДаты();
КонецПроцедуры

Процедура РасставитьДаты()
	Если ИнтервалПроизвольный тогда
		КонецПериода=	КонецДня(НачалоДня(ТекущаяДата())-1);
		НачалоПериода=	НачалоДня(КонецПериода)-(ИнтервалДни-1)*24*60*60;
	ИначеЕсли ИнтервалМесяц тогда
		КонецПериода=	НачалоМесяца(ТекущаяДата())-1;
		НачалоПериода=	НачалоМесяца(КонецПериода);
	ИначеЕсли ИнтервалНеделя2 тогда
		КонецПериода=	НачалоНедели(ТекущаяДата())-1;
		НачалоПериода=	НачалоНедели(НачалоНедели(КонецПериода)-1);
	ИначеЕсли ИнтервалНеделя1 тогда
		КонецПериода=	НачалоНедели(ТекущаяДата())-1;
		НачалоПериода=	НачалоНедели(КонецПериода);
	Иначе 
		КонецПериода=	КонецДня(ТекущаяДата());
		НачалоПериода=	НачалоДня(КонецПериода);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ИнтервалДниПриИзменении(Элемент)
	ВыборИнтервала("ИнтервалПроизвольный");
	ОбновитьЗначениеКонстанты();
КонецПроцедуры

&НаКлиенте
Процедура ТестПроизводители(Команда)
	ТестПроизводителиНаСервере();
	Элементы.ТестКонтакты.Видимость=Истина;
	Элементы.ТестКонтакты2.Видимость=Истина;
КонецПроцедуры

&НаСервере
Процедура ТестПроизводителиНаСервере()

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	АК_НастройкиРассылокПоставщикамТехнологам.Поставщик КАК Поставщик
		|ПОМЕСТИТЬ НеУведомлять
		|ИЗ
		|	РегистрСведений.АК_НастройкиРассылокПоставщикамТехнологам КАК АК_НастройкиРассылокПоставщикамТехнологам
		|ГДЕ
		|	НЕ АК_НастройкиРассылокПоставщикамТехнологам.УведомлятьПоставщикаПриРассылке
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Поставщик
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПоступлениеТоваровУслуг.Контрагент КАК Производитель
		|ПОМЕСТИТЬ ПоНакладным
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
		|ГДЕ
		|	НЕ ПоступлениеТоваровУслуг.ПометкаУдаления
		|	И ПоступлениеТоваровУслуг.Дата МЕЖДУ &Дата1 И &Дата2
		|	И ПоступлениеТоваровУслуг.Контрагент <> &ПроизводительПустаяСсылка
		|	И ПоступлениеТоваровУслуг.Контрагент.ЯвляетсяПоставщиком
		|	И НЕ ПоступлениеТоваровУслуг.Контрагент.ОказываетРегламентныеУслуги
		|	И НЕ ПоступлениеТоваровУслуг.Контрагент.ЯвляетсяАрендодателем
		|	И ПоступлениеТоваровУслуг.Контрагент.СтатьяДвиженияДенежныхСредств = &СтатьяДвиженияДенежныхСредств
		|	И НЕ ПоступлениеТоваровУслуг.Контрагент В
		|				(ВЫБРАТЬ
		|					НеУведомлять.Поставщик
		|				ИЗ
		|					НеУведомлять)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПриходныйОрдерСклад.Поставщик
		|ИЗ
		|	Документ.ПриходныйОрдерСклад КАК ПриходныйОрдерСклад
		|ГДЕ
		|	НЕ ПриходныйОрдерСклад.ПометкаУдаления
		|	И ПриходныйОрдерСклад.Дата МЕЖДУ &Дата1 И &Дата2
		|	И (ВЫРАЗИТЬ(ПриходныйОрдерСклад.Поставщик КАК Справочник.Контрагенты)) <> &ПроизводительПустаяСсылка
		|	И НЕ ВЫРАЗИТЬ(ПриходныйОрдерСклад.Поставщик КАК Справочник.Контрагенты).ЯвляетсяАрендодателем
		|	И НЕ ВЫРАЗИТЬ(ПриходныйОрдерСклад.Поставщик КАК Справочник.Контрагенты).ОказываетРегламентныеУслуги
		|	И ВЫРАЗИТЬ(ПриходныйОрдерСклад.Поставщик КАК Справочник.Контрагенты).ЯвляетсяПоставщиком
		|	И ПриходныйОрдерСклад.Поставщик.СтатьяДвиженияДенежныхСредств = &СтатьяДвиженияДенежныхСредств
		|	И НЕ ВЫРАЗИТЬ(ПриходныйОрдерСклад.Поставщик КАК Справочник.Контрагенты) В
		|				(ВЫБРАТЬ
		|					НеУведомлять.Поставщик
		|				ИЗ
		|					НеУведомлять)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Производитель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПоНакладным.Производитель КАК Производитель
		|ПОМЕСТИТЬ Производители
		|ИЗ
		|	ПоНакладным КАК ПоНакладным
		|ГДЕ
		|	ПоНакладным.Производитель <> &ПроизводительПустаяСсылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Производитель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтактныеЛицаКонтрагентов.Ссылка КАК КонтактноеЛицо,
		|	КонтактныеЛицаКонтрагентов.Владелец КАК Производитель
		|ПОМЕСТИТЬ КонтактныеЛица
		|ИЗ
		|	Справочник.КонтактныеЛицаКонтрагентов КАК КонтактныеЛицаКонтрагентов
		|ГДЕ
		|	КонтактныеЛицаКонтрагентов.Владелец В
		|			(ВЫБРАТЬ
		|				Производители.Производитель
		|			ИЗ
		|				Производители)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КонтактноеЛицо,
		|	Производитель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(100)) КАК Контакт,
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Объект КАК Справочник.Контрагенты) КАК Контрагент
		|ПОМЕСТИТЬ КонтрагентыСКонтактами
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Объект КАК Справочник.Контрагенты) В
		|			(ВЫБРАТЬ
		|				Производители.Производитель
		|			ИЗ
		|				Производители)
		|	И КонтактнаяИнформация.Тип = &ТипЭП
		|	И КонтактнаяИнформация.Вид В(&ВидыКонтактнойИнформацииПоставщиков)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(100)),
		|	КонтактныеЛица.КонтактноеЛицо.Владелец
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КонтактныеЛица КАК КонтактныеЛица
		|		ПО ((ВЫРАЗИТЬ(КонтактнаяИнформация.Объект КАК Справочник.КонтактныеЛицаКонтрагентов)) = КонтактныеЛица.КонтактноеЛицо)
		|ГДЕ
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Объект КАК Справочник.КонтактныеЛицаКонтрагентов) В
		|			(ВЫБРАТЬ
		|				КонтактныеЛица.КонтактноеЛицо
		|			ИЗ
		|				КонтактныеЛица)
		|	И КонтактнаяИнформация.Тип = &ТипЭП
		|	И КонтактнаяИнформация.Вид В(&ВидыКонтактнойИнформацииПоставщиков)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	АК_РассылкиПоставщикамТехнологамОбороты.Производитель КАК Производитель
		|ПОМЕСТИТЬ Претензии
		|ИЗ
		|	РегистрНакопления.АК_РассылкиПоставщикамТехнологам.Обороты(&Дата1, &Дата2, , ) КАК АК_РассылкиПоставщикамТехнологамОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Производитель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтрагентыСКонтактами.Контакт,
		|	ПоНакладным.Производитель КАК Объект,
		|	ВЫБОР
		|		КОГДА КонтрагентыСКонтактами.Контакт ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Найден,
		|	ВЫБОР
		|		КОГДА Претензии.Производитель ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьЖалобы
		|ИЗ
		|	ПоНакладным КАК ПоНакладным
		|		ЛЕВОЕ СОЕДИНЕНИЕ КонтрагентыСКонтактами КАК КонтрагентыСКонтактами
		|		ПО ПоНакладным.Производитель = КонтрагентыСКонтактами.Контрагент
		|		ЛЕВОЕ СОЕДИНЕНИЕ Претензии КАК Претензии
		|		ПО ПоНакладным.Производитель = Претензии.Производитель
		|
		|УПОРЯДОЧИТЬ ПО
		|	Объект
		|АВТОУПОРЯДОЧИВАНИЕ";

	Запрос.УстановитьПараметр("Дата1", ТекущаяДата()-365*24*60*60);
	Запрос.УстановитьПараметр("Дата2", ТекущаяДата());
	Запрос.УстановитьПараметр("ТипЭП", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	Запрос.УстановитьПараметр("СтатьяДвиженияДенежныхСредств", Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоКоду("120110"));
	Запрос.УстановитьПараметр("ПроизводительПустаяСсылка", Справочники.Контрагенты.ПустаяСсылка());

	ВидыКИ=Новый СписокЗначений;
	Для Каждого СтрокаВида из ВидыКонтактнойИнформацииПроизводитель цикл
		ВидыКИ.Добавить(СтрокаВида.ВидКонтактнойИнформации);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ВидыКонтактнойИнформацииПоставщиков", ВидыКИ);
	
	ТестКонтакты.Загрузить(Запрос.Выполнить().Выгрузить());

	УстановитьПривилегированныйРежим(Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ТестТехнологи(Команда)
	ТестТехнологиНаСервере();
	Элементы.ТестКонтакты.Видимость=Истина;
	Элементы.ТестКонтакты2.Видимость=Истина;
КонецПроцедуры

&НаСервере
Процедура ТестТехнологиНаСервере()

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Пользователи.Ссылка КАК Технолог
		|ПОМЕСТИТЬ ВсеТехнологи
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	НЕ Пользователи.ЭтоГруппа
		|	И НЕ Пользователи.ПометкаУдаления
		|	И Пользователи.Технолог
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Технолог
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВсеТехнологи.Технолог КАК Технолог
		|ПОМЕСТИТЬ Технологи
		|ИЗ
		|	ВсеТехнологи КАК ВсеТехнологи
		|ГДЕ
		|	ВсеТехнологи.Технолог <> &ТехнологПустаяСсылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Технолог
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КонтактнаяИнформация.Представление КАК Контакт,
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Объект КАК Справочник.Пользователи) КАК Технолог
		|ПОМЕСТИТЬ ТехнологиСКонтактами
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	ВЫРАЗИТЬ(КонтактнаяИнформация.Объект КАК Справочник.Пользователи) В
		|			(ВЫБРАТЬ
		|				Технологи.Технолог
		|			ИЗ
		|				Технологи)
		|	И КонтактнаяИнформация.Тип = &ТипЭП
		|	И КонтактнаяИнформация.Вид В(&ВидыКонтактнойИнформацииТехнологов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Технолог
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	АК_РассылкиПоставщикамТехнологамОбороты.Технолог КАК Технолог
		|ПОМЕСТИТЬ Претензии
		|ИЗ
		|	РегистрНакопления.АК_РассылкиПоставщикамТехнологам.Обороты(&Дата1, &Дата2, , ) КАК АК_РассылкиПоставщикамТехнологамОбороты
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Технолог
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВсеТехнологи.Технолог КАК Объект,
		|	ТехнологиСКонтактами.Контакт,
		|	ВЫБОР
		|		КОГДА ТехнологиСКонтактами.Контакт ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Найден,
		|	ВЫБОР
		|		КОГДА Претензии.Технолог ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьЖалобы
		|ИЗ
		|	ВсеТехнологи КАК ВсеТехнологи
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТехнологиСКонтактами КАК ТехнологиСКонтактами
		|		ПО ВсеТехнологи.Технолог = ТехнологиСКонтактами.Технолог
		|		ЛЕВОЕ СОЕДИНЕНИЕ Претензии КАК Претензии
		|		ПО ВсеТехнологи.Технолог = Претензии.Технолог
		|
		|УПОРЯДОЧИТЬ ПО
		|	Объект
		|АВТОУПОРЯДОЧИВАНИЕ";

	Запрос.УстановитьПараметр("Дата1", ТекущаяДата()-365*24*60*60);
	Запрос.УстановитьПараметр("Дата2", ТекущаяДата());
	Запрос.УстановитьПараметр("ТипЭП", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	Запрос.УстановитьПараметр("ТехнологПустаяСсылка", Справочники.Пользователи.ПустаяСсылка());

	ВидыКИ=Новый СписокЗначений;
	Для Каждого СтрокаВида из ВидыКонтактнойИнформацииТехнолог цикл
		ВидыКИ.Добавить(СтрокаВида.ВидКонтактнойИнформации);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ВидыКонтактнойИнформацииТехнологов", ВидыКИ);
	
	ТестКонтакты.Загрузить(Запрос.Выполнить().Выгрузить());

	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ТестовыйАдресПриИзменении(Элемент)
	ОбновитьЗначениеКонстанты();
	РаскраскаТестовогоАдреса();
КонецПроцедуры


&НаКлиенте
Процедура РаскраскаТестовогоАдреса()
	ИспользоватьТестовыйАдрес=ИспользоватьТестовыйАдрес и НЕ ПустаяСтрока(АдресПоУмолчанию);
	Если ИспользоватьТестовыйАдрес тогда
		Элементы.АдресПоУмолчанию.ЦветТекста=Элементы.НадписьНетОтчета.ЦветТекста;
		Элементы.ИспользоватьТестовыйАдрес.ЦветТекстаЗаголовка=Элементы.НадписьНетОтчета.ЦветТекста;
	иначе
		Элементы.АдресПоУмолчанию.ЦветТекста=Элементы.ИнтервалДни.ЦветТекстаЗаголовка;
		Элементы.ИспользоватьТестовыйАдрес.ЦветТекстаЗаголовка=Элементы.ИнтервалДни.ЦветТекстаЗаголовка;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	РаскраскаТестовогоАдреса();
	РасставитьДаты();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьРассылку(Команда)
	АК_РассылкиПоставщикамТехнологам.ВыполнитьРассылку();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Элементы.ВыполнитьРассылку.Доступность=Истина;
КонецПроцедуры

&НаКлиенте
Процедура АдресПоУмолчаниюПриИзменении(Элемент)
	РаскраскаТестовогоАдреса();
	ОбновитьЗначениеКонстанты();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьТестовыйАдресПриИзменении(Элемент)
	РаскраскаТестовогоАдреса();
	ОбновитьЗначениеКонстанты();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	а=1;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	а=1;
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	КонтрольДат();
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	КонтрольДат();
КонецПроцедуры

&НаКлиенте
Процедура КонтрольДат()
	Если НЕ ЗначениеЗаполнено(КонецПериода) тогда
		КонецПериода=КонецДня(ТекущаяДата());
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(НачалоПериода) или НачалоПериода>=КонецПериода тогда
		НачалоПериода=НачалоДня(КонецПериода);
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ГруппаВидыКонтактнойИнформацииПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ТестКонтакты.Очистить();
	Элементы.ТестКонтакты.Видимость=Ложь;
	Элементы.ТестКонтакты2.Видимость=Ложь;
КонецПроцедуры

