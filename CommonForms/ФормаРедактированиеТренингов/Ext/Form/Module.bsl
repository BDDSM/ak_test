
//+++ gusd

&НаКлиенте
Процедура Подбор(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗакрыватьПриВыборе", Ложь);
	
	Открытьформу("Справочник.ФизическиеЛица.ФормаВыбора", ПараметрыОткрытия, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		
		НайденныеСтроки = СоставПодбора.НайтиСтроки(Новый Структура("ФизЛицо", ВыбранноеЗначение));
		Если НайденныеСтроки.Количество() = 0 Тогда
			
			НоваяСтрока = СоставПодбора.Добавить();
			НоваяСтрока.ФизЛицо = ВыбранноеЗначение;
			
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	Если СоставПодбора.Количество() Тогда
		
		Ответ = Вопрос("Все подобранные физ. лица будут очищены. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли; 
		
		СоставПодбора.Очистить();
		
	КонецЕсли; 
	
	
КонецПроцедуры

&НаКлиенте
Процедура СоставПодбораПриАктивизацииСтроки(Элемент)
	
	ПерезаполнитьДанныеТренингов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьДанныеТренингов()
	
	ТренингиФизЛица.Очистить();
	
	ТекДанные = Элементы.СоставПодбора.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ПерезаполнитьДанныеТренинговНаСервере(ТекДанные.ФизЛицо);
	
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьДанныеТренинговНаСервере(ФизЛицо)
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", ФизЛицо);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ФизическиеЛицаПройденныеТренинги.Тренинг,
	|	ФизическиеЛицаПройденныеТренинги.ДатаПрохождения,
	|	ФизическиеЛицаПройденныеТренинги.ТренингПройден
	|ИЗ
	|	Справочник.ФизическиеЛица.ПройденныеТренинги КАК ФизическиеЛицаПройденныеТренинги
	|ГДЕ
	|	ФизическиеЛицаПройденныеТренинги.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическиеЛицаПройденныеТренинги.НомерСтроки";
				   
	ТренингиФизЛица.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ТренингиФизЛицаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекДанные = Элементы.СоставПодбора.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Если НЕ ОтменаРедактирования Тогда
		ЗаписатьДанныеПоФизЛицуНаСервере(ТекДанные.ФизЛицо);
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТренингиФизЛицаПослеУдаления(Элемент)
	
	ТекДанные = Элементы.СоставПодбора.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьДанныеПоФизЛицуНаСервере(ТекДанные.ФизЛицо);	
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеПоФизЛицуНаСервере(ФизЛицо)
	
	СпрОб = ФизЛицо.ПолучитьОбъект();
	СпрОб.ПройденныеТренинги.Загрузить(ТренингиФизЛица.Выгрузить());
	СпрОб.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура СоставПодбораФизЛицоПриИзменении(Элемент)
	
	ПерезаполнитьДанныеТренингов();
	
КонецПроцедуры

&НаКлиенте
Процедура ТренингПройден(Команда)
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли; 
	
	ЗафиксироватьПройденныйТренингВсемФизЛицам();
	
	ПерезаполнитьДанныеТренингов();
	
КонецПроцедуры

&НаСервере
Процедура ЗафиксироватьПройденныйТренингВсемФизЛицам()
	
	Для каждого Стр Из СоставПодбора Цикл
		
		СпрОб = Стр.ФизЛицо.ПолучитьОбъект();
		
		НайденнаяСтрока = СпрОб.ПройденныеТренинги.Найти(Тренинг, "Тренинг");
		Если НайденнаяСтрока = Неопределено Тогда
			
			НоваяСтрока = СпрОб.ПройденныеТренинги.Добавить();
			
			НоваяСтрока.Тренинг 		= Тренинг;
			НоваяСтрока.ДатаПрохождения = ДатаТренинга;
			НоваяСтрока.ТренингПройден 	= Истина;
			
		Иначе
			
			// Запись уже есть
			Если НайденнаяСтрока.ДатаПрохождения <> ДатаТренинга Тогда
				
				НоваяСтрока = СпрОб.ПройденныеТренинги.Добавить();
				
				НоваяСтрока.Тренинг 		= Тренинг;
				НоваяСтрока.ДатаПрохождения = ДатаТренинга;
				НоваяСтрока.ТренингПройден 	= Истина;	
				
			КонецЕсли; 
			
		КонецЕсли; 
		
		СпрОб.Записать();	
		
	КонецЦикла; 
	
КонецПроцедуры

//--- gusd
