
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Попытка
		Запрос = Новый Запрос();
		Запрос.Текст = "ВЫБРАТЬ
		               |	НастройкиМагазинов.Настройки
		               |ИЗ
		               |	РегистрСведений.НастройкиМагазинов КАК НастройкиМагазинов
		               |ГДЕ
		               |	НастройкиМагазинов.Магазин = &Магазин";
					   
		Запрос.УстановитьПараметр("Магазин", ПараметрыСеанса.ТорговаяТочкаПоАйпи);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Настройки = Выборка.Настройки.Получить();
			Если ТипЗнч(Настройки) = Тип("Структура") Тогда
				Настройки.Свойство("ОсновнаяКамера", ОсновнаяКамера);
				Настройки.Свойство("ОсновнойРежим", ОсновнойРежим);
			КонецЕсли;	
		КонецЕсли;	
	Исключение
	КонецПопытки;	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРежимПолученияИзображения(УстановитьРежим)
	
	Режим = УстановитьРежим;
	Если Режим = "Из файла" Тогда
		Элементы.РежимИзФайла.Пометка = Истина;
		Элементы.РежимСWebКамеры.Пометка = Ложь;
		Элементы.ГруппаИзФайла.Видимость = Истина;
		Элементы.ГруппаСWebКамеры.Видимость = Ложь;
	Иначе	
		Элементы.РежимИзФайла.Пометка = Ложь;
		Элементы.РежимСWebКамеры.Пометка = Истина;
		
		Элементы.ГруппаИзФайла.Видимость = Ложь;
		Элементы.ГруппаСWebКамеры.Видимость = Истина;
		
		Элементы.Камера.СписокВыбора.Очистить();
		Камеры = КомпонентаРаботыСВебКамерой.ПолучитьКамеры();
		Если Камеры <> "Не обнаружено включенных камер" Тогда
			Камеры = СтрЗаменить(Камеры, ";;", Символы.ПС);
			Для н = 1 По СтрЧислоСтрок(Камеры) Цикл
				ЭлементКамера = СтрПолучитьСтроку(Камеры, н);
				ЭлементКамера = СтрЗаменить(ЭлементКамера, "||", Символы.ПС);
				Элементы.Камера.СписокВыбора.Добавить(СтрПолучитьСтроку(ЭлементКамера, 2), СтрПолучитьСтроку(ЭлементКамера, 1));
			КонецЦикла;
		КонецЕсли;
		
		Если Элементы.Камера.СписокВыбора.Количество() = 0 Тогда
			Предупреждение("Не обнаружено установленных камер (или установленные камеры не включены)");
			УстановитьРежимПолученияИзображения("Из файла");
		Иначе
			Для Каждого ЭлементСписка Из Элементы.Камера.СписокВыбора Цикл
				Если НРег(ЭлементСписка.Представление) = НРег(ОсновнаяКамера) Тогда
					Камера = ЭлементСписка.Представление;
					КомпонентаРаботыСВебКамерой.ГуидКамеры = ЭлементСписка.Значение;
				КонецЕсли;	
			КонецЦикла;
			Если НЕ ЗначениеЗаполнено(Камера) Тогда
				Камера = Элементы.Камера.СписокВыбора[0].Представление;
				КомпонентаРаботыСВебКамерой.ГуидКамеры = Элементы.Камера.СписокВыбора[0].Значение;
			КонецЕсли;	
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьРежимПолученияИзображения(?(ЗначениеЗаполнено(ОсновнойРежим), ОсновнойРежим, "Из файла"));
	
КонецПроцедуры

&НаКлиенте
Процедура РежимИзФайла(Команда)
	
	УстановитьРежимПолученияИзображения("Из файла");
	
КонецПроцедуры

&НаКлиенте
Процедура РежимСWebКамеры(Команда)
	
	УстановитьРежимПолученияИзображения("С web камеры");
	
КонецПроцедуры

&НаСервере
Функция КартинкаВДД(П, Адрес)
	// Функция принимает изображение в base64 формата BMP.
	ДД = Base64Значение(П); // Получаем двоичные данные.
	мПустаяКартинка = Новый Картинка(ДД, Ложь);  // Создаем картинку
	мКРТ = мПустаяКартинка.Преобразовать(ФорматКартинки.PNG); // Преобразование в PNG но оно ни как не влияет
	Фото =  ПоместитьВоВременноеХранилище(мКРТ, Адрес); // Поместить ссылку в реквизит формы

КонецФункции

&НаКлиенте
Процедура ПолучитьФотоСКамеры(Команда)
	
	ЗакодированноеИзображение = КомпонентаРаботыСВебКамерой.СделатьФото();
	Если Не ЗакодированноеИзображение = Неопределено Тогда
		// Вызовем процедуру преобразующую base64 в картинку PNG
		КартинкаВДД(ЗакодированноеИзображение, ЭтаФорма.ВладелецФормы.УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КамераПриИзменении(Элемент)
	
	КомпонентаРаботыСВебКамерой.ГуидКамеры = Камера;
	Камера = Элемент.СписокВыбора.НайтиПоЗначению(Камера).Представление;
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ДиалогФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогФайла.МножественныйВыбор = Ложь;
	
	ДиалогФайла.Фильтр = "(*.jpg;*.jpeg;*.gif;*.tif;*.png)|*.jpg;*.jpeg;*.gif;*.tif;*.png";
	
	ДиалогФайла.ПроверятьСуществованиеФайла = Истина;
	Если ДиалогФайла.Выбрать() Тогда
		//ХранилищеКартинки = Новый ХранилищеЗначения(ДиалогФайла.ПолноеИмяФайла);
		ИмяФайла = ДиалогФайла.ПолноеИмяФайла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	СтруктураВозврата = Новый Структура("ВидДанных, Данные", "Фото", "");
	Если Режим = "Из файла" Тогда
		Если ЗначениеЗаполнено(ИмяФайла) Тогда
			КартинкаФайла = Новый Картинка(ИмяФайла);
			КартинкаФайла.Преобразовать(ФорматКартинки.PNG);
			СтруктураВозврата.Данные = ПоместитьВоВременноеХранилище(Новый Картинка(ИмяФайла), ЭтаФорма.ВладелецФормы.УникальныйИдентификатор);
		КонецЕсли;
	Иначе
		СтруктураВозврата.Данные = Фото;
	КонецЕсли;	
	
	ОповеститьОВыборе(СтруктураВозврата);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьВНастройкиМагазина()
	
	Попытка
		Магазин = ПараметрыСеанса.ТорговаяТочкаПоАйпи;
		Если ЗначениеЗаполнено(Магазин) Тогда
			СтруктураНастройки = Новый Структура();
			СтруктураНастройки.Вставить("ОсновнаяКамера", Камера);
			СтруктураНастройки.Вставить("ОсновнойРежим", Режим);
			Запись = РегистрыСведений.НастройкиМагазинов.СоздатьМенеджерЗаписи();
			Запись.Магазин = Магазин;
			Запись.Настройки = Новый ХранилищеЗначения(СтруктураНастройки);
			Запись.Записать();
		КонецЕсли;	
	Исключение
	КонецПопытки;	
	
КонецПроцедуры	

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СохранитьВНастройкиМагазина();
	
КонецПроцедуры
