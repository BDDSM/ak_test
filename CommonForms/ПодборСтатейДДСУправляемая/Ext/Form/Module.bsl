&НаКлиенте
Процедура ПринятьИзменения(Команда)
	СоздатьЗаписиВРегистре();
	Закрыть(СписокСтатей);
КонецПроцедуры

&НаСервере
Процедура СоздатьЗаписиВРегистре()
	СписокСтатей.Очистить();
	
	ДеревоСтатей = РеквизитФормыВЗначение("ДеревоСтатейДляВыбора");
	Отбор = Новый Структура;
	Отбор.Вставить("Пометка", 1);
	Отбор.Вставить("ЭтоГруппа", Ложь);
	МассивПометок = ДеревоСтатей.Строки.НайтиСтроки(Отбор, Истина);
	Для н = 0 По МассивПометок.вГраница() Цикл
		Статья = МассивПометок[н].Ссылка;
		НоваяСтрока = СписокСтатей.Добавить();
		НоваяСтрока.Статья = Статья;
		
		МенеджерЗаписи = РегистрыСведений.СоответствиеВидовРасходаИСтатейДС.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.СтатьяДС 		= Статья;
		МенеджерЗаписи.ВидРасходаДС 	= ВидРасходаДС;
		МенеджерЗаписи.Записать();
	КонецЦикла;
	
	Отбор.Вставить("Пометка", 0);
	Отбор.Вставить("ЭтоГруппа", Ложь);
	МассивПометок = ДеревоСтатей.Строки.НайтиСтроки(Отбор, Истина);
	Для н = 0 По МассивПометок.вГраница() Цикл
		Статья = МассивПометок[н].Ссылка;
		МенеджерЗаписи = РегистрыСведений.СоответствиеВидовРасходаИСтатейДС.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.СтатьяДС 		= Статья;
		МенеджерЗаписи.ВидРасходаДС 	= ВидРасходаДС;
		МенеджерЗаписи.Удалить();
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ДеревоСтатей = РеквизитФормыВЗначение("ДеревоСтатейДляВыбора");
	
	Заголовок = Параметры.ЗаголовокФормы;
	ВидРасходаДС	= Параметры.ВидРасходаДС;   
		
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	СправочникСтатьиДвиженияДенежныхСредств.Ссылка КАК Ссылка,
	                |	СправочникСтатьиДвиженияДенежныхСредств.Наименование КАК Представление,
	                |	СправочникСтатьиДвиженияДенежныхСредств.ЭтоГруппа КАК ЭтоГруппа,
	                |	ВЫБОР
	                |		КОГДА СправочникСтатьиДвиженияДенежныхСредств.ЭтоГруппа 
	                |			ТОГДА 0
	                |		ИНАЧЕ 2
	                |	КОНЕЦ КАК Картинка,
	                |	ВЫБОР
	                |		КОГДА СоответствиеВидовРасходаИСтатейДС.СтатьяДС ЕСТЬ NULL 
	                |			ТОГДА 0
	                |		ИНАЧЕ 1
	                |	КОНЕЦ КАК Пометка
	                |ИЗ
	                |	Справочник.СтатьиДвиженияДенежныхСредств КАК СправочникСтатьиДвиженияДенежныхСредств
	                |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеВидовРасходаИСтатейДС КАК СоответствиеВидовРасходаИСтатейДС
	                |		ПО СправочникСтатьиДвиженияДенежныхСредств.Ссылка = СоответствиеВидовРасходаИСтатейДС.СтатьяДС
	                |			И (СоответствиеВидовРасходаИСтатейДС.ВидРасходаДС = &ВидРасходаДС)
	                |
	                |УПОРЯДОЧИТЬ ПО
	                |	Ссылка ИЕРАРХИЯ" ;
	Запрос.УстановитьПараметр("ВидРасходаДС",Параметры.ВидРасходаДС);
	ДеревоСтатей = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ОбойтиДеревоСтатейНаСервере(ДеревоСтатей.Строки.Получить(0));
	ЗначениеВРеквизитФормы(ДеревоСтатей, "ДеревоСтатейДляВыбора");   
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
Процедура ОбойтиДеревоСтатейНаСервере(Статья)
	
	Если Статья.Ссылка.ЭтоГруппа ИЛИ Статья.Строки.Количество() > 0 Тогда
		Для Каждого Статья0 ИЗ Статья.Строки Цикл
			ОбойтиДеревоСтатейНаСервере(Статья0);
		КонецЦикла
	Иначе
		Если Статья.Пометка = 1 Тогда
			ИзменитьПометкуГруппыСтатейНаСервере(Статья.Родитель);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ИзменитьПометкуГруппыСтатейНаСервере(Статья)
	Если Статья = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	
	МассивПометок = Статья.Строки.НайтиСтроки(Новый Структура("Пометка", 1), Ложь);
	Если МассивПометок.Количество() = Статья.Строки.Количество() Тогда
		Статья.Пометка = 1;
	Иначе
		МассивПометок = Статья.Строки.НайтиСтроки(Новый Структура("Пометка", 0), Ложь);
		Если МассивПометок.Количество() = Статья.Строки.Количество() Тогда
			Статья.Пометка = 0;
		Иначе
			Статья.Пометка = 2;
		КонецЕсли;
	КонецЕсли;
	ИзменитьПометкуГруппыСтатейНаСервере(Статья.Родитель)
КонецПроцедуры 

&НаКлиенте
Процедура ДеревоСтатейДляВыбораПометкаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ДеревоСтатейДляВыбора.ТекущиеДанные;
	
	Если ТекущиеДанные.Пометка = 2 Тогда
		ТекущиеДанные.Пометка = 0;
	КонецЕсли;
	
	//Если НЕ ПроверитьИзменениеРоли(ТекущиеДанные, ТекущиеДанные.Пометка) Тогда
	//	ТекущиеДанные.Пометка = 0;
	//	Возврат;
	//КонецЕсли; 
	
	ИзменитьПометку(ТекущиеДанные, ТекущиеДанные.Пометка);
	ИзменитьПометкуГруппыСтатей(ТекущиеДанные.ПолучитьРодителя());
	
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПометку(ЭлементДерева, Пометка)
	
	КоллекцияПодчиненныхЭлементов = ЭлементДерева.ПолучитьЭлементы();
	Для Каждого ПодчиненныйЭлемент Из КоллекцияПодчиненныхЭлементов Цикл
			ИзменитьПометку(ПодчиненныйЭлемент, Пометка);
//		Если ПроверитьИзменениеРоли(ПодчиненныйЭлемент, Пометка) Тогда
			ПодчиненныйЭлемент.Пометка = Пометка;
//		КонецЕсли; 
	КонецЦикла;	
	
	Если ТипЗнч(ЭлементДерева) = Тип("ДанныеФормыЭлементКоллекции") Тогда
		ЭлементДерева.Пометка = Пометка;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьПометкуГруппыСтатей(ЭлементДерева)
	
	Если ЭлементДерева = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоПомеченныхЭлементов = 0;
	КоллекцияПодчиненныхЭлементов = ЭлементДерева.ПолучитьЭлементы();
	Для Каждого ПодчиненныйЭлемент Из КоллекцияПодчиненныхЭлементов Цикл
		Если ПодчиненныйЭлемент.Пометка > 0  Тогда
			КоличествоПомеченныхЭлементов = КоличествоПомеченныхЭлементов + ПодчиненныйЭлемент.Пометка;
		КонецЕсли; 
	КонецЦикла;	
	
	Если КоличествоПомеченныхЭлементов = 0 Тогда
		ЭлементДерева.Пометка = 0;
	ИначеЕсли КоличествоПомеченныхЭлементов = КоллекцияПодчиненныхЭлементов.Количество() Тогда
		ЭлементДерева.Пометка = 1;
	Иначе
		ЭлементДерева.Пометка = 2;
	КонецЕсли;
	
	ИзменитьПометкуГруппыСтатей(ЭлементДерева.ПолучитьРодителя());
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВсеГруппы(Команда)
	КоллекцияГруппСтатей = ДеревоСтатейДляВыбора.ПолучитьЭлементы();
	Для каждого ГруппаСтатей Из КоллекцияГруппСтатей Цикл
		Элементы.ДеревоСтатейДляВыбора.Развернуть(ГруппаСтатей.ПолучитьИдентификатор());
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура СвернутьВсеГруппы(Команда)
	КоллекцияГруппСтатей = ДеревоСтатейДляВыбора.ПолучитьЭлементы();
	Для каждого ГруппаСтатей Из КоллекцияГруппСтатей Цикл
		Элементы.ДеревоСтатейДляВыбора.Свернуть(ГруппаСтатей.ПолучитьИдентификатор());
	КонецЦикла; 
КонецПроцедуры
