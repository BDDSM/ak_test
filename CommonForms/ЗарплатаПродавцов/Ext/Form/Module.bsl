
Функция ЭтоПомощникУправляющего()
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Запрос.УстановитьПараметр("Сотрудник", ПараметрыСеанса.ТекущийПользователь);
	Запрос.Текст = "ВЫБРАТЬ
	               |	СоответствиеОбъектРольСрезПоследних.Объект
	               |ИЗ
	               |	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ТекущаяДата, ) КАК СоответствиеОбъектРольСрезПоследних
	               |ГДЕ
				   //+++ AK suvv 2018.06.08 ИП-00018376.01
				   //|	СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
				   |	(СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего) или СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы))
				   //--- AK suvv
	               |	И СоответствиеОбъектРольСрезПоследних.РольПользователя В
	               |			(ВЫБРАТЬ
	               |				РолиПользователейСоставРоли.Ссылка
	               |			ИЗ
	               |				Справочник.Пользователи КАК Пользователи ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	               |					ПО
	               |						Пользователи.ФизЛицо = РолиПользователейСоставРоли.Сотрудник
	               |			ГДЕ
	               |				Пользователи.Ссылка = &Сотрудник)";
				   
	Результат = Запрос.Выполнить();
	Возврат (НЕ Результат.Пустой()) ИЛИ ПараметрыСеанса.ТекущийПользователь.ПросмотрВсехМагазиновВНовойВкусвилл;
	
КонецФункции

Функция ЭтоУправляющий()
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	Запрос.УстановитьПараметр("Сотрудник", ПараметрыСеанса.ТекущийПользователь);
	Запрос.Текст = "ВЫБРАТЬ
	               |	СоответствиеОбъектРольСрезПоследних.Объект
	               |ИЗ
	               |	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(&ТекущаяДата, ) КАК СоответствиеОбъектРольСрезПоследних
	               |ГДЕ
				   //+++ AK suvv 2018.06.08 ИП-00018376.01
				   //|	СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
				   |	(СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникТерриториальногоУправляющего)
				   |    ИЛИ СоответствиеОбъектРольСрезПоследних.ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.ПомощникСтороннейРозницы))
				   //---AK suvv
	               |	И СоответствиеОбъектРольСрезПоследних.РольПользователя В
	               |			(ВЫБРАТЬ
	               |				РолиПользователей.Ссылка
	               |			ИЗ
	               |				Справочник.РолиПользователей КАК РолиПользователей
	               |			ГДЕ
	               |				РолиПользователей.Родитель В
	               |					(ВЫБРАТЬ
	               |						РолиПользователейСоставРоли.Ссылка
	               |					ИЗ
	               |						Справочник.Пользователи КАК Пользователи ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	               |							ПО
	               |								Пользователи.ФизЛицо = РолиПользователейСоставРоли.Сотрудник
	               |					ГДЕ
	               |						Пользователи.Ссылка = &Сотрудник))";
				   
	Результат = Запрос.Выполнить();
	Возврат (НЕ Результат.Пустой()) ИЛИ ПараметрыСеанса.ТекущийПользователь.ПросмотрВсехМагазиновВНовойВкусвилл;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Период.ДатаОкончания = КонецМесяца(ТекущаяДата());
	Период.ДатаНачала = НачалоМесяца(Период.ДатаОкончания);
	
	ФормаОткрытаПомощником = ЭтоПомощникУправляющего() ИЛИ ЭтоУправляющий();
	Элементы.ТорговаяТочка.Видимость = ФормаОткрытаПомощником;
	Если ФормаОткрытаПомощником Тогда
		Элементы.ТорговаяТочка.СписокВыбора.ЗагрузитьЗначения(ПолныеПрава.ПолучитьМассивМагазинов(Истина));
	КонецЕсли;	
	
	ЗаполнитьСписокПродавцов();	
	
КонецПроцедуры

Процедура ОтобразитьЗарплату(ФизЛицо)
	
	ОтчетЗарплата.Очистить();
	
	Если Не ЗначениеЗаполнено(ФизЛицо) Тогда
		Сообщить("Не выбран сотрудник");
	КонецЕсли;	
	
	КодФл = ФизЛицо.Код;
	Пока Лев(КодФл, 1) = "0" Цикл
		КодФл = Сред(КодФл, 2);
	КонецЦикла;	
	
	Макет = Обработки.РабочийСтолПродавца.ПолучитьМакет("Зарплата");
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Сотрудник = ФизЛицо;
	Область.Параметры.Период = Формат(Период.ДатаНачала, "ДФ=dd.MM.yy") + " - " + Формат(Период.ДатаОкончания, "ДФ=dd.MM.yy");
	ОтчетЗарплата.Вывести(Область);
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	
	//+++АК MIND 2017.11.14 совместно с Ольгой Диговцовой переделали на новую логику вывода
	СтрЗапрос = "if OBJECT_ID('tempdb..#res_zp') is not null drop table #res_zp
				|
				|CREATE TABLE #res_zp(
				|[Дата] [date] NULL,
				|[TT/Магазины] [nvarchar](200) NULL,
				|[Сумма Z] [int] NULL,
				|[Итого к оплате] [real] NULL,
				|[Оплата за смену] [real] NULL,
				|[Часы] [real] NULL,
				|[Бонус от стажа] [real] NULL,
				|[Доплата за ночную смену] [real] NULL,
				|[Доплата за прерработку с 9 по 10 ч.] [real] NULL,
				|[Доплата за переработку с 11 ч.] [real] NULL,
				|[Экстренный вызов] [real] NULL,
				|[Прочее] [real] NULL,
				|[Комментарий] [varchar](1000) NULL,
				|[rn] [int] NULL
				|) 
				|insert into #res_zp(Дата,[TT/Магазины],[Сумма Z],[Итого к оплате],[Оплата за смену],[Часы]
				|,[Бонус от стажа],[Доплата за ночную смену],[Доплата за прерработку с 9 по 10 ч.],[Доплата за переработку с 11 ч.]
				|,[Экстренный вызов],[Прочее],[Комментарий],[rn])
				|EXEC [SMS_REPL].[dbo].[ZP_Sotrudnik]
				|@idpr = " + ВнешниеДанные.ФорматПоля(Число(КодФл)) + ",
				|@date1 = " + ВнешниеДанные.ФорматПоля(Период.ДатаНачала, Истина) + ",
				|@date2 = " + ВнешниеДанные.ФорматПоля(Период.ДатаОкончания, Истина) + "
				|
				|select 
				|[Дата], 
				|Zp.[TT/Магазины] Магазин,
				|[Сумма Z] СуммаЗ,
				|[Итого к оплате] ИтогоЗаДень,
				|[Оплата за смену] ЗаСмену,
				|[Часы] Часы,
				|[Бонус от стажа] БонусОтСтажа,
				|[Доплата за ночную смену] ДоплатаЗаНочную,
				|[Доплата за прерработку с 9 по 10 ч.] ЗаПереработку,
				|[Доплата за переработку с 11 ч.] ЗаПереработкуС11,
				|[Экстренный вызов] ЭкстрВызов,
				|[Прочее] Прочее,
				|[Комментарий] Коммент
				|
				|from #res_zp as Zp
				|order by rn";
	
	rs = ADOСоединение.Execute(СтрЗапрос);
	Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
		rs = rs.NextRecordSet();
	КонецЦикла;
	
	Попытка
		rs.MoveFirst();
		
		Пока НЕ rs.EOF() Цикл
			Область = Макет.ПолучитьОбласть("Строка");
			Область.Параметры.Дата = rs.Fields("Дата").Value;
			Область.Параметры.Магазин = rs.Fields("Магазин").Value;
			Область.Параметры.СуммаЗ = rs.Fields("СуммаЗ").Value;
			Область.Параметры.ИтогоЗаДень = rs.Fields("ИтогоЗаДень").Value;
			Область.Параметры.ПолныйДень = rs.Fields("ЗаСмену").Value;
			Область.Параметры.Часы = rs.Fields("Часы").Value;
			Область.Параметры.БонусОтСтажа = rs.Fields("БонусОтСтажа").Value;
			Область.Параметры.ДоплатаЗаНочную = rs.Fields("ДоплатаЗаНочную").Value;
			Область.Параметры.ЗаПереработку = rs.Fields("ЗаПереработку").Value;
			Область.Параметры.ЗаПереработкуС11 = rs.Fields("ЗаПереработкуС11").Value;
			Область.Параметры.ЭкстрВызов = rs.Fields("ЭкстрВызов").Value;
			Область.Параметры.Прочее = rs.Fields("Прочее").Value;
			Область.Параметры.Коммент = rs.Fields("Коммент").Value;
			ОтчетЗарплата.Вывести(Область);
	
			//СтрокаДоб = ТабДанные.Добавить();
			//СчетчикИспользованных = 1;
			//Для н = 0 По rs.Fields.Count() - 1 Цикл
			//	Если НРег(rs.Fields(н).Name) = "rn" Тогда
			//		Продолжить;
			//	КонецЕсли;	
			//	СтрокаДоб["Реквизит" + СчетчикИспользованных] = rs.Fields(н).Value;
			//	Элементы["ТабДанныеРеквизит" + СчетчикИспользованных].Заголовок = rs.Fields(н).Name;
			//	Элементы["ТабДанныеРеквизит" + СчетчикИспользованных].Видимость = Истина;
			//	СчетчикИспользованных = СчетчикИспользованных + 1;
			//КонецЦикла;	
			
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	ADOСоединение.Close();
	
КонецПроцедуры	

&НаКлиенте
Процедура СчитатьДанные(Команда)
	
	ОтобразитьЗарплату(Элементы.ТабСотрудники.ДанныеСтроки(Элементы.ТабСотрудники.ТекущаяСтрока).Сотрудник);
	
КонецПроцедуры

&НаКлиенте
Процедура Расчитать(Команда)
	
	ОтобразитьЗарплату(Сотрудник);
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	ОтчетЗарплата.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ОтчетЗарплата.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокПродавцов()
	
	Элементы.Сотрудник.СписокВыбора.Очистить();
	
	Запрос = Новый Запрос();
	Если ФормаОткрытаПомощником Тогда
		Если Не ЗначениеЗаполнено(ТорговаяТочка) Тогда
			Возврат;
		КонецЕсли;	
		Запрос.УстановитьПараметр("ТорговаяТочка"	, ТорговаяТочка);
		Запрос.УстановитьПараметр("ДатаНач"			, Период.ДатаНачала);
		Запрос.УстановитьПараметр("ДатаКон"			, Период.ДатаОкончания);
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЗ_Запрос.Сотрудник
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТабельРаботыПродавцов.Сотрудник КАК Сотрудник
		|	ИЗ
		|		РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
		|	ГДЕ
		|		ТабельРаботыПродавцов.ТорговаяТочка = &ТорговаяТочка
		|		И ТабельРаботыПродавцов.Период МЕЖДУ &ДатаНач И &ДатаКон
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТабельРаботыКассиров.Сотрудник
		|	ИЗ
		|		РегистрСведений.ТабельРаботыКассиров КАК ТабельРаботыКассиров
		|	ГДЕ
		|		ТабельРаботыКассиров.ТорговаяТочка = &ТорговаяТочка
		|		И ТабельРаботыКассиров.Период МЕЖДУ &ДатаНач И &ДатаКон
		//+++АК mika 2018.10.12 ИП-00020112
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТабельРаботыПекарей.Сотрудник
		|	ИЗ
		|		РегистрСведений.ТабельРаботыПекарей КАК ТабельРаботыПекарей
		|	ГДЕ
		|		ТабельРаботыПекарей.ТорговаяТочка = &ТорговаяТочка
		|		И ТабельРаботыПекарей.Период МЕЖДУ &ДатаНач И &ДатаКон
		//---АК mika 
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТабельРаботыГрузчиков.Сотрудник
		|	ИЗ
		|		РегистрСведений.ТабельРаботыГрузчиков КАК ТабельРаботыГрузчиков
		|	ГДЕ
		|		ТабельРаботыГрузчиков.ТорговаяТочка = &ТорговаяТочка
		|		И ТабельРаботыГрузчиков.Период МЕЖДУ &ДатаНач И &ДатаКон) КАК ВЗ_Запрос";
	Иначе	
		Запрос.УстановитьПараметр("ТорговаяТочка"	, ПараметрыСеанса.ТорговаяТочкаПоАйпи);
		Запрос.УстановитьПараметр("Период"			, НачалоДня(ТекущаяДата()));
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТабельРаботыПродавцов.Сотрудник КАК Сотрудник
		|ИЗ
		|	РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
		|ГДЕ
		|	ТабельРаботыПродавцов.ТорговаяТочка = &ТорговаяТочка
		|	И ТабельРаботыПродавцов.Период = &Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТабельРаботыКассиров.Сотрудник
		|ИЗ
		|	РегистрСведений.ТабельРаботыКассиров КАК ТабельРаботыКассиров
		|ГДЕ
		|	ТабельРаботыКассиров.ТорговаяТочка = &ТорговаяТочка
		|	И ТабельРаботыКассиров.Период = &Период
		//+++АК mika 2018.10.12 ИП-00020112
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ТабельРаботыПекарей.Сотрудник
		|	ИЗ
		|		РегистрСведений.ТабельРаботыПекарей КАК ТабельРаботыПекарей
		|	ГДЕ
		|		ТабельРаботыПекарей.ТорговаяТочка = &ТорговаяТочка
		|		И ТабельРаботыПекарей.Период = &Период
		//---АК mika
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТабельРаботыГрузчиков.Сотрудник
		|ИЗ
		|	РегистрСведений.ТабельРаботыГрузчиков КАК ТабельРаботыГрузчиков
		|ГДЕ
		|	ТабельРаботыГрузчиков.ТорговаяТочка = &ТорговаяТочка
		|	И ТабельРаботыГрузчиков.Период = &Период";
	КонецЕсли;	
	
				   
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Элементы.Сотрудник.СписокВыбора.Добавить(Выборка.Сотрудник);
	КонецЦикла;
	
КонецПроцедуры	

&НаКлиенте
Процедура ТорговаяТочкаПриИзменении(Элемент)
	
	ЗаполнитьСписокПродавцов();
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;  //ZEZA 2018.06.12. Закрываем открытие карточки по просьбе Скворцова
	
КонецПроцедуры
