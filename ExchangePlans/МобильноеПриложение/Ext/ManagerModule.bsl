Процедура ЗарегистрироватьИзмененияУзла(Ссылка, ТолькоШК = Ложь) Экспорт
	
	//+++АК SHEP 20160824: регистрируем только нужное
	ПрофилиИспользования_SHEP = Новый Массив;
	ПрофилиИспользования_SHEP.Добавить(ПредопределенноеЗначение("Справочник.МП_ПрофилиИспользования.Строитель"));
	ПрофилиИспользования_SHEP.Добавить(ПредопределенноеЗначение("Справочник.МП_ПрофилиИспользования.ПлановыйАссортимент"));
	ПрофилиИспользования_SHEP.Добавить(ПредопределенноеЗначение("Справочник.МП_ПрофилиИспользования.НовыеТоварыТехнолог"));
	ПрофилиИспользования_SHEP.Добавить(ПредопределенноеЗначение("Справочник.МП_ПрофилиИспользования.НовыеТоварПостановщикЗадач"));
	
	ПрофилиИспользованияПлановыйАссортимент = Новый Массив;
	ПрофилиИспользованияПлановыйАссортимент.Добавить(ПредопределенноеЗначение("Справочник.МП_ПрофилиИспользования.ПлановыйАссортимент"));
	ПрофилиИспользованияПлановыйАссортимент.Добавить(ПредопределенноеЗначение("Справочник.МП_ПрофилиИспользования.НовыеТоварыТехнолог"));
	ПрофилиИспользованияПлановыйАссортимент.Добавить(ПредопределенноеЗначение("Справочник.МП_ПрофилиИспользования.НовыеТоварПостановщикЗадач"));
	
	ТекущийПрофиль = Ссылка.Профиль;
	ТекущийПрофиль_SHEP = (ПрофилиИспользования_SHEP.Найти(ТекущийПрофиль) <> Неопределено);
	ТекущийПрофильПлановыйАссортимент = (ПрофилиИспользованияПлановыйАссортимент.Найти(ТекущийПрофиль) <> Неопределено);
	//---АК SHEP 20160824
	ТекМагазин = Ссылка.Магазин;
	
	Если НЕ ТолькоШК И (Ссылка.Профиль = Справочники.МП_ПрофилиИспользования.Продавец ИЛИ Ссылка.Профиль = Справочники.МП_ПрофилиИспользования.ПустаяСсылка())
		И ЗначениеЗаполнено(ТекМагазин) Тогда

		ПланыОбмена.УдалитьРегистрациюИзменений(Ссылка);
		
		
		// Задачи
		//Запрос = Новый Запрос;
		//Запрос.Текст = 
		//"ВЫБРАТЬ
		//|	МП_ЗадачаМагазина.Ссылка
		//|ИЗ
		//|	Документ.МП_ЗадачаМагазина КАК МП_ЗадачаМагазина
		//|ГДЕ
		//|	МП_ЗадачаМагазина.Магазин <> &Магазин";
		//Запрос.УстановитьПараметр("Магазин", ТекМагазин);
		//
		//Выборка = Запрос.Выполнить().Выбрать();
		//Пока Выборка.Следующий() Цикл
		//	ПланыОбмена.УдалитьРегистрациюИзменений(Ссылка, Выборка.Ссылка);
		//КонецЦикла;

		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МП_ЗадачаМагазина.Ссылка
		|ИЗ
		|	Документ.МП_ЗадачаМагазина КАК МП_ЗадачаМагазина
		|ГДЕ
		|	МП_ЗадачаМагазина.Магазин = &Магазин
		|	И МП_ЗадачаМагазина.Дата >= &Дата";
		
		Запрос.УстановитьПараметр("Магазин", ТекМагазин);
		Запрос.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата()));
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ПланыОбмена.ЗарегистрироватьИзменения(Ссылка, Выборка.Ссылка);
		КонецЦикла;
		
		//// Фотографии к задачам
		//Запрос = Новый Запрос;
		//Запрос.Текст = 
		//"ВЫБРАТЬ
		//|	МП_ФотографииКЗадачам.Ссылка
		//|ИЗ
		//|	Справочник.МП_ФотографииКЗадачам КАК МП_ФотографииКЗадачам
		//|ГДЕ
		//|	МП_ФотографииКЗадачам.Задача.Магазин <> &Магазин";
		//Запрос.УстановитьПараметр("Магазин", ТекМагазин);
		//
		//Выборка = Запрос.Выполнить().Выбрать();
		//Пока Выборка.Следующий() Цикл
		//	ПланыОбмена.УдалитьРегистрациюИзменений(Ссылка, Выборка.Ссылка);
		//КонецЦикла;

		//Запрос = Новый Запрос;
		//Запрос.Текст = 
		//"ВЫБРАТЬ
		//|	МП_ФотографииКЗадачам.Ссылка
		//|ИЗ
		//|	Справочник.МП_ФотографииКЗадачам КАК МП_ФотографииКЗадачам
		//|ГДЕ
		//|	МП_ФотографииКЗадачам.Задача.Магазин = &Магазин";
		//Запрос.УстановитьПараметр("Магазин", ТекМагазин);
		//
		//Выборка = Запрос.Выполнить().Выбрать();
		//Пока Выборка.Следующий() Цикл
		//	ПланыОбмена.ЗарегистрироватьИзменения(Ссылка, Выборка.Ссылка);
		//КонецЦикла;

	КонецЕсли;  
	//АК БЕЛН 22.05.2017+
	Если НЕ ТолькоШК И (Ссылка.Профиль = Справочники.МП_ПрофилиИспользования.Продавец
		ИЛИ (Ссылка.Профиль = Справочники.МП_ПрофилиИспользования.ПустаяСсылка() И ЗначениеЗаполнено(ТекМагазин)) ИЛИ
			Ссылка.Профиль = Справочники.МП_ПрофилиИспользования.ИсполнительЗаявокНаРемонт) Тогда

		
		//ТекМагазин = Ссылка.Магазин;
		
		// Задачи
			Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗаявкаНаРемонт.Ссылка
		|ИЗ
		|	Документ.ЗаявкаНаРемонт КАК ЗаявкаНаРемонт
		|ГДЕ
		|	ЗаявкаНаРемонт.Магазин = &Магазин";
		
		Запрос.УстановитьПараметр("Магазин", ТекМагазин);
		Запрос.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата()));
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ПланыОбмена.ЗарегистрироватьИзменения(Ссылка, Выборка.Ссылка);
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СрочностьВыполненияЗаявкиНаРемонт.Ссылка
		|ИЗ
		|	Справочник.СрочностьВыполненияЗаявкиНаРемонт КАК СрочностьВыполненияЗаявкиНаРемонт";
		
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ПланыОбмена.ЗарегистрироватьИзменения(Ссылка, Выборка.Ссылка);
		КонецЦикла;
	КонецЕсли;
	//АК БЕЛН 22.05.2017-
	
	Если НЕ ТекущийПрофиль_SHEP Тогда // все с авторегистрацией нам не нужны
		Для Каждого Элемент Из Метаданные.ПланыОбмена.МобильноеПриложение.Состав Цикл
			Если Элемент.АвтоРегистрация=АвтоРегистрацияИзменений.Разрешить И (НЕ ТолькоШК ИЛИ Элемент.Метаданные.ПолноеИмя()="РегистрСведений.ШтриховыеКоды") Тогда
				ПланыОбмена.ЗарегистрироватьИзменения(Ссылка, Элемент.Метаданные);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Номенклатура
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	                      |	ШтриховыеКоды.Номенклатура
	                      |ИЗ
	                      |	РегистрСведений.ШтриховыеКоды КАК ШтриховыеКоды
	                      |ГДЕ
	                      |	НЕ ШтриховыеКоды.Номенклатура.Выведена
	                      |	И НЕ ШтриховыеКоды.Номенклатура.СлужебныйТовар");

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ПланыОбмена.ЗарегистрироватьИзменения(Ссылка, Выборка.Номенклатура);
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура.Ссылка КАК Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.ЭтоГруппа ";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Номенклатура) Тогда
			ПланыОбмена.ЗарегистрироватьИзменения(Ссылка, Выборка.Номенклатура);
		КонецЕсли;
	КонецЦикла;

	//// Единицы
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ РАЗЛИЧНЫЕ
	//|	ШтриховыеКоды.ЕдиницаИзмерения
	//|ИЗ
	//|	РегистрСведений.ШтриховыеКоды КАК ШтриховыеКоды";
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	Если ЗначениеЗаполнено(Выборка.ЕдиницаИзмерения) Тогда
	//		ПланыОбмена.ЗарегистрироватьИзменения(Ссылка, Выборка.ЕдиницаИзмерения);
	//	КонецЕсли;
	//КонецЦикла;

	// Характеристики
	Если НЕ ТекущийПрофиль_SHEP Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
		                      |	ШтриховыеКоды.Характеристика
		                      |ИЗ
		                      |	РегистрСведений.ШтриховыеКоды КАК ШтриховыеКоды
		                      |ГДЕ
		                      |	НЕ ШтриховыеКоды.Характеристика.Владелец.Выведена
		                      |	И НЕ ШтриховыеКоды.Характеристика.Владелец.СлужебныйТовар
		                      |	И НЕ ШтриховыеКоды.Характеристика.Неактивная");
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если ЗначениеЗаполнено(Выборка.Характеристика) Тогда
				ПланыОбмена.ЗарегистрироватьИзменения(Ссылка, Выборка.Характеристика);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	//Поставщики
	Если НЕ ТекущийПрофиль_SHEP ИЛИ ТекущийПрофильПлановыйАссортимент Тогда // для планового ассортимента нужны
		Если НЕ ЗначениеЗаполнено(Ссылка.Магазин) Тогда
			Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
				                      |	ЗначенияСвойствОбъектов.Значение
				                      |ИЗ
				                      |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
				                      |ГДЕ
				                      |	ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель)
				                      |	И ЗначенияСвойствОбъектов.Объект.Неактивная = ЛОЖЬ");
			
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				Если ЗначениеЗаполнено(Выборка.Значение) Тогда
					ПланыОбмена.ЗарегистрироватьИзменения(Ссылка, Выборка.Значение);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли; 
	КонецЕсли;
	
	// Задачи технологам
	Если Ссылка.Профиль = Справочники.МП_ПрофилиИспользования.Технолог  Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	МП_ЗадачаТехнолога.Ссылка
		                      |ИЗ
		                      |	Документ.МП_ЗадачаТехнолога КАК МП_ЗадачаТехнолога
		                      |ГДЕ
		                      |	НЕ МП_ЗадачаТехнолога.Закрыта
		                      |	И МП_ЗадачаТехнолога.ВидПроверяемойОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПроверяемыхТехнологом.Поставка)");
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ПланыОбмена.ЗарегистрироватьИзменения(Ссылка, Выборка.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
	Если ТекущийПрофильПлановыйАссортимент Тогда
		// Задачи на новые товары
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	МП_ЗадачаНаНовыйТовар.Ссылка
			|ИЗ
			|	Документ.МП_ЗадачаНаНовыйТовар КАК МП_ЗадачаНаНовыйТовар
			|ГДЕ
			|	НЕ МП_ЗадачаНаНовыйТовар.ПометкаУдаления
			|	И МП_ЗадачаНаНовыйТовар.СтатусЗадачи <> ЗНАЧЕНИЕ(Перечисление.СтатусыЗадачНаНовыйТовар.Закрыто)");
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ПланыОбмена.ЗарегистрироватьИзменения(Ссылка, Выборка.Ссылка);
		КонецЦикла;
		
		// плановый ассортимент
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	ПлановыйАссортимент.Ссылка
			|ИЗ
			|	Справочник.ПлановыйАссортимент КАК ПлановыйАссортимент
			|ГДЕ
			|	НЕ ПлановыйАссортимент.ПометкаУдаления");
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ПланыОбмена.ЗарегистрироватьИзменения(Ссылка, Выборка.Ссылка);
		КонецЦикла;
		
		// отчёт по новому товару
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	МП_ОтчетПоНовомуТовару.Ссылка
			|ИЗ
			|	Документ.МП_ОтчетПоНовомуТовару КАК МП_ОтчетПоНовомуТовару
			|ГДЕ
			|	НЕ МП_ОтчетПоНовомуТовару.ПометкаУдаления");
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ПланыОбмена.ЗарегистрироватьИзменения(Ссылка, Выборка.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
	//СТРОИТЕЛИ
	Если ТекущийПрофиль_SHEP И НЕ ТекущийПрофильПлановыйАссортимент Тогда
		// События строителей
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	МП_СобытияСтроителей.Ссылка
			|ИЗ
			|	Справочник.МП_СобытияСтроителей КАК МП_СобытияСтроителей
			|ГДЕ
			|	НЕ МП_СобытияСтроителей.ПометкаУдаления");
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ПланыОбмена.ЗарегистрироватьИзменения(Ссылка, Выборка.Ссылка);
		КонецЦикла;
		
		// Задания строителей
		Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	МП_ЗаданиеСтроителей.Ссылка
			|ИЗ
			|	Документ.МП_ЗаданиеСтроителей КАК МП_ЗаданиеСтроителей
			|ГДЕ
			|	НЕ МП_ЗаданиеСтроителей.ПометкаУдаления
			|	И МП_ЗаданиеСтроителей.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыСтроительства.Завершено)
			|	И МП_ЗаданиеСтроителей.Проект = ЛОЖЬ");
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ПланыОбмена.ЗарегистрироватьИзменения(Ссылка, Выборка.Ссылка);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьНовыйКодБлокировщика() Экспорт

	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МобильноеПриложение.КодБлокировщика
	|ИЗ
	|	ПланОбмена.МобильноеПриложение КАК МобильноеПриложение");
	

	СуществующиеКоды = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("КодБлокировщика");

	Если СуществующиеКоды.Количество() = 10000 Тогда
		Сообщить("Необходимо увеличить число символов кода блокировщика!");
		Возврат ("0000");
	КонецЕсли; 
	
	ГСЧ = Новый ГенераторСлучайныхЧисел(ТекущаяДата() - НачалоДня(ТекущаяДата()));
	НовыйКод = ГСЧ.СлучайноеЧисло(0, 9999); 
	
	Пока СуществующиеКоды.Найти(Формат(НовыйКод, "ЧЦ=4; ЧВН=; ЧГ=")) <> Неопределено Цикл
		Если НовыйКод = 9999 Тогда
			НовыйКод = 0;
		Иначе
			НовыйКод = НовыйКод + 1;
		КонецЕсли; 
	КонецЦикла;  

	Возврат Формат(НовыйКод, "ЧЦ=4; ЧВН=; ЧГ=");

КонецФункции

