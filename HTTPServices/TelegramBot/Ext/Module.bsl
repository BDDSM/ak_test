//+++АК KOPA +Модуль 2018.01.28 ИП-00017767
//Модуль предназначен для получения/изменения данных из Телеграм бота

Функция TelegramBotPost(Запрос)
	УстановитьПривилегированныйРежим(Истина);
	Ответ = Новый HTTPСервисОтвет(200);
	Данные = ТелеграмТехБот.ПрочитатьJSONИзСтроки(Запрос.ПолучитьТелоКакСтроку());	
	Результат = ТелеграмТехБот.ПолучитьОтвет(Данные);	
	Данные = ТелеграмТехБот.ЗаписатьJSONВСтроку(Результат);	
	Ответ.УстановитьТелоИзСтроки(Данные);	
	УстановитьПривилегированныйРежим(Ложь);	
	Возврат Ответ;
КонецФункции

Функция УправлениеРазвитиемPost(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	
	Данные = ТелеграмУправлениеРазвитием.ПолучитьОтвет(Запрос.ПолучитьТелоКакСтроку());
	Ответ.УстановитьТелоИзСтроки(Данные);
	
	Возврат Ответ;
КонецФункции

//+++АК KOPA 2018.03.27 ИП-00018018
Функция КлассифицирующаяСистемаPost(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	
	Данные = ТелеграмТехБот.ПрочитатьJSONИзСтроки(Запрос.ПолучитьТелоКакСтроку());
	
	Результат = Новый Структура;
	
	Если Данные.Свойство("Магазины") и Данные.Магазины Тогда
		Результат.Вставить("Магазины", СписокМагазинов(Данные)); 
	КонецЕсли;
	
	Если Данные.Свойство("Персонал") и Данные.Персонал Тогда	
	    Результат.Вставить("Персонал", СписокПерсонал(Данные));
	КонецЕсли;	
		
	Строка = ТелеграмТехБот.ЗаписатьJSONВСтроку(Результат);
	
	Ответ.УстановитьТелоИзСтроки(Строка);
	
	Возврат Ответ;
КонецФункции//---АК KOPA

Функция СписокПерсонал(Данные)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТабельРаботыКассировСрезПоследних.Сотрудник
		|ПОМЕСТИТЬ втПерсонал
		|ИЗ
		|	РегистрСведений.ТабельРаботыКассиров.СрезПоследних(&Период, ) КАК ТабельРаботыКассировСрезПоследних
		|ГДЕ
		|	ТабельРаботыКассировСрезПоследних.Отсутствие = &ПустоеОтсутствие
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТабельРаботыПродавцовСрезПоследних.Сотрудник
		|ИЗ
		|	РегистрСведений.ТабельРаботыПродавцов.СрезПоследних(&Период, ) КАК ТабельРаботыПродавцовСрезПоследних
		|ГДЕ
		|	ТабельРаботыПродавцовСрезПоследних.Отсутствие = &ПустоеОтсутствие
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 100000
		|	втПерсонал.Сотрудник,
		|	втПерсонал.Сотрудник.Наименование КАК Наименование
		|ИЗ
		|	втПерсонал КАК втПерсонал";
	
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	Запрос.УстановитьПараметр("ПустоеОтсутствие", Перечисления.ВидыОтсутствия.ПустаяСсылка());
	
	Если Данные.Свойство("Первые") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "100000", Формат(Данные.Первые, "ЧГ="));
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаПерсонал = РезультатЗапроса.Выбрать();
	
	МассивПерсонал = Новый Массив;
	
	Пока ВыборкаПерсонал.Следующий() Цикл
		Персонал = Новый Структура("УИД, Наименование", "" + ВыборкаПерсонал.Сотрудник.УникальныйИдентификатор(), ВыборкаПерсонал.Наименование);
		МассивПерсонал.Добавить(Персонал);	
	КонецЦикла;
	
	Возврат МассивПерсонал;
КонецФункции

Функция СписокМагазинов(Данные)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 100000
		|	СтруктурныеЕдиницы.Ссылка,
		|	СтруктурныеЕдиницы.Наименование,
		|	СтруктурныеЕдиницы.НомерТочки,
		|	СтруктурныеЕдиницы.Адрес
		|ИЗ
		|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		|ГДЕ
		|	НЕ СтруктурныеЕдиницы.ПометкаУдаления
		|	И (СтруктурныеЕдиницы.ДатаЗакрытия > &Период
		|			ИЛИ СтруктурныеЕдиницы.ДатаЗакрытия = &ПустаяДата)
		|	И НЕ СтруктурныеЕдиницы.НомерТочки = 0";
	
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.УстановитьПараметр("ПустаяДата", '00010101');
	Запрос.УстановитьПараметр("ПустоеОтсутствие", Перечисления.ВидыОтсутствия.ПустаяСсылка());
	
	Если Данные.Свойство("Первые") Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "100000", Формат(Данные.Первые, "ЧГ="));
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаМагазины = РезультатЗапроса.Выбрать();
	
	МассивМагазины = Новый Массив;
	
	Пока ВыборкаМагазины.Следующий() Цикл
		Магазин = Новый Структура("УИД, Наименование, НомерТочки, Адрес", "" + ВыборкаМагазины.Ссылка.УникальныйИдентификатор(), ВыборкаМагазины.Наименование, ВыборкаМагазины.НомерТочки, ВыборкаМагазины.Адрес);
		МассивМагазины.Добавить(Магазин);	
	КонецЦикла;
	
	Возврат МассивМагазины;
КонецФункции

Функция TelegramBotGet(Запрос)
	УстановитьПривилегированныйРежим(Истина);
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки("Ok");
	УстановитьПривилегированныйРежим(Ложь);
	Возврат Ответ;
КонецФункции

Функция PAideasМетод1(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки("Ok");
	Возврат Ответ;
КонецФункции
