Перем СписПериодичностьОтставания;

//ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

//Обработчик события ПриОткрытии формы
Процедура ПриОткрытии()
	//Периодичность отставания задаем либо в днях, либо в месяцах - список выбора ограничен
	ЭлементыФормы.ПериодичностьОтставанияНачалоИнтервала.СписокВыбора 	= СписПериодичностьОтставания;
	ЭлементыФормы.ПериодичностьОтставанияКонецИнтервала.СписокВыбора 	= СписПериодичностьОтставания;

	УстановитьДоступность();
	ОбновитьНадписьИнтервал();
КонецПроцедуры

//Обработчик события ПриИзменении для реквизитов, определяющих дату начала интервала
Процедура ДатаНачалаДопроведенияПриИзменении(Элемент)
	ОбновитьНадписьИнтервал();
КонецПроцедуры

//Обработчик события ПриИзменении для реквизитов, определяющих дату окончания интервала
Процедура ДатаКонцаДопроведенияПриИзменении(Элемент)
	ОбновитьНадписьИнтервал();
КонецПроцедуры

//Обработчик события ПриИзменении для способа определения дат начала и окончания интервала
Процедура ПереключательПриИзменении(Элемент)
	Если РассчитыватьНачалоИнтервала И НЕ ЗначениеЗаполнено(ПериодичностьОтставанияНачалоИнтервала) Тогда
		ПериодичностьОтставанияНачалоИнтервала = Перечисления.Периодичность.Месяц;
	КонецЕсли;
	Если РассчитыватьКонецИнтервала И НЕ ЗначениеЗаполнено(ПериодичностьОтставанияКонецИнтервала) Тогда
		ПериодичностьОтставанияКонецИнтервала = Перечисления.Периодичность.Месяц;
	КонецЕсли;

	УстановитьДоступность();
	ОбновитьНадписьИнтервал();
КонецПроцедуры


//ОБРАБОТЧИКИ НАЖАТИЯ НА КНОПКИ КОМАНДНЫХ ПАНЕЛЕЙ

//Обработчик нажатия на кнопку ОК
Процедура ОсновныеДействияФормыИзменитьИнтервал(Кнопка)
	Перем мДатаНач, мДатаКон;
	//Проверим корректность периода
	Если РассчитыватьНачалоИнтервала Тогда
		мДатаНач = 	ОтложенноеПроведениеДокументов.ОтсчитатьНазадКоличествоПериодов(ТекущаяДата(),
						ПериодичностьОтставанияНачалоИнтервала,
						КоличествоПериодовОтставанияНачалоИнтервала,
						Истина);
	Иначе
		мДатаНач = 	ДатаНачалаДопроведения;
	КонецЕсли;
	Если РассчитыватьКонецИнтервала Тогда
		мДатаКон = 	ОтложенноеПроведениеДокументов.ОтсчитатьНазадКоличествоПериодов(ТекущаяДата(),
						ПериодичностьОтставанияКонецИнтервала,
						КоличествоПериодовОтставанияКонецИнтервала,
						Ложь);
	Иначе
		мДатаКон = 	ДатаКонцаДопроведения;
	КонецЕсли;
	Если мДатаНач > мДатаКон Тогда
		Предупреждение("Неверно указан период: дата начала позже даты окончания",,"Настройка периода допроведения");
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("РассчитыватьНачалоИнтервала",				РассчитыватьНачалоИнтервала);
	Результат.Вставить("РассчитыватьКонецИнтервала",				РассчитыватьКонецИнтервала);
	Результат.Вставить("ДатаНачалаДопроведения",					мДатаНач);
	Результат.Вставить("ДатаКонцаДопроведения",						мДатаКон);
	Результат.Вставить("КоличествоПериодовОтставанияНачалоИнтервала",КоличествоПериодовОтставанияНачалоИнтервала);
	Результат.Вставить("ПериодичностьОтставанияНачалоИнтервала",	ПериодичностьОтставанияНачалоИнтервала);
	Результат.Вставить("КоличествоПериодовОтставанияКонецИнтервала",КоличествоПериодовОтставанияКонецИнтервала);
	Результат.Вставить("ПериодичностьОтставанияКонецИнтервала",		ПериодичностьОтставанияКонецИнтервала);
	
	ЭтаФорма.Закрыть(Результат);
КонецПроцедуры


//СЛУЖЕБНЫЕ

//Процедура управления доступностью и отметкой незаполненного элементов формы
Процедура УстановитьДоступность()
	ЭлементыФормы.ДатаНачалаДопроведения.Доступность 						= НЕ РассчитыватьНачалоИнтервала;
	ЭлементыФормы.ПериодичностьОтставанияНачалоИнтервала.Доступность 		= РассчитыватьНачалоИнтервала;
	ЭлементыФормы.КоличествоПериодовОтставанияНачалоИнтервала.Доступность 	= РассчитыватьНачалоИнтервала;
	ЭлементыФормы.НадписьДоТекущейДатыНачало.Доступность 					= РассчитыватьНачалоИнтервала; 

	ЭлементыФормы.ДатаКонцаДопроведения.Доступность 						= НЕ РассчитыватьКонецИнтервала;
	ЭлементыФормы.ПериодичностьОтставанияКонецИнтервала.Доступность 		= РассчитыватьКонецИнтервала;
	ЭлементыФормы.КоличествоПериодовОтставанияКонецИнтервала.Доступность 	= РассчитыватьКонецИнтервала;
	ЭлементыФормы.НадписьДоТекущейДатыКонец.Доступность 					= РассчитыватьКонецИнтервала;
	
	//Установка отметок незаполненного
	Если РассчитыватьНачалоИнтервала Тогда
		ЭлементыФормы.ПериодичностьОтставанияНачалоИнтервала.АвтоОтметкаНезаполненного = Истина;
		ЭлементыФормы.ДатаНачалаДопроведения.АвтоОтметкаНезаполненного = Ложь;
		ЭлементыФормы.ДатаНачалаДопроведения.ОтметкаНезаполненного = Ложь;
	Иначе
		ЭлементыФормы.ПериодичностьОтставанияНачалоИнтервала.АвтоОтметкаНезаполненного = Ложь;
		ЭлементыФормы.ПериодичностьОтставанияНачалоИнтервала.ОтметкаНезаполненного = Ложь;
		ЭлементыФормы.ДатаНачалаДопроведения.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;
	Если РассчитыватьКонецИнтервала Тогда
		ЭлементыФормы.ПериодичностьОтставанияКонецИнтервала.АвтоОтметкаНезаполненного = Истина;
		ЭлементыФормы.ДатаКонцаДопроведения.АвтоОтметкаНезаполненного = Ложь;
		ЭлементыФормы.ДатаКонцаДопроведения.ОтметкаНезаполненного = Ложь;
	Иначе
		ЭлементыФормы.ПериодичностьОтставанияКонецИнтервала.АвтоОтметкаНезаполненного = Ложь;
		ЭлементыФормы.ПериодичностьОтставанияКонецИнтервала.ОтметкаНезаполненного = Ложь;
		ЭлементыФормы.ДатаКонцаДопроведения.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;

КонецПроцедуры

//Процедура обновления надписи с установленным периодом
Процедура ОбновитьНадписьИнтервал()
	Перем мДатаНач, мДатаКон;
	Если РассчитыватьНачалоИнтервала Тогда
		мДатаНач = 	ОтложенноеПроведениеДокументов.ОтсчитатьНазадКоличествоПериодов(ТекущаяДата(),
						ПериодичностьОтставанияНачалоИнтервала,
						КоличествоПериодовОтставанияНачалоИнтервала,
						Истина);
	Иначе
		мДатаНач = 	ДатаНачалаДопроведения;
	КонецЕсли;
	Если РассчитыватьКонецИнтервала Тогда
		мДатаКон = 	ОтложенноеПроведениеДокументов.ОтсчитатьНазадКоличествоПериодов(ТекущаяДата(),
						ПериодичностьОтставанияКонецИнтервала,
						КоличествоПериодовОтставанияКонецИнтервала,
						Ложь);
	Иначе
		мДатаКон = 	ДатаКонцаДопроведения;
	КонецЕсли;
	ЭлементыФормы.НадписьУстановленПериод.Заголовок = "Установлен период: " + Формат(мДатаНач,"ДЛФ=D") + 
													" - " + Формат(мДатаКон,"ДЛФ=D");


КонецПроцедуры


СписПериодичностьОтставания = Новый СписокЗначений;
СписПериодичностьОтставания.Добавить(Перечисления.Периодичность.День);
СписПериодичностьОтставания.Добавить(Перечисления.Периодичность.Месяц);