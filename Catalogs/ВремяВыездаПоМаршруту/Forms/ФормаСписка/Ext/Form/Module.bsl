
&НаКлиенте
Процедура Разбить(Команда)
	Если Не Время2>Время1 Тогда
		Сообщить("Некорректный интервал");
		Возврат;
	КонецЕсли; 
	Если КоличествоМаршрутов=0 Тогда
		Сообщить("Задайте количество маршрутов");
		Возврат;
	КонецЕсли; 
	РазбитьСервер();
	Элементы.Список.Обновить();	
КонецПроцедуры

&НаСервере
Процедура РазбитьСервер()
	Инт=Время2-Время1;
	Отрезок=Окр(Инт/(КоличествоМаршрутов));
	//ВремяМарш=Время1;
	//ОбъектСпр=Справочники.ВремяВыездаПоМаршруту.СоздатьЭлемент();
	//ОбъектСпр.ВремяВыезда=ВремяМарш;
	//ОбъектСпр.Наименование=Строка(Формат(ВремяМарш,"ДФ=HH:mm:ss"));
	//Попытка
	//	ОбъектСпр.Записать();
	//Исключение
	//КонецПопытки;
	
	
	Для Сч=1 По КоличествоМаршрутов Цикл
		//ВремяМарш=?(Сч=КоличествоМаршрутов,Время2,Время1+Сч*Отрезок);
		ВремяМарш=Время1+Сч*Отрезок;
		Если ВремяМарш>Время2 Тогда
			Прервать;
		КонецЕсли; 
		ОбъектСпр=Справочники.ВремяВыездаПоМаршруту.СоздатьЭлемент();
		ОбъектСпр.ВремяВыезда=ВремяМарш;
		ОбъектСпр.Наименование=Строка(Формат(ВремяМарш,"ДФ=HH:mm:ss"));
		Попытка
			ОбъектСпр.Записать();
		Исключение
		КонецПопытки;
	КонецЦикла; 
КонецПроцедуры

&НаСервере
Процедура УстановитьОтбор()
	Кол= Список.Отбор.Элементы.Количество();
	Для Сч=0 По Кол-1 Цикл
		Список.Отбор.Элементы.Удалить(Кол-1-Сч);	
	КонецЦикла; 
	Если Время1<Время2 Тогда
	
		ОснРежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВремяВыезда");
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = Время1;
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;               
		ЭлементОтбора.РежимОтображения = ОснРежимОтображения;
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВремяВыезда");
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = Время2;
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;               
		ЭлементОтбора.РежимОтображения = ОснРежимОтображения;
	
	КонецЕсли; 
	
КонецПроцедуры


&НаКлиенте
Процедура Время1ПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры


&НаКлиенте
Процедура Время2ПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры


&НаКлиенте
Процедура УдалитьВремя(Команда)
	Если Элементы.Список.ТекущиеДанные<>Неопределено Тогда
		УдалитьВремяСервер(Элементы.Список.ТекущиеДанные.Ссылка);
		Элементы.Список.Обновить();
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура УдалитьВремяСервер(Ссылка)
    УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Маршруты.Ссылка,
		|	Маршруты.Наименование,
		|	Маршруты.ПолноеНаименование
		|ИЗ
		|	Справочник.Маршруты КАК Маршруты
		|ГДЕ
		|	Маршруты.ПланируемоеВремяВыездаПоМаршруту = &ПланируемоеВремяВыездаПоМаршруту";

	Запрос.УстановитьПараметр("ПланируемоеВремяВыездаПоМаршруту", Ссылка);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
    Фл=Ложь;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Сообщить("Элемент используется в маршруте - "+ВыборкаДетальныеЗаписи.Наименование+" "+ВыборкаДетальныеЗаписи.ПолноеНаименование);
		Фл=Истина;
	КонецЦикла;
    Если Фл Тогда
		Возврат;
	КонецЕсли;
	ОбъектСпр=Ссылка.ПолучитьОбъект();
	ОбъектСпр.Удалить();
	
КонецПроцедуры
 