
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ПустаяСтрока(Объект.ИНН) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	Контрагенты.Ссылка КАК Контрагент
			|ИЗ
			|	Справочник.Контрагенты КАК Контрагенты
			|ГДЕ
			|	Контрагенты.ИНН = &ИНН
			|	И НЕ Контрагенты.ПометкаУдаления
			|
			|УПОРЯДОЧИТЬ ПО
			|	Контрагенты.Наименование
			|АВТОУПОРЯДОЧИВАНИЕ";

		Запрос.УстановитьПараметр("ИНН", Объект.ИНН);

		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			НайденныеКонтрагенты.Загрузить(Результат.Выгрузить());
		КонецЕсли; 
	КонецЕсли; 
	
	Элементы.НайденныеКонтрагенты.Видимость=НайденныеКонтрагенты.Количество()>0;
	Элементы.СовпадениеИНН.Доступность=НЕ ЭтаФорма.ТолькоПросмотр И
		(
		(Элементы.НайденныеКонтрагенты.Видимость И НЕ Объект.СовпадениеИНН)
		ИЛИ
		(НЕ Элементы.НайденныеКонтрагенты.Видимость И Объект.СовпадениеИНН)
		);
	//Элементы.ДекорацияНесоответствиеОтметки.Видимость=Элементы.СовпадениеИНН.Доступность;
	
	Если Объект.КоординатыОпределены тогда
		Элементы.ПросмотрНаКарте.Заголовок="На карте";
	КонецЕсли;
	
	ЗаполнитьРегионКЛАДР();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Элементы.СовпадениеИНН.Доступность Тогда
		Если Элементы.НайденныеКонтрагенты.Видимость тогда
			Текст = "Найден контрагент с совпадающим ИНН, можно поставить отметку о совпадении";
		иначе
			Текст = "Контрагент с совпадающим ИНН не найден, можно снять отметку о совпадении";
		КонецЕсли; 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст,Объект,"СовпадениеИНН");
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрНаКарте(Команда)
	
	ПараметрыПодбора = Новый Структура("ЗакрыватьПриВыборе, МножественныйВыбор", Истина, Ложь);
	ПараметрыПодбора.Вставить("Режим",					"РежимАдресПредложения");
	ПараметрыПодбора.Вставить("Наименование",			Объект.Наименование);
	ПараметрыПодбора.Вставить("Ссылка",					Объект.Ссылка);
	ПараметрыПодбора.Вставить("СтрокаКоординат",		Объект.СтрокаКоординат);
	ПараметрыПодбора.Вставить("КоординатыОпределены",	Объект.КоординатыОпределены);
	
	Если НЕ ПустаяСтрока(Объект.АдресПроизводства) тогда
		ПараметрыПодбора.Вставить("Адрес", Объект.АдресПроизводства);
	иначе
		ПараметрыПодбора.Вставить("Адрес", Объект.ЮридическийАдрес);
	КонецЕсли;
	
	ОткрытьФорму("Обработка.АК_ОтображениеНаКарте.Форма", ПараметрыПодбора, ЭтаФорма, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если (ТипЗнч(ИсточникВыбора)=Тип("УправляемаяФорма")) и (ИсточникВыбора.ИмяФормы="Обработка.АК_ОтображениеНаКарте.Форма.Форма") тогда
		Если ВыбранноеЗначение.КоординатыОпределены тогда
			Объект.КоординатыОпределены=Истина;
			Объект.СтрокаКоординат=ВыбранноеЗначение.СтрокаКоординат;
			Элементы.ПросмотрНаКарте.Заголовок="На карте";
			ЗаполнитьРегионКЛАДР();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРегионКЛАДР()
	РегионКладр=Справочники.АК_ПоступающиеПредложения.ПолучитьНаименованиеРегионаКЛАДР(Объект.КодКладр);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаWord(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаPDF(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура СтрокаКоординатОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ПросмотрНаКарте(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ТехнологПриИзменении(Элемент)
	Ответ = Вопрос("Отправить сообщение технологу?", РежимДиалогаВопрос.ОКОтмена, 0);
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		ОтправитьСообщениеТехнологу("");
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ПолучитьАдресТехнологаНаСервере(Пользователь)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	КонтактнаяИнформация.Представление,
		|	ВЫБОР
		|		КОГДА КонтактнаяИнформация.Вид = &Вид
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА КонтактнаяИнформация.Вид = &Вид2
		|					ТОГДА 1
		|				ИНАЧЕ 2
		|			КОНЕЦ
		|	КОНЕЦ КАК Приоритет
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &Объект
		|	И КонтактнаяИнформация.Тип = &Тип
		|	И КонтактнаяИнформация.Представление ПОДОБНО &ПочтовыйАдрес
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет";

	Запрос.УстановитьПараметр("Объект", Пользователь);
	Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
	Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.СлужебныйАдресЭлектроннойПочтыПользователя);
	Запрос.УстановитьПараметр("Вид2", Справочники.ВидыКонтактнойИнформации.EmailФизЛица);
	Запрос.УстановитьПараметр("ПочтовыйАдрес", "_%@_%");

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Представление;		
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ОтправитьПисьмоНаСервере(СтруктураНовогоПисьма)
	ОтправитьПоПочтеHTML(СтруктураНовогоПисьма);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщениеТехнологу(Команда)
	
	ОтправитьСообщение("Технолог");

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщение(Режим="Технолог")
перем Пользователь;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для отправки сообщения элемент справочника должен быть записан",Объект,режим);
	    возврат;
	КонецЕсли;
	
	Если Режим="Технолог" тогда
		Пользователь=Объект.Технолог;
	иначеЕсли Режим="БрендМенеджер" тогда
		Пользователь=Объект.БрендМенеджер;
	иначеЕсли Режим="УправляющийПоКачеству" тогда
		Пользователь=Объект.УправляющийПоКачеству;
	иначеЕсли Режим="РуководительПоТрейдМаркетингу" тогда
		Пользователь=Объект.РуководительПоТрейдМаркетингу;
	иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Неизвестный режим """+режим+"""");
	    возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Пользователь) тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указан пользователь",Объект,режим);
	    возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Пользователь) тогда
		
		Адрес=ПолучитьАдресТехнологаНаСервере(Пользователь);

		Если НЕ ПустаяСтрока(Адрес) Тогда
			
			СтруктураНовогоПисьма = Новый Структура;
			
			СтруктураНовогоПисьма.Вставить("Тема", "Предложение поставщика "+сокрлп(Объект.Наименование)+", "+сокрлп(Объект.ПродуктоваяКатегория+", "+сокрлп(Объект.ВидБизнеса)));
			
			СтруктураНовогоПисьма.Вставить("ВидТекста", ПредопределенноеЗначение("Перечисление.ВидыТекстовЭлектронныхПисем.HTML"));
			СписокФайловВложений = Новый СписокЗначений;
			
			СтруктураНовогоПисьма.Вставить("СписокФайловВложений",СписокФайловВложений);
			
			
			//--- формируем текст письма
			ТелоПисьма="	
			|<html>
			|<head>
			|</head>
			|<body>Текст
			|</body>
			|</html>";
			
			СтрокаПисьма="
			|<p>Текст</p>";
			
			Заголовок1="
			|<H1>Текст</H1>";
			
			Заголовок2="
			|<H2>Текст</H2>";
			
			Заголовок3="
			|<H3>Текст</H3>";
			
			
			
			Гиперссылка=ПолучитьНавигационнуюСсылку(Объект.Ссылка);
			
			ТекстПисьма="";
			ТекстПисьма=ТекстПисьма+СтрЗаменить(Заголовок2,"Текст",Сокрлп(Объект.Наименование));
			ТекстПисьма=ТекстПисьма+СтрЗаменить(Заголовок3,"Текст","Вид бизнеса");
			ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст",Сокрлп(""+Объект.ВидБизнеса));
			ТекстПисьма=ТекстПисьма+СтрЗаменить(Заголовок3,"Текст","Продуктовая категория");
			ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст",Сокрлп(""+Объект.ПродуктоваяКатегория));
			ТекстПисьма=ТекстПисьма+СтрЗаменить(Заголовок3,"Текст","Объемы производства/реализации");
			ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст",Сокрлп(""+Объект.ОбъемыПроизводстваРеализации));
			ТекстПисьма=ТекстПисьма+СтрЗаменить(Заголовок3,"Текст","Регион");
			ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст",Сокрлп(""+Объект.Регион));
			ТекстПисьма=ТекстПисьма+СтрЗаменить(Заголовок3,"Текст","Ассортимент");
			ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст",Сокрлп(""+Объект.Ассортимент));
			для Каждого Группа из Объект.НоменклатурныеГруппы цикл
				ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст",Сокрлп("• "+Группа));
			КонецЦикла;
			ТекстПисьма=ТекстПисьма+СтрЗаменить(Заголовок3,"Текст","Типы и виды упаковки");
			ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст",Сокрлп(""+Объект.ТипыИВидыУпаковки));
			ТекстПисьма=ТекстПисьма+СтрЗаменить(Заголовок3,"Текст","Доставка в Москву");
			ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст",Сокрлп(""+?(Объект.ДоставкаВМоскву,"Да","Нет")));
			ТекстПисьма=ТекстПисьма+СтрЗаменить(Заголовок3,"Текст","Производство под маркой ""Вкусвилл""");
			ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст",Сокрлп(""+?(Объект.ПроизводствоПодМаркойВВ,"Да","Нет")));
			ТекстПисьма=ТекстПисьма+СтрЗаменить(Заголовок3,"Текст","Контактное лицо");
			ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст",Сокрлп(""+Объект.КонтактноеЛицо));
			ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст","<a href=""mailto:"+Сокрлп(Объект.ЭлектроннаяПочта)+""">"+сокрлп(Объект.ЭлектроннаяПочта)+"</a>");
			ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст",Сокрлп("телефон: "+Объект.Телефон));
			ТекстПисьма=ТекстПисьма+СтрЗаменить(Заголовок3,"Текст","Основные клиент");
			ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст",Сокрлп(""+Объект.ОсновныеКлиенты));
			ТекстПисьма=ТекстПисьма+СтрЗаменить(Заголовок3,"Текст","Презентация");
			Если ПустаяСтрока(Объект.Презентация) тогда
				ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст","нет");
			иначе
				ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст","<a href="""+Сокрлп(Объект.Презентация)+""">Ссылка на презентацию</a>");
			КонецЕсли;
			ТекстПисьма=ТекстПисьма+СтрЗаменить(Заголовок3,"Текст","Адрес производства");
			ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст",Сокрлп(""+Объект.АдресПроизводства));
			ТекстПисьма=ТекстПисьма+СтрЗаменить(Заголовок3,"Текст","Руководитель");
			ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст",Сокрлп(""+Объект.Руководитель));
			ТекстПисьма=ТекстПисьма+СтрЗаменить(Заголовок3,"Текст","ИНН");
			ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст",Сокрлп(""+Объект.ИНН));
			ТекстПисьма=ТекстПисьма+СтрЗаменить(Заголовок3,"Текст","Контрагент есть в базе 1С");
			ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст",Сокрлп(""+?(Объект.СовпадениеИНН,"Да","Нет")));
			ТекстПисьма=ТекстПисьма+СтрЗаменить(Заголовок3,"Текст","Код справочника");
			ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст",Сокрлп(""+формат(Объект.Код,"ЧГ=0")));
			ТекстПисьма=ТекстПисьма+СтрЗаменить(Заголовок3,"Текст","Навигационная ссылка 1С для управляемого приложения");
			ТекстПисьма=ТекстПисьма+СтрЗаменить(СтрокаПисьма,"Текст",Сокрлп(""+Гиперссылка));
			
			ТекстПисьма=СтрЗаменить(ТелоПисьма,"Текст",ТекстПисьма);
			
			СтруктураНовогоПисьма.Вставить("Тело", ТекстПисьма);
			
			Кому = Новый СписокЗначений;
			Кому.Добавить(Адрес);		

			СтруктураНовогоПисьма.Вставить("Кому", Кому);
			Попытка
				ОтправитьПисьмоНаСервере(СтруктураНовогоПисьма);
			    ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Отправлено сообщение на "+Адрес,Объект,Режим);
			Исключение
			    Сообщить(ОписаниеОшибки());
				Возврат;
			КонецПопытки; 
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указана электронная почта",Объект,Режим);
			Возврат;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОтправитьПоПочтеHTML(СтруктураНовогоПисьма)  Экспорт
	УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоКоду("000000001");
	СпАдресов=Новый СписокЗначений;
	Для каждого ЭлСп Из СтруктураНовогоПисьма.Кому Цикл
		МассивАдресов=РазложитьСтрокуВМассивПодстрок(ЭлСп.Значение,";");	
		Для каждого Эл Из МассивАдресов Цикл
			СпАдресов.Добавить(Сокрлп(Эл));
		КонецЦикла; 
	КонецЦикла;
	Почта = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Письмо = Новый ИнтернетПочтовоеСообщение;
	
	Почта.Подключиться(Профиль);
	Письмо.Тема = СтруктураНовогоПисьма.Тема;
	Письмо.ИмяОтправителя = ""+УчетнаяЗапись+"";
	Письмо.ИмяОтправителя  = ""+СокрЛП(УчетнаяЗапись)+"";
	Письмо.Отправитель     = ""+СокрЛП(УчетнаяЗапись)+"";
	
	ТекстСообщения = Письмо.Тексты.Добавить();
	ТекстСообщения.Текст     = СтруктураНовогоПисьма.Тело;
	ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.HTML;
	
	Для каждого Эл1 Из СтруктураНовогоПисьма.СписокФайловВложений Цикл
		Письмо.Вложения.Добавить(Эл1.Значение.ИмяФайла);
	КонецЦикла;
	
	Для каждого Адрес Из СпАдресов Цикл
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес           = Адрес.Значение;
	КонецЦикла; 
	Почта.Послать(Письмо);
	Почта.Отключиться();
КонецПроцедуры

&НаСервереБезКонтекста
Функция РазложитьСтрокуВМассивПодстрок(Знач Стр, Разделитель = ",") Экспорт 
	
	МассивСтрок = Новый Массив(); 
	Если Разделитель = " " Тогда 
		Стр = СокрЛП(Стр); 
		Пока Истина Цикл 
			Поз = Найти(Стр,Разделитель); 
			Если Поз=0 Тогда 
				МассивСтрок.Добавить(Стр); 
				Возврат МассивСтрок; 
			КонецЕсли; 
			МассивСтрок.Добавить(Лев(Стр,Поз-1)); 
			Стр = СокрЛ(Сред(Стр,Поз)); 
		КонецЦикла; 
	Иначе 
		ДлинаРазделителя = СтрДлина(Разделитель); 
		Пока Истина Цикл 
			Поз = Найти(Стр,Разделитель); 
			Если Поз=0 Тогда 
				МассивСтрок.Добавить(Стр); 
				Возврат МассивСтрок; 
			КонецЕсли; 
			МассивСтрок.Добавить(Лев(Стр,Поз-1)); 
			Стр = Сред(Стр,Поз+ДлинаРазделителя); 
		КонецЦикла; 
	КонецЕсли; 
КонецФункции // глРазложить

&НаКлиенте
Процедура ЮридическийАдресПриИзменении(Элемент)
	ЗапросОпределенияКоординат();
КонецПроцедуры

&НаКлиенте
Процедура АдресПроизводстваПриИзменении(Элемент)
	СтрокаКоордина=Объект.СтрокаКоординат;
	ЗапросОпределенияКоординат();
	Если НЕ СтрокаКоордина=Объект.СтрокаКоординат тогда
		//УК=
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗапросОпределенияКоординат()
	Ответ = Вопрос("Изменился адрес. Определить положение на карте?", РежимДиалогаВопрос.ОКОтмена, 0);
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		Объект.КоординатыОпределены=Ложь;
		ПросмотрНаКарте(Неопределено);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщениеБрендМенеджеру(Команда)
	ОтправитьСообщение("БрендМенеджер")
КонецПроцедуры


&НаКлиенте
Процедура ОтправитьСообщениеУправляющемуПоКачеству(Команда)
	ОтправитьСообщение("УправляющийПоКачеству");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщениеРуководителюПоТрейдМаркетингу(Команда)
	ОтправитьСообщение("РуководительПоТрейдМаркетингу");
КонецПроцедуры

&НаКлиенте
Процедура БрендМенеджерПриИзменении(Элемент)
	Ответ = Вопрос("Отправить сообщение бренд-менеджеру?", РежимДиалогаВопрос.ОКОтмена, 0);
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		ОтправитьСообщениеБрендМенеджеру("БрендМенеджер");
	КонецЕсли;	
КонецПроцедуры


&НаКлиенте
Процедура УправляющийПоКачествуПриИзменении(Элемент)
	Ответ = Вопрос("Отправить сообщение управляющему по качеству?", РежимДиалогаВопрос.ОКОтмена, 0);
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		ОтправитьСообщениеБрендМенеджеру("УправляющийПоКачеству");
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура РуководительПоТрейдМаркетингуПриИзменении(Элемент)
	Ответ = Вопрос("Отправить сообщение руководителю по трейд-маркетингу?", РежимДиалогаВопрос.ОКОтмена, 0);
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		ОтправитьСообщениеБрендМенеджеру("РуководительПоТрейдМаркетингу");
	КонецЕсли;	
КонецПроцедуры


&НаКлиенте
Процедура ПрезентацияНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение(объект.Презентация);
КонецПроцедуры

&НаКлиенте
Процедура РегионКладрОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура РегионКладрОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура РольПродуктоваяКатегорияПриИзменении(Элемент)
	РольПродуктоваяКатегорияПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура РольПродуктоваяКатегорияПриИзмененииНаСервере()
	Если ЗначениеЗаполнено(Объект.РольПродуктоваяКатегория) тогда
		Если Объект.РольПродуктоваяКатегория.СоставРоли.Количество()>0 тогда

			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	РолиПользователейСоставРоли.Сотрудник КАК ФизЛицо
				|ПОМЕСТИТЬ ФизЛица
				|ИЗ
				|	Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
				|ГДЕ
				|	РолиПользователейСоставРоли.Ссылка = &РольПродуктоваяКатегория
				|
				|ИНДЕКСИРОВАТЬ ПО
				|	ФизЛицо
				|;
				|
				|////////////////////////////////////////////////////////////////////////////////
				|ВЫБРАТЬ
				|	Пользователи.Ссылка КАК Технолог
				|ИЗ
				|	Справочник.Пользователи КАК Пользователи
				|ГДЕ
				|	НЕ Пользователи.ПометкаУдаления
				|	И Пользователи.ФизЛицо В
				|			(ВЫБРАТЬ
				|				ФизЛица.ФизЛицо
				|			ИЗ
				|				ФизЛица)
				|	И Пользователи.Технолог";

			Запрос.Параметры.Вставить("РольПродуктоваяКатегория",Объект.РольПродуктоваяКатегория);
			Результат = Запрос.Выполнить();

			ВыборкаДетальныеЗаписи = Результат.Выбрать();

			Элементы.Технолог.СписокВыбора.Очистить();
			Элементы.Технолог.РежимВыбораИзСписка=Истина;
			
			ТехнологНайден=Ложь;
			
			Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
				ТехнологНайден=ТехнологНайден или Объект.Технолог=ВыборкаДетальныеЗаписи.Технолог;
				Элементы.Технолог.СписокВыбора.Добавить(ВыборкаДетальныеЗаписи.Технолог);
			КонецЕсли;
			
			Если НЕ ТехнологНайден тогда
				Объект.Технолог=Неопределено;
			КонецЕсли;
			
			Если ВыборкаДетальныеЗаписи.Количество()=1 тогда
				Объект.Технолог=ВыборкаДетальныеЗаписи.Технолог;
			КонецЕсли;

		Иначе 
			Объект.Технолог=Неопределено;
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры
