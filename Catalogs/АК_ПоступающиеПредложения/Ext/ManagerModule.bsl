Функция ПолучитьСписокРегионовКЛАДР() экспорт
	СписокРегионов=новый СписокЗначений;
	КлассификаторАдресов = РегистрыСведений.АдресныйКлассификатор.ПолучитьМакет("ТаблицаРегионов");
	ВсегоЗаписей = КлассификаторАдресов.ВысотаТаблицы - 1;
	
	Для Сч = 2 По КлассификаторАдресов.ВысотаТаблицы Цикл
		СписокРегионов.Добавить(Сокрлп(КлассификаторАдресов.Область(Сч, 1, Сч, 1).Текст),СокрЛП(КлассификаторАдресов.Область(Сч, 2, Сч, 2).Текст));
	КонецЦикла;
	
	возврат СписокРегионов;
КонецФункции

Функция ПолучитьСписокНаименованийРегионовКЛАДР() экспорт
	СписокРегионов=новый СписокЗначений;
	КлассификаторАдресов = РегистрыСведений.АдресныйКлассификатор.ПолучитьМакет("ТаблицаРегионов");
	ВсегоЗаписей = КлассификаторАдресов.ВысотаТаблицы - 1;
	
	Для Сч = 2 По КлассификаторАдресов.ВысотаТаблицы Цикл
		КодКладр = СокрЛП(КлассификаторАдресов.Область(Сч, 1, Сч, 1).Текст);
		Наименование = СокрЛП(КлассификаторАдресов.Область(Сч, 2, Сч, 2).Текст);
		Сокращение   = СокрЛП(КлассификаторАдресов.Область(Сч, 3, Сч, 3).Текст);
		//Если врег(лев(Сокращение,1))=лев(Сокращение,1) тогда
		//	Наименование=Наименование+" "+нрег(Сокращение);
		//иначе
		//	Наименование=Наименование+", "+Сокращение;
		//КонецЕсли;
		
		Наименование=Наименование+", "+Сокращение;
		
		СписокРегионов.Добавить(КодКладр,Наименование);
	КонецЦикла;
	                            
	возврат СписокРегионов;
КонецФункции

Функция ПолучитьНаименованиеРегионаКЛАДР(КодКладр,СписокНаименованийРегионов=Неопределено) Экспорт 
	Если СписокНаименованийРегионов=Неопределено тогда
		СписокНаименованийРегионов=ПолучитьСписокНаименованийРегионовКЛАДР();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КодКладр) тогда
		Регион=СписокНаименованийРегионов.НайтиПоЗначению(КодКладр);
		Если НЕ Регион=Неопределено тогда
			возврат Регион.Представление;
		иначе
			возврат Неопределено;
		КонецЕсли;
	иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция ПолучитьРегионКЛАДР(СтрокаРегиона,НазваниеРегиона="",СписокРегионов=Неопределено, СписокНаименованийРегионов=Неопределено)
	
	Если СписокРегионов=Неопределено тогда
		СписокРегионов=ПолучитьСписокРегионовКЛАДР();
	КонецЕсли;
	
	Если СписокНаименованийРегионов=Неопределено тогда
		СписокНаименованийРегионов=ПолучитьСписокНаименованийРегионовКЛАДР();
	КонецЕсли;
	
	КодКладр=Неопределено;
	
	Для Каждого Регион из СписокРегионов цикл
		НазваниеРегиона=Регион.Представление;
		Если Найти(СтрокаРегиона,НазваниеРегиона)=1 
			или прав(СтрокаРегиона,СтрДлина(НазваниеРегиона))=НазваниеРегиона 
		тогда
			КодКладр=Регион.Значение;
			Прервать;
		иначе
			ПозРазделителя=макс(Найти(НазваниеРегиона," - "),Найти(НазваниеРегиона," /"));
			Если ПозРазделителя>0 тогда
				Р1=сокрлп(лев(НазваниеРегиона,ПозРазделителя-1));
				Р2=сокрлп(сред(НазваниеРегиона,ПозРазделителя+1));
				Р2=СокрЛП(СтрЗаменить(Р2,"/"," "));
				Если Найти(СтрокаРегиона,Р1)=1 
					или прав(СтрокаРегиона,СтрДлина(Р1))=Р1 
					или	Найти(СтрокаРегиона,Р2)=1 
					или прав(СтрокаРегиона,СтрДлина(Р2))=Р2 
				тогда
					КодКладр=Регион.Значение;
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	НазваниеРегиона=ПолучитьНаименованиеРегионаКЛАДР(КодКладр,СписокНаименованийРегионов);
	
	возврат КодКладр;
	
КонецФункции

Процедура АК_ПолучениеПредложенийПоставщиков(ИмяФайла="") Экспорт
	
	СписокРегионов=ПолучитьСписокРегионовКЛАДР();
	СписокНаименованийРегионов=ПолучитьСписокНаименованийРегионовКЛАДР();
	
	Попытка
		Сервис = "geocode-maps.yandex.ru";
		Порт = 443;
		
	    WinHttp = Новый COMОбъект("WinHttp.WinHttpRequest.5.1");
	    WinHttp.Option(2,"utf-8");
	    WinHttp.Open("POST","https://geocode-maps.yandex.ru:443/1.x/",0);
	    WinHttp.SetRequestHeader("Accept-Language", "ru");
	    WinHttp.SetRequestHeader("Accept-Charset","utf-8");
	    WinHttp.setRequestHeader("Content-Language", "ru");
	    WinHttp.setRequestHeader("Content-Charset", "utf-8");
	    WinHttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded; charset=utf-8");
		
		СоответствиеПолей=Новый Структура;
		СоответствиеПолей.Вставить("ID","id");
		СоответствиеПолей.Вставить("manufacture_address","АдресПроизводства");
		СоответствиеПолей.Вставить("assortment","Ассортимент");
		
		//для совместимости вид бизнеса может находится в разных полях
		//предполагается, что одно из них будет пустым
		СоответствиеПолей.Вставить("type_business","ВидБизнеса");
		СоответствиеПолей.Вставить("business_type","ВидБизнеса");
		
		СоответствиеПолей.Вставить("contact_position","ДолжностьКонтактногоЛица");
		СоответствиеПолей.Вставить("inn","ИНН");
		СоответствиеПолей.Вставить("contact","КонтактноеЛицо");
		СоответствиеПолей.Вставить("company_name","Наименование");
		СоответствиеПолей.Вставить("production_volume","ОбъемыПроизводстваРеализации");
		СоответствиеПолей.Вставить("main_clients","ОсновныеКлиенты");
		СоответствиеПолей.Вставить("company_presentation","Презентация");
		СоответствиеПолей.Вставить("product_category","ПродуктоваяКатегория");
		СоответствиеПолей.Вставить("business_region","Регион");
		СоответствиеПолей.Вставить("company_director","Руководитель");
		СоответствиеПолей.Вставить("phone","Телефон");
		СоответствиеПолей.Вставить("pack_type","ТипыИВидыУпаковки");
		СоответствиеПолей.Вставить("email","ЭлектроннаяПочта");
		СоответствиеПолей.Вставить("legal_address","ЮридическийАдрес");
		
		Если ИмяФайла="" тогда
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
				"ВЫБРАТЬ ПЕРВЫЕ 1
				|	АК_ПоступающиеПредложения.ID КАК ID
				|ИЗ
				|	Справочник.АК_ПоступающиеПредложения КАК АК_ПоступающиеПредложения
				|
				|УПОРЯДОЧИТЬ ПО
				|	ID УБЫВ";

			Результат = Запрос.Выполнить();

			ВыборкаДетальныеЗаписи = Результат.Выбрать();

			Если ВыборкаДетальныеЗаписи.Следующий() Тогда
				Ид=ВыборкаДетальныеЗаписи.ID;
			иначе
				Ид=0;
			КонецЕсли;
			
		    ИмяФайла=ПолучитьИмяВременногоФайла(".xml");
			
			СерверДляЗапроса = "vkusvill.ru";
			ТекстДляЗапроса = "partner_profile/partner_profile.xml?id="+Формат(Ид,"ЧГ=0");
			Соединение = Новый HTTPСоединение(СерверДляЗапроса);
			Соединение.Получить(ТекстДляЗапроса,ИмяФайла);
			
			Файл=Новый ЧтениеТекста(ИмяФайла);
			Строка1=Файл.ПрочитатьСтроку();
			Файл.Закрыть();
			
			Если Найти(врег(Строка1),"XML")=0 тогда
				УдалитьФайлы(ИмяФайла);
				ИмяФайла="";
			КонецЕсли;

		    //КопироватьФайл("http://vkusvill.ru/partner_profile/partner_profile.xml",ИмяФайла);
		КонецЕсли;
		
		Если НЕ ПустаяСтрока(ИмяФайла) тогда
			
			ЧтениеXML = Новый ЧтениеXML();
			ЧтениеXML.ОткрытьФайл(ИмяФайла);     

			ТипФабрики=ФабрикаXDTO.Тип("http://v8.1c.ru/8.1/data/enterprise/current-config", "CatalogObject.partner_profiles_type") ;
			
			Предложения = ФабрикаXDTO.ПрочитатьXML(ЧтениеXML, ТипФабрики);
			Спр=Справочники.АК_ПоступающиеПредложения.СоздатьЭлемент();
			
			КоличествоЗагруженных=0;
			
			попытка
				Профили=Предложения.profile;
				ФайлСодержитПрофили=Истина;
			исключение
				ФайлСодержитПрофили=Ложь;
			КонецПопытки;
			
			попытка
			Если ФайлСодержитПрофили тогда

				Для Каждого Предложение из Профили цикл
					Код=число(Предложение.ID);
					Спр=Справочники.АК_ПоступающиеПредложения.НайтиПоРеквизиту("ID",Код);
					Если НЕ ЗначениеЗаполнено(Спр) Тогда
						Спр=Справочники.АК_ПоступающиеПредложения.СоздатьЭлемент();
						Спр.ID=Код;
						Спр.Дата=ТекущаяДата();
						Спр.Источник=Перечисления.АК_ИсточникиПоступающихПредложений.Сайт;
					иначе
						продолжить;
						Спр=Спр.получитьОбъект();
					КонецЕсли; 
					
					Для Каждого СП из СоответствиеПолей цикл
						попытка
							Значение=Предложение[СП.Ключ];
						Исключение
							Значение="";
						КонецПопытки;
						Если ТипЗнч(Значение)=Тип("Строка") и НЕ ПустаяСтрока(Значение) Тогда
							Спр[СП.Значение]=Значение;
						КонецЕсли; 
					КонецЦикла;
					
					Значение=Предложение.delivery_moscow;
					Если ТипЗнч(Значение)=Тип("Строка") Тогда
						Спр.ДоставкаВМоскву=Значение="Да";
					КонецЕсли; 
					
					Значение=Предложение.vkusvill_label;
					Если ТипЗнч(Значение)=Тип("Строка") Тогда
						Спр.ДоставкаВМоскву=Значение="Да";
					КонецЕсли; 
					Спр.СовпадениеИНН=НЕ ПустаяСтрока(Спр.ИНН) и ЗначениеЗаполнено(Справочники.Контрагенты.НайтиПоРеквизиту("ИНН",Спр.ИНН));
					
					Если ПустаяСтрока(Спр.СтрокаКоординат) Тогда
						
						ПредставлениеАдреса=Спр.АдресПроизводства;
						Если ПустаяСтрока(ПредставлениеАдреса) Тогда
							ПредставлениеАдреса=Спр.ЮридическийАдрес;
						КонецЕсли; 
						Если НЕ ПустаяСтрока(ПредставлениеАдреса) Тогда
						    WinHttp.Send("geocode="+ПредставлениеАдреса);
						    ОтветСервера = WinHttp.ResponseText();
							
							Тег="pos";
							ДлинаТега=СтрДлина(Тег)+2;
							п1=найти(ОтветСервера,"<"+Тег+">");
							п2=найти(ОтветСервера,"</"+Тег+">");
							Если п1>0 и п2>п1 тогда
								СтрокаКоординат=сред(ОтветСервера,п1+ДлинаТега,п2-п1-ДлинаТега);
								Поз=Найти(СтрокаКоординат,",");
								Если Поз=0 тогда
									Поз=Найти(СтрокаКоординат," ");
								КонецЕсли;        		
								
								Если Поз=0 тогда
									Спр.СтрокаКоординат="";
								иначе
									К1=лев(сокрлп(Лев(СтрокаКоординат,Поз-1)),20);
									К2=лев(сокрлп(Сред(СтрокаКоординат,Поз+1)),20);
									
									Спр.СтрокаКоординат = К2+","+К1;
								КонецЕсли;
							КонецЕсли;
							
							Тег="AdministrativeAreaName";
							ДлинаТега=СтрДлина(Тег)+2;
							п1=найти(ОтветСервера,"<"+Тег+">");
							п2=найти(ОтветСервера,"</"+Тег+">");
							Если п1>0 и п2>п1 тогда
								СтрокаРегиона=сред(ОтветСервера,п1+ДлинаТега,п2-п1-ДлинаТега);
								НазваниеРегиона="";
								КодКладр=ПолучитьРегионКЛАДР(СтрокаРегиона,НазваниеРегиона,СписокРегионов,СписокНаименованийРегионов);
								
								Если ЗначениеЗаполнено(КодКладр) тогда
									
									Спр.КодКладр=КодКладр;
									
									Запрос.Текст = 
										"ВЫБРАТЬ ПЕРВЫЕ 1
										|	АК_УправлениеКачестваСостав.Ссылка КАК УправлениеКачества
										|ИЗ
										|	Справочник.АК_УправлениеКачества.Состав КАК АК_УправлениеКачестваСостав
										|ГДЕ
										|	АК_УправлениеКачестваСостав.КодКладр = &КодКладр";

									Запрос.УстановитьПараметр("КодКладр", КодКладр);

									Результат = Запрос.Выполнить();

									ВыборкаДетальныеЗаписи = Результат.Выбрать();

									Если ВыборкаДетальныеЗаписи.Следующий() тогда
										Спр.УправлениеКачества=ВыборкаДетальныеЗаписи.УправлениеКачества;
									Конецесли;
								КонецЕсли;
							КонецЕсли;
							
						КонецЕсли; 
						
					КонецЕсли;
					
					Если НЕ ЗначениеЗаполнено(Спр.Статус) тогда
						Спр.Статус=Справочники.АК_СтатусыПоступающихПредложений.Новое;
					КонецЕсли;
					
					Спр.Записать();
					КоличествоЗагруженных=КоличествоЗагруженных+1;
				конеццикла;

				ЗаписьЖурналаРегистрации("Предложения поставщиков",УровеньЖурналаРегистрации.Информация,,,"Загружено: "+КоличествоЗагруженных);
			иначе
				ЗаписьЖурналаРегистрации("Предложения поставщиков",УровеньЖурналаРегистрации.Информация,,,"Нет новых предложений");
			КонецЕсли;
			исключение
			конецпопытки;
			ЧтениеXML.Закрыть();
			УдалитьФайлы(ИмяФайла);
		иначе
			ЗаписьЖурналаРегистрации("Предложения поставщиков",УровеньЖурналаРегистрации.Ошибка,,,"Файл не содержит предложений");
		КонецЕсли;		
	Исключение
		ЗаписьЖурналаРегистрации("Предложения поставщиков",УровеньЖурналаРегистрации.Ошибка,,,""+ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры
