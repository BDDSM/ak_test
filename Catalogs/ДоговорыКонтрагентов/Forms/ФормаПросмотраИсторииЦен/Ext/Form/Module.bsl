
/////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ЕдинаяСтоимость")Тогда
		ЕдинаяСтоимость = Параметры.ЕдинаяСтоимость;
	КонецЕсли;
	
	Если Параметры.Свойство("ТаблицаЦен")Тогда
		История.Загрузить(Параметры.ТаблицаЦен);
	КонецЕсли;
	
	Если Параметры.Свойство("ТаблицаТТ") Тогда
		ТаблицаТочек.Загрузить(Параметры.ТаблицаТТ);
	КонецЕсли;
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		Ответ = Вопрос("Данные были изменены. Закрытие приведет к потере изменений. Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


/////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ РЕКВИЗИТОВ ФОРМЫ

&НаКлиенте
Процедура ТаблицаТочекПриАктивизацииСтроки(Элемент)
	
	Элементы.История.ОтборСтрок = Новый ФиксированнаяСтруктура("СтруктурнаяЕдиница"
			, ?(Элементы.ТаблицаТочек.ТекущиеДанные = Неопределено, Неопределено, Элементы.ТаблицаТочек.ТекущиеДанные.СтруктурнаяЕдиница));
	
КонецПроцедуры


/////////////////////////////////////////////////////////////////
// КОМАНДЫ

&НаКлиенте
Процедура СохранитьИзменения(Команда)
	
	Если ЕстьСтрокиСНезаполненнымиЗначениями()Тогда
		Сообщить("Присутствуют строки с пустыми значениями. Заполните или удалите такие строки.");
		Возврат;
	КонецЕсли;
	
	ТаблицаОдинаковыхПериодов = ПолучитьТаблицуОдинаковыхПериодов();
	Ошибки = Ложь;
	Для Каждого Стр Из ТаблицаОдинаковыхПериодов Цикл
		
		Если Стр.Количество > 1 Тогда
			
			Ошибки = Истина;
		
			Если ЕдинаяСтоимость Тогда
				Сообщить("Существует несколько строк с периодом: " + Формат(Стр.Период, "ДФ=dd.MM.yyyy"));
			Иначе
				Сообщить("Существует несколько строк с периодом: " + Формат(Стр.Период, "ДФ=dd.MM.yyyy") + " по точке " + Стр.СтруктурнаяЕдиница);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
		
	Если Ошибки Тогда
		Сообщить("Устраните ошибки и повторите сохранение.");
		Возврат;
	КонецЕсли;
	
	ПараметрыЗакрытия  = ПолучитьПараметрыЗакрытия();
	Модифицированность = Ложь;
	
	Закрыть(ПараметрыЗакрытия);	
	
КонецПроцедуры


/////////////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ИсторияПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыЗакрытия()
	
	ТаблицаЦен = История.Выгрузить();
	ПараметрыВозврата = Новый Структура("ЕдинаяСтоимость, ТаблицаЦен", ЕдинаяСтоимость, ТаблицаЦен);
	
	Возврат ПараметрыВозврата;	
	
КонецФункции

&НаКлиенте
Процедура ИсторияПериодПриИзменении(Элемент)
	
	ТекДанные = Элементы.История.ТекущиеДанные;
	ТекДанные.Период = НачалоМесяца(ТекДанные.Период);
	
КонецПроцедуры

&НаСервере
Функция ЕстьСтрокиСНезаполненнымиЗначениями()
	
	Если НЕ ЕдинаяСтоимость Тогда
		
		НайденныеСтроки = История.НайтиСтроки(Новый Структура("СтруктурнаяЕдиница", Справочники.СтруктурныеЕдиницы.ПустаяСсылка()));
		Для Каждого Стр Из НайденныеСтроки Цикл
			История.Удалить(Стр);
		КонецЦикла;
		
	КонецЕсли;
	
	СтрокиСПустымиЗначениями = Ложь;
	Для Каждого Стр Из История Цикл
		
		Если НЕ ЗначениеЗаполнено(Стр.Период)
				ИЛИ НЕ ЗначениеЗаполнено(Стр.Цена) Тогда
			СтрокиСПустымиЗначениями = Истина;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтрокиСПустымиЗначениями;
	
КонецФункции

&НаСервере
Функция ПолучитьТаблицуОдинаковыхПериодов()
	
	ТаблицаЦен = История.Выгрузить(, ?(ЕдинаяСтоимость, "Период", "Период, СтруктурнаяЕдиница"));
	ТаблицаЦен.Колонки.Добавить("Количество");
	ТаблицаЦен.ЗаполнитьЗначения(1, "Количество");
	ТаблицаЦен.Свернуть(?(ЕдинаяСтоимость, "Период", "Период, СтруктурнаяЕдиница"), "Количество");
	
	Возврат ТаблицаЦен;
	
КонецФункции

&НаСервере
Процедура УправлениеФормой()
	
	Элементы.ТаблицаТочек.Видимость = НЕ ЕдинаяСтоимость;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсторияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	
	ТекДанные = Элементы.История.ТекущиеДанные;	
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	ТекДанныеТТ = Элементы.ТаблицаТочек.ТекущиеДанные;
	Если ТекДанныеТТ <> Неопределено
			И НЕ ЗначениеЗаполнено(ТекДанные.СтруктурнаяЕдиница) Тогда
		ТекДанные.СтруктурнаяЕдиница = ТекДанныеТТ.СтруктурнаяЕдиница;
	КонецЕсли;
	
КонецПроцедуры
