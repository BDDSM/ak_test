// Обновление надписи комментария при изменении состава строк списка
//
Процедура ОбновитьНадписи()

	ТекДанные = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
	ЕстьОтборПоВладельцу = Отбор.Владелец.Использование И Отбор.Владелец.ВидСравнения = ВидСравнения.Равно;
	
	Если ТекДанные = Неопределено Тогда
		ЭлементыФормы.НадписьКомментарий.Заголовок = 
		?(ЕстьОтборПоВладельцу,
		"У контрагента нет договоров, соответствующих условиям отбора. Добавьте новый договор.",
		"Нет договоров, соответствующих условиям отбора. Добавьте новый договор.");
	Иначе
		ЭлементыФормы.НадписьКомментарий.Заголовок = 
		"Выберите договор из списка или добавьте новый.";
	КонецЕсли;
	
	Заголовок = ?(ЕстьОтборПоВладельцу,
	            "Договоры контрагентов (" + Отбор.Владелец.Значение + ")",
	            "Договоры контрагентов");

КонецПроцедуры

// При изменении отборов списка обновляется надпись комментария
//
Процедура СправочникСписокОтборПриИзмененииДанных(ПутьКДанным)

	ОбновитьНадписи();

КонецПроцедуры

// При открытии формы элемента передаем в нее установленные в списке отборы.
// В этом режиме нельзя записать элемент с реквизитами, не соответствующими условиям отбора
//
Процедура ОткрытьФормуЭлементаСУчетомОтбора(ЭлементСправочника, СписокОтборов, ВладелецФормыЭлемента)
	
	Если ТипЗнч(ЭлементСправочника) = Тип("СправочникОбъект.ДоговорыКонтрагентов") 
		ИЛИ (ТипЗнч(ЭлементСправочника) = Тип("СправочникСсылка.ДоговорыКонтрагентов") И НЕ ЭлементСправочника.Пустая()) 
		Тогда
		
		ФормаЭлемента = ЭлементСправочника.ПолучитьФорму("ФормаЭлемента", ВладелецФормыЭлемента);
		ФормаЭлемента.СписокОтборов = СписокОтборов;
		ФормаЭлемента.Открыть();
		
	КонецЕсли;

КонецПроцедуры

// Процедура - обработчик события "ПриОткрытии" формы
//
Процедура ПриОткрытии()

	Если РежимВыбора И НЕ ЗначениеЗаполнено(Отбор.Владелец.Значение) Тогда
		ФормаВыбораВладельца = Справочники.Контрагенты.ПолучитьФормуВыбора();
		ФормаВыбораВладельца.Заголовок = "Выберите контрагента, договор которого Вы хотите выбрать.";
		Контрагент = ФормаВыбораВладельца.ОткрытьМодально();
		Если ТипЗнч(Контрагент) = ТипЗнч(Отбор.Владелец.Значение) Тогда
			Отбор.Владелец.Значение = Контрагент;
		КонецЕсли;
		Отбор.Владелец.Использование = ЗначениеЗаполнено(Отбор.Владелец.Значение);
	КонецЕсли;
	
	Если Отбор.Владелец.Использование И Отбор.Владелец.ВидСравнения = ВидСравнения.Равно Тогда
		ЭлементыФормы.СправочникСписок.Колонки.Владелец.Видимость = Ложь;
	КонецЕсли; 
	
	ОбновитьНадписи();
	
	ПодключитьОбработчикИзмененияДанных("СправочникСписок.Отбор", "СправочникСписокОтборПриИзмененииДанных", Истина);

КонецПроцедуры

// В режиме выбора новый элемент вводится с учетом установленных в списке отборов
//
Процедура СправочникСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	
	Если НЕ ЭтоГруппа Тогда
		
		Отказ = Истина;
		
		Если Копирование Тогда
			
			ТекДанные    = Элемент.ТекущиеДанные;
			НовыйЭлемент = ТекДанные.Ссылка.Скопировать();
		
		Иначе
		
			НовыйЭлемент = Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
			НовыйЭлемент.Родитель = Родитель;
		
		КонецЕсли;
		
		ОткрытьФормуЭлементаСУчетомОтбора(НовыйЭлемент, СправочникСписок.Отбор, Элемент);
		
	КонецЕсли;
		
КонецПроцедуры // СправочникСписокПередНачаломДобавления()

// При открытии формы элемента в нее передаются установленные в списке отборы.
//
Процедура СправочникСписокПередНачаломИзменения(Элемент, Отказ)
	
	ТекДанные = Элемент.ТекущиеДанные;
	
	Если ТекДанные <> Неопределено И НЕ ТекДанные.ЭтоГруппа Тогда
		
		Отказ = Истина;
		
		ОткрытьФормуЭлементаСУчетомОтбора(ТекДанные.Ссылка, СправочникСписок.Отбор, Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

// В режиме выбора при вводе нового объекта автоматически производится его выбор
//
Процедура СправочникСписокОбработкаЗаписиНовогоОбъекта(Элемент, Объект, СтандартнаяОбработка)
	
	Если РежимВыбора Тогда
		
		Если ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.ГруппыИЭлементы
			ИЛИ ((НЕ Объект.ЭтоГруппа) И ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Элементы)
			ИЛИ (Объект.ЭтоГруппа И ПараметрВыборГруппИЭлементов = ИспользованиеГруппИЭлементов.Группы)
			Тогда
			
			ОповеститьОВыборе(Объект.Ссылка);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
 
// При изменении состава строк списка обновляется надпись комментария
//
Процедура СправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ОбновитьНадписи();
	
КонецПроцедуры
