
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("Владелец") Тогда
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Владелец");
		ЭлементОтбора.ВидСравнения 		= ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.Использование 	= Истина;
		ЭлементОтбора.ПравоеЗначение 	= Параметры.Владелец;

	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	ПодключитьОбработчикОжидания("СписокПриАктивизацииСтрокиОбработчикОжидания", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтрокиОбработчикОжидания();
	СформироватьОтчетПоКомплекту();
КонецПроцедуры	

&НаСервере
Процедура СформироватьОтчетПоКомплекту()
	ТекущиеДанные=Элементы.Список.ТекущаяСтрока;
	Если ТекущиеДанные=Неопределено Тогда 
		Возврат;
	КонецЕсли;	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	СхемаКомпоновкиДанных=Отчеты.ОстаткиКомплектовПоСделкамСПоставщиками.ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.ВариантыНастроек.Основной.Настройки);
	Для Каждого Эл Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если СокрЛП(Эл.ЛевоеЗначение)="Шаблон" Тогда
			Эл.Использование=Истина;
			Эл.ПравоеЗначение=ТекущиеДанные.Ссылка;
		КонецЕсли;	
	КонецЦикла;	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), , , Тип("ГенераторМакетаКомпоновкиДанных"), Ложь);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,,,Истина);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;

	ТабДок.Очистить();
	ПроцессорВывода.УстановитьДокумент(ТабДок);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
КонецПроцедуры	