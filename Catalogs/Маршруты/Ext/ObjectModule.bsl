
Перем ВремяВыездаЗаполненаАвтоматически Экспорт;//АК БЕЛН 16.03.2017
Перем НаименованиеИзменено;

//+++АК sole 2018.08.29 ИП-00019691
Перем ДеактивацияТТ Экспорт;

//+++АК sole 2018.06.15 ИП-00018944
Функция ПолучитьПоследнийПериодТарифаНаДоставку()
	Перем Запрос;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
"ВЫБРАТЬ
|	МАКСИМУМ(СтоимостьУслугПоДоставкеТовараНаТТ.Период) КАК Период
|ИЗ РегистрСведений.СтоимостьУслугПоДоставкеТовараНаТТ.СрезПоследних(&Дата, Маршрут = &Маршрут ) КАК СтоимостьУслугПоДоставкеТовараНаТТ
|";
	
	Запрос.Параметры.Вставить("Дата", ТекущаяДата());
	Запрос.Параметры.Вставить("Маршрут", ЭтотОбъект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Период = Выборка.Период;	
	Иначе
		Период = Дата(1,1,1);
	КонецЕсли;
	
	Возврат Период;
	
КонецФункции

//+++АК sole 2018.06.15 ИП-00018944
Функция ПолучитьВТТарифы() Экспорт
	
	Перем Запрос;
	
	Период = ПолучитьПоследнийПериодТарифаНаДоставку();
	
	Запрос = Новый Запрос();
	Запрос.Текст =
"ВЫБРАТЬ
|	&Период КАК Период,
|	МаршрутыТорговыеТочки.СтруктурнаяЕдиница,
|	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.Ставка,
|	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.НаличиеДопТарифа,
|	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.СтавкаДопТарифа,
|	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.ВариантРасчетаНДС,
|	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.СтавкаНДС
|ИЗ
|	Справочник.Маршруты.ТорговыеТочки КАК МаршрутыТорговыеТочки
|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьУслугПоДоставкеТовараНаТТ.СрезПоследних КАК СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних
|		ПО (СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.ТТ = МаршрутыТорговыеТочки.СтруктурнаяЕдиница)
|			И (СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.Маршрут = МаршрутыТорговыеТочки.Ссылка)
|ГДЕ
|	МаршрутыТорговыеТочки.Ссылка = &Маршрут";
	
	Запрос.Параметры.Вставить("Период", Период);
	Запрос.Параметры.Вставить("Маршрут", ЭтотОбъект.Ссылка);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

//+++АК sole 2018.06.15 ИП-00018944
Процедура ОбновитьСоставТЧТорговыеТочки_ЕслиНеобходимо(втТорговыеТочки) Экспорт
	
	СтруктураОтбора = Новый Структура();
	
	Инд = ЭтотОбъект.ТорговыеТочки.Количество();
	
	Пока Инд > 0 Цикл
	    Инд = Инд - 1;
		
		Стр = ЭтотОбъект.ТорговыеТочки[Инд];
		
		СтруктураОтбора.Очистить();
		СтруктураОтбора.Вставить("СтруктурнаяЕдиница", Стр["СтруктурнаяЕдиница"]);
		мНайденныеСтроки = втТорговыеТочки.НайтиСтроки(СтруктураОтбора);
		Если мНайденныеСтроки.Количество() = 0  Тогда
			ЭтотОбъект.ТорговыеТочки.Удалить(Инд);									
		КонецЕсли;
	КонецЦикла;

	тчТорговыеТочки = ЭтотОбъект.ТорговыеТочки.Выгрузить();
	
	Для Каждого Стр Из втТорговыеТочки Цикл
		СтруктураОтбора.Очистить();
		СтруктураОтбора.Вставить("СтруктурнаяЕдиница", Стр["СтруктурнаяЕдиница"]);
		мНайденныеСтроки = тчТорговыеТочки.НайтиСтроки(СтруктураОтбора);
		Если мНайденныеСтроки.Количество() = 0  Тогда
			Нстр = ЭтотОбъект.ТорговыеТочки.Добавить();
			НСтр["СтруктурнаяЕдиница"] = Стр["СтруктурнаяЕдиница"];
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//+++АК sole 2018.06.15 ИП-00018944
Процедура ОбновитьРегистрСтоимостьДоставкиНаТТ_ЕслиНеобходимо(СтруктураТарифа) Экспорт
	
	// Процедура вызывается из процедуры "ПриЗаписиНаСервере", модуля формы	
	
	тзТарифыКОбновлению = СравнитьТарифыНаДоставку(СтруктураТарифа);
	
	Если тзТарифыКОбновлению.Количество() <> 0 Тогда
		
		Если
				НЕ РольДоступна("ПолныеПрава")
			И	РольДоступна("Перевозчик")  
		Тогда
			Сообщить("Для роли ""Перевозчик"" запрещено, обновление регистра сведений ""Стоимость услуг по доставке товара на ТТ"" !");
			Возврат;
		КонецЕсли;
		
		//+++АК sole 2018.07.06 ИП-00019019
		НетПравНаЗапись = Не РегистрыСведений.СтоимостьУслугПоДоставкеТовараНаТТ.ПроверитьПраваНаЗапись(тзТарифыКОбновлению.ВыгрузитьКолонку("ТТ"));
		
		Если НетПравНаЗапись Тогда
			Возврат;	
		КонецЕсли;
		//---АК sole 2018.07.06 ИП-00019019
		
		ОбновитьТарифыНаДоставку(тзТарифыКОбновлению);
	КонецЕсли;
	
	
	
КонецПроцедуры

//+++АК sole 2018.06.15 ИП-00018944
Функция СравнитьТарифыНаДоставку(СтруктураТарифа)
	
	Перем Запрос;
	
	ПоследнийПериод = ПолучитьПоследнийПериодТарифаНаДоставку();
	
	Период = СтруктураТарифа.Период;
	
	Если ЗначениеЗаполнено(ПоследнийПериод) Тогда
		Если СтруктураТарифа.Период <= ПоследнийПериод Тогда
			Период = НачалоДня(ТекущаяДата());
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();

	Запрос.Текст =
"ВЫБРАТЬ
|	&Период КАК Период,
|	т.СтруктурнаяЕдиница,
|	т.Ставка,
|	т.НаличиеДопТарифа,
|	т.СтавкаДопТарифа,
|   &ВариантРасчетаНДС КАК ВариантРасчетаНДС,
|   &СтавкаНДС КАК СтавкаНДС
|
|		ПОМЕСТИТЬ втНовыйТариф
|
|ИЗ &Таблица КАК т
|
|;
|///////////////////////////////////////////////////////////
|ВЫБРАТЬ
|	втНовыйТариф.Период,
|	&Маршрут КАК Маршрут,
|	втНовыйТариф.СтруктурнаяЕдиница КАК ТТ,
|	ЗНАЧЕНИЕ(Перечисление.ГруппыДоставкиНоменклатуры.Прочее) КАК ГруппаДоставкиНоменклатуры,
|	&Контрагент КАК Контрагент,
|	втНовыйТариф.Ставка,
|	втНовыйТариф.НаличиеДопТарифа,
|	втНовыйТариф.СтавкаДопТарифа,
|   втНовыйТариф.ВариантРасчетаНДС,
|   втНовыйТариф.СтавкаНДС,
|	&Организация КАК Организация
|
|ИЗ втНовыйТариф
|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьУслугПоДоставкеТовараНаТТ.СрезПоследних КАК СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних ПО
|			СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.Маршрут = &Маршрут
|		И	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.ТТ = втНовыйТариф.СтруктурнаяЕдиница
|		И	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.Ставка = втНовыйТариф.Ставка
|		И	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.НаличиеДопТарифа = втНовыйТариф.НаличиеДопТарифа
|		И	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.СтавкаДопТарифа = втНовыйТариф.СтавкаДопТарифа
|		И	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.ВариантРасчетаНДС = втНовыйТариф.ВариантРасчетаНДС
|		И	СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.СтавкаНДС = втНовыйТариф.СтавкаНДС
|
|ГДЕ СтоимостьУслугПоДоставкеТовараНаТТСрезПоследних.Маршрут ЕСТЬ NULL	
|";
	Запрос.Параметры.Вставить("Таблица", СтруктураТарифа.втТорговыеТочки);
	Запрос.Параметры.Вставить("ВариантРасчетаНДС", СтруктураТарифа.ВариантРасчетаНДС);
	Запрос.Параметры.Вставить("СтавкаНДС", СтруктураТарифа.СтавкаНДС);
	Запрос.Параметры.Вставить("Период", Период);
	Запрос.Параметры.Вставить("Маршрут", ЭтотОбъект.Ссылка);
	Запрос.Параметры.Вставить("Контрагент", ЭтотОбъект.Перевозчик);
	Запрос.Параметры.Вставить("Организация", ЭтотОбъект.Организация);
	
	тзТарифыКОбновлению = Запрос.Выполнить().Выгрузить();
	Запрос.МенеджерВременныхТаблиц.Закрыть();
	
	Возврат тзТарифыКОбновлению;
	
КонецФункции

//+++АК sole 2018.06.15 ИП-00018944
Процедура ОбновитьТарифыНаДоставку(тзТарифыКОбновлению)
	
	Для Каждого Стр Из тзТарифыКОбновлению  Цикл
		
		НаборЗаписей = РегистрыСведений.СтоимостьУслугПоДоставкеТовараНаТТ.СоздатьНаборЗаписей(); 
		НаборЗаписей.Отбор.Период.Установить(Стр["Период"]);
		НаборЗаписей.Отбор.Маршрут.Установить(Стр["Маршрут"]);
		НаборЗаписей.Отбор.ТТ.Установить(Стр["ТТ"]);
		НаборЗаписей.Отбор.Контрагент.Установить(Стр["Контрагент"]);
		НаборЗаписей.Отбор.ГруппаДоставкиНоменклатуры.Установить(Стр["ГруппаДоставкиНоменклатуры"]);
			
		Запись = НаборЗаписей.Добавить();
			
		ЗаполнитьЗначенияСвойств(Запись, Стр);
			
		НаборЗаписей.Записать();

	КонецЦикла;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	УстановитьПривилегированныйРежим(Истина);	
	//mind
	//если редактирование происходит не с 2 до 5 утра, то редактировать можно только по спец праву
	Если ОбменДанными.Загрузка = Ложь И ДеактивацияТТ = Ложь Тогда
		Если ТекущаяДата() - НачалоДня(ТекущаяДата()) < 2 * 3600
				ИЛИ ТекущаяДата() - НачалоДня(ТекущаяДата()) > 5 * 3600 Тогда
			Если ВремяВыездаЗаполненаАвтоматически = Ложь Тогда 
				Если НЕ УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.РазрешеноРедактированиеМаршрутовВнеРегламентноеВремя, Ложь) Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Вам разрешено редактирование справочника маршрутов только с 2 до 5 утра",,,, Отказ);
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;	
	
	//ПредставлениеМаршрута=СокрЛП(Наименование);
	ЭтотОбъект.ПредставлениеМаршрута = "";;
	//Если ГруппыНоменклатуры.Количество()=0 Тогда
	//	ПредставлениеМаршрута="Все";
	//Иначе	
	//	Для каждого стр из ГруппыНоменклатуры Цикл
	//		ПредставлениеМаршрута=ПредставлениеМаршрута+СокрЛП(Стр.Группа)+";";
	//	КонецЦикла;	
	//КонецЕсли;
	Если ЭтотОбъект.Склады.Количество() = 0 Тогда
		ЭтотОбъект.ПредставлениеМаршрута = "Все";
	Иначе	
		Для каждого СтрокаТЧ из ЭтотОбъект.Склады Цикл
			ЭтотОбъект.ПредставлениеМаршрута = ЭтотОбъект.ПредставлениеМаршрута + СокрЛП(СтрокаТЧ.Склад) + ";";
		КонецЦикла;	
	КонецЕсли;
	
	//mind
	//порядок сортировки теперь выставляю по времени выезда
	//АК БЕЛН 16.02.2017+
	Если ВремяВыездаЗаполненаАвтоматически = Ложь
			И НЕ ЭтотОбъект.Ссылка.ПланируемоеВремяВыездаПоМаршруту = ЭтотОбъект.ПланируемоеВремяВыездаПоМаршруту Тогда
		ЭтотОбъект.ПропущенныхНомеровМаршрута = 0;
	КонецЕсли; 
	//ПорядокСортировки = ПланируемоеВремяВыездаПоМаршруту - '00010101';
	Если ЗначениеЗаполнено(ЭтотОбъект.ПланируемоеВремяВыездаПоМаршруту) Тогда
		ПорядокСортировки = ?(ТипЗнч(ЭтотОбъект.ПланируемоеВремяВыездаПоМаршруту) = Тип("СправочникСсылка.ВремяВыездаПоМаршруту"),
								ЭтотОбъект.ПланируемоеВремяВыездаПоМаршруту.ВремяВыезда,
								ЭтотОбъект.ПланируемоеВремяВыездаПоМаршруту) - '00010101';
	КонецЕсли; 
	
	Если ЭтотОбъект.ПометкаУдаления И Ссылка.ПометкаУдаления=Ложь
			И НЕ Отказ Тогда

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Маршрут", ЭтотОбъект.Ссылка);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланируемыеМаршрутыПеревозчикаСрезПоследних.Маршрут,
		|	ПланируемыеМаршрутыПеревозчикаСрезПоследних.ДатаПланирования,
		|	ПланируемыеМаршрутыПеревозчикаСрезПоследних.Подрядчик
		|ИЗ
		|	РегистрСведений.ПланируемыеМаршрутыПеревозчика.СрезПоследних(, Маршрут = &Маршрут) КАК ПланируемыеМаршрутыПеревозчикаСрезПоследних
		|ГДЕ
		|	НЕ ПланируемыеМаршрутыПеревозчикаСрезПоследних.Отменен";
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Количество() > 0 Тогда
			
			Док = Документы.Операция.СоздатьДокумент();
			Док.Дата		= ТекущаяДата();
			Док.Организация	= ЭтотОбъект.Организация;
			Док.Записать();
			
			НаборЗаписей = РегистрыСведений.ПланируемыеМаршрутыПеревозчика.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Док.Ссылка);
			Пока Выборка.Следующий() Цикл
				Мен = НаборЗаписей.Добавить();
				//Мен.Регистратор=Док.Ссылка;
				Мен.Период				= ТекущаяДата();
				Мен.Маршрут				= ЭтотОбъект.Ссылка;
				Мен.ДатаПланирования	= Выборка.ДатаПланирования;
				Мен.Подрядчик			= Выборка.Подрядчик;
				Мен.Отменен				= Истина;
			КонецЦикла;
			НаборЗаписей.Записать();
			
		КонецЕсли; 
	КонецЕсли; 
	
	Если НЕ ЭтотОбъект.ПометкаУдаления И Ссылка.ПометкаУдаления=Истина
			И НЕ Отказ Тогда

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Маршрут", ЭтотОбъект.Ссылка);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланируемыеМаршрутыПеревозчикаСрезПоследних.Регистратор
		|ИЗ
		|	РегистрСведений.ПланируемыеМаршрутыПеревозчика.СрезПоследних(, Маршрут = &Маршрут) КАК ПланируемыеМаршрутыПеревозчикаСрезПоследних
		|ГДЕ
		|	ПланируемыеМаршрутыПеревозчикаСрезПоследних.Отменен И ПланируемыеМаршрутыПеревозчикаСрезПоследних.Регистратор Ссылка Документ.Операция
		|
		|СГРУППИРОВАТЬ ПО
		|	ПланируемыеМаршрутыПеревозчикаСрезПоследних.Регистратор";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НаборЗаписей = РегистрыСведений.ПланируемыеМаршрутыПеревозчика.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Выборка.Регистратор);
			НаборЗаписей.Записать();
			
		
		КонецЦикла; 
		
	КонецЕсли; 
	
    Если Не ВремяВыездаЗаполненаАвтоматически Тогда
		Если РольДоступна("Перевозчик") И ЭтоНовый() Тогда//активизируется позже
			ПометкаУдаления=Истина;
		КонецЕсли; 
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Маршруты.Ссылка,
			|	Маршруты.СтруктурноеПодразделение,
			|	Маршруты.Наименование КАК Наименование
			|ИЗ
			|	Справочник.Маршруты КАК Маршруты
			|ГДЕ
			|	Маршруты.Ссылка <> &Ссылка
			|	И (Маршруты.Наименование = &Наименование
			|			ИЛИ Маршруты.Наименование ПОДОБНО &Наименование1)
			|	И Маршруты.СтруктурноеПодразделение = &СтруктурноеПодразделение
			|	И Маршруты.ПометкаУдаления = ЛОЖЬ
			|	И Маршруты.Организация = &Организация
			|
			|УПОРЯДОЧИТЬ ПО
			|	Наименование УБЫВ";

		Запрос.УстановитьПараметр("Наименование", Наименование);
		Запрос.УстановитьПараметр("Наименование1", Наименование+"-"+"%");
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("СтруктурноеПодразделение", СтруктурноеПодразделение);
		Запрос.УстановитьПараметр("Организация", Организация);
		Результат = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = Результат.Выбрать();

		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Наименование=ВыборкаДетальныеЗаписи.Наименование+"-1";
		КонецЕсли;
	КонецЕсли; 

	
	Если Не Отказ И (Ссылка.Наименование<>Наименование ИЛИ Ссылка.ПланируемоеВремяВыездаПоМаршруту<>ПланируемоеВремяВыездаПоМаршруту) Тогда
		НаименованиеИзменено=Истина;
	КонецЕсли; 
	//АК БЕЛН 16.02.2017-
	
	//+++АК SHEP 20170725 ИП-00016158: сохраняем историю изменения реквизитов
	Если НЕ Отказ И Перевозчик <> Ссылка.Перевозчик Тогда
		СтруктураИзменений = Новый Структура("ЗначениеБыло,ЗначениеСтало", Ссылка.Перевозчик, Перевозчик);
		ДополнительныеСвойства.Вставить("ИсторияИзмененияРеквизитов", Новый Структура("Перевозчик", СтруктураИзменений));
	КонецЕсли;
	//---АК SHEP 20170725
	
	//+++АК BELN 2018.11.26 ИП-00020536 
	СтароеНаименование=Ссылка.Наименование;
	Если ВремяВыездаЗаполненаАвтоматически = Ложь И Не Отказ И (СтароеНаименование<>Наименование ИЛИ ДополнительныеСвойства.Свойство("Ворота"))  Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	АК_СоответствиеВоротМаршрутамСрезПоследних.Ворота,
			|	АК_СоответствиеВоротМаршрутамСрезПоследних.Период
			|ИЗ
			|	РегистрСведений.АК_СоответствиеВоротМаршрутам КАК АК_СоответствиеВоротМаршрутамСрезПоследних
			|ГДЕ
			|	АК_СоответствиеВоротМаршрутамСрезПоследних.НомерМаршрута = &НомерМаршрута
			|	И АК_СоответствиеВоротМаршрутамСрезПоследних.СтруктурноеПодразделение = &СтруктурноеПодразделение";
		
		Запрос.УстановитьПараметр("НомерМаршрута", СтароеНаименование);
		Запрос.УстановитьПараметр("СтруктурноеПодразделение", СтруктурноеПодразделение);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если НЕ РезультатЗапроса.Пустой() Тогда
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				Мен=РегистрыСведений.АК_СоответствиеВоротМаршрутам.СоздатьМенеджерЗаписи();
				Мен.Период=ВыборкаДетальныеЗаписи.Период;
				Мен.НомерМаршрута=СтароеНаименование;
				Мен.СтруктурноеПодразделение=СтруктурноеПодразделение;
				Мен.Ворота=ВыборкаДетальныеЗаписи.Ворота;
				Мен.Удалить();
				
				
				Мен=РегистрыСведений.АК_СоответствиеВоротМаршрутам.СоздатьМенеджерЗаписи();
				Мен.Период=ВыборкаДетальныеЗаписи.Период;
				Мен.НомерМаршрута=Наименование;
				Мен.СтруктурноеПодразделение=СтруктурноеПодразделение;
				Мен.Ворота=?(ДополнительныеСвойства.Свойство("Ворота"),ДополнительныеСвойства.Ворота,ВыборкаДетальныеЗаписи.Ворота);
				Мен.Записать();
	     	КонецЦикла;
		Иначе
			Если ДополнительныеСвойства.Свойство("Ворота") Тогда
				Мен=РегистрыСведений.АК_СоответствиеВоротМаршрутам.СоздатьМенеджерЗаписи();
				Мен.Период=ТекущаяДата();
				Мен.НомерМаршрута=Наименование;
				Мен.СтруктурноеПодразделение=СтруктурноеПодразделение;
				Мен.Ворота=ДополнительныеСвойства.Ворота;
				Мен.Записать();
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 
	//---АК BELN 2018.11.26 
КонецПроцедуры

	//АК БЕЛН 16.02.2017+
Процедура ПриЗаписи(Отказ)
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если Не Отказ Тогда
		
		Для каждого Стр Из ТорговыеТочки Цикл
			Мен= РегистрыСведений.ИсторияМаршрутов.СоздатьМенеджерЗаписи();
			Мен.Период=ТекущаяДата();
			Мен.Маршрут=Ссылка;
			Мен.Пользователь =ПараметрыСеанса.ТекущийПользователь;
			Мен.ТорговаяТочка=Стр.СтруктурнаяЕдиница;
		    Мен.Записать();
		КонецЦикла;
		Если НаименованиеИзменено Тогда
			Мен=РегистрыСведений.НомераМаршрутов.СоздатьМенеджерЗаписи();
			Мен.Период=ТекущаяДата();
			Мен.Маршрут=Ссылка;
			Мен.Номер=Наименование;
			Мен.НомерПоВремениВыезда=НомерПоВремениВыезда;
			Мен.ПланируемоеВремяВыездаПоМаршруту=ПланируемоеВремяВыездаПоМаршруту;
			Мен.Записать();
			НаименованиеИзменено=Ложь;
		КонецЕсли; 
		
		//+++АК SHEP 20170725 ИП-00016158: сохраняем историю изменения реквизитов
		СтруктураРеквизиты = "";
		Если ДополнительныеСвойства.Свойство("ИсторияИзмененияРеквизитов", СтруктураРеквизиты) Тогда
			
			Для Каждого СтруктураИзменений Из СтруктураРеквизиты Цикл
				ЗаписьРС = РегистрыСведений.ИсторияИзмененияРеквизитов.СоздатьМенеджерЗаписи();
				ЗаписьРС.Период = ТекущаяДата();
				ЗаписьРС.Ссылка = Ссылка;
				ЗаписьРС.ИмяРеквизита = СтруктураИзменений.Ключ;
				ЗаписьРС.Автор = ПараметрыСеанса.ТекущийПользователь;
				ЗаполнитьЗначенияСвойств(ЗаписьРС, СтруктураИзменений.Значение);
				ЗаписьРС.Записать();
			КонецЦикла;
			
		КонецЕсли;
		//---АК SHEP 20170725
		
	КонецЕсли; 
КонецПроцедуры
	//АК БЕЛН 16.02.2017-


ВремяВыездаЗаполненаАвтоматически = Ложь;//АК БЕЛН 16.03.2017
НаименованиеИзменено = Ложь;//АК БЕЛН 16.03.2017
ДеактивацияТТ = Ложь;