
&НаСервере
Процедура ПерезаполнитьДеревоРазмещения(СсылкаДляЧтения)
	
	ДеревоРазмещение.ПолучитьЭлементы().Очистить();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Планограмма", СсылкаДляЧтения);
	Запрос.УстановитьПараметр("ТорговаяМарка", Объект.ТорговаяМарка);
	Запрос.УстановитьПараметр("ОтборПоТорговойМарке", ЗначениеЗаполнено(Объект.ТорговаяМарка));
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВыкладкаПланограммы.Номенклатура КАК Номенклатура,
	               |	ВыкладкаПланограммы.МестоВыкладки КАК МестоВыкладки,
	               |	ВыкладкаПланограммы.ТоварВыведен
	               |ИЗ
	               |	РегистрСведений.ВыкладкаПланограммы КАК ВыкладкаПланограммы
	               |ГДЕ
	               |	ВыкладкаПланограммы.Планограмма = &Планограмма
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	ВыкладкаПланограммы.МестоВыкладки.Наименование,
	               |	МестоВыкладки,
	               |	ВыкладкаПланограммы.Номенклатура.Наименование,
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Номенклатура.Ссылка
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ
	               |	Номенклатура.ЭтоГруппа = ЛОЖЬ
	               |	И Номенклатура.СлужебныйТовар = ЛОЖЬ
	               |	И НЕ Номенклатура.Ссылка В
	               |				(ВЫБРАТЬ
	               |					ВыкладкаПланограммы.Номенклатура
	               |				ИЗ
	               |					РегистрСведений.ВыкладкаПланограммы КАК ВыкладкаПланограммы
	               |				ГДЕ
	               |					ВыкладкаПланограммы.Планограмма = &Планограмма)
	               |	И Номенклатура.Выведена = ЛОЖЬ
	               |	И Номенклатура.ТипТовара В (ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.Продукция), ЗНАЧЕНИЕ(Перечисление.ТипыТоваров.ПокупнойТовар))
	               |	И Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Товар)
				   //+++АК KIRN 2018.03.05 ИП-00018058  
				   |	И ВЫБОР КОГДА &ОтборПоТорговойМарке Тогда Номенклатура.ТорговаяМарка = &ТорговаяМарка Иначе Истина Конец
				   //---АК KIRN 
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Номенклатура.Наименование
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МестаВыкладки.Ссылка
	               |ИЗ
	               |	Справочник.МестаВыкладки КАК МестаВыкладки
	               |ГДЕ
				   |	ВЫБОР КОГДА &ОтборПоТорговойМарке Тогда МестаВыкладки.ТорговаяМарка = &ТорговаяМарка Иначе Истина Конец
	               |	И НЕ МестаВыкладки.Ссылка В
	               |				(ВЫБРАТЬ
	               |					ВыкладкаПланограммы.МестоВыкладки
	               |				ИЗ
	               |					РегистрСведений.ВыкладкаПланограммы КАК ВыкладкаПланограммы
	               |				ГДЕ
	               |					ВыкладкаПланограммы.Планограмма = &Планограмма)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	МестаВыкладки.Наименование";
				   
	Результаты = Запрос.ВыполнитьПакет();
	
	Выборка = Результаты[0].Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("МестоВыкладки") Цикл
		ЭлементРодитель = ДеревоРазмещение.ПолучитьЭлементы().Добавить();
		ЭлементРодитель.Группировка = Выборка.МестоВыкладки;
		ЭлементРодитель.ТипГруппировки = 0;
		ЭлементРодитель.МестоВыкладки = Выборка.МестоВыкладки;
		Пока Выборка.СледующийПоЗначениюПоля("Номенклатура") Цикл
			ЭлементДерево = ЭлементРодитель.ПолучитьЭлементы().Добавить();
			ЭлементДерево.Группировка = Выборка.Номенклатура;
			ЭлементДерево.ТипГруппировки = 1;
			ЭлементДерево.МестоВыкладки = Выборка.МестоВыкладки;
			ЭлементДерево.Номенклатура = Выборка.Номенклатура;
			ЭлементДерево.ТоварВыведен = Выборка.ТоварВыведен;
		КонецЦикла;	
	КонецЦикла;
	
	Выборка = Результаты[1].Выбрать();
	Если Выборка.Количество() > 0 Тогда
		ЭлементРодитель = ДеревоРазмещение.ПолучитьЭлементы().Добавить();
		ЭлементРодитель.Группировка = "Без привязки к месту выкладки!!!";
		ЭлементРодитель.ТипГруппировки = 0;
		Пока Выборка.Следующий() Цикл
			ЭлементДерево = ЭлементРодитель.ПолучитьЭлементы().Добавить();
			ЭлементДерево.Группировка = Выборка.Ссылка;
			ЭлементДерево.ТипГруппировки = 1;
			ЭлементДерево.Номенклатура = Выборка.Ссылка;
		КонецЦикла;	
	КонецЕсли;
	
	Выборка = Результаты[2].Выбрать();
	Пока Выборка.Следующий() Цикл
		ЭлементРодитель = ДеревоРазмещение.ПолучитьЭлементы().Добавить();
		ЭлементРодитель.Группировка = Выборка.Ссылка;
		ЭлементРодитель.ТипГруппировки = 0;
		ЭлементРодитель.МестоВыкладки = Выборка.Ссылка;
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Если НЕ ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			//ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя создавать этот объект без копирования с другого",,,, Отказ);
			СсылкаДляЧтения = Объект.Ссылка;
		Иначе
			СсылкаДляЧтения = Параметры.ЗначениеКопирования;		
		КонецЕсли;
		
	Иначе
		СсылкаДляЧтения = Объект.Ссылка;
	КонецЕсли;
	
	ПерезаполнитьДеревоРазмещения(СсылкаДляЧтения);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ПерезаполнитьДеревоРазмещения(ТекущийОбъект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	//+++АК KIRN 2018.03.05 ИП-00018058
	Если НЕ УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.МожетЗаполнятьАссортиментДругихТорговыхМарок		, Ложь) ТОгда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("для записи измененно планограммы нужно право <МожетЗаполнятьАссортиментДругихТорговыхМарок>",,,, Отказ);
	КонецЕСли;
	//---АК KIRN 
	
	Дерево = РеквизитФормыВЗначение("ДеревоРазмещение");
	ТекущийОбъект.ДополнительныеСвойства.Вставить("ДеревоКЗаписи", Дерево);
	СтрокиБезПривязки = Дерево.Строки.НайтиСтроки(Новый Структура("МестоВыкладки, ТипГруппировки", Справочники.МестаВыкладки.ПустаяСсылка(), 1), Истина);
	Если СтрокиБезПривязки.Количество() > 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нельзя записать планограмму пока есть не привязанные номенклатуры",,,, Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВДругуюВыкладку(Команда)
	
	//+++АК KIRN 2018.03.13  ИП-00018083      
	ФормаВыбора = ПолучитьФорму("Справочник.МестаВыкладки.Форма.ФормаВыбораУпр",Новый Структура("ТорговаяМарка",Объект.ТорговаяМарка),ЭтаФорма);
	//ФормаВыбора.РежимВыбора = Истина;
	ФормаВыбора.Открыть();
	//---АК KIRN 
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ Отказ Тогда
		Набор = РегистрыСведений.ВыкладкаПланограммы.СоздатьНаборЗаписей();
		Набор.Отбор.Планограмма.Установить(ТекущийОбъект.Ссылка);
		Для Каждого СтрокаВыкладка Из ТекущийОбъект.ДополнительныеСвойства.ДеревоКЗаписи.Строки Цикл
			Для Каждого СтрокаНоменклатура Из СтрокаВыкладка.Строки Цикл
				Запись = Набор.Добавить();
				Запись.Планограмма = ТекущийОбъект.Ссылка;
				Запись.МестоВыкладки = СтрокаНоменклатура.МестоВыкладки;
				Запись.Номенклатура = СтрокаНоменклатура.Номенклатура;
				Запись.ТоварВыведен = СтрокаНоменклатура.ТоварВыведен;
			КонецЦикла;	
		КонецЦикла;
		Набор.Записать();
	КонецЕсли;
КонецПроцедуры

//+++АК KIRN 2018.03.05  ИП-00018058
&НаСервере
Процедура ТорговаяМаркаПриИзмененииНаСервере()
	ПерезаполнитьДеревоРазмещения(Объект.Ссылка);	
КонецПРоцедуры
//---АК KIRN 

&НаКлиенте
Процедура ДеревоРазмещениеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДанные = ДеревоРазмещение.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если ЗначениеЗаполнено(ТекДанные.Номенклатура) Тогда
		ОткрытьЗначение(ТекДанные.Номенклатура);
	КонецЕсли;	
	
КонецПроцедуры

//+++АК KIRN 2018.03.05 ИП-00018058  
&НаКлиенте
Процедура ТорговаяМаркаПриИзменении(Элемент)
	ТорговаяМаркаПриИзмененииНаСервере();
КонецПроцедуры
//---АК KIRN 

//+++АК KIRN 2018.03.13  ИП-00018083      
&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ИсточникВыбора.ИмяФормы = "Справочник.МестаВыкладки.Форма.ФормаВыбораУпр" Тогда
		//ДругаяВыкладка = ПредопределенноеЗначение("Справочник.МестаВыкладки.ПустаяСсылка");
		ДругаяВыкладка = ВыбранноеЗначение;
		//Если ВвестиЗначение(ДругаяВыкладка, "Выберите место выкладки", Тип("СправочникСсылка.МестаВыкладки")) Тогда
			МассивНоменклатура = Новый Массив();
			Для Каждого Выделенный Из Элементы.ДеревоРазмещение.ВыделенныеСтроки Цикл
				ТекДанные = ДеревоРазмещение.НайтиПоИдентификатору(Выделенный);
				Если ТекДанные.ТипГруппировки = 1 Тогда
					МассивНоменклатура.Добавить(ТекДанные.Номенклатура);
				КонецЕсли;	
			КонецЦикла;	
			Для Каждого ЭлементВыкладка Из ДеревоРазмещение.ПолучитьЭлементы() Цикл
				ЭлементыНоменклатура = ЭлементВыкладка.ПолучитьЭлементы();
				Колво = ЭлементыНоменклатура.Количество();
				Для н = 1 По Колво Цикл
					Если МассивНоменклатура.Найти(ЭлементыНоменклатура[Колво - н].Номенклатура) <> Неопределено Тогда
						ЭлементыНоменклатура.Удалить(ЭлементыНоменклатура.Индекс(ЭлементыНоменклатура[Колво - н]));
					КонецЕсли;	
				КонецЦикла;	
			КонецЦикла;
			
			Для Каждого ЭлементВыкладка Из ДеревоРазмещение.ПолучитьЭлементы() Цикл
				Если ЭлементВыкладка.МестоВыкладки = ДругаяВыкладка Тогда
					Для Каждого Номен Из МассивНоменклатура Цикл
						ЭлементНоменклатура = ЭлементВыкладка.ПолучитьЭлементы().Добавить();
						ЭлементНоменклатура.Группировка = Номен;
						ЭлементНоменклатура.ТипГруппировки = 1;
						ЭлементНоменклатура.МестоВыкладки = ДругаяВыкладка;
						ЭлементНоменклатура.Номенклатура = Номен;
					КонецЦикла;	
					Прервать;
				КонецЕсли;	
			КонецЦикла;	
		//КонецЕсли;	
	КонецЕСли;
КонецПроцедуры
//---АК KIRN 

//+++АК sole 2018.06.22 ИП-00018848
&НаКлиенте
Процедура ПоказатьИсториюИзменений(Команда)
	ИсторияИзменений = Отчеты.ИсторияИзмененийОбъектов.Создать();
	ИсторияИзменений.СсылкаНаОбъект = Объект.Ссылка;
	Форма = ИсторияИзменений.ПолучитьФорму("ФормаОтчета");
	Форма.СформироватьТаблицуВерсий();
	Форма.Открыть();
КонецПроцедуры

