
&НаСервере
Процедура ЗагрузитьОбновитьСписокНаСервере(ТекКонтрагент)
	НастройкаАПИ = ОбменССистемойВетис.ОсновнаяНастройкаАПИ();
	ПроксиEnterprise = ОбменССистемойВетис.ПолучитьПроксиEnterprise(НастройкаАПИ);		
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МЙ_СоответствиеКонтрагентов.GUID
	               |ИЗ
	               |	РегистрСведений.МЙ_СоответствиеКонтрагентов КАК МЙ_СоответствиеКонтрагентов
	               |ГДЕ
	               |	МЙ_СоответствиеКонтрагентов.Контрагент = &Контрагент";
	
	Запрос.УстановитьПараметр("Контрагент", ТекКонтрагент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Выборка.Следующий();
	
	
	GUID = Выборка.GUID;
	
	
	Попытка
		Ответ = ПроксиEnterprise.GetBusinessEntityByGuid(GUID);
	Исключение
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	ТЗГуидПлощадок = Новый ТаблицаЗначений; 	
	ТЗГуидПлощадок.Колонки.Добавить("ГУИД", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(36)));
	
	Если ТипЗнч(Ответ) = Тип("ОбъектXDTO") Тогда
		СписокПлощадок = ОбменССистемойВетис.ПолучитьСвойствоОбъектаXDTO(Ответ, "activityLocation"); 	
		
		Если ТипЗнч(СписокПлощадок) = Тип("СписокXDTO") Тогда
			
			Для каждого ЗначСписка Из СписокПлощадок Цикл
				Нстр = ТЗГуидПлощадок.Добавить();
				Нстр.ГУИД = ЗначСписка.enterprise.guid;
			КонецЦикла;
			
		КонецЕсли;		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ТЗ.ГУИД
	|ПОМЕСТИТЬ ВТ_Исх
	|ИЗ
	|	&ТЗГуидПлощадок КАК ТЗ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Исх.ГУИД,
	|	МЙ_ПоднадзорныеОбъектыКонтрагентов.Ссылка
	|ИЗ
	|	ВТ_Исх КАК ВТ_Исх
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МЙ_ПоднадзорныеОбъектыКонтрагентов КАК МЙ_ПоднадзорныеОбъектыКонтрагентов
	|		ПО ВТ_Исх.ГУИД = МЙ_ПоднадзорныеОбъектыКонтрагентов.GUID";
	
	Запрос.УстановитьПараметр("ТЗГуидПлощадок", ТЗГуидПлощадок);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Для каждого Стр Из ТЗ Цикл
		 GUIDПлощадки = Стр.ГУИД;
		 Попытка
			 Ответ = ПроксиEnterprise.GetEnterpriseByGuid(GUIDПлощадки);
		 Исключение
			 Сообщить(ОписаниеОшибки());
			 Возврат;
		 КонецПопытки;
		 
		 Если ТипЗнч(Ответ) = Тип("ОбъектXDTO") Тогда
			 
			 Если ЗначениеЗаполнено(Стр.Ссылка) = Истина Тогда
				 ОбъектСпр = Стр.Ссылка.ПолучитьОбъект();				
			 Иначе
				 ОбъектСпр = Справочники.МЙ_ПоднадзорныеОбъектыКонтрагентов.СоздатьЭлемент();			
			 КонецЕсли; 
			 
			 ЗаполнитьЗначенияСвойств(ОбъектСпр, Ответ);
			 
			 ОбъектСпр.Владелец = ТекКонтрагент;			 
			 ОбъектСпр.addressView = Ответ.address.addressView;
			 ОбъектСпр.Наименование = ОбъектСпр.Name + " " + ОбъектСпр.addressView; 
			 ОбъектСпр.Записать();	 
			 
		 КонецЕсли; 
		 
	КонецЦикла;	

КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОбновитьСписок(Команда)
	ТекКонтрагент = ЭтаФорма.Список.Отбор.Элементы[0].ПравоеЗначение;
	Если ЗначениеЗаполнено(ТекКонтрагент) = Истина Тогда
		ЗагрузитьОбновитьСписокНаСервере(ТекКонтрагент);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

//+++АК ERMK 2018.12.03 ИП-00020563
// Открывает форму обработки МЙ_ПоискКонтрагентаВВетисе с установкой контрагента равному текущему владельцу
&НаКлиенте
Процедура ПоискКонтрагента(Команда)
	
	//ТекКонтрагент = ЭтаФорма.Список.Отбор.Элементы[0].ПравоеЗначение; // Определеяем значение отбора по владельцу
	ТекКонтрагент = ПолучитьЗначениеОтбораПоИмени("Владелец");
	ПараметрыОткрытия = Новый Структура("Контрагент", ТекКонтрагент);
	ОткрытьФорму("Обработка.МЙ_ПоискКонтрагентаВВетисе.Форма", ПараметрыОткрытия);
	
КонецПроцедуры

//+++АК ERMK 2018.12.03 ИП-00020563
// Находит элемент отбора по имени и возвращает значение отбора
&НаКлиенте
Функция ПолучитьЗначениеОтбораПоИмени(ИмяПоля) 

	ПолеОтбора = Новый ПолеКомпоновкиДанных(ИмяПоля);
	Для Каждого ЭлементОтбора Из ЭтаФорма.Список.Отбор.Элементы Цикл
		Если ЭлементОтбора.ЛевоеЗначение = ПолеОтбора Тогда
			Возврат ЭлементОтбора.ПравоеЗначение;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

