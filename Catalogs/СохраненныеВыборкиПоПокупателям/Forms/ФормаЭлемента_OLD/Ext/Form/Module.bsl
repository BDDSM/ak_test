
&НаСервере
Процедура ЗаполнитьОтборы()
			    
	ТекОтборы = Объект.Ссылка.ХранилищеОтборПокупатели.Получить();
	СписокПокупатели.Отбор.Элементы.Очистить();
	
	Если ТекОтборы <> Неопределено Тогда
				
		Для каждого ТекСтр Из ТекОтборы.Элементы Цикл
			
			НовыйОтбор = СписокПокупатели.Отбор.Элементы.Добавить(ТипЗнч(ТекСтр));
			ЗаполнитьЗначенияСвойств(НовыйОтбор, ТекСтр);
			Попытка
				Если ТекСтр.Элементы.Количество() > 0 Тогда
					ДобавитьПодчинённыеОтборы(ТекСтр, НовыйОтбор);
				КонецЕсли;	
			Исключение
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	
	ТекОтборы = Объект.Ссылка.ХранилищеОтборТовары.Получить();
	СписокТовары.Отбор.Элементы.Очистить();
	
	Если ТекОтборы <> Неопределено Тогда
				
		Для каждого ТекСтр Из ТекОтборы.Элементы Цикл
			
			НовыйОтбор = СписокТовары.Отбор.Элементы.Добавить(ТипЗнч(ТекСтр));
			ЗаполнитьЗначенияСвойств(НовыйОтбор, ТекСтр);
			Попытка
				Если ТекСтр.Элементы.Количество() > 0 Тогда
					ДобавитьПодчинённыеОтборы(ТекСтр, НовыйОтбор);
				КонецЕсли;	
			Исключение
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	
	ТекОтборы = Объект.Ссылка.ХранилищеОтборПоЧекам.Получить();
	СписокЧеки.Отбор.Элементы.Очистить();
	
	Если ТекОтборы <> Неопределено Тогда
				
		Для каждого ТекСтр Из ТекОтборы.Элементы Цикл
			
			НовыйОтбор = СписокЧеки.Отбор.Элементы.Добавить(ТипЗнч(ТекСтр));
			ЗаполнитьЗначенияСвойств(НовыйОтбор, ТекСтр);
			Попытка
				Если ТекСтр.Элементы.Количество() > 0 Тогда
					ДобавитьПодчинённыеОтборы(ТекСтр, НовыйОтбор);
				КонецЕсли;	
			Исключение
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДобавитьПодчинённыеОтборы(ТекСтрРодитель, НовыйОтборРодитель)
	
	Для каждого ТекСтр Из ТекСтрРодитель.Элементы Цикл
	    		
	    НовыйОтбор = НовыйОтборРодитель.Элементы.Добавить(ТипЗнч(ТекСтр));
		ЗаполнитьЗначенияСвойств(НовыйОтбор, ТекСтр);
		
		Попытка
		Если ТекСтр.Элементы.Количество() > 0 Тогда
			ДобавитьПодчинённыеОтборы(ТекСтр, НовыйОтбор);	
		КонецЕсли;	
		Исключение
		КонецПопытки;
		
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьОтборы();
		
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ХранилищеОтборПокупатели = Новый ХранилищеЗначения(СписокПокупатели.Отбор);
	ТекущийОбъект.ХранилищеОтборТовары = Новый ХранилищеЗначения(СписокТовары.Отбор);
	ТекущийОбъект.ХранилищеОтборПоЧекам = Новый ХранилищеЗначения(СписокЧеки.Отбор);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	
	ПриЗакрытииФормыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииФормыНаСервере()
	
	ВнешниеИсточникиДанных.Loyality.РазорватьСоединение();
	ВнешниеИсточникиДанных.SMS_Izbenka.РазорватьСоединение();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	//СтрСоединенияДанныеТовародвижение = ОбменСAccess.ПолучитьСтрокуСоединения("Loyalty");
	//
	//пСоед = Новый ПараметрыСоединенияВнешнегоИсточникаДанных;
	//пСоед.СтрокаСоединения= СтрСоединенияДанныеТовародвижение;
	//ВнешниеИсточникиДанных.Loyality.УстановитьОбщиеПараметрыСоединения(пСоед);
	ВнешниеИсточникиДанных.Loyality.УстановитьСоединение();
	
	//СтрСоединенияДанныеТовародвижение = ОбменСAccess.ПолучитьСтрокуСоединения("sms_izbenka");
	//
	//пСоед = Новый ПараметрыСоединенияВнешнегоИсточникаДанных;
	//пСоед.СтрокаСоединения= СтрСоединенияДанныеТовародвижение;
	//ВнешниеИсточникиДанных.SMS_Izbenka.УстановитьОбщиеПараметрыСоединения(пСоед);
	ВнешниеИсточникиДанных.SMS_Izbenka.УстановитьСоединение();
	
КонецПроцедуры
