
Перем ДобавитьВНулевойМаршрут;
Перем УдалитьВМаршрутах;
Перем СтараяДатаОткрытия;

Функция ПолучитьЦветТТ() Экспорт
	
	Возврат ЦветТорговойТочки.Получить();
	
КонецФункции

Процедура ДобавитьТочкуВНулевойМаршрут()
	
	Перем Маршрут;
	
	//+++АК sole 2018.07.30 ИП-00019391
	ОсновнойСкладИД = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ЭтотОбъект.ОсновнойСклад, "id_TT");
	
	Пока Истина Цикл
		
		Если ОсновнойСкладИД = 8 Тогда
			//Склад "Кавказский_1"
			Маршрут = Справочники.Маршруты.НайтиПоКоду("000000027");	
			Прервать;
		КонецЕсли;
	
		Если ОсновнойСкладИД = 30 Тогда
			//Склад "Северный"
			Маршрут = Справочники.Маршруты.НайтиПоКоду("000000822");
			Прервать;
		КонецЕсли;
		
		Прервать;
	КонецЦикла;
	//---АК sole 2018.07.30 ИП-00019391
	
	//+++АК sole 2018.08.07 ИП-00019391.01
	Если Не ЗначениеЗаполнено(Маршрут) Тогда
		Возврат;
	КонецЕсли;
	
	МаршрутОбъект = Маршрут.ПолучитьОбъект();
	МаршрутОбъект.ОбменДанными.Загрузка = Истина;
	НоваяСтрока = МаршрутОбъект.ТорговыеТочки.Добавить();
	НоваяСтрока.СтруктурнаяЕдиница = ЭтотОбъект.Ссылка;
	
	Попытка
		МаршрутОбъект.Записать();
	Исключение 
	КонецПопытки;
	//---АК sole 2018.08.07 ИП-00019391.01
	
КонецПроцедуры

//+++АК sole 2018.08.07 ИП-00019391.01
Процедура УдалитьТочкуВМаршрутах()
	
	Перем Запрос;
	
	Запрос = Новый Запрос();

Запрос.Текст =
"ВЫБРАТЬ
|	МаршрутыТорговыеТочки.Ссылка
|
|ИЗ Справочник.Маршруты.ТорговыеТочки КАК МаршрутыТорговыеТочки
|ГДЕ
|		НЕ МаршрутыТорговыеТочки.Ссылка.ПометкаУдаления
|	И	МаршрутыТорговыеТочки.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
|
|СГРУППИРОВАТЬ ПО МаршрутыТорговыеТочки.Ссылка
|";

	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", ЭтотОбъект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		МаршрутОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Инд = МаршрутОбъект.ТорговыеТочки.Количество() - 1;
			
		Пока Инд >= 0 Цикл
			Стр = МаршрутОбъект.ТорговыеТочки[Инд];
			
			Если Стр.СтруктурнаяЕдиница = ЭтотОбъект.Ссылка Тогда
				МаршрутОбъект.ТорговыеТочки.Удалить(Инд);
			КонецЕсли;
			
			Инд = Инд - 1;
		КонецЦикла;
		
		Попытка
			//+++АК sole 2018.08.29 ИП-00019691
			МаршрутОбъект.ДеактивацияТТ = Истина;
			//---АК sole 2018.08.29 ИП-00019691
			МаршрутОбъект.Записать();
		Исключение 
		КонецПопытки;
		
	КонецЦикла;
			
КонецПроцедуры

Процедура СоздатьРабочиеМеста()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если ТипРозничнойТочки = Перечисления.ТипыРозничныхТочек.Магазин
			И ЗначениеЗаполнено(НомерТочки) Тогда
		РабочееМесто = Справочники.РабочиеМеста.НайтиПоРеквизиту("CashName", "ККМ " + Формат(НомерТочки, "ЧГ=0") + ".1");
		Если НЕ ЗначениеЗаполнено(РабочееМесто) Тогда
			РабМесто = Справочники.РабочиеМеста.СоздатьЭлемент();
			РабМесто.Наименование = "ККМ " + Формат(НомерТочки, "ЧГ=0") + ".1";
			РабМесто.НомерРабочегоМеста = 1;
			РабМесто.СтруктурнаяЕдиница = Ссылка;
			РабМесто.КаталогВыгрузкиВоФронтол = "\\10.0.0.43\exch\" + Формат(НомерТочки, "ЧГ=0") + "1\";
			РабМесто.Записать();
			
			РабМесто = Справочники.РабочиеМеста.СоздатьЭлемент();
			РабМесто.Наименование = "ККМ " + Формат(НомерТочки, "ЧГ=0") + ".2";
			РабМесто.НомерРабочегоМеста = 2;
			РабМесто.СтруктурнаяЕдиница = Ссылка;
			РабМесто.КаталогВыгрузкиВоФронтол = "\\10.0.0.43\exch\" + Формат(НомерТочки, "ЧГ=0") + "2\";
			РабМесто.Записать();
			
			РабМесто = Справочники.РабочиеМеста.СоздатьЭлемент();
			РабМесто.Наименование = "ККМ " + Формат(НомерТочки, "ЧГ=0") + ".3";
			РабМесто.НомерРабочегоМеста = 3;
			РабМесто.СтруктурнаяЕдиница = Ссылка;
			РабМесто.КаталогВыгрузкиВоФронтол = "\\10.0.0.43\exch\" + Формат(НомерТочки, "ЧГ=0") + "3\";
			РабМесто.Записать();
			
			РабМесто = Справочники.РабочиеМеста.СоздатьЭлемент();
			РабМесто.Наименование = "ККМ " + Формат(НомерТочки, "ЧГ=0") + ".4";
			РабМесто.НомерРабочегоМеста = 4;
			РабМесто.СтруктурнаяЕдиница = Ссылка;
			РабМесто.КаталогВыгрузкиВоФронтол = "\\10.0.0.43\exch\" + Формат(НомерТочки, "ЧГ=0") + "4\";
			РабМесто.Записать();
			
			РабМесто = Справочники.РабочиеМеста.СоздатьЭлемент();
			РабМесто.Наименование = "ККМ " + Формат(НомерТочки, "ЧГ=0") + ".5";
			РабМесто.НомерРабочегоМеста = 5;
			РабМесто.СтруктурнаяЕдиница = Ссылка;
			РабМесто.КаталогВыгрузкиВоФронтол = "\\10.0.0.43\exch\" + Формат(НомерТочки, "ЧГ=0") + "5\";
			РабМесто.Записать();
			
			РабМесто = Справочники.РабочиеМеста.СоздатьЭлемент();
			РабМесто.Наименование = "ККМ " + Формат(НомерТочки, "ЧГ=0") + ".6";
			РабМесто.НомерРабочегоМеста = 6;
			РабМесто.СтруктурнаяЕдиница = Ссылка;
			РабМесто.КаталогВыгрузкиВоФронтол = "\\10.0.0.43\exch\" + Формат(НомерТочки, "ЧГ=0") + "6\";
			РабМесто.Записать();
		КонецЕсли;
	//+++АК mika 2018.05.24 ИП-00018792 (Микромаркет)
	//Пока понятно зачем на Микромаркете рабочее место (персонал не него не грузится)
	ИначеЕсли ТипРозничнойТочки = Перечисления.ТипыРозничныхТочек.Микромаркет
		И ЗначениеЗаполнено(НомерТочки) Тогда
		РабочееМесто = Справочники.РабочиеМеста.НайтиПоРеквизиту("CashName", "ККМ " + Формат(НомерТочки, "ЧГ=0") + ".1");
		Если НЕ ЗначениеЗаполнено(РабочееМесто) Тогда
			РабМесто = Справочники.РабочиеМеста.СоздатьЭлемент();
			РабМесто.Наименование = "ККМ " + Формат(НомерТочки, "ЧГ=0") + ".1";
			РабМесто.НомерРабочегоМеста = 1;
			РабМесто.СтруктурнаяЕдиница = Ссылка;
			РабМесто.КаталогВыгрузкиВоФронтол = "\\10.0.0.43\exch\" + Формат(НомерТочки, "ЧГ=0") + "1\";
			РабМесто.Записать();
		КонецЕсли;
	//+++АК mika
	КонецЕсли;	
		
КонецПроцедуры	

Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
//+++АК KOPA 2018.03.12 ИП-00017970.01
	ОбработатьНомерСтороннейТочки();
	ПроверитьДубльНомерСтороннейТочки(Отказ);
	
	Если Отказ Тогда
		Возврат;	
	КонецЕсли;
//---АК KOPA

	Если ЭтоНовый() Тогда
		СсылкаОбъект = ЭтотОбъект.ПолучитьСсылкуНового();
		Если НЕ ЗначениеЗаполнено(СсылкаОбъект) Тогда
			СсылкаОбъект = Справочники.СтруктурныеЕдиницы.ПолучитьСсылку();
			ЭтотОбъект.УстановитьСсылкуНового(СсылкаОбъект);
		КонецЕсли;
		//+++АК BELN 2018.03.06 по просьбе Разгуляева
		Если НЕ ТипРозничнойТочки=перечисления.ТипыРозничныхТочек.Избенка И ТипСтруктурнойЕдиницы=Перечисления.ТипыСтруктурныхЕдиниц.Розница Тогда
			ПриемкаТовараБезПересчета=Истина;
		КонецЕсли;
		//---АК BELN 2018.03.06 
	Иначе
		СсылкаОбъект = Ссылка;
	КонецЕсли;
	
	ТемпРежимы = ВместимостьПоТемпературнымРежимам.Выгрузить();
	ТемпРежимы.Колонки.Добавить("Колво");
	ТемпРежимы.ЗаполнитьЗначения(1, "Колво");
	ТемпРежимы.Свернуть("ТемпературныйРежим", "Колво");
	Для Каждого строкаТемпРежим Из ТемпРежимы Цикл
		Если строкаТемпРежим.Колво > 1 Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Для торговой точки указано несколько строк вместимости по одному температурному режиму!",,,,Отказ);
		КонецЕсли;	
	КонецЦикла;	
	
	Если НЕ Отказ Тогда
		
		НайденноеЗначение = Неопределено;
		
		Если ДополнительныеСвойства.Свойство("ЦветТТ", НайденноеЗначение) Тогда
				
			ЦветТорговойТочки = Новый ХранилищеЗначения(НайденноеЗначение);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение
		И НЕ ЗначениеЗаполнено(id_ЦФО) Тогда
		id_ЦФО = ОбщегоНазначенияСервер.ПолучитьНовыйУникальныйИдентификатор("СтруктурныеЕдиницы", "id_ЦФО");
	ИначеЕсли НЕ ЗначениеЗаполнено(id_TT) Тогда
		id_TT = ОбщегоНазначенияСервер.ПолучитьНовыйУникальныйИдентификатор("СтруктурныеЕдиницы", "id_TT");
	КонецЕсли;	
	
	Если ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Розница Тогда
		Если НЕ ЗначениеЗаполнено(СкладТорговогоЗала) Тогда
			//ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен склад торгового зала (закладка Склады)");
			//Отказ = Истина;
			СкладОбъект = Справочники.Склады.СоздатьЭлемент();
			СкладОбъект.Наименование = "Торговый зал";
			СкладОбъект.Владелец = СсылкаОбъект;
			СкладОбъект.ВидСклада = Перечисления.ВидыСкладов.Розничный;
			СкладОбъект.Записать();
			СкладТорговогоЗала = СкладОбъект.Ссылка;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СкладРасхождений) Тогда
			//ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен склад торгового зала (закладка Склады)");
			//Отказ = Истина;
			СкладОбъект = Справочники.Склады.СоздатьЭлемент();
			СкладОбъект.Наименование = "Склад расхождений";
			СкладОбъект.Владелец = СсылкаОбъект;
			СкладОбъект.ВидСклада = Перечисления.ВидыСкладов.Розничный;
			СкладОбъект.Записать();
			СкладРасхождений = СкладОбъект.Ссылка;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(НомерТочки) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен номер магазина");
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;	
	
	Если ТипРозничнойТочки <> Перечисления.ТипыРозничныхТочек.Магазин Тогда
		АкцептантЗаявок = Неопределено;
	КонецЕсли;
	
	Если ТипРозничнойТочки = Перечисления.ТипыРозничныхТочек.Магазин Тогда
		Если НЕ ЗначениеЗаполнено(ГрафикИнвентаризации) Тогда
			ГрафикИнвентаризации = Справочники.ГрафикиИнвентаризацииМагазинов.НайтиПоКоду("00002");
		КонецЕсли;	
		Если НЕ ЗначениеЗаполнено(ДатаЗапускаНовойСистемыУчета) Тогда
			ДатаЗапускаНовойСистемыУчета = ТекущаяДата();
		КонецЕсли;	
	КонецЕсли;	
	
	//Если ТипРозничнойТочки = Перечисления.ТипыРозничныхТочек.Магазин Тогда
	//	Если АйпиДляОпределенияТочкиПриПодключении.Количество() = 0
	//		И ЗначениеЗаполнено(НомерТочки) Тогда
	//		СтрокаДоб = АйпиДляОпределенияТочкиПриПодключении.Добавить();
	//		СтрокаДоб.Айпи = "10.1." + НомерТочки;
	//	КонецЕсли;	
	//КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(Код) Тогда
		УстановитьНовыйКод("0");
	КонецЕсли;	
	
	ТелефонныйНомер1 = СокрЛП(ТелефонныйНомер1);
	ТелефонныйНомер2 = СокрЛП(ТелефонныйНомер2);
	
	//+++АК sole 2018.06.21 ИП-00018725
	Если ЭтотОбъект.ТипРозничнойТочки <> Перечисления.ТипыРозничныхТочек.Перекресток И ЭтотОбъект.ТипРозничнойТочки <> Перечисления.ТипыРозничныхТочек.Пятерочка Тогда
		
		//+++АК sole 2018.08.07 ИП-00019391.01
		Если ЭтотОбъект.Активное И Не ЭтотОбъект.Ссылка.Активное Тогда
			ДобавитьВНулевойМаршрут = Истина;
			УдалитьВМаршрутах = Ложь;			
		КонецЕсли;
		
		Если НЕ ЭтотОбъект.Активное И ЭтотОбъект.Ссылка.Активное Тогда
			ДобавитьВНулевойМаршрут = Ложь;
			УдалитьВМаршрутах = Истина;
		КонецЕсли;
		//---АК sole 2018.08.07 ИП-00019391.01
		
	КонецЕсли;
	//---АК sole 2018.06.21 ИП-00018725
	
	//+++АК
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый()
													ИЛИ НЕ ЭтотОбъект.ТипСтруктурнойЕдиницы = ЭтотОбъект.Ссылка.ТипСтруктурнойЕдиницы);
	Если НЕ ЭтотОбъект.ОжидаемаяВыручкаНаЗавтра = ЭтотОбъект.Ссылка.ОжидаемаяВыручкаНаЗавтра Тогда
		ЭтотОбъект.АвторИзмененийОжидаемойВыручки = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	//---АК
	//+++АК БЕЛН 22.06.2017
	Если ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Розница Тогда
		Если ЭтоНовый() Тогда
			ДополнительныеСвойства.Вставить("ИзмененГрафик", Истина);
		Иначе	
		    Если ГрафикРаботыМагазина<>Ссылка.ГрафикРаботыМагазина Тогда
				ДополнительныеСвойства.Вставить("ИзмененГрафик", Истина);
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли; 
	//---АК БЕЛН 22.06.2017
	
	//+++AK GREK 17.10.2017 ИП-00016367
	СтараяДатаОткрытия = '00010101';
	Если Не ЭтоНовый() Тогда		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	СтруктурныеЕдиницы.ДатаОткрытия
		               |ИЗ
		               |	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		               |ГДЕ
		               |	СтруктурныеЕдиницы.Ссылка = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Результат = Запрос.Выполнить();
		Выборка = Результат.Выбрать();
		
		Если Выборка.Следующий() Тогда
			ДатаОткрытияИзЗапроса = Выборка.ДатаОткрытия;	
		КонецЕсли;
		
		Если ДатаОткрытияИзЗапроса <> ДатаОткрытия Тогда
			СтараяДатаОткрытия = ДатаОткрытияИзЗапроса;
		КонецЕсли;
	КонецЕсли;
	//---AK
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//+++АК sole 2018.08.07 ИП-00019391.01
	Пока Истина Цикл
		
		Если ДобавитьВНулевойМаршрут Тогда
			ДобавитьТочкуВНулевойМаршрут();
			Прервать;	
		КонецЕсли;
		
		Если УдалитьВМаршрутах Тогда
			УдалитьТочкуВМаршрутах();
			Прервать;	
		КонецЕсли;
		
		Прервать;	
	КонецЦикла;
	//---АК sole 2018.08.07 ИП-00019391.01
	
	СоздатьРабочиеМеста();
	
	МенеджерЗаписиУИН = РегистрыСведений.УИНыДляВьюшки.СоздатьМенеджерЗаписи();
	МенеджерЗаписиУИН.Ссылка 	= Ссылка;
	МенеджерЗаписиУИН.УИН 		= Строка(Ссылка.УникальныйИдентификатор());
	Если ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Подразделение Тогда
		МенеджерЗаписиУИН.id 		= id_ЦФО;
		МенеджерЗаписиУИН.ТипЗаписи = 2;
	Иначе	
		МенеджерЗаписиУИН.id 		= id_TT;
		МенеджерЗаписиУИН.ТипЗаписи = 1;
	КонецЕсли;
	МенеджерЗаписиУИН.Записать();
	
	//+++АК РОЛИ ОТВЕТСТВЕННЫХ
	Если ДополнительныеСвойства.ЭтоНовый Тогда
		
		//
		Если ПланыВидовХарактеристик.ТипыРолейПользователя.СпециалистПоХолодильномуОборудованию.ТипСтруктурнойЕдиницы = ТипСтруктурнойЕдиницы Тогда
			
			//
			РольПоУмолчанию = ПланыВидовХарактеристик.ТипыРолейПользователя.СпециалистПоХолодильномуОборудованию.РольПоУмолчанию;
			Если ЗначениеЗаполнено(РольПоУмолчанию) Тогда
				
				//
				МЗ = РегистрыСведений.СоответствиеОбъектРоль.СоздатьМенеджерЗаписи();
				
				//
				МЗ.Период 	= ТекущаяДата();
				МЗ.Объект 	= Ссылка;
				МЗ.ТипРоли 	= ПланыВидовХарактеристик.ТипыРолейПользователя.СпециалистПоХолодильномуОборудованию;
				
				//
				МЗ.РольПользователя = РольПоУмолчанию;
				
				//
				МЗ.ТипРолиID = МЗ.ТипРоли.Код;
				
				//
				МЗ.Записать();
				
			КонецЕсли; 
		
		КонецЕсли; 
	
	КонецЕсли; 
	//---АК
	//mind переделал принцип записи в регистр
	////+++АК БЕЛН 22.06.2017
	//Если ДополнительныеСвойства.Свойство("ИзмененГрафик") Тогда
	//	Мен=РегистрыСведений.ГрафикиРаботыМагазина.СоздатьМенеджерЗаписи();
	//	Мен.Период=НачалоДня(ТекущаяДата());
	//	Мен.Магазин=Ссылка;
	//	Мен.График=ГрафикРаботыМагазина;
	//	Мен.Записать();
	//КонецЕсли; 
	////---АК БЕЛН 22.06.2017
	
	//+++AK GREK 17.10.2017 ИП-00016367
	Если Не Отказ И СтараяДатаОткрытия <> '00010101' Тогда
		Сообщить("Дата открытия изменена! Будут отправлены соответсвующие уведомления");
		//Запишем изменения даты открытия
		ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
		СтрЗапрос = "INSERT INTO Reports.dbo.Changes_open_date_store(id_tt, date_of_change, old_date, new_date, _description) VALUES(&id_tt, '&date_of_change', '&old_date', '&new_date', '&_description');";
		СтрЗапрос = СтрЗаменить(СтрЗапрос, "&id_tt", СтрЗаменить(строка(id_TT)," ","")); 
		СтрЗапрос = СтрЗаменить(СтрЗапрос, "&date_of_change", Формат(ВнешниеДанные.ВернутьТекущуюДатуSQL(),"ДФ=yyyyMMdd hh:mm:ss"));
		СтрЗапрос = СтрЗаменить(СтрЗапрос, "&old_date", Формат(СтараяДатаОткрытия,"ДФ=yyyyMMdd hh:mm:ss")); 
		СтрЗапрос = СтрЗаменить(СтрЗапрос, "&new_date", Формат(ДатаОткрытия,"ДФ=yyyyMMdd hh:mm:ss")); 
		СтрЗапрос = СтрЗаменить(СтрЗапрос, "&_description", Наименование); 
		rs = ADOСоединение.Execute(СтрЗапрос);
		//Отправим уведомления об изменении
		//СтрЗапрос = "exec Reports..send_email_results 838,838";
		//rs = ADOСоединение.Execute(СтрЗапрос);
	КонецЕсли;
	//---AK
	//+++АК bara 15405.04 29.11.17
	Если  Отказ = Ложь Тогда
		УстановитьПривилегированныйРежим(Истина);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	АК_Размен.Ссылка,
		|	АК_Размен.СтатусТорговойТочкиЗакрыто
		|ИЗ
		|	Справочник.АК_Размен КАК АК_Размен
		|ГДЕ
		|	АК_Размен.Магазин = &Магазин";
		
		Запрос.УстановитьПараметр("Магазин", ЭтотОбъект.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Если ЭтотОбъект.СтатусТорговойТочки = Перечисления.СтатусыТорговыхТочек.Закрыт и Выборка.СтатусТорговойТочкиЗакрыто = Ложь Тогда
				Размен = Выборка.Ссылка.ПолучитьОбъект();
				Размен.ОбменДанными.Загрузка = Истина;
				Размен.СтатусТорговойТочкиЗакрыто = Истина;
				Размен.записать();
			КонецЕсли;						
		КонецЦикла;
		УстановитьПривилегированныйРежим(Ложь);
	КонецЕсли; 
	//---
	
	ДобавитьВМаршрутТилси0_ЕслиНеобходимо();
	
	//+++ AK suvv 19.07.2018 ИП-00019141
	Если не Отказ и ЗначениеЗаполнено(ФактическаяДатаПередачи) Тогда
		УстановитьЛимитыАренднойПлаты();
	КонецЕсли;
	//--- AK suvv

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	ЭтотОбъект.id_TT 	= 0;
	ЭтотОбъект.id_ЦФО 	= 0;
	ЭтотОбъект.СкладТорговогоЗала = Неопределено;
	ЭтотОбъект.АйпиДляОпределенияТочкиПриПодключении.Очистить();
	ЭтотОбъект.УведомлениеОбОткрытииОППодано 	= Ложь;
	ЭтотОбъект.УведомлениеОбОткрытииПодано 	= Ложь;
	ЭтотОбъект.УведомлениеОЗакрытииОППодано 	= Ложь;
	ЭтотОбъект.УведомлениеОСнятииСУчетаПодано 	= Ложь;
	ЭтотОбъект.ТорговыйСбор = 0;
	ЭтотОбъект.ДатаПереходаНаУчетПоОбособленномуПодразделению = '00010101';
	НомерПТК = "";
	НеТоргуетАлкольнойПродукцией = Ложь;
	ОКПО = "";
	ПризнакПривязкиПродавцовВЗУПе = 0;
	
КонецПроцедуры

Процедура ДобавитьФайлВОсновнойМагазин(Файл) Экспорт
	Если ФайлыСписок.Найти(Перечисления.ТипыЗагружаемыхФайлов.ДоговорАренды,"ТипыЗагружаемыхФайлов") = Неопределено тогда
		НовТип = ФайлыСписок.Добавить();
		НовТип.ТипыЗагружаемыхФайлов = Перечисления.ТипыЗагружаемыхФайлов.ДоговорАренды;
	КонецЕсли;
	
	НовФайл = ПрикрепленныеФайлы.Добавить();
	НовФайл.Файл = Файл;
	НовФайл.ДатаДобавления = ТекущаяДата();
	НовФайл.ТипыЗагружаемыхФайлов = Перечисления.ТипыЗагружаемыхФайлов.ДоговорАренды;
	//+++АК SUVV 2018.03.05 ИП-00017818
	//при добавлении файлов записывать структурную единицу не нужно, т.к. пользователь может передумать ее создавать
	//ЭтотОбъект.ОбменДанными.Загрузка = истина;
	//ЭтотОбъект.Записать();
	//---АК SUVV

КонецПроцедуры

//Раков --

//+++АК KOPA 2018.03.12 ИП-00017970.01
Процедура ОбработатьНомерСтороннейТочки()
	//++АК luza 04.10.2018 ИП-00020064
	//Если Не ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.СторонняяРозница Тогда
	Если ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.СторонняяРозница 
		ИЛИ ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.СкладСтороннейРозницы Тогда  //+++АК luza 04.10.2018 ИП-00020064
	Иначе	
		НомерСтороннейТочки = 0;	
	КонецЕсли;
КонецПроцедуры//---АК KOPA

//+++АК KOPA 2018.03.12 ИП-00017970.01
Процедура ПроверитьДубльНомерСтороннейТочки(Отказ)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СтруктурныеЕдиницы.Наименование + "" Код: "" + СтруктурныеЕдиницы.Код КАК Представление
		|ИЗ
		|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		|ГДЕ
		|	НЕ СтруктурныеЕдиницы.ПометкаУдаления
		|	И СтруктурныеЕдиницы.Ссылка <> &Ссылка
		|	И СтруктурныеЕдиницы.НомерСтороннейТочки = &НомерСтороннейТочки
		|	И СтруктурныеЕдиницы.НомерСтороннейТочки <> ""0""";
	
	Запрос.УстановитьПараметр("НомерСтороннейТочки", НомерСтороннейТочки);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;	
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Выборка.Следующий();
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "Уже есть номер торговой точки(Сторонняя розница): " + Выборка.Представление;
	Сообщение.Сообщить();
	Отказ = Истина;	
КонецПроцедуры//---АК KOPA

//+++ AK suvv 21.05.2018 ИП-00018555 
&НаСервере
Процедура АкцептованиеЗаявокНаУслуги() Экспорт
	
	СуммаЛимита = Ссылка.ОбщаяСтоимость; 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(ЗаявкаНаУслугиМатериалыУслуги.Сумма) КАК Сумма
	|ИЗ
	|	Документ.ЗаявкаНаУслугиМатериалы.Услуги КАК ЗаявкаНаУслугиМатериалыУслуги
	//+++ AK suvv 2018.09.05 ИП-00019410
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтрагентыИсключенияАкцептованиеЗаявокНаМатериалыУслуги КАК КонтрагентыИсключенияАкцептованиеЗаявокНаМатериалыУслуги
	|		ПО ЗаявкаНаУслугиМатериалыУслуги.Ссылка.Контрагент = КонтрагентыИсключенияАкцептованиеЗаявокНаМатериалыУслуги.Контрагент
	//--- AK suvv
	|ГДЕ
	|	ЗаявкаНаУслугиМатериалыУслуги.Акцептована
	|	И ЗаявкаНаУслугиМатериалыУслуги.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	|	И НЕ ЗаявкаНаУслугиМатериалыУслуги.Ссылка.ПометкаУдаления
	//+++ AK suvv 2018.09.05 ИП-00019410
	|	И ЕСТЬNULL(КонтрагентыИсключенияАкцептованиеЗаявокНаМатериалыУслуги.Контрагент, """") = """"";
	//--- AK suvv
	Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Ссылка);	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		СуммаАкцептовано = ?(Выборка.Сумма = Null, 0, Выборка.Сумма);
	Иначе
		СуммаАкцептовано = 0;
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаявкаНаУслугиМатериалыУслуги.Ссылка,
	|	ЗаявкаНаУслугиМатериалыУслуги.Сумма
	|ИЗ
	|	Документ.ЗаявкаНаУслугиМатериалы.Услуги КАК ЗаявкаНаУслугиМатериалыУслуги
	//+++ AK suvv 2018.09.05 ИП-00019410
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтрагентыИсключенияАкцептованиеЗаявокНаМатериалыУслуги КАК КонтрагентыИсключенияАкцептованиеЗаявокНаМатериалыУслуги
	|		ПО ЗаявкаНаУслугиМатериалыУслуги.Ссылка.Контрагент = КонтрагентыИсключенияАкцептованиеЗаявокНаМатериалыУслуги.Контрагент
	//--- AK suvv
	|ГДЕ
	|	НЕ ЗаявкаНаУслугиМатериалыУслуги.Ссылка.ПометкаУдаления
	|	И НЕ ЗаявкаНаУслугиМатериалыУслуги.Акцептована
	|	И ЗаявкаНаУслугиМатериалыУслуги.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
	//+++ AK suvv 2018.09.05 ИП-00019410
	|	И ЕСТЬNULL(КонтрагентыИсключенияАкцептованиеЗаявокНаМатериалыУслуги.Контрагент, """") = """"";
	//--- AK suvv
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Док = Выборка.Ссылка;
		ДокОбъект = Док.ПолучитьОбъект();  
		
		Если Док.Акцептант <> ПараметрыСеанса.ТекущийПользователь и Док.Акцептант <> Справочники.Пользователи.ПустаяСсылка() Тогда 
			Продолжить;
		КонецЕсли;
		
		ЗаявкаАкцептована = Ложь;
		ТЧУслуги = ДокОбъект.Услуги;
		Для Каждого Стр из ТЧУслуги Цикл
			Если не Стр.Акцептована и Стр.СтруктурнаяЕдиница = Ссылка Тогда 
				СуммаАкцептовано = СуммаАкцептовано + Стр.Сумма;
				Если СуммаАкцептовано <= СуммаЛимита Тогда
					Стр.Акцептована = Истина;
					Стр.Акцептовал = ПараметрыСеанса.ТекущийПользователь;
					Стр.АкцептовалДата = ТекущаяДата();
					ЗаявкаАкцептована = Истина;
				Иначе
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если ЗаявкаАкцептована Тогда 
			ДокОбъект.Акцептант = ПараметрыСеанса.ТекущийПользователь;
			ДокОбъект.Записать();
			Сообщить("Выполнено акцептование заявки " + Выборка.Ссылка);
		КонецЕсли;
		
		Если СуммаАкцептовано > СуммаЛимита Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	  	
КонецПроцедуры //--- AK suvv

//+++ AK suvv 2018.10.08 ИП-00020068
Процедура ПолучитьКонтактнуюИнформацию(Email, Телефон)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КонтактнаяИнформация.Тип,
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	|			ИЛИ КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))";
	Запрос.УстановитьПараметр("Объект", ПараметрыСеанса.ТекущийПользователь);
	
	Рез = Запрос.Выполнить();
	
	Если НЕ Рез.Пустой() Тогда
		Для Каждого Стр из Рез.Выгрузить() Цикл
			Если Стр.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты") Тогда
				Email = "Email " + СокрЛП(Стр.Представление);	
			ИначеЕсли Стр.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон") Тогда
				Телефон = "Тел. " + СокрЛП(Стр.Представление);	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры
//--- AK suvv

//+++ AK suvv 2018.05.21 ИП-00018555 
Процедура РассылкаОПередачеПомещения(СЕ) Экспорт
	
	//+++ AK suvv 2018.10.08 ИП-00020068 - добавлен тип розничной точки; параметры перенесены в текст письма
	
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки("Razvitie@vkusvill.ru");
	Почта   = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Почта.Подключиться(Профиль);
	
	РеквизитыСЕ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СЕ, "НомерТочки, Адрес, ФактическаяДатаПередачи, ДатаАктаПриемаПередачи, ТипРозничнойТочки");
	РазницаДат = ?(НачалоДня(РеквизитыСЕ.ДатаАктаПриемаПередачи) = НачалоДня(РеквизитыСЕ.ФактическаяДатаПередачи), "Даты совпадают.", "Даты НЕ совпадают!");
	Email   = "";
	Телефон = "";
	ПолучитьКонтактнуюИнформацию(Email, Телефон);

	ТекстПисьма = "
	|Уважаемые коллеги!
	|
	|Произошло изменение фактической даты передачи помещения и/или плановой даты передачи помещения магазина: " + РеквизитыСЕ.НомерТочки + " " + РеквизитыСЕ.Адрес + "
	|
	|Фактическая дата передачи помещения: " + Формат(РеквизитыСЕ.ФактическаяДатаПередачи, "ДФ=dd.MM.yyyy") + "
	|
	|Плановая дата передачи помещения: " + Формат(РеквизитыСЕ.ДатаАктаПриемаПередачи, "ДФ=dd.MM.yyyy") + "
	|
	|" + РазницаДат + " 
	|
	|Тип розничной точки: " + РеквизитыСЕ.ТипРозничнойТочки + "
	|
	|С Уважением, " + ПараметрыСеанса.ТекущийПользователь + " " + Email + " " + Телефон + "";
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	АК_ГруппыРассылки.ФизЛицо,
	|	АК_ГруппыРассылки.Емейл
	|ИЗ
	|	РегистрСведений.АК_ГруппыРассылки КАК АК_ГруппыРассылки
	|ГДЕ
	|	АК_ГруппыРассылки.Группа = ЗНАЧЕНИЕ(Справочник.АК_ГруппыРассылки.РассылкаОПередачеПомещенияСЕ)";
	Рез = Запрос.Выполнить();
	
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Письмо = Новый ИнтернетПочтовоеСообщение;
	Письмо.Тема           = "Рассылка об изменении даты передачи помещений магазина " + РеквизитыСЕ.НомерТочки + " " + РеквизитыСЕ.Адрес;
	Письмо.ИмяОтправителя = "" + СокрЛП(УчетнаяЗапись) + "";
	Письмо.Отправитель    = "" + СокрЛП(УчетнаяЗапись) + "";
	
	ТекстСообщения = Письмо.Тексты.Добавить(ТекстПисьма);

	АдресаПолучателей = Рез.Выбрать();
	Пока АдресаПолучателей.Следующий() Цикл
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = СокрЛП(АдресаПолучателей.Емейл);
	КонецЦикла;
	
	Попытка
		Почта.Послать(Письмо);
	Исключение
	КонецПопытки;
	
КонецПроцедуры //--- AK suvv

//+++ AK suvv 21.05.2018 ИП-00018555 
Процедура РассылкаОРазницеВПлощадях(СЕ) Экспорт
	
	//+++ AK suvv 2018.10.08 ИП-00020068 - добавлен тип розничной точки; параметры перенесены в текст письма
	
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки("Razvitie@vkusvill.ru");
	Почта   = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Почта.Подключиться(Профиль);
	
	РеквизитыСЕ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СЕ, "НомерТочки, Адрес, ОбщаяПлощадь, ФактическаяПлощадь, ТипРозничнойТочки");
	
	Если РеквизитыСЕ.ОбщаяПлощадь <> 0 Тогда
		ПроцентРазницы = Окр(100 - РеквизитыСЕ.ФактическаяПлощадь/РеквизитыСЕ.ОбщаяПлощадь * 100, 1);
	Иначе
		ПроцентРазницы = 0;
	КонецЕсли;
	
	Если ПроцентРазницы < 5 Тогда
		Возврат;
	КонецЕсли;
	
	Email = "";
	Телефон = "";
	ПолучитьКонтактнуюИнформацию(Email, Телефон);
	
	ТекстПисьма = "
	|Уважаемые коллеги!
	|
	|У магазина № " + РеквизитыСЕ.НомерТочки + " по адресу " + РеквизитыСЕ.Адрес + " фактическая площадь меньше площади по договору на " + ПроцентРазницы + " %.
	|
	|Площадь по договору - " + РеквизитыСЕ.ОбщаяПлощадь + ", фактическая площадь - " + РеквизитыСЕ.ФактическаяПлощадь + ".
	|
	|Тип розничной точки: " + РеквизитыСЕ.ТипРозничнойТочки + "
	|
	|С уважением, " + ПараметрыСеанса.ТекущийПользователь + " " + Email + " " + Телефон + "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	АК_ГруппыРассылки.ФизЛицо,
	|	АК_ГруппыРассылки.Емейл
	|ИЗ
	|	РегистрСведений.АК_ГруппыРассылки КАК АК_ГруппыРассылки
	|ГДЕ
	|	АК_ГруппыРассылки.Группа = ЗНАЧЕНИЕ(Справочник.АК_ГруппыРассылки.РассылкаОРазницеВПлощадяхСЕ)";
	Рез = Запрос.Выполнить();
	
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Письмо = Новый ИнтернетПочтовоеСообщение;
	Письмо.Тема           = "Рассылка о разнице фактической и планируемой площадей магазина " + РеквизитыСЕ.НомерТочки + " " + РеквизитыСЕ.Адрес;
	Письмо.ИмяОтправителя = "" + СокрЛП(УчетнаяЗапись) + "";
	Письмо.Отправитель    = "" + СокрЛП(УчетнаяЗапись) + "";
	
	ТекстСообщения = Письмо.Тексты.Добавить(ТекстПисьма);
	
	АдресаПолучателей = Рез.Выбрать();
	Пока АдресаПолучателей.Следующий() Цикл
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = СокрЛП(АдресаПолучателей.Емейл);
	КонецЦикла;
	
	Попытка
		Почта.Послать(Письмо);
	Исключение
	КонецПопытки;
	
КонецПроцедуры //--- AK suvv

//+++ AK suvv 21.05.2018 ИП-00018555
&НаСервере
Процедура РассылкаПриИзмененииКатегорииСЕ(СЕ) Экспорт
	
	//+++ AK suvv 2018.10.08 ИП-00020068 - добавлен тип розничной точки; параметры перенесены в текст письма

	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки("Razvitie@vkusvill.ru");
	Почта   = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Почта.Подключиться(Профиль);
	
	РеквизитыСЕ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СЕ, "НомерТочки, Адрес, Категория, КатегорияПодсобноеПомещение, ТипРозничнойТочки");
	Email = "";
	Телефон = "";
	ПолучитьКонтактнуюИнформацию(Email, Телефон);
	
	ТекстПисьма = "
	|Уважаемые коллеги!
	|
	|Произошло изменение категорий торгового зала и подсобного помещения магазина: " + РеквизитыСЕ.НомерТочки + " " + РеквизитыСЕ.Адрес + "
	|
	|Текущая категория торгового зала: " + РеквизитыСЕ.Категория + "
	|
	|Текущая категория подсобного помещения магазина: " + РеквизитыСЕ.КатегорияПодсобноеПомещение + "
	|
	|Тип розничной точки: " + РеквизитыСЕ.ТипРозничнойТочки + "
	|
	|С Уважением, " + ПараметрыСеанса.ТекущийПользователь + " " + Email + " " + Телефон + "";
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ЗначенияДополнительныхПравПользователя.Пользователь
	|ПОМЕСТИТЬ ВТ_ПользователиСДопПравом
	|ИЗ
	|	РегистрСведений.ЗначенияДополнительныхПравПользователя КАК ЗначенияДополнительныхПравПользователя
	|ГДЕ
	|	ЗначенияДополнительныхПравПользователя.Право = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ПраваПользователей.МожетПодтверждатьКатегории)
	|	И ЗначенияДополнительныхПравПользователя.Значение = ИСТИНА
	|	И ЗначенияДополнительныхПравПользователя.Пользователь <> &ТекПользователь
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(КонтактнаяИнформация.Представление, """") КАК Емейл
	|ИЗ
	|	ВТ_ПользователиСДопПравом КАК ВТ_ПользователиСДопПравом
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО ВТ_ПользователиСДопПравом.Пользователь.ФизЛицо = КонтактнаяИнформация.Объект
	|			И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|ГДЕ
	|	НЕ КонтактнаяИнформация.Объект ЕСТЬ NULL";
	Запрос.УстановитьПараметр("ТекПользователь", ПараметрыСеанса.ТекущийПользователь);
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Письмо = Новый ИнтернетПочтовоеСообщение;
	Письмо.Тема           = "Информирование об изменении категории магазина" + РеквизитыСЕ.НомерТочки + " " + РеквизитыСЕ.Адрес;
	Письмо.ИмяОтправителя = "" + СокрЛП(УчетнаяЗапись) + "";
	Письмо.Отправитель    = "" + СокрЛП(УчетнаяЗапись) + "";
	
	ТекстСообщения = Письмо.Тексты.Добавить(ТекстПисьма);
	
	АдресаПолучателей = Рез.Выбрать();
	Пока АдресаПолучателей.Следующий() Цикл
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = СокрЛП(АдресаПолучателей.Емейл);
	КонецЦикла;
	
	Попытка
		Почта.Послать(Письмо);
	Исключение
	КонецПопытки;
	
КонецПроцедуры //--- AK suvv

//+++ AK suvv 21.05.2018 ИП-00018555
&НаСервере  
Процедура РассылкаФайлаРасстановки(СЕ, КтоОткрыл, УправляющийРозницей, РуководительПоСтроительству, ФайлыРасстановкиДляОтправки) Экспорт
	
	ОтборФайлыРасстановкиОкончательно = Новый Структура;
	ОтборФайлыРасстановкиОкончательно.Вставить("Назначение", "СхРасКон");
	ФайлыРасстановкиОкончательно = ФайлыРасстановкиДляОтправки.НайтиСтроки(ОтборФайлыРасстановкиОкончательно);
	Если ФайлыРасстановкиОкончательно.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли;
	
	//+++ AK suvv 2018.10.08 ИП-00020068 - добавлен тип розничной точки; параметры перенесены в текст письма

	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки("Razvitie@vkusvill.ru");
	Почта   = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Почта.Подключиться(Профиль);
	
	//+++ AK suvv 2018.10.01 ИП-00019795
	РеквизитыСЕ   = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СЕ, "Регион, Город, Адрес, НомерТочки, ТипРозничнойТочки");
	ДопСвойстваСЕ = ОбщегоНазначения.ЗначенияДополнительныхСвойствСтруктурнойЕдиницы(СЕ, "Пекарня,ДетскийУголок,Сокомат,Кофемашина,МеловаяДоска,НавигацияОчереди");
	//---AK suvv
	
	АдресМагазина = "" + РеквизитыСЕ.Регион + ", " + РеквизитыСЕ.Город.ПолноеНаименование + ", " + РеквизитыСЕ.Адрес;
	
	ТекстПисьма = "
	|Согласовано: " + РеквизитыСЕ.НомерТочки + " " + АдресМагазина + " 
	|Менеджер по развитию: " + КтоОткрыл + "
	|Управляющий розницей: " + УправляющийРозницей + "
	//+++ AK suvv 21.08.2018 ИП-00019353
	|Руководитель по строительству: " + РуководительПоСтроительству + "
	//--- AK suvv
	//+++ AK suvv 2018.10.08 ИП-00020068
	|Тип розничной точки: " + РеквизитыСЕ.ТипРозничнойТочки + "
	//--- AK suvv
	|Файлы добавил       : " + ПараметрыСеанса.ТекущийПользователь.ФизЛицо + "";
		
	//+++ AK suvv 17.05.2018 ИП-00018555
	ДопИнформация = ?(ДопСвойстваСЕ.Пекарня, "пекарня, ", "") + ?(ДопСвойстваСЕ.ДетскийУголок, "детский уголок, ", "") + ?(ДопСвойстваСЕ.Сокомат, "сокомат, ", "") + ?(ДопСвойстваСЕ.Кофемашина, "кофемашина, ", "") + ?(ДопСвойстваСЕ.МеловаяДоска, "меловая доска, ", "") + ?(ДопСвойстваСЕ.НавигацияОчереди, "навигация очереди, ", "");
	Если ДопИнформация <> "" Тогда 
		ДопИнформация = "В магазине будут находиться: " + Лев(ДопИнформация,СтрДлина(ДопИнформация)-2) + ".";
		ТекстПисьма = ТекстПисьма + Символы.ПС + ДопИнформация;	
	КонецЕсли; 
	//--- AK suvv
	
	Запрос = Новый Запрос;
	//+++ AK suvv 10.07.2018 ИП-00019141
	//Запрос.Текст = "ВЫБРАТЬ
	//|	АК_ГруппыРассылки.ФизЛицо,
	//|	АК_ГруппыРассылки.Емейл
	//|ИЗ
	//|	РегистрСведений.АК_ГруппыРассылки КАК АК_ГруппыРассылки
	//|ГДЕ
	//|	АК_ГруппыРассылки.Группа = &Группа";
	//Запрос.УстановитьПараметр("Группа", ПредопределенноеЗначение("Справочник.АК_ГруппыРассылки.РассылкаОРасстановкеОборудования"));
	Запрос.Текст = ПолучитьТекстЗапросаДляРассылкиОРасстановкеОборудования();
	Запрос.УстановитьПараметр("Магазин", Ссылка);
	//--- AK suvv	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Письмо = Новый ИнтернетПочтовоеСообщение;
	Письмо.Тема = "Файл расстановки оборудования оконч. вариант по магазину: " + РеквизитыСЕ.НомерТочки + " " + АдресМагазина;
	Письмо.ИмяОтправителя  	= "" + СокрЛП(УчетнаяЗапись) + "";
	Письмо.Отправитель     	= "" + СокрЛП(УчетнаяЗапись) + "";

	ТекстСообщения = Письмо.Тексты.Добавить(ТекстПисьма);
	
	АдресаПолучателей = Рез.Выбрать();
	Пока АдресаПолучателей.Следующий() Цикл
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = СокрЛП(АдресаПолучателей.Емейл);
	КонецЦикла;
	
	//+++AK suvv 03.04.2018 ИП-00017689.02
	//Письмо.Вложения.Добавить(Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(Объект.ФайлРасстановки));
	Для Каждого Стр из ФайлыРасстановкиОкончательно Цикл
		//+++AK GREK 25.07.2018 ИП-00019282    
		ФайлВложения = Новый ДвоичныеДанные(Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(Стр.Файл));
		Письмо.Вложения.Добавить(ФайлВложения, Стр.Файл.Наименование);
		//---AK
	КонецЦикла;
	//---AK
	
	Попытка
		Почта.Послать(Письмо);
	Исключение
	КонецПопытки;
	
КонецПроцедуры

//+++ AK suvv 21.05.2018 ИП-00018555 
&НаСервере 
Процедура РассылкаИсходногоФайлаРасстановки(СЕ, КтоОткрыл, УправляющийРозницей, РуководительПоСтроительству, ФайлыРасстановкиДляОтправки) Экспорт
	
	ОтборФайлыРасстановкиПредварительно = Новый Структура;
	ОтборФайлыРасстановкиПредварительно.Вставить("Назначение", "СхРасНач");
	ФайлыРасстановкиПредварительно = ФайлыРасстановкиДляОтправки.НайтиСтроки(ОтборФайлыРасстановкиПредварительно);	
	Если ФайлыРасстановкиПредварительно.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	//+++ AK suvv 2018.10.08 ИП-00020068 - добавлен тип розничной точки; параметры перенесены в текст письма

	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки("Razvitie@vkusvill.ru");
	Почта   = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Почта.Подключиться(Профиль);
		
	РеквизитыСЕ   = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СЕ, "Регион, Город, Адрес, НомерТочки, ТипРозничнойТочки");
	ДопСвойстваСЕ = ОбщегоНазначения.ЗначенияДополнительныхСвойствСтруктурнойЕдиницы(СЕ, "Пекарня,ДетскийУголок,Сокомат,Кофемашина,МеловаяДоска,НавигацияОчереди");
	АдресМагазина = "" + РеквизитыСЕ.Регион + ", " + РеквизитыСЕ.Город.ПолноеНаименование + ", " + РеквизитыСЕ.Адрес;
		
	ТекстПисьма = "
	|Согласовано: " + РеквизитыСЕ.НомерТочки + " " + АдресМагазина + " 
	|Менеджер по развитию: " + КтоОткрыл + "
	|Управляющий розницей: " + УправляющийРозницей + "
	|Руководитель по строительству: " + РуководительПоСтроительству + "
	|Тип розничной точки: " + РеквизитыСЕ.ТипРозничнойТочки + "
	|Файлы добавил      : " + ПараметрыСеанса.ТекущийПользователь.ФизЛицо + "";
		
	ДопИнформация = ?(ДопСвойстваСЕ.Пекарня, "пекарня, ", "") + ?(ДопСвойстваСЕ.ДетскийУголок, "детский уголок, ", "") + ?(ДопСвойстваСЕ.Сокомат, "сокомат, ", "") + ?(ДопСвойстваСЕ.Кофемашина, "кофемашина, ", "") + ?(ДопСвойстваСЕ.МеловаяДоска, "меловая доска, ", "") + ?(ДопСвойстваСЕ.НавигацияОчереди, "навигация очереди, ", "");
	Если ДопИнформация <> "" Тогда 
		ДопИнформация = "В магазине будут находиться: " + Лев(ДопИнформация,СтрДлина(ДопИнформация)-2) + ".";
		ТекстПисьма = ТекстПисьма + Символы.ПС + ДопИнформация;	
	КонецЕсли;
		
	Запрос = Новый Запрос;
	//+++ AK suvv 10.07.2018 ИП-00019141
	//Запрос.Текст = "ВЫБРАТЬ
	//|	АК_ГруппыРассылки.ФизЛицо,
	//|	АК_ГруппыРассылки.Емейл
	//|ИЗ
	//|	РегистрСведений.АК_ГруппыРассылки КАК АК_ГруппыРассылки
	//|ГДЕ
	//|	АК_ГруппыРассылки.Группа = &Группа";
	//Запрос.УстановитьПараметр("Группа",ПредопределенноеЗначение("Справочник.АК_ГруппыРассылки.РассылкаОРасстановкеОборудования"));
	Запрос.Текст = ПолучитьТекстЗапросаДляРассылкиОРасстановкеОборудования();
	Запрос.УстановитьПараметр("Магазин", Ссылка);
	//--- AK suvv
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Письмо = Новый ИнтернетПочтовоеСообщение;
	Письмо.Тема           = "Файл расстановки оборудования  перв. вариант по магазину: " + РеквизитыСЕ.НомерТочки + " " + АдресМагазина;
	Письмо.ИмяОтправителя = "" + СокрЛП(УчетнаяЗапись) + "";
	Письмо.Отправитель    = "" + СокрЛП(УчетнаяЗапись) + "";
	
	ТекстСообщения = Письмо.Тексты.Добавить(ТекстПисьма);

	АдресаПолучателей = Рез.Выбрать();
	Пока АдресаПолучателей.Следующий() Цикл
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = СокрЛП(АдресаПолучателей.Емейл);
	КонецЦикла;
	
	//+++AK suvv 03.04.2018 ИП-00017689.02
	//Письмо.Вложения.Добавить(Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(Объект.ФайлРасстановкиИсходный));
	Для Каждого Стр из ФайлыРасстановкиПредварительно Цикл
		//+++AK GREK 25.07.2018 ИП-00019282    
		ФайлВложения = Новый ДвоичныеДанные(Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(Стр.Файл));
		Письмо.Вложения.Добавить(ФайлВложения, Стр.Файл.Наименование);
		//---AK
	КонецЦикла;
	//---AK
	
	Попытка
		Почта.Послать(Письмо);
	Исключение
	КонецПопытки;
	
КонецПроцедуры

//+++ AK suvv 12.07.2018 ИП-00019141
Функция ПолучитьТекстЗапросаДляРассылкиОРасстановкеОборудования()
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	АК_ГруппыРассылки.ФизЛицо,
	|	АК_ГруппыРассылки.Емейл
	|ПОМЕСТИТЬ ВТ_ПолучателиРассылки
	|ИЗ
	|	РегистрСведений.АК_ГруппыРассылки КАК АК_ГруппыРассылки
	|ГДЕ
	|	АК_ГруппыРассылки.Группа = ЗНАЧЕНИЕ(Справочник.АК_ГруппыРассылки.РассылкаОРасстановкеОборудования)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РолиПользователейСоставРоли.Сотрудник КАК УправляющийРозницей,
	|	ПОДСТРОКА(ЕСТЬNULL(КонтактнаяИнформация.Представление, """"), 0, 200) КАК Емейл,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СоответствиеОбъектРольСрезПоследних.Объект = &Магазин
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК УправляющийТекущегоМагазина
	|ПОМЕСТИТЬ ВТ_Управляющие
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(, ТипРолиID = ""UpravlyayushchiiPoRoznice"") КАК СоответствиеОбъектРольСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|			ПО РолиПользователейСоставРоли.Сотрудник = КонтактнаяИнформация.Объект
	|				И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = РолиПользователейСоставРоли.Ссылка
	|ГДЕ
	|	РолиПользователейСоставРоли.НомерСтроки = 1
	|
	|СГРУППИРОВАТЬ ПО
	|	РолиПользователейСоставРоли.Сотрудник,
	|	ПОДСТРОКА(ЕСТЬNULL(КонтактнаяИнформация.Представление, """"), 0, 200)
	|;
	|
	//+++ AK suvv 20.08.2018 ИП-00019353
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РолиПользователейСоставРоли.Сотрудник КАК ПомощникПоРознице,
	|	ПОДСТРОКА(ЕСТЬNULL(КонтактнаяИнформация.Представление, """"), 0, 200) КАК Емейл,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА СоответствиеОбъектРольСрезПоследних.Объект = &Магазин
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ПомощникПоРозницеТекущегоМагазина
	|ПОМЕСТИТЬ ВТ_ПомощникиУправляющих
	|ИЗ
	|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(
	|			,
	|			ТипРолиID = ""PomoshnikTerrUpravlyushego""
	|				ИЛИ ТипРолиID = ""PomoshnikStorRozn"") КАК СоответствиеОбъектРольСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|			ПО РолиПользователейСоставРоли.Сотрудник = КонтактнаяИнформация.Объект
	|				И (КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты))
	|		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = РолиПользователейСоставРоли.Ссылка
	|ГДЕ
	|	РолиПользователейСоставРоли.НомерСтроки = 1
	|
	|СГРУППИРОВАТЬ ПО
	|	РолиПользователейСоставРоли.Сотрудник,
	|	ПОДСТРОКА(ЕСТЬNULL(КонтактнаяИнформация.Представление, """"), 0, 200)
	|;
	//--- AK suvv
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПолучателиРассылки.ФизЛицо,
	|	ВТ_ПолучателиРассылки.Емейл
	|ПОМЕСТИТЬ ВТ_ВсеПолучатели
	|ИЗ
	|	ВТ_ПолучателиРассылки КАК ВТ_ПолучателиРассылки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Управляющие КАК ВТ_Управляющие
	|		ПО ВТ_ПолучателиРассылки.ФизЛицо = ВТ_Управляющие.УправляющийРозницей
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПомощникиУправляющих КАК ВТ_ПомощникиУправляющих
	|		ПО ВТ_ПолучателиРассылки.ФизЛицо = ВТ_ПомощникиУправляющих.ПомощникПоРознице
	|ГДЕ
	|	ВТ_Управляющие.УправляющийРозницей ЕСТЬ NULL
	|	И ВТ_ПомощникиУправляющих.ПомощникПоРознице ЕСТЬ NULL
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_Управляющие.УправляющийРозницей,
	|	ВТ_Управляющие.Емейл
	|ИЗ
	|	ВТ_Управляющие КАК ВТ_Управляющие
	|ГДЕ
	|	ВТ_Управляющие.УправляющийТекущегоМагазина
	|
	//+++ AK suvv 20.08.2018 ИП-00019353
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ПомощникиУправляющих.ПомощникПоРознице,
	|	ВТ_ПомощникиУправляющих.Емейл
	|ИЗ
	|	ВТ_ПомощникиУправляющих КАК ВТ_ПомощникиУправляющих
	|ГДЕ
	|	ВТ_ПомощникиУправляющих.ПомощникПоРозницеТекущегоМагазина
	//--- AK suvv
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТ_ВсеПолучатели.ФизЛицо,
	|	ВТ_ВсеПолучатели.Емейл
	|ИЗ
	|	ВТ_ВсеПолучатели КАК ВТ_ВсеПолучатели";
	
	Возврат ТекстЗапроса;
	
КонецФункции //--- AK suvv

//+++АК sole 2018.06.21 ИП-00018725
Функция ВернутьСсылкуМаршрутТилси0()
	Возврат Справочники.Маршруты.НайтиПоКоду("000000596");
КонецФункции

//+++АК sole 2018.06.21 ИП-00018725
Процедура ДобавитьВМаршрутТилси0_ЕслиНеобходимо()
	
	Если 
		    (ЭтотОбъект.ТипРозничнойТочки <> Перечисления.ТипыРозничныхТочек.Перекресток И ЭтотОбъект.ТипРозничнойТочки <> Перечисления.ТипыРозничныхТочек.Пятерочка) 
		ИЛИ	ЭтотОбъект.СтатусТорговойТочки = Перечисления.СтатусыТорговыхТочек.Закрыт
		ИЛИ	ЭтотОбъект.ПометкаУдаления
	Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст =
"ВЫБРАТЬ ПЕРВЫЕ 1
|	Ложь
|ИЗ
|	Справочник.Маршруты.ТорговыеТочки КАК МаршрутыТорговыеТочки
|ГДЕ 
|		МаршрутыТорговыеТочки.СтруктурнаяЕдиница = &СтруктурнаяЕдиница
|	И	НЕ МаршрутыТорговыеТочки.Ссылка.ПометкаУдаления";	
	
	Запрос.Параметры.Вставить("СтруктурнаяЕдиница", ЭтотОбъект.Ссылка);
	
	УстановитьПривилегированныйРежим(Истина);	
	
	НетВМаршрутах = АК_Инструменты.ПолучитьРезультатСкалярногоЗароса(Запрос, Истина);
	
	Если НетВМаршрутах Тогда
		
		Маршрут = ВернутьСсылкуМаршрутТилси0();
	
		Если ЗначениеЗаполнено(Маршрут) Тогда
			
			МаршрутОбъект = Маршрут.ПолучитьОбъект();
			МаршрутОбъект.ОбменДанными.Загрузка = Истина;
			НСтр = МаршрутОбъект.ТорговыеТочки.Добавить();
			НСтр.СтруктурнаяЕдиница = Ссылка;
			МаршрутОбъект.Записать();
		
		КонецЕсли;

	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);	
КонецПроцедуры

//+++ AK suvv 03.07.2018 ИП-00018812
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Для Каждого ЭлЗаполнения из ДанныеЗаполнения Цикл
			Если ТипЗнч(ЭлЗаполнения.Значение) = Тип("ТаблицаЗначений") Тогда
				ЭтотОбъект[ЭлЗаполнения.Ключ].Загрузить(ЭлЗаполнения.значение);
			Иначе
				ЭтотОбъект[ЭлЗаполнения.Ключ] = ЭлЗаполнения.Значение;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
КонецПроцедуры //--- AK suvv

//+++ AK suvv 12.07.2018 ИП-00019053
Функция ПолучитьРеквизитыДляИсторииИзменений() Экспорт
	
	РеквизитыДляИсторииИзменений = Новый Массив;
	РеквизитыДляИсторииИзменений.Добавить("ОбщаяПлощадь");
	РеквизитыДляИсторииИзменений.Добавить("ФактическаяПлощадь");
	РеквизитыДляИсторииИзменений.Добавить("ТорговаяПлощадь");
	РеквизитыДляИсторииИзменений.Добавить("ПлощадьПодсобныхПомещений");
	РеквизитыДляИсторииИзменений.Добавить("ПлощадьСубаренды");
	РеквизитыДляИсторииИзменений.Добавить("ПлощадьНеиспользуемая");
	//+++ AK suvv 2018.09.05 ИП-00019377
	РеквизитыДляИсторииИзменений.Добавить("ПринятАХО");
	//--- AK suvv
	Возврат РеквизитыДляИсторииИзменений;
	
КонецФункции

//+++ AK suvv 12.07.2018 ИП-00019053
Процедура ЗаписатьИсториюИзмененияРеквизитовСЕ(ПараметрыЗаписиСЕ) Экспорт
	
	РеквизитыДляИсторииИзменений = ПолучитьРеквизитыДляИсторииИзменений();
	
	Для Каждого ПараметрЗаписи из ПараметрыЗаписиСЕ Цикл
		НазваниеРеквизита = ПараметрЗаписи.Ключ;
		Если РеквизитыДляИсторииИзменений.Найти(НазваниеРеквизита) <> неопределено Тогда  
			Если ПараметрЗаписи.Значение <> ЭтотОбъект[НазваниеРеквизита] Тогда 
				НЗ = РегистрыСведений.ИсторияИзмененияРеквизитовСЕ.СоздатьНаборЗаписей();
				НЗ.Отбор.СтруктурнаяЕдиница.Установить(Ссылка);
				НЗ.Отбор.Реквизит.Установить(НазваниеРеквизита);
				НЗ.Прочитать();
				Если НЗ.Количество() = 0 Тогда 
					НовЗапись = НЗ.Добавить();
				Иначе
					НовЗапись = НЗ[0];
				КонецЕсли;
				НовЗапись.СтруктурнаяЕдиница = Ссылка;
				НовЗапись.Реквизит = НазваниеРеквизита;
				НовЗапись.АвторИзменений = ПараметрыСеанса.ТекущийПользователь;
				НовЗапись.ДатаИзменений = ТекущаяДата();
				НЗ.Записать();
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//+++ AK suvv 2018.10.05 ИП-00019795
// Параметры процедуры:
//   ИзмененныеСвойства - таблица значений с колонками
//     - Свойство - ссылка на ПВХ "СвойстваСтруктурныхЕдиниц"
//     - Значение - тип булево
Процедура СохранитьЗначенияСвойствСЕ(ИзмененныеСвойства) Экспорт

	Для Каждого Стр Из ИзмененныеСвойства Цикл
		НЗ = РегистрыСведений.ЗначенияСвойствСтруктурныхЕдиниц.СоздатьНаборЗаписей();
		НЗ.Отбор.СтруктурнаяЕдиница.Установить(Ссылка);
		НЗ.Отбор.Свойство.Установить(Стр.Свойство);
		НЗ.Прочитать();
		
		Если НЗ.Количество() <> 0 Тогда
			ЗаписьРС = НЗ[0];	
		Иначе
			ЗаписьРС = НЗ.Добавить();
			ЗаписьРС.СтруктурнаяЕдиница = Ссылка;
			ЗаписьРС.Свойство           = Стр.Свойство;
		КонецЕсли;
		
		ЗаписьРС.Значение = Стр.Значение;
		НЗ.Записать();

	КонецЦикла;
				
КонецПроцедуры

//+++AK GREK 02.07.2018 ИП-00018854 
&НаСервере  
Процедура РассылкаОПередачеАХО(СЕ, ПринятАХО, КтоОткрыл, УправляющийРозницей, Файлы = Неопределено) Экспорт
	
	УчетнаяЗапись = ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки("Razvitie@vkusvill.ru");
	Почта = Новый ИнтернетПочта;
	Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	Почта.Подключиться(Профиль);
	Письмо = Новый ИнтернетПочтовоеСообщение;
	
	РеквизитыСЕ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(СЕ, "Регион, Город, Адрес, НомерТочки, Территория");    
	АдресМагазина = "" + РеквизитыСЕ.Регион + ", " + РеквизитыСЕ.Город.ПолноеНаименование + ", " + РеквизитыСЕ.Адрес;
	
	Если ПринятАХО Тогда
		Письмо.Тема = "АХО принял магазин: " + РеквизитыСЕ.НомерТочки + " " + АдресМагазина;
		Письмо.ИмяОтправителя  	= "" + СокрЛП(УчетнаяЗапись) + "";
		Письмо.Отправитель     	= "" + СокрЛП(УчетнаяЗапись) + "";
	
		ТекстПисьма = "
		|Магазин " + РеквизитыСЕ.НомерТочки + " " + АдресМагазина + " Был принят АХО";
	Иначе
		Письмо.Тема = "Не принят специалистом АХО магазин: " + РеквизитыСЕ.НомерТочки + " " + АдресМагазина;
		Письмо.ИмяОтправителя  	= "" + СокрЛП(УчетнаяЗапись) + "";
		Письмо.Отправитель     	= "" + СокрЛП(УчетнаяЗапись) + "";
	
		ТекстПисьма = "
		|Специалистом АХО не был принят магазин: " + РеквизитыСЕ.НомерТочки + " " + АдресМагазина;
		Если Файлы <> Неопределено Тогда
			ТекстПисьма = ТекстПисьма + Символы.ПС + Символы.ПС + "Акт ВПК приложен к данному письму";
			Для Каждого Стр из Файлы Цикл
				Письмо.Вложения.Добавить(Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(Стр.Файл));
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	ТекстСообщения = Письмо.Тексты.Добавить(ТекстПисьма);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВложенныйЗапрос.Адресат,
	               |	КонтактнаяИнформация.Представление КАК Адрес
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		РолиПользователейСоставРоли.Сотрудник КАК Адресат
	               |	ИЗ
	               |		РегистрСведений.СоответствиеОбъектРоль.СрезПоследних КАК СоответствиеОбъектРольСрезПоследних
	               |			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	               |			ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = РолиПользователейСоставРоли.Ссылка
	               |	ГДЕ
	               |		СоответствиеОбъектРольСрезПоследних.ТипРолиID = &ТипРолиID
	               |		И РолиПользователейСоставРоли.Сотрудник.ПометкаУдаления = ЛОЖЬ
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		&КтоОткрыл
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		&УправляющийРозницей
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		&Территория) КАК ВложенныйЗапрос
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	               |		ПО ВложенныйЗапрос.Адресат = КонтактнаяИнформация.Объект
	               |ГДЕ
	               |	КонтактнаяИнформация.Тип = &Тип";
	Запрос.УстановитьПараметр("ТипРолиID", "NachExpl");
	Запрос.УстановитьПараметр("Тип", ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты"));
	Запрос.УстановитьПараметр("КтоОткрыл", КтоОткрыл);
	Запрос.УстановитьПараметр("УправляющийРозницей", УправляющийРозницей);
	Запрос.УстановитьПараметр("Территория", РеквизитыСЕ.Территория);

	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		Возврат;
	КонецЕсли;
	АдресаПолучателей = Рез.Выбрать();
	Пока АдресаПолучателей.Следующий() Цикл
		Получатель = Письмо.Получатели.Добавить();
		Получатель.Адрес = АдресаПолучателей.Адрес;
	КонецЦикла;
		
	Попытка
		Почта.Послать(Письмо);
	Исключение
	КонецПопытки;
КонецПроцедуры

//+++ AK suvv 19.07.2018 ИП-00019141
Процедура УстановитьЛимитыАренднойПлаты()
	
	УстановитьПривилегированныйРежим(Истина);
	
	НЗ = РегистрыСведений.ЛимитыАренднойПлаты.СоздатьНаборЗаписей();
	НЗ.Отбор.ТорговаяТочка.Установить(Ссылка);
	НЗ.Прочитать();
	
	Если НЗ.Количество() <> 0 Тогда
		Возврат;
	КонецЕсли;
	
	НовЗапись = НЗ.Добавить();
	НовЗапись.ТорговаяТочка = Ссылка;
	НовЗапись.МесяцАренды = ФактическаяДатаПередачи;
	НовЗапись.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	НовЗапись.Период = ТекущаяДата(); 
	НЗ.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры //--- AK suvv

ДобавитьВНулевойМаршрут = Ложь;
УдалитьВМаршрутах = Ложь;
