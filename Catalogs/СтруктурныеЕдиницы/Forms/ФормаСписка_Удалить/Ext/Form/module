
Процедура СправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	//+sstuman
	МассивСсылок = Новый Массив();
	Для Каждого Оформление Из ОформленияСтрок Цикл
		Если Оформление.ДанныеСтроки.ДатаЗакрытия <> Дата("00010101")
				И Оформление.ДанныеСтроки.ДатаЗакрытия <= ТекущаяДата() Тогда
			Оформление.ЦветФона = Новый Цвет(222, 222, 222);
		КонецЕсли;
		МассивСсылок.Добавить(Оформление.ДанныеСтроки.Ссылка);
	КонецЦикла;
	//-sstuman
	
	мКолонкиСписка = ЭлементыФормы.СправочникСписок.Колонки;
	
	// организация и ЦФО
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекДата"	, ТекущаяДата());
	Запрос.УстановитьПараметр("МассивТТ", МассивСсылок);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница,
	|	ЦФОСтруктурныхЕдиницСрезПоследних.ЦФО.Наименование,
	|	ЦФОСтруктурныхЕдиницСрезПоследних.Организация.Наименование
	|ИЗ
	|	РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&ТекДата, СтруктурнаяЕдиница В (&МассивТТ)) КАК ЦФОСтруктурныхЕдиницСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтруктурныеЕдиницы.Ссылка КАК СтруктурнаяЕдиница,
	|	ПРЕДСТАВЛЕНИЕ(СтруктурныеЕдиницы.ФорматМагазинаВВ) КАК ФорматМагазинаВВ,
	|	ПРЕДСТАВЛЕНИЕ(СтруктурныеЕдиницы.ТипРозничнойТочки) КАК ТипРозничнойТочки
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	СтруктурныеЕдиницы.Ссылка В(&МассивТТ)
	|	И СтруктурныеЕдиницы.ТипСтруктурнойЕдиницы = ЗНАЧЕНИЕ(Перечисление.ТипыСтруктурныхЕдиниц.Розница)
	|	И СтруктурныеЕдиницы.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикиРаботыМагазинаСрезПоследних.Магазин,
	|	ГрафикиРаботыМагазинаСрезПоследних.График.Наименование КАК ГрафикНаименование
	|ИЗ
	|	РегистрСведений.ГрафикиРаботыМагазина.СрезПоследних(&ТекДата, Магазин В (&МассивТТ)) КАК ГрафикиРаботыМагазинаСрезПоследних";
				   
	Результаты = Запрос.ВыполнитьПакет();
	ТабКеш = Результаты[0].Выгрузить();
	ТабКешТТ = Результаты[1].Выгрузить();
	ТабКешГрафики = Результаты[2].Выгрузить();
	
	Для Каждого Оформление Из ОформленияСтрок Цикл
		СтрокаКеш = ТабКеш.Найти(Оформление.ДанныеСтроки.Ссылка, "СтруктурнаяЕдиница");
		Если СтрокаКеш = Неопределено Тогда
			Продолжить;
		КонецЕсли;	
		Если мКолонкиСписка.ЦФО.Видимость Тогда
			Оформление.Ячейки.ЦФО.УстановитьТекст(СтрокаКеш.ЦФОНаименование);
		КонецЕсли;
		Если мКолонкиСписка.Организация.Видимость Тогда
			Оформление.Ячейки.Организация.УстановитьТекст(СтрокаКеш.ОрганизацияНаименование);
		КонецЕсли;
		Если мКолонкиСписка.ГрафикРаботы.Видимость Тогда
			СтрокаКешГрафик = ТабКешГрафики.Найти(Оформление.ДанныеСтроки.Ссылка, "Магазин");
			Если СтрокаКешГрафик <> Неопределено Тогда
				Оформление.Ячейки.ГрафикРаботы.УстановитьТекст(СтрокаКешГрафик.ГрафикНаименование);
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	
	// тип розничной точки
	Если мКолонкиСписка.ТипРозничнойТочки.Видимость Тогда
		Для Каждого Оформление Из ОформленияСтрок Цикл
			СтрокаКеш = ТабКешТТ.Найти(Оформление.ДанныеСтроки.Ссылка, "СтруктурнаяЕдиница");
			Если СтрокаКеш = Неопределено Тогда
				Продолжить;
			КонецЕсли;	
			Оформление.Ячейки.ТипРозничнойТочки.УстановитьТекст(СтрокаКеш.ТипРозничнойТочки + " " + СтрокаКеш.ФорматМагазинаВВ);
		КонецЦикла;
	КонецЕсли;
	
	// площадь
	Если мКолонкиСписка.Площадь.Видимость Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", МассивСсылок);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ОбъектыАренды.СтруктурнаяЕдиница,
		|	СУММА(ОбъектыАренды.ЗначениеХарактеристики) КАК ЗначениеХарактеристики
		|ИЗ
		|	Справочник.ОбъектыАренды КАК ОбъектыАренды
		|ГДЕ
		|	ОбъектыАренды.СтруктурнаяЕдиница В(&СтруктурнаяЕдиница)
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбъектыАренды.СтруктурнаяЕдиница";
		Выгрузка = Запрос.Выполнить().Выгрузить();
		
		Для Каждого Оформление Из ОформленияСтрок Цикл
			СтрокаКеш = Выгрузка.Найти(Оформление.ДанныеСтроки.Ссылка, "СтруктурнаяЕдиница");
			Если СтрокаКеш = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Оформление.Ячейки.Площадь.УстановитьТекст(Формат(СтрокаКеш.ЗначениеХарактеристики, "ЧЦ=15; ЧДЦ=2"));
		КонецЦикла;
	КонецЕсли;
	
	// ответственный по аренде
	Если мКолонкиСписка.ОтветственныйПоАренде.Видимость Тогда
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СоответствиеОбъектРольСрезПоследних.Объект,
		|	РолиПользователейСоставРоли.Сотрудник.Наименование КАК Сотрудник
		|ИЗ
		|	РегистрСведений.СоответствиеОбъектРоль.СрезПоследних(, ТипРоли = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ТипыРолейПользователя.МенеджерПоАренде)) КАК СоответствиеОбъектРольСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
		|		ПО СоответствиеОбъектРольСрезПоследних.РольПользователя = РолиПользователейСоставРоли.Ссылка";
		ТабКеш = Запрос.Выполнить().Выгрузить();
		Для Каждого Оформление Из ОформленияСтрок Цикл
			СтрокиКеш = ТабКеш.НайтиСтроки(Новый Структура("Объект", Оформление.ДанныеСтроки.Ссылка));
			СтрокаОтветственный = "";
			Для Каждого СтрокаКеш Из СтрокиКеш Цикл
				Если ЗначениеЗаполнено(СтрокаКеш.Сотрудник) Тогда
					ФИО = СтрЗаменить(СтрокаКеш.Сотрудник, " ", Символы.ПС);
					Если СтрЧислоСтрок(ФИО) >= 1 Тогда
						СтрокаОтветственный = СтрокаОтветственный + ?(ЗначениеЗаполнено(СтрокаОтветственный), Символы.ПС, "") + СтрПолучитьСтроку(ФИО, 1);
					КонецЕсли;
					Если СтрЧислоСтрок(ФИО) >= 2 Тогда
						СтрокаОтветственный = СтрокаОтветственный + " " + Лев(ВРег(СтрПолучитьСтроку(ФИО, 2)), 1) + ".";
					КонецЕсли;
					Если СтрЧислоСтрок(ФИО) >= 3 Тогда
						СтрокаОтветственный = СтрокаОтветственный + " " + Лев(ВРег(СтрПолучитьСтроку(ФИО, 3)), 1) + ".";
					КонецЕсли;
				КонецЕсли;	
			КонецЦикла;
			Оформление.Ячейки.ОтветственныйПоАренде.УстановитьТекст(СтрокаОтветственный);
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ДействияФормыОтчетПоСтруктурнымЕдиницам(Кнопка)
	
	ФормаОтчета = Отчеты.ОтчетПоСтруктурнымЕдиницам.ПолучитьФорму();
	ФормаОтчета.Открыть();
	
КонецПроцедуры

Процедура ДействияФормыДвиженияТорговыхТочек(Кнопка)
	
	ОткрытьФорму("Отчет.ДвиженияТорговыхТочек.Форма.ФормаОтчета");
	
КонецПроцедуры

Процедура ДействияФормыПараметрыРасчетаФорматаВВ(Кнопка)
	
	ОткрытьФорму("Справочник.СтруктурныеЕдиницы.Форма.ПараметрыРасчетаФорматаВВ");
	
КонецПроцедуры

Процедура ДействияФормыПечатьЭтикеток(Кнопка)
	
	Справочники.СтруктурныеЕдиницы.ПолучитьФорму("ФормаПечатиЭтикеток").Открыть();
	
КонецПроцедуры

Процедура ДействияФормыДействие(Кнопка)
	ФормаОтчета = Отчеты.АК_ОтчетПоСтроительству.ПолучитьФорму();
	ФормаОтчета.Открыть();
КонецПроцедуры
