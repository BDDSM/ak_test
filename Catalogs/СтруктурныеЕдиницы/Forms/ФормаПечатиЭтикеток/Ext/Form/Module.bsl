
&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого СтрокаТаб Из ТабТТ Цикл
		СтрокаТаб.Печатать = Истина;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для Каждого СтрокаТаб Из ТабТТ Цикл
		СтрокаТаб.Печатать = Ложь;
	КонецЦикла;	
	
КонецПроцедуры

Функция ПечатьНаСервере()
	
	ТабДок = Новый ТабличныйДокумент();
	ВнешняяКомпонента = Справочники.Номенклатура.ПодключитьВнешнююКомпонентуПечатиШтрихкода();
	Макет = Справочники.СтруктурныеЕдиницы.ПолучитьМакет("Этикетка");
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтруктурныеЕдиницы.Ссылка,
	               |	СтруктурныеЕдиницы.id_TT,
	               |	СтруктурныеЕдиницы.Наименование
	               |ИЗ
	               |	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы";
				   
	ТабКеш = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаТаб Из ТабТТ Цикл
		Если НЕ СтрокаТаб.Печатать Тогда
			Продолжить;
		КонецЕсли;	
		Если ТабДок.ВысотаТаблицы > 0 Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;	
		СтрокаКеш = ТабКеш.Найти(СтрокаТаб.СтруктурнаяЕдиница, "Ссылка");
		Если СтрокаКеш <> Неопределено Тогда
			ШтрихКод = "820" + Прав("000000000000" + Формат(СтрокаКеш.id_TT, "ЧГ=0"), 12);
			Область = Макет.ПолучитьОбласть("Этикетка");
			Область.Параметры.Склад = СтрокаКеш.Наименование;
			
			Рисунок 					= Область.Рисунки["ШтрихКод"];
			
			//+++АК sole 2018.09.12 ИП-00019639
			//ПараметрыШК = Новый Структура();
			//ПараметрыШК.Вставить("Ширина", Рисунок.Ширина);
			//ПараметрыШК.Вставить("Высота", Рисунок.Высота);
			//ПараметрыШК.Вставить("ТипКода", 4);
			//ПараметрыШК.Вставить("ОтображатьТекст", Ложь);
			//ПараметрыШК.Вставить("РазмерШрифта", 10);
			//ПараметрыШК.Вставить("Штрихкод", Штрихкод);
			//Рисунок.Картинка = ОбщегоНазначенияКлиентСервер.ПолучитьКартинкуШтрихкода(ВнешняяКомпонента, ПараметрыШК);
			ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(Штрихкод, 0, 300);
			Рисунок.Картинка = Новый Картинка(ДанныеQRКода);
			//---АК sole 2018.09.12 ИП-00019639
			Область.Параметры.ШК = ШтрихКод;
			ТабДок.Вывести(Область);
		КонецЕсли;	
	КонецЦикла;	
	
	ТабДок.КлючПараметровПечати = "ПараметрыПечати_ЭтикеткиУпаковки";
	Возврат ТабДок;
	
КонецФункции	

&НаКлиенте
Процедура Печатать(Команда)
	
	ТабДок = ПечатьНаСервере();
	ТабДок.Показать();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//++АК hamz 2018.09.28 ИП-00019597
	СхемаКомпоновкиДанных = Справочники.СтруктурныеЕдиницы.ПолучитьМакет("Запрос");
	
	URLСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, Новый УникальныйИдентификатор());   
	
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(URLСхемы));
	
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	//--АК hamz 2018.09.28 ИП-00019597
КонецПроцедуры
//+++АК BELN 2018.05.22 ИП-00018506
&НаКлиенте
Процедура ПечатьЭтикеток(Команда)
	МасМаг=Новый Массив;
	Для Каждого СтрокаТаб Из ТабТТ Цикл
		Если НЕ СтрокаТаб.Печатать Тогда
			Продолжить;
		КонецЕсли;	
		МасМаг.Добавить(СтрокаТаб.СтруктурнаяЕдиница);
	КонецЦикла;
	ТД=ПечатьЭтикетокСервер(МасМаг);
	ТД.Показать();
КонецПроцедуры
//---АК BELN 2018.05.22 
//+++АК BELN 2018.05.22 ИП-00018506
&НаСервере
Функция ПечатьЭтикетокСервер(МасМаг)
	Возврат Обработки.ФормированийЗаданийНаРазборку.СформироватьТабличныйДокумент_Магазины(МасМаг);
КонецФункции

//---АК BELN 2018.05.22

//++АК hamz 2018.09.28 ИП-00019597
&НаКлиенте
Процедура Заполнить(Команда)
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	СКД = Справочники.СтруктурныеЕдиницы.ПолучитьМакет("Запрос");
	НастройкиКомпоновки = КомпоновщикНастроек.Настройки;
	
	ТЗДанные = Новый ТаблицаЗначений;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СКД,НастройкиКомпоновки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));

	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	ПроцессорВывода.УстановитьОбъект(ТЗДанные);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	//ТабТТ.Загрузить(ТЗДанные);
	ТабТТ.Очистить();
	Для каждого Выборка Из ТЗДанные Цикл
		СтрокаДоб = ТабТТ.Добавить();
		СтрокаДоб.Печатать = Истина;
		СтрокаДоб.СтруктурнаяЕдиница = Выборка.СтруктурнаяЕдиница;
		СтрокаДоб.Организация = Выборка.Организация;
		СтрокаДоб.ОсновнойСклад = Выборка.ОсновнойСклад;
		СтрокаДоб.КонтрагентСтороннейРозницы = Выборка.КонтрагентСтороннейРозницы;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	ЗаполнитьНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры
//--АК hamz 2018.09.28 ИП-00019597


