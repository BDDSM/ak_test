
&НаСервере
Процедура ПересчитатьДанныеСервер()
	
	ТаблицаРасчета.Очистить();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	Запрос.УстановитьПараметр("ДатаНач", НачалоНедели(ТекущаяДата() - 21*86400));
	Запрос.УстановитьПараметр("ДатаКон", КонецНедели(ТекущаяДата() - 7*86400));

	Запрос.Текст = "ВЫБРАТЬ
	               |	СтруктурныеЕдиницы.Ссылка КАК Магазин,
	               |	СтруктурныеЕдиницы.ФорматМагазинаВВ КАК ТекущийФормат,
	               |	ВЗ_ВместимостьМест.НеХватаетМестКолво КАК НехваткаВместимости,
	               |	ВЫРАЗИТЬ(ВЗ_ВыручкаЗаБудни.СуммаДокумента / 15 КАК ЧИСЛО(15, 0)) КАК СредняяВыручкаПоБудням,
	               |	СтруктурныеЕдиницы.НомерТочки КАК НомерТочки,
	               |	ЕСТЬNULL(ВЗ_Площади.Площадь, 0) КАК ОбщаяПлощадь,
	               |	СтруктурныеЕдиницы.ТорговаяПлощадь
	               |ИЗ
	               |	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦФОСтруктурныхЕдиниц.СрезПоследних(&ТекДата, ) КАК ЦФОСтруктурныхЕдиницСрезПоследних
	               |		ПО СтруктурныеЕдиницы.Ссылка = ЦФОСтруктурныхЕдиницСрезПоследних.СтруктурнаяЕдиница
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ВЗ_МестаИМагазины.Магазин КАК Магазин,
	               |			СУММА(ВЫБОР
	               |					КОГДА ЕСТЬNULL(МестаХраненияВМагазинах.Хватает, ЛОЖЬ) = ЛОЖЬ
	               |						ТОГДА 1
	               |					ИНАЧЕ 0
	               |				КОНЕЦ) КАК НеХватаетМестКолво
	               |		ИЗ
	               |			(ВЫБРАТЬ
	               |				СтруктурныеЕдиницы.Ссылка КАК Магазин,
	               |				МестаВыкладки.Ссылка КАК МестоВыкладки
	               |			ИЗ
	               |				Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	               |					ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МестаВыкладки КАК МестаВыкладки
	               |					ПО (ИСТИНА)
	               |			ГДЕ
	               |				МестаВыкладки.ЭтоГруппа = ИСТИНА
	               |				И МестаВыкладки.ПометкаУдаления = ЛОЖЬ
	               |				И СтруктурныеЕдиницы.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	               |				И СтруктурныеЕдиницы.СтатусТорговойТочки = ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Открыт)) КАК ВЗ_МестаИМагазины
	               |				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестаХраненияВМагазинах КАК МестаХраненияВМагазинах
	               |				ПО ВЗ_МестаИМагазины.Магазин = МестаХраненияВМагазинах.Магазин
	               |					И ВЗ_МестаИМагазины.МестоВыкладки = МестаХраненияВМагазинах.МестоВыкладки
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ВЗ_МестаИМагазины.Магазин) КАК ВЗ_ВместимостьМест
	               |		ПО СтруктурныеЕдиницы.Ссылка = ВЗ_ВместимостьМест.Магазин
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ЛистУчета.ТорговаяТочка КАК ТорговаяТочка,
	               |			СУММА(ЛистУчета.СуммаДокумента) КАК СуммаДокумента
	               |		ИЗ
	               |			Документ.ЛистУчета КАК ЛистУчета
	               |		ГДЕ
	               |			ЛистУчета.Дата МЕЖДУ &ДатаНач И &ДатаКон
	               |			И ЛистУчета.Проведен = ИСТИНА
	               |			И ЛистУчета.ТорговаяТочка.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	               |			И ЛистУчета.ТорговаяТочка.СтатусТорговойТочки = ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Открыт)
	               |			И ДЕНЬНЕДЕЛИ(ЛистУчета.Дата) В (1, 2, 3, 4, 5)
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ЛистУчета.ТорговаяТочка) КАК ВЗ_ВыручкаЗаБудни
	               |		ПО СтруктурныеЕдиницы.Ссылка = ВЗ_ВыручкаЗаБудни.ТорговаяТочка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ОбъектыАренды.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	               |			СУММА(ОбъектыАренды.ЗначениеХарактеристики) КАК Площадь
	               |		ИЗ
	               |			Справочник.ОбъектыАренды КАК ОбъектыАренды
	               |		
	               |		СГРУППИРОВАТЬ ПО
	               |			ОбъектыАренды.СтруктурнаяЕдиница) КАК ВЗ_Площади
	               |		ПО СтруктурныеЕдиницы.Ссылка = ВЗ_Площади.СтруктурнаяЕдиница
	               |ГДЕ
	               |	СтруктурныеЕдиницы.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	               |	И СтруктурныеЕдиницы.СтатусТорговойТочки = ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Открыт)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерТочки";

	ТаблицаМагазины = Запрос.Выполнить().Выгрузить();
	ТаблицаМагазины.Колонки.Добавить("СреднийЧек");
	ТаблицаМагазины.Колонки.Добавить("СреднееКоличествоЧеков");
	ТаблицаМагазины.Колонки.Добавить("ПроцентЧековБолее600");
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение("10.0.0.40");
	
	Если ADOСоединение = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТекстЗапроса = "SELECT [ShopNo]
					|		  ,[BaseSum]
					|		  ,[closedate], OperationType
					|INTO #a		  
					|	  FROM [SMS_UNION].[dbo].[Checks] as Ch (nolock) where CloseDate between " + ВнешниеДанные.ФорматПоля(НачалоНедели(ТекущаяДата() - 21*86400)) + " and " + ВнешниеДанные.ФорматПоля(КонецНедели(ТекущаяДата() - 7*86400)) + "
					|	  
					|SELECT [ShopNo]
					|		  ,AVG([BaseSum]) Среднее
					|		  
					|	  FROM #a as Ch (nolock) where OperationType = 1 and DATEPART(weekday, CloseDate) IN (1,2,3,4,5)
					|	GROUP BY [ShopNo]
					|	
					|SELECT [ShopNo]
					|		  , COUNT(DISTINCT CONVERT(date, closedate)) Дней
					|		  ,SUM(1) Колво
					|		  
					|	  FROM #a as Ch (nolock) where OperationType = 1 and DATEPART(weekday, CloseDate) IN (1,2,3,4,5)
					|	GROUP BY [ShopNo]
					|	HAVING COUNT(DISTINCT CONVERT(date, closedate)) > 0
					|
					|SELECT [ShopNo]
					|		  , SUM(CASE WHEN BaseSum >= 600 THEN 1 ELSE 0 END) Более600
					|		  ,SUM(1) Колво
					|		  
					|	  FROM #a as Ch (nolock) where OperationType = 1 and DATEPART(weekday, CloseDate) IN (1,2,3,4,5)
					|	GROUP BY [ShopNo]";

	rs = ADOСоединение.Execute(ТекстЗапроса);
	Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
		rs=rs.NextRecordSet();
	КонецЦикла;

	Попытка
		rs.MoveFirst();
		
		Пока НЕ rs.EOF() Цикл
			СтрокаМагазин = ТаблицаМагазины.Найти(rs.Fields("ShopNo").Value, "НомерТочки");
			Если СтрокаМагазин <> Неопределено Тогда
				СтрокаМагазин.СреднийЧек = rs.Fields("Среднее").Value;
			КонецЕсли;	
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;

	rs=rs.NextRecordSet();
	
	Попытка
		rs.MoveFirst();
		
		Пока НЕ rs.EOF() Цикл
			СтрокаМагазин = ТаблицаМагазины.Найти(rs.Fields("ShopNo").Value, "НомерТочки");
			Если СтрокаМагазин <> Неопределено Тогда
				СтрокаМагазин.СреднееКоличествоЧеков = rs.Fields("Колво").Value / rs.Fields("Дней").Value;
			КонецЕсли;	
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	rs=rs.NextRecordSet();
	
	Попытка
		rs.MoveFirst();
		
		Пока НЕ rs.EOF() Цикл
			СтрокаМагазин = ТаблицаМагазины.Найти(rs.Fields("ShopNo").Value, "НомерТочки");
			Если СтрокаМагазин <> Неопределено Тогда
				СтрокаМагазин.ПроцентЧековБолее600 = rs.Fields("Более600").Value / rs.Fields("Колво").Value * 100;
			КонецЕсли;	
			rs.MoveNext();
		КонецЦикла;
	Исключение
	КонецПопытки;
	
	ТаблицаМагазины.Сортировать("НомерТочки");
	
	ТаблицаРасчета.Загрузить(ТаблицаМагазины);
	
КонецПроцедуры	
	
&НаКлиенте
Процедура ПересчитатьДанные(Команда)
	
	ПересчитатьДанныеСервер();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПересчитатьДанныеСервер();
	
КонецПроцедуры
