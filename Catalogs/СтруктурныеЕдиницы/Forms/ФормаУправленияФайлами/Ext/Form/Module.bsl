&НаСервере
Функция ПолучитьПрикрепленныеСервер()
	
	О = СсылкаНаОбъект.ПолучитьОбъект();
	//Сообщить(О);
	//ЗаписьЖурналаРегистрации(О);
	//Сообщить(ПрикрепленныеФайлы);
	//ЗаписьЖурналаРегистрации(ПрикрепленныеФайлы);
	//Сообщить(ПрикрепленныеФайлы.Количество());
	//ЗаписьЖурналаРегистрации(ПрикрепленныеФайлы.Количество());
	
	//ПолучитьВыбранныеФайлыПоСтрокеСервер(УИН_СтрокиСтруктурныеЕдиницы, Результат);
	
	
	СтруктураДляПоиска = Новый Структура("УИН_СтрокиСтруктурныеЕдиницы", УИН_СтрокиСтруктурныеЕдиницы);
	//
	МассивСтрок = О.ПрикрепленныеФайлы.НайтиСтроки(СтруктураДляПоиска); 
	Для каждого СтрокаТЧ Из МассивСтрок Цикл 
	 	О.ПрикрепленныеФайлы.Удалить(СтрокаТЧ); 
	КонецЦикла; 
	
	//
	Для каждого СтрокаТаблицы Из ПрикрепленныеФайлы.Выгрузить() Цикл
		НоваяСтрока 								= О.ПрикрепленныеФайлы.Добавить();
		НоваяСтрока.УИН_СтрокиСтруктурныеЕдиницы	= УИН_СтрокиСтруктурныеЕдиницы;
		НоваяСтрока.Файл							= СтрокаТаблицы.Файл;
		НоваяСтрока.ТипыЗагружаемыхФайлов			= СтрокаТаблицы.ТипыЗагружаемыхФайлов;
		НоваяСтрока.ДатаДобавления 					= ТекущаяДата();
	КонецЦикла;

	
	
	//О.ПрикрепленныеФайлы.Загрузить(ПрикрепленныеФайлы.Выгрузить());
	О.Записать();	

	
	//Возврат ПрикрепленныеФайлы.Выгрузить();
	
КонецФункции	


	//ЭтаФорма.Модифицированность = Истина;
	
//КонецПроцедуры

Процедура ПолучитьВыбранныеФайлыПоСтрокеСервер(УИН_СтрокиСтруктурныеЕдиницы, ТЗФайлов)
	
	//СтруктураДляПоиска = Новый Структура("УИН_СтрокиСтруктурныеЕдиницы", УИН_СтрокиСтруктурныеЕдиницы);
	//
	//МассивСтрок = Объект.ПрикрепленныеФайлы.НайтиСтроки(СтруктураДляПоиска); 
	//Для каждого СтрокаТЧ Из МассивСтрок Цикл 
	// 	Объект.ПрикрепленныеФайлы.Удалить(СтрокаТЧ); 
	//КонецЦикла; 
	//
	////
	//Для каждого СтрокаТаблицы Из ТЗФайлов Цикл
	//	НоваяСтрока 								= Объект.ПрикрепленныеФайлы.Добавить();
	//	НоваяСтрока.УИН_СтрокиСтруктурныеЕдиницы	= УИН_СтрокиСтруктурныеЕдиницы;
	//	НоваяСтрока.Файл							= СтрокаТаблицы.Файл;
	//	НоваяСтрока.ТипыЗагружаемыхФайлов			= СтрокаТаблицы.ТипыЗагружаемыхФайлов;
	//	НоваяСтрока.ДатаДобавления 					= ТекущаяДата();
	//КонецЦикла;
	
КонецПроцедуры


Функция ПолучитьРеквизитыСохраненияКартинки(ФайлСсылка)
	
	Картинка = Новый Картинка(Справочники.Файлы.ПолучитьИмяФайлаДляОбъекта(ФайлСсылка));
	
	Возврат Новый Структура("АдресКартинки, Расширение", ПоместитьВоВременноеХранилище(Картинка), ФайлСсылка.Расширение);
	
КонецФункции

Функция СоздатьФайлХранения(СтрокаТаблицы, РасширениеРезультата)
	
	СпрОбъект = Справочники.Файлы.СоздатьЭлемент();
	//СпрОбъект.УстановитьНовыйКод("0");
	СпрОбъект.Наименование 	= СтрокаТаблицы.Представление;
	СпрОбъект.Расширение 	= РасширениеРезультата;
	СпрОбъект.ДополнительныеСвойства.Вставить("Хранилище", Новый ХранилищеЗначения(Новый Картинка(СтрокаТаблицы.ДанныеКартинки)));
	СпрОбъект.Записать();
	
	Возврат СпрОбъект.Ссылка;
	
КонецФункции	


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УИН_СтрокиСтруктурныеЕдиницы = Параметры.УИН_СтрокиСтруктурныеЕдиницы;
	
	//Парам.Вставить("СоставФайлов"	, ФайлыПоСтрокеСервер(Параметры.Ссылка, УИН_СтрокиСтруктурныеЕдиницы));
	//Парам.Вставить("ТипыЗагружаемыхФайлов", 		ТекущиеДанные.ТипыЗагружаемыхФайлов);
	ТипыЗагружаемыхФайлов = Параметры.ТипыЗагружаемыхФайлов;
	СсылкаНаОбъект = Параметры.Ссылка;
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		//|	СтруктурныеЕдиницыПрикрепленныеФайлы.Ссылка,
		//|	СтруктурныеЕдиницыПрикрепленныеФайлы.НомерСтроки,
		|	СтруктурныеЕдиницыПрикрепленныеФайлы.УИН_СтрокиСтруктурныеЕдиницы,
		|	СтруктурныеЕдиницыПрикрепленныеФайлы.Файл,
		|	СтруктурныеЕдиницыПрикрепленныеФайлы.ТипыЗагружаемыхФайлов,
		|	СтруктурныеЕдиницыПрикрепленныеФайлы.ДатаДобавления
		//|	СтруктурныеЕдиницыПрикрепленныеФайлы.ДокументОснование
		|ИЗ
		|	Справочник.СтруктурныеЕдиницы.ПрикрепленныеФайлы КАК СтруктурныеЕдиницыПрикрепленныеФайлы
		|ГДЕ
		|	СтруктурныеЕдиницыПрикрепленныеФайлы.УИН_СтрокиСтруктурныеЕдиницы = &УИН_СтрокиСтруктурныеЕдиницы
		|	И СтруктурныеЕдиницыПрикрепленныеФайлы.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("УИН_СтрокиСтруктурныеЕдиницы", УИН_СтрокиСтруктурныеЕдиницы);
		Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);

	Результат = Запрос.Выполнить().Выгрузить();

	//ВыборкаДетальныеЗаписи = Результат.Выбрать();

	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//КонецЦикла;

	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	//ПрикрепленныеФайлы.Загрузить(Параметры.СоставФайлов);
	
	ПрикрепленныеФайлы.Загрузить(Результат); //ФайлыПоСтрокеСервер(УИН_СтрокиСтруктурныеЕдиницы));
	
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьФайл(Команда)
	
	//
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.ПолноеИмяФайла 		= "";
	ДиалогОткрытияФайла.МножественныйВыбор 	= Истина;
	ДиалогОткрытияФайла.Заголовок 			= "Выберите файлы";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
	    МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;
	    Для Каждого ИмяФайла Из МассивФайлов Цикл
	        ВыбФайл = Новый Файл(ИмяФайла);
			Если НЕ ВыбФайл.Существует() Тогда				
				Сообщить("Не существует файл. "+ИмяФайла);
				Продолжить;
			КонецЕсли;
			СсылкаНаФайл = СоздатьФайлХранения(Новый Структура("Представление, ДанныеКартинки", ВыбФайл.Имя, Новый ДвоичныеДанные(ИмяФайла)), ВыбФайл.Расширение);
			
			//
			НоваяСтрока 				= ПрикрепленныеФайлы.Добавить();
			НоваяСтрока.Файл 			= СсылкаНаФайл;
			НоваяСтрока.ДатаДобавления 	= ТекущаяДата();
			НоваяСтрока.ТипыЗагружаемыхФайлов = ТипыЗагружаемыхФайлов;
		КонецЦикла;	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	Отказ = Ложь;
	Для Каждого Строка ИЗ ПрикрепленныеФайлы Цикл
		Если НЕ ЗначениеЗаполнено(Строка.ТипыЗагружаемыхФайлов) Тогда
			Отказ = Истина;
			Сообщить("Укажите тип файла");
		КонецЕсли;
	КонецЦикла;
	Если НЕ Отказ Тогда
		Закрыть(ПолучитьПрикрепленныеСервер());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Просмотреть(Команда)
	
	Если Элементы.ПрикрепленныеФайлы.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = Элементы.ПрикрепленныеФайлы.ДанныеСтроки(Элементы.ПрикрепленныеФайлы.ТекущаяСтрока);
	
	СтруктураКартинки = ПолучитьРеквизитыСохраненияКартинки(ДанныеСтроки.Файл);
	ИмяФайла = ПолучитьИмяВременногоФайла(СтруктураКартинки.Расширение);
	Если ПолучитьФайл(СтруктураКартинки.АдресКартинки, ИмяФайла, Ложь) = Истина Тогда
		ЗапуститьПриложение(ИмяФайла);
	КонецЕсли;
	
КонецПроцедуры



&НаКлиенте
Процедура СохранитьКак(Команда)
	
	Если Элементы.ПрикрепленныеФайлы.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеСтроки = Элементы.ПрикрепленныеФайлы.ДанныеСтроки(Элементы.ПрикрепленныеФайлы.ТекущаяСтрока);
	
	СтруктураКартинки = ПолучитьРеквизитыСохраненияКартинки(ДанныеСтроки.Файл);
	
	ИмяФайла = ПолучитьИмяВременногоФайла(СтруктураКартинки.Расширение);
	ПолучитьФайл(СтруктураКартинки.АдресКартинки, ИмяФайла, Истина);
	
КонецПроцедуры

&НаСервере
Функция ФайлыПоСтрокеСервер(Параметры_Ссылка, УИН_СтрокиСтруктурныеЕдиницы)
	
	
	//Возврат Объект.ПрикрепленныеФайлы.Выгрузить(Новый Структура("УИН_СтрокиСтруктурныеЕдиницы", УИН_СтрокиСтруктурныеЕдиницы));
КонецФункции