
Процедура СправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	МассивСсылки = Новый Массив();
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		МассивСсылки.Добавить(ОформлениеСтроки.ДанныеСтроки.Ссылка);
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтруктурныеЕдиницы.Ссылка.Наименование КАК ТТ,
	               |	СтруктурныеЕдиницы.ДатаОткрытия,
	               |	СтруктурныеЕдиницы.ДатаЗакрытия,
	               |	ПодразделенияДляСтатистикиСтруктурныеЕдиницы.Ссылка
	               |ИЗ
	               |	Справочник.ПодразделенияДляСтатистики.СтруктурныеЕдиницы КАК ПодразделенияДляСтатистикиСтруктурныеЕдиницы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	               |		ПО ПодразделенияДляСтатистикиСтруктурныеЕдиницы.ТорговаяТочка = СтруктурныеЕдиницы.Ссылка
	               |ГДЕ
	               |	ПодразделенияДляСтатистикиСтруктурныеЕдиницы.Ссылка В(&МассивПодразделения)";
				   
	Запрос.УстановитьПараметр("МассивПодразделения", МассивСсылки);
	ТабКеш = Запрос.Выполнить().Выгрузить();
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		СтрокаТТ = "";
		СтрокиКеш = ТабКеш.НайтиСтроки(Новый Структура("Ссылка", ОформлениеСтроки.ДанныеСтроки.Ссылка));
		Если СтрокиКеш.Количество() > 0 Тогда
			Для Каждого СтрокаТтЭл Из СтрокиКеш Цикл
				СтрокаТТ = СтрокаТТ + ?(ЗначениеЗаполнено(СтрокаТТ), Символы.ПС, "") + СтрокаТтЭл.ТТ;
			КонецЦикла;	
			Если ОформлениеСтроки.Ячейки.ДатаОткрытия.Видимость Тогда
				ОформлениеСтроки.Ячейки.ДатаОткрытия.УстановитьТекст(Формат(СтрокиКеш[0].ДатаОткрытия, "ДФ=dd.MM.yyyy"));
			КонецЕсли;
			Если ОформлениеСтроки.Ячейки.ДатаЗакрытия.Видимость Тогда
				ОформлениеСтроки.Ячейки.ДатаЗакрытия.УстановитьТекст(Формат(СтрокиКеш[0].ДатаЗакрытия, "ДФ=dd.MM.yyyy"));
			КонецЕсли;
			Если ОформлениеСтроки.Ячейки.СтруктурныеЕдиницы.Видимость Тогда
				ОформлениеСтроки.Ячейки.СтруктурныеЕдиницы.УстановитьТекст(СтрокаТТ);
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;	
	
КонецПроцедуры

Процедура ДействияФормыПроверитьПривязки(Кнопка)
	
	ДатаПроверки = ТекущаяДата();
	
	Если ВвестиДату(ДатаПроверки, "Укажите дату, на котороую выполнить проверку", ЧастиДаты.Дата) Тогда
		Запрос = Новый Запрос();
		Запрос.УстановитьПараметр("ДатаНач", ДобавитьМесяц(ДатаПроверки, -12));
		Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаПроверки));
		Запрос.Текст = "ВЫБРАТЬ
		               |	МАКСИМУМ(ЛистУчета.Дата) КАК Дата,
					   |	Минимум(ЛистУчета.Дата) КАК ДатаОткрытия,
		               |	ЛистУчета.ТорговаяТочка
		               |ИЗ
		               |	Документ.ЛистУчета КАК ЛистУчета
		               |ГДЕ
		               |	ЛистУчета.Дата МЕЖДУ &ДатаНач И &ДатаКон
		               |	И ЛистУчета.Проведен = ИСТИНА
		               |	И ЛистУчета.СуммаДокумента > 0
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ЛистУчета.ТорговаяТочка
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ЛистУчета.ТорговаяТочка.НомерТочки
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ПодразделенияДляСтатистикиСтруктурныеЕдиницы.ТорговаяТочка
		               |ИЗ
		               |	Справочник.ПодразделенияДляСтатистики.СтруктурныеЕдиницы КАК ПодразделенияДляСтатистикиСтруктурныеЕдиницы
		               |ГДЕ
		               |	ПодразделенияДляСтатистикиСтруктурныеЕдиницы.Ссылка.ПометкаУдаления = ЛОЖЬ";
					   
		Результаты = Запрос.ВыполнитьПакет();
		ТабТТЛисты = Результаты[0].Выгрузить();
		ТабСпр = Результаты[1].Выгрузить();
		
		ТабДок = Новый ТабличныйДокумент();
		ТабДок.ОтображатьЗаголовки = Ложь;
		ТабДок.ОтображатьСетку = Ложь;
		
		Макет = Справочники.ПодразделенияДляСтатистики.ПолучитьМакет("ПроверкаПривязок");
		
		БылВыводШапкиРаботающие = Ложь;
		БылВыводШапкиЗакрытые = Ложь;
		//проверим работающие, но не указанные
		Для Каждого СтрокаТТЛист Из ТабТТЛисты Цикл
			Если СтрокаТТЛист.Дата >= ДатаПроверки - 86400*2 Тогда
				СтрокаСпр = ТабСпр.Найти(СтрокаТТЛист.ТорговаяТочка, "ТорговаяТочка");
				Если СтрокаСпр = Неопределено Тогда
					Если Не БылВыводШапкиРаботающие Тогда
						Область = Макет.ПолучитьОбласть("ШапкаРаботающие");
						ТабДок.Вывести(Область);
						БылВыводШапкиРаботающие = Истина;
					КонецЕсли;	
					Область = Макет.ПолучитьОбласть("Строка");
					Область.Параметры.ТТ = СтрокаТТЛист.ТорговаяТочка;
					Область.Параметры.Дата = СтрокаТТЛист.ДатаОткрытия;
					ТабДок.Вывести(Область);
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла;
		
		//проверим закрытые, но привязанные
		Для Каждого СтрокаТТЛист Из ТабТТЛисты Цикл
			Если СтрокаТТЛист.Дата < ДатаПроверки - 86400*2 Тогда
				СтрокаСпр = ТабСпр.Найти(СтрокаТТЛист.ТорговаяТочка, "ТорговаяТочка");
				Если СтрокаСпр <> Неопределено Тогда
					Если Не БылВыводШапкиЗакрытые Тогда
						Область = Макет.ПолучитьОбласть("ШапкаЗакрытые");
						ТабДок.Вывести(Область);
						БылВыводШапкиЗакрытые = Истина;
					КонецЕсли;	
					Область = Макет.ПолучитьОбласть("Строка");
					Область.Параметры.ТТ = СтрокаТТЛист.ТорговаяТочка;
					Область.Параметры.Дата = СтрокаТТЛист.Дата;
					ТабДок.Вывести(Область);
				КонецЕсли;	
			КонецЕсли;
		КонецЦикла;
		
		ТабДок.Показать();
	КонецЕсли;				   
	
КонецПроцедуры
