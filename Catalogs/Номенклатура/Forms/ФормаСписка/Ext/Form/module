
Процедура ДействияФормыДействиеСвойства(Кнопка)
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаСпискаСвойстваУпр");
	
КонецПроцедуры

Процедура СправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	МассивНоменклатуры = Новый СписокЗначений;
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		МассивНоменклатуры.Добавить(ОформлениеСтроки.ДанныеСтроки.Ссылка);
		//mind отключил по просьбе Кривенко
	//	Если ОформлениеСтроки.ДанныеСтроки.Ссылка.Файлы.Количество()=1 Тогда
	//		ОформлениеСтроки.Ячейки.Вложения.УстановитьТекст(СокрЛП(ОформлениеСтроки.ДанныеСтроки.Ссылка.Файлы[0].КраткоеИмяФайла));
	//	ИначеЕсли ОформлениеСтроки.ДанныеСтроки.Ссылка.Файлы.Количество()=0 Тогда
	//		ОформлениеСтроки.Ячейки.Вложения.УстановитьТекст("нет");
	//	Иначе	
	//		ОформлениеСтроки.Ячейки.Вложения.УстановитьТекст(СокрЛП(ОформлениеСтроки.ДанныеСтроки.Ссылка.Файлы.Количество())+" файлов ");
	//	КонецЕсли;	
	КонецЦикла;
	
	
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекДата"				, ТекущаяДата());
	Запрос.УстановитьПараметр("МассивНоменклатуры"	, МассивНоменклатуры);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.Цена
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			&ТекДата,
	|			Номенклатура В (&МассивНоменклатуры)
	|				И ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)) КАК ЦеныНоменклатурыСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СебестоимостьТоваровСрезПоследних.Номенклатура,
	|	СебестоимостьТоваровСрезПоследних.Себестоимость * ВЫБОР
	|		КОГДА СебестоимостьТоваровСрезПоследних.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|				ИЛИ СебестоимостьТоваровСрезПоследних.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|			ТОГДА 1.1
	|		КОГДА СебестоимостьТоваровСрезПоследних.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|				ИЛИ СебестоимостьТоваровСрезПоследних.Номенклатура.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|			ТОГДА 1.18
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Себестоимость,
	|	СебестоимостьТоваровСрезПоследних.Номенклатура.ЕдиницаХраненияОстатков.Вес КАК Вес
	|ИЗ
	|	РегистрСведений.СебестоимостьТоваров.СрезПоследних(, Номенклатура В (&МассивНоменклатуры)) КАК СебестоимостьТоваровСрезПоследних";
	
	Результаты = Запрос.ВыполнитьПакет();
	
	//
	ТаблицаЦен 				= Результаты[0].Выгрузить();
	ТаблицаСебестоимость 	= Результаты[1].Выгрузить();
	
	Для Каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		СтрокаЦен = ТаблицаЦен.Найти(ОформлениеСтроки.ДанныеСтроки.Ссылка, "Номенклатура");
		Если СтрокаЦен <> Неопределено Тогда
			ОформлениеСтроки.Ячейки.ЦенаРеализации.УстановитьТекст(Формат(СтрокаЦен.Цена, "ЧДЦ=2"));	
		КонецЕсли;
		
		СтрокаСебестоимость = ТаблицаСебестоимость.Найти(ОформлениеСтроки.ДанныеСтроки.Ссылка, "Номенклатура");
		Если СтрокаСебестоимость <> Неопределено Тогда
			ОформлениеСтроки.Ячейки.Себестоимость.УстановитьТекст(Формат(СтрокаСебестоимость.Себестоимость, "ЧДЦ=2"));
			Если ТипЗнч(СтрокаСебестоимость.Вес) = Тип("Число")
					И СтрокаСебестоимость.Вес <> 0 Тогда
				ОформлениеСтроки.Ячейки.СебестоимостьЗаКГ.УстановитьТекст(Формат(СтрокаСебестоимость.Себестоимость / СтрокаСебестоимость.Вес, "ЧДЦ=2"));
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура СправочникСписокЦенаРеализацииНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаРегистра = РегистрыСведений.ЦеныРеализации.ПолучитьФормуСписка(, ЭтаФорма);
	//ФормаРегистра.
	ФормаРегистра.ЭлементыФормы.РегистрСведенийСписок.НастройкаОтбора.Номенклатура.Доступность = Ложь;
	
	ФормаРегистра.Открыть();
	
КонецПроцедуры

Процедура СправочникСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Колонка = ЭлементыФормы.СправочникСписок.Колонки.ЦенаРеализации Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ФормаРегистра = РегистрыСведений.ЦеныРеализации.ПолучитьФормуСписка();
		
		ОтборПоНоменклатуре = ФормаРегистра.Отбор.Номенклатура;
		ОтборПоНоменклатуре.Установить(ЭлементыФормы.СправочникСписок.ТекущиеДанные.Ссылка);
		
		ФормаРегистра.ЭлементыФормы.РегистрСведенийСписок.НастройкаОтбора.Номенклатура.Доступность = Ложь;
		ФормаРегистра.Открыть();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействияФормыКаталогиСайта(Кнопка)
	
	ОткрытьФорму("Обработка.УправлениеНоменклатуройСайта.Форма.Форма");
	
КонецПроцедуры

Процедура ДействияФормыУстановитьАкции(Кнопка)
	
	ОткрытьФорму("Обработка.УстановкаАкцийПоНоменклатуре.Форма.Форма");
	
КонецПроцедуры

Процедура ДействияФормыОтчетПоДействующимАкциям(Кнопка)
	
	ОткрытьФорму("Отчет.ДействующиеАкцииПоТоварам.Форма.ФормаОтчета");
	
КонецПроцедуры

Процедура ДействияФормыПроблемыЭтикетокНаСайте(Кнопка)
	
	ОткрытьФорму("Справочник.Номенклатура.Форма.ПривязкиЭтикетокКСайту");
	
КонецПроцедуры

Процедура ДействияФормыУстановитьСпецАссортимент(Кнопка)
	
	ОткрытьФорму("Обработка.УстановкаАкцийПоНоменклатуре.Форма.ФормаУстановкиСпецАссортимента");
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ЭлементыФормы.ДействияФормы.Кнопки.АкцииПоТоварам.Кнопки.УстановитьСпецАссортимент.Доступность =
		УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.МожетРедактироватьУсловияСпецАссортимента, Ложь);
	
КонецПроцедуры

Процедура ДействияФормыОтчетПоДействующимАкциямПоАналогам(Кнопка)
	
	ОткрытьФорму("Отчет.ДействующиеАкцииПоТоварам_АнализПоАналогам.Форма.ФормаОтчета");
	
КонецПроцедуры

//+++АК sole 2018.05.15 ИП-00017737
Процедура ДействияФормыХарактеристика(Кнопка)
	
	ТекущаяНоменклатура = ЭтаФорма.ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	
	ОтборПоДокументу = Новый Структура();
	
	Если ТекущаяНоменклатура.ЭтоГруппа Тогда
		ОтборПоДокументу.Вставить("Группа", ТекущаяНоменклатура);
	Иначе
		ОтборПоДокументу.Вставить("НаименованиеТовара", ТекущаяНоменклатура.Наименование);
	КонецЕсли;

	ПараметрыФормы = Новый Структура("СформироватьПриОткрытии, Отбор", Истина, ОтборПоДокументу);
	ФормаОтчета = ПолучитьФорму("Отчет.АК_ОтчётПоСтатусамАктивностиХарактеристик.Форма.ФормаОтчета", ПараметрыФормы);
	НовыеПользовательскиеНастройки = Новый ПользовательскиеНастройкиКомпоновкиДанных();
	КомпоновщикНастроек = ФормаОтчета.Отчет.КомпоновщикНастроек;
	КомпоновщикНастроек.ЗагрузитьПользовательскиеНастройки(НовыеПользовательскиеНастройки);

	ФормаОтчета.Открыть();
	ФормаОтчета.СкомпоноватьРезультат();
	
КонецПроцедуры
