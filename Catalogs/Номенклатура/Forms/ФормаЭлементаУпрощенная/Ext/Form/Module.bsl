//+++АК MOSD +Форма 2018.11.21 ИП-00019907

#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ЭлементОтбора = Характеристики.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Владелец");
	ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование    = Истина;
	ЭлементОтбора.ПравоеЗначение   = Объект.Ссылка;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ЭлементОтбора = ЕИ.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("Владелец");
	ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование    = Истина;
	ЭлементОтбора.ПравоеЗначение   = Объект.Ссылка;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;

	ЦенаИзРегистра = ПолучитьЦенуНаДату(Объект.Ссылка, ТекущаяДата());
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СтараяФорма = ПолучитьСтаруюФорму();
	Если СтараяФорма.Открыта() Тогда
		Отказ = Истина;  
		СтараяФорма.Активизировать();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПолноеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	// Формирование списка выбора.
	Список = Новый СписокЗначений();
	Список.Добавить(Объект.Наименование);

	// Выбор из списка и обработка выбора.
	РезультатВыбора = ВыбратьИзСписка(Список, Элементы.НаименованиеПолное);

	Если НЕ РезультатВыбора = Неопределено Тогда
		Объект.НаименованиеПолное = РезультатВыбора.Значение;
		Модифицированность = Истина;		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ТипТовараПриИзмененииНаСервере()
	
	//Если Объект.ТипТовара = Перечисления.ТипыТоваров.Весовой Тогда
	//	Объект.БазоваяЕдиницаИзмерения = Константы.ЕдиницаВесовогоТовара.Получить();
	//Иначе
		//Если Объект.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Услуга Тогда
		//	Объект.БазоваяЕдиницаИзмерения = Константы.ЕдиницаУслуги.Получить();
		//Иначе
		//	Если НЕ Объект.Весовой Тогда
		//		Объект.БазоваяЕдиницаИзмерения = Константы.ЕдиницаШтучногоТовара.Получить();
		//	Иначе
		//		Объект.БазоваяЕдиницаИзмерения = Константы.ЕдиницаВесовогоТовара.Получить();
		//	КонецЕсли;
		//КонецЕсли;	
	//КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипТовараПриИзменении(Элемент)
	
	ТипТовараПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидТовараПриИзменении(Элемент)
	
	УстановитьВидимостьНастроекУчета();
	
	ОбновитьВидимостьТорговойМаркиКлиент();
	
КонецПроцедуры

&НаКлиенте
Процедура БезОстатковПриИзменении(Элемент)
	
	Предупреждение("При записи этого товара будет вызвана процедура удаления/возврата остатков на всех магазинах. Надеемся вы уверены в своих действиях");
	
КонецПроцедуры

&НаКлиенте
Процедура СкладируемаяПриИзменении(Элемент)

	Если Объект.Складируемая 
			И Объект.ВидСкладируемости = ПредопределенноеЗначение("Перечисление.ВидыСкладируемостиТовара.Нескладируемый") Тогда
		Объект.ВидСкладируемости = ПредопределенноеЗначение("Перечисление.ВидыСкладируемостиТовара.Складируемый");
	ИначеЕсли НЕ Объект.Складируемая 
			И НЕ Объект.ВидСкладируемости = ПредопределенноеЗначение("Перечисление.ВидыСкладируемостиТовара.Нескладируемый") Тогда
		Объект.ВидСкладируемости = ПредопределенноеЗначение("Перечисление.ВидыСкладируемостиТовара.Нескладируемый");
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ТорговаяМаркаПриИзменении(Элемент)
	Если Объект.ТорговаяМарка = ПредопределенноеЗначение("Справочник.ТорговыеМарки.Избенка") ТОгда
		Сообщить("Работа с торговой маркой ""Избенка"" не предусмотрена");
	КонецЕСли;
		
	ЗаполнитьПланограммы();
КонецПроцедуры

//+++АК CISA 2018.11.20 ИП-00020432
&НаСервереБезКонтекста
Функция ВернутьУровеньЭлемента(ГруппаНоменклатурыУРЗ)
	
	Если НЕ ГруппаНоменклатурыУРЗ.Пустая() Тогда
		Возврат ГруппаНоменклатурыУРЗ.Уровень();
	КонецЕсли;
	
КонецФункции

//+++АК CISA 2018.11.20 ИП-00020432
&НаКлиенте
Процедура ГруппаНоменклатурыУРЗПриИзменении(Элемент)
	
	Уровень = ВернутьУровеньЭлемента(Объект.ГруппаНоменклатурыУРЗ);
	Если Уровень > 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Доступен выбор только элементов первого уровня!";
		Сообщение.Поле = "Объект.ГруппаНоменклатурыУРЗ";
		Сообщение.УстановитьДанные(Объект);
		Сообщение.Сообщить();
		Объект.ГруппаНоменклатурыУРЗ = ПредопределенноеЗначение("Справочник.ГруппыНоменклатурыУРЗ.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОткрытьСтаруюФорму(Команда)
	
	СтараяФорма = ПолучитьСтаруюФорму();
	КопироватьДанныеФормы(Объект, СтараяФорма.Объект);
	
	СтараяФорма.Открыть();
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВосстановитьПредыдущуюГруппу(Команда)
	
	Объект.Родитель = Объект.ГруппаДоПомещенияВАрхив;
	
КонецПроцедуры

//+++АК mika 2018.07.27 ИП-00018955
&НаКлиенте
Процедура КомандаОпросыПокупателейТелеграм(Команда) 
	ОткрытьФорму("Отчет.ОпросыПокупателей.Форма.ФормаОтчета", Новый Структура("Номенклатура, ВидОтчета, СформироватьПриОткрытии", Объект.Ссылка, "Телеграм", Истина));
КонецПроцедуры

//+++АК mika 2018.07.27 ИП-00018955
&НаКлиенте
Процедура КомандаОпросыПокупателейУстные(Команда) 
	ОткрытьФорму("Отчет.ОпросыПокупателей.Форма.ФормаОтчета", Новый Структура("Номенклатура, ВидОтчета, СформироватьПриОткрытии", Объект.Ссылка, "Устный опрос", Истина));
КонецПроцедуры

&НаКлиенте
Процедура КомандаСвойстваНоменклатуры(Команда)
	
КонецПроцедуры

Процедура НазначитьОсновнуюХарактеристикуНаСервере()
	//Характеристика = Элементы.Характеристики.ТекущаяСтрока;
	//Отбор = Новый Структура;
	//Отбор.Вставить("Объект",Характеристика);
	//Отбор.Вставить("Свойство",ПланыВидовХарактеристик.СвойстваОбъектов.Производитель);
	//Отбор.Вставить("СтруктурнаяЕдиница",Справочники.СтруктурныеЕдиницы.ПустаяСсылка());
	//
	//Результат = РегистрыСведений.ЗначенияСвойствОбъектов.Получить(Отбор);
	//Поставщик = Результат.Значение;

	//ЭтоЦентр = ОмПроцедурыСетевогоОбмена.ЭтоСтруктурнаяЕдиницаГлавногоУзла();
	//Если НЕ ЭтоЦентр Тогда
	//	ВыполнитьЗаписьВРегистр(Объект.Ссылка,Характеристика,Поставщик,ПараметрыСеанса.ТекущаяСтруктурнаяЕдиница);
	//Иначе
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = "ВЫБРАТЬ
	//				   |	СтруктурныеЕдиницы.Ссылка
	//				   |ИЗ
	//				   |	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	//				   |ГДЕ
	//				   |	СтруктурныеЕдиницы.Формат = ЗНАЧЕНИЕ(Справочник.ФорматыМагазинов.Вкусвил)";
	//	Выборка = Запрос.Выполнить().Выбрать();
	//	Пока выборка.Следующий() Цикл
	//		ВыполнитьЗаписьВРегистр(Объект.Ссылка,Характеристика,Поставщик,выборка.Ссылка);
	//	КонецЦикла
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НазначитьОсновнуюХарактеристику(Команда)
	
	НазначитьОсновнуюХарактеристикуНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВсеХарактеристики(Команда)
	
	Элементы.ХарактеристикиПоказатьВсеХарактеристики.Пометка = НЕ Элементы.ХарактеристикиПоказатьВсеХарактеристики.Пометка;
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Характеристики.Отбор, "Неактивная", Ложь,,, НЕ Элементы.ХарактеристикиПоказатьВсеХарактеристики.Пометка);
	
КонецПроцедуры

Процедура НазначитьНомерПоНумераторуСервер(Характеристика)
	
	Справочники.Номенклатура.УстановитьНомерПоНумератору(Объект.Ссылка, Характеристика);
	
КонецПроцедуры

&НаКлиенте
Процедура НазначитьНомерПоНумератору(Команда)
	
	ТекДанные = Элементы.Характеристики.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		НазначитьНомерПоНумераторуСервер(ТекДанные.Ссылка);
		Элементы.Характеристики.Обновить();
	КонецЕсли;	
	
КонецПроцедуры


Процедура ОсвободитьНомерПоНумераторуНаСервере(Характеристика)
	
	Справочники.Номенклатура.ОсвободитьНомерПоНумератору(Объект.Ссылка, Характеристика);
	
КонецПроцедуры	

&НаКлиенте
Процедура ОсвободитьНомерПоНумератору(Команда)
	
	ТекДанные = Элементы.Характеристики.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Ответ = Вопрос("Вы уверены, что хотите освободить номер?", РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		ОсвободитьНомерПоНумераторуНаСервере(ТекДанные.Ссылка);
		Элементы.Характеристики.Обновить();
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПолучитьСтаруюФорму()
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("Ключ", Объект.Ссылка);
		
	Возврат ПолучитьФорму("Справочник.Номенклатура.Форма.ФормаЭлементаУпр", ПараметрыОткрытияФормы);
	
КонецФункции

Процедура УстановитьВидимостьНастроекУчета()

	Если Объект.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Материал Тогда
		
		Элементы.ГруппаПараметрыУчета.Видимость = Истина;
		Элементы.ГруппаМатериал.Видимость 		= Истина;
	   	Элементы.ГруппаОборудование.Видимость 	= Ложь;
		
	ИначеЕсли  Объект.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Оборудование Тогда
		
		Элементы.ГруппаПараметрыУчета.Видимость = Истина;
		Элементы.ГруппаМатериал.Видимость 		= Ложь;
	   	Элементы.ГруппаОборудование.Видимость 	= Истина;
		
	Иначе 
		Элементы.ГруппаПараметрыУчета.Видимость = Ложь;
	КонецЕсли;
	
	СчетУчетаОС = АК_ОсновныеСредства.ПолучитьОсновнойСчетУчета(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимостьТорговойМаркиКлиент() //+++АК mika 2018.02.13 ИП-00016863.02
	
	Если Объект.ВидНоменклатуры = ПредопределенноеЗначение("Перечисление.ВидыНоменклатуры.Товар") Тогда
		Элементы.ТорговаяМарка.Видимость = Истина;
	//+++АК CISA 2018.10.31 ИП-00020203
	//Иначе
	//	Элементы.ТорговаяМарка.Видимость = Ложь;
	//	Если ЗначениеЗаполнено(Объект.ТорговаяМарка) Тогда
	//		Объект.ТорговаяМарка = ПредопределенноеЗначение("Справочник.ТорговыеМарки.ПустаяСсылка");
	//	КонецЕсли;
	//---АК CISA
	КонецЕсли;
	
КонецПроцедуры

//+++АК KIRN 2018.03.05 ИП-00018058
&НаСервере
Процедура ЗаполнитьПланограммы()
	ТаблицаПланограммы.Очистить();
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Объект.Ссылка);
	Запрос.УстановитьПараметр("ТорговаяМарка", Объект.ТорговаяМарка);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Планограммы.Ссылка КАК Планограмма,
	|	ВЗ_Выкладка.МестоВыкладки КАК МестоВыкладки,
	|	ВЗ_Выкладка.ТоварВыведен
	|ИЗ
	|	Справочник.Планограммы КАК Планограммы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВыкладкаПланограммы КАК ВЗ_Выкладка
	|		ПО Планограммы.Ссылка = ВЗ_Выкладка.Планограмма
	|			И (ВЗ_Выкладка.Номенклатура = &Номенклатура)
	|			И (ВЗ_Выкладка.Планограмма.ТорговаяМарка = &ТорговаяМарка)
	|ГДЕ
	|	НЕ Планограммы.НеАктуальная
	|	И Планограммы.ТорговаяМарка = &ТорговаяМарка";
				   
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ТаблицаПланограммы.Добавить(), Выборка);
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьЦенуНаДату(спрНоменклатура, Дата = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", спрНоменклатура);
	//+++АК MOSD 2018.11.21 ИП-00019907	 
	//Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	//---АК MOSD 
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Цена
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	//+++АК MOSD 2018.11.21 ИП-00019907	 
	//|			&ТекДата,
	//---АК MOSD 
	|           ,
	|			ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|				И Номенклатура = &Номенклатура) КАК ЦеныНоменклатурыСрезПоследних";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Цена;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

#КонецОбласти