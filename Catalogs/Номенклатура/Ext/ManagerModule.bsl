
#Область ПрограммныйИнтерфейс

Функция ПолучитьКартинкуШтрихкода(ВнешняяКомпонента, ПараметрыШтрихкода) Экспорт
	
	// Зададим размер картинки
	ВнешняяКомпонента.Ширина = ПараметрыШтрихкода.Ширина;
	ВнешняяКомпонента.Высота = ПараметрыШтрихкода.Высота;
	
	// Разрешим компоненте самой определять тип кода
	ВнешняяКомпонента.АвтоТип = Ложь;
	ВнешняяКомпонента.ТипКода         = ПараметрыШтрихкода.ТипКода;
	ВнешняяКомпонента.ОтображатьТекст = ПараметрыШтрихкода.ОтображатьТекст;
	Попытка
		ВнешняяКомпонента.РазмерШрифта = ПараметрыШтрихкода.РазмерШрифта;
	Исключение
		
	КонецПопытки;
	
	// Или установим код EAN-13
	// ВнешняяКомпонента.ТипКода = 1;
	
	//  ТипКода число от 0 до 16
	// EAN8, EAN13, EAN128, Code39, Code128, Code16k, PDF417, Standart (Industrial) 2 of 5, Interleaved 2 of 5, Расширение Code39, Code93, ITF14, RSS14, CodaBar, EAN13 AddOn 2, EAN13 AddOn 5
	//
	// Тип смотрим в документации на внешнуюю компоненту
	
	// Если код содержит контрольный символ, обязательно указываем
	ВнешняяКомпонента.СодержитКС = СтрДлина(ПараметрыШтрихкода.Штрихкод) = 13;
	
	// Если отображать контрольный символ не нужно
	// ВнешняяКомпонента.ВидимостьКС = Ложь;
	
	// Формируем картинку штрихкода
	ВнешняяКомпонента.ЗначениеКода = ПараметрыШтрихкода.Штрихкод;
	
	// Если установленная нами ширина меньше минимально допустимой для этого штрихкода
	Если ВнешняяКомпонента.Ширина < ВнешняяКомпонента.МинимальнаяШиринаКода Тогда
		// Скорректируем ширину
		ВнешняяКомпонента.Ширина = ВнешняяКомпонента.МинимальнаяШиринаКода + 10;
	КонецЕсли;
	
	// Сформируем картинку
	ДвоичныеДанныеКартинки = ВнешняяКомпонента.ПолучитьШтрихкод();
	
	// Если картинка сформировалась
	Если ДвоичныеДанныеКартинки <> Неопределено Тогда
		// Формируем из двоичных данных
		Возврат Новый Картинка(ДвоичныеДанныеКартинки);
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПодключитьВнешнююКомпонентуПечатиШтрихкода() Экспорт
	
	// В зависимости от типа платформы подключим соответствующую внешнюю компоненту
	ПодключениеВыполнено = Неопределено;
	СистемнаяИнформация = Новый СистемнаяИнформация;
	Если СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86 Тогда
		ПодключениеВыполнено = ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаПечатиШтрихкодовWindows32", "КартинкаШтрихкода", ТипВнешнейКомпоненты.Native);
	ИначеЕсли СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86_64 Тогда
		ПодключениеВыполнено = ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаПечатиШтрихкодовWindows64", "КартинкаШтрихкода", ТипВнешнейКомпоненты.Native);
	КонецЕсли;
	
	// Создадим объект внешней компоненты
	Если ПодключениеВыполнено Тогда
		ВнешняяКомпонента = Новый("AddIn.КартинкаШтрихкода.Barcode");
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	// Если нет возможности рисовать
	Если НЕ ВнешняяКомпонента.ГрафикаУстановлена Тогда
		// То картинку сформировать не сможем
		Возврат Неопределено;
	Иначе
		
		// Установим основные параметры компоненты
		
		// Если в системе установлен шрифт Tahoma
		Если ВнешняяКомпонента.НайтиШрифт("Tahoma") = Истина Тогда
			// Выбираем его как шрифт для формирования картинки
			ВнешняяКомпонента.Шрифт = "Tahoma";
		Иначе
			
			// Шрифт Tahoma в системе отсутствует
			// Обойдем все доступные компоненте шрифты
			Для Сч = 0 По ВнешняяКомпонента.КоличествоШрифтов -1 Цикл
				// Получим очередной шрифт, доступный компоненте
				ТекущийШрифт = ВнешняяКомпонента.ШрифтПоИндексу(Сч);
				// Если шрифт доступен
				Если ТекущийШрифт <> Неопределено Тогда
					// Они и будет шрифтом для формирования штри-кода
					ВнешняяКомпонента.Шрифт = ТекущийШрифт;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		// Утановим размер шрифта
		ВнешняяКомпонента.РазмерШрифта = 12;
		
		Возврат ВнешняяКомпонента;
		
	КонецЕсли;
	
КонецФункции

Функция ПолучитьСчетаУчета(Номенклатура, НаДату = Неопределено) Экспорт
	
	//+++АК Susk (Суслин К.В.) ИП-00019275 2018.07.24 
	МассивНоменклатуры = Новый Массив();
	МассивНоменклатуры.Добавить(Номенклатура);
	
	СоответствиеНомСчета = ПолучитьСчетаУчетаОбъектов(МассивНоменклатуры, НаДату);
	
	Возврат СоответствиеНомСчета.Получить(Номенклатура);
	
	//следующий закоментированный код убрать в сентябре 2018, как откатаем универсальное получение счетов учета.
		
	#Область ЗакоментКод_ПолучитьСчетаУчета
	//СчетаУчета = Новый Структура;
	//
	//Если Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Материал Тогда
	//	
	//	Если Номенклатура.ВидМатериала = Перечисления.ВидыМатериалов.ГСМ Тогда
	//		
	//		СчетаУчета.Вставить("СчетУчета"		, ПланыСчетов.Финансовый.ГСМ);
	//        СчетаУчета.Вставить("СчетУчетаБУ"	, ПланыСчетов.Хозрасчетный.Топливо);
	//        СчетаУчета.Вставить("СчетУчетаНУ"	, ПланыСчетов.Хозрасчетный.Топливо);
	//		СчетаУчета.Вставить("СчетЗатрат"	, ПланыСчетов.Финансовый.ГСМ);
	//        СчетаУчета.Вставить("СчетЗатратБУ"	, ПланыСчетов.Хозрасчетный.Топливо);
	//        СчетаУчета.Вставить("СчетЗатратНУ"	, ПланыСчетов.Хозрасчетный.Топливо);

	//	ИначеЕсли Номенклатура.ВидМатериала = Перечисления.ВидыМатериалов.Спецодежда Тогда
	//		
	//		СчетаУчета.Вставить("СчетУчета"		, ПланыСчетов.Финансовый.Спецодежда);
	//        СчетаУчета.Вставить("СчетУчетаБУ"	, ПланыСчетов.Хозрасчетный.СпецоснасткаИСпецодеждаНаСкладе);
	//        СчетаУчета.Вставить("СчетУчетаНУ"	, ПланыСчетов.Хозрасчетный.СпецоснасткаИСпецодеждаНаСкладе);
	//		СчетаУчета.Вставить("СчетЗатрат"	, ПланыСчетов.Финансовый.Спецодежда);
	//        СчетаУчета.Вставить("СчетЗатратБУ"	, ПланыСчетов.Хозрасчетный.СпецоснасткаИСпецодеждаНаСкладе);
	//        СчетаУчета.Вставить("СчетЗатратНУ"	, ПланыСчетов.Хозрасчетный.СпецоснасткаИСпецодеждаНаСкладе);

	//	ИначеЕсли Номенклатура.ВидМатериала = Перечисления.ВидыМатериалов.Инвентарь Тогда
	//		
	//		СчетаУчета.Вставить("СчетУчета"		, ПланыСчетов.Финансовый.Инвентарь);
	//        СчетаУчета.Вставить("СчетУчетаБУ"	, ПланыСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежности);
	//        СчетаУчета.Вставить("СчетУчетаНУ"	, ПланыСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежности);
	//		СчетаУчета.Вставить("СчетЗатрат"	, ПланыСчетов.Финансовый.Инвентарь);
	//        СчетаУчета.Вставить("СчетЗатратБУ"	, ПланыСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежности);
	//        СчетаУчета.Вставить("СчетЗатратНУ"	, ПланыСчетов.Хозрасчетный.ИнвентарьИХозяйственныеПринадлежности);

	//	Иначе 
	//		
	//		СчетаУчета.Вставить("СчетУчета"		, ПланыСчетов.Финансовый.ПрочиеМатериалы);
	//        СчетаУчета.Вставить("СчетУчетаБУ"	, ПланыСчетов.Хозрасчетный.ПрочиеМатериалы);
	//        СчетаУчета.Вставить("СчетУчетаНУ"	, ПланыСчетов.Хозрасчетный.ПрочиеМатериалы);
	//		СчетаУчета.Вставить("СчетЗатрат"	, ПланыСчетов.Финансовый.ПрочиеМатериалы);
	//        СчетаУчета.Вставить("СчетЗатратБУ"	, ПланыСчетов.Хозрасчетный.ПрочиеМатериалы);
	//        СчетаУчета.Вставить("СчетЗатратНУ"	, ПланыСчетов.Хозрасчетный.ПрочиеМатериалы);
	//		
	//	КонецЕсли;
	//	
	//Иначе 
	//	
	//	СчетаУчета.Вставить("СчетУчета"		, ПланыСчетов.Финансовый.ПустаяСсылка());
	//    СчетаУчета.Вставить("СчетУчетаБУ"	, ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	//    СчетаУчета.Вставить("СчетУчетаНУ"	, ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	//	СчетаУчета.Вставить("СчетЗатрат"	, ПланыСчетов.Финансовый.ПустаяСсылка());
	//    СчетаУчета.Вставить("СчетЗатратБУ"	, ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	//    СчетаУчета.Вставить("СчетЗатратНУ"	, ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	//	
	//КонецЕсли;
	#КонецОбласти	
	//---АК Susk (Суслин К.В.) 
	
КонецФункции	

Функция Удалить_ПолучитьЦенник_75_39_ШтрихКод(Товар, Характеристика) Экспорт
	
	Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_Штрихкод"); 	
	
	ВнешняяКомпонента = ПодключитьВнешнююКомпонентуПечатиШтрихкода();
	
	НаименованиеДляЦенника = Товар.Наименование;  
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "   "	, " ");
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "  "	, " ");
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, " "	, Символы.ПС);
	ПозицияРазделителяДляЦенника = Товар.ПозицияРазделителяДляЦенника;
	
	Фишка = Товар.Фишка;  
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("УпаковкаДляЦенника"	, ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("УпаковкаДляЦенника"));
 	Запрос.УстановитьПараметр("Номенклатура"		, Товар.Ссылка);
	Запрос.УстановитьПараметр("ДатаЦен"				, ТекущаяДата());
	Запрос.УстановитьПараметр("Характеристика"		, Характеристика);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЗ_Запрос.Цена,
	|	ВЗ_Запрос.СрокГодности,
	|	ВЗ_Запрос.УпаковкаДляЦенника,
	|	ВЗ_Запрос.СтранаПроисхождения,
	|	ВЗ_Запрос.Номенклатура,
	|	ВЗ_Запрос.Характеристика,
	|	ЕСТЬNULL(ШтриховыеКоды.ШтрихКод, """") КАК ШтрихКод
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СрокГодности)
	|					ТОГДА ЗначенияСвойствОбъектов.Значение
	|				ИНАЧЕ """"
	|			КОНЕЦ) КАК СрокГодности,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ЗначенияСвойствОбъектов.Свойство = &УпаковкаДляЦенника
	|					ТОГДА ЗначенияСвойствОбъектов.Значение
	|				ИНАЧЕ """"
	|			КОНЕЦ) КАК УпаковкаДляЦенника,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СтранаПроисхождения)
	|					ТОГДА ЗначенияСвойствОбъектов.Значение
	|				ИНАЧЕ """"
	|			КОНЕЦ) КАК СтранаПроисхождения,
	|		СправочникНоменклатура.Ссылка КАК Номенклатура,
	|		ХарактеристикиНоменклатуры.Ссылка КАК Характеристика
	|	ИЗ
	|		Справочник.Номенклатура КАК СправочникНоменклатура
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|				ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|			ИЗ
	|				РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, Номенклатура = &Номенклатура) КАК ЦеныНоменклатурыСрезПоследних
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|						МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
	|					ИЗ
	|						РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|					ГДЕ
	|						ЦеныНоменклатуры.Номенклатура = &Номенклатура) КАК ВложенныйЗапрос
	|					ПО ЦеныНоменклатурыСрезПоследних.Период = ВложенныйЗапрос.Период) КАК ЦеныНоменклатурыСрезПоследних
	|			ПО СправочникНоменклатура.Ссылка = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|				ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов.Объект
	|			ПО СправочникНоменклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	|	ГДЕ
	|		СправочникНоменклатура.Ссылка = &Номенклатура
	|		И ХарактеристикиНоменклатуры.Ссылка = &Характеристика
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СправочникНоменклатура.Ссылка,
	|		ХарактеристикиНоменклатуры.Ссылка) КАК ВЗ_Запрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтриховыеКоды КАК ШтриховыеКоды
	|		ПО ВЗ_Запрос.Номенклатура = ШтриховыеКоды.Номенклатура
	|			И ВЗ_Запрос.Характеристика = ШтриховыеКоды.Характеристика";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СрокГодности 		= Выборка.СрокГодности;
		ВесОбъем			= Выборка.УпаковкаДляЦенника;
		Цена				= Выборка.Цена;
		СтранаПроисхождения = Выборка.СтранаПроисхождения;
		ШтрихКод 			= Выборка.ШтрихКод;
	КонецЕсли;
	
	//
	Область = Макет.ПолучитьОбласть("Область");
	
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника,"ё","е");
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника,"р","p");
	
	Если ПозицияРазделителяДляЦенника = 0 Тогда
		СтрокаНаименования1 = "";
		Для н = 0 по СтрЧислоСтрок(НаименованиеДляЦенника) Цикл
			СтрокаНаименования1 = СтрокаНаименования1 + СтрПолучитьСтроку(НаименованиеДляЦенника,н)+" ";
		КонецЦикла;
		СтрокаНаименования1 = СокрЛП(СтрокаНаименования1);
		
		Область.Параметры.СтрокаНаименования1 = ВРЕГ(СтрокаНаименования1);
	Иначе
		СтрокаНаименования1 = "";
		Для н = 0 по ПозицияРазделителяДляЦенника Цикл
			СтрокаНаименования1 = СтрокаНаименования1 + СтрПолучитьСтроку(НаименованиеДляЦенника,н)+" ";
		КонецЦикла;
		СтрокаНаименования1 = СокрЛП(СтрокаНаименования1);
		
		Область.Параметры.СтрокаНаименования1 = ВРЕГ(СтрокаНаименования1);
//		Результат.Вывести(Область);
		
		СтрокаНаименования2 = "";
		Для н = ПозицияРазделителяДляЦенника + 1 по СтрЧислоСтрок(НаименованиеДляЦенника) Цикл
			СтрокаНаименования2 = СтрокаНаименования2 + СтрПолучитьСтроку(НаименованиеДляЦенника, н) + " ";
		КонецЦикла;
		СтрокаНаименования2 = НРег(СокрЛП(СтрокаНаименования2));
		
		Область.Параметры.СтрокаНаименования2 = ВРЕГ(СтрокаНаименования2);
	КонецЕсли;
	Если Найти(ВесОбъем, "л") > 0 Тогда
		Область.Параметры.ВесОбъемЗаголовок = "Объем";
	ИначеЕсли Найти(ВесОбъем, "г") > 0 Тогда
		Область.Параметры.ВесОбъемЗаголовок = "Вес";
	Иначе
		Область.Параметры.ВесОбъемЗаголовок = "Вес/Объем";
	КонецЕсли;
		
	Область.Параметры.СрокГодности 	= СрокГодности;
	Область.Параметры.ВесОбъем 		= ВесОбъем;
	Область.Параметры.Цена 			= Формат(Цена, "ЧГ=0");
	
	//Если ЗначениеЗаполнено(Фишка) Тогда
	//	Область.Параметры.Подвал = Фишка;
	//Иначе
	Если ЗначениеЗаполнено(СтранаПроисхождения) Тогда
		Область.Параметры.СвойствоДляЦенника 			= "Страна:";
		Область.Параметры.ЗначениеСвойстваДляЦенника	= СтранаПроисхождения;
	Иначе
		//Область.Параметры.СвойствоДляЦенника 			= Характеристика.СвойствоДляЦенника+?(ЗначениеЗаполнено(Характеристика.СвойствоДляЦенника),":","");
		//Область.Параметры.ЗначениеСвойстваДляЦенника	= Характеристика.ЗначениеСвойстваДляЦенника;
	КонецЕсли;
		//Область.Параметры.Подвал = Характеристика.СвойствоДляЦенника+
		//	?(ЗначениеЗаполнено(Характеристика.СвойствоДляЦенника),":","")+
		//	Характеристика.ЗначениеСвойстваДляЦенника;
	//КонецЕсли;
	
	Если СтрДлина(ШтрихКод) < 13 Тогда
		
		КоличествоНедостающихСимволов = 12 - СтрДлина(ШтрихКод);
		Если КоличествоНедостающихСимволов > 0  Тогда
			ШтрихКод = ШтрихКод + Прав("00000000001", КоличествоНедостающихСимволов);
		КонецЕсли;
	КонецЕсли;
	Если СтрДлина(ШтрихКод) = 12 Тогда
		ШтрихКод = ШтрихКод + ВнешниеДанные.КонтрольныйСимволEAN(ШтрихКод, 13);
	КОнецЕсли;
	
	//
	Рисунок = Область.Рисунки["ШтрихКод"];
	
	Параметры = Новый Структура;
	Параметры.Вставить("Ширина"			, Рисунок.Ширина);
	Параметры.Вставить("Высота"			, Рисунок.Высота);
	Параметры.Вставить("ТипКода"		, 1);
	Параметры.Вставить("ОтображатьТекст", Истина);
	Параметры.Вставить("РазмерШрифта"	, 14);
	Параметры.Вставить("Штрихкод"		, Штрихкод);
	
	Рисунок.Картинка = ОбщегоНазначенияКлиентСервер.ПолучитьКартинкуШтрихкода(ВнешняяКомпонента, Параметры);

	//
	Возврат Область;
	
КонецФункции

Функция Удалить_ПолучитьЦенник_75_39(Товар, Характеристика) Экспорт
	
	Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник75_39"); 	
	
	
	НаименованиеДляЦенника = Товар.Наименование;  
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "   "	, " ");
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "  "	, " ");
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, " "	, Символы.ПС);
	ПозицияРазделителяДляЦенника = Товар.ПозицияРазделителяДляЦенника;
	
	Фишка = Товар.Фишка;  
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("УпаковкаДляЦенника"	, ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("УпаковкаДляЦенника"));
 	Запрос.УстановитьПараметр("Номенклатура"		, Товар.Ссылка);
	Запрос.УстановитьПараметр("ДатаЦен"				, ТекущаяДата());
	Запрос.УстановитьПараметр("Характеристика"		, Характеристика);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СрокГодности)
	|				ТОГДА ЗначенияСвойствОбъектов.Значение
	|			ИНАЧЕ """"
	|		КОНЕЦ) КАК СрокГодности,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗначенияСвойствОбъектов.Свойство = &УпаковкаДляЦенника
	|				ТОГДА ЗначенияСвойствОбъектов.Значение
	|			ИНАЧЕ """"
	|		КОНЕЦ) КАК УпаковкаДляЦенника,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СтранаПроисхождения)
	|				ТОГДА ЗначенияСвойствОбъектов.Значение
	|			ИНАЧЕ """"
	|		КОНЕЦ) КАК СтранаПроисхождения
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|			ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|		ИЗ
	|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(, Номенклатура = &Номенклатура) КАК ЦеныНоменклатурыСрезПоследних
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					МАКСИМУМ(ЦеныНоменклатуры.Период) КАК Период
	|				ИЗ
	|					РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	|				ГДЕ
	|					ЦеныНоменклатуры.Номенклатура = &Номенклатура) КАК ВложенныйЗапрос
	|				ПО ЦеныНоменклатурыСрезПоследних.Период = ВложенныйЗапрос.Период) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО СправочникНоменклатура.Ссылка = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|			ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов.Объект
	|		ПО СправочникНоменклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	|ГДЕ
	|	СправочникНоменклатура.Ссылка = &Номенклатура
	|	И ХарактеристикиНоменклатуры.Ссылка = &Характеристика";
	
	//
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		СрокГодности 		= Выборка.СрокГодности;
		ВесОбъем			= Выборка.УпаковкаДляЦенника;
		Цена				= Выборка.Цена;
		СтранаПроисхождения = Выборка.СтранаПроисхождения;
	КонецЕсли;
	
	//
	Область = Макет.ПолучитьОбласть("Область");
	
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "ё", "е");
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "р", "p");
	
	Если ПозицияРазделителяДляЦенника = 0 Тогда
		СтрокаНаименования1 = "";
		Для н = 0 по СтрЧислоСтрок(НаименованиеДляЦенника) Цикл
			СтрокаНаименования1 = СтрокаНаименования1 + СтрПолучитьСтроку(НаименованиеДляЦенника, н) + " ";
		КонецЦикла;
		СтрокаНаименования1 = СокрЛП(СтрокаНаименования1);
		
		Область.Параметры.СтрокаНаименования1 = ВРЕГ(СтрокаНаименования1);
	Иначе
		СтрокаНаименования1 = "";
		Для н = 0 по ПозицияРазделителяДляЦенника Цикл
			СтрокаНаименования1 = СтрокаНаименования1 + СтрПолучитьСтроку(НаименованиеДляЦенника, н) + " ";
		КонецЦикла;
		СтрокаНаименования1 = СокрЛП(СтрокаНаименования1);
		
		Область.Параметры.СтрокаНаименования1 = ВРЕГ(СтрокаНаименования1);
//		Результат.Вывести(Область);
		
		СтрокаНаименования2 = "";
		Для н = ПозицияРазделителяДляЦенника + 1 по СтрЧислоСтрок(НаименованиеДляЦенника) Цикл
			СтрокаНаименования2 = СтрокаНаименования2 + СтрПолучитьСтроку(НаименованиеДляЦенника, н) + " ";
		КонецЦикла;
		СтрокаНаименования2 = НРег(СокрЛП(СтрокаНаименования2));
		
		Область.Параметры.СтрокаНаименования2 = ВРЕГ(СтрокаНаименования2);
	КонецЕсли;
	Если Найти(ВесОбъем, "л") > 0 Тогда
		Область.Параметры.ВесОбъемЗаголовок = "Объем";
	ИначеЕсли Найти(ВесОбъем, "г") > 0 Тогда
		Область.Параметры.ВесОбъемЗаголовок = "Вес";
	Иначе
		Область.Параметры.ВесОбъемЗаголовок = "Вес/Объем";
	КонецЕсли;
		
	Область.Параметры.СрокГодности 	= СрокГодности;
	Область.Параметры.ВесОбъем 		= ВесОбъем;
	Область.Параметры.Цена 			= Формат(Цена,"ЧГ=0");
	
	//Если ЗначениеЗаполнено(Фишка) Тогда
	//	Область.Параметры.Подвал = Фишка;
	//Иначе
	Если ЗначениеЗаполнено(СтранаПроисхождения) Тогда
		Область.Параметры.СвойствоДляЦенника 			= "Страна:";
		Область.Параметры.ЗначениеСвойстваДляЦенника	= СтранаПроисхождения;
	Иначе
		//Область.Параметры.СвойствоДляЦенника 			= Характеристика.СвойствоДляЦенника+?(ЗначениеЗаполнено(Характеристика.СвойствоДляЦенника),":","");
		//Область.Параметры.ЗначениеСвойстваДляЦенника	= Характеристика.ЗначениеСвойстваДляЦенника;
	КонецЕсли;
		//Область.Параметры.Подвал = Характеристика.СвойствоДляЦенника+
		//	?(ЗначениеЗаполнено(Характеристика.СвойствоДляЦенника),":","")+
		//	Характеристика.ЗначениеСвойстваДляЦенника;
	//КонецЕсли;
	
	//
	Возврат Область;
	
КонецФункции

Функция ПолучитьЦенник_80_60_(Товар, Характеристика, Знач Фишка = Неопределено, Знач НаименованиеДляЦенника = Неопределено,
								Знач ПозицияРазделителяДляЦенника = Неопределено, СтруктураВыведенногоЦенника = Неопределено,
								ПечататьДробныйЦенник = Ложь, Организация = "ООО ""Вкусвилл""", ДляИзбенок = Ложь) Экспорт
	
	Если НЕ ДляИзбенок Тогда			
		Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_80_60"); 	
	Иначе
		Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_80_60_Избенка"); 	
	КонецЕсли;	
	
	СтруктураВыведенногоЦенника = Новый Структура("НаименованиеТовара, Цена, Страна, СрокГодности, Фишка, ЦенаПоАкции, НазваниеАкции, КомментарийАкции, Вес");
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("УпаковкаДляЦенника"	, ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("УпаковкаДляЦенника"));
 	Запрос.УстановитьПараметр("Номенклатура"		, Товар);
	Запрос.УстановитьПараметр("ДатаЦен"				, ТекущаяДата());
	Запрос.УстановитьПараметр("Характеристика"		, Характеристика);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СрокГодности)
	|				ТОГДА ЗначенияСвойствОбъектов.Значение
	|			ИНАЧЕ """"
	|		КОНЕЦ) КАК СрокГодности,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗначенияСвойствОбъектов.Свойство = &УпаковкаДляЦенника
	|				ТОГДА ЗначенияСвойствОбъектов.Значение
	|			ИНАЧЕ """"
	|		КОНЕЦ) КАК УпаковкаДляЦенника,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СтранаПроисхождения)
	|				ТОГДА ЗначенияСвойствОбъектов.Значение
	|			ИНАЧЕ """"
	|		КОНЕЦ) КАК СтранаПроисхождения,
	|	МАКСИМУМ(ХарактеристикиНоменклатуры.СрокГодности) КАК СрокГодностиНов,
	|	МАКСИМУМ(ЕСТЬNULL(ХарактеристикиНоменклатуры.ТипСрокаГодности.ПараметрыПрописиНаРусском, """")) КАК ТипСрокаГодностиПараметрыПрописиНаРусском,
	|	МАКСИМУМ(ЕСТЬNULL(ХарактеристикиНоменклатуры.СрокГодностиНеограничен, ЛОЖЬ)) КАК СрокНеограничен
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|			ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|		ИЗ
	|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|					&ДатаЦен,
	|					Номенклатура = &Номенклатура
	|						И ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|						И ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.ОсновнойТипЦенПродаж)) КАК ЦеныНоменклатурыСрезПоследних) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО СправочникНоменклатура.Ссылка = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|			ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов.Объект
	|		ПО СправочникНоменклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	|ГДЕ
	|	СправочникНоменклатура.Ссылка = &Номенклатура
	|	И ХарактеристикиНоменклатуры.Ссылка = &Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Наименование,
	|	Номенклатура.ПозицияРазделителяДляЦенника,
	|	Номенклатура.Фишка,
	|	Номенклатура.ДатаНачалаВыводаНаСинийЦенник,
	|	Номенклатура.ДатаОкончанияВыводаНаСинийЦенник,
	|	Номенклатура.ТекстВместоФишки
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтриховыеКоды.Номенклатура,
	|	ШтриховыеКоды.Характеристика,
	|	ШтриховыеКоды.ЛожныйШтрихКод
	|ИЗ
	|	РегистрСведений.ШтриховыеКоды КАК ШтриховыеКоды
	|ГДЕ
	|	ШтриховыеКоды.ЛожныйШтрихКод <> """"";
					
	Результаты = Запрос.ВыполнитьПакет();
	
	//
	Выборка = Результаты[0].Выбрать();
	Если Выборка.Следующий() Тогда
		//СрокГодности 	= Выборка.СрокГодности;
		Если ЗначениеЗаполнено(Выборка.СрокГодностиНов) Тогда
			СрокГодности 	= ЧислоПрописью(Выборка.СрокГодностиНов, "НД=Ложь", Выборка.ТипСрокаГодностиПараметрыПрописиНаРусском);
			СрокГодности 	= СтрЗаменить(СрокГодности, " ", Символы.ПС);
			Если СтрЧислоСтрок(СрокГодности) > 0 Тогда
				СрокГодности = Формат(Выборка.СрокГодностиНов, "ЧГ=0") + " " + СтрПолучитьСтроку(СрокГодности, СтрЧислоСтрок(СрокГодности));
			КонецЕсли;
		КонецЕсли;	
		Если Выборка.СрокНеограничен = Истина Тогда
			СрокГодности = "Не ограничен";
		КонецЕсли;
		ВесОбъем			= Выборка.УпаковкаДляЦенника;
		Цена				= Выборка.Цена;
		СтранаПроисхождения = Выборка.СтранаПроисхождения;
	КонецЕсли;
	
	ВыборкаТов = Результаты[1].Выбрать();
	Если ВыборкаТов.Следующий() Тогда
		Если Фишка = Неопределено Тогда
			Фишка 					= ВыборкаТов.Фишка;
		КонецЕсли;
		Если НачалоДня(ВыборкаТов.ДатаНачалаВыводаНаСинийЦенник) <= ТекущаяДата()
			И КонецДня(ВыборкаТов.ДатаОкончанияВыводаНаСинийЦенник) >= ТекущаяДата() Тогда
			Если ЗначениеЗаполнено(ВыборкаТов.ТекстВместоФишки) Тогда
				Фишка = СокрЛП(ВыборкаТов.ТекстВместоФишки);
			КонецЕсли;	
		КонецЕсли;
		Если НаименованиеДляЦенника = Неопределено Тогда
			НаименованиеДляЦенника = ВыборкаТов.Наименование;
		КонецЕсли;
		Если ПозицияРазделителяДляЦенника = Неопределено Тогда
			ПозицияРазделителяДляЦенника = ВыборкаТов.ПозицияРазделителяДляЦенника;
		КонецЕсли;	
	КонецЕсли;
	
	ТабЛожные = Результаты[2].Выгрузить();
	
	СтруктураВыведенногоЦенника.НаименованиеТовара = НаименованиеДляЦенника;
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "   "	, " ");
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "  "	, " ");
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, " "	, Символы.ПС);
	
	
	//				
	Область = Макет.ПолучитьОбласть("Область");
	
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "ё", "е");
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "р", "p");
	
	Если ПозицияРазделителяДляЦенника = 0 Тогда
		СтрокаНаименования1 = "";
		Для н = 0 по СтрЧислоСтрок(НаименованиеДляЦенника) Цикл
			СтрокаНаименования1 = СтрокаНаименования1 + СтрПолучитьСтроку(НаименованиеДляЦенника, н) + " ";
		КонецЦикла;
		СтрокаНаименования1 = СокрЛП(СтрокаНаименования1);
		
		Область.Параметры.СтрокаНаименования1 = ВРЕГ(СтрокаНаименования1);
	Иначе
		СтрокаНаименования1 = "";
		Для н = 0 по ПозицияРазделителяДляЦенника Цикл
			СтрокаНаименования1 = СтрокаНаименования1 + СтрПолучитьСтроку(НаименованиеДляЦенника, н) + " ";
		КонецЦикла;
		СтрокаНаименования1 = СокрЛП(СтрокаНаименования1);
		
		Область.Параметры.СтрокаНаименования1 = ВРЕГ(СтрокаНаименования1);
//		Результат.Вывести(Область);
		
		СтрокаНаименования2 = "";
		Для н = ПозицияРазделителяДляЦенника + 1 по СтрЧислоСтрок(НаименованиеДляЦенника) Цикл
			СтрокаНаименования2 = СтрокаНаименования2 + СтрПолучитьСтроку(НаименованиеДляЦенника, н) + " ";
		КонецЦикла;
		СтрокаНаименования2 = НРег(СокрЛП(СтрокаНаименования2));
		
		Область.Параметры.СтрокаНаименования2 = ВРЕГ(СтрокаНаименования2);
	КонецЕсли;
	Если Найти(ВесОбъем, "л") > 0 Тогда
		Область.Параметры.ВесОбъемЗаголовок = "Объем";
	ИначеЕсли Найти(ВесОбъем, "г") > 0 Тогда
		Область.Параметры.ВесОбъемЗаголовок = "Вес";
	Иначе
		Область.Параметры.ВесОбъемЗаголовок = "Вес/Объем";
	КонецЕсли;
	
	//Область.Параметры.Орг 	= Организация;
	Область.Параметры.Орг 	= "ООО ""Вкусвилл""";
	Область.Параметры.СрокГодности 	= СрокГодности;
	СтруктураВыведенногоЦенника.СрокГодности = СрокГодности;
	Область.Параметры.Страна 		= СтранаПроисхождения;
	СтруктураВыведенногоЦенника.Страна = СтранаПроисхождения;
	СтрокиДробныйЦенник = ТабЛожные.НайтиСтроки(Новый Структура("Номенклатура, Характеристика", Товар, Характеристика));
	Если СтрокиДробныйЦенник.Количество() > 0
			И ПечататьДробныйЦенник Тогда
		ВесВГраммах = Прав(СокрЛП(СтрокиДробныйЦенник[0].ЛожныйШтрихКод), 5);
		ВесВГраммах = Лев(ВесВГраммах, 4);
		Пока Лев(ВесВГраммах, 1) = "0" Цикл
			ВесВГраммах = Сред(ВесВГраммах, 2);
		КонецЦикла;
		Попытка
			Коэф = Число(ВесВГраммах) / 1000;
			ЦенаДробное = Окр(Цена * Коэф, 0);
			Область.Параметры.Цена 		= Формат(ЦенаДробное, "ЧГ=0");
			Область.Параметры.ВесОбъем 	= ВесВГраммах + " г";
		Исключение	
			Область.Параметры.Цена 		= Формат(Цена, "ЧГ=0");
			Область.Параметры.ВесОбъем 	= ВесОбъем;
		КонецПопытки;
	Иначе	
		Область.Параметры.Цена 			= Формат(Цена, "ЧГ=0");
		Область.Параметры.ВесОбъем 		= ВесОбъем;
	КонецЕсли;	
	СтруктураВыведенногоЦенника.Вес 	= ВесОбъем;
	СтруктураВыведенногоЦенника.Цена 	= Цена;
	
	Область.Параметры.Фишка = Фишка;
	СтруктураВыведенногоЦенника.Фишка = Фишка;
	
	//Если СтрДлина(Фишка) > 30 Тогда
	//	Область.Область(10, 2, 10, 3).Шрифт = Новый Шрифт(Область.Область(10, 2, 10, 3).Шрифт,, 10);
	//КонецЕсли;	
	
	Возврат Область;
	
КонецФункции
Функция ПолучитьЦенник_80_60(Товар, Характеристика, Знач Фишка = Неопределено, Знач НаименованиеДляЦенника = Неопределено,
								Знач ПозицияРазделителяДляЦенника = Неопределено, СтруктураВыведенногоЦенника = Неопределено,
								ПечататьДробныйЦенник = Ложь, Организация = "ООО ""Вкусвилл""", ДляИзбенок = Ложь,
								СРейтингом = Ложь, ПредподготовленныеПоляСтруктура = Неопределено) Экспорт
								
	СтруктураВыведенногоЦенника = Новый Структура("НаименованиеТовара, Цена, Страна, СрокГодности, Фишка, ЦенаПоАкции, НазваниеАкции, КомментарийАкции, Вес, ФишкаКартинка1, ФишкаКартинка2, Рейтинг");
	
	//+++АК MIND 2017.12.06 пришло время оптимизации, так как теперь печать могут вызывать очень массово, то запросы здесь получаются циклические и совершенно ни к чему
	//добавляю в параметры процедуры переменную ,в которую можно передать структуру, и если она передана, то процедура считает что все в нее передано и запросом ничего получать не нужно
	Если ТипЗнч(ПредподготовленныеПоляСтруктура) = Тип("Структура") Тогда
		СрокГодности 	= ПредподготовленныеПоляСтруктура.СрокГодности;
		ВесОбъем			= ПредподготовленныеПоляСтруктура.УпаковкаДляЦенника;
		Цена				= ПредподготовленныеПоляСтруктура.Цена;
		СтранаПроисхождения = ПредподготовленныеПоляСтруктура.СтранаПроисхождения;
		
		Фишка1 = "";
		Фишка2 = "";
		ДопТекст = "";
		Пиктограмма1 = Неопределено;
		Пиктограмма2 = Неопределено;
		СтруктураВыведенногоЦенника.Вставить("ФишкаКартинка1", ПредподготовленныеПоляСтруктура.ФишкаКратко1);
		СтруктураВыведенногоЦенника.Вставить("ФишкаКартинка2", ПредподготовленныеПоляСтруктура.ФишкаКратко2);
		Если НачалоДня(ПредподготовленныеПоляСтруктура.ДатаНачалаВыводаНаСинийЦенник) <= ТекущаяДата()
			И КонецДня(ПредподготовленныеПоляСтруктура.ДатаОкончанияВыводаНаСинийЦенник) >= ТекущаяДата() Тогда
			Если ЗначениеЗаполнено(ПредподготовленныеПоляСтруктура.ТекстВместоФишки) Тогда
				ДопТекст = СокрЛП(ПредподготовленныеПоляСтруктура.ТекстВместоФишки);
			КонецЕсли;	
		КонецЕсли;
		Если НаименованиеДляЦенника = Неопределено Тогда
			НаименованиеДляЦенника = ПредподготовленныеПоляСтруктура.Наименование;
		КонецЕсли;
		Если ПозицияРазделителяДляЦенника = Неопределено Тогда
			ПозицияРазделителяДляЦенника = ПредподготовленныеПоляСтруктура.ПозицияРазделителяДляЦенника;
		КонецЕсли;
		Фишка1 = СокрЛП(ПредподготовленныеПоляСтруктура.ФишкаНаименование1);
		Фишка2 = СокрЛП(ПредподготовленныеПоляСтруктура.ФишкаНаименование2);
		Если ТипЗнч(ПредподготовленныеПоляСтруктура.ФишкаПиктограмма1) = Тип("ХранилищеЗначения") Тогда
			Пикт = ПредподготовленныеПоляСтруктура.ФишкаПиктограмма1.Получить();
			Если ТипЗнч(Пикт) = Тип("Картинка") Тогда
				Пиктограмма1 = Пикт;
			КонецЕсли;	
		КонецЕсли;
		Если ТипЗнч(ПредподготовленныеПоляСтруктура.ФишкаПиктограмма2) = Тип("ХранилищеЗначения") Тогда
			Пикт = ПредподготовленныеПоляСтруктура.ФишкаПиктограмма2.Получить();
			Если ТипЗнч(Пикт) = Тип("Картинка") Тогда
				Пиктограмма2 = Пикт;
			КонецЕсли;	
		КонецЕсли;
		
		Если Пиктограмма1 = Неопределено
			И Пиктограмма2 = Неопределено Тогда
			Если НЕ ЗначениеЗаполнено(ДопТекст) Тогда
				//+++АК KIRN 2018.05.06  
				Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_НовыйБезФишек"+?(СРейтингом,"_р",""));
				//Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_НовыйБезФишек");
				//---АК KIRN 
			Иначе
				//+++АК KIRN 2018.05.06  
				Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_Новый1Фишка"+?(СРейтингом,"_р",""));
				//Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_Новый1Фишка");
				//---АК KIRN 
			КонецЕсли;
		ИначеЕсли Пиктограмма1 <> Неопределено
			И Пиктограмма2 = Неопределено Тогда	
			//+++АК KIRN 2018.05.06  
			Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_Новый1Фишка"+?(СРейтингом,"_р",""));
			//Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_Новый1Фишка");
			//---АК KIRN 
		Иначе
			//+++АК KIRN 2018.05.06  
			 Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_Новый"+?(СРейтингом,"_р",""));
			//Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_Новый");
			//---АК KIRN 
		КонецЕсли;	
		
		Область = Макет.ПолучитьОбласть("Область");
		Если Пиктограмма1 = Неопределено
			И Пиктограмма2 = Неопределено
			И ЗначениеЗаполнено(ДопТекст) Тогда
			Область.Рисунки.Удалить(Область.Рисунки.КартинкаФишка1);
		КонецЕсли;	
		
		Если Пиктограмма1 <> Неопределено Тогда
			Область.Рисунки.КартинкаФишка1.Картинка = Пиктограмма1;
			Область.Параметры.Фишка1 = Фишка1;
		КонецЕсли;
		Если Пиктограмма2 <> Неопределено Тогда
			Область.Рисунки.КартинкаФишка2.Картинка = Пиктограмма2;
			Область.Параметры.Фишка2 = Фишка2;
		КонецЕсли;
		
		Рейтинг = 0;
		Если СРейтингом Тогда
			Рейтинг = ПредподготовленныеПоляСтруктура.Рейтинг;
		КонецЕсли;
		СтруктураВыведенногоЦенника.Рейтинг = Рейтинг;
		
		СтруктураВыведенногоЦенника.НаименованиеТовара = НаименованиеДляЦенника;
		НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "   "	, " ");
		НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "  "	, " ");
		НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, " "	, Символы.ПС);
	Иначе	
		//
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("УпаковкаДляЦенника"	, ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("УпаковкаДляЦенника"));
	 	Запрос.УстановитьПараметр("Номенклатура"		, Товар);
		Запрос.УстановитьПараметр("ДатаЦен"				, ТекущаяДата());
		Запрос.УстановитьПараметр("Характеристика"		, Характеристика);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СрокГодности)
		|				ТОГДА ЗначенияСвойствОбъектов.Значение
		|			ИНАЧЕ """"
		|		КОНЕЦ) КАК СрокГодности,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ЗначенияСвойствОбъектов.Свойство = &УпаковкаДляЦенника
		|				ТОГДА ЗначенияСвойствОбъектов.Значение
		|			ИНАЧЕ """"
		|		КОНЕЦ) КАК УпаковкаДляЦенника,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СтранаПроисхождения)
		|				ТОГДА ЗначенияСвойствОбъектов.Значение
		|			ИНАЧЕ """"
		|		КОНЕЦ) КАК СтранаПроисхождения,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ХарактеристикиНоменклатуры.СрокГодности_ПослеИзготовления > 0
		|				ТОГДА ХарактеристикиНоменклатуры.СрокГодности_ПослеИзготовления
		|			ИНАЧЕ ХарактеристикиНоменклатуры.СрокГодности
		|		КОНЕЦ) КАК СрокГодностиНов,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ХарактеристикиНоменклатуры.СрокГодности_ПослеИзготовления > 0
		|				ТОГДА ЕСТЬNULL(ХарактеристикиНоменклатуры.ТипСрокаГодности_ПослеИзготовления.ПараметрыПрописиНаРусском, """")
		|			ИНАЧЕ ЕСТЬNULL(ХарактеристикиНоменклатуры.ТипСрокаГодности.ПараметрыПрописиНаРусском, """")
		|		КОНЕЦ) КАК ТипСрокаГодностиПараметрыПрописиНаРусском,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ХарактеристикиНоменклатуры.СрокГодности_ПослеИзготовления > 0
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ЕСТЬNULL(ХарактеристикиНоменклатуры.СрокГодностиНеограничен, ЛОЖЬ)
		|		КОНЕЦ) КАК СрокНеограничен
		|ИЗ
		|	Справочник.Номенклатура КАК СправочникНоменклатура
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|			ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
		|		ИЗ
		|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|					&ДатаЦен,
		|					Номенклатура = &Номенклатура
		|						И ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
		|						И ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.ОсновнойТипЦенПродаж)) КАК ЦеныНоменклатурыСрезПоследних) КАК ЦеныНоменклатурыСрезПоследних
		|		ПО СправочникНоменклатура.Ссылка = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|			ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов.Объект
		|		ПО СправочникНоменклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
		|ГДЕ
		|	СправочникНоменклатура.Ссылка = &Номенклатура
		|	И ХарактеристикиНоменклатуры.Ссылка = &Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Номенклатура.Наименование,
		|	Номенклатура.ПозицияРазделителяДляЦенника,
		|	Номенклатура.Фишка,
		|	Номенклатура.ДатаНачалаВыводаНаСинийЦенник,
		|	Номенклатура.ДатаОкончанияВыводаНаСинийЦенник,
		|	Номенклатура.ТекстВместоФишки,
		|	ВЗ_Фишка1.ФишкаНаименование КАК ФишкаНаименование1,
		|	ВЗ_Фишка1.ФишкаПиктограмма КАК ФишкаПиктограмма1,
		|	ВЗ_Фишка2.ФишкаНаименование КАК ФишкаНаименование2,
		|	ВЗ_Фишка2.ФишкаПиктограмма КАК ФишкаПиктограмма2,
		|	ЕСТЬNULL(ВЗ_Фишка1.Фишка, ЗНАЧЕНИЕ(Справочник.ФишкиКратко.ПустаяСсылка)) КАК ФишкаКратко1,
		|	ЕСТЬNULL(ВЗ_Фишка2.Фишка, ЗНАЧЕНИЕ(Справочник.ФишкиКратко.ПустаяСсылка)) КАК ФишкаКратко2
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			НоменклатураФишкиНаЦенник.Ссылка КАК Ссылка,
		|			НоменклатураФишкиНаЦенник.Фишка.Наименование КАК ФишкаНаименование,
		|			НоменклатураФишкиНаЦенник.Фишка.Пиктограмма КАК ФишкаПиктограмма,
		|			НоменклатураФишкиНаЦенник.Фишка КАК Фишка
		|		ИЗ
		|			Справочник.Номенклатура.ФишкиНаЦенник КАК НоменклатураФишкиНаЦенник
		|		ГДЕ
		|			НоменклатураФишкиНаЦенник.Ссылка = &Номенклатура
		|			И НоменклатураФишкиНаЦенник.НомерСтроки = 1) КАК ВЗ_Фишка1
		|		ПО Номенклатура.Ссылка = ВЗ_Фишка1.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			НоменклатураФишкиНаЦенник.Ссылка КАК Ссылка,
		|			НоменклатураФишкиНаЦенник.Фишка.Наименование КАК ФишкаНаименование,
		|			НоменклатураФишкиНаЦенник.Фишка.Пиктограмма КАК ФишкаПиктограмма,
		|			НоменклатураФишкиНаЦенник.Фишка КАК Фишка
		|		ИЗ
		|			Справочник.Номенклатура.ФишкиНаЦенник КАК НоменклатураФишкиНаЦенник
		|		ГДЕ
		|			НоменклатураФишкиНаЦенник.Ссылка = &Номенклатура
		|			И НоменклатураФишкиНаЦенник.НомерСтроки = 2) КАК ВЗ_Фишка2
		|		ПО (Номенклатура.Ссылка = ВЗ_Фишка1.Ссылка)
		|ГДЕ
		|	Номенклатура.Ссылка = &Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ШтриховыеКоды.Номенклатура,
		|	ШтриховыеКоды.Характеристика,
		|	ШтриховыеКоды.ЛожныйШтрихКод
		|ИЗ
		|	РегистрСведений.ШтриховыеКоды КАК ШтриховыеКоды
		|ГДЕ
		|	ШтриховыеКоды.ЛожныйШтрихКод <> """"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		//+++АК KIRN 2018.04.26 ИП-00018243 
		|Выбрать ТоварыСРейтингом.Рейтинг КАК Рейтинг
		|ИЗ
		|	РегистрСведений.ТОварыСрейтингом.СрезПоследних(, Номенклатура = &Номенклатура) КАК ТоварыСРейтингом
		//|
		//|ВЫБРАТЬ
		//|	ЕСТЬNULL(РейтингиТоваров.Рейтинг, ВЗ_Общая.Рейтинг) КАК Рейтинг
		//|ИЗ
		//|	РегистрСведений.РейтингиТоваров КАК РейтингиТоваров
		//|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		//|			РейтингиТоваров.Рейтинг КАК Рейтинг
		//|		ИЗ
		//|			РегистрСведений.РейтингиТоваров КАК РейтингиТоваров
		//|		ГДЕ
		//|			РейтингиТоваров.Номенклатура = &Номенклатура
		//|			И РейтингиТоваров.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ВЗ_Общая
		//|		ПО (ИСТИНА)
		//|ГДЕ
		//|	РейтингиТоваров.Номенклатура = &Номенклатура
		//|	И РейтингиТоваров.Характеристика = &Характеристика
		|";
						
		Результаты = Запрос.ВыполнитьПакет();
		
		//
		Выборка = Результаты[0].Выбрать();
		Если Выборка.Следующий() Тогда
			//СрокГодности 	= Выборка.СрокГодности;
			Если ЗначениеЗаполнено(Выборка.СрокГодностиНов) Тогда
				СрокГодности 	= ЧислоПрописью(Выборка.СрокГодностиНов, "НД=Ложь", Выборка.ТипСрокаГодностиПараметрыПрописиНаРусском);
				СрокГодности 	= СтрЗаменить(СрокГодности, " ", Символы.ПС);
				Если СтрЧислоСтрок(СрокГодности) > 0 Тогда
					СрокГодности = Формат(Выборка.СрокГодностиНов, "ЧГ=0") + " " + СтрПолучитьСтроку(СрокГодности, СтрЧислоСтрок(СрокГодности));
				КонецЕсли;
			КонецЕсли;	
			Если Выборка.СрокНеограничен = Истина Тогда
				СрокГодности = "Не ограничен";
			КонецЕсли;
			ВесОбъем			= Выборка.УпаковкаДляЦенника;
			Цена				= Выборка.Цена;
			СтранаПроисхождения = Выборка.СтранаПроисхождения;
		КонецЕсли;
		
		ВыборкаТов = Результаты[1].Выбрать();
		Фишка1 = "";
		Фишка2 = "";
		ДопТекст = "";
		Пиктограмма1 = Неопределено;
		Пиктограмма2 = Неопределено;
		Если ВыборкаТов.Следующий() Тогда
			СтруктураВыведенногоЦенника.Вставить("ФишкаКартинка1", ВыборкаТов.ФишкаКратко1);
			СтруктураВыведенногоЦенника.Вставить("ФишкаКартинка2", ВыборкаТов.ФишкаКратко2);
			Если НачалоДня(ВыборкаТов.ДатаНачалаВыводаНаСинийЦенник) <= ТекущаяДата()
				И КонецДня(ВыборкаТов.ДатаОкончанияВыводаНаСинийЦенник) >= ТекущаяДата() Тогда
				Если ЗначениеЗаполнено(ВыборкаТов.ТекстВместоФишки) Тогда
					ДопТекст = СокрЛП(ВыборкаТов.ТекстВместоФишки);
				КонецЕсли;	
			КонецЕсли;
			Если НаименованиеДляЦенника = Неопределено Тогда
				НаименованиеДляЦенника = ВыборкаТов.Наименование;
			КонецЕсли;
			Если ПозицияРазделителяДляЦенника = Неопределено Тогда
				ПозицияРазделителяДляЦенника = ВыборкаТов.ПозицияРазделителяДляЦенника;
			КонецЕсли;
			Фишка1 = СокрЛП(ВыборкаТов.ФишкаНаименование1);
			Фишка2 = СокрЛП(ВыборкаТов.ФишкаНаименование2);
			Если ТипЗнч(ВыборкаТов.ФишкаПиктограмма1) = Тип("ХранилищеЗначения") Тогда
				Пикт = ВыборкаТов.ФишкаПиктограмма1.Получить();
				Если ТипЗнч(Пикт) = Тип("Картинка") Тогда
					Пиктограмма1 = Пикт;
				КонецЕсли;	
			КонецЕсли;
			Если ТипЗнч(ВыборкаТов.ФишкаПиктограмма2) = Тип("ХранилищеЗначения") Тогда
				Пикт = ВыборкаТов.ФишкаПиктограмма2.Получить();
				Если ТипЗнч(Пикт) = Тип("Картинка") Тогда
					Пиктограмма2 = Пикт;
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		
		Если Пиктограмма1 = Неопределено
			И Пиктограмма2 = Неопределено Тогда
			Если НЕ ЗначениеЗаполнено(ДопТекст) Тогда
				//+++АК KIRN 2018.05.06  
				Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_НовыйБезФишек"+?(СРейтингом,"_р",""));
				//Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_НовыйБезФишек");
				//---АК KIRN 
			Иначе
				//+++АК KIRN 2018.05.06  
				Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_Новый1Фишка"+?(СРейтингом,"_р",""));
				//Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_Новый1Фишка");
				//---АК KIRN 
			КонецЕсли;
		ИначеЕсли Пиктограмма1 <> Неопределено
			И Пиктограмма2 = Неопределено Тогда	
			//+++АК KIRN 2018.05.06  
			Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_Новый1Фишка"+?(СРейтингом,"_р",""));
			//Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_Новый1Фишка");
			//---АК KIRN 			
		Иначе
			//+++АК KIRN 2018.05.06  
			Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_Новый"+?(СРейтингом,"_р",""));
			//Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_Новый");
			///
		КонецЕсли;	
		
		Область = Макет.ПолучитьОбласть("Область");
		Если Пиктограмма1 = Неопределено
			И Пиктограмма2 = Неопределено
			И ЗначениеЗаполнено(ДопТекст) Тогда
			Область.Рисунки.Удалить(Область.Рисунки.КартинкаФишка1);
		КонецЕсли;	
		
		Если Пиктограмма1 <> Неопределено Тогда
			Область.Рисунки.КартинкаФишка1.Картинка = Пиктограмма1;
			Область.Параметры.Фишка1 = Фишка1;
		КонецЕсли;
		Если Пиктограмма2 <> Неопределено Тогда
			Область.Рисунки.КартинкаФишка2.Картинка = Пиктограмма2;
			Область.Параметры.Фишка2 = Фишка2;
		КонецЕсли;
		
		ТабЛожные = Результаты[2].Выгрузить();
		ТабРейтинг = Результаты[3].Выгрузить();
		Рейтинг = 0;
		Если СРейтингом
			И ТабРейтинг.Количество() > 0 Тогда
			Рейтинг = ТабРейтинг[0].Рейтинг;
		КонецЕсли;
		СтруктураВыведенногоЦенника.Рейтинг = Рейтинг;
		
		СтруктураВыведенногоЦенника.НаименованиеТовара = НаименованиеДляЦенника;
		НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "   "	, " ");
		НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "  "	, " ");
		НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, " "	, Символы.ПС);
	КонецЕсли;	
	
	
	//				
	
	//НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "ё", "е");
	//НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "р", "p");
	
	Если ПозицияРазделителяДляЦенника = 0 Тогда
		СтрокаНаименования1 = "";
		Для н = 0 по СтрЧислоСтрок(НаименованиеДляЦенника) Цикл
			СтрокаНаименования1 = СтрокаНаименования1 + СтрПолучитьСтроку(НаименованиеДляЦенника, н) + " ";
		КонецЦикла;
		СтрокаНаименования1 = СокрЛП(СтрокаНаименования1);
		
		Область.Параметры.СтрокаНаименования1 = ВРЕГ(СтрокаНаименования1);
	Иначе
		СтрокаНаименования1 = "";
		Для н = 0 по ПозицияРазделителяДляЦенника Цикл
			СтрокаНаименования1 = СтрокаНаименования1 + СтрПолучитьСтроку(НаименованиеДляЦенника, н) + " ";
		КонецЦикла;
		СтрокаНаименования1 = СокрЛП(СтрокаНаименования1);
		
		Область.Параметры.СтрокаНаименования1 = ВРЕГ(СтрокаНаименования1);
//		Результат.Вывести(Область);
		
		СтрокаНаименования2 = "";
		Для н = ПозицияРазделителяДляЦенника + 1 по СтрЧислоСтрок(НаименованиеДляЦенника) Цикл
			СтрокаНаименования2 = СтрокаНаименования2 + СтрПолучитьСтроку(НаименованиеДляЦенника, н) + " ";
		КонецЦикла;
		СтрокаНаименования2 = НРег(СокрЛП(СтрокаНаименования2));
		
		Область.Параметры.СтрокаНаименования2 = ВРЕГ(СтрокаНаименования2);
	КонецЕсли;
	Если Найти(ВесОбъем, "л") > 0 Тогда
		Область.Параметры.ВесОбъемЗаголовок = "Объем";
	ИначеЕсли Найти(ВесОбъем, "г") > 0 Тогда
		Область.Параметры.ВесОбъемЗаголовок = "Вес";
	Иначе
		Область.Параметры.ВесОбъемЗаголовок = "Вес/Объем";
	КонецЕсли;
	
	//Область.Параметры.Орг 	= Организация;
	Область.Параметры.Орг 	= "ООО ""Вкусвилл""";
	Область.Параметры.СрокГодности 	= СрокГодности;
	СтруктураВыведенногоЦенника.СрокГодности = СрокГодности;
	Область.Параметры.Страна 		= СтранаПроисхождения;
	СтруктураВыведенногоЦенника.Страна = СтранаПроисхождения;
	ЛожныйШтрихКод = "";
	Если ТипЗнч(ПредподготовленныеПоляСтруктура) = Тип("Структура") Тогда
		ЛожныйШтрихКод = ПредподготовленныеПоляСтруктура.ЛожныйШтрихКод;
	Иначе	
		СтрокиДробныйЦенник = ТабЛожные.НайтиСтроки(Новый Структура("Номенклатура, Характеристика", Товар, Характеристика));
		Если СтрокиДробныйЦенник.Количество() > 0 Тогда
			ЛожныйШтрихКод = СтрокиДробныйЦенник[0].ЛожныйШтрихКод;
		КонецЕсли;	
	КонецЕсли;	
	Если ЗначениеЗаполнено(ЛожныйШтрихКод)
			И ПечататьДробныйЦенник Тогда
		Если ТипЗнч(ПредподготовленныеПоляСтруктура) = Тип("Структура") Тогда
			ВесВГраммах = Прав(СокрЛП(ПредподготовленныеПоляСтруктура.ЛожныйШтрихКод), 5);
		Иначе
			ВесВГраммах = Прав(СокрЛП(СтрокиДробныйЦенник[0].ЛожныйШтрихКод), 5);
		КонецЕсли;	
		ВесВГраммах = Лев(ВесВГраммах, 4);
		Пока Лев(ВесВГраммах, 1) = "0" Цикл
			ВесВГраммах = Сред(ВесВГраммах, 2);
		КонецЦикла;
		Попытка
			Коэф = Число(ВесВГраммах) / 1000;
			ЦенаДробное = Окр(Цена * Коэф, 0);
			Область.Параметры.Цена 		= Формат(ЦенаДробное, "ЧГ=0");
			Область.Параметры.ВесОбъем 	= ВесВГраммах + " г";
		Исключение	
			Область.Параметры.Цена 		= Формат(Цена, "ЧГ=0");
			Область.Параметры.ВесОбъем 	= ВесОбъем;
		КонецПопытки;
	Иначе	
		Область.Параметры.Цена 			= Формат(Цена, "ЧГ=0");
		Область.Параметры.ВесОбъем 		= ВесОбъем;
	КонецЕсли;	
	СтруктураВыведенногоЦенника.Вес 	= ВесОбъем;
	СтруктураВыведенногоЦенника.Цена 	= Цена;
	
	Если ЗначениеЗаполнено(ДопТекст) Тогда
		Область.Параметры.ДопТекст = ДопТекст;
	КонецЕсли;
	Если СтрДлина(Область.Параметры.Цена) > 3 Тогда
		Если Пиктограмма1 <> Неопределено Тогда
			Область.Рисунки.Удалить(Область.Рисунки.КартинкаФишка1);
		КонецЕсли;
		Если Пиктограмма2 <> Неопределено Тогда
			Область.Рисунки.Удалить(Область.Рисунки.КартинкаФишка2);
		КонецЕсли;
	КонецЕсли;	
	
	//+++АК KIRN 2018.04.24  
	Если СРейтингом
		И Рейтинг > 0 Тогда
		КартинкаКартинка = Область.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
		КартинкаКартинка.Верх = 14; 
		КартинкаКартинка.Высота = 16; 
		КартинкаКартинка.Ширина = 20; 
		КартинкаКартинка.Лево = 44; 
		КартинкаКартинка.Картинка = БиблиотекаКартинок.КрасныйКруг; 
		КартинкаКартинка.ГраницаСлева = Ложь;
		КартинкаКартинка.ГраницаСправа = Ложь;
		КартинкаКартинка.ГраницаСнизу = Ложь;
		КартинкаКартинка.ГраницаСверху = Ложь;

		
		КартинкаТекст = Область.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Текст);
		КартинкаТекст.Расположить(Область.Область(12, 15, 13 , 17));
		КартинкаТекст.Шрифт = Новый Шрифт(,14, Истина);
		КартинкаТекст.ЦветТекста = ЦветаСтиля.ЦветОсобогоТекста;
		КартинкаТекст.ГраницаСлева = Ложь;
		КартинкаТекст.ГраницаСправа = Ложь;
		КартинкаТекст.ГраницаСнизу = Ложь;
		КартинкаТекст.ГраницаСверху = Ложь;
		КартинкаТекст.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
		КартинкаТекст.ВертикальноеПоложение = ВертикальноеПоложение.Центр;
		КартинкаТекст.Текст = ""+Формат(Рейтинг, "ЧДЦ=1; ЧРГ=.; ЧГ=0");

	КонецЕсли;	
	//---АК KIRN 
	
	Возврат Область;
	
КонецФункции

Функция ПолучитьЦенник_80_60_ПоАкции_(Товар, Характеристика, СтруктураАкция, СтруктураВыведенногоЦенника = Неопределено, ПечататьДробныйЦенник = Ложь, Организация = "ООО ""Вкусвилл""") Экспорт
	
	Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_80_60_САкцией"); 	
	
	СтруктураВыведенногоЦенника = Новый Структура("НаименованиеТовара, Цена, Страна, СрокГодности, Фишка, ЦенаПоАкции, НазваниеАкции, КомментарийАкции, Вес");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("УпаковкаДляЦенника"	, ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("УпаковкаДляЦенника"));
 	Запрос.УстановитьПараметр("Номенклатура"		, Товар);
	Запрос.УстановитьПараметр("ДатаЦен"				, ТекущаяДата());
	Запрос.УстановитьПараметр("Характеристика"		, Характеристика);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СрокГодности)
	|				ТОГДА ЗначенияСвойствОбъектов.Значение
	|			ИНАЧЕ """"
	|		КОНЕЦ) КАК СрокГодности,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗначенияСвойствОбъектов.Свойство = &УпаковкаДляЦенника
	|				ТОГДА ЗначенияСвойствОбъектов.Значение
	|			ИНАЧЕ """"
	|		КОНЕЦ) КАК УпаковкаДляЦенника,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СтранаПроисхождения)
	|				ТОГДА ЗначенияСвойствОбъектов.Значение
	|			ИНАЧЕ """"
	|		КОНЕЦ) КАК СтранаПроисхождения,
	|	МАКСИМУМ(ХарактеристикиНоменклатуры.СрокГодности) КАК СрокГодностиНов,
	|	МАКСИМУМ(ЕСТЬNULL(ХарактеристикиНоменклатуры.ТипСрокаГодности.ПараметрыПрописиНаРусском, """")) КАК ТипСрокаГодностиПараметрыПрописиНаРусском,
	|	МАКСИМУМ(ЕСТЬNULL(ХарактеристикиНоменклатуры.СрокГодностиНеограничен, ЛОЖЬ)) КАК СрокНеограничен
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|			ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|		ИЗ
	|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|					&ДатаЦен,
	|					Номенклатура = &Номенклатура
	|						И ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|						И ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.ОсновнойТипЦенПродаж)) КАК ЦеныНоменклатурыСрезПоследних) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО СправочникНоменклатура.Ссылка = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|			ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов.Объект
	|		ПО СправочникНоменклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	|ГДЕ
	|	СправочникНоменклатура.Ссылка = &Номенклатура
	|	И ХарактеристикиНоменклатуры.Ссылка = &Характеристика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Номенклатура.Наименование,
	|	Номенклатура.ПозицияРазделителяДляЦенника,
	|	Номенклатура.Фишка,
	|	Номенклатура.БазоваяЕдиницаИзмерения.Наименование КАК ЕдИзмеренияНаименование,
	|	Номенклатура.ДатаНачалаВыводаНаСинийЦенник,
	|	Номенклатура.ДатаОкончанияВыводаНаСинийЦенник,
	|	Номенклатура.ТекстВместоФишки
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|ГДЕ
	|	Номенклатура.Ссылка = &Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ШтриховыеКоды.Номенклатура,
	|	ШтриховыеКоды.Характеристика,
	|	ШтриховыеКоды.ЛожныйШтрихКод
	|ИЗ
	|	РегистрСведений.ШтриховыеКоды КАК ШтриховыеКоды
	|ГДЕ
	|	ШтриховыеКоды.ЛожныйШтрихКод <> """"";
	Результаты = Запрос.ВыполнитьПакет();				
	
	//
	Выборка = Результаты[0].Выбрать();
	Если Выборка.Следующий() Тогда
		//СрокГодности 	= Выборка.СрокГодности;
		Если ЗначениеЗаполнено(Выборка.СрокГодностиНов) Тогда
			СрокГодности 	= ЧислоПрописью(Выборка.СрокГодностиНов, "НД=Ложь", Выборка.ТипСрокаГодностиПараметрыПрописиНаРусском);
			СрокГодности 	= СтрЗаменить(СрокГодности, " ", Символы.ПС);
			Если СтрЧислоСтрок(СрокГодности) > 0 Тогда
				СрокГодности = Формат(Выборка.СрокГодностиНов, "ЧГ=0") + " " + СтрПолучитьСтроку(СрокГодности, СтрЧислоСтрок(СрокГодности));
			КонецЕсли;
		КонецЕсли;
		Если Выборка.СрокНеограничен = Истина Тогда
			СрокГодности = "Не ограничен";
		КонецЕсли;
		ВесОбъем			= Выборка.УпаковкаДляЦенника;
		Цена				= Выборка.Цена;
		СтранаПроисхождения = Выборка.СтранаПроисхождения;
	КонецЕсли;
	
	//
	ВыборкаТов = Результаты[1].Выбрать();
	Если ВыборкаТов.Следующий() Тогда
		Фишка 							= ВыборкаТов.Фишка;
		Если НачалоДня(ВыборкаТов.ДатаНачалаВыводаНаСинийЦенник) <= ТекущаяДата()
			И КонецДня(ВыборкаТов.ДатаОкончанияВыводаНаСинийЦенник) >= ТекущаяДата() Тогда
			Если ЗначениеЗаполнено(ВыборкаТов.ТекстВместоФишки) Тогда
				Фишка = СокрЛП(ВыборкаТов.ТекстВместоФишки);
			КонецЕсли;	
		КонецЕсли;
		НаименованиеДляЦенника 			= ВыборкаТов.Наименование;
		ПозицияРазделителяДляЦенника 	= ВыборкаТов.ПозицияРазделителяДляЦенника;
		ЕдИзмАкция 						= ВыборкаТов.ЕдИзмеренияНаименование;
	КонецЕсли;
	
	ТабЛожные = Результаты[2].Выгрузить();
	
	СтруктураВыведенногоЦенника.НаименованиеТовара = НаименованиеДляЦенника;
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "   "	, " ");
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "  "	, " ");
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, " "	, Символы.ПС);
	
	//
	Область = Макет.ПолучитьОбласть("Область");
	
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "ё", "е");
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "р", "p");
	
	Если ПозицияРазделителяДляЦенника = 0 Тогда
		СтрокаНаименования1 = "";
		Для н = 0 по СтрЧислоСтрок(НаименованиеДляЦенника) Цикл
			СтрокаНаименования1 = СтрокаНаименования1 + СтрПолучитьСтроку(НаименованиеДляЦенника, н) + " ";
		КонецЦикла;
		СтрокаНаименования1 = СокрЛП(СтрокаНаименования1);
		
		Область.Параметры.СтрокаНаименования1 = ВРЕГ(СтрокаНаименования1);
	Иначе
		СтрокаНаименования1 = "";
		Для н = 0 по ПозицияРазделителяДляЦенника Цикл
			СтрокаНаименования1 = СтрокаНаименования1 + СтрПолучитьСтроку(НаименованиеДляЦенника, н) + " ";
		КонецЦикла;
		СтрокаНаименования1 = СокрЛП(СтрокаНаименования1);
		
		Область.Параметры.СтрокаНаименования1 = ВРЕГ(СтрокаНаименования1);
//		Результат.Вывести(Область);
		
		СтрокаНаименования2 = "";
		Для н = ПозицияРазделителяДляЦенника + 1 по СтрЧислоСтрок(НаименованиеДляЦенника) Цикл
			СтрокаНаименования2 = СтрокаНаименования2 + СтрПолучитьСтроку(НаименованиеДляЦенника, н) + " ";
		КонецЦикла;
		СтрокаНаименования2 = НРег(СокрЛП(СтрокаНаименования2));
		
		Область.Параметры.СтрокаНаименования2 = ВРЕГ(СтрокаНаименования2);
	КонецЕсли;
	Если Найти(ВесОбъем, "л") > 0 Тогда
		Область.Параметры.ВесОбъемЗаголовок = "Объем";
	ИначеЕсли Найти(ВесОбъем, "г") > 0 Тогда
		Область.Параметры.ВесОбъемЗаголовок = "Вес";
	Иначе
		Область.Параметры.ВесОбъемЗаголовок = "Вес/Объем";
	КонецЕсли;
	
	//Область.Параметры.Орг 	= Организация;
	Область.Параметры.Орг 	= "ООО ""Вкусвилл""";
	Область.Параметры.СрокГодности 	= СрокГодности;
	СтруктураВыведенногоЦенника.СрокГодности = СрокГодности;
	Область.Параметры.Страна 		= СтранаПроисхождения;
	СтруктураВыведенногоЦенника.Страна = СтранаПроисхождения;
	СтрокиДробныйЦенник = ТабЛожные.НайтиСтроки(Новый Структура("Номенклатура, Характеристика", Товар, Характеристика));
	Коэф = 0;
	Если СтрокиДробныйЦенник.Количество() > 0
			И ПечататьДробныйЦенник Тогда
		ВесВГраммах = Прав(СокрЛП(СтрокиДробныйЦенник[0].ЛожныйШтрихКод), 5);
		ВесВГраммах = Лев(ВесВГраммах, 4);
		Пока Лев(ВесВГраммах, 1) = "0" Цикл
			ВесВГраммах = Сред(ВесВГраммах, 2);
		КонецЦикла;
		Попытка
			Коэф = Число(ВесВГраммах) / 1000;
			ЦенаДробное = Окр(Цена * Коэф, 0);
			Область.Параметры.Цена 		= Формат(ЦенаДробное, "ЧГ=0");
			Область.Параметры.ВесОбъем 	= ВесВГраммах + " г";
		Исключение	
			Область.Параметры.Цена 		= Формат(Цена, "ЧГ=0");
			Область.Параметры.ВесОбъем 	= ВесОбъем;
		КонецПопытки;
	Иначе	
		Область.Параметры.Цена 			= Формат(Цена, "ЧГ=0");
		Область.Параметры.ВесОбъем 		= ВесОбъем;
	КонецЕсли;	
	СтруктураВыведенногоЦенника.Вес = ВесОбъем;
	СтруктураВыведенногоЦенника.Цена = Цена;
	
	Область.Параметры.Фишка = Фишка;
	СтруктураВыведенногоЦенника.Фишка = Фишка;
	
	Область.Параметры.НазваниеАкции = СтруктураАкция.Название;
	СтруктураВыведенногоЦенника.НазваниеАкции = СтруктураАкция.Название;
	Область.Параметры.КомментарийНаЦенник = СтруктураАкция.КомментарийАкции;
	СтруктураВыведенногоЦенника.КомментарийАкции = СтруктураАкция.КомментарийАкции;
	Если Коэф <> 0 Тогда
		ЦенаДробное = Окр(СтруктураАкция.Цена * Коэф, 0);
		Область.Параметры.ЦенаАкц 	= Формат(ЦенаДробное, "ЧГ=0");
		Область.Параметры.ЕдИзм 	= ВесВГраммах + " г";
	Иначе	
		Область.Параметры.ЦенаАкц 	= Формат(СтруктураАкция.Цена, "ЧГ=0");
		Область.Параметры.ЕдИзм 	= НРег(ЕдИзмАкция) + ?(Прав(ЕдИзмАкция, 1) <> ".", ".", "");
	КонецЕсли;
	СтруктураВыведенногоЦенника.ЦенаПоАкции = СтруктураАкция.Цена;
	
	//Если СтрДлина(Фишка) > 30 Тогда
	//	Область.Область(10, 2, 10, 3).Шрифт = Новый Шрифт(Область.Область(10, 2, 10, 3).Шрифт,, 10);
	//КонецЕсли;	
	
	//
	Возврат Область;
	
КонецФункции
Функция ПолучитьЦенник_80_60_ПоАкции(Товар, Характеристика, СтруктураАкция, СтруктураВыведенногоЦенника = Неопределено, ПечататьДробныйЦенник = Ложь, Организация = "ООО ""Вкусвилл""",
									СРейтингом = Ложь, ПредподготовленныеПоляСтруктура = Неопределено) Экспорт
	
	СтруктураВыведенногоЦенника = Новый Структура("НаименованиеТовара, Цена, Страна, СрокГодности, Фишка, ЦенаПоАкции, НазваниеАкции, КомментарийАкции, Вес, ФишкаКартинка1, ФишкаКартинка12, Рейтинг");
	
	//+++АК MIND 2017.12.06 пришло время оптимизации, так как теперь печать могут вызывать очень массово, то запросы здесь получаются циклические и совершенно ни к чему
	//добавляю в параметры процедуры переменную ,в которую можно передать структуру, и если она передана, то процедура считает что все в нее передано и запросом ничего получать не нужно
	Если ТипЗнч(ПредподготовленныеПоляСтруктура) = Тип("Структура") Тогда
		
		СрокГодности 	= ПредподготовленныеПоляСтруктура.СрокГодности;
		ВесОбъем			= ПредподготовленныеПоляСтруктура.УпаковкаДляЦенника;
		Цена				= ПредподготовленныеПоляСтруктура.Цена;
		СтранаПроисхождения = ПредподготовленныеПоляСтруктура.СтранаПроисхождения;
		
		Фишка1 = "";
		Фишка2 = "";
		ДопТекст = "";
		Пиктограмма1 = Неопределено;
		Пиктограмма2 = Неопределено;
		СтруктураВыведенногоЦенника.Вставить("ФишкаКартинка1", ПредподготовленныеПоляСтруктура.ФишкаКратко1);
		СтруктураВыведенногоЦенника.Вставить("ФишкаКартинка2", ПредподготовленныеПоляСтруктура.ФишкаКратко2);
		Если НачалоДня(ПредподготовленныеПоляСтруктура.ДатаНачалаВыводаНаСинийЦенник) <= ТекущаяДата()
			И КонецДня(ПредподготовленныеПоляСтруктура.ДатаОкончанияВыводаНаСинийЦенник) >= ТекущаяДата() Тогда
			Если ЗначениеЗаполнено(ПредподготовленныеПоляСтруктура.ТекстВместоФишки) Тогда
				ДопТекст = СокрЛП(ПредподготовленныеПоляСтруктура.ТекстВместоФишки);
			КонецЕсли;	
		КонецЕсли;
		НаименованиеДляЦенника = ПредподготовленныеПоляСтруктура.Наименование;
		ПозицияРазделителяДляЦенника = ПредподготовленныеПоляСтруктура.ПозицияРазделителяДляЦенника;
		ЕдИзмАкция 						= ПредподготовленныеПоляСтруктура.ЕдИзмеренияНаименование;
		Фишка1 = СокрЛП(ПредподготовленныеПоляСтруктура.ФишкаНаименование1);
		Фишка2 = СокрЛП(ПредподготовленныеПоляСтруктура.ФишкаНаименование2);
		Если ТипЗнч(ПредподготовленныеПоляСтруктура.ФишкаПиктограмма1) = Тип("ХранилищеЗначения") Тогда
			Пикт = ПредподготовленныеПоляСтруктура.ФишкаПиктограмма1.Получить();
			Если ТипЗнч(Пикт) = Тип("Картинка") Тогда
				Пиктограмма1 = Пикт;
			КонецЕсли;	
		КонецЕсли;
		Если ТипЗнч(ПредподготовленныеПоляСтруктура.ФишкаПиктограмма2) = Тип("ХранилищеЗначения") Тогда
			Пикт = ПредподготовленныеПоляСтруктура.ФишкаПиктограмма2.Получить();
			Если ТипЗнч(Пикт) = Тип("Картинка") Тогда
				Пиктограмма2 = Пикт;
			КонецЕсли;	
		КонецЕсли;
		
		Если Пиктограмма1 = Неопределено
			И Пиктограмма2 = Неопределено Тогда
			Если НЕ ЗначениеЗаполнено(ДопТекст) Тогда
				Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_САкциейНовыйБезФишек");
			Иначе
				Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_САкциейНовый1Фишка");
			КонецЕсли;
		ИначеЕсли Пиктограмма1 <> Неопределено
			И Пиктограмма2 = Неопределено Тогда	
			Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_САкциейНовый1Фишка");
		Иначе
			Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_САкциейНовый");
		КонецЕсли;	
		
		Область = Макет.ПолучитьОбласть("Область");
		Если Пиктограмма1 = Неопределено
			И Пиктограмма2 = Неопределено
			И ЗначениеЗаполнено(ДопТекст) Тогда
			Область.Рисунки.Удалить(Область.Рисунки.КартинкаФишка1);
		КонецЕсли;	
		
		Если Пиктограмма1 <> Неопределено Тогда
			Область.Рисунки.КартинкаФишка1.Картинка = Пиктограмма1;
			Область.Параметры.Фишка1 = Фишка1;
		КонецЕсли;
		Если Пиктограмма2 <> Неопределено Тогда
			Область.Рисунки.КартинкаФишка2.Картинка = Пиктограмма2;
			Область.Параметры.Фишка2 = Фишка2;
		КонецЕсли;
		
		Рейтинг = 0;
		Если СРейтингом Тогда
			Рейтинг = ПредподготовленныеПоляСтруктура.Рейтинг;
		КонецЕсли;
		СтруктураВыведенногоЦенника.Рейтинг = Рейтинг;
		
		СтруктураВыведенногоЦенника.НаименованиеТовара = НаименованиеДляЦенника;
		НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "   "	, " ");
		НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "  "	, " ");
		НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, " "	, Символы.ПС);
	Иначе
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("УпаковкаДляЦенника"	, ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("УпаковкаДляЦенника"));
	 	Запрос.УстановитьПараметр("Номенклатура"		, Товар);
		Запрос.УстановитьПараметр("ДатаЦен"				, ТекущаяДата());
		Запрос.УстановитьПараметр("Характеристика"		, Характеристика);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СрокГодности)
		|				ТОГДА ЗначенияСвойствОбъектов.Значение
		|			ИНАЧЕ """"
		|		КОНЕЦ) КАК СрокГодности,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ЗначенияСвойствОбъектов.Свойство = &УпаковкаДляЦенника
		|				ТОГДА ЗначенияСвойствОбъектов.Значение
		|			ИНАЧЕ """"
		|		КОНЕЦ) КАК УпаковкаДляЦенника,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СтранаПроисхождения)
		|				ТОГДА ЗначенияСвойствОбъектов.Значение
		|			ИНАЧЕ """"
		|		КОНЕЦ) КАК СтранаПроисхождения,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ХарактеристикиНоменклатуры.СрокГодности_ПослеИзготовления > 0
		|				ТОГДА ХарактеристикиНоменклатуры.СрокГодности_ПослеИзготовления
		|			ИНАЧЕ ХарактеристикиНоменклатуры.СрокГодности
		|		КОНЕЦ) КАК СрокГодностиНов,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ХарактеристикиНоменклатуры.СрокГодности_ПослеИзготовления > 0
		|				ТОГДА ЕСТЬNULL(ХарактеристикиНоменклатуры.ТипСрокаГодности_ПослеИзготовления.ПараметрыПрописиНаРусском, """")
		|			ИНАЧЕ ЕСТЬNULL(ХарактеристикиНоменклатуры.ТипСрокаГодности.ПараметрыПрописиНаРусском, """")
		|		КОНЕЦ) КАК ТипСрокаГодностиПараметрыПрописиНаРусском,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ХарактеристикиНоменклатуры.СрокГодности_ПослеИзготовления > 0
		|				ТОГДА ЛОЖЬ
		|			ИНАЧЕ ЕСТЬNULL(ХарактеристикиНоменклатуры.СрокГодностиНеограничен, ЛОЖЬ)
		|		КОНЕЦ) КАК СрокНеограничен
		|ИЗ
		|	Справочник.Номенклатура КАК СправочникНоменклатура
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
		|			ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
		|		ИЗ
		|			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
		|					&ДатаЦен,
		|					ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.ОсновнойТипЦенПродаж)
		|						И ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
		|						И Номенклатура = &Номенклатура) КАК ЦеныНоменклатурыСрезПоследних) КАК ЦеныНоменклатурыСрезПоследних
		|		ПО СправочникНоменклатура.Ссылка = ЦеныНоменклатурыСрезПоследних.Номенклатура
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
		|			ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов.Объект
		|		ПО СправочникНоменклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
		|ГДЕ
		|	СправочникНоменклатура.Ссылка = &Номенклатура
		|	И ХарактеристикиНоменклатуры.Ссылка = &Характеристика
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Номенклатура.Наименование,
		|	Номенклатура.ПозицияРазделителяДляЦенника,
		|	Номенклатура.Фишка,
		|	Номенклатура.БазоваяЕдиницаИзмерения.Наименование КАК ЕдИзмеренияНаименование,
		|	Номенклатура.ДатаНачалаВыводаНаСинийЦенник,
		|	Номенклатура.ДатаОкончанияВыводаНаСинийЦенник,
		|	Номенклатура.ТекстВместоФишки,
		|	ВЗ_Фишка1.ФишкаНаименование КАК ФишкаНаименование1,
		|	ВЗ_Фишка1.ФишкаПиктограмма КАК ФишкаПиктограмма1,
		|	ВЗ_Фишка2.ФишкаНаименование КАК ФишкаНаименование2,
		|	ВЗ_Фишка2.ФишкаПиктограмма КАК ФишкаПиктограмма2,
		|	ЕСТЬNULL(ВЗ_Фишка1.Фишка, ЗНАЧЕНИЕ(Справочник.ФишкиКратко.ПустаяСсылка)) КАК ФишкаКратко1,
		|	ЕСТЬNULL(ВЗ_Фишка2.Фишка, ЗНАЧЕНИЕ(Справочник.ФишкиКратко.ПустаяСсылка)) КАК ФишкаКратко2
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			НоменклатураФишкиНаЦенник.Ссылка КАК Ссылка,
		|			НоменклатураФишкиНаЦенник.Фишка.Наименование КАК ФишкаНаименование,
		|			НоменклатураФишкиНаЦенник.Фишка.Пиктограмма КАК ФишкаПиктограмма,
		|			НоменклатураФишкиНаЦенник.Фишка КАК Фишка
		|		ИЗ
		|			Справочник.Номенклатура.ФишкиНаЦенник КАК НоменклатураФишкиНаЦенник
		|		ГДЕ
		|			НоменклатураФишкиНаЦенник.Ссылка = &Номенклатура
		|			И НоменклатураФишкиНаЦенник.НомерСтроки = 1) КАК ВЗ_Фишка1
		|		ПО Номенклатура.Ссылка = ВЗ_Фишка1.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			НоменклатураФишкиНаЦенник.Ссылка КАК Ссылка,
		|			НоменклатураФишкиНаЦенник.Фишка.Наименование КАК ФишкаНаименование,
		|			НоменклатураФишкиНаЦенник.Фишка.Пиктограмма КАК ФишкаПиктограмма,
		|			НоменклатураФишкиНаЦенник.Фишка КАК Фишка
		|		ИЗ
		|			Справочник.Номенклатура.ФишкиНаЦенник КАК НоменклатураФишкиНаЦенник
		|		ГДЕ
		|			НоменклатураФишкиНаЦенник.Ссылка = &Номенклатура
		|			И НоменклатураФишкиНаЦенник.НомерСтроки = 2) КАК ВЗ_Фишка2
		|		ПО (Номенклатура.Ссылка = ВЗ_Фишка1.Ссылка)
		|ГДЕ
		|	Номенклатура.Ссылка = &Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ШтриховыеКоды.Номенклатура,
		|	ШтриховыеКоды.Характеристика,
		|	ШтриховыеКоды.ЛожныйШтрихКод
		|ИЗ
		|	РегистрСведений.ШтриховыеКоды КАК ШтриховыеКоды
		|ГДЕ
		|	ШтриховыеКоды.ЛожныйШтрихКод <> """"
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		//+++АК KIRN 2018.04.26 ИП-00018243 
		|Выбрать ТоварыСРейтингом.Рейтинг КАК Рейтинг
		|ИЗ
		|	РегистрСведений.ТОварыСрейтингом.СрезПоследних(, Номенклатура = &Номенклатура) КАК ТоварыСРейтингом
		//|ВЫБРАТЬ
		//|	ЕСТЬNULL(РейтингиТоваров.Рейтинг, ВЗ_Общая.Рейтинг) КАК Рейтинг
		//|ИЗ
		//|	РегистрСведений.РейтингиТоваров КАК РейтингиТоваров
		//|		ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		//|			РейтингиТоваров.Рейтинг КАК Рейтинг
		//|		ИЗ
		//|			РегистрСведений.РейтингиТоваров КАК РейтингиТоваров
		//|		ГДЕ
		//|			РейтингиТоваров.Номенклатура = &Номенклатура
		//|			И РейтингиТоваров.Характеристика = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ВЗ_Общая
		//|		ПО (ИСТИНА)
		//|ГДЕ
		//|	РейтингиТоваров.Номенклатура = &Номенклатура
		//|	И РейтингиТоваров.Характеристика = &Характеристика
		|";
		//---АК KIRN 
		Результаты = Запрос.ВыполнитьПакет();				
		
		//
		Выборка = Результаты[0].Выбрать();
		Если Выборка.Следующий() Тогда
			//СрокГодности 	= Выборка.СрокГодности;
			Если ЗначениеЗаполнено(Выборка.СрокГодностиНов) Тогда
				СрокГодности 	= ЧислоПрописью(Выборка.СрокГодностиНов, "НД=Ложь", Выборка.ТипСрокаГодностиПараметрыПрописиНаРусском);
				СрокГодности 	= СтрЗаменить(СрокГодности, " ", Символы.ПС);
				Если СтрЧислоСтрок(СрокГодности) > 0 Тогда
					СрокГодности = Формат(Выборка.СрокГодностиНов, "ЧГ=0") + " " + СтрПолучитьСтроку(СрокГодности, СтрЧислоСтрок(СрокГодности));
				КонецЕсли;
			КонецЕсли;
			Если Выборка.СрокНеограничен = Истина Тогда
				СрокГодности = "Не ограничен";
			КонецЕсли;
			ВесОбъем			= Выборка.УпаковкаДляЦенника;
			Цена				= Выборка.Цена;
			СтранаПроисхождения = Выборка.СтранаПроисхождения;
		КонецЕсли;
		
		//
		ВыборкаТов = Результаты[1].Выбрать();
		Фишка1 = "";
		Фишка2 = "";
		ДопТекст = "";
		Пиктограмма1 = Неопределено;
		Пиктограмма2 = Неопределено;
		Если ВыборкаТов.Следующий() Тогда
			СтруктураВыведенногоЦенника.Вставить("ФишкаКартинка1", ВыборкаТов.ФишкаКратко1);
			СтруктураВыведенногоЦенника.Вставить("ФишкаКартинка2", ВыборкаТов.ФишкаКратко2);
			Если НачалоДня(ВыборкаТов.ДатаНачалаВыводаНаСинийЦенник) <= ТекущаяДата()
				И КонецДня(ВыборкаТов.ДатаОкончанияВыводаНаСинийЦенник) >= ТекущаяДата() Тогда
				Если ЗначениеЗаполнено(ВыборкаТов.ТекстВместоФишки) Тогда
					ДопТекст = СокрЛП(ВыборкаТов.ТекстВместоФишки);
				КонецЕсли;	
			КонецЕсли;
			НаименованиеДляЦенника 			= ВыборкаТов.Наименование;
			ПозицияРазделителяДляЦенника 	= ВыборкаТов.ПозицияРазделителяДляЦенника;
			ЕдИзмАкция 						= ВыборкаТов.ЕдИзмеренияНаименование;
			Фишка1 = СокрЛП(ВыборкаТов.ФишкаНаименование1);
			Фишка2 = СокрЛП(ВыборкаТов.ФишкаНаименование2);
			Если ТипЗнч(ВыборкаТов.ФишкаПиктограмма1) = Тип("ХранилищеЗначения") Тогда
				Пикт = ВыборкаТов.ФишкаПиктограмма1.Получить();
				Если ТипЗнч(Пикт) = Тип("Картинка") Тогда
					Пиктограмма1 = Пикт;
				КонецЕсли;	
			КонецЕсли;
			Если ТипЗнч(ВыборкаТов.ФишкаПиктограмма2) = Тип("ХранилищеЗначения") Тогда
				Пикт = ВыборкаТов.ФишкаПиктограмма2.Получить();
				Если ТипЗнч(Пикт) = Тип("Картинка") Тогда
					Пиктограмма2 = Пикт;
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
		
		Если Пиктограмма1 = Неопределено
			И Пиктограмма2 = Неопределено Тогда
			Если НЕ ЗначениеЗаполнено(ДопТекст) Тогда
				Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_САкциейНовыйБезФишек");
			Иначе
				Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_САкциейНовый1Фишка");
			КонецЕсли;
		ИначеЕсли Пиктограмма1 <> Неопределено
			И Пиктограмма2 = Неопределено Тогда	
			Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_САкциейНовый1Фишка");
		Иначе
			Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_САкциейНовый");
		КонецЕсли;	
		
		Область = Макет.ПолучитьОбласть("Область");
		Если Пиктограмма1 = Неопределено
			И Пиктограмма2 = Неопределено
			И ЗначениеЗаполнено(ДопТекст) Тогда
			Область.Рисунки.Удалить(Область.Рисунки.КартинкаФишка1);
		КонецЕсли;	
		
		Если Пиктограмма1 <> Неопределено Тогда
			Область.Рисунки.КартинкаФишка1.Картинка = Пиктограмма1;
			Область.Параметры.Фишка1 = Фишка1;
		КонецЕсли;
		Если Пиктограмма2 <> Неопределено Тогда
			Область.Рисунки.КартинкаФишка2.Картинка = Пиктограмма2;
			Область.Параметры.Фишка2 = Фишка2;
		КонецЕсли;
		
		ТабЛожные = Результаты[2].Выгрузить();
		ТабРейтинг = Результаты[3].Выгрузить();
		Рейтинг = 0;
		Если СРейтингом
			И ТабРейтинг.Количество() > 0 Тогда
			Рейтинг = ТабРейтинг[0].Рейтинг;
		КонецЕсли;
		СтруктураВыведенногоЦенника.Рейтинг = Рейтинг;
		
		СтруктураВыведенногоЦенника.НаименованиеТовара = НаименованиеДляЦенника;
		НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "   "	, " ");
		НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "  "	, " ");
		НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, " "	, Символы.ПС);
	КонецЕсли;
	
	//
	
	//НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "ё", "е");
	//НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "р", "p");
	
	Если ПозицияРазделителяДляЦенника = 0 Тогда
		СтрокаНаименования1 = "";
		Для н = 0 по СтрЧислоСтрок(НаименованиеДляЦенника) Цикл
			СтрокаНаименования1 = СтрокаНаименования1 + СтрПолучитьСтроку(НаименованиеДляЦенника, н) + " ";
		КонецЦикла;
		СтрокаНаименования1 = СокрЛП(СтрокаНаименования1);
		
		Область.Параметры.СтрокаНаименования1 = ВРЕГ(СтрокаНаименования1);
	Иначе
		СтрокаНаименования1 = "";
		Для н = 0 по ПозицияРазделителяДляЦенника Цикл
			СтрокаНаименования1 = СтрокаНаименования1 + СтрПолучитьСтроку(НаименованиеДляЦенника, н) + " ";
		КонецЦикла;
		СтрокаНаименования1 = СокрЛП(СтрокаНаименования1);
		
		Область.Параметры.СтрокаНаименования1 = ВРЕГ(СтрокаНаименования1);
//		Результат.Вывести(Область);
		
		СтрокаНаименования2 = "";
		Для н = ПозицияРазделителяДляЦенника + 1 по СтрЧислоСтрок(НаименованиеДляЦенника) Цикл
			СтрокаНаименования2 = СтрокаНаименования2 + СтрПолучитьСтроку(НаименованиеДляЦенника, н) + " ";
		КонецЦикла;
		СтрокаНаименования2 = НРег(СокрЛП(СтрокаНаименования2));
		
		Область.Параметры.СтрокаНаименования2 = ВРЕГ(СтрокаНаименования2);
	КонецЕсли;
	Если Найти(ВесОбъем, "л") > 0 Тогда
		Область.Параметры.ВесОбъемЗаголовок = "Объем";
	ИначеЕсли Найти(ВесОбъем, "г") > 0 Тогда
		Область.Параметры.ВесОбъемЗаголовок = "Вес";
	Иначе
		Область.Параметры.ВесОбъемЗаголовок = "Вес/Объем";
	КонецЕсли;
	
	//Область.Параметры.Орг 	= Организация;
	Область.Параметры.Орг 	= "ООО ""Вкусвилл""";
	Область.Параметры.СрокГодности 	= СрокГодности;
	СтруктураВыведенногоЦенника.СрокГодности = СрокГодности;
	Область.Параметры.Страна 		= СтранаПроисхождения;
	СтруктураВыведенногоЦенника.Страна = СтранаПроисхождения;
	ЛожныйШтрихКод = "";
	Если ТипЗнч(ПредподготовленныеПоляСтруктура) = Тип("Структура") Тогда
		ЛожныйШтрихКод = ПредподготовленныеПоляСтруктура.ЛожныйШтрихКод;
	Иначе	
		СтрокиДробныйЦенник = ТабЛожные.НайтиСтроки(Новый Структура("Номенклатура, Характеристика", Товар, Характеристика));
		Если СтрокиДробныйЦенник.Количество() > 0 Тогда
			ЛожныйШтрихКод = СтрокиДробныйЦенник[0].ЛожныйШтрихКод;
		КонецЕсли;	
	КонецЕсли;
	Коэф = 0;
	Если ЗначениеЗаполнено(ЛожныйШтрихКод)
			И ПечататьДробныйЦенник Тогда
		Если ТипЗнч(ПредподготовленныеПоляСтруктура) = Тип("Структура") Тогда
			ВесВГраммах = Прав(СокрЛП(ПредподготовленныеПоляСтруктура.ЛожныйШтрихКод), 5);
		Иначе
			ВесВГраммах = Прав(СокрЛП(СтрокиДробныйЦенник[0].ЛожныйШтрихКод), 5);
		КонецЕсли;
		ВесВГраммах = Лев(ВесВГраммах, 4);
		Пока Лев(ВесВГраммах, 1) = "0" Цикл
			ВесВГраммах = Сред(ВесВГраммах, 2);
		КонецЦикла;
		Попытка
			Коэф = Число(ВесВГраммах) / 1000;
			ЦенаДробное = Окр(Цена * Коэф, 0);
			Область.Параметры.Цена 		= Формат(ЦенаДробное, "ЧГ=0");
			Область.Параметры.ВесОбъем 	= ВесВГраммах + " г";
		Исключение	
			Область.Параметры.Цена 		= Формат(Цена, "ЧГ=0");
			Область.Параметры.ВесОбъем 	= ВесОбъем;
		КонецПопытки;
	Иначе	
		Область.Параметры.Цена 			= Формат(Цена, "ЧГ=0");
		Область.Параметры.ВесОбъем 		= ВесОбъем;
	КонецЕсли;	
	СтруктураВыведенногоЦенника.Вес = ВесОбъем;
	СтруктураВыведенногоЦенника.Цена = Цена;
	
	Если ЗначениеЗаполнено(ДопТекст) Тогда
		Область.Параметры.ДопТекст = ДопТекст;
	КонецЕсли;
	Если СтрДлина(Область.Параметры.Цена) > 3 Тогда
		Если Пиктограмма1 <> Неопределено Тогда
			Область.Рисунки.Удалить(Область.Рисунки.КартинкаФишка1);
		КонецЕсли;
		Если Пиктограмма2 <> Неопределено Тогда
			Область.Рисунки.Удалить(Область.Рисунки.КартинкаФишка2);
		КонецЕсли;
	КонецЕсли;
	//СтруктураВыведенногоЦенника.Фишка = Фишка;
	
	Область.Параметры.НазваниеАкции = СтруктураАкция.Название;
	СтруктураВыведенногоЦенника.НазваниеАкции = СтруктураАкция.Название;
	Область.Параметры.КомментарийНаЦенник = СтруктураАкция.КомментарийАкции;
	СтруктураВыведенногоЦенника.КомментарийАкции = СтруктураАкция.КомментарийАкции;
	Если Коэф <> 0 Тогда
		ЦенаДробное = Окр(СтруктураАкция.Цена * Коэф, 0);
		Область.Параметры.ЦенаАкц 	= Формат(ЦенаДробное, "ЧГ=0");
		Область.Параметры.ЕдИзм 	= ВесВГраммах + " г";
	Иначе	
		Область.Параметры.ЦенаАкц 	= Формат(СтруктураАкция.Цена, "ЧГ=0");
		Область.Параметры.ЕдИзм 	= НРег(ЕдИзмАкция) + ?(Прав(ЕдИзмАкция, 1) <> ".", ".", "");
	КонецЕсли;
	СтруктураВыведенногоЦенника.ЦенаПоАкции = СтруктураАкция.Цена;
	
	
	//+++АК KIRN 2018.04.24  
	Если СРейтингом
		И Рейтинг > 0 Тогда
		КартинкаКартинка = Область.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
		КартинкаКартинка.Верх = 14; 
		КартинкаКартинка.Высота = 16; 
		КартинкаКартинка.Ширина = 20; 
		КартинкаКартинка.Лево = 44; 
		КартинкаКартинка.Картинка = БиблиотекаКартинок.КрасныйКруг; 
		КартинкаКартинка.ГраницаСлева = Ложь;
		КартинкаКартинка.ГраницаСправа = Ложь;
		КартинкаКартинка.ГраницаСнизу = Ложь;
		КартинкаКартинка.ГраницаСверху = Ложь;

		
		КартинкаТекст = Область.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Текст);
		КартинкаТекст.Расположить(Область.Область(12, 15, 13 , 17));
		КартинкаТекст.Шрифт = Новый Шрифт(,14, Истина);
		КартинкаТекст.ЦветТекста = ЦветаСтиля.ЦветОсобогоТекста;
		КартинкаТекст.ГраницаСлева = Ложь;
		КартинкаТекст.ГраницаСправа = Ложь;
		КартинкаТекст.ГраницаСнизу = Ложь;
		КартинкаТекст.ГраницаСверху = Ложь;
		КартинкаТекст.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
		КартинкаТекст.ВертикальноеПоложение = ВертикальноеПоложение.Центр;
		КартинкаТекст.Текст = ""+Формат(Рейтинг, "ЧДЦ=1; ЧРГ=.; ЧГ=0");

	КонецЕсли;	

	
	////+++АК MIND 2017.11.22 новый геморный механизм вывода рейтинга на ценники
	//Если СРейтингом
	//	И Рейтинг > 0 Тогда
	//	Область.Область(10, 2, 10, 19).ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
	//	КартинкаТекст = Область.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Текст);
	//	КартинкаТекст.Расположить(Область.Область(10, 2, 10, 18));
	//	КартинкаТекст.Высота = 3.8;
	//	КартинкаТекст.Шрифт = Новый Шрифт(,, Истина);
	//	КартинкаТекст.ГраницаСлева = Ложь;
	//	КартинкаТекст.ГраницаСправа = Ложь;
	//	КартинкаТекст.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
	//	КартинкаТекст.Текст = "Оценка покупателей ВВ " + Формат(Рейтинг, "ЧДЦ=1; ЧРГ=.; ЧГ=0") + " из 5";
	//КонецЕсли;	
	////---АК MIND
	
	//Если СтрДлина(Фишка) > 30 Тогда
	//	Область.Область(10, 2, 10, 3).Шрифт = Новый Шрифт(Область.Область(10, 2, 10, 3).Шрифт,, 10);
	//КонецЕсли;	
	
	//
	Возврат Область;
	
КонецФункции

Функция ПолучитьЦенник_80_60_ШтрихКод(Товар, Характеристика, Организация = "ООО ""Вкусвилл""") Экспорт
	
	Макет = Справочники.Номенклатура.ПолучитьМакет("Ценник_80_60_ШтрихКод"); 	
	
	ВнешняяКомпонента = ПодключитьВнешнююКомпонентуПечатиШтрихкода();
	
	НаименованиеДляЦенника = Товар.Наименование;  
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "   "	, " ");
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "  "	, " ");
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, " "	, Символы.ПС);
	ПозицияРазделителяДляЦенника = Товар.ПозицияРазделителяДляЦенника;
	
	Фишка = Товар.Фишка;
	Если НачалоДня(Товар.ДатаНачалаВыводаНаСинийЦенник) <= ТекущаяДата()
			И КонецДня(Товар.ДатаОкончанияВыводаНаСинийЦенник) >= ТекущаяДата() Тогда
		Если ЗначениеЗаполнено(Товар.ТекстВместоФишки) Тогда
			Фишка = СокрЛП(Товар.ТекстВместоФишки);
		КонецЕсли;	
	КонецЕсли;	
	ШтрихКод = "";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("УпаковкаДляЦенника"	, ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("УпаковкаДляЦенника"));
 	Запрос.УстановитьПараметр("Номенклатура"		, Товар);
	Запрос.УстановитьПараметр("ДатаЦен"				, ТекущаяДата());
	Запрос.УстановитьПараметр("Характеристика"		, Характеристика);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЗ_Запрос.Цена,
	|	ВЗ_Запрос.СрокГодности,
	|	ВЗ_Запрос.УпаковкаДляЦенника,
	|	ВЗ_Запрос.СтранаПроисхождения,
	|	ВЗ_Запрос.Номенклатура,
	|	ВЗ_Запрос.Характеристика,
	|	ЕСТЬNULL(ШтриховыеКоды.ШтрихКод, """") КАК ШтрихКод,
	|	ВЗ_Запрос.СрокГодностиНов,
	|	ВЗ_Запрос.ТипСрокаГодностиПараметрыПрописиНаРусском,
	|	ЕСТЬNULL(ВЗ_Запрос.Характеристика.СрокГодностиНеограничен, ЛОЖЬ) КАК СрокНеограничен
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ЦеныНоменклатурыСрезПоследних.Цена) КАК Цена,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СрокГодности)
	|					ТОГДА ЗначенияСвойствОбъектов.Значение
	|				ИНАЧЕ """"
	|			КОНЕЦ) КАК СрокГодности,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ЗначенияСвойствОбъектов.Свойство = &УпаковкаДляЦенника
	|					ТОГДА ЗначенияСвойствОбъектов.Значение
	|				ИНАЧЕ """"
	|			КОНЕЦ) КАК УпаковкаДляЦенника,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.СтранаПроисхождения)
	|					ТОГДА ЗначенияСвойствОбъектов.Значение
	|				ИНАЧЕ """"
	|			КОНЕЦ) КАК СтранаПроисхождения,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ХарактеристикиНоменклатуры.СрокГодности_ПослеИзготовления > 0
	|					ТОГДА ХарактеристикиНоменклатуры.СрокГодности_ПослеИзготовления
	|				ИНАЧЕ ХарактеристикиНоменклатуры.СрокГодности
	|			КОНЕЦ) КАК СрокГодностиНов,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ХарактеристикиНоменклатуры.СрокГодности_ПослеИзготовления > 0
	|					ТОГДА ЕСТЬNULL(ХарактеристикиНоменклатуры.ТипСрокаГодности_ПослеИзготовления.ПараметрыПрописиНаРусском, """")
	|				ИНАЧЕ ЕСТЬNULL(ХарактеристикиНоменклатуры.ТипСрокаГодности.ПараметрыПрописиНаРусском, """")
	|			КОНЕЦ) КАК ТипСрокаГодностиПараметрыПрописиНаРусском,
	|		МАКСИМУМ(ВЫБОР
	|				КОГДА ХарактеристикиНоменклатуры.СрокГодности_ПослеИзготовления > 0
	|					ТОГДА ЛОЖЬ
	|				ИНАЧЕ ЕСТЬNULL(ХарактеристикиНоменклатуры.СрокГодностиНеограничен, ЛОЖЬ)
	|			КОНЕЦ) КАК СрокНеограничен,
	|		СправочникНоменклатура.Ссылка КАК Номенклатура,
	|		ХарактеристикиНоменклатуры.Ссылка КАК Характеристика
	|	ИЗ
	|		Справочник.Номенклатура КАК СправочникНоменклатура
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|				ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|			ИЗ
	|				РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|						&ДатаЦен,
	|						Номенклатура = &Номенклатура
	|							И ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
	|							И ТипЦен = ЗНАЧЕНИЕ(Справочник.ТипыЦен.ОсновнойТипЦенПродаж)) КАК ЦеныНоменклатурыСрезПоследних) КАК ЦеныНоменклатурыСрезПоследних
	|			ПО СправочникНоменклатура.Ссылка = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|				ПО ХарактеристикиНоменклатуры.Ссылка = ЗначенияСвойствОбъектов.Объект
	|			ПО СправочникНоменклатура.Ссылка = ХарактеристикиНоменклатуры.Владелец
	|	ГДЕ
	|		СправочникНоменклатура.Ссылка = &Номенклатура
	|		И ХарактеристикиНоменклатуры.Ссылка = &Характеристика
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СправочникНоменклатура.Ссылка,
	|		ХарактеристикиНоменклатуры.Ссылка) КАК ВЗ_Запрос
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтриховыеКоды КАК ШтриховыеКоды
	|		ПО ВЗ_Запрос.Номенклатура = ШтриховыеКоды.Номенклатура
	|			И ВЗ_Запрос.Характеристика = ШтриховыеКоды.Характеристика
	|			И (ШтриховыеКоды.ВыведенИзМагазинов = ЛОЖЬ)";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		//СрокГодности 	= Выборка.СрокГодности;
		Если ЗначениеЗаполнено(Выборка.СрокГодностиНов) Тогда
			СрокГодности 	= ЧислоПрописью(Выборка.СрокГодностиНов, "НД=Ложь", Выборка.ТипСрокаГодностиПараметрыПрописиНаРусском);
			СрокГодности 	= СтрЗаменить(СрокГодности, " ", Символы.ПС);
			Если СтрЧислоСтрок(СрокГодности) > 0 Тогда
				СрокГодности = Формат(Выборка.СрокГодностиНов, "ЧГ=0") + " " + СтрПолучитьСтроку(СрокГодности, СтрЧислоСтрок(СрокГодности));
			КонецЕсли;
		КонецЕсли;
		Если Выборка.СрокНеограничен = Истина Тогда
			СрокГодности = "Не ограничен";
		КонецЕсли;	
		ВесОбъем			= Выборка.УпаковкаДляЦенника;
		Цена				= Выборка.Цена;
		СтранаПроисхождения = Выборка.СтранаПроисхождения;
		ШтрихКод 			= Выборка.ШтрихКод;
	КонецЕсли;
					
	Область = Макет.ПолучитьОбласть("Область");
	
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "ё", "е");
	НаименованиеДляЦенника = СтрЗаменить(НаименованиеДляЦенника, "р", "p");
	
	Если ПозицияРазделителяДляЦенника = 0 Тогда
		СтрокаНаименования1 = "";
		Для н = 0 по СтрЧислоСтрок(НаименованиеДляЦенника) Цикл
			СтрокаНаименования1 = СтрокаНаименования1 + СтрПолучитьСтроку(НаименованиеДляЦенника, н) + " ";
		КонецЦикла;
		СтрокаНаименования1 = СокрЛП(СтрокаНаименования1);
		
		Область.Параметры.СтрокаНаименования1 = ВРЕГ(СтрокаНаименования1);
	Иначе
		СтрокаНаименования1 = "";
		Для н = 0 по ПозицияРазделителяДляЦенника Цикл
			СтрокаНаименования1 = СтрокаНаименования1 + СтрПолучитьСтроку(НаименованиеДляЦенника, н) + " ";
		КонецЦикла;
		СтрокаНаименования1 = СокрЛП(СтрокаНаименования1);
		
		Область.Параметры.СтрокаНаименования1 = ВРЕГ(СтрокаНаименования1);
//		Результат.Вывести(Область);
		
		СтрокаНаименования2 = "";
		Для н = ПозицияРазделителяДляЦенника + 1 по СтрЧислоСтрок(НаименованиеДляЦенника) Цикл
			СтрокаНаименования2 = СтрокаНаименования2 + СтрПолучитьСтроку(НаименованиеДляЦенника, н) + " ";
		КонецЦикла;
		СтрокаНаименования2 = НРег(СокрЛП(СтрокаНаименования2));
		
		Область.Параметры.СтрокаНаименования2 = ВРЕГ(СтрокаНаименования2);
	КонецЕсли;
	Если Найти(ВесОбъем, "л") > 0 Тогда
		Область.Параметры.ВесОбъемЗаголовок = "Объем";
	ИначеЕсли Найти(ВесОбъем, "г") > 0 Тогда
		Область.Параметры.ВесОбъемЗаголовок = "Вес";
	Иначе
		Область.Параметры.ВесОбъемЗаголовок = "Вес/Объем";
	КонецЕсли;
	
	//Область.Параметры.Орг 			= Организация;
	Область.Параметры.Орг 	= "ООО ""Вкусвилл""";
	Область.Параметры.СрокГодности 	= СрокГодности;
	Область.Параметры.ВесОбъем 		= ВесОбъем;
	Область.Параметры.Страна 		= СтранаПроисхождения;
	Область.Параметры.Цена 			= Формат(Цена, "ЧГ=0");
	
	Область.Параметры.Фишка = Фишка;
	
	//Если СтрДлина(Фишка) > 30 Тогда
	//	Область.Область(10, 2, 10, 3).Шрифт = Новый Шрифт(Область.Область(10, 2, 10, 3).Шрифт,, 10);
	//КонецЕсли;
	
	Если СтрДлина(ШтрихКод) < 13 Тогда
		
		КоличествоНедостающихСимволов = 12 - СтрДлина(ШтрихКод);
		Если КоличествоНедостающихСимволов > 0  Тогда
			ШтрихКод = ШтрихКод + Прав("0000000000001", КоличествоНедостающихСимволов);
		КонецЕсли;
	КонецЕсли;
	Если СтрДлина(ШтрихКод) = 12 Тогда
		ШтрихКод = ШтрихКод+ 
			ВнешниеДанные.КонтрольныйСимволEAN(ШтрихКод, 13);
	КОнецЕсли;
		
	Если СтрДлина(ШтрихКод) > 7 Тогда
		ШтрихКод = Прав(ШтрихКод, СтрДлина(ШтрихКод) - 2);
		ШтрихКод = ?(Товар.Весовой, "96", "97") + ШтрихКод;
		ШтрихКод = ?(СтрДлина(ШтрихКод) = 12, ШтрихКод, Лев(ШтрихКод, СтрДлина(ШтрихКод) - 1));
		ШтрихКод = ШтрихКод + ВнешниеДанные.КонтрольныйСимволEAN(ШтрихКод, 13);
	ИначеЕсли СтрДлина(ШтрихКод) = 7 Тогда
		ШтрихКод = Прав(ШтрихКод, СтрДлина(ШтрихКод) - 2);
		ШтрихКод = "96" + ШтрихКод;
	КонецЕсли;
	

	//
	Рисунок = Область.Рисунки["ШтрихКод"];
	
	Параметры = Новый Структура();
	Параметры.Вставить("Ширина"			, Рисунок.Ширина);
	Параметры.Вставить("Высота"			, Рисунок.Высота);
	Параметры.Вставить("ТипКода"		, 1);
	Параметры.Вставить("ОтображатьТекст", Истина);
	Параметры.Вставить("РазмерШрифта"	, 14);
	Параметры.Вставить("Штрихкод"		, Штрихкод);
	
	Рисунок.Картинка = ОбщегоНазначенияКлиентСервер.ПолучитьКартинкуШтрихкода(ВнешняяКомпонента, Параметры);
	
	Возврат Область;
	
КонецФункции

Функция ПолучитьНоменклатуруПоЧастиИмени(ЧастьИмени) Экспорт
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Наименование", "%" + ЧастьИмени + "%");
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 50
	|	Номенклатура.Ссылка
	|ИЗ
	|	Справочник.Номенклатура КАК Номенклатура
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(ВыкладкаПланограммы.МестоВыкладки) КАК МестоВыкладки,
	|			ВыкладкаПланограммы.Номенклатура КАК Ссылка
	|		ИЗ
	|			РегистрСведений.ВыкладкаПланограммы КАК ВыкладкаПланограммы
	|		ГДЕ
	|			ВыкладкаПланограммы.Планограмма.НеАктуальная = ЛОЖЬ
	|			И ВыкладкаПланограммы.ТоварВыведен = ЛОЖЬ
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ВыкладкаПланограммы.Номенклатура) КАК ВЗ_Запрос
	|		ПО Номенклатура.Ссылка = ВЗ_Запрос.Ссылка
	|ГДЕ
	|	ВЗ_Запрос.МестоВыкладки <> ЗНАЧЕНИЕ(Справочник.МестаВыкладки.ПустаяСсылка)
	|	И Номенклатура.Выведена = ЛОЖЬ
	|	И Номенклатура.Наименование ПОДОБНО &Наименование
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура.Наименование";
				   
	Выборка = Запрос.Выполнить().Выбрать();
	СписокВозврат = Новый Массив();
	Пока Выборка.Следующий() Цикл
		СписокВозврат.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат СписокВозврат;
	
КонецФункции	

Процедура УстановитьНомерПоНумератору(Товар, Характеристика) Экспорт
	
	//+++АК MIND 2018.02.06 в алгоритме зачем-то учитывает уже использованные штрих-коды по штучному товару, проанализировав все аспекты пришел к выводу
	//что можно отключить этот анализ, иначе вскоре будет проблема нехватки нумераторов
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ШтриховыеКоды.ШтрихКод
	|ИЗ
	|	РегистрСведений.ШтриховыеКоды КАК ШтриховыеКоды
	|ГДЕ
	|	ШтриховыеКоды.ШтрихКод ПОДОБНО ""210010%""
	|	И ЛОЖЬ //намеренное отключение результата запроса
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НумераторШтрихКодовКоробок.Нумератор
	|ИЗ
	|	РегистрСведений.НумераторШтрихКодовКоробок КАК НумераторШтрихКодовКоробок";
				   
	Результаты = Запрос.ВыполнитьПакет();
	
	//
	Выборка = Результаты[0].Выбрать();
	ТабПоследовательностьНомеров = Новый ТаблицаЗначений();
	ТабПоследовательностьНомеров.Колонки.Добавить("Номер");
	ТабПоследовательностьНомеров.Колонки.Добавить("ШтрихКод");
	ТабПоследовательностьНомеров.Колонки.Добавить("Разница");
	Пока Выборка.Следующий() Цикл
		Номер = Лев(Прав(Выборка.ШтрихКод, 5), 4);
		Попытка
			Пока Лев(Номер, 1) = "0" Цикл
				Номер = Сред(Номер, 2);
			КонецЦикла;	
			Номер = Число(Номер);
			СтрокаДоб = ТабПоследовательностьНомеров.Добавить();
			СтрокаДоб.Номер = Число(Номер);
			СтрокаДоб.ШтрихКод = Выборка.ШтрихКод;
		Исключение
		КонецПопытки;	
	КонецЦикла;
	
	Выборка = Результаты[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДоб = ТабПоследовательностьНомеров.Добавить();
		СтрокаДоб.Номер = Выборка.Нумератор;
	КонецЦикла;
	
	ТабПоследовательностьНомеров.Сортировать("Номер");
	Для н = 1 По ТабПоследовательностьНомеров.Количество() - 1 Цикл
		ТабПоследовательностьНомеров[н - 1].Разница = ТабПоследовательностьНомеров[н].Номер - ТабПоследовательностьНомеров[н - 1].Номер;
	КонецЦикла;
	
	НайденныйНомер = 0;
	Для н = 1 По ТабПоследовательностьНомеров.Количество() - 2 Цикл
		Если ТабПоследовательностьНомеров[н].Разница > 1 Тогда
			НайденныйНомер = ТабПоследовательностьНомеров[н].Номер + 1;
			Прервать;
		КонецЕсли;	
	КонецЦикла;
	
	Если НайденныйНомер = 0 Тогда
		НайденныйНомер = ТабПоследовательностьНомеров[ТабПоследовательностьНомеров.Количество() - 1].Номер + 1;
	КонецЕсли;	
	
	Если НайденныйНомер > 0 Тогда
		Набор = РегистрыСведений.ШтриховыеКоды_НастройкиФормирования.СоздатьНаборЗаписей();
		Набор.Прочитать();
		Если Набор[0].СчетчикШКШтучногоТовара < НайденныйНомер Тогда
			Набор[0].СчетчикШКШтучногоТовара = НайденныйНомер;
			Набор.Записать();
		КонецЕсли;	
		Запись = РегистрыСведений.НумераторШтрихКодовКоробок.СоздатьМенеджерЗаписи();
		Запись.Номенклатура 	= Товар;
		Запись.Характеристика 	= Характеристика;
		Запись.Нумератор 		= НайденныйНомер;
		Запись.Записать();
	КонецЕсли;	
	
КонецПроцедуры	

Процедура ОсвободитьНомерПоНумератору(Товар, Характеристика) Экспорт
	
	Набор = РегистрыСведений.НумераторШтрихКодовКоробок.СоздатьНаборЗаписей();
	Набор.Отбор.Номенклатура.Установить(Товар);
	Набор.Отбор.Характеристика.Установить(Характеристика);
	Набор.Записать();
	
КонецПроцедуры	

Функция ПолучитьОтчетПоАктуальнымЯрлычкам() Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекДата", НачалоДня(ТекущаяДата()));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НоменклатураЯрлыки.Ярлык,
	|	НоменклатураЯрлыки.ДатаНачала,
	|	НоменклатураЯрлыки.ДатаОкончания,
	|	НоменклатураЯрлыки.Ссылка
	|ИЗ
	|	Справочник.Номенклатура.Ярлыки КАК НоменклатураЯрлыки
	|ГДЕ
	|	&ТекДата МЕЖДУ НоменклатураЯрлыки.ДатаНачала И НоменклатураЯрлыки.ДатаОкончания
	|
	|УПОРЯДОЧИТЬ ПО
	|	НоменклатураЯрлыки.Ярлык.Наименование,
	|	НоменклатураЯрлыки.Ссылка.Наименование";
				   
	Макет = Справочники.Номенклатура.ПолучитьМакет("Ярлыки");
	ТабДок = Новый ТабличныйДокумент;
	
	Область = Макет.ПолучитьОбласть("ШапкаДействующие");
	ТабДок.Вывести(Область);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ярлык") Цикл
		Область = Макет.ПолучитьОбласть("Ярлык");
		Область.Параметры.Ярлык = Выборка.Ярлык;
		ТабДок.Вывести(Область);
		Пока Выборка.Следующий() Цикл
			Область = Макет.ПолучитьОбласть("Товар");
			Область.Параметры.Товар 	= Выборка.Ссылка;
			Область.Параметры.ДатаНач 	= Выборка.ДатаНачала;
			Область.Параметры.ДатаКон 	= Выборка.ДатаОкончания;
			ТабДок.Вывести(Область);
		КонецЦикла;	
	КонецЦикла;
	
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекДата", НачалоДня(ТекущаяДата()));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НоменклатураЯрлыки.Ярлык,
	|	НоменклатураЯрлыки.ДатаНачала,
	|	НоменклатураЯрлыки.ДатаОкончания,
	|	НоменклатураЯрлыки.Ссылка
	|ИЗ
	|	Справочник.Номенклатура.Ярлыки КАК НоменклатураЯрлыки
	|ГДЕ
	|	РАЗНОСТЬДАТ(НоменклатураЯрлыки.ДатаОкончания, &ТекДата, ДЕНЬ) МЕЖДУ 1 И 4
	|
	|УПОРЯДОЧИТЬ ПО
	|	НоменклатураЯрлыки.Ярлык.Наименование,
	|	НоменклатураЯрлыки.Ссылка.Наименование";
				   
	Область = Макет.ПолучитьОбласть("ШапкаЗакончившие");
	ТабДок.Вывести(Область);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Ярлык") Цикл
		Область = Макет.ПолучитьОбласть("Ярлык");
		Область.Параметры.Ярлык = Выборка.Ярлык;
		ТабДок.Вывести(Область);
		Пока Выборка.Следующий() Цикл
			Область = Макет.ПолучитьОбласть("Товар");
			Область.Параметры.Товар 	= Выборка.Ссылка;
			Область.Параметры.ДатаНач 	= Выборка.ДатаНачала;
			Область.Параметры.ДатаКон 	= Выборка.ДатаОкончания;
			ТабДок.Вывести(Область);
		КонецЦикла;	
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции	

//+++АК Susk (Суслин К.В.) ИП-00019275 2018.07.24
Функция ПолучитьСчетаУчетаОбъектов(СписокНоменклатуры, НаДату = Неопределено, СоответствиеНоменклатураЗначРекв = Неопределено) Экспорт
	
	//получаем счета учета по регистру для позиций
	СоответствиеСчетовУчетаПоРегистру = ПолучитьСчетУчетаДляСпискаНоменклатуры(СписокНоменклатуры, НаДату);	
	//получаем значения реквизитов для позиций
	Если СоответствиеНоменклатураЗначРекв = Неопределено Тогда
		СоответствиеНоменклатураЗначРекв = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(СписокНоменклатуры, "ВидНоменклатуры,ТипТовара,ВидМатериала");
	КонецЕсли;
	//получаем соответствие фин-бух счетов
	СоответствиеДанныхОСчетеБУ = БухгалтерскийУчетВызовСервераПовтИспУФ.СоответствиеСчетовФинБух();
	
	СоответствиеНоменклатураСтруктураСчетов = Новый Соответствие; //это мы возвращаем, ключ номенклатура, значение - структура счетов номенклатуры
	
	Для Каждого ЭлементСоответствия Из СоответствиеНоменклатураЗначРекв Цикл
		ЗначенияРеквизитов = ЭлементСоответствия.Значение;
		Номенклатура = ЭлементСоответствия.Ключ;
		
		СчетУчетаФин = ПолучитьСчетУчетаПоУсловиям(Номенклатура, ЗначенияРеквизитов, СоответствиеСчетовУчетаПоРегистру);
		
		СчетаУчета = Новый Структура;
		СчетУчетаБУ = ПолучитьСчетУчетаБУ(СчетУчетаФин, СоответствиеДанныхОСчетеБУ);
	
		СчетаУчета.Вставить("СчетУчета"		, СчетУчетаФин);
		СчетаУчета.Вставить("СчетУчетаБУ"	, СчетУчетаБУ);
		СчетаУчета.Вставить("СчетУчетаНУ"	, СчетУчетаБУ);
		СчетаУчета.Вставить("СчетЗатрат"	, СчетУчетаФин);
		СчетаУчета.Вставить("СчетЗатратБУ"	, СчетУчетаБУ);
		СчетаУчета.Вставить("СчетЗатратНУ"	, СчетУчетаБУ);
		
		СоответствиеНоменклатураСтруктураСчетов.Вставить(Номенклатура, СчетаУчета);
		
	КонецЦикла;
	
	Возврат СоответствиеНоменклатураСтруктураСчетов;
	
КонецФункции	

//+++АК Susk (Суслин К.В.) ИП-00019275 2018.07.24
Функция ПолучитьСчетУчетаПоУсловиям(Номенклатура, ЗначенияРеквизитов, СоответствиеСчетовУчетаПоРегистру) Экспорт
			
	ВидНоменклатуры = ЗначенияРеквизитов.ВидНоменклатуры;
	ТипТовара = ЗначенияРеквизитов.ТипТовара;
	ВидМатериала = ЗначенияРеквизитов.ВидМатериала;
	
	Если ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Товар Тогда
		Если ТипТовара = Перечисления.ТипыТоваров.Упаковка Тогда
			СчетУчета = ПланыСчетов.Финансовый.МатералыДляВыпуска;			
		Иначе
			СчетУчета = ПланыСчетов.Финансовый.Товары;
		КонецЕсли;
	ИначеЕсли ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Материал Тогда
		СчетУчета = ПланыСчетов.Финансовый.ПрочиеМатериалы;		
		СчетУчетаИзРегистра = ПолучитьСчетУчетаНоменклатурыИзСоответствияСчетовПоРегистру(Номенклатура, СоответствиеСчетовУчетаПоРегистру);
		
		Если СчетУчетаИзРегистра <> СчетУчета И НЕ СчетУчетаИзРегистра.Пустая() Тогда
			СчетУчета = СчетУчетаИзРегистра;
		КонецЕсли;
		
	ИначеЕсли ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Оборудование Тогда
		
		СчетУчета = ПланыСчетов.Финансовый.ПустаяСсылка();
		
		СчетУчетаИзРегистра = ПолучитьСчетУчетаНоменклатурыИзСоответствияСчетовПоРегистру(Номенклатура, СоответствиеСчетовУчетаПоРегистру);
		
		Если СчетУчетаИзРегистра <> СчетУчета И НЕ СчетУчетаИзРегистра.Пустая() Тогда
			СчетУчета = СчетУчетаИзРегистра;
		КонецЕсли;
		
	Иначе
		СчетУчета = ПолучитьСчетУчетаНоменклатурыИзСоответствияСчетовПоРегистру(Номенклатура, СоответствиеСчетовУчетаПоРегистру);
	КонецЕсли;
	
	Возврат СчетУчета;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

//+++АК LATV 2018.10.31 ИП-00020211
Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)

	Если Параметры.Свойство("ДополнительныеПараметры")
	   И Параметры.ДополнительныеПараметры = "ПодборДляМагазина" Тогда
		СтандартнаяОбработка = Ложь;
		ДанныеВыбора = ВыбратьТоварыДляМагазина(Параметры);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПолучениеДанныхВыбора

//+++АК LATV 2018.10.31 ИП-00020211
Функция ВыбратьТоварыДляМагазина(Параметры)

	ДанныеВыбора = Новый СписокЗначений;
	
	// Это продавец
	Попытка
		ЭтоПродавец = ЗначениеЗаполнено(ПараметрыСеанса.ТекущийПродавец)
	Исключение
		ЭтоПродавец = Ложь;
	КонецПопытки;
	
	РольПолныеПрава	= РольДоступна("ПолныеПрава");
	РольПродавец	= РольДоступна("Продавец");
	
	ЭтоПродавец = ЭтоПродавец И РольПродавец И Не РольПолныеПрава;
	
	// Строка поиска
	СтрокаПоиска = Параметры.СтрокаПоиска;
	Если Параметры.Свойство("ТекстПоиска") Тогда
		СтрокаПоиска = Параметры.ТекстПоиска;
	КонецЕсли;
	
	// Поиск
	Запрос = Новый Запрос;
	
	Если Параметры.Свойство("ЭтоХозТовары") И Параметры.ЭтоХозТовары Тогда
		
		Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 50
			|	Номенклатура.Ссылка,
			|	Номенклатура.Наименование,
			|	Номенклатура.Код,
			|	Номенклатура.ПометкаУдаления
			|ИЗ
			|	Справочник.Номенклатура КАК Номенклатура
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеТиповРозничныхТочекИТорговыхМарок КАК СоответствиеТиповРозничныхТочекИТорговыхМарок
			|		ПО Номенклатура.ТорговаяМарка = СоответствиеТиповРозничныхТочекИТорговыхМарок.ТорговаяМарка
			|ГДЕ
			|	НЕ Номенклатура.Выведена
			|	И Номенклатура.ХозТовар
			|	И Номенклатура.Наименование ПОДОБНО &Наименование
			|	И НЕ Номенклатура.ПометкаУдаления
			|	И ВЫБОР
			|			КОГДА &ЭтоПродавец
			|				ТОГДА Номенклатура.ВидНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Товар)
			|						ИЛИ Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Товар)
			|							И СоответствиеТиповРозничныхТочекИТорговыхМарок.ТипРозничнойТочки = &ТипРозничнойТочки
			|			ИНАЧЕ ИСТИНА
			|		КОНЕЦ
			|
			|УПОРЯДОЧИТЬ ПО
			|	Номенклатура.Наименование";
		
	Иначе
		
		Запрос.Текст =
			"ВЫБРАТЬ ПЕРВЫЕ 50
			|	НоменклатураСпр.Ссылка,
			|	НоменклатураСпр.Наименование,
			|	НоменклатураСпр.Код,
			|	НоменклатураСпр.ПометкаУдаления
			|ИЗ
			|	Справочник.Номенклатура КАК НоменклатураСпр
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ВыкладкаПланограммы КАК ВыкладкаПланограммы
			|		ПО (ВыкладкаПланограммы.Планограмма.НеАктуальная = ЛОЖЬ)
			|			И (ВыкладкаПланограммы.ТоварВыведен = ЛОЖЬ)
			|			И НоменклатураСпр.Ссылка = ВыкладкаПланограммы.Номенклатура
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствиеТиповРозничныхТочекИТорговыхМарок КАК СоответствиеТиповРозничныхТочекИТорговыхМарок
			|		ПО (ВыкладкаПланограммы.Номенклатура.ТорговаяМарка = СоответствиеТиповРозничныхТочекИТорговыхМарок.ТорговаяМарка)
			|ГДЕ
			|	НЕ НоменклатураСпр.Выведена
			|	И НоменклатураСпр.Наименование ПОДОБНО &Наименование
			|	И НЕ НоменклатураСпр.ПометкаУдаления
			|	И ВЫБОР
			|			КОГДА &ЭтоПродавец
			|				ТОГДА ВЫБОР
			|						КОГДА НоменклатураСпр.ЭтоГруппа
			|							ТОГДА ИСТИНА
			|						ИНАЧЕ СоответствиеТиповРозничныхТочекИТорговыхМарок.ТипРозничнойТочки = &ТипРозничнойТочки
			|					КОНЕЦ
			|			ИНАЧЕ ИСТИНА
			|		КОНЕЦ
			|
			|СГРУППИРОВАТЬ ПО
			|	НоменклатураСпр.Ссылка,
			|	НоменклатураСпр.Наименование,
			|	НоменклатураСпр.Код,
			|	НоменклатураСпр.ПометкаУдаления
			|
			|ИМЕЮЩИЕ
			|	МАКСИМУМ(ВыкладкаПланограммы.МестоВыкладки) <> ЗНАЧЕНИЕ(Справочник.МестаВыкладки.ПустаяСсылка)
			|
			|УПОРЯДОЧИТЬ ПО
			|	НоменклатураСпр.Наименование";
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ЭтоПродавец",		ЭтоПродавец);
	Запрос.УстановитьПараметр("ТипРозничнойТочки",	ПараметрыСеанса.ТорговаяТочкаПоАйпи.ТипРозничнойТочки);
	Запрос.УстановитьПараметр("Наименование",		"%" + СтрокаПоиска + "%");
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Значение = Новый Структура();
			Значение.Вставить("Значение",			Выборка.Ссылка);
			Значение.Вставить("ПометкаУдаления",	Выборка.ПометкаУдаления);
			
			Представление = ФорматированнаяСтрокаПоиска(Выборка.Наименование + " (" + Выборка.Код + ")", СтрокаПоиска);
			
			НоваяСтрока = ДанныеВыбора.Добавить(Значение, Представление);
			
		КонецЦикла;
	КонецЕсли;
	
	Возврат ДанныеВыбора;

КонецФункции

//+++АК LATV 2018.10.31 ИП-00020211
Функция ФорматированнаяСтрокаПоиска(СтрокаДляРазбора, СтрокаПоиска)

	ЦветВыделения	= ЦветаСтиля.ЦветОсобогоТекста;
	ШрифтВыделения	= Неопределено;
	
	СтрокаВВерхнемРегистре			= Врег(СтрокаДляРазбора);
	СтрокаПоискаВВерхнемРегистре	= Врег(СтрокаПоиска);
	
	ЧастиСтроки = Новый Массив;
	Для Стр = 1 По СтрЧислоВхождений(СтрокаВВерхнемРегистре, СтрокаПоискаВВерхнемРегистре) Цикл
		
		Индекс = Найти(СтрокаВВерхнемРегистре, СтрокаПоискаВВерхнемРегистре);
		Если Индекс <> 1 Тогда
			ЧастиСтроки.Добавить(Сред(СтрокаДляРазбора, 1, Индекс - 1));
		КонецЕсли;
		
		ЧастиСтроки.Добавить(Новый ФорматированнаяСтрока(Сред(СтрокаДляРазбора, Индекс, СтрДлина(СтрокаПоиска)), ШрифтВыделения, ЦветВыделения));
		
		СтрокаДляРазбора		= Прав(СтрокаДляРазбора, СтрДлина(СтрокаДляРазбора) - (Индекс + (СтрДлина(СтрокаПоиска) - 1)));
		СтрокаВВерхнемРегистре	= Прав(СтрокаВВерхнемРегистре, СтрДлина(СтрокаВВерхнемРегистре) - (Индекс + (СтрДлина(СтрокаПоиска) - 1)));
	КонецЦикла;
	
	ЧастиСтроки.Добавить(СтрокаДляРазбора);
	
	Возврат Новый ФорматированнаяСтрока(ЧастиСтроки);

КонецФункции

#КонецОбласти

//+++АК Susk (Суслин К.В.) ИП-00019275  2018.07.24 
Функция ПолучитьСчетУчетаДляСпискаНоменклатуры(СписокНоменклатуры, ДатаСреза = Неопределено)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаСреза", ?(НЕ ЗначениеЗаполнено(ДатаСреза), ТекущаяДата(), ДатаСреза));
	Запрос.УстановитьПараметр("Товары", СписокНоменклатуры);
	
	Запрос.Текст = "ВЫБРАТЬ
		               |	СчетаУчетаНоменклатурыСрезПоследних.Номенклатура,
		               |	СчетаУчетаНоменклатурыСрезПоследних.СчетУчета
		               |ИЗ
		               |	РегистрСведений.СчетаУчетаНоменклатуры.СрезПоследних(&ДатаСреза, Номенклатура В (&Товары)) КАК СчетаУчетаНоменклатурыСрезПоследних";
	
	ТаблицаСчетов = Запрос.Выполнить().Выгрузить();
	
	СоответствиеСчетНоменклатура = Новый Соответствие;
	
	Для Каждого Стр Из ТаблицаСчетов Цикл
		СоответствиеСчетНоменклатура.Вставить(Стр.Номенклатура, Стр.СчетУчета)
	КонецЦикла;
	
	Возврат СоответствиеСчетНоменклатура;
		
КонецФункции                             

//+++АК Susk (Суслин К.В.) ИП-00019275 2018.07.24 
Функция ПолучитьСчетУчетаБУ(СчетУчетаФин, СоответствиеДанныхОСчетеБУ)
	
	ЗначениеСоответствия = СоответствиеДанныхОСчетеБУ.Получить(СчетУчетаФин);
	
	Если ЗначениеСоответствия <> Неопределено Тогда
		СчетБу = ЗначениеСоответствия[0]["Счетбух"];
	Иначе
		СчетБу = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
	КонецЕсли;
	
	Возврат СчетБУ;		
	
КонецФункции

//+++АК Susk (Суслин К.В.) ИП-00019275 2018.07.24
Функция ПолучитьСчетУчетаНоменклатурыИзСоответствияСчетовПоРегистру(Номенклатура, СоответствиеСчетовУчетаПоРегистру)
	
	НайдЭл = СоответствиеСчетовУчетаПоРегистру.Получить(Номенклатура);
	
	Если НайдЭл = Неопределено Тогда
		Возврат ПланыСчетов.Финансовый.ПустаяСсылка();
	Иначе
		Возврат НайдЭл;
	КонецЕсли;
	
КонецФункции

#КонецОбласти
