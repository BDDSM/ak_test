&НаСервере
Процедура УстановитьОтборПоНомеру()
	ОтборПоКарте = История.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборПоКарте.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("Номер");
	ОтборПоКарте.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
	ОтборПоКарте.Использование		= Истина;
	ОтборПоКарте.ПравоеЗначение		= Объект.Ссылка;
	ОтборПоКарте.РежимОтображения	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	 УстановитьОтборПоНомеру();
     ОпределитьПривязку();
	 Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
	       Объект.Используется=Истина;
	 КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ОпределитьПривязку()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПривязкаТелефоновСрезПоследних.Привязка,
		|	ПривязкаТелефоновСрезПоследних.ДатаПриказа,
		|	ПривязкаТелефоновСрезПоследних.НомерПриказа,
		|	ПривязкаТелефоновСрезПоследних.Назначение
		|ИЗ
		|	РегистрСведений.ПривязкаТелефонов.СрезПоследних(, Номер = &Номер) КАК ПривязкаТелефоновСрезПоследних";

	Запрос.УстановитьПараметр("Номер", Объект.Ссылка);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Выдан=ВыборкаДетальныеЗаписи.Привязка;
		ДатаПриказа=ВыборкаДетальныеЗаписи.ДатаПриказа;
		НомерПриказа=ВыборкаДетальныеЗаписи.НомерПриказа;
		Назначение=ВыборкаДетальныеЗаписи.Назначение;
	КонецЦикла;
КонецПроцедуры
 
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	УстановитьОтборПоНомеру();
	ОпределитьПривязку();
	
	//+++ АК bara #16994.002	
	Служебный = Справочники.НазначенияИспользованияSIMКарт.СлужебныйТелефон;
	
	Если ЗначениеЗаполнено(Выдан)
		И ТипЗнч(Выдан) = Тип("СправочникСсылка.СтруктурныеЕдиницы")
		И Назначение = Служебный
		И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если Выдан.ТелефонныйНомер1 <> Прав(СокрЛП(Объект.Код), 10) Тогда 
			СпрОбъект = Выдан.ПолучитьОбъект();
			СпрОбъект.ОбменДанными.Загрузка = Истина;
			СпрОбъект.ТелефонныйНомер1 = Прав(СокрЛП(Объект.Код), 10);
			СпрОбъект.Записать();				
		КонецЕсли;			
	ИначеЕсли
		ЗначениеЗаполнено(Выдан)
		И ТипЗнч(Выдан) <> Тип("СправочникСсылка.СтруктурныеЕдиницы")
		И Назначение = Служебный
		И ЗначениеЗаполнено(Объект.Код)
		Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтруктурныеЕдиницы.Ссылка
		|ИЗ
		|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
		|ГДЕ
		|	СтруктурныеЕдиницы.ТелефонныйНомер1 = &ТелефонныйНомер1";
		
		Запрос.УстановитьПараметр("ТелефонныйНомер1", Прав(СокрЛП(Объект.Код), 10));
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СпрОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
			СпрОбъект.ОбменДанными.Загрузка = Истина;
			СпрОбъект.ТелефонныйНомер1 = "";
			СпрОбъект.Записать();
		КонецЦикла;			
	КонецЕсли;	
	//---	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если НЕ ПравильныйНомер(Объект.Код) Тогда
		Отказ=Истина;
		Предупреждение("Номер должен состоять из 11 цифр!");
	КонецЕсли;
	Объект.Наименование = Объект.Код;
КонецПроцедуры

&НаКлиенте
Функция ПравильныйНомер(Номер)
	Попытка
		RegExp = Новый COMОбъект("VBScript.RegExp");
	    RegExp.Pattern =  "^[0-9]{11}$";
		Возврат RegExp.Test(Номер);
	Исключение
		Возврат Истина
	КонецПопытки;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЦветРамки()
	Возврат ЦветаСтиля.ЦветРамки;	
КонецФункции

&НаКлиенте
Процедура КодПриИзменении(Элемент)
	Элементы.Код.ЦветРамки = ?(ПравильныйНомер(Объект.Код), ПолучитьЦветРамки(), WebЦвета.Красный);
КонецПроцедуры


&НаСервере
Процедура ПриИзмененииНаСервере()
	 ТелефоннаяКнига.ПроверитьТелефонПоРегистрам(Объект.Ссылка);
КонецПроцедуры


&НаКлиенте
Процедура ИсторияПриИзменении(Элемент)
	ПриИзмененииНаСервере();
    ОпределитьПривязку();
КонецПроцедуры

&НаКлиенте
Процедура ИсторияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если ЭтаФорма.Модифицированность Тогда
		Если Вопрос("Объект будет записан. Продолжить?",РежимДиалогаВопрос.ДаНетОтмена) = КодВозвратаДиалога.Да Тогда
			ЭтаФорма.Записать();
		Иначе
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИсторияПослеУдаления(Элемент)
	Оповестить("Изменена привязка номера");
КонецПроцедуры

&НаКлиенте
Процедура КартинкиПриАктивизацииСтроки(Элемент)
	
	Картинка = Новый Картинка;
	ТекСтрока = Элементы.Картинки.ТекущиеДанные;
	Если ТекСтрока <> Неопределено Тогда
		Если ТекСтрока.ВнесеныИзменения Тогда
			УстановитьКартинкуИзСтроки(ТекСтрока.КлючСтроки);
		Иначе
			УстановитьКартинкуИзФайла(Новый Структура("КлючСтроки, Расширение", ТекСтрока.КлючСтроки, ТекСтрока.Расширение), Объект.Ссылка);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КартинкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	СтруктураВозврат = ОткрытьФормуМодально("Справочник.Номенклатура.Форма.ФормаВыбораФайлаКартинки");
	Если СтруктураВозврат <> Неопределено
			И СтруктураВозврат.БылВыборФайла Тогда
		Файл = Новый Файл(СтруктураВозврат.ИмяФайла);
		СтрокаДоб = Объект.Картинки.Добавить();
		СтрокаДоб.ИД = ОбщегоНазначенияСервер.ПолучитьНовыйУникальныйИдентификатор("Номенклатура.Картинки", "ИД") + СтрокаДоб.НомерСтроки;
		СтрокаДоб.КраткоеИмяФайла = Файл.ИмяБезРасширения;
		СтрокаДоб.Расширение = Файл.Расширение;
		СтрокаДоб.ВнесеныИзменения = Истина;
		СтрокаДоб.КлючСтроки = Строка(Новый УникальныйИдентификатор);
		//СтрокаДоб.ХранилищеКЗаписи = Новый ХранилищеЗначения(Новый ДвоичныеДанные(СтруктураВозврат.ИмяФайла));
		СтрокаДоб.Размер = Файл.Размер();
		
		СтрокаИзм = ТаблицаИзмененныхКартинок.Добавить();
		СтрокаИзм.КлючСтроки = СтрокаДоб.КлючСтроки;
		СтрокаИзм.Картинка = Новый Картинка(СтруктураВозврат.ИмяФайла);
	КонецЕсли;
	
КонецПроцедуры


&НаСервере
Функция УстановитьКартинкуИзФайла(ТекСтрока, Ссылка)
	
	КаталогКЗаписи = Константы.КаталогХраненияФайловКартинок.Получить();
	Если Прав(КаталогКЗаписи, 1) <> "\" Тогда
		КаталогКЗаписи = КаталогКЗаписи + "\";
	КонецЕсли;	
	ИмяФайла = КаталогКЗаписи + Строка(Ссылка.УникальныйИдентификатор()) + "_" + Строка(ТекСтрока.КлючСтроки) + ?(Лев(ТекСтрока.Расширение, 1) = ".", "", ".") + ТекСтрока.Расширение;
	
	ПолеКартинкиТекСтроки = ПоместитьВоВременноеХранилище(Новый Картинка(ИмяФайла));
	
КонецФункции

&НаСервере
Функция УстановитьКартинкуИзСтроки(КлючСтроки)
	
	СтрокиСФайлом = ТаблицаИзмененныхКартинок.НайтиСтроки(Новый Структура("КлючСтроки", КлючСтроки));
	
	Если СтрокиСФайлом.Количество() > 0 Тогда                                                            
		ПолеКартинкиТекСтроки = ПоместитьВоВременноеХранилище(СтрокиСФайлом[0].Картинка);
	Иначе	
		ПолеКартинкиТекСтроки = "";
	КонецЕсли;	
	
КонецФункции

