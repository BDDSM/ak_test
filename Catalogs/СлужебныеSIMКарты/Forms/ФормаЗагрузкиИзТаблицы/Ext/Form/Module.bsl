&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Макет = Справочники.СлужебныеSIMКарты.ПолучитьМакет("Макет");
	Область = Макет.ПолучитьОбласть("Область1");
	ТаблДок.Вывести(Область);
	ОператорПоКоду = Истина;
КонецПроцедуры


&НаКлиенте
Процедура Прочитать(Команда)
	ПрочитатьНаСервере();
КонецПроцедуры


Функция ОчиститьНомер(Номер)
	ЧистыйНомер = "";
	Для Ном = 1 По СтрДлина(Номер) Цикл
		Сим = Сред(Номер, Ном, 1);
		Если Найти("0123456789", Сим)>0 Тогда
			ЧистыйНомер = ЧистыйНомер + Сим;
		КонецЕсли;
	КонецЦикла;
	Возврат ЧистыйНомер;
КонецФункции


&НаСервере
Процедура ПрочитатьНаСервере()
	
	ТаблЗнач.Очистить();
	Для Стр = 2 по ТаблДок.ВысотаТаблицы Цикл
		Номер				= СокрЛП(ТаблДок.Область(Стр,1,Стр,1).Текст);
		Оператор			= СокрЛП(ТаблДок.Область(Стр,2,Стр,2).Текст);
		Тариф				= СокрЛП(ТаблДок.Область(Стр,3,Стр,3).Текст);
		ГС					= НРег(СокрЛП(ТаблДок.Область(Стр,4,Стр,4).Текст));
		НазначениеСтрока	= СокрЛП(ТаблДок.Область(Стр,5,Стр,5).Текст);
		ОбъектСтрока		= СокрЛП(ТаблДок.Область(Стр,6,Стр,6).Текст);
		
		Номер							= ОчиститьНомер(Номер);
		НоваяСтрока						= ТаблЗнач.Добавить();
		НоваяСтрока.Номер				= Номер;
		НоваяСтрока.ОператорСтрока		= Оператор;
		НоваяСтрока.ТарифСтрока			= Тариф;
		НоваяСтрока.НазначениеСтрока	= НазначениеСтрока;
		НоваяСтрока.ОбъектСтрока		= ОбъектСтрока;
		
		НоваяСтрока.Оператор	= ?(Оператор = "", Справочники.Контрагенты.ПустаяСсылка(), Справочники.Контрагенты.НайтиПоНаименованию(Оператор));
		НоваяСтрока.Тариф		= ?(Тариф = "", Справочники.ТарифыМобильнойСвязи.ПустаяСсылка(), Справочники.ТарифыМобильнойСвязи.НайтиПоНаименованию(Тариф));
		НоваяСтрока.СимКарта	= ?(Номер = "", Справочники.СлужебныеSIMКарты.ПустаяСсылка(), Справочники.СлужебныеSIMКарты.НайтиПоКоду(Номер));
		НоваяСтрока.ГолосоваяСвязь = (НЕ ГС="");
		Если НоваяСтрока.ГолосоваяСвязь Тогда
			НоваяСтрока.Назначение = Справочники.НазначенияИспользованияSIMКарт.СлужебныйТелефон;
			НоваяСтрока.НазначениеСтрока	= Строка(Справочники.НазначенияИспользованияSIMКарт.СлужебныйТелефон);

		Иначе
			Если не НазначениеСтрока = "" и Не ЗначениеЗаполнено(Справочники.НазначенияИспользованияSIMКарт.НайтиПоНаименованию(НазначениеСтрока)) Тогда
			     ОбНаз=Справочники.НазначенияИспользованияSIMКарт.СоздатьЭлемент();
				 ОбНаз.Наименование=НазначениеСтрока;
			     ОбНаз.Записать();
			КонецЕсли; 
			НоваяСтрока.Назначение	= ?(НазначениеСтрока = "", Справочники.НазначенияИспользованияSIMКарт.ПустаяСсылка(), Справочники.НазначенияИспользованияSIMКарт.НайтиПоНаименованию(НазначениеСтрока));
		КонецЕсли;
		Если Оператор = "" и ОператорПоКоду и СтрДлина(Номер)>3 Тогда 
			НоваяСтрока.ОператорСтрока = Сред(Номер, 2, 3);
		КонецЕсли;
		
		Если ОбъектСтрока = "" Тогда
			НоваяСтрока.Объект = Неопределено;
		Иначе
			НайденноеФизлицо = Справочники.ФизическиеЛица.НайтиПоНаименованию(ОбъектСтрока);
			Если НайденноеФизлицо = Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
				НайденноеПодразделение = Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию(ОбъектСтрока); 
				Если НайденноеПодразделение = Справочники.СтруктурныеЕдиницы.ПустаяСсылка() Тогда
					НоваяСтрока.Объект = Неопределено;
				Иначе
					НоваяСтрока.Объект = НайденноеПодразделение;
				КонецЕсли;
			Иначе
				НоваяСтрока.Объект = НайденноеФизлицо;
			КонецЕсли;
		КонецЕсли;
			
		НоваяСтрока.СимКарта = ?(Номер = "", Справочники.СлужебныеSIMКарты.ПустаяСсылка(), Справочники.СлужебныеSIMКарты.НайтиПоКоду(Номер));
		НоваяСтрока.СуммаПоТарифу = Число(?(ТаблДок.Область(Стр,7,Стр,7).Текст="","0",ТаблДок.Область(Стр,7,Стр,7).Текст));
		Если ЗначениеЗаполнено(ТаблДок.Область(Стр,8,Стр,8).Текст) Тогда
			Попытка
			    День=Лев(ТаблДок.Область(Стр,8,Стр,8).Текст,2);
			    Мес=Сред(ТаблДок.Область(Стр,8,Стр,8).Текст,4,2);
			    Год=Прав(ТаблДок.Область(Стр,8,Стр,8).Текст,4);
				НоваяСтрока.Дата = Дата(Число(Год),Число(Мес),Число(День));
			Исключение
			    Сообщить("Неверный формат в колонке 8, необходимо дату вводить в формате 01.01.2016");
			КонецПопытки; 
		КонецЕсли;
		ЦельИспользования=СокрЛП(ТаблДок.Область(Стр,9,Стр,9).Текст);
		Если ЗначениеЗаполнено(ЦельИспользования) Тогда
			ЦИСсылка=Справочники.ЦелиИспользования.НайтиПоНаименованию(ЦельИспользования);
			Если Не ЗначениеЗаполнено(ЦИСсылка) Тогда
			    ОбЦИ=Справочники.ЦелиИспользования.СоздатьЭлемент();
				ОбЦИ.Наименование=ЦельИспользования;
			    ОбЦИ.Записать();
				ЦИСсылка=ОбЦИ.Ссылка;
			КонецЕсли; 
			НоваяСтрока.ЦельИспользования = ЦИСсылка;
		КонецЕсли; 
		НоваяСтрока.НомерПриказа = СокрЛП(ТаблДок.Область(Стр,10,Стр,10).Текст);
		//НоваяСтрока.ДатаПриказа = Дата(ТаблДок.Область(Стр,11,Стр,11).Текст);
		Если ЗначениеЗаполнено(ТаблДок.Область(Стр,11,Стр,11).Текст) Тогда
			Попытка
			    День=Лев(ТаблДок.Область(Стр,11,Стр,11).Текст,2);
			    Мес=Сред(ТаблДок.Область(Стр,11,Стр,11).Текст,4,2);
			    Год=Прав(ТаблДок.Область(Стр,11,Стр,11).Текст,4);
				НоваяСтрока.ДатаПриказа = Дата(Число(Год),Число(Мес),Число(День));
			Исключение
			    Сообщить("Неверный формат в колонке 11, необходимо дату вводить в формате 01.01.2016");
			КонецПопытки; 
		КонецЕсли; 
	КонецЦикла;
	Заполнение = ЕстьПустые();
	Для Каждого ТекстОшибки ИЗ Заполнение.ТекстПредупреждения цикл
		Сообщить(ТекстОшибки, СтатусСообщения.Внимание);
	КонецЦикла;
КонецПроцедуры


&НаСервере
Функция ЕстьПустые()
	ЕстьПустыеТарифы	= Ложь;
	ЕстьПустыеПрочие	= Ложь;
	ЕстьСуществующие	= Ложь;
	ТекстПредупреждения	= Новый Массив;
	НомерСтроки			= 0;
	Для Каждого Стр ИЗ ТаблЗнач Цикл
		НомерСтроки = НомерСтроки + 1;
		Если НЕ ЗначениеЗаполнено(Стр.Тариф) Тогда
			ЕстьПустыеТарифы = Истина;
			ТекстПредупреждения.Добавить("В строке " + НомерСтроки + " не найден тариф " + Стр.ТарифСтрока);
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Стр.Назначение) Тогда
			ЕстьПустыеПрочие = Истина;
			ТекстПредупреждения.Добавить("В строке " + НомерСтроки + " не найдено назначение " + Стр.НазначениеСтрока);	
		КонецЕсли;	
		Если НЕ ЗначениеЗаполнено(Стр.Объект)Тогда
			ЕстьПустыеПрочие = Истина;
			ТекстПредупреждения.Добавить("В строке " + НомерСтроки + " не найден объект " + Стр.ОбъектСтрока);	
		КонецЕсли;	
		Если НЕ ЗначениеЗаполнено(Стр.Оператор)  Тогда
			ЕстьПустыеПрочие = Истина;
			ТекстПредупреждения.Добавить("В строке " + НомерСтроки + " не найден оператор " +  Стр.ОператорСтрока);	
		КонецЕсли;			
	КонецЦикла;
    Возврат новый Структура("ЕстьПустыеТарифы, ЕстьПустыеПрочие, ТекстПредупреждения", ЕстьПустыеТарифы, ЕстьПустыеПрочие, ТекстПредупреждения);
КонецФункции


&НаСервере
Функция ЕстьПустыеТарифы()
	Ответ = Ложь;
	Для Каждого Стр ИЗ ТаблЗнач Цикл
		Ответ = Ответ ИЛИ (НЕ ЗначениеЗаполнено(Стр.Тариф) И ЗначениеЗаполнено(Стр.ТарифСтрока));
	КонецЦикла;
    Возврат Ответ;
КонецФункции

&НаКлиенте
Процедура Создать(Команда)
	Заполнение = ЕстьПустые();
	//Для Каждого ТекстОшибки ИЗ Заполнение.ТекстПредупреждения цикл
	//	Сообщить(ТекстОшибки, СтатусСообщения.Внимание);
	//КонецЦикла;
	//Если Заполнение.ЕстьПустыеПрочие Тогда
	//	Ответ = Вопрос("Есть незаполненные поля. Продолжить?", РежимДиалогаВопрос.ДаНетОтмена);
	//	Если НЕ Ответ = КодВозвратаДиалога.Да Тогда
	//		Возврат;
	//	КонецЕсли;
	//КонецЕсли;
	
	//Если Заполнение.ЕстьПустыеТарифы Тогда
	//	Ответ = Вопрос("Создавать тарифы из таблицы?", РежимДиалогаВопрос.ДаНетОтмена);
	//	Если Ответ = КодВозвратаДиалога.Отмена Тогда
	//		Возврат
	//	Иначе
	//		СоздаватьТарифы = (Ответ = КодВозвратаДиалога.Да);
	//	КонецЕсли;
	//Иначе
	//	СоздаватьТарифы = Ложь;
	//КонецЕсли;
	СоздаватьТарифы=Истина;	
	Создано = СоздатьНаСервере(СоздаватьТарифы);
	Если НЕ Создано.СозданоЭлементов = 0 Тогда
		Сообщить("Создано новых номеров: " + Строка(Создано.СозданоЭлементов));
	КонецЕсли;
	Если НЕ Создано.ИзмененоЭлементов = 0 Тогда
		Сообщить("Изменено номеров: " + Строка(Создано.ИзмененоЭлементов));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СоздатьНаСервере(СоздаватьТарифы)
	
	СозданоЭлементов	= 0;
	ИзмененоЭлементов	= 0;
	Период = ?(ЗначениеЗаполнено(ДатаВыдачи), ДатаВыдачи, ТекущаяДата());

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПривязкаТелефоновСрезПоследних.Период,
		|	ПривязкаТелефоновСрезПоследних.Номер,
		|	ПривязкаТелефоновСрезПоследних.Привязка,
		|	ПривязкаТелефоновСрезПоследних.Назначение,
		|	ПривязкаТелефоновСрезПоследних.ДатаПриказа,
		|	ПривязкаТелефоновСрезПоследних.НомерПриказа
		|ИЗ
		|	РегистрСведений.ПривязкаТелефонов.СрезПоследних КАК ПривязкаТелефоновСрезПоследних";

	Результат = Запрос.Выполнить();

	ТЗСрез = Результат.Выгрузить();


	
	Для Каждого Стр Из ТаблЗнач Цикл		
		Номер = ОчиститьНомер(Стр.Номер);
		Мен=РегистрыСведений.НесоответствиеИнформацииПоSimКартам.СоздатьМенеджерЗаписи();
		//Мен.Пользователь=ПараметрыСеанса.ТекущийПользователь;
		Если СтрДлина(Номер) = 11 Тогда
			Если Стр.СимКарта = Справочники.СлужебныеSIMКарты.ПустаяСсылка() Тогда
				Мен.Новый=Истина;
				РанееСозданныйНомер = Справочники.СлужебныеSIMКарты.НайтиПоКоду(Номер);
				Если ЗначениеЗаполнено(РанееСозданныйНомер) ТОгда
					Сообщить("Номер " + Номер + " повторяется дважды!");
					Продолжить;
				КонецЕсли;
				НовыйЭлемент				= Справочники.СлужебныеSIMКарты.СоздатьЭлемент();
				НовыйЭлемент.Код			= Номер;
				
				Если НЕ ЗначениеЗаполнено(Стр.Тариф) И ЗначениеЗаполнено(Стр.ТарифСтрока) и СоздаватьТарифы Тогда
					РанееСозданныйТариф = Справочники.ТарифыМобильнойСвязи.НайтиПоНаименованию(Стр.ТарифСтрока);
					Если РанееСозданныйТариф = Справочники.ТарифыМобильнойСвязи.ПустаяСсылка() Тогда
						НовыйТариф = Справочники.ТарифыМобильнойСвязи.СоздатьЭлемент();
						НовыйТариф.Наименование	= Стр.ТарифСтрока;
						НовыйТариф.СуммаПоТарифуВМесяц	= Стр.СуммаПоТарифу;
						НовыйТариф.ОператорСвязи	= Стр.Оператор;
						НовыйТариф.Записать();
						НовыйЭлемент.Тариф		= НовыйТариф.Ссылка;
						Стр.Тариф				= НовыйТариф.Ссылка;
						
					Иначе
						Стр.Тариф				= РанееСозданныйТариф;
						НовыйЭлемент.Тариф		= Стр.Тариф;
					КонецЕсли;
				Иначе
					НовыйЭлемент.Тариф		= Стр.Тариф;
				КонецЕсли;
				
				Если ЕстьНеобходимостьЗаполнения(Стр.Тариф.СуммаПоТарифуВМесяц,Стр.СуммаПоТарифу) и ЗначениеЗаполнено(Стр.Тариф) Тогда
			    	ОбТариф=Стр.Тариф.ПолучитьОбъект();
					ОбТариф.СуммаПоТарифуВМесяц=Стр.СуммаПоТарифу;
					ОбТариф.Записать();
				ИначеЕсли	ЕстьРасхождение(Стр.Тариф.СуммаПоТарифуВМесяц,Стр.СуммаПоТарифу) и ЗначениеЗаполнено(Стр.Тариф) Тогда
                    Мен.СуммаПоТарифуВМесяц=Стр.СуммаПоТарифу;
				КонецЕсли; 
				
				Если ЕстьНеобходимостьЗаполнения(Стр.Тариф.ОператорСвязи,Стр.Оператор)  Тогда
			    	ОбТариф=Стр.Тариф.ПолучитьОбъект();
					ОбТариф.ОператорСвязи=Стр.Оператор;
					ОбТариф.Записать();
				КонецЕсли; 
				
				
				НовыйЭлемент.ОператорСвязи	= Стр.Оператор;
				НовыйЭлемент.ДляГолосовойСвязи = Стр.ГолосоваяСвязь;
				НовыйЭлемент.Используется = Истина;
				НовыйЭлемент.ЦельИспользования = Стр.ЦельИспользования;
				НовыйЭлемент.Дата = Стр.Дата;
				НовыйЭлемент.Записать();
				СозданоЭлементов = СозданоЭлементов + 1;
				Стр.СимКарта				= НовыйЭлемент.Ссылка;
				ЗаполнитьЗначенияСвойств(Мен,Стр.СимКарта);
				Мен.SimКарта=Стр.СимКарта;
				Если ЗначениеЗаполнено(Стр.Объект) Тогда
					МенеджерЗаписи = РегистрыСведений.ПривязкаТелефонов.СоздатьМенеджерЗаписи(); 
					МенеджерЗаписи.Номер	= Стр.СимКарта; 
					МенеджерЗаписи.Привязка	= Стр.Объект; 
					МенеджерЗаписи.Назначение = Стр.Назначение; 
					МенеджерЗаписи.Период	= Период;
					МенеджерЗаписи.НомерПриказа = Стр.НомерПриказа;
					МенеджерЗаписи.ДатаПриказа = Стр.ДатаПриказа; 
					МенеджерЗаписи.Записать();
					ТелефоннаяКнига.ПроверитьТелефонПоРегистрам(Стр.Симкарта);
				КонецЕсли;					
			Иначе
				Мен.SimКарта=Стр.СимКарта;
				ЗаполнитьЗначенияСвойств(Мен,Стр.СимКарта);
				Мен.Записать(Истина);
				КартаОбъект = Стр.СимКарта.ПолучитьОбъект();
				ФлЗапись=Ложь;
				Если ЕстьНеобходимостьЗаполнения(КартаОбъект.ОператорСвязи,Стр.Оператор) Тогда
				    КартаОбъект.ОператорСвязи=Стр.Оператор;
					ФлЗапись=Истина;
				ИначеЕсли	ЕстьРасхождение(КартаОбъект.ОператорСвязи,Стр.Оператор) Тогда
                    Мен.ОператорСвязи=Стр.Оператор;
				КонецЕсли; 
				//КартаОбъект.ОператорСвязи	= Стр.Оператор;
				//Если Не КартаОбъект.ДляГолосовойСвязи = Стр.ГолосоваяСвязь Тогда
				//	Мен.ДляГолосовойСвязи = Стр.ГолосоваяСвязь;
				//КонецЕсли; 
				КартаОбъект.ДляГолосовойСвязи = Стр.ГолосоваяСвязь;
				
				Если ЕстьНеобходимостьЗаполнения(КартаОбъект.Дата,Стр.Дата) Тогда
				    КартаОбъект.Дата=Стр.Дата;
					ФлЗапись=Истина;
				ИначеЕсли	ЕстьРасхождение(КартаОбъект.Дата,Стр.Дата) Тогда
                    Мен.Дата=Стр.Дата;
				КонецЕсли; 
				
				Если ЕстьНеобходимостьЗаполнения(КартаОбъект.ЦельИспользования,Стр.ЦельИспользования) Тогда
				    КартаОбъект.ЦельИспользования=Стр.ЦельИспользования;
					ФлЗапись=Истина;
				ИначеЕсли	ЕстьРасхождение(КартаОбъект.ЦельИспользования,Стр.ЦельИспользования) Тогда
                    Мен.ЦельИспользования=Стр.ЦельИспользования;
				КонецЕсли; 
				
				
				
				Если НЕ ЗначениеЗаполнено(Стр.Тариф) И ЗначениеЗаполнено(Стр.ТарифСтрока) и СоздаватьТарифы Тогда
					НовыйТариф = Справочники.ТарифыМобильнойСвязи.СоздатьЭлемент();
					НовыйТариф.Наименование	= Стр.ТарифСтрока;
					НовыйТариф.СуммаПоТарифуВМесяц	= Стр.СуммаПоТарифу;
					НовыйТариф.ОператорСвязи	= Стр.Оператор;
					НовыйТариф.Записать();
					//КартаОбъект.Тариф		= НовыйТариф.Ссылка;
					Стр.Тариф				= НовыйТариф.Ссылка;
				Иначе
					//КартаОбъект.Тариф		= Стр.Тариф;
					Если ЕстьНеобходимостьЗаполнения(Стр.Тариф.СуммаПоТарифуВМесяц,Стр.СуммаПоТарифу) и ЗначениеЗаполнено(Стр.Тариф) Тогда
				    	ОбТариф=Стр.Тариф.ПолучитьОбъект();
						ОбТариф.СуммаПоТарифуВМесяц=Стр.СуммаПоТарифу;
						ОбТариф.Записать();
					ИначеЕсли	ЕстьРасхождение(Стр.Тариф.СуммаПоТарифуВМесяц,Стр.СуммаПоТарифу) и ЗначениеЗаполнено(Стр.Тариф) Тогда
	                    Мен.СуммаПоТарифуВМесяц=Стр.СуммаПоТарифу;
					КонецЕсли;
					Если ЕстьНеобходимостьЗаполнения(Стр.Тариф.ОператорСвязи,Стр.Оператор)  Тогда
				    	ОбТариф=Стр.Тариф.ПолучитьОбъект();
						ОбТариф.ОператорСвязи=Стр.Оператор;
						ОбТариф.Записать();
					КонецЕсли; 

				КонецЕсли;
				
				Если ЕстьНеобходимостьЗаполнения(КартаОбъект.Тариф,Стр.Тариф) Тогда
					КартаОбъект.Тариф		= Стр.Тариф;
					ФлЗапись=Истина;
				ИначеЕсли	ЕстьРасхождение(КартаОбъект.Тариф,Стр.Тариф) Тогда
                    Мен.Тариф=Стр.Тариф;
				КонецЕсли; 
				
				Если ФлЗапись Тогда
					КартаОбъект.Записать();
					ИзмененоЭлементов = ИзмененоЭлементов + 1;
				КонецЕсли; 
				Если ЗначениеЗаполнено(Стр.Объект) Тогда
					МенеджерЗаписи = РегистрыСведений.ПривязкаТелефонов.СоздатьМенеджерЗаписи();
					МасСтр=ТЗСрез.НайтиСтроки(Новый Структура("Номер",Стр.СимКарта));
					ЗаполнитьЗначенияСвойств(МенеджерЗаписи,МасСтр[0]);
					МенеджерЗаписи.Номер	= Стр.СимКарта;
					
					
					Если ЕстьНеобходимостьЗаполнения(МенеджерЗаписи.Привязка,Стр.Объект) Тогда
						МенеджерЗаписи.Привязка	= Стр.Объект;
					ИначеЕсли	ЕстьРасхождение(МенеджерЗаписи.Привязка,Стр.Объект) Тогда
	                    Мен.Привязка=Стр.Объект;
					КонецЕсли; 
					//МенеджерЗаписи.Привязка	= Стр.Объект;
					
					Если ЕстьНеобходимостьЗаполнения(МенеджерЗаписи.Назначение,Стр.Назначение) Тогда
						МенеджерЗаписи.Назначение	= Стр.Назначение;
					ИначеЕсли	ЕстьРасхождение(МенеджерЗаписи.Назначение,Стр.Назначение) Тогда
	                    Мен.Назначение=Стр.Назначение;
					КонецЕсли; 
					//МенеджерЗаписи.Назначение = Стр.Назначение;
					
					МенеджерЗаписи.Период	= Период;
					
					//Если ЕстьНеобходимостьЗаполнения(МенеджерЗаписи.НомерПриказа,Стр.НомерПриказа) Тогда
					//	МенеджерЗаписи.НомерПриказа	= Стр.НомерПриказа;
					//ИначеЕсли	ЕстьРасхождение(МенеджерЗаписи.НомерПриказа,Стр.НомерПриказа) Тогда
					//	Мен.НомерПриказа=Стр.НомерПриказа;
					//КонецЕсли; 
					МенеджерЗаписи.НомерПриказа = Стр.НомерПриказа;
					
					//Если ЕстьНеобходимостьЗаполнения(МенеджерЗаписи.ДатаПриказа,Стр.ДатаПриказа) Тогда
					//	МенеджерЗаписи.ДатаПриказа	= Стр.ДатаПриказа;
					//ИначеЕсли	ЕстьРасхождение(МенеджерЗаписи.ДатаПриказа,Стр.ДатаПриказа) Тогда
					//	Мен.НомерПриказа=Стр.ДатаПриказа;
					//КонецЕсли; 
					МенеджерЗаписи.ДатаПриказа = Стр.ДатаПриказа; 
					МенеджерЗаписи.Записать(Истина);
					ТелефоннаяКнига.ПроверитьТелефонПоРегистрам(Стр.Симкарта);
				КонецЕсли;					
			КонецЕсли;
			
		Иначе
			Сообщить("Номер " + Номер + " не корректный!", СтатусСообщения.Важное);
		КонецЕсли;
		Мен.Записать(Истина);
	КонецЦикла;

	Возврат Новый Структура("СозданоЭлементов, ИзмененоЭлементов", СозданоЭлементов, ИзмененоЭлементов);
	
КонецФункции

&НаСервере
Функция ЕстьНеобходимостьЗаполнения(ЗначРекв,ЗначЗаполн)
     Если Не ЗначениеЗаполнено(ЗначРекв) и ЗначениеЗаполнено(ЗначЗаполн) Тогда
	     Возврат Истина;
	 Иначе	
	     Возврат Ложь;
	 КонецЕсли;
КонецФункции // ()

&НаСервере
Функция ЕстьРасхождение(ЗначРекв,ЗначЗаполн)
     Если ЗначениеЗаполнено(ЗначРекв) и ЗначениеЗаполнено(ЗначЗаполн) и Не ЗначРекв=ЗначЗаполн Тогда
	     Возврат Истина;
	 Иначе	
	     Возврат Ложь;
	 КонецЕсли;
КонецФункции // ()

&НаСервере
Процедура ЗаполнитьТарифНаСервере(Тариф, НаименованиеТарифа)
	
	Для каждого Стр ИЗ ТаблЗнач Цикл
		Если Стр.ТарифСтрока = НаименованиеТарифа Тогда
			Стр.Тариф = Тариф;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры


&НаКлиенте
Процедура ТаблЗначТарифПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Элементы.ТаблЗнач.ТекущиеДанные.тариф) И ТаблЗнач.Количество()>1 И НЕ Элементы.ТаблЗнач.ТекущиеДанные.ТарифСтрока = "" Тогда
		Если Вопрос("Заполнить колонку Тариф по соответствию?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			ЗаполнитьТарифНаСервере(Элементы.ТаблЗнач.ТекущиеДанные.тариф, Элементы.ТаблЗнач.ТекущиеДанные.ТарифСтрока);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьОператорНаСервере(Оператор, НаименованиеОператора)	
	Для каждого Стр ИЗ ТаблЗнач Цикл
		Если Стр.ОператорСтрока = НаименованиеОператора Тогда
			Стр.Оператор = Оператор;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры



&НаКлиенте
Процедура ТаблЗначОператорПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Элементы.ТаблЗнач.ТекущиеДанные.Оператор) И ТаблЗнач.Количество()>1 И НЕ Элементы.ТаблЗнач.ТекущиеДанные.ОператорСтрока = "" Тогда
		Если Вопрос("Заполнить колонку Оператор по соответствию?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			ЗаполнитьОператорНаСервере(Элементы.ТаблЗнач.ТекущиеДанные.Оператор, Элементы.ТаблЗнач.ТекущиеДанные.ОператорСтрока);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьНазначениеНаСервере(Назначение, НаименованиеНазначения)	
	Для каждого Стр ИЗ ТаблЗнач Цикл
		Если Стр.НазначениеСтрока = НаименованиеНазначения Тогда
			Стр.Назначение = Назначение;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ТаблЗначНазначениеПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Элементы.ТаблЗнач.ТекущиеДанные.Назначение) И ТаблЗнач.Количество()>1 И НЕ Элементы.ТаблЗнач.ТекущиеДанные.НазначениеСтрока = "" Тогда
		Если Вопрос("Заполнить колонку Назначение по соответствию?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
			ЗаполнитьНазначениеНаСервере(Элементы.ТаблЗнач.ТекущиеДанные.Назначение, Элементы.ТаблЗнач.ТекущиеДанные.НазначениеСтрока);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
