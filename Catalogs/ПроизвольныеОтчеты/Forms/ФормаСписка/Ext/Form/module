Процедура СформироватьПроизвольныйОтчет(ПроизвольныйОтчетСсылка, СохраненнаяНастройка = Неопределено)

	Если ПроизвольныйОтчетСсылка.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ОтчетОбъект = Отчеты.ПроизвольныйОтчет.Создать();
	ОтчетОбъект.УстановитьПроизвольныйОтчет(ПроизвольныйОтчетСсылка, СохраненнаяНастройка);
	Форма = ОтчетОбъект.ПолучитьФорму(,, ПроизвольныйОтчетСсылка);
	Форма.Открыть();
	
КонецПроцедуры //

// Обновление дерева полей для текущего отчета
Процедура ОбновитьДеревоПолей(Ссылка, ДеревоПолей) Экспорт
	
	ДеревоПолей = Новый ДеревоЗначений;
	ДеревоПолей.Колонки.Добавить("Заголовок" );
	
	Если Ссылка.Строки.Количество() > 0 Тогда
		СтрокаТипПолей = ДеревоПолей.Строки.Добавить();
		СтрокаТипПолей.Заголовок = "Строки";
	КонецЕсли;
	Для каждого Строка Из Ссылка.Строки Цикл
		НоваяСтрока = СтрокаТипПолей.Строки.Добавить();
		НоваяСтрока.Заголовок = Строка.Заголовок;
	КонецЦикла;
	
	Если Ссылка.Колонки.Количество() > 0 Тогда
		СтрокаТипПолей = ДеревоПолей.Строки.Добавить();
		СтрокаТипПолей.Заголовок = "Колонки";
	КонецЕсли;
	Для каждого Строка Из Ссылка.Колонки Цикл
		НоваяСтрока = СтрокаТипПолей.Строки.Добавить();
		НоваяСтрока.Заголовок = Строка.Заголовок;
	КонецЦикла;
	
	Если Ссылка.Показатели.Количество() > 0 Тогда
		СтрокаТипПолей = ДеревоПолей.Строки.Добавить();
		СтрокаТипПолей.Заголовок = "Показатели";
	КонецЕсли;
	Для каждого Строка Из Ссылка.Показатели Цикл
		НоваяСтрока = СтрокаТипПолей.Строки.Добавить();
		НоваяСтрока.Заголовок = Строка.Заголовок;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьСписокСохраненныхНастроек()
	
	ТекущиеДанные = ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	Если ТекущиеДанные = Неопределено ИЛИ ТекущиеДанные.ЭтоГруппа ИЛИ ТекущиеДанные.Пустая() Тогда
		СписокСохраненныеНастройки.Очистить();
		ЭлементыФормы.СписокСохраненныеНастройки.Подсказка = "";
	Иначе
		СписокСохраненныеНастройки.Очистить();
		НоваяСтрока = СписокСохраненныеНастройки.Добавить();
		НоваяСтрока.Ссылка = Справочники.СохраненныеНастройки.ПустаяСсылка();
		ТаблицаВариантовОтчета = ТиповыеОтчеты.ПолучитьТаблицуДоступныхВариантов(ТекущиеДанные.Ссылка, глЗначениеПеременной("глТекущийПользователь"));
		Для каждого Строка Из ТаблицаВариантовОтчета Цикл
			НоваяСтрока = СписокСохраненныеНастройки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
		КонецЦикла;
		ЭлементыФормы.СписокСохраненныеНастройки.Подсказка = "Настройки отчета """ + ТекущиеДанные.Ссылка + """";
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьПроизвольныйОтчетДляИзменения()

	ТекущиеДанные = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено ИЛИ ТекущиеДанные.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные.Ссылка.ПолучитьФорму().Открыть();

КонецПроцедуры //


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ КОМАНДНОЙ ПАНЕЛИ

Процедура ДействияФормыДействиеВыгрузить(Кнопка)
	
	ПравилаОбмена = Справочники.ПроизвольныеОтчеты.ПолучитьМакет("ПравилаОбменаПроизвольныеОтчеты");
	ПроцедурыОбменаДаннымиКлиент.ОткрытьВыгрузкуСпискаОбъектов(ПравилаОбмена, "СправочникСсылка.ПроизвольныеОтчеты");
	
КонецПроцедуры

Процедура ДействияФормыДействиеЗагрузить(Кнопка)
	
	ДиалогВыбораФайлаОбмена = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайлаОбмена.Фильтр = "Файл обмена данными (*.xml)|*.xml";
	ДиалогВыбораФайлаОбмена.МножественныйВыбор = Ложь;
	ДиалогВыбораФайлаОбмена.Заголовок = "Выберите файл обмена данными";

	Если НЕ ДиалогВыбораФайлаОбмена.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФайлаОбмена = ДиалогВыбораФайлаОбмена.ПолноеИмяФайла;
	
	УниверсальныйОбменДаннымиXML = Обработки.УниверсальныйОбменДаннымиXML.Создать();
	
	УниверсальныйОбменДаннымиXML.РежимОбмена = "Загрузка";
	УниверсальныйОбменДаннымиXML.ИмяФайлаОбмена = ИмяФайлаОбмена;
	
	УниверсальныйОбменДаннымиXML.ВыполнитьЗагрузку();
	
КонецПроцедуры

Процедура ДействияФормыДополнительно(Кнопка)
	
	ОткрытьПроизвольныйОтчетДляИзменения();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ СПИСКА

Процедура СправочникСписокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если ВладелецФормы <> Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		ОповеститьОВыборе(ВыбраннаяСтрока);
	Иначе
		СтандартнаяОбработка = Ложь;
		СформироватьПроизвольныйОтчет(ВыбраннаяСтрока.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

Процедура СписокСохраненныеНастройкиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ТекущиеДанные = ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	Если ТекущиеДанные = Неопределено ИЛИ ТекущиеДанные.ЭтоГруппа ИЛИ ТекущиеДанные.Пустая() Тогда
		Возврат;
	ИначеЕсли ДанныеСтроки.Ссылка = Справочники.СохраненныеНастройки.ПустаяСсылка() Тогда
		ОформлениеСтроки.Ячейки.Ссылка.Текст = ТекущиеДанные.Наименование;
	КонецЕсли;
	
КонецПроцедуры

Процедура СписокСохраненныеНастройкиВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если ВладелецФормы = Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		ТекущиеДанные = ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
		Если ТекущиеДанные = Неопределено ИЛИ ТекущиеДанные.ЭтоГруппа Тогда
			Возврат;
		КонецЕсли;
		СформироватьПроизвольныйОтчет(ТекущиеДанные.Ссылка, ВыбраннаяСтрока.Ссылка);
	Иначе
		СтандартнаяОбработка = Ложь;
		Если ТипЗнч(ВыбраннаяСтрока) = Тип("Массив") Тогда
			Для Индекс = 0 По ВыбраннаяСтрока.Количество() - 1 Цикл
				ВыбранноеЗначение = ВыбраннаяСтрока[Индекс];
				Если ВыбранноеЗначение.Ссылка = Справочники.СохраненныеНастройки.ПустаяСсылка() Тогда
					ВыбраннаяСтрока.Установить(Индекс, ЭлементыФормы.СправочникСписок.ТекущаяСтрока);
				ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СтрокаТаблицыЗначений") Тогда
					ВыбраннаяСтрока.Установить(Индекс, ВыбранноеЗначение.Ссылка);
				КонецЕсли;
			КонецЦикла;
			ОповеститьОВыборе(ВыбраннаяСтрока);
		ИначеЕсли ТипЗнч(ВыбраннаяСтрока) = Тип("СтрокаТаблицыЗначений") Тогда
			Если ВыбраннаяСтрока.Ссылка = Справочники.СохраненныеНастройки.ПустаяСсылка() Тогда
				ОповеститьОВыборе(ЭлементыФормы.СправочникСписок.ТекущаяСтрока);
			ИначеЕсли ТипЗнч(ВыбраннаяСтрока) = Тип("СтрокаТаблицыЗначений") Тогда
				ОповеститьОВыборе(ВыбраннаяСтрока.Ссылка);
			КонецЕсли;
		Иначе
			ОповеститьОВыборе(ВыбраннаяСтрока);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура СправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	
	ПроцедурыПроизвольныхОтчетов.УстановитьОформлениеСтрокСписка(ОформленияСтрок);
	
КонецПроцедуры

Процедура СправочникСписокПриАктивизацииСтроки(Элемент)
	
	ОбновитьСписокСохраненныхНастроек();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если НЕ ПроцедурыПроизвольныхОтчетов.ПользовательМожетИзменятьПроизвольныйОтчет() Тогда 

		// удаляем подменю "Обмен"
		КнопкиКоманднойПанели = ЭлементыФормы.ДействияФормы.Кнопки;
		КнопкиКоманднойПанели.Удалить(КнопкиКоманднойПанели.ПодменюОбмен);
		КнопкиКоманднойПанели.Удалить(КнопкиКоманднойПанели.РазделительОбмен);
		
		// удаляем кнопку "Общая настройка отчета"
		КнопкиКоманднойПанели.Удалить(КнопкиКоманднойПанели.Дополнительно);
		КнопкиКоманднойПанели.Удалить(КнопкиКоманднойПанели.РазделительДополнительно);
		
	КонецЕсли;
	
КонецПроцедуры
