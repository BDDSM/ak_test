
Процедура УстановитьЗаголовокФормы()

	Заголовок = Строка(ВидПроизвольногоОтчета);
	
КонецПроцедуры //
 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ КОМАНДНОЙ ПАНЕЛИ

Процедура ДействияФормыСхемаКомпоновки(Кнопка)
	
	КонструкторСхемы = Новый КонструкторСхемыКомпоновкиДанных;
	КонструкторСхемы.УстановитьСхему(СхемаОтчета);
	КонструкторСхемы.Редактировать(ЭтаФорма);
	
КонецПроцедуры

Процедура ДействияФормыДействиеПоказательМонитораЭффективности(Кнопка)
	
	ФормаНастройки = Отчеты.МониторЭффективности.ПолучитьФорму("КонструкторНастройкиПоказателя");
	ФормаНастройки.СхемаОтчета = СхемаОтчета;
	ФормаНастройки.НастройкиКомпоновкиОтчета = СхемаОтчета.НастройкиПоУмолчанию;
	ФормаНастройки.ПараметрыИсточниковДанных = ПараметрыИсточниковДанных.Выгрузить();
	ФормаНастройки.ИсточникиДанных = ИсточникиДанных.Выгрузить();
	Результат = ФормаНастройки.ОткрытьМодально();
	
	Если Результат = Истина Тогда
		ТиповыеОтчеты.ЗагрузитьВСхемуНастройкиКомпоновщика(СхемаОтчета, ФормаНастройки.НастройкиКомпоновкиОтчета);
		ВидПроизвольногоОтчета = ФормаНастройки.ВидПроизвольногоОтчета;
		
		ИсточникиДанных.Загрузить(ФормаНастройки.ИсточникиДанных);
		ПараметрыИсточниковДанных.Загрузить(ФормаНастройки.ПараметрыИсточниковДанных);
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ СПИСКА ИСТОЧНИКОВ ДАННЫХ

Функция РедактироватьИсточникДанных(КлючИсточника, ОбъектКопирования = Неопределено)

	ФормаНастройки = СправочникОбъект.ПолучитьФорму("НастройкаИсточникаДанных");
	
	ФормаНастройки.КлючИсточника             = КлючИсточника;
	ФормаНастройки.ОбъектКопирования         = ОбъектКопирования;
	ФормаНастройки.СхемаОтчета               = СхемаОтчета;
	ФормаНастройки.ИсточникиДанных           = ИсточникиДанных.Выгрузить();
	ФормаНастройки.ПараметрыИсточниковДанных = ПараметрыИсточниковДанных.Выгрузить();
	
	Результат = ФормаНастройки.ОткрытьМодально();
	
	Если Результат = Истина Тогда
		ИсточникиДанных.Загрузить(ФормаНастройки.ИсточникиДанных);
		ПараметрыИсточниковДанных.Загрузить(ФормаНастройки.ПараметрыИсточниковДанных);
		КлючИсточника = ФормаНастройки.КлючИсточника;
		Модифицированность = Истина;
	КонецЕсли; 
	
	Возврат (Результат = Истина);
	
КонецФункции //

Процедура ДобавитьНовыйИсточникДанных(ОбъектКопирования)
	
	КлючИсточника = -1;		
	
	Если РедактироватьИсточникДанных(КлючИсточника, ОбъектКопирования) Тогда
		ЭлементыФормы.ИсточникиДанных.ТекущаяСтрока = ИсточникиДанных.Найти(КлючИсточника, "КлючИсточника");
	КонецЕсли; 
	
КонецПроцедуры //

Процедура ИсточникиДанныхПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	ТекущиеДанные = ЭлементыФормы.ИсточникиДанных.ТекущиеДанные;
	РедактироватьИсточникДанных(ТекущиеДанные.КлючИсточника);
	
КонецПроцедуры

Процедура ИсточникиДанныхПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
	Если Копирование Тогда
		ОбъектКопирования = ЭлементыФормы.ИсточникиДанных.ТекущиеДанные
	Иначе
		ОбъектКопирования = Неопределено;
	КонецЕсли;
	
	ДобавитьНовыйИсточникДанных(ОбъектКопирования);
	
КонецПроцедуры

Процедура ИсточникиДанныхПередУдалением(Элемент, Отказ)
	
	Если ИсточникиДанных.Количество() = 1 Тогда
		ПараметрыИсточниковДанных.Очистить();
	Иначе
		ТекущиеДанные = ЭлементыФормы.ИсточникиДанных.ТекущиеДанные;
		ПараметрыИсточника = ПараметрыИсточниковДанных.НайтиСтроки(Новый Структура("КлючИсточника", ТекущиеДанные.КлючИсточника));
		Для каждого ЭлКоллекции Из ПараметрыИсточника Цикл
			ПараметрыИсточниковДанных.Удалить(ЭлКоллекции);
		КонецЦикла; 
	КонецЕсли; 
	
КонецПроцедуры
                                                                              
Процедура ИсточникиДанныхПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если НЕ ПустаяСтрока(ДанныеСтроки.НаборДанных) Тогда
		НаборДанныхСхемы = ПроцедурыПроизвольныхОтчетов.НайтиНаборДанныхСхемы(ДанныеСтроки.НаборДанных, СхемаОтчета.НаборыДанных);
		Если НаборДанныхСхемы = Неопределено Тогда
			ОформлениеСтроки.ЦветТекста = ЦветаСтиля.ЦветОсобогоТекста;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	СхемаОтчета = СхемаКомпоновкиДанных.Получить();
	Если СхемаОтчета = Неопределено Тогда
		СхемаОтчета = Новый СхемаКомпоновкиДанных;
	КонецЕсли;
	
	Если СправочникОбъект.ЭтоНовый() Тогда
		ВидПроизвольногоОтчета = Перечисления.ВидыПроизвольныхОтчетов.ПроизвольныйОтчет;
	КонецЕсли; 
	
	УстановитьЗаголовокФормы();
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("СхемаКомпоновкиДанных") Тогда
		
		СхемаОтчета = ЗначениеВыбора;
		Модифицированность = Истина;
	КонецЕсли;
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	СхемаКомпоновкиДанных = Новый ХранилищеЗначения(СхемаОтчета);
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	УстановитьЗаголовокФормы();
	
КонецПроцедуры



