Перем мБазоваяЕдиницаНоменклатуры;

Процедура ДействияФормыРедактироватьКод(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(ЭтотОбъект.Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
КонецПроцедуры
// Процедура - обработчик события "ПередОткрытием" формы
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)

	Если ЭтоНовый() Тогда

		Если Коэффициент = 0 Тогда
			Коэффициент = 1;
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(ЕдиницаПоКлассификатору) Тогда
			ЕдиницаПоКлассификатору = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяЕдиницаПоКлассификатору");
		КонецЕсли;
		
		//+++АК CISA 2018.11.07 ИП-00020196	
		Если ТипЗнч(Владелец) = Тип("СправочникСсылка.Номенклатура") Тогда
			КолвоЕИ = Справочники.ЕдиницыИзмерения.ВернутьКолвоЕИ(Владелец);
			Если КолвоЕИ <> 0 Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Нельзя добавить более одной единицы измерения!";
				Сообщение.Сообщить();
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		//---АК CISA
		
	КонецЕсли;

КонецПроцедуры

// Обработчик события ПриОткрытии для Формы.
//
Процедура ПриОткрытии()

	ЕдиницаИзмеренияВеса = Константы.ЕдиницаИзмеренияВеса.Получить();
	Если НЕ ЗначениеЗаполнено(ЕдиницаИзмеренияВеса) Тогда
		ЭлементыФормы.НадписьВес.Заголовок = "Вес:";
	Иначе
		ЭлементыФормы.НадписьВес.Заголовок = "Вес (" + СокрЛП(ЕдиницаИзмеренияВеса)+"):";
	КонецЕсли;

	Если ЗначениеЗаполнено(Владелец) Тогда
    	мБазоваяЕдиницаНоменклатуры = Владелец.БазоваяЕдиницаИзмерения;
	КонецЕсли;
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияКода(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю,ЭлементыФормы.Код);
	УстановитьДоступность();
	ОбновитьИнформационныеНадписи();
КонецПроцедуры // ПриОткрытии()

Процедура ЕдиницаПоКлассификаторуПриИзменении(Элемент)
	
	Наименование = ЕдиницаПоКлассификатору.Наименование;
	УстановитьДоступность();
	Если ЗначениеЗаполнено(Владелец) И Владелец.БазоваяЕдиницаИзмерения = ЕдиницаПоКлассификатору Тогда
		ПорогОкругления = 0;
		ПредупреждатьОНецелыхМестах = ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВладелецПриИзменении(Элемент)
	мБазоваяЕдиницаНоменклатуры = Владелец.БазоваяЕдиницаИзмерения;
	УстановитьДоступность();
	ОбновитьИнформационныеНадписи();
КонецПроцедуры

Процедура ПорогОкругленияПриИзменении(Элемент)
	ОбновитьИнформационныеНадписи();
КонецПроцедуры

Процедура НаименованиеПриИзменении(Элемент)
	ОбновитьИнформационныеНадписи();
КонецПроцедуры

// Обработчик события "ПослеЗаписи" формы.
//
Процедура ПослеЗаписи()

	МеханизмНумерацииОбъектов.ОбновитьПодсказкуКодНомерОбъекта(ЭтотОбъект.Метаданные(), ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);

КонецПроцедуры // ПослеЗаписи()

//Процедура обновляет информационные надписи на форме
Процедура ОбновитьИнформационныеНадписи()
	ЭлементыФормы.НадписьКоэффициент.Заголовок = "Содержит (" + СокрЛП(мБазоваяЕдиницаНоменклатуры) +"):";
	Если ПорогОкругления = 0 Тогда
		ЭлементыФормы.НадписьИнформацияОбОкруглении.Заголовок = "(в сторону уменьшения)";
	Иначе
	    ЭлементыФормы.НадписьИнформацияОбОкруглении.Заголовок = "("+ПорогОкругления+" "+СокрЛП(мБазоваяЕдиницаНоменклатуры) +" и более = 1 "+СокрЛП(Наименование)+")";
	КонецЕсли;
КонецПроцедуры

Процедура УстановитьДоступность()
	Если ТипЗнч(Владелец)<>Тип("СправочникСсылка.Номенклатура") Тогда
		ЭлементыФормы.ПорогОкругления.Видимость = ложь;
		ЭлементыФормы.НадписьПорогОкругления.Видимость = ложь;
		ЭлементыФормы.НадписьИнформацияОбОкруглении.Видимость = ложь;
		ЭлементыФормы.ПредупреждатьОНецелыхМестах.Видимость = ложь;
        Возврат;
	КонецЕсли;
	ДоступностьПорогаОкругления = (ЗначениеЗаполнено(Владелец) И Владелец.БазоваяЕдиницаИзмерения <> ЕдиницаПоКлассификатору);
	ЭлементыФормы.ПорогОкругления.Доступность = ДоступностьПорогаОкругления;
    ЭлементыФормы.ПредупреждатьОНецелыхМестах.Доступность = ДоступностьПорогаОкругления;
КонецПроцедуры



