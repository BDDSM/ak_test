Перем СтруктураИмяМетаданныхИмяОбъекта;

Процедура ОчиститьПоляВыбора(ЭлементИсключить = Неопределено)
	МассивЭлементыИсключить = Новый Массив;
	МассивЭлементыИсключить.Добавить(ЭлементыФормы.Комментарий);
	Если ТипЗнч(ЭлементИсключить) = Тип("ПолеВвода") Тогда
		МассивЭлементыИсключить.Добавить(ЭлементИсключить);
	КонецЕсли;
	Для каждого ЭлементФормы Из ЭлементыФормы Цикл
		Если ЭлементФормы.Имя = "Сотрудник" Тогда
			Продолжить;		
		КонецЕсли; 
		Если ТипЗнч(ЭлементФормы) = Тип("ПолеВвода") 
			И МассивЭлементыИсключить.Найти(ЭлементФормы) = Неопределено
			Тогда
			ЭлементФормы.Значение = Неопределено;
		КонецЕсли;
	КонецЦикла; 
КонецПроцедуры

Процедура ОбъектИБПриИзменении(Элемент)
	Если Элемент.Значение <> Неопределено Тогда
		ОчиститьПоляВыбора(Элемент);
		Если НЕ ЗначениеЗаполнено(Элемент.Значение) Тогда
			ВвестиЗначение(Элемент.Значение);
		КонецЕсли;
		
		Наименование = Строка(ОбъектИБ);
	КонецЕсли;
КонецПроцедуры

Процедура СписокИБПриИзменении(Элемент)
	Если Элемент.Значение <> Неопределено Тогда
		ОчиститьПоляВыбора(Элемент);
		УстановитьПредставление(Элемент.Значение, Элемент.ВыделенныйТекст);
	КонецЕсли;
КонецПроцедуры

Процедура СписокИБНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	ЗаполнитьСписокИБ(Элемент);	
КонецПроцедуры

Процедура ЗаполнитьСписокИБ(Элемент)
	Перем ПредставлениеМетаданных;
	Если Элемент.СписокВыбора.Количество() = 0 Тогда
		//Для каждого ОбъектМетаданных Из Метаданные.Справочники Цикл
		//	Если ПравоДоступа("Просмотр", ОбъектМетаданных) Тогда
		//		ПредставлениеМетаданных = ?(ОбъектМетаданных.Синоним = "", ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
		//		Элемент.СписокВыбора.Добавить("Справочники."+ОбъектМетаданных.Имя, "Справочник " + ПредставлениеМетаданных);
		//	КонецЕсли;
		//КонецЦикла; 
		//Для каждого ОбъектМетаданных Из Метаданные.Документы Цикл
		//	Если ПравоДоступа("Просмотр", ОбъектМетаданных) Тогда
		//		ПредставлениеМетаданных = ?(ОбъектМетаданных.Синоним = "", ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
		//		Элемент.СписокВыбора.Добавить("Документы."+ОбъектМетаданных.Имя, "Документ " + ПредставлениеМетаданных);
		//	КонецЕсли;
		//КонецЦикла; 
		//Для каждого ОбъектМетаданных Из Метаданные.ЖурналыДокументов Цикл
		//	ПредставлениеМетаданных = ?(ОбъектМетаданных.Синоним = "", ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
		//	Элемент.СписокВыбора.Добавить("ЖурналыДокументов."+ОбъектМетаданных.Имя, "Журнал " + ПредставлениеМетаданных);
		//КонецЦикла; 
		//Для каждого ОбъектМетаданных Из Метаданные.Перечисления Цикл
		//	ПредставлениеМетаданных = ?(ОбъектМетаданных.Синоним = "", ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
		//	Элемент.СписокВыбора.Добавить("Перечисления."+ОбъектМетаданных.Имя, "Перечисление " + ПредставлениеМетаданных);
		//КонецЦикла; 
		//Для каждого ОбъектМетаданных Из Метаданные.ПланыВидовХарактеристик Цикл
		//	ПредставлениеМетаданных = ?(ОбъектМетаданных.Синоним = "", ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
		//	Элемент.СписокВыбора.Добавить("ПланыВидовХарактеристик."+ОбъектМетаданных.Имя, "ПВХ " + ПредставлениеМетаданных);
		//КонецЦикла; 
		//Для каждого ОбъектМетаданных Из Метаданные.ПланыСчетов Цикл
		//	ПредставлениеМетаданных = ?(ОбъектМетаданных.Синоним = "", ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
		//	Элемент.СписокВыбора.Добавить("ПланыСчетов."+ОбъектМетаданных.Имя, "План счетов " + ПредставлениеМетаданных);
		//КонецЦикла; 
		Для каждого ОбъектМетаданных Из Метаданные.РегистрыСведений Цикл
			ПредставлениеМетаданных = ?(ОбъектМетаданных.Синоним = "", ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
			Элемент.СписокВыбора.Добавить("РегистрыСведений."+ОбъектМетаданных.Имя, ПредставлениеМетаданных);
		КонецЦикла; 
		//Для каждого ОбъектМетаданных Из Метаданные.РегистрыНакопления Цикл
		//	ПредставлениеМетаданных = ?(ОбъектМетаданных.Синоним = "", ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
		//	Элемент.СписокВыбора.Добавить("РегистрыНакопления."+ОбъектМетаданных.Имя, "Рег. накопления " + ОбъектМетаданных.Имя);
		//КонецЦикла; 
		//Для каждого ОбъектМетаданных Из Метаданные.РегистрыБухгалтерии Цикл
		//	ПредставлениеМетаданных = ?(ОбъектМетаданных.Синоним = "", ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
		//	Элемент.СписокВыбора.Добавить("РегистрыБухгалтерии."+ОбъектМетаданных.Имя, "Рег. бухгалтерии " + ОбъектМетаданных.Имя);
		//КонецЦикла; 
		//Для каждого ОбъектМетаданных Из Метаданные.Задачи Цикл
		//	ПредставлениеМетаданных = ?(ОбъектМетаданных.Синоним = "", ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
		//	Элемент.СписокВыбора.Добавить("Задачи."+ОбъектМетаданных.Имя, "Задачи " + ОбъектМетаданных.Имя);
		//КонецЦикла; 
	КонецЕсли;
	Элемент.СписокВыбора.СортироватьПоПредставлению();
	
КонецПроцедуры

Процедура УстановитьПредставление(Значение, ИмяОбъекта)
	//Наименование = Лев(Значение, Найти(Значение, ".")-1) + " "+ "'"+ ИмяОбъекта + "'";		
	МассивЧастиЗначения = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(Значение, ".");
	//Если МассивЧастиЗначения.Количество() < 2 Тогда
	Префикс = "";
	Если МассивЧастиЗначения.Количество() > 1
		И НЕ СтруктураИмяМетаданныхИмяОбъекта.Свойство(МассивЧастиЗначения[0], Префикс) 
		Тогда
		Префикс = МассивЧастиЗначения[0];
	КонецЕсли;
	Наименование = Префикс + " """ + ИмяОбъекта + """";		
КонецПроцедуры

Процедура ОтчетИБПриИзменении(Элемент)
	
	Если Элемент.Значение <> Неопределено Тогда
		ОчиститьПоляВыбора(Элемент);
		УстановитьПредставление(Элемент.Значение, Элемент.ВыделенныйТекст);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСписокВыбораПоляВвода(Элемент)
	Если ТипЗнч(Элемент) <> Тип("ПолеВвода")
		ИЛИ НЕ Элемент.РежимВыбораИзСписка
		ИЛИ	Элемент.СписокВыбора.Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	Если Элемент.Имя = "ОтчетИБ" Тогда
		Для каждого ОбъектМетаданных Из Метаданные.Отчеты Цикл
			Если ПравоДоступа("Использование", ОбъектМетаданных) Тогда
				ПредставлениеМетаданных = ?(ОбъектМетаданных.Синоним = "", ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
				Элемент.СписокВыбора.Добавить("Отчеты."+ОбъектМетаданных.Имя, ПредставлениеМетаданных);
			КонецЕсли;
		КонецЦикла; 
	ИначеЕсли Элемент.Имя = "СписокДокументовИБ" Тогда
		Для каждого ОбъектМетаданных Из Метаданные.Документы Цикл
			Если ПравоДоступа("Просмотр", ОбъектМетаданных) Тогда
				ПредставлениеМетаданных = ?(ОбъектМетаданных.Синоним = "", ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
				Элемент.СписокВыбора.Добавить("Документы." + ОбъектМетаданных.Имя, ПредставлениеМетаданных);
			КонецЕсли;
		КонецЦикла; 
	ИначеЕсли Элемент.Имя = "СправочникиИБ" Тогда
		Для каждого ОбъектМетаданных Из Метаданные.Справочники Цикл
			Если ПравоДоступа("Просмотр", ОбъектМетаданных) Тогда
				ПредставлениеМетаданных = ?(ОбъектМетаданных.Синоним = "", ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
				Элемент.СписокВыбора.Добавить("Справочники." + ОбъектМетаданных.Имя, ПредставлениеМетаданных);
			КонецЕсли;
		КонецЦикла; 
	ИначеЕсли Элемент.Имя = "ОбработкаИБ" Тогда
		Для каждого ОбъектМетаданных Из Метаданные.Обработки Цикл
			Если ПравоДоступа("Просмотр", ОбъектМетаданных) Тогда
				ПредставлениеМетаданных = ?(ОбъектМетаданных.Синоним = "", ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
				Элемент.СписокВыбора.Добавить("Обработки." + ОбъектМетаданных.Имя, ПредставлениеМетаданных);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли Элемент.Имя = "СписокИБ" Тогда
		ЗаполнитьСписокИБ(Элемент);			
	КонецЕсли;
	Элемент.СписокВыбора.СортироватьПоПредставлению();
КонецПроцедуры

Процедура ОтчетИБНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ЗаполнитьСписокВыбораПоляВвода(Элемент);
	
КонецПроцедуры

Процедура СписокДокументовИБПриИзменении(Элемент)
	
	Если Элемент.Значение <> Неопределено Тогда
		ОчиститьПоляВыбора(Элемент);
		УстановитьПредставление(Элемент.Значение, Элемент.ВыделенныйТекст);
	КонецЕсли;
	
КонецПроцедуры

Процедура СписокДокументовИБНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ЗаполнитьСписокВыбораПоляВвода(Элемент);
	
КонецПроцедуры

Функция ПолучитьСтруктуруНастроек()
	
	Перем СтруктураРезультат;
	
	Для каждого ЭлементФормы Из ЭлементыФормы Цикл
		Если ТипЗнч(ЭлементФормы) = Тип("ПолеВвода") И ЗначениеЗаполнено(ЭлементФормы.Значение) Тогда
			Если ЭлементФормы.Имя = "ОбъектИБ" Тогда
			
				СтруктураРезультат = ПоместитьДанныеВСтруктуруИВхранилище("Форма", Сред(ЭлементФормы.Значение, Найти(ЭлементФормы.Значение, ".")+1), 
														Лев(ЭлементФормы.Значение, Найти(ЭлементФормы.Значение, ".")-1), "ФормаЭлемента", ОбъектИБ, Неопределено);
														
				ТипДанныхСтрока = Лев(ЭлементФормы.Значение, Найти(ЭлементФормы.Значение, ".")-1);										
				Если ТипДанныхСтрока = "Документы" Тогда
					ИмяКартинки = "ДокументОбъект";		
				ИначеЕсли ТипДанныхСтрока = "Справочники" Тогда	
					ИмяКартинки = "СправочникОбъект";	
				КонецЕсли;
				Прервать;
			ИначеЕсли ЭлементФормы.Имя = "СписокИБ" Тогда	

				СтруктураРезультат = ПоместитьДанныеВСтруктуруИВхранилище("Форма", Сред(ЭлементФормы.Значение, Найти(ЭлементФормы.Значение, ".")+1), 
														Лев(ЭлементФормы.Значение, Найти(ЭлементФормы.Значение, ".")-1), "ФормаСписка", Неопределено, Неопределено);
														
				ТипДанныхСтрока = Лев(ЭлементФормы.Значение, Найти(ЭлементФормы.Значение, ".")-1);										
				Если ТипДанныхСтрока = "Документы" Тогда
					ИмяКартинки = "ЖурналДокументов";		
				ИначеЕсли ТипДанныхСтрока = "Справочники" Тогда	
					ИмяКартинки = "Справочник";
				ИначеЕсли ТипДанныхСтрока = "РегистрыСведений" Тогда
					ИмяКартинки = "РегистрСведений";
				ИначеЕсли ТипДанныхСтрока = "РегистрыНакопления" Тогда
					ИмяКартинки = "РегистрНакопления";
				ИначеЕсли ТипДанныхСтрока = "Задачи" Тогда
					ИмяКартинки = "Задача";
				ИначеЕсли ТипДанныхСтрока = "ПланыВидовХарактеристик" Тогда
					ИмяКартинки = "ПланВидовХарактеристик";
				КонецЕсли;

				Прервать;
			ИначеЕсли ЭлементФормы.Имя = "НовыйОбъектИБ" Тогда	
				
				СтруктураРезультат = ПоместитьДанныеВСтруктуруИВхранилище("Форма", Сред(ЭлементФормы.Значение, Найти(ЭлементФормы.Значение, ".")+1), 
														Лев(ЭлементФормы.Значение, Найти(ЭлементФормы.Значение, ".")-1), "ФормаНового", Неопределено, Неопределено);
														
				ТипДанныхСтрока = Лев(ЭлементФормы.Значение, Найти(ЭлементФормы.Значение, ".")-1);										
				Если ТипДанныхСтрока = "Документы" Тогда
					ИмяКартинки = "ДокументОбъект";		
				ИначеЕсли ТипДанныхСтрока = "Справочники" Тогда	
					ИмяКартинки = "СправочникОбъект";		
				КонецЕсли;
				Прервать;
			ИначеЕсли ЭлементФормы.Имя = "ОтчетИБ" Тогда
			
				СтруктураРезультат = ПоместитьДанныеВСтруктуруИВхранилище("Форма", Сред(ЭлементФормы.Значение, Найти(ЭлементФормы.Значение, ".")+1), 
														Лев(ЭлементФормы.Значение, Найти(ЭлементФормы.Значение, ".")-1), "ФормаОтчета", Неопределено, Неопределено);
				ИмяКартинки = "Отчет";										
				Прервать;
			ИначеЕсли ЭлементФормы.Имя = "ОбработкаИБ" Тогда	
					
				СтруктураРезультат = ПоместитьДанныеВСтруктуруИВхранилище("Форма", Сред(ЭлементФормы.Значение, Найти(ЭлементФормы.Значение, ".")+1), 
														Лев(ЭлементФормы.Значение, Найти(ЭлементФормы.Значение, ".")-1), "ФормаОбработки", Неопределено, Неопределено);
				ИмяКартинки = "Обработка";										
				Прервать;
				
			ИначеЕсли ЭлементФормы.Имя = "ОбщаяФорма" Тогда	
					
				СтруктураРезультат = ПоместитьДанныеВСтруктуруИВхранилище("Форма", Сред(ЭлементФормы.Значение, Найти(ЭлементФормы.Значение, ".")+1), 
														Лев(ЭлементФормы.Значение, Найти(ЭлементФормы.Значение, ".")-1), "ОбщаяФорма", Неопределено, Неопределено);
				ИмяКартинки = "Обработка";										
				Прервать;
				
			ИначеЕсли ЭлементФормы.Имя = "СписокДокументовИБ" Тогда	
					
				СтруктураРезультат = ПоместитьДанныеВСтруктуруИВхранилище("Форма", Сред(ЭлементФормы.Значение, Найти(ЭлементФормы.Значение, ".")+1), 
														Лев(ЭлементФормы.Значение, Найти(ЭлементФормы.Значение, ".")-1), "ФормаСписка", Неопределено, Неопределено);
														
				ИмяКартинки = "ЖурналДокументов";										
				Прервать;	
			ИначеЕсли ЭлементФормы.Имя = "СправочникиИБ" Тогда	
					
				СтруктураРезультат = ПоместитьДанныеВСтруктуруИВхранилище("Форма", Сред(ЭлементФормы.Значение, Найти(ЭлементФормы.Значение, ".")+1), 
														Лев(ЭлементФормы.Значение, Найти(ЭлементФормы.Значение, ".")-1), "ФормаСписка", Неопределено, Неопределено);
														
				ИмяКартинки = "Справочник";										
				Прервать;	
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтруктураРезультат;
	
КонецФункции	

Процедура ПередЗаписью(Отказ)
	
	СтруктураРезультат = ПолучитьСтруктуруНастроек();
	
	Если ТипЗнч(СтруктураРезультат) = Тип("Структура") Тогда
		ХранилищеНастроек = Новый ХранилищеЗначения(СтруктураРезультат);
	Иначе
		Сообщить("Выберите объект для добавления!", СтатусСообщения.Внимание);
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	//ФормаМеню = Обработки.МенюБыстрогоДоступа.ПолучитьФорму();
	//Если ФормаМеню.Открыта() Тогда
	//	ФормаМеню.Активизировать();	
	//КонецЕсли;
	
КонецПроцедуры

Процедура СправочникиИБПриИзменении(Элемент)
	
	Если Элемент.Значение <> Неопределено Тогда
		ОчиститьПоляВыбора(Элемент);
		УстановитьПредставление(Элемент.Значение, Элемент.ВыделенныйТекст);
	КонецЕсли;
	
КонецПроцедуры

Процедура СправочникиИБНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	ЗаполнитьСписокВыбораПоляВвода(Элемент);
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЭлементПолеВвода = Неопределено;
	Если ЭтоНовый() И РежимРедактированияНеЗаписанногоОбъекта = Ложь Тогда
		Сотрудник = ПараметрыСеанса.ТекущийПользователь;
		Владелец = Сотрудник;
	Иначе
		СтруктураНастроек = ХранилищеНастроек.Получить();
		Если НЕ ПустаяСтрока(СтруктураНастроек.РазделМетаданных) Тогда
			Если СтруктураНастроек.РазделМетаданных = "Отчеты" Тогда
				ЭлементПолеВвода = ЭлементыФормы.ОтчетИБ;
			ИначеЕсли СтруктураНастроек.РазделМетаданных = "Документы"
				И СтруктураНастроек.ВидФормы = "ФормаСписка"
				Тогда
				ЭлементПолеВвода = ЭлементыФормы.СписокДокументовИБ;
			ИначеЕсли СтруктураНастроек.РазделМетаданных = "Справочники"
				И СтруктураНастроек.ВидФормы = "ФормаСписка"
				Тогда
				ЭлементПолеВвода = ЭлементыФормы.СправочникиИБ;
			ИначеЕсли СтруктураНастроек.РазделМетаданных = "Обработки" 
				И СтруктураНастроек.ВидФормы = "ФормаОбработки"
				Тогда
				ЭлементПолеВвода = ЭлементыФормы.ОбработкаИБ;	
			ИначеЕсли СтруктураНастроек.РазделМетаданных = "РегистрыСведений" Тогда
				ЭлементПолеВвода = ЭлементыФормы.СписокИБ;
			КонецЕсли;
			Если ЭлементПолеВвода <> Неопределено Тогда
				ЗаполнитьСписокВыбораПоляВвода(ЭлементПолеВвода);
				ЭлементПолеВвода.Значение = СтруктураНастроек.РазделМетаданных + "." + СтруктураНастроек.ИмяМетаданных;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если РольДоступна("ПолныеПрава") Тогда
		ЭлементыФормы.Сотрудник.КнопкаСпискаВыбора = Ложь;
		ЭлементыФормы.Сотрудник.КнопкаВыбора = Истина;
		ЭлементыФормы.Сотрудник.КнопкаОчистки = Истина;
		ЭлементыФормы.Сотрудник.ВыбиратьТип = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаИБПриИзменении(Элемент)
	
	Если Элемент.Значение <> Неопределено Тогда
		ОчиститьПоляВыбора(Элемент);
		УстановитьПредставление(Элемент.Значение, Элемент.ВыделенныйТекст);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаИБНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Перем ПредставлениеМетаданных;
	Если Элемент.СписокВыбора.Количество() = 0 Тогда
		Для каждого ОбъектМетаданных Из Метаданные.Обработки Цикл
			Если ПравоДоступа("Использование", ОбъектМетаданных) Тогда
				ПредставлениеМетаданных = ?(ОбъектМетаданных.Синоним = "", ОбъектМетаданных.Имя, ОбъектМетаданных.Синоним);
				Элемент.СписокВыбора.Добавить("Обработки."+ОбъектМетаданных.Имя, ПредставлениеМетаданных);
			КонецЕсли;
		КонецЦикла; 
	КонецЕсли;
	Элемент.СписокВыбора.СортироватьПоПредставлению();
	
КонецПроцедуры

Процедура ГорячаяКлавишаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Элемент.СписокВыбора.Очистить();
	Элемент.СписокВыбора.Добавить("1");
	Элемент.СписокВыбора.Добавить("2");
	Элемент.СписокВыбора.Добавить("3");
	Элемент.СписокВыбора.Добавить("4");
	Элемент.СписокВыбора.Добавить("5");
	Элемент.СписокВыбора.Добавить("6");
	Элемент.СписокВыбора.Добавить("7");
	Элемент.СписокВыбора.Добавить("8");
	Элемент.СписокВыбора.Добавить("9");
	Элемент.СписокВыбора.Добавить("0");
	
КонецПроцедуры

Процедура ОсновныеДействияФормыДобавитьДанныйПунктВсемПользователямСРолью(Кнопка)
	
	СтруктураРезультат = ПолучитьСтруктуруНастроек();
	
	Если ТипЗнч(СтруктураРезультат) <> Тип("Структура") Тогда
		Сообщить("Выберите объект для добавления!", СтатусСообщения.Внимание);
		Возврат;
	КонецЕсли;
	
	РольПользователя = ПланыВидовХарактеристик.ТипыРолейПользователя.ПустаяСсылка();
	Если ВвестиЗначение(РольПользователя, "Выберите роль") Тогда
		Если ЗначениеЗаполнено(РольПользователя) Тогда
			Запрос = Новый Запрос();
			Запрос.УстановитьПараметр("ТипРоли", РольПользователя);
			Запрос.Текст = "ВЫБРАТЬ
			               |	Пользователи.Ссылка
			               |ИЗ
			               |	Справочник.Пользователи КАК Пользователи
			               |ГДЕ
			               |	Пользователи.ФизЛицо В
			               |			(ВЫБРАТЬ
			               |				РолиПользователейСоставРоли.Сотрудник
			               |			ИЗ
			               |				РегистрСведений.СоответствиеОбъектРоль.СрезПоследних КАК СоответствиеОбъектРольСрезПоследних ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
			               |					ПО
			               |						СоответствиеОбъектРольСрезПоследних.РольПользователя = РолиПользователейСоставРоли.Ссылка
			               |			ГДЕ
			               |				СоответствиеОбъектРольСрезПоследних.ТипРоли = &ТипРоли)";
						   
			МассивПольз = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			
			Запрос.УстановитьПараметр("Пользователи", МассивПольз);
			Запрос.Текст = "ВЫБРАТЬ
			               |	МенюБыстрогоДоступа.Ссылка,
			               |	МенюБыстрогоДоступа.ХранилищеНастроек,
			               |	Пользователи.Ссылка КАК Владелец
			               |ИЗ
			               |	Справочник.Пользователи КАК Пользователи
			               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МенюБыстрогоДоступа КАК МенюБыстрогоДоступа
			               |		ПО Пользователи.Ссылка = МенюБыстрогоДоступа.Владелец
			               |ГДЕ
			               |	Пользователи.Ссылка В(&Пользователи)
			               |	И ЕСТЬNULL(МенюБыстрогоДоступа.ЭтоГруппа, ЛОЖЬ) = ЛОЖЬ
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	Владелец";
						   
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.СледующийПоЗначениюПоля("Владелец") Цикл
				ЕстьУПользователя = Ложь;
				Пока Выборка.Следующий() Цикл
					Если ТипЗнч(Выборка.ХранилищеНастроек) = Тип("ХранилищеЗначения") Тогда
						СтрЭлемент = Выборка.ХранилищеНастроек.Получить();
						Если ТипЗнч(СтрЭлемент) = Тип("Структура") Тогда
							Если СтруктураРезультат.ТипЭлемента = СтрЭлемент.ТипЭлемента
								И СтруктураРезультат.ИмяМетаданных = СтрЭлемент.ИмяМетаданных
								И СтруктураРезультат.РазделМетаданных = СтрЭлемент.РазделМетаданных Тогда
								ЕстьУПользователя = Истина;
								Прервать;
							КонецЕсли;	
						КонецЕсли;
					КонецЕсли;	
				КонецЦикла;	
				Если НЕ ЕстьУПользователя Тогда
					СпрОбъект = Справочники.МенюБыстрогоДоступа.СоздатьЭлемент();
					СпрОбъект.Наименование = Наименование;
					СпрОбъект.Комментарий = Комментарий;
					СпрОбъект.Владелец = Выборка.Владелец;
					СпрОбъект.ИмяКартинки = ИмяКартинки;
					СпрОбъект.ГорячаяКлавиша = ГорячаяКлавиша;
					СпрОбъект.ХранилищеНастроек = Новый ХранилищеЗначения(СтруктураРезультат);
					СпрОбъект.Записать();
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры


СтруктураИмяМетаданныхИмяОбъекта = Новый Структура;
СтруктураИмяМетаданныхИмяОбъекта.Вставить("Справочники", "Справочник");
СтруктураИмяМетаданныхИмяОбъекта.Вставить("Отчеты", "Отчет");
СтруктураИмяМетаданныхИмяОбъекта.Вставить("Обработки", "Обработка");
СтруктураИмяМетаданныхИмяОбъекта.Вставить("ОбщиеФормы", "Общая форма");