Перем НеЛогироватьСменуАктивности Экспорт;
Перем ИсторияИзмененияРеквизитов; //+++АК SHEP 2017.11.29 ИП-00016064.01: сохраняем историю изменения реквизитов

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция устанавливает новое наименование характеристики по значениям свойств.
//
// Параметры:
//  КоллекцияЗначенийСвойств - коллекция значений, имеющая свойство Значение.
//
// Возвращаемое значение:
//  Строка - сформированное наименование.
//
Функция СформироватьНаименование(КоллекцияЗначенийСвойств) Экспорт
	
	Если НеФормироватьНаименованиеАвтоматически Тогда
		Возврат Наименование;
	КонецЕсли;	
	
	Строка = "";
	Для каждого ЭлементКоллекции Из КоллекцияЗначенийСвойств Цикл
		Если ЗначениеЗаполнено(ЭлементКоллекции.Значение) Тогда
			Если ЭлементКоллекции.Свойство.НеИспользоватьВНаименовании Тогда
				Продолжить;
			КонецЕсли;
			Строка = Строка + ЭлементКоллекции.Значение + ", ";
		КонецЕсли;
	КонецЦикла;
	Строка = Лев(Строка, СтрДлина(Строка) - 2);
	Если ПустаяСтрока(Строка) Тогда
		Строка = "<Свойства не назначены>";
	КонецЕсли;
	
	Если Владелец.Фасуется
		И ЗначениеЗаполнено(ХарактеристикаФасовка) Тогда
		Строка = Строка + " (фасованный)"
	КонецЕсли;	
	
	Возврат Строка;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПриКопировании(ОбъектКопирования)
	
	ЭтотОбъект.ИД = 0;
	НеФормироватьНаименованиеАвтоматически = Ложь;
	ЭтотОбъект.ДатаСоздания = Неопределено;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	
	
	Если СрокГодностиНеограничен Тогда
		СрокГодности = 999;
		ТипСрокаГодности = Справочники.ТипыСроковГодности.НайтиПоКоду("000000005");
	КонецЕсли;	
	
	//++AK LOBV
	Если СрокГодности = 0
			И Владелец.ТипТовара = Перечисления.ТипыТоваров.ПокупнойТовар
			И Владелец.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Товар тогда
		Сообщить("Укажите срок годности!");
		Отказ = Истина;
	Иначе
		//--АК LOBV
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ИДЭлемента) Тогда
			ЭтотОбъект.ИДЭлемента = ОбщегоНазначенияСервер.ПолучитьНовыйУникальныйИдентификатор("ХарактеристикиНоменклатуры", "ИДЭлемента");
		КонецЕсли;
		
		Если ЭтотОбъект.ЭтоНовый() Тогда
			ЭтотОбъект.ДатаСоздания = ТекущаяДата();
		КонецЕсли;	
		
		ЭтотОбъект.Неактивная = (ЭтотОбъект.СтатусАктивностиХарактеристики = Перечисления.СтатусыАктивностиХарактеристик.Неактивная);
		
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект.ПредельноеКоличествоДнейСрокаГодности)
				И ЗначениеЗаполнено(ЭтотОбъект.ТипСрокаГодности)
				И ЗначениеЗаполнено(ЭтотОбъект.СрокГодности) Тогда
			СрокВДнях = ЭтотОбъект.ТипСрокаГодности.КоэффициентВСутках * ЭтотОбъект.СрокГодности;
			СрокВДнях = Окр(СрокВДнях, 0, РежимОкругления.Окр15как20);
			Если СрокВДнях < 666 Тогда
				ЭтотОбъект.ПредельноеКоличествоДнейСрокаГодности = Цел(СрокВДнях * 0.3);
			Иначе	
				ЭтотОбъект.ПредельноеКоличествоДнейСрокаГодности = Цел(СрокВДнях * 0.6);
			КонецЕсли;
			Если ЭтотОбъект.ПредельноеКоличествоДнейСрокаГодности = 0 Тогда
				ЭтотОбъект.ПредельноеКоличествоДнейСрокаГодности = 1;
			КонецЕсли;	
		КонецЕсли;	
		
		Если НЕ ЭтотОбъект.ЭтоНовый()
				И НеЛогироватьСменуАктивности = Ложь Тогда
			Если ЭтотОбъект.СтатусАктивностиХарактеристики <> ЭтотОбъект.Ссылка.СтатусАктивностиХарактеристики Тогда
				Запись = РегистрыСведений.ЛогированиеСменыСтатусовАктивности.СоздатьМенеджерЗаписи();
				Запись.Период 		= ТекущаяДата();
				Запись.Объект 		= ЭтотОбъект.Ссылка;
				Запись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
				Запись.Комментарий 	= "Смена в элементе справочника пользователем. Установлено значение Статус активности характеристики: " + ЭтотОбъект.СтатусАктивностиХарактеристики+
				//+++АК BELN 2017.12.09 
				//+++АК SHEP 2018.05.28 ИП-00018185: добавил причину приостановки
				//" Причина "+ЭтотОбъект.Причина+" Статус "+Строка(ЭтотОбъект.Статус)+" Дата вывода/приостановки "+Строка(Формат(ЭтотОбъект.ДатаВывода,"ДФ=dd.MM.yy"))+" Дата ожидаемого возврата "+Строка(Формат(ЭтотОбъект.ДатаОжидаемогоВозврата,"ДФ=dd.MM.yy"));
				" Причина: " + ЭтотОбъект.ПричинаПриостановки + " Комментарий к причине: " + ЭтотОбъект.Причина
				+ " Статус " + Строка(ЭтотОбъект.Статус) + " Дата вывода/приостановки " + Формат(ЭтотОбъект.ДатаВывода, "ДФ=dd.MM.yy")
				+ " Дата ожидаемого возврата " + Формат(ЭтотОбъект.ДатаОжидаемогоВозврата, "ДФ=dd.MM.yy");
				//---АК SHEP 2018.05.28
				//---АК BELN 2017.12.09 
				Запись.Статус 		= ЭтотОбъект.СтатусАктивностиХарактеристики;
				Запись.Записать();
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;	
	
	//mind отключил эту проверку
	//Если СтатусАктивностиХарактеристики = Перечисления.СтатусыАктивностиХарактеристик.Неактивная
	//	И Ссылка.СтатусАктивностиХарактеристики <> Перечисления.СтатусыАктивностиХарактеристик.Выведена
	//	И Ссылка.СтатусАктивностиХарактеристики <> Перечисления.СтатусыАктивностиХарактеристик.Неактивная Тогда
	//	Сообщить("Нельзя перевести характеристику в неактивные из статуса отличного от выведена");
	//	Отказ = Истина;
	//	ЗаписьЖурналаРегистрации("Ошибка перевода статуса", УровеньЖурналаРегистрации.Ошибка,, Ссылка, "Нельзя перевести характеристику в неактивные из статуса отличного от выведена");
	//КонецЕсли;
	
	//Минеев отключил этот код, так как это все отрабатывает регл заданием
	////++++ АК AZAP 29.03.2017 ИП-00015402
	////если статус меняется на "Активна"
	////Если Ложь Тогда
	//Если СтатусАктивностиХарактеристики <> Ссылка.СтатусАктивностиХарактеристики
	//	И СтатусАктивностиХарактеристики = Перечисления.СтатусыАктивностиХарактеристик.Активна Тогда
	//	
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = "ВЫБРАТЬ
	//				   |	ХарактеристикиНоменклатуры.Ссылка
	//				   |ИЗ
	//				   |	Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
	//				   |ГДЕ
	//				   |	ХарактеристикиНоменклатуры.Ссылка <> &Ссылка
	//				   |	И ХарактеристикиНоменклатуры.СтатусАктивностиХарактеристики = &СтатусАктивностиХарактеристики
	//				   |	И ХарактеристикиНоменклатуры.Владелец = &Номенклатура";
	//	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	//	Запрос.УстановитьПараметр("Номенклатура", Владелец);
	//	Запрос.УстановитьПараметр("СтатусАктивностиХарактеристики", Перечисления.СтатусыАктивностиХарактеристик.Активна);
	//	АктивныеХарактеристикиНоменклатурыВладельца = Запрос.Выполнить().Выгрузить();
	//	
	//	//если нет других активных характеристик у номенклатуры
	//	Если АктивныеХарактеристикиНоменклатурыВладельца.Количество() = 0 Тогда	
	//		
	//		Запрос = Новый Запрос;
	//		Запрос.Текст = "ВЫБРАТЬ
	//					   |	СтруктурныеЕдиницы.Ссылка
	//					   |ИЗ
	//					   |	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	//					   |ГДЕ
	//					   |	СтруктурныеЕдиницы.СтатусТорговойТочки = &СтатусТорговойТочки
	//					   |	И СтруктурныеЕдиницы.ТипРозничнойТочки = ЗНАЧЕНИЕ(Перечисление.ТипыРозничныхТочек.Магазин)
	//					   |	И НЕ СтруктурныеЕдиницы.Ссылка В
	//					   |				(ВЫБРАТЬ
	//					   |					ТТГдеБылаВыведенаИлиГдеУжеЕсть.ТорговаяТочка
	//					   |				ИЗ
	//					   |					РегистрСведений.ТоварныйАссортиментТочек.СрезПоследних(&Дата, Номенклатура = &Номенклатура) КАК ТТГдеБылаВыведенаИлиГдеУжеЕсть
	//					   |		
	//					   |				ОБЪЕДИНИТЬ ВСЕ
	//					   |		
	//					   |				ВЫБРАТЬ
	//					   |					МестаХраненияВМагазинахГдеНеХватает.Магазин
	//					   |				ИЗ
	//					   |					РегистрСведений.МестаХраненияВМагазинах КАК МестаХраненияВМагазинахГдеНеХватает
	//					   |				ГДЕ
	//					   |					МестаХраненияВМагазинахГдеНеХватает.Хватает = ЛОЖЬ
	//					   |					И МестаХраненияВМагазинахГдеНеХватает.МестоВыкладки В
	//					   |						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	//					   |							ВыкладкаПланограммы.МестоВыкладки.Родитель
	//					   |						ИЗ
	//					   |							РегистрСведений.ВыкладкаПланограммы КАК ВыкладкаПланограммы
	//					   |						ГДЕ
	//					   |							ВыкладкаПланограммы.Номенклатура = &Номенклатура))";
	//		Запрос.УстановитьПараметр("Дата", ТекущаяДата());
	//		Запрос.УстановитьПараметр("СтатусТорговойТочки", Перечисления.СтатусыТорговыхТочек.Открыт);
	//		Запрос.УстановитьПараметр("Номенклатура", Владелец);
	//		ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	//		
	//		НаборЗаписей = РегистрыСведений.ТоварныйАссортиментТочек.СоздатьНаборЗаписей();
	//		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//			НоваяЗапись = НаборЗаписей.Добавить();
	//			НоваяЗапись.Активность		= Истина;
	//			НоваяЗапись.Выведена		= Ложь;
	//			НоваяЗапись.Номенклатура	= Владелец;
	//			НоваяЗапись.Период			= ТекущаяДата();
	//			НоваяЗапись.ТорговаяТочка	= ВыборкаДетальныеЗаписи.Ссылка;
	//			НоваяЗапись.Характеристика	= Ссылка;
	//		КонецЦикла;
	//		Если НаборЗаписей.Количество() > 0 Тогда
	//			НаборЗаписей.Записать(Ложь);
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;
	//
	
	
	// АК БЕЛН 18.04.2017+
	Если (Статус = Перечисления.СтатусыХарактеристик.НаВывод
						ИЛИ Статус = Перечисления.СтатусыХарактеристик.Приостановлена) И Не ЗначениеЗаполнено(ДатаВывода)  Тогда
		Отказ=Истина;	
		Сообщить("Необходимо заполнить дату вывода");
	
	КонецЕсли; 
	// АК БЕЛН 18.04.2017-

	
	//---- АК AZAP
	
	//+++АК SHEP 2017.11.29 ИП-00016064.01: сохраняем историю изменения реквизитов
	Если НЕ Отказ Тогда
		УстановитьПривилегированныйРежим(Истина);
		ИсторияИзмененияРеквизитов = Новый Структура;
		
		МассивПолейДляПроверкиИзменений = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("РазрешённоеКоличествоЗаказа");
		Для Каждого ИмяПоляДляПроверкиИзменений Из МассивПолейДляПроверкиИзменений Цикл
			Если ЭтотОбъект[ИмяПоляДляПроверкиИзменений] <> Ссылка[ИмяПоляДляПроверкиИзменений] Тогда
				СтруктураИзменений = Новый Структура("ЗначениеБыло,ЗначениеСтало", Ссылка[ИмяПоляДляПроверкиИзменений], ЭтотОбъект[ИмяПоляДляПроверкиИзменений]);
				ИсторияИзмененияРеквизитов.Вставить(ИмяПоляДляПроверкиИзменений, СтруктураИзменений);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//---АК SHEP 2017.11.29
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//+++shar
	// Регистрация изменений в плане обмена
	Попытка
		
		УстановитьПривилегированныйРежим(Истина);
		
		//+++АК SHEP 20160810: исключаем ненужные узлы
		ПрофилиИспользования = Новый Массив;
		ПрофилиИспользования.Добавить(ПредопределенноеЗначение("Справочник.МП_ПрофилиИспользования.Строитель"));
		ПрофилиИспользования.Добавить(ПредопределенноеЗначение("Справочник.МП_ПрофилиИспользования.ПлановыйАссортимент"));
		ПрофилиИспользования.Добавить(ПредопределенноеЗначение("Справочник.МП_ПрофилиИспользования.НовыеТоварыТехнолог"));
		ПрофилиИспользования.Добавить(ПредопределенноеЗначение("Справочник.МП_ПрофилиИспользования.НовыеТоварПостановщикЗадач"));
		//---АК SHEP 20160810
		
		МассивУзлов = Новый Массив;
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ПрофилиИспользования", ПрофилиИспользования);
		Запрос.УстановитьПараметр("ЭтотУзел"			, ПланыОбмена.МобильноеПриложение.ЭтотУзел());
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МобильноеПриложение.Ссылка
		|ИЗ
		|	ПланОбмена.МобильноеПриложение КАК МобильноеПриложение
		|ГДЕ
		|	МобильноеПриложение.Ссылка <> &ЭтотУзел
		|	И НЕ МобильноеПриложение.Профиль В (&ПрофилиИспользования)";
		МассивУзлов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
		
		Если ЭтоГруппа Тогда
			ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов, ЭтотОбъект.Ссылка);
		Иначе
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ШтриховыеКоды.Номенклатура,
			|	ШтриховыеКоды.ШтрихКод
			|ИЗ
			|	РегистрСведений.ШтриховыеКоды КАК ШтриховыеКоды
			|ГДЕ
			|	ШтриховыеКоды.Характеристика = &Ссылка";
			Запрос.УстановитьПараметр("Ссылка", Ссылка);
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				ПланыОбмена.ЗарегистрироватьИзменения(МассивУзлов, ЭтотОбъект.Ссылка);
			КонецЕсли;
			
		КонецЕсли;
		
	Исключение
		ЗаписьЖурналаРегистрации(ОписаниеОшибки(), УровеньЖурналаРегистрации.Ошибка);
	КонецПопытки;
	
	//+++АК SHEP 2017.11.29 ИП-00016064.01: сохраняем историю изменения реквизитов
	Если ИсторияИзмененияРеквизитов.Количество() > 0 Тогда
		Для Каждого СтруктураИзменений Из ИсторияИзмененияРеквизитов Цикл
			ЗаписьРС = РегистрыСведений.ИсторияИзмененияРеквизитов.СоздатьМенеджерЗаписи();
			ЗаписьРС.Период = ТекущаяДата();
			ЗаписьРС.Ссылка = Ссылка;
			ЗаписьРС.ИмяРеквизита = СтруктураИзменений.Ключ;
			ЗаписьРС.Автор = ПараметрыСеанса.ТекущийПользователь;
			ЗаполнитьЗначенияСвойств(ЗаписьРС, СтруктураИзменений.Значение);
			ЗаписьРС.Записать();
		КонецЦикла;
	КонецЕсли;
	//---АК SHEP 2017.11.29
	
	////+++АК MIND 2017.12.24 
	//Запрос = Новый Запрос();
	//Запрос.УстановитьПараметр("Объект", Ссылка);
	//Запрос.УстановитьПараметр("ИД", id_kontr);
	//Запрос.Текст = "ВЫБРАТЬ
	//               |	ВЫРАЗИТЬ(ЗначенияСвойствОбъектов.Значение КАК Справочник.Контрагенты).ИД КАК ИД
	//               |ИЗ
	//               |	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	//               |ГДЕ
	//               |	ЗначенияСвойствОбъектов.Объект = &Объект
	//               |	И ЗначенияСвойствОбъектов.Свойство = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СвойстваОбъектов.Производитель)
	//               |	И ВЫРАЗИТЬ(ЗначенияСвойствОбъектов.Значение КАК Справочник.Контрагенты).ИД <> &ИД";
	//
	//Выборка = Запрос.Выполнить().Выбрать();
	//Если Выборка.Следующий() Тогда
	//	СпрОб = Ссылка.ПолучитьОбъект();
	//	СпрОб.id_kontr = Выборка.ИД;
	//	СпрОб.ОбменДанными.Загрузка = Истина;
	//	СпрОб.Записать();
	//КонецЕсли;	
	
	УстановитьПривилегированныйРежим(Ложь);
	//---shar
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЭтотОбъект.ЭтоНовый() Тогда
		ЭтотОбъект.СтатусАктивностиХарактеристики = Перечисления.СтатусыАктивностиХарактеристик.Новая;
	КонецЕсли;	
	
КонецПроцедуры


НеЛогироватьСменуАктивности = Ложь;
