
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЭлементыФормы.ПолеТекстовогоДокумента1.УстановитьТекст(СтрокаАлгоритм);
	Расписание = ХранилищеРасписания.Получить();
	Если ТипЗнч(Расписание) <> Тип("РасписаниеРегламентногоЗадания") Тогда
		Расписание = Новый РасписаниеРегламентногоЗадания();
	КонецЕсли;
	
	Макет = МакетОтчета.Получить();
	Если ТипЗнч(Макет) = Тип("ТабличныйДокумент") Тогда
		ЭлементыФормы.ПолеТабличногоДокумента1.Вывести(Макет);
	КонецЕсли;	
	
	//+++shae 2018.10.08 ИП-00019345.01
	Если ПростаяНастройка Тогда		
		ЭлементыФормы.ТекстЗапроса.УстановитьТекст(ТекстЗапроса);		
	КонецЕсли;
	//---shae 2018.10.08 ИП-00019345.01
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	СтрокаАлгоритм = ЭлементыФормы.ПолеТекстовогоДокумента1.ПолучитьТекст();
	ХранилищеРасписания = Новый ХранилищеЗначения(Расписание, Новый СжатиеДанных(9));
	ВремФайл = ПолучитьИмяВременногоФайла("mxl");
	ЭлементыФормы.ПолеТабличногоДокумента1.Записать(ВремФайл);
	ТабДок = Новый ТабличныйДокумент();
	ТабДок.Прочитать(ВремФайл);
	УдалитьФайлы(ВремФайл);
	МакетОтчета = Новый ХранилищеЗначения(ТабДок, Новый СжатиеДанных(9));
	//+++shae 2018.10.08 ИП-00019345.01
	Если ПростаяНастройка Тогда 
		ТекстЗапроса = ЭлементыФормы.ТекстЗапроса.ПолучитьТекст();
		Попытка 
			Справочники.ПериодическиеЗадания.ВыполнитьЗапрос(ТекстЗапроса, Параметры);
		Исключение
			Сообщить(ОписаниеОшибки());
			Отказ = Истина;
		КонецПопытки;
	КонецЕсли;	
	//---shae 2018.10.08 ИП-00019345.01 
	
КонецПроцедуры

Процедура НадписьРасписаниеВыполненияНажатие(Элемент)
	
	Диалог = Новый ДиалогРасписанияРегламентногоЗадания(Расписание);
	Если Диалог.ОткрытьМодально() Тогда
		Расписание = Диалог.Расписание;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ДействияФормыВыполнить(Кнопка)
	Перем ТекущаяОбработка;
	
	//+++shae 2018.10.08 ИП-00019345.01 
	Если ПростаяНастройка Тогда 
		ТекущийОбъект = Новый Структура("Код,Наименование,ТекстПисьма,ОтправлятьСообщениеВсегда,ТекстЗапроса",Код,Наименование,ТекстПисьма,ОтправлятьСообщениеВсегда,ЭлементыФормы.ТекстЗапроса.ПолучитьТекст());
		Справочники.ПериодическиеЗадания.ВыполнитьПоПростойНастройке(ТекущийОбъект, ПолучателиРассылки, Параметры);		
	Иначе	
	//---shae 2018.10.08 ИП-00019345.01   
		ТекущаяОбработка = Ссылка;
		Выполнить(ЭлементыФормы.ПолеТекстовогоДокумента1.ПолучитьТекст());
	КонецЕсли;	
КонецПроцедуры

//shae 2018.10.08 ИП-00019345.01
Процедура УстановитьВидимость()
	
	ЭлементыФормы.ОтправлятьСообщениеВсегда.Видимость 		= ПростаяНастройка;
	ЭлементыФормы.Панель1.Страницы.МакетОтчета.Видимость 	= НЕ ПростаяНастройка;	
	ЭлементыФормы.ПанельАлгоритм.ТекущаяСтраница =?(ПростаяНастройка,ЭлементыФормы.ПанельАлгоритм.Страницы.СтраницаПростаяНастройка,
																		ЭлементыФормы.ПанельАлгоритм.Страницы.СтраницаАлгоритм);
	
КонецПроцедуры

//shae 2018.10.08 ИП-00019345.01
Процедура ПриОткрытии()
	УстановитьВидимость();
КонецПроцедуры

//shae 2018.10.08 ИП-00019345.01
Процедура ПростаяНастройкаПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры

//shae 2018.10.08 ИП-00019345.01
Процедура КоманднаяПанельФормыПолучитьИзЗапроса(Кнопка)
	
	ТекстЗапроса = ЭлементыФормы.ТекстЗапроса.ПолучитьТекст();
	Если ПустаяСтрока(ТекстЗапроса) Тогда
		Предупреждение("Отсутствует текст запроса.");
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Попытка
		ПараметрыЗапроса = Запрос.НайтиПараметры();
	Исключение
		Предупреждение(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	Для каждого ПараметрЗапроса Из ПараметрыЗапроса Цикл
		ИмяПараметра =  ПараметрЗапроса.Имя;
		СтрокаПараметров = Параметры.Найти(ИмяПараметра,"ИмяПараметра");
		Если  СтрокаПараметров = Неопределено Тогда
			СтрокаПараметров = Параметры.Добавить();
			СтрокаПараметров.ИмяПараметра = ИмяПараметра;
		КонецЕсли; 
		СтрокаПараметров.ЗначениеПараметра = ПараметрЗапроса.ТипЗначения.ПривестиЗначение(СтрокаПараметров.ЗначениеПараметра);
	КонецЦикла;
	
КонецПроцедуры

//shae 2018.10.08 ИП-00019345.01
Процедура ЗаполнитьИдТелеграм(ТекущаяСтрока, УИД)
	
	ТекстЗапроса =
	"SELECT [_Code] as telegram_id
	|FROM [RecognitionSystem].[dbo].[_Reference3571] with (nolock)
	|WHERE _Fld3664 = 0x01 and [_Fld3643] = '" + УИД + "'
	|";
	СтрокаПодключения = ВнешниеДанные.ПолучитьСтрокуПодключенияMSSQL("srv-sql04", "RecognitionSystem");	
	Попытка	
		
		CurrentConnection = Новый COMОбъект("ADODB.Connection");
		CurrentConnection.ConnectionTimeOut = 90; //минеев добавил таймауты
		CurrentConnection.CommandTimeOut    = 90;
		CurrentConnection.Open(СтрокаПодключения);				
		CurrentConnection.CursorLocation = 2;		
		rs = CurrentConnection.Execute(ТекстЗапроса);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	Пока rs <> Неопределено И rs.Fields.Count <= 0 Цикл
		rs=rs.NextRecordSet();
	КонецЦикла;
	
	Попытка	
		rs.MoveFirst();	
		Если НЕ rs.EOF() тогда
			ТекущаяСтрока.ИдТелеграм = rs.Fields("telegram_id").Value;			
		КонецЕсли;;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

//shae 2018.10.08 ИП-00019345.01
Процедура ПолучателиРассылкиФизЛицоПриИзменении(Элемент)
	
	ТекущаяСтрока = ЭлементыФормы.ПолучателиРассылки.ТекущиеДанные;
	ТекущаяСтрока.ИдТелеграм 		= 0;
	ТекущаяСтрока.ЭлектронныйАдрес  = "";
	Если ЗначениеЗаполнено(ТекущаяСтрока.ФизЛицо) Тогда 
		ТекущаяСтрока.ЭлектронныйАдрес = УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(ТекущаяСтрока.ФизЛицо);
		ЗаполнитьИдТелеграм(ТекущаяСтрока, ТекущаяСтрока.ФизЛицо.УникальныйИдентификатор());
	КонецЕсли;

КонецПроцедуры

//shae 2018.10.08 ИП-00019345.01
Процедура ПараметрыПриИзмененииФлажка(Элемент, Колонка)
	
	ТекущаяСтрока = ЭлементыФормы.Параметры.ТекущиеДанные;
	Если ТекущаяСтрока.ЭтоВыражение Тогда
		Если Не ТипЗнч(Элемент.ТекущаяСтрока.ЗначениеПараметра) = Тип("Строка") Тогда
			Элемент.ТекущаяСтрока.ЗначениеПараметра = "";
		КонецЕсли; 
	КонецЕсли;

КонецПроцедуры

//shae 2018.10.08 ИП-00019345.01
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ПростаяНастройка Тогда 
		ТекстЗапросаТекущий = ЭлементыФормы.ТекстЗапроса.ПолучитьТекст();
		Если НЕ ТекстЗапроса = ТекстЗапросаТекущий Тогда 
			ТекстЗапроса = ТекстЗапросаТекущий;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

