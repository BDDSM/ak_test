Перем мИспользоватьОграниченияПравДоступаНаУровнеЗаписей;
Перем мМассивПустыхЗначенийОбъектаДоступа;


////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ

Процедура ИзменитьФлажкиВидовОбъектовДоступа(Значение)

	Для каждого Строка Из ВидыОбъектовДоступа Цикл
		Строка.Использование = Значение;
	КонецЦикла; 
	
	ЗаполнитьИнформациюОбОграниченииДоступа();

КонецПроцедуры

// Процедура сохраняет состав видов объектов доступа
//
Процедура СохранитьНазначениеВидовОбъектовДоступа()

	Если мИспользоватьОграниченияПравДоступаНаУровнеЗаписей Тогда
		
		// Запишем НазначениеВидовОбъектовДоступа
		НаборЗаписей = РегистрыСведений.НазначениеВидовОбъектовДоступа.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ГруппаПользователей.Использование 	= Истина;
		НаборЗаписей.Отбор.ГруппаПользователей.Значение 		= ЭтотОбъект.Ссылка;
		
		Для каждого Строка Из ВидыОбъектовДоступа Цикл
			Если Строка.Использование Тогда
				НоваяЗапись = НаборЗаписей.Добавить();
				НоваяЗапись.ВидОбъектаДоступа 	= Строка.ВидОбъектаДоступа;
				НоваяЗапись.ГруппаПользователей = ЭтотОбъект.Ссылка;
			КонецЕсли; 
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьИнформациюОбОграниченииДоступа()

	// Определим, что доступ ограничен
	// Для этого должен быть установлен параметр доступа на уровне записей "Ограничить доступ на уровне записей по видам объектов"
	// И выбран хотябы один вид объекта доступа
	ДоступОграничен 					= Ложь;
	ДоступОграниченПоВсемВидамОбъектов 	= Ложь;
	Если мИспользоватьОграниченияПравДоступаНаУровнеЗаписей Тогда
		МассивВидовОбъектов = Новый Массив;
		Для каждого ЭлКоллекции Из ВидыОбъектовДоступа Цикл
			Если ЭлКоллекции.Использование Тогда
				МассивВидовОбъектов.Добавить(ЭлКоллекции.ВидОбъектаДоступа);
			КонецЕсли;
		КонецЦикла; 
		
		Если МассивВидовОбъектов.Количество() <> 0 Тогда
			ДоступОграничен = Истина;
		КонецЕсли;
		
		ДоступОграниченПоВсемВидамОбъектов = (МассивВидовОбъектов.Количество() = ВидыОбъектовДоступа.Количество());
	КонецЕсли; 	
	
	// Определим количество доступных объектов из настройки доступа
	// Для новой группы нет настроек доступа
	ЕстьНастройкаДоступа = Ложь;
	ЕстьДоступныеОбъекты = Ложь;
	Если НЕ ЭтоНовый()
			И ДоступОграничен Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка"				, ЭтотОбъект.Ссылка);
		Запрос.УстановитьПараметр("МассивВидовОбъектов"	, МассивВидовОбъектов);
		Запрос.УстановитьПараметр("СписокПустыхСсылок"	, мМассивПустыхЗначенийОбъектаДоступа);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НастройкаДоступа.ОбъектДоступа) КАК ДоступноОбъектов,
		|	НастройкаДоступа.ВидОбъектаДоступа КАК ВидОбъектаДоступа,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА НастройкаДоступа.ВидНаследованияПравДоступаИерархическихСправочников = ЗНАЧЕНИЕ(Перечисление.ВидыНаследованияПравДоступаИерархическихСправочников.РаспространитьНаПодчиненных)
		|					И НастройкаДоступа.ОбъектДоступа В (&СписокПустыхСсылок)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК ДоступКоВсем
		|ИЗ
		|	РегистрСведений.НастройкиПравДоступаПользователей КАК НастройкаДоступа
		|ГДЕ
		|	НастройкаДоступа.Пользователь = &Ссылка
		|	И НастройкаДоступа.ВидОбъектаДоступа В(&МассивВидовОбъектов)
		|
		|СГРУППИРОВАТЬ ПО
		|	НастройкаДоступа.ВидОбъектаДоступа";
		
		НастройкаДоступа = Запрос.Выполнить().Выгрузить();
		ЕстьНастройкаДоступа = Истина;
	КонецЕсли; 
	
	НадписьЧтениеВсехОбъектов = "<все>";
	НадписьОтсутствуетЧтениеОбъектов = "-";
	
	// Заполним информацию по видам объектов
	Для каждого ЭлКоллекции Из ВидыОбъектовДоступа Цикл
		
		Если ЭлКоллекции.Использование Тогда
			
			ДоступноОбъектов = НадписьОтсутствуетЧтениеОбъектов;
			
			Если ЕстьНастройкаДоступа Тогда
				СтрокаНастройка = НастройкаДоступа.Найти(ЭлКоллекции.ВидОбъектаДоступа, "ВидОбъектаДоступа");
				Если СтрокаНастройка <> Неопределено Тогда
					Если СтрокаНастройка.ДоступКоВсем Тогда
						ДоступноОбъектов = НадписьЧтениеВсехОбъектов;
					Иначе
						ДоступноОбъектов = СтрокаНастройка.ДоступноОбъектов;
					КонецЕсли;
					ЕстьДоступныеОбъекты = Истина;
				КонецЕсли; 
			КонецЕсли; 
			
		Иначе
			
			ДоступноОбъектов = НадписьЧтениеВсехОбъектов;
			
		КонецЕсли; 
		
		ЭлКоллекции.ДоступноОбъектов = ДоступноОбъектов;
		
	КонецЦикла; 
	
	// Сформируем информационную надпись об ограничении доступа
	Если ДоступОграничен Тогда
		Если ЕстьДоступныеОбъекты Тогда
			НадписьПредупреждениеОграниченияДоступа = "Доступ ограничен: есть доступные объекты";
		Иначе
			НадписьПредупреждениеОграниченияДоступа = "Доступ ограничен: нет доступных объектов";
		КонецЕсли; 
	Иначе
		НадписьПредупреждениеОграниченияДоступа = "Доступ не ограничен";
	КонецЕсли;
	
	ЭлементыФормы.НадписьПредупреждениеОграниченияДоступа.Заголовок = НадписьПредупреждениеОграниченияДоступа;
	
КонецПроцедуры //
 
Процедура ПользователиГруппыПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)

	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если (ОтменаРедактирования
			И НоваяСтрока)
		ИЛИ НЕ ЗначениеЗаполнено(ТекущиеДанные.Пользователь) Тогда
		
		Возврат;
	КонецЕсли;
	
	НайденныеСтроки = ПользователиГруппы.НайтиСтроки(Новый Структура("Пользователь", ТекущиеДанные.Пользователь));
	Если НайденныеСтроки.Количество() > 1 Тогда
		Предупреждение("Пользователь уже входит в эту группу!");
		Отказ = Истина;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ВидыОбъектовДоступаПриИзмененииФлажка(Элемент, Колонка)
	
	ЗаполнитьИнформациюОбОграниченииДоступа();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Функция ЗаписатьПриМодифицированности()
	
	Если НЕ ЭтоНовый()
			И НЕ Модифицированность Тогда
		Возврат Истина;
	КонецЕсли;
	
	ТекстВопроса = "Для выполнения данной операции необходимо записать элемент. Записать?";
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат Ложь;
	КонецЕсли; 
	
	УспешноЗаписан = Ложь;
	Попытка
		
		УспешноЗаписан = ЗаписатьВФорме();
		
	Исключение
		
	КонецПопытки;
	
	Возврат УспешноЗаписан

КонецФункции // ЗаписатьПользователяПриМодифицированности

Процедура ДействияФормыПрава(Кнопка)
	
	Если НЕ ЗаписатьПриМодифицированности() Тогда
		Возврат;
	КонецЕсли; 
	
	НастройкаПравДоступа.РедактироватьПраваДоступа(Ссылка);
	
КонецПроцедуры

Процедура ДействияФормыРедактироватьКод(Кнопка)
	
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);
	
КонецПроцедуры

Процедура КоманднаяПанельПользователиГруппыПодбор(Кнопка)
	
	ФормаПодбора = Справочники.Пользователи.ПолучитьФормуВыбора(, ЭтаФорма);
	ФормаПодбора.ЗакрыватьПриВыборе = Ложь;
	
	ФормаПодбора.Открыть();
	
КонецПроцедуры

Процедура КоманднаяПанельВидыОбъектовДоступаУстановитьФлажки(Кнопка)
	
	ИзменитьФлажкиВидовОбъектовДоступа(Истина);
	
КонецПроцедуры

Процедура КоманднаяПанельВидыОбъектовДоступаСнятьФлажки(Кнопка)
	
	ИзменитьФлажкиВидовОбъектовДоступа(Ложь);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	Если НЕ ЭтоНовый()
			И ЭтотОбъект.Ссылка = Справочники.ГруппыПользователей.ВсеПользователи Тогда
		ЭлементыФормы.ПользователиГруппы.ТолькоПросмотр = Истина;
		ЭлементыФормы.КоманднаяПанельПользователиГруппы.Кнопки.Подбор.Доступность = Ложь;
	КонецЕсли;
	
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияКода(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные(), ЭтаФорма, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.Код);	
	
	мИспользоватьОграниченияПравДоступаНаУровнеЗаписей = Константы.ИспользоватьОграниченияПравДоступаНаУровнеЗаписей.Получить();
	
	мМассивПустыхЗначенийОбъектаДоступа = ОбщегоНазначения.МассивПустыхЗначений(Метаданные.РегистрыСведений.НастройкиПравДоступаПользователей.Измерения.ОбъектДоступа.Тип);
	
	Если мИспользоватьОграниченияПравДоступаНаУровнеЗаписей Тогда
		
		// Заполним данные по видам объектов доступа
		Запрос = Новый Запрос;
		Если НЕ ЭтоНовый()
				ИЛИ ПараметрОбъектКопирования <> Неопределено Тогда
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ИспользуемыеВидыОбъектовДоступа.ВидОбъектаДоступа КАК ВидОбъектаДоступа,
				|	ВЫБОР
				|		КОГДА НазначениеВидовОбъектовДоступа.ВидОбъектаДоступа ЕСТЬ NULL 
				|			ТОГДА ЛОЖЬ
				|		ИНАЧЕ ИСТИНА
				|	КОНЕЦ КАК Использование
				|ИЗ
				|	РегистрСведений.ИспользуемыеВидыОбъектовДоступа КАК ИспользуемыеВидыОбъектовДоступа
				|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НазначениеВидовОбъектовДоступа КАК НазначениеВидовОбъектовДоступа
				|		ПО (НазначениеВидовОбъектовДоступа.ГруппаПользователей = &Ссылка)
				|			И (НазначениеВидовОбъектовДоступа.ВидОбъектаДоступа = ИспользуемыеВидыОбъектовДоступа.ВидОбъектаДоступа)
				
				|		ЛЕВОЕ СОЕДИНЕНИЕ Перечисление.ВидыОбъектовДоступа КАК ВидыОбъектовДоступа
				|		ПО ИспользуемыеВидыОбъектовДоступа.ВидОбъектаДоступа = ВидыОбъектовДоступа.Ссылка
				|
				|УПОРЯДОЧИТЬ ПО
				|	ВидыОбъектовДоступа.Порядок";
			Если ПараметрОбъектКопирования <> Неопределено Тогда
				Запрос.УстановитьПараметр("Ссылка", ПараметрОбъектКопирования);
			Иначе
				Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
			КонецЕсли; 	
			
		Иначе
			Запрос.Текст = 
				"ВЫБРАТЬ
				|	ИспользуемыеВидыОбъектовДоступа.ВидОбъектаДоступа КАК ВидОбъектаДоступа,
				
				// Для новой группы всегда устанавливаем ограничение доступа
				|	ИСТИНА КАК Использование 
				
				|ИЗ
				|	РегистрСведений.ИспользуемыеВидыОбъектовДоступа КАК ИспользуемыеВидыОбъектовДоступа
				|		ЛЕВОЕ СОЕДИНЕНИЕ Перечисление.ВидыОбъектовДоступа КАК ВидыОбъектовДоступа
				|		ПО ИспользуемыеВидыОбъектовДоступа.ВидОбъектаДоступа = ВидыОбъектовДоступа.Ссылка
				|
				|УПОРЯДОЧИТЬ ПО
				|	ВидыОбъектовДоступа.Порядок";
		КонецЕсли; 
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = ВидыОбъектовДоступа.Добавить();
			НоваяСтрока.ВидОбъектаДоступа = Выборка.ВидОбъектаДоступа;
			НоваяСтрока.Использование     = Выборка.Использование;
		КонецЦикла;
		
	Иначе
		
		// RLS не используется
		ЭлементыФормы.ВидыОбъектовДоступа.ТолькоПросмотр = Истина;
		
	КонецЕсли; 
	
	ЗаполнитьИнформациюОбОграниченииДоступа();
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Если Ссылка = Справочники.ГруппыПользователей.ВсеПользователи Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	СохранитьНазначениеВидовОбъектовДоступа();
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.Пользователи") Тогда
		Если ПользователиГруппы.Найти(ЗначениеВыбора, "Пользователь") = Неопределено Тогда
			ПользователиГруппы.Добавить().Пользователь = ЗначениеВыбора;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеЗаписи()
	
	Оповестить("ЗаписанаГруппаПользователей", Ссылка);
	
КонецПроцедуры
