
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("СправочникСсылка", СправочникСсылка);

	//Кэшировать картинки только на локальном диске сервера с которого идет отправка, поскольку при 
	//размещении картинок с указанием стетевого пути с-ма не позволит отправить письмо
	КэшВременныйКаталог = КаталогВременныхФайлов() + ЭтаФорма.УникальныйИдентификатор + "\";
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьДоступностьЭлементовФормы();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗаполнитьВсе(Команда)
	ЗаполнитьСписокПолучателейКлиент("Все"); 
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьПоУправляющим(Команда)
	ЗаполнитьСписокПолучателейКлиент("Управляющие"); 
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьПоМагазинам(Команда)
	ЗаполнитьСписокПолучателейКлиент("Магазины"); 
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьПоПомощникамУправляющих(Команда)
	ЗаполнитьСписокПолучателейКлиент("ПомощникиУправляющих"); 
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтправить(Команда)
	
	ОтправитьПисьмоСервер(ВариантОтправки, ЭтаФорма.УникальныйИдентификатор);
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВариантОтправкиПриИзменении(Элемент)
	ОбновитьДоступностьЭлементовФормы();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьСписокПолучателейКлиент(СпособЗаполнения)

	ЗаполнитьСписокПолучателейСервер(СпособЗаполнения);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокПолучателейСервер(СпособЗаполнения)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Пользователи.ФизЛицо,
	|	РолиПользователейСоставРоли.Ссылка КАК ФункциональнаяРоль,
	|	РолиПользователейТипыРолей.ТипРоли КАК ТипРоли,
	|	РолиПользователейТипыРолей.ТипРоли.Код,
	|	РолиПользователейТипыРолей.ТипРоли.Наименование
	|ПОМЕСТИТЬ ВТ_ФизическиеЛица
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.СоставРоли КАК РолиПользователейСоставРоли
	|			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РолиПользователей.ТипыРолей КАК РолиПользователейТипыРолей
	|			ПО (РолиПользователейТипыРолей.Ссылка = РолиПользователейСоставРоли.Ссылка)
	|		ПО Пользователи.ФизЛицо = РолиПользователейСоставРоли.Сотрудник
	|ГДЕ
	|	(ВЫБОР
	|				КОГДА &Управляющие
	|						ИЛИ &Все
	|					ТОГДА РолиПользователейТипыРолей.ТипРоли.Код ПОДОБНО ""Uprav%""
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ
	|			ИЛИ ВЫБОР
	|				КОГДА &Помощники
	|						ИЛИ &Все
	|					ТОГДА РолиПользователейТипыРолей.ТипРоли.Код ПОДОБНО ""PomoshnikTerr%""
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтруктурныеЕдиницы.Ссылка КАК Ссылка,
	|	""Магазин"" КАК ФункциональнаяРоль,
	|	СтруктурныеЕдиницы.АдресЭлектроннойПочты КАК ЭлектронныйАдрес
	|ИЗ
	|	Справочник.СтруктурныеЕдиницы КАК СтруктурныеЕдиницы
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &Магазины
	|					ИЛИ &Все
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И СтруктурныеЕдиницы.СтатусТорговойТочки = ЗНАЧЕНИЕ(Перечисление.СтатусыТорговыхТочек.Открыт)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТ_ФизическиеЛица.ФизЛицо,
	|	ВТ_ФизическиеЛица.ФункциональнаяРоль,
	|	ВЫРАЗИТЬ(КонтактнаяИнформация.Представление КАК СТРОКА(1000))
	|ИЗ
	|	ВТ_ФизическиеЛица КАК ВТ_ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|		ПО ВТ_ФизическиеЛица.ФизЛицо = КонтактнаяИнформация.Объект
	|ГДЕ
	|	КонтактнаяИнформация.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФункциональнаяРоль,
	|	Ссылка
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("Все", СпособЗаполнения = "Все");
	Запрос.УстановитьПараметр("Помощники",  СпособЗаполнения = "ПомощникиУправляющих");
	Запрос.УстановитьПараметр("Управляющие", СпособЗаполнения = "Управляющие");
	Запрос.УстановитьПараметр("Магазины", СпособЗаполнения = "Магазины");
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		СписокАдресов.Загрузить(РезультатЗапроса.Выгрузить());
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВременныеФайлыHTMLКлиент(ВременныйКаталог, ОчиститьВсеВерсии = Ложь)
	
	Если ОчиститьВсеВерсии Тогда
		УдалитьФайлы(Лев(ВременныйКаталог, Найти(ВременныйКаталог,"ver")-1));
	Иначе
		УдалитьФайлы(ВременныйКаталог);
	КонецЕсли;
	
КонецПроцедуры // УдалитьВременныеФайлыHTMLКлиент()

&НаСервере
Процедура УдалитьВременныеФайлыHTMLСервер(ВременныйКаталог, ОчиститьВсеВерсии = Ложь)
	
	Если ОчиститьВсеВерсии Тогда
		УдалитьФайлы(Лев(ВременныйКаталог, Найти(ВременныйКаталог,"ver")-1));
	Иначе
		УдалитьФайлы(ВременныйКаталог);
	КонецЕсли;
	
КонецПроцедуры // УдалитьВременныеФайлыHTMLКлиент()

&НаСервере
// Процедура формирует структуру параметров и вызывает отправку письма
//
// Параметры:
//  ВариантОтправки  - <Тип.Число> - вариант использования адреса
//                 0 - Список адресов
//				   1 - Электронный адрес
//
Процедура ОтправитьПисьмоСервер(ВариантОтправки, УникальныйИдентификатор)
	
	СтруктураПисьма = Новый Структура("Отправитель, Тема, Получатели, Текст, ТипТекста", ПолучитьУчетнуюЗаписьДляРассылки("no-reply@vkusvill.ru"), 
				Тема, ПолучитьТаблицуПолучателей(ВариантОтправки), СформироватьТекстПисьмаHTML(СправочникСсылка, УникальныйИдентификатор), ТипТекстаПочтовогоСообщения.HTML);

	Документы.ЗапросОстатковУпаковкиУПоставщиков.ОтправитьПисьма(СтруктураПисьма);
	
	УдалитьВременныеФайлыHTMLСервер(КэшВременныйКаталог);
	
КонецПроцедуры // ОтправитьПисьмоСервер()

//Возвращает учетную запись рассылки по электронному адресу
//
&НаСервере
Функция ПолучитьУчетнуюЗаписьДляРассылки(Адрес)
	
	Возврат Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоРеквизиту("Логин", Адрес); 
	
КонецФункции

&НаСервере
// Функция формирует и возвращает массив получателей для письма
//
// Параметры:
//  ВариантОтправки  - <Тип.Число> - вариант использования адреса
//                 0 - Список адресов
//				   1 - Электронный адрес
//
Функция ПолучитьТаблицуПолучателей(ВариантОтправки)
	
	ТаблицаПолучателей = Новый ТаблицаЗначений();
	ТаблицаПолучателей.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));

	Если ВариантОтправки = 0 Тогда
		Для каждого Строка Из СписокАдресов Цикл
			Если ЗначениеЗаполнено(Строка.ЭлектронныйАдрес) Тогда
				НоваяСтрока = ТаблицаПолучателей.Добавить();
				НоваяСтрока.Представление = Строка.ЭлектронныйАдрес;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		НоваяСтрока = ТаблицаПолучателей.Добавить();
		НоваяСтрока.Представление = ЭлектронныйАдрес;
	КонецЕсли;
	
	Возврат ТаблицаПолучателей;
	
КонецФункции// ПолучитьТаблицуПолучателей()

&НаСервере
// Функция формирует и возвращает текст HTML
//
// Параметры:
//  СправочникСсылка  - <Тип.Ссылка> - Ссылка справочника правила работы магазинов
//
// Возвращаемое значение:
//   <Тип.Текс>   - Текст HTML документа 
//
Функция СформироватьТекстПисьмаHTML(СправочникСсылка, УникальныйИдентификатор)

	ТекущийHTML = "";
	
	СправочникОбъект = СправочникСсылка.ПолучитьОбъект();
	Справочники.ПравилаРаботыСотрудников.ВосстановитьКартинкиHTMLТекущейВерсии(СправочникОбъект, СправочникОбъект.ТекущаяВерсия, ТекущийHTML, КэшВременныйКаталог, УникальныйИдентификатор); 
	
	Возврат ТекущийHTML;
	
КонецФункции // СформироватьТекстПисьмаHTML()

&НаКлиенте
Процедура ОбновитьДоступностьЭлементовФормы()
	
	Элементы.СписокАдресов.Доступность = ВариантОтправки = 0;
	Элементы.ЭлектронныйАдрес.Доступность = ВариантОтправки = 1;
	
КонецПроцедуры


// РЕЖИМ ТЕСТИРОВАНИЯ
&НаКлиенте
Процедура КомандаРежимТестирования(Команда)
	
	РежимТестирования = Не РежимТестирования;
	
	ОбновитьРежимТестирования(РежимТестирования);
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантКэшированияПриИзменении(Элемент)

	//Кэшировать картинки локально на сервере с которого идет отправка, поскольку при 
	//размещении картинок на другом сервере в сети не позволит отправить письмо
	Если ВариантКэширования = 0 Тогда
		КэшВременныйКаталог = "";
	Иначе
		КэшВременныйКаталог = КаталогВременныхФайлов() + ЭтаФорма.УникальныйИдентификатор + "\";
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьРежимТестирования(РежимТестирования) 
	
	Элементы.ВариантКэширования.Видимость = РежимТестирования;
	Элементы.ВариантОтправки.ТолькоПросмотр = НЕ РежимТестирования;
	Элементы.СписокАдресов.ИзменятьСоставСтрок = РежимТестирования;

КонецПроцедуры

#КонецОбласти

