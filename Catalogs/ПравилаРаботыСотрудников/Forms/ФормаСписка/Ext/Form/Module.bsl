&НаКлиенте
Процедура НайтиОчистка(Элемент, СтандартнаяОбработка)
	
	Элементы.Список.Отображение = ОтображениеТаблицы.ИерархическийСписок;
	
	Список.Отбор.Элементы.Очистить();
	
КонецПроцедуры	// НайтиОчистка(Элемент, СтандартнаяОбработка)

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		///+++АК БЕЛН 20160914
		Если Элемент.ТекущиеДанные.Ссылка=ВозвратЭлементаРеестраНовинок("000000079") Тогда
			Картинки = Новый Структура;
			ЭлементФДНовинок(ВозвратЭлементаРеестраНовинок("000000086"), Картинки);
			Элементы.ХТМЛ.Видимость = Истина;
			Элементы.ПолеФД.Видимость = Ложь;
			Элементы.ФормаПечатьХТМЛ.Видимость = Истина;
			Элементы.ФормаПечатьСразуХТМЛ.Видимость = Истина;
			Элементы.ФормаПредпросмотрХТМЛ.Видимость = Истина;
			
			Если  Картинки.Количество() > 0 Тогда
				Для Каждого Картинка Из Картинки Цикл
					ИмяВремФайла = ПолучитьИмяВременногоФайла("");
					Картинка.Значение.Записать(ИмяВремФайла);
					ХТМЛ = СтрЗаменить(ХТМЛ, "<img src='" + Картинка.Ключ + "'", "<img src=""" + ИмяВремФайла + """");
				КонецЦикла;
			КонецЕсли;
			//---АК SHEP
			
			//+++АК SHEP 20160425
			// убираем лишний "мусор", в т.ч. чтобы картинки при печати были на след. странице, а не обрезались
			ПозТела = Найти(ХТМЛ, "<body>");
			Если ПозТела <> 0 Тогда
				ХТМЛ = "<html>" + Символы.ПС + Сред(ХТМЛ, ПозТела);
			КонецЕсли;
		Иначе
			Элементы.ХТМЛ.Видимость = ЭтоВебКлиент;
			Элементы.ФормаПечатьХТМЛ.Видимость = ЭтоВебКлиент;
			Элементы.ФормаПечатьСразуХТМЛ.Видимость = ЭтоВебКлиент И ЗначениеЗаполнено(Справочники.АК_ГруппыРассылки.НайтиПоНаименованию("ПечатьСразуХТМЛ"));
			Элементы.ФормаПредпросмотрХТМЛ.Видимость = ЭтоВебКлиент;
			Элементы.ПолеФД.Видимость = НЕ ЭтоВебКлиент;
		///---АК БЕЛН 20160914
			//+++АК SHEP 20160420
			// Получаем картинки и указываем локальный путь, добавил параметр "Картинки" в вызов процедур
			Картинки = Новый Структура;
			Если НЕ Элемент.ТекущиеДанные.ЭтоГруппа Тогда
				ЭлементФД(Элемент.ТекущиеДанные.Ссылка, Картинки);
			Иначе
				ГруппаФД(Элемент.ТекущиеДанные.Ссылка, Картинки);
			КонецЕсли;
			
			Если ЭтоВебКлиент И Картинки.Количество() > 0 Тогда
				Для Каждого Картинка Из Картинки Цикл
					ИмяВремФайла = ПолучитьИмяВременногоФайла("");
					Картинка.Значение.Записать(ИмяВремФайла);
					ХТМЛ = СтрЗаменить(ХТМЛ, "<img src='" + Картинка.Ключ + "'", "<img src=""" + ИмяВремФайла + """");
				КонецЦикла;
			КонецЕсли;
			//---АК SHEP
			
			//+++АК SHEP 20160425
			// убираем лишний "мусор", в т.ч. чтобы картинки при печати были на след. странице, а не обрезались
			ПозТела = Найти(ХТМЛ, "<body>");
			Если ПозТела <> 0 Тогда
				ХТМЛ = "<html>" + Символы.ПС + Сред(ХТМЛ, ПозТела);
			КонецЕсли;
			//---АК SHEP 
		КонецЕсли; 
	КонецЕсли;
	//КонецЕсли;
	
КонецПроцедуры	// СписокПриАктивизацииСтроки(Элемент)

///+++АК БЕЛН 20160914
&НаСервереБезКонтекста
Функция ВозвратЭлементаРеестраНовинок(Код)
	Возврат Справочники.ПравилаРаботыСотрудников.НайтиПоКоду(Код);	
КонецФункции // ()

&НаСервере
Процедура ЭлементФДНовинок(Ссылка, Картинки)
	
	УстановитьПривилегированныйРежим(Истина); //+++АК SHEP 20160418
	
	Каталог = Константы.КаталогХраненияФайловКартинок.Получить();
	Если Прав(Каталог,1) <> "\" Тогда
		Каталог = Каталог + "\";
	КонецЕсли;
	
	ТекВерсия = Ссылка.ТекущаяВерсия;
	
	Картинки = Новый Структура;
	Для Каждого ТекСтрока Из Ссылка.ТЧКартинки  Цикл
		Если ТекВерсия = ТекСтрока.Версия Тогда
			ИмяФайла = ТекСтрока.ИмяФайла;
			ПолноеИмяФайла = "" + Каталог + ИмяФайла;
			Файл = Новый Файл(ПолноеИмяФайла);
			Если Файл.Существует() Тогда
				Картинка = Новый Картинка(ПолноеИмяФайла);
				Картинки.Вставить(ТекСтрока.Ключ, Картинка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	//+++АК SHEP 20160420
	//ФД.УстановитьHTML(Ссылка.ТекущийТекст, Картинки);
	//Если ЭтоВебКлиент Тогда
	ХТМЛ = СокрЛП(ХТМЛНовинок);
		// чтобы действовала прокрутка текста и картинок
	//	//ХТМЛ = СтрЗаменить(ХТМЛ, "body{margin:0px;padding:8px;overflow:hidden;width:100%;height:100%;}", "");
	//Иначе
	//	ФД.УстановитьHTML(Ссылка.ТекущийТекст, Картинки);
	//	Картинки.Очистить();
	//КонецЕсли;
	//---АК SHEP
	
КонецПроцедуры	// ЭлементФД(Ссылка)

 
///---АК БЕЛН 20160914
&НаСервере
Процедура ЭлементФД(Ссылка, Картинки)
	
	УстановитьПривилегированныйРежим(Истина); //+++АК SHEP 20160418
	
	Каталог = Константы.КаталогХраненияФайловКартинок.Получить();
	Если Прав(Каталог,1) <> "\" Тогда
		Каталог = Каталог + "\";
	КонецЕсли;
	
	ТекВерсия = Ссылка.ТекущаяВерсия;
	
	Картинки = Новый Структура;
	Для Каждого ТекСтрока Из Ссылка.ТЧКартинки  Цикл
		Если ТекВерсия = ТекСтрока.Версия Тогда
			ИмяФайла = ТекСтрока.ИмяФайла;
			ПолноеИмяФайла = "" + Каталог + ИмяФайла;
			Файл = Новый Файл(ПолноеИмяФайла);
			Если Файл.Существует() Тогда
				Картинка = Новый Картинка(ПолноеИмяФайла);
				Картинки.Вставить(ТекСтрока.Ключ, Картинка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	//+++АК SHEP 20160420
	//ФД.УстановитьHTML(Ссылка.ТекущийТекст, Картинки);
	Если ЭтоВебКлиент Тогда
		ХТМЛ = СокрЛП(Ссылка.ТекущийТекст);
		// чтобы действовала прокрутка текста и картинок
		//ХТМЛ = СтрЗаменить(ХТМЛ, "body{margin:0px;padding:8px;overflow:hidden;width:100%;height:100%;}", "");
	Иначе
		ФД.УстановитьHTML(Ссылка.ТекущийТекст, Картинки);
		Картинки.Очистить();
	КонецЕсли;
	//---АК SHEP
	
КонецПроцедуры	// ЭлементФД(Ссылка)

&НаСервере
Процедура ГруппаФД(Ссылка, Картинки)
	
	ФД.Удалить();
	
	Каталог = Константы.КаталогХраненияФайловКартинок.Получить();
	Если Прав(Каталог,1) <> "\" Тогда
		Каталог = Каталог + "\";
	КонецЕсли;
	
	Картинки = Новый Структура;
	ИндексКартинки = 0;
	
	РазмерШрифта1 = 12;
	Абзац1 = 0;
	
	ТекстДок = Новый ТекстовыйДокумент;
	
	ТекстДок.ДобавитьСтроку(
	"<html>
	|<head>
	|<meta http-equiv=""Content-Type"" content=""text/html; charset=utf-8"" />
	|<meta http-equiv=""X-UA-Compatible"" content=""IE=EmulateIE7"" />
	|<style type=""text/css"">
	|</style>
	|</head>");
	
	ТекстДок.ДобавитьСтроку("<body>");
	ТекстДок.ДобавитьСтроку("<p style='margin-left: " + Абзац1 + "pt'><span style='font-family: Arial; font-size: " + РазмерШрифта1 + "pt; background-color: #ffffff;'>" + Ссылка.Наименование + "</span></p>");
	
	РазмерШрифта1 = РазмерШрифта1 - 2;
	Абзац1 = Абзац1 + 15;
	
	СпрПравила = Справочники.ПравилаРаботыСотрудников;
	Выборка = СпрПравила.ВыбратьИерархически(Ссылка,,);
	Пока Выборка.Следующий()  Цикл
		
		//+++АК SHEP 20160425: в группе не отображаем помеченные на удаление
		Если Выборка.ПометкаУдаления Тогда Продолжить; КонецЕсли;
		//---АК SHEP 20160425
		
		Абзац = Абзац1 + 15 * Выборка.УровеньВВыборке();
		РазмерШрифта = РазмерШрифта1 - 2 * Выборка.УровеньВВыборке();
		Если РазмерШрифта < 1 Тогда
			РазмерШрифта = 1;
		КонецЕсли;
		
		Если Выборка.ЭтоГруппа Тогда
			
			ТекстДок.ДобавитьСтроку("<p style='margin-left: " + Абзац + "pt'><span style='font-family: Arial; font-size: " + РазмерШрифта + "pt; background-color: #ffffff;'>" + Выборка.Наименование + "</span></p>");
			
		Иначе
			
			ТекВерсия = Выборка.ТекущаяВерсия;
			
			ИндексТело = Найти(Выборка.ТекущийТекст,"<body>");
			Тело = Сред(Выборка.ТекущийТекст, ИндексТело);
			Тело = СтрЗаменить(Тело, "<body>", "");
			Тело = СтрЗаменить(Тело, "</body>", "");
			Тело = СтрЗаменить(Тело, "</html>", "");
			
			ИндексШрифт = Найти(Тело, "font-size:");
			Если ИндексШрифт = 0 Тогда
				ДобавитьРазмерШрифта = Истина;
			Иначе
				ДобавитьРазмерШрифта = Ложь;
			КонецЕсли;
			
			Пока ИндексШрифт > 0 Цикл
				
				ШрифтСтарый = Сред(Тело, ИндексШрифт,16);
				ШрифтНовый = "Font-size: " + РазмерШрифта + "pt;";
				Тело = СтрЗаменить(Тело, ШрифтСтарый, ШрифтНовый);
				ИндексШрифт = Найти(Тело, "font-size:");
				
			КонецЦикла;
			
			Пока Найти(Тело, "<p") > 0 Цикл
				Если ДобавитьРазмерШрифта Тогда
					//Тело = СтрЗаменить(Тело, "<p", "<P style='margin-left: " + Абзац + "pt'><span style='font-family: Arial; font-size: " + РазмерШрифта + "pt; background-color: #ffffff;'");
					Тело = СтрЗаменить(Тело, "<p", "<P style='margin-left: " + Абзац + "pt'><span style='font-family: Arial; font-size: " + РазмерШрифта + "pt'");
					Тело = СтрЗаменить(Тело, "</p>", "</span></p>");
				Иначе
					Тело = СтрЗаменить(Тело, "<p", "<P style='margin-left: " + Абзац + "pt'");
				КонецЕсли;
			КонецЦикла;
			
			СтруктураОтбор = Новый Структура("Версия", ТекВерсия);
			МассивСтрокТекВерсии = Выборка.ТЧКартинки.НайтиСтроки(СтруктураОтбор);
			Для Каждого ТекСтрока Из МассивСтрокТекВерсии Цикл //Выборка.ТЧКартинки  Цикл
				//Если ТекВерсия = ТекСтрока.Версия Тогда
					ИмяФайла = ТекСтрока.ИмяФайла;
					ПолноеИмяФайла = "" + Каталог + ИмяФайла;
					Файл = Новый Файл(ПолноеИмяФайла);
					Если Файл.Существует() Тогда
						Картинка = Новый Картинка(ПолноеИмяФайла);
						ИндексКартинки = ИндексКартинки + 1;
						КлючСтарый = ТекСтрока.Ключ;
						КлючНовый = КлючСтарый + ИндексКартинки;
						Картинки.Вставить(КлючНовый, Картинка);
						Тело = СтрЗаменить(Тело, КлючСтарый, КлючНовый);
					КонецЕсли;
				//КонецЕсли;
			КонецЦикла;
			
			ТекстДок.ДобавитьСтроку(Тело);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТекстДок.ДобавитьСтроку("<p></br></p>");
	ТекстДок.ДобавитьСтроку("</body>");
	ТекстДок.ДобавитьСтроку("</html>");
	
	//+++АК SHEP 20160420
	//ФД.УстановитьHTML(ТекстДок.ПолучитьТекст(), Картинки);
	Если ЭтоВебКлиент Тогда
		ХТМЛ = СокрЛП(ТекстДок.ПолучитьТекст());
	Иначе
		ФД.УстановитьHTML(ТекстДок.ПолучитьТекст(), Картинки);
		Картинки.Очистить();
	КонецЕсли;
	//---АК SHEP
	
КонецПроцедуры	// ГруппаФД(Ссылка)

&НаКлиенте
Процедура НайтиПриИзменении(Элемент)
	
	ФД.Удалить();
	
	Если СтрДлина(ЧтоИщем) > 0 Тогда 
		Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	КонецЕсли;
	
	ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТекущийТекст");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Содержит;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ПравоеЗначение = ЧтоИщем;
	
КонецПроцедуры	// НайтиПриИзменении(Элемент)

&НаКлиенте
Процедура ПечататьВыделенныйТекст(Команда)
	
	ВыделенныйТекст = Элементы.ПолеФД.ВыделенныйТекст;
	
	
КонецПроцедуры

//+++АК SHEP 20160420
// На тонком клиенте при запуске под веб-сервером картинки не отображались, добавил поле HTML документа
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЭтоВебКлиент = (Лев(ПолучитьНавигационнуюСсылкуИнформационнойБазы(), 4) = "http");
	ЭтоВебКлиент = ЭтоВебКлиент ИЛИ ЗначениеЗаполнено(Справочники.АК_ГруппыРассылки.НайтиПоНаименованию("ОтображатьДляФС_ПРС_ХТМЛ"));
	Элементы.ХТМЛ.Видимость = ЭтоВебКлиент;
	Элементы.ФормаПечатьХТМЛ.Видимость = ЭтоВебКлиент;
	Элементы.ФормаПечатьСразуХТМЛ.Видимость = ЭтоВебКлиент И ЗначениеЗаполнено(Справочники.АК_ГруппыРассылки.НайтиПоНаименованию("ПечатьСразуХТМЛ"));
	Элементы.ФормаПредпросмотрХТМЛ.Видимость = ЭтоВебКлиент;
	Элементы.ПолеФД.Видимость = НЕ ЭтоВебКлиент;
	Элементы.ФормаПечать.Видимость = НЕ ЭтоВебКлиент;
	Элементы.ФормаПредварительныйПросмотр.Видимость = НЕ ЭтоВебКлиент;
///+++АК БЕЛН 20160914
	СформироватьХТМЛНовинок();
///---АК БЕЛН 20160914
КонецПроцедуры

&НаКлиенте
Функция СписокРассылки(Команда)
	ГруппаРассылкиНовыеПравилаРаботыСотрудников = ГруппаРассылкиНовыеПравилаРаботыСотрудниковПолучить();
	Если ЗначениеЗаполнено(ГруппаРассылкиНовыеПравилаРаботыСотрудников) Тогда
		СтруктураОтбора = Новый Структура("Группа", ГруппаРассылкиНовыеПравилаРаботыСотрудников);
		ОткрытьФорму("РегистрСведений.АК_ГруппыРассылки.ФормаСписка", Новый Структура("Отбор", СтруктураОтбора), ЭтаФорма);
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция ГруппаРассылкиНовыеПравилаРаботыСотрудниковПолучить()
	Возврат Справочники.АК_ГруппыРассылки.НайтиПоНаименованию("Новые правила работы сотр");
КонецФункции
//---АК SHEP 20160420

///+++АК БЕЛН 20160914
&НаСервере
Процедура СформироватьХТМЛНовинок()
	ТорговаяТочка = ?(ПараметрыСеанса.ТорговаяТочкаПоАйпи=Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("999_Тест"),Справочники.СтруктурныеЕдиницы.ПустаяСсылка(),ПараметрыСеанса.ТорговаяТочкаПоАйпи);
	//ТорговаяТочка=Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("408_ДмитрияДонского8");
	//ЭтоАдминистратор = Ложь;
	//РолиТекПользователя = Новый СписокЗначений;
	//МассивРолейТекПользователя = МеханизмОбменаСообщениями.ПолучитьРолиПользователяИлиФизЛица(ПараметрыСеанса.ТекущийПользователь);
	//Если МассивРолейТекПользователя <> Неопределено Тогда
	//	РолиТекПользователя.ЗагрузитьЗначения(МассивРолейТекПользователя);
	//	Если МассивРолейТекПользователя.Найти(Справочники.РолиПользователей.Администратор) <> Неопределено Тогда
	//		ЭтоАдминистратор = Истина;
	//	КонецЕсли;
	//КонецЕсли;
	Если ЗначениеЗаполнено(ТорговаяТочка) Тогда
		УстановитьПривилегированныйРежим(Истина); //+++АК SHEP 20160418
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОтправкиПоНовинкам.Номенклатура,
			|	ОтправкиПоНовинкам.Характеристика,
			|	ОтправкиПоНовинкам.Магазин как ТорговаяТочка
			|ИЗ
			|	РегистрСведений.ОтправкиПоНовинкам КАК ОтправкиПоНовинкам
			|ГДЕ
			|	ОтправкиПоНовинкам.ДатаДобавления МЕЖДУ &ДатаДобавления1 И &ДатаДобавления2
			|	И ОтправкиПоНовинкам.Магазин = &Магазин
			|
			|СГРУППИРОВАТЬ ПО
			|	ОтправкиПоНовинкам.Номенклатура,
			|	ОтправкиПоНовинкам.Характеристика,
			|	ОтправкиПоНовинкам.Магазин";

		Запрос.УстановитьПараметр("ДатаДобавления1", НачалоДня(ТекущаяДата()-Константы.ДнейАктуальностиНовинок.Получить()*24*60*60));
		Запрос.УстановитьПараметр("ДатаДобавления2", КонецДня(ТекущаяДата()));
		Запрос.УстановитьПараметр("Магазин", ТорговаяТочка);

		Результат = Запрос.Выполнить();

		ТЗМагазиновИТовара = Результат.Выгрузить();
		Адрес=Справочники.ПравилаРаботыСотрудников.СформироватьДинамическуюЧастьПоПараметрам(Справочники.ПравилаРаботыСотрудников.НайтиПоКоду("000000086"),ТЗМагазиновИТовара,ТекущаяДата(),Ложь,Истина,Ложь);
		Если ЗначениеЗаполнено(Адрес) Тогда
			СсылкаПравила=Справочники.ПравилаРаботыСотрудников.НайтиПоКоду("000000086");
			СоотТаблицы=ПолучитьИзВременногоХранилища(Адрес);
			Если СоотТаблицы.Количество()>0 Тогда
				
				ТекстХТМЛ = СсылкаПравила.ТекущийТекст;
				//ТекстХТМЛ=СтрЗаменить(ТекстХТМЛ,"#ДинамическаяЧасть",Эл.Значение);
				//Поз=Найти(ТекстХТМЛ,"#ДинамическаяЧасть");
				ДинЧасть=Строка(СоотТаблицы[0].Значение.ТекстПолный);
				Поз=Найти(ДинЧасть,"<TABLE");
				ДинЧасть=Сред(ДинЧасть,Поз);
				ДинЧасть=СтрЗаменить(ДинЧасть,"</BODY>","");
				ДинЧасть=СтрЗаменить(ДинЧасть,"</HTML>","");
				//ДинЧасть=ДинЧасть+"</body>"+"</html>";
				ХТМЛНовинок=СтрЗаменить(ТекстХТМЛ,"#ДинамическаяЧасть",ДинЧасть);
				
				//ФД1.УстановитьHTML(ТекстХТМЛ, СПК);
			КонецЕсли; 
			
		
		КонецЕсли; 
	КонецЕсли;
КонецПроцедуры
///---АК БЕЛН 20160914

//+++АК SHEP 20160425: команды для просмотра и печати ХТМЛ
&НаКлиенте
Процедура ПредпросмотрХТМЛ(Команда)
Перем Документ;

	Документ = Элементы.ХТМЛ.Документ;
	sExpression = "
	|printPreview();
	|
	|function printPreview() {
	|	var yourDOCTYPE = ""<!DOCTYPE html>""; // your doctype declaration
	|	var printPreview = window.open('about:blank', 'print_preview', ""resizable=yes,scrollbars=yes,status=yes"");
	|	var printDocument = printPreview.document;
	|	printDocument.open();
	|	printDocument.write(yourDOCTYPE+
	|			   ""<html>""+
	|				   document.documentElement.innerHTML+
	|			   ""</html>"");
	|	printDocument.close();
	|}";
	Документ.parentWindow.execScript(sExpression);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьХТМЛ(Команда)
Перем Документ;

	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда Возврат; КонецЕсли;
	
	Документ = Элементы.ХТМЛ.Документ;
	sExpression = "
	|CallPrint();
	|
	|function CallPrint() {
	|	var yourDOCTYPE = ""<!DOCTYPE html>""; // your doctype declaration
	|	var printDocument = window.open('', '', 'width=200,height=100');
	|	var printPreview = printDocument.document;
	|	printPreview.write(yourDOCTYPE+
	|			   ""<html>""+
	|				   document.documentElement.innerHTML+
	|			   ""</html>"");
	|	printPreview.close();
	|	printDocument.focus();
	|	printDocument.print();
	|	printDocument.close();
	|}";
	Документ.parentWindow.execScript(sExpression);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьСразуХТМЛ(Команда)
	Документ = Элементы.ХТМЛ.Документ;
	Если Документ.queryCommandSupported("Print") Тогда
		Документ.execCommand("Print", Ложь);
		//ЭтаФорма.Элементы.ХТМЛ.Документ.execCommand(Команда, Ложь);
	КонецЕсли;	
КонецПроцедуры
//---АК SHEP 20160425