
&НаКлиенте
Процедура ПросмотрНаКарте(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры
//АК БЕЛН 31.03.2017+
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ОбеспечениеПерсоналомКонтрагент") Тогда
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Родитель");
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = Справочники.Контрагенты.НайтиПоНаименованию("Услуги (аутсорсинг) ");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;               
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СтатьяДвиженияДенежныхСредств");
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = Справочники.СтатьиДвиженияДенежныхСредств.НайтиПоНаименованию("Оплата Услуг аутсорсинга продавцов");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;               
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		Элементы.Список.Отображение=ОтображениеТаблицы.Список;
	ИначеЕсли Параметры.Свойство("Транспорт") Тогда 
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Родитель");
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = Справочники.Контрагенты.НайтиПоКоду("000000519");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;               
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		Элементы.Список.Отображение=ОтображениеТаблицы.Список;
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЭтоГруппа");
		ЭлементОтбора.Использование = Истина;
		ЭлементОтбора.ПравоеЗначение = Ложь;
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;               
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		Элементы.Список.Отображение=ОтображениеТаблицы.Список;
		
	//+++АК mika 2018.01.22 ИП-00017263.02
    ИначеЕсли Параметры.Свойство("Аутсорс") Тогда
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Родитель");
		ЭлементОтбора.Использование  = Истина;
		УстановитьПривилегированныйРежим(Истина); //+++АК mika 2018.03.12 Без задачи (удаление "найти по коду")↓
		ЭлементОтбора.ПравоеЗначение = РегистрыСведений.НастройкиПодсистемыАутсорсинг.ПолучитьЗначениеНастройкиАутсорсинг("ГруппаКонтрагентовАутсорсинг"); 
		ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВИерархии;               
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ЭтоГруппа");
		ЭлементОтбора.Использование  = Истина;
		ЭлементОтбора.ПравоеЗначение = Ложь;
		ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;               
		ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		
		Элементы.Список.Отображение = ОтображениеТаблицы.Список;
	//---АК mika
		
	КонецЕсли;
	
	//+++АК sole 2018.06.20 ИП-00018920.01
	УстановитьОтборДляПеревозчиков();
	//---АК sole 2018.06.20 ИП-00018920.01

КонецПроцедуры
//АК БЕЛН 31.03.2017-

//+++АК sole 2018.06.20 ИП-00018920.01
Процедура УстановитьОтборДляПеревозчиков()
	
	Если 
			РольДоступна("ПолныеПрава") 
		ИЛИ	НЕ РольДоступна("Перевозчик") 
	Тогда
		Возврат;
	КонецЕсли;
	
	СписокДоступныхПеревозчиков = РегистрыСведений.АК_ПеревозчикиПоКонтрагентам.ПолучитьСписокКонтрагентовДляФильтрации(ПараметрыСеанса.ТекущийПользователь);
	
	ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбора.ПравоеЗначение = СписокДоступныхПеревозчиков;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЭтоГруппа");
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ПравоеЗначение = Ложь;
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;               
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	Элементы.Список.Отображение = ОтображениеТаблицы.Список;
КонецПроцедуры

//
