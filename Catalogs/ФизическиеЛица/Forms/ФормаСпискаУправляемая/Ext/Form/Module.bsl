
Процедура УстановитьДоступностьПоПравам()
	
	ЕстьДоступность = РольДоступна("РедактированиеФизЛиц")
						ИЛИ РольДоступна("Помощник"); 
	
	Элементы.ФормаИзменитьВыделенные.Доступность 	= ЕстьДоступность;
	Элементы.ФормаСинхронизироватьСЗУП.Доступность 	= ЕстьДоступность;
	Элементы.ФормаДобавитьВнештатника.Доступность 	= ЕстьДоступность;
	
КонецПроцедуры

Функция ПолучитьТабличныйДокумент(МассивФизическихЛиц)
	
	Возврат Обработки.ГрафикРаботыПродавцов_ТЗ.СформироватьТабличныйДокумент_Сборщики(МассивФизическихЛиц);
	
КонецФункции

&НаКлиенте
Процедура ПечатьБейджев(Команда)
	
	МассивФизЛиц = Элементы.Список.ВыделенныеСтроки;
	
	Если МассивФизЛиц.Количество()Тогда
		
		ТабДокумент = ПолучитьТабличныйДокумент(МассивФизЛиц);
		
		ТабДокумент.ОтображатьСетку = Ложь;
		ТабДокумент.Защита = Истина;
		ТабДокумент.ТолькоПросмотр = Истина;
		ТабДокумент.ОтображатьЗаголовки = Ложь;
		ТабДокумент.Показать();
		
	Иначе
		Предупреждение("Нет выделенных строк для печати");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СинхронизироватьСЗУП_Сервер()
	
	Обработки.ЗагрузкаДанныхИзAccess.ЗагрузитьДанныеОПродавцах();
	
КонецПроцедуры

&НаКлиенте
Процедура СинхронизироватьСЗУП(Команда)
	
	СинхронизироватьСЗУП_Сервер();
	Элементы.Список.Обновить();
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Список.Параметры.УстановитьЗначениеПараметра("ТекДата", ТекущаяДата());
	
	УстановитьДоступностьПоПравам();
	
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьВнештатника(Команда)
	
	ОткрытьФормуМодально("Справочник.ФизическиеЛица.Форма.ФормаДобавленияВнештатного",, ЭтаФорма);
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВыделенные(Команда)
	
	ГрупповоеИзменениеОбъектовКлиент.ИзменитьВыделенные(Элементы.Список, Тип("СправочникСсылка.ФизическиеЛица"), "Активный,Стажер,Промоутер,ВнештатныйСотрудник");
	
КонецПроцедуры

&НаКлиенте
Процедура ДублиСотрудников(Команда)
	
	//+++АК mika 2017.12.18 Без задания (Исправление ошибки. Из-за запроса на клиенте не работает форма в УП)
	ДублиСотрудниковСервер(); //Програмный код вынесен в отдельную процедуру 
	//---АК mika 
	
КонецПроцедуры

Функция ПечатьБеджейПродавцов(МассивФизЛиц)
	
	МассивСотрудники = Новый Массив();
	Для Каждого ЭлементФизЛицо Из МассивФизЛиц Цикл
		Сотрудник = Справочники.ПерсоналККМ.НайтиПоКоду(ЭлементФизЛицо.Код);
		Если Не ЗначениеЗаполнено(Сотрудник) Тогда
			Сообщить(Строка(ЭлементФизЛицо) + " не найден среди персонала ККМ");
		Иначе
			МассивСотрудники.Добавить(Сотрудник);
		КонецЕсли;	
	КонецЦикла;
	
	Возврат Обработки.ПечатьБейджейПродавцов.ПолучитьТабДокБейджей(МассивСотрудники);
	
КонецФункции	

&НаКлиенте
Процедура ПечатьБейджейПродавцов(Команда)
	
	МассивФизЛиц = Элементы.Список.ВыделенныеСтроки;
	
	ОткрытьФорму("ОбщаяФорма.ФормаОтображенияТабДокумента", Новый Структура("ТабДок, УстановитьЗаголовок", ПечатьБеджейПродавцов(МассивФизЛиц), "Бэйджи"));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЛицевыеСчета(Команда)
	
	Ответ1 = Вопрос("Выполнить загрузку лицевых счетов из ЗУПа?", РежимДиалогаВопрос.ДаНет);
	Если Ответ1 = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	ОбменС_ЗУП.ЗаполнитьЛицевыеСчетаФизЛицДаннымиИзЗУПа();
	
КонецПроцедуры

&НаСервере
Процедура ДублиСотрудниковСервер() //+++АК mika 2017.12.18 Без задания (Исправление ошибки. Из-за запроса на клиенте не работает форма в УП. Код перенесен из команды "ДублиСотрудников")
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ТабельРаботыСотрудников.ГрафикРаботы,
		|	ТабельРаботыСотрудников.Сотрудник КАК Сотрудник,
		|	ТабельРаботыСотрудников.Группа КАК Группа,
		|	ТабельРаботыСотрудников.ПериодМин КАК ПериодМин,
		|	ТабельРаботыСотрудников.ПериодМакс КАК ПериодМакс
		|ПОМЕСТИТЬ ТабельРаботы
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТабельРаботыСотрудников.Сотрудник КАК Сотрудник,
		|		МАКСИМУМ(ТабельРаботыСотрудников.ПериодМакс) КАК ПериодМакс
		|	ИЗ
		|		(ВЫБРАТЬ
		|			""ТабельРаботыПродавцов"" КАК ГрафикРаботы,
		|			ТабельРаботыПродавцов.Сотрудник КАК Сотрудник,
		|			ТабельРаботыПродавцов.Группа КАК Группа,
		|			МИНИМУМ(ТабельРаботыПродавцов.Период) КАК ПериодМин,
		|			МАКСИМУМ(ТабельРаботыПродавцов.Период) КАК ПериодМакс
		|		ИЗ
		|			РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
		|		ГДЕ
		|			ТабельРаботыПродавцов.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.ПустаяСсылка)
		|			И НЕ ТабельРаботыПродавцов.ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
		|			И ТабельРаботыПродавцов.Период <= &ТекДата
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ТабельРаботыПродавцов.Сотрудник,
		|			ТабельРаботыПродавцов.Группа
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			""ТабельРаботыПродавцов"",
		|			ТабельРаботыПродавцов.Сотрудник,
		|			НЕОПРЕДЕЛЕНО,
		|			МИНИМУМ(ТабельРаботыПродавцов.Период),
		|			МАКСИМУМ(ТабельРаботыПродавцов.Период)
		|		ИЗ
		|			РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
		|		ГДЕ
		|			ТабельРаботыПродавцов.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.Уволен)
		|			И ТабельРаботыПродавцов.Период <= &ТекДата
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ТабельРаботыПродавцов.Сотрудник
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			""ТабельРаботыКассиров"",
		|			ТабельРаботыКассиров.Сотрудник,
		|			ТабельРаботыКассиров.Группа,
		|			МИНИМУМ(ТабельРаботыКассиров.Период),
		|			МАКСИМУМ(ТабельРаботыКассиров.Период)
		|		ИЗ
		|			РегистрСведений.ТабельРаботыКассиров КАК ТабельРаботыКассиров
		|		ГДЕ
		|			ТабельРаботыКассиров.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.ПустаяСсылка)
		|			И НЕ ТабельРаботыКассиров.ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
		|			И ТабельРаботыКассиров.Период <= &ТекДата
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ТабельРаботыКассиров.Сотрудник,
		|			ТабельРаботыКассиров.Группа
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			""ТабельРаботыКассиров"",
		|			ТабельРаботыКассиров.Сотрудник,
		|			НЕОПРЕДЕЛЕНО,
		|			МИНИМУМ(ТабельРаботыКассиров.Период),
		|			МАКСИМУМ(ТабельРаботыКассиров.Период)
		|		ИЗ
		|			РегистрСведений.ТабельРаботыКассиров КАК ТабельРаботыКассиров
		|		ГДЕ
		|			ТабельРаботыКассиров.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.Уволен)
		|			И ТабельРаботыКассиров.Период <= &ТекДата
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ТабельРаботыКассиров.Сотрудник) КАК ТабельРаботыСотрудников
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТабельРаботыСотрудников.Сотрудник) КАК ТабельРаботыСотрудниковМаксимум
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			""ТабельРаботыПродавцов"" КАК ГрафикРаботы,
		|			ТабельРаботыПродавцов.Сотрудник КАК Сотрудник,
		|			ТабельРаботыПродавцов.Группа КАК Группа,
		|			МИНИМУМ(ТабельРаботыПродавцов.Период) КАК ПериодМин,
		|			МАКСИМУМ(ТабельРаботыПродавцов.Период) КАК ПериодМакс
		|		ИЗ
		|			РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
		|		ГДЕ
		|			ТабельРаботыПродавцов.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.ПустаяСсылка)
		|			И НЕ ТабельРаботыПродавцов.ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
		|			И ТабельРаботыПродавцов.Период <= &ТекДата
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ТабельРаботыПродавцов.Сотрудник,
		|			ТабельРаботыПродавцов.Группа
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			""ТабельРаботыПродавцов"",
		|			ТабельРаботыПродавцов.Сотрудник,
		|			НЕОПРЕДЕЛЕНО,
		|			МИНИМУМ(ТабельРаботыПродавцов.Период),
		|			МАКСИМУМ(ТабельРаботыПродавцов.Период)
		|		ИЗ
		|			РегистрСведений.ТабельРаботыПродавцов КАК ТабельРаботыПродавцов
		|		ГДЕ
		|			ТабельРаботыПродавцов.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.Уволен)
		|			И ТабельРаботыПродавцов.Период <= &ТекДата
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ТабельРаботыПродавцов.Сотрудник
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			""ТабельРаботыКассиров"",
		|			ТабельРаботыКассиров.Сотрудник,
		|			ТабельРаботыКассиров.Группа,
		|			МИНИМУМ(ТабельРаботыКассиров.Период),
		|			МАКСИМУМ(ТабельРаботыКассиров.Период)
		|		ИЗ
		|			РегистрСведений.ТабельРаботыКассиров КАК ТабельРаботыКассиров
		|		ГДЕ
		|			ТабельРаботыКассиров.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.ПустаяСсылка)
		|			И НЕ ТабельРаботыКассиров.ТорговаяТочка = ЗНАЧЕНИЕ(Справочник.СтруктурныеЕдиницы.ПустаяСсылка)
		|			И ТабельРаботыКассиров.Период <= &ТекДата
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ТабельРаботыКассиров.Сотрудник,
		|			ТабельРаботыКассиров.Группа
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			""ТабельРаботыКассиров"",
		|			ТабельРаботыКассиров.Сотрудник,
		|			НЕОПРЕДЕЛЕНО,
		|			МИНИМУМ(ТабельРаботыКассиров.Период),
		|			МАКСИМУМ(ТабельРаботыКассиров.Период)
		|		ИЗ
		|			РегистрСведений.ТабельРаботыКассиров КАК ТабельРаботыКассиров
		|		ГДЕ
		|			ТабельРаботыКассиров.Отсутствие = ЗНАЧЕНИЕ(Перечисление.ВидыОтсутствия.Уволен)
		|			И ТабельРаботыКассиров.Период <= &ТекДата
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ТабельРаботыКассиров.Сотрудник) КАК ТабельРаботыСотрудников
		|		ПО ТабельРаботыСотрудниковМаксимум.ПериодМакс = ТабельРаботыСотрудников.ПериодМакс
		|			И ТабельРаботыСотрудниковМаксимум.Сотрудник = ТабельРаботыСотрудников.Сотрудник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		//|	Табель1.Сотрудник,
		|	Табель1.Сотрудник.Представление КАК СотрудникПредставление,
		|	Табель1.ПериодМин,
		|	Табель1.ПериодМакс
		|ИЗ
		|	ТабельРаботы КАК Табель1
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТабельРаботы КАК Табель2
		|		ПО Табель1.Сотрудник = Табель2.Сотрудник
		|			И (НЕ Табель1.ГрафикРаботы = Табель2.ГрафикРаботы)
		|ГДЕ
		|	НЕ Табель2.Сотрудник ЕСТЬ NULL");
	Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	//
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		Сообщить("" + ВыборкаЗапроса.СотрудникПредставление + " " + ВыборкаЗапроса.ПериодМакс);
	КонецЦикла;
	
КонецПроцедуры
//---АК mika 

//+++АК POZM 2018.04.26 ИП-00018136
&НаКлиенте
Процедура Стажёры(Команда)
	ОткрытьФорму("РегистрСведений.СтажерыПредприятия.ФормаСписка",Новый Структура("Отбор",Новый Структура("Наставник",Элементы.Список.ТекущаяСтрока)));
КонецПроцедуры
//---АК POZM 
  

