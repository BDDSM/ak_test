////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ ИНТЕРФЕЙС

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Проверяет относится ли контрагент к предоставляющим транспортные услуги 
// (Группа справочника «Контрагенты» - 000000519 "Транспорт")
//
// Параметры:
//  КонтрагентСсылка  - <Тип.СправочникСсылка.Контрагенты> - Проверяемый контрагент
//
// Возвращаемое значение:
//   <Тип.Булево>   - Истина - относится, Ложь - не относится
//
Функция КонтрагентПредоставляетТранспортныеУслуги(КонтрагентСсылка) Экспорт //+++АК mika 2018.07.31 ИП-00019374

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Контрагенты.Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Ссылка = &КонтрагентСсылка
	|	И Контрагенты.Ссылка В ИЕРАРХИИ
	|			(ВЫБРАТЬ
	|				Контрагенты.Ссылка
	|			ИЗ
	|				Справочник.Контрагенты КАК Контрагенты
	|			ГДЕ
	|				Контрагенты.Код = ""000000519"")"; //Транспорт
	
	Запрос.УстановитьПараметр("КонтрагентСсылка", КонтрагентСсылка);
	
	Результат = Запрос.Выполнить();
	
	Возврат Не Результат.Пустой();

КонецФункции // КонтактноеЛицоТранспортныхКонтрагентов()

// Формирует табличный документ для печати бейджей (с генерацией QR кода)
//
// Параметры:
//  МассивКонтактныхЛиц  - <Тип.Массив> - Массив содержит
//                          перечень контактных лиц контрагентов
// Возвращаемое значение:
//   <Тип.ТабличныйДокумент>  - Сформированный табличный документ
//
Функция ПечатьБейджейКонтактныеЛицаКонтрагентов(МассивКонтактныхЛиц, ЭтоТранспорт = Истина) Экспорт //+++АК mika 2018.07.31 ИП-00019374

	ТабДокумент = Новый ТабличныйДокумент();
	
	//•• После отладки будет перенесена процедура ↓
	УстановитьПривилегированныйРежим(Истина);
	
	ВнешняяОбработкаСсылка = Справочники.ВнешниеОбработки.НайтиПоНаименованию("ОтладкаПечатьБейджейКонтактныеЛица");
	
	Если ЗначениеЗаполнено(ВнешняяОбработкаСсылка) Тогда
		
		АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ВнешняяОбработкаСсылка.ХранилищеВнешнейОбработки.Получить());
		ИмяОбработки = ВнешниеОбработки.Подключить(АдресВоВременномХранилище, , Ложь);
		
		ВнешняяОбработкаОбъект = ВнешниеОбработки.Создать(ИмяОбработки);
		
		Возврат ВнешняяОбработкаОбъект.ПечатьБейджейКонтактныеЛицаКонтрагентов(МассивКонтактныхЛиц, ЭтоТранспорт);
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	//•• После отладки будет перенесена процедура ↑
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Контрагенты.Ссылка
	|ПОМЕСТИТЬ ВТ_ГруппаТранспорт
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.Код = ""000000519""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КонтактныеЛицаКонтрагентов.Ссылка КАК КонтЛицо,
	|	КонтактныеЛицаКонтрагентов.Ссылка.Наименование КАК ФИО,
	|	КонтактныеЛицаКонтрагентов.Владелец КАК Контрагент,
	|	КонтактныеЛицаКонтрагентов.Должность,
	|	МАКСИМУМ(ЕСТЬNULL(ВодителиПоМаршрутуСрезПоследних.Автомобиль, ""Не привязан"")) КАК Автомобиль
	|ИЗ
	|	Справочник.КонтактныеЛицаКонтрагентов КАК КонтактныеЛицаКонтрагентов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВодителиПоМаршруту.СрезПоследних(
	|				,
	|				Водитель.Владелец В ИЕРАРХИИ
	|					(ВЫБРАТЬ
	|						ВТ_ГруппаТранспорт.Ссылка
	|					ИЗ
	|						ВТ_ГруппаТранспорт КАК ВТ_ГруппаТранспорт)) КАК ВодителиПоМаршрутуСрезПоследних
	|		ПО (ВодителиПоМаршрутуСрезПоследних.Водитель = КонтактныеЛицаКонтрагентов.Ссылка)
	|ГДЕ
	|	КонтактныеЛицаКонтрагентов.Ссылка В(&МассивКонтЛиц)
	|	И ВЫБОР
	|			КОГДА &ЭтоТранспорт = ЛОЖЬ
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ КонтактныеЛицаКонтрагентов.Владелец В ИЕРАРХИИ
	|					(ВЫБРАТЬ
	|						ВТ_ГруппаТранспорт.Ссылка
	|					ИЗ
	|						ВТ_ГруппаТранспорт КАК ВТ_ГруппаТранспорт)
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	КонтактныеЛицаКонтрагентов.Ссылка.Наименование,
	|	КонтактныеЛицаКонтрагентов.Владелец,
	|	КонтактныеЛицаКонтрагентов.Должность,
	|	КонтактныеЛицаКонтрагентов.Ссылка";
	
	Запрос.УстановитьПараметр("МассивКонтЛиц", МассивКонтактныхЛиц);
	Запрос.УстановитьПараметр("ЭтоТранспорт", ЭтоТранспорт);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		
		Макет = ПолучитьМакет("Бейдж");
		
		Выборка = Результат.Выбрать();
		
		ИндексОбласти = 1;
		ИндексРазрыва = 1;
		Пока Выборка.Следующий() Цикл;
			
			Область = Макет.ПолучитьОбласть("Строка|Столбец" + ИндексОбласти);
			
			ЗаполнитьЗначенияСвойств(Область.Параметры, Выборка); 
			
			ДобавитьШтрихкодВОбластьДокумента(Область, Выборка.КонтЛицо);
			
			Область.Параметры.Должность = ВРег(Область.Параметры.Должность);
			
			Если ИндексОбласти = 1 Тогда
				ТабДокумент.Вывести(Область);
			Иначе
				ТабДокумент.Присоединить(Область);
			КонецЕсли;
			
			ИндексОбласти = ИндексОбласти  + 1;
			ИндексОбласти = ?(ИндексОбласти = 3, 1, ИндексОбласти);
			
			ИндексРазрыва = ИндексРазрыва + 1;
			Если ИндексРазрыва = 9 Тогда
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ИндексРазрыва = 1;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	ТабДокумент.ОтображатьСетку     = Ложь;
	ТабДокумент.Защита              = Истина;
	ТабДокумент.ТолькоПросмотр      = Истина;
	ТабДокумент.ОтображатьЗаголовки = Ложь;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьБейджейКонтактныеЛицаКонтрагентов()

// Добавляет QR код в обрасть печати (QR содержит преобразованную ссылку на элемент справочника)
// (преобразование по аналогии с документом Расходный ордером (Скад) → ПриложениеКНакладной) 
//
// Параметры:
//  Область  - <Тип.ТабличныйДокумент.Область> - Область макета для вывода
//                 
//  Ссылка  - <Тип.СправочникСсылка.КонтактныеЛицаКонтрагентов> - Ссылка на контактное лицо
//                 
//
Процедура ДобавитьШтрихкодВОбластьДокумента(Область, Ссылка) Экспорт //+++АК mika 2018.07.31 ИП-00019374
	
	ДанныеQRКода = УправлениеПечатью.ДанныеQRКода(ОбщегоНазначенияКлиентСервер.ПолучитьШтрихкодПоУИНу(Ссылка), 0, 190);
	
	Если ТипЗнч(ДанныеQRКода) = Тип("ДвоичныеДанные") Тогда
		
		Рисунок = Область.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
		Рисунок.Имя    = "QrКод";
		Рисунок.Ширина = 37;
		Рисунок.Высота = 37;
		Рисунок.Лево   = 3;
		Рисунок.Верх   = 23;
		Рисунок.Линия  = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);;
		
		КартинкаQRКода = Новый Картинка(ДанныеQRКода);
		
		Рисунок.Картинка = КартинкаQRКода;
		
	КонецЕсли;
	
КонецПроцедуры	


