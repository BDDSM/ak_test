
Перем мНаборЗаписейДокументаУдостоверяющегоЛичность;


Процедура ОбновитьНадписьУдостоверенияЛичности()
	
	Паспорт = мНаборЗаписейДокументаУдостоверяющегоЛичность[0];
	
	УдостоверениеЛичности =
		"" + Паспорт.ДокументВид + ", серия: " + Паспорт.ДокументСерия + ", № " + Паспорт.ДокументНомер +
		", выдан: " + Формат(Паспорт.ДокументДатаВыдачи,"ДФ='дд ММММ гггг'; ДП='Не указано'") + " года, " +
		Паспорт.ДокументКемВыдан + ", № подр. " + Паспорт.ДокументКодПодразделения + Символы.Таб +
		"Дата регистрации по месту жительства: " + Формат(Паспорт.ДатаРегистрацииПоМестуЖительства, "ДФ='дд ММММ гггг'; ДП='Не указано'");
	
	Модифицированность = Истина;
	Если УдостоверениеЛичности =
					", серия: , № , выдан: Не указано года, , № подр. 	Дата регистрации по месту жительства: Не указано" Тогда
		УдостоверениеЛичности = "Ввести данные об удостоверении личности";
	Иначе
		УдостоверениеЛичности = СтрЗаменить(УдостоверениеЛичности, "Не указано", "...");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДанныеИзКонтактногоЛица()
	
	ВыбраноКонтактноеЛицо = ЗначениеЗаполнено(КонтактноеЛицо);
	
	Если ВыбраноКонтактноеЛицо Тогда
		Фамилия                     = КонтактноеЛицо.Фамилия;
		Имя                         = КонтактноеЛицо.Имя;
		Отчество                    = КонтактноеЛицо.Отчество;
		
		ДатаРождения                = КонтактноеЛицо.ДатаРождения;
		Пол                         = КонтактноеЛицо.Пол;
		НапоминатьОДнеРождения      = КонтактноеЛицо.НапоминатьОДнеРождения;
		КоличествоДнейДоНапоминания = КонтактноеЛицо.КоличествоДнейДоНапоминания;
		
		СрезПаспортныхДанных = РегистрыСведений.ПаспортныеДанныеФизЛиц.СрезПоследних(,Новый Структура("ФизЛицо",КонтактноеЛицо));
		Если СрезПаспортныхДанных.Количество() > 0 тогда
			ЗаписьНабора = мНаборЗаписейДокументаУдостоверяющегоЛичность[0];
			ЗаписьНабора.Период                             = СрезПаспортныхДанных[0].Период;
			ЗаписьНабора.Физлицо                            = СрезПаспортныхДанных[0].Физлицо;
			ЗаписьНабора.ДатаРегистрацииПоМестуЖительства   = СрезПаспортныхДанных[0].ДатаРегистрацииПоМестуЖительства;
			ЗаписьНабора.ДокументВид                        = СрезПаспортныхДанных[0].ДокументВид;
			ЗаписьНабора.ДокументДатаВыдачи                 = СрезПаспортныхДанных[0].ДокументДатаВыдачи;
			ЗаписьНабора.ДокументКемВыдан                   = СрезПаспортныхДанных[0].ДокументКемВыдан;
			ЗаписьНабора.ДокументКодПодразделения           = СрезПаспортныхДанных[0].ДокументКодПодразделения;
			ЗаписьНабора.ДокументНомер                      = СрезПаспортныхДанных[0].ДокументНомер;
			ЗаписьНабора.ДокументСерия                      = СрезПаспортныхДанных[0].ДокументСерия;
		КонецЕсли;
	Иначе
		Фамилия                     = "";
		Имя                         = "";
		Отчество                    = "";
		
		ДатаРождения                = "";
		Пол                         = Перечисления.ПолФизическихЛиц.ПустаяСсылка();
		НапоминатьОДнеРождения      = Ложь;
		КоличествоДнейДоНапоминания = 0;
	КонецЕсли;
	
	ЭлементыФормы.Фамилия.РедактированиеТекста               = НЕ ВыбраноКонтактноеЛицо;
	ЭлементыФормы.Имя.РедактированиеТекста                   = НЕ ВыбраноКонтактноеЛицо;
	ЭлементыФормы.Отчество.РедактированиеТекста              = НЕ ВыбраноКонтактноеЛицо;
	ЭлементыФормы.ДатаРождения.ТолькоПросмотр                = ВыбраноКонтактноеЛицо;
	ЭлементыФормы.Пол.ТолькоПросмотр                         = ВыбраноКонтактноеЛицо;
	ЭлементыФормы.НапоминатьОДнеРождения.Доступность         = НЕ ВыбраноКонтактноеЛицо;
	ЭлементыФормы.КоличествоДнейДоНапоминания.ТолькоПросмотр = ВыбраноКонтактноеЛицо;
	ЭлементыФормы.Удостоверение.ТолькоПросмотр               = ВыбраноКонтактноеЛицо;
	
КонецПроцедуры

Процедура ПроверитьНаСуществующиеКонтактныеЛица()
	
	Если НЕ ЗначениеЗаполнено(КонтактноеЛицо) Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Фамилия"	, Фамилия);
		Запрос.УстановитьПараметр("Имя"		, Имя);
		Запрос.УстановитьПараметр("Отчество", Отчество);
		
		Запрос.Текст = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	КонтактныеЛица.Ссылка
		|ИЗ
		|	Справочник.КонтактныеЛица КАК КонтактныеЛица
		|ГДЕ
		|	КонтактныеЛица.Фамилия ПОДОБНО &Фамилия
		|	И КонтактныеЛица.Имя ПОДОБНО &Имя
		|	"+?(НЕ ЗначениеЗаполнено(Отчество),"","И КонтактныеЛица.Отчество ПОДОБНО &Отчество");
		
		Результат = Запрос.Выполнить().Выбрать();
		
		Если Результат.Следующий() Тогда
			
			Ответ = Вопрос("В базе найдено существующее контактное лицо со следующими параметрами:
			|
			|Ф.И.О.: "+Результат.Ссылка.Наименование+"
			|Дата рождения: " + Формат(Результат.Ссылка.ДатаРождения,"ДФ=dd.MM.yyyy")+"
			|
			|Использовать данное контактное лицо?", РежимДиалогаВопрос.ДаНет);
			
			Если Ответ = КодВозвратаДиалога.Да Тогда
				КонтактноеЛицо = Результат.Ссылка;
				
				ЗаполнитьДанныеИзКонтактногоЛица();
				
				ОбновитьНадписьУдостоверенияЛичности();
				
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьУдостоверениеЛичности"  Тогда
		
		ОбновитьНадписьУдостоверенияЛичности();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	ОбновитьНадписьУдостоверенияЛичности();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если НЕ ЗначениеЗаполнено(КонтактноеЛицо) Тогда
		// новое контактное лицо
		НовоеКонтактноеЛицо = Справочники.КонтактныеЛица.СоздатьЭлемент();
		НовоеКонтактноеЛицо.Фамилия                     = Фамилия;
		НовоеКонтактноеЛицо.Имя                         = Имя;
		НовоеКонтактноеЛицо.Отчество                    = Отчество;
		НовоеКонтактноеЛицо.Наименование                = Фамилия + " " + Имя + " " + Отчество;
		НовоеКонтактноеЛицо.ДатаРождения                = ДатаРождения;
		НовоеКонтактноеЛицо.НапоминатьОДнеРождения      = НапоминатьОДнеРождения;
		НовоеКонтактноеЛицо.КоличествоДнейДоНапоминания = КоличествоДнейДоНапоминания;
		НовоеКонтактноеЛицо.Пол                         = Пол;
		
		Попытка
			НовоеКонтактноеЛицо.Записать();
		Исключение
			Отказ = Истина;
			Сообщить(ОписаниеОшибки());
			Возврат;
		КонецПопытки;
		
		КонтактноеЛицо = НовоеКонтактноеЛицо.Ссылка;
	КонецЕсли;
	
	Наименование   = КонтактноеЛицо;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	// запись в регистр паспортных данных
	мНаборЗаписейДокументаУдостоверяющегоЛичность[0].Физлицо = КонтактноеЛицо;
	Если ЗначениеЗаполнено(мНаборЗаписейДокументаУдостоверяющегоЛичность[0].Период) Тогда
		мНаборЗаписейДокументаУдостоверяющегоЛичность.Отбор.Физлицо.Использование   = Истина;
		мНаборЗаписейДокументаУдостоверяющегоЛичность.Отбор.Физлицо.Значение        = мНаборЗаписейДокументаУдостоверяющегоЛичность[0].Физлицо;
		мНаборЗаписейДокументаУдостоверяющегоЛичность.Отбор.Период.Использование    = Истина;
		мНаборЗаписейДокументаУдостоверяющегоЛичность.Отбор.Период.Значение         = мНаборЗаписейДокументаУдостоверяющегоЛичность[0].Период;
		мНаборЗаписейДокументаУдостоверяющегоЛичность.Записать(Истина);
	КонецЕсли;
	
	НаборКонтактнойИнформации = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
	НаборКонтактнойИнформации.Отбор.Объект.Установить(Ссылка);
	
	// Телефон контактного лица
	Если ЗначениеЗаполнено(ВидТелефонаКонтактногоЛица)
	 И НЕ ПустаяСтрока(НомерТелефонаКонтактногоЛица) Тогда
		
		НоваяЗапись = НаборКонтактнойИнформации.Добавить();
		
		НоваяЗапись.Вид    = ВидТелефонаКонтактногоЛица;
		НоваяЗапись.Тип    = Перечисления.ТипыКонтактнойИнформации.Телефон;
		НоваяЗапись.Объект = Ссылка;
		
		НоваяЗапись.Поле3  = НомерТелефонаКонтактногоЛица;
		НоваяЗапись.Поле4  = ДобавочныйНомерТелефонаКонтактногоЛица;
		НоваяЗапись.Поле2  = КодГородаТелефонаКонтактногоЛица;
		
		УправлениеКонтактнойИнформацией.СформироватьПредставлениеТелефона(НоваяЗапись);
		
	КонецЕсли; 
	
	// Телефон 2 контактного лица
	Если ЗначениеЗаполнено(ВидТелефонаКонтактногоЛица2)
	 И НЕ ПустаяСтрока(НомерТелефонаКонтактногоЛица2)
	 И ВидТелефонаКонтактногоЛица2 <> ВидТелефонаКонтактногоЛица Тогда
		
		НоваяЗапись = НаборКонтактнойИнформации.Добавить();
		
		НоваяЗапись.Вид    = ВидТелефонаКонтактногоЛица2;
		НоваяЗапись.Тип    = Перечисления.ТипыКонтактнойИнформации.Телефон;
		НоваяЗапись.Объект = Ссылка;
		
		НоваяЗапись.Поле3  = НомерТелефонаКонтактногоЛица2;
		НоваяЗапись.Поле4  = ДобавочныйНомерТелефонаКонтактногоЛица2;
		НоваяЗапись.Поле2  = КодГородаТелефонаКонтактногоЛица2;
		
		УправлениеКонтактнойИнформацией.СформироватьПредставлениеТелефона(НоваяЗапись);
		
	КонецЕсли; 
	
	// Адрес электронной почты контактного лица
	Если ЗначениеЗаполнено(ВидЭлектроннойПочтыКонтактногоЛица)
	 И НЕ ПустаяСтрока(АдресЭлектроннойПочтыКонтактногоЛица) Тогда
		
		НоваяЗапись = НаборКонтактнойИнформации.Добавить();
		
		НоваяЗапись.Вид    = ВидЭлектроннойПочтыКонтактногоЛица;
		НоваяЗапись.Тип    = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
		НоваяЗапись.Объект = Ссылка;
		
		НоваяЗапись.Представление = АдресЭлектроннойПочтыКонтактногоЛица;
		
	КонецЕсли;
	
	// Адрес электронной почты контактного лица
	Если ЗначениеЗаполнено(ВидЭлектроннойПочтыКонтактногоЛица2)
	 И НЕ ПустаяСтрока(АдресЭлектроннойПочтыКонтактногоЛица2)
	 И ВидЭлектроннойПочтыКонтактногоЛица2 <> ВидЭлектроннойПочтыКонтактногоЛица Тогда
		
		НоваяЗапись = НаборКонтактнойИнформации.Добавить();
		
		НоваяЗапись.Вид    = ВидЭлектроннойПочтыКонтактногоЛица2;
		НоваяЗапись.Тип    = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
		НоваяЗапись.Объект = Ссылка;
		
		НоваяЗапись.Представление = АдресЭлектроннойПочтыКонтактногоЛица2;
		
	КонецЕсли;
	
	Попытка
		Если НаборКонтактнойИнформации.Количество() > 0 Тогда
			НаборКонтактнойИнформации.Записать(Ложь);
		КонецЕсли;
	Исключение
		Отказ = Истина;
		Сообщить(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИсторияКонтактныхЛицКонтрагентов.КонтактноеЛицоКонтрагента
	|ИЗ
	|	РегистрСведений.ИсторияКонтактныхЛицКонтрагентов КАК ИсторияКонтактныхЛицКонтрагентов
	|ГДЕ
	|	ИсторияКонтактныхЛицКонтрагентов.КонтактноеЛицоКонтрагента = &Ссылка";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если НЕ Выборка.Следующий() Тогда
		
		НаборЗаписей = РегистрыСведений.ИсторияКонтактныхЛицКонтрагентов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.КонтактноеЛицоКонтрагента.Установить(Ссылка);
		
		НоваяЗапись = НаборЗаписей.Добавить();
		НоваяЗапись.Период 						= ТекущаяДата();
		НоваяЗапись.КонтактноеЛицоКонтрагента 	= Ссылка;
		НоваяЗапись.КонтактноеЛицо 				= КонтактноеЛицо;
		НоваяЗапись.Контрагент 					= Владелец;
		
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	
	Если ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.КонтактныеЛица") И ЗначениеЗаполнено(ЗначениеВыбора) Тогда
		КонтактноеЛицо = ЗначениеВыбора;
		ЗаполнитьДанныеИзКонтактногоЛица();
	КонецЕсли;
	
КонецПроцедуры


Процедура ФамилияПриИзменении(Элемент)
	
	ПроверитьНаСуществующиеКонтактныеЛица();
	
КонецПроцедуры

Процедура ИмяПриИзменении(Элемент)
	
	ПроверитьНаСуществующиеКонтактныеЛица();
	
КонецПроцедуры

Процедура ОтчествоПриИзменении(Элемент)
	
	ПроверитьНаСуществующиеКонтактныеЛица();
	
КонецПроцедуры

Процедура ОтчествоНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаВыбора = Справочники.КонтактныеЛица.ПолучитьФормуВыбора(, ЭтаФорма);
	ФормаВыбора.Открыть();
	
КонецПроцедуры

Процедура УдостоверениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	ФормаВвода = ПолучитьОбщуюФорму("РедактированиеДокументаУдостоверяющегоЛичность", ЭтаФорма);
	ФормаВвода.НаборЗаписей = мНаборЗаписейДокументаУдостоверяющегоЛичность;
	ФормаВвода.Открыть();

КонецПроцедуры

Процедура ВидТелефонаКонтактногоЛицаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеКонтактнойИнформацией.ОткрытьФормуВыбораВидаКИ(Истина, Элемент, Перечисления.ТипыКонтактнойИнформации.Телефон, Перечисления.ВидыОбъектовКонтактнойИнформации.КонтактныеЛицаКонтрагентов);
	
КонецПроцедуры

Процедура ВидТелефонаКонтактногоЛица2НачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеКонтактнойИнформацией.ОткрытьФормуВыбораВидаКИ(Истина, Элемент, Перечисления.ТипыКонтактнойИнформации.Телефон, Перечисления.ВидыОбъектовКонтактнойИнформации.КонтактныеЛицаКонтрагентов);
	
КонецПроцедуры

Процедура ВидЭлектроннойПочтыКонтактногоЛицаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеКонтактнойИнформацией.ОткрытьФормуВыбораВидаКИ(Истина, Элемент, Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, Перечисления.ВидыОбъектовКонтактнойИнформации.КонтактныеЛицаКонтрагентов);
	
КонецПроцедуры

Процедура ВидЭлектроннойПочтыКонтактногоЛица2НачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	УправлениеКонтактнойИнформацией.ОткрытьФормуВыбораВидаКИ(Истина, Элемент, Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты, Перечисления.ВидыОбъектовКонтактнойИнформации.КонтактныеЛицаКонтрагентов);
	
КонецПроцедуры

Процедура ОтчествоОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КонтактноеЛицо = Справочники.КонтактныеЛица.ПустаяСсылка();
	ЗаполнитьДанныеИзКонтактногоЛица();

КонецПроцедуры

Процедура ОтчествоОткрытие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(КонтактноеЛицо) Тогда
		КонтактноеЛицо.ПолучитьФорму().Открыть();
	КонецЕсли;
КонецПроцедуры

Процедура НомерТелефонаКонтактногоЛицаПриИзменении(Элемент)
	
	Элемент.Значение = УправлениеКонтактнойИнформацией.ПривестиНомерТелефонаКШаблону(Элемент.Значение);
	
КонецПроцедуры

Процедура НомерТелефонаКонтактногоЛица2ПриИзменении(Элемент)
	
	Элемент.Значение = УправлениеКонтактнойИнформацией.ПривестиНомерТелефонаКШаблону(Элемент.Значение);
	
КонецПроцедуры


мНаборЗаписейДокументаУдостоверяющегоЛичность = РегистрыСведений.ПаспортныеДанныеФизЛиц.СоздатьНаборЗаписей();
мНаборЗаписейДокументаУдостоверяющегоЛичность.Добавить();
