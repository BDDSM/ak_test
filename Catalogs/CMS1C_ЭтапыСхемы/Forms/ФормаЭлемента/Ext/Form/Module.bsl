
&НаКлиенте
Процедура ОчисткаТаблицСопоставлениеТаблицПриИзменении(Элемент)
	ТекДанные = Элементы.ОчисткаТаблиц.ТекущиеДанные;
	ТекДанные.Таблица1С = ТекДанные.СопоставлениеТаблиц.ПредставлениеТаблицы1С;
	ТекДанные.ТаблицаСайта = ТекДанные.СопоставлениеТаблиц.ПредставлениеТаблицыСайта;
	ТекДанные.ТаблицаРезультатаСинхронизации = "ТРС_"+ТекДанные.Таблица1С+"_"+ТекДанные.ТаблицаСайта;
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузкаПриИзменении(Элемент)
	//Если Объект.Выгрузка Тогда
	//	Объект.Загрузка =ЛОжь;
	//КОнецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаПриИзменении(Элемент)
	//Если Объект.Загрузка Тогда
	//	Объект.Выгрузка = Ложь;
	//КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Об = ДанныеФормыВЗначение(Объект,Тип("СправочникОбъект.CMS1C_ЭтапыСхемы"));
	ЗаполнитьОтборНаФормеИзОбъекта(Об,"Выгрузка");
	ЗаполнитьОтборНаФормеИзОбъекта(Об,"Загрузка");
	ЗаполнитьОтборНаФормеИзОбъекта(Об,"ПредварительнаяЗагрузка");
	ЗаполнитьОтборНаФормеИзОбъекта(Об,"СопоставлениеПередОбменом");
	ЗаполнитьОтборНаФормеИзОбъекта(Об,"ВыполнятьДобавленияНаСайте");
	ЗаполнитьОтборНаФормеИзОбъекта(Об,"ВыполнятьИзмененияНаСайте");
	ЗаполнитьОтборНаФормеИзОбъекта(Об,"ВыполнятьУдаленияНаСайте");
	ЗаполнитьОтборНаФормеИзОбъекта(Об,"ВыполнятьДобавленияВ1С");
	ЗаполнитьОтборНаФормеИзОбъекта(Об,"ВыполнятьИзмененияВ1С");
	ЗаполнитьОтборНаФормеИзОбъекта(Об,"ВыполнятьУдаленияВ1С");
	ЗаполнитьОтборНаФормеИзОбъекта(Об,"ВыполнятьИзмененияВ1СДажеЕслиВсеПоляСовпадают");
	ЗаполнитьОтборНаФормеИзОбъекта(Об,"ВыполнятьУдаленияВ1СПолностью");
	ЗаполнитьОтборНаФормеИзОбъекта(Об,"ВыполнятьИзмененияНаСайтеДажеЕслиВсеПоляСовпадают");
	ЗаполнитьОтборНаФормеИзОбъекта(Об,"УскореннаяВыгрузка");
	ОбновитьПредставленияОтборов();
КонецПроцедуры

Функция ЗаполнитьОтборНаФормеИзОбъекта(Об,ИмяПоля)
	Схема = Справочники.CMS1C_СопоставленияТаблиц.ПолучитьМакет("Макет");
	Настройки = Схема.ВариантыНастроек.Основной.Настройки;    
	АдресСхемы = ПоместитьВоВременноеХранилище(Схема); 
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы));
	
	Настройка = Об[ИмяПоля+"ОтборХранилище"].Получить();
	Если Настройка = Неопределено Тогда
		КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);	
	Иначе
		Попытка
		КомпоновщикНастроек.ЗагрузитьНастройки(Настройка);
	Исключение
		КомпоновщикНастроек.ЗагрузитьНастройки(Настройки);	
		КонецПопытки;
	КОнецесли;
	
	
КонецФункции

&НаКлиенте
Процедура ВыгрузкаОтборНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОтредактироватьОтбор(СтандартнаяОбработка,"Выгрузка");
КонецПроцедуры

&НаКлиенте
Процедура ОтредактироватьОтбор(СтандартнаяОбработка,ИмяРеквизита)
	СтандартнаяОбработка = Ложь;
	ТекКомпоновщик = ПроинициализироватьКомпоновщик(ИмяРеквизита);
	
	//Ф = ПолучитьФОрму("Справочник.CMS1C_СопоставленияТаблиц.Форма.ФормаРедактированияОтбора");
	//Ф.открыть();
	
	Адреса = ПолучитьАдресаСхемыКомпоновкиДанныхВоВременномХранилище(ТекКомпоновщик.Настройки.Отбор);
	АдресХранилищаНастройкиКомпоновщика = ОткрытьФормуМодально("ОбщаяФорма.CMS1C_УпрощеннаяНастройкаСхемыКомпоновкиДанных",
		Новый Структура(
			"НеПомещатьНастройкиВСхемуКомпоновкиДанных,
			|НеРедактироватьСхемуКомпоновкиДанных,
			|НеНастраиватьУсловноеОформление,
			|НеНастраиватьВыбор,
			|НеНастраиватьПорядок,
			|НеНастраиватьПараметры,
			|УникальныйИдентификатор,
			|АдресСхемыКомпоновкиДанных,
			|АдресНастроекКомпоновкиДанных,
			|Заголовок",
			Истина,
			Истина,
			Истина,
			Истина,
			Истина,
			Истина,
			УникальныйИдентификатор,
			Адреса.СхемаКомпоновкиДанных,
			Адреса.НастройкиКомпоновкиДанных,
			"Редактирование отборов"));
	
	Если ЗначениеЗаполнено(АдресХранилищаНастройкиКомпоновщика) Тогда
		//ПрименитьИзмененияКСхемеКомпоновкиДанных(Адреса.СхемаКомпоновкиДанных, АдресХранилищаНастройкиКомпоновщика,ИмяРеквизита);
		//ВыгрузкаКомпоновщик.ЗагрузитьНастройки(ПолучитьИзВременногоХранилища(АдресХранилищаНастройкиКомпоновщика));
		
		ТекКомпоновщик.Настройки.Отбор.Элементы.Очистить();
		
		НастройкиЗагруженные = ПолучитьИзВременногоХранилища(АдресХранилищаНастройкиКомпоновщика);
		
		Для Каждого СтрокаОтбора из НастройкиЗагруженные.Отбор.Элементы Цикл
			//ДобавитьОтбор(СтрокаОтбора,ВыгрузкаКомпоновщик.Настройки,Неопределено);
			
			Если ТипЗнч(СтрокаОтбора) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
				РодительскаяГруппа = ТекКомпоновщик.Настройки.Отбор;
								
				ДобСтрОтбора = РодительскаяГруппа.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
				ЗаполнитьЗначенияСвойств(ДобСтрОтбора,СтрокаОтбора);
				
				Для Каждого СтрТз из СтрокаОтбора.Элементы Цикл
					ДобавитьОтбор(СтрТз,ДобСтрОтбора,ДобСтрОтбора);
				КонецЦикла;
			Иначе
				ДобСтрОтбора = ТекКомпоновщик.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				
				//ДобСтрокаОТбора.Родитель = Строкаотбора.Родитель;
				//ВыгрузкаКомпоновщик.Восстановить();		
				
				ЗаполнитьЗначенияСвойств(ДобСтрОтбора,СтрокаОтбора);
				//ВыгрузкаКомпоновщик.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);		
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЗаписатьОтбор(ИмяРеквизита,ТекКомпоновщик);
	
	
	ОбновитьПредставленияОтборов();
	ЭтаФорма.ОбновитьОтображениеДанных();
КонецПРоцедуры

ПРоцедура ЗаписатьОтбор(ИмяРеквизита,ТекКомпоновщик)
	СправочникОбъект = ДанныеФормыВЗначение(Объект,Тип("СправочникОбъект.CMS1C_ЭтапыСхемы"));
	СправочникОбъект[ИмяРеквизита+"ОтборХранилище"]= Новый ХранилищеЗначения(ТекКомпоновщик.Настройки);
	СправочникОбъект.Записать();
	ЗначениеВДанныеФормы(СправочникОбъект,Объект);
КонецПроцедуры


Функция ПолучитьАдресаСхемыКомпоновкиДанныхВоВременномХранилище(Знач Отбор)
	Схема = Справочники.CMS1C_СопоставленияТаблиц.ПолучитьМакет("Макет");
    Настройки = Схема.ВариантыНастроек.Основной.Настройки;
    //АдресСхемы = ПоместитьВоВременноеХранилище(Схема);
	//Настройки.Отбор
	
	Для Каждого СтрокаОтбора из Отбор.Элементы Цикл
		ДобавитьОтборСерв(СтрокаОтбора,Настройки,Неопределено);
	КонецЦикла;	
	
	Адреса = Новый Структура("СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных");
	
	// Схема
	//Если ЗначениеЗаполнено(Объект.СхемаКомпоновкиДанных) ИЛИ ХранилищеСхемыКомпоновкиДанных = Неопределено Тогда
	//	СхемаИНастройки = Справочники.ВидыЦен.ПолучитьОписаниеИСхемуКомпоновкиДанныхПоИмениМакета(Объект.Ссылка, Объект.СхемаКомпоновкиДанных);
	//	СхемаКомпоновкиДанных = СхемаИНастройки.СхемаКомпоновкиДанных;
	//Иначе
	//	СхемаКомпоновкиДанных = ХранилищеСхемыКомпоновкиДанных.Получить();
	//КонецЕсли;
	//
	//Если СхемаКомпоновкиДанных = Неопределено Тогда
	//	СхемаКомпоновкиДанных = Справочники.ВидыЦен.СформироватьНовуюСхемуКомпоновкиДанных();
	//КонецЕсли;
	Уник = Неопределено;
	Адреса.СхемаКомпоновкиДанных = ПоместитьВоВременноеХранилище(Схема, Уник);
	
	// Настройки
	Если ЗначениеЗаполнено(Настройки) Тогда
		Адреса.НастройкиКомпоновкиДанных = ПоместитьВоВременноеХранилище(Настройки, Уник);
	КонецЕсли;
	
	Возврат Адреса;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьОтбор(СтрокаОтбора,НастройкаИлиГруппа,ПодчиненныйЭлемент)
	Если ТипЗнч(СтрокаОтбора) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
		Если ПодчиненныйЭлемент <> Неопределено Тогда
			РодительскаяГруппа = ПодчиненныйЭлемент;
		ИначеЕсли ТипЗнч(НастройкаИлиГруппа) = Тип("НастройкиКомпоновкиДанных") Тогда
			РодительскаяГруппа = НастройкаИлиГруппа.Отбор;
		Иначе
			РодительскаяГруппа = НастройкаИлиГруппа;
		КонецЕсли;
		
		ДобСтрОтбора = РодительскаяГруппа.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ЗаполнитьЗначенияСвойств(ДобСтрОтбора,СтрокаОтбора);
		
		Для Каждого СтрТз из СтрокаОтбора.Элементы Цикл
			ДобавитьОтбор(СтрТз,ДобСтрОтбора,ДобСтрОтбора);
		КонецЦикла;
	Иначе
		Если ТипЗнч(НастройкаИлиГруппа) = Тип("НастройкиКомпоновкиДанных") Тогда
			ДобСтрОтбора = НастройкаИлиГруппа.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Иначе
			ДобСтрОтбора = НастройкаИлиГруппа.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ДобСтрОтбора,СтрокаОтбора);
	КонецЕсли;
КонецПроцедуры


Процедура ДобавитьОтборСерв(СтрокаОтбора,НастройкаИлиГруппа,ПодчиненныйЭлемент)
	Если ТипЗнч(СтрокаОтбора) = Тип("ГруппаЭлементовОтбораКомпоновкиДанных") Тогда
		Если ПодчиненныйЭлемент <> Неопределено Тогда
			РодительскаяГруппа = ПодчиненныйЭлемент;
		ИначеЕсли ТипЗнч(НастройкаИлиГруппа) = Тип("НастройкиКомпоновкиДанных") Тогда
			РодительскаяГруппа = НастройкаИлиГруппа.Отбор;
		Иначе
			РодительскаяГруппа = НастройкаИлиГруппа;
		КонецЕсли;
		
		ДобСтрОтбора = РодительскаяГруппа.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ЗаполнитьЗначенияСвойств(ДобСтрОтбора,СтрокаОтбора);
		
		Для Каждого СтрТз из СтрокаОтбора.Элементы Цикл
			ДобавитьОтборСерв(СтрТз,ДобСтрОтбора,ДобСтрОтбора);
		КонецЦикла;
	Иначе
		Если ТипЗнч(НастройкаИлиГруппа) = Тип("НастройкиКомпоновкиДанных") Тогда
			ДобСтрОтбора = НастройкаИлиГруппа.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Иначе
			ДобСтрОтбора = НастройкаИлиГруппа.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ДобСтрОтбора,СтрокаОтбора);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПрименитьИзмененияКСхемеКомпоновкиДанных(АдресСхемыКомпоновкиДанныхВХранилище, АдресНастроекКомпоновкиДанных,ИмяРеквизитаОтбора)
	
	Схема = ПолучитьИзВременногоХранилища(АдресСхемыКомпоновкиДанныхВХранилище);
	АдресСхемы = ПоместитьВоВременноеХранилище(Схема); 
	ХранилищеСхемыКомпоновкиДанных = Новый ХранилищеЗначения(Схема);
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	Попытка
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Схема));
	Исключение
	КонецПопытки;
	
	КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
	КомпоновщикНастроек.Восстановить();
	
	//СтрокаСопоставления = СопоставленияПолей.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	Если CMS1C_ПроцедурыОбменаССайтомСервер.ПолучитьXML(КомпоновщикНастроек.ПолучитьНастройки()) <> CMS1C_ПроцедурыОбменаССайтомСервер.ПолучитьXML(ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных)) Тогда
		//ЭтаФорма[ИмяРеквизитаОтбора+"Компоновщик"] = ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных);
		//КомпоновщикНастроек.ЗагрузитьНастройки(ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных));
		ЭтаФорма[ИмяРеквизитаОтбора+"Компоновщик"] = КомпоновщикНастроек;
		//ЭтаФорма[ИмяРеквизитаОтбора+"Компоновщик"].ЗагрузитьНастройки(ПолучитьИзВременногоХранилища(АдресНастроекКомпоновкиДанных));
		//СтрокаСопоставления[ИмяРеквизитаОтбора] = Схема.НастройкиПоУмолчанию.Отбор;
	Иначе
		//ХранилищеНастроекКомпоновкиДанных = Новый ХранилищеЗначения(Неопределено);
	КонецЕсли;
	
	//ИспользуетсяПроизвольныйОтбор = ХранилищеНастроекКомпоновкиДанных.Получить() <> Неопределено;
КонецФункции

Процедура ОбновитьПредставленияОтборов()
	Об = ДанныеФормыВЗначение(Объект,Тип("СправочникОбъект.CMS1C_ЭтапыСхемы"));
	ОбновитьПредставлениеОтбора("Выгрузка",Об);
	ОбновитьПредставлениеОтбора("Загрузка",Об);
	ОбновитьПредставлениеОтбора("ПредварительнаяЗагрузка",Об);
	ОбновитьПредставлениеОтбора("СопоставлениеПередОбменом",Об);
	ОбновитьПредставлениеОтбора("ВыполнятьДобавленияНаСайте",Об);
	ОбновитьПредставлениеОтбора("ВыполнятьИзмененияНаСайте",Об);
	ОбновитьПредставлениеОтбора("ВыполнятьУдаленияНаСайте",Об);
	ОбновитьПредставлениеОтбора("ВыполнятьДобавленияВ1С",Об);
	ОбновитьПредставлениеОтбора("ВыполнятьИзмененияВ1С",Об);
	ОбновитьПредставлениеОтбора("ВыполнятьУдаленияВ1С",Об);
	ОбновитьПредставлениеОтбора("ВыполнятьИзмененияВ1СДажеЕслиВсеПоляСовпадают",Об);
	ОбновитьПредставлениеОтбора("ВыполнятьУдаленияВ1СПолностью",Об);
	ОбновитьПредставлениеОтбора("ВыполнятьИзмененияНаСайтеДажеЕслиВсеПоляСовпадают",Об);
	ОбновитьПредставлениеОтбора("УскореннаяВыгрузка",Об);
КонецПроцедуры

ПРоцедура ОбновитьПредставлениеОтбора(ИмяРеквизита,Об)
	Настройки = Об[ИмяРеквизита+"ОтборХранилище"].Получить();
	Если Настройки <> Неопределено Тогда
		ЭтаФорма[ИмяРеквизита+"ПредставлениеОтбора"] = СокрЛП(Настройки.Отбор);
	КонецЕСли;
КонецПРоцедуры


Функция ПроинициализироватьКомпоновщик(ИмяРеквизита)
	Об = ДанныеФормыВЗначение(Объект,Тип("СправочникОбъект.CMS1C_ЭтапыСхемы"));
	
	Схема = Справочники.CMS1C_СопоставленияТаблиц.ПолучитьМакет("Макет");
	АдресСхемы = ПоместитьВоВременноеХранилище(Схема); 
	Схема = ПолучитьИзВременногоХранилища(АдресСхемы);
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	Попытка
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Схема));
	Исключение
	КонецПопытки;
	
	Настройки = ОБ[ИмяРеквизита+"ОтборХранилище"].Получить();
	Если Настройки = Неопределено Тогда
		Возврат КомпоновщикНастроек;
	КонецЕсли;
	
	Для Каждого СтрокаОтбора из Настройки.Отбор.Элементы Цикл
		ДобавитьОтборСерв(СтрокаОтбора,КомпоновщикНастроек.Настройки,Неопределено);
	КонецЦикла;
	
	Возврат КомпоновщикНастроек;
КонецФУнкции

&НаКлиенте
Процедура ЗагрузкаПредставлениеОтбораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОтредактироватьОтбор(СтандартнаяОбработка,"Загрузка");
КонецПроцедуры

&НаКлиенте
Процедура ПредварительнаяЗагрузкаПредставлениеОтбораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОтредактироватьОтбор(СтандартнаяОбработка,"ПредварительнаяЗагрузка");
КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеПередОбменомПредставлениеОтбораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОтредактироватьОтбор(СтандартнаяОбработка,"СопоставлениеПередОбменом");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьДобавленияНаСайтеПредставлениеОтбораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОтредактироватьОтбор(СтандартнаяОбработка,"ВыполнятьДобавленияНаСайте");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьИзмененияНаСайтеПредставлениеОтбораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОтредактироватьОтбор(СтандартнаяОбработка,"ВыполнятьИзмененияНаСайте");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьУдаленияНаСайтеПредставлениеОтбораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОтредактироватьОтбор(СтандартнаяОбработка,"ВыполнятьУдаленияНаСайте");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьДобавленияВ1СПредставлениеОтбораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОтредактироватьОтбор(СтандартнаяОбработка,"ВыполнятьДобавленияВ1С");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьИзмененияВ1СПредставлениеОтбораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОтредактироватьОтбор(СтандартнаяОбработка,"ВыполнятьИзмененияВ1С");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьУдаленияВ1СПредставлениеОтбораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОтредактироватьОтбор(СтандартнаяОбработка,"ВыполнятьУдаленияВ1С");
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузкаПредставлениеОтбораОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьОтбор(СтандартнаяОбработка,"Выгрузка");
КонецПроцедуры


Процедура ОчиститьОтбор(СтандартнаяОбработка,ИмяРеквизита)
	СтандартнаяОбработка = Ложь;
	Об = ДанныеФормыВЗначение(Объект,Тип("СправочникОбъект.CMS1C_ЭтапыСхемы"));
	Об[ИмяРеквизита+"ОтборХранилище"] = Новый ХранилищеЗначения(Неопределено);
	Об.Записать();
	ЗначениеВДанныеФормы(Об,Объект);
	
	ЭтаФорма[ИмяРеквизита+"ПредставлениеОтбора"] = "";
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаПредставлениеОтбораОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьОтбор(СтандартнаяОбработка,"Загрузка");
КонецПроцедуры

&НаКлиенте
Процедура ПредварительнаяЗагрузкаПредставлениеОтбораОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьОтбор(СтандартнаяОбработка,"ПредварительнаяЗагрузка");
КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеПередОбменомПредставлениеОтбораОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьОтбор(СтандартнаяОбработка,"СопоставлениеПередОбменом");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьДобавленияНаСайтеПредставлениеОтбораОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьОтбор(СтандартнаяОбработка,"ВыполнятьДобавленияНаСайте");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьИзмененияНаСайтеПредставлениеОтбораОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьОтбор(СтандартнаяОбработка,"ВыполнятьИзмененияНаСайте");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьУдаленияНаСайтеПредставлениеОтбораОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьОтбор(СтандартнаяОбработка,"ВыполнятьУдаленияНаСайте");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьДобавленияВ1СПредставлениеОтбораОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьОтбор(СтандартнаяОбработка,"ВыполнятьДобавленияВ1С");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьИзмененияВ1СПредставлениеОтбораОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьОтбор(СтандартнаяОбработка,"ВыполнятьИзмененияВ1С");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьУдаленияВ1СПредставлениеОтбораОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьОтбор(СтандартнаяОбработка,"ВыполнятьУдаленияВ1С");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьИзмененияВ1СДажеЕслиВсеПоляСовпадаютПредставлениеОтбораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОтредактироватьОтбор(СтандартнаяОбработка,"ВыполнятьИзмененияВ1СДажеЕслиВсеПоляСовпадают");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьИзмененияВ1СДажеЕслиВсеПоляСовпадаютПредставлениеОтбораОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьОтбор(СтандартнаяОбработка,"ВыполнятьИзмененияВ1СДажеЕслиВсеПоляСовпадают");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьУдаленияВ1СПолностьюПредставлениеОтбораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОтредактироватьОтбор(СтандартнаяОбработка,"ВыполнятьУдаленияВ1СПолностью");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьУдаленияВ1СПолностьюПредставлениеОтбораОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьОтбор(СтандартнаяОбработка,"ВыполнятьУдаленияВ1СПолностью");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьИзмененияНаСайтеДажеЕслиВсеПоляСовпадаютПредставлениеОтбораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОтредактироватьОтбор(СтандартнаяОбработка,"ВыполнятьИзмененияНаСайтеДажеЕслиВсеПоляСовпадают");
КонецПроцедуры

&НаКлиенте
Процедура ВыполнятьИзмененияНаСайтеДажеЕслиВсеПоляСовпадаютПредставлениеОтбораОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьОтбор(СтандартнаяОбработка,"ВыполнятьИзмененияНаСайтеДажеЕслиВсеПоляСовпадают");
КонецПроцедуры

&НаКлиенте
Процедура УскореннаяВыгрузкаПредставлениеОтбораНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ОтредактироватьОтбор(СтандартнаяОбработка,"УскореннаяВыгрузка");
КонецПроцедуры

&НаКлиенте
Процедура УскореннаяВыгрузкаПредставлениеОтбораОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьОтбор(СтандартнаяОбработка,"УскореннаяВыгрузка");
КонецПроцедуры

&НаКлиенте
Процедура СопоставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Стр = СопоставлениеНАчалоВыборкаСерв();
	Стр.Вставить("ТекущаяСтрока",Объект.Сопоставление);
	Ф = ПолучитьФорму("Справочник.CMS1C_СопоставленияТаблиц.ФормаВыбора",Стр,Элемент);
	//Ф.Элементы.Список.ТекущаяСтрока = ОБъект.Сопоставление;
	//НазваниеЛевогоЗначения = ПолучитьНазваниеЛевогоЗначения("Справочники",ИмяСправочника);
	
	//Если НазваниеЛевогоЗначения <> Неопределено И ЗначениеЗаполнено(СистемаУправленияСайтом) Тогда
	Нашли = Ложь;
	ТекПоле = Новый ПолеКомпоновкиДанных("СистемаУправленияСайтом");
	Для Каждого СтрТз из ф.Список.отбор.Элементы Цикл
		Если СтрТз.ЛевоеЗначение = ТекПоле Тогда
			ДобСтр = СтрТз;
			Нашли = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ Нашли Тогда		
		ДобСтр = Ф.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Конецесли;
	
	ДобСтр.ЛевоеЗначение = ТекПоле;
	ДобСтр.ПравоеЗначение = Стр.СистемаУправленияСайтом;
	ДобСтр.ИСпользование = Истина;
	Ф.Открыть();
	
	
	//КонецЕсли;
	
	//Если НазваниеЛевогоЗначения <> Неопределено И ЗначениеЗаполнено(НастройкаСайта) Тогда
	//	Нашли = Ложь;
	//	ТекПоле = Новый ПолеКомпоновкиДанных(НазваниеЛевогоЗначения);
	//	
	//	Для Каждого СтрТз из ф.Список.отбор.Элементы Цикл
	//		Если СтрТз.ЛевоеЗначение = ТекПоле Тогда
	//			ДобСтр = СтрТз;
	//			Нашли = Истина;
	//			Прервать;
	//		КонецЕсли;
	//	КонецЦикла;
	//	
	//	Если НЕ Нашли Тогда
	//		ДобСтр = Ф.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	//	КонецЕсли;
	//	
	//	ДобСтр.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(НазваниеЛевогоЗначения);
	//	ДобСтр.ПравоеЗначение = НастройкаСайта;
	//	ДобСтр.ИСпользование = Истина;
	//КонецЕсли;

	
	
	
КонецПроцедуры

Функция СопоставлениеНачалоВыборкаСерв()
	Стр = Новый СТруктура();
	Стр.Вставить("СистемаУправленияСайтом",ОБъект.СхемаОбмена.СистемаУправленияСайтом);
	Возврат Стр;
КонецФункции
