
Перем ОтбиратьСтатьи Экспорт;

Процедура СправочникСписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	Если НЕ Элемент.ИерархическийПРосмотр Тогда
		Отказ = Истина;
		Предупреждение("Создание новых групп и элементов возможно только в режиме просмотра иерархии");
	Иначе	
		Если Элемент.ТекущийРодитель.Пустая() Тогда
			Уровень = 0;
		Иначе
			Уровень = Элемент.ТекущийРодитель.Ссылка.Уровень()+1;
		КонецЕсли;
		
		Если ЭтоГруппа И Уровень > 2 Тогда
			Отказ = Истина;
			Предупреждение("Создание групп на этом уровне не предусмотрено");
		ИначеЕсли НЕ ЭтоГруппа И НЕ Уровень = 3 Тогда
			Отказ = Истина;
			Предупреждение("Создание элементов на этом уровне не предусмотрено");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//
//
Процедура ДействияФормыРедактироватьКод(Кнопка)
	МеханизмНумерацииОбъектов.ИзменениеВозможностиРедактированияНомера(Метаданные.Справочники.СтатьиДвиженияДенежныхСредств, ЭлементыФормы.СправочникСписок, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.СправочникСписок.Колонки.Код);
КонецПроцедуры
//
//
Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	МеханизмНумерацииОбъектов.ДобавитьВМенюДействияКнопкуРедактированияКода(ЭлементыФормы.ДействияФормы.Кнопки.Подменю);
	МеханизмНумерацииОбъектов.УстановитьДоступностьПоляВводаНомера(Метаданные.Справочники.СтатьиДвиженияДенежныхСредств, ЭлементыФормы.СправочникСписок, ЭлементыФормы.ДействияФормы.Кнопки.Подменю, ЭлементыФормы.СправочникСписок.Колонки.Код);
КонецПроцедуры

Процедура ПриОткрытии()
	СправочникДерево.Порядок.Установить("Код");
	
	УстановитьОтбор();
КонецПроцедуры

Процедура УстановитьОтбор()
	Если ОтбиратьСтатьи = Истина Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ЦФО", УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОсновноеЦФО"));
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ПраваДоступаКСтатьямДДСНаличные.СтатьяДДС
		               |ИЗ
		               |	РегистрСведений.ПраваДоступаКСтатьямДДСНаличные КАК ПраваДоступаКСтатьямДДСНаличные
		               |ГДЕ
		               |	ПраваДоступаКСтатьямДДСНаличные.ЦФО = &ЦФО";
		тзСтатьи = Запрос.Выполнить().Выгрузить();
		Если тзСтатьи.Количество() > 0 Тогда
			спСтатьи = Новый СписокЗначений;
			спСтатьи.ЗагрузитьЗначения(тзСтатьи.ВыгрузитьКолонку("СтатьяДДС"));
			
			СправочникСписок.Отбор.Ссылка.ВидСравнения = ВидСравнения.ВСписке;
			СправочникСписок.Отбор.Ссылка.Значение = спСтатьи;
			СправочникСписок.Отбор.Ссылка.Использование = Истина;
			ЭлементыФормы.СправочникСписок.НастройкаОтбора.Ссылка.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ДействияФормыИсторияИзменений(Кнопка)
	ИсторияИзменений = Отчеты.ИсторияИзмененийОбъектов.Создать();
	ИсторияИзменений.СсылкаНаОбъект = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
	Форма = ИсторияИзменений.ПолучитьФорму("ФормаОтчета");
	Форма.СформироватьТаблицуВерсий();
	Форма.Открыть();
КонецПроцедуры

Процедура СправочникСписокПриПолученииДанных(Элемент, ОформленияСтрок)
	спСтатьи = Новый СписокЗначений;
	Для Каждого Оформление Из ОформленияСтрок Цикл
		спСтатьи.Добавить(Оформление.ДанныеСтроки.Ссылка);
	КонецЦикла;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("спСтатьи", спСтатьи);
	//+++АК SUVV 2018.02.28 ИП-00017941
	//Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//               |	СоответствияСтатейСчетов.СтатьяДДС,
	//               |	СоответствияСтатейСчетов.СтатьяДР
	//               |ИЗ
	//               |	РегистрСведений.СоответствияСтатейСчетов КАК СоответствияСтатейСчетов
	//               |ГДЕ
	//               |	СоответствияСтатейСчетов.СтатьяДДС В(&спСтатьи)";
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СоответствияСтатейСчетовСрезПоследних.СтатьяДДС,
	|	МАКСИМУМ(СоответствияСтатейСчетовСрезПоследних.Период) КАК МаксПериод
	|ПОМЕСТИТЬ ВТ_МаксПериодПоСтатьеДДС
	|ИЗ
	|	РегистрСведений.СоответствияСтатейСчетов.СрезПоследних(, СтатьяДДС В (&спСтатьи)) КАК СоответствияСтатейСчетовСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствияСтатейСчетовСрезПоследних.СтатьяДДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствияСтатейСчетов.СтатьяДДС,
	|	СоответствияСтатейСчетов.СтатьяДР
	|ИЗ
	|	ВТ_МаксПериодПоСтатьеДДС КАК ВТ_МаксПериодПоСтатьеДДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоответствияСтатейСчетов КАК СоответствияСтатейСчетов
	|		ПО ВТ_МаксПериодПоСтатьеДДС.СтатьяДДС = СоответствияСтатейСчетов.СтатьяДДС
	|			И ВТ_МаксПериодПоСтатьеДДС.МаксПериод = СоответствияСтатейСчетов.Период";
	//---АК SUVV
	тзСтатьи = Запрос.Выполнить().Выгрузить();
	Для Каждого Оформление Из ОформленияСтрок Цикл
		пСтрока = тзСтатьи.Найти(Оформление.ДанныеСтроки.Ссылка, "СтатьяДДС");
		Если пСтрока <> Неопределено Тогда
			Оформление.Ячейки.СтатьяДР.УстановитьТекст(пСтрока.СтатьяДР);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры
