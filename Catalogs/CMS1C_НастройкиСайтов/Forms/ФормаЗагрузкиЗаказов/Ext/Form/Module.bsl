&НаКлиенте
Процедура СнятьФлажки(Команда)
	Для каждого стр Из Заказы Цикл
		
		Стр.Загружать = Ложь;
	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	Для каждого стр Из Заказы Цикл
		
		Стр.Загружать = ПроверкаСтроки(стр);
	
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЗаказыНаКлиенте(Команда)
	Ошибки = 0;
	СтрокиСОтметкой = Заказы.НайтиСтроки(Новый Структура("Загружать",Истина));
	Если НЕ СтрокиСОтметкой.Количество() Тогда
		#Если Клиент Тогда
			Сообщить("Необходжимо выбрать заказы для загрузки!",СтатусСообщения.Информация); 
		#КонецЕсли
	КонецЕсли;
	
	Для каждого стр Из СтрокиСОтметкой Цикл	
		СтрокаЗаказа = Заказы.НайтиСтроки(Новый Структура("IDЗаказа",стр.IDЗаказа))[0];
		Стр.Загружать = ПроверкаСтроки(СтрокаЗаказа);
		Ошибки = Ошибки+ ?(Стр.Загружать,0,1);		
	КонецЦикла; 
	Если Ошибки Тогда
		возврат;
	КонецЕсли;
	
	Если СтрокиСОтметкой.Количество() Тогда
		СообщенияКлиенту = ЗагрузитьЗаказыНаСервере();		
		#Если Клиент Тогда
			Сообщить(СообщенияКлиенту,СтатусСообщения.Информация); 
		#КонецЕсли
	КонецЕсли;       
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьЗаказыНаСервере()
	
	ТекстСообщений = "";
	
	Для Каждого ЭлементСпискаНастроек из Параметры.СписокНастроекСайтов Цикл
		ТаблицаЗаказовДляВыгрузкиПоНастройкеСайта = Заказы.Выгрузить(Новый СТруктура("Загружать,НастройкаСайта",Истина,ЭлементСпискаНастроек.Значение));
		
		Если ТаблицаЗаказовДляВыгрузкиПоНастройкеСайта.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Об = CMS1C_ПроцедурыОбменаССайтомСервер.ПолучитьОбработкуПоСистемеУправленияСайтом(ЭлементСпискаНастроек.Значение);
		//Об = Настройка.ПолучитьОБъект();
		Об.ЗаписатьЗаказы(ТаблицаЗаказовДляВыгрузкиПоНастройкеСайта);
	КонецЦикла;
	ПерезаполнитьЗаказы();
	
	возврат  ТекстСообщений;
КонецФункции 

&НаСервере
Процедура ПерезаполнитьЗаказы()
	Заказы.Очистить();
	//СтруктураТаблиц = CMS1C_ПроцедурыОбменаССайтомСерверСВызовом.ЗаполнитьИВернутьТаблицуЗаказов(РеквизитФормыВЗначение("Заказы"),Настройка); //,Тип("ТаблицаЗначений")
	
	Для Каждого ЭлементСписка из Параметры.СписокНастроекСайтов Цикл
		Обработка = CMS1C_ПроцедурыОбменаССайтомСервер.ПолучитьОбработкуПоСистемеУправленияСайтом(Элементсписка.Значение.СистемаУправленияСайтом);
		Обработка.НастройкаСайта = ЭлементСписка.Значение;
		Обработка.ЗагрузитьЗаказы(Истина,ЭтаФорма);
	КонецЦикла;
	
	Заказы.Сортировать("ДатаЗаказа");
	
	//Элементы.ЗаказыIDКонтрагента.Видимость = Ложь;
	//Элементы.ЗаказыIDСтатуса.Видимость = Ложь;
	//Элементы.ЗаказыЕстьВ1С.ТОлькоПросмотр = Истина;
	//Элементы.ЗаказыНАстройкаСайта.ТолькоПросмотр = Истина;
	
	
	
	
	
	//Если ТипЗнч(СтруктураТаблиц)<>Тип("Структура") Тогда
	//	возврат;
	//КонецЕсли;
	//ЗначениеВРеквизитФормы(СтруктураТаблиц.ТЗЗаказовФормы,"Заказы");	
	//Если НЕ ТЗЗаказовСайта.Количество() Тогда		
	//	НовыеРеквизиты = Новый Массив;
	//	Попытка
	//		Для каждого Колонка из СтруктураТаблиц.ТЗЗаказовСайта.Колонки Цикл
	//			
	//			НовыйРеквизит = Новый РеквизитФормы(Колонка.Имя,Новый ОписаниеТипов("Строка"),"ТЗЗаказовСайта");
	//			НовыеРеквизиты.Добавить(НовыйРеквизит);	
	//		КонецЦикла;	
	//		ИзменитьРеквизиты(НовыеРеквизиты);
	//	Исключение КонецПопытки;
	//КонецЕсли;
	//ТЗЗаказовСайта.Загрузить(СтруктураТаблиц.ТЗЗаказовСайта);
	//ИДСтатусаЗаказовВОбработке = СтруктураТаблиц.ИДСтатусаОбновления;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПерезаполнитьЗаказы();
КонецПроцедуры

&НаКлиенте
Функция ПроверкаСтроки(стр) Экспорт
	Настройка = Стр.НастройкаСайта;
	
	//ИспользоватьГрафикиОплаты = ПолучитьЗначениеКонстанты("ИспользоватьГрафикиОплаты");
	ИспользоватьГрафикиОплаты = Ложь;
	
	//МассивСт = ТЗЗаказовСайта.НайтиСтроки(Новый Структура("ID",Строка(Формат(стр.НомерЗаказа,"ЧГ=0"))));
	//Если НЕ МассивСт.Количество() Тогда
	//	возврат Ложь; 
	//Иначе
	//	ст  =МассивСт.Получить(0);
	//КонецЕсли;  

	Если НЕ ТипЗнч(Стр.Контрагент)=Тип("СправочникСсылка.Контрагенты") или НЕ ЗначениеЗаполнено(Стр.Контрагент) Тогда
		//Попробуем найти контрагента
		СсылкаНаКонтрагента = ВернутьСсылкуНаКонтрагента(Настройка,Стр.IDКонтрагента);
		Если ЗначениеЗаполнено(СсылкаНаКонтрагента) Тогда
			Стр.Контрагент= СсылкаНаКонтрагента;
		Конецесли;
	КонецЕсли;
	СоздаватьКонтрагентов = Настройка.СоздаватьКонтрагентов;
	СоздаватьКонтрагентовБезВопросов = Настройка.СоздаватьКонтрагентовБезВопросов;
	Если ТипЗнч(Стр.Контрагент)=Тип("СправочникСсылка.Контрагенты") и ЗначениеЗаполнено(Стр.Контрагент) Тогда
		ДобавитьЗаписьВРегистрКонтрагентыСайта(Стр.Контрагент,Настройка,стр.IDКонтрагента);
	ИначеЕсли СоздаватьКонтрагентов Тогда
		Создавать = Ложь;
		ВыбранноеЗначение = Неопределено;
		#Если Клиент Тогда
			Если НЕ СоздаватьКонтрагентовБезВопросов Тогда
				
			Если Вопрос("Контрагент("+Стр.Контрагент+") в строке "+Строка(Стр.ПолучитьИдентификатор()+1)+" не найден, создать нового автоматически?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				Создавать = Истина;
			Иначе
				ВвестиЗначение(ВыбранноеЗначение,"Выберите контрагента вручную..." ,Тип("СправочникСсылка.Контрагенты"));	 
			КонецЕсли; 
		КонецЕсли;
		#КонецЕсли
		
		Если Создавать или (СоздаватьКонтрагентовБезВопросов и СоздаватьКонтрагентов)Тогда 
			#Если Клиент Тогда
			Состояние("Создание контрагента...");
			#КонецЕсли    
		    //преобразуем строку в структуру
			//СтруктураСтроки = Новый Структура;
			//Для каждого Колонка Из ТЗЗаказовСайта.Колонки Цикл		              		
			//	СтруктураСтроки.Вставить(Колонка.Имя,ст[Колонка.Имя]);	
			//КонецЦикла; 
			
			
			
			СозданныйКонтрагент = СоздатьКонтрагента(Стр.ПолучитьИдентификатор());
			Если ЗначениеЗаполнено(СозданныйКонтрагент)Тогда
			Стр.Контрагент = СозданныйКонтрагент; 
			КонецЕсли;
		ИначеЕсли ЗначениеЗаполнено(ВыбранноеЗначение) Тогда 
			Стр.Контрагент = ВыбранноеЗначение;         
			ДобавитьЗаписьВРегистрКонтрагентыСайта(Стр.Контрагент,Настройка,Стр.IDКонтрагента);
		Иначе		
			Сообщить("В строке "+Строка(Стр.ПолучитьИдентификатор()+1)+" необходимо заполнить контрагента из справочника ""Контрагенты"".");
			возврат Ложь;
		КонецЕсли;
	Иначе
		Сообщить("В строке "+Строка(Стр.ПолучитьИдентификатор()+1)+" необходимо заполнить контрагента из справочника ""Контрагенты"".");
		возврат Ложь;
	КонецЕсли; 	
	
	Если ТипЗнч(Стр.Валюта)=Тип("СправочникСсылка.Валюты") и ЗначениеЗаполнено(Стр.Валюта) Тогда
	//	возврат Истина;
	Иначе
		Сообщить("В строке "+Строка(Стр.ПолучитьИдентификатор()+1)+" необходимо заполнить валюту из справочника ""Валюты"".");
		возврат Ложь;
	КонецЕсли; 
	НомДоставки = CMS1C_ПроцедурыОбменаССайтомСервер.ВернутьСсылкуНаНоменклатуруДоставки(стр.ТипДоставки,Настройка);
	Если НомДоставки.Пустая() Тогда
		
		Если стр.СуммаДоставки > 0 Тогда 
			Сообщить("В регистре ""Номенклатура доставки сайта"" номенклатура доставки ("+стр.ТипДоставки+") не найдена, заполните регистр!");
			возврат Ложь;
		КонецЕсли;
	Иначе
		стр.ТипДоставки = НомДоставки;
	КонецЕсли;
	
	
	//+ГО
	//Если типЗнч(Стр.ГрафикОплаты)=Тип("Строка") Тогда
	//	Если ИспользоватьГрафикиОплаты Тогда
	//		Сообщить("В строке "+Строка(Стр.ПолучитьИдентификатор()+1)+" не установлен график оплаты (график оплаты должен быть выбран из справочника ""Графики оплаты"")");
	//		Возврат Ложь;
	//	КонецЕсли;
	//КонецЕсли;
	//-ГО


	возврат Истина;
	
КонецФункции

&НаСервере
Функция ВернутьСсылкуНаКонтрагента(Настройка,IDКонтрагента)
	//Если IDКонтрагента <0 Тогда
	//	Возврат Неопределено;
	//КонецЕсли;
	
	ЗапросПоКонтрагентам = Новый Запрос();
	ЗапросПоКонтрагентам.Текст = "ВЫБРАТЬ
	|	CMS1C_СоответствияКонтрагентовВ1СИНаСайте.Контрагент
	|ИЗ
	|	РегистрСведений.CMS1C_СоответствияКонтрагентовВ1СИНаСайте КАК CMS1C_СоответствияКонтрагентовВ1СИНаСайте
	|ГДЕ
	|	CMS1C_СоответствияКонтрагентовВ1СИНаСайте.НастройкаСайта = &НастройкаСайта
	|	И CMS1C_СоответствияКонтрагентовВ1СИНаСайте.Номер = &Номер";
	
	ЗапросПоКонтрагентам.УстановитьПараметр("НастройкаСайта",Настройка);
	ЗапросПоКонтрагентам.УстановитьПараметр("Номер",IDКонтрагента);
	Результат = ЗапросПоКонтрагентам.Выполнить().Выбрать(); 
	Если Результат.Следующий() Тогда
		Возврат Результат.Контрагент;
	КонецЕсли; 
	Возврат Неопределено;
	
	//возврат CMS1C_ПроцедурыОбменаССайтомСерверСВызовом.ВернутьСсылкуНаКонтрагента(Настройка,IDконтрагента);	
	
КонецФункции 

&НаСервере
Функция ДобавитьЗаписьВРегистрКонтрагентыСайта(Контрагент,Настройка,customerID)
	Запись = РегистрыСведений.CMS1C_СоответствияКонтрагентовВ1СИНаСайте.СоздатьМенеджерЗаписи();	
	Запись.Контрагент = контрагент;
	Запись.НастройкаСайта = Настройка;
	Запись.Номер = customerID;
	Запись.Записать(Истина);
КонецФункции 

&НаСервере
Функция СоздатьКонтрагента(ИдентификаторСтр)
	
	//ст = ТЗЗаказовСайта.НайтиПоИдентификатору(Идентификатор); 	
	Стр = Заказы.НайтиПоИдентификатору(ИдентификаторСтр);
	
	//СправочникНастройка =ДанныеФормыВЗначение(Настройка,ТИп("СправочникСсылка.CMS1C_НастройкиСайтов"));
	Настройка = Стр.НастройкаСайта;
	ОбъектНастройка = Настройка.ПолучитьОбъект();
	ОбъектНастройка = CMS1C_ПроцедурыОбменаССайтомСервер.ПолучитьОбработкуПоСистемеУправленияСайтом(Настройка);
	ОбъектНастройка.ЗарегистрироватьКонтрагента(стр);
	//возврат CMS1C_ПроцедурыОбменаССайтомСерверСВызовом.ЗарегистрироватьКонтрагента(ст,Параметры.Настройка);	
	
КонецФункции