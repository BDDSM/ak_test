
&НаСервереБезКонтекста
Функция ПолучитьУчетнуюЗаписьЭлПочтыПоУмолчанию()
	
	Возврат ОбщиеПроцедуры.ПолучитьУчетнуюЗаписьДляРассылки();
	
КонецФункции


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПервоначальноеЗначениеПолученОригинал=Объект.ПолученОригинал;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если Объект.ПолученОригинал
			И НЕ ПервоначальноеЗначениеПолученОригинал Тогда
		
		//Отправка письма
	    СписокКому = Новый СписокЗначений;
				
		Менеджер = Объект.МенеджерПоСоглашению;
		//АК_БЕЛН_05.04.2016++
		//Если НЕ ЗначениеЗаполнено(Менеджер) Тогда 
		//	Возврат;
		//КонецЕсли;
		
		//Адрес = УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(Менеджер);
		//Если Адрес <> "" Тогда
		//	СписокКому.Добавить("pozm@automacon.ru", "pozm@automacon.ru");
		//	СписокКому.Добавить(Адрес, Адрес);
		//Иначе
		//	Возврат;
		//КонецЕсли;	
		
		Бухгалтер = Объект.Владелец.ОсновнойБухгалтерПокупателя;
		Адрес = УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(Бухгалтер);
		Если Адрес <> "" Тогда
			СписокКому.Добавить(Адрес, Адрес);
		Иначе
			Адрес = УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(Бухгалтер.ФизЛицо);
			Если Адрес <> "" Тогда
				СписокКому.Добавить(Адрес, Адрес);
			КонецЕсли;	
		КонецЕсли;	
		
		Адрес = УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(Менеджер);
		
		Если Адрес <> "" Тогда
			СписокКому.Добавить(Адрес, Адрес);
		Иначе
			Адрес = УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(Менеджер.ФизЛицо);
			Если Адрес <> "" Тогда
				Если СписокКому.НайтиПоЗначению(Адрес)=Неопределено Тогда
					СписокКому.Добавить(Адрес, Адрес);
				КонецЕсли; 
			КонецЕсли;		
		КонецЕсли;
		
		Адрес = УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(Объект.Владелец.ОсновнойМенеджерПокупателя);
		
		Если Адрес <> "" Тогда
			СписокКому.Добавить(Адрес, Адрес);
		Иначе
			Адрес = УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(Объект.Владелец.ОсновнойМенеджерПокупателя.ФизЛицо);
			Если Адрес <> "" Тогда
				Если СписокКому.НайтиПоЗначению(Адрес)=Неопределено Тогда
					СписокКому.Добавить(Адрес, Адрес);
				КонецЕсли; 
			КонецЕсли;		
		КонецЕсли;
		//АК_БЕЛН_05.04.2016--
		
		
		
		УчетнаяЗапись = ПолучитьУчетнуюЗаписьЭлПочтыПоУмолчанию();
		
		Почта = Новый ИнтернетПочта;
		Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
		Письмо = Новый ИнтернетПочтовоеСообщение;
		
		Почта.Подключиться(Профиль);
		Письмо.Тема = "Установлен признак получения оригинала к допсоглашению " + СокрЛП(Объект.Наименование) + " контрагента " + Объект.Владелец;
		Письмо.ИмяОтправителя = "" + УчетнаяЗапись + "";
		Письмо.ИмяОтправителя = "" + СокрЛП(УчетнаяЗапись) + "";
		Письмо.Отправитель    = "" + СокрЛП(УчетнаяЗапись) + "";
		Для Каждого ПолучательЭлемент Из СписокКому Цикл
			Получатель = Письмо.Получатели.Добавить();
			Получатель.Адрес = ПолучательЭлемент.Значение;
		КонецЦикла;	
		
		ТекстСообщения = Письмо.Тексты.Добавить();
		ТекстСообщения.Текст = "В доп. соглашении " + СокрЛП(Объект.Наименование) + " контрагента " + Объект.Владелец +
								" установлен признак получения оригинала";
		ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
		
		//Письмо.Вложения.Добавить(ИмяФайла);
		
		//Если НЕ ОбщегоНазначения.ЭтоКопияБазы() Тогда
			Почта.Послать(Письмо);
		//КонецЕсли;	
		Почта.Отключиться();
    КонецЕсли;
    ПервоначальноеЗначениеПолученОригинал=Объект.ПолученОригинал;
КонецПроцедуры


&НаКлиенте
Процедура ЗаменитьФайл(Команда)
	//АК БЕЛН 25.03.2016++
	СохранитьКонтрагента();
	//АК БЕЛН 25.03.2016--
	СтруктураВозврат = ОткрытьФормуМодально("Справочник.ДополнительныеСоглашения.Форма.ФормаВыбораФайла");
	
	Если СтруктураВозврат <> Неопределено
			И СтруктураВозврат.БылВыборФайла Тогда
		
		Для Каждого ЭлементСписка Из СтруктураВозврат.СписокФайлов Цикл
			//Файл = Новый Файл(СтруктураВозврат.ИмяФайла);
			Файл = Новый Файл(ЭлементСписка.Значение);
			Если Файл.Существует() Тогда
				АдресХранилища = "";
				//ПоместитьФайл(АдресХранилища,, Файл.ПолноеИмя,, Новый УникальныйИдентификатор);
				АдресХранилища = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Файл.ПолноеИмя), Новый УникальныйИдентификатор);
				
				ДобавитьФайлНаСервере(АдресХранилища, Файл.Имя, Файл.ПолноеИмя);
			КонецЕсли;
		КонецЦикла;
		//Отправка письма
		СписокКому=Новый СписокЗначений;
		//		
		//Бухгалтер=Объект.Владелец.ОсновнойБухгалтерПокупателя;
		//Адрес=УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(Бухгалтер);
		//Если Адрес<>"" Тогда
		//	СписокКому.Добавить(Адрес, Адрес);
		//Иначе
		//	Возврат;
		//КонецЕсли;	
		//
		//АК_БЕЛН_05.04.2016++
		Менеджер = Объект.МенеджерПоСоглашению;
		Бухгалтер = Объект.Владелец.ОсновнойБухгалтерПокупателя;
		Адрес = УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(Бухгалтер);
		Если Адрес <> "" Тогда
			СписокКому.Добавить(Адрес, Адрес);
		Иначе
			Адрес = УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(Бухгалтер.ФизЛицо);
			Если Адрес <> "" Тогда
				СписокКому.Добавить(Адрес, Адрес);
			КонецЕсли;	
		КонецЕсли;	
		
		Адрес = УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(Менеджер);
		
		Если Адрес <> "" Тогда
			СписокКому.Добавить(Адрес, Адрес);
		Иначе
			Адрес = УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(Менеджер.ФизЛицо);
			Если Адрес <> "" Тогда
				Если СписокКому.НайтиПоЗначению(Адрес)=Неопределено Тогда
					СписокКому.Добавить(Адрес, Адрес);
				КонецЕсли; 
			КонецЕсли;		
		КонецЕсли;
		
		Адрес = УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(Объект.Владелец.ОсновнойМенеджерПокупателя);
		
		Если Адрес <> "" Тогда
			СписокКому.Добавить(Адрес, Адрес);
		Иначе
			Адрес = УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(Объект.Владелец.ОсновнойМенеджерПокупателя.ФизЛицо);
			Если Адрес <> "" Тогда
				Если СписокКому.НайтиПоЗначению(Адрес)=Неопределено Тогда
					СписокКому.Добавить(Адрес, Адрес);
				КонецЕсли; 
			КонецЕсли;		
		КонецЕсли;
		//АК_БЕЛН_05.04.2016--
		
		
		УчетнаяЗапись = ПолучитьУчетнуюЗаписьЭлПочтыПоУмолчанию();
		
		Почта = Новый ИнтернетПочта;
		Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
		Письмо = Новый ИнтернетПочтовоеСообщение;
		
		Почта.Подключиться(Профиль);
		Письмо.Тема = "Приложен файл к допсоглашению "+СокрЛП(Объект.Наименование)+" контрагента "+Объект.Владелец;
		Письмо.ИмяОтправителя = ""+УчетнаяЗапись+"";
		Письмо.ИмяОтправителя  = ""+СокрЛП(УчетнаяЗапись)+"";
		Письмо.Отправитель     = ""+СокрЛП(УчетнаяЗапись)+"";
		Для Каждого ПолучательЭлемент Из СписокКому Цикл
			Получатель = Письмо.Получатели.Добавить();
			Получатель.Адрес           = ПолучательЭлемент.Значение;
		КонецЦикла;	
		
		ТекстСообщения = Письмо.Тексты.Добавить();
		ТекстСообщения.Текст     = "К допсоглашению "+СокрЛП(Объект.Наименование)+" контрагента "+Объект.Владелец+" приложены файлы";
		ТекстСообщения.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
		
		//Письмо.Вложения.Добавить(ИмяФайла);
		
		//Если НЕ ОбщегоНазначения.ЭтоКопияБазы() Тогда
			Почта.Послать(Письмо);
		//КонецЕсли;	
		Почта.Отключиться();

	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура СохранитьКонтрагента()
    ХранилищеОбщихНастроек.Сохранить("АК_Изб_Контрагент",,Объект.Владелец);
КонецПроцедуры// ()
 

&НаКлиенте
Процедура ПросмотрФайла(Команда)
	
	ТекущаяСтрокаИд = Элементы.ФайлыДоговоров.ТекущаяСтрока;
	ПечатьФайла(ТекущаяСтрокаИд, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьФайлНаДиск(Команда)
	
	ТекущаяСтрокаИд = Элементы.ФайлыДоговоров.ТекущаяСтрока;
	ДиалогСохраненияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	//Фильтр 									= "txt|*.txt";
	//ДиалогСохраненияФайла.Фильтр 				= Фильтр;
	ДиалогСохраненияФайла.Заголовок   		= "Выберите каталог для сохранения договора";
	//АК БЕЛН 25.03.2016++
	ДиалогСохраненияФайла.Каталог=РаботаСДиалогамиКлиент.ПолучитьПапкуКонтрагента(Объект.Владелец.Наименование);
	//АК БЕЛН 25.03.2016--
	Если ДиалогСохраненияФайла.Выбрать() Тогда
		
		ПутьКФайлу = ДиалогСохраненияФайла.Каталог;
		
		ТекДанные = Объект.ФайлыДоговоров.НайтиПоИдентификатору(ТекущаяСтрокаИд);
		ДвоичныеДанныеИзХранилища = ПолучитьИзВременногоХранилища(ХранилищеЗначенияСервер(ТекущаяСтрокаИд));
		
		Если ТипЗнч(ДвоичныеДанныеИзХранилища) = Тип("ДвоичныеДанные") Тогда
			ДвоичныеДанныеИзХранилища.Записать(ПутьКФайлу +"\" + ТекДанные.ИмяФайла);
		КонецЕсли;

	КонецЕсли	
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьФайлаКоманда(Команда)
	ТекущаяСтрокаИд = Элементы.ФайлыДоговоров.ТекущаяСтрока;
	ПечатьФайла(ТекущаяСтрокаИд);		
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайл(Команда)
	
	ТекущаяСтрокаИд = Элементы.ФайлыДоговоров.ТекущаяСтрока;	
	Объект.ФайлыДоговоров.Удалить(ТекущаяСтрокаИд);
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьФайла(Идентификатор, СразуПечать = Истина) Экспорт   	
	
    ТекущиеДанные = Объект.ФайлыДоговоров.НайтиПоИдентификатору(Идентификатор);
	пИмяФайла = ТекущиеДанные.ИмяФайла;
	
	ДвоичныеДанныеИзХранилища = ПолучитьИзВременногоХранилища(ХранилищеЗначенияСервер(Идентификатор));
	
	Файл = Новый Файл(пИмяФайла);
	Если СразуПечать = Истина Тогда
		Если Найти(НРег(Файл.Расширение), ".doc") > 0 Тогда
			пПрограмма = """rundll32 SHELL32.DLL,ShellExec_RunDLL winword ""пИмяФайла"" /mFilePrintDefault /mDocClose /mFileExit""";
		ИначеЕсли Найти(НРег(Файл.Расширение), ".xls") > 0 Тогда
			пПрограмма = "WScript.exe ""D:\Izbenka\Базы 1С\ExcelPrint.vbs"" ""пИмяФайла""";
		//ИначеЕсли Найти(пИмяФайла, ".ppt") > 0 Тогда
		//	пПрограмма = """C:\Program Files (x86)\Microsoft Office\Office11\powerpnt.exe""";
		//ИначеЕсли Найти(пИмяФайла, "vsd") > 0 Тогда
		//	пПрограмма = """C:\Program Files (x86)\Microsoft Office\Office11\visio.exe""";
		ИначеЕсли Найти(НРег(Файл.Расширение), ".bmp") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".dib") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".rle") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".jpg") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".jpeg") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".tif") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".gif") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".png") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".ico") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".wmf") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".emf") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".bmp") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".dib") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".rle") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".jpg") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".jpeg") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".tif") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".gif") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".png") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".ico") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".wmf") > 0
		ИЛИ Найти(НРег(Файл.Расширение), ".emf") > 0 Тогда
			пПрограмма = """C:\Windows\system32\mspaint.exe"" /p ""пИмяФайла""";
		ИначеЕсли Найти(НРег(Файл.Расширение), ".txt") > 0 Тогда
			пПрограмма = """C:\Windows\system32\notepad.exe"" /p ""пИмяФайла""";
		ИначеЕсли Найти(НРег(Файл.Расширение), ".pdf") > 0 Тогда	
			пПрограмма = """c:\Program Files (x86)\Foxit Software\Foxit Reader\Foxit Reader.exe"" /p ""пИмяФайла""";
		Иначе
			ОбщегоНазначения.СообщитьОбОшибке("Печать файлов данного формата (" + пИмяФайла + ") не поддерживается");
			Возврат;
		КонецЕсли;
	Иначе
		//Если Найти(НРег(Файл.Расширение), ".doc") > 0 Тогда
		//	пПрограмма = """rundll32 SHELL32.DLL,ShellExec_RunDLL winword ""пИмяФайла"" /mFilePrintDefault /mDocClose /mFileExit""";
		//ИначеЕсли Найти(НРег(Файл.Расширение), ".xls") > 0 Тогда
		//	пПрограмма = "WScript.exe ""D:\Izbenka\Базы 1С\ExcelPrint.vbs"" ""пИмяФайла""";
		////ИначеЕсли Найти(пИмяФайла, ".ppt") > 0 Тогда
		////	пПрограмма = """C:\Program Files (x86)\Microsoft Office\Office11\powerpnt.exe""";
		////ИначеЕсли Найти(пИмяФайла, "vsd") > 0 Тогда
		////	пПрограмма = """C:\Program Files (x86)\Microsoft Office\Office11\visio.exe""";
		//ИначеЕсли Найти(НРег(Файл.Расширение), ".bmp") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".dib") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".rle") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".jpg") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".jpeg") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".tif") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".gif") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".png") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".ico") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".wmf") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".emf") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".bmp") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".dib") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".rle") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".jpg") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".jpeg") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".tif") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".gif") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".png") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".ico") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".wmf") > 0
		//ИЛИ Найти(НРег(Файл.Расширение), ".emf") > 0 Тогда
		//	пПрограмма = """C:\Windows\system32\mspaint.exe"" ""пИмяФайла""";
		//ИначеЕсли Найти(НРег(Файл.Расширение), ".txt") > 0 Тогда
		//	пПрограмма = """C:\Windows\system32\notepad.exe"" ""пИмяФайла""";
		//ИначеЕсли Найти(НРег(Файл.Расширение), ".pdf") > 0 Тогда	
		//	пПрограмма = """C:\Program Files (x86)\Foxit Software\Foxit PhantomPDF\Foxit PhantomPDF.exe"" ""пИмяФайла""";
		//Иначе
		//	ОбщегоНазначения.СообщитьОбОшибке("Печать файлов данного формата (" + пИмяФайла + ") не поддерживается");
		//	Возврат;
		//КонецЕсли;	
	КонецЕсли;
	
	ИмяКаталога = "\\server00\Temp";//РаботаСФайлами.ПолучитьИмяКаталога(); 	
	
	
	ИмяВременногоФайла = РаботаСФайлами.ПолучитьИмяФайла(ИмяКаталога, Строка(Новый УникальныйИдентификатор) + Файл.Расширение);
	//ДвоичныеДанные = пХранилище.Получить();
	Если ТипЗнч(ДвоичныеДанныеИзХранилища) = Тип("ДвоичныеДанные") Тогда
		ДвоичныеДанныеИзХранилища.Записать(ИмяВременногоФайла);
		
		пПрограмма = СтрЗаменить(пПрограмма, "пИмяФайла", ИмяВременногоФайла);
		
		Если СразуПечать = Истина Тогда
			ЗапуститьПриложение(пПрограмма);
		Иначе
			ЗапуститьПриложение(ИмяВременногоФайла);
		КонецЕсли;	
	КонецЕсли;    	
		
КонецПроцедуры

 &НаСервере
Процедура ДобавитьФайлНаСервере(АдресХранилища, ИмяФайла, ИмяФайлаПолное) 
	
	ИмяКаталога = "\\server00\Temp";
	
	Расширешие = "";
	
	Если Найти(НРег(ИмяФайла), ".doc") > 0 Тогда
		Расширешие = ".doc"; 	
	ИначеЕсли Найти(НРег(ИмяФайла), ".docx") > 0 Тогда
		Расширешие = ".docx";	
	ИначеЕсли Найти(НРег(ИмяФайла), ".xls") > 0 Тогда  		
		Расширешие = ".xls";
	ИначеЕсли Найти(НРег(ИмяФайла), ".jpg") > 0 Тогда
		Расширешие = ".jpg";
	ИначеЕсли Найти(НРег(ИмяФайла), ".jpeg") > 0 Тогда
		Расширешие = ".jpeg";
	ИначеЕсли Найти(НРег(ИмяФайла), ".pdf") > 0 Тогда	
		Расширешие = ".pdf";
	КонецЕсли;
	
	ИмяВременногоФайла = РаботаСФайлами.ПолучитьИмяФайла(ИмяКаталога, Строка(Новый УникальныйИдентификатор) + Расширешие);
	//ДвоичныеДанные = пХранилище.Получить();  
	
	ДвоичныеДанныеИзХранилища = ПолучитьИзВременногоХранилища(АдресХранилища);
	
	Если ТипЗнч(ДвоичныеДанныеИзХранилища) = Тип("ДвоичныеДанные") Тогда
		//ДвоичныеДанныеИзХранилища.Записать(ИмяВременногоФайла);
		
		ЭтотОбъект = РеквизитФормыВЗначение("Объект");
		
		НовСтрока = ЭтотОбъект.ФайлыДоговоров.Добавить();
		НовСтрока.ХранилищеФайла 	= Новый ХранилищеЗначения(ДвоичныеДанныеИзХранилища);
		НовСтрока.ИмяФайла 			= ИмяФайла;
		НовСтрока.ИмяФайлаПолное 	= ИмяФайлаПолное;
		НовСтрока.Пользователь=ПараметрыСеанса.ТекущийПользователь;
		НовСтрока.ДатаДобавления=ТекущаяДата();

		Если РольДоступна("ПрикреплениеДополнительнойИнформацииКОбъектам") Тогда
			УстановитьПривилегированныйРежим(Истина);
		КонецЕсли;	
		ЭтотОбъект.Записать();
		ЗначениеВДанныеФормы(ЭтотОбъект, Объект);
		
		Элементы.ФайлыДоговоров.Обновить();
	КонецЕсли;  
	
КонецПроцедуры

 
&НаСервере
Функция ХранилищеЗначенияСервер(ИдентификаторСтроки)
	
	ЭтотОбъект = РеквизитФормыВЗначение("Объект");
	
	ТекущиеДанные = ЭтотОбъект.ФайлыДоговоров[ИдентификаторСтроки]; 
	
	Возврат ПоместитьВоВременноеХранилище(ТекущиеДанные.ХранилищеФайла.Получить(), Новый УникальныйИдентификатор);	
	
КонецФункции

&НаКлиенте
Процедура ПолученОригиналПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(Объект.МенеджерПоСоглашению) Тогда
		Объект.ПолученОригинал=Ложь;
		ОбщегоНазначения.СообщитьОбОшибке("Запрещено устанавливать признак получения оригинала, при не заполненном менеджере");
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ЭДОПриИзменении(Элемент)
	ВидимостьЭДО();
	Объект.ПоставщикЭДОКонтрагента = ?(Объект.ЭДО,ПолучитьЗначениеНаСервере(Объект.Владелец,"ПоставщикЭДОКонтрагента"),Неопределено);
	Объект.ПоставщикЭДООрганизации = ?(Объект.ЭДО,ПолучитьЗначениеНаСервере(Объект.Владелец,"ПоставщикЭДООрганизации"),Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ВидимостьЭДО()
	Элементы.ПоставщикЭДОКонтрагента.Доступность = Объект.ЭДО;
	Элементы.ПоставщикЭДООрганизации.Доступность = Объект.ЭДО;
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ВидимостьЭДО();
КонецПроцедуры


&НаКлиенте
Процедура НаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДопСоглашениеНаименование = "Дополнительное соглашение №"+Объект.Номер+" от "+?(ЗначениеЗаполнено(Объект.Дата),Формат(Объект.Дата,"ДФ=dd.MM.yyyy"),"");
	Если Объект.ЭДО Тогда
		Объект.Наименование = ДопСоглашениеНаименование+" о применении электронного документооборота";	
	Иначе 
		Объект.Наименование = ДопСоглашениеНаименование;	
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначениеНаСервере(Объект, Реквизит)
	Возврат Объект[Реквизит];	
КонецФункции

&НаКлиенте
Процедура НомерНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Объект.Договор) Тогда
		НомерДоговора = ПолучитьЗначениеНаСервере(Объект.Договор,"Номер");
		Если ЗначениеЗаполнено(НомерДоговора) Тогда
			КоличествоДопСоглашений = ПолучитьКоличествоДопСоглашений(Объект.Договор);
			Постфикс = строка(КоличествоДопСоглашений+1);
			Постфикс = ?(СтрДлина(Постфикс)=1,"/0"+Постфикс,"/"+Постфикс);
			Объект.Номер = НомерДоговора+Постфикс; 
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКоличествоДопСоглашений(Договор)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДополнительныеСоглашения.Ссылка) КАК Количество
	|ИЗ
	|	Справочник.ДополнительныеСоглашения КАК ДополнительныеСоглашения
	|ГДЕ
	|	ДополнительныеСоглашения.Договор = &Договор";
	Запрос.УстановитьПараметр("Договор",Договор);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		Возврат 0;
	Иначе 
		Выборка.Следующий();
		Возврат Выборка.Количество;
	КонецЕсли;
КонецФункции
