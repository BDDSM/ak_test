&НаКлиенте
Процедура ОтправитьПисьмом(ТабДок, Ссылка, МассивАдресов) Экспорт
	ДоговорПредставление = "Дополнительное соглашение ЭДО";//Ссылка.Наименование;	
	СтруктураНовогоПисьма = Новый Структура;
	СтруктураНовогоПисьма.Вставить("Основание", Ссылка);
	СтруктураНовогоПисьма.Вставить("Тема", ДоговорПредставление);
	СтруктураНовогоПисьма.Вставить("Тело", ДоговорПредставление);
	
	СписокКому = Новый СписокЗначений;
	Для Каждого АдресПолучателя Из МассивАдресов Цикл 
		СписокКому.Добавить(АдресПолучателя);
	КонецЦикла;
	
	СтруктураНовогоПисьма.Вставить("Кому", СписокКому);
	СтруктураНовогоПисьма.Вставить("Основание", Ссылка);	
	СтруктураВозврата = УправлениеЭлектроннойПочтой.НаписатьПисьмо(ТекущийПользователь(),СтруктураНовогоПисьма,,,, "Отправить",,, Ложь);
	
	Если НЕ СтруктураВозврата = Неопределено Тогда
		ТаблицаВложений = Новый ТаблицаЗначений;
		ТаблицаВложений.Колонки.Добавить("Файл", Новый ОписаниеТипов("Строка"));
		ТаблицаВложений.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("Строка"));
		ДоговорПредставление = "Дополнительное соглашение ЭДО";//Ссылка.Наименование; 
		мИмяФайла = КаталогВременныхФайлов() + ДоговорПредставление + ".PDF";
		Попытка
			ТабДок.Записать(мИмяФайла, ТипФайлаТабличногоДокумента.PDF); 
			ИмяФайла = мИмяФайла;
			ФайлНаДиске = Новый Файл(ИмяФайла);
			Если ФайлНаДиске.Существует() Тогда
				ВложениеОбъект = Справочники.ВложенияЭлектронныхПисем.СоздатьЭлемент();
				ВложениеОбъект.Объект                 = СтруктураВозврата.ПисьмоСсылка;
				ВложениеОбъект.ИмяФайла               = ДоговорПредставление + ".PDF";
				ВложениеОбъект.Наименование			  = Ссылка.Наименование;
				ВложениеОбъект.Хранилище              = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ИмяФайла));
				ВложениеОбъект.Записать();
			КонецЕсли;		
		Исключение
			
		КонецПопытки;
		Документы.ЭлектронноеПисьмо.ПолучитьФорму("Документ.ЭлектронноеПисьмо.Форма.ФормаДокумента",Новый Структура("Ключ",СтруктураВозврата.ПисьмоСсылка)).Открыть();	
	КонецЕсли;
    
	//УчетнаяЗапись = Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоКоду("000000001");
	//Профиль = УправлениеЭлектроннойПочтой.ПолучитьИнтернетПочтовыйПрофиль(УчетнаяЗапись);
	//Почта = Новый ИнтернетПочта;
	//
	//Сообщ = Новый СообщениеПользователю();
	//Попытка
	//	Почта.Подключиться(Профиль);
	//Исключение
	//	// Ошибка при подключении к серверу или при приеме сообщения обмена
	//	Сообщ.Текст = " - Ошибка при подключении или приеме" + ОписаниеОшибки();
	//	Сообщ.Сообщить();
	//	Возврат;
	//КонецПопытки;
	//
	//Письмо = Новый ИнтернетПочтовоеСообщение;
	//Письмо.Тема = ДоговорПредставление;
	//Письмо.Отправитель = ""+СокрЛП(УчетнаяЗапись)+"";;
	//Письмо.ИмяОтправителя = ""+СокрЛП(УчетнаяЗапись)+"";;
	//Для Каждого АдресПолучателя Из МассивАдресов Цикл 
	//	Получатель = Письмо.Получатели.Добавить();
	//	Получатель.Адрес = АдресПолучателя;
	//КонецЦикла;
	//ТекстПиьсма = Письмо.Тексты.Добавить();
	//ТекстПиьсма.ТипТекста = ТипТекстаПочтовогоСообщения.ПростойТекст;
	//ТекстПиьсма.Текст = ДоговорПредставление;
	//Письмо.Вложения.Добавить(мИмяФайла,ДоговорПредставление);
	//Почта.Послать(Письмо);
	//Почта.Отключиться();
	
КонецПроцедуры

&НаСервере
Функция ТекущийПользователь()
	Возврат глЗначениеПеременной("глТекущийПользователь");
КонецФункции

&НаСервере
Функция ПолучитьПочту(Ссылка)
	Запрос = новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Объект = &Объект
	|	И КонтактнаяИнформация.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыКонтрагентаДляОбменаДокументами)";
	Запрос.УстановитьПараметр("Объект",Ссылка.Договор.Владелец);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество() = 0 Тогда
		Возврат "";
	Иначе
		Выборка.Следующий();
		Возврат Выборка.Представление;
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция РазобратьСтрокуЭлАдресов(Знач СтрокаЭлАдресов)
	
	МассивВозврата = Новый Массив;
	Если ТипЗнч(СтрокаЭлАдресов) <> Тип("Строка") Тогда
		Возврат МассивВозврата;
	КонецЕсли;
	
	Пока СтрДлина(СтрокаЭлАдресов) > 0 Цикл
		ПозицияРазделителя = Найти(СтрокаЭлАдресов, ";");
		Если ПозицияРазделителя > 1 Тогда
			МассивВозврата.Добавить(Лев(СтрокаЭлАдресов,ПозицияРазделителя -1));
			СтрокаЭлАдресов = СокрЛП(Сред(СтрокаЭлАдресов, ПозицияРазделителя + 1));
		Иначе
			МассивВозврата.Добавить(СтрокаЭлАдресов);
			СтрокаЭлАдресов = "";
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивВозврата;
	
КонецФункции

&НаСервере
Функция Печать(ПараметрКоманды,СтруктураПараметров)
	
	Возврат Справочники.ДополнительныеСоглашения.ПечатьДопСоглашениеЭДО(ПараметрКоманды,СтруктураПараметров);
	
КонецФункции

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	Если ЗначениеЗаполнено(ПараметрКоманды.Договор) Тогда
		ЭлАдреса = ПолучитьПочту(ПараметрКоманды);
		Если ЗначениеЗаполнено(ЭлАдреса) Тогда
			МассивАдресов = РазобратьСтрокуЭлАдресов(ЭлАдреса);
			СтруктураПараметров = Новый Структура("ФИОДир, ФИОКлиента, ФИОДирПодпись, ФИОКлиентаПодпись","","","","");
			ПолучитьФИО(ПараметрКоманды, СтруктураПараметров);
			КомпонентаСклонения = ПолучитьКомпонентуСклонения();
			Если не КомпонентаСклонения = Неопределено Тогда
				Если ЗначениеЗаполнено(СтруктураПараметров.ФИОДир) Тогда
					СтруктураПараметров.ФИОДир = КомпонентаСклонения.Просклонять(строка(СтруктураПараметров.ФИОДир),2);
				КонецЕсли;
				
				Если ЗначениеЗаполнено(СтруктураПараметров.ФИОКлиента) Тогда
					СтруктураПараметров.ФИОКлиента = КомпонентаСклонения.Просклонять(СтруктураПараметров.ФИОКлиента,2);	
				КонецЕсли;
			КонецЕсли;
			ТабДок = Печать(ПараметрКоманды,СтруктураПараметров);
			Если ТабДок = Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			ОтправитьПисьмом(ТабДок,ПараметрКоманды,МассивАдресов);
		иначе
			Сообщить("У контрнагента нет контактной информации с типом ""Адрес электронной почты контрагента для обмена документами"". ");
		КонецЕсли;
	иначе
		Сообщить("Поле Договор не заполнено");
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКомпонентуСклонения()
	НайденноеЗначение = Неопределено;
	Попытка
		ПодключениеВыполнено = ПодключитьВнешнююКомпоненту("ОбщийМакет.КомпонентаNameDecl", "Decl", ТипВнешнейКомпоненты.Native);
		Если ПодключениеВыполнено Тогда
			НайденноеЗначение = Новый ("AddIn.Decl.CNameDecl"); 
		КонецЕсли; 
	Исключение
		Сообщить("Не удалось загрузить внешнюю компаненту по причине: "+ОписаниеОшибки());
	КонецПопытки;
	Возврат НайденноеЗначение;	
КонецФункции

&НаСервере
Процедура ПолучитьФИО(Ссылка,СтруктураПараметров)
	Руководители 		= ОбщегоНазначения.ОтветственныеЛица(Ссылка.Договор.Организация, Ссылка.Дата,);
    Контрагент=Ссылка.Договор.Владелец;
	Организация=Ссылка.Договор.Организация;
	
	СтруктураПараметров.ФИОДир = Руководители.Руководитель;
	СтруктураПараметров.ФИОДирПодпись = Руководители.Руководитель;
	СтруктураПараметров.ФИОКлиента = Контрагент.ГенеральныйДиректор;
    СтруктураПараметров.ФИОКлиентаПодпись = Контрагент.ГенеральныйДиректор;
КонецПроцедуры