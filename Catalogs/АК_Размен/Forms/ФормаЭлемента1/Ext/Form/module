
Процедура МагазинПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Магазин) Тогда		
		
		Если ЗначениеЗаполнено(Магазин.ИнкассируемыйБанк) и Магазин.ИнкассируемыйБанк.ИНН = "7750003904" И Магазин.ИнкассируемыйБанк.КПП = "772601001" Тогда
			НомерЯвочнойТочки = Формат(Магазин.НомерЯвочнойКартыДляРазмена,"ЧГ=");	
		Иначе
			НомерЯвочнойТочки = Формат(Магазин.НомерЯвочнойКартыДляИнкассации,"ЧГ=");	
		КонецЕсли;	
	
		//НомерЯвочнойТочки = Формат(Магазин.НомерЯвочнойКартыДляИнкассации,"ЧГ=");
		Наименование = Магазин.Наименование;
	
	КонецЕсли;
	
	ПоказатьНомерЯКАДМ();
	
КонецПроцедуры

Процедура ПриОткрытии()
	//СуммаЛимитаФорма = Константы.АК_СуммаЛимитаРазмена.Получить();
	
	ПоказатьНомерЯКАДМ();
	
	Если УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.УстановкаДопДняРазмена, Ложь) Тогда 
		ЭлементыФормы.ДопДеньРазмена.Доступность = Истина;
	КонецЕсли;

	ГрафикИнкассаций.Отбор.ТорговаяТочка.Значение 		= Магазин;
	ГрафикИнкассаций.Отбор.ТорговаяТочка.Использование 	= Истина;
	
КонецПроцедуры

Процедура РаскладкаСуммаРубПриИзменении(Элемент)
	
	ТекСтр = ЭтаФорма.ЭлементыФормы.Раскладка.ТекущиеДанные;

	//КоличествоВМешке = ТекСтр.ДостоинствоВалюты.КоличествоВМешке ;
	КоличествоВМешке = Справочники.АК_НоминалыДенежныхЕдиниц.КоличествоВМешке(Магазин,ТекСтр.ДостоинствоВалюты) ;

	Номинал = ТекСтр.ДостоинствоВалюты.Номинал ; 
	
	Если ЗначениеЗаполнено(ТекСтр.ДостоинствоВалюты) и ЗначениеЗаполнено(КоличествоВМешке) и ЗначениеЗаполнено(Номинал) и Номинал <> 0 и КоличествоВМешке<>0 Тогда
		Рез = ТекСтр.СуммаРуб / КоличествоВМешке / Номинал;
		ТекСтр.СуммаРуб = Цел( ТекСтр.СуммаРуб / КоличествоВМешке / номинал) * КоличествоВМешке *  Номинал;	
		ТекСтр.КоличествоМешков = Цел(Рез);	
		Если ТекСтр.КоличествоМешков = 0 Тогда
		   ТекСтр.СуммаРуб = 0;
		КонецЕсли;
	ИНАЧЕ
	ТекСтр.СуммаРуб = 0;
	ТекСтр.КоличествоМешков = 0;
	КонецЕсли;


КонецПроцедуры

Процедура РаскладкаКоличествоМешковПриИзменении(Элемент)
	
	ТекСтр = ЭтаФорма.ЭлементыФормы.Раскладка.ТекущиеДанные;

	//КоличествоВМешке = ТекСтр.ДостоинствоВалюты.КоличествоВМешке ;
	КоличествоВМешке = Справочники.АК_НоминалыДенежныхЕдиниц.КоличествоВМешке(Магазин,ТекСтр.ДостоинствоВалюты) ;

	Номинал = ТекСтр.ДостоинствоВалюты.Номинал ; 

	
	Если ЗначениеЗаполнено(ТекСтр.ДостоинствоВалюты) и ЗначениеЗаполнено(КоличествоВМешке) и ЗначениеЗаполнено(Номинал) и Номинал <> 0 и КоличествоВМешке<>0 Тогда
		ТекСтр.СуммаРуб = ТекСтр.КоличествоМешков * КоличествоВМешке *  Номинал;	
	Иначе
		ТекСтр.СуммаРуб = 0;
		ТекСтр.КоличествоМешков = 0;
	КонецЕсли;

КонецПроцедуры

Процедура РаскладкаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	СуммаРазмена = Раскладка.Итог("СуммаРуб");
КонецПроцедуры

//+++АК MIND 2017.12.26 
Процедура ПоказатьНомерЯКАДМ()
	//+++АК POZM 2018.08.01 ИП-00019296
	РеквизитыМагазина = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Магазин,"НомерПТК,ИнкассируемыйБанк,КонтрагентИнкассатор,НомерЯвочнойКартыДляРазмена");
	МагазинНомерПТК = РеквизитыМагазина.НомерЯвочнойКартыДляРазмена;
	МагазинИнкассируемыйБанк = РеквизитыМагазина.ИнкассируемыйБанк;
	
	Если РеквизитыМагазина.ИнкассируемыйБанк = РеквизитыМагазина.КонтрагентИнкассатор Тогда
		Если СокрЛП(МагазинНомерПТК) = "" Тогда
			МагазинНомерПТК = РеквизитыМагазина.НомерПТК;
		КонецЕсли;
	КонецЕсли;	
	
	ЭлементыФормы.НадписьНомерЯКАДМ.Заголовок = "Номер явочной карты для размена: " + МагазинНомерПТК;
	ЭлементыФормы.НадписьКонтрагент.Заголовок = "Контрагент: " + МагазинИнкассируемыйБанк;
	//---АК POZM 
КонецПроцедуры	

Процедура ПриЗаписи(Отказ)
	
	//+++АК LAGP 2018.09.25 ИП-00019420 Доработка: Отчет по сдаче выручки в магазинах. Возможность заполнения графика инкассаций из справочника Размен
	Попытка      
		ГрафикИнкассаций.Записать();
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, ("Элемент """ + СокрЛП(Ссылка) + """ не записан. Не записан график инкассаций."));
		Отказ = Истина;
		Возврат;
	КонецПопытки;
	//---АК LAGP
	
КонецПроцедуры

