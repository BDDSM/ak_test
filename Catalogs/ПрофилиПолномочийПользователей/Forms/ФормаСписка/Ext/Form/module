
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ДЛЯ ПОДДЕРЖКИ МЕХАНИЗМОВ СВОЙСТВ И КАТЕГОРИЙ

Процедура ДействияФормыДействиеСвойства(Кнопка)
	
	ТекущаяСтрока = ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма = Обработки.ЗначенияСвойствОбъекта.ПолучитьФорму("ЗначенияСвойствОбъекта", ЭтаФорма, );
	Форма.ОбъектОтбораЗначений   = ТекущаяСтрока;
	Форма.ОбъектОтбораНазначений = ТекущаяСтрока;
	Форма.ПрочитатьЗаполнитьСвойстваИЗначения();
	Форма.Открыть();
	
КонецПроцедуры

Процедура ДействияФормыДействиеКатегории(Кнопка)
	
	ТекущаяСтрока = ЭлементыФормы.СправочникСписок.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма = Обработки.КатегорииОбъекта.ПолучитьФорму("КатегорииОбъекта", ЭтаФорма, );
	Форма.ОбъектОтбораКатегорий = ТекущаяСтрока;
	Форма.ПрочитатьЗаполнитьКатегорииОбъекта();
	Форма.Открыть();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ СПИСКА ПРОФИЛЕЙ

// Процедура оповещает форму пользователей ФормаСОтбором
// чтобы показать пользователей текущего профиля
//
Процедура ОповеститьФормуПользователейСОтборомПоПрофилю()

	ТекущиеДанные = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено 
		И НЕ ТекущиеДанные.ЭтоГруппа Тогда
		
		ЗначениеОтбора = ТекущиеДанные.Ссылка;
	Иначе
		ЗначениеОтбора = Неопределено;
	КонецЕсли;
	
	Оповестить("ПоказатьПользователейПоОтбору", ЗначениеОтбора, ЭтаФорма);	
	
КонецПроцедуры // ОповеститьФормуПользователейСОтборомПоПрофилю

// Процедура выполняет действия связанные с активизацией строки списка профилей
//
Процедура ВыполнитьПриАктивизацииСтрокиСписка()
	
	ОповеститьФормуПользователейСОтборомПоПрофилю();
	
КонецПроцедуры // ВыполнитьПриАктивизацииСтрокиДереваПрофилей

// Обработчик события нажатия на кнопку ДействиеНазначитьПрофильПользователям командной панели
// 
Процедура ДействияФормыДействиеНазначитьПрофильПользователям(Кнопка)
	
	ЗначенияСвойств = Неопределено;
	
	ТекущиеДанные = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено 
		И НЕ ТекущиеДанные.ЭтоГруппа Тогда
		
		ЗначенияСвойств = Новый Структура("ПрофильПолномочийПользователя", ТекущиеДанные.Ссылка);
	КонецЕсли;
	
	УправлениеПользователями.ОткрытьГрупповуюОбработкуПользователей(ЗначенияСвойств);
	
КонецПроцедуры // ОсновныеДействияФормыДействиеНазначитьПрофильПользователям

// Обработчик события нажатия на кнопку ДействиеПоказатьПользователейСТекущимПрофилем командной панели
// 
Процедура ДействияФормыДействиеПоказатьПользователейСТекущимПрофилем(Кнопка)
	
	ТекущиеДанные = ЭлементыФормы.СправочникСписок.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено 
		ИЛИ ТекущиеДанные.ЭтоГруппа Тогда
		
		Возврат;
	КонецЕсли;
	
	ФормаСОтбором = Справочники.Пользователи.ПолучитьФорму("ФормаСОтбором");
	ФормаСОтбором.НачальноеЗначениеВыбора = ТекущиеДанные.Ссылка;
	ФормаСОтбором.Открыть();
	
КонецПроцедуры // ОсновныеДействияФормыДействиеПоказатьПользователейСТекущимПрофилем

// Обработчик события нажатия на кнопку ДействиеОбменВыгрузитьПрофили командной панели
// 
Процедура ДействияФормыДействиеОбменВыгрузитьПрофили(Кнопка)
	
	ПравилаОбмена = Справочники.ПрофилиПолномочийПользователей.ПолучитьМакет("ПравилаОбменаПрофили");
	ПроцедурыОбменаДаннымиКлиент.ОткрытьВыгрузкуСпискаОбъектов(ПравилаОбмена, "СправочникСсылка.ПрофилиПолномочийПользователей");
	
КонецПроцедуры // ОсновныеДействияФормыДействиеОбменВыгрузитьПрофили

// Обработчик события нажатия на кнопку ДействиеОбменЗагрузитьПрофили командной панели
// 
Процедура ДействияФормыДействиеОбменЗагрузитьПрофили(Кнопка)
	
	ДиалогВыбораФайлаОбмена = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайлаОбмена.Фильтр = "Файл данных (*.xml)|*.xml";
	ДиалогВыбораФайлаОбмена.МножественныйВыбор = Ложь;
	ДиалогВыбораФайлаОбмена.Заголовок = "Выберите файл";

	Если НЕ ДиалогВыбораФайлаОбмена.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФайлаОбмена = ДиалогВыбораФайлаОбмена.ПолноеИмяФайла;
	
	УниверсальныйОбменДаннымиXML = Обработки.УниверсальныйОбменДаннымиXML.Создать();
	
	УниверсальныйОбменДаннымиXML.РежимОбмена = "Загрузка";
	УниверсальныйОбменДаннымиXML.ИмяФайлаОбмена = ИмяФайлаОбмена;
	
	УниверсальныйОбменДаннымиXML.ВыполнитьЗагрузку();
	
КонецПроцедуры // ОсновныеДействияФормыДействиеОбменЗагрузитьПрофили

// Обработчик события нажатия на кнопку "Создать профили" командной панели
// 
Процедура ДействияФормыДействиеСоздатьПрофили(Кнопка)
	
	Справочники.ПрофилиПолномочийПользователей.ПолучитьФорму("СозданиеПрофилей").Открыть();
	
КонецПроцедуры

// Обработчик события нажатия на кнопку "Перенести настройки доп. прав" командной панели
// 
Процедура ДействияФормыДействиеПеренестиНастройкиДопПрав(Кнопка)
	
	Справочники.ПрофилиПолномочийПользователей.ПолучитьФорму("ПереносНастроекДополнительныхПрав").Открыть();
	
КонецПроцедуры

Процедура СправочникСписокПриАктивизацииСтроки(Элемент)
	
	ВыполнитьПриАктивизацииСтрокиСписка();
	
КонецПроцедуры

Процедура ДействияФормыДействиеОтчетСписокПрофилей(Кнопка)
	
	НастройкаПравДоступа.СформироватьВариантОтчетаПоСистемеПрав("СписокПрофилей");
	
КонецПроцедуры

Процедура ДействияФормыДействиеОтчетНастройкиДополнительныхПрав(Кнопка)
	
	НастройкаПравДоступа.СформироватьВариантОтчетаПоСистемеПрав("НастройкиДополнительныхПрав");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	ЕстьПравоАдминистрированияПользователей = УправлениеДопПравамиПользователей.ЕстьПравоАдминистрированияПользователей();
	
	Если НЕ ЕстьПравоАдминистрированияПользователей Тогда 

		// удаляем подменю "Администрирование"
		КнопкиКоманднойПанели = ЭлементыФормы.ДействияФормы.Кнопки;
		КнопкиКоманднойПанели.Удалить(КнопкиКоманднойПанели.ПодменюАдминистрированиеПользователей);
		КнопкиКоманднойПанели.Удалить(КнопкиКоманднойПанели.РазделительАдминистрирование);
		
	КонецЕсли;
	
КонецПроцедуры




