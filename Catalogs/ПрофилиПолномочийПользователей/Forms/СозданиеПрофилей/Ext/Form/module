Перем РолиКонфигурации;

Перем ТипСтрокаПрофиль;
Перем ТипСтрокаРоль;
Перем ТипСтрокаПользователь;


////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ

Процедура ЗаполнитьРолиКонфигурации()
	
	РолиКонфигурации = Новый СписокЗначений;
	
	Для каждого ЭлРоль Из Метаданные.Роли Цикл
		РолиКонфигурации.Добавить(ЭлРоль.Имя, ЭлРоль.Синоним);
	КонецЦикла; 
	
КонецПроцедуры // ЗаполнитьРолиКонфигурации

Функция ПолучитьИмяПрофиля(ПорядковыйНомер)

	Запрос = Новый Запрос;
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ПрофилиПолномочийПользователей.Наименование
	               |ИЗ
	               |	Справочник.ПрофилиПолномочийПользователей КАК ПрофилиПолномочийПользователей
	               |ГДЕ
	               |	ПрофилиПолномочийПользователей.Наименование В(&Наименование)";
	 
	Запрос.Текст = ТекстЗапроса;
	
	Пока ИСТИНА Цикл
		
		НаименованиеПрофиля = Новый Массив;
		Для Сч = ПорядковыйНомер По ПорядковыйНомер + 20 Цикл
			НаименованиеПрофиля.Добавить("Профиль" + Сч);
		КонецЦикла;
		
		Запрос.УстановитьПараметр("Наименование", НаименованиеПрофиля);
		
		Результат = Запрос.Выполнить().Выгрузить();
		
		Для каждого ЭлКоллекции Из НаименованиеПрофиля Цикл
			Если Результат.Найти(ЭлКоллекции, "Наименование") = Неопределено Тогда
				Возврат ЭлКоллекции
			КонецЕсли;
			Сч = Сч + 1;
		КонецЦикла; 
		
		Сч = Сч + 1;
	КонецЦикла;

КонецФункции // ПолучитьИмяПрофиля
 
Процедура СоздатьПрофили()

	ФормаВыбора = Справочники.ПрофилиПолномочийПользователей.ПолучитьФормуВыбораГруппы();
	
	ФормаВыбора.Заголовок = "Выберите группу, в которой будут созданы профили";
	
	ГруппаПрофилей = ФормаВыбора.ОткрытьМодально();
	Если ГруппаПрофилей = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Сч = 1;
	Для каждого СтрокаПрофиль Из СписокПрофилей.Строки Цикл
		Если НЕ СтрокаПрофиль.Пометка 
			ИЛИ НЕ СтрокаПрофиль.Профиль.Пустая() Тогда
			
			Продолжить;
		КонецЕсли;
		
		ПрофильОбъект = Справочники.ПрофилиПолномочийПользователей.СоздатьЭлемент();		
		ПрофильОбъект.Родитель = ГруппаПрофилей;
		ПрофильОбъект.Наименование = ПолучитьИмяПрофиля(Сч);

		// Заполним роли
		СтрокаРоли = СтрокаПрофиль.Строки[0]; // Роли
		
		Для каждого СтрокаРоль Из СтрокаРоли.Строки Цикл
			Если СтрокаРоль.РолиИПользователи = "Пользователь" Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаСоставРолей = ПрофильОбъект.СоставРолей.Добавить();
			СтрокаСоставРолей.ИмяРоли = СтрокаРоль.РолиИПользователи;
			
			РольКонфигурации = РолиКонфигурации.НайтиПоЗначению(СтрокаСоставРолей.ИмяРоли);
			СтрокаСоставРолей.ПредставлениеРоли = РольКонфигурации.Представление;
		КонецЦикла; 
		
		ПрофильОбъект.Записать();
		
		СтрокаПрофиль.Профиль = ПрофильОбъект.Ссылка;
		СтрокаПрофиль.СписокВыбора.Добавить(ПрофильОбъект.Ссылка);
		
		ОбщегоНазначения.Сообщение("Создан профиль: " + ПрофильОбъект.Наименование, Перечисления.ВидыСообщений.Информация, "Создание профилей", ПрофильОбъект.Ссылка);
		
		Сч = Сч + 1;
	КонецЦикла;
	
КонецПроцедуры // СоздатьПрофили

Процедура ЗаполнитьСсылкуНаПрофиль(СтрокаПрофиль, СтрокаРоли)

	Если СтрокаРоли.Строки.Количество() = 0  Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	СписокРолей = Новый Массив;			   
	Для каждого ЭлКоллекции Из СтрокаРоли.Строки Цикл
		Если ЭлКоллекции.РолиИПользователи = "Пользователь" Тогда
			Продолжить;
		КонецЕсли;
		СписокРолей.Добавить(ЭлКоллекции.РолиИПользователи);
	КонецЦикла; 			 
	
	Если СписокРолей.Количество() = 0 Тогда
		ТекстЗапроса = "ВЫБРАТЬ
		               |	ПрофилиПолномочий.Ссылка КАК Профиль,
		               |	ПрофилиПолномочий.Представление КАК ПрофильПредставление
		               |ИЗ
		               |	Справочник.ПрофилиПолномочийПользователей КАК ПрофилиПолномочий
		               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		               |			КОЛИЧЕСТВО(ПрофилиПолномочийСоставРолей.ИмяРоли) КАК КоличествоРолей,
		               |			ПрофилиПолномочийСоставРолей.Ссылка КАК Профиль
		               |		ИЗ
		               |			Справочник.ПрофилиПолномочийПользователей.СоставРолей КАК ПрофилиПолномочийСоставРолей
		               |		
		               |		СГРУППИРОВАТЬ ПО
		               |			ПрофилиПолномочийСоставРолей.Ссылка) КАК ВложенныйЗапрос
		               |		ПО ПрофилиПолномочий.Ссылка = ВложенныйЗапрос.Профиль
		               |ГДЕ
		               |	(НЕ ПрофилиПолномочий.ЭтоГруппа)
		               |	И ВложенныйЗапрос.КоличествоРолей ЕСТЬ NULL ";
	Иначе
		ТекстЗапроса = "ВЫБРАТЬ
		               |	ПрофилиПолномочий.Ссылка КАК Профиль,
		               |	ПрофилиПолномочий.Представление КАК ПрофильПредставление
		               |ИЗ
		               |	Справочник.ПрофилиПолномочийПользователей КАК ПрофилиПолномочий
		               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		               |			КОЛИЧЕСТВО(ПрофилиПолномочийСоставРолей.ИмяРоли) КАК КоличествоРолей,
		               |			ПрофилиПолномочийСоставРолей.Ссылка КАК Профиль
		               |		ИЗ
		               |			Справочник.ПрофилиПолномочийПользователей.СоставРолей КАК ПрофилиПолномочийСоставРолей
		               |		
		               |		СГРУППИРОВАТЬ ПО
		               |			ПрофилиПолномочийСоставРолей.Ссылка) КАК ВложенныйЗапрос
		               |		ПО ПрофилиПолномочий.Ссылка = ВложенныйЗапрос.Профиль
		               |ГДЕ
		               |	(НЕ 1 В
		               |				(ВЫБРАТЬ ПЕРВЫЕ 1
		               |					1
		               |				ИЗ
		               |					Справочник.ПрофилиПолномочийПользователей.СоставРолей КАК СоставРолей
		               |				ГДЕ
		               |					СоставРолей.Ссылка = ПрофилиПолномочий.Ссылка
		               |					И (НЕ СоставРолей.ИмяРоли В (&СписокРолей))))
		               |	И (НЕ ПрофилиПолномочий.ЭтоГруппа)
		               |	И ВложенныйЗапрос.КоличествоРолей = &КоличествоРолей";
		Запрос.УстановитьПараметр("СписокРолей", СписокРолей);
		Запрос.УстановитьПараметр("КоличествоРолей", СписокРолей.Количество());
	КонецЕсли; 
	
	Запрос.Текст = ТекстЗапроса;
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтрокаПрофиль.СписокВыбора.Добавить(Выборка.Профиль, Выборка.ПрофильПредставление);
	КонецЦикла;
	
	Если СтрокаПрофиль.СписокВыбора.Количество() > 0 Тогда
		СтрокаПрофиль.Профиль = СтрокаПрофиль.СписокВыбора[0].Значение;
	КонецЕсли; 
	
КонецПроцедуры // ЗаполнитьСсылкуНаПрофиль

Процедура НазначитьПрофили()
	
	Для каждого СтрокаПрофиль Из СписокПрофилей.Строки Цикл
		Если НЕ СтрокаПрофиль.Пометка 
			ИЛИ СтрокаПрофиль.Профиль.Пустая() Тогда
			
			Продолжить;
		КонецЕсли;
		
		СтрокаПользователи = СтрокаПрофиль.Строки[1]; // Пользователи
		
		Для каждого СтрокаПользователь Из СтрокаПользователи.Строки Цикл
			ПользовательОбъект = СтрокаПользователь.РолиИПользователи.ПолучитьОбъект();
			Если НЕ ПользовательОбъект.ПрофильПолномочийПользователя.Пустая() Тогда
				Продолжить;
			КонецЕсли;
			ПользовательОбъект.ПрофильПолномочийПользователя = СтрокаПрофиль.Профиль;
			ПользовательОбъект.Записать();
		КонецЦикла; 
	КонецЦикла;
	
КонецПроцедуры // НазначитьПрофили
 
Функция ЗаполнитьПользователей(СоставРолейПользователей)
	
	СписокПользователей = СоставРолейПользователей.ВыгрузитьКолонку("ИмяПользователя");
	
    Запрос = Новый Запрос;
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	Пользователи.Ссылка,
	               |	Пользователи.Код
	               |ИЗ
	               |	Справочник.Пользователи КАК Пользователи
	               |ГДЕ
	               |	(НЕ Пользователи.ЭтоГруппа)
	               |	И Пользователи.Код В(&СписокПользователей)
	               |	И Пользователи.ПрофильПолномочийПользователя = ЗНАЧЕНИЕ(Справочник.ПрофилиПолномочийПользователей.ПустаяСсылка)";
	 
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("СписокПользователей", СписокПользователей);
	Результат = Запрос.Выполнить().Выгрузить();
	Результат.Колонки.Добавить("ИмяПользователя", Новый ОписаниеТипов("Строка"));
	Для каждого ЭлКоллекции Из Результат Цикл
		ЭлКоллекции.ИмяПользователя = СокрЛП(ЭлКоллекции.Код);
	КонецЦикла; 
	
	КолвоЭлементовКоллекции = СоставРолейПользователей.Количество();
	Для ОбратныйИндекс = 1 По КолвоЭлементовКоллекции Цикл
		ЭлементКоллекции = СоставРолейПользователей[КолвоЭлементовКоллекции - ОбратныйИндекс];
		
		СтрокаРезультата = Результат.Найти(ЭлементКоллекции.ИмяПользователя, "ИмяПользователя");
		Если СтрокаРезультата = Неопределено Тогда
			СоставРолейПользователей.Удалить(ЭлементКоллекции);
		Иначе
			ЭлементКоллекции.ПользовательСсылка = СтрокаРезультата.Ссылка;
		КонецЕсли;		
	КонецЦикла;	
	
КонецФункции // ЗаполнитьПользователей
 
Процедура ЗаполнитьСписокПрофилей()
	
	СписокПрофилей.Строки.Очистить();
	
	СоставРолейПользователей = Новый ТаблицаЗначений;
	СоставРолейПользователей.Колонки.Добавить("ИмяПользователя", Новый ОписаниеТипов("Строка"));
	СоставРолейПользователей.Колонки.Добавить("ПользовательСсылка", Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	
	КолонкиСвертки = "";
	Для каждого ЭлРоль Из РолиКонфигурации Цикл
		СоставРолейПользователей.Колонки.Добавить(ЭлРоль.Значение, Новый ОписаниеТипов("Булево"));
		КолонкиСвертки = КолонкиСвертки + ?(КолонкиСвертки = "", "", ",") + ЭлРоль.Значение;
	КонецЦикла; 
	
	МассивПользователей = ПользователиИнформационнойБазы.ПолучитьПользователей();
		
	Для каждого ЭлПользователь Из МассивПользователей Цикл
		Если НЕ ЭлПользователь.АутентификацияОС И НЕ ЭлПользователь.АутентификацияСтандартная Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = СоставРолейПользователей.Добавить();
		НоваяСтрока.ИмяПользователя = ЭлПользователь.Имя;
		Для каждого ЭлРольПользователя Из ЭлПользователь.Роли Цикл
			НоваяСтрока[ЭлРольПользователя.Имя] = Истина;
		КонецЦикла;	
	КонецЦикла; 
	ЗаполнитьПользователей(СоставРолейПользователей);
	
	СоставРолейПользователейКопия = СоставРолейПользователей.Скопировать();
	СоставРолейПользователейКопия.Свернуть(КолонкиСвертки);
	
	Для каждого ЭлРоль Из СоставРолейПользователейКопия Цикл
		
		СтрокаПрофиль = СписокПрофилей.Строки.Добавить();
		СтрокаПрофиль.ТипСтроки = ТипСтрокаПрофиль;
		СтрокаПрофиль.СписокВыбора = Новый СписокЗначений;
		
		СтрокаРоли = СтрокаПрофиль.Строки.Добавить();
		СтрокаРоли.РолиИПользователи = "Роли";
		
		Для каждого ЭлКолонка Из СоставРолейПользователейКопия.Колонки Цикл
			Если ЭлРоль[ЭлКолонка.Имя] Тогда
				СтрокаРоль = СтрокаРоли.Строки.Добавить();
				СтрокаРоль.РолиИПользователи = ЭлКолонка.Имя;
				СтрокаРоль.ТипСтроки = ТипСтрокаРоль;
			КонецЕсли; 
		КонецЦикла;
		
		СтруктураПоиска = Новый Структура(КолонкиСвертки);
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, ЭлРоль);
		РасшифровкаПользователи = СоставРолейПользователей.НайтиСтроки(СтруктураПоиска);
		
		СтрокаПользователи = СтрокаПрофиль.Строки.Добавить();
		СтрокаПользователи.РолиИПользователи = "Пользователи";
		Для каждого ЭлПользователь Из РасшифровкаПользователи Цикл
			СтрокаПользователь = СтрокаПользователи.Строки.Добавить();
			СтрокаПользователь.РолиИПользователи = ЭлПользователь.ПользовательСсылка;
			СтрокаПользователь.ТипСтроки = ТипСтрокаПользователь;
		КонецЦикла; 
		
		ЗаполнитьСсылкуНаПрофиль(СтрокаПрофиль, СтрокаРоли);
	КонецЦикла;

КонецПроцедуры // ЗаполнитьСписокПрофилей

Процедура УстановитьФлажки(Пометка)

	Для каждого СтрокаПрофиль Из СписокПрофилей.Строки Цикл
		СтрокаПрофиль.Пометка = Пометка;	
	КонецЦикла; 
	
КонецПроцедуры // УстановитьФлажки
 

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНДНЫХ ПАНЕЛЕЙ

Процедура ОсновныеДействияФормыСоздатьПрофили(Кнопка)
	
	ТекстВопроса = "Начать создание профилей?
	|Профили будут созданы для выбранных наборов ролей.";
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет, "Создание профилей");
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		 Возврат;
	КонецЕсли; 
	 
	СоздатьПрофили();
	
КонецПроцедуры

Процедура ОсновныеДействияФормыДействиеНазначитьПрофили(Кнопка)
	
	ТекстВопроса = "Назначить профили пользователям?
	|Пользователям будут назначены выбранные профили.";
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет, "Назначение профилей");
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		 Возврат;
	КонецЕсли; 
	
	НазначитьПрофили();
	
КонецПроцедуры

Процедура ДействияФормыДействиеЗаполнить(Кнопка)
	
	ЗаполнитьСписокПрофилей();	
	
КонецПроцедуры

Процедура ДействияФормыДействиеПометитьВсе(Кнопка)
	
	УстановитьФлажки(Истина);
	
КонецПроцедуры

Процедура ДействияФормыДействиеСнятьФлажки(Кнопка)
	
	УстановитьФлажки(Ложь);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТП СписокПрофилей

Процедура СписокПрофилейПредставлениеОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Элемент.Значение = ОбщегоНазначения.ПустоеЗначениеТипа(ТипЗнч(Элемент.Значение));
	
КонецПроцедуры

Процедура СписокПрофилейПередНачаломИзменения(Элемент, Отказ)
	
	ТекущиеДанные = ЭлементыФормы.СписокПрофилей.ТекущиеДанные;
	Если ТекущиеДанные.ТипСтроки <> ТипСтрокаПрофиль Тогда
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура СписокПрофилейПредставлениеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = ЭлементыФормы.СписокПрофилей.ТекущиеДанные;
	Если ТекущиеДанные.ТипСтроки = ТипСтрокаПрофиль Тогда
		Элемент.СписокВыбора = ТекущиеДанные.СписокВыбора;
	Иначе
		СтандартнаяОбработка = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

Процедура СписокПрофилейПриПолученииДанных(Элемент, ОформленияСтрок)
	
	Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		Если ОформлениеСтроки.ДанныеСтроки.ТипСтроки = ТипСтрокаПрофиль Тогда
			ОформлениеСтроки.Ячейки.Профиль.УстановитьКартинку(БиблиотекаКартинок.ПрофильПолномочийПользователя);
		Иначе
			ОформлениеСтроки.Ячейки.Пометка.ОтображатьФлажок = Ложь;
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПриОткрытии()
	
	ЗаполнитьРолиКонфигурации();
	ЗаполнитьСписокПрофилей();
	
КонецПроцедуры

ТипСтрокаПрофиль      = 1;
ТипСтрокаРоль         = 2;
ТипСтрокаПользователь = 3;

СписокПрофилей.Колонки.Добавить("СписокВыбора");
СписокПрофилей.Колонки.Добавить("ТипСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(2,0)));
