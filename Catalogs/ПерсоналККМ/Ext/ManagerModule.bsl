
Функция СгенеритьПарольДляПерсоналаККМ(Код) Экспорт
	
	ШК12 =  "3010372" + Прав(Код, 5);
	ШК = ШК12 + ВнешниеДанные.КонтрольныйСимволEAN(ШК12, 13);
	
	Возврат ШК;
		
КонецФункции

Процедура СинхронизироватьДанныеПерсонала() Экспорт
	
	ADOСоединение = ВнешниеДанные.ПолучитьADOСоединение();
	
	//	
	ТекстЗапросаSQL = "
	|Select
	|	CodeFL as _Code,
	|   FIO as _Description,
	|   barcode,
	|   IsOutSource
	|From [SMS_REPL].[dbo].[Cashier_view]";
		
	rs = ADOСоединение.Execute(ТекстЗапросаSQL);
	rs.MoveFirst();
	
	Результат = ВнешниеДанные.ПреобразоватьРезультатВТаблицуЗначений(rs);
	
	СпрПерсоналККМ = Справочники.ПерсоналККМ;
	
	Для Каждого Выборка ИЗ Результат Цикл
		
		КодСправочника = Прав("0000000000" + Формат(Выборка._Code, "ЧГ=0"), 10);
		ПерсоналККМСсылка	= СпрПерсоналККМ.НайтиПоКоду(КодСправочника);
		Пароль 				= СпрПерсоналККМ.СгенеритьПарольДляПерсоналаККМ(КодСправочника); 
		
		Если ПерсоналККМСсылка = СпрПерсоналККМ.ПустаяСсылка() Тогда
			ПерсоналККМОбъект	= СпрПерсоналККМ.СоздатьЭлемент();
			ПерсоналККМОбъект.УстановитьСсылкуНового(ПерсоналККМСсылка);
			
			ПерсоналККМОбъект.Код				= КодСправочника;
			ПерсоналККМОбъект.Наименование 		= Выборка._Description;
			//ПерсоналККМОбъект.ТТ				= Выборка.CodeTT;
			ПерсоналККМОбъект.Пароль			= Пароль;
			Если Выборка.IsOutSource = 1 Тогда      
				ПерсоналККМОбъект.РольНаКассе 	= 4;
			КонецЕсли;	
			Модифицирован = Истина;
		Иначе
			Модифицирован = Ложь;
			ПерсоналККМОбъект = ПерсоналККМСсылка.ПолучитьОбъект();
			ОбменСAccess.ПроверкаМодифицированности(ПерсоналККМОбъект, "Наименование"	, Выборка._Description	, Модифицирован);
			ОбменСAccess.ПроверкаМодифицированности(ПерсоналККМОбъект, "Код"			, КодСправочника		, Модифицирован);
			//ПроверкаМодифицированности(ПерсоналККМОбъект,"ТТ"				,Выборка.CodeTT	,Модифицирован);
			ОбменСAccess.ПроверкаМодифицированности(ПерсоналККМОбъект, "Пароль"			, Пароль				, Модифицирован);
			//ПроверкаМодифицированности(ПерсоналККМОбъект,"ПометкаУдаления"	,ПометкаУдаления	,Модифицирован);
			Если НЕ ЗначениеЗаполнено(ПерсоналККМОбъект.РольНаКассе)
					И Выборка.IsOutSource Тогда
				ОбменСAccess.ПроверкаМодифицированности(ПерсоналККМОбъект, "РольНаКассе", 4						, Модифицирован);
			КонецЕсли;	
		КонецЕсли;
		
		Если Модифицирован Тогда
			ПерсоналККМОбъект.Записать();
		КонецЕсли
		
	КонецЦикла;	
	
	//
	ADOСоединение.Close();	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//ФУНКЦИИ И ПРОЦЕДУРЫ МОДУЛЯ МЕНЕДЖЕРА

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка) //+++АК mika 2018.02.07 ИП-00017859
	
	Если Параметры.Свойство("ДополнительныеПараметры") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ДанныеВыбора = Новый СписокЗначений;
		
		Если НЕ ЗначениеЗаполнено(Параметры.ТекстПоиска) Тогда
			Возврат;
		КонецЕсли;
		
		Если Параметры.ДополнительныеПараметры = "ПодборПоГруппамСотрудников" Тогда

			Запрос = Новый Запрос;
			
			Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 50 РАЗРЕШЕННЫЕ
			|	ВЫБОР
			|		КОГДА СотрудникиАутсорсинг.Ссылка ЕСТЬ NULL
			|			ТОГДА ПерсоналККМ.Наименование + "" "" + ПерсоналККМ.Код
			|		ИНАЧЕ ПерсоналККМ.Наименование + "" "" + ПерсоналККМ.Код + "" ("" + СотрудникиАутсорсинг.ГруппаСотрудников.Наименование + "")""
			|	КОНЕЦ КАК Представление,
			|	ПерсоналККМ.Ссылка
			|ИЗ
			|	Справочник.ПерсоналККМ КАК ПерсоналККМ
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиАутсорсинг КАК СотрудникиАутсорсинг
			|		ПО ПерсоналККМ.Код = СотрудникиАутсорсинг.КодПерсоналККМ
			|ГДЕ
			|	ПерсоналККМ.Наименование ПОДОБНО &Наименование
			|
			|УПОРЯДОЧИТЬ ПО
			|	Представление";
			
			Запрос.УстановитьПараметр("Наименование", "%" + Параметры.ТекстПоиска + "%");
			
			Результат = Запрос.Выполнить();
			
			Если НЕ Результат.Пустой() Тогда
				
				Выборка = Результат.Выбрать();
				
				Пока Выборка.Следующий() Цикл
					ДанныеВыбора.Добавить(Выборка.Ссылка, Выборка.Представление);
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры


