
&НаКлиенте
Процедура ИзменитьФильтр(Имя, ВидСравнения, Значение)
	
	//Алгоритм позволяет фильтрам действовать
	//как независимо, так и совместно

	ЭлементОтбора = Неопределено;
	
	//Пытаемся найти элемент отбора
	Для Каждого Элемент Из Список.Отбор.Элементы Цикл
		Если Строка(Элемент.ЛевоеЗначение) = Имя Тогда
			ЭлементОтбора = Элемент;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	//Удаляем элемент, если такой есть
	Если ЭлементОтбора <> Неопределено Тогда
		Список.Отбор.Элементы.Удалить(ЭлементОтбора);
	КонецЕсли;
	
	//Создаем
	ЭлементОтбора					= Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных(Имя); 
	ЭлементОтбора.ВидСравнения		= ВидСравнения; 
	ЭлементОтбора.РежимОтображения	= РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный; 
		
	ЭлементОтбора.ПравоеЗначение	= ?(ТипЗнч(Значение) = Тип("Строка"), СокрЛП(Значение), Значение);
	ЭлементОтбора.Использование		= ЗначениеЗаполнено(ЭлементОтбора.ПравоеЗначение);
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НоменклатураПриИзменении(Неопределено);
	
	Элементы.Номенклатура.Доступность = НЕ ЗначениеЗаполнено(Номенклатура);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("СписокПриОткрытии") Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ЕстьОтборПоОС", 1);
		Список.Параметры.УстановитьЗначениеПараметра("СписокОС"		, Параметры.СписокПриОткрытии.ВыгрузитьЗначения());
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("ЕстьОтборПоОС", 0);
		Список.Параметры.УстановитьЗначениеПараметра("СписокОС"		, Новый Массив);
	КонецЕсли;
	
	Если Параметры.Свойство("ДатаОстатков") Тогда
		мДата = Параметры.ДатаОстатков;
	Иначе
		мДата = ТекущаяДата();
	КонецЕсли;	
	Список.Параметры.УстановитьЗначениеПараметра("Дата", мДата);
	
	// добавочные параметры, для подбора из документов ОС, для вывода остаточной стоимости
	мДатаНовогоУчетаСчетовОС = Константы.ДатаИзмененияУчетаПоСчетамОС.Получить();
	
	Если Параметры.Свойство("ЦФО")
			И мДата < мДатаНовогоУчетаСчетовОС Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ЕстьОтборПоЦФО"	, 1);
		Список.Параметры.УстановитьЗначениеПараметра("ЦФО"				, Параметры.ЦФО);
		//Элементы.СписокОстаточнаяСтоимость.Видимость = Истина;
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("ЕстьОтборПоЦФО"	, 0);
		Список.Параметры.УстановитьЗначениеПараметра("ЦФО"				, Неопределено);
		//Элементы.СписокОстаточнаяСтоимость.Видимость = Ложь;
	КонецЕсли;	
	Если Параметры.Свойство("Склад") Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ЕстьОтборПоСкладу", 1);
		Список.Параметры.УстановитьЗначениеПараметра("Склад"			, Параметры.Склад);
		//Элементы.СписокОстаточнаяСтоимость.Видимость = Истина;
	Иначе
		Список.Параметры.УстановитьЗначениеПараметра("ЕстьОтборПоСкладу", 0);
		Список.Параметры.УстановитьЗначениеПараметра("Склад"			, Справочники.СтруктурныеЕдиницы.ПустаяСсылка());
		//Элементы.СписокОстаточнаяСтоимость.Видимость = Ложь;
	КонецЕсли;	
		
	Параметры.Свойство("Номенклатура", Номенклатура);
	
	//+++АК SaMi 2018.10.10 ИП-00019767^01 
	Параметры.Свойство("НаВиртуальныйСклад", НаВиртуальныйСклад);
	Элементы.Дата.Видимость = НаВиртуальныйСклад;
	//---АК SaMi  2018.10.10 
	
КонецПроцедуры


&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	ИзменитьФильтр("Номенклатура", ВидСравненияКомпоновкиДанных.Равно, Номенклатура);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнвентарныйНомерПриИзменении(Элемент)
	
	ИзменитьФильтр("ИнвентарныйНомер", ВидСравненияКомпоновкиДанных.Содержит, ИнвентарныйНомер);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаводскойНомерПриИзменении(Элемент)
	
	ИзменитьФильтр("ЗаводскойНомер", ВидСравненияКомпоновкиДанных.Содержит, ЗаводскойНомер);
	
КонецПроцедуры

//+++АК SaMi 2018.10.10 ИП-00019767^01 
&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если НаВиртуальныйСклад Тогда
		СтандартнаяОбработка = Ложь;
		
		Результат = Новый Структура("ОсновноеСредство, Местоположение", Элемент.ТекущиеДанные.Ссылка, Элемент.ТекущиеДанные.Местоположение);
		ОповеститьОВыборе(Результат);
	КонецЕсли; 
	
КонецПроцедуры
//---АК SaMi  2018.10.10 
