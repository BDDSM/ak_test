
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ПроверитьУникальностьИнвНомера();
	//+++AK GREK 10.02.2018 ИП-00017753      
	Отказ = ПроверитьУникальностьЗаводскогоНомера();
	//---AK
КонецПроцедуры

&НаСервере
Функция ПроверитьУникальностьЗаводскогоНомера()
	Рез = Ложь;
	Если ЗначениеЗаполнено(Объект.ЗаводскойНомер) И Объект.Номенклатура.Наименование = "ККМ с ФП" Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		Запрос.УстановитьПараметр("ЗаводскойНомер", Объект.ЗаводскойНомер);
		Запрос.УстановитьПараметр("Номенклатура", Объект.Номенклатура);
		Запрос.Текст = "ВЫБРАТЬ
		               |	ОсновныеСредства.Ссылка
		               |ИЗ
		               |	Справочник.ОсновныеСредства КАК ОсновныеСредства
		               |ГДЕ
		               |	ОсновныеСредства.Ссылка <> &Ссылка
		               |	И ОсновныеСредства.ЗаводскойНомер = &ЗаводскойНомер
		               |	И ОсновныеСредства.Номенклатура = &Номенклатура";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Ошибка! Не уникальный заводской номер кассы (" + Объект.ЗаводскойНомер + "). Он уже закреплен за основным средством " + Выборка.Ссылка + " (" + Выборка.Ссылка.Код + ")");
			Рез = Истина;
		КонецЕсли;
	КонецЕсли;
	Возврат Рез;
КонецФункции

&НаСервере
Процедура ПроверитьУникальностьИнвНомера()
	Если СокрЛП(Объект.ИнвентарныйНомер) <> "" Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		Запрос.УстановитьПараметр("ИнвентарныйНомер", Объект.ИнвентарныйНомер);
		Запрос.Текст = "ВЫБРАТЬ
		               |	ОсновныеСредства.Ссылка
		               |ИЗ
		               |	Справочник.ОсновныеСредства КАК ОсновныеСредства
		               |ГДЕ
		               |	ОсновныеСредства.Ссылка <> &Ссылка
		               |	И ОсновныеСредства.ИнвентарныйНомер = &ИнвентарныйНомер";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Ошибка! Не уникальный инвентарный номер (" + Объект.ИнвентарныйНомер + "). Он уже закреплен за основным средством " + Выборка.Ссылка + " (" + Выборка.Ссылка.Код + ")");
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьАдресТаблицыПроводок()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ФинансовыйОстатки.Субконто1 КАК СубконтоКт1,
	               |	МАКСИМУМ(ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконто.ОсновныеСредства)) КАК ВидСубконтоКт1,
	               |	СУММА(ФинансовыйОстатки.СуммаОстаток * -1) КАК Сумма,
	               |	ФинансовыйОстатки.Счет КАК СчетДт
	               |ИЗ
	               |	РегистрБухгалтерии.Финансовый.Остатки(&ДатаОстатков, Счет = ЗНАЧЕНИЕ(ПланСчетов.Финансовый.НераспределеннаяРозничнаяВыручка), , Субконто1 = &ОснСредство) КАК ФинансовыйОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ФинансовыйОстатки.Субконто1,
	               |	ФинансовыйОстатки.Счет";
				   
	Запрос.УстановитьПараметр("ДатаОстатков", Новый Граница(Объект.ДатаПереходаЧПМВККМ - 1, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ОснСредство", Объект.Ссылка);
	
	Возврат ПоместитьВоВременноеХранилище(Запрос.Выполнить().Выгрузить());
	
КонецФункции	

&НаКлиенте
Процедура ОбнулитьРВ1(Команда)
	
	ОткрытьФорму("Документ.Операция.Форма.ФормаДокумента", Новый Структура("Основание", Новый Структура("АдресТаблицаЗаполненияПроводок", ПолучитьАдресТаблицыПроводок())));
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьДанныеВводВЭксплуатацию();
	//+++ AK suvv 2018.11.12 ИП-00020349
	ОбновитьДанныеПринятиеКУчету();
	//--- AK suvv
	ОтобразитьНастройкиПоВиду();
	ОбновитьСчетУчета();
	
КонецПроцедуры

Процедура ОбновитьДанныеВводВЭксплуатацию()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПринятыеКУчетуОССрезПоследних.Регистратор,
		|	ПринятыеКУчетуОССрезПоследних.ДатаВводаВЭксплуатацию,
		|	ВЫБОР
		|		КОГДА ПринятыеКУчетуОССрезПоследних.СрокАмортизации > 0
		|			ТОГДА ПринятыеКУчетуОССрезПоследних.СрокАмортизации
		|		ИНАЧЕ ""Срок не задан""
		|	КОНЕЦ КАК СрокПолезногоИспользования
		|ИЗ
		|	РегистрСведений.ПринятыеКУчетуОС.СрезПоследних(, ОсновноеСредство = &ОсновноеСредство) КАК ПринятыеКУчетуОССрезПоследних";

	Запрос.УстановитьПараметр("ОсновноеСредство", Объект.Ссылка);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	ДокументВводаВЭксплуатацию = "Не введен в эксплуатацию";
	СрокПолезногоИспользования = "Срок не задан";
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДокументВводаВЭксплуатацию = ВыборкаДетальныеЗаписи.Регистратор;
		Если  ВыборкаДетальныеЗаписи.СрокПолезногоИспользования <> "Срок не задан" Тогда
			СрокПолезногоИспользования = Строка(ВыборкаДетальныеЗаписи.СрокПолезногоИспользования) + " месяцев";
		КонецЕсли;	
	КонецЦикла;

КонецПроцедуры	

//+++ AK suvv 2018.11.12 ИП-00020349
&НаСервере
Процедура ОбновитьДанныеПринятиеКУчету()
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПринятыеКУчетуОССрезПоследних.Регистратор,
	|	ПринятыеКУчетуОССрезПоследних.ДатаВводаВЭксплуатацию КАК ДатаПринятияКУчету
	|ИЗ
	|	РегистрСведений.ПринятыеКУчетуОС.СрезПоследних(
	|			,
	|			ОсновноеСредство = &ОсновноеСредство
	|				И Регистратор ССЫЛКА Документ.ВводВЭксплуатацию) КАК ПринятыеКУчетуОССрезПоследних";
	
	Запрос.УстановитьПараметр("ОсновноеСредство", Объект.Ссылка);
	
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество() = 0 Тогда 
		
		Запрос.Текст = "ВЫБРАТЬ
		|	ОприходованиеОСНоменклатура.Ссылка КАК Регистратор,
		|	ОприходованиеОСНоменклатура.АК_ДатаВводаВЭксплуатацию КАК ДатаПринятияКУчету
		|ИЗ
		|	Документ.ОприходованиеОС.Номенклатура КАК ОприходованиеОСНоменклатура
		|ГДЕ
		|	ОприходованиеОСНоменклатура.Ссылка.Проведен
		|	И ОприходованиеОСНоменклатура.ОсновноеСредство = &ОсновноеСредство
		|	И ОприходованиеОСНоменклатура.Ссылка.Дата < ДАТАВРЕМЯ(2017, 1, 1)";
		
		ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
		
	КонецЕсли;
	
	ДокументПринятияКУчету = "Не принят к учету";
	ДатаПринятияКУчету     = "Дата не задана";
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДокументПринятияКУчету = ВыборкаДетальныеЗаписи.Регистратор;
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.ДатаПринятияКУчету) Тогда
			ДатаПринятияКУчету = ВыборкаДетальныеЗаписи.ДатаПринятияКУчету;
		КонецЕсли;			
	КонецЦикла;
		
КонецПроцедуры //--- AK suvv

&НаКлиенте
Процедура ЗаполнитьПоСтатистике(Команда)
	
	АК_ОсновныеСредства.ЗаполнитьРеквизитыОСПоСтатистике(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОсновногоСредстваПриИзменении(Элемент)
	
	ОтобразитьНастройкиПоВиду();
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьНастройкиПоВиду()
	
	Если Объект.ВидОсновногоСредства = Перечисления.ВидыОсновныхСредств.НеметериальныйАктив	Тогда
		ЭтаФорма.Элементы.ГруппаВводВЭксплуатацию.Видимость = Ложь;
		ЭтаФорма.Элементы.ГруппаНМА.Видимость = Истина;
	Иначе 	
		ЭтаФорма.Элементы.ГруппаВводВЭксплуатацию.Видимость = Истина;
		ЭтаФорма.Элементы.ГруппаНМА.Видимость = Ложь;
	КонецЕсли;	
		
	
КонецПроцедуры	

&НаКлиенте
Процедура ОткрытьДокументыПоОС(Команда)
	ПараметрыФормы = Новый Структура("ОсновноеСредство",Объект.Ссылка);
	ОткрытьФорму("Справочник.ОсновныеСредства.Форма.ДокументыПоОС", ПараметрыФормы);
КонецПроцедуры


&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	ОбновитьСчетУчета();
	
КонецПроцедуры

Процедура ОбновитьСчетУчета()
	
	СчетУчетаПоНоменклатуре = АК_ОсновныеСредства.ПолучитьОсновнойСчетУчета(Объект.Номенклатура);	
	
КонецПроцедуры	
