
Процедура ПриОткрытии()
	
	ЭлементыФормы.НадписьПользователь.Заголовок = "Пользователь: " + СокрЛП(Пользователь);
	
	ЗаполнитьГруппыПользователя();
	
КонецПроцедуры

Процедура ЗаполнитьГруппыПользователя()

	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ТекПользователь", Пользователь);
	Запрос.УстановитьПараметр("ВсеПользователи", Справочники.ГруппыПользователей.ВсеПользователи);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ГруппыПользователей.Ссылка КАК Группа,
	|	ВЫБОР
	|		КОГДА ТЧПользователиГруппы.Пользователь ЕСТЬ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Флаг,
	|	ИСТИНА КАК ВсеСтроки
	|ИЗ
	|	Справочник.ГруппыПользователей КАК ГруппыПользователей
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ГруппыПользователей.ПользователиГруппы КАК ТЧПользователиГруппы
	|		ПО (ТЧПользователиГруппы.Ссылка = ГруппыПользователей.Ссылка)
	|			И (ТЧПользователиГруппы.Пользователь = &ТекПользователь)
	|ГДЕ
	|	ГруппыПользователей.Ссылка <> &ВсеПользователи
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГруппыПользователей.Наименование ИЕРАРХИЯ";
	
	ДеревоГрупп = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
КонецПроцедуры

Функция СохранитьЗначения()

	НачатьТранзакцию();
	
	Для каждого СтрокаТЗ Из ДеревоГрупп.Строки.НайтиСтроки(Новый Структура("ВсеСтроки", Истина), Истина) Цикл
		
		ВходитВГруппу = СтрокаТЗ.Группа.ПользователиГруппы.Найти(Пользователь, "Пользователь") <> Неопределено;
		
		Если СтрокаТЗ.Флаг = 1 Тогда
			Если ВходитВГруппу Тогда
				Продолжить;
			КонецЕсли;
		Иначе
			Если НЕ ВходитВГруппу Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли; 
		
		Объект = СтрокаТЗ.Группа.ПолучитьОбъект();
		
		Если СтрокаТЗ.Флаг = 1 Тогда
			НоваяСтрока = Объект.ПользователиГруппы.Добавить();
			НоваяСтрока.Пользователь = Пользователь;
		Иначе
			Объект.ПользователиГруппы.Удалить(Объект.ПользователиГруппы.Найти(Пользователь, "Пользователь"));
		КонецЕсли;
		
		Попытка
			Объект.Заблокировать();
			Объект.Записать();
		Исключение
			ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, "Изменения не сохранены!");
			ОтменитьТранзакцию();
			Возврат Ложь;
		КонецПопытки;
	
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	Модифицированность = Ложь;
	
	Возврат Истина;
	
КонецФункции

Процедура ОсновныеДействияФормыОК(Кнопка)
	
	Если СохранитьЗначения() Тогда
		ЭтаФорма.Закрыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		ОтветНаВопрос = Вопрос("Данные были изменены. Сохранить?", РежимДиалогаВопрос.ДаНетОтмена);
		Если ОтветНаВопрос = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		ИначеЕсли ОтветНаВопрос = КодВозвратаДиалога.Да Тогда
			Отказ = НЕ СохранитьЗначения();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура КонтекстноеМенюПраваДоступа(Кнопка)
	
	ТекущиеДанные = ЭлементыФормы.ДеревоГрупп.ТекущиеДанные;
	Если Не ТекущиеДанные = Неопределено Тогда
		НастройкаПравДоступа.РедактироватьПраваДоступа(ТекущиеДанные.Группа);
	КонецЕсли;
	
КонецПроцедуры
