
Перем РазрешитьЗаписьБезПроверки Экспорт;
Перем НеКонтролироватьУсловия;


Процедура ПроверитьСчет44ДляДр(Период, СчетУчета, СтатьяДР, ТабКешСтатей, Отказ)
	
	СтрокиВСтатьях = ТабКешСтатей.НайтиСтроки(Новый Структура("Ссылка", СтатьяДР));
	
	Если СтрокиВСтатьях.Количество() = 0 Тогда
	
		Возврат;
		
	Иначе
		
		СтрокаНайдена = Неопределено;
		Для Каждого СтрокаВСтатье Из СтрокиВСтатьях Цикл
			Если СтрокаВСтатье.СчетУчета = СчетУчета Тогда
				СтрокаНайдена = СтрокаВСтатье;
				Прервать;
			КонецЕсли;	
		КонецЦикла;	
		
		Если СтрокаНайдена = Неопределено Тогда
			
			Если НеКонтролироватьУсловия = Ложь Тогда
				Отказ = Истина;
			КонецЕсли;	
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Для статьи ДР " + СтатьяДР + " запрещено использовать счет " + СчетУчета;
			Сообщение.Сообщить();
			
		ИначеЕсли НЕ СтрокаНайдена.ОсновнойСчет Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Для статьи "+СтатьяДР+" указан "+СчетУчета+" счет не основной!";
			Сообщение.Сообщить();
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи)
	Если РазрешитьЗаписьБезПроверки = Ложь Тогда
		НастройкаПравДоступа.ПередЗаписьюРегистраБухгалтерииПроверкаДоступностиПериода(ЭтотОбъект, Отказ, Неопределено);
	КонецЕсли;
	
	Если ОбменДанными.Загрузка = Истина Тогда
		Возврат;
	КонецЕсли;	
	
	Если НЕ ЭтотОбъект.Модифицированность() Тогда
		Возврат;
	КонецЕсли;
	
	//+++АК Susk (Суслин К.В.) 2018.04.17 оптимизация
	//ОбменДанными.Загрузка ВПРЕДЬ НЕ ИСПОЛЬЗУЕМ!!!
	Если ДополнительныеСвойства.Свойство("НеПроверятьНаборПередЗаписью") Тогда
		Возврат;
	КонецЕсли;
		
	ПодрТилсиОбщий 		= Справочники.СтруктурныеЕдиницы.ПолучитьСсылку(Новый УникальныйИдентификатор("788cf095-310f-11e8-9c51-005056a714c6")); // Тилси(Общий)
	ПодрВсе 			= Справочники.СтруктурныеЕдиницы.ПолучитьСсылку(Новый УникальныйИдентификатор("2d2fd6c1-ce89-11e2-a30a-005056a00106")); // Все
	ОрганизацияТилси 	= Справочники.Организации.ПолучитьСсылку(Новый УникальныйИдентификатор("aec7bdbc-0fdd-11e8-8b52-005056a714c6")); // Тилси
	
	СписокЗапрещенныхЦФО = ОбщегоНазначенияПовтИсп.ПолучитьСписокЗапрещенныхВПроводкахЦФО(); //ИП-00018816
	//---АК Susk (Суслин К.В.) 
	
	Счет84 		= ПланыСчетов.Финансовый.ПрибыльТекущегоПериода;
	Счет021 	= ПланыСчетов.Финансовый.ККМ;
	Счет08 		= ПланыСчетов.Финансовый.КапитальныеВложения;
	Счет60_7 	= ПланыСчетов.Финансовый.РасчетыСПоставщикамиОборудования;
	Счет44 		= ПланыСчетов.Финансовый.ЗатратыДляРаспределения;
	
	ВидСубконтоЦФО 			= ПланыВидовХарактеристик.ВидыСубконто.ЦФО;	
	ВидСубконтоТТ 			= ПланыВидовХарактеристик.ВидыСубконто.ТорговыеТочки;
	НеКонтролировать60_7 	= ОбщегоНазначенияПовтИсп.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.ПроведениеДокументовПо60_7, Ложь);
	
	мДатаНовогоУчетаСчетовОС = ОбщегоНазначенияПовтИсп.ЗначениеКонстанты("ДатаИзмененияУчетаПоСчетамОС");
	
	НаборСчетов = Новый Соответствие;
	Для Каждого ЗаписьРегистра Из ЭтотОбъект Цикл
		НаборСчетов[ЗаписьРегистра.СчетДт] = ЗаписьРегистра.СчетДт;
		НаборСчетов[ЗаписьРегистра.СчетКт] = ЗаписьРегистра.СчетКт;	
	КонецЦикла;	
	
	Соответствия = СоответствияДляСчетов(НаборСчетов);
	
	//+++АК CISA 2018.10.17 ИП-00020148
	ЕстьДатаДокумента = ЭтотОбъект.ДополнительныеСвойства.Свойство("ДатаДокумента");
	Если ЕстьДатаДокумента Тогда
		ДатаДокумента = ЭтотОбъект.ДополнительныеСвойства.ДатаДокумента;
	Иначе
		ДатаДокумента = Неопределено;
	КонецЕсли;
	//---АК CISA
	
	СЗ_ттТилси	 = ОбщегоНазначенияПовтИсп.ПодразделенияТилси(ДатаДокумента);	
		
	Для Каждого ЗаписьРегистра Из ЭтотОбъект Цикл
		
		Если Соответствия.СоответствиеСчетов[ЗаписьРегистра.СчетДт] = Счет44 И ЗаписьРегистра.Период >= '20150701' Тогда
							
			ПроверитьСчет44ДляДр(ЗаписьРегистра.Период, ЗаписьРегистра.СчетДт, ЗаписьРегистра.СубконтоДт.СтатьиДоходовРасходов, Соответствия.СоответствиеСтатей, Отказ);
			
		КонецЕсли;		
		
		Если Соответствия.СоответствиеСчетов[ЗаписьРегистра.СчетКт] = Счет44 И ЗаписьРегистра.Период >= '20150701' Тогда
							
			ПроверитьСчет44ДляДр(ЗаписьРегистра.Период, ЗаписьРегистра.СчетКт, ЗаписьРегистра.СубконтоКт.СтатьиДоходовРасходов, Соответствия.СоответствиеСтатей, Отказ);
			
		КонецЕсли;	
		
		Если ЗаписьРегистра.Период < Дата(2014, 2, 1)
				ИЛИ ЗаписьРегистра.СчетДт = Счет84
				ИЛИ ЗаписьРегистра.СчетКт = Счет84
				ИЛИ ЗаписьРегистра.СчетДт = Счет021
				ИЛИ ЗаписьРегистра.СчетКт = Счет021 Тогда

			Продолжить;
		КонецЕсли;
		
		Если (ЗаписьРегистра.СчетДт = Счет08
				ИЛИ ЗаписьРегистра.СчетКт = Счет08) Тогда
			Продолжить;
		КонецЕсли;		

		Для Каждого ТекСубконто Из ЗаписьРегистра.СчетДт.ВидыСубконто Цикл
			Если ТекСубконто.ВидСубконто = ВидСубконтоЦФО Тогда
				
				//+++АК Susk (Суслин К.В.) 2018.05.29 ИП-00018816
				ТекЦФО = ЗаписьРегистра.СубконтоДт.ЦФО ;
				//---АК Susk (Суслин К.В.) 
				
				Если НЕ ЗначениеЗаполнено(ТекЦФО) Тогда
					ОбщегоНазначения.СообщитьОбОшибке("Счет Дт: обнаружено пустое значение ЦФО. Запись проводки невозможна.", Отказ);
				//+++АК Susk (Суслин К.В.) 2018.05.29 ИП-00018816
				ИначеЕсли ЦФОЗапрещенКВыборуВПроводках(ТекЦФО, ЗаписьРегистра.Период, СписокЗапрещенныхЦФО) Тогда
					ОбщегоНазначения.СообщитьОбОшибке("Счет Дт: ЦФО """ + ТекЦФО + """ запрещен к выбору в проводках!", Отказ);
				//---АК Susk (Суслин К.В.) 				 
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;		

		Для Каждого ТекСубконто Из ЗаписьРегистра.СчетКт.ВидыСубконто Цикл
			Если ТекСубконто.ВидСубконто = ВидСубконтоЦФО Тогда				
				
				//+++АК Susk (Суслин К.В.) 2018.05.29 ИП-00018816
				ТекЦФО = ЗаписьРегистра.СубконтоКт.ЦФО ;
				//---АК Susk (Суслин К.В.) 
				
				Если НЕ ЗначениеЗаполнено(ЗаписьРегистра.СубконтоКт.ЦФО) Тогда
					ОбщегоНазначения.СообщитьОбОшибке("Счет Кт: обнаружено пустое значение ЦФО. Запись проводки невозможна.", Отказ);
				//+++АК Susk (Суслин К.В.) 2018.05.29 ИП-00018816
				ИначеЕсли ЦФОЗапрещенКВыборуВПроводках(ТекЦФО, ЗаписьРегистра.Период, СписокЗапрещенныхЦФО) Тогда
					ОбщегоНазначения.СообщитьОбОшибке("Счет Кт: ЦФО """ + ТекЦФО + """ запрещен к выбору в проводках!", Отказ);
				//---АК Susk (Суслин К.В.) 
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если (ЗаписьРегистра.СчетДт = Счет60_7
				ИЛИ ЗаписьРегистра.СчетКт = Счет60_7) И ЗаписьРегистра.Период>Дата(2017,6,21) И Не НеКонтролировать60_7 Тогда			
			ОбщегоНазначения.СообщитьОбОшибке("Счет 60.7 запрещено использовать в проводках", Отказ);
		КонецЕсли;
		
		//+++AK susk
		Если ЗаписьРегистра.СчетДт = ПланыСчетов.Финансовый.ЗатратыОбщиеДляРаспределения И НЕ РольДоступна("ПолныеПрава") Тогда		
			
			ТекТТ = ЗаписьРегистра.СубконтоДт[ВидСубконтоТТ];	
			
			Если ТекТТ <> Неопределено И ЗначениеЗаполнено(ТекТТ) И ТипЗнч(ТекТТ) = Тип("СправочникСсылка.СтруктурныеЕдиницы") И ТекТТ.ТипСтруктурнойЕдиницы = Перечисления.ТипыСтруктурныхЕдиниц.Розница Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Для счета 44.2 запрещено использовать структурные единицы с типом ""Розница""", Отказ);
			КонецЕсли;
			
		КонецЕсли;

		//+++АК Susk (Суслин К.В.) 2018.05.22 б/н закрытие
		//в случае организации "Тилси", 44-го счета и Субконто ТТ = "Все", меняю Субконто ТТ на "Тилси(Общий)"
		Если ЗаписьРегистра.Организация = ОрганизацияТилси Тогда
			Если (ОбщегоНазначенияПовтИсп.СчетПринадлежитЭлементу(ЗаписьРегистра.СчетДт, ПланыСчетов.Финансовый.ЗатратыДляРаспределения) И ЗаписьРегистра.СубконтоДт.ТорговыеТочки = ПодрВсе) Тогда
				ЗаписьРегистра.СубконтоДт.ТорговыеТочки = ПодрТилсиОбщий;
			КонецЕсли;
			Если (ОбщегоНазначенияПовтИсп.СчетПринадлежитЭлементу(ЗаписьРегистра.СчетКт, ПланыСчетов.Финансовый.ЗатратыДляРаспределения) И ЗаписьРегистра.СубконтоКт.ТорговыеТочки = ПодрВсе) Тогда
				ЗаписьРегистра.СубконтоКт.ТорговыеТочки = ПодрТилсиОбщий;
			КонецЕсли;
		//---АК Susk (Суслин К.В.) 

			Если ЗаписьРегистра.Период >= '20180401' и ЗначениеЗаполнено(ЗаписьРегистра.СчетДт) И
				ОбщегоНазначенияПовтИсп.СчетПринадлежитЭлементу(ЗаписьРегистра.СчетДт, ПланыСчетов.Финансовый.ЗатратыДляРаспределения)
				И НЕ ОбщегоНазначенияПовтИсп.СвойстваСчета(ЗаписьРегистра.СчетДт).Забалансовый
				 Тогда		
				ТекТТ = ЗаписьРегистра.СубконтоДт[ВидСубконтоТТ];	
				Если ТекТТ <> Неопределено И ТипЗнч(ТекТТ) = Тип("СправочникСсылка.СтруктурныеЕдиницы") И 
					СЗ_ттТилси[ТекТТ] = Неопределено Тогда				
					ТекстДебет = "Дт " + СокрЛП(ЗаписьРегистра.СчетДт);
					ВидыСубконтоДт = ЗаписьРегистра.СчетДт.ВидыСубконто;
					Для й = 1 по 3 Цикл
						ЗначСубконто = ЗаписьРегистра.СубконтоДт[ВидыСубконтоДт[й - 1].ВидСубконто];
						ТекстДебет = ТекстДебет + " Субконто " + й + " = " + ?(ЗначениеЗаполнено(ЗначСубконто), СокрЛП(ЗначСубконто), "");
					КонецЦикла;
					
					ТекстКредит = "Кт " + СокрЛП(ЗаписьРегистра.СчетКт);
					ВидыСубконтоКт = ЗаписьРегистра.СчетКт.ВидыСубконто;
					Для й = 1 по 3 Цикл
						ЗначСубконто = ЗаписьРегистра.СубконтоКт[ВидыСубконтоКт[й - 1].ВидСубконто];
						ТекстКредит = ТекстКредит + " Субконто " + й + " = " + ?(ЗначениеЗаполнено(ЗначСубконто), СокрЛП(ЗначСубконто), "");
					КонецЦикла;
					
					ОбщегоНазначения.СообщитьОбОшибке("Субконто """ + ТекТТ + """ в проводке " + ТекстДебет + " " + ТекстКредит + 
						"| не соответствует организации ""Тилси"" в проводке. Данная структурная единица закреплена за другой организацией!", Отказ);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		//---АК
		
	КонецЦикла;
		
КонецПроцедуры

Функция СоответствияДляСчетов(НаборСчетов)
	Результат = Новый Структура("СоответствиеСчетов, СоответствиеСтатей", 
		Новый Соответствие, 
		ОбщегоНазначенияПовтИсп.НастройкиСтатей());
	ЗапросКеш = Новый Запрос();
	ЗапросКеш.Текст = "ВЫБРАТЬ
	                  |	Финансовый.Ссылка,
	                  |	Финансовый.Родитель
	                  |ИЗ
	                  |	ПланСчетов.Финансовый КАК Финансовый
	                  |ГДЕ
	                  |	Финансовый.Ссылка В(&Счета)";
	
	МассивСчетов = Новый Массив;
	Для Каждого Счет Из НаборСчетов Цикл 
		МассивСчетов.Добавить(Счет.Ключ);
	КонецЦикла;
	ЗапросКеш.УстановитьПараметр("Счета", МассивСчетов);	
	РезультатЗапроса = ЗапросКеш.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда 
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл 
			Результат.СоответствиеСчетов[Выборка.Ссылка] = Выборка.Родитель;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

//+++АК Susk (Суслин К.В.) 2018.05.29 ИП-00018816
Функция ЦФОЗапрещенКВыборуВПроводках(ЦФО, Период, СписокЗапрещенныхЦФО)
	
	Если Период < Дата("20180501") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат СписокЗапрещенныхЦФО.Найти(ЦФО) <> Неопределено;		
	
КонецФункции 

РазрешитьЗаписьБезПроверки = Ложь;
НеКонтролироватьУсловия = УправлениеДопПравамиПользователей.ПолучитьПравоПользователяУпр(ПланыВидовХарактеристик.ПраваПользователей.НеКонтроллироватьУсловияВЗаявкеНаРасходДС, Ложь);
